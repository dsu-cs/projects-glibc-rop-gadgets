


Gadgets
=======


0x0006dd65: aaa; adc dword ptr [eax], eax; add byte ptr [ebx + 0x565304ec], al; push ebp; call dword ptr [edi + 0x1c]; 
0x0007bf76: aaa; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00145dd6: aaa; add byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x00112884: aaa; add esp, 0x74; pop ebx; pop esi; ret; 
0x00056d18: aaa; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x00077509: aaa; call dword ptr [eax + 0xc]; 
0x000b6304: aaa; call ebx; 
0x000b626c: aaa; call esi; 
0x0014a095: aaa; cmp al, byte ptr [eax]; add byte ptr [ebp - 0x7cc08b40], al; in al, dx; add al, 0x89; ret; 
0x000fc21e: aaa; dec dword ptr [ebx - 0x7872dbc4]; dec esp; sahf; stc; call dword ptr [eax - 0x73]; 
0x000fc2a6: aaa; dec dword ptr [ebx - 0x7c72dbe4]; dec esp; sahf; stc; call dword ptr [eax - 0x73]; 
0x00124c25: aaa; fcomi st(5); dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x000dc985: aaa; hlt; jmp dword ptr [ebp - 0x75]; 
0x00126eb6: aaa; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; mov edx, 0x40; call dword ptr gs:[0x10]; 
0x0013f0d2: aaa; mov eax, 6; call dword ptr gs:[0x10]; 
0x00116330: aaa; mov eax, dword ptr [esp + 0x84]; lea ecx, [eax + 0x5402]; mov eax, edi; call dword ptr gs:[0x10]; 
0x00085358: aaa; mov eax, edi; call dword ptr gs:[0x10]; 
0x001280ca: aaa; pop ds; adc byte ptr [eax], al; mov eax, dword ptr [eax - 0xc8]; mov eax, dword ptr [eax + 0x24]; ret; 
0x00140c7f: aaa; pop ebp; stc; call dword ptr [eax - 0x18]; 
0x000834e0: aaa; pop ebx; pop esi; pop edi; ret; 
0x0013f9d4: aaa; pop esi; pop edi; ret; 
0x00170463: aaa; push dword ptr [esi + 4]; push ebp; mov eax, dword ptr [esp + 0x10]; call eax; 
0x0016f412: aaa; push dword ptr [esi]; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0012e608: aaa; push edi; stc; call dword ptr [eax - 0x18]; 
0x0017dccb: aaa; ret; 
0x00164748: aaa; sub esp, 0xc; mov eax, dword ptr [ebp + 0xc]; push edi; call dword ptr [eax + 0x10]; 
0x00075bb8: aaa; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x0011d748: aaa; sub esp, 4; push edi; push 0; push ebx; call esi; 
0x0014aa95: aaa; xor byte ptr [eax], al; add byte ptr [ebp - 0x7cbd8b40], al; in al, dx; or al, 0x89; ret; 
0x00082bc9: aaa; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x000eaf09: aad 0; add byte ptr [eax], al; add byte ptr [ebx - 0x77], dl; ret; 
0x000df3dd: aad 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00172954: aad 0x30; stc; call dword ptr [eax - 0x18]; 
0x00047e01: aad 0x30; stc; call dword ptr [esi + 0x6a]; 
0x0007ae50: aad 0x5f; cli; jmp dword ptr [esi - 0x70]; 
0x0014cdec: aad 0x5f; stc; call dword ptr [eax - 0x73]; 
0x00085964: aad 0x72; cmp dword ptr [ebx - 0x7cf7dbac], ecx; ret 0x8b04; 
0x001161c8: aad 0x81; leave; add byte ptr [eax], al; add byte ptr [eax - 0x3fcef777], al; pop ebx; ret; 
0x0012cb0a: aad 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0004c15e: aad 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000a1c32: aad 0x83; ret 0x3801; 
0x000b89dd: aad 0x83; ret; 
0x000ca671: aad 0x89; ljmp 0x891f:0xeac1cd89; sal byte ptr [ecx], 1; shr byte ptr [ecx], cl; ret; 
0x00024faf: aad 0x89; ret 0xc483; 
0x0008de62: aad 0x89; ret 0xe083; 
0x001996f5: aad 0x89; ret 0xe8c1; 
0x0019d4a0: aad 0x89; ret; 
0x000c8d17: aad 0xac; push es; add byte ptr [ebx - 0x364b73], cl; dec dword ptr [ebp - 0x667377f]; call dword ptr [eax - 0x73]; 
0x0017a1a8: aad 0xe8; inc edx; cwde; sti; jmp dword ptr [esi - 0x70]; 
0x0003581f: aad 0xe9; ret 0xfffc; 
0x000be110: aad 0xf8; call dword ptr [ebx - 1]; 
0x00064570: aad 0xff; dec dword ptr [ebx - 0x4f37b]; jmp dword ptr [ebp - 0x75]; 
0x0006425a: aad 0xff; dec dword ptr [ebx - 0x52f63]; call ecx; 
0x0005fed5: aad 0xff; dec dword ptr [ebx - 0x5ef73]; dec dword ptr [ecx - 0x59f6b]; call dword ptr [edx - 0x75]; 
0x0003d717: aad 1; ret 0xf089; 
0x0010bb92: aam 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0016e590: aam 0; add byte ptr [eax], al; mov eax, ebx; pop ebx; pop esi; ret; 
0x000c9bc8: aam 0; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x0002652f: aam 0x10; add byte ptr [ebx - 0x72c3db8c], cl; xchg byte ptr [eax], ah; push -7; call dword ptr [eax - 0x73]; 
0x000a020c: aam 0x29; ret 0x1a8b; 
0x000a02e5: aam 0x29; ret 0xb48d; 
0x000a0229: aam 0x31; fisttp dword ptr [ecx - 0x7cf4143a]; ret; 
0x00078e9f: aam 0x52; push ebx; push esi; call eax; 
0x0017aedd: aam 0x66; movq qword ptr [edx - 0x1c], mm0; movq qword ptr [edx - 0xc], xmm0; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x000fa668: aam 0x6a; add eax, 0x9be4868d; stc; call dword ptr [eax - 0x73]; 
0x000667f9: aam 0x78; stc; call dword ptr [eax - 0x18]; 
0x0002c5d9: aam 0x80; sti; add cl, byte ptr [edi]; xchg esi, eax; ret; 
0x0009a5fb: aam 0x83; in al, dx; or al, 0x50; call edx; 
0x0009fdf0: aam 0x83; ret 0xf01; 
0x000f6c4b: aam 0x83; ret; 
0x000d9475: aam 0x85; ror byte ptr [edi], 0x84; out dx, eax; add dword ptr [eax], eax; add byte ptr [ebx - 0x13345], cl; jmp dword ptr [ebp - 0x75]; 
0x000537f3: aam 0x89; ret 0x458b; 
0x0007b20b: aam 0x89; ret 0xf889; 
0x0008fc61: aam 0x89; ret; 
0x00140238: aam 0x8b; add byte ptr [ecx], bh; ret 0x460f; 
0x0004ac82: aam 0x8b; ja 0x4acc2; mov edi, dword ptr [edi + 0x38]; ret; 
0x000b6f50: aam 0x96; stc; call dword ptr [eax - 0x73]; 
0x000865cb: aam 0xa; add byte ptr [esi - 0x70], ah; endbr32; xor eax, eax; ret; 
0x00147e44: aam 0xaa; stc; call dword ptr [eax - 0x73]; 
0x00168b18: aam 0xae; cld; jmp dword ptr [esi - 0x70]; 
0x0016aafe: aam 0xb3; stc; call dword ptr [eax - 0x73]; 
0x00050fe8: aam 0xe9; std; dec dword ptr [ebx - 0x365343]; dec dword ptr [ebp - 0x6894f79]; call dword ptr [eax - 0x73]; 
0x0014e5f4: aam 0xf3; jmp dword ptr [ebp - 0x75]; 
0x001252f6: aam 0xf5; dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x00094808: aam 0xf8; or byte ptr [eax], al; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000c9feb: aam 0xf; lahf; ret; 
0x000b59e8: aam 1; add byte ptr [eax], al; ret; 
0x0018cbbd: aam 9; add byte ptr [ebx - 0x677d], cl; jmp dword ptr [ebp - 0x75]; 
0x00084860: aas; add byte ptr [eax], al; ja 0x84870; ret; 
0x001963f2: aas; add byte ptr [eax], al; jne 0x196100; xor eax, eax; pop edi; ret; 
0x000de768: aas; add byte ptr [eax], al; mov eax, dword ptr [eax]; test eax, eax; je 0xde773; call eax; 
0x00079a48: aas; jb 0x79a45; jmp dword ptr [esi - 0x70]; 
0x00196392: aas; jne 0x196100; xor eax, eax; pop edi; ret; 
0x000e5a70: aas; jne 0xe5a89; mov eax, 1; ret; 
0x00126f06: aas; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; call dword ptr gs:[0x10]; 
0x000ad40d: aas; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0018fefd: aas; sbb al, byte ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0008795f: aas; stc; call dword ptr [eax - 0x18]; 
0x000883e8: aas; stc; call dword ptr [eax - 0x73]; 
0x0002cf3f: aas; test bh, dh; call dword ptr [ebp + 3]; 
0x000667f8: adc ah, 0x78; stc; call dword ptr [eax - 0x18]; 
0x000b59e7: adc ah, 1; add byte ptr [eax], al; ret; 
0x00192312: adc ah, byte ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6273; 
0x000f7dfd: adc al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0007bc83: adc al, 0; add byte ptr [eax], al; add byte ptr [ecx + ecx*8 - 0x137cb18b], al; or byte ptr [ecx - 0x7c72f7bb], cl; rcr byte ptr [ecx], 0xe5; call dword ptr [eax - 0x73]; 
0x0007ce3f: adc al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x860f; 
0x000df2c5: adc al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000df2c5: adc al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; ret; 
0x00105061: adc al, 0; add byte ptr [eax], al; jne 0x105077; add esp, 0x1c; ret; 
0x00105507: adc al, 0; add byte ptr [eax], al; jne 0x105526; add esp, 0x78; pop ebx; ret; 
0x00107c87: adc al, 0; add byte ptr [eax], al; jne 0x107ca6; add esp, 0x78; pop ebx; ret; 
0x00108705: adc al, 0; add byte ptr [eax], al; jne 0x108710; add esp, 0x38; pop ebx; ret; 
0x00108785: adc al, 0; add byte ptr [eax], al; jne 0x108790; add esp, 0x38; pop ebx; ret; 
0x0010c110: adc al, 0; add byte ptr [eax], al; jne 0x10c11d; movzx eax, al; add esp, 0x4c; ret; 
0x001165f8: adc al, 0; add byte ptr [eax], al; jne 0x116609; add esp, 0x1c; ret; 
0x0011804a: adc al, 0; add byte ptr [eax], al; jne 0x118099; add esp, 0x28; pop ebx; ret; 
0x001180ea: adc al, 0; add byte ptr [eax], al; jne 0x118139; add esp, 0x28; pop ebx; ret; 
0x00118375: adc al, 0; add byte ptr [eax], al; jne 0x11837f; add esp, 0x1c; ret; 
0x0011957e: adc al, 0; add byte ptr [eax], al; jne 0x119597; add esp, 0x3c; ret; 
0x001195ef: adc al, 0; add byte ptr [eax], al; jne 0x1195f9; add esp, 0x1c; ret; 
0x0011a60a: adc al, 0; add byte ptr [eax], al; jne 0x11a615; add esp, 0x38; pop ebx; ret; 
0x0011a68f: adc al, 0; add byte ptr [eax], al; jne 0x11a69a; add esp, 0x38; pop ebx; ret; 
0x0011d399: adc al, 0; add byte ptr [eax], al; jne 0x11d3a3; add esp, 0x1c; ret; 
0x0011e6a1: adc al, 0; add byte ptr [eax], al; jne 0x11e6af; add esp, 0x418; pop ebx; ret; 
0x0011eec2: adc al, 0; add byte ptr [eax], al; jne 0x11eedf; add esp, 0x1018; pop ebx; ret; 
0x001244c0: adc al, 0; add byte ptr [eax], al; jne 0x1244e9; add esp, 0x28; pop ebx; ret; 
0x001245e5: adc al, 0; add byte ptr [eax], al; jne 0x124609; add esp, 0x18; pop ebx; ret; 
0x00124665: adc al, 0; add byte ptr [eax], al; jne 0x124689; add esp, 0x18; pop ebx; ret; 
0x001248f0: adc al, 0; add byte ptr [eax], al; jne 0x124919; add esp, 0x18; pop ebx; ret; 
0x00125040: adc al, 0; add byte ptr [eax], al; jne 0x125069; add esp, 0x18; pop ebx; ret; 
0x001250c5: adc al, 0; add byte ptr [eax], al; jne 0x1250e9; add esp, 0x18; pop ebx; ret; 
0x00125150: adc al, 0; add byte ptr [eax], al; jne 0x125179; add esp, 0x28; pop ebx; ret; 
0x001252b9: adc al, 0; add byte ptr [eax], al; jne 0x1252c3; add esp, 0x1c; ret; 
0x00125a03: adc al, 0; add byte ptr [eax], al; jne 0x125a14; add esp, 0x7c; ret; 
0x00133635: adc al, 0; add byte ptr [eax], al; jne 0x133645; add esp, 0x2c; ret; 
0x001336a5: adc al, 0; add byte ptr [eax], al; jne 0x1336b5; add esp, 0x2c; ret; 
0x0013aae6: adc al, 0; add byte ptr [eax], al; jne 0x13aaf0; add esp, 0x2c; ret; 
0x001454af: adc al, 0; add byte ptr [eax], al; jne 0x1454cd; add esp, 0x18; pop ebx; ret; 
0x0014550b: adc al, 0; add byte ptr [eax], al; jne 0x145515; add esp, 0x1c; ret; 
0x00145557: adc al, 0; add byte ptr [eax], al; jne 0x145561; add esp, 0x1c; ret; 
0x00146ece: adc al, 0; add byte ptr [eax], al; jne 0x146f14; add esp, 0x118; pop ebx; ret; 
0x00146f6e: adc al, 0; add byte ptr [eax], al; jne 0x146fd0; add esp, 0x118; pop ebx; ret; 
0x0014702e: adc al, 0; add byte ptr [eax], al; jne 0x14707b; add esp, 0x118; pop ebx; ret; 
0x001470ce: adc al, 0; add byte ptr [eax], al; jne 0x1470fd; add esp, 0x11c; ret; 
0x00147375: adc al, 0; add byte ptr [eax], al; jne 0x1473bc; add esp, 0x1c; ret; 
0x0014ab48: adc al, 0; add byte ptr [eax], al; jne 0x14ab55; movzx eax, ax; add esp, 0x2c; ret; 
0x0014eda9: adc al, 0; add byte ptr [eax], al; jne 0x14edb4; add esp, 0x28; pop ebx; ret; 
0x0015130c: adc al, 0; add byte ptr [eax], al; jne 0x151316; add esp, 0x1c; ret; 
0x00158efc: adc al, 0; add byte ptr [eax], al; jne 0x158f07; add esp, 0x28; pop ebx; ret; 
0x0015ef9f: adc al, 0; add byte ptr [eax], al; jne 0x15f018; add esp, 0x18; pop ebx; ret; 
0x00162254: adc al, 0; add byte ptr [eax], al; jne 0x162267; add esp, 0x1c; ret; 
0x0016237e: adc al, 0; add byte ptr [eax], al; jne 0x162397; add esp, 0x28; pop ebx; ret; 
0x0016241e: adc al, 0; add byte ptr [eax], al; jne 0x162437; add esp, 0x28; pop ebx; ret; 
0x00162770: adc al, 0; add byte ptr [eax], al; jne 0x16277a; add esp, 0x1c; ret; 
0x001627e7: adc al, 0; add byte ptr [eax], al; jne 0x1627ff; add esp, 0x18; pop ebx; ret; 
0x0016364b: adc al, 0; add byte ptr [eax], al; jne 0x163655; add esp, 0x4c; ret; 
0x001636bb: adc al, 0; add byte ptr [eax], al; jne 0x1636c5; add esp, 0x4c; ret; 
0x0016372b: adc al, 0; add byte ptr [eax], al; jne 0x163735; add esp, 0x4c; ret; 
0x0016379b: adc al, 0; add byte ptr [eax], al; jne 0x1637a5; add esp, 0x4c; ret; 
0x001637fe: adc al, 0; add byte ptr [eax], al; jne 0x163808; add esp, 0x4c; ret; 
0x0016385e: adc al, 0; add byte ptr [eax], al; jne 0x163868; add esp, 0x4c; ret; 
0x001638cb: adc al, 0; add byte ptr [eax], al; jne 0x1638d5; add esp, 0x4c; ret; 
0x0016394b: adc al, 0; add byte ptr [eax], al; jne 0x163955; add esp, 0x4c; ret; 
0x00163e39: adc al, 0; add byte ptr [eax], al; jne 0x163e43; add esp, 0x1c; ret; 
0x00163e88: adc al, 0; add byte ptr [eax], al; jne 0x163ebc; add esp, 0x1c; ret; 
0x001656a2: adc al, 0; add byte ptr [eax], al; jne 0x1656ac; add esp, 0x2c; ret; 
0x00165753: adc al, 0; add byte ptr [eax], al; jne 0x1657b9; add esp, 0x18; pop ebx; ret; 
0x00165843: adc al, 0; add byte ptr [eax], al; jne 0x1658a9; add esp, 0x18; pop ebx; ret; 
0x00165aea: adc al, 0; add byte ptr [eax], al; jne 0x165b3b; add esp, 0x18; pop ebx; ret; 
0x00165b7a: adc al, 0; add byte ptr [eax], al; jne 0x165bcb; add esp, 0x18; pop ebx; ret; 
0x00165c39: adc al, 0; add byte ptr [eax], al; jne 0x165c5b; add esp, 0x18; pop ebx; ret; 
0x00165c9e: adc al, 0; add byte ptr [eax], al; jne 0x165cfb; add esp, 0x18; pop ebx; ret; 
0x00165d3a: adc al, 0; add byte ptr [eax], al; jne 0x165d99; add esp, 0x18; pop ebx; ret; 
0x0016655a: adc al, 0; add byte ptr [eax], al; jne 0x1665ab; add esp, 0x18; pop ebx; ret; 
0x001665ea: adc al, 0; add byte ptr [eax], al; jne 0x16663b; add esp, 0x18; pop ebx; ret; 
0x0016667a: adc al, 0; add byte ptr [eax], al; jne 0x1666cb; add esp, 0x18; pop ebx; ret; 
0x0016670a: adc al, 0; add byte ptr [eax], al; jne 0x16675b; add esp, 0x18; pop ebx; ret; 
0x00166dc2: adc al, 0; add byte ptr [eax], al; jne 0x166dcf; movzx eax, al; add esp, 0x1c; ret; 
0x00166e22: adc al, 0; add byte ptr [eax], al; jne 0x166e2f; movzx eax, al; add esp, 0x1c; ret; 
0x00166e8b: adc al, 0; add byte ptr [eax], al; jne 0x166e96; add esp, 0x18; pop ebx; ret; 
0x00166eeb: adc al, 0; add byte ptr [eax], al; jne 0x166ef6; add esp, 0x18; pop ebx; ret; 
0x0016b9e7: adc al, 0; add byte ptr [eax], al; jne 0x16ba1c; add esp, 0x18; pop ebx; ret; 
0x0016d203: adc al, 0; add byte ptr [eax], al; jne 0x16d219; add esp, 0x18; pop ebx; ret; 
0x0016d27b: adc al, 0; add byte ptr [eax], al; jne 0x16d299; add esp, 0x18; pop ebx; ret; 
0x0016e8c7: adc al, 0; add byte ptr [eax], al; jne 0x16e901; add esp, 0x28; pop ebx; ret; 
0x0016ea88: adc al, 0; add byte ptr [eax], al; jne 0x16eaab; add esp, 0x28; pop ebx; ret; 
0x0016eb2a: adc al, 0; add byte ptr [eax], al; jne 0x16eb54; add esp, 0x28; pop ebx; ret; 
0x0016f1bf: adc al, 0; add byte ptr [eax], al; jne 0x16f1ca; add esp, 0x28; pop ebx; ret; 
0x00171a22: adc al, 0; add byte ptr [eax], al; jne 0x171a2d; add esp, 0x18; pop ebx; ret; 
0x001745c9: adc al, 0; add byte ptr [eax], al; jne 0x1745d3; add esp, 0x1c; ret; 
0x0017a185: adc al, 0; add byte ptr [eax], al; jne 0x17a1a9; add esp, 0x18; pop ebx; ret; 
0x00021dcf: adc al, 0; add byte ptr [eax], al; jne 0x21dd9; add esp, 0x1c; ret; 
0x00036618: adc al, 0; add byte ptr [eax], al; jne 0x36626; mov eax, edx; add esp, 0x1c; ret 4; 
0x0003726e: adc al, 0; add byte ptr [eax], al; jne 0x37279; add esp, 0x18; pop ebx; ret; 
0x00037d9c: adc al, 0; add byte ptr [eax], al; jne 0x37db7; add esp, 0x98; pop ebx; ret; 
0x00037f42: adc al, 0; add byte ptr [eax], al; jne 0x37f7c; add esp, 0x28; pop ebx; ret; 
0x00038314: adc al, 0; add byte ptr [eax], al; jne 0x38321; add esp, 0x12c; ret; 
0x00038984: adc al, 0; add byte ptr [eax], al; jne 0x3899f; add esp, 0x98; pop ebx; ret; 
0x00038a04: adc al, 0; add byte ptr [eax], al; jne 0x38a1f; add esp, 0x98; pop ebx; ret; 
0x00038a8c: adc al, 0; add byte ptr [eax], al; jne 0x38a99; add esp, 0x9c; ret; 
0x0003ad5c: adc al, 0; add byte ptr [eax], al; jne 0x3ad66; add esp, 0x2c; ret; 
0x0003ae8c: adc al, 0; add byte ptr [eax], al; jne 0x3ae96; add esp, 0x2c; ret; 
0x0003b16d: adc al, 0; add byte ptr [eax], al; jne 0x3b1ac; add esp, 0x18; pop ebx; ret; 
0x0003b6ee: adc al, 0; add byte ptr [eax], al; jne 0x3b6f8; add esp, 0x1c; ret; 
0x0003b741: adc al, 0; add byte ptr [eax], al; jne 0x3b74b; add esp, 0x1c; ret; 
0x0003b79e: adc al, 0; add byte ptr [eax], al; jne 0x3b7a8; add esp, 0x1c; ret; 
0x0003b7f1: adc al, 0; add byte ptr [eax], al; jne 0x3b7fb; add esp, 0x1c; ret; 
0x0003b83e: adc al, 0; add byte ptr [eax], al; jne 0x3b848; add esp, 0x1c; ret; 
0x0003b891: adc al, 0; add byte ptr [eax], al; jne 0x3b89b; add esp, 0x1c; ret; 
0x000489a8: adc al, 0; add byte ptr [eax], al; jne 0x489b5; add esp, 0x42c; ret; 
0x000582dc: adc al, 0; add byte ptr [eax], al; jne 0x582ea; add esp, 0x1018; pop ebx; ret; 
0x00058363: adc al, 0; add byte ptr [eax], al; jne 0x5836e; add esp, 0x78; pop ebx; ret; 
0x00058948: adc al, 0; add byte ptr [eax], al; jne 0x5895f; add esp, 0x1c; ret; 
0x0007be02: adc al, 0; add byte ptr [eax], al; jne 0x7be1c; add esp, 0x28; pop ebx; ret; 
0x000821b5: adc al, 0; add byte ptr [eax], al; jne 0x821dd; add esp, 0x2c; ret; 
0x0008231d: adc al, 0; add byte ptr [eax], al; jne 0x8234b; add esp, 0x2c; ret; 
0x000864fe: adc al, 0; add byte ptr [eax], al; jne 0x86508; add esp, 0x2c; ret; 
0x0008ae0a: adc al, 0; add byte ptr [eax], al; jne 0x8ae15; add esp, 0x28; pop ebx; ret; 
0x0008ae9a: adc al, 0; add byte ptr [eax], al; jne 0x8aea4; add esp, 0x2c; ret; 
0x0008c1fe: adc al, 0; add byte ptr [eax], al; jne 0x8c208; add esp, 0x2c; ret; 
0x0008c65e: adc al, 0; add byte ptr [eax], al; jne 0x8c668; add esp, 0x2c; ret; 
0x0008cb4a: adc al, 0; add byte ptr [eax], al; jne 0x8cb54; add esp, 0x2c; ret; 
0x0008cf9a: adc al, 0; add byte ptr [eax], al; jne 0x8cfa4; add esp, 0x2c; ret; 
0x0008fde3: adc al, 0; add byte ptr [eax], al; jne 0x8fe24; add esp, 0x38; pop ebx; ret; 
0x00090053: adc al, 0; add byte ptr [eax], al; jne 0x90077; add esp, 0x2c; ret; 
0x000902df: adc al, 0; add byte ptr [eax], al; jne 0x90307; add esp, 0x2c; ret; 
0x0009054f: adc al, 0; add byte ptr [eax], al; jne 0x90577; add esp, 0x18; pop ebx; ret; 
0x00092229: adc al, 0; add byte ptr [eax], al; jne 0x92234; add esp, 0x28; pop ebx; ret; 
0x000938b1: adc al, 0; add byte ptr [eax], al; jne 0x938bc; add esp, 0x28; pop ebx; ret; 
0x00093e8f: adc al, 0; add byte ptr [eax], al; jne 0x93e9a; add esp, 0x38; pop ebx; ret; 
0x000c41be: adc al, 0; add byte ptr [eax], al; jne 0xc41ec; add esp, 0x18; pop ebx; ret; 
0x000cad0e: adc al, 0; add byte ptr [eax], al; jne 0xcad27; add esp, 0x28; pop ebx; ret; 
0x000cad8e: adc al, 0; add byte ptr [eax], al; jne 0xcad98; add esp, 0x1c; ret; 
0x000cadd9: adc al, 0; add byte ptr [eax], al; jne 0xcade4; add esp, 0x38; pop ebx; ret; 
0x000cae39: adc al, 0; add byte ptr [eax], al; jne 0xcae44; add esp, 0x48; pop ebx; ret; 
0x000cbcdf: adc al, 0; add byte ptr [eax], al; jne 0xcbcea; add esp, 0x28; pop ebx; ret; 
0x000cbf35: adc al, 0; add byte ptr [eax], al; jne 0xcbf79; add esp, 0x28; pop ebx; ret; 
0x000cc2f9: adc al, 0; add byte ptr [eax], al; jne 0xcc318; add esp, 0x38; pop ebx; ret; 
0x000d4832: adc al, 0; add byte ptr [eax], al; jne 0xd483c; add esp, 0x1c; ret; 
0x000d6ec2: adc al, 0; add byte ptr [eax], al; jne 0xd6ecc; add esp, 0x1c; ret; 
0x000d7026: adc al, 0; add byte ptr [eax], al; jne 0xd7062; add esp, 0x28; pop ebx; ret; 
0x000d7245: adc al, 0; add byte ptr [eax], al; jne 0xd7250; add esp, 0x28; pop ebx; ret; 
0x000d8425: adc al, 0; add byte ptr [eax], al; jne 0xd8433; add esp, 0xe8; pop ebx; ret; 
0x000d84aa: adc al, 0; add byte ptr [eax], al; jne 0xd84b5; add esp, 0x38; pop ebx; ret; 
0x000d8551: adc al, 0; add byte ptr [eax], al; jne 0xd855f; add esp, 0xe8; pop ebx; ret; 
0x000d85da: adc al, 0; add byte ptr [eax], al; jne 0xd85e5; add esp, 0x38; pop ebx; ret; 
0x000da80a: adc al, 0; add byte ptr [eax], al; jne 0xda859; add esp, 0x28; pop ebx; ret; 
0x000dd735: adc al, 0; add byte ptr [eax], al; jne 0xdd7e3; add esp, 0x68; pop ebx; ret; 
0x000df3f6: adc al, 0; add byte ptr [eax], al; jne 0xdf449; add esp, 0x28; pop ebx; ret; 
0x000df496: adc al, 0; add byte ptr [eax], al; jne 0xdf4e9; add esp, 0x28; pop ebx; ret; 
0x000e0e67: adc al, 0; add byte ptr [eax], al; jne 0xe0e86; add esp, 0x78; pop ebx; ret; 
0x000e3527: adc al, 0; add byte ptr [eax], al; jne 0xe3546; add esp, 0x78; pop ebx; ret; 
0x000f8557: adc al, 0; add byte ptr [eax], al; jne 0xf8576; add esp, 0x78; pop ebx; ret; 
0x000f9137: adc al, 0; add byte ptr [eax], al; jne 0xf9156; add esp, 0x78; pop ebx; ret; 
0x000d8f97: adc al, 0; add byte ptr [eax], al; mov dword ptr [esp + 0x13c], eax; xor eax, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x00108cd9: adc al, 0; add byte ptr [eax], al; mov dword ptr [esp + 0x18c], eax; xor eax, eax; mov eax, 0x17f; call dword ptr gs:[0x10]; 
0x001162a2: adc al, 0; add byte ptr [eax], al; mov dword ptr [esp + 0x5c], eax; xor eax, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0005b994: adc al, 0; add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xd801; 
0x00161ce7: adc al, 0; add byte ptr [ecx - 0x1f7c723b], cl; arpl cx, di; call dword ptr [ecx + 0x6a]; 
0x00030037: adc al, 0; add eax, 0x1f9fc7; mov eax, dword ptr [eax - 0x144]; add eax, dword ptr gs:[0]; ret; 
0x00030017: adc al, 0; add eax, 0x1f9fe7; mov eax, dword ptr [eax - 0xc]; add eax, dword ptr gs:[0]; ret; 
0x0002fff7: adc al, 0; add eax, 0x1fa007; mov eax, dword ptr [eax - 0x13c]; add eax, dword ptr gs:[0]; ret; 
0x0002b8c7: adc al, 0; add eax, 0x1fe737; mov eax, dword ptr [eax + 0x1014]; ret; 
0x000227b7: adc al, 0; add eax, 0x207847; mov eax, dword ptr [eax + 0xff0]; ret; 
0x00022797: adc al, 0; add eax, 0x207867; mov eax, dword ptr [eax + 0xfec]; ret; 
0x0002373e: adc al, 0; mov dword ptr [esp], ebx; call edi; 
0x0002280b: adc al, 0; mov dword ptr [esp], ebx; call esi; 
0x0002297e: adc al, 0; mov dword ptr [esp], ebx; mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x0002300e: adc al, 0; mov dword ptr [esp], ebx; mov ecx, dword ptr [ebp - 0x40]; call ecx; 
0x0002b879: adc al, 0; mov dword ptr [esp], esi; call ebx; 
0x000e01fd: adc al, 0; mov ecx, dword ptr [esp + 4]; mov eax, 1; test ecx, ecx; js 0xe0210; ret; 
0x0002b8d0: adc al, 0x10; add byte ptr [eax], al; ret; 
0x000b89db: adc al, 0x11; aad 0x83; ret; 
0x001728d8: adc al, 0x11; cld; dec dword ptr [ebx + 0x311c2444]; fild dword ptr [eax + 0xf72007d]; xchg esp, eax; ret; 
0x0015c80b: adc al, 0x11; mov byte ptr [eax - 1], dl; cmp eax, ebx; jne 0x15c800; pop ebx; ret; 
0x001287ea: adc al, 0x11; movzx edx, word ptr [edx + eax*2]; and edx, 0x100; mov eax, edx; ret; 
0x000300a6: adc al, 0x18; pop ebx; pop esi; ret; 
0x000fd567: adc al, 0x22; in eax, dx; call dword ptr [eax - 0x73]; 
0x0015930e: adc al, 0x24; call dword ptr [eax + 0x10]; 
0x00171dfe: adc al, 0x24; ret; 
0x00158a64: adc al, 0x24; sub esp, 8; mov ecx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [ecx + 8]; 
0x0009ee50: adc al, 0x29; ret 0x748d; 
0x0009f4bc: adc al, 0x29; ret 0x8b90; 
0x0009f264: adc al, 0x29; ret 0xb48d; 
0x0012c3e1: adc al, 0x29; ret; 
0x00079bc7: adc al, 0x29; ror byte ptr [ecx + 0x8c48301], 1; xor eax, eax; pop ebx; ret; 
0x0009c027: adc al, 0x2b; cmc; dec dword ptr [ebx + 0x18499]; add dh, dh; ret; 
0x0012a80e: adc al, 0x30; pop esi; pop edi; mov eax, edx; ret; 
0x0006c05f: adc al, 0x30; sub esp, 4; push ecx; push edi; push dword ptr [ebp - 0x8a0]; call edx; 
0x0012c849: adc al, 0x31; rol byte ptr [ebp - 0x3db7f040], cl; add esp, 8; pop ebx; ret; 
0x00091249: adc al, 0x39; or bh, byte ptr [edx + esi*8 - 0x46]; add byte ptr [eax], al; add byte ptr [eax], al; cmovne eax, edx; ret; 
0x00083943: adc al, 0x39; ret 0x1074; 
0x0011ed11: adc al, 0x39; ret 0x1a77; 
0x00169a25: adc al, 0x39; ret 0x870f; 
0x000961ae: adc al, 0x39; ret; 
0x00126f05: adc al, 0x3f; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; call dword ptr gs:[0x10]; 
0x00129170: adc al, 0x42; and edx, 0x1000; mov eax, edx; ret; 
0x001287ee: adc al, 0x42; and edx, 0x100; mov eax, edx; ret; 
0x00129070: adc al, 0x42; and edx, 0x2000; mov eax, edx; ret; 
0x00128e70: adc al, 0x42; and edx, 0x200; mov eax, edx; ret; 
0x00128f70: adc al, 0x42; and edx, 0x4000; mov eax, edx; ret; 
0x00128c70: adc al, 0x42; and edx, 0x400; mov eax, edx; ret; 
0x00128ef0: adc al, 0x42; and edx, 0x8000; mov eax, edx; ret; 
0x00128cf0: adc al, 0x42; and edx, 1; mov eax, edx; ret; 
0x00128d70: adc al, 0x42; and edx, 2; mov eax, edx; ret; 
0x00128ff0: adc al, 0x42; and edx, 4; mov eax, edx; ret; 
0x00128bf0: adc al, 0x42; and edx, 8; mov eax, edx; ret; 
0x0011b318: adc al, 0x44; add byte ptr [eax], al; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0011b3aa: adc al, 0x44; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0010c97a: adc al, 0x50; push 1; push dword ptr [esp + 0x30]; push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x0010ccb5: adc al, 0x50; push 2; push dword ptr [esp + 0x30]; push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x0010cc4a: adc al, 0x50; push 5; push dword ptr [esp + 0x30]; push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x0015859e: adc al, 0x50; push edx; call dword ptr [ecx + 0xc]; 
0x0015859e: adc al, 0x50; push edx; call dword ptr [ecx + 0xc]; add esp, 0x10; add esp, 0xc; ret; 
0x0010c421: adc al, 0x51; mov ecx, dword ptr [esi + 0x20]; push dword ptr [ecx + eax]; push edx; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x000e0e7e: adc al, 0x52; push eax; call dword ptr [ecx + 0x20]; 
0x0015970c: adc al, 0x52; push ebx; call dword ptr [eax + 0x14]; 
0x00159212: adc al, 0x53; call dword ptr [eax + 0x10]; 
0x001639e9: adc al, 0x53; call dword ptr [eax]; 
0x00065de7: adc al, 0x55; call dword ptr [eax + 0x1c]; 
0x001588e9: adc al, 0x56; call dword ptr [eax + 4]; 
0x00082644: adc al, 0x56; push dword ptr [esp + 0x20]; push edx; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0008202c: adc al, 0x5b; pop esi; jmp eax; 
0x000cd19c: adc al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x00075343: adc al, 0x5b; pop esi; pop edi; ret; 
0x0002c7ba: adc al, 0x5b; pop esi; ret; 
0x0007600b: adc al, 0x5e; pop edi; jmp eax; 
0x00111b02: adc al, 0x5e; pop edi; ret; 
0x000ac263: adc al, 0x5f; pop esi; pop ebx; ret; 
0x000df646: adc al, 0x6a; add byte ptr [edx], ch; call 0xdf5e0; add esp, 0x1c; ret; 
0x0016d190: adc al, 0x6a; add cl, byte ptr [ebp - 0x699dc80]; call dword ptr [eax - 0x18]; 
0x0002e507: adc al, 0x72; stc; call dword ptr [eax - 0x18]; 
0x0016e2f7: adc al, 0x73; out 0xb8, al; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; ret; 
0x00074f91: adc al, 0x73; ret; 
0x0010a38c: adc al, 0x74; fisttp dword ptr [ebx - 0x1337b]; jmp dword ptr [ebp - 0x75]; 
0x00122362: adc al, 0x74; imul ecx, dword ptr [ebx - 0x74afdba4], 0x4c; and al, 0x54; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x00056919: adc al, 0x77; stc; call dword ptr [eax - 0x73]; 
0x00171e42: adc al, 0x81; setne al; movzx eax, al; ret; 
0x0008474b: adc al, 0x83; clc; add dword ptr [edx + 0x5f], edi; mov eax, 0x16; cmove eax, edx; ret; 
0x0003a834: adc al, 0x83; in al, dx; or byte ptr [edx], ch; push edx; call edi; 
0x000cf9b1: adc al, 0x83; jle 0xcf9c5; add dword ptr [ebp + 0x76c98], ecx; add byte ptr [edi], cl; sahf; ret 0xd329; 
0x0015a095: adc al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x0007be07: adc al, 0x83; les ebp, ptr [eax]; pop ebx; ret; 
0x0007b70b: adc al, 0x83; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00025ebe: adc al, 0x83; les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; jmp eax; 
0x0003dfcf: adc al, 0x83; les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x0007b117: adc al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x000272c0: adc al, 0x83; les edi, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x0008e194: adc al, 0x83; les esp, ptr [ebx + ebx*2]; pop esi; ret; 
0x000f20e2: adc al, 0x83; ret 0x8901; 
0x0008b354: adc al, 0x83; ret; 
0x00091cdf: adc al, 0x84; stc; call dword ptr [eax - 0x73]; 
0x0009b467: adc al, 0x85; out 0xff, eax; and ch, 2; lea edx, [edx - 0x9ee40]; cmovne eax, edx; ret; 
0x000d7f93: adc al, 0x85; sal byte ptr [ebp - 0x2e], cl; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0006e4c8: adc al, 0x86; jmp edx; 
0x0007519f: adc al, 0x88; sbb dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x00094efb: adc al, 0x89; dec eax; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x001669c0: adc al, 0x89; dec eax; add al, 0x5b; ret; 
0x000d7d3a: adc al, 0x89; dec esi; sbb byte ptr [ebx + 0x4e891c4f], cl; sbb al, 0x39; ret 0x8d0f; 
0x00124425: adc al, 0x89; fcomp dword ptr [ebx + 0x5e]; ret; 
0x0007a3a1: adc al, 0x89; jae 0x7a3bd; pop ebx; pop esi; pop edi; ret; 
0x00167fbd: adc al, 0x89; push ebp; test byte ptr [ecx + 0x458b9045], cl; sbb byte ptr [ecx - 0x837b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000faa48: adc al, 0x89; push ebx; adc al, 0x8d; or ch, 0x48; stc; call dword ptr [eax - 0x77]; 
0x0007b979: adc al, 0x89; push ebx; add al, 0x31; ror byte ptr [ecx + 0x5bd08903], cl; ret; 
0x000818d9: adc al, 0x89; push esp; and al, 0x10; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x001658f1: adc al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0016725b: adc al, 0x89; ret 0x4489; 
0x00133b96: adc al, 0x89; ret 0x998b; 
0x00142017: adc al, 0x89; ret 0xc085; 
0x0008a6be: adc al, 0x89; ret 0xc74; 
0x0014d195: adc al, 0x89; ret 0xc985; 
0x000ee8c9: adc al, 0x89; ret 0xd339; 
0x0019f780: adc al, 0x89; ret 0xe283; 
0x0009d1dc: adc al, 0x89; ret 0xf901; 
0x000353de: adc al, 0x89; ret; 
0x00144e60: adc al, 0x89; test dword ptr [ebx + edi*8 + 0x458bffff], esi; sbb al, 0x89; test dword ptr [ebx + edi*8 + 0x458bffff], edi; and byte ptr [ecx - 0x4477b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00141beb: adc al, 0x89; test dword ptr [edi + edi*8 - 1], esi; jmp dword ptr [ebp - 0x5f]; 
0x0010c23d: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x00123ced: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x001120fd: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xbb; call dword ptr gs:[0x10]; 
0x0011f3cd: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x0011f42d: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x0011f2fd: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x0011212d: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xef; call dword ptr gs:[0x10]; 
0x00123a8d: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x00094ef8: adc al, 0x8b; inc eax; adc al, 0x89; dec eax; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0015a092: adc al, 0x8b; inc ebx; adc al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x00170772: adc al, 0x8b; inc esp; and al, 0x10; call eax; 
0x00021512: adc al, 0x8b; inc esp; and al, 0x14; call eax; 
0x00124967: adc al, 0x8b; inc esp; and al, 0x3c; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00124da7: adc al, 0x8b; inc esp; and al, 0x44; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000b33f6: adc al, 0x8b; inc esp; and al, 0xc; pop ebx; pop esi; ret; 
0x000aff60: adc al, 0x8b; inc esp; and al, 8; pop esi; ret; 
0x000944ec: adc al, 0x8b; je 0x94514; adc byte ptr [ebx + 0x11c246c], cl; pop eax; add al, 0x89; ret; 
0x00066a0e: adc al, 0x8b; pop edi; sbb byte ptr [ecx], ch; ret; 
0x00178031: adc al, 0x8b; pop esp; and al, 0x10; call dword ptr gs:[0x10]; 
0x0011c696: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x00115cde: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0010bc26: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0010c176: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x00123e16: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x00123c16: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x00123af6: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x00123cb6: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0011f536: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x0011f4c6: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x0011f396: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x001217cf: adc al, 0x8b; pop esp; and al, 0x10; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00115d5e: adc al, 0x8b; pop esp; and al, 0x10; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000932fd: adc al, 0x8b; pop esp; and al, 0xc; call dword ptr gs:[0x10]; 
0x00109381: adc al, 0x8b; push esp; and al, 0x18; mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x00058a6a: adc al, 0x8b; push esp; and al, 0x18; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0017a332: adc al, 0x8b; push esp; and al, 0x18; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x001260e2: adc al, 0x8b; push esp; and al, 0x18; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x000fc7e1: adc al, 0x8d; adc byte ptr [edx], 0x49; stc; call dword ptr [eax + 0x56]; 
0x00153590: adc al, 0x8d; adc cl, 0x61; stc; call dword ptr [eax + 0x6a]; 
0x00120772: adc al, 0x8d; adc edx, 0x52; stc; dec dword ptr [eax - 0x6c72f7aa]; ret 0xf952; 
0x000b6113: adc al, 0x8d; add al, 0x98; pop ebx; pop esi; ret; 
0x00154b90: adc al, 0x8d; add byte ptr [ecx + 0x62], 0xf9; call dword ptr [eax + 0x6a]; 
0x00153c30: adc al, 0x8d; and al, 0x61; stc; call dword ptr [eax + 0x6a]; 
0x00155f30: adc al, 0x8d; and byte ptr [eax + 0x50fff962], 0x6a; push es; call 0x152d90; add esp, 0x1c; ret; 
0x00152303: adc al, 0x8d; cmp byte ptr [esi], 0x45; stc; call dword ptr [eax - 0x18]; 
0x000fca96: adc al, 0x8d; cmp ch, 0x48; stc; call dword ptr [eax + 0x56]; 
0x0007a610: adc al, 0x8d; dec edx; add ebx, ebp; mov esp, 0x7e24828d; stc; call dword ptr [eax - 0x73]; 
0x000d75d6: adc al, 0x8d; dec esp; and al, 4; mov dword ptr [esp + 8], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x00096e9a: adc al, 0x8d; inc edx; jmp dword ptr [ecx]; 
0x0004930a: adc al, 0x8d; je 0x49334; add byte ptr [eax - 0x7c40fb73], dl; ret; 
0x0002c2f4: adc al, 0x8d; nop; push eax; and al, ah; call dword ptr [edx - 1]; 
0x000fc92a: adc al, 0x8d; or byte ptr [edx], 0x49; stc; call dword ptr [eax + 0x56]; 
0x000faa4b: adc al, 0x8d; or ch, 0x48; stc; call dword ptr [eax - 0x77]; 
0x00074ecb: adc al, 0x8d; pop edx; add al, 0x89; pop eax; adc byte ptr [ecx + 0x5b0a89c8], cl; ret; 
0x001575d0: adc al, 0x8d; sbb ah, 0x62; stc; call dword ptr [eax + 0x6a]; 
0x00156450: adc al, 0x8d; sub byte ptr [edx + 0x6a50fff9], 1; call 0x152d90; add esp, 0x1c; ret; 
0x001578b0: adc al, 0x8d; sub cl, 0x62; stc; call dword ptr [eax + 0x6a]; 
0x00097cd0: adc al, 0x8d; xchg al, ch; xchg ebx, eax; stc; dec dword ptr [ebp - 0x6bf3a6a]; call dword ptr [eax - 0x73]; 
0x00033d59: adc al, 0x8d; xchg byte ptr [edi + 0x2f], dh; stc; call dword ptr [eax - 1]; 
0x00147195: adc al, 0x8d; xchg byte ptr [edx + 0x5e], bh; stc; call dword ptr [eax - 0x18]; 
0x000fc5a1: adc al, 0x8d; xchg dword ptr [ebx], eax; dec ecx; stc; call dword ptr [eax + 0x56]; 
0x0003eea6: adc al, 0x8d; xchg dword ptr [esi + esi*2 - 7], ebx; call dword ptr [eax + 0x68]; 
0x00119e2d: adc al, 0x8d; xchg ecx, eax; sti; dec edx; stc; call dword ptr [edx + 0x50]; 
0x000fac1e: adc al, 0x8d; xchg edi, ecx; dec eax; stc; call dword ptr [eax - 0x73]; 
0x000da5a5: adc al, 0x8d; xor byte ptr [eax - 0x67], 0xf9; call dword ptr [eax - 0x18]; 
0x000f66fa: adc al, 0x8d; xor byte ptr [edi + 0x48], 0xf9; call dword ptr [eax - 1]; 
0x00157e60: adc al, 0x8d; xor dh, 0x62; stc; call dword ptr [eax + 0x6a]; 
0x0013bfe2: adc al, 0xa7; stc; call dword ptr [eax - 0x73]; 
0x0014e63d: adc al, 0xad; stc; call dword ptr [eax - 0x18]; 
0x001667a7: adc al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; ret; 
0x00166b5e: adc al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x0008322c: adc al, 0xb8; lock add byte ptr [eax], al; add byte ptr [edx + 2], bh; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x000d7193: adc al, 0xb8; or al, byte ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00121f66: adc al, 0xb; cmp edx, 0x26; je 0x121fbb; pop ebx; pop esi; ret; 
0x00125c3f: adc al, 0xbb; or eax, 0x8b000000; push esp; and al, 0x18; call dword ptr gs:[0x10]; 
0x00052fe5: adc al, 0xc6; add byte ptr [0xfff8c7e9], ch; jmp dword ptr [esi - 0x70]; 
0x000cae7e: adc al, 0xde; jmp 0xdd30cb62; add al, 0x24; add esp, 0xc; ret; 
0x0007b7e4: adc al, 0xe5; call dword ptr [eax - 0x73]; 
0x00095219: adc al, 0xe8; and dword ptr [eax - 0x3b7c0008], esi; or al, 0x8d; add dword ptr [eax - 0x5d], -0x1a; call dword ptr [eax + 0x56]; 
0x000ed555: adc al, 0xe8; in eax, 0x2b; inc dword ptr [ebx - 0x3fceef3c]; add esp, 8; pop ebx; ret; 
0x0007430a: adc al, 0xe8; jmp 0x810752eb; ret; 
0x000982ff: adc al, 0xe8; mov ebx, 0x89ffffec; ret; 
0x0009d844: adc al, 0xeb; ret; 
0x000fd622: adc al, 0xed; call dword ptr [edx + 0x6a]; 
0x00115bc5: adc al, 0xf6; ret 0x7540; 
0x0008ed57: adc al, 0xf6; ret 0xf02; 
0x00057423: adc al, 0xf6; ret 0xf50; 
0x000c9bc5: adc al, 0xf; test esp, edx; add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x0011f67e: adc al, 0xf; xchg byte ptr [esi + ecx - 0x137d0000], bl; or byte ptr [ebp - 0x6b42d7d], cl; call dword ptr [eax + 0x57]; 
0x000913ad: adc al, 0xf; xchg dword ptr [ebx + eax - 0x58180000], ebx; ret; 
0x0015d3ff: adc al, 0xf; xchg edi, eax; ret 0x4bd; 
0x0013ed33: adc al, 0xf; xchg esp, eax; ret; 
0x00121056: adc al, 0xff; je 0x12107e; sbb byte ptr [edx], ch; call 0x122700; add esp, 0x1c; ret; 
0x00158d4e: adc al, 0xff; je 0x158d76; adc al, 0xff; je 0x158d7a; je 0x158da8; call dword ptr [ecx]; 
0x00158d52: adc al, 0xff; je 0x158d7a; je 0x158da8; call dword ptr [ecx]; 
0x0016d160: adc al, 0xff; je 0x16d188; sbb byte ptr [ebp - 0x699dc80], cl; call dword ptr [eax - 0x18]; 
0x0002150e: adc al, 0xff; je 0x21536; adc al, 0x8b; inc esp; and al, 0x14; call eax; 
0x0003b93a: adc al, 0xff; je 0x3b962; sbb byte ptr [eax + 0x50], dl; call 0x3b950; add esp, 0x1c; ret; 
0x00073a95: adc al, 0xff; jne 0x73aa5; push esi; call dword ptr [ebx + 0x2c]; 
0x00037b8a: adc al, 1; add byte ptr [eax], al; pop ebx; pop edi; ret; 
0x00089576: adc al, 1; add byte ptr [eax], al; ret; 
0x000a1d65: adc al, 1; cmp edx, ebx; je 0xa1d60; pop ebx; ret; 
0x001667dd: adc al, 1; fmul dword ptr [ecx - 0x2776f3be]; pop ebx; ret; 
0x000d6eec: adc al, 1; je 0xd6ef8; add esp, 0xc; ret; 
0x000d6fcc: adc al, 1; je 0xd6fd8; add esp, 0xc; ret; 
0x001432db: adc al, 1; ret; 
0x0002b080: adc al, 1; xor bh, byte ptr [ecx]; ret; 
0x0013c047: adc al, 3; inc ebx; adc byte ptr [ecx], bh; ret 0x6273; 
0x00166b3a: adc al, 4; mov eax, 1; ret; 
0x0016b45a: adc al, 5; add byte ptr [eax], al; mov eax, ebx; pop ebx; pop esi; ret; 
0x00037682: adc al, 5; add byte ptr [ebx - 0x3f7aef3c], al; jne 0x37698; add esp, 8; pop ebx; ret; 
0x0012d032: adc al, 5; add dword ptr [eax], eax; add byte ptr [edx], al; push eax; call dword ptr [edi + 0x14]; 
0x0014741f: adc al, 8; pop ebx; mov eax, edx; ret; 
0x00047c96: adc al, 9; ret 0x874; 
0x0010934a: adc al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000e41ed: adc al, byte ptr [eax]; add byte ptr [ebp - 0x45b7b], cl; call dword ptr [eax - 0x77]; 
0x000e1b3d: adc al, byte ptr [eax]; add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ebx - 0x46f63]; call dword ptr [eax - 0x77]; 
0x000643d2: adc al, byte ptr [eax]; add byte ptr [ebx - 0x17acf314], al; ret 0xc44; 
0x0004fee8: adc al, byte ptr [eax]; add byte ptr [ebx - 0x361f7b], cl; dec dword ptr [ebx - 0x361b6b]; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00098283: adc al, byte ptr [eax]; add byte ptr [ebx - 0x72e7db8c], cl; xchg byte ptr [ebx + edx*4 - 0x69720007], al; lds eax, ptr [eax - 7]; call dword ptr [eax - 0x73]; 
0x00108655: adc al, byte ptr [eax]; push ebx; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000fb373: adc al, byte ptr [eax]; push ebx; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x001096e8: adc al, byte ptr [eax]; push ebx; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000c9f75: adc al, byte ptr [ebx + 0x4827c]; lea ecx, [eax + 1]; jne 0xc9f58; mov eax, ecx; ret; 
0x0011d8fd: adc al, byte ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x000acafa: adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x000acc5a: adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000b268d: adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000ab49a: adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x000ab5fa: adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000acb1a: adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000acc7a: adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000ab4ba: adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000ab61a: adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000acb3a: adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000acc9a: adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000ab4da: adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000ab63a: adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000ac9c9: adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000accba: adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000ab389: adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000ab65a: adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000a8302: adc al, byte ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000a3f12: adc al, byte ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000a8342: adc al, byte ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000a3f52: adc al, byte ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000a8362: adc al, byte ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000a3f72: adc al, byte ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000a80b2: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x000a82f2: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; ret; 
0x000a9eed: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 8]; pop edi; pop ebx; ret; 
0x00198c32: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000b24d3: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000a5aed: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; pop ebx; ret; 
0x000a3ce2: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000a6b17: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; pop ebx; ret; 
0x000a3f02: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000acc52: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000ab5f2: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000acc72: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000ab612: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000acc92: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000ab632: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000accb2: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000ab652: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000a8382: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000a3f92: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000a83a2: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000a3fb2: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000a83c2: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000a3fd2: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000afde2: adc al, byte ptr [esi]; mov byte ptr [eax + 8], dh; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b3245: adc al, byte ptr [esi]; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afdd2: adc al, byte ptr [esi]; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ac0d2: adc al, byte ptr [esi]; movlpd qword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x0012c60a: adc al, ch; jmp 0x8112ca68; ret; 
0x000afd0c: adc al, ch; jmp dword ptr [eax]; 
0x000579fb: adc al, ch; jmp ecx; 
0x000b5b2a: adc al, ch; leave; ret 0xb; 
0x0003743a: adc al, ch; mov ecx, 0x810013a9; ret; 
0x0007b3f6: adc al, ch; ret 0xfa4e; 
0x00098578: adc al, ch; ret 0xffcf; 
0x000731a7: adc al, ch; ret; 
0x000e59fa: adc al, ch; stc; ret; 
0x000b43a5: adc al, dh; ret; 
0x0006b670: adc bh, al; add ah, byte ptr [0xf000000]; mov dh, 0x57; or al, 0xf6; ret 0xf08; 
0x0006ca49: adc bh, al; add ah, byte ptr [eax]; add byte ptr [eax], al; add cl, ch; ret 0xfff9; 
0x0017a987: adc bh, al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x00146df0: adc bh, al; inc eax; or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00169ff3: adc bh, al; sbb byte ptr [ebp + 0x10000], 0; add cl, ch; ret 0xfffe; 
0x001588e5: adc bh, bh; je 0x15890d; adc al, 0x56; call dword ptr [eax + 4]; 
0x00039308: adc bh, bh; jne 0x3930c; push dword ptr [esi]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0008fbb3: adc bh, bh; jo 0x8fbbb; call dword ptr [eax]; 
0x000708cb: adc bh, byte ptr [ecx]; ret 0x420f; 
0x000597b6: adc bh, byte ptr [ecx]; ret 0x850f; 
0x00099ac2: adc bh, byte ptr [ecx]; ror byte ptr [edi], 1; inc edi; ret 0xc083; 
0x000be923: adc bh, dh; dec dword ptr [ebx - 0x72cfdb84]; xchg dword ptr [edi + edx*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x00021c4d: adc bh, dh; fcomp dword ptr [ebx - 0x7d]; rol byte ptr [eax], cl; neg edx; ret; 
0x00098eb5: adc bh, dh; fdivr dword ptr [ecx]; ror byte ptr [edi], 1; xor byte ptr [eax + 2], 0; add dh, dh; ret; 
0x0012813b: adc bh, dh; ret 0xff80; 
0x00119b8b: adc bl, bh; out dx, al; call dword ptr [eax - 0x73]; 
0x00035e38: adc bl, bl; insb byte ptr es:[edi], dx; and al, 4; fadd st(0); mov dword ptr [eax], ecx; ret; 
0x00035da7: adc bl, bl; insb byte ptr es:[edi], dx; and al, 4; fscale; fstp st(1); ret; 
0x00035e2d: adc bl, bl; insb byte ptr es:[edi], dx; and al, 4; mov dword ptr [eax], ecx; ret; 
0x0011a19d: adc bl, byte ptr [ebx - 0x48]; add dword ptr [eax], eax; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x000ad912: adc bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x00191c0d: adc bl, byte ptr [esi + 0x5d]; pop ebx; xor eax, eax; ret; 
0x000da8a9: adc bl, ch; call dword ptr [eax - 0x18]; 
0x00082d28: adc bl, ch; fldenv [esi - 0x70]; nop; nop; endbr32; ret; 
0x00056aac: adc bl, ch; lcall 0x4c83, 0x8d0cec83; sbb dword ptr [eax], eax; add byte ptr [eax - 0x18], dl; ret 0x2c6; 
0x0003a70b: adc bl, ch; lds ecx, ptr [ebp - 0x68bc770]; call dword ptr [edx - 0x73]; 
0x00140c65: adc bl, ch; mov al, 0xe8; sub dword ptr [0x878dffff], 0x78; test al, 0xf9; call dword ptr [eax - 0x73]; 
0x0014cecf: adc bl, ch; mov ebp, 0xaca0868d; stc; call dword ptr [eax - 0x73]; 
0x0007f48b: adc bl, ch; ret 0x9066; 
0x0008350f: adc bl, ch; ret 0xb68d; 
0x00080b25: adc bl, ch; ret; 
0x0009a55d: adc bl, ch; sahf; sub esp, 0xc; push dword ptr [esp + 0x14]; call eax; 
0x00082526: adc bl, ch; shr al, 1; ret 0xb14; 
0x00166b1e: adc bl, ch; shr eax, cl; retf 0xfcce; jmp dword ptr [esi - 0x70]; 
0x000aff36: adc bl, dh; movq qword ptr [eax], mm0; mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000afef7: adc bl, dh; movq qword ptr [eax], mm0; mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b00b8: adc bl, dh; movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000affb8: adc bl, dh; movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0013390a: adc byte ptr [0x3ff], bh; ja 0x133919; sar eax, 5; add esp, 0xc; ret; 
0x00036ed7: adc byte ptr [0x80000000], ah; ret; 
0x0011c69a: adc byte ptr [eax + 0x101], bh; call dword ptr gs:[0x10]; 
0x00115ce2: adc byte ptr [eax + 0x127], bh; call dword ptr gs:[0x10]; 
0x00115bde: adc byte ptr [eax + 0x127], bh; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x0010bc2a: adc byte ptr [eax + 0x12a], bh; call dword ptr gs:[0x10]; 
0x0010c17a: adc byte ptr [eax + 0x12f], bh; call dword ptr gs:[0x10]; 
0x00125445: adc byte ptr [eax + 0x151], bh; call dword ptr gs:[0x10]; 
0x00123e1a: adc byte ptr [eax + 0x155], bh; call dword ptr gs:[0x10]; 
0x00123c1a: adc byte ptr [eax + 0x15], bh; call dword ptr gs:[0x10]; 
0x0012370c: adc byte ptr [eax + 0x1b3], bh; int 0x80; 
0x00115c5e: adc byte ptr [eax + 0x27b880ce], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; call dword ptr gs:[0x10]; 
0x0003d47e: adc byte ptr [eax + 0x3901c083], dl; ret; 
0x0011ea4f: adc byte ptr [eax + 0x3e], bh; call dword ptr gs:[0x10]; 
0x000b33f3: adc byte ptr [eax + 0x448b1470], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000aff5d: adc byte ptr [eax + 0x448b1470], cl; and al, 8; pop esi; ret; 
0x000b3477: adc byte ptr [eax + 0x448b1870], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000affe1: adc byte ptr [eax + 0x448b1870], cl; and al, 8; pop esi; ret; 
0x000ad9f4: adc byte ptr [eax + 0x478d184f], cl; sbb dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x000ac260: adc byte ptr [eax + 0x5e5f1457], cl; pop ebx; ret; 
0x000ac2e4: adc byte ptr [eax + 0x5e5f184f], cl; pop ebx; ret; 
0x000ac3e4: adc byte ptr [eax + 0x5e5f204f], cl; pop ebx; ret; 
0x0011939f: adc byte ptr [eax + 0x6a], 0; push dword ptr [esp + 0x1c]; call 0x58600; add esp, 0x1c; ret; 
0x00123afa: adc byte ptr [eax + 0x80], bh; call dword ptr gs:[0x10]; 
0x00123cba: adc byte ptr [eax + 0xa7], bh; call dword ptr gs:[0x10]; 
0x0011f53a: adc byte ptr [eax + 0xe2], bh; call dword ptr gs:[0x10]; 
0x0011f4ca: adc byte ptr [eax + 0xe3], bh; call dword ptr gs:[0x10]; 
0x0011f39a: adc byte ptr [eax + 0xe4], bh; call dword ptr gs:[0x10]; 
0x00085ad6: adc byte ptr [eax + 0xf0], bh; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00085cb2: adc byte ptr [eax + 0xf0], bh; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00086822: adc byte ptr [eax + 0xf1], bh; call dword ptr gs:[0x10]; 
0x000d6f08: adc byte ptr [eax + 1], bh; add esp, 0xc; ret; 
0x00119922: adc byte ptr [eax + 1], bh; add esp, 8; pop ebx; ret; 
0x00072243: adc byte ptr [eax + 1], bh; pop ebx; pop esi; pop edi; ret; 
0x0015ba60: adc byte ptr [eax + 1], bh; pop ebx; pop esi; ret; 
0x00126c3f: adc byte ptr [eax + 1], bh; ret; 
0x001152cd: adc byte ptr [eax + eax*8 - 0x137c1f8b], al; or al, 0x8d; xchg byte ptr [eax - 7], al; call dword ptr [eax - 0x18]; 
0x0008e4ae: adc byte ptr [eax + eax*8 - 0x3fcef28c], al; add esp, 8; pop ebx; ret; 
0x0011661d: adc byte ptr [eax + eax], dl; push dword ptr [esp + 0x1c]; call 0x117200; add esp, 0x1c; ret; 
0x0012a838: adc byte ptr [eax + esi*8], al; call dword ptr [eax - 1]; 
0x0008f069: adc byte ptr [eax - 0x1a], dl; call dword ptr [ebp + 0x50]; 
0x00021710: adc byte ptr [eax - 0x45], ch; add dword ptr [eax], eax; add byte ptr [ebp - 0x6995f80], cl; call dword ptr [eax + 0x6a]; 
0x00152b35: adc byte ptr [eax - 0x52], 0xf9; call dword ptr [eax - 0x73]; 
0x00172983: adc byte ptr [eax - 0x54], ch; add byte ptr [eax], al; add al, ch; ret 0xead7; 
0x00131bb4: adc byte ptr [eax - 0x57], 0xf5; inc dword ptr [ebx - 0x6d72fe1d]; rcl byte ptr [esi - 0xb]; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x0015fc3d: adc byte ptr [eax - 0x73], dl; or dword ptr [eax], 0xffffffb1; stc; call dword ptr [eax - 0x73]; 
0x0009441f: adc byte ptr [eax - 0x73], dl; sbb byte ptr [eax + 0x5b], 0xf9; call dword ptr [eax + 0x6a]; 
0x0011c934: adc byte ptr [eax - 0x73], dl; test dword ptr [edx + 0x4b], edi; stc; call dword ptr [eax - 1]; 
0x001710d2: adc byte ptr [eax - 0x73], dl; xchg dword ptr [eax], edx; pop esi; hlt; call dword ptr [eax - 0x18]; 
0x0013102b: adc byte ptr [eax - 0x73], dl; xchg esi, ecx; push edi; stc; call dword ptr [ebx + 0x50]; 
0x0008f07e: adc byte ptr [eax - 0x76f38aff], ch; ret 0xca83; 
0x0008e2d3: adc byte ptr [eax - 0x76f48aff], ch; ret 0xca83; 
0x000ba824: adc byte ptr [eax - 0x78f08206], al; ret 4; 
0x000b5722: adc byte ptr [eax - 0x80], al; stc; add byte ptr [ecx + eax + 0x40], dh; sub eax, dword ptr [esp + 4]; ret; 
0x0009b41e: adc byte ptr [eax - 0x900176a], 0x41; jge 0x9b429; lea edx, [edx - 0x179f20]; cmovne eax, edx; ret; 
0x001383bb: adc byte ptr [eax - 0xe], ch; call dword ptr [eax - 0x73]; 
0x00057bfd: adc byte ptr [eax - 1], 0x30; call 0x59450; add esp, 0x1c; ret; 
0x0007529d: adc byte ptr [eax - 1], 0x30; call 0x60130; add esp, 0x1c; ret; 
0x00138fa2: adc byte ptr [eax - 1], bh; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0009c217: adc byte ptr [eax], 0xa5; call 0x2ef431e; lea edx, [edx - 0x9d450]; cmovne eax, edx; ret; 
0x00119b8a: adc byte ptr [eax], 0xfb; out dx, al; call dword ptr [eax - 0x73]; 
0x00084bdb: adc byte ptr [eax], ah; je 0x84be8; add esp, 8; pop ebx; ret; 
0x000b43d5: adc byte ptr [eax], ah; ret; 
0x0007ff5e: adc byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ret 0x40c7; 
0x0008e1e1: adc byte ptr [eax], al; add byte ptr [eax], al; add esp, 0xc; ret; 
0x00115abe: adc byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0008e094: adc byte ptr [eax], al; add byte ptr [eax], al; cmove eax, ecx; ret; 
0x000d708c: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, -0x26; jne 0xd70a1; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x0010a490: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x10a4a0; pop ebx; ret; 
0x0010b02e: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x10b040; pop ebx; ret; 
0x00115a1c: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x115a30; pop ebx; ret; 
0x00116910: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x116920; pop ebx; ret; 
0x00116960: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x116970; pop ebx; ret; 
0x0011a7f0: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x11a800; pop ebx; ret; 
0x0011a840: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x11a850; pop ebx; ret; 
0x0011ea58: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x11ea68; pop ebx; ret; 
0x00121360: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x121370; pop ebx; ret; 
0x00122ff0: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x123000; pop ebx; ret; 
0x00123040: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x123050; pop ebx; ret; 
0x00123090: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x1230a0; pop ebx; ret; 
0x00037991: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x379a0; pop ebx; ret; 
0x00058a20: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x58a30; pop ebx; ret; 
0x00092c5c: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x92c70; pop ebx; ret; 
0x000938f4: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x93908; pop ebx; ret; 
0x00093ce4: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x93cf8; pop ebx; ret; 
0x000cc07e: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xcc090; pop ebx; ret; 
0x000df69c: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x0015a31a: adc byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x0015a27e: adc byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 4], 1; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x0015a256: adc byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x00037956: adc byte ptr [eax], al; add byte ptr [eax], al; mov ebx, edx; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x00109932: adc byte ptr [eax], al; add byte ptr [eax], al; mov ebx, edx; ret; 
0x00105020: adc byte ptr [eax], al; add byte ptr [eax], al; neg eax; pop ebx; ret; 
0x00115332: adc byte ptr [eax], al; add byte ptr [eax], al; pop ebp; pop edi; pop ebx; ret; 
0x000de889: adc byte ptr [eax], al; add byte ptr [eax], al; pop ebx; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x0008329e: adc byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0008d0b9: adc byte ptr [eax], al; add byte ptr [eax], al; pop ebx; ret; 
0x00197aeb: adc byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x0008fe3c: adc byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x00084516: adc byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x00068b3e: adc byte ptr [eax], al; add byte ptr [ebx + 0x555304ec], al; push edi; call dword ptr [eax + 0x1c]; 
0x000de8fc: adc byte ptr [eax], al; add byte ptr [ebx + 0xc0249c], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0019083e: adc byte ptr [eax], al; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0016d437: adc byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; mov ecx, 0x81000049; ret; 
0x0006c386: adc byte ptr [eax], al; add byte ptr [ebx - 0x4a00fb14], al; push esp; idiv edi; call dword ptr [esi - 1]; 
0x00172ada: adc byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x00057fda: adc byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x00061d86: adc byte ptr [eax], al; add byte ptr [ecx], al; ret; 
0x0010f1f8: adc byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x420f; 
0x00172a69: adc byte ptr [eax], al; add byte ptr [ecx], dh; shr byte ptr [edx], 0x8d; xchg dword ptr [esi + 0x31], esi; stc; call dword ptr [eax + 0x6a]; 
0x0002e558: adc byte ptr [eax], al; add byte ptr [edi], cl; dec ebp; ret 0xec83; 
0x000e1247: adc byte ptr [eax], al; add byte ptr [edi], cl; xchg esi, eax; ret 0xc085; 
0x0002475a: adc byte ptr [eax], al; add byte ptr [edx + 0x50], dl; call 0x8bf40; add esp, 0x1c; ret; 
0x00083573: adc byte ptr [eax], al; inc eax; add byte ptr [eax], al; ret; 
0x001280cc: adc byte ptr [eax], al; mov eax, dword ptr [eax - 0xc8]; mov eax, dword ptr [eax + 0x24]; ret; 
0x0012134d: adc byte ptr [eax], al; push ebx; mov eax, 0x34; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00122fdd: adc byte ptr [eax], al; push ebx; mov eax, 0xc3; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012307d: adc byte ptr [eax], al; push ebx; mov eax, 0xc4; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012302d: adc byte ptr [eax], al; push ebx; mov eax, 0xc5; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0011a883: adc byte ptr [eax], al; push ebx; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x001846c4: adc byte ptr [eax], bh; ret 0x840f; 
0x0015a37d: adc byte ptr [eax], ch; push eax; push edi; call dword ptr [ecx + 0x18]; 
0x001469ef: adc byte ptr [eax], cl; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x000b43c5: adc byte ptr [eax], dl; ret; 
0x0011f9a5: adc byte ptr [ebp + 0x1b840fc0], al; or al, 0; add byte ptr [ebp - 0x6ad9f7d], cl; call dword ptr [edx + 0x52]; 
0x0011f7c0: adc byte ptr [ebp + 0x1f840fc0], al; or byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; les ecx, ptr [esi - 7]; call dword ptr [eax + 0x57]; 
0x0002f974: adc byte ptr [ebp + 0x21840fc0], al; or edi, edi; call dword ptr [edx + 0x52]; 
0x0011f6b2: adc byte ptr [ebp + 0x25840fc0], al; add eax, 0xec830000; or byte ptr [ebp - 0x6b1e17d], cl; call dword ptr [eax + 0x57]; 
0x0007d52d: adc byte ptr [ebp + 0x292678c0], al; ret; 
0x000c508c: adc byte ptr [ebp + 0x2c928dc0], al; cmp al, 0; add byte ptr [edi], cl; inc esp; ret 0x108b; 
0x00083bea: adc byte ptr [ebp + 0x314174d2], al; idiv byte ptr [eax + 0xf0]; call dword ptr gs:[0x10]; 
0x00150e76: adc byte ptr [ebp + 0x31840fc0], al; add dword ptr [eax], eax; add byte ptr [ebp - 0x69f0b7d], cl; call dword ptr [eax - 0x73]; 
0x000c5142: adc byte ptr [ebp + 0x34928dc0], al; cmp al, 0; add byte ptr [edi], cl; inc esp; ret 0x4489; 
0x00042ede: adc byte ptr [ebp + 0x391574d2], al; ret; 
0x00104145: adc byte ptr [ebp + 0x391678db], al; fmul dword ptr [edi]; lahf; ret 0xe8c1; 
0x000c40d9: adc byte ptr [ebp + 0x391a74db], al; ret; 
0x000c3ff0: adc byte ptr [ebp + 0x391b74db], al; ret; 
0x0011a25f: adc byte ptr [ebp + 0x391c74c0], al; ret; 
0x0010f883: adc byte ptr [ebp + 0x393374c0], al; ret; 
0x0011f93a: adc byte ptr [ebp + 0x40840fc0], al; or eax, dword ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; rcl byte ptr [ecx - 7], cl; call dword ptr [eax + 0x57]; 
0x0007bf1f: adc byte ptr [ebp + 0x4889014a], cl; add al, 0xf; mov dh, 2; ret; 
0x00078634: adc byte ptr [ebp + 0x4889044a], cl; adc byte ptr [ecx - 0x9ec74ce], cl; ret 0xf02; 
0x00156b73: adc byte ptr [ebp + 0x4e0f0347], cl; ret 0xec83; 
0x0011f6e8: adc byte ptr [ebp + 0x4f840fc0], al; add eax, 0xec830000; or byte ptr [ebp - 0x6b3577d], cl; call dword ptr [eax + 0x57]; 
0x0015b211: adc byte ptr [ebp + 0x53890450], cl; adc bl, ch; ret; 
0x000392a6: adc byte ptr [ebp + 0x56], dl; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0009a6df: adc byte ptr [ebp + 0x5b2e74c0], al; pop esi; pop edi; ret; 
0x001a0c3c: adc byte ptr [ebp + 0x5bcf75ff], al; pop esi; pop edi; ret; 
0x000ff69a: adc byte ptr [ebp + 0x5be175f6], al; pop esi; pop edi; ret; 
0x001406f0: adc byte ptr [ebp + 0x5e5b3e04], cl; pop edi; ret; 
0x000f7edd: adc byte ptr [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret; 
0x0011c0f1: adc byte ptr [ebp + 0x5e5bf865], cl; pop ebp; ret; 
0x000ad8ed: adc byte ptr [ebp + 0x5e5f1147], cl; pop ebx; ret; 
0x000ad90f: adc byte ptr [ebp + 0x5e5f1247], cl; pop ebx; ret; 
0x000ad94d: adc byte ptr [ebp + 0x5e5f1447], cl; pop ebx; ret; 
0x000ad9d1: adc byte ptr [ebp + 0x5e5f1847], cl; pop ebx; ret; 
0x000adae1: adc byte ptr [ebp + 0x5e5f2047], cl; pop ebx; ret; 
0x0011f862: adc byte ptr [ebp + 0x60840fc0], al; or dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f714], al; and dword ptr [eax - 7], edx; call dword ptr [eax + 0x57]; 
0x0014df70: adc byte ptr [ebp + 0xf0974c0], al; lahf; ret; 
0x00082cfc: adc byte ptr [ebp + 0xf0f75d2], al; add ebp, edx; xor eax, eax; add esp, 0xc; ret; 
0x00087d8c: adc byte ptr [ebp + 9], dh; add esp, 0xc; ret; 
0x0011f98b: adc byte ptr [ebp - 0x107bf040], al; or eax, dword ptr [eax]; add byte ptr [ebp - 0x6adc37d], cl; call dword ptr [ecx + 0x51]; 
0x00140bb9: adc byte ptr [ebp - 0x146f8b40], al; ret; 
0x0012a1d0: adc byte ptr [ebp - 0x17af040], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x1334a], cl; jmp dword ptr [ebp - 0x75]; 
0x00093a46: adc byte ptr [ebp - 0x195d7f7d], cl; call dword ptr [eax - 0x73]; 
0x000887da: adc byte ptr [ebp - 0x1a192f80], cl; call dword ptr [eax - 0x73]; 
0x0009c218: adc byte ptr [ebp - 0x1a7f0018], ah; add cl, byte ptr [ebp - 0x9d44f6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000aa6a3: adc byte ptr [ebp - 0x1b160fa5], cl; idiv edi; jmp dword ptr [esi + 0xf]; 
0x0011fa5b: adc byte ptr [ebp - 0x1e7bf040], al; or eax, 0x838d0000; push ebx; push esp; stc; call dword ptr [edx + 0x52]; 
0x000f1f55: adc byte ptr [ebp - 0x2b7bf040], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0004fe51: adc byte ptr [ebp - 0x35f34b], cl; call dword ptr [eax - 0x48]; 
0x000331c0: adc byte ptr [ebp - 0x35f80], cl; call dword ptr [eax - 0x75]; 
0x0011f970: adc byte ptr [ebp - 0x3b7bf040], al; or eax, dword ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; sbb dword ptr [edx - 7], edx; call dword ptr [eax + 0x57]; 
0x0015b059: adc byte ptr [ebp - 0x3d6af040], al; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0015aad4: adc byte ptr [ebp - 0x3f6af040], al; add esp, 8; movzx eax, al; pop ebx; ret; 
0x001500f1: adc byte ptr [ebp - 0x3f6bf040], al; add esp, 0xc; ret; 
0x0016c1b7: adc byte ptr [ebp - 0x3f7bf040], al; add byte ptr [eax], al; add byte ptr [ebx - 0x6c72f714], al; clc; stc; call dword ptr [edx - 0x77]; 
0x00154d8f: adc byte ptr [ebp - 0x3f7bf040], al; add byte ptr [eax], al; add byte ptr [ebx], al; je 0x154dbf; cmp al, 0x89; ret; 
0x000cd4fa: adc byte ptr [ebp - 0x427bf040], al; add eax, dword ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; pop ebx; sub bh, cl; call dword ptr [eax + 0x56]; 
0x0013df13: adc byte ptr [ebp - 0x4377f040], al; add al, byte ptr [eax]; add byte ptr [ecx], bh; ret; 
0x000e15bb: adc byte ptr [ebp - 0x477bf040], al; add byte ptr [eax], al; add byte ptr [ebx - 0x18f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x00105c4b: adc byte ptr [ebp - 0x477bf040], al; add byte ptr [eax], al; add byte ptr [ebx - 0x19f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x00142766: adc byte ptr [ebp - 0x4e7bf040], al; add al, 0; add byte ptr [esi - 0x3f], ah; ret; 
0x001322cd: adc byte ptr [ebp - 0x657bf040], al; add dword ptr [eax], eax; add byte ptr [ecx - 0x76ff743d], cl; ret 0xce80; 
0x0013bfdf: adc byte ptr [ebp - 0x658eb7e], cl; call dword ptr [eax - 0x73]; 
0x00102584: adc byte ptr [ebp - 0x6614f79], cl; call dword ptr [eax - 0x73]; 
0x00101474: adc byte ptr [ebp - 0x6615b79], cl; call dword ptr [eax - 0x73]; 
0x001018b1: adc byte ptr [ebp - 0x6615b7a], cl; call dword ptr [eax - 0x73]; 
0x001016b6: adc byte ptr [ebp - 0x6615b7f], cl; call dword ptr [eax - 0x73]; 
0x001027af: adc byte ptr [ebp - 0x6617779], cl; call dword ptr [eax - 0x73]; 
0x0011f71e: adc byte ptr [ebp - 0x67bf040], al; add eax, 0xec830000; or byte ptr [ebp - 0x6b2997d], cl; call dword ptr [eax + 0x57]; 
0x00082dea: adc byte ptr [ebp - 0x6817780], cl; call dword ptr [eax - 0x18]; 
0x00161f29: adc byte ptr [ebp - 0x69bdb79], cl; call dword ptr [eax - 0x73]; 
0x001654ae: adc byte ptr [ebp - 0x69c1f7a], cl; call dword ptr [eax - 0x73]; 
0x00154d80: adc byte ptr [ebp - 0x69dbe7f], cl; call dword ptr [eax - 0x18]; 
0x00153204: adc byte ptr [ebp - 0x69e3180], cl; call dword ptr [eax + 0x51]; 
0x00153874: adc byte ptr [ebp - 0x69e3180], cl; call dword ptr [eax + 0x57]; 
0x00151d9b: adc byte ptr [ebp - 0x69e767f], cl; call dword ptr [eax + 0x53]; 
0x00151f88: adc byte ptr [ebp - 0x69e7f7f], cl; call dword ptr [eax + 0x53]; 
0x00151f10: adc byte ptr [ebp - 0x69e867f], cl; call dword ptr [eax + 0x53]; 
0x00152226: adc byte ptr [ebp - 0x69ebb68], cl; call dword ptr [ebx - 0x73]; 
0x0011f703: adc byte ptr [ebp - 0x6b7bf040], al; add eax, 0xec830000; or byte ptr [ebp - 0x6b2ed7d], cl; call dword ptr [eax + 0x57]; 
0x00119dfd: adc byte ptr [ebp - 0x6d1786f], cl; inc dword ptr [ebp - 0x17f88b40]; mov dword ptr [0x89fffffd], eax; ret 0x4c8b; 
0x00152394: adc byte ptr [ebp - 0x6d5a479], cl; call dword ptr [eax + 0x53]; 
0x0011f811: adc byte ptr [ebp - 0x6d7bf040], al; or byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; xchg byte ptr [edi - 7], cl; call dword ptr [eax + 0x57]; 
0x00163b1a: adc byte ptr [ebp - 0x6fffd98c], cl; sub esp, 0xc; mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 4]; 
0x0008eb5b: adc byte ptr [ebp - 0x72bf8b40], al; inc edi; inc dword ptr [ebx - 0x69f00208]; ret; 
0x001596ab: adc byte ptr [ebp - 0x74728b40], al; inc ebx; add al, 0x83; in al, dx; or al, 0x53; call dword ptr [eax + 0x10]; 
0x00161be8: adc byte ptr [ebp - 0x748c8b40], al; inc esi; cmp al, 0x83; in al, dx; or al, 0x55; call dword ptr [eax + 0x10]; 
0x00121f38: adc byte ptr [ebp - 0x74cc8b2e], al; pop esp; and al, 0xc; mov eax, 0x178; call dword ptr gs:[0x10]; 
0x000df9ea: adc byte ptr [ebp - 0x74e28b40], al; test dword ptr [edx + ebp*8 - 0x137c0001], ebp; or byte ptr [ebp - 0x6b8fb80], cl; call dword ptr [eax + 0x53]; 
0x00166599: adc byte ptr [ebp - 0x74efdbac], cl; inc ecx; add al, 0x52; push ecx; call dword ptr [eax + 0x24]; 
0x00165b29: adc byte ptr [ebp - 0x74efdbac], cl; inc ecx; add al, 0x52; push ecx; call dword ptr [eax + 4]; 
0x0019781d: adc byte ptr [ebp - 0x74f18a2e], al; inc esp; and al, 0xc; pop edi; ret; 
0x00091fb5: adc byte ptr [ebp - 0x76a98125], al; ret; 
0x00152b7c: adc byte ptr [ebp - 0x76dc8b40], al; ret 0x488d; 
0x00126c87: adc byte ptr [ebp - 0x76e78b40], al; ret; 
0x00190837: adc byte ptr [ebp - 0x79f00f93], cl; call dword ptr [eax]; 
0x0018b733: adc byte ptr [ebp - 0x79f00f93], cl; ret; 
0x000a593c: adc byte ptr [ebp - 0x7af0efb6], cl; mov al, byte ptr [0x5b5f0000]; ret; 
0x0013c313: adc byte ptr [ebp - 0x7c178a40], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x001a0dab: adc byte ptr [ebp - 0x7c1b8a0a], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x001a06ec: adc byte ptr [ebp - 0x7c1c8a0a], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0015c9e7: adc byte ptr [ebp - 0x7c208b40], al; in al, dx; or byte ptr [ebp - 0xc48df79], cl; call dword ptr [eax - 0x73]; 
0x00159473: adc byte ptr [ebp - 0x7c388b40], al; ret; 
0x00159fbf: adc byte ptr [ebp - 0x7c398b40], al; ret; 
0x00158784: adc byte ptr [ebp - 0x7c4d8b40], al; in al, dx; or byte ptr [ebp - 0xc48df79], cl; call dword ptr [eax - 0x73]; 
0x00179e10: adc byte ptr [ebp - 0x7c548b40], al; in al, dx; or byte ptr [ebx - 0x72e7dbbc], cl; cmp byte ptr [ebx + 0x4a], 0xf9; call dword ptr [eax + 0x53]; 
0x00159b53: adc byte ptr [ebp - 0x7c568b40], al; in al, dx; or al, 0x56; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x0015a208: adc byte ptr [ebp - 0x7c578b40], al; ret; 
0x0015a059: adc byte ptr [ebp - 0x7c5e8b40], al; ret; 
0x0015bcba: adc byte ptr [ebp - 0x7c648b40], al; in al, dx; add al, 0x83; ret; 
0x000dfa07: adc byte ptr [ebp - 0x7c6b8a40], al; in al, dx; or byte ptr [ebp - 0x15277b], cl; call dword ptr [eax - 1]; 
0x0015feab: adc byte ptr [ebp - 0x7c9f8a40], al; in al, dx; or byte ptr [ebp - 0x8b63], cl; call dword ptr [esi + 0x53]; 
0x0016cf36: adc byte ptr [ebp - 0x7cb08b40], al; in al, dx; or byte ptr [ebp - 0x64c1b45], cl; call dword ptr [edi + 0x56]; 
0x0014a9ff: adc byte ptr [ebp - 0x7cbd8b40], al; in al, dx; or al, 0x89; ret; 
0x0014a00f: adc byte ptr [ebp - 0x7cc08b40], al; in al, dx; add al, 0x89; ret; 
0x0011b6ad: adc byte ptr [ebp - 0x7cc18b40], al; ret; 
0x00164744: adc byte ptr [ebp - 0x7cc88b40], al; in al, dx; or al, 0x8b; inc ebp; or al, 0x57; call dword ptr [eax + 0x10]; 
0x000fc5b1: adc byte ptr [ebp - 0x7ccd8a40], al; in al, dx; or byte ptr [ebp - 0x6bf7f79], cl; call dword ptr [eax + 0x53]; 
0x000247b9: adc byte ptr [ebp - 0x7ccd8b40], al; ret; 
0x00118fb2: adc byte ptr [ebp - 0x7cd38740], al; in al, dx; add al, 0x89; ret; 
0x0015caa2: adc byte ptr [ebp - 0x7cd68b40], al; in al, dx; add al, 0x83; ret; 
0x0012d5c0: adc byte ptr [ebp - 0x7ce48b40], al; ret; 
0x001315cb: adc byte ptr [ebp - 0x7ce4e98c], cl; ret; 
0x0015bcec: adc byte ptr [ebp - 0x7ce58b40], al; in al, dx; add al, 0x83; ret; 
0x001500da: adc byte ptr [ebp - 0x7ce78b2e], al; in al, dx; or byte ptr [ebp - 0x6bca97f], cl; call dword ptr [eax + 0x52]; 
0x00048b4b: adc byte ptr [ebp - 0x7cef8b40], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0017097d: adc byte ptr [ebp - 0x7cf18a2e], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x001152ad: adc byte ptr [ebp - 0x7cf18a40], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0011b71d: adc byte ptr [ebp - 0x7cf18b40], al; ret; 
0x001a0a3a: adc byte ptr [ebp - 0x7cf28b2e], al; in al, dx; or al, 0x50; call edx; 
0x00037687: adc byte ptr [ebp - 0x7cf38a40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x00170e18: adc byte ptr [ebp - 0x7cf48a2e], al; les ecx, ptr [eax]; pop ebx; ret; 
0x00171f81: adc byte ptr [ebp - 0x7cf58a25], al; les ecx, ptr [eax]; pop ebx; ret; 
0x0016b91a: adc byte ptr [ebp - 0x7cf68740], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0015a0ba: adc byte ptr [ebp - 0x7cf68a40], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0002df0a: adc byte ptr [ebp - 0x7cf68b40], al; in al, dx; or al, 0x56; call eax; 
0x001328d2: adc byte ptr [ebp - 0x7cf68b40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x00125223: adc byte ptr [ebp - 0x7cf78740], al; les ecx, ptr [eax]; pop ebx; ret; 
0x0007c5e3: adc byte ptr [ebp - 0x7cf78b40], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00037916: adc byte ptr [ebp - 0x7cfa8a40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x000441ab: adc byte ptr [ebp - 0x7cffd98c], cl; ret; 
0x0011f955: adc byte ptr [ebp - 0x7f7bf040], al; or eax, dword ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; not byte ptr [ecx - 7]; call dword ptr [eax + 0x57]; 
0x000ccfc6: adc byte ptr [ebp - 0x7fd38a2e], al; add byte ptr ds:[edi], cl; test byte ptr [eax + eax - 0x137d0000], cl; or byte ptr [ebp - 0x6baf47d], cl; call dword ptr [eax + 0x56]; 
0x001670f3: adc byte ptr [ebp - 0x87af040], al; add byte ptr [eax], al; add byte ptr [ebp - 0x69ae97d], cl; call dword ptr [ebp + 0x6a]; 
0x001a0872: adc byte ptr [ebp - 0x897df7d], cl; call dword ptr [eax - 1]; 
0x00136898: adc byte ptr [ebp - 0x97af040], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x1334a], cl; jmp dword ptr [ebp - 0x75]; 
0x00149459: adc byte ptr [ebp - 0xb98b40], al; je 0x149485; xor al, 0x89; ret; 
0x0013c4b4: adc byte ptr [ebp - 0xc7bf040], al; add byte ptr [eax], al; add byte ptr [ebx - 0x1337d], cl; jmp dword ptr [ebp + 3]; 
0x000645ea: adc byte ptr [ebp - 0xc7bf040], al; or al, 0; add byte ptr [ebx - 0x50f63], cl; call ecx; 
0x001586e2: adc byte ptr [ebp - 0xd1a0f7d], cl; call dword ptr [eax - 0x73]; 
0x0013cca2: adc byte ptr [ebp - 0xed39f7d], cl; call dword ptr [eax - 0x73]; 
0x0002414c: adc byte ptr [ebp - 0xf7bf040], al; add byte ptr [eax], al; add byte ptr [ecx - 0x76ff7439], cl; ret 0xce80; 
0x00076a34: adc byte ptr [ebp - 7], bh; call dword ptr [eax - 0x73]; 
0x0009a58d: adc byte ptr [ebx + 0x10], dh; mov eax, dword ptr [eax + 4]; test eax, eax; jne 0x9a588; xor eax, eax; ret; 
0x00162848: adc byte ptr [ebx + 0x10c48303], cl; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x000944f0: adc byte ptr [ebx + 0x11c246c], cl; pop eax; add al, 0x89; ret; 
0x00049834: adc byte ptr [ebx + 0x128244c], cl; ret; 
0x000d8bf4: adc byte ptr [ebx + 0x167f01f8], al; pop ebx; pop esi; pop edi; ret; 
0x0008bcef: adc byte ptr [ebx + 0x1b7501fa], al; or dword ptr [eax], 0x40000000; xor eax, eax; ret; 
0x0015b19b: adc byte ptr [ebx + 0x1b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x000d8b7e: adc byte ptr [ebx + 0x1c7f01f8], al; add esp, 4; pop ebx; pop esi; ret; 
0x000d898d: adc byte ptr [ebx + 0x1d7f01fa], al; add esp, 0x14; pop ebx; pop esi; ret; 
0x0003af93: adc byte ptr [ebx + 0x1f7f01f8], al; add esp, 4; pop ebx; pop esi; ret; 
0x0016bb6a: adc byte ptr [ebx + 0x207f01fa], al; add esp, 0x18; pop ebx; ret; 
0x00087f51: adc byte ptr [ebx + 0x217f01fa], al; add esp, 0x18; pop ebx; ret; 
0x0016bd90: adc byte ptr [ebx + 0x227f01fa], al; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016bade: adc byte ptr [ebx + 0x247f01fa], al; add esp, 0x18; pop ebx; ret; 
0x00081f6e: adc byte ptr [ebx + 0x2890853], cl; add esp, 4; pop ebx; pop esi; ret; 
0x0010153c: adc byte ptr [ebx + 0x3688b84], cl; stc; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x001480ad: adc byte ptr [ebx + 0x390c244c], cl; ror byte ptr [edi], 1; dec edi; ret 0x4189; 
0x000d8f1d: adc byte ptr [ebx + 0x390c245c], cl; ret 0x470f; 
0x00056331: adc byte ptr [ebx + 0x3918245c], cl; ret; 
0x000ea1c0: adc byte ptr [ebx + 0x39242454], cl; ret; 
0x00056173: adc byte ptr [ebx + 0x3924245c], cl; ret; 
0x0013c041: adc byte ptr [ebx + 0x438b1853], cl; adc al, 3; inc ebx; adc byte ptr [ecx], bh; ret 0x6273; 
0x0003b6e3: adc byte ptr [ebx + 0x448b10c4], al; and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x3b6f8; add esp, 0x1c; ret; 
0x0003b736: adc byte ptr [ebx + 0x448b10c4], al; and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x3b74b; add esp, 0x1c; ret; 
0x00161f15: adc byte ptr [ebx + 0x4508b03], cl; mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x001204b8: adc byte ptr [ebx + 0x468801e0], al; or byte ptr [eax - 0x7c72ebba], cl; ret; 
0x00162e3c: adc byte ptr [ebx + 0x478b0cec], al; add al, 0x57; call dword ptr [eax + 0x10]; 
0x000fa22f: adc byte ptr [ebx + 0x4b8d10c6], al; add dword ptr [ebp - 0x7c398a01], eax; ret; 
0x00174314: adc byte ptr [ebx + 0x4c48303], cl; pop ebx; pop esi; jmp eax; 
0x0016284d: adc byte ptr [ebx + 0x508b0cec], al; add al, 0x50; call dword ptr [edx + 0x10]; 
0x0016659d: adc byte ptr [ebx + 0x51520441], cl; call dword ptr [eax + 0x24]; 
0x00165b2d: adc byte ptr [ebx + 0x51520441], cl; call dword ptr [eax + 4]; 
0x00095c85: adc byte ptr [ebx + 0x574fff8], al; add esp, 0xc; ret; 
0x000b4212: adc byte ptr [ebx + 0x58ebf0e2], al; lea esi, [esi]; nop; xor eax, eax; ret; 
0x000b31a8: adc byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000afd65: adc byte ptr [ebx + 0x5e082444], cl; ret; 
0x00078125: adc byte ptr [ebx + 0x5e5b04c4], al; jmp eax; 
0x00022828: adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000218d7: adc byte ptr [ebx + 0x5e5b04c4], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0002f635: adc byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x00095516: adc byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x00081bb1: adc byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; jmp eax; 
0x00023cef: adc byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x000f0b1f: adc byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x0013bb6c: adc byte ptr [ebx + 0x5e5b4cc4], al; pop edi; pop ebp; ret; 
0x00029518: adc byte ptr [ebx + 0x5e5b7cc4], al; pop edi; pop ebp; ret; 
0x0015a76e: adc byte ptr [ebx + 0x5e], bl; jmp eax; 
0x0002f765: adc byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0002bb56: adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00090afe: adc byte ptr [ebx + 0x5e], bl; ret; 
0x00163e31: adc byte ptr [ebx + 0x650c2444], cl; sub eax, dword ptr [0x14]; jne 0x163e43; add esp, 0x1c; ret; 
0x0003b6e6: adc byte ptr [ebx + 0x650c2444], cl; sub eax, dword ptr [0x14]; jne 0x3b6f8; add esp, 0x1c; ret; 
0x0003b739: adc byte ptr [ebx + 0x650c2444], cl; sub eax, dword ptr [0x14]; jne 0x3b74b; add esp, 0x1c; ret; 
0x00021dc7: adc byte ptr [ebx + 0x650c244c], cl; sub ecx, dword ptr [0x14]; jne 0x21dd9; add esp, 0x1c; ret; 
0x001195e7: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x1195f9; add esp, 0x1c; ret; 
0x001745c1: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x1745d3; add esp, 0x1c; ret; 
0x0003b796: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x3b7a8; add esp, 0x1c; ret; 
0x0003b7e9: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x3b7fb; add esp, 0x1c; ret; 
0x0003b836: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x3b848; add esp, 0x1c; ret; 
0x0003b889: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x3b89b; add esp, 0x1c; ret; 
0x000cad86: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0xcad98; add esp, 0x1c; ret; 
0x000d482a: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0xd483c; add esp, 0x1c; ret; 
0x000d6eba: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0xd6ecc; add esp, 0x1c; ret; 
0x0016569a: adc byte ptr [ebx + 0x651c2444], cl; sub eax, dword ptr [0x14]; jne 0x1656ac; add esp, 0x2c; ret; 
0x0013362d: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x133645; add esp, 0x2c; ret; 
0x0013369d: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x1336b5; add esp, 0x2c; ret; 
0x0013aade: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x13aaf0; add esp, 0x2c; ret; 
0x0003ad54: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x3ad66; add esp, 0x2c; ret; 
0x0003ae84: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x3ae96; add esp, 0x2c; ret; 
0x000864f6: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x86508; add esp, 0x2c; ret; 
0x0008ae92: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x8aea4; add esp, 0x2c; ret; 
0x0008c1f6: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x8c208; add esp, 0x2c; ret; 
0x0008c656: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x8c668; add esp, 0x2c; ret; 
0x0008cb42: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x8cb54; add esp, 0x2c; ret; 
0x0008cf92: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x8cfa4; add esp, 0x2c; ret; 
0x001636b3: adc byte ptr [ebx + 0x653c2444], cl; sub eax, dword ptr [0x14]; jne 0x1636c5; add esp, 0x4c; ret; 
0x00163723: adc byte ptr [ebx + 0x653c2444], cl; sub eax, dword ptr [0x14]; jne 0x163735; add esp, 0x4c; ret; 
0x00163793: adc byte ptr [ebx + 0x653c2444], cl; sub eax, dword ptr [0x14]; jne 0x1637a5; add esp, 0x4c; ret; 
0x001637f6: adc byte ptr [ebx + 0x653c2444], cl; sub eax, dword ptr [0x14]; jne 0x163808; add esp, 0x4c; ret; 
0x00163856: adc byte ptr [ebx + 0x653c2444], cl; sub eax, dword ptr [0x14]; jne 0x163868; add esp, 0x4c; ret; 
0x001638c3: adc byte ptr [ebx + 0x653c2444], cl; sub eax, dword ptr [0x14]; jne 0x1638d5; add esp, 0x4c; ret; 
0x00163943: adc byte ptr [ebx + 0x653c2444], cl; sub eax, dword ptr [0x14]; jne 0x163955; add esp, 0x4c; ret; 
0x00163643: adc byte ptr [ebx + 0x653c2454], cl; sub edx, dword ptr [0x14]; jne 0x163655; add esp, 0x4c; ret; 
0x0010440a: adc byte ptr [ebx + 0x66082444], cl; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0010fb87: adc byte ptr [ebx + 0x66082454], cl; mov dword ptr [edx + 0x3e], eax; xor eax, eax; ret; 
0x00111517: adc byte ptr [ebx + 0x66082454], cl; mov dword ptr [edx + 0x42], eax; xor eax, eax; ret; 
0x0011e7e3: adc byte ptr [ebx + 0x74c08500], cl; inc esi; call eax; 
0x0008bf4d: adc byte ptr [ebx + 0xd7402e2], al; xor eax, eax; ret; 
0x001a074e: adc byte ptr [ebx + 0xff483], cl; add byte ptr [ebp - 0x7cec8b40], al; in al, dx; or byte ptr [ebp - 0x89a2f6d], cl; call dword ptr [edx + 0x50]; 
0x001631bf: adc byte ptr [ebx + 5], bl; nop; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x0016324f: adc byte ptr [ebx + 5], bl; xchg esp, eax; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x0011b8a9: adc byte ptr [ebx - 0x13362], cl; dec dword ptr [ecx - 0xab7b]; jmp dword ptr [ebp - 0x5f]; 
0x0007bd2b: adc byte ptr [ebx - 0x1337d], cl; jmp dword ptr [ebp - 0x75]; 
0x00152ad7: adc byte ptr [ebx - 0x14f3dbac], cl; ret 0x9066; 
0x0004a9bd: adc byte ptr [ebx - 0x14f3dbbc], cl; ret 0x748d; 
0x0016bdcd: adc byte ptr [ebx - 0x14f3dbbc], cl; ret 0x838b; 
0x0012ab7d: adc byte ptr [ebx - 0x14f3dbbc], cl; ret; 
0x000d6e18: adc byte ptr [ebx - 0x1916ef90], cl; idiv edi; call dword ptr [ecx + 0x50]; 
0x0002e289: adc byte ptr [ebx - 0x1cb6b], cl; inc dword ptr [ecx]; ret 0xd139; 
0x0015a9b6: adc byte ptr [ebx - 0x2776fb3c], al; pop ebx; pop esi; jmp eax; 
0x0011985f: adc byte ptr [ebx - 0x2776fb3c], al; pop ebx; pop esi; ret; 
0x0004f717: adc byte ptr [ebx - 0x362743], al; call dword ptr [eax]; 
0x000c5f78: adc byte ptr [ebx - 0x363743], al; call dword ptr [eax]; 
0x00078122: adc byte ptr [ebx - 0x3b7cefc0], cl; add al, 0x5b; pop esi; jmp eax; 
0x0015920c: adc byte ptr [ebx - 0x3b7cfbbd], cl; adc al, 0x53; call dword ptr [eax + 0x10]; 
0x001482b0: adc byte ptr [ebx - 0x3b7cfe18], al; add al, 0x5b; pop esi; ret; 
0x00158696: adc byte ptr [ebx - 0x3f7ae3c0], cl; je 0x1586a7; sub esp, 0xc; push esi; call eax; 
0x00158b64: adc byte ptr [ebx - 0x3f7ae3c0], cl; je 0x158b75; sub esp, 0xc; push esi; call eax; 
0x00159b73: adc byte ptr [ebx - 0x3f7ae3c0], cl; je 0x159b84; sub esp, 0xc; push esi; call eax; 
0x00159e41: adc byte ptr [ebx - 0x3f7ae3c0], cl; je 0x159cca; sub esp, 0xc; push edi; call eax; 
0x00159f2a: adc byte ptr [ebx - 0x3f7ae3c0], cl; je 0x159f3b; sub esp, 0xc; push edi; call eax; 
0x0015e2d9: adc byte ptr [ebx - 0x3f7ae3c0], cl; je 0x15e2ea; sub esp, 0xc; push esi; call eax; 
0x0015f9fe: adc byte ptr [ebx - 0x3f7ae3c0], cl; je 0x15fa0f; sub esp, 0xc; push edi; call eax; 
0x00160dc7: adc byte ptr [ebx - 0x3f7ae3c0], cl; je 0x160dd8; sub esp, 0xc; push ebp; call eax; 
0x0002df07: adc byte ptr [ebx - 0x3f7aefba], cl; je 0x2df18; sub esp, 0xc; push esi; call eax; 
0x0008bf1b: adc byte ptr [ebx - 0x3f7af7bd], cl; je 0x8bf35; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x0009a58f: adc byte ptr [ebx - 0x3f7afbc0], cl; jne 0x9a588; xor eax, eax; ret; 
0x000802b4: adc byte ptr [ebx - 0x3f8a0008], al; add esp, 4; pop ebx; pop esi; ret; 
0x0008416a: adc byte ptr [ebx - 0x3fcefb3c], al; pop ebx; pop esi; ret; 
0x00090a66: adc byte ptr [ebx - 0x3fe6fe08], al; pop ebx; pop esi; pop edi; ret; 
0x0011f3d1: adc byte ptr [ebx - 0x47f3dba4], cl; in eax, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00123a91: adc byte ptr [ebx - 0x47f3dba4], cl; inc dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011f431: adc byte ptr [ebx - 0x47f3dba4], cl; out 0, al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011f301: adc byte ptr [ebx - 0x47f3dba4], cl; out 0, eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010c241: adc byte ptr [ebx - 0x47f3dba4], cl; xor dword ptr [ecx], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e2ecb: adc byte ptr [ebx - 0x4937b], cl; dec dword ptr [ecx]; ret 0x840f; 
0x001479b2: adc byte ptr [ebx - 0x4c72f314], al; fistp dword ptr [esi - 7]; call dword ptr [esi - 0x18]; 
0x00147986: adc byte ptr [ebx - 0x4c72f314], al; into; pop esi; stc; call dword ptr [esi - 0x18]; 
0x000649cc: adc byte ptr [ebx - 0x50f7b], cl; call dword ptr [edx - 1]; 
0x000c7aa0: adc byte ptr [ebx - 0x57ccf16], al; or al, byte ptr [ebx - 0x3f7cff2f]; add al, 0x39; ret; 
0x0005bb6c: adc byte ptr [ebx - 0x5eb6b], cl; inc dword ptr [ebp + 0x7d840fc0]; xor dword ptr [eax], eax; add byte ptr [ebx - 0x5db73], cl; call ecx; 
0x001574e6: adc byte ptr [ebx - 0x6bf00008], al; ret 0xe1e9; 
0x00072316: adc byte ptr [ebx - 0x6bf00008], al; ret; 
0x000677fa: adc byte ptr [ebx - 0x6bf0f505], al; ret; 
0x00166fa5: adc byte ptr [ebx - 0x6bf0fe08], al; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x001194ef: adc byte ptr [ebx - 0x723cf33c], al; je 0x11951d; add byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x75]; 
0x0011942d: adc byte ptr [ebx - 0x723cf33c], al; mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x1337e], cl; jmp dword ptr [ebp - 0x75]; 
0x0012e6ec: adc byte ptr [ebx - 0x72affb14], al; cmp dword ptr [eax + 0x57], -7; call dword ptr [eax + 0x57]; 
0x0012e729: adc byte ptr [ebx - 0x72affb14], al; xor dword ptr [esi + 0x57], 0xfffffff9; call dword ptr [eax + 0x57]; 
0x0007a60c: adc byte ptr [ebx - 0x72ebdbbc], cl; dec edx; add ebx, ebp; mov esp, 0x7e24828d; stc; call dword ptr [eax - 0x73]; 
0x0009b8d3: adc byte ptr [ebx - 0x72f3db94], cl; push esi; dec dword ptr [ebx + 0x3904244c]; ret; 
0x0007c896: adc byte ptr [ebx - 0x73f0ff21], al; mov al, byte ptr [0x39000001]; ret 0x448b; 
0x00020de1: adc byte ptr [ebx - 0x74acf314], al; pop ebp; fsubr st(0); ret 0xa; 
0x000f71a6: adc byte ptr [ebx - 0x74bbdbb4], cl; sbb byte ptr [ebx + 0x3c8da904], cl; ret; 
0x000932f9: adc byte ptr [ebx - 0x74ebdbac], cl; pop esp; and al, 0xc; call dword ptr gs:[0x10]; 
0x00123f28: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00123b28: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x00109bc8: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x0010c298: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x0010c1d8: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x0010afe8: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x001152f8: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x0010c208: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x55; call dword ptr gs:[0x10]; 
0x00117028: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x00120fc8: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x00123bd8: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x001238d8: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x0011c528: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x001239c8: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x001239f8: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x000fafe8: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x00123c48: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000de878: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x0010bbe8: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x0010bbb8: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000df6b8: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000df6e8: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x0010bb88: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x0011c658: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x0011c628: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x0011f3f8: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x0011f458: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x0011f328: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x00076007: adc byte ptr [ebx - 0x75], bl; inc edi; adc al, 0x5e; pop edi; jmp eax; 
0x00076167: adc byte ptr [ebx - 0x75], bl; inc edi; adc byte ptr [esi + 0x5f], bl; jmp eax; 
0x0007cd21: adc byte ptr [ebx - 0x75], bl; inc esi; adc byte ptr [esi + 0x5f], bl; jmp eax; 
0x00155033: adc byte ptr [ebx - 0x76b3db94], cl; ret; 
0x00124a28: adc byte ptr [ebx - 0x76bfdbbc], cl; inc esp; and al, 0x14; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00125317: adc byte ptr [ebx - 0x76c3dbbc], cl; inc esp; and al, 0x18; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0019aa8f: adc byte ptr [ebx - 0x76cfdb8c], cl; ret 0x448b; 
0x00096e92: adc byte ptr [ebx - 0x76d7db94], cl; jl 0x96ebe; adc al, 0x8d; inc edx; jmp dword ptr [ecx]; 
0x00111a73: adc byte ptr [ebx - 0x76e7db8c], cl; retf 0x7c8b; and al, 0x1c; sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x0016b5f9: adc byte ptr [ebx - 0x76f3dbb4], cl; ret 0x408d; 
0x0007fcc5: adc byte ptr [ebx - 0x76f7dbb4], cl; ret; 
0x00104fe9: adc byte ptr [ebx - 0x76fbdbbc], cl; nop; or byte ptr [ecx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x0007663b: adc byte ptr [ebx - 0x77], bl; rcr byte ptr [esi + 0x5f], 1; ret; 
0x0013b012: adc byte ptr [ebx - 0x7972f314], al; subps xmm7, xmm1; call dword ptr [eax - 0x18]; 
0x000a61f3: adc byte ptr [ebx - 0x79f0ef15], al; cmp eax, -1; inc dword ptr [ebp + 0x2b850fc0]; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000302bd: adc byte ptr [ebx - 0x7a72f714], al; push esp; jae 0x302bf; dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x0006844d: adc byte ptr [ebx - 0x7af00008], al; ret 0xfffa; 
0x001197b6: adc byte ptr [ebx - 0x7af3dbac], cl; sal byte ptr [ebp - 0x41], 0x83; in al, dx; or byte ptr [ebp - 0x6b3e06a], cl; call dword ptr [edx - 0x77]; 
0x001197d5: adc byte ptr [ebx - 0x7af3dbac], cl; sal byte ptr [ebp - 0x60], 0x83; in al, dx; or byte ptr [ebp - 0x6b5156a], cl; call dword ptr [edx - 0x77]; 
0x0016d07b: adc byte ptr [ebx - 0x7af7dbac], cl; sal byte ptr [esp + esi - 0x7d], 0xec; or byte ptr [ebp - 0x69a164a], cl; call dword ptr [esi + 0x53]; 
0x00167a37: adc byte ptr [ebx - 0x7bf00003], al; test dword ptr [eax], 0x4d8b0000; add byte ptr [ebx - 0x74bbdbac], cl; inc ecx; or byte ptr [ecx], bh; ret 0x5175; 
0x00148ebf: adc byte ptr [ebx - 0x7bf00006], al; psadbw mm7, mm7; dec dword ptr [ebx + 0x39702444]; ret 0x840f; 
0x00061d7f: adc byte ptr [ebx - 0x7bf00008], al; das; adc byte ptr [eax], al; add byte ptr [ecx], al; ret; 
0x00065d41: adc byte ptr [ebx - 0x7bf00008], al; lodsd eax, dword ptr [esi]; add dword ptr [eax], eax; add byte ptr [ebp + 0x10e74c0], al; ret; 
0x00060c77: adc byte ptr [ebx - 0x7bf08708], al; push 0x8500000b; test byte ptr [edi], -0x6b; ret 0xff83; 
0x000e0cba: adc byte ptr [ebx - 0x7c], bl; sar byte ptr [edx], cl; cmove eax, edx; ret; 
0x00087f8d: adc byte ptr [ebx - 0x7cf3dbbc], cl; les ebx, ptr [eax]; pop ebx; ret; 
0x00037a32: adc byte ptr [ebx - 0x7cf3dbbc], cl; les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x0019bba4: adc byte ptr [ebx - 0x7cfb4dbc], cl; ret 0xd304; 
0x0013555b: adc byte ptr [ebx - 0xe], ah; call dword ptr [eax - 0x73]; 
0x0013562d: adc byte ptr [ebx - 0xe], ah; call dword ptr [eax - 0x73]; sbb dword ptr [esi + 0x59], -7; call dword ptr [eax - 0x18]; ret 0x1a0; 
0x00143bc8: adc byte ptr [ebx - 0xf76fb3c], al; pop ebx; pop esi; ret; 
0x0009aa9b: adc byte ptr [ebx - 1], 0xff; dec dword ptr [ebx - 0x1337d]; jmp dword ptr [ebp - 0x75]; 
0x00127707: adc byte ptr [ebx], bh; and dword ptr [esi + eax*2], 0xb730000; mov edx, dword ptr [ecx + 0x4628]; add word ptr [edx + eax*2], 1; ret; 
0x00074f8e: adc byte ptr [ebx], bh; push eax; adc al, 0x73; ret; 
0x00074460: adc byte ptr [ebx], bh; push eax; add al, 0x73; or cl, byte ptr [ebp + 0x889044a]; mov eax, dword ptr [edx]; ret; 
0x0015b2d2: adc byte ptr [ebx], ch; inc esi; or al, 0x83; les eax, ptr [ecx + eax]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000600e2: adc byte ptr [ebx], ch; xor byte ptr [ebx - 0x17aff314], al; ret 0x3a6; 
0x000e1243: adc byte ptr [ecx + 0x1000fb], al; add byte ptr [edi], cl; xchg esi, eax; ret 0xc085; 
0x00037b87: adc byte ptr [ecx + 0x114c4], al; add byte ptr [ebx + 0x5f], bl; ret; 
0x000d909f: adc byte ptr [ecx + 0x14cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00047107: adc byte ptr [ecx + 0x244439c1], cl; sbb byte ptr [edi], cl; test byte ptr [0x39000004], ah; ret; 
0x00043fae: adc byte ptr [ecx + 0x244439c1], cl; sbb byte ptr [edi], cl; test dh, ch; add eax, dword ptr [eax]; add byte ptr [ecx], bh; ret; 
0x000ea190: adc byte ptr [ecx + 0x244489c2], cl; sbb byte ptr [ecx], bh; ret; 
0x001028fa: adc byte ptr [ecx + 0x244c8b07], cl; adc byte ptr [ebp - 0x6615b7f], cl; call dword ptr [eax - 0x73]; 
0x0002f4fa: adc byte ptr [ecx + 0x246c8be8], cl; add al, 0x89; ret 0x748d; 
0x00127517: adc byte ptr [ecx + 0x260b3], cl; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000c79f7: adc byte ptr [ecx + 0x30], 0xf9; call dword ptr [eax - 0x18]; 
0x000c12f2: adc byte ptr [ecx + 0x39eed3d1], cl; ret; 
0x00159827: adc byte ptr [ecx + 0x4438bc6], cl; add esp, 0x14; push ebx; call dword ptr [eax + 0x10]; 
0x000b34d7: adc byte ptr [ecx + 0x448b1748], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000b0024: adc byte ptr [ecx + 0x448b1748], cl; and al, 8; pop esi; ret; 
0x000b3507: adc byte ptr [ecx + 0x448b1848], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000b0044: adc byte ptr [ecx + 0x448b1848], cl; and al, 8; pop esi; ret; 
0x000ada64: adc byte ptr [ecx + 0x478d184f], cl; sbb al, 0x5f; pop esi; pop ebx; ret; 
0x00075035: adc byte ptr [ecx + 0x4c48331], cl; pop ebx; pop esi; ret; 
0x0011987b: adc byte ptr [ecx + 0x4c483d8], cl; pop ebx; pop esi; ret; 
0x0003b0f9: adc byte ptr [ecx + 0x4c483f0], cl; pop ebx; pop esi; ret; 
0x000cb00b: adc byte ptr [ecx + 0x5168247c], cl; lea ebp, [esp + 0x6c]; push ebp; mov ecx, dword ptr [esp + 0x34]; call ecx; 
0x00165779: adc byte ptr [ecx + 0x52], dl; call dword ptr [eax]; 
0x0007a5e5: adc byte ptr [ecx + 0x53891856], cl; or al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00074ed1: adc byte ptr [ecx + 0x5b0a89c8], cl; ret; 
0x00081981: adc byte ptr [ecx + 0x5b0c244c], cl; mov eax, dword ptr [edx + 0x18]; pop esi; jmp eax; 
0x00074342: adc byte ptr [ecx + 0x5b3a89c8], cl; pop esi; pop edi; ret; 
0x00171be9: adc byte ptr [ecx + 0x5bd08930], cl; pop esi; ret; 
0x00052088: adc byte ptr [ecx + 0x5bf08903], cl; pop esi; pop edi; ret; 
0x0009a628: adc byte ptr [ecx + 0x5e5b0443], cl; pop edi; ret; 
0x000ccdec: adc byte ptr [ecx + 0x5e5b0470], cl; pop edi; ret; 
0x00090b77: adc byte ptr [ecx + 0x5e5b1042], cl; ret; 
0x00090afb: adc byte ptr [ecx + 0x5e5b104e], cl; ret; 
0x000ac324: adc byte ptr [ecx + 0x5e5f174f], cl; pop ebx; ret; 
0x000ac344: adc byte ptr [ecx + 0x5e5f184f], cl; pop ebx; ret; 
0x00140fd5: adc byte ptr [ecx + 0x5f5e5bd0], cl; ret; 
0x0014dd0c: adc byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x0014949d: adc byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x0007192d: adc byte ptr [ecx + 0x5f5e5bf8], cl; ret; 
0x0014f24d: adc byte ptr [ecx + 0x75c08503], cl; ret; 
0x00057fa7: adc byte ptr [ecx + 0x78c085c3], cl; cmp al, byte ptr [ebx - 0x7972f714]; jnp 0x57fe6; stc; call dword ptr [eax + 0x53]; 
0x0016b5a5: adc byte ptr [ecx + 0x79c085c6], cl; sbb ecx, dword ptr [ebx - 0x1337d]; jmp dword ptr [ebp - 0x75]; 
0x00133b5d: adc byte ptr [ecx + 0xf9], al; or byte ptr [edi], 0x44; ret 0x8dc3; 
0x000625c3: adc byte ptr [ecx + 0xfc085c3], cl; test byte ptr [eax], dh; sub eax, dword ptr [eax]; add byte ptr [ebx - 0x50f7b], cl; call ecx; 
0x00116f13: adc byte ptr [ecx + eax], bh; ret 0x1389; 
0x00096f20: adc byte ptr [ecx - 0x14dfdb84], cl; ret 0x548b; 
0x001337cf: adc byte ptr [ecx - 0x16f3dbb4], cl; outsb dx, byte ptr [si]; hlt; jmp dword ptr [esi - 0x70]; 
0x0013376f: adc byte ptr [ecx - 0x16f3dbb4], cl; pop es; push -0xc; jmp dword ptr [esi - 0x70]; 
0x000982fb: adc byte ptr [ecx - 0x17ebdbb4], cl; mov ebx, 0x89ffffec; ret; 
0x00033313: adc byte ptr [ecx - 0x1bf7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00144188: adc byte ptr [ecx - 0x44f6b], cl; jmp dword ptr [ebp - 0x75]; 
0x0013b3af: adc byte ptr [ecx - 0x4977b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0005d9a0: adc byte ptr [ecx - 0x59f7b], cl; inc dword ptr [ebx - 0x7af00008]; ret; 
0x000fcff1: adc byte ptr [ecx - 0x70f7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0010ce6d: adc byte ptr [ecx - 0x72bbdbbc], cl; cmp esp, 7; stc; dec dword ptr [edi]; inc esp; ret 0x4489; 
0x00071998: adc byte ptr [ecx - 0x74f3dbb4], cl; xchg edx, eax; cwde; add byte ptr [eax], al; add byte ptr [ecx + 0x5b082454], cl; jmp eax; 
0x0008a6ba: adc byte ptr [ecx - 0x76ebdba4], cl; ret 0xc74; 
0x001253a1: adc byte ptr [ecx - 0x76ebdba4], cl; ret; 
0x00179ff0: adc byte ptr [ecx - 0x76f7dbbc], cl; fcomp dword ptr [ebx - 0x17]; jecxz 0x17a038; stc; jmp dword ptr [esi - 0x70]; 
0x00124092: adc byte ptr [ecx - 0x7a3fce3e], cl; sal byte ptr [esi + eax*8 - 0x7d], cl; in al, dx; or byte ptr [ebp - 0x65d0f79], cl; call dword ptr [eax + 0x55]; 
0x0002c8a4: adc byte ptr [ecx - 0x7ae7dba4], cl; sal byte ptr [edi + ebx - 0x7d], 0xec; or byte ptr [ebp - 0x68d1b79], cl; call dword ptr [eax + 0x56]; 
0x0009a117: adc byte ptr [ecx - 0x7c3fcefe], cl; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0002b6e5: adc byte ptr [ecx - 0x7cfbdb84], cl; ret 0x8d01; 
0x000e02a9: adc byte ptr [ecx - 0x937b], cl; dec dword ptr [ebp - 0x76e5f8bc]; loope 0xe0240; ret 0x25; 
0x0007853c: adc byte ptr [ecx - 0x9ec74ce], cl; ret 0x7402; 
0x0007863a: adc byte ptr [ecx - 0x9ec74ce], cl; ret 0xf02; 
0x001596b9: adc byte ptr [ecx - 0xa5a73b], cl; jbe 0x1596d1; push ebx; call dword ptr [esi + 0x14]; 
0x00127c17: adc byte ptr [ecx - 0xbf7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00198c6f: adc byte ptr [ecx - 0xc3fce3e], cl; bsf edx, edx; add eax, edx; ret; 
0x0016ab40: adc byte ptr [ecx - 0xeb43], cl; dec dword ptr [ecx - 0xf34b]; dec dword ptr [ecx - 0xe77b]; jmp dword ptr [ebp - 0x5f]; 
0x0005200b: adc byte ptr [ecx - 0xf766efc], cl; pop ebx; pop esi; pop edi; ret; 
0x00146cce: adc byte ptr [ecx], al; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x00082986: adc byte ptr [ecx], al; add byte ptr [eax], al; ret; 
0x000b37d6: adc byte ptr [ecx], al; clc; pop edi; ret; 
0x0007741b: adc byte ptr [ecx], al; ret 0x532b; 
0x000b3ff5: adc byte ptr [ecx], al; ret 0x67c; 
0x0006b1d0: adc byte ptr [ecx], al; ret; 
0x000fb307: adc byte ptr [ecx], bh; into; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x0003a8cf: adc byte ptr [ecx], bh; ret 0x1177; 
0x0012c446: adc byte ptr [ecx], bh; ret 0x1d77; 
0x000983d7: adc byte ptr [ecx], bh; ret 0x3a73; 
0x0015d754: adc byte ptr [ecx], bh; ret 0x4e0f; 
0x0013c04a: adc byte ptr [ecx], bh; ret 0x6273; 
0x00061af5: adc byte ptr [ecx], bh; ret 0x840f; 
0x0006c6d5: adc byte ptr [ecx], bh; ret 0x850f; 
0x000ba9d2: adc byte ptr [ecx], bh; ret 0xca19; 
0x0003a8e0: adc byte ptr [ecx], bh; ret 0xef76; 
0x00066587: adc byte ptr [ecx], bh; ret 0xf475; 
0x0002181c: adc byte ptr [ecx], bh; ret; 
0x000ca048: adc byte ptr [ecx], bh; retf 0xf375; ret; 
0x0007641f: adc byte ptr [ecx], bh; retf 0xf477; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00148127: adc byte ptr [ecx], bh; ror byte ptr [edi], 1; dec edi; ret 0x548b; 
0x0007f182: adc byte ptr [ecx], bh; sal dword ptr [edi + 0x49], 0x89; ret 0x448b; 
0x0009a649: adc byte ptr [ecx], ch; ret 0x408b; 
0x0003b230: adc byte ptr [ecx], ch; ret 0xc269; 
0x0009e285: adc byte ptr [ecx], ch; ret 0xc8d; 
0x001969cd: adc byte ptr [ecx], ch; ret 0xe183; 
0x0007a6e9: adc byte ptr [ecx], ch; ret 0xea39; 
0x0007d822: adc byte ptr [ecx], ch; ret 0xfa39; 
0x00033b0b: adc byte ptr [ecx], ch; ret; 
0x000bac99: adc byte ptr [ecx], ch; sal byte ptr [ecx], 1; shr byte ptr [ecx], cl; ret; 
0x0009bd97: adc byte ptr [ecx], cl; ret 0x448b; 
0x000b8416: adc byte ptr [ecx], cl; ret 0x5489; 
0x000862e5: adc byte ptr [ecx], cl; ret 0x9575; 
0x00085fa5: adc byte ptr [ecx], cl; ret 0x9775; 
0x00085c95: adc byte ptr [ecx], cl; ret 0x9b75; 
0x000d907b: adc byte ptr [ecx], cl; ret 0xffb8; 
0x0009daf9: adc byte ptr [ecx], cl; ret; 
0x00140f5d: adc byte ptr [ecx], dh; fucomi st(3); ret 0xb48d; 
0x0009b202: adc byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x00076513: adc byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0012ff0d: adc byte ptr [ecx], dh; rcr byte ptr [ebx - 0x77], cl; rcr byte ptr [esi + 0x5f], 1; ret; 
0x0012c86e: adc byte ptr [ecx], dh; rol byte ptr [ebp - 0x3db7f040], cl; add esp, 8; pop ebx; ret; 
0x0019c543: adc byte ptr [ecx], dh; ror byte ptr [ecx], cl; fisttp word ptr [ecx]; test dword ptr [ebx], 0xf1c247c; xchg ebp, eax; ret 0xd789; 
0x00147471: adc byte ptr [ecx], dh; shr byte ptr [edx + 2], 0x8d; xor dword ptr [edi + 0x2d], 0xfffffff9; call dword ptr [eax + 0x51]; 
0x00074c34: adc byte ptr [edi + 0x53], dl; call dword ptr [eax + 0x1c]; 
0x000a9f6f: adc byte ptr [edi + 0x5b], bl; ret; 
0x000ac1dd: adc byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000a272a: adc byte ptr [edi + 0x5e], bl; ret; 
0x00191765: adc byte ptr [edi + esi*8 + 0x5dc829ff], 0x5b; ret; 
0x0018ef51: adc byte ptr [edi + esi*8 - 0x7c7b7401], 0x80; xchg esp, eax; idiv edi; sub eax, ecx; pop ebx; ret; 
0x0012b4c4: adc byte ptr [edi - 0xe], ah; call dword ptr [eax - 0x73]; 
0x0013bfe1: adc byte ptr [edi], 0xf9; call dword ptr [eax - 0x73]; 
0x001978ed: adc byte ptr [edi], cl; cmp byte ptr [eax + eax + 0x408d0000], 0xf; pop edi; ret; 
0x0009b0b3: adc byte ptr [edi], cl; inc ebp; ret 0x66c3; 
0x000a23c3: adc byte ptr [edi], cl; inc edi; ret 0x5350; 
0x0016c0c2: adc byte ptr [edi], cl; mov bh, 0x99; add byte ptr [esi + 0x728d0000], ah; jmp dword ptr [esi - 0x7d]; 
0x00055393: adc byte ptr [edi], cl; mov dh, 0x5f; or al, 0xf6; ret; 
0x000b3d02: adc byte ptr [edi], cl; mov esp, 0x76c229c0; lea eax, es:[edi + eax + 0x10]; pop edi; ret; 
0x0019689d: adc byte ptr [edi], cl; or ah, 0; add byte ptr [eax], al; lea eax, [edi + 0xf]; pop edi; ret; 
0x0008356c: adc byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; ret; 
0x0012db21: adc byte ptr [edi], cl; test byte ptr [eax - 0x7d000000], dl; ret 0x8801; 
0x00104881: adc byte ptr [edi], cl; test byte ptr [eax - 0x9fffffc], bl; ret 0xf20; 
0x00022f86: adc byte ptr [edi], cl; test byte ptr [ebx + 0x6b000001], ah; ret 0x8b3c; 
0x000ad430: adc byte ptr [edi], cl; test dword ptr [ecx], ebx; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000abd8d: adc byte ptr [edi], cl; test dword ptr [edi + eax + 0x5e5f0000], ecx; pop ebx; ret; 
0x000837f2: adc byte ptr [edi], cl; test dword ptr [edi - 0x77000000], eax; ret 0xca83; 
0x00197872: adc byte ptr [edi], cl; test dword ptr [edi - 0xa000000], esp; ret 0xf20; 
0x000a593f: adc byte ptr [edi], cl; test dword ptr [edx + 0x5f000005], ecx; pop ebx; ret; 
0x00197752: adc byte ptr [edi], cl; test dword ptr [esi - 0x9fffffd], esi; ret 0xf20; 
0x000c9bb0: adc byte ptr [edi], cl; test ecx, ebp; add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x000a9d40: adc byte ptr [edi], cl; test ecx, ebp; add eax, 0x38800000; add dword ptr [ebx + 0x5b5fffd8], eax; ret; 
0x00195b2b: adc byte ptr [edi], cl; test esi, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x001933e7: adc byte ptr [edi], cl; xchg byte ptr [ebx - 0x7cfffffe], al; ret 0x8310; 
0x00191f40: adc byte ptr [edi], cl; xchg byte ptr [ebx - 0x7cffffff], bl; ret 0x8310; 
0x001a0360: adc byte ptr [edi], cl; xchg ebp, eax; ret 0xb60f; 
0x001a02e2: adc byte ptr [edi], cl; xchg ebp, eax; ret 0xd589; 
0x0019c80d: adc byte ptr [edi], cl; xchg ebp, eax; ret; 
0x000fca70: adc byte ptr [edi], cl; xchg esp, eax; ret 0x6889; 
0x0013e45b: adc byte ptr [edi], cl; xchg esp, eax; ret; 
0x00166571: adc byte ptr [edx + 0x51], dl; call dword ptr [eax + 0x20]; 
0x00165c19: adc byte ptr [edx + 0x51], dl; call dword ptr [eax + 4]; 
0x00165b01: adc byte ptr [edx + 0x51], dl; call dword ptr [eax]; 
0x001662af: adc byte ptr [edx + 0x53], dl; call dword ptr [eax + 0x20]; 
0x0015f1ab: adc byte ptr [edx + 0x53], dl; call dword ptr [eax + 0x24]; 
0x00165981: adc byte ptr [edx + 0x53], dl; call dword ptr [eax + 4]; 
0x0016591e: adc byte ptr [edx + 0x53], dl; call dword ptr [eax]; 
0x001410dd: adc byte ptr [edx + 0x56], dl; call eax; 
0x00141011: adc byte ptr [edx + 0x57], dl; call eax; 
0x00038c66: adc byte ptr [edx + 0xa], ch; push 0; push dword ptr [esp + 0x1c]; call 0x3c860; add esp, 0x1c; ret; 
0x00038c86: adc byte ptr [edx + 0xa], ch; push 0; push dword ptr [esp + 0x1c]; call 0x3c960; add esp, 0x1c; ret; 
0x0011aec8: adc byte ptr [edx + 1], bh; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00086b87: adc byte ptr [edx + 1], bh; xor ebx, ebx; nop; mov eax, edx; call dword ptr gs:[0x10]; 
0x00071956: adc byte ptr [edx + 1], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x71860; add esp, 0x1c; ret; 
0x00030686: adc byte ptr [edx + 5], ch; push dword ptr [esp + 0x18]; push 0; call 0x30630; add esp, 0x1c; ret; 
0x00030666: adc byte ptr [edx + 5], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x30630; add esp, 0x1c; ret; 
0x000fb3d6: adc byte ptr [edx + 8], dh; setne al; movzx eax, al; neg eax; ret; 
0x0009cb03: adc byte ptr [edx + ebx - 0x7d], dh; ret; 
0x000f3156: adc byte ptr [edx + ebx*8 - 0x75], dh; pop eax; add al, 0xf7; ret; 
0x0007b22d: adc byte ptr [edx + edx*8 - 0x57ff48c], al; and eax, 0x7880e175; add dword ptr [ebx + 0x75], esi; fild dword ptr [eax - 0x76da2b83]; ret 0x5374; 
0x0002e8f3: adc byte ptr [edx + esi*2], 0xf9; call dword ptr [eax - 0x18]; 
0x0015e5a1: adc byte ptr [edx - 0xd], cl; call dword ptr [eax - 0x73]; 
0x00136bdb: adc byte ptr [edx - 0xe], ah; call dword ptr [eax - 0x73]; 
0x000fc7e3: adc byte ptr [edx], 0x49; stc; call dword ptr [eax + 0x56]; 
0x00150d6b: adc byte ptr [edx], al; add byte ptr [ecx + 0xd9292c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x000dd696: adc byte ptr [edx], ch; push dword ptr [esp + 0x18]; push -1; call 0xdd6b0; add esp, 0x1c; ret; 
0x00038846: adc byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x387d0; add esp, 0x1c; ret; 
0x000740a6: adc byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x71860; add esp, 0x1c; ret; 
0x001589e0: adc byte ptr [edx], ch; push esi; call dword ptr [eax + 0x14]; 
0x0007616b: adc byte ptr [esi + 0x5f], bl; jmp eax; 
0x00166c19: adc byte ptr [esi + 0xc], dh; add dword ptr [esi + 0x14], edi; pop ebx; pop esi; pop edi; ret; 
0x00192327: adc byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x5073; 
0x0018f5c3: adc byte ptr [esi + 0xf], ah; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x001964ca: adc byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x001964e2: adc byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000b3c9d: adc byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x315a75c0], 0xc0; pop edi; ret; 
0x000eba49: adc byte ptr [esi + ecx - 0x77], dh; ret 0xef89; 
0x0016fa0e: adc byte ptr [esi - 0x3f], ah; call 0x10163619; test byte ptr [ebp - 0x76ffffff], ah; ret 0xb60f; 
0x000b34a8: adc byte ptr [esi - 0x77], ah; dec eax; sbb byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000b0005: adc byte ptr [esi - 0x77], ah; dec eax; sbb byte ptr [ebx + 0x5e082444], cl; ret; 
0x000ada15: adc byte ptr [esi - 0x77], ah; dec edi; sbb byte ptr [ebp + 0x5e5f1a47], cl; pop ebx; ret; 
0x000ac305: adc byte ptr [esi - 0x77], ah; dec edi; sbb byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x001710d6: adc byte ptr [esi - 0xc], bl; call dword ptr [eax - 0x18]; 
0x001703c2: adc byte ptr [esi*2 + 0x828d18], al; push ebx; hlt; jmp dword ptr [esi - 9]; 
0x00029574: adc byte ptr [esi], al; add byte ptr [eax], al; add cl, ch; ret 0xfffe; 
0x0014d7f6: adc ch, 0x5f; stc; call dword ptr [eax - 0x73]; 
0x001a0dc9: adc ch, bh; inc dword ptr [ecx + 0x89234c3]; add byte ptr [ebx + 0x194483], cl; add byte ptr [ebp + 0x314574c0], al; jmp dword ptr [esi - 0x70]; 
0x0014b86e: adc ch, byte ptr [ecx]; ret 0xd101; 
0x0005db86: adc ch, cl; jecxz 0x5db8a; dec dword ptr [ebx - 0x59b7b]; jmp dword ptr [ebp - 0x75]; 
0x00062f94: adc ch, cl; shl bl, 0xff; dec dword ptr [ebx - 0x4f37b]; jmp dword ptr [ebp - 0x75]; 
0x00120ab5: adc cl, 0x54; stc; call dword ptr [eax - 0x18]; 
0x00153592: adc cl, 0x61; stc; call dword ptr [eax + 0x6a]; 
0x00153692: adc cl, 0x61; stc; call dword ptr [eax - 0x18]; 
0x000779d2: adc cl, al; clc; add cl, byte ptr [edi]; scasd eax, dword ptr es:[edi]; ret 0x2999; 
0x000abd0a: adc cl, byte ptr [eax]; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0007bf5d: adc cl, byte ptr [ebp + 0x4889014a]; add al, 0xf; mov dh, 2; ret; 
0x0007b412: adc cl, byte ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x0009bf65: adc cl, byte ptr [ebp - 0x17567f7e]; inc dword ptr [eax - 0x6d72fd1b]; and byte ptr [eax + 0x450ffff6], ah; ret 0x66c3; 
0x0009c255: adc cl, byte ptr [ebp - 0x175a0f7e]; inc dword ptr [eax - 0x6d72fd1b]; rcl byte ptr [eax - 0xa], 0xff; cmovne eax, edx; ret; 
0x0009c215: adc cl, byte ptr [ebp - 0x175aef7e]; inc dword ptr [eax - 0x6d72fd1b]; mov al, 0x2b; idiv bh; cmovne eax, edx; ret; 
0x0009b465: adc cl, byte ptr [ebp - 0x187a2f7e]; inc dword ptr [eax - 0x6d72fd1b]; rcl byte ptr [ecx], 0xf6; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x00141eaf: adc cl, byte ptr [ebp - 0x2ff4d]; jmp dword ptr [esi - 0x7d]; 
0x00131bb2: adc cl, byte ptr [ebp - 0xa56af7e]; inc dword ptr [ebx - 0x6d72fe1d]; rcl byte ptr [esi - 0xb]; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x0011f711: adc cl, byte ptr [ebp - 7]; call dword ptr [eax + 0x57]; 
0x0008ea3d: adc cl, byte ptr [ebx + 0x104a3908]; je 0x8ea50; ret; 
0x00093bf2: adc cl, byte ptr [ebx + 0x107b818]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0004e38f: adc cl, byte ptr [ebx - 0x362b7b]; inc dword ptr [ebx + 0x440ffff8]; ret 0x8589; 
0x000c69be: adc cl, byte ptr [ebx - 0x362b7b]; inc dword ptr [ebx + 0x440ffff8]; ret; 
0x00149571: adc cl, byte ptr [ebx - 0x7699f7ae]; pop eax; inc cl; ljmp 0xc166:0xfe2c117; ret 0x6608; 
0x000bf45a: adc cl, byte ptr [ebx - 0x76b3dbbc]; sub byte ptr [ebx - 0x7ac3dbbc], cl; ror byte ptr [edi], 0x84; ret; 
0x00126c3d: adc cl, byte ptr [ecx + 0x1b810]; add byte ptr [eax], al; ret; 
0x000a8226: adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000a8386: adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000a3e36: adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000a3f96: adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000a83a6: adc cl, byte ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000a3fb6: adc cl, byte ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000a83c6: adc cl, byte ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000a3fd6: adc cl, byte ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000fc7e4: adc cl, byte ptr [ecx - 7]; call dword ptr [eax + 0x56]; 
0x0015b1e2: adc cl, byte ptr [edi]; retf 0x1089; mov eax, 1; add esp, 8; pop ebx; ret; 
0x000afe66: adc cl, byte ptr [esi + 5]; movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b6498: adc cl, ch; imul edi, edi, -1; jmp dword ptr [esi - 0x70]; 
0x000c5151: adc cl, ch; leave; adc edi, edi; jmp dword ptr [esi - 0x70]; 
0x000d6da5: adc cl, ch; leave; jecxz 0xd6da9; call dword ptr [eax + 0x53]; 
0x0016efb9: adc cl, ch; mov eax, 0x90fffffe; mov dword ptr [esp + 8], ecx; call eax; 
0x00069733: adc cl, ch; mov edx, 0x8dfffff3; mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x000444a2: adc cl, ch; ret 0xfff4; 
0x00141924: adc cl, ch; ret 0xfff9; 
0x0002d75e: adc cl, ch; ret; 
0x000fdd1a: adc cl, dl; jmp 0xfdd1f; fmul dword ptr [ebp + 0x428dc114]; or byte ptr [ecx - 0x6d76b], cl; call dword ptr [eax - 1]; 
0x00162c74: adc dh, al; add al, 0x30; add byte ptr [ebx + 0x1b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x000ce958: adc dh, dh; dec dword ptr [ebp - 0x666db7d]; call dword ptr [eax - 0x73]; 
0x000ce996: adc dh, dh; jmp dword ptr [esi - 0x70]; 
0x00080176: adc dh, dh; push es; xor byte ptr [ebp + 0x2c], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00152409: adc dh, dh; ret 0xf20; 
0x0013fb96: adc dh, dh; ret; 
0x00193307: adc dh, dl; call dword ptr [ebx - 0x18]; 
0x00193307: adc dh, dl; call dword ptr [ebx - 0x18]; jmp 0x821930fb; ret; 
0x00094373: adc dl, byte ptr [eax + 0x1cc9089]; add byte ptr [eax], al; ret; 
0x00094353: adc dl, byte ptr [eax + 0x1d09089]; add byte ptr [eax], al; ret; 
0x00094403: adc dl, byte ptr [eax + 0x2089089]; add byte ptr [eax], al; ret; 
0x000946e3: adc dl, byte ptr [eax + 0x3b689089]; add byte ptr [eax], al; ret; 
0x0008270a: adc dl, byte ptr [ebx + 0x50]; push ecx; call edx; 
0x00133bc3: adc dl, byte ptr [ebx - 0x18]; idiv byte ptr [esi]; inc dword ptr [ebx - 0x2776d73c]; pop ebx; ret; 
0x0007b7e9: adc dword ptr [eax + 0x15], -0x1b; call dword ptr [eax - 0x73]; 
0x0007bca8: adc dword ptr [eax + 0x1b], -0x1b; call dword ptr [eax - 1]; 
0x0002c2a4: adc dword ptr [eax + 0x20], -0x20; call dword ptr [esi + 0x31]; 
0x0015e2ee: adc dword ptr [eax + 0x3f], -0xd; call dword ptr [eax - 0x73]; 
0x0012b4bc: adc dword ptr [eax + 0x50000048], -0x73; adc dword ptr [eax], 0x67; bnd call dword ptr [eax - 0x73]; 
0x00137e2c: adc dword ptr [eax + 0x50fff262], -0x73; sub dword ptr [ecx], 0x5a; stc; call dword ptr [eax - 0x18]; ret 0x178; 
0x0015c80c: adc dword ptr [eax - 0x27c600b0], ecx; jne 0x15c800; pop ebx; ret; 
0x00165f68: adc dword ptr [eax - 0x4d], -7; call dword ptr [eax - 0x73]; 
0x000e000c: adc dword ptr [eax - 0xf], -8; inc dword ptr [ecx]; fistp qword ptr [esi]; jmp edi; 
0x001052d1: adc dword ptr [eax - 1], edi; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00058aa1: adc dword ptr [eax - 1], edi; pop ebx; pop esi; pop edi; ret; 
0x00093329: adc dword ptr [eax - 1], edi; pop ebx; pop esi; ret; 
0x000379b1: adc dword ptr [eax - 1], edi; pop ebx; ret; 
0x000216f0: adc dword ptr [eax - 1], edi; ret; 
0x00136bda: adc dword ptr [eax], 0x62; bnd call dword ptr [eax - 0x73]; 
0x0013555a: adc dword ptr [eax], 0x63; bnd call dword ptr [eax - 0x73]; 
0x0013562c: adc dword ptr [eax], 0x63; bnd call dword ptr [eax - 0x73]; sbb dword ptr [esi + 0x59], -7; call dword ptr [eax - 0x18]; ret 0x1a0; 
0x000daf03: adc dword ptr [eax], 0x64; bnd call dword ptr [eax - 0x73]; 
0x0012b4c3: adc dword ptr [eax], 0x67; bnd call dword ptr [eax - 0x73]; 
0x001383ba: adc dword ptr [eax], 0x68; bnd call dword ptr [eax - 0x73]; 
0x00076a33: adc dword ptr [eax], 0x7d; stc; call dword ptr [eax - 0x73]; 
0x0004c6f3: adc dword ptr [eax], eax; add byte ptr [eax], al; add esp, 4; add eax, ebx; jmp eax; 
0x000c5e72: adc dword ptr [eax], eax; add byte ptr [ebp + 0xff189ff], al; xchg ebp, eax; ret 0xbeb; 
0x0002e502: adc dword ptr [eax], eax; add byte ptr [ebp - 0x68deb7a], cl; call dword ptr [eax - 0x18]; 
0x0006dd66: adc dword ptr [eax], eax; add byte ptr [ebx + 0x565304ec], al; push ebp; call dword ptr [edi + 0x1c]; 
0x0016d624: adc dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000b6146: adc dword ptr [eax], eax; add byte ptr [ebx - 0x76aff33c], al; ret; 
0x0002e4fc: adc dword ptr [eax], eax; add byte ptr [ecx + 0x111c86], cl; add byte ptr [ebp - 0x68deb7a], cl; call dword ptr [eax - 0x18]; 
0x000de340: adc dword ptr [eax], eax; and byte ptr [ecx], al; lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x0011830d: adc dword ptr [eax], eax; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x10]; test eax, eax; je 0x11831d; ret; 
0x00140652: adc dword ptr [eax], eax; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0010b01d: adc dword ptr [eax], eax; push ebx; mov eax, 0x14b; mov ebx, dword ptr [esp + 8]; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x0010a47d: adc dword ptr [eax], eax; push ebx; mov eax, 0x21; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001170ed: adc dword ptr [eax], eax; push ebx; mov eax, 0x2d; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001168fd: adc dword ptr [eax], eax; push ebx; mov eax, 0xbf; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00115a0d: adc dword ptr [eax], eax; push ebx; mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00118f28: adc dword ptr [eax], eax; push ebx; mov ebx, 0xfee1dead; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00115dc3: adc dword ptr [eax], eax; push ebx; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00138569: adc dword ptr [ebp + 0x5a], -7; call dword ptr [eax - 0x18]; 
0x00078eb5: adc dword ptr [ebp + 0x5e5bf465], ecx; pop edi; pop ebp; ret; 
0x0014cc39: adc dword ptr [ebp + 0x5f], -7; call dword ptr [eax - 0x73]; 
0x000eb899: adc dword ptr [ebp - 0x9dc8a01], eax; add al, 0x42; add dword ptr [esi + ecx - 0x77], esi; ret; 
0x0015a24e: adc dword ptr [ebx + 0x1c7401f9], eax; mov dword ptr [eax], 0x10; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x00070c25: adc dword ptr [ebx + 0x1d7f01fa], eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x0015ab3f: adc dword ptr [ebx + 0x26a0000], 0x68; pushal; and al, byte ptr [eax]; add byte ptr [ebx - 0x7f], dl; ret; 
0x000828ee: adc dword ptr [ebx + 0x54890450], ecx; and al, 4; jmp dword ptr [eax]; 
0x0011fa65: adc dword ptr [ebx + 0x54], -7; call dword ptr [edx + 0x52]; 
0x00135561: adc dword ptr [ebx + 0x59], -7; call dword ptr [eax - 0x18]; 
0x00135714: adc dword ptr [ebx + 0x59], -7; call dword ptr [eax - 0x73]; 
0x00150c17: adc dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x000986ee: adc dword ptr [ebx + 0x5e5b0cc4], eax; pop edi; pop ebp; ret; 
0x00123fda: adc dword ptr [ebx + 0x5e5b10c4], eax; pop edi; ret; 
0x00065926: adc dword ptr [ebx + 0x5e5b1cc4], eax; pop edi; pop ebp; ret; 
0x0002b769: adc dword ptr [ebx + 0x5e5b2cc4], eax; pop edi; pop ebp; ret; 
0x00109905: adc dword ptr [ebx + 0x5e5b60c4], eax; pop edi; ret; 
0x00140773: adc dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x0007b1a1: adc dword ptr [ebx + 0x5e], ebx; ret; 
0x0008667e: adc dword ptr [ebx - 0x11f7cfe], ecx; or eax, dword ptr [esp + 8]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000814f1: adc dword ptr [ebx - 0x137cffe6], ecx; or byte ptr [ebx - 0xe7dbbc], cl; je 0x81523; sbb al, 0x85; ror byte ptr [edi], 0x48; ret 0xff50; 
0x0015943e: adc dword ptr [ebx - 0x3fcefb3c], eax; pop ebx; pop esi; ret; 
0x001922be: adc dword ptr [ebx - 0x48], ebx; add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x1922c9; neg eax; ret; 
0x00066396: adc dword ptr [ebx - 0x7cf87700], ecx; ret; 
0x000b4fd2: adc dword ptr [ebx], eax; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0007024a: adc dword ptr [ecx], edi; ret 0x420f; 
0x0015144e: adc dword ptr [ecx], esi; leave; cmp eax, 2; jne 0x151470; mov eax, ecx; ret; 
0x000ad8f0: adc dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x000f7f1f: adc dword ptr [edi - 3], -8; call dword ptr [ecx + 0x6a]; 
0x001287eb: adc dword ptr [edi], ecx; mov bh, 0x14; inc edx; and edx, 0x100; mov eax, edx; ret; 
0x0011f710: adc dword ptr [edx], 0x4d; stc; call dword ptr [eax + 0x57]; 
0x000eb42a: adc dword ptr [esi + 0x48], -7; call dword ptr [eax + 0x55]; 
0x000a5da1: adc dword ptr [esi - 0x77], esp; push ecx; add al, 0x5b; ret; 
0x0012729b: adc dword ptr [esi - 7], edx; call dword ptr [eax + 0x6a]; 
0x0011f8db: adc dword ptr [esi], 0x51; stc; call dword ptr [eax + 0x57]; 
0x001670fd: adc dword ptr [esi], 0x65; stc; call dword ptr [ebp + 0x6a]; 
0x0016d212: adc dword ptr [esi], edx; add byte ptr [eax], al; add bl, ch; jecxz 0x16d202; shl byte ptr [edi - 4], cl; jmp dword ptr [esi - 0x70]; 
0x0011b317: adc dword ptr [esp + eax*2], 0; add byte ptr [ebx - 0x2f76f73c], al; pop ebx; ret; 
0x000b4fd1: adc dword ptr fs:[ebx], eax; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0015edbd: adc eax, -0x50; stc; call dword ptr [eax - 0x73]; 
0x00120d94: adc eax, -0x5f; stc; call dword ptr [eax - 0x18]; 
0x00171f48: adc eax, 0; mov dword ptr [edx + eax], 0x16; xor eax, eax; ret; 
0x00147120: adc eax, 0; mov eax, dword ptr [eax - 0x14]; mov eax, dword ptr [edx + eax]; ret; 
0x000d708b: adc eax, 0x10; cmp eax, -0x26; jne 0xd70a1; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x0010a48f: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x10a4a0; pop ebx; ret; 
0x0010b02d: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x10b040; pop ebx; ret; 
0x00115a1b: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x115a30; pop ebx; ret; 
0x0011690f: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x116920; pop ebx; ret; 
0x0011695f: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x116970; pop ebx; ret; 
0x0011a7ef: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x11a800; pop ebx; ret; 
0x0011a83f: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x11a850; pop ebx; ret; 
0x0011ea57: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x11ea68; pop ebx; ret; 
0x0012135f: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x121370; pop ebx; ret; 
0x00122fef: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x123000; pop ebx; ret; 
0x0012303f: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x123050; pop ebx; ret; 
0x0012308f: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x1230a0; pop ebx; ret; 
0x00037990: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x379a0; pop ebx; ret; 
0x00058a1f: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x58a30; pop ebx; ret; 
0x00092c5b: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x92c70; pop ebx; ret; 
0x000938f3: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x93908; pop ebx; ret; 
0x00093ce3: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x93cf8; pop ebx; ret; 
0x000cc07d: adc eax, 0x10; cmp eax, 0xfffff000; ja 0xcc090; pop ebx; ret; 
0x000df69b: adc eax, 0x10; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x00037955: adc eax, 0x10; mov ebx, edx; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x00109931: adc eax, 0x10; mov ebx, edx; ret; 
0x0010501f: adc eax, 0x10; neg eax; pop ebx; ret; 
0x00115331: adc eax, 0x10; pop ebp; pop edi; pop ebx; ret; 
0x000de888: adc eax, 0x10; pop ebx; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x0008329d: adc eax, 0x10; pop ebx; pop esi; ret; 
0x0013eb42: adc eax, 0x10; pop ebx; ret; 
0x0008fe3b: adc eax, 0x10; ret; 
0x00105060: adc eax, 0x14; jne 0x105077; add esp, 0x1c; ret; 
0x00105506: adc eax, 0x14; jne 0x105526; add esp, 0x78; pop ebx; ret; 
0x00107c86: adc eax, 0x14; jne 0x107ca6; add esp, 0x78; pop ebx; ret; 
0x00108704: adc eax, 0x14; jne 0x108710; add esp, 0x38; pop ebx; ret; 
0x00108784: adc eax, 0x14; jne 0x108790; add esp, 0x38; pop ebx; ret; 
0x0010c10f: adc eax, 0x14; jne 0x10c11d; movzx eax, al; add esp, 0x4c; ret; 
0x001165f7: adc eax, 0x14; jne 0x116609; add esp, 0x1c; ret; 
0x00118049: adc eax, 0x14; jne 0x118099; add esp, 0x28; pop ebx; ret; 
0x001180e9: adc eax, 0x14; jne 0x118139; add esp, 0x28; pop ebx; ret; 
0x00118374: adc eax, 0x14; jne 0x11837f; add esp, 0x1c; ret; 
0x0011957d: adc eax, 0x14; jne 0x119597; add esp, 0x3c; ret; 
0x001195ee: adc eax, 0x14; jne 0x1195f9; add esp, 0x1c; ret; 
0x0011a609: adc eax, 0x14; jne 0x11a615; add esp, 0x38; pop ebx; ret; 
0x0011a68e: adc eax, 0x14; jne 0x11a69a; add esp, 0x38; pop ebx; ret; 
0x0011d398: adc eax, 0x14; jne 0x11d3a3; add esp, 0x1c; ret; 
0x0011eec1: adc eax, 0x14; jne 0x11eedf; add esp, 0x1018; pop ebx; ret; 
0x001244bf: adc eax, 0x14; jne 0x1244e9; add esp, 0x28; pop ebx; ret; 
0x001245e4: adc eax, 0x14; jne 0x124609; add esp, 0x18; pop ebx; ret; 
0x00124664: adc eax, 0x14; jne 0x124689; add esp, 0x18; pop ebx; ret; 
0x001248ef: adc eax, 0x14; jne 0x124919; add esp, 0x18; pop ebx; ret; 
0x0012503f: adc eax, 0x14; jne 0x125069; add esp, 0x18; pop ebx; ret; 
0x001250c4: adc eax, 0x14; jne 0x1250e9; add esp, 0x18; pop ebx; ret; 
0x0012514f: adc eax, 0x14; jne 0x125179; add esp, 0x28; pop ebx; ret; 
0x001252b8: adc eax, 0x14; jne 0x1252c3; add esp, 0x1c; ret; 
0x00125a02: adc eax, 0x14; jne 0x125a14; add esp, 0x7c; ret; 
0x00133634: adc eax, 0x14; jne 0x133645; add esp, 0x2c; ret; 
0x001336a4: adc eax, 0x14; jne 0x1336b5; add esp, 0x2c; ret; 
0x0013aae5: adc eax, 0x14; jne 0x13aaf0; add esp, 0x2c; ret; 
0x001454ae: adc eax, 0x14; jne 0x1454cd; add esp, 0x18; pop ebx; ret; 
0x0014550a: adc eax, 0x14; jne 0x145515; add esp, 0x1c; ret; 
0x00145556: adc eax, 0x14; jne 0x145561; add esp, 0x1c; ret; 
0x00146ecd: adc eax, 0x14; jne 0x146f14; add esp, 0x118; pop ebx; ret; 
0x00146f6d: adc eax, 0x14; jne 0x146fd0; add esp, 0x118; pop ebx; ret; 
0x0014702d: adc eax, 0x14; jne 0x14707b; add esp, 0x118; pop ebx; ret; 
0x001470cd: adc eax, 0x14; jne 0x1470fd; add esp, 0x11c; ret; 
0x00147374: adc eax, 0x14; jne 0x1473bc; add esp, 0x1c; ret; 
0x0014ab47: adc eax, 0x14; jne 0x14ab55; movzx eax, ax; add esp, 0x2c; ret; 
0x0014eda8: adc eax, 0x14; jne 0x14edb4; add esp, 0x28; pop ebx; ret; 
0x00158efb: adc eax, 0x14; jne 0x158f07; add esp, 0x28; pop ebx; ret; 
0x0015ef9e: adc eax, 0x14; jne 0x15f018; add esp, 0x18; pop ebx; ret; 
0x00162253: adc eax, 0x14; jne 0x162267; add esp, 0x1c; ret; 
0x0016237d: adc eax, 0x14; jne 0x162397; add esp, 0x28; pop ebx; ret; 
0x0016241d: adc eax, 0x14; jne 0x162437; add esp, 0x28; pop ebx; ret; 
0x0016276f: adc eax, 0x14; jne 0x16277a; add esp, 0x1c; ret; 
0x001627e6: adc eax, 0x14; jne 0x1627ff; add esp, 0x18; pop ebx; ret; 
0x0016364a: adc eax, 0x14; jne 0x163655; add esp, 0x4c; ret; 
0x00165752: adc eax, 0x14; jne 0x1657b9; add esp, 0x18; pop ebx; ret; 
0x00165842: adc eax, 0x14; jne 0x1658a9; add esp, 0x18; pop ebx; ret; 
0x00165ae9: adc eax, 0x14; jne 0x165b3b; add esp, 0x18; pop ebx; ret; 
0x00165b79: adc eax, 0x14; jne 0x165bcb; add esp, 0x18; pop ebx; ret; 
0x00165c38: adc eax, 0x14; jne 0x165c5b; add esp, 0x18; pop ebx; ret; 
0x00165c9d: adc eax, 0x14; jne 0x165cfb; add esp, 0x18; pop ebx; ret; 
0x00165d39: adc eax, 0x14; jne 0x165d99; add esp, 0x18; pop ebx; ret; 
0x00166559: adc eax, 0x14; jne 0x1665ab; add esp, 0x18; pop ebx; ret; 
0x001665e9: adc eax, 0x14; jne 0x16663b; add esp, 0x18; pop ebx; ret; 
0x00166679: adc eax, 0x14; jne 0x1666cb; add esp, 0x18; pop ebx; ret; 
0x00166709: adc eax, 0x14; jne 0x16675b; add esp, 0x18; pop ebx; ret; 
0x00166dc1: adc eax, 0x14; jne 0x166dcf; movzx eax, al; add esp, 0x1c; ret; 
0x00166e21: adc eax, 0x14; jne 0x166e2f; movzx eax, al; add esp, 0x1c; ret; 
0x00166e8a: adc eax, 0x14; jne 0x166e96; add esp, 0x18; pop ebx; ret; 
0x00166eea: adc eax, 0x14; jne 0x166ef6; add esp, 0x18; pop ebx; ret; 
0x0016b9e6: adc eax, 0x14; jne 0x16ba1c; add esp, 0x18; pop ebx; ret; 
0x0016d202: adc eax, 0x14; jne 0x16d219; add esp, 0x18; pop ebx; ret; 
0x0016d27a: adc eax, 0x14; jne 0x16d299; add esp, 0x18; pop ebx; ret; 
0x0016e8c6: adc eax, 0x14; jne 0x16e901; add esp, 0x28; pop ebx; ret; 
0x0016ea87: adc eax, 0x14; jne 0x16eaab; add esp, 0x28; pop ebx; ret; 
0x0016eb29: adc eax, 0x14; jne 0x16eb54; add esp, 0x28; pop ebx; ret; 
0x0016f1be: adc eax, 0x14; jne 0x16f1ca; add esp, 0x28; pop ebx; ret; 
0x00171a21: adc eax, 0x14; jne 0x171a2d; add esp, 0x18; pop ebx; ret; 
0x001745c8: adc eax, 0x14; jne 0x1745d3; add esp, 0x1c; ret; 
0x0017a184: adc eax, 0x14; jne 0x17a1a9; add esp, 0x18; pop ebx; ret; 
0x00037d9b: adc eax, 0x14; jne 0x37db7; add esp, 0x98; pop ebx; ret; 
0x00037f41: adc eax, 0x14; jne 0x37f7c; add esp, 0x28; pop ebx; ret; 
0x00038313: adc eax, 0x14; jne 0x38321; add esp, 0x12c; ret; 
0x00038983: adc eax, 0x14; jne 0x3899f; add esp, 0x98; pop ebx; ret; 
0x00038a03: adc eax, 0x14; jne 0x38a1f; add esp, 0x98; pop ebx; ret; 
0x00038a8b: adc eax, 0x14; jne 0x38a99; add esp, 0x9c; ret; 
0x0003ad5b: adc eax, 0x14; jne 0x3ad66; add esp, 0x2c; ret; 
0x0003ae8b: adc eax, 0x14; jne 0x3ae96; add esp, 0x2c; ret; 
0x0003b16c: adc eax, 0x14; jne 0x3b1ac; add esp, 0x18; pop ebx; ret; 
0x0003b79d: adc eax, 0x14; jne 0x3b7a8; add esp, 0x1c; ret; 
0x0003b7f0: adc eax, 0x14; jne 0x3b7fb; add esp, 0x1c; ret; 
0x0003b83d: adc eax, 0x14; jne 0x3b848; add esp, 0x1c; ret; 
0x0003b890: adc eax, 0x14; jne 0x3b89b; add esp, 0x1c; ret; 
0x000489a7: adc eax, 0x14; jne 0x489b5; add esp, 0x42c; ret; 
0x000582db: adc eax, 0x14; jne 0x582ea; add esp, 0x1018; pop ebx; ret; 
0x00058362: adc eax, 0x14; jne 0x5836e; add esp, 0x78; pop ebx; ret; 
0x00058947: adc eax, 0x14; jne 0x5895f; add esp, 0x1c; ret; 
0x000821b4: adc eax, 0x14; jne 0x821dd; add esp, 0x2c; ret; 
0x0008231c: adc eax, 0x14; jne 0x8234b; add esp, 0x2c; ret; 
0x000864fd: adc eax, 0x14; jne 0x86508; add esp, 0x2c; ret; 
0x0008ae09: adc eax, 0x14; jne 0x8ae15; add esp, 0x28; pop ebx; ret; 
0x0008ae99: adc eax, 0x14; jne 0x8aea4; add esp, 0x2c; ret; 
0x0008c1fd: adc eax, 0x14; jne 0x8c208; add esp, 0x2c; ret; 
0x0008c65d: adc eax, 0x14; jne 0x8c668; add esp, 0x2c; ret; 
0x0008cb49: adc eax, 0x14; jne 0x8cb54; add esp, 0x2c; ret; 
0x0008cf99: adc eax, 0x14; jne 0x8cfa4; add esp, 0x2c; ret; 
0x0008fde2: adc eax, 0x14; jne 0x8fe24; add esp, 0x38; pop ebx; ret; 
0x00090052: adc eax, 0x14; jne 0x90077; add esp, 0x2c; ret; 
0x000902de: adc eax, 0x14; jne 0x90307; add esp, 0x2c; ret; 
0x0009054e: adc eax, 0x14; jne 0x90577; add esp, 0x18; pop ebx; ret; 
0x00092228: adc eax, 0x14; jne 0x92234; add esp, 0x28; pop ebx; ret; 
0x000938b0: adc eax, 0x14; jne 0x938bc; add esp, 0x28; pop ebx; ret; 
0x00093e8e: adc eax, 0x14; jne 0x93e9a; add esp, 0x38; pop ebx; ret; 
0x000c41bd: adc eax, 0x14; jne 0xc41ec; add esp, 0x18; pop ebx; ret; 
0x000cad0d: adc eax, 0x14; jne 0xcad27; add esp, 0x28; pop ebx; ret; 
0x000cad8d: adc eax, 0x14; jne 0xcad98; add esp, 0x1c; ret; 
0x000cadd8: adc eax, 0x14; jne 0xcade4; add esp, 0x38; pop ebx; ret; 
0x000cae38: adc eax, 0x14; jne 0xcae44; add esp, 0x48; pop ebx; ret; 
0x000cbf34: adc eax, 0x14; jne 0xcbf79; add esp, 0x28; pop ebx; ret; 
0x000cc2f8: adc eax, 0x14; jne 0xcc318; add esp, 0x38; pop ebx; ret; 
0x000d4831: adc eax, 0x14; jne 0xd483c; add esp, 0x1c; ret; 
0x000d6ec1: adc eax, 0x14; jne 0xd6ecc; add esp, 0x1c; ret; 
0x000d7025: adc eax, 0x14; jne 0xd7062; add esp, 0x28; pop ebx; ret; 
0x000d7244: adc eax, 0x14; jne 0xd7250; add esp, 0x28; pop ebx; ret; 
0x000d8424: adc eax, 0x14; jne 0xd8433; add esp, 0xe8; pop ebx; ret; 
0x000d84a9: adc eax, 0x14; jne 0xd84b5; add esp, 0x38; pop ebx; ret; 
0x000d8550: adc eax, 0x14; jne 0xd855f; add esp, 0xe8; pop ebx; ret; 
0x000d85d9: adc eax, 0x14; jne 0xd85e5; add esp, 0x38; pop ebx; ret; 
0x000da809: adc eax, 0x14; jne 0xda859; add esp, 0x28; pop ebx; ret; 
0x000dd734: adc eax, 0x14; jne 0xdd7e3; add esp, 0x68; pop ebx; ret; 
0x000df3f5: adc eax, 0x14; jne 0xdf449; add esp, 0x28; pop ebx; ret; 
0x000df495: adc eax, 0x14; jne 0xdf4e9; add esp, 0x28; pop ebx; ret; 
0x000e0e66: adc eax, 0x14; jne 0xe0e86; add esp, 0x78; pop ebx; ret; 
0x000e3526: adc eax, 0x14; jne 0xe3546; add esp, 0x78; pop ebx; ret; 
0x000f8556: adc eax, 0x14; jne 0xf8576; add esp, 0x78; pop ebx; ret; 
0x000f9136: adc eax, 0x14; jne 0xf9156; add esp, 0x78; pop ebx; ret; 
0x00116fea: adc eax, 0x14ba; add byte ptr [ebx + 0x29], bl; ret 0xc085; 
0x000213ca: adc eax, 0x18; rol edx, 9; mov dword ptr [eax + 0x1978], edx; ret; 
0x00185aab: adc eax, 0x1c030004; mov edi, dword ptr [esi]; jmp ebx; 
0x000b3a7a: adc eax, 0x29c0bc0f; ret 0x860f; 
0x000217b8: adc eax, 0x46c68100; mov byte ptr [eax], ah; add byte ptr [ebx - 0x77], dl; ret; 
0x00035061: adc eax, 0x4b; stc; dec dword ptr [edi]; inc ebp; call 0x26856; jmp dword ptr [esi - 0x70]; 
0x000df589: adc eax, 0x5bf4658d; pop esi; pop edi; pop ebp; ret; 
0x000a60b8: adc eax, 0x5bfffffe; ret; 
0x0012a7f0: adc eax, 0x5ed0895b; pop edi; ret; 
0x00089600: adc eax, 0x68; mov dword ptr [eax + 8], edx; xor edx, edx; mov eax, edx; ret; 
0x00023b34: adc eax, 0x6e; stc; jmp dword ptr [esi - 0x77]; 
0x000827f0: adc eax, 0x7c; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x80], eax; ret; 
0x00082827: adc eax, 0x7c; mov dword ptr [eax + 0xc], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x00083149: adc eax, 0x7c; ret; 
0x000827e6: adc eax, 0x80; mov dword ptr [eax + 0x1c], edx; mov edx, dword ptr gs:[0x7c]; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x80], eax; ret; 
0x000828b9: adc eax, 0x80; mov eax, dword ptr [eax + 0x24]; mov byte ptr gs:[0x4fe], al; cmp eax, 1; je 0x828d0; ret; 
0x00136ae0: adc eax, 0x810003b3; ret; 
0x00021de7: adc eax, 0x82170500; and byte ptr [eax], al; mov eax, dword ptr [eax - 0x134]; add eax, dword ptr gs:[0]; ret; 
0x00071a5a: adc eax, 0x824448b; mov edx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x0007c7f7: adc eax, 0x83000002; in al, dx; or byte ptr [ebp + 0x50282444], cl; push esi; call dword ptr [edi + 0x48]; 
0x0009c3fc: adc eax, 0x8300768d; ret 0x8b20; 
0x0003cc76: adc eax, 0x83167500; ret 0x3901; 
0x000a016e: adc eax, 0x83cc7d8b; ret 0xf01; 
0x0009fded: adc eax, 0x83d4758b; ret 0xf01; 
0x000a1371: adc eax, 0x83d47d8b; ret 0xf01; 
0x00059197: adc eax, 0x83fffdf3; in al, dx; add al, 0x29; ret; 
0x000eb866: adc eax, 0x83fffffc; in al, dx; or byte ptr [ebp - 0x6b79d7d], cl; call dword ptr [eax + 0x55]; 
0x00021757: adc eax, 0x88a70500; and byte ptr [eax], al; lea eax, [eax - 0x6921c]; ret; 
0x00021737: adc eax, 0x88c70500; and byte ptr [eax], al; lea eax, [eax - 0x69214]; ret; 
0x0012c067: adc eax, 0x89000002; ret; 
0x0003851a: adc eax, 0x8901488d; mov ch, byte ptr [eax]; add byte ptr [eax], al; ret; 
0x000d86ea: adc eax, 0x89535600; ret; 
0x00021407: adc eax, 0x8bf70500; and byte ptr [eax], al; mov edx, dword ptr [eax - 0xb8]; test edx, edx; je 0x21419; ret; 
0x0016aa48: adc eax, 0x8dffffff; je 0x16aa75; add byte ptr [ebx + 0x2901106d], al; ret; 
0x00037da1: adc eax, 0x98c481; add byte ptr [eax], al; pop ebx; ret; 
0x000d3b07: adc eax, 0x9b840f00; or al, byte ptr [eax]; add byte ptr [ebx + 0x6a5204ec], al; and byte ptr [ebp - 0x77], dl; fucomp st(0); ret; 
0x00058a0c: adc eax, 0xb853001d; add byte ptr es:[eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x00083ec8: adc eax, 0xb85b0000; or al, 0; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x0019039e: adc eax, 0xc1830000; adc byte ptr [esi + 0xf], ah; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00132784: adc eax, 0xc483fffd; and byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0005d297: adc eax, 0xe8830000; add dword ptr [ecx - 0x5b77b], ecx; dec dword ptr [edi]; test dword ptr [eax - 0x39ffffeb], ebp; test dword ptr [edx + edi*8 - 1], eax; jmp dword ptr [ebp - 0x75]; 
0x0006085d: adc eax, 0xec839066; or al, 0x83; ret; 
0x000c9b4a: adc eax, 0xf390e8b; jne 0xc9ca0; pop edi; pop esi; ret; 
0x000fd1c1: adc eax, dword ptr [eax]; add byte ptr [eax + 0x40840f40], ch; or eax, 0xec830000; or byte ptr [ebp - 0x67343], cl; call dword ptr [edi - 1]; 
0x000dfcdd: adc eax, dword ptr [eax]; add byte ptr [eax + 0x7f], bh; mov edx, 0xfa; pop ebx; cmove eax, edx; ret; 
0x0003b9e9: adc eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 0x10; add esp, 0xc; ret; 
0x00069057: adc eax, dword ptr [eax]; add byte ptr [ebx + 0x555304ec], al; push edi; call dword ptr [eax + 0x1c]; 
0x001905ee: adc eax, dword ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00099a28: adc eax, dword ptr [eax]; add byte ptr [ebx - 0x72d3db84], cl; xchg dword ptr [ebx + edx*4 - 7], ecx; dec dword ptr [ebp - 0x6bf3a69]; call dword ptr [eax - 0x73]; 
0x000982a7: adc eax, dword ptr [eax]; add byte ptr [ebx - 0x72e7db8c], cl; xchg byte ptr [ebx + edx*4 - 0x69720007], al; lds eax, ptr [eax - 7]; call dword ptr [eax - 0x73]; 
0x00098483: adc eax, dword ptr [eax]; add byte ptr [ebx - 0x72e7db8c], cl; xchg byte ptr [ebx + edx*4 - 7], ah; dec dword ptr [ebp - 0x6bf3a6a]; call dword ptr [eax - 0x73]; 
0x000384d7: adc eax, dword ptr [eax]; add eax, 0x1f1b27; mov eax, dword ptr [eax + 0x64]; ret; 
0x000384b7: adc eax, dword ptr [eax]; add eax, 0x1f1b47; mov eax, dword ptr [eax + 0x68]; ret; 
0x000b32ac: adc eax, dword ptr [eax]; mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afe29: adc eax, dword ptr [eax]; mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b32cc: adc eax, dword ptr [eax]; mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afe49: adc eax, dword ptr [eax]; mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b3249: adc eax, dword ptr [eax]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afdd6: adc eax, dword ptr [eax]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b328d: adc eax, dword ptr [eax]; mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afe0a: adc eax, dword ptr [eax]; mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b32ee: adc eax, dword ptr [eax]; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afe6b: adc eax, dword ptr [eax]; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b330e: adc eax, dword ptr [eax]; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afe8b: adc eax, dword ptr [eax]; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b332e: adc eax, dword ptr [eax]; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afeab: adc eax, dword ptr [eax]; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000848c9: adc eax, dword ptr [ebp - 0x74c58b2e]; dec ebx; or al, 0x89; clc; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00158c9b: adc eax, dword ptr [ebx + 0x488b0cec]; add al, 0x50; call dword ptr [ecx + 0x10]; 
0x0007925c: adc eax, dword ptr [ebx + 0x5e5b04c4]; ret; 
0x000225f6: adc eax, dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0015bc10: adc eax, dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x00162be8: adc eax, dword ptr [ebx + 0x5e5b3cc4]; pop edi; pop ebp; ret; 
0x0005c353: adc eax, dword ptr [ebx - 0x117cfe3f]; add dword ptr [ecx], edi; ret 0x850f; 
0x000943a9: adc eax, dword ptr [ebx - 0x177c0f20]; add ecx, eax; call 0x1c9c6ba; mov dword ptr [edx + 0x1fc], eax; ret; 
0x00022803: adc eax, dword ptr [ebx - 0x17a9f314]; adc eax, ebp; adc al, 0; mov dword ptr [esp], ebx; call esi; 
0x0019858c: adc eax, dword ptr [ebx - 0x218bfe20]; lea eax, [edi - 0x10]; pop edi; ret; 
0x001a0758: adc eax, dword ptr [ebx - 0x6c72f714]; shl byte ptr [ebp - 9], 1; call dword ptr [edx + 0x50]; 
0x000a5e16: adc eax, dword ptr [ecx + 5]; pop ebx; ret; 
0x000a5e26: adc eax, dword ptr [ecx + 6]; pop ebx; ret; 
0x000a5e36: adc eax, dword ptr [ecx + 7]; pop ebx; ret; 
0x000a5e46: adc eax, dword ptr [ecx + 8]; pop ebx; ret; 
0x000a5dd2: adc eax, dword ptr [ecx]; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x000a5df2: adc eax, dword ptr [ecx]; mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x000a5e02: adc eax, dword ptr [ecx]; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x000a5de2: adc eax, dword ptr [ecx]; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000a5e12: adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x000a5e22: adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000a5e32: adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000a5e42: adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x000a5dc2: adc eax, dword ptr [ecx]; pop ebx; ret; 
0x0009a3c3: adc eax, dword ptr [ecx]; ret 0x1089; 
0x00123578: adc eax, dword ptr [ecx]; ret; 
0x000ac4c6: adc eax, dword ptr [edi + 5]; pop edi; pop esi; pop ebx; ret; 
0x000ac4d6: adc eax, dword ptr [edi + 6]; pop edi; pop esi; pop ebx; ret; 
0x000ac462: adc eax, dword ptr [edi - 1]; pop edi; pop esi; pop ebx; ret; 
0x000ad7e6: adc eax, dword ptr [edi]; lea eax, [edi + 8]; pop edi; pop esi; pop ebx; ret; 
0x000ac0e9: adc eax, dword ptr [edi]; mov byte ptr [edi + 8], dl; pop edi; pop esi; pop ebx; ret; 
0x000ac129: adc eax, dword ptr [edi]; mov dword ptr [edi + 7], edx; pop edi; pop esi; pop ebx; ret; 
0x000ac149: adc eax, dword ptr [edi]; mov dword ptr [edi + 8], edx; pop edi; pop esi; pop ebx; ret; 
0x000ac10a: adc eax, dword ptr [edi]; mov word ptr [edi + 8], dx; pop edi; pop esi; pop ebx; ret; 
0x000ac4c2: adc eax, dword ptr [edi]; movlpd qword ptr [edi + 5], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000ac16b: adc eax, dword ptr [edi]; movlpd qword ptr [edi + 5], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000ac4d2: adc eax, dword ptr [edi]; movlpd qword ptr [edi + 6], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000ac18b: adc eax, dword ptr [edi]; movlpd qword ptr [edi + 6], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000ac1ab: adc eax, dword ptr [edi]; movlpd qword ptr [edi + 7], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000ac0d6: adc eax, dword ptr [edi]; pop edi; pop esi; pop ebx; ret; 
0x000acaff: adc eax, dword ptr [edx + 5]; lea eax, [edx + 0xc]; pop edi; ret; 
0x000acc5f: adc eax, dword ptr [edx + 5]; lea eax, [edx + 0xc]; ret; 
0x000b2692: adc eax, dword ptr [edx + 5]; mov eax, edi; pop ebx; pop edi; ret; 
0x000ab49f: adc eax, dword ptr [edx + 5]; mov eax, edi; pop edi; ret; 
0x000ab5ff: adc eax, dword ptr [edx + 5]; mov eax, edx; ret; 
0x000acb1f: adc eax, dword ptr [edx + 6]; lea eax, [edx + 0xd]; pop edi; ret; 
0x000acc7f: adc eax, dword ptr [edx + 6]; lea eax, [edx + 0xd]; ret; 
0x000b26b2: adc eax, dword ptr [edx + 6]; mov eax, edi; pop ebx; pop edi; ret; 
0x000ab4bf: adc eax, dword ptr [edx + 6]; mov eax, edi; pop edi; ret; 
0x000ab61f: adc eax, dword ptr [edx + 6]; mov eax, edx; ret; 
0x000acb3f: adc eax, dword ptr [edx + 7]; lea eax, [edx + 0xe]; pop edi; ret; 
0x000acc9f: adc eax, dword ptr [edx + 7]; lea eax, [edx + 0xe]; ret; 
0x000b26d2: adc eax, dword ptr [edx + 7]; mov eax, edi; pop ebx; pop edi; ret; 
0x000ab4df: adc eax, dword ptr [edx + 7]; mov eax, edi; pop edi; ret; 
0x000ab63f: adc eax, dword ptr [edx + 7]; mov eax, edx; ret; 
0x000ac9ce: adc eax, dword ptr [edx + 8]; lea eax, [edx + 0xf]; pop edi; ret; 
0x000accbf: adc eax, dword ptr [edx + 8]; lea eax, [edx + 0xf]; ret; 
0x000ab38e: adc eax, dword ptr [edx + 8]; mov eax, edi; pop edi; ret; 
0x000ab65f: adc eax, dword ptr [edx + 8]; mov eax, edx; ret; 
0x000ab00b: adc eax, dword ptr [edx]; lea eax, [edx + 7]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000a80b6: adc eax, dword ptr [edx]; lea eax, [edx + 7]; pop edi; ret; 
0x000a82f6: adc eax, dword ptr [edx]; lea eax, [edx + 7]; ret; 
0x000a9ef1: adc eax, dword ptr [edx]; lea eax, [edx + 8]; pop edi; pop ebx; ret; 
0x000af759: adc eax, dword ptr [edx]; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000af779: adc eax, dword ptr [edx]; mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000a81c9: adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x000a8309: adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000a3dd9: adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000a3f19: adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000b28a2: adc eax, dword ptr [edx]; mov byte ptr [edx + 8], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000a8209: adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x000a8349: adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000a3e19: adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000a3f59: adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000a80f9: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x000a8369: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000a9f29: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xc]; pop edi; pop ebx; ret; 
0x000a5b29: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; pop ebx; ret; 
0x000a3d29: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x000a6aa2: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; pop ebx; ret; 
0x000a3f79: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000af799: adc eax, dword ptr [edx]; mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000af7b9: adc eax, dword ptr [edx]; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x00198c36: adc eax, dword ptr [edx]; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000b24d7: adc eax, dword ptr [edx]; mov eax, edi; pop ebx; pop edi; ret; 
0x000a5af1: adc eax, dword ptr [edx]; mov eax, edi; pop edi; pop ebx; ret; 
0x000a3ce6: adc eax, dword ptr [edx]; mov eax, edi; pop edi; ret; 
0x000a6b1b: adc eax, dword ptr [edx]; mov eax, edx; pop ebx; ret; 
0x000a3f06: adc eax, dword ptr [edx]; mov eax, edx; ret; 
0x000a81ea: adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x000a832a: adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000a3dfa: adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000a3f3a: adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000a822b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000a838b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000a3e3b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000a3f9b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000a824b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; pop edi; ret; 
0x000a83ab: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000a3e5b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x000a3fbb: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000a826b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; pop edi; ret; 
0x000a83cb: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000a3e7b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x000a6a4e: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; pop ebx; ret; 
0x000a3fdb: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000a9f66: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 8], xmm1; lea eax, [edx + 0x10]; pop edi; pop ebx; ret; 
0x000b252a: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop ebx; pop edi; ret; 
0x000a5b66: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; pop ebx; ret; 
0x000af67a: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; ret; 
0x000acaf6: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x000acc56: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000ab496: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x000ab5f6: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000acb16: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000acc76: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000ab4b6: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000ab616: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000acb36: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000acc96: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000ab4d6: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000ab636: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000ac9c5: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000accb6: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000ab385: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000ab656: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x00022809: adc eax, ebp; adc al, 0; mov dword ptr [esp], ebx; call esi; 
0x000517fc: adc eax, edi; add byte ptr [edi], ch; jbe 0x5178d; ret 0x40c7; 
0x00071508: adc eax, esi; cli; jmp dword ptr [esi - 0x70]; 
0x0014cdeb: adc ebp, 0x5f; stc; call dword ptr [eax - 0x73]; 
0x00071db8: adc ebp, eax; cli; jmp dword ptr [esi - 0x70]; 
0x000fc6c0: adc ebp, ebp; call dword ptr [eax + 0x6a]; 
0x00141165: adc ebp, ebx; mov ebp, eax; sub dword ptr [eax], -1; jmp dword ptr [esi - 0x70]; 
0x001620a9: adc ebp, ebx; ret 0x748d; 
0x0007c2cd: adc ebp, ebx; ret; 
0x0014e644: adc ebp, esi; dec dword ptr [ebp - 0x652c36b]; call dword ptr [edx - 0x73]; 
0x0014e670: adc ebp, esi; jmp dword ptr [esi - 0x70]; 
0x00136cb3: adc ebx, 0x59; stc; call dword ptr [eax - 0x18]; 
0x0015af83: adc ebx, 0x63; stc; call dword ptr [edx + 0x6a]; 
0x000b3412: adc ebx, dword ptr [eax + 0xe]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aff7f: adc ebx, dword ptr [eax + 0xe]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b3432: adc ebx, dword ptr [eax + 0xf]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aff9f: adc ebx, dword ptr [eax + 0xf]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009fa77: adc ebx, dword ptr [ebx + 0x5e]; ret; 
0x000ad930: adc ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x000c9c8c: adc ebx, dword ptr [edi + 0x5e]; ret; 
0x000ac27f: adc ebx, dword ptr [edi + 0xe]; pop edi; pop esi; pop ebx; ret; 
0x000ad9af: adc ebx, dword ptr [edi + 0xf]; lea eax, [edi + 0x17]; pop edi; pop esi; pop ebx; ret; 
0x000ac29f: adc ebx, dword ptr [edi + 0xf]; pop edi; pop esi; pop ebx; ret; 
0x00059428: adc ecx, dword ptr [eax + 0x5f5e5b08]; ret; 
0x000b32f2: adc ecx, dword ptr [eax + 5]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afe6f: adc ecx, dword ptr [eax + 5]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b3312: adc ecx, dword ptr [eax + 6]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afe8f: adc ecx, dword ptr [eax + 6]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b3332: adc ecx, dword ptr [eax + 7]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afeaf: adc ecx, dword ptr [eax + 7]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0003a2e5: adc ecx, dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; lea esi, [esi]; call dword ptr [ebx]; 
0x000ebf37: adc ecx, dword ptr [ebp + 0xf3d244c]; mov dh, 0x14; ret 0xc083; 
0x000ad4a3: adc ecx, dword ptr [ebp - 0x7af0ec81]; mov dword ptr [0x5f000007], eax; pop esi; pop ebx; ret; 
0x0013fc4b: adc ecx, dword ptr [ebp - 0x7cf3f7b4]; ror byte ptr [esi], 0x85; sal byte ptr [ebx + 0x39], cl; ret 0x4572; 
0x00071794: adc ecx, dword ptr [ebx - 0x13371]; jmp dword ptr [ebp - 0x75]; 
0x00074694: adc ecx, dword ptr [ebx - 0x13375]; jmp dword ptr [ebp - 0x75]; 
0x00085351: adc ecx, dword ptr [ecx + 0x3e8c1d0]; je 0x85390; mov eax, edi; call dword ptr gs:[0x10]; 
0x0006010a: adc ecx, dword ptr [ecx + 0x5f5e5b38]; ret; 
0x000d96a9: adc ecx, dword ptr [ecx - 0x16fbdbbc]; dec ebp; sbb esp, edi; jmp dword ptr [esi - 0x70]; 
0x000d96d9: adc ecx, dword ptr [ecx - 0x16fbdbbc]; fstp qword ptr [ecx]; cld; jmp dword ptr [esi - 0x70]; 
0x000ad87f: adc ecx, dword ptr [edi + 5]; lea eax, [edi + 0xd]; pop edi; pop esi; pop ebx; ret; 
0x000ac16f: adc ecx, dword ptr [edi + 5]; pop edi; pop esi; pop ebx; ret; 
0x000ac18f: adc ecx, dword ptr [edi + 6]; pop edi; pop esi; pop ebx; ret; 
0x000ac1af: adc ecx, dword ptr [edi + 7]; pop edi; pop esi; pop ebx; ret; 
0x000ad4a6: adc ecx, dword ptr [edi]; test dword ptr [ebx + 0x5f000007], esp; pop esi; pop ebx; ret; 
0x000a822f: adc ecx, dword ptr [edx + 5]; lea eax, [edx + 0xc]; pop edi; ret; 
0x000a838f: adc ecx, dword ptr [edx + 5]; lea eax, [edx + 0xc]; ret; 
0x000a3e3f: adc ecx, dword ptr [edx + 5]; mov eax, edi; pop edi; ret; 
0x000a3f9f: adc ecx, dword ptr [edx + 5]; mov eax, edx; ret; 
0x000a824f: adc ecx, dword ptr [edx + 6]; lea eax, [edx + 0xd]; pop edi; ret; 
0x000a83af: adc ecx, dword ptr [edx + 6]; lea eax, [edx + 0xd]; ret; 
0x000a3e5f: adc ecx, dword ptr [edx + 6]; mov eax, edi; pop edi; ret; 
0x000a3fbf: adc ecx, dword ptr [edx + 6]; mov eax, edx; ret; 
0x000a826f: adc ecx, dword ptr [edx + 7]; lea eax, [edx + 0xe]; pop edi; ret; 
0x000a83cf: adc ecx, dword ptr [edx + 7]; lea eax, [edx + 0xe]; ret; 
0x000a3e7f: adc ecx, dword ptr [edx + 7]; mov eax, edi; pop edi; ret; 
0x000a6a52: adc ecx, dword ptr [edx + 7]; mov eax, edx; pop ebx; ret; 
0x000a3fdf: adc ecx, dword ptr [edx + 7]; mov eax, edx; ret; 
0x000a9f6a: adc ecx, dword ptr [edx + 8]; lea eax, [edx + 0x10]; pop edi; pop ebx; ret; 
0x000b28fe: adc ecx, dword ptr [edx + 8]; mov byte ptr [edx + 0x10], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000b252e: adc ecx, dword ptr [edx + 8]; mov eax, edi; pop ebx; pop edi; ret; 
0x000a5b6a: adc ecx, dword ptr [edx + 8]; mov eax, edi; pop edi; pop ebx; ret; 
0x000af67e: adc ecx, dword ptr [edx + 8]; mov eax, edi; pop edi; ret; 
0x0012c4b9: adc edi, 0x56; stc; call dword ptr [eax - 1]; 
0x0012c46c: adc edi, 0x56; stc; call dword ptr [edx + 0x50]; 
0x001640a8: adc edi, 0x64; stc; call dword ptr [eax - 0x73]; 
0x0003cc73: adc edi, dword ptr [eax]; dec esp; adc eax, 0x83167500; ret 0x3901; 
0x0007e5bf: adc edi, ebx; dec dword ptr [ebp - 0x6818b7b]; call dword ptr [eax - 0x73]; 
0x000c5154: adc edi, edi; jmp dword ptr [esi - 0x70]; 
0x000be897: adc edi, esi; dec dword ptr [ebx - 0x72cfdb84]; xchg dword ptr [edi + edx*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x0003ab83: adc edx, 0; neg edx; cmovs edx, ebx; cmovs eax, ecx; pop ebx; ret; 
0x00021c51: adc edx, 0; neg edx; ret; 
0x0011f689: adc edx, 0x4b; stc; call dword ptr [eax + 0x57]; 
0x0011f947: adc edx, 0x51; stc; call dword ptr [eax + 0x57]; 
0x00120774: adc edx, 0x52; stc; dec dword ptr [eax - 0x6c72f7aa]; ret 0xf952; 
0x000b3475: adc edx, dword ptr [eax + 0x10]; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000affdf: adc edx, dword ptr [eax + 0x10]; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b34d5: adc edx, dword ptr [eax + 0x10]; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b0022: adc edx, dword ptr [eax + 0x10]; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b3505: adc edx, dword ptr [eax + 0x10]; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b0042: adc edx, dword ptr [eax + 0x10]; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b3452: adc edx, dword ptr [eax + 0x10]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000affbf: adc edx, dword ptr [eax + 0x10]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b34a6: adc edx, dword ptr [eax + 0x10]; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b0003: adc edx, dword ptr [eax + 0x10]; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ad9cf: adc edx, dword ptr [edi + 0x10]; lea eax, [edi + 0x18]; pop edi; pop esi; pop ebx; ret; 
0x000ac2e2: adc edx, dword ptr [edi + 0x10]; mov byte ptr [edi + 0x18], cl; pop edi; pop esi; pop ebx; ret; 
0x000ac322: adc edx, dword ptr [edi + 0x10]; mov dword ptr [edi + 0x17], ecx; pop edi; pop esi; pop ebx; ret; 
0x000ac342: adc edx, dword ptr [edi + 0x10]; mov dword ptr [edi + 0x18], ecx; pop edi; pop esi; pop ebx; ret; 
0x000ac303: adc edx, dword ptr [edi + 0x10]; mov word ptr [edi + 0x18], cx; pop edi; pop esi; pop ebx; ret; 
0x000ac2bf: adc edx, dword ptr [edi + 0x10]; pop edi; pop esi; pop ebx; ret; 
0x00120f64: adc edx, ebx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00024d24: adc esi, 0x2b; stc; call dword ptr [eax - 0x18]; 
0x0008f147: adc esi, dword ptr [ebp + 0xe]; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0008f48f: adc esi, dword ptr [ebp + 0xe]; add esp, 8; xor eax, eax; pop ebx; ret; 
0x00152822: adc esi, edi; dec dword ptr [ecx - 0x737f723a]; scasb al, byte ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x0009b472: adc esi, esi; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x00078540: adc esi, esi; ret 0x7402; 
0x0007863e: adc esi, esi; ret 0xf02; 
0x0007849e: adc esi, esi; ret 0xf08; 
0x00072a1c: adc esi, esi; ret 0xf20; 
0x00147e43: adc esp, -0x56; stc; call dword ptr [eax - 0x73]; 
0x000b6f72: adc esp, -0x6a; stc; call dword ptr [eax - 0x73]; 
0x0011ec2b: adc esp, 0x6afff9a0; push 0x93818d50; dec ebx; stc; call dword ptr [eax - 0x18]; 
0x000de40d: adc esp, dword ptr [esi - 0x70]; mov eax, edx; call dword ptr gs:[0x10]; 
0x0015ef59: adc esp, ebp; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x001728d9: adc esp, edi; dec dword ptr [ebx + 0x311c2444]; fild dword ptr [eax + 0xf72007d]; xchg esp, eax; ret; 
0x0013a6ed: add ah, 0x5b; stc; call dword ptr [eax - 0x73]; 
0x0014561b: add ah, 0xa9; stc; call dword ptr [eax - 0x73]; 
0x0014f3cb: add ah, 0xad; stc; call dword ptr [eax - 0x18]; 
0x000b59a7: add ah, 1; add byte ptr [eax], al; ret; 
0x0006b672: add ah, byte ptr [0xf000000]; mov dh, 0x57; or al, 0xf6; ret 0xf08; 
0x0006ca4b: add ah, byte ptr [eax]; add byte ptr [eax], al; add cl, ch; ret 0xfff9; 
0x0012cbb0: add ah, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x00145c8a: add ah, byte ptr [ecx]; add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x001552ba: add ah, byte ptr [edi + 0x2de8ffed]; out 0xfd, eax; jmp dword ptr [esi - 0x70]; 
0x000acaf7: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x000acc57: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000ab497: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x000ab5f7: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000acb17: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000acc77: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000ab4b7: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000ab617: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000acb37: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000acc97: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000ab4d7: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000ab637: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000ac9c6: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000accb7: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000ab386: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000ab657: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000a822c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 5]; lea eax, [edx + 0xc]; pop edi; ret; 
0x000a838c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 5]; lea eax, [edx + 0xc]; ret; 
0x000a3e3c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 5]; mov eax, edi; pop edi; ret; 
0x000a3f9c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 5]; mov eax, edx; ret; 
0x000a824c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 6]; lea eax, [edx + 0xd]; pop edi; ret; 
0x000a83ac: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 6]; lea eax, [edx + 0xd]; ret; 
0x000a3e5c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 6]; mov eax, edi; pop edi; ret; 
0x000a3fbc: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 6]; mov eax, edx; ret; 
0x000a826c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 7]; lea eax, [edx + 0xe]; pop edi; ret; 
0x000a83cc: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 7]; lea eax, [edx + 0xe]; ret; 
0x000a3e7c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 7]; mov eax, edi; pop edi; ret; 
0x000a6a4f: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 7]; mov eax, edx; pop ebx; ret; 
0x000a3fdc: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 7]; mov eax, edx; ret; 
0x000a9f67: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 8]; lea eax, [edx + 0x10]; pop edi; pop ebx; ret; 
0x000b252b: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 8]; mov eax, edi; pop ebx; pop edi; ret; 
0x000a5b67: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 8]; mov eax, edi; pop edi; pop ebx; ret; 
0x000af67b: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 8]; mov eax, edi; pop edi; ret; 
0x000b4d34: add ah, byte ptr [esi - 0x5b]; rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000b4694: add ah, byte ptr [esi - 0x5b]; rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; pop edi; ret; 
0x000b4dad: add ah, byte ptr [esi - 0x5b]; rep movsd dword ptr es:[edi], dword ptr [esi]; xchg edi, eax; mov esi, edx; ret; 
0x000a82d3: add ah, byte ptr [esi - 0x75]; inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; ret; 
0x000a3ee3: add ah, byte ptr [esi - 0x75]; inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x000ac085: add ah, byte ptr [esi - 0x77]; js 0x5e69c2e5; pop ebx; ret; 
0x0003827d: add ah, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x000dfe4f: add ah, byte ptr [esi]; mov edx, 0xffffffff; mov eax, 0x20; cmovne eax, edx; ret; 
0x000dff2f: add ah, byte ptr [esi]; sete al; movzx eax, al; lea eax, [eax + eax - 1]; ret; 
0x0002fa44: add al, 0; add al, ch; movsb byte ptr es:[edi], byte ptr [esi]; mov eax, 0xc4830006; or al, 0x89; ret; 
0x00086a3e: add al, 0; add byte ptr [eax + 0xaf], bh; call dword ptr gs:[0x10]; 
0x0008b02d: add al, 0; add byte ptr [eax + 0xf0], bh; mov ecx, 8; mov esi, edx; call dword ptr gs:[0x10]; 
0x000e686f: add al, 0; add byte ptr [eax - 0x6bf0a305], al; ret 0x5422; 
0x000c8cbc: add al, 0; add byte ptr [eax - 0x73], dl; and byte ptr [eax], 0x30; stc; call dword ptr [eax - 0x18]; 
0x00044783: add al, 0; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], al; jne 0x44785; call dword ptr [eax - 0x18]; 
0x000413e8: add al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], eax; jne 0x413ea; call dword ptr [eax - 0x18]; 
0x000478ee: add al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], eax; jne 0x478f0; call dword ptr [eax - 0x18]; 
0x000478ee: add al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], eax; jne 0x478f0; call dword ptr [eax - 0x18]; ret 0xfe80; 
0x000511ac: add al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], eax; jne 0x511ae; call dword ptr [eax - 0x18]; 
0x000bba56: add al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], eax; jne 0xbba58; call dword ptr [eax - 0x18]; 
0x000c15d9: add al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], eax; jne 0xc15db; call dword ptr [eax - 0x18]; 
0x000c8c03: add al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], eax; jne 0xc8c05; call dword ptr [eax - 0x18]; 
0x000415c7: add al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], esp; xor cl, bh; call dword ptr [eax - 0x18]; 
0x0014c6a2: add al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + ebp*4], edi; stc; call dword ptr [eax - 0x18]; 
0x0003a998: add al, 0; add byte ptr [eax - 1], dl; je 0x3a9c3; sbb al, 0xe8; imul edi, eax, -1; jmp dword ptr [esi - 0x70]; 
0x00094b50: add al, 0; add byte ptr [eax], al; add byte ptr [ebp + 0x39b774d2], al; ret 0xb374; 
0x00143007: add al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x395c2474], cl; ret; 
0x0016fe5b: add al, 0; add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x1deb; 
0x00112750: add al, 0; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x00048bc8: add al, 0; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x00171ae5: add al, 0; add byte ptr [eax], al; add esp, 0xc; ret; 
0x00093b17: add al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00020002: add al, 0; add byte ptr [eax], al; jmp dword ptr [ebx + 8]; 
0x00083143: add al, 0; add byte ptr [eax], al; mov dword ptr gs:[0x7c], edx; ret; 
0x0008289b: add al, 0; add byte ptr [eax], al; mov dword ptr gs:[0x80], eax; ret; 
0x0010a268: add al, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011fb70: add al, 0; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x00197a0e: add al, 0; add byte ptr [eax], al; pop edi; ret; 
0x000827d4: add al, 0; add byte ptr [eax], al; ret; 
0x000489a2: add al, 0; add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x489b5; add esp, 0x42c; ret; 
0x0009560f: add al, 0; add byte ptr [ebp + 0x46850fd2], al; add dword ptr [eax], eax; add byte ptr [ebx + 0x44c90], cl; add byte ptr [ecx], bh; ret; 
0x0011ec53: add al, 0; add byte ptr [ebp - 0x65eff80], cl; jmp dword ptr [ebp - 0x75]; 
0x0011eda3: add al, 0; add byte ptr [ebp - 0x6b46180], cl; jmp dword ptr [ebp - 0x75]; 
0x0006528e: add al, 0; add byte ptr [ebp - 0x6cd907a], cl; call dword ptr [eax - 0x73]; 
0x000da02e: add al, 0; add byte ptr [ebx + 0x24448901], cl; sub byte ptr [ebp - 0x6ba6179], cl; call dword ptr [eax + 0x53]; 
0x000828c4: add al, 0; add byte ptr [ebx + 0x47401f8], al; ret; 
0x00160196: add al, 0; add byte ptr [ebx + 0x50510450], cl; call dword ptr [edx + 8]; 
0x000420f1: add al, 0; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000518b0: add al, 0; add byte ptr [ebx + 0x5e], bl; ret; 
0x00048513: add al, 0; add byte ptr [ebx + 0x688d04ec], al; call dword ptr [ebp + 0x53]; 
0x00083168: add al, 0; add byte ptr [ebx + 0x87401f8], al; ret; 
0x0006860f: add al, 0; add byte ptr [ebx - 0x1337f], cl; jmp dword ptr [ebp - 0x75]; 
0x001048c6: add al, 0; add byte ptr [ebx - 0x13f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x00050897: add al, 0; add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x0005363b: add al, 0; add byte ptr [ebx - 0x49f07fbb], cl; push eax; or al, 0x89; sal esi, 1; ret 0xf40; 
0x000e2bdc: add al, 0; add byte ptr [ebx - 0x6a76f314], al; cmp bl, 0xff; call dword ptr [ebx - 0x18]; 
0x0010724c: add al, 0; add byte ptr [ebx - 0x6a76f314], al; cmp bl, 0xff; call dword ptr [ebx - 0x18]; ret 0xf7b4; 
0x000e839e: add al, 0; add byte ptr [ebx - 0x6bf0a308], al; ret 0x5422; 
0x0019ab09: add al, 0; add byte ptr [ebx - 0x7ac3dbbc], cl; ror byte ptr [edi], 0x84; ret; 
0x000cd476: add al, 0; add byte ptr [ebx - 0x7c72f714], al; cmp al, 0x45; stc; call dword ptr [eax + 0x56]; 
0x0011f69d: add al, 0; add byte ptr [ebx - 0x7c72f714], al; sbb al, 0x4c; stc; call dword ptr [eax + 0x57]; 
0x0011f6d3: add al, 0; add byte ptr [ebx - 0x7c72f714], al; stosb byte ptr es:[edi], al; push edx; stc; call dword ptr [eax + 0x57]; 
0x0014a1cc: add al, 0; add byte ptr [ecx - 0x7209ce08], cl; je 0x14a1fc; add byte ptr [eax + 0xf2efa80], dl; xchg esp, eax; ret 0xc083; 
0x00130d1c: add al, 0; add byte ptr [ecx], al; call eax; 
0x00047111: add al, 0; add byte ptr [ecx], bh; ret; 
0x000fd0ea: add al, 0; add byte ptr [ecx], cl; ret 0x840f; 
0x00049042: add al, 0; add byte ptr [ecx], dh; rol byte ptr [ebx + 0x440ffff8], cl; ret 0x3c83; 
0x000ac04b: add al, 0; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000fc45d: add al, 0; add byte ptr [edi], cl; mov esi, 0x83df89ca; ret; 
0x000f1894: add al, 0; add byte ptr [edi], cl; test dword ptr [edx - 0x7cfffff9], ebp; rol byte ptr [ecx], 0x83; ret 0x3b20; 
0x000b967d: add al, 0; add byte ptr [edi], cl; xchg ebp, eax; ret 0x9eb; 
0x0012ceb5: add al, 0; add byte ptr [edx], al; call eax; 
0x0007cfbd: add al, 0; add byte ptr [edx], ch; push ebx; push ecx; push esi; call dword ptr [ebp + 0x40]; 
0x0014276c: add al, 0; add byte ptr [esi - 0x3f], ah; ret; 
0x00104897: add al, 0; add dh, dh; ret 0xf02; 
0x00104885: add al, 0; add dh, dh; ret 0xf20; 
0x000535cf: add al, 0; add dh, dh; ret 0xf50; 
0x0010488e: add al, 0; add dh, dh; ret 0xf80; 
0x001280c7: add al, 0; add eax, 0x101f37; mov eax, dword ptr [eax - 0xc8]; mov eax, dword ptr [eax + 0x24]; ret; 
0x00090406: add al, 0; add esp, 0x1c; ret; 
0x00038517: add al, 0; je 0x38530; lea ecx, [eax + 1]; mov dword ptr [edx + 0x68], ecx; ret; 
0x000c9f79: add al, 0; lea ecx, [eax + 1]; jne 0xc9f58; mov eax, ecx; ret; 
0x000a212e: add al, 0; mov dword ptr [edx], eax; lea eax, [edx + 4]; pop ebx; pop esi; ret; 
0x000a2066: add al, 0; mov dword ptr [edx], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x00037a03: add al, 0; mov ebx, dword ptr [esp + 0x20]; mov ecx, 8; mov edx, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x000e7425: add al, 0; or byte ptr [edi], 0xa3; ret 0x830f; 
0x00140651: add al, 0x11; add byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x00178080: add al, 0x11; add esp, 4; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x00150c16: add al, 0x11; add esp, 4; pop ebx; pop esi; ret; 
0x00058aa0: add al, 0x11; mov eax, 0xffffffff; pop ebx; pop esi; pop edi; ret; 
0x00093328: add al, 0x11; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x000379b0: add al, 0x11; mov eax, 0xffffffff; pop ebx; ret; 
0x000216ef: add al, 0x11; mov eax, 0xffffffff; ret; 
0x00093bf1: add al, 0x12; mov ebx, dword ptr [eax]; mov eax, 0x107; call dword ptr gs:[0x10]; 
0x00093ed3: add al, 0x1b; mov ebx, dword ptr [eax]; mov ecx, dword ptr [esp + 0x64]; mov eax, 0x199; mov esi, ebp; call dword ptr gs:[0x10]; 
0x00074ad9: add al, 0x1e; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0004c6f0: add al, 0x24; add eax, 0x11; add esp, 4; add eax, ebx; jmp eax; 
0x0004ca6a: add al, 0x24; add esp, 0xc; ret; 
0x000363e7: add al, 0x24; add esp, 4; ret; 
0x00036127: add al, 0x24; add esp, 8; ret; 
0x00170e32: add al, 0x24; call 0x20140; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00161f1c: add al, 0x24; call dword ptr [edx + 0x10]; 
0x0009423f: add al, 0x24; call esi; 
0x0004ca1d: add al, 0x24; fld dword ptr [esp]; add esp, 4; ret; 
0x0004caa1: add al, 0x24; fld xword ptr [esp]; add esp, 0x1c; ret; 
0x0003634a: add al, 0x24; mov dword ptr [edx], eax; add esp, 4; ret; 
0x001243eb: add al, 0x24; mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00124b9b: add al, 0x24; mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00124ad6: add al, 0x24; mov eax, dword ptr [esp + 0x38]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0004b031: add al, 0x24; ret; 
0x0011636c: add al, 0x28; mov dword ptr [esp + 0xc], eax; mov eax, edi; call dword ptr gs:[0x10]; 
0x0016fa6f: add al, 0x29; ret 0x143b; 
0x0004c86d: add al, 0x29; ret 0x3b89; 
0x0007e86d: add al, 0x29; ret 0x5052; 
0x0016fc97: add al, 0x29; ret 0x543b; 
0x0013b59b: add al, 0x29; ret 0x5752; 
0x0019920d: add al, 0x29; ret 0xc085; 
0x00096c78: add al, 0x29; ret 0xf801; 
0x00199c9c: add al, 0x29; ret 0xfa83; 
0x00078610: add al, 0x29; ret 0xfac1; 
0x0005919d: add al, 0x29; ret; 
0x0012c9b3: add al, 0x2b; inc ebx; add al, 0x5b; pop esi; pop edi; ret; 
0x000308d0: add al, 0x2b; inc ebx; add al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0016f91f: add al, 0x2b; inc ebx; add al, 0x83; ret; 
0x00171623: add al, 0x2b; inc edi; add al, 0x8d; push 0x24448909; and al, 0x89; ret; 
0x0004ac34: add al, 0x30; add byte ptr [eax], al; mov eax, 0x180; call dword ptr gs:[0x10]; 
0x00162c76: add al, 0x30; add byte ptr [ebx + 0x1b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00080c07: add al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0015bfc2: add al, 0x31; ret 0xd889; 
0x000a2592: add al, 0x31; rol byte ptr [ebx + 0x77740fa], 0x8b; test byte ptr [ecx - 0x8a0], dl; ret; 
0x000a2562: add al, 0x31; rol byte ptr [ebx + 0x77740fa], 0x8b; test byte ptr [ecx - 0x9c0], dl; ret; 
0x0006fd32: add al, 0x31; rol byte ptr [ecx + 0x85fa], 0; ja 0x6fd44; mov eax, dword ptr [ecx + edx*4 - 0xbe0]; ret; 
0x00126c27: add al, 0x31; ror byte ptr [ebx + 0x3980044a], 0; je 0x126c38; ret; 
0x0007b4c4: add al, 0x31; ror byte ptr [ecx + 0x5bd08903], cl; pop esi; ret; 
0x0007b97c: add al, 0x31; ror byte ptr [ecx + 0x5bd08903], cl; ret; 
0x000ced3a: add al, 0x31; sar byte ptr [0xa3d70b], cl; setb dl; add edx, 0x16d; mov eax, edx; ret; 
0x0010497a: add al, 0x31; sar byte ptr [eax + 0x1b4], cl; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x0016f004: add al, 0x31; test byte ptr [ebp + 0x50282444], -0x73; xchg dword ptr [eax + 0x4d], esi; hlt; call dword ptr [eax - 0x73]; 
0x00145dd5: add al, 0x37; add byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x0013f0d1: add al, 0x37; mov eax, 6; call dword ptr gs:[0x10]; 
0x000a1cde: add al, 0x39; fdiv dword ptr [ebp - 0x13]; mov eax, edx; pop ebx; pop esi; ret; 
0x000a1c9a: add al, 0x39; fdiv dword ptr [ebp - 0xf]; mov eax, edx; pop ebx; ret; 
0x000f2278: add al, 0x39; ret 0x2b75; 
0x000882ad: add al, 0x39; ret 0x5072; 
0x000f4e20: add al, 0x39; ret 0xcb75; 
0x00118574: add al, 0x39; ret 0xf372; 
0x000f5c9d: add al, 0x39; ret 0xf375; 
0x00199cd8: add al, 0x39; ret 0xf572; 
0x0004f893: add al, 0x39; ret 0xf672; 
0x0009cb9c: add al, 0x39; ret 0xf775; 
0x0004d862: add al, 0x39; ret; 
0x00080ffd: add al, 0x39; retf 0x1e73; movzx eax, byte ptr [edx]; pop ebx; pop esi; ret; 
0x000b72ed: add al, 0x39; retf 0x474; test edx, edx; jne 0xb72e8; ret; 
0x000a23bd: add al, 0x39; ror byte ptr [ecx + 0xf102454], 1; inc edi; ret 0x5350; 
0x00127cef: add al, 0x39; sal dword ptr [ebp - 0xc], 0x8b; test dword ptr [edi + edi*8 - 1], eax; dec dword ptr [ebp - 0x10257f80]; call dword ptr [eax + 0x6a]; 
0x00092f80: add al, 0x3b; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x000e9577: add al, 0x3b; push ebx; add al, 0x74; sbb dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x000e5a6e: add al, 0x3c; aas; jne 0xe5a89; mov eax, 1; ret; 
0x000fdefb: add al, 0x3c; jg 0xfdf0e; inc esp; ret 0x8589; 
0x001406f2: add al, 0x3e; pop ebx; pop esi; pop edi; ret; 
0x000eb89f: add al, 0x42; add dword ptr [esi + ecx - 0x77], esi; ret; 
0x000df9fa: add al, 0x47; stc; call dword ptr [eax + 0x53]; 
0x000dfa57: add al, 0x47; stc; call dword ptr [eax - 1]; 
0x0002fca4: add al, 0x50; and eax, 0x1000; ret; 
0x0002fc74: add al, 0x50; and eax, 0x100; ret; 
0x0002fc44: add al, 0x50; and eax, 0x2000; ret; 
0x0002fb84: add al, 0x50; and eax, 0x200; ret; 
0x0002fbe4: add al, 0x50; and eax, 0x4000; ret; 
0x0002faf4: add al, 0x50; and eax, 0x400; ret; 
0x0002fbb4: add al, 0x50; and eax, 0x8000; ret; 
0x0002fb54: add al, 0x50; and eax, 0x800; ret; 
0x0002fd54: add al, 0x50; and eax, 1; ret; 
0x0002fb24: add al, 0x50; and eax, 2; ret; 
0x0002fc14: add al, 0x50; and eax, 4; ret; 
0x0002fac4: add al, 0x50; and eax, 8; ret; 
0x00158ca1: add al, 0x50; call dword ptr [ecx + 0x10]; 
0x00158e4e: add al, 0x50; call dword ptr [edx + 0x10]; 
0x00150da5: add al, 0x50; call edi; 
0x00165ff3: add al, 0x50; push dword ptr [esp + 0x1c]; call 0x165e20; add esp, 0x1c; ret; 
0x00057bcd: add al, 0x50; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x57b80; add esp, 0x1c; ret; 
0x000752bd: add al, 0x50; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x57ba0; add esp, 0x1c; ret; 
0x0007d781: add al, 0x50; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x00077be7: add al, 0x50; push edx; push dword ptr [esp + 0x18]; call ecx; 
0x0007d20f: add al, 0x50; push edx; push esi; call ecx; 
0x0013127c: add al, 0x50; shr ax, 0xe; and eax, 1; pop ebx; ret; 
0x0011d782: add al, 0x51; push 3; push ebx; call edx; 
0x0017312c: add al, 0x51; push dword ptr [esp + 0xc]; push ebx; call dword ptr [ebp + 0x3c]; 
0x0016019b: add al, 0x51; push eax; call dword ptr [edx + 8]; 
0x00162e34: add al, 0x51; push edi; call dword ptr [eax + 8]; 
0x0006c063: add al, 0x51; push edi; push dword ptr [ebp - 0x8a0]; call edx; 
0x001593b0: add al, 0x52; call dword ptr [eax + 0x10]; 
0x00161faa: add al, 0x52; call dword ptr [eax + 0x14]; 
0x00162109: add al, 0x52; call dword ptr [ecx + 0x10]; 
0x001592c4: add al, 0x52; mov dword ptr [esp + 0x2c], edx; call dword ptr [eax]; 
0x00078d5f: add al, 0x52; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x001655f5: add al, 0x52; push ebp; push esi; call dword ptr [eax + 0xc]; 
0x0016562d: add al, 0x52; push ebp; push esi; call dword ptr [eax + 8]; 
0x0015b07c: add al, 0x52; push ebx; call dword ptr [eax + 4]; 
0x0015b03c: add al, 0x52; push ebx; call dword ptr [eax]; 
0x001665a0: add al, 0x52; push ecx; call dword ptr [eax + 0x24]; 
0x00165b30: add al, 0x52; push ecx; call dword ptr [eax + 4]; 
0x001590e8: add al, 0x53; call dword ptr [eax + 0x10]; 
0x001626c3: add al, 0x53; call dword ptr [eax]; 
0x0014e6d4: add al, 0x53; mov ebx, edi; call 0x20140; mov dword ptr [esp], ebp; call esi; 
0x000671d2: add al, 0x53; push dword ptr [ebp - 0x88c]; push dword ptr [ebp - 0x87c]; call dword ptr [edx + 0x1c]; 
0x00065de2: add al, 0x53; push dword ptr [esp + 0x14]; push ebp; call dword ptr [eax + 0x1c]; 
0x000719e7: add al, 0x53; push dword ptr [esp + 0x1c]; push dword ptr [esi + 0x98]; call eax; 
0x0006d982: add al, 0x53; push dword ptr [esp + 0x24]; push ebp; call dword ptr [esi + 0x1c]; 
0x00066a37: add al, 0x53; push eax; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x00068b43: add al, 0x53; push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x00073909: add al, 0x53; push edi; push esi; call dword ptr [eax + 0x2c]; 
0x00066b52: add al, 0x53; push edx; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x00165612: add al, 0x53; push edx; push esi; call dword ptr [eax + 0xc]; 
0x0016564a: add al, 0x53; push edx; push esi; call dword ptr [eax + 8]; 
0x00165e99: add al, 0x53; push esi; call dword ptr [eax + 4]; 
0x0006baca: add al, 0x53; push esi; push dword ptr [ebp - 0x8a0]; call dword ptr [eax + 0x1c]; 
0x0006dd6b: add al, 0x53; push esi; push ebp; call dword ptr [edi + 0x1c]; 
0x0004aaa7: add al, 0x53; xor edx, edx; lea ecx, [eax + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x00170466: add al, 0x55; mov eax, dword ptr [esp + 0x10]; call eax; 
0x0003913e: add al, 0x55; push dword ptr [esp + 0x30]; push esi; call edi; 
0x0007d68b: add al, 0x55; push dword ptr [esp + 0x3c]; push edi; call dword ptr [esi + 0x20]; 
0x00069994: add al, 0x55; push dword ptr [esp + 0x44]; push edi; call dword ptr [eax + 0x1c]; 
0x000698a9: add al, 0x55; push dword ptr [esp + 0x44]; push edi; call dword ptr [ebx + 0x1c]; 
0x0006a7b8: add al, 0x55; push eax; push esi; mov eax, dword ptr [esp + 0x1c]; call dword ptr [eax + 0x1c]; 
0x00038e36: add al, 0x55; push ebx; push esi; call edi; 
0x00074ca4: add al, 0x55; push edi; push ebx; mov eax, dword ptr [esp + 0x10]; call dword ptr [eax + 0x1c]; 
0x00038e12: add al, 0x55; push esi; push dword ptr [esp + 0x1c]; call edi; 
0x00038de5: add al, 0x55; push esi; push dword ptr [esp + 0x30]; call edi; 
0x0007c1d2: add al, 0x56; push dword ptr [esp + 0x28]; push edi; call dword ptr [ebp + 0x1c]; 
0x00068707: add al, 0x56; push dword ptr [esp + 0x28]; push edi; call dword ptr [ebx + 0x1c]; 
0x00074975: add al, 0x56; push dword ptr [esp + 0x38]; push edi; call dword ptr [edx + 0x1c]; 
0x0007c354: add al, 0x56; push ebp; push edi; call dword ptr [edx + 0x1c]; 
0x0015f195: add al, 0x56; push ebx; call dword ptr [eax + 0x24]; 
0x00162e42: add al, 0x57; call dword ptr [eax + 0x10]; 
0x0011d74b: add al, 0x57; push 0; push ebx; call esi; 
0x0011d75f: add al, 0x57; push 1; push ebx; call esi; 
0x0011d772: add al, 0x57; push 2; push ebx; call esi; 
0x00071d18: add al, 0x57; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x00072b75: add al, 0x57; push dword ptr [esp + 8]; push ebx; call dword ptr [ebp + 0x1c]; 
0x00053858: add al, 0x57; push ebx; push dword ptr [ebp - 0x88]; call eax; 
0x0006ebca: add al, 0x57; push esi; push ebp; call dword ptr [ebx + 0x1c]; 
0x001596e8: add al, 0x5a; push edi; push ebx; call dword ptr [eax + 0x14]; 
0x0003b5fb: add al, 0x5b; mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x00078128: add al, 0x5b; pop esi; jmp eax; 
0x00035137: add al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x0009a62b: add al, 0x5b; pop esi; pop edi; ret; 
0x00022782: add al, 0x5b; pop esi; ret; 
0x000218da: add al, 0x5b; pop esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0003799b: add al, 0x5b; ret; 
0x0019193b: add al, 0x5d; pop ebx; ret; 
0x00191942: add al, 0x5e; pop edi; pop ebp; pop ebx; xor eax, eax; ret; 
0x000847db: add al, 0x5e; pop edi; ret; 
0x0012ca28: add al, 0x5f; or byte ptr [ebx + ebp*8 + 0x5b], dh; mov eax, ecx; pop esi; pop edi; ret; 
0x000a9ec3: add al, 0x5f; pop ebx; ret; 
0x000ac0a9: add al, 0x5f; pop esi; pop ebx; ret; 
0x000a818c: add al, 0x5f; ret; 
0x00152b48: add al, 0x61; stc; call dword ptr [eax - 0x18]; 
0x0011532e: add al, 0x65; call dword ptr [0x10]; pop ebp; pop edi; pop ebx; ret; 
0x00082824: add al, 0x65; mov edx, dword ptr [0x7c]; mov dword ptr [eax + 0xc], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x00104437: add al, 0x66; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x000a8197: add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; pop edi; ret; 
0x000a82d7: add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; ret; 
0x000b25ba: add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000a3db7: add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edi; pop edi; ret; 
0x000a3ee7: add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x000aca99: add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x000acbf9: add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000ab439: add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000ab599: add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x00174938: add al, 0x67; idiv bh; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00074c32: add al, 0x6a; adc byte ptr [edi + 0x53], dl; call dword ptr [eax + 0x1c]; 
0x00080734: add al, 0x6a; add byte ptr [edx], ch; push ebx; call dword ptr [ebp + 0x2c]; 
0x0012f311: add al, 0x6a; add eax, 0x575e938d; stc; call dword ptr [edx + 0x50]; 
0x0012f7ef: add al, 0x6a; add eax, 0x5794808d; stc; call dword ptr [eax - 1]; 
0x000f7d50: add al, 0x6a; add eax, 0x6003848d; cld; clc; call dword ptr [eax - 0x73]; 
0x00130fb6: add al, 0x6a; add eax, 0x6d20878d; stc; call dword ptr [eax - 0x75]; 
0x001451d8: add al, 0x6a; add eax, 0x8d8134ff; or ah, 0x72; stc; call dword ptr [eax - 0x18]; 
0x000fa480: add al, 0x6a; add eax, 0x9bc4868d; stc; call dword ptr [eax - 0x73]; 
0x0012efa2: add al, 0x6a; add eax, 0xa480808d; stc; call dword ptr [eax - 0x75]; 
0x0012fbec: add al, 0x6a; add eax, 0xa4b8808d; stc; call dword ptr [eax + 0x6a]; 
0x000ff6ec: add al, 0x6a; add eax, 0xcc818d50; jb 0xff6ee; call dword ptr [eax - 0x18]; 
0x0015ad64: add al, 0x6a; add eax, 0xcc838d50; jb 0x15ad66; call dword ptr [eax - 0x18]; 
0x00057ead: add al, 0x6a; add eax, 0xcc838d50; jb 0x57eaf; call dword ptr [eax - 0x18]; 
0x00081a5f: add al, 0x6a; add eax, 0xcc838d50; jb 0x81a61; call dword ptr [eax - 0x18]; 
0x0009b56b: add al, 0x6a; add eax, 0xcc838d50; jb 0x9b56d; call dword ptr [eax - 0x18]; 
0x00058ede: add al, 0x6a; add eax, 0xcc858d50; jb 0x58ee0; call dword ptr [eax - 0x18]; 
0x00165577: add al, 0x6a; call dword ptr [ebp + 0x56]; 
0x00165577: add al, 0x6a; call dword ptr [ebp + 0x56]; call edi; 
0x00167153: add al, 0x6a; call dword ptr [ebp + 0x57]; 
0x00033d53: add al, 0x6a; or ecx, dword ptr [ebx - 0x72ebdb8c]; xchg byte ptr [edi + 0x2f], dh; stc; call dword ptr [eax - 1]; 
0x000cc4c7: add al, 0x6b; ret; 
0x0013f8cc: add al, 0x72; ret; 
0x00074463: add al, 0x73; or cl, byte ptr [ebp + 0x889044a]; mov eax, dword ptr [edx]; ret; 
0x00126522: add al, 0x74; pop ebx; mov ebx, dword ptr [esp + 0x50]; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x0010500d: add al, 0x74; push ss; mov ecx, dword ptr [esp + 0xc]; mov eax, 0xdb; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0003bd4b: add al, 0x74; ret 0xb85b; 
0x000e957a: add al, 0x74; sbb dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x00195993: add al, 0x75; dec esi; add eax, 0xb; ret; 
0x000f0ef3: add al, 0x75; fimul dword ptr [ebx + 0x408b0c50]; or byte ptr [ebx - 0x76e3db8c], cl; shr dword ptr [ecx], cl; ret; 
0x001311f9: add al, 0x75; hlt; mov eax, dword ptr [eax + 0x18]; ret; 
0x001703c3: add al, 0x75; sbb byte ptr [ebp - 0xbacff7e], cl; jmp dword ptr [esi - 9]; 
0x001936ab: add al, 0x76; ret; 
0x0010fb85: add al, 0x77; adc byte ptr [ebx + 0x66082454], cl; mov dword ptr [edx + 0x3e], eax; xor eax, eax; ret; 
0x00111515: add al, 0x77; adc byte ptr [ebx + 0x66082454], cl; mov dword ptr [edx + 0x42], eax; xor eax, eax; ret; 
0x000fb406: add al, 0x77; push es; setne al; movzx eax, al; ret; 
0x000f0093: add al, 0x7c; ret 0xb48d; 
0x00126c2c: add al, 0x80; cmp dword ptr [eax], eax; je 0x126c38; ret; 
0x00140ac7: add al, 0x80; js 0x140acd; add byte ptr [ebp + 0xa], dh; movzx eax, byte ptr [eax + 1]; shr eax, 1; ret; 
0x0006fc90: add al, 0x81; les ebp, ptr [ecx + eax*4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0007c9e5: add al, 0x81; les ebx, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x000b9842: add al, 0x81; ret 0; 
0x000e8c38: add al, 0x81; ret 0x2000; 
0x0008ba8b: add al, 0x82; stc; call dword ptr [eax - 0x73]; 
0x0007be87: add al, 0x83; and bh, cl; ret; 
0x00152d6f: add al, 0x83; clc; add dword ptr [edi + 0xb], edi; ret; 
0x00060769: add al, 0x83; clc; sub cl, byte ptr [edi]; xchg esp, eax; ret; 
0x000829a2: add al, 0x83; cmp byte ptr [ecx], al; je 0x829b0; ret; 
0x00090b90: add al, 0x83; cmp dword ptr [edx], eax; je 0x90b52; pop ebx; pop esi; ret; 
0x00167150: add al, 0x83; in al, dx; add al, 0x6a; call dword ptr [ebp + 0x57]; 
0x001596b2: add al, 0x83; in al, dx; or al, 0x53; call dword ptr [eax + 0x10]; 
0x0015a45a: add al, 0x83; in eax, 0xfc; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x00166b37: add al, 0x83; inc eax; adc al, 4; mov eax, 1; ret; 
0x000894d3: add al, 0x83; inc edx; add al, 1; add esp, 0xc; ret; 
0x00099b00: add al, 0x83; jmp 0x1ea1e0b; cmovne eax, ecx; pop ebx; ret; 
0x00126eb1: add al, 0x83; jmp dword ptr [eax]; 
0x000913a9: add al, 0x83; js 0x913b5; adc al, 0xf; xchg dword ptr [ebx + eax - 0x58180000], ebx; ret; 
0x000b9f81: add al, 0x83; lds eax, ptr [ebx + eax*4]; ret; 
0x000308d3: add al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x001657b2: add al, 0x83; les ebx, ptr [eax]; pop ebx; jmp eax; 
0x0019c62a: add al, 0x83; les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x00072823: add al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0014741a: add al, 0x83; les ecx, ptr [eax]; lea edx, [eax + ecx]; pop ebx; mov eax, edx; ret; 
0x0002c0cd: add al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0009ad7f: add al, 0x83; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret 4; 
0x0009a7a3: add al, 0x83; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0015920f: add al, 0x83; les edx, ptr [ebx + edx*2]; call dword ptr [eax + 0x10]; 
0x00186a0d: add al, 0x83; ljmp 0xf702:0x89068b04; ret 0xf; 
0x001838dd: add al, 0x83; ljmp 0xf702:0x89078b04; ret 0xf; 
0x000b5220: add al, 0x83; out dx, al; add al, 0x83; out dx, al; add al, 0xf7; ret 0; 
0x000b5223: add al, 0x83; out dx, al; add al, 0xf7; ret 0; 
0x00084763: add al, 0x83; pushal; or bl, bh; xor eax, eax; ret; 
0x00066584: add al, 0x83; rcl dword ptr [eax], 0x39; ret 0xf475; 
0x00040852: add al, 0x83; rcr byte ptr [ecx], 0x39; ror byte ptr [edi], 1; dec edi; ret 0xf001; 
0x0015f734: add al, 0x83; rcr byte ptr [edi + edi*8], 0xb0; nop; add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; 
0x0003b29e: add al, 0x83; ret 0x3904; 
0x000336dc: add al, 0x83; ret 0x3908; 
0x001408a4: add al, 0x83; ret 0x8108; 
0x0002b496: add al, 0x83; ret 0x8301; 
0x0004b924: add al, 0x83; ret 0x8304; 
0x000c9fda: add al, 0x83; ret 0x8310; 
0x000b4ee3: add al, 0x83; ret 0x8404; 
0x000b5dd2: add al, 0x83; ret 0x8504; 
0x0012fe65: add al, 0x83; ret 0x8518; 
0x0013f9e8: add al, 0x83; ret 0x8802; 
0x0004bf3b: add al, 0x83; ret 0x8901; 
0x0002a2e1: add al, 0x83; ret 0x8904; 
0x000d5709: add al, 0x83; ret 0x8930; 
0x000b4c32: add al, 0x83; ret 0x8b04; 
0x0002b6e9: add al, 0x83; ret 0x8d01; 
0x0013145d: add al, 0x83; ret 0xc601; 
0x0019a697: add al, 0x83; ret 0xd304; 
0x000e7bcb: add al, 0x83; ret 0xeb04; 
0x000a2624: add al, 0x83; ret 0xf04; 
0x00142abf: add al, 0x83; ret 0xf0c; 
0x00028e5f: add al, 0x83; ret; 
0x000b72ea: add al, 0x83; rol byte ptr [ecx + edi], 0xca; je 0xb72f6; test edx, edx; jne 0xb72e8; ret; 
0x000943b2: add al, 0x83; rol byte ptr [ecx], 0x89; cmp ah, 1; add byte ptr [eax], al; ret; 
0x0009c3f7: add al, 0x83; rol dword ptr [ecx], 0xeb; adc eax, 0x8300768d; ret 0x8b20; 
0x0014d1ac: add al, 0x83; ror byte ptr [eax], 0x83; ret 0x8908; 
0x00158598: add al, 0x83; shr byte ptr [eax], 0xff; jo 0x1585b3; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x001036e8: add al, 0x83; sti; add cl, byte ptr [edi]; xchg esp, eax; ret 0xff52; 
0x00023402: add al, 0x85; ror byte ptr [edi], 0x44; ret; 
0x000edddb: add al, 0x85; ror byte ptr [edi], 0x84; ret 1; 
0x0008bcab: add al, 0x85; sal byte ptr [ebp + 0x10], cl; and dword ptr [eax], 0x7fffffff; xor eax, eax; ret; 
0x0011e23f: add al, 0x85; sal byte ptr [ebp + 4], cl; ret; 
0x0011e263: add al, 0x85; sal byte ptr [ebp + 8], cl; ret; 
0x0014e252: add al, 0x85; sal byte ptr [ebp + eax + 0x39], 0x50; or byte ptr [ebp - 0xc], dh; ret; 
0x00147f74: add al, 0x85; sal byte ptr [ebp - 0x19], 0x5b; pop esi; pop edi; ret; 
0x000ca079: add al, 0x85; sal byte ptr [ebp - 0xe], cl; mov eax, ecx; pop ebx; ret; 
0x000b72f1: add al, 0x85; sal byte ptr [ebp - 0xe], cl; ret; 
0x000ca042: add al, 0x85; sal byte ptr [ecx + ecx - 0x75], cl; adc byte ptr [ecx], bh; retf 0xf375; ret; 
0x0011a9f3: add al, 0x85; sal byte ptr [edx + eax - 0x77], 0x10; ret; 
0x000de822: add al, 0x85; sal byte ptr [esi + ecx*4 - 0x77], cl; dec esp; and al, 0xc; mov dword ptr [esp + 8], eax; call edx; 
0x0008da62: add al, 0x85; sar byte ptr [eax + 9], 0x89; sub byte ptr [eax], 0x3a; add byte ptr [eax], al; xor eax, eax; ret; 
0x00140cb5: add al, 0x85; sar byte ptr [ecx + 0x26], 0x8d; and byte ptr [eax - 0x58], 0xf9; call dword ptr [eax - 0x73]; 
0x000d72e7: add al, 0x85; sar byte ptr [ecx + 0x2f], cl; mov eax, 0x193; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00152d6c: add al, 0x87; inc edx; add al, 0x83; clc; add dword ptr [edi + 0xb], edi; ret; 
0x000b4fcf: add al, 0x88; adc dword ptr fs:[ebx], eax; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000a3da6: add al, 0x88; inc edx; add al, 0x89; clc; pop edi; ret; 
0x000a8186: add al, 0x88; inc edx; add al, 0x8d; inc edx; add al, 0x5f; ret; 
0x00067c9a: add al, 0x88; xchg ebp, eax; xchg esp, eax; idiv edi; call dword ptr [esi + 0x6a]; 
0x0015930c: add al, 0x89; adc al, 0x24; call dword ptr [eax + 0x10]; 
0x00066394: add al, 0x89; adc dword ptr [ebx - 0x7cf87700], ecx; ret; 
0x0011b315: add al, 0x89; adc dword ptr [esp + eax*2], 0; add byte ptr [ebx - 0x2f76f73c], al; pop ebx; ret; 
0x00060108: add al, 0x89; adc ecx, dword ptr [ecx + 0x5f5e5b38]; ret; 
0x00161f1a: add al, 0x89; add al, 0x24; call dword ptr [edx + 0x10]; 
0x0004ca9f: add al, 0x89; add al, 0x24; fld xword ptr [esp]; add esp, 0x1c; ret; 
0x00083352: add al, 0x89; add al, bh; and dword ptr [ecx + ecx], 0; add byte ptr [eax], al; pop ebx; ret; 
0x000a2147: add al, 0x89; add cl, byte ptr [ebp + 0x5e5b0542]; ret; 
0x000392e8: add al, 0x89; add ecx, dword ptr [ebx - 0x7cfbdbbc]; ret; 
0x000b5e40: add al, 0x89; add ecx, dword ptr [ecx + 0x5f5e5bf0]; ret; 
0x00120f0a: add al, 0x89; call 0x5d716d6c; ret; 
0x000b259c: add al, 0x89; clc; pop ebx; pop edi; ret; 
0x000a3da9: add al, 0x89; clc; pop edi; ret; 
0x00078539: add al, 0x89; dec eax; adc byte ptr [ecx - 0x9ec74ce], cl; ret 0x7402; 
0x00078637: add al, 0x89; dec eax; adc byte ptr [ecx - 0x9ec74ce], cl; ret 0xf02; 
0x000fa665: add al, 0x89; dec ebp; aam 0x6a; add eax, 0x9be4868d; stc; call dword ptr [eax - 0x73]; 
0x00140d3b: add al, 0x89; dec ebx; or byte ptr [ebx + 0x5e], bl; pop edi; ret 4; 
0x001656fa: add al, 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x00165712: add al, 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0015a9b9: add al, 0x89; fcomp dword ptr [ebx + 0x5e]; jmp eax; 
0x0014080e: add al, 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x0003a6d5: add al, 0x89; fcomp dword ptr [ebx + 0x5e]; ret; 
0x0015b198: add al, 0x89; inc ebx; adc byte ptr [ebx + 0x1b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x001041b6: add al, 0x89; inc ebx; add al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0012c3de: add al, 0x89; inc edi; adc al, 0x29; ret; 
0x000ab337: add al, 0x89; inc edx; add al, 0x89; clc; pop edi; ret; 
0x000ab576: add al, 0x89; inc edx; add al, 0x8a; inc ecx; or byte ptr [eax - 0x2f76f7be], cl; ret; 
0x000ab5d6: add al, 0x89; inc edx; add al, 0x8b; inc ecx; or byte ptr [ecx - 0x2f76f7be], cl; ret; 
0x000acbc6: add al, 0x89; inc edx; add al, 0x8d; inc edx; pop es; ret; 
0x0007c58e: add al, 0x89; inc esi; or byte ptr [ecx + 0x4c483f0], cl; pop ebx; pop esi; ret; 
0x0007cb03: add al, 0x89; inc esi; or byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x000d75da: add al, 0x89; inc esp; and al, 8; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x000ac0a4: add al, 0x89; js 0x5e69c503; pop ebx; ret; 
0x000673b3: add al, 0x89; lea edx, [edi + esi*8 - 1]; call dword ptr [ebx + 0x57]; 
0x000673b3: add al, 0x89; lea edx, [edi + esi*8 - 1]; call dword ptr [ebx + 0x57]; push dword ptr [ebp - 0x87c]; call edx; 
0x0006d282: add al, 0x89; lea esi, [edi + esi*8 - 1]; call dword ptr [esi + 0x52]; 
0x00124acc: add al, 0x89; loope 0x124a59; ret 0x448b; 
0x00104fd5: add al, 0x89; nop; or al, 1; add byte ptr [eax], al; xor eax, eax; ret; 
0x00104fed: add al, 0x89; nop; or byte ptr [ecx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x000b31ea: add al, 0x89; or byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000afd94: add al, 0x89; or byte ptr [ebx + 0x5e082444], cl; ret; 
0x00076032: add al, 0x89; or byte ptr [ebx + 0x5f5e5b02], cl; ret; 
0x000ac0b5: add al, 0x89; pcmpgtd mm1, qword ptr [ecx + 0x5e5f0457]; pop ebx; ret; 
0x00074ece: add al, 0x89; pop eax; adc byte ptr [ecx + 0x5b0a89c8], cl; ret; 
0x000758d3: add al, 0x89; pop eax; or byte ptr [ecx + 0x10892048], cl; pop ebx; ret; 
0x0012eed0: add al, 0x89; push ebp; mov ah, 0x6a; add eax, 0x57b5808d; stc; call dword ptr [eax - 0x75]; 
0x0015b214: add al, 0x89; push ebx; adc bl, ch; ret; 
0x0012c75d: add al, 0x89; push ebx; add al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0008285c: add al, 0x89; push esp; and al, 4; jmp dword ptr [eax]; 
0x000a202c: add al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0015219e: add al, 0x89; rcr byte ptr [ebx + 0x5f], 1; ret; 
0x00165c82: add al, 0x89; ret 0x18b; 
0x00025608: add al, 0x89; ret 0x2374; 
0x00124a01: add al, 0x89; ret 0x448b; 
0x0002f500: add al, 0x89; ret 0x748d; 
0x0011d9a4: add al, 0x89; ret 0xe083; 
0x000c454b: add al, 0x89; ret 0xe089; 
0x0008548f: add al, 0x89; ret 0xe183; 
0x00091df3: add al, 0x89; ret 0xe281; 
0x000f603a: add al, 0x89; ret 0xe283; 
0x0011fab9: add al, 0x89; ret 0xe8c1; 
0x00036433: add al, 0x89; ret 0xff25; 
0x000944f7: add al, 0x89; ret; 
0x000a600b: add al, 0x89; rol byte ptr [ebx + 0x4a8d06eb], 1; push es; jne 0xa5ed1; pop ebx; ret; 
0x000792b0: add al, 0x89; rol byte ptr [ebx - 0x3b7cfe20], 1; adc al, 0x5b; pop esi; ret; 
0x0003ab57: add al, 0x89; sal bh, 1; fmul dword ptr [edi]; dec eax; ret 0xf3c3; 
0x0002e3c6: add al, 0x89; test dword ptr [esi + edi*8 - 1], eax; call dword ptr [ebx + 0x56]; 
0x000ab579: add al, 0x8a; inc ecx; or byte ptr [eax - 0x2f76f7be], cl; ret; 
0x000ab419: add al, 0x8a; inc ecx; or byte ptr [eax - 0x776f7be], cl; pop edi; ret; 
0x0003822d: add al, 0x8a; setne al; movzx eax, al; ret; 
0x00086820: add al, 0x8b; adc byte ptr [eax + 0xf1], bh; call dword ptr gs:[0x10]; 
0x00094371: add al, 0x8b; adc dl, byte ptr [eax + 0x1cc9089]; add byte ptr [eax], al; ret; 
0x00094351: add al, 0x8b; adc dl, byte ptr [eax + 0x1d09089]; add byte ptr [eax], al; ret; 
0x00094401: add al, 0x8b; adc dl, byte ptr [eax + 0x2089089]; add byte ptr [eax], al; ret; 
0x000946e1: add al, 0x8b; adc dl, byte ptr [eax + 0x3b689089]; add byte ptr [eax], al; ret; 
0x00082708: add al, 0x8b; adc dl, byte ptr [ebx + 0x50]; push ecx; call edx; 
0x0017198b: add al, 0x8b; add al, 0x90; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x0007b0c7: add al, 0x8b; add byte ptr [0x200], ah; ret; 
0x00094392: add al, 0x8b; add byte ptr [0x3fc], bh; jbe 0x943a0; ret; 
0x0007b077: add al, 0x8b; add byte ptr [0x804], ah; ret; 
0x000943d2: add al, 0x8b; add byte ptr [0xffff], bh; jbe 0x943e0; ret; 
0x00094572: add al, 0x8b; add byte ptr [ebx + 0x67650f8], al; ret; 
0x0008e4f7: add al, 0x8b; add byte ptr [ebx - 0x2ef7dbac], cl; call 0xc039e78d; ret; 
0x0002fd81: add al, 0x8b; add byte ptr [ebx - 0x7b74cfc0], cl; nop; add byte ptr [edx], al; add byte ptr [eax], al; ret; 
0x0002fdb1: add al, 0x8b; add byte ptr [ebx - 0x7b74d7c0], cl; nop; add byte ptr [edx], al; add byte ptr [eax], al; ret; 
0x00075bcf: add al, 0x8b; add byte ptr [ecx + 0x4c4830a], cl; pop ebx; pop esi; ret; 
0x00022731: add al, 0x8b; add byte ptr [ecx - 0x16fbdbbc], cl; ret; 
0x0004ca99: add al, 0x8b; add byte ptr [ecx - 0x76fbdbac], cl; add al, 0x24; fld xword ptr [esp]; add esp, 0x1c; ret; 
0x0007be97: add al, 0x8b; add cl, al; call 0x1e841a4; ret; 
0x0007beb7: add al, 0x8b; add cl, al; call 0x1e841c5; ret; 
0x000b2582: add al, 0x8b; add dword ptr [ecx + 0x5bf88902], ecx; pop edi; ret; 
0x000af6d2: add al, 0x8b; add dword ptr [ecx + 0x5ff88902], ecx; ret; 
0x0007589f: add al, 0x8b; dec eax; or byte ptr [ecx + 0x8508910], cl; mov dword ptr [eax + 0x20], ecx; ret; 
0x0011df57: add al, 0x8b; dec edx; or byte ptr [ebp - 0x74868b37], al; pop ecx; add al, 0xf6; ret; 
0x0011f5a0: add al, 0x8b; dec esp; and al, 8; mov dword ptr [ecx], eax; mov eax, 1; ret; 
0x0002ff9b: add al, 0x8b; inc eax; cmp al, 0x8b; add al, 0x90; ret; 
0x001719a7: add al, 0x8b; inc eax; dec esp; ret; 
0x000944d2: add al, 0x8b; inc eax; or al, 0x83; ret; 
0x00082428: add al, 0x8b; inc eax; or bh, bh; je 0x82453; xor byte ptr [edx + 0x51], dl; call eax; 
0x001160d7: add al, 0x8b; inc eax; or byte ptr [0x100f], ah; ret; 
0x00131342: add al, 0x8b; inc eax; or byte ptr [ecx - 0x373edbcc], cl; or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x00171a47: add al, 0x8b; inc eax; pop eax; ret; 
0x001719d7: add al, 0x8b; inc eax; pop esp; ret; 
0x001719c7: add al, 0x8b; inc eax; push eax; ret; 
0x00171a57: add al, 0x8b; inc eax; push esp; ret; 
0x00164653: add al, 0x8b; inc eax; xor byte ptr [ebx + 0x448908c0], al; and al, 4; jmp edx; 
0x00104b42: add al, 0x8b; inc ebx; or byte ptr [ecx], bh; ret 0x840f; 
0x0011df96: add al, 0x8b; inc ecx; add al, 0x89; ret; 
0x000ab5d9: add al, 0x8b; inc ecx; or byte ptr [ecx - 0x2f76f7be], cl; ret; 
0x000ab479: add al, 0x8b; inc ecx; or byte ptr [ecx - 0x776f7be], cl; pop edi; ret; 
0x000acc19: add al, 0x8b; inc ecx; pop es; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000ab5b9: add al, 0x8b; inc ecx; pop es; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x00162e31: add al, 0x8b; inc edi; add al, 0x51; push edi; call dword ptr [eax + 8]; 
0x0015ac7a: add al, 0x8b; inc edi; or byte ptr [ebp - 1], dl; jbe 0x15ac8e; push edi; call dword ptr [eax + 0x10]; 
0x00081567: add al, 0x8b; inc edx; or byte ptr [ebx - 0x37c6ebb6], cl; cmovb eax, ecx; sub eax, dword ptr [edx + 0xc]; ret; 
0x001655f2: add al, 0x8b; inc esi; add al, 0x52; push ebp; push esi; call dword ptr [eax + 0xc]; 
0x0016562a: add al, 0x8b; inc esi; add al, 0x52; push ebp; push esi; call dword ptr [eax + 8]; 
0x001248cd: add al, 0x8b; inc esp; and al, 0x24; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012452c: add al, 0x8b; inc esp; and al, 0x28; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000b320e: add al, 0x8b; inc esp; and al, 0xc; pop ebx; pop esi; ret; 
0x00036452: add al, 0x8b; inc esp; and al, 8; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0008435a: add al, 0x8b; inc esp; and al, 8; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x000afdab: add al, 0x8b; inc esp; and al, 8; pop esi; ret; 
0x0002f7b1: add al, 0x8b; inc esp; nop; inc eax; ret; 
0x0012c1c9: add al, 0x8b; je 0x12c1f1; or byte ptr [ebp + 0x39013044], cl; ret; 
0x00199e5c: add al, 0x8b; jl 0x199de3; add al, 0x83; ret; 
0x00199e7f: add al, 0x8b; jl 0x199ea7; adc byte ptr [ecx], ch; ret; 
0x0019a693: add al, 0x8b; jl 0x19a619; add al, 0x83; ret 0xd304; 
0x0003540b: add al, 0x8b; jl 0x35433; sbb al, 0x8b; push ebx; or byte ptr [ecx - 0x50f0fbb9], cl; ret 0x6c8b; 
0x001338f3: add al, 0x8b; jns 0x1338ff; mov ebp, dword ptr [ecx + 0xc]; nop; jmp edx; 
0x0018efe7: add al, 0x8b; mov word ptr [ebx - 0x86b80], cs; mov eax, dword ptr [ebx + eax*4 - 0x86b80]; sub eax, ecx; pop ebx; ret; 
0x0006c564: add al, 0x8b; popfd; push 0x89fffff7; lea esi, [edi + esi*8 - 1]; call dword ptr [esi + 0x6a]; 
0x00094b7a: add al, 0x8b; push edx; or byte ptr [ecx], al; lds edi, ptr [ecx]; ret; 
0x0007d701: add al, 0x8b; push esi; or byte ptr [ecx], ch; ret 0xfa39; 
0x0017802d: add al, 0x8b; push esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x00159708: add al, 0x8b; push esp; and al, 0x14; push edx; push ebx; call dword ptr [eax + 0x14]; 
0x000f82ba: add al, 0x8b; push esp; and al, 0x18; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x00166b57: add al, 0x8b; push esp; and al, 0xc; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x001719b7: add al, 0x8b; push esp; and al, 8; mov dword ptr [eax + 0x4c], edx; ret; 
0x0016703f: add al, 0x8b; push esp; and al, 8; mov dword ptr [eax + 0xc], edx; ret; 
0x00084647: add al, 0x8b; push esp; and al, 8; mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x00104467: add al, 0x8b; push esp; and al, 8; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x00080b77: add al, 0x8b; push esp; and al, 8; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x00171967: add al, 0x8b; push esp; and al, 8; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x0002df87: add al, 0x8b; push esp; and al, 8; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x000f4352: add al, 0x8b; pushfd; xchg ecx, eax; sar dl, 0xf8; dec dword ptr [ecx + 0x3ecb01d0]; jmp ebx; 
0x0015d84f: add al, 0x8b; xchg edx, eax; mov word ptr [eax], es; add byte ptr [eax], al; mov dword ptr [eax + 8], edx; ret; 
0x0002c2a2: add al, 0x8d; adc dword ptr [eax + 0x20], -0x20; call dword ptr [esi + 0x31]; 
0x0008ef12: add al, 0x8d; and dword ptr [eax + 0x4a], 0xffffffe6; call dword ptr [eax - 0x73]; 
0x00165775: add al, 0x8d; dec esp; and al, 0x10; push ecx; push edx; call dword ptr [eax]; 
0x00165ef9: add al, 0x8d; dec esp; and al, 0x20; push ecx; push esi; call dword ptr [eax]; 
0x000600df: add al, 0x8d; inc eax; adc byte ptr [ebx], ch; xor byte ptr [ebx - 0x17aff314], al; ret 0x3a6; 
0x000483f6: add al, 0x8d; inc edi; add dword ptr [ecx], edi; ret 0x860f; 
0x000a8189: add al, 0x8d; inc edx; add al, 0x5f; ret; 
0x000a20ec: add al, 0x8d; inc edx; pop es; pop ebx; pop esi; ret; 
0x000ac97a: add al, 0x8d; inc edx; pop es; pop edi; ret; 
0x000acbc9: add al, 0x8d; inc edx; pop es; ret; 
0x00140b03: add al, 0x8d; inc esp; add cl, byte ptr [eax]; pop ebx; ret; 
0x00140ecb: add al, 0x8d; mov fs, word ptr [edi + 0x5d]; stc; dec dword ptr [ebp - 0x6a28d7a]; call dword ptr [ecx - 0x77]; 
0x00168acd: add al, 0x8d; or dword ptr [eax + 0x500000a5], 0xffffff8d; add dword ptr [esi + 0x62], -7; call dword ptr [eax + 0x6a]; 
0x00171626: add al, 0x8d; push 0x24448909; and al, 0x89; ret; 
0x001662ab: add al, 0x8d; push esp; and al, 0x10; push edx; push ebx; call dword ptr [eax + 0x20]; 
0x0015f1a7: add al, 0x8d; push esp; and al, 0x10; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x0016597d: add al, 0x8d; push esp; and al, 0x10; push edx; push ebx; call dword ptr [eax + 4]; 
0x0016591a: add al, 0x8d; push esp; and al, 0x10; push edx; push ebx; call dword ptr [eax]; 
0x0016656d: add al, 0x8d; push esp; and al, 0x10; push edx; push ecx; call dword ptr [eax + 0x20]; 
0x00165c15: add al, 0x8d; push esp; and al, 0x10; push edx; push ecx; call dword ptr [eax + 4]; 
0x00165afd: add al, 0x8d; push esp; and al, 0x10; push edx; push ecx; call dword ptr [eax]; 
0x00166295: add al, 0x8d; push esp; and al, 0xc; push edx; push ebx; call dword ptr [eax + 0x20]; 
0x00165905: add al, 0x8d; push esp; and al, 0xc; push edx; push ebx; call dword ptr [eax]; 
0x00165cb5: add al, 0x8d; push esp; and al, 0xc; push edx; push ecx; call dword ptr [eax + 4]; 
0x0011f1fa: add al, 0x8d; sub dword ptr [eax + 0x4a], -7; call ptr [ebx + 0x5e]; ret; 
0x00160125: add al, 0x8d; sub dword ptr [ecx], 0x6afff964; add eax, 0xcc818d50; jb 0x16012d; call dword ptr [eax - 0x18]; 
0x0013925a: add al, 0x8d; test dword ptr [ebp + 0x6afff95a], ebp; add eax, 0xcc858d50; jb 0x139262; call dword ptr [eax - 0x18]; 
0x0009b34a: add al, 0x8d; test dword ptr [ebx + 0x6afff943], esi; add eax, 0xcc858d50; jb 0x9b352; call dword ptr [eax - 0x18]; 
0x000590ac: add al, 0x8d; test dword ptr [ecx + 0x32], eax; stc; call dword ptr [ecx + 0x50]; 
0x000592aa: add al, 0x8d; test dword ptr [edi + 0x32], ecx; stc; call dword ptr [ecx + 0x50]; 
0x0013919c: add al, 0x8d; test dword ptr [edx + 0x6afff95a], edi; add eax, 0xcc858d50; jb 0x1391a4; call dword ptr [eax - 0x18]; 
0x0013a981: add al, 0x8d; test ebp, ecx; dec eax; stc; call dword ptr [eax - 0x77]; 
0x00021fc2: add al, 0x8d; xchg byte ptr [eax + 0x6e], dl; stc; call dword ptr [eax - 0x73]; 
0x0011fe80: add al, 0x8d; xchg ebx, eax; ret 0xf94d; 
0x0009b3b0: add al, 0x8d; xchg edx, eax; add byte ptr [esi + 0x440fffe7], 0xc2; ret; 
0x000a2350: add al, 0x8d; xchg edx, eax; inc eax; popfd; call 0xc24e3359; ret; 
0x0009dba0: add al, 0x8d; xchg edx, eax; shl byte ptr [ecx + 0x440fffe8], 1; ret 0x66c3; 
0x000919a4: add al, 0x8d; xor dword ptr [eax + 0x78], 0xffffffe6; call dword ptr [eax + 0x55]; 
0x0017196d: add al, 0x90; mov eax, dword ptr [eax]; ret; 
0x0017198d: add al, 0x90; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x0002fce7: add al, 0x90; ret; 
0x0005200d: add al, 0x91; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000b6115: add al, 0x98; pop ebx; pop esi; ret; 
0x0003ab9b: add al, 0x99; idiv dword ptr [esp + 0xc]; mov dword ptr [ecx], eax; mov eax, ecx; mov dword ptr [ecx + 4], edx; ret 4; 
0x00038179: add al, 0x9a; xor eax, eax; pop ebx; ret; 
0x0010b7f5: add al, 0xa0; stc; call dword ptr [eax - 0x18]; 
0x0008d0b3: add al, 0xa8; add dword ptr [ebp - 0x2e], esi; mov eax, 0x10; pop ebx; ret; 
0x0014d6a9: add al, 0xab; stc; call dword ptr [eax - 0x18]; 
0x0014d8f0: add al, 0xad; stc; call dword ptr [eax - 0x73]; 
0x0009c1ce: add al, 0xb7; call 0x7d4bb8d5; add cl, byte ptr [ebp - 0x181c0f6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x00158842: add al, 0xb8; adc byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0016f278: add al, 0xb8; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x430f; 
0x0010e501: add al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x00166b3b: add al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x000e0202: add al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; test ecx, ecx; js 0xe0210; ret; 
0x00109929: add al, 0xb8; cmp al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00109929: add al, 0xb8; cmp al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x000df5ed: add al, 0xb8; cmp dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00121419: add al, 0xb8; fadd dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00121419: add al, 0xb8; fadd dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00123c7d: add al, 0xb8; fld dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00115ab7: add al, 0xb8; fld qword ptr [eax]; add byte ptr [eax], al; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x00123a29: add al, 0xb8; inc byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000df38d: add al, 0xb8; int 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001192a9: add al, 0xb8; jae 0x1192ad; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00123d19: add al, 0xb8; je 0x123d1d; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00123ead: add al, 0xb8; jge 0x123eb2; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00123ed9: add al, 0xb8; jle 0x123ede; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011f4fd: add al, 0xb8; jmp 0x11f501; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00123909: add al, 0xb8; jno 0x12390d; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001185dd: add al, 0xb8; jns 0x1185e1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000dd619: add al, 0xb8; jp 0xdd61d; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00084a4f: add al, 0xb8; lock add byte ptr [eax], al; add byte ptr [ecx], dh; idiv byte ptr [edx + 0x7fffffff]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00085550: add al, 0xb8; lock add byte ptr [eax], al; add byte ptr [ecx], dh; idiv byte ptr [edx + 1]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00121a79: add al, 0xb8; mov byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00121a79: add al, 0xb8; mov byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0010b179: add al, 0xb8; or al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010c269: add al, 0xb8; or al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000d7492: add al, 0xb8; or byte ptr [ecx], al; add byte ptr [eax], al; mov dword ptr [esp + 8], ecx; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x0010c13d: add al, 0xb8; or dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000d7306: add al, 0xb8; or dword ptr [ecx], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010abed: add al, 0xb8; pop dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ec76b: add al, 0xb8; push es; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x4e0f; 
0x0009a12a: add al, 0xb8; push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0008471b: add al, 0xb8; push ss; add byte ptr [eax], al; add byte ptr [ebx + 0xa7602fa], al; ret; 
0x000ddbe9: add al, 0xb8; sbb eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010c2c9: add al, 0xb8; sub byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010af89: add al, 0xb8; sub dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000df5b9: add al, 0xb8; test byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010b1a9: add al, 0xb8; test dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012393d: add al, 0xb8; xchg byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000d7871: add al, 0xb8; xchg edi, eax; add dword ptr [eax], eax; add byte ptr [ecx + 0x1bbea], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000d79c2: add al, 0xb8; xchg edi, eax; add dword ptr [eax], eax; add byte ptr [ecx + 0x1bbf9], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00118ce9: add al, 0xb8; xor eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0006fc42: add al, 0xc1; clc; add dl, byte ptr [eax - 0x77]; ret; 
0x000764d2: add al, 0xc1; cli; add ch, bl; ljmp 0x5bff:0xffffffb8; ret; 
0x000a2087: add al, 0xc6; inc edx; push es; add byte ptr [ecx + 0x5bd08902], cl; pop esi; ret; 
0x000362ec: add al, 0xd9; inc esp; and al, 4; ret; 
0x000363e2: add al, 0xd9; sbb al, 0x24; fld dword ptr [esp]; add esp, 4; ret; 
0x00035dab: add al, 0xd9; std; fstp st(1); ret; 
0x0004ca68: add al, 0xdd; add al, 0x24; add esp, 0xc; ret; 
0x00175727: add al, 0xe4; in al, dx; call dword ptr [eax + 0x6a]; 
0x0010413d: add al, 0xe8; pop ebp; ret 0xfffd; 
0x001a0f77: add al, 0xe8; ret; 
0x0014a963: add al, 0xe8; xor dword ptr [bx + si], eax; add byte ptr [ebp - 0x7cc08b40], al; in al, dx; add al, 0x89; ret; 
0x000376d4: add al, 0xe9; add al, byte ptr [eax]; add byte ptr [ebp + 0xb6], cl; add byte ptr [ebx - 0x1337f], cl; jmp dword ptr [ebp - 0x75]; 
0x000d96ad: add al, 0xe9; dec ebp; sbb esp, edi; jmp dword ptr [esi - 0x70]; 
0x0015edff: add al, 0xe9; dec ebx; idiv edi; jmp dword ptr [esi - 0x70]; 
0x000d96dd: add al, 0xe9; fstp qword ptr [ecx]; cld; jmp dword ptr [esi - 0x70]; 
0x000d8d0d: add al, 0xe9; lodsd eax, dword ptr [esi]; and edi, esp; jmp dword ptr [esi - 0x70]; 
0x00022737: add al, 0xe9; ret; 
0x00120d61: add al, 0xe9; sbb eax, 0x8dffffff; and dword ptr [eax - 0x5e], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x00039324: add al, 0xeb; ret 0xb48d; 
0x0012a839: add al, 0xf0; call dword ptr [eax - 1]; 
0x0008e067: add al, 0xf0; dec dword ptr [eax]; jne 0x8e070; xor eax, eax; ret; 
0x00165233: add al, 0xf5; call ecx; 
0x0007b0a7: add al, 0xf6; add byte ptr [eax], cl; sete al; movzx eax, al; ret; 
0x0011e093: add al, 0xf6; ret 0x7401; 
0x0011ded6: add al, 0xf6; ret 0xf01; 
0x00097b61: add al, 0xf6; ret; 
0x00087ee9: add al, 0xf7; fcomp dword ptr [ebx + 0x5e]; ret; 
0x000b5226: add al, 0xf7; ret 0; 
0x000fd05f: add al, 0xf7; ret 0xfffd; 
0x000f0d31: add al, 0xf7; ret; 
0x001020bb: add al, 0xf9; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x0009b3e6: add al, 0xf; inc ebp; ret 0x66c3; 
0x0009c0fd: add al, 0xf; inc esp; ret 0xc083; 
0x00025a4b: add al, 0xf; inc esp; ret; 
0x00104407: add al, 0xf; mov bh, 0x10; mov eax, dword ptr [esp + 8]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x0002fca1: add al, 0xf; mov bh, 4; push eax; and eax, 0x1000; ret; 
0x0002fc71: add al, 0xf; mov bh, 4; push eax; and eax, 0x100; ret; 
0x0002fc41: add al, 0xf; mov bh, 4; push eax; and eax, 0x2000; ret; 
0x0002fb81: add al, 0xf; mov bh, 4; push eax; and eax, 0x200; ret; 
0x0002fbe1: add al, 0xf; mov bh, 4; push eax; and eax, 0x4000; ret; 
0x0002faf1: add al, 0xf; mov bh, 4; push eax; and eax, 0x400; ret; 
0x0002fbb1: add al, 0xf; mov bh, 4; push eax; and eax, 0x8000; ret; 
0x0002fb51: add al, 0xf; mov bh, 4; push eax; and eax, 0x800; ret; 
0x0002fd51: add al, 0xf; mov bh, 4; push eax; and eax, 1; ret; 
0x0002fb21: add al, 0xf; mov bh, 4; push eax; and eax, 2; ret; 
0x0002fc11: add al, 0xf; mov bh, 4; push eax; and eax, 4; ret; 
0x0002fac1: add al, 0xf; mov bh, 4; push eax; and eax, 8; ret; 
0x0007fa40: add al, 0xf; mov dh, 0; add esp, 4; pop ebx; pop esi; ret; 
0x0007f875: add al, 0xf; mov dh, 0; pop ebx; pop esi; pop edi; ret; 
0x00080275: add al, 0xf; mov dh, 0x40; inc dword ptr [ebx - 0x3b7c10dd]; add al, 0x5b; pop esi; ret; 
0x0002cf3a: add al, 0xf; mov dh, 0x84; push ds; aas; test bh, dh; call dword ptr [ebp + 3]; 
0x0015bc81: add al, 0xf; mov dh, 0xc0; pop ebx; pop esi; ret; 
0x0007bf25: add al, 0xf; mov dh, 2; ret; 
0x00046bdd: add al, 0xf; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00191dc7: add al, 0xf; movzx ecx, byte ptr [esi + ecx]; sub eax, ecx; pop esi; pop edi; ret; 
0x00035415: add al, 0xf; scasd eax, dword ptr es:[edi]; ret 0x6c8b; 
0x000250e2: add al, 0xf; test ah, dh; add dword ptr [eax], eax; add byte ptr [ebx - 0x7ce3dbbc], cl; ret 0x8301; 
0x0019df9a: add al, 0xf; test byte ptr [ebx - 0x76000004], dl; ret; 
0x00196ed4: add al, 0xf; test dword ptr [ebp - 0x58000000], esi; add cl, byte ptr [edi]; test dword ptr [ebp - 0x7d000000], ebx; ret 0xf00; 
0x0019778b: add al, 0xf; test dword ptr [ebx - 0x7cfffffd], ebx; ror byte ptr [ebx], 0x5f; ret; 
0x000c9b65: add al, 0xf; test dword ptr [ecx + eax], esi; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x00097b80: add al, 0xf; test dword ptr [edi + 0x39000001], ebx; ret; 
0x00171acd: add al, 0xf; test dword ptr [edi], ebp; clc; ljmp 0:0x8b8ff; add esp, 0xc; ret; 
0x000a586b: add al, 0xf; test dword ptr [esi + 6], ebx; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000ad24c: add al, 0xf; test ebp, edi; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0003868c: add al, 0xf; xchg ebp, eax; ret; 
0x001303a2: add al, 0xf; xchg esp, eax; ret; 
0x0008fd61: add al, 0xf; xchg esp, eax; ror byte ptr [edi], 0xb6; rol byte ptr [ebx - 0x3b7cfd18], 0xc; ret; 
0x00170461: add al, 0xff; aaa; push dword ptr [esi + 4]; push ebp; mov eax, dword ptr [esp + 0x10]; call eax; 
0x0016f410: add al, 0xff; aaa; push dword ptr [esi]; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x000828f5: add al, 0xff; and byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; nop; ret; 
0x00082860: add al, 0xff; and byte ptr [ebp - 0x6fffd98c], cl; ret; 
0x0012cead: add al, 0xff; je 0x12ced5; sbb byte ptr [edx], ch; push 0x2000004; call eax; 
0x0015b04d: add al, 0xff; je 0x15b075; sbb al, 0x53; call dword ptr [eax]; 
0x0015b09d: add al, 0xff; je 0x15b0c5; sbb al, 0x53; call dword ptr [eax + 4]; 
0x00021672: add al, 0xff; je 0x2169a; or al, 0x56; push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x000392a2: add al, 0xff; je 0x392ca; adc byte ptr [ebp + 0x56], dl; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00039404: add al, 0xff; je 0x3942c; adc byte ptr [ebp + 0x56], dl; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00039475: add al, 0xff; je 0x3949d; adc byte ptr [ebp + 0x56], dl; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00071a41: add al, 0xff; je 0x71a69; xor byte ptr [ebp + 0x5110244c], cl; push dword ptr [edx + 0x98]; call eax; 
0x0007c684: add al, 0xff; je 0x7c6ac; or al, 0x57; push ebx; call dword ptr [esi + 0x3c]; 
0x00073342: add al, 0xff; jne 0x7332a; push dword ptr [ebp + 8]; push edx; call dword ptr [ebx + 0x1c]; 
0x00073a92: add al, 0xff; jne 0x73aaa; push dword ptr [ebp + 0xc]; push esi; call dword ptr [ebx + 0x2c]; 
0x000748a7: add al, 0xff; jne 0x7488f; push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x0006c38b: add al, 0xff; mov ch, 0x54; idiv edi; call dword ptr [esi - 1]; 
0x0011e838: add al, 0xff; xor byte ptr [ebp - 0x6a4607d], cl; call dword ptr [eax + 0x6a]; 
0x0011e9d0: add al, 0xff; xor byte ptr [ebp - 0x6a99c7d], cl; call dword ptr [eax + 0x6a]; 
0x000dc43e: add al, 0xff; xor byte ptr [ebp - 0x6b9fe7d], cl; call dword ptr [eax + 0x56]; 
0x000d8836: add al, 1; add al, byte ptr [eax]; add byte ptr [eax], al; xor eax, eax; add esp, 0xc; ret; 
0x00093f66: add al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000c9b98: add al, 1; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x00082926: add al, 1; add byte ptr [eax], al; ret; 
0x000b5849: add al, 1; add byte ptr [ecx + 0x75], cl; stc; pop esi; ret; 
0x000894d6: add al, 1; add esp, 0xc; ret; 
0x00058ba8: add al, 1; add esp, 4; pop ebx; pop esi; ret; 
0x00093cd7: add al, 1; fisttp dword ptr [ebx + 0x106b81b]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00093d4c: add al, 1; fisttp dword ptr [ebx + 0x198b81b]; add byte ptr [eax], al; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000827c7: add al, 1; je 0x827d8; mov eax, dword ptr gs:[8]; mov byte ptr [eax + 0x4fe], 0; ret; 
0x0002fd1f: add al, 1; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x28]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0002fcdf: add al, 1; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x30]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00128892: add al, 1; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x00128752: add al, 1; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x001284d2: add al, 1; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x00128612: add al, 1; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x00128252: add al, 1; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x00128572: add al, 1; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x001282f2: add al, 1; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x00128392: add al, 1; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x001286b2: add al, 1; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x001281b2: add al, 1; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x0011711e: add al, 1; or al, 0; add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; ret; 
0x0002210e: add al, 1; or dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xffffffff; add esp, 0xc; ret; 
0x00079446: add al, 1; or dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xffffffff; ret; 
0x0010fba6: add al, 1; push ss; add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x0009393e: add al, 1; push ss; add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; ret; 
0x000380d5: add al, 1; push ss; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x0015b2d8: add al, 1; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x00142e7c: add al, 1; ret 0x4489; 
0x0015b3b7: add al, 1; ret 0xc129; 
0x00058c02: add al, 1; xor eax, eax; pop ebx; pop esi; ret; 
0x000d87de: add al, 2; add al, byte ptr [eax]; add byte ptr [eax], al; xor eax, eax; add esp, 0xc; ret; 
0x0011f646: add al, 2; add al, byte ptr [eax]; add byte ptr [eax], al; xor eax, eax; pop ebx; ret; 
0x000943e3: add al, 2; add byte ptr [eax], al; ret; 
0x0003827c: add al, 2; add byte ptr es:[eax], al; add byte ptr [eax - 1], bh; ret; 
0x00035ef1: add al, 2; and al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x000364ff: add al, 2; and al, byte ptr [eax]; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0002ed8c: add al, 2; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x58]; ret; 
0x0002f7ac: add al, 2; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0002fdac: add al, 2; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x28]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x0002fd7c: add al, 2; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x30]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x0002fc9c: add al, 2; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x0002fc6c: add al, 2; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x0002fc3c: add al, 2; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x0002fb7c: add al, 2; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x0002fbdc: add al, 2; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x0002faec: add al, 2; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x0002fbac: add al, 2; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x0002fb4c: add al, 2; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x0002fd4c: add al, 2; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x0002fb1c: add al, 2; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x0002fc0c: add al, 2; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x0002fabc: add al, 2; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x0008f4ee: add al, 2; or eax, dword ptr [eax]; add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; ret; 
0x000de95e: add al, 2; push ss; add byte ptr [eax], al; add bl, ch; ret; 
0x00037646: add al, 2; push ss; add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; ret; 
0x000376ee: add al, 2; push ss; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x0011d516: add al, 2; push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00071bd9: add al, 2; push ss; add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x0009936e: add al, 2; push ss; add byte ptr [eax], al; add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0014712c: add al, 2; ret; 
0x0004b8fd: add al, 3; add cl, byte ptr [edi]; xchg edx, eax; ret 0x689; 
0x0007c2c7: add al, 7; add byte ptr [ecx - 0x14ec7407], cl; ret; 
0x0007b07b: add al, 8; add byte ptr [eax], al; ret; 
0x00048a7f: add al, 8; add byte ptr [ebx + 0x5e], bl; ret; 
0x001704fe: add al, ah; dec dword ptr [edi]; inc ebp; ret 0xe0c1; 
0x000f712b: add al, al; call 0xfe1f634; xchg esp, eax; ret 0xd020; 
0x00133a9a: add al, al; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x00133b59: add al, al; shr edx, 0x10; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x00083354: add al, bh; and dword ptr [ecx + ecx], 0; add byte ptr [eax], al; pop ebx; ret; 
0x000eaf5a: add al, bh; jmp dword ptr [esi + 0xb]; 
0x000ac01a: add al, byte ptr [0x5e5f0000]; pop ebx; ret; 
0x000c84df: add al, byte ptr [eax + eax]; add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x000f1892: add al, byte ptr [eax]; add al, 0; add byte ptr [edi], cl; test dword ptr [edx - 0x7cfffff9], ebp; rol byte ptr [ecx], 0x83; ret 0x3b20; 
0x00195b8f: add al, byte ptr [eax]; add byte ptr [eax + 0x76850f04], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf04; 
0x00195b7e: add al, byte ptr [eax]; add byte ptr [eax + 0x77850f02], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf02; 
0x00087672: add al, byte ptr [eax]; add byte ptr [eax + 0x9b], bh; call dword ptr gs:[0x10]; 
0x00086874: add al, byte ptr [eax]; add byte ptr [eax + 0x9c], bh; call dword ptr gs:[0x10]; 
0x00086c75: add al, byte ptr [eax]; add byte ptr [eax + 0xf0], bh; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00195b27: add al, byte ptr [eax]; add byte ptr [eax - 0x17af0f0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x000aa038: add al, byte ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x00195b38: add al, byte ptr [eax]; add byte ptr [eax - 0x27af0e0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x00195b49: add al, byte ptr [eax]; add byte ptr [eax - 0x37af0c0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf40; 
0x00024d1f: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; adc esi, 0x2b; stc; call dword ptr [eax - 0x18]; 
0x00152b43: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; add al, 0x61; stc; call dword ptr [eax - 0x18]; 
0x0014d6a4: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; add al, 0xab; stc; call dword ptr [eax - 0x18]; 
0x000c8d06: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; and byte ptr [esi + 0x44], 0xf9; call dword ptr [eax - 0x18]; 
0x000ce989: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; and esp, 0xffffff98; stc; call dword ptr [eax - 0x18]; 
0x0014d7d0: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; cmp byte ptr [eax], 0xac; stc; call dword ptr [eax - 0x18]; 
0x000c2a17: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; cmp eax, -0x69; stc; call dword ptr [eax - 0x18]; 
0x001a0af8: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; or dword ptr [ebx + 0x2d], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000ce94b: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; or dword ptr [ebx + 0x45], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000ce96a: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; sbb dword ptr [edx + 0x45], -7; call dword ptr [eax - 0x18]; 
0x0009117f: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; sub byte ptr [edi + 0x40], 0xf9; call dword ptr [eax - 0x18]; 
0x00024c8e: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; sub dword ptr [eax], 0x6f; stc; call dword ptr [eax - 0x18]; 
0x0008a9e2: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; test edx, edx; aas; stc; call dword ptr [eax - 0x18]; 
0x00025ef6: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], ch; outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x00087b6c: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [edi + edi*2], ch; stc; call dword ptr [eax - 0x18]; 
0x0002602d: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dh, dh; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x00025f8b: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dh, dl; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x0002aced: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dh, dl; sub edi, ecx; call dword ptr [eax - 0x18]; ret; 
0x000891b2: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dl, dl; aas; stc; call dword ptr [eax - 0x18]; 
0x0002530d: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ebp; outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x0014b2c0: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + ebp*4], edi; stc; call dword ptr [eax - 0x18]; 
0x000bbc47: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [esi + 0x44], esp; stc; call dword ptr [eax - 0x18]; 
0x00041451: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg ecx, esi; das; stc; call dword ptr [eax - 0x18]; 
0x000253c4: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg esi, edx; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x0003ad9c: add al, byte ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00160fc6: add al, byte ptr [eax]; add byte ptr [eax], al; add eax, 0x38; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x00160596: add al, byte ptr [eax]; add byte ptr [eax], al; add eax, 0x4c; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x0015d879: add al, byte ptr [eax]; add byte ptr [eax], al; add eax, 0xac; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x0015e4c6: add al, byte ptr [eax]; add byte ptr [eax], al; add eax, 8; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x0004b07a: add al, byte ptr [eax]; add byte ptr [eax], al; call 0x4b030; add eax, ebx; jmp eax; 
0x000930b6: add al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000373c1: add al, byte ptr [eax]; add byte ptr [eax], al; je 0x373ce; rdsspd ecx; mov dword ptr [edx + 0x28], ecx; ret; 
0x0004aaaf: add al, byte ptr [eax]; add byte ptr [eax], al; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x00123888: add al, byte ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x14]; cmovne edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x00126fca: add al, byte ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [ebp - 0x500]; mov dword ptr [ebp - 0x4e0], eax; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x001260db: add al, byte ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0008be68: add al, byte ptr [eax]; add byte ptr [eax], al; mov edx, 0x7fffffff; xor esi, esi; call dword ptr gs:[0x10]; 
0x0007b34b: add al, byte ptr [eax]; add byte ptr [eax], al; mov edx, dword ptr [ebp - 0x34]; lea esi, [esi]; mov eax, edi; call dword ptr gs:[0x10]; 
0x000872e0: add al, byte ptr [eax]; add byte ptr [eax], al; mov esi, 8; call dword ptr gs:[0x10]; 
0x0015a757: add al, byte ptr [eax]; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x000c9ee1: add al, byte ptr [eax]; add byte ptr [eax], al; ret; 
0x0011ef17: add al, byte ptr [eax]; add byte ptr [eax], al; test eax, eax; cmove eax, edx; add esp, 0xc; ret; 
0x000d87e0: add al, byte ptr [eax]; add byte ptr [eax], al; xor eax, eax; add esp, 0xc; ret; 
0x0011f648: add al, byte ptr [eax]; add byte ptr [eax], al; xor eax, eax; pop ebx; ret; 
0x00088a11: add al, byte ptr [eax]; add byte ptr [eax], al; xor edx, edx; mov ecx, dword ptr [esp + 8]; mov esi, 8; call dword ptr gs:[0x10]; 
0x001046f4: add al, byte ptr [eax]; add byte ptr [eax], al; xor edx, edx; mov ecx, ebp; mov esi, 8; call dword ptr gs:[0x10]; 
0x000831b4: add al, byte ptr [eax]; add byte ptr [eax], al; xor esi, esi; call dword ptr gs:[0x10]; 
0x00083233: add al, byte ptr [eax]; add byte ptr [eax], al; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0008686e: add al, byte ptr [eax]; add byte ptr [ebp + 0x22c96], cl; add byte ptr [eax + 0x9c], bh; call dword ptr gs:[0x10]; 
0x0012fcbb: add al, byte ptr [eax]; add byte ptr [ebp + 0x30], dh; pop ebx; pop esi; pop edi; ret; 
0x00104c23: add al, byte ptr [eax]; add byte ptr [ebp + 0x33840fc0], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x13f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000376d7: add al, byte ptr [eax]; add byte ptr [ebp + 0xb6], cl; add byte ptr [ebx - 0x1337f], cl; jmp dword ptr [ebp - 0x75]; 
0x0008fcc3: add al, byte ptr [eax]; add byte ptr [ebp - 0x19a37f7d], cl; jmp dword ptr [ebp - 0x5d]; 
0x0008fccf: add al, byte ptr [eax]; add byte ptr [ebp - 0x19a4cf7d], cl; call dword ptr [ecx + 0x50]; 
0x0014d7f2: add al, byte ptr [eax]; add byte ptr [ebp - 0x6a02a7e], cl; call dword ptr [eax - 0x73]; 
0x00091144: add al, byte ptr [eax]; add byte ptr [ebp - 0x6bfb67e], cl; call dword ptr [eax - 0x73]; 
0x00027bad: add al, byte ptr [eax]; add byte ptr [ebp - 0x6d45179], cl; call dword ptr [eax - 0x73]; 
0x00142e73: add al, byte ptr [eax]; add byte ptr [ebp - 0x7cffcabc], cl; in al, dx; add al, 1; ret 0x4489; 
0x0009f25e: add al, byte ptr [eax]; add byte ptr [ebx + 0x29142454], cl; ret 0xb48d; 
0x0004c494: add al, byte ptr [eax]; add byte ptr [ebx + 0x29302454], cl; ret 0x5489; 
0x0014b227: add al, byte ptr [eax]; add byte ptr [ebx + 0x396604ec], al; ret 0x470f; 
0x0007c7f8: add al, byte ptr [eax]; add byte ptr [ebx + 0x448d08ec], al; and al, 0x28; push eax; push esi; call dword ptr [edi + 0x48]; 
0x000c28b8: add al, byte ptr [eax]; add byte ptr [ebx + 0x48db055], cl; test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x1a8b; 
0x0012751b: add al, byte ptr [eax]; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00058f93: add al, byte ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00038c00: add al, byte ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0013b9cd: add al, byte ptr [eax]; add byte ptr [ebx - 0x1337a], cl; jmp dword ptr [ebp - 0x75]; 
0x00095dbf: add al, byte ptr [eax]; add byte ptr [ebx - 0x15f73], cl; jmp dword ptr [ebp - 0x5f]; 
0x0013c9d9: add al, byte ptr [eax]; add byte ptr [ebx - 0x17a9f314], al; cmp esp, dword ptr [ebx]; add eax, dword ptr [eax]; mov dword ptr [esp], ebp; call esi; 
0x000e2f51: add al, byte ptr [eax]; add byte ptr [ebx - 0x17acf314], al; ret; 
0x00050889: add al, byte ptr [eax]; add byte ptr [ebx - 0x36277b], cl; inc dword ptr [ebp - 0x6771f040]; add al, 0; add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x000c688e: add al, byte ptr [eax]; add byte ptr [ebx - 0x363743], al; call dword ptr [eax]; 
0x0004e1e8: add al, byte ptr [eax]; add byte ptr [ebx - 0x36377b], cl; inc dword ptr [ebx - 0x362f43]; call dword ptr [eax]; 
0x000c8027: add al, byte ptr [eax]; add byte ptr [ebx - 0x36477b], al; jmp eax; 
0x00050377: add al, byte ptr [eax]; add byte ptr [ebx - 0x364f7b], al; jmp eax; 
0x0006e9a9: add al, byte ptr [eax]; add byte ptr [ebx - 0x3eb3dbbc], cl; clc; add ch, byte ptr [ecx]; ret; 
0x0005f242: add al, byte ptr [eax]; add byte ptr [ebx - 0x59b7b], cl; jmp dword ptr [ebp - 0x75]; 
0x0003e8da: add al, byte ptr [eax]; add byte ptr [ebx - 0x7bf0fe02], al; ret 1; 
0x0002a2db: add al, byte ptr [eax]; add byte ptr [ebx - 0x7cfbdbac], cl; ret 0x8904; 
0x000913a3: add al, byte ptr [eax]; add byte ptr [ebx - 0x7cfbdbbc], cl; js 0x913b5; adc al, 0xf; xchg dword ptr [ebx + eax - 0x58180000], ebx; ret; 
0x000e7c6a: add al, byte ptr [eax]; add byte ptr [ebx - 0x98f7c74], cl; clc; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x000e613a: add al, byte ptr [eax]; add byte ptr [ebx - 0xaff7c74], cl; clc; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x00081f3c: add al, byte ptr [eax]; add byte ptr [ecx + 0x4c48310], cl; pop ebx; pop esi; ret; 
0x000300a2: add al, byte ptr [eax]; add byte ptr [ecx + 0x5e5b1814], cl; ret; 
0x00127119: add al, byte ptr [eax]; add byte ptr [ecx - 0x33f7b], cl; inc edi; test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x000c2481: add al, byte ptr [eax]; add byte ptr [ecx - 0x769bdbac], cl; ret 0x448b; 
0x000c24e5: add al, byte ptr [eax]; add byte ptr [ecx - 0x76a3dbac], cl; ret 0x448b; 
0x0008377e: add al, byte ptr [eax]; add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x0008398f: add al, byte ptr [eax]; add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x00130ed3: add al, byte ptr [eax]; add byte ptr [ecx], al; call edx; 
0x000b3a83: add al, byte ptr [eax]; add byte ptr [ecx], al; clc; add eax, ecx; pop edi; ret; 
0x0013df19: add al, byte ptr [eax]; add byte ptr [ecx], bh; ret; 
0x0013b9f1: add al, byte ptr [eax]; add byte ptr [ecx], ch; ret 0xc031; 
0x000a5bd7: add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x000f2743: add al, byte ptr [eax]; add byte ptr [edi], cl; dec esi; ret 0xc085; 
0x0008bd3a: add al, byte ptr [eax]; add byte ptr [edi], cl; inc esp; ret 0x118b; 
0x00139b66: add al, byte ptr [eax]; add byte ptr [edi], cl; inc esp; ret 0x4589; 
0x0014ba66: add al, byte ptr [eax]; add byte ptr [edi], cl; lahf; ret 0xd009; 
0x0003d712: add al, byte ptr [eax]; add byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; aad 1; ret 0xf089; 
0x0007d1af: add al, byte ptr [eax]; add byte ptr [edx], ch; push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; push esi; call dword ptr [edx + 0x40]; 
0x001735d7: add al, byte ptr [eax]; add byte ptr [edx], ch; push dword ptr [esp + 0x18]; push dword ptr [esp + 0x18]; push esi; call dword ptr [edx + 0x40]; 
0x0014ba31: add al, byte ptr [eax]; add dh, dh; ret 0xf08; 
0x000700f0: add al, byte ptr [eax]; add dh, dh; ret; 
0x00057b39: add al, byte ptr [eax]; add esp, 0x1c; ret; 
0x00057ae0: add al, byte ptr [eax]; add esp, 0x2c; ret; 
0x00140aca: add al, byte ptr [eax]; jne 0x140ad8; movzx eax, byte ptr [eax + 1]; shr eax, 1; ret; 
0x000a2011: add al, byte ptr [eax]; mov eax, edx; pop ebx; pop esi; ret; 
0x0011f1a6: add al, byte ptr [eax]; mov eax, esi; add esp, 4; pop ebx; pop esi; ret; 
0x00140913: add al, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x000a2047: add al, byte ptr [eax]; pop ebx; pop esi; ret; 
0x0015e7af: add al, byte ptr [ebp - 0x7ce58b40]; in al, dx; or al, 0x83; ret 0x5208; 
0x0017bd98: add al, byte ptr [ebx + 0x27402ea]; mov byte ptr [edi], al; pop edi; pop ebx; ret; 
0x00084381: add al, byte ptr [ebx + 0x28901e0]; xor eax, eax; ret; 
0x00086680: add al, byte ptr [ebx + 0x440bfee0]; and al, 8; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00058c3e: add al, byte ptr [ebx + 0x47f01f8]; ret; 
0x00162765: add al, byte ptr [ebx + 0x548b01e8]; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x16277a; add esp, 0x1c; ret; 
0x00081f73: add al, byte ptr [ebx + 0x5e5b04c4]; ret; 
0x00140558: add al, byte ptr [ebx + 0x5e5b08c4]; pop edi; pop ebp; ret; 
0x001279c4: add al, byte ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x00074a7a: add al, byte ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x000c78e1: add al, byte ptr [ebx + 0x6a5004ec]; add byte ptr [ebx - 0x364b63], cl; call dword ptr [edi - 0x18]; 
0x0004fe93: add al, byte ptr [ebx + 0x6a5004ec]; add byte ptr [ebx - 0x365363], cl; call dword ptr [esi - 0x18]; 
0x000857cc: add al, byte ptr [ebx + 0xe7403f8]; pop ebx; pop esi; pop edi; ret; 
0x00099aff: add al, byte ptr [ebx + eax*4]; jmp 0x1ea1e0b; cmovne eax, ecx; pop ebx; ret; 
0x000ba5ec: add al, byte ptr [ebx - 0x2d7cfc40]; add byte ptr [ecx - 0x162c763f], cl; ret 0xfffc; 
0x0004f983: add al, byte ptr [ebx - 0x362f43]; call dword ptr [eax]; 
0x00127ce9: add al, byte ptr [ebx - 0x3d7cef40]; add al, 0x39; sal dword ptr [ebp - 0xc], 0x8b; test dword ptr [edi + edi*8 - 1], eax; dec dword ptr [ebp - 0x10257f80]; call dword ptr [eax + 0x6a]; 
0x00084443: add al, byte ptr [ebx - 0x3fcee73c]; pop ebx; ret; 
0x000b46fe: add al, byte ptr [ebx - 0x540cfc1e]; mov ecx, edx; rep stosb byte ptr es:[edi], al; pop edi; ret; 
0x00060766: add al, byte ptr [ebx - 0x77cfb3e]; sub cl, byte ptr [edi]; xchg esp, eax; ret; 
0x0013ed13: add al, byte ptr [ebx - 0x79f0f008]; ret; 
0x000ced25: add al, byte ptr [ecx - 0x70a3d707]; add dh, byte ptr [esi + 0xa]; mov eax, edx; ret; 
0x00033c11: add al, byte ptr [ecx - 0xccc1e]; inc dword ptr [ecx]; ret 0xd089; 
0x0009d343: add al, byte ptr [ecx]; jne 0x9d330; pop ebx; pop esi; pop edi; ret; 
0x00042543: add al, byte ptr [ecx]; ret 0x448b; 
0x0004efaf: add al, byte ptr [ecx]; ret 0x858b; 
0x0002bc5b: add al, byte ptr [ecx]; ret 0x953b; 
0x00053498: add al, byte ptr [ecx]; ret; 
0x000c9e74: add al, byte ptr [edx + edx*8 - 0x2e77e88c]; and cl, 0xf; je 0xc9ea0; ret; 
0x00195b8e: add al, byte ptr ds:[eax]; add byte ptr [eax + 0x76850f04], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf04; 
0x00057b58: add al, byte ptr es:[eax]; add esp, 0x1c; ret; 
0x00127118: add al, byte ptr fs:[eax]; add byte ptr [ecx - 0x33f7b], cl; inc edi; test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x0008da37: add al, ch; add dword ptr [esi], 0; add byte ptr [ebx - 0x2776f73c], al; pop ebx; ret; 
0x0016be0b: add al, ch; call 0x8116be71; ret; 
0x0006e611: add al, ch; cdq; ret 0xffff; 
0x00139cc0: add al, ch; cli; push ebp; cli; jmp dword ptr [esi - 0x3f]; 
0x00139cc0: add al, ch; cli; push ebp; cli; jmp dword ptr [esi - 0x3f]; ret; 
0x000913b3: add al, ch; cmpsd dword ptr [esi], dword ptr es:[edi]; ret; 
0x00109a12: add al, ch; cwde; ret 0; 
0x00132bff: add al, ch; imul esi, esi, -1; jmp dword ptr [esi - 0x70]; 
0x001a0f21: add al, ch; imul esi, esi, 0xfe39ffed; jae 0x1a0f39; lea esi, [esi]; nop; call dword ptr [esi]; 
0x0015ace8: add al, ch; jb 0x15ace3; in eax, dx; jmp dword ptr [esi - 0x70]; 
0x001a11c8: add al, ch; jb 0x1a11bb; out 0xff, eax; add esp, 0x18; pop ebx; ret; 
0x000d6fe0: add al, ch; ljmp 0x10c4:0x83000000; mov eax, 1; add esp, 0xc; ret; 
0x00083d80: add al, ch; ljmp 0x1cc4:0x83fffff5; ret; 
0x00031e79: add al, ch; loope 0x31e21; push cs; add byte ptr [ecx - 0x76dbdbbc], cl; ret; 
0x0016707a: add al, ch; mov al, byte ptr [0xc7ffffc1]; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x001a1198: add al, ch; mov byte ptr [0x83ffe7ef], al; les ebx, ptr [eax]; pop ebx; ret; 
0x0016bb3b: add al, ch; mov eax, 0x81000062; ret; 
0x0016ba3b: add al, ch; mov eax, 0x81000063; ret; 
0x0017ab35: add al, ch; mov esi, 0x81ffff72; ret; 
0x00161e9e: add al, ch; mov esp, 0xe8ffed85; inc edi; sbb edi, ebp; jmp dword ptr [esi - 0x70]; 
0x0002fa46: add al, ch; movsb byte ptr es:[edi], byte ptr [esi]; mov eax, 0xc4830006; or al, 0x89; ret; 
0x001a14d0: add al, ch; push -0x14; out 0xff, eax; add esp, 0x18; pop ebx; ret; 
0x000f359c: add al, ch; push cs; ret 0xffff; 
0x00172988: add al, ch; ret 0xead7; 
0x000cd848: add al, ch; ret 0xfae8; 
0x000de1a8: add al, ch; ret 0xfb4d; 
0x000760c7: add al, ch; ret; 
0x0012105c: add al, ch; sahf; push ss; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000e80dd: add al, ch; sub bl, byte ptr [ebp - 0x387efff8]; sbb eax, 0x8900141f; ret; 
0x001339e7: add al, ch; sub eax, -1; jmp dword ptr [esi - 0x70]; 
0x001334e7: add al, ch; sub ebp, -1; jmp dword ptr [esi - 0x70]; 
0x000353d3: add al, ch; xchg dword ptr [edi + 0xe], ebp; add byte ptr [ebx + 0x478920c4], al; adc al, 0x89; ret; 
0x00129469: add al, dh; call dword ptr [eax - 0x18]; 
0x00082c9d: add al, dh; cmpxchg dword ptr [ecx], edx; setne al; movzx eax, al; pop ebx; ret; 
0x00098f68: add al, dh; dec dword ptr [edi]; inc esp; ret 0x568d; 
0x00094d80: add al, dh; dec dword ptr [edi]; inc esp; ret 0xd231; 
0x00099575: add al, dh; dec dword ptr [edi]; inc esp; ret 0xe821; 
0x00098c12: add al, dh; dec dword ptr [edi]; inc esp; shl dword ptr [ecx], 1; ret 0x1a8b; 
0x000a210d: add al, dh; inc edx; add al, byte ptr [eax]; pop ebx; pop esi; ret; 
0x000499d6: add al, dh; inc esp; and al, 0x50; add byte ptr [edi], cl; xchg esp, eax; ret; 
0x001260b6: add ax, 0; add esp, 0x1c; ret; 
0x0011b746: add ax, 0x8100; ret; 
0x00079444: add bh, al; add al, 1; or dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xffffffff; ret; 
0x0010fba4: add bh, al; add al, 1; push ss; add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x000380d3: add bh, al; add al, 1; push ss; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x000376ec: add bh, al; add al, 2; push ss; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x0011d514: add bh, al; add al, 2; push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0015a2e7: add bh, al; add byte ptr [eax + eax], cl; add byte ptr [eax], al; pop ebx; ret; 
0x0008be65: add bh, al; add eax, dword ptr [edx]; add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x00080fb7: add bh, al; and byte ptr [eax + 0x19], 0; add byte ptr [eax], al; mov dword ptr [eax + 0x19a4], 0; ret; 
0x00130eca: add bh, al; inc ebp; mov esp, 0; push 0x1000002; call edx; 
0x00094b4d: add bh, al; inc edi; add al, 0; add byte ptr [eax], al; add byte ptr [ebp + 0x39b774d2], al; ret 0xb374; 
0x0011274d: add bh, al; inc edx; add al, 0; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x00156de2: add bh, al; inc esi; sbb byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x00080cae: add bh, al; inc esi; sub byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0007f468: add bh, al; inc esi; sub byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0006de51: add bh, al; inc esp; and al, 0x20; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x0006de01: add bh, al; inc esp; and al, 0x20; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x00068c31: add bh, al; inc esp; and al, 0x24; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x00068bd9: add bh, al; inc esp; and al, 0x24; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x0006f41f: add bh, al; inc esp; and al, 0x34; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0006f44f: add bh, al; inc esp; and al, 0x38; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0006e849: add bh, al; inc esp; and al, 0x3c; and byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x000930b1: add bh, al; inc esp; and al, 0x44; add al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0006e803: add bh, al; inc esp; and al, 0x44; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0006f39f: add bh, al; inc esp; and al, 0x4c; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0006e555: add bh, al; inc esp; and al, 0x5c; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x0006f38f: add bh, al; inc esp; and al, 0x64; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x00069395: add bh, al; inc esp; and al, 0x68; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x00094267: add bh, al; or byte ptr [eax], 0x3b; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x00151854: add bh, al; or dword ptr [eax + 0x51], 0; add byte ptr [eax], al; call esi; 
0x00151638: add bh, al; or dword ptr [eax + 0x92], 0; add byte ptr [eax], al; call esi; 
0x00151746: add bh, al; or dword ptr [eax], 0x72; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x001517cd: add bh, al; or eax, 0x61; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x0009462a: add bh, al; sub ah, 1; add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x0006ccf8: add bh, al; test dword ptr [eax], edi; idiv edi; call dword ptr [eax]; 
0x000b4972: add bh, bh; add byte ptr [ecx + eax + 0x40], dh; pop edi; pop esi; ret; 
0x000b47ce: add bh, bh; add byte ptr [ecx + eax + 0x40], dh; pop edi; ret; 
0x0003ab15: add bh, bh; jae 0x3ab1d; call eax; 
0x0010ccb8: add bh, bh; je 0x10cce0; xor bh, bh; jne 0x10cccc; call dword ptr [ebp + 0x24]; 
0x0010dd48: add bh, bh; je 0x10dd70; xor bh, bh; jne 0x10dd5c; call dword ptr [ebp + 0x24]; 
0x00114c58: add bh, bh; je 0x114c80; xor bh, bh; jne 0x114c6c; call dword ptr [ebp + 0x24]; 
0x0011930c: add bh, bh; je 0x119334; sbb al, 0xe8; ljmp 0x1cc4:0x83fff3f2; ret; 
0x0015db55: add bh, bh; je 0x15db7d; sub al, 0x56; call dword ptr [eax + 0xc]; 
0x00163b10: add bh, bh; je 0x163b38; sbb al, 0x53; call eax; 
0x0016e5a9: add bh, bh; je 0x16e5d1; and al, 0x8b; inc esp; and al, 0x24; call eax; 
0x00077a67: add bh, bh; je 0x77a8f; sbb bh, bh; je 0x77a93; sbb byte ptr [ebx + 0x56182474], cl; call dword ptr [edi + 0x40]; 
0x00077b7c: add bh, bh; je 0x77ba4; sub bh, bh; je 0x77ba8; sub byte ptr [ebx + 0x56182474], cl; call dword ptr [edi + 0x40]; 
0x0008233a: add bh, bh; je 0x82362; xor bh, bh; je 0x82366; cmp al, 0x51; call eax; 
0x000dd698: add bh, bh; je 0xdd6c0; sbb byte ptr [edx - 1], ch; call 0xdd6b0; add esp, 0x1c; ret; 
0x0008b407: add bh, bh; jmp dword ptr [ebp - 0x39]; 
0x00104430: add bh, bh; jne 0x10443d; mov eax, dword ptr [esp + 4]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x00078e9c: add bh, bh; jne 0x78e74; push edx; push ebx; push esi; call eax; 
0x0009a98b: add bh, bh; mov ah, 0x24; hlt; add byte ptr [eax], al; add byte ptr [ebp - 0x66ba380], cl; call dword ptr [eax + 0x68]; 
0x001734b7: add bh, bh; mov ah, 0x24; mov esp, 0x55000000; push edi; push esi; call dword ptr [ebx + 0x40]; 
0x0003930b: add bh, bh; mov eax, dword ptr ss:[esp + 0x20]; call eax; 
0x0008eabb: add bh, bh; pop esi; pop edi; pop ebp; ret; 
0x0009fa2f: add bh, bh; push dword ptr [esp - 9]; ret 0; 
0x000dff39: add bh, bh; ret; 
0x000731a1: add bh, bh; xor cl, byte ptr [ecx - 0x17efdbac]; ret; 
0x0011cacb: add bh, bl; jmp 0x9a21a3af; ror byte ptr [edi], 0x45; ret 0xc084; 
0x0011d0ab: add bh, bl; jmp 0x9a21a98f; ror byte ptr [edi], 0x45; ret 0xc084; 
0x00057a64: add bh, byte ptr [eax + 1]; ret; 
0x000b4498: add bh, byte ptr [ecx]; fmul dword ptr [edi]; inc edi; ret; 
0x0013fc95: add bh, byte ptr [ecx]; rcr dword ptr [ecx], 0xd2; mov eax, edx; pop ebx; pop esi; ret; 
0x00053f23: add bh, byte ptr [ecx]; ret 0x8c0f; 
0x0011f1e5: add bh, byte ptr [ecx]; ret 0xf089; 
0x0002a23b: add bh, byte ptr [ecx]; test dword ptr [edi], 0x30182; add byte ptr [ebx - 0x7cfbdba4], cl; ret; 
0x00028e53: add bh, byte ptr [ecx]; test dword ptr [edi], 0x31382; add byte ptr [ebx - 0x7cfbdba4], cl; ret; 
0x0016d7a3: add bh, byte ptr [edi + 0xa]; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x00083e59: add bh, byte ptr [edx + 0x16]; test eax, eax; cmovne eax, edx; ret; 
0x0013f926: add bh, ch; jmp dword ptr [esi - 0x39]; 
0x00098f61: add bh, dh; fadd dword ptr [ebp + 0xbad2]; lock dec dword ptr [edi]; inc esp; ret 0x568d; 
0x00094d79: add bh, dh; fadd dword ptr [ebp + 0xbad2]; lock dec dword ptr [edi]; inc esp; ret 0xd231; 
0x0009956e: add bh, dh; fadd dword ptr [ebp + 0xbad2]; lock dec dword ptr [edi]; inc esp; ret 0xe821; 
0x00098c0b: add bh, dh; fiadd dword ptr [ebp + 0xb9c9]; lock dec dword ptr [edi]; inc esp; shl dword ptr [ecx], 1; ret 0x1a8b; 
0x0008de5a: add bh, dh; mov dword ptr [ecx], 0x74000000; aad 0x89; ret 0xe083; 
0x000b42c5: add bh, dh; ret 0x3f; 
0x0017b098: add bh, dh; ret 0xf; 
0x000b4e45: add bh, dh; ret 3; 
0x000d707f: add bh, dh; ror dword ptr [ebp + 0x2dd1c], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00155e07: add bl, byte ptr [ebx + 0x5e]; mov eax, ecx; pop edi; pop ebp; ret; 
0x000a1f68: add bl, byte ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x00076036: add bl, byte ptr [ebx + 0x5e]; pop edi; ret; 
0x00081004: add bl, byte ptr [ebx + 0x5e]; ret; 
0x0014f2a2: add bl, byte ptr [ebx + 0x5e]; sub eax, 1; pop edi; pop ebp; ret; 
0x001537fe: add bl, byte ptr [edi + 0x5d]; mov eax, edx; ret; 
0x00074b2c: add bl, byte ptr [edi + 0x5d]; ret; 
0x000ac08b: add bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x00147a08: add bl, byte ptr [edi - 7]; call dword ptr [ebx - 0x18]; 
0x000761b6: add bl, byte ptr [esi + 0x5f]; ret; 
0x0014ddba: add bl, byte ptr [esi + ebp*8]; dec dword ptr [ebp - 0x6531f79]; call dword ptr [eax - 0x73]; 
0x00198a57: add bl, byte ptr [esi - 0x7d]; ret 0x8308; 
0x0006085b: add bl, ch; adc eax, 0xec839066; or al, 0x83; ret; 
0x00159574: add bl, ch; fucomi st(0); je 0x15951e; std; jmp dword ptr [esi - 0x70]; 
0x0016d296: add bl, ch; fucomi st(0); push edx; cld; jmp dword ptr [esi - 0x70]; 
0x0015bf84: add bl, ch; fucomp st(0); jp 0x15bf88; jmp dword ptr [esi - 0x70]; 
0x0016d216: add bl, ch; jecxz 0x16d202; shl byte ptr [edi - 4], cl; jmp dword ptr [esi - 0x70]; 
0x00145e07: add bl, ch; lds ecx, ptr [ebx - 0x1337b]; jmp dword ptr [ebp - 0x75]; 
0x0013faca: add bl, ch; mov dword ptr [ebp - 0x6581f7a], ecx; call dword ptr [eax - 0x73]; 
0x00027c22: add bl, ch; mov ecx, dword ptr [ebx - 0x72c7db84]; xchg eax, esp; jo 0x27c27; call dword ptr [eax - 0x73]; 
0x00092672: add bl, ch; mov esi, 0x8d88758b; xchg byte ptr [eax - 0x7c], ah; stc; call dword ptr [eax + 0x68]; 
0x0011ae88: add bl, ch; ret 0x748d; 
0x0013470b: add bl, ch; ret 0x9066; 
0x00075bf4: add bl, ch; ret 0xb48d; 
0x00084ef0: add bl, ch; ret; 
0x0009a339: add bl, ch; xchg esi, eax; lea esi, [esi]; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax - 0x148]; call dword ptr [eax]; 
0x000a83df: add bl, dh; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x000a3fef: add bl, dh; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000b358f: add bl, dh; movq qword ptr [eax + 0x10], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b00bc: add bl, dh; movq qword ptr [eax + 0x10], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b352f: add bl, dh; movq qword ptr [eax + 0xd], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b005c: add bl, dh; movq qword ptr [eax + 0xd], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b354f: add bl, dh; movq qword ptr [eax + 0xe], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b007c: add bl, dh; movq qword ptr [eax + 0xe], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b356f: add bl, dh; movq qword ptr [eax + 0xf], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b009c: add bl, dh; movq qword ptr [eax + 0xf], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ac4df: add bl, dh; movq qword ptr [edi - 1], mm0; pop edi; pop esi; pop ebx; ret; 
0x000ac4ef: add bl, dh; movq qword ptr [edi], mm0; pop edi; pop esi; pop ebx; ret; 
0x001280c8: add byte ptr [0x101f37], al; mov eax, dword ptr [eax - 0xc8]; mov eax, dword ptr [eax + 0x24]; ret; 
0x00092f78: add byte ptr [0x197087], al; mov dword ptr [eax + 0x3b04], 0; ret; 
0x00089568: add byte ptr [0x1a0a97], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x114], edx; ret; 
0x00089548: add byte ptr [0x1a0ab7], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x11c], edx; ret; 
0x00088348: add byte ptr [0x1a1cb7], al; mov eax, dword ptr [eax + 0x3a28]; ret; 
0x00082978: add byte ptr [0x1a7687], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x110], edx; ret; 
0x00082958: add byte ptr [0x1a76a7], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x10c], edx; ret; 
0x00082938: add byte ptr [0x1a76c7], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x108], edx; ret; 
0x00082918: add byte ptr [0x1a76e7], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x104], edx; ret; 
0x00080e88: add byte ptr [0x1a9177], al; mov eax, dword ptr [eax + 0xce0]; ret; 
0x000384d8: add byte ptr [0x1f1b27], al; mov eax, dword ptr [eax + 0x64]; ret; 
0x000384b8: add byte ptr [0x1f1b47], al; mov eax, dword ptr [eax + 0x68]; ret; 
0x00030038: add byte ptr [0x1f9fc7], al; mov eax, dword ptr [eax - 0x144]; add eax, dword ptr gs:[0]; ret; 
0x00030018: add byte ptr [0x1f9fe7], al; mov eax, dword ptr [eax - 0xc]; add eax, dword ptr gs:[0]; ret; 
0x0002fff8: add byte ptr [0x1fa007], al; mov eax, dword ptr [eax - 0x13c]; add eax, dword ptr gs:[0]; ret; 
0x0002b8c8: add byte ptr [0x1fe737], al; mov eax, dword ptr [eax + 0x1014]; ret; 
0x001963af: add byte ptr [0x1ff], ah; jne 0x196100; xor eax, eax; pop edi; ret; 
0x0007b0c9: add byte ptr [0x200], ah; ret; 
0x000227b8: add byte ptr [0x207847], al; mov eax, dword ptr [eax + 0xff0]; ret; 
0x00022798: add byte ptr [0x207867], al; mov eax, dword ptr [eax + 0xfec]; ret; 
0x00021de8: add byte ptr [0x208217], al; mov eax, dword ptr [eax - 0x134]; add eax, dword ptr gs:[0]; ret; 
0x00021758: add byte ptr [0x2088a7], al; lea eax, [eax - 0x6921c]; ret; 
0x00021738: add byte ptr [0x2088c7], al; lea eax, [eax - 0x69214]; ret; 
0x00021408: add byte ptr [0x208bf7], al; mov edx, dword ptr [eax - 0xb8]; test edx, edx; je 0x21419; ret; 
0x00094394: add byte ptr [0x3fc], bh; jbe 0x943a0; ret; 
0x0002da40: add byte ptr [0x748dd375], al; add dh, dh; ret 0x7503; 
0x00035c11: add byte ptr [0x7fff], ah; or eax, edx; mov dword ptr [esp + 0xc], eax; fld xword ptr [esp + 4]; ret; 
0x0007b079: add byte ptr [0x804], ah; ret; 
0x00021de6: add byte ptr [0x82170500], dl; and byte ptr [eax], al; mov eax, dword ptr [eax - 0x134]; add eax, dword ptr gs:[0]; ret; 
0x0015d87c: add byte ptr [0xac], al; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x000932ca: add byte ptr [0xc4830000], 0x2c; ret; 
0x0008bbbd: add byte ptr [0xf000dff], ah; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00133df8: add byte ptr [0xf6207], al; mov eax, dword ptr [eax - 0x114]; add eax, dword ptr gs:[0]; ret; 
0x001962ca: add byte ptr [0xff], ah; jne 0x196100; xor eax, eax; pop edi; ret; 
0x00052fe7: add byte ptr [0xfff8c7e9], ch; jmp dword ptr [esi - 0x70]; 
0x00196301: add byte ptr [0xfff], ah; jne 0x196100; xor eax, eax; pop edi; ret; 
0x0019633a: add byte ptr [0xffff], ah; jne 0x196100; xor eax, eax; pop edi; ret; 
0x000943d4: add byte ptr [0xffff], bh; jbe 0x943e0; ret; 
0x0012095d: add byte ptr [0xfffff000], ah; or eax, edx; ret; 
0x00108666: add byte ptr [0xfffff000], bh; ja 0x108678; pop ebx; pop esi; ret; 
0x00109395: add byte ptr [0xfffff000], bh; ja 0x1093a8; pop ebx; pop esi; pop edi; ret; 
0x001096f9: add byte ptr [0xfffff000], bh; ja 0x109708; pop ebx; pop esi; ret; 
0x00109759: add byte ptr [0xfffff000], bh; ja 0x109768; pop ebx; pop esi; ret; 
0x0010a493: add byte ptr [0xfffff000], bh; ja 0x10a4a0; pop ebx; ret; 
0x0010aeed: add byte ptr [0xfffff000], bh; ja 0x10af40; add esp, 0x14; pop ebx; pop esi; ret; 
0x0010b031: add byte ptr [0xfffff000], bh; ja 0x10b040; pop ebx; ret; 
0x0010b0c1: add byte ptr [0xfffff000], bh; ja 0x10b110; add esp, 0x14; pop ebx; pop esi; ret; 
0x00115a1f: add byte ptr [0xfffff000], bh; ja 0x115a30; pop ebx; ret; 
0x00115bef: add byte ptr [0xfffff000], bh; ja 0x115c10; pop ebx; pop esi; pop edi; ret; 
0x00115c72: add byte ptr [0xfffff000], bh; ja 0x115c90; pop ebx; pop esi; pop edi; ret; 
0x00115cee: add byte ptr [0xfffff000], bh; ja 0x115d10; pop ebx; pop esi; pop edi; ret; 
0x00115d71: add byte ptr [0xfffff000], bh; ja 0x115d90; pop ebx; pop esi; pop edi; ret; 
0x00115dd8: add byte ptr [0xfffff000], bh; ja 0x115de8; pop ebx; pop esi; ret; 
0x00115e98: add byte ptr [0xfffff000], bh; ja 0x115ea8; pop ebx; pop esi; ret; 
0x00116913: add byte ptr [0xfffff000], bh; ja 0x116920; pop ebx; ret; 
0x00116963: add byte ptr [0xfffff000], bh; ja 0x116970; pop ebx; ret; 
0x00116a79: add byte ptr [0xfffff000], bh; ja 0x116a88; pop ebx; pop esi; pop edi; ret; 
0x00116ad9: add byte ptr [0xfffff000], bh; ja 0x116ae8; pop ebx; pop esi; pop edi; ret; 
0x00117228: add byte ptr [0xfffff000], bh; ja 0x117238; pop ebx; pop esi; ret; 
0x00118d6d: add byte ptr [0xfffff000], bh; ja 0x118dc0; add esp, 0x14; pop ebx; pop esi; ret; 
0x00118e4d: add byte ptr [0xfffff000], bh; ja 0x118ea0; add esp, 0x14; pop ebx; pop esi; ret; 
0x00118f3a: add byte ptr [0xfffff000], bh; ja 0x118f48; pop ebx; pop esi; ret; 
0x0011a7f3: add byte ptr [0xfffff000], bh; ja 0x11a800; pop ebx; ret; 
0x0011a843: add byte ptr [0xfffff000], bh; ja 0x11a850; pop ebx; ret; 
0x0011a898: add byte ptr [0xfffff000], bh; ja 0x11a8a8; pop ebx; pop esi; ret; 
0x0011a8f8: add byte ptr [0xfffff000], bh; ja 0x11a908; pop ebx; pop esi; ret; 
0x0011ea5b: add byte ptr [0xfffff000], bh; ja 0x11ea68; pop ebx; ret; 
0x00121363: add byte ptr [0xfffff000], bh; ja 0x121370; pop ebx; ret; 
0x001213bd: add byte ptr [0xfffff000], bh; ja 0x1213d0; pop ebx; pop esi; pop edi; ret; 
0x001217de: add byte ptr [0xfffff000], bh; ja 0x1217f0; pop ebx; pop esi; pop edi; ret; 
0x00121a3d: add byte ptr [0xfffff000], bh; ja 0x121a50; pop ebx; pop esi; pop edi; ret; 
0x00122002: add byte ptr [0xfffff000], bh; ja 0x122028; pop ebx; pop esi; pop edi; ret; 
0x00122ff3: add byte ptr [0xfffff000], bh; ja 0x123000; pop ebx; ret; 
0x00123043: add byte ptr [0xfffff000], bh; ja 0x123050; pop ebx; ret; 
0x00123093: add byte ptr [0xfffff000], bh; ja 0x1230a0; pop ebx; ret; 
0x001231a4: add byte ptr [0xfffff000], bh; ja 0x1231b0; pop ebx; pop esi; pop edi; ret; 
0x001780b9: add byte ptr [0xfffff000], bh; ja 0x1780c8; pop ebx; pop esi; ret; 
0x00037994: add byte ptr [0xfffff000], bh; ja 0x379a0; pop ebx; ret; 
0x000379f2: add byte ptr [0xfffff000], bh; ja 0x37a40; add esp, 0x14; pop ebx; pop esi; ret; 
0x00058a23: add byte ptr [0xfffff000], bh; ja 0x58a30; pop ebx; ret; 
0x00058a7d: add byte ptr [0xfffff000], bh; ja 0x58a90; pop ebx; pop esi; pop edi; ret; 
0x00083790: add byte ptr [0xfffff000], bh; ja 0x837a0; pop ebx; pop esi; pop edi; ret; 
0x0008bee3: add byte ptr [0xfffff000], bh; ja 0x8bef0; pop ebx; pop esi; pop edi; ret; 
0x00092c5f: add byte ptr [0xfffff000], bh; ja 0x92c70; pop ebx; ret; 
0x000931d6: add byte ptr [0xfffff000], bh; ja 0x931f8; pop ebx; pop esi; pop edi; ret; 
0x00093308: add byte ptr [0xfffff000], bh; ja 0x93318; pop ebx; pop esi; ret; 
0x000938f7: add byte ptr [0xfffff000], bh; ja 0x93908; pop ebx; ret; 
0x00093ce7: add byte ptr [0xfffff000], bh; ja 0x93cf8; pop ebx; ret; 
0x000cc081: add byte ptr [0xfffff000], bh; ja 0xcc090; pop ebx; ret; 
0x000d8f32: add byte ptr [0xfffff000], bh; ja 0xd8f40; pop ebx; pop esi; ret; 
0x000ddcf8: add byte ptr [0xfffff000], bh; ja 0xddd40; add esp, 0x18; pop ebx; ret; 
0x000de418: add byte ptr [0xfffff000], bh; ja 0xde440; hlt; mov eax, ecx; call dword ptr gs:[0x10]; 
0x000fb388: add byte ptr [0xfffff000], bh; ja 0xfb398; pop ebx; pop esi; ret; 
0x000df69f: add byte ptr [0xfffff001], bh; jae 0x216d0; ret; 
0x00133aaf: add byte ptr [0xffffff], ah; ret; 
0x00058bfe: add byte ptr [eax + 0x1044283], dl; xor eax, eax; pop ebx; pop esi; ret; 
0x0008e1df: add byte ptr [eax + 0x10], bh; add esp, 0xc; ret; 
0x000d7730: add byte ptr [eax + 0x10b], bh; mov ecx, dword ptr [esp + 0x74]; mov edx, edi; call dword ptr gs:[0x10]; 
0x000a80ae: add byte ptr [eax + 0x1120f66], dl; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x000a3cde: add byte ptr [eax + 0x1120f66], dl; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000a5e1e: add byte ptr [eax + 0x1130f66], dl; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000a5e2e: add byte ptr [eax + 0x1130f66], dl; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000a5e3e: add byte ptr [eax + 0x1130f66], dl; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x00092fcc: add byte ptr [eax + 0x119], bh; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00123101: add byte ptr [eax + 0x12c], bh; call dword ptr gs:[0x10]; 
0x00109add: add byte ptr [eax + 0x132], bh; call dword ptr gs:[0x10]; 
0x0010a7be: add byte ptr [eax + 0x133], bh; call dword ptr gs:[0x10]; 
0x00084753: add byte ptr [eax + 0x16], bh; cmove eax, edx; ret; 
0x0008496f: add byte ptr [eax + 0x16], bh; pop ebx; ret; 
0x00084bbf: add byte ptr [eax + 0x16], bh; ret; 
0x000a812e: add byte ptr [eax + 0x16f0ff3], dl; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000a3d5e: add byte ptr [eax + 0x16f0ff3], dl; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x00198c4e: add byte ptr [eax + 0x16f0ff3], dl; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x0004aa1f: add byte ptr [eax + 0x180], bh; call dword ptr gs:[0x10]; 
0x00086baf: add byte ptr [eax + 0x182], bh; call dword ptr gs:[0x10]; 
0x000af68f: add byte ptr [eax + 0x18a017a], cl; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x000af6cf: add byte ptr [eax + 0x18b047a], cl; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x000d7436: add byte ptr [eax + 0x194], bh; call dword ptr gs:[0x10]; 
0x000d76ba: add byte ptr [eax + 0x197], bh; mov ecx, dword ptr [esp + 0x74]; mov edx, ebp; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x00038590: add byte ptr [eax + 0x1a5], bh; mov esi, 8; mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x0008305c: add byte ptr [eax + 0x1a6], bh; xor edx, edx; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0012c50e: add byte ptr [eax + 0x1b85b], dl; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x0018b1ae: add byte ptr [eax + 0x1b8], dl; add byte ptr [edi + 2], dh; neg eax; ret; 
0x0011aeff: add byte ptr [eax + 0x1ba0000], al; add byte ptr [eax], al; add byte ptr [ebx - 0x2f76f73c], al; pop ebx; ret; 
0x000943df: add byte ptr [eax + 0x2048289], dl; add byte ptr [eax], al; ret; 
0x000dfe0d: add byte ptr [eax + 0x20], bh; mov edx, 0x40; cmove eax, edx; ret; 
0x000b317f: add byte ptr [eax + 0x24448b38], cl; or al, 0x5b; pop esi; ret; 
0x0003dffe: add byte ptr [eax + 0x244cb60f], dl; and al, 0x39; ret; 
0x0003d7de: add byte ptr [eax + 0x244cb60f], dl; sbb byte ptr [ecx], bh; ret; 
0x0018b11e: add byte ptr [eax + 0x248b60f], dl; movzx eax, byte ptr [edx + 2]; sub eax, ecx; ret; 
0x000a807e: add byte ptr [eax + 0x289018b], dl; lea eax, [edx + 3]; pop edi; ret; 
0x000a3cae: add byte ptr [eax + 0x289018b], dl; mov eax, edi; pop edi; ret; 
0x0012c467: add byte ptr [eax + 0x29], dl; ret 0x838d; 
0x0005930e: add byte ptr [eax + 0x3224858d], dl; stc; call dword ptr [esi - 0x77]; 
0x000dd5d7: add byte ptr [eax + 0x33], 0xeb; call dword ptr [eax - 1]; 
0x0018b12e: add byte ptr [eax + 0x348b60f], dl; movzx eax, byte ptr [edx + 3]; sub eax, ecx; ret; 
0x00041cce: add byte ptr [eax + 0x36e85755], dl; add dword ptr [ebx], edx; add byte ptr [ecx + 0x1e8329c7], al; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x000c2c86: add byte ptr [eax + 0x3901c083], dl; ret; 
0x00083ace: add byte ptr [eax + 0x39a0478d], dl; ret; 
0x0012c05e: add byte ptr [eax + 0x39ff438d], dl; lds ecx, ptr [edi]; xchg dword ptr [0x89000002], edx; ret; 
0x0015bf7e: add byte ptr [eax + 0x3b8], dl; add bl, ch; fucomp st(0); jp 0x15bf88; jmp dword ptr [esi - 0x70]; 
0x000fd1c3: add byte ptr [eax + 0x40840f40], ch; or eax, 0xec830000; or byte ptr [ebp - 0x67343], cl; call dword ptr [edi - 1]; 
0x000dfdb7: add byte ptr [eax + 0x40], bh; ret; 
0x000b336d: add byte ptr [eax + 0x448b1070], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000afed7: add byte ptr [eax + 0x448b1070], cl; and al, 8; pop esi; ret; 
0x0018b13e: add byte ptr [eax + 0x448b60f], dl; movzx eax, byte ptr [edx + 4]; sub eax, ecx; ret; 
0x0009b4b9: add byte ptr [eax + 0x450fffe7], ah; ret 0x66c3; 
0x00192b5e: add byte ptr [eax + 0x486f0ff3], dl; ret 0xff3; 
0x00192abe: add byte ptr [eax + 0x486f0ff3], dl; ret; 
0x0009a5ce: add byte ptr [eax + 0x5008ec83], dl; push dword ptr [ebx + 0x24]; call edx; 
0x0007bf6e: add byte ptr [eax + 0x5018ec83], dl; call 0x7f6f0; add esp, 0x1c; ret; 
0x000a5d8e: add byte ptr [eax + 0x51881189], dl; add al, 0x5b; ret; 
0x0015f73d: add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; 
0x0015f73d: add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x000ff1bb: add byte ptr [eax + 0x52], dl; call ebx; 
0x00065dde: add byte ptr [eax + 0x5304ec83], dl; push dword ptr [esp + 0x14]; push ebp; call dword ptr [eax + 0x1c]; 
0x0018b14e: add byte ptr [eax + 0x548b60f], dl; movzx eax, byte ptr [edx + 5]; sub eax, ecx; ret; 
0x0015f86e: add byte ptr [eax + 0x560cec83], dl; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x000f226e: add byte ptr [eax + 0x568bd689], dl; or byte ptr [ebp + 0x390474d2], al; ret 0x2b75; 
0x00159e2a: add byte ptr [eax + 0x5a], bl; push dword ptr [esp + 0x20]; push edi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x0015a7d8: add byte ptr [eax + 0x5a], bl; push dword ptr [esp + 8]; push edi; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x18]; 
0x0007f69e: add byte ptr [eax + 0x5b00b60f], dl; pop esi; pop edi; ret; 
0x0009e89e: add byte ptr [eax + 0x5b04c483], dl; pop esi; ret; 
0x000a5d5e: add byte ptr [eax + 0x5b118966], dl; ret; 
0x0019310e: add byte ptr [eax + 0x5b5fc031], dl; ret; 
0x000b82dc: add byte ptr [eax + 0x5d5f5e5b], al; ret; 
0x000ac3fe: add byte ptr [eax + 0x5e5f1788], dl; pop ebx; ret; 
0x00166c4e: add byte ptr [eax + 0x5ec0315b], dl; pop edi; ret; 
0x00195cfe: add byte ptr [eax + 0x5f01478d], dl; ret; 
0x00197afe: add byte ptr [eax + 0x5f01c083], dl; ret; 
0x00075bee: add byte ptr [eax + 0x619be8], dl; add bl, ch; ret 0xb48d; 
0x0018b15e: add byte ptr [eax + 0x648b60f], dl; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x000a814e: add byte ptr [eax + 0x66018b66], dl; mov dword ptr [edx], eax; lea eax, [edx + 1]; pop edi; ret; 
0x000a3d7e: add byte ptr [eax + 0x66018b66], dl; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x000afd5e: add byte ptr [eax + 0x66168b66], dl; mov dword ptr [eax], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00124f3b: add byte ptr [eax + 0x66], bh; mov ebx, 0xe; call dword ptr gs:[0x10]; 
0x000afebe: add byte ptr [eax + 0x66f0ff3], dl; movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0011932a: add byte ptr [eax + 0x6a0000], al; push dword ptr [esp + 0x1c]; call 0x58600; add esp, 0x1c; ret; 
0x0007f4fe: add byte ptr [eax + 0x6a08ec83], dl; call dword ptr [esi - 0x18]; 
0x00122dff: add byte ptr [eax + 0x6a], bh; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00122f7f: add byte ptr [eax + 0x6b], bh; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00122ec6: add byte ptr [eax + 0x6c], bh; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000fda3f: add byte ptr [eax + 0x74000978], al; sbb ecx, dword ptr [ecx - 0x7ccf7427]; ret; 
0x0007178e: add byte ptr [eax + 0x7420c2f6], dl; adc ecx, dword ptr [ebx - 0x13371]; jmp dword ptr [ebp - 0x75]; 
0x0013319e: add byte ptr [eax + 0x7420c2f6], dl; sbb cl, byte ptr [ebx - 0x13375]; jmp dword ptr [ebp - 0x75]; 
0x000c6be6: add byte ptr [eax + 0x7565f883], dl; sbb dword ptr [ebx - 0x361f7b], ecx; inc dword ptr [ebx - 0x363743]; call dword ptr [eax]; 
0x00126200: add byte ptr [eax + 0x75], bh; call dword ptr gs:[0x10]; 
0x001268d3: add byte ptr [eax + 0x75], bh; xor esi, esi; mov ebx, 0x18; or dh, 1; call dword ptr gs:[0x10]; 
0x00125d33: add byte ptr [eax + 0x75], bh; xor esi, esi; mov ebx, 0xe; or dh, 1; call dword ptr gs:[0x10]; 
0x0018388e: add byte ptr [eax + 0x7608f983], dl; fcomi st(7); ret 1; 
0x0011d42e: add byte ptr [eax + 0x7608fb83], dl; sub al, 0x69; ret; 
0x00195b91: add byte ptr [eax + 0x76850f04], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf04; 
0x00195b80: add byte ptr [eax + 0x77850f02], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf02; 
0x00195b6f: add byte ptr [eax + 0x78850f01], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf01; 
0x0004aa76: add byte ptr [eax + 0x7e], bh; call dword ptr gs:[0x10]; 
0x000dfcbd: add byte ptr [eax + 0x7f], bh; mov edx, 0x7d00; pop ebx; cmove eax, edx; ret; 
0x000dfcdf: add byte ptr [eax + 0x7f], bh; mov edx, 0xfa; pop ebx; cmove eax, edx; ret; 
0x000dfc50: add byte ptr [eax + 0x7f], bh; mov edx, 0xfffa; cmove eax, edx; pop ebx; ret; 
0x0015a30e: add byte ptr [eax + 0x800c7], dl; add byte ptr [eax], al; pop ebx; ret; 
0x001620fe: add byte ptr [eax + 0x8244489], dl; sub esp, 0xc; mov ecx, dword ptr [edx + 4]; push edx; call dword ptr [ecx + 0x10]; 
0x00127086: add byte ptr [eax + 0x92b8], dl; add byte ptr [ebx - 0x4f763], cl; dec dword ptr [ebx - 0x4fb73]; jmp dword ptr [ebp - 1]; 
0x001040fe: add byte ptr [eax + 0x9b85b], dl; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x00087674: add byte ptr [eax + 0x9b], bh; call dword ptr gs:[0x10]; 
0x00086876: add byte ptr [eax + 0x9c], bh; call dword ptr gs:[0x10]; 
0x0015a2fe: add byte ptr [eax + 0xa00c7], dl; add byte ptr [eax], al; pop ebx; ret; 
0x00041aae: add byte ptr [eax + 0xa9d231], dl; add byte ptr [eax], dl; add byte ptr [edi], cl; xchg ebp, eax; ret 0xea81; 
0x00037807: add byte ptr [eax + 0xae], bh; call dword ptr gs:[0x10]; 
0x00086a40: add byte ptr [eax + 0xaf], bh; call dword ptr gs:[0x10]; 
0x00091673: add byte ptr [eax + 0xaf], bh; mov dword ptr [esp + 0x24], ecx; mov edx, ecx; mov ecx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0008df04: add byte ptr [eax + 0xaf], bh; mov esi, 8; call dword ptr gs:[0x10]; 
0x0004bc0e: add byte ptr [eax + 0xb8], dl; add byte ptr [ecx + eax*2 - 0x7d], dh; ret; 
0x00126c36: add byte ptr [eax + 0xc24448b], dl; mov edx, dword ptr [edx]; mov dword ptr [eax], edx; mov eax, 1; ret; 
0x00093d9e: add byte ptr [eax + 0xc244c8d], dl; mov eax, 0x105; call dword ptr gs:[0x10]; 
0x00197ab5: add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x000d8d6d: add byte ptr [eax + 0xdc], bh; cmovae esi, ecx; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00088a7f: add byte ptr [eax + 0xe0], bh; call dword ptr gs:[0x10]; 
0x00197a48: add byte ptr [eax + 0xf00067a], al; test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x00197aab: add byte ptr [eax + 0xf000b7a], al; test byte ptr [eax + eax], bh; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x0018b0fe: add byte ptr [eax + 0xf08b60f], dl; mov dh, 2; sub eax, ecx; ret; 
0x000890c8: add byte ptr [eax + 0xf0], bh; mov ebx, ebp; mov ecx, 7; mov esi, edx; call dword ptr gs:[0x10]; 
0x00089bd9: add byte ptr [eax + 0xf0], bh; mov ebx, ebp; mov esi, ecx; call dword ptr gs:[0x10]; 
0x0008abd4: add byte ptr [eax + 0xf0], bh; mov ebx, edi; mov ecx, 7; mov esi, edx; call dword ptr gs:[0x10]; 
0x00091aca: add byte ptr [eax + 0xf0], bh; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00086c77: add byte ptr [eax + 0xf0], bh; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000839c9: add byte ptr [eax + 0xf0], bh; mov ecx, 0x81; xor esi, esi; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x0008b02f: add byte ptr [eax + 0xf0], bh; mov ecx, 8; mov esi, edx; call dword ptr gs:[0x10]; 
0x0008b8b2: add byte ptr [eax + 0xf0], bh; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0008c0bc: add byte ptr [eax + 0xf0], bh; mov edx, 0x7fffffff; setne cl; shl ecx, 7; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x001743ce: add byte ptr [eax + 0xf0], bh; xor esi, esi; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0014a1d6: add byte ptr [eax + 0xf2efa80], dl; xchg esp, eax; ret 0xc083; 
0x000a1afe: add byte ptr [eax + 0xff42c6], dl; mov dword ptr [esi], edx; pop ebx; pop esi; ret; 
0x0018c9ef: add byte ptr [eax + 1], bh; ja 0x18c9f9; neg eax; pop ebp; ret; 
0x00191def: add byte ptr [eax + 1], bh; ja 0x191df9; neg eax; ret; 
0x001920ef: add byte ptr [eax + 1], bh; ja 0x1920f9; neg eax; pop ebp; ret; 
0x000c9ccf: add byte ptr [eax + 1], bh; jg 0xc9cd9; neg eax; ret; 
0x0009a59f: add byte ptr [eax + 1], bh; ret; 
0x000c9edf: add byte ptr [eax + 2], bh; ret; 
0x00087daf: add byte ptr [eax + 3], bh; add esp, 0xc; ret; 
0x00088387: add byte ptr [eax + 3], bh; ret; 
0x00197a0c: add byte ptr [eax + 4], bh; pop edi; ret; 
0x000c9eff: add byte ptr [eax + 4], bh; ret; 
0x000c9f0f: add byte ptr [eax + 5], bh; ret; 
0x000c9f1f: add byte ptr [eax + 6], bh; ret; 
0x0010491c: add byte ptr [eax + 7], 0xf9; inc dword ptr [ecx]; sar dword ptr [esi], 1; jmp ecx; 
0x000c9f2f: add byte ptr [eax + 7], bh; ret; 
0x00197a65: add byte ptr [eax + 8], bh; pop edi; ret; 
0x00087d85: add byte ptr [eax + eax - 0x1f7d0000], 0x10; jne 0x87d98; add esp, 0xc; ret; 
0x000c9f78: add byte ptr [eax + eax], 0x8d; dec eax; add dword ptr [ebp - 0x28], esi; mov eax, ecx; ret; 
0x000fd0e9: add byte ptr [eax + eax], al; add byte ptr [ecx], cl; ret 0x840f; 
0x000f1893: add byte ptr [eax + eax], al; add byte ptr [edi], cl; test dword ptr [edx - 0x7cfffff9], ebp; rol byte ptr [ecx], 0x83; ret 0x3b20; 
0x0013fb2e: add byte ptr [eax + eax], cl; add byte ptr [eax], al; mov dword ptr [eax + 4], 0x29; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0015a2e9: add byte ptr [eax + eax], cl; add byte ptr [eax], al; pop ebx; ret; 
0x0009afe8: add byte ptr [eax + ebp*8 + 0x2e580ff], dh; lea edx, [edx - 0xa02b0]; cmovne eax, edx; ret; 
0x000dfee7: add byte ptr [eax + esi + 0x31], dh; rol byte ptr [ecx - 0x52053106], 0x1b; setne al; ret; 
0x000df3d5: add byte ptr [eax + esi - 0x75], dh; pop esp; and al, 0x30; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x000df475: add byte ptr [eax + esi - 0x75], dh; pop esp; and al, 0x30; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x00151121: add byte ptr [eax - 0x12b7b], cl; call dword ptr [edx - 0x18]; 
0x000705af: add byte ptr [eax - 0x14bff3b2], al; ret 0xb48d; 
0x0008f8e8: add byte ptr [eax - 0x15], al; ret 0x748d; 
0x0008a1e0: add byte ptr [eax - 0x17af0007], 0xd6; push edi; cli; jmp dword ptr [esi - 0x70]; 
0x00195b29: add byte ptr [eax - 0x17af0f0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x0016bc10: add byte ptr [eax - 0x18], dl; imul esi, dword ptr [esi - 0xf], 0x10c483ff; add esp, 8; pop ebx; ret; 
0x00136f88: add byte ptr [eax - 0x18], dl; int1; ret 0xfff4; 
0x0016ba90: add byte ptr [eax - 0x18], dl; jmp 0x8416ac0f; les edx, ptr [eax]; add esp, 8; pop ebx; ret; 
0x00056ab7: add byte ptr [eax - 0x18], dl; ret 0x2c6; 
0x00068c56: add byte ptr [eax - 0x18], dl; ret; 
0x000c9e8e: add byte ptr [eax - 0x1a7f0a78], dl; pcmpeqb mm3, qword ptr [ecx]; add eax, 2; ret; 
0x0007205e: add byte ptr [eax - 0x1a800000], al; add dword ptr [edx + ebp*2 - 0x77], esi; ret; 
0x0007a98e: add byte ptr [eax - 0x1a800000], al; add dword ptr [edx + ebx*2 - 0x77], esi; ret; 
0x0007aec8: add byte ptr [eax - 0x1a800000], al; add dword ptr [esi + edi - 0x77], esi; ret; 
0x000a9c62: add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x00195b3a: add byte ptr [eax - 0x27af0e0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x00198c7e: add byte ptr [eax - 0x2d43f00d], dl; mov eax, 0x20; add eax, edx; ret; 
0x00128ef4: add byte ptr [eax - 0x2f770000], al; ret; 
0x0004e2c5: add byte ptr [eax - 0x363743], al; jmp dword ptr [ebp + 0xf]; 
0x000c9f86: add byte ptr [eax - 0x37763e77], dl; ret; 
0x00195b4b: add byte ptr [eax - 0x37af0c0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf40; 
0x000b933e: add byte ptr [eax - 0x3917a8ab], dl; mov cl, byte ptr [ebx]; add byte ptr [ecx + 0x170cb9c7], al; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x0004bace: add byte ptr [eax - 0x3f7ce775], dl; add al, 0x83; ret 0x8904; 
0x000ed35e: add byte ptr [eax - 0x3f7cef09], dl; add al, 0x39; ret 0xf775; 
0x000edaee: add byte ptr [eax - 0x3f7cf7fd], dl; add al, 0x39; ret 0xf775; 
0x00195f2e: add byte ptr [eax - 0x3fcea1a5], dl; pop edi; ret; 
0x001161cd: add byte ptr [eax - 0x3fcef777], al; pop ebx; ret; 
0x001981d9: add byte ptr [eax - 0x417af0f1], ch; add byte ptr [eax], al; add dh, dh; ret 0xf0f; 
0x0015883e: add byte ptr [eax - 0x47fb3b7d], dl; adc byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x00150156: add byte ptr [eax - 0x47fb3b7d], dl; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x00149806: add byte ptr [eax - 0x48], dl; call ptr [ebx + 0x5e]; pop edi; ret; 
0x001922de: add byte ptr [eax - 0x49f0f18e], dl; add byte ptr [edi], cl; mov dh, 0x12; sub eax, edx; ret; 
0x0002b8be: add byte ptr [eax - 0x4e1f00d], dl; call 0x171e01; add eax, 0x1fe737; mov eax, dword ptr [eax + 0x1014]; ret; 
0x0002172e: add byte ptr [eax - 0x4e1f00d], dl; call 0x171e01; add eax, 0x2088c7; lea eax, [eax - 0x69214]; ret; 
0x000801be: add byte ptr [eax - 0x4e1f00d], dl; mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x0017a96e: add byte ptr [eax - 0x4e1f00d], dl; mov eax, 0xffffffff; ret; 
0x001656be: add byte ptr [eax - 0x4e1f00d], dl; mov eax, 1; ret; 
0x0015a94e: add byte ptr [eax - 0x4e1f00d], dl; mov eax, 2; ret; 
0x0007be7e: add byte ptr [eax - 0x4e1f00d], dl; mov eax, dword ptr [esp + 4]; and dword ptr [eax], 0xffffffcf; ret; 
0x0008010e: add byte ptr [eax - 0x4e1f00d], dl; xor eax, eax; ret; 
0x00059de7: add byte ptr [eax - 0x5af63], cl; jmp dword ptr [ebp - 0x75]; 
0x0019d8d7: add byte ptr [eax - 0x6bdb5377], al; add byte ptr [eax], al; add byte ptr [ecx], cl; ret 0xbc89; 
0x000e6871: add byte ptr [eax - 0x6bf0a305], al; ret 0x5422; 
0x000b3f9e: add byte ptr [eax - 0x723f42f1], dl; inc esp; or byte ptr [eax], ah; ret; 
0x000b3fae: add byte ptr [eax - 0x723f42f1], dl; inc esp; or byte ptr [eax], dh; ret; 
0x000b43ce: add byte ptr [eax - 0x723f43f1], dl; inc esp; adc byte ptr [eax], ah; ret; 
0x000a20f6: add byte ptr [eax - 0x72cd769a], dl; inc edx; add dword ptr [ebx + 0x5e], ebx; ret; 
0x0013bfae: add byte ptr [eax - 0x72f7137d], dl; xchg edi, eax; push esi; pop esp; stc; call dword ptr [edx + 0x50]; 
0x00119b87: add byte ptr [eax - 0x73], dl; adc byte ptr [eax], 0xfb; out dx, al; call dword ptr [eax - 0x73]; 
0x000c79f4: add byte ptr [eax - 0x73], dl; adc byte ptr [ecx + 0x30], 0xf9; call dword ptr [eax - 0x18]; 
0x0012b4b9: add byte ptr [eax - 0x73], dl; adc dword ptr [eax + 0x50000048], -0x73; adc dword ptr [eax], 0x67; bnd call dword ptr [eax - 0x73]; 
0x00137e29: add byte ptr [eax - 0x73], dl; adc dword ptr [eax + 0x50fff262], -0x73; sub dword ptr [ecx], 0x5a; stc; call dword ptr [eax - 0x18]; ret 0x178; 
0x00136bd7: add byte ptr [eax - 0x73], dl; adc dword ptr [eax], 0x62; bnd call dword ptr [eax - 0x73]; 
0x00135557: add byte ptr [eax - 0x73], dl; adc dword ptr [eax], 0x63; bnd call dword ptr [eax - 0x73]; 
0x00135629: add byte ptr [eax - 0x73], dl; adc dword ptr [eax], 0x63; bnd call dword ptr [eax - 0x73]; sbb dword ptr [esi + 0x59], -7; call dword ptr [eax - 0x18]; ret 0x1a0; 
0x000daf00: add byte ptr [eax - 0x73], dl; adc dword ptr [eax], 0x64; bnd call dword ptr [eax - 0x73]; 
0x0012b4c0: add byte ptr [eax - 0x73], dl; adc dword ptr [eax], 0x67; bnd call dword ptr [eax - 0x73]; 
0x001383b7: add byte ptr [eax - 0x73], dl; adc dword ptr [eax], 0x68; bnd call dword ptr [eax - 0x73]; 
0x00024d21: add byte ptr [eax - 0x73], dl; adc esi, 0x2b; stc; call dword ptr [eax - 0x18]; 
0x00152b45: add byte ptr [eax - 0x73], dl; add al, 0x61; stc; call dword ptr [eax - 0x18]; 
0x0014d6a6: add byte ptr [eax - 0x73], dl; add al, 0xab; stc; call dword ptr [eax - 0x18]; 
0x000da8a4: add byte ptr [eax - 0x73], dl; add dword ptr [eax + 0x10], -0x15; call dword ptr [eax - 0x18]; 
0x0007a7b0: add byte ptr [eax - 0x73], dl; add dword ptr [eax + 0x7d], -7; call dword ptr [eax - 0x18]; 
0x00023bb1: add byte ptr [eax - 0x73], dl; add dword ptr [edx + 0x2a], -7; call dword ptr [eax - 0x18]; 
0x00167fef: add byte ptr [eax - 0x73], dl; add dword ptr [esi + 0x62], -7; call dword ptr [eax + 0x6a]; 
0x000e3230: add byte ptr [eax - 0x73], dl; and ah, 0x47; stc; call dword ptr [eax - 0x18]; 
0x000c8cbe: add byte ptr [eax - 0x73], dl; and byte ptr [eax], 0x30; stc; call dword ptr [eax - 0x18]; 
0x000c8d08: add byte ptr [eax - 0x73], dl; and byte ptr [esi + 0x44], 0xf9; call dword ptr [eax - 0x18]; 
0x00135550: add byte ptr [eax - 0x73], dl; and dword ptr [ecx + ecx*2], 0; add byte ptr [eax - 0x73], dl; adc dword ptr [eax], 0x63; bnd call dword ptr [eax - 0x73]; 
0x00076a43: add byte ptr [eax - 0x73], dl; and ebx, 0x3d; stc; call dword ptr [eax - 0x18]; 
0x000ce98b: add byte ptr [eax - 0x73], dl; and esp, 0xffffff98; stc; call dword ptr [eax - 0x18]; 
0x000775ad: add byte ptr [eax - 0x73], dl; cmp bh, 0x3d; stc; call dword ptr [eax - 0x18]; 
0x0014d7d2: add byte ptr [eax - 0x73], dl; cmp byte ptr [eax], 0xac; stc; call dword ptr [eax - 0x18]; 
0x0005934f: add byte ptr [eax - 0x73], dl; cmp byte ptr [edi + 0x31], 0xf9; call dword ptr [eax - 0x18]; 
0x001693d8: add byte ptr [eax - 0x73], dl; cmp dword ptr [esi + 0x65], -7; call dword ptr [eax - 0x18]; 
0x000c2a19: add byte ptr [eax - 0x73], dl; cmp eax, -0x69; stc; call dword ptr [eax - 0x18]; 
0x0015a16c: add byte ptr [eax - 0x73], dl; inc ebx; or al, 0x83; ret; 
0x000c8da1: add byte ptr [eax - 0x73], dl; or ah, 0x74; stc; call dword ptr [eax - 0x18]; 
0x0014d7af: add byte ptr [eax - 0x73], dl; or byte ptr [eax], 0xac; stc; call dword ptr [eax - 0x18]; 
0x0002eab8: add byte ptr [eax - 0x73], dl; or byte ptr [edi], 0x2d; stc; call dword ptr [eax - 0x18]; 
0x0012b4b2: add byte ptr [eax - 0x73], dl; or dword ptr [eax + 0x50000048], 0xffffff8d; adc dword ptr [eax + 0x50000048], -0x73; adc dword ptr [eax], 0x67; bnd call dword ptr [eax - 0x73]; 
0x00024d53: add byte ptr [eax - 0x73], dl; or dword ptr [eax + 0x6f], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x001a0afa: add byte ptr [eax - 0x73], dl; or dword ptr [ebx + 0x2d], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000ce94d: add byte ptr [eax - 0x73], dl; or dword ptr [ebx + 0x45], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00023b87: add byte ptr [eax - 0x73], dl; or dword ptr [edi + 0x2a], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000ce96c: add byte ptr [eax - 0x73], dl; sbb dword ptr [edx + 0x45], -7; call dword ptr [eax - 0x18]; 
0x00091181: add byte ptr [eax - 0x73], dl; sub byte ptr [edi + 0x40], 0xf9; call dword ptr [eax - 0x18]; 
0x00024c90: add byte ptr [eax - 0x73], dl; sub dword ptr [eax], 0x6f; stc; call dword ptr [eax - 0x18]; 
0x00147e53: add byte ptr [eax - 0x73], dl; sub dword ptr [ebx], 0x5f; stc; call dword ptr [eax - 0x18]; 
0x0007a7cf: add byte ptr [eax - 0x73], dl; sub dword ptr [edx + 0x47], -7; call dword ptr [eax - 0x18]; 
0x000fc32b: add byte ptr [eax - 0x73], dl; sub edi, 0x48; stc; call dword ptr [eax - 0x18]; 
0x0002db19: add byte ptr [eax - 0x73], dl; sub esp, 0x2c; stc; call dword ptr [eax - 0x18]; 
0x0008aa28: add byte ptr [eax - 0x73], dl; test dword ptr [eax + eax*4 - 7], edx; call dword ptr [eax - 0x18]; 
0x0007e5b4: add byte ptr [eax - 0x73], dl; test dword ptr [ebx], edi; stc; call dword ptr [eax - 0x18]; 
0x0008ab76: add byte ptr [eax - 0x73], dl; test eax, edi; jg 0x8ab76; call dword ptr [eax - 0x18]; 
0x000c505b: add byte ptr [eax - 0x73], dl; test edi, esi; inc ebx; stc; call dword ptr [eax - 0x18]; 
0x0008a9e4: add byte ptr [eax - 0x73], dl; test edx, edx; aas; stc; call dword ptr [eax - 0x18]; 
0x00056928: add byte ptr [eax - 0x73], dl; xchg ah, ch; jbe 0x56928; call dword ptr [eax - 0x18]; 
0x001018c3: add byte ptr [eax - 0x73], dl; xchg ah, cl; dec ecx; stc; call dword ptr [eax - 0x18]; 
0x0004471c: add byte ptr [eax - 0x73], dl; xchg ah, cl; je 0x4471c; call dword ptr [eax - 0x18]; 
0x00028812: add byte ptr [eax - 0x73], dl; xchg al, ah; outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x0016ab0d: add byte ptr [eax - 0x73], dl; xchg al, al; stc; call dword ptr [eax - 0x18]; 
0x00088f37: add byte ptr [eax - 0x73], dl; xchg al, bh; jg 0x88f37; call dword ptr [eax - 0x18]; 
0x00089c76: add byte ptr [eax - 0x73], dl; xchg al, bh; jg 0x89c76; call dword ptr [eax - 0x18]; 
0x000b6aa3: add byte ptr [eax - 0x73], dl; xchg al, ch; xchg ebp, eax; stc; call dword ptr [eax - 0x18]; 
0x0004473f: add byte ptr [eax - 0x73], dl; xchg al, dh; jne 0x4473f; call dword ptr [eax - 0x18]; 
0x00149e57: add byte ptr [eax - 0x73], dl; xchg al, dh; stosb byte ptr es:[edi], al; stc; call dword ptr [eax - 0x18]; 
0x0014cee3: add byte ptr [eax - 0x73], dl; xchg bl, ah; pop edi; stc; call dword ptr [eax - 0x18]; 
0x00025fe9: add byte ptr [eax - 0x73], dl; xchg byte ptr [eax + 0x6f], cl; stc; call dword ptr [eax - 0x18]; 
0x00088fca: add byte ptr [eax - 0x73], dl; xchg byte ptr [eax + eax*4 - 7], dl; call dword ptr [eax - 0x18]; 
0x00044620: add byte ptr [eax - 0x73], dl; xchg byte ptr [eax + esi - 7], bh; call dword ptr [eax - 0x18]; 
0x00029d04: add byte ptr [eax - 0x73], dl; xchg byte ptr [eax + esi*2 - 7], dl; call dword ptr [eax - 0x18]; 
0x00029d27: add byte ptr [eax - 0x73], dl; xchg byte ptr [eax + esi*2], ch; stc; call dword ptr [eax - 0x18]; 
0x00044785: add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], al; jne 0x44785; call dword ptr [eax - 0x18]; 
0x000ff21f: add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], al; sahf; stc; call dword ptr [eax - 0x18]; 
0x00044859: add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], bh; jbe 0x44859; call dword ptr [eax - 0x18]; 
0x00025ef8: add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], ch; outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x000287c6: add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], cl; jo 0x287c6; call dword ptr [eax - 0x18]; 
0x00029d4a: add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], cl; jo 0x29d4a; call dword ptr [eax - 0x18]; 
0x0002b152: add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], cl; jo 0x2b152; call dword ptr [eax - 0x18]; 
0x00087ca3: add byte ptr [eax - 0x73], dl; xchg byte ptr [ebx + 0x3f], al; stc; call dword ptr [eax - 0x18]; 
0x00087c4e: add byte ptr [eax - 0x73], dl; xchg byte ptr [ecx], ch; aas; stc; call dword ptr [eax - 0x18]; 
0x00087c70: add byte ptr [eax - 0x73], dl; xchg byte ptr [edi + 0x3f], bl; stc; call dword ptr [eax - 0x18]; 
0x00087b6e: add byte ptr [eax - 0x73], dl; xchg byte ptr [edi + edi*2], ch; stc; call dword ptr [eax - 0x18]; 
0x0013f91b: add byte ptr [eax - 0x73], dl; xchg byte ptr [edi - 7], bl; call dword ptr [eax - 0x18]; 
0x00087b90: add byte ptr [eax - 0x73], dl; xchg byte ptr [edx + 0x47], ch; stc; call dword ptr [eax - 0x18]; 
0x000feb87: add byte ptr [eax - 0x73], dl; xchg byte ptr [edx + 0x49], ch; stc; call dword ptr [eax - 0x18]; 
0x0013bb8f: add byte ptr [eax - 0x73], dl; xchg byte ptr [edx], bh; pop esp; stc; call dword ptr [eax - 0x39]; 
0x00044813: add byte ptr [eax - 0x73], dl; xchg byte ptr [esi + 0x30], ah; stc; call dword ptr [eax - 0x18]; 
0x00023785: add byte ptr [eax - 0x73], dl; xchg byte ptr [esi], cl; sub bh, cl; call dword ptr [eax - 0x18]; 
0x00028785: add byte ptr [eax - 0x73], dl; xchg byte ptr [esp + ebp], bl; stc; call dword ptr [eax - 0x18]; 
0x00169458: add byte ptr [eax - 0x73], dl; xchg ch, ah; popal; stc; call dword ptr [eax + 0x6a]; 
0x00086d30: add byte ptr [eax - 0x73], dl; xchg dh, bh; stc; call dword ptr [eax - 0x18]; 
0x0002602f: add byte ptr [eax - 0x73], dl; xchg dh, dh; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x00025f8d: add byte ptr [eax - 0x73], dl; xchg dh, dl; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x0002acef: add byte ptr [eax - 0x73], dl; xchg dh, dl; sub edi, ecx; call dword ptr [eax - 0x18]; ret; 
0x00026547: add byte ptr [eax - 0x73], dl; xchg dl, al; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x000891b4: add byte ptr [eax - 0x73], dl; xchg dl, dl; aas; stc; call dword ptr [eax - 0x18]; 
0x00025408: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + 0x6f], ecx; stc; call dword ptr [eax - 0x18]; 
0x00041430: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + esi - 7], edi; call dword ptr [eax - 0x18]; 
0x00026f33: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + esi*2 - 7], edx; call dword ptr [eax - 0x18]; 
0x00026f56: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + esi*2], ebp; stc; call dword ptr [eax - 0x18]; 
0x000fc279: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax - 0x63], esp; stc; call dword ptr [eax - 0x18]; 
0x000413ea: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], eax; jne 0x413ea; call dword ptr [eax - 0x18]; 
0x000478f0: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], eax; jne 0x478f0; call dword ptr [eax - 0x18]; 
0x000478f0: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], eax; jne 0x478f0; call dword ptr [eax - 0x18]; ret 0xfe80; 
0x000511ae: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], eax; jne 0x511ae; call dword ptr [eax - 0x18]; 
0x000bba58: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], eax; jne 0xbba58; call dword ptr [eax - 0x18]; 
0x000c15db: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], eax; jne 0xc15db; call dword ptr [eax - 0x18]; 
0x000c8c05: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], eax; jne 0xc8c05; call dword ptr [eax - 0x18]; 
0x0002530f: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ebp; outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x00103889: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ebx; dec edx; stc; call dword ptr [eax - 0x18]; 
0x00026f79: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ecx; jo 0x26f79; call dword ptr [eax - 0x18]; 
0x00027c80: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ecx; jo 0x27c80; call dword ptr [eax - 0x18]; 
0x0004140d: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], edi; jbe 0x4140d; call dword ptr [eax - 0x18]; 
0x00047913: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], edi; jbe 0x47913; call dword ptr [eax - 0x18]; 
0x0005111a: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], edi; jbe 0x5111a; call dword ptr [eax - 0x18]; 
0x000bbac1: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], edi; jbe 0xbbac1; call dword ptr [eax - 0x18]; 
0x000be988: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], edi; jbe 0xbe988; call dword ptr [eax - 0x18]; 
0x000c15fe: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], edi; jbe 0xc15fe; call dword ptr [eax - 0x18]; 
0x000415c9: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], esp; xor cl, bh; call dword ptr [eax - 0x18]; 
0x0008795a: add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + 0x3f], eax; stc; call dword ptr [eax - 0x18]; 
0x00087c0a: add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + 0x3f], edx; stc; call dword ptr [eax - 0x18]; 
0x0014ddb0: add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + 0x60], edx; stc; call dword ptr [eax - 0x18]; 
0x000912c5: add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + eax*4 - 7], ecx; call dword ptr [eax - 0x18]; 
0x0014d25e: add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + ebp*4 - 7], ebp; call dword ptr [eax - 0x18]; 
0x0014b2c2: add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + ebp*4], edi; stc; call dword ptr [eax - 0x18]; 
0x0004087e: add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx + 0x30], edx; stc; call dword ptr [eax - 0x18]; 
0x00041476: add byte ptr [eax - 0x73], dl; xchg dword ptr [edi], ecx; xor cl, bh; call dword ptr [eax - 0x18]; 
0x0012e604: add byte ptr [eax - 0x73], dl; xchg dword ptr [edi], esi; push edi; stc; call dword ptr [eax - 0x18]; 
0x00167918: add byte ptr [eax - 0x73], dl; xchg dword ptr [edx + 0x31fff962], ebx; call dword ptr [eax + 0x6a]; 
0x0014ddcf: add byte ptr [eax - 0x73], dl; xchg dword ptr [edx + 0x60], esp; stc; call dword ptr [eax - 0x18]; 
0x0004152f: add byte ptr [eax - 0x73], dl; xchg dword ptr [edx], ebp; xor cl, bh; call dword ptr [eax - 0x18]; 
0x000414cf: add byte ptr [eax - 0x73], dl; xchg dword ptr [esi + 0x30], esp; stc; call dword ptr [eax - 0x18]; 
0x000c4b6a: add byte ptr [eax - 0x73], dl; xchg dword ptr [esi + 0x44], ecx; stc; call dword ptr [eax - 0x18]; 
0x000bbc49: add byte ptr [eax - 0x73], dl; xchg dword ptr [esi + 0x44], esp; stc; call dword ptr [eax - 0x18]; 
0x00103ab5: add byte ptr [eax - 0x73], dl; xchg dword ptr [esi], ebp; dec edx; stc; call dword ptr [eax - 0x18]; 
0x00087bb2: add byte ptr [eax - 0x73], dl; xchg dword ptr [esi], ecx; aas; stc; call dword ptr [eax - 0x18]; 
0x000c4a2a: add byte ptr [eax - 0x73], dl; xchg eax, ebp; xchg ebp, eax; stc; call dword ptr [eax - 0x18]; 
0x000fc29b: add byte ptr [eax - 0x73], dl; xchg eax, ebx; popfd; stc; call dword ptr [eax - 0x18]; 
0x000fc213: add byte ptr [eax - 0x73], dl; xchg eax, ebx; pushfd; stc; call dword ptr [eax - 0x18]; 
0x0002d869: add byte ptr [eax - 0x73], dl; xchg eax, ecx; sub al, 0xf9; call dword ptr [eax - 0x18]; 
0x0014d2a4: add byte ptr [eax - 0x73], dl; xchg eax, edi; pop edi; stc; call dword ptr [eax - 0x18]; 
0x00041575: add byte ptr [eax - 0x73], dl; xchg eax, esi; jne 0x41575; call dword ptr [eax - 0x18]; 
0x00047811: add byte ptr [eax - 0x73], dl; xchg eax, esi; jne 0x47811; call dword ptr [eax - 0x18]; 
0x0005113f: add byte ptr [eax - 0x73], dl; xchg eax, esi; jne 0x5113f; call dword ptr [eax - 0x18]; 
0x000bbb9a: add byte ptr [eax - 0x73], dl; xchg eax, esi; jne 0xbbb9a; call dword ptr [eax - 0x18]; 
0x000be869: add byte ptr [eax - 0x73], dl; xchg eax, esi; jne 0xbe869; call dword ptr [eax - 0x18]; 
0x000c1670: add byte ptr [eax - 0x73], dl; xchg eax, esi; jne 0xc1670; call dword ptr [eax - 0x18]; 
0x00026fe2: add byte ptr [eax - 0x73], dl; xchg eax, esp; outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x00155265: add byte ptr [eax - 0x73], dl; xchg eax, esp; scasb al, byte ptr es:[edi]; stc; call dword ptr [eax - 0x18]; 
0x001028c4: add byte ptr [eax - 0x73], dl; xchg ebp, esp; dec ecx; stc; call dword ptr [eax - 0x18]; 
0x0008b446: add byte ptr [eax - 0x73], dl; xchg ebx, ecx; aas; stc; call dword ptr [eax - 0x18]; 
0x00041453: add byte ptr [eax - 0x73], dl; xchg ecx, esi; das; stc; call dword ptr [eax - 0x18]; 
0x000c4b8d: add byte ptr [eax - 0x73], dl; xchg edi, esi; inc ebx; stc; call dword ptr [eax - 0x18]; 
0x0008b465: add byte ptr [eax - 0x73], dl; xchg edx, edx; aas; stc; call dword ptr [eax - 0x18]; 
0x000253c6: add byte ptr [eax - 0x73], dl; xchg esi, edx; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x0004160f: add byte ptr [eax - 0x73], dl; xchg esp, ecx; je 0x4160f; call dword ptr [eax - 0x18]; 
0x000477ee: add byte ptr [eax - 0x73], dl; xchg esp, ecx; je 0x477ee; call dword ptr [eax - 0x18]; 
0x0005104d: add byte ptr [eax - 0x73], dl; xchg esp, ecx; je 0x5104d; call dword ptr [eax - 0x18]; 
0x000bbb0e: add byte ptr [eax - 0x73], dl; xchg esp, ecx; je 0xbbb0e; call dword ptr [eax - 0x18]; 
0x000c16bd: add byte ptr [eax - 0x73], dl; xchg esp, ecx; je 0xc16bd; call dword ptr [eax - 0x18]; 
0x000e58df: add byte ptr [eax - 0x73], dl; xchg esp, esp; inc edi; stc; call dword ptr [eax - 0x18]; 
0x00151523: add byte ptr [eax - 0x73], dl; xor byte ptr [ecx], 0x61; stc; call dword ptr [eax - 0x18]; 
0x0002ea6b: add byte ptr [eax - 0x73], dl; xor byte ptr [edx], 0x2d; stc; call dword ptr [eax - 0x18]; 
0x00129464: add byte ptr [eax - 0x73], dl; xor dword ptr [eax], 0xfffffff0; call dword ptr [eax - 0x18]; 
0x00023bd5: add byte ptr [eax - 0x73], dl; xor dword ptr [ebx], 0x2a; stc; call dword ptr [eax - 0x18]; 
0x0011f5b6: add byte ptr [eax - 0x74bbbf75], dl; dec esp; and al, 8; mov dword ptr [ecx], eax; mov eax, 1; ret; 
0x0016ea96: add byte ptr [eax - 0x74f7137d], dl; and dword ptr [eax + 0x51000003], 0x52; call dword ptr [eax + 0x24]; 
0x00104b3e: add byte ptr [eax - 0x74fbac75], dl; inc ebx; or byte ptr [ecx], bh; ret 0x840f; 
0x0012fe5e: add byte ptr [eax - 0x74fe3f7d], dl; dec edx; add al, 0x83; ret 0x8518; 
0x000cb7b4: add byte ptr [eax - 0x75], dl; inc esp; and al, 0x5c; call eax; 
0x0007af2e: add byte ptr [eax - 0x76b7b175], dl; ret; 
0x0016b1be: add byte ptr [eax - 0x76efbd75], dl; ret 0xf839; 
0x000f01de: add byte ptr [eax - 0x76f3137d], dl; ret 0xe989; 
0x0008c94e: add byte ptr [eax - 0x76ffba75], dl; ret 0xe283; 
0x0011fe79: add byte ptr [eax - 0x77000000], 0x56; add al, 0x8d; xchg ebx, eax; ret 0xf94d; 
0x00171f8e: add byte ptr [eax - 0x77c2dcf], dl; dec dword ptr [edi]; xchg esp, eax; ret 0x1389; 
0x000ed32e: add byte ptr [eax - 0x7a2641f1], dl; fisttp dword ptr [ebp + 0x490f1f43]; ret; 
0x000e6d0c: add byte ptr [eax - 0x7af0d107], al; cmp bl, 0xff; jmp dword ptr [ebp - 0x5f]; 
0x00196c4e: add byte ptr [eax - 0x7bdfb673], dl; in al, 0xf; test dword ptr [ebp - 0x78000000], eax; ret 0xe280; 
0x000fc456: add byte ptr [eax - 0x7bf02d7c], dl; nop; add al, 0; add byte ptr [edi], cl; mov esi, 0x83df89ca; ret; 
0x0005ef9e: add byte ptr [eax - 0x7bf03f7b], dl; mov al, byte ptr [0x2bffffb6]; test dword ptr [eax - 0x7c000005], edi; in al, dx; or al, 0x89; ret; 
0x000e6868: add byte ptr [eax - 0x7bf0a205], al; add al, 0; add byte ptr [eax - 0x6bf0a305], al; ret 0x5422; 
0x00148a3b: add byte ptr [eax - 0x7bf0ffc2], al; ret; 
0x00091fae: add byte ptr [eax - 0x7c00bc73], dl; ljmp 0x8956:0x7edb8510; ret; 
0x000c4a06: add byte ptr [eax - 0x7c03af73], dl; cli; add ecx, dword ptr [edi]; xchg esi, eax; ret 0xd284; 
0x0008c01f: add byte ptr [eax - 0x7c308bfc], ch; in al, dx; or al, 0x31; rol byte ptr [eax + 0xf00197d], cl; xchg ebp, eax; ret 0xe2c1; 
0x0004930e: add byte ptr [eax - 0x7c40fb73], dl; ret; 
0x001241ee: add byte ptr [eax - 0x7c76f373], dl; ret 0x8d01; 
0x0004f6be: add byte ptr [eax - 0x7ccf157d], dl; cli; or dword ptr [edi], ecx; xchg edi, eax; ret 0xd284; 
0x001918be: add byte ptr [eax - 0x7cf73f7d], dl; ret 0x8308; 
0x0018b16e: add byte ptr [eax - 0x7cf73f7d], dl; ret 0xf608; 
0x00154686: add byte ptr [eax - 0x7cfbbc75], dl; ret; 
0x0017184e: add byte ptr [eax - 0x7cfd49f1], dl; ret 0x8801; 
0x000a264e: add byte ptr [eax - 0x7cfe49f1], dl; rol dword ptr [ecx], 0x83; ret 0xf01; 
0x00142306: add byte ptr [eax - 0x7cfffc3a], dl; les ecx, ptr [eax]; pop ebx; ret; 
0x0009bf67: add byte ptr [eax - 0x7f001757], 0xe5; add cl, byte ptr [ebp - 0x95fdf6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0002e8ee: add byte ptr [eax - 0x7f72fff8], al; adc al, 0x72; stc; call dword ptr [eax - 0x18]; 
0x0010aefe: add byte ptr [eax - 0x887a418], dl; dec dword ptr [ebx - 0x76dfdba4]; ret 0x6b8; 
0x0006774f: add byte ptr [eax - 0x89843], al; jmp dword ptr [eax]; 
0x0006c667: add byte ptr [eax - 0x8bc43], al; jmp dword ptr [eax]; 
0x00118d7e: add byte ptr [eax - 0x9662418], dl; dec dword ptr [ebx - 0x76dfdba4]; ret 0x76b8; 
0x00118e5e: add byte ptr [eax - 0x9670418], dl; dec dword ptr [ebx - 0x76dfdba4]; ret 0x94b8; 
0x00132d26: add byte ptr [eax - 0xabc18], dl; jmp dword ptr [esi - 0x70]; 
0x00132f36: add byte ptr [eax - 0xccc18], dl; jmp dword ptr [esi - 0x70]; 
0x00052d3d: add byte ptr [eax - 0xcf43], al; jmp dword ptr [esi + 0xf]; 
0x00132f7e: add byte ptr [eax - 0xd1418], dl; jmp dword ptr [esi - 0x70]; 
0x00132fde: add byte ptr [eax - 0xd7418], dl; jmp dword ptr [esi - 0x70]; 
0x00035fa0: add byte ptr [eax - 0xdb], al; jg 0x35fb1; ror byte ptr [ecx - 0x22f7dbbc], 1; inc esp; and al, 4; ret; 
0x000362e0: add byte ptr [eax - 0xdb], al; jg 0x362f1; ror byte ptr [ecx - 0x26fbdbbc], 1; inc esp; and al, 4; ret; 
0x0008e9cf: add byte ptr [eax - 0xf477e0f], al; add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x0002166e: add byte ptr [eax - 0xfb137d], dl; je 0x2169a; or al, 0x56; push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x00022113: add byte ptr [eax - 1], bh; add esp, 0xc; ret; 
0x00147368: add byte ptr [eax - 1], bh; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x1473bc; add esp, 0x1c; ret; 
0x0003bd83: add byte ptr [eax - 1], bh; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00116263: add byte ptr [eax - 1], bh; pop ebx; pop esi; pop edi; ret; 
0x00037753: add byte ptr [eax - 1], bh; pop ebx; pop esi; ret; 
0x0003764b: add byte ptr [eax - 1], bh; pop ebx; ret; 
0x000376f3: add byte ptr [eax - 1], bh; ret; 
0x0002262b: add byte ptr [eax - 1], dl; jae 0x22634; call esi; 
0x0002672f: add byte ptr [eax - 1], dl; je 0x26758; push esp; push dword ptr [esp + 0x54]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00027238: add byte ptr [eax - 1], dl; je 0x27261; pop esp; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x00027f00: add byte ptr [eax - 1], dl; je 0x27f29; insb byte ptr es:[edi], dx; push dword ptr [esp + 0x6c]; call esi; 
0x00029490: add byte ptr [eax - 1], dl; je 0x294b9; push dword ptr fs:[esp + 0x64]; call edi; 
0x0002a888: add byte ptr [eax - 1], dl; je 0x2a8b1; push dword ptr fs:[esp + 0x64]; call edi; 
0x0002b5eb: add byte ptr [eax - 1], dl; je 0x2b614; push eax; push dword ptr [esp + 0x50]; call esi; 
0x0003a99a: add byte ptr [eax - 1], dl; je 0x3a9c3; sbb al, 0xe8; imul edi, eax, -1; jmp dword ptr [esi - 0x70]; 
0x000e5c2d: add byte ptr [eax - 7], cl; call dword ptr [eax - 0x18]; 
0x0017ab32: add byte ptr [eax], 0; add al, ch; mov esi, 0x81ffff72; ret; 
0x000b6aa0: add byte ptr [eax], 0; add byte ptr [eax - 0x73], dl; xchg al, ch; xchg ebp, eax; stc; call dword ptr [eax - 0x18]; 
0x0002948d: add byte ptr [eax], 0; add byte ptr [eax - 1], dl; je 0x294b9; push dword ptr fs:[esp + 0x64]; call edi; 
0x0002a885: add byte ptr [eax], 0; add byte ptr [eax - 1], dl; je 0x2a8b1; push dword ptr fs:[esp + 0x64]; call edi; 
0x001516c3: add byte ptr [eax], 0; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x0007ff03: add byte ptr [eax], 0; add byte ptr [ebx - 0x3f7acbc0], cl; jne 0x7ff00; ret; 
0x000828ba: add byte ptr [eax], 0; add byte ptr [ebx - 0x5d9adbc0], cl; inc byte ptr [eax + eax]; add byte ptr [ebx + 0x47401f8], al; ret; 
0x0011fe7a: add byte ptr [eax], 0; add byte ptr [ecx - 0x6c72fbaa], cl; ret 0xf94d; 
0x000827e7: add byte ptr [eax], 0; add byte ptr [ecx - 0x749ae3b0], cl; adc eax, 0x7c; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x80], eax; ret; 
0x000eac38: add byte ptr [eax], 0; add byte ptr [edi], cl; inc ebp; ret 0x5e5b; 
0x001408ac: add byte ptr [eax], 0; add byte ptr [edi], cl; inc edx; ret 0x8dc3; 
0x000831af: add byte ptr [eax], 0; add byte ptr [edx + 2], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x0019c3fc: add byte ptr [eax], 0; add cl, ch; dec edx; idiv edi; jmp dword ptr [esi - 0x70]; 
0x0019dbfd: add byte ptr [eax], 0; add dh, dh; ret 0x7407; 
0x0019d10d: add byte ptr [eax], 0; add dh, dh; ret; 
0x00035c0f: add byte ptr [eax], 0; and eax, 0x7fff; or eax, edx; mov dword ptr [esp + 0xc], eax; fld xword ptr [esp + 4]; ret; 
0x001516b2: add byte ptr [eax], 0; das; je 0x15171c; mov byte ptr [ebx + 0x8258], 0; mov dword ptr [ebx + 0x8248], 0; call esi; 
0x00128ef5: add byte ptr [eax], 0; mov eax, edx; ret; 
0x0011af00: add byte ptr [eax], 0; mov edx, 1; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0011932b: add byte ptr [eax], 0; push 0; push dword ptr [esp + 0x1c]; call 0x58600; add esp, 0x1c; ret; 
0x0002fbb8: add byte ptr [eax], 0; ret; 
0x0009bf97: add byte ptr [eax], 0x2f; cmc; dec dword ptr [ebx + 0x18499]; add dh, dh; ret; 
0x0005934c: add byte ptr [eax], 0x41; add byte ptr [eax - 0x73], dl; cmp byte ptr [edi + 0x31], 0xf9; call dword ptr [eax - 0x18]; 
0x001703c7: add byte ptr [eax], 0x53; hlt; jmp dword ptr [esi - 9]; 
0x0011ec57: add byte ptr [eax], 0xa1; stc; jmp dword ptr [ebp - 0x75]; 
0x0009afe7: add byte ptr [eax], 0xb4; call 0x2ef30ee; lea edx, [edx - 0xa02b0]; cmovne eax, edx; ret; 
0x000b756c: add byte ptr [eax], ah; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00129074: add byte ptr [eax], ah; add byte ptr [eax], al; mov eax, edx; ret; 
0x0002fc47: add byte ptr [eax], ah; add byte ptr [eax], al; ret; 
0x0009b3ae: add byte ptr [eax], al; add al, 0x8d; xchg edx, eax; add byte ptr [esi + 0x440fffe7], 0xc2; ret; 
0x0009db9e: add byte ptr [eax], al; add al, 0x8d; xchg edx, eax; shl byte ptr [ecx + 0x440fffe8], 1; ret 0x66c3; 
0x0009b3e4: add byte ptr [eax], al; add al, 0xf; inc ebp; ret 0x66c3; 
0x000f7129: add byte ptr [eax], al; add al, al; call 0xfe1f634; xchg esp, eax; ret 0xd020; 
0x00133a98: add byte ptr [eax], al; add al, al; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x00133b57: add byte ptr [eax], al; add al, al; shr edx, 0x10; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x0014ba64: add byte ptr [eax], al; add al, byte ptr [eax]; add byte ptr [edi], cl; lahf; ret 0xd009; 
0x0008da35: add byte ptr [eax], al; add al, ch; add dword ptr [esi], 0; add byte ptr [ebx - 0x2776f73c], al; pop ebx; ret; 
0x0016be09: add byte ptr [eax], al; add al, ch; call 0x8116be71; ret; 
0x0006e60f: add byte ptr [eax], al; add al, ch; cdq; ret 0xffff; 
0x00109a10: add byte ptr [eax], al; add al, ch; cwde; ret 0; 
0x0015ace6: add byte ptr [eax], al; add al, ch; jb 0x15ace3; in eax, dx; jmp dword ptr [esi - 0x70]; 
0x0016bb39: add byte ptr [eax], al; add al, ch; mov eax, 0x81000062; ret; 
0x0016ba39: add byte ptr [eax], al; add al, ch; mov eax, 0x81000063; ret; 
0x0017ab33: add byte ptr [eax], al; add al, ch; mov esi, 0x81ffff72; ret; 
0x00161e9c: add byte ptr [eax], al; add al, ch; mov esp, 0xe8ffed85; inc edi; sbb edi, ebp; jmp dword ptr [esi - 0x70]; 
0x000f359a: add byte ptr [eax], al; add al, ch; push cs; ret 0xffff; 
0x00172986: add byte ptr [eax], al; add al, ch; ret 0xead7; 
0x000de1a6: add byte ptr [eax], al; add al, ch; ret 0xfb4d; 
0x000760c5: add byte ptr [eax], al; add al, ch; ret; 
0x001339e5: add byte ptr [eax], al; add al, ch; sub eax, -1; jmp dword ptr [esi - 0x70]; 
0x001334e5: add byte ptr [eax], al; add al, ch; sub ebp, -1; jmp dword ptr [esi - 0x70]; 
0x00080fb5: add byte ptr [eax], al; add bh, al; and byte ptr [eax + 0x19], 0; add byte ptr [eax], al; mov dword ptr [eax + 0x19a4], 0; ret; 
0x00151852: add byte ptr [eax], al; add bh, al; or dword ptr [eax + 0x51], 0; add byte ptr [eax], al; call esi; 
0x00151636: add byte ptr [eax], al; add bh, al; or dword ptr [eax + 0x92], 0; add byte ptr [eax], al; call esi; 
0x0006ccf6: add byte ptr [eax], al; add bh, al; test dword ptr [eax], edi; idiv edi; call dword ptr [eax]; 
0x0015db53: add byte ptr [eax], al; add bh, bh; je 0x15db7d; sub al, 0x56; call dword ptr [eax + 0xc]; 
0x00163b0e: add byte ptr [eax], al; add bh, bh; je 0x163b38; sbb al, 0x53; call eax; 
0x0011cac9: add byte ptr [eax], al; add bh, bl; jmp 0x9a21a3af; ror byte ptr [edi], 0x45; ret 0xc084; 
0x0011d0a9: add byte ptr [eax], al; add bh, bl; jmp 0x9a21a98f; ror byte ptr [edi], 0x45; ret 0xc084; 
0x00098f5f: add byte ptr [eax], al; add bh, dh; fadd dword ptr [ebp + 0xbad2]; lock dec dword ptr [edi]; inc esp; ret 0x568d; 
0x00094d77: add byte ptr [eax], al; add bh, dh; fadd dword ptr [ebp + 0xbad2]; lock dec dword ptr [edi]; inc esp; ret 0xd231; 
0x0009956c: add byte ptr [eax], al; add bh, dh; fadd dword ptr [ebp + 0xbad2]; lock dec dword ptr [edi]; inc esp; ret 0xe821; 
0x000b42c3: add byte ptr [eax], al; add bh, dh; ret 0x3f; 
0x00060859: add byte ptr [eax], al; add bl, ch; adc eax, 0xec839066; or al, 0x83; ret; 
0x00159572: add byte ptr [eax], al; add bl, ch; fucomi st(0); je 0x15951e; std; jmp dword ptr [esi - 0x70]; 
0x0016d294: add byte ptr [eax], al; add bl, ch; fucomi st(0); push edx; cld; jmp dword ptr [esi - 0x70]; 
0x0015bf82: add byte ptr [eax], al; add bl, ch; fucomp st(0); jp 0x15bf88; jmp dword ptr [esi - 0x70]; 
0x0016d214: add byte ptr [eax], al; add bl, ch; jecxz 0x16d202; shl byte ptr [edi - 4], cl; jmp dword ptr [esi - 0x70]; 
0x00145e05: add byte ptr [eax], al; add bl, ch; lds ecx, ptr [ebx - 0x1337b]; jmp dword ptr [ebp - 0x75]; 
0x0013fac8: add byte ptr [eax], al; add bl, ch; mov dword ptr [ebp - 0x6581f7a], ecx; call dword ptr [eax - 0x73]; 
0x00092670: add byte ptr [eax], al; add bl, ch; mov esi, 0x8d88758b; xchg byte ptr [eax - 0x7c], ah; stc; call dword ptr [eax + 0x68]; 
0x00134709: add byte ptr [eax], al; add bl, ch; ret 0x9066; 
0x00134951: add byte ptr [eax], al; add bl, ch; ret 0xb48d; 
0x000de961: add byte ptr [eax], al; add bl, ch; ret; 
0x0015d87a: add byte ptr [eax], al; add byte ptr [0xac], al; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x001962c8: add byte ptr [eax], al; add byte ptr [0xff], ah; jne 0x196100; xor eax, eax; pop edi; ret; 
0x001962ff: add byte ptr [eax], al; add byte ptr [0xfff], ah; jne 0x196100; xor eax, eax; pop edi; ret; 
0x00196338: add byte ptr [eax], al; add byte ptr [0xffff], ah; jne 0x196100; xor eax, eax; pop edi; ret; 
0x00108664: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x108678; pop ebx; pop esi; ret; 
0x001096f7: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x109708; pop ebx; pop esi; ret; 
0x00109757: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x109768; pop ebx; pop esi; ret; 
0x0010a491: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x10a4a0; pop ebx; ret; 
0x0010b02f: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x10b040; pop ebx; ret; 
0x00115a1d: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x115a30; pop ebx; ret; 
0x00115dd6: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x115de8; pop ebx; pop esi; ret; 
0x00115e96: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x115ea8; pop ebx; pop esi; ret; 
0x00116911: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x116920; pop ebx; ret; 
0x00116961: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x116970; pop ebx; ret; 
0x00117226: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x117238; pop ebx; pop esi; ret; 
0x00118f38: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x118f48; pop ebx; pop esi; ret; 
0x0011a7f1: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x11a800; pop ebx; ret; 
0x0011a841: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x11a850; pop ebx; ret; 
0x0011a896: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x11a8a8; pop ebx; pop esi; ret; 
0x0011a8f6: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x11a908; pop ebx; pop esi; ret; 
0x0011ea59: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x11ea68; pop ebx; ret; 
0x00121361: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x121370; pop ebx; ret; 
0x00122ff1: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x123000; pop ebx; ret; 
0x00123041: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x123050; pop ebx; ret; 
0x00123091: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x1230a0; pop ebx; ret; 
0x001780b7: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x1780c8; pop ebx; pop esi; ret; 
0x00037992: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x379a0; pop ebx; ret; 
0x00058a21: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x58a30; pop ebx; ret; 
0x00092c5d: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x92c70; pop ebx; ret; 
0x00093306: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x93318; pop ebx; pop esi; ret; 
0x000938f5: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x93908; pop ebx; ret; 
0x00093ce5: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x93cf8; pop ebx; ret; 
0x000cc07f: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0xcc090; pop ebx; ret; 
0x000d8f30: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0xd8f40; pop ebx; pop esi; ret; 
0x000ddcf6: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0xddd40; add esp, 0x18; pop ebx; ret; 
0x000de416: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0xde440; hlt; mov eax, ecx; call dword ptr gs:[0x10]; 
0x000fb386: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0xfb398; pop ebx; pop esi; ret; 
0x000df69d: add byte ptr [eax], al; add byte ptr [0xfffff001], bh; jae 0x216d0; ret; 
0x000d772e: add byte ptr [eax], al; add byte ptr [eax + 0x10b], bh; mov ecx, dword ptr [esp + 0x74]; mov edx, edi; call dword ptr gs:[0x10]; 
0x00092fca: add byte ptr [eax], al; add byte ptr [eax + 0x119], bh; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x001230ff: add byte ptr [eax], al; add byte ptr [eax + 0x12c], bh; call dword ptr gs:[0x10]; 
0x00109adb: add byte ptr [eax], al; add byte ptr [eax + 0x132], bh; call dword ptr gs:[0x10]; 
0x0010a7bc: add byte ptr [eax], al; add byte ptr [eax + 0x133], bh; call dword ptr gs:[0x10]; 
0x00084751: add byte ptr [eax], al; add byte ptr [eax + 0x16], bh; cmove eax, edx; ret; 
0x00174355: add byte ptr [eax], al; add byte ptr [eax + 0x16], bh; pop ebx; ret; 
0x0008bc95: add byte ptr [eax], al; add byte ptr [eax + 0x16], bh; ret; 
0x00198c4c: add byte ptr [eax], al; add byte ptr [eax + 0x16f0ff3], dl; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000d7434: add byte ptr [eax], al; add byte ptr [eax + 0x194], bh; call dword ptr gs:[0x10]; 
0x000d76b8: add byte ptr [eax], al; add byte ptr [eax + 0x197], bh; mov ecx, dword ptr [esp + 0x74]; mov edx, ebp; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0008305a: add byte ptr [eax], al; add byte ptr [eax + 0x1a6], bh; xor edx, edx; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000b317d: add byte ptr [eax], al; add byte ptr [eax + 0x24448b38], cl; or al, 0x5b; pop esi; ret; 
0x0012c465: add byte ptr [eax], al; add byte ptr [eax + 0x29], dl; ret 0x838d; 
0x000c379c: add byte ptr [eax], al; add byte ptr [eax + 0x3901c083], dl; ret; 
0x00083acc: add byte ptr [eax], al; add byte ptr [eax + 0x39a0478d], dl; ret; 
0x0015bf7c: add byte ptr [eax], al; add byte ptr [eax + 0x3b8], dl; add bl, ch; fucomp st(0); jp 0x15bf88; jmp dword ptr [esi - 0x70]; 
0x00192b5c: add byte ptr [eax], al; add byte ptr [eax + 0x486f0ff3], dl; ret 0xff3; 
0x0009a5cc: add byte ptr [eax], al; add byte ptr [eax + 0x5008ec83], dl; push dword ptr [ebx + 0x24]; call edx; 
0x0015f86c: add byte ptr [eax], al; add byte ptr [eax + 0x560cec83], dl; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x000f226c: add byte ptr [eax], al; add byte ptr [eax + 0x568bd689], dl; or byte ptr [ebp + 0x390474d2], al; ret 0x2b75; 
0x0019310c: add byte ptr [eax], al; add byte ptr [eax + 0x5b5fc031], dl; ret; 
0x000b82da: add byte ptr [eax], al; add byte ptr [eax + 0x5d5f5e5b], al; ret; 
0x00197afc: add byte ptr [eax], al; add byte ptr [eax + 0x5f01c083], dl; ret; 
0x00124f39: add byte ptr [eax], al; add byte ptr [eax + 0x66], bh; mov ebx, 0xe; call dword ptr gs:[0x10]; 
0x00122dfd: add byte ptr [eax], al; add byte ptr [eax + 0x6a], bh; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00122f7d: add byte ptr [eax], al; add byte ptr [eax + 0x6b], bh; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00122ec4: add byte ptr [eax], al; add byte ptr [eax + 0x6c], bh; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0013319c: add byte ptr [eax], al; add byte ptr [eax + 0x7420c2f6], dl; sbb cl, byte ptr [ebx - 0x13375]; jmp dword ptr [ebp - 0x75]; 
0x001268d1: add byte ptr [eax], al; add byte ptr [eax + 0x75], bh; xor esi, esi; mov ebx, 0x18; or dh, 1; call dword ptr gs:[0x10]; 
0x00125d31: add byte ptr [eax], al; add byte ptr [eax + 0x75], bh; xor esi, esi; mov ebx, 0xe; or dh, 1; call dword ptr gs:[0x10]; 
0x0018388c: add byte ptr [eax], al; add byte ptr [eax + 0x7608f983], dl; fcomi st(7); ret 1; 
0x0011d42c: add byte ptr [eax], al; add byte ptr [eax + 0x7608fb83], dl; sub al, 0x69; ret; 
0x00195b6d: add byte ptr [eax], al; add byte ptr [eax + 0x78850f01], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf01; 
0x0004aa74: add byte ptr [eax], al; add byte ptr [eax + 0x7e], bh; call dword ptr gs:[0x10]; 
0x0015a30c: add byte ptr [eax], al; add byte ptr [eax + 0x800c7], dl; add byte ptr [eax], al; pop ebx; ret; 
0x0015a2fc: add byte ptr [eax], al; add byte ptr [eax + 0xa00c7], dl; add byte ptr [eax], al; pop ebx; ret; 
0x00037805: add byte ptr [eax], al; add byte ptr [eax + 0xae], bh; call dword ptr gs:[0x10]; 
0x00091671: add byte ptr [eax], al; add byte ptr [eax + 0xaf], bh; mov dword ptr [esp + 0x24], ecx; mov edx, ecx; mov ecx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0008df02: add byte ptr [eax], al; add byte ptr [eax + 0xaf], bh; mov esi, 8; call dword ptr gs:[0x10]; 
0x0004bc0c: add byte ptr [eax], al; add byte ptr [eax + 0xb8], dl; add byte ptr [ecx + eax*2 - 0x7d], dh; ret; 
0x00197ab3: add byte ptr [eax], al; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x00088a7d: add byte ptr [eax], al; add byte ptr [eax + 0xe0], bh; call dword ptr gs:[0x10]; 
0x00197a46: add byte ptr [eax], al; add byte ptr [eax + 0xf00067a], al; test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x00197aa9: add byte ptr [eax], al; add byte ptr [eax + 0xf000b7a], al; test byte ptr [eax + eax], bh; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x000890c6: add byte ptr [eax], al; add byte ptr [eax + 0xf0], bh; mov ebx, ebp; mov ecx, 7; mov esi, edx; call dword ptr gs:[0x10]; 
0x0008abd2: add byte ptr [eax], al; add byte ptr [eax + 0xf0], bh; mov ebx, edi; mov ecx, 7; mov esi, edx; call dword ptr gs:[0x10]; 
0x00091ac8: add byte ptr [eax], al; add byte ptr [eax + 0xf0], bh; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0008b8b0: add byte ptr [eax], al; add byte ptr [eax + 0xf0], bh; mov ecx, edx; call dword ptr gs:[0x10]; 
0x001743cc: add byte ptr [eax], al; add byte ptr [eax + 0xf0], bh; xor esi, esi; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00191ded: add byte ptr [eax], al; add byte ptr [eax + 1], bh; ja 0x191df9; neg eax; ret; 
0x0009a59d: add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x00087dad: add byte ptr [eax], al; add byte ptr [eax + 3], bh; add esp, 0xc; ret; 
0x00197a0a: add byte ptr [eax], al; add byte ptr [eax + 4], bh; pop edi; ret; 
0x00197a63: add byte ptr [eax], al; add byte ptr [eax + 8], bh; pop edi; ret; 
0x0008f8e6: add byte ptr [eax], al; add byte ptr [eax - 0x15], al; ret 0x748d; 
0x00068c54: add byte ptr [eax], al; add byte ptr [eax - 0x18], dl; ret; 
0x0004bacc: add byte ptr [eax], al; add byte ptr [eax - 0x3f7ce775], dl; add al, 0x83; ret 0x8904; 
0x000edaec: add byte ptr [eax], al; add byte ptr [eax - 0x3f7cf7fd], dl; add al, 0x39; ret 0xf775; 
0x001161cb: add byte ptr [eax], al; add byte ptr [eax - 0x3fcef777], al; pop ebx; ret; 
0x001981d7: add byte ptr [eax], al; add byte ptr [eax - 0x417af0f1], ch; add byte ptr [eax], al; add dh, dh; ret 0xf0f; 
0x0017a96c: add byte ptr [eax], al; add byte ptr [eax - 0x4e1f00d], dl; mov eax, 0xffffffff; ret; 
0x001656bc: add byte ptr [eax], al; add byte ptr [eax - 0x4e1f00d], dl; mov eax, 1; ret; 
0x0015a94c: add byte ptr [eax], al; add byte ptr [eax - 0x4e1f00d], dl; mov eax, 2; ret; 
0x0008010c: add byte ptr [eax], al; add byte ptr [eax - 0x4e1f00d], dl; xor eax, eax; ret; 
0x00059de5: add byte ptr [eax], al; add byte ptr [eax - 0x5af63], cl; jmp dword ptr [ebp - 0x75]; 
0x000b3f9c: add byte ptr [eax], al; add byte ptr [eax - 0x723f42f1], dl; inc esp; or byte ptr [eax], ah; ret; 
0x000b3fac: add byte ptr [eax], al; add byte ptr [eax - 0x723f42f1], dl; inc esp; or byte ptr [eax], dh; ret; 
0x000b43cc: add byte ptr [eax], al; add byte ptr [eax - 0x723f43f1], dl; inc esp; adc byte ptr [eax], ah; ret; 
0x0007a7ae: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; add dword ptr [eax + 0x7d], -7; call dword ptr [eax - 0x18]; 
0x00076a41: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; and ebx, 0x3d; stc; call dword ptr [eax - 0x18]; 
0x001693d6: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; cmp dword ptr [esi + 0x65], -7; call dword ptr [eax - 0x18]; 
0x0007a7cd: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; sub dword ptr [edx + 0x47], -7; call dword ptr [eax - 0x18]; 
0x0002db17: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; sub esp, 0x2c; stc; call dword ptr [eax - 0x18]; 
0x000c5059: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; test edi, esi; inc ebx; stc; call dword ptr [eax - 0x18]; 
0x00056926: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg ah, ch; jbe 0x56928; call dword ptr [eax - 0x18]; 
0x0016ab0b: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg al, al; stc; call dword ptr [eax - 0x18]; 
0x000b6aa1: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg al, ch; xchg ebp, eax; stc; call dword ptr [eax - 0x18]; 
0x00149e55: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg al, dh; stosb byte ptr es:[edi], al; stc; call dword ptr [eax - 0x18]; 
0x0014cee1: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg bl, ah; pop edi; stc; call dword ptr [eax - 0x18]; 
0x00152836: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg byte ptr [ebx + 0x3f], al; stc; call dword ptr [eax - 0x18]; 
0x0013bb8d: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg byte ptr [edx], bh; pop esp; stc; call dword ptr [eax - 0x39]; 
0x00023783: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg byte ptr [esi], cl; sub bh, cl; call dword ptr [eax - 0x18]; 
0x00086d2e: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dh, bh; stc; call dword ptr [eax - 0x18]; 
0x0014ddae: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + 0x60], edx; stc; call dword ptr [eax - 0x18]; 
0x000912c3: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + eax*4 - 7], ecx; call dword ptr [eax - 0x18]; 
0x0014ddcd: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [edx + 0x60], esp; stc; call dword ptr [eax - 0x18]; 
0x000c4b68: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [esi + 0x44], ecx; stc; call dword ptr [eax - 0x18]; 
0x00087bb0: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [esi], ecx; aas; stc; call dword ptr [eax - 0x18]; 
0x000c4a28: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg eax, ebp; xchg ebp, eax; stc; call dword ptr [eax - 0x18]; 
0x000c4b8b: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg edi, esi; inc ebx; stc; call dword ptr [eax - 0x18]; 
0x0012fe5c: add byte ptr [eax], al; add byte ptr [eax - 0x74fe3f7d], dl; dec edx; add al, 0x83; ret 0x8518; 
0x000cb7b2: add byte ptr [eax], al; add byte ptr [eax - 0x75], dl; inc esp; and al, 0x5c; call eax; 
0x000f01dc: add byte ptr [eax], al; add byte ptr [eax - 0x76f3137d], dl; ret 0xe989; 
0x000ed32c: add byte ptr [eax], al; add byte ptr [eax - 0x7a2641f1], dl; fisttp dword ptr [ebp + 0x490f1f43]; ret; 
0x00196c4c: add byte ptr [eax], al; add byte ptr [eax - 0x7bdfb673], dl; in al, 0xf; test dword ptr [ebp - 0x78000000], eax; ret 0xe280; 
0x0004f6bc: add byte ptr [eax], al; add byte ptr [eax - 0x7ccf157d], dl; cli; or dword ptr [edi], ecx; xchg edi, eax; ret 0xd284; 
0x0017184c: add byte ptr [eax], al; add byte ptr [eax - 0x7cfd49f1], dl; ret 0x8801; 
0x00132f7c: add byte ptr [eax], al; add byte ptr [eax - 0xd1418], dl; jmp dword ptr [esi - 0x70]; 
0x0008e9cd: add byte ptr [eax], al; add byte ptr [eax - 0xf477e0f], al; add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x00022111: add byte ptr [eax], al; add byte ptr [eax - 1], bh; add esp, 0xc; ret; 
0x00116261: add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; pop esi; pop edi; ret; 
0x00037751: add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; pop esi; ret; 
0x00037649: add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; ret; 
0x000376f1: add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x00027efe: add byte ptr [eax], al; add byte ptr [eax - 1], dl; je 0x27f29; insb byte ptr es:[edi], dx; push dword ptr [esp + 0x6c]; call esi; 
0x0002948e: add byte ptr [eax], al; add byte ptr [eax - 1], dl; je 0x294b9; push dword ptr fs:[esp + 0x64]; call edi; 
0x0002a886: add byte ptr [eax], al; add byte ptr [eax - 1], dl; je 0x2a8b1; push dword ptr fs:[esp + 0x64]; call edi; 
0x0002b5e9: add byte ptr [eax], al; add byte ptr [eax - 1], dl; je 0x2b614; push eax; push dword ptr [esp + 0x50]; call esi; 
0x000f3598: add byte ptr [eax], al; add byte ptr [eax], al; add al, ch; push cs; ret 0xffff; 
0x000de1a4: add byte ptr [eax], al; add byte ptr [eax], al; add al, ch; ret 0xfb4d; 
0x0017a989: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x000f3596: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add al, ch; push cs; ret 0xffff; 
0x0007a1ba: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp - 0x189f7d], cl; call dword ptr [eax - 0x73]; 
0x0007558a: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp - 0x19bf7d], cl; call dword ptr [eax - 0x73]; 
0x0011b382: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x00119acd: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0015163d: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x00080fbc: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0x19a4], 0; ret; 
0x00153186: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0xf8], ecx; mov dword ptr [eax + 0xfc], edx; ret; 
0x00098894: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x00083359: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; ret; 
0x0015aa4b: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; push 0; push esi; call dword ptr [eax + 0x14]; 
0x00080fc6: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0007a1bc: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp - 0x189f7d], cl; call dword ptr [eax - 0x73]; 
0x0007558c: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp - 0x19bf7d], cl; call dword ptr [eax - 0x73]; 
0x001a132c: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00167081: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x001a1425: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00098895: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00152b29: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5f5e04c4], al; ret; 
0x00135c79: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0x13341], cl; jmp dword ptr [ebp - 0x5f]; 
0x001343a9: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0x1334a], cl; jmp dword ptr [ebp - 0x5f]; 
0x000db543: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0x1336e], cl; jmp dword ptr [ebp - 0x5f]; 
0x000951bd: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx + 0x7f883], cl; add byte ptr [ebp - 0x1959bf7d], cl; call dword ptr [eax + 0x56]; 
0x00098861: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000be2e7: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx], dh; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00072dd5: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edi + 0x196882], al; add byte ptr [ebx + 0xb7f01f8], al; ret; 
0x0007be55: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edi + 0x197c82], al; add byte ptr [ebx + 0xb7f01f8], al; ret; 
0x00080f65: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edi + 0x199c82], al; add byte ptr [ebx + 0xb7f01f8], al; ret; 
0x0015aa4c: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edx], ch; push esi; call dword ptr [eax + 0x14]; 
0x001959bc: add byte ptr [eax], al; add byte ptr [eax], al; add eax, 1; ret; 
0x00196fec: add byte ptr [eax], al; add byte ptr [eax], al; add edx, 0xa; jl 0x197040; lea eax, [ecx + 0xa]; ret; 
0x00196ffc: add byte ptr [eax], al; add byte ptr [eax], al; add edx, 0xb; jl 0x197040; lea eax, [ecx + 0xb]; ret; 
0x0019700c: add byte ptr [eax], al; add byte ptr [eax], al; add edx, 0xd; jl 0x197040; lea eax, [ecx + 0xd]; ret; 
0x0019701c: add byte ptr [eax], al; add byte ptr [eax], al; add edx, 0xe; jl 0x197040; lea eax, [ecx + 0xe]; ret; 
0x0019702c: add byte ptr [eax], al; add byte ptr [eax], al; add edx, 0xf; jl 0x197040; lea eax, [ecx + 0xf]; ret; 
0x00196fcc: add byte ptr [eax], al; add byte ptr [eax], al; add edx, 7; jl 0x197040; lea eax, [ecx + 7]; ret; 
0x00196fdc: add byte ptr [eax], al; add byte ptr [eax], al; add edx, 9; jl 0x197040; lea eax, [ecx + 9]; ret; 
0x0008bf2e: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0007f46c: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x14; pop ebx; pop esi; ret; 
0x0011b384: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x0002277c: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 4; pop ebx; pop esi; ret; 
0x000847ec: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 4; pop esi; pop edi; ret; 
0x00119acf: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0010415c: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 8; xor eax, eax; pop ebx; ret; 
0x000b3cbc: add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; add eax, edi; pop edi; ret; 
0x000b3cdc: add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edi + 0x20]; pop edi; ret; 
0x000b3cac: add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edi - 0x10]; pop edi; ret; 
0x00084b0c: add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0015163f: add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x0008d79b: add byte ptr [eax], al; add byte ptr [eax], al; cmova eax, edx; ret; 
0x00125997: add byte ptr [eax], al; add byte ptr [eax], al; cmovb eax, edx; ret; 
0x0009e855: add byte ptr [eax], al; add byte ptr [eax], al; cmove eax, edx; ret; 
0x0009124f: add byte ptr [eax], al; add byte ptr [eax], al; cmovne eax, edx; ret; 
0x0008bcbc: add byte ptr [eax], al; add byte ptr [eax], al; cmp edx, 1; je 0x8bcd0; mov eax, 0x16; ret; 
0x00080e3c: add byte ptr [eax], al; add byte ptr [eax], al; endbr32; mov eax, 0xffffffff; ret; 
0x00171a3c: add byte ptr [eax], al; add byte ptr [eax], al; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x00080e6c: add byte ptr [eax], al; add byte ptr [eax], al; endbr32; ret; 
0x00080e4c: add byte ptr [eax], al; add byte ptr [eax], al; endbr32; xor eax, eax; ret; 
0x00068c36: add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x00192613: add byte ptr [eax], al; add byte ptr [eax], al; jne 0x192d90; pop ebx; ret; 
0x0019244c: add byte ptr [eax], al; add byte ptr [eax], al; jne 0x192da6; pop ebx; ret; 
0x00193dbb: add byte ptr [eax], al; add byte ptr [eax], al; jne 0x194000; pop ebx; ret; 
0x00195485: add byte ptr [eax], al; add byte ptr [eax], al; jne 0x1956b0; pop ebx; ret; 
0x00195542: add byte ptr [eax], al; add byte ptr [eax], al; jne 0x1956d0; pop ebx; ret; 
0x0004ab6a: add byte ptr [eax], al; add byte ptr [eax], al; jne 0x4ab72; push ecx; ret; 
0x0004ae10: add byte ptr [eax], al; add byte ptr [eax], al; jne 0x4ae18; push ecx; ret; 
0x001982cc: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [ecx + 8]; ret; 
0x0019854c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi - 8]; pop edi; ret; 
0x0019739c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edx + 1]; ret; 
0x000b5fd4: add byte ptr [eax], al; add byte ptr [eax], al; lea ebx, [eax + 4]; mov eax, ebx; pop ebx; ret; 
0x00122184: add byte ptr [eax], al; add byte ptr [eax], al; lea ecx, [esp + 0xc]; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x000fb12c: add byte ptr [eax], al; add byte ptr [eax], al; lea ecx, [esp + 4]; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x001959b6: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; add eax, 1; ret; 
0x00133aa9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; and eax, 0xffffff; ret; 
0x000b43b9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x000b3f89: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; bsr eax, eax; lea eax, [eax + ecx + 0x10]; ret; 
0x0003a2e9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; call dword ptr [ebx]; 
0x0009a1e8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; endbr32; mov eax, 0xffffffff; ret; 
0x001585c8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; endbr32; mov eax, 1; ret; 
0x00082d38: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; endbr32; ret; 
0x00080e98: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; endbr32; xor eax, eax; ret; 
0x001982c5: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 8]; ret; 
0x00195d78: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xa]; pop edi; ret; 
0x00195d88: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xb]; pop edi; ret; 
0x00195d98: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xc]; pop edi; ret; 
0x00195da8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xd]; pop edi; ret; 
0x00195db8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xe]; pop edi; ret; 
0x00195d08: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 2]; pop edi; ret; 
0x00195d18: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 3]; pop edi; ret; 
0x00195d28: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 4]; pop edi; ret; 
0x00195d38: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 5]; pop edi; ret; 
0x00195d48: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 6]; pop edi; ret; 
0x00195d58: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 8]; pop edi; ret; 
0x00195d68: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 9]; pop edi; ret; 
0x001961d8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xa]; pop edi; ret; 
0x001961c8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xb]; pop edi; ret; 
0x001961b8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xd]; pop edi; ret; 
0x001961a8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xe]; pop edi; ret; 
0x00196248: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 1]; pop edi; ret; 
0x00196238: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 2]; pop edi; ret; 
0x00196228: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 3]; pop edi; ret; 
0x00198558: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 4]; pop edi; ret; 
0x00196218: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 5]; pop edi; ret; 
0x00196208: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 6]; pop edi; ret; 
0x001961f8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 7]; pop edi; ret; 
0x001961e8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 9]; pop edi; ret; 
0x00197396: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 1]; ret; 
0x000a5d45: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov byte ptr [ecx], dl; pop ebx; ret; 
0x0008ea49: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov dword ptr [eax + 4], edx; ret; 
0x00084bb9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 0x16; ret; 
0x001495b9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 0xffffffff; pop ebx; ret; 
0x00140499: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 0xffffffff; ret; 
0x000c9ec6: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 1; ret; 
0x000c9ed9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 2; ret; 
0x000c9ee9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 3; ret; 
0x000c9ef9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 4; ret; 
0x000c9f09: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 5; ret; 
0x000c9f19: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 6; ret; 
0x000c9f29: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 7; ret; 
0x00198298: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, ecx; ret; 
0x000c9ea7: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; add eax, 3; ret; 
0x00196d97: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 0xa]; ret; 
0x00196da7: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 0xb]; ret; 
0x00196db7: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 0xd]; ret; 
0x00196dc7: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 0xe]; ret; 
0x00196dd7: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 0xf]; ret; 
0x00196d37: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 2]; ret; 
0x00196d47: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 3]; ret; 
0x00196d57: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 5]; ret; 
0x00196d67: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 6]; ret; 
0x00196d77: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 7]; ret; 
0x00196d87: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 9]; ret; 
0x00197407: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 0xa]; ret; 
0x00197417: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 0xc]; ret; 
0x00197427: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 0xd]; ret; 
0x00197437: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 0xe]; ret; 
0x001973a7: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 2]; ret; 
0x001973b7: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 4]; ret; 
0x001973c7: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 5]; ret; 
0x001973d7: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 6]; ret; 
0x001973e7: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 8]; ret; 
0x001973f7: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 9]; ret; 
0x000c9eb7: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; xor eax, eax; ret; 
0x000a5d36: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; pop ebx; ret; 
0x00195dc8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; pop edi; ret; 
0x00095c99: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; ret; 
0x000afd4c: add byte ptr [eax], al; add byte ptr [eax], al; mov byte ptr [eax], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000a5d4c: add byte ptr [eax], al; add byte ptr [eax], al; mov byte ptr [ecx], dl; pop ebx; ret; 
0x00084508: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 8], 0x10; xor eax, eax; ret; 
0x00080fb4: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0x19a0], 0; mov dword ptr [eax + 0x19a4], 0; ret; 
0x00080fbe: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0x19a4], 0; ret; 
0x00153188: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0xf8], ecx; mov dword ptr [eax + 0xfc], edx; ret; 
0x0007ffb0: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; ret; 
0x000f82d5: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x0008d6ea: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 4], 0; xor eax, eax; ret; 
0x0014c832: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 8], 0; add esp, 8; pop ebx; ret; 
0x000f82ce: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x0007ffb7: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 8], 0; ret; 
0x0008450f: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 8], 0x10; xor eax, eax; ret; 
0x0015a321: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x00162f2c: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + edx], ecx; ret; 
0x000380ba: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x00171f49: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [edx + eax], 0x16; xor eax, eax; ret; 
0x00174354: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x16; pop ebx; ret; 
0x0008bc94: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x16; ret; 
0x00122dfc: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x6a; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00122f7c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x6b; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0004aa73: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x00088a7c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x0017a98a: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0xffffffff; ret; 
0x00191dec: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 1; ja 0x191df9; neg eax; ret; 
0x0009a59c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 1; ret; 
0x00087dac: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 3; add esp, 0xc; ret; 
0x00116367: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [eax + ebp]; mov dword ptr [esp + 0xc], eax; mov eax, edi; call dword ptr gs:[0x10]; 
0x00147121: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [eax - 0x14]; mov eax, dword ptr [edx + eax]; ret; 
0x001589da: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [ebx + 0x10]; push 0; push esi; call dword ptr [eax + 0x14]; 
0x00198c0c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; ret; 
0x001656f4: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x001979ac: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x001982fc: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, ecx; ret; 
0x0007b354: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edi; call dword ptr gs:[0x10]; 
0x000b290c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edi; pop ebx; pop edi; ret; 
0x001968ac: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edi; pop edi; ret; 
0x00021544: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edx; call dword ptr gs:[0x10]; 
0x000cebc4: add byte ptr [eax], al; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x50]; mov eax, 0x68; mov edx, esi; call dword ptr gs:[0x10]; 
0x00122ebc: add byte ptr [eax], al; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x84]; mov eax, 0x6c; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0015145c: add byte ptr [eax], al; add byte ptr [eax], al; mov ecx, 1; mov eax, ecx; ret; 
0x00084b00: add byte ptr [eax], al; add byte ptr [eax], al; mov ecx, dword ptr [edi + 0xc]; xor cl, 0x81; mov dword ptr [edi], 0; call dword ptr gs:[0x10]; 
0x000911b5: add byte ptr [eax], al; add byte ptr [eax], al; mov ecx, dword ptr [edx + 0x3ae0]; mov dword ptr [edx + 0x3ae0], eax; mov dword ptr [eax + 0xc], ecx; ret; 
0x00121924: add byte ptr [eax], al; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x64]; mov ebx, dword ptr [esp + 0x60]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x0004ac2d: add byte ptr [eax], al; add byte ptr [eax], al; mov ecx, esp; mov ebx, 0x3004; mov eax, 0x180; call dword ptr gs:[0x10]; 
0x00084f9e: add byte ptr [eax], al; add byte ptr [eax], al; mov edx, 0x7fffffff; call dword ptr gs:[0x10]; 
0x0008b3c3: add byte ptr [eax], al; add byte ptr [eax], al; mov esi, edx; call dword ptr gs:[0x10]; 
0x000a5dec: add byte ptr [eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x000a5dfc: add byte ptr [eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x000a5ddc: add byte ptr [eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000a5e0c: add byte ptr [eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x0018b10c: add byte ptr [eax], al; add byte ptr [eax], al; movzx ecx, byte ptr [eax + 1]; movzx eax, byte ptr [edx + 1]; sub eax, ecx; ret; 
0x00197afb: add byte ptr [eax], al; add byte ptr [eax], al; nop; add eax, 1; pop edi; ret; 
0x000b43ab: add byte ptr [eax], al; add byte ptr [eax], al; nop; bsf eax, eax; add eax, edx; ret; 
0x000b43cb: add byte ptr [eax], al; add byte ptr [eax], al; nop; bsf eax, eax; lea eax, [eax + edx + 0x20]; ret; 
0x000b3f9b: add byte ptr [eax], al; add byte ptr [eax], al; nop; bsr eax, eax; lea eax, [eax + ecx + 0x20]; ret; 
0x000b3fab: add byte ptr [eax], al; add byte ptr [eax], al; nop; bsr eax, eax; lea eax, [eax + ecx + 0x30]; ret; 
0x0007f9da: add byte ptr [eax], al; add byte ptr [eax], al; nop; endbr32; mov eax, 0xffffffff; ret; 
0x001656bb: add byte ptr [eax], al; add byte ptr [eax], al; nop; endbr32; mov eax, 1; ret; 
0x0015a94b: add byte ptr [eax], al; add byte ptr [eax], al; nop; endbr32; mov eax, 2; ret; 
0x001587ea: add byte ptr [eax], al; add byte ptr [eax], al; nop; endbr32; ret; 
0x0008010b: add byte ptr [eax], al; add byte ptr [eax], al; nop; endbr32; xor eax, eax; ret; 
0x000d718a: add byte ptr [eax], al; add byte ptr [eax], al; nop; lea ecx, [esp + 0x14]; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x0015a2fb: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov dword ptr [eax], 0xa; pop ebx; ret; 
0x0015a30b: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov dword ptr [eax], 8; pop ebx; ret; 
0x000a5d7b: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov dword ptr [ecx], edx; pop ebx; ret; 
0x0008462a: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 0x16; ret; 
0x000dfd1a: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 0x7e; pop ebx; ret; 
0x000dfd2a: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 0xfffa; pop ebx; ret; 
0x000a69db: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, edx; pop ebx; ret; 
0x0013ebfb: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov ebx, dword ptr [ebx]; mov eax, 6; call dword ptr gs:[0x10]; 
0x000a5dba: add byte ptr [eax], al; add byte ptr [eax], al; nop; movlpd qword ptr [ecx], xmm0; pop ebx; ret; 
0x000b00cb: add byte ptr [eax], al; add byte ptr [eax], al; nop; pop esi; ret; 
0x000828fb: add byte ptr [eax], al; add byte ptr [eax], al; nop; ret; 
0x00133b6b: add byte ptr [eax], al; add byte ptr [eax], al; nop; shr eax, 0x18; ret; 
0x0013128a: add byte ptr [eax], al; add byte ptr [eax], al; nop; xor eax, eax; pop ebx; ret; 
0x0003a1fa: add byte ptr [eax], al; add byte ptr [eax], al; nop; xor eax, eax; ret; 
0x00075f53: add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x00098896: add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0008335b: add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; ret; 
0x001922cc: add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; xor eax, eax; ret; 
0x0004ac8b: add byte ptr [eax], al; add byte ptr [eax], al; pop ecx; add ecx, 0xa; mov dword ptr [edx], ecx; ret; 
0x00111a94: add byte ptr [eax], al; add byte ptr [eax], al; pop edi; cmova eax, edx; ret; 
0x000abb5c: add byte ptr [eax], al; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00112751: add byte ptr [eax], al; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x0019848c: add byte ptr [eax], al; add byte ptr [eax], al; pop esi; xor eax, eax; pop edi; ret; 
0x00164726: add byte ptr [eax], al; add byte ptr [eax], al; push 0; push edi; call dword ptr [eax + 0x14]; 
0x0015aa4d: add byte ptr [eax], al; add byte ptr [eax], al; push 0; push esi; call dword ptr [eax + 0x14]; 
0x00130ece: add byte ptr [eax], al; add byte ptr [eax], al; push 0x1000002; call edx; 
0x00021df7: add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x000802fc: add byte ptr [eax], al; add byte ptr [eax], al; sub ebx, edx; lea eax, [ebx - 1]; pop ebx; ret; 
0x0015968c: add byte ptr [eax], al; add byte ptr [eax], al; sub esp, 0xc; mov eax, dword ptr [ebx + 4]; push ebx; call dword ptr [eax + 0x10]; 
0x0009a514: add byte ptr [eax], al; add byte ptr [eax], al; sub esp, 0xc; push esi; call eax; 
0x00072dd6: add byte ptr [eax], al; add byte ptr [eax], al; xchg dword ptr [edx + 0x1968], eax; cmp eax, 1; jg 0x72df0; ret; 
0x0007be56: add byte ptr [eax], al; add byte ptr [eax], al; xchg dword ptr [edx + 0x197c], eax; cmp eax, 1; jg 0x7be70; ret; 
0x00080f66: add byte ptr [eax], al; add byte ptr [eax], al; xchg dword ptr [edx + 0x199c], eax; cmp eax, 1; jg 0x80f80; ret; 
0x00058c39: add byte ptr [eax], al; add byte ptr [eax], al; xchg dword ptr [edx], eax; cmp eax, 1; jg 0x58c48; ret; 
0x0016e304: add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; pop ebx; ret; 
0x000c9cbc: add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; pop edi; pop esi; ret; 
0x000b40dc: add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x000380c0: add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x00037b83: add byte ptr [eax], al; add byte ptr [ebp + 0x10], dh; add esp, 0x114; pop ebx; pop edi; ret; 
0x0016d204: add byte ptr [eax], al; add byte ptr [ebp + 0x10], dh; add esp, 0x18; pop ebx; ret; 
0x00105062: add byte ptr [eax], al; add byte ptr [ebp + 0x10], dh; add esp, 0x1c; ret; 
0x00058949: add byte ptr [eax], al; add byte ptr [ebp + 0x11], dh; add esp, 0x1c; ret; 
0x00192d7a: add byte ptr [eax], al; add byte ptr [ebp + 0x11], dh; pop ebx; ret; 
0x001627e8: add byte ptr [eax], al; add byte ptr [ebp + 0x12], dh; add esp, 0x18; pop ebx; ret; 
0x000cad0f: add byte ptr [eax], al; add byte ptr [ebp + 0x13], dh; add esp, 0x28; pop ebx; ret; 
0x0011957f: add byte ptr [eax], al; add byte ptr [ebp + 0x13], dh; add esp, 0x3c; ret; 
0x0008e190: add byte ptr [eax], al; add byte ptr [ebp + 0x14], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x0007be03: add byte ptr [eax], al; add byte ptr [ebp + 0x14], dh; add esp, 0x28; pop ebx; ret; 
0x00037d9d: add byte ptr [eax], al; add byte ptr [ebp + 0x15], dh; add esp, 0x98; pop ebx; ret; 
0x001622d1: add byte ptr [eax], al; add byte ptr [ebp + 0x16], dh; add esp, 0x74; pop ebx; pop edi; ret; 
0x0011eec3: add byte ptr [eax], al; add byte ptr [ebp + 0x17], dh; add esp, 0x1018; pop ebx; ret; 
0x00108aa2: add byte ptr [eax], al; add byte ptr [ebp + 0x17], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x001454b0: add byte ptr [eax], al; add byte ptr [ebp + 0x18], dh; add esp, 0x18; pop ebx; ret; 
0x00109029: add byte ptr [eax], al; add byte ptr [ebp + 0x18], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x000a3e8a: add byte ptr [eax], al; add byte ptr [ebp + 0x18a0076], cl; mov byte ptr [edx], al; mov eax, edx; ret; 
0x000cc2fa: add byte ptr [eax], al; add byte ptr [ebp + 0x19], dh; add esp, 0x38; pop ebx; ret; 
0x000e0e68: add byte ptr [eax], al; add byte ptr [ebp + 0x19], dh; add esp, 0x78; pop ebx; ret; 
0x0010890f: add byte ptr [eax], al; add byte ptr [ebp + 0x1a], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x00094317: add byte ptr [eax], al; add byte ptr [ebp + 0x1b], dh; add esp, 0xb4; pop ebx; pop esi; ret; 
0x00165c3a: add byte ptr [eax], al; add byte ptr [ebp + 0x1c], dh; add esp, 0x18; pop ebx; ret; 
0x0016ea89: add byte ptr [eax], al; add byte ptr [ebp + 0x1d], dh; add esp, 0x28; pop ebx; ret; 
0x001245e6: add byte ptr [eax], al; add byte ptr [ebp + 0x1e], dh; add esp, 0x18; pop ebx; ret; 
0x00090054: add byte ptr [eax], al; add byte ptr [ebp + 0x1e], dh; add esp, 0x2c; ret; 
0x000518a8: add byte ptr [eax], al; add byte ptr [ebp + 0x20], dh; add esp, 0x434; pop ebx; pop esi; ret; 
0x00116ea5: add byte ptr [eax], al; add byte ptr [ebp + 0x21], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x00090550: add byte ptr [eax], al; add byte ptr [ebp + 0x22], dh; add esp, 0x18; pop ebx; ret; 
0x00084ecc: add byte ptr [eax], al; add byte ptr [ebp + 0x22], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x000821b6: add byte ptr [eax], al; add byte ptr [ebp + 0x22], dh; add esp, 0x2c; ret; 
0x001248f1: add byte ptr [eax], al; add byte ptr [ebp + 0x23], dh; add esp, 0x18; pop ebx; ret; 
0x000826ed: add byte ptr [eax], al; add byte ptr [ebp + 0x23], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x001244c1: add byte ptr [eax], al; add byte ptr [ebp + 0x23], dh; add esp, 0x28; pop ebx; ret; 
0x0016eb2b: add byte ptr [eax], al; add byte ptr [ebp + 0x24], dh; add esp, 0x28; pop ebx; ret; 
0x00116cff: add byte ptr [eax], al; add byte ptr [ebp + 0x25], dh; add esp, 0x54; pop ebx; pop esi; ret; 
0x001982c6: add byte ptr [eax], al; add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; lea eax, [ecx + 8]; ret; 
0x000a5d46: add byte ptr [eax], al; add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; mov byte ptr [ecx], dl; pop ebx; ret; 
0x00193ce5: add byte ptr [eax], al; add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; nop; xor eax, eax; ret; 
0x00191dd6: add byte ptr [eax], al; add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; xor eax, eax; ret; 
0x000c41bf: add byte ptr [eax], al; add byte ptr [ebp + 0x28], dh; add esp, 0x18; pop ebx; ret; 
0x0008231e: add byte ptr [eax], al; add byte ptr [ebp + 0x28], dh; add esp, 0x2c; ret; 
0x001470cf: add byte ptr [eax], al; add byte ptr [ebp + 0x29], dh; add esp, 0x11c; ret; 
0x00116bfb: add byte ptr [eax], al; add byte ptr [ebp + 0x29], dh; add esp, 0x54; pop ebx; pop esi; ret; 
0x0013ebed: add byte ptr [eax], al; add byte ptr [ebp + 0x2a], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x00038a86: add byte ptr [eax], al; add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x38a99; add esp, 0x9c; ret; 
0x001956a0: add byte ptr [eax], al; add byte ptr [ebp + 0x2b], dh; pop ebx; ret; 
0x00163e89: add byte ptr [eax], al; add byte ptr [ebp + 0x2e], dh; add esp, 0x1c; ret; 
0x001191d3: add byte ptr [eax], al; add byte ptr [ebp + 0x2f], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016b9e8: add byte ptr [eax], al; add byte ptr [ebp + 0x2f], dh; add esp, 0x18; pop ebx; ret; 
0x0016bc6e: add byte ptr [eax], al; add byte ptr [ebp + 0x31], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x001595d1: add byte ptr [eax], al; add byte ptr [ebp + 0x33], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x000d14dd: add byte ptr [eax], al; add byte ptr [ebp + 0x348d0148], cl; mov dh, 0x83; ret 0x8901; 
0x00037f43: add byte ptr [eax], al; add byte ptr [ebp + 0x34], dh; add esp, 0x28; pop ebx; ret; 
0x00081ff7: add byte ptr [eax], al; add byte ptr [ebp + 0x35], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0008f1f9: add byte ptr [eax], al; add byte ptr [ebp + 0x35], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x000d7027: add byte ptr [eax], al; add byte ptr [ebp + 0x36], dh; add esp, 0x28; pop ebx; ret; 
0x00112880: add byte ptr [eax], al; add byte ptr [ebp + 0x37], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x0009016a: add byte ptr [eax], al; add byte ptr [ebp + 0x38], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0003b16e: add byte ptr [eax], al; add byte ptr [ebp + 0x39], dh; add esp, 0x18; pop ebx; ret; 
0x00094b52: add byte ptr [eax], al; add byte ptr [ebp + 0x39b774d2], al; ret 0xb374; 
0x0008fde4: add byte ptr [eax], al; add byte ptr [ebp + 0x3b], dh; add esp, 0x38; pop ebx; ret; 
0x00193fbe: add byte ptr [eax], al; add byte ptr [ebp + 0x3d], dh; pop ebx; ret; 
0x000ced6a: add byte ptr [eax], al; add byte ptr [ebp + 0x3dd08a], cl; add byte ptr [ebp - 0x15f16f6e], cl; call dword ptr [ecx + 0x52]; 
0x000cbf36: add byte ptr [eax], al; add byte ptr [ebp + 0x3e], dh; add esp, 0x28; pop ebx; ret; 
0x0016ec59: add byte ptr [eax], al; add byte ptr [ebp + 0x3e], dh; add esp, 0x34; pop ebx; pop esi; ret; 
0x001089f8: add byte ptr [eax], al; add byte ptr [ebp + 0x3e], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x00146ecf: add byte ptr [eax], al; add byte ptr [ebp + 0x40], dh; add esp, 0x118; pop ebx; ret; 
0x00147376: add byte ptr [eax], al; add byte ptr [ebp + 0x41], dh; add esp, 0x1c; ret; 
0x000906e0: add byte ptr [eax], al; add byte ptr [ebp + 0x42], dh; add esp, 0x124; pop ebx; pop esi; ret; 
0x00037c7f: add byte ptr [eax], al; add byte ptr [ebp + 0x42], dh; add esp, 0x94; pop ebx; pop edi; ret; 
0x000dde3c: add byte ptr [eax], al; add byte ptr [ebp + 0x43], dh; add esp, 0x34; pop ebx; pop esi; ret; 
0x0008486a: add byte ptr [eax], al; add byte ptr [ebp + 0x448b0076], cl; and al, 4; mov dword ptr [eax + 0x14], edx; xor eax, eax; ret; 
0x00192d46: add byte ptr [eax], al; add byte ptr [ebp + 0x45], dh; pop ebx; ret; 
0x0014702f: add byte ptr [eax], al; add byte ptr [ebp + 0x47], dh; add esp, 0x118; pop ebx; ret; 
0x00078534: add byte ptr [eax], al; add byte ptr [ebp + 0x4889044a], cl; adc byte ptr [ecx - 0x9ec74ce], cl; ret 0x7402; 
0x000da80b: add byte ptr [eax], al; add byte ptr [ebp + 0x49], dh; add esp, 0x28; pop ebx; ret; 
0x0008f29b: add byte ptr [eax], al; add byte ptr [ebp + 0x4b], dh; add esp, 0x124; pop ebx; pop esi; ret; 
0x00165aeb: add byte ptr [eax], al; add byte ptr [ebp + 0x4b], dh; add esp, 0x18; pop ebx; ret; 
0x000df3f7: add byte ptr [eax], al; add byte ptr [ebp + 0x4d], dh; add esp, 0x28; pop ebx; ret; 
0x00161fa1: add byte ptr [eax], al; add byte ptr [ebp + 0x5128244c], cl; push 4; push edx; call dword ptr [eax + 0x14]; 
0x0014100b: add byte ptr [eax], al; add byte ptr [ebp + 0x52102454], cl; push edi; call eax; 
0x001410d7: add byte ptr [eax], al; add byte ptr [ebp + 0x52102454], cl; push esi; call eax; 
0x00107a02: add byte ptr [eax], al; add byte ptr [ebp + 0x52], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x000d70ba: add byte ptr [eax], al; add byte ptr [ebp + 0x548b0076], cl; and al, 0xc; mov dword ptr [edx], ebx; pop ebx; ret; 
0x000df760: add byte ptr [eax], al; add byte ptr [ebp + 0x54], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x0010bb20: add byte ptr [eax], al; add byte ptr [ebp + 0x56], dh; add esp, 0xe4; pop ebx; pop esi; ret; 
0x00165c9f: add byte ptr [eax], al; add byte ptr [ebp + 0x57], dh; add esp, 0x18; pop ebx; ret; 
0x001734bc: add byte ptr [eax], al; add byte ptr [ebp + 0x57], dl; push esi; call dword ptr [ebx + 0x40]; 
0x00115a9c: add byte ptr [eax], al; add byte ptr [ebp + 0x58], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x00165d3b: add byte ptr [eax], al; add byte ptr [ebp + 0x59], dh; add esp, 0x18; pop ebx; ret; 
0x00146f6f: add byte ptr [eax], al; add byte ptr [ebp + 0x5c], dh; add esp, 0x118; pop ebx; ret; 
0x00115333: add byte ptr [eax], al; add byte ptr [ebp + 0x5f], bl; pop ebx; ret; 
0x000cbfef: add byte ptr [eax], al; add byte ptr [ebp + 0x5f], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x00165754: add byte ptr [eax], al; add byte ptr [ebp + 0x60], dh; add esp, 0x18; pop ebx; ret; 
0x000a5d69: add byte ptr [eax], al; add byte ptr [ebp + 0x66002674], cl; mov dword ptr [ecx], edx; mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x001410fb: add byte ptr [eax], al; add byte ptr [ebp + 0x68], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x00132bfa: add byte ptr [eax], al; add byte ptr [ebp + 0x6be80076], cl; idiv bh; jmp dword ptr [esi - 0x70]; 
0x0015efa0: add byte ptr [eax], al; add byte ptr [ebp + 0x73], dh; add esp, 0x18; pop ebx; ret; 
0x0011819a: add byte ptr [eax], al; add byte ptr [ebp + 0x78], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x00075db6: add byte ptr [eax], al; add byte ptr [ebp + 0x84b8], cl; add byte ptr [ebp - 0x9fa8b37], al; ret 0x7408; 
0x00133636: add byte ptr [eax], al; add byte ptr [ebp + 0xa], dh; add esp, 0x2c; ret; 
0x0015db6f: add byte ptr [eax], al; add byte ptr [ebp + 0xac2494], cl; add byte ptr [eax], al; push edx; push esi; call dword ptr [eax + 4]; 
0x00191de7: add byte ptr [eax], al; add byte ptr [ebp + 0xb6], cl; add byte ptr [eax + 1], bh; ja 0x191df9; neg eax; ret; 
0x000c9ec7: add byte ptr [eax], al; add byte ptr [ebp + 0xb6], cl; add byte ptr [eax + 1], bh; ret; 
0x00095ca7: add byte ptr [eax], al; add byte ptr [ebp + 0xb6], cl; add byte ptr [ebp - 0x77], dl; ret 0x5657; 
0x000677b7: add byte ptr [eax], al; add byte ptr [ebp + 0xb6], cl; add byte ptr [ecx + 0x6785c6d3], cl; idiv edi; jmp dword ptr [eax]; 
0x001165f9: add byte ptr [eax], al; add byte ptr [ebp + 0xb], dh; add esp, 0x1c; ret; 
0x00125a04: add byte ptr [eax], al; add byte ptr [ebp + 0xb], dh; add esp, 0x7c; ret; 
0x00162255: add byte ptr [eax], al; add byte ptr [ebp + 0xd], dh; add esp, 0x1c; ret; 
0x001097d5: add byte ptr [eax], al; add byte ptr [ebp + 0xd], dh; add esp, 0x54; pop ebx; pop esi; ret; 
0x00109895: add byte ptr [eax], al; add byte ptr [ebp + 0xd], dh; add esp, 0x64; pop ebx; pop esi; ret; 
0x000a5dca: add byte ptr [eax], al; add byte ptr [ebp + 0xf660076], cl; adc eax, dword ptr [ecx]; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x001585ba: add byte ptr [eax], al; add byte ptr [ebp + 0xff30076], cl; push ds; sti; ret; 
0x0004ab6b: add byte ptr [eax], al; add byte ptr [ebp + 2], dh; push ecx; ret; 
0x00021dd0: add byte ptr [eax], al; add byte ptr [ebp + 4], dh; add esp, 0x1c; ret; 
0x0003ad5d: add byte ptr [eax], al; add byte ptr [ebp + 4], dh; add esp, 0x2c; ret; 
0x0016364c: add byte ptr [eax], al; add byte ptr [ebp + 4], dh; add esp, 0x4c; ret; 
0x0003726f: add byte ptr [eax], al; add byte ptr [ebp + 5], dh; add esp, 0x18; pop ebx; ret; 
0x0008ae0b: add byte ptr [eax], al; add byte ptr [ebp + 5], dh; add esp, 0x28; pop ebx; ret; 
0x00093e90: add byte ptr [eax], al; add byte ptr [ebp + 5], dh; add esp, 0x38; pop ebx; ret; 
0x000cae3a: add byte ptr [eax], al; add byte ptr [ebp + 5], dh; add esp, 0x48; pop ebx; ret; 
0x00058364: add byte ptr [eax], al; add byte ptr [ebp + 5], dh; add esp, 0x78; pop ebx; ret; 
0x00082a65: add byte ptr [eax], al; add byte ptr [ebp + 6], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x00111afb: add byte ptr [eax], al; add byte ptr [ebp + 6], dh; add esp, 0x14; pop esi; pop edi; ret; 
0x0003882c: add byte ptr [eax], al; add byte ptr [ebp + 6], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x0011a3cd: add byte ptr [eax], al; add byte ptr [ebp + 6], dh; add esp, 0x34; pop ebx; pop esi; ret; 
0x00166d51: add byte ptr [eax], al; add byte ptr [ebp + 6], dh; add esp, 0x54; pop ebx; pop esi; ret; 
0x00038315: add byte ptr [eax], al; add byte ptr [ebp + 7], dh; add esp, 0x12c; ret; 
0x000cef0c: add byte ptr [eax], al; add byte ptr [ebp + 7], dh; add esp, 0x28; xor eax, eax; pop ebx; ret; 
0x000489a9: add byte ptr [eax], al; add byte ptr [ebp + 7], dh; add esp, 0x42c; ret; 
0x00038a8d: add byte ptr [eax], al; add byte ptr [ebp + 7], dh; add esp, 0x9c; ret; 
0x00166dc3: add byte ptr [eax], al; add byte ptr [ebp + 7], dh; movzx eax, al; add esp, 0x1c; ret; 
0x0010c111: add byte ptr [eax], al; add byte ptr [ebp + 7], dh; movzx eax, al; add esp, 0x4c; ret; 
0x0014ab49: add byte ptr [eax], al; add byte ptr [ebp + 7], dh; movzx eax, ax; add esp, 0x2c; ret; 
0x000582dd: add byte ptr [eax], al; add byte ptr [ebp + 8], dh; add esp, 0x1018; pop ebx; ret; 
0x0011e6a2: add byte ptr [eax], al; add byte ptr [ebp + 8], dh; add esp, 0x418; pop ebx; ret; 
0x000d8426: add byte ptr [eax], al; add byte ptr [ebp + 8], dh; add esp, 0xe8; pop ebx; ret; 
0x0008e0d5: add byte ptr [eax], al; add byte ptr [ebp + 8], dh; and eax, 0x38; cmp eax, 8; je 0x8e0e3; ret; 
0x00082789: add byte ptr [eax], al; add byte ptr [ebp + 8], dh; and edx, 0x38; cmp edx, 8; je 0x82797; ret; 
0x00036619: add byte ptr [eax], al; add byte ptr [ebp + 8], dh; mov eax, edx; add esp, 0x1c; ret 4; 
0x000375e3: add byte ptr [eax], al; add byte ptr [ebp + 9], dh; add esp, 0x124; pop ebx; pop esi; ret; 
0x0004d10e: add byte ptr [eax], al; add byte ptr [ebp + 9], dh; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x00099cc5: add byte ptr [eax], al; add byte ptr [ebp + 9], dh; add esp, 0x38; mov eax, ebx; pop ebx; ret 4; 
0x00037d1e: add byte ptr [eax], al; add byte ptr [ebp + 9], dh; add esp, 0x94; pop ebx; pop edi; ret; 
0x00193ff2: add byte ptr [eax], al; add byte ptr [ebp + 9], dh; pop ebx; ret; 
0x0008de5e: add byte ptr [eax], al; add byte ptr [ebp + edx*8 - 0x77], dh; ret 0xe083; 
0x000fc6ba: add byte ptr [eax], al; add byte ptr [ebp - 0x12ec3f79], cl; call dword ptr [eax + 0x6a]; 
0x000fcb8a: add byte ptr [eax], al; add byte ptr [ebp - 0x12ec3f7a], cl; call dword ptr [eax + 0x6a]; 
0x000a23b5: add byte ptr [eax], al; add byte ptr [ebp - 0x137c00ba], cl; add al, 0x39; ror byte ptr [ecx + 0xf102454], 1; inc edi; ret 0x5350; 
0x0015833a: add byte ptr [eax], al; add byte ptr [ebp - 0x137cff8a], cl; or bh, bh; je 0x15836a; or byte ptr [esi - 0x18], dl; ret; 
0x0009300a: add byte ptr [eax], al; add byte ptr [ebp - 0x137cff8a], cl; or byte ptr [ebp - 0x1971df79], cl; call dword ptr [eax - 0x73]; 
0x0012407a: add byte ptr [eax], al; add byte ptr [ebp - 0x137cff8a], cl; or byte ptr [ebp - 0x65cf779], cl; call dword ptr [eax + 0x55]; 
0x0011ae5a: add byte ptr [eax], al; add byte ptr [ebp - 0x137cff8a], cl; or byte ptr [ebp - 0x6d5a47d], cl; call dword ptr [eax - 0x73]; 
0x0004652a: add byte ptr [eax], al; add byte ptr [ebp - 0x157cff8a], cl; xor byte ptr [ebx - 0x68f0f606], al; ret 0xd284; 
0x0007a1be: add byte ptr [eax], al; add byte ptr [ebp - 0x189f7d], cl; call dword ptr [eax - 0x73]; 
0x0007558e: add byte ptr [eax], al; add byte ptr [ebp - 0x19bf7d], cl; call dword ptr [eax - 0x73]; 
0x0007488e: add byte ptr [eax], al; add byte ptr [ebp - 0x1c5f79], cl; jmp ptr [ecx]; ret 0x4d89; 
0x00070dd2: add byte ptr [eax], al; add byte ptr [ebp - 0x1c5f79], cl; jmp ptr [ecx]; ret 0xd989; 
0x0007e05c: add byte ptr [eax], al; add byte ptr [ebp - 0x1c5f79], cl; jmp ptr [ecx]; ret 0xf189; 
0x00077f0c: add byte ptr [eax], al; add byte ptr [ebp - 0x1c5f7b], cl; dec dword ptr [ebp - 0x148b6b]; jmp ptr [ecx]; ret 0xd989; 
0x00077cb5: add byte ptr [eax], al; add byte ptr [ebp - 0x1c5f7b], cl; jmp ptr [ecx]; ret 0xf989; 
0x0007f96b: add byte ptr [eax], al; add byte ptr [ebp - 0x1c5f7d], cl; jmp ptr [ecx]; ret 0xf989; 
0x000738ea: add byte ptr [eax], al; add byte ptr [ebp - 0x1c5f7e], cl; dec dword ptr [ebp - 0x148b6e]; jmp ptr [ecx]; ret 0x4d89; 
0x00053827: add byte ptr [eax], al; add byte ptr [ebp - 0x1c5f7e], cl; dec dword ptr [ebp - 0x148b6e]; jmp ptr [ecx]; ret 0xf189; 
0x0008468a: add byte ptr [eax], al; add byte ptr [ebp - 0x1f7cff8a], cl; std; mov dword ptr [ecx + 8], eax; xor eax, eax; ret; 
0x000213e2: add byte ptr [eax], al; add byte ptr [ebp - 0x25], dh; mov ecx, dword ptr [eax - 0xe8]; cmp dword ptr [ecx + 0x94], edx; jne 0x213c2; ret; 
0x000b5fd5: add byte ptr [eax], al; add byte ptr [ebp - 0x2776fba8], cl; pop ebx; ret; 
0x000213f0: add byte ptr [eax], al; add byte ptr [ebp - 0x33], dh; ret; 
0x00050e70: add byte ptr [eax], al; add byte ptr [ebp - 0x35f34b], cl; jmp ptr [ecx]; ret 0xd889; 
0x0012701a: add byte ptr [eax], al; add byte ptr [ebp - 0x397cfeb6], cl; add dword ptr [ecx], eax; ret; 
0x0008372a: add byte ptr [eax], al; add byte ptr [ebp - 0x3b7cff8a], cl; add al, 0x5b; pop esi; ret; 
0x00048dea: add byte ptr [eax], al; add byte ptr [ebp - 0x3c7cff8a], cl; add esi, eax; inc ebx; jmp dword ptr [eax]; 
0x00083e5c: add byte ptr [eax], al; add byte ptr [ebp - 0x3dbaf040], al; ret; 
0x0011ef18: add byte ptr [eax], al; add byte ptr [ebp - 0x3dbbf040], al; add esp, 0xc; ret; 
0x0011c96a: add byte ptr [eax], al; add byte ptr [ebp - 0x3f7cff8a], cl; add dword ptr [ecx], edi; ret; 
0x000e95fa: add byte ptr [eax], al; add byte ptr [ebp - 0x3fceff8a], cl; pop ebx; pop esi; ret; 
0x00095c9a: add byte ptr [eax], al; add byte ptr [ebp - 0x3fceff8a], cl; ret; 
0x0006b98a: add byte ptr [eax], al; add byte ptr [ebp - 0x4274ff8a], cl; push 0x8dfffff7; xchg dword ptr [ecx + edi*2], esp; stc; call dword ptr [eax - 0x73]; 
0x00109422: add byte ptr [eax], al; add byte ptr [ebp - 0x47e7dbac], cl; or al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00122e88: add byte ptr [eax], al; add byte ptr [ebp - 0x47f3dbb4], cl; lds eax, ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00167034: add byte ptr [eax], al; add byte ptr [ebp - 0x49f6e], cl; dec dword ptr [ecx + 0x548b0450]; and al, 8; mov dword ptr [eax + 0xc], edx; ret; 
0x0009aea9: add byte ptr [eax], al; add byte ptr [ebp - 0x66b5f80], cl; call dword ptr [eax + 0x68]; 
0x0009a990: add byte ptr [eax], al; add byte ptr [ebp - 0x66ba380], cl; call dword ptr [eax + 0x68]; 
0x001670f9: add byte ptr [eax], al; add byte ptr [ebp - 0x69ae97d], cl; call dword ptr [ebp + 0x6a]; 
0x0014cde7: add byte ptr [eax], al; add byte ptr [ebp - 0x6a02a7d], cl; call dword ptr [eax - 0x73]; 
0x0002f8f8: add byte ptr [eax], al; add byte ptr [ebp - 0x6a8877d], cl; call dword ptr [esi - 1]; 
0x00034f7c: add byte ptr [eax], al; add byte ptr [ebp - 0x6b42f55], cl; inc dword ptr [ebx - 0x7c72f314]; mov ah, 0x2f; stc; call dword ptr [eax - 0x18]; 
0x001601d1: add byte ptr [eax], al; add byte ptr [ebp - 0x6b5fd7d], cl; call dword ptr [esi + 0x57]; 
0x0013aac1: add byte ptr [eax], al; add byte ptr [ebp - 0x6b73280], cl; call dword ptr [eax - 1]; 
0x00092681: add byte ptr [eax], al; add byte ptr [ebp - 0x6bf547a], cl; call dword ptr [eax - 0x73]; 
0x0008a0f5: add byte ptr [eax], al; add byte ptr [ebp - 0x6c05879], cl; call dword ptr [eax - 0x73]; 
0x0008938c: add byte ptr [eax], al; add byte ptr [ebp - 0x6c06079], cl; call dword ptr [eax - 0x73]; 
0x000c9ea8: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; add eax, 3; ret; 
0x00196d98: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 0xa]; ret; 
0x00196da8: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 0xb]; ret; 
0x00196db8: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 0xd]; ret; 
0x00196dc8: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 0xe]; ret; 
0x00196dd8: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 0xf]; ret; 
0x00196d38: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 2]; ret; 
0x00196d48: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 3]; ret; 
0x00196d58: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 5]; ret; 
0x00196d68: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 6]; ret; 
0x00196d78: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 7]; ret; 
0x00196d88: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 9]; ret; 
0x00195cf8: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edi + 1]; pop edi; ret; 
0x00195ce8: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edi]; pop edi; ret; 
0x00197408: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 0xa]; ret; 
0x00197418: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 0xc]; ret; 
0x00197428: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 0xd]; ret; 
0x00197438: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 0xe]; ret; 
0x001973a8: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 2]; ret; 
0x001973b8: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 4]; ret; 
0x001973c8: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 5]; ret; 
0x001973d8: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 6]; ret; 
0x001973e8: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 8]; ret; 
0x001973f8: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 9]; ret; 
0x000a5d58: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; mov word ptr [ecx], dx; pop ebx; ret; 
0x000c9eb8: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; xor eax, eax; ret; 
0x000889c1: add byte ptr [eax], al; add byte ptr [ebp - 0x7257f72], cl; dec dword ptr [ecx - 0x41f7dbac]; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00195d29: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc edi; add al, 0x5f; ret; 
0x00198559: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc edi; cld; pop edi; ret; 
0x00196209: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc edi; cli; pop edi; ret; 
0x001961c9: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc edi; cmc; pop edi; ret; 
0x00195d99: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc edi; or al, 0x5f; ret; 
0x001961a9: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc edi; pop edi; ret; 
0x00195db9: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc edi; push cs; pop edi; ret; 
0x00195d49: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc edi; push es; pop edi; ret; 
0x001961f9: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc edi; stc; pop edi; ret; 
0x00196229: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc edi; std; pop edi; ret; 
0x00196219: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc edi; sti; pop edi; ret; 
0x00118d57: add byte ptr [eax], al; add byte ptr [ebp - 0x74dd8a40], al; pop esp; and al, 0x20; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00118e37: add byte ptr [eax], al; add byte ptr [ebp - 0x74dd8a40], al; pop esp; and al, 0x20; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x0010aed7: add byte ptr [eax], al; add byte ptr [ebp - 0x74dd8a40], al; pop esp; and al, 0x20; mov eax, 6; call dword ptr gs:[0x10]; 
0x0011decd: add byte ptr [eax], al; add byte ptr [ebp - 0x74f38b40], al; push eax; add al, 0xf6; ret 0xf01; 
0x000d709e: add byte ptr [eax], al; add byte ptr [ebp - 0x76e48b40], al; ret 0xf75b; 
0x0008dfbc: add byte ptr [eax], al; add byte ptr [ebp - 0x76f3db8c], cl; ret; 
0x00083144: add byte ptr [eax], al; add byte ptr [ebp - 0x77], ah; adc eax, 0x7c; ret; 
0x00095cad: add byte ptr [eax], al; add byte ptr [ebp - 0x77], dl; ret 0x5657; 
0x000dacfd: add byte ptr [eax], al; add byte ptr [ebp - 0x786a7240], al; stc; dec dword ptr [edi]; inc esp; ret 0xec83; 
0x000b1c39: add byte ptr [eax], al; add byte ptr [ebp - 0x7affd98c], cl; sal byte ptr [ebp + 0x38], 0x83; ret; 
0x00163efc: add byte ptr [eax], al; add byte ptr [ebp - 0x7c1a8a40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x001240b2: add byte ptr [eax], al; add byte ptr [ebp - 0x7c578b2e], al; in al, dx; or byte ptr [ebp - 0x65d2779], cl; call dword ptr [eax + 0x55]; 
0x0013ed2a: add byte ptr [eax], al; add byte ptr [ebp - 0x7c99ff8a], cl; sti; adc al, 0xf; xchg esp, eax; ret; 
0x000cf105: add byte ptr [eax], al; add byte ptr [ebp - 0x7cbf8b40], al; ret; 
0x000b3c09: add byte ptr [eax], al; add byte ptr [ebp - 0x7cffd98c], cl; ret 0x8340; 
0x0018c989: add byte ptr [eax], al; add byte ptr [ebp - 0x7cffd98c], cl; ror byte ptr [eax], 0x83; ret 0x8308; 
0x00183cc9: add byte ptr [eax], al; add byte ptr [ebp - 0x7effd98c], cl; ret; 
0x00075dbc: add byte ptr [eax], al; add byte ptr [ebp - 0x9fa8b37], al; ret 0x7408; 
0x00164025: add byte ptr [eax], al; add byte ptr [ebp - 0xc5d7f7d], cl; call dword ptr [eax - 0x73]; 
0x0015e595: add byte ptr [eax], al; add byte ptr [ebp - 0xcb79f7d], cl; call dword ptr [eax - 0x73]; 
0x000a3fe9: add byte ptr [eax], al; add byte ptr [ebp - 0xcffd98c], cl; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000df696: add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x0010992c: add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; mov ebx, edx; ret; 
0x0013eb3d: add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; pop ebx; ret; 
0x0008fe36: add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x0014c35d: add byte ptr [eax], al; add byte ptr [ebx + 0x1008b11], cl; ret 0x5052; 
0x0014c498: add byte ptr [eax], al; add byte ptr [ebx + 0x1008b17], cl; ret 0x5052; 
0x000de33c: add byte ptr [eax], al; add byte ptr [ebx + 0x1200011], bh; lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x00054685: add byte ptr [eax], al; add byte ptr [ebx + 0x14898114], cl; xchg byte ptr [ebx - 0x3f7c47ab], cl; add dword ptr [ecx], ebp; fidivr dword ptr [ecx]; ret 0xee7f; 
0x0009a125: add byte ptr [eax], al; add byte ptr [ebx + 0x16b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0019694d: add byte ptr [eax], al; add byte ptr [ebx + 0x1b720eea], al; lea eax, [edi + 0xd]; pop edi; ret; 
0x0019798d: add byte ptr [eax], al; add byte ptr [ebx + 0x1b720eef], al; lea eax, [eax + 0xd]; pop edi; ret; 
0x0019701d: add byte ptr [eax], al; add byte ptr [ebx + 0x1b7c0ec2], al; lea eax, [ecx + 0xe]; ret; 
0x0010e4fc: add byte ptr [eax], al; add byte ptr [ebx + 0x1b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00108ebe: add byte ptr [eax], al; add byte ptr [ebx + 0x1bc24b4], cl; add byte ptr [eax], al; lea edx, [esp + 0x2c]; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x00127113: add byte ptr [eax], al; add byte ptr [ebx + 0x26497], cl; add byte ptr [ecx - 0x33f7b], cl; inc edi; test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x00199c96: add byte ptr [eax], al; add byte ptr [ebx + 0x2904245c], cl; ret 0xfa83; 
0x00116fed: add byte ptr [eax], al; add byte ptr [ebx + 0x29], bl; ret 0xc085; 
0x0019693d: add byte ptr [eax], al; add byte ptr [ebx + 0x2b720dea], al; lea eax, [edi + 0xc]; pop edi; ret; 
0x0019797d: add byte ptr [eax], al; add byte ptr [ebx + 0x2b720def], al; lea eax, [eax + 0xc]; pop edi; ret; 
0x0019700d: add byte ptr [eax], al; add byte ptr [ebx + 0x2b7c0dc2], al; lea eax, [ecx + 0xd]; ret; 
0x000875c0: add byte ptr [eax], al; add byte ptr [ebx + 0x3108244c], cl; sar byte ptr [eax + 0xaf], cl; mov esi, 8; call dword ptr gs:[0x10]; 
0x00122dc3: add byte ptr [eax], al; add byte ptr [ebx + 0x357401ff], al; lea ecx, [esp + 0xc]; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x00122f43: add byte ptr [eax], al; add byte ptr [ebx + 0x357401ff], al; lea ecx, [esp + 0xc]; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x00143009: add byte ptr [eax], al; add byte ptr [ebx + 0x395c2474], cl; ret; 
0x0019c085: add byte ptr [eax], al; add byte ptr [ebx + 0x3968245c], cl; ret; 
0x0019692d: add byte ptr [eax], al; add byte ptr [ebx + 0x3b720bea], al; lea eax, [edi + 0xa]; pop edi; ret; 
0x0019796d: add byte ptr [eax], al; add byte ptr [ebx + 0x3b720bef], al; lea eax, [eax + 0xa]; pop edi; ret; 
0x00196ffd: add byte ptr [eax], al; add byte ptr [ebx + 0x3b7c0bc2], al; lea eax, [ecx + 0xb]; ret; 
0x0015b095: add byte ptr [eax], al; add byte ptr [ebx + 0x438b08ec], al; add al, 0xff; je 0x15b0c5; sbb al, 0x53; call dword ptr [eax + 4]; 
0x00163bcc: add byte ptr [eax], al; add byte ptr [ebx + 0x438b08ec], al; or bh, bh; je 0x163bfc; sbb al, 0x53; call dword ptr [eax + 0xc]; 
0x0015968d: add byte ptr [eax], al; add byte ptr [ebx + 0x438b0cec], al; add al, 0x53; call dword ptr [eax + 0x10]; 
0x00116368: add byte ptr [eax], al; add byte ptr [ebx + 0x44892804], cl; and al, 0xc; mov eax, edi; call dword ptr gs:[0x10]; 
0x00057555: add byte ptr [eax], al; add byte ptr [ebx + 0x48904e8], al; and al, 0xf6; ret 0xf20; 
0x0015fdc5: add byte ptr [eax], al; add byte ptr [ebx + 0x48d0cec], al; mov ch, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x12f63], cl; call dword ptr [eax - 0x18]; 
0x000c345e: add byte ptr [eax], al; add byte ptr [ebx + 0x48db055], cl; test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x1a8b; 
0x000c2e70: add byte ptr [eax], al; add byte ptr [ebx + 0x48db055], cl; test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x3a8b; 
0x000c2c4c: add byte ptr [eax], al; add byte ptr [ebx + 0x48db055], cl; test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xa8b; 
0x000d375d: add byte ptr [eax], al; add byte ptr [ebx + 0x490f01ea], al; ret 0x708d; 
0x0019691d: add byte ptr [eax], al; add byte ptr [ebx + 0x4b720aea], al; lea eax, [edi + 9]; pop edi; ret; 
0x0019795d: add byte ptr [eax], al; add byte ptr [ebx + 0x4b720aef], al; lea eax, [eax + 9]; pop edi; ret; 
0x00196fed: add byte ptr [eax], al; add byte ptr [ebx + 0x4b7c0ac2], al; lea eax, [ecx + 0xa]; ret; 
0x0009ff8a: add byte ptr [eax], al; add byte ptr [ebx + 0x4bfac55], cl; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5589; 
0x001656f5: add byte ptr [eax], al; add byte ptr [ebx + 0x4c890442], cl; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x0015e4c7: add byte ptr [eax], al; add byte ptr [ebx + 0x4c8908c0], al; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x00160fc7: add byte ptr [eax], al; add byte ptr [ebx + 0x4c8938c0], al; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x00160597: add byte ptr [eax], al; add byte ptr [ebx + 0x4c894cc0], al; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x000a02dd: add byte ptr [eax], al; add byte ptr [ebx + 0x4d89ac55], cl; aam 0x29; ret 0xb48d; 
0x00161a0b: add byte ptr [eax], al; add byte ptr [ebx + 0x50], dl; call dword ptr [edx + 8]; 
0x00094b75: add byte ptr [eax], al; add byte ptr [ebx + 0x528b0442], cl; or byte ptr [ecx], al; lds edi, ptr [ecx]; ret; 
0x000e0e75: add byte ptr [eax], al; add byte ptr [ebx + 0x548d08ec], al; and al, 0x14; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x00105515: add byte ptr [eax], al; add byte ptr [ebx + 0x548d08ec], al; and al, 8; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x0007d77c: add byte ptr [eax], al; add byte ptr [ebx + 0x555004ec], al; push esi; call dword ptr [ebx + 0x38]; 
0x0007d6fc: add byte ptr [eax], al; add byte ptr [ebx + 0x568b0446], cl; or byte ptr [ecx], ch; ret 0xfa39; 
0x0007395a: add byte ptr [eax], al; add byte ptr [ebx + 0x575304ec], al; push esi; call dword ptr [eax + 0x2c]; 
0x00097b75: add byte ptr [eax], al; add byte ptr [ebx + 0x598b1049], cl; add al, 0xf6; ret; 
0x000cf40d: add byte ptr [eax], al; add byte ptr [ebx + 0x5a8d0cec], al; add dword ptr [ecx - 0xff6b], ecx; call dword ptr [ebx - 0x18]; 
0x0019690d: add byte ptr [eax], al; add byte ptr [ebx + 0x5b7209ea], al; lea eax, [edi + 8]; pop edi; ret; 
0x0019794d: add byte ptr [eax], al; add byte ptr [ebx + 0x5b7209ef], al; lea eax, [eax + 8]; pop edi; ret; 
0x00196fdd: add byte ptr [eax], al; add byte ptr [ebx + 0x5b7c09c2], al; lea eax, [ecx + 9]; ret; 
0x0002277d: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000d72bb: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x0007f46d: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x00093d91: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b20c4], al; pop edi; ret; 
0x0010ac91: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b24c4], al; ret; 
0x00078ad3: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b30c4], al; pop edi; ret; 
0x00159187: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b34c4], al; ret; 
0x00125ffa: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b60c4], al; pop edi; ret; 
0x000dda30: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b64c4], al; ret; 
0x0010c24f: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x000c9d24: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; mov eax, ecx; ret; 
0x000885e2: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; mov eax, edi; pop edi; ret; 
0x0014e2d2: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; mov eax, edx; ret; 
0x0013136d: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop ebp; ret; 
0x000283dd: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; jmp eax; 
0x00199778: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 4; 
0x0002266d: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00072246: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0008329f: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x001979ad: add byte ptr [eax], al; add byte ptr [ebx + 0x5f0c2444], cl; ret; 
0x000847ed: add byte ptr [eax], al; add byte ptr [ebx + 0x5f5e04c4], al; ret; 
0x00037c87: add byte ptr [eax], al; add byte ptr [ebx + 0x5f], bl; ret; 
0x00105016: add byte ptr [eax], al; add byte ptr [ebx + 0x6508245c], cl; call dword ptr [0x10]; neg eax; pop ebx; ret; 
0x00090049: add byte ptr [eax], al; add byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x90077; add esp, 0x2c; ret; 
0x000902d5: add byte ptr [eax], al; add byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x90307; add esp, 0x2c; ret; 
0x000807ab: add byte ptr [eax], al; add byte ptr [ebx + 0x6a04ec], al; push 0; push ebx; call dword ptr [ebp + 0x2c]; 
0x001589db: add byte ptr [eax], al; add byte ptr [ebx + 0x6a1043], cl; push esi; call dword ptr [eax + 0x14]; 
0x00073e09: add byte ptr [eax], al; add byte ptr [ebx + 0x6a5720c4], al; call dword ptr [edi + 0x56]; 
0x001968fd: add byte ptr [eax], al; add byte ptr [ebx + 0x6b7207ea], al; lea eax, [edi + 6]; pop edi; ret; 
0x0019793d: add byte ptr [eax], al; add byte ptr [ebx + 0x6b7207ef], al; lea eax, [eax + 6]; pop edi; ret; 
0x00196fcd: add byte ptr [eax], al; add byte ptr [ebx + 0x6b7c07c2], al; lea eax, [ecx + 7]; ret; 
0x00094211: add byte ptr [eax], al; add byte ptr [ebx + 0x6c8b28ec], al; and al, 0x3c; lea ecx, [edi - 0x722c0]; call dword ptr gs:[0x10]; 
0x001453e4: add byte ptr [eax], al; add byte ptr [ebx + 0x74223e3c], al; ret; 
0x0012cea8: add byte ptr [eax], al; add byte ptr [ebx + 0x74ff04ec], al; and al, 0x18; push 0; push 0x2000004; call eax; 
0x0007c67f: add byte ptr [eax], al; add byte ptr [ebx + 0x74ff04ec], al; and al, 0xc; push edi; push ebx; call dword ptr [esi + 0x3c]; 
0x0015890f: add byte ptr [eax], al; add byte ptr [ebx + 0x74ff08ec], al; and al, 0x1c; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00058865: add byte ptr [eax], al; add byte ptr [ebx + 0x74ff08ec], al; and al, 0x34; push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x30]; call eax; 
0x0016e53b: add byte ptr [eax], al; add byte ptr [ebx + 0x74ff0cec], al; and al, 0x24; mov esi, dword ptr [esp + 0x24]; call esi; 
0x00073a8d: add byte ptr [eax], al; add byte ptr [ebx + 0x75ff04ec], al; adc al, 0xff; jne 0x73aa5; push esi; call dword ptr [ebx + 0x2c]; 
0x0007333d: add byte ptr [eax], al; add byte ptr [ebx + 0x75ff04ec], al; in al, 0xff; jne 0x73351; push edx; call dword ptr [ebx + 0x1c]; 
0x00161333: add byte ptr [eax], al; add byte ptr [ebx + 0x75ff3c45], cl; push eax; mov ebx, dword ptr [esp + 0x3c]; push ebx; call dword ptr [eax + 0x14]; 
0x00122ebd: add byte ptr [eax], al; add byte ptr [ebx + 0x84249c], cl; add byte ptr [eax], al; mov eax, 0x6c; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0002fd1b: add byte ptr [eax], al; add byte ptr [ebx + 0x8b0104], cl; mov eax, dword ptr [eax + 0x28]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0002fcdb: add byte ptr [eax], al; add byte ptr [ebx + 0x8b0104], cl; mov eax, dword ptr [eax + 0x30]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0010958b: add byte ptr [eax], al; add byte ptr [ebx + 0x90249c], cl; add byte ptr [eax], al; lea edx, [esp + 0x18]; mov eax, 0x10d; call dword ptr gs:[0x10]; 
0x00087d87: add byte ptr [eax], al; add byte ptr [ebx + 0x97510e0], al; add esp, 0xc; ret; 
0x00109ad4: add byte ptr [eax], al; add byte ptr [ebx + 0x982494], cl; add byte ptr [eax], al; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x001230f8: add byte ptr [eax], al; add byte ptr [ebx + 0xa024b4], cl; add byte ptr [eax], al; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x0010a64c: add byte ptr [eax], al; add byte ptr [ebx + 0xa4248c], cl; add byte ptr [eax], al; mov edx, dword ptr [esp + 0xa8]; mov esi, dword ptr [esp + 0xac]; call dword ptr gs:[0x10]; 
0x0008471e: add byte ptr [eax], al; add byte ptr [ebx + 0xa7602fa], al; ret; 
0x0010a653: add byte ptr [eax], al; add byte ptr [ebx + 0xa82494], cl; add byte ptr [eax], al; mov esi, dword ptr [esp + 0xac]; call dword ptr gs:[0x10]; 
0x0010a65a: add byte ptr [eax], al; add byte ptr [ebx + 0xac24b4], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0019695d: add byte ptr [eax], al; add byte ptr [ebx + 0xb720fea], al; lea eax, [edi + 0xe]; pop edi; ret; 
0x0019799d: add byte ptr [eax], al; add byte ptr [ebx + 0xb720fef], al; lea eax, [eax + 0xe]; pop edi; ret; 
0x0008bcbd: add byte ptr [eax], al; add byte ptr [ebx + 0xb7401fa], al; mov eax, 0x16; ret; 
0x0019702d: add byte ptr [eax], al; add byte ptr [ebx + 0xb7c0fc2], al; lea eax, [ecx + 0xf]; ret; 
0x00125a4a: add byte ptr [eax], al; add byte ptr [ebx + 0xb], bh; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x0012272f: add byte ptr [eax], al; add byte ptr [ebx + 0xc0249c], cl; add byte ptr [eax], al; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0016c181: add byte ptr [eax], al; add byte ptr [ebx + 0xc48b3], cl; add byte ptr [ebx - 0x4472f714], al; pop es; stc; call dword ptr [edi + 0x56]; 
0x000d708d: add byte ptr [eax], al; add byte ptr [ebx + 0xc75daf8], al; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x00124f3e: add byte ptr [eax], al; add byte ptr [ebx + 0xe], bh; call dword ptr gs:[0x10]; 
0x000f75a7: add byte ptr [eax], al; add byte ptr [ebx + 0xf00903c], al; test dword ptr [eax - 0x7c000005], ecx; ret 0x8301; 
0x001537ea: add byte ptr [eax], al; add byte ptr [ebx + 0xf0b023c], al; xchg ebp, eax; ret 0xc483; 
0x0005538d: add byte ptr [eax], al; add byte ptr [ebx + 0xf10247c], cl; mov dh, 0x5f; or al, 0xf6; ret; 
0x00144599: add byte ptr [eax], al; add byte ptr [ebx + 0xf6f383c], al; xchg esp, eax; ret 0xdaf7; 
0x000dfce7: add byte ptr [eax], al; add byte ptr [ebx + 0xf], bl; inc esp; ret 0x90c3; 
0x001732f5: add byte ptr [eax], al; add byte ptr [ebx + 0xf], bl; mov dh, 2; pop esi; pop edi; ret; 
0x0007b347: add byte ptr [eax], al; add byte ptr [ebx + 2], bh; mov edx, dword ptr [ebp - 0x34]; lea esi, [esi]; mov eax, edi; call dword ptr gs:[0x10]; 
0x000872dc: add byte ptr [eax], al; add byte ptr [ebx + 2], bh; mov esi, 8; call dword ptr gs:[0x10]; 
0x00088a0d: add byte ptr [eax], al; add byte ptr [ebx + 2], bh; xor edx, edx; mov ecx, dword ptr [esp + 8]; mov esi, 8; call dword ptr gs:[0x10]; 
0x001046f0: add byte ptr [eax], al; add byte ptr [ebx + 2], bh; xor edx, edx; mov ecx, ebp; mov esi, 8; call dword ptr gs:[0x10]; 
0x0017a3bb: add byte ptr [eax], al; add byte ptr [ebx + 3], bh; call dword ptr gs:[0x10]; 
0x00143aa3: add byte ptr [eax], al; add byte ptr [ebx - 0x1137a], cl; jmp dword ptr [ebp - 0x75]; 
0x0015fdcf: add byte ptr [eax], al; add byte ptr [ebx - 0x12f63], cl; call dword ptr [eax - 0x18]; 
0x00135c7b: add byte ptr [eax], al; add byte ptr [ebx - 0x13341], cl; jmp dword ptr [ebp - 0x5f]; 
0x00037a95: add byte ptr [eax], al; add byte ptr [ebx - 0x13348], cl; jmp dword ptr [ebp - 0x75]; 
0x001343ab: add byte ptr [eax], al; add byte ptr [ebx - 0x1334a], cl; jmp dword ptr [ebp - 0x5f]; 
0x00152cdd: add byte ptr [eax], al; add byte ptr [ebx - 0x13351], cl; jmp dword ptr [ebp - 0x5f]; 
0x00058a8d: add byte ptr [eax], al; add byte ptr [ebx - 0x13369], cl; jmp dword ptr [ebp - 0x75]; 
0x00108675: add byte ptr [eax], al; add byte ptr [ebx - 0x1336a], cl; jmp dword ptr [ebp - 0x75]; 
0x0010a445: add byte ptr [eax], al; add byte ptr [ebx - 0x1336b], cl; jmp dword ptr [ebp - 0x75]; 
0x000db545: add byte ptr [eax], al; add byte ptr [ebx - 0x1336e], cl; jmp dword ptr [ebp - 0x5f]; 
0x00037a5d: add byte ptr [eax], al; add byte ptr [ebx - 0x13372], cl; jmp dword ptr [ebp - 0x75]; 
0x0010e8e5: add byte ptr [eax], al; add byte ptr [ebx - 0x13375], cl; jmp dword ptr [ebp - 0x5f]; 
0x000ddd5d: add byte ptr [eax], al; add byte ptr [ebx - 0x13375], cl; jmp dword ptr [ebp - 0x75]; 
0x00093215: add byte ptr [eax], al; add byte ptr [ebx - 0x13379], cl; jmp dword ptr [ebp - 0x75]; 
0x0003773d: add byte ptr [eax], al; add byte ptr [ebx - 0x1337a], cl; jmp dword ptr [ebp - 0x75]; 
0x00152e36: add byte ptr [eax], al; add byte ptr [ebx - 0x1337b], cl; push dword ptr [ecx]; fild dword ptr [ebx + 0xf0b023c]; xchg ebp, eax; ret; 
0x0013c4ba: add byte ptr [eax], al; add byte ptr [ebx - 0x1337d], cl; jmp dword ptr [ebp + 3]; 
0x0002dae5: add byte ptr [eax], al; add byte ptr [ebx - 0x1337d], cl; jmp dword ptr [ebp - 0x75]; 
0x0010f7eb: add byte ptr [eax], al; add byte ptr [ebx - 0x1337d], cl; jmp dword ptr [esi - 0x7d]; 
0x000d74bd: add byte ptr [eax], al; add byte ptr [ebx - 0x1337e], cl; jmp dword ptr [ebp - 0x75]; 
0x000376dd: add byte ptr [eax], al; add byte ptr [ebx - 0x1337f], cl; jmp dword ptr [ebp - 0x75]; 
0x00153ee8: add byte ptr [eax], al; add byte ptr [ebx - 0x13380], cl; inc dword ptr [ebx + 0xf0b023c]; xchg ebp, eax; ret 0xc483; 
0x0008e3bd: add byte ptr [eax], al; add byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x75]; 
0x0010eff6: add byte ptr [eax], al; add byte ptr [ebx - 0x13380], cl; jmp dword ptr [esi - 0x77]; 
0x00173295: add byte ptr [eax], al; add byte ptr [ebx - 0x137cdfaa], cl; add al, 0x29; ret 0x5052; 
0x00078608: add byte ptr [eax], al; add byte ptr [ebx - 0x137cf3c0], cl; add al, 0x29; ret 0xfac1; 
0x00138dea: add byte ptr [eax], al; add byte ptr [ebx - 0x14376], cl; jmp dword ptr [ebp - 0x75]; 
0x00098820: add byte ptr [eax], al; add byte ptr [ebx - 0x1637e], cl; call dword ptr [esi + 0x53]; 
0x0009a0a6: add byte ptr [eax], al; add byte ptr [ebx - 0x17c0f20], al; or ecx, dword ptr [edi]; inc esi; ret 0xfa89; 
0x001484c4: add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; ret; 
0x000e15c1: add byte ptr [eax], al; add byte ptr [ebx - 0x18f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x00105c51: add byte ptr [eax], al; add byte ptr [ebx - 0x19f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000b591e: add byte ptr [eax], al; add byte ptr [ebx - 0x1c877d74], cl; clc; inc dword ptr [ecx]; sar dword ptr [esi], 1; jmp ecx; 
0x000eac30: add byte ptr [eax], al; add byte ptr [ebx - 0x1e7efe1e], al; add byte ptr [eax], 0; add byte ptr [edi], cl; inc ebp; ret 0x5e5b; 
0x000c31d2: add byte ptr [eax], al; add byte ptr [ebx - 0x1f3e4fab], cl; add ch, byte ptr [ecx]; ret 0x28b; 
0x00116d8e: add byte ptr [eax], al; add byte ptr [ebx - 0x2776e73c], al; pop ebx; ret; 
0x000a1b73: add byte ptr [eax], al; add byte ptr [ebx - 0x2776fb3c], al; pop ebx; pop esi; ret; 
0x0004c6f4: add byte ptr [eax], al; add byte ptr [ebx - 0x27fefb3c], al; jmp eax; 
0x00104975: add byte ptr [eax], al; add byte ptr [ebx - 0x2dcefba5], cl; mov eax, 0x1b4; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x001658ec: add byte ptr [eax], al; add byte ptr [ebx - 0x2f76eb3c], al; pop ebx; pop esi; ret; 
0x0011aecb: add byte ptr [eax], al; add byte ptr [ebx - 0x2f76f73c], al; pop ebx; ret; 
0x00152199: add byte ptr [eax], al; add byte ptr [ebx - 0x2f76fb3c], al; pop ebx; pop edi; ret; 
0x0005039d: add byte ptr [eax], al; add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x0004fd55: add byte ptr [eax], al; add byte ptr [ebx - 0x36277b], al; call dword ptr [eax]; 
0x0004ec08: add byte ptr [eax], al; add byte ptr [ebx - 0x362f4b], cl; call dword ptr [edi - 1]; 
0x000c6718: add byte ptr [eax], al; add byte ptr [ebx - 0x362f63], cl; dec dword ptr [ebx - 0x36374b]; call dword ptr [edi - 1]; 
0x000c8565: add byte ptr [eax], al; add byte ptr [ebx - 0x364b63], cl; call dword ptr [esi - 1]; 
0x000c6684: add byte ptr [eax], al; add byte ptr [ebx - 0x364b63], cl; dec dword ptr [ecx - 0x361f73]; call dword ptr [eax + 0x6a]; 
0x0004eb64: add byte ptr [eax], al; add byte ptr [ebx - 0x365363], cl; dec dword ptr [ecx - 0x361f73]; call dword ptr [eax + 0x6a]; 
0x00129375: add byte ptr [eax], al; add byte ptr [ebx - 0x397cf314], al; add dword ptr [ebp - 0x18], edx; in al, dx; ret 0xfff8; 
0x000eab4d: add byte ptr [eax], al; add byte ptr [ebx - 0x3b7cc3ba], cl; add al, 0x5b; pop esi; ret; 
0x0003af0d: add byte ptr [eax], al; add byte ptr [ebx - 0x3b7ccbc0], cl; add al, 0x5b; pop esi; ret; 
0x00022823: add byte ptr [eax], al; add byte ptr [ebx - 0x3b7cef3c], al; add al, 0x5b; pop esi; ret; 
0x0016325d: add byte ptr [eax], al; add byte ptr [ebx - 0x3b7d], cl; call ptr [ebx + 0x5e]; pop edi; ret; 
0x0007ff04: add byte ptr [eax], al; add byte ptr [ebx - 0x3f7acbc0], cl; jne 0x7ff00; ret; 
0x0010415d: add byte ptr [eax], al; add byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x00099401: add byte ptr [eax], al; add byte ptr [ebx - 0x3fcefb3c], al; pop ebx; pop esi; ret; 
0x00104c4f: add byte ptr [eax], al; add byte ptr [ebx - 0x4274f8fc], cl; mov eax, 0x85fffffe; ror byte ptr [edi], 0x44; ret 0xec83; 
0x0005fd09: add byte ptr [eax], al; add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xf001; 
0x0014502d: add byte ptr [eax], al; add byte ptr [ebx - 0x44f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000e2499: add byte ptr [eax], al; add byte ptr [ebx - 0x46b73], cl; jmp dword ptr [esi - 0x77]; 
0x000e27ac: add byte ptr [eax], al; add byte ptr [ebx - 0x46f63], cl; call dword ptr [esi + 0x52]; 
0x000e2573: add byte ptr [eax], al; add byte ptr [ebx - 0x46f63], cl; call dword ptr [esi - 1]; 
0x00037982: add byte ptr [eax], al; add byte ptr [ebx - 0x46f7dba4], cl; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e4e44: add byte ptr [eax], al; add byte ptr [ebx - 0x47363], cl; call dword ptr [esi + 0x52]; 
0x000e4c13: add byte ptr [eax], al; add byte ptr [ebx - 0x47363], cl; call dword ptr [esi - 1]; 
0x001631cd: add byte ptr [eax], al; add byte ptr [ebx - 0x477d], cl; call ptr [ebx + 0x5e]; pop edi; ret; 
0x0007b34c: add byte ptr [eax], al; add byte ptr [ebx - 0x497233ab], cl; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edi; call dword ptr gs:[0x10]; 
0x0006156d: add byte ptr [eax], al; add byte ptr [ebx - 0x4f37b], cl; dec dword ptr [ebx - 0x13380]; dec dword ptr [ecx - 0x4f77b]; jmp dword ptr [ebp - 0x5f]; 
0x000606dd: add byte ptr [eax], al; add byte ptr [ebx - 0x4f37b], cl; jmp dword ptr [ebp - 0x75]; 
0x00126f09: add byte ptr [eax], al; add byte ptr [ebx - 0x4f763], cl; dec dword ptr [ebx - 0x4fb73]; jmp dword ptr [ebp - 1]; 
0x0005a975: add byte ptr [eax], al; add byte ptr [ebx - 0x59b7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000828bb: add byte ptr [eax], al; add byte ptr [ebx - 0x5d9adbc0], cl; inc byte ptr [eax + eax]; add byte ptr [ebx + 0x47401f8], al; ret; 
0x0008315f: add byte ptr [eax], al; add byte ptr [ebx - 0x5d9af7c0], cl; inc byte ptr [eax + eax]; add byte ptr [ebx + 0x87401f8], al; ret; 
0x0008cb8f: add byte ptr [eax], al; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x6174; 
0x0008bfa9: add byte ptr [eax], al; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x00058565: add byte ptr [eax], al; add byte ptr [ebx - 0x6072f714], al; jg 0x585a0; stc; call dword ptr [ecx + 0x53]; 
0x0002f7a2: add byte ptr [eax], al; add byte ptr [ebx - 0x6780], cl; dec dword ptr [ebx + 0x548b0204]; and al, 4; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0002ed82: add byte ptr [eax], al; add byte ptr [ebx - 0x6780], cl; dec dword ptr [ebx + 0x8b0204]; mov eax, dword ptr [eax + 0x58]; ret; 
0x0010e9c3: add byte ptr [eax], al; add byte ptr [ebx - 0x67cd7bb], cl; add ecx, dword ptr [edi]; xchg esp, eax; ret; 
0x0016d062: add byte ptr [eax], al; add byte ptr [ebx - 0x6972f714], al; clc; stc; call dword ptr [edx - 0x77]; 
0x0016c1bd: add byte ptr [eax], al; add byte ptr [ebx - 0x6c72f714], al; clc; stc; call dword ptr [edx - 0x77]; 
0x000feb6d: add byte ptr [eax], al; add byte ptr [ebx - 0x6e34b], cl; dec dword ptr [ebp - 0x661a37a]; call dword ptr [eax - 0x73]; 
0x00071840: add byte ptr [eax], al; add byte ptr [ebx - 0x6e76a7b8], cl; mov byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x00140ec6: add byte ptr [eax], al; add byte ptr [ebx - 0x7172fb14], al; pop ebp; stc; dec dword ptr [ebp - 0x6a28d7a]; call dword ptr [ecx - 0x77]; 
0x00163c15: add byte ptr [eax], al; add byte ptr [ebx - 0x72acf714], al; push esp; and al, 0x38; push edx; call dword ptr [eax + 0xc]; 
0x00081a81: add byte ptr [eax], al; add byte ptr [ebx - 0x72aff314], al; sub dword ptr [ebx + 0x3e], -7; call dword ptr [ecx + 0x52]; 
0x0015aec7: add byte ptr [eax], al; add byte ptr [ebx - 0x72affb14], al; cmp dword ptr [eax + 0x57], -7; call dword ptr [eax + 0x6a]; 
0x000252f7: add byte ptr [eax], al; add byte ptr [ebx - 0x72b3db84], cl; xchg eax, esp; push -7; call dword ptr [eax - 0x73]; 
0x00025ee0: add byte ptr [eax], al; add byte ptr [ebx - 0x72c3db8c], cl; xchg byte ptr [eax + 0x6a], ah; stc; call dword ptr [eax - 0x73]; 
0x00024c78: add byte ptr [eax], al; add byte ptr [ebx - 0x72c3dba4], cl; add dword ptr [eax], 0x6b; stc; call dword ptr [eax - 0x73]; 
0x000390c5: add byte ptr [eax], al; add byte ptr [ebx - 0x72cfdb8c], cl; dec esi; or byte ptr [ecx], bh; ret 0x8e0f; 
0x00095006: add byte ptr [eax], al; add byte ptr [ebx - 0x72e3dba4], cl; push ebx; or dh, dh; ret 0xf0f; 
0x0006b845: add byte ptr [eax], al; add byte ptr [ebx - 0x72ff22f9], cl; push eax; or byte ptr [ecx - 0x16e122e9], cl; ret; 
0x0006fc3d: add byte ptr [eax], al; add byte ptr [ebx - 0x73efb14], al; add dl, byte ptr [eax - 0x77]; ret; 
0x00121925: add byte ptr [eax], al; add byte ptr [ebx - 0x749bdbb4], cl; pop esp; and al, 0x60; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x0017a32c: add byte ptr [eax], al; add byte ptr [ebx - 0x74ebdbb4], cl; push esp; and al, 0x18; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x001260dc: add byte ptr [eax], al; add byte ptr [ebx - 0x74ebdbb4], cl; push esp; and al, 0x18; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00122fe2: add byte ptr [eax], al; add byte ptr [ebx - 0x74efdbb4], cl; pop esp; and al, 0xc; call dword ptr gs:[0x10]; 
0x00058a12: add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x0012543b: add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; push esp; and al, 0x10; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x000286d4: add byte ptr [eax], al; add byte ptr [ebx - 0x76dfdb8c], cl; ret 0x542b; 
0x000b9b9e: add byte ptr [eax], al; add byte ptr [ebx - 0x76f7dbbc], cl; ret; 
0x00166930: add byte ptr [eax], al; add byte ptr [ebx - 0x77], bl; rcr byte ptr [esi + 0x5f], 1; ret; 
0x000eaf0b: add byte ptr [eax], al; add byte ptr [ebx - 0x77], dl; ret; 
0x0003bd43: add byte ptr [eax], al; add byte ptr [ebx - 0x77cc7fc], cl; add al, 0x74; ret 0xb85b; 
0x00089115: add byte ptr [eax], al; add byte ptr [ebx - 0x77cf440], al; or ecx, dword ptr [edi]; xchg dword ptr [eax - 0x45000004], esp; or dword ptr [eax], 0xa30f0000; ret 0x830f; 
0x00161f24: add byte ptr [eax], al; add byte ptr [ebx - 0x7872ef3c], al; and al, 0x64; stc; call dword ptr [eax - 0x73]; 
0x0006cd0a: add byte ptr [eax], al; add byte ptr [ebx - 0x7a39fe20], al; inc ebx; idiv edi; jmp dword ptr [eax]; 
0x001576e3: add byte ptr [eax], al; add byte ptr [ebx - 0x7a72f314], al; fsub qword ptr [edx - 7]; call dword ptr [eax - 0x18]; 
0x001391e5: add byte ptr [eax], al; add byte ptr [ebx - 0x7a72f714], al; pop ebx; sub bh, cl; call dword ptr [eax + 0x53]; 
0x00166f79: add byte ptr [eax], al; add byte ptr [ebx - 0x7ae7dbac], cl; sal byte ptr [ebp + 0xc], cl; add esp, 0xc; ret; 
0x001500d4: add byte ptr [eax], al; add byte ptr [ebx - 0x7aefdbac], cl; sal byte ptr [eax + ebx - 0x7d], cl; in al, dx; or byte ptr [ebp - 0x6bca97f], cl; call dword ptr [eax + 0x52]; 
0x00151040: add byte ptr [eax], al; add byte ptr [ebx - 0x7bf00220], al; ret; 
0x00197a50: add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x000bd58e: add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fe13], al; ret; 
0x0010cc02: add byte ptr [eax], al; add byte ptr [ebx - 0x7c72f314], al; dec edx; stc; call dword ptr [eax - 0x18]; 
0x00168fe5: add byte ptr [eax], al; add byte ptr [ebx - 0x7c72f314], al; pop di; stc; call dword ptr [eax - 0x18]; 
0x000e60cd: add byte ptr [eax], al; add byte ptr [ebx - 0x7c72f314], al; push cs; dec eax; stc; call dword ptr [eax - 0x18]; 
0x000eb571: add byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; movsb byte ptr es:[edi], byte ptr [esi]; stc; call dword ptr [eax + 0x55]; 
0x000ccfd1: add byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; or eax, dword ptr [ebp - 7]; call dword ptr [eax + 0x56]; 
0x000eb423: add byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; push esi; dec eax; stc; call dword ptr [eax + 0x55]; 
0x0011f1f5: add byte ptr [eax], al; add byte ptr [ebx - 0x7c72fb3c], al; push 0x5bfff94a; pop esi; ret; 
0x000f1eb5: add byte ptr [eax], al; add byte ptr [ebx - 0x7cf4dcf6], cl; ret 0x8304; 
0x000f17cd: add byte ptr [eax], al; add byte ptr [ebx - 0x7cf7f6f6], cl; rol byte ptr [ebx + eax*4], 0xc2; add al, 0x39; ret; 
0x0004bf35: add byte ptr [eax], al; add byte ptr [ebx - 0x7cfb78ac], cl; ret 0x8901; 
0x0016bc7d: add byte ptr [eax], al; add byte ptr [ebx - 0x7f97f314], al; add dword ptr [eax], eax; add al, ch; ret; 
0x000668ad: add byte ptr [eax], al; add byte ptr [ebx - 0x87343], cl; dec dword ptr [ebp - 0x686db79]; call dword ptr [eax - 0x73]; 
0x000667eb: add byte ptr [eax], al; add byte ptr [ebx - 0x8737b], cl; inc dword ptr [ebx - 0x7f72f314]; aam 0x78; stc; call dword ptr [eax - 0x18]; 
0x0006b8cb: add byte ptr [eax], al; add byte ptr [ebx - 0x8977b], cl; inc dword ptr [ebx - 0x7f72f314]; aam 0x78; stc; call dword ptr [eax - 0x18]; 
0x0002de35: add byte ptr [eax], al; add byte ptr [ebx - 0x974b], cl; dec dword ptr [ebx - 0x936b]; jmp dword ptr [ebp - 0x5f]; 
0x00072306: add byte ptr [eax], al; add byte ptr [ebx - 0xa8fb14], al; jne 0x72318; push esi; call dword ptr [ebx + 0x1c]; 
0x0009a460: add byte ptr [eax], al; add byte ptr [ebx - 0xa9f714], al; jae 0x9a48e; call eax; 
0x00173127: add byte ptr [eax], al; add byte ptr [ebx - 0xaefb14], al; je 0x173155; or al, 0x53; call dword ptr [ebp + 0x3c]; 
0x001419c5: add byte ptr [eax], al; add byte ptr [ebx - 0xbb7b], cl; dec dword ptr [ebx - 0xa363]; dec dword ptr [ebp + 0x48d4004]; ret; 
0x0011f2d0: add byte ptr [eax], al; add byte ptr [ebx - 0xc780], cl; dec dword ptr [ebx - 0x3f7adbc0]; cmove eax, edx; ret; 
0x0009c983: add byte ptr [eax], al; add byte ptr [ebx - 0xf76fb3c], al; pop ebx; pop esi; ret; 
0x0006e4c4: add byte ptr [eax], al; add byte ptr [ebx], al; adc al, 0x86; jmp edx; 
0x00154d95: add byte ptr [eax], al; add byte ptr [ebx], al; je 0x154dbf; cmp al, 0x89; ret; 
0x00115aba: add byte ptr [eax], al; add byte ptr [ecx + 0x10], bh; call dword ptr gs:[0x10]; 
0x00083b2f: add byte ptr [eax], al; add byte ptr [ecx + 0x10eb8c3], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000d8f98: add byte ptr [eax], al; add byte ptr [ecx + 0x13c2484], cl; add byte ptr [eax], al; xor eax, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x00108cda: add byte ptr [eax], al; add byte ptr [ecx + 0x18c2484], cl; add byte ptr [eax], al; xor eax, eax; mov eax, 0x17f; call dword ptr gs:[0x10]; 
0x00095b8b: add byte ptr [eax], al; add byte ptr [ecx + 0x1c829da], cl; lds ebp, ptr [ecx]; ret 0x4589; 
0x000b9836: add byte ptr [eax], al; add byte ptr [ecx + 0x244489da], cl; or byte ptr [ebp - 0x7efb7884], cl; ret 0; 
0x0004ac2e: add byte ptr [eax], al; add byte ptr [ecx + 0x3004bbe1], cl; add byte ptr [eax], al; mov eax, 0x180; call dword ptr gs:[0x10]; 
0x0014746b: add byte ptr [eax], al; add byte ptr [ecx + 0x31102444], cl; shr byte ptr [edx + 2], 0x8d; xor dword ptr [edi + 0x2d], 0xfffffff9; call dword ptr [eax + 0x51]; 
0x001252e7: add byte ptr [eax], al; add byte ptr [ecx + 0x311c2444], cl; ror byte ptr [ebx - 0x17c7dba4], 0x67; aam 0xf5; dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x00124937: add byte ptr [eax], al; add byte ptr [ecx + 0x311c2444], cl; ror byte ptr [ebx - 0x17cbdba4], 0x17; fdivrp st(5); dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x00124c17: add byte ptr [eax], al; add byte ptr [ecx + 0x311c2444], cl; ror byte ptr [ebx - 0x17cbdba4], 0x37; fcomi st(5); dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x00124d67: add byte ptr [eax], al; add byte ptr [ecx + 0x311c2444], cl; ror byte ptr [ebx - 0x17cbdba4], 0xe7; fprem1; dec dword ptr [ebp - 0x76fbdbb4]; ret 0x448b; 
0x00024124: add byte ptr [eax], al; add byte ptr [ecx + 0x31342454], cl; ror byte ptr [ebp - 0x6d5a469], cl; call dword ptr [edx + 0x50]; 
0x00165227: add byte ptr [eax], al; add byte ptr [ecx + 0x31382444], cl; rcl byte ptr [edi - 0x18], 0x3a; add al, 0xf5; call ecx; 
0x00165307: add byte ptr [eax], al; add byte ptr [ecx + 0x31382444], cl; rcl byte ptr [edi - 0x18], 0x5a; add esi, ebp; call ecx; 
0x00116690: add byte ptr [eax], al; add byte ptr [ecx + 0x36b8c7], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0008485a: add byte ptr [eax], al; add byte ptr [ecx + 0x3ffffa], al; add byte ptr [edi + 0xb], dh; ret; 
0x0012ead8: add byte ptr [eax], al; add byte ptr [ecx + 0x428be045], cl; or al, 0x89; ret; 
0x000f609f: add byte ptr [eax], al; add byte ptr [ecx + 0x43b60fc6], cl; add al, 0x89; ret 0xe283; 
0x001243e7: add byte ptr [eax], al; add byte ptr [ecx + 0x448b2404], cl; and al, 0x24; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00124b97: add byte ptr [eax], al; add byte ptr [ecx + 0x448b2404], cl; and al, 0x28; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001637ec: add byte ptr [eax], al; add byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x00116655: add byte ptr [eax], al; add byte ptr [ecx + 0x5409], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0002d8c3: add byte ptr [eax], al; add byte ptr [ecx + 0x5b082454], cl; jmp 0x2def0; pop ebx; ret; 
0x000719a0: add byte ptr [eax], al; add byte ptr [ecx + 0x5b082454], cl; jmp eax; 
0x000ad1cd: add byte ptr [eax], al; add byte ptr [ecx + 0x5b5e5ff8], cl; ret; 
0x0011fc95: add byte ptr [eax], al; add byte ptr [ecx + 0x5e5b1056], cl; pop edi; ret; 
0x000d867a: add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x00071bdc: add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x00071909: add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf8], cl; ret; 
0x00066f50: add byte ptr [eax], al; add byte ptr [ecx + 0x6785c6d3], cl; idiv edi; jmp dword ptr [eax]; 
0x000890cb: add byte ptr [eax], al; add byte ptr [ecx + 0x7b9eb], cl; add byte ptr [eax], al; mov esi, edx; call dword ptr gs:[0x10]; 
0x0008abd7: add byte ptr [eax], al; add byte ptr [ecx + 0x7b9fb], cl; add byte ptr [eax], al; mov esi, edx; call dword ptr gs:[0x10]; 
0x00086a36: add byte ptr [eax], al; add byte ptr [ecx + 0x7c888dfa], cl; add al, 0; add byte ptr [eax + 0xaf], bh; call dword ptr gs:[0x10]; 
0x000951bf: add byte ptr [eax], al; add byte ptr [ecx + 0x7f883], cl; add byte ptr [ebp - 0x1959bf7d], cl; call dword ptr [eax + 0x56]; 
0x0019e15e: add byte ptr [eax], al; add byte ptr [ecx + 0x7fffe2], al; add byte ptr [ecx - 0x76f3dbac], cl; ret 0xb70f; 
0x000831ab: add byte ptr [eax], al; add byte ptr [ecx + 0x80], bh; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x00091acd: add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; call dword ptr gs:[0x10]; 
0x00086c7a: add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0016f073: add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000839cc: add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; xor esi, esi; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x0008980a: add byte ptr [eax], al; add byte ptr [ecx + 0x87], bh; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x00036a73: add byte ptr [eax], al; add byte ptr [ecx + 0x9024bc], al; add byte ptr [eax], al; push eax; ret; 
0x00084c95: add byte ptr [eax], al; add byte ptr [ecx + 0x94c4], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00162095: add byte ptr [eax], al; add byte ptr [ecx + 0xa0c4], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00037a0b: add byte ptr [eax], al; add byte ptr [ecx + 0xb3b8c2], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000de363: add byte ptr [eax], al; add byte ptr [ecx + 0xc], bh; lea ebx, [eax + 0x70]; mov dword ptr [eax + 0x70], ebx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x0015145d: add byte ptr [eax], al; add byte ptr [ecx + 1], bh; mov eax, ecx; ret; 
0x0008b3b8: add byte ptr [eax], al; add byte ptr [ecx + 7], bh; mov dword ptr [ebx + 4], 0; mov esi, edx; call dword ptr gs:[0x10]; 
0x000379e4: add byte ptr [eax], al; add byte ptr [ecx + 8], bh; call dword ptr gs:[0x10]; 
0x0008b032: add byte ptr [eax], al; add byte ptr [ecx + 8], bh; mov esi, edx; call dword ptr gs:[0x10]; 
0x0004bc12: add byte ptr [eax], al; add byte ptr [ecx + eax*2 - 0x7d], dh; ret; 
0x0004aa01: add byte ptr [eax], al; add byte ptr [ecx + ebx*2 - 0x77], dh; ret 0xc031; 
0x0007bc85: add byte ptr [eax], al; add byte ptr [ecx + ecx*8 - 0x137cb18b], al; or byte ptr [ecx - 0x7c72f7bb], cl; rcr byte ptr [ecx], 0xe5; call dword ptr [eax - 0x73]; 
0x0007b7ce: add byte ptr [eax], al; add byte ptr [ecx - 0x137cefba], cl; or byte ptr [ebp - 0x1aeaef7d], cl; dec dword ptr [ecx - 0x72afebaa]; xor dword ptr [eax + 0x14], 0xffffffe5; call dword ptr [eax - 0x73]; 
0x0010f6d2: add byte ptr [eax], al; add byte ptr [ecx - 0x277c9912], cl; jmp dword ptr [esi - 0x77]; 
0x00089602: add byte ptr [eax], al; add byte ptr [ecx - 0x2dcef7b0], cl; mov eax, edx; ret; 
0x000508d8: add byte ptr [eax], al; add byte ptr [ecx - 0x35ef7b], cl; dec dword ptr [ebp - 0x35f37b]; dec dword ptr [ecx - 0x361f7b]; inc dword ptr [ebx - 0x36277b]; jmp dword ptr [eax]; 
0x0008bf9c: add byte ptr [eax], al; add byte ptr [ecx - 0x3600f785], al; lcall 0, 0xc4870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x000c6360: add byte ptr [eax], al; add byte ptr [ecx - 0x363b6b], cl; dec dword ptr [ebx - 0x36476b]; call dword ptr [eax - 0x73]; 
0x0004e848: add byte ptr [eax], al; add byte ptr [ecx - 0x365f6b], cl; dec dword ptr [ebx - 0x363f6b]; call dword ptr [eax - 0x73]; 
0x0016685b: add byte ptr [eax], al; add byte ptr [ecx - 0x3776f3b0], cl; pop ebx; ret; 
0x0016681b: add byte ptr [eax], al; add byte ptr [ecx - 0x3776f3b0], cl; ret; 
0x00150c12: add byte ptr [eax], al; add byte ptr [ecx - 0x3b7ceefc], cl; add al, 0x5b; pop esi; ret; 
0x0008d0a3: add byte ptr [eax], al; add byte ptr [ecx - 0x3fcee3be], cl; pop ebx; ret; 
0x0014388f: add byte ptr [eax], al; add byte ptr [ecx - 0x44373], cl; jmp dword ptr [ebp - 0x75]; 
0x00125b9f: add byte ptr [eax], al; add byte ptr [ecx - 0x44e7dba4], cl; or al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00124805: add byte ptr [eax], al; add byte ptr [ecx - 0x47cbdb84], cl; sbb eax, 0xf000000; inc ebp; ret; 
0x000388d2: add byte ptr [eax], al; add byte ptr [ecx - 0x47dfdbbc], cl; mov dl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000622df: add byte ptr [eax], al; add byte ptr [ecx - 0x51773], cl; call dword ptr [eax + 0x53]; 
0x00082829: add byte ptr [eax], al; add byte ptr [ecx - 0x5c9af3b0], cl; jl 0x82833; add byte ptr [eax], al; ret; 
0x0011fe7b: add byte ptr [eax], al; add byte ptr [ecx - 0x6c72fbaa], cl; ret 0xf94d; 
0x0017278c: add byte ptr [eax], al; add byte ptr [ecx - 0x72cfdbbc], cl; jl 0x1727ba; xor byte ptr [edi - 0x18], dl; or dword ptr [ecx], 0xfffffff1; jmp dword ptr [ebp - 0x75]; 
0x000265e0: add byte ptr [eax], al; add byte ptr [ecx - 0x72d7dbbc], cl; inc edi; and byte ptr [ecx - 0x9d3dbbc], cl; ret 0x7501; 
0x00122832: add byte ptr [eax], al; add byte ptr [ecx - 0x7497dbbc], cl; and byte ptr [eax - 0x77000000], 0x44; and al, 0x6c; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x000827e8: add byte ptr [eax], al; add byte ptr [ecx - 0x749ae3b0], cl; adc eax, 0x7c; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x80], eax; ret; 
0x001658c4: add byte ptr [eax], al; add byte ptr [ecx - 0x74f3dbbc], cl; add eax, dword ptr [ebp + 0x317774c0]; rol byte ptr [ebx - 0x6bf0fd08], cl; ret 0xf883; 
0x000386b7: add byte ptr [eax], al; add byte ptr [ecx - 0x76057617], cl; inc esp; and al, 8; mov eax, 0x1a5; call dword ptr gs:[0x10]; 
0x0003865f: add byte ptr [eax], al; add byte ptr [ecx - 0x76057617], cl; inc esp; and al, 8; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x0005c2ff: add byte ptr [eax], al; add byte ptr [ecx - 0x760e7638], cl; dec byte ptr [ecx - 0x5ab7b]; jmp dword ptr [esi - 0x70]; 
0x000d28da: add byte ptr [eax], al; add byte ptr [ecx - 0x76d7dbbc], cl; ret 0xa165; 
0x00091676: add byte ptr [eax], al; add byte ptr [ecx - 0x76dbdbb4], cl; retf 0x4c8b; and al, 0x18; call dword ptr gs:[0x10]; 
0x00094fa5: add byte ptr [eax], al; add byte ptr [ecx - 0x76f3db94], cl; ret; 
0x0015d87f: add byte ptr [eax], al; add byte ptr [ecx - 0x76f7dbb4], cl; inc esp; and al, 4; jmp edx; 
0x00124ac6: add byte ptr [eax], al; add byte ptr [ecx - 0x76fbdb8c], cl; loope 0x124a59; ret 0x448b; 
0x00024152: add byte ptr [eax], al; add byte ptr [ecx - 0x76ff7439], cl; ret 0xce80; 
0x0019dcb4: add byte ptr [eax], al; add byte ptr [ecx - 0x7c07763a], cl; ret; 
0x00124f1a: add byte ptr [eax], al; add byte ptr [ecx - 0x7ce7dbbc], cl; ret; 
0x0003a82e: add byte ptr [eax], al; add byte ptr [ecx - 0x7cebdbb4], cl; in al, dx; or byte ptr [edx], ch; push edx; call edi; 
0x0015cb9a: add byte ptr [eax], al; add byte ptr [ecx - 0x7cf3dbbc], cl; in al, dx; or byte ptr [ebp - 0x69d3d7d], cl; call dword ptr [eax - 1]; 
0x000285c6: add byte ptr [eax], al; add byte ptr [ecx - 0x7cf51439], cl; ret; 
0x0004084c: add byte ptr [eax], al; add byte ptr [ecx - 0x7cfbdba4], cl; rcr byte ptr [ecx], 0x39; ror byte ptr [edi], 1; dec edi; ret 0xf001; 
0x00045a49: add byte ptr [eax], al; add byte ptr [ecx - 0x7e38fe26], cl; ret 0; 
0x0004ac8c: add byte ptr [eax], al; add byte ptr [ecx - 0x7f], bl; ror dword ptr [edx], 0; add byte ptr [eax], al; mov dword ptr [edx], ecx; ret; 
0x000e0244: add byte ptr [eax], al; add byte ptr [ecx - 0x8b7b], cl; jmp dword ptr [ebp - 0x75]; 
0x00141490: add byte ptr [eax], al; add byte ptr [ecx - 0xab7b], cl; call dword ptr [eax + 0x6a]; 
0x0016a556: add byte ptr [eax], al; add byte ptr [ecx - 0xb77b], cl; dec dword ptr [ecx - 0xbb6b]; jmp dword ptr [ebp - 0x5f]; 
0x000dd842: add byte ptr [eax], al; add byte ptr [ecx - 0xfbbf017], cl; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x0003ab0f: add byte ptr [eax], al; add byte ptr [ecx - 0xffc2ac], cl; jae 0x3ab1d; call eax; 
0x000b541d: add byte ptr [eax], al; add byte ptr [ecx - 1], bh; cmovb eax, ecx; ret; 
0x000b567a: add byte ptr [eax], al; add byte ptr [ecx], ah; ret 0x2474; 
0x000847d5: add byte ptr [eax], al; add byte ptr [ecx], al; add esp, 4; pop esi; pop edi; ret; 
0x000b3735: add byte ptr [eax], al; add byte ptr [ecx], al; clc; add eax, ecx; pop edi; ret; 
0x000952fa: add byte ptr [eax], al; add byte ptr [ecx], al; fidivr dword ptr [ecx]; ret 0xa72; 
0x0016fe5d: add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x1deb; 
0x000ef95c: add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x4489; 
0x001273e9: add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x8389; 
0x0016aea8: add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x858b; 
0x000f3057: add byte ptr [eax], al; add byte ptr [ecx], al; ret; 
0x0016f27a: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x430f; 
0x000cc8c6: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x470f; 
0x000ec76e: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x4e0f; 
0x0008cb98: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x6174; 
0x0008d2f4: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x6574; 
0x0008c24b: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x7e74; 
0x0008bfb2: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x840f; 
0x0007ce41: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x860f; 
0x00067e98: add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x00152b9d: add byte ptr [eax], al; add byte ptr [ecx], bh; retf 0xec75; add esp, 8; pop ebx; ret; 
0x000ee44d: add byte ptr [eax], al; add byte ptr [ecx], ch; fadd dword ptr [ecx]; ret 0x9aeb; 
0x0009cdcc: add byte ptr [eax], al; add byte ptr [ecx], ch; fdivr dword ptr [ecx]; fmul dword ptr [edi]; inc edx; ret; 
0x000c28c2: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x1a8b; 
0x000c2fc7: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x28b; 
0x000c2e7a: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x3a8b; 
0x000d099a: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x448b; 
0x000d2c71: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x448d; 
0x000d5bf4: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x468b; 
0x000d2bd9: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x548d; 
0x0009ff92: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5589; 
0x000d4d5b: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x858b; 
0x000c2c56: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xa8b; 
0x000d135a: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xbe0f; 
0x000cc521: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xc889; 
0x000cf6c9: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xd129; 
0x00044454: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xd889; 
0x00099443: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xda21; 
0x0002c6e6: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xf883; 
0x000c876e: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xf889; 
0x0002c623: add byte ptr [eax], al; add byte ptr [ecx], ch; ret; 
0x0019d0e3: add byte ptr [eax], al; add byte ptr [ecx], cl; ret 0xb60f; 
0x0019d8dd: add byte ptr [eax], al; add byte ptr [ecx], cl; ret 0xbc89; 
0x000980ec: add byte ptr [eax], al; add byte ptr [ecx], cl; ret; 
0x001268d6: add byte ptr [eax], al; add byte ptr [ecx], dh; idiv byte ptr [ebx + 0x18]; or dh, 1; call dword ptr gs:[0x10]; 
0x00125d36: add byte ptr [eax], al; add byte ptr [ecx], dh; idiv byte ptr [ebx + 0xe]; or dh, 1; call dword ptr gs:[0x10]; 
0x00084a52: add byte ptr [eax], al; add byte ptr [ecx], dh; idiv byte ptr [edx + 0x7fffffff]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00085553: add byte ptr [eax], al; add byte ptr [ecx], dh; idiv byte ptr [edx + 1]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00099371: add byte ptr [eax], al; add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0008c136: add byte ptr [eax], al; add byte ptr [ecx], dh; rol byte ptr [eax + 0xf00197d], cl; xchg ebp, eax; ret 0xe2c1; 
0x0008c87f: add byte ptr [eax], al; add byte ptr [ecx], dh; rol byte ptr [eax + 0xf00197f], cl; xchg ebp, eax; ret 0xe2c1; 
0x00088a12: add byte ptr [eax], al; add byte ptr [ecx], dh; ror byte ptr [ebx - 0x41f7dbb4], cl; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001046f5: add byte ptr [eax], al; add byte ptr [ecx], dh; ror byte ptr [ecx + 0x8bee9], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000506e0: add byte ptr [eax], al; add byte ptr [ecx], dh; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000886d7: add byte ptr [eax], al; add byte ptr [ecx], dh; sal al, cl; cmpxchg dword ptr [esp + 4], edx; ret; 
0x000843b3: add byte ptr [eax], al; add byte ptr [ecx], dh; sal bl, 0xa5; pop esi; pop edi; ret; 
0x00086c16: add byte ptr [eax], al; add byte ptr [ecx], dh; sar byte ptr [ecx + 0x80], cl; mov eax, edi; mov esi, edx; call dword ptr gs:[0x10]; 
0x00086ba0: add byte ptr [eax], al; add byte ptr [ecx], dh; sar byte ptr [esi + 0x53053053], cl; lea ebx, [eax + 0x520]; mov eax, 0x182; call dword ptr gs:[0x10]; 
0x0008b538: add byte ptr [eax], al; add byte ptr [ecx], dh; test byte ptr [ecx + 0x80e1], 0; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00072dd7: add byte ptr [eax], al; add byte ptr [edi + 0x196882], al; add byte ptr [ebx + 0xb7f01f8], al; ret; 
0x0007be57: add byte ptr [eax], al; add byte ptr [edi + 0x197c82], al; add byte ptr [ebx + 0xb7f01f8], al; ret; 
0x00080f67: add byte ptr [eax], al; add byte ptr [edi + 0x199c82], al; add byte ptr [ebx + 0xb7f01f8], al; ret; 
0x00058c3a: add byte ptr [eax], al; add byte ptr [edi + 0x1f88302], al; jg 0x58c48; ret; 
0x0002196f: add byte ptr [eax], al; add byte ptr [edi + 0x5d], bl; jmp eax; 
0x000abb5d: add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000c9bb4: add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x00111a95: add byte ptr [eax], al; add byte ptr [edi + 0xf], bl; inc edi; ret 0x66c3; 
0x000c9cd2: add byte ptr [eax], al; add byte ptr [edi + 2], bh; neg eax; ret; 
0x0018f0a2: add byte ptr [eax], al; add byte ptr [edi + 2], dh; neg eax; add esp, 4; pop ebx; ret; 
0x0018c9f2: add byte ptr [eax], al; add byte ptr [edi + 2], dh; neg eax; pop ebp; ret; 
0x00193122: add byte ptr [eax], al; add byte ptr [edi + 2], dh; neg eax; pop edi; pop ebx; ret; 
0x0018b1b2: add byte ptr [eax], al; add byte ptr [edi + 2], dh; neg eax; ret; 
0x00193cd8: add byte ptr [eax], al; add byte ptr [edi + 3], bh; neg eax; ret; 
0x0006fd38: add byte ptr [eax], al; add byte ptr [edi + 7], dh; mov eax, dword ptr [ecx + edx*4 - 0xbe0]; ret; 
0x00194003: add byte ptr [eax], al; add byte ptr [edi + 8], bh; neg eax; ret; 
0x000c9ca2: add byte ptr [eax], al; add byte ptr [edi + 9], bh; neg eax; pop edi; pop esi; ret; 
0x0009b3e3: add byte ptr [eax], al; add byte ptr [edi + ecx], al; inc ebp; ret 0x66c3; 
0x0014e3e4: add byte ptr [eax], al; add byte ptr [edi - 0x18], dl; ret; 
0x0004ef4b: add byte ptr [eax], al; add byte ptr [edi], cl; dec ebp; ror dword ptr [edi], 1; dec ebp; ret; 
0x000d50a4: add byte ptr [eax], al; add byte ptr [edi], cl; dec ecx; ret 0x1c8d; 
0x000d4f46: add byte ptr [eax], al; add byte ptr [edi], cl; dec ecx; ret 0xd801; 
0x0006e9b7: add byte ptr [eax], al; add byte ptr [edi], cl; dec ecx; ret; 
0x000d3233: add byte ptr [eax], al; add byte ptr [edi], cl; dec edi; ret; 
0x0009134f: add byte ptr [eax], al; add byte ptr [edi], cl; dec esi; ret 0x8389; 
0x0004f862: add byte ptr [eax], al; add byte ptr [edi], cl; dec esi; ret 0x9d8d; 
0x00052b30: add byte ptr [eax], al; add byte ptr [edi], cl; dec esi; ret 0xec83; 
0x0004bb0b: add byte ptr [eax], al; add byte ptr [edi], cl; dec esi; ret; 
0x000f247b: add byte ptr [eax], al; add byte ptr [edi], cl; dec esp; ret 0xc183; 
0x0014306b: add byte ptr [eax], al; add byte ptr [edi], cl; dec esp; ret; 
0x0009246a: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0x45c7; 
0x000eac39: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0x5e5b; 
0x000d70af: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0x8dc3; 
0x000dfe58: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0x90c3; 
0x000dfd09: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0xb8c3; 
0x000a16ff: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0xc289; 
0x00091250: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0xc3c3; 
0x0012480e: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret; 
0x000d8d70: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebx; int1; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00111aed: add byte ptr [eax], al; add byte ptr [edi], cl; inc edi; ret 0x548b; 
0x0008d79c: add byte ptr [eax], al; add byte ptr [edi], cl; inc edi; ret 0x8dc3; 
0x0008df21: add byte ptr [eax], al; add byte ptr [edi], cl; inc edi; ret 0x948b; 
0x000cc5d1: add byte ptr [eax], al; add byte ptr [edi], cl; inc edi; ret 0x960f; 
0x0009458c: add byte ptr [eax], al; add byte ptr [edi], cl; inc edi; ror dword ptr [ecx + 0x3b6c82], 0; ret; 
0x00154d77: add byte ptr [eax], al; add byte ptr [edi], cl; inc edx; ret 0x4489; 
0x001408ad: add byte ptr [eax], al; add byte ptr [edi], cl; inc edx; ret 0x8dc3; 
0x00125998: add byte ptr [eax], al; add byte ptr [edi], cl; inc edx; ret 0x90c3; 
0x000e0cc0: add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0x31c3; 
0x000b6780: add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0x44c7; 
0x000dfdf7: add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0x66c3; 
0x00168021: add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0x8589; 
0x00084756: add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0x8dc3; 
0x000d37de: add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret; 
0x000eeb5b: add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0x14; add eax, dword ptr [ecx]; ret 0xb60f; 
0x0007b205: add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0x45; aam 0x89; ret 0xf889; 
0x000573b7: add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0x55; or al, 0xf6; ret 0xf40; 
0x0006b674: add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0x57; or al, 0xf6; ret 0xf08; 
0x00140745: add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0x5a; add dword ptr [ebp - 0x76fde7bc], ecx; ret; 
0x000b38e4: add byte ptr [eax], al; add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x0013b9ea: add byte ptr [eax], al; add byte ptr [edi], cl; mov edi, 0x2cc86; add byte ptr [ecx], ch; ret 0xc031; 
0x000b3cbd: add byte ptr [eax], al; add byte ptr [edi], cl; mov esp, 0x5ff801c0; ret; 
0x000afcbd: add byte ptr [eax], al; add byte ptr [edi], cl; mov esp, 0x83ce01d2; ret 0x2910; 
0x0004042f: add byte ptr [eax], al; add byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00145f59: add byte ptr [eax], al; add byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; ret; 
0x000db92d: add byte ptr [eax], al; add byte ptr [edi], cl; test byte ptr [eax - 0x16000002], bh; ret 0xfffc; 
0x0002dbb2: add byte ptr [eax], al; add byte ptr [edi], cl; test byte ptr [ecx + eax], bl; add byte ptr [ebx - 0x1337d], cl; jmp dword ptr [ebp - 0x75]; 
0x000fef7f: add byte ptr [eax], al; add byte ptr [edi], cl; test byte ptr [edi - 0x16000003], cl; ret; 
0x0013b9c7: add byte ptr [eax], al; add byte ptr [edi], cl; test dl, bh; add al, byte ptr [eax]; add byte ptr [ebx - 0x1337a], cl; jmp dword ptr [ebp - 0x75]; 
0x00192b4d: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [eax + 2], edx; add byte ptr [eax], al; pop ebx; ret; 
0x0019244d: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [eax + 9], edx; add byte ptr [eax], al; pop ebx; ret; 
0x000d1a63: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [eax], ebp; loope 0xd1a6a; call dword ptr [edi + 0x57]; 
0x00193f3a: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000000], edi; ret; 
0x00192bf8: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000001], esp; ret; 
0x00192a18: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000003], eax; ret; 
0x001924e8: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000008], esi; ret; 
0x00192842: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebp + 5], eax; add byte ptr [eax], al; pop ebx; ret; 
0x00192614: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebx + 7], esi; add byte ptr [eax], al; pop ebx; ret; 
0x0019271c: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ecx + 0x5b000006], eax; ret; 
0x00193eae: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ecx + 1], ecx; add byte ptr [eax], al; pop ebx; ret; 
0x00159181: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ecx - 0x7d000000], ebx; les esi, ptr [ebx + ebx*2]; pop esi; ret; 
0x00192691: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [edi + eax], ecx; add byte ptr [eax], al; pop ebx; ret; 
0x0019967d: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [edx - 0x76fffffe], edx; ret; 
0x0010ac8b: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [edx - 0x7d000000], edi; les esp, ptr [ebx + ebx*2]; pop esi; ret; 
0x00192e01: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [esi], eax; pop ss; bnd call dword ptr [ebx - 0x18]; 
0x0018cbf1: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [esi], edx; jns 0x18cbeb; call dword ptr [ebx - 0x18]; 
0x000dda2a: add byte ptr [eax], al; add byte ptr [edi], cl; test eax, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b64c4], al; ret; 
0x00193301: add byte ptr [eax], al; add byte ptr [edi], cl; test esi, esp; adc dh, dl; call dword ptr [ebx - 0x18]; 
0x0018f101: add byte ptr [eax], al; add byte ptr [edi], cl; test esi, esp; push esp; bnd call dword ptr [ebx - 0x18]; 
0x0007ff60: add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ret 0x40c7; 
0x0019dbed: add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ret 0x940b; 
0x000c1dde: add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ret 0xd839; 
0x0004d4ba: add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ror byte ptr [edi], 0x95; ret; 
0x0010cb43: add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0x458b; 
0x0010ea75: add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0x798b; 
0x000c5ed0: add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0x8589; 
0x00049e4e: add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret; 
0x000dfd89: add byte ptr [eax], al; add byte ptr [edx + 0x40], bh; cmove eax, edx; ret; 
0x0015db76: add byte ptr [eax], al; add byte ptr [edx + 0x56], dl; call dword ptr [eax + 4]; 
0x00158948: add byte ptr [eax], al; add byte ptr [edx + 0x59], bl; push 0; push esi; call dword ptr [eax + 0x14]; 
0x000dfcc0: add byte ptr [eax], al; add byte ptr [edx + 0x7d00], bh; pop ebx; cmove eax, edx; ret; 
0x00084f9f: add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; call dword ptr gs:[0x10]; 
0x000dfc83: add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; pop ebx; cmove eax, edx; ret; 
0x0008c0bf: add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; setne cl; shl ecx, 7; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008d293: add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008a374: add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008505d: add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008c4d9: add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000857e4: add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000dfce2: add byte ptr [eax], al; add byte ptr [edx + 0xfa], bh; pop ebx; cmove eax, edx; ret; 
0x000dfca5: add byte ptr [eax], al; add byte ptr [edx + 0xfde8], bh; pop ebx; cmove eax, edx; ret; 
0x000dfc53: add byte ptr [eax], al; add byte ptr [edx + 0xfffa], bh; cmove eax, edx; pop ebx; ret; 
0x00083782: add byte ptr [eax], al; add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x0016f078: add byte ptr [eax], al; add byte ptr [edx + 1], bh; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0014e2cd: add byte ptr [eax], al; add byte ptr [edx + 1], bh; pop ebx; pop esi; mov eax, edx; ret; 
0x0008328c: add byte ptr [eax], al; add byte ptr [edx + 1], bh; push ebx; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00085ad9: add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008b533: add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00083993: add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008502b: add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00085cb5: add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0007d3d2: add byte ptr [eax], al; add byte ptr [edx + 1], ch; push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x000831b0: add byte ptr [eax], al; add byte ptr [edx + 2], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008322f: add byte ptr [eax], al; add byte ptr [edx + 2], bh; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0007130b: add byte ptr [eax], al; add byte ptr [edx + 2], ch; push 0; push 0; push ebp; call dword ptr [esi + 0x40]; 
0x0007e070: add byte ptr [eax], al; add byte ptr [edx + 2], ch; push 0; push 0; push ebx; call dword ptr [esi + 0x40]; 
0x000b4e54: add byte ptr [eax], al; add byte ptr [edx - 9], al; ret 3; 
0x0004a9fd: add byte ptr [eax], al; add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ecx + ebx*2 - 0x77], dh; ret 0xc031; 
0x0007d95d: add byte ptr [eax], al; add byte ptr [edx], ch; push ebp; push edi; push ebx; call dword ptr [esi + 0x40]; 
0x00164727: add byte ptr [eax], al; add byte ptr [edx], ch; push edi; call dword ptr [eax + 0x14]; 
0x0015aa4e: add byte ptr [eax], al; add byte ptr [edx], ch; push esi; call dword ptr [eax + 0x14]; 
0x0019d8d2: add byte ptr [eax], al; add byte ptr [esi + 0x25], ah; add byte ptr [eax - 0x6bdb5377], al; add byte ptr [eax], al; add byte ptr [ecx], cl; ret 0xbc89; 
0x0004aea2: add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x000a5ded: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x000a5dfd: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x000a5ddd: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000a5e0d: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x00193921: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; cmp ah, byte ptr [ebx - 0x35]; add cl, byte ptr [edi]; xchg esp, eax; ret; 
0x0017b08d: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; outsb dx, byte ptr [esi]; shl byte ptr [esi + 0xf], 0x70; rol byte ptr [eax], 0xf7; ret 0xf; 
0x000b3bcf: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x000b3eb8: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000b3edd: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ror dword ptr [edi], 0xbd; rol byte ptr [ecx], 0xc8; ret; 
0x000872e1: add byte ptr [eax], al; add byte ptr [esi + 8], bh; call dword ptr gs:[0x10]; 
0x0003860b: add byte ptr [eax], al; add byte ptr [esi + 8], bh; mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x00086a31: add byte ptr [eax], al; add byte ptr [esi + 8], bh; mov edx, edi; lea ecx, [eax + 0x47c]; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x000b3ccb: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; bsf eax, eax; lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x0007f9db: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; endbr32; mov eax, 0xffffffff; ret; 
0x00080eab: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x001587eb: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; endbr32; ret; 
0x00166b8b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; endbr32; xor eax, eax; ret; 
0x000d718b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; lea ecx, [esp + 0x14]; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x0002ed4b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; lea edx, [ecx - 0x6d179]; mov eax, edx; pop ebx; ret; 
0x000a827b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; ret; 
0x000acb4b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x000a828b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; ret; 
0x000a3e9b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edx; ret; 
0x000a5d9b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov dword ptr [ecx], edx; mov word ptr [ecx + 4], dx; pop ebx; ret; 
0x0008462b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, 0x16; ret; 
0x000dfd1b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, 0x7e; pop ebx; ret; 
0x000dfd2b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, 0xfffa; pop ebx; ret; 
0x000a5dbb: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; movlpd qword ptr [ecx], xmm0; pop ebx; ret; 
0x00198c1b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x0008472b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; or dword ptr [ecx + 8], 0x40; xor eax, eax; mov dword ptr [ecx + 4], edx; ret; 
0x0013128b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; xor eax, eax; pop ebx; ret; 
0x0003a1fb: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; xor eax, eax; ret; 
0x000a1e4b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; xor edx, edx; pop ebx; mov eax, edx; ret; 
0x0010442a: add byte ptr [eax], al; add byte ptr [esi - 9], ah; ret 0xff00; 
0x0009a1a4: add byte ptr [eax], al; add byte ptr [esp + ebx - 0x7d], dh; in al, dx; or byte ptr [ebp - 0x6bc737a], cl; call dword ptr [ebx + 0x50]; 
0x000829b9: add byte ptr [eax], al; add cl, al; call 0x1e8accd; mov dword ptr [edx + 0x19f0], eax; ret; 
0x00099abd: add byte ptr [eax], al; add cl, al; call 0xfd9d3d8; inc edi; ret 0xc083; 
0x00071b2a: add byte ptr [eax], al; add cl, al; ret 0x6509; 
0x000213cc: add byte ptr [eax], al; add cl, al; ret 0x8909; 
0x00120c70: add byte ptr [eax], al; add cl, al; ret 0xf009; 
0x000eb862: add byte ptr [eax], al; add cl, ch; adc eax, 0x83fffffc; in al, dx; or byte ptr [ebp - 0x6b79d7d], cl; call dword ptr [eax + 0x55]; 
0x00062726: add byte ptr [eax], al; add cl, ch; and ch, 0xff; dec dword ptr [ebx - 0x4f37b]; jmp dword ptr [ebp - 0x75]; 
0x0016d6cd: add byte ptr [eax], al; add cl, ch; and eax, 0xe8ffffff; push ss; arpl sp, di; jmp dword ptr [esi - 0x70]; 
0x00020076: add byte ptr [eax], al; add cl, ch; cmp bh, 0xff; jmp dword ptr [esi - 0x70]; 
0x0004cccc: add byte ptr [eax], al; add cl, ch; cmp dh, 0xff; jmp dword ptr [esi - 0x70]; 
0x0019c3fd: add byte ptr [eax], al; add cl, ch; dec edx; idiv edi; jmp dword ptr [esi - 0x70]; 
0x00103816: add byte ptr [eax], al; add cl, ch; imul edi, esp, -1; jmp dword ptr [esi - 0x70]; 
0x00034ce6: add byte ptr [eax], al; add cl, ch; psubd mm7, mm7; dec dword ptr [ebx - 0x7cd3db8c]; ret 0xc702; 
0x00120519: add byte ptr [eax], al; add cl, ch; push ebx; idiv bh; dec dword ptr [ebp - 0x65e9f7d]; call dword ptr [eax - 0x73]; 
0x00034d2c: add byte ptr [eax], al; add cl, ch; push es; idiv edi; dec dword ptr [ebx - 0x7cd3db8c]; ret 0xc702; 
0x0006d448: add byte ptr [eax], al; add cl, ch; ret 0xffe5; 
0x000f748f: add byte ptr [eax], al; add cl, ch; ret 0xfff0; 
0x0006ca4d: add byte ptr [eax], al; add cl, ch; ret 0xfff9; 
0x0002799a: add byte ptr [eax], al; add cl, ch; ret 0xfffd; 
0x00020136: add byte ptr [eax], al; add cl, ch; ret 0xfffe; 
0x00020036: add byte ptr [eax], al; add cl, ch; ret 0xffff; 
0x000e1d4d: add byte ptr [eax], al; add cl, ch; ret 3; 
0x000232e5: add byte ptr [eax], al; add cl, ch; ret; 
0x00041512: add byte ptr [eax], al; add cl, ch; sbb ebx, -1; dec dword ptr [ebx - 0x72d3db84]; xchg dword ptr [esi + esi*2 - 7], ebx; call dword ptr [eax - 0x73]; 
0x0004051a: add byte ptr [eax], al; add cl, ch; sti; idiv edi; call dword ptr [eax + 0x6a]; 
0x0005ecf0: add byte ptr [eax], al; add cl, ch; wait; loope 0x5ecf6; call dword ptr [eax - 0x75]; 
0x00196cf6: add byte ptr [eax], al; add dh, dh; les eax, ptr [edx]; jne 0x196d90; lea eax, [ecx + 8]; ret; 
0x00196d1f: add byte ptr [eax], al; add dh, dh; les esp, ptr [eax]; jne 0x196dc0; lea eax, [ecx + 0xc]; ret; 
0x0019dbfe: add byte ptr [eax], al; add dh, dh; ret 0x7407; 
0x0007468d: add byte ptr [eax], al; add dh, dh; ret 0x7420; 
0x00028ac8: add byte ptr [eax], al; add dh, dh; ret 0x7501; 
0x0008c268: add byte ptr [eax], al; add dh, dh; ret 0x7502; 
0x0008ebd9: add byte ptr [eax], al; add dh, dh; ret 0xf02; 
0x0019784c: add byte ptr [eax], al; add dh, dh; ret 0xf04; 
0x001981df: add byte ptr [eax], al; add dh, dh; ret 0xf0f; 
0x0019774d: add byte ptr [eax], al; add dh, dh; ret 0xf10; 
0x00197876: add byte ptr [eax], al; add dh, dh; ret 0xf20; 
0x0019787f: add byte ptr [eax], al; add dh, dh; ret 0xf40; 
0x0019bacc: add byte ptr [eax], al; add dh, dh; ret; 
0x0008377f: add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov edx, 1; call dword ptr gs:[0x10]; 
0x00083990: add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x0009462f: add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x0009bffe: add byte ptr [eax], al; add dword ptr [ebp - 0xaf03f6e], ecx; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x00131bfe: add byte ptr [eax], al; add dword ptr [ebp - 0xaf05f6e], ecx; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x0009c0de: add byte ptr [eax], al; add dword ptr [ebp - 0xaf65f6e], ecx; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x00080f08: add byte ptr [eax], al; add dword ptr [ebx + 0x19a0], 1; add esp, 4; pop ebx; pop esi; ret; 
0x00080f0e: add byte ptr [eax], al; add dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x000847d6: add byte ptr [eax], al; add dword ptr [ebx + 0x5f5e04c4], eax; ret; 
0x0009516f: add byte ptr [eax], al; add dword ptr [ebx - 0x1637d], ecx; jmp dword ptr [ebp - 0x75]; 
0x0015238e: add byte ptr [eax], al; add dword ptr [ebx - 0x72efdb84], ecx; xchg dword ptr [ebx + 0x2a], ebx; stc; call dword ptr [eax + 0x53]; 
0x00160fc8: add byte ptr [eax], al; add eax, 0x38; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x00160598: add byte ptr [eax], al; add eax, 0x4c; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x0015d87b: add byte ptr [eax], al; add eax, 0xac; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x00197790: add byte ptr [eax], al; add eax, 0xb; pop edi; ret; 
0x001977b9: add byte ptr [eax], al; add eax, 0xf; pop edi; ret; 
0x001959be: add byte ptr [eax], al; add eax, 1; ret; 
0x00197743: add byte ptr [eax], al; add eax, 3; pop edi; ret; 
0x00197769: add byte ptr [eax], al; add eax, 7; pop edi; ret; 
0x0015e4c8: add byte ptr [eax], al; add eax, 8; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x0012732c: add byte ptr [eax], al; add eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x000b3736: add byte ptr [eax], al; add eax, edi; add eax, ecx; pop edi; ret; 
0x00198c87: add byte ptr [eax], al; add eax, edx; ret; 
0x00196e1c: add byte ptr [eax], al; add edx, 0; jl 0x197040; mov eax, ecx; ret; 
0x00196fee: add byte ptr [eax], al; add edx, 0xa; jl 0x197040; lea eax, [ecx + 0xa]; ret; 
0x00196ffe: add byte ptr [eax], al; add edx, 0xb; jl 0x197040; lea eax, [ecx + 0xb]; ret; 
0x00196f69: add byte ptr [eax], al; add edx, 0xc; jl 0x197040; lea eax, [ecx + 0xc]; ret; 
0x0019700e: add byte ptr [eax], al; add edx, 0xd; jl 0x197040; lea eax, [ecx + 0xd]; ret; 
0x0019701e: add byte ptr [eax], al; add edx, 0xe; jl 0x197040; lea eax, [ecx + 0xe]; ret; 
0x0019702e: add byte ptr [eax], al; add edx, 0xf; jl 0x197040; lea eax, [ecx + 0xf]; ret; 
0x0014528a: add byte ptr [eax], al; add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x00196f06: add byte ptr [eax], al; add edx, 4; jl 0x197040; lea eax, [ecx + 4]; ret; 
0x00196fce: add byte ptr [eax], al; add edx, 7; jl 0x197040; lea eax, [ecx + 7]; ret; 
0x00196f3f: add byte ptr [eax], al; add edx, 8; jl 0x197040; lea eax, [ecx + 8]; ret; 
0x00196fde: add byte ptr [eax], al; add edx, 9; jl 0x197040; lea eax, [ecx + 9]; ret; 
0x0006e4c5: add byte ptr [eax], al; add edx, dword ptr [esi + eax*4]; jmp edx; 
0x0003b9eb: add byte ptr [eax], al; add esp, 0x10; add esp, 0xc; ret; 
0x00022824: add byte ptr [eax], al; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x0008bf30: add byte ptr [eax], al; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x001272ff: add byte ptr [eax], al; add esp, 0x10; mov dword ptr [ebx + 0x260], 0; add esp, 8; pop ebx; ret; 
0x00127323: add byte ptr [eax], al; add esp, 0x10; mov dword ptr [ebx + 0x260], 3; add esp, 8; pop ebx; ret; 
0x000d6f04: add byte ptr [eax], al; add esp, 0x10; mov eax, 1; add esp, 0xc; ret; 
0x000220f2: add byte ptr [eax], al; add esp, 0x10; neg eax; sbb eax, eax; add esp, 0xc; ret; 
0x00079c5a: add byte ptr [eax], al; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00119b9a: add byte ptr [eax], al; add esp, 0x10; test eax, eax; jne 0x119b5c; add esp, 0xc; ret; 
0x001658ed: add byte ptr [eax], al; add esp, 0x14; mov eax, edx; pop ebx; pop esi; ret; 
0x0007f46e: add byte ptr [eax], al; add esp, 0x14; pop ebx; pop esi; ret; 
0x0003b8f0: add byte ptr [eax], al; add esp, 0x18; lea eax, [ebx + 6]; pop ebx; ret; 
0x00116d8f: add byte ptr [eax], al; add esp, 0x18; mov eax, ebx; pop ebx; ret; 
0x00035ef5: add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x0002ecf8: add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00084e4a: add byte ptr [eax], al; add esp, 0x20; add esp, 0xc; ret; 
0x00093d92: add byte ptr [eax], al; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0010ac92: add byte ptr [eax], al; add esp, 0x24; pop ebx; pop esi; ret; 
0x0011c872: add byte ptr [eax], al; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x0003064c: add byte ptr [eax], al; add esp, 0x2c; ret; 
0x00078ad4: add byte ptr [eax], al; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x00159188: add byte ptr [eax], al; add esp, 0x34; pop ebx; pop esi; ret; 
0x000b6215: add byte ptr [eax], al; add esp, 0x40; pop ebx; pop esi; pop edi; ret; 
0x00125ffb: add byte ptr [eax], al; add esp, 0x60; pop ebx; pop esi; pop edi; ret; 
0x000dda31: add byte ptr [eax], al; add esp, 0x64; pop ebx; pop esi; ret; 
0x000dd73d: add byte ptr [eax], al; add esp, 0x68; pop ebx; ret; 
0x00084c96: add byte ptr [eax], al; add esp, 0x94; pop ebx; pop esi; ret; 
0x00162096: add byte ptr [eax], al; add esp, 0xa0; pop ebx; pop esi; pop edi; ret; 
0x0012ed89: add byte ptr [eax], al; add esp, 0xc; push eax; push dword ptr [ebp - 0x4c]; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x0012dc3a: add byte ptr [eax], al; add esp, 0xc; push eax; push dword ptr [esp + 8]; push 0x2000003; call dword ptr [ebp + 0x14]; 
0x0012d9f3: add byte ptr [eax], al; add esp, 0xc; push eax; push edi; push 0x2000006; call dword ptr [esi + 0x14]; 
0x00087db3: add byte ptr [eax], al; add esp, 0xc; ret; 
0x0004c6f5: add byte ptr [eax], al; add esp, 4; add eax, ebx; jmp eax; 
0x0011f1f6: add byte ptr [eax], al; add esp, 4; lea eax, [ebx - 0x6b598]; pop ebx; pop esi; ret; 
0x0009a126: add byte ptr [eax], al; add esp, 4; mov eax, 0x16; pop ebx; pop esi; ret; 
0x00075bde: add byte ptr [eax], al; add esp, 4; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0010e4fd: add byte ptr [eax], al; add esp, 4; mov eax, 1; pop ebx; pop esi; ret; 
0x000a1b61: add byte ptr [eax], al; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x0015219a: add byte ptr [eax], al; add esp, 4; mov eax, edx; pop ebx; pop edi; ret; 
0x0009c984: add byte ptr [eax], al; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x0002277e: add byte ptr [eax], al; add esp, 4; pop ebx; pop esi; ret; 
0x000847ee: add byte ptr [eax], al; add esp, 4; pop esi; pop edi; ret; 
0x00099402: add byte ptr [eax], al; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00133382: add byte ptr [eax], al; add esp, 8; mov eax, 0xffffffff; pop ebx; ret; 
0x00119979: add byte ptr [eax], al; add esp, 8; mov eax, 1; pop ebx; ret; 
0x0008da3b: add byte ptr [eax], al; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x0011aecc: add byte ptr [eax], al; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00036503: add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0010415e: add byte ptr [eax], al; add esp, 8; xor eax, eax; pop ebx; ret; 
0x00127714: add byte ptr [eax], al; add word ptr [edx + eax*2], 1; ret; 
0x00035f9f: add byte ptr [eax], al; and byte ptr [0x7fffffff], 9; ror byte ptr [ecx - 0x22f7dbbc], 1; inc esp; and al, 4; ret; 
0x000362df: add byte ptr [eax], al; and byte ptr [0x7fffffff], 9; ror byte ptr [ecx - 0x26fbdbbc], 1; inc esp; and al, 4; ret; 
0x00087d88: add byte ptr [eax], al; and eax, 0x10; jne 0x87d98; add esp, 0xc; ret; 
0x00035c10: add byte ptr [eax], al; and eax, 0x7fff; or eax, edx; mov dword ptr [esp + 0xc], eax; fld xword ptr [esp + 4]; ret; 
0x00196298: add byte ptr [eax], al; and eax, 0xf; jne 0x196100; xor eax, eax; pop edi; ret; 
0x001962c9: add byte ptr [eax], al; and eax, 0xff; jne 0x196100; xor eax, eax; pop edi; ret; 
0x00196300: add byte ptr [eax], al; and eax, 0xfff; jne 0x196100; xor eax, eax; pop edi; ret; 
0x00196339: add byte ptr [eax], al; and eax, 0xffff; jne 0x196100; xor eax, eax; pop edi; ret; 
0x0012095c: add byte ptr [eax], al; and eax, 0xfffff000; or eax, edx; ret; 
0x0019634e: add byte ptr [eax], al; and eax, 1; jne 0x196100; xor eax, eax; pop edi; ret; 
0x0002ffdd: add byte ptr [eax], al; and eax, dword ptr [esp + 8]; ret; 
0x000b3cbe: add byte ptr [eax], al; bsf eax, eax; add eax, edi; pop edi; ret; 
0x000b3cde: add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edi + 0x20]; pop edi; ret; 
0x000b3cae: add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edi - 0x10]; pop edi; ret; 
0x000b3863: add byte ptr [eax], al; bsr eax, eax; add eax, edi; pop edi; ret; 
0x00158e96: add byte ptr [eax], al; call 0x118340; mov dword ptr [ebx + 0xa340], eax; add esp, 8; pop ebx; ret; 
0x0002c300: add byte ptr [eax], al; call 0x11e250; add esp, 0x1c; ret; 
0x00127582: add byte ptr [eax], al; call 0x20140; add esp, 0x18; pop ebx; ret; 
0x00119b26: add byte ptr [eax], al; call 0x20150; add esp, 0x18; pop ebx; ret; 
0x0013cc76: add byte ptr [eax], al; call 0x20150; mov dword ptr [ebx + 0xfc0], eax; add esp, 0x18; pop ebx; ret; 
0x0004b07c: add byte ptr [eax], al; call 0x4b030; add eax, ebx; jmp eax; 
0x0008be3f: add byte ptr [eax], al; call 0x82810; mov eax, dword ptr [ebp - 0x3c]; add esp, 0x10; call eax; 
0x0008da36: add byte ptr [eax], al; call 0x8e0c0; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x00092e0b: add byte ptr [eax], al; call 0x92d70; mov dword ptr [esp], esi; call ebx; 
0x0008f585: add byte ptr [eax], al; call 0xfb090; mov dword ptr [ebx + 0x124], eax; add esp, 0x18; pop ebx; ret; 
0x00159b61: add byte ptr [eax], al; call dword ptr [eax + 0x10]; 
0x0003780b: add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011ea53: add byte ptr [eax], al; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x11ea68; pop ebx; ret; 
0x0003798c: add byte ptr [eax], al; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x379a0; pop ebx; ret; 
0x000938ef: add byte ptr [eax], al; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x93908; pop ebx; ret; 
0x00093cdf: add byte ptr [eax], al; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x93cf8; pop ebx; ret; 
0x000df697: add byte ptr [eax], al; call dword ptr gs:[0x10]; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x00037951: add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x0010992d: add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x000de884: add byte ptr [eax], al; call dword ptr gs:[0x10]; pop ebx; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x0013eb3e: add byte ptr [eax], al; call dword ptr gs:[0x10]; pop ebx; ret; 
0x0008fe37: add byte ptr [eax], al; call dword ptr gs:[0x10]; ret; 
0x000719f1: add byte ptr [eax], al; call eax; 
0x00171fcf: add byte ptr [eax], al; call eax; cdq; add esp, 0x10; add esp, 0xc; ret; 
0x00151641: add byte ptr [eax], al; call esi; 
0x0009458d: add byte ptr [eax], al; cmova eax, ecx; mov dword ptr [edx + 0x3b6c], eax; ret; 
0x0008d79d: add byte ptr [eax], al; cmova eax, edx; ret; 
0x000d8d71: add byte ptr [eax], al; cmovae esi, ecx; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00125999: add byte ptr [eax], al; cmovb eax, edx; ret; 
0x0008e096: add byte ptr [eax], al; cmove eax, ecx; ret; 
0x000dfc59: add byte ptr [eax], al; cmove eax, edx; pop ebx; ret; 
0x00084757: add byte ptr [eax], al; cmove eax, edx; ret; 
0x000377fe: add byte ptr [eax], al; cmove edx, eax; mov esi, 8; mov eax, 0xae; call dword ptr gs:[0x10]; 
0x000eac3a: add byte ptr [eax], al; cmovne eax, edx; pop ebx; pop esi; pop edi; ret; 
0x00091251: add byte ptr [eax], al; cmovne eax, edx; ret; 
0x000a9c61: add byte ptr [eax], al; cmp byte ptr [eax], 1; sbb eax, -1; pop edi; pop ebx; ret; 
0x00197aaa: add byte ptr [eax], al; cmp byte ptr [edx + 0xb], 0; je 0x197b32; mov eax, 0xc; pop edi; ret; 
0x001924e2: add byte ptr [eax], al; cmp ch, bh; mov eax, 0; jne 0x192da6; pop ebx; ret; 
0x001955f8: add byte ptr [eax], al; cmp ch, bh; mov eax, 0; jne 0x1956d0; pop ebx; ret; 
0x000e021b: add byte ptr [eax], al; cmp dword ptr [ecx + eax], 0x26; sete al; movzx eax, al; lea eax, [eax + eax - 1]; ret; 
0x000dff2b: add byte ptr [eax], al; cmp dword ptr [edx + eax], 0x26; sete al; movzx eax, al; lea eax, [eax + eax - 1]; ret; 
0x000d708e: add byte ptr [eax], al; cmp eax, -0x26; jne 0xd70a1; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x00108665: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x108678; pop ebx; pop esi; ret; 
0x001096f8: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x109708; pop ebx; pop esi; ret; 
0x00109758: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x109768; pop ebx; pop esi; ret; 
0x0010a492: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x10a4a0; pop ebx; ret; 
0x0010b030: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x10b040; pop ebx; ret; 
0x00115a1e: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x115a30; pop ebx; ret; 
0x00115dd7: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x115de8; pop ebx; pop esi; ret; 
0x00115e97: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x115ea8; pop ebx; pop esi; ret; 
0x00116912: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x116920; pop ebx; ret; 
0x00116962: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x116970; pop ebx; ret; 
0x00117227: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x117238; pop ebx; pop esi; ret; 
0x00118f39: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x118f48; pop ebx; pop esi; ret; 
0x0011a7f2: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x11a800; pop ebx; ret; 
0x0011a842: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x11a850; pop ebx; ret; 
0x0011a897: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x11a8a8; pop ebx; pop esi; ret; 
0x0011a8f7: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x11a908; pop ebx; pop esi; ret; 
0x0011ea5a: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x11ea68; pop ebx; ret; 
0x00121362: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x121370; pop ebx; ret; 
0x00122ff2: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x123000; pop ebx; ret; 
0x00123042: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x123050; pop ebx; ret; 
0x00123092: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x1230a0; pop ebx; ret; 
0x001780b8: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x1780c8; pop ebx; pop esi; ret; 
0x00037993: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x379a0; pop ebx; ret; 
0x00058a22: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x58a30; pop ebx; ret; 
0x00092c5e: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x92c70; pop ebx; ret; 
0x00093307: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x93318; pop ebx; pop esi; ret; 
0x000938f6: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x93908; pop ebx; ret; 
0x00093ce6: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x93cf8; pop ebx; ret; 
0x000cc080: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xcc090; pop ebx; ret; 
0x000d8f31: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xd8f40; pop ebx; pop esi; ret; 
0x000ddcf7: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xddd40; add esp, 0x18; pop ebx; ret; 
0x000de417: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xde440; hlt; mov eax, ecx; call dword ptr gs:[0x10]; 
0x000fb387: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xfb398; pop ebx; pop esi; ret; 
0x000df69e: add byte ptr [eax], al; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x000828c5: add byte ptr [eax], al; cmp eax, 1; je 0x828d0; ret; 
0x00083169: add byte ptr [eax], al; cmp eax, 1; je 0x83178; ret; 
0x00120e5c: add byte ptr [eax], al; cmp eax, 1; jg 0x120e90; add esp, 8; pop ebx; ret; 
0x001518ec: add byte ptr [eax], al; cmp eax, 1; jg 0x151918; add esp, 8; pop ebx; ret; 
0x0016ba5f: add byte ptr [eax], al; cmp eax, 1; jg 0x16ba88; add esp, 8; pop ebx; ret; 
0x0016bbdf: add byte ptr [eax], al; cmp eax, 1; jg 0x16bc08; add esp, 8; pop ebx; ret; 
0x00072dde: add byte ptr [eax], al; cmp eax, 1; jg 0x72df0; ret; 
0x0007be5e: add byte ptr [eax], al; cmp eax, 1; jg 0x7be70; ret; 
0x0007ec54: add byte ptr [eax], al; cmp eax, 1; jg 0x7ec90; add esp, 8; pop ebx; ret; 
0x00080f6e: add byte ptr [eax], al; cmp eax, 1; jg 0x80f80; ret; 
0x000cd205: add byte ptr [eax], al; cmp eax, 1; jg 0xcd230; add esp, 8; pop ebx; ret; 
0x00122dc4: add byte ptr [eax], al; cmp edi, 1; je 0x122e00; lea ecx, [esp + 0xc]; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x00122f44: add byte ptr [eax], al; cmp edi, 1; je 0x122f80; lea ecx, [esp + 0xc]; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x0008485b: add byte ptr [eax], al; cmp edx, 0x3fff; ja 0x84870; ret; 
0x0008bcbe: add byte ptr [eax], al; cmp edx, 1; je 0x8bcd0; mov eax, 0x16; ret; 
0x0008471f: add byte ptr [eax], al; cmp edx, 2; jbe 0x84730; ret; 
0x00152b9e: add byte ptr [eax], al; cmp edx, ecx; jne 0x152b90; add esp, 8; pop ebx; ret; 
0x001516b3: add byte ptr [eax], al; das; je 0x15171c; mov byte ptr [ebx + 0x8258], 0; mov dword ptr [ebx + 0x8248], 0; call esi; 
0x0002015e: add byte ptr [eax], al; endbr32; jmp dword ptr [ebx + 0xc]; 
0x0002014e: add byte ptr [eax], al; endbr32; jmp dword ptr [ebx - 0x10]; nop word ptr [eax + eax]; endbr32; jmp dword ptr [ebx + 0xc]; 
0x00080e3e: add byte ptr [eax], al; endbr32; mov eax, 0xffffffff; ret; 
0x0017a97e: add byte ptr [eax], al; endbr32; mov eax, dword ptr [esp + 0x10]; mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x00171a3e: add byte ptr [eax], al; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x00080e6e: add byte ptr [eax], al; endbr32; ret; 
0x00080e4e: add byte ptr [eax], al; endbr32; xor eax, eax; ret; 
0x000b47cd: add byte ptr [eax], al; inc dword ptr [eax]; je 0xb47d4; inc eax; pop edi; ret; 
0x0008bcf8: add byte ptr [eax], al; inc eax; xor eax, eax; ret; 
0x00037763: add byte ptr [eax], al; int 0x80; 
0x0013390e: add byte ptr [eax], al; ja 0x133919; sar eax, 5; add esp, 0xc; ret; 
0x0018b1b3: add byte ptr [eax], al; ja 0x18b1b9; neg eax; ret; 
0x0018c9f3: add byte ptr [eax], al; ja 0x18c9f9; neg eax; pop ebp; ret; 
0x0018f0a3: add byte ptr [eax], al; ja 0x18f0a9; neg eax; add esp, 4; pop ebx; ret; 
0x00191df3: add byte ptr [eax], al; ja 0x191df9; neg eax; ret; 
0x001920f3: add byte ptr [eax], al; ja 0x1920f9; neg eax; pop ebp; ret; 
0x001922c3: add byte ptr [eax], al; ja 0x1922c9; neg eax; ret; 
0x00192daa: add byte ptr [eax], al; ja 0x192db0; neg eax; ret; 
0x00193123: add byte ptr [eax], al; ja 0x193129; neg eax; pop edi; pop ebx; ret; 
0x0019405b: add byte ptr [eax], al; ja 0x194061; neg eax; ret; 
0x001956d4: add byte ptr [eax], al; ja 0x1956da; neg eax; ret; 
0x0006fd39: add byte ptr [eax], al; ja 0x6fd44; mov eax, dword ptr [ecx + edx*4 - 0xbe0]; ret; 
0x00084861: add byte ptr [eax], al; ja 0x84870; ret; 
0x0012770c: add byte ptr [eax], al; jae 0x12771b; mov edx, dword ptr [ecx + 0x4628]; add word ptr [edx + eax*2], 1; ret; 
0x00094398: add byte ptr [eax], al; jbe 0x943a0; ret; 
0x000943d8: add byte ptr [eax], al; jbe 0x943e0; ret; 
0x000373c3: add byte ptr [eax], al; je 0x373ce; rdsspd ecx; mov dword ptr [edx + 0x28], ecx; ret; 
0x00079427: add byte ptr [eax], al; je 0x79438; mov eax, dword ptr [eax + 0x38]; test eax, eax; js 0x79438; ret; 
0x000dfeb1: add byte ptr [eax], al; je 0xdff1a; xor eax, eax; cmp edx, 0xadf5; setne al; ret; 
0x00193cd9: add byte ptr [eax], al; jg 0x193ce0; neg eax; ret; 
0x00194004: add byte ptr [eax], al; jg 0x194010; neg eax; ret; 
0x00198134: add byte ptr [eax], al; jg 0x198140; neg eax; ret; 
0x000c9ca3: add byte ptr [eax], al; jg 0xc9cb0; neg eax; pop edi; pop esi; ret; 
0x000c9cd3: add byte ptr [eax], al; jg 0xc9cd9; neg eax; ret; 
0x0008b8a7: add byte ptr [eax], al; jmp 0x8b61d; mov edx, 1; mov eax, 0xf0; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0009a338: add byte ptr [eax], al; jmp 0x9a2d2; lea esi, [esi]; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax - 0x148]; call dword ptr [eax]; 
0x00020004: add byte ptr [eax], al; jmp dword ptr [ebx + 8]; 
0x000218e5: add byte ptr [eax], al; jmp eax; 
0x0006e80a: add byte ptr [eax], al; jmp ebx; 
0x00105063: add byte ptr [eax], al; jne 0x105077; add esp, 0x1c; ret; 
0x00105509: add byte ptr [eax], al; jne 0x105526; add esp, 0x78; pop ebx; ret; 
0x00107a03: add byte ptr [eax], al; jne 0x107a59; add esp, 0x14; pop ebx; pop esi; ret; 
0x00107c89: add byte ptr [eax], al; jne 0x107ca6; add esp, 0x78; pop ebx; ret; 
0x00108707: add byte ptr [eax], al; jne 0x108710; add esp, 0x38; pop ebx; ret; 
0x00108787: add byte ptr [eax], al; jne 0x108790; add esp, 0x38; pop ebx; ret; 
0x00108910: add byte ptr [eax], al; jne 0x10892e; add esp, 0x74; pop ebx; pop esi; ret; 
0x001089f9: add byte ptr [eax], al; jne 0x108a3b; add esp, 0x74; pop ebx; pop esi; ret; 
0x00108aa3: add byte ptr [eax], al; jne 0x108abe; add esp, 0x74; pop ebx; pop esi; ret; 
0x0010902a: add byte ptr [eax], al; jne 0x109046; add esp, 0x74; pop ebx; pop esi; ret; 
0x001097d6: add byte ptr [eax], al; jne 0x1097e7; add esp, 0x54; pop ebx; pop esi; ret; 
0x00109836: add byte ptr [eax], al; jne 0x109847; add esp, 0x54; pop ebx; pop esi; ret; 
0x00109896: add byte ptr [eax], al; jne 0x1098a7; add esp, 0x64; pop ebx; pop esi; ret; 
0x0010ac8c: add byte ptr [eax], al; jne 0x10ad4e; add esp, 0x24; pop ebx; pop esi; ret; 
0x0010adec: add byte ptr [eax], al; jne 0x10aeae; add esp, 0x24; pop ebx; pop esi; ret; 
0x0010bb21: add byte ptr [eax], al; jne 0x10bb7b; add esp, 0xe4; pop ebx; pop esi; ret; 
0x0010c112: add byte ptr [eax], al; jne 0x10c11d; movzx eax, al; add esp, 0x4c; ret; 
0x00111a4e: add byte ptr [eax], al; jne 0x111a58; add esp, 0x24; pop ebx; pop esi; ret; 
0x00111afc: add byte ptr [eax], al; jne 0x111b06; add esp, 0x14; pop esi; pop edi; ret; 
0x00112881: add byte ptr [eax], al; jne 0x1128bc; add esp, 0x74; pop ebx; pop esi; ret; 
0x00115a9d: add byte ptr [eax], al; jne 0x115af9; add esp, 0x14; pop ebx; pop esi; ret; 
0x00115b4d: add byte ptr [eax], al; jne 0x115ba9; add esp, 0x14; pop ebx; pop esi; ret; 
0x001165fa: add byte ptr [eax], al; jne 0x116609; add esp, 0x1c; ret; 
0x00116bfc: add byte ptr [eax], al; jne 0x116c29; add esp, 0x54; pop ebx; pop esi; ret; 
0x00116d00: add byte ptr [eax], al; jne 0x116d29; add esp, 0x54; pop ebx; pop esi; ret; 
0x00116d89: add byte ptr [eax], al; jne 0x116e34; add esp, 0x18; mov eax, ebx; pop ebx; ret; 
0x00116ea6: add byte ptr [eax], al; jne 0x116ecb; add esp, 0x14; pop ebx; pop esi; ret; 
0x00116f68: add byte ptr [eax], al; jne 0x116f79; add esp, 0x54; pop ebx; pop esi; ret; 
0x0011804c: add byte ptr [eax], al; jne 0x118099; add esp, 0x28; pop ebx; ret; 
0x001180ec: add byte ptr [eax], al; jne 0x118139; add esp, 0x28; pop ebx; ret; 
0x0011819b: add byte ptr [eax], al; jne 0x118217; add esp, 0x24; pop ebx; pop esi; ret; 
0x0011827b: add byte ptr [eax], al; jne 0x1182f7; add esp, 0x24; pop ebx; pop esi; ret; 
0x00118377: add byte ptr [eax], al; jne 0x11837f; add esp, 0x1c; ret; 
0x001191d4: add byte ptr [eax], al; jne 0x119207; add esp, 0x14; pop ebx; pop esi; ret; 
0x00119580: add byte ptr [eax], al; jne 0x119597; add esp, 0x3c; ret; 
0x001195f1: add byte ptr [eax], al; jne 0x1195f9; add esp, 0x1c; ret; 
0x0011a3ce: add byte ptr [eax], al; jne 0x11a3d8; add esp, 0x34; pop ebx; pop esi; ret; 
0x0011a453: add byte ptr [eax], al; jne 0x11a45d; add esp, 0x34; pop ebx; pop esi; ret; 
0x0011a4f1: add byte ptr [eax], al; jne 0x11a4fb; add esp, 0x34; pop ebx; pop esi; ret; 
0x0011a573: add byte ptr [eax], al; jne 0x11a57d; add esp, 0x34; pop ebx; pop esi; ret; 
0x0011a60c: add byte ptr [eax], al; jne 0x11a615; add esp, 0x38; pop ebx; ret; 
0x0011a691: add byte ptr [eax], al; jne 0x11a69a; add esp, 0x38; pop ebx; ret; 
0x0011a720: add byte ptr [eax], al; jne 0x11a72a; add esp, 0x34; pop ebx; pop esi; ret; 
0x0011d39b: add byte ptr [eax], al; jne 0x11d3a3; add esp, 0x1c; ret; 
0x0011e6a3: add byte ptr [eax], al; jne 0x11e6af; add esp, 0x418; pop ebx; ret; 
0x0011eec4: add byte ptr [eax], al; jne 0x11eedf; add esp, 0x1018; pop ebx; ret; 
0x001244c2: add byte ptr [eax], al; jne 0x1244e9; add esp, 0x28; pop ebx; ret; 
0x001245e7: add byte ptr [eax], al; jne 0x124609; add esp, 0x18; pop ebx; ret; 
0x00124667: add byte ptr [eax], al; jne 0x124689; add esp, 0x18; pop ebx; ret; 
0x001248f2: add byte ptr [eax], al; jne 0x124919; add esp, 0x18; pop ebx; ret; 
0x00125042: add byte ptr [eax], al; jne 0x125069; add esp, 0x18; pop ebx; ret; 
0x001250c7: add byte ptr [eax], al; jne 0x1250e9; add esp, 0x18; pop ebx; ret; 
0x00125152: add byte ptr [eax], al; jne 0x125179; add esp, 0x28; pop ebx; ret; 
0x001252bb: add byte ptr [eax], al; jne 0x1252c3; add esp, 0x1c; ret; 
0x00125a05: add byte ptr [eax], al; jne 0x125a14; add esp, 0x7c; ret; 
0x0012fcbc: add byte ptr [eax], al; jne 0x12fcf0; pop ebx; pop esi; pop edi; ret; 
0x00133637: add byte ptr [eax], al; jne 0x133645; add esp, 0x2c; ret; 
0x001336a7: add byte ptr [eax], al; jne 0x1336b5; add esp, 0x2c; ret; 
0x0013aae8: add byte ptr [eax], al; jne 0x13aaf0; add esp, 0x2c; ret; 
0x0013ebee: add byte ptr [eax], al; jne 0x13ec1c; add esp, 0x24; pop ebx; pop esi; ret; 
0x001410fc: add byte ptr [eax], al; jne 0x141168; add esp, 0x14; pop ebx; pop esi; ret; 
0x001454b1: add byte ptr [eax], al; jne 0x1454cd; add esp, 0x18; pop ebx; ret; 
0x0014550d: add byte ptr [eax], al; jne 0x145515; add esp, 0x1c; ret; 
0x00145559: add byte ptr [eax], al; jne 0x145561; add esp, 0x1c; ret; 
0x00146ed0: add byte ptr [eax], al; jne 0x146f14; add esp, 0x118; pop ebx; ret; 
0x00146f70: add byte ptr [eax], al; jne 0x146fd0; add esp, 0x118; pop ebx; ret; 
0x00147030: add byte ptr [eax], al; jne 0x14707b; add esp, 0x118; pop ebx; ret; 
0x001470d0: add byte ptr [eax], al; jne 0x1470fd; add esp, 0x11c; ret; 
0x00147377: add byte ptr [eax], al; jne 0x1473bc; add esp, 0x1c; ret; 
0x0014ab4a: add byte ptr [eax], al; jne 0x14ab55; movzx eax, ax; add esp, 0x2c; ret; 
0x0014edab: add byte ptr [eax], al; jne 0x14edb4; add esp, 0x28; pop ebx; ret; 
0x0015130e: add byte ptr [eax], al; jne 0x151316; add esp, 0x1c; ret; 
0x00158efe: add byte ptr [eax], al; jne 0x158f07; add esp, 0x28; pop ebx; ret; 
0x00159182: add byte ptr [eax], al; jne 0x159223; add esp, 0x34; pop ebx; pop esi; ret; 
0x001595d2: add byte ptr [eax], al; jne 0x159609; add esp, 0x14; pop ebx; pop esi; ret; 
0x0015b5cf: add byte ptr [eax], al; jne 0x15b606; add esp, 0x14; pop ebx; pop esi; ret; 
0x0015efa1: add byte ptr [eax], al; jne 0x15f018; add esp, 0x18; pop ebx; ret; 
0x00162256: add byte ptr [eax], al; jne 0x162267; add esp, 0x1c; ret; 
0x001622d2: add byte ptr [eax], al; jne 0x1622ec; add esp, 0x74; pop ebx; pop edi; ret; 
0x00162380: add byte ptr [eax], al; jne 0x162397; add esp, 0x28; pop ebx; ret; 
0x00162420: add byte ptr [eax], al; jne 0x162437; add esp, 0x28; pop ebx; ret; 
0x00162772: add byte ptr [eax], al; jne 0x16277a; add esp, 0x1c; ret; 
0x001627e9: add byte ptr [eax], al; jne 0x1627ff; add esp, 0x18; pop ebx; ret; 
0x0016364d: add byte ptr [eax], al; jne 0x163655; add esp, 0x4c; ret; 
0x001636bd: add byte ptr [eax], al; jne 0x1636c5; add esp, 0x4c; ret; 
0x0016372d: add byte ptr [eax], al; jne 0x163735; add esp, 0x4c; ret; 
0x0016379d: add byte ptr [eax], al; jne 0x1637a5; add esp, 0x4c; ret; 
0x00163800: add byte ptr [eax], al; jne 0x163808; add esp, 0x4c; ret; 
0x00163860: add byte ptr [eax], al; jne 0x163868; add esp, 0x4c; ret; 
0x001638cd: add byte ptr [eax], al; jne 0x1638d5; add esp, 0x4c; ret; 
0x0016394d: add byte ptr [eax], al; jne 0x163955; add esp, 0x4c; ret; 
0x00163d3f: add byte ptr [eax], al; jne 0x163d4c; add esp, 0x94; pop ebx; pop edi; ret; 
0x00163e3b: add byte ptr [eax], al; jne 0x163e43; add esp, 0x1c; ret; 
0x00163e8a: add byte ptr [eax], al; jne 0x163ebc; add esp, 0x1c; ret; 
0x001656a4: add byte ptr [eax], al; jne 0x1656ac; add esp, 0x2c; ret; 
0x00165755: add byte ptr [eax], al; jne 0x1657b9; add esp, 0x18; pop ebx; ret; 
0x00165845: add byte ptr [eax], al; jne 0x1658a9; add esp, 0x18; pop ebx; ret; 
0x00165aec: add byte ptr [eax], al; jne 0x165b3b; add esp, 0x18; pop ebx; ret; 
0x00165b7c: add byte ptr [eax], al; jne 0x165bcb; add esp, 0x18; pop ebx; ret; 
0x00165c3b: add byte ptr [eax], al; jne 0x165c5b; add esp, 0x18; pop ebx; ret; 
0x00165ca0: add byte ptr [eax], al; jne 0x165cfb; add esp, 0x18; pop ebx; ret; 
0x00165d3c: add byte ptr [eax], al; jne 0x165d99; add esp, 0x18; pop ebx; ret; 
0x0016655c: add byte ptr [eax], al; jne 0x1665ab; add esp, 0x18; pop ebx; ret; 
0x001665ec: add byte ptr [eax], al; jne 0x16663b; add esp, 0x18; pop ebx; ret; 
0x0016667c: add byte ptr [eax], al; jne 0x1666cb; add esp, 0x18; pop ebx; ret; 
0x0016670c: add byte ptr [eax], al; jne 0x16675b; add esp, 0x18; pop ebx; ret; 
0x00166d52: add byte ptr [eax], al; jne 0x166d5c; add esp, 0x54; pop ebx; pop esi; ret; 
0x00166dc4: add byte ptr [eax], al; jne 0x166dcf; movzx eax, al; add esp, 0x1c; ret; 
0x00166e24: add byte ptr [eax], al; jne 0x166e2f; movzx eax, al; add esp, 0x1c; ret; 
0x00166e8d: add byte ptr [eax], al; jne 0x166e96; add esp, 0x18; pop ebx; ret; 
0x00166eed: add byte ptr [eax], al; jne 0x166ef6; add esp, 0x18; pop ebx; ret; 
0x0016b9e9: add byte ptr [eax], al; jne 0x16ba1c; add esp, 0x18; pop ebx; ret; 
0x0016bc6f: add byte ptr [eax], al; jne 0x16bca4; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016bcff: add byte ptr [eax], al; jne 0x16bd34; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016d205: add byte ptr [eax], al; jne 0x16d219; add esp, 0x18; pop ebx; ret; 
0x0016d27d: add byte ptr [eax], al; jne 0x16d299; add esp, 0x18; pop ebx; ret; 
0x0016e8c9: add byte ptr [eax], al; jne 0x16e901; add esp, 0x28; pop ebx; ret; 
0x0016ea8a: add byte ptr [eax], al; jne 0x16eaab; add esp, 0x28; pop ebx; ret; 
0x0016eb2c: add byte ptr [eax], al; jne 0x16eb54; add esp, 0x28; pop ebx; ret; 
0x0016ec5a: add byte ptr [eax], al; jne 0x16ec9c; add esp, 0x34; pop ebx; pop esi; ret; 
0x0016f1c1: add byte ptr [eax], al; jne 0x16f1ca; add esp, 0x28; pop ebx; ret; 
0x00171a24: add byte ptr [eax], al; jne 0x171a2d; add esp, 0x18; pop ebx; ret; 
0x001745cb: add byte ptr [eax], al; jne 0x1745d3; add esp, 0x1c; ret; 
0x0017a05c: add byte ptr [eax], al; jne 0x17a066; add esp, 0x14; pop esi; pop edi; ret; 
0x0017a187: add byte ptr [eax], al; jne 0x17a1a9; add esp, 0x18; pop ebx; ret; 
0x0017a250: add byte ptr [eax], al; jne 0x17a25a; add esp, 0x14; pop ebx; pop esi; ret; 
0x0017a2ca: add byte ptr [eax], al; jne 0x17a2d4; add esp, 0x14; pop ebx; pop esi; ret; 
0x00192615: add byte ptr [eax], al; jne 0x192d90; pop ebx; ret; 
0x0019244e: add byte ptr [eax], al; jne 0x192da6; pop ebx; ret; 
0x00193dbd: add byte ptr [eax], al; jne 0x194000; pop ebx; ret; 
0x00195487: add byte ptr [eax], al; jne 0x1956b0; pop ebx; ret; 
0x00195544: add byte ptr [eax], al; jne 0x1956d0; pop ebx; ret; 
0x001962ce: add byte ptr [eax], al; jne 0x196100; xor eax, eax; pop edi; ret; 
0x000213e3: add byte ptr [eax], al; jne 0x213c2; mov ecx, dword ptr [eax - 0xe8]; cmp dword ptr [ecx + 0x94], edx; jne 0x213c2; ret; 
0x000213f1: add byte ptr [eax], al; jne 0x213c2; ret; 
0x00021dd1: add byte ptr [eax], al; jne 0x21dd9; add esp, 0x1c; ret; 
0x0003661a: add byte ptr [eax], al; jne 0x36626; mov eax, edx; add esp, 0x1c; ret 4; 
0x00037270: add byte ptr [eax], al; jne 0x37279; add esp, 0x18; pop ebx; ret; 
0x000375e4: add byte ptr [eax], al; jne 0x375f1; add esp, 0x124; pop ebx; pop esi; ret; 
0x00037b84: add byte ptr [eax], al; jne 0x37b98; add esp, 0x114; pop ebx; pop edi; ret; 
0x00037c04: add byte ptr [eax], al; jne 0x37c18; add esp, 0x114; pop ebx; pop edi; ret; 
0x00037c80: add byte ptr [eax], al; jne 0x37cc6; add esp, 0x94; pop ebx; pop edi; ret; 
0x00037d1f: add byte ptr [eax], al; jne 0x37d2c; add esp, 0x94; pop ebx; pop edi; ret; 
0x00037d9e: add byte ptr [eax], al; jne 0x37db7; add esp, 0x98; pop ebx; ret; 
0x00037f44: add byte ptr [eax], al; jne 0x37f7c; add esp, 0x28; pop ebx; ret; 
0x00038316: add byte ptr [eax], al; jne 0x38321; add esp, 0x12c; ret; 
0x0003882d: add byte ptr [eax], al; jne 0x38837; add esp, 0x24; pop ebx; pop esi; ret; 
0x00038986: add byte ptr [eax], al; jne 0x3899f; add esp, 0x98; pop ebx; ret; 
0x00038a06: add byte ptr [eax], al; jne 0x38a1f; add esp, 0x98; pop ebx; ret; 
0x00038a8e: add byte ptr [eax], al; jne 0x38a99; add esp, 0x9c; ret; 
0x0003ad5e: add byte ptr [eax], al; jne 0x3ad66; add esp, 0x2c; ret; 
0x0003ae8e: add byte ptr [eax], al; jne 0x3ae96; add esp, 0x2c; ret; 
0x0003b16f: add byte ptr [eax], al; jne 0x3b1ac; add esp, 0x18; pop ebx; ret; 
0x0003b6f0: add byte ptr [eax], al; jne 0x3b6f8; add esp, 0x1c; ret; 
0x0003b743: add byte ptr [eax], al; jne 0x3b74b; add esp, 0x1c; ret; 
0x0003b7a0: add byte ptr [eax], al; jne 0x3b7a8; add esp, 0x1c; ret; 
0x0003b7f3: add byte ptr [eax], al; jne 0x3b7fb; add esp, 0x1c; ret; 
0x0003b840: add byte ptr [eax], al; jne 0x3b848; add esp, 0x1c; ret; 
0x0003b893: add byte ptr [eax], al; jne 0x3b89b; add esp, 0x1c; ret; 
0x000489aa: add byte ptr [eax], al; jne 0x489b5; add esp, 0x42c; ret; 
0x0004ab6c: add byte ptr [eax], al; jne 0x4ab72; push ecx; ret; 
0x0004ae12: add byte ptr [eax], al; jne 0x4ae18; push ecx; ret; 
0x0004d10f: add byte ptr [eax], al; jne 0x4d11c; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x0004d19d: add byte ptr [eax], al; jne 0x4d1aa; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x00051286: add byte ptr [eax], al; jne 0x51293; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000518a9: add byte ptr [eax], al; jne 0x518cd; add esp, 0x434; pop ebx; pop esi; ret; 
0x000582de: add byte ptr [eax], al; jne 0x582ea; add esp, 0x1018; pop ebx; ret; 
0x00058365: add byte ptr [eax], al; jne 0x5836e; add esp, 0x78; pop ebx; ret; 
0x0005894a: add byte ptr [eax], al; jne 0x5895f; add esp, 0x1c; ret; 
0x0007be04: add byte ptr [eax], al; jne 0x7be1c; add esp, 0x28; pop ebx; ret; 
0x00080ba6: add byte ptr [eax], al; jne 0x80bb8; sub edx, dword ptr [eax + 0xc]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x00081ff8: add byte ptr [eax], al; jne 0x82031; add esp, 0x14; pop ebx; pop esi; ret; 
0x000821b7: add byte ptr [eax], al; jne 0x821dd; add esp, 0x2c; ret; 
0x0008231f: add byte ptr [eax], al; jne 0x8234b; add esp, 0x2c; ret; 
0x000826ee: add byte ptr [eax], al; jne 0x82715; add esp, 0x24; pop ebx; pop esi; ret; 
0x0008278a: add byte ptr [eax], al; jne 0x82796; and edx, 0x38; cmp edx, 8; je 0x82797; ret; 
0x00082a66: add byte ptr [eax], al; jne 0x82a70; add esp, 0x14; pop ebx; pop esi; ret; 
0x00084c90: add byte ptr [eax], al; jne 0x84d87; add esp, 0x94; pop ebx; pop esi; ret; 
0x00084ecd: add byte ptr [eax], al; jne 0x84ef3; add esp, 0x24; pop ebx; pop esi; ret; 
0x00086500: add byte ptr [eax], al; jne 0x86508; add esp, 0x2c; ret; 
0x00088666: add byte ptr [eax], al; jne 0x88698; mov eax, edx; pop ebx; pop esi; ret; 
0x00088964: add byte ptr [eax], al; jne 0x88970; xor eax, eax; pop ebx; ret; 
0x000895d1: add byte ptr [eax], al; jne 0x895db; add esp, 0x14; pop ebx; pop esi; ret; 
0x0008ae0c: add byte ptr [eax], al; jne 0x8ae15; add esp, 0x28; pop ebx; ret; 
0x0008ae9c: add byte ptr [eax], al; jne 0x8aea4; add esp, 0x2c; ret; 
0x0008c200: add byte ptr [eax], al; jne 0x8c208; add esp, 0x2c; ret; 
0x0008c660: add byte ptr [eax], al; jne 0x8c668; add esp, 0x2c; ret; 
0x0008cb4c: add byte ptr [eax], al; jne 0x8cb54; add esp, 0x2c; ret; 
0x0008cf9c: add byte ptr [eax], al; jne 0x8cfa4; add esp, 0x2c; ret; 
0x0008e0d6: add byte ptr [eax], al; jne 0x8e0e2; and eax, 0x38; cmp eax, 8; je 0x8e0e3; ret; 
0x0008e191: add byte ptr [eax], al; jne 0x8e1a9; add esp, 0x24; pop ebx; pop esi; ret; 
0x0008f1fa: add byte ptr [eax], al; jne 0x8f233; add esp, 0x24; pop ebx; pop esi; ret; 
0x0008f29c: add byte ptr [eax], al; jne 0x8f2eb; add esp, 0x124; pop ebx; pop esi; ret; 
0x0008fde5: add byte ptr [eax], al; jne 0x8fe24; add esp, 0x38; pop ebx; ret; 
0x00090055: add byte ptr [eax], al; jne 0x90077; add esp, 0x2c; ret; 
0x0009016b: add byte ptr [eax], al; jne 0x901a7; add esp, 0x14; pop ebx; pop esi; ret; 
0x000902e1: add byte ptr [eax], al; jne 0x90307; add esp, 0x2c; ret; 
0x00090551: add byte ptr [eax], al; jne 0x90577; add esp, 0x18; pop ebx; ret; 
0x000906e1: add byte ptr [eax], al; jne 0x90727; add esp, 0x124; pop ebx; pop esi; ret; 
0x0009078c: add byte ptr [eax], al; jne 0x907db; add esp, 0x124; pop ebx; pop esi; ret; 
0x0009222b: add byte ptr [eax], al; jne 0x92234; add esp, 0x28; pop ebx; ret; 
0x000935e5: add byte ptr [eax], al; jne 0x935ef; add esp, 0x24; pop ebx; pop esi; ret; 
0x000938b3: add byte ptr [eax], al; jne 0x938bc; add esp, 0x28; pop ebx; ret; 
0x00093e91: add byte ptr [eax], al; jne 0x93e9a; add esp, 0x38; pop ebx; ret; 
0x00094318: add byte ptr [eax], al; jne 0x94337; add esp, 0xb4; pop ebx; pop esi; ret; 
0x000952ba: add byte ptr [eax], al; jne 0x952c4; add esp, 0x24; pop ebx; pop esi; ret; 
0x00099cc6: add byte ptr [eax], al; jne 0x99cd3; add esp, 0x38; mov eax, ebx; pop ebx; ret 4; 
0x000c41c0: add byte ptr [eax], al; jne 0xc41ec; add esp, 0x18; pop ebx; ret; 
0x000c8e06: add byte ptr [eax], al; jne 0xc8e13; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000c8e8f: add byte ptr [eax], al; jne 0xc8e9c; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000c8f1d: add byte ptr [eax], al; jne 0xc8f2a; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000cad10: add byte ptr [eax], al; jne 0xcad27; add esp, 0x28; pop ebx; ret; 
0x000cad90: add byte ptr [eax], al; jne 0xcad98; add esp, 0x1c; ret; 
0x000caddb: add byte ptr [eax], al; jne 0xcade4; add esp, 0x38; pop ebx; ret; 
0x000cae3b: add byte ptr [eax], al; jne 0xcae44; add esp, 0x48; pop ebx; ret; 
0x000cbce1: add byte ptr [eax], al; jne 0xcbcea; add esp, 0x28; pop ebx; ret; 
0x000cbf37: add byte ptr [eax], al; jne 0xcbf79; add esp, 0x28; pop ebx; ret; 
0x000cbff0: add byte ptr [eax], al; jne 0xcc053; add esp, 0x24; pop ebx; pop esi; ret; 
0x000cc2fb: add byte ptr [eax], al; jne 0xcc318; add esp, 0x38; pop ebx; ret; 
0x000cea22: add byte ptr [eax], al; jne 0xcea49; add esp, 0x24; pop ebx; pop esi; ret; 
0x000ceaba: add byte ptr [eax], al; jne 0xceae1; add esp, 0x24; pop ebx; pop esi; ret; 
0x000cef0d: add byte ptr [eax], al; jne 0xcef18; add esp, 0x28; xor eax, eax; pop ebx; ret; 
0x000d4834: add byte ptr [eax], al; jne 0xd483c; add esp, 0x1c; ret; 
0x000d6ec4: add byte ptr [eax], al; jne 0xd6ecc; add esp, 0x1c; ret; 
0x000d7028: add byte ptr [eax], al; jne 0xd7062; add esp, 0x28; pop ebx; ret; 
0x000d7247: add byte ptr [eax], al; jne 0xd7250; add esp, 0x28; pop ebx; ret; 
0x000d8427: add byte ptr [eax], al; jne 0xd8433; add esp, 0xe8; pop ebx; ret; 
0x000d84ac: add byte ptr [eax], al; jne 0xd84b5; add esp, 0x38; pop ebx; ret; 
0x000d8553: add byte ptr [eax], al; jne 0xd855f; add esp, 0xe8; pop ebx; ret; 
0x000d85dc: add byte ptr [eax], al; jne 0xd85e5; add esp, 0x38; pop ebx; ret; 
0x000da80c: add byte ptr [eax], al; jne 0xda859; add esp, 0x28; pop ebx; ret; 
0x000dd737: add byte ptr [eax], al; jne 0xdd7e3; add esp, 0x68; pop ebx; ret; 
0x000dda2b: add byte ptr [eax], al; jne 0xddaf3; add esp, 0x64; pop ebx; pop esi; ret; 
0x000dde3d: add byte ptr [eax], al; jne 0xdde84; add esp, 0x34; pop ebx; pop esi; ret; 
0x000df3f8: add byte ptr [eax], al; jne 0xdf449; add esp, 0x28; pop ebx; ret; 
0x000df498: add byte ptr [eax], al; jne 0xdf4e9; add esp, 0x28; pop ebx; ret; 
0x000df761: add byte ptr [eax], al; jne 0xdf7b9; add esp, 0x24; pop ebx; pop esi; ret; 
0x000df811: add byte ptr [eax], al; jne 0xdf869; add esp, 0x24; pop ebx; pop esi; ret; 
0x000e0e69: add byte ptr [eax], al; jne 0xe0e86; add esp, 0x78; pop ebx; ret; 
0x000e3529: add byte ptr [eax], al; jne 0xe3546; add esp, 0x78; pop ebx; ret; 
0x000f8559: add byte ptr [eax], al; jne 0xf8576; add esp, 0x78; pop ebx; ret; 
0x000f9139: add byte ptr [eax], al; jne 0xf9156; add esp, 0x78; pop ebx; ret; 
0x0002ecbb: add byte ptr [eax], al; lea eax, [eax + 0x1120]; ret; 
0x001978c9: add byte ptr [eax], al; lea eax, [eax + 0xb]; pop edi; ret; 
0x001978f2: add byte ptr [eax], al; lea eax, [eax + 0xf]; pop edi; ret; 
0x00197907: add byte ptr [eax], al; lea eax, [eax + 1]; pop edi; ret; 
0x00197917: add byte ptr [eax], al; lea eax, [eax + 2]; pop edi; ret; 
0x0019785f: add byte ptr [eax], al; lea eax, [eax + 3]; pop edi; ret; 
0x00197927: add byte ptr [eax], al; lea eax, [eax + 4]; pop edi; ret; 
0x00197892: add byte ptr [eax], al; lea eax, [eax + 7]; pop edi; ret; 
0x00196d29: add byte ptr [eax], al; lea eax, [ecx + 0xc]; ret; 
0x00196f87: add byte ptr [eax], al; lea eax, [ecx + 1]; ret; 
0x00196f97: add byte ptr [eax], al; lea eax, [ecx + 2]; ret; 
0x00196fa7: add byte ptr [eax], al; lea eax, [ecx + 3]; ret; 
0x00196cd6: add byte ptr [eax], al; lea eax, [ecx + 4]; ret; 
0x00196fb7: add byte ptr [eax], al; lea eax, [ecx + 5]; ret; 
0x00196d00: add byte ptr [eax], al; lea eax, [ecx + 8]; ret; 
0x00195c44: add byte ptr [eax], al; lea eax, [edi + 0xb]; pop edi; ret; 
0x00195bfe: add byte ptr [eax], al; lea eax, [edi + 0xf]; pop edi; ret; 
0x001968c7: add byte ptr [eax], al; lea eax, [edi + 1]; pop edi; ret; 
0x001968d7: add byte ptr [eax], al; lea eax, [edi + 2]; pop edi; ret; 
0x00195ba1: add byte ptr [eax], al; lea eax, [edi + 3]; pop edi; ret; 
0x001968e7: add byte ptr [eax], al; lea eax, [edi + 4]; pop edi; ret; 
0x00195b5b: add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x00196121: add byte ptr [eax], al; lea eax, [edi - 0x10]; pop edi; ret; 
0x00196146: add byte ptr [eax], al; lea eax, [edi - 0xc]; pop edi; ret; 
0x00196199: add byte ptr [eax], al; lea eax, [edi - 4]; pop edi; ret; 
0x00196170: add byte ptr [eax], al; lea eax, [edi - 8]; pop edi; ret; 
0x00197360: add byte ptr [eax], al; lea eax, [edx + 0xb]; ret; 
0x00197389: add byte ptr [eax], al; lea eax, [edx + 0xf]; ret; 
0x0019739e: add byte ptr [eax], al; lea eax, [edx + 1]; ret; 
0x00197313: add byte ptr [eax], al; lea eax, [edx + 3]; ret; 
0x00197336: add byte ptr [eax], al; lea eax, [edx + 7]; ret; 
0x0016f07e: add byte ptr [eax], al; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000de369: add byte ptr [eax], al; lea ebx, [eax + 0x70]; mov dword ptr [eax + 0x70], ebx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x000869d5: add byte ptr [eax], al; lea ebx, [eax + 0x70]; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x000b5fd6: add byte ptr [eax], al; lea ebx, [eax + 4]; mov eax, ebx; pop ebx; ret; 
0x00116336: add byte ptr [eax], al; lea ecx, [eax + 0x5402]; mov eax, edi; call dword ptr gs:[0x10]; 
0x000de8f2: add byte ptr [eax], al; lea ecx, [ebp - 0x6d179]; mov edi, 0x1000; mov ebx, dword ptr [esp + 0xc0]; call dword ptr gs:[0x10]; 
0x000889c2: add byte ptr [eax], al; lea ecx, [esi - 0x72580]; mov dword ptr [esp + 8], edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x00161fa2: add byte ptr [eax], al; lea ecx, [esp + 0x28]; push ecx; push 4; push edx; call dword ptr [eax + 0x14]; 
0x00122186: add byte ptr [eax], al; lea ecx, [esp + 0xc]; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x000d756d: add byte ptr [eax], al; lea ecx, [esp + 0xc]; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x00122e89: add byte ptr [eax], al; lea ecx, [esp + 0xc]; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x000fb12e: add byte ptr [eax], al; lea ecx, [esp + 4]; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x001196b5: add byte ptr [eax], al; lea edi, [ebx - 1]; cmp edi, 3; cmovae esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00167035: add byte ptr [eax], al; lea edx, [edx - 0x4a0]; mov dword ptr [eax + 4], edx; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0xc], edx; ret; 
0x0008686f: add byte ptr [eax], al; lea edx, [esi + 0x22c]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0014100c: add byte ptr [eax], al; lea edx, [esp + 0x10]; push edx; push edi; call eax; 
0x001410d8: add byte ptr [eax], al; lea edx, [esp + 0x10]; push edx; push esi; call eax; 
0x000939a6: add byte ptr [eax], al; lea edx, [esp + 0x18]; mov eax, 0x103; mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00109423: add byte ptr [eax], al; lea edx, [esp + 0x18]; mov eax, 0x10c; call dword ptr gs:[0x10]; 
0x00109593: add byte ptr [eax], al; lea edx, [esp + 0x18]; mov eax, 0x10d; call dword ptr gs:[0x10]; 
0x00108ec6: add byte ptr [eax], al; lea edx, [esp + 0x2c]; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x0015db70: add byte ptr [eax], al; lea edx, [esp + 0xac]; push edx; push esi; call dword ptr [eax + 4]; 
0x001959b8: add byte ptr [eax], al; lea esi, [esi]; add eax, 1; ret; 
0x0008372b: add byte ptr [eax], al; lea esi, [esi]; add esp, 4; pop ebx; pop esi; ret; 
0x00133aab: add byte ptr [eax], al; lea esi, [esi]; and eax, 0xffffff; ret; 
0x0008468b: add byte ptr [eax], al; lea esi, [esi]; and eax, 0xfffffffd; mov dword ptr [ecx + 8], eax; xor eax, eax; ret; 
0x000b43bb: add byte ptr [eax], al; lea esi, [esi]; bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x000b3f8b: add byte ptr [eax], al; lea esi, [esi]; bsr eax, eax; lea eax, [eax + ecx + 0x10]; ret; 
0x0003a2eb: add byte ptr [eax], al; lea esi, [esi]; call dword ptr [ebx]; 
0x0009a1ea: add byte ptr [eax], al; lea esi, [esi]; endbr32; mov eax, 0xffffffff; ret; 
0x001585ca: add byte ptr [eax], al; lea esi, [esi]; endbr32; mov eax, 1; ret; 
0x00166b6a: add byte ptr [eax], al; lea esi, [esi]; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x0017199b: add byte ptr [eax], al; lea esi, [esi]; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x00082d3a: add byte ptr [eax], al; lea esi, [esi]; endbr32; ret; 
0x00080e9a: add byte ptr [eax], al; lea esi, [esi]; endbr32; xor eax, eax; ret; 
0x001982c7: add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 8]; ret; 
0x00195d7a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xa]; pop edi; ret; 
0x00195d8a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xb]; pop edi; ret; 
0x00195d9a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xc]; pop edi; ret; 
0x00195daa: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xd]; pop edi; ret; 
0x00195dba: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xe]; pop edi; ret; 
0x00195d0a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 2]; pop edi; ret; 
0x00195d1a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 3]; pop edi; ret; 
0x00195d2a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 4]; pop edi; ret; 
0x00195d3a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 5]; pop edi; ret; 
0x00195d4a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 6]; pop edi; ret; 
0x00195d5a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 8]; pop edi; ret; 
0x00195d6a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 9]; pop edi; ret; 
0x001961da: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xa]; pop edi; ret; 
0x001961ca: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xb]; pop edi; ret; 
0x001961ba: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xd]; pop edi; ret; 
0x001961aa: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xe]; pop edi; ret; 
0x0019624a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 1]; pop edi; ret; 
0x0019623a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 2]; pop edi; ret; 
0x0019622a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 3]; pop edi; ret; 
0x0019855a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 4]; pop edi; ret; 
0x0019621a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 5]; pop edi; ret; 
0x0019620a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 6]; pop edi; ret; 
0x001961fa: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 7]; pop edi; ret; 
0x001961ea: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 9]; pop edi; ret; 
0x00197398: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 1]; ret; 
0x00197b74: add byte ptr [eax], al; lea esi, [esi]; lea esi, [esi]; xor eax, eax; ret; 
0x000a3e8b: add byte ptr [eax], al; lea esi, [esi]; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x000afd48: add byte ptr [eax], al; lea esi, [esi]; mov byte ptr [eax], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000a5d47: add byte ptr [eax], al; lea esi, [esi]; mov byte ptr [ecx], dl; pop ebx; ret; 
0x0008ea4b: add byte ptr [eax], al; lea esi, [esi]; mov dword ptr [eax + 4], edx; ret; 
0x00084bbb: add byte ptr [eax], al; lea esi, [esi]; mov eax, 0x16; ret; 
0x001495bb: add byte ptr [eax], al; lea esi, [esi]; mov eax, 0xffffffff; pop ebx; ret; 
0x0014049b: add byte ptr [eax], al; lea esi, [esi]; mov eax, 0xffffffff; ret; 
0x00191de8: add byte ptr [eax], al; lea esi, [esi]; mov eax, 1; ja 0x191df9; neg eax; ret; 
0x000c9cca: add byte ptr [eax], al; lea esi, [esi]; mov eax, 1; jg 0xc9cd9; neg eax; ret; 
0x000c9ec8: add byte ptr [eax], al; lea esi, [esi]; mov eax, 1; ret; 
0x000c9edb: add byte ptr [eax], al; lea esi, [esi]; mov eax, 2; ret; 
0x000c9eeb: add byte ptr [eax], al; lea esi, [esi]; mov eax, 3; ret; 
0x000c9efb: add byte ptr [eax], al; lea esi, [esi]; mov eax, 4; ret; 
0x000c9f0b: add byte ptr [eax], al; lea esi, [esi]; mov eax, 5; ret; 
0x000c9f1b: add byte ptr [eax], al; lea esi, [esi]; mov eax, 6; ret; 
0x000c9f2b: add byte ptr [eax], al; lea esi, [esi]; mov eax, 7; ret; 
0x0016570b: add byte ptr [eax], al; lea esi, [esi]; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0008486b: add byte ptr [eax], al; lea esi, [esi]; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x14], edx; xor eax, eax; ret; 
0x0019829a: add byte ptr [eax], al; lea esi, [esi]; mov eax, ecx; ret; 
0x000d70bb: add byte ptr [eax], al; lea esi, [esi]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [edx], ebx; pop ebx; ret; 
0x000a5d6a: add byte ptr [eax], al; lea esi, [esi]; mov word ptr [ecx], dx; mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x000a83db: add byte ptr [eax], al; lea esi, [esi]; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x000a3fea: add byte ptr [eax], al; lea esi, [esi]; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000a5dcb: add byte ptr [eax], al; lea esi, [esi]; movlpd qword ptr [ecx], xmm0; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x000c9ea9: add byte ptr [eax], al; lea esi, [esi]; nop; add eax, 3; ret; 
0x00196d99: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 0xa]; ret; 
0x00196da9: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 0xb]; ret; 
0x00196db9: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 0xd]; ret; 
0x00196dc9: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 0xe]; ret; 
0x00196dd9: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 0xf]; ret; 
0x00196d39: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 2]; ret; 
0x00196d49: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 3]; ret; 
0x00196d59: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 5]; ret; 
0x00196d69: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 6]; ret; 
0x00196d79: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 7]; ret; 
0x00196d89: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 9]; ret; 
0x00195cf9: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edi + 1]; pop edi; ret; 
0x00195ce9: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edi]; pop edi; ret; 
0x00197409: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 0xa]; ret; 
0x00197419: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 0xc]; ret; 
0x00197429: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 0xd]; ret; 
0x00197439: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 0xe]; ret; 
0x001973a9: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 2]; ret; 
0x001973b9: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 4]; ret; 
0x001973c9: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 5]; ret; 
0x001973d9: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 6]; ret; 
0x001973e9: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 8]; ret; 
0x001973f9: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 9]; ret; 
0x000a5d59: add byte ptr [eax], al; lea esi, [esi]; nop; mov word ptr [ecx], dx; pop ebx; ret; 
0x000c9eb9: add byte ptr [eax], al; lea esi, [esi]; nop; xor eax, eax; ret; 
0x000a5d38: add byte ptr [eax], al; lea esi, [esi]; pop ebx; ret; 
0x000e95fb: add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; pop ebx; pop esi; ret; 
0x000c9cb8: add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; pop edi; pop esi; ret; 
0x00195dca: add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; pop edi; ret; 
0x00095c9b: add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; ret; 
0x00082c9c: add byte ptr [eax], al; lock cmpxchg dword ptr [ecx], edx; setne al; movzx eax, al; pop ebx; ret; 
0x00098f67: add byte ptr [eax], al; lock dec dword ptr [edi]; inc esp; ret 0x568d; 
0x00094d7f: add byte ptr [eax], al; lock dec dword ptr [edi]; inc esp; ret 0xd231; 
0x00099574: add byte ptr [eax], al; lock dec dword ptr [edi]; inc esp; ret 0xe821; 
0x00098c11: add byte ptr [eax], al; lock dec dword ptr [edi]; inc esp; shl dword ptr [ecx], 1; ret 0x1a8b; 
0x000827cf: add byte ptr [eax], al; mov byte ptr [eax + 0x4fe], 0; ret; 
0x00048a7c: add byte ptr [eax], al; mov byte ptr [eax + ecx], 0; pop ebx; pop esi; ret; 
0x000b317e: add byte ptr [eax], al; mov byte ptr [eax], bh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afd4e: add byte ptr [eax], al; mov byte ptr [eax], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000a5d4e: add byte ptr [eax], al; mov byte ptr [ecx], dl; pop ebx; ret; 
0x0008450a: add byte ptr [eax], al; mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 8], 0x10; xor eax, eax; ret; 
0x00080fb6: add byte ptr [eax], al; mov dword ptr [eax + 0x19a0], 0; mov dword ptr [eax + 0x19a4], 0; ret; 
0x00080fc0: add byte ptr [eax], al; mov dword ptr [eax + 0x19a4], 0; ret; 
0x000827e9: add byte ptr [eax], al; mov dword ptr [eax + 0x1c], edx; mov edx, dword ptr gs:[0x7c]; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x80], eax; ret; 
0x00094629: add byte ptr [eax], al; mov dword ptr [eax + 0x1ec], 1; ret; 
0x000827f3: add byte ptr [eax], al; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x80], eax; ret; 
0x00094266: add byte ptr [eax], al; mov dword ptr [eax + 0x3b08], 0; ret; 
0x00084503: add byte ptr [eax], al; mov dword ptr [eax + 0xc], 0; mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 8], 0x10; xor eax, eax; ret; 
0x000911c3: add byte ptr [eax], al; mov dword ptr [eax + 0xc], ecx; ret; 
0x0008282a: add byte ptr [eax], al; mov dword ptr [eax + 0xc], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x0016685c: add byte ptr [eax], al; mov dword ptr [eax + 0xc], edx; mov eax, ecx; pop ebx; ret; 
0x0016681c: add byte ptr [eax], al; mov dword ptr [eax + 0xc], edx; mov eax, ecx; ret; 
0x0015318a: add byte ptr [eax], al; mov dword ptr [eax + 0xf8], ecx; mov dword ptr [eax + 0xfc], edx; ret; 
0x00153190: add byte ptr [eax], al; mov dword ptr [eax + 0xfc], edx; ret; 
0x0014c82d: add byte ptr [eax], al; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; add esp, 8; pop ebx; ret; 
0x0007ffb2: add byte ptr [eax], al; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; ret; 
0x0015a31c: add byte ptr [eax], al; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x000f82d7: add byte ptr [eax], al; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x0008d6ec: add byte ptr [eax], al; mov dword ptr [eax + 4], 0; xor eax, eax; ret; 
0x0013fb31: add byte ptr [eax], al; mov dword ptr [eax + 4], 0x29; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0015a280: add byte ptr [eax], al; mov dword ptr [eax + 4], 1; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x0015a2aa: add byte ptr [eax], al; mov dword ptr [eax + 4], ecx; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x0015a258: add byte ptr [eax], al; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x0015a297: add byte ptr [eax], al; mov dword ptr [eax + 4], edx; pop ebx; ret; 
0x0014c834: add byte ptr [eax], al; mov dword ptr [eax + 8], 0; add esp, 8; pop ebx; ret; 
0x000f82d0: add byte ptr [eax], al; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x0007ffb9: add byte ptr [eax], al; mov dword ptr [eax + 8], 0; ret; 
0x00084511: add byte ptr [eax], al; mov dword ptr [eax + 8], 0x10; xor eax, eax; ret; 
0x0015a287: add byte ptr [eax], al; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x0015d854: add byte ptr [eax], al; mov dword ptr [eax + 8], edx; ret; 
0x00089603: add byte ptr [eax], al; mov dword ptr [eax + 8], edx; xor edx, edx; mov eax, edx; ret; 
0x001a08d6: add byte ptr [eax], al; mov dword ptr [eax + ebp*4], edi; test edx, edx; je 0x1a08e9; mov dword ptr [esp + 8], eax; call edx; 
0x000300a3: add byte ptr [eax], al; mov dword ptr [eax + ebx], edx; pop ebx; pop esi; ret; 
0x00162f2e: add byte ptr [eax], al; mov dword ptr [eax + edx], ecx; ret; 
0x000380bc: add byte ptr [eax], al; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x00081f3d: add byte ptr [eax], al; mov dword ptr [eax], edx; add esp, 4; pop ebx; pop esi; ret; 
0x0003ab10: add byte ptr [eax], al; mov dword ptr [ebp + edi], edx; push dword ptr [ebx + 4]; call eax; 
0x0008be38: add byte ptr [eax], al; mov dword ptr [ebp - 0x30], 1; call 0x82810; mov eax, dword ptr [ebp - 0x3c]; add esp, 0x10; call eax; 
0x00151853: add byte ptr [eax], al; mov dword ptr [ebx + 0x5188], 0; call esi; 
0x001517cc: add byte ptr [eax], al; mov dword ptr [ebx + 0x61c8], 0; call esi; 
0x00151745: add byte ptr [eax], al; mov dword ptr [ebx + 0x7208], 0; call esi; 
0x001516be: add byte ptr [eax], al; mov dword ptr [ebx + 0x8248], 0; call esi; 
0x00151637: add byte ptr [eax], al; mov dword ptr [ebx + 0x9288], 0; call esi; 
0x00145283: add byte ptr [eax], al; mov dword ptr [ebx + 0xc], 1; add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x0016e94e: add byte ptr [eax], al; mov dword ptr [ebx + 0xc], eax; add esp, 0x28; pop ebx; ret; 
0x0008b3be: add byte ptr [eax], al; mov dword ptr [ebx + 4], 0; mov esi, edx; call dword ptr gs:[0x10]; 
0x0016e9a1: add byte ptr [eax], al; mov dword ptr [ebx + 8], eax; add esp, 0x28; pop ebx; ret; 
0x0008be64: add byte ptr [eax], al; mov dword ptr [ebx], 2; mov edx, 0x7fffffff; xor esi, esi; call dword ptr gs:[0x10]; 
0x0016edaa: add byte ptr [eax], al; mov dword ptr [ebx], eax; add esp, 0x28; pop ebx; ret; 
0x000380d2: add byte ptr [eax], al; mov dword ptr [ecx + eax], 0x16; mov eax, 0xffffffff; ret; 
0x0010fba3: add byte ptr [eax], al; mov dword ptr [ecx + eax], 0x16; mov eax, 1; ret; 
0x00079443: add byte ptr [eax], al; mov dword ptr [ecx + eax], 9; mov eax, 0xffffffff; ret; 
0x00150c13: add byte ptr [eax], al; mov dword ptr [ecx + edx], eax; add esp, 4; pop ebx; pop esi; ret; 
0x0008d9d7: add byte ptr [eax], al; mov dword ptr [ecx], eax; mov byte ptr [ebx + 0x4fd], dl; xor eax, eax; pop ebx; ret; 
0x001212f2: add byte ptr [eax], al; mov dword ptr [ecx], ebx; int 0x80; 
0x0008d0a4: add byte ptr [eax], al; mov dword ptr [edx + 0x1c], eax; xor eax, eax; pop ebx; ret; 
0x000911bd: add byte ptr [eax], al; mov dword ptr [edx + 0x3ae0], eax; mov dword ptr [eax + 0xc], ecx; ret; 
0x0011274c: add byte ptr [eax], al; mov dword ptr [edx + 4], 0; pop esi; pop edi; ret; 
0x0011d513: add byte ptr [eax], al; mov dword ptr [edx + eax], 0x16; add esp, 4; pop ebx; pop esi; ret; 
0x0013337b: add byte ptr [eax], al; mov dword ptr [edx + eax], 0x16; add esp, 8; mov eax, 0xffffffff; pop ebx; ret; 
0x000376eb: add byte ptr [eax], al; mov dword ptr [edx + eax], 0x16; mov eax, 0xffffffff; ret; 
0x00171f4b: add byte ptr [eax], al; mov dword ptr [edx + eax], 0x16; xor eax, eax; ret; 
0x0008837e: add byte ptr [eax], al; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000fade8: add byte ptr [eax], al; mov dword ptr [edx], ecx; add esp, 0x24; pop ebx; pop esi; ret; 
0x0004ac94: add byte ptr [eax], al; mov dword ptr [edx], ecx; ret; 
0x0011fc96: add byte ptr [eax], al; mov dword ptr [esi + 0x10], edx; pop ebx; pop esi; pop edi; ret; 
0x00156de1: add byte ptr [eax], al; mov dword ptr [esi + 0x18], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0007f467: add byte ptr [eax], al; mov dword ptr [esi + 0x28], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x00080cad: add byte ptr [eax], al; mov dword ptr [esi + 0x28], 0; add esp, 4; pop ebx; pop esi; ret; 
0x0011ee8d: add byte ptr [eax], al; mov dword ptr [esp + 0x100c], eax; xor eax, eax; lea edx, [esp + 0xc]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x000819d4: add byte ptr [eax], al; mov dword ptr [esp + 0x10], edx; mov eax, dword ptr [eax + 4]; add esp, 0xc; jmp eax; 
0x000d8f99: add byte ptr [eax], al; mov dword ptr [esp + 0x13c], eax; xor eax, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x000818d4: add byte ptr [eax], al; mov dword ptr [esp + 0x14], ecx; mov dword ptr [esp + 0x10], edx; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x0003a82f: add byte ptr [eax], al; mov dword ptr [esp + 0x14], ecx; sub esp, 8; push 0; push edx; call edi; 
0x001261f5: add byte ptr [eax], al; mov dword ptr [esp + 0x18], eax; or esi, 0x100; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00125ba0: add byte ptr [eax], al; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x001169ea: add byte ptr [eax], al; mov dword ptr [esp + 0x18], edx; mov esi, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00108cdb: add byte ptr [eax], al; mov dword ptr [esp + 0x18c], eax; xor eax, eax; mov eax, 0x17f; call dword ptr gs:[0x10]; 
0x0008dfee: add byte ptr [eax], al; mov dword ptr [esp + 0x1c], eax; mov eax, dword ptr [esp + 0xb8]; mov dword ptr [esp + 0x20], eax; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x0006de50: add byte ptr [eax], al; mov dword ptr [esp + 0x20], 0; jmp eax; 
0x0006de00: add byte ptr [eax], al; mov dword ptr [esp + 0x20], 1; jmp eax; 
0x0008dff9: add byte ptr [eax], al; mov dword ptr [esp + 0x20], eax; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x000388d3: add byte ptr [eax], al; mov dword ptr [esp + 0x20], eax; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x00068c30: add byte ptr [eax], al; mov dword ptr [esp + 0x24], 0; jmp eax; 
0x00068bd8: add byte ptr [eax], al; mov dword ptr [esp + 0x24], 1; jmp eax; 
0x00091677: add byte ptr [eax], al; mov dword ptr [esp + 0x24], ecx; mov edx, ecx; mov ecx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00093b0d: add byte ptr [eax], al; mov dword ptr [esp + 0x2c], edx; mov dword ptr [esp + 0x34], 4; call dword ptr gs:[0x10]; 
0x0012482b: add byte ptr [eax], al; mov dword ptr [esp + 0x30], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0006f41e: add byte ptr [eax], al; mov dword ptr [esp + 0x34], 1; jmp ebx; 
0x0006e848: add byte ptr [eax], al; mov dword ptr [esp + 0x3c], 0x20; jmp eax; 
0x00160190: add byte ptr [eax], al; mov dword ptr [esp + 0x434], edx; mov edx, dword ptr [eax + 4]; push ecx; push eax; call dword ptr [edx + 8]; 
0x0006e802: add byte ptr [eax], al; mov dword ptr [esp + 0x44], 1; jmp ebx; 
0x000930b0: add byte ptr [eax], al; mov dword ptr [esp + 0x44], 2; call dword ptr gs:[0x10]; 
0x0006f39e: add byte ptr [eax], al; mov dword ptr [esp + 0x4c], 1; jmp ebx; 
0x0006e554: add byte ptr [eax], al; mov dword ptr [esp + 0x5c], 0; jmp eax; 
0x001162a4: add byte ptr [eax], al; mov dword ptr [esp + 0x5c], eax; xor eax, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0006f38e: add byte ptr [eax], al; mov dword ptr [esp + 0x64], 1; jmp ebx; 
0x00069394: add byte ptr [eax], al; mov dword ptr [esp + 0x68], 1; jmp eax; 
0x00122833: add byte ptr [eax], al; mov dword ptr [esp + 0x68], eax; mov eax, dword ptr [edx + 0xa0]; mov dword ptr [esp + 0x6c], eax; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x0012283d: add byte ptr [eax], al; mov dword ptr [esp + 0x6c], eax; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x0016ece4: add byte ptr [eax], al; mov dword ptr [esp + 4], ecx; jmp dword ptr [eax + 0x30]; 
0x00071aa0: add byte ptr [eax], al; mov dword ptr [esp + 4], edx; jmp eax; 
0x000d7496: add byte ptr [eax], al; mov dword ptr [esp + 8], ecx; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x0015d880: add byte ptr [eax], al; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x00087267: add byte ptr [eax], al; mov dword ptr [esp + 8], edx; call dword ptr gs:[0x10]; 
0x0002d8c4: add byte ptr [eax], al; mov dword ptr [esp + 8], edx; pop ebx; jmp 0x2def0; pop ebx; ret; 
0x000719a1: add byte ptr [eax], al; mov dword ptr [esp + 8], edx; pop ebx; jmp eax; 
0x001243e8: add byte ptr [eax], al; mov dword ptr [esp], eax; mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00124b98: add byte ptr [eax], al; mov dword ptr [esp], eax; mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00083145: add byte ptr [eax], al; mov dword ptr gs:[0x7c], edx; ret; 
0x0008289d: add byte ptr [eax], al; mov dword ptr gs:[0x80], eax; ret; 
0x000d772f: add byte ptr [eax], al; mov eax, 0x10b; mov ecx, dword ptr [esp + 0x74]; mov edx, edi; call dword ptr gs:[0x10]; 
0x00092fcb: add byte ptr [eax], al; mov eax, 0x119; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00123100: add byte ptr [eax], al; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x00109adc: add byte ptr [eax], al; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x0010a7bd: add byte ptr [eax], al; mov eax, 0x133; call dword ptr gs:[0x10]; 
0x00084752: add byte ptr [eax], al; mov eax, 0x16; cmove eax, edx; ret; 
0x00174356: add byte ptr [eax], al; mov eax, 0x16; pop ebx; ret; 
0x0008bc96: add byte ptr [eax], al; mov eax, 0x16; ret; 
0x0004aa1e: add byte ptr [eax], al; mov eax, 0x180; call dword ptr gs:[0x10]; 
0x00086bae: add byte ptr [eax], al; mov eax, 0x182; call dword ptr gs:[0x10]; 
0x000d7435: add byte ptr [eax], al; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000d76b9: add byte ptr [eax], al; mov eax, 0x197; mov ecx, dword ptr [esp + 0x74]; mov edx, ebp; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0003858f: add byte ptr [eax], al; mov eax, 0x1a5; mov esi, 8; mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x0008305b: add byte ptr [eax], al; mov eax, 0x1a6; xor edx, edx; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000dfe0c: add byte ptr [eax], al; mov eax, 0x20; mov edx, 0x40; cmove eax, edx; ret; 
0x00124f3a: add byte ptr [eax], al; mov eax, 0x66; mov ebx, 0xe; call dword ptr gs:[0x10]; 
0x00122dfe: add byte ptr [eax], al; mov eax, 0x6a; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00122f7e: add byte ptr [eax], al; mov eax, 0x6b; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00122ec5: add byte ptr [eax], al; mov eax, 0x6c; mov ecx, esi; call dword ptr gs:[0x10]; 
0x001261ff: add byte ptr [eax], al; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x001268d2: add byte ptr [eax], al; mov eax, 0x75; xor esi, esi; mov ebx, 0x18; or dh, 1; call dword ptr gs:[0x10]; 
0x00125d32: add byte ptr [eax], al; mov eax, 0x75; xor esi, esi; mov ebx, 0xe; or dh, 1; call dword ptr gs:[0x10]; 
0x0004aa75: add byte ptr [eax], al; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x000dfcde: add byte ptr [eax], al; mov eax, 0x7f; mov edx, 0xfa; pop ebx; cmove eax, edx; ret; 
0x000dfc4f: add byte ptr [eax], al; mov eax, 0x7f; mov edx, 0xfffa; cmove eax, edx; pop ebx; ret; 
0x00087673: add byte ptr [eax], al; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x00086875: add byte ptr [eax], al; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x00037806: add byte ptr [eax], al; mov eax, 0xae; call dword ptr gs:[0x10]; 
0x00086a3f: add byte ptr [eax], al; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x00091672: add byte ptr [eax], al; mov eax, 0xaf; mov dword ptr [esp + 0x24], ecx; mov edx, ecx; mov ecx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0008df03: add byte ptr [eax], al; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x00197ab4: add byte ptr [eax], al; mov eax, 0xc; pop edi; ret; 
0x000d8d6c: add byte ptr [eax], al; mov eax, 0xdc; cmovae esi, ecx; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00088a7e: add byte ptr [eax], al; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x000890c7: add byte ptr [eax], al; mov eax, 0xf0; mov ebx, ebp; mov ecx, 7; mov esi, edx; call dword ptr gs:[0x10]; 
0x00089bd8: add byte ptr [eax], al; mov eax, 0xf0; mov ebx, ebp; mov esi, ecx; call dword ptr gs:[0x10]; 
0x0008abd3: add byte ptr [eax], al; mov eax, 0xf0; mov ebx, edi; mov ecx, 7; mov esi, edx; call dword ptr gs:[0x10]; 
0x00091ac9: add byte ptr [eax], al; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00086c76: add byte ptr [eax], al; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000839c8: add byte ptr [eax], al; mov eax, 0xf0; mov ecx, 0x81; xor esi, esi; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x0008b02e: add byte ptr [eax], al; mov eax, 0xf0; mov ecx, 8; mov esi, edx; call dword ptr gs:[0x10]; 
0x0008b8b1: add byte ptr [eax], al; mov eax, 0xf0; mov ecx, edx; call dword ptr gs:[0x10]; 
0x001743cd: add byte ptr [eax], al; mov eax, 0xf0; xor esi, esi; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00022112: add byte ptr [eax], al; mov eax, 0xffffffff; add esp, 0xc; ret; 
0x00116262: add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; pop esi; pop edi; ret; 
0x00037752: add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0003764a: add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; ret; 
0x000376f2: add byte ptr [eax], al; mov eax, 0xffffffff; ret; 
0x00191dee: add byte ptr [eax], al; mov eax, 1; ja 0x191df9; neg eax; ret; 
0x0009a59e: add byte ptr [eax], al; mov eax, 1; ret; 
0x00087dae: add byte ptr [eax], al; mov eax, 3; add esp, 0xc; ret; 
0x00197a0b: add byte ptr [eax], al; mov eax, 4; pop edi; ret; 
0x00197a64: add byte ptr [eax], al; mov eax, 8; pop edi; ret; 
0x0015aab5: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x2398]; sub esp, 8; push 0; push ebx; call dword ptr [eax + 0x14]; 
0x000828bc: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x24]; mov byte ptr gs:[0x4fe], al; cmp eax, 1; je 0x828d0; ret; 
0x0003af0e: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x34]; add esp, 4; pop ebx; pop esi; ret; 
0x0007ff05: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x34]; test eax, eax; jne 0x7ff00; ret; 
0x00083160: add byte ptr [eax], al; mov eax, dword ptr [eax + 8]; mov byte ptr gs:[0x4fe], al; cmp eax, 1; je 0x83178; ret; 
0x00116369: add byte ptr [eax], al; mov eax, dword ptr [eax + ebp]; mov dword ptr [esp + 0xc], eax; mov eax, edi; call dword ptr gs:[0x10]; 
0x00038273: add byte ptr [eax], al; mov eax, dword ptr [eax - 0x134]; mov dword ptr [edx + eax], 0x26; mov eax, 0xffffffff; ret; 
0x00147123: add byte ptr [eax], al; mov eax, dword ptr [eax - 0x14]; mov eax, dword ptr [edx + eax]; ret; 
0x0002ed83: add byte ptr [eax], al; mov eax, dword ptr [eax - 0x68]; mov eax, dword ptr [edx + eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x58]; ret; 
0x0002f7a3: add byte ptr [eax], al; mov eax, dword ptr [eax - 0x68]; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0011f2d1: add byte ptr [eax], al; mov eax, dword ptr [eax - 0xc8]; mov eax, dword ptr [eax + 0x24]; test eax, eax; cmove eax, edx; ret; 
0x000de769: add byte ptr [eax], al; mov eax, dword ptr [eax]; test eax, eax; je 0xde773; call eax; 
0x00161334: add byte ptr [eax], al; mov eax, dword ptr [ebp + 0x3c]; push dword ptr [ebp + 0x50]; mov ebx, dword ptr [esp + 0x3c]; push ebx; call dword ptr [eax + 0x14]; 
0x0015e2bc: add byte ptr [eax], al; mov eax, dword ptr [ebp + 0xb0]; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x0007ab98: add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x3c]; sub esp, 0xc; push esi; call dword ptr [eax + 0x30]; 
0x001589dc: add byte ptr [eax], al; mov eax, dword ptr [ebx + 0x10]; push 0; push esi; call dword ptr [eax + 0x14]; 
0x0016325e: add byte ptr [eax], al; mov eax, dword ptr [ebx - 0x3c]; pop ebx; pop esi; pop edi; ret; 
0x001631ce: add byte ptr [eax], al; mov eax, dword ptr [ebx - 0x48]; pop ebx; pop esi; pop edi; ret; 
0x0002fd1c: add byte ptr [eax], al; mov eax, dword ptr [ecx + eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x28]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0002fcdc: add byte ptr [eax], al; mov eax, dword ptr [ecx + eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x30]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00198c0e: add byte ptr [eax], al; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; ret; 
0x00160db3: add byte ptr [eax], al; mov eax, dword ptr [edi + 0x50]; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x001656f6: add byte ptr [eax], al; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x00083916: add byte ptr [eax], al; mov eax, dword ptr [edx]; mov ebx, dword ptr [edx + 4]; mov ecx, dword ptr [edx + 8]; mov edx, dword ptr [edx + 0xc]; call dword ptr gs:[0x10]; 
0x000eab4e: add byte ptr [eax], al; mov eax, dword ptr [esi + 0x3c]; add esp, 4; pop ebx; pop esi; ret; 
0x00165646: add byte ptr [eax], al; mov eax, dword ptr [esi + 4]; push ebx; push edx; push esi; call dword ptr [eax + 8]; 
0x00127a6a: add byte ptr [eax], al; mov eax, dword ptr [esp + 0x10]; mov eax, dword ptr [eax + 0x4c]; call 0x127920; add esp, 4; ret; 
0x0015867e: add byte ptr [eax], al; mov eax, dword ptr [esp + 0x18]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x001979ae: add byte ptr [eax], al; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x00104f4c: add byte ptr [eax], al; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x00162f28: add byte ptr [eax], al; mov eax, dword ptr gs:[0]; mov dword ptr [eax + edx], ecx; ret; 
0x000d867b: add byte ptr [eax], al; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0016b45c: add byte ptr [eax], al; mov eax, ebx; pop ebx; pop esi; ret; 
0x00037ebb: add byte ptr [eax], al; mov eax, ecx; pop ebx; pop esi; pop edi; ret; 
0x00038537: add byte ptr [eax], al; mov eax, ecx; ret; 
0x0007b356: add byte ptr [eax], al; mov eax, edi; call dword ptr gs:[0x10]; 
0x00086c1e: add byte ptr [eax], al; mov eax, edi; mov esi, edx; call dword ptr gs:[0x10]; 
0x000b290e: add byte ptr [eax], al; mov eax, edi; pop ebx; pop edi; ret; 
0x0007190a: add byte ptr [eax], al; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x000ad1ce: add byte ptr [eax], al; mov eax, edi; pop edi; pop esi; pop ebx; ret; 
0x001968ae: add byte ptr [eax], al; mov eax, edi; pop edi; ret; 
0x00021546: add byte ptr [eax], al; mov eax, edx; call dword ptr gs:[0x10]; 
0x0016c05d: add byte ptr [eax], al; mov eax, edx; pop ebx; pop esi; pop edi; ret; 
0x0014e2b4: add byte ptr [eax], al; mov eax, edx; pop ebx; pop esi; ret; 
0x0017c51f: add byte ptr [eax], al; mov eax, edx; pop edi; pop esi; pop ebx; ret; 
0x0007b06b: add byte ptr [eax], al; mov eax, edx; ret; 
0x00057fdb: add byte ptr [eax], al; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000de33d: add byte ptr [eax], al; mov ebx, 0x1200011; lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x00125a4b: add byte ptr [eax], al; mov ebx, 0xb; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x00124f3f: add byte ptr [eax], al; mov ebx, 0xe; call dword ptr gs:[0x10]; 
0x00115be2: add byte ptr [eax], al; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x00109c33: add byte ptr [eax], al; mov ebx, 0xffffff9c; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00109d87: add byte ptr [eax], al; mov ebx, 0xffffff9c; mov edx, edi; call dword ptr gs:[0x10]; 
0x0007b348: add byte ptr [eax], al; mov ebx, 2; mov edx, dword ptr [ebp - 0x34]; lea esi, [esi]; mov eax, edi; call dword ptr gs:[0x10]; 
0x000872dd: add byte ptr [eax], al; mov ebx, 2; mov esi, 8; call dword ptr gs:[0x10]; 
0x00088a0e: add byte ptr [eax], al; mov ebx, 2; xor edx, edx; mov ecx, dword ptr [esp + 8]; mov esi, 8; call dword ptr gs:[0x10]; 
0x001046f1: add byte ptr [eax], al; mov ebx, 2; xor edx, edx; mov ecx, ebp; mov esi, 8; call dword ptr gs:[0x10]; 
0x0017a3bc: add byte ptr [eax], al; mov ebx, 3; call dword ptr gs:[0x10]; 
0x00126f0a: add byte ptr [eax], al; mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; call dword ptr gs:[0x10]; 
0x00126eba: add byte ptr [eax], al; mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; mov edx, 0x40; call dword ptr gs:[0x10]; 
0x00104976: add byte ptr [eax], al; mov ebx, dword ptr [ebx + 4]; xor edx, edx; mov eax, 0x1b4; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x0004806d: add byte ptr [eax], al; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x00109389: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0012388a: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x14]; cmovne edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x00123194: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x0009338f: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x40]; mov edx, dword ptr [esp + 0x48]; mov eax, 0x1a3; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000cebc6: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x50]; mov eax, 0x68; mov edx, esi; call dword ptr gs:[0x10]; 
0x0010a8c2: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x50]; mov eax, 0xdd; mov ecx, esi; mov edx, edi; call dword ptr gs:[0x10]; 
0x00122ebe: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x84]; mov eax, 0x6c; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0010958c: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x90]; lea edx, [esp + 0x18]; mov eax, 0x10d; call dword ptr gs:[0x10]; 
0x000de8fd: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0xc0]; call dword ptr gs:[0x10]; 
0x00122730: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0xc0]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00092c53: add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00105017: add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; neg eax; pop ebx; ret; 
0x00037983: add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; mov ecx, 8; call dword ptr gs:[0x10]; 
0x0010b023: add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x00083b30: add byte ptr [eax], al; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000890cc: add byte ptr [eax], al; mov ebx, ebp; mov ecx, 7; mov esi, edx; call dword ptr gs:[0x10]; 
0x00088eaf: add byte ptr [eax], al; mov ebx, ebp; mov esi, ecx; call dword ptr gs:[0x10]; 
0x0008abd8: add byte ptr [eax], al; mov ebx, edi; mov ecx, 7; mov esi, edx; call dword ptr gs:[0x10]; 
0x00118180: add byte ptr [eax], al; mov ebx, edx; call dword ptr gs:[0x10]; 
0x00037958: add byte ptr [eax], al; mov ebx, edx; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x00109934: add byte ptr [eax], al; mov ebx, edx; ret; 
0x000939af: add byte ptr [eax], al; mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00115abb: add byte ptr [eax], al; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x00116656: add byte ptr [eax], al; mov ecx, 0x5409; mov edx, 1; call dword ptr gs:[0x10]; 
0x000831ac: add byte ptr [eax], al; mov ecx, 0x80; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x00091ace: add byte ptr [eax], al; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00086c7b: add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0016f074: add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000839cd: add byte ptr [eax], al; mov ecx, 0x81; xor esi, esi; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x0008980b: add byte ptr [eax], al; mov ecx, 0x87; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x000de364: add byte ptr [eax], al; mov ecx, 0xc; lea ebx, [eax + 0x70]; mov dword ptr [eax + 0x70], ebx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x00104980: add byte ptr [eax], al; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x000b541e: add byte ptr [eax], al; mov ecx, 0xffffffff; cmovb eax, ecx; ret; 
0x0015145e: add byte ptr [eax], al; mov ecx, 1; mov eax, ecx; ret; 
0x0008b3b9: add byte ptr [eax], al; mov ecx, 7; mov dword ptr [ebx + 4], 0; mov esi, edx; call dword ptr gs:[0x10]; 
0x000379e5: add byte ptr [eax], al; mov ecx, 8; call dword ptr gs:[0x10]; 
0x0008b033: add byte ptr [eax], al; mov ecx, 8; mov esi, edx; call dword ptr gs:[0x10]; 
0x00071841: add byte ptr [eax], al; mov ecx, dword ptr [eax + 0x58]; mov dword ptr [ecx + 0x88], edx; ret; 
0x00126fcc: add byte ptr [eax], al; mov ecx, dword ptr [ebp - 0x500]; mov dword ptr [ebp - 0x4e0], eax; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x00084b02: add byte ptr [eax], al; mov ecx, dword ptr [edi + 0xc]; xor cl, 0x81; mov dword ptr [edi], 0; call dword ptr gs:[0x10]; 
0x000911b7: add byte ptr [eax], al; mov ecx, dword ptr [edx + 0x3ae0]; mov dword ptr [edx + 0x3ae0], eax; mov dword ptr [eax + 0xc], ecx; ret; 
0x00122fe3: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0017a32d: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x001260dd: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00111858: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x54]; mov eax, 0x135; mov edi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x001117dc: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x54]; mov eax, 0x19e; mov edi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x001118b8: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x54]; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x00121926: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x64]; mov ebx, dword ptr [esp + 0x60]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000d76be: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x74]; mov edx, ebp; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000d7734: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x74]; mov edx, edi; call dword ptr gs:[0x10]; 
0x0010a64d: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xa4]; mov edx, dword ptr [esp + 0xa8]; mov esi, dword ptr [esp + 0xac]; call dword ptr gs:[0x10]; 
0x0010a352: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00058a13: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0012543c: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x0011f5d4: add byte ptr [eax], al; mov ecx, dword ptr [esp + 8]; mov dword ptr [ecx], eax; mov eax, 1; ret; 
0x000cc073: add byte ptr [eax], al; mov ecx, dword ptr [esp + 8]; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x000875c1: add byte ptr [eax], al; mov ecx, dword ptr [esp + 8]; xor edx, edx; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x00092fd0: add byte ptr [eax], al; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000dd843: add byte ptr [eax], al; mov ecx, ebp; cmove esi, eax; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x00038599: add byte ptr [eax], al; mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x000386b8: add byte ptr [eax], al; mov ecx, ebp; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x1a5; call dword ptr gs:[0x10]; 
0x00038660: add byte ptr [eax], al; mov ecx, ebp; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x00093658: add byte ptr [eax], al; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x000d72ef: add byte ptr [eax], al; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000d79c6: add byte ptr [eax], al; mov ecx, edi; mov ebx, 1; call dword ptr gs:[0x10]; 
0x0008b8b6: add byte ptr [eax], al; mov ecx, edx; call dword ptr gs:[0x10]; 
0x001253c7: add byte ptr [eax], al; mov ecx, edx; mov edx, edi; mov edi, ebp; call dword ptr gs:[0x10]; 
0x00122eca: add byte ptr [eax], al; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0010ab3b: add byte ptr [eax], al; mov ecx, esi; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0010a8cb: add byte ptr [eax], al; mov ecx, esi; mov edx, edi; call dword ptr gs:[0x10]; 
0x0004ac2f: add byte ptr [eax], al; mov ecx, esp; mov ebx, 0x3004; mov eax, 0x180; call dword ptr gs:[0x10]; 
0x001117e5: add byte ptr [eax], al; mov edi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00126781: add byte ptr [eax], al; mov edi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00116691: add byte ptr [eax], al; mov edi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00117437: add byte ptr [eax], al; mov edi, ebp; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000dfd8a: add byte ptr [eax], al; mov edx, 0x40; cmove eax, edx; ret; 
0x000dfcc1: add byte ptr [eax], al; mov edx, 0x7d00; pop ebx; cmove eax, edx; ret; 
0x00084fa0: add byte ptr [eax], al; mov edx, 0x7fffffff; call dword ptr gs:[0x10]; 
0x000dfc84: add byte ptr [eax], al; mov edx, 0x7fffffff; pop ebx; cmove eax, edx; ret; 
0x0008c0c0: add byte ptr [eax], al; mov edx, 0x7fffffff; setne cl; shl ecx, 7; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008d294: add byte ptr [eax], al; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008a375: add byte ptr [eax], al; mov edx, 0x7fffffff; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008505e: add byte ptr [eax], al; mov edx, 0x7fffffff; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008c4da: add byte ptr [eax], al; mov edx, 0x7fffffff; xor esi, esi; mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000857e5: add byte ptr [eax], al; mov edx, 0x7fffffff; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000dfce3: add byte ptr [eax], al; mov edx, 0xfa; pop ebx; cmove eax, edx; ret; 
0x000dfca6: add byte ptr [eax], al; mov edx, 0xfde8; pop ebx; cmove eax, edx; ret; 
0x000dfc54: add byte ptr [eax], al; mov edx, 0xfffa; cmove eax, edx; pop ebx; ret; 
0x0011af01: add byte ptr [eax], al; mov edx, 1; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00083783: add byte ptr [eax], al; mov edx, 1; call dword ptr gs:[0x10]; 
0x0016f079: add byte ptr [eax], al; mov edx, 1; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0011668c: add byte ptr [eax], al; mov edx, 1; mov edi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0014e2ce: add byte ptr [eax], al; mov edx, 1; pop ebx; pop esi; mov eax, edx; ret; 
0x0008328d: add byte ptr [eax], al; mov edx, 1; push ebx; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00085ada: add byte ptr [eax], al; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008b534: add byte ptr [eax], al; mov edx, 1; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00083994: add byte ptr [eax], al; mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008502c: add byte ptr [eax], al; mov edx, 1; xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00085cb6: add byte ptr [eax], al; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000831b1: add byte ptr [eax], al; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x00083230: add byte ptr [eax], al; mov edx, 2; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00160197: add byte ptr [eax], al; mov edx, dword ptr [eax + 4]; push ecx; push eax; call dword ptr [edx + 8]; 
0x0007b34d: add byte ptr [eax], al; mov edx, dword ptr [ebp - 0x34]; lea esi, [esi]; mov eax, edi; call dword ptr gs:[0x10]; 
0x0006e8a3: add byte ptr [eax], al; mov edx, dword ptr [esi + eax*4 - 0x735e0]; add edx, ebx; jmp edx; 
0x00125c43: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00166f7a: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x18]; test edx, edx; jne 0x166f90; add esp, 0xc; ret; 
0x00166fca: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x18]; test edx, edx; jne 0x166fe0; add esp, 0xc; ret; 
0x00159304: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x1c]; mov eax, dword ptr [edx + 4]; mov dword ptr [esp], edx; call dword ptr [eax + 0x10]; 
0x0009004a: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x90077; add esp, 0x2c; ret; 
0x000902d6: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x90307; add esp, 0x2c; ret; 
0x000fb0e2: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x24]; mov ebx, dword ptr [esp + 0x20]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0003bc3a: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00122132: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x34]; mov ebx, dword ptr [esp + 0x30]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00103b24: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001092a4: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 0x40]; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000ddb2c: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00125b43: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x48]; mov esi, dword ptr [esp + 0x50]; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x00109ad5: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x98]; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x0010a654: add byte ptr [eax], al; mov edx, dword ptr [esp + 0xa8]; mov esi, dword ptr [esp + 0xac]; call dword ptr gs:[0x10]; 
0x00037a0c: add byte ptr [eax], al; mov edx, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x00109ee7: add byte ptr [eax], al; mov edx, ebp; call dword ptr gs:[0x10]; 
0x000d7875: add byte ptr [eax], al; mov edx, ebp; mov ebx, 1; call dword ptr gs:[0x10]; 
0x0010a04d: add byte ptr [eax], al; mov edx, edi; call dword ptr gs:[0x10]; 
0x00086a37: add byte ptr [eax], al; mov edx, edi; lea ecx, [eax + 0x47c]; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x000cebcf: add byte ptr [eax], al; mov edx, esi; call dword ptr gs:[0x10]; 
0x000872e2: add byte ptr [eax], al; mov esi, 8; call dword ptr gs:[0x10]; 
0x00038594: add byte ptr [eax], al; mov esi, 8; mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x00086a32: add byte ptr [eax], al; mov esi, 8; mov edx, edi; lea ecx, [eax + 0x47c]; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x00108ebf: add byte ptr [eax], al; mov esi, dword ptr [esp + 0x1bc]; lea edx, [esp + 0x2c]; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x00125a50: add byte ptr [eax], al; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x000d70f3: add byte ptr [eax], al; mov esi, dword ptr [esp + 0x44]; mov ebx, dword ptr [esp + 0x40]; mov ecx, esi; call dword ptr gs:[0x10]; 
0x001230f9: add byte ptr [eax], al; mov esi, dword ptr [esp + 0xa0]; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x0010a65b: add byte ptr [eax], al; mov esi, dword ptr [esp + 0xac]; call dword ptr gs:[0x10]; 
0x00093ede: add byte ptr [eax], al; mov esi, ebp; call dword ptr gs:[0x10]; 
0x00122370: add byte ptr [eax], al; mov esi, edi; call dword ptr gs:[0x10]; 
0x000890d3: add byte ptr [eax], al; mov esi, edx; call dword ptr gs:[0x10]; 
0x00089810: add byte ptr [eax], al; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x0004ac7f: add byte ptr [eax], al; mov esp, edx; mov esi, dword ptr [edi + 0x3c]; mov edi, dword ptr [edi + 0x38]; ret; 
0x001167db: add byte ptr [eax], al; mov word ptr [eax + 0x16], dx; ret; 
0x000a2036: add byte ptr [eax], al; mov word ptr [edx], si; mov eax, edx; pop ebx; pop esi; ret; 
0x000ac4ee: add byte ptr [eax], al; movdqu xmmword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000a5dee: add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x000a5dfe: add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x000a5dde: add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000a5e0e: add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x000ac45e: add byte ptr [eax], al; movlpd qword ptr [edi - 1], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000ac46e: add byte ptr [eax], al; movlpd qword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000af61f: add byte ptr [eax], al; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x00083137: add byte ptr [eax], al; movzx eax, al; mov dword ptr [edx + 8], eax; mov byte ptr gs:[0x4fe], 0; mov dword ptr gs:[0x7c], edx; ret; 
0x000693d6: add byte ptr [eax], al; movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edx + eax*4 - 0x738e0]; add ecx, ebp; jmp ecx; 
0x00069336: add byte ptr [eax], al; movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edx + eax*4 - 0x739e0]; add ecx, ebp; jmp ecx; 
0x00068d86: add byte ptr [eax], al; movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edx + eax*4]; add ecx, ebp; jmp ecx; 
0x0018c8d7: add byte ptr [eax], al; movzx ecx, byte ptr [eax + 1]; movzx eax, byte ptr [edx + 1]; sub eax, ecx; pop ebp; ret; 
0x0018b10e: add byte ptr [eax], al; movzx ecx, byte ptr [eax + 1]; movzx eax, byte ptr [edx + 1]; sub eax, ecx; ret; 
0x0018c8f7: add byte ptr [eax], al; movzx ecx, byte ptr [eax + 2]; movzx eax, byte ptr [edx + 2]; sub eax, ecx; pop ebp; ret; 
0x0018c917: add byte ptr [eax], al; movzx ecx, byte ptr [eax + 3]; movzx eax, byte ptr [edx + 3]; sub eax, ecx; pop ebp; ret; 
0x0018c937: add byte ptr [eax], al; movzx ecx, byte ptr [eax + 4]; movzx eax, byte ptr [edx + 4]; sub eax, ecx; pop ebp; ret; 
0x0018c957: add byte ptr [eax], al; movzx ecx, byte ptr [eax + 5]; movzx eax, byte ptr [edx + 5]; sub eax, ecx; pop ebp; ret; 
0x0018c8b7: add byte ptr [eax], al; movzx ecx, byte ptr [eax]; movzx eax, byte ptr [edx]; sub eax, ecx; pop ebp; ret; 
0x0008288f: add byte ptr [eax], al; movzx edx, dl; mov dword ptr [eax + 0x24], edx; mov byte ptr gs:[0x4fe], 0; mov dword ptr gs:[0x80], eax; ret; 
0x000216e4: add byte ptr [eax], al; neg eax; mov edx, dword ptr [edx - 0x134]; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; ret; 
0x00105022: add byte ptr [eax], al; neg eax; pop ebx; ret; 
0x000819c2: add byte ptr [eax], al; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00197afd: add byte ptr [eax], al; nop; add eax, 1; pop edi; ret; 
0x00196f7d: add byte ptr [eax], al; nop; add edx, 1; jl 0x197040; lea eax, [ecx + 1]; ret; 
0x0008ad9d: add byte ptr [eax], al; nop; add esp, 8; mov eax, 0x16; pop ebx; ret; 
0x000b43ad: add byte ptr [eax], al; nop; bsf eax, eax; add eax, edx; ret; 
0x000b3ccc: add byte ptr [eax], al; nop; bsf eax, eax; lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x000b43cd: add byte ptr [eax], al; nop; bsf eax, eax; lea eax, [eax + edx + 0x20]; ret; 
0x000b3f9d: add byte ptr [eax], al; nop; bsr eax, eax; lea eax, [eax + ecx + 0x20]; ret; 
0x000b3fad: add byte ptr [eax], al; nop; bsr eax, eax; lea eax, [eax + ecx + 0x30]; ret; 
0x0007f9dc: add byte ptr [eax], al; nop; endbr32; mov eax, 0xffffffff; ret; 
0x001656bd: add byte ptr [eax], al; nop; endbr32; mov eax, 1; ret; 
0x0015a94d: add byte ptr [eax], al; nop; endbr32; mov eax, 2; ret; 
0x0007be7d: add byte ptr [eax], al; nop; endbr32; mov eax, dword ptr [esp + 4]; and dword ptr [eax], 0xffffffcf; ret; 
0x00080eac: add byte ptr [eax], al; nop; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x001587ec: add byte ptr [eax], al; nop; endbr32; ret; 
0x0008010d: add byte ptr [eax], al; nop; endbr32; xor eax, eax; ret; 
0x000d718c: add byte ptr [eax], al; nop; lea ecx, [esp + 0x14]; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x0002ed4c: add byte ptr [eax], al; nop; lea edx, [ecx - 0x6d179]; mov eax, edx; pop ebx; ret; 
0x000a827c: add byte ptr [eax], al; nop; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; ret; 
0x000acb4c: add byte ptr [eax], al; nop; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x000a828c: add byte ptr [eax], al; nop; mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; ret; 
0x000a3e9c: add byte ptr [eax], al; nop; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edx; ret; 
0x0015a2fd: add byte ptr [eax], al; nop; mov dword ptr [eax], 0xa; pop ebx; ret; 
0x0015a30d: add byte ptr [eax], al; nop; mov dword ptr [eax], 8; pop ebx; ret; 
0x000a5dad: add byte ptr [eax], al; nop; mov dword ptr [ecx], edx; mov dword ptr [ecx + 3], edx; pop ebx; ret; 
0x000a5d9c: add byte ptr [eax], al; nop; mov dword ptr [ecx], edx; mov word ptr [ecx + 4], dx; pop ebx; ret; 
0x000a5d7d: add byte ptr [eax], al; nop; mov dword ptr [ecx], edx; pop ebx; ret; 
0x0008462c: add byte ptr [eax], al; nop; mov eax, 0x16; ret; 
0x000dfd1c: add byte ptr [eax], al; nop; mov eax, 0x7e; pop ebx; ret; 
0x000dfd2c: add byte ptr [eax], al; nop; mov eax, 0xfffa; pop ebx; ret; 
0x000a69dd: add byte ptr [eax], al; nop; mov eax, edx; pop ebx; ret; 
0x0013ebfd: add byte ptr [eax], al; nop; mov ebx, dword ptr [ebx]; mov eax, 6; call dword ptr gs:[0x10]; 
0x00198c4d: add byte ptr [eax], al; nop; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000a5dbc: add byte ptr [eax], al; nop; movlpd qword ptr [ecx], xmm0; pop ebx; ret; 
0x00198c1c: add byte ptr [eax], al; nop; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x00131aca: add byte ptr [eax], al; nop; nop; endbr32; ret; 
0x0008472c: add byte ptr [eax], al; nop; or dword ptr [ecx + 8], 0x40; xor eax, eax; mov dword ptr [ecx + 4], edx; ret; 
0x000b00cd: add byte ptr [eax], al; nop; pop esi; ret; 
0x000828fd: add byte ptr [eax], al; nop; ret; 
0x00133b6d: add byte ptr [eax], al; nop; shr eax, 0x18; ret; 
0x0015f86d: add byte ptr [eax], al; nop; sub esp, 0xc; push esi; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x0009a5cd: add byte ptr [eax], al; nop; sub esp, 8; push eax; push dword ptr [ebx + 0x24]; call edx; 
0x0013128c: add byte ptr [eax], al; nop; xor eax, eax; pop ebx; ret; 
0x0019310d: add byte ptr [eax], al; nop; xor eax, eax; pop edi; pop ebx; ret; 
0x0003a1fc: add byte ptr [eax], al; nop; xor eax, eax; ret; 
0x000a1e4c: add byte ptr [eax], al; nop; xor edx, edx; pop ebx; mov eax, edx; ret; 
0x000d707e: add byte ptr [eax], al; not ebx; lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x00088d9a: add byte ptr [eax], al; not ecx; and ecx, 0x80; call dword ptr gs:[0x10]; 
0x00133a9f: add byte ptr [eax], al; or byte ptr [edi], 0x44; ret 0x8dc3; 
0x0010ab22: add byte ptr [eax], al; or byte ptr [edi], 0xa3; ret 0xdc73; 
0x000b559d: add byte ptr [eax], al; or cl, cl; jne 0xb55a5; xor eax, eax; ret; 
0x00125d3e: add byte ptr [eax], al; or dh, 1; call dword ptr gs:[0x10]; 
0x00057a5e: add byte ptr [eax], al; or eax, 7; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x00035c15: add byte ptr [eax], al; or eax, edx; mov dword ptr [esp + 0xc], eax; fld xword ptr [esp + 4]; ret; 
0x00085a1a: add byte ptr [eax], al; or edx, 2; call dword ptr gs:[0x10]; 
0x000b3bf6: add byte ptr [eax], al; pmovmskb eax, xmm1; bsf eax, eax; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000b3ede: add byte ptr [eax], al; pmovmskb eax, xmm1; bsr eax, eax; add eax, ecx; ret; 
0x00115334: add byte ptr [eax], al; pop ebp; pop edi; pop ebx; ret; 
0x000dfcab: add byte ptr [eax], al; pop ebx; cmove eax, edx; ret; 
0x000de88b: add byte ptr [eax], al; pop ebx; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x0004aa81: add byte ptr [eax], al; pop ebx; cmp eax, 0xfffff001; jae 0x216d0; xor eax, eax; ret; 
0x00083de9: add byte ptr [eax], al; pop ebx; mov eax, 0xc; pop esi; pop edi; ret; 
0x00072266: add byte ptr [eax], al; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x00193ffe: add byte ptr [eax], al; pop ebx; mov eax, 1; jg 0x194010; neg eax; ret; 
0x0015afbb: add byte ptr [eax], al; pop ebx; mov eax, ecx; ret; 
0x00166931: add byte ptr [eax], al; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x000520c0: add byte ptr [eax], al; pop ebx; mov eax, esi; pop esi; pop edi; ret; 
0x001732f6: add byte ptr [eax], al; pop ebx; movzx eax, byte ptr [edx]; pop esi; pop edi; ret; 
0x00037b8c: add byte ptr [eax], al; pop ebx; pop edi; ret; 
0x0010c250: add byte ptr [eax], al; pop ebx; pop esi; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x000c9d25: add byte ptr [eax], al; pop ebx; pop esi; mov eax, ecx; ret; 
0x000885e3: add byte ptr [eax], al; pop ebx; pop esi; mov eax, edi; pop edi; ret; 
0x0014e2d3: add byte ptr [eax], al; pop ebx; pop esi; mov eax, edx; ret; 
0x0013136e: add byte ptr [eax], al; pop ebx; pop esi; pop ebp; ret; 
0x000283de: add byte ptr [eax], al; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x00199779: add byte ptr [eax], al; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x0002266e: add byte ptr [eax], al; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00038c01: add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x00021476: add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0002d8ce: add byte ptr [eax], al; pop ebx; ret; 
0x00116fee: add byte ptr [eax], al; pop ebx; sub edx, eax; test eax, eax; cmovns eax, edx; ret; 
0x000c3f9e: add byte ptr [eax], al; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x001922ce: add byte ptr [eax], al; pop ebx; xor eax, eax; ret; 
0x0004ac8d: add byte ptr [eax], al; pop ecx; add ecx, 0xa; mov dword ptr [edx], ecx; ret; 
0x00111a96: add byte ptr [eax], al; pop edi; cmova eax, edx; ret; 
0x00021970: add byte ptr [eax], al; pop edi; pop ebp; jmp eax; 
0x000a5870: add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000abb5e: add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000c9b53: add byte ptr [eax], al; pop edi; pop esi; ret; 
0x00197a10: add byte ptr [eax], al; pop edi; ret; 
0x00158949: add byte ptr [eax], al; pop edx; pop ecx; push 0; push esi; call dword ptr [eax + 0x14]; 
0x0004aea3: add byte ptr [eax], al; pop esi; pop edi; ret; 
0x000b4a30: add byte ptr [eax], al; pop esi; xor eax, eax; pop ebx; ret; 
0x0019848e: add byte ptr [eax], al; pop esi; xor eax, eax; pop edi; ret; 
0x0007d1b0: add byte ptr [eax], al; push 0; push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; push esi; call dword ptr [edx + 0x40]; 
0x001735d8: add byte ptr [eax], al; push 0; push dword ptr [esp + 0x18]; push dword ptr [esp + 0x18]; push esi; call dword ptr [edx + 0x40]; 
0x0011932c: add byte ptr [eax], al; push 0; push dword ptr [esp + 0x1c]; call 0x58600; add esp, 0x1c; ret; 
0x0007d95e: add byte ptr [eax], al; push 0; push ebp; push edi; push ebx; call dword ptr [esi + 0x40]; 
0x0007cfbe: add byte ptr [eax], al; push 0; push ebx; push ecx; push esi; call dword ptr [ebp + 0x40]; 
0x00164728: add byte ptr [eax], al; push 0; push edi; call dword ptr [eax + 0x14]; 
0x0015aa4f: add byte ptr [eax], al; push 0; push esi; call dword ptr [eax + 0x14]; 
0x00130ed0: add byte ptr [eax], al; push 0x1000002; call edx; 
0x00164f5a: add byte ptr [eax], al; push 0x2260; push dword ptr [esp + 0x1c]; call 0x164c90; add esp, 0x1c; ret; 
0x00077f27: add byte ptr [eax], al; push 1; push 0; push 0; push dword ptr [esp + 0x18]; call dword ptr [ebx + 0x40]; 
0x0007d3d3: add byte ptr [eax], al; push 1; push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x00077cca: add byte ptr [eax], al; push 2; push 0; push 0; push dword ptr [esp + 0x18]; call dword ptr [edi + 0x40]; 
0x0007130c: add byte ptr [eax], al; push 2; push 0; push 0; push ebp; call dword ptr [esi + 0x40]; 
0x0007e071: add byte ptr [eax], al; push 2; push 0; push 0; push ebx; call dword ptr [esi + 0x40]; 
0x0007d2bc: add byte ptr [eax], al; push 2; push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x0013c933: add byte ptr [eax], al; push dword ptr [esp + 0x10]; push ebp; call edi; 
0x001589f8: add byte ptr [eax], al; push dword ptr [esp + 0x10]; push esi; call dword ptr [eax + 0xc]; 
0x00077a66: add byte ptr [eax], al; push dword ptr [esp + 0x18]; push dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x18]; push esi; call dword ptr [edi + 0x40]; 
0x0010b15e: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; call 0x109d40; add esp, 0x1c; ret; 
0x00116775: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; call 0x117200; add esp, 0x10; add esp, 0xc; ret; 
0x0011661f: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; call 0x117200; add esp, 0x1c; ret; 
0x00164f5f: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; call 0x164c90; add esp, 0x1c; ret; 
0x000842ba: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; call 0x841e0; add esp, 0x18; pop ebx; ret; 
0x000845ee: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; call 0x84520; add esp, 0x1c; ret; 
0x0008d7ca: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; call 0x8d770; add esp, 0x18; pop ebx; ret; 
0x00079f7a: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x73870; add esp, 0x1c; ret; 
0x00163b0f: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; push ebx; call eax; 
0x0016e5a8: add byte ptr [eax], al; push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0015db54: add byte ptr [eax], al; push dword ptr [esp + 0x2c]; push esi; call dword ptr [eax + 0xc]; 
0x001734b6: add byte ptr [eax], al; push dword ptr [esp + 0xbc]; push ebp; push edi; push esi; call dword ptr [ebx + 0x40]; 
0x0011d335: add byte ptr [eax], al; push eax; call 0x11d4d0; add esp, 0x1c; ret; 
0x00080f87: add byte ptr [eax], al; push eax; call 0x83280; add esp, 0x1c; ret; 
0x0008d995: add byte ptr [eax], al; push eax; call 0x84130; add esp, 0x1c; ret; 
0x00151200: add byte ptr [eax], al; push eax; call edx; 
0x000cb7b3: add byte ptr [eax], al; push eax; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x0011d3c5: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x1c]; call 0x11d3e0; add esp, 0x1c; ret; 
0x00138b55: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x1c]; call 0x138b70; add esp, 0x1c; ret; 
0x00138fc5: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x1c]; call 0x138fe0; add esp, 0x1c; ret; 
0x0003b915: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x1c]; call 0x3bb40; add esp, 0x1c; ret; 
0x0002b5ea: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x50]; push dword ptr [esp + 0x50]; call esi; 
0x0002672e: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x54]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00027237: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0002948f: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x64]; push dword ptr [esp + 0x64]; call edi; 
0x00027eff: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x6c]; push dword ptr [esp + 0x6c]; call esi; 
0x0015f73c: add byte ptr [eax], al; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x0015f73c: add byte ptr [eax], al; push eax; push edx; call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x000ff1ba: add byte ptr [eax], al; push eax; push edx; call ebx; 
0x00036a7b: add byte ptr [eax], al; push eax; ret; 
0x0007d0db: add byte ptr [eax], al; push ebp; push dword ptr [esp + 8]; push dword ptr [esp + 8]; push esi; call dword ptr [edi + 0x40]; 
0x00038dce: add byte ptr [eax], al; push ebp; push ecx; lea esi, [ecx + eax]; push esi; call edi; 
0x001734bd: add byte ptr [eax], al; push ebp; push edi; push esi; call dword ptr [ebx + 0x40]; 
0x00161a0c: add byte ptr [eax], al; push ebx; push eax; call dword ptr [edx + 8]; 
0x00083292: add byte ptr [eax], al; push ebx; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x001637ed: add byte ptr [eax], al; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x0016ea9f: add byte ptr [eax], al; push ecx; push edx; call dword ptr [eax + 0x24]; 
0x0016eb3f: add byte ptr [eax], al; push ecx; push edx; call dword ptr [eax + 0x28]; 
0x0013c41e: add byte ptr [eax], al; push edx; call eax; 
0x0002475b: add byte ptr [eax], al; push edx; push eax; call 0x8bf40; add esp, 0x1c; ret; 
0x00161354: add byte ptr [eax], al; push edx; push ebx; call dword ptr [eax + 4]; 
0x0015db77: add byte ptr [eax], al; push edx; push esi; call dword ptr [eax + 4]; 
0x0015aa71: add byte ptr [eax], al; push esi; call dword ptr [eax + 0x10]; 
0x00075d9c: add byte ptr [eax], al; push esi; call dword ptr [eax + 0x34]; 
0x00131338: add byte ptr [eax], al; push esi; call eax; 
0x000213d6: add byte ptr [eax], al; ret; 
0x00133a99: add byte ptr [eax], al; rol byte ptr [ecx + 0xf9], 0x80; cmove eax, edx; ret; 
0x00133b58: add byte ptr [eax], al; rol cl, 0xea; adc byte ptr [ecx + 0xf9], al; or byte ptr [edi], 0x44; ret 0x8dc3; 
0x0002146d: add byte ptr [eax], al; rol edx, 9; mov dword ptr [eax + 0x1978], edx; pop ebx; pop esi; ret; 
0x000213cd: add byte ptr [eax], al; rol edx, 9; mov dword ptr [eax + 0x1978], edx; ret; 
0x00133a6b: add byte ptr [eax], al; ror ax, 8; ret; 
0x001511f6: add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; push eax; call edx; 
0x000b82db: add byte ptr [eax], al; sbb byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x0015e7c9: add byte ptr [eax], al; sbb eax, -1; add esp, 0xc; ret; 
0x000dfebb: add byte ptr [eax], al; setne al; ret; 
0x000829ba: add byte ptr [eax], al; shr eax, 0xb; and eax, 1; mov dword ptr [edx + 0x19f0], eax; ret; 
0x0016df1c: add byte ptr [eax], al; shr ecx, 2; rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x00104367: add byte ptr [eax], al; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x0011e69c: add byte ptr [eax], al; sub eax, dword ptr gs:[0x14]; jne 0x11e6af; add esp, 0x418; pop ebx; ret; 
0x000b54dd: add byte ptr [eax], al; sub eax, edx; ret; 
0x000802fe: add byte ptr [eax], al; sub ebx, edx; lea eax, [ebx - 1]; pop ebx; ret; 
0x0007642e: add byte ptr [eax], al; sub ebx, edx; sar ebx, 2; lea eax, [ebx - 1]; pop ebx; ret; 
0x00035bcd: add byte ptr [eax], al; sub ecx, edx; shr eax, 0x1f; shr ecx, 0x10; or eax, ecx; ret; 
0x001978e9: add byte ptr [eax], al; sub edi, 0x10; jb 0x1979b0; lea eax, [eax + 0xf]; pop edi; ret; 
0x0019795e: add byte ptr [eax], al; sub edi, 0xa; jb 0x1979b0; lea eax, [eax + 9]; pop edi; ret; 
0x0019796e: add byte ptr [eax], al; sub edi, 0xb; jb 0x1979b0; lea eax, [eax + 0xa]; pop edi; ret; 
0x0019797e: add byte ptr [eax], al; sub edi, 0xd; jb 0x1979b0; lea eax, [eax + 0xc]; pop edi; ret; 
0x0019798e: add byte ptr [eax], al; sub edi, 0xe; jb 0x1979b0; lea eax, [eax + 0xd]; pop edi; ret; 
0x0019799e: add byte ptr [eax], al; sub edi, 0xf; jb 0x1979b0; lea eax, [eax + 0xe]; pop edi; ret; 
0x001978fe: add byte ptr [eax], al; sub edi, 2; jb 0x1979b0; lea eax, [eax + 1]; pop edi; ret; 
0x00197856: add byte ptr [eax], al; sub edi, 4; jb 0x1979b0; lea eax, [eax + 3]; pop edi; ret; 
0x0019793e: add byte ptr [eax], al; sub edi, 7; jb 0x1979b0; lea eax, [eax + 6]; pop edi; ret; 
0x00197889: add byte ptr [eax], al; sub edi, 8; jb 0x1979b0; lea eax, [eax + 7]; pop edi; ret; 
0x0019794e: add byte ptr [eax], al; sub edi, 9; jb 0x1979b0; lea eax, [eax + 8]; pop edi; ret; 
0x00196899: add byte ptr [eax], al; sub edx, 0x10; jb 0x196970; lea eax, [edi + 0xf]; pop edi; ret; 
0x0019691e: add byte ptr [eax], al; sub edx, 0xa; jb 0x196970; lea eax, [edi + 9]; pop edi; ret; 
0x0019692e: add byte ptr [eax], al; sub edx, 0xb; jb 0x196970; lea eax, [edi + 0xa]; pop edi; ret; 
0x00196870: add byte ptr [eax], al; sub edx, 0xc; jb 0x196970; lea eax, [edi + 0xb]; pop edi; ret; 
0x0019693e: add byte ptr [eax], al; sub edx, 0xd; jb 0x196970; lea eax, [edi + 0xc]; pop edi; ret; 
0x0019694e: add byte ptr [eax], al; sub edx, 0xe; jb 0x196970; lea eax, [edi + 0xd]; pop edi; ret; 
0x0019695e: add byte ptr [eax], al; sub edx, 0xf; jb 0x196970; lea eax, [edi + 0xe]; pop edi; ret; 
0x00196805: add byte ptr [eax], al; sub edx, 4; jb 0x196970; lea eax, [edi + 3]; pop edi; ret; 
0x001968fe: add byte ptr [eax], al; sub edx, 7; jb 0x196970; lea eax, [edi + 6]; pop edi; ret; 
0x00196836: add byte ptr [eax], al; sub edx, 8; jb 0x196970; lea eax, [edi + 7]; pop edi; ret; 
0x0019690e: add byte ptr [eax], al; sub edx, 9; jb 0x196970; lea eax, [edi + 8]; pop edi; ret; 
0x0011eebd: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x11eedf; add esp, 0x1018; pop ebx; ret; 
0x00146ec9: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x146f14; add esp, 0x118; pop ebx; ret; 
0x00146f69: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x146fd0; add esp, 0x118; pop ebx; ret; 
0x00147029: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x14707b; add esp, 0x118; pop ebx; ret; 
0x001470c9: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x1470fd; add esp, 0x11c; ret; 
0x00037d97: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x37db7; add esp, 0x98; pop ebx; ret; 
0x0003830f: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x38321; add esp, 0x12c; ret; 
0x0003897f: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x3899f; add esp, 0x98; pop ebx; ret; 
0x000389ff: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x38a1f; add esp, 0x98; pop ebx; ret; 
0x00038a87: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x38a99; add esp, 0x9c; ret; 
0x000489a3: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x489b5; add esp, 0x42c; ret; 
0x000582d7: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x582ea; add esp, 0x1018; pop ebx; ret; 
0x000d8420: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0xd8433; add esp, 0xe8; pop ebx; ret; 
0x000d854c: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0xd855f; add esp, 0xe8; pop ebx; ret; 
0x0007cbb6: add byte ptr [eax], al; sub esp, -0x80; pop ebx; pop esi; pop edi; ret; 
0x00094212: add byte ptr [eax], al; sub esp, 0x28; mov ebp, dword ptr [esp + 0x3c]; lea ecx, [edi - 0x722c0]; call dword ptr gs:[0x10]; 
0x0016139d: add byte ptr [eax], al; sub esp, 0xc; mov eax, dword ptr [ebp + 0x3c]; push ebx; call dword ptr [eax + 0x10]; 
0x00158929: add byte ptr [eax], al; sub esp, 0xc; mov eax, dword ptr [ebx + 0x10]; push esi; call dword ptr [eax + 0x10]; 
0x0015968e: add byte ptr [eax], al; sub esp, 0xc; mov eax, dword ptr [ebx + 4]; push ebx; call dword ptr [eax + 0x10]; 
0x00083d7a: add byte ptr [eax], al; sub esp, 0xc; push 0; call 0x83370; add esp, 0x1c; ret; 
0x0016e53c: add byte ptr [eax], al; sub esp, 0xc; push dword ptr [esp + 0x24]; mov esi, dword ptr [esp + 0x24]; call esi; 
0x0015ac4c: add byte ptr [eax], al; sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x0007dde1: add byte ptr [eax], al; sub esp, 0xc; push ebx; call dword ptr [esi + 0x44]; 
0x0013c9da: add byte ptr [eax], al; sub esp, 0xc; push esi; call 0x16ed20; mov dword ptr [esp], ebp; call esi; 
0x0015e2c2: add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x0007fd21: add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [ebp + 0x30]; 
0x00173f2d: add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [ebp + 0x44]; 
0x00079624: add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x0009a516: add byte ptr [eax], al; sub esp, 0xc; push esi; call eax; 
0x00080730: add byte ptr [eax], al; sub esp, 4; push 0; push 0; push ebx; call dword ptr [ebp + 0x2c]; 
0x00073a8e: add byte ptr [eax], al; sub esp, 4; push dword ptr [ebp + 0x14]; push dword ptr [ebp + 0xc]; push esi; call dword ptr [ebx + 0x2c]; 
0x0007333e: add byte ptr [eax], al; sub esp, 4; push dword ptr [ebp - 0x1c]; push dword ptr [ebp + 8]; push edx; call dword ptr [ebx + 0x1c]; 
0x0012cea9: add byte ptr [eax], al; sub esp, 4; push dword ptr [esp + 0x18]; push 0; push 0x2000004; call eax; 
0x0007c680: add byte ptr [eax], al; sub esp, 4; push dword ptr [esp + 0xc]; push edi; push ebx; call dword ptr [esi + 0x3c]; 
0x0007d77d: add byte ptr [eax], al; sub esp, 4; push eax; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x00069990: add byte ptr [eax], al; sub esp, 4; push ebp; push dword ptr [esp + 0x44]; push edi; call dword ptr [eax + 0x1c]; 
0x000698a5: add byte ptr [eax], al; sub esp, 4; push ebp; push dword ptr [esp + 0x44]; push edi; call dword ptr [ebx + 0x1c]; 
0x00038de1: add byte ptr [eax], al; sub esp, 4; push ebp; push esi; push dword ptr [esp + 0x30]; call edi; 
0x000671ce: add byte ptr [eax], al; sub esp, 4; push ebx; push dword ptr [ebp - 0x88c]; push dword ptr [ebp - 0x87c]; call dword ptr [edx + 0x1c]; 
0x0006d97e: add byte ptr [eax], al; sub esp, 4; push ebx; push dword ptr [esp + 0x24]; push ebp; call dword ptr [esi + 0x1c]; 
0x00066a33: add byte ptr [eax], al; sub esp, 4; push ebx; push eax; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x00068b3f: add byte ptr [eax], al; sub esp, 4; push ebx; push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x0007395b: add byte ptr [eax], al; sub esp, 4; push ebx; push edi; push esi; call dword ptr [eax + 0x2c]; 
0x00066b4e: add byte ptr [eax], al; sub esp, 4; push ebx; push edx; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x0006bac6: add byte ptr [eax], al; sub esp, 4; push ebx; push esi; push dword ptr [ebp - 0x8a0]; call dword ptr [eax + 0x1c]; 
0x0006dd67: add byte ptr [eax], al; sub esp, 4; push ebx; push esi; push ebp; call dword ptr [edi + 0x1c]; 
0x00173128: add byte ptr [eax], al; sub esp, 4; push ecx; push dword ptr [esp + 0xc]; push ebx; call dword ptr [ebp + 0x3c]; 
0x00072307: add byte ptr [eax], al; sub esp, 4; push edi; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x0006ebc6: add byte ptr [eax], al; sub esp, 4; push edi; push esi; push ebp; call dword ptr [ebx + 0x1c]; 
0x00068703: add byte ptr [eax], al; sub esp, 4; push esi; push dword ptr [esp + 0x28]; push edi; call dword ptr [ebx + 0x1c]; 
0x0007cb62: add byte ptr [eax], al; sub esp, 8; lea eax, [esp + 0x18]; push eax; push esi; call dword ptr [edi + 0x48]; 
0x0007c7f9: add byte ptr [eax], al; sub esp, 8; lea eax, [esp + 0x28]; push eax; push esi; call dword ptr [edi + 0x48]; 
0x0007778f: add byte ptr [eax], al; sub esp, 8; lea eax, [esp + 0x40]; push eax; push dword ptr [esp + 0x18]; call dword ptr [edi + 0x48]; 
0x00070de7: add byte ptr [eax], al; sub esp, 8; lea eax, [esp + 8]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x000e0e76: add byte ptr [eax], al; sub esp, 8; lea edx, [esp + 0x14]; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x0007cea2: add byte ptr [eax], al; sub esp, 8; lea edx, [esp + 0x28]; push edx; push esi; call dword ptr [eax + 0x48]; 
0x00105516: add byte ptr [eax], al; sub esp, 8; lea edx, [esp + 8]; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x0015f14e: add byte ptr [eax], al; sub esp, 8; mov eax, dword ptr [ebx + 4]; push 8; push ebx; call dword ptr [eax + 0x18]; 
0x0015b096: add byte ptr [eax], al; sub esp, 8; mov eax, dword ptr [ebx + 4]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax + 4]; 
0x00163bcd: add byte ptr [eax], al; sub esp, 8; mov eax, dword ptr [ebx + 8]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax + 0xc]; 
0x0015a3d7: add byte ptr [eax], al; sub esp, 8; mov eax, dword ptr [edi + 4]; push 0x20; push edi; call dword ptr [eax + 0x18]; 
0x0015aabb: add byte ptr [eax], al; sub esp, 8; push 0; push ebx; call dword ptr [eax + 0x14]; 
0x00070fc3: add byte ptr [eax], al; sub esp, 8; push 0; push esi; call dword ptr [ebx + 8]; 
0x00158910: add byte ptr [eax], al; sub esp, 8; push dword ptr [esp + 0x1c]; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00161384: add byte ptr [eax], al; sub esp, 8; push dword ptr [esp + 0x2c]; push ebx; mov eax, dword ptr [esp + 0x18]; call eax; 
0x00058866: add byte ptr [eax], al; sub esp, 8; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x30]; call eax; 
0x0015dba3: add byte ptr [eax], al; sub esp, 8; push dword ptr [esp + 0x3c]; push esi; mov eax, dword ptr [esp + 0x40]; call eax; 
0x00163c16: add byte ptr [eax], al; sub esp, 8; push ebx; lea edx, [esp + 0x38]; push edx; call dword ptr [eax + 0xc]; 
0x0009a461: add byte ptr [eax], al; sub esp, 8; push esi; push dword ptr [ebx + 0x24]; call eax; 
0x00196190: add byte ptr [eax], al; test ah, 0x20; jne 0x196230; lea eax, [edi - 4]; pop edi; ret; 
0x00196d20: add byte ptr [eax], al; test ah, 0x20; jne 0x196dc0; lea eax, [ecx + 0xc]; ret; 
0x00195cd4: add byte ptr [eax], al; test ah, 0x40; jne 0x195dc0; lea eax, [edi + 0xf]; pop edi; ret; 
0x00196690: add byte ptr [eax], al; test ah, 0x40; jne 0x1967d0; lea eax, [edi + 0xf]; pop edi; ret; 
0x00197380: add byte ptr [eax], al; test ah, 0x40; jne 0x197440; lea eax, [edx + 0xf]; ret; 
0x00196167: add byte ptr [eax], al; test ah, 2; jne 0x196200; lea eax, [edi - 8]; pop edi; ret; 
0x00196cf7: add byte ptr [eax], al; test ah, 2; jne 0x196d90; lea eax, [ecx + 8]; ret; 
0x00196667: add byte ptr [eax], al; test ah, 4; jne 0x1967a0; lea eax, [edi + 0xb]; pop edi; ret; 
0x00197357: add byte ptr [eax], al; test ah, 4; jne 0x197410; lea eax, [edx + 0xb]; ret; 
0x0019613e: add byte ptr [eax], al; test al, 0x20; jne 0x1961d0; lea eax, [edi - 0xc]; pop edi; ret; 
0x00196cce: add byte ptr [eax], al; test al, 0x20; jne 0x196d60; lea eax, [ecx + 4]; ret; 
0x00195c82: add byte ptr [eax], al; test al, 0x40; jne 0x195d50; lea eax, [edi + 7]; pop edi; ret; 
0x0019663e: add byte ptr [eax], al; test al, 0x40; jne 0x196770; lea eax, [edi + 7]; pop edi; ret; 
0x0019732e: add byte ptr [eax], al; test al, 0x40; jne 0x1973e0; lea eax, [edx + 7]; ret; 
0x00198473: add byte ptr [eax], al; test al, 0xf0; jne 0x198530; lea eax, [edi - 0x10]; pop edi; ret; 
0x00196119: add byte ptr [eax], al; test al, 2; jne 0x1961a0; lea eax, [edi - 0x10]; pop edi; ret; 
0x00196b49: add byte ptr [eax], al; test al, 2; jne 0x196d30; mov eax, ecx; ret; 
0x0019661b: add byte ptr [eax], al; test al, 4; jne 0x196740; lea eax, [edi + 3]; pop edi; ret; 
0x0019730b: add byte ptr [eax], al; test al, 4; jne 0x1973b0; lea eax, [edx + 3]; ret; 
0x00197787: add byte ptr [eax], al; test dh, 4; jne 0x197b2d; add eax, 0xb; pop edi; ret; 
0x00195b52: add byte ptr [eax], al; test dl, 0x40; jne 0x195dd0; lea eax, [edi + 7]; pop edi; ret; 
0x00197760: add byte ptr [eax], al; test dl, 0x40; jne 0x197b19; add eax, 7; pop edi; ret; 
0x001981e0: add byte ptr [eax], al; test dl, 0xf; jne 0x198320; lea eax, [ecx + 4]; ret; 
0x00195b98: add byte ptr [eax], al; test dl, 4; jne 0x195dd0; lea eax, [edi + 3]; pop edi; ret; 
0x0019773a: add byte ptr [eax], al; test dl, 4; jne 0x197b05; add eax, 3; pop edi; ret; 
0x0011ef19: add byte ptr [eax], al; test eax, eax; cmove eax, edx; add esp, 0xc; ret; 
0x00083e5d: add byte ptr [eax], al; test eax, eax; cmovne eax, edx; ret; 
0x0014c804: add byte ptr [eax], al; test eax, eax; je 0x14c810; add esp, 8; pop ebx; ret; 
0x00158e87: add byte ptr [eax], al; test eax, eax; je 0x158e98; add esp, 8; pop ebx; ret; 
0x00071a96: add byte ptr [eax], al; test eax, eax; je 0x71ab0; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 4], edx; jmp eax; 
0x0010aed8: add byte ptr [eax], al; test eax, eax; jne 0x10af00; mov ebx, dword ptr [esp + 0x20]; mov eax, 6; call dword ptr gs:[0x10]; 
0x00118d58: add byte ptr [eax], al; test eax, eax; jne 0x118d80; mov ebx, dword ptr [esp + 0x20]; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00118e38: add byte ptr [eax], al; test eax, eax; jne 0x118e60; mov ebx, dword ptr [esp + 0x20]; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x00163efd: add byte ptr [eax], al; test eax, eax; jne 0x163ee8; add esp, 8; pop ebx; ret; 
0x000ddce7: add byte ptr [eax], al; test eax, eax; jne 0xddd08; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x0015c832: add byte ptr [eax], al; test eax, eax; setne al; add esp, 0x1c; movzx eax, al; ret; 
0x000946ff: add byte ptr [eax], al; test ecx, ecx; jne 0x94710; ret; 
0x000e0206: add byte ptr [eax], al; test ecx, ecx; js 0xe0210; ret; 
0x000830c6: add byte ptr [eax], al; test esi, esi; jne 0x83108; mov eax, 0xf0; xor edx, edx; call dword ptr gs:[0x10]; 
0x00072dd8: add byte ptr [eax], al; xchg dword ptr [edx + 0x1968], eax; cmp eax, 1; jg 0x72df0; ret; 
0x0007be58: add byte ptr [eax], al; xchg dword ptr [edx + 0x197c], eax; cmp eax, 1; jg 0x7be70; ret; 
0x00080f68: add byte ptr [eax], al; xchg dword ptr [edx + 0x199c], eax; cmp eax, 1; jg 0x80f80; ret; 
0x00058c3b: add byte ptr [eax], al; xchg dword ptr [edx], eax; cmp eax, 1; jg 0x58c48; ret; 
0x00067c07: add byte ptr [eax], al; xor byte ptr [ebx - 0x8bf63], cl; dec dword ptr [ecx - 0x88b7b]; jmp ptr [ecx]; ret; 
0x0008bcd3: add byte ptr [eax], al; xor byte ptr [ecx], 0xc0; ret; 
0x000849dc: add byte ptr [eax], al; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0008555b: add byte ptr [eax], al; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008e9ce: add byte ptr [eax], al; xor cl, 0x81; mov eax, 0xf0; mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x000d87e2: add byte ptr [eax], al; xor eax, eax; add esp, 0xc; ret; 
0x0011ee94: add byte ptr [eax], al; xor eax, eax; lea edx, [esp + 0xc]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x00108ce2: add byte ptr [eax], al; xor eax, eax; mov eax, 0x17f; call dword ptr gs:[0x10]; 
0x000d8fa0: add byte ptr [eax], al; xor eax, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x00099372: add byte ptr [eax], al; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00058bf1: add byte ptr [eax], al; xor eax, eax; pop ebx; pop esi; ret; 
0x0008d9df: add byte ptr [eax], al; xor eax, eax; pop ebx; ret; 
0x000c9b32: add byte ptr [eax], al; xor eax, eax; pop edi; pop esi; ret; 
0x000b3c6e: add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x000843b4: add byte ptr [eax], al; xor eax, eax; rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x000380c2: add byte ptr [eax], al; xor eax, eax; ret; 
0x0003b69d: add byte ptr [eax], al; xor eax, edx; ret; 
0x0002153e: add byte ptr [eax], al; xor ebx, ebx; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x00104638: add byte ptr [eax], al; xor ebx, ebx; mov dword ptr [esp + 0x124], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x00086b8b: add byte ptr [eax], al; xor ebx, ebx; nop; mov eax, edx; call dword ptr gs:[0x10]; 
0x0008e08b: add byte ptr [eax], al; xor ecx, ecx; lock cmpxchg dword ptr [edx], ecx; mov eax, 0x10; cmove eax, ecx; ret; 
0x00088ea8: add byte ptr [eax], al; xor ecx, ecx; mov eax, 0xf0; mov ebx, ebp; mov esi, ecx; call dword ptr gs:[0x10]; 
0x000830cf: add byte ptr [eax], al; xor edx, edx; call dword ptr gs:[0x10]; 
0x000886d8: add byte ptr [eax], al; xor edx, edx; lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x00086c17: add byte ptr [eax], al; xor edx, edx; mov ecx, 0x80; mov eax, edi; mov esi, edx; call dword ptr gs:[0x10]; 
0x00088a13: add byte ptr [eax], al; xor edx, edx; mov ecx, dword ptr [esp + 8]; mov esi, 8; call dword ptr gs:[0x10]; 
0x001046f6: add byte ptr [eax], al; xor edx, edx; mov ecx, ebp; mov esi, 8; call dword ptr gs:[0x10]; 
0x00083060: add byte ptr [eax], al; xor edx, edx; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00086ba1: add byte ptr [eax], al; xor edx, edx; mov esi, 0x53053053; lea ebx, [eax + 0x520]; mov eax, 0x182; call dword ptr gs:[0x10]; 
0x0003bd19: add byte ptr [eax], al; xor edx, edx; sub ecx, ebx; call dword ptr gs:[0x10]; 
0x000839d2: add byte ptr [eax], al; xor esi, esi; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x0008b539: add byte ptr [eax], al; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000831b6: add byte ptr [eax], al; xor esi, esi; call dword ptr gs:[0x10]; 
0x001268d7: add byte ptr [eax], al; xor esi, esi; mov ebx, 0x18; or dh, 1; call dword ptr gs:[0x10]; 
0x00125d37: add byte ptr [eax], al; xor esi, esi; mov ebx, 0xe; or dh, 1; call dword ptr gs:[0x10]; 
0x00085031: add byte ptr [eax], al; xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x001743d2: add byte ptr [eax], al; xor esi, esi; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00084a53: add byte ptr [eax], al; xor esi, esi; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00085554: add byte ptr [eax], al; xor esi, esi; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00083235: add byte ptr [eax], al; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00085cbb: add byte ptr [eax], al; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x001924e3: add byte ptr [eax], bh; std; mov eax, 0; jne 0x192da6; pop ebx; ret; 
0x001955f9: add byte ptr [eax], bh; std; mov eax, 0; jne 0x1956d0; pop ebx; ret; 
0x0002fb57: add byte ptr [eax], cl; add byte ptr [eax], al; ret; 
0x000b559e: add byte ptr [eax], cl; leave; jne 0xb55a5; xor eax, eax; ret; 
0x0007b0a9: add byte ptr [eax], cl; sete al; movzx eax, al; ret; 
0x00129174: add byte ptr [eax], dl; add byte ptr [eax], al; mov eax, edx; ret; 
0x000de8fb: add byte ptr [eax], dl; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0xc0]; call dword ptr gs:[0x10]; 
0x0002fca7: add byte ptr [eax], dl; add byte ptr [eax], al; ret; 
0x00199675: add byte ptr [eax], dl; add byte ptr [ecx + 0x7c6f7f2], cl; add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [edx - 0x76fffffe], edx; ret; 
0x00041ab4: add byte ptr [eax], dl; add byte ptr [edi], cl; xchg ebp, eax; ret 0xea81; 
0x00037b85: add byte ptr [ebp + 0x10], dh; add esp, 0x114; pop ebx; pop edi; ret; 
0x0016d206: add byte ptr [ebp + 0x10], dh; add esp, 0x18; pop ebx; ret; 
0x00105064: add byte ptr [ebp + 0x10], dh; add esp, 0x1c; ret; 
0x00065d4a: add byte ptr [ebp + 0x10e74c0], al; ret; 
0x0002e4f8: add byte ptr [ebp + 0x110c86], cl; add byte ptr [ecx + 0x111c86], cl; add byte ptr [ebp - 0x68deb7a], cl; call dword ptr [eax - 0x18]; 
0x00123fd8: add byte ptr [ebp + 0x11], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0005894b: add byte ptr [ebp + 0x11], dh; add esp, 0x1c; ret; 
0x00109903: add byte ptr [ebp + 0x11], dh; add esp, 0x60; pop ebx; pop esi; pop edi; ret; 
0x00192d7c: add byte ptr [ebp + 0x11], dh; pop ebx; ret; 
0x001627ea: add byte ptr [ebp + 0x12], dh; add esp, 0x18; pop ebx; ret; 
0x000b6013: add byte ptr [ebp + 0x12], dh; lea eax, [edx - 0x160060]; and ch, 2; lea edx, [edx - 0x924b0]; cmovne eax, edx; ret; 
0x0009afe3: add byte ptr [ebp + 0x12], dh; lea eax, [edx - 0x174c00]; and ch, 2; lea edx, [edx - 0xa02b0]; cmovne eax, edx; ret; 
0x0009bf63: add byte ptr [ebp + 0x12], dh; lea eax, [edx - 0x175680]; and ch, 2; lea edx, [edx - 0x95fe0]; cmovne eax, edx; ret; 
0x0009c253: add byte ptr [ebp + 0x12], dh; lea eax, [edx - 0x175a10]; and ch, 2; lea edx, [edx - 0x9af40]; cmovne eax, edx; ret; 
0x0009c2d3: add byte ptr [ebp + 0x12], dh; lea eax, [edx - 0x175a80]; and ch, 2; lea edx, [edx - 0x9af10]; cmovne eax, edx; ret; 
0x0009c213: add byte ptr [ebp + 0x12], dh; lea eax, [edx - 0x175af0]; and ch, 2; lea edx, [edx - 0x9d450]; cmovne eax, edx; ret; 
0x0009c293: add byte ptr [ebp + 0x12], dh; lea eax, [edx - 0x175b50]; and ch, 2; lea edx, [edx - 0x9d420]; cmovne eax, edx; ret; 
0x0009b463: add byte ptr [ebp + 0x12], dh; lea eax, [edx - 0x187a30]; and ch, 2; lea edx, [edx - 0x9ee40]; cmovne eax, edx; ret; 
0x000cad11: add byte ptr [ebp + 0x13], dh; add esp, 0x28; pop ebx; ret; 
0x00119581: add byte ptr [ebp + 0x13], dh; add esp, 0x3c; ret; 
0x0008e192: add byte ptr [ebp + 0x14], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x0007be05: add byte ptr [ebp + 0x14], dh; add esp, 0x28; pop ebx; ret; 
0x00037d9f: add byte ptr [ebp + 0x15], dh; add esp, 0x98; pop ebx; ret; 
0x0003e765: add byte ptr [ebp + 0x15], dh; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0015bf6e: add byte ptr [ebp + 0x16], dh; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x001622d3: add byte ptr [ebp + 0x16], dh; add esp, 0x74; pop ebx; pop edi; ret; 
0x0011eec5: add byte ptr [ebp + 0x17], dh; add esp, 0x1018; pop ebx; ret; 
0x00108aa4: add byte ptr [ebp + 0x17], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x001454b2: add byte ptr [ebp + 0x18], dh; add esp, 0x18; pop ebx; ret; 
0x0010902b: add byte ptr [ebp + 0x18], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x000ac9dc: add byte ptr [ebp + 0x18a0076], cl; mov byte ptr [edx], al; lea eax, [edx]; pop edi; ret; 
0x000a3e8c: add byte ptr [ebp + 0x18a0076], cl; mov byte ptr [edx], al; mov eax, edx; ret; 
0x000cc2fc: add byte ptr [ebp + 0x19], dh; add esp, 0x38; pop ebx; ret; 
0x000e0e6a: add byte ptr [ebp + 0x19], dh; add esp, 0x78; pop ebx; ret; 
0x000888e2: add byte ptr [ebp + 0x1a2093], cl; add byte ptr [ebx + 0x7501a802], cl; add eax, 0x75fef883; sbb al, 0x83; rol dword ptr [ecx], 0x83; ret 0x8108; 
0x00038bfa: add byte ptr [ebp + 0x1a], dh; add esp, 0x220; pop ebx; pop esi; pop edi; ret; 
0x00108911: add byte ptr [ebp + 0x1a], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x0018c9ec: add byte ptr [ebp + 0x1b80076], cl; add byte ptr [eax], al; add byte ptr [edi + 2], dh; neg eax; pop ebp; ret; 
0x00094319: add byte ptr [ebp + 0x1b], dh; add esp, 0xb4; pop ebx; pop esi; ret; 
0x00165c3c: add byte ptr [ebp + 0x1c], dh; add esp, 0x18; pop ebx; ret; 
0x0016ea8b: add byte ptr [ebp + 0x1d], dh; add esp, 0x28; pop ebx; ret; 
0x001245e8: add byte ptr [ebp + 0x1e], dh; add esp, 0x18; pop ebx; ret; 
0x00090056: add byte ptr [ebp + 0x1e], dh; add esp, 0x2c; ret; 
0x00095bd4: add byte ptr [ebp + 0x1f40d], cl; add byte ptr [ecx], al; ret; 
0x000ceccb: add byte ptr [ebp + 0x1f], dh; add esp, 0x50; pop ebx; pop esi; pop edi; ret; 
0x00166afe: add byte ptr [ebp + 0x20], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000518aa: add byte ptr [ebp + 0x20], dh; add esp, 0x434; pop ebx; pop esi; ret; 
0x00116ea7: add byte ptr [ebp + 0x21], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x00090552: add byte ptr [ebp + 0x22], dh; add esp, 0x18; pop ebx; ret; 
0x00084ece: add byte ptr [ebp + 0x22], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x000821b8: add byte ptr [ebp + 0x22], dh; add esp, 0x2c; ret; 
0x001124db: add byte ptr [ebp + 0x22], dh; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x00086870: add byte ptr [ebp + 0x22c96], cl; add byte ptr [eax + 0x9c], bh; call dword ptr gs:[0x10]; 
0x001248f3: add byte ptr [ebp + 0x23], dh; add esp, 0x18; pop ebx; ret; 
0x00082503: add byte ptr [ebp + 0x23], dh; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x000826ef: add byte ptr [ebp + 0x23], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x001244c3: add byte ptr [ebp + 0x23], dh; add esp, 0x28; pop ebx; ret; 
0x000b6778: add byte ptr [ebp + 0x2444c7c0], al; sbb al, 1; add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0x44c7; 
0x0016eb2d: add byte ptr [ebp + 0x24], dh; add esp, 0x28; pop ebx; ret; 
0x0016b455: add byte ptr [ebp + 0x24], dh; add esp, 0x514; mov eax, ebx; pop ebx; pop esi; ret; 
0x000cbd43: add byte ptr [ebp + 0x25], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00116d01: add byte ptr [ebp + 0x25], dh; add esp, 0x54; pop ebx; pop esi; ret; 
0x00124420: add byte ptr [ebp + 0x26], dh; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x00126698: add byte ptr [ebp + 0x26], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x001982c8: add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; lea eax, [ecx + 8]; ret; 
0x00197b75: add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; ret; 
0x000a5d48: add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; mov byte ptr [ecx], dl; pop ebx; ret; 
0x00193ce7: add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; nop; xor eax, eax; ret; 
0x00191dd8: add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; xor eax, eax; ret; 
0x0012263f: add byte ptr [ebp + 0x27], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000c41c1: add byte ptr [ebp + 0x28], dh; add esp, 0x18; pop ebx; ret; 
0x00082320: add byte ptr [ebp + 0x28], dh; add esp, 0x2c; ret; 
0x0004ad43: add byte ptr [ebp + 0x28], dh; sub esp, 0x18; mov ecx, esp; mov ebx, 0x3001; mov eax, 0x180; call dword ptr gs:[0x10]; 
0x001470d1: add byte ptr [ebp + 0x29], dh; add esp, 0x11c; ret; 
0x001125e7: add byte ptr [ebp + 0x29], dh; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x00116bfd: add byte ptr [ebp + 0x29], dh; add esp, 0x54; pop ebx; pop esi; ret; 
0x0013ebef: add byte ptr [ebp + 0x2a], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x0011658c: add byte ptr [ebp + 0x2a], dh; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0011eebe: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x11eedf; add esp, 0x1018; pop ebx; ret; 
0x00146eca: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x146f14; add esp, 0x118; pop ebx; ret; 
0x00146f6a: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x146fd0; add esp, 0x118; pop ebx; ret; 
0x0014702a: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x14707b; add esp, 0x118; pop ebx; ret; 
0x001470ca: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x1470fd; add esp, 0x11c; ret; 
0x00037d98: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x37db7; add esp, 0x98; pop ebx; ret; 
0x00038310: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x38321; add esp, 0x12c; ret; 
0x00038980: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x3899f; add esp, 0x98; pop ebx; ret; 
0x00038a00: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x38a1f; add esp, 0x98; pop ebx; ret; 
0x00038a88: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x38a99; add esp, 0x9c; ret; 
0x000489a4: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x489b5; add esp, 0x42c; ret; 
0x000582d8: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x582ea; add esp, 0x1018; pop ebx; ret; 
0x000d8421: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0xd8433; add esp, 0xe8; pop ebx; ret; 
0x000d854d: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0xd855f; add esp, 0xe8; pop ebx; ret; 
0x0011e69d: add byte ptr [ebp + 0x2b], ah; add eax, 0x14; jne 0x11e6af; add esp, 0x418; pop ebx; ret; 
0x0012499b: add byte ptr [ebp + 0x2b], dh; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x001956a2: add byte ptr [ebp + 0x2b], dh; pop ebx; ret; 
0x0008240c: add byte ptr [ebp + 0x2c], dh; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x0002bb51: add byte ptr [ebp + 0x2e], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00163e8b: add byte ptr [ebp + 0x2e], dh; add esp, 0x1c; ret; 
0x00088667: add byte ptr [ebp + 0x2e], dh; mov eax, edx; pop ebx; pop esi; ret; 
0x001191d5: add byte ptr [ebp + 0x2f], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016b9ea: add byte ptr [ebp + 0x2f], dh; add esp, 0x18; pop ebx; ret; 
0x0008df34: add byte ptr [ebp + 0x30], dh; add esp, 0x90; pop ebx; pop esi; pop edi; ret; 
0x0012fcbd: add byte ptr [ebp + 0x30], dh; pop ebx; pop esi; pop edi; ret; 
0x001a0dd7: add byte ptr [ebp + 0x314574c0], al; jmp dword ptr [esi - 0x70]; 
0x00101377: add byte ptr [ebp + 0x3154245c], cl; dec dword ptr [ebp - 0x76afdb8c]; ret 0x5c89; 
0x0016bc70: add byte ptr [ebp + 0x31], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x000dfeb2: add byte ptr [ebp + 0x31], dh; rol byte ptr [ecx + 0xadf5fa], 0; setne al; ret; 
0x00104c25: add byte ptr [ebp + 0x33840fc0], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x13f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x001595d3: add byte ptr [ebp + 0x33], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x00021e70: add byte ptr [ebp + 0x33], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000d7b7d: add byte ptr [ebp + 0x33], dh; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x000d14df: add byte ptr [ebp + 0x348d0148], cl; mov dh, 0x83; ret 0x8901; 
0x00037f45: add byte ptr [ebp + 0x34], dh; add esp, 0x28; pop ebx; ret; 
0x00081ff9: add byte ptr [ebp + 0x35], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0008f1fb: add byte ptr [ebp + 0x35], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x00087d81: add byte ptr [ebp + 0x35], dh; mov eax, dword ptr [edx + 0x84]; and eax, 0x10; jne 0x87d98; add esp, 0xc; ret; 
0x0008e452: add byte ptr [ebp + 0x36], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000d7029: add byte ptr [ebp + 0x36], dh; add esp, 0x28; pop ebx; ret; 
0x00112882: add byte ptr [ebp + 0x37], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x00082bc7: add byte ptr [ebp + 0x37], dh; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x0009016c: add byte ptr [ebp + 0x38], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x00116a0e: add byte ptr [ebp + 0x38], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0003b170: add byte ptr [ebp + 0x39], dh; add esp, 0x18; pop ebx; ret; 
0x00094b54: add byte ptr [ebp + 0x39b774d2], al; ret 0xb374; 
0x00091ff3: add byte ptr [ebp + 0x39b874c0], al; ret 0xf475; 
0x000d873f: add byte ptr [ebp + 0x3a], dh; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x001452a5: add byte ptr [ebp + 0x3b], dh; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0008fde6: add byte ptr [ebp + 0x3b], dh; add esp, 0x38; pop ebx; ret; 
0x00118588: add byte ptr [ebp + 0x3c], dh; add esp, 0x190; pop ebx; pop esi; pop edi; ret; 
0x000c191b: add byte ptr [ebp + 0x3d], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00193fc0: add byte ptr [ebp + 0x3d], dh; pop ebx; ret; 
0x000ced6c: add byte ptr [ebp + 0x3dd08a], cl; add byte ptr [ebp - 0x15f16f6e], cl; call dword ptr [ecx + 0x52]; 
0x000cbf38: add byte ptr [ebp + 0x3e], dh; add esp, 0x28; pop ebx; ret; 
0x0016ec5b: add byte ptr [ebp + 0x3e], dh; add esp, 0x34; pop ebx; pop esi; ret; 
0x001089fa: add byte ptr [ebp + 0x3e], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x00146ed1: add byte ptr [ebp + 0x40], dh; add esp, 0x118; pop ebx; ret; 
0x000f314f: add byte ptr [ebp + 0x40f6f004], cl; push es; adc byte ptr [edx + ebx*8 - 0x75], dh; pop eax; add al, 0xf7; ret; 
0x00147378: add byte ptr [ebp + 0x41], dh; add esp, 0x1c; ret; 
0x0016570c: add byte ptr [ebp + 0x428b0076], cl; add al, 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x000906e2: add byte ptr [ebp + 0x42], dh; add esp, 0x124; pop ebx; pop esi; ret; 
0x00037c81: add byte ptr [ebp + 0x42], dh; add esp, 0x94; pop ebx; pop edi; ret; 
0x0016f91c: add byte ptr [ebp + 0x432b0443], cl; add al, 0x83; ret; 
0x000dde3e: add byte ptr [ebp + 0x43], dh; add esp, 0x34; pop ebx; pop esi; ret; 
0x0008486c: add byte ptr [ebp + 0x448b0076], cl; and al, 4; mov dword ptr [eax + 0x14], edx; xor eax, eax; ret; 
0x001624e0: add byte ptr [ebp + 0x44], dh; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x00192d48: add byte ptr [ebp + 0x45], dh; pop ebx; ret; 
0x00095611: add byte ptr [ebp + 0x46850fd2], al; add dword ptr [eax], eax; add byte ptr [ebx + 0x44c90], cl; add byte ptr [ecx], bh; ret; 
0x00140b91: add byte ptr [ebp + 0x47], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00147031: add byte ptr [ebp + 0x47], dh; add esp, 0x118; pop ebx; ret; 
0x001127d2: add byte ptr [ebp + 0x47], dh; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x00078536: add byte ptr [ebp + 0x4889044a], cl; adc byte ptr [ecx - 0x9ec74ce], cl; ret 0x7402; 
0x0011c49e: add byte ptr [ebp + 0x48], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000d976d: add byte ptr [ebp + 0x48], dh; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x000da80d: add byte ptr [ebp + 0x49], dh; add esp, 0x28; pop ebx; ret; 
0x0003a994: add byte ptr [ebp + 0x4a080], cl; add byte ptr [eax - 1], dl; je 0x3a9c3; sbb al, 0xe8; imul edi, eax, -1; jmp dword ptr [esi - 0x70]; 
0x0011c3cc: add byte ptr [ebp + 0x4a], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0008f29d: add byte ptr [ebp + 0x4b], dh; add esp, 0x124; pop ebx; pop esi; ret; 
0x00165aed: add byte ptr [ebp + 0x4b], dh; add esp, 0x18; pop ebx; ret; 
0x0010bcb6: add byte ptr [ebp + 0x4b], dh; add esp, 0x44; mov eax, edx; pop ebx; pop esi; ret; 
0x000c176b: add byte ptr [ebp + 0x4d], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000df3f9: add byte ptr [ebp + 0x4d], dh; add esp, 0x28; pop ebx; ret; 
0x00122df0: add byte ptr [ebp + 0x4d], dh; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x00161fa3: add byte ptr [ebp + 0x5128244c], cl; push 4; push edx; call dword ptr [eax + 0x14]; 
0x00038dcf: add byte ptr [ebp + 0x51], dl; lea esi, [ecx + eax]; push esi; call edi; 
0x0014100d: add byte ptr [ebp + 0x52102454], cl; push edi; call eax; 
0x001410d9: add byte ptr [ebp + 0x52102454], cl; push esi; call eax; 
0x000b67f9: add byte ptr [ebp + 0x52342454], cl; push dword ptr [edi + 8]; call ebx; 
0x00107a04: add byte ptr [ebp + 0x52], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x000d70bc: add byte ptr [ebp + 0x548b0076], cl; and al, 0xc; mov dword ptr [edx], ebx; pop ebx; ret; 
0x000df762: add byte ptr [ebp + 0x54], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x00122eb0: add byte ptr [ebp + 0x55], dh; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x0010bb22: add byte ptr [ebp + 0x56], dh; add esp, 0xe4; pop ebx; pop esi; ret; 
0x00165ca1: add byte ptr [ebp + 0x57], dh; add esp, 0x18; pop ebx; ret; 
0x0007d961: add byte ptr [ebp + 0x57], dl; push ebx; call dword ptr [esi + 0x40]; 
0x001734be: add byte ptr [ebp + 0x57], dl; push esi; call dword ptr [ebx + 0x40]; 
0x0008b027: add byte ptr [ebp + 0x5840fc9], al; add al, 0; add byte ptr [eax + 0xf0], bh; mov ecx, 8; mov esi, edx; call dword ptr gs:[0x10]; 
0x00115a9e: add byte ptr [ebp + 0x58], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016e58b: add byte ptr [ebp + 0x58], dh; add esp, 0xd4; mov eax, ebx; pop ebx; pop esi; ret; 
0x00165d3d: add byte ptr [ebp + 0x59], dh; add esp, 0x18; pop ebx; ret; 
0x0016f97b: add byte ptr [ebp + 0x5a], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00131367: add byte ptr [ebp + 0x5b8f865], cl; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop ebp; ret; 
0x0016de0d: add byte ptr [ebp + 0x5b], dh; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x00146f71: add byte ptr [ebp + 0x5c], dh; add esp, 0x118; pop ebx; ret; 
0x00123713: add byte ptr [ebp + 0x5e0974c0], 0x5b; jl 0x216d0; ret; 
0x000e95ef: add byte ptr [ebp + 0x5e5b0141], cl; ret; 
0x00023aa2: add byte ptr [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret; 
0x00115335: add byte ptr [ebp + 0x5f], bl; pop ebx; ret; 
0x000480fa: add byte ptr [ebp + 0x5f], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000c183b: add byte ptr [ebp + 0x5f], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000cbff1: add byte ptr [ebp + 0x5f], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x00165756: add byte ptr [ebp + 0x60], dh; add esp, 0x18; pop ebx; ret; 
0x000a5d6b: add byte ptr [ebp + 0x66002674], cl; mov dword ptr [ecx], edx; mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x001410fd: add byte ptr [ebp + 0x68], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0010cc47: add byte ptr [ebp + 0x6a501445], cl; add eax, 0x302474ff; push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x0010c977: add byte ptr [ebp + 0x6a501445], cl; add edi, edi; je 0x10c9a5; xor bh, bh; jne 0x10c991; call dword ptr [ebp + 0x24]; 
0x0010da07: add byte ptr [ebp + 0x6a501445], cl; add edi, edi; je 0x10da35; xor bh, bh; jne 0x10da21; call dword ptr [ebp + 0x24]; 
0x00114907: add byte ptr [ebp + 0x6a501445], cl; add edi, edi; je 0x114935; xor bh, bh; jne 0x114921; call dword ptr [ebp + 0x24]; 
0x001628f1: add byte ptr [ebp + 0x6b], dh; add esp, 0x110; pop ebx; pop esi; pop edi; ret; 
0x00132bfc: add byte ptr [ebp + 0x6be80076], cl; idiv bh; jmp dword ptr [esi - 0x70]; 
0x00081a1d: add byte ptr [ebp + 0x72840fc0], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x736d], cl; jmp dword ptr [ebp - 0x5f]; 
0x0015efa2: add byte ptr [ebp + 0x73], dh; add esp, 0x18; pop ebx; ret; 
0x0011819c: add byte ptr [ebp + 0x78], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x000fb11f: add byte ptr [ebp + 0x7d], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00075db8: add byte ptr [ebp + 0x84b8], cl; add byte ptr [ebp - 0x9fa8b37], al; ret 0x7408; 
0x00146cc9: add byte ptr [ebp + 0xa], dh; add esp, 0x110; pop ebx; pop esi; pop edi; ret; 
0x0009ae65: add byte ptr [ebp + 0xa], dh; add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret 4; 
0x00133638: add byte ptr [ebp + 0xa], dh; add esp, 0x2c; ret; 
0x001469ea: add byte ptr [ebp + 0xa], dh; add esp, 0x810; pop ebx; pop esi; pop edi; ret; 
0x00092db1: add byte ptr [ebp + 0xa], dh; add esp, 0x90; pop ebx; pop esi; pop edi; ret; 
0x00121289: add byte ptr [ebp + 0xa], dh; add esp, 0xe0; pop ebx; pop esi; pop edi; ret; 
0x000305c3: add byte ptr [ebp + 0xa], dh; mov eax, edx; add esp, 0xc; ret; 
0x00140acb: add byte ptr [ebp + 0xa], dh; movzx eax, byte ptr [eax + 1]; shr eax, 1; ret; 
0x0015db71: add byte ptr [ebp + 0xac2494], cl; add byte ptr [eax], al; push edx; push esi; call dword ptr [eax + 4]; 
0x00191de9: add byte ptr [ebp + 0xb6], cl; add byte ptr [eax + 1], bh; ja 0x191df9; neg eax; ret; 
0x000c9ec9: add byte ptr [ebp + 0xb6], cl; add byte ptr [eax + 1], bh; ret; 
0x00095ca9: add byte ptr [ebp + 0xb6], cl; add byte ptr [ebp - 0x77], dl; ret 0x5657; 
0x000376d9: add byte ptr [ebp + 0xb6], cl; add byte ptr [ebx - 0x1337f], cl; jmp dword ptr [ebp - 0x75]; 
0x000677b9: add byte ptr [ebp + 0xb6], cl; add byte ptr [ecx + 0x6785c6d3], cl; idiv edi; jmp dword ptr [eax]; 
0x001165fb: add byte ptr [ebp + 0xb], dh; add esp, 0x1c; ret; 
0x00125a06: add byte ptr [ebp + 0xb], dh; add esp, 0x7c; ret; 
0x00162257: add byte ptr [ebp + 0xd], dh; add esp, 0x1c; ret; 
0x001097d7: add byte ptr [ebp + 0xd], dh; add esp, 0x54; pop ebx; pop esi; ret; 
0x00109897: add byte ptr [ebp + 0xd], dh; add esp, 0x64; pop ebx; pop esi; ret; 
0x0003ac50: add byte ptr [ebp + 0xd], dh; add esp, 4; pop ebx; pop esi; ret; 
0x001626ee: add byte ptr [ebp + 0xe], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00080ba7: add byte ptr [ebp + 0xe], dh; sub edx, dword ptr [eax + 0xc]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x000a5dcc: add byte ptr [ebp + 0xf660076], cl; adc eax, dword ptr [ecx]; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x000c5e74: add byte ptr [ebp + 0xff189ff], al; xchg ebp, eax; ret 0xbeb; 
0x000a83dc: add byte ptr [ebp + 0xff30076], cl; outsd dx, dword ptr [esi]; add ebx, esi; movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; ret; 
0x0017199c: add byte ptr [ebp + 0xff30076], cl; push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x001585bc: add byte ptr [ebp + 0xff30076], cl; push ds; sti; ret; 
0x000bc606: add byte ptr [ebp + 0xff589ff], al; xchg ebp, eax; ret 0x6eb; 
0x0004ab6d: add byte ptr [ebp + 2], dh; push ecx; ret; 
0x00021dd2: add byte ptr [ebp + 4], dh; add esp, 0x1c; ret; 
0x0003ad5f: add byte ptr [ebp + 4], dh; add esp, 0x2c; ret; 
0x0016364e: add byte ptr [ebp + 4], dh; add esp, 0x4c; ret; 
0x00037271: add byte ptr [ebp + 5], dh; add esp, 0x18; pop ebx; ret; 
0x0008ae0d: add byte ptr [ebp + 5], dh; add esp, 0x28; pop ebx; ret; 
0x00093e92: add byte ptr [ebp + 5], dh; add esp, 0x38; pop ebx; ret; 
0x000cae3c: add byte ptr [ebp + 5], dh; add esp, 0x48; pop ebx; ret; 
0x00058366: add byte ptr [ebp + 5], dh; add esp, 0x78; pop ebx; ret; 
0x00082a67: add byte ptr [ebp + 6], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x00111afd: add byte ptr [ebp + 6], dh; add esp, 0x14; pop esi; pop edi; ret; 
0x0003882e: add byte ptr [ebp + 6], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x0011a3cf: add byte ptr [ebp + 6], dh; add esp, 0x34; pop ebx; pop esi; ret; 
0x00166d53: add byte ptr [ebp + 6], dh; add esp, 0x54; pop ebx; pop esi; ret; 
0x00167890: add byte ptr [ebp + 7], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00038317: add byte ptr [ebp + 7], dh; add esp, 0x12c; ret; 
0x000865bf: add byte ptr [ebp + 7], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000cef0e: add byte ptr [ebp + 7], dh; add esp, 0x28; xor eax, eax; pop ebx; ret; 
0x0011a7b2: add byte ptr [ebp + 7], dh; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x000489ab: add byte ptr [ebp + 7], dh; add esp, 0x42c; ret; 
0x001251ec: add byte ptr [ebp + 7], dh; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x00038a8f: add byte ptr [ebp + 7], dh; add esp, 0x9c; ret; 
0x001708d6: add byte ptr [ebp + 7], dh; add esp, 4; pop ebx; pop esi; ret; 
0x00166dc5: add byte ptr [ebp + 7], dh; movzx eax, al; add esp, 0x1c; ret; 
0x0010c113: add byte ptr [ebp + 7], dh; movzx eax, al; add esp, 0x4c; ret; 
0x0014ab4b: add byte ptr [ebp + 7], dh; movzx eax, ax; add esp, 0x2c; ret; 
0x000582df: add byte ptr [ebp + 8], dh; add esp, 0x1018; pop ebx; ret; 
0x0011e6a4: add byte ptr [ebp + 8], dh; add esp, 0x418; pop ebx; ret; 
0x0011f0a3: add byte ptr [ebp + 8], dh; add esp, 0x54; mov eax, ebx; pop ebx; pop esi; ret; 
0x000d8428: add byte ptr [ebp + 8], dh; add esp, 0xe8; pop ebx; ret; 
0x0008e0d7: add byte ptr [ebp + 8], dh; and eax, 0x38; cmp eax, 8; je 0x8e0e3; ret; 
0x0008278b: add byte ptr [ebp + 8], dh; and edx, 0x38; cmp edx, 8; je 0x82797; ret; 
0x0003661b: add byte ptr [ebp + 8], dh; mov eax, edx; add esp, 0x1c; ret 4; 
0x00088965: add byte ptr [ebp + 8], dh; xor eax, eax; pop ebx; ret; 
0x000375e5: add byte ptr [ebp + 9], dh; add esp, 0x124; pop ebx; pop esi; ret; 
0x0004d110: add byte ptr [ebp + 9], dh; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x00099cc7: add byte ptr [ebp + 9], dh; add esp, 0x38; mov eax, ebx; pop ebx; ret 4; 
0x00037d20: add byte ptr [ebp + 9], dh; add esp, 0x94; pop ebx; pop edi; ret; 
0x00193ff4: add byte ptr [ebp + 9], dh; pop ebx; ret; 
0x00020f44: add byte ptr [ebp + ebx - 0x7d], dh; in al, dx; or al, 0xff; jne 0x20f19; call dword ptr [ebp - 0x38]; 
0x0008de60: add byte ptr [ebp + edx*8 - 0x77], dh; ret 0xe083; 
0x000fc6bc: add byte ptr [ebp - 0x12ec3f79], cl; call dword ptr [eax + 0x6a]; 
0x000fcb8c: add byte ptr [ebp - 0x12ec3f7a], cl; call dword ptr [eax + 0x6a]; 
0x000a23b7: add byte ptr [ebp - 0x137c00ba], cl; add al, 0x39; ror byte ptr [ecx + 0xf102454], 1; inc edi; ret 0x5350; 
0x0015833c: add byte ptr [ebp - 0x137cff8a], cl; or bh, bh; je 0x15836a; or byte ptr [esi - 0x18], dl; ret; 
0x0009300c: add byte ptr [ebp - 0x137cff8a], cl; or byte ptr [ebp - 0x1971df79], cl; call dword ptr [eax - 0x73]; 
0x0012407c: add byte ptr [ebp - 0x137cff8a], cl; or byte ptr [ebp - 0x65cf779], cl; call dword ptr [eax + 0x55]; 
0x0011ae5c: add byte ptr [ebp - 0x137cff8a], cl; or byte ptr [ebp - 0x6d5a47d], cl; call dword ptr [eax - 0x73]; 
0x001639dc: add byte ptr [ebp - 0x137cff8a], cl; or byte ptr [ebx + 0x74ff0843], cl; and al, 0x14; push ebx; call dword ptr [eax]; 
0x0004652c: add byte ptr [ebp - 0x157cff8a], cl; xor byte ptr [ebx - 0x68f0f606], al; ret 0xd284; 
0x000ced72: add byte ptr [ebp - 0x15f16f6e], cl; call dword ptr [ecx + 0x52]; 
0x0007a1c0: add byte ptr [ebp - 0x189f7d], cl; call dword ptr [eax - 0x73]; 
0x000951c7: add byte ptr [ebp - 0x1959bf7d], cl; call dword ptr [eax + 0x56]; 
0x0008fcc5: add byte ptr [ebp - 0x19a37f7d], cl; jmp dword ptr [ebp - 0x5d]; 
0x0008fcc5: add byte ptr [ebp - 0x19a37f7d], cl; jmp dword ptr [ebp - 0x5d]; pop eax; add al, byte ptr [eax]; add byte ptr [ebp - 0x19a4cf7d], cl; call dword ptr [ecx + 0x50]; 
0x0008fcd1: add byte ptr [ebp - 0x19a4cf7d], cl; call dword ptr [ecx + 0x50]; 
0x00075590: add byte ptr [ebp - 0x19bf7d], cl; call dword ptr [eax - 0x73]; 
0x00074890: add byte ptr [ebp - 0x1c5f79], cl; jmp ptr [ecx]; ret 0x4d89; 
0x00070dd4: add byte ptr [ebp - 0x1c5f79], cl; jmp ptr [ecx]; ret 0xd989; 
0x0007e05e: add byte ptr [ebp - 0x1c5f79], cl; jmp ptr [ecx]; ret 0xf189; 
0x00077f0e: add byte ptr [ebp - 0x1c5f7b], cl; dec dword ptr [ebp - 0x148b6b]; jmp ptr [ecx]; ret 0xd989; 
0x00077cb7: add byte ptr [ebp - 0x1c5f7b], cl; jmp ptr [ecx]; ret 0xf989; 
0x0007f96d: add byte ptr [ebp - 0x1c5f7d], cl; jmp ptr [ecx]; ret 0xf989; 
0x000738ec: add byte ptr [ebp - 0x1c5f7e], cl; dec dword ptr [ebp - 0x148b6e]; jmp ptr [ecx]; ret 0x4d89; 
0x00053829: add byte ptr [ebp - 0x1c5f7e], cl; dec dword ptr [ebp - 0x148b6e]; jmp ptr [ecx]; ret 0xf189; 
0x0008468c: add byte ptr [ebp - 0x1f7cff8a], cl; std; mov dword ptr [ecx + 8], eax; xor eax, eax; ret; 
0x000213e4: add byte ptr [ebp - 0x25], dh; mov ecx, dword ptr [eax - 0xe8]; cmp dword ptr [ecx + 0x94], edx; jne 0x213c2; ret; 
0x00119bec: add byte ptr [ebp - 0x268afea6], cl; mov eax, esi; pop ebx; pop esi; ret; 
0x000b5fd7: add byte ptr [ebp - 0x2776fba8], cl; pop ebx; ret; 
0x000c9f7a: add byte ptr [ebp - 0x278afeb8], cl; mov eax, ecx; ret; 
0x000213f2: add byte ptr [ebp - 0x33], dh; ret; 
0x00050e72: add byte ptr [ebp - 0x35f34b], cl; jmp ptr [ecx]; ret 0xd889; 
0x0012701c: add byte ptr [ebp - 0x397cfeb6], cl; add dword ptr [ecx], eax; ret; 
0x0008372c: add byte ptr [ebp - 0x3b7cff8a], cl; add al, 0x5b; pop esi; ret; 
0x0006755c: add byte ptr [ebp - 0x3b7d0000], dh; adc byte ptr [ecx], bh; ret; 
0x00048dec: add byte ptr [ebp - 0x3c7cff8a], cl; add esi, eax; inc ebx; jmp dword ptr [eax]; 
0x00083e5e: add byte ptr [ebp - 0x3dbaf040], al; ret; 
0x0011ef1a: add byte ptr [ebp - 0x3dbbf040], al; add esp, 0xc; ret; 
0x0015c833: add byte ptr [ebp - 0x3f6af040], al; add esp, 0x1c; movzx eax, al; ret; 
0x0011c96c: add byte ptr [ebp - 0x3f7cff8a], cl; add dword ptr [ecx], edi; ret; 
0x000e95fc: add byte ptr [ebp - 0x3fceff8a], cl; pop ebx; pop esi; ret; 
0x00095c9c: add byte ptr [ebp - 0x3fceff8a], cl; ret; 
0x0006b98c: add byte ptr [ebp - 0x4274ff8a], cl; push 0x8dfffff7; xchg dword ptr [ecx + edi*2], esp; stc; call dword ptr [eax - 0x73]; 
0x0013d627: add byte ptr [ebp - 0x4374b], cl; jmp dword ptr [esi - 0x70]; 
0x000e41ef: add byte ptr [ebp - 0x45b7b], cl; call dword ptr [eax - 0x77]; 
0x000e1b3f: add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ebx - 0x46f63]; call dword ptr [eax - 0x77]; 
0x0008dfb5: add byte ptr [ebp - 0x46efdbac], cl; pop ds; add byte ptr [eax], al; add byte ptr [ebp - 0x76f3db8c], cl; ret; 
0x000601c1: add byte ptr [ebp - 0x477bf001], al; xor al, 0; add byte ptr [ebx - 0x4f373], cl; jmp dword ptr [ebp - 0x75]; 
0x0002b543: add byte ptr [ebp - 0x47958a01], al; push es; add byte ptr [eax], al; add cl, ch; ret; 
0x001956cc: add byte ptr [ebp - 0x47a4ff8a], cl; add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x1956da; neg eax; ret; 
0x00108ec7: add byte ptr [ebp - 0x47d3dbac], cl; sub al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000939a7: add byte ptr [ebp - 0x47e7dbac], cl; add eax, dword ptr [ecx]; add byte ptr [eax], al; mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00109424: add byte ptr [ebp - 0x47e7dbac], cl; or al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00122e8a: add byte ptr [ebp - 0x47f3dbb4], cl; lds eax, ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000c9ccb: add byte ptr [ebp - 0x47ffd98c], cl; add dword ptr [eax], eax; add byte ptr [eax], al; jg 0xc9cd9; neg eax; ret; 
0x00167036: add byte ptr [ebp - 0x49f6e], cl; dec dword ptr [ecx + 0x548b0450]; and al, 8; mov dword ptr [eax + 0xc], edx; ret; 
0x000ce303: add byte ptr [ebp - 0x5397008b], cl; ret 0xf0; 
0x00162f29: add byte ptr [ebp - 0x5f], ah; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + edx], ecx; ret; 
0x00124023: add byte ptr [ebp - 0x65d5379], cl; call dword ptr [eax - 0x18]; 
0x0011ec55: add byte ptr [ebp - 0x65eff80], cl; jmp dword ptr [ebp - 0x75]; 
0x0010cce9: add byte ptr [ebp - 0x65fc37d], cl; call dword ptr [eax - 0x73]; 
0x00102d5e: add byte ptr [ebp - 0x6614f7a], cl; call dword ptr [eax - 0x73]; 
0x000e096a: add byte ptr [ebp - 0x665a77b], cl; call dword ptr [eax - 0x73]; 
0x000c502d: add byte ptr [ebp - 0x667437b], cl; call dword ptr [eax - 0x73]; 
0x000b6702: add byte ptr [ebp - 0x669777e], cl; call dword ptr [eax - 0x73]; 
0x0009aeab: add byte ptr [ebp - 0x66b5f80], cl; call dword ptr [eax + 0x68]; 
0x0009a992: add byte ptr [ebp - 0x66ba380], cl; call dword ptr [eax + 0x68]; 
0x001983df: add byte ptr [ebp - 0x677af02e], al; add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0x348d; 
0x0008f995: add byte ptr [ebp - 0x67d337e], cl; call dword ptr [eax - 0x73]; 
0x0007a77f: add byte ptr [ebp - 0x681f77d], cl; call dword ptr [eax - 0x73]; 
0x00078bc2: add byte ptr [ebp - 0x682cb7a], cl; call dword ptr [eax - 0x73]; 
0x0002e504: add byte ptr [ebp - 0x68deb7a], cl; call dword ptr [eax - 0x18]; 
0x0002e8f1: add byte ptr [ebp - 0x68deb80], cl; call dword ptr [eax - 0x18]; 
0x0002d857: add byte ptr [ebp - 0x68e5b79], cl; call dword ptr [eax - 0x73]; 
0x00023bc3: add byte ptr [ebp - 0x691637d], cl; call dword ptr [eax - 0x73]; 
0x00022690: add byte ptr [ebp - 0x691837f], cl; call dword ptr [eax - 0x73]; 
0x00021715: add byte ptr [ebp - 0x6995f80], cl; call dword ptr [eax + 0x6a]; 
0x001670fb: add byte ptr [ebp - 0x69ae97d], cl; call dword ptr [ebp + 0x6a]; 
0x00150e7e: add byte ptr [ebp - 0x69f0b7d], cl; call dword ptr [eax - 0x73]; 
0x0014cde9: add byte ptr [ebp - 0x6a02a7d], cl; call dword ptr [eax - 0x73]; 
0x0014d7f4: add byte ptr [ebp - 0x6a02a7e], cl; call dword ptr [eax - 0x73]; 
0x0002f8fa: add byte ptr [ebp - 0x6a8877d], cl; call dword ptr [esi - 1]; 
0x0011fa63: add byte ptr [ebp - 0x6abac7d], cl; call dword ptr [edx + 0x52]; 
0x0011f9ad: add byte ptr [ebp - 0x6ad9f7d], cl; call dword ptr [edx + 0x52]; 
0x0011f993: add byte ptr [ebp - 0x6adc37d], cl; call dword ptr [ecx + 0x51]; 
0x00034f7e: add byte ptr [ebp - 0x6b42f55], cl; inc dword ptr [ebx - 0x7c72f314]; mov ah, 0x2f; stc; call dword ptr [eax - 0x18]; 
0x0011eda5: add byte ptr [ebp - 0x6b46180], cl; jmp dword ptr [ebp - 0x75]; 
0x001601d3: add byte ptr [ebp - 0x6b5fd7d], cl; call dword ptr [esi + 0x57]; 
0x0013aac3: add byte ptr [ebp - 0x6b73280], cl; call dword ptr [eax - 1]; 
0x000e17f2: add byte ptr [ebp - 0x6b83f79], cl; call dword ptr [eax - 0x73]; 
0x000fe0b7: add byte ptr [ebp - 0x6bb7b], cl; call dword ptr [eax - 0x73]; 
0x00092683: add byte ptr [ebp - 0x6bf547a], cl; call dword ptr [eax - 0x73]; 
0x00091146: add byte ptr [ebp - 0x6bfb67e], cl; call dword ptr [eax - 0x73]; 
0x0008a0f7: add byte ptr [ebp - 0x6c05879], cl; call dword ptr [eax - 0x73]; 
0x0008938e: add byte ptr [ebp - 0x6c06079], cl; call dword ptr [eax - 0x73]; 
0x000868cb: add byte ptr [ebp - 0x6c13179], cl; call dword ptr [eax - 0x73]; 
0x00065290: add byte ptr [ebp - 0x6cd907a], cl; call dword ptr [eax - 0x73]; 
0x00172a6f: add byte ptr [ebp - 0x6ce8979], cl; call dword ptr [eax + 0x6a]; 
0x0003eeb2: add byte ptr [ebp - 0x6cf3879], cl; call dword ptr [eax - 0x73]; 
0x00045172: add byte ptr [ebp - 0x6cf4279], cl; call dword ptr [eax - 0x73]; 
0x00025425: add byte ptr [ebp - 0x6d45179], cl; call dword ptr [eax - 0x73]; 
0x00026006: add byte ptr [ebp - 0x6d4517a], cl; call dword ptr [eax - 0x73]; 
0x00024d70: add byte ptr [ebp - 0x6d4517d], cl; call dword ptr [eax - 0x73]; 
0x000c9eaa: add byte ptr [ebp - 0x6fffd98c], cl; add eax, 3; ret; 
0x000801ba: add byte ptr [ebp - 0x6fffd98c], cl; endbr32; mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x00196d9a: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 0xa]; ret; 
0x00196daa: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 0xb]; ret; 
0x00196dba: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 0xd]; ret; 
0x00196dca: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 0xe]; ret; 
0x00196dda: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 0xf]; ret; 
0x00196d3a: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 2]; ret; 
0x00196d4a: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 3]; ret; 
0x00196d5a: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 5]; ret; 
0x00196d6a: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 6]; ret; 
0x00196d7a: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 7]; ret; 
0x00196d8a: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 9]; ret; 
0x00195cfa: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edi + 1]; pop edi; ret; 
0x00195cea: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edi]; pop edi; ret; 
0x0019740a: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 0xa]; ret; 
0x0019741a: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 0xc]; ret; 
0x0019742a: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 0xd]; ret; 
0x0019743a: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 0xe]; ret; 
0x001973aa: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 2]; ret; 
0x001973ba: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 4]; ret; 
0x001973ca: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 5]; ret; 
0x001973da: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 6]; ret; 
0x001973ea: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 8]; ret; 
0x001973fa: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 9]; ret; 
0x000a5d8a: add byte ptr [ebp - 0x6fffd98c], cl; mov dword ptr [ecx], edx; mov byte ptr [ecx + 4], dl; pop ebx; ret; 
0x0018b1aa: add byte ptr [ebp - 0x6fffd98c], cl; mov eax, 1; ja 0x18b1b9; neg eax; ret; 
0x000a5d5a: add byte ptr [ebp - 0x6fffd98c], cl; mov word ptr [ecx], dx; pop ebx; ret; 
0x000c9eba: add byte ptr [ebp - 0x6fffd98c], cl; xor eax, eax; ret; 
0x000889c3: add byte ptr [ebp - 0x7257f72], cl; dec dword ptr [ecx - 0x41f7dbac]; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00195d2b: add byte ptr [ebp - 0x72ffd98c], cl; inc edi; add al, 0x5f; ret; 
0x0019855b: add byte ptr [ebp - 0x72ffd98c], cl; inc edi; cld; pop edi; ret; 
0x0019620b: add byte ptr [ebp - 0x72ffd98c], cl; inc edi; cli; pop edi; ret; 
0x001961cb: add byte ptr [ebp - 0x72ffd98c], cl; inc edi; cmc; pop edi; ret; 
0x00195d9b: add byte ptr [ebp - 0x72ffd98c], cl; inc edi; or al, 0x5f; ret; 
0x001961ab: add byte ptr [ebp - 0x72ffd98c], cl; inc edi; pop edi; ret; 
0x00195dbb: add byte ptr [ebp - 0x72ffd98c], cl; inc edi; push cs; pop edi; ret; 
0x00195d4b: add byte ptr [ebp - 0x72ffd98c], cl; inc edi; push es; pop edi; ret; 
0x001961fb: add byte ptr [ebp - 0x72ffd98c], cl; inc edi; stc; pop edi; ret; 
0x0019622b: add byte ptr [ebp - 0x72ffd98c], cl; inc edi; std; pop edi; ret; 
0x0019621b: add byte ptr [ebp - 0x72ffd98c], cl; inc edi; sti; pop edi; ret; 
0x0002686a: add byte ptr [ebp - 0x7497dbbc], cl; je 0x26896; xor byte ptr [ecx + 0x310c2454], cl; fisttp dword ptr [ecx - 0x76bfdbbc]; ret 0xb60f; 
0x00118d59: add byte ptr [ebp - 0x74dd8a40], al; pop esp; and al, 0x20; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00118e39: add byte ptr [ebp - 0x74dd8a40], al; pop esp; and al, 0x20; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x000379d9: add byte ptr [ebp - 0x74dd8a40], al; pop esp; and al, 0x20; mov eax, 0xb3; mov ecx, 8; call dword ptr gs:[0x10]; 
0x0010aed9: add byte ptr [ebp - 0x74dd8a40], al; pop esp; and al, 0x20; mov eax, 6; call dword ptr gs:[0x10]; 
0x0010b0a9: add byte ptr [ebp - 0x74dd8a40], al; pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 8; call dword ptr gs:[0x10]; 
0x0011decf: add byte ptr [ebp - 0x74f38b40], al; push eax; add al, 0xf6; ret 0xf01; 
0x000ee15b: add byte ptr [ebp - 0x74ffd98c], cl; inc esi; add al, 0x83; ret; 
0x0014711d: add byte ptr [ebp - 0x75], ah; adc eax, 0; mov eax, dword ptr [eax - 0x14]; mov eax, dword ptr [edx + eax]; ret; 
0x00115bd8: add byte ptr [ebp - 0x75], dh; dec esp; and al, 0x10; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x00115cd8: add byte ptr [ebp - 0x75], dh; dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000ab39b: add byte ptr [ebp - 0x75ffd98c], cl; add dword ptr [eax + 0x5ff88902], ecx; ret; 
0x000ac40c: add byte ptr [ebp - 0x7699ff8a], cl; pop ss; pop edi; pop esi; pop ebx; ret; 
0x000f2a21: add byte ptr [ebp - 0x76dd8b40], al; ret 0xe283; 
0x000d70a0: add byte ptr [ebp - 0x76e48b40], al; ret 0xf75b; 
0x0008dfbe: add byte ptr [ebp - 0x76f3db8c], cl; ret; 
0x0004862b: add byte ptr [ebp - 0x76ffd98c], cl; ret; 
0x00083146: add byte ptr [ebp - 0x77], ah; adc eax, 0x7c; ret; 
0x00095caf: add byte ptr [ebp - 0x77], dl; ret 0x5657; 
0x000dadb7: add byte ptr [ebp - 0x786a7240], al; stc; dec dword ptr [edi]; inc esp; ret 0x8d50; 
0x000dacff: add byte ptr [ebp - 0x786a7240], al; stc; dec dword ptr [edi]; inc esp; ret 0xec83; 
0x000b1c3b: add byte ptr [ebp - 0x7affd98c], cl; sal byte ptr [ebp + 0x38], 0x83; ret; 
0x00046fbc: add byte ptr [ebp - 0x7b76feaf], cl; mov word ptr [eax + eax - 0x6b770000], ds; and al, 0x84; add byte ptr [eax], al; add cl, ch; ret; 
0x001a0e6e: add byte ptr [ebp - 0x7c1a8a0a], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00163efe: add byte ptr [ebp - 0x7c1a8a40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x001240b4: add byte ptr [ebp - 0x7c578b2e], al; in al, dx; or byte ptr [ebp - 0x65d2779], cl; call dword ptr [eax + 0x55]; 
0x0013ed2c: add byte ptr [ebp - 0x7c99ff8a], cl; sti; adc al, 0xf; xchg esp, eax; ret; 
0x00143b88: add byte ptr [ebp - 0x7cbb8b40], al; in al, dx; add al, 0x89; ret; 
0x0014aa98: add byte ptr [ebp - 0x7cbd8b40], al; in al, dx; or al, 0x89; ret; 
0x000cf107: add byte ptr [ebp - 0x7cbf8b40], al; ret; 
0x0014a098: add byte ptr [ebp - 0x7cc08b40], al; in al, dx; add al, 0x89; ret; 
0x000b1c3f: add byte ptr [ebp - 0x7cc78a40], al; ret; 
0x000d7294: add byte ptr [ebp - 0x7cd08b40], al; in al, dx; or byte ptr [edi + 0x53], dl; call eax; 
0x001302d7: add byte ptr [ebp - 0x7cdb8b40], al; in al, dx; or byte ptr [ebx - 1], dl; jae 0x130313; call eax; 
0x001a0754: add byte ptr [ebp - 0x7cec8b40], al; in al, dx; or byte ptr [ebp - 0x89a2f6d], cl; call dword ptr [edx + 0x50]; 
0x0014d84d: add byte ptr [ebp - 0x7cf18a40], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00147405: add byte ptr [ebp - 0x7cf18b2e], al; les ecx, ptr [eax]; mov eax, edx; pop ebx; ret; 
0x00158e88: add byte ptr [ebp - 0x7cf48b40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x0015c975: add byte ptr [ebp - 0x7cf98b2e], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0014c805: add byte ptr [ebp - 0x7cf98b40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x0016f81f: add byte ptr [ebp - 0x7cfbdbbc], cl; ret; 
0x00142e75: add byte ptr [ebp - 0x7cffcabc], cl; in al, dx; add al, 1; ret 0x4489; 
0x00033c3b: add byte ptr [ebp - 0x7cffd98c], cl; in al, dx; or al, 0x83; ret; 
0x001588db: add byte ptr [ebp - 0x7cffd98c], cl; in al, dx; or byte ptr [ebx + 0x74ff1043], cl; and al, 0x14; push esi; call dword ptr [eax + 4]; 
0x000b3c0b: add byte ptr [ebp - 0x7cffd98c], cl; ret 0x8340; 
0x0016e073: add byte ptr [ebp - 0x7cffd98c], cl; ret 0xf604; 
0x0018c98b: add byte ptr [ebp - 0x7cffd98c], cl; ror byte ptr [eax], 0x83; ret 0x8308; 
0x00183ccb: add byte ptr [ebp - 0x7effd98c], cl; ret; 
0x000b58e2: add byte ptr [ebp - 0x7fffffff], 0x74; pop es; or dword ptr [eax + 0x3be0], 1; xor eax, eax; pop ebx; ret; 
0x00075dbe: add byte ptr [ebp - 0x9fa8b37], al; ret 0x7408; 
0x00164027: add byte ptr [ebp - 0xc5d7f7d], cl; call dword ptr [eax - 0x73]; 
0x0015e597: add byte ptr [ebp - 0xcb79f7d], cl; call dword ptr [eax - 0x73]; 
0x000a3feb: add byte ptr [ebp - 0xcffd98c], cl; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x0011ea54: add byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x11ea68; pop ebx; ret; 
0x0003798d: add byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x379a0; pop ebx; ret; 
0x000938f0: add byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x93908; pop ebx; ret; 
0x00093ce0: add byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x93cf8; pop ebx; ret; 
0x000df698: add byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x00037952: add byte ptr [ebp - 1], ah; adc eax, 0x10; mov ebx, edx; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x0010992e: add byte ptr [ebp - 1], ah; adc eax, 0x10; mov ebx, edx; ret; 
0x000de885: add byte ptr [ebp - 1], ah; adc eax, 0x10; pop ebx; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x0013eb3f: add byte ptr [ebp - 1], ah; adc eax, 0x10; pop ebx; ret; 
0x0008fe38: add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x000cabe8: add byte ptr [ebp - 7], ch; call dword ptr [eax + 0x56]; 
0x000413ee: add byte ptr [ebp - 7], dh; call dword ptr [eax - 0x18]; 
0x000478f4: add byte ptr [ebp - 7], dh; call dword ptr [eax - 0x18]; ret 0xfe80; 
0x000dfcc4: add byte ptr [ebp], bh; add byte ptr [ebx + 0xf], bl; inc esp; ret 0xb8c3; 
0x0014c35f: add byte ptr [ebx + 0x1008b11], cl; ret 0x5052; 
0x0014c49a: add byte ptr [ebx + 0x1008b17], cl; ret 0x5052; 
0x00074c2f: add byte ptr [ebx + 0x106a04ec], al; push edi; push ebx; call dword ptr [eax + 0x1c]; 
0x0003edff: add byte ptr [ebx + 0x1182474], cl; ret; 
0x000de33e: add byte ptr [ebx + 0x1200011], bh; lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x00082705: add byte ptr [ebx + 0x128b04ec], al; push ebx; push eax; push ecx; call edx; 
0x00079257: add byte ptr [ebx + 0x1389cfe2], al; add esp, 4; pop ebx; pop esi; ret; 
0x00054687: add byte ptr [ebx + 0x14898114], cl; xchg byte ptr [ebx - 0x3f7c47ab], cl; add dword ptr [ecx], ebp; fidivr dword ptr [ecx]; ret 0xee7f; 
0x0014369f: add byte ptr [ebx + 0x148d1451], cl; ret 0x1a8b; 
0x000808af: add byte ptr [ebx + 0x16a14ec], al; call 0x80310; add esp, 0x18; pop ebx; ret; 
0x0009a127: add byte ptr [ebx + 0x16b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x001a0dd1: add byte ptr [ebx + 0x194483], cl; add byte ptr [ebp + 0x314574c0], al; jmp dword ptr [esi - 0x70]; 
0x00080f09: add byte ptr [ebx + 0x19a083], al; add byte ptr [ecx], al; add esp, 4; pop ebx; pop esi; ret; 
0x0005e433: add byte ptr [ebx + 0x1ae910c4], al; ret; 
0x0019694f: add byte ptr [ebx + 0x1b720eea], al; lea eax, [edi + 0xd]; pop edi; ret; 
0x0019798f: add byte ptr [ebx + 0x1b720eef], al; lea eax, [eax + 0xd]; pop edi; ret; 
0x0019701f: add byte ptr [ebx + 0x1b7c0ec2], al; lea eax, [ecx + 0xe]; ret; 
0x0010e4fe: add byte ptr [ebx + 0x1b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00072240: add byte ptr [ebx + 0x1b810c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00108ec0: add byte ptr [ebx + 0x1bc24b4], cl; add byte ptr [eax], al; lea edx, [esp + 0x2c]; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x00150bff: add byte ptr [ebx + 0x1db8200b], al; add byte ptr [eax], al; add byte ptr [ebx - 0x1336a], cl; jmp dword ptr [ebp - 0x75]; 
0x001a1052: add byte ptr [ebx + 0x207f01f8], al; add esp, 4; pop ebx; pop esi; ret; 
0x00170b21: add byte ptr [ebx + 0x217f01f8], al; add esp, 4; pop ebx; pop esi; ret; 
0x00170c71: add byte ptr [ebx + 0x217f01f8], al; pop ebx; pop esi; pop edi; ret; 
0x00083b29: add byte ptr [ebx + 0x21ba084e], cl; add byte ptr [eax], al; add byte ptr [ecx + 0x10eb8c3], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0016ba60: add byte ptr [ebx + 0x227f01f8], al; add esp, 8; pop ebx; ret; 
0x0004a980: add byte ptr [ebx + 0x227f01fa], al; add esp, 0x14; pop ebx; pop esi; ret; 
0x0015aab6: add byte ptr [ebx + 0x239880], cl; add byte ptr [ebx + 0x6a08ec], al; push ebx; call dword ptr [eax + 0x14]; 
0x000da030: add byte ptr [ebx + 0x24448901], cl; sub byte ptr [ebp - 0x6ba6179], cl; call dword ptr [eax + 0x53]; 
0x000cd206: add byte ptr [ebx + 0x247f01f8], al; add esp, 8; pop ebx; ret; 
0x001518ed: add byte ptr [ebx + 0x257f01f8], al; add esp, 8; pop ebx; ret; 
0x00127115: add byte ptr [ebx + 0x26497], cl; add byte ptr [ecx - 0x33f7b], cl; inc edi; test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x0008660d: add byte ptr [ebx + 0x28901e0], al; xor eax, eax; ret; 
0x00057a5f: add byte ptr [ebx + 0x28907c8], al; mov eax, 1; ret; 
0x0016aa4f: add byte ptr [ebx + 0x2901106d], al; ret; 
0x00199c98: add byte ptr [ebx + 0x2904245c], cl; ret 0xfa83; 
0x0009ee4c: add byte ptr [ebx + 0x29142454], cl; ret 0x748d; 
0x0009f4b8: add byte ptr [ebx + 0x29142454], cl; ret 0x8b90; 
0x0009f260: add byte ptr [ebx + 0x29142454], cl; ret 0xb48d; 
0x0004c496: add byte ptr [ebx + 0x29302454], cl; ret 0x5489; 
0x0004c353: add byte ptr [ebx + 0x29342454], cl; ret 0x5489; 
0x00116fef: add byte ptr [ebx + 0x29], bl; ret 0xc085; 
0x0019693f: add byte ptr [ebx + 0x2b720dea], al; lea eax, [edi + 0xc]; pop edi; ret; 
0x0019797f: add byte ptr [ebx + 0x2b720def], al; lea eax, [eax + 0xc]; pop edi; ret; 
0x0019700f: add byte ptr [ebx + 0x2b7c0dc2], al; lea eax, [ecx + 0xd]; ret; 
0x00120e5d: add byte ptr [ebx + 0x2d7f01f8], al; add esp, 8; pop ebx; ret; 
0x000875c2: add byte ptr [ebx + 0x3108244c], cl; sar byte ptr [eax + 0xaf], cl; mov esi, 8; call dword ptr gs:[0x10]; 
0x0010b024: add byte ptr [ebx + 0x3108245c], cl; leave; call dword ptr gs:[0x10]; 
0x00193aaf: add byte ptr [ebx + 0x31], bl; rcr byte ptr [esi + 0x5f], 0x5d; ret; 
0x0003accc: add byte ptr [ebx + 0x34408b00], cl; add esp, 4; pop ebx; pop esi; ret; 
0x00122dc5: add byte ptr [ebx + 0x357401ff], al; lea ecx, [esp + 0xc]; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x00122f45: add byte ptr [ebx + 0x357401ff], al; lea ecx, [esp + 0xc]; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x0007ec55: add byte ptr [ebx + 0x357f01f8], al; add esp, 8; pop ebx; ret; 
0x000834db: add byte ptr [ebx + 0x377f01f8], al; pop ebx; pop esi; pop edi; ret; 
0x0006e99f: add byte ptr [ebx + 0x3908245c], cl; ret; 
0x0009824b: add byte ptr [ebx + 0x3908245c], cl; ror dword ptr [edi], cl; xchg ebp, eax; ret 0xe083; 
0x0015d750: add byte ptr [ebx + 0x3910244c], cl; ret 0x4e0f; 
0x0009d950: add byte ptr [ebx + 0x3910245c], cl; ret; 
0x0014300b: add byte ptr [ebx + 0x395c2474], cl; ret; 
0x0014b229: add byte ptr [ebx + 0x396604ec], al; ret 0x470f; 
0x0019c087: add byte ptr [ebx + 0x3968245c], cl; ret; 
0x0019692f: add byte ptr [ebx + 0x3b720bea], al; lea eax, [edi + 0xa]; pop edi; ret; 
0x0019796f: add byte ptr [ebx + 0x3b720bef], al; lea eax, [eax + 0xa]; pop edi; ret; 
0x00196fff: add byte ptr [ebx + 0x3b7c0bc2], al; lea eax, [ecx + 0xb]; ret; 
0x0014cb27: add byte ptr [ebx + 0x3b7f01f8], al; add esp, 4; pop ebx; pop esi; ret; 
0x001593bf: add byte ptr [ebx + 0x428b0cec], al; add al, 0x52; call dword ptr [eax + 0x10]; 
0x001588df: add byte ptr [ebx + 0x438b08ec], al; adc bh, bh; je 0x15890d; adc al, 0x56; call dword ptr [eax + 4]; 
0x0015b097: add byte ptr [ebx + 0x438b08ec], al; add al, 0xff; je 0x15b0c5; sbb al, 0x53; call dword ptr [eax + 4]; 
0x001639df: add byte ptr [ebx + 0x438b08ec], al; or bh, bh; je 0x163a0d; adc al, 0x53; call dword ptr [eax]; 
0x00163bce: add byte ptr [ebx + 0x438b08ec], al; or bh, bh; je 0x163bfc; sbb al, 0x53; call dword ptr [eax + 0xc]; 
0x00160860: add byte ptr [ebx + 0x438b08ec], al; push eax; lea edx, [esp + 0xac]; push edx; push esi; call dword ptr [eax + 4]; 
0x0015968f: add byte ptr [ebx + 0x438b0cec], al; add al, 0x53; call dword ptr [eax + 0x10]; 
0x0003b8f1: add byte ptr [ebx + 0x438d18c4], al; push es; pop ebx; ret; 
0x00048def: add byte ptr [ebx + 0x43c601c3], al; jmp dword ptr [eax]; 
0x000832fe: add byte ptr [ebx + 0x4408b08], cl; mov dword ptr [ecx + 4], eax; mov dword ptr [eax], ecx; mov dword ptr [edx + 0x924], 0; ret; 
0x0011636a: add byte ptr [ebx + 0x44892804], cl; and al, 0xc; mov eax, edi; call dword ptr gs:[0x10]; 
0x00037a2f: add byte ptr [ebx + 0x448b10c4], al; and al, 0xc; add esp, 0x14; pop ebx; pop esi; ret; 
0x000da076: add byte ptr [ebx + 0x448b10c4], al; and al, 0xc; call eax; 
0x0007cb63: add byte ptr [ebx + 0x448d08ec], al; and al, 0x18; push eax; push esi; call dword ptr [edi + 0x48]; 
0x0007c7fa: add byte ptr [ebx + 0x448d08ec], al; and al, 0x28; push eax; push esi; call dword ptr [edi + 0x48]; 
0x00077790: add byte ptr [ebx + 0x448d08ec], al; and al, 0x40; push eax; push dword ptr [esp + 0x18]; call dword ptr [edi + 0x48]; 
0x00070de8: add byte ptr [ebx + 0x448d08ec], al; and al, 8; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x00095619: add byte ptr [ebx + 0x44c90], cl; add byte ptr [ecx], bh; ret; 
0x00169a1f: add byte ptr [ebx + 0x45038045], cl; adc al, 0x39; ret 0x870f; 
0x00023f5b: add byte ptr [ebx + 0x45890cc4], al; fmul qword ptr [ebp - 0x2078df7d]; call dword ptr [eax - 0x73]; 
0x0016ab3a: add byte ptr [ebx + 0x458b0c7d], cl; adc byte ptr [ecx - 0xeb43], cl; dec dword ptr [ecx - 0xf34b]; dec dword ptr [ecx - 0xe77b]; jmp dword ptr [ebp - 0x5f]; 
0x0016139e: add byte ptr [ebx + 0x458b0cec], al; cmp al, 0x53; call dword ptr [eax + 0x10]; 
0x00083917: add byte ptr [ebx + 0x45a8b02], cl; mov ecx, dword ptr [edx + 8]; mov edx, dword ptr [edx + 0xc]; call dword ptr gs:[0x10]; 
0x000afd8f: add byte ptr [ebx + 0x470880e], cl; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000828c6: add byte ptr [ebx + 0x47401f8], al; ret; 
0x000353d8: add byte ptr [ebx + 0x478920c4], al; adc al, 0x89; ret; 
0x0005742c: add byte ptr [ebx + 0x48903e8], al; and al, 0xf6; ret 0xf20; 
0x00057557: add byte ptr [ebx + 0x48904e8], al; and al, 0xf6; ret 0xf20; 
0x0002fd22: add byte ptr [ebx + 0x48b2840], cl; nop; ret; 
0x0002fce2: add byte ptr [ebx + 0x48b3040], cl; nop; ret; 
0x0015fdc7: add byte ptr [ebx + 0x48d0cec], al; mov ch, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x12f63], cl; call dword ptr [eax - 0x18]; 
0x000c28ba: add byte ptr [ebx + 0x48db055], cl; test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x1a8b; 
0x000c2fbf: add byte ptr [ebx + 0x48db055], cl; test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x28b; 
0x000c2e72: add byte ptr [ebx + 0x48db055], cl; test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x3a8b; 
0x000c2c4e: add byte ptr [ebx + 0x48db055], cl; test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xa8b; 
0x000d375f: add byte ptr [ebx + 0x490f01ea], al; ret 0x708d; 
0x0019691f: add byte ptr [ebx + 0x4b720aea], al; lea eax, [edi + 9]; pop edi; ret; 
0x0019795f: add byte ptr [ebx + 0x4b720aef], al; lea eax, [eax + 9]; pop edi; ret; 
0x00196fef: add byte ptr [ebx + 0x4b7c0ac2], al; lea eax, [ecx + 0xa]; ret; 
0x0009ff8c: add byte ptr [ebx + 0x4bfac55], cl; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5589; 
0x001656f7: add byte ptr [ebx + 0x4c890442], cl; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x0016570f: add byte ptr [ebx + 0x4c890442], cl; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0015e4c9: add byte ptr [ebx + 0x4c8908c0], al; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x00160fc9: add byte ptr [ebx + 0x4c8938c0], al; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x00160599: add byte ptr [ebx + 0x4c894cc0], al; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x000a0206: add byte ptr [ebx + 0x4d89ac55], cl; aam 0x29; ret 0x1a8b; 
0x000a02df: add byte ptr [ebx + 0x4d89ac55], cl; aam 0x29; ret 0xb48d; 
0x000c9c6f: add byte ptr [ebx + 0x4f39344e], cl; xor al, 0x75; sub byte ptr [edi + 0x5e], bl; ret; 
0x00160198: add byte ptr [ebx + 0x50510450], cl; call dword ptr [edx + 8]; 
0x00066a34: add byte ptr [ebx + 0x505304ec], al; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x00161372: add byte ptr [ebx + 0x50532050], cl; call dword ptr [edx + 4]; 
0x0006a7b5: add byte ptr [ebx + 0x505504ec], al; push esi; mov eax, dword ptr [esp + 0x1c]; call dword ptr [eax + 0x1c]; 
0x0015db91: add byte ptr [ebx + 0x50562050], cl; call dword ptr [edx + 4]; 
0x0015dda4: add byte ptr [ebx + 0x50572050], cl; call dword ptr [edx + 8]; 
0x001588fb: add byte ptr [ebx + 0x508b08ec], al; and byte ptr [esi + 0x50], dl; call dword ptr [edx + 4]; 
0x00161a0d: add byte ptr [ebx + 0x50], dl; call dword ptr [edx + 8]; 
0x0010bdc3: add byte ptr [ebx + 0x518d0cc4], al; call dword ptr [edx + 0x53]; 
0x000778f0: add byte ptr [ebx + 0x51], dl; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x40]; 
0x0007cfc1: add byte ptr [ebx + 0x51], dl; push esi; call dword ptr [ebp + 0x40]; 
0x00165647: add byte ptr [ebx + 0x52530446], cl; push esi; call dword ptr [eax + 8]; 
0x00066b4f: add byte ptr [ebx + 0x525304ec], al; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x00094b77: add byte ptr [ebx + 0x528b0442], cl; or byte ptr [ecx], al; lds edi, ptr [ecx]; ret; 
0x00173177: add byte ptr [ebx + 0x538b1043], cl; or byte ptr [ecx + 0x39082444], cl; ret 0x9774; 
0x001589b7: add byte ptr [ebx + 0x54890045], cl; and al, 4; sub esp, 0xc; mov ecx, dword ptr [eax + 0x20]; push eax; call dword ptr [ecx + 0xc]; 
0x0003ad51: add byte ptr [ebx + 0x548b10c4], al; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x3ad66; add esp, 0x2c; ret; 
0x0003ae81: add byte ptr [ebx + 0x548b10c4], al; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x3ae96; add esp, 0x2c; ret; 
0x00088a54: add byte ptr [ebx + 0x548b684f], cl; and al, 0xc; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000e0e77: add byte ptr [ebx + 0x548d08ec], al; and al, 0x14; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x0007cea3: add byte ptr [ebx + 0x548d08ec], al; and al, 0x28; push edx; push esi; call dword ptr [eax + 0x48]; 
0x00105517: add byte ptr [ebx + 0x548d08ec], al; and al, 8; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x0007d77e: add byte ptr [ebx + 0x555004ec], al; push esi; call dword ptr [ebx + 0x38]; 
0x00068b40: add byte ptr [ebx + 0x555304ec], al; push edi; call dword ptr [eax + 0x1c]; 
0x0006bac7: add byte ptr [ebx + 0x565304ec], al; push dword ptr [ebp - 0x8a0]; call dword ptr [eax + 0x1c]; 
0x0006dd68: add byte ptr [ebx + 0x565304ec], al; push ebp; call dword ptr [edi + 0x1c]; 
0x00038de2: add byte ptr [ebx + 0x565504ec], al; push dword ptr [esp + 0x30]; call edi; 
0x0006ebc7: add byte ptr [ebx + 0x565704ec], al; push ebp; call dword ptr [ebx + 0x1c]; 
0x0007d6fe: add byte ptr [ebx + 0x568b0446], cl; or byte ptr [ecx], ch; ret 0xfa39; 
0x0012d9f4: add byte ptr [ebx + 0x57500cc4], al; push 0x2000006; call dword ptr [esi + 0x14]; 
0x0007395c: add byte ptr [ebx + 0x575304ec], al; push esi; call dword ptr [eax + 0x2c]; 
0x0009aedf: add byte ptr [ebx + 0x58e808ec], al; or byte ptr [eax + eax], 0xe8; ret; 
0x0013c3f1: add byte ptr [ebx + 0x597f01f8], al; add esp, 4; pop ebx; pop esi; ret; 
0x00097b77: add byte ptr [ebx + 0x598b1049], cl; add al, 0xf6; ret; 
0x000cf40f: add byte ptr [ebx + 0x5a8d0cec], al; add dword ptr [ecx - 0xff6b], ecx; call dword ptr [ebx - 0x18]; 
0x000b324a: add byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x0019690f: add byte ptr [ebx + 0x5b7209ea], al; lea eax, [edi + 8]; pop edi; ret; 
0x0019794f: add byte ptr [ebx + 0x5b7209ef], al; lea eax, [eax + 8]; pop edi; ret; 
0x00196fdf: add byte ptr [ebx + 0x5b7c09c2], al; lea eax, [ecx + 9]; ret; 
0x000723df: add byte ptr [ebx + 0x5d8b08ec], al; in al, 0x6a; call dword ptr [esi - 0x18]; 
0x000afdd7: add byte ptr [ebx + 0x5e082444], cl; ret; 
0x0011aaa7: add byte ptr [ebx + 0x5e5b04c4], al; pop edi; pop ebp; ret; 
0x0002277f: add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0009c7f9: add byte ptr [ebx + 0x5e5b08c4], al; pop edi; pop ebp; ret; 
0x000ff755: add byte ptr [ebx + 0x5e5b0cc4], 0x5f; pop ebp; ret; 
0x0003a5f9: add byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x00079c5b: add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x0007f46f: add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x00083425: add byte ptr [ebx + 0x5e5b1cc4], 0x5f; pop ebp; ret; 
0x0002c399: add byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x00093d93: add byte ptr [ebx + 0x5e5b20c4], al; pop edi; ret; 
0x0010ac93: add byte ptr [ebx + 0x5e5b24c4], al; ret; 
0x00021f74: add byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x00078ad5: add byte ptr [ebx + 0x5e5b30c4], al; pop edi; ret; 
0x00159189: add byte ptr [ebx + 0x5e5b34c4], al; ret; 
0x00024255: add byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret; 
0x000b6216: add byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x0003955a: add byte ptr [ebx + 0x5e5b4cc4], al; pop edi; pop ebp; ret; 
0x00044ba7: add byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; ret; 
0x00125ffc: add byte ptr [ebx + 0x5e5b60c4], al; pop edi; ret; 
0x000dda32: add byte ptr [ebx + 0x5e5b64c4], al; ret; 
0x00085f70: add byte ptr [ebx + 0x5e5b6cc4], al; pop edi; pop ebp; ret; 
0x0002b425: add byte ptr [ebx + 0x5e5b7cc4], al; pop edi; pop ebp; ret; 
0x0007cbb7: add byte ptr [ebx + 0x5e5b80ec], al; pop edi; ret; 
0x00086817: add byte ptr [ebx + 0x5e8b1845], cl; push 0x8b04488b; adc byte ptr [eax + 0xf1], bh; call dword ptr gs:[0x10]; 
0x0010c251: add byte ptr [ebx + 0x5e], bl; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x000c9d26: add byte ptr [ebx + 0x5e], bl; mov eax, ecx; ret; 
0x000885e4: add byte ptr [ebx + 0x5e], bl; mov eax, edi; pop edi; ret; 
0x0014e2d4: add byte ptr [ebx + 0x5e], bl; mov eax, edx; ret; 
0x0013136f: add byte ptr [ebx + 0x5e], bl; pop ebp; ret; 
0x0010bc36: add byte ptr [ebx + 0x5e], bl; pop edi; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x000283df: add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; jmp eax; 
0x0019977a: add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 4; 
0x0002266f: add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00038c02: add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00021477: add byte ptr [ebx + 0x5e], bl; ret; 
0x001979af: add byte ptr [ebx + 0x5f0c2444], cl; ret; 
0x000847ef: add byte ptr [ebx + 0x5f5e04c4], al; ret; 
0x00037b8d: add byte ptr [ebx + 0x5f], bl; ret; 
0x00105018: add byte ptr [ebx + 0x6508245c], cl; call dword ptr [0x10]; neg eax; pop ebx; ret; 
0x0009004b: add byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x90077; add esp, 0x2c; ret; 
0x000902d7: add byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x90307; add esp, 0x2c; ret; 
0x000a3edf: add byte ptr [ebx + 0x66028901], cl; mov eax, dword ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x00094574: add byte ptr [ebx + 0x67650f8], al; ret; 
0x00048515: add byte ptr [ebx + 0x688d04ec], al; call dword ptr [ebp + 0x53]; 
0x00080731: add byte ptr [ebx + 0x6a04ec], al; push 0; push ebx; call dword ptr [ebp + 0x2c]; 
0x0015aabc: add byte ptr [ebx + 0x6a08ec], al; push ebx; call dword ptr [eax + 0x14]; 
0x00070fc4: add byte ptr [ebx + 0x6a08ec], al; push esi; call dword ptr [ebx + 8]; 
0x00083d7b: add byte ptr [ebx + 0x6a0cec], al; call 0x83370; add esp, 0x1c; ret; 
0x001589dd: add byte ptr [ebx + 0x6a1043], cl; push esi; call dword ptr [eax + 0x14]; 
0x000d3b0e: add byte ptr [ebx + 0x6a5204ec], al; and byte ptr [ebp - 0x77], dl; fucomp st(0); ret; 
0x00073e0b: add byte ptr [ebx + 0x6a5720c4], al; call dword ptr [edi + 0x56]; 
0x001968ff: add byte ptr [ebx + 0x6b7207ea], al; lea eax, [edi + 6]; pop edi; ret; 
0x0019793f: add byte ptr [ebx + 0x6b7207ef], al; lea eax, [eax + 6]; pop edi; ret; 
0x00196fcf: add byte ptr [ebx + 0x6b7c07c2], al; lea eax, [ecx + 7]; ret; 
0x00094213: add byte ptr [ebx + 0x6c8b28ec], al; and al, 0x3c; lea ecx, [edi - 0x722c0]; call dword ptr gs:[0x10]; 
0x0009d487: add byte ptr [ebx + 0x708001c0], al; jmp ptr [edx]; cmp eax, edx; jne 0x9d488; mov eax, ecx; ret; 
0x001453e6: add byte ptr [ebx + 0x74223e3c], al; ret; 
0x0003929f: add byte ptr [ebx + 0x74ff04ec], al; and al, 0x10; push ebp; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0012ceaa: add byte ptr [ebx + 0x74ff04ec], al; and al, 0x18; push 0; push 0x2000004; call eax; 
0x0007c681: add byte ptr [ebx + 0x74ff04ec], al; and al, 0xc; push edi; push ebx; call dword ptr [esi + 0x3c]; 
0x00158911: add byte ptr [ebx + 0x74ff08ec], al; and al, 0x1c; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00161385: add byte ptr [ebx + 0x74ff08ec], al; and al, 0x2c; push ebx; mov eax, dword ptr [esp + 0x18]; call eax; 
0x00058867: add byte ptr [ebx + 0x74ff08ec], al; and al, 0x34; push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x30]; call eax; 
0x0015dba4: add byte ptr [ebx + 0x74ff08ec], al; and al, 0x3c; push esi; mov eax, dword ptr [esp + 0x40]; call eax; 
0x0016e53d: add byte ptr [ebx + 0x74ff0cec], al; and al, 0x24; mov esi, dword ptr [esp + 0x24]; call esi; 
0x0013c928: add byte ptr [ebx + 0x74ff10c4], al; and al, 4; push 0x400; push dword ptr [esp + 0x10]; push ebp; call edi; 
0x00172a1f: add byte ptr [ebx + 0x74ff14ec], al; and al, 0x1c; call 0x1722a0; add esp, 0x18; pop ebx; ret; 
0x0010511f: add byte ptr [ebx + 0x74ff14ec], al; and al, 0x1c; call 0x20140; add esp, 0x18; pop ebx; ret; 
0x00079d4f: add byte ptr [ebx + 0x74ff14ec], al; and al, 0x1c; call 0x70f00; add esp, 0x18; pop ebx; ret; 
0x00119aef: add byte ptr [ebx + 0x74ff14ec], al; and al, 0x20; call 0x20140; add esp, 0x18; pop ebx; ret; 
0x000888e8: add byte ptr [ebx + 0x7501a802], cl; add eax, 0x75fef883; sbb al, 0x83; rol dword ptr [ecx], 0x83; ret 0x8108; 
0x00089fbf: add byte ptr [ebx + 0x75c08503], cl; ret; 
0x00073a8f: add byte ptr [ebx + 0x75ff04ec], al; adc al, 0xff; jne 0x73aa5; push esi; call dword ptr [ebx + 0x2c]; 
0x0007333f: add byte ptr [ebx + 0x75ff04ec], al; in al, 0xff; jne 0x73351; push edx; call dword ptr [ebx + 0x1c]; 
0x00161335: add byte ptr [ebx + 0x75ff3c45], cl; push eax; mov ebx, dword ptr [esp + 0x3c]; push ebx; call dword ptr [eax + 0x14]; 
0x00196fbf: add byte ptr [ebx + 0x7b7c06c2], al; lea eax, [ecx + 6]; ret; 
0x00158a45: add byte ptr [ebx + 0x7c8d08ec], al; and al, 0x40; mov ecx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [ecx + 8]; 
0x00122ebf: add byte ptr [ebx + 0x84249c], cl; add byte ptr [eax], al; mov eax, 0x6c; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0008316a: add byte ptr [ebx + 0x87401f8], al; ret; 
0x00081ecf: add byte ptr [ebx + 0x8890843], cl; add esp, 4; pop ebx; pop esi; ret; 
0x0002fd1d: add byte ptr [ebx + 0x8b0104], cl; mov eax, dword ptr [eax + 0x28]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0002fcdd: add byte ptr [ebx + 0x8b0104], cl; mov eax, dword ptr [eax + 0x30]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0010958d: add byte ptr [ebx + 0x90249c], cl; add byte ptr [eax], al; lea edx, [esp + 0x18]; mov eax, 0x10d; call dword ptr gs:[0x10]; 
0x00087d89: add byte ptr [ebx + 0x97510e0], al; add esp, 0xc; ret; 
0x00109ad6: add byte ptr [ebx + 0x982494], cl; add byte ptr [eax], al; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x001230fa: add byte ptr [ebx + 0xa024b4], cl; add byte ptr [eax], al; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x0010a64e: add byte ptr [ebx + 0xa4248c], cl; add byte ptr [eax], al; mov edx, dword ptr [esp + 0xa8]; mov esi, dword ptr [esp + 0xac]; call dword ptr gs:[0x10]; 
0x00084720: add byte ptr [ebx + 0xa7602fa], al; ret; 
0x0010a7b7: add byte ptr [ebx + 0xa82494], cl; add byte ptr [eax], al; mov eax, 0x133; call dword ptr gs:[0x10]; 
0x0010a655: add byte ptr [ebx + 0xa82494], cl; add byte ptr [eax], al; mov esi, dword ptr [esp + 0xac]; call dword ptr gs:[0x10]; 
0x0010a65c: add byte ptr [ebx + 0xac24b4], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0019695f: add byte ptr [ebx + 0xb720fea], al; lea eax, [edi + 0xe]; pop edi; ret; 
0x0019799f: add byte ptr [ebx + 0xb720fef], al; lea eax, [eax + 0xe]; pop edi; ret; 
0x0008bcbf: add byte ptr [ebx + 0xb7401fa], al; mov eax, 0x16; ret; 
0x0019702f: add byte ptr [ebx + 0xb7c0fc2], al; lea eax, [ecx + 0xf]; ret; 
0x00072ddf: add byte ptr [ebx + 0xb7f01f8], al; ret; 
0x00125a4c: add byte ptr [ebx + 0xb], bh; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x0012770d: add byte ptr [ebx + 0xb], dh; mov edx, dword ptr [ecx + 0x4628]; add word ptr [edx + eax*2], 1; ret; 
0x000de8fe: add byte ptr [ebx + 0xc0249c], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00122731: add byte ptr [ebx + 0xc0249c], cl; add byte ptr [eax], al; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0016c183: add byte ptr [ebx + 0xc48b3], cl; add byte ptr [ebx - 0x4472f714], al; pop es; stc; call dword ptr [edi + 0x56]; 
0x000d708f: add byte ptr [ebx + 0xc75daf8], al; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x00104fcc: add byte ptr [ebx + 0xc7702fa], al; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x00161f07: add byte ptr [ebx + 0xcec8303], cl; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x00059346: add byte ptr [ebx + 0xd182444], cl; add byte ptr [eax], 0x41; add byte ptr [eax - 0x73], dl; cmp byte ptr [edi + 0x31], 0xf9; call dword ptr [eax - 0x18]; 
0x00124f40: add byte ptr [ebx + 0xe], bh; call dword ptr gs:[0x10]; 
0x000f75a9: add byte ptr [ebx + 0xf00903c], al; test dword ptr [eax - 0x7c000005], ecx; ret 0x8301; 
0x001537ec: add byte ptr [ebx + 0xf0b023c], al; xchg ebp, eax; ret 0xc483; 
0x0005538f: add byte ptr [ebx + 0xf10247c], cl; mov dh, 0x5f; or al, 0xf6; ret; 
0x0018f5c0: add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0014459b: add byte ptr [ebx + 0xf6f383c], al; xchg esp, eax; ret 0xdaf7; 
0x000dfcac: add byte ptr [ebx + 0xf], bl; inc esp; ret 0x8dc3; 
0x000dfce9: add byte ptr [ebx + 0xf], bl; inc esp; ret 0x90c3; 
0x000dfcc7: add byte ptr [ebx + 0xf], bl; inc esp; ret 0xb8c3; 
0x001732f7: add byte ptr [ebx + 0xf], bl; mov dh, 2; pop esi; pop edi; ret; 
0x0002f986: add byte ptr [ebx + 0xfe910c4], al; or edi, edi; call dword ptr [eax - 0x73]; 
0x0007b349: add byte ptr [ebx + 2], bh; mov edx, dword ptr [ebp - 0x34]; lea esi, [esi]; mov eax, edi; call dword ptr gs:[0x10]; 
0x000872de: add byte ptr [ebx + 2], bh; mov esi, 8; call dword ptr gs:[0x10]; 
0x00088a0f: add byte ptr [ebx + 2], bh; xor edx, edx; mov ecx, dword ptr [esp + 8]; mov esi, 8; call dword ptr gs:[0x10]; 
0x001046f2: add byte ptr [ebx + 2], bh; xor edx, edx; mov ecx, ebp; mov esi, 8; call dword ptr gs:[0x10]; 
0x0017a3bd: add byte ptr [ebx + 3], bh; call dword ptr gs:[0x10]; 
0x000b8a1a: add byte ptr [ebx + ecx*2 - 0x7d], dh; ret; 
0x00143aa5: add byte ptr [ebx - 0x1137a], cl; jmp dword ptr [ebp - 0x75]; 
0x00133dfd: add byte ptr [ebx - 0x11380], cl; jmp dword ptr [ebp + 3]; 
0x00133dfd: add byte ptr [ebx - 0x11380], cl; jmp dword ptr [ebp + 3]; add eax, 0; ret; 
0x0015fdd1: add byte ptr [ebx - 0x12f63], cl; call dword ptr [eax - 0x18]; 
0x00135c7d: add byte ptr [ebx - 0x13341], cl; jmp dword ptr [ebp - 0x5f]; 
0x0016a44f: add byte ptr [ebx - 0x13341], cl; jmp dword ptr [ebp - 0x75]; 
0x00110277: add byte ptr [ebx - 0x13342], cl; jmp dword ptr [ebp - 0x5f]; 
0x000d947d: add byte ptr [ebx - 0x13345], cl; jmp dword ptr [ebp - 0x75]; 
0x00037a97: add byte ptr [ebx - 0x13348], cl; jmp dword ptr [ebp - 0x75]; 
0x001343ad: add byte ptr [ebx - 0x1334a], cl; jmp dword ptr [ebp - 0x5f]; 
0x0012a1d8: add byte ptr [ebx - 0x1334a], cl; jmp dword ptr [ebp - 0x75]; 
0x0010bd27: add byte ptr [ebx - 0x13350], cl; jmp dword ptr [ebp - 0x5f]; 
0x0014b48f: add byte ptr [ebx - 0x13351], cl; jmp dword ptr [ebp - 0x5f]; 
0x0014867d: add byte ptr [ebx - 0x13351], cl; jmp dword ptr [ebp - 0x75]; 
0x001326a7: add byte ptr [ebx - 0x13353], cl; jmp dword ptr [ebp - 0x75]; 
0x0011635e: add byte ptr [ebx - 0x13358], cl; jmp dword ptr [ebp - 0x5f]; 
0x001332cf: add byte ptr [ebx - 0x13365], cl; jmp dword ptr [ebp - 0x75]; 
0x00058a8f: add byte ptr [ebx - 0x13369], cl; jmp dword ptr [ebp - 0x75]; 
0x000d8f3f: add byte ptr [ebx - 0x1336a], cl; jmp dword ptr [ebp - 0x75]; 
0x0010a447: add byte ptr [ebx - 0x1336b], cl; jmp dword ptr [ebp - 0x75]; 
0x0013b7a1: add byte ptr [ebx - 0x1336d], cl; inc dword ptr [ebx + 0xf02113c]; test byte ptr [edi*8 - 0x137c0001], cl; or byte ptr [ebp - 0x6a8876d], cl; dec dword ptr [ecx - 0x48b7b]; call dword ptr [edi + 0x52]; 
0x00039665: add byte ptr [ebx - 0x1336d], cl; jmp dword ptr [ebp - 0x5f]; 
0x0010bcef: add byte ptr [ebx - 0x1336d], cl; jmp dword ptr [ebp - 0x75]; 
0x000db547: add byte ptr [ebx - 0x1336e], cl; jmp dword ptr [ebp - 0x5f]; 
0x00037a5f: add byte ptr [ebx - 0x13372], cl; jmp dword ptr [ebp - 0x75]; 
0x0010e8e7: add byte ptr [ebx - 0x13375], cl; jmp dword ptr [ebp - 0x5f]; 
0x000ddd5f: add byte ptr [ebx - 0x13375], cl; jmp dword ptr [ebp - 0x75]; 
0x0008ea07: add byte ptr [ebx - 0x13379], cl; jmp dword ptr [ebp - 0x75]; 
0x0003773f: add byte ptr [ebx - 0x1337a], cl; jmp dword ptr [ebp - 0x75]; 
0x000cee87: add byte ptr [ebx - 0x1337b], cl; jmp dword ptr [ebp - 0x75]; 
0x00152e38: add byte ptr [ebx - 0x1337b], cl; push dword ptr [ecx]; fild dword ptr [ebx + 0xf0b023c]; xchg ebp, eax; ret; 
0x0013c4bc: add byte ptr [ebx - 0x1337d], cl; jmp dword ptr [ebp + 3]; 
0x0002dae7: add byte ptr [ebx - 0x1337d], cl; jmp dword ptr [ebp - 0x75]; 
0x0010f7ed: add byte ptr [ebx - 0x1337d], cl; jmp dword ptr [esi - 0x7d]; 
0x000d74bf: add byte ptr [ebx - 0x1337e], cl; jmp dword ptr [ebp - 0x75]; 
0x000376df: add byte ptr [ebx - 0x1337f], cl; jmp dword ptr [ebp - 0x75]; 
0x00153eea: add byte ptr [ebx - 0x13380], cl; inc dword ptr [ebx + 0xf0b023c]; xchg ebp, eax; ret 0xc483; 
0x00038274: add byte ptr [ebx - 0x13380], cl; inc edi; add al, 2; add byte ptr es:[eax], al; add byte ptr [eax - 1], bh; ret; 
0x00021ded: add byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp + 3]; 
0x00021ded: add byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp + 3]; add eax, 0; ret; 
0x0003823f: add byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x75]; 
0x0010eff8: add byte ptr [ebx - 0x13380], cl; jmp dword ptr [esi - 0x77]; 
0x0007ab99: add byte ptr [ebx - 0x137c3bbb], cl; or al, 0x56; call dword ptr [eax + 0x30]; 
0x000673ad: add byte ptr [ebx - 0x137c4fec], cl; add al, 0x89; lea edx, [edi + esi*8 - 1]; call dword ptr [ebx + 0x57]; 
0x000fa47a: add byte ptr [ebx - 0x137c538b], cl; add al, 0x6a; add eax, 0x9bc4868d; stc; call dword ptr [eax - 0x73]; 
0x00160db4: add byte ptr [ebx - 0x137cafb9], cl; or al, 0x55; call dword ptr [eax + 0x10]; 
0x0006c05d: add byte ptr [ebx - 0x137ccfec], cl; add al, 0x51; push edi; push dword ptr [ebp - 0x8a0]; call edx; 
0x0007e867: add byte ptr [ebx - 0x137cdfaa], cl; add al, 0x29; ret 0x5052; 
0x000302ba: add byte ptr [ebx - 0x137cef3c], al; or byte ptr [ebp - 0x68cab7b], cl; dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x0007860a: add byte ptr [ebx - 0x137cf3c0], cl; add al, 0x29; ret 0xfac1; 
0x001588f8: add byte ptr [ebx - 0x137cffbb], cl; or byte ptr [ebx + 0x50562050], cl; call dword ptr [edx + 4]; 
0x0012d290: add byte ptr [ebx - 0x13b77], cl; dec dword ptr [ebx + 0x44f60b0c]; push ecx; add dword ptr [eax + 0xf], eax; inc ebp; ret 0xc35b; 
0x00156e13: add byte ptr [ebx - 0x13b7d], cl; jmp dword ptr [ebp - 0x75]; 
0x0002fc94: add byte ptr [ebx - 0x13b80], cl; dec dword ptr [ebx + 0x548b0204]; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x0002fc64: add byte ptr [ebx - 0x13b80], cl; dec dword ptr [ebx + 0x548b0204]; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x0002fc34: add byte ptr [ebx - 0x13b80], cl; dec dword ptr [ebx + 0x548b0204]; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x0002fb74: add byte ptr [ebx - 0x13b80], cl; dec dword ptr [ebx + 0x548b0204]; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x0002fbd4: add byte ptr [ebx - 0x13b80], cl; dec dword ptr [ebx + 0x548b0204]; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x0002fae4: add byte ptr [ebx - 0x13b80], cl; dec dword ptr [ebx + 0x548b0204]; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x0002fba4: add byte ptr [ebx - 0x13b80], cl; dec dword ptr [ebx + 0x548b0204]; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x0002fb44: add byte ptr [ebx - 0x13b80], cl; dec dword ptr [ebx + 0x548b0204]; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x0002fd44: add byte ptr [ebx - 0x13b80], cl; dec dword ptr [ebx + 0x548b0204]; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x0002fb14: add byte ptr [ebx - 0x13b80], cl; dec dword ptr [ebx + 0x548b0204]; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x0002fc04: add byte ptr [ebx - 0x13b80], cl; dec dword ptr [ebx + 0x548b0204]; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x0002fab4: add byte ptr [ebx - 0x13b80], cl; dec dword ptr [ebx + 0x548b0204]; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x0002fffd: add byte ptr [ebx - 0x13b80], cl; jmp dword ptr [ebp + 3]; 
0x0002fffd: add byte ptr [ebx - 0x13b80], cl; jmp dword ptr [ebp + 3]; add eax, 0; ret; 
0x001048c8: add byte ptr [ebx - 0x13f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x00138dec: add byte ptr [ebx - 0x14376], cl; jmp dword ptr [ebp - 0x75]; 
0x0003003d: add byte ptr [ebx - 0x14380], cl; jmp dword ptr [ebp + 3]; 
0x0003003d: add byte ptr [ebx - 0x14380], cl; jmp dword ptr [ebp + 3]; add eax, 0; ret; 
0x000dfb8f: add byte ptr [ebx - 0x15537b], cl; inc dword ptr [ebx - 0x72acf714]; xor al, 0x46; stc; call dword ptr [eax - 0x18]; 
0x00095dc1: add byte ptr [ebx - 0x15f73], cl; jmp dword ptr [ebp - 0x5f]; 
0x00098822: add byte ptr [ebx - 0x1637e], cl; call dword ptr [esi + 0x53]; 
0x000f9224: add byte ptr [ebx - 0x17a8f314], al; ret 0xfdf5; 
0x0013c9db: add byte ptr [ebx - 0x17a9f314], al; cmp esp, dword ptr [ebx]; add eax, dword ptr [eax]; mov dword ptr [esp], ebp; call esi; 
0x000643d4: add byte ptr [ebx - 0x17acf314], al; ret 0xc44; 
0x000e2f53: add byte ptr [ebx - 0x17acf314], al; ret; 
0x0004a9b1: add byte ptr [ebx - 0x17adf314], al; lds ecx, ptr [eax - 0x3b7cfffd]; adc byte ptr [ebx - 0x14f3dbbc], cl; ret 0x748d; 
0x000dc4f3: add byte ptr [ebx - 0x17aff314], al; ret; 
0x0009a0a8: add byte ptr [ebx - 0x17c0f20], al; or ecx, dword ptr [edi]; inc esi; ret 0xfa89; 
0x0016d439: add byte ptr [ebx - 0x18], dl; mov ecx, 0x81000049; ret; 
0x001484c6: add byte ptr [ebx - 0x18], dl; ret; 
0x000e15c3: add byte ptr [ebx - 0x18f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x00105c53: add byte ptr [ebx - 0x19f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000b5920: add byte ptr [ebx - 0x1c877d74], cl; clc; inc dword ptr [ecx]; sar dword ptr [esi], 1; jmp ecx; 
0x0002eac5: add byte ptr [ebx - 0x1cf6b], cl; dec dword ptr [ebp - 0x68e0b7e]; call dword ptr [eax - 0x73]; 
0x0002e7bf: add byte ptr [ebx - 0x1e773], cl; jmp dword ptr [ebx]; 
0x000eac32: add byte ptr [ebx - 0x1e7efe1e], al; add byte ptr [eax], 0; add byte ptr [edi], cl; inc ebp; ret 0x5e5b; 
0x000c31d4: add byte ptr [ebx - 0x1f3e4fab], cl; add ch, byte ptr [ecx]; ret 0x28b; 
0x000220f3: add byte ptr [ebx - 0x2708ef3c], al; sbb eax, eax; add esp, 0xc; ret; 
0x00109ac0: add byte ptr [ebx - 0x27767f14], al; pop ebx; pop esi; pop edi; ret; 
0x0011c248: add byte ptr [ebx - 0x27768f3c], al; pop ebx; pop esi; pop edi; ret; 
0x0011c873: add byte ptr [ebx - 0x2776d73c], al; pop ebx; ret; 
0x00116d90: add byte ptr [ebx - 0x2776e73c], al; pop ebx; ret; 
0x0008da3c: add byte ptr [ebx - 0x2776f73c], al; pop ebx; ret; 
0x000a1b62: add byte ptr [ebx - 0x2776fb3c], al; pop ebx; pop esi; ret; 
0x0004c6f6: add byte ptr [ebx - 0x27fefb3c], al; jmp eax; 
0x00083be7: add byte ptr [ebx - 0x2d7aefa9], cl; je 0x83c30; xor esi, esi; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00104977: add byte ptr [ebx - 0x2dcefba5], cl; mov eax, 0x1b4; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x0010c852: add byte ptr [ebx - 0x2dcefe40], 0x3b; inc ebp; or byte ptr [edi], cl; inc esp; ret 0x4589; 
0x0008e4f9: add byte ptr [ebx - 0x2ef7dbac], cl; call 0xc039e78d; ret; 
0x001658ee: add byte ptr [ebx - 0x2f76eb3c], al; pop ebx; pop esi; ret; 
0x00140fd2: add byte ptr [ebx - 0x2f76ef3c], al; pop ebx; pop esi; pop edi; ret; 
0x0011aecd: add byte ptr [ebx - 0x2f76f73c], al; pop ebx; ret; 
0x0015219b: add byte ptr [ebx - 0x2f76fb3c], al; pop ebx; pop edi; ret; 
0x0004feea: add byte ptr [ebx - 0x361f7b], cl; dec dword ptr [ebx - 0x361b6b]; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000c6c4b: add byte ptr [ebx - 0x361f7b], cl; inc dword ptr [ebx - 0x363743]; call dword ptr [eax]; 
0x0005039f: add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x0004fd57: add byte ptr [ebx - 0x36277b], al; call dword ptr [eax]; 
0x000c84d4: add byte ptr [ebx - 0x36277b], cl; inc dword ptr [ebp + 0x28e0fc0]; add al, 0; add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x0005088b: add byte ptr [ebx - 0x36277b], cl; inc dword ptr [ebp - 0x6771f040]; add al, 0; add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x0004e102: add byte ptr [ebx - 0x362f43], al; call dword ptr [eax]; 
0x0004ec0a: add byte ptr [ebx - 0x362f4b], cl; call dword ptr [edi - 1]; 
0x000c671a: add byte ptr [ebx - 0x362f63], cl; dec dword ptr [ebx - 0x36374b]; call dword ptr [edi - 1]; 
0x000c6890: add byte ptr [ebx - 0x363743], al; call dword ptr [eax]; 
0x0004e1ea: add byte ptr [ebx - 0x36377b], cl; inc dword ptr [ebx - 0x362f43]; call dword ptr [eax]; 
0x000c8029: add byte ptr [ebx - 0x36477b], al; jmp eax; 
0x000c78e7: add byte ptr [ebx - 0x364b63], cl; call dword ptr [edi - 0x18]; 
0x000c8567: add byte ptr [ebx - 0x364b63], cl; call dword ptr [esi - 1]; 
0x000c6e67: add byte ptr [ebx - 0x364b63], cl; dec dword ptr [ebx - 0x368b43]; jmp dword ptr [ebp - 0x75]; 
0x000c6686: add byte ptr [ebx - 0x364b63], cl; dec dword ptr [ecx - 0x361f73]; call dword ptr [eax + 0x6a]; 
0x000c8d1a: add byte ptr [ebx - 0x364b73], cl; dec dword ptr [ebp - 0x667377f]; call dword ptr [eax - 0x73]; 
0x000c6aab: add byte ptr [ebx - 0x364b7b], cl; call dword ptr [edi + 0x6a]; 
0x00050379: add byte ptr [ebx - 0x364f7b], al; jmp eax; 
0x0004f257: add byte ptr [ebx - 0x365343], cl; dec dword ptr [ebp - 0x35f79]; call dword ptr [eax - 0x73]; 
0x000511c0: add byte ptr [ebx - 0x365343], cl; dec dword ptr [ebp - 0x6894f79]; call dword ptr [eax - 0x73]; 
0x0004fe99: add byte ptr [ebx - 0x365363], cl; call dword ptr [esi - 0x18]; 
0x0004f189: add byte ptr [ebx - 0x365363], cl; dec dword ptr [ebx - 0x368b73]; jmp dword ptr [ebp - 0x75]; 
0x0004eb66: add byte ptr [ebx - 0x365363], cl; dec dword ptr [ecx - 0x361f73]; call dword ptr [eax + 0x6a]; 
0x0012228d: add byte ptr [ebx - 0x3776bf3c], al; pop ebx; pop esi; pop edi; ret; 
0x00129377: add byte ptr [ebx - 0x397cf314], al; add dword ptr [ebp - 0x18], edx; in al, dx; ret 0xfff8; 
0x000392e2: add byte ptr [ebx - 0x3a7cfe11], al; add al, 0x89; add ecx, dword ptr [ebx - 0x7cfbdbbc]; ret; 
0x0012f509: add byte ptr [ebx - 0x3b7c4bab], cl; or al, 0x50; push esi; push edx; call dword ptr [ebx + 0x14]; 
0x000eab4f: add byte ptr [ebx - 0x3b7cc3ba], cl; add al, 0x5b; pop esi; ret; 
0x0003acce: add byte ptr [ebx - 0x3b7ccbc0], cl; add al, 0x5b; pop esi; ret; 
0x000b6492: add byte ptr [ebx - 0x3b7ceb89], cl; adc cl, ch; imul edi, edi, -1; jmp dword ptr [esi - 0x70]; 
0x00022825: add byte ptr [ebx - 0x3b7cef3c], al; add al, 0x5b; pop esi; ret; 
0x0015ab57: add byte ptr [ebx - 0x3b7cef3c], al; add al, 0x89; fcomp dword ptr [ebx + 0x5e]; ret; 
0x0016325f: add byte ptr [ebx - 0x3b7d], cl; call ptr [ebx + 0x5e]; pop edi; ret; 
0x00087663: add byte ptr [ebx - 0x3c76df20], al; jne 0x87228; lea ecx, [ebp + 0x22c]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x0008534f: add byte ptr [ebx - 0x3e2f76ed], cl; call 0x893fc75d; clc; call dword ptr gs:[0x10]; 
0x00162e2b: add byte ptr [ebx - 0x3e7cf714], al; add al, 0x8b; inc edi; add al, 0x51; push edi; call dword ptr [eax + 8]; 
0x00052cbf: add byte ptr [ebx - 0x3e7cfbaf], cl; add al, 0x83; ret; 
0x0006e9ab: add byte ptr [ebx - 0x3eb3dbbc], cl; clc; add ch, byte ptr [ecx]; ret; 
0x000d94d7: add byte ptr [ebx - 0x3f7a33bb], cl; je 0xd9500; sub esp, 0xc; push esi; call eax; 
0x0007ff06: add byte ptr [ebx - 0x3f7acbc0], cl; jne 0x7ff00; ret; 
0x0013bfbf: add byte ptr [ebx - 0x3f7aef3c], al; je 0x13bfd0; sub esp, 0xc; push esi; call eax; 
0x0013c32f: add byte ptr [ebx - 0x3f7aef3c], al; je 0x13c340; sub esp, 0xc; push esi; call eax; 
0x00119b9b: add byte ptr [ebx - 0x3f7aef3c], al; jne 0x119b5c; add esp, 0xc; ret; 
0x00037684: add byte ptr [ebx - 0x3f7aef3c], al; jne 0x37698; add esp, 8; pop ebx; ret; 
0x00037913: add byte ptr [ebx - 0x3f7aef3c], al; jne 0x37920; add esp, 8; pop ebx; ret; 
0x000314e1: add byte ptr [ebx - 0x3f7cef3c], al; sbb al, 0x89; loope 0x31474; ret; 
0x0003a19e: add byte ptr [ebx - 0x3fceef3c], al; add esp, 4; pop ebx; pop esi; ret; 
0x00087e99: add byte ptr [ebx - 0x3fceef3c], al; pop ebx; pop esi; pop edi; ret; 
0x00058257: add byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x00099403: add byte ptr [ebx - 0x3fcefb3c], al; pop ebx; pop esi; ret; 
0x00058988: add byte ptr [ebx - 0x3fe6fe08], al; add esp, 0x1c; ret; 
0x000a1d5f: add byte ptr [ebx - 0x41f0fe40], al; adc al, 1; cmp edx, ebx; je 0xa1d60; pop ebx; ret; 
0x0005bec8: add byte ptr [ebx - 0x4216ef3c], al; fcos; call dword ptr [edx - 0x73]; 
0x00104c51: add byte ptr [ebx - 0x4274f8fc], cl; mov eax, 0x85fffffe; ror byte ptr [edi], 0x44; ret 0xec83; 
0x0014452f: add byte ptr [ebx - 0x43763], cl; jmp dword ptr [ebp - 0x75]; 
0x0016c7d6: add byte ptr [ebx - 0x4472f714], al; pop es; stc; call dword ptr [edi + 0x55]; 
0x0016c189: add byte ptr [ebx - 0x4472f714], al; pop es; stc; call dword ptr [edi + 0x56]; 
0x0005b996: add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xd801; 
0x0005e363: add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xf001; 
0x0002170d: add byte ptr [ebx - 0x4497ef14], al; add dword ptr [eax], eax; add byte ptr [ebp - 0x6995f80], cl; call dword ptr [eax + 0x6a]; 
0x0014502f: add byte ptr [ebx - 0x44f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000e249b: add byte ptr [ebx - 0x46b73], cl; jmp dword ptr [esi - 0x77]; 
0x00037a04: add byte ptr [ebx - 0x46dfdba4], cl; or byte ptr [eax], al; add byte ptr [eax], al; mov edx, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x000e27ae: add byte ptr [ebx - 0x46f63], cl; call dword ptr [esi + 0x52]; 
0x000e2575: add byte ptr [ebx - 0x46f63], cl; call dword ptr [esi - 1]; 
0x00037984: add byte ptr [ebx - 0x46f7dba4], cl; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e4e46: add byte ptr [ebx - 0x47363], cl; call dword ptr [esi + 0x52]; 
0x000e4c15: add byte ptr [ebx - 0x47363], cl; call dword ptr [esi - 1]; 
0x000e4da7: add byte ptr [ebx - 0x4737b], cl; inc dword ptr [ebx - 0x7f72f314]; int1; inc edi; stc; call dword ptr [eax - 0x18]; 
0x001631cf: add byte ptr [ebx - 0x477d], cl; call ptr [ebx + 0x5e]; pop edi; ret; 
0x001117dd: add byte ptr [ebx - 0x47abdbb4], cl; sahf; add dword ptr [eax], eax; add byte ptr [edi + 8], bh; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00111859: add byte ptr [ebx - 0x47abdbb4], cl; xor eax, 0xbf000001; or byte ptr [eax], al; add byte ptr [eax], al; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0010a8c3: add byte ptr [ebx - 0x47afdba4], cl; fld qword ptr [eax]; add byte ptr [eax], al; mov ecx, esi; mov edx, edi; call dword ptr gs:[0x10]; 
0x000e01fe: add byte ptr [ebx - 0x47fbdbb4], cl; add dword ptr [eax], eax; add byte ptr [eax], al; test ecx, ecx; js 0xe0210; ret; 
0x0010f6cb: add byte ptr [ebx - 0x47fee383], al; push es; add byte ptr [eax], al; add byte ptr [ecx - 0x277c9912], cl; jmp dword ptr [esi - 0x77]; 
0x001956cf: add byte ptr [ebx - 0x48], bl; add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x1956da; neg eax; ret; 
0x00193fff: add byte ptr [ebx - 0x48], bl; add dword ptr [eax], eax; add byte ptr [eax], al; jg 0x194010; neg eax; ret; 
0x0019812f: add byte ptr [ebx - 0x48], bl; add dword ptr [eax], eax; add byte ptr [eax], al; jg 0x198140; neg eax; ret; 
0x00083dea: add byte ptr [ebx - 0x48], bl; or al, 0; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x00058a0e: add byte ptr [ebx - 0x48], dl; add byte ptr es:[eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x0010a47e: add byte ptr [ebx - 0x48], dl; and dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0010b01e: add byte ptr [ebx - 0x48], dl; dec ebx; add dword ptr [eax], eax; add byte ptr [ebx + 0x3108245c], cl; leave; call dword ptr gs:[0x10]; 
0x0012302e: add byte ptr [ebx - 0x48], dl; lds eax, ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012307e: add byte ptr [ebx - 0x48], dl; les eax, ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0003797e: add byte ptr [ebx - 0x48], dl; mov al, 0; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; mov ecx, 8; call dword ptr gs:[0x10]; 
0x001168fe: add byte ptr [ebx - 0x48], dl; mov edi, 0x8b000000; dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00122fde: add byte ptr [ebx - 0x48], dl; ret; 
0x001170ee: add byte ptr [ebx - 0x48], dl; sub eax, 0x8b000000; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x0012134e: add byte ptr [ebx - 0x48], dl; xor al, 0; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0007b34e: add byte ptr [ebx - 0x497233ab], cl; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edi; call dword ptr gs:[0x10]; 
0x00149b63: add byte ptr [ebx - 0x49f047a3], cl; rol dword ptr [ebx], 1; pushfd; xchg ebx, eax; mov al, byte ptr [0x3efff90d]; jmp ebx; 
0x0005363d: add byte ptr [ebx - 0x49f07fbb], cl; push eax; or al, 0x89; sal esi, 1; ret 0xf40; 
0x0007b227: add byte ptr [ebx - 0x49f0ef3c], al; adc byte ptr [edx + edx*8 - 0x57ff48c], al; and eax, 0x7880e175; add dword ptr [ebx + 0x75], esi; fild dword ptr [eax - 0x76da2b83]; ret 0x5374; 
0x0017972f: add byte ptr [ebx - 0x4a00f314], al; push 0x89fffffb; test dword ptr [ebx + edi*8 - 0x53170001], edx; ret 0xfff6; 
0x0006c388: add byte ptr [ebx - 0x4a00fb14], al; push esp; idiv edi; call dword ptr [esi - 1]; 
0x0002eafd: add byte ptr [ebx - 0x4d16ef3c], al; idiv edi; jmp dword ptr [esi - 0x70]; 
0x00061c07: add byte ptr [ebx - 0x4eb63], cl; push esi; ret; 
0x000601c9: add byte ptr [ebx - 0x4f373], cl; jmp dword ptr [ebp - 0x75]; 
0x0006156f: add byte ptr [ebx - 0x4f37b], cl; dec dword ptr [ebx - 0x13380]; dec dword ptr [ecx - 0x4f77b]; jmp dword ptr [ebp - 0x5f]; 
0x000606df: add byte ptr [ebx - 0x4f37b], cl; jmp dword ptr [ebp - 0x75]; 
0x00126f0b: add byte ptr [ebx - 0x4f763], cl; dec dword ptr [ebx - 0x4fb73]; jmp dword ptr [ebp - 1]; 
0x000645f2: add byte ptr [ebx - 0x50f63], cl; call ecx; 
0x000625cd: add byte ptr [ebx - 0x50f7b], cl; call ecx; 
0x0006080d: add byte ptr [ebx - 0x5177b], cl; dec dword ptr [ecx - 0x4cf7b]; dec dword ptr [ebx - 0x5037b]; jmp dword ptr [ebp - 0x75]; 
0x00172980: add byte ptr [ebx - 0x5397ef14], al; add byte ptr [eax], al; add al, ch; ret 0xead7; 
0x0004652f: add byte ptr [ebx - 0x57ccf16], al; or dword ptr [edi], ecx; xchg edi, eax; ret 0xd284; 
0x0013c71c: add byte ptr [ebx - 0x57cdf3c], al; add dword ptr [edi + 0x23], edi; add esp, 0x18; pop ebx; ret; 
0x0016bb67: add byte ptr [ebx - 0x57cef3c], al; add dword ptr [edi + 0x20], edi; add esp, 0x18; pop ebx; ret; 
0x00087f4e: add byte ptr [ebx - 0x57cef3c], al; add dword ptr [edi + 0x21], edi; add esp, 0x18; pop ebx; ret; 
0x0016badb: add byte ptr [ebx - 0x57cef3c], al; add dword ptr [edi + 0x24], edi; add esp, 0x18; pop ebx; ret; 
0x0005d0cf: add byte ptr [ebx - 0x59b7b], cl; dec dword ptr [ebx - 0x13348]; jmp dword ptr [ebp - 0x5f]; 
0x0005a977: add byte ptr [ebx - 0x59b7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000e9bb0: add byte ptr [ebx - 0x5cf0afab], cl; ret 0x830f; 
0x000828bd: add byte ptr [ebx - 0x5d9adbc0], cl; inc byte ptr [eax + eax]; add byte ptr [ebx + 0x47401f8], al; ret; 
0x00083161: add byte ptr [ebx - 0x5d9af7c0], cl; inc byte ptr [eax + eax]; add byte ptr [ebx + 0x87401f8], al; ret; 
0x0005bb7a: add byte ptr [ebx - 0x5db73], cl; call ecx; 
0x0008cb91: add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x6174; 
0x0008bfab: add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x0005d15c: add byte ptr [ebx - 0x5ef63], cl; dec dword ptr [ebx - 0x5db73]; inc dword ptr [ecx]; ret; 
0x00058567: add byte ptr [ebx - 0x6072f714], al; jg 0x585a0; stc; call dword ptr [ecx + 0x53]; 
0x001630a7: add byte ptr [ebx - 0x637d], cl; call ptr [ebx + 0x5e]; pop edi; ret; 
0x00115be3: add byte ptr [ebx - 0x64], bh; call dword ptr gs:[0x10]; 
0x00109c34: add byte ptr [ebx - 0x64], bh; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00109d88: add byte ptr [ebx - 0x64], bh; mov edx, edi; call dword ptr gs:[0x10]; 
0x000b6799: add byte ptr [ebx - 0x677b], cl; jmp dword ptr [ebp - 0x75]; 
0x0018cbbf: add byte ptr [ebx - 0x677d], cl; jmp dword ptr [ebp - 0x75]; 
0x0002f7a4: add byte ptr [ebx - 0x6780], cl; dec dword ptr [ebx + 0x548b0204]; and al, 4; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0002ed84: add byte ptr [ebx - 0x6780], cl; dec dword ptr [ebx + 0x8b0204]; mov eax, dword ptr [eax + 0x58]; ret; 
0x0010e9c5: add byte ptr [ebx - 0x67cd7bb], cl; add ecx, dword ptr [edi]; xchg esp, eax; ret; 
0x0016d064: add byte ptr [ebx - 0x6972f714], al; clc; stc; call dword ptr [edx - 0x77]; 
0x000e2bde: add byte ptr [ebx - 0x6a76f314], al; cmp bl, 0xff; call dword ptr [ebx - 0x18]; 
0x0010724e: add byte ptr [ebx - 0x6a76f314], al; cmp bl, 0xff; call dword ptr [ebx - 0x18]; ret 0xf7b4; 
0x00149b0a: add byte ptr [ebx - 0x6b7447a3], cl; mov edx, dword ptr [eax + 0x1fff90d]; fidivr dword ptr [esi]; jmp edx; 
0x000e83a0: add byte ptr [ebx - 0x6bf0a308], al; ret 0x5422; 
0x0016c1bf: add byte ptr [ebx - 0x6c72f714], al; clc; stc; call dword ptr [edx - 0x77]; 
0x0002c176: add byte ptr [ebx - 0x6c72f714], al; jb 0x2c1aa; stc; call dword ptr [edx + 0x50]; 
0x0013c3ff: add byte ptr [ebx - 0x6c72f714], al; push esi; pop esp; stc; call dword ptr [edx + 0x50]; 
0x0013c49d: add byte ptr [ebx - 0x6c72f714], al; xchg edx, eax; pop esp; stc; call dword ptr [edx + 0x50]; 
0x000feb6f: add byte ptr [ebx - 0x6e34b], cl; dec dword ptr [ebp - 0x661a37a]; call dword ptr [eax - 0x73]; 
0x000ff4ce: add byte ptr [ebx - 0x6e373], cl; jmp dword ptr [ebp - 0x5f]; 
0x000ff52d: add byte ptr [ebx - 0x6e37b], cl; jmp dword ptr [ebp - 0x75]; 
0x00071842: add byte ptr [ebx - 0x6e76a7b8], cl; mov byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x000fdf3e: add byte ptr [ebx - 0x6eb73], cl; dec dword ptr [ecx - 0x6d37b]; call dword ptr [edi + 0x29]; 
0x00094840: add byte ptr [ebx - 0x6f72e714], al; or al, 0x94; stc; call dword ptr [edx - 0x73]; 
0x00065c5b: add byte ptr [ebx - 0x6f72f314], al; cmp byte ptr [ecx - 7], bh; call dword ptr [edx - 0x73]; 
0x0014c86b: add byte ptr [ebx - 0x6f72f314], al; mov ah, 0xac; stc; call dword ptr [edx - 0x73]; 
0x0009585b: add byte ptr [ebx - 0x70f0fe08], al; ret 0; 
0x00129743: add byte ptr [ebx - 0x70f0fe08], al; ret; 
0x00140ec8: add byte ptr [ebx - 0x7172fb14], al; pop ebp; stc; dec dword ptr [ebp - 0x6a28d7a]; call dword ptr [ecx - 0x77]; 
0x00120d1d: add byte ptr [ebx - 0x71f0fe08], al; ret; 
0x00163c17: add byte ptr [ebx - 0x72acf714], al; push esp; and al, 0x38; push edx; call dword ptr [eax + 0xc]; 
0x0009441c: add byte ptr [ebx - 0x72afef14], al; sbb byte ptr [eax + 0x5b], 0xf9; call dword ptr [eax + 0x6a]; 
0x00081a83: add byte ptr [ebx - 0x72aff314], al; sub dword ptr [ebx + 0x3e], -7; call dword ptr [ecx + 0x52]; 
0x0015aec9: add byte ptr [ebx - 0x72affb14], al; cmp dword ptr [eax + 0x57], -7; call dword ptr [eax + 0x6a]; 
0x00025415: add byte ptr [ebx - 0x72b3db84], cl; xchg eax, esp; push -7; call dword ptr [eax + 0x68]; 
0x000252f9: add byte ptr [ebx - 0x72b3db84], cl; xchg eax, esp; push -7; call dword ptr [eax - 0x73]; 
0x0002b119: add byte ptr [ebx - 0x72bbdb8c], cl; xchg byte ptr [eax + 0x68], ah; stc; call dword ptr [eax - 0x73]; 
0x00029dc0: add byte ptr [ebx - 0x72bbdb8c], cl; xchg byte ptr [eax + 0x69], ah; stc; call dword ptr [eax + 0x68]; 
0x000299c2: add byte ptr [ebx - 0x72bbdb8c], cl; xchg byte ptr [eax + 0x69], ah; stc; call dword ptr [eax - 0x73]; 
0x00026f40: add byte ptr [ebx - 0x72c3db84], cl; xchg esp, edi; jo 0x26f43; call dword ptr [eax - 0x73]; 
0x00026f63: add byte ptr [ebx - 0x72c3db84], cl; xchg esp, edi; jo 0x26f66; call dword ptr [eax - 0x73]; 
0x00026fcc: add byte ptr [ebx - 0x72c3db84], cl; xchg esp, edi; jo 0x26fcf; call dword ptr [eax - 0x73]; 
0x00027047: add byte ptr [ebx - 0x72c3db84], cl; xchg esp, edi; jo 0x2704a; call dword ptr [eax - 0x73]; 
0x00025ff6: add byte ptr [ebx - 0x72c3db8c], cl; xchg byte ptr [eax + 0x6a], ah; stc; call dword ptr [eax + 0x68]; 
0x00025ee2: add byte ptr [ebx - 0x72c3db8c], cl; xchg byte ptr [eax + 0x6a], ah; stc; call dword ptr [eax - 0x73]; 
0x000263bd: add byte ptr [ebx - 0x72c3db8c], cl; xchg byte ptr [eax], ah; push -7; call dword ptr [eax - 0x73]; 
0x00026019: add byte ptr [ebx - 0x72c3db8c], cl; xchg byte ptr [eax], bl; jno 0x2601c; call dword ptr [eax - 0x73]; 
0x00024d60: add byte ptr [ebx - 0x72c3dba4], cl; add dword ptr [eax], 0x6b; stc; call dword ptr [eax + 0x68]; 
0x00024c7a: add byte ptr [ebx - 0x72c3dba4], cl; add dword ptr [eax], 0x6b; stc; call dword ptr [eax - 0x73]; 
0x00027a79: add byte ptr [ebx - 0x72c7db84], cl; xchg eax, esp; jo 0x27a7c; call dword ptr [eax - 0x73]; 
0x00027aa1: add byte ptr [ebx - 0x72c7db84], cl; xchg eax, esp; jo 0x27aa4; call dword ptr [eax - 0x73]; 
0x00027c47: add byte ptr [ebx - 0x72c7db84], cl; xchg eax, esp; jo 0x27c4a; call dword ptr [eax - 0x73]; 
0x00027c6a: add byte ptr [ebx - 0x72c7db84], cl; xchg eax, esp; jo 0x27c6d; call dword ptr [eax - 0x73]; 
0x00151e88: add byte ptr [ebx - 0x72c7dbac], cl; dec eax; add dword ptr [ecx - 0x38cfdbb4], ecx; inc esp; ret 4; 
0x000be972: add byte ptr [ebx - 0x72cfdb84], cl; xchg dword ptr [edi + edx*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x000bbaf8: add byte ptr [ebx - 0x72cfdb84], cl; xchg esp, esi; xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x000390c7: add byte ptr [ebx - 0x72cfdb8c], cl; dec esi; or byte ptr [ecx], bh; ret 0x8e0f; 
0x0004148a: add byte ptr [ebx - 0x72d3db84], cl; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x00099a2a: add byte ptr [ebx - 0x72d3db84], cl; xchg dword ptr [ebx + edx*4 - 7], ecx; dec dword ptr [ebp - 0x6bf3a69]; call dword ptr [eax - 0x73]; 
0x000c16a7: add byte ptr [ebx - 0x72dbdb84], cl; xchg dword ptr [edi + edx*4], esp; stc; call dword ptr [eax - 0x73]; 
0x00124145: add byte ptr [ebx - 0x72dfdb8c], cl; xchg dh, cl; push ebp; stc; call dword ptr [eax - 0x18]; 
0x000b725d: add byte ptr [ebx - 0x72e3db8c], cl; xchg ah, ah; xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x000b6c41: add byte ptr [ebx - 0x72e3db8c], cl; xchg al, cl; xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x00095008: add byte ptr [ebx - 0x72e3dba4], cl; push ebx; or dh, dh; ret 0xf0f; 
0x00098285: add byte ptr [ebx - 0x72e7db8c], cl; xchg byte ptr [ebx + edx*4 - 0x69720007], al; lds eax, ptr [eax - 7]; call dword ptr [eax - 0x73]; 
0x00098485: add byte ptr [ebx - 0x72e7db8c], cl; xchg byte ptr [ebx + edx*4 - 7], ah; dec dword ptr [ebp - 0x6bf3a6a]; call dword ptr [eax - 0x73]; 
0x00049306: add byte ptr [ebx - 0x72ebdbac], cl; je 0x49334; add byte ptr [eax - 0x7c40fb73], dl; ret; 
0x0008919e: add byte ptr [ebx - 0x72f3db8c], cl; xchg byte ptr [ecx + eax*4 - 7], dl; call dword ptr [eax - 0x73]; 
0x0010f374: add byte ptr [ebx - 0x72f3dbbc], cl; sub byte ptr [eax + 0x4a], 0xf9; call dword ptr [eax - 0x18]; 
0x000a9ebc: add byte ptr [ebx - 0x72fd76ff], cl; inc edx; add al, 0x5f; pop ebx; ret; 
0x0006b847: add byte ptr [ebx - 0x72ff22f9], cl; push eax; or byte ptr [ecx - 0x16e122e9], cl; ret; 
0x00081a25: add byte ptr [ebx - 0x736d], cl; jmp dword ptr [ebp - 0x5f]; 
0x0006fc3f: add byte ptr [ebx - 0x73efb14], al; add dl, byte ptr [eax - 0x77]; ret; 
0x00196faf: add byte ptr [ebx - 0x73f0fa3e], al; xchg dword ptr [eax], eax; add byte ptr [eax], al; lea eax, [ecx + 5]; ret; 
0x00196e1d: add byte ptr [ebx - 0x73f0ff3e], al; sbb dword ptr [edx], eax; add byte ptr [eax], al; mov eax, ecx; ret; 
0x00071286: add byte ptr [ebx - 0x7472f314], al; pushal; out 0xff, eax; call dword ptr [ecx + 0x52]; 
0x0016c810: add byte ptr [ebx - 0x7472f714], al; clc; stc; call dword ptr [ecx - 0x77]; 
0x00121927: add byte ptr [ebx - 0x749bdbb4], cl; pop esp; and al, 0x60; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x00125b44: add byte ptr [ebx - 0x74b7dbac], cl; je 0x125b70; push eax; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x000d70f4: add byte ptr [ebx - 0x74bbdb8c], cl; pop esp; and al, 0x40; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00167a43: add byte ptr [ebx - 0x74bbdbac], cl; inc ecx; or byte ptr [ecx], bh; ret 0x5175; 
0x00093390: add byte ptr [ebx - 0x74bfdba4], cl; push esp; and al, 0x48; mov eax, 0x1a3; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x001092a5: add byte ptr [ebx - 0x74c7dbac], cl; jl 0x1092d1; inc eax; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00122133: add byte ptr [ebx - 0x74cbdbac], cl; pop esp; and al, 0x30; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000fb0e3: add byte ptr [ebx - 0x74dbdbac], cl; pop esp; and al, 0x20; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00159305: add byte ptr [ebx - 0x74e3dbac], cl; inc edx; add al, 0x89; adc al, 0x24; call dword ptr [eax + 0x10]; 
0x0017a32e: add byte ptr [ebx - 0x74ebdbb4], cl; push esp; and al, 0x18; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x001260de: add byte ptr [ebx - 0x74ebdbb4], cl; push esp; and al, 0x18; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00122fe4: add byte ptr [ebx - 0x74efdbb4], cl; pop esp; and al, 0xc; call dword ptr gs:[0x10]; 
0x00127a6b: add byte ptr [ebx - 0x74efdbbc], cl; inc eax; dec esp; call 0x127920; add esp, 4; ret; 
0x00058a14: add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x0012543d: add byte ptr [ebx - 0x74f3dbb4], cl; push esp; and al, 0x10; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x0009436d: add byte ptr [ebx - 0x74fbdbac], cl; adc dl, byte ptr [eax + 0x1cc9089]; add byte ptr [eax], al; ret; 
0x0009434d: add byte ptr [ebx - 0x74fbdbac], cl; adc dl, byte ptr [eax + 0x1d09089]; add byte ptr [eax], al; ret; 
0x000943fd: add byte ptr [ebx - 0x74fbdbac], cl; adc dl, byte ptr [eax + 0x2089089]; add byte ptr [eax], al; ret; 
0x000946dd: add byte ptr [ebx - 0x74fbdbac], cl; adc dl, byte ptr [eax + 0x3b689089]; add byte ptr [eax], al; ret; 
0x0009438e: add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [0x3fc], bh; jbe 0x943a0; ret; 
0x000943ce: add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [0xffff], bh; jbe 0x943e0; ret; 
0x0009456e: add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [ebx + 0x67650f8], al; ret; 
0x0012a80b: add byte ptr [ebx - 0x75], bl; adc al, 0x30; pop esi; pop edi; mov eax, edx; ret; 
0x00108656: add byte ptr [ebx - 0x75], dl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000932f4: add byte ptr [ebx - 0x75], dl; dec esp; and al, 0x10; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x001096e9: add byte ptr [ebx - 0x75], dl; push esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00044ea7: add byte ptr [ebx - 0x7636cefd], cl; ret 0x4489; 
0x000d7735: add byte ptr [ebx - 0x768bdbb4], cl; cli; call dword ptr gs:[0x10]; 
0x000587d6: add byte ptr [ebx - 0x768bdbbc], cl; ret; 
0x000bd25f: add byte ptr [ebx - 0x76a7dba4], cl; idiv dword ptr [ecx]; ret; 
0x00047e12: add byte ptr [ebx - 0x76a9eb3c], al; ret; 
0x000b6148: add byte ptr [ebx - 0x76aff33c], al; ret; 
0x000286d6: add byte ptr [ebx - 0x76dfdb8c], cl; ret 0x542b; 
0x0002802f: add byte ptr [ebx - 0x76e3db8c], cl; ret 0xb60f; 
0x0015867f: add byte ptr [ebx - 0x76e7dbbc], cl; xor al, 0x24; call dword ptr [eax + 0x10]; 
0x000d0d37: add byte ptr [ebx - 0x76f3db8c], cl; ret 0x44f6; 
0x00088a92: add byte ptr [ebx - 0x76f3dbac], cl; int1; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0014115f: add byte ptr [ebx - 0x76f7dbac], cl; adc ebp, ebx; mov ebp, eax; sub dword ptr [eax], -1; jmp dword ptr [esi - 0x70]; 
0x0011f5d5: add byte ptr [ebx - 0x76f7dbb4], cl; add dword ptr [eax + 1], edi; ret; 
0x000b9ba0: add byte ptr [ebx - 0x76f7dbbc], cl; ret; 
0x000a5abc: add byte ptr [ebx - 0x76fd76ff], cl; clc; pop edi; pop ebx; ret; 
0x000da1e3: add byte ptr [ebx - 0x776ef3c], al; call eax; 
0x0008ef03: add byte ptr [ebx - 0x776ef3c], al; pop ebx; pop esi; pop edi; ret; 
0x0008c2bf: add byte ptr [ebx - 0x77], bl; clc; pop esi; pop edi; pop ebp; ret; 
0x00084707: add byte ptr [ebx - 0x77], bl; rcr byte ptr [esi + 0x5f], 1; pop ebp; ret; 
0x00166932: add byte ptr [ebx - 0x77], bl; rcr byte ptr [esi + 0x5f], 1; ret; 
0x000217bf: add byte ptr [ebx - 0x77], dl; ret; 
0x0003bd45: add byte ptr [ebx - 0x77cc7fc], cl; add al, 0x74; ret 0xb85b; 
0x00061d7c: add byte ptr [ebx - 0x77cef3c], al; dec dword ptr [edi]; test byte ptr [edi], ch; adc byte ptr [eax], al; add byte ptr [ecx], al; ret; 
0x0006d67c: add byte ptr [ebx - 0x77cef3c], al; dec dword ptr [edi]; test dword ptr [edi - 0x16000020], eax; and cl, 0xff; jmp dword ptr [esi - 0x70]; 
0x000d9743: add byte ptr [ebx - 0x77cef3c], al; push dword ptr [eax + ecx*2 - 0x77]; ret 0xe283; 
0x00071216: add byte ptr [ebx - 0x77cef3c], al; push dword ptr [ecx + ebp*4 - 0x77]; ret 0xe283; 
0x00089e47: add byte ptr [ebx - 0x77cf440], al; or ecx, dword ptr [edi]; xchg dword ptr [eax - 0x45000004], ebp; or dword ptr [eax], 0xa30f0000; ret 0x830f; 
0x00089117: add byte ptr [ebx - 0x77cf440], al; or ecx, dword ptr [edi]; xchg dword ptr [eax - 0x45000004], esp; or dword ptr [eax], 0xa30f0000; ret 0x830f; 
0x000921ac: add byte ptr [ebx - 0x78726f83], cl; sbb al, 0x84; stc; call dword ptr [eax - 0x73]; 
0x000fc1fe: add byte ptr [ebx - 0x7872dbc4], cl; dec esp; sahf; stc; call dword ptr [eax - 0x73]; 
0x00161f26: add byte ptr [ebx - 0x7872ef3c], al; and al, 0x64; stc; call dword ptr [eax - 0x73]; 
0x001484d7: add byte ptr [ebx - 0x7872f314], al; xchg esp, eax; pop edi; stc; call dword ptr [eax - 0x18]; 
0x0002d059: add byte ptr [ebx - 0x7872f714], al; in al, 0x72; stc; call dword ptr [eax + 0x56]; 
0x00087b59: add byte ptr [ebx - 0x7972dbcc], cl; movsb byte ptr es:[edi], byte ptr [esi]; jg 0x87b5b; call dword ptr [eax - 0x73]; 
0x0013ad2f: add byte ptr [ebx - 0x7972f314], al; cmc; pop ebx; stc; call dword ptr [eax - 0x18]; 
0x0006bdcf: add byte ptr [ebx - 0x7a39fe20], al; inc ebx; idiv edi; jmp dword ptr [eax]; 
0x001576e5: add byte ptr [ebx - 0x7a72f314], al; fsub qword ptr [edx - 7]; call dword ptr [eax - 0x18]; 
0x001391e7: add byte ptr [ebx - 0x7a72f714], al; pop ebx; sub bh, cl; call dword ptr [eax + 0x53]; 
0x0007e236: add byte ptr [ebx - 0x7a72f714], al; stc; call dword ptr [eax - 0x75]; 
0x000592a7: add byte ptr [ebx - 0x7a72fb14], al; dec edi; xor bh, cl; call dword ptr [ecx + 0x50]; 
0x000669b6: add byte ptr [ebx - 0x7a72fb14], al; pushfd; idiv edi; call dword ptr [eax + 0x57]; 
0x00066d90: add byte ptr [ebx - 0x7a74fb14], al; xchg esp, eax; idiv edi; dec dword ptr [ecx - 0x87773]; call dword ptr [ebx + 0x52]; 
0x001047d4: add byte ptr [ebx - 0x7a76f783], cl; sar dh, 0xff; dec dword ptr [ecx - 0x14743]; jmp dword ptr [ebp - 0x5f]; 
0x0019ab0b: add byte ptr [ebx - 0x7ac3dbbc], cl; ror byte ptr [edi], 0x84; ret; 
0x00166f7b: add byte ptr [ebx - 0x7ae7dbac], cl; sal byte ptr [ebp + 0xc], cl; add esp, 0xc; ret; 
0x001500d6: add byte ptr [ebx - 0x7aefdbac], cl; sal byte ptr [eax + ebx - 0x7d], cl; in al, dx; or byte ptr [ebp - 0x6bca97f], cl; call dword ptr [eax + 0x52]; 
0x00044b66: add byte ptr [ebx - 0x7af7dbbc], cl; sal byte ptr [ebp + 0x61], 0xdb; lodsd eax, dword ptr [esi]; mov al, 0xba; stc; jmp dword ptr [ebp - 0x75]; 
0x0002fd83: add byte ptr [ebx - 0x7b74cfc0], cl; nop; add byte ptr [edx], al; add byte ptr [eax], al; ret; 
0x0002fdb3: add byte ptr [ebx - 0x7b74d7c0], cl; nop; add byte ptr [edx], al; add byte ptr [eax], al; ret; 
0x00151042: add byte ptr [ebx - 0x7bf00220], al; ret; 
0x000e8397: add byte ptr [ebx - 0x7bf0a208], al; outsd dx, dword ptr [esi]; add al, 0; add byte ptr [ebx - 0x6bf0a308], al; ret 0x5422; 
0x000250df: add byte ptr [ebx - 0x7bf0fb07], al; hlt; add dword ptr [eax], eax; add byte ptr [ebx - 0x7ce3dbbc], cl; ret 0x8301; 
0x00197a52: add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x0003e8dc: add byte ptr [ebx - 0x7bf0fe02], al; ret 1; 
0x0009d947: add byte ptr [ebx - 0x7bf0fe05], al; push ebx; add dword ptr [eax], eax; add byte ptr [ebx + 0x3910245c], cl; ret; 
0x00151039: add byte ptr [ebx - 0x7bf0fe08], al; cli; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf00220], al; ret; 
0x000bd590: add byte ptr [ebx - 0x7bf0fe13], al; ret; 
0x00152d26: add byte ptr [ebx - 0x7c24ceea], cl; cmp al, 0x29; or ecx, dword ptr [ecx + 0x4a8d293c]; add al, 0xf; xchg ebp, eax; ret; 
0x001a086f: add byte ptr [ebx - 0x7c72ef14], al; and byte ptr [eax - 9], ch; call dword ptr [eax - 1]; 
0x0013cc9f: add byte ptr [ebx - 0x7c72ef14], al; pushal; sub al, 0xf1; call dword ptr [eax - 0x73]; 
0x000cd563: add byte ptr [ebx - 0x7c72f314], 0x1e; inc ebp; stc; call dword ptr [eax - 0x18]; 
0x00159c6f: add byte ptr [ebx - 0x7c72f314], al; dec ebp; arpl cx, di; call dword ptr [eax - 0x18]; 
0x0010cc04: add byte ptr [ebx - 0x7c72f314], al; dec edx; stc; call dword ptr [eax - 0x18]; 
0x0003aa87: add byte ptr [ebx - 0x7c72f314], al; dec esp; je 0x3aa89; call dword ptr [eax - 0x18]; 
0x00156a48: add byte ptr [ebx - 0x7c72f314], al; les esp, ptr [edx - 7]; call dword ptr [eax - 0x18]; 
0x00034f5c: add byte ptr [ebx - 0x7c72f314], al; mov dh, 0x2c; stc; call dword ptr [eax - 0x18]; 
0x00168fe7: add byte ptr [ebx - 0x7c72f314], al; pop di; stc; call dword ptr [eax - 0x18]; 
0x000e60cf: add byte ptr [ebx - 0x7c72f314], al; push cs; dec eax; stc; call dword ptr [eax - 0x18]; 
0x0011f70b: add byte ptr [ebx - 0x7c72f714], al; adc cl, byte ptr [ebp - 7]; call dword ptr [eax + 0x57]; 
0x0011f86a: add byte ptr [ebx - 0x7c72f714], al; and dword ptr [eax - 7], edx; call dword ptr [eax + 0x57]; 
0x0011f927: add byte ptr [ebx - 0x7c72f714], al; cdq; push ecx; stc; call dword ptr [eax + 0x57]; 
0x000cd478: add byte ptr [ebx - 0x7c72f714], al; cmp al, 0x45; stc; call dword ptr [eax + 0x56]; 
0x0011f726: add byte ptr [ebx - 0x7c72f714], al; dec bp; stc; call dword ptr [eax + 0x57]; 
0x00119887: add byte ptr [ebx - 0x7c72f714], al; dec eax; dec ecx; stc; call dword ptr [eax - 0x73]; 
0x0011f885: add byte ptr [ebx - 0x7c72f714], al; dec eax; push eax; stc; call dword ptr [eax + 0x57]; 
0x0011f8f1: add byte ptr [ebx - 0x7c72f714], al; dec esp; push ecx; stc; call dword ptr [eax + 0x57]; 
0x0011f90c: add byte ptr [ebx - 0x7c72f714], al; jb 0x11f965; stc; call dword ptr [eax + 0x57]; 
0x0002c194: add byte ptr [ebx - 0x7c72f714], al; js 0x2c1c8; stc; call dword ptr [eax - 1]; 
0x0011f741: add byte ptr [ebx - 0x7c72f714], al; lahf; dec ebp; stc; call dword ptr [eax + 0x57]; 
0x0011f7c8: add byte ptr [ebx - 0x7c72f714], al; les ecx, ptr [esi - 7]; call dword ptr [eax + 0x57]; 
0x000eb573: add byte ptr [ebx - 0x7c72f714], al; movsb byte ptr es:[edi], byte ptr [esi]; stc; call dword ptr [eax + 0x55]; 
0x00150e5e: add byte ptr [ebx - 0x7c72f714], al; movsd dword ptr es:[edi], dword ptr [esi]; popal; stc; call dword ptr [eax - 1]; 
0x0011f8a0: add byte ptr [ebx - 0x7c72f714], al; nop; push eax; stc; call dword ptr [eax + 0x57]; 
0x0011f95d: add byte ptr [ebx - 0x7c72f714], al; not byte ptr [ecx - 7]; call dword ptr [eax + 0x57]; 
0x0011f7e3: add byte ptr [ebx - 0x7c72f714], al; or byte ptr [edi - 7], cl; call dword ptr [eax + 0x57]; 
0x000ccfd3: add byte ptr [ebx - 0x7c72f714], al; or eax, dword ptr [ebp - 7]; call dword ptr [eax + 0x56]; 
0x0011f75c: add byte ptr [ebx - 0x7c72f714], al; out 0x4d, al; stc; call dword ptr [eax + 0x57]; 
0x0011f84f: add byte ptr [ebx - 0x7c72f714], al; out dx, eax; dec edi; stc; call dword ptr [eax + 0x57]; 
0x00120b18: add byte ptr [ebx - 0x7c72f714], al; out dx, eax; push esp; stc; call dword ptr [eax + 0x56]; 
0x000cd502: add byte ptr [ebx - 0x7c72f714], al; pop ebx; sub bh, cl; call dword ptr [eax + 0x56]; 
0x0008817f: add byte ptr [ebx - 0x7c72f714], al; pop ebx; sub bh, cl; call dword ptr [eax - 0x73]; 
0x0011f792: add byte ptr [ebx - 0x7c72f714], al; pop esp; dec esi; stc; call dword ptr [eax + 0x57]; 
0x0011f6ba: add byte ptr [ebx - 0x7c72f714], al; push ds; dec esi; stc; call dword ptr [eax + 0x57]; 
0x000eb425: add byte ptr [ebx - 0x7c72f714], al; push esi; dec eax; stc; call dword ptr [eax + 0x55]; 
0x0011f7fe: add byte ptr [ebx - 0x7c72f714], al; push esp; dec edi; stc; call dword ptr [eax + 0x57]; 
0x0011f8d6: add byte ptr [ebx - 0x7c72f714], al; push ss; push ecx; stc; call dword ptr [eax + 0x57]; 
0x0011f942: add byte ptr [ebx - 0x7c72f714], al; rcl byte ptr [ecx - 7], cl; call dword ptr [eax + 0x57]; 
0x0011f684: add byte ptr [ebx - 0x7c72f714], al; ror byte ptr [ebx - 7], cl; call dword ptr [eax + 0x57]; 
0x0011f69f: add byte ptr [ebx - 0x7c72f714], al; sbb al, 0x4c; stc; call dword ptr [eax + 0x57]; 
0x0011f978: add byte ptr [ebx - 0x7c72f714], al; sbb dword ptr [edx - 7], edx; call dword ptr [eax + 0x57]; 
0x0011f777: add byte ptr [ebx - 0x7c72f714], al; sbb ecx, dword ptr [esi - 7]; call dword ptr [eax + 0x57]; 
0x0011f6d5: add byte ptr [ebx - 0x7c72f714], al; stosb byte ptr es:[edi], al; push edx; stc; call dword ptr [eax + 0x57]; 
0x0011f6f0: add byte ptr [ebx - 0x7c72f714], al; test al, 0x4c; stc; call dword ptr [eax + 0x57]; 
0x0011f819: add byte ptr [ebx - 0x7c72f714], al; xchg byte ptr [edi - 7], cl; call dword ptr [eax + 0x57]; 
0x0011f7ad: add byte ptr [ebx - 0x7c72f714], al; xchg edx, eax; dec esi; stc; call dword ptr [eax + 0x57]; 
0x0011f1f7: add byte ptr [ebx - 0x7c72fb3c], al; push 0x5bfff94a; pop esi; ret; 
0x0016eb37: add byte ptr [ebx - 0x7c74f714], al; mov al, byte ptr [0x51000003]; push edx; call dword ptr [eax + 0x28]; 
0x001256a6: add byte ptr [ebx - 0x7cacfe3a], al; ret; 
0x0009e5d7: add byte ptr [ebx - 0x7cc3dbac], cl; in al, dx; or byte ptr [ecx], al; ret 0x5489; 
0x000250e8: add byte ptr [ebx - 0x7ce3dbbc], cl; ret 0x8301; 
0x00132d97: add byte ptr [ebx - 0x7cefdbbc], cl; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000f1eb7: add byte ptr [ebx - 0x7cf4dcf6], cl; ret 0x8304; 
0x000f17cf: add byte ptr [ebx - 0x7cf7f6f6], cl; rol byte ptr [ebx + eax*4], 0xc2; add al, 0x39; ret; 
0x0004bf37: add byte ptr [ebx - 0x7cfb78ac], cl; ret 0x8901; 
0x00028e5b: add byte ptr [ebx - 0x7cfbdba4], cl; ret; 
0x0002a2dd: add byte ptr [ebx - 0x7cfbdbac], cl; ret 0x8904; 
0x0008299e: add byte ptr [ebx - 0x7cfbdbbc], cl; cmp byte ptr [ecx], al; je 0x829b0; ret; 
0x000913a5: add byte ptr [ebx - 0x7cfbdbbc], cl; js 0x913b5; adc al, 0xf; xchg dword ptr [ebx + eax - 0x58180000], ebx; ret; 
0x0008475f: add byte ptr [ebx - 0x7cfbdbbc], cl; pushal; or bl, bh; xor eax, eax; ret; 
0x000ee21f: add byte ptr [ebx - 0x7cfbdbbc], cl; ret; 
0x0019788a: add byte ptr [ebx - 0x7df0f711], al; sbb al, 1; add byte ptr [eax], al; lea eax, [eax + 7]; pop edi; ret; 
0x0013227f: add byte ptr [ebx - 0x7f72e714], al; mov ch, 0x58; stc; call dword ptr [eax - 0x18]; 
0x001339ff: add byte ptr [ebx - 0x7f72e714], al; neg dword ptr [eax - 7]; call dword ptr [eax - 0x18]; 
0x001575cd: add byte ptr [ebx - 0x7f72eb14], al; fsub qword ptr [edx - 7]; call dword ptr [eax + 0x6a]; 
0x00157e5d: add byte ptr [ebx - 0x7f72eb14], al; mul byte ptr [edx - 7]; call dword ptr [eax + 0x6a]; 
0x0015358d: add byte ptr [ebx - 0x7f72eb14], al; shl dword ptr [ecx - 7], 1; call dword ptr [eax + 0x6a]; 
0x001557cd: add byte ptr [ebx - 0x7f72eb14], al; xchg dword ptr [edx - 7], esp; call dword ptr [eax + 0x6a]; 
0x0016bc7f: add byte ptr [ebx - 0x7f97f314], al; add dword ptr [eax], eax; add al, ch; ret; 
0x0015ab4a: add byte ptr [ebx - 0x7f], dl; ret; 
0x000668af: add byte ptr [ebx - 0x87343], cl; dec dword ptr [ebp - 0x686db79]; call dword ptr [eax - 0x73]; 
0x000667ed: add byte ptr [ebx - 0x8737b], cl; inc dword ptr [ebx - 0x7f72f314]; aam 0x78; stc; call dword ptr [eax - 0x18]; 
0x0006858a: add byte ptr [ebx - 0x8737b], cl; inc dword ptr [ebx - 0x7f72f314]; clc; js 0x68592; call dword ptr [eax - 0x18]; 
0x00066e33: add byte ptr [ebx - 0x8737b], cl; jmp dword ptr [ebp - 0x75]; 
0x00052fd9: add byte ptr [ebx - 0x8763], cl; dec dword ptr [ebp + 0x53890150]; adc al, 0xc6; add byte ptr [0xfff8c7e9], ch; jmp dword ptr [esi - 0x70]; 
0x0006bc80: add byte ptr [ebx - 0x88f43], al; call dword ptr [ebx + 0xf]; 
0x0006b98f: add byte ptr [ebx - 0x89743], cl; dec dword ptr [ebp - 0x686db79]; call dword ptr [eax - 0x73]; 
0x0006b8cd: add byte ptr [ebx - 0x8977b], cl; inc dword ptr [ebx - 0x7f72f314]; aam 0x78; stc; call dword ptr [eax - 0x18]; 
0x0002de37: add byte ptr [ebx - 0x974b], cl; dec dword ptr [ebx - 0x936b]; jmp dword ptr [ebp - 0x5f]; 
0x000e7c6c: add byte ptr [ebx - 0x98f7c74], cl; clc; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x00072308: add byte ptr [ebx - 0xa8fb14], al; jne 0x72318; push esi; call dword ptr [ebx + 0x1c]; 
0x0009a462: add byte ptr [ebx - 0xa9f714], al; jae 0x9a48e; call eax; 
0x000698a6: add byte ptr [ebx - 0xaafb14], al; je 0x698d2; inc esp; push edi; call dword ptr [ebx + 0x1c]; 
0x00069991: add byte ptr [ebx - 0xaafb14], al; je 0x699bd; inc esp; push edi; call dword ptr [eax + 0x1c]; 
0x0006d97f: add byte ptr [ebx - 0xacfb14], al; je 0x6d9ab; and al, 0x55; call dword ptr [esi + 0x1c]; 
0x00173129: add byte ptr [ebx - 0xaefb14], al; je 0x173155; or al, 0x53; call dword ptr [ebp + 0x3c]; 
0x0012ed8a: add byte ptr [ebx - 0xaff33c], al; jne 0x12ed46; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x000e613c: add byte ptr [ebx - 0xaff7c74], cl; clc; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x0003001d: add byte ptr [ebx - 0xb80], cl; jmp dword ptr [ebp + 3]; 
0x0003001d: add byte ptr [ebx - 0xb80], cl; jmp dword ptr [ebp + 3]; add eax, 0; ret; 
0x001419c7: add byte ptr [ebx - 0xbb7b], cl; dec dword ptr [ebx - 0xa363]; dec dword ptr [ebp + 0x48d4004]; ret; 
0x000d4d21: add byte ptr [ebx - 0xc76b], cl; jmp ptr [ecx]; ret 0xd089; 
0x000829af: add byte ptr [ebx - 0xc77e], cl; dec dword ptr [ebx + 0x9880]; add cl, al; call 0x1e8accd; mov dword ptr [edx + 0x19f0], eax; ret; 
0x0011830e: add byte ptr [ebx - 0xc77e], cl; dec dword ptr [ebx - 0x3f7aefc0]; je 0x11831d; ret; 
0x0011f2d2: add byte ptr [ebx - 0xc780], cl; dec dword ptr [ebx - 0x3f7adbc0]; cmove eax, edx; ret; 
0x001703c8: add byte ptr [ebx - 0xc], dl; jmp dword ptr [esi - 9]; 
0x0009470f: add byte ptr [ebx - 0xe7fef14], al; call dword ptr [edx + 0x51]; 
0x000e0009: add byte ptr [ebx - 0xeaf7c44], cl; clc; inc dword ptr [ecx]; fistp qword ptr [esi]; jmp edi; 
0x000b5a2c: add byte ptr [ebx - 0xf76eb3c], al; pop ebx; pop esi; ret; 
0x0003b0f6: add byte ptr [ebx - 0xf76ef3c], al; add esp, 4; pop ebx; pop esi; ret; 
0x0014949a: add byte ptr [ebx - 0xf76ef3c], al; pop ebx; pop esi; pop edi; ret; 
0x0009c985: add byte ptr [ebx - 0xf76fb3c], al; pop ebx; pop esi; ret; 
0x000cf076: add byte ptr [ebx - 0xfb73], cl; inc dword ptr [ebx - 0x7e72f714]; pop ebx; sub bh, cl; call dword ptr [eax + 0x53]; 
0x0007e66d: add byte ptr [ebx - 1], dl; push ebp; and al, 0x21; ret 0xc483; 
0x00173d2d: add byte ptr [ebx - 1], dl; push edi; and al, 0x21; ret 0xc483; 
0x00024d67: add byte ptr [ebx - 7], ch; call dword ptr [eax + 0x68]; 
0x00024c81: add byte ptr [ebx - 7], ch; call dword ptr [eax - 0x73]; 
0x0014321c: add byte ptr [ebx], 0; add byte ptr [esi - 0x3f], ah; ret 0x8308; 
0x00169a22: add byte ptr [ebx], 0x45; adc al, 0x39; ret 0x870f; 
0x0002ffde: add byte ptr [ebx], ah; inc esp; and al, 8; ret; 
0x0006e4c6: add byte ptr [ebx], al; adc al, 0x86; jmp edx; 
0x00154d97: add byte ptr [ebx], al; je 0x154dbf; cmp al, 0x89; ret; 
0x0011ee8e: add byte ptr [ecx + 0x100c2484], cl; add byte ptr [eax], al; xor eax, eax; lea edx, [esp + 0xc]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x001267ce: add byte ptr [ecx + 0x103831c5], al; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x001260ce: add byte ptr [ecx + 0x103f31c5], al; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x00124a99: add byte ptr [ecx + 0x105566c5], al; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x0012386e: add byte ptr [ecx + 0x106791c5], al; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x00122fd8: add byte ptr [ecx + 0x107027c2], al; add byte ptr [ebx - 0x48], dl; ret; 
0x00115abc: add byte ptr [ecx + 0x10], bh; call dword ptr gs:[0x10]; 
0x00083b31: add byte ptr [ecx + 0x10eb8c3], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011973d: add byte ptr [ecx + 0x1108c2c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x0002e4fe: add byte ptr [ecx + 0x111c86], cl; add byte ptr [ebp - 0x68deb7a], cl; call dword ptr [eax - 0x18]; 
0x00118308: add byte ptr [ecx + 0x111cf7c2], al; add byte ptr [ebx - 0xc77e], cl; dec dword ptr [ebx - 0x3f7aefc0]; je 0x11831d; ret; 
0x0016d620: add byte ptr [ecx + 0x11ccc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00109743: add byte ptr [ecx + 0x1208bcc6], al; add byte ptr [ebx - 0x75], dl; push esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x001096e3: add byte ptr [ecx + 0x12091cc6], al; add byte ptr [ebx - 0x75], dl; push esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000ffd97: add byte ptr [ecx + 0x12a268c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x000d8f9a: add byte ptr [ecx + 0x13c2484], cl; add byte ptr [eax], al; xor eax, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x000eaa54: add byte ptr [ecx + 0x13f5abc1], al; add byte ptr [ebp - 0x77], dl; ret 0x5657; 
0x000e65a9: add byte ptr [ecx + 0x143a56c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x00150e22: add byte ptr [ecx + 0x144ec], al; add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000df88a: add byte ptr [ecx + 0x14a775c7], al; add byte ptr [ecx - 0x155343], cl; jmp dword ptr [ebp - 0x75]; 
0x000ebc99: add byte ptr [ecx + 0x14cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00038fc5: add byte ptr [ecx + 0x15cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000c5b16: add byte ptr [ecx + 0x1644e9c7], al; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x000befb6: add byte ptr [ecx + 0x16b049c7], al; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x0014215f: add byte ptr [ecx + 0x16cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000bc2b6: add byte ptr [ecx + 0x16dd49c7], al; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x000b9346: add byte ptr [ecx + 0x170cb9c7], al; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x00108cdc: add byte ptr [ecx + 0x18c2484], cl; add byte ptr [eax], al; xor eax, eax; mov eax, 0x17f; call dword ptr gs:[0x10]; 
0x000954e5: add byte ptr [ecx + 0x194b1ac6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x00094416: add byte ptr [ecx + 0x195be9c2], al; add byte ptr [ebx - 0x72afef14], al; sbb byte ptr [eax + 0x5b], 0xf9; call dword ptr [eax + 0x6a]; 
0x00108ea9: add byte ptr [ecx + 0x19cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x001253c1: add byte ptr [ecx + 0x1a1b8cf], cl; add byte ptr [eax], al; mov ecx, edx; mov edx, edi; mov edi, ebp; call dword ptr gs:[0x10]; 
0x00082998: add byte ptr [ecx + 0x1a7667c2], al; add byte ptr [ebx - 0x7cfbdbbc], cl; cmp byte ptr [ecx], al; je 0x829b0; ret; 
0x0007c629: add byte ptr [ecx + 0x1ad9d6c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x000d7876: add byte ptr [ecx + 0x1bbea], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000d79c7: add byte ptr [ecx + 0x1bbf9], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00095b8d: add byte ptr [ecx + 0x1c829da], cl; lds ebp, ptr [ecx]; ret 0x4589; 
0x0004db36: add byte ptr [ecx + 0x1dc4c9c7], al; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x00044ef6: add byte ptr [ecx + 0x1e5109c7], al; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x00041cd6: add byte ptr [ecx + 0x1e8329c7], al; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x0003ec36: add byte ptr [ecx + 0x1eb3c9c7], al; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x001545e2: add byte ptr [ecx + 0x1f029f3], cl; ret; 
0x00037555: add byte ptr [ecx + 0x1f2aaac6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x000217b9: add byte ptr [ecx + 0x208846c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x000b9838: add byte ptr [ecx + 0x244489da], cl; or byte ptr [ebp - 0x7efb7884], cl; ret 0; 
0x00093659: add byte ptr [ecx + 0x24748be9], cl; dec esp; call dword ptr gs:[0x10]; 
0x000fade9: add byte ptr [ecx + 0x24c4830a], cl; pop ebx; pop esi; ret; 
0x0016edab: add byte ptr [ecx + 0x28c48303], cl; pop ebx; ret; 
0x0014afd0: add byte ptr [ecx + 0x2bcc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0004ac30: add byte ptr [ecx + 0x3004bbe1], cl; add byte ptr [eax], al; mov eax, 0x180; call dword ptr gs:[0x10]; 
0x0014746d: add byte ptr [ecx + 0x31102444], cl; shr byte ptr [edx + 2], 0x8d; xor dword ptr [edi + 0x2d], 0xfffffff9; call dword ptr [eax + 0x51]; 
0x001252e9: add byte ptr [ecx + 0x311c2444], cl; ror byte ptr [ebx - 0x17c7dba4], 0x67; aam 0xf5; dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x00124939: add byte ptr [ecx + 0x311c2444], cl; ror byte ptr [ebx - 0x17cbdba4], 0x17; fdivrp st(5); dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x00124c19: add byte ptr [ecx + 0x311c2444], cl; ror byte ptr [ebx - 0x17cbdba4], 0x37; fcomi st(5); dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x00124d69: add byte ptr [ecx + 0x311c2444], cl; ror byte ptr [ebx - 0x17cbdba4], 0xe7; fprem1; dec dword ptr [ebp - 0x76fbdbb4]; ret 0x448b; 
0x00156a39: add byte ptr [ecx + 0x312c2444], cl; rol byte ptr [eax - 0x7bf0ffc6], 0x2a; add eax, dword ptr [eax]; add byte ptr [ebx - 0x7c72f314], al; les esp, ptr [edx - 7]; call dword ptr [eax - 0x18]; 
0x00024126: add byte ptr [ecx + 0x31342454], cl; ror byte ptr [ebp - 0x6d5a469], cl; call dword ptr [edx + 0x50]; 
0x00165229: add byte ptr [ecx + 0x31382444], cl; rcl byte ptr [edi - 0x18], 0x3a; add al, 0xf5; call ecx; 
0x00165309: add byte ptr [ecx + 0x31382444], cl; rcl byte ptr [edi - 0x18], 0x5a; add esi, ebp; call ecx; 
0x00116692: add byte ptr [ecx + 0x36b8c7], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f1ced: add byte ptr [ecx + 0x388cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x001171c7: add byte ptr [ecx + 0x39d8f7f8], cl; ret; 
0x0004ac80: add byte ptr [ecx + 0x3c778bd4], cl; mov edi, dword ptr [edi + 0x38]; ret; 
0x000cd695: add byte ptr [ecx + 0x3db083], cl; add byte ptr [ecx], bh; ret 0x870f; 
0x0008485c: add byte ptr [ecx + 0x3ffffa], al; add byte ptr [edi + 0xb], dh; ret; 
0x0012eada: add byte ptr [ecx + 0x428be045], cl; or al, 0x89; ret; 
0x000fcc22: add byte ptr [ecx + 0x432cb7], cl; add byte ptr [ecx], bh; ret 0xe74; 
0x00160191: add byte ptr [ecx + 0x4342494], cl; add byte ptr [eax], al; mov edx, dword ptr [eax + 4]; push ecx; push eax; call dword ptr [edx + 8]; 
0x000f60a1: add byte ptr [ecx + 0x43b60fc6], cl; add al, 0x89; ret 0xe283; 
0x000a212f: add byte ptr [ecx + 0x4428d02], cl; pop ebx; pop esi; ret; 
0x000b32ad: add byte ptr [ecx + 0x448b0750], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000afe2a: add byte ptr [ecx + 0x448b0750], cl; and al, 8; pop esi; ret; 
0x000b32cd: add byte ptr [ecx + 0x448b0850], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000afe4a: add byte ptr [ecx + 0x448b0850], cl; and al, 8; pop esi; ret; 
0x000b33ad: add byte ptr [ecx + 0x448b0f48], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000aff1a: add byte ptr [ecx + 0x448b0f48], cl; and al, 8; pop esi; ret; 
0x000b33cd: add byte ptr [ecx + 0x448b1048], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000aff3a: add byte ptr [ecx + 0x448b1048], cl; and al, 8; pop esi; ret; 
0x001243e9: add byte ptr [ecx + 0x448b2404], cl; and al, 0x24; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00124b99: add byte ptr [ecx + 0x448b2404], cl; and al, 0x28; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0013bf24: add byte ptr [ecx + 0x448b2434], cl; and al, 0x2c; call eax; 
0x000420ed: add byte ptr [ecx + 0x44cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000ac43f: add byte ptr [ecx + 0x4578817], cl; pop edi; pop esi; pop ebx; ret; 
0x001190a5: add byte ptr [ecx + 0x4acc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00140d38: add byte ptr [ecx + 0x4b890453], cl; or byte ptr [ebx + 0x5e], bl; pop edi; ret 4; 
0x00075bd1: add byte ptr [ecx + 0x4c4830a], cl; pop ebx; pop esi; ret; 
0x00081f3e: add byte ptr [ecx + 0x4c48310], cl; pop ebx; pop esi; ret; 
0x0011f1a7: add byte ptr [ecx + 0x4c483f0], cl; pop ebx; pop esi; ret; 
0x00078808: add byte ptr [ecx + 0x5052016a], bl; push ebx; call dword ptr [edi + 0x40]; 
0x001637ee: add byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x000818bb: add byte ptr [ecx + 0x52], dl; call 0x16df30; add esp, 0x1c; ret; 
0x0016eaa0: add byte ptr [ecx + 0x52], dl; call dword ptr [eax + 0x24]; 
0x0016eb40: add byte ptr [ecx + 0x52], dl; call dword ptr [eax + 0x28]; 
0x00116657: add byte ptr [ecx + 0x5409], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00163b51: add byte ptr [ecx + 0x56cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000ac44f: add byte ptr [ecx + 0x57896617], cl; add al, 0x5f; pop esi; pop ebx; ret; 
0x0002d8c5: add byte ptr [ecx + 0x5b082454], cl; jmp 0x2def0; pop ebx; ret; 
0x000719a2: add byte ptr [ecx + 0x5b082454], cl; jmp eax; 
0x00076163: add byte ptr [ecx + 0x5b102474], cl; mov eax, dword ptr [edi + 0x10]; pop esi; pop edi; jmp eax; 
0x00076003: add byte ptr [ecx + 0x5b102474], cl; mov eax, dword ptr [edi + 0x14]; pop esi; pop edi; jmp eax; 
0x0017c520: add byte ptr [ecx + 0x5b5e5fd0], cl; ret; 
0x000ac69f: add byte ptr [ecx + 0x5b5e5ff8], cl; ret; 
0x000a2067: add byte ptr [ecx + 0x5bd08902], cl; pop esi; ret; 
0x00142d8f: add byte ptr [ecx + 0x5dcc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0004c842: add byte ptr [ecx + 0x5e5b047b], cl; pop edi; pop ebp; ret; 
0x0011fc97: add byte ptr [ecx + 0x5e5b1056], cl; pop edi; ret; 
0x000300a4: add byte ptr [ecx + 0x5e5b1814], cl; ret; 
0x0004c876: add byte ptr [ecx + 0x5f5e5b16], cl; pop ebp; ret; 
0x0009ee0d: add byte ptr [ecx + 0x5f5e5bc8], cl; pop ebp; ret; 
0x00037ebc: add byte ptr [ecx + 0x5f5e5bc8], cl; ret; 
0x000b703d: add byte ptr [ecx + 0x5f5e5bd0], cl; pop ebp; ret; 
0x0016c05e: add byte ptr [ecx + 0x5f5e5bd0], cl; ret; 
0x00065f16: add byte ptr [ecx + 0x5f5e5bd8], cl; pop ebp; ret; 
0x000d867c: add byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x0006ac83: add byte ptr [ecx + 0x5f5e5be8], cl; pop ebp; ret; 
0x0002cb99: add byte ptr [ecx + 0x5f5e5bf0], cl; pop ebp; ret; 
0x00057fdc: add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x00035313: add byte ptr [ecx + 0x5f5e5bf8], cl; pop ebp; ret; 
0x0007190b: add byte ptr [ecx + 0x5f5e5bf8], cl; ret; 
0x00154b92: add byte ptr [ecx + 0x62], 0xf9; call dword ptr [eax + 0x6a]; 
0x00154be6: add byte ptr [ecx + 0x62], 0xf9; jmp dword ptr [ebp - 0x75]; 
0x000a215b: add byte ptr [ecx + 0x6428d02], cl; pop ebx; pop esi; ret; 
0x00066f52: add byte ptr [ecx + 0x6785c6d3], cl; idiv edi; jmp dword ptr [eax]; 
0x001592c1: add byte ptr [ecx + 0x6a], dl; add al, 0x52; mov dword ptr [esp + 0x2c], edx; call dword ptr [eax]; 
0x000aff5a: add byte ptr [ecx + 0x70881048], cl; adc al, 0x8b; inc esp; and al, 8; pop esi; ret; 
0x0011dec3: add byte ptr [ecx + 0x7589cc5d], cl; ror byte ptr [ebp + 0xb6], 1; add byte ptr [ebp - 0x74f38b40], al; push eax; add al, 0xf6; ret 0xf01; 
0x000b584b: add byte ptr [ecx + 0x75], cl; stc; pop esi; ret; 
0x00112737: add byte ptr [ecx + 0x7a892072], cl; and al, 0x89; inc edx; sub byte ptr [esi + 0x5f], bl; ret; 
0x000890cd: add byte ptr [ecx + 0x7b9eb], cl; add byte ptr [eax], al; mov esi, edx; call dword ptr gs:[0x10]; 
0x0008abd9: add byte ptr [ecx + 0x7b9fb], cl; add byte ptr [eax], al; mov esi, edx; call dword ptr gs:[0x10]; 
0x00199677: add byte ptr [ecx + 0x7c6f7f2], cl; add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [edx - 0x76fffffe], edx; ret; 
0x00086a38: add byte ptr [ecx + 0x7c888dfa], cl; add al, 0; add byte ptr [eax + 0xaf], bh; call dword ptr gs:[0x10]; 
0x000edde3: add byte ptr [ecx + 0x7ec085c7], cl; jnp 0x149be634; mov eax, 0xc0833803; add al, 0x39; ret 0xf775; 
0x000951c1: add byte ptr [ecx + 0x7f883], cl; add byte ptr [ebp - 0x1959bf7d], cl; call dword ptr [eax + 0x56]; 
0x0019e160: add byte ptr [ecx + 0x7fffe2], al; add byte ptr [ecx - 0x76f3dbac], cl; ret 0xb70f; 
0x0007feff: add byte ptr [ecx + 0x803c48], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x34]; test eax, eax; jne 0x7ff00; ret; 
0x000831ad: add byte ptr [ecx + 0x80], bh; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x00091acf: add byte ptr [ecx + 0x81], bh; call dword ptr gs:[0x10]; 
0x00086c7c: add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0016f075: add byte ptr [ecx + 0x81], bh; mov edx, 1; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00083289: add byte ptr [ecx + 0x81], bh; mov edx, 1; push ebx; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000839ce: add byte ptr [ecx + 0x81], bh; xor esi, esi; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x0008980c: add byte ptr [ecx + 0x87], bh; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x00036a75: add byte ptr [ecx + 0x9024bc], al; add byte ptr [eax], al; push eax; ret; 
0x00084c97: add byte ptr [ecx + 0x94c4], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0007d127: add byte ptr [ecx + 0x9cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00162097: add byte ptr [ecx + 0xa0c4], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0002445b: add byte ptr [ecx + 0xacc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00037a0d: add byte ptr [ecx + 0xb3b8c2], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00077acc: add byte ptr [ecx + 0xbcc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000de365: add byte ptr [ecx + 0xc], bh; lea ebx, [eax + 0x70]; mov dword ptr [eax + 0x70], ebx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x00092e9d: add byte ptr [ecx + 0xccc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00159239: add byte ptr [ecx + 0xd0dc6c5], al; add byte ptr [edi + 0x31], dl; call dword ptr [esi - 0x42]; 
0x00152bb9: add byte ptr [ecx + 0xd7446c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x00150e1c: add byte ptr [ecx + 0xd91e3c3], al; add byte ptr [ecx + 0x144ec], al; add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00150d6d: add byte ptr [ecx + 0xd9292c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x00032029: add byte ptr [ecx + 0xecc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0013cc99: add byte ptr [ecx + 0xed366c3], al; add byte ptr [ebx - 0x7c72ef14], al; pushal; sub al, 0xf1; call dword ptr [eax - 0x73]; 
0x000857df: add byte ptr [ecx + 0xf0b8d1], cl; add byte ptr [eax], al; mov edx, 0x7fffffff; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0019ab01: add byte ptr [ecx + 0xf382444], cl; test dh, bl; add al, 0; add byte ptr [ebx - 0x7ac3dbbc], cl; ror byte ptr [edi], 0x84; ret; 
0x000cd688: add byte ptr [ecx + 0xfc80ff2], cl; inc ebx; ror dword ptr [ecx + 0x3db8ab], 1; add byte ptr [ecx + 0x3db083], cl; add byte ptr [ecx], bh; ret 0x870f; 
0x000fc8c9: add byte ptr [ecx + 0xfcc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0015145f: add byte ptr [ecx + 1], bh; mov eax, ecx; ret; 
0x0008b3ba: add byte ptr [ecx + 7], bh; mov dword ptr [ebx + 4], 0; mov esi, edx; call dword ptr gs:[0x10]; 
0x000379e6: add byte ptr [ecx + 8], bh; call dword ptr gs:[0x10]; 
0x0008b034: add byte ptr [ecx + 8], bh; mov esi, edx; call dword ptr gs:[0x10]; 
0x000b4974: add byte ptr [ecx + eax + 0x40], dh; pop edi; pop esi; ret; 
0x000b47d0: add byte ptr [ecx + eax + 0x40], dh; pop edi; ret; 
0x000b5726: add byte ptr [ecx + eax + 0x40], dh; sub eax, dword ptr [esp + 4]; ret; 
0x0004bc14: add byte ptr [ecx + eax*2 - 0x7d], dh; ret; 
0x0004aa03: add byte ptr [ecx + ebx*2 - 0x77], dh; ret 0xc031; 
0x0007bc87: add byte ptr [ecx + ecx*8 - 0x137cb18b], al; or byte ptr [ecx - 0x7c72f7bb], cl; rcr byte ptr [ecx], 0xe5; call dword ptr [eax - 0x73]; 
0x00150e3e: add byte ptr [ecx - 0x12f7b], cl; dec dword ptr [ecx - 0x6f7c723e]; xor al, 0xf9; call dword ptr [eax + 0x52]; 
0x0015fc89: add byte ptr [ecx - 0x12f7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00158a62: add byte ptr [ecx - 0x137cdbec], cl; or byte ptr [ebx + 0x50572048], cl; call dword ptr [ecx + 8]; 
0x0007b7d0: add byte ptr [ecx - 0x137cefba], cl; or byte ptr [ebp - 0x1aeaef7d], cl; dec dword ptr [ecx - 0x72afebaa]; xor dword ptr [eax + 0x14], 0xffffffe5; call dword ptr [eax - 0x73]; 
0x00150e28: add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0007c2c9: add byte ptr [ecx - 0x14ec7407], cl; ret; 
0x000df890: add byte ptr [ecx - 0x155343], cl; jmp dword ptr [ebp - 0x75]; 
0x0016beb8: add byte ptr [ecx - 0x15f7b], cl; dec dword ptr [ecx - 0x15b43]; jmp dword ptr [ebp - 0x5f]; 
0x000ba5f2: add byte ptr [ecx - 0x162c763f], cl; ret 0xfffc; 
0x00022733: add byte ptr [ecx - 0x16fbdbbc], cl; ret; 
0x00172e62: add byte ptr [ecx - 0x17a9afae], bl; or al, dh; jmp dword ptr [ecx]; 
0x00172e62: add byte ptr [ecx - 0x17a9afae], bl; or al, dh; jmp dword ptr [ecx]; ret 0xc483; 
0x000f9218: add byte ptr [ecx - 0x1a77b], cl; dec dword ptr [edi]; test dword ptr [ecx], esi; or byte ptr [eax], al; add byte ptr [ebx - 0x17a8f314], al; ret 0xfdf5; 
0x00161ce9: add byte ptr [ecx - 0x1f7c723b], cl; arpl cx, di; call dword ptr [ecx + 0x6a]; 
0x0010f6d4: add byte ptr [ecx - 0x277c9912], cl; jmp dword ptr [esi - 0x77]; 
0x001a08d7: add byte ptr [ecx - 0x2d7a57c4], cl; je 0x1a08e9; mov dword ptr [esp + 8], eax; call edx; 
0x00089604: add byte ptr [ecx - 0x2dcef7b0], cl; mov eax, edx; ret; 
0x0012711b: add byte ptr [ecx - 0x33f7b], cl; inc edi; test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x000508da: add byte ptr [ecx - 0x35ef7b], cl; dec dword ptr [ebp - 0x35f37b]; dec dword ptr [ecx - 0x361f7b]; inc dword ptr [ebx - 0x36277b]; jmp dword ptr [eax]; 
0x0008bf9e: add byte ptr [ecx - 0x3600f785], al; lcall 0, 0xc4870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x000c6362: add byte ptr [ecx - 0x363b6b], cl; dec dword ptr [ebx - 0x36476b]; call dword ptr [eax - 0x73]; 
0x0004e84a: add byte ptr [ecx - 0x365f6b], cl; dec dword ptr [ebx - 0x363f6b]; call dword ptr [eax - 0x73]; 
0x0016685d: add byte ptr [ecx - 0x3776f3b0], cl; pop ebx; ret; 
0x0016681d: add byte ptr [ecx - 0x3776f3b0], cl; ret; 
0x00093b0e: add byte ptr [ecx - 0x38d3dbac], cl; inc esp; and al, 0x34; add al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001328cc: add byte ptr [ecx - 0x3b7c0003], cl; adc byte ptr [ebp - 0x7cf68b40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x0009e10b: add byte ptr [ecx - 0x3b7c0389], cl; adc byte ptr [ecx], ch; ret; 
0x00150c14: add byte ptr [ecx - 0x3b7ceefc], cl; add al, 0x5b; pop esi; ret; 
0x0008d0a5: add byte ptr [ecx - 0x3fcee3be], cl; pop ebx; ret; 
0x00143891: add byte ptr [ecx - 0x44373], cl; jmp dword ptr [ebp - 0x75]; 
0x00125ba1: add byte ptr [ecx - 0x44e7dba4], cl; or al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00124807: add byte ptr [ecx - 0x47cbdb84], cl; sbb eax, 0xf000000; inc ebp; ret; 
0x000388d4: add byte ptr [ecx - 0x47dfdbbc], cl; mov dl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00092ee8: add byte ptr [ecx - 0x4f7c723b], cl; mov esi, fs; call dword ptr [eax + 0x56]; 
0x00126c67: add byte ptr [ecx - 0x50b7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000622e1: add byte ptr [ecx - 0x51773], cl; call dword ptr [eax + 0x53]; 
0x0008282b: add byte ptr [ecx - 0x5c9af3b0], cl; jl 0x82833; add byte ptr [eax], al; ret; 
0x0011fe7d: add byte ptr [ecx - 0x6c72fbaa], cl; ret 0xf94d; 
0x000fe44a: add byte ptr [ecx - 0x71b4b], cl; dec dword ptr [ecx - 0x2f7f723a]; and ch, ch; call dword ptr [eax - 0x73]; 
0x000fd55d: add byte ptr [ecx - 0x71b73], cl; dec dword ptr [ecx - 0x2f7f723f]; and ch, ch; call dword ptr [eax - 0x73]; 
0x0014a1ce: add byte ptr [ecx - 0x7209ce08], cl; je 0x14a1fc; add byte ptr [eax + 0xf2efa80], dl; xchg esp, eax; ret 0xc083; 
0x0017278e: add byte ptr [ecx - 0x72cfdbbc], cl; jl 0x1727ba; xor byte ptr [edi - 0x18], dl; or dword ptr [ecx], 0xfffffff1; jmp dword ptr [ebp - 0x75]; 
0x000265e2: add byte ptr [ecx - 0x72d7dbbc], cl; inc edi; and byte ptr [ecx - 0x9d3dbbc], cl; ret 0x7501; 
0x00156b6f: add byte ptr [ecx - 0x72efdbbc], cl; inc edi; add ecx, dword ptr [edi]; dec esi; ret 0xec83; 
0x000d7497: add byte ptr [ecx - 0x72f7dbb4], cl; dec esp; and al, 4; call dword ptr gs:[0x10]; 
0x000b9674: add byte ptr [ecx - 0x74367a09], cl; mov word ptr [eax + ebp*2], fs; add al, 0; add byte ptr [edi], cl; xchg ebp, eax; ret 0x9eb; 
0x000bf2dc: add byte ptr [ecx - 0x74367a09], cl; mov word ptr [eax + ebx*2], fs; add dword ptr [eax], eax; add byte ptr [edi], cl; xchg ebp, eax; ret 0x9eb; 
0x00122834: add byte ptr [ecx - 0x7497dbbc], cl; and byte ptr [eax - 0x77000000], 0x44; and al, 0x6c; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x000827ea: add byte ptr [ecx - 0x749ae3b0], cl; adc eax, 0x7c; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x80], eax; ret; 
0x0007811e: add byte ptr [ecx - 0x74efdb8c], cl; inc eax; adc byte ptr [ebx + 0x5e5b04c4], al; jmp eax; 
0x001658c6: add byte ptr [ecx - 0x74f3dbbc], cl; add eax, dword ptr [ebp + 0x317774c0]; rol byte ptr [ebx - 0x6bf0fd08], cl; ret 0xf883; 
0x000386b9: add byte ptr [ecx - 0x76057617], cl; inc esp; and al, 8; mov eax, 0x1a5; call dword ptr gs:[0x10]; 
0x00038661: add byte ptr [ecx - 0x76057617], cl; inc esp; and al, 8; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x001253c8: add byte ptr [ecx - 0x7605762f], cl; out dx, eax; call dword ptr gs:[0x10]; 
0x0005c301: add byte ptr [ecx - 0x760e7638], cl; dec byte ptr [ecx - 0x5ab7b]; jmp dword ptr [esi - 0x70]; 
0x00030dc7: add byte ptr [ecx - 0x76257630], cl; ret; 
0x0014abaf: add byte ptr [ecx - 0x762e7638], cl; ret 0xc031; 
0x000a1b17: add byte ptr [ecx - 0x763fce3e], cl; push ss; pop ebx; pop esi; ret; 
0x00199096: add byte ptr [ecx - 0x7683dbbc], cl; ret 0xd285; 
0x00055172: add byte ptr [ecx - 0x768fdbbc], cl; ret 0xc483; 
0x000c2483: add byte ptr [ecx - 0x769bdbac], cl; ret 0x448b; 
0x000c24e7: add byte ptr [ecx - 0x76a3dbac], cl; ret 0x448b; 
0x00033ab1: add byte ptr [ecx - 0x76d3dbbc], cl; ret 0x48d; 
0x000d28dc: add byte ptr [ecx - 0x76d7dbbc], cl; ret 0xa165; 
0x00091678: add byte ptr [ecx - 0x76dbdbb4], cl; retf 0x4c8b; and al, 0x18; call dword ptr gs:[0x10]; 
0x000418b0: add byte ptr [ecx - 0x76dbdbbc], cl; ret 0xe283; 
0x00031e7e: add byte ptr [ecx - 0x76dbdbbc], cl; ret; 
0x000949b4: add byte ptr [ecx - 0x76dfdbbc], cl; je 0x949e0; sub byte ptr [ebp - 0x6bef672], cl; jmp dword ptr [ebp - 0x5f]; 
0x00099d48: add byte ptr [ecx - 0x76dfdbbc], cl; ret; 
0x000818d5: add byte ptr [ecx - 0x76ebdbb4], cl; push esp; and al, 0x10; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x00111da8: add byte ptr [ecx - 0x76efdbbc], cl; ret 0x4c89; 
0x00094fa7: add byte ptr [ecx - 0x76f3db94], cl; ret; 
0x0019e166: add byte ptr [ecx - 0x76f3dbac], cl; ret 0xb70f; 
0x0009bb16: add byte ptr [ecx - 0x76f3dbbc], cl; ret 0xa165; 
0x0015d881: add byte ptr [ecx - 0x76f7dbb4], cl; inc esp; and al, 4; jmp edx; 
0x00124ac8: add byte ptr [ecx - 0x76fbdb8c], cl; loope 0x124a59; ret 0x448b; 
0x0004ca9b: add byte ptr [ecx - 0x76fbdbac], cl; add al, 0x24; fld xword ptr [esp]; add esp, 0x1c; ret; 
0x00024154: add byte ptr [ecx - 0x76ff7439], cl; ret 0xce80; 
0x001322d5: add byte ptr [ecx - 0x76ff743d], cl; ret 0xce80; 
0x000894cb: add byte ptr [ecx - 0x77cf7b6], cl; and dword ptr [ebp + 4], esi; add dword ptr [edx + 4], 1; add esp, 0xc; ret; 
0x000f2340: add byte ptr [ecx - 0x7ab7db84], cl; push dword ptr [esp + 0xf]; mov dh, 0x52; sbb al, 0xf6; ret 0xf08; 
0x000b678d: add byte ptr [ecx - 0x7adfdbbc], cl; test byte ptr [edi], -0x7c; push ss; add dword ptr [eax], eax; add byte ptr [ebx - 0x677b], cl; jmp dword ptr [ebp - 0x75]; 
0x0019dcb6: add byte ptr [ecx - 0x7c07763a], cl; ret; 
0x0017038f: add byte ptr [ecx - 0x7c17760e], cl; ret; 
0x00124f1c: add byte ptr [ecx - 0x7ce7dbbc], cl; ret; 
0x0008ece7: add byte ptr [ecx - 0x7cebdbac], cl; ret; 
0x0003a830: add byte ptr [ecx - 0x7cebdbb4], cl; in al, dx; or byte ptr [edx], ch; push edx; call edi; 
0x0013a4fb: add byte ptr [ecx - 0x7cefdbb4], cl; in al, dx; or al, 0xff; je 0x13a52a; sbb byte ptr [esi - 0x3f], ah; ret; 
0x0015cb9c: add byte ptr [ecx - 0x7cf3dbbc], cl; in al, dx; or byte ptr [ebp - 0x69d3d7d], cl; call dword ptr [eax - 1]; 
0x000285c8: add byte ptr [ecx - 0x7cf51439], cl; ret; 
0x000b4447: add byte ptr [ecx - 0x7cf5742d], cl; ret 0x8104; 
0x0004084e: add byte ptr [ecx - 0x7cfbdba4], cl; rcr byte ptr [ecx], 0x39; ror byte ptr [edi], 1; dec edi; ret 0xf001; 
0x000f19ac: add byte ptr [ecx - 0x7cff72bc], cl; rol dword ptr [ecx], 9; ret 0xf983; 
0x00045a4b: add byte ptr [ecx - 0x7e38fe26], cl; ret 0; 
0x001261f6: add byte ptr [ecx - 0x7ee7dbbc], cl; into; add byte ptr [ecx], al; add byte ptr [eax], al; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0004ac8e: add byte ptr [ecx - 0x7f], bl; ror dword ptr [edx], 0; add byte ptr [eax], al; mov dword ptr [edx], ecx; ret; 
0x000e0246: add byte ptr [ecx - 0x8b7b], cl; jmp dword ptr [ebp - 0x75]; 
0x0006b45b: add byte ptr [ecx - 0x8df63], cl; dec dword ptr [ecx - 0x90b7b]; jmp ptr [ecx]; ret; 
0x00167fb4: add byte ptr [ecx - 0xa37b], cl; dec dword ptr [ebx + 0x55891445]; test byte ptr [ecx + 0x458b9045], cl; sbb byte ptr [ecx - 0x837b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00141492: add byte ptr [ecx - 0xab7b], cl; call dword ptr [eax + 0x6a]; 
0x0016a558: add byte ptr [ecx - 0xb77b], cl; dec dword ptr [ecx - 0xbb6b]; jmp dword ptr [ebp - 0x5f]; 
0x000dd844: add byte ptr [ecx - 0xfbbf017], cl; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x0003ab11: add byte ptr [ecx - 0xffc2ac], cl; jae 0x3ab1d; call eax; 
0x00104981: add byte ptr [ecx - 1], bh; call dword ptr gs:[0x10]; 
0x000b541f: add byte ptr [ecx - 1], bh; cmovb eax, ecx; ret; 
0x0009db9f: add byte ptr [ecx*4 - 0x175e2f6e], al; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x0009b3af: add byte ptr [ecx*4 - 0x18797f6e], al; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x0016bc84: add byte ptr [ecx], 0; add al, ch; ret; 
0x00059343: add byte ptr [ecx], 0; add byte ptr [ebx + 0xd182444], cl; add byte ptr [eax], 0x41; add byte ptr [eax - 0x73], dl; cmp byte ptr [edi + 0x31], 0xf9; call dword ptr [eax - 0x18]; 
0x00077f25: add byte ptr [ecx], 0; add byte ptr [edx + 1], ch; push 0; push 0; push dword ptr [esp + 0x18]; call dword ptr [ebx + 0x40]; 
0x0016df1a: add byte ptr [ecx], 0; add cl, al; jmp 0x5ebcd226; pop edi; ret; 
0x00068d8f: add byte ptr [ecx], 0xe9; jmp ecx; 
0x000b567c: add byte ptr [ecx], ah; ret 0x2474; 
0x00071f21: add byte ptr [ecx], ah; ret 0xc483; 
0x0002e30f: add byte ptr [ecx], ah; ret; 
0x00192dff: add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [esi], eax; pop ss; bnd call dword ptr [ebx - 0x18]; 
0x0018cbef: add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [esi], edx; jns 0x18cbeb; call dword ptr [ebx - 0x18]; 
0x001932ff: add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [edi], cl; test esi, esp; adc dh, dl; call dword ptr [ebx - 0x18]; 
0x0018f0ff: add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [edi], cl; test esi, esp; push esp; bnd call dword ptr [ebx - 0x18]; 
0x00083780: add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x00083991: add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x00169ff9: add byte ptr [ecx], al; add byte ptr [eax], al; add cl, ch; ret 0xfffe; 
0x0002ffdb: add byte ptr [ecx], al; add byte ptr [eax], al; and eax, dword ptr [esp + 8]; ret; 
0x00121af8: add byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001261fd: add byte ptr [ecx], al; add byte ptr [eax], al; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x001287f2: add byte ptr [ecx], al; add byte ptr [eax], al; mov eax, edx; ret; 
0x00121ab9: add byte ptr [ecx], al; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x001167d9: add byte ptr [ecx], al; add byte ptr [eax], al; mov word ptr [eax + 0x16], dx; ret; 
0x000b559b: add byte ptr [ecx], al; add byte ptr [eax], al; or cl, cl; jne 0xb55a5; xor eax, eax; ret; 
0x00057a5c: add byte ptr [ecx], al; add byte ptr [eax], al; or eax, 7; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x000ff1b8: add byte ptr [ecx], al; add byte ptr [eax], al; push eax; push edx; call ebx; 
0x0002fc77: add byte ptr [ecx], al; add byte ptr [eax], al; ret; 
0x000b54db: add byte ptr [ecx], al; add byte ptr [eax], al; sub eax, edx; ret; 
0x00124143: add byte ptr [ecx], al; add byte ptr [ebx - 0x72dfdb8c], cl; xchg dh, cl; push ebp; stc; call dword ptr [eax - 0x18]; 
0x00080f0f: add byte ptr [ecx], al; add esp, 4; pop ebx; pop esi; ret; 
0x000847d7: add byte ptr [ecx], al; add esp, 4; pop esi; pop edi; ret; 
0x00130917: add byte ptr [ecx], al; call eax; 
0x001308c7: add byte ptr [ecx], al; call edx; 
0x000b3737: add byte ptr [ecx], al; clc; add eax, ecx; pop edi; ret; 
0x000952fc: add byte ptr [ecx], al; fidivr dword ptr [ecx]; ret 0xa72; 
0x0009bfff: add byte ptr [ecx], al; lea edx, [edx - 0xaf040]; cmove eax, edx; ret; 
0x00131bff: add byte ptr [ecx], al; lea edx, [edx - 0xaf060]; cmove eax, edx; ret; 
0x0009c0df: add byte ptr [ecx], al; lea edx, [edx - 0xaf660]; cmove eax, edx; ret; 
0x0013070e: add byte ptr [ecx], al; mov dword ptr [ebp - 0x44], edx; call eax; 
0x0016fe5f: add byte ptr [ecx], al; ret 0x1deb; 
0x000ef95e: add byte ptr [ecx], al; ret 0x4489; 
0x0014c363: add byte ptr [ecx], al; ret 0x5052; 
0x001273eb: add byte ptr [ecx], al; ret 0x8389; 
0x0016aeaa: add byte ptr [ecx], al; ret 0x858b; 
0x00061d88: add byte ptr [ecx], al; ret; 
0x00035e23: add byte ptr [ecx], al; ror dword ptr [ecx - 0x74f3dbac], 0x44; and al, 0x10; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x000dfdae: add byte ptr [ecx], al; sbb dword ptr [ebp + esi*2 + 0xc], edx; lea esi, [esi]; mov eax, 0x40; ret; 
0x000b58ef: add byte ptr [ecx], al; xor eax, eax; pop ebx; ret; 
0x0003e67c: add byte ptr [ecx], bh; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00084dd7: add byte ptr [ecx], bh; bnd jbe 0x84e18; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x000cce5f: add byte ptr [ecx], bh; cmp dword ptr [eax + 0x3d], 0; add byte ptr [edi], cl; xchg ebp, eax; ret 0xb38b; 
0x00097e4d: add byte ptr [ecx], bh; fisttp qword ptr [ebp - 0x6af0f798]; ret; 
0x0002585f: add byte ptr [ecx], bh; jmp 0x25872; test dword ptr [esi - 0x75000000], edx; jl 0x2588f; sub byte ptr [ebp - 0x6955f79], cl; call dword ptr [eax - 0x73]; 
0x0010f1fa: add byte ptr [ecx], bh; ret 0x420f; 
0x000357d4: add byte ptr [ecx], bh; ret 0x430f; 
0x0007c89f: add byte ptr [ecx], bh; ret 0x448b; 
0x0014023a: add byte ptr [ecx], bh; ret 0x460f; 
0x000cc8c8: add byte ptr [ecx], bh; ret 0x470f; 
0x0008a82f: add byte ptr [ecx], bh; ret 0x4e0f; 
0x0014cba7: add byte ptr [ecx], bh; ret 0x5473; 
0x0008cb9a: add byte ptr [ecx], bh; ret 0x6174; 
0x0008d2f6: add byte ptr [ecx], bh; ret 0x6574; 
0x0008c24d: add byte ptr [ecx], bh; ret 0x7e74; 
0x0006dcf4: add byte ptr [ecx], bh; ret 0x820f; 
0x0008bfb4: add byte ptr [ecx], bh; ret 0x840f; 
0x0007ce43: add byte ptr [ecx], bh; ret 0x860f; 
0x000cd69b: add byte ptr [ecx], bh; ret 0x870f; 
0x000fcc28: add byte ptr [ecx], bh; ret 0xe74; 
0x00040f12: add byte ptr [ecx], bh; ret; 
0x00152b9f: add byte ptr [ecx], bh; retf 0xec75; add esp, 8; pop ebx; ret; 
0x0016309b: add byte ptr [ecx], bh; sal byte ptr [eax + ecx + 0x5b], 1; pop esi; pop edi; ret; 
0x000424e6: add byte ptr [ecx], bl; ret 0xba; 
0x000ee44f: add byte ptr [ecx], ch; fadd dword ptr [ecx]; ret 0x9aeb; 
0x0009cdce: add byte ptr [ecx], ch; fdivr dword ptr [ecx]; fmul dword ptr [edi]; inc edx; ret; 
0x00026934: add byte ptr [ecx], ch; fmul dword ptr [ecx - 0x76fe743e]; ret; 
0x000263e7: add byte ptr [ecx], ch; jmp 0x26378; inc ebx; add ecx, dword ptr [edi]; dec ecx; ret; 
0x000c28c4: add byte ptr [ecx], ch; ret 0x1a8b; 
0x000c2fc9: add byte ptr [ecx], ch; ret 0x28b; 
0x000c2e7c: add byte ptr [ecx], ch; ret 0x3a8b; 
0x000d099c: add byte ptr [ecx], ch; ret 0x448b; 
0x000d2c73: add byte ptr [ecx], ch; ret 0x448d; 
0x000d5bf6: add byte ptr [ecx], ch; ret 0x468b; 
0x000d2bdb: add byte ptr [ecx], ch; ret 0x548d; 
0x0009ff94: add byte ptr [ecx], ch; ret 0x5589; 
0x000d4d5d: add byte ptr [ecx], ch; ret 0x858b; 
0x0005b61e: add byte ptr [ecx], ch; ret 0x953b; 
0x000c2c58: add byte ptr [ecx], ch; ret 0xa8b; 
0x000d135c: add byte ptr [ecx], ch; ret 0xbe0f; 
0x0013b9f3: add byte ptr [ecx], ch; ret 0xc031; 
0x000cc523: add byte ptr [ecx], ch; ret 0xc889; 
0x000cf6cb: add byte ptr [ecx], ch; ret 0xd129; 
0x0005be0f: add byte ptr [ecx], ch; ret 0xd189; 
0x0009e08b: add byte ptr [ecx], ch; ret 0xd801; 
0x00044456: add byte ptr [ecx], ch; ret 0xd889; 
0x00099445: add byte ptr [ecx], ch; ret 0xda21; 
0x0002c6e8: add byte ptr [ecx], ch; ret 0xf883; 
0x000c8770: add byte ptr [ecx], ch; ret 0xf889; 
0x00024cbc: add byte ptr [ecx], ch; ret 0xfa83; 
0x0002c625: add byte ptr [ecx], ch; ret; 
0x00035bce: add byte ptr [ecx], ch; rol ecx, 1; call 0x10ed1cf6; or eax, ecx; ret; 
0x000fd0ec: add byte ptr [ecx], cl; ret 0x840f; 
0x00047bb8: add byte ptr [ecx], cl; ret 0x9f74; 
0x000c17b0: add byte ptr [ecx], cl; ret 0xa074; 
0x0019d0e5: add byte ptr [ecx], cl; ret 0xb60f; 
0x0019d8df: add byte ptr [ecx], cl; ret 0xbc89; 
0x000980ee: add byte ptr [ecx], cl; ret; 
0x00146845: add byte ptr [ecx], cl; ror byte ptr [ebx + 0x390c2454], 1; ret 0x307e; 
0x00071b8c: add byte ptr [ecx], cl; ror byte ptr [ecx + 0x14c48303], 1; pop ebx; pop esi; ret; 
0x00035c16: add byte ptr [ecx], cl; ror byte ptr [ecx - 0x24f3dbbc], 1; insb byte ptr es:[edi], dx; and al, 4; ret; 
0x0014ceb0: add byte ptr [ecx], dh; call dword ptr [eax - 0x18]; 
0x000b5fa7: add byte ptr [ecx], dh; fild dword ptr [ebp - 0x760d8b37]; ret; 
0x00104639: add byte ptr [ecx], dh; fisttp dword ptr [ecx + 0x1242484]; add byte ptr [eax], al; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x001268d8: add byte ptr [ecx], dh; idiv byte ptr [ebx + 0x18]; or dh, 1; call dword ptr gs:[0x10]; 
0x00125d38: add byte ptr [ecx], dh; idiv byte ptr [ebx + 0xe]; or dh, 1; call dword ptr gs:[0x10]; 
0x00084a54: add byte ptr [ecx], dh; idiv byte ptr [edx + 0x7fffffff]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00085555: add byte ptr [ecx], dh; idiv byte ptr [edx + 1]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008e08c: add byte ptr [ecx], dh; leave; lock cmpxchg dword ptr [edx], ecx; mov eax, 0x10; cmove eax, ecx; ret; 
0x00088ea9: add byte ptr [ecx], dh; leave; mov eax, 0xf0; mov ebx, ebp; mov esi, ecx; call dword ptr gs:[0x10]; 
0x0013e811: add byte ptr [ecx], dh; mul byte ptr [esi - 0x77]; inc ebp; mov ah, 0x8b; test dword ptr [edi + edi*8 - 1], ebp; jmp dword ptr [esi - 0x77]; 
0x000918f5: add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x00099373: add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x001569f7: add byte ptr [ecx], dh; rol byte ptr [eax + 0x440f0038], cl; ret 0x5e5b; 
0x0008c138: add byte ptr [ecx], dh; rol byte ptr [eax + 0xf00197d], cl; xchg ebp, eax; ret 0xe2c1; 
0x0008c881: add byte ptr [ecx], dh; rol byte ptr [eax + 0xf00197f], cl; xchg ebp, eax; ret 0xe2c1; 
0x00049044: add byte ptr [ecx], dh; rol byte ptr [ebx + 0x440ffff8], cl; ret 0x3c83; 
0x000fbc5f: add byte ptr [ecx], dh; rol byte ptr [ecx + 0xc0fefb], cl; add byte ptr [edi], cl; xchg ebp, eax; ret 0x548d; 
0x00088a14: add byte ptr [ecx], dh; ror byte ptr [ebx - 0x41f7dbb4], cl; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001046f7: add byte ptr [ecx], dh; ror byte ptr [ecx + 0x8bee9], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0004ef3f: add byte ptr [ecx], dh; ror byte ptr [ecx + 0xf983da], 0x19; ret 0xba; 
0x000424df: add byte ptr [ecx], dh; ror byte ptr [ecx + 0xfb83f2], 0x19; ret 0xba; 
0x000506e2: add byte ptr [ecx], dh; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000886d9: add byte ptr [ecx], dh; sal al, cl; cmpxchg dword ptr [esp + 4], edx; ret; 
0x000843b5: add byte ptr [ecx], dh; sal bl, 0xa5; pop esi; pop edi; ret; 
0x00086c18: add byte ptr [ecx], dh; sar byte ptr [ecx + 0x80], cl; mov eax, edi; mov esi, edx; call dword ptr gs:[0x10]; 
0x00086ba2: add byte ptr [ecx], dh; sar byte ptr [esi + 0x53053053], cl; lea ebx, [eax + 0x520]; mov eax, 0x182; call dword ptr gs:[0x10]; 
0x0010a7af: add byte ptr [ecx], dh; shr bl, 0xdc; lea esi, [esi]; mov edx, dword ptr [esp + 0xa8]; mov eax, 0x133; call dword ptr gs:[0x10]; 
0x00172a6b: add byte ptr [ecx], dh; shr byte ptr [edx], 0x8d; xchg dword ptr [esi + 0x31], esi; stc; call dword ptr [eax + 0x6a]; 
0x00084f91: add byte ptr [ecx], dh; test byte ptr [ebx - 0xe7fdbf4], -0x7f; mov dword ptr [ebp + edx*4 + 8], 0; mov edx, 0x7fffffff; call dword ptr gs:[0x10]; 
0x0016c11f: add byte ptr [ecx], dh; test byte ptr [ebx - 0xf76fb3c], 0x5b; pop esi; ret; 
0x0008b53a: add byte ptr [ecx], dh; test byte ptr [ecx + 0x80e1], 0; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00072dd9: add byte ptr [edi + 0x196882], al; add byte ptr [ebx + 0xb7f01f8], al; ret; 
0x0007be59: add byte ptr [edi + 0x197c82], al; add byte ptr [ebx + 0xb7f01f8], al; ret; 
0x00080f69: add byte ptr [edi + 0x199c82], al; add byte ptr [ebx + 0xb7f01f8], al; ret; 
0x0007ec4f: add byte ptr [edi + 0x199c83], al; add byte ptr [ebx + 0x357f01f8], al; add esp, 8; pop ebx; ret; 
0x00058c3c: add byte ptr [edi + 0x1f88302], al; jg 0x58c48; ret; 
0x00123874: add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x00162d49: add byte ptr [edi + 0x31], dl; call dword ptr [esi - 0x18]; 
0x0015923f: add byte ptr [edi + 0x31], dl; call dword ptr [esi - 0x42]; 
0x00095855: add byte ptr [edi + 0x3b5c86], al; add byte ptr [ebx - 0x70f0fe08], al; ret 0; 
0x00120d17: add byte ptr [edi + 0x452083], al; add byte ptr [ebx - 0x71f0fe08], al; ret; 
0x0014f765: add byte ptr [edi + 0x53], dl; call edx; 
0x00073749: add byte ptr [edi + 0x56], dl; push ebx; call dword ptr [ebp + 0x24]; 
0x000a5871: add byte ptr [edi + 0x5b], bl; ret; 
0x00021971: add byte ptr [edi + 0x5d], bl; jmp eax; 
0x000abb5f: add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000c9b54: add byte ptr [edi + 0x5e], bl; ret; 
0x00084862: add byte ptr [edi + 0xb], dh; ret; 
0x00111a97: add byte ptr [edi + 0xf], bl; inc edi; ret 0x66c3; 
0x000c9cd4: add byte ptr [edi + 2], bh; neg eax; ret; 
0x00191934: add byte ptr [edi + 2], dh; neg eax; add esp, 4; pop ebp; pop ebx; ret; 
0x0018f0a4: add byte ptr [edi + 2], dh; neg eax; add esp, 4; pop ebx; ret; 
0x0018c9f4: add byte ptr [edi + 2], dh; neg eax; pop ebp; ret; 
0x00193684: add byte ptr [edi + 2], dh; neg eax; pop edi; pop ebp; pop ebx; ret; 
0x00193124: add byte ptr [edi + 2], dh; neg eax; pop edi; pop ebx; ret; 
0x0018b1b4: add byte ptr [edi + 2], dh; neg eax; ret; 
0x00193cda: add byte ptr [edi + 3], bh; neg eax; ret; 
0x0006fd3a: add byte ptr [edi + 7], dh; mov eax, dword ptr [ecx + edx*4 - 0xbe0]; ret; 
0x0013390f: add byte ptr [edi + 7], dh; sar eax, 5; add esp, 0xc; ret; 
0x001117e6: add byte ptr [edi + 8], bh; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00194005: add byte ptr [edi + 8], bh; neg eax; ret; 
0x00198044: add byte ptr [edi + 9], bh; neg eax; pop edi; pop esi; pop ebx; ret; 
0x000c9ca4: add byte ptr [edi + 9], bh; neg eax; pop edi; pop esi; ret; 
0x000df9f9: add byte ptr [edi + eax*2], 0xf9; call dword ptr [eax + 0x53]; 
0x000dfa56: add byte ptr [edi + eax*2], 0xf9; call dword ptr [eax - 1]; 
0x000df73e: add byte ptr [edi + ebp - 0x75], dh; pop esp; and al, 0x30; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x000df7ee: add byte ptr [edi + ebp - 0x75], dh; pop esp; and al, 0x30; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x0009b3e5: add byte ptr [edi + ecx], al; inc ebp; ret 0x66c3; 
0x000b818e: add byte ptr [edi + edi*2 - 0x7d], dh; ret; 
0x0012402c: add byte ptr [edi + edi*8], bl; inc dword ptr [ebx - 0x77cef3c]; push dword ptr [esp - 0x7d]; in al, dx; add al, 0x89; ret; 
0x0014e3e6: add byte ptr [edi - 0x18], dl; ret; 
0x00197924: add byte ptr [edi - 0x73000000], 0x40; add al, 0x5f; ret; 
0x001968e4: add byte ptr [edi - 0x73000000], 0x47; add al, 0x5f; ret; 
0x0015fa52: add byte ptr [edi - 0x75], dl; inc esp; and al, 0x48; call dword ptr [eax + 0x14]; 
0x0009bfbe: add byte ptr [edi - 0xb], dh; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x0016420c: add byte ptr [edi - 1], dh; inc dword ptr [ebx - 0x77cef3c]; add dword ptr [eax + 1], edi; sbb eax, -1; add esp, 0xc; ret; 
0x0016d927: add byte ptr [edi], 0x66; stc; call dword ptr [eax - 0x18]; 
0x00162d46: add byte ptr [edi], ch; add byte ptr [edi + 0x31], dl; call dword ptr [esi - 0x18]; 
0x0009bf98: add byte ptr [edi], ch; cmc; dec dword ptr [ebx + 0x18499]; add dh, dh; ret; 
0x000517fe: add byte ptr [edi], ch; jbe 0x5178d; ret 0x40c7; 
0x001516b4: add byte ptr [edi], ch; je 0x15171c; mov byte ptr [ebx + 0x8258], 0; mov dword ptr [ebx + 0x8248], 0; call esi; 
0x000f752f: add byte ptr [edi], cl; dec eax; ror byte ptr [eax - 0x7cefdbac], 1; rol dword ptr [ecx], 0x83; ret; 
0x0002e55a: add byte ptr [edi], cl; dec ebp; ret 0xec83; 
0x0004ef4d: add byte ptr [edi], cl; dec ebp; ror dword ptr [edi], 1; dec ebp; ret; 
0x000d50a6: add byte ptr [edi], cl; dec ecx; ret 0x1c8d; 
0x000d4f48: add byte ptr [edi], cl; dec ecx; ret 0xd801; 
0x0006e9b9: add byte ptr [edi], cl; dec ecx; ret; 
0x000d3235: add byte ptr [edi], cl; dec edi; ret; 
0x00091351: add byte ptr [edi], cl; dec esi; ret 0x8389; 
0x0004f864: add byte ptr [edi], cl; dec esi; ret 0x9d8d; 
0x000f2745: add byte ptr [edi], cl; dec esi; ret 0xc085; 
0x00052b32: add byte ptr [edi], cl; dec esi; ret 0xec83; 
0x0004bb0d: add byte ptr [edi], cl; dec esi; ret; 
0x000f247d: add byte ptr [edi], cl; dec esp; ret 0xc183; 
0x0014306d: add byte ptr [edi], cl; dec esp; ret; 
0x0009246c: add byte ptr [edi], cl; inc ebp; ret 0x45c7; 
0x000eac3b: add byte ptr [edi], cl; inc ebp; ret 0x5e5b; 
0x000d70b1: add byte ptr [edi], cl; inc ebp; ret 0x8dc3; 
0x000dfe5a: add byte ptr [edi], cl; inc ebp; ret 0x90c3; 
0x000dfd0b: add byte ptr [edi], cl; inc ebp; ret 0xb8c3; 
0x000a1701: add byte ptr [edi], cl; inc ebp; ret 0xc289; 
0x00091252: add byte ptr [edi], cl; inc ebp; ret 0xc3c3; 
0x00124810: add byte ptr [edi], cl; inc ebp; ret; 
0x000d8d72: add byte ptr [edi], cl; inc ebx; int1; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00111aef: add byte ptr [edi], cl; inc edi; ret 0x548b; 
0x0008d79e: add byte ptr [edi], cl; inc edi; ret 0x8dc3; 
0x0008df23: add byte ptr [edi], cl; inc edi; ret 0x948b; 
0x000cc5d3: add byte ptr [edi], cl; inc edi; ret 0x960f; 
0x0009458e: add byte ptr [edi], cl; inc edi; ror dword ptr [ecx + 0x3b6c82], 0; ret; 
0x00154d79: add byte ptr [edi], cl; inc edx; ret 0x4489; 
0x001408af: add byte ptr [edi], cl; inc edx; ret 0x8dc3; 
0x0012599a: add byte ptr [edi], cl; inc edx; ret 0x90c3; 
0x000c5094: add byte ptr [edi], cl; inc esp; ret 0x108b; 
0x0008bd3c: add byte ptr [edi], cl; inc esp; ret 0x118b; 
0x000e0cc2: add byte ptr [edi], cl; inc esp; ret 0x31c3; 
0x000c514a: add byte ptr [edi], cl; inc esp; ret 0x4489; 
0x000b6782: add byte ptr [edi], cl; inc esp; ret 0x44c7; 
0x00139b68: add byte ptr [edi], cl; inc esp; ret 0x4589; 
0x001569fc: add byte ptr [edi], cl; inc esp; ret 0x5e5b; 
0x000dfdf9: add byte ptr [edi], cl; inc esp; ret 0x66c3; 
0x00168023: add byte ptr [edi], cl; inc esp; ret 0x8589; 
0x000b6943: add byte ptr [edi], cl; inc esp; ret 0x8b65; 
0x00084758: add byte ptr [edi], cl; inc esp; ret 0x8dc3; 
0x000dfc5a: add byte ptr [edi], cl; inc esp; ret 0xc35b; 
0x000b64fd: add byte ptr [edi], cl; inc esp; ret 0xff50; 
0x000d37e0: add byte ptr [edi], cl; inc esp; ret; 
0x000377ff: add byte ptr [edi], cl; inc esp; sar byte ptr [esi + 8], 1; mov eax, 0xae; call dword ptr gs:[0x10]; 
0x0014ba68: add byte ptr [edi], cl; lahf; ret 0xd009; 
0x0004836f: add byte ptr [edi], cl; mov bh, 0x9a; inc ebp; stc; dec dword ptr [ebx - 0x1336e]; jmp dword ptr [esi - 0x77]; 
0x001922e4: add byte ptr [edi], cl; mov dh, 0x12; sub eax, edx; ret; 
0x000eeb5d: add byte ptr [edi], cl; mov dh, 0x14; add eax, dword ptr [ecx]; ret 0xb60f; 
0x000f6036: add byte ptr [edi], cl; mov dh, 0x43; add al, 0x89; ret 0xe283; 
0x000693d7: add byte ptr [edi], cl; mov dh, 0x44; or al, ah; mov ecx, dword ptr [edx + eax*4 - 0x738e0]; add ecx, ebp; jmp ecx; 
0x00069337: add byte ptr [edi], cl; mov dh, 0x44; or al, ah; mov ecx, dword ptr [edx + eax*4 - 0x739e0]; add ecx, ebp; jmp ecx; 
0x00068d87: add byte ptr [edi], cl; mov dh, 0x44; or al, ah; mov ecx, dword ptr [edx + eax*4]; add ecx, ebp; jmp ecx; 
0x0007b207: add byte ptr [edi], cl; mov dh, 0x45; aam 0x89; ret 0xf889; 
0x0018c958: add byte ptr [edi], cl; mov dh, 0x48; add eax, 0x542b60f; sub eax, ecx; pop ebp; ret; 
0x000fd86f: add byte ptr [edi], cl; mov dh, 0x4a; or cl, ch; ret 0xfff8; 
0x000fbc4f: add byte ptr [edi], cl; mov dh, 0x50; or dword ptr [ebx + 0x5e], ebx; and edx, 0xf; mov eax, edx; ret; 
0x0005722f: add byte ptr [edi], cl; mov dh, 0x55; or al, 0xf6; ret 0xf01; 
0x000573b9: add byte ptr [edi], cl; mov dh, 0x55; or al, 0xf6; ret 0xf40; 
0x0006b676: add byte ptr [edi], cl; mov dh, 0x57; or al, 0xf6; ret 0xf08; 
0x00140747: add byte ptr [edi], cl; mov dh, 0x5a; add dword ptr [ebp - 0x76fde7bc], ecx; ret; 
0x0014081f: add byte ptr [edi], cl; mov dh, 0x6a; add dword ptr [ebp - 0x76fdd7bc], ecx; ret; 
0x00083138: add byte ptr [edi], cl; mov dh, 0xc0; mov dword ptr [edx + 8], eax; mov byte ptr gs:[0x4fe], 0; mov dword ptr gs:[0x7c], edx; ret; 
0x00082890: add byte ptr [edi], cl; mov dh, 0xd2; mov dword ptr [eax + 0x24], edx; mov byte ptr gs:[0x4fe], 0; mov dword ptr gs:[0x80], eax; ret; 
0x0018c8b8: add byte ptr [edi], cl; mov dh, 8; movzx eax, byte ptr [edx]; sub eax, ecx; pop ebp; ret; 
0x0008bbc1: add byte ptr [edi], cl; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000b3fcf: add byte ptr [edi], cl; mov ebp, 0x30ea83c0; add edx, eax; jl 0xb4000; lea eax, [ecx + eax + 0x10]; ret; 
0x000b3864: add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x0013b9ec: add byte ptr [edi], cl; mov edi, 0x2cc86; add byte ptr [ecx], ch; ret 0xc031; 
0x000fc45f: add byte ptr [edi], cl; mov esi, 0x83df89ca; ret; 
0x000b3cbf: add byte ptr [edi], cl; mov esp, 0x5ff801c0; ret; 
0x000b3cef: add byte ptr [edi], cl; mov esp, 0x76c229c0; cmp dword ptr [ecx], eax; clc; pop edi; ret; 
0x000afcbf: add byte ptr [edi], cl; mov esp, 0x83ce01d2; ret 0x2910; 
0x0007c899: add byte ptr [edi], cl; mov word ptr [eax + 0x39000001], fs; ret 0x448b; 
0x00040431: add byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00020f3e: add byte ptr [edi], cl; or eax, dword ptr [ebx + 0x7400d07d]; sbb eax, 0xff0cec83; jne 0x20f19; call dword ptr [ebp - 0x38]; 
0x000cf9bb: add byte ptr [edi], cl; sahf; ret 0xd329; 
0x0003d714: add byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; aad 1; ret 0xf089; 
0x00145f5b: add byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; ret; 
0x000ccfcd: add byte ptr [edi], cl; test byte ptr [eax + eax - 0x137d0000], cl; or byte ptr [ebp - 0x6baf47d], cl; call dword ptr [eax + 0x56]; 
0x001601cd: add byte ptr [edi], cl; test byte ptr [eax + eax - 0x7c730000], ch; add cl, byte ptr [edx - 7]; call dword ptr [esi + 0x57]; 
0x00197aaf: add byte ptr [edi], cl; test byte ptr [eax + eax], bh; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x000db92f: add byte ptr [edi], cl; test byte ptr [eax - 0x16000002], bh; ret 0xfffc; 
0x00197a5f: add byte ptr [edi], cl; test byte ptr [eax - 0x48000000], bh; or byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x00189e03: add byte ptr [edi], cl; test byte ptr [eax - 0x7cffffed], dh; ret 0x8308; 
0x00191d4e: add byte ptr [edi], cl; test byte ptr [ebx - 0x7d000000], cl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x0002dbb5: add byte ptr [edi], cl; test byte ptr [ecx + eax], bl; add byte ptr [ebx - 0x1337d], cl; jmp dword ptr [ebp - 0x75]; 
0x000fef81: add byte ptr [edi], cl; test byte ptr [edi - 0x16000003], cl; ret; 
0x000a6a92: add byte ptr [edi], cl; test byte ptr [edi], al; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00156a42: add byte ptr [edi], cl; test byte ptr [edx], ch; add eax, dword ptr [eax]; add byte ptr [ebx - 0x7c72f314], al; les esp, ptr [edx - 7]; call dword ptr [eax - 0x18]; 
0x00197a06: add byte ptr [edi], cl; test ch, bh; add byte ptr [eax], al; add byte ptr [eax + 4], bh; pop edi; ret; 
0x000a6a3c: add byte ptr [edi], cl; test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00197a4c: add byte ptr [edi], cl; test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x0013b9c9: add byte ptr [edi], cl; test dl, bh; add al, byte ptr [eax]; add byte ptr [ebx - 0x1337a], cl; jmp dword ptr [ebp - 0x75]; 
0x00192b4f: add byte ptr [edi], cl; test dword ptr [eax + 2], edx; add byte ptr [eax], al; pop ebx; ret; 
0x0019244f: add byte ptr [edi], cl; test dword ptr [eax + 9], edx; add byte ptr [eax], al; pop ebx; ret; 
0x000f75ad: add byte ptr [edi], cl; test dword ptr [eax - 0x7c000005], ecx; ret 0x8301; 
0x000d1a65: add byte ptr [edi], cl; test dword ptr [eax], ebp; loope 0xd1a6a; call dword ptr [edi + 0x57]; 
0x00193f3c: add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000000], edi; ret; 
0x00192bfa: add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000001], esp; ret; 
0x00192a1a: add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000003], eax; ret; 
0x001924ea: add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000008], esi; ret; 
0x00192844: add byte ptr [edi], cl; test dword ptr [ebp + 5], eax; add byte ptr [eax], al; pop ebx; ret; 
0x00192616: add byte ptr [edi], cl; test dword ptr [ebx + 7], esi; add byte ptr [eax], al; pop ebx; ret; 
0x00116d8a: add byte ptr [edi], cl; test dword ptr [ebx - 0x7d000000], esp; les ebx, ptr [eax]; mov eax, ebx; pop ebx; ret; 
0x0016627c: add byte ptr [edi], cl; test dword ptr [ebx - 0x7d000000], esp; les edx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0019271e: add byte ptr [edi], cl; test dword ptr [ecx + 0x5b000006], eax; ret; 
0x00193eb0: add byte ptr [edi], cl; test dword ptr [ecx + 1], ecx; add byte ptr [eax], al; pop ebx; ret; 
0x0019082e: add byte ptr [edi], cl; test dword ptr [ecx - 0x7cfffff2], ebp; std; adc byte ptr [ebp - 0x79f00f93], cl; call dword ptr [eax]; 
0x00159183: add byte ptr [edi], cl; test dword ptr [ecx - 0x7d000000], ebx; les esi, ptr [ebx + ebx*2]; pop esi; ret; 
0x00125ff6: add byte ptr [edi], cl; test dword ptr [ecx - 0x7d000000], edx; les esp, ptr [eax + 0x5b]; pop esi; pop edi; ret; 
0x00192693: add byte ptr [edi], cl; test dword ptr [edi + eax], ecx; add byte ptr [eax], al; pop ebx; ret; 
0x0005b344: add byte ptr [edi], cl; test dword ptr [edi + edi*8 - 1], ecx; dec dword ptr [ebx - 0x45773]; inc dword ptr [ebp - 0x74818a37]; test dword ptr [edx + edi*8 - 1], esp; jmp dword ptr [ebp - 0x75]; 
0x001658e8: add byte ptr [edi], cl; test dword ptr [edi - 0x7d000000], esp; les edx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0007cbb1: add byte ptr [edi], cl; test dword ptr [edi], ebx; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e5b80ec], al; pop edi; ret; 
0x000b639f: add byte ptr [edi], cl; test dword ptr [edi], ecx; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x0019967f: add byte ptr [edi], cl; test dword ptr [edx - 0x76fffffe], edx; ret; 
0x000f1896: add byte ptr [edi], cl; test dword ptr [edx - 0x7cfffff9], ebp; rol byte ptr [ecx], 0x83; ret 0x3b20; 
0x0010ac8d: add byte ptr [edi], cl; test dword ptr [edx - 0x7d000000], edi; les esp, ptr [ebx + ebx*2]; pop esi; ret; 
0x000535cb: add byte ptr [edi], cl; test dword ptr [esi - 0x9fffffc], ebp; ret 0xf50; 
0x00192e03: add byte ptr [edi], cl; test dword ptr [esi], eax; pop ss; bnd call dword ptr [ebx - 0x18]; 
0x00192e03: add byte ptr [edi], cl; test dword ptr [esi], eax; pop ss; bnd call dword ptr [ebx - 0x18]; jmp 0x82192c00; ret; 
0x0018cbf3: add byte ptr [edi], cl; test dword ptr [esi], edx; jns 0x18cbeb; call dword ptr [ebx - 0x18]; 
0x000dda2c: add byte ptr [edi], cl; test eax, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b64c4], al; ret; 
0x00078acf: add byte ptr [edi], cl; test eax, ebp; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b30c4], al; pop edi; ret; 
0x0018c22a: add byte ptr [edi], cl; test ebp, edi; add eax, 0xfd830000; adc byte ptr [ebp - 0x79f00f93], cl; ret; 
0x00084c91: add byte ptr [edi], cl; test edi, ebp; add byte ptr [eax], al; add byte ptr [ecx + 0x94c4], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00193303: add byte ptr [edi], cl; test esi, esp; adc dh, dl; call dword ptr [ebx - 0x18]; 
0x00193303: add byte ptr [edi], cl; test esi, esp; adc dh, dl; call dword ptr [ebx - 0x18]; jmp 0x821930fb; ret; 
0x0018f103: add byte ptr [edi], cl; test esi, esp; push esp; bnd call dword ptr [ebx - 0x18]; 
0x0018f103: add byte ptr [edi], cl; test esi, esp; push esp; bnd call dword ptr [ebx - 0x18]; jmp 0x8218ef3d; ret; 
0x00081a7d: add byte ptr [edi], cl; test esp, edx; add byte ptr [eax], al; add byte ptr [ebx - 0x72aff314], al; sub dword ptr [ebx + 0x3e], -7; call dword ptr [ecx + 0x52]; 
0x000b61f0: add byte ptr [edi], cl; xchg dword ptr [ecx - 0x7d000000], eax; sti; push dword ptr [esp + edi*2 - 0x77]; fdiv st(7); ret; 
0x0007ff62: add byte ptr [edi], cl; xchg ebp, eax; ret 0x40c7; 
0x000fbc67: add byte ptr [edi], cl; xchg ebp, eax; ret 0x548d; 
0x0019dbef: add byte ptr [edi], cl; xchg ebp, eax; ret 0x940b; 
0x000b967f: add byte ptr [edi], cl; xchg ebp, eax; ret 0x9eb; 
0x000cce65: add byte ptr [edi], cl; xchg ebp, eax; ret 0xb38b; 
0x000c1de0: add byte ptr [edi], cl; xchg ebp, eax; ret 0xd839; 
0x0008c02c: add byte ptr [edi], cl; xchg ebp, eax; ret 0xe2c1; 
0x00041ab6: add byte ptr [edi], cl; xchg ebp, eax; ret 0xea81; 
0x000cb731: add byte ptr [edi], cl; xchg ebp, eax; ret; 
0x000eab3e: add byte ptr [edi], cl; xchg ebp, eax; rol byte ptr [ebx - 0x3ffefb3c], 0x5b; pop esi; ret; 
0x0004d4bc: add byte ptr [edi], cl; xchg ebp, eax; ror byte ptr [edi], 0x95; ret; 
0x000ced41: add byte ptr [edi], cl; xchg edx, eax; ret 0xc281; 
0x000e1249: add byte ptr [edi], cl; xchg esi, eax; ret 0xc085; 
0x0010cb45: add byte ptr [edi], cl; xchg esp, eax; ret 0x458b; 
0x0010ea77: add byte ptr [edi], cl; xchg esp, eax; ret 0x798b; 
0x000c5ed2: add byte ptr [edi], cl; xchg esp, eax; ret 0x8589; 
0x0012daf2: add byte ptr [edi], cl; xchg esp, eax; ret 0xc085; 
0x000499db: add byte ptr [edi], cl; xchg esp, eax; ret; 
0x000dfd8b: add byte ptr [edx + 0x40], bh; cmove eax, edx; ret; 
0x0002475c: add byte ptr [edx + 0x50], dl; call 0x8bf40; add esp, 0x1c; ret; 
0x00161355: add byte ptr [edx + 0x53], dl; call dword ptr [eax + 4]; 
0x0015db78: add byte ptr [edx + 0x56], dl; call dword ptr [eax + 4]; 
0x0015894a: add byte ptr [edx + 0x59], bl; push 0; push esi; call dword ptr [eax + 0x14]; 
0x000b6267: add byte ptr [edx + 0x59], bl; push ebx; push dword ptr [edi]; call esi; 
0x000ac05f: add byte ptr [edx + 0x5f178816], cl; pop esi; pop ebx; ret; 
0x0011f2cd: add byte ptr [edx + 0x64], bh; mov eax, dword ptr [eax - 0xc8]; mov eax, dword ptr [eax + 0x24]; test eax, eax; cmove eax, edx; ret; 
0x001626c0: add byte ptr [edx + 0x6a], dl; add al, 0x53; call dword ptr [eax]; 
0x000dfcc2: add byte ptr [edx + 0x7d00], bh; pop ebx; cmove eax, edx; ret; 
0x00084fa1: add byte ptr [edx + 0x7fffffff], bh; call dword ptr gs:[0x10]; 
0x000dfc85: add byte ptr [edx + 0x7fffffff], bh; pop ebx; cmove eax, edx; ret; 
0x0008c0c1: add byte ptr [edx + 0x7fffffff], bh; setne cl; shl ecx, 7; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008d295: add byte ptr [edx + 0x7fffffff], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008a376: add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008505f: add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008c4db: add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000857e6: add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x001728e4: add byte ptr [edx + 0xf], dh; xchg esp, eax; ret; 
0x000dfce4: add byte ptr [edx + 0xfa], bh; pop ebx; cmove eax, edx; ret; 
0x000dfca7: add byte ptr [edx + 0xfde8], bh; pop ebx; cmove eax, edx; ret; 
0x000dfc55: add byte ptr [edx + 0xfffa], bh; cmove eax, edx; pop ebx; ret; 
0x0011af02: add byte ptr [edx + 1], bh; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00083784: add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x0016f07a: add byte ptr [edx + 1], bh; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0007b067: add byte ptr [edx + 1], bh; mov eax, edx; ret; 
0x0011668d: add byte ptr [edx + 1], bh; mov edi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0014e2cf: add byte ptr [edx + 1], bh; pop ebx; pop esi; mov eax, edx; ret; 
0x0008328e: add byte ptr [edx + 1], bh; push ebx; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00085adb: add byte ptr [edx + 1], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008b535: add byte ptr [edx + 1], bh; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00083995: add byte ptr [edx + 1], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008502d: add byte ptr [edx + 1], bh; xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00085cb7: add byte ptr [edx + 1], bh; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00077f28: add byte ptr [edx + 1], ch; push 0; push 0; push dword ptr [esp + 0x18]; call dword ptr [ebx + 0x40]; 
0x0007d3d4: add byte ptr [edx + 1], ch; push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x00079f98: add byte ptr [edx + 1], ch; push 0; push dword ptr [esp + 0x1c]; call 0x739b0; add esp, 0x1c; ret; 
0x0008f028: add byte ptr [edx + 1], ch; push eax; call 0x82fd0; add esp, 0x2c; ret; 
0x000831b2: add byte ptr [edx + 2], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x00083231: add byte ptr [edx + 2], bh; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00077ccb: add byte ptr [edx + 2], ch; push 0; push 0; push dword ptr [esp + 0x18]; call dword ptr [edi + 0x40]; 
0x0007130d: add byte ptr [edx + 2], ch; push 0; push 0; push ebp; call dword ptr [esi + 0x40]; 
0x0007e072: add byte ptr [edx + 2], ch; push 0; push 0; push ebx; call dword ptr [esi + 0x40]; 
0x0007d2bd: add byte ptr [edx + 2], ch; push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x0014d8e1: add byte ptr [edx + ecx - 0x7d], dh; inc eax; or byte ptr [ecx], al; je 0x14d90d; add esp, 0xc; ret; 
0x000a3d6f: add byte ptr [edx - 0x76fd77ff], cl; clc; pop edi; ret; 
0x0011f18b: add byte ptr [edx - 0x77], dh; ret 0xdeb; 
0x00191c24: add byte ptr [edx - 1], bh; cmovbe eax, edx; pop esi; pop ebp; pop ebx; ret; 
0x000dfcfc: add byte ptr [edx - 1], bh; pop ebx; cmp dword ptr [ecx + eax], 0x26; mov eax, 0x7f; cmovne eax, edx; ret; 
0x000b4e56: add byte ptr [edx - 9], al; ret 3; 
0x000c688d: add byte ptr [edx], 0; add byte ptr [ebx - 0x363743], al; call dword ptr [eax]; 
0x0010264d: add byte ptr [edx], 0x4a; stc; call dword ptr [eax + 0x6a]; 
0x0015d878: add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [0xac], al; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x00164023: add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebp - 0xc5d7f7d], cl; call dword ptr [eax - 0x73]; 
0x0015e593: add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebp - 0xcb79f7d], cl; call dword ptr [eax - 0x73]; 
0x0004a9ff: add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ecx + ebx*2 - 0x77], dh; ret 0xc031; 
0x000300a1: add byte ptr [edx], al; add byte ptr [eax], al; mov dword ptr [eax + ebx], edx; pop ebx; pop esi; ret; 
0x00128e74: add byte ptr [edx], al; add byte ptr [eax], al; mov eax, edx; ret; 
0x000a5ccc: add byte ptr [edx], al; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0002fb87: add byte ptr [edx], al; add byte ptr [eax], al; ret; 
0x0012dc47: add byte ptr [edx], al; call dword ptr [ebp + 0x14]; 
0x0012ed95: add byte ptr [edx], al; call dword ptr [ebx + 0x14]; 
0x0012d9fd: add byte ptr [edx], al; call dword ptr [esi + 0x14]; 
0x0012ceb7: add byte ptr [edx], al; call eax; 
0x0012cdaa: add byte ptr [edx], al; mov eax, dword ptr [esp + 0x20]; call dword ptr [eax + 0x14]; 
0x0012d036: add byte ptr [edx], al; push eax; call dword ptr [edi + 0x14]; 
0x0008fe9e: add byte ptr [edx], al; ret; 
0x000df648: add byte ptr [edx], ch; call 0xdf5e0; add esp, 0x1c; ret; 
0x000b67f7: add byte ptr [edx], ch; lea edx, [esp + 0x34]; push edx; push dword ptr [edi + 8]; call ebx; 
0x000b67f5: add byte ptr [edx], ch; push 0; lea edx, [esp + 0x34]; push edx; push dword ptr [edi + 8]; call ebx; 
0x00119308: add byte ptr [edx], ch; push 0; push dword ptr [esp + 0x1c]; call 0x58600; add esp, 0x1c; ret; 
0x00022627: add byte ptr [edx], ch; push 0; push eax; push dword ptr [ebx + 4]; call esi; 
0x0008f387: add byte ptr [edx], ch; push 1; push eax; call 0x82fd0; add esp, 0x2c; ret; 
0x0007d1b1: add byte ptr [edx], ch; push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; push esi; call dword ptr [edx + 0x40]; 
0x00077f2c: add byte ptr [edx], ch; push dword ptr [esp + 0x18]; call dword ptr [ebx + 0x40]; 
0x00077ccf: add byte ptr [edx], ch; push dword ptr [esp + 0x18]; call dword ptr [edi + 0x40]; 
0x001735d9: add byte ptr [edx], ch; push dword ptr [esp + 0x18]; push dword ptr [esp + 0x18]; push esi; call dword ptr [edx + 0x40]; 
0x00162af4: add byte ptr [edx], ch; push dword ptr [esp + 0x1c]; call 0x162970; add esp, 0x10; add esp, 0xc; ret; 
0x0011930a: add byte ptr [edx], ch; push dword ptr [esp + 0x1c]; call 0x58600; add esp, 0x1c; ret; 
0x00077b7a: add byte ptr [edx], ch; push dword ptr [esp + 0x28]; push dword ptr [esp + 0x28]; mov esi, dword ptr [esp + 0x18]; push esi; call dword ptr [edi + 0x40]; 
0x0003063e: add byte ptr [edx], ch; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x31290; add esp, 0x2c; ret; 
0x000886ba: add byte ptr [edx], ch; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x886f0; add esp, 0x2c; ret; 
0x00022629: add byte ptr [edx], ch; push eax; push dword ptr [ebx + 4]; call esi; 
0x00071311: add byte ptr [edx], ch; push ebp; call dword ptr [esi + 0x40]; 
0x0007d95f: add byte ptr [edx], ch; push ebp; push edi; push ebx; call dword ptr [esi + 0x40]; 
0x0007e66b: add byte ptr [edx], ch; push ebx; call dword ptr [ebp + 0x24]; 
0x00080736: add byte ptr [edx], ch; push ebx; call dword ptr [ebp + 0x2c]; 
0x00173d2b: add byte ptr [edx], ch; push ebx; call dword ptr [edi + 0x24]; 
0x0007e076: add byte ptr [edx], ch; push ebx; call dword ptr [esi + 0x40]; 
0x000778ee: add byte ptr [edx], ch; push ebx; push ecx; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x40]; 
0x0007cfbf: add byte ptr [edx], ch; push ebx; push ecx; push esi; call dword ptr [ebp + 0x40]; 
0x000818b9: add byte ptr [edx], ch; push ecx; push edx; call 0x16df30; add esp, 0x1c; ret; 
0x00164729: add byte ptr [edx], ch; push edi; call dword ptr [eax + 0x14]; 
0x0015aa50: add byte ptr [edx], ch; push esi; call dword ptr [eax + 0x14]; 
0x0007d2c1: add byte ptr [edx], ch; push esi; call dword ptr [ebx + 0x40]; 
0x00162c4c: add byte ptr [esi + 0x11], bh; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0019d8d4: add byte ptr [esi + 0x25], ah; add byte ptr [eax - 0x6bdb5377], al; add byte ptr [eax], al; add byte ptr [ecx], cl; ret 0xbc89; 
0x0019366f: add byte ptr [esi + 0x31], bl; rcr byte ptr [edi + 0x5d], 0x5b; ret; 
0x0008bece: add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x75]; pop esp; and al, 0x10; mov dword ptr [ebx], 0; call dword ptr gs:[0x10]; 
0x0003ec3c: add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x0009b3b3: add byte ptr [esi + 0x440fffe7], 0xc2; ret; 
0x00116a66: add byte ptr [esi + 0x53], dl; mov ebx, edx; mov ecx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x001217c9: add byte ptr [esi + 0x53], dl; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00159ede: add byte ptr [esi + 0x56], dl; push edi; push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x34]; call eax; 
0x0004aea4: add byte ptr [esi + 0x5f], bl; ret; 
0x0016c0c6: add byte ptr [esi + 0x728d0000], ah; jmp dword ptr [esi - 0x7d]; 
0x000af620: add byte ptr [esi + 0xf], ah; adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000a3eff: add byte ptr [esi + 0xf], ah; adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000a5dcf: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x000a5def: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x000a5dff: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x000a5ddf: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000a5e0f: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x000ac45f: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [edi - 1]; pop edi; pop esi; pop ebx; ret; 
0x000ac46f: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [edi]; pop edi; pop esi; pop ebx; ret; 
0x000b340f: add byte ptr [esi + 0xf], ah; adc ebx, dword ptr [eax + 0xe]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aff7c: add byte ptr [esi + 0xf], ah; adc ebx, dword ptr [eax + 0xe]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b342f: add byte ptr [esi + 0xf], ah; adc ebx, dword ptr [eax + 0xf]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aff9c: add byte ptr [esi + 0xf], ah; adc ebx, dword ptr [eax + 0xf]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b32ef: add byte ptr [esi + 0xf], ah; adc ecx, dword ptr [eax + 5]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afe6c: add byte ptr [esi + 0xf], ah; adc ecx, dword ptr [eax + 5]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b330f: add byte ptr [esi + 0xf], ah; adc ecx, dword ptr [eax + 6]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afe8c: add byte ptr [esi + 0xf], ah; adc ecx, dword ptr [eax + 6]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b332f: add byte ptr [esi + 0xf], ah; adc ecx, dword ptr [eax + 7]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afeac: add byte ptr [esi + 0xf], ah; adc ecx, dword ptr [eax + 7]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000affdc: add byte ptr [esi + 0xf], ah; adc edx, dword ptr [eax + 0x10]; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b001f: add byte ptr [esi + 0xf], ah; adc edx, dword ptr [eax + 0x10]; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b003f: add byte ptr [esi + 0xf], ah; adc edx, dword ptr [eax + 0x10]; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b344f: add byte ptr [esi + 0xf], ah; adc edx, dword ptr [eax + 0x10]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000affbc: add byte ptr [esi + 0xf], ah; adc edx, dword ptr [eax + 0x10]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b0000: add byte ptr [esi + 0xf], ah; adc edx, dword ptr [eax + 0x10]; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00193923: add byte ptr [esi + 0xf], ah; cmp ah, byte ptr [ebx - 0x35]; add cl, byte ptr [edi]; xchg esp, eax; ret; 
0x000b3f6d: add byte ptr [esi + 0xf], ah; je 0xb3fbb; and byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x316575c0], 0xc0; ret; 
0x0017b08f: add byte ptr [esi + 0xf], ah; outsb dx, byte ptr [esi]; shl byte ptr [esi + 0xf], 0x70; rol byte ptr [eax], 0xf7; ret 0xf; 
0x0017f4fb: add byte ptr [esi + 0xf], ah; salc; add cl, byte ptr [ebx + 0x5b082444]; ret; 
0x000b3bd1: add byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x000b3eba: add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000b3edf: add byte ptr [esi + 0xf], ah; xlatb; ror dword ptr [edi], 0xbd; rol byte ptr [ecx], 0xc8; ret; 
0x00094399: add byte ptr [esi + 4], dh; ret; 
0x000872e3: add byte ptr [esi + 8], bh; call dword ptr gs:[0x10]; 
0x00038595: add byte ptr [esi + 8], bh; mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x00086a33: add byte ptr [esi + 8], bh; mov edx, edi; lea ecx, [eax + 0x47c]; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x000c1a56: add byte ptr [esi + eax - 0x77], dh; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x00150d67: add byte ptr [esi - 0x18], dl; xchg edi, eax; adc byte ptr [edx], al; add byte ptr [ecx + 0xd9292c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x0014321f: add byte ptr [esi - 0x3f], ah; ret 0x8308; 
0x0014276e: add byte ptr [esi - 0x3f], ah; ret; 
0x0015b1ad: add byte ptr [esi - 0x70], ah; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x000b3ccd: add byte ptr [esi - 0x70], ah; bsf eax, eax; lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x00092f6d: add byte ptr [esi - 0x70], ah; endbr32; call 0x171e01; add eax, 0x197087; mov dword ptr [eax + 0x3b04], 0; ret; 
0x0007f9dd: add byte ptr [esi - 0x70], ah; endbr32; mov eax, 0xffffffff; ret; 
0x00080ead: add byte ptr [esi - 0x70], ah; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x0007eeed: add byte ptr [esi - 0x70], ah; endbr32; mov eax, dword ptr [esp + 4]; test byte ptr [eax], 0x80; jne 0x7ef00; ret; 
0x00118cdd: add byte ptr [esi - 0x70], ah; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x33; call dword ptr gs:[0x10]; 
0x001587ed: add byte ptr [esi - 0x70], ah; endbr32; ret; 
0x000865cd: add byte ptr [esi - 0x70], ah; endbr32; xor eax, eax; ret; 
0x000d718d: add byte ptr [esi - 0x70], ah; lea ecx, [esp + 0x14]; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x0002ed4d: add byte ptr [esi - 0x70], ah; lea edx, [ecx - 0x6d179]; mov eax, edx; pop ebx; ret; 
0x000a827d: add byte ptr [esi - 0x70], ah; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; ret; 
0x000acb4d: add byte ptr [esi - 0x70], ah; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x000a828d: add byte ptr [esi - 0x70], ah; mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; ret; 
0x000a3e9d: add byte ptr [esi - 0x70], ah; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edx; ret; 
0x000a5d9d: add byte ptr [esi - 0x70], ah; mov dword ptr [ecx], edx; mov word ptr [ecx + 4], dx; pop ebx; ret; 
0x000ac41d: add byte ptr [esi - 0x70], ah; mov dword ptr [edi - 1], edx; pop edi; pop esi; pop ebx; ret; 
0x000ac42d: add byte ptr [esi - 0x70], ah; mov dword ptr [edi], edx; pop edi; pop esi; pop ebx; ret; 
0x0008462d: add byte ptr [esi - 0x70], ah; mov eax, 0x16; ret; 
0x000dfd1d: add byte ptr [esi - 0x70], ah; mov eax, 0x7e; pop ebx; ret; 
0x000dfd2d: add byte ptr [esi - 0x70], ah; mov eax, 0xfffa; pop ebx; ret; 
0x0011f5cd: add byte ptr [esi - 0x70], ah; mov eax, dword ptr [eax + 0x368]; mov ecx, dword ptr [esp + 8]; mov dword ptr [ecx], eax; mov eax, 1; ret; 
0x0016313d: add byte ptr [esi - 0x70], ah; mov eax, dword ptr [ebx - 0xcc]; pop ebx; pop esi; pop edi; ret; 
0x00115aad: add byte ptr [esi - 0x70], ah; mov ebx, dword ptr [esp + 0x20]; lea edx, [esp + 4]; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x000a5dbd: add byte ptr [esi - 0x70], ah; movlpd qword ptr [ecx], xmm0; pop ebx; ret; 
0x00198c1d: add byte ptr [esi - 0x70], ah; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x0008c66c: add byte ptr [esi - 0x70], ah; nop; endbr32; nop; xor eax, eax; ret; 
0x00131acb: add byte ptr [esi - 0x70], ah; nop; endbr32; ret; 
0x0008e04b: add byte ptr [esi - 0x70], ah; nop; endbr32; xor eax, eax; ret; 
0x0008472d: add byte ptr [esi - 0x70], ah; or dword ptr [ecx + 8], 0x40; xor eax, eax; mov dword ptr [ecx + 4], edx; ret; 
0x001920dd: add byte ptr [esi - 0x70], ah; pop esi; pop edi; xor eax, eax; pop ebp; ret; 
0x0013128d: add byte ptr [esi - 0x70], ah; xor eax, eax; pop ebx; ret; 
0x0003a1fd: add byte ptr [esi - 0x70], ah; xor eax, eax; ret; 
0x000a1e4d: add byte ptr [esi - 0x70], ah; xor edx, edx; pop ebx; mov eax, edx; ret; 
0x0008b8ed: add byte ptr [esi - 0x70], ah; xor edx, edx; xor cl, 0x87; mov eax, 0xf0; mov esi, edx; call dword ptr gs:[0x10]; 
0x000b338e: add byte ptr [esi - 0x77], ah; dec eax; adc byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000afefb: add byte ptr [esi - 0x77], ah; dec eax; adc byte ptr [ebx + 0x5e082444], cl; ret; 
0x000ac40f: add byte ptr [esi - 0x77], ah; pop ss; pop edi; pop esi; pop ebx; ret; 
0x000b328e: add byte ptr [esi - 0x77], ah; push eax; or byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000afe0b: add byte ptr [esi - 0x77], ah; push eax; or byte ptr [ebx + 0x5e082444], cl; ret; 
0x001167dc: add byte ptr [esi - 0x77], ah; push eax; push ss; ret; 
0x001983e7: add byte ptr [esi - 0x77], dl; ret 0x348d; 
0x00198387: add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x000df014: add byte ptr [esi - 0x77], dl; ret; 
0x000fbbba: add byte ptr [esi - 0x7d], ah; stc; add dh, byte ptr [edi + ecx - 0x77]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0013ed2f: add byte ptr [esi - 0x7d], ah; sti; adc al, 0xf; xchg esp, eax; ret; 
0x0016f606: add byte ptr [esi - 0x7d], dl; ret; 
0x0010442c: add byte ptr [esi - 9], ah; ret 0xff00; 
0x000abe9a: add byte ptr [esi], 0; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0016139b: add byte ptr [esi], al; add byte ptr [eax], al; sub esp, 0xc; mov eax, dword ptr [ebp + 0x3c]; push ebx; call dword ptr [eax + 0x10]; 
0x00118029: add byte ptr [esp + ebp - 0x75], dh; pop esp; and al, 0x30; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x001180c9: add byte ptr [esp + ebp - 0x75], dh; pop esp; and al, 0x30; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x000da7e9: add byte ptr [esp + ebp - 0x75], dh; pop esp; and al, 0x30; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x0009a1a6: add byte ptr [esp + ebx - 0x7d], dh; in al, dx; or byte ptr [ebp - 0x6bc737a], cl; call dword ptr [ebx + 0x50]; 
0x00197ae7: add byte ptr [esp + ebx*2 - 0x48], dh; adc byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x000ccfcc: add byte ptr ds:[edi], cl; test byte ptr [eax + eax - 0x137d0000], cl; or byte ptr [ebp - 0x6baf47d], cl; call dword ptr [eax + 0x56]; 
0x0005b343: add byte ptr ds:[edi], cl; test dword ptr [edi + edi*8 - 1], ecx; dec dword ptr [ebx - 0x45773]; inc dword ptr [ebp - 0x74818a37]; test dword ptr [edx + edi*8 - 1], esp; jmp dword ptr [ebp - 0x75]; 
0x0008e1de: add byte ptr es:[eax + 0x10], bh; add esp, 0xc; ret; 
0x000a5e1d: add byte ptr es:[eax + 0x1130f66], dl; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000a5e2d: add byte ptr es:[eax + 0x1130f66], dl; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000a5e3d: add byte ptr es:[eax + 0x1130f66], dl; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x0008496e: add byte ptr es:[eax + 0x16], bh; pop ebx; ret; 
0x000a812d: add byte ptr es:[eax + 0x16f0ff3], dl; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000a3d5d: add byte ptr es:[eax + 0x16f0ff3], dl; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000af68e: add byte ptr es:[eax + 0x18a017a], cl; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x0018b1ad: add byte ptr es:[eax + 0x1b8], dl; add byte ptr [edi + 2], dh; neg eax; ret; 
0x0003dffd: add byte ptr es:[eax + 0x244cb60f], dl; and al, 0x39; ret; 
0x0003d7dd: add byte ptr es:[eax + 0x244cb60f], dl; sbb byte ptr [ecx], bh; ret; 
0x0018b11d: add byte ptr es:[eax + 0x248b60f], dl; movzx eax, byte ptr [edx + 2]; sub eax, ecx; ret; 
0x0005930d: add byte ptr es:[eax + 0x3224858d], dl; stc; call dword ptr [esi - 0x77]; 
0x0018b12d: add byte ptr es:[eax + 0x348b60f], dl; movzx eax, byte ptr [edx + 3]; sub eax, ecx; ret; 
0x00041ccd: add byte ptr es:[eax + 0x36e85755], dl; add dword ptr [ebx], edx; add byte ptr [ecx + 0x1e8329c7], al; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x000c2c85: add byte ptr es:[eax + 0x3901c083], dl; ret; 
0x0012c05d: add byte ptr es:[eax + 0x39ff438d], dl; lds ecx, ptr [edi]; xchg dword ptr [0x89000002], edx; ret; 
0x000dfdb6: add byte ptr es:[eax + 0x40], bh; ret; 
0x0018b13d: add byte ptr es:[eax + 0x448b60f], dl; movzx eax, byte ptr [edx + 4]; sub eax, ecx; ret; 
0x00192abd: add byte ptr es:[eax + 0x486f0ff3], dl; ret; 
0x000a5d8d: add byte ptr es:[eax + 0x51881189], dl; add al, 0x5b; ret; 
0x00065ddd: add byte ptr es:[eax + 0x5304ec83], dl; push dword ptr [esp + 0x14]; push ebp; call dword ptr [eax + 0x1c]; 
0x0018b14d: add byte ptr es:[eax + 0x548b60f], dl; movzx eax, byte ptr [edx + 5]; sub eax, ecx; ret; 
0x0009e89d: add byte ptr es:[eax + 0x5b04c483], dl; pop esi; ret; 
0x000a5d5d: add byte ptr es:[eax + 0x5b118966], dl; ret; 
0x000ac3fd: add byte ptr es:[eax + 0x5e5f1788], dl; pop ebx; ret; 
0x00195cfd: add byte ptr es:[eax + 0x5f01478d], dl; ret; 
0x00075bed: add byte ptr es:[eax + 0x619be8], dl; add bl, ch; ret 0xb48d; 
0x0018b15d: add byte ptr es:[eax + 0x648b60f], dl; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x0007f4fd: add byte ptr es:[eax + 0x6a08ec83], dl; call dword ptr [esi - 0x18]; 
0x000fda3e: add byte ptr es:[eax + 0x74000978], al; sbb ecx, dword ptr [ecx - 0x7ccf7427]; ret; 
0x0007178d: add byte ptr es:[eax + 0x7420c2f6], dl; adc ecx, dword ptr [ebx - 0x13371]; jmp dword ptr [ebp - 0x75]; 
0x000c6be5: add byte ptr es:[eax + 0x7565f883], dl; sbb dword ptr [ebx - 0x361f7b], ecx; inc dword ptr [ebx - 0x363743]; call dword ptr [eax]; 
0x00127085: add byte ptr es:[eax + 0x92b8], dl; add byte ptr [ebx - 0x4f763], cl; dec dword ptr [ebx - 0x4fb73]; jmp dword ptr [ebp - 1]; 
0x001040fd: add byte ptr es:[eax + 0x9b85b], dl; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x00041aad: add byte ptr es:[eax + 0xa9d231], dl; add byte ptr [eax], dl; add byte ptr [edi], cl; xchg ebp, eax; ret 0xea81; 
0x00126c35: add byte ptr es:[eax + 0xc24448b], dl; mov edx, dword ptr [edx]; mov dword ptr [eax], edx; mov eax, 1; ret; 
0x00093d9d: add byte ptr es:[eax + 0xc244c8d], dl; mov eax, 0x105; call dword ptr gs:[0x10]; 
0x0018b0fd: add byte ptr es:[eax + 0xf08b60f], dl; mov dh, 2; sub eax, ecx; ret; 
0x0014a1d5: add byte ptr es:[eax + 0xf2efa80], dl; xchg esp, eax; ret 0xc083; 
0x000a1afd: add byte ptr es:[eax + 0xff42c6], dl; mov dword ptr [esi], edx; pop ebx; pop esi; ret; 
0x000c9cce: add byte ptr es:[eax + 1], bh; jg 0xc9cd9; neg eax; ret; 
0x00198c7d: add byte ptr es:[eax - 0x2d43f00d], dl; mov eax, 0x20; add eax, edx; ret; 
0x000c9f85: add byte ptr es:[eax - 0x37763e77], dl; ret; 
0x000b933d: add byte ptr es:[eax - 0x3917a8ab], dl; mov cl, byte ptr [ebx]; add byte ptr [ecx + 0x170cb9c7], al; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x000ed35d: add byte ptr es:[eax - 0x3f7cef09], dl; add al, 0x39; ret 0xf775; 
0x0015883d: add byte ptr es:[eax - 0x47fb3b7d], dl; adc byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x00150155: add byte ptr es:[eax - 0x47fb3b7d], dl; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x00149805: add byte ptr es:[eax - 0x48], dl; call ptr [ebx + 0x5e]; pop edi; ret; 
0x001922dd: add byte ptr es:[eax - 0x49f0f18e], dl; add byte ptr [edi], cl; mov dh, 0x12; sub eax, edx; ret; 
0x000801bd: add byte ptr es:[eax - 0x4e1f00d], dl; mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x000a20f5: add byte ptr es:[eax - 0x72cd769a], dl; inc edx; add dword ptr [ebx + 0x5e], ebx; ret; 
0x0013bfad: add byte ptr es:[eax - 0x72f7137d], dl; xchg edi, eax; push esi; pop esp; stc; call dword ptr [edx + 0x50]; 
0x0011f5b5: add byte ptr es:[eax - 0x74bbbf75], dl; dec esp; and al, 8; mov dword ptr [ecx], eax; mov eax, 1; ret; 
0x0016ea95: add byte ptr es:[eax - 0x74f7137d], dl; and dword ptr [eax + 0x51000003], 0x52; call dword ptr [eax + 0x24]; 
0x00104b3d: add byte ptr es:[eax - 0x74fbac75], dl; inc ebx; or byte ptr [ecx], bh; ret 0x840f; 
0x0007af2d: add byte ptr es:[eax - 0x76b7b175], dl; ret; 
0x0016b1bd: add byte ptr es:[eax - 0x76efbd75], dl; ret 0xf839; 
0x0008c94d: add byte ptr es:[eax - 0x76ffba75], dl; ret 0xe283; 
0x00171f8d: add byte ptr es:[eax - 0x77c2dcf], dl; dec dword ptr [edi]; xchg esp, eax; ret 0x1389; 
0x000fc455: add byte ptr es:[eax - 0x7bf02d7c], dl; nop; add al, 0; add byte ptr [edi], cl; mov esi, 0x83df89ca; ret; 
0x00091fad: add byte ptr es:[eax - 0x7c00bc73], dl; ljmp 0x8956:0x7edb8510; ret; 
0x000c4a05: add byte ptr es:[eax - 0x7c03af73], dl; cli; add ecx, dword ptr [edi]; xchg esi, eax; ret 0xd284; 
0x0004930d: add byte ptr es:[eax - 0x7c40fb73], dl; ret; 
0x001241ed: add byte ptr es:[eax - 0x7c76f373], dl; ret 0x8d01; 
0x001918bd: add byte ptr es:[eax - 0x7cf73f7d], dl; ret 0x8308; 
0x0018b16d: add byte ptr es:[eax - 0x7cf73f7d], dl; ret 0xf608; 
0x00154685: add byte ptr es:[eax - 0x7cfbbc75], dl; ret; 
0x000a264d: add byte ptr es:[eax - 0x7cfe49f1], dl; rol dword ptr [ecx], 0x83; ret 0xf01; 
0x00142305: add byte ptr es:[eax - 0x7cfffc3a], dl; les ecx, ptr [eax]; pop ebx; ret; 
0x0010aefd: add byte ptr es:[eax - 0x887a418], dl; dec dword ptr [ebx - 0x76dfdba4]; ret 0x6b8; 
0x0006774e: add byte ptr es:[eax - 0x89843], al; jmp dword ptr [eax]; 
0x0006c666: add byte ptr es:[eax - 0x8bc43], al; jmp dword ptr [eax]; 
0x00118d7d: add byte ptr es:[eax - 0x9662418], dl; dec dword ptr [ebx - 0x76dfdba4]; ret 0x76b8; 
0x00118e5d: add byte ptr es:[eax - 0x9670418], dl; dec dword ptr [ebx - 0x76dfdba4]; ret 0x94b8; 
0x00132d25: add byte ptr es:[eax - 0xabc18], dl; jmp dword ptr [esi - 0x70]; 
0x00132f35: add byte ptr es:[eax - 0xccc18], dl; jmp dword ptr [esi - 0x70]; 
0x00132fdd: add byte ptr es:[eax - 0xd7418], dl; jmp dword ptr [esi - 0x70]; 
0x0003827e: add byte ptr es:[eax], al; add byte ptr [eax - 1], bh; ret; 
0x00196feb: add byte ptr es:[eax], al; add byte ptr [eax], al; add edx, 0xa; jl 0x197040; lea eax, [ecx + 0xa]; ret; 
0x00196ffb: add byte ptr es:[eax], al; add byte ptr [eax], al; add edx, 0xb; jl 0x197040; lea eax, [ecx + 0xb]; ret; 
0x0019700b: add byte ptr es:[eax], al; add byte ptr [eax], al; add edx, 0xd; jl 0x197040; lea eax, [ecx + 0xd]; ret; 
0x0019701b: add byte ptr es:[eax], al; add byte ptr [eax], al; add edx, 0xe; jl 0x197040; lea eax, [ecx + 0xe]; ret; 
0x0019702b: add byte ptr es:[eax], al; add byte ptr [eax], al; add edx, 0xf; jl 0x197040; lea eax, [ecx + 0xf]; ret; 
0x00196fcb: add byte ptr es:[eax], al; add byte ptr [eax], al; add edx, 7; jl 0x197040; lea eax, [ecx + 7]; ret; 
0x00196fdb: add byte ptr es:[eax], al; add byte ptr [eax], al; add edx, 9; jl 0x197040; lea eax, [ecx + 9]; ret; 
0x0002277b: add byte ptr es:[eax], al; add byte ptr [eax], al; add esp, 4; pop ebx; pop esi; ret; 
0x00132cdb: add byte ptr es:[eax], al; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0010415b: add byte ptr es:[eax], al; add byte ptr [eax], al; add esp, 8; xor eax, eax; pop ebx; ret; 
0x000b3cbb: add byte ptr es:[eax], al; add byte ptr [eax], al; bsf eax, eax; add eax, edi; pop edi; ret; 
0x000b3cdb: add byte ptr es:[eax], al; add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edi + 0x20]; pop edi; ret; 
0x0008bcbb: add byte ptr es:[eax], al; add byte ptr [eax], al; cmp edx, 1; je 0x8bcd0; mov eax, 0x16; ret; 
0x00171a3b: add byte ptr es:[eax], al; add byte ptr [eax], al; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x0006973b: add byte ptr es:[eax], al; add byte ptr [eax], al; jmp eax; 
0x001982cb: add byte ptr es:[eax], al; add byte ptr [eax], al; lea eax, [ecx + 8]; ret; 
0x000b5fd3: add byte ptr es:[eax], al; add byte ptr [eax], al; lea ebx, [eax + 4]; mov eax, ebx; pop ebx; ret; 
0x00122183: add byte ptr es:[eax], al; add byte ptr [eax], al; lea ecx, [esp + 0xc]; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x000fb12b: add byte ptr es:[eax], al; add byte ptr [eax], al; lea ecx, [esp + 4]; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x001959b5: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; add eax, 1; ret; 
0x00133aa8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; and eax, 0xffffff; ret; 
0x000b43b8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x000b3f88: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; bsr eax, eax; lea eax, [eax + ecx + 0x10]; ret; 
0x0003a2e8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; call dword ptr [ebx]; 
0x0009a1e7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; endbr32; mov eax, 0xffffffff; ret; 
0x001585c7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; endbr32; mov eax, 1; ret; 
0x00082d37: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; endbr32; ret; 
0x00080e97: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; endbr32; xor eax, eax; ret; 
0x001982c4: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 8]; ret; 
0x00195d77: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xa]; pop edi; ret; 
0x00195d87: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xb]; pop edi; ret; 
0x00195d97: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xc]; pop edi; ret; 
0x00195da7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xd]; pop edi; ret; 
0x00195db7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xe]; pop edi; ret; 
0x00195d07: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 2]; pop edi; ret; 
0x00195d17: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 3]; pop edi; ret; 
0x00195d27: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 4]; pop edi; ret; 
0x00195d37: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 5]; pop edi; ret; 
0x00195d47: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 6]; pop edi; ret; 
0x00195d57: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 8]; pop edi; ret; 
0x00195d67: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 9]; pop edi; ret; 
0x001961d7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xa]; pop edi; ret; 
0x001961c7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xb]; pop edi; ret; 
0x001961b7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xd]; pop edi; ret; 
0x001961a7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xe]; pop edi; ret; 
0x00196247: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 1]; pop edi; ret; 
0x00196237: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 2]; pop edi; ret; 
0x00196227: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 3]; pop edi; ret; 
0x00198557: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 4]; pop edi; ret; 
0x00196217: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 5]; pop edi; ret; 
0x00196207: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 6]; pop edi; ret; 
0x001961f7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 7]; pop edi; ret; 
0x001961e7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 9]; pop edi; ret; 
0x00197395: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 1]; ret; 
0x000a5d44: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov byte ptr [ecx], dl; pop ebx; ret; 
0x0008ea48: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov dword ptr [eax + 4], edx; ret; 
0x00084bb8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 0x16; ret; 
0x001495b8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 0xffffffff; pop ebx; ret; 
0x00140498: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 0xffffffff; ret; 
0x000c9ec5: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 1; ret; 
0x000c9ed8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 2; ret; 
0x000c9ee8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 3; ret; 
0x000c9ef8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 4; ret; 
0x000c9f08: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 5; ret; 
0x000c9f18: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 6; ret; 
0x000c9f28: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 7; ret; 
0x00198297: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, ecx; ret; 
0x000c9ea6: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; add eax, 3; ret; 
0x00196d96: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 0xa]; ret; 
0x00196da6: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 0xb]; ret; 
0x00196db6: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 0xd]; ret; 
0x00196dc6: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 0xe]; ret; 
0x00196dd6: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 0xf]; ret; 
0x00196d36: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 2]; ret; 
0x00196d46: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 3]; ret; 
0x00196d56: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 5]; ret; 
0x00196d66: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 6]; ret; 
0x00196d76: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 7]; ret; 
0x00196d86: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 9]; ret; 
0x00197406: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 0xa]; ret; 
0x00197416: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 0xc]; ret; 
0x00197426: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 0xd]; ret; 
0x00197436: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 0xe]; ret; 
0x001973a6: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 2]; ret; 
0x001973b6: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 4]; ret; 
0x001973c6: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 5]; ret; 
0x001973d6: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 6]; ret; 
0x001973e6: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 8]; ret; 
0x001973f6: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 9]; ret; 
0x000c9eb6: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; xor eax, eax; ret; 
0x000a5d35: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; pop ebx; ret; 
0x00195dc7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; pop edi; ret; 
0x00095c98: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; ret; 
0x000a5d4b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov byte ptr [ecx], dl; pop ebx; ret; 
0x0008bd0b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, 0x16; ret; 
0x00165e0b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, 1; ret; 
0x00198c0b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; ret; 
0x001656f3: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x001982fb: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, ecx; ret; 
0x000b290b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, edi; pop ebx; pop edi; ret; 
0x001968ab: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, edi; pop edi; ret; 
0x0015145b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov ecx, 1; mov eax, ecx; ret; 
0x000a5dfb: add byte ptr es:[eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x000a5ddb: add byte ptr es:[eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000a5e0b: add byte ptr es:[eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x0018b10b: add byte ptr es:[eax], al; add byte ptr [eax], al; movzx ecx, byte ptr [eax + 1]; movzx eax, byte ptr [edx + 1]; sub eax, ecx; ret; 
0x00197afa: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; add eax, 1; pop edi; ret; 
0x000b43aa: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; bsf eax, eax; add eax, edx; ret; 
0x000b43ca: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; bsf eax, eax; lea eax, [eax + edx + 0x20]; ret; 
0x000b3f9a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; bsr eax, eax; lea eax, [eax + ecx + 0x20]; ret; 
0x000b3faa: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; bsr eax, eax; lea eax, [eax + ecx + 0x30]; ret; 
0x0007f9d9: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; endbr32; mov eax, 0xffffffff; ret; 
0x001656ba: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; endbr32; mov eax, 1; ret; 
0x0015a94a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; endbr32; mov eax, 2; ret; 
0x001587e9: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; endbr32; ret; 
0x0008010a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; endbr32; xor eax, eax; ret; 
0x000d7189: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; lea ecx, [esp + 0x14]; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x0015a2fa: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov dword ptr [eax], 0xa; pop ebx; ret; 
0x0015a30a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov dword ptr [eax], 8; pop ebx; ret; 
0x000a5d7a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov dword ptr [ecx], edx; pop ebx; ret; 
0x00084629: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, 0x16; ret; 
0x000dfd19: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, 0x7e; pop ebx; ret; 
0x000dfd29: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, 0xfffa; pop ebx; ret; 
0x000a69da: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, edx; pop ebx; ret; 
0x0013ebfa: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov ebx, dword ptr [ebx]; mov eax, 6; call dword ptr gs:[0x10]; 
0x000a5db9: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; movlpd qword ptr [ecx], xmm0; pop ebx; ret; 
0x000b00ca: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; pop esi; ret; 
0x000828fa: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; ret; 
0x00133b6a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; shr eax, 0x18; ret; 
0x00131289: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; xor eax, eax; pop ebx; ret; 
0x0003a1f9: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; xor eax, eax; ret; 
0x000831eb: add byte ptr es:[eax], al; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x000abb5b: add byte ptr es:[eax], al; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0019848b: add byte ptr es:[eax], al; add byte ptr [eax], al; pop esi; xor eax, eax; pop edi; ret; 
0x00060113: add byte ptr es:[eax], al; add byte ptr [eax], al; ret; 
0x0016e303: add byte ptr es:[eax], al; add byte ptr [eax], al; xor eax, eax; pop ebx; ret; 
0x000b40db: add byte ptr es:[eax], al; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x000dff13: add byte ptr es:[eax], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x00058a11: add byte ptr es:[eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x00131366: add byte ptr es:[ebp + 0x5b8f865], cl; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop ebp; ret; 
0x0013d626: add byte ptr es:[ebp - 0x4374b], cl; jmp dword ptr [esi - 0x70]; 
0x000b1c3e: add byte ptr es:[ebp - 0x7cc78a40], al; ret; 
0x0016f81e: add byte ptr es:[ebp - 0x7cfbdbbc], cl; ret; 
0x0003edfe: add byte ptr es:[ebx + 0x1182474], cl; ret; 
0x00150bfe: add byte ptr es:[ebx + 0x1db8200b], al; add byte ptr [eax], al; add byte ptr [ebx - 0x1336a], cl; jmp dword ptr [ebp - 0x75]; 
0x0016aa4e: add byte ptr es:[ebx + 0x2901106d], al; ret; 
0x00193c1e: add byte ptr es:[ebx + 0x31], bl; rcr byte ptr [esi + 0x5f], 0x5d; ret; 
0x0006e99e: add byte ptr es:[ebx + 0x3908245c], cl; ret; 
0x001588de: add byte ptr es:[ebx + 0x438b08ec], al; adc bh, bh; je 0x15890d; adc al, 0x56; call dword ptr [eax + 4]; 
0x000723de: add byte ptr es:[ebx + 0x5d8b08ec], al; in al, 0x6a; call dword ptr [esi - 0x18]; 
0x0009d486: add byte ptr es:[ebx + 0x708001c0], al; jmp ptr [edx]; cmp eax, edx; jne 0x9d488; mov eax, ecx; ret; 
0x0010a7b6: add byte ptr es:[ebx + 0xa82494], cl; add byte ptr [eax], al; mov eax, 0x133; call dword ptr gs:[0x10]; 
0x00143b36: add byte ptr es:[ebx - 0x1137a], cl; jmp dword ptr [ebp - 0x75]; 
0x00110276: add byte ptr es:[ebx - 0x13342], cl; jmp dword ptr [ebp - 0x5f]; 
0x001326a6: add byte ptr es:[ebx - 0x13353], cl; jmp dword ptr [ebp - 0x75]; 
0x001332ce: add byte ptr es:[ebx - 0x13365], cl; jmp dword ptr [ebp - 0x75]; 
0x00109706: add byte ptr es:[ebx - 0x1336a], cl; jmp dword ptr [ebp - 0x75]; 
0x00125c5e: add byte ptr es:[ebx - 0x1336b], cl; jmp dword ptr [ebp - 0x75]; 
0x0010bcee: add byte ptr es:[ebx - 0x1336d], cl; jmp dword ptr [ebp - 0x75]; 
0x0008ea06: add byte ptr es:[ebx - 0x13379], cl; jmp dword ptr [ebp - 0x75]; 
0x00039fbe: add byte ptr es:[ebx - 0x1337a], cl; jmp dword ptr [ebp - 0x75]; 
0x0012590e: add byte ptr es:[ebx - 0x1337d], cl; jmp dword ptr [ebp - 0x75]; 
0x001194f6: add byte ptr es:[ebx - 0x13380], cl; jmp dword ptr [ebp - 0x75]; 
0x0008534e: add byte ptr es:[ebx - 0x3e2f76ed], cl; call 0x893fc75d; clc; call dword ptr gs:[0x10]; 
0x00052cbe: add byte ptr es:[ebx - 0x3e7cfbaf], cl; add al, 0x83; ret; 
0x00058256: add byte ptr es:[ebx - 0x3fcef73c], al; pop ebx; ret; 
0x0019812e: add byte ptr es:[ebx - 0x48], bl; add dword ptr [eax], eax; add byte ptr [eax], al; jg 0x198140; neg eax; ret; 
0x0005d0ce: add byte ptr es:[ebx - 0x59b7b], cl; dec dword ptr [ebx - 0x13348]; jmp dword ptr [ebp - 0x5f]; 
0x001630a6: add byte ptr es:[ebx - 0x637d], cl; call ptr [ebx + 0x5e]; pop edi; ret; 
0x00089e46: add byte ptr es:[ebx - 0x77cf440], al; or ecx, dword ptr [edi]; xchg dword ptr [eax - 0x45000004], ebp; or dword ptr [eax], 0xa30f0000; ret 0x830f; 
0x0013ad2e: add byte ptr es:[ebx - 0x7972f314], al; cmc; pop ebx; stc; call dword ptr [eax - 0x18]; 
0x0006bdce: add byte ptr es:[ebx - 0x7a39fe20], al; inc ebx; idiv edi; jmp dword ptr [eax]; 
0x000250de: add byte ptr es:[ebx - 0x7bf0fb07], al; hlt; add dword ptr [eax], eax; add byte ptr [ebx - 0x7ce3dbbc], cl; ret 0x8301; 
0x00119886: add byte ptr es:[ebx - 0x7c72f714], al; dec eax; dec ecx; stc; call dword ptr [eax - 0x73]; 
0x0008817e: add byte ptr es:[ebx - 0x7c72f714], al; pop ebx; sub bh, cl; call dword ptr [eax - 0x73]; 
0x00132d96: add byte ptr es:[ebx - 0x7cefdbbc], cl; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0007fefe: add byte ptr es:[ecx + 0x803c48], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x34]; test eax, eax; jne 0x7ff00; ret; 
0x000a1b16: add byte ptr es:[ecx - 0x763fce3e], cl; push ss; pop ebx; pop esi; ret; 
0x000b4446: add byte ptr es:[ecx - 0x7cf5742d], cl; ret 0x8104; 
0x00084dd6: add byte ptr es:[ecx], bh; bnd jbe 0x84e18; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x0015df7e: add byte ptr es:[ecx], ch; ret; 
0x000b5fa6: add byte ptr es:[ecx], dh; fild dword ptr [ebp - 0x760d8b37]; ret; 
0x000fbc5e: add byte ptr es:[ecx], dh; rol byte ptr [ecx + 0xc0fefb], cl; add byte ptr [edi], cl; xchg ebp, eax; ret 0x548d; 
0x0010a7ae: add byte ptr es:[ecx], dh; shr bl, 0xdc; lea esi, [esi]; mov edx, dword ptr [esp + 0xa8]; mov eax, 0x133; call dword ptr gs:[0x10]; 
0x0016c11e: add byte ptr es:[ecx], dh; test byte ptr [ebx - 0xf76fb3c], 0x5b; pop esi; ret; 
0x00120d16: add byte ptr es:[edi + 0x452083], al; add byte ptr [ebx - 0x71f0fe08], al; ret; 
0x000ac3ee: add byte ptr es:[edi + 0x5e], bl; pop ebx; ret; 
0x000c9cae: add byte ptr es:[edi + 0x5e], bl; ret; 
0x0005722e: add byte ptr es:[edi], cl; mov dh, 0x55; or al, 0xf6; ret 0xf01; 
0x000a3d6e: add byte ptr es:[edx - 0x76fd77ff], cl; clc; pop edi; ret; 
0x0011f2cf: add byte ptr fs:[eax], al; add byte ptr [ebx - 0xc780], cl; dec dword ptr [ebx - 0x3f7adbc0]; cmove eax, edx; ret; 
0x00145f58: add byte ptr fs:[eax], al; add byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; ret; 
0x00116654: add byte ptr ss:[eax], al; add byte ptr [ecx + 0x5409], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00045331: add byte ptr ss:[eax], al; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000869a3: add ch, al; cmpsd dword ptr [esi], dword ptr es:[edi]; xchg esi, eax; cli; jmp dword ptr [ebp - 0x5f]; 
0x000764d5: add ch, bl; ljmp 0x5bff:0xffffffb8; ret; 
0x0015ab45: add ch, byte ptr [eax + 0x60]; and al, byte ptr [eax]; add byte ptr [ebx - 0x7f], dl; ret; 
0x000c31da: add ch, byte ptr [ecx]; ret 0x28b; 
0x000d56ee: add ch, byte ptr [ecx]; ret 0x348d; 
0x000d3bce: add ch, byte ptr [ecx]; ret 0x3c8d; 
0x000cfa48: add ch, byte ptr [ecx]; ret 0x48d; 
0x0006e9b2: add ch, byte ptr [ecx]; ret; 
0x00077ccd: add ch, byte ptr [edx]; push 0; push dword ptr [esp + 0x18]; call dword ptr [edi + 0x40]; 
0x0007130f: add ch, byte ptr [edx]; push 0; push ebp; call dword ptr [esi + 0x40]; 
0x00173d29: add ch, byte ptr [edx]; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x0007e074: add ch, byte ptr [edx]; push 0; push ebx; call dword ptr [esi + 0x40]; 
0x0007d2bf: add ch, byte ptr [edx]; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x0003e5f0: add ch, byte ptr [edx]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x3eee0; add esp, 0x1c; ret; 
0x0003e6f0: add ch, byte ptr [edx]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x451a0; add esp, 0x1c; ret; 
0x000b75e0: add ch, byte ptr [edx]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xbc4e0; add esp, 0x1c; ret; 
0x00063211: add ch, cl; dec esi; loope 0x63215; jmp dword ptr [ebp - 0x5f]; 
0x000439b2: add ch, cl; ret 0xffee; 
0x0008d651: add ch, cl; ret 0xfffc; 
0x000e6140: add ch, dh; clc; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x00118331: add cl, 0x4a; stc; call dword ptr [eax - 0x18]; 
0x00118331: add cl, 0x4a; stc; call dword ptr [eax - 0x18]; test byte ptr [esi - 0xf], dh; jmp dword ptr [esi - 0x70]; 
0x001043aa: add cl, 0xe9; add dh, bl; movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x0007be99: add cl, al; call 0x1e841a4; ret; 
0x0007beb9: add cl, al; call 0x1e841c5; ret; 
0x000829bb: add cl, al; call 0x1e8accd; mov dword ptr [edx + 0x19f0], eax; ret; 
0x00099abf: add cl, al; call 0xfd9d3d8; inc edi; ret 0xc083; 
0x00033c0e: add cl, al; cli; add al, byte ptr [ecx - 0xccc1e]; inc dword ptr [ecx]; ret 0xd089; 
0x000975df: add cl, al; in eax, dx; or al, 0x39; ror byte ptr [ecx + 0xf6c244c], 1; inc edi; ret 0x5c89; 
0x0016df1d: add cl, al; jmp 0x5ebcd226; pop edi; ret; 
0x00104368: add cl, al; jmp 0x5fbc3671; ret; 
0x00071b2c: add cl, al; ret 0x6509; 
0x000213ce: add cl, al; ret 0x8909; 
0x00120c72: add cl, al; ret 0xf009; 
0x00150dba: add cl, al; ror byte ptr [ecx], 0x89; inc esp; xchg ebx, eax; add al, 0x83; ret 0x8301; 
0x000b53f0: add cl, byte ptr [eax + 0x24448b27]; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000b31bb: add cl, byte ptr [eax + 0x448b0270]; and al, 0xc; pop ebx; pop esi; ret; 
0x0017b84d: add cl, byte ptr [eax + 0x448b5f07]; and al, 8; pop ebx; ret; 
0x000a3f1a: add cl, byte ptr [eax - 0x2f76f7be]; ret; 
0x000a3eb8: add cl, byte ptr [eax - 0x2f76fdbe]; ret; 
0x000b28a3: add cl, byte ptr [eax - 0x776f786]; pop ebx; pop edi; ret; 
0x000a3dda: add cl, byte ptr [eax - 0x776f7be]; pop edi; ret; 
0x000b256b: add cl, byte ptr [eax - 0x776fdbe]; pop ebx; pop edi; ret; 
0x000a3d98: add cl, byte ptr [eax - 0x776fdbe]; pop edi; ret; 
0x00140b06: add cl, byte ptr [eax]; pop ebx; ret; 
0x000b4fcb: add cl, byte ptr [eax]; sal byte ptr [esp + eax - 0x78], 0x64; adc dword ptr [ebx], eax; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000a9ec0: add cl, byte ptr [ebp + 0x5b5f0442]; ret; 
0x000a9ef2: add cl, byte ptr [ebp + 0x5b5f0842]; ret; 
0x000a211d: add cl, byte ptr [ebp + 0x5e5b0342]; ret; 
0x000a2131: add cl, byte ptr [ebp + 0x5e5b0442]; ret; 
0x000a2149: add cl, byte ptr [ebp + 0x5e5b0542]; ret; 
0x000a215d: add cl, byte ptr [ebp + 0x5e5b0642]; ret; 
0x0007e8b2: add cl, byte ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x000ad75b: add cl, byte ptr [ebp + 0x5e5f0347]; pop ebx; ret; 
0x0009b426: add cl, byte ptr [ebp - 0x179f1f6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0009af66: add cl, byte ptr [ebp - 0x17c21f6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0009c1d6: add cl, byte ptr [ebp - 0x181c0f6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0009c186: add cl, byte ptr [ebp - 0x18347f6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0009b4b6: add cl, byte ptr [ebp - 0x185fff6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0009b076: add cl, byte ptr [ebp - 0x18784f6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0006111d: add cl, byte ptr [ebp - 0x6276e5f4]; call 0x8a061122; ret; 
0x0016d192: add cl, byte ptr [ebp - 0x699dc80]; call dword ptr [eax - 0x18]; 
0x00147475: add cl, byte ptr [ebp - 0x6d2887d]; call dword ptr [eax + 0x51]; 
0x000a5f8a: add cl, byte ptr [ebp - 0x7af0fdb6]; cmp eax, 0x5bffffff; ret; 
0x000b601e: add cl, byte ptr [ebp - 0x924af6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0009bf6e: add cl, byte ptr [ebp - 0x95fdf6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0009c2de: add cl, byte ptr [ebp - 0x9af0f6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0009c25e: add cl, byte ptr [ebp - 0x9af3f6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0009c29e: add cl, byte ptr [ebp - 0x9d41f6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0009c21e: add cl, byte ptr [ebp - 0x9d44f6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0009b46e: add cl, byte ptr [ebp - 0x9ee3f6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x001571b0: add cl, byte ptr [ebx + 0x29eb8900]; ret; 
0x000af79a: add cl, byte ptr [ebx + 0x42890741]; pop es; mov eax, edi; pop edi; ret; 
0x0002ed8d: add cl, byte ptr [ebx + 0x58408b00]; ret; 
0x0017f4ff: add cl, byte ptr [ebx + 0x5b082444]; ret; 
0x000b31be: add cl, byte ptr [ebx + 0x5b0c2444]; pop esi; ret; 
0x000afd78: add cl, byte ptr [ebx + 0x5e082444]; ret; 
0x0002fc9d: add cl, byte ptr [ebx + 0xf042454]; mov bh, 4; push eax; and eax, 0x1000; ret; 
0x0002fc6d: add cl, byte ptr [ebx + 0xf042454]; mov bh, 4; push eax; and eax, 0x100; ret; 
0x0002fc3d: add cl, byte ptr [ebx + 0xf042454]; mov bh, 4; push eax; and eax, 0x2000; ret; 
0x0002fb7d: add cl, byte ptr [ebx + 0xf042454]; mov bh, 4; push eax; and eax, 0x200; ret; 
0x0002fbdd: add cl, byte ptr [ebx + 0xf042454]; mov bh, 4; push eax; and eax, 0x4000; ret; 
0x0002faed: add cl, byte ptr [ebx + 0xf042454]; mov bh, 4; push eax; and eax, 0x400; ret; 
0x0002fbad: add cl, byte ptr [ebx + 0xf042454]; mov bh, 4; push eax; and eax, 0x8000; ret; 
0x0002fb4d: add cl, byte ptr [ebx + 0xf042454]; mov bh, 4; push eax; and eax, 0x800; ret; 
0x0002fd4d: add cl, byte ptr [ebx + 0xf042454]; mov bh, 4; push eax; and eax, 1; ret; 
0x0002fb1d: add cl, byte ptr [ebx + 0xf042454]; mov bh, 4; push eax; and eax, 2; ret; 
0x0002fc0d: add cl, byte ptr [ebx + 0xf042454]; mov bh, 4; push eax; and eax, 4; ret; 
0x0002fabd: add cl, byte ptr [ebx + 0xf042454]; mov bh, 4; push eax; and eax, 8; ret; 
0x00076639: add cl, byte ptr [ebx - 0x2f76a4f0]; pop esi; pop edi; ret; 
0x0018ef65: add cl, byte ptr [ebx - 0x6b7f7474]; idiv edi; mov eax, dword ptr [ebx + eax*4 - 0x86b80]; sub eax, ecx; pop ebx; ret; 
0x001814df: add cl, byte ptr [ebx - 0x74f7dbbc]; dec esp; and al, 0x10; add eax, ecx; pop ebx; ret; 
0x0002fd7d: add cl, byte ptr [ebx - 0x74fbdbac]; add byte ptr [ebx - 0x7b74cfc0], cl; nop; add byte ptr [edx], al; add byte ptr [eax], al; ret; 
0x0002fdad: add cl, byte ptr [ebx - 0x74fbdbac]; add byte ptr [ebx - 0x7b74d7c0], cl; nop; add byte ptr [edx], al; add byte ptr [eax], al; ret; 
0x0002f7ad: add cl, byte ptr [ebx - 0x74fbdbac]; inc esp; nop; inc eax; ret; 
0x0008f4ef: add cl, byte ptr [ebx]; add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; ret; 
0x000a6177: add cl, byte ptr [ecx + 0x10eb83d0]; lea ecx, [edx + 0x10]; jne 0xa5ed1; pop ebx; ret; 
0x000a5f63: add cl, byte ptr [ecx + 0x1eb83d0]; lea ecx, [edx + 1]; jne 0xa5ed1; pop ebx; ret; 
0x000a5f85: add cl, byte ptr [ecx + 0x2eb83d0]; lea ecx, [edx + 2]; jne 0xa5ed1; pop ebx; ret; 
0x000a5fab: add cl, byte ptr [ecx + 0x3eb83d0]; lea ecx, [edx + 3]; jne 0xa5ed1; pop ebx; ret; 
0x000a9f2a: add cl, byte ptr [ecx + 0x428d0842]; or al, 0x5f; pop ebx; ret; 
0x0007904b: add cl, byte ptr [ecx + 0x4c48301]; xor eax, eax; pop ebx; pop esi; ret; 
0x000a5fc3: add cl, byte ptr [ecx + 0x4eb83d0]; lea ecx, [edx + 4]; jne 0xa5ed1; pop ebx; ret; 
0x00153753: add cl, byte ptr [ecx + 0x5d5f5ef0]; ret; 
0x000a6047: add cl, byte ptr [ecx + 0x8eb83d0]; lea ecx, [edx + 8]; jne 0xa5ed1; pop ebx; ret; 
0x000852a3: add cl, byte ptr [ecx + 0xf0b8c2]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0014dd09: add cl, byte ptr [ecx - 0x2776efb5]; pop ebx; pop esi; pop edi; ret; 
0x000a6aa3: add cl, byte ptr [ecx - 0x2f76f7be]; pop ebx; ret; 
0x000a3f7a: add cl, byte ptr [ecx - 0x2f76f7be]; ret; 
0x000a3f5a: add cl, byte ptr [ecx - 0x2f76f8be]; ret; 
0x000c63c3: add cl, byte ptr [ecx - 0x363b6b]; call dword ptr [edx + 0x51]; 
0x0004e8ab: add cl, byte ptr [ecx - 0x365f6b]; call dword ptr [edx + 0x51]; 
0x00144a7e: add cl, byte ptr [ecx - 0x393e9907]; or byte ptr [ecx], ch; fldenv [esi - 0x3f]; ret 0xf08; 
0x0008467f: add cl, byte ptr [ecx - 0x3fcef7bf]; ret; 
0x0005bb36: add cl, byte ptr [ecx - 0x59f63]; inc dword ptr [ecx]; ret; 
0x000854ec: add cl, byte ptr [ecx - 0x76d7dbbc]; ret; 
0x000a5b2a: add cl, byte ptr [ecx - 0x776f7be]; pop edi; pop ebx; ret; 
0x000a3d2a: add cl, byte ptr [ecx - 0x776f7be]; pop edi; ret; 
0x000a3e1a: add cl, byte ptr [ecx - 0x776f8be]; pop edi; ret; 
0x0003baa3: add cl, byte ptr [ecx - 0x7c3fcef0]; les ecx, ptr [eax]; pop ebx; ret; 
0x0019890a: add cl, byte ptr [ecx - 0x7ca1f78e]; ret 0x830c; 
0x000e0fa4: add cl, byte ptr [ecx]; ret 0xf889; 
0x000980e3: add cl, byte ptr [ecx]; rol byte ptr [ebx - 0x78f0f007], 1; mov eax, dword ptr [0x9000000]; ret; 
0x000b5ac3: add cl, byte ptr [edi]; inc ebp; ret 0x66c3; 
0x000947f4: add cl, byte ptr [edi]; inc esp; ret 0xec83; 
0x000caaa3: add cl, byte ptr [edi]; lodsb al, byte ptr [esi]; ret; 
0x0017f5d7: add cl, byte ptr [edi]; mov bh, 8; mov word ptr [edx], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00188a27: add cl, byte ptr [edi]; mov bh, 8; mov word ptr [edx], cx; pop ebx; ret; 
0x000779d5: add cl, byte ptr [edi]; scasd eax, dword ptr es:[edi]; ret 0x2999; 
0x000787e0: add cl, byte ptr [edi]; scasd eax, dword ptr es:[edi]; ret 0xbe0f; 
0x0013b7ab: add cl, byte ptr [edi]; test byte ptr [edi*8 - 0x137c0001], cl; or byte ptr [ebp - 0x6a8876d], cl; dec dword ptr [ecx - 0x48b7b]; call dword ptr [edi + 0x52]; 
0x000a5f8d: add cl, byte ptr [edi]; test dword ptr [0x5bffffff], edi; ret; 
0x00196edc: add cl, byte ptr [edi]; test dword ptr [ebp - 0x7d000000], ebx; ret 0xf00; 
0x0019611c: add cl, byte ptr [edi]; test dword ptr [ebp], edi; add byte ptr [eax], al; lea eax, [edi - 0x10]; pop edi; ret; 
0x00196cac: add cl, byte ptr [edi]; test dword ptr [ebp], edi; add byte ptr [eax], al; mov eax, ecx; ret; 
0x000a5bad: add cl, byte ptr [edi]; test dword ptr [ebx + eax], ebx; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000ad20e: add cl, byte ptr [edi]; test dword ptr [ebx], edi; or al, byte ptr [eax]; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00197848: add cl, byte ptr [edi]; test dword ptr [ecx - 0xa000000], esi; ret 0xf04; 
0x00196f3a: add cl, byte ptr [edi]; test dword ptr [edi - 0x7d000000], ebx; ret 0xf08; 
0x0019616b: add cl, byte ptr [edi]; test dword ptr [esi - 0x73000000], ecx; inc edi; clc; pop edi; ret; 
0x00197735: add cl, byte ptr [edi]; test esp, eax; add eax, dword ptr [eax]; add dh, dh; ret 0xf04; 
0x0004b8ff: add cl, byte ptr [edi]; xchg edx, eax; ret 0x689; 
0x0002c5dc: add cl, byte ptr [edi]; xchg esi, eax; ret; 
0x001658d5: add cl, byte ptr [edi]; xchg esp, eax; ret 0xf883; 
0x001036eb: add cl, byte ptr [edi]; xchg esp, eax; ret 0xff52; 
0x00193929: add cl, byte ptr [edi]; xchg esp, eax; ret; 
0x0012fd8e: add cl, byte ptr [edx - 7]; call dword ptr [eax + 0x57]; 
0x0010264e: add cl, byte ptr [edx - 7]; call dword ptr [eax + 0x6a]; 
0x001601d6: add cl, byte ptr [edx - 7]; call dword ptr [esi + 0x57]; 
0x0012cb63: add cl, byte ptr [edx]; pop ebx; pop esi; pop edi; ret; 
0x000eb864: add cl, ch; adc eax, 0x83fffffc; in al, dx; or byte ptr [ebp - 0x6b79d7d], cl; call dword ptr [eax + 0x55]; 
0x00062728: add cl, ch; and ch, 0xff; dec dword ptr [ebx - 0x4f37b]; jmp dword ptr [ebp - 0x75]; 
0x0016d6cf: add cl, ch; and eax, 0xe8ffffff; push ss; arpl sp, di; jmp dword ptr [esi - 0x70]; 
0x0005838b: add cl, ch; call dword ptr [edi]; 
0x000c844a: add cl, ch; cli; idiv bh; dec dword ptr [ebx - 0x364b63]; jmp dword ptr [ebp - 0x75]; 
0x00020078: add cl, ch; cmp bh, 0xff; jmp dword ptr [esi - 0x70]; 
0x0004ccce: add cl, ch; cmp dh, 0xff; jmp dword ptr [esi - 0x70]; 
0x0004d088: add cl, ch; cmp esi, dword ptr [edi*8 + 0x3436e9ff]; std; jmp dword ptr [esi - 0x70]; 
0x0019c3ff: add cl, ch; dec edx; idiv edi; jmp dword ptr [esi - 0x70]; 
0x00103818: add cl, ch; imul edi, esp, -1; jmp dword ptr [esi - 0x70]; 
0x0003ff88: add cl, ch; mov edi, 0x8dffffef; xchg dword ptr [ecx], eax; xor cl, bh; dec dword ptr [ebp - 0x35f49]; call dword ptr [esi + 0x6a]; 
0x0004db28: add cl, ch; movsd dword ptr es:[edi], dword ptr [esi]; sub ebp, edi; jmp dword ptr [esi - 0x70]; 
0x00034ce8: add cl, ch; psubd mm7, mm7; dec dword ptr [ebx - 0x7cd3db8c]; ret 0xc702; 
0x0012051b: add cl, ch; push ebx; idiv bh; dec dword ptr [ebp - 0x65e9f7d]; call dword ptr [eax - 0x73]; 
0x00034d2e: add cl, ch; push es; idiv edi; dec dword ptr [ebx - 0x7cd3db8c]; ret 0xc702; 
0x0006d44a: add cl, ch; ret 0xffe5; 
0x000f7491: add cl, ch; ret 0xfff0; 
0x0006ca4f: add cl, ch; ret 0xfff9; 
0x0002799c: add cl, ch; ret 0xfffd; 
0x00020138: add cl, ch; ret 0xfffe; 
0x00020038: add cl, ch; ret 0xffff; 
0x000e1d4f: add cl, ch; ret 3; 
0x000232e7: add cl, ch; ret; 
0x00041514: add cl, ch; sbb ebx, -1; dec dword ptr [ebx - 0x72d3db84]; xchg dword ptr [esi + esi*2 - 7], ebx; call dword ptr [eax - 0x73]; 
0x0004f370: add cl, ch; stc; ljmp 0x3001:0x878dffff; stc; dec dword ptr [ebp - 0x35f49]; call dword ptr [esi + 0x6a]; 
0x0004051c: add cl, ch; sti; idiv edi; call dword ptr [eax + 0x6a]; 
0x0005ecf2: add cl, ch; wait; loope 0x5ecf6; call dword ptr [eax - 0x75]; 
0x000865ed: add cl, dl; clc; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00048a7d: add dh, al; add al, 8; add byte ptr [ebx + 0x5e], bl; ret; 
0x00021458: add dh, al; inc edx; inc esi; mov eax, 0x744c7139; sbb dword ptr [ebp - 0x1ae26f70], ecx; jmp dword ptr [ebp + 0x33]; 
0x00069747: add dh, al; inc esp; and al, 0x4e; and byte ptr [ecx], dh; rol byte ptr [eax - 0x6bf0a705], cl; ret 0xff52; 
0x0005d2a8: add dh, al; test dword ptr [edx + edi*8 - 1], eax; jmp dword ptr [ebp - 0x75]; 
0x00191936: add dh, bh; fadd dword ptr [ebx + 0x5b5d04c4]; ret; 
0x00193126: add dh, bh; fcomp dword ptr [edi + 0x5b]; ret; 
0x00193686: add dh, bh; fcomp dword ptr [edi + 0x5d]; pop ebx; ret; 
0x0008383d: add dh, bh; jne 0x837e1; mov edx, 0xfffffffe; xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x001838e4: add dh, bh; ret 0xf; 
0x001838aa: add dh, bh; ret 2; 
0x000b46bc: add dh, bl; movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; cld; pop edi; ret; 
0x001043ad: add dh, bl; movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x00103ee5: add dh, bl; stosd dword ptr es:[edi], eax; pop edi; ret; 
0x000fd052: add dh, byte ptr [eax + ecx - 0x7c]; ror byte ptr [edi], cl; test dword ptr [esi - 0x74ffffe8], esi; push esi; add al, 0xf7; ret 0xfffd; 
0x000b439c: add dh, byte ptr [eax]; ret; 
0x00151453: add dh, byte ptr [ebp + 0x1a]; mov eax, ecx; ret; 
0x001258c9: add dh, byte ptr [ebp + 0x34]; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0019598e: add dh, byte ptr [ebp + 0x4f]; test dh, 4; jne 0x1959e4; add eax, 0xb; ret; 
0x00075d92: add dh, byte ptr [ebp + 0x63]; sub esp, 0xc; mov eax, dword ptr [eax + 0x88]; push esi; call dword ptr [eax + 0x34]; 
0x00195948: add dh, byte ptr [ebp + 0x75]; test dl, 4; jne 0x1959c4; add eax, 3; ret; 
0x00085848: add dh, byte ptr [ebp + eax + 0x5b]; pop esi; pop edi; ret; 
0x000de7b2: add dh, byte ptr [ebx + ebp*2 - 0x7d]; ret; 
0x000e96ab: add dh, byte ptr [ecx]; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x0014ab75: add dh, byte ptr [ecx]; shl byte ptr [esi + 0x39], 0x71; add dh, byte ptr [edx + ecx + 0x5b]; pop esi; ret; 
0x0008d70a: add dh, byte ptr [edi + 0x13]; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00104fcf: add dh, byte ptr [edi + 0xc]; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x000fbbbe: add dh, byte ptr [edi + ecx - 0x77]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0017b84b: add dh, byte ptr [edx + eax - 0x78]; pop es; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017bd9b: add dh, byte ptr [edx + eax - 0x78]; pop es; pop edi; pop ebx; ret; 
0x0014ab7b: add dh, byte ptr [edx + ecx + 0x5b]; pop esi; ret; 
0x00085287: add dh, byte ptr [edx + edx - 0x77]; ret 0xe283; 
0x000ced2b: add dh, byte ptr [esi + 0xa]; mov eax, edx; ret; 
0x00084723: add dh, byte ptr [esi + 0xa]; ret; 
0x00085747: add dh, byte ptr [esi + edx - 0x77]; ret 0xe283; 
0x00090b93: add dh, byte ptr [esp + edi*4 + 0x5b]; pop esi; ret; 
0x000ee17b: add dh, dh; inc esp; ret 0x804; 
0x001982ef: add dh, dh; les eax, ptr [ecx]; jne 0x198310; lea eax, [ecx + 0xc]; ret; 
0x00196168: add dh, dh; les eax, ptr [edx]; jne 0x196200; lea eax, [edi - 8]; pop edi; ret; 
0x00196cf8: add dh, dh; les eax, ptr [edx]; jne 0x196d90; lea eax, [ecx + 8]; ret; 
0x00196191: add dh, dh; les esp, ptr [eax]; jne 0x196230; lea eax, [edi - 4]; pop edi; ret; 
0x00196d21: add dh, dh; les esp, ptr [eax]; jne 0x196dc0; lea eax, [ecx + 0xc]; ret; 
0x00072217: add dh, dh; pop es; add dword ptr [edi], ecx; inc ebp; ret 0xec83; 
0x000995e4: add dh, dh; ret 0x7402; 
0x0019dc00: add dh, dh; ret 0x7407; 
0x0007468f: add dh, dh; ret 0x7420; 
0x00028aca: add dh, dh; ret 0x7501; 
0x0008c26a: add dh, dh; ret 0x7502; 
0x0002da47: add dh, dh; ret 0x7503; 
0x0013267f: add dh, dh; ret 0x7520; 
0x000526bf: add dh, dh; ret 0xf01; 
0x0008ebdb: add dh, dh; ret 0xf02; 
0x00195b99: add dh, dh; ret 0xf04; 
0x00026d75: add dh, dh; ret 0xf08; 
0x001981e1: add dh, dh; ret 0xf0f; 
0x00195b31: add dh, dh; ret 0xf10; 
0x00104887: add dh, dh; ret 0xf20; 
0x0006b6a8: add dh, dh; ret 0xf40; 
0x000535d1: add dh, dh; ret 0xf50; 
0x00104890: add dh, dh; ret 0xf80; 
0x00055963: add dh, dh; ret; 
0x0008f9af: add dl, bh; dec dword ptr [ebp - 0x67d337e]; call dword ptr [eax - 0x73]; 
0x000853e7: add dl, byte ptr [eax + 0x5f5bc031]; ret; 
0x0011633a: add dl, byte ptr [eax + eax]; mov eax, edi; call dword ptr gs:[0x10]; 
0x0006fc45: add dl, byte ptr [eax - 0x77]; ret; 
0x00159209: add dl, byte ptr [ebx - 1]; adc byte ptr [ebx - 0x3b7cfbbd], cl; adc al, 0x53; call dword ptr [eax + 0x10]; 
0x0004ab6f: add dl, byte ptr [ecx - 0x3d]; jmp ecx; 
0x0007a7ba: add dl, byte ptr [edx - 5]; dec dword ptr [ebp - 0x681f77d]; call dword ptr [eax - 0x73]; 
0x0006a99d: add dl, byte ptr [esi + 0x51]; push eax; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x000de95f: add dl, byte ptr [esi]; add byte ptr [eax], al; add bl, ch; ret; 
0x0003774f: add dl, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; pop esi; ret; 
0x00037647: add dl, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; ret; 
0x000376ef: add dl, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x0011d517: add dl, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000993ff: add dl, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx - 0x3fcefb3c], al; pop ebx; pop esi; ret; 
0x00071bda: add dl, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x0009936f: add dl, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x000b5abd: add dl, ch; push esi; inc ecx; jge 0xb5ac6; cmovne eax, edx; ret; 
0x00140e29: add dl, cl; lcall 0x4c85, 0x8d82eb3b; test al, 0xf9; call dword ptr [eax - 0x73]; 
0x001a0af2: add dword ptr [0x1668fff9], ebp; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; or dword ptr [ebx + 0x2d], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000da8a7: add dword ptr [eax + 0x10], -0x15; call dword ptr [eax - 0x18]; 
0x000931ca: add dword ptr [eax + 0x115], edi; call dword ptr gs:[0x10]; 
0x000938eb: add dword ptr [eax + 0x116], edi; call dword ptr gs:[0x10]; 
0x00166b38: add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x00166b5c: add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x00191764: add dword ptr [eax + 0x29fff794], -0x38; pop ebp; pop ebx; ret; 
0x0018ef57: add dword ptr [eax + 0x29fff794], -0x38; pop ebx; ret; 
0x000b5728: add dword ptr [eax + 0x2b], eax; inc esp; and al, 4; ret; 
0x000497dd: add dword ptr [eax + 0x3901104c], ecx; ret; 
0x0009d48a: add dword ptr [eax + 0x392aff70], eax; sal byte ptr [ebp - 0xb], 1; mov eax, ecx; ret; 
0x0007faf1: add dword ptr [eax + 0x52], edx; mov dword ptr [esp + 0x40], edx; call dword ptr [esi + 0xc]; 
0x000b62fb: add dword ptr [eax + 0x56], edx; lea eax, [esp + 0x40]; push eax; push dword ptr [edi]; call ebx; 
0x000b2544: add dword ptr [eax + 0x5bf88902], ecx; pop edi; ret; 
0x000b57b6: add dword ptr [eax + 0x5bf88927], ecx; pop esi; pop edi; ret; 
0x000b516f: add dword ptr [eax + 0x5d], eax; pop ebx; pop esi; pop edi; ret; 
0x000a8141: add dword ptr [eax + 0x5f028d02], ecx; ret; 
0x000b4976: add dword ptr [eax + 0x5f], eax; pop esi; ret; 
0x0009dd0b: add dword ptr [eax + 0x5f], eax; ret; 
0x000a3d71: add dword ptr [eax + 0x5ff88902], ecx; ret; 
0x0008d09d: add dword ptr [eax + 0x65], esi; mov eax, dword ptr [0x68]; mov dword ptr [edx + 0x1c], eax; xor eax, eax; pop ebx; ret; 
0x0008fcc7: add dword ptr [eax + 0x65ffe65c], -0x5d; pop eax; add al, byte ptr [eax]; add byte ptr [ebp - 0x19a4cf7d], cl; call dword ptr [ecx + 0x50]; 
0x00031e76: add dword ptr [eax + 0x6a], edx; add al, ch; loope 0x31e21; push cs; add byte ptr [ecx - 0x76dbdbbc], cl; ret; 
0x000353d0: add dword ptr [eax + 0x6a], edx; add al, ch; xchg dword ptr [edi + 0xe], ebp; add byte ptr [ebx + 0x478920c4], al; adc al, 0x89; ret; 
0x0007a7b3: add dword ptr [eax + 0x7d], -7; call dword ptr [eax - 0x18]; 
0x0012d29d: add dword ptr [eax + 0xf], eax; inc ebp; ret 0xc35b; 
0x0011f5a6: add dword ptr [eax + 1], edi; ret; 
0x0015e7c5: add dword ptr [eax + 1], edi; sbb eax, -1; add esp, 0xc; ret; 
0x00140487: add dword ptr [eax + 2], edi; ret; 
0x0014d8e4: add dword ptr [eax + 8], 1; je 0x14d90d; add esp, 0xc; ret; 
0x00077cb3: add dword ptr [eax + eax - 0x7a730000], edx; mov al, byte ptr [0x29ffffe3]; ret 0xf989; 
0x000e5a8f: add dword ptr [eax + eax*8 - 0x3fce328b], eax; ret; 
0x0017e3fb: add dword ptr [eax + eax], 0x3e8b1c03; jmp ebx; 
0x000e7424: add dword ptr [eax + eax], eax; or byte ptr [edi], 0xa3; ret 0x830f; 
0x0011711f: add dword ptr [eax + eax], ecx; add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; ret; 
0x0007be7b: add dword ptr [eax + eax], esi; nop; endbr32; mov eax, dword ptr [esp + 4]; and dword ptr [eax], 0xffffffcf; ret; 
0x00047046: add dword ptr [eax + ebx + 1], esi; ret; 
0x00075592: add dword ptr [eax - 0x1a], -1; call dword ptr [eax - 0x73]; 
0x000951c9: add dword ptr [eax - 0x5a], -0x1a; call dword ptr [eax + 0x56]; 
0x00095223: add dword ptr [eax - 0x5d], -0x1a; call dword ptr [eax + 0x56]; 
0x00158e84: add dword ptr [eax - 0x5d], 0; add byte ptr [ebp - 0x7cf48b40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x0012076f: add dword ptr [eax - 0x7c72ebba], ecx; rcl byte ptr [edx - 7], cl; dec dword ptr [eax - 0x6c72f7aa]; ret 0xf952; 
0x0006712a: add dword ptr [eax - 0x89843], eax; jmp dword ptr [eax]; 
0x0006c2d4: add dword ptr [eax - 0x8bc43], eax; jmp dword ptr [eax]; 
0x000895a1: add dword ptr [eax - 0xb], -0x1b; call dword ptr [eax - 0x73]; 
0x001586fa: add dword ptr [eax], -0x5d; add byte ptr [eax], al; pop ebx; ret; 
0x000e613f: add dword ptr [eax], -0xb; clc; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x0009b3e2: add dword ptr [eax], 0; add byte ptr [edi + ecx], al; inc ebp; ret 0x66c3; 
0x0006fc94: add dword ptr [eax], 0x5f5e5b00; pop ebp; ret; 
0x00024d66: add dword ptr [eax], 0x6b; stc; call dword ptr [eax + 0x68]; 
0x00024c80: add dword ptr [eax], 0x6b; stc; call dword ptr [eax - 0x73]; 
0x000c5058: add dword ptr [eax], 0x8d500000; test edi, esi; inc ebx; stc; call dword ptr [eax - 0x18]; 
0x0010ab21: add dword ptr [eax], 0xa30f8000; ret 0xdc73; 
0x000839d0: add dword ptr [eax], 0xf6310000; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x000b61f3: add dword ptr [eax], 0xfb830000; push dword ptr [esp + edi*2 - 0x77]; fdiv st(7); ret; 
0x0016bc85: add dword ptr [eax], eax; add al, ch; ret; 
0x000b4e43: add dword ptr [eax], eax; add bh, dh; ret 3; 
0x000d707d: add dword ptr [eax], eax; add bh, dh; ror dword ptr [ebp + 0x2dd1c], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00027c20: add dword ptr [eax], eax; add bl, ch; mov ecx, dword ptr [ebx - 0x72c7db84]; xchg eax, esp; jo 0x27c27; call dword ptr [eax - 0x73]; 
0x0003858e: add dword ptr [eax], eax; add byte ptr [eax + 0x1a5], bh; mov esi, 8; mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x0015f73b: add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; 
0x0015f73b: add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x000ff1b9: add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call ebx; 
0x001261fe: add dword ptr [eax], eax; add byte ptr [eax + 0x75], bh; call dword ptr gs:[0x10]; 
0x00104640: add dword ptr [eax], eax; add byte ptr [eax + 0xaf], bh; call dword ptr gs:[0x10]; 
0x000d8d6b: add dword ptr [eax], eax; add byte ptr [eax + 0xdc], bh; cmovae esi, ecx; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00089bd7: add dword ptr [eax], eax; add byte ptr [eax + 0xf0], bh; mov ebx, ebp; mov esi, ecx; call dword ptr gs:[0x10]; 
0x000aa12e: add dword ptr [eax], eax; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x00023baf: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; add dword ptr [edx + 0x2a], -7; call dword ptr [eax - 0x18]; 
0x000e322e: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; and ah, 0x47; stc; call dword ptr [eax - 0x18]; 
0x000775ab: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; cmp bh, 0x3d; stc; call dword ptr [eax - 0x18]; 
0x0014d7ad: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; or byte ptr [eax], 0xac; stc; call dword ptr [eax - 0x18]; 
0x0002eab6: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; or byte ptr [edi], 0x2d; stc; call dword ptr [eax - 0x18]; 
0x00023b85: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; or dword ptr [edi + 0x2a], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00147e51: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; sub dword ptr [ebx], 0x5f; stc; call dword ptr [eax - 0x18]; 
0x0008aa26: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; test dword ptr [eax + eax*4 - 7], edx; call dword ptr [eax - 0x18]; 
0x0007e5b2: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; test dword ptr [ebx], edi; stc; call dword ptr [eax - 0x18]; 
0x0008ab74: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; test eax, edi; jg 0x8ab76; call dword ptr [eax - 0x18]; 
0x00028810: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg al, ah; outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x00088f35: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg al, bh; jg 0x88f37; call dword ptr [eax - 0x18]; 
0x00089c74: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg al, bh; jg 0x89c76; call dword ptr [eax - 0x18]; 
0x00088fc8: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax + eax*4 - 7], dl; call dword ptr [eax - 0x18]; 
0x00029d02: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax + esi*2 - 7], dl; call dword ptr [eax - 0x18]; 
0x00029d25: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax + esi*2], ch; stc; call dword ptr [eax - 0x18]; 
0x000287c4: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], cl; jo 0x287c6; call dword ptr [eax - 0x18]; 
0x00029d48: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], cl; jo 0x29d4a; call dword ptr [eax - 0x18]; 
0x0002b150: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], cl; jo 0x2b152; call dword ptr [eax - 0x18]; 
0x00087ca1: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [ebx + 0x3f], al; stc; call dword ptr [eax - 0x18]; 
0x00087c4c: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [ecx], ch; aas; stc; call dword ptr [eax - 0x18]; 
0x00087b8e: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [edx + 0x47], ch; stc; call dword ptr [eax - 0x18]; 
0x00028783: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [esp + ebp], bl; stc; call dword ptr [eax - 0x18]; 
0x00026545: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dl, al; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x00026f31: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + esi*2 - 7], edx; call dword ptr [eax - 0x18]; 
0x00026f54: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + esi*2], ebp; stc; call dword ptr [eax - 0x18]; 
0x00103887: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ebx; dec edx; stc; call dword ptr [eax - 0x18]; 
0x00026f77: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ecx; jo 0x26f79; call dword ptr [eax - 0x18]; 
0x00027c7e: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ecx; jo 0x27c80; call dword ptr [eax - 0x18]; 
0x00087958: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + 0x3f], eax; stc; call dword ptr [eax - 0x18]; 
0x00087c08: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + 0x3f], edx; stc; call dword ptr [eax - 0x18]; 
0x0014d25c: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + ebp*4 - 7], ebp; call dword ptr [eax - 0x18]; 
0x0004152d: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [edx], ebp; xor cl, bh; call dword ptr [eax - 0x18]; 
0x00103ab3: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [esi], ebp; dec edx; stc; call dword ptr [eax - 0x18]; 
0x0002d867: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg eax, ecx; sub al, 0xf9; call dword ptr [eax - 0x18]; 
0x0014d2a2: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg eax, edi; pop edi; stc; call dword ptr [eax - 0x18]; 
0x00026fe0: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg eax, esp; outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x00155263: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg eax, esp; scasb al, byte ptr es:[edi]; stc; call dword ptr [eax - 0x18]; 
0x0008b444: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg ebx, ecx; aas; stc; call dword ptr [eax - 0x18]; 
0x0008b463: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg edx, edx; aas; stc; call dword ptr [eax - 0x18]; 
0x000e58dd: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg esp, esp; inc edi; stc; call dword ptr [eax - 0x18]; 
0x00151521: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xor byte ptr [ecx], 0x61; stc; call dword ptr [eax - 0x18]; 
0x0002ea69: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xor byte ptr [edx], 0x2d; stc; call dword ptr [eax - 0x18]; 
0x00023bd3: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xor dword ptr [ebx], 0x2a; stc; call dword ptr [eax - 0x18]; 
0x000e6d0a: add dword ptr [eax], eax; add byte ptr [eax - 0x7af0d107], al; cmp bl, 0xff; jmp dword ptr [ebp - 0x5f]; 
0x0014ba62: add dword ptr [eax], eax; add byte ptr [eax], al; add al, byte ptr [eax]; add byte ptr [edi], cl; lahf; ret 0xd009; 
0x00060857: add dword ptr [eax], eax; add byte ptr [eax], al; add bl, ch; adc eax, 0xec839066; or al, 0x83; ret; 
0x00145288: add dword ptr [eax], eax; add byte ptr [eax], al; add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x0006e4c3: add dword ptr [eax], eax; add byte ptr [eax], al; add edx, dword ptr [esi + eax*4]; jmp edx; 
0x000d6f0a: add dword ptr [eax], eax; add byte ptr [eax], al; add esp, 0xc; ret; 
0x000e9a5c: add dword ptr [eax], eax; add byte ptr [eax], al; add esp, 4; pop ebx; pop esi; ret; 
0x0011aeca: add dword ptr [eax], eax; add byte ptr [eax], al; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00119924: add dword ptr [eax], eax; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0008be3d: add dword ptr [eax], eax; add byte ptr [eax], al; call 0x82810; mov eax, dword ptr [ebp - 0x3c]; add esp, 0x10; call eax; 
0x00092e09: add dword ptr [eax], eax; add byte ptr [eax], al; call 0x92d70; mov dword ptr [esp], esi; call ebx; 
0x00083786: add dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0018b1b1: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x18b1b9; neg eax; ret; 
0x0018c9f1: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x18c9f9; neg eax; pop ebp; ret; 
0x00191df1: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x191df9; neg eax; ret; 
0x001920f1: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x1920f9; neg eax; pop ebp; ret; 
0x001922c1: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x1922c9; neg eax; ret; 
0x00192da8: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x192db0; neg eax; ret; 
0x00194059: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x194061; neg eax; ret; 
0x001956d2: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x1956da; neg eax; ret; 
0x00193cd7: add dword ptr [eax], eax; add byte ptr [eax], al; jg 0x193ce0; neg eax; ret; 
0x00194002: add dword ptr [eax], eax; add byte ptr [eax], al; jg 0x194010; neg eax; ret; 
0x00198132: add dword ptr [eax], eax; add byte ptr [eax], al; jg 0x198140; neg eax; ret; 
0x000c9cd1: add dword ptr [eax], eax; add byte ptr [eax], al; jg 0xc9cd9; neg eax; ret; 
0x00068bde: add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x0006e808: add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0016f07c: add dword ptr [eax], eax; add byte ptr [eax], al; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0016685a: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0xc], edx; mov eax, ecx; pop ebx; ret; 
0x0016681a: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0xc], edx; mov eax, ecx; ret; 
0x0015a285: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x00091ac7: add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0008b8af: add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xf0; mov ecx, edx; call dword ptr gs:[0x10]; 
0x001743cb: add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xf0; xor esi, esi; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00151461: add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, ecx; ret; 
0x0007b069: add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, edx; ret; 
0x000b541c: add dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, 0xffffffff; cmovb eax, ecx; ret; 
0x0011668f: add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00083781: add dword ptr [eax], eax; add byte ptr [eax], al; mov edx, 1; call dword ptr gs:[0x10]; 
0x00083992: add dword ptr [eax], eax; add byte ptr [eax], al; mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x0006e8a1: add dword ptr [eax], eax; add byte ptr [eax], al; mov edx, dword ptr [esi + eax*4 - 0x735e0]; add edx, ebx; jmp edx; 
0x0015afb9: add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; mov eax, ecx; ret; 
0x000c9d23: add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; pop esi; mov eax, ecx; ret; 
0x0014e2d1: add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; pop esi; mov eax, edx; ret; 
0x00072245: add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x0010e503: add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0011997f: add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; ret; 
0x0004aea1: add dword ptr [eax], eax; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x00164aae: add dword ptr [eax], eax; add byte ptr [eax], al; push 0; push esi; call dword ptr [eax + 0x14]; 
0x00083290: add dword ptr [eax], eax; add byte ptr [eax], al; push ebx; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x001637eb: add dword ptr [eax], eax; add byte ptr [eax], al; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x00057a66: add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x0015e7c7: add dword ptr [eax], eax; add byte ptr [eax], al; sbb eax, -1; add esp, 0xc; ret; 
0x00094210: add dword ptr [eax], eax; add byte ptr [eax], al; sub esp, 0x28; mov ebp, dword ptr [esp + 0x3c]; lea ecx, [edi - 0x722c0]; call dword ptr gs:[0x10]; 
0x000e0204: add dword ptr [eax], eax; add byte ptr [eax], al; test ecx, ecx; js 0xe0210; ret; 
0x00085559: add dword ptr [eax], eax; add byte ptr [eax], al; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00058bef: add dword ptr [eax], eax; add byte ptr [eax], al; xor eax, eax; pop ebx; pop esi; ret; 
0x0008e0aa: add dword ptr [eax], eax; add byte ptr [eax], al; xor eax, eax; ret; 
0x0002153c: add dword ptr [eax], eax; add byte ptr [eax], al; xor ebx, ebx; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x00086b89: add dword ptr [eax], eax; add byte ptr [eax], al; xor ebx, ebx; nop; mov eax, edx; call dword ptr gs:[0x10]; 
0x0008b537: add dword ptr [eax], eax; add byte ptr [eax], al; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00083997: add dword ptr [eax], eax; add byte ptr [eax], al; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008502f: add dword ptr [eax], eax; add byte ptr [eax], al; xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00085cb9: add dword ptr [eax], eax; add byte ptr [eax], al; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000b559c: add dword ptr [eax], eax; add byte ptr [eax], cl; leave; jne 0xb55a5; xor eax, eax; ret; 
0x00065d48: add dword ptr [eax], eax; add byte ptr [ebp + 0x10e74c0], al; ret; 
0x00095bd2: add dword ptr [eax], eax; add byte ptr [ebp + 0x1f40d], cl; add byte ptr [ecx], al; ret; 
0x001470c8: add dword ptr [eax], eax; add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x1470fd; add esp, 0x11c; ret; 
0x0003830e: add dword ptr [eax], eax; add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x38321; add esp, 0x12c; ret; 
0x00038dcd: add dword ptr [eax], eax; add byte ptr [ebp + 0x51], dl; lea esi, [ecx + eax]; push esi; call edi; 
0x00080ba5: add dword ptr [eax], eax; add byte ptr [ebp + 0xe], dh; sub edx, dword ptr [eax + 0xc]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x0002b541: add dword ptr [eax], eax; add byte ptr [ebp - 0x47958a01], al; push es; add byte ptr [eax], al; add cl, ch; ret; 
0x00108ec5: add dword ptr [eax], eax; add byte ptr [ebp - 0x47d3dbac], cl; sub al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00021713: add dword ptr [eax], eax; add byte ptr [ebp - 0x6995f80], cl; call dword ptr [eax + 0x6a]; 
0x00150e7c: add dword ptr [eax], eax; add byte ptr [ebp - 0x69f0b7d], cl; call dword ptr [eax - 0x73]; 
0x000868c9: add dword ptr [eax], eax; add byte ptr [ebp - 0x6c13179], cl; call dword ptr [eax - 0x73]; 
0x0003eeb0: add dword ptr [eax], eax; add byte ptr [ebp - 0x6cf3879], cl; call dword ptr [eax - 0x73]; 
0x00045170: add dword ptr [eax], eax; add byte ptr [ebp - 0x6cf4279], cl; call dword ptr [eax - 0x73]; 
0x00025423: add dword ptr [eax], eax; add byte ptr [ebp - 0x6d45179], cl; call dword ptr [eax - 0x73]; 
0x00026004: add dword ptr [eax], eax; add byte ptr [ebp - 0x6d4517a], cl; call dword ptr [eax - 0x73]; 
0x00024d6e: add dword ptr [eax], eax; add byte ptr [ebp - 0x6d4517d], cl; call dword ptr [eax - 0x73]; 
0x000ee159: add dword ptr [eax], eax; add byte ptr [ebp - 0x74ffd98c], cl; inc esi; add al, 0x83; ret; 
0x00048629: add dword ptr [eax], eax; add byte ptr [ebp - 0x76ffd98c], cl; ret; 
0x0016e071: add dword ptr [eax], eax; add byte ptr [ebp - 0x7cffd98c], cl; ret 0xf604; 
0x00123b56: add dword ptr [eax], eax; add byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x00057a5d: add dword ptr [eax], eax; add byte ptr [ebx + 0x28907c8], al; mov eax, 1; ret; 
0x0009ee4a: add dword ptr [eax], eax; add byte ptr [ebx + 0x29142454], cl; ret 0x748d; 
0x0009f4b6: add dword ptr [eax], eax; add byte ptr [ebx + 0x29142454], cl; ret 0x8b90; 
0x0010b022: add dword ptr [eax], eax; add byte ptr [ebx + 0x3108245c], cl; leave; call dword ptr gs:[0x10]; 
0x0009d94e: add dword ptr [eax], eax; add byte ptr [ebx + 0x3910245c], cl; ret; 
0x0003b8ef: add dword ptr [eax], eax; add byte ptr [ebx + 0x438d18c4], al; push es; pop ebx; ret; 
0x0007cb61: add dword ptr [eax], eax; add byte ptr [ebx + 0x448d08ec], al; and al, 0x18; push eax; push esi; call dword ptr [edi + 0x48]; 
0x00070de6: add dword ptr [eax], eax; add byte ptr [ebx + 0x448d08ec], al; and al, 8; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x00095617: add dword ptr [eax], eax; add byte ptr [ebx + 0x44c90], cl; add byte ptr [ecx], bh; ret; 
0x00169a1d: add dword ptr [eax], eax; add byte ptr [ebx + 0x45038045], cl; adc al, 0x39; ret 0x870f; 
0x0016ab38: add dword ptr [eax], eax; add byte ptr [ebx + 0x458b0c7d], cl; adc byte ptr [ecx - 0xeb43], cl; dec dword ptr [ecx - 0xf34b]; dec dword ptr [ecx - 0xe77b]; jmp dword ptr [ebp - 0x5f]; 
0x0005742a: add dword ptr [eax], eax; add byte ptr [ebx + 0x48903e8], al; and al, 0xf6; ret 0xf20; 
0x000c38a7: add dword ptr [eax], eax; add byte ptr [ebx + 0x48db055], cl; test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x1a8b; 
0x000c2fbd: add dword ptr [eax], eax; add byte ptr [ebx + 0x48db055], cl; test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x28b; 
0x0010bdc1: add dword ptr [eax], eax; add byte ptr [ebx + 0x518d0cc4], al; call dword ptr [edx + 0x53]; 
0x000b6214: add dword ptr [eax], eax; add byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x0007cbb5: add dword ptr [eax], eax; add byte ptr [ebx + 0x5e5b80ec], al; pop edi; ret; 
0x00037891: add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0011858e: add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000375eb: add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; ret; 
0x00037b8b: add dword ptr [eax], eax; add byte ptr [ebx + 0x5f], bl; ret; 
0x0008072f: add dword ptr [eax], eax; add byte ptr [ebx + 0x6a04ec], al; push 0; push ebx; call dword ptr [ebp + 0x2c]; 
0x00070fc2: add dword ptr [eax], eax; add byte ptr [ebx + 0x6a08ec], al; push esi; call dword ptr [ebx + 8]; 
0x0015dba2: add dword ptr [eax], eax; add byte ptr [ebx + 0x74ff08ec], al; and al, 0x3c; push esi; mov eax, dword ptr [esp + 0x40]; call eax; 
0x00059344: add dword ptr [eax], eax; add byte ptr [ebx + 0xd182444], cl; add byte ptr [eax], 0x41; add byte ptr [eax - 0x73], dl; cmp byte ptr [edi + 0x31], 0xf9; call dword ptr [eax - 0x18]; 
0x000d947b: add dword ptr [eax], eax; add byte ptr [ebx - 0x13345], cl; jmp dword ptr [ebp - 0x75]; 
0x0012a1d6: add dword ptr [eax], eax; add byte ptr [ebx - 0x1334a], cl; jmp dword ptr [ebp - 0x75]; 
0x0010bd25: add dword ptr [eax], eax; add byte ptr [ebx - 0x13350], cl; jmp dword ptr [ebp - 0x5f]; 
0x00039663: add dword ptr [eax], eax; add byte ptr [ebx - 0x1336d], cl; jmp dword ptr [ebp - 0x5f]; 
0x0002dbb9: add dword ptr [eax], eax; add byte ptr [ebx - 0x1337d], cl; jmp dword ptr [ebp - 0x75]; 
0x000cbf5b: add dword ptr [eax], eax; add byte ptr [ebx - 0x1337f], cl; jmp dword ptr [ebp - 0x75]; 
0x0007ab97: add dword ptr [eax], eax; add byte ptr [ebx - 0x137c3bbb], cl; or al, 0x56; call dword ptr [eax + 0x30]; 
0x000fa478: add dword ptr [eax], eax; add byte ptr [ebx - 0x137c538b], cl; add al, 0x6a; add eax, 0x9bc4868d; stc; call dword ptr [eax - 0x73]; 
0x00160db2: add dword ptr [eax], eax; add byte ptr [ebx - 0x137cafb9], cl; or al, 0x55; call dword ptr [eax + 0x10]; 
0x0007e865: add dword ptr [eax], eax; add byte ptr [ebx - 0x137cdfaa], cl; add al, 0x29; ret 0x5052; 
0x00156e11: add dword ptr [eax], eax; add byte ptr [ebx - 0x13b7d], cl; jmp dword ptr [ebp - 0x75]; 
0x00104c2b: add dword ptr [eax], eax; add byte ptr [ebx - 0x13f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000dc4f1: add dword ptr [eax], eax; add byte ptr [ebx - 0x17aff314], al; ret; 
0x0002e7bd: add dword ptr [eax], eax; add byte ptr [ebx - 0x1e773], cl; jmp dword ptr [ebx]; 
0x0004e100: add dword ptr [eax], eax; add byte ptr [ebx - 0x362f43], al; call dword ptr [eax]; 
0x000c6aa9: add dword ptr [eax], eax; add byte ptr [ebx - 0x364b7b], cl; call dword ptr [edi + 0x6a]; 
0x000e9bae: add dword ptr [eax], eax; add byte ptr [ebx - 0x5cf0afab], cl; ret 0x830f; 
0x0008c90c: add dword ptr [eax], eax; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x00115be1: add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; call dword ptr gs:[0x10]; 
0x00109c32: add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00109d86: add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; mov edx, edi; call dword ptr gs:[0x10]; 
0x000b6797: add dword ptr [eax], eax; add byte ptr [ebx - 0x677b], cl; jmp dword ptr [ebp - 0x75]; 
0x00149b08: add dword ptr [eax], eax; add byte ptr [ebx - 0x6b7447a3], cl; mov edx, dword ptr [eax + 0x1fff90d]; fidivr dword ptr [esi]; jmp edx; 
0x0002c174: add dword ptr [eax], eax; add byte ptr [ebx - 0x6c72f714], al; jb 0x2c1aa; stc; call dword ptr [edx + 0x50]; 
0x0013c49b: add dword ptr [eax], eax; add byte ptr [ebx - 0x6c72f714], al; xchg edx, eax; pop esp; stc; call dword ptr [edx + 0x50]; 
0x000263bb: add dword ptr [eax], eax; add byte ptr [ebx - 0x72c3db8c], cl; xchg byte ptr [eax], ah; push -7; call dword ptr [eax - 0x73]; 
0x00151e86: add dword ptr [eax], eax; add byte ptr [ebx - 0x72c7dbac], cl; dec eax; add dword ptr [ecx - 0x38cfdbb4], ecx; inc esp; ret 4; 
0x00081a23: add dword ptr [eax], eax; add byte ptr [ebx - 0x736d], cl; jmp dword ptr [ebp - 0x5f]; 
0x00196e1b: add dword ptr [eax], eax; add byte ptr [ebx - 0x73f0ff3e], al; sbb dword ptr [edx], eax; add byte ptr [eax], al; mov eax, ecx; ret; 
0x00071284: add dword ptr [eax], eax; add byte ptr [ebx - 0x7472f314], al; pushal; out 0xff, eax; call dword ptr [ecx + 0x52]; 
0x000d70f2: add dword ptr [eax], eax; add byte ptr [ebx - 0x74bbdb8c], cl; pop esp; and al, 0x40; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00122131: add dword ptr [eax], eax; add byte ptr [ebx - 0x74cbdbac], cl; pop esp; and al, 0x30; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000fb0e1: add dword ptr [eax], eax; add byte ptr [ebx - 0x74dbdbac], cl; pop esp; and al, 0x20; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000d7733: add dword ptr [eax], eax; add byte ptr [ebx - 0x768bdbb4], cl; cli; call dword ptr gs:[0x10]; 
0x0002d057: add dword ptr [eax], eax; add byte ptr [ebx - 0x7872f714], al; in al, 0x72; stc; call dword ptr [eax + 0x56]; 
0x0007e234: add dword ptr [eax], eax; add byte ptr [ebx - 0x7a72f714], al; stc; call dword ptr [eax - 0x75]; 
0x001047d2: add dword ptr [eax], eax; add byte ptr [ebx - 0x7a76f783], cl; sar dh, 0xff; dec dword ptr [ecx - 0x14743]; jmp dword ptr [ebp - 0x5f]; 
0x0009d945: add dword ptr [eax], eax; add byte ptr [ebx - 0x7bf0fe05], al; push ebx; add dword ptr [eax], eax; add byte ptr [ebx + 0x3910245c], cl; ret; 
0x00034f5a: add dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f314], al; mov dh, 0x2c; stc; call dword ptr [eax - 0x18]; 
0x0002c192: add dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f714], al; js 0x2c1c8; stc; call dword ptr [eax - 1]; 
0x00150e5c: add dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f714], al; movsd dword ptr es:[edi], dword ptr [esi]; popal; stc; call dword ptr [eax - 1]; 
0x00120b16: add dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f714], al; out dx, eax; push esp; stc; call dword ptr [eax + 0x56]; 
0x000250e6: add dword ptr [eax], eax; add byte ptr [ebx - 0x7ce3dbbc], cl; ret 0x8301; 
0x000d4d1f: add dword ptr [eax], eax; add byte ptr [ebx - 0xc76b], cl; jmp ptr [ecx]; ret 0xd089; 
0x000e0007: add dword ptr [eax], eax; add byte ptr [ebx - 0xeaf7c44], cl; clc; inc dword ptr [ecx]; fistp qword ptr [esi]; jmp edi; 
0x0002ffdc: add dword ptr [eax], eax; add byte ptr [ebx], ah; inc esp; and al, 8; ret; 
0x000d7874: add dword ptr [eax], eax; add byte ptr [ecx + 0x1bbea], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000d79c5: add dword ptr [eax], eax; add byte ptr [ecx + 0x1bbf9], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00093657: add dword ptr [eax], eax; add byte ptr [ecx + 0x24748be9], cl; dec esp; call dword ptr gs:[0x10]; 
0x0004ac7e: add dword ptr [eax], eax; add byte ptr [ecx + 0x3c778bd4], cl; mov edi, dword ptr [edi + 0x38]; ret; 
0x00037eba: add dword ptr [eax], eax; add byte ptr [ecx + 0x5f5e5bc8], cl; ret; 
0x0016c05c: add dword ptr [eax], eax; add byte ptr [ecx + 0x5f5e5bd0], cl; ret; 
0x0014677b: add dword ptr [eax], eax; add byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x000edde1: add dword ptr [eax], eax; add byte ptr [ecx + 0x7ec085c7], cl; jnp 0x149be634; mov eax, 0xc0833803; add al, 0x39; ret 0xf775; 
0x00150e3c: add dword ptr [eax], eax; add byte ptr [ecx - 0x12f7b], cl; dec dword ptr [ecx - 0x6f7c723e]; xor al, 0xf9; call dword ptr [eax + 0x52]; 
0x0015fc87: add dword ptr [eax], eax; add byte ptr [ecx - 0x12f7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00150e26: add dword ptr [eax], eax; add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0016beb6: add dword ptr [eax], eax; add byte ptr [ecx - 0x15f7b], cl; dec dword ptr [ecx - 0x15b43]; jmp dword ptr [ebp - 0x5f]; 
0x00156b6d: add dword ptr [eax], eax; add byte ptr [ecx - 0x72efdbbc], cl; inc edi; add ecx, dword ptr [edi]; dec esi; ret 0xec83; 
0x000d7495: add dword ptr [eax], eax; add byte ptr [ecx - 0x72f7dbb4], cl; dec esp; and al, 4; call dword ptr gs:[0x10]; 
0x001253c6: add dword ptr [eax], eax; add byte ptr [ecx - 0x7605762f], cl; out dx, eax; call dword ptr gs:[0x10]; 
0x00055170: add dword ptr [eax], eax; add byte ptr [ecx - 0x768fdbbc], cl; ret 0xc483; 
0x00111da6: add dword ptr [eax], eax; add byte ptr [ecx - 0x76efdbbc], cl; ret 0x4c89; 
0x0009bb14: add dword ptr [eax], eax; add byte ptr [ecx - 0x76f3dbbc], cl; ret 0xa165; 
0x001322d3: add dword ptr [eax], eax; add byte ptr [ecx - 0x76ff743d], cl; ret 0xce80; 
0x000f233e: add dword ptr [eax], eax; add byte ptr [ecx - 0x7ab7db84], cl; push dword ptr [esp + 0xf]; mov dh, 0x52; sbb al, 0xf6; ret 0xf08; 
0x0010497f: add dword ptr [eax], eax; add byte ptr [ecx - 1], bh; call dword ptr gs:[0x10]; 
0x0009db9d: add dword ptr [eax], eax; add byte ptr [ecx*4 - 0x175e2f6e], al; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x0009b3ad: add dword ptr [eax], eax; add byte ptr [ecx*4 - 0x18797f6e], al; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x0009bffd: add dword ptr [eax], eax; add byte ptr [ecx], al; lea edx, [edx - 0xaf040]; cmove eax, edx; ret; 
0x00131bfd: add dword ptr [eax], eax; add byte ptr [ecx], al; lea edx, [edx - 0xaf060]; cmove eax, edx; ret; 
0x0009c0dd: add dword ptr [eax], eax; add byte ptr [ecx], al; lea edx, [edx - 0xaf660]; cmove eax, edx; ret; 
0x001310b5: add dword ptr [eax], eax; add byte ptr [ecx], al; mov dword ptr [ebp - 0x44], edx; call eax; 
0x00095bd8: add dword ptr [eax], eax; add byte ptr [ecx], al; ret; 
0x000357d2: add dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x430f; 
0x0007c89d: add dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x448b; 
0x0008a82d: add dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x4e0f; 
0x00151e7e: add dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x840f; 
0x0008bc2d: add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x00104637: add dword ptr [eax], eax; add byte ptr [ecx], dh; fisttp dword ptr [ecx + 0x1242484]; add byte ptr [eax], al; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x000a5cfd: add dword ptr [eax], eax; add byte ptr [edi + 0x5b], bl; ret; 
0x000c9b52: add dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; ret; 
0x001117e4: add dword ptr [eax], eax; add byte ptr [edi + 8], bh; mov edx, ebp; call dword ptr gs:[0x10]; 
0x000377fd: add dword ptr [eax], eax; add byte ptr [edi], cl; inc esp; sar byte ptr [esi + 8], 1; mov eax, 0xae; call dword ptr gs:[0x10]; 
0x000f6034: add dword ptr [eax], eax; add byte ptr [edi], cl; mov dh, 0x43; add al, 0x89; ret 0xe283; 
0x000b3862: add dword ptr [eax], eax; add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x000bf2e5: add dword ptr [eax], eax; add byte ptr [edi], cl; xchg ebp, eax; ret 0x9eb; 
0x000cb72f: add dword ptr [eax], eax; add byte ptr [edi], cl; xchg ebp, eax; ret; 
0x00161353: add dword ptr [eax], eax; add byte ptr [edx + 0x53], dl; call dword ptr [eax + 4]; 
0x00077f26: add dword ptr [eax], eax; add byte ptr [edx + 1], ch; push 0; push 0; push dword ptr [esp + 0x18]; call dword ptr [ebx + 0x40]; 
0x0007d2bb: add dword ptr [eax], eax; add byte ptr [edx + 2], ch; push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x0012cda8: add dword ptr [eax], eax; add byte ptr [edx], al; mov eax, dword ptr [esp + 0x20]; call dword ptr [eax + 0x14]; 
0x0012d034: add dword ptr [eax], eax; add byte ptr [edx], al; push eax; call dword ptr [edi + 0x14]; 
0x00196afc: add dword ptr [eax], eax; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x00038593: add dword ptr [eax], eax; add byte ptr [esi + 8], bh; mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x001167da: add dword ptr [eax], eax; add byte ptr [esi - 0x77], ah; push eax; push ss; ret; 
0x001983e5: add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0x348d; 
0x00198385: add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x0016df1b: add dword ptr [eax], eax; add cl, al; jmp 0x5ebcd226; pop edi; ret; 
0x00104366: add dword ptr [eax], eax; add cl, al; jmp 0x5fbc3671; ret; 
0x00058389: add dword ptr [eax], eax; add cl, ch; call dword ptr [edi]; 
0x00195b75: add dword ptr [eax], eax; add dh, dh; ret 0xf01; 
0x00195b86: add dword ptr [eax], eax; add dh, dh; ret 0xf02; 
0x00195b97: add dword ptr [eax], eax; add dh, dh; ret 0xf04; 
0x00026d73: add dword ptr [eax], eax; add dh, dh; ret 0xf08; 
0x00195b2f: add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x00195b40: add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x00195b51: add dword ptr [eax], eax; add dh, dh; ret 0xf40; 
0x00055961: add dword ptr [eax], eax; add dh, dh; ret; 
0x0009a709: add dword ptr [eax], eax; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000b5a2b: add dword ptr [eax], eax; add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret; 
0x000a2192: add dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x00051f88: add dword ptr [eax], eax; add esp, 0x1c; ret; 
0x00057b0e: add dword ptr [eax], eax; add esp, 0x2c; ret; 
0x00058987: add dword ptr [eax], eax; cmp eax, 1; sbb eax, eax; add esp, 0x1c; ret; 
0x000b584a: add dword ptr [eax], eax; dec ecx; jne 0xb5848; pop esi; ret; 
0x000dfcbc: add dword ptr [eax], eax; mov eax, 0x7f; mov edx, 0x7d00; pop ebx; cmove eax, edx; ret; 
0x000a1c35: add dword ptr [eax], edi; ret; 
0x000b3fdc: add dword ptr [eax], edx; ret; 
0x0004aa1c: add dword ptr [eax], esi; add byte ptr [eax], al; mov eax, 0x180; call dword ptr gs:[0x10]; 
0x000b3ffc: add dword ptr [eax], esi; ret; 
0x0003ff90: add dword ptr [eax], esi; stc; dec dword ptr [ebp - 0x35f49]; call dword ptr [esi + 0x6a]; 
0x0005741c: add dword ptr [eax], esi; stc; dec dword ptr [ecx - 0x9ebdb8c]; ret 0xf50; 
0x000b3fec: add dword ptr [eax], esp; ret; 
0x001982e5: add dword ptr [ebp + 0x18], esi; lea eax, [ecx + 4]; ret; 
0x001982f2: add dword ptr [ebp + 0x1b], esi; lea eax, [ecx + 0xc]; ret; 
0x0008bcf2: add dword ptr [ebp + 0x1b], esi; or dword ptr [eax], 0x40000000; xor eax, eax; ret; 
0x000dfd85: add dword ptr [ebp + 0x20b8], esp; add byte ptr [edx + 0x40], bh; cmove eax, edx; ret; 
0x00198bc2: add dword ptr [ebp + 0x2b], esi; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x00150c52: add dword ptr [ebp + 0x2b], esi; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x00198baa: add dword ptr [ebp + 0x33], esi; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x0015717e: add dword ptr [ebp + 0x3c89017e], ecx; and al, 0x84; ror byte ptr [edi], 0x95; ret 0x3a3c; 
0x000635a9: add dword ptr [ebp + 0x440f9304], ecx; ret; 
0x0008def9: add dword ptr [ebp + 0x4c], esi; mov ecx, esi; mov ebx, dword ptr [esp + 0xa0]; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x001463b5: add dword ptr [ebp + 0x508dbf70], ecx; and byte ptr [ebx + 0x420f1afe], al; ret 0xb60f; 
0x000cf9b5: add dword ptr [ebp + 0x76c98], ecx; add byte ptr [edi], cl; sahf; ret 0xd329; 
0x0008e9c1: add dword ptr [ebp + 0xc], esi; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x000f5b03: add dword ptr [ebp + 0xf01186c], ecx; mov dh, 4; sub dword ptr [ecx], edi; ret 0xd075; 
0x0008cff5: add dword ptr [ebp + 8], esi; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x000827c8: add dword ptr [ebp + ecx + 0x65], esi; mov eax, dword ptr [8]; mov byte ptr [eax + 0x4fe], 0; ret; 
0x0008e228: add dword ptr [ebp + ecx - 0x10], esi; sub dword ptr [ebx + 0xc], 1; pop ebx; pop esi; pop edi; ret; 
0x0008da28: add dword ptr [ebp + ecx - 0x7d], esi; les ecx, ptr [eax]; mov eax, ebx; pop ebx; ret; 
0x00122dc8: add dword ptr [ebp + esi - 0x73], esi; dec esp; and al, 0xc; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x00122f48: add dword ptr [ebp + esi - 0x73], esi; dec esp; and al, 0xc; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x0009fa71: add dword ptr [ebp - 0x13], esi; mov eax, esi; or byte ptr [ebx], dl; pop ebx; pop esi; ret; 
0x0004ae9c: add dword ptr [ebp - 0x17], esi; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x0009d344: add dword ptr [ebp - 0x17], esi; pop ebx; pop esi; pop edi; ret; 
0x0012937d: add dword ptr [ebp - 0x18], edx; in al, dx; ret 0xfff8; 
0x0008f3c3: add dword ptr [ebp - 0x19ac8f79], ecx; call dword ptr [ebx + 0x50]; 
0x0008f066: add dword ptr [ebp - 0x19afef79], ecx; call dword ptr [ebp + 0x50]; 
0x0008e2bc: add dword ptr [ebp - 0x19bc9f7b], ecx; call dword ptr [ebx + 0x50]; 
0x0009de2f: add dword ptr [ebp - 0x1a], esi; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00119bef: add dword ptr [ebp - 0x27], esi; mov eax, esi; pop ebx; pop esi; ret; 
0x000c9f7d: add dword ptr [ebp - 0x28], esi; mov eax, ecx; ret; 
0x0009a5f9: add dword ptr [ebp - 0x2c], esi; sub esp, 0xc; push eax; call edx; 
0x0008d0b5: add dword ptr [ebp - 0x2e], esi; mov eax, 0x10; pop ebx; ret; 
0x00060172: add dword ptr [ebp - 0x4377b], ecx; call dword ptr [esi - 0x77]; 
0x0011cf5c: add dword ptr [ebp - 0x4c7bf040], eax; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0011c98c: add dword ptr [ebp - 0x547bf040], eax; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000c49c3: add dword ptr [ebp - 0x57c03b0], ecx; add ecx, dword ptr [edi]; xchg esi, eax; ret 0xc085; 
0x000cfd86: add dword ptr [ebp - 0x67f5db6], ecx; add dword ptr [ebp - 0x69f022b6], ecx; ret; 
0x000cfd8c: add dword ptr [ebp - 0x69f022b6], ecx; ret; 
0x0011d99d: add dword ptr [ebp - 0x74e18740], eax; inc esi; add al, 0x89; ret 0xe083; 
0x00150942: add dword ptr [ebp - 0x75], esi; pop ebx; pop esi; ret; 
0x00140823: add dword ptr [ebp - 0x76fdd7bc], ecx; ret; 
0x0014074b: add dword ptr [ebp - 0x76fde7bc], ecx; ret; 
0x000abb74: add dword ptr [ebp - 0x7af0fe81], ecx; mov byte ptr [0x5f000009], al; pop esi; pop ebx; ret; 
0x000a5b88: add dword ptr [ebp - 0x7af0feb6], ecx; add eax, dword ptr ds:[eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x0012fea3: add dword ptr [ebp - 0x7c138a40], eax; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000fa235: add dword ptr [ebp - 0x7c398a01], eax; ret; 
0x0011e6fc: add dword ptr [ebp - 0x7c908a0a], eax; in al, dx; or byte ptr [ebp - 0x6d0c37d], cl; call dword ptr [eax + 0x6a]; 
0x0009c09b: add dword ptr [ebp - 0xa356f6e], ecx; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x0009bfbb: add dword ptr [ebp - 0xa88ff6e], ecx; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x00131b6b: add dword ptr [ebp - 0xa891f6e], ecx; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x0009c04b: add dword ptr [ebp - 0xaa90f6e], ecx; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x00131bbb: add dword ptr [ebp - 0xaa92f6e], ecx; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x0009c3ab: add dword ptr [ebp - 0xac93f6e], ecx; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x00131b1b: add dword ptr [ebp - 0xac95f6e], ecx; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x0009c000: add dword ptr [ebp - 0xaf03f6e], ecx; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x00131c00: add dword ptr [ebp - 0xaf05f6e], ecx; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x0009c0e0: add dword ptr [ebp - 0xaf65f6e], ecx; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x00080f0a: add dword ptr [ebx + 0x19a0], 1; add esp, 4; pop ebx; pop esi; ret; 
0x0002fd20: add dword ptr [ebx + 0x28408b00], ecx; mov eax, dword ptr [eax + edx*4]; ret; 
0x0002fce0: add dword ptr [ebx + 0x30408b00], ecx; mov eax, dword ptr [eax + edx*4]; ret; 
0x000b299f: add dword ptr [ebx + 0x3888ffd8], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x0011ed0d: add dword ptr [ebx + 0x39142454], ecx; ret 0x1a77; 
0x0008ec51: add dword ptr [ebx + 0x428d1068], ecx; inc dword ptr [ebx - 0x69f00208]; ret; 
0x000a02d1: add dword ptr [ebx + 0x45898704], ecx; rol byte ptr [ebp - 0x3a76f040], 1; add byte ptr [eax], al; add byte ptr [ebx + 0x4d89ac55], cl; aam 0x29; ret 0xb48d; 
0x0012076c: add dword ptr [ebx + 0x468801e2], eax; adc al, 0x8d; adc edx, 0x52; stc; dec dword ptr [eax - 0x6c72f7aa]; ret 0xf952; 
0x0009e085: add dword ptr [ebx + 0x4d2b0cc4], eax; add byte ptr [ecx], ch; ret 0xd801; 
0x000a9c65: add dword ptr [ebx + 0x5b5fffd8], eax; ret; 
0x00058ba9: add dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x000eec85: add dword ptr [ebx + 0x5e5b0cc4], eax; pop edi; pop ebp; ret; 
0x000792b5: add dword ptr [ebx + 0x5e5b14c4], eax; ret; 
0x0008e22f: add dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x000a20fd: add dword ptr [ebx + 0x5e], ebx; ret; 
0x000847d8: add dword ptr [ebx + 0x5f5e04c4], eax; ret; 
0x0016025f: add dword ptr [ebx + 0x64], -7; call dword ptr [esi + 0x57]; 
0x00162768: add dword ptr [ebx + 0x650c2454], ecx; sub edx, dword ptr [0x14]; jne 0x16277a; add esp, 0x1c; ret; 
0x0007b239: add dword ptr [ebx + 0x75], esi; fild dword ptr [eax - 0x76da2b83]; ret 0x5374; 
0x0007faeb: add dword ptr [ebx + 0x798d08ec], eax; add dword ptr [eax + 0x52], edx; mov dword ptr [esp + 0x40], edx; call dword ptr [esi + 0xc]; 
0x000a8343: add dword ptr [ebx + 0xf660741], ecx; adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000a3f53: add dword ptr [ebx + 0xf660741], ecx; adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000a8363: add dword ptr [ebx + 0xf660841], ecx; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000a3f73: add dword ptr [ebx + 0xf660841], ecx; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x0014528e: add dword ptr [ebx + 2], edi; call dword ptr gs:[0x10]; 
0x0015b2b2: add dword ptr [ebx + ecx - 0x7d], esi; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0012f6e0: add dword ptr [ebx - 0x137ce7c0], ecx; or byte ptr [ebx - 0x8f73], cl; dec dword ptr [ebx - 0x936b]; call dword ptr [edi + 0x50]; 
0x00095171: add dword ptr [ebx - 0x1637d], ecx; jmp dword ptr [ebp - 0x75]; 
0x0012cb08: add dword ptr [ebx - 0x2b], esi; add esp, 4; pop ebx; pop esi; ret; 
0x0015b17c: add dword ptr [ebx - 0x39d6f3bd], ecx; push esi; push eax; push dword ptr [ebx]; call dword ptr [ebx + 8]; 
0x000e5a8c: add dword ptr [ebx - 0x3f7bfe3e], eax; jne 0xe5a61; xor eax, eax; ret; 
0x000ea057: add dword ptr [ebx - 0x3f7cafaa], ecx; add dword ptr [ecx], edi; ror dword ptr [edi], cl; dec esi; sar dword ptr [ecx], cl; ret 0xd17f; 
0x00079bcb: add dword ptr [ebx - 0x3fcef73c], eax; pop ebx; ret; 
0x0007904d: add dword ptr [ebx - 0x3fcefb3c], eax; pop ebx; pop esi; ret; 
0x000ecaf4: add dword ptr [ebx - 0x49f0f7f4], ecx; ret 0xb70f; 
0x0006083b: add dword ptr [ebx - 0x4ef4b], ecx; dec dword ptr [ecx - 0x4f77b]; dec dword ptr [ecx - 0x51373]; jmp dword ptr [ebp - 0x75]; 
0x0005fb51: add dword ptr [ebx - 0x5ef7b], ecx; call dword ptr [edx - 0x75]; 
0x0005fe02: add dword ptr [ebx - 0x5ef7b], ecx; dec dword ptr [ecx - 0x5b36b]; dec dword ptr [ebx - 0x59b63]; call dword ptr [edx + 0x52]; 
0x0018ef87: add dword ptr [ebx - 0x6b7f7474], ecx; idiv edi; mov eax, dword ptr [ebx + eax*4 - 0x86b80]; sub eax, ecx; pop ebx; ret; 
0x000fe130: add dword ptr [ebx - 0x70f09b08], eax; ret; 
0x00152390: add dword ptr [ebx - 0x72efdb84], ecx; xchg dword ptr [ebx + 0x2a], ebx; stc; call dword ptr [eax + 0x53]; 
0x000ef885: add dword ptr [ebx - 0x7603e7bc], ecx; ret; 
0x000faa44: add dword ptr [ebx - 0x76ebdbbc], ecx; push ebx; adc al, 0x8d; or ch, 0x48; stc; call dword ptr [eax - 0x77]; 
0x001287d6: add dword ptr [ebx - 0x77], ebx; rcr byte ptr [esi + 0x5f], 1; ret; 
0x00088f18: add dword ptr [ebx - 0x78f0fe01], eax; mov dword ptr [0x8bfffffd], eax; je 0x88f49; or al, 0x8d; xchg byte ptr [ecx + eax*4 - 7], dl; call dword ptr [eax - 0x73]; 
0x00023205: add dword ptr [ebx - 0x7d], edx; ret; 
0x0004b737: add dword ptr [ebx - 0xa], esi; mov eax, edx; pop ebx; pop esi; ret; 
0x0013051e: add dword ptr [ebx - 0xc363], ecx; dec dword ptr [ecx - 0xcb6b]; call dword ptr [eax - 0x77]; 
0x001743c7: add dword ptr [ebx], 1; mov edx, 1; mov eax, 0xf0; xor esi, esi; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0011df90: add dword ptr [ebx], ecx; inc ecx; or byte ptr [ecx + 0x418b0447], cl; add al, 0x89; ret; 
0x000f0090: add dword ptr [ebx], edi; pop ebp; add al, 0x7c; ret 0xb48d; 
0x00041cd4: add dword ptr [ebx], edx; add byte ptr [ecx + 0x1e8329c7], al; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x00034f54: add dword ptr [ecx + 0x13840fc6], ecx; add dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f314], al; mov dh, 0x2c; stc; call dword ptr [eax - 0x18]; 
0x0007519c: add dword ptr [ecx + 0x19881472], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x000a81b1: add dword ptr [ecx + 0x3418b02], ecx; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; pop edi; ret; 
0x000a82e1: add dword ptr [ecx + 0x3418b02], ecx; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; ret; 
0x000a3dc1: add dword ptr [ecx + 0x3418b02], ecx; mov dword ptr [edx + 3], eax; mov eax, edi; pop edi; ret; 
0x000a3ef1: add dword ptr [ecx + 0x3418b02], ecx; mov dword ptr [edx + 3], eax; mov eax, edx; ret; 
0x000ab061: add dword ptr [ecx + 0x3428d02], ecx; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000a8081: add dword ptr [ecx + 0x3428d02], ecx; pop edi; ret; 
0x000a82b1: add dword ptr [ecx + 0x3428d02], ecx; ret; 
0x0009b78f: add dword ptr [ecx + 0x39102444], ecx; ret; 
0x000d211a: add dword ptr [ecx + 0x394c2444], ecx; ret; 
0x00094bc8: add dword ptr [ecx + 0x39c131d9], ecx; ret; 
0x0012017a: add dword ptr [ecx + 0x40938d16], ecx; jl 0x120178; dec dword ptr [ebx + 0x56897c40]; add al, 0x89; ret 0xe8c1; 
0x000a82d1: add dword ptr [ecx + 0x418b6602], ecx; add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; ret; 
0x000a3ee1: add dword ptr [ecx + 0x418b6602], ecx; add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x000a82c1: add dword ptr [ecx + 0x4418a02], ecx; mov byte ptr [edx + 4], al; lea eax, [edx + 4]; ret; 
0x000a3ed1: add dword ptr [ecx + 0x4418a02], ecx; mov byte ptr [edx + 4], al; mov eax, edx; ret; 
0x000ab561: add dword ptr [ecx + 0x4418b02], ecx; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x000a9ebe: add dword ptr [ecx + 0x4428d02], ecx; pop edi; pop ebx; ret; 
0x0003aba2: add dword ptr [ecx + 0x45189c8], ecx; ret 4; 
0x0009c96f: add dword ptr [ecx + 0x4c48303], ecx; mov eax, esi; pop ebx; pop esi; ret; 
0x001383c1: add dword ptr [ecx + 0x5a], -7; call dword ptr [eax - 0x18]; 
0x00138562: add dword ptr [ecx + 0x5a], -7; call dword ptr [eax - 0x73]; 
0x00059426: add dword ptr [ecx + 0x5b088813], ecx; pop esi; pop edi; ret; 
0x000a6b71: add dword ptr [ecx + 0x5bd08902], ecx; ret; 
0x000b2584: add dword ptr [ecx + 0x5bf88902], ecx; pop edi; ret; 
0x0012841b: add dword ptr [ecx + 0x5f5e5bd8], ecx; ret; 
0x000a5abe: add dword ptr [ecx + 0x5ff88902], ecx; pop ebx; ret; 
0x000a3cb1: add dword ptr [ecx + 0x5ff88902], ecx; ret; 
0x00154c8f: add dword ptr [ecx + 0x62], -7; call dword ptr [eax - 0x18]; 
0x000eac35: add dword ptr [ecx + 0x80e1], eax; add byte ptr [edi], cl; inc ebp; ret 0x5e5b; 
0x00052fe2: add dword ptr [ecx + 0xc61453], ecx; sub eax, 0xfff8c7e9; jmp dword ptr [esi - 0x70]; 
0x0009b3ab: add dword ptr [ecx + eax - 0x72fc0000], 0xe7868092; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x0009db9b: add dword ptr [ecx + eax - 0x72fc0000], 0xe8a1d092; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x0009c0db: add dword ptr [ecx + eax - 0x72ff0000], 0xf509a092; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x00131bfb: add dword ptr [ecx + eax - 0x72ff0000], 0xf50fa092; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x0009bffb: add dword ptr [ecx + eax - 0x72ff0000], 0xf50fc092; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x0015144c: add dword ptr [ecx + edx + 0x31], esi; leave; cmp eax, 2; jne 0x151470; mov eax, ecx; ret; 
0x000e9598: add dword ptr [ecx - 0x13], edi; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x0007beeb: add dword ptr [ecx - 0x2776eb90], ecx; mov byte ptr [edx], cl; pop ebx; pop esi; ret; 
0x0011faab: add dword ptr [ecx - 0x2f6c72ea], ecx; jle 0x11faa9; dec dword ptr [ebx + 0x56897c40]; add al, 0x89; ret 0xe8c1; 
0x0004fd15: add dword ptr [ecx - 0x364f43], ecx; dec dword ptr [ecx - 0x360343]; dec dword ptr [ebx - 0x361f7b]; inc dword ptr [ebx - 0x36277b]; call dword ptr [eax]; 
0x00151e8f: add dword ptr [ecx - 0x38cfdbb4], ecx; inc esp; ret 4; 
0x0009eb38: add dword ptr [ecx - 0x3dbaf028], ecx; add esp, 0x18; pop ebx; ret; 
0x0014e890: add dword ptr [ecx - 0x45548acd], ecx; add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00091ac1: add dword ptr [ecx - 0x45658acd], ecx; add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00163375: add dword ptr [ecx - 0x46f076fd], ecx; ret; 
0x00080232: add dword ptr [ecx - 0x49f0fbba], ecx; ret; 
0x0005d29c: add dword ptr [ecx - 0x5b77b], ecx; dec dword ptr [edi]; test dword ptr [eax - 0x39ffffeb], ebp; test dword ptr [edx + edi*8 - 1], eax; jmp dword ptr [ebp - 0x75]; 
0x000c4628: add dword ptr [ecx - 0x6ff0f7bf], ecx; ret 0x4e8b; 
0x000ffea0: add dword ptr [ecx - 0x72b3dbb4], ecx; mov ds, word ptr [eax - 0x760006b7]; ret; 
0x000418a9: add dword ptr [ecx - 0x74d7dbbc], ecx; inc ebp; add byte ptr [ecx - 0x76dbdbbc], cl; ret 0xe283; 
0x00085503: add dword ptr [ecx - 0x76cfdbbc], ecx; ret 0x448b; 
0x00084fd8: add dword ptr [ecx - 0x76e3dbbc], ecx; ret; 
0x0011aa84: add dword ptr [ecx - 0x7c0e7630], ecx; ret 0xf01; 
0x0002740a: add dword ptr [ecx - 0x7cbbdba4], ecx; ret; 
0x00029673: add dword ptr [ecx - 0x7cd7dba4], ecx; ret; 
0x00153fe6: add dword ptr [ecx - 0x7cd7dbbc], ecx; in al, dx; or byte ptr [ebx - 0x72d7dbbc], cl; or dh, 0x61; stc; call dword ptr [eax - 1]; 
0x000268d4: add dword ptr [ecx - 0x7ce3dba4], ecx; ret; 
0x001706db: add dword ptr [ecx - 0x7cf760b4], ecx; ret; 
0x001706c2: add dword ptr [ecx - 0x7cf769b4], ecx; ret 0x3901; 
0x000cf415: add dword ptr [ecx - 0xff6b], ecx; call dword ptr [ebx - 0x18]; 
0x000dc442: add dword ptr [ecx], 0x46; stc; call dword ptr [eax + 0x56]; 
0x00148da2: add dword ptr [ecx], 0xa30f0800; ret 0x830f; 
0x00196afb: add dword ptr [ecx], 0xf660000; xlatb; ret; 
0x0011c69c: add dword ptr [ecx], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000eea6c: add dword ptr [ecx], eax; ret 0xdd39; 
0x0005fe3f: add dword ptr [ecx], eax; ret; 
0x00086657: add dword ptr [ecx], eax; rol byte ptr [ebx - 0x2ff60220], cl; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x00054693: add dword ptr [ecx], ebp; fidivr dword ptr [ecx]; ret 0xee7f; 
0x0014bb44: add dword ptr [ecx], ebp; ret 0x828d; 
0x000e754e: add dword ptr [ecx], ebp; ret 0xd301; 
0x0016aa53: add dword ptr [ecx], ebp; ret; 
0x000dfdaf: add dword ptr [ecx], ebx; push esp; jne 0xdfdc0; lea esi, [esi]; mov eax, 0x40; ret; 
0x00090a69: add dword ptr [ecx], ebx; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x000de4e3: add dword ptr [ecx], ebx; rol byte ptr [ebx - 0x1f7cfb3c], 0xc; pop ebx; pop esi; ret; 
0x0019c222: add dword ptr [ecx], ebx; shl byte ptr [esi - 0x7f], cl; ret 0x7fff; 
0x0002210f: add dword ptr [ecx], ecx; add byte ptr [eax], al; add byte ptr [eax - 1], bh; add esp, 0xc; ret; 
0x00079447: add dword ptr [ecx], ecx; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x0011e01a: add dword ptr [ecx], ecx; ret 0x1789; 
0x00028540: add dword ptr [ecx], ecx; ret 0x7439; 
0x000f19b3: add dword ptr [ecx], ecx; ret 0xf983; 
0x00048a1b: add dword ptr [ecx], ecx; ret; 
0x00117107: add dword ptr [ecx], edi; fdiv dword ptr [edx + 4]; xor eax, eax; pop ebx; ret; 
0x000a1d66: add dword ptr [ecx], edi; fidiv dword ptr [ebp + esi*8 + 0x5b]; ret; 
0x000b448c: add dword ptr [ecx], edi; fmul dword ptr [edi]; inc edi; ret; 
0x000e8fa2: add dword ptr [ecx], edi; lds esi, ptr [edx + ebx + 0x39]; ret; 
0x0009ba32: add dword ptr [ecx], edi; ret 0x1976; 
0x000514c2: add dword ptr [ecx], edi; ret 0x3a74; 
0x00141e84: add dword ptr [ecx], edi; ret 0x7772; 
0x000ee592: add dword ptr [ecx], edi; ret 0x840f; 
0x0005c359: add dword ptr [ecx], edi; ret 0x850f; 
0x000483f9: add dword ptr [ecx], edi; ret 0x860f; 
0x00141f28: add dword ptr [ecx], edi; ret 0x930f; 
0x000de69a: add dword ptr [ecx], edi; ret 0xb74; 
0x0009cace: add dword ptr [ecx], edi; ret 0xc72; 
0x000f67a1: add dword ptr [ecx], edi; ret 0xda75; 
0x0011f28b: add dword ptr [ecx], edi; ret 0xe075; 
0x000f39c2: add dword ptr [ecx], edi; ret 0xe775; 
0x0011cab2: add dword ptr [ecx], edi; ret 0xe975; 
0x000558a7: add dword ptr [ecx], edi; ret 0xec75; 
0x000de6a5: add dword ptr [ecx], edi; ret 0xee75; 
0x000ec44c: add dword ptr [ecx], edi; ret 0xef7f; 
0x00199c8b: add dword ptr [ecx], edi; ret 0xf27e; 
0x0003d482: add dword ptr [ecx], edi; ret; 
0x000ea05d: add dword ptr [ecx], edi; ror dword ptr [edi], cl; dec esi; sar dword ptr [ecx], cl; ret 0xd17f; 
0x0010c855: add dword ptr [ecx], esi; sar byte ptr [ebx], cl; inc ebp; or byte ptr [edi], cl; inc esp; ret 0x4589; 
0x0008d73a: add dword ptr [edi + 0x13], esi; mov edx, dword ptr [esp + 4]; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x00084baa: add dword ptr [edi + 0x13], esi; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000d8bf7: add dword ptr [edi + 0x16], edi; pop ebx; pop esi; pop edi; ret; 
0x000d8c45: add dword ptr [edi + 0x18], edi; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x00070d39: add dword ptr [edi + 0x1c], edi; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000d8b81: add dword ptr [edi + 0x1c], edi; add esp, 4; pop ebx; pop esi; ret; 
0x00070c28: add dword ptr [edi + 0x1d], edi; add esp, 0x14; pop ebx; pop esi; ret; 
0x0003af96: add dword ptr [edi + 0x1f], edi; add esp, 4; pop ebx; pop esi; ret; 
0x0016bb6d: add dword ptr [edi + 0x20], edi; add esp, 0x18; pop ebx; ret; 
0x0003b0c5: add dword ptr [edi + 0x20], edi; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x001a1055: add dword ptr [edi + 0x20], edi; add esp, 4; pop ebx; pop esi; ret; 
0x00087f54: add dword ptr [edi + 0x21], edi; add esp, 0x18; pop ebx; ret; 
0x00170b24: add dword ptr [edi + 0x21], edi; add esp, 4; pop ebx; pop esi; ret; 
0x00170c74: add dword ptr [edi + 0x21], edi; pop ebx; pop esi; pop edi; ret; 
0x0004a983: add dword ptr [edi + 0x22], edi; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016ba63: add dword ptr [edi + 0x22], edi; add esp, 8; pop ebx; ret; 
0x0013c722: add dword ptr [edi + 0x23], edi; add esp, 0x18; pop ebx; ret; 
0x00152a0a: add dword ptr [edi + 0x23], edi; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x0016bae1: add dword ptr [edi + 0x24], edi; add esp, 0x18; pop ebx; ret; 
0x0003a169: add dword ptr [edi + 0x24], edi; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x000cd209: add dword ptr [edi + 0x24], edi; add esp, 8; pop ebx; ret; 
0x0011c151: add dword ptr [edi + 0x24], edi; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x001518f0: add dword ptr [edi + 0x25], edi; add esp, 8; pop ebx; ret; 
0x0003a4fb: add dword ptr [edi + 0x2a], edi; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0003a6d0: add dword ptr [edi + 0x2d], edi; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x00120e60: add dword ptr [edi + 0x2d], edi; add esp, 8; pop ebx; ret; 
0x0007ec58: add dword ptr [edi + 0x35], edi; add esp, 8; pop ebx; ret; 
0x00056d16: add dword ptr [edi + 0x37], edi; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x000834de: add dword ptr [edi + 0x37], edi; pop ebx; pop esi; pop edi; ret; 
0x00054cb3: add dword ptr [edi + 0x3a], edi; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x0014cb2a: add dword ptr [edi + 0x3b], edi; add esp, 4; pop ebx; pop esi; ret; 
0x0011c08c: add dword ptr [edi + 0x51], edi; lea esp, [ebp - 8]; pop ebx; pop esi; pop ebp; ret; 
0x0013c3f4: add dword ptr [edi + 0x59], edi; add esp, 4; pop ebx; pop esi; ret; 
0x00150d94: add dword ptr [edi + 0x59], edi; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x000e990b: add dword ptr [edi + 0x5d], ebx; neg eax; ret; 
0x0014f2a7: add dword ptr [edi + 0x5d], ebx; ret; 
0x000ad736: add dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x00072de2: add dword ptr [edi + 0xb], edi; ret; 
0x00058c41: add dword ptr [edi + 4], edi; ret; 
0x0008460e: add dword ptr [edi + ecx - 0x7b], esi; sal byte ptr [ebp + 0x1b], cl; and dword ptr [eax + 8], 0xfffffffe; xor eax, eax; ret; 
0x0017fb8a: add dword ptr [edi - 0x18], ebx; push 0x81ffff22; ret; 
0x0009e290: add dword ptr [edi - 0x23], esi; pop ebx; pop esi; pop edi; ret; 
0x000d3762: add dword ptr [edi], ecx; dec ecx; ret 0x708d; 
0x0007221a: add dword ptr [edi], ecx; inc ebp; ret 0xec83; 
0x0011e116: add dword ptr [edi], ecx; inc esp; ret; 
0x00128893: add dword ptr [edi], ecx; mov bh, 4; push eax; and eax, 0x1000; ret; 
0x00128753: add dword ptr [edi], ecx; mov bh, 4; push eax; and eax, 0x2000; ret; 
0x001284d3: add dword ptr [edi], ecx; mov bh, 4; push eax; and eax, 0x200; ret; 
0x00128613: add dword ptr [edi], ecx; mov bh, 4; push eax; and eax, 0x4000; ret; 
0x00128253: add dword ptr [edi], ecx; mov bh, 4; push eax; and eax, 0x400; ret; 
0x00128573: add dword ptr [edi], ecx; mov bh, 4; push eax; and eax, 0x8000; ret; 
0x001282f3: add dword ptr [edi], ecx; mov bh, 4; push eax; and eax, 1; ret; 
0x00128393: add dword ptr [edi], ecx; mov bh, 4; push eax; and eax, 2; ret; 
0x001286b3: add dword ptr [edi], ecx; mov bh, 4; push eax; and eax, 4; ret; 
0x001281b3: add dword ptr [edi], ecx; mov bh, 4; push eax; and eax, 8; ret; 
0x0017f66f: add dword ptr [edi], ecx; mov dh, 0; mov byte ptr [edx], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00188aaf: add dword ptr [edi], ecx; mov dh, 0; mov byte ptr [edx], al; pop ebx; ret; 
0x000f51a4: add dword ptr [edi], ecx; mov dh, 4; or edi, dword ptr [ecx]; ret 0xd375; 
0x000f5b07: add dword ptr [edi], ecx; mov dh, 4; sub dword ptr [ecx], edi; ret 0xd075; 
0x0017f547: add dword ptr [edi], ecx; mov dh, 8; mov byte ptr [edx], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001889a7: add dword ptr [edi], ecx; mov dh, 8; mov byte ptr [edx], cl; pop ebx; ret; 
0x000a1d62: add dword ptr [edi], ecx; mov esi, 0xda390114; je 0xa1d60; pop ebx; ret; 
0x0010cbfe: add dword ptr [edi], ecx; test byte ptr [eax - 0x7d000000], ah; in al, dx; or al, 0x8d; and dword ptr [edi + 0x4a], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0009a45c: add dword ptr [edi], ecx; test byte ptr [ebp - 0x7d000000], dh; in al, dx; or byte ptr [esi - 1], dl; jae 0x9a48e; call eax; 
0x000dceaf: add dword ptr [edi], ecx; test byte ptr [edi + edi*8 - 1], cl; push dword ptr [ecx]; fucomi st(1); ret; 
0x0015103c: add dword ptr [edi], ecx; test dl, bh; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf00220], al; ret; 
0x0019772c: add dword ptr [edi], ecx; test dword ptr [ebx - 0xa000000], ecx; ret 0xf02; 
0x0008c7af: add dword ptr [edi], ecx; test dword ptr [ecx - 0x77000000], edx; ret 0xf283; 
0x000abb77: add dword ptr [edi], ecx; test dword ptr [edx + 0x5f000009], esp; pop esi; pop ebx; ret; 
0x0008c9bf: add dword ptr [edi], ecx; test dword ptr [edx - 0x77000000], esp; ret 0xf283; 
0x0014d68a: add dword ptr [edi], ecx; test dword ptr [esi + edi*8 - 1], ebx; dec dword ptr [ebx - 0x72f3dbac]; xor byte ptr [eax - 0x54], 0xf9; call dword ptr [eax - 0x73]; 
0x000a5b8b: add dword ptr [edi], ecx; test dword ptr [esi], edi; add eax, dword ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x0008aa95: add dword ptr [edi], ecx; test dword ptr [esp + edi*8 - 1], eax; jmp dword ptr [ebp - 0x39]; 
0x000f2a1b: add dword ptr [edi], ecx; test esi, ebp; or al, byte ptr [eax]; add byte ptr [ebp - 0x76dd8b40], al; ret 0xe283; 
0x00088f1b: add dword ptr [edi], ecx; xchg dword ptr [ebx - 0x74000003], esp; je 0x88f49; or al, 0x8d; xchg byte ptr [ecx + eax*4 - 7], dl; call dword ptr [eax - 0x73]; 
0x00056e11: add dword ptr [edi], ecx; xchg ebp, eax; ret 0x8366; 
0x00141eb9: add dword ptr [edi], ecx; xchg edi, eax; test dword ptr [edi + edi*8 - 1], edi; jmp dword ptr [esi - 0x7f]; 
0x001404d5: add dword ptr [edi], ecx; xchg esi, eax; ret 0xd008; 
0x000b76b8: add dword ptr [edi], ecx; xchg esp, eax; ret 0x7c83; 
0x000c0b57: add dword ptr [edi], ecx; xchg esp, eax; ret 0xd020; 
0x00043cab: add dword ptr [edi], ecx; xchg esp, eax; ret 0xd120; 
0x0004974c: add dword ptr [edi], ecx; xchg esp, eax; ret; 
0x00166fa8: add dword ptr [edi], ecx; xchg esp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x00023bb4: add dword ptr [edx + 0x2a], -7; call dword ptr [eax - 0x18]; 
0x000dca7a: add dword ptr [edx + 0x46], -7; call dword ptr [eax - 0x18]; 
0x000dcc0d: add dword ptr [edx + 0x46], -7; call dword ptr [eax - 0x73]; 
0x0007880b: add dword ptr [edx + 0x50], edx; push ebx; call dword ptr [edi + 0x40]; 
0x00174257: add dword ptr [edx + 0x50], edx; push esi; call dword ptr [edi + 0x40]; 
0x0008474e: add dword ptr [edx + 0x5f], edi; mov eax, 0x16; cmove eax, edx; ret; 
0x000a8303: add dword ptr [edx + 0xf660841], ecx; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000a3f13: add dword ptr [edx + 0xf660841], ecx; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x001743c9: add dword ptr [edx + 1], edi; mov eax, 0xf0; xor esi, esi; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000894d4: add dword ptr [edx + 4], 1; add esp, 0xc; ret; 
0x00058ba6: add dword ptr [edx + 4], 1; add esp, 4; pop ebx; pop esi; ret; 
0x00058c00: add dword ptr [edx + 4], 1; xor eax, eax; pop ebx; pop esi; ret; 
0x00127717: add dword ptr [edx + eax*2], 1; ret; 
0x00072064: add dword ptr [edx + ebp*2 - 0x77], esi; ret; 
0x0007a994: add dword ptr [edx + ebx*2 - 0x77], esi; ret; 
0x0009e851: add dword ptr [edx + edx*8 + 0xba], eax; add byte ptr [edi], cl; inc esp; ret 0x8dc3; 
0x0009c454: add dword ptr [edx + esi*8 - 0x7d], esi; ret 0x8904; 
0x000b3192: add dword ptr [edx - 0x74cf77ca], ecx; inc esp; and al, 0xc; pop ebx; pop esi; ret; 
0x000b2542: add dword ptr [edx - 0x76fd77ff], ecx; clc; pop ebx; pop edi; ret; 
0x000af692: add dword ptr [edx - 0x76fd77ff], ecx; clc; pop edi; ret; 
0x0010c428: add dword ptr [edx - 1], edx; jbe 0x10c439; call dword ptr [esi + 0x24]; 
0x0010d49b: add dword ptr [edx - 1], edx; jbe 0x10d4ac; call dword ptr [esi + 0x24]; 
0x001143ab: add dword ptr [edx - 1], edx; jbe 0x1143bc; call dword ptr [esi + 0x24]; 
0x0012fd8d: add dword ptr [edx], 0x4a; stc; call dword ptr [eax + 0x57]; 
0x001601d5: add dword ptr [edx], 0x4a; stc; call dword ptr [esi + 0x57]; 
0x00077f2a: add dword ptr [edx], ebp; push 0; push dword ptr [esp + 0x18]; call dword ptr [ebx + 0x40]; 
0x0007e669: add dword ptr [edx], ebp; push 0; push ebx; call dword ptr [ebp + 0x24]; 
0x00173e33: add dword ptr [edx], ebp; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x0007d3d6: add dword ptr [edx], ebp; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x00079f9a: add dword ptr [edx], ebp; push dword ptr [esp + 0x1c]; call 0x739b0; add esp, 0x1c; ret; 
0x00166c1c: add dword ptr [esi + 0x14], edi; pop ebx; pop esi; pop edi; ret; 
0x0011fa19: add dword ptr [esi + 0x53], -7; call dword ptr [eax + 0x57]; 
0x0008ea83: add dword ptr [esi + 0x5f], ebx; pop ebp; ret; 
0x00167ff2: add dword ptr [esi + 0x62], -7; call dword ptr [eax + 0x6a]; 
0x000a8383: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000a3f93: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000a83a3: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000a3fb3: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000a83c3: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000a3fd3: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000a5e13: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [ecx + 5]; pop ebx; ret; 
0x000a5e23: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [ecx + 6]; pop ebx; ret; 
0x000a5e33: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [ecx + 7]; pop ebx; ret; 
0x000a5e43: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [ecx + 8]; pop ebx; ret; 
0x000a80b3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; lea eax, [edx + 7]; pop edi; ret; 
0x000a82f3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; lea eax, [edx + 7]; ret; 
0x000a9eee: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; lea eax, [edx + 8]; pop edi; pop ebx; ret; 
0x00198c33: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000b24d4: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; mov eax, edi; pop ebx; pop edi; ret; 
0x000a5aee: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; mov eax, edi; pop edi; pop ebx; ret; 
0x000a3ce3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; mov eax, edi; pop edi; ret; 
0x000a6b18: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; mov eax, edx; pop ebx; ret; 
0x000a3f03: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; mov eax, edx; ret; 
0x000acc53: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000ab5f3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000acc73: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000ab613: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000acc93: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000ab633: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000accb3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000ab653: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x00043ea0: add dword ptr [esi + ebx + 1], esi; ret; 
0x000eb8a1: add dword ptr [esi + ecx - 0x77], esi; ret; 
0x0007aece: add dword ptr [esi + edi - 0x77], esi; ret; 
0x001984cb: add dword ptr [esi + edx*4 + 0x5e], esi; lea eax, [edi - 0x10]; pop edi; ret; 
0x00149593: add dword ptr [esi - 0x3f], esp; ret 0x6608; 
0x000dc443: add dword ptr [esi - 7], eax; call dword ptr [eax + 0x56]; 
0x0008da39: add dword ptr [esi], 0; add byte ptr [ebx - 0x2776f73c], al; pop ebx; ret; 
0x000e4b33: add dword ptr [esi], 0x2fbb0000; add byte ptr [eax], al; add byte ptr [ebx - 0x46b73], cl; jmp dword ptr [esi - 0x77]; 
0x0010fba7: add dword ptr [esi], edx; add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x0009393f: add dword ptr [esi], edx; add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; ret; 
0x000380d6: add dword ptr [esi], edx; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x000dfd05: add dword ptr [esi], esp; mov eax, 0x7f; cmovne eax, edx; ret; 
0x000e021f: add dword ptr [esi], esp; sete al; movzx eax, al; lea eax, [eax + eax - 1]; ret; 
0x0006e6fa: add dword ptr fs:[eax], eax; add byte ptr [eax], al; add edx, dword ptr [esi + eax*4]; jmp edx; 
0x0006f393: add dword ptr fs:[eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0008072e: add dword ptr ss:[eax], eax; add byte ptr [ebx + 0x6a04ec], al; push 0; push ebx; call dword ptr [ebp + 0x2c]; 
0x00041cd3: add dword ptr ss:[ebx], edx; add byte ptr [ecx + 0x1e8329c7], al; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x00099f34: add eax, -0x23; clc; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x00021df6: add eax, 0; ret; 
0x001280c9: add eax, 0x101f37; mov eax, dword ptr [eax - 0xc8]; mov eax, dword ptr [eax + 0x24]; ret; 
0x000a2728: add eax, 0x10; pop edi; pop esi; ret; 
0x00037683: add eax, 0x10c48300; test eax, eax; jne 0x37698; add esp, 8; pop ebx; ret; 
0x00037912: add eax, 0x10c48300; test eax, eax; jne 0x37920; add esp, 8; pop ebx; ret; 
0x0004c6f2: add eax, 0x11; add esp, 4; add eax, ebx; jmp eax; 
0x000fb8a6: add eax, 0x120428d; rol dword ptr [ebp - 0x76f38b01], 1; ret 0x4089; 
0x000b32eb: add eax, 0x130f66; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afe68: add eax, 0x130f66; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0011e6a0: add eax, 0x14; jne 0x11e6af; add esp, 0x418; pop ebx; ret; 
0x0015130b: add eax, 0x14; jne 0x151316; add esp, 0x1c; ret; 
0x001636ba: add eax, 0x14; jne 0x1636c5; add esp, 0x4c; ret; 
0x0016372a: add eax, 0x14; jne 0x163735; add esp, 0x4c; ret; 
0x0016379a: add eax, 0x14; jne 0x1637a5; add esp, 0x4c; ret; 
0x001637fd: add eax, 0x14; jne 0x163808; add esp, 0x4c; ret; 
0x0016385d: add eax, 0x14; jne 0x163868; add esp, 0x4c; ret; 
0x001638ca: add eax, 0x14; jne 0x1638d5; add esp, 0x4c; ret; 
0x0016394a: add eax, 0x14; jne 0x163955; add esp, 0x4c; ret; 
0x00163e38: add eax, 0x14; jne 0x163e43; add esp, 0x1c; ret; 
0x00163e87: add eax, 0x14; jne 0x163ebc; add esp, 0x1c; ret; 
0x001656a1: add eax, 0x14; jne 0x1656ac; add esp, 0x2c; ret; 
0x00036617: add eax, 0x14; jne 0x36626; mov eax, edx; add esp, 0x1c; ret 4; 
0x0003726d: add eax, 0x14; jne 0x37279; add esp, 0x18; pop ebx; ret; 
0x0003b6ed: add eax, 0x14; jne 0x3b6f8; add esp, 0x1c; ret; 
0x0003b740: add eax, 0x14; jne 0x3b74b; add esp, 0x1c; ret; 
0x0007be01: add eax, 0x14; jne 0x7be1c; add esp, 0x28; pop ebx; ret; 
0x0009dd07: add eax, 0x174d138; inc eax; pop edi; ret; 
0x00030688: add eax, 0x182474ff; push 0; call 0x30630; add esp, 0x1c; ret; 
0x00131306: add eax, 0x18; call eax; 
0x000218e2: add eax, 0x18; jmp eax; 
0x00141009: add eax, 0x18; lea edx, [esp + 0x10]; push edx; push edi; call eax; 
0x001410d5: add eax, 0x18; lea edx, [esp + 0x10]; push edx; push esi; call eax; 
0x0003ab0d: add eax, 0x18; mov dword ptr [ebp + edi], edx; push dword ptr [ebx + 4]; call eax; 
0x0002196d: add eax, 0x18; pop edi; pop ebp; jmp eax; 
0x00157018: add eax, 0x18; push eax; call 0x156df0; add esp, 0x2c; ret; 
0x001511fd: add eax, 0x18; push eax; call edx; 
0x00131335: add eax, 0x18; push esi; call eax; 
0x00092f79: add eax, 0x197087; mov dword ptr [eax + 0x3b04], 0; ret; 
0x00089569: add eax, 0x1a0a97; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x114], edx; ret; 
0x00089549: add eax, 0x1a0ab7; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x11c], edx; ret; 
0x00088349: add eax, 0x1a1cb7; mov eax, dword ptr [eax + 0x3a28]; ret; 
0x00082979: add eax, 0x1a7687; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x110], edx; ret; 
0x00082959: add eax, 0x1a76a7; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x10c], edx; ret; 
0x00082939: add eax, 0x1a76c7; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x108], edx; ret; 
0x00082919: add eax, 0x1a76e7; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x104], edx; ret; 
0x00080e89: add eax, 0x1a9177; mov eax, dword ptr [eax + 0xce0]; ret; 
0x00186cfe: add eax, 0x1c030004; mov edi, dword ptr [esi]; jmp ebx; 
0x00030668: add eax, 0x1c2474ff; push dword ptr [esp + 0x1c]; call 0x30630; add esp, 0x1c; ret; 
0x0015f735: add eax, 0x1c; push dword ptr [eax + 0x190]; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x000384d9: add eax, 0x1f1b27; mov eax, dword ptr [eax + 0x64]; ret; 
0x000384b9: add eax, 0x1f1b47; mov eax, dword ptr [eax + 0x68]; ret; 
0x00030039: add eax, 0x1f9fc7; mov eax, dword ptr [eax - 0x144]; add eax, dword ptr gs:[0]; ret; 
0x00030019: add eax, 0x1f9fe7; mov eax, dword ptr [eax - 0xc]; add eax, dword ptr gs:[0]; ret; 
0x0002fff9: add eax, 0x1fa007; mov eax, dword ptr [eax - 0x13c]; add eax, dword ptr gs:[0]; ret; 
0x0002b8c9: add eax, 0x1fe737; mov eax, dword ptr [eax + 0x1014]; ret; 
0x0012d033: add eax, 0x2000001; push eax; call dword ptr [edi + 0x14]; 
0x000227b9: add eax, 0x207847; mov eax, dword ptr [eax + 0xff0]; ret; 
0x00022799: add eax, 0x207867; mov eax, dword ptr [eax + 0xfec]; ret; 
0x00021de9: add eax, 0x208217; mov eax, dword ptr [eax - 0x134]; add eax, dword ptr gs:[0]; ret; 
0x00021759: add eax, 0x2088a7; lea eax, [eax - 0x6921c]; ret; 
0x00021739: add eax, 0x2088c7; lea eax, [eax - 0x69214]; ret; 
0x00021409: add eax, 0x208bf7; mov edx, dword ptr [eax - 0xb8]; test edx, edx; je 0x21419; ret; 
0x000a2735: add eax, 0x20; pop edi; pop esi; ret; 
0x000a8228: add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000a8388: add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000a3e38: add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000a3f98: add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x0009c14c: add eax, 0x21; ret; 
0x00088a91: add eax, 0x24548b00; or al, 0x89; int1; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000da5b5: add eax, 0x247c8b00; or byte ptr [ebp - 0x6666379], cl; call dword ptr [eax - 0x73]; 
0x00119620: add eax, 0x26; mov edx, dword ptr [edx - 0x134]; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; ret; 
0x00158599: add eax, 0x28; push dword ptr [eax + 0x14]; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x000bda0d: add eax, 0x291ff083; ret 0x5489; 
0x000c7830: add eax, 0x291ff083; ret 0x9589; 
0x000d4dd6: add eax, 0x2964c16b; ret; 
0x000a5bf1: add eax, 0x2d8850f; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0004f3af: add eax, 0x3005868d; stc; call dword ptr [eax + 0x57]; 
0x0010cc4d: add eax, 0x302474ff; push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x000a2742: add eax, 0x30; pop edi; pop esi; ret; 
0x000a9d44: add eax, 0x38800000; add dword ptr [ebx + 0x5b5fffd8], eax; ret; 
0x00160fca: add eax, 0x38; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x00067e97: add eax, 0x39000000; ret; 
0x00030233: add eax, 0x3cc48300; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0012f306: add eax, 0x408b068b; sbb byte ptr [ebx - 0x137c53a3], cl; add al, 0x6a; add eax, 0x575e938d; stc; call dword ptr [edx + 0x50]; 
0x000acafc: add eax, 0x42130f66; add eax, 0x5f0c428d; ret; 
0x000b268f: add eax, 0x42130f66; add eax, 0x5f5bf889; ret; 
0x0009a264: add eax, 0x43a2838d; stc; call dword ptr [eax - 0x73]; 
0x0016059a: add eax, 0x4c; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x00083141: add eax, 0x4fe; add byte ptr [ebp - 0x77], ah; adc eax, 0x7c; ret; 
0x001050fc: add eax, 0x5002e0c1; call 0x20150; add esp, 0x18; pop ebx; ret; 
0x0016384b: add eax, 0x51000000; push eax; call dword ptr [edx + 0xc]; 
0x0018c95c: add eax, 0x542b60f; sub eax, ecx; pop ebp; ret; 
0x0018b153: add eax, 0x542b60f; sub eax, ecx; ret; 
0x0012f313: add eax, 0x575e938d; stc; call dword ptr [edx + 0x50]; 
0x0012f7f1: add eax, 0x5794808d; stc; call dword ptr [eax - 1]; 
0x0012eed5: add eax, 0x57b5808d; stc; call dword ptr [eax - 0x75]; 
0x00130e79: add eax, 0x57df808d; stc; call dword ptr [eax - 0x75]; 
0x0013136c: add eax, 0x5b000000; pop esi; pop ebp; ret; 
0x000ffd79: add eax, 0x5b000000; pop esi; pop edi; pop ebp; ret; 
0x0003791a: add eax, 0x5b08c483; ret; 
0x00138c85: add eax, 0x5b0cc483; pop esi; pop edi; pop ebp; ret; 
0x00037273: add eax, 0x5b18c483; ret; 
0x0008ae0f: add eax, 0x5b28c483; ret; 
0x00093e94: add eax, 0x5b38c483; ret; 
0x000cae3e: add eax, 0x5b48c483; ret; 
0x000a5909: add eax, 0x5b5f0000; ret; 
0x00058368: add eax, 0x5b78c483; ret; 
0x00142810: add eax, 0x5e5b0000; pop edi; pop ebp; ret; 
0x0008e3aa: add eax, 0x5e5bc031; ret; 
0x00128b6a: add eax, 0x5e5bd089; ret; 
0x000abf33: add eax, 0x5e5f0000; pop ebx; ret; 
0x000a8231: add eax, 0x5f0c428d; ret; 
0x000ad881: add eax, 0x5f0d478d; pop esi; pop ebx; ret; 
0x000b2694: add eax, 0x5f5bf889; ret; 
0x000f7d52: add eax, 0x6003848d; cld; clc; call dword ptr [eax - 0x73]; 
0x00171138: add eax, 0x6410448d; ret; 
0x0013132f: add eax, 0x6509c8c1; xor eax, dword ptr [0x18]; push esi; call eax; 
0x00088a53: add eax, 0x684f8b00; mov edx, dword ptr [esp + 0xc]; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00130fb8: add eax, 0x6d20878d; stc; call dword ptr [eax - 0x75]; 
0x000ac168: add eax, 0x7130f66; movlpd qword ptr [edi + 5], xmm1; pop edi; pop esi; pop ebx; ret; 
0x0002da41: add eax, 0x748dd375; add dh, dh; ret 0x7503; 
0x000dd65b: add eax, 0x74f2f883; rdtsc; rol byte ptr [ebx + 0x440ffff8], cl; ret 0xc35b; 
0x000305c0: add eax, 0x75003880; or cl, byte ptr [ecx + 0xcc483d0]; ret; 
0x0014e256: add eax, 0x75085039; hlt; ret; 
0x000e6989: add eax, 0x753ffb80; cmp dword ptr [ebx - 0x7ae7dbbc], ecx; ror byte ptr [edi], 0x95; ret 0xb48d; 
0x000888ee: add eax, 0x75fef883; sbb al, 0x83; rol dword ptr [ecx], 0x83; ret 0x8108; 
0x00159c6a: add eax, 0x768dc7eb; add byte ptr [ebx - 0x7c72f314], al; dec ebp; arpl cx, di; call dword ptr [eax - 0x18]; 
0x000afe71: add eax, 0x824448b; pop esi; ret; 
0x001339fc: add eax, 0x83000f66; in al, dx; sbb byte ptr [ebp - 0x6a70880], cl; call dword ptr [eax - 0x18]; 
0x0015e537: add eax, 0x83ffec1c; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0016be77: add eax, 0x83fff174; les edx, ptr [eax]; mov eax, dword ptr [esp + 0xc]; add esp, 0x18; pop ebx; ret; 
0x001170b7: add eax, 0x83ffffff; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x00083b28: add eax, 0x84e8b00; mov edx, 0x21; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00197922: add eax, 0x87820f; add byte ptr [eax], al; lea eax, [eax + 4]; pop edi; ret; 
0x001968e2: add eax, 0x87820f; add byte ptr [eax], al; lea eax, [edi + 4]; pop edi; ret; 
0x00196fb2: add eax, 0x878c0f; add byte ptr [eax], al; lea eax, [ecx + 5]; ret; 
0x00189ab5: add eax, 0x8806b60f; pop es; pop esi; pop edi; pop ebx; ret; 
0x001243e6: add eax, 0x89000000; add al, 0x24; mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000d132f: add eax, 0x8901f083; ret; 
0x000850a2: add eax, 0x89038b10; ret 0xff0; 
0x00093bef: add eax, 0x8b12048d; sbb byte ptr [eax + 0x107], bh; call dword ptr gs:[0x10]; 
0x000c79f2: add eax, 0x8d500000; adc byte ptr [ecx + 0x30], 0xf9; call dword ptr [eax - 0x18]; 
0x0004473d: add eax, 0x8d500000; xchg al, dh; jne 0x4473f; call dword ptr [eax - 0x18]; 
0x00044857: add eax, 0x8d500000; xchg byte ptr [eax], bh; jbe 0x44859; call dword ptr [eax - 0x18]; 
0x00044811: add eax, 0x8d500000; xchg byte ptr [esi + 0x30], ah; stc; call dword ptr [eax - 0x18]; 
0x0004140b: add eax, 0x8d500000; xchg dword ptr [eax], edi; jbe 0x4140d; call dword ptr [eax - 0x18]; 
0x00047911: add eax, 0x8d500000; xchg dword ptr [eax], edi; jbe 0x47913; call dword ptr [eax - 0x18]; 
0x00051118: add eax, 0x8d500000; xchg dword ptr [eax], edi; jbe 0x5111a; call dword ptr [eax - 0x18]; 
0x000bbabf: add eax, 0x8d500000; xchg dword ptr [eax], edi; jbe 0xbbac1; call dword ptr [eax - 0x18]; 
0x000be986: add eax, 0x8d500000; xchg dword ptr [eax], edi; jbe 0xbe988; call dword ptr [eax - 0x18]; 
0x000c15fc: add eax, 0x8d500000; xchg dword ptr [eax], edi; jbe 0xc15fe; call dword ptr [eax - 0x18]; 
0x0004087c: add eax, 0x8d500000; xchg dword ptr [ecx + 0x30], edx; stc; call dword ptr [eax - 0x18]; 
0x000414cd: add eax, 0x8d500000; xchg dword ptr [esi + 0x30], esp; stc; call dword ptr [eax - 0x18]; 
0x00041573: add eax, 0x8d500000; xchg eax, esi; jne 0x41575; call dword ptr [eax - 0x18]; 
0x0004780f: add eax, 0x8d500000; xchg eax, esi; jne 0x47811; call dword ptr [eax - 0x18]; 
0x0005113d: add eax, 0x8d500000; xchg eax, esi; jne 0x5113f; call dword ptr [eax - 0x18]; 
0x000bbb98: add eax, 0x8d500000; xchg eax, esi; jne 0xbbb9a; call dword ptr [eax - 0x18]; 
0x000be867: add eax, 0x8d500000; xchg eax, esi; jne 0xbe869; call dword ptr [eax - 0x18]; 
0x000c166e: add eax, 0x8d500000; xchg eax, esi; jne 0xc1670; call dword ptr [eax - 0x18]; 
0x001451da: add eax, 0x8d8134ff; or ah, 0x72; stc; call dword ptr [eax - 0x18]; 
0x00120db7: add eax, 0x8dfff0ec; and dword ptr [eax - 0x5e], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x001631c1: add eax, 0x90; pop esi; pop edi; ret; 
0x0011a06d: add eax, 0x91c38100; call dword ptr [eax]; 
0x000abbfc: add eax, 0x91d850f; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00163251: add eax, 0x94; pop esi; pop edi; ret; 
0x000fa482: add eax, 0x9bc4868d; stc; call dword ptr [eax - 0x73]; 
0x000fa66a: add eax, 0x9be4868d; stc; call dword ptr [eax - 0x73]; 
0x0019d107: add eax, 0x9c8b0000; and al, 0x80; add byte ptr [eax], al; add dh, dh; ret; 
0x000ad26f: add eax, 0x9da850f; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000edec9: add eax, 0x9dfe283; ret 0x5388; 
0x00160331: add eax, 0xa003848d; and al, 0xf9; call dword ptr [eax + 0x52]; 
0x0012f24b: add eax, 0xa458938d; stc; call dword ptr [edx + 0x50]; 
0x0012efa4: add eax, 0xa480808d; stc; call dword ptr [eax - 0x75]; 
0x0012fbee: add eax, 0xa4b8808d; stc; call dword ptr [eax + 0x6a]; 
0x00197b2d: add eax, 0xa; pop edi; ret; 
0x001959e4: add eax, 0xa; ret; 
0x0015d87d: add eax, 0xac; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x00197b73: add eax, 0xb48d0000; add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; ret; 
0x0008b02c: add eax, 0xb8000004; lock add byte ptr [eax], al; add byte ptr [ecx + 8], bh; mov esi, edx; call dword ptr gs:[0x10]; 
0x000c75b1: add eax, 0xb9cc878d; stc; call dword ptr [eax + 0x53]; 
0x00197792: add eax, 0xb; pop edi; ret; 
0x00195996: add eax, 0xb; ret; 
0x001913ce: add eax, 0xc1830000; adc byte ptr [esi + 0xf], ah; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000b32f4: add eax, 0xc24448b; pop ebx; pop esi; ret; 
0x0011973c: add eax, 0xc2c68100; or byte ptr [ecx], dl; add byte ptr [ebx - 0x77], dl; ret; 
0x0011991d: add eax, 0xc483fff6; adc byte ptr [eax + 1], bh; add esp, 8; pop ebx; ret; 
0x000ced20: add eax, 0xc9c1c189; add al, byte ptr [ecx - 0x70a3d707]; add dh, byte ptr [esi + 0xa]; mov eax, edx; ret; 
0x00197b37: add eax, 0xc; pop edi; ret; 
0x0013fafe: add eax, 0xc; ret; 
0x0016012d: add eax, 0xcc818d50; jb 0x16012d; call dword ptr [eax - 0x18]; 
0x000ff6ee: add eax, 0xcc818d50; jb 0xff6ee; call dword ptr [eax - 0x18]; 
0x001451b9: add eax, 0xcc828d50; jb 0x1451b9; call dword ptr [eax - 0x18]; 
0x00082290: add eax, 0xcc828d50; jb 0x82290; call dword ptr [eax - 0x18]; 
0x000fa5cf: add eax, 0xcc828d50; jb 0xfa5cf; call dword ptr [eax - 0x18]; 
0x000fa71c: add eax, 0xcc828d50; jb 0xfa71c; call dword ptr [eax - 0x18]; 
0x0013b682: add eax, 0xcc838d50; jb 0x13b682; call dword ptr [eax - 0x18]; 
0x0013b947: add eax, 0xcc838d50; jb 0x13b947; call dword ptr [eax - 0x18]; 
0x001474f2: add eax, 0xcc838d50; jb 0x1474f2; call dword ptr [eax - 0x18]; 
0x0015ac9a: add eax, 0xcc838d50; jb 0x15ac9a; call dword ptr [eax - 0x18]; 
0x0015ad66: add eax, 0xcc838d50; jb 0x15ad66; call dword ptr [eax - 0x18]; 
0x0015ae92: add eax, 0xcc838d50; jb 0x15ae92; call dword ptr [eax - 0x18]; 
0x0015af1d: add eax, 0xcc838d50; jb 0x15af1d; call dword ptr [eax - 0x18]; 
0x0015af4a: add eax, 0xcc838d50; jb 0x15af4a; call dword ptr [eax - 0x18]; 
0x0015b7c7: add eax, 0xcc838d50; jb 0x15b7c7; call dword ptr [eax - 0x18]; 
0x0015e435: add eax, 0xcc838d50; jb 0x15e435; call dword ptr [eax - 0x18]; 
0x0015e608: add eax, 0xcc838d50; jb 0x15e608; call dword ptr [eax - 0x18]; 
0x0015ece2: add eax, 0xcc838d50; jb 0x15ece2; call dword ptr [eax - 0x18]; 
0x0015ed60: add eax, 0xcc838d50; jb 0x15ed60; call dword ptr [eax - 0x18]; 
0x0015ed60: add eax, 0xcc838d50; jb 0x15ed60; call dword ptr [eax - 0x18]; ret 0xed18; 
0x0015edad: add eax, 0xcc838d50; jb 0x15edad; call dword ptr [eax - 0x18]; 
0x0015fc2d: add eax, 0xcc838d50; jb 0x15fc2d; call dword ptr [eax - 0x18]; 
0x0016029d: add eax, 0xcc838d50; jb 0x16029d; call dword ptr [eax - 0x18]; 
0x00160f36: add eax, 0xcc838d50; jb 0x160f36; call dword ptr [eax - 0x18]; 
0x00161cf4: add eax, 0xcc838d50; jb 0x161cf4; call dword ptr [eax - 0x18]; 
0x00164098: add eax, 0xcc838d50; jb 0x164098; call dword ptr [eax - 0x18]; 
0x0016451a: add eax, 0xcc838d50; jb 0x16451a; call dword ptr [eax - 0x18]; 
0x0016456c: add eax, 0xcc838d50; jb 0x16456c; call dword ptr [eax - 0x18]; 
0x001645d0: add eax, 0xcc838d50; jb 0x1645d0; call dword ptr [eax - 0x18]; 
0x00164934: add eax, 0xcc838d50; jb 0x164934; call dword ptr [eax - 0x18]; 
0x00164e74: add eax, 0xcc838d50; jb 0x164e74; call dword ptr [eax - 0x18]; 
0x00164ebc: add eax, 0xcc838d50; jb 0x164ebc; call dword ptr [eax - 0x18]; 
0x00164efa: add eax, 0xcc838d50; jb 0x164efa; call dword ptr [eax - 0x18]; 
0x00164fa1: add eax, 0xcc838d50; jb 0x164fa1; call dword ptr [eax - 0x18]; 
0x00165f58: add eax, 0xcc838d50; jb 0x165f58; call dword ptr [eax - 0x18]; 
0x00166a49: add eax, 0xcc838d50; jb 0x166a49; call dword ptr [eax - 0x18]; 
0x0016719a: add eax, 0xcc838d50; jb 0x16719a; call dword ptr [eax - 0x18]; 
0x00057eaf: add eax, 0xcc838d50; jb 0x57eaf; call dword ptr [eax - 0x18]; 
0x00081a61: add eax, 0xcc838d50; jb 0x81a61; call dword ptr [eax - 0x18]; 
0x00081ae4: add eax, 0xcc838d50; jb 0x81ae4; call dword ptr [eax - 0x18]; 
0x0009b56d: add eax, 0xcc838d50; jb 0x9b56d; call dword ptr [eax - 0x18]; 
0x0009b5ce: add eax, 0xcc838d50; jb 0x9b5ce; call dword ptr [eax - 0x18]; 
0x000a24b0: add eax, 0xcc838d50; jb 0xa24b0; call dword ptr [eax - 0x18]; 
0x001391a4: add eax, 0xcc858d50; jb 0x1391a4; call dword ptr [eax - 0x18]; 
0x00139262: add eax, 0xcc858d50; jb 0x139262; call dword ptr [eax - 0x18]; 
0x0013928a: add eax, 0xcc858d50; jb 0x13928a; call dword ptr [eax - 0x18]; 
0x001392ba: add eax, 0xcc858d50; jb 0x1392ba; call dword ptr [eax - 0x18]; 
0x001592e7: add eax, 0xcc858d50; jb 0x1592e7; call dword ptr [eax - 0x18]; 
0x001593e3: add eax, 0xcc858d50; jb 0x1593e3; call dword ptr [eax - 0x18]; 
0x001661d8: add eax, 0xcc858d50; jb 0x1661d8; call dword ptr [eax - 0x18]; 
0x00058ee0: add eax, 0xcc858d50; jb 0x58ee0; call dword ptr [eax - 0x18]; 
0x00058f3a: add eax, 0xcc858d50; jb 0x58f3a; call dword ptr [eax - 0x18]; 
0x0009b352: add eax, 0xcc858d50; jb 0x9b352; call dword ptr [eax - 0x18]; 
0x0015910a: add eax, 0xcc868d50; jb 0x15910a; call dword ptr [eax - 0x18]; 
0x0002fa58: add eax, 0xcc868d50; jb 0x2fa58; call dword ptr [eax - 0x18]; 
0x000fa438: add eax, 0xcc868d50; jb 0xfa438; call dword ptr [eax - 0x18]; 
0x00158bba: add eax, 0xcc878d50; jb 0x158bba; call dword ptr [eax - 0x18]; 
0x0015f826: add eax, 0xcc878d50; jb 0x15f826; call dword ptr [eax - 0x18]; 
0x0016b45b: add eax, 0xd8890000; pop ebx; pop esi; ret; 
0x00197b3c: add eax, 0xd; pop edi; ret; 
0x001959f0: add eax, 0xd; ret; 
0x00079370: add eax, 0xe083d089; add dword ptr [ebx + 0x5e5b14c4], eax; ret; 
0x000a6347: add eax, 0xe9fffff6; inc eax; idiv edi; jmp dword ptr [esi + 0xf]; 
0x00197b41: add eax, 0xe; pop edi; ret; 
0x001959f4: add eax, 0xe; ret; 
0x00067f6f: add eax, 0xec830000; add al, 0x53; push edx; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x0006d27d: add eax, 0xec830000; add al, 0x89; lea esi, [edi + esi*8 - 1]; call dword ptr [esi + 0x52]; 
0x0007cea1: add eax, 0xec830000; or byte ptr [ebp + 0x52282454], cl; push esi; call dword ptr [eax + 0x48]; 
0x0011f6b8: add eax, 0xec830000; or byte ptr [ebp - 0x6b1e17d], cl; call dword ptr [eax + 0x57]; 
0x0011f724: add eax, 0xec830000; or byte ptr [ebp - 0x6b2997d], cl; call dword ptr [eax + 0x57]; 
0x0011f709: add eax, 0xec830000; or byte ptr [ebp - 0x6b2ed7d], cl; call dword ptr [eax + 0x57]; 
0x0011f6ee: add eax, 0xec830000; or byte ptr [ebp - 0x6b3577d], cl; call dword ptr [eax + 0x57]; 
0x000a5bee: add eax, 0xf054a8d; test eax, ebx; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x000abbf9: add eax, 0xf057f8d; test dword ptr [0x5f000009], ebx; pop esi; pop ebx; ret; 
0x000ad26c: add eax, 0xf057f8d; test edx, ebx; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00133df9: add eax, 0xf6207; mov eax, dword ptr [eax - 0x114]; add eax, dword ptr gs:[0]; ret; 
0x00118307: add eax, 0xf7c28100; sbb al, 0x11; add byte ptr [ebx - 0xc77e], cl; dec dword ptr [ebx - 0x3f7aefc0]; je 0x11831d; ret; 
0x0013cc7e: add eax, 0xf; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x001977bb: add eax, 0xf; pop edi; ret; 
0x001959af: add eax, 0xf; ret; 
0x0018c22e: add eax, 0xfd830000; adc byte ptr [ebp - 0x79f00f93], cl; ret; 
0x0019908f: add eax, 0xff250000; inc dword ptr [edi]; add byte ptr [ecx - 0x7683dbbc], cl; ret 0xd285; 
0x00165077: add eax, 0xffff25e9; jmp dword ptr [esi - 0x70]; 
0x000943b3: add eax, 1; mov dword ptr [edx + 0x1fc], eax; ret; 
0x000a1d60: add eax, 1; movsx edx, byte ptr [ecx + eax]; cmp edx, ebx; je 0xa1d60; pop ebx; ret; 
0x00197b00: add eax, 1; pop edi; ret; 
0x0009c101: add eax, 1; ret; 
0x0009e84f: add eax, 1; test dl, dl; mov edx, 0; cmove eax, edx; ret; 
0x0009d488: add eax, 1; xor byte ptr [eax - 1], 0x2a; cmp eax, edx; jne 0x9d488; mov eax, ecx; ret; 
0x000a1f66: add eax, 2; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00197b05: add eax, 2; pop edi; ret; 
0x000c9e97: add eax, 2; ret; 
0x00197745: add eax, 3; pop edi; ret; 
0x000c9eb0: add eax, 3; ret; 
0x000b72eb: add eax, 4; cmp edx, ecx; je 0xb72f6; test edx, edx; jne 0xb72e8; ret; 
0x00197b0f: add eax, 4; pop edi; ret; 
0x00165ff1: add eax, 4; push eax; push dword ptr [esp + 0x1c]; call 0x165e20; add esp, 0x1c; ret; 
0x001959cc: add eax, 4; ret; 
0x000ca077: add eax, 4; test edx, edx; jne 0xca070; mov eax, ecx; pop ebx; ret; 
0x00197b14: add eax, 5; pop edi; ret; 
0x001959d0: add eax, 5; ret; 
0x00197b19: add eax, 6; pop edi; ret; 
0x001959d4: add eax, 6; ret; 
0x0019776b: add eax, 7; pop edi; ret; 
0x0019596f: add eax, 7; ret; 
0x0015e4a7: add eax, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0015e4ca: add eax, 8; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x00197b23: add eax, 8; pop edi; ret; 
0x000fb425: add eax, 8; push eax; call 0xb4980; add esp, 0x1c; ret; 
0x001959dc: add eax, 8; ret; 
0x0013faf8: add eax, 9; and eax, 0xfffffff8; add eax, 0xc; ret; 
0x00197b28: add eax, 9; pop edi; ret; 
0x001959e0: add eax, 9; ret; 
0x00021df5: add eax, dword ptr [0]; ret; 
0x0007031a: add eax, dword ptr [eax - 0x7cfdf2b2]; ret; 
0x000913b1: add eax, dword ptr [eax]; add al, ch; cmpsd dword ptr [esi], dword ptr es:[edi]; ret; 
0x000a9f8f: add eax, dword ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x000c8d9f: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; or ah, 0x74; stc; call dword ptr [eax - 0x18]; 
0x00024d51: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; or dword ptr [eax + 0x6f], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0004471a: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg ah, cl; je 0x4471c; call dword ptr [eax - 0x18]; 
0x00025fe7: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax + 0x6f], cl; stc; call dword ptr [eax - 0x18]; 
0x00087c6e: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [edi + 0x3f], bl; stc; call dword ptr [eax - 0x18]; 
0x0013f919: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [edi - 7], bl; call dword ptr [eax - 0x18]; 
0x0002895d: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [esp + ebp], bl; stc; call dword ptr [eax - 0x18]; 
0x00025406: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + 0x6f], ecx; stc; call dword ptr [eax - 0x18]; 
0x00041474: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [edi], ecx; xor cl, bh; call dword ptr [eax - 0x18]; 
0x0012e602: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [edi], esi; push edi; stc; call dword ptr [eax - 0x18]; 
0x0004160d: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg esp, ecx; je 0x4160f; call dword ptr [eax - 0x18]; 
0x000477ec: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg esp, ecx; je 0x477ee; call dword ptr [eax - 0x18]; 
0x0005104b: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg esp, ecx; je 0x5104d; call dword ptr [eax - 0x18]; 
0x000bbb0c: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg esp, ecx; je 0xbbb0e; call dword ptr [eax - 0x18]; 
0x000c16bb: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg esp, ecx; je 0xc16bd; call dword ptr [eax - 0x18]; 
0x000e6866: add eax, dword ptr [eax]; add byte ptr [eax - 0x7bf0a205], al; add al, 0; add byte ptr [eax - 0x6bf0a305], al; ret 0x5422; 
0x00164266: add eax, dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00161f22: add eax, dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx - 0x7872ef3c], al; and al, 0x64; stc; call dword ptr [eax - 0x73]; 
0x00087db1: add eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 0xc; ret; 
0x0012732e: add eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0010a1cc: add eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000d70ae: add eax, dword ptr [eax]; add byte ptr [eax], al; cmovne eax, edx; ret; 
0x0010a198: add eax, dword ptr [eax]; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011fbd2: add eax, dword ptr [eax]; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x00088389: add eax, dword ptr [eax]; add byte ptr [eax], al; ret; 
0x00081a1b: add eax, dword ptr [eax]; add byte ptr [ebp + 0x72840fc0], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x736d], cl; jmp dword ptr [ebp - 0x5f]; 
0x00087c24: add eax, dword ptr [eax]; add byte ptr [ebp - 0x6c13179], cl; call dword ptr [eax - 0x73]; 
0x00026868: add eax, dword ptr [eax]; add byte ptr [ebp - 0x7497dbbc], cl; je 0x26896; xor byte ptr [ecx + 0x310c2454], cl; fisttp dword ptr [ecx - 0x76bfdbbc]; ret 0xb60f; 
0x00033c39: add eax, dword ptr [eax]; add byte ptr [ebp - 0x7cffd98c], cl; in al, dx; or al, 0x83; ret; 
0x0004c351: add eax, dword ptr [eax]; add byte ptr [ebx + 0x29342454], cl; ret 0x5489; 
0x0017346f: add eax, dword ptr [eax]; add byte ptr [ebx + 0x548d08ec], al; and al, 0x28; push edx; push esi; call dword ptr [eax + 0x48]; 
0x0006a188: add eax, dword ptr [eax]; add byte ptr [ebx + 0x555304ec], al; push edi; call dword ptr [eax + 0x1c]; 
0x00038de0: add eax, dword ptr [eax]; add byte ptr [ebx + 0x565504ec], al; push dword ptr [esp + 0x30]; call edi; 
0x0006f6a0: add eax, dword ptr [eax]; add byte ptr [ebx + 0x565704ec], al; push ebp; call dword ptr [ebx + 0x1c]; 
0x00047e93: add eax, dword ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0019161e: add eax, dword ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0011c871: add eax, dword ptr [eax]; add byte ptr [ebx - 0x2776d73c], al; pop ebx; ret; 
0x000c6c49: add eax, dword ptr [eax]; add byte ptr [ebx - 0x361f7b], cl; inc dword ptr [ebx - 0x363743]; call dword ptr [eax]; 
0x000c84d2: add eax, dword ptr [eax]; add byte ptr [ebx - 0x36277b], cl; inc dword ptr [ebp + 0x28e0fc0]; add al, 0; add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x0010f6c9: add eax, dword ptr [eax]; add byte ptr [ebx - 0x47fee383], al; push es; add byte ptr [eax], al; add byte ptr [ecx - 0x277c9912], cl; jmp dword ptr [esi - 0x77]; 
0x000299c0: add eax, dword ptr [eax]; add byte ptr [ebx - 0x72bbdb8c], cl; xchg byte ptr [eax + 0x69], ah; stc; call dword ptr [eax - 0x73]; 
0x0016c80e: add eax, dword ptr [eax]; add byte ptr [ebx - 0x7472f714], al; clc; stc; call dword ptr [ecx - 0x77]; 
0x0011f5d3: add eax, dword ptr [eax]; add byte ptr [ebx - 0x76f7dbb4], cl; add dword ptr [eax + 1], edi; ret; 
0x000e8395: add eax, dword ptr [eax]; add byte ptr [ebx - 0x7bf0a208], al; outsd dx, dword ptr [esi]; add al, 0; add byte ptr [ebx - 0x6bf0a308], al; ret 0x5422; 
0x00156a46: add eax, dword ptr [eax]; add byte ptr [ebx - 0x7c72f314], al; les esp, ptr [edx - 7]; call dword ptr [eax - 0x18]; 
0x000cd500: add eax, dword ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; pop ebx; sub bh, cl; call dword ptr [eax + 0x56]; 
0x00028e59: add eax, dword ptr [eax]; add byte ptr [ebx - 0x7cfbdba4], cl; ret; 
0x00066e31: add eax, dword ptr [eax]; add byte ptr [ebx - 0x8737b], cl; jmp dword ptr [ebp - 0x75]; 
0x000cf074: add eax, dword ptr [eax]; add byte ptr [ebx - 0xfb73], cl; inc dword ptr [ebx - 0x7e72f714]; pop ebx; sub bh, cl; call dword ptr [eax + 0x53]; 
0x0016eda9: add eax, dword ptr [eax]; add byte ptr [ecx + 0x28c48303], cl; pop ebx; ret; 
0x0016ea9e: add eax, dword ptr [eax]; add byte ptr [ecx + 0x52], dl; call dword ptr [eax + 0x24]; 
0x0016eb3e: add eax, dword ptr [eax]; add byte ptr [ecx + 0x52], dl; call dword ptr [eax + 0x28]; 
0x0017c51e: add eax, dword ptr [eax]; add byte ptr [ecx + 0x5b5e5fd0], cl; ret; 
0x0016d848: add eax, dword ptr [eax]; add byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x0006b459: add eax, dword ptr [eax]; add byte ptr [ecx - 0x8df63], cl; dec dword ptr [ecx - 0x90b7b]; jmp ptr [ecx]; ret; 
0x0013070c: add eax, dword ptr [eax]; add byte ptr [ecx], al; mov dword ptr [ebp - 0x44], edx; call eax; 
0x00040f10: add eax, dword ptr [eax]; add byte ptr [ecx], bh; ret; 
0x00026932: add eax, dword ptr [eax]; add byte ptr [ecx], ch; fmul dword ptr [ecx - 0x76fe743e]; ret; 
0x000a5b8f: add eax, dword ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x0013390d: add eax, dword ptr [eax]; add byte ptr [edi + 7], dh; sar eax, 5; add esp, 0xc; ret; 
0x00077cc9: add eax, dword ptr [eax]; add byte ptr [edx + 2], ch; push 0; push 0; push dword ptr [esp + 0x18]; call dword ptr [edi + 0x40]; 
0x0012dc45: add eax, dword ptr [eax]; add byte ptr [edx], al; call dword ptr [ebp + 0x14]; 
0x00094397: add eax, dword ptr [eax]; add byte ptr [esi + 4], dh; ret; 
0x0014321d: add eax, dword ptr [eax]; add byte ptr [esi - 0x3f], ah; ret 0x8308; 
0x00197739: add eax, dword ptr [eax]; add dh, dh; ret 0xf04; 
0x00197756: add eax, dword ptr [eax]; add dh, dh; ret 0xf20; 
0x0019775f: add eax, dword ptr [eax]; add dh, dh; ret 0xf40; 
0x00133df7: add eax, dword ptr [eax]; add eax, 0xf6207; mov eax, dword ptr [eax - 0x114]; add eax, dword ptr gs:[0]; ret; 
0x00081f1f: add eax, dword ptr [eax]; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x001192f0: add eax, dword ptr [eax]; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x00142309: add eax, dword ptr [eax]; add esp, 8; pop ebx; ret; 
0x00197a05: add eax, dword ptr [eax]; je 0x197b0a; mov eax, 4; pop edi; ret; 
0x0013cb87: add eax, dword ptr [eax]; mov dword ptr [esp], ebp; call ebx; 
0x0013c883: add eax, dword ptr [eax]; mov dword ptr [esp], ebp; call esi; 
0x0013bf23: add eax, dword ptr [eax]; mov dword ptr [esp], esi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x001658cc: add eax, dword ptr [ebp + 0x317774c0]; rol byte ptr [ebx - 0x6bf0fd08], cl; ret 0xf883; 
0x000dc4eb: add eax, dword ptr [ebp + 0x34840fc0]; add dword ptr [eax], eax; add byte ptr [ebx - 0x17aff314], al; ret; 
0x00158e44: add eax, dword ptr [ebp - 0x7cf28b40]; in al, dx; or al, 0x8b; push eax; add al, 0x50; call dword ptr [edx + 0x10]; 
0x00140481: add eax, dword ptr [ebx + 0x428801e8]; add dword ptr [eax + 2], edi; ret; 
0x0015a454: add eax, dword ptr [ebx + 0x478b08ec]; add al, 0x83; in eax, 0xfc; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x00085845: add eax, dword ptr [ebx + 0x57402fa]; pop ebx; pop esi; pop edi; ret; 
0x00174316: add eax, dword ptr [ebx + 0x5e5b04c4]; jmp eax; 
0x00071b90: add eax, dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00076359: add eax, dword ptr [ebx + 0x5e5bef26]; pop edi; ret; 
0x000858aa: add eax, dword ptr [ebx + 0x87403f8]; pop ebx; pop esi; pop edi; ret; 
0x00161f09: add eax, dword ptr [ebx + 0x8b0cec]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x0016284a: add eax, dword ptr [ebx - 0x137cef3c]; or al, 0x8b; push eax; add al, 0x50; call dword ptr [edx + 0x10]; 
0x0003ab04: add eax, dword ptr [ebx - 0x373ef314]; or dword ptr [ebp + 0x33], esp; add eax, 0x18; mov dword ptr [ebp + edi], edx; push dword ptr [ebx + 4]; call eax; 
0x000763ae: add eax, dword ptr [ebx - 0x3b7c10dd]; add al, 0x5b; pop esi; ret; 
0x000719fb: add eax, dword ptr [ebx - 0x3b7cdff2]; add al, 0x5b; pop esi; ret; 
0x0008c9bc: add eax, dword ptr [ebx - 0x7af0fe06]; mov byte ptr [0x89000000], al; ret 0xf283; 
0x0009c971: add eax, dword ptr [ebx - 0xf76fb3c]; pop ebx; pop esi; ret; 
0x00160db1: add eax, dword ptr [ecx]; add byte ptr [eax], al; mov eax, dword ptr [edi + 0x50]; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x000939ad: add eax, dword ptr [ecx]; add byte ptr [eax], al; mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x001743c8: add eax, dword ptr [ecx]; mov edx, 1; mov eax, 0xf0; xor esi, esi; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0009a444: add eax, dword ptr [ecx]; ret 0x38b; 
0x000f3b03: add eax, dword ptr [ecx]; ret 0x4489; 
0x0008a86b: add eax, dword ptr [ecx]; ret 0x8966; 
0x00169788: add eax, dword ptr [ecx]; ret 0x8d89; 
0x000eeb61: add eax, dword ptr [ecx]; ret 0xb60f; 
0x0008be67: add eax, dword ptr [edx]; add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x000d7f6f: add eax, dword ptr [edx]; add esp, 8; pop ebx; ret; 
0x000de765: add eax, dword ptr [esi + 0x3f68]; mov eax, dword ptr [eax]; test eax, eax; je 0xde773; call eax; 
0x00076424: add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0004c6ef: add eax, dword ptr [esp]; add eax, 0x11; add esp, 4; add eax, ebx; jmp eax; 
0x0004b030: add eax, dword ptr [esp]; ret; 
0x000a5b8e: add eax, dword ptr ds:[eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x00087c6d: add eax, dword ptr es:[eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [edi + 0x3f], bl; stc; call dword ptr [eax - 0x18]; 
0x0010f6c8: add eax, dword ptr fs:[eax]; add byte ptr [ebx - 0x47fee383], al; push es; add byte ptr [eax], al; add byte ptr [ecx - 0x277c9912], cl; jmp dword ptr [esi - 0x77]; 
0x00021df4: add eax, dword ptr gs:[0]; ret; 
0x000eab45: add eax, eax; pop ebx; pop esi; ret; 
0x000587d1: add eax, ebp; mov edx, ebp; pop es; add byte ptr [ebx - 0x768bdbbc], cl; ret; 
0x00064d37: add eax, ebp; ret; 
0x0004b083: add eax, ebx; jmp eax; 
0x001667de: add eax, ebx; mov dword ptr [edx + 0xc], eax; mov eax, ebx; pop ebx; ret; 
0x00197b6f: add eax, ecx; jmp 0x1980b0; lea esi, [esi]; lea esi, [esi]; xor eax, eax; ret; 
0x00072214: add eax, ecx; ljmp 0x450f:0x107f602; ret 0xec83; 
0x0017ced4: add eax, ecx; pop ebx; ret; 
0x000b373a: add eax, ecx; pop edi; ret; 
0x00193aa0: add eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x000b3a24: add eax, ecx; ret; 
0x0015093e: add eax, ecx; sub ebx, 1; jne 0x1508d0; pop ebx; pop esi; ret; 
0x000b3738: add eax, edi; add eax, ecx; pop edi; ret; 
0x0014148b: add eax, edi; inc ebp; fadd qword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx - 0xab7b], cl; call dword ptr [eax + 0x6a]; 
0x000b37d7: add eax, edi; pop edi; ret; 
0x000b39b6: add eax, edi; sub eax, 0x10; pop edi; ret; 
0x000b40c4: add eax, edi; xor ch, ch; add eax, ecx; pop edi; ret; 
0x000a2726: add eax, edx; add eax, 0x10; pop edi; pop esi; ret; 
0x000a2733: add eax, edx; add eax, 0x20; pop edi; pop esi; ret; 
0x000a2740: add eax, edx; add eax, 0x30; pop edi; pop esi; ret; 
0x000b424d: add eax, edx; add eax, ecx; ret; 
0x0015b2d9: add eax, edx; pop ebx; pop esi; ret; 
0x000a271c: add eax, edx; pop edi; pop esi; ret; 
0x000b43b3: add eax, edx; ret; 
0x001192ee: add eax, esi; add eax, dword ptr [eax]; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x00131c50: add eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000b3977: add eax, esi; pop ebx; pop esi; sub eax, 0x10; pop edi; ret; 
0x0009c4e2: add ebp, dword ptr [ecx]; ret 0x1489; 
0x000f53fa: add ebp, dword ptr [ecx]; ret 0x5403; 
0x0009fdc5: add ebp, dword ptr [ecx]; ret 0x5503; 
0x0013bb33: add ebp, dword ptr [ecx]; ret 0x8166; 
0x00154fe0: add ebp, dword ptr [ecx]; ret 0xc739; 
0x000ee9d0: add ebp, dword ptr [ecx]; ret 0xd101; 
0x000f555d: add ebp, dword ptr [ecx]; ret 0xda01; 
0x0009eee9: add ebp, dword ptr [ecx]; ret 0xf201; 
0x000a02ab: add ebp, dword ptr [ecx]; ret 0xfa01; 
0x0009505c: add ebp, dword ptr [ecx]; ret; 
0x001a062d: add ebp, dword ptr [edi + 8]; mov dword ptr [esp], ebp; call esi; 
0x0016d34e: add ebp, dword ptr [edi]; jbe 0x16d2d7; in al, dx; add al, 0x83; ret; 
0x0007e667: add ebp, dword ptr [edx + 1]; push 0; push 0; push ebx; call dword ptr [ebp + 0x24]; 
0x00173e31: add ebp, dword ptr [edx + 1]; push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x00173d27: add ebp, dword ptr [edx + 2]; push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x000da6d7: add ebp, eax; ret; 
0x0008577b: add ebp, ebx; ret 0x9066; 
0x000852ba: add ebp, ebx; ret; 
0x00174a88: add ebp, ecx; mov dl, 0x34; clc; jmp dword ptr [esi - 0x70]; 
0x00028d58: add ebp, ecx; sar dh, 0xff; jmp dword ptr [esi - 0x70]; 
0x0015b9dc: add ebp, ecx; sub eax, ecx; push eax; push ebp; push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x00082d02: add ebp, edx; xor eax, eax; add esp, 0xc; ret; 
0x000839d6: add ebx, 0x10; call dword ptr gs:[0x10]; 
0x000de7db: add ebx, 1; mov dword ptr [esp + 8], eax; call edx; 
0x000931c8: add ebx, 1; mov eax, 0x115; call dword ptr gs:[0x10]; 
0x000938e9: add ebx, 1; mov eax, 0x116; call dword ptr gs:[0x10]; 
0x000a2120: add ebx, dword ptr [ebx + 0x5e]; ret; 
0x0003b5c0: add ebx, dword ptr [ebx - 0x77]; rcr byte ptr [esi + 0x5f], 1; pop ebp; ret; 
0x000ac0c9: add ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x00181e8a: add ebx, dword ptr [edi - 0x18]; push 0x81fffeff; ret; 
0x000b5369: add ebx, dword ptr [esi + 0x5f]; ret; 
0x00121304: add ebx, eax; mov ebp, esi; call ebx; 
0x00121304: add ebx, eax; mov ebp, esi; call ebx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x0009c3fa: add ebx, ebp; adc eax, 0x8300768d; ret 0x8b20; 
0x001711c1: add ebx, ebp; dec dword ptr [ebx - 0x7bfc3bbb]; nop; mov al, byte ptr [0x3efff928]; jmp eax; 
0x000b9530: add ebx, ebp; les ecx, ptr [ebx - 0x72ebdb84]; xchg dword ptr [esi + esi*2 - 7], ebx; call dword ptr [eax + 0x68]; 
0x0007a613: add ebx, ebp; mov esp, 0x7e24828d; stc; call dword ptr [eax - 0x73]; 
0x000a1ae1: add ebx, ebp; or ecx, dword ptr [ebp - 0x7cffd98c]; ret 0x3801; 
0x000e5ac8: add ebx, ebp; ret 0x9066; 
0x000ec03a: add ebx, ebp; ret; 
0x00093cd8: add ebx, ebx; mov ebx, dword ptr [ebx]; mov eax, 0x106; call dword ptr gs:[0x10]; 
0x00093d4d: add ebx, ebx; mov ebx, dword ptr [ebx]; mov eax, 0x198; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000a8133: add ebx, esi; movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000a83e3: add ebx, esi; movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; ret; 
0x000a3d63: add ebx, esi; movq qword ptr [edx], mm0; mov eax, edi; pop edi; ret; 
0x000a3ff3: add ebx, esi; movq qword ptr [edx], mm0; mov eax, edx; ret; 
0x00104363: add ecx, 0x150; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x0016df18: add ecx, 0x180; shr ecx, 2; rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x000946f5: add ecx, 0x19590b; mov ecx, dword ptr [ecx + 0x3b68]; test ecx, ecx; jne 0x94710; ret; 
0x00120532: add ecx, 0x4b; stc; call dword ptr [eax - 0x18]; 
0x00103ee0: add ecx, 0x4c; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x0004ac90: add ecx, 0xa; mov dword ptr [edx], ecx; ret; 
0x00162e2f: add ecx, 4; mov eax, dword ptr [edi + 4]; push ecx; push edi; call dword ptr [eax + 8]; 
0x000ad7c9: add ecx, dword ptr [ebp + 0x5e5f0747]; pop ebx; ret; 
0x000b5366: add ecx, dword ptr [ebp + 0x5f5e0346]; ret; 
0x000f51a0: add ecx, dword ptr [ebp + 0xf01084c]; mov dh, 4; or edi, dword ptr [ecx]; ret 0xd375; 
0x00173e1e: add ecx, dword ptr [ebp - 0x1c5f7a]; jmp ptr [ecx]; ret 0xc129; 
0x000c7580: add ecx, dword ptr [ebp - 0x6469380]; call dword ptr [eax + 0x56]; 
0x000c6ab4: add ecx, dword ptr [ebp - 0x646a380]; call dword ptr [eax + 0x56]; 
0x000a5bd0: add ecx, dword ptr [ebp - 0x7af0fcb6]; test byte ptr [edx], 0; add byte ptr [edi + 0x5b], bl; ret; 
0x00162037: add ecx, dword ptr [ebx + 0x20508b00]; push eax; call dword ptr [edx + 0x10]; 
0x000b322c: add ecx, dword ptr [ebx + 0x5b0c2444]; pop esi; ret; 
0x000afdc9: add ecx, dword ptr [ebx + 0x5e082444]; ret; 
0x000b4fd3: add ecx, dword ptr [ebx + 0x5f082444]; ret; 
0x00104919: add ecx, dword ptr [ebx + 0x740828c]; stc; inc dword ptr [ecx]; sar dword ptr [esi], 1; jmp ecx; 
0x0011f67a: add ecx, dword ptr [ebx + 0xf142474]; xchg byte ptr [esi + ecx - 0x137d0000], bl; or byte ptr [ebp - 0x6b42d7d], cl; call dword ptr [eax + 0x57]; 
0x0018efc7: add ecx, dword ptr [ebx - 0x6b7f7474]; idiv edi; mov eax, dword ptr [ebx + eax*4 - 0x86b80]; sub eax, ecx; pop ebx; ret; 
0x000bfd70: add ecx, dword ptr [ebx - 0x72d3db84]; xchg dword ptr [ecx + edi*4 - 7], ebx; call dword ptr [eax + 0x56]; 
0x00039285: add ecx, dword ptr [ebx - 0x7cfbdbbc]; ret; 
0x00141ec5: add ecx, dword ptr [ebx - 0x834b]; dec dword ptr [edi]; xchg ebp, eax; ret; 
0x000b3227: add ecx, dword ptr [ecx + 0x3508908]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afdc4: add ecx, dword ptr [ecx + 0x3508908]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ac0c4: add ecx, dword ptr [ecx + 0x357890f]; pop edi; pop esi; pop ebx; ret; 
0x000a81b6: add ecx, dword ptr [ecx + 0x428d0342]; push es; pop edi; ret; 
0x000a82e6: add ecx, dword ptr [ecx + 0x428d0342]; push es; ret; 
0x0005208a: add ecx, dword ptr [ecx + 0x5f5e5bf0]; ret; 
0x000a6029: add ecx, dword ptr [ecx + 0x7eb83d0]; lea ecx, [edx + 7]; jne 0xa5ed1; pop ebx; ret; 
0x0011a9c9: add ecx, dword ptr [ecx + 0xa890451]; mov dword ptr [edx + 4], eax; ret; 
0x000b3677: add ecx, dword ptr [ecx + ebx*4]; notrack jmp ecx; lea esi, [esi]; pop ebx; pop esi; ret; 
0x000a3ef6: add ecx, dword ptr [ecx - 0x2f76fcbe]; ret; 
0x0011a9f0: add ecx, dword ptr [ecx - 0x3f7afbbe]; je 0x11a9fa; mov dword ptr [eax], edx; ret; 
0x0019f90a: add ecx, dword ptr [ecx - 0x74afdb8c]; je 0x19f936; and al, 9; ret 0xe889; 
0x00165bee: add ecx, dword ptr [ecx - 0x76f7dbbc]; ret 0x18b; 
0x00165c7e: add ecx, dword ptr [ecx - 0x76fbdbbc]; ret 0x18b; 
0x000b25d9: add ecx, dword ptr [ecx - 0x776fcbe]; pop ebx; pop edi; ret; 
0x000a3dc6: add ecx, dword ptr [ecx - 0x776fcbe]; pop edi; ret; 
0x000fc5a4: add ecx, dword ptr [ecx - 7]; call dword ptr [eax + 0x56]; 
0x000ad349: add ecx, dword ptr [ecx]; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0019fdb9: add ecx, dword ptr [ecx]; ret 0x48d; 
0x0002556b: add ecx, dword ptr [edi]; dec ecx; ret 0xec83; 
0x00025746: add ecx, dword ptr [edi]; dec ecx; ret; 
0x00156b76: add ecx, dword ptr [edi]; dec esi; ret 0xec83; 
0x000ad231: add ecx, dword ptr [edi]; test dword ptr [eax], ebx; or al, byte ptr [eax]; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00085924: add ecx, dword ptr [edi]; test dword ptr [ebp - 0x77000000], esi; ret 0xca83; 
0x0019c1f5: add ecx, dword ptr [edi]; test dword ptr [edx + esi*8 - 1], edx; call ebx; 
0x000a5bd3: add ecx, dword ptr [edi]; test esi, esi; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x0008d204: add ecx, dword ptr [edi]; xchg ebp, eax; ret 0xc231; 
0x000c49c9: add ecx, dword ptr [edi]; xchg esi, eax; ret 0xc085; 
0x000c4a0d: add ecx, dword ptr [edi]; xchg esi, eax; ret 0xd284; 
0x00114bd8: add ecx, dword ptr [edi]; xchg esp, eax; ret 0xe2e9; 
0x0010cc38: add ecx, dword ptr [edi]; xchg esp, eax; ret 0xf2e9; 
0x0010e9cb: add ecx, dword ptr [edi]; xchg esp, eax; ret; 
0x000943af: add ecx, eax; call 0x1c9c6ba; mov dword ptr [edx + 0x1fc], eax; ret; 
0x0003b692: add ecx, eax; call 0xae677a9; pop ebx; and eax, 0x3ff; xor eax, edx; ret; 
0x0015b10f: add ecx, eax; cmp ecx, dword ptr [edx + 0x14]; ja 0x15b100; mov dword ptr [edx + 0x10], ecx; pop ebx; ret; 
0x00035e24: add ecx, eax; mov dword ptr [esp + 0xc], edx; mov eax, dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0003644d: add ecx, eax; mov dword ptr [esp + 4], edx; mov eax, dword ptr [esp + 8]; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00036195: add ecx, eax; mov dword ptr [esp + 8], edx; mov eax, dword ptr [esp + 0xc]; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00054c49: add ecx, eax; mov eax, ecx; ret; 
0x00068d90: add ecx, ebp; jmp ecx; 
0x0011cd24: add ecx, ebx; ret 0xcad8; 
0x000fc1ca: add ecx, edx; call 0x7430bc54; mov ah, 0x85; ret; 
0x000b5928: add ecx, edx; notrack jmp ecx; lea esi, [esi]; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1d8]; ret; 
0x000850d3: add ecx, edx; out dx, al; je 0x850f1; xor esi, esi; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000855db: add ecx, edx; out dx, al; je 0x855f6; xor esi, esi; mov eax, edi; call dword ptr gs:[0x10]; 
0x0009a64f: add ecx, edx; test eax, eax; jne 0x9a648; mov eax, ecx; ret; 
0x00136be1: add edi, 0x59; stc; call dword ptr [eax - 0x18]; 
0x00136d82: add edi, 0x59; stc; call dword ptr [eax - 0x73]; 
0x00084f99: add edi, 0x89544; add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; call dword ptr gs:[0x10]; 
0x00093926: add edi, dword ptr [eax - 1]; pop ebx; ret; 
0x000b4480: add edi, dword ptr [ecx]; fmul dword ptr [edi]; inc edi; ret; 
0x001508c0: add edi, dword ptr [esi]; jmp ecx; 
0x000bb2aa: add edi, ecx; call dword ptr [ebx - 1]; 
0x00101541: add edi, ecx; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x001595fc: add edi, edi; jae 0x159608; push esi; call dword ptr [ebx + 0xc]; 
0x0010c97d: add edi, edi; je 0x10c9a5; xor bh, bh; jne 0x10c991; call dword ptr [ebp + 0x24]; 
0x0010da0d: add edi, edi; je 0x10da35; xor bh, bh; jne 0x10da21; call dword ptr [ebp + 0x24]; 
0x0011490d: add edi, edi; je 0x114935; xor bh, bh; jne 0x114921; call dword ptr [ebp + 0x24]; 
0x00037e86: add edi, esi; ret 0; 
0x00196e1e: add edx, 0; jl 0x197040; mov eax, ecx; ret; 
0x00122fd9: add edx, 0x107027; push ebx; mov eax, 0xc3; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00118309: add edx, 0x111cf7; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x10]; test eax, eax; je 0x11831d; ret; 
0x00115a09: add edx, 0x1145f7; push ebx; mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000cc069: add edx, 0x15df97; push ebx; mov eax, 0x4f; mov ecx, dword ptr [esp + 8]; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x000ced45: add edx, 0x16d; mov eax, edx; ret; 
0x00092c49: add edx, 0x1973b7; push ebx; mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00082999: add edx, 0x1a7667; mov eax, dword ptr [esp + 4]; cmp dword ptr [eax], 1; je 0x829b0; ret; 
0x00058a09: add edx, 0x1d15f7; push ebx; mov eax, 0x26; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0003009f: add edx, 0x200; mov dword ptr [eax + ebx], edx; pop ebx; pop esi; ret; 
0x00024d79: add edx, 0x2b; stc; call dword ptr [eax - 0x18]; 
0x00080b5d: add edx, 0x30; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; ret; 
0x000a24d5: add edx, 0x43; stc; call dword ptr [ecx + 0x50]; 
0x0015cba5: add edx, 0x62; stc; call dword ptr [eax - 1]; 
0x00196ff0: add edx, 0xa; jl 0x197040; lea eax, [ecx + 0xa]; ret; 
0x00197000: add edx, 0xb; jl 0x197040; lea eax, [ecx + 0xb]; ret; 
0x00196f6b: add edx, 0xc; jl 0x197040; lea eax, [ecx + 0xc]; ret; 
0x00197010: add edx, 0xd; jl 0x197040; lea eax, [ecx + 0xd]; ret; 
0x00197020: add edx, 0xe; jl 0x197040; lea eax, [ecx + 0xe]; ret; 
0x00197030: add edx, 0xf; jl 0x197040; lea eax, [ecx + 0xf]; ret; 
0x00196f80: add edx, 1; jl 0x197040; lea eax, [ecx + 1]; ret; 
0x0014528c: add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x00149591: add edx, 1; rol dx, 8; mov word ptr [ecx + 0xa], dx; pop ebx; ret; 
0x000e5a8d: add edx, 1; test al, al; jne 0xe5a61; xor eax, eax; ret; 
0x00196f90: add edx, 2; jl 0x197040; lea eax, [ecx + 2]; ret; 
0x00196fa0: add edx, 3; jl 0x197040; lea eax, [ecx + 3]; ret; 
0x00196f08: add edx, 4; jl 0x197040; lea eax, [ecx + 4]; ret; 
0x00196fb0: add edx, 5; jl 0x197040; lea eax, [ecx + 5]; ret; 
0x00196fc0: add edx, 6; jl 0x197040; lea eax, [ecx + 6]; ret; 
0x00196fd0: add edx, 7; jl 0x197040; lea eax, [ecx + 7]; ret; 
0x001408a5: add edx, 8; cmp dword ptr [esp + 8], 0x80; cmovb eax, edx; ret; 
0x00196f41: add edx, 8; jl 0x197040; lea eax, [ecx + 8]; ret; 
0x00196fe0: add edx, 9; jl 0x197040; lea eax, [ecx + 9]; ret; 
0x0007e05a: add edx, dword ptr [eax + eax - 0x78730000]; mov al, byte ptr [0x29ffffe3]; ret 0xf189; 
0x0006e4c7: add edx, dword ptr [esi + eax*4]; jmp edx; 
0x00125992: add edx, eax; cmp ecx, edx; mov edx, 0; cmovb eax, edx; ret; 
0x000b3fc6: add edx, eax; jl 0xb4000; add eax, ecx; ret; 
0x000b3fd6: add edx, eax; jl 0xb4000; lea eax, [ecx + eax + 0x10]; ret; 
0x000b3fe6: add edx, eax; jl 0xb4000; lea eax, [ecx + eax + 0x20]; ret; 
0x000b3ff6: add edx, eax; jl 0xb4000; lea eax, [ecx + eax + 0x30]; ret; 
0x000b3a3f: add edx, eax; jmp 0xb3ab0; lea esi, [esi]; lea esi, [esi]; xor eax, eax; ret; 
0x0004ac79: add edx, ebp; mov dword ptr [edi + 0x15c], eax; mov esp, edx; mov esi, dword ptr [edi + 0x3c]; mov edi, dword ptr [edi + 0x38]; ret; 
0x0006e59c: add edx, ebx; jmp edx; 
0x00086658: add edx, edx; and eax, 0xfffffffd; or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x0004a3e5: add edx, esp; call dword ptr [eax - 0x73]; 
0x00118f24: add esi, 0x1110dc; push ebx; mov ebx, 0xfee1dead; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00109744: add esi, 0x1208bc; push ebx; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x001096e4: add esi, 0x12091c; push ebx; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0015f233: add esi, 0xc; mov eax, dword ptr [ebx + 4]; push esi; push ebx; call dword ptr [eax + 0x24]; 
0x001596d6: add esi, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x000858ad: add esi, dword ptr [eax + ecx + 0x5b]; pop esi; pop edi; ret; 
0x0013e548: add esi, dword ptr [eax + edi*2 - 0x7d]; ret 0x8303; 
0x000ed1e8: add esi, dword ptr [ecx + esi - 0xa]; ret 0x7404; 
0x000b5845: add esi, dword ptr [edi + eax - 0x3a]; add al, 1; add byte ptr [ecx + 0x75], cl; stc; pop esi; ret; 
0x000ed52e: add esi, dword ptr [edi + ebx - 0x7d]; les ecx, ptr [eax]; xor eax, eax; pop ebx; ret; 
0x0008c001: add esi, dword ptr [edi + edi*4 - 0x77]; ret 0xca83; 
0x00085356: add esi, dword ptr [edi + esi - 0x77]; clc; call dword ptr gs:[0x10]; 
0x0002c073: add esi, dword ptr [edx + ecx - 0x7d]; les ecx, ptr [eax]; pop ebx; ret; 
0x0015a753: add esi, dword ptr [esi + 0xa]; mov eax, 2; pop ebx; pop esi; ret; 
0x000857cf: add esi, dword ptr [esi + ecx + 0x5b]; pop esi; pop edi; ret; 
0x00048df2: add esi, eax; inc ebx; jmp dword ptr [eax]; 
0x000496b2: add esi, eax; inc esi; jmp dword ptr [eax]; 
0x0013fa01: add esi, eax; mov dword ptr [edi], esi; pop esi; pop edi; ret; 
0x0013f9d0: add esi, eax; pop ebx; mov dword ptr [edi], esi; pop esi; pop edi; ret; 
0x00121300: add esi, eax; push dword ptr [ecx + eax - 0x3d]; mov ebp, esi; call ebx; 
0x00165313: add esi, ebp; call ecx; 
0x001220db: add esi, ebp; lea ecx, [ebx + ebx]; pop ebx; shr eax, cl; and eax, 3; ret; 
0x000b4701: add esi, ebx; stosd dword ptr es:[edi], eax; mov ecx, edx; rep stosb byte ptr es:[edi], al; pop edi; ret; 
0x0015b8bc: add esi, edx; sub eax, edx; push eax; push esi; push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x000b4422: add esi, esi; ret 0x7403; 
0x000fbd59: add esi, esi; ret 0xf01; 
0x000f0d53: add esi, esi; ret; 
0x0014cddf: add esp, -0x54; stc; call dword ptr [eax + 0x68]; 
0x000b54d9: add esp, 0x100; sub eax, edx; ret; 
0x000582e2: add esp, 0x1018; pop ebx; ret; 
0x00131c4d: add esp, 0x10; add eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00095514: add esp, 0x10; add esp, 0x14; pop ebx; pop esi; ret; 
0x0003b9ed: add esp, 0x10; add esp, 0xc; ret; 
0x0015ab58: add esp, 0x10; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x00143bc6: add esp, 0x10; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x00022826: add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x00084168: add esp, 0x10; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0011a154: add esp, 0x10; add esp, 8; mov eax, 1; pop ebx; ret; 
0x0002c019: add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0008be49: add esp, 0x10; call eax; 
0x00095c83: add esp, 0x10; cmp eax, -1; je 0x95c90; add esp, 0xc; ret; 
0x0015e7c0: add esp, 0x10; cmp eax, 1; mov eax, 1; sbb eax, -1; add esp, 0xc; ret; 
0x00166fa3: add esp, 0x10; cmp eax, 1; sete al; add esp, 0xc; movzx eax, al; ret; 
0x0012ab3f: add esp, 0x10; cmp edx, 1; jg 0x12ab68; add esp, 0x18; pop ebx; ret; 
0x0016badc: add esp, 0x10; cmp edx, 1; jg 0x16bb08; add esp, 0x18; pop ebx; ret; 
0x0016bb68: add esp, 0x10; cmp edx, 1; jg 0x16bb90; add esp, 0x18; pop ebx; ret; 
0x0016be40: add esp, 0x10; cmp edx, 1; jg 0x16be68; add esp, 0x18; pop ebx; ret; 
0x00087f4f: add esp, 0x10; cmp edx, 1; jg 0x87f78; add esp, 0x18; pop ebx; ret; 
0x00166756: add esp, 0x10; jmp 0x166703; call 0x1339f0; endbr32; ret; 
0x0016efb7: add esp, 0x10; jmp 0x16ee77; nop; mov dword ptr [esp + 8], ecx; call eax; 
0x0009a55b: add esp, 0x10; jmp 0x9a4fe; sub esp, 0xc; push dword ptr [esp + 0x14]; call eax; 
0x001406ee: add esp, 0x10; lea eax, [esi + edi]; pop ebx; pop esi; pop edi; ret; 
0x0011c0ef: add esp, 0x10; lea esp, [ebp - 8]; pop ebx; pop esi; pop ebp; ret; 
0x00146dee: add esp, 0x10; mov dword ptr [eax + 8], 0; add esp, 4; pop ebx; pop esi; ret; 
0x00127301: add esp, 0x10; mov dword ptr [ebx + 0x260], 0; add esp, 8; pop ebx; ret; 
0x00127325: add esp, 0x10; mov dword ptr [ebx + 0x260], 3; add esp, 8; pop ebx; ret; 
0x000d6f06: add esp, 0x10; mov eax, 1; add esp, 0xc; ret; 
0x00119920: add esp, 0x10; mov eax, 1; add esp, 8; pop ebx; ret; 
0x00072241: add esp, 0x10; mov eax, 1; pop ebx; pop esi; pop edi; ret; 
0x0011e7e1: add esp, 0x10; mov eax, dword ptr [eax]; test eax, eax; je 0x11e830; call eax; 
0x0011e923: add esp, 0x10; mov eax, dword ptr [eax]; test eax, eax; je 0x11e9c8; call eax; 
0x0012c7cd: add esp, 0x10; mov eax, dword ptr [ebx + 8]; mov dword ptr [ebx + 8], edx; add esp, 8; pop ebx; ret; 
0x00165698: add esp, 0x10; mov eax, dword ptr [esp + 0x1c]; sub eax, dword ptr gs:[0x14]; jne 0x1656ac; add esp, 0x2c; ret; 
0x001636b1: add esp, 0x10; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x1636c5; add esp, 0x4c; ret; 
0x00163721: add esp, 0x10; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x163735; add esp, 0x4c; ret; 
0x00163791: add esp, 0x10; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x1637a5; add esp, 0x4c; ret; 
0x001637f4: add esp, 0x10; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x163808; add esp, 0x4c; ret; 
0x00163854: add esp, 0x10; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x163868; add esp, 0x4c; ret; 
0x001638c1: add esp, 0x10; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x1638d5; add esp, 0x4c; ret; 
0x00163941: add esp, 0x10; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x163955; add esp, 0x4c; ret; 
0x00037a30: add esp, 0x10; mov eax, dword ptr [esp + 0xc]; add esp, 0x14; pop ebx; pop esi; ret; 
0x00087f8b: add esp, 0x10; mov eax, dword ptr [esp + 0xc]; add esp, 0x18; pop ebx; ret; 
0x000da077: add esp, 0x10; mov eax, dword ptr [esp + 0xc]; call eax; 
0x00163e2f: add esp, 0x10; mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x163e43; add esp, 0x1c; ret; 
0x0003b6e4: add esp, 0x10; mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x3b6f8; add esp, 0x1c; ret; 
0x0003b737: add esp, 0x10; mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x3b74b; add esp, 0x1c; ret; 
0x00119879: add esp, 0x10; mov eax, ebx; add esp, 4; pop ebx; pop esi; ret; 
0x000da1e4: add esp, 0x10; mov eax, edi; call eax; 
0x0007192b: add esp, 0x10; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x00140fd3: add esp, 0x10; mov eax, edx; pop ebx; pop esi; pop edi; ret; 
0x0003b0f7: add esp, 0x10; mov eax, esi; add esp, 4; pop ebx; pop esi; ret; 
0x0014949b: add esp, 0x10; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00021dc5: add esp, 0x10; mov ecx, dword ptr [esp + 0xc]; sub ecx, dword ptr gs:[0x14]; jne 0x21dd9; add esp, 0x1c; ret; 
0x0011aec6: add esp, 0x10; mov edx, 1; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00086b85: add esp, 0x10; mov edx, 1; xor ebx, ebx; nop; mov eax, edx; call dword ptr gs:[0x10]; 
0x0013362b: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x133645; add esp, 0x2c; ret; 
0x0013369b: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x1336b5; add esp, 0x2c; ret; 
0x0013aadc: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x13aaf0; add esp, 0x2c; ret; 
0x0003ad52: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x3ad66; add esp, 0x2c; ret; 
0x0003ae82: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x3ae96; add esp, 0x2c; ret; 
0x000864f4: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x86508; add esp, 0x2c; ret; 
0x0008ae90: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x8aea4; add esp, 0x2c; ret; 
0x0008c1f4: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x8c208; add esp, 0x2c; ret; 
0x0008c654: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x8c668; add esp, 0x2c; ret; 
0x0008cb40: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x8cb54; add esp, 0x2c; ret; 
0x0008cf90: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x8cfa4; add esp, 0x2c; ret; 
0x00163641: add esp, 0x10; mov edx, dword ptr [esp + 0x3c]; sub edx, dword ptr gs:[0x14]; jne 0x163655; add esp, 0x4c; ret; 
0x001195e5: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x1195f9; add esp, 0x1c; ret; 
0x001745bf: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x1745d3; add esp, 0x1c; ret; 
0x0003b794: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x3b7a8; add esp, 0x1c; ret; 
0x0003b7e7: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x3b7fb; add esp, 0x1c; ret; 
0x0003b834: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x3b848; add esp, 0x1c; ret; 
0x0003b887: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x3b89b; add esp, 0x1c; ret; 
0x000cad84: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xcad98; add esp, 0x1c; ret; 
0x000d4828: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xd483c; add esp, 0x1c; ret; 
0x000d6eb8: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xd6ecc; add esp, 0x1c; ret; 
0x00021c4b: add esp, 0x10; neg eax; pop ebx; adc edx, 0; neg edx; ret; 
0x000220f4: add esp, 0x10; neg eax; sbb eax, eax; add esp, 0xc; ret; 
0x00056b98: add esp, 0x10; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0002bb54: add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0013c929: add esp, 0x10; push dword ptr [esp + 4]; push 0x400; push dword ptr [esp + 0x10]; push ebp; call edi; 
0x001482ae: add esp, 0x10; sub eax, 1; add esp, 4; pop ebx; pop esi; ret; 
0x00162e3a: add esp, 0x10; sub esp, 0xc; mov eax, dword ptr [edi + 4]; push edi; call dword ptr [eax + 0x10]; 
0x0016284b: add esp, 0x10; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x0015a47d: add esp, 0x10; sub esp, 8; mov eax, dword ptr [edi + 4]; push 8; push edi; call dword ptr [eax + 0x18]; 
0x001328d0: add esp, 0x10; test eax, eax; je 0x1328e0; add esp, 8; pop ebx; ret; 
0x0013bfc0: add esp, 0x10; test eax, eax; je 0x13bfd0; sub esp, 0xc; push esi; call eax; 
0x0013c330: add esp, 0x10; test eax, eax; je 0x13c340; sub esp, 0xc; push esi; call eax; 
0x0015ac43: add esp, 0x10; test eax, eax; je 0x15ad4b; sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x00119b9c: add esp, 0x10; test eax, eax; jne 0x119b5c; add esp, 0xc; ret; 
0x00037685: add esp, 0x10; test eax, eax; jne 0x37698; add esp, 8; pop ebx; ret; 
0x00037914: add esp, 0x10; test eax, eax; jne 0x37920; add esp, 8; pop ebx; ret; 
0x000ddda4: add esp, 0x10; test eax, eax; jne 0xdddb0; add esp, 8; pop ebx; ret; 
0x00125221: add esp, 0x10; test eax, eax; js 0x125230; add esp, 8; pop ebx; ret; 
0x001500ef: add esp, 0x10; test eax, eax; sete al; add esp, 0xc; ret; 
0x0009a520: add esp, 0x10; test ebp, ebp; jne 0x9a479; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax - 0x148]; call dword ptr [eax]; 
0x00171f7f: add esp, 0x10; test ebx, ebx; jne 0x171f90; add esp, 8; pop ebx; ret; 
0x00087da1: add esp, 0x10; xor eax, eax; add esp, 0xc; ret; 
0x000351af: add esp, 0x10; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x000ed55b: add esp, 0x10; xor eax, eax; add esp, 8; pop ebx; ret; 
0x00087e9a: add esp, 0x10; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00146ccc: add esp, 0x110; pop ebx; pop esi; pop edi; ret; 
0x00037b88: add esp, 0x114; pop ebx; pop edi; ret; 
0x00146ed4: add esp, 0x118; pop ebx; ret; 
0x001470d4: add esp, 0x11c; ret; 
0x0016d621: add esp, 0x11cc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000375e8: add esp, 0x124; pop ebx; pop esi; ret; 
0x0003831a: add esp, 0x12c; ret; 
0x000b6111: add esp, 0x14; lea eax, [eax + ebx*4]; pop ebx; pop esi; ret; 
0x00124423: add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x001658ef: add esp, 0x14; mov eax, edx; pop ebx; pop esi; ret; 
0x0009ae68: add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret 4; 
0x000909fe: add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret; 
0x0008202a: add esp, 0x14; pop ebx; pop esi; jmp eax; 
0x000cd19a: add esp, 0x14; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0002c7b8: add esp, 0x14; pop ebx; pop esi; ret; 
0x00111b00: add esp, 0x14; pop esi; pop edi; ret; 
0x00159210: add esp, 0x14; push ebx; call dword ptr [eax + 0x10]; 
0x0007b538: add esp, 0x14; xor eax, eax; pop ebx; pop esi; ret; 
0x00075536: add esp, 0x14c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00038fc6: add esp, 0x15c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00142160: add esp, 0x16c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001586f6: add esp, 0x18; lea eax, [ebx + 0xa300]; pop ebx; ret; 
0x0003b8f2: add esp, 0x18; lea eax, [ebx + 6]; pop ebx; ret; 
0x00116d91: add esp, 0x18; mov eax, ebx; pop ebx; ret; 
0x000513d8: add esp, 0x18; mov eax, edx; pop ebx; ret 4; 
0x001657b3: add esp, 0x18; pop ebx; jmp eax; 
0x0009cadf: add esp, 0x18; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00035eaa: add esp, 0x18; pop ebx; ret; 
0x00083e2e: add esp, 0x18; xor eax, eax; pop ebx; ret; 
0x0016c059: add esp, 0x190; mov eax, edx; pop ebx; pop esi; pop edi; ret; 
0x0011858b: add esp, 0x190; pop ebx; pop esi; pop edi; ret; 
0x00108eaa: add esp, 0x19c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0016da50: add esp, 0x1bc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0012185c: add esp, 0x1c; movzx eax, al; neg eax; ret; 
0x0015c839: add esp, 0x1c; movzx eax, al; ret; 
0x00166f39: add esp, 0x1c; not eax; shr eax, 0x1f; ret; 
0x0007352b: add esp, 0x1c; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x00021d19: add esp, 0x1c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00036620: add esp, 0x1c; ret 4; 
0x00021724: add esp, 0x1c; ret; 
0x00178222: add esp, 0x1c; sar eax, 0x1f; ret; 
0x00084e4c: add esp, 0x20; add esp, 0xc; ret; 
0x0013ccdd: add esp, 0x20; add esp, 8; pop ebx; ret; 
0x0013c71d: add esp, 0x20; cmp edx, 1; jg 0x13c748; add esp, 0x18; pop ebx; ret; 
0x00140c48: add esp, 0x20; mov eax, ebx; pop ebx; pop esi; pop edi; ret 4; 
0x000d6f5b: add esp, 0x20; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000cbde5: add esp, 0x20; mov eax, ecx; pop ebx; pop esi; pop edi; ret; 
0x000581ba: add esp, 0x20; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x00071c36: add esp, 0x20; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0011d38f: add esp, 0x20; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x11d3a3; add esp, 0x1c; ret; 
0x00021e73: add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x001a05c5: add esp, 0x20; ret; 
0x00038bfd: add esp, 0x220; pop ebx; pop esi; pop edi; ret; 
0x0008240f: add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x000cc3bd: add esp, 0x24; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00038831: add esp, 0x24; pop ebx; pop esi; ret; 
0x00075439: add esp, 0x24c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0004d113: add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x0011c874: add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x0017497c: add esp, 0x28; or eax, edx; pop ebx; movzx eax, al; neg eax; ret; 
0x00037f48: add esp, 0x28; pop ebx; ret; 
0x000cef11: add esp, 0x28; xor eax, eax; pop ebx; ret; 
0x000e8270: add esp, 0x28ac; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0014afd1: add esp, 0x2bc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0012189d: add esp, 0x2c; movzx eax, al; neg eax; ret; 
0x000f831c: add esp, 0x2c; movzx eax, al; ret; 
0x00021f75: add esp, 0x2c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0003064e: add esp, 0x2c; ret; 
0x000cbc72: add esp, 0x30; mov eax, ecx; pop ebx; pop esi; pop edi; ret; 
0x00078ad6: add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0016ec8a: add esp, 0x34; pop ebx; pop esi; jmp eax; 
0x0003ac1a: add esp, 0x34; pop ebx; pop esi; ret 4; 
0x000dde41: add esp, 0x34; pop ebx; pop esi; ret; 
0x000ffe2b: add esp, 0x36c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000f1cee: add esp, 0x388c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00099cca: add esp, 0x38; mov eax, ebx; pop ebx; ret 4; 
0x00146118: add esp, 0x38; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0008fde9: add esp, 0x38; pop ebx; ret; 
0x00036ec1: add esp, 0x3c; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x00024256: add esp, 0x3c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00119584: add esp, 0x3c; ret; 
0x0012228e: add esp, 0x40; mov eax, ecx; pop ebx; pop esi; pop edi; ret; 
0x00035d31: add esp, 0x40; pop ebx; pop esi; pop edi; fsubp st(1); ret; 
0x00035cbf: add esp, 0x40; pop ebx; pop esi; pop edi; ret; 
0x0011e6a7: add esp, 0x418; pop ebx; ret; 
0x000489ae: add esp, 0x42c; ret; 
0x000518ad: add esp, 0x434; pop ebx; pop esi; ret; 
0x0010bcb9: add esp, 0x44; mov eax, edx; pop ebx; pop esi; ret; 
0x000420ee: add esp, 0x44c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0014a5b0: add esp, 0x46c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000cae3f: add esp, 0x48; pop ebx; ret; 
0x001190a6: add esp, 0x4ac; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00036719: add esp, 0x4c; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x0003955b: add esp, 0x4c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0010c119: add esp, 0x4c; ret; 
0x0006dacc: add esp, 0x4cc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0011f7cd: add esp, 0x4e; stc; call dword ptr [eax + 0x57]; 
0x000cecce: add esp, 0x50; pop ebx; pop esi; pop edi; ret; 
0x0016b458: add esp, 0x514; mov eax, ebx; pop ebx; pop esi; ret; 
0x0011f0a6: add esp, 0x54; mov eax, ebx; pop ebx; pop esi; ret; 
0x001097da: add esp, 0x54; pop ebx; pop esi; ret; 
0x0014280d: add esp, 0x56c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00024c61: add esp, 0x5c; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x000262dc: add esp, 0x5c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00142d90: add esp, 0x5dc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00109906: add esp, 0x60; pop ebx; pop esi; pop edi; ret; 
0x00156a4d: add esp, 0x62; stc; call dword ptr [eax - 0x18]; 
0x000dda33: add esp, 0x64; pop ebx; pop esi; ret; 
0x000dd73f: add esp, 0x68; pop ebx; ret; 
0x000252d4: add esp, 0x6c; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x00085f71: add esp, 0x6c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0011c249: add esp, 0x70; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000d8742: add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x0002db09: add esp, 0x71; stc; call dword ptr [eax - 0x73]; 
0x001622d6: add esp, 0x74; pop ebx; pop edi; ret; 
0x00108914: add esp, 0x74; pop ebx; pop esi; ret; 
0x00058369: add esp, 0x78; pop ebx; ret; 
0x00026be7: add esp, 0x7c; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x000217d9: add esp, 0x7c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00125a09: add esp, 0x7c; ret; 
0x001469ed: add esp, 0x810; pop ebx; pop esi; pop edi; ret; 
0x0006fc91: add esp, 0x816c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000e94fe: add esp, 0x85c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000e6748: add esp, 0x8ac; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0008df37: add esp, 0x90; pop ebx; pop esi; pop edi; ret; 
0x00037c84: add esp, 0x94; pop ebx; pop edi; ret; 
0x00084c98: add esp, 0x94; pop ebx; pop esi; ret; 
0x00037da2: add esp, 0x98; pop ebx; ret; 
0x00199775: add esp, 0x9c; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x00037b02: add esp, 0x9c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00038a92: add esp, 0x9c; ret; 
0x00162098: add esp, 0xa0; pop ebx; pop esi; pop edi; ret; 
0x0019b300: add esp, 0xac; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x0002445c: add esp, 0xac; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0009431c: add esp, 0xb4; pop ebx; pop esi; ret; 
0x0019cfba: add esp, 0xbc; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x00057ca2: add esp, 0xbc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000818e1: add esp, 0xc; jmp eax; 
0x0015ac35: add esp, 0xc; mov eax, dword ptr [edi + 8]; push ebp; push dword ptr [esi + 0xc]; push edi; call dword ptr [eax + 8]; 
0x000305df: add esp, 0xc; mov eax, edx; ret; 
0x0008fe96: add esp, 0xc; movzx eax, al; lea eax, [eax + eax + 2]; ret; 
0x000481a8: add esp, 0xc; movzx eax, al; ret; 
0x00075c51: add esp, 0xc; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x0009ad80: add esp, 0xc; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x0002f636: add esp, 0xc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001589f1: add esp, 0xc; push dword ptr [ebx + 0x229c]; push dword ptr [esp + 0x10]; push esi; call dword ptr [eax + 0xc]; 
0x0012ed8b: add esp, 0xc; push eax; push dword ptr [ebp - 0x4c]; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x0012dc3c: add esp, 0xc; push eax; push dword ptr [esp + 8]; push 0x2000003; call dword ptr [ebp + 0x14]; 
0x0012d9f5: add esp, 0xc; push eax; push edi; push 0x2000006; call dword ptr [esi + 0x14]; 
0x0012f50d: add esp, 0xc; push eax; push esi; push edx; call dword ptr [ebx + 0x14]; 
0x000220fb: add esp, 0xc; ret; 
0x00058e4b: add esp, 0xcc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0016e58e: add esp, 0xd4; mov eax, ebx; pop ebx; pop esi; ret; 
0x0012128c: add esp, 0xe0; pop ebx; pop esi; pop edi; ret; 
0x0010bb25: add esp, 0xe4; pop ebx; pop esi; ret; 
0x000d842b: add esp, 0xe8; pop ebx; ret; 
0x0003202a: add esp, 0xec; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000fc8ca: add esp, 0xfc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000eab42: add esp, 4; add eax, eax; pop ebx; pop esi; ret; 
0x0004c6f7: add esp, 4; add eax, ebx; jmp eax; 
0x0015b2d6: add esp, 4; add eax, edx; pop ebx; pop esi; ret; 
0x000de4e6: add esp, 4; and eax, 0xc; pop ebx; pop esi; ret; 
0x0011f1f8: add esp, 4; lea eax, [ebx - 0x6b598]; pop ebx; pop esi; ret; 
0x00158840: add esp, 4; mov eax, 0x10; pop ebx; pop esi; ret; 
0x0009a128: add esp, 4; mov eax, 0x16; pop ebx; pop esi; ret; 
0x00075be0: add esp, 4; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0010e4ff: add esp, 4; mov eax, 1; pop ebx; pop esi; ret; 
0x0015a9b7: add esp, 4; mov eax, ebx; pop ebx; pop esi; jmp eax; 
0x0003a6d3: add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x0013c0b1: add esp, 4; mov eax, ecx; pop ebx; pop esi; ret; 
0x0015219c: add esp, 4; mov eax, edx; pop ebx; pop edi; ret; 
0x0003b0c8: add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x0015bc7f: add esp, 4; movzx eax, al; pop ebx; pop esi; ret; 
0x00087ee7: add esp, 4; neg eax; pop ebx; pop esi; ret; 
0x00191939: add esp, 4; pop ebp; pop ebx; ret; 
0x00078126: add esp, 4; pop ebx; pop esi; jmp eax; 
0x00035135: add esp, 4; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00022780: add esp, 4; pop ebx; pop esi; ret; 
0x000218d8: add esp, 4; pop ebx; pop esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0018f0a9: add esp, 4; pop ebx; ret; 
0x000847d9: add esp, 4; pop esi; pop edi; ret; 
0x0003634e: add esp, 4; ret; 
0x0015b2c8: add esp, 4; sub eax, ecx; pop ebx; pop esi; ret; 
0x000844e6: add esp, 4; xor eax, eax; pop ebx; pop edi; ret; 
0x0003a16c: add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0014741b: add esp, 8; lea edx, [eax + ecx]; pop ebx; mov eax, edx; ret; 
0x0008ada0: add esp, 8; mov eax, 0x16; pop ebx; ret; 
0x00133384: add esp, 8; mov eax, 0xffffffff; pop ebx; ret; 
0x0011997b: add esp, 8; mov eax, 1; pop ebx; ret; 
0x0008da2b: add esp, 8; mov eax, ebx; pop ebx; ret; 
0x0011aece: add esp, 8; mov eax, edx; pop ebx; ret; 
0x0007e6f4: add esp, 8; movzx eax, al; pop ebx; neg eax; ret; 
0x0015aada: add esp, 8; movzx eax, al; pop ebx; ret; 
0x00104152: add esp, 8; or eax, edx; pop ebx; ret; 
0x000516af: add esp, 8; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0002c01c: add esp, 8; pop ebx; ret; 
0x00036129: add esp, 8; ret; 
0x000372e7: add esp, 8; xor eax, eax; pop ebx; ret; 
0x000f7d55: add esp, dword ptr [eax - 4]; clc; call dword ptr [eax - 0x73]; 
0x00109c49: add sp, 0x1c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00051f87: add word ptr [eax], ax; add esp, 0x1c; ret; 
0x00127716: add word ptr [edx + eax*2], 1; ret; 
0x00051f86: add word ptr ss:[eax], ax; add esp, 0x1c; ret; 
0x0011d332: and ah, 0x44; add byte ptr [eax], al; push eax; call 0x11d4d0; add esp, 0x1c; ret; 
0x000e3233: and ah, 0x47; stc; call dword ptr [eax - 0x18]; 
0x00126d38: and ah, cl; out dx, eax; call dword ptr [eax - 0x18]; 
0x00162e0b: and ah, dh; bnd call dword ptr [ebp - 0x73]; 
0x001590d2: and ah, dh; bnd call dword ptr [edx + 0x6a]; 
0x000de41f: and ah, dh; mov eax, ecx; call dword ptr gs:[0x10]; 
0x000f2741: and al, 0; add al, byte ptr [eax]; add byte ptr [edi], cl; dec esi; ret 0xc085; 
0x000dfc4e: and al, 0; add byte ptr [eax + 0x7f], bh; mov edx, 0xfffa; cmove eax, edx; pop ebx; ret; 
0x00075f52: and al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0011ceea: and al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x4e0f; 
0x00118e05: and al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00118e05: and al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x0012ed88: and al, 0; add byte ptr [ebx - 0xaff33c], al; jne 0x12ed46; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x0017ced2: and al, 0x10; add eax, ecx; pop ebx; ret; 
0x0015a9b5: and al, 0x10; add esp, 4; mov eax, ebx; pop ebx; pop esi; jmp eax; 
0x00158832: and al, 0x10; add esp, 4; pop ebx; pop esi; jmp eax; 
0x00132d9a: and al, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x00084bda: and al, 0x10; and byte ptr [ecx + ecx - 0x7d], dh; les ecx, ptr [eax]; pop ebx; ret; 
0x00036ed6: and al, 0x10; and eax, 0x80000000; ret; 
0x0012810d: and al, 0x10; call 0x127590; pop edx; pop ecx; pop eax; ret; 
0x00074caa: and al, 0x10; call dword ptr [eax + 0x1c]; 
0x00173753: and al, 0x10; call dword ptr [eax + 0x40]; 
0x0010938d: and al, 0x10; call dword ptr gs:[0x10]; 
0x0017046a: and al, 0x10; call eax; 
0x00116f12: and al, 0x10; cmp al, 1; ret 0x1389; 
0x00133909: and al, 0x10; cmp eax, 0x3ff; ja 0x133919; sar eax, 5; add esp, 0xc; ret; 
0x000fb306: and al, 0x10; cmp esi, ecx; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x00035e37: and al, 0x10; fld xword ptr [esp + 4]; fadd st(0); mov dword ptr [eax], ecx; ret; 
0x00035da6: and al, 0x10; fld xword ptr [esp + 4]; fscale; fstp st(1); ret; 
0x00035e2c: and al, 0x10; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00069732: and al, 0x10; jmp 0x68af3; lea esi, [esi]; jmp eax; 
0x00166598: and al, 0x10; lea edx, [esp + 0x10]; mov eax, dword ptr [ecx + 4]; push edx; push ecx; call dword ptr [eax + 0x24]; 
0x00165b28: and al, 0x10; lea edx, [esp + 0x10]; mov eax, dword ptr [ecx + 4]; push edx; push ecx; call dword ptr [eax + 4]; 
0x0017a986: and al, 0x10; mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x00171be8: and al, 0x10; mov dword ptr [eax], esi; mov eax, edx; pop ebx; pop esi; ret; 
0x0008bed5: and al, 0x10; mov dword ptr [ebx], 0; call dword ptr gs:[0x10]; 
0x001254fb: and al, 0x10; mov dword ptr [esp + 0x18], eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x001254ad: and al, 0x10; mov dword ptr [esp + 0x18], eax; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x00071997: and al, 0x10; mov dword ptr [esp + 0xc], ecx; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 8], edx; pop ebx; jmp eax; 
0x00081980: and al, 0x10; mov dword ptr [esp + 0xc], ecx; pop ebx; mov eax, dword ptr [edx + 0x18]; pop esi; jmp eax; 
0x0011c699: and al, 0x10; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x00115ce1: and al, 0x10; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00115bdd: and al, 0x10; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x0010bc29: and al, 0x10; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0010c179: and al, 0x10; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x00125444: and al, 0x10; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00123e19: and al, 0x10; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x00123c19: and al, 0x10; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x0012370b: and al, 0x10; mov eax, 0x1b3; int 0x80; 
0x0011ea4e: and al, 0x10; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x00123af9: and al, 0x10; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x00123cb9: and al, 0x10; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0011f539: and al, 0x10; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x0011f4c9: and al, 0x10; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x0011f399: and al, 0x10; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x00085cb1: and al, 0x10; mov eax, 0xf0; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00078121: and al, 0x10; mov eax, dword ptr [eax + 0x10]; add esp, 4; pop ebx; pop esi; jmp eax; 
0x000818dc: and al, 0x10; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x00127a4b: and al, 0x10; mov eax, dword ptr [eax + 0x4c]; call 0x127920; add esp, 4; ret; 
0x000819d8: and al, 0x10; mov eax, dword ptr [eax + 4]; add esp, 0xc; jmp eax; 
0x00174313: and al, 0x10; mov eax, dword ptr [ebx]; add esp, 4; pop ebx; pop esi; jmp eax; 
0x0016659c: and al, 0x10; mov eax, dword ptr [ecx + 4]; push edx; push ecx; call dword ptr [eax + 0x24]; 
0x00165b2c: and al, 0x10; mov eax, dword ptr [ecx + 4]; push edx; push ecx; call dword ptr [eax + 4]; 
0x00125316: and al, 0x10; mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00124a27: and al, 0x10; mov eax, dword ptr [esp + 0x40]; mov dword ptr [esp + 0x14], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0008d77f: and al, 0x10; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x0010865a: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000d8f1c: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; cmp edx, eax; cmova edx, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x0010c240: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x00123cf0: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x00112100: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xbb; call dword ptr gs:[0x10]; 
0x0011f3d0: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x0011f430: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x0011f300: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x00112130: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xef; call dword ptr gs:[0x10]; 
0x00123a90: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x000832c4: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00123f27: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00123b27: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x00109bc7: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x0010c297: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x0010c1d7: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x0010afe7: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x001152f7: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x0010c207: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x55; call dword ptr gs:[0x10]; 
0x00117027: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x00120fc7: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x00123bd7: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x001238d7: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x0011c527: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x001239c7: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x001239f7: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x000fafe7: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x00123c47: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000de877: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x0010bbe7: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x0010bbb7: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000df6b7: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000df6e7: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x0010bb87: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x0011c657: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x0011c627: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x0011f3f7: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x0011f457: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x0011f327: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x00087ecb: and al, 0x10; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x000932f8: and al, 0x10; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00116acb: and al, 0x10; mov edx, dword ptr [esp + 0x14]; mov esi, ebx; call dword ptr gs:[0x10]; 
0x000de404: and al, 0x10; mov esi, dword ptr [eax - 0x134]; jmp 0xde421; nop; mov eax, edx; call dword ptr gs:[0x10]; 
0x00116a6d: and al, 0x10; mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x001217d2: and al, 0x10; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00111a72: and al, 0x10; mov esi, dword ptr [esp + 0x18]; mov edx, ecx; mov edi, dword ptr [esp + 0x1c]; sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x00058a71: and al, 0x10; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00115d61: and al, 0x10; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00115c5d: and al, 0x10; or dh, 0x80; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x00076166: and al, 0x10; pop ebx; mov eax, dword ptr [edi + 0x10]; pop esi; pop edi; jmp eax; 
0x00076006: and al, 0x10; pop ebx; mov eax, dword ptr [edi + 0x14]; pop esi; pop edi; jmp eax; 
0x0007cd20: and al, 0x10; pop ebx; mov eax, dword ptr [esi + 0x10]; pop esi; pop edi; jmp eax; 
0x0015a76d: and al, 0x10; pop ebx; pop esi; jmp eax; 
0x0009e03b: and al, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0008fbb2: and al, 0x10; push dword ptr [eax + 4]; call dword ptr [eax]; 
0x00039307: and al, 0x10; push dword ptr [ebp]; push dword ptr [esi]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0007d1b6: and al, 0x10; push dword ptr [esp + 0x10]; push esi; call dword ptr [edx + 0x40]; 
0x0013c937: and al, 0x10; push ebp; call edi; 
0x000392a5: and al, 0x10; push ebp; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00162076: and al, 0x10; push ecx; push 0xd; push edx; call dword ptr [eax + 0x14]; 
0x00071a48: and al, 0x10; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x00165778: and al, 0x10; push ecx; push edx; call dword ptr [eax]; 
0x001662ae: and al, 0x10; push edx; push ebx; call dword ptr [eax + 0x20]; 
0x0015f1aa: and al, 0x10; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x00165980: and al, 0x10; push edx; push ebx; call dword ptr [eax + 4]; 
0x0016591d: and al, 0x10; push edx; push ebx; call dword ptr [eax]; 
0x00166570: and al, 0x10; push edx; push ecx; call dword ptr [eax + 0x20]; 
0x00165c18: and al, 0x10; push edx; push ecx; call dword ptr [eax + 4]; 
0x00165b00: and al, 0x10; push edx; push ecx; call dword ptr [eax]; 
0x00141010: and al, 0x10; push edx; push edi; call eax; 
0x001410dc: and al, 0x10; push edx; push esi; call eax; 
0x00029573: and al, 0x10; push es; add byte ptr [eax], al; add cl, ch; ret 0xfffe; 
0x001589fc: and al, 0x10; push esi; call dword ptr [eax + 0xc]; 
0x0007d1ba: and al, 0x10; push esi; call dword ptr [edx + 0x40]; 
0x000cc4cf: and al, 0x10; sbb ch, byte ptr [ecx]; ret; 
0x00142333: and al, 0x10; sub eax, ebx; add esp, 8; pop ebx; ret; 
0x0003913a: and al, 0x10; sub esp, 4; push ebp; push dword ptr [esp + 0x30]; push esi; call edi; 
0x00121f37: and al, 0x10; test edx, edx; je 0x121f70; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x178; call dword ptr gs:[0x10]; 
0x000b8a18: and al, 0x13; add byte ptr [ebx + ecx*2 - 0x7d], dh; ret; 
0x000b882c: and al, 0x13; add byte ptr [edi + edi*2 - 0x7d], dh; ret; 
0x00111da4: and al, 0x14; add dword ptr [eax], eax; add byte ptr [ecx - 0x76efdbbc], cl; ret 0x4c89; 
0x0008aa93: and al, 0x14; add dword ptr [edi], ecx; test dword ptr [esp + edi*8 - 1], eax; jmp dword ptr [ebp - 0x39]; 
0x0012d031: and al, 0x14; add eax, 0x2000001; push eax; call dword ptr [edi + 0x14]; 
0x00174a86: and al, 0x14; add ebp, ecx; mov dl, 0x34; clc; jmp dword ptr [esi - 0x70]; 
0x000305dd: and al, 0x14; add esp, 0xc; mov eax, edx; ret; 
0x00030612: and al, 0x14; call 0x300b0; mov edx, dword ptr [esp + 0x14]; add esp, 0xc; mov eax, edx; ret; 
0x00116a71: and al, 0x14; call dword ptr gs:[0x10]; 
0x00021515: and al, 0x14; call eax; 
0x0012388e: and al, 0x14; cmovne edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x000d7562: and al, 0x14; cmp eax, 0x3b9ac9ff; ja 0xd7600; lea ecx, [esp + 0xc]; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000cae7d: and al, 0x14; fsubp st(1); fstp qword ptr [esp]; fld qword ptr [esp]; add esp, 0xc; ret; 
0x000d75d5: and al, 0x14; lea ecx, [esp + 4]; mov dword ptr [esp + 8], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x000818d8: and al, 0x14; mov dword ptr [esp + 0x10], edx; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x000d7192: and al, 0x14; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x00124a2f: and al, 0x14; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0008322b: and al, 0x14; mov eax, 0xf0; mov edx, 2; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0015a091: and al, 0x14; mov eax, dword ptr [ebx + 0x14]; add esp, 4; pop ebx; pop esi; jmp eax; 
0x0012c7a9: and al, 0x14; mov eax, dword ptr [ebx + 8]; mov dword ptr [ebx + 8], edx; add esp, 8; pop ebx; ret; 
0x00170771: and al, 0x14; mov eax, dword ptr [esp + 0x10]; call eax; 
0x00021511: and al, 0x14; mov eax, dword ptr [esp + 0x14]; call eax; 
0x00124966: and al, 0x14; mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00124da6: and al, 0x14; mov eax, dword ptr [esp + 0x44]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00125c3e: and al, 0x14; mov ebx, 0xd; mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00087ecf: and al, 0x14; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x00178030: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0011c695: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x00115cdd: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0010bc25: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0010c175: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x00123e15: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x00123c15: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x00123af5: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x00123cb5: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0011f535: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x0011f4c5: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x0011f395: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x001217ce: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00115d5d: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000932fc: and al, 0x14; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0010c23c: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x00123cec: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x001120fc: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xbb; call dword ptr gs:[0x10]; 
0x0011f3cc: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x0011f42c: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x0011f2fc: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x0011212c: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xef; call dword ptr gs:[0x10]; 
0x00123a8c: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x00109380: and al, 0x14; mov edx, dword ptr [esp + 0x18]; mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x00058a69: and al, 0x14; mov edx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0017a331: and al, 0x14; mov edx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x001260e1: and al, 0x14; mov edx, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00123198: and al, 0x14; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x001052a2: and al, 0x14; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x00116acf: and al, 0x14; mov esi, ebx; call dword ptr gs:[0x10]; 
0x00075342: and al, 0x14; pop ebx; pop esi; pop edi; ret; 
0x0015b3c0: and al, 0x14; push dword ptr [esi]; call dword ptr [esi + 0x20]; 
0x0002150d: and al, 0x14; push dword ptr [esp + 0x14]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x00158d4d: and al, 0x14; push dword ptr [esp + 0x14]; push dword ptr [esp + 0x74]; push eax; call dword ptr [ecx]; 
0x00158d51: and al, 0x14; push dword ptr [esp + 0x74]; push eax; call dword ptr [ecx]; 
0x00065de6: and al, 0x14; push ebp; call dword ptr [eax + 0x1c]; 
0x001639e8: and al, 0x14; push ebx; call dword ptr [eax]; 
0x000e0e7d: and al, 0x14; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x0015970b: and al, 0x14; push edx; push ebx; call dword ptr [eax + 0x14]; 
0x001588e8: and al, 0x14; push esi; call dword ptr [eax + 4]; 
0x0003a833: and al, 0x14; sub esp, 8; push 0; push edx; call edi; 
0x00048062: and al, 0x14; xor eax, eax; mov esi, dword ptr [esp + 0x28]; mov eax, 0x25; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x00089816: and al, 0x18; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011f678: and al, 0x18; add ecx, dword ptr [ebx + 0xf142474]; xchg byte ptr [esi + ecx - 0x137d0000], bl; or byte ptr [ebp - 0x6b42d7d], cl; call dword ptr [eax + 0x57]; 
0x0007c162: and al, 0x18; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x0015f876: and al, 0x18; call dword ptr [eax + 0x10]; 
0x0006a9a3: and al, 0x18; call dword ptr [eax + 0x1c]; 
0x0016ed4d: and al, 0x18; call dword ptr [eax + 0x378]; add esp, 0x1c; ret; 
0x00077f31: and al, 0x18; call dword ptr [ebx + 0x40]; 
0x00077cd4: and al, 0x18; call dword ptr [edi + 0x40]; 
0x0007779b: and al, 0x18; call dword ptr [edi + 0x48]; 
0x00091681: and al, 0x18; call dword ptr gs:[0x10]; 
0x00161390: and al, 0x18; call eax; 
0x00077bec: and al, 0x18; call ecx; 
0x00122401: and al, 0x18; cmove esi, ebx; lea edx, [esp + 0xc]; mov ebx, dword ptr [esp + 0x50]; call dword ptr gs:[0x10]; 
0x00087e61: and al, 0x18; cmp edi, ecx; mov ebx, dword ptr [eax + 0x68]; cmovbe ecx, edi; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x00121ff0: and al, 0x18; cmp esi, -1; je 0x122010; mov eax, 0x17c; call dword ptr gs:[0x10]; 
0x000cae5d: and al, 0x18; fsubp st(1); fstp qword ptr [esp]; fld qword ptr [esp]; add esp, 0xc; ret; 
0x001302bf: and al, 0x18; je 0x1302d0; add esp, 8; pop ebx; ret; 
0x0016d163: and al, 0x18; lea eax, [eax - 0x699dd]; push eax; call 0x109bf0; add esp, 0x1c; ret; 
0x000f82bd: and al, 0x18; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x000a211a: and al, 0x18; mov dword ptr [edx], eax; lea eax, [edx + 3]; pop ebx; pop esi; ret; 
0x000a2052: and al, 0x18; mov dword ptr [edx], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x0003ba32: and al, 0x18; mov dword ptr [edx], eax; xor eax, eax; add esp, 8; pop ebx; ret; 
0x00158682: and al, 0x18; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x000939aa: and al, 0x18; mov eax, 0x103; mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00109427: and al, 0x18; mov eax, 0x10c; call dword ptr gs:[0x10]; 
0x00109597: and al, 0x18; mov eax, 0x10d; call dword ptr gs:[0x10]; 
0x00109384: and al, 0x18; mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x001254ff: and al, 0x18; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x001254b1: and al, 0x18; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x0012496e: and al, 0x18; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00089806: and al, 0x18; mov eax, 0xf0; mov ecx, 0x87; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x00051fa9: and al, 0x18; mov eax, dword ptr [eax - 0x11c]; push dword ptr [eax]; call 0x685c0; add esp, 0x1c; ret; 
0x00075239: and al, 0x18; mov eax, dword ptr [eax - 0x11c]; push dword ptr [eax]; call 0x6d850; add esp, 0x1c; ret; 
0x00057bfa: and al, 0x18; mov eax, dword ptr [eax - 0x70]; push dword ptr [eax]; call 0x59450; add esp, 0x1c; ret; 
0x0007529a: and al, 0x18; mov eax, dword ptr [eax - 0x70]; push dword ptr [eax]; call 0x60130; add esp, 0x1c; ret; 
0x0016ed07: and al, 0x18; mov eax, dword ptr [eax - 0xc8]; call dword ptr [eax + 0x378]; add esp, 0x1c; ret; 
0x0011c1ae: and al, 0x18; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0016f3a0: and al, 0x18; mov eax, dword ptr [esp + 0x20]; call eax; 
0x000778f5: and al, 0x18; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x40]; 
0x00125b4f: and al, 0x18; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x000fb302: and al, 0x18; mov ebx, dword ptr [esp + 0x10]; cmp esi, ecx; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x00058a6d: and al, 0x18; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00123705: and al, 0x18; mov ebx, ecx; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x1b3; int 0x80; 
0x0011c691: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x0010bc21: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0010c171: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x00123e11: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x00123c11: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x00123af1: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x00123cb1: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0011f531: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x0011f4c1: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x0011f391: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x0017a335: and al, 0x18; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x001212e9: and al, 0x18; mov edi, dword ptr [esp + 0x28]; mov eax, 0x78; mov dword ptr [ecx], ebx; int 0x80; 
0x0010c238: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x00123ce8: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x001120f8: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xbb; call dword ptr gs:[0x10]; 
0x0011f3c8: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x0011f428: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x0011f2f8: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x00112128: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xef; call dword ptr gs:[0x10]; 
0x00123a88: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x0012318b: and al, 0x18; mov edx, dword ptr [esp + 0x1c]; mov eax, 0x12c; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x0010529a: and al, 0x18; mov edx, dword ptr [esp + 0x1c]; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x00123880: and al, 0x18; mov edx, dword ptr [esp + 0x1c]; test esi, 2; mov ebx, dword ptr [esp + 0x14]; cmovne edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x00111a76: and al, 0x18; mov edx, ecx; mov edi, dword ptr [esp + 0x1c]; sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x00077a6e: and al, 0x18; mov esi, dword ptr [esp + 0x18]; push esi; call dword ptr [edi + 0x40]; 
0x001260e5: and al, 0x18; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x001169ee: and al, 0x18; mov esi, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x001261f9: and al, 0x18; or esi, 0x100; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0010880b: and al, 0x18; push -0x64; call 0x108ad0; add esp, 0x18; pop ebx; ret; 
0x001088bf: and al, 0x18; push -0x64; call 0x108c90; add esp, 0x1c; ret; 
0x001099b2: and al, 0x18; push -0x64; call 0x1099c0; add esp, 0x1c; ret; 
0x000dd69b: and al, 0x18; push -1; call 0xdd6b0; add esp, 0x1c; ret; 
0x000dd6e1: and al, 0x18; push -1; call 0xdd7f0; add esp, 0x1c; ret; 
0x00121059: and al, 0x18; push 0; call 0x122700; add esp, 0x1c; ret; 
0x0003068b: and al, 0x18; push 0; call 0x30630; add esp, 0x1c; ret; 
0x000b6508: and al, 0x18; push 0; call 0xb6520; add esp, 0x1c; ret; 
0x0012ceb0: and al, 0x18; push 0; push 0x2000004; call eax; 
0x0003a9ca: and al, 0x18; push 0; push dword ptr [esp + 0x1c]; call 0x3a660; add esp, 0x1c; ret; 
0x0011937b: and al, 0x18; push 0; push dword ptr [esp + 0x1c]; call 0x58600; add esp, 0x1c; ret; 
0x0010b159: and al, 0x18; push 0x241; push dword ptr [esp + 0x1c]; call 0x109d40; add esp, 0x1c; ret; 
0x000845e9: and al, 0x18; push 0x80; push dword ptr [esp + 0x1c]; call 0x84520; add esp, 0x1c; ret; 
0x000cae9f: and al, 0x18; push dword ptr [eax + 4]; push dword ptr [eax]; call 0xcd250; add esp, 0x1c; ret; 
0x0016ed03: and al, 0x18; push dword ptr [esp + 0x18]; mov eax, dword ptr [eax - 0xc8]; call dword ptr [eax + 0x378]; add esp, 0x1c; ret; 
0x00077a6a: and al, 0x18; push dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x18]; push esi; call dword ptr [edi + 0x40]; 
0x001088bb: and al, 0x18; push dword ptr [esp + 0x18]; push -0x64; call 0x108c90; add esp, 0x1c; ret; 
0x001099ae: and al, 0x18; push dword ptr [esp + 0x18]; push -0x64; call 0x1099c0; add esp, 0x1c; ret; 
0x000dd6dd: and al, 0x18; push dword ptr [esp + 0x18]; push -1; call 0xdd7f0; add esp, 0x1c; ret; 
0x000b6504: and al, 0x18; push dword ptr [esp + 0x18]; push 0; call 0xb6520; add esp, 0x1c; ret; 
0x001735de: and al, 0x18; push dword ptr [esp + 0x18]; push esi; call dword ptr [edx + 0x40]; 
0x0003b93d: and al, 0x18; push eax; push eax; call 0x3b950; add esp, 0x1c; ret; 
0x0007cb69: and al, 0x18; push eax; push esi; call dword ptr [edi + 0x48]; 
0x00094232: and al, 0x18; push ebp; call 0x20140; mov eax, dword ptr [esp + 0x1c]; mov dword ptr [esp], eax; call esi; 
0x0014f761: and al, 0x18; push ebp; push 0; push edi; push ebx; call edx; 
0x000d7162: and al, 0x18; push ebx; call eax; 
0x00077a72: and al, 0x18; push esi; call dword ptr [edi + 0x40]; 
0x001735e2: and al, 0x18; push esi; call dword ptr [edx + 0x40]; 
0x0002c0c6: and al, 0x18; sub eax, 1; mov dword ptr [ecx + 4], eax; add esp, 8; pop ebx; ret; 
0x00077be3: and al, 0x18; sub esp, 4; push eax; push edx; push dword ptr [esp + 0x18]; call ecx; 
0x00173e8c: and al, 0x18; test ebx, ebx; jne 0x173ea0; add esp, 8; pop ebx; ret; 
0x0007e6cc: and al, 0x18; test ebx, ebx; jne 0x7e6e0; add esp, 8; pop ebx; ret; 
0x00166f7e: and al, 0x18; test edx, edx; jne 0x166f90; add esp, 0xc; ret; 
0x00166fce: and al, 0x18; test edx, edx; jne 0x166fe0; add esp, 0xc; ret; 
0x00085962: and al, 0x19; aad 0x72; cmp dword ptr [ebx - 0x7cf7dbac], ecx; ret 0x8b04; 
0x000fb423: and al, 0x1c; add eax, 8; push eax; call 0xb4980; add esp, 0x1c; ret; 
0x001087b5: and al, 0x1c; call 0x109330; add esp, 0x1c; ret; 
0x000583b9: and al, 0x1c; call 0x109bf0; add esp, 0x1c; ret; 
0x0010b162: and al, 0x1c; call 0x109d40; add esp, 0x1c; ret; 
0x0017821b: and al, 0x1c; call 0x10a870; add esp, 0x1c; sar eax, 0x1f; ret; 
0x0010aad1: and al, 0x1c; call 0x10aae0; add esp, 0x1c; ret; 
0x00116779: and al, 0x1c; call 0x117200; add esp, 0x10; add esp, 0xc; ret; 
0x00116623: and al, 0x1c; call 0x117200; add esp, 0x1c; ret; 
0x00119b68: and al, 0x1c; call 0x11a290; add esp, 0x10; add esp, 0xc; ret; 
0x0011bf14: and al, 0x1c; call 0x11b880; add esp, 0x1c; ret; 
0x0011d3ca: and al, 0x1c; call 0x11d3e0; add esp, 0x1c; ret; 
0x0011e53b: and al, 0x1c; call 0x11e3b0; add esp, 0x18; pop ebx; ret; 
0x0011e50b: and al, 0x1c; call 0x11e430; add esp, 0x18; pop ebx; ret; 
0x0012132b: and al, 0x1c; call 0x121340; add esp, 0x1c; ret; 
0x001260b3: and al, 0x1c; call 0x126620; add esp, 0x1c; ret; 
0x0017a495: and al, 0x1c; call 0x12a070; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00131230: and al, 0x1c; call 0x12fc60; add esp, 0x1c; ret; 
0x0012fe30: and al, 0x1c; call 0x12fd10; add esp, 0x18; pop ebx; ret; 
0x0017a715: and al, 0x1c; call 0x136d20; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x0017a805: and al, 0x1c; call 0x137ea0; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x0017a835: and al, 0x1c; call 0x138500; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00138b5a: and al, 0x1c; call 0x138b70; add esp, 0x1c; ret; 
0x00138fca: and al, 0x1c; call 0x138fe0; add esp, 0x1c; ret; 
0x0013a7cb: and al, 0x1c; call 0x139a50; add esp, 0x1c; ret; 
0x0017a8e5: and al, 0x1c; call 0x13ce80; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00146e0b: and al, 0x1c; call 0x146ce0; add esp, 0x1c; ret; 
0x00162b18: and al, 0x1c; call 0x162870; add esp, 0x10; add esp, 0xc; ret; 
0x00162af9: and al, 0x1c; call 0x162970; add esp, 0x10; add esp, 0xc; ret; 
0x00164f63: and al, 0x1c; call 0x164c90; add esp, 0x1c; ret; 
0x0015a0ff: and al, 0x1c; call 0x165df0; add esp, 0x1c; ret; 
0x00165ff7: and al, 0x1c; call 0x165e20; add esp, 0x1c; ret; 
0x000da070: and al, 0x1c; call 0x16ed20; add esp, 0x10; mov eax, dword ptr [esp + 0xc]; call eax; 
0x00172a25: and al, 0x1c; call 0x1722a0; add esp, 0x18; pop ebx; ret; 
0x0002c012: and al, 0x1c; call 0x20140; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00105125: and al, 0x1c; call 0x20140; add esp, 0x18; pop ebx; ret; 
0x0009a683: and al, 0x1c; call 0x20160; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0002ecf3: and al, 0x1c; call 0x2ed00; add esp, 0x1c; ret; 
0x0003066f: and al, 0x1c; call 0x30630; add esp, 0x1c; ret; 
0x0003884f: and al, 0x1c; call 0x387d0; add esp, 0x1c; ret; 
0x0003a752: and al, 0x1c; call 0x3a660; add esp, 0x1c; ret; 
0x00171ecb: and al, 0x1c; call 0x3a730; add esp, 0x1c; ret; 
0x0003b8ba: and al, 0x1c; call 0x3bac0; add esp, 0x1c; ret; 
0x0003b91a: and al, 0x1c; call 0x3bb40; add esp, 0x1c; ret; 
0x00038c4d: and al, 0x1c; call 0x3c860; add esp, 0x1c; ret; 
0x00038c8d: and al, 0x1c; call 0x3c960; add esp, 0x1c; ret; 
0x00038c2b: and al, 0x1c; call 0x3e650; add esp, 0x1c; ret; 
0x0003e5bb: and al, 0x1c; call 0x3eee0; add esp, 0x1c; ret; 
0x0003e63b: and al, 0x1c; call 0x41f80; add esp, 0x1c; ret; 
0x0003e6bb: and al, 0x1c; call 0x451a0; add esp, 0x1c; ret; 
0x000489cb: and al, 0x1c; call 0x48970; add esp, 0x1c; ret; 
0x00054beb: and al, 0x1c; call 0x523c0; add esp, 0x1c; ret; 
0x00057bd5: and al, 0x1c; call 0x57b80; add esp, 0x1c; ret; 
0x000752c5: and al, 0x1c; call 0x57ba0; add esp, 0x1c; ret; 
0x001193d1: and al, 0x1c; call 0x58600; add esp, 0x10; add esp, 0xc; ret; 
0x0011930f: and al, 0x1c; call 0x58600; add esp, 0x1c; ret; 
0x00057b93: and al, 0x1c; call 0x59450; add esp, 0x1c; ret; 
0x00057bb3: and al, 0x1c; call 0x60130; add esp, 0x1c; ret; 
0x00051f83: and al, 0x1c; call 0x685c0; add esp, 0x1c; ret; 
0x00057b73: and al, 0x1c; call 0x6d850; add esp, 0x1c; ret; 
0x00070c94: and al, 0x1c; call 0x70ba0; add esp, 0x1c; ret; 
0x00079d55: and al, 0x1c; call 0x70f00; add esp, 0x18; pop ebx; ret; 
0x0007195f: and al, 0x1c; call 0x71860; add esp, 0x1c; ret; 
0x00058903: and al, 0x1c; call 0x72440; add esp, 0x1c; ret; 
0x00079f82: and al, 0x1c; call 0x73870; add esp, 0x1c; ret; 
0x00079f9f: and al, 0x1c; call 0x739b0; add esp, 0x1c; ret; 
0x00057b34: and al, 0x1c; call 0x79fb0; add esp, 0x1c; ret; 
0x00057b54: and al, 0x1c; call 0x7a180; add esp, 0x1c; ret; 
0x0007a7f3: and al, 0x1c; call 0x7a640; add esp, 0x1c; ret; 
0x0008150c: and al, 0x1c; call 0x81450; add esp, 0x18; pop ebx; ret; 
0x000842be: and al, 0x1c; call 0x841e0; add esp, 0x18; pop ebx; ret; 
0x000845f2: and al, 0x1c; call 0x84520; add esp, 0x1c; ret; 
0x0008babb: and al, 0x1c; call 0x8b960; add esp, 0x1c; ret; 
0x0008d7ce: and al, 0x1c; call 0x8d770; add esp, 0x18; pop ebx; ret; 
0x00091b1b: and al, 0x1c; call 0x91360; cmp eax, 1; sbb eax, eax; add esp, 0x1c; ret; 
0x00093261: and al, 0x1c; call 0x931a0; add esp, 0x18; pop ebx; ret; 
0x00092c9f: and al, 0x1c; call 0x932e0; add esp, 0x1c; ret; 
0x0009be2e: and al, 0x1c; call 0x9be40; add esp, 0x1c; ret; 
0x000a22b9: and al, 0x1c; call 0x9dbb0; add esp, 0x18; pop ebx; ret; 
0x0009b027: and al, 0x1c; call 0x9eb50; add esp, 0x1c; ret; 
0x0009beeb: and al, 0x1c; call 0x9fad0; add esp, 0x1c; ret; 
0x0009b2e3: and al, 0x1c; call 0xa2400; add esp, 0x1c; ret; 
0x00131d03: and al, 0x1c; call 0xb4c80; add esp, 0x14; pop ebx; pop esi; ret; 
0x000a218d: and al, 0x1c; call 0xb4c80; add esp, 0x18; pop ebx; ret; 
0x000b61b1: and al, 0x1c; call 0xb4d90; add esp, 0x18; pop ebx; ret; 
0x000a253b: and al, 0x1c; call 0xb4de0; add esp, 0x18; pop ebx; ret; 
0x00132d17: and al, 0x1c; call 0xb5cc0; add esp, 0x18; pop ebx; ret; 
0x000ca0b8: and al, 0x1c; call 0xb6030; add esp, 0x14; pop ebx; pop esi; ret; 
0x00132f27: and al, 0x1c; call 0xb6120; add esp, 0x18; pop ebx; ret; 
0x000b752b: and al, 0x1c; call 0xb9570; add esp, 0x1c; ret; 
0x000b75ab: and al, 0x1c; call 0xbc4e0; add esp, 0x1c; ret; 
0x000b762b: and al, 0x1c; call 0xbf1e0; add esp, 0x1c; ret; 
0x000c1997: and al, 0x1c; call 0xc1b40; add esp, 0x1c; ret; 
0x000c19db: and al, 0x1c; call 0xc27a0; add esp, 0x1c; ret; 
0x000cbb6b: and al, 0x1c; call 0xcb230; add esp, 0x18; pop ebx; ret; 
0x001749e5: and al, 0x1c; call 0xdcbb0; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x000dd6c3: and al, 0x1c; call 0xdd9e0; add esp, 0x1c; ret; 
0x00090401: and al, 0x1c; call 0xde450; add esp, 0x1c; ret; 
0x000dea1f: and al, 0x1c; call 0xde870; add esp, 0x1c; ret; 
0x000df293: and al, 0x1c; call 0xdef30; add esp, 0x1c; ret; 
0x000decbf: and al, 0x1c; call 0xdf280; add esp, 0x1c; ret; 
0x000658e3: and al, 0x1c; call dword ptr [eax + 0x1c]; 
0x00058a75: and al, 0x1c; call dword ptr gs:[0x10]; 
0x00038e17: and al, 0x1c; call edi; 
0x0015b078: and al, 0x1c; lea edx, [ecx + 4]; push edx; push ebx; call dword ptr [eax + 4]; 
0x0015b038: and al, 0x1c; lea edx, [ecx + 4]; push edx; push ebx; call dword ptr [eax]; 
0x000a2028: and al, 0x1c; mov dword ptr [edx + 4], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x000d9d64: and al, 0x1c; mov dword ptr [edx], esi; add esp, 4; pop ebx; pop esi; ret; 
0x0009423c: and al, 0x1c; mov dword ptr [esp], eax; call esi; 
0x0012318f: and al, 0x1c; mov eax, 0x12c; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x0012224b: and al, 0x1c; mov eax, 0x19a; call dword ptr gs:[0x10]; 
0x000ceb5e: and al, 0x1c; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x00159308: and al, 0x1c; mov eax, dword ptr [edx + 4]; mov dword ptr [esp], edx; call dword ptr [eax + 0x10]; 
0x00124e57: and al, 0x1c; mov eax, dword ptr [esp + 0x60]; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0008dff2: and al, 0x1c; mov eax, dword ptr [esp + 0xb8]; mov dword ptr [esp + 0x20], eax; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x0010529e: and al, 0x1c; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x0011c1aa: and al, 0x1c; mov ebx, dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000918cb: and al, 0x1c; mov esi, dword ptr [ebp]; mov dword ptr [esp], ebp; call 0x20140; mov dword ptr [esp], edi; call esi; 
0x00058ad1: and al, 0x1c; mov esi, dword ptr [esp + 0x20]; test edi, edi; je 0x58b20; mov eax, 0x161; call dword ptr gs:[0x10]; 
0x0007caa1: and al, 0x1c; push dword ptr [eax + 0x38]; call 0x10a3d0; add esp, 0x18; pop ebx; ret; 
0x0013202c: and al, 0x1c; push dword ptr [eax]; call 0x685c0; add esp, 0x1c; ret; 
0x0013301c: and al, 0x1c; push dword ptr [eax]; call 0x6d850; add esp, 0x1c; ret; 
0x000331d0: and al, 0x1c; push dword ptr [eax]; call 0xb44b0; add esp, 0x1c; ret; 
0x000719eb: and al, 0x1c; push dword ptr [esi + 0x98]; call eax; 
0x0011bf10: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x11b880; add esp, 0x1c; ret; 
0x0011e537: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x11e3b0; add esp, 0x18; pop ebx; ret; 
0x0011e507: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x11e430; add esp, 0x18; pop ebx; ret; 
0x001260af: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x126620; add esp, 0x1c; ret; 
0x0012fe2c: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x12fd10; add esp, 0x18; pop ebx; ret; 
0x0015a0fb: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x165df0; add esp, 0x1c; ret; 
0x0003066b: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x30630; add esp, 0x1c; ret; 
0x0003884b: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x387d0; add esp, 0x1c; ret; 
0x0003a74e: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x3a660; add esp, 0x1c; ret; 
0x0003e5b7: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x3eee0; add esp, 0x1c; ret; 
0x0003e637: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x41f80; add esp, 0x1c; ret; 
0x0003e6b7: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x451a0; add esp, 0x1c; ret; 
0x00057bd1: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x57b80; add esp, 0x1c; ret; 
0x000752c1: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x57ba0; add esp, 0x1c; ret; 
0x000c4c10: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x60130; add esp, 0x1c; ret; 
0x00051f7f: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x685c0; add esp, 0x1c; ret; 
0x000751e0: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x6d850; add esp, 0x1c; ret; 
0x00070c90: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x70ba0; add esp, 0x1c; ret; 
0x0007195b: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x71860; add esp, 0x1c; ret; 
0x00079f7e: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x73870; add esp, 0x1c; ret; 
0x0007a16f: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x79fb0; add esp, 0x1c; ret; 
0x00057b50: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x7a180; add esp, 0x1c; ret; 
0x0007a7ef: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x7a640; add esp, 0x1c; ret; 
0x000a22b5: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x9dbb0; add esp, 0x18; pop ebx; ret; 
0x000a2189: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xb4c80; add esp, 0x18; pop ebx; ret; 
0x000b61ad: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xb4d90; add esp, 0x18; pop ebx; ret; 
0x00132f23: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xb6120; add esp, 0x18; pop ebx; ret; 
0x000b7527: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xb9570; add esp, 0x1c; ret; 
0x000b75e5: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xbc4e0; add esp, 0x1c; ret; 
0x000b7627: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xbf1e0; add esp, 0x1c; ret; 
0x000c1993: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xc1b40; add esp, 0x1c; ret; 
0x000c19d7: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xc27a0; add esp, 0x1c; ret; 
0x000dd6bf: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xdd9e0; add esp, 0x1c; ret; 
0x000903fd: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xde450; add esp, 0x1c; ret; 
0x000dea1b: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xde870; add esp, 0x1c; ret; 
0x000df28f: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xdef30; add esp, 0x1c; ret; 
0x000decbb: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xdf280; add esp, 0x1c; ret; 
0x00132098: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x685c0; add esp, 0x1c; ret; 
0x00133088: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x6d850; add esp, 0x1c; ret; 
0x0011bf2b: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x11b880; add esp, 0x1c; ret; 
0x0003a74a: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x3a660; add esp, 0x1c; ret; 
0x0003e5b3: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x3eee0; add esp, 0x1c; ret; 
0x0003e633: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x41f80; add esp, 0x1c; ret; 
0x0003e6b3: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x451a0; add esp, 0x1c; ret; 
0x0007a16b: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x79fb0; add esp, 0x1c; ret; 
0x0007a31b: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x7a180; add esp, 0x1c; ret; 
0x0007a7eb: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x7a640; add esp, 0x1c; ret; 
0x000b7523: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xb9570; add esp, 0x1c; ret; 
0x000b7623: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xbf1e0; add esp, 0x1c; ret; 
0x000c19d3: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc27a0; add esp, 0x1c; ret; 
0x000dd6bb: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xdd9e0; add esp, 0x1c; ret; 
0x000903f9: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xde450; add esp, 0x1c; ret; 
0x000df28b: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xdef30; add esp, 0x1c; ret; 
0x00163bd7: and al, 0x1c; push ebx; call dword ptr [eax + 0xc]; 
0x0015b0a0: and al, 0x1c; push ebx; call dword ptr [eax + 4]; 
0x0015b050: and al, 0x1c; push ebx; call dword ptr [eax]; 
0x00163b13: and al, 0x1c; push ebx; call eax; 
0x000d715d: and al, 0x1c; push ecx; mov dword ptr [esp + 0x18], ecx; push ebx; call eax; 
0x0014f49e: and al, 0x1c; push ecx; push eax; push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x00158917: and al, 0x1c; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00111a7c: and al, 0x1c; sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x0016569d: and al, 0x1c; sub eax, dword ptr gs:[0x14]; jne 0x1656ac; add esp, 0x2c; ret; 
0x0007bdfd: and al, 0x1c; sub eax, dword ptr gs:[0x14]; jne 0x7be1c; add esp, 0x28; pop ebx; ret; 
0x000cbcda: and al, 0x1c; sub ecx, dword ptr gs:[0x14]; jne 0xcbcea; add esp, 0x28; pop ebx; ret; 
0x00118045: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x118099; add esp, 0x28; pop ebx; ret; 
0x001180e5: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x118139; add esp, 0x28; pop ebx; ret; 
0x001244bb: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x1244e9; add esp, 0x28; pop ebx; ret; 
0x0012514b: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x125179; add esp, 0x28; pop ebx; ret; 
0x00133630: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x133645; add esp, 0x2c; ret; 
0x001336a0: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x1336b5; add esp, 0x2c; ret; 
0x0013aae1: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x13aaf0; add esp, 0x2c; ret; 
0x0014ab43: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x14ab55; movzx eax, ax; add esp, 0x2c; ret; 
0x0014eda4: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x14edb4; add esp, 0x28; pop ebx; ret; 
0x00158ef7: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x158f07; add esp, 0x28; pop ebx; ret; 
0x00162379: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x162397; add esp, 0x28; pop ebx; ret; 
0x00162419: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x162437; add esp, 0x28; pop ebx; ret; 
0x0016e8c2: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x16e901; add esp, 0x28; pop ebx; ret; 
0x0016ea83: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x16eaab; add esp, 0x28; pop ebx; ret; 
0x0016eb25: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x16eb54; add esp, 0x28; pop ebx; ret; 
0x0016f1ba: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x16f1ca; add esp, 0x28; pop ebx; ret; 
0x00037f3d: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x37f7c; add esp, 0x28; pop ebx; ret; 
0x0003ad57: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x3ad66; add esp, 0x2c; ret; 
0x0003ae87: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x3ae96; add esp, 0x2c; ret; 
0x000821b0: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x821dd; add esp, 0x2c; ret; 
0x00082318: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x8234b; add esp, 0x2c; ret; 
0x000864f9: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x86508; add esp, 0x2c; ret; 
0x0008ae05: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x8ae15; add esp, 0x28; pop ebx; ret; 
0x0008ae95: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x8aea4; add esp, 0x2c; ret; 
0x0008c1f9: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x8c208; add esp, 0x2c; ret; 
0x0008c659: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x8c668; add esp, 0x2c; ret; 
0x0008cb45: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x8cb54; add esp, 0x2c; ret; 
0x0008cf95: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x8cfa4; add esp, 0x2c; ret; 
0x0009004e: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x90077; add esp, 0x2c; ret; 
0x000902da: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x90307; add esp, 0x2c; ret; 
0x00092224: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x92234; add esp, 0x28; pop ebx; ret; 
0x000938ac: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x938bc; add esp, 0x28; pop ebx; ret; 
0x000cad09: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0xcad27; add esp, 0x28; pop ebx; ret; 
0x000cbf30: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0xcbf79; add esp, 0x28; pop ebx; ret; 
0x000d7021: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0xd7062; add esp, 0x28; pop ebx; ret; 
0x000d7240: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0xd7250; add esp, 0x28; pop ebx; ret; 
0x000da805: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0xda859; add esp, 0x28; pop ebx; ret; 
0x000df3f1: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0xdf449; add esp, 0x28; pop ebx; ret; 
0x000df491: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0xdf4e9; add esp, 0x28; pop ebx; ret; 
0x000695bd: and al, 0x1c; sub esp, 4; push ebx; push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x00123884: and al, 0x1c; test esi, 2; mov ebx, dword ptr [esp + 0x14]; cmovne edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x00131ac8: and al, 0x1f; add byte ptr [eax], al; nop; nop; endbr32; ret; 
0x0006de54: and al, 0x20; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x0006de04: and al, 0x20; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x001637e9: and al, 0x20; add dword ptr [eax], eax; add byte ptr [eax], al; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x00171b59: and al, 0x20; call 0x1719d0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00171ba5: and al, 0x20; call 0x171a40; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00171b40: and al, 0x20; call 0x171a50; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00119af5: and al, 0x20; call 0x20140; add esp, 0x18; pop ebx; ret; 
0x0012cdae: and al, 0x20; call dword ptr [eax + 0x14]; 
0x0012319c: and al, 0x20; call dword ptr gs:[0x10]; 
0x000392ab: and al, 0x20; call eax; 
0x001434af: and al, 0x20; call edx; 
0x0009c077: and al, 0x20; cmc; dec dword ptr [ebx + 0x18499]; add dh, dh; ret; 
0x000da3dc: and al, 0x20; lea eax, [esp + 0x38]; push eax; push dword ptr [esp + 0x24]; push dword ptr [esp + 0x30]; call ebx; 
0x00115ab2: and al, 0x20; lea edx, [esp + 4]; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x0008dffd: and al, 0x20; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x00116651: and al, 0x20; mov eax, 0x36; mov ecx, 0x5409; mov edx, 1; call dword ptr gs:[0x10]; 
0x00118d60: and al, 0x20; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00118e40: and al, 0x20; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x000388d7: and al, 0x20; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x000379e0: and al, 0x20; mov eax, 0xb3; mov ecx, 8; call dword ptr gs:[0x10]; 
0x00115a7f: and al, 0x20; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0010aee0: and al, 0x20; mov eax, 6; call dword ptr gs:[0x10]; 
0x001657ae: and al, 0x20; mov eax, dword ptr [eax + 4]; add esp, 0x18; pop ebx; jmp eax; 
0x001212e5: and al, 0x20; mov ebx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x28]; mov eax, 0x78; mov dword ptr [ecx], ebx; int 0x80; 
0x00116687: and al, 0x20; mov ecx, 0x5409; mov edx, 1; mov edi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00037a07: and al, 0x20; mov ecx, 8; mov edx, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x0011c1a6: and al, 0x20; mov ecx, dword ptr [esp + 0x1c]; mov ebx, dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00121e71: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x156; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0003bc31: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x163; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011c571: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x90; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00117281: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x91; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00117351: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x92; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001116c1: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0xa8; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0010a191: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 3; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0010a261: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 4; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0010b0b0: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 8; call dword ptr gs:[0x10]; 
0x00121e9f: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x0003bc5f: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x0011c59f: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x001172af: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x0011737f: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x001116ef: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x0010a1bf: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 3; call dword ptr gs:[0x10]; 
0x0010a28f: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 4; call dword ptr gs:[0x10]; 
0x0010b0d7: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov edx, eax; mov eax, 8; call dword ptr gs:[0x10]; 
0x000fb0ea: and al, 0x20; mov ecx, edx; call dword ptr gs:[0x10]; 
0x001052a6: and al, 0x20; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x00118d87: and al, 0x20; mov edx, eax; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00118e67: and al, 0x20; mov edx, eax; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x0010af07: and al, 0x20; mov edx, eax; mov eax, 6; call dword ptr gs:[0x10]; 
0x0011bf5c: and al, 0x20; push dword ptr [esp + 0x1c]; call 0x11b880; add esp, 0x1c; ret; 
0x0013205c: and al, 0x20; push dword ptr [esp + 0x1c]; call 0x685c0; add esp, 0x1c; ret; 
0x0013304c: and al, 0x20; push dword ptr [esp + 0x1c]; call 0x6d850; add esp, 0x1c; ret; 
0x001336dc: and al, 0x20; push dword ptr [esp + 0x1c]; call 0x79fb0; add esp, 0x1c; ret; 
0x0013373c: and al, 0x20; push dword ptr [esp + 0x1c]; call 0x7a180; add esp, 0x1c; ret; 
0x0013379c: and al, 0x20; push dword ptr [esp + 0x1c]; call 0x7a640; add esp, 0x1c; ret; 
0x00161fb9: and al, 0x20; push ecx; push 6; push eax; call dword ptr [edx + 0x14]; 
0x00171fc8: and al, 0x20; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x00165efc: and al, 0x20; push ecx; push esi; call dword ptr [eax]; 
0x00159e2f: and al, 0x20; push edi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x001624fa: and al, 0x20; push edx; push eax; call edi; 
0x00082648: and al, 0x20; push edx; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0012c94f: and al, 0x20; push esi; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0016185a: and al, 0x20; sub esp, 0xc; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x00058ad5: and al, 0x20; test edi, edi; je 0x58b20; mov eax, 0x161; call dword ptr gs:[0x10]; 
0x0007e671: and al, 0x21; ret 0xc483; 
0x00068c34: and al, 0x24; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x0010463e: and al, 0x24; add dword ptr [eax], eax; add byte ptr [eax + 0xaf], bh; call dword ptr gs:[0x10]; 
0x00068bdc: and al, 0x24; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x0014bb42: and al, 0x24; add dword ptr [ecx], ebp; ret 0x828d; 
0x00163849: and al, 0x24; add eax, 0x51000000; push eax; call dword ptr [edx + 0xc]; 
0x001052aa: and al, 0x24; call dword ptr gs:[0x10]; 
0x00082105: and al, 0x24; call eax; 
0x0016e547: and al, 0x24; call esi; 
0x00140770: and al, 0x24; mov dword ptr [ecx], edx; pop ebx; pop esi; pop edi; ret; 
0x00084440: and al, 0x24; mov dword ptr [edx], eax; add esp, 0x18; xor eax, eax; pop ebx; ret; 
0x000394de: and al, 0x24; mov dword ptr [esp + 0x28], ecx; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00124793: and al, 0x24; mov dword ptr [esp + 0x38], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001243ef: and al, 0x24; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001248d0: and al, 0x24; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00121e75: and al, 0x24; mov eax, 0x156; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0003bc35: and al, 0x24; mov eax, 0x163; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011c575: and al, 0x24; mov eax, 0x90; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00117285: and al, 0x24; mov eax, 0x91; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00117355: and al, 0x24; mov eax, 0x92; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001116c5: and al, 0x24; mov eax, 0xa8; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0010a195: and al, 0x24; mov eax, 3; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0010a265: and al, 0x24; mov eax, 4; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0010b0b4: and al, 0x24; mov eax, 8; call dword ptr gs:[0x10]; 
0x0014f4a4: and al, 0x24; mov eax, dword ptr [esp + 0x24]; call eax; 
0x00159ee4: and al, 0x24; mov eax, dword ptr [esp + 0x34]; call eax; 
0x000fb0e6: and al, 0x24; mov ebx, dword ptr [esp + 0x20]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00121ea3: and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x0003bc63: and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x0011c5a3: and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x001172b3: and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x00117383: and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x001116f3: and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x0010a1c3: and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 3; call dword ptr gs:[0x10]; 
0x0010a293: and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 4; call dword ptr gs:[0x10]; 
0x0010b0db: and al, 0x24; mov edx, eax; mov eax, 8; call dword ptr gs:[0x10]; 
0x0009167b: and al, 0x24; mov edx, ecx; mov ecx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0016e543: and al, 0x24; mov esi, dword ptr [esp + 0x24]; call esi; 
0x0016f4b6: and al, 0x24; push dword ptr [ecx]; mov dword ptr [esp + 0x28], ecx; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x000da3e5: and al, 0x24; push dword ptr [esp + 0x30]; call ebx; 
0x0006d986: and al, 0x24; push ebp; call dword ptr [esi + 0x1c]; 
0x0015a7e2: and al, 0x28; call dword ptr [eax + 0x18]; 
0x000778f9: and al, 0x28; call dword ptr [eax + 0x40]; 
0x0003bc3e: and al, 0x28; call dword ptr gs:[0x10]; 
0x0012c955: and al, 0x28; call eax; 
0x00093f60: and al, 0x28; cmove esi, edi; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x00115a76: and al, 0x28; cmp ecx, 9; je 0x115ab0; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00115b26: and al, 0x28; cmp ecx, 9; je 0x115b60; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0012452f: and al, 0x28; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00121ea9: and al, 0x28; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x0003bc69: and al, 0x28; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x00048068: and al, 0x28; mov eax, 0x25; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x00124e5f: and al, 0x28; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001212ed: and al, 0x28; mov eax, 0x78; mov dword ptr [ecx], ebx; int 0x80; 
0x0011c5a9: and al, 0x28; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x001172b9: and al, 0x28; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x00117389: and al, 0x28; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x001116f9: and al, 0x28; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x000916ac: and al, 0x28; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0010a9d4: and al, 0x28; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0010a1c9: and al, 0x28; mov eax, 3; call dword ptr gs:[0x10]; 
0x0010a299: and al, 0x28; mov eax, 4; call dword ptr gs:[0x10]; 
0x00082025: and al, 0x28; mov eax, dword ptr [eax + 0x1c]; add esp, 0x14; pop ebx; pop esi; jmp eax; 
0x00058871: and al, 0x28; mov eax, dword ptr [esp + 0x30]; call eax; 
0x001246d7: and al, 0x28; mov eax, dword ptr [esp + 0x64]; mov dword ptr [esp + 0x2c], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00124826: and al, 0x28; mov ebx, 0xf; mov dword ptr [esp + 0x30], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001636a7: and al, 0x28; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x00119575: and al, 0x28; mov edx, dword ptr [esp + 0x2c]; sub edx, dword ptr gs:[0x14]; jne 0x119597; add esp, 0x3c; ret; 
0x00077b83: and al, 0x28; mov esi, dword ptr [esp + 0x18]; push esi; call dword ptr [edi + 0x40]; 
0x00124f36: and al, 0x28; or byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x66; mov ebx, 0xe; call dword ptr gs:[0x10]; 
0x00109345: and al, 0x28; push -0x64; call 0x109360; add esp, 0x2c; ret; 
0x00057b03: and al, 0x28; push -1; push dword ptr [esp + 0x2c]; call 0x73cc0; add esp, 0x2c; ret; 
0x00031ad3: and al, 0x28; push 0; call 0x31a60; add esp, 0x2c; ret; 
0x0016f3b6: and al, 0x28; push dword ptr [ecx]; mov dword ptr [esp + 0x2c], ecx; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0016f49c: and al, 0x28; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00077b7f: and al, 0x28; push dword ptr [esp + 0x28]; mov esi, dword ptr [esp + 0x18]; push esi; call dword ptr [edi + 0x40]; 
0x00109341: and al, 0x28; push dword ptr [esp + 0x28]; push -0x64; call 0x109360; add esp, 0x2c; ret; 
0x00031acf: and al, 0x28; push dword ptr [esp + 0x28]; push 0; call 0x31a60; add esp, 0x2c; ret; 
0x000b6449: and al, 0x28; push eax; lea eax, [esp + 0x34]; push eax; push dword ptr [esi + 8]; call ebx; 
0x0007c800: and al, 0x28; push eax; push esi; call dword ptr [edi + 0x48]; 
0x00161fa6: and al, 0x28; push ecx; push 4; push edx; call dword ptr [eax + 0x14]; 
0x0007c1d6: and al, 0x28; push edi; call dword ptr [ebp + 0x1c]; 
0x0006870b: and al, 0x28; push edi; call dword ptr [ebx + 0x1c]; 
0x0007cea9: and al, 0x28; push edx; push esi; call dword ptr [eax + 0x48]; 
0x000394e2: and al, 0x28; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0015dcdb: and al, 0x28; sub esp, 0xc; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x0007f17b: and al, 0x29; jmp 0xc48bc1ab; adc byte ptr [ecx], bh; sal dword ptr [edi + 0x49], 0x89; ret 0x448b; 
0x000cc55c: and al, 0x29; ret; 
0x00104eef: and al, 0x2c; call 0x1044e0; add esp, 0x2c; ret; 
0x0010449f: and al, 0x2c; call 0x104eb0; add esp, 0x2c; ret; 
0x001087d9: and al, 0x2c; call 0x109360; add esp, 0x2c; ret; 
0x0011e887: and al, 0x2c; call 0x11e790; add esp, 0x28; pop ebx; ret; 
0x0011ea1f: and al, 0x2c; call 0x11e8a0; add esp, 0x28; pop ebx; ret; 
0x0012e8ab: and al, 0x2c; call 0x12e680; add esp, 0x28; pop ebx; ret; 
0x0017a5ed: and al, 0x2c; call 0x1356a0; neg eax; sbb eax, eax; add esp, 0x2c; ret; 
0x0017a66d: and al, 0x2c; call 0x136190; neg eax; sbb eax, eax; add esp, 0x2c; ret; 
0x0013a7b1: and al, 0x2c; call 0x139c40; add esp, 0x2c; ret; 
0x0013a8e7: and al, 0x2c; call 0x13a7e0; add esp, 0x2c; ret; 
0x0013b14f: and al, 0x2c; call 0x13ab00; add esp, 0x2c; ret; 
0x0013ccd6: and al, 0x2c; call 0x13c6c0; add esp, 0x20; add esp, 8; pop ebx; ret; 
0x00162ef9: and al, 0x2c; call 0x162d40; add esp, 0x2c; ret; 
0x00030647: and al, 0x2c; call 0x31290; add esp, 0x2c; ret; 
0x00031aa7: and al, 0x2c; call 0x31a60; add esp, 0x2c; ret; 
0x00039907: and al, 0x2c; call 0x395a0; add esp, 0x2c; ret; 
0x0003c84f: and al, 0x2c; call 0x3ca20; add esp, 0x2c; ret; 
0x0003c8cf: and al, 0x2c; call 0x3d010; add esp, 0x2c; ret; 
0x0003c94f: and al, 0x2c; call 0x3d5b0; add esp, 0x2c; ret; 
0x0003c9cf: and al, 0x2c; call 0x3ddd0; add esp, 0x2c; ret; 
0x00048bc5: and al, 0x2c; call 0x48bd0; add esp, 0x2c; ret; 
0x000728db: and al, 0x2c; call 0x72700; add esp, 0x2c; ret; 
0x00057b09: and al, 0x2c; call 0x73cc0; add esp, 0x2c; ret; 
0x00074b87: and al, 0x2c; call 0x749a0; add esp, 0x28; pop ebx; ret; 
0x0007520b: and al, 0x2c; call 0x75350; add esp, 0x2c; ret; 
0x00057adb: and al, 0x2c; call 0x7a3b0; add esp, 0x2c; ret; 
0x000800af: and al, 0x2c; call 0x7ffd0; add esp, 0x28; pop ebx; ret; 
0x00084e45: and al, 0x2c; call 0x886f0; add esp, 0x20; add esp, 0xc; ret; 
0x000886c3: and al, 0x2c; call 0x886f0; add esp, 0x2c; ret; 
0x00093297: and al, 0x2c; call 0x93580; add esp, 0x2c; ret; 
0x000932c7: and al, 0x2c; call 0x93850; add esp, 0x2c; ret; 
0x000b732f: and al, 0x2c; call 0xb7680; add esp, 0x2c; ret; 
0x000b73af: and al, 0x2c; call 0xb7b90; add esp, 0x2c; ret; 
0x000b742f: and al, 0x2c; call 0xb8030; add esp, 0x2c; ret; 
0x000b74af: and al, 0x2c; call 0xb86d0; add esp, 0x2c; ret; 
0x000b695c: and al, 0x2c; call 0xc4810; add esp, 0x2c; ret; 
0x000cf97d: and al, 0x2c; call 0xcfa80; add esp, 0x2c; ret; 
0x000d284f: and al, 0x2c; call 0xd47f0; add esp, 0x2c; ret; 
0x000d288f: and al, 0x2c; call 0xd6e80; add esp, 0x2c; ret; 
0x000faeed: and al, 0x2c; call 0xfa760; add esp, 0x28; pop ebx; ret; 
0x000fae25: and al, 0x2c; call 0xfad70; add esp, 0x28; pop ebx; ret; 
0x001592c8: and al, 0x2c; call dword ptr [eax]; 
0x0013bf2a: and al, 0x2c; call eax; 
0x00093b11: and al, 0x2c; mov dword ptr [esp + 0x34], 4; call dword ptr gs:[0x10]; 
0x00108eca: and al, 0x2c; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x001246df: and al, 0x2c; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012321a: and al, 0x2c; push -0x64; call 0x109360; add esp, 0x20; add esp, 0xc; ret; 
0x0016f39c: and al, 0x2c; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00104eeb: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x1044e0; add esp, 0x2c; ret; 
0x0017810b: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x104eb0; add esp, 0x2c; ret; 
0x001087d5: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x109360; add esp, 0x2c; ret; 
0x0011e883: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x11e790; add esp, 0x28; pop ebx; ret; 
0x0011ea1b: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x11e8a0; add esp, 0x28; pop ebx; ret; 
0x0012e8a7: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x12e680; add esp, 0x28; pop ebx; ret; 
0x0013a8e3: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x13a7e0; add esp, 0x2c; ret; 
0x0013b14b: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x13ab00; add esp, 0x2c; ret; 
0x00162ef5: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x162d40; add esp, 0x2c; ret; 
0x00030643: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x31290; add esp, 0x2c; ret; 
0x00031aa3: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x31a60; add esp, 0x2c; ret; 
0x00039903: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x395a0; add esp, 0x2c; ret; 
0x0003c84b: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x3ca20; add esp, 0x2c; ret; 
0x0003d593: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x3d010; add esp, 0x2c; ret; 
0x0003c94b: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x3d5b0; add esp, 0x2c; ret; 
0x0003c9cb: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x3ddd0; add esp, 0x2c; ret; 
0x00049edb: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x48bd0; add esp, 0x2c; ret; 
0x000728d7: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x72700; add esp, 0x2c; ret; 
0x00074b83: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x749a0; add esp, 0x28; pop ebx; ret; 
0x00075207: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x75350; add esp, 0x2c; ret; 
0x00057ad7: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x7a3b0; add esp, 0x2c; ret; 
0x000800ab: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x7ffd0; add esp, 0x28; pop ebx; ret; 
0x00084e41: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x886f0; add esp, 0x20; add esp, 0xc; ret; 
0x000886bf: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x886f0; add esp, 0x2c; ret; 
0x00093293: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x93580; add esp, 0x2c; ret; 
0x000932c3: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x93850; add esp, 0x2c; ret; 
0x000b732b: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xb7680; add esp, 0x2c; ret; 
0x000b8013: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xb7b90; add esp, 0x2c; ret; 
0x000b742b: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xb8030; add esp, 0x2c; ret; 
0x000b8c93: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xb86d0; add esp, 0x2c; ret; 
0x000b6958: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xc4810; add esp, 0x2c; ret; 
0x000cf979: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xcfa80; add esp, 0x2c; ret; 
0x000d284b: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xd47f0; add esp, 0x2c; ret; 
0x000d288b: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xd6e80; add esp, 0x2c; ret; 
0x000faee9: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xfa760; add esp, 0x28; pop ebx; ret; 
0x000fae21: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xfad70; add esp, 0x28; pop ebx; ret; 
0x00178137: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x104eb0; add esp, 0x2c; ret; 
0x0013a8df: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x13a7e0; add esp, 0x2c; ret; 
0x0013b147: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x13ab00; add esp, 0x2c; ret; 
0x00162ef1: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x162d40; add esp, 0x2c; ret; 
0x00031a73: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x31290; add esp, 0x2c; ret; 
0x00031a9f: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x31a60; add esp, 0x2c; ret; 
0x000398ff: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x395a0; add esp, 0x2c; ret; 
0x0003c847: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x3ca20; add esp, 0x2c; ret; 
0x0003d58f: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x3d010; add esp, 0x2c; ret; 
0x0003c947: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x3d5b0; add esp, 0x2c; ret; 
0x0003c9c7: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x3ddd0; add esp, 0x2c; ret; 
0x000728d3: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x72700; add esp, 0x2c; ret; 
0x00075203: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x75350; add esp, 0x2c; ret; 
0x00057ad3: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x7a3b0; add esp, 0x2c; ret; 
0x0009328f: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x93580; add esp, 0x2c; ret; 
0x000b7327: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xb7680; add esp, 0x2c; ret; 
0x000b800f: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xb7b90; add esp, 0x2c; ret; 
0x000b7427: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xb8030; add esp, 0x2c; ret; 
0x000b8c8f: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xb86d0; add esp, 0x2c; ret; 
0x000b6954: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xc4810; add esp, 0x2c; ret; 
0x000cf975: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xcfa80; add esp, 0x2c; ret; 
0x000fba77: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x38]; call esi; 
0x000fba7b: and al, 0x2c; push dword ptr [esp + 0x38]; call esi; 
0x000b71e9: and al, 0x2c; push dword ptr [esp + 0x38]; push dword ptr [esp + 0x38]; push esi; call ebx; 
0x000b6e99: and al, 0x2c; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x38]; push edi; call esi; 
0x000821cb: and al, 0x2c; push dword ptr [esp + 0x3c]; push ecx; push dword ptr [esp + 0x3c]; call eax; 
0x0013a7ac: and al, 0x2c; push eax; push dword ptr [esp + 0x2c]; call 0x139c40; add esp, 0x2c; ret; 
0x000b70c5: and al, 0x2c; push ebp; lea eax, [esp + 0x64]; push eax; push esi; call ebx; 
0x00162e12: and al, 0x2c; push ebp; push esi; push 3; push edi; call dword ptr [eax]; 
0x0016138b: and al, 0x2c; push ebx; mov eax, dword ptr [esp + 0x18]; call eax; 
0x0007c4f5: and al, 0x2c; push edi; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x0008e1cd: and al, 0x2c; push edx; call 0x886f0; add esp, 0x20; add esp, 0xc; ret; 
0x000b6866: and al, 0x2c; push edx; lea edx, [esp + 0x34]; push edx; push dword ptr [edi + 8]; call ebx; 
0x0008251b: and al, 0x2c; push edx; push ecx; push esi; call eax; 
0x0015db58: and al, 0x2c; push esi; call dword ptr [eax + 0xc]; 
0x00108700: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0x108710; add esp, 0x38; pop ebx; ret; 
0x00108780: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0x108790; add esp, 0x38; pop ebx; ret; 
0x00119579: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0x119597; add esp, 0x3c; ret; 
0x0011a605: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0x11a615; add esp, 0x38; pop ebx; ret; 
0x0011a68a: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0x11a69a; add esp, 0x38; pop ebx; ret; 
0x0008fdde: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0x8fe24; add esp, 0x38; pop ebx; ret; 
0x00093e8a: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0x93e9a; add esp, 0x38; pop ebx; ret; 
0x000cadd4: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0xcade4; add esp, 0x38; pop ebx; ret; 
0x000cc2f4: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0xcc318; add esp, 0x38; pop ebx; ret; 
0x000d84a5: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0xd84b5; add esp, 0x38; pop ebx; ret; 
0x000d85d5: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0xd85e5; add esp, 0x38; pop ebx; ret; 
0x00131b47: and al, 0x2e; cmc; dec dword ptr [ebx + 0x18499]; add dh, dh; ret; 
0x00035cbd: and al, 0x30; add esp, 0x40; pop ebx; pop esi; pop edi; ret; 
0x00058875: and al, 0x30; call eax; 
0x000da3e9: and al, 0x30; call ebx; 
0x00038dea: and al, 0x30; call edi; 
0x000d7428: and al, 0x30; cmp dword ptr [ecx + 8], 0x3b9ac9ff; ja 0xd74c0; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x00071a44: and al, 0x30; lea ecx, [esp + 0x10]; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x000ce9c6: and al, 0x30; lea ecx, [esp + 0xc]; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x00124ad3: and al, 0x30; mov dword ptr [esp], eax; mov eax, dword ptr [esp + 0x38]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00109c2e: and al, 0x30; mov eax, 0x127; mov ebx, 0xffffff9c; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00109d82: and al, 0x30; mov eax, 0x127; mov ebx, 0xffffff9c; mov edx, edi; call dword ptr gs:[0x10]; 
0x001169e5: and al, 0x30; mov eax, 0x154; mov dword ptr [esp + 0x18], edx; mov esi, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012482f: and al, 0x30; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0011802e: and al, 0x30; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x001180ce: and al, 0x30; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x000da7ee: and al, 0x30; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x000df743: and al, 0x30; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x000df7f3: and al, 0x30; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x000df3da: and al, 0x30; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x000df47a: and al, 0x30; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x0010ab36: and al, 0x30; mov eax, 0xdd; mov ecx, esi; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00117461: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov dword ptr [esp + 0xc], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00117631: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov dword ptr [esp + 0xc], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x00117547: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00117717: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x00103b47: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x00103c27: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x00121ab2: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x100; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000ddb23: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x11c; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00109ede: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x127; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0010a044: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x127; mov edx, edi; call dword ptr gs:[0x10]; 
0x00121b92: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x13b; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00121c72: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x13c; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0011742e: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14d; mov edi, ebp; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0011751a: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14d; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001175fe: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14e; mov edi, ebp; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001176ea: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14e; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001257c2: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x159; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00103b1b: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb4; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00103bfb: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb5; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00109f17: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0010a087: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0012213a: and al, 0x30; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0010ab77: and al, 0x30; mov ecx, esi; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0010a3fe: and al, 0x30; mov edi, dword ptr [esp + 0x3c]; mov eax, 0x8c; call dword ptr gs:[0x10]; 
0x0017a3af: and al, 0x30; mov edx, dword ptr [esp + 0x34]; lea edi, [esp + 8]; mov eax, 0x75; mov ebx, 3; call dword ptr gs:[0x10]; 
0x001266f9: and al, 0x30; mov edx, dword ptr [esp + 0x38]; lea esi, [esp + 8]; mov edi, dword ptr [esp + 0x34]; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00109c6c: and al, 0x30; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00109dcc: and al, 0x30; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0010c980: and al, 0x30; push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x000225d1: and al, 0x30; push dword ptr [ebx + 4]; call esi; 
0x000c4930: and al, 0x30; push dword ptr [esp + 0x38]; push edi; call esi; 
0x0008233d: and al, 0x30; push dword ptr [esp + 0x3c]; push ecx; call eax; 
0x00131eea: and al, 0x30; push edx; push dword ptr [esp + 0x2c]; call 0x73cc0; add esp, 0x2c; ret; 
0x0008242e: and al, 0x30; push edx; push ecx; call eax; 
0x00039142: and al, 0x30; push esi; call edi; 
0x001602c8: and al, 0x31; shr bl, cl; or cl, byte ptr [ebp - 0x6b74ff8a]; ret; 
0x00059312: and al, 0x32; stc; call dword ptr [esi - 0x77]; 
0x00093b15: and al, 0x34; add al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00160194: and al, 0x34; add al, 0; add byte ptr [ebx + 0x50510450], cl; call dword ptr [edx + 8]; 
0x0006f422: and al, 0x34; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0006e89f: and al, 0x34; add dword ptr [eax], eax; add byte ptr [eax], al; mov edx, dword ptr [esi + eax*4 - 0x735e0]; add edx, ebx; jmp edx; 
0x00125a58: and al, 0x34; call dword ptr gs:[0x10]; 
0x000cb182: and al, 0x34; call eax; 
0x000cb018: and al, 0x34; call ecx; 
0x0012478f: and al, 0x34; lea eax, [esp + 0x24]; mov dword ptr [esp + 0x38], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0017a3b3: and al, 0x34; lea edi, [esp + 8]; mov eax, 0x75; mov ebx, 3; call dword ptr gs:[0x10]; 
0x00117465: and al, 0x34; mov dword ptr [esp + 0xc], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00117635: and al, 0x34; mov dword ptr [esp + 0xc], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x00125a88: and al, 0x34; mov dword ptr [esp + 8], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0011754b: and al, 0x34; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x0011771b: and al, 0x34; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x00103b4b: and al, 0x34; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x00103c2b: and al, 0x34; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x00121ab6: and al, 0x34; mov eax, 0x100; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000ddb27: and al, 0x34; mov eax, 0x11c; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00109ee2: and al, 0x34; mov eax, 0x127; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0010a048: and al, 0x34; mov eax, 0x127; mov edx, edi; call dword ptr gs:[0x10]; 
0x00121b96: and al, 0x34; mov eax, 0x13b; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00121c76: and al, 0x34; mov eax, 0x13c; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00117432: and al, 0x34; mov eax, 0x14d; mov edi, ebp; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0011751e: and al, 0x34; mov eax, 0x14d; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00117602: and al, 0x34; mov eax, 0x14e; mov edi, ebp; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001176ee: and al, 0x34; mov eax, 0x14e; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001257c6: and al, 0x34; mov eax, 0x159; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00126705: and al, 0x34; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00103b1f: and al, 0x34; mov eax, 0xb4; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00103bff: and al, 0x34; mov eax, 0xb5; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000ce9c2: and al, 0x34; mov ebx, dword ptr [esp + 0x30]; lea ecx, [esp + 0xc]; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x00122136: and al, 0x34; mov ebx, dword ptr [esp + 0x30]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00121aeb: and al, 0x34; mov edi, eax; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x00121bcb: and al, 0x34; mov edi, eax; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x00121cab: and al, 0x34; mov edi, eax; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x001257fb: and al, 0x34; mov edi, eax; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x00163637: and al, 0x34; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x000916a6: and al, 0x34; mov edx, ebp; mov dword ptr [esp + 0x28], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x00109f1b: and al, 0x34; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0010a08b: and al, 0x34; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0005886d: and al, 0x34; push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x30]; call eax; 
0x000c4ab9: and al, 0x34; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x38]; push edi; call esi; 
0x000b6bcd: and al, 0x34; push dword ptr [esp + 0x40]; push edi; call esi; 
0x00078c84: and al, 0x34; push eax; call ebx; 
0x000b644e: and al, 0x34; push eax; push dword ptr [esi + 8]; call ebx; 
0x000b6a6a: and al, 0x34; push eax; push edi; call esi; 
0x000b67fc: and al, 0x34; push edx; push dword ptr [edi + 8]; call ebx; 
0x00132f68: and al, 0x34; push edx; push dword ptr [esp + 0x2c]; call 0x75350; add esp, 0x2c; ret; 
0x00131f78: and al, 0x34; push edx; push dword ptr [esp + 0x2c]; call 0x7a3b0; add esp, 0x2c; ret; 
0x0015981f: and al, 0x34; push esi; push ecx; push 5; push ebx; call dword ptr [eax]; 
0x0011632f: and al, 0x37; mov eax, dword ptr [esp + 0x84]; lea ecx, [eax + 0x5402]; mov eax, edi; call dword ptr gs:[0x10]; 
0x0006e7d1: and al, 0x38; add dword ptr [eax], eax; add byte ptr [eax], al; add edx, dword ptr [esi + eax*4]; jmp edx; 
0x0006f452: and al, 0x38; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x00103b28: and al, 0x38; call dword ptr gs:[0x10]; 
0x000fba7f: and al, 0x38; call esi; 
0x001266fd: and al, 0x38; lea esi, [esp + 8]; mov edi, dword ptr [esp + 0x34]; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00124962: and al, 0x38; mov dword ptr [esp + 0x14], eax; mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001246d3: and al, 0x38; mov dword ptr [esp + 0x28], eax; mov eax, dword ptr [esp + 0x64]; mov dword ptr [esp + 0x2c], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00124822: and al, 0x38; mov dword ptr [esp + 0x28], ebx; mov ebx, 0xf; mov dword ptr [esp + 0x30], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001244a0: and al, 0x38; mov dword ptr [esp + 0xc], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00124ada: and al, 0x38; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0011746d: and al, 0x38; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x0011763d: and al, 0x38; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x001196b0: and al, 0x38; mov eax, 0x1a; lea edi, [ebx - 1]; cmp edi, 3; cmovae esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00124797: and al, 0x38; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00125a46: and al, 0x38; mov eax, 0x75; mov ebx, 0xb; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x00103b53: and al, 0x38; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x00103c33: and al, 0x38; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x0016136f: and al, 0x38; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push ebx; push eax; call dword ptr [edx + 4]; 
0x001092a8: and al, 0x38; mov edi, dword ptr [esp + 0x40]; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000ddb30: and al, 0x38; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000ddb61: and al, 0x38; mov esi, dword ptr [esp + 0x3c]; mov dword ptr [esp + 8], eax; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x00121af1: and al, 0x38; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x00121bd1: and al, 0x38; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x00121cb1: and al, 0x38; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x00125801: and al, 0x38; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x0010a3f8: and al, 0x38; mov esi, esp; mov ebx, dword ptr [esp + 0x30]; mov edi, dword ptr [esp + 0x3c]; mov eax, 0x8c; call dword ptr gs:[0x10]; 
0x0007fe28: and al, 0x38; push 0; push edi; push esi; push ebx; call dword ptr [ebp + 0x24]; 
0x00154efd: and al, 0x38; push 2; push dword ptr [esp + 0x3c]; call 0x154d40; add esp, 0x3c; ret; 
0x000b71ed: and al, 0x38; push dword ptr [esp + 0x38]; push esi; call ebx; 
0x000da3e0: and al, 0x38; push eax; push dword ptr [esp + 0x24]; push dword ptr [esp + 0x30]; call ebx; 
0x00074979: and al, 0x38; push edi; call dword ptr [edx + 0x1c]; 
0x000b6ea1: and al, 0x38; push edi; call esi; 
0x00163c1e: and al, 0x38; push edx; call dword ptr [eax + 0xc]; 
0x000b71f1: and al, 0x38; push esi; call ebx; 
0x000c9c22: and al, 0x39; dec edi; and al, 0x75; js 0xc9c88; pop esi; ret; 
0x000cb758: and al, 0x39; lds esi, ptr [edx + ebp*2 - 0x7d]; clc; cmp al, 0xf; xchg esp, eax; ret 0xc031; 
0x0014685c: and al, 0x39; ret 0x1f7e; 
0x0002573c: and al, 0x39; ret; 
0x000ec5cf: and al, 0x39; ror byte ptr [edi], 1; dec edi; ret 0x538b; 
0x001311f2: and al, 0x39; sal byte ptr [ebx + 9], 1; cmp dword ptr [eax + 4], ecx; jne 0x1311f0; mov eax, dword ptr [eax + 0x18]; ret; 
0x000911c0: and al, 0x3a; add byte ptr [eax], al; mov dword ptr [eax + 0xc], ecx; ret; 
0x0006e84c: and al, 0x3c; and byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x001446e7: and al, 0x3c; call 0x144130; add esp, 0x3c; ret; 
0x00154f03: and al, 0x3c; call 0x154d40; add esp, 0x3c; ret; 
0x00161d67: and al, 0x3c; call 0x161a90; add esp, 0x3c; ret; 
0x000ddb34: and al, 0x3c; call dword ptr gs:[0x10]; 
0x000821d4: and al, 0x3c; call eax; 
0x00094219: and al, 0x3c; lea ecx, [edi - 0x722c0]; call dword ptr gs:[0x10]; 
0x0012496a: and al, 0x3c; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000ddb65: and al, 0x3c; mov dword ptr [esp + 8], eax; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x00121af5: and al, 0x3c; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x00121bd5: and al, 0x3c; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x00121cb5: and al, 0x3c; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x00125805: and al, 0x3c; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x0010a402: and al, 0x3c; mov eax, 0x8c; call dword ptr gs:[0x10]; 
0x001092b0: and al, 0x3c; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00125a54: and al, 0x3c; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x000b6e9d: and al, 0x3c; push dword ptr [esp + 0x38]; push edi; call esi; 
0x001446e3: and al, 0x3c; push dword ptr [esp + 0x3c]; call 0x144130; add esp, 0x3c; ret; 
0x00154f31: and al, 0x3c; push dword ptr [esp + 0x3c]; call 0x154d40; add esp, 0x3c; ret; 
0x00161d63: and al, 0x3c; push dword ptr [esp + 0x3c]; call 0x161a90; add esp, 0x3c; ret; 
0x001446df: and al, 0x3c; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x144130; add esp, 0x3c; ret; 
0x00154f2d: and al, 0x3c; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x154d40; add esp, 0x3c; ret; 
0x00161d5f: and al, 0x3c; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x161a90; add esp, 0x3c; ret; 
0x0016217e: and al, 0x3c; push ebp; push edi; push esi; push eax; call dword ptr [edx]; 
0x0016133e: and al, 0x3c; push ebx; call dword ptr [eax + 0x14]; 
0x00082341: and al, 0x3c; push ecx; call eax; 
0x000821cf: and al, 0x3c; push ecx; push dword ptr [esp + 0x3c]; call eax; 
0x0007d68f: and al, 0x3c; push edi; call dword ptr [esi + 0x20]; 
0x0015dbaa: and al, 0x3c; push esi; mov eax, dword ptr [esp + 0x40]; call eax; 
0x001636b6: and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x1636c5; add esp, 0x4c; ret; 
0x00163726: and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x163735; add esp, 0x4c; ret; 
0x00163796: and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x1637a5; add esp, 0x4c; ret; 
0x001637f9: and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x163808; add esp, 0x4c; ret; 
0x00163859: and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x163868; add esp, 0x4c; ret; 
0x001638c6: and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x1638d5; add esp, 0x4c; ret; 
0x00163946: and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x163955; add esp, 0x4c; ret; 
0x0010c10b: and al, 0x3c; sub edx, dword ptr gs:[0x14]; jne 0x10c11d; movzx eax, al; add esp, 0x4c; ret; 
0x00163646: and al, 0x3c; sub edx, dword ptr gs:[0x14]; jne 0x163655; add esp, 0x4c; ret; 
0x000cae34: and al, 0x3c; sub edx, dword ptr gs:[0x14]; jne 0xcae44; add esp, 0x48; pop ebx; ret; 
0x0006e4c1: and al, 0x40; add dword ptr [eax], eax; add byte ptr [eax], al; add edx, dword ptr [esi + eax*4]; jmp edx; 
0x0006f412: and al, 0x40; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0002167a: and al, 0x40; call dword ptr [ebp]; 
0x0007faf6: and al, 0x40; call dword ptr [esi + 0xc]; 
0x00021617: and al, 0x40; call eax; 
0x001164ec: and al, 0x40; lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000dbd28: and al, 0x40; mov dword ptr [edx], ebx; add esp, 0x28; pop ebx; ret; 
0x00124a2b: and al, 0x40; mov dword ptr [esp + 0x14], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00124da2: and al, 0x40; mov dword ptr [esp + 0x14], eax; mov eax, dword ptr [esp + 0x44]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00083ca4: and al, 0x40; mov eax, dword ptr [edi]; mov ebx, dword ptr [edi + 4]; mov ecx, dword ptr [edi + 8]; mov edx, dword ptr [edi + 0xc]; call dword ptr gs:[0x10]; 
0x00158a4b: and al, 0x40; mov ecx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [ecx + 8]; 
0x000d70fb: and al, 0x40; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000936cb: and al, 0x40; mov edx, dword ptr [esp + 0x48]; mov eax, 0x117; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x0009340b: and al, 0x40; mov edx, dword ptr [esp + 0x48]; mov eax, 0x118; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0009364f: and al, 0x40; mov edx, dword ptr [esp + 0x48]; mov eax, 0x1a2; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x00093393: and al, 0x40; mov edx, dword ptr [esp + 0x48]; mov eax, 0x1a3; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00093457: and al, 0x40; mov edx, dword ptr [esp + 0x48]; mov ecx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x118; call dword ptr gs:[0x10]; 
0x000934a7: and al, 0x40; mov edx, dword ptr [esp + 0x48]; mov ecx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x1a3; call dword ptr gs:[0x10]; 
0x001092ac: and al, 0x40; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000fb1d4: and al, 0x40; mov esi, dword ptr [esp + 0x44]; lea ecx, [esp + 0xc]; mov eax, 0x1a7; call dword ptr gs:[0x10]; 
0x000c4eca: and al, 0x40; push dword ptr [eax]; call edi; 
0x0012c94b: and al, 0x40; push dword ptr [esp + 0x20]; push esi; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x000b6300: and al, 0x40; push eax; push dword ptr [edi]; call ebx; 
0x00077796: and al, 0x40; push eax; push dword ptr [esp + 0x18]; call dword ptr [edi + 0x48]; 
0x000b6bd1: and al, 0x40; push edi; call esi; 
0x000930b4: and al, 0x44; add al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0006f405: and al, 0x44; add dword ptr [eax], eax; add byte ptr [eax], al; add edx, dword ptr [esi + eax*4]; jmp edx; 
0x0006e806: and al, 0x44; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x00025bbe: and al, 0x44; call eax; 
0x000fb1d8: and al, 0x44; lea ecx, [esp + 0xc]; mov eax, 0x1a7; call dword ptr gs:[0x10]; 
0x00124daa: and al, 0x44; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0016ec85: and al, 0x44; mov eax, dword ptr [edx + 0x2c]; add esp, 0x34; pop ebx; pop esi; jmp eax; 
0x001164e8: and al, 0x44; mov ebx, dword ptr [esp + 0x40]; lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000d70f7: and al, 0x44; mov ebx, dword ptr [esp + 0x40]; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00069998: and al, 0x44; push edi; call dword ptr [eax + 0x1c]; 
0x000698ad: and al, 0x44; push edi; call dword ptr [ebx + 0x1c]; 
0x0015ddf9: and al, 0x44; push esi; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x0012770a: and al, 0x46; add byte ptr [eax], al; jae 0x12771b; mov edx, dword ptr [ecx + 0x4628]; add word ptr [edx + eax*2], 1; ret; 
0x000b7bc6: and al, 0x48; add dword ptr [edi], ecx; xchg esp, eax; ret 0x7c83; 
0x0015fbb8: and al, 0x48; call dword ptr [eax + 0x10]; 
0x0015fa56: and al, 0x48; call dword ptr [eax + 0x14]; 
0x00024aa8: and al, 0x48; call eax; 
0x000936cf: and al, 0x48; mov eax, 0x117; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x0009340f: and al, 0x48; mov eax, 0x118; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00093653: and al, 0x48; mov eax, 0x1a2; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x00093397: and al, 0x48; mov eax, 0x1a3; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0009345b: and al, 0x48; mov ecx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x118; call dword ptr gs:[0x10]; 
0x000934ab: and al, 0x48; mov ecx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x1a3; call dword ptr gs:[0x10]; 
0x00093723: and al, 0x48; mov ecx, ebp; mov dword ptr [esp + 8], eax; mov esi, dword ptr [esp + 0x4c]; mov eax, 0x117; call dword ptr gs:[0x10]; 
0x00093773: and al, 0x48; mov ecx, ebp; mov dword ptr [esp + 8], eax; mov esi, dword ptr [esp + 0x4c]; mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x00125b47: and al, 0x48; mov esi, dword ptr [esp + 0x50]; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x00073746: and al, 0x48; push 0; push edi; push esi; push ebx; call dword ptr [ebp + 0x24]; 
0x0006e744: and al, 0x4c; add dword ptr [eax], eax; add byte ptr [eax], al; add edx, dword ptr [esi + eax*4]; jmp edx; 
0x0006f3a2: and al, 0x4c; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x00161351: and al, 0x4c; add dword ptr [eax], eax; add byte ptr [edx + 0x53], dl; call dword ptr [eax + 4]; 
0x0009365e: and al, 0x4c; call dword ptr gs:[0x10]; 
0x00027244: and al, 0x4c; call eax; 
0x0009372d: and al, 0x4c; mov eax, 0x117; call dword ptr gs:[0x10]; 
0x0009377d: and al, 0x4c; mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x0002b4be: and al, 0x4c; push ebx; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x50]; push dword ptr [esp + 0x50]; call esi; 
0x0006974a: and al, 0x4e; and byte ptr [ecx], dh; rol byte ptr [eax - 0x6bf0a705], cl; ret 0xff52; 
0x00048511: and al, 0x50; add al, 0; add byte ptr [ebx + 0x688d04ec], al; call dword ptr [ebp + 0x53]; 
0x000499d9: and al, 0x50; add byte ptr [edi], cl; xchg esp, eax; ret; 
0x0009bb12: and al, 0x50; add dword ptr [eax], eax; add byte ptr [ecx - 0x76f3dbbc], cl; ret 0xa165; 
0x0012240c: and al, 0x50; call dword ptr gs:[0x10]; 
0x0002b4cb: and al, 0x50; call esi; 
0x000ceb5a: and al, 0x50; lea edx, [esp + 0x1c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x00125b4b: and al, 0x50; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x00125b97: and al, 0x50; mov dword ptr [esp + 8], eax; mov eax, 0x75; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x00126527: and al, 0x50; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x000cebca: and al, 0x50; mov eax, 0x68; mov edx, esi; call dword ptr gs:[0x10]; 
0x0010a8c6: and al, 0x50; mov eax, 0xdd; mov ecx, esi; mov edx, edi; call dword ptr gs:[0x10]; 
0x00122367: and al, 0x50; mov ecx, dword ptr [esp + 0x54]; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x0010a956: and al, 0x50; mov ecx, esi; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00122243: and al, 0x50; mov edx, dword ptr [esp + 0x54]; lea ecx, [esp + 0x1c]; mov eax, 0x19a; call dword ptr gs:[0x10]; 
0x00112369: and al, 0x50; mov esi, dword ptr [esp + 0x5c]; mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x001122bc: and al, 0x50; mov esi, dword ptr [esp + 0x5c]; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0002b4c7: and al, 0x50; push dword ptr [esp + 0x50]; call esi; 
0x0006eaa1: and al, 0x50; push edi; push esi; push ebp; call dword ptr [ebx + 0x1c]; 
0x00122247: and al, 0x54; lea ecx, [esp + 0x1c]; mov eax, 0x19a; call dword ptr gs:[0x10]; 
0x00124e53: and al, 0x54; mov dword ptr [esp + 0x1c], eax; mov eax, dword ptr [esp + 0x60]; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0011185c: and al, 0x54; mov eax, 0x135; mov edi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0012236b: and al, 0x54; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x001117e0: and al, 0x54; mov eax, 0x19e; mov edi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00026737: and al, 0x54; mov eax, dword ptr [esp + 0x48]; call eax; 
0x001118bc: and al, 0x54; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x00026733: and al, 0x54; push dword ptr [esp + 0x54]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00026241: and al, 0x54; push dword ptr [esp + 0x5c]; call edi; 
0x000c4ec5: and al, 0x54; push ecx; mov eax, dword ptr [esp + 0x40]; push dword ptr [eax]; call edi; 
0x0006d987: and al, 0x55; call dword ptr [esi + 0x1c]; 
0x000fc329: and al, 0x57; add byte ptr [eax - 0x73], dl; sub edi, 0x48; stc; call dword ptr [eax - 0x18]; 
0x000bf2e3: and al, 0x58; add dword ptr [eax], eax; add byte ptr [edi], cl; xchg ebp, eax; ret 0x9eb; 
0x000b76b6: and al, 0x58; add dword ptr [edi], ecx; xchg esp, eax; ret 0x7c83; 
0x000cba24: and al, 0x58; lea eax, [esp + 0xb4]; push eax; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x000cb7ac: and al, 0x58; lea eax, [esp + 0xec]; push eax; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x0002a04c: and al, 0x58; mov eax, dword ptr [esp + 0x44]; call eax; 
0x000da0f6: and al, 0x58; push dword ptr [esp + 0x1c]; call edi; 
0x0002b4c3: and al, 0x58; push dword ptr [esp + 0x50]; push dword ptr [esp + 0x50]; call esi; 
0x0002a048: and al, 0x58; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x000da0f2: and al, 0x58; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x1c]; call edi; 
0x0013c4f2: and al, 0x58; push dword ptr [esp + 0x58]; push esi; call edi; 
0x00025bb6: and al, 0x58; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x00024aa0: and al, 0x58; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x000225cc: and al, 0x58; push ebp; push dword ptr [esp + 0x30]; push dword ptr [ebx + 4]; call esi; 
0x0013c4f6: and al, 0x58; push esi; call edi; 
0x0002ed42: and al, 0x5b; mov eax, edx; ret; 
0x000cc3bf: and al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x00038833: and al, 0x5b; pop esi; ret; 
0x0006e558: and al, 0x5c; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x0006f382: and al, 0x5c; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x000cb7b8: and al, 0x5c; call eax; 
0x00026245: and al, 0x5c; call edi; 
0x00028c9e: and al, 0x5c; call esi; 
0x00163633: and al, 0x5c; mov dword ptr [esp + 0x34], edx; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x0011236d: and al, 0x5c; mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x001122c0: and al, 0x5c; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00027240: and al, 0x5c; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x00025bb2: and al, 0x5c; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x00024a9c: and al, 0x5c; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00028c9a: and al, 0x5c; push dword ptr [esp + 0x5c]; call esi; 
0x0002723c: and al, 0x5c; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x000255f3: and al, 0x5c; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00150d18: and al, 0x5c; push ebx; push ebp; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x000dd730: and al, 0x5c; sub edx, dword ptr gs:[0x14]; jne 0xdd7e3; add esp, 0x68; pop ebx; ret; 
0x001162a8: and al, 0x5c; xor eax, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0005516e: and al, 0x60; add dword ptr [eax], eax; add byte ptr [ecx - 0x768fdbbc], cl; ret 0xc483; 
0x00116b36: and al, 0x60; lea ecx, [esp + 4]; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x00124e5b: and al, 0x60; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00163933: and al, 0x60; mov dword ptr [esp + 0x34], edx; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x0012192e: and al, 0x60; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x0015dda1: and al, 0x60; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [edx + 8]; 
0x00025bba: and al, 0x60; mov eax, dword ptr [esp + 0x44]; call eax; 
0x00024aa4: and al, 0x60; mov eax, dword ptr [esp + 0x48]; call eax; 
0x000255ef: and al, 0x60; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00153c32: and al, 0x61; stc; call dword ptr [eax + 0x6a]; 
0x00153d32: and al, 0x61; stc; call dword ptr [eax - 0x18]; 
0x0006e6f9: and al, 0x64; add dword ptr [eax], eax; add byte ptr [eax], al; add edx, dword ptr [esi + eax*4]; jmp edx; 
0x0006f392: and al, 0x64; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x00029498: and al, 0x64; call edi; 
0x00093f5c: and al, 0x64; mov dword ptr [esp + 0x28], eax; cmove esi, edi; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x001246db: and al, 0x64; mov dword ptr [esp + 0x2c], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000b6a66: and al, 0x64; mov dword ptr [esp + 0x34], edx; push eax; push edi; call esi; 
0x00093ed9: and al, 0x64; mov eax, 0x199; mov esi, ebp; call dword ptr gs:[0x10]; 
0x000255f7: and al, 0x64; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00116b32: and al, 0x64; mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 4]; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x0012192a: and al, 0x64; mov ebx, dword ptr [esp + 0x60]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x00029494: and al, 0x64; push dword ptr [esp + 0x64]; call edi; 
0x000b70ca: and al, 0x64; push eax; push esi; call ebx; 
0x0015fe9e: and al, 0x64; stc; call dword ptr [eax + 0x53]; 
0x00161f2c: and al, 0x64; stc; call dword ptr [eax - 0x73]; 
0x00082896: and al, 0x65; mov byte ptr [0x4fe], 0; mov dword ptr gs:[0x80], eax; ret; 
0x000828c0: and al, 0x65; mov byte ptr [0x4fe], al; cmp eax, 1; je 0x828d0; ret; 
0x000b967b: and al, 0x68; add al, 0; add byte ptr [edi], cl; xchg ebp, eax; ret 0x9eb; 
0x00069398: and al, 0x68; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x000b8066: and al, 0x68; add dword ptr [edi], ecx; xchg esp, eax; ret 0x7c83; 
0x00122837: and al, 0x68; mov eax, dword ptr [edx + 0xa0]; mov dword ptr [esp + 0x6c], eax; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x0002a043: and al, 0x68; push eax; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x00028c95: and al, 0x68; push eax; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; call esi; 
0x000cb00e: and al, 0x68; push ecx; lea ebp, [esp + 0x6c]; push ebp; mov ecx, dword ptr [esp + 0x34]; call ecx; 
0x00027f08: and al, 0x6c; call esi; 
0x00122841: and al, 0x6c; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x00027f04: and al, 0x6c; push dword ptr [esp + 0x6c]; call esi; 
0x0002623c: and al, 0x6c; push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x5c]; call edi; 
0x000cb013: and al, 0x6c; push ebp; mov ecx, dword ptr [esp + 0x34]; call ecx; 
0x000cb17c: and al, 0x6c; push ebx; push ebp; mov eax, dword ptr [esp + 0x34]; call eax; 
0x00105502: and al, 0x6c; sub edx, dword ptr gs:[0x14]; jne 0x105526; add esp, 0x78; pop ebx; ret; 
0x00107c82: and al, 0x6c; sub edx, dword ptr gs:[0x14]; jne 0x107ca6; add esp, 0x78; pop ebx; ret; 
0x001259fe: and al, 0x6c; sub edx, dword ptr gs:[0x14]; jne 0x125a14; add esp, 0x7c; ret; 
0x0005835e: and al, 0x6c; sub edx, dword ptr gs:[0x14]; jne 0x5836e; add esp, 0x78; pop ebx; ret; 
0x000e0e62: and al, 0x6c; sub edx, dword ptr gs:[0x14]; jne 0xe0e86; add esp, 0x78; pop ebx; ret; 
0x000e3522: and al, 0x6c; sub edx, dword ptr gs:[0x14]; jne 0xe3546; add esp, 0x78; pop ebx; ret; 
0x000f8552: and al, 0x6c; sub edx, dword ptr gs:[0x14]; jne 0xf8576; add esp, 0x78; pop ebx; ret; 
0x000f9132: and al, 0x6c; sub edx, dword ptr gs:[0x14]; jne 0xf9156; add esp, 0x78; pop ebx; ret; 
0x0006e78f: and al, 0x70; mov edx, ebx; add edx, dword ptr [esi + eax*4]; jmp edx; 
0x00068f74: and al, 0x70; movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edx + eax*4]; add ecx, ebp; jmp ecx; 
0x000da02c: and al, 0x74; add al, 0; add byte ptr [ebx + 0x24448901], cl; sub byte ptr [ebp - 0x6ba6179], cl; call dword ptr [eax + 0x53]; 
0x000d78f0: and al, 0x74; mov edx, ebp; mov edi, eax; mov esi, dword ptr [esp + 4]; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000d76c2: and al, 0x74; mov edx, ebp; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000d7738: and al, 0x74; mov edx, edi; call dword ptr gs:[0x10]; 
0x000d77f7: and al, 0x74; mov edx, edi; mov dword ptr [esp + 0xc], eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x000d7787: and al, 0x74; mov esi, dword ptr [esp + 4]; mov edx, ebp; mov edi, eax; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000ee176: and al, 0x74; out 0x8b, eax; push ebp; add dh, dh; inc esp; ret 0x804; 
0x00158d55: and al, 0x74; push eax; call dword ptr [ecx]; 
0x00048a20: and al, 0x75; fmul qword ptr [ecx + 0x5f5e5bd8]; ret; 
0x000c9c25: and al, 0x75; js 0xc9c88; pop esi; ret; 
0x000668b8: and al, 0x79; stc; call dword ptr [eax - 0x73]; 
0x0007a618: and al, 0x7e; stc; call dword ptr [eax - 0x73]; 
0x0002948c: and al, 0x80; add byte ptr [eax], al; add byte ptr [eax - 1], dl; je 0x294b9; push dword ptr fs:[esp + 0x64]; call edi; 
0x0002a884: and al, 0x80; add byte ptr [eax], al; add byte ptr [eax - 1], dl; je 0x2a8b1; push dword ptr fs:[esp + 0x64]; call edi; 
0x0019c3fb: and al, 0x80; add byte ptr [eax], al; add cl, ch; dec edx; idiv edi; jmp dword ptr [esi - 0x70]; 
0x0019dbfc: and al, 0x80; add byte ptr [eax], al; add dh, dh; ret 0x7407; 
0x0019d10c: and al, 0x80; add byte ptr [eax], al; add dh, dh; ret; 
0x00084f96: and al, 0x80; int1; add edi, 0x89544; add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; call dword ptr gs:[0x10]; 
0x000e826f: and al, 0x81; les ebp, ptr [eax + ebp + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x0016b457: and al, 0x81; les edx, ptr [eax - 0x27770000]; pop ebx; pop esi; ret; 
0x0003007a: and al, 0x81; ret; 
0x000894f1: and al, 0x81; stc; call dword ptr [eax - 0x18]; 
0x0008f9a8: and al, 0x82; stc; call dword ptr [eax - 0x18]; 
0x0003f36a: and al, 0x83; clc; dec dword ptr [edi]; inc esp; ret 0x489; 
0x00124037: and al, 0x83; in al, dx; add al, 0x89; ret; 
0x0007bfbb: and al, 0x83; in al, dx; or al, 0x53; call dword ptr [esi + 0x30]; 
0x00158a65: and al, 0x83; in al, dx; or byte ptr [ebx + 0x50572048], cl; call dword ptr [ecx + 8]; 
0x001302db: and al, 0x83; in al, dx; or byte ptr [ebx - 1], dl; jae 0x130313; call eax; 
0x0012f822: and al, 0x83; in al, dx; or byte ptr [ecx - 0x836b], cl; call dword ptr [edx + 0x56]; 
0x00035134: and al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0016eb2f: and al, 0x83; les ebp, ptr [eax]; pop ebx; ret; 
0x0007fe31: and al, 0x83; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0016bae3: and al, 0x83; les ebx, ptr [eax]; pop ebx; ret; 
0x0007352a: and al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; jmp eax; 
0x000d82ad: and al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000cd20b: and al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x00036128: and al, 0x83; les ecx, ptr [eax]; ret; 
0x0012a39d: and al, 0x83; les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x0007374f: and al, 0x83; les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00166755: and al, 0x83; les edx, ptr [eax]; jmp 0x166703; call 0x1339f0; endbr32; ret; 
0x000cd199: and al, 0x83; les edx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00101320: and al, 0x83; ret 0x8901; 
0x00157287: and al, 0x83; ret 0x8902; 
0x000c1ae8: and al, 0x83; ret; 
0x0014f1c2: and al, 0x83; stc; call dword ptr [eax - 0x18]; 
0x00122ec2: and al, 0x84; add byte ptr [eax], al; add byte ptr [eax + 0x6c], bh; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00122e86: and al, 0x84; add byte ptr [eax], al; add byte ptr [ebp - 0x47f3dbb4], cl; lds eax, ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b9b9c: and al, 0x84; add byte ptr [eax], al; add byte ptr [ebx - 0x76f7dbbc], cl; ret; 
0x00046fc9: and al, 0x84; add byte ptr [eax], al; add cl, ch; ret; 
0x00157184: and al, 0x84; ror byte ptr [edi], 0x95; ret 0x3a3c; 
0x0011f2db: and al, 0x85; ror byte ptr [edi], 0x44; ret 0x66c3; 
0x0009f258: and al, 0x85; ror byte ptr [edi], 0x89; push cs; add al, byte ptr [eax]; add byte ptr [ebx + 0x29142454], cl; ret 0xb48d; 
0x0009f4b0: and al, 0x85; ror byte ptr [edi], 0x89; test byte ptr [ecx], 0; add byte ptr [ebx + 0x29142454], cl; ret 0x8b90; 
0x0014c35b: and al, 0x88; add byte ptr [eax], al; add byte ptr [ebx + 0x1008b11], cl; ret 0x5052; 
0x0014c496: and al, 0x88; add byte ptr [eax], al; add byte ptr [ebx + 0x1008b17], cl; ret 0x5052; 
0x000bf7eb: and al, 0x88; add byte ptr [eax], al; add byte ptr [ebx - 0x76f7dbbc], cl; ret; 
0x000b9834: and al, 0x88; add byte ptr [eax], al; add byte ptr [ecx + 0x244489da], cl; or byte ptr [ebp - 0x7efb7884], cl; ret 0; 
0x0019dcb2: and al, 0x88; add byte ptr [eax], al; add byte ptr [ecx - 0x7c07763a], cl; ret; 
0x00045a47: and al, 0x88; add byte ptr [eax], al; add byte ptr [ecx - 0x7e38fe26], cl; ret 0; 
0x000dd840: and al, 0x88; add byte ptr [eax], al; add byte ptr [ecx - 0xfbbf017], cl; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x0019d0e1: and al, 0x88; add byte ptr [eax], al; add byte ptr [ecx], cl; ret 0xb60f; 
0x0010bdbf: and al, 0x88; add dword ptr [eax], eax; add byte ptr [ebx + 0x518d0cc4], al; call dword ptr [edx + 0x53]; 
0x0019d49e: and al, 0x89; aad 0x89; ret; 
0x00140771: and al, 0x89; adc dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x00084441: and al, 0x89; add al, byte ptr [ebx - 0x3fcee73c]; pop ebx; ret; 
0x00140e71: and al, 0x89; call 0x20140; add esp, 0x14; pop ebx; pop esi; ret; 
0x0011c153: and al, 0x89; clc; pop ebx; pop esi; pop edi; ret; 
0x000394df: and al, 0x89; dec esp; and al, 0x28; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00082411: and al, 0x89; fcomp dword ptr [ebx + 0x5e]; ret; 
0x0011273d: and al, 0x89; inc edx; sub byte ptr [esi + 0x5f], bl; ret; 
0x00124794: and al, 0x89; inc esp; and al, 0x38; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001243f0: and al, 0x89; inc esp; and al, 4; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001248d1: and al, 0x89; inc esp; and al, 8; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0007f386: and al, 0x89; push eax; add al, 0x5b; ret; 
0x000391ca: and al, 0x89; push eax; add al, 0xe9; ret; 
0x0017363e: and al, 0x89; ret 0x4489; 
0x000f515b: and al, 0x89; ret 0x448b; 
0x0016b78e: and al, 0x89; ret 0x748d; 
0x00171525: and al, 0x89; ret 0x808b; 
0x0010b0dc: and al, 0x89; ret 0x8b8; 
0x001209fd: and al, 0x89; ret 0xc483; 
0x000418b4: and al, 0x89; ret 0xe283; 
0x000578aa: and al, 0x89; ret 0xfa29; 
0x000302ca: and al, 0x89; ret; 
0x0009167c: and al, 0x89; retf 0x4c8b; and al, 0x18; call dword ptr gs:[0x10]; 
0x00069eb1: and al, 0x89; sal bh, 1; fmul dword ptr [edi]; dec eax; ret 0x4489; 
0x0007ea1c: and al, 0x8b; adc esi, esi; ret 0xf08; 
0x000eaa63: and al, 0x8b; inc eax; xor byte ptr [ecx], bh; ret; 
0x000f778a: and al, 0x8b; inc ebp; sub al, 0x39; sal byte ptr [esi + ecx - 0x77], 1; ret 0xf189; 
0x000f779f: and al, 0x8b; inc ebp; xor byte ptr [ecx], bh; sal byte ptr [ebx + ecx - 0x77], 1; ret 0xf189; 
0x0008b97c: and al, 0x8b; inc ebx; or al, 0x89; ret 0xe281; 
0x0014f4a5: and al, 0x8b; inc esp; and al, 0x24; call eax; 
0x001243ec: and al, 0x8b; inc esp; and al, 0x24; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00124b9c: and al, 0x8b; inc esp; and al, 0x28; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0013bf27: and al, 0x8b; inc esp; and al, 0x2c; call eax; 
0x00159ee5: and al, 0x8b; inc esp; and al, 0x34; call eax; 
0x00124ad7: and al, 0x8b; inc esp; and al, 0x38; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0015467a: and al, 0x8b; je 0x1546a2; sbb byte ptr [ecx - 0x72ec1408], cl; je 0x1546ac; add byte ptr [eax - 0x7cfbbc75], dl; ret; 
0x00159596: and al, 0x8b; je 0x1595be; and byte ptr [ebp - 0xc47ef80], cl; jmp dword ptr [ebp - 0x75]; 
0x0004ab7a: and al, 0x8b; jo 0x4aba6; mov ebp, dword ptr [eax + 0x2c]; mov ebx, dword ptr [eax + 0x34]; xor eax, eax; ret; 
0x0004ae23: and al, 0x8b; jo 0x4ae4f; mov ebp, dword ptr [eax + 0x2c]; mov ebx, dword ptr [eax + 0x34]; xor eax, eax; ret; 
0x00045a44: and al, 0x8b; mov word ptr [eax + ecx*4], fs; add byte ptr [eax], al; add byte ptr [ecx - 0x7e38fe26], cl; ret 0; 
0x000838fb: and al, 0x8b; pop eax; or al, 0xe8; mov esp, 0x390005b9; ret; 
0x000d38fb: and al, 0x8b; pop eax; sbb byte ptr [ebx - 0x78f0f905], al; ret 7; 
0x000fb0e7: and al, 0x8b; pop esp; and al, 0x20; mov ecx, edx; call dword ptr gs:[0x10]; 
0x001636a1: and al, 0x8b; push eax; sub byte ptr [ecx - 0x74d7dbac], cl; push eax; or byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x0006e60d: and al, 0x8c; add byte ptr [eax], al; add al, ch; cdq; ret 0xffff; 
0x0019dbeb: and al, 0x8c; add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ret 0x940b; 
0x0004d4b8: and al, 0x8c; add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ror byte ptr [edi], 0x95; ret; 
0x0019baca: and al, 0x8c; add byte ptr [eax], al; add dh, dh; ret; 
0x0016025d: and al, 0x8d; add dword ptr [ebx + 0x64], -7; call dword ptr [esi + 0x57]; 
0x000bf4a5: and al, 0x8d; jl 0xbf430; add al, 0x81; ret 0; 
0x00049a0f: and al, 0x8d; pop edi; inc byte ptr [ebx - 0x6bf0021d]; ret; 
0x000c07b2: and al, 0x8d; xchg dword ptr [edi + edx*4], esp; stc; call dword ptr [eax - 0x73]; 
0x000fc201: and al, 0x8d; xchg dword ptr [esi + ebx*4 - 7], ecx; call dword ptr [eax - 0x73]; 
0x000447b9: and al, 0x8d; xchg dword ptr [esi + esi*2 - 7], ebx; call dword ptr [eax - 0x73]; 
0x00109420: and al, 0x90; add byte ptr [eax], al; add byte ptr [ebp - 0x47e7dbac], cl; or al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00109ad2: and al, 0x90; add byte ptr [eax], al; add byte ptr [ebx + 0x982494], cl; add byte ptr [eax], al; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x001230f6: and al, 0x94; add byte ptr [eax], al; add byte ptr [ebx + 0xa024b4], cl; add byte ptr [eax], al; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x000bcaec: and al, 0x94; add byte ptr [eax], al; add byte ptr [ebx - 0x76f7dbbc], cl; ret; 
0x0019d8db: and al, 0x94; add byte ptr [eax], al; add byte ptr [ecx], cl; ret 0xbc89; 
0x000c07b5: and al, 0x97; stc; call dword ptr [eax - 0x73]; 
0x00109ad9: and al, 0x98; add byte ptr [eax], al; add byte ptr [eax + 0x132], bh; call dword ptr gs:[0x10]; 
0x00040518: and al, 0x98; add byte ptr [eax], al; add cl, ch; sti; idiv edi; call dword ptr [eax + 0x6a]; 
0x000ce93e: and al, 0x99; stc; call dword ptr [eax - 0x73]; 
0x00109a0e: and al, 0x9c; add byte ptr [eax], al; add al, ch; cwde; ret 0; 
0x000bd58c: and al, 0x9c; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fe13], al; ret; 
0x0008ebd7: and al, 0x9c; add byte ptr [eax], al; add dh, dh; ret 0xf02; 
0x00092fc8: and al, 0xa0; add byte ptr [eax], al; add byte ptr [eax + 0x119], bh; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x001230fd: and al, 0xa0; add byte ptr [eax], al; add byte ptr [eax + 0x12c], bh; call dword ptr gs:[0x10]; 
0x0008df00: and al, 0xa0; add byte ptr [eax], al; add byte ptr [eax + 0xaf], bh; mov esi, 8; call dword ptr gs:[0x10]; 
0x00163b0c: and al, 0xa4; add byte ptr [eax], al; add bh, bh; je 0x163b38; sbb al, 0x53; call eax; 
0x0010a651: and al, 0xa4; add byte ptr [eax], al; add byte ptr [ebx + 0xa82494], cl; add byte ptr [eax], al; mov esi, dword ptr [esp + 0xac]; call dword ptr gs:[0x10]; 
0x0010a7ba: and al, 0xa8; add byte ptr [eax], al; add byte ptr [eax + 0x133], bh; call dword ptr gs:[0x10]; 
0x0010a658: and al, 0xa8; add byte ptr [eax], al; add byte ptr [ebx + 0xac24b4], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0015db74: and al, 0xac; add byte ptr [eax], al; add byte ptr [edx + 0x56], dl; call dword ptr [eax + 4]; 
0x000cba28: and al, 0xb4; add byte ptr [eax], al; add byte ptr [eax - 0x75], dl; inc esp; and al, 0x5c; call eax; 
0x00091bcf: and al, 0xb4; add byte ptr [eax], al; add byte ptr [ecx - 0x47dfdbbc], cl; mov dl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0009b3a5: and al, 0xb6; idiv bh; test byte ptr [ecx + 0x184], 4; lea edx, [edx - 0x187980]; cmove eax, edx; ret; 
0x0010a266: and al, 0xb8; add al, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x000388d0: and al, 0xb8; add byte ptr [eax], al; add byte ptr [ecx - 0x47dfdbbc], cl; mov dl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010a196: and al, 0xb8; add eax, dword ptr [eax]; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0003bc36: and al, 0xb8; arpl word ptr [ecx], ax; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0010b0b5: and al, 0xb8; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001116c6: and al, 0xb8; test al, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0013b353: and al, 0xb; stc; inc dword ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x001734ba: and al, 0xbc; add byte ptr [eax], al; add byte ptr [ebp + 0x57], dl; push esi; call dword ptr [ebx + 0x40]; 
0x000d28d8: and al, 0xbc; add byte ptr [eax], al; add byte ptr [ecx - 0x76d7dbbc], cl; ret 0xa165; 
0x00108ec3: and al, 0xbc; add dword ptr [eax], eax; add byte ptr [ebp - 0x47d3dbac], cl; sub al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00068c52: and al, 0xc4; add byte ptr [eax], al; add byte ptr [eax - 0x18], dl; ret; 
0x0012272d: and al, 0xc4; add byte ptr [eax], al; add byte ptr [ebx + 0xc0249c], cl; add byte ptr [eax], al; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00080e8f: and al, 0xc; add byte ptr [eax], al; ret; 
0x000b818c: and al, 0xc; add byte ptr [edi + edi*2 - 0x7d], dh; ret; 
0x00166b5a: and al, 0xc; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x000de7d9: and al, 0xc; add ebx, 1; mov dword ptr [esp + 8], eax; call edx; 
0x0003bc90: and al, 0xc; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00037a35: and al, 0xc; add esp, 0x14; pop ebx; pop esi; ret; 
0x00087f90: and al, 0xc; add esp, 0x18; pop ebx; ret; 
0x00071a61: and al, 0xc; add esp, 0x1c; ret; 
0x0009a400: and al, 0xc; call dword ptr [edx]; 
0x00083299: and al, 0xc; call dword ptr gs:[0x10]; 
0x00122feb: and al, 0xc; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x123000; pop ebx; ret; 
0x0012303b: and al, 0xc; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x123050; pop ebx; ret; 
0x0012308b: and al, 0xc; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x1230a0; pop ebx; ret; 
0x00083299: and al, 0xc; call dword ptr gs:[0x10]; pop ebx; pop esi; ret; 
0x000da07c: and al, 0xc; call eax; 
0x0002ccad: and al, 0xc; call edx; 
0x000d8f20: and al, 0xc; cmp edx, eax; cmova edx, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x00036347: and al, 0xc; fld dword ptr [esp]; mov dword ptr [edx], eax; add esp, 4; ret; 
0x0003619d: and al, 0xc; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00035c1b: and al, 0xc; fld xword ptr [esp + 4]; ret; 
0x00036386: and al, 0xc; fstp dword ptr [esp]; fld dword ptr [esp]; mov dword ptr [edx], eax; add esp, 4; ret; 
0x001662e9: and al, 0xc; lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x00165959: and al, 0xc; lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 4]; 
0x00088926: and al, 0xc; mov dword ptr [eax], ecx; xor eax, eax; pop ebx; pop esi; ret; 
0x00171991: and al, 0xc; mov dword ptr [eax], edx; ret; 
0x000843f8: and al, 0xc; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0003ab9f: and al, 0xc; mov dword ptr [ecx], eax; mov eax, ecx; mov dword ptr [ecx + 4], edx; ret 4; 
0x0015b0f2: and al, 0xc; mov dword ptr [edx + 0x2c], ebx; mov dword ptr [edx + 0x34], ecx; pop ebx; ret; 
0x000d70c2: and al, 0xc; mov dword ptr [edx], ebx; pop ebx; ret; 
0x000de829: and al, 0xc; mov dword ptr [esp + 8], eax; call edx; 
0x0016647d: and al, 0xc; mov dword ptr [esp + 8], edx; pop ebx; mov eax, dword ptr [eax + 0x20]; jmp eax; 
0x00166495: and al, 0xc; mov dword ptr [esp + 8], edx; pop ebx; mov eax, dword ptr [eax + 0x24]; jmp eax; 
0x0015afe5: and al, 0xc; mov dword ptr [esp + 8], edx; pop ebx; mov eax, dword ptr [eax + 4]; jmp eax; 
0x0015afcd: and al, 0xc; mov dword ptr [esp + 8], edx; pop ebx; mov eax, dword ptr [eax]; jmp eax; 
0x00093da2: and al, 0xc; mov eax, 0x105; call dword ptr gs:[0x10]; 
0x000d77fd: and al, 0xc; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x0010c244: and al, 0xc; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x0012218a: and al, 0xc; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x00121f3f: and al, 0xc; mov eax, 0x178; call dword ptr gs:[0x10]; 
0x000d7571: and al, 0xc; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000fb1dc: and al, 0xc; mov eax, 0x1a7; call dword ptr gs:[0x10]; 
0x001244a4: and al, 0xc; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000ce9ca: and al, 0xc; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x00123cf4: and al, 0xc; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x0010a34d: and al, 0xc; mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00121f72: and al, 0xc; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x0010b259: and al, 0xc; mov eax, 0xb7; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00112104: and al, 0xc; mov eax, 0xbb; call dword ptr gs:[0x10]; 
0x00122dcd: and al, 0xc; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x00122f4d: and al, 0xc; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x00122e8d: and al, 0xc; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x00105012: and al, 0xc; mov eax, 0xdb; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011f3d4: and al, 0xc; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x0011f434: and al, 0xc; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x0011f304: and al, 0xc; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x00112134: and al, 0xc; mov eax, 0xef; call dword ptr gs:[0x10]; 
0x0011ee9a: and al, 0xc; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x00123a94: and al, 0xc; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x0009a342: and al, 0xc; mov eax, dword ptr [eax - 0x148]; call dword ptr [eax]; 
0x0015a762: and al, 0xc; mov eax, dword ptr [ebx + ecx*4 - 0x264]; mov dword ptr [esp + 0x10], edx; pop ebx; pop esi; jmp eax; 
0x00035e28: and al, 0xc; mov eax, dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0012d02d: and al, 0xc; mov eax, dword ptr [esp + 0x14]; add eax, 0x2000001; push eax; call dword ptr [edi + 0x14]; 
0x00142eab: and al, 0xc; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00116370: and al, 0xc; mov eax, edi; call dword ptr gs:[0x10]; 
0x00122408: and al, 0xc; mov ebx, dword ptr [esp + 0x50]; call dword ptr gs:[0x10]; 
0x0010b255: and al, 0xc; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xb7; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00058a17: and al, 0xc; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00123f2b: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00123b2b: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x00109bcb: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x0010c29b: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x0010c1db: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x0010afeb: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x001152fb: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x0010c20b: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x55; call dword ptr gs:[0x10]; 
0x0011702b: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x00120fcb: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x00123bdb: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x001238db: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x0011c52b: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x001239cb: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x001239fb: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x000fafeb: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x00123c4b: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000de87b: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x0010bbeb: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x0010bbbb: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000df6bb: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000df6eb: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x0010bb8b: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x0011c65b: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x0011c62b: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x0011f3fb: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x0011f45b: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x0011f32b: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x00088a5a: and al, 0xc; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00088a95: and al, 0xc; mov ecx, esi; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0007199b: and al, 0xc; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 8], edx; pop ebx; jmp eax; 
0x00126c3a: and al, 0xc; mov edx, dword ptr [edx]; mov dword ptr [eax], edx; mov eax, 1; ret; 
0x0008ea3a: and al, 0xc; mov edx, dword ptr [edx]; mov ecx, dword ptr [eax]; cmp dword ptr [edx + 0x10], ecx; je 0x8ea50; ret; 
0x001254f7: and al, 0xc; mov edx, dword ptr [esp + 0x10]; mov dword ptr [esp + 0x18], eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x001254a9: and al, 0xc; mov edx, dword ptr [esp + 0x10]; mov dword ptr [esp + 0x18], eax; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x00125440: and al, 0xc; mov edx, dword ptr [esp + 0x10]; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x0008d77b: and al, 0xc; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x00117469: and al, 0xc; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00117639: and al, 0xc; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x00068e3d: and al, 0xc; movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edx + eax*4 - 0x737e0]; add ecx, ebp; jmp ecx; 
0x0006913d: and al, 0xc; movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edx + eax*4 - 0x73860]; add ecx, ebp; jmp ecx; 
0x00035be6: and al, 0xc; or eax, 0xffff8000; inc eax; shr eax, 0x1f; ret; 
0x00081984: and al, 0xc; pop ebx; mov eax, dword ptr [edx + 0x18]; pop esi; jmp eax; 
0x000b3184: and al, 0xc; pop ebx; pop esi; ret; 
0x00197824: and al, 0xc; pop edi; ret; 
0x0012cda5: and al, 0xc; push 0x2000001; mov eax, dword ptr [esp + 0x20]; call dword ptr [eax + 0x14]; 
0x000da0ee: and al, 0xc; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x1c]; call edi; 
0x0013c4ee: and al, 0xc; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; push esi; call edi; 
0x00173130: and al, 0xc; push ebx; call dword ptr [ebp + 0x3c]; 
0x0007c687: and al, 0xc; push edi; push ebx; call dword ptr [esi + 0x3c]; 
0x0002160d: and al, 0xc; push edx; mov dword ptr [esp + 0xc], edx; push esi; push dword ptr [esp + 0x40]; call eax; 
0x00166298: and al, 0xc; push edx; push ebx; call dword ptr [eax + 0x20]; 
0x001662ed: and al, 0xc; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x0016595d: and al, 0xc; push edx; push ebx; call dword ptr [eax + 4]; 
0x00165908: and al, 0xc; push edx; push ebx; call dword ptr [eax]; 
0x000d72d7: and al, 0xc; push edx; push ebx; call eax; 
0x00165cb8: and al, 0xc; push edx; push ecx; call dword ptr [eax + 4]; 
0x00026812: and al, 0xc; push es; add byte ptr [eax], al; add cl, ch; ret; 
0x00021675: and al, 0xc; push esi; push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x00021612: and al, 0xc; push esi; push dword ptr [esp + 0x40]; call eax; 
0x000658dc: and al, 0xc; push esi; push eax; push ebp; mov eax, dword ptr [esp + 0x1c]; call dword ptr [eax + 0x1c]; 
0x00151307: and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x151316; add esp, 0x1c; ret; 
0x00163e34: and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x163e43; add esp, 0x1c; ret; 
0x00163e83: and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x163ebc; add esp, 0x1c; ret; 
0x00036613: and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x36626; mov eax, edx; add esp, 0x1c; ret 4; 
0x00037269: and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x37279; add esp, 0x18; pop ebx; ret; 
0x0003b6e9: and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x3b6f8; add esp, 0x1c; ret; 
0x0003b73c: and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x3b74b; add esp, 0x1c; ret; 
0x00021dca: and al, 0xc; sub ecx, dword ptr gs:[0x14]; jne 0x21dd9; add esp, 0x1c; ret; 
0x0010505c: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x105077; add esp, 0x1c; ret; 
0x001165f3: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x116609; add esp, 0x1c; ret; 
0x00118370: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x11837f; add esp, 0x1c; ret; 
0x001195ea: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1195f9; add esp, 0x1c; ret; 
0x0011d394: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x11d3a3; add esp, 0x1c; ret; 
0x001245e0: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x124609; add esp, 0x18; pop ebx; ret; 
0x00124660: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x124689; add esp, 0x18; pop ebx; ret; 
0x001248eb: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x124919; add esp, 0x18; pop ebx; ret; 
0x0012503b: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x125069; add esp, 0x18; pop ebx; ret; 
0x001250c0: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1250e9; add esp, 0x18; pop ebx; ret; 
0x001252b4: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1252c3; add esp, 0x1c; ret; 
0x001454aa: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1454cd; add esp, 0x18; pop ebx; ret; 
0x00145506: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x145515; add esp, 0x1c; ret; 
0x00145552: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x145561; add esp, 0x1c; ret; 
0x00147370: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1473bc; add esp, 0x1c; ret; 
0x0015ef9a: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x15f018; add esp, 0x18; pop ebx; ret; 
0x0016224f: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x162267; add esp, 0x1c; ret; 
0x0016276b: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x16277a; add esp, 0x1c; ret; 
0x001627e2: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1627ff; add esp, 0x18; pop ebx; ret; 
0x0016574e: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1657b9; add esp, 0x18; pop ebx; ret; 
0x0016583e: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1658a9; add esp, 0x18; pop ebx; ret; 
0x00165ae5: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x165b3b; add esp, 0x18; pop ebx; ret; 
0x00165b75: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x165bcb; add esp, 0x18; pop ebx; ret; 
0x00165c34: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x165c5b; add esp, 0x18; pop ebx; ret; 
0x00165c99: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x165cfb; add esp, 0x18; pop ebx; ret; 
0x00165d35: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x165d99; add esp, 0x18; pop ebx; ret; 
0x00166555: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1665ab; add esp, 0x18; pop ebx; ret; 
0x001665e5: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x16663b; add esp, 0x18; pop ebx; ret; 
0x00166675: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1666cb; add esp, 0x18; pop ebx; ret; 
0x00166705: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x16675b; add esp, 0x18; pop ebx; ret; 
0x00166dbd: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x166dcf; movzx eax, al; add esp, 0x1c; ret; 
0x00166e1d: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x166e2f; movzx eax, al; add esp, 0x1c; ret; 
0x00166e86: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x166e96; add esp, 0x18; pop ebx; ret; 
0x00166ee6: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x166ef6; add esp, 0x18; pop ebx; ret; 
0x0016b9e2: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x16ba1c; add esp, 0x18; pop ebx; ret; 
0x0016d1fe: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x16d219; add esp, 0x18; pop ebx; ret; 
0x0016d276: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x16d299; add esp, 0x18; pop ebx; ret; 
0x00171a1d: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x171a2d; add esp, 0x18; pop ebx; ret; 
0x001745c4: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1745d3; add esp, 0x1c; ret; 
0x0017a180: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x17a1a9; add esp, 0x18; pop ebx; ret; 
0x0003b168: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x3b1ac; add esp, 0x18; pop ebx; ret; 
0x0003b799: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x3b7a8; add esp, 0x1c; ret; 
0x0003b7ec: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x3b7fb; add esp, 0x1c; ret; 
0x0003b839: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x3b848; add esp, 0x1c; ret; 
0x0003b88c: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x3b89b; add esp, 0x1c; ret; 
0x00058943: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x5895f; add esp, 0x1c; ret; 
0x0009054a: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x90577; add esp, 0x18; pop ebx; ret; 
0x000c41b9: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xc41ec; add esp, 0x18; pop ebx; ret; 
0x000cad89: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xcad98; add esp, 0x1c; ret; 
0x000d482d: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xd483c; add esp, 0x1c; ret; 
0x000d6ebd: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xd6ecc; add esp, 0x1c; ret; 
0x0007d883: and al, 0xc; sub esp, 4; push eax; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x00038e32: and al, 0xc; sub esp, 4; push ebp; push ebx; push esi; call edi; 
0x00038e0e: and al, 0xc; sub esp, 4; push ebp; push esi; push dword ptr [esp + 0x1c]; call edi; 
0x00165e92: and al, 0xc; sub esp, 8; mov eax, dword ptr [esi + 4]; push ebx; push esi; call dword ptr [eax + 4]; 
0x0011e25e: and al, 0xc; test eax, eax; je 0x11e268; test edx, edx; jne 0x11e270; ret; 
0x000832c8: and al, 0xc; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000832c8: and al, 0xc; xor cl, 0x81; call dword ptr gs:[0x10]; pop ebx; pop esi; ret; 
0x000dd93c: and al, 0xc; xor eax, eax; test edi, edi; cmove esi, eax; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x00073e07: and al, 0xd0; add byte ptr [eax], al; add byte ptr [ebx + 0x6a5720c4], al; call dword ptr [edi + 0x56]; 
0x0010005f: and al, 0xd0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0019e15c: and al, 0xd4; add byte ptr [eax], al; add byte ptr [ecx + 0x7fffe2], al; add byte ptr [ecx - 0x76f3dbac], cl; ret 0xb70f; 
0x001484c2: and al, 0xd8; add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; ret; 
0x000363e5: and al, 0xd9; add al, 0x24; add esp, 4; ret; 
0x0003638a: and al, 0xd9; add al, 0x24; mov dword ptr [edx], eax; add esp, 4; ret; 
0x0004caa2: and al, 0xdb; sub al, 0x24; add esp, 0x1c; ret; 
0x0006860d: and al, 0xdc; add al, 0; add byte ptr [ebx - 0x1337f], cl; jmp dword ptr [ebp - 0x75]; 
0x000cae63: and al, 0xdd; add al, 0x24; add esp, 0xc; ret; 
0x00036125: and al, 0xdd; add al, 0x24; add esp, 8; ret; 
0x00075588: and al, 0xe0; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp - 0x19bf7d], cl; call dword ptr [eax - 0x73]; 
0x00161a09: and al, 0xe0; add byte ptr [eax], al; add byte ptr [ebx + 0x50], dl; call dword ptr [edx + 8]; 
0x000f3055: and al, 0xe0; add byte ptr [eax], al; add byte ptr [ecx], al; ret; 
0x0009aea7: and al, 0xe4; add byte ptr [eax], al; add byte ptr [ebp - 0x66b5f80], cl; call dword ptr [eax + 0x68]; 
0x0007a1b8: and al, 0xe8; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp - 0x189f7d], cl; call dword ptr [eax - 0x73]; 
0x0015b145: and al, 0xe8; cmc; dec edi; in al, dx; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0015ef56: and al, 0xe8; in al, 0x11; in al, dx; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0012c456: and al, 0xe8; in al, 0x3c; out dx, eax; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000eaff6: and al, 0xe8; inc esp; push ecx; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000314dc: and al, 0xe8; mov es, word ptr [ecx + 8]; add byte ptr [ebx - 0x3f7cef3c], al; sbb al, 0x89; loope 0x31474; ret; 
0x00179746: and al, 0xe8; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xfff6; 
0x000918d2: and al, 0xe8; push 0x89fff8e8; cmp al, 0x24; call esi; 
0x0015d8e9: and al, 0xe8; push ecx; sub ah, ch; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x001646e8: and al, 0xe8; push edx; mov edx, 0xc483ffeb; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00155898: and al, 0xe8; ret 0xffd4; 
0x00024527: and al, 0xe8; ret; 
0x000ead08: and al, 0xe8; xor dl, byte ptr [ebx + esi*8 - 1]; add esp, 0x14; pop ebx; pop esi; ret; 
0x000cb7b0: and al, 0xec; add byte ptr [eax], al; add byte ptr [eax - 0x75], dl; inc esp; and al, 0x5c; call eax; 
0x00150dfc: and al, 0xf3; inc dword ptr [ebx + 0x1b810c4]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0009a98e: and al, 0xf4; add byte ptr [eax], al; add byte ptr [ebp - 0x66ba380], cl; call dword ptr [eax + 0x68]; 
0x001547e5: and al, 0xf4; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x840f; 
0x001703bf: and al, 0xf6; inc ebp; adc byte ptr [esi*2 + 0x828d18], al; push ebx; hlt; jmp dword ptr [esi - 9]; 
0x00057432: and al, 0xf6; ret 0xf20; 
0x000f2479: and al, 0xf8; add byte ptr [eax], al; add byte ptr [edi], cl; dec esp; ret 0xc183; 
0x00160336: and al, 0xf9; call dword ptr [eax + 0x52]; 
0x000cc456: and al, 0xf; mov bh, 0x84; inc ebp; mov esi, 0x89fff8e4; ret 0x80b8; 
0x000f2348: and al, 0xf; mov dh, 0x52; sbb al, 0xf6; ret 0xf08; 
0x0003d9c5: and al, 0xf; scasd eax, dword ptr es:[edi]; ret 0xc301; 
0x0003d70e: and al, 0xf; sub dword ptr [ebx + 2], 0; add byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; aad 1; ret 0xf089; 
0x0006f97e: and al, 0xf; test dword ptr [ebx - 0x16000003], edx; ret; 
0x0006dd62: and al, 0xf; xchg byte ptr [edi], dh; adc dword ptr [eax], eax; add byte ptr [ebx + 0x565304ec], al; push ebp; call dword ptr [edi + 0x1c]; 
0x000e8a05: and al, 0xf; xchg esp, eax; ret; 
0x00092e14: and al, 0xff; rol dword ptr [ebx - 0x3fceeb3c], cl; pop ebx; pop esi; ret; 
0x0015ace4: and al, 1; add byte ptr [eax], al; add al, ch; jb 0x15ace3; in eax, dx; jmp dword ptr [esi - 0x70]; 
0x0010ea73: and al, 1; add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0x798b; 
0x0008f58e: and al, 1; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x00123b32: and al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010463f: and al, 1; add byte ptr [eax], al; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x000375ea: and al, 1; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x000a5ca8: and al, 2; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000853e6: and al, 2; nop; xor eax, eax; pop ebx; pop edi; ret; 
0x0009b196: and al, 3; xor byte ptr [edi], cl; xchg esp, eax; ret; 
0x00166b36: and al, 4; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x000827c6: and al, 4; add dword ptr [ebp + ecx + 0x65], esi; mov eax, dword ptr [8]; mov byte ptr [eax + 0x4fe], 0; ret; 
0x0013faf6: and al, 4; add eax, 9; and eax, 0xfffffff8; add eax, 0xc; ret; 
0x00084762: and al, 4; and dword ptr [eax + 8], 0xfffffffb; xor eax, eax; ret; 
0x0007be86: and al, 4; and dword ptr [eax], 0xffffffcf; ret; 
0x0002fdc6: and al, 4; and eax, 0x7f; ret; 
0x00133a66: and al, 4; and eax, 0xffff; ror ax, 8; ret; 
0x00133a56: and al, 4; bswap eax; ret; 
0x000d749e: and al, 4; call dword ptr gs:[0x10]; 
0x0009c0fc: and al, 4; cmove eax, edx; add eax, 1; ret; 
0x00140ac6: and al, 4; cmp byte ptr [eax + 2], 0; jne 0x140ad8; movzx eax, byte ptr [eax + 1]; shr eax, 1; ret; 
0x000829a1: and al, 4; cmp dword ptr [eax], 1; je 0x829b0; ret; 
0x00035e3b: and al, 4; fadd st(0); mov dword ptr [eax], ecx; ret; 
0x000362eb: and al, 4; fld dword ptr [esp + 4]; ret; 
0x0004ca67: and al, 4; fld qword ptr [esp]; add esp, 0xc; ret; 
0x00035daa: and al, 4; fscale; fstp st(1); ret; 
0x00035e56: and al, 4; fxam; fnstsw ax; fstp st(0); and eax, 0x200; ret; 
0x0014f3f8: and al, 4; jmp 0x151480; nop; xor eax, eax; ret; 
0x0003a1f0: and al, 4; jmp 0x39920; lea esi, [esi]; nop; xor eax, eax; ret; 
0x00076a7c: and al, 4; jmp 0x75950; lea esi, [esi]; nop; mov eax, 0xffffffff; ret; 
0x000813dc: and al, 4; jmp 0x80ce0; lea esi, [esi]; nop; mov eax, 0xffffffff; ret; 
0x0016ece8: and al, 4; jmp dword ptr [eax + 0x30]; 
0x00165701: and al, 4; jmp dword ptr [eax + 4]; 
0x0008285f: and al, 4; jmp dword ptr [eax]; 
0x0008285f: and al, 4; jmp dword ptr [eax]; lea esi, [esi]; nop; ret; 
0x00071aa4: and al, 4; jmp eax; 
0x00071aa4: and al, 4; jmp eax; lea esi, [esi]; nop; xor eax, eax; ret; 
0x0015d888: and al, 4; jmp edx; 
0x0015d888: and al, 4; jmp edx; lea esi, [esi]; endbr32; ret; 
0x001605a3: and al, 4; jmp edx; lea esi, [esi]; nop; endbr32; ret; 
0x0008e066: and al, 4; lock dec dword ptr [eax]; jne 0x8e070; xor eax, eax; ret; 
0x00104fec: and al, 4; mov dword ptr [eax + 0x108], edx; xor eax, eax; ret; 
0x00104fd4: and al, 4; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x00084872: and al, 4; mov dword ptr [eax + 0x14], edx; xor eax, eax; ret; 
0x0008d6e6: and al, 4; mov dword ptr [eax], 0; mov dword ptr [eax + 4], 0; xor eax, eax; ret; 
0x000911b1: and al, 4; mov dword ptr [eax], 0; mov ecx, dword ptr [edx + 0x3ae0]; mov dword ptr [edx + 0x3ae0], eax; mov dword ptr [eax + 0xc], ecx; ret; 
0x00084b86: and al, 4; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x0008e0a6: and al, 4; mov dword ptr [eax], 1; xor eax, eax; ret; 
0x00035e30: and al, 4; mov dword ptr [eax], ecx; ret; 
0x0008d73f: and al, 4; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x00084baf: and al, 4; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000d75d9: and al, 4; mov dword ptr [esp + 8], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x0004ca9e: and al, 4; mov dword ptr [esp], eax; fld xword ptr [esp]; add esp, 0x1c; ret; 
0x000d7491: and al, 4; mov eax, 0x108; mov dword ptr [esp + 8], ecx; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x000d7305: and al, 4; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x00123bac: and al, 4; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x00123d48: and al, 4; mov eax, 0x136; call dword ptr gs:[0x10]; 
0x00123dac: and al, 4; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x0012181c: and al, 4; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x00123a58: and al, 4; mov eax, 0x149; call dword ptr gs:[0x10]; 
0x0010b06c: and al, 4; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x00123b78: and al, 4; mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x00123ddc: and al, 4; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x00118ee8: and al, 4; mov eax, 0x158; call dword ptr gs:[0x10]; 
0x00123e4c: and al, 4; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x00123e7c: and al, 4; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x0008471a: and al, 4; mov eax, 0x16; cmp edx, 2; jbe 0x84730; ret; 
0x00123eac: and al, 4; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x00123ed8: and al, 4; mov eax, 0x17e; call dword ptr gs:[0x10]; 
0x000d78f8: and al, 4; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000d79c1: and al, 4; mov eax, 0x197; mov ecx, edi; mov ebx, 1; call dword ptr gs:[0x10]; 
0x000d7870: and al, 4; mov eax, 0x197; mov edx, ebp; mov ebx, 1; call dword ptr gs:[0x10]; 
0x000ddbe8: and al, 4; mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x0003794c: and al, 4; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x00109b9c: and al, 4; mov eax, 0x27; call dword ptr gs:[0x10]; 
0x0010c2c8: and al, 4; mov eax, 0x28; call dword ptr gs:[0x10]; 
0x0010af88: and al, 4; mov eax, 0x29; call dword ptr gs:[0x10]; 
0x00118ce8: and al, 4; mov eax, 0x33; call dword ptr gs:[0x10]; 
0x000df5ec: and al, 4; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x00109928: and al, 4; mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x00109928: and al, 4; mov eax, 0x3c; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00118d18: and al, 4; mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x0010afbc: and al, 4; mov eax, 0x3f; call dword ptr gs:[0x10]; 
0x001184bc: and al, 4; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x00116b3a: and al, 4; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x0010c1ac: and al, 4; mov eax, 0x53; call dword ptr gs:[0x10]; 
0x00123d78: and al, 4; mov eax, 0x56; call dword ptr gs:[0x10]; 
0x0011927c: and al, 4; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x0011c4fc: and al, 4; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x0010997c: and al, 4; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x001243f3: and al, 4; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00120ff8: and al, 4; mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x00119248: and al, 4; mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x00123908: and al, 4; mov eax, 0x71; call dword ptr gs:[0x10]; 
0x001192a8: and al, 4; mov eax, 0x73; call dword ptr gs:[0x10]; 
0x00123d18: and al, 4; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x001185dc: and al, 4; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x000dd618: and al, 4; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x00036296: and al, 4; mov eax, 0x7f800000; and edx, 0x7fffffff; sub eax, edx; shr eax, 0x1f; ret; 
0x00123ab8: and al, 4; mov eax, 0x82; call dword ptr gs:[0x10]; 
0x000df5b8: and al, 4; mov eax, 0x84; call dword ptr gs:[0x10]; 
0x0010b1a8: and al, 4; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x0012393c: and al, 4; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x00121a78: and al, 4; mov eax, 0x88; call dword ptr gs:[0x10]; 
0x00121a78: and al, 4; mov eax, 0x88; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0010abec: and al, 4; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x000df668: and al, 4; mov eax, 0x93; call dword ptr gs:[0x10]; 
0x0011c6cc: and al, 4; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x0011c6fc: and al, 4; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x0011c728: and al, 4; mov eax, 0x98; call dword ptr gs:[0x10]; 
0x000faf8c: and al, 4; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x000fafbc: and al, 4; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x000fb018: and al, 4; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x000fb068: and al, 4; mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x000fb098: and al, 4; mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x000fb132: and al, 4; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x0012102c: and al, 4; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x0010c268: and al, 4; mov eax, 0xa; call dword ptr gs:[0x10]; 
0x0012396c: and al, 4; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x0012399c: and al, 4; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x00037f9c: and al, 4; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x0010b178: and al, 4; mov eax, 0xc; call dword ptr gs:[0x10]; 
0x000df38c: and al, 4; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x001213f8: and al, 4; mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x00121418: and al, 4; mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x00121418: and al, 4; mov eax, 0xd8; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00123c7c: and al, 4; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x00115ab6: and al, 4; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x0011f4fc: and al, 4; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x0011f48c: and al, 4; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x0011f35c: and al, 4; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x00084a4e: and al, 4; mov eax, 0xf0; xor esi, esi; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008554f: and al, 4; mov eax, 0xf0; xor esi, esi; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0010994c: and al, 4; mov eax, 0xf; call dword ptr gs:[0x10]; 
0x00123a28: and al, 4; mov eax, 0xfe; call dword ptr gs:[0x10]; 
0x000e0201: and al, 4; mov eax, 1; test ecx, ecx; js 0xe0210; ret; 
0x0010c13c: and al, 4; mov eax, 9; call dword ptr gs:[0x10]; 
0x0014df96: and al, 4; mov eax, dword ptr [eax + 0x10]; ret; 
0x00166b76: and al, 4; mov eax, dword ptr [eax + 0x14]; ret; 
0x00164652: and al, 4; mov eax, dword ptr [eax + 0x30]; add eax, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x00080eb6: and al, 4; mov eax, dword ptr [eax + 0x34]; ret; 
0x0002ff7a: and al, 4; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0002ff9a: and al, 4; mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x001719a6: and al, 4; mov eax, dword ptr [eax + 0x4c]; ret; 
0x001719c6: and al, 4; mov eax, dword ptr [eax + 0x50]; ret; 
0x00171a56: and al, 4; mov eax, dword ptr [eax + 0x54]; ret; 
0x00171a46: and al, 4; mov eax, dword ptr [eax + 0x58]; ret; 
0x001719d6: and al, 4; mov eax, dword ptr [eax + 0x5c]; ret; 
0x00091b56: and al, 4; mov eax, dword ptr [eax + 0x64]; ret; 
0x001160d6: and al, 4; mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x0002f7b0: and al, 4; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0017198a: and al, 4; mov eax, dword ptr [eax + edx*4]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x000f7720: and al, 4; mov eax, dword ptr [eax - 0x120]; mov edx, dword ptr [eax]; mov dword ptr [eax], ecx; mov eax, edx; ret; 
0x0007b0c6: and al, 4; mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x0007b076: and al, 4; mov eax, dword ptr [eax]; and eax, 0x804; ret; 
0x00094391: and al, 4; mov eax, dword ptr [eax]; cmp eax, 0x3fc; jbe 0x943a0; ret; 
0x00094571: and al, 4; mov eax, dword ptr [eax]; cmp eax, 0x50; jbe 0x94580; ret; 
0x000943d1: and al, 4; mov eax, dword ptr [eax]; cmp eax, 0xffff; jbe 0x943e0; ret; 
0x0002fdb0: and al, 4; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x28]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x0002fd80: and al, 4; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x30]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x000d9106: and al, 4; mov eax, dword ptr [eax]; ret; 
0x0007be96: and al, 4; mov eax, dword ptr [eax]; shr eax, 4; and eax, 1; ret; 
0x0007beb6: and al, 4; mov eax, dword ptr [eax]; shr eax, 5; and eax, 1; ret; 
0x00166776: and al, 4; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x001248cc: and al, 4; mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012452b: and al, 4; mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00036451: and al, 4; mov eax, dword ptr [esp + 8]; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0003ab56: and al, 4; mov eax, edx; neg eax; cmovs eax, edx; ret; 
0x000362b6: and al, 4; mov ecx, 0xff7fffff; sub ecx, eax; xor eax, ecx; shr eax, 0x1f; ret; 
0x00084406: and al, 4; mov edx, dword ptr [eax + 0x10]; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x00084336: and al, 4; mov edx, dword ptr [eax]; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x00082920: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x104], edx; ret; 
0x00082940: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x108], edx; ret; 
0x00082960: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x10c], edx; ret; 
0x00082980: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x110], edx; ret; 
0x00089570: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x114], edx; ret; 
0x00089550: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x11c], edx; ret; 
0x00094370: and al, 4; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x1cc], edx; ret; 
0x00094350: and al, 4; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x1d0], edx; ret; 
0x00094400: and al, 4; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x208], edx; ret; 
0x000946e0: and al, 4; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x3b68], edx; ret; 
0x00166b56: and al, 4; mov edx, dword ptr [esp + 0xc]; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x001719b6: and al, 4; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x00084646: and al, 4; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x00104466: and al, 4; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x00080b76: and al, 4; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x00171966: and al, 4; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x0002df86: and al, 4; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x000d778b: and al, 4; mov edx, ebp; mov edi, eax; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x00104436: and al, 4; mov word ptr [eax], dx; xor eax, eax; ret; 
0x0002fca0: and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x0002fc70: and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x0002fc40: and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x0002fb80: and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x0002fbe0: and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x0002faf0: and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x0002fbb0: and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x0002fb50: and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x0002fd50: and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x0002fb20: and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x0002fc10: and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x0002fac0: and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x00104406: and al, 4; movzx edx, word ptr [eax]; mov eax, dword ptr [esp + 8]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x0013c92e: and al, 4; push 0x400; push dword ptr [esp + 0x10]; push ebp; call edi; 
0x00035c1f: and al, 4; ret; 
0x00171e3c: and al, 4; sar eax, 5; and edx, dword ptr [ecx + eax*4]; setne al; movzx eax, al; ret; 
0x00082756: and al, 4; setae al; ret; 
0x00087dda: and al, 4; sete al; movzx eax, al; ret; 
0x001589bd: and al, 4; sub esp, 0xc; mov ecx, dword ptr [eax + 0x20]; push eax; call dword ptr [ecx + 0xc]; 
0x0007eef6: and al, 4; test byte ptr [eax], 0x80; jne 0x7ef00; ret; 
0x0007b086: and al, 4; test byte ptr [eax], 4; sete al; movzx eax, al; ret; 
0x0007b0a6: and al, 4; test byte ptr [eax], 8; sete al; movzx eax, al; ret; 
0x0014cf06: and al, 4; test eax, eax; je 0x14cf18; jmp 0x14caf0; lea esi, [esi]; ret; 
0x0008da61: and al, 4; test eax, eax; js 0x8da70; mov dword ptr [edx + 0x3a28], eax; xor eax, eax; ret; 
0x0008bcaa: and al, 4; test edx, edx; jne 0x8bcc0; and dword ptr [eax], 0x7fffffff; xor eax, eax; ret; 
0x000d72e6: and al, 4; test edx, edx; jns 0xd731b; mov eax, 0x193; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000a2561: and al, 4; xor eax, eax; cmp edx, 0x40; ja 0xa2571; mov eax, dword ptr [ecx + edx*4 - 0x9c0]; ret; 
0x000a2591: and al, 4; xor eax, eax; cmp edx, 0x40; ja 0xa25a1; mov eax, dword ptr [ecx + edx*4 - 0x8a0]; ret; 
0x0006fd31: and al, 4; xor eax, eax; cmp edx, 0x85; ja 0x6fd44; mov eax, dword ptr [ecx + edx*4 - 0xbe0]; ret; 
0x00126c26: and al, 4; xor eax, eax; mov ecx, dword ptr [edx + 4]; cmp byte ptr [ecx], 0; je 0x126c38; ret; 
0x0004c6f1: and al, 5; adc dword ptr [eax], eax; add byte ptr [eax], al; add esp, 4; add eax, ebx; jmp eax; 
0x0016384a: and al, 5; add byte ptr [eax], al; add byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x001408aa: and al, 8; add byte ptr [eax], 0; add byte ptr [edi], cl; inc edx; ret 0x8dc3; 
0x0003736d: and al, 8; call 0x372d0; pop ecx; pop edx; ret; 
0x00058a1b: and al, 8; call dword ptr gs:[0x10]; 
0x0010a48b: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x10a4a0; pop ebx; ret; 
0x00115a17: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x115a30; pop ebx; ret; 
0x0011690b: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x116920; pop ebx; ret; 
0x0011695b: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x116970; pop ebx; ret; 
0x0011a7eb: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x11a800; pop ebx; ret; 
0x0011a83b: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x11a850; pop ebx; ret; 
0x0012135b: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x121370; pop ebx; ret; 
0x00058a1b: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x58a30; pop ebx; ret; 
0x00092c57: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x92c70; pop ebx; ret; 
0x0010501b: and al, 8; call dword ptr gs:[0x10]; neg eax; pop ebx; ret; 
0x0016efc2: and al, 8; call eax; 
0x000de7e0: and al, 8; call edx; 
0x000b4d67: and al, 8; cld; pop edi; ret; 
0x000938e2: and al, 8; cmp byte ptr [ebx], 0x2f; jne 0x93930; add ebx, 1; mov eax, 0x116; call dword ptr gs:[0x10]; 
0x00087dd6: and al, 8; cmp dword ptr [esp + 4], eax; sete al; movzx eax, al; ret; 
0x00036455: and al, 8; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00035fab: and al, 8; fld qword ptr [esp + 4]; ret; 
0x00085055: and al, 8; lea ebx, [ebp + eax*4 + 0x28]; mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; call dword ptr gs:[0x10]; 
0x000d749a: and al, 8; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x001719ba: and al, 8; mov dword ptr [eax + 0x4c], edx; ret; 
0x00167042: and al, 8; mov dword ptr [eax + 0xc], edx; ret; 
0x0008464a: and al, 8; mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x0010446a: and al, 8; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x000842fd: and al, 8; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0011f5a3: and al, 8; mov dword ptr [ecx], eax; mov eax, 1; ret; 
0x00086686: and al, 8; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0014f3f4: and al, 8; mov dword ptr [esp + 4], eax; jmp 0x151480; nop; xor eax, eax; ret; 
0x0015d884: and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0015d884: and al, 8; mov dword ptr [esp + 4], eax; jmp edx; lea esi, [esi]; endbr32; ret; 
0x001656fd: and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x00165715: and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x000d75dd: and al, 8; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x00123f2f: and al, 8; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00093461: and al, 8; mov eax, 0x118; call dword ptr gs:[0x10]; 
0x000ddb69: and al, 8; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x00123b2f: and al, 8; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x00109c72: and al, 8; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00109bcf: and al, 8; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x0010c29f: and al, 8; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x0010c1df: and al, 8; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x00107a14: and al, 8; mov eax, 0x13e; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0010afef: and al, 8; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x00084856: and al, 8; mov eax, 0x16; cmp edx, 0x3fff; ja 0x84870; ret; 
0x001118c2: and al, 8; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x000934b1: and al, 8; mov eax, 0x1a3; call dword ptr gs:[0x10]; 
0x000386c0: and al, 8; mov eax, 0x1a5; call dword ptr gs:[0x10]; 
0x001152ff: and al, 8; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x001164f0: and al, 8; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0010c20f: and al, 8; mov eax, 0x55; call dword ptr gs:[0x10]; 
0x0011702f: and al, 8; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x00120fcf: and al, 8; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x00124533: and al, 8; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00123bdf: and al, 8; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x00125a8c: and al, 8; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00125b9b: and al, 8; mov eax, 0x75; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x0017a3b7: and al, 8; mov eax, 0x75; mov ebx, 3; call dword ptr gs:[0x10]; 
0x001238df: and al, 8; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x0011c52f: and al, 8; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x001239cf: and al, 8; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x001239ff: and al, 8; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x000fafef: and al, 8; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x00123c4f: and al, 8; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x00038668: and al, 8; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x000de87f: and al, 8; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x0010bbef: and al, 8; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x0010bbbf: and al, 8; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000df6bf: and al, 8; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000df6ef: and al, 8; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x0010bb8f: and al, 8; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x0011c65f: and al, 8; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x0011c62f: and al, 8; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x0010a95e: and al, 8; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0011f3ff: and al, 8; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x0011f45f: and al, 8; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x0011f32f: and al, 8; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x0008d28f: and al, 8; mov eax, 0xf0; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008d198: and al, 8; mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008c4ab: and al, 8; mov eax, 0xf0; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000842da: and al, 8; mov eax, dword ptr [eax + 8]; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00080b7a: and al, 8; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x0017196a: and al, 8; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x0008bbba: and al, 8; mov eax, dword ptr [eax]; and eax, 0xf000dff; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0008660a: and al, 8; mov eax, dword ptr [eax]; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0008bb7a: and al, 8; mov eax, dword ptr [eax]; shr eax, 0x1f; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0002df8a: and al, 8; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x0012449c: and al, 8; mov eax, dword ptr [esp + 0x38]; mov dword ptr [esp + 0xc], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00036199: and al, 8; mov eax, dword ptr [esp + 0xc]; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0016464e: and al, 8; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x30]; add eax, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x00171986: and al, 8; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + edx*4]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x0013eb37: and al, 8; mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; 
0x0013eb37: and al, 8; mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; pop ebx; ret; 
0x00123ba8: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x00123da8: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x00121818: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x0010b068: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x00123dd8: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x00123e48: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x00123e78: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x00123ea8: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x00037948: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x00109b98: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x27; call dword ptr gs:[0x10]; 
0x000df5e8: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x0010afb8: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x3f; call dword ptr gs:[0x10]; 
0x001184b8: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x0010c1a8: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x53; call dword ptr gs:[0x10]; 
0x00119278: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x0011c4f8: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x00109978: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x001185d8: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x00123938: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x0010abe8: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x0011c6c8: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x0011c6f8: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x000faf88: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x000fafb8: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x00121028: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x00123968: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x00123998: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x00037f98: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000df388: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x00123c78: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x0011f4f8: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x0011f488: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x0011f358: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x00109948: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xf; call dword ptr gs:[0x10]; 
0x0010c138: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 9; call dword ptr gs:[0x10]; 
0x00035f76: and al, 8; mov ecx, 0xffefffff; sub ecx, eax; xor eax, ecx; shr eax, 0x1f; ret; 
0x00037987: and al, 8; mov ecx, 8; call dword ptr gs:[0x10]; 
0x0008a2dd: and al, 8; mov ecx, dword ptr [eax]; mov eax, 0xf0; not ecx; and ecx, 0x80; call dword ptr gs:[0x10]; 
0x00181498: and al, 8; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x00111907: and al, 8; mov ecx, dword ptr [esp + 0x54]; mov eax, 0x135; mov edi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0008d777: and al, 8; mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x00084716: and al, 8; mov ecx, dword ptr [esp + 4]; mov eax, 0x16; cmp edx, 2; jbe 0x84730; ret; 
0x000d7a94: and al, 8; mov ecx, edi; mov ebp, eax; mov esi, dword ptr [esp + 4]; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x00126701: and al, 8; mov edi, dword ptr [esp + 0x34]; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0008bf4a: and al, 8; mov edx, dword ptr [eax]; and edx, 2; je 0x8bf60; xor eax, eax; ret; 
0x0011754f: and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x0011771f: and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x00103b4f: and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x00103c2f: and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x00071a5d: and al, 8; mov edx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x001165ef: and al, 8; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x116609; add esp, 0x1c; ret; 
0x001252b0: and al, 8; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x1252c3; add esp, 0x1c; ret; 
0x0005893f: and al, 8; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x5895f; add esp, 0x1c; ret; 
0x0002ff76: and al, 8; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0002ff96: and al, 8; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x000889cc: and al, 8; mov esi, 8; call dword ptr gs:[0x10]; 
0x00093729: and al, 8; mov esi, dword ptr [esp + 0x4c]; mov eax, 0x117; call dword ptr gs:[0x10]; 
0x00093779: and al, 8; mov esi, dword ptr [esp + 0x4c]; mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x000374f1: and al, 8; mov esp, ecx; jmp edx; 
0x0010440d: and al, 8; mov word ptr [eax], dx; xor eax, eax; ret; 
0x0010fb8a: and al, 8; mov word ptr [edx + 0x3e], ax; xor eax, eax; ret; 
0x0011151a: and al, 8; mov word ptr [edx + 0x42], ax; xor eax, eax; ret; 
0x0012097a: and al, 8; movzx ecx, al; shrd eax, edx, 0xc; xor al, al; or eax, ecx; ret; 
0x00088375: and al, 8; not eax; lea eax, [eax*8 + 6]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0008483a: and al, 8; or dword ptr [eax + 8], 8; mov dword ptr [eax + 0x10], edx; xor eax, eax; ret; 
0x0002d8c8: and al, 8; pop ebx; jmp 0x2def0; pop ebx; ret; 
0x000719a5: and al, 8; pop ebx; jmp eax; 
0x000719a5: and al, 8; pop ebx; jmp eax; mov eax, 0xffffffff; pop ebx; ret; 
0x00166481: and al, 8; pop ebx; mov eax, dword ptr [eax + 0x20]; jmp eax; 
0x00166499: and al, 8; pop ebx; mov eax, dword ptr [eax + 0x24]; jmp eax; 
0x0015afe9: and al, 8; pop ebx; mov eax, dword ptr [eax + 4]; jmp eax; 
0x0015afd1: and al, 8; pop ebx; mov eax, dword ptr [eax]; jmp eax; 
0x00076426: and al, 8; pop ebx; ret; 
0x000b4d3d: and al, 8; pop edi; ret; 
0x000afd54: and al, 8; pop esi; ret; 
0x0012dc42: and al, 8; push 0x2000003; call dword ptr [ebp + 0x14]; 
0x0007d0e0: and al, 8; push dword ptr [esp + 8]; push esi; call dword ptr [edi + 0x40]; 
0x00070dee: and al, 8; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x00072b07: and al, 8; push ebx; call dword ptr [eax + 0x1c]; 
0x00072b79: and al, 8; push ebx; call dword ptr [ebp + 0x1c]; 
0x0015a7dd: and al, 8; push edi; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x18]; 
0x0010551d: and al, 8; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x0007d0e4: and al, 8; push esi; call dword ptr [edi + 0x40]; 
0x0002ffe1: and al, 8; ret; 
0x00058386: and al, 8; rol byte ptr [ecx], 0; add cl, ch; call dword ptr [edi]; 
0x001408a0: and al, 8; shl edx, 4; add edx, 8; cmp dword ptr [esp + 8], 0x80; cmovb eax, edx; ret; 
0x00089654: and al, 8; shr eax, 0x13; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0008e4fc: and al, 8; shr eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00162102: and al, 8; sub esp, 0xc; mov ecx, dword ptr [edx + 4]; push edx; call dword ptr [ecx + 0x10]; 
0x0006f252: and al, 8; sub esp, 4; push edi; push esi; push ebp; call dword ptr [ebx + 0x1c]; 
0x001595f6: and al, 8; sub esp, 8; mov dword ptr [ebx], eax; push dword ptr [ebx + 8]; push esi; call dword ptr [ebx + 0xc]; 
0x0015f110: and al, 8; sub esp, 8; mov eax, dword ptr [ebx + 4]; push 8; push ebx; call dword ptr [eax + 0x18]; 
0x00024856: and al, 8; test dl, dl; movzx eax, dl; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x0011e23a: and al, 8; test eax, eax; je 0x11e244; test edx, edx; jne 0x11e248; ret; 
0x0011e28a: and al, 8; test eax, eax; je 0x11e298; jmp 0x11d830; lea esi, [esi]; ret; 
0x0011ea46: and al, 8; test eax, eax; jne 0x11ea88; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x00082854: and al, 8; test edx, edx; je 0x82868; mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x000854a9: and al, 8; xor cl, 0x81; mov eax, 0xf0; mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x000cc077: and al, 8; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x0010b027: and al, 8; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x000d7077: and al, 8; xor ecx, ecx; mov eax, 0x196; not ebx; lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x0008481d: and al, 8; xor ecx, ecx; or dword ptr [edx + 8], 8; mov dword ptr [edx + 0x10], eax; mov eax, ecx; ret; 
0x000872d6: and al, 8; xor edx, edx; mov eax, 0xaf; mov ebx, 2; mov esi, 8; call dword ptr gs:[0x10]; 
0x000875c5: and al, 8; xor edx, edx; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x00083357: and al, 9; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; ret; 
0x0008330b: and al, 9; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0019f912: and al, 9; ret 0xe889; 
0x0002c2f8: and al, ah; call dword ptr [edx - 1]; 
0x0002c2a6: and al, ah; call dword ptr [esi + 0x31]; 
0x0004e2c3: and al, byte ptr [eax]; add byte ptr [eax - 0x363743], al; jmp dword ptr [ebp + 0xf]; 
0x00035ef3: and al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x00036501: and al, byte ptr [eax]; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0015ad34: and al, byte ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0015ab48: and al, byte ptr [eax]; add byte ptr [ebx - 0x7f], dl; ret; 
0x0004a985: and al, byte ptr [ebx + 0x5e5b14c4]; ret; 
0x0007c368: and al, byte ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x00084ed0: and al, byte ptr [ebx + 0x5e5b24c4]; ret; 
0x000ddc9e: and al, byte ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x001124dd: and al, byte ptr [ebx + 0x5e5b30c4]; pop edi; ret; 
0x000fb7c6: and al, byte ptr [ebx + 0x5e5b3cc4]; pop edi; pop ebp; ret; 
0x001838ec: and al, byte ptr [ebx - 0x167cfb11]; add al, 0x83; ljmp 0xf702:0x89078b04; ret 0xf; 
0x00186a1c: and al, byte ptr [ebx - 0x167cfb12]; add al, 0x83; ljmp 0xf702:0x89068b04; ret 0xf; 
0x000cbde4: and al, byte ptr [ebx - 0x3776df3c]; pop ebx; pop esi; pop edi; ret; 
0x00083087: and al, byte ptr [ebx - 0x7a72f314]; mov byte ptr [esi - 7], bh; call dword ptr [eax - 0x18]; 
0x000d4426: and al, byte ptr [ecx]; ret 0x7c83; 
0x000ed2c8: and al, ch; ret 0xf32e; 
0x00135c77: and bh, al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0x13341], cl; jmp dword ptr [ebp - 0x5f]; 
0x000db541: and bh, al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0x1336e], cl; jmp dword ptr [ebp - 0x5f]; 
0x0011c8a3: and bh, bh; je 0x11c8cb; and byte ptr [ecx], bh; ror byte ptr [edi], 1; dec edi; ret 0x8d50; 
0x0010c425: and bh, bh; xor al, 1; push edx; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x0009b02a: and bh, byte ptr [ebx]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00087b9a: and bh, byte ptr [esi - 6]; dec dword ptr [ebx - 0x7872dbc4]; xchg esp, eax; jg 0x87b9f; call dword ptr [eax - 0x73]; 
0x0007be89: and bh, cl; ret; 
0x000df949: and bl, 0x46; stc; call dword ptr [ebx + 0x50]; 
0x0014d7fd: and bl, 0x5f; stc; call dword ptr [eax - 0x18]; 
0x00096f24: and bl, ch; ret 0x548b; 
0x00035fa1: and byte ptr [0x7fffffff], 9; ror byte ptr [ecx - 0x22f7dbbc], 1; inc esp; and al, 4; ret; 
0x000362e1: and byte ptr [0x7fffffff], 9; ror byte ptr [ecx - 0x26fbdbbc], 1; inc esp; and al, 4; ret; 
0x0008dffe: and byte ptr [eax + 0x14f], bh; call dword ptr gs:[0x10]; 
0x00080fb9: and byte ptr [eax + 0x19], 0; add byte ptr [eax], al; mov dword ptr [eax + 0x19a4], 0; ret; 
0x00069146: and byte ptr [eax + 0x1fff8c7], 0xe9; jmp ecx; 
0x00116652: and byte ptr [eax + 0x36], bh; mov ecx, 0x5409; mov edx, 1; call dword ptr gs:[0x10]; 
0x0009bf71: and byte ptr [eax + 0x450ffff6], ah; ret 0x66c3; 
0x0003a996: and byte ptr [eax + 0x50000004], 0xff; je 0x3a9c3; sbb al, 0xe8; imul edi, eax, -1; jmp dword ptr [esi - 0x70]; 
0x00155f32: and byte ptr [eax + 0x50fff962], 0x6a; push es; call 0x152d90; add esp, 0x1c; ret; 
0x00118d61: and byte ptr [eax + 0x76], bh; call dword ptr gs:[0x10]; 
0x00118e41: and byte ptr [eax + 0x94], bh; call dword ptr gs:[0x10]; 
0x000388d8: and byte ptr [eax + 0xb2], bh; call dword ptr gs:[0x10]; 
0x000379e1: and byte ptr [eax + 0xb3], bh; mov ecx, 8; call dword ptr gs:[0x10]; 
0x00115a80: and byte ptr [eax + 0xdd], bh; call dword ptr gs:[0x10]; 
0x00171ae3: and byte ptr [eax + 4], bh; add esp, 0xc; ret; 
0x0010aee1: and byte ptr [eax + 6], bh; call dword ptr gs:[0x10]; 
0x00038534: and byte ptr [eax + eax], 0; mov eax, ecx; ret; 
0x000384df: and byte ptr [eax + eax], 0; ret; 
0x00140cbb: and byte ptr [eax - 0x58], 0xf9; call dword ptr [eax - 0x73]; 
0x0016ece1: and byte ptr [eax - 0x76fffffd], 0x4c; and al, 4; jmp dword ptr [eax + 0x30]; 
0x000819d1: and byte ptr [eax - 0x76fffffd], 0x54; and al, 0x10; mov eax, dword ptr [eax + 4]; add esp, 0xc; jmp eax; 
0x0012283a: and byte ptr [eax - 0x77000000], 0x44; and al, 0x6c; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x000b6017: and byte ptr [eax - 0x7f001601], 0xe5; add cl, byte ptr [ebp - 0x924af6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x001a0875: and byte ptr [eax - 9], ch; call dword ptr [eax - 1]; 
0x00021deb: and byte ptr [eax], 0; mov eax, dword ptr [eax - 0x134]; add eax, dword ptr gs:[0]; ret; 
0x0002ecbe: and byte ptr [eax], 0x11; add byte ptr [eax], al; ret; 
0x000c8cc1: and byte ptr [eax], 0x30; stc; call dword ptr [eax - 0x18]; 
0x0007759d: and byte ptr [eax], 0x7d; stc; call dword ptr [eax - 0x73]; 
0x000ced68: and byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp + 0x3dd08a], cl; add byte ptr [ebp - 0x15f16f6e], cl; call dword ptr [ecx + 0x52]; 
0x00198c85: and byte ptr [eax], al; add byte ptr [eax], al; add eax, edx; ret; 
0x000dfe57: and byte ptr [eax], al; add byte ptr [eax], al; cmovne eax, edx; ret; 
0x0006e84e: and byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x000dfd88: and byte ptr [eax], al; add byte ptr [eax], al; mov edx, 0x40; cmove eax, edx; ret; 
0x00147305: and byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0002173c: and byte ptr [eax], al; lea eax, [eax - 0x69214]; ret; 
0x0002175c: and byte ptr [eax], al; lea eax, [eax - 0x6921c]; ret; 
0x0002279c: and byte ptr [eax], al; mov eax, dword ptr [eax + 0xfec]; ret; 
0x000227bc: and byte ptr [eax], al; mov eax, dword ptr [eax + 0xff0]; ret; 
0x00021dec: and byte ptr [eax], al; mov eax, dword ptr [eax - 0x134]; add eax, dword ptr gs:[0]; ret; 
0x0002140c: and byte ptr [eax], al; mov edx, dword ptr [eax - 0xb8]; test edx, edx; je 0x21419; ret; 
0x0013d11c: and byte ptr [eax], dh; out dx, al; jmp dword ptr [ebp - 0x75]; 
0x000415cd: and byte ptr [eax], dh; stc; call dword ptr [eax - 0x18]; 
0x000b6791: and byte ptr [ebp + 0x16840ff6], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x677b], cl; jmp dword ptr [ebp - 0x75]; 
0x000828f7: and byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; nop; ret; 
0x00126eb4: and byte ptr [ebp + 0x37], dh; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; mov edx, 0x40; call dword ptr gs:[0x10]; 
0x001959a7: and byte ptr [ebp + 0x46], dh; test dh, 0x40; jne 0x1959f4; add eax, 0xf; ret; 
0x000da3dd: and byte ptr [ebp + 0x50382444], cl; push dword ptr [esp + 0x24]; push dword ptr [esp + 0x30]; call ebx; 
0x00195967: and byte ptr [ebp + 0x66], dh; test dl, 0x40; jne 0x1959d4; add eax, 7; ret; 
0x000f17c9: and byte ptr [ebp + 0xb6], cl; add byte ptr [ebx - 0x7cf7f6f6], cl; rol byte ptr [ebx + eax*4], 0xc2; add al, 0x39; ret; 
0x00161a06: and byte ptr [ebp + 0xe0249c], cl; add byte ptr [eax], al; push ebx; push eax; call dword ptr [edx + 8]; 
0x0003a5d2: and byte ptr [ebp + ebp - 0x77], dh; ret 0xc083; 
0x00148858: and byte ptr [ebp + esi*8 + 0x3c], dh; or dword ptr [ecx + esi*8 - 0x7c], esi; ror byte ptr [edi], 0x94; ret 0xa3c; 
0x001489e0: and byte ptr [ebp + esi*8 + 0x3c], dh; or dword ptr [ecx + esi*8 - 0x7d], esi; in al, dx; or byte ptr [ebp - 0x6d0c579], cl; call dword ptr [eax + 0x56]; 
0x0009cd1f: and byte ptr [ebp - 0x107c00bf], cl; add dword ptr [ecx], eax; ret; 
0x000dd5d5: and byte ptr [ebp - 0x14ccbf80], cl; call dword ptr [eax - 1]; 
0x000dbd05: and byte ptr [ebp - 0x14e62f80], cl; call dword ptr [eax - 1]; 
0x0013dcea: and byte ptr [ebp - 0x1a77f040], al; add al, 0; add byte ptr [ecx], bh; ret; 
0x0009c2d8: and byte ptr [ebp - 0x1a7f0018], 2; lea edx, [edx - 0x9af10]; cmovne eax, edx; ret; 
0x0005595b: and byte ptr [ebp - 0x237af00a], al; add dword ptr [eax], eax; add dh, dh; ret; 
0x000b8acd: and byte ptr [ebp - 0x35f80], cl; call dword ptr [eax - 1]; 
0x00115ab3: and byte ptr [ebp - 0x47fbdbac], cl; fld qword ptr [eax]; add byte ptr [eax], al; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x0007e22e: and byte ptr [ebp - 0x4e7bf040], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x7a72f714], al; stc; call dword ptr [eax - 0x75]; 
0x00162a30: and byte ptr [ebp - 0x64e737f], cl; call dword ptr [eax - 0x73]; 
0x000856ec: and byte ptr [ebp - 0x6817780], cl; call dword ptr [eax - 0x18]; 
0x0006f57f: and byte ptr [ebp - 0x6870780], cl; call dword ptr [eax - 0x18]; 
0x00124149: and byte ptr [ebp - 0x6aa317a], cl; call dword ptr [eax - 0x18]; 
0x00124281: and byte ptr [ebp - 0x6aa4d7b], cl; dec dword ptr [ebp - 0x6aa3f53]; call dword ptr [eax - 0x18]; 
0x000a24d3: and byte ptr [ebp - 0x6bc3d7d], cl; call dword ptr [ecx + 0x50]; 
0x00082862: and byte ptr [ebp - 0x6fffd98c], cl; ret; 
0x00022832: and byte ptr [ebp - 0x720d8b2e], al; nop; test byte ptr [esi - 7], ch; call dword ptr [edx - 0x73]; 
0x000d3b14: and byte ptr [ebp - 0x77], dl; fucomp st(0); ret; 
0x000ad717: and byte ptr [ebp - 0x7af0df81], cl; das; add eax, 0x5e5f0000; pop ebx; ret; 
0x000ac044: and byte ptr [ebp - 0x7af0df81], cl; rol byte ptr [eax + eax], cl; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00146749: and byte ptr [ebp - 0x7cc58740], al; in al, dx; add al, 0x89; ret; 
0x001590de: and byte ptr [ebp - 0x7ce28a40], al; in al, dx; or al, 0x8b; inc ebx; add al, 0x53; call dword ptr [eax + 0x10]; 
0x0015959a: and byte ptr [ebp - 0xc47ef80], cl; jmp dword ptr [ebp - 0x75]; 
0x0012bdf5: and byte ptr [ebp - 0xfe65f80], cl; call dword ptr [eax - 1]; 
0x0012a835: and byte ptr [ebp - 0xffbef80], cl; call dword ptr [eax - 1]; 
0x0007759e: and byte ptr [ebp - 7], bh; call dword ptr [eax - 0x73]; 
0x00130fbb: and byte ptr [ebp - 7], ch; call dword ptr [eax - 0x75]; 
0x00120d1a: and byte ptr [ebp], al; add byte ptr [ebx - 0x71f0fe08], al; ret; 
0x0004882b: and byte ptr [ebx + 0x13c2454], cl; ret; 
0x0013c71f: and byte ptr [ebx + 0x237f01fa], al; add esp, 0x18; pop ebx; ret; 
0x0009a2e6: and byte ptr [ebx + 0x28], 0xfe; mov dword ptr [ebx + 0x18], ebp; mov dword ptr [ebx + 0x20], esi; mov dword ptr [ebx], eax; push eax; call ecx; 
0x001463bb: and byte ptr [ebx + 0x420f1afe], al; ret 0xb60f; 
0x00161375: and byte ptr [ebx + 0x50], dl; call dword ptr [edx + 4]; 
0x00146bdb: and byte ptr [ebx + 0x5e5b04c4], al; pop edi; pop ebp; ret; 
0x000719fe: and byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000516ae: and byte ptr [ebx + 0x5e5b08c4], al; pop edi; pop ebp; ret; 
0x0007fbf1: and byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; jmp eax; 
0x00048aff: and byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x00166b00: and byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x000fa127: and byte ptr [ebx + 0x5e5b18c4], al; pop edi; pop ebp; ret; 
0x0007cdb0: and byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; jmp eax; 
0x000dc0d0: and byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x00078cb6: and byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x0004b434: and byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret; 
0x000940e2: and byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; ret; 
0x001551a1: and byte ptr [ebx + 0x5e5b6cc4], al; pop edi; pop ebp; ret; 
0x000eaaab: and byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00021e75: and byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0011d391: and byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x11d3a3; add esp, 0x1c; ret; 
0x0016185b: and byte ptr [ebx + 0x8b0cec], al; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x0015b2af: and byte ptr [ebx + 0xb7401f9], al; add esp, 4; pop ebx; pop esi; ret; 
0x000535c7: and byte ptr [ebx + 0xf00887d], al; test dword ptr [esi - 0x9fffffc], ebp; ret 0xf50; 
0x001475d2: and byte ptr [ebx + ebx*8 - 0x77], dh; fisubr dword ptr [ecx]; ret 0x6e8b; 
0x00140c47: and byte ptr [ebx - 0x2776df3c], al; pop ebx; pop esi; pop edi; ret 4; 
0x0012cb05: and byte ptr [ebx - 0x2a8cfe12], al; add esp, 4; pop ebx; pop esi; ret; 
0x001a0a37: and byte ptr [ebx - 0x2d7aefb0], cl; je 0x1a0a4c; sub esp, 0xc; push eax; call edx; 
0x0009c6ec: and byte ptr [ebx - 0x398af716], al; mov dword ptr [eax + 0x1c], esi; pop ebx; pop esi; ret; 
0x0007e86a: and byte ptr [ebx - 0x3dd6fb14], al; push edx; push eax; push esi; call dword ptr [edi + 0x38]; 
0x000afd06: and byte ptr [ebx - 0x3f7cef3a], al; adc al, ch; jmp dword ptr [eax]; 
0x0010a262: and byte ptr [ebx - 0x47dbdbb4], cl; add al, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0010a192: and byte ptr [ebx - 0x47dbdbb4], cl; add eax, dword ptr [eax]; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0003bc32: and byte ptr [ebx - 0x47dbdbb4], cl; arpl word ptr [ecx], ax; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0010b0b1: and byte ptr [ebx - 0x47dbdbb4], cl; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001116c2: and byte ptr [ebx - 0x47dbdbb4], cl; test al, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x000fed7b: and byte ptr [ebx - 0x6e363], cl; call dword ptr [edx - 0x77]; 
0x00123225: and byte ptr [ebx - 0x723cf33c], al; mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x75]; 
0x000708c5: and byte ptr [ebx - 0x74c3dbac], cl; adc bh, byte ptr [ecx]; ret 0x420f; 
0x0007ea18: and byte ptr [ebx - 0x74dbdb8c], cl; adc esi, esi; ret 0xf08; 
0x0008b978: and byte ptr [ebx - 0x74dbdbb4], cl; inc ebx; or al, 0x89; ret 0xe281; 
0x0011c1a7: and byte ptr [ebx - 0x74e3dbb4], cl; pop esp; and al, 0x18; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x001212e6: and byte ptr [ebx - 0x74e7dba4], cl; jl 0x121312; sub byte ptr [eax + 0x78], bh; mov dword ptr [ecx], ebx; int 0x80; 
0x0010b0d8: and byte ptr [ebx - 0x76dbdbb4], cl; ret 0x8b8; 
0x00055048: and byte ptr [ebx - 0x7abfdbac], cl; ror byte ptr [edi], 0x8f; ret; 
0x0013df0f: and byte ptr [ebx - 0x7aefdbac], cl; ror byte ptr [edi], 0x88; mov esp, 0x39000002; ret; 
0x0011d999: and byte ptr [ebx - 0x7afefbb1], al; sar byte ptr [eax + 0x1e], 0x8b; inc esi; add al, 0x89; ret 0xe083; 
0x0003b0c7: and byte ptr [ebx - 0xf76fb3c], al; pop ebx; pop esi; ret; 
0x0016d166: and byte ptr [ebx], 0x66; stc; call dword ptr [eax - 0x18]; 
0x0010896c: and byte ptr [ebx], al; add byte ptr [eax], al; add esp, 0x10; add esp, 0xc; ret; 
0x0012c54e: and byte ptr [ebx], ch; inc ecx; sbb al, 0x39; sal byte ptr [edx + 0xa], 1; mov eax, 1; ret; 
0x00085489: and byte ptr [ecx + 0x247c8bc1], cl; add al, 0x89; ret 0xe183; 
0x0011273a: and byte ptr [ecx + 0x4289247a], cl; sub byte ptr [esi + 0x5f], bl; ret; 
0x000518ac: and byte ptr [ecx + 0x434c4], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0007589c: and byte ptr [ecx + 0x488b0448], cl; or byte ptr [ecx + 0x8508910], cl; mov dword ptr [eax + 0x20], ecx; ret; 
0x00116688: and byte ptr [ecx + 0x5409], bh; mov edx, 1; mov edi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00165efd: and byte ptr [ecx + 0x56], dl; call dword ptr [eax]; 
0x001155c6: and byte ptr [ecx + 0x5e5b2850], cl; pop edi; pop ebp; ret; 
0x000cbde7: and byte ptr [ecx + 0x5f5e5bc8], cl; ret; 
0x00140c4a: and byte ptr [ecx + 0x5f5e5bd8], cl; ret 4; 
0x000d6f5d: and byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x00071c38: and byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x000581bc: and byte ptr [ecx + 0x5f5e5bf8], cl; ret; 
0x00161fba: and byte ptr [ecx + 0x6a], dl; push es; push eax; call dword ptr [edx + 0x14]; 
0x0010af08: and byte ptr [ecx + 0x6b8c2], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00118d88: and byte ptr [ecx + 0x76b8c2], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e6747: and byte ptr [ecx + 0x8acc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00118e68: and byte ptr [ecx + 0x94b8c2], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00079d13: and byte ptr [ecx + 0xa486], cl; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x000791b3: and byte ptr [ecx + 0xa496], cl; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x00037a08: and byte ptr [ecx + 8], bh; mov edx, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x00084bdc: and byte ptr [ecx + ecx - 0x7d], dh; les ecx, ptr [eax]; pop ebx; ret; 
0x00169f47: and byte ptr [ecx - 0x17d7dbac], cl; jmp dword ptr [ecx - 0x15]; 
0x00143884: and byte ptr [ecx - 0x42f43], cl; jmp dword ptr [ebp - 0x75]; 
0x00144e72: and byte ptr [ecx - 0x4477b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000dc61f: and byte ptr [ecx - 0x72611439], cl; je 0xdc64d; add byte ptr [ebx - 0x1337a], cl; jmp dword ptr [ebp - 0x75]; 
0x000949b8: and byte ptr [ecx - 0x72d7db8c], cl; mov cs, word ptr [ecx]; inc ecx; stc; jmp dword ptr [ebp - 0x5f]; 
0x000418a0: and byte ptr [ecx - 0x76172c10], cl; ret; 
0x0002b06e: and byte ptr [ecx - 0x76ff7422], cl; ret 0xe083; 
0x000265e9: and byte ptr [ecx - 0x9d3dbbc], cl; ret 0x7501; 
0x0002a618: and byte ptr [ecx - 7], ch; call dword ptr [eax + 0x68]; 
0x0002a488: and byte ptr [ecx - 7], ch; call dword ptr [eax - 0x73]; 
0x00094d3a: and byte ptr [ecx], 0x41; stc; call dword ptr [eax - 0x18]; 
0x001637ea: and byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x000de342: and byte ptr [ecx], al; lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x000b3fe5: and byte ptr [ecx], al; ret 0x167c; 
0x000fb8a9: and byte ptr [ecx], al; rol dword ptr [ebp - 0x76f38b01], 1; ret 0x4089; 
0x000c9c0d: and byte ptr [ecx], bh; dec edi; and byte ptr [edi], cl; test dword ptr [ecx + 0x5f000000], ecx; pop esi; ret; 
0x0015d3fc: and byte ptr [ecx], bh; pop eax; adc al, 0xf; xchg edi, eax; ret 0x4bd; 
0x0002e59f: and byte ptr [ecx], bh; ret 0x4d0f; 
0x00048df6: and byte ptr [ecx], bh; ret; 
0x0011c8a7: and byte ptr [ecx], bh; ror byte ptr [edi], 1; dec edi; ret 0x8d50; 
0x0011ce77: and byte ptr [ecx], bh; sar bh, 1; je 0x11cea1; and byte ptr [edi], cl; dec edi; ret 0x8d50; 
0x0012c1dc: and byte ptr [ecx], ch; fdivr dword ptr [ecx]; ret 0x8f0f; 
0x0007d20a: and byte ptr [ecx], ch; rol byte ptr [ebx + 0x525004ec], 1; push esi; call ecx; 
0x0006974c: and byte ptr [ecx], dh; rol byte ptr [eax - 0x6bf0a705], cl; ret 0xff52; 
0x0002ecbf: and byte ptr [ecx], dl; add byte ptr [eax], al; ret; 
0x00158a4f: and byte ptr [edi + 0x50], dl; call dword ptr [ecx + 8]; 
0x0015dda7: and byte ptr [edi + 0x50], dl; call dword ptr [edx + 8]; 
0x000ac3e7: and byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000a2737: and byte ptr [edi + 0x5e], bl; ret; 
0x00073e0e: and byte ptr [edi + 0x6a], dl; call dword ptr [edi + 0x56]; 
0x00182a51: and byte ptr [edi - 0x18], bl; mov eax, dword ptr [0x81fffef3]; ret; 
0x00181f51: and byte ptr [edi - 0x18], bl; mov eax, dword ptr [0x81fffefe]; ret; 
0x00180d51: and byte ptr [edi - 0x18], bl; mov eax, dword ptr [0x81ffff10]; ret; 
0x0017e151: and byte ptr [edi - 0x18], bl; mov eax, dword ptr [0x81ffff3c]; ret; 
0x00159e30: and byte ptr [edi - 0x75], dl; inc esp; and al, 0x2c; call eax; 
0x00129461: and byte ptr [edi], al; add byte ptr [eax - 0x73], dl; xor dword ptr [eax], 0xfffffff0; call dword ptr [eax - 0x18]; 
0x000ffd95: and byte ptr [edi], al; add byte ptr [ecx + 0x12a268c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x0011ce7d: and byte ptr [edi], cl; dec edi; ret 0x8d50; 
0x000b3d12: and byte ptr [edi], cl; mov esp, 0x76c229c0; push ss; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x0009acf1: and byte ptr [edi], cl; nop; ret 0xc801; 
0x00195c7d: and byte ptr [edi], cl; test dword ptr [eax + eax + 0x40a80000], edi; jne 0x195d50; lea eax, [edi + 7]; pop edi; ret; 
0x00197329: and byte ptr [edi], cl; test dword ptr [eax - 0x58000000], esp; inc eax; jne 0x1973e0; lea eax, [edx + 7]; ret; 
0x00196141: and byte ptr [edi], cl; test dword ptr [eax - 0x73000000], ecx; inc edi; hlt; pop edi; ret; 
0x00196f01: and byte ptr [edi], cl; test dword ptr [eax - 0x7d000000], ebp; ret 0xf04; 
0x00196194: and byte ptr [edi], cl; test dword ptr [ebp - 0x73000000], edx; inc edi; cld; pop edi; ret; 
0x00196f64: and byte ptr [edi], cl; test dword ptr [ebp - 0x7d000000], esp; ret 0xf0c; 
0x000c9c10: and byte ptr [edi], cl; test dword ptr [ecx + 0x5f000000], ecx; pop esi; ret; 
0x000ad71a: and byte ptr [edi], cl; test dword ptr [edi], ebp; add eax, 0x5e5f0000; pop ebx; ret; 
0x0019775b: and byte ptr [edi], cl; test dword ptr [edx - 0x9fffffd], esi; ret 0xf40; 
0x0019787b: and byte ptr [edi], cl; test dword ptr [esi - 0xa000000], ebp; ret 0xf40; 
0x00195b3c: and byte ptr [edi], cl; test ebp, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x000ac047: and byte ptr [edi], cl; test edx, edx; add al, 0; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0014882a: and byte ptr [edi], cl; xchg esp, eax; ret 0x93c; 
0x0015be0b: and byte ptr [edi], cl; xchg esp, eax; ret; 
0x000f82c8: and byte ptr [edx + 0x1c], 0xf9; mov dword ptr [eax], 0; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x0011fc54: and byte ptr [edx + 0x408bfff6], al; jl 0x11fbe5; push esi; add al, 0x89; ret 0xe8c1; 
0x001624fb: and byte ptr [edx + 0x50], dl; call edi; 
0x00082649: and byte ptr [edx + 0x51], dl; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0008f9a7: and byte ptr [edx + eax*4], 0xf9; call dword ptr [eax - 0x18]; 
0x000263c4: and byte ptr [edx - 7], ch; call dword ptr [eax - 0x73]; 
0x00030e76: and byte ptr [edx], 0x2f; stc; call dword ptr [eax - 0x18]; 
0x00038bff: and byte ptr [edx], al; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x00088962: and byte ptr [edx], bl; add byte ptr [eax], al; jne 0x88970; xor eax, eax; pop ebx; ret; 
0x0015867c: and byte ptr [edx], bl; add byte ptr [eax], al; mov eax, dword ptr [esp + 0x18]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x000c4ab4: and byte ptr [edx], ch; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x38]; push edi; call esi; 
0x000c492a: and byte ptr [edx], ch; push ebx; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x38]; push edi; call esi; 
0x0002ed3c: and byte ptr [esi + 0x17], dh; mov edx, dword ptr [ebx + eax*4 + 0x24]; pop ebx; mov eax, edx; ret; 
0x000c8d0b: and byte ptr [esi + 0x44], 0xf9; call dword ptr [eax - 0x18]; 
0x00158901: and byte ptr [esi + 0x50], dl; call dword ptr [edx + 4]; 
0x0012c950: and byte ptr [esi + 0x53], dl; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0019233c: and byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3e73; 
0x000b3f72: and byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x316575c0], 0xc0; ret; 
0x00196bf2: and byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x71850fc0], 2; add byte ptr [eax], al; xor eax, eax; ret; 
0x000ffcff: and byte ptr [esi + ebp - 0x7d], dh; ret; 
0x0009a54f: and byte ptr [esi + ecx - 0x7d], dh; in al, dx; or byte ptr [ecx - 1], dl; jae 0x9a57d; call eax; 
0x0007a617: and byte ptr [esi + edi*2], 0xf9; call dword ptr [eax - 0x73]; 
0x000b60f7: and byte ptr [esi - 0x18], dl; push edx; mov eax, dword ptr [0xc483fff6]; or al, 0x89; ret; 
0x0010b2e3: and byte ptr [esi - 0x75], dl; jl 0x10b30c; xor byte ptr [ebp - 0x6b59779], cl; call dword ptr [eax - 0x18]; 
0x0002d8cc: and byte ptr [esi], al; add byte ptr [eax], al; pop ebx; ret; 
0x000fc1cf: and byte ptr [esp + esi*4 - 0x7b], dh; ret; 
0x001978c6: and ch, 0; add byte ptr [eax], al; lea eax, [eax + 0xb]; pop edi; ret; 
0x000c9e92: and ch, 0xf; je 0xc9eb0; add eax, 2; ret; 
0x0004143a: and ch, 0xfe; dec dword ptr [ebx - 0x72d3db84]; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x0006272a: and ch, 0xff; dec dword ptr [ebx - 0x4f37b]; jmp dword ptr [ebp - 0x75]; 
0x000b601c: and ch, 2; lea edx, [edx - 0x924b0]; cmovne eax, edx; ret; 
0x0009bf6c: and ch, 2; lea edx, [edx - 0x95fe0]; cmovne eax, edx; ret; 
0x0009c2dc: and ch, 2; lea edx, [edx - 0x9af10]; cmovne eax, edx; ret; 
0x0009c25c: and ch, 2; lea edx, [edx - 0x9af40]; cmovne eax, edx; ret; 
0x0009c29c: and ch, 2; lea edx, [edx - 0x9d420]; cmovne eax, edx; ret; 
0x0009c21c: and ch, 2; lea edx, [edx - 0x9d450]; cmovne eax, edx; ret; 
0x0009b46c: and ch, 2; lea edx, [edx - 0x9ee40]; cmovne eax, edx; ret; 
0x0009afec: and ch, 2; lea edx, [edx - 0xa02b0]; cmovne eax, edx; ret; 
0x00030e77: and ch, byte ptr [edi]; stc; call dword ptr [eax - 0x18]; 
0x000fd569: and ch, ch; call dword ptr [eax - 0x73]; 
0x0009c079: and ch, dh; dec dword ptr [ebx + 0x18499]; add dh, dh; ret; 
0x000c9e7b: and cl, 0xf; je 0xc9ea0; ret; 
0x0006d68a: and cl, 0xff; jmp dword ptr [esi - 0x70]; 
0x00073c45: and cl, byte ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x000ff7f8: and cl, byte ptr [ebx - 0x143976e9]; mov ebx, 0x9e88838d; stc; call dword ptr [eax - 0x73]; 
0x00118d5d: and cl, byte ptr [ebx - 0x47dfdba4]; jbe 0x118d65; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000379dd: and cl, byte ptr [ebx - 0x47dfdba4]; mov bl, 0; add byte ptr [eax], al; mov ecx, 8; call dword ptr gs:[0x10]; 
0x0010b0ad: and cl, byte ptr [ebx - 0x74dfdba4]; dec esp; and al, 0x24; mov eax, 8; call dword ptr gs:[0x10]; 
0x0007c2c5: and dh, al; add al, 7; add byte ptr [ecx - 0x14ec7407], cl; ret; 
0x0009531d: and dh, bh; fisttp dword ptr [ecx + 0x21082474]; ret; 
0x0014d90a: and dh, ch; dec dword ptr [ebp - 0x652fb7f]; call dword ptr [eax - 0x73]; 
0x000865ca: and dl, ah; or al, byte ptr [eax]; nop; endbr32; xor eax, eax; ret; 
0x00080f0b: and dword ptr [eax + 0x1000019], 0xffffff83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0013cca4: and dword ptr [eax + 0x2c], 0xfffffff1; call dword ptr [eax - 0x73]; 
0x0015e599: and dword ptr [eax + 0x48], 0xfffffff3; call dword ptr [eax - 0x73]; 
0x0008ef14: and dword ptr [eax + 0x4a], 0xffffffe6; call dword ptr [eax - 0x73]; 
0x0016ea9c: and dword ptr [eax + 0x51000003], 0x52; call dword ptr [eax + 0x24]; 
0x0016eb3c: and dword ptr [eax + 0x51000003], 0x52; call dword ptr [eax + 0x28]; 
0x0011f9af: and dword ptr [eax + 0x52], 0xfffffff9; call dword ptr [edx + 0x52]; 
0x00087642: and dword ptr [eax + 0x9d], edi; call dword ptr gs:[0x10]; 
0x001a08d3: and dword ptr [eax + 0xc], 0; add byte ptr [ecx - 0x2d7a57c4], cl; je 0x1a08e9; mov dword ptr [esp + 8], eax; call edx; 
0x00084764: and dword ptr [eax + 8], 0xfffffffb; xor eax, eax; ret; 
0x00084615: and dword ptr [eax + 8], 0xfffffffe; xor eax, eax; ret; 
0x0007a1c2: and dword ptr [eax - 0x19], 0xffffffff; call dword ptr [eax - 0x73]; 
0x000378b5: and dword ptr [eax - 0x29], 0xffffffe0; dec dword ptr [edi]; inc esp; ret 0x24e9; 
0x0009521b: and dword ptr [eax - 0x3b7c0008], esi; or al, 0x8d; add dword ptr [eax - 0x5d], -0x1a; call dword ptr [eax + 0x56]; 
0x0009527d: and dword ptr [eax - 0x5b], 0xffffffe6; call dword ptr [eax + 0x56]; 
0x00095235: and dword ptr [eax - 0x5d], 0xffffffe6; call dword ptr [eax + 0x56]; 
0x00120d68: and dword ptr [eax - 0x5e], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x00120522: and dword ptr [eax - 0x5f], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x00140c7b: and dword ptr [eax - 0x73], edx; xchg dword ptr [edi], esi; pop ebp; stc; call dword ptr [eax - 0x18]; 
0x000895b7: and dword ptr [eax - 0xb], 0xffffffe5; call dword ptr [eax + 0x56]; 
0x0011f870: and dword ptr [eax - 7], edx; call dword ptr [eax + 0x57]; 
0x0008bcb0: and dword ptr [eax], 0x7fffffff; xor eax, eax; ret; 
0x0008bd00: and dword ptr [eax], 0xbfffffff; xor eax, eax; ret; 
0x0011e75c: and dword ptr [eax], 0xffffffba; stc; call dword ptr [eax - 0x18]; 
0x0007be88: and dword ptr [eax], 0xffffffcf; ret; 
0x00083b2e: and dword ptr [eax], eax; add byte ptr [eax], al; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0010a481: and dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0018f80e: and dword ptr [eax], eax; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0005ccc7: and dword ptr [eax], eax; add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xd801; 
0x000a2647: and dword ptr [ebp + 0x748d3a34], ecx; add byte ptr es:[eax - 0x7cfe49f1], dl; rol dword ptr [ecx], 0x83; ret 0xf01; 
0x000ff4cb: and dword ptr [ebp + 3], eax; add byte ptr [ebx - 0x6e373], cl; jmp dword ptr [ebp - 0x5f]; 
0x000894d1: and dword ptr [ebp + 4], esi; add dword ptr [edx + 4], 1; add esp, 0xc; ret; 
0x001888d4: and dword ptr [ebp - 0x3c7e0002], edx; dec eax; jmp 0x1c1b88e3; mov edi, dword ptr [esi]; jmp ebx; 
0x000832cc: and dword ptr [ebp - 1], 0x1015; add byte ptr [ebx + 0x5e], bl; ret; 
0x0013b941: and dword ptr [ebp - 7], esp; call dword ptr [esi + 0x6a]; 
0x0011e9d4: and dword ptr [ebx + 0x56], 0xfffffff9; call dword ptr [eax + 0x6a]; 
0x00170b26: and dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x00116ea9: and dword ptr [ebx + 0x5e5b14c4], eax; ret; 
0x0013c24e: and dword ptr [ebx + 0x5e5b1cc4], eax; pop edi; pop ebp; ret; 
0x00078d95: and dword ptr [ebx + 0x5e5b2cc4], eax; pop edi; pop ebp; ret; 
0x00170c76: and dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x00150dfb: and dword ptr [ebx + esi*8], 0x10c483ff; mov eax, 1; pop ebx; pop esi; pop edi; ret; 
0x0005ac0a: and dword ptr [ebx - 0x5af43], eax; call dword ptr [eax]; 
0x0012c1c5: and dword ptr [ebx - 0x74fbdbbc], ecx; je 0x12c1f1; or byte ptr [ebp + 0x39013044], cl; ret; 
0x000eb3b0: and dword ptr [ebx - 0x7c72f714], eax; inc esp; dec eax; stc; call dword ptr [eax + 0x55]; 
0x000763af: and dword ptr [ebx], 0xffffffef; add esp, 4; pop ebx; pop esi; ret; 
0x000858b9: and dword ptr [ebx], 0xfffffffe; mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000ce93d: and dword ptr [ecx + ebx*4], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x00135553: and dword ptr [ecx + ecx*2], 0; add byte ptr [eax - 0x73], dl; adc dword ptr [eax], 0x63; bnd call dword ptr [eax - 0x73]; 
0x00083356: and dword ptr [ecx + ecx], 0; add byte ptr [eax], al; pop ebx; ret; 
0x00094d3b: and dword ptr [ecx - 7], eax; call dword ptr [eax - 0x18]; 
0x0011f86f: and dword ptr [ecx], 0x50; stc; call dword ptr [eax + 0x57]; 
0x0013b940: and dword ptr [ecx], 0x65; stc; call dword ptr [esi + 0x6a]; 
0x0010cc09: and dword ptr [edi + 0x4a], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x001693fb: and dword ptr [edi + 0x65], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x001693fb: and dword ptr [edi + 0x65], 0xfffffff9; call dword ptr [eax - 0x18]; mov edx, 0xe8ffec65; in eax, 0xa5; cld; jmp dword ptr [esi - 0x70]; 
0x0011e7dc: and dword ptr [edi + edi*8], 0xffffffff; inc dword ptr [ebx + 0x8b10c4]; test eax, eax; je 0x11e830; call eax; 
0x0011e91e: and dword ptr [edi + edi*8], 0xffffffff; inc dword ptr [ebx + 0x8b10c4]; test eax, eax; je 0x11e9c8; call eax; 
0x00119b6b: and dword ptr [edi], eax; add byte ptr [eax], al; add esp, 0x10; add esp, 0xc; ret; 
0x000eb86e: and dword ptr [edx + 0x48], 0xfffffff9; call dword ptr [eax + 0x55]; 
0x00084797: and dword ptr [edx + 0xc], 0xfffffffe; add esp, 8; pop ebx; ret; 
0x00084790: and dword ptr [edx + 8], 0x7fffffff; and dword ptr [edx + 0xc], 0xfffffffe; add esp, 8; pop ebx; ret; 
0x00171ea0: and dword ptr [edx + eax*4], ebx; xor eax, eax; pop ebx; ret; 
0x000381d8: and dword ptr [edx + ebx*4], eax; xor eax, eax; pop ebx; ret; 
0x0007a79b: and dword ptr [edx - 5], edx; dec dword ptr [ebp - 0x681f77d]; call dword ptr [eax - 0x73]; 
0x0019548b: and dword ptr [edx], eax; add byte ptr [eax], al; pop ebx; ret; 
0x0011f72b: and dword ptr [esi + 0x4d], 0xfffffff9; call dword ptr [eax + 0x57]; 
0x00168fec: and dword ptr [esi + 0x5f], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00127709: and dword ptr [esi + eax*2], 0xb730000; mov edx, dword ptr [ecx + 0x4628]; add word ptr [edx + eax*2], 1; ret; 
0x0013c45b: and dword ptr [esi - 0xc], ebp; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x0007635a: and dword ptr [esi], 0xffffffef; pop ebx; pop esi; pop edi; ret; 
0x000838e9: and dword ptr [esp + ecx - 0x7d], esi; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0002fca6: and eax, 0x1000; ret; 
0x00057a5b: and eax, 0x100; or eax, 7; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x0002fc76: and eax, 0x100; ret; 
0x001160db: and eax, 0x100f; ret; 
0x00115bda: and eax, 0x10244c8b; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x00115c5a: and eax, 0x10244c8b; or dh, 0x80; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x00087d8a: and eax, 0x10; jne 0x87d98; add esp, 0xc; ret; 
0x00115cda: and eax, 0x14244c8b; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00115d5a: and eax, 0x14244c8b; mov ebx, dword ptr [esp + 0x10]; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x001847b1: and eax, 0x1c030004; mov edi, dword ptr [esi]; jmp ebx; 
0x00196380: and eax, 0x1f; jne 0x196100; xor eax, eax; pop edi; ret; 
0x001963b0: and eax, 0x1ff; jne 0x196100; xor eax, eax; pop edi; ret; 
0x001963e0: and eax, 0x1fff; jne 0x196100; xor eax, eax; pop edi; ret; 
0x0002fc46: and eax, 0x2000; ret; 
0x0002fb86: and eax, 0x200; ret; 
0x00087664: and eax, 0x20; mov ebx, eax; jne 0x87228; lea ecx, [ebp + 0x22c]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x0007c4f2: and eax, 0x2c2474ff; push edi; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x0008e0da: and eax, 0x38; cmp eax, 8; je 0x8e0e3; ret; 
0x00047110: and eax, 0x39000004; ret; 
0x0002c6e3: and eax, 0x3ba; add byte ptr [ecx], ch; ret 0xf883; 
0x00196390: and eax, 0x3f; jne 0x196100; xor eax, eax; pop edi; ret; 
0x001963c0: and eax, 0x3ff; jne 0x196100; xor eax, eax; pop edi; ret; 
0x0003b69a: and eax, 0x3ff; xor eax, edx; ret; 
0x001963f0: and eax, 0x3fff; jne 0x196100; xor eax, eax; pop edi; ret; 
0x0002fbe6: and eax, 0x4000; ret; 
0x0002faf6: and eax, 0x400; ret; 
0x0011f8c0: and eax, 0x50; stc; call dword ptr [eax + 0x57]; 
0x00083ec7: and eax, 0x5b000015; mov eax, 0xc; pop esi; pop edi; ret; 
0x001518f2: and eax, 0x5b08c483; ret; 
0x000cbd45: and eax, 0x5b20c483; pop esi; pop edi; ret; 
0x00116d03: and eax, 0x5b54c483; pop esi; ret; 
0x00161ced: and eax, 0x63; stc; call dword ptr [ecx + 0x6a]; 
0x0015eda6: and eax, 0x63; stc; call dword ptr [edx + 0x6a]; 
0x0007b234: and eax, 0x7880e175; add dword ptr [ebx + 0x75], esi; fild dword ptr [eax - 0x76da2b83]; ret 0x5374; 
0x001963a0: and eax, 0x7f; jne 0x196100; xor eax, eax; pop edi; ret; 
0x0002fdc8: and eax, 0x7f; ret; 
0x001963d0: and eax, 0x7ff; jne 0x196100; xor eax, eax; pop edi; ret; 
0x00196400: and eax, 0x7fff; jne 0x196100; xor eax, eax; pop edi; ret; 
0x00035c12: and eax, 0x7fff; or eax, edx; mov dword ptr [esp + 0xc], eax; fld xword ptr [esp + 4]; ret; 
0x000362e2: and eax, 0x7fffffff; or eax, edx; mov dword ptr [esp + 4], eax; fld dword ptr [esp + 4]; ret; 
0x00035fa2: and eax, 0x7fffffff; or eax, edx; mov dword ptr [esp + 8], eax; fld qword ptr [esp + 4]; ret; 
0x00036ed8: and eax, 0x80000000; ret; 
0x0002fbb6: and eax, 0x8000; ret; 
0x0002fb56: and eax, 0x800; ret; 
0x0007b07a: and eax, 0x804; ret; 
0x000daed0: and eax, 0x8100096f; ret; 
0x0007dddf: and eax, 0x83000001; in al, dx; or al, 0x53; call dword ptr [esi + 0x44]; 
0x0011f6b7: and eax, 0x83000005; in al, dx; or byte ptr [ebp - 0x6b1e17d], cl; call dword ptr [eax + 0x57]; 
0x00039557: and eax, 0x830007b7; les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x0007caa7: and eax, 0x830008d9; les ebx, ptr [eax]; pop ebx; ret; 
0x000c1ae5: and eax, 0x83240401; ret; 
0x0013c757: and eax, 0x83fff46b; les edx, ptr [eax]; mov eax, dword ptr [esp + 0xc]; add esp, 0x18; pop ebx; ret; 
0x00056e0f: and eax, 0x950f0100; ret 0x8366; 
0x0019d8d6: and eax, 0xac898000; and al, 0x94; add byte ptr [eax], al; add byte ptr [ecx], cl; ret 0xbc89; 
0x000de4e9: and eax, 0xc; pop ebx; pop esi; ret; 
0x0008bc86: and eax, 0xcfffffff; or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x0017a8e9: and eax, 0xd8f7fffc; sbb eax, eax; add esp, 0x1c; ret; 
0x0016d6d1: and eax, 0xe8ffffff; push ss; arpl sp, di; jmp dword ptr [esi - 0x70]; 
0x000aa827: and eax, 0xe9fffff5; pushal; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000a6327: and eax, 0xe9fffff6; pushal; idiv edi; jmp dword ptr [esi + 0xf]; 
0x0006b673: and eax, 0xf000000; mov dh, 0x57; or al, 0xf6; ret 0xf08; 
0x0008bbbe: and eax, 0xf000dff; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0019629a: and eax, 0xf; jne 0x196100; xor eax, eax; pop edi; ret; 
0x001962cb: and eax, 0xff; jne 0x196100; xor eax, eax; pop edi; ret; 
0x00196302: and eax, 0xfff; jne 0x196100; xor eax, eax; pop edi; ret; 
0x0019633b: and eax, 0xffff; jne 0x196100; xor eax, eax; pop edi; ret; 
0x00133a68: and eax, 0xffff; ror ax, 8; ret; 
0x00116140: and eax, 0xffffeff0; or eax, edx; mov dword ptr [ecx + 8], eax; xor eax, eax; pop ebx; ret; 
0x0012095e: and eax, 0xfffff000; or eax, edx; ret; 
0x00133ad8: and eax, 0xffffff; or eax, edx; bswap eax; mov dword ptr [ecx], eax; mov eax, ecx; ret 4; 
0x00133ab0: and eax, 0xffffff; ret; 
0x0011961d: and eax, 0xfffffff0; add eax, 0x26; mov edx, dword ptr [edx - 0x134]; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; ret; 
0x000943aa: and eax, 0xfffffff0; sub eax, 1; shr eax, 4; add eax, 1; mov dword ptr [edx + 0x1fc], eax; ret; 
0x0013fafb: and eax, 0xfffffff8; add eax, 0xc; ret; 
0x00034eae: and eax, 0xfffffff; xor eax, edx; movzx edx, byte ptr [ecx]; test dl, dl; jne 0x34e99; ret; 
0x0015a378: and eax, 0xfffffffc; lea eax, [eax + edx + 0x28]; push eax; push edi; call dword ptr [ecx + 0x18]; 
0x0015a4d0: and eax, 0xfffffffc; push eax; push edi; call dword ptr [edx + 0x18]; 
0x00085a10: and eax, 0xfffffffc; xor esi, esi; mov edx, eax; mov eax, 0xf0; or edx, 2; call dword ptr gs:[0x10]; 
0x00085760: and eax, 0xfffffffc; xor esi, esi; mov edx, eax; mov eax, edi; or edx, 2; call dword ptr gs:[0x10]; 
0x0008529c: and eax, 0xfffffffc; xor esi, esi; or eax, 2; mov edx, eax; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00084690: and eax, 0xfffffffd; mov dword ptr [ecx + 8], eax; xor eax, eax; ret; 
0x0008665a: and eax, 0xfffffffd; or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x00086681: and eax, 0xfffffffe; or eax, dword ptr [esp + 8]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000792b3: and eax, 1; add esp, 0x14; pop ebx; pop esi; ret; 
0x00099b04: and eax, 1; cmovne eax, ecx; pop ebx; ret; 
0x001984c9: and eax, 1; je 0x198464; pop esi; lea eax, [edi - 0x10]; pop edi; ret; 
0x0019858d: and eax, 1; je 0x198570; lea eax, [edi - 0x10]; pop edi; ret; 
0x00196350: and eax, 1; jne 0x196100; xor eax, eax; pop edi; ret; 
0x000829bf: and eax, 1; mov dword ptr [edx + 0x19f0], eax; ret; 
0x000842df: and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0012819b: and eax, 1; pop ebx; pop esi; pop edi; ret; 
0x00131282: and eax, 1; pop ebx; ret; 
0x000e9909: and eax, 1; pop edi; pop ebp; neg eax; ret; 
0x0002fd56: and eax, 1; ret; 
0x0002fb26: and eax, 2; ret; 
0x0004b185: and eax, 2; sub eax, 1; ret; 
0x00196360: and eax, 3; jne 0x196100; xor eax, eax; pop edi; ret; 
0x0008bb61: and eax, 3; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x001220e3: and eax, 3; ret; 
0x0002fc16: and eax, 4; ret; 
0x00196370: and eax, 7; jne 0x196100; xor eax, eax; pop edi; ret; 
0x0002fac6: and eax, 8; ret; 
0x0015aa4a: and eax, dword ptr [eax]; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edx], ch; push esi; call dword ptr [eax + 0x14]; 
0x0016f91a: and eax, dword ptr [eax]; add byte ptr [ebp + 0x432b0443], cl; add al, 0x83; ret; 
0x0015aab4: and eax, dword ptr [eax]; add byte ptr [ebx + 0x239880], cl; add byte ptr [ebx + 0x6a08ec], al; push ebx; call dword ptr [eax + 0x14]; 
0x0015aaba: and eax, dword ptr [eax]; add byte ptr [ebx + 0x6a08ec], al; push ebx; call dword ptr [eax + 0x14]; 
0x0018f5be: and eax, dword ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0011aadf: and eax, dword ptr [ebx + 0x5e5b04c4]; pop edi; pop ebp; ret; 
0x00161e80: and eax, dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x000826f1: and eax, dword ptr [ebx + 0x5e5b24c4]; ret; 
0x00082505: and eax, dword ptr [ebx - 0x2776db3c]; pop ebx; pop esi; ret; 
0x00123b55: and eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00123b55: and eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x000c16a5: and eax, dword ptr [edi]; add byte ptr [ebx - 0x72dbdb84], cl; xchg dword ptr [edi + edx*4], esp; stc; call dword ptr [eax - 0x73]; 
0x0003822c: and eax, dword ptr [edx + ecx*4]; setne al; movzx eax, al; ret; 
0x0002ffdf: and eax, dword ptr [esp + 8]; ret; 
0x00035b72: and eax, ecx; ret; 
0x000b38df: and eax, edx; je 0xb39c0; bsr eax, eax; add eax, edi; pop edi; ret; 
0x00035f35: and eax, edx; ret; 
0x00197066: and eax, edx; test eax, eax; jne 0x196c90; xor eax, eax; ret; 
0x0015a45b: and ebp, 0xfffffffc; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x0015e440: and ebp, ebp; call dword ptr [eax - 0x73]; 
0x000763b0: and ebp, edi; add esp, 4; pop ebx; pop esi; ret; 
0x00076a46: and ebx, 0x3d; stc; call dword ptr [eax - 0x18]; 
0x0008763e: and ebx, 0x40; jne 0x87664; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x0014cdf2: and ebx, 0x5f; stc; call dword ptr [eax - 0x18]; 
0x0014cdf2: and ebx, 0x5f; stc; call dword ptr [eax - 0x18]; ret; 
0x0009c099: and ebx, 1; lea edx, [edx - 0xa3570]; cmove eax, edx; pop ebx; ret; 
0x0009bfb9: and ebx, 1; lea edx, [edx - 0xa8900]; cmove eax, edx; pop ebx; ret; 
0x00131b69: and ebx, 1; lea edx, [edx - 0xa8920]; cmove eax, edx; pop ebx; ret; 
0x0009c049: and ebx, 1; lea edx, [edx - 0xaa910]; cmove eax, edx; pop ebx; ret; 
0x00131bb9: and ebx, 1; lea edx, [edx - 0xaa930]; cmove eax, edx; pop ebx; ret; 
0x0009c3a9: and ebx, 1; lea edx, [edx - 0xac940]; cmove eax, edx; pop ebx; ret; 
0x00131b19: and ebx, 1; lea edx, [edx - 0xac960]; cmove eax, edx; pop ebx; ret; 
0x00128419: and ebx, 1; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0019801c: and ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x0011f9ff: and ecx, 0x52; stc; call dword ptr [eax + 0x57]; 
0x000365b8: and ecx, 0x7fff0000; mov edx, ecx; sub edx, 0x7fff0000; mov eax, edx; shr eax, 0x1f; ret; 
0x00088d9e: and ecx, 0x80; call dword ptr gs:[0x10]; 
0x000eac36: and ecx, 0x80; cmovne eax, edx; pop ebx; pop esi; pop edi; ret; 
0x0008a37e: and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00133a96: and ecx, 0xc0000000; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x00133b55: and ecx, 0xc0000000; shr edx, 0x10; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x001161a7: and ecx, 0xffffeff0; or edx, ecx; mov dword ptr [eax + 8], edx; xor eax, eax; pop ebx; ret; 
0x00094584: and ecx, 0xfffffff0; cmp eax, 0xb; mov eax, 8; cmova eax, ecx; mov dword ptr [edx + 0x3b6c], eax; ret; 
0x0003338a: and ecx, dword ptr [ebx - 0x1cb63]; dec dword ptr [ebp - 0x1f6e4f7d]; call dword ptr [eax + 0x6a]; 
0x00152a0c: and ecx, dword ptr [ecx + 0x5f5e5bf8]; ret; 
0x0014047e: and ecx, eax; call 0x1fc8788; mov byte ptr [edx + 1], al; mov eax, 2; ret; 
0x00067c04: and edi, 3; add byte ptr [eax], al; xor byte ptr [ebx - 0x8bf63], cl; dec dword ptr [ecx - 0x88b7b]; jmp ptr [ecx]; ret; 
0x0013fc56: and edi, dword ptr [ecx]; ret 0x4572; 
0x0002df50: and edi, edi; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000858ba: and edi, esi; mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000d8ce0: and edi, esp; jmp dword ptr [esi - 0x70]; 
0x00129172: and edx, 0x1000; mov eax, edx; ret; 
0x001287f0: and edx, 0x100; mov eax, edx; ret; 
0x00129072: and edx, 0x2000; mov eax, edx; ret; 
0x00128e72: and edx, 0x200; mov eax, edx; ret; 
0x0008278e: and edx, 0x38; cmp edx, 8; je 0x82797; ret; 
0x00128f72: and edx, 0x4000; mov eax, edx; ret; 
0x00128c72: and edx, 0x400; mov eax, edx; ret; 
0x00171b76: and edx, 0x60; jne 0x21308; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0003629d: and edx, 0x7fffffff; sub eax, edx; shr eax, 0x1f; ret; 
0x00128ef2: and edx, 0x8000; mov eax, edx; ret; 
0x000fbc56: and edx, 0xf; mov eax, edx; ret; 
0x00120958: and edx, 0xfff; and eax, 0xfffff000; or eax, edx; ret; 
0x00079258: and edx, 0xffffffcf; mov dword ptr [ebx], edx; add esp, 4; pop ebx; pop esi; ret; 
0x000b4213: and edx, 0xfffffff0; jmp 0xb4270; lea esi, [esi]; nop; xor eax, eax; ret; 
0x0012598f: and edx, 0xfffffffc; add edx, eax; cmp ecx, edx; mov edx, 0; cmovb eax, edx; ret; 
0x0015a375: and edx, 0xfffffffc; and eax, 0xfffffffc; lea eax, [eax + edx + 0x28]; push eax; push edi; call dword ptr [ecx + 0x18]; 
0x00128a94: and edx, 1; mov eax, edx; pop ebx; pop esi; ret; 
0x00128cf2: and edx, 1; mov eax, edx; ret; 
0x001287d4: and edx, 1; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x0008bf4e: and edx, 2; je 0x8bf60; xor eax, eax; ret; 
0x00128d72: and edx, 2; mov eax, edx; ret; 
0x000b46ff: and edx, 3; rep stosd dword ptr es:[edi], eax; mov ecx, edx; rep stosb byte ptr es:[edi], al; pop edi; ret; 
0x00128ff2: and edx, 4; mov eax, edx; ret; 
0x00128bf2: and edx, 8; mov eax, edx; ret; 
0x0012052f: and edx, dword ptr [eax - 0x73]; add ecx, 0x4b; stc; call dword ptr [eax - 0x18]; 
0x00171e41: and edx, dword ptr [ecx + eax*4]; setne al; movzx eax, al; ret; 
0x0012e5c2: and edx, dword ptr [edi - 7]; call dword ptr [eax - 0x18]; 
0x000b4026: and edx, ecx; test edx, edx; je 0xb4000; bsr ecx, edx; add eax, ecx; ret; 
0x0011f761: and esi, 0x4d; stc; call dword ptr [eax + 0x57]; 
0x0014d805: and esi, ebp; dec dword ptr [ebx - 0x72f3dbac]; xor byte ptr [eax - 0x54], 0xf9; call dword ptr [eax + 0x68]; 
0x001a1084: and esi, ebp; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x000eb89d: and esi, esi; add al, 0x42; add dword ptr [esi + ecx - 0x77], esi; ret; 
0x0004a193: and esp, 0x30; stc; call dword ptr [eax - 0x18]; 
0x000ce98e: and esp, 0xffffff98; stc; call dword ptr [eax - 0x18]; 
0x000ce98e: and esp, 0xffffff98; stc; call dword ptr [eax - 0x18]; daa; adc dh, dh; jmp dword ptr [esi - 0x70]; 
0x00123723: and esp, 0xfffffff0; sub esp, 0xc; push esi; call edx; 
0x00041539: and esp, 0xfffffffe; dec dword ptr [ebx - 0x72d3db84]; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x00154b15: and esp, dword ptr [edx - 7]; call dword ptr [eax - 0x18]; 
0x0016d167: and esp, dword ptr [esi - 7]; call dword ptr [eax - 0x18]; 
0x0016d195: and esp, dword ptr [esi - 7]; call dword ptr [eax - 0x18]; push ecx; retf 0xfff9; add esp, 0x1c; ret; 
0x00120d9b: and esp, ebp; lock dec dword ptr [ebp - 0x65d9f7d]; call dword ptr [eax - 0x73]; 
0x00193927: arpl bx, cx; add cl, byte ptr [edi]; xchg esp, eax; ret; 
0x00159c76: arpl cx, di; call dword ptr [eax - 0x18]; 
0x001654b2: arpl cx, di; call dword ptr [eax - 0x73]; 
0x00161cef: arpl cx, di; call dword ptr [ecx + 0x6a]; 
0x0015ad80: arpl cx, di; call dword ptr [edx + 0x6a]; 
0x0009a275: arpl cx, di; inc dword ptr [ebx - 0x72aff33c]; sbb dword ptr [eax + 0x5b], -7; call dword ptr [eax + 0x6a]; 
0x0013a321: arpl di, bp; inc dword ptr [ebx - 0x72aff33c]; xchg dword ptr [eax + 0x57], edi; stc; call dword ptr [eax + 0x6a]; 
0x0013555c: arpl dx, si; call dword ptr [eax - 0x73]; 
0x0013562e: arpl dx, si; call dword ptr [eax - 0x73]; sbb dword ptr [esi + 0x59], -7; call dword ptr [eax - 0x18]; ret 0x1a0; 
0x001516b8: arpl si, ax; sbb dword ptr [eax - 0x7e], 0; add byte ptr [eax], al; mov dword ptr [ebx + 0x8248], 0; call esi; 
0x0016d6d7: arpl sp, di; jmp dword ptr [esi - 0x70]; 
0x001693f8: arpl word ptr [eax - 0x73], dx; and dword ptr [edi + 0x65], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000c8c59: arpl word ptr [ebp - 0xa], bp; dec dword ptr [ebx - 0x364b43]; dec dword ptr [ebp - 0x6673779]; call dword ptr [eax - 0x73]; 
0x000dc5e6: arpl word ptr [ebx + 0x5e5b2cc4], ax; pop edi; pop ebp; ret; 
0x000ef73e: arpl word ptr [ebx + 0x5e5b4cc4], ax; pop edi; pop ebp; ret; 
0x00075d94: arpl word ptr [ebx - 0x7f74f314], ax; mov byte ptr [eax], al; add byte ptr [eax], al; push esi; call dword ptr [eax + 0x34]; 
0x00174254: arpl word ptr [ecx + 0x5052016a], bx; push esi; call dword ptr [edi + 0x40]; 
0x0003bc6c: arpl word ptr [ecx], ax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0003bc38: arpl word ptr [ecx], ax; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0003bd17: arpl word ptr [ecx], ax; add byte ptr [eax], al; xor edx, edx; sub ecx, ebx; call dword ptr gs:[0x10]; 
0x000c9c3c: arpl word ptr [edi + 0x5e], bx; ret; 
0x0011e9d5: arpl word ptr [esi - 7], dx; call dword ptr [eax + 0x6a]; 
0x000daf06: bnd call dword ptr [eax - 0x73]; 
0x0013562f: bnd call dword ptr [eax - 0x73]; sbb dword ptr [esi + 0x59], -7; call dword ptr [eax - 0x18]; ret 0x1a0; 
0x00137e2f: bnd call dword ptr [eax - 0x73]; sub dword ptr [ecx], 0x5a; stc; call dword ptr [eax - 0x18]; ret 0x178; 
0x00162e0d: bnd call dword ptr [ebp - 0x73]; 
0x0014e7ba: bnd call dword ptr [ebx + 0x50]; 
0x0018cbf8: bnd call dword ptr [ebx - 0x18]; 
0x0018f108: bnd call dword ptr [ebx - 0x18]; jmp 0x8218ef3d; ret; 
0x00192e08: bnd call dword ptr [ebx - 0x18]; jmp 0x82192c00; ret; 
0x00193308: bnd call dword ptr [ebx - 0x18]; jmp 0x821930fb; ret; 
0x001592b7: bnd call dword ptr [ecx - 0x73]; 
0x001590d4: bnd call dword ptr [edx + 0x6a]; 
0x0015981a: bnd call dword ptr [esi - 0x73]; 
0x00066a2e: bnd jae 0x676f0; sub esp, 4; push ebx; push eax; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x00084dd9: bnd jbe 0x84e18; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x00091205: bnd je 0x91213; xor eax, eax; pop ebx; ret; 
0x000a1d9c: bnd je 0xa1d90; pop ebx; pop esi; ret; 
0x000dd65e: bnd je 0xdd670; xor edx, edx; cmp eax, -1; cmove eax, edx; pop ebx; ret; 
0x00148697: bnd jmp dword ptr [ebp - 0x5f]; 
0x000f6566: bnd jmp dword ptr [ebp - 0x75]; 
0x00102d7c: bnd jmp dword ptr [esi - 0x70]; 
0x000abfba: bound eax, qword ptr [0x5e5f0000]; pop ebx; ret; 
0x00197ae3: bound eax, qword ptr [eax + 0x74000f7a]; pop esp; mov eax, 0x10; pop edi; ret; 
0x0014f4ca: bound eax, qword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x0015574c: bound eax, qword ptr [ebx + 0x5e5b3cc4]; pop edi; pop ebp; ret; 
0x00196e1a: bound eax, qword ptr [ecx]; add byte ptr [eax], al; add edx, 0; jl 0x197040; mov eax, ecx; ret; 
0x0014b214: bound ebp, qword ptr [ecx]; ret 0x8966; 
0x00102eba: bound ebp, qword ptr [edx - 0xd]; dec dword ptr [ecx - 0x76ebdbbc]; ret; 
0x000f82c9: bound ebx, qword ptr [ecx + edi*8]; mov dword ptr [eax], 0; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x000eb86f: bound ecx, qword ptr [eax - 7]; call dword ptr [eax + 0x55]; 
0x00133dfb: bound ecx, qword ptr [edi]; add byte ptr [ebx - 0x11380], cl; jmp dword ptr [ebp + 3]; 
0x00133dfb: bound ecx, qword ptr [edi]; add byte ptr [ebx - 0x11380], cl; jmp dword ptr [ebp + 3]; add eax, 0; ret; 
0x00084798: bound ecx, qword ptr [esi + edi*8]; add esp, 8; pop ebx; ret; 
0x0003a65a: bound edx, qword ptr [ebx - 1]; jmp dword ptr [esi - 0x70]; 
0x0014ddd3: bound esp, qword ptr [eax - 7]; call dword ptr [eax - 0x18]; 
0x0009c0f9: bsf eax, dword ptr [esp + 4]; cmove eax, edx; add eax, 1; ret; 
0x000b3cc0: bsf eax, eax; add eax, edi; pop edi; ret; 
0x000b424a: bsf eax, eax; add eax, edx; add eax, ecx; ret; 
0x000b43b0: bsf eax, eax; add eax, edx; ret; 
0x000b3cd0: bsf eax, eax; lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x000b3ce0: bsf eax, eax; lea eax, [eax + edi + 0x20]; pop edi; ret; 
0x000b3cb0: bsf eax, eax; lea eax, [eax + edi - 0x10]; pop edi; ret; 
0x000b43c0: bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x000b43d0: bsf eax, eax; lea eax, [eax + edx + 0x20]; ret; 
0x000b43a0: bsf eax, eax; lea eax, [eax + edx - 0x10]; ret; 
0x000b3bfc: bsf eax, eax; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000b4397: bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x0009c12c: bsf eax, eax; mov edx, 0xffffffff; pop ebx; cmove eax, edx; add eax, 1; ret; 
0x000b3cf0: bsf eax, eax; sub edx, eax; jbe 0xb3d30; add eax, edi; pop edi; ret; 
0x000b3d03: bsf eax, eax; sub edx, eax; jbe 0xb3d30; lea eax, [edi + eax + 0x10]; pop edi; ret; 
0x000b3d13: bsf eax, eax; sub edx, eax; jbe 0xb3d30; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x000b3d23: bsf eax, eax; sub edx, eax; jbe 0xb3d30; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x0009c140: bsf eax, edx; mov edx, 0xffffffff; pop ebx; cmove eax, edx; add eax, 0x21; ret; 
0x000b4205: bsf ecx, ecx; add eax, ecx; ret; 
0x000b3a1d: bsf ecx, ecx; sub edx, ecx; jbe 0xb3a50; add eax, ecx; ret; 
0x000a2723: bsf edx, edx; add eax, edx; add eax, 0x10; pop edi; pop esi; ret; 
0x000a2730: bsf edx, edx; add eax, edx; add eax, 0x20; pop edi; pop esi; ret; 
0x000a273d: bsf edx, edx; add eax, edx; add eax, 0x30; pop edi; pop esi; ret; 
0x000a2719: bsf edx, edx; add eax, edx; pop edi; pop esi; ret; 
0x00198c75: bsf edx, edx; add eax, edx; ret; 
0x00198c81: bsf edx, edx; mov eax, 0x20; add eax, edx; ret; 
0x000b3ee4: bsr eax, eax; add eax, ecx; ret; 
0x000b3865: bsr eax, eax; add eax, edi; pop edi; ret; 
0x000b39b3: bsr eax, eax; add eax, edi; sub eax, 0x10; pop edi; ret; 
0x000b3f90: bsr eax, eax; lea eax, [eax + ecx + 0x10]; ret; 
0x000b3fa0: bsr eax, eax; lea eax, [eax + ecx + 0x20]; ret; 
0x000b3fb0: bsr eax, eax; lea eax, [eax + ecx + 0x30]; ret; 
0x000b3ff0: bsr eax, eax; sub edx, 0x10; add edx, eax; jl 0xb4000; lea eax, [ecx + eax + 0x30]; ret; 
0x000b3fe0: bsr eax, eax; sub edx, 0x20; add edx, eax; jl 0xb4000; lea eax, [ecx + eax + 0x20]; ret; 
0x000b3fd0: bsr eax, eax; sub edx, 0x30; add edx, eax; jl 0xb4000; lea eax, [ecx + eax + 0x10]; ret; 
0x000b3fc0: bsr eax, eax; sub edx, 0x40; add edx, eax; jl 0xb4000; add eax, ecx; ret; 
0x000b402c: bsr ecx, edx; add eax, ecx; ret; 
0x000b4084: bsr edi, edi; add eax, edi; pop edi; ret; 
0x000b40c1: bsr edi, edi; add eax, edi; xor ch, ch; add eax, ecx; pop edi; ret; 
0x000b40d0: bsr edi, edi; lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x00133adf: bswap eax; mov dword ptr [ecx], eax; mov eax, ecx; ret 4; 
0x00133a58: bswap eax; ret; 
0x0015b1e3: bswap edx; mov dword ptr [eax], edx; mov eax, 1; add esp, 8; pop ebx; ret; 
0x00050160: call 0x1005012e; xchg ebp, eax; ret 0xb60f; 
0x000509b3: call 0x10050981; xchg edi, eax; ret 0xf039; 
0x000c7e50: call 0x100c7e1e; xchg ebp, eax; ret 0xb60f; 
0x000c8661: call 0x100c862f; xchg edi, eax; ret 0xbd39; 
0x0016fa11: call 0x10163619; test byte ptr [ebp - 0x76ffffff], ah; ret 0xb60f; 
0x00132782: call 0x103cb0; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00104ef1: call 0x1044e0; add esp, 0x2c; ret; 
0x001044a1: call 0x104eb0; add esp, 0x2c; ret; 
0x000497dc: call 0x10511fe2; add dword ptr [ecx], edi; ret; 
0x0010884c: call 0x108ad0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0010880f: call 0x108ad0; add esp, 0x18; pop ebx; ret; 
0x0010896b: call 0x108c90; add esp, 0x10; add esp, 0xc; ret; 
0x001088c3: call 0x108c90; add esp, 0x1c; ret; 
0x001087b7: call 0x109330; add esp, 0x1c; ret; 
0x0012321e: call 0x109360; add esp, 0x20; add esp, 0xc; ret; 
0x001087db: call 0x109360; add esp, 0x2c; ret; 
0x001099b6: call 0x1099c0; add esp, 0x1c; ret; 
0x000583bb: call 0x109bf0; add esp, 0x1c; ret; 
0x0010b164: call 0x109d40; add esp, 0x1c; ret; 
0x0002171f: call 0x10a240; add esp, 0x1c; ret; 
0x0007caa6: call 0x10a3d0; add esp, 0x18; pop ebx; ret; 
0x0017821d: call 0x10a870; add esp, 0x1c; sar eax, 0x1f; ret; 
0x0010aad3: call 0x10aae0; add esp, 0x1c; ret; 
0x00159b0a: call 0x10aec0; mov eax, dword ptr [ebp + 0x20]; mov dword ptr [esp], ebp; call dword ptr [eax + 0x10]; 
0x00035bd2: call 0x10ed1cf6; or eax, ecx; ret; 
0x00112533: call 0x112270; add esp, 0x10; add esp, 0xc; ret; 
0x00116fac: call 0x116ed0; sar eax, 0x1f; add esp, 8; pop ebx; ret; 
0x001170b6: call 0x116fc0; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00095c7e: call 0x117130; add esp, 0x10; cmp eax, -1; je 0x95c90; add esp, 0xc; ret; 
0x0011677b: call 0x117200; add esp, 0x10; add esp, 0xc; ret; 
0x00116625: call 0x117200; add esp, 0x1c; ret; 
0x00158e98: call 0x118340; mov dword ptr [ebx + 0xa340], eax; add esp, 8; pop ebx; ret; 
0x00119b6a: call 0x11a290; add esp, 0x10; add esp, 0xc; ret; 
0x0011b3a3: call 0x11b020; mov dword ptr [ebx + 0x4414], eax; add esp, 8; pop ebx; ret; 
0x0011bf16: call 0x11b880; add esp, 0x1c; ret; 
0x001a07f1: call 0x11c4f0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0009478a: call 0x11c4f0; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0011c86f: call 0x11cb90; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x0011ce43: call 0x11d160; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x0011d3cc: call 0x11d3e0; add esp, 0x1c; ret; 
0x0011d338: call 0x11d4d0; add esp, 0x1c; ret; 
0x0002c302: call 0x11e250; add esp, 0x1c; ret; 
0x001a0764: call 0x11e280; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0011e53d: call 0x11e3b0; add esp, 0x18; pop ebx; ret; 
0x0011e50d: call 0x11e430; add esp, 0x18; pop ebx; ret; 
0x0011e889: call 0x11e790; add esp, 0x28; pop ebx; ret; 
0x0011ea21: call 0x11e8a0; add esp, 0x28; pop ebx; ret; 
0x0011eef7: call 0x11ec40; test eax, eax; je 0x11ef08; add esp, 0xc; ret; 
0x0011ef11: call 0x11ee70; mov edx, 2; test eax, eax; cmove eax, edx; add esp, 0xc; ret; 
0x0012132d: call 0x121340; add esp, 0x1c; ret; 
0x0012105d: call 0x122700; add esp, 0x1c; ret; 
0x00094807: call 0x1240e0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x001260b5: call 0x126620; add esp, 0x1c; ret; 
0x00127528: call 0x126c50; mov dword ptr [ebx + 0x260], esi; add esp, 4; pop ebx; pop esi; ret; 
0x001280ee: call 0x127590; pop edx; pop ecx; pop eax; ret; 
0x001272fc: call 0x127720; add esp, 0x10; mov dword ptr [ebx + 0x260], 0; add esp, 8; pop ebx; ret; 
0x00127320: call 0x127720; add esp, 0x10; mov dword ptr [ebx + 0x260], 3; add esp, 8; pop ebx; ret; 
0x00127a50: call 0x127920; add esp, 4; ret; 
0x0017a497: call 0x12a070; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x0012ca6e: call 0x12c570; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x0012e8ad: call 0x12e680; add esp, 0x28; pop ebx; ret; 
0x00131232: call 0x12fc60; add esp, 0x1c; ret; 
0x0012fe32: call 0x12fd10; add esp, 0x18; pop ebx; ret; 
0x0012ed86: call 0x1311d0; add esp, 0xc; push eax; push dword ptr [ebp - 0x4c]; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x0012dc37: call 0x1311d0; add esp, 0xc; push eax; push dword ptr [esp + 8]; push 0x2000003; call dword ptr [ebp + 0x14]; 
0x00132cd4: call 0x132270; lea esi, [esi]; add esp, 8; pop ebx; ret; 
0x001586bb: call 0x1339f0; endbr32; ret; 
0x000865c9: call 0x1339f0; nop; endbr32; xor eax, eax; ret; 
0x00131ac7: call 0x1339f0; nop; nop; endbr32; ret; 
0x0017a5ef: call 0x1356a0; neg eax; sbb eax, eax; add esp, 0x2c; ret; 
0x0017a66f: call 0x136190; neg eax; sbb eax, eax; add esp, 0x2c; ret; 
0x0017a717: call 0x136d20; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x0017a807: call 0x137ea0; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x0017a837: call 0x138500; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00138b5c: call 0x138b70; add esp, 0x1c; ret; 
0x00138fcc: call 0x138fe0; add esp, 0x1c; ret; 
0x0013a7cd: call 0x139a50; add esp, 0x1c; ret; 
0x0013a7b3: call 0x139c40; add esp, 0x2c; ret; 
0x0013a8e9: call 0x13a7e0; add esp, 0x2c; ret; 
0x0013b151: call 0x13ab00; add esp, 0x2c; ret; 
0x0013ccd8: call 0x13c6c0; add esp, 0x20; add esp, 8; pop ebx; ret; 
0x0017a8e7: call 0x13ce80; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x0013f962: call 0x13ec30; cmp eax, -0xb; je 0x13f960; add esp, 8; pop ebx; ret; 
0x001446e9: call 0x144130; add esp, 0x3c; ret; 
0x001454ff: call 0x1452f0; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x145515; add esp, 0x1c; ret; 
0x00146e0d: call 0x146ce0; add esp, 0x1c; ret; 
0x00149167: call 0x149060; add esp, 0x14; pop ebx; pop esi; ret; 
0x0015359a: call 0x152d90; add esp, 0x1c; ret; 
0x001535b9: call 0x152e60; add esp, 0x1c; ret; 
0x00154f05: call 0x154d40; add esp, 0x3c; ret; 
0x00140483: call 0x1568c89; mov eax, 2; ret; 
0x0015701c: call 0x156df0; add esp, 0x2c; ret; 
0x0015867b: call 0x15a0a0; mov eax, dword ptr [esp + 0x18]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0015e791: call 0x15ba20; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x00159301: call 0x160380; mov edx, dword ptr [esp + 0x1c]; mov eax, dword ptr [edx + 4]; mov dword ptr [esp], edx; call dword ptr [eax + 0x10]; 
0x00161d69: call 0x161a90; add esp, 0x3c; ret; 
0x00162b1a: call 0x162870; add esp, 0x10; add esp, 0xc; ret; 
0x00162afb: call 0x162970; add esp, 0x10; add esp, 0xc; ret; 
0x00162efb: call 0x162d40; add esp, 0x2c; ret; 
0x0016707b: call 0x163220; mov dword ptr [eax], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x00164f65: call 0x164c90; add esp, 0x1c; ret; 
0x0015a101: call 0x165df0; add esp, 0x1c; ret; 
0x0015a0d6: call 0x165e20; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x00165ff9: call 0x165e20; add esp, 0x1c; ret; 
0x00166221: call 0x1660a0; test eax, eax; setne al; add esp, 0x1c; movzx eax, al; ret; 
0x000818be: call 0x16df30; add esp, 0x1c; ret; 
0x001a0628: call 0x16ed20; add ebp, dword ptr [edi + 8]; mov dword ptr [esp], ebp; call esi; 
0x000da072: call 0x16ed20; add esp, 0x10; mov eax, dword ptr [esp + 0xc]; call eax; 
0x000da1df: call 0x16ed20; add esp, 0x10; mov eax, edi; call eax; 
0x0013cb84: call 0x16ed20; mov dword ptr [esp], ebp; call ebx; 
0x0013c880: call 0x16ed20; mov dword ptr [esp], ebp; call esi; 
0x0002373b: call 0x16ed20; mov dword ptr [esp], ebx; call edi; 
0x00022808: call 0x16ed20; mov dword ptr [esp], ebx; call esi; 
0x0002297b: call 0x16ed20; mov dword ptr [esp], ebx; mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x0002300b: call 0x16ed20; mov dword ptr [esp], ebx; mov ecx, dword ptr [ebp - 0x40]; call ecx; 
0x0002b876: call 0x16ed20; mov dword ptr [esp], esi; call ebx; 
0x0013bf20: call 0x16ed20; mov dword ptr [esp], esi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x000b6263: call 0x16ed20; pop edx; pop ecx; push ebx; push dword ptr [edi]; call esi; 
0x00082457: call 0x16f110; mov dword ptr [ebx + 0x10], eax; add esp, 0x18; pop ebx; ret; 
0x00082364: call 0x16f1d0; mov dword ptr [ebx + 0xc], eax; add esp, 0x18; pop ebx; ret; 
0x00171b5b: call 0x1719d0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00171ba7: call 0x171a40; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00171b42: call 0x171a50; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00092c44: call 0x171dfd; add edx, 0x1973b7; push ebx; mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001280c4: call 0x171e01; add eax, 0x101f37; mov eax, dword ptr [eax - 0xc8]; mov eax, dword ptr [eax + 0x24]; ret; 
0x00092f74: call 0x171e01; add eax, 0x197087; mov dword ptr [eax + 0x3b04], 0; ret; 
0x00088344: call 0x171e01; add eax, 0x1a1cb7; mov eax, dword ptr [eax + 0x3a28]; ret; 
0x00080e84: call 0x171e01; add eax, 0x1a9177; mov eax, dword ptr [eax + 0xce0]; ret; 
0x000384d4: call 0x171e01; add eax, 0x1f1b27; mov eax, dword ptr [eax + 0x64]; ret; 
0x000384b4: call 0x171e01; add eax, 0x1f1b47; mov eax, dword ptr [eax + 0x68]; ret; 
0x0002fff4: call 0x171e01; add eax, 0x1fa007; mov eax, dword ptr [eax - 0x13c]; add eax, dword ptr gs:[0]; ret; 
0x0002b8c4: call 0x171e01; add eax, 0x1fe737; mov eax, dword ptr [eax + 0x1014]; ret; 
0x000227b4: call 0x171e01; add eax, 0x207847; mov eax, dword ptr [eax + 0xff0]; ret; 
0x00022794: call 0x171e01; add eax, 0x207867; mov eax, dword ptr [eax + 0xfec]; ret; 
0x00021de4: call 0x171e01; add eax, 0x208217; mov eax, dword ptr [eax - 0x134]; add eax, dword ptr gs:[0]; ret; 
0x00021754: call 0x171e01; add eax, 0x2088a7; lea eax, [eax - 0x6921c]; ret; 
0x00021734: call 0x171e01; add eax, 0x2088c7; lea eax, [eax - 0x69214]; ret; 
0x00133df4: call 0x171e01; add eax, 0xf6207; mov eax, dword ptr [eax - 0x114]; add eax, dword ptr gs:[0]; ret; 
0x00118f1f: call 0x171e05; add esi, 0x1110dc; push ebx; mov ebx, 0xfee1dead; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00172a27: call 0x1722a0; add esp, 0x18; pop ebx; ret; 
0x00048a77: call 0x18b50e09; add byte ptr [eax], al; mov byte ptr [eax + ecx], 0; pop ebx; pop esi; ret; 
0x00188b6f: call 0x1c1b8b77; mov edi, dword ptr [esi]; jmp ebx; 
0x00188c93: call 0x1c1b8c9b; mov edi, dword ptr [esi]; jmp ebx; 
0x000943b1: call 0x1c9c6ba; mov dword ptr [edx + 0x1fc], eax; ret; 
0x0007be9b: call 0x1e841a4; ret; 
0x0007bebb: call 0x1e841c5; ret; 
0x000829bd: call 0x1e8accd; mov dword ptr [edx + 0x19f0], eax; ret; 
0x00131280: call 0x1f39593; pop ebx; ret; 
0x00140480: call 0x1fc8788; mov byte ptr [edx + 1], al; mov eax, 2; ret; 
0x00034323: call 0x20140; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x0002c014: call 0x20140; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0011d85d: call 0x20140; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000ed556: call 0x20140; add esp, 0x10; xor eax, eax; add esp, 8; pop ebx; ret; 
0x0002c7b3: call 0x20140; add esp, 0x14; pop ebx; pop esi; ret; 
0x0007b533: call 0x20140; add esp, 0x14; xor eax, eax; pop ebx; pop esi; ret; 
0x00105127: call 0x20140; add esp, 0x18; pop ebx; ret; 
0x0014e6d8: call 0x20140; mov dword ptr [esp], ebp; call esi; 
0x000918d3: call 0x20140; mov dword ptr [esp], edi; call esi; 
0x00094235: call 0x20140; mov eax, dword ptr [esp + 0x1c]; mov dword ptr [esp], eax; call esi; 
0x00105101: call 0x20150; add esp, 0x18; pop ebx; ret; 
0x0013cc78: call 0x20150; mov dword ptr [ebx + 0xfc0], eax; add esp, 0x18; pop ebx; ret; 
0x0009a685: call 0x20160; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0016efb2: call 0x20210; add esp, 0x10; jmp 0x16ee77; nop; mov dword ptr [esp + 8], ecx; call eax; 
0x00081eeb: call 0x20220; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x000220ef: call 0x226b0; add esp, 0x10; neg eax; sbb eax, eax; add esp, 0xc; ret; 
0x00069eac: call 0x244b27d0; and al, 0x89; sal bh, 1; fmul dword ptr [edi]; dec eax; ret 0x4489; 
0x00162767: call 0x246ab26d; or al, 0x65; sub edx, dword ptr [0x14]; jne 0x16277a; add esp, 0x1c; ret; 
0x00198faa: call 0x248e18cc; xor byte ptr [ecx + 0x24748bf1], cl; or al, 9; ret; 
0x00035068: call 0x26856; jmp dword ptr [esi - 0x70]; 
0x0011fb6a: call 0x2858856e; mov eax, 4; pop ebx; pop esi; pop edi; ret; 
0x0002ecf5: call 0x2ed00; add esp, 0x1c; ret; 
0x0009afea: call 0x2ef30ee; lea edx, [edx - 0xa02b0]; cmovne eax, edx; ret; 
0x0009bf6a: call 0x2ef406e; lea edx, [edx - 0x95fe0]; cmovne eax, edx; ret; 
0x0009c21a: call 0x2ef431e; lea edx, [edx - 0x9d450]; cmovne eax, edx; ret; 
0x0009c25a: call 0x2ef435e; lea edx, [edx - 0x9af40]; cmovne eax, edx; ret; 
0x0009c29a: call 0x2ef439e; lea edx, [edx - 0x9d420]; cmovne eax, edx; ret; 
0x0009c2da: call 0x2ef43de; lea edx, [edx - 0x9af10]; cmovne eax, edx; ret; 
0x001050fb: call 0x2f11205; push eax; call 0x20150; add esp, 0x18; pop ebx; ret; 
0x000511b9: call 0x2fee11bb; sub byte ptr [esi], cl; add byte ptr [ebx - 0x365343], cl; dec dword ptr [ebp - 0x6894f79]; call dword ptr [eax - 0x73]; 
0x000305d6: call 0x300b0; mov edx, dword ptr [esp + 0x14]; add esp, 0xc; mov eax, edx; ret; 
0x001451c2: call 0x30630; add esp, 0x10; add esp, 0xc; ret; 
0x00160136: call 0x30630; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000ff6f7: call 0x30630; add esp, 0x18; pop ebx; ret; 
0x00030671: call 0x30630; add esp, 0x1c; ret; 
0x00030649: call 0x31290; add esp, 0x2c; ret; 
0x00031aa9: call 0x31a60; add esp, 0x2c; ret; 
0x0009759b: call 0x3204feac; ret; 
0x0003736f: call 0x372d0; pop ecx; pop edx; ret; 
0x00038299: call 0x37b20; add esp, 0x1c; ret; 
0x000918b1: call 0x380a0; mov eax, 0xaf; xor edx, edx; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00038851: call 0x387d0; add esp, 0x1c; ret; 
0x00039909: call 0x395a0; add esp, 0x2c; ret; 
0x00039fae: call 0x39b40; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x0003a754: call 0x3a660; add esp, 0x1c; ret; 
0x00171ecd: call 0x3a730; add esp, 0x1c; ret; 
0x0003b941: call 0x3b950; add esp, 0x1c; ret; 
0x0003b9e8: call 0x3ba00; add esp, 0x10; add esp, 0xc; ret; 
0x0003ba68: call 0x3ba80; add esp, 0x10; add esp, 0xc; ret; 
0x0003b8bc: call 0x3bac0; add esp, 0x1c; ret; 
0x0003b8ed: call 0x3baf0; add esp, 0x18; lea eax, [ebx + 6]; pop ebx; ret; 
0x0003b91c: call 0x3bb40; add esp, 0x1c; ret; 
0x00038c4f: call 0x3c860; add esp, 0x1c; ret; 
0x00038c8f: call 0x3c960; add esp, 0x1c; ret; 
0x0003c851: call 0x3ca20; add esp, 0x2c; ret; 
0x0002c5cc: call 0x3cc559e0; cmp cl, byte ptr [edi]; xchg esp, eax; ret; 
0x0003c8d1: call 0x3d010; add esp, 0x2c; ret; 
0x0003c951: call 0x3d5b0; add esp, 0x2c; ret; 
0x0003c9d1: call 0x3ddd0; add esp, 0x2c; ret; 
0x00038c2d: call 0x3e650; add esp, 0x1c; ret; 
0x0003e5bd: call 0x3eee0; add esp, 0x1c; ret; 
0x000857cb: call 0x400dad2; je 0x857e0; pop ebx; pop esi; pop edi; ret; 
0x0017f063: call 0x4096005b; clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00181083: call 0x4096207b; clc; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x001831b3: call 0x409641ab; clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00188533: call 0x4096952b; clc; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x0003e63d: call 0x41f80; add esp, 0x1c; ret; 
0x0018852e: call 0x42979499; call 0x4096952b; clc; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x0017ae12: call 0x42edbd7d; clc; pop ebx; ret; 
0x0017b472: call 0x42edc3dd; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017ba12: call 0x42edc97d; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017bf52: call 0x42edcebd; clc; pop ebx; ret; 
0x0002c0c9: call 0x44449cf; add esp, 8; pop ebx; ret; 
0x0003e6bd: call 0x451a0; add esp, 0x1c; ret; 
0x000357cf: call 0x4598c; add byte ptr [ecx], bh; ret 0x430f; 
0x0004819e: call 0x47cb0; test eax, eax; sete al; add esp, 0xc; movzx eax, al; ret; 
0x000489cd: call 0x48970; add esp, 0x1c; ret; 
0x00048b7c: call 0x48a90; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x00048bc7: call 0x48bd0; add esp, 0x2c; ret; 
0x0004ac8a: call 0x4ac8f; pop ecx; add ecx, 0xa; mov dword ptr [edx], ecx; ret; 
0x0004b07e: call 0x4b030; add eax, ebx; jmp eax; 
0x001482b2: call 0x4d905b8; pop ebx; pop esi; ret; 
0x000943ae: call 0x4f204b4; add eax, 1; mov dword ptr [edx + 0x1fc], eax; ret; 
0x00030015: call 0x5031437; out 0x9f, eax; pop ds; add byte ptr [ebx - 0xb80], cl; jmp dword ptr [ebp + 3]; 
0x00054bed: call 0x523c0; add esp, 0x1c; ret; 
0x00133bc5: call 0x57ac0; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x0011c8b6: call 0x57af0; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x00057bd7: call 0x57b80; add esp, 0x1c; ret; 
0x000752c7: call 0x57ba0; add esp, 0x1c; ret; 
0x001193d3: call 0x58600; add esp, 0x10; add esp, 0xc; ret; 
0x00119311: call 0x58600; add esp, 0x1c; ret; 
0x00057b95: call 0x59450; add esp, 0x1c; ret; 
0x000d842d: call 0x5b0d8432; ret; 
0x000d8559: call 0x5b0d855e; ret; 
0x000dfca9: call 0x5b0dfdab; cmove eax, edx; ret; 
0x0012819a: call 0x5b146222; pop esi; pop edi; ret; 
0x0012823a: call 0x5b1462c2; pop esi; pop edi; ret; 
0x001282da: call 0x5b146362; pop esi; pop edi; ret; 
0x0012837a: call 0x5b146402; pop esi; pop edi; ret; 
0x001284ba: call 0x5b146542; pop esi; pop edi; ret; 
0x0012855a: call 0x5b1465e2; pop esi; pop edi; ret; 
0x001285fa: call 0x5b146682; pop esi; pop edi; ret; 
0x0012869a: call 0x5b146722; pop esi; pop edi; ret; 
0x0012873a: call 0x5b1467c2; pop esi; pop edi; ret; 
0x0012887a: call 0x5b146902; pop esi; pop edi; ret; 
0x000845c7: call 0x5b150a4f; pop esi; pop edi; pop ebp; ret; 
0x0013c317: call 0x5b18879f; pop esi; ret; 
0x0007897d: call 0x5b244e05; pop esi; pop edi; pop ebp; ret; 
0x00033ec6: call 0x5b30034e; pop esi; pop edi; pop ebp; ret; 
0x00151413: call 0x5b31d89b; pop esi; pop edi; pop ebp; ret; 
0x00151a29: call 0x5b31deb1; pop esi; pop edi; pop ebp; ret; 
0x001565b6: call 0x5b322a3e; pop esi; pop edi; pop ebp; ret; 
0x0008131a: call 0x5b34d7a2; pop esi; pop edi; pop ebp; ret; 
0x0008138f: call 0x5b34d817; pop esi; pop edi; pop ebp; ret; 
0x0004b6ef: call 0x5b5cbe7d; pop esi; pop edi; ret; 
0x00025b55: call 0x5d61b9b5; ret; 
0x000306e8: call 0x5d626548; ret; 
0x00031b94: call 0x5d6279f4; ret; 
0x00033daa: call 0x5d629c0a; ret; 
0x00049fa1: call 0x5d63fe01; ret; 
0x00049ff7: call 0x5d63fe57; ret; 
0x0004d596: call 0x5d6433f6; ret; 
0x0006ac85: call 0x5d660ae5; ret; 
0x000700d9: call 0x5d665f39; ret; 
0x000701cf: call 0x5d66602f; ret; 
0x0007a55d: call 0x5d6703bd; ret; 
0x0007a598: call 0x5d6703f8; ret; 
0x0007bad5: call 0x5d671935; ret; 
0x0007db59: call 0x5d6739b9; ret; 
0x00081d56: call 0x5d677bb6; ret; 
0x00084574: call 0x5d67a3d4; ret; 
0x0008eb93: call 0x5d6849f3; ret; 
0x00090852: call 0x5d6866b2; ret; 
0x0009755c: call 0x5d68d3bc; ret; 
0x000976fd: call 0x5d68d55d; ret; 
0x00099c02: call 0x5d68fa62; ret 4; 
0x0009b62e: call 0x5d69148e; ret; 
0x000b76ea: call 0x5d6ad54a; ret; 
0x000b7bfa: call 0x5d6ada5a; ret; 
0x000c5576: call 0x5d6bb3d6; ret; 
0x000d29a5: call 0x5d6c8805; ret; 
0x000d80e0: call 0x5d6cdf40; ret; 
0x000e5f87: call 0x5d6dbde7; ret; 
0x000e7ab7: call 0x5d6dd917; ret; 
0x000f7917: call 0x5d6ed777; ret; 
0x000fa8b1: call 0x5d6f0711; ret; 
0x000ff99d: call 0x5d6f57fd; ret; 
0x00103036: call 0x5d6f8e96; ret; 
0x0010e174: call 0x5d703fd4; ret; 
0x00115084: call 0x5d70aee4; ret; 
0x00119791: call 0x5d70f5f1; ret; 
0x0011dbdf: call 0x5d713a3f; ret; 
0x0011e309: call 0x5d714169; ret; 
0x0011e38b: call 0x5d7141eb; ret; 
0x00120f0c: call 0x5d716d6c; ret; 
0x00131dcf: call 0x5d727c2f; ret; 
0x0013d910: call 0x5d733770; ret; 
0x0013faa1: call 0x5d735901; ret; 
0x001468a1: call 0x5d73c701; ret; 
0x001513fa: call 0x5d74725a; ret; 
0x001519bb: call 0x5d74781b; ret; 
0x00158baa: call 0x5d74ea0a; ret; 
0x0015d228: call 0x5d753088; ret; 
0x00167311: call 0x5d75d171; ret; 
0x00120f63: call 0x5e6de979; pop edi; pop ebp; ret; 
0x0004b13e: call 0x5f630e9e; ret; 
0x0004bb8b: call 0x5f6318eb; ret; 
0x0004c7be: call 0x5f63251e; ret; 
0x00120ee0: call 0x5fdc9843; pop ebp; ret; 
0x00057bb5: call 0x60130; add esp, 0x1c; ret; 
0x000b3bf4: call 0x660b3bf9; pmovmskb eax, mm1; bsf eax, eax; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x00085ace: call 0x677bb; dec dword ptr [ebx - 0xf47efb1]; add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00130707: call 0x6813715f; add eax, dword ptr [eax]; add byte ptr [ecx], al; mov dword ptr [ebp - 0x44], edx; call eax; 
0x00051f85: call 0x685c0; add esp, 0x1c; ret; 
0x00057b75: call 0x6d850; add esp, 0x1c; ret; 
0x00023773: call 0x6e86be05; stc; call dword ptr [eax - 0x73]; 
0x0007dc38: call 0x6f426; jmp dword ptr [esi - 0x70]; 
0x00070c96: call 0x70ba0; add esp, 0x1c; ret; 
0x001603ad: call 0x70c80; add esp, 0x18; pop ebx; ret; 
0x00079d57: call 0x70f00; add esp, 0x18; pop ebx; ret; 
0x00071961: call 0x71860; add esp, 0x1c; ret; 
0x00058984: call 0x72280; cmp eax, 1; sbb eax, eax; add esp, 0x1c; ret; 
0x00058905: call 0x72440; add esp, 0x1c; ret; 
0x000728dd: call 0x72700; add esp, 0x2c; ret; 
0x00079f84: call 0x73870; add esp, 0x1c; ret; 
0x00079fa1: call 0x739b0; add esp, 0x1c; ret; 
0x00057b0b: call 0x73cc0; add esp, 0x2c; ret; 
0x000fc1cc: call 0x7430bc54; mov ah, 0x85; ret; 
0x00074b89: call 0x749a0; add esp, 0x28; pop ebx; ret; 
0x000c9e73: call 0x74df227a; pop ss; mov cl, dl; and cl, 0xf; je 0xc9ea0; ret; 
0x0007520d: call 0x75350; add esp, 0x2c; ret; 
0x000745b4: call 0x75f80; add esp, 0x1c; ret; 
0x000790ed: call 0x76a90; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00153586: call 0x771a358c; push 0xd; add byte ptr [ebx - 0x7f72eb14], al; shl dword ptr [ecx - 7], 1; call dword ptr [eax + 0x6a]; 
0x00166f34: call 0x79850; add esp, 0x1c; not eax; shr eax, 0x1f; ret; 
0x0011991b: call 0x79eb0; add esp, 0x10; mov eax, 1; add esp, 8; pop ebx; ret; 
0x00057b36: call 0x79fb0; add esp, 0x1c; ret; 
0x00057b56: call 0x7a180; add esp, 0x1c; ret; 
0x0007a1b9: call 0x7a1be; add byte ptr [eax], al; add byte ptr [ebp - 0x189f7d], cl; call dword ptr [eax - 0x73]; 
0x00057add: call 0x7a3b0; add esp, 0x2c; ret; 
0x0007a7f5: call 0x7a640; add esp, 0x1c; ret; 
0x0009af61: call 0x7d4ba665; add cl, byte ptr [ebp - 0x17c21f6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0009b071: call 0x7d4ba775; add cl, byte ptr [ebp - 0x18784f6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0009b421: call 0x7d4bab25; add cl, byte ptr [ebp - 0x179f1f6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0009c181: call 0x7d4bb885; add cl, byte ptr [ebp - 0x18347f6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0009c1d1: call 0x7d4bb8d5; add cl, byte ptr [ebp - 0x181c0f6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0009b0ae: call 0x7e4ba7b2; adc byte ptr [edi], cl; inc ebp; ret 0x66c3; 
0x0009b52e: call 0x7e4bac32; adc byte ptr [edi], cl; inc ebp; ret 0x66c3; 
0x0009b65e: call 0x7e4bad62; adc byte ptr [edi], cl; inc ebp; ret 0x66c3; 
0x000751b5: call 0x7f490; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x0007bf74: call 0x7f6f0; add esp, 0x1c; ret; 
0x000800b1: call 0x7ffd0; add esp, 0x28; pop ebx; ret; 
0x000808b5: call 0x80310; add esp, 0x18; pop ebx; ret; 
0x0007a833: call 0x80590; add esp, 8; pop ebx; ret; 
0x001a0f22: call 0x80590; cmp esi, edi; jae 0x1a0f39; lea esi, [esi]; nop; call dword ptr [esi]; 
0x000b4c0d: call 0x810b57e3; ret; 
0x000dfa71: call 0x810dfaf6; ret; 
0x00146c0d: call 0x81146ec3; ret; 
0x0016be0d: call 0x8116be71; ret; 
0x00079c57: call 0x813f0; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0008150e: call 0x81450; add esp, 0x18; pop ebx; ret; 
0x0008154e: call 0x81450; or dword ptr [esi], 8; add esp, 0x14; pop ebx; pop esi; ret; 
0x000819bf: call 0x81c40; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x0018060d: call 0x82180529; ret; 
0x0018200d: call 0x82181f0f; ret; 
0x0018240d: call 0x8218230b; ret; 
0x00182b0d: call 0x82182a04; ret; 
0x00182f0d: call 0x82182e00; ret; 
0x00118d80: call 0x82760; mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x0010af00: call 0x82760; mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 6; call dword ptr gs:[0x10]; 
0x00174458: call 0x82760; mov ecx, esi; mov edx, esi; mov edi, eax; mov eax, ebp; call dword ptr gs:[0x10]; 
0x000ddd08: call 0x82760; mov edx, eax; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x0008be41: call 0x82810; mov eax, dword ptr [ebp - 0x3c]; add esp, 0x10; call eax; 
0x0008e1fc: call 0x82fd0; add esp, 0x28; pop ebx; ret; 
0x0008f02c: call 0x82fd0; add esp, 0x2c; ret; 
0x00078ad2: call 0x83078ad7; les esi, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0013c45a: call 0x83280; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x000cd23a: call 0x83280; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0013c756: call 0x83280; add esp, 0x10; mov eax, dword ptr [esp + 0xc]; add esp, 0x18; pop ebx; ret; 
0x00080f8a: call 0x83280; add esp, 0x1c; ret; 
0x00083d81: call 0x83370; add esp, 0x1c; ret; 
0x00087d9c: call 0x836d0; add esp, 0x10; xor eax, eax; add esp, 0xc; ret; 
0x0009b3de: call 0x838baae2; add byte ptr [eax], al; add byte ptr [edi + ecx], al; inc ebp; ret 0x66c3; 
0x00128de9: call 0x83edbf1e; clc; or dword ptr [edi], ecx; xchg esi, eax; ret; 
0x000e8a64: call 0x840e8a60; ret 0x8901; 
0x0008d998: call 0x84130; add esp, 0x1c; ret; 
0x000842c0: call 0x841e0; add esp, 0x18; pop ebx; ret; 
0x000845f4: call 0x84520; add esp, 0x1c; ret; 
0x00085acf: call 0x858f0; mov ecx, dword ptr [edi + 0x10]; mov eax, 0xf0; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009169f: call 0x86d70; mov ecx, dword ptr [esp + 0x34]; mov edx, ebp; mov dword ptr [esp + 0x28], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x00092e01: call 0x87d60; xor edx, edx; mov eax, 1; call 0x92d70; mov dword ptr [esp], esi; call ebx; 
0x00084e47: call 0x886f0; add esp, 0x20; add esp, 0xc; ret; 
0x000886c5: call 0x886f0; add esp, 0x2c; ret; 
0x00085355: call 0x893fc75d; clc; call dword ptr gs:[0x10]; 
0x0009fa70: call 0x89f76f76; lock or byte ptr [ebx], dl; pop ebx; pop esi; ret; 
0x00061123: call 0x8a061122; ret; 
0x0008ad8b: call 0x8a410; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0008ae40: call 0x8a410; add esp, 0x18; pop ebx; ret; 
0x0008babd: call 0x8b960; add esp, 0x1c; ret; 
0x0014df82: call 0x8bab0; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x000909f9: call 0x8bab0; add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret; 
0x001586f1: call 0x8bf40; add esp, 0x18; lea eax, [ebx + 0xa300]; pop ebx; ret; 
0x0002475f: call 0x8bf40; add esp, 0x1c; ret; 
0x00083566: call 0x8bfc2c6c; push ecx; adc byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; ret; 
0x00104150: call 0x8d4c474; or eax, edx; pop ebx; ret; 
0x0008d7d0: call 0x8d770; add esp, 0x18; pop ebx; ret; 
0x0013fa52: call 0x8d7e6e63; dec edx; jmp dword ptr [ecx]; 
0x00097cd3: call 0x8e09766b; xchg esi, eax; lds eax, ptr [eax - 7]; call dword ptr [eax - 0x73]; 
0x00097d34: call 0x8e0976cc; xchg esi, eax; lds eax, ptr [eax - 7]; call dword ptr [eax - 0x73]; 
0x00097ecc: call 0x8e097864; xchg esi, eax; lds eax, ptr [eax - 7]; call dword ptr [eax - 0x73]; 
0x00097ef0: call 0x8e097888; xchg esi, eax; lds eax, ptr [eax - 7]; call dword ptr [eax - 0x73]; 
0x00097f14: call 0x8e0978ac; xchg esi, eax; lds eax, ptr [eax - 7]; call dword ptr [eax - 0x73]; 
0x0008da38: call 0x8e0c0; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x00091b1d: call 0x91360; cmp eax, 1; sbb eax, eax; add esp, 0x1c; ret; 
0x00092e0d: call 0x92d70; mov dword ptr [esp], esi; call ebx; 
0x00093263: call 0x931a0; add esp, 0x18; pop ebx; ret; 
0x00092ca1: call 0x932e0; add esp, 0x1c; ret; 
0x00093299: call 0x93580; add esp, 0x2c; ret; 
0x000932c9: call 0x93850; add esp, 0x2c; ret; 
0x000b96ce: call 0x941b945c; ret 0xf883; 
0x000bf336: call 0x941bf0c4; ret 0xf883; 
0x0009550f: call 0x952d0; add esp, 0x10; add esp, 0x14; pop ebx; pop esi; ret; 
0x0009be30: call 0x9be40; add esp, 0x1c; ret; 
0x000a22bb: call 0x9dbb0; add esp, 0x18; pop ebx; ret; 
0x0009b029: call 0x9eb50; add esp, 0x1c; ret; 
0x0009beed: call 0x9fad0; add esp, 0x1c; ret; 
0x0009b2e5: call 0xa2400; add esp, 0x1c; ret; 
0x0003b694: call 0xae677a9; pop ebx; and eax, 0x3ff; xor eax, edx; ret; 
0x000331d4: call 0xb44b0; add esp, 0x1c; ret; 
0x000fb429: call 0xb4980; add esp, 0x1c; ret; 
0x000b5b5b: call 0xb4c80; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00131d05: call 0xb4c80; add esp, 0x14; pop ebx; pop esi; ret; 
0x000a218f: call 0xb4c80; add esp, 0x18; pop ebx; ret; 
0x000b61b3: call 0xb4d90; add esp, 0x18; pop ebx; ret; 
0x000a253d: call 0xb4de0; add esp, 0x18; pop ebx; ret; 
0x00094719: call 0xb4de0; add esp, 0x1c; ret; 
0x00081f1c: call 0xb5370; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x00132d19: call 0xb5cc0; add esp, 0x18; pop ebx; ret; 
0x000b610c: call 0xb6030; add esp, 0x14; lea eax, [eax + ebx*4]; pop ebx; pop esi; ret; 
0x000ca0ba: call 0xb6030; add esp, 0x14; pop ebx; pop esi; ret; 
0x00132f29: call 0xb6120; add esp, 0x18; pop ebx; ret; 
0x000b650c: call 0xb6520; add esp, 0x1c; ret; 
0x0003aecb: call 0xb6740; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x000b7331: call 0xb7680; add esp, 0x2c; ret; 
0x000b73b1: call 0xb7b90; add esp, 0x2c; ret; 
0x000b7431: call 0xb8030; add esp, 0x2c; ret; 
0x000b74b1: call 0xb86d0; add esp, 0x2c; ret; 
0x000b752d: call 0xb9570; add esp, 0x1c; ret; 
0x000b75ad: call 0xbc4e0; add esp, 0x1c; ret; 
0x000b762d: call 0xbf1e0; add esp, 0x1c; ret; 
0x0008e4ff: call 0xc039e78d; ret; 
0x000c1999: call 0xc1b40; add esp, 0x1c; ret; 
0x0009afb5: call 0xc24dbfb9; ret; 
0x0009b505: call 0xc24dc509; ret; 
0x0009bf35: call 0xc24dcf39; ret; 
0x0009dba5: call 0xc24deba9; ret; 
0x000a2355: call 0xc24e3359; ret; 
0x0009af6b: call 0xc24ebf6f; ret; 
0x0009b42b: call 0xc24ec42f; ret; 
0x000c19dd: call 0xc27a0; add esp, 0x1c; ret; 
0x000b695e: call 0xc4810; add esp, 0x2c; ret; 
0x00071928: call 0xc48b1927; adc byte ptr [ecx + 0x5f5e5bf8], cl; ret; 
0x0013aad9: call 0xc497aadd; adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x13aaf0; add esp, 0x2c; ret; 
0x000cbb6d: call 0xcb230; add esp, 0x18; pop ebx; ret; 
0x000ced7c: call 0xcb230; add esp, 0x1c; ret; 
0x000ccfef: call 0xccd70; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0008fd69: call 0xccd8070; ret; 
0x000caea6: call 0xcd250; add esp, 0x1c; ret; 
0x000cf97f: call 0xcfa80; add esp, 0x2c; ret; 
0x000eb553: call 0xd2f41; inc dword ptr [ebx - 0x7c72f714]; dec edx; dec eax; stc; call dword ptr [eax + 0x55]; 
0x000d2851: call 0xd47f0; add esp, 0x2c; ret; 
0x000d2891: call 0xd6e80; add esp, 0x2c; ret; 
0x000d6fe1: call 0xd70d0; add esp, 0x10; mov eax, 1; add esp, 0xc; ret; 
0x000d6f01: call 0xd7260; add esp, 0x10; mov eax, 1; add esp, 0xc; ret; 
0x00170569: call 0xd7756; inc dword ptr [ebp - 0x761a8b40]; ret; 
0x00174937: call 0xdb040; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x001749e7: call 0xdcbb0; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x000dd69f: call 0xdd6b0; add esp, 0x1c; ret; 
0x000dd6e5: call 0xdd7f0; add esp, 0x1c; ret; 
0x000dd6c5: call 0xdd9e0; add esp, 0x1c; ret; 
0x00090403: call 0xde450; add esp, 0x1c; ret; 
0x000dea21: call 0xde870; add esp, 0x1c; ret; 
0x000df295: call 0xdef30; add esp, 0x1c; ret; 
0x000decc1: call 0xdf280; add esp, 0x1c; ret; 
0x00088a50: call 0xdf2c0; mov ecx, dword ptr [edi + 0x68]; mov edx, dword ptr [esp + 0xc]; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00083b8d: call 0xdf2c0; mov ecx, dword ptr [esi + 8]; mov edx, 0x21; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00104d61: call 0xdf340; mov edx, ebx; mov ecx, eax; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x000df64b: call 0xdf5e0; add esp, 0x1c; ret; 
0x000418a4: call 0xe087dc32; add dword ptr [ecx - 0x74d7dbbc], ecx; inc ebp; add byte ptr [ecx - 0x76dbdbbc], cl; ret 0xe283; 
0x000b8f14: call 0xe08f52a2; add dword ptr [ecx - 0x74d7dbbc], ecx; inc ebp; add byte ptr [ecx - 0x76dbdbbc], cl; ret 0xe283; 
0x000f02d2: call 0xe9ee0; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x000f0332: call 0xeaa50; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x000ed543: call 0xeacc0; add esp, 8; xor eax, eax; pop ebx; ret; 
0x00074970: call 0xec8a66eb; add al, 0x56; push dword ptr [esp + 0x38]; push edi; call dword ptr [edx + 0x1c]; 
0x00133b53: call 0xf4bc60; add byte ptr [eax], al; rol cl, 0xea; adc byte ptr [ecx + 0xf9], al; or byte ptr [edi], 0x44; ret 0x8dc3; 
0x000f8312: call 0xf7f40; test eax, eax; sete al; add esp, 0x2c; movzx eax, al; ret; 
0x00074b27: call 0xf8c8a987; add bl, byte ptr [edi + 0x5d]; ret; 
0x000faeef: call 0xfa760; add esp, 0x28; pop ebx; ret; 
0x000fae27: call 0xfad70; add esp, 0x28; pop ebx; ret; 
0x0008f587: call 0xfb090; mov dword ptr [ebx + 0x124], eax; add esp, 0x18; pop ebx; ret; 
0x00099ac1: call 0xfd9d3d8; inc edi; ret 0xc083; 
0x000f712d: call 0xfe1f634; xchg esp, eax; ret 0xd020; 
0x000f0d86: call 0xff9aa273; inc dword ptr [ebx - 0x7bf00008]; ret; 
0x00086e43: call 0xffc6549; scasd eax, dword ptr es:[edi]; ret; 
0x000d708a: call dword ptr [0x10]; cmp eax, -0x26; jne 0xd70a1; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x0010a48e: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x10a4a0; pop ebx; ret; 
0x0010b02c: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x10b040; pop ebx; ret; 
0x00115a1a: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x115a30; pop ebx; ret; 
0x0011690e: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x116920; pop ebx; ret; 
0x0011695e: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x116970; pop ebx; ret; 
0x0011a7ee: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x11a800; pop ebx; ret; 
0x0011a83e: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x11a850; pop ebx; ret; 
0x0011ea56: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x11ea68; pop ebx; ret; 
0x0012135e: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x121370; pop ebx; ret; 
0x00122fee: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x123000; pop ebx; ret; 
0x0012303e: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x123050; pop ebx; ret; 
0x0012308e: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x1230a0; pop ebx; ret; 
0x0003798f: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x379a0; pop ebx; ret; 
0x00058a1e: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x58a30; pop ebx; ret; 
0x00092c5a: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x92c70; pop ebx; ret; 
0x000938f2: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x93908; pop ebx; ret; 
0x00093ce2: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x93cf8; pop ebx; ret; 
0x000cc07c: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0xcc090; pop ebx; ret; 
0x000df69a: call dword ptr [0x10]; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x00037954: call dword ptr [0x10]; mov ebx, edx; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x00109930: call dword ptr [0x10]; mov ebx, edx; ret; 
0x0010501e: call dword ptr [0x10]; neg eax; pop ebx; ret; 
0x00115330: call dword ptr [0x10]; pop ebp; pop edi; pop ebx; ret; 
0x000de887: call dword ptr [0x10]; pop ebx; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x0008329c: call dword ptr [0x10]; pop ebx; pop esi; ret; 
0x0013eb41: call dword ptr [0x10]; pop ebx; ret; 
0x0008fe3a: call dword ptr [0x10]; ret; 
0x000e1785: call dword ptr [eax + 0x10]; 
0x000e148f: call dword ptr [eax + 0x14]; 
0x000e17a0: call dword ptr [eax + 0x18]; 
0x000658e5: call dword ptr [eax + 0x1c]; 
0x000f8ebc: call dword ptr [eax + 0x20]; 
0x0015f198: call dword ptr [eax + 0x24]; 
0x0016eb43: call dword ptr [eax + 0x28]; 
0x0007390d: call dword ptr [eax + 0x2c]; 
0x0007aba1: call dword ptr [eax + 0x30]; 
0x00075d9f: call dword ptr [eax + 0x34]; 
0x0016ed0f: call dword ptr [eax + 0x378]; add esp, 0x1c; ret; 
0x000778fb: call dword ptr [eax + 0x40]; 
0x0007cead: call dword ptr [eax + 0x48]; 
0x00021693: call dword ptr [eax + 0x50]; 
0x00061e0d: call dword ptr [eax + 0x51]; 
0x00054874: call dword ptr [eax + 0x52]; 
0x00030cc5: call dword ptr [eax + 0x53]; 
0x000919aa: call dword ptr [eax + 0x55]; 
0x0002c41a: call dword ptr [eax + 0x56]; 
0x0003ffc9: call dword ptr [eax + 0x57]; 
0x0006f37e: call dword ptr [eax + 0x5c2444c7]; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x00024d6a: call dword ptr [eax + 0x68]; 
0x00068c9e: call dword ptr [eax + 0x6a08ec83]; call dword ptr [edi - 0x75]; 
0x00020425: call dword ptr [eax + 0x6a]; 
0x001578b6: call dword ptr [eax + 0x6a]; or eax, ebp; sal dword ptr [edi + edi*8 + 0x1cc483ff], 1; ret; 
0x00157e66: call dword ptr [eax + 0x6a]; pop es; call 0x152d90; add esp, 0x1c; ret; 
0x00155f36: call dword ptr [eax + 0x6a]; push es; call 0x152d90; add esp, 0x1c; ret; 
0x0016efbe: call dword ptr [eax + 0x8244c89]; call eax; 
0x00075ec4: call dword ptr [eax + 0xc]; 
0x000fd8e8: call dword ptr [eax + 0xf]; 
0x001588eb: call dword ptr [eax + 4]; 
0x0015ac40: call dword ptr [eax + 8]; 
0x000f468e: call dword ptr [eax - 0x17]; 
0x000218f1: call dword ptr [eax - 0x18]; 
0x001552b7: call dword ptr [eax - 0x18]; add ah, byte ptr [edi + 0x2de8ffed]; out 0xfd, eax; jmp dword ptr [esi - 0x70]; 
0x0008b403: call dword ptr [eax - 0x18]; add bh, bh; jmp dword ptr [ebp - 0x39]; 
0x00102eb7: call dword ptr [eax - 0x18]; bound ebp, qword ptr [edx - 0xd]; dec dword ptr [ecx - 0x76ebdbbc]; ret; 
0x0003a657: call dword ptr [eax - 0x18]; bound edx, qword ptr [ebx - 1]; jmp dword ptr [esi - 0x70]; 
0x000ce992: call dword ptr [eax - 0x18]; daa; adc dh, dh; jmp dword ptr [esi - 0x70]; 
0x0008b46c: call dword ptr [eax - 0x18]; dec ebp; inc ebp; cli; jmp dword ptr [esi - 0x70]; 
0x00152b4c: call dword ptr [eax - 0x18]; insd dword ptr es:[edi], dx; into; in eax, dx; jmp dword ptr [esi - 0x70]; 
0x0014743a: call dword ptr [eax - 0x18]; jg 0x1473c4; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00140e44: call dword ptr [eax - 0x18]; jne 0x140e34; out dx, al; jmp dword ptr [esi - 0x70]; 
0x000cd56c: call dword ptr [eax - 0x18]; lodsd eax, dword ptr [esi]; ret; 
0x001693ff: call dword ptr [eax - 0x18]; mov edx, 0xe8ffec65; in eax, 0xa5; cld; jmp dword ptr [esi - 0x70]; 
0x0016d198: call dword ptr [eax - 0x18]; push ecx; retf 0xfff9; add esp, 0x1c; ret; 
0x00137e37: call dword ptr [eax - 0x18]; ret 0x178; 
0x00135637: call dword ptr [eax - 0x18]; ret 0x1a0; 
0x0015ed67: call dword ptr [eax - 0x18]; ret 0xed18; 
0x000478f7: call dword ptr [eax - 0x18]; ret 0xfe80; 
0x00119897: call dword ptr [eax - 0x18]; ret 7; 
0x0002acf6: call dword ptr [eax - 0x18]; ret; 
0x0014e8c2: call dword ptr [eax - 0x18]; retf; bnd jmp dword ptr [esi - 0x70]; 
0x0008a1e3: call dword ptr [eax - 0x18]; salc; push edi; cli; jmp dword ptr [esi - 0x70]; 
0x00174400: call dword ptr [eax - 0x18]; sub dword ptr [eax - 0x10], esi; jmp dword ptr [esi - 0x70]; 
0x00118335: call dword ptr [eax - 0x18]; test byte ptr [esi - 0xf], dh; jmp dword ptr [esi - 0x70]; 
0x0013f922: call dword ptr [eax - 0x18]; xchg edi, eax; add bh, ch; jmp dword ptr [esi - 0x39]; 
0x0002ef3f: call dword ptr [eax - 0x39]; 
0x0013a55c: call dword ptr [eax - 0x42]; 
0x0003ebde: call dword ptr [eax - 0x45977c27]; stc; jmp dword ptr [ebp - 0x75]; 
0x0004fae1: call dword ptr [eax - 0x48]; 
0x0011c2ee: call dword ptr [eax - 0x72f3137d]; xchg byte ptr [esi], bh; inc ebp; stc; call dword ptr [eax - 0x18]; 
0x00021fc8: call dword ptr [eax - 0x73]; 
0x0014cdef: call dword ptr [eax - 0x73]; and ebx, 0x5f; stc; call dword ptr [eax - 0x18]; ret; 
0x00135630: call dword ptr [eax - 0x73]; sbb dword ptr [esi + 0x59], -7; call dword ptr [eax - 0x18]; ret 0x1a0; 
0x00137e30: call dword ptr [eax - 0x73]; sub dword ptr [ecx], 0x5a; stc; call dword ptr [eax - 0x18]; ret 0x178; 
0x00119890: call dword ptr [eax - 0x73]; xor eax, 0x4a; stc; call dword ptr [eax - 0x18]; ret 7; 
0x000331c6: call dword ptr [eax - 0x75]; 
0x000662d7: call dword ptr [eax - 0x75]; test dword ptr [edi + esi*8 - 0x7cac0001], ecx; ret; 
0x0017245e: call dword ptr [eax - 0x76f3137d]; ret; 
0x00031381: call dword ptr [eax - 0x77]; 
0x0005cd26: call dword ptr [eax - 0x7d]; 
0x000239c5: call dword ptr [eax - 1]; 
0x00036a4d: call dword ptr [eax]; 
0x00066f4e: call dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx + 0x6785c6d3], cl; idiv edi; jmp dword ptr [eax]; 
0x0015920b: call dword ptr [eax]; mov eax, dword ptr [ebx + 4]; add esp, 0x14; push ebx; call dword ptr [eax + 0x10]; 
0x00159826: call dword ptr [eax]; mov esi, eax; mov eax, dword ptr [ebx + 4]; add esp, 0x14; push ebx; call dword ptr [eax + 0x10]; 
0x0012dc49: call dword ptr [ebp + 0x14]; 
0x00072b7c: call dword ptr [ebp + 0x1c]; 
0x0007374d: call dword ptr [ebp + 0x24]; 
0x0008073a: call dword ptr [ebp + 0x2c]; 
0x0007fd27: call dword ptr [ebp + 0x30]; 
0x00173133: call dword ptr [ebp + 0x3c]; 
0x0007c4fa: call dword ptr [ebp + 0x40]; 
0x00173f33: call dword ptr [ebp + 0x44]; 
0x0008f06c: call dword ptr [ebp + 0x50]; 
0x000945e1: call dword ptr [ebp + 0x51]; 
0x0004851b: call dword ptr [ebp + 0x53]; 
0x000d1ad9: call dword ptr [ebp + 0x55]; 
0x00057ec5: call dword ptr [ebp + 0x56]; 
0x00165579: call dword ptr [ebp + 0x56]; call edi; 
0x000f0c6f: call dword ptr [ebp + 0x57]; 
0x00167101: call dword ptr [ebp + 0x6a]; 
0x0007dbbd: call dword ptr [ebp + 0xc]; 
0x0002cf42: call dword ptr [ebp + 3]; 
0x0007a2a0: call dword ptr [ebp + 8]; 
0x00076d8d: call dword ptr [ebp - 0x18]; 
0x00020f4d: call dword ptr [ebp - 0x38]; 
0x00162e0e: call dword ptr [ebp - 0x73]; 
0x000728a7: call dword ptr [ebp - 0x75]; 
0x000858ef: call dword ptr [ebp - 0x77]; 
0x0012cc95: call dword ptr [ebp - 1]; 
0x0002167c: call dword ptr [ebp]; 
0x0012ed97: call dword ptr [ebx + 0x14]; 
0x0006870e: call dword ptr [ebx + 0x1c]; 
0x0015b8c4: call dword ptr [ebx + 0x20]; 
0x00073a9a: call dword ptr [ebx + 0x2c]; 
0x00071489: call dword ptr [ebx + 0x30]; 
0x00073b52: call dword ptr [ebx + 0x34]; 
0x00077099: call dword ptr [ebx + 0x38]; 
0x0005f1cf: call dword ptr [ebx + 0x39]; 
0x00077f33: call dword ptr [ebx + 0x40]; 
0x00070df2: call dword ptr [ebx + 0x48]; 
0x00058fa8: call dword ptr [ebx + 0x50]; 
0x0005018d: call dword ptr [ebx + 0x51]; 
0x00060e01: call dword ptr [ebx + 0x52]; 
0x000649c1: call dword ptr [ebx + 0x53]; 
0x0002e3cc: call dword ptr [ebx + 0x56]; 
0x0004fec8: call dword ptr [ebx + 0x57]; 
0x000673b9: call dword ptr [ebx + 0x57]; push dword ptr [ebp - 0x87c]; call edx; 
0x000cf2c0: call dword ptr [ebx + 0x6a]; 
0x00159601: call dword ptr [ebx + 0xc]; 
0x0006bc86: call dword ptr [ebx + 0xf]; 
0x00070fcb: call dword ptr [ebx + 8]; 
0x0005d66f: call dword ptr [ebx - 0x18]; 
0x0018f109: call dword ptr [ebx - 0x18]; jmp 0x8218ef3d; ret; 
0x00192e09: call dword ptr [ebx - 0x18]; jmp 0x82192c00; ret; 
0x00193309: call dword ptr [ebx - 0x18]; jmp 0x821930fb; ret; 
0x00107257: call dword ptr [ebx - 0x18]; ret 0xf7b4; 
0x0005880d: call dword ptr [ebx - 0x59]; 
0x0005f1c1: call dword ptr [ebx - 0x73]; 
0x0002ea86: call dword ptr [ebx - 0x75]; 
0x000c5e9f: call dword ptr [ebx - 0x77]; 
0x000505fe: call dword ptr [ebx - 0x78]; 
0x000662de: call dword ptr [ebx - 0x7d]; 
0x000662de: call dword ptr [ebx - 0x7d]; ret; 
0x001047cd: call dword ptr [ebx - 0x7f]; 
0x00040ad1: call dword ptr [ebx - 1]; 
0x0011fa4c: call dword ptr [ebx - 7]; 
0x0003a2f0: call dword ptr [ebx]; 
0x0008bf29: call dword ptr [ebx]; mov dword ptr [ebx + 8], 0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00158ca3: call dword ptr [ecx + 0x10]; 
0x0015a381: call dword ptr [ecx + 0x18]; 
0x00066a40: call dword ptr [ecx + 0x1c]; 
0x000e0e81: call dword ptr [ecx + 0x20]; 
0x0007c6ee: call dword ptr [ecx + 0x40]; 
0x0002f2a8: call dword ptr [ecx + 0x50]; 
0x0005f957: call dword ptr [ecx + 0x51]; 
0x0015ddf4: call dword ptr [ecx + 0x51]; push dword ptr [esp + 0x44]; push esi; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x0005be25: call dword ptr [ecx + 0x52]; 
0x000ced78: call dword ptr [ecx + 0x52]; push eax; call 0xcb230; add esp, 0x1c; ret; 
0x00058570: call dword ptr [ecx + 0x53]; 
0x00066dfe: call dword ptr [ecx + 0x6a]; 
0x001585a1: call dword ptr [ecx + 0xc]; 
0x001585a1: call dword ptr [ecx + 0xc]; add esp, 0x10; add esp, 0xc; ret; 
0x0015f740: call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x0004fa65: call dword ptr [ecx + 0xf]; 
0x00158a52: call dword ptr [ecx + 8]; 
0x0004e862: call dword ptr [ecx - 0x18]; 
0x001592b8: call dword ptr [ecx - 0x73]; 
0x00035aa3: call dword ptr [ecx - 0x75]; 
0x0005e192: call dword ptr [ecx - 0x77]; 
0x00065150: call dword ptr [ecx - 1]; 
0x0004f08a: call dword ptr [ecx]; 
0x0012d039: call dword ptr [edi + 0x14]; 
0x0007634f: call dword ptr [edi + 0x18]; 
0x0006dd6f: call dword ptr [edi + 0x1c]; 
0x00173d2f: call dword ptr [edi + 0x24]; 
0x000fdf4a: call dword ptr [edi + 0x29]; 
0x0007f982: call dword ptr [edi + 0x34]; 
0x0007e873: call dword ptr [edi + 0x38]; 
0x00077a75: call dword ptr [edi + 0x40]; 
0x0007df89: call dword ptr [edi + 0x44]; 
0x0007779d: call dword ptr [edi + 0x48]; 
0x0002f0fe: call dword ptr [edi + 0x50]; 
0x0003352d: call dword ptr [edi + 0x51]; 
0x0013b7c0: call dword ptr [edi + 0x52]; 
0x0004edb2: call dword ptr [edi + 0x53]; 
0x0015813d: call dword ptr [edi + 0x55]; 
0x0002ef7d: call dword ptr [edi + 0x56]; 
0x000d1a6b: call dword ptr [edi + 0x57]; 
0x00079172: call dword ptr [edi + 0x68]; 
0x000ba8de: call dword ptr [edi + 0x6a]; 
0x0005b388: call dword ptr [edi - 0x18]; 
0x000609a6: call dword ptr [edi - 0x75]; 
0x0002e47c: call dword ptr [edi - 0x77]; 
0x00061a4d: call dword ptr [edi - 0x7d]; 
0x0011bb98: call dword ptr [edi - 0x7f]; 
0x0004ec10: call dword ptr [edi - 1]; 
0x0005838d: call dword ptr [edi]; 
0x00158e50: call dword ptr [edx + 0x10]; 
0x00161fbf: call dword ptr [edx + 0x14]; 
0x0015a4d5: call dword ptr [edx + 0x18]; 
0x000671e0: call dword ptr [edx + 0x1c]; 
0x0005f1c8: call dword ptr [edx + 0x2b]; 
0x0016e94a: call dword ptr [edx + 0x380]; mov dword ptr [ebx + 0xc], eax; add esp, 0x28; pop ebx; ret; 
0x0007d1bd: call dword ptr [edx + 0x40]; 
0x00024132: call dword ptr [edx + 0x50]; 
0x0004e8b1: call dword ptr [edx + 0x51]; 
0x00094715: call dword ptr [edx + 0x51]; push eax; call 0xb4de0; add esp, 0x1c; ret; 
0x0002f97c: call dword ptr [edx + 0x52]; 
0x00053e80: call dword ptr [edx + 0x53]; 
0x0005f2e1: call dword ptr [edx + 0x56]; 
0x000cf46b: call dword ptr [edx + 0x57]; 
0x0016e39b: call dword ptr [edx + 0x68]; 
0x00054b62: call dword ptr [edx + 0x6a]; 
0x0015dce6: call dword ptr [edx + 0xc]; 
0x00158904: call dword ptr [edx + 4]; 
0x0015ddaa: call dword ptr [edx + 8]; 
0x00131788: call dword ptr [edx - 0x17]; 
0x0002e4ca: call dword ptr [edx - 0x18]; 
0x00131404: call dword ptr [edx - 0x3f]; 
0x0002283c: call dword ptr [edx - 0x73]; 
0x000358e1: call dword ptr [edx - 0x75]; 
0x0005058b: call dword ptr [edx - 0x77]; 
0x00104e87: call dword ptr [edx - 0x7d]; 
0x0002c2fa: call dword ptr [edx - 1]; 
0x0009a402: call dword ptr [edx]; 
0x00075bbd: call dword ptr [esi + 0x10]; 
0x0012d9ff: call dword ptr [esi + 0x14]; 
0x000763e7: call dword ptr [esi + 0x18]; 
0x0006d989: call dword ptr [esi + 0x1c]; 
0x0007d692: call dword ptr [esi + 0x20]; 
0x0010c42d: call dword ptr [esi + 0x24]; 
0x0007bfc0: call dword ptr [esi + 0x30]; 
0x0002c2a8: call dword ptr [esi + 0x31]; 
0x0007c68b: call dword ptr [esi + 0x3c]; 
0x00071315: call dword ptr [esi + 0x40]; 
0x0007dde7: call dword ptr [esi + 0x44]; 
0x0004fd74: call dword ptr [esi + 0x50]; 
0x0002e2d5: call dword ptr [esi + 0x51]; 
0x0006cb98: call dword ptr [esi + 0x52]; 
0x00021424: call dword ptr [esi + 0x53]; 
0x0004ec3c: call dword ptr [esi + 0x56]; 
0x001601d9: call dword ptr [esi + 0x57]; 
0x0003ff99: call dword ptr [esi + 0x6a]; 
0x0007f3d7: call dword ptr [esi + 0xc]; 
0x000319b5: call dword ptr [esi - 0x18]; 
0x000fec87: call dword ptr [esi - 0x18]; ret 0xf214; 
0x000e3d9e: call dword ptr [esi - 0x18]; stosd dword ptr es:[edi], eax; ret; 
0x00159242: call dword ptr [esi - 0x42]; 
0x000334ea: call dword ptr [esi - 0x73]; 
0x000d66af: call dword ptr [esi - 0x75]; 
0x000592f5: call dword ptr [esi - 0x77]; 
0x000c6f40: call dword ptr [esi - 0x78]; 
0x0002dda0: call dword ptr [esi - 1]; 
0x0015ac52: call dword ptr [esi]; 
0x0002154a: call dword ptr gs:[0x10]; 
0x0010a48d: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x10a4a0; pop ebx; ret; 
0x0010b02b: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x10b040; pop ebx; ret; 
0x00115a19: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x115a30; pop ebx; ret; 
0x0011690d: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x116920; pop ebx; ret; 
0x0011695d: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x116970; pop ebx; ret; 
0x0011a7ed: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x11a800; pop ebx; ret; 
0x0011a83d: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x11a850; pop ebx; ret; 
0x0011ea55: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x11ea68; pop ebx; ret; 
0x0012135d: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x121370; pop ebx; ret; 
0x00122fed: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x123000; pop ebx; ret; 
0x0012303d: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x123050; pop ebx; ret; 
0x0012308d: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x1230a0; pop ebx; ret; 
0x0003798e: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x379a0; pop ebx; ret; 
0x00058a1d: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x58a30; pop ebx; ret; 
0x00092c59: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x92c70; pop ebx; ret; 
0x000938f1: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x93908; pop ebx; ret; 
0x00093ce1: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x93cf8; pop ebx; ret; 
0x000cc07b: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xcc090; pop ebx; ret; 
0x000df699: call dword ptr gs:[0x10]; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x00037953: call dword ptr gs:[0x10]; mov ebx, edx; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x0010992f: call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0010501d: call dword ptr gs:[0x10]; neg eax; pop ebx; ret; 
0x0011532f: call dword ptr gs:[0x10]; pop ebp; pop edi; pop ebx; ret; 
0x000de886: call dword ptr gs:[0x10]; pop ebx; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x0008329b: call dword ptr gs:[0x10]; pop ebx; pop esi; ret; 
0x0013eb40: call dword ptr gs:[0x10]; pop ebx; ret; 
0x0008fe39: call dword ptr gs:[0x10]; ret; 
0x00021517: call eax; 
0x00171fd1: call eax; cdq; add esp, 0x10; add esp, 0xc; ret; 
0x00027343: call ebx; 
0x00092e15: call ebx; add esp, 0x14; xor eax, eax; pop ebx; pop esi; ret; 
0x00121308: call ebx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x00022986: call ecx; 
0x00023743: call edi; 
0x0002ccaf: call edx; 
0x0011d787: call edx; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0012372a: call edx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x000225d6: call esi; 
0x0011d777: call esi; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00074906: call esp; 
0x000677df: call ptr [eax + 0xf]; xchg esp, eax; ret 0x5352; 
0x00074354: call ptr [ebx + 0x5e]; mov eax, ecx; pop edi; ret; 
0x0002b743: call ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x00058aa6: call ptr [ebx + 0x5e]; pop edi; ret; 
0x00037758: call ptr [ebx + 0x5e]; ret; 
0x0009c133: call ptr [ebx + 0xf]; inc esp; ret 0xc083; 
0x000761b3: call ptr [ebx - 0x75]; add bl, byte ptr [esi + 0x5f]; ret; 
0x000723d4: call ptr [ebx - 0x77]; clc; pop esi; pop edi; pop ebp; ret; 
0x00058b0e: call ptr [ebx - 0x77]; rcr byte ptr [esi + 0x5f], 1; pop ebp; ret; 
0x000dfd01: call ptr [ebx - 0x7d]; cmp al, 1; mov eax, 0x7f; cmovne eax, edx; ret; 
0x00029dbd: call ptr [ebx]; add byte ptr [ebx - 0x72bbdb8c], cl; xchg byte ptr [eax + 0x69], ah; stc; call dword ptr [eax + 0x68]; 
0x00037373: call ptr [ecx + 0x5a]; ret; 
0x000a9c68: call ptr [edi + 0x5b]; ret; 
0x000ac422: call ptr [edi + 0x5e]; pop ebx; ret; 
0x0014ca45: call ptr [edi + ecx]; xchg edi, eax; ret 0xd008; 
0x001963e1: call ptr [edi]; add byte ptr [eax], al; jne 0x196100; xor eax, eax; pop edi; ret; 
0x00076d6d: call ptr [edi]; mov edx, edi; pop edi; pop ebp; ret; 
0x001280f2: call ptr [edx + 0x59]; pop eax; ret; 
0x000b4c50: call ptr [esi + 0x5b]; ret; 
0x0003bd53: call ptr [esi + 0x5f]; pop ebp; ret; 
0x0007226d: call ptr [esi + 0x5f]; ret; 
0x000384d6: cdq; adc eax, dword ptr [eax]; add eax, 0x1f1b27; mov eax, dword ptr [eax + 0x64]; ret; 
0x000384b6: cdq; adc eax, dword ptr [eax]; add eax, 0x1f1b47; mov eax, dword ptr [eax + 0x68]; ret; 
0x00159186: cdq; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b34c4], al; ret; 
0x0016c0c5: cdq; add byte ptr [esi + 0x728d0000], ah; jmp dword ptr [esi - 0x7d]; 
0x00171fd3: cdq; add esp, 0x10; add esp, 0xc; ret; 
0x0009bf34: cdq; call 0xc24dcf39; ret; 
0x00131b16: cdq; cmc; inc dword ptr [ebx - 0x6d72fe1d]; mov al, byte ptr [0xffff536]; inc esp; ret 0xc35b; 
0x00118d82: cdq; idiv bh; mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x0003ab9c: cdq; idiv dword ptr [esp + 0xc]; mov dword ptr [ecx], eax; mov eax, ecx; mov dword ptr [ecx + 4], edx; ret 4; 
0x000d6df8: cdq; loope 0xd6dfa; call dword ptr [ecx + 0x52]; 
0x000b3679: cdq; notrack jmp ecx; lea esi, [esi]; pop ebx; pop esi; ret; 
0x000abc83: cdq; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00136785: cdq; out dx, al; jmp dword ptr [ebp - 0x75]; 
0x0013620c: cdq; pop ecx; stc; call dword ptr [eax - 0x18]; 
0x00078809: cdq; push 1; push edx; push eax; push ebx; call dword ptr [edi + 0x40]; 
0x00174255: cdq; push 1; push edx; push eax; push esi; call dword ptr [edi + 0x40]; 
0x0011f92d: cdq; push ecx; stc; call dword ptr [eax + 0x57]; 
0x000caec3: cdq; push edx; push eax; call 0xcd250; add esp, 0x1c; ret; 
0x0017319b: cdq; push edx; push eax; push ebx; call dword ptr [ebp + 0x40]; 
0x0007c6ea: cdq; push edx; push eax; push ebx; call dword ptr [ecx + 0x40]; 
0x0006e613: cdq; ret 0xffff; 
0x000da5a9: cdq; stc; call dword ptr [eax - 0x18]; 
0x000cdee7: cdq; stc; call dword ptr [eax - 0x73]; 
0x000cd582: cdq; stc; call dword ptr [esi + 0x50]; 
0x0017a068: cdq; sti; jmp dword ptr [esi - 0x70]; 
0x00150d53: cdq; sub al, 0xfe; jmp dword ptr [esi - 0x70]; 
0x00104880: clc; adc byte ptr [edi], cl; test byte ptr [eax - 0x9fffffc], bl; ret 0xf20; 
0x0003bd4a: clc; add al, 0x74; ret 0xb85b; 
0x0010fb84: clc; add al, 0x77; adc byte ptr [ebx + 0x66082454], cl; mov dword ptr [edx + 0x3e], eax; xor eax, eax; ret; 
0x00111514: clc; add al, 0x77; adc byte ptr [ebx + 0x66082454], cl; mov dword ptr [edx + 0x42], eax; xor eax, eax; ret; 
0x00025607: clc; add al, 0x89; ret 0x2374; 
0x0008fd60: clc; add al, 0xf; xchg esp, eax; ror byte ptr [edi], 0xb6; rol byte ptr [ebx - 0x3b7cfd18], 0xc; ret; 
0x00084380: clc; add al, byte ptr [ebx + 0x28901e0]; xor eax, eax; ret; 
0x00074a79: clc; add al, byte ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x00074b2b: clc; add bl, byte ptr [edi + 0x5d]; ret; 
0x0016ab0a: clc; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg al, al; stc; call dword ptr [eax - 0x18]; 
0x000f247a: clc; add byte ptr [eax], al; add byte ptr [edi], cl; dec esp; ret 0xc183; 
0x0006e9b1: clc; add ch, byte ptr [ecx]; ret; 
0x0007904a: clc; add cl, byte ptr [ecx + 0x4c48301]; xor eax, eax; pop ebx; pop esi; ret; 
0x000947f3: clc; add cl, byte ptr [edi]; inc esp; ret 0xec83; 
0x000779d4: clc; add cl, byte ptr [edi]; scasd eax, dword ptr es:[edi]; ret 0x2999; 
0x000787df: clc; add cl, byte ptr [edi]; scasd eax, dword ptr es:[edi]; ret 0xbe0f; 
0x001658d4: clc; add cl, byte ptr [edi]; xchg esp, eax; ret 0xf883; 
0x00151452: clc; add dh, byte ptr [ebp + 0x1a]; mov eax, ecx; ret; 
0x0008d709: clc; add dh, byte ptr [edi + 0x13]; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0006fc44: clc; add dl, byte ptr [eax - 0x77]; ret; 
0x0015e7c4: clc; add dword ptr [eax + 1], edi; sbb eax, -1; add esp, 0xc; ret; 
0x0008da27: clc; add dword ptr [ebp + ecx - 0x7d], esi; les ecx, ptr [eax]; mov eax, ebx; pop ebx; ret; 
0x00090a68: clc; add dword ptr [ecx], ebx; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0008d739: clc; add dword ptr [edi + 0x13], esi; mov edx, dword ptr [esp + 4]; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x00084ba9: clc; add dword ptr [edi + 0x13], esi; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000d8bf6: clc; add dword ptr [edi + 0x16], edi; pop ebx; pop esi; pop edi; ret; 
0x000d8b80: clc; add dword ptr [edi + 0x1c], edi; add esp, 4; pop ebx; pop esi; ret; 
0x0003af95: clc; add dword ptr [edi + 0x1f], edi; add esp, 4; pop ebx; pop esi; ret; 
0x001a1054: clc; add dword ptr [edi + 0x20], edi; add esp, 4; pop ebx; pop esi; ret; 
0x00170b23: clc; add dword ptr [edi + 0x21], edi; add esp, 4; pop ebx; pop esi; ret; 
0x00170c73: clc; add dword ptr [edi + 0x21], edi; pop ebx; pop esi; pop edi; ret; 
0x0016ba62: clc; add dword ptr [edi + 0x22], edi; add esp, 8; pop ebx; ret; 
0x000cd208: clc; add dword ptr [edi + 0x24], edi; add esp, 8; pop ebx; ret; 
0x001518ef: clc; add dword ptr [edi + 0x25], edi; add esp, 8; pop ebx; ret; 
0x00120e5f: clc; add dword ptr [edi + 0x2d], edi; add esp, 8; pop ebx; ret; 
0x0007ec57: clc; add dword ptr [edi + 0x35], edi; add esp, 8; pop ebx; ret; 
0x000834dd: clc; add dword ptr [edi + 0x37], edi; pop ebx; pop esi; pop edi; ret; 
0x0014cb29: clc; add dword ptr [edi + 0x3b], edi; add esp, 4; pop ebx; pop esi; ret; 
0x0013c3f3: clc; add dword ptr [edi + 0x59], edi; add esp, 4; pop ebx; pop esi; ret; 
0x00072de1: clc; add dword ptr [edi + 0xb], edi; ret; 
0x00058c40: clc; add dword ptr [edi + 4], edi; ret; 
0x0015103b: clc; add dword ptr [edi], ecx; test dl, bh; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf00220], al; ret; 
0x00166fa7: clc; add dword ptr [edi], ecx; xchg esp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x0008474d: clc; add dword ptr [edx + 0x5f], edi; mov eax, 0x16; cmove eax, edx; ret; 
0x0013fafd: clc; add eax, 0xc; ret; 
0x0009a443: clc; add eax, dword ptr [ecx]; ret 0x38b; 
0x0008a86a: clc; add eax, dword ptr [ecx]; ret 0x8966; 
0x000b3739: clc; add eax, ecx; pop edi; ret; 
0x000858ac: clc; add esi, dword ptr [eax + ecx + 0x5b]; pop esi; pop edi; ret; 
0x000ed52d: clc; add esi, dword ptr [edi + ebx - 0x7d]; les ecx, ptr [eax]; xor eax, eax; pop ebx; ret; 
0x0002c072: clc; add esi, dword ptr [edx + ecx - 0x7d]; les ecx, ptr [eax]; pop ebx; ret; 
0x000857ce: clc; add esi, dword ptr [esi + ecx + 0x5b]; pop esi; pop edi; ret; 
0x000e8a04: clc; and al, 0xf; xchg esp, eax; ret; 
0x0003a5d1: clc; and byte ptr [ebp + ebp - 0x77], dh; ret 0xc083; 
0x000894d0: clc; and dword ptr [ebp + 4], esi; add dword ptr [edx + 4], 1; add esp, 0xc; ret; 
0x00084320: clc; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000a2718: clc; bsf edx, edx; add eax, edx; pop edi; pop esi; ret; 
0x000f7d58: clc; call dword ptr [eax - 0x73]; 
0x000be111: clc; call dword ptr [ebx - 1]; 
0x000f7f22: clc; call dword ptr [ecx + 0x6a]; 
0x0007b359: clc; call dword ptr gs:[0x10]; 
0x000da1e8: clc; call eax; 
0x0009a613: clc; call ptr [ebx + 0x5e]; pop edi; ret; 
0x0013f968: clc; cmc; je 0x13f960; add esp, 8; pop ebx; ret; 
0x000cb75e: clc; cmp al, 0xf; xchg esp, eax; ret 0xc031; 
0x0006b9e3: clc; dec dword ptr [ebp + 0x15df0684]; in al, 0xff; jmp eax; 
0x00066955: clc; dec dword ptr [ebp - 0x3ae8f97c]; jecxz 0x6695d; jmp eax; 
0x0009fcc1: clc; dec dword ptr [ebp - 0x66a2370]; call dword ptr [edx - 0x73]; 
0x0009f9fd: clc; dec dword ptr [ebp - 0x66ab770]; call dword ptr [edx - 0x73]; 
0x000c81eb: clc; dec dword ptr [ebx - 0x36377b]; call dword ptr [esi - 1]; 
0x0006b9dc: clc; dec dword ptr [ebx - 0x365f797c]; clc; dec dword ptr [ebp + 0x15df0684]; in al, 0xff; jmp eax; 
0x0006694e: clc; dec dword ptr [ebx - 0x3a5f797c]; clc; dec dword ptr [ebp - 0x3ae8f97c]; jecxz 0x6695d; jmp eax; 
0x001315c4: clc; dec dword ptr [ebx - 0x3b7c3bab]; adc byte ptr [ebp - 0x7ce4e98c], cl; ret; 
0x000bc266: clc; dec dword ptr [ebx - 0x7636cefd]; ret 0x4489; 
0x00094238: clc; dec dword ptr [ebx - 0x76e3dbbc]; add al, 0x24; call esi; 
0x000f4358: clc; dec dword ptr [ecx + 0x3ecb01d0]; jmp ebx; 
0x00038687: clc; dec dword ptr [ecx + 0xf042444]; xchg ebp, eax; ret; 
0x000889c8: clc; dec dword ptr [ecx - 0x41f7dbac]; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0005b853: clc; dec dword ptr [ecx - 0x59f7b]; dec dword ptr [edi]; test edx, esi; idiv bh; jmp dword ptr [ebp - 0x5f]; 
0x00049048: clc; dec dword ptr [edi]; inc esp; ret 0x3c83; 
0x00045675: clc; dec dword ptr [edi]; inc esp; ret 0x4489; 
0x0003f36c: clc; dec dword ptr [edi]; inc esp; ret 0x489; 
0x0004e397: clc; dec dword ptr [edi]; inc esp; ret 0x8589; 
0x000dd664: clc; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x000c69c6: clc; dec dword ptr [edi]; inc esp; ret; 
0x00065e5d: clc; dec dword ptr [edi]; test byte ptr [ebx - 0x7b000000], dl; ror byte ptr [edi], 0x84; ret; 
0x00172162: clc; dec dword ptr [edi]; test byte ptr [edi - 0x77000000], dl; ret 0xe283; 
0x00061d81: clc; dec dword ptr [edi]; test byte ptr [edi], ch; adc byte ptr [eax], al; add byte ptr [ecx], al; ret; 
0x0002e908: clc; dec dword ptr [edi]; test byte ptr [esi - 0x7c000007], dh; in al, dx; or byte ptr [ebp - 0x1af7b], cl; call dword ptr [eax - 1]; 
0x0006d681: clc; dec dword ptr [edi]; test dword ptr [edi - 0x16000020], eax; and cl, 0xff; jmp dword ptr [esi - 0x70]; 
0x0003862f: clc; dec dword ptr [edi]; xchg ebp, eax; ret 0xd321; 
0x00171f93: clc; dec dword ptr [edi]; xchg esp, eax; ret 0x1389; 
0x001574e8: clc; dec dword ptr [edi]; xchg esp, eax; ret 0xe1e9; 
0x00072318: clc; dec dword ptr [edi]; xchg esp, eax; ret; 
0x000d72ff: clc; fidiv dword ptr [ebp + 0x3d]; lea ecx, [esp + 4]; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x000d7091: clc; fidiv dword ptr [ebp + 0xc]; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x000fb249: clc; fidiv dword ptr [ebp - 0x3e]; lea esi, [esi]; lea ecx, [esp + 4]; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x001222b8: clc; fidiv dword ptr [ebp - 0x3f]; lea esi, [esi]; lea ecx, [esp + 0xc]; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x0013321d: clc; fucompi st(6); jmp dword ptr [esi - 0x70]; 
0x00131d08: clc; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0012d33e: clc; inc dword ptr [ebx - 0x3f7cef3c]; sbb al, 0x89; loope 0x12d2d2; ret 0x25; 
0x00131c4b: clc; inc dword ptr [ebx - 0xffeef3c]; pop ebx; pop esi; pop edi; ret; 
0x0003455d: clc; inc dword ptr [ecx]; fidivr dword ptr [esi]; jmp edx; 
0x000e000f: clc; inc dword ptr [ecx]; fistp qword ptr [esi]; jmp edi; 
0x000347c9: clc; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x000b5926: clc; inc dword ptr [ecx]; sar dword ptr [esi], 1; jmp ecx; 
0x00088f3b: clc; jg 0x88f37; call dword ptr [eax - 0x18]; 
0x00089c7a: clc; jg 0x89c76; call dword ptr [eax - 0x18]; 
0x0008ab7a: clc; jg 0x8ab76; call dword ptr [eax - 0x18]; 
0x0009d005: clc; jmp dword ptr [ebp - 0x75]; 
0x0009421f: clc; jmp dword ptr [ebp - 1]; 
0x000eaf5b: clc; jmp dword ptr [esi + 0xb]; 
0x0009fa1c: clc; jmp dword ptr [esi - 0x70]; 
0x0019801a: clc; jne 0x198040; pop edi; pop esi; pop ebx; ret; 
0x00068596: clc; js 0x68592; call dword ptr [eax - 0x18]; 
0x0006a0dd: clc; js 0x6a0d9; call dword ptr [eax - 0x18]; 
0x0006d83b: clc; js 0x6d837; call dword ptr [eax - 0x18]; 
0x0006f582: clc; js 0x6f57e; call dword ptr [eax - 0x18]; 
0x00171ad1: clc; ljmp 0:0x8b8ff; add esp, 0xc; ret; 
0x000d70ab: clc; ljmp 0xf00:0x3b8; inc ebp; ret 0x8dc3; 
0x0014da98: clc; lodsb al, byte ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x0017b011: clc; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017a9e1: clc; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x00189858: clc; mov dword ptr [edx - 8], ecx; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x000f0322: clc; mov dword ptr [esi + 0x20], ebx; pop ebx; pop esi; pop edi; ret; 
0x0013136a: clc; mov eax, 5; pop ebx; pop esi; pop ebp; ret; 
0x0017b477: clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00180e91: clc; mov eax, edx; pop ebx; ret; 
0x0018457b: clc; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018556b: clc; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, edx; pop ebx; ret; 
0x0018985b: clc; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x00086c21: clc; mov esi, edx; call dword ptr gs:[0x10]; 
0x0017ee5c: clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00180e8c: clc; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x0018833c: clc; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x0008fef1: clc; or al, 0x75; sub bh, byte ptr [eax + 3]; add esp, 0xc; ret; 
0x000900b3: clc; or al, 0x75; sub byte ptr [eax + 3], bh; add esp, 0xc; ret; 
0x00090439: clc; or al, 0x75; xor bh, byte ptr [eax + 3]; add esp, 0xc; ret; 
0x000abc24: clc; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00094809: clc; or byte ptr [eax], al; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00121898: clc; or byte ptr [edi], cl; xchg ebp, eax; rol byte ptr [ebx - 0x49f0d33c], 0xc0; neg eax; ret; 
0x00121857: clc; or byte ptr [edi], cl; xchg ebp, eax; rol byte ptr [ebx - 0x49f0e33c], 0xc0; neg eax; ret; 
0x00138bca: clc; or dword ptr [edi], ecx; inc edi; ret 0xf983; 
0x000c68d5: clc; or dword ptr [edi], ecx; xchg byte ptr [ebp - 0x7400000b], al; test dword ptr [ecx + ecx*8 - 0x137c0001], esi; or byte ptr [ebp - 0x35f48], cl; call dword ptr [edi + 0x53]; 
0x00128dee: clc; or dword ptr [edi], ecx; xchg esi, eax; ret; 
0x001209d3: clc; or eax, esi; pop esi; pop edi; or eax, ecx; ret; 
0x00089e4c: clc; or ecx, dword ptr [edi]; xchg dword ptr [eax - 0x45000004], ebp; or dword ptr [eax], 0xa30f0000; ret 0x830f; 
0x0008911c: clc; or ecx, dword ptr [edi]; xchg dword ptr [eax - 0x45000004], esp; or dword ptr [eax], 0xa30f0000; ret 0x830f; 
0x00094588: clc; or edi, dword ptr [eax + 8]; cmova eax, ecx; mov dword ptr [edx + 0x3b6c], eax; ret; 
0x00085768: clc; or edx, 2; call dword ptr gs:[0x10]; 
0x001a0853: clc; out 0xff, eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x00116fb2: clc; pop ds; add esp, 8; pop ebx; ret; 
0x0010a349: clc; pop ds; mov dword ptr [esp + 0xc], eax; mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00036280: clc; pop ds; not eax; and eax, edx; ret; 
0x00035f30: clc; pop ds; pop edi; not eax; and eax, edx; ret; 
0x00178226: clc; pop ds; ret; 
0x00035b6c: clc; pop ds; sub ecx, edx; not eax; and eax, ecx; ret; 
0x000b24da: clc; pop ebx; pop edi; ret; 
0x0011c091: clc; pop ebx; pop esi; pop ebp; ret; 
0x0002bc2e: clc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000581be: clc; pop ebx; pop esi; pop edi; ret; 
0x0017ae17: clc; pop ebx; ret; 
0x000723b9: clc; pop edi; pop ebp; ret; 
0x000a5ac2: clc; pop edi; pop ebx; ret; 
0x000ac6a1: clc; pop edi; pop esi; pop ebx; ret; 
0x000885e8: clc; pop edi; ret; 
0x0014d2a8: clc; pop edi; stc; call dword ptr [eax - 0x18]; 
0x000723d7: clc; pop esi; pop edi; pop ebp; ret; 
0x0017feea: clc; push 0x1c030004; mov edi, dword ptr [esi]; jmp ebx; 
0x0008bb9f: clc; push ds; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000d9748: clc; push dword ptr [eax + ecx*2 - 0x77]; ret 0xe283; 
0x00163347: clc; push dword ptr [ebp + esi*2 - 0x7d]; ret 0x3901; 
0x000802b6: clc; push dword ptr [ebp - 0x40]; add esp, 4; pop ebx; pop esi; ret; 
0x0007121b: clc; push dword ptr [ecx + ebp*4 - 0x77]; ret 0xe283; 
0x00124034: clc; push dword ptr [esp - 0x7d]; in al, dx; add al, 0x89; ret; 
0x00094576: clc; push eax; jbe 0x94580; ret; 
0x0013af34: clc; ret; 
0x000e9190: clc; sbb byte ptr [ecx], bh; ret 0x850f; 
0x0016c816: clc; stc; call dword ptr [ecx - 0x77]; 
0x0016c1c5: clc; stc; call dword ptr [edx - 0x77]; 
0x0013b194: clc; sub al, 0xf; xchg esp, eax; ret; 
0x0006076b: clc; sub cl, byte ptr [edi]; xchg esp, eax; ret; 
0x000b39b7: clc; sub eax, 0x10; pop edi; ret; 
0x000c2a1d: clc; xchg edi, eax; stc; call dword ptr [eax - 0x18]; 
0x000b40c5: clc; xor ch, ch; add eax, ecx; pop edi; ret; 
0x000848d2: clc; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0013135d: clc; xor eax, eax; pop ebx; pop esi; pop ebp; ret; 
0x000fc8cc: cld; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000dfd12: cld; add byte ptr [eax], al; pop ebx; ret; 
0x00198384: cld; add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x00195b50: cld; add dword ptr [eax], eax; add dh, dh; ret 0xf40; 
0x000dfd84: cld; add dword ptr [ebp + 0x20b8], esp; add byte ptr [edx + 0x40], bh; cmove eax, edx; ret; 
0x00041473: cld; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [edi], ecx; xor cl, bh; call dword ptr [eax - 0x18]; 
0x00094396: cld; add eax, dword ptr [eax]; add byte ptr [esi + 4], dh; ret; 
0x00125991: cld; add edx, eax; cmp ecx, edx; mov edx, 0; cmovb eax, edx; ret; 
0x001849a6: cld; and eax, 0x1c030004; mov edi, dword ptr [esi]; jmp ebx; 
0x0015a377: cld; and eax, 0xfffffffc; lea eax, [eax + edx + 0x28]; push eax; push edi; call dword ptr [ecx + 0x18]; 
0x001645c6: cld; call dword ptr [eax - 0x73]; 
0x00054b93: cld; call dword ptr [eax - 0x77]; 
0x0016da5e: cld; call dword ptr [ebp + 0x57]; 
0x000f7d57: cld; clc; call dword ptr [eax - 0x73]; 
0x0009fcc0: cld; clc; dec dword ptr [ebp - 0x66a2370]; call dword ptr [edx - 0x73]; 
0x00193db6: cld; cmp ecx, dword ptr [edx - 4]; mov eax, 0; jne 0x194000; pop ebx; ret; 
0x0019260f: cld; cmp ecx, ebx; mov eax, 0; jne 0x192d90; pop ebx; ret; 
0x00195481: cld; cmp ecx, ebx; mov eax, 0; jne 0x1956b0; pop ebx; ret; 
0x001728da: cld; dec dword ptr [ebx + 0x311c2444]; fild dword ptr [eax + 0xf72007d]; xchg esp, eax; ret; 
0x0016afac: cld; dec dword ptr [ebx - 0xf34b]; dec dword ptr [ebp - 0x64c2b7a]; call dword ptr [eax - 0x73]; 
0x000f5154: cld; inc dword ptr [ebx + 0xc8b10c4]; and al, 0x89; ret 0x448b; 
0x0011bc66: cld; inc dword ptr [ebx - 0x72affb14]; xchg byte ptr [esi + 0x4b], bl; stc; call dword ptr [eax - 1]; 
0x0016f2f0: cld; inc esi; cld; jmp dword ptr [esi - 0x70]; 
0x00072a88: cld; jl 0x72a84; jmp dword ptr [ebp - 0x75]; 
0x00086be5: cld; jle 0x86be1; call dword ptr [eax - 0x18]; 
0x000b5a8d: cld; jmp 0x838d5192; add byte ptr [eax], al; add byte ptr [edi + ecx], al; inc ebp; ret 0x66c3; 
0x0010c9d9: cld; jmp dword ptr [ebp - 0x5f]; 
0x00065c7c: cld; jmp dword ptr [esi - 0x70]; 
0x00198035: cld; jne 0x198040; pop edi; pop esi; pop ebx; ret; 
0x00198127: cld; jne 0x198130; pop ebx; ret; 
0x00026f24: cld; jo 0x26f20; call dword ptr [eax - 0x73]; 
0x00026f47: cld; jo 0x26f43; call dword ptr [eax - 0x73]; 
0x00026f6a: cld; jo 0x26f66; call dword ptr [eax - 0x73]; 
0x00026fd3: cld; jo 0x26fcf; call dword ptr [eax - 0x73]; 
0x0002702b: cld; jo 0x27027; call dword ptr [eax - 0x73]; 
0x0002704e: cld; jo 0x2704a; call dword ptr [eax - 0x73]; 
0x0015a37a: cld; lea eax, [eax + edx + 0x28]; push eax; push edi; call dword ptr [ecx + 0x18]; 
0x0002cdbe: cld; mov dword ptr [ebp - 0x40], edx; mov edx, dword ptr [ebx + edi*4 - 0x3a4]; test edx, edx; je 0x2cdcf; call edx; 
0x0017c869: cld; mov dword ptr [edx + ecx - 4], ebx; mov eax, edx; pop ebx; ret; 
0x0017ee24: cld; mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00180e54: cld; mov dword ptr [edx - 4], ecx; mov eax, edx; pop ebx; ret; 
0x00188304: cld; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x0017ee75: cld; mov dword ptr [edx - 5], ecx; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00180ea5: cld; mov dword ptr [edx - 5], ecx; mov dword ptr [edx - 4], eax; mov eax, edx; pop ebx; ret; 
0x00188355: cld; mov dword ptr [edx - 5], ecx; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x00193db9: cld; mov eax, 0; jne 0x194000; pop ebx; ret; 
0x0017b014: cld; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017cecd: cld; mov eax, edx; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x0017c86d: cld; mov eax, edx; pop ebx; ret; 
0x00166818: cld; mov ecx, 1; mov dword ptr [eax + 0xc], edx; mov eax, ecx; ret; 
0x0017a9e4: cld; pop ebx; ret; 
0x000b46c1: cld; pop edi; ret; 
0x0010ce74: cld; pop es; stc; dec dword ptr [edi]; inc esp; ret 0x4489; 
0x0015a4d2: cld; push eax; push edi; call dword ptr [edx + 0x18]; 
0x0015a45d: cld; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x0003c910: cld; push es; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0004ec40: cld; ret; 
0x00109d35: cld; sahf; stc; call dword ptr [eax - 0x18]; 
0x00198122: cld; xor eax, eax; cmp ecx, dword ptr [edx - 4]; jne 0x198130; pop ebx; ret; 
0x0005913f: cld; xor ecx, edi; call dword ptr [ebx + 0x50]; 
0x00085a12: cld; xor esi, esi; mov edx, eax; mov eax, 0xf0; or edx, 2; call dword ptr gs:[0x10]; 
0x00085762: cld; xor esi, esi; mov edx, eax; mov eax, edi; or edx, 2; call dword ptr gs:[0x10]; 
0x0008529e: cld; xor esi, esi; or eax, 2; mov edx, eax; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0003b22f: cli; adc byte ptr [ecx], ch; ret 0xc269; 
0x0014b86d: cli; adc ch, byte ptr [ecx]; ret 0xd101; 
0x0013b9cc: cli; add al, byte ptr [eax]; add byte ptr [ebx - 0x1337a], cl; jmp dword ptr [ebp - 0x75]; 
0x00033c10: cli; add al, byte ptr [ecx - 0xccc1e]; inc dword ptr [ecx]; ret 0xd089; 
0x000dfce6: cli; add byte ptr [eax], al; add byte ptr [ebx + 0xf], bl; inc esp; ret 0x90c3; 
0x0015103f: cli; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf00220], al; ret; 
0x000dfdad: cli; add byte ptr [ecx], al; sbb dword ptr [ebp + esi*2 + 0xc], edx; lea esi, [esi]; mov eax, 0x40; ret; 
0x000764d4: cli; add ch, bl; ljmp 0x5bff:0xffffffb8; ret; 
0x000d56ed: cli; add ch, byte ptr [ecx]; ret 0x348d; 
0x000d3bcd: cli; add ch, byte ptr [ecx]; ret 0x3c8d; 
0x000cfa47: cli; add ch, byte ptr [ecx]; ret 0x48d; 
0x00085847: cli; add dh, byte ptr [ebp + eax + 0x5b]; pop esi; pop edi; ret; 
0x00104fce: cli; add dh, byte ptr [edi + 0xc]; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x00085286: cli; add dh, byte ptr [edx + edx - 0x77]; ret 0xe283; 
0x00084722: cli; add dh, byte ptr [esi + 0xa]; ret; 
0x00085746: cli; add dh, byte ptr [esi + edx - 0x77]; ret 0xe283; 
0x0008bcf1: cli; add dword ptr [ebp + 0x1b], esi; or dword ptr [eax], 0x40000000; xor eax, eax; ret; 
0x00070c27: cli; add dword ptr [edi + 0x1d], edi; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016bb6c: cli; add dword ptr [edi + 0x20], edi; add esp, 0x18; pop ebx; ret; 
0x00087f53: cli; add dword ptr [edi + 0x21], edi; add esp, 0x18; pop ebx; ret; 
0x0004a982: cli; add dword ptr [edi + 0x22], edi; add esp, 0x14; pop ebx; pop esi; ret; 
0x0013c721: cli; add dword ptr [edi + 0x23], edi; add esp, 0x18; pop ebx; ret; 
0x0016bae0: cli; add dword ptr [edi + 0x24], edi; add esp, 0x18; pop ebx; ret; 
0x0008460d: cli; add dword ptr [edi + ecx - 0x7b], esi; sal byte ptr [ebp + 0x1b], cl; and dword ptr [eax + 8], 0xfffffffe; xor eax, eax; ret; 
0x0009e28f: cli; add dword ptr [edi - 0x23], esi; pop ebx; pop esi; pop edi; ret; 
0x0008c7ae: cli; add dword ptr [edi], ecx; test dword ptr [ecx - 0x77000000], edx; ret 0xf283; 
0x0008c9be: cli; add dword ptr [edi], ecx; test dword ptr [edx - 0x77000000], esp; ret 0xf283; 
0x000c0b56: cli; add dword ptr [edi], ecx; xchg esp, eax; ret 0xd020; 
0x00043caa: cli; add dword ptr [edi], ecx; xchg esp, eax; ret 0xd120; 
0x0019c1f4: cli; add ecx, dword ptr [edi]; test dword ptr [edx + esi*8 - 1], edx; call ebx; 
0x000c49c8: cli; add ecx, dword ptr [edi]; xchg esi, eax; ret 0xc085; 
0x000c4a0c: cli; add ecx, dword ptr [edi]; xchg esi, eax; ret 0xd284; 
0x000fc1ce: cli; and byte ptr [esp + esi*4 - 0x7b], dh; ret; 
0x0007b233: cli; and eax, 0x7880e175; add dword ptr [ebx + 0x75], esi; fild dword ptr [eax - 0x76da2b83]; ret 0x5374; 
0x0008229c: cli; call dword ptr [eax + 0x6a]; 
0x001065bd: cli; call dword ptr [edi - 1]; 
0x0003859e: cli; call dword ptr gs:[0x10]; 
0x000f4357: cli; clc; dec dword ptr [ecx + 0x3ecb01d0]; jmp ebx; 
0x0011e4a2: cli; cmc; jmp dword ptr [ebp - 0x5f]; 
0x000dfeb8: cli; cmc; lodsd eax, dword ptr [esi]; add byte ptr [eax], al; setne al; ret; 
0x0012bae1: cli; cmp cl, byte ptr [edi]; xchg esp, eax; ret 0xc084; 
0x0009e84b: cli; cmp eax, 0xc083f175; add dword ptr [edx + edx*8 + 0xba], eax; add byte ptr [edi], cl; inc esp; ret 0x8dc3; 
0x000f84e7: cli; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; xor eax, eax; ret; 
0x0008f9b0: cli; dec dword ptr [ebp - 0x67d337e]; call dword ptr [eax - 0x73]; 
0x0008b452: cli; dec dword ptr [ebp - 0x67e3b79]; call dword ptr [eax - 0x73]; 
0x000894f9: cli; dec dword ptr [ebp - 0x693bf7f]; call dword ptr [eax - 0x73]; 
0x0007b8d7: cli; dec dword ptr [ebx - 0x1337d]; jmp dword ptr [ebp - 0x75]; 
0x000891c0: cli; dec dword ptr [ebx - 0x72f3db8c]; xchg byte ptr [ecx + eax*4 - 7], dl; call dword ptr [eax - 0x73]; 
0x000d77f3: cli; dec dword ptr [ebx - 0x768bdbb4]; cli; mov dword ptr [esp + 0xc], eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x00087c16: cli; dec dword ptr [ebx - 0x7872dbc4]; movsb byte ptr es:[edi], byte ptr [esi]; jg 0x87c19; call dword ptr [eax + 0x68]; 
0x00087c7c: cli; dec dword ptr [ebx - 0x7872dbc4]; movsb byte ptr es:[edi], byte ptr [esi]; jg 0x87c7f; call dword ptr [eax + 0x68]; 
0x00087b9c: cli; dec dword ptr [ebx - 0x7872dbc4]; xchg esp, eax; jg 0x87b9f; call dword ptr [eax - 0x73]; 
0x00087c5a: cli; dec dword ptr [ebx - 0x7972dbcc]; movsb byte ptr es:[edi], byte ptr [esi]; jg 0x87c5d; call dword ptr [eax - 0x73]; 
0x00087b7a: cli; dec dword ptr [ebx - 0x7972dbcc]; xchg esp, eax; jg 0x87b7d; call dword ptr [eax - 0x73]; 
0x00087c38: cli; dec dword ptr [ebx - 0x7972dbcc]; xchg esp, eax; jg 0x87c3b; call dword ptr [eax - 0x73]; 
0x000ddd0b: cli; dec dword ptr [ecx + 0x1db8c2]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00148ec1: cli; dec dword ptr [edi]; test byte ptr [edi], cl; idiv bh; dec dword ptr [ebx + 0x39702444]; ret 0x840f; 
0x00151e79: cli; dec dword ptr [edi]; test dl, bl; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x840f; 
0x000c844c: cli; idiv bh; dec dword ptr [ebx - 0x364b63]; jmp dword ptr [ebp - 0x75]; 
0x000dfc57: cli; inc dword ptr [eax]; add byte ptr [edi], cl; inc esp; ret 0xc35b; 
0x000ddd2d: cli; inc dword ptr [ebx + 0x448b10c4]; and al, 0xc; add esp, 0x18; pop ebx; ret; 
0x0007b536: cli; inc dword ptr [ebx - 0x3fceeb3c]; pop ebx; pop esi; ret; 
0x00071929: cli; inc dword ptr [ebx - 0x776ef3c]; pop ebx; pop esi; pop edi; ret; 
0x00168184: cli; inc dword ptr [ebx - 0x7cef3c]; push dword ptr [edi + edx - 0x75]; jnp 0x41a221ea; or byte ptr [ecx], bh; ret 0x2675; 
0x00073281: cli; inc dword ptr [ebx - 0xf76ef3c]; add esp, 4; pop ebx; pop esi; ret; 
0x000a2566: cli; inc eax; ja 0xa2571; mov eax, dword ptr [ecx + edx*4 - 0x9c0]; ret; 
0x000a2596: cli; inc eax; ja 0xa25a1; mov eax, dword ptr [ecx + edx*4 - 0x8a0]; ret; 
0x00121f69: cli; je 0x121fbb; pop ebx; pop esi; ret; 
0x000c15c2: cli; jecxz 0xc15bb; dec dword ptr [ebx - 0x72dbdb84]; xchg dword ptr [edi + edx*4], esp; stc; call dword ptr [eax - 0x73]; 
0x000869a7: cli; jmp dword ptr [ebp - 0x5f]; 
0x0007e3d0: cli; jmp dword ptr [ebp - 0x75]; 
0x00139cc4: cli; jmp dword ptr [esi - 0x3f]; 
0x00139cc4: cli; jmp dword ptr [esi - 0x3f]; ret; 
0x00071178: cli; jmp dword ptr [esi - 0x70]; 
0x00086a3a: cli; lea ecx, [eax + 0x47c]; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x00188424: cli; mov dword ptr [edx - 6], ecx; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; pop ebx; ret; 
0x000d77fa: cli; mov dword ptr [esp + 0xc], eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x00109dcf: cli; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000386bd: cli; mov dword ptr [esp + 8], eax; mov eax, 0x1a5; call dword ptr gs:[0x10]; 
0x00038665: cli; mov dword ptr [esp + 8], eax; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x0010a95b: cli; mov dword ptr [esp + 8], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x001253cc: cli; mov edi, ebp; call dword ptr gs:[0x10]; 
0x0017b054: cli; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017aa24: cli; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x0017ef57: cli; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00180f77: cli; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, edx; pop ebx; ret; 
0x00188427: cli; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; pop ebx; ret; 
0x000bdbf1: cli; or al, byte ptr [ebx - 0x3f7cff2f]; add al, 0x39; ret; 
0x0003eec2: cli; or bh, bh; dec dword ptr [ebx - 0x72ebdb84]; xchg dword ptr [esi + esi*2 - 7], ebx; call dword ptr [eax + 0x68]; 
0x000fd06a: cli; or cl, byte ptr [edi]; xchg ebp, eax; ret 0xd120; 
0x000401f4: cli; or dword ptr [edi], ecx; xchg edi, eax; ret 0xd284; 
0x0009b101: cli; or dword ptr [edi], ecx; xchg esi, eax; ret 0xb60f; 
0x0012842e: cli; or dword ptr [edi], ecx; xchg esi, eax; ret; 
0x00132268: cli; out dx, al; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00111a7f: cli; pop ds; call dword ptr gs:[0x10]; 
0x00076d26: cli; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0007d86f: cli; pop edi; pop ebp; mov eax, edx; ret; 
0x00076d70: cli; pop edi; pop ebp; ret; 
0x00196212: cli; pop edi; ret; 
0x000f9ac2: cli; pop esi; dec dword ptr [ebx - 0x18f43]; dec dword ptr [ebp - 0x6656b79]; call dword ptr [eax + 0x68]; 
0x001732b4: cli; push dword ptr [ebp + eax + 1]; ret 0x5689; 
0x001547df: cli; push dword ptr [ebx - 0x75]; test byte ptr [esp + esi*8], ah; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x840f; 
0x00173e42: cli; push dword ptr [edx + ecx - 0x77]; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x00139cc2: cli; push ebp; cli; jmp dword ptr [esi - 0x3f]; 
0x00139cc2: cli; push ebp; cli; jmp dword ptr [esi - 0x3f]; ret; 
0x000375f2: cli; ret; 
0x00073c9f: cli; retf; cli; jmp dword ptr [esi - 0x70]; 
0x000e918d: cli; sbb cl, al; clc; sbb byte ptr [ecx], bh; ret 0x850f; 
0x0004ddc2: cli; sbb edi, esi; dec dword ptr [ebx - 0x72ebdb84]; xchg dword ptr [esi + esi*2 - 7], ebx; call dword ptr [eax + 0x68]; 
0x001475b7: cli; sub al, 0xf; xchg ebp, eax; ret 0xd184; 
0x0002c388: cli; sub al, 0xf; xchg esp, eax; ret 0xca08; 
0x0006fd36: cli; test dword ptr [eax], eax; add byte ptr [eax], al; ja 0x6fd44; mov eax, dword ptr [ecx + edx*4 - 0xbe0]; ret; 
0x000aa037: cmc; add al, byte ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x000b3eb7: cmc; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000c9e91: cmc; and ch, 0xf; je 0xc9eb0; add eax, 2; ret; 
0x00159819: cmc; bnd call dword ptr [esi - 0x73]; 
0x00121307: cmc; call ebx; 
0x00121307: cmc; call ebx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x00165234: cmc; call ecx; 
0x000e6141: cmc; clc; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x000dfd83: cmc; cld; add dword ptr [ebp + 0x20b8], esp; add byte ptr [edx + 0x40], bh; cmove eax, edx; ret; 
0x000a1d9a: cmc; cmp edx, esi; je 0xa1d90; pop ebx; pop esi; ret; 
0x00124947: cmc; dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x001249fc: cmc; dec dword ptr [ebp - 0x76fbdbb4]; ret 0x448b; 
0x0009bf9a: cmc; dec dword ptr [ebx + 0x18499]; add dh, dh; ret; 
0x0011fe76: cmc; dec dword ptr [ebx + 0x8080]; add byte ptr [ecx - 0x6c72fbaa], cl; ret 0xf94d; 
0x0011e7d9: cmc; dec dword ptr [ebx - 0xdb7d]; inc dword ptr [ebx + 0x8b10c4]; test eax, eax; je 0x11e830; call eax; 
0x0011e91b: cmc; dec dword ptr [ebx - 0xdb7d]; inc dword ptr [ebx + 0x8b10c4]; test eax, eax; je 0x11e9c8; call eax; 
0x0009aff3: cmc; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0009c005: cmc; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x0009bfc0: cmc; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x0015b147: cmc; dec edi; in al, dx; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0011aec4: cmc; inc dword ptr [ebx + 0x1ba10c4]; add byte ptr [eax], al; add byte ptr [ebx - 0x2f76f73c], al; pop ebx; ret; 
0x0015ac33: cmc; inc dword ptr [ebx + 0x478b0cc4]; or byte ptr [ebp - 1], dl; jbe 0x15ac4b; push edi; call dword ptr [eax + 8]; 
0x0015a47b: cmc; inc dword ptr [ebx - 0x137cef3c]; or byte ptr [ebx + 0x86a0447], cl; push edi; call dword ptr [eax + 0x18]; 
0x000c415f: cmc; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x0011a152: cmc; inc dword ptr [ebx - 0x3b7cef3c]; or byte ptr [eax + 1], bh; pop ebx; ret; 
0x0009bfb7: cmc; inc dword ptr [ebx - 0x6d72fe1d]; add byte ptr [edi - 0xb], dh; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x00131b17: cmc; inc dword ptr [ebx - 0x6d72fe1d]; mov al, byte ptr [0xffff536]; inc esp; ret 0xc35b; 
0x00131bb7: cmc; inc dword ptr [ebx - 0x6d72fe1d]; rcl byte ptr [esi - 0xb]; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x0009c3a7: cmc; inc dword ptr [ebx - 0x6d72fe1d]; sal byte ptr [esi], 0xf5; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x0013f969: cmc; je 0x13f960; add esp, 8; pop ebx; ret; 
0x0011e4a4: cmc; jmp dword ptr [ebp - 0x5f]; 
0x000c5b0c: cmc; jmp dword ptr [esi - 0x70]; 
0x000dfeb9: cmc; lodsd eax, dword ptr [esi]; add byte ptr [eax], al; setne al; ret; 
0x0017aa41: cmc; mov dword ptr [edx - 7], eax; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0009d492: cmc; mov eax, ecx; ret; 
0x0017b527: cmc; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017aea7: cmc; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0015fc37: cmc; or ebp, ebp; inc dword ptr [ebx - 0x72afef3c]; or dword ptr [eax], 0xffffffb1; stc; call dword ptr [eax - 0x73]; 
0x000b418a: cmc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000a1d6a: cmc; pop ebx; ret; 
0x0013ad35: cmc; pop ebx; stc; call dword ptr [eax - 0x18]; 
0x001961d2: cmc; pop edi; ret; 
0x0009c0d8: cmc; push esi; add dword ptr [ecx + eax - 0x72ff0000], 0xf509a092; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x00131bf8: cmc; push esi; add dword ptr [ecx + eax - 0x72ff0000], 0xf50fa092; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x0009bff8: cmc; push esi; add dword ptr [ecx + eax - 0x72ff0000], 0xf50fc092; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x001951d7: cmc; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x0009458f: cmova eax, ecx; mov dword ptr [edx + 0x3b6c], eax; ret; 
0x0008d79f: cmova eax, edx; ret; 
0x000d8f24: cmova edx, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x001196bd: cmovae esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000d8d73: cmovae esi, ecx; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000b5425: cmovb eax, ecx; ret; 
0x00081570: cmovb eax, ecx; sub eax, dword ptr [edx + 0xc]; ret; 
0x00076ba3: cmovb eax, ecx; sub eax, dword ptr [edx + 8]; sar eax, 2; ret; 
0x0012599b: cmovb eax, edx; ret; 
0x00191c2a: cmovbe eax, edx; pop esi; pop ebp; pop ebx; ret; 
0x000b442f: cmovbe eax, edx; sub eax, esi; pop ebx; pop esi; ret; 
0x00088a75: cmovbe ebp, edx; jmp 0x889fa; lea esi, [esi]; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x00087e68: cmovbe ecx, edi; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x000fb30a: cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x0008274f: cmovbe edx, eax; xor eax, eax; cmp edx, dword ptr [esp + 4]; setae al; ret; 
0x0008e098: cmove eax, ecx; ret; 
0x0009c149: cmove eax, edx; add eax, 0x21; ret; 
0x0009c0fe: cmove eax, edx; add eax, 1; ret; 
0x0011ef1d: cmove eax, edx; add esp, 0xc; ret; 
0x0003e733: cmove eax, edx; add esp, 4; pop ebx; pop esi; ret; 
0x001569fd: cmove eax, edx; pop ebx; pop esi; ret; 
0x0009bfc2: cmove eax, edx; pop ebx; ret; 
0x00084759: cmove eax, edx; ret; 
0x0009391b: cmove ecx, eax; mov eax, dword ptr [edx - 0x134]; mov dword ptr [ebx + eax], ecx; mov eax, 0xffffffff; pop ebx; ret; 
0x0002f6a7: cmove ecx, eax; pop edi; pop ebp; mov eax, ecx; ret; 
0x00037800: cmove edx, eax; mov esi, 8; mov eax, 0xae; call dword ptr gs:[0x10]; 
0x0002ecb4: cmove edx, ecx; mov byte ptr [eax + 0x1155], dl; lea eax, [eax + 0x1120]; ret; 
0x000dd847: cmove esi, eax; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x0003b02c: cmove esi, eax; mov eax, esi; pop esi; pop edi; ret; 
0x0003b067: cmove esi, eax; pop ebx; mov eax, esi; pop esi; pop edi; ret; 
0x00122403: cmove esi, ebx; lea edx, [esp + 0xc]; mov ebx, dword ptr [esp + 0x50]; call dword ptr gs:[0x10]; 
0x00093f62: cmove esi, edi; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x00075877: cmovg eax, ecx; test edx, edx; jne 0x75870; ret; 
0x0007f137: cmovg eax, ecx; test edx, edx; jne 0x7f130; ret; 
0x000b5cb2: cmovg eax, edx; pop edi; ret; 
0x000b5c93: cmovg eax, edx; ret; 
0x00099b07: cmovne eax, ecx; pop ebx; ret; 
0x00078dd7: cmovne eax, ecx; ret; 
0x000b72c7: cmovne eax, edx; add esp, 0x14; pop ebx; pop esi; ret; 
0x0009eb3b: cmovne eax, edx; add esp, 0x18; pop ebx; ret; 
0x00075925: cmovne eax, edx; mov dword ptr [esi + 0x3c], eax; add esp, 4; pop ebx; pop esi; ret; 
0x0007f901: cmovne eax, edx; mov dword ptr [esi], eax; add esp, 4; pop ebx; pop esi; ret; 
0x000eac3c: cmovne eax, edx; pop ebx; pop esi; pop edi; ret; 
0x0012d29f: cmovne eax, edx; pop ebx; ret; 
0x00083e61: cmovne eax, edx; ret; 
0x0005384f: cmovne ebx, dword ptr [ebp - 0xa4]; sub esp, 4; push edi; push ebx; push dword ptr [ebp - 0x88]; call eax; 
0x000dbd23: cmovne ebx, edx; mov edx, dword ptr [esp + 0x40]; mov dword ptr [edx], ebx; add esp, 0x28; pop ebx; ret; 
0x00123890: cmovne edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x0007b19d: cmovne edx, esi; mov dword ptr [ecx], edx; pop ebx; pop esi; ret; 
0x00116ff5: cmovns eax, edx; ret; 
0x0003ab8b: cmovs eax, ecx; pop ebx; ret; 
0x0003ac8e: cmovs eax, edx; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x0012c84e: cmovs eax, edx; add esp, 8; pop ebx; ret; 
0x00024862: cmovs eax, edx; ret; 
0x0003ab88: cmovs edx, ebx; cmovs eax, ecx; pop ebx; ret; 
0x00086be4: cmp ah, 0x7e; stc; call dword ptr [eax - 0x18]; 
0x000f9f2a: cmp ah, 0xff; jmp dword ptr [esi - 0x70]; 
0x000943b7: cmp ah, 1; add byte ptr [eax], al; ret; 
0x00193926: cmp ah, byte ptr [ebx - 0x35]; add cl, byte ptr [edi]; xchg esp, eax; ret; 
0x000bc264: cmp ah, dh; clc; dec dword ptr [ebx - 0x7636cefd]; ret 0x4489; 
0x0010992b: cmp al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010992b: cmp al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x000c5092: cmp al, 0; add byte ptr [edi], cl; inc esp; ret 0x108b; 
0x000c5148: cmp al, 0; add byte ptr [edi], cl; inc esp; ret 0x4489; 
0x000b6941: cmp al, 0; add byte ptr [edi], cl; inc esp; ret 0x8b65; 
0x0013b7a9: cmp al, 0x11; add cl, byte ptr [edi]; test byte ptr [edi*8 - 0x137c0001], cl; or byte ptr [ebp - 0x6a8876d], cl; dec dword ptr [ecx - 0x48b7b]; call dword ptr [edi + 0x52]; 
0x00049e0e: cmp al, 0x24; add dword ptr [edi], ecx; xchg esp, eax; ret; 
0x000918d9: cmp al, 0x24; call esi; 
0x00171e0e: cmp al, 0x24; ret; 
0x00152d2c: cmp al, 0x29; or ecx, dword ptr [ecx + 0x4a8d293c]; add al, 0xf; xchg ebp, eax; ret; 
0x000ee3dd: cmp al, 0x29; ret 0x448b; 
0x000e5a6b: cmp al, 0x2a; je 0xe5a73; cmp al, 0x3f; jne 0xe5a89; mov eax, 1; ret; 
0x0011e706: cmp al, 0x2f; stc; call dword ptr [eax + 0x6a]; 
0x000fa6f4: cmp al, 0x2f; stc; call dword ptr [eax - 1]; 
0x0008507b: cmp al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x0012223e: cmp al, 0x31; ror byte ptr [ebx - 0x74afdba4], 0x54; and al, 0x54; lea ecx, [esp + 0x1c]; mov eax, 0x19a; call dword ptr gs:[0x10]; 
0x000c9c92: cmp al, 0x39; dec edi; cmp al, 0x75; or byte ptr [edi + 0x5e], bl; ret; 
0x000e5a6f: cmp al, 0x3f; jne 0xe5a89; mov eax, 1; ret; 
0x000cd47e: cmp al, 0x45; stc; call dword ptr [eax + 0x56]; 
0x000da1e0: cmp al, 0x4b; or dword ptr [eax], eax; add esp, 0x10; mov eax, edi; call eax; 
0x00082342: cmp al, 0x51; call eax; 
0x000821d0: cmp al, 0x51; push dword ptr [esp + 0x3c]; call eax; 
0x00078c7c: cmp al, 0x52; lea edx, [esi + 0x28]; push edx; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x00078d5b: cmp al, 0x52; lea edx, [esi + 4]; push edx; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x0011f996: cmp al, 0x52; stc; call dword ptr [ecx + 0x51]; 
0x001613a4: cmp al, 0x53; call dword ptr [eax + 0x10]; 
0x0016133f: cmp al, 0x53; call dword ptr [eax + 0x14]; 
0x0016217f: cmp al, 0x55; push edi; push esi; push eax; call dword ptr [edx]; 
0x0015dbab: cmp al, 0x56; mov eax, dword ptr [esp + 0x40]; call eax; 
0x0007d690: cmp al, 0x57; call dword ptr [esi + 0x20]; 
0x00036ec3: cmp al, 0x5b; pop esi; pop edi; pop ebp; ret 4; 
0x00024258: cmp al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x000e98ee: cmp al, 0x5b; pop esi; sar eax, 1; pop edi; pop ebp; ret; 
0x001636b7: cmp al, 0x65; sub eax, dword ptr [0x14]; jne 0x1636c5; add esp, 0x4c; ret; 
0x00163727: cmp al, 0x65; sub eax, dword ptr [0x14]; jne 0x163735; add esp, 0x4c; ret; 
0x00163797: cmp al, 0x65; sub eax, dword ptr [0x14]; jne 0x1637a5; add esp, 0x4c; ret; 
0x001637fa: cmp al, 0x65; sub eax, dword ptr [0x14]; jne 0x163808; add esp, 0x4c; ret; 
0x0016385a: cmp al, 0x65; sub eax, dword ptr [0x14]; jne 0x163868; add esp, 0x4c; ret; 
0x001638c7: cmp al, 0x65; sub eax, dword ptr [0x14]; jne 0x1638d5; add esp, 0x4c; ret; 
0x00163947: cmp al, 0x65; sub eax, dword ptr [0x14]; jne 0x163955; add esp, 0x4c; ret; 
0x0010c10c: cmp al, 0x65; sub edx, dword ptr [0x14]; jne 0x10c11d; movzx eax, al; add esp, 0x4c; ret; 
0x00163647: cmp al, 0x65; sub edx, dword ptr [0x14]; jne 0x163655; add esp, 0x4c; ret; 
0x000cae35: cmp al, 0x65; sub edx, dword ptr [0x14]; jne 0xcae44; add esp, 0x48; pop ebx; ret; 
0x000c9c95: cmp al, 0x75; or byte ptr [edi + 0x5e], bl; ret; 
0x000882ab: cmp al, 0x77; add al, 0x39; ret 0x5072; 
0x00068595: cmp al, 0x78; stc; call dword ptr [eax - 0x18]; 
0x0007be12: cmp al, 0x7e; stc; call dword ptr [eax - 0x18]; 
0x0007ff02: cmp al, 0x80; add byte ptr [eax], al; add byte ptr [ebx - 0x3f7acbc0], cl; jne 0x7ff00; ret; 
0x0011858a: cmp al, 0x81; les edx, ptr [eax + 0x5b000001]; pop esi; pop edi; ret; 
0x00057eaa: cmp al, 0x83; in al, dx; add al, 0x6a; add eax, 0xcc838d50; jb 0x57eaf; call dword ptr [eax - 0x18]; 
0x00161bef: cmp al, 0x83; in al, dx; or al, 0x55; call dword ptr [eax + 0x10]; 
0x00084ddb: cmp al, 0x83; in al, dx; or al, 0xff; jae 0x84de6; call dword ptr [ebx]; 
0x0009e5db: cmp al, 0x83; in al, dx; or byte ptr [ecx], al; ret 0x5489; 
0x0007592a: cmp al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00075dd3: cmp al, 0x83; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0002bf56: cmp al, 0x83; ret; 
0x0009096a: cmp al, 0x83; stc; call dword ptr [eax - 0x73]; 
0x000bf464: cmp al, 0x85; ror byte ptr [edi], 0x84; ret; 
0x0011c98a: cmp al, 0x89; add dword ptr [ebp - 0x547bf040], eax; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000b76e8: cmp al, 0x89; call 0x5d6ad54a; ret; 
0x0003d1f5: cmp al, 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x00115fb4: cmp al, 0x89; inc edx; xor al, 0x5b; pop esi; pop edi; ret; 
0x0012496b: cmp al, 0x89; inc esp; and al, 0x18; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000ddb66: cmp al, 0x89; inc esp; and al, 8; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x000887a6: cmp al, 0x89; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x00154d9b: cmp al, 0x89; ret; 
0x000708c9: cmp al, 0x8b; adc bh, byte ptr [ecx]; ret 0x420f; 
0x0002ff9e: cmp al, 0x8b; add al, 0x90; ret; 
0x00075daf: cmp al, 0x8b; dec eax; sbb byte ptr [ebp + 0x88a8], cl; add byte ptr [ebp + 0x84b8], cl; add byte ptr [ebp - 0x9fa8b37], al; ret 0x7408; 
0x0011ea4b: cmp al, 0x8b; dec esp; and al, 0x10; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x000ec260: cmp al, 0x8b; inc ebx; sbb al, 0x89; ret 0xc085; 
0x0004ac85: cmp al, 0x8b; jg 0x4acc1; ret; 
0x00024d64: cmp al, 0x8d; add dword ptr [eax], 0x6b; stc; call dword ptr [eax + 0x68]; 
0x00024c7e: cmp al, 0x8d; add dword ptr [eax], 0x6b; stc; call dword ptr [eax - 0x73]; 
0x0009421a: cmp al, 0x8d; pop dword ptr [eax - 0x23]; clc; jmp dword ptr [ebp - 1]; 
0x00025ffa: cmp al, 0x8d; xchg byte ptr [eax + 0x6a], ah; stc; call dword ptr [eax + 0x68]; 
0x00025ee6: cmp al, 0x8d; xchg byte ptr [eax + 0x6a], ah; stc; call dword ptr [eax - 0x73]; 
0x000263c1: cmp al, 0x8d; xchg byte ptr [eax], ah; push -7; call dword ptr [eax - 0x73]; 
0x0002601d: cmp al, 0x8d; xchg byte ptr [eax], bl; jno 0x2601c; call dword ptr [eax - 0x73]; 
0x0016134e: cmp al, 0x8d; xchg esp, eax; and al, 0x4c; add dword ptr [eax], eax; add byte ptr [edx + 0x53], dl; call dword ptr [eax + 4]; 
0x00026f21: cmp al, 0x8d; xchg esp, edi; jo 0x26f20; call dword ptr [eax - 0x73]; 
0x00026f44: cmp al, 0x8d; xchg esp, edi; jo 0x26f43; call dword ptr [eax - 0x73]; 
0x00026f67: cmp al, 0x8d; xchg esp, edi; jo 0x26f66; call dword ptr [eax - 0x73]; 
0x00026fd0: cmp al, 0x8d; xchg esp, edi; jo 0x26fcf; call dword ptr [eax - 0x73]; 
0x00027028: cmp al, 0x8d; xchg esp, edi; jo 0x27027; call dword ptr [eax - 0x73]; 
0x0002704b: cmp al, 0x8d; xchg esp, edi; jo 0x2704a; call dword ptr [eax - 0x73]; 
0x000f75ab: cmp al, 0x90; add byte ptr [edi], cl; test dword ptr [eax - 0x7c000005], ecx; ret 0x8301; 
0x0010ccec: cmp al, 0xa0; stc; call dword ptr [eax - 0x73]; 
0x00120de9: cmp al, 0xa2; stc; call dword ptr [eax - 0x18]; 
0x001a08d9: cmp al, 0xa8; test edx, edx; je 0x1a08e9; mov dword ptr [esp + 8], eax; call edx; 
0x0014b2c6: cmp al, 0xab; stc; call dword ptr [eax - 0x18]; 
0x0014e649: cmp al, 0xad; stc; call dword ptr [edx - 0x73]; 
0x00121af6: cmp al, 0xb8; add byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00121cb6: cmp al, 0xb8; cmp al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00121bd6: cmp al, 0xb8; cmp eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010a403: cmp al, 0xb8; mov word ptr [eax], es; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00074098: cmp al, 0xc8; cli; jmp dword ptr [esi - 0x70]; 
0x000583b3: cmp al, 0xc; ret 0xff50; 
0x00114965: cmp al, 0xe8; in eax, 0x3e; cld; jmp dword ptr [ebp - 0x5f]; 
0x0010da65: cmp al, 0xe8; in eax, 0xad; cld; jmp dword ptr [ebp - 0x5f]; 
0x0010c9d5: cmp al, 0xe8; jne 0x10c997; cld; jmp dword ptr [ebp - 0x5f]; 
0x000e87d8: cmp al, 0xe8; ret 0x400; 
0x0009ea47: cmp al, 0xe8; ret; 
0x0012c451: cmp al, 0xef; dec dword ptr [ecx - 0x1b17dbcc]; cmp al, 0xef; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0012c459: cmp al, 0xef; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0003ccb9: cmp al, 0xf7; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x000d258f: cmp al, 0xf; mov esi, 0x83d3890a; ret 0x8901; 
0x000cb75f: cmp al, 0xf; xchg esp, eax; ret 0xc031; 
0x0003c810: cmp al, 0xfe; jmp dword ptr [esi - 0x70]; 
0x0009ea43: cmp al, 0xff; je 0x9ea6b; cmp al, 0xe8; ret; 
0x00161338: cmp al, 0xff; jne 0x16138c; mov ebx, dword ptr [esp + 0x3c]; push ebx; call dword ptr [eax + 0x14]; 
0x00121cb8: cmp al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00121c79: cmp al, 1; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000d8f9e: cmp al, 1; add byte ptr [eax], al; xor eax, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x000dfd04: cmp al, 1; mov eax, 0x7f; cmovne eax, edx; ret; 
0x00116f14: cmp al, 1; ret 0x1389; 
0x000425e6: cmp al, 1; ret; 
0x000e021e: cmp al, 1; sete al; movzx eax, al; lea eax, [eax + eax - 1]; ret; 
0x000dfe4e: cmp al, 2; mov edx, 0xffffffff; mov eax, 0x20; cmovne eax, edx; ret; 
0x001537ee: cmp al, 2; or ecx, dword ptr [edi]; xchg ebp, eax; ret 0xc483; 
0x00152e42: cmp al, 2; or ecx, dword ptr [edi]; xchg ebp, eax; ret; 
0x000dff2e: cmp al, 2; sete al; movzx eax, al; lea eax, [eax + eax - 1]; ret; 
0x000231fc: cmp al, 3; pop ebp; les eax, ptr [ebx - 0x387cf314]; add dword ptr [ebx - 0x7d], edx; ret; 
0x00171acc: cmp al, 4; jne 0x21303; mov eax, 8; add esp, 0xc; ret; 
0x00197b72: cmp al, byte ptr [0xb48d0000]; add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; ret; 
0x0014a096: cmp al, byte ptr [eax]; add byte ptr [ebp - 0x7cc08b40], al; in al, dx; add al, 0x89; ret; 
0x0003ac4f: cmp al, byte ptr [eax]; jne 0x3ac60; add esp, 4; pop ebx; pop esi; ret; 
0x00154c2b: cmp al, byte ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x000d8741: cmp al, byte ptr [ebx + 0x5e5b70c4]; pop edi; ret; 
0x00057fad: cmp al, byte ptr [ebx - 0x7972f714]; jnp 0x57fe6; stc; call dword ptr [eax + 0x53]; 
0x00054cb5: cmp al, byte ptr [ebx - 0xf76fb3c]; pop ebx; pop esi; ret; 
0x0015e2ba: cmp al, byte ptr [ecx]; add byte ptr [eax], al; mov eax, dword ptr [ebp + 0xb0]; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x0003c8d2: cmp al, byte ptr [edi]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000b4a9d: cmp al, byte ptr [edx - 1]; jne 0xb4c4c; pop esi; xor eax, eax; pop ebx; ret; 
0x00192591: cmp al, byte ptr [edx - 1]; mov eax, 0; jne 0x192da6; pop ebx; ret; 
0x0019569b: cmp al, byte ptr [edx - 1]; mov eax, 0; jne 0x1956d0; pop ebx; ret; 
0x00092ca2: cmp al, byte ptr [esi]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x001252f3: cmp al, ch; aam 0xf5; dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x0007caa5: cmp al, ch; and eax, 0x830008d9; les ebx, ptr [eax]; pop ebx; ret; 
0x000d07a7: cmp al, ch; ret; 
0x0016b305: cmp al, ch; xor eax, 0x89fffff2; ret; 
0x000b3cb5: cmp al, dh; pop edi; ret; 
0x000775b0: cmp bh, 0x3d; stc; call dword ptr [eax - 0x18]; 
0x00035bea: cmp bh, 0xff; inc eax; shr eax, 0x1f; ret; 
0x0002007a: cmp bh, 0xff; jmp dword ptr [esi - 0x70]; 
0x0010c9d1: cmp bh, bh; je 0x10c9f9; cmp al, 0xe8; jne 0x10c997; cld; jmp dword ptr [ebp - 0x5f]; 
0x0010da61: cmp bh, bh; je 0x10da89; cmp al, 0xe8; in eax, 0xad; cld; jmp dword ptr [ebp - 0x5f]; 
0x00114961: cmp bh, bh; je 0x114989; cmp al, 0xe8; in eax, 0x3e; cld; jmp dword ptr [ebp - 0x5f]; 
0x0013a2d7: cmp bh, bh; xor byte ptr [ebx - 0x72e3dbbc], cl; add byte ptr [edx], 0x4a; stc; call dword ptr [eax + 0x6a]; 
0x0013a60e: cmp bh, bh; xor byte ptr [ebx - 0x72e3dbbc], cl; sbb cl, 0x5b; stc; call dword ptr [eax - 0x73]; 
0x001641e2: cmp bh, byte ptr [eax - 1]; inc dword ptr [ebx - 0x2776eb3c]; pop ebx; pop esi; ret; 
0x000e28a5: cmp bl, 0xff; call dword ptr [eax - 0x18]; 
0x000e2be4: cmp bl, 0xff; call dword ptr [ebx - 0x18]; 
0x00107254: cmp bl, 0xff; call dword ptr [ebx - 0x18]; ret 0xf7b4; 
0x000e208d: cmp bl, 0xff; call dword ptr [edi - 1]; 
0x000e1ea0: cmp bl, 0xff; call dword ptr [esi - 0x77]; 
0x000e6d12: cmp bl, 0xff; jmp dword ptr [ebp - 0x5f]; 
0x00074346: cmp bl, byte ptr [ebx + 0x5e]; pop edi; ret; 
0x0011613f: cmp byte ptr [0xffffeff0], ah; or eax, edx; mov dword ptr [ecx + 8], eax; xor eax, eax; pop ebx; ret; 
0x0011746e: cmp byte ptr [eax + 0x14d], bh; call dword ptr gs:[0x10]; 
0x0011763e: cmp byte ptr [eax + 0x14e], bh; call dword ptr gs:[0x10]; 
0x001196b1: cmp byte ptr [eax + 0x1a], bh; lea edi, [ebx - 1]; cmp edi, 3; cmovae esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00131784: cmp byte ptr [eax + 0x58], 0xf9; call dword ptr [edx - 0x17]; 
0x00124798: cmp byte ptr [eax + 0x66], bh; call dword ptr gs:[0x10]; 
0x00125a47: cmp byte ptr [eax + 0x75], bh; mov ebx, 0xb; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x00103b54: cmp byte ptr [eax + 0xb4], bh; call dword ptr gs:[0x10]; 
0x00103c34: cmp byte ptr [eax + 0xb5], bh; call dword ptr gs:[0x10]; 
0x000e9a5a: cmp byte ptr [eax + 1], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00140ac8: cmp byte ptr [eax + 2], 0; jne 0x140ad8; movzx eax, byte ptr [eax + 1]; shr eax, 1; ret; 
0x001978ef: cmp byte ptr [eax + eax + 0x408d0000], 0xf; pop edi; ret; 
0x000b5923: cmp byte ptr [eax - 0x1d], 0xf8; inc dword ptr [ecx]; sar dword ptr [esi], 1; jmp ecx; 
0x00120aa5: cmp byte ptr [eax - 0x5f], 0xf9; call dword ptr [eax - 0x73]; 
0x0004a087: cmp byte ptr [eax - 1], 0x2f; jne 0x4a080; add esp, 8; pop ebx; ret; 
0x001569fa: cmp byte ptr [eax], 0; cmove eax, edx; pop ebx; pop esi; ret; 
0x00118027: cmp byte ptr [eax], 0; je 0x118058; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x001180c7: cmp byte ptr [eax], 0; je 0x1180f8; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x00118173: cmp byte ptr [eax], 0; je 0x1181a8; mov edx, 0xffffffff; mov eax, 0xd0; mov ebx, edx; call dword ptr gs:[0x10]; 
0x00118253: cmp byte ptr [eax], 0; je 0x118288; mov edx, 0xffffffff; mov eax, 0xd2; mov ebx, edx; call dword ptr gs:[0x10]; 
0x000da7e7: cmp byte ptr [eax], 0; je 0xda818; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x000df3d3: cmp byte ptr [eax], 0; je 0xdf408; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x000df473: cmp byte ptr [eax], 0; je 0xdf4a8; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x000df73c: cmp byte ptr [eax], 0; je 0xdf770; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x000df7ec: cmp byte ptr [eax], 0; je 0xdf820; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x000305c1: cmp byte ptr [eax], 0; jne 0x305d0; mov eax, edx; add esp, 0xc; ret; 
0x00030601: cmp byte ptr [eax], 0; jne 0x30610; mov eax, edx; add esp, 0xc; ret; 
0x0014d7d5: cmp byte ptr [eax], 0xac; stc; call dword ptr [eax - 0x18]; 
0x000aa3d2: cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000a9c63: cmp byte ptr [eax], 1; sbb eax, -1; pop edi; pop ebx; ret; 
0x000b3ce5: cmp byte ptr [eax], ah; pop edi; ret; 
0x000f1cf1: cmp byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x001569fb: cmp byte ptr [eax], al; cmove eax, edx; pop ebx; pop esi; ret; 
0x00118028: cmp byte ptr [eax], al; je 0x118058; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x001180c8: cmp byte ptr [eax], al; je 0x1180f8; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x00118174: cmp byte ptr [eax], al; je 0x1181a8; mov edx, 0xffffffff; mov eax, 0xd0; mov ebx, edx; call dword ptr gs:[0x10]; 
0x00118254: cmp byte ptr [eax], al; je 0x118288; mov edx, 0xffffffff; mov eax, 0xd2; mov ebx, edx; call dword ptr gs:[0x10]; 
0x000da7e8: cmp byte ptr [eax], al; je 0xda818; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x000df3d4: cmp byte ptr [eax], al; je 0xdf408; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x000df474: cmp byte ptr [eax], al; je 0xdf4a8; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x000df73d: cmp byte ptr [eax], al; je 0xdf770; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x000df7ed: cmp byte ptr [eax], al; je 0xdf820; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x001708d5: cmp byte ptr [eax], al; jne 0x1708e0; add esp, 4; pop ebx; pop esi; ret; 
0x000305c2: cmp byte ptr [eax], al; jne 0x305d0; mov eax, edx; add esp, 0xc; ret; 
0x00030602: cmp byte ptr [eax], al; jne 0x30610; mov eax, edx; add esp, 0xc; ret; 
0x001938de: cmp byte ptr [eax], al; ret 0xf66; 
0x001267d2: cmp byte ptr [eax], dl; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x000b3cd5: cmp byte ptr [eax], dl; pop edi; ret; 
0x000c9c8a: cmp byte ptr [ebp + 0x13], dh; pop edi; pop esi; ret; 
0x0002b8c5: cmp byte ptr [ebp + 0x14], ah; add byte ptr [0x1fe737], al; mov eax, dword ptr [eax + 0x1014]; ret; 
0x0004a072: cmp byte ptr [ebp + 0x2c6ff42], cl; add byte ptr [ecx], bh; ret; 
0x001280c5: cmp byte ptr [ebp + 0x37050004], bl; pop ds; adc byte ptr [eax], al; mov eax, dword ptr [eax - 0xc8]; mov eax, dword ptr [eax + 0x24]; ret; 
0x00081f7b: cmp byte ptr [ebp + 0x3e], 0xf9; call dword ptr [eax + 0x6a]; 
0x000c8cff: cmp byte ptr [ebp + 0x68fff930], 0x50; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; and byte ptr [esi + 0x44], 0xf9; call dword ptr [eax - 0x18]; 
0x000c79eb: cmp byte ptr [ebp + 0x68fff930], 0x74; add eax, 0x8d500000; adc byte ptr [ecx + 0x30], 0xf9; call dword ptr [eax - 0x18]; 
0x00097e47: cmp byte ptr [ebp + 0x7c09b], cl; add byte ptr [ecx], bh; fisttp qword ptr [ebp - 0x6af0f798]; ret; 
0x000b9ed1: cmp byte ptr [ebp - 0x35f48], cl; call dword ptr [edi + 0x53]; 
0x000bdbec: cmp byte ptr [ebp - 0x57c2fa9], cl; or al, byte ptr [ebx - 0x3f7cff2f]; add al, 0x39; ret; 
0x000ba912: cmp byte ptr [ebp - 0x6463380], cl; call dword ptr [eax + 0x53]; 
0x000ba8e5: cmp byte ptr [ebp - 0x6469380], cl; call dword ptr [eax + 0x56]; 
0x000ba115: cmp byte ptr [ebp - 0x646a380], cl; call dword ptr [eax + 0x56]; 
0x00167e9e: cmp byte ptr [ebp - 0x64c5f7a], cl; call dword ptr [eax - 0x73]; 
0x00027a7d: cmp byte ptr [ebp - 0x68f1f79], cl; call dword ptr [eax - 0x73]; 
0x00027ba3: cmp byte ptr [ebp - 0x6963f79], cl; call dword ptr [eax + 0x68]; 
0x000276ae: cmp byte ptr [ebp - 0x6963f79], cl; call dword ptr [eax - 0x73]; 
0x0002a615: cmp byte ptr [ebp - 0x696df79], cl; call dword ptr [eax + 0x68]; 
0x0002a485: cmp byte ptr [ebp - 0x696df79], cl; call dword ptr [eax - 0x73]; 
0x0002a5ac: cmp byte ptr [ebp - 0x6971f79], cl; call dword ptr [eax - 0x73]; 
0x00157624: cmp byte ptr [ebp - 0x69d2380], cl; jmp dword ptr [ebp - 0x75]; 
0x00155824: cmp byte ptr [ebp - 0x69d7880], cl; jmp dword ptr [ebp - 0x75]; 
0x00154be4: cmp byte ptr [ebp - 0x69dbe80], cl; jmp dword ptr [ebp - 0x75]; 
0x000c46f4: cmp byte ptr [ebp - 0x6d4e848], cl; jmp dword ptr [ebp - 0x75]; 
0x001266fe: cmp byte ptr [ebp - 0x74f7db8c], cl; jl 0x12672a; xor al, 0xb8; jne 0x12670a; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000425e2: cmp byte ptr [ebx + 0x13c2474], cl; ret; 
0x0008e0dc: cmp byte ptr [ebx + 0x17408f8], al; ret; 
0x00082790: cmp byte ptr [ebx + 0x17408fa], al; ret; 
0x00161370: cmp byte ptr [ebx + 0x20508b00], cl; push ebx; push eax; call dword ptr [edx + 4]; 
0x000498ae: cmp byte ptr [ebx + 0x3928245c], cl; fmul dword ptr [edi]; or dword ptr [eax - 0xb], 0xffffffff; jmp ptr [ecx]; ret; 
0x00179e1d: cmp byte ptr [ebx + 0x4a], 0xf9; call dword ptr [eax + 0x53]; 
0x000d7157: cmp byte ptr [ebx + 0x4c8d08ec], al; and al, 0x1c; push ecx; mov dword ptr [esp + 0x18], ecx; push ebx; call eax; 
0x000b3181: cmp byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x0009016e: cmp byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x00075d15: cmp byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x00116a10: cmp byte ptr [ebx + 0x5e5b20c4], al; pop edi; ret; 
0x00035d30: cmp byte ptr [ebx + 0x5e5b40c4], al; pop edi; fsubp st(1); ret; 
0x00035d62: cmp byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x000db83c: cmp byte ptr [ebx + 0x5e5b6cc4], al; pop edi; pop ebp; ret; 
0x0014611a: cmp byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0006010c: cmp byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00169a1b: cmp byte ptr [ebx + 1], 0; add byte ptr [ebx + 0x45038045], cl; adc al, 0x39; ret 0x870f; 
0x001365a3: cmp byte ptr [ebx - 0x38cfdb84], cl; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0x13341], cl; jmp dword ptr [ebp - 0x5f]; 
0x001343a3: cmp byte ptr [ebx - 0x38d3db8c], cl; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0x1334a], cl; jmp dword ptr [ebp - 0x5f]; 
0x0005f206: cmp byte ptr [ebx - 0x4577b], cl; jmp ptr [ebx]; test dword ptr [eax + 0x39fffffb], edi; ret 0x1875; 
0x00121af2: cmp byte ptr [ebx - 0x47c3db8c], cl; add byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00121cb2: cmp byte ptr [ebx - 0x47c3db8c], cl; cmp al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00121bd2: cmp byte ptr [ebx - 0x47c3db8c], cl; cmp eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00063a30: cmp byte ptr [ebx - 0x50f7b], cl; dec dword ptr [ecx + 0x29008bf2]; ret 0xd189; 
0x000ddb62: cmp byte ptr [ebx - 0x76c3db8c], cl; inc esp; and al, 8; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x00098eb1: cmp byte ptr [ebx - 0x8efdbbc], cl; fdivr dword ptr [ecx]; ror byte ptr [edi], 1; xor byte ptr [eax + 2], 0; add dh, dh; ret; 
0x001422f9: cmp byte ptr [ebx], 0x2e; je 0x142308; add esp, 8; pop ebx; ret; 
0x000938e4: cmp byte ptr [ebx], 0x2f; jne 0x93930; add ebx, 1; mov eax, 0x116; call dword ptr gs:[0x10]; 
0x0010a3f9: cmp byte ptr [ecx + 0x245c8be6], cl; xor byte ptr [ebx - 0x47c3db84], cl; mov word ptr [eax], es; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00115fb1: cmp byte ptr [ecx + 0x42893c7a], cl; xor al, 0x5b; pop esi; pop edi; ret; 
0x000673a9: cmp byte ptr [ecx + ebx], 0; add byte ptr [ebx - 0x137c4fec], cl; add al, 0x89; lea edx, [edi + esi*8 - 1]; call dword ptr [ebx + 0x57]; 
0x0007be5b: cmp byte ptr [ecx + ebx], 0; cmp eax, 1; jg 0x7be70; ret; 
0x0011ed31: cmp byte ptr [ecx + ecx*4], ch; ret; 
0x0015bcb4: cmp byte ptr [ecx - 0x3b7d0000], ah; adc byte ptr [ebp - 0x7c648b40], al; in al, dx; add al, 0x83; ret; 
0x001246d4: cmp byte ptr [ecx - 0x74d7dbbc], cl; inc esp; and al, 0x64; mov dword ptr [esp + 0x2c], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00124963: cmp byte ptr [ecx - 0x74ebdbbc], cl; inc esp; and al, 0x3c; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000eddd4: cmp byte ptr [ecx - 0x74f3dbbc], cl; inc ebp; add al, 0x85; ror byte ptr [edi], 0x84; ret 1; 
0x00160fcc: cmp byte ptr [ecx - 0x76f7dbb4], cl; inc esp; and al, 4; jmp edx; 
0x0013bedd: cmp byte ptr [ecx - 0x77], bl; ret; 
0x00066017: cmp byte ptr [ecx - 7], bh; call dword ptr [eax - 0x73]; 
0x00065c61: cmp byte ptr [ecx - 7], bh; call dword ptr [edx - 0x73]; 
0x00126c2d: cmp byte ptr [ecx], 0; je 0x126c38; ret; 
0x0006e7d2: cmp byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [ebx], al; adc al, 0x86; jmp edx; 
0x000829a4: cmp byte ptr [ecx], al; je 0x829b0; ret; 
0x0003f503: cmp byte ptr [ecx], al; ret; 
0x000aa3d3: cmp byte ptr [ecx], al; sbb eax, -1; pop ebx; ret; 
0x000a9c64: cmp byte ptr [ecx], al; sbb eax, -1; pop edi; pop ebx; ret; 
0x000c9c87: cmp byte ptr [ecx], bh; dec edi; cmp byte ptr [ebp + 0x13], dh; pop edi; pop esi; ret; 
0x00072faa: cmp byte ptr [ecx], bh; ret; 
0x0016522d: cmp byte ptr [ecx], dh; rcl byte ptr [edi - 0x18], 0x3a; add al, 0xf5; call ecx; 
0x0016530d: cmp byte ptr [ecx], dh; rcl byte ptr [edi - 0x18], 0x5a; add esi, ebp; call ecx; 
0x00059352: cmp byte ptr [edi + 0x31], 0xf9; call dword ptr [eax - 0x18]; 
0x00198007: cmp byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0014459e: cmp byte ptr [edi + 0xf], ch; xchg esp, eax; ret 0xdaf7; 
0x000fa6f3: cmp byte ptr [edi + ebp], 0xf9; call dword ptr [eax - 1]; 
0x0006f97d: cmp byte ptr [edi + ecx], ah; test dword ptr [ebx - 0x16000003], edx; ret; 
0x00073d22: cmp byte ptr [edi - 0x18], dl; cmpsd dword ptr [esi], dword ptr es:[edi]; ret 0; 
0x000daa04: cmp byte ptr [edi - 0xc], dl; jmp dword ptr [ebp - 0x75]; 
0x0002e5fd: cmp byte ptr [edi], 0xe0; call dword ptr [eax - 0x73]; 
0x000f5aff: cmp byte ptr [edi], cl; mov dh, 0x1c; add dword ptr [ebp + 0xf01186c], ecx; mov dh, 4; sub dword ptr [ecx], edi; ret 0xd075; 
0x000f519c: cmp byte ptr [edi], cl; mov dh, 0xc; add ecx, dword ptr [ebp + 0xf01084c]; mov dh, 4; or edi, dword ptr [ecx]; ret 0xd375; 
0x0019ab05: cmp byte ptr [edi], cl; test dh, bl; add al, 0; add byte ptr [ebx - 0x7ac3dbbc], cl; ror byte ptr [edi], 0x84; ret; 
0x00044ce9: cmp byte ptr [edi], cl; xchg ebp, eax; ret 0x5409; 
0x000bb60c: cmp byte ptr [edi], cl; xchg edi, eax; ret; 
0x00192358: cmp byte ptr [edi], dl; ret 0x2c73; 
0x00192d19: cmp byte ptr [edi], dl; ret 0x3273; 
0x00192343: cmp byte ptr [edi], dl; ret 0x3e73; 
0x00192cff: cmp byte ptr [edi], dl; ret 0x4c73; 
0x0019232e: cmp byte ptr [edi], dl; ret 0x5073; 
0x00192319: cmp byte ptr [edi], dl; ret 0x6273; 
0x00192ce5: cmp byte ptr [edi], dl; ret 0x6673; 
0x00191c98: cmp byte ptr [edi], dl; ret 0x830f; 
0x000d0a55: cmp byte ptr [edx + 0x45], 0xf9; call dword ptr [eax + 0x56]; 
0x0013a043: cmp byte ptr [edx + 0x5b], 0xf9; call dword ptr [eax + 0x6a]; 
0x00197aac: cmp byte ptr [edx + 0xb], 0; je 0x197b32; mov eax, 0xc; pop edi; ret; 
0x00197ae4: cmp byte ptr [edx + 0xf], 0; je 0x197b46; mov eax, 0x10; pop edi; ret; 
0x0018cb94: cmp byte ptr [edx + 0xf], cl; jne 0x18c9f0; pop ebp; xor eax, eax; ret; 
0x00154efe: cmp byte ptr [edx + 2], ch; push dword ptr [esp + 0x3c]; call 0x154d40; add esp, 0x3c; ret; 
0x0003ac4e: cmp byte ptr [edx], 0; jne 0x3ac60; add esp, 4; pop ebx; pop esi; ret; 
0x00030cc1: cmp byte ptr [edx], 0x2f; stc; call dword ptr [eax + 0x53]; 
0x00160fc5: cmp byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebx + 0x4c8938c0], al; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0007fe29: cmp byte ptr [edx], ch; push edi; push esi; push ebx; call dword ptr [ebp + 0x24]; 
0x000eac7a: cmp byte ptr [edx], cl; je 0xeabe2; pop ebx; pop esi; pop edi; ret; 
0x0013bff1: cmp byte ptr [esi + 0x5c], 0xf9; call dword ptr [eax - 0x18]; 
0x0003003f: cmp byte ptr [esi + edi*8 + 0x365ffff], 5; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x00041411: cmp byte ptr [esi - 7], dh; call dword ptr [eax - 0x18]; 
0x000317a6: cmp byte ptr [esi], 0x2f; stc; call dword ptr [eax - 0x18]; 
0x00152305: cmp byte ptr [esi], 0x45; stc; call dword ptr [eax - 0x18]; 
0x000fca98: cmp ch, 0x48; stc; call dword ptr [eax + 0x56]; 
0x001924e4: cmp ch, bh; mov eax, 0; jne 0x192da6; pop ebx; ret; 
0x001955fa: cmp ch, bh; mov eax, 0; jne 0x1956d0; pop ebx; ret; 
0x00030cc2: cmp ch, byte ptr [edi]; stc; call dword ptr [eax + 0x53]; 
0x001489ac: cmp ch, byte ptr [edi]; stc; call dword ptr [eax + 0x56]; 
0x000b5724: cmp cl, 0; je 0xb572a; inc eax; sub eax, dword ptr [esp + 4]; ret; 
0x0013df00: cmp cl, 0x5c; stc; call dword ptr [eax + 0x53]; 
0x000848cd: cmp cl, byte ptr [ebx - 0x776f3b5]; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0012bae2: cmp cl, byte ptr [edi]; xchg esp, eax; ret 0xc084; 
0x0002c5d1: cmp cl, byte ptr [edi]; xchg esp, eax; ret; 
0x00192448: cmp cl, byte ptr [edx - 1]; mov eax, 0; jne 0x192da6; pop ebx; ret; 
0x0019553e: cmp cl, byte ptr [edx - 1]; mov eax, 0; jne 0x1956d0; pop ebx; ret; 
0x00194054: cmp cl, byte ptr [edx]; je 0x194070; mov eax, 1; ja 0x194061; neg eax; ret; 
0x000b4999: cmp cl, byte ptr [edx]; jne 0xb49a1; xor eax, eax; pop ebx; ret; 
0x0003e300: cmp cl, ch; ret 0xfffc; 
0x0009dd08: cmp cl, dl; je 0x9dd0d; inc eax; pop edi; ret; 
0x000fbbbb: cmp cx, 2; je 0xfbbd0; mov eax, edx; pop ebx; pop esi; ret; 
0x00192da3: cmp cx, bx; pop ebx; mov eax, 1; ja 0x192db0; neg eax; ret; 
0x0004ccd0: cmp dh, 0xff; jmp dword ptr [esi - 0x70]; 
0x00035d06: cmp dh, bl; jmp 0x5b442190; pop esi; pop edi; ret; 
0x00062b5f: cmp dh, byte ptr [esi + ebp - 0x7d]; ret 0x8904; 
0x000b5363: cmp dh, cl; jne 0xb536a; lea eax, [esi + 3]; pop esi; pop edi; ret; 
0x00195157: cmp dh, dh; ret 0x7504; 
0x0011a27b: cmp dl, 0x2c; jne 0x11a23e; pop ebx; pop esi; pop edi; ret; 
0x0002ecb1: cmp dl, 0xff; cmove edx, ecx; mov byte ptr [eax + 0x1155], dl; lea eax, [eax + 0x1120]; ret; 
0x0002c199: cmp dword ptr [eax + 0x2c], -7; call dword ptr [eax - 1]; 
0x000cce61: cmp dword ptr [eax + 0x3d], 0; add byte ptr [edi], cl; xchg ebp, eax; ret 0xb38b; 
0x0012e6f2: cmp dword ptr [eax + 0x57], -7; call dword ptr [eax + 0x57]; 
0x0013a245: cmp dword ptr [eax + 0x57], -7; call dword ptr [eax + 0x6a]; 
0x0002f8fc: cmp dword ptr [eax + 0x57], -7; call dword ptr [esi - 1]; 
0x001631d1: cmp dword ptr [eax + 0x5bffffff], 0x5e; pop edi; ret; 
0x0002c2c1: cmp dword ptr [eax + 0x71], -7; call dword ptr [eax - 0x73]; 
0x0008bdc6: cmp dword ptr [eax + 0xf0], edi; call dword ptr gs:[0x10]; 
0x001311f7: cmp dword ptr [eax + 4], ecx; jne 0x1311f0; mov eax, dword ptr [eax + 0x18]; ret; 
0x0014e257: cmp dword ptr [eax + 8], edx; jne 0x14e250; ret; 
0x000b5fc5: cmp dword ptr [eax + 8], edx; jne 0xb5fa0; lea ebx, [eax + 8]; mov eax, ebx; pop ebx; ret; 
0x0013a219: cmp dword ptr [eax - 0x5a], -7; call dword ptr [eax - 0x73]; 
0x000cdee5: cmp dword ptr [eax], -0x67; stc; call dword ptr [eax - 0x73]; 
0x000c29cb: cmp dword ptr [eax], -0x68; stc; call dword ptr [eax - 0x73]; 
0x0010cceb: cmp dword ptr [eax], -7; call dword ptr [eax - 0x73]; 
0x001708d4: cmp dword ptr [eax], 0; jne 0x1708e0; add esp, 4; pop ebx; pop esi; ret; 
0x000829a3: cmp dword ptr [eax], 1; je 0x829b0; ret; 
0x000df5ef: cmp dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00126c2e: cmp dword ptr [eax], eax; je 0x126c38; ret; 
0x00163404: cmp dword ptr [eax], ebx; je 0x163410; pop ebx; pop esi; pop edi; ret; 
0x000da5b3: cmp dword ptr [ebp + eax + 0x247c8b00], edx; or byte ptr [ebp - 0x6666379], cl; call dword ptr [eax - 0x73]; 
0x00020f41: cmp dword ptr [ebp - 0x30], 0; je 0x20f64; sub esp, 0xc; push dword ptr [ebp - 0x34]; call dword ptr [ebp - 0x38]; 
0x000c461e: cmp dword ptr [ebp - 0x74f38b01], eax; inc ecx; or byte ptr [ebx + 0x418901c0], al; or byte ptr [edi], cl; nop; ret 0x4e8b; 
0x0002ed3a: cmp dword ptr [ebx + 0x20], eax; jbe 0x2ed56; mov edx, dword ptr [ebx + eax*4 + 0x24]; pop ebx; mov eax, edx; ret; 
0x0005b881: cmp dword ptr [ebx - 0x5db43], ecx; dec dword ptr [ecx + 0x29078bca]; ret 0x953b; 
0x00141649: cmp dword ptr [ebx - 0x68f0f001], eax; ret 0xf839; 
0x000e698e: cmp dword ptr [ebx - 0x7ae7dbbc], ecx; ror byte ptr [edi], 0x95; ret 0xb48d; 
0x00085966: cmp dword ptr [ebx - 0x7cf7dbac], ecx; ret 0x8b04; 
0x00066a30: cmp dword ptr [ebx - 0x7cfffff4], -0x14; add al, 0x53; push eax; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x000fb3d4: cmp dword ptr [ecx + 0x10], edx; jb 0xfb3e1; setne al; movzx eax, al; neg eax; ret; 
0x0012a003: cmp dword ptr [ecx + 0x56], -7; call dword ptr [eax - 0x18]; 
0x000213ed: cmp dword ptr [ecx + 0x94], edx; jne 0x213c2; ret; 
0x0014ab79: cmp dword ptr [ecx + 2], esi; je 0x14ab88; pop ebx; pop esi; ret; 
0x000fb404: cmp dword ptr [ecx + 4], edx; ja 0xfb40f; setne al; movzx eax, al; ret; 
0x000d742a: cmp dword ptr [ecx + 8], 0x3b9ac9ff; ja 0xd74c0; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x00127a98: cmp dword ptr [ecx + 8], edx; jb 0x127aa5; seta al; movzx eax, al; neg eax; ret; 
0x0016f314: cmp dword ptr [ecx + 8], edx; jb 0x16f321; seta al; movzx eax, al; neg eax; ret; 
0x000dfd03: cmp dword ptr [ecx + eax], 0x26; mov eax, 0x7f; cmovne eax, edx; ret; 
0x000e021d: cmp dword ptr [ecx + eax], 0x26; sete al; movzx eax, al; lea eax, [eax + eax - 1]; ret; 
0x00052101: cmp dword ptr [ecx], 0x31; stc; call dword ptr [eax - 0x18]; 
0x0006ab73: cmp dword ptr [ecx], 0x31; stc; call dword ptr [eax - 0x77]; 
0x00090b91: cmp dword ptr [ecx], 2; je 0x90b52; pop ebx; pop esi; ret; 
0x000b3cf6: cmp dword ptr [ecx], eax; clc; pop edi; ret; 
0x0005a80e: cmp dword ptr [ecx], edi; ret 0x840f; 
0x00052102: cmp dword ptr [ecx], esi; stc; call dword ptr [eax - 0x18]; 
0x0006ab74: cmp dword ptr [ecx], esi; stc; call dword ptr [eax - 0x77]; 
0x000c9bae: cmp dword ptr [edi + 0x10], ecx; jne 0xc9ca0; pop edi; pop esi; ret; 
0x000c9bc3: cmp dword ptr [edi + 0x14], ecx; jne 0xc9ca0; pop edi; pop esi; ret; 
0x000c9bd8: cmp dword ptr [edi + 0x18], ecx; jne 0xc9ca0; pop edi; pop esi; ret; 
0x000c9bf3: cmp dword ptr [edi + 0x1c], ecx; jne 0xc9ca0; pop edi; pop esi; ret; 
0x000c9c0e: cmp dword ptr [edi + 0x20], ecx; jne 0xc9ca0; pop edi; pop esi; ret; 
0x000c9c23: cmp dword ptr [edi + 0x24], ecx; jne 0xc9ca0; pop edi; pop esi; ret; 
0x000c9c38: cmp dword ptr [edi + 0x28], ecx; jne 0xc9ca0; pop edi; pop esi; ret; 
0x000c9c43: cmp dword ptr [edi + 0x2c], ecx; jne 0xc9ca0; pop edi; pop esi; ret; 
0x000c9c5e: cmp dword ptr [edi + 0x30], ecx; jne 0xc9ca0; pop edi; pop esi; ret; 
0x000c9c73: cmp dword ptr [edi + 0x34], ecx; jne 0xc9ca0; pop edi; pop esi; ret; 
0x000c9c88: cmp dword ptr [edi + 0x38], ecx; jne 0xc9ca0; pop edi; pop esi; ret; 
0x000c9c93: cmp dword ptr [edi + 0x3c], ecx; jne 0xc9ca0; pop edi; pop esi; ret; 
0x000c9b2b: cmp dword ptr [edi + 0xc], ecx; jne 0xc9ca0; xor eax, eax; pop edi; pop esi; ret; 
0x000c9b78: cmp dword ptr [edi + 8], ecx; jne 0xc9ca0; pop edi; pop esi; ret; 
0x0011e705: cmp dword ptr [edi + ebp], -7; call dword ptr [eax + 0x6a]; 
0x00163467: cmp dword ptr [edi], ebx; jg 0x163450; pop ebx; pop esi; pop edi; ret; 
0x000c9b4d: cmp dword ptr [edi], ecx; jne 0xc9ca0; pop edi; pop esi; ret; 
0x000fc283: cmp dword ptr [edi], esi; dec dword ptr [ebx - 0x7872dbc4]; dec esp; sahf; stc; call dword ptr [eax - 0x73]; 
0x0008ea40: cmp dword ptr [edx + 0x10], ecx; je 0x8ea50; ret; 
0x00078dd4: cmp dword ptr [edx + 0x24], eax; cmovne eax, ecx; ret; 
0x000c9f76: cmp dword ptr [edx + eax*4 + 4], 0; lea ecx, [eax + 1]; jne 0xc9f58; mov eax, ecx; ret; 
0x000dfe4d: cmp dword ptr [edx + eax], 0x26; mov edx, 0xffffffff; mov eax, 0x20; cmovne eax, edx; ret; 
0x000dff2d: cmp dword ptr [edx + eax], 0x26; sete al; movzx eax, al; lea eax, [eax + eax - 1]; ret; 
0x0011f995: cmp dword ptr [edx + edx*2], -7; call dword ptr [ecx + 0x51]; 
0x00120de8: cmp dword ptr [edx], -7; call dword ptr [eax - 0x18]; 
0x00090b92: cmp dword ptr [edx], eax; je 0x90b52; pop ebx; pop esi; ret; 
0x00091202: cmp dword ptr [edx], ecx; jl 0x911f8; je 0x91213; xor eax, eax; pop ebx; ret; 
0x0009124a: cmp dword ptr [edx], ecx; jl 0x91240; mov edx, 0; cmovne eax, edx; ret; 
0x001693db: cmp dword ptr [esi + 0x65], -7; call dword ptr [eax - 0x18]; 
0x001972b6: cmp dword ptr [esi + 0xf], esp; xlatb; ret 0x498d; 
0x00126520: cmp dword ptr [esi + 4], ebp; je 0x126580; mov ebx, dword ptr [esp + 0x50]; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x00083054: cmp dword ptr [esi + 4], edx; je 0x830f0; mov eax, 0x1a6; xor edx, edx; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000e95da: cmp dword ptr [esi + ecx*4], ebx; je 0xe95f0; pop ebx; pop esi; ret; 
0x0007be11: cmp dword ptr [esi + edi*2], -7; call dword ptr [eax - 0x18]; 
0x0010d271: cmp dword ptr [esi], 0x45; stc; call dword ptr [eax - 0x18]; 
0x000eb6ce: cmp dword ptr [esi], 0x48; stc; call dword ptr [eax + 0x55]; 
0x00084bd8: cmp dword ptr [esp + 0x10], 0x20; je 0x84be8; add esp, 8; pop ebx; ret; 
0x000d6ee9: cmp dword ptr [esp + 0x14], 1; je 0xd6ef8; add esp, 0xc; ret; 
0x000d6fc9: cmp dword ptr [esp + 0x14], 1; je 0xd6fd8; add esp, 0xc; ret; 
0x00038514: cmp dword ptr [esp + 4], 0; je 0x38530; lea ecx, [eax + 1]; mov dword ptr [edx + 0x68], ecx; ret; 
0x000827c4: cmp dword ptr [esp + 4], 1; je 0x827d8; mov eax, dword ptr gs:[8]; mov byte ptr [eax + 0x4fe], 0; ret; 
0x00087dd8: cmp dword ptr [esp + 4], eax; sete al; movzx eax, al; ret; 
0x001408a8: cmp dword ptr [esp + 8], 0x80; cmovb eax, edx; ret; 
0x000d70aa: cmp eax, -0x16; mov eax, 3; cmovne eax, edx; ret; 
0x001222b7: cmp eax, -0x26; jne 0x12227d; lea esi, [esi]; lea ecx, [esp + 0xc]; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x000d7090: cmp eax, -0x26; jne 0xd70a1; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x000d72fe: cmp eax, -0x26; jne 0xd7340; lea ecx, [esp + 4]; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x000fb248: cmp eax, -0x26; jne 0xfb20f; lea esi, [esi]; lea ecx, [esp + 4]; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x00120d78: cmp eax, -0x5f; stc; call dword ptr [eax - 0x18]; 
0x000c2a1c: cmp eax, -0x69; stc; call dword ptr [eax - 0x18]; 
0x0013f967: cmp eax, -0xb; je 0x13f960; add esp, 8; pop ebx; ret; 
0x000dd663: cmp eax, -1; cmove eax, edx; pop ebx; ret; 
0x000a61f9: cmp eax, -1; inc dword ptr [ebp + 0x2b850fc0]; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00095c86: cmp eax, -1; je 0x95c90; add esp, 0xc; ret; 
0x000802b5: cmp eax, -1; jne 0x8027a; add esp, 4; pop ebx; pop esi; ret; 
0x00171f92: cmp eax, -1; sete dl; mov dword ptr [ebx], edx; add esp, 8; pop ebx; ret; 
0x0011b008: cmp eax, -1; setne al; movzx eax, al; add esp, 8; pop ebx; ret; 
0x00182d1b: cmp eax, 0x1c030004; mov edi, dword ptr [esi]; jmp ebx; 
0x000894cf: cmp eax, 0x21; jne 0x894d8; add dword ptr [edx + 4], 1; add esp, 0xc; ret; 
0x000f5c9a: cmp eax, 0x3904c083; ret 0xf375; 
0x0008bdc2: cmp eax, 0x397401a8; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000d7564: cmp eax, 0x3b9ac9ff; ja 0xd7600; lea ecx, [esp + 0xc]; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x00094395: cmp eax, 0x3fc; jbe 0x943a0; ret; 
0x0013390b: cmp eax, 0x3ff; ja 0x133919; sar eax, 5; add esp, 0xc; ret; 
0x000d7302: cmp eax, 0x4244c8d; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x0009af6a: cmp eax, 0x450fffe8; ret 0x66c3; 
0x0003ab14: cmp eax, 0x473ff00; call eax; 
0x00094575: cmp eax, 0x50; jbe 0x94580; ret; 
0x00021d18: cmp eax, 0x5b1cc483; pop esi; pop edi; pop ebp; ret; 
0x000c191d: cmp eax, 0x5b20c483; pop esi; pop edi; ret; 
0x000a5f90: cmp eax, 0x5bffffff; ret; 
0x001098b8: cmp eax, 0x81000685; ret; 
0x0012321f: cmp eax, 0x83fffe61; les esp, ptr [eax]; add esp, 0xc; ret; 
0x0008150f: cmp eax, 0x83ffffff; les ebx, ptr [eax]; pop ebx; ret; 
0x000413d1: cmp eax, 0x8bfffffc; jl 0x413fc; sub al, 0x8d; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x0015524c: cmp eax, 0x8bffffff; jl 0x155277; xor al, 0x8d; xchg dword ptr [edi + ebp*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x00120d7f: cmp eax, 0x8dfff0ec; and dword ptr [eax - 0x5e], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x000cce63: cmp eax, 0x950f0000; ret 0xb38b; 
0x000ced3d: cmp eax, 0xa3d70b; setb dl; add edx, 0x16d; mov eax, edx; ret; 
0x00094587: cmp eax, 0xb; mov eax, 8; cmova eax, ecx; mov dword ptr [edx + 0x3b6c], eax; ret; 
0x0009e84c: cmp eax, 0xc083f175; add dword ptr [edx + edx*8 + 0xba], eax; add byte ptr [edi], cl; inc esp; ret 0x8dc3; 
0x000b4392: cmp eax, 0xc1d70f66; bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x000ccfc1: cmp eax, 0xc4830000; adc byte ptr [ebp - 0x7fd38a2e], al; add byte ptr ds:[edi], cl; test byte ptr [eax + eax - 0x137d0000], cl; or byte ptr [ebp - 0x6baf47d], cl; call dword ptr [eax + 0x56]; 
0x0008fef0: cmp eax, 0xc; jne 0x8ff1f; mov eax, 3; add esp, 0xc; ret; 
0x000900b2: cmp eax, 0xc; jne 0x900df; mov eax, 3; add esp, 0xc; ret; 
0x00090242: cmp eax, 0xc; jne 0x9026f; mov eax, 3; add esp, 0xc; ret; 
0x00090438: cmp eax, 0xc; jne 0x9046f; mov eax, 3; add esp, 0xc; ret; 
0x000905b2: cmp eax, 0xc; jne 0x905df; mov eax, 3; add esp, 0xc; ret; 
0x00090632: cmp eax, 0xc; jne 0x9065f; mov eax, 3; add esp, 0xc; ret; 
0x000ce384: cmp eax, 0xe8500000; ret; 
0x000cd204: cmp eax, 0xf8830000; add dword ptr [edi + 0x24], edi; add esp, 8; pop ebx; ret; 
0x000943d5: cmp eax, 0xffff; jbe 0x943e0; ret; 
0x00088a70: cmp eax, 0xfffff000; cmovbe ebp, edx; jmp 0x889fa; lea esi, [esi]; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x00108667: cmp eax, 0xfffff000; ja 0x108678; pop ebx; pop esi; ret; 
0x00109396: cmp eax, 0xfffff000; ja 0x1093a8; pop ebx; pop esi; pop edi; ret; 
0x001096fa: cmp eax, 0xfffff000; ja 0x109708; pop ebx; pop esi; ret; 
0x0010975a: cmp eax, 0xfffff000; ja 0x109768; pop ebx; pop esi; ret; 
0x0010a494: cmp eax, 0xfffff000; ja 0x10a4a0; pop ebx; ret; 
0x0010aeee: cmp eax, 0xfffff000; ja 0x10af40; add esp, 0x14; pop ebx; pop esi; ret; 
0x0010b032: cmp eax, 0xfffff000; ja 0x10b040; pop ebx; ret; 
0x0010b0c2: cmp eax, 0xfffff000; ja 0x10b110; add esp, 0x14; pop ebx; pop esi; ret; 
0x00115a20: cmp eax, 0xfffff000; ja 0x115a30; pop ebx; ret; 
0x00115bf0: cmp eax, 0xfffff000; ja 0x115c10; pop ebx; pop esi; pop edi; ret; 
0x00115c73: cmp eax, 0xfffff000; ja 0x115c90; pop ebx; pop esi; pop edi; ret; 
0x00115cef: cmp eax, 0xfffff000; ja 0x115d10; pop ebx; pop esi; pop edi; ret; 
0x00115d72: cmp eax, 0xfffff000; ja 0x115d90; pop ebx; pop esi; pop edi; ret; 
0x00115dd9: cmp eax, 0xfffff000; ja 0x115de8; pop ebx; pop esi; ret; 
0x00115e99: cmp eax, 0xfffff000; ja 0x115ea8; pop ebx; pop esi; ret; 
0x00116914: cmp eax, 0xfffff000; ja 0x116920; pop ebx; ret; 
0x00116964: cmp eax, 0xfffff000; ja 0x116970; pop ebx; ret; 
0x00116a7a: cmp eax, 0xfffff000; ja 0x116a88; pop ebx; pop esi; pop edi; ret; 
0x00116ada: cmp eax, 0xfffff000; ja 0x116ae8; pop ebx; pop esi; pop edi; ret; 
0x00117229: cmp eax, 0xfffff000; ja 0x117238; pop ebx; pop esi; ret; 
0x00118d6e: cmp eax, 0xfffff000; ja 0x118dc0; add esp, 0x14; pop ebx; pop esi; ret; 
0x00118e4e: cmp eax, 0xfffff000; ja 0x118ea0; add esp, 0x14; pop ebx; pop esi; ret; 
0x00118f3b: cmp eax, 0xfffff000; ja 0x118f48; pop ebx; pop esi; ret; 
0x0011a7f4: cmp eax, 0xfffff000; ja 0x11a800; pop ebx; ret; 
0x0011a844: cmp eax, 0xfffff000; ja 0x11a850; pop ebx; ret; 
0x0011a899: cmp eax, 0xfffff000; ja 0x11a8a8; pop ebx; pop esi; ret; 
0x0011a8f9: cmp eax, 0xfffff000; ja 0x11a908; pop ebx; pop esi; ret; 
0x0011ea5c: cmp eax, 0xfffff000; ja 0x11ea68; pop ebx; ret; 
0x00121364: cmp eax, 0xfffff000; ja 0x121370; pop ebx; ret; 
0x001213be: cmp eax, 0xfffff000; ja 0x1213d0; pop ebx; pop esi; pop edi; ret; 
0x001217df: cmp eax, 0xfffff000; ja 0x1217f0; pop ebx; pop esi; pop edi; ret; 
0x00121a3e: cmp eax, 0xfffff000; ja 0x121a50; pop ebx; pop esi; pop edi; ret; 
0x00122003: cmp eax, 0xfffff000; ja 0x122028; pop ebx; pop esi; pop edi; ret; 
0x00122ff4: cmp eax, 0xfffff000; ja 0x123000; pop ebx; ret; 
0x00123044: cmp eax, 0xfffff000; ja 0x123050; pop ebx; ret; 
0x00123094: cmp eax, 0xfffff000; ja 0x1230a0; pop ebx; ret; 
0x001231a5: cmp eax, 0xfffff000; ja 0x1231b0; pop ebx; pop esi; pop edi; ret; 
0x001780ba: cmp eax, 0xfffff000; ja 0x1780c8; pop ebx; pop esi; ret; 
0x00037995: cmp eax, 0xfffff000; ja 0x379a0; pop ebx; ret; 
0x000379f3: cmp eax, 0xfffff000; ja 0x37a40; add esp, 0x14; pop ebx; pop esi; ret; 
0x00058a24: cmp eax, 0xfffff000; ja 0x58a30; pop ebx; ret; 
0x00058a7e: cmp eax, 0xfffff000; ja 0x58a90; pop ebx; pop esi; pop edi; ret; 
0x00083791: cmp eax, 0xfffff000; ja 0x837a0; pop ebx; pop esi; pop edi; ret; 
0x0008bee4: cmp eax, 0xfffff000; ja 0x8bef0; pop ebx; pop esi; pop edi; ret; 
0x00092c60: cmp eax, 0xfffff000; ja 0x92c70; pop ebx; ret; 
0x000931d7: cmp eax, 0xfffff000; ja 0x931f8; pop ebx; pop esi; pop edi; ret; 
0x00093309: cmp eax, 0xfffff000; ja 0x93318; pop ebx; pop esi; ret; 
0x000938f8: cmp eax, 0xfffff000; ja 0x93908; pop ebx; ret; 
0x00093ce8: cmp eax, 0xfffff000; ja 0x93cf8; pop ebx; ret; 
0x000cc082: cmp eax, 0xfffff000; ja 0xcc090; pop ebx; ret; 
0x000d8f33: cmp eax, 0xfffff000; ja 0xd8f40; pop ebx; pop esi; ret; 
0x000ddcf9: cmp eax, 0xfffff000; ja 0xddd40; add esp, 0x18; pop ebx; ret; 
0x000de419: cmp eax, 0xfffff000; ja 0xde440; hlt; mov eax, ecx; call dword ptr gs:[0x10]; 
0x000fb389: cmp eax, 0xfffff000; ja 0xfb398; pop ebx; pop esi; ret; 
0x0008d795: cmp eax, 0xfffff000; mov eax, 0; cmova eax, edx; ret; 
0x00111a8e: cmp eax, 0xfffff000; mov eax, 0; pop edi; cmova eax, edx; ret; 
0x0003795c: cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x0004aa84: cmp eax, 0xfffff001; jae 0x216d0; xor eax, eax; ret; 
0x00084ba8: cmp eax, 1; ja 0x84bc0; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0008d738: cmp eax, 1; ja 0x8d750; mov edx, dword ptr [esp + 4]; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x001656e2: cmp eax, 1; je 0x165710; cmp eax, 2; sete al; movzx eax, al; ret; 
0x001657d2: cmp eax, 1; je 0x165800; cmp eax, 2; sete al; movzx eax, al; ret; 
0x00165db2: cmp eax, 1; je 0x165de0; cmp eax, 2; sete al; movzx eax, al; ret; 
0x000828c7: cmp eax, 1; je 0x828d0; ret; 
0x0008316b: cmp eax, 1; je 0x83178; ret; 
0x0008da26: cmp eax, 1; je 0x8da38; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x00120e5e: cmp eax, 1; jg 0x120e90; add esp, 8; pop ebx; ret; 
0x0013c3f2: cmp eax, 1; jg 0x13c450; add esp, 4; pop ebx; pop esi; ret; 
0x0014cb28: cmp eax, 1; jg 0x14cb68; add esp, 4; pop ebx; pop esi; ret; 
0x001518ee: cmp eax, 1; jg 0x151918; add esp, 8; pop ebx; ret; 
0x00152d70: cmp eax, 1; jg 0x152d80; ret; 
0x0016ba61: cmp eax, 1; jg 0x16ba88; add esp, 8; pop ebx; ret; 
0x0016bbe1: cmp eax, 1; jg 0x16bc08; add esp, 8; pop ebx; ret; 
0x00170b22: cmp eax, 1; jg 0x170b48; add esp, 4; pop ebx; pop esi; ret; 
0x00170bc2: cmp eax, 1; jg 0x170be8; add esp, 4; pop ebx; pop esi; ret; 
0x00170c72: cmp eax, 1; jg 0x170c98; pop ebx; pop esi; pop edi; ret; 
0x001a1053: cmp eax, 1; jg 0x1a1078; add esp, 4; pop ebx; pop esi; ret; 
0x0003af94: cmp eax, 1; jg 0x3afb8; add esp, 4; pop ebx; pop esi; ret; 
0x00058c3f: cmp eax, 1; jg 0x58c48; ret; 
0x00072de0: cmp eax, 1; jg 0x72df0; ret; 
0x0007be60: cmp eax, 1; jg 0x7be70; ret; 
0x0007ec56: cmp eax, 1; jg 0x7ec90; add esp, 8; pop ebx; ret; 
0x00080f70: cmp eax, 1; jg 0x80f80; ret; 
0x000834dc: cmp eax, 1; jg 0x83518; pop ebx; pop esi; pop edi; ret; 
0x000cd207: cmp eax, 1; jg 0xcd230; add esp, 8; pop ebx; ret; 
0x000d8b7f: cmp eax, 1; jg 0xd8ba0; add esp, 4; pop ebx; pop esi; ret; 
0x000d8bf5: cmp eax, 1; jg 0xd8c10; pop ebx; pop esi; pop edi; ret; 
0x0015e7c3: cmp eax, 1; mov eax, 1; sbb eax, -1; add esp, 0xc; ret; 
0x0008474c: cmp eax, 1; mov edx, 0x5f; mov eax, 0x16; cmove eax, edx; ret; 
0x00058989: cmp eax, 1; sbb eax, eax; add esp, 0x1c; ret; 
0x00090a67: cmp eax, 1; sbb eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00166fa6: cmp eax, 1; sete al; add esp, 0xc; movzx eax, al; ret; 
0x0008d708: cmp eax, 2; ja 0x8d720; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00151451: cmp eax, 2; jne 0x151470; mov eax, ecx; ret; 
0x001656e7: cmp eax, 2; sete al; movzx eax, al; ret; 
0x0002c071: cmp eax, 3; je 0x2c080; add esp, 8; pop ebx; ret; 
0x000857cd: cmp eax, 3; je 0x857e0; pop ebx; pop esi; pop edi; ret; 
0x000858ab: cmp eax, 3; je 0x858b8; pop ebx; pop esi; pop edi; ret; 
0x000ed52c: cmp eax, 3; je 0xed550; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0010fb83: cmp eax, 4; ja 0x10fb98; mov edx, dword ptr [esp + 8]; mov word ptr [edx + 0x3e], ax; xor eax, eax; ret; 
0x00111513: cmp eax, 4; ja 0x111528; mov edx, dword ptr [esp + 8]; mov word ptr [edx + 0x42], ax; xor eax, eax; ret; 
0x001140d3: cmp eax, 4; ja 0x1140e8; mov edx, dword ptr [esp + 8]; mov word ptr [edx + 0x42], ax; xor eax, eax; ret; 
0x0008fd5f: cmp eax, 4; sete al; movzx eax, al; sub eax, 2; add esp, 0xc; ret; 
0x0008e0dd: cmp eax, 8; je 0x8e0e3; ret; 
0x00121856: cmp eax, 8; setne al; add esp, 0x1c; movzx eax, al; neg eax; ret; 
0x00121897: cmp eax, 8; setne al; add esp, 0x2c; movzx eax, al; neg eax; ret; 
0x00098893: cmp eax, dword ptr [eax]; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00095859: cmp eax, dword ptr [eax]; add byte ptr [ebx - 0x70f0fe08], al; ret 0; 
0x000b58ed: cmp eax, dword ptr [eax]; add byte ptr [ecx], al; xor eax, eax; pop ebx; ret; 
0x000b64fb: cmp eax, dword ptr [eax]; add byte ptr [edi], cl; inc esp; ret 0xff50; 
0x000995e2: cmp eax, dword ptr [eax]; add dh, dh; ret 0x7402; 
0x00154791: cmp eax, dword ptr [ebp - 0x7c868b01]; ret; 
0x0014cb2c: cmp eax, dword ptr [ebx + 0x5e5b04c4]; ret; 
0x00023c91: cmp eax, dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0015586b: cmp eax, dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x001452a7: cmp eax, dword ptr [ebx + 0x5e5b30c4]; pop edi; ret; 
0x00124af4: cmp eax, dword ptr [ebx - 0x17adf314]; ret 0xf5dc; 
0x00127708: cmp eax, dword ptr [ecx + 0x4624]; jae 0x12771b; mov edx, dword ptr [ecx + 0x4628]; add word ptr [edx + eax*2], 1; ret; 
0x00121bd8: cmp eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00121b99: cmp eax, dword ptr [ecx]; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00193dc1: cmp eax, dword ptr [edx]; add byte ptr [eax], al; pop ebx; ret; 
0x00197ff4: cmp eax, dword ptr [esi - 0x10]; jne 0x198040; pop edi; pop esi; pop ebx; ret; 
0x00054c35: cmp eax, ebx; ja 0x54c20; mov eax, ecx; pop ebx; pop esi; ret; 
0x00117108: cmp eax, ebx; jb 0x117110; xor eax, eax; pop ebx; ret; 
0x0015c810: cmp eax, ebx; jne 0x15c800; pop ebx; ret; 
0x000a1c9b: cmp eax, ebx; jne 0xa1c90; mov eax, edx; pop ebx; ret; 
0x000a1cdf: cmp eax, ebx; jne 0xa1cd0; mov eax, edx; pop ebx; pop esi; ret; 
0x0008156e: cmp eax, ecx; cmovb eax, ecx; sub eax, dword ptr [edx + 0xc]; ret; 
0x00076ba1: cmp eax, ecx; cmovb eax, ecx; sub eax, dword ptr [edx + 8]; sar eax, 2; ret; 
0x00075875: cmp eax, ecx; cmovg eax, ecx; test edx, edx; jne 0x75870; ret; 
0x0007f135: cmp eax, ecx; cmovg eax, ecx; test edx, edx; jne 0x7f130; ret; 
0x000b37d0: cmp eax, ecx; ja 0xb37e0; sub edi, 0x10; add eax, edi; pop edi; ret; 
0x00173f27: cmp eax, ecx; jbe 0x174000; sub esp, 0xc; push esi; call dword ptr [ebp + 0x44]; 
0x00174070: cmp eax, ecx; jbe 0x174080; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x00075bb5: cmp eax, ecx; jbe 0x75bf0; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x00076346: cmp eax, ecx; jbe 0x76378; sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x0007a296: cmp eax, ecx; jbe 0x7a2f0; sub esp, 8; push 0; push esi; call dword ptr [ebp + 8]; 
0x0007bfb8: cmp eax, ecx; jbe 0x7bfe0; sub esp, 0xc; push ebx; call dword ptr [esi + 0x30]; 
0x0007dddb: cmp eax, ecx; jbe 0x7df08; sub esp, 0xc; push ebx; call dword ptr [esi + 0x44]; 
0x0007df81: cmp eax, ecx; jbe 0x7dfc0; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x0007fa25: cmp eax, ecx; jbe 0x7fa50; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x0007fd1b: cmp eax, ecx; jbe 0x7fdc8; sub esp, 0xc; push esi; call dword ptr [ebp + 0x30]; 
0x000a1e3f: cmp eax, ecx; jne 0xa1e30; mov eax, edx; pop ebx; ret; 
0x000b4a2a: cmp eax, ecx; jne 0xb4c38; pop esi; xor eax, eax; pop ebx; ret; 
0x000b4b1d: cmp eax, ecx; jne 0xb4c4c; pop esi; xor eax, eax; pop ebx; ret; 
0x000b4c4a: cmp eax, ecx; sbb eax, eax; sbb eax, -1; pop esi; pop ebx; ret; 
0x00035f5d: cmp eax, ecx; sbb edx, ebx; pop ebx; mov eax, edx; shr eax, 0x1f; ret; 
0x0016d34c: cmp eax, edi; add ebp, dword ptr [edi]; jbe 0x16d2d7; in al, dx; add al, 0x83; ret; 
0x000b3730: cmp eax, edx; ja 0xb37e0; add eax, edi; add eax, ecx; pop edi; ret; 
0x000b4475: cmp eax, edx; ja 0xb4448; sub eax, esi; pop ebx; pop esi; ret; 
0x001311f3: cmp eax, edx; jae 0x131200; cmp dword ptr [eax + 4], ecx; jne 0x1311f0; mov eax, dword ptr [eax + 0x18]; ret; 
0x0012c552: cmp eax, edx; jb 0x12c560; mov eax, 1; ret; 
0x00080214: cmp eax, edx; jbe 0x80240; sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x0016309c: cmp eax, edx; je 0x1630a8; pop ebx; pop esi; pop edi; ret; 
0x0009d48f: cmp eax, edx; jne 0x9d488; mov eax, ecx; ret; 
0x000e0983: cmp eax, esi; hlt; dec dword ptr [ebp - 0x6658f7b]; call dword ptr [eax - 0x73]; 
0x000938e5: cmp ebp, dword ptr [edi]; jne 0x93930; add ebx, 1; mov eax, 0x116; call dword ptr gs:[0x10]; 
0x001422fa: cmp ebp, dword ptr [esi]; je 0x142308; add esp, 8; pop ebx; ret; 
0x001600e3: cmp ebp, edi; jmp dword ptr [esi - 0x70]; 
0x00084a82: cmp ebp, edx; jbe 0x84abf; mov ecx, dword ptr [edi + 0xc]; mov eax, 0xf0; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x000eab05: cmp ebx, 0xa; je 0xeab39; add esp, 4; pop ebx; pop esi; ret; 
0x000b60c5: cmp ebx, 3; je 0xb60d0; mov eax, esi; pop ebx; pop esi; ret; 
0x000600be: cmp ebx, dword ptr [ebx + 0x5e]; pop edi; ret; 
0x0003a2e2: cmp ebx, esi; jae 0x3a2f9; lea esi, [esi]; lea esi, [esi]; call dword ptr [ebx]; 
0x000ced26: cmp ecx, 0x28f5c28; jbe 0xced38; mov eax, edx; ret; 
0x00133a9c: cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x0015a24f: cmp ecx, 1; je 0x15a270; mov dword ptr [eax], 0x10; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x0015b2b0: cmp ecx, 1; je 0x15b2c0; add esp, 4; pop ebx; pop esi; ret; 
0x000fbbbc: cmp ecx, 2; je 0xfbbd0; mov eax, edx; pop ebx; pop esi; ret; 
0x0015a751: cmp ecx, 3; jbe 0x15a760; mov eax, 2; pop ebx; pop esi; ret; 
0x00115a78: cmp ecx, 9; je 0x115ab0; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00115b28: cmp ecx, 9; je 0x115b60; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0004ab67: cmp ecx, dword ptr [eax]; mov eax, 0; jne 0x4ab72; push ecx; ret; 
0x0004ae0d: cmp ecx, dword ptr [eax]; mov eax, 0; jne 0x4ae18; push ecx; ret; 
0x0015c9e1: cmp ecx, dword ptr [ebp - 0x3b7d0000]; adc byte ptr [ebp - 0x7c208b40], al; in al, dx; or byte ptr [ebp - 0xc48df79], cl; call dword ptr [eax - 0x73]; 
0x000720d4: cmp ecx, dword ptr [ebx + 0x558be045]; in al, 0x89; ret; 
0x000d7568: cmp ecx, dword ptr [edi]; xchg dword ptr [ecx - 0x73000000], edx; dec esp; and al, 0xc; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x0008c908: cmp ecx, dword ptr [edi]; xchg dword ptr [ecx], esi; add dword ptr [eax], eax; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x0008cb8b: cmp ecx, dword ptr [edi]; xchg esi, ecx; add byte ptr [eax], al; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x6174; 
0x0008bfa5: cmp ecx, dword ptr [edi]; xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x0015b111: cmp ecx, dword ptr [edx + 0x14]; ja 0x15b100; mov dword ptr [edx + 0x10], ecx; pop ebx; ret; 
0x00198125: cmp ecx, dword ptr [edx - 4]; jne 0x198130; pop ebx; ret; 
0x00193db7: cmp ecx, dword ptr [edx - 4]; mov eax, 0; jne 0x194000; pop ebx; ret; 
0x000ad211: cmp ecx, dword ptr [edx]; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00193cd2: cmp ecx, dword ptr [edx]; je 0x193cf0; mov eax, 1; jg 0x193ce0; neg eax; ret; 
0x0013fc96: cmp ecx, eax; sbb edx, edx; mov eax, edx; pop ebx; pop esi; ret; 
0x00192610: cmp ecx, ebx; mov eax, 0; jne 0x192d90; pop ebx; ret; 
0x00195482: cmp ecx, ebx; mov eax, 0; jne 0x1956b0; pop ebx; ret; 
0x00192da4: cmp ecx, ebx; pop ebx; mov eax, 1; ja 0x192db0; neg eax; ret; 
0x000b5cae: cmp ecx, ebx; pop ebx; pop esi; cmovg eax, edx; pop edi; ret; 
0x000b5c90: cmp ecx, edi; pop edi; cmovg eax, edx; ret; 
0x0011f62a: cmp ecx, edx; jne 0x11f620; mov eax, dword ptr [eax + 4]; pop ebx; ret; 
0x00125994: cmp ecx, edx; mov edx, 0; cmovb eax, edx; ret; 
0x00158fd7: cmp edi, 0x62; stc; call dword ptr [eax - 0x18]; 
0x000ec442: cmp edi, 0x8bffffff; push ebx; sbb al, 0x83; rol byte ptr [ecx], 0x39; ret 0xef7f; 
0x00122dc6: cmp edi, 1; je 0x122e00; lea ecx, [esp + 0xc]; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x00122f46: cmp edi, 1; je 0x122f80; lea ecx, [esp + 0xc]; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x001196ba: cmp edi, 3; cmovae esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00061b96: cmp edi, dword ptr [ecx]; ret 0x840f; 
0x00078bd5: cmp edi, dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x0009e028: cmp edi, eax; jbe 0x9e041; pop ebx; pop esi; pop edi; ret; 
0x0015fe62: cmp edi, ebp; jmp dword ptr [esi - 0x70]; 
0x00087e63: cmp edi, ecx; mov ebx, dword ptr [eax + 0x68]; cmovbe ecx, edi; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x0002c7b5: cmp edi, edi; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000849d2: cmp edi, edx; jae 0x849a0; mov ecx, dword ptr [ebx + 0xc]; mov eax, 0xf0; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00183828: cmp edi, esi; ret 3; 
0x000dfeec: cmp edx, 0x1badface; setne al; ret; 
0x000dff07: cmp edx, 0x1cd1; setne al; ret; 
0x00121f68: cmp edx, 0x26; je 0x121fbb; pop ebx; pop esi; ret; 
0x0008485d: cmp edx, 0x3fff; ja 0x84870; ret; 
0x000a2565: cmp edx, 0x40; ja 0xa2571; mov eax, dword ptr [ecx + edx*4 - 0x9c0]; ret; 
0x000a2595: cmp edx, 0x40; ja 0xa25a1; mov eax, dword ptr [ecx + edx*4 - 0x8a0]; ret; 
0x000dfdac: cmp edx, 0x54190100; jne 0xdfdc0; lea esi, [esi]; mov eax, 0x40; ret; 
0x0006fd35: cmp edx, 0x85; ja 0x6fd44; mov eax, dword ptr [ecx + edx*4 - 0xbe0]; ret; 
0x000dfeb7: cmp edx, 0xadf5; setne al; ret; 
0x0009e28e: cmp edx, 1; ja 0x9e270; pop ebx; pop esi; pop edi; ret; 
0x0008bcc0: cmp edx, 1; je 0x8bcd0; mov eax, 0x16; ret; 
0x0012ab42: cmp edx, 1; jg 0x12ab68; add esp, 0x18; pop ebx; ret; 
0x0013c720: cmp edx, 1; jg 0x13c748; add esp, 0x18; pop ebx; ret; 
0x0016badf: cmp edx, 1; jg 0x16bb08; add esp, 0x18; pop ebx; ret; 
0x0016bb6b: cmp edx, 1; jg 0x16bb90; add esp, 0x18; pop ebx; ret; 
0x0016bd91: cmp edx, 1; jg 0x16bdb8; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016be43: cmp edx, 1; jg 0x16be68; add esp, 0x18; pop ebx; ret; 
0x0004a981: cmp edx, 1; jg 0x4a9a8; add esp, 0x14; pop ebx; pop esi; ret; 
0x00070c26: cmp edx, 1; jg 0x70c48; add esp, 0x14; pop ebx; pop esi; ret; 
0x00087f52: cmp edx, 1; jg 0x87f78; add esp, 0x18; pop ebx; ret; 
0x000d898e: cmp edx, 1; jg 0xd89b0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0008bcf0: cmp edx, 1; jne 0x8bd10; or dword ptr [eax], 0x40000000; xor eax, eax; ret; 
0x00104fcd: cmp edx, 2; ja 0x104fde; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x00084721: cmp edx, 2; jbe 0x84730; ret; 
0x00085846: cmp edx, 2; je 0x85850; pop ebx; pop esi; pop edi; ret; 
0x00082791: cmp edx, 8; je 0x82797; ret; 
0x00074461: cmp edx, dword ptr [eax + 4]; jae 0x74470; lea ecx, [edx + 4]; mov dword ptr [eax], ecx; mov eax, dword ptr [edx]; ret; 
0x0007459f: cmp edx, dword ptr [eax + 4]; jae 0x745b0; lea ecx, [edx + 4]; mov dword ptr [eax], ecx; mov eax, dword ptr [edx]; ret; 
0x0007bf1b: cmp edx, dword ptr [eax + 8]; jae 0x7bf30; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x0007bf59: cmp edx, dword ptr [eax + 8]; jae 0x7bf70; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x000e9578: cmp edx, dword ptr [ebx + 4]; je 0xe9596; pop ebx; pop esi; pop edi; ret; 
0x00082754: cmp edx, dword ptr [esp + 4]; setae al; ret; 
0x000d8f22: cmp edx, eax; cmova edx, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x000b442d: cmp edx, eax; cmovbe eax, edx; sub eax, esi; pop ebx; pop esi; ret; 
0x0008bdbf: cmp edx, eax; jne 0x8be00; test al, 1; je 0x8be00; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000a1d67: cmp edx, ebx; je 0xa1d60; pop ebx; ret; 
0x00076420: cmp edx, ecx; ja 0x76418; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000802f0: cmp edx, ecx; ja 0x802e8; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00080ffe: cmp edx, ecx; jae 0x81020; movzx eax, byte ptr [edx]; pop ebx; pop esi; ret; 
0x00070fbd: cmp edx, ecx; jbe 0x71130; sub esp, 8; push 0; push esi; call dword ptr [ebx + 8]; 
0x00071481: cmp edx, ecx; jbe 0x714d8; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x00073b4a: cmp edx, ecx; jbe 0x73b91; sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x0007961e: cmp edx, ecx; jbe 0x797f0; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x0007f97a: cmp edx, ecx; jbe 0x7f9d0; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x000b72ee: cmp edx, ecx; je 0xb72f6; test edx, edx; jne 0xb72e8; ret; 
0x00152ba0: cmp edx, ecx; jne 0x152b90; add esp, 8; pop ebx; ret; 
0x000ca049: cmp edx, ecx; jne 0xca040; ret; 
0x00084dd8: cmp edx, esi; jbe 0x84e18; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x000a1d9b: cmp edx, esi; je 0xa1d90; pop ebx; pop esi; ret; 
0x0017245b: cmp esi, -1; call dword ptr [eax - 0x76f3137d]; ret; 
0x00121ff2: cmp esi, -1; je 0x122010; mov eax, 0x17c; call dword ptr gs:[0x10]; 
0x0004d08a: cmp esi, dword ptr [edi*8 + 0x3436e9ff]; std; jmp dword ptr [esi - 0x70]; 
0x000fb308: cmp esi, ecx; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x001a0f27: cmp esi, edi; jae 0x1a0f39; lea esi, [esi]; nop; call dword ptr [esi]; 
0x001a0f80: cmp esi, edi; jne 0x1a0f70; pop ebx; pop esi; pop edi; ret; 
0x00109d34: cmp esp, -0x62; stc; call dword ptr [eax - 0x18]; 
0x0010ce73: cmp esp, 7; stc; dec dword ptr [edi]; inc esp; ret 0x4489; 
0x0013c9e1: cmp esp, dword ptr [ebx]; add eax, dword ptr [eax]; mov dword ptr [esp], ebp; call esi; 
0x000b4374: cmp esp, dword ptr [esi + 0xf]; xlatb; ret 0xc085; 
0x000dc7fd: cmp esp, esi; jmp dword ptr [ebp - 0x75]; 
0x0014ab78: cmp word ptr [ecx + 2], si; je 0x14ab88; pop ebx; pop esi; ret; 
0x00195b26: cmpsb byte ptr [esi], byte ptr es:[edi]; add al, byte ptr [eax]; add byte ptr [eax - 0x17af0f0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x0002d056: cmpsb byte ptr [esi], byte ptr es:[edi]; add dword ptr [eax], eax; add byte ptr [ebx - 0x7872f714], al; in al, 0x72; stc; call dword ptr [eax + 0x56]; 
0x00089516: cmpsb byte ptr [esi], byte ptr es:[edi]; cli; dec dword ptr [ebp - 0x693bf7f]; call dword ptr [eax - 0x73]; 
0x000d8bab: cmpsb byte ptr [esi], byte ptr es:[edi]; cli; jmp dword ptr [esi - 0x70]; 
0x00165f63: cmpsb byte ptr [esi], byte ptr es:[edi]; in al, dx; call dword ptr [eax - 0x73]; 
0x0013a684: cmpsb byte ptr [esi], byte ptr es:[edi]; stc; call dword ptr [eax + 0x55]; 
0x0013a21b: cmpsb byte ptr [esi], byte ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x0013a718: cmpsb byte ptr [esi], byte ptr es:[edi]; stc; dec dword ptr [ebp - 0x68d3356]; call dword ptr [eax + 0x55]; 
0x00104c05: cmpsb byte ptr [esi], byte ptr es:[edi]; std; inc dword ptr [ebx - 0x3e760035]; mov edx, ebx; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x000d8c18: cmpsb byte ptr fs:[esi], byte ptr es:[edi]; cli; jmp dword ptr [esi - 0x70]; 
0x0008a0fa: cmpsd dword ptr [esi], dword ptr es:[edi]; aas; stc; call dword ptr [eax - 0x73]; 
0x001658eb: cmpsd dword ptr [esi], dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [ebx - 0x2f76eb3c], al; pop ebx; pop esi; ret; 
0x00197875: cmpsd dword ptr [esi], dword ptr es:[edi]; add byte ptr [eax], al; add dh, dh; ret 0xf20; 
0x000c0e87: cmpsd dword ptr [esi], dword ptr es:[edi]; clc; call dword ptr [ebx - 1]; 
0x001046a7: cmpsd dword ptr [esi], dword ptr es:[edi]; in eax, dx; call dword ptr [eax - 0x73]; 
0x000fa4c5: cmpsd dword ptr [esi], dword ptr es:[edi]; mov cl, 0xfb; inc dword ptr [ebx - 0x3b7cfefa]; adc byte ptr [ecx], al; ret; 
0x00073d25: cmpsd dword ptr [esi], dword ptr es:[edi]; ret 0; 
0x00100d45: cmpsd dword ptr [esi], dword ptr es:[edi]; ret 0xfffd; 
0x000913b5: cmpsd dword ptr [esi], dword ptr es:[edi]; ret; 
0x0013f920: cmpsd dword ptr [esi], dword ptr es:[edi]; stc; call dword ptr [eax - 0x18]; 
0x0013f920: cmpsd dword ptr [esi], dword ptr es:[edi]; stc; call dword ptr [eax - 0x18]; xchg edi, eax; add bh, ch; jmp dword ptr [esi - 0x39]; 
0x0013bfe3: cmpsd dword ptr [esi], dword ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x00159225: cmpsd dword ptr [esi], dword ptr es:[edi]; std; jmp dword ptr [esi - 0x70]; 
0x0002ef36: cmpsd dword ptr [esi], dword ptr es:[edi]; sub al, 0xf9; dec dword ptr [ecx - 0xdb6b]; call dword ptr [eax - 0x39]; 
0x0007add5: cmpsd dword ptr [esi], dword ptr es:[edi]; xchg bh, bh; jmp dword ptr [ecx]; 
0x000869a5: cmpsd dword ptr [esi], dword ptr es:[edi]; xchg esi, eax; cli; jmp dword ptr [ebp - 0x5f]; 
0x0008f48d: cmpxchg dword ptr [ebx], edx; jne 0x8f4a0; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0008e3a6: cmpxchg dword ptr [ebx], esi; jne 0x8e3b0; xor eax, eax; pop ebx; pop esi; ret; 
0x00082c9f: cmpxchg dword ptr [ecx], edx; setne al; movzx eax, al; pop ebx; ret; 
0x0008f4d0: cmpxchg dword ptr [edx], ecx; jne 0x8f4c6; xor eax, eax; pop ebx; ret; 
0x0008f51e: cmpxchg dword ptr [edx], ecx; jne 0x8f530; xor eax, eax; pop ebx; ret; 
0x0008e090: cmpxchg dword ptr [edx], ecx; mov eax, 0x10; cmove eax, ecx; ret; 
0x000886dd: cmpxchg dword ptr [esp + 4], edx; ret; 
0x0002eabc: cvtps2pi mm7, xmm1; call dword ptr [eax - 0x18]; 
0x00050896: cwde; add al, 0; add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x00104884: cwde; add al, 0; add dh, dh; ret 0xf20; 
0x000a5c34: cwde; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x00109ada: cwde; add byte ptr [eax], al; add byte ptr [eax + 0x132], bh; call dword ptr gs:[0x10]; 
0x0007199f: cwde; add byte ptr [eax], al; add byte ptr [ecx + 0x5b082454], cl; jmp eax; 
0x000829b8: cwde; add byte ptr [eax], al; add cl, al; call 0x1e8accd; mov dword ptr [edx + 0x19f0], eax; ret; 
0x00040519: cwde; add byte ptr [eax], al; add cl, ch; sti; idiv edi; call dword ptr [eax + 0x6a]; 
0x001983e4: cwde; add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0x348d; 
0x00058986: cwde; add dword ptr [eax], eax; cmp eax, 1; sbb eax, eax; add esp, 0x1c; ret; 
0x0015aab9: cwde; and eax, dword ptr [eax]; add byte ptr [ebx + 0x6a08ec], al; push ebx; call dword ptr [eax + 0x14]; 
0x000df943: cwde; dec eax; dec ecx; stc; dec dword ptr [ebp - 0x6b91c80]; call dword ptr [ebx + 0x50]; 
0x0006a724: cwde; fdivp st(7); dec dword ptr [ecx - 0x76d7db8c]; ret; 
0x0009b0a7: cwde; idiv bh; lea eax, [eax - 0x174bd0]; test byte ptr [ecx + 0x7e], 0x10; cmovne eax, edx; ret; 
0x00118e62: cwde; idiv bh; mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x00152228: cwde; inc esp; popal; stc; call dword ptr [ebx - 0x73]; 
0x00046b9d: cwde; jbe 0x46b99; call dword ptr [eax - 0x73]; 
0x000477df: cwde; jbe 0x477db; call dword ptr [eax - 0x73]; 
0x00047802: cwde; jbe 0x477fe; call dword ptr [eax - 0x73]; 
0x00047825: cwde; jbe 0x47821; call dword ptr [eax - 0x73]; 
0x00047848: cwde; jbe 0x47844; call dword ptr [eax - 0x73]; 
0x0004789b: cwde; jbe 0x47897; call dword ptr [eax - 0x73]; 
0x000478be: cwde; jbe 0x478ba; call dword ptr [eax - 0x73]; 
0x000478e1: cwde; jbe 0x478dd; call dword ptr [eax - 0x73]; 
0x00047904: cwde; jbe 0x47900; call dword ptr [eax - 0x73]; 
0x00047927: cwde; jbe 0x47923; call dword ptr [eax - 0x73]; 
0x0004794a: cwde; jbe 0x47946; call dword ptr [eax - 0x73]; 
0x0004796d: cwde; jbe 0x47969; call dword ptr [eax - 0x73]; 
0x00047990: cwde; jbe 0x4798c; call dword ptr [eax - 0x73]; 
0x000479b3: cwde; jbe 0x479af; call dword ptr [eax - 0x73]; 
0x00047a00: cwde; jbe 0x479fc; call dword ptr [eax - 0x73]; 
0x0007a795: cwde; jge 0x7a791; call dword ptr [eax - 0x18]; 
0x0006092f: cwde; mov eax, 0x3efff8c1; jmp eax; 
0x000b6116: cwde; pop ebx; pop esi; ret; 
0x00058cb4: cwde; pop es; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00109a14: cwde; ret 0; 
0x000c46c9: cwde; stc; call dword ptr [eax - 0x18]; 
0x000ce990: cwde; stc; call dword ptr [eax - 0x18]; daa; adc dh, dh; jmp dword ptr [esi - 0x70]; 
0x000c29cd: cwde; stc; call dword ptr [eax - 0x73]; 
0x0017a116: cwde; sti; jmp dword ptr [esi - 0x70]; 
0x000ce995: daa; adc dh, dh; jmp dword ptr [esi - 0x70]; 
0x0014d7cf: daa; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; cmp byte ptr [eax], 0xac; stc; call dword ptr [eax - 0x18]; 
0x00115be0: daa; add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; call dword ptr gs:[0x10]; 
0x00109c31: daa; add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00109d85: daa; add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; mov edx, edi; call dword ptr gs:[0x10]; 
0x000aa005: daa; add eax, dword ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x00122641: daa; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0011e4eb: daa; cmc; jmp dword ptr [esi - 0x70]; 
0x000b6c58: daa; inc esp; stc; call dword ptr [eax - 0x18]; 
0x00122fdb: daa; jo 0x122fee; add byte ptr [ebx - 0x48], dl; ret; 
0x000b53f2: daa; mov eax, dword ptr [esp + 0x10]; pop ebx; pop esi; pop edi; ret; 
0x000b57b8: daa; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x00103b18: daa; mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb4; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00103bf8: daa; mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb5; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00133bbd: daa; pop ecx; stc; call dword ptr [eax + 0x6a]; 
0x0012e671: daa; push edi; stc; call dword ptr [eax - 0x18]; 
0x0003ddda: daa; ret 0x1e; 
0x0010dd95: daa; sbb al, 0xf2; dec dword ptr [ebp - 0x65fc37d]; call dword ptr [eax - 0x73]; 
0x0007fa28: daa; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x00061d85: das; adc byte ptr [eax], al; add byte ptr [ecx], al; ret; 
0x001170ec: das; adc dword ptr [eax], eax; push ebx; mov eax, 0x2d; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000e2498: das; add byte ptr [eax], al; add byte ptr [ebx - 0x46b73], cl; jmp dword ptr [esi - 0x77]; 
0x000ad71d: das; add eax, 0x5e5f0000; pop ebx; ret; 
0x00033c38: das; add eax, dword ptr [eax]; add byte ptr [ebp - 0x7cffd98c], cl; in al, dx; or al, 0x83; ret; 
0x001191d7: das; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016b9ec: das; add esp, 0x18; pop ebx; ret; 
0x000eab09: das; add esp, 4; pop ebx; pop esi; ret; 
0x0018f80d: das; and dword ptr [eax], eax; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00131d07: das; clc; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00171ad0: das; clc; ljmp 0:0x8b8ff; add esp, 0xc; ret; 
0x0009bf99: das; cmc; dec dword ptr [ebx + 0x18499]; add dh, dh; ret; 
0x0016d34f: das; jbe 0x16d2d7; in al, dx; add al, 0x83; ret; 
0x000517ff: das; jbe 0x5178d; ret 0x40c7; 
0x001516b5: das; je 0x15171c; mov byte ptr [ebx + 0x8258], 0; mov dword ptr [ebx + 0x8248], 0; call esi; 
0x000dff02: das; je 0xdff1a; xor eax, eax; cmp edx, 0x1cd1; setne al; ret; 
0x001932c6: das; jmp 0x1932c6; inc dword ptr [ecx + 0x96d36c3]; add byte ptr [ebx - 0x677d], cl; jmp dword ptr [ebp - 0x75]; 
0x0004a08a: das; jne 0x4a080; add esp, 8; pop ebx; ret; 
0x000938e6: das; jne 0x93930; add ebx, 1; mov eax, 0x116; call dword ptr gs:[0x10]; 
0x000d72eb: das; mov eax, 0x193; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000df740: das; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x000df7f0: das; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x0002268d: das; rol dword ptr [eax], cl; add byte ptr [ebp - 0x691837f], cl; call dword ptr [eax - 0x73]; 
0x00030cc3: das; stc; call dword ptr [eax + 0x53]; 
0x001489ad: das; stc; call dword ptr [eax + 0x56]; 
0x0011e707: das; stc; call dword ptr [eax + 0x6a]; 
0x00030e78: das; stc; call dword ptr [eax - 0x18]; 
0x00033d5d: das; stc; call dword ptr [eax - 1]; 
0x000511bd: das; sub byte ptr [esi], cl; add byte ptr [ebx - 0x365343], cl; dec dword ptr [ebp - 0x6894f79]; call dword ptr [eax - 0x73]; 
0x000d7298: das; sub esp, 8; push edi; push ebx; call eax; 
0x00059292: das; xor bh, cl; call dword ptr [eax + 0x56]; 
0x0011f72c: dec bp; stc; call dword ptr [eax + 0x57]; 
0x00034554: dec byte ptr [0x948b6877]; mov bl, 0; je 0x34556; inc dword ptr [ecx]; fidivr dword ptr [esi]; jmp edx; 
0x0018c16b: dec byte ptr [ebp - 0x7af00487]; ret 6; 
0x0019091b: dec byte ptr [ebp - 0x7af00587]; ret; 
0x0018a8db: dec byte ptr [ebp - 0x7af00687]; ret 7; 
0x0018e01b: dec byte ptr [ebp - 0x7af00687]; ret; 
0x0018b66b: dec byte ptr [ebp - 0x7af00c87]; ret 0x11; 
0x0018a0db: dec byte ptr [ebp - 0x7af00d87]; ret 0xf; 
0x0018d11b: dec byte ptr [ebp - 0x7af00d87]; ret; 
0x0017b058: dec byte ptr [ebx + 0x5b082444]; ret; 
0x0005b5d3: dec byte ptr [ebx - 0x59f43]; dec dword ptr [ecx - 0x59f7b]; jmp dword ptr [ebp - 0x5f]; 
0x000fe8d4: dec byte ptr [ebx - 0x6d34b]; jmp dword ptr [esi - 0x77]; 
0x0002ded0: dec byte ptr [ebx - 0x9b6b]; jmp dword ptr [esi - 0x77]; 
0x00086683: dec byte ptr [ebx]; inc esp; and al, 8; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0005c307: dec byte ptr [ecx - 0x5ab7b]; jmp dword ptr [esi - 0x70]; 
0x0008bbbf: dec dword ptr [0x2890f00]; xor eax, eax; ret; 
0x000b35e2: dec dword ptr [eax + 0x448b4078]; and al, 0xc; pop ebx; pop esi; ret; 
0x0017eecb: dec dword ptr [eax + 0x448bff4a]; and al, 8; pop ebx; ret; 
0x000b29a2: dec dword ptr [eax + 0x5bf88938]; pop edi; ret; 
0x00180eeb: dec dword ptr [eax - 0x2f7600b6]; pop ebx; ret; 
0x00120778: dec dword ptr [eax - 0x6c72f7aa]; ret 0xf952; 
0x0006768f: dec dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret; 
0x0008e069: dec dword ptr [eax]; jne 0x8e070; xor eax, eax; ret; 
0x0006b9e4: dec dword ptr [ebp + 0x15df0684]; in al, 0xff; jmp eax; 
0x0008766e: dec dword ptr [ebp + 0x22c8d]; add byte ptr [eax + 0x9b], bh; call dword ptr gs:[0x10]; 
0x00132cd8: dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x00069738: dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; jmp eax; 
0x00165e08: dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; mov eax, 1; ret; 
0x0003a1f6: dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; nop; xor eax, eax; ret; 
0x0014cf10: dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; ret; 
0x000e0df8: dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; xor eax, eax; ret; 
0x0004b076: dec dword ptr [ebp + 0x2c084]; add byte ptr [eax], al; call 0x4b030; add eax, ebx; jmp eax; 
0x000b693d: dec dword ptr [ebp + 0x3c0492]; add byte ptr [edi], cl; inc esp; ret 0x8b65; 
0x0013f1f4: dec dword ptr [ebp + 0x458b061c]; test byte ptr [ecx], al; ret 0x3883; 
0x001419d3: dec dword ptr [ebp + 0x48d4004]; ret; 
0x00052fdf: dec dword ptr [ebp + 0x53890150]; adc al, 0xc6; add byte ptr [0xfff8c7e9], ch; jmp dword ptr [esi - 0x70]; 
0x00096e8c: dec dword ptr [ebp + 0x558b0076]; adc byte ptr [ebx - 0x76d7db94], cl; jl 0x96ebe; adc al, 0x8d; inc edx; jmp dword ptr [ecx]; 
0x000708bf: dec dword ptr [ebp + 0x5689ff50]; and byte ptr [ebx - 0x74c3dbac], cl; adc bh, byte ptr [ecx]; ret 0x420f; 
0x0004dfc3: dec dword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret 4; 
0x0002eeac: dec dword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x000b40d2: dec dword ptr [ebp + 0x5f103844]; ret; 
0x0010ccb2: dec dword ptr [ebp + 0x6a501445]; add bh, bh; je 0x10cce0; xor bh, bh; jne 0x10cccc; call dword ptr [ebp + 0x24]; 
0x0010dd42: dec dword ptr [ebp + 0x6a501445]; add bh, bh; je 0x10dd70; xor bh, bh; jne 0x10dd5c; call dword ptr [ebp + 0x24]; 
0x00114c52: dec dword ptr [ebp + 0x6a501445]; add bh, bh; je 0x114c80; xor bh, bh; jne 0x114c6c; call dword ptr [ebp + 0x24]; 
0x00162f23: dec dword ptr [ebp + 0xa4a088]; add byte ptr [ebp - 0x5f], ah; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + edx], ecx; ret; 
0x0016ca91: dec dword ptr [ebp + 0xb6]; add al, ch; ret; 
0x00174351: dec dword ptr [ebp + 0xb6]; add byte ptr [eax + 0x16], bh; pop ebx; ret; 
0x0019c081: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx + 0x3968245c], cl; ret; 
0x00057551: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx + 0x48904e8], al; and al, 0xf6; ret 0xf20; 
0x000cf409: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx + 0x5a8d0cec], al; add dword ptr [ecx - 0xff6b], ecx; call dword ptr [ebx - 0x18]; 
0x0010e8e1: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x13375], cl; jmp dword ptr [ebp - 0x5f]; 
0x000735b9: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x1337a], cl; jmp dword ptr [ebp - 0x75]; 
0x0002dae1: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x1337d], cl; jmp dword ptr [ebp - 0x75]; 
0x000c7b69: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x0004fd51: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x36277b], al; call dword ptr [eax]; 
0x001199c9: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x0005a971: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x59b7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000feb69: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x6e34b], cl; dec dword ptr [ebp - 0x661a37a]; call dword ptr [eax - 0x73]; 
0x00168fe1: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x7c72f314], al; pop di; stc; call dword ptr [eax - 0x18]; 
0x001419c1: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0xbb7b], cl; dec dword ptr [ebx - 0xa363]; dec dword ptr [ebp + 0x48d4004]; ret; 
0x001a08d1: dec dword ptr [ebp + 0xc6083]; add byte ptr [ecx - 0x2d7a57c4], cl; je 0x1a08e9; mov dword ptr [esp + 8], eax; call edx; 
0x00080e1c: dec dword ptr [ebp + 0xff30076]; push ds; sti; mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x00127cf9: dec dword ptr [ebp - 0x10257f80]; call dword ptr [eax + 0x6a]; 
0x00178f25: dec dword ptr [ebp - 0x12240f80]; call dword ptr [eax + 0x6a]; 
0x000e16a5: dec dword ptr [ebp - 0x12343]; dec dword ptr [ecx - 0x1937b]; call dword ptr [esi - 0x18]; 
0x00105d35: dec dword ptr [ebp - 0x12343]; dec dword ptr [ecx - 0x1a37b]; call dword ptr [esi - 0x18]; 
0x00106b45: dec dword ptr [ebp - 0x124b8f80]; call dword ptr [eax + 0x6a]; 
0x000fde0d: dec dword ptr [ebp - 0x12e37f80]; call dword ptr [eax + 0x6a]; 
0x000fd61e: dec dword ptr [ebp - 0x12ebef6a]; call dword ptr [edx + 0x6a]; 
0x001771e5: dec dword ptr [ebp - 0x130f5f80]; call dword ptr [eax + 0x6a]; 
0x00175725: dec dword ptr [ebp - 0x131b3f80]; call dword ptr [eax + 0x6a]; 
0x0016bef2: dec dword ptr [ebp - 0x13343]; dec dword ptr [ecx - 0xa77b]; dec dword ptr [ebp - 0xa77b]; call dword ptr [edi + 0x50]; 
0x0004412c: dec dword ptr [ebp - 0x137cff8a]; add al, 0x83; ret; 
0x000592a4: dec dword ptr [ebp - 0x137cff8a]; add al, 0x8d; test dword ptr [edi + 0x32], ecx; stc; call dword ptr [ecx + 0x50]; 
0x001593bc: dec dword ptr [ebp - 0x137cff8a]; or al, 0x8b; inc edx; add al, 0x52; call dword ptr [eax + 0x10]; 
0x000eb8f4: dec dword ptr [ebp - 0x137cff8a]; or byte ptr [ebp - 0x6b7977d], cl; call dword ptr [eax + 0x55]; 
0x000e4b65: dec dword ptr [ebp - 0x146b6f80]; call dword ptr [eax + 0x6a]; 
0x00104e7b: dec dword ptr [ebp - 0x147cf7b6]; or byte ptr [ecx - 0x14f6b], cl; call dword ptr [edx - 0x7d]; 
0x00173d0e: dec dword ptr [ebp - 0x148b6a]; jmp ptr [ecx]; ret 0xf989; 
0x00077f14: dec dword ptr [ebp - 0x148b6b]; jmp ptr [ecx]; ret 0xd989; 
0x000738f2: dec dword ptr [ebp - 0x148b6e]; jmp ptr [ecx]; ret 0x4d89; 
0x0005382f: dec dword ptr [ebp - 0x148b6e]; jmp ptr [ecx]; ret 0xf189; 
0x000e24c5: dec dword ptr [ebp - 0x14922f80]; call dword ptr [eax + 0x6a]; 
0x0009b659: dec dword ptr [ebp - 0x174a4f80]; push esi; inc ecx; jle 0x9b674; cmovne eax, edx; ret; 
0x0009b529: dec dword ptr [ebp - 0x174b0f80]; push esi; inc ecx; jle 0x9b544; cmovne eax, edx; ret; 
0x0009b0a9: dec dword ptr [ebp - 0x174bcf80]; push esi; inc ecx; jle 0x9b0c4; cmovne eax, edx; ret; 
0x00033390: dec dword ptr [ebp - 0x1f6e4f7d]; call dword ptr [eax + 0x6a]; 
0x0002e5fa: dec dword ptr [ebp - 0x1fc07f79]; call dword ptr [eax - 0x73]; 
0x0019de7c: dec dword ptr [ebp - 0x27cff8a]; add dword ptr [ecx], ebx; shl byte ptr [esi - 0x7f], cl; ret 0x7fff; 
0x0004fbd8: dec dword ptr [ebp - 0x35e373]; call dword ptr [eax - 0x73]; 
0x000c764e: dec dword ptr [ebp - 0x35e373]; call dword ptr [eax - 0x75]; 
0x00050585: dec dword ptr [ebp - 0x35f363]; call dword ptr [edx - 0x77]; 
0x000508e0: dec dword ptr [ebp - 0x35f37b]; dec dword ptr [ecx - 0x361f7b]; inc dword ptr [ebx - 0x36277b]; jmp dword ptr [eax]; 
0x0003ff93: dec dword ptr [ebp - 0x35f49]; call dword ptr [esi + 0x6a]; 
0x0004f25d: dec dword ptr [ebp - 0x35f79]; call dword ptr [eax - 0x73]; 
0x000c647a: dec dword ptr [ebp - 0x360363]; dec dword ptr [ebx - 0x363773]; call dword ptr [eax - 0x75]; 
0x000509b0: dec dword ptr [ebp - 0x361773]; dec dword ptr [edi]; xchg edi, eax; ret 0xf039; 
0x0005015d: dec dword ptr [ebp - 0x36177b]; dec dword ptr [edi]; xchg ebp, eax; ret 0xb60f; 
0x000c865e: dec dword ptr [ebp - 0x36177b]; dec dword ptr [edi]; xchg edi, eax; ret 0xbd39; 
0x00066956: dec dword ptr [ebp - 0x3ae8f97c]; jecxz 0x6695d; jmp eax; 
0x00144f14: dec dword ptr [ebp - 0x41c6b]; call dword ptr [eax + 0x52]; 
0x0006020f: dec dword ptr [ebp - 0x4c77b]; call dword ptr [eax - 0x77]; 
0x00063db3: dec dword ptr [ebp - 0x4cb7b]; call dword ptr [eax + 0x52]; 
0x00059569: dec dword ptr [ebp - 0x5737b]; call dword ptr [eax - 0x77]; 
0x0005e93a: dec dword ptr [ebp - 0x5776b]; call dword ptr [edx + 0x50]; 
0x0016f0b5: dec dword ptr [ebp - 0x64be379]; call dword ptr [eax + 0x6a]; 
0x0016afb3: dec dword ptr [ebp - 0x64c2b7a]; call dword ptr [eax - 0x73]; 
0x00154aff: dec dword ptr [ebp - 0x650d77b]; call dword ptr [eax - 0x73]; 
0x00150c93: dec dword ptr [ebp - 0x651e37a]; call dword ptr [eax - 0x73]; 
0x0014e627: dec dword ptr [ebp - 0x652977b]; call dword ptr [eax - 0x73]; 
0x0014e20b: dec dword ptr [ebp - 0x652a77d]; call dword ptr [eax - 0x73]; 
0x0014e646: dec dword ptr [ebp - 0x652c36b]; call dword ptr [edx - 0x73]; 
0x0014d90c: dec dword ptr [ebp - 0x652fb7f]; call dword ptr [eax - 0x73]; 
0x0014da95: dec dword ptr [ebp - 0x653077f]; call dword ptr [eax - 0x73]; 
0x0014ddbd: dec dword ptr [ebp - 0x6531f79]; call dword ptr [eax - 0x73]; 
0x0014cddd: dec dword ptr [ebp - 0x6533b7d]; call dword ptr [eax + 0x68]; 
0x00147e41: dec dword ptr [ebp - 0x6552b7d]; call dword ptr [eax - 0x73]; 
0x00140c6c: dec dword ptr [ebp - 0x6578779]; call dword ptr [eax - 0x73]; 
0x00127fd2: dec dword ptr [ebp - 0x65c7779]; call dword ptr [eax - 0x73]; 
0x00120d66: dec dword ptr [ebp - 0x65d9f7d]; call dword ptr [eax - 0x73]; 
0x00120520: dec dword ptr [ebp - 0x65e9f7d]; call dword ptr [eax - 0x73]; 
0x0010cd08: dec dword ptr [ebp - 0x65fc37d]; call dword ptr [eax - 0x73]; 
0x00179c8d: dec dword ptr [ebp - 0x6611379]; call dword ptr [eax - 0x73]; 
0x00108606: dec dword ptr [ebp - 0x6612779]; call dword ptr [eax + 0x68]; 
0x001078ad: dec dword ptr [ebp - 0x6613779]; call dword ptr [eax - 0x73]; 
0x000feb75: dec dword ptr [ebp - 0x661a37a]; call dword ptr [eax - 0x73]; 
0x000ff44d: dec dword ptr [ebp - 0x661cb7a]; call dword ptr [eax - 0x73]; 
0x00177f4d: dec dword ptr [ebp - 0x664bf79]; call dword ptr [eax - 0x73]; 
0x0017648d: dec dword ptr [ebp - 0x664d379]; call dword ptr [eax - 0x73]; 
0x000e7f10: dec dword ptr [ebp - 0x665177d]; call dword ptr [eax - 0x73]; 
0x000e63b0: dec dword ptr [ebp - 0x665237d]; call dword ptr [eax - 0x73]; 
0x000e58cd: dec dword ptr [ebp - 0x6655779]; call dword ptr [eax - 0x73]; 
0x000e321e: dec dword ptr [ebp - 0x6655f7e]; call dword ptr [eax - 0x73]; 
0x000e17e6: dec dword ptr [ebp - 0x6656b79]; call dword ptr [eax + 0x68]; 
0x000e0650: dec dword ptr [ebp - 0x6657b7b]; call dword ptr [eax - 0x73]; 
0x000e0986: dec dword ptr [ebp - 0x6658f7b]; call dword ptr [eax - 0x73]; 
0x000de2f6: dec dword ptr [ebp - 0x6664b79]; call dword ptr [eax - 0x73]; 
0x000cdee3: dec dword ptr [ebp - 0x666c77d]; call dword ptr [eax - 0x73]; 
0x000ce93b: dec dword ptr [ebp - 0x666db7d]; call dword ptr [eax - 0x73]; 
0x000c8bf3: dec dword ptr [ebp - 0x6673779]; call dword ptr [eax - 0x73]; 
0x000c79e2: dec dword ptr [ebp - 0x667377e]; call dword ptr [eax - 0x73]; 
0x000c8b84: dec dword ptr [ebp - 0x667377f]; call dword ptr [eax - 0x73]; 
0x000c5049: dec dword ptr [ebp - 0x667437b]; call dword ptr [eax - 0x73]; 
0x000c29e8: dec dword ptr [ebp - 0x667c77d]; call dword ptr [eax - 0x73]; 
0x000c271a: dec dword ptr [ebp - 0x6685770]; call dword ptr [edx - 0x73]; 
0x000b68e5: dec dword ptr [ebp - 0x6696b7b]; call dword ptr [eax - 0x73]; 
0x000b671e: dec dword ptr [ebp - 0x669777e]; call dword ptr [eax - 0x73]; 
0x0009fcc2: dec dword ptr [ebp - 0x66a2370]; call dword ptr [edx - 0x73]; 
0x0009f9df: dec dword ptr [ebp - 0x66ab770]; call dword ptr [edx - 0x73]; 
0x000912b3: dec dword ptr [ebp - 0x67c5779]; call dword ptr [eax - 0x73]; 
0x0008f9b1: dec dword ptr [ebp - 0x67d337e]; call dword ptr [eax - 0x73]; 
0x0008ba88: dec dword ptr [ebp - 0x67dfb7a]; call dword ptr [eax - 0x73]; 
0x0008b434: dec dword ptr [ebp - 0x67e3b79]; call dword ptr [eax - 0x73]; 
0x0008a0eb: dec dword ptr [ebp - 0x67e5379]; call dword ptr [eax + 0x68]; 
0x0008a114: dec dword ptr [ebp - 0x67e5379]; call dword ptr [eax + 0x6a]; 
0x0008a1ca: dec dword ptr [ebp - 0x67e5379]; call dword ptr [eax - 0x73]; 
0x00089382: dec dword ptr [ebp - 0x67e8b79]; call dword ptr [eax + 0x68]; 
0x000893ba: dec dword ptr [ebp - 0x67e8b79]; call dword ptr [eax + 0x6a]; 
0x00089478: dec dword ptr [ebp - 0x67e8b79]; call dword ptr [eax - 0x73]; 
0x0007e5a2: dec dword ptr [ebp - 0x6818b7b]; call dword ptr [eax - 0x73]; 
0x0007a79e: dec dword ptr [ebp - 0x681f77d]; call dword ptr [eax - 0x73]; 
0x00078bde: dec dword ptr [ebp - 0x682cb7a]; call dword ptr [eax - 0x73]; 
0x000668b5: dec dword ptr [ebp - 0x686db79]; call dword ptr [eax - 0x73]; 
0x00065284: dec dword ptr [ebp - 0x687877a]; call dword ptr [eax + 0x68]; 
0x0005bcaf: dec dword ptr [ebp - 0x6879b7a]; call dword ptr [eax - 0x73]; 
0x0004ff85: dec dword ptr [ebp - 0x6894f79]; call dword ptr [eax - 0x73]; 
0x00051060: dec dword ptr [ebp - 0x689a379]; call dword ptr [eax - 0x73]; 
0x0013a71a: dec dword ptr [ebp - 0x68d3356]; call dword ptr [eax + 0x55]; 
0x0002ea59: dec dword ptr [ebp - 0x68e0b7e]; call dword ptr [eax - 0x73]; 
0x0002c2bf: dec dword ptr [ebp - 0x68e877d]; call dword ptr [eax - 0x73]; 
0x00023b75: dec dword ptr [ebp - 0x691637d]; call dword ptr [eax - 0x73]; 
0x0008a9d2: dec dword ptr [ebp - 0x6937f7b]; call dword ptr [eax - 0x73]; 
0x000894fa: dec dword ptr [ebp - 0x693bf7f]; call dword ptr [eax - 0x73]; 
0x0013b93e: dec dword ptr [ebp - 0x69ade7d]; call dword ptr [esi + 0x6a]; 
0x0015eda4: dec dword ptr [ebp - 0x69c1f7d]; call dword ptr [edx + 0x6a]; 
0x0015af81: dec dword ptr [ebp - 0x69c2c7d]; call dword ptr [edx + 0x6a]; 
0x0015ad7c: dec dword ptr [ebp - 0x69c687d]; call dword ptr [edx + 0x6a]; 
0x001450c8: dec dword ptr [ebp - 0x6a25079]; dec dword ptr [ebp - 0x41c6b]; call dword ptr [eax + 0x52]; 
0x001444d9: dec dword ptr [ebp - 0x6a26980]; call dword ptr [eax - 0x73]; 
0x00140ed1: dec dword ptr [ebp - 0x6a28d7a]; call dword ptr [ecx - 0x77]; 
0x0012cc8f: dec dword ptr [ebp - 0x6a91879]; call dword ptr [ebp - 1]; 
0x00124287: dec dword ptr [ebp - 0x6aa3f53]; call dword ptr [eax - 0x18]; 
0x000feae9: dec dword ptr [ebp - 0x6af7b]; call dword ptr [eax - 0x77]; 
0x000fe61f: dec dword ptr [ebp - 0x6af7b]; dec dword ptr [ecx - 0x6db7b]; jmp dword ptr [ebp - 0x5f]; 
0x0011bc1a: dec dword ptr [ebp - 0x6b48f7a]; call dword ptr [edi + 0x50]; 
0x000f43f8: dec dword ptr [ebp - 0x6b7af71]; call dword ptr [eax - 0x77]; 
0x000e0271: dec dword ptr [ebp - 0x6b8e57a]; call dword ptr [eax - 0x18]; 
0x000df947: dec dword ptr [ebp - 0x6b91c80]; call dword ptr [ebx + 0x50]; 
0x000df90c: dec dword ptr [ebp - 0x6b94180]; call dword ptr [eax + 0x6a]; 
0x000fe048: dec dword ptr [ebp - 0x6bb7b]; call dword ptr [eax - 0x73]; 
0x00099a34: dec dword ptr [ebp - 0x6bf3a69]; call dword ptr [eax - 0x73]; 
0x00097cd6: dec dword ptr [ebp - 0x6bf3a6a]; call dword ptr [eax - 0x73]; 
0x000f4688: dec dword ptr [ebp - 0x6c15b71]; call dword ptr [eax - 0x17]; 
0x000eb982: dec dword ptr [ebp - 0x6cd967d]; call dword ptr [edx + 0x52]; 
0x0003ff8d: dec dword ptr [ebp - 0x6cffe79]; dec dword ptr [ebp - 0x35f49]; call dword ptr [esi + 0x6a]; 
0x0009e89a: dec dword ptr [ebp - 0x6fffd98c]; add esp, 4; pop ebx; pop esi; ret; 
0x00076a82: dec dword ptr [ebp - 0x6fffd98c]; mov eax, 0xffffffff; ret; 
0x0008326a: dec dword ptr [ebp - 0x6fffd98c]; pop ebx; pop esi; pop edi; ret; 
0x000f7f1d: dec dword ptr [ebp - 0x702a87d]; call dword ptr [ecx + 0x6a]; 
0x0005d0cb: dec dword ptr [ebp - 0x74ffd98c]; test dword ptr [edx + edi*8 - 1], esp; dec dword ptr [ebx - 0x13348]; jmp dword ptr [ebp - 0x5f]; 
0x0010137d: dec dword ptr [ebp - 0x76afdb8c]; ret 0x5c89; 
0x000e02af: dec dword ptr [ebp - 0x76e5f8bc]; loope 0xe0240; ret 0x25; 
0x00124948: dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x001249fd: dec dword ptr [ebp - 0x76fbdbb4]; ret 0x448b; 
0x00077263: dec dword ptr [ebp - 0x76ffd98c]; ret; 
0x000c68d0: dec dword ptr [ebp - 0x77c2fbd]; or dword ptr [edi], ecx; xchg byte ptr [ebp - 0x7400000b], al; test dword ptr [ecx + ecx*8 - 0x137c0001], esi; or byte ptr [ebp - 0x35f48], cl; call dword ptr [edi + 0x53]; 
0x0008817b: dec dword ptr [ebp - 0x7cffd98c]; in al, dx; or byte ptr [ebp - 0x6d5a47d], cl; call dword ptr [eax - 0x73]; 
0x000bc393: dec dword ptr [ebp - 0x7cffd98c]; ret 0x8304; 
0x0011b990: dec dword ptr [ebp - 0x837b]; call dword ptr [eax - 0x73]; 
0x0013f1ee: dec dword ptr [ebp - 0x9b72]; dec dword ptr [ebp + 0x458b061c]; test byte ptr [ecx], al; ret 0x3883; 
0x00127f27: dec dword ptr [ebp - 0xa77b]; call dword ptr [eax + 0x6a]; 
0x0016befe: dec dword ptr [ebp - 0xa77b]; call dword ptr [edi + 0x50]; 
0x0009bf95: dec dword ptr [ebp - 0xad0ff7e]; dec dword ptr [ebx + 0x18499]; add dh, dh; ret; 
0x00131b45: dec dword ptr [ebp - 0xad11f7e]; dec dword ptr [ebx + 0x18499]; add dh, dh; ret; 
0x0009c025: dec dword ptr [ebp - 0xad42f7e]; dec dword ptr [ebx + 0x18499]; add dh, dh; ret; 
0x00131b95: dec dword ptr [ebp - 0xad44f7e]; dec dword ptr [ebx + 0x18499]; add dh, dh; ret; 
0x0009c385: dec dword ptr [ebp - 0xad75f7e]; dec dword ptr [ebx + 0x18499]; add dh, dh; ret; 
0x00131af5: dec dword ptr [ebp - 0xad77f7e]; dec dword ptr [ebx + 0x18499]; add dh, dh; ret; 
0x0009c075: dec dword ptr [ebp - 0xadf1f7e]; dec dword ptr [ebx + 0x18499]; add dh, dh; ret; 
0x0002ef71: dec dword ptr [ebp - 0xcb4b]; dec dword ptr [ecx - 0xdb6b]; call dword ptr [edi + 0x56]; 
0x00162e08: dec dword ptr [ebp - 0xd0bdf4a]; call dword ptr [ebp - 0x73]; 
0x000cf2dc: dec dword ptr [ebp - 0xdf7b]; call dword ptr [eax - 0x73]; 
0x0009bf9b: dec dword ptr [ebx + 0x18499]; add dh, dh; ret; 
0x000673a7: dec dword ptr [ebx + 0x193c80]; add byte ptr [ebx - 0x137c4fec], cl; add al, 0x89; lea edx, [edi + esi*8 - 1]; call dword ptr [ebx + 0x57]; 
0x00169cf1: dec dword ptr [ebx + 0x291c244c]; ret; 
0x001728db: dec dword ptr [ebx + 0x311c2444]; fild dword ptr [eax + 0xf72007d]; xchg esp, eax; ret; 
0x00081a17: dec dword ptr [ebx + 0x34487]; add byte ptr [ebp + 0x72840fc0], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x736d], cl; jmp dword ptr [ebp - 0x5f]; 
0x0009b8da: dec dword ptr [ebx + 0x3904244c]; ret; 
0x00061b92: dec dword ptr [ebx + 0x393bdb19]; ret 0x840f; 
0x00148afe: dec dword ptr [ebx + 0x39702444]; ret 0x840f; 
0x00059172: dec dword ptr [ebx + 0x39c8290f]; ret; 
0x0012d296: dec dword ptr [ebx + 0x44f60b0c]; push ecx; add dword ptr [eax + 0xf], eax; inc ebp; ret 0xc35b; 
0x000f7787: dec dword ptr [ebx + 0x458b2455]; sub al, 0x39; sal byte ptr [esi + ecx - 0x77], 1; ret 0xf189; 
0x000f779c: dec dword ptr [ebx + 0x458b2455]; xor byte ptr [ecx], bh; sal byte ptr [ebx + ecx - 0x77], 1; ret 0xf189; 
0x001020b6: dec dword ptr [ebx + 0x4ecb384]; stc; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x0007862e: dec dword ptr [ebx + 0x508b5843]; adc byte ptr [ebp + 0x4889044a], cl; adc byte ptr [ecx - 0x9ec74ce], cl; ret 0xf02; 
0x0016560f: dec dword ptr [ebx + 0x52530446]; push esi; call dword ptr [eax + 0xc]; 
0x0002f7aa: dec dword ptr [ebx + 0x548b0204]; and al, 4; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0002fdaa: dec dword ptr [ebx + 0x548b0204]; and al, 4; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x28]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x0002fd7a: dec dword ptr [ebx + 0x548b0204]; and al, 4; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x30]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x0002fc9a: dec dword ptr [ebx + 0x548b0204]; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x0002fc6a: dec dword ptr [ebx + 0x548b0204]; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x0002fc3a: dec dword ptr [ebx + 0x548b0204]; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x0002fb7a: dec dword ptr [ebx + 0x548b0204]; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x0002fbda: dec dword ptr [ebx + 0x548b0204]; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x0002faea: dec dword ptr [ebx + 0x548b0204]; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x0002fbaa: dec dword ptr [ebx + 0x548b0204]; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x0002fb4a: dec dword ptr [ebx + 0x548b0204]; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x0002fd4a: dec dword ptr [ebx + 0x548b0204]; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x0002fb1a: dec dword ptr [ebx + 0x548b0204]; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x0002fc0a: dec dword ptr [ebx + 0x548b0204]; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x0002faba: dec dword ptr [ebx + 0x548b0204]; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x00167fba: dec dword ptr [ebx + 0x55891445]; test byte ptr [ecx + 0x458b9045], cl; sbb byte ptr [ecx - 0x837b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0011fab3: dec dword ptr [ebx + 0x56897c40]; add al, 0x89; ret 0xe8c1; 
0x0017b037: dec dword ptr [ebx + 0x5b082444]; ret; 
0x00120fb3: dec dword ptr [ebx + 0x5b108916]; pop esi; pop edi; ret; 
0x00066a0b: dec dword ptr [ebx + 0x5f8b1447]; sbb byte ptr [ecx], ch; ret; 
0x00049a0c: dec dword ptr [ebx + 0x5f8d243c]; inc byte ptr [ebx - 0x6bf0021d]; ret; 
0x00145503: dec dword ptr [ebx + 0x650c2454]; sub edx, dword ptr [0x14]; jne 0x145515; add esp, 0x1c; ret; 
0x0014736d: dec dword ptr [ebx + 0x650c2454]; sub edx, dword ptr [0x14]; jne 0x1473bc; add esp, 0x1c; ret; 
0x000e8c32: dec dword ptr [ebx + 0x728d044a]; add al, 0x81; ret 0x2000; 
0x0004b8f1: dec dword ptr [ebx + 0x7503b855]; rol byte ptr [ebx + 0x4e8d10c4], 1; add al, 3; add cl, byte ptr [edi]; xchg edx, eax; ret 0x689; 
0x0011fe77: dec dword ptr [ebx + 0x8080]; add byte ptr [ecx - 0x6c72fbaa], cl; ret 0xf94d; 
0x000dd83d: dec dword ptr [ebx + 0x882494]; add byte ptr [eax], al; mov ecx, ebp; cmove esi, eax; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x0002ed8a: dec dword ptr [ebx + 0x8b0204]; mov eax, dword ptr [eax + 0x58]; ret; 
0x000829b5: dec dword ptr [ebx + 0x9880]; add cl, al; call 0x1e8accd; mov dword ptr [edx + 0x19f0], eax; ret; 
0x00167fae: dec dword ptr [ebx + 0xa5808f]; add byte ptr [ecx - 0xa37b], cl; dec dword ptr [ebx + 0x55891445]; test byte ptr [ecx + 0x458b9045], cl; sbb byte ptr [ecx - 0x837b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0013e95e: dec dword ptr [ebx + 0xff1390b]; xchg esi, eax; ret 0xf983; 
0x000fe619: dec dword ptr [ebx - 0x11368]; dec dword ptr [ebp - 0x6af7b]; dec dword ptr [ecx - 0x6db7b]; jmp dword ptr [ebp - 0x5f]; 
0x0010c9bf: dec dword ptr [ebx - 0x13345]; jmp dword ptr [ebp - 0x5f]; 
0x0005d0d5: dec dword ptr [ebx - 0x13348]; jmp dword ptr [ebp - 0x5f]; 
0x00022439: dec dword ptr [ebx - 0x1334d]; jmp dword ptr [ebp - 0x5f]; 
0x0014ffdc: dec dword ptr [ebx - 0x13355]; jmp dword ptr [ebp - 0x5f]; 
0x0010fb07: dec dword ptr [ebx - 0x13365]; jmp dword ptr [ebp - 0x5f]; 
0x00048376: dec dword ptr [ebx - 0x1336e]; jmp dword ptr [esi - 0x77]; 
0x0003b455: dec dword ptr [ebx - 0x13379]; jmp dword ptr [ebp - 0x75]; 
0x0011242b: dec dword ptr [ebx - 0x1337a]; jmp dword ptr [ebp - 0x75]; 
0x000c4ef7: dec dword ptr [ebx - 0x1337b]; jmp dword ptr [ebp - 0x75]; 
0x0007b8d8: dec dword ptr [ebx - 0x1337d]; jmp dword ptr [ebp - 0x75]; 
0x000b665c: dec dword ptr [ebx - 0x1337e]; jmp dword ptr [ebp - 0x75]; 
0x00061575: dec dword ptr [ebx - 0x13380]; dec dword ptr [ecx - 0x4f77b]; jmp dword ptr [ebp - 0x5f]; 
0x0012f7e9: dec dword ptr [ebx - 0x137c53bb]; add al, 0x6a; add eax, 0x5794808d; stc; call dword ptr [eax - 1]; 
0x0012ef9c: dec dword ptr [ebx - 0x137c53bb]; add al, 0x6a; add eax, 0xa480808d; stc; call dword ptr [eax - 0x75]; 
0x0012fbe6: dec dword ptr [ebx - 0x137c53bb]; add al, 0x6a; add eax, 0xa4b8808d; stc; call dword ptr [eax + 0x6a]; 
0x00104e52: dec dword ptr [ebx - 0x13f6b]; jmp dword ptr [ebp - 0x75]; 
0x00104d42: dec dword ptr [ebx - 0x13f7b]; jmp dword ptr [ebp - 0x75]; 
0x00133bfb: dec dword ptr [ebx - 0x14377]; jmp dword ptr [ebp - 0x5f]; 
0x00104e75: dec dword ptr [ebx - 0x14b7b]; dec dword ptr [ebp - 0x147cf7b6]; or byte ptr [ecx - 0x14f6b], cl; call dword ptr [edx - 0x7d]; 
0x000dfa4b: dec dword ptr [ebx - 0x15537b]; inc dword ptr [ebx - 0x7f72f714]; add al, 0x47; stc; call dword ptr [eax - 1]; 
0x0002e957: dec dword ptr [ebx - 0x1637b]; push dword ptr [ebx]; sub esp, 0x89000010; ret 0x858b; 
0x000e8c29: dec dword ptr [ebx - 0x16afdb94]; ret; 
0x0006320d: dec dword ptr [ebx - 0x16fd77ee]; dec esi; loope 0x63215; jmp dword ptr [ebp - 0x5f]; 
0x00099a10: dec dword ptr [ebx - 0x17afdbbc]; xchg esi, eax; ret 0xffff; 
0x0002e935: dec dword ptr [ebx - 0x1877b]; push dword ptr [ebx]; or eax, 0x89000010; ret 0x858b; 
0x00108600: dec dword ptr [ebx - 0x18f43]; dec dword ptr [ebp - 0x6612779]; call dword ptr [eax + 0x68]; 
0x000e17e0: dec dword ptr [ebx - 0x18f43]; dec dword ptr [ebp - 0x6656b79]; call dword ptr [eax + 0x68]; 
0x000e170d: dec dword ptr [ebx - 0x18f7b]; jmp dword ptr [ebp - 0x75]; 
0x00105e70: dec dword ptr [ebx - 0x19f43]; dec dword ptr [ebp - 0x6656b79]; call dword ptr [eax + 0x68]; 
0x00105d9d: dec dword ptr [ebx - 0x19f7b]; jmp dword ptr [ebp - 0x75]; 
0x0002e5f4: dec dword ptr [ebx - 0x1bb63]; dec dword ptr [ebp - 0x1fc07f79]; call dword ptr [eax - 0x73]; 
0x0002e5ee: dec dword ptr [ebx - 0x1cf43]; dec dword ptr [ebx - 0x1bb63]; dec dword ptr [ebp - 0x1fc07f79]; call dword ptr [eax - 0x73]; 
0x0002ea53: dec dword ptr [ebx - 0x1cf6b]; dec dword ptr [ebp - 0x68e0b7e]; call dword ptr [eax - 0x73]; 
0x0002e92f: dec dword ptr [ebx - 0x1cf73]; dec dword ptr [ebx - 0x1877b]; push dword ptr [ebx]; or eax, 0x89000010; ret 0x858b; 
0x000336d1: dec dword ptr [ebx - 0x1f363]; inc dword ptr [ecx]; sbb al, byte ptr [ecx]; pop edx; add al, 0x83; ret 0x3908; 
0x0004fb10: dec dword ptr [ebx - 0x35eb7b]; inc dword ptr [ebx - 0x36277b]; jmp dword ptr [eax]; 
0x00050157: dec dword ptr [ebx - 0x35ff73]; dec dword ptr [ebp - 0x36177b]; dec dword ptr [edi]; xchg ebp, eax; ret 0xb60f; 
0x0004fef0: dec dword ptr [ebx - 0x361b6b]; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0004fd21: dec dword ptr [ebx - 0x361f7b]; inc dword ptr [ebx - 0x36277b]; call dword ptr [eax]; 
0x00050206: dec dword ptr [ebx - 0x362f7b]; call dword ptr [esi - 1]; 
0x000c6720: dec dword ptr [ebx - 0x36374b]; call dword ptr [edi - 1]; 
0x000c6480: dec dword ptr [ebx - 0x363773]; call dword ptr [eax - 0x75]; 
0x000501f2: dec dword ptr [ebx - 0x36377b]; call dword ptr [esi - 1]; 
0x000c7e84: dec dword ptr [ebx - 0x363b6b]; inc dword ptr [ebx - 0x361f7b]; jmp dword ptr [eax]; 
0x0004e850: dec dword ptr [ebx - 0x363f6b]; call dword ptr [eax - 0x73]; 
0x000c7214: dec dword ptr [ebx - 0x363f73]; inc dword ptr [ebx - 0x2d7c0040]; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0004eefd: dec dword ptr [ebx - 0x363f7b]; inc dword ptr [ebx - 0x362f43]; call dword ptr [eax]; 
0x000c6368: dec dword ptr [ebx - 0x36476b]; call dword ptr [eax - 0x73]; 
0x000c763f: dec dword ptr [ebx - 0x36476b]; push dword ptr [ecx]; call dword ptr [eax - 0x73]; 
0x000c8bed: dec dword ptr [ebx - 0x364b43]; dec dword ptr [ebp - 0x6673779]; call dword ptr [eax - 0x73]; 
0x000c8d3f: dec dword ptr [ebx - 0x364b43]; dec dword ptr [ebp - 0x689a379]; call dword ptr [eax - 0x73]; 
0x000c7ad1: dec dword ptr [ebx - 0x364b63]; jmp dword ptr [ebp - 0x75]; 
0x000c79dc: dec dword ptr [ebx - 0x364b6b]; dec dword ptr [ebp - 0x667377e]; call dword ptr [eax - 0x73]; 
0x000c8b7e: dec dword ptr [ebx - 0x364b73]; dec dword ptr [ebp - 0x667377f]; call dword ptr [eax - 0x73]; 
0x000c7577: dec dword ptr [ebx - 0x364b7b]; call dword ptr [edi + 0x6a]; 
0x000c8158: dec dword ptr [ebx - 0x364f7b]; inc dword ptr [ebx - 0x36277b]; jmp dword ptr [eax]; 
0x0004ff7f: dec dword ptr [ebx - 0x365343]; dec dword ptr [ebp - 0x6894f79]; call dword ptr [eax - 0x73]; 
0x0005105a: dec dword ptr [ebx - 0x365343]; dec dword ptr [ebp - 0x689a379]; call dword ptr [eax - 0x73]; 
0x000506fc: dec dword ptr [ebx - 0x365363]; jmp dword ptr [ebp - 0x75]; 
0x0006b9dd: dec dword ptr [ebx - 0x365f797c]; clc; dec dword ptr [ebp + 0x15df0684]; in al, 0xff; jmp eax; 
0x000504a8: dec dword ptr [ebx - 0x365f7b]; inc dword ptr [ebx - 0x36277b]; jmp dword ptr [eax]; 
0x000c720e: dec dword ptr [ebx - 0x367b6b]; dec dword ptr [ebx - 0x363f73]; inc dword ptr [ebx - 0x2d7c0040]; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000c6e6d: dec dword ptr [ebx - 0x368b43]; jmp dword ptr [ebp - 0x75]; 
0x0004f18f: dec dword ptr [ebx - 0x368b73]; jmp dword ptr [ebp - 0x75]; 
0x000c69d0: dec dword ptr [ebx - 0x387cfb89]; add al, 0x83; ret; 
0x00169fef: dec dword ptr [ebx - 0x38efdbbc]; sbb byte ptr [ebp + 0x10000], 0; add cl, ch; ret 0xfffe; 
0x0006694f: dec dword ptr [ebx - 0x3a5f797c]; clc; dec dword ptr [ebp - 0x3ae8f97c]; jecxz 0x6695d; jmp eax; 
0x001315c5: dec dword ptr [ebx - 0x3b7c3bab]; adc byte ptr [ebp - 0x7ce4e98c], cl; ret; 
0x0012e6e6: dec dword ptr [ebx - 0x3b7cd7ba]; adc byte ptr [ebx - 0x72affb14], al; cmp dword ptr [eax + 0x57], -7; call dword ptr [eax + 0x57]; 
0x0012ef87: dec dword ptr [ebx - 0x3b7cf783]; adc byte ptr [ecx], cl; ret; 
0x0008f078: dec dword ptr [ebx - 0x3b7cffbb]; adc byte ptr [eax - 0x76f38aff], ch; ret 0xca83; 
0x0011f2d8: dec dword ptr [ebx - 0x3f7adbc0]; cmove eax, edx; ret; 
0x00118314: dec dword ptr [ebx - 0x3f7aefc0]; je 0x11831d; ret; 
0x000ec446: dec dword ptr [ebx - 0x3f7ce3ad]; add dword ptr [ecx], edi; ret 0xef7f; 
0x001439e9: dec dword ptr [ebx - 0x4236b]; call dword ptr [ebx - 0x18]; 
0x00144681: dec dword ptr [ebx - 0x44343]; jmp dword ptr [ebp - 0x5f]; 
0x0005b99c: dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xd801; 
0x0005e369: dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xf001; 
0x0005df2d: dec dword ptr [ebx - 0x4477b]; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xd801; 
0x00145154: dec dword ptr [ebx - 0x44f43]; jmp dword ptr [ebp - 0x5f]; 
0x00062a2c: dec dword ptr [ebx - 0x4574b]; inc dword ptr [ebp - 0x6f7af00a]; jecxz 0x62a39; dec dword ptr [ebx - 0x4f37b]; jmp dword ptr [ebp - 0x75]; 
0x00064564: dec dword ptr [ebx - 0x45773]; inc dword ptr [ebp - 0x657af037]; aad 0xff; dec dword ptr [ebx - 0x4f37b]; jmp dword ptr [ebp - 0x75]; 
0x0005b34a: dec dword ptr [ebx - 0x45773]; inc dword ptr [ebp - 0x74818a37]; test dword ptr [edx + edi*8 - 1], esp; jmp dword ptr [ebp - 0x75]; 
0x0005f1bb: dec dword ptr [ebx - 0x4577b]; call dword ptr [ebx - 0x73]; 
0x00100a9a: dec dword ptr [ebx - 0x4636b]; call dword ptr [eax + 0x53]; 
0x00100c29: dec dword ptr [ebx - 0x4636b]; call dword ptr [eax - 0x77]; 
0x000e1b45: dec dword ptr [ebx - 0x46f63]; call dword ptr [eax - 0x77]; 
0x000e3218: dec dword ptr [ebx - 0x46f6b]; dec dword ptr [ebp - 0x6655f7e]; call dword ptr [eax - 0x73]; 
0x000e24b9: dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0x14922f80]; call dword ptr [eax + 0x6a]; 
0x000e2d15: dec dword ptr [ebx - 0x46f7b]; jmp dword ptr [ebp - 0x75]; 
0x00179c87: dec dword ptr [ebx - 0x47343]; dec dword ptr [ebp - 0x6611379]; call dword ptr [eax - 0x73]; 
0x001078a7: dec dword ptr [ebx - 0x47343]; dec dword ptr [ebp - 0x6613779]; call dword ptr [eax - 0x73]; 
0x00177f47: dec dword ptr [ebx - 0x47343]; dec dword ptr [ebp - 0x664bf79]; call dword ptr [eax - 0x73]; 
0x00176487: dec dword ptr [ebx - 0x47343]; dec dword ptr [ebp - 0x664d379]; call dword ptr [eax - 0x73]; 
0x000e58c7: dec dword ptr [ebx - 0x47343]; dec dword ptr [ebp - 0x6655779]; call dword ptr [eax - 0x73]; 
0x00178f19: dec dword ptr [ebx - 0x4737b]; dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0x12240f80]; call dword ptr [eax + 0x6a]; 
0x00106b39: dec dword ptr [ebx - 0x4737b]; dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0x124b8f80]; call dword ptr [eax + 0x6a]; 
0x001771d9: dec dword ptr [ebx - 0x4737b]; dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0x130f5f80]; call dword ptr [eax + 0x6a]; 
0x00175719: dec dword ptr [ebx - 0x4737b]; dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0x131b3f80]; call dword ptr [eax + 0x6a]; 
0x000e4b59: dec dword ptr [ebx - 0x4737b]; dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0x146b6f80]; call dword ptr [eax + 0x6a]; 
0x000e53a5: dec dword ptr [ebx - 0x4737b]; jmp dword ptr [ebp - 0x75]; 
0x00100a67: dec dword ptr [ebx - 0x4777b]; inc dword ptr [ebx - 0x7f72f314]; int1; inc edi; stc; call dword ptr [eax - 0x18]; 
0x000e208a: dec dword ptr [ebx - 0x47f6b]; call dword ptr [edi - 1]; 
0x000ec767: dec dword ptr [ebx - 0x47fbdbac]; push es; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x4e0f; 
0x00178f1f: dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0x12240f80]; call dword ptr [eax + 0x6a]; 
0x00106b3f: dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0x124b8f80]; call dword ptr [eax + 0x6a]; 
0x001771df: dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0x130f5f80]; call dword ptr [eax + 0x6a]; 
0x0017571f: dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0x131b3f80]; call dword ptr [eax + 0x6a]; 
0x000e4b5f: dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0x146b6f80]; call dword ptr [eax + 0x6a]; 
0x000e24bf: dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0x14922f80]; call dword ptr [eax + 0x6a]; 
0x00052791: dec dword ptr [ebx - 0x49f07fbb]; push eax; or al, 0xf6; ret 0xf40; 
0x00060203: dec dword ptr [ebx - 0x4ef43]; dec dword ptr [ecx - 0x4c77b]; dec dword ptr [ebp - 0x4c77b]; call dword ptr [eax - 0x77]; 
0x0006527e: dec dword ptr [ebx - 0x4f34b]; dec dword ptr [ebp - 0x687877a]; call dword ptr [eax + 0x68]; 
0x00061e07: dec dword ptr [ebx - 0x4f363]; call dword ptr [eax + 0x51]; 
0x00061bc4: dec dword ptr [ebx - 0x4f37b]; dec dword ptr [ebx - 0x13380]; dec dword ptr [ecx - 0x4f77b]; jmp dword ptr [ebp - 0x5f]; 
0x00061670: dec dword ptr [ebx - 0x4f37b]; jmp dword ptr [ebp - 0x75]; 
0x00126f11: dec dword ptr [ebx - 0x4fb73]; jmp dword ptr [ebp - 1]; 
0x000609a0: dec dword ptr [ebx - 0x4ff4b]; call dword ptr [edi - 0x75]; 
0x001270d9: dec dword ptr [ebx - 0x5034b]; dec dword ptr [ecx - 0x4b37b]; call ecx; 
0x00061267: dec dword ptr [ebx - 0x50373]; jmp dword ptr [ebp - 0x5f]; 
0x00060819: dec dword ptr [ebx - 0x5037b]; jmp dword ptr [ebp - 0x75]; 
0x00063b84: dec dword ptr [ebx - 0x50763]; jmp dword ptr [ebp - 0x5f]; 
0x000652e5: dec dword ptr [ebx - 0x5177b]; call dword ptr [ebx + 0x53]; 
0x000649bb: dec dword ptr [ebx - 0x5277b]; call dword ptr [ebx + 0x53]; 
0x0006425c: dec dword ptr [ebx - 0x52f63]; call ecx; 
0x00121f64: dec dword ptr [ebx - 0x57cf4ec]; je 0x121fbb; pop ebx; pop esi; ret; 
0x0005bca9: dec dword ptr [ebx - 0x59b4b]; dec dword ptr [ebp - 0x6879b7a]; call dword ptr [eax - 0x73]; 
0x0005fe0e: dec dword ptr [ebx - 0x59b63]; call dword ptr [edx + 0x52]; 
0x00059551: dec dword ptr [ebx - 0x59b7b]; dec dword ptr [ecx - 0x56f4b]; dec dword ptr [ebx - 0x7780]; dec dword ptr [ecx - 0x5737b]; dec dword ptr [ebp - 0x5737b]; call dword ptr [eax - 0x77]; 
0x0005f827: dec dword ptr [ebx - 0x59b7b]; dec dword ptr [ecx - 0x5bf43]; jmp dword ptr [ebp - 0x75]; 
0x00059ae9: dec dword ptr [ebx - 0x59b7b]; jmp dword ptr [ebp - 0x75]; 
0x0005b58a: dec dword ptr [ebx - 0x5a743]; jmp dword ptr [ebp - 0x5f]; 
0x0005d53c: dec dword ptr [ebx - 0x5a74b]; jmp dword ptr [ebp - 0x5f]; 
0x0005bbc8: dec dword ptr [ebx - 0x5a773]; jmp dword ptr [ebp - 0x5f]; 
0x00059dda: dec dword ptr [ebx - 0x5a77b]; jmp dword ptr [ebp - 0x75]; 
0x0005a822: dec dword ptr [ebx - 0x5ab43]; jmp dword ptr [ebp - 0x5f]; 
0x0005d162: dec dword ptr [ebx - 0x5db73]; inc dword ptr [ecx]; ret; 
0x0005fed7: dec dword ptr [ebx - 0x5ef73]; dec dword ptr [ecx - 0x59f6b]; call dword ptr [edx - 0x75]; 
0x000e23d8: dec dword ptr [ebx - 0x6a74f3b3]; cmp bl, 0xff; call dword ptr [edi - 1]; 
0x00191761: dec dword ptr [ebx - 0x6b7f7c7c]; idiv edi; sub eax, ecx; pop ebp; pop ebx; ret; 
0x0018ef54: dec dword ptr [ebx - 0x6b7f7c7c]; idiv edi; sub eax, ecx; pop ebx; ret; 
0x000ff447: dec dword ptr [ebx - 0x6e34b]; dec dword ptr [ebp - 0x661cb7a]; call dword ptr [eax - 0x73]; 
0x000fe613: dec dword ptr [ebx - 0x6e37b]; dec dword ptr [ebx - 0x11368]; dec dword ptr [ebp - 0x6af7b]; dec dword ptr [ecx - 0x6db7b]; jmp dword ptr [ebp - 0x5f]; 
0x000ff55c: dec dword ptr [ebx - 0x6e37b]; jmp dword ptr [ebp - 0x75]; 
0x0002141e: dec dword ptr [ebx - 0x6f70]; call dword ptr [esi + 0x53]; 
0x0014b2ac: dec dword ptr [ebx - 0x72b3db84]; xchg dword ptr [ebx + ebp*4 - 7], esp; call dword ptr [eax - 0x73]; 
0x000253b0: dec dword ptr [ebx - 0x72b3db84]; xchg eax, esp; push -7; call dword ptr [eax - 0x73]; 
0x0002b0f6: dec dword ptr [ebx - 0x72bbdb8c]; xchg byte ptr [eax + 0x68], ah; stc; call dword ptr [eax - 0x73]; 
0x00026f1d: dec dword ptr [ebx - 0x72c3db84]; xchg esp, edi; jo 0x26f20; call dword ptr [eax - 0x73]; 
0x00025f77: dec dword ptr [ebx - 0x72c3db8c]; xchg byte ptr [eax + 0x6a], ah; stc; call dword ptr [eax - 0x73]; 
0x00024d0b: dec dword ptr [ebx - 0x72c3dba4]; add dword ptr [eax], 0x6b; stc; call dword ptr [eax - 0x73]; 
0x00027bcc: dec dword ptr [ebx - 0x72c7db84]; xchg eax, esp; jo 0x27bcf; call dword ptr [eax - 0x73]; 
0x0015524f: dec dword ptr [ebx - 0x72cbdb84]; xchg dword ptr [edi + ebp*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x000be853: dec dword ptr [ebx - 0x72cfdb84]; xchg dword ptr [edi + edx*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x000bbb1b: dec dword ptr [ebx - 0x72cfdb84]; xchg dword ptr [esi + esi*2 - 7], ebx; call dword ptr [eax - 0x73]; 
0x000bacca: dec dword ptr [ebx - 0x72cfdb84]; xchg esp, esi; xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x00040868: dec dword ptr [ebx - 0x72d3db84]; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x00066010: dec dword ptr [ebx - 0x72d3db84]; xchg dword ptr [eax], edi; jns 0x66013; call dword ptr [eax - 0x73]; 
0x0006b088: dec dword ptr [ebx - 0x72d3db84]; xchg dword ptr [eax], edi; jns 0x6b08b; call dword ptr [eax - 0x73]; 
0x00041519: dec dword ptr [ebx - 0x72d3db84]; xchg dword ptr [esi + esi*2 - 7], ebx; call dword ptr [eax - 0x73]; 
0x000c07ae: dec dword ptr [ebx - 0x72dbdb84]; xchg dword ptr [edi + edx*4], esp; stc; call dword ptr [eax - 0x73]; 
0x000447b5: dec dword ptr [ebx - 0x72dbdb84]; xchg dword ptr [esi + esi*2 - 7], ebx; call dword ptr [eax - 0x73]; 
0x000b727d: dec dword ptr [ebx - 0x72e3db8c]; xchg ah, ah; xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x000b6c61: dec dword ptr [ebx - 0x72e3db8c]; xchg al, cl; xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x000b6f6c: dec dword ptr [ebx - 0x72e3dba4]; adc esp, -0x6a; stc; call dword ptr [eax - 0x73]; 
0x000d26cb: dec dword ptr [ebx - 0x72e7db84]; xchg dword ptr [ecx + ebx*4 - 7], ebx; call dword ptr [eax - 0x73]; 
0x0003eec5: dec dword ptr [ebx - 0x72ebdb84]; xchg dword ptr [esi + esi*2 - 7], ebx; call dword ptr [eax + 0x68]; 
0x0013bfdb: dec dword ptr [ebx - 0x72efdbac]; adc byte ptr [edi], 0xf9; call dword ptr [eax - 0x73]; 
0x0014c68e: dec dword ptr [ebx - 0x72f3db84]; xchg dword ptr [ebx + ebp*4 - 7], ebx; call dword ptr [eax - 0x73]; 
0x00091cd8: dec dword ptr [ebx - 0x72f3db84]; xchg dword ptr [esp + eax*4], edx; stc; call dword ptr [eax - 0x73]; 
0x00088f21: dec dword ptr [ebx - 0x72f3db8c]; xchg byte ptr [ecx + eax*4 - 7], dl; call dword ptr [eax - 0x73]; 
0x00056912: dec dword ptr [ebx - 0x72f3db8c]; xchg byte ptr [edi + esi*2], dl; stc; call dword ptr [eax - 0x73]; 
0x0014d7e4: dec dword ptr [ebx - 0x72f3dbac]; xor byte ptr [eax - 0x54], 0xf9; call dword ptr [eax + 0x68]; 
0x0014d690: dec dword ptr [ebx - 0x72f3dbac]; xor byte ptr [eax - 0x54], 0xf9; call dword ptr [eax - 0x73]; 
0x0015478b: dec dword ptr [ebx - 0x74a7dba4]; cmp eax, dword ptr [ebp - 0x7c868b01]; ret; 
0x0010b0d4: dec dword ptr [ebx - 0x74dfdba4]; dec esp; and al, 0x24; mov edx, eax; mov eax, 8; call dword ptr gs:[0x10]; 
0x0014a52a: dec dword ptr [ebx - 0x74e7dbbc]; pop eax; or dh, dh; ret; 
0x001254f4: dec dword ptr [ebx - 0x74f3dbb4]; push esp; and al, 0x10; mov dword ptr [esp + 0x18], eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x000bc267: dec dword ptr [ebx - 0x7636cefd]; ret 0x4489; 
0x000d77f4: dec dword ptr [ebx - 0x768bdbb4]; cli; mov dword ptr [esp + 0xc], eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x0010eec3: dec dword ptr [ebx - 0x76acc8c4]; ret; 
0x00109dc9: dec dword ptr [ebx - 0x76cfdbb4]; cli; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000578a6: dec dword ptr [ebx - 0x76dbdb8c]; ret 0xfa29; 
0x000f1789: dec dword ptr [ebx - 0x76dfdb84]; ret; 
0x0010af04: dec dword ptr [ebx - 0x76dfdba4]; ret 0x6b8; 
0x00118d84: dec dword ptr [ebx - 0x76dfdba4]; ret 0x76b8; 
0x00118e64: dec dword ptr [ebx - 0x76dfdba4]; ret 0x94b8; 
0x00094239: dec dword ptr [ebx - 0x76e3dbbc]; add al, 0x24; call esi; 
0x0003073b: dec dword ptr [ebx - 0x76f3dbb4]; ret; 
0x000601f7: dec dword ptr [ebx - 0x777f]; dec dword ptr [ecx - 0x54343]; dec dword ptr [ebx - 0x4ef43]; dec dword ptr [ecx - 0x4c77b]; dec dword ptr [ebp - 0x4c77b]; call dword ptr [eax - 0x77]; 
0x0005955d: dec dword ptr [ebx - 0x7780]; dec dword ptr [ecx - 0x5737b]; dec dword ptr [ebp - 0x5737b]; call dword ptr [eax - 0x77]; 
0x0014ed12: dec dword ptr [ebx - 0x78725383]; pushfd; lodsd eax, dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x000fc220: dec dword ptr [ebx - 0x7872dbc4]; dec esp; sahf; stc; call dword ptr [eax - 0x73]; 
0x00103ac2: dec dword ptr [ebx - 0x7872dbc4]; mov al, 0x9e; stc; call dword ptr [eax - 0x73]; 
0x00087c17: dec dword ptr [ebx - 0x7872dbc4]; movsb byte ptr es:[edi], byte ptr [esi]; jg 0x87c19; call dword ptr [eax + 0x68]; 
0x00087c7d: dec dword ptr [ebx - 0x7872dbc4]; movsb byte ptr es:[edi], byte ptr [esi]; jg 0x87c7f; call dword ptr [eax + 0x68]; 
0x00087945: dec dword ptr [ebx - 0x7872dbc4]; xchg esp, eax; jg 0x87947; call dword ptr [eax - 0x73]; 
0x00087b9d: dec dword ptr [ebx - 0x7872dbc4]; xchg esp, eax; jg 0x87b9f; call dword ptr [eax - 0x73]; 
0x00087bf5: dec dword ptr [ebx - 0x7872dbc4]; xchg esp, eax; jg 0x87bf7; call dword ptr [eax - 0x73]; 
0x00103874: dec dword ptr [ebx - 0x7872dbc4]; xchg esp, eax; sahf; stc; call dword ptr [eax - 0x73]; 
0x00086d1b: dec dword ptr [ebx - 0x79724f8b]; jo 0x86da2; stc; call dword ptr [eax - 0x73]; 
0x00092696: dec dword ptr [ebx - 0x7972778b]; pushal; test cl, bh; call dword ptr [eax + 0x68]; 
0x000926d7: dec dword ptr [ebx - 0x7972778b]; pushal; test cl, bh; call dword ptr [eax - 0x73]; 
0x00087c5b: dec dword ptr [ebx - 0x7972dbcc]; movsb byte ptr es:[edi], byte ptr [esi]; jg 0x87c5d; call dword ptr [eax - 0x73]; 
0x00087b7b: dec dword ptr [ebx - 0x7972dbcc]; xchg esp, eax; jg 0x87b7d; call dword ptr [eax - 0x73]; 
0x00087c39: dec dword ptr [ebx - 0x7972dbcc]; xchg esp, eax; jg 0x87c3b; call dword ptr [eax - 0x73]; 
0x00144e66: dec dword ptr [ebx - 0x7a76e3bb]; mov esp, 0x8bfffffb; inc ebp; and byte ptr [ecx - 0x4477b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00025e27: dec dword ptr [ebx - 0x7ae3dbbc]; ror byte ptr [edi], 0x85; ret; 
0x0002cc8c: dec dword ptr [ebx - 0x7ae7dbb4]; ror byte ptr [edi], 0x84; ret 0; 
0x001236f4: dec dword ptr [ebx - 0x7af3dbac]; ror byte ptr [edi], cl; test bh, cl; fucompi st(7); call dword ptr [ebx + 0x56]; 
0x001711c3: dec dword ptr [ebx - 0x7bfc3bbb]; nop; mov al, byte ptr [0x3efff928]; jmp eax; 
0x0002f295: dec dword ptr [ebx - 0x7c034eb4]; jns 0x2f2b5; push dword ptr [ecx + ebx - 0x7d]; in al, dx; or byte ptr [ecx - 0xe36b], cl; call dword ptr [ecx + 0x50]; 
0x000fc2a8: dec dword ptr [ebx - 0x7c72dbe4]; dec esp; sahf; stc; call dword ptr [eax - 0x73]; 
0x000568e4: dec dword ptr [ebx - 0x7cb7dba4]; ret; 
0x00029cdb: dec dword ptr [ebx - 0x7ccbdbbc]; ret 0x8904; 
0x00034c4e: dec dword ptr [ebx - 0x7cd3db8c]; ret 0xc702; 
0x00114c6c: dec dword ptr [ebx - 0x7cd3db94]; in al, dx; or al, 0xff; je 0x114c9b; sbb al, 0xe8; ret; 
0x000fac9a: dec dword ptr [ebx - 0x7cf3dbbc]; ret 0x8902; 
0x00077598: dec dword ptr [ebx - 0x7d7257ab]; and byte ptr [ebp - 7], bh; call dword ptr [eax - 0x73]; 
0x000679af: dec dword ptr [ebx - 0x88b7b]; dec dword ptr [ecx - 0x17257627]; mov eax, dword ptr [0x89ffffdf]; test dword ptr [edi + esi*8 - 1], esi; jmp ptr [ecx]; ret; 
0x0006cb02: dec dword ptr [ebx - 0x89763]; call dword ptr [edx - 0x77]; 
0x0006d82f: dec dword ptr [ebx - 0x8977b]; inc dword ptr [ebx - 0x7f72f314]; clc; js 0x6d837; call dword ptr [eax - 0x18]; 
0x0006cc90: dec dword ptr [ebx - 0x8977b]; jmp dword ptr [ebp - 0x75]; 
0x000677f1: dec dword ptr [ebx - 0x8b74b]; inc dword ptr [ebx - 0x47cef3c]; or cl, byte ptr [edi]; xchg esp, eax; ret; 
0x0006704d: dec dword ptr [ebx - 0x8c77b]; call dword ptr [esi - 0x18]; 
0x00067d83: dec dword ptr [ebx - 0x8d34b]; inc dword ptr [ebx - 0x6a76f314]; xchg esp, eax; idiv edi; call dword ptr [esi - 0x18]; 
0x0006c1df: dec dword ptr [ebx - 0x8e77b]; call dword ptr [ebx - 0x18]; 
0x0013e958: dec dword ptr [ebx - 0x8f63]; dec dword ptr [ebx + 0xff1390b]; xchg esi, eax; ret 0xf983; 
0x0012f6ec: dec dword ptr [ebx - 0x936b]; call dword ptr [edi + 0x50]; 
0x0002de3d: dec dword ptr [ebx - 0x936b]; jmp dword ptr [ebp - 0x5f]; 
0x0012f9ac: dec dword ptr [ebx - 0x9f6b]; call dword ptr [eax - 0x75]; 
0x000546bb: dec dword ptr [ebx - 0xa34b]; call dword ptr [edx - 0x77]; 
0x001419cd: dec dword ptr [ebx - 0xa363]; dec dword ptr [ebp + 0x48d4004]; ret; 
0x00127fcc: dec dword ptr [ebx - 0xbb43]; dec dword ptr [ebp - 0x65c7779]; call dword ptr [eax - 0x73]; 
0x00128099: dec dword ptr [ebx - 0xbb7b]; dec dword ptr [ebp - 0x10257f80]; call dword ptr [eax + 0x6a]; 
0x00053712: dec dword ptr [ebx - 0xbb7b]; dec dword ptr [edi]; scasd eax, dword ptr es:[edi]; ret; 
0x0011e7da: dec dword ptr [ebx - 0xdb7d]; inc dword ptr [ebx + 0x8b10c4]; test eax, eax; je 0x11e830; call eax; 
0x0011e91c: dec dword ptr [ebx - 0xdb7d]; inc dword ptr [ebx + 0x8b10c4]; test eax, eax; je 0x11e9c8; call eax; 
0x0016afad: dec dword ptr [ebx - 0xf34b]; dec dword ptr [ebp - 0x64c2b7a]; call dword ptr [eax - 0x73]; 
0x00085ad3: dec dword ptr [ebx - 0xf47efb1]; add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0017db63: dec dword ptr [ecx + 0x1c030004]; mov edi, dword ptr [esi]; jmp ebx; 
0x000ddd0c: dec dword ptr [ecx + 0x1db8c2]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000c12ec: dec dword ptr [ecx + 0x244c89fe]; adc byte ptr [ecx + 0x39eed3d1], cl; ret; 
0x0012c3d8: dec dword ptr [ecx + 0x24748bd3]; add al, 0x89; inc edi; adc al, 0x29; ret; 
0x0012752c: dec dword ptr [ecx + 0x260b3]; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00063a36: dec dword ptr [ecx + 0x29008bf2]; ret 0xd189; 
0x0005b61a: dec dword ptr [ecx + 0x29008bfa]; ret 0x953b; 
0x0005be0b: dec dword ptr [ecx + 0x29008bfa]; ret 0xd189; 
0x0005b887: dec dword ptr [ecx + 0x29078bca]; ret 0x953b; 
0x000ead05: dec dword ptr [ecx + 0x32e82434]; push esp; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000f4359: dec dword ptr [ecx + 0x3ecb01d0]; jmp ebx; 
0x00067045: dec dword ptr [ecx + 0x408d8bc2]; idiv edi; dec dword ptr [ebx - 0x8c77b]; call dword ptr [esi - 0x18]; 
0x0008763b: dec dword ptr [ecx + 0x40e383c3]; jne 0x87664; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x000eaff3: dec dword ptr [ecx + 0x44e82434]; push ecx; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x001703bc: dec dword ptr [ecx + 0x45f6240c]; adc byte ptr [esi*2 + 0x828d18], al; push ebx; hlt; jmp dword ptr [esi - 9]; 
0x000ccdea: dec dword ptr [ecx + 0x4708910]; pop ebx; pop esi; pop edi; ret; 
0x001669bd: dec dword ptr [ecx + 0x48891450]; add al, 0x5b; ret; 
0x0011fb6b: dec dword ptr [ecx + 0x4b82846]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000cf93d: dec dword ptr [ecx + 0x4c48310]; xor eax, eax; pop ebx; pop esi; ret; 
0x0016703c: dec dword ptr [ecx + 0x548b0450]; and al, 8; mov dword ptr [eax + 0xc], edx; ret; 
0x0015a76a: dec dword ptr [ecx + 0x5b102454]; pop esi; jmp eax; 
0x00074940: dec dword ptr [ecx + 0x5f5e5bd8]; pop ebp; ret; 
0x000520ad: dec dword ptr [ecx + 0x5f5e5bf0]; ret; 
0x000f02d6: dec dword ptr [ecx + 0x5f5e5bf8]; ret; 
0x000415b5: dec dword ptr [ecx + 0x68808dc7]; jbe 0x415b6; call dword ptr [eax - 0x73]; 
0x0006b176: dec dword ptr [ecx + 0x6c85c7ce]; idiv edi; call dword ptr [ebx]; 
0x00172353: dec dword ptr [ecx + 0x74928dd9]; jmp 0x17235a; jmp ptr [ecx]; ret 0xc129; 
0x0009856c: dec dword ptr [ecx + 0x75c085c6]; test al, 0x31; ror byte ptr [ebp - 0x17efd4bc], cl; ret 0xffcf; 
0x00038688: dec dword ptr [ecx + 0xf042444]; xchg ebp, eax; ret; 
0x00022908: dec dword ptr [ecx + 0xfd28510]; test byte ptr [edi + 0x6b000000], dl; ret 0x893c; 
0x001511b6: dec dword ptr [ecx - 0x12b6b]; call dword ptr [eax - 0x18]; 
0x00150e98: dec dword ptr [ecx - 0x1337b]; call dword ptr [eax - 0x18]; 
0x001047dd: dec dword ptr [ecx - 0x14743]; jmp dword ptr [ebp - 0x5f]; 
0x0016bebe: dec dword ptr [ecx - 0x15b43]; jmp dword ptr [ebp - 0x5f]; 
0x0006972f: dec dword ptr [ecx - 0x16efdba4]; mov edx, 0x8dfffff3; mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x000679b5: dec dword ptr [ecx - 0x17257627]; mov eax, dword ptr [0x89ffffdf]; test dword ptr [edi + esi*8 - 1], esi; jmp ptr [ecx]; ret; 
0x000e11af: dec dword ptr [ecx - 0x1937b]; call dword ptr [edi - 0x18]; 
0x000e16ab: dec dword ptr [ecx - 0x1937b]; call dword ptr [esi - 0x18]; 
0x0010584f: dec dword ptr [ecx - 0x1a37b]; call dword ptr [edi - 0x18]; 
0x00105d3b: dec dword ptr [ecx - 0x1a37b]; call dword ptr [esi - 0x18]; 
0x0012c453: dec dword ptr [ecx - 0x1b17dbcc]; cmp al, 0xef; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0002e5e8: dec dword ptr [ecx - 0x1c343]; dec dword ptr [ebx - 0x1cf43]; dec dword ptr [ebx - 0x1bb63]; dec dword ptr [ebp - 0x1fc07f79]; call dword ptr [eax - 0x73]; 
0x0002e14f: dec dword ptr [ecx - 0x1c373]; call dword ptr [eax - 1]; 
0x000fe450: dec dword ptr [ecx - 0x2f7f723a]; and ch, ch; call dword ptr [eax - 0x73]; 
0x000fd563: dec dword ptr [ecx - 0x2f7f723f]; and ch, ch; call dword ptr [eax - 0x73]; 
0x0004e5a0: dec dword ptr [ecx - 0x35fb63]; inc dword ptr [ebx - 0x362f43]; call dword ptr [eax]; 
0x000c6113: dec dword ptr [ecx - 0x35fb63]; inc dword ptr [ebx - 0x363743]; call dword ptr [eax]; 
0x0004e59a: dec dword ptr [ecx - 0x35ff73]; dec dword ptr [ecx - 0x35fb63]; inc dword ptr [ebx - 0x362f43]; call dword ptr [eax]; 
0x000c610d: dec dword ptr [ecx - 0x35ff73]; dec dword ptr [ecx - 0x35fb63]; inc dword ptr [ebx - 0x363743]; call dword ptr [eax]; 
0x0004fd1b: dec dword ptr [ecx - 0x360343]; dec dword ptr [ebx - 0x361f7b]; inc dword ptr [ebx - 0x36277b]; call dword ptr [eax]; 
0x0004eb6c: dec dword ptr [ecx - 0x361f73]; call dword ptr [eax + 0x6a]; 
0x000508e6: dec dword ptr [ecx - 0x361f7b]; inc dword ptr [ebx - 0x36277b]; jmp dword ptr [eax]; 
0x0004ff71: dec dword ptr [ecx - 0x364f7b]; inc dword ptr [ebp - 0x4e70f040]; out 0xff, eax; dec dword ptr [ebx - 0x365343]; dec dword ptr [ebp - 0x6894f79]; call dword ptr [eax - 0x73]; 
0x000e9187: dec dword ptr [ecx - 0x3e0f7626]; cli; sbb cl, al; clc; sbb byte ptr [ecx], bh; ret 0x850f; 
0x000889c9: dec dword ptr [ecx - 0x41f7dbac]; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001443d5: dec dword ptr [ecx - 0x43b6b]; call dword ptr [eax - 0x18]; 
0x00104c0a: dec dword ptr [ecx - 0x4725763f]; rol byte ptr [eax], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00104d65: dec dword ptr [ecx - 0x473e7626]; rol byte ptr [eax], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e184e: dec dword ptr [ecx - 0x4777b]; jmp dword ptr [ebp - 0x5f]; 
0x0013b7ba: dec dword ptr [ecx - 0x48b7b]; call dword ptr [edi + 0x52]; 
0x000238e7: dec dword ptr [ecx - 0x48f0e7b0]; xchg ebx, eax; shr byte ptr [esi - 7], 1; jmp dword ptr [esi - 0x77]; 
0x00023b2e: dec dword ptr [ecx - 0x48f0e7ba]; adc eax, 0x6e; stc; jmp dword ptr [esi - 0x77]; 
0x00024507: dec dword ptr [ecx - 0x48f0f7bd]; xchg eax, esp; outsb dx, byte ptr [esi]; stc; jmp dword ptr [esi - 0x77]; 
0x000e2eb6: dec dword ptr [ecx - 0x4976b]; call dword ptr [eax - 0x18]; 
0x000e2f45: dec dword ptr [ecx - 0x4977b]; inc dword ptr [ecx]; ret; 
0x001270df: dec dword ptr [ecx - 0x4b37b]; call ecx; 
0x00060209: dec dword ptr [ecx - 0x4c77b]; dec dword ptr [ebp - 0x4c77b]; call dword ptr [eax - 0x77]; 
0x00060813: dec dword ptr [ecx - 0x4cf7b]; dec dword ptr [ebx - 0x5037b]; jmp dword ptr [ebp - 0x75]; 
0x00142e6d: dec dword ptr [ecx - 0x4d7bf03d]; add al, byte ptr [eax]; add byte ptr [ebp - 0x7cffcabc], cl; in al, dx; add al, 1; ret 0x4489; 
0x00062262: dec dword ptr [ecx - 0x4eb6b]; call dword ptr [ecx + 0x50]; 
0x0006015f: dec dword ptr [ecx - 0x4f363]; jmp dword ptr [ebp - 0x5f]; 
0x00060841: dec dword ptr [ecx - 0x4f77b]; dec dword ptr [ecx - 0x51373]; jmp dword ptr [ebp - 0x75]; 
0x0006157b: dec dword ptr [ecx - 0x4f77b]; jmp dword ptr [ebp - 0x5f]; 
0x0006240b: dec dword ptr [ecx - 0x4ff4b]; jmp dword ptr [ebp - 0x5f]; 
0x00060847: dec dword ptr [ecx - 0x51373]; jmp dword ptr [ebp - 0x75]; 
0x00062492: dec dword ptr [ecx - 0x52f4b]; jmp dword ptr [ebp - 0x5f]; 
0x00060159: dec dword ptr [ecx - 0x53f73]; dec dword ptr [ecx - 0x4f363]; jmp dword ptr [ebp - 0x5f]; 
0x000601fd: dec dword ptr [ecx - 0x54343]; dec dword ptr [ebx - 0x4ef43]; dec dword ptr [ecx - 0x4c77b]; dec dword ptr [ebp - 0x4c77b]; call dword ptr [eax - 0x77]; 
0x00059557: dec dword ptr [ecx - 0x56f4b]; dec dword ptr [ebx - 0x7780]; dec dword ptr [ecx - 0x5737b]; dec dword ptr [ebp - 0x5737b]; call dword ptr [eax - 0x77]; 
0x00059563: dec dword ptr [ecx - 0x5737b]; dec dword ptr [ebp - 0x5737b]; call dword ptr [eax - 0x77]; 
0x000869a0: dec dword ptr [ecx - 0x5817fdf4]; xchg esi, eax; cli; jmp dword ptr [ebp - 0x5f]; 
0x0005fedd: dec dword ptr [ecx - 0x59f6b]; call dword ptr [edx - 0x75]; 
0x0005c3e3: dec dword ptr [ecx - 0x59f73]; call dword ptr [edi - 0x18]; 
0x0005d44b: dec dword ptr [ecx - 0x59f73]; jmp dword ptr [ebp - 0x5f]; 
0x0005d080: dec dword ptr [ecx - 0x59f7b]; dec dword ptr [ebx - 0x5a743]; jmp dword ptr [ebp - 0x5f]; 
0x0005d536: dec dword ptr [ecx - 0x59f7b]; dec dword ptr [ebx - 0x5a74b]; jmp dword ptr [ebp - 0x5f]; 
0x0005bbc2: dec dword ptr [ecx - 0x59f7b]; dec dword ptr [ebx - 0x5a773]; jmp dword ptr [ebp - 0x5f]; 
0x0005b854: dec dword ptr [ecx - 0x59f7b]; dec dword ptr [edi]; test edx, esi; idiv bh; jmp dword ptr [ebp - 0x5f]; 
0x0005b5d9: dec dword ptr [ecx - 0x59f7b]; jmp dword ptr [ebp - 0x5f]; 
0x0005b89e: dec dword ptr [ecx - 0x5ab73]; call dword ptr [edx + 0x50]; 
0x0005c28b: dec dword ptr [ecx - 0x5ab73]; call dword ptr [esi - 0x18]; 
0x00179743: dec dword ptr [ecx - 0x5b17dbc4]; ret 0xfff6; 
0x0005fe08: dec dword ptr [ecx - 0x5b36b]; dec dword ptr [ebx - 0x59b63]; call dword ptr [edx + 0x52]; 
0x0005f82d: dec dword ptr [ecx - 0x5bf43]; jmp dword ptr [ebp - 0x75]; 
0x0005947f: dec dword ptr [ecx - 0x6036b]; jmp dword ptr [ebp - 0x5f]; 
0x0007183a: dec dword ptr [ecx - 0x6b77762f]; add byte ptr [eax], al; add byte ptr [ebx - 0x6e76a7b8], cl; mov byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x000fdf44: dec dword ptr [ecx - 0x6d37b]; call dword ptr [edi + 0x29]; 
0x000fe60d: dec dword ptr [ecx - 0x6d37b]; dec dword ptr [ebx - 0x6e37b]; dec dword ptr [ebx - 0x11368]; dec dword ptr [ebp - 0x6af7b]; dec dword ptr [ecx - 0x6db7b]; jmp dword ptr [ebp - 0x5f]; 
0x000fe625: dec dword ptr [ecx - 0x6db7b]; jmp dword ptr [ebp - 0x5f]; 
0x00150e44: dec dword ptr [ecx - 0x6f7c723e]; xor al, 0xf9; call dword ptr [eax + 0x52]; 
0x0009b35f: dec dword ptr [ecx - 0x72afdbe4]; test edx, eax; inc ebx; stc; call dword ptr [eax + 0x57]; 
0x0007b7dc: dec dword ptr [ecx - 0x72afebaa]; xor dword ptr [eax + 0x14], 0xffffffe5; call dword ptr [eax - 0x73]; 
0x00052cb7: dec dword ptr [ecx - 0x72e71410]; je 0x52ce5; add byte ptr [ebx - 0x3e7cfbaf], cl; add al, 0x83; ret; 
0x000378af: dec dword ptr [ecx - 0x72e7dbbc]; and dword ptr [eax - 0x29], 0xffffffe0; dec dword ptr [edi]; inc esp; ret 0x24e9; 
0x00057415: dec dword ptr [ecx - 0x72f7db8c]; mov bl, 1; xor cl, bh; dec dword ptr [ecx - 0x9ebdb8c]; ret 0xf50; 
0x00152824: dec dword ptr [ecx - 0x737f723a]; scasb al, byte ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x00165241: dec dword ptr [ecx - 0x763e7606]; ret; 
0x000c2707: dec dword ptr [ecx - 0x769bdbac]; ret 0x59e9; 
0x001035e4: dec dword ptr [ecx - 0x769bdbbc]; ret; 
0x000c26fc: dec dword ptr [ecx - 0x76a3dbac]; ret 0x92e9; 
0x0013ad6f: dec dword ptr [ecx - 0x76c7dbbc]; ret; 
0x0006a727: dec dword ptr [ecx - 0x76d7db8c]; ret; 
0x000302c6: dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x0013a0c1: dec dword ptr [ecx - 0x76e3dbbc]; ret 0x478b; 
0x00102ebd: dec dword ptr [ecx - 0x76ebdbbc]; ret; 
0x001322bb: dec dword ptr [ecx - 0x7872af05]; jno 0x132302; stc; call dword ptr [eax - 0x18]; 
0x00053f9a: dec dword ptr [ecx - 0x7a0fd628]; test byte ptr [edi], 0x49; ret; 
0x00151162: dec dword ptr [ecx - 0x7c037606]; rcr byte ptr [edx], 0x89; shl dword ptr [0xfffff000], 0x29; ret 0xe183; 
0x0016025a: dec dword ptr [ecx - 0x7c72dbfc]; inc ebx; stc; call dword ptr [esi + 0x57]; 
0x001032f7: dec dword ptr [ecx - 0x7cb7dba4]; ret; 
0x00032a79: dec dword ptr [ecx - 0x7ce3db8c]; ret 0x8b04; 
0x00066d99: dec dword ptr [ecx - 0x87773]; call dword ptr [ebx + 0x52]; 
0x0006c479: dec dword ptr [ecx - 0x88b6b]; call dword ptr [ecx + 0x6a]; 
0x0006c6b8: dec dword ptr [ecx - 0x88b6b]; call dword ptr [edx + 0x6a]; 
0x0006ce48: dec dword ptr [ecx - 0x88b6b]; call dword ptr [edx - 0x18]; 
0x0006c56a: dec dword ptr [ecx - 0x88b73]; call dword ptr [esi + 0x6a]; 
0x00067091: dec dword ptr [ecx - 0x88b7b]; jmp ptr [ecx]; ret; 
0x00066089: dec dword ptr [ecx - 0x8b743]; dec dword ptr [ecx - 0x8c37b]; jmp dword ptr [ebp - 0x5f]; 
0x0006608f: dec dword ptr [ecx - 0x8c37b]; jmp dword ptr [ebp - 0x5f]; 
0x0006b106: dec dword ptr [ecx - 0x8d743]; jmp dword ptr [ebp - 0x5f]; 
0x0006b100: dec dword ptr [ecx - 0x8e77b]; dec dword ptr [ecx - 0x8d743]; jmp dword ptr [ebp - 0x5f]; 
0x0006b461: dec dword ptr [ecx - 0x90b7b]; jmp ptr [ecx]; ret; 
0x001412bb: dec dword ptr [ecx - 0x9373]; jmp dword ptr [ebp - 0x5f]; 
0x0005741f: dec dword ptr [ecx - 0x9ebdb8c]; ret 0xf50; 
0x0015b142: dec dword ptr [ecx - 0xa17dbcc]; dec edi; in al, dx; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000548e4: dec dword ptr [ecx - 0xa34b]; call dword ptr [eax - 1]; 
0x000543f5: dec dword ptr [ecx - 0xa773]; inc dword ptr [eax - 0xcf43]; jmp dword ptr [edi - 0x75]; 
0x0016bef8: dec dword ptr [ecx - 0xa77b]; dec dword ptr [ebp - 0xa77b]; call dword ptr [edi + 0x50]; 
0x0011b8af: dec dword ptr [ecx - 0xab7b]; jmp dword ptr [ebp - 0x5f]; 
0x0016a55e: dec dword ptr [ecx - 0xbb6b]; jmp dword ptr [ebp - 0x5f]; 
0x000d4f24: dec dword ptr [ecx - 0xbb73]; call dword ptr [eax - 0x18]; 
0x00130524: dec dword ptr [ecx - 0xcb6b]; call dword ptr [eax - 0x77]; 
0x0002ef39: dec dword ptr [ecx - 0xdb6b]; call dword ptr [eax - 0x39]; 
0x0002ef77: dec dword ptr [ecx - 0xdb6b]; call dword ptr [edi + 0x56]; 
0x0002f0f8: dec dword ptr [ecx - 0xdf73]; call dword ptr [edi + 0x50]; 
0x000cf2d6: dec dword ptr [ecx - 0xe77b]; dec dword ptr [ebp - 0xdf7b]; call dword ptr [eax - 0x73]; 
0x0016ab4c: dec dword ptr [ecx - 0xe77b]; jmp dword ptr [ebp - 0x5f]; 
0x0016ab46: dec dword ptr [ecx - 0xf34b]; dec dword ptr [ecx - 0xe77b]; jmp dword ptr [ebp - 0x5f]; 
0x000cf473: dec dword ptr [ecx - 0xff6b]; call dword ptr [edi - 0x18]; 
0x000e2ed1: dec dword ptr [ecx]; ret 0x840f; 
0x00116144: dec dword ptr [ecx]; ror byte ptr [ecx - 0x3fcef7bf], 1; pop ebx; ret; 
0x0012095a: dec dword ptr [edi]; add byte ptr [eax], al; and eax, 0xfffff000; or eax, edx; ret; 
0x00196303: dec dword ptr [edi]; add byte ptr [eax], al; jne 0x196100; xor eax, eax; pop edi; ret; 
0x000ca3ec: dec dword ptr [edi]; add byte ptr [ecx], al; ret; 
0x00047bb6: dec dword ptr [edi]; add byte ptr [ecx], cl; ret 0x9f74; 
0x000c17ae: dec dword ptr [edi]; add byte ptr [ecx], cl; ret 0xa074; 
0x00169a19: dec dword ptr [edi]; cmp byte ptr [ebx + 1], 0; add byte ptr [ebx + 0x45038045], cl; adc al, 0x39; ret 0x870f; 
0x00024861: dec dword ptr [edi]; dec eax; ret 0x8dc3; 
0x000d4da6: dec dword ptr [edi]; dec ebp; ret; 
0x00035065: dec dword ptr [edi]; inc ebp; call 0x26856; jmp dword ptr [esi - 0x70]; 
0x0009af6c: dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x001218e2: dec dword ptr [edi]; inc ebp; ret 0xd231; 
0x00170500: dec dword ptr [edi]; inc ebp; ret 0xe0c1; 
0x000fd2ab: dec dword ptr [edi]; inc ebp; ret; 
0x00088a74: dec dword ptr [edi]; inc esi; ljmp 0:0xb68d80eb; add byte ptr [eax], al; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x00191c29: dec dword ptr [edi]; inc esi; ret 0x5d5e; 
0x0009b1f2: dec dword ptr [edi]; inc esi; ret 0xc3eb; 
0x000378b9: dec dword ptr [edi]; inc esp; ret 0x24e9; 
0x00049049: dec dword ptr [edi]; inc esp; ret 0x3c83; 
0x00045676: dec dword ptr [edi]; inc esp; ret 0x4489; 
0x0003f36d: dec dword ptr [edi]; inc esp; ret 0x489; 
0x0007cc96: dec dword ptr [edi]; inc esp; ret 0x568b; 
0x00098f6a: dec dword ptr [edi]; inc esp; ret 0x568d; 
0x0009afb6: dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x0004e398: dec dword ptr [edi]; inc esp; ret 0x8589; 
0x000dadbf: dec dword ptr [edi]; inc esp; ret 0x8d50; 
0x0009bfc1: dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x00094d82: dec dword ptr [edi]; inc esp; ret 0xd231; 
0x00099577: dec dword ptr [edi]; inc esp; ret 0xe821; 
0x000dad07: dec dword ptr [edi]; inc esp; ret 0xec83; 
0x000c69c7: dec dword ptr [edi]; inc esp; ret; 
0x00098c14: dec dword ptr [edi]; inc esp; shl dword ptr [ecx], 1; ret 0x1a8b; 
0x000fe8cf: dec dword ptr [edi]; mov bh, 0x4c; push ss; dec byte ptr [ebx - 0x6d34b]; jmp dword ptr [esi - 0x77]; 
0x0006e787: dec dword ptr [edi]; mov dh, 0x44; pavgb mm1, qword ptr [ebx - 0x768fdb8c]; fiadd dword ptr [ebx]; adc al, 0x86; jmp edx; 
0x0015717a: dec dword ptr [edi]; mov dh, 0x46; add dword ptr [ebp + 0x3c89017e], ecx; and al, 0x84; ror byte ptr [edi], 0x95; ret 0x3a3c; 
0x000e6fc9: dec dword ptr [edi]; mov dh, 0x55; add byte ptr [ecx], bh; ret 0x840f; 
0x0006d493: dec dword ptr [edi]; mov dh, 0x57; or al, 0xf6; ret 0xf08; 
0x0002d675: dec dword ptr [edi]; mov esi, 0x895f3cd0; push ebp; ror byte ptr [edi], 0x94; ret 0x3a3c; 
0x0009c0f8: dec dword ptr [edi]; mov esp, 0xf042444; inc esp; ret 0xc083; 
0x0004fef6: dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00053718: dec dword ptr [edi]; scasd eax, dword ptr es:[edi]; ret; 
0x0004903e: dec dword ptr [edi]; test bl, bl; add al, 0; add byte ptr [ecx], dh; rol byte ptr [ebx + 0x440ffff8], cl; ret 0x3c83; 
0x00100056: dec dword ptr [edi]; test byte ptr [eax + eax - 0x7b750000], bl; and al, 0xd0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000f39b9: dec dword ptr [edi]; test byte ptr [eax - 0x7cfffffe], al; rol byte ptr [ecx], 0x39; ret 0xe775; 
0x0016fa14: dec dword ptr [edi]; test byte ptr [ebp - 0x76ffffff], ah; ret 0xb60f; 
0x000fd869: dec dword ptr [edi]; test byte ptr [ebx + 0xf00000f], al; mov dh, 0x4a; or cl, ch; ret 0xfff8; 
0x00065e5e: dec dword ptr [edi]; test byte ptr [ebx - 0x7b000000], dl; ror byte ptr [edi], 0x84; ret; 
0x0006d48d: dec dword ptr [edi]; test byte ptr [ebx - 1], bh; dec dword ptr [edi]; mov dh, 0x57; or al, 0xf6; ret 0xf08; 
0x00172163: dec dword ptr [edi]; test byte ptr [edi - 0x77000000], dl; ret 0xe283; 
0x00061d82: dec dword ptr [edi]; test byte ptr [edi], ch; adc byte ptr [eax], al; add byte ptr [ecx], al; ret; 
0x00148ec2: dec dword ptr [edi]; test byte ptr [edi], cl; idiv bh; dec dword ptr [ebx + 0x39702444]; ret 0x840f; 
0x0016f8e4: dec dword ptr [edi]; test byte ptr [edx - 0x77000000], dh; ret 0xe283; 
0x0002e909: dec dword ptr [edi]; test byte ptr [esi - 0x7c000007], dh; in al, dx; or byte ptr [ebp - 0x1af7b], cl; call dword ptr [eax - 1]; 
0x000b4e3f: dec dword ptr [edi]; test byte ptr [esi - 0x8ffffff], cl; ret 3; 
0x0004e2bf: dec dword ptr [edi]; test ch, ah; and al, byte ptr [eax]; add byte ptr [eax - 0x363743], al; jmp dword ptr [ebp + 0xf]; 
0x00151e7a: dec dword ptr [edi]; test dl, bl; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x840f; 
0x0005d2a2: dec dword ptr [edi]; test dword ptr [eax - 0x39ffffeb], ebp; test dword ptr [edx + edi*8 - 1], eax; jmp dword ptr [ebp - 0x75]; 
0x000b4baa: dec dword ptr [edi]; test dword ptr [ebx + 0x5e000000], ebx; xor eax, eax; pop ebx; ret; 
0x000f921e: dec dword ptr [edi]; test dword ptr [ecx], esi; or byte ptr [eax], al; add byte ptr [ebx - 0x17a8f314], al; ret 0xfdf5; 
0x0006d682: dec dword ptr [edi]; test dword ptr [edi - 0x16000020], eax; and cl, 0xff; jmp dword ptr [esi - 0x70]; 
0x0009a60e: dec dword ptr [edi]; test dword ptr [edx + 0x69], ebx; clc; call ptr [ebx + 0x5e]; pop edi; ret; 
0x000b76ad: dec dword ptr [edi]; test dword ptr [edx + eax + 0x7c830000], ecx; and al, 0x58; add dword ptr [edi], ecx; xchg esp, eax; ret 0x7c83; 
0x000b4a9f: dec dword ptr [edi]; test dword ptr [esi + 0x5e000001], esp; xor eax, eax; pop ebx; ret; 
0x0005b85a: dec dword ptr [edi]; test edx, esi; idiv bh; jmp dword ptr [ebp - 0x5f]; 
0x000dd952: dec dword ptr [edi]; xchg ebp, eax; ret 0x3d; 
0x000670fc: dec dword ptr [edi]; xchg ebp, eax; ret 0x9522; 
0x00050163: dec dword ptr [edi]; xchg ebp, eax; ret 0xb60f; 
0x00038630: dec dword ptr [edi]; xchg ebp, eax; ret 0xd321; 
0x0011cbc4: dec dword ptr [edi]; xchg ebp, eax; ret; 
0x0005db0c: dec dword ptr [edi]; xchg ebp, eax; ror byte ptr [ecx - 0x2fe91639], 0xff; dec dword ptr [ebx - 0x59b7b]; jmp dword ptr [ebp - 0x75]; 
0x000c8664: dec dword ptr [edi]; xchg edi, eax; ret 0xbd39; 
0x000509b6: dec dword ptr [edi]; xchg edi, eax; ret 0xf039; 
0x00171f94: dec dword ptr [edi]; xchg esp, eax; ret 0x1389; 
0x000fd047: dec dword ptr [edi]; xchg esp, eax; ret 0x9588; 
0x00078aed: dec dword ptr [edi]; xchg esp, eax; ret 0x9e3b; 
0x0007101e: dec dword ptr [edi]; xchg esp, eax; ret 0xd008; 
0x00070ffd: dec dword ptr [edi]; xchg esp, eax; ret 0xd009; 
0x001574e9: dec dword ptr [edi]; xchg esp, eax; ret 0xe1e9; 
0x00072319: dec dword ptr [edi]; xchg esp, eax; ret; 
0x00034eb1: dec dword ptr [edi]; xor eax, edx; movzx edx, byte ptr [ecx]; test dl, dl; jne 0x34e99; ret; 
0x00058ff3: dec dword ptr [edx - 7]; call dword ptr [eax + 0x56]; 
0x0006c967: dec dword ptr [edx]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret; 
0x0006b66f: dec eax; adc bh, al; add ah, byte ptr [0xf000000]; mov dh, 0x57; or al, 0xf6; ret 0xf08; 
0x0006ca48: dec eax; adc bh, al; add ah, byte ptr [eax]; add byte ptr [eax], al; add cl, ch; ret 0xfff9; 
0x000b33f2: dec eax; adc byte ptr [eax + 0x448b1470], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000aff5c: dec eax; adc byte ptr [eax + 0x448b1470], cl; and al, 8; pop esi; ret; 
0x000b3391: dec eax; adc byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000afefe: dec eax; adc byte ptr [ebx + 0x5e082444], cl; ret; 
0x00094efd: dec eax; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0007853b: dec eax; adc byte ptr [ecx - 0x9ec74ce], cl; ret 0x7402; 
0x00078639: dec eax; adc byte ptr [ecx - 0x9ec74ce], cl; ret 0xf02; 
0x00158ca0: dec eax; add al, 0x50; call dword ptr [ecx + 0x10]; 
0x0015a25b: dec eax; add al, 0x5b; ret; 
0x000f0ef2: dec eax; add al, 0x75; fimul dword ptr [ebx + 0x408b0c50]; or byte ptr [ebx - 0x76e3db8c], cl; shr dword ptr [ecx], cl; ret; 
0x001311f8: dec eax; add al, 0x75; hlt; mov eax, dword ptr [eax + 0x18]; ret; 
0x0008681f: dec eax; add al, 0x8b; adc byte ptr [eax + 0xf1], bh; call dword ptr gs:[0x10]; 
0x00075bce: dec eax; add al, 0x8b; add byte ptr [ecx + 0x4c4830a], cl; pop ebx; pop esi; ret; 
0x0007589e: dec eax; add al, 0x8b; dec eax; or byte ptr [ecx + 0x8508910], cl; mov dword ptr [eax + 0x20], ecx; ret; 
0x0007bf24: dec eax; add al, 0xf; mov dh, 2; ret; 
0x001516c2: dec eax; add byte ptr [eax], 0; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x000c9f7c: dec eax; add dword ptr [ebp - 0x28], esi; mov eax, ecx; ret; 
0x00151e8e: dec eax; add dword ptr [ecx - 0x38cfdbb4], ecx; inc esp; ret 4; 
0x000b7bc7: dec eax; add dword ptr [edi], ecx; xchg esp, eax; ret 0x7c83; 
0x0018c95b: dec eax; add eax, 0x542b60f; sub eax, ecx; pop ebp; ret; 
0x0018b152: dec eax; add eax, 0x542b60f; sub eax, ecx; ret; 
0x000afe70: dec eax; add eax, 0x824448b; pop esi; ret; 
0x000b32f3: dec eax; add eax, 0xc24448b; pop ebx; pop esi; ret; 
0x000959b7: dec eax; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000d976f: dec eax; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x0007f385: dec eax; and al, 0x89; push eax; add al, 0x5b; ret; 
0x00158a4e: dec eax; and byte ptr [edi + 0x50], dl; call dword ptr [ecx + 8]; 
0x000c16a4: dec eax; and eax, dword ptr [edi]; add byte ptr [ebx - 0x72dbdb84], cl; xchg dword ptr [edi + edx*4], esp; stc; call dword ptr [eax - 0x73]; 
0x0015fbb9: dec eax; call dword ptr [eax + 0x10]; 
0x0015fa57: dec eax; call dword ptr [eax + 0x14]; 
0x00024aa9: dec eax; call eax; 
0x000384b5: dec eax; cdq; adc eax, dword ptr [eax]; add eax, 0x1f1b47; mov eax, dword ptr [eax + 0x68]; ret; 
0x000cd581: dec eax; cdq; stc; call dword ptr [esi + 0x50]; 
0x0017ee23: dec eax; cld; mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00180e53: dec eax; cld; mov dword ptr [edx - 4], ecx; mov eax, edx; pop ebx; ret; 
0x00188303: dec eax; cld; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x0007b8d6: dec eax; cli; dec dword ptr [ebx - 0x1337d]; jmp dword ptr [ebp - 0x75]; 
0x0007ff01: dec eax; cmp al, 0x80; add byte ptr [eax], al; add byte ptr [ebx - 0x3f7acbc0], cl; jne 0x7ff00; ret; 
0x00182d1a: dec eax; cmp eax, 0x1c030004; mov edi, dword ptr [esi]; jmp ebx; 
0x0017eeca: dec eax; dec dword ptr [eax + 0x448bff4a]; and al, 8; pop ebx; ret; 
0x00180eea: dec eax; dec dword ptr [eax - 0x2f7600b6]; pop ebx; ret; 
0x0011988d: dec eax; dec ecx; stc; call dword ptr [eax - 0x73]; 
0x000df944: dec eax; dec ecx; stc; dec dword ptr [ebp - 0x6b91c80]; call dword ptr [ebx + 0x50]; 
0x0006608c: dec eax; idiv edi; dec dword ptr [ecx - 0x8c37b]; jmp dword ptr [ebp - 0x5f]; 
0x000677f4: dec eax; idiv edi; inc dword ptr [ebx - 0x47cef3c]; or cl, byte ptr [edi]; xchg esp, eax; ret; 
0x000a1f56: dec eax; inc dword ptr [ebx + 0x5e5b08c4]; pop edi; pop ebp; ret; 
0x0004aaac: dec eax; insb byte ptr es:[edi], dx; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x001888da: dec eax; jmp 0x1c1b88e3; mov edi, dword ptr [esi]; jmp ebx; 
0x000b33af: dec eax; jnp 0x5b1757fa; pop esi; ret; 
0x000aff1c: dec eax; jnp 0x5e132367; ret; 
0x000936d0: dec eax; mov eax, 0x117; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x00093410: dec eax; mov eax, 0x118; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00093654: dec eax; mov eax, 0x1a2; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x00093398: dec eax; mov eax, 0x1a3; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0009345c: dec eax; mov ecx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x118; call dword ptr gs:[0x10]; 
0x000934ac: dec eax; mov ecx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x1a3; call dword ptr gs:[0x10]; 
0x00093724: dec eax; mov ecx, ebp; mov dword ptr [esp + 8], eax; mov esi, dword ptr [esp + 0x4c]; mov eax, 0x117; call dword ptr gs:[0x10]; 
0x00093774: dec eax; mov ecx, ebp; mov dword ptr [esp + 8], eax; mov esi, dword ptr [esp + 0x4c]; mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x00125b48: dec eax; mov esi, dword ptr [esp + 0x50]; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x000227b5: dec eax; not byte ptr [eax + eax]; add eax, 0x207847; mov eax, dword ptr [eax + 0xff0]; ret; 
0x0016c7d3: dec eax; or al, 0; add byte ptr [ebx - 0x4472f714], al; pop es; stc; call dword ptr [edi + 0x55]; 
0x0016c186: dec eax; or al, 0; add byte ptr [ebx - 0x4472f714], al; pop es; stc; call dword ptr [edi + 0x56]; 
0x0008483d: dec eax; or byte ptr [eax], cl; mov dword ptr [eax + 0x10], edx; xor eax, eax; ret; 
0x000758cf: dec eax; or byte ptr [ecx + 0x58890450], cl; or byte ptr [ecx + 0x10892048], cl; pop ebx; ret; 
0x000758a1: dec eax; or byte ptr [ecx + 0x8508910], cl; mov dword ptr [eax + 0x20], ecx; ret; 
0x00084621: dec eax; or byte ptr [ecx], al; xor eax, eax; ret; 
0x00024d57: dec eax; outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x00071844: dec eax; pop eax; mov dword ptr [ecx + 0x88], edx; ret; 
0x000cae41: dec eax; pop ebx; ret; 
0x000b3333: dec eax; pop es; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afeb0: dec eax; pop es; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0018c89f: dec eax; pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; pop ebp; ret; 
0x0018b0f2: dec eax; pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x000b34d9: dec eax; pop ss; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b0026: dec eax; pop ss; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00073747: dec eax; push 0; push edi; push esi; push ebx; call dword ptr [ebp + 0x24]; 
0x0016084d: dec eax; push dword ptr [esp + 0x2c]; push esi; call dword ptr [eax + 0xc]; 
0x001153f5: dec eax; push eax; mov dword ptr [eax + 0x54], edx; xor eax, eax; ret; 
0x0011f88b: dec eax; push eax; stc; call dword ptr [eax + 0x57]; 
0x000b3313: dec eax; push es; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afe90: dec eax; push es; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0018c97b: dec eax; push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; pop ebp; ret; 
0x0018b162: dec eax; push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x00069eb7: dec eax; ret 0x4489; 
0x0012cf75: dec eax; ret 0x4639; 
0x000cb493: dec eax; ret 0x548b; 
0x00024863: dec eax; ret 0x8dc3; 
0x00067bc3: dec eax; ret 0xb589; 
0x000cc52e: dec eax; ret 0xb70f; 
0x0002c209: dec eax; ret 0xc083; 
0x0003ac8f: dec eax; ret 0xc483; 
0x0012cacc: dec eax; ret 0xc629; 
0x0003ab5d: dec eax; ret 0xf3c3; 
0x00192b63: dec eax; ret 0xff3; 
0x00081503: dec eax; ret 0xff50; 
0x00192ac3: dec eax; ret; 
0x000f7531: dec eax; ror byte ptr [eax - 0x7cefdbac], 1; rol dword ptr [ecx], 0x83; ret; 
0x000c2774: dec eax; sal dh, cl; dec dword ptr [ebp - 0x6685770]; call dword ptr [edx - 0x73]; 
0x00141fa4: dec eax; sbb bh, bh; jmp dword ptr [esi - 0x70]; 
0x00075db1: dec eax; sbb byte ptr [ebp + 0x88a8], cl; add byte ptr [ebp + 0x84b8], cl; add byte ptr [ebp - 0x9fa8b37], al; ret 0x7408; 
0x000b34ab: dec eax; sbb byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000b0008: dec eax; sbb byte ptr [ebx + 0x5e082444], cl; ret; 
0x0015ba5c: dec eax; sbb byte ptr [ecx + 0x1b81058], cl; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x000eb3b7: dec eax; stc; call dword ptr [eax + 0x55]; 
0x000fca9a: dec eax; stc; call dword ptr [eax + 0x56]; 
0x000e5c2e: dec eax; stc; call dword ptr [eax - 0x18]; 
0x000fac22: dec eax; stc; call dword ptr [eax - 0x73]; 
0x000f43fc: dec eax; stc; call dword ptr [eax - 0x77]; 
0x000f66fe: dec eax; stc; call dword ptr [eax - 1]; 
0x000f43f6: dec eax; stc; dec dword ptr [ebp - 0x6b7af71]; call dword ptr [eax - 0x77]; 
0x0009f9e2: dec eax; xchg ebp, eax; stc; call dword ptr [edx - 0x73]; 
0x000a020b: dec ebp; aam 0x29; ret 0x1a8b; 
0x000a02e4: dec ebp; aam 0x29; ret 0xb48d; 
0x000a0228: dec ebp; aam 0x31; fisttp dword ptr [ecx - 0x7cf4143a]; ret; 
0x000fa667: dec ebp; aam 0x6a; add eax, 0x9be4868d; stc; call dword ptr [eax - 0x73]; 
0x000672ea: dec ebp; adc byte ptr [ecx], ch; ret; 
0x00167a42: dec ebp; add byte ptr [ebx - 0x74bbdbac], cl; inc ecx; or byte ptr [ecx], bh; ret 0x5175; 
0x0009e08a: dec ebp; add byte ptr [ecx], ch; ret 0xd801; 
0x000eab3d: dec ebp; add byte ptr [edi], cl; xchg ebp, eax; rol byte ptr [ebx - 0x3ffefb3c], 0x5b; pop esi; ret; 
0x0004473c: dec ebp; add eax, 0x8d500000; xchg al, dh; jne 0x4473f; call dword ptr [eax - 0x18]; 
0x00041572: dec ebp; add eax, 0x8d500000; xchg eax, esi; jne 0x41575; call dword ptr [eax - 0x18]; 
0x0004780e: dec ebp; add eax, 0x8d500000; xchg eax, esi; jne 0x47811; call dword ptr [eax - 0x18]; 
0x0005113c: dec ebp; add eax, 0x8d500000; xchg eax, esi; jne 0x5113f; call dword ptr [eax - 0x18]; 
0x000bbb97: dec ebp; add eax, 0x8d500000; xchg eax, esi; jne 0xbbb9a; call dword ptr [eax - 0x18]; 
0x000be866: dec ebp; add eax, 0x8d500000; xchg eax, esi; jne 0xbe869; call dword ptr [eax - 0x18]; 
0x000c166d: dec ebp; add eax, 0x8d500000; xchg eax, esi; jne 0xc1670; call dword ptr [eax - 0x18]; 
0x0017c51d: dec ebp; add eax, dword ptr [eax]; add byte ptr [ecx + 0x5b5e5fd0], cl; ret; 
0x000c176d: dec ebp; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000df3fb: dec ebp; add esp, 0x28; pop ebx; ret; 
0x00122df2: dec ebp; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x0015b022: dec ebp; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00143883: dec ebp; and byte ptr [ecx - 0x42f43], cl; jmp dword ptr [ebp - 0x75]; 
0x00159c75: dec ebp; arpl cx, di; call dword ptr [eax - 0x18]; 
0x0007c101: dec ebp; cli; jmp dword ptr [esi - 0x70]; 
0x001037d2: dec ebp; dec edx; stc; call dword ptr [eax - 0x18]; 
0x0016f00f: dec ebp; hlt; call dword ptr [eax - 0x73]; 
0x0008b46f: dec ebp; inc ebp; cli; jmp dword ptr [esi - 0x70]; 
0x000e23da: dec ebp; or al, 0x8b; xchg ebp, eax; cmp bl, 0xff; call dword ptr [edi - 1]; 
0x000d3a3a: dec ebp; ret 0x4489; 
0x0002e5a3: dec ebp; ret 0x518b; 
0x0009a452: dec ebp; ret 0xc689; 
0x0002e55c: dec ebp; ret 0xec83; 
0x0004ef52: dec ebp; ret; 
0x0004ef4f: dec ebp; ror dword ptr [edi], 1; dec ebp; ret; 
0x000d96af: dec ebp; sbb esp, edi; jmp dword ptr [esi - 0x70]; 
0x000c2cc7: dec ebp; shr bl, 1; or al, 0x8d; je 0xc2cf4; add byte ptr [eax + 0x3901c083], dl; ret; 
0x0011f712: dec ebp; stc; call dword ptr [eax + 0x57]; 
0x0016e85f: dec ebp; sub ch, bl; jmp dword ptr [esi - 0x70]; 
0x0008ed56: dec ebx; adc al, 0xf6; ret 0xf02; 
0x0014dd0b: dec ebx; adc byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x000c8cbb: dec ebx; add al, 0; add byte ptr [eax - 0x73], dl; and byte ptr [eax], 0x30; stc; call dword ptr [eax - 0x18]; 
0x000415c6: dec ebx; add al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], esp; xor cl, bh; call dword ptr [eax - 0x18]; 
0x0004e1e7: dec ebx; add al, byte ptr [eax]; add byte ptr [ebx - 0x36377b], cl; inc dword ptr [ebx - 0x362f43]; call dword ptr [eax]; 
0x0013c41d: dec ebx; add byte ptr [eax], al; push edx; call eax; 
0x0010b021: dec ebx; add dword ptr [eax], eax; add byte ptr [ebx + 0x3108245c], cl; leave; call dword ptr gs:[0x10]; 
0x000c9b51: dec ebx; add dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; ret; 
0x000fa234: dec ebx; add dword ptr [ebp - 0x7c398a01], eax; ret; 
0x00087c23: dec ebx; add eax, dword ptr [eax]; add byte ptr [ebp - 0x6c13179], cl; call dword ptr [eax - 0x73]; 
0x0008f29f: dec ebx; add esp, 0x124; pop ebx; pop esi; ret; 
0x0010aef4: dec ebx; add esp, 0x14; pop ebx; pop esi; ret; 
0x00165aef: dec ebx; add esp, 0x18; pop ebx; ret; 
0x0010bcb8: dec ebx; add esp, 0x44; mov eax, edx; pop ebx; pop esi; ret; 
0x000546ba: dec ebx; dec dword ptr [ebx - 0xa34b]; call dword ptr [edx - 0x77]; 
0x0015eda1: dec ebx; dec esp; std; dec dword ptr [ebp - 0x69c1f7d]; call dword ptr [edx + 0x6a]; 
0x000a61e1: dec ebx; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0015ee01: dec ebx; idiv edi; jmp dword ptr [esi - 0x70]; 
0x0009c6a8: dec ebx; in al, 0x83; ret 0x8301; 
0x000ce951: dec ebx; inc ebp; stc; call dword ptr [eax - 0x18]; 
0x000dcb44: dec ebx; inc esi; stc; call dword ptr [eax - 0x18]; 
0x00197964: dec ebx; lea eax, [eax + 9]; pop edi; ret; 
0x00196ff4: dec ebx; lea eax, [ecx + 0xa]; ret; 
0x00196924: dec ebx; lea eax, [edi + 9]; pop edi; ret; 
0x000848cf: dec ebx; or al, 0x89; clc; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00140d3d: dec ebx; or byte ptr [ebx + 0x5e], bl; pop edi; ret 4; 
0x000da1e1: dec ebx; or dword ptr [eax], eax; add esp, 0x10; mov eax, edi; call eax; 
0x00138494: dec ebx; pop edx; stc; call dword ptr [eax - 0x18]; 
0x000217b6: dec ebx; push es; adc eax, 0x46c68100; mov byte ptr [eax], ah; add byte ptr [ebx - 0x77], dl; ret; 
0x0011c8b1: dec ebx; stc; call dword ptr [eax + 0x53]; 
0x0011f68b: dec ebx; stc; call dword ptr [eax + 0x57]; 
0x0011ae6d: dec ebx; stc; call dword ptr [eax - 0x18]; 
0x0011b071: dec ebx; stc; call dword ptr [eax - 0x39]; 
0x0011b3f4: dec ebx; stc; call dword ptr [eax - 0x73]; 
0x0011b9ba: dec ebx; stc; call dword ptr [eax - 0x75]; 
0x0011bc6f: dec ebx; stc; call dword ptr [eax - 1]; 
0x0011bc1e: dec ebx; stc; call dword ptr [edi + 0x50]; 
0x00035063: dec ebx; stc; dec dword ptr [edi]; inc ebp; call 0x26856; jmp dword ptr [esi - 0x70]; 
0x00034f82: dec ebx; stc; inc dword ptr [ebx - 0x7c72f314]; mov ah, 0x2f; stc; call dword ptr [eax - 0x18]; 
0x0011eda9: dec ebx; stc; jmp dword ptr [ebp - 0x75]; 
0x0002c0e8: dec ebx; sub al, 0xf9; call dword ptr [eax - 0x18]; 
0x001964c9: dec ecx; adc byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x001964e1: dec ecx; adc byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000a8227: dec ecx; add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000a8387: dec ecx; add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000a3e37: dec ecx; add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000a3f97: dec ecx; add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000da80f: dec ecx; add esp, 0x28; pop ebx; ret; 
0x000b3f71: dec ecx; and byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x316575c0], 0xc0; ret; 
0x000bc2b9: dec ecx; fst qword ptr [esi]; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x000a3147: dec ecx; imul byte ptr [ecx]; ret 0x280f; 
0x000a4b4b: dec ecx; imul byte ptr [ecx]; ret 0xc301; 
0x000a3277: dec ecx; imul dword ptr [ecx]; ret 0x280f; 
0x000a4cab: dec ecx; imul dword ptr [ecx]; ret 0xc301; 
0x00091149: dec ecx; inc eax; stc; call dword ptr [eax - 0x73]; 
0x0004acfd: dec ecx; insb byte ptr es:[edi], dx; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x000a3bf7: dec ecx; jmp ptr [ecx]; ret 0x280f; 
0x000a57ab: dec ecx; jmp ptr [ecx]; ret 0xc301; 
0x000b584c: dec ecx; jne 0xb5848; pop esi; ret; 
0x000d742d: dec ecx; lcall 0, 0x89870f3b; add byte ptr [eax + 0x194], bh; call dword ptr gs:[0x10]; 
0x0008bfa2: dec ecx; lcall 0, 0xc4870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x0008cb88: dec ecx; lcall 0, 0xce870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x6174; 
0x0008c905: dec ecx; lcall 1, 0x31870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x000befb9: dec ecx; mov al, 0x16; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x000a83c7: dec ecx; pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000a3fd7: dec ecx; pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000dfe2b: dec ecx; push edx; mov eax, 0x20; mov edx, 0x40; cmove eax, edx; ret; 
0x000a83a7: dec ecx; push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000a3fb7: dec ecx; push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000d50a8: dec ecx; ret 0x1c8d; 
0x000d3764: dec ecx; ret 0x708d; 
0x00116ff6: dec ecx; ret 0x8dc3; 
0x000d2faa: dec ecx; ret 0xc483; 
0x000d4f4a: dec ecx; ret 0xd801; 
0x0002556d: dec ecx; ret 0xec83; 
0x0019a548: dec ecx; ret 0xf8c1; 
0x00199c10: dec ecx; ret 0xff31; 
0x00025748: dec ecx; ret; 
0x0008a867: dec ecx; rol ecx, 0xf8; add eax, dword ptr [ecx]; ret 0x8966; 
0x000fc5a5: dec ecx; stc; call dword ptr [eax + 0x56]; 
0x000feb8c: dec ecx; stc; call dword ptr [eax - 0x18]; 
0x00102eb5: dec ecx; stc; call dword ptr [eax - 0x18]; bound ebp, qword ptr [edx - 0xd]; dec dword ptr [ecx - 0x76ebdbbc]; ret; 
0x00102854: dec ecx; stc; call dword ptr [eax - 0x73]; 
0x000df945: dec ecx; stc; dec dword ptr [ebp - 0x6b91c80]; call dword ptr [ebx + 0x50]; 
0x0016d5f3: dec ecx; sub ebp, ebx; inc dword ptr [ebx - 0x137cef3c]; or byte ptr [ebp - 0x699ea7d], cl; call dword ptr [ebp + 0x50]; 
0x000c9bc4: dec edi; adc al, 0xf; test esp, edx; add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x000ac25f: dec edi; adc byte ptr [eax + 0x5e5f1457], cl; pop ebx; ret; 
0x00085ad5: dec edi; adc byte ptr [eax + 0xf0], bh; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000ad8ec: dec edi; adc byte ptr [ebp + 0x5e5f1147], cl; pop ebx; ret; 
0x000ad90e: dec edi; adc byte ptr [ebp + 0x5e5f1247], cl; pop ebx; ret; 
0x000ad94c: dec edi; adc byte ptr [ebp + 0x5e5f1447], cl; pop ebx; ret; 
0x000ac1dc: dec edi; adc byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000c9baf: dec edi; adc byte ptr [edi], cl; test ecx, ebp; add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x000b3c9c: dec edi; adc byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x315a75c0], 0xc0; pop edi; ret; 
0x001905ed: dec edi; adc eax, dword ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00195b7d: dec edi; add al, byte ptr [eax]; add byte ptr [eax + 0x77850f02], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf02; 
0x000b75af: dec edi; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000ad880: dec edi; add eax, 0x5f0d478d; pop esi; pop ebx; ret; 
0x0011f6ed: dec edi; add eax, 0xec830000; or byte ptr [ebp - 0x6b3577d], cl; call dword ptr [eax + 0x57]; 
0x000c9c24: dec edi; and al, 0x75; js 0xc9c88; pop esi; ret; 
0x000fa126: dec edi; and byte ptr [ebx + 0x5e5b18c4], al; pop edi; pop ebp; ret; 
0x000ac3e6: dec edi; and byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000c9c0f: dec edi; and byte ptr [edi], cl; test dword ptr [ecx + 0x5f000000], ecx; pop esi; ret; 
0x000c9c94: dec edi; cmp al, 0x75; or byte ptr [edi + 0x5e], bl; ret; 
0x000c9c89: dec edi; cmp byte ptr [ebp + 0x13], dh; pop edi; pop esi; ret; 
0x0015b148: dec edi; in al, dx; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000eb1bf: dec edi; inc dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x000ad92c: dec edi; jge 0x5e69ec7a; pop ebx; ret; 
0x000ac21c: dec edi; maxps xmm3, xmmword ptr [esi + 0x5b]; ret; 
0x00038608: dec edi; mov eax, 0xb1; mov esi, 8; mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x0012e36d: dec edi; or byte ptr [ecx - 0x76e3dbbc], cl; ret; 
0x000c9b79: dec edi; or byte ptr [edi], cl; test dword ptr [edi], ebx; add dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; ret; 
0x0008bc89: dec edi; or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x000ac1b0: dec edi; pop es; pop edi; pop esi; pop ebx; ret; 
0x000ac326: dec edi; pop ss; pop edi; pop esi; pop ebx; ret; 
0x00088a56: dec edi; push 0xc24548b; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000ac190: dec edi; push es; pop edi; pop esi; pop ebx; ret; 
0x000c079e: dec edi; ret 0x403; 
0x001480b5: dec edi; ret 0x4189; 
0x000bdadd: dec edi; ret 0x4403; 
0x000ec5d3: dec edi; ret 0x538b; 
0x0014812b: dec edi; ret 0x548b; 
0x0004ff6a: dec edi; ret 0x8503; 
0x0015d6a2: dec edi; ret 0x8966; 
0x0011c8ab: dec edi; ret 0x8d50; 
0x000b5c94: dec edi; ret 0x8dc3; 
0x000b5cb3: dec edi; ret 0xc35f; 
0x00043a38: dec edi; ret 0xe801; 
0x00040859: dec edi; ret 0xf001; 
0x000516df: dec edi; ret; 
0x000f6768: dec edi; ror byte ptr [ebx + 0x39642444], 1; ret 0x8e0f; 
0x000d7d3f: dec edi; sbb al, 0x89; dec esi; sbb al, 0x39; ret 0x8d0f; 
0x000c9bf4: dec edi; sbb al, 0xf; test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x000ad9f6: dec edi; sbb byte ptr [ebp + 0x5e5f1947], cl; pop ebx; ret; 
0x000ada18: dec edi; sbb byte ptr [ebp + 0x5e5f1a47], cl; pop ebx; ret; 
0x000ada66: dec edi; sbb byte ptr [ebp + 0x5e5f1c47], cl; pop ebx; ret; 
0x0014d18e: dec edi; sbb byte ptr [ebx + 0x438910c4], al; adc al, 0x89; ret 0xc985; 
0x000d7d35: dec edi; sbb byte ptr [ecx - 0x76ebdbb4], cl; dec esi; sbb byte ptr [ebx + 0x4e891c4f], cl; sbb al, 0x39; ret 0x8d0f; 
0x000ac2e6: dec edi; sbb byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000c9bd9: dec edi; sbb byte ptr [edi], cl; test dword ptr [edi + 0x5f000000], edi; pop esi; ret; 
0x0011f7ea: dec edi; stc; call dword ptr [eax + 0x57]; 
0x000c9c44: dec edi; sub al, 0x75; pop eax; pop edi; pop esi; ret; 
0x00023b8b: dec edi; sub bh, cl; call dword ptr [eax - 0x18]; 
0x000c9c39: dec edi; sub byte ptr [ebp + 0x63], dh; pop edi; pop esi; ret; 
0x00195990: dec edi; test dh, 4; jne 0x1959e4; add eax, 0xb; ret; 
0x000c9c74: dec edi; xor al, 0x75; sub byte ptr [edi + 0x5e], bl; ret; 
0x00081f1d: dec edi; xor al, 3; add byte ptr [ebx - 0x3b7cef3c], al; add al, 0x5b; pop esi; ret; 
0x000592ad: dec edi; xor bh, cl; call dword ptr [ecx + 0x50]; 
0x000c9c5f: dec edi; xor byte ptr [ebp + 0x3d], dh; pop edi; pop esi; ret; 
0x000b3bea: dec edi; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x001667dc: dec edx; adc al, 1; fmul dword ptr [ecx - 0x2776f3be]; pop ebx; ret; 
0x000a593e: dec edx; adc byte ptr [edi], cl; test dword ptr [edx + 0x5f000005], ecx; pop ebx; ret; 
0x000a9d3f: dec edx; adc byte ptr [edi], cl; test ecx, ebp; add eax, 0x38800000; add dword ptr [ebx + 0x5b5fffd8], eax; ret; 
0x00162108: dec edx; add al, 0x52; call dword ptr [ecx + 0x10]; 
0x00126c2b: dec edx; add al, 0x80; cmp dword ptr [eax], eax; je 0x126c38; ret; 
0x00126eb0: dec edx; add al, 0x83; jmp dword ptr [eax]; 
0x000e6eee: dec edx; add al, 0x83; ret 0x8301; 
0x0012fe64: dec edx; add al, 0x83; ret 0x8518; 
0x000f3d76: dec edx; add al, 0x83; ret; 
0x00078538: dec edx; add al, 0x89; dec eax; adc byte ptr [ecx - 0x9ec74ce], cl; ret 0x7402; 
0x00078636: dec edx; add al, 0x89; dec eax; adc byte ptr [ecx - 0x9ec74ce], cl; ret 0xf02; 
0x00076031: dec edx; add al, 0x89; or byte ptr [ebx + 0x5f5e5b02], cl; ret; 
0x00152d33: dec edx; add al, 0xf; xchg ebp, eax; ret; 
0x00188a26: dec edx; add cl, byte ptr [edi]; mov bh, 8; mov word ptr [edx], cx; pop ebx; ret; 
0x000a5f8c: dec edx; add cl, byte ptr [edi]; test dword ptr [0x5bffffff], edi; ret; 
0x00163374: dec edx; add dword ptr [ecx - 0x46f076fd], ecx; ret; 
0x00188aae: dec edx; add dword ptr [edi], ecx; mov dh, 0; mov byte ptr [edx], al; pop ebx; ret; 
0x001889a6: dec edx; add dword ptr [edi], ecx; mov dh, 8; mov byte ptr [edx], cl; pop ebx; ret; 
0x000a5b8a: dec edx; add dword ptr [edi], ecx; test dword ptr [esi], edi; add eax, dword ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x000a5bf0: dec edx; add eax, 0x2d8850f; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000a8230: dec edx; add eax, 0x5f0c428d; ret; 
0x0007a612: dec edx; add ebx, ebp; mov esp, 0x7e24828d; stc; call dword ptr [eax - 0x73]; 
0x000a5bd2: dec edx; add ecx, dword ptr [edi]; test esi, esi; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x0011c3ce: dec edx; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0018985a: dec edx; clc; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x00198126: dec edx; cld; jne 0x198130; pop ebx; ret; 
0x00193db8: dec edx; cld; mov eax, 0; jne 0x194000; pop ebx; ret; 
0x0017ee26: dec edx; cld; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00180e56: dec edx; cld; mov eax, edx; pop ebx; ret; 
0x00166817: dec edx; cld; mov ecx, 1; mov dword ptr [eax + 0xc], edx; mov eax, ecx; ret; 
0x00188306: dec edx; cld; pop ebx; ret; 
0x000ddd0a: dec edx; cli; dec dword ptr [ecx + 0x1db8c2]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00188426: dec edx; cli; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; pop ebx; ret; 
0x0017ef5e: dec edx; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0017eecd: dec edx; dec dword ptr [ebx + 0x5b082444]; ret; 
0x000c12eb: dec edx; dec dword ptr [ecx + 0x244c89fe]; adc byte ptr [ecx + 0x39eed3d1], cl; ret; 
0x000eb53b: dec edx; dec eax; stc; call dword ptr [eax + 0x55]; 
0x0011b3f3: dec edx; dec ebx; stc; call dword ptr [eax - 0x73]; 
0x00102f9d: dec edx; dec edx; stc; call dword ptr [eax - 0x18]; 
0x000cfd8e: dec edx; fisttp qword ptr [edi]; xchg esi, eax; ret; 
0x0019c401: dec edx; idiv edi; jmp dword ptr [esi - 0x70]; 
0x000dfee5: dec edx; inc ecx; add byte ptr [eax + esi + 0x31], dh; rol byte ptr [ecx - 0x52053106], 0x1b; setne al; ret; 
0x0013fa57: dec edx; jmp dword ptr [ecx]; 
0x00063813: dec edx; loope 0x63815; dec dword ptr [ebx - 0x4f37b]; jmp dword ptr [ebp - 0x75]; 
0x000cfd88: dec edx; mov byte ptr [0x8d01f980], al; dec edx; fisttp qword ptr [edi]; xchg esi, eax; ret; 
0x00092fc5: dec edx; mov ebx, dword ptr [esp + 0xa0]; mov eax, 0x119; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0010937d: dec edx; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x001661e2: dec edx; movsb byte ptr es:[edi], byte ptr [esi]; in al, dx; call dword ptr [eax - 0x73]; 
0x000b5c39: dec edx; or al, 0x83; ret 0x8310; 
0x000a5904: dec edx; or al, 0xf; test esp, eax; add eax, 0x5b5f0000; ret; 
0x000b28ff: dec edx; or byte ptr [eax - 0x776ef86], cl; pop ebx; pop edi; ret; 
0x00084822: dec edx; or byte ptr [eax], cl; mov dword ptr [edx + 0x10], eax; mov eax, ecx; ret; 
0x000a9f6b: dec edx; or byte ptr [ebp + 0x5b5f1042], cl; ret; 
0x0011df59: dec edx; or byte ptr [ebp - 0x74868b37], al; pop ecx; add al, 0xf6; ret; 
0x000894cd: dec edx; or byte ptr [ebx + 0x47521f8], al; add dword ptr [edx + 4], 1; add esp, 0xc; ret; 
0x000fd872: dec edx; or cl, ch; ret 0xfff8; 
0x000a5c54: dec edx; or dword ptr [edi], ecx; test dword ptr [edx + eax], esi; add byte ptr [edi + 0x5b], bl; ret; 
0x000a5cc8: dec edx; or eax, 0x200850f; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000a60b4: dec edx; or ecx, dword ptr [edi]; test dword ptr [0x5bfffffe], edx; ret; 
0x000a5c30: dec edx; pop es; jne 0xa5ed0; pop edi; pop ebx; ret; 
0x000a6030: dec edx; pop es; jne 0xa5ed1; pop ebx; ret; 
0x000a8270: dec edx; pop es; lea eax, [edx + 0xe]; pop edi; ret; 
0x000a83d0: dec edx; pop es; lea eax, [edx + 0xe]; ret; 
0x000a3e80: dec edx; pop es; mov eax, edi; pop edi; ret; 
0x000a6a53: dec edx; pop es; mov eax, edx; pop ebx; ret; 
0x000a3fe0: dec edx; pop es; mov eax, edx; ret; 
0x000a5cf8: dec edx; push cs; jne 0xa5ed0; pop edi; pop ebx; ret; 
0x000a6128: dec edx; push cs; jne 0xa5ed1; pop ebx; ret; 
0x000a5c12: dec edx; push es; jne 0xa5ed0; pop edi; pop ebx; ret; 
0x000a6012: dec edx; push es; jne 0xa5ed1; pop ebx; ret; 
0x000a8250: dec edx; push es; lea eax, [edx + 0xd]; pop edi; ret; 
0x000a83b0: dec edx; push es; lea eax, [edx + 0xd]; ret; 
0x000a3e60: dec edx; push es; mov eax, edi; pop edi; ret; 
0x000a3fc0: dec edx; push es; mov eax, edx; ret; 
0x00185bab: dec edx; ret 0xfffe; 
0x00119800: dec edx; stc; call dword ptr [eax + 0x50]; 
0x00179e1f: dec edx; stc; call dword ptr [eax + 0x53]; 
0x00058ff4: dec edx; stc; call dword ptr [eax + 0x56]; 
0x0012fd8f: dec edx; stc; call dword ptr [eax + 0x57]; 
0x0010264f: dec edx; stc; call dword ptr [eax + 0x6a]; 
0x00102917: dec edx; stc; call dword ptr [eax - 0x18]; 
0x00119895: dec edx; stc; call dword ptr [eax - 0x18]; ret 7; 
0x00118333: dec edx; stc; call dword ptr [eax - 0x18]; test byte ptr [esi - 0xf], dh; jmp dword ptr [esi - 0x70]; 
0x00119e31: dec edx; stc; call dword ptr [edx + 0x50]; 
0x001197a6: dec edx; stc; call dword ptr [edx - 0x77]; 
0x001601d7: dec edx; stc; call dword ptr [esi + 0x57]; 
0x0011f1fe: dec edx; stc; call ptr [ebx + 0x5e]; ret; 
0x0015ef09: dec edx; std; jmp dword ptr [esi - 0x70]; 
0x0015ef09: dec edx; std; jmp dword ptr [esi - 0x70]; nop; endbr32; ret; 
0x0017eff2: dec edx; std; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00181012: dec edx; std; mov byte ptr [edx - 1], al; mov eax, edx; pop ebx; ret; 
0x001884c2: dec edx; std; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0017ee77: dec edx; sti; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00180ea7: dec edx; sti; mov dword ptr [edx - 4], eax; mov eax, edx; pop ebx; ret; 
0x00188357: dec edx; sti; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x00188396: dec edx; sti; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x0015b0f8: dec edx; xor al, 0x5b; ret; 
0x000b4389: dec edx; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x00090afd: dec esi; adc byte ptr [ebx + 0x5e], bl; ret; 
0x0004b8fc: dec esi; add al, 3; add cl, byte ptr [edi]; xchg edx, eax; ret 0x689; 
0x0011f1e4: dec esi; add bh, byte ptr [ecx]; ret 0xf089; 
0x000b75ed: dec esi; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000afe67: dec esi; add eax, 0x130f66; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00195995: dec esi; add eax, 0xb; ret; 
0x0010c424: dec esi; and bh, bh; xor al, 1; push edx; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x0006974b: dec esi; and byte ptr [ecx], dh; rol byte ptr [eax - 0x6bf0a705], cl; ret 0xff52; 
0x0016d41f: dec esi; cld; jmp dword ptr [esi - 0x70]; 
0x000c9c91: dec esi; cmp al, 0x39; dec edi; cmp al, 0x75; or byte ptr [edi + 0x5e], bl; ret; 
0x0016d41e: dec esi; dec esi; cld; jmp dword ptr [esi - 0x70]; 
0x0015b7d2: dec esi; in eax, dx; call dword ptr [eax - 0x73]; 
0x000b6fa3: dec esi; inc esp; stc; call dword ptr [eax - 0x18]; 
0x000cb484: dec esi; lds ecx, ptr [ecx + 0x31442454]; ror byte ptr [ecx - 0x7a97dba4], cl; ror byte ptr [edi], 0x48; ret 0x548b; 
0x00063213: dec esi; loope 0x63215; jmp dword ptr [ebp - 0x5f]; 
0x00077e2a: dec esi; or al, 0x89; ret 0x48d; 
0x000390cd: dec esi; or byte ptr [ecx], bh; ret 0x8e0f; 
0x00083b2b: dec esi; or byte ptr [edx + 0x21], bh; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00121f6c: dec esi; pop ebx; pop esi; ret; 
0x000dfed6: dec esi; push esp; inc esi; push ebx; setne al; ret; 
0x000da616: dec esi; ret 0x4489; 
0x00022c9a: dec esi; ret 0x4589; 
0x000ec774: dec esi; ret 0x548d; 
0x0009133a: dec esi; ret 0x578b; 
0x00091353: dec esi; ret 0x8389; 
0x0015d758: dec esi; ret 0x8966; 
0x0004f866: dec esi; ret 0x9d8d; 
0x0011d04b: dec esi; ret 0xa4e9; 
0x0011ca74: dec esi; ret 0xaae9; 
0x000f2747: dec esi; ret 0xc085; 
0x0008a833: dec esi; ret 0xc931; 
0x001024cc: dec esi; ret 0xe883; 
0x00052b34: dec esi; ret 0xec83; 
0x0004bb0f: dec esi; ret; 
0x000ea061: dec esi; sar dword ptr [ecx], cl; ret 0xd17f; 
0x000c9bf1: dec esi; sbb al, 0x39; dec edi; sbb al, 0xf; test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x000d7d42: dec esi; sbb al, 0x39; ret 0x8d0f; 
0x000d7d3c: dec esi; sbb byte ptr [ebx + 0x4e891c4f], cl; sbb al, 0x39; ret 0x8d0f; 
0x000cfa75: dec esi; sbb byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x0011f6c1: dec esi; stc; call dword ptr [eax + 0x57]; 
0x0017821e: dec esi; stc; inc dword ptr [ebx - 0x73ee33c]; pop ds; ret; 
0x0007c351: dec esi; sub esp, 4; push esi; push ebp; push edi; call dword ptr [edx + 0x1c]; 
0x000c9c71: dec esi; xor al, 0x39; dec edi; xor al, 0x75; sub byte ptr [edi + 0x5e], bl; ret; 
0x0003cc75: dec esp; adc eax, 0x83167500; ret 0x3901; 
0x000420f0: dec esp; add al, 0; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0009561c: dec esp; add al, 0; add byte ptr [ecx], bh; ret; 
0x0007543b: dec esp; add al, byte ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00116951: dec esp; add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x0006e745: dec esp; add dword ptr [eax], eax; add byte ptr [eax], al; add edx, dword ptr [esi + eax*4]; jmp edx; 
0x0006f3a3: dec esp; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x00075538: dec esp; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00161352: dec esp; add dword ptr [eax], eax; add byte ptr [edx + 0x53], dl; call dword ptr [eax + 4]; 
0x0017ced1: dec esp; and al, 0x10; add eax, ecx; pop ebx; ret; 
0x00115bdc: dec esp; and al, 0x10; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x0012370a: dec esp; and al, 0x10; mov eax, 0x1b3; int 0x80; 
0x0011ea4d: dec esp; and al, 0x10; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x00108659: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0010c23f: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x00123cef: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x001120ff: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xbb; call dword ptr gs:[0x10]; 
0x0011f3cf: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x0011f42f: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x0011f2ff: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x0011212f: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xef; call dword ptr gs:[0x10]; 
0x00123a8f: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x000832c3: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000932f7: dec esp; and al, 0x10; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00116aca: dec esp; and al, 0x10; mov edx, dword ptr [esp + 0x14]; mov esi, ebx; call dword ptr gs:[0x10]; 
0x00116a6c: dec esp; and al, 0x10; mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00115c5c: dec esp; and al, 0x10; or dh, 0x80; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x00162075: dec esp; and al, 0x10; push ecx; push 0xd; push edx; call dword ptr [eax + 0x14]; 
0x00071a47: dec esp; and al, 0x10; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x00165777: dec esp; and al, 0x10; push ecx; push edx; call dword ptr [eax]; 
0x000818d7: dec esp; and al, 0x14; mov dword ptr [esp + 0x10], edx; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x000d7191: dec esp; and al, 0x14; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x00125c3d: dec esp; and al, 0x14; mov ebx, 0xd; mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0011c694: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x00115cdc: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0010bc24: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0010c174: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x00123e14: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x00123c14: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x00123af4: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x00123cb4: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0011f534: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x0011f4c4: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x0011f394: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x001217cd: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00115d5c: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0010937f: dec esp; and al, 0x14; mov edx, dword ptr [esp + 0x18]; mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x00058a68: dec esp; and al, 0x14; mov edx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0017a330: dec esp; and al, 0x14; mov edx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x001260e0: dec esp; and al, 0x14; mov edx, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0003a832: dec esp; and al, 0x14; sub esp, 8; push 0; push edx; call edi; 
0x00091680: dec esp; and al, 0x18; call dword ptr gs:[0x10]; 
0x000d7161: dec esp; and al, 0x18; push ebx; call eax; 
0x0015b077: dec esp; and al, 0x1c; lea edx, [ecx + 4]; push edx; push ebx; call dword ptr [eax + 4]; 
0x0015b037: dec esp; and al, 0x1c; lea edx, [ecx + 4]; push edx; push ebx; call dword ptr [eax]; 
0x0012224a: dec esp; and al, 0x1c; mov eax, 0x19a; call dword ptr gs:[0x10]; 
0x0011c1a9: dec esp; and al, 0x1c; mov ebx, dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000d715c: dec esp; and al, 0x1c; push ecx; mov dword ptr [esp + 0x18], ecx; push ebx; call eax; 
0x00161fb8: dec esp; and al, 0x20; push ecx; push 6; push eax; call dword ptr [edx + 0x14]; 
0x00165efb: dec esp; and al, 0x20; push ecx; push esi; call dword ptr [eax]; 
0x00121e74: dec esp; and al, 0x24; mov eax, 0x156; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0003bc34: dec esp; and al, 0x24; mov eax, 0x163; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011c574: dec esp; and al, 0x24; mov eax, 0x90; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00117284: dec esp; and al, 0x24; mov eax, 0x91; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00117354: dec esp; and al, 0x24; mov eax, 0x92; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001116c4: dec esp; and al, 0x24; mov eax, 0xa8; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0010a194: dec esp; and al, 0x24; mov eax, 3; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0010a264: dec esp; and al, 0x24; mov eax, 4; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0010b0b3: dec esp; and al, 0x24; mov eax, 8; call dword ptr gs:[0x10]; 
0x00121ea2: dec esp; and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x0003bc62: dec esp; and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x0011c5a2: dec esp; and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x001172b2: dec esp; and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x00117382: dec esp; and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x001116f2: dec esp; and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x0010a1c2: dec esp; and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 3; call dword ptr gs:[0x10]; 
0x0010a292: dec esp; and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 4; call dword ptr gs:[0x10]; 
0x0010b0da: dec esp; and al, 0x24; mov edx, eax; mov eax, 8; call dword ptr gs:[0x10]; 
0x0009167a: dec esp; and al, 0x24; mov edx, ecx; mov ecx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0016f49b: dec esp; and al, 0x28; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00161fa5: dec esp; and al, 0x28; push ecx; push 4; push edx; call dword ptr [eax + 0x14]; 
0x000394e1: dec esp; and al, 0x28; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0016f39b: dec esp; and al, 0x2c; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00109c2d: dec esp; and al, 0x30; mov eax, 0x127; mov ebx, 0xffffff9c; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00109d81: dec esp; and al, 0x30; mov eax, 0x127; mov ebx, 0xffffff9c; mov edx, edi; call dword ptr gs:[0x10]; 
0x00109c6b: dec esp; and al, 0x30; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00109dcb: dec esp; and al, 0x30; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000cb017: dec esp; and al, 0x34; call ecx; 
0x00117464: dec esp; and al, 0x34; mov dword ptr [esp + 0xc], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00117634: dec esp; and al, 0x34; mov dword ptr [esp + 0xc], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x0011754a: dec esp; and al, 0x34; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x0011771a: dec esp; and al, 0x34; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x00103b4a: dec esp; and al, 0x34; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x00103c2a: dec esp; and al, 0x34; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x00121ab5: dec esp; and al, 0x34; mov eax, 0x100; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000ddb26: dec esp; and al, 0x34; mov eax, 0x11c; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00109ee1: dec esp; and al, 0x34; mov eax, 0x127; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0010a047: dec esp; and al, 0x34; mov eax, 0x127; mov edx, edi; call dword ptr gs:[0x10]; 
0x00121b95: dec esp; and al, 0x34; mov eax, 0x13b; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00121c75: dec esp; and al, 0x34; mov eax, 0x13c; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00117431: dec esp; and al, 0x34; mov eax, 0x14d; mov edi, ebp; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0011751d: dec esp; and al, 0x34; mov eax, 0x14d; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00117601: dec esp; and al, 0x34; mov eax, 0x14e; mov edi, ebp; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001176ed: dec esp; and al, 0x34; mov eax, 0x14e; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001257c5: dec esp; and al, 0x34; mov eax, 0x159; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00103b1e: dec esp; and al, 0x34; mov eax, 0xb4; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00103bfe: dec esp; and al, 0x34; mov eax, 0xb5; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000916a5: dec esp; and al, 0x34; mov edx, ebp; mov dword ptr [esp + 0x28], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x00109f1a: dec esp; and al, 0x34; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0010a08a: dec esp; and al, 0x34; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0011185b: dec esp; and al, 0x54; mov eax, 0x135; mov edi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0012236a: dec esp; and al, 0x54; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x001117df: dec esp; and al, 0x54; mov eax, 0x19e; mov edi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x001118bb: dec esp; and al, 0x54; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x000c4ec4: dec esp; and al, 0x54; push ecx; mov eax, dword ptr [esp + 0x40]; push dword ptr [eax]; call edi; 
0x00093f5b: dec esp; and al, 0x64; mov dword ptr [esp + 0x28], eax; cmove esi, edi; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x00093ed8: dec esp; and al, 0x64; mov eax, 0x199; mov esi, ebp; call dword ptr gs:[0x10]; 
0x00121929: dec esp; and al, 0x64; mov ebx, dword ptr [esp + 0x60]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000d76c1: dec esp; and al, 0x74; mov edx, ebp; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000d7737: dec esp; and al, 0x74; mov edx, edi; call dword ptr gs:[0x10]; 
0x000d77f6: dec esp; and al, 0x74; mov edx, edi; mov dword ptr [esp + 0xc], eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x000de7d8: dec esp; and al, 0xc; add ebx, 1; mov dword ptr [esp + 8], eax; call edx; 
0x0010a355: dec esp; and al, 0xc; call dword ptr gs:[0x10]; 
0x0015b0f1: dec esp; and al, 0xc; mov dword ptr [edx + 0x2c], ebx; mov dword ptr [edx + 0x34], ecx; pop ebx; ret; 
0x000de828: dec esp; and al, 0xc; mov dword ptr [esp + 8], eax; call edx; 
0x00093da1: dec esp; and al, 0xc; mov eax, 0x105; call dword ptr gs:[0x10]; 
0x00122189: dec esp; and al, 0xc; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x000d7570: dec esp; and al, 0xc; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000fb1db: dec esp; and al, 0xc; mov eax, 0x1a7; call dword ptr gs:[0x10]; 
0x000ce9c9: dec esp; and al, 0xc; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x00122dcc: dec esp; and al, 0xc; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x00122f4c: dec esp; and al, 0xc; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x00122e8c: dec esp; and al, 0xc; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x00105011: dec esp; and al, 0xc; mov eax, 0xdb; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00058a16: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00123f2a: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00123b2a: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x00109bca: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x0010c29a: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x0010c1da: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x0010afea: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x001152fa: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x0010c20a: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x55; call dword ptr gs:[0x10]; 
0x0011702a: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x00120fca: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x00123bda: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x001238da: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x0011c52a: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x001239ca: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x001239fa: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x000fafea: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x00123c4a: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000de87a: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x0010bbea: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x0010bbba: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000df6ba: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000df6ea: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x0010bb8a: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x0011c65a: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x0011c62a: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x0011f3fa: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x0011f45a: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x0011f32a: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x0007199a: dec esp; and al, 0xc; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 8], edx; pop ebx; jmp eax; 
0x001254f6: dec esp; and al, 0xc; mov edx, dword ptr [esp + 0x10]; mov dword ptr [esp + 0x18], eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x001254a8: dec esp; and al, 0xc; mov edx, dword ptr [esp + 0x10]; mov dword ptr [esp + 0x18], eax; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x0012543f: dec esp; and al, 0xc; mov edx, dword ptr [esp + 0x10]; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x0008d77a: dec esp; and al, 0xc; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x00081983: dec esp; and al, 0xc; pop ebx; mov eax, dword ptr [edx + 0x18]; pop esi; jmp eax; 
0x00021dc9: dec esp; and al, 0xc; sub ecx, dword ptr gs:[0x14]; jne 0x21dd9; add esp, 0x1c; ret; 
0x000d749d: dec esp; and al, 4; call dword ptr gs:[0x10]; 
0x0016ece7: dec esp; and al, 4; jmp dword ptr [eax + 0x30]; 
0x000d75d8: dec esp; and al, 4; mov dword ptr [esp + 8], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x000d7304: dec esp; and al, 4; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x00084719: dec esp; and al, 4; mov eax, 0x16; cmp edx, 2; jbe 0x84730; ret; 
0x00116b39: dec esp; and al, 4; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x000fb131: dec esp; and al, 4; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x000e0200: dec esp; and al, 4; mov eax, 1; test ecx, ecx; js 0xe0210; ret; 
0x0016efc1: dec esp; and al, 8; call eax; 
0x000d7499: dec esp; and al, 8; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x0011f5a2: dec esp; and al, 8; mov dword ptr [ecx], eax; mov eax, 1; ret; 
0x0015d883: dec esp; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x001656fc: dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x00165714: dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0008d28e: dec esp; and al, 8; mov eax, 0xf0; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00123ba7: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x00123da7: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x00121817: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x0010b067: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x00123dd7: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x00123e47: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x00123e77: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x00123ea7: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x00037947: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x00109b97: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x27; call dword ptr gs:[0x10]; 
0x000df5e7: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x0010afb7: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x3f; call dword ptr gs:[0x10]; 
0x001184b7: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x0010c1a7: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x53; call dword ptr gs:[0x10]; 
0x00119277: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x0011c4f7: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x00109977: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x001185d7: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x00123937: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x0010abe7: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x0011c6c7: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x0011c6f7: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x000faf87: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x000fafb7: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x00121027: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x00123967: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x00123997: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x00037f97: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000df387: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x00123c77: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x0011f4f7: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x0011f487: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x0011f357: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x00109947: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xf; call dword ptr gs:[0x10]; 
0x0010c137: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 9; call dword ptr gs:[0x10]; 
0x00088a18: dec esp; and al, 8; mov esi, 8; call dword ptr gs:[0x10]; 
0x000cc076: dec esp; and al, 8; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x000875c4: dec esp; and al, 8; xor edx, edx; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x00127a4f: dec esp; call 0x127920; add esp, 4; ret; 
0x0009365f: dec esp; call dword ptr gs:[0x10]; 
0x00027245: dec esp; call eax; 
0x0006aceb: dec esp; cld; jmp dword ptr [esi - 0x70]; 
0x0007b535: dec esp; cli; inc dword ptr [ebx - 0x3fceeb3c]; pop ebx; pop esi; ret; 
0x0006c28d: dec esp; idiv edi; jmp ptr [ecx]; ret; 
0x0003aa8d: dec esp; je 0x3aa89; call dword ptr [eax - 0x18]; 
0x0016059c: dec esp; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x0009372e: dec esp; mov eax, 0x117; call dword ptr gs:[0x10]; 
0x0009377e: dec esp; mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x0008defb: dec esp; mov ecx, esi; mov ebx, dword ptr [esp + 0xa0]; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x0013fc4d: dec esp; or byte ptr [ebx + eax*4], cl; ror byte ptr [esi], 0x85; sal byte ptr [ebx + 0x39], cl; ret 0x4572; 
0x000da074: dec esp; or dword ptr [eax], eax; add esp, 0x10; mov eax, dword ptr [esp + 0xc]; call eax; 
0x000d0934: dec esp; out 0xf8, al; inc dword ptr [ecx]; fidivr dword ptr [esi]; jmp edx; 
0x0003671b: dec esp; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x0003955d: dec esp; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0002b4bf: dec esp; push ebx; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x50]; push dword ptr [esp + 0x50]; call esi; 
0x000eaff0: dec esp; push ecx; dec dword ptr [ecx + 0x44e82434]; push ecx; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0011f8f7: dec esp; push ecx; stc; call dword ptr [eax + 0x57]; 
0x001605ef: dec esp; push edx; call eax; 
0x000fe8d2: dec esp; push ss; dec byte ptr [ebx - 0x6d34b]; jmp dword ptr [esi - 0x77]; 
0x000f0274: dec esp; ret 0x5650; 
0x0004e601: dec esp; ret 0x8589; 
0x0014d5bb: dec esp; ret 0x8904; 
0x000b5ba9: dec esp; ret 0xb; 
0x000f247f: dec esp; ret 0xc183; 
0x00040265: dec esp; ret; 
0x000fc204: dec esp; sahf; stc; call dword ptr [eax - 0x73]; 
0x00056ab4: dec esp; sbb dword ptr [eax], eax; add byte ptr [eax - 0x18], dl; ret 0x2c6; 
0x00103ee2: dec esp; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x0011f6a6: dec esp; stc; call dword ptr [eax + 0x57]; 
0x001197c5: dec esp; stc; call dword ptr [edx - 0x77]; 
0x0015eda2: dec esp; std; dec dword ptr [ebp - 0x69c1f7d]; call dword ptr [edx + 0x6a]; 
0x00140e31: dec esp; test al, 0xf9; call dword ptr [eax - 0x73]; 
0x00099a31: dec esp; xchg ebx, eax; stc; dec dword ptr [ebp - 0x6bf3a69]; call dword ptr [eax - 0x73]; 
0x00127515: div byte ptr [eax + edx - 0x77]; mov bl, 0x60; add al, byte ptr [eax]; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000ceb55: div byte ptr [eax + esi*2 - 0x75]; pop esp; and al, 0x50; lea edx, [esp + 0x1c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0011985d: div byte ptr [ebp + 0x10]; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x000830c9: div byte ptr [ebp + 0x3c]; mov eax, 0xf0; xor edx, edx; call dword ptr gs:[0x10]; 
0x001a0e70: div byte ptr [ebp - 0x1b]; add esp, 4; pop ebx; pop esi; ret; 
0x001a0dad: div byte ptr [ebp - 0x1c]; add esp, 4; pop ebx; pop esi; ret; 
0x001a06ee: div byte ptr [ebp - 0x1d]; add esp, 4; pop ebx; pop esi; ret; 
0x000ff69c: div byte ptr [ebp - 0x1f]; pop ebx; pop esi; pop edi; ret; 
0x00022801: div byte ptr [ebx + edx - 0x7d]; in al, dx; or al, 0x56; call 0x16ed20; mov dword ptr [esp], ebx; call esi; 
0x000c4c36: div byte ptr [ecx + edi*8 + 0x1cc483ff]; ret; 
0x000931c0: div byte ptr [ecx]; sal dh, cl; rol dword ptr [eax + 0x75], 0x20; add ebx, 1; mov eax, 0x115; call dword ptr gs:[0x10]; 
0x000e172a: div byte ptr [esi + ecx - 0x7d]; in al, dx; or byte ptr [eax + 0x57], dl; call esi; 
0x000bd221: div dword ptr [ecx]; ret; 
0x00054c45: div ebx; pop ebx; pop esi; add ecx, eax; mov eax, ecx; ret; 
0x00132ae0: div ebx; pop ebx; pop esi; pop edi; ret; 
0x00092f70: endbr32; call 0x171e01; add eax, 0x197087; mov dword ptr [eax + 0x3b04], 0; ret; 
0x00088340: endbr32; call 0x171e01; add eax, 0x1a1cb7; mov eax, dword ptr [eax + 0x3a28]; ret; 
0x00080e80: endbr32; call 0x171e01; add eax, 0x1a9177; mov eax, dword ptr [eax + 0xce0]; ret; 
0x000384d0: endbr32; call 0x171e01; add eax, 0x1f1b27; mov eax, dword ptr [eax + 0x64]; ret; 
0x000384b0: endbr32; call 0x171e01; add eax, 0x1f1b47; mov eax, dword ptr [eax + 0x68]; ret; 
0x0002b8c0: endbr32; call 0x171e01; add eax, 0x1fe737; mov eax, dword ptr [eax + 0x1014]; ret; 
0x000227b0: endbr32; call 0x171e01; add eax, 0x207847; mov eax, dword ptr [eax + 0xff0]; ret; 
0x00022790: endbr32; call 0x171e01; add eax, 0x207867; mov eax, dword ptr [eax + 0xfec]; ret; 
0x00021750: endbr32; call 0x171e01; add eax, 0x2088a7; lea eax, [eax - 0x6921c]; ret; 
0x00021730: endbr32; call 0x171e01; add eax, 0x2088c7; lea eax, [eax - 0x69214]; ret; 
0x00020160: endbr32; jmp dword ptr [ebx + 0xc]; 
0x00020150: endbr32; jmp dword ptr [ebx - 0x10]; nop word ptr [eax + eax]; endbr32; jmp dword ptr [ebx + 0xc]; 
0x00123b50: endbr32; mov eax, 0x123; call dword ptr gs:[0x10]; 
0x000df2c0: endbr32; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x000df2c0: endbr32; mov eax, 0x14; call dword ptr gs:[0x10]; ret; 
0x00118e00: endbr32; mov eax, 0x24; call dword ptr gs:[0x10]; 
0x000df2e0: endbr32; mov eax, 0x40; call dword ptr gs:[0x10]; 
0x000df2e0: endbr32; mov eax, 0x40; call dword ptr gs:[0x10]; ret; 
0x000df610: endbr32; mov eax, 0x41; call dword ptr gs:[0x10]; 
0x000df610: endbr32; mov eax, 0x41; call dword ptr gs:[0x10]; ret; 
0x000df690: endbr32; mov eax, 0x42; call dword ptr gs:[0x10]; 
0x0011c750: endbr32; mov eax, 0x99; call dword ptr gs:[0x10]; 
0x0008fe30: endbr32; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0008fe30: endbr32; mov eax, 0x9e; call dword ptr gs:[0x10]; ret; 
0x000df300: endbr32; mov eax, 0xc7; call dword ptr gs:[0x10]; 
0x000df300: endbr32; mov eax, 0xc7; call dword ptr gs:[0x10]; ret; 
0x000df340: endbr32; mov eax, 0xc8; call dword ptr gs:[0x10]; 
0x000df340: endbr32; mov eax, 0xc8; call dword ptr gs:[0x10]; ret; 
0x000df320: endbr32; mov eax, 0xc9; call dword ptr gs:[0x10]; 
0x000df320: endbr32; mov eax, 0xc9; call dword ptr gs:[0x10]; ret; 
0x000df360: endbr32; mov eax, 0xca; call dword ptr gs:[0x10]; 
0x000df360: endbr32; mov eax, 0xca; call dword ptr gs:[0x10]; ret; 
0x00123f00: endbr32; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x00123f00: endbr32; mov eax, 0xe0; call dword ptr gs:[0x10]; ret; 
0x000801c0: endbr32; mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x0007f9e0: endbr32; mov eax, 0xffffffff; ret; 
0x001585d0: endbr32; mov eax, 1; ret; 
0x0015a950: endbr32; mov eax, 2; ret; 
0x00082800: endbr32; mov eax, dword ptr [eax + 0x1c]; mov dword ptr gs:[0x80], eax; ret; 
0x00036ed0: endbr32; mov eax, dword ptr [esp + 0x10]; and eax, 0x80000000; ret; 
0x0017a980: endbr32; mov eax, dword ptr [esp + 0x10]; mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x00166b30: endbr32; mov eax, dword ptr [esp + 4]; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x0007be80: endbr32; mov eax, dword ptr [esp + 4]; and dword ptr [eax], 0xffffffcf; ret; 
0x0002fdc0: endbr32; mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x00133a60: endbr32; mov eax, dword ptr [esp + 4]; and eax, 0xffff; ror ax, 8; ret; 
0x00133a50: endbr32; mov eax, dword ptr [esp + 4]; bswap eax; ret; 
0x00084b80: endbr32; mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x0008e0a0: endbr32; mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 1; xor eax, eax; ret; 
0x0014df90: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x10]; ret; 
0x00166b70: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x00080eb0: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x001719a0: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x001719c0: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x50]; ret; 
0x00171a50: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x54]; ret; 
0x00171a40: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x001719d0: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x00091b50: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x64]; ret; 
0x001160d0: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x0007b0c0: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x0007b070: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x804; ret; 
0x000d9100: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; ret; 
0x001719b0: endbr32; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x00080ec0: endbr32; mov eax, dword ptr [esp + 4]; ret; 
0x0007eef0: endbr32; mov eax, dword ptr [esp + 4]; test byte ptr [eax], 0x80; jne 0x7ef00; ret; 
0x0008d760: endbr32; mov eax, dword ptr gs:[8]; ret; 
0x000886d0: endbr32; mov eax, dword ptr gs:[8]; xor edx, edx; lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x00166770: endbr32; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x00123d40: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x136; call dword ptr gs:[0x10]; 
0x00123a50: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x149; call dword ptr gs:[0x10]; 
0x00123b70: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x00118ee0: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x158; call dword ptr gs:[0x10]; 
0x00123ed0: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x17e; call dword ptr gs:[0x10]; 
0x000ddbe0: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x0010c2c0: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x28; call dword ptr gs:[0x10]; 
0x0010af80: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x29; call dword ptr gs:[0x10]; 
0x00118ce0: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x33; call dword ptr gs:[0x10]; 
0x00109920: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x00118d10: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x00123d70: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x56; call dword ptr gs:[0x10]; 
0x00120ff0: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x00119240: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x00123900: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x71; call dword ptr gs:[0x10]; 
0x001192a0: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x73; call dword ptr gs:[0x10]; 
0x00123d10: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x000dd610: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x00123ab0: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x82; call dword ptr gs:[0x10]; 
0x000df5b0: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x84; call dword ptr gs:[0x10]; 
0x0010b1a0: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x00121a70: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x88; call dword ptr gs:[0x10]; 
0x000df660: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x93; call dword ptr gs:[0x10]; 
0x0011c720: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x98; call dword ptr gs:[0x10]; 
0x000fb010: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x000fb060: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x000fb090: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x0010c260: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xa; call dword ptr gs:[0x10]; 
0x0010b170: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xc; call dword ptr gs:[0x10]; 
0x001213f0: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x00121410: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x00123a20: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xfe; call dword ptr gs:[0x10]; 
0x0008c670: endbr32; nop; xor eax, eax; ret; 
0x000de3b0: endbr32; pop ecx; mov eax, 0xbe; int 0x80; 
0x000dd640: endbr32; push ebx; mov eax, 0x2b; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00021490: endbr32; ret; 
0x00080110: endbr32; xor eax, eax; ret; 
0x00044810: fadd dword ptr [0x8d500000]; xchg byte ptr [esi + 0x30], ah; stc; call dword ptr [eax - 0x18]; 
0x000414cc: fadd dword ptr [0x8d500000]; xchg dword ptr [esi + 0x30], esp; stc; call dword ptr [eax - 0x18]; 
0x0012141b: fadd dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012141b: fadd dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0010d39e: fadd dword ptr [eax]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0010c32c: fadd dword ptr [eax]; pop ebx; pop esi; ret; 
0x00098f63: fadd dword ptr [ebp + 0xbad2]; lock dec dword ptr [edi]; inc esp; ret 0x568d; 
0x00094d7b: fadd dword ptr [ebp + 0xbad2]; lock dec dword ptr [edi]; inc esp; ret 0xd231; 
0x00099570: fadd dword ptr [ebp + 0xbad2]; lock dec dword ptr [edi]; inc esp; ret 0xe821; 
0x000cf92a: fadd dword ptr [ebp - 0x7cf68a2e]; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0005824a: fadd dword ptr [ebp - 0x7cf68a2e]; les ecx, ptr [eax]; pop ebx; ret; 
0x000dadc6: fadd dword ptr [ebp - 7]; call dword ptr [ecx + 0x50]; 
0x00191938: fadd dword ptr [ebx + 0x5b5d04c4]; ret; 
0x000b5d5c: fadd dword ptr [ebx + 0x5e5b04c4]; ret; 
0x0007e094: fadd dword ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x000338d0: fadd dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0004e3c4: fadd dword ptr [ebx - 0x362f43]; call dword ptr [eax]; 
0x0007e96d: fadd dword ptr [ebx - 0x95f714]; push dword ptr [eax]; mov eax, dword ptr [ebp - 0x2c]; call dword ptr [eax + 0xc]; 
0x0013ab83: fadd dword ptr [ebx - 7]; call dword ptr [eax + 0x6a]; 
0x0013dbe2: fadd dword ptr [ebx - 7]; call dword ptr [eax - 1]; 
0x000b5938: fadd dword ptr [ecx]; add byte ptr [eax], al; ret; 
0x000ee451: fadd dword ptr [ecx]; ret 0x9aeb; 
0x000a5bf4: fadd dword ptr [edx]; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x00142d92: fadd qword ptr [0x5e5b0000]; pop edi; pop ebp; ret; 
0x0006860e: fadd qword ptr [eax + eax]; add byte ptr [ebx - 0x1337f], cl; jmp dword ptr [ebp - 0x75]; 
0x0014148e: fadd qword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx - 0xab7b], cl; call dword ptr [eax + 0x6a]; 
0x000d8f28: fadd qword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000d8d6f: fadd qword ptr [eax]; add byte ptr [eax], al; cmovae esi, ecx; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0012ead6: fadd qword ptr [ecx]; add byte ptr [eax], al; add byte ptr [ecx + 0x428be045], cl; or al, 0x89; ret; 
0x00035ea8: fadd st(0); add esp, 0x18; pop ebx; ret; 
0x000364b3: fadd st(0); add esp, 8; pop ebx; ret; 
0x00035e3d: fadd st(0); mov dword ptr [eax], ecx; ret; 
0x0017129b: fadd st(7), st(0); inc esp; ret; 
0x0017acbd: fbld tbyte ptr [esi + 0xf]; jg 0x17ad04; out dx, eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0017bdfd: fbld tbyte ptr [esi + 0xf]; jg 0x17be44; out dx, eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00158e5d: fbstp tbyte ptr [edx - 0x14]; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x0015b7df: fcom dword ptr [edi - 7]; call dword ptr [eax + 0x6a]; 
0x00118f26: fcom qword ptr [eax]; adc dword ptr [eax], eax; push ebx; mov ebx, 0xfee1dead; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000b74f0: fcom qword ptr [ecx]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0014df84: fcomi st(3); inc dword ptr [ebx - 0x2776eb3c]; pop ebx; pop esi; ret; 
0x00124c26: fcomi st(5); dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x000b6022: fcomi st(6); dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x00183894: fcomi st(7); ret 1; 
0x0013dce4: fcomp dword ptr [ebp - 0x3b7c000f]; and byte ptr [ebp - 0x1a77f040], al; add al, 0; add byte ptr [ecx], bh; ret; 
0x0015a9bb: fcomp dword ptr [ebx + 0x5e]; jmp eax; 
0x00025022: fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x00140c4c: fcomp dword ptr [ebx + 0x5e]; pop edi; ret 4; 
0x0002f7fb: fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x0003a6d7: fcomp dword ptr [ebx + 0x5e]; ret; 
0x000c3f92: fcomp dword ptr [ebx + 0x5e]; sub eax, edx; pop edi; ret; 
0x00179ff6: fcomp dword ptr [ebx - 0x17]; jecxz 0x17a038; stc; jmp dword ptr [esi - 0x70]; 
0x00021c4f: fcomp dword ptr [ebx - 0x7d]; rol byte ptr [eax], cl; neg edx; ret; 
0x0016224a: fcomp dword ptr [ecx]; ror byte ptr [ebx + 0x650c2454], 0x2b; adc eax, 0x14; jne 0x162267; add esp, 0x1c; ret; 
0x00193128: fcomp dword ptr [edi + 0x5b]; ret; 
0x00193688: fcomp dword ptr [edi + 0x5d]; pop ebx; ret; 
0x00198048: fcomp dword ptr [edi + 0x5e]; pop ebx; ret; 
0x000c9ca8: fcomp dword ptr [edi + 0x5e]; ret; 
0x0007671f: fcomp dword ptr [esi + 0x5f]; pop ebp; ret; 
0x00087e80: fcomp dword ptr [esi + 0x5f]; ret; 
0x00029de0: fcomp qword ptr [ebx]; add byte ptr [ebx - 0x72bbdb8c], cl; xchg byte ptr [eax + 0x69], ah; stc; call dword ptr [eax - 0x73]; 
0x0005bece: fcos; call dword ptr [edx - 0x73]; 
0x000790ef: fcos; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0006409f: fcos; jmp dword ptr [ebp - 0x5f]; 
0x000a1ce0: fdiv dword ptr [ebp - 0x13]; mov eax, edx; pop ebx; pop esi; ret; 
0x0015c811: fdiv dword ptr [ebp - 0x14]; pop ebx; ret; 
0x000a1c9c: fdiv dword ptr [ebp - 0xf]; mov eax, edx; pop ebx; ret; 
0x0004ae7c: fdiv dword ptr [ebp - 0xf]; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x00054929: fdiv dword ptr [ecx]; fstp xword ptr [ecx]; ret 0xbb7d; 
0x00054c36: fdiv dword ptr [edi - 0x19]; mov eax, ecx; pop ebx; pop esi; ret; 
0x00117109: fdiv dword ptr [edx + 4]; xor eax, eax; pop ebx; ret; 
0x001a05bd: fdiv dword ptr [edx - 0x62754]; fstp st(0); add esp, 0x20; ret; 
0x0007c34f: fdiv dword ptr [esi + 0x4e]; sub esp, 4; push esi; push ebp; push edi; call dword ptr [edx + 0x1c]; 
0x000ff6d9: fdiv dword ptr [esp + ebp - 0x7d]; ret 0x8301; 
0x00093c71: fdiv dword ptr [esp + esi - 0x77]; ret 0x408b; 
0x001a0aeb: fdiv qword ptr [ecx - 7]; call dword ptr [eax - 0x73]; 
0x00072a59: fdiv st(2), st(0); jmp dword ptr [esi - 0x70]; 
0x00165d9b: fdiv st(4), st(0); jmp dword ptr [esi - 0x70]; 
0x00063c74: fdiv st(7), st(0); dec dword ptr [ebx - 0x4f37b]; jmp dword ptr [ebp - 0x75]; 
0x00135d68: fdiv st(7), st(0); jmp dword ptr [esi - 0x70]; 
0x000b61fd: fdiv st(7); ret; 
0x0005e1ee: fdivp st(7); dec dword ptr [ebx - 0x59b7b]; jmp dword ptr [ebp - 0x75]; 
0x00062490: fdivp st(7); dec dword ptr [ecx - 0x52f4b]; jmp dword ptr [ebp - 0x5f]; 
0x0006a725: fdivp st(7); dec dword ptr [ecx - 0x76d7db8c]; ret; 
0x0005e237: fdivp st(7); jmp dword ptr [ebp - 0x5f]; 
0x0009cdd0: fdivr dword ptr [ecx]; fmul dword ptr [edi]; inc edx; ret; 
0x000b5cad: fdivr dword ptr [ecx]; fstp dword ptr [ebx + 0x5e]; cmovg eax, edx; pop edi; ret; 
0x0012c1de: fdivr dword ptr [ecx]; ret 0x8f0f; 
0x001171cb: fdivr dword ptr [ecx]; ret; 
0x00098eb7: fdivr dword ptr [ecx]; ror byte ptr [edi], 1; xor byte ptr [eax + 2], 0; add dh, dh; ret; 
0x000b5c8f: fdivr dword ptr [ecx]; stc; pop edi; cmovg eax, edx; ret; 
0x00084164: fdivr dword ptr [edi - 0x3b7c0007]; adc byte ptr [ebx - 0x3fcefb3c], al; pop ebx; pop esi; ret; 
0x0008bc5c: fdivr dword ptr [esi - 0x35]; pop ebx; mov eax, 0x16; pop esi; pop edi; ret; 
0x00101545: fdivr dword ptr [esi]; jmp eax; 
0x00090ade: fdivr qword ptr [edx]; add byte ptr [eax], al; ret; 
0x00168183: fdivr st(2); inc dword ptr [ebx - 0x7cef3c]; push dword ptr [edi + edx - 0x75]; jnp 0x41a221ea; or byte ptr [ecx], bh; ret 0x2675; 
0x0015e7cc: fdivr st(7); add esp, 0xc; ret; 
0x000b29a1: fdivr st(7); mov byte ptr [eax], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000aa3d6: fdivr st(7); pop ebx; ret; 
0x000a9c67: fdivr st(7); pop edi; pop ebx; ret; 
0x000b4c4f: fdivr st(7); pop esi; pop ebx; ret; 
0x00137c99: fdivrp st(0); call dword ptr [eax - 0x18]; 
0x00124946: fdivrp st(5); dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x000d1547: fiadd dword ptr [eax + 0x440f2df9]; ret 0x4789; 
0x0011c662: fiadd dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00098c0d: fiadd dword ptr [ebp + 0xb9c9]; lock dec dword ptr [edi]; inc esp; shl dword ptr [ecx], 1; ret 0x1a8b; 
0x000908c4: fiadd dword ptr [ebp - 0x76e58b40]; ret; 
0x000d70a9: fiadd dword ptr [ebx + 0x3b8eaf8]; add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0x8dc3; 
0x001420f4: fiadd dword ptr [ebx - 0x17a9f314]; ret 0xfc8d; 
0x0003ab82: fiadd dword ptr [ebx - 0x2508ff2e]; cmovs edx, ebx; cmovs eax, ecx; pop ebx; ret; 
0x000a5304: fiadd dword ptr [ebx - 0x79f0ef15]; ret 0x10; 
0x000a4d84: fiadd dword ptr [ebx - 0x79f0ef15]; ret 0x15; 
0x000a4804: fiadd dword ptr [ebx - 0x79f0ef15]; ret 0x1a; 
0x0006e792: fiadd dword ptr [ebx]; adc al, 0x86; jmp edx; 
0x00195143: fiadd dword ptr [ecx]; mov byte ptr [edx + edx*8 + 0xa2840f], 0; add dh, dh; ret 0x7501; 
0x000b73b2: fiadd dword ptr [edi]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000b54d5: fiadd word ptr [eax + 0x40]; inc eax; add esp, 0x100; sub eax, edx; ret; 
0x0019ab08: fiadd word ptr [eax + eax]; add byte ptr [ebx - 0x7ac3dbbc], cl; ror byte ptr [edi], 0x84; ret; 
0x000239c2: fiadd word ptr [ebp - 7]; call dword ptr [eax - 1]; 
0x000d894b: fiadd word ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x00025fd1: ficom dword ptr [eax]; add byte ptr [ebx - 0x72c3db8c], cl; xchg byte ptr [eax + 0x6a], ah; stc; call dword ptr [eax - 0x73]; 
0x0003659d: ficomp dword ptr [ebx + 0x5e]; mov eax, edx; shr eax, 0x1f; ret; 
0x00120f65: ficomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x0003d862: ficomp dword ptr [esi + 0x5f]; pop ebp; ret; 
0x0017294d: fidiv dword ptr [eax]; stc; call dword ptr [eax - 0x73]; 
0x000d7300: fidiv dword ptr [ebp + 0x3d]; lea ecx, [esp + 4]; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x000d7092: fidiv dword ptr [ebp + 0xc]; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x000a1d98: fidiv dword ptr [ebp + esi*8 + 0x39]; bnd je 0xa1d90; pop ebx; pop esi; ret; 
0x000a1d68: fidiv dword ptr [ebp + esi*8 + 0x5b]; ret; 
0x000a1ad8: fidiv dword ptr [ebp + esi*8 - 0x7c]; sal byte ptr [ecx + edi - 0x73], cl; push eax; add ebx, ebp; or ecx, dword ptr [ebp - 0x7cffd98c]; ret 0x3801; 
0x000fb24a: fidiv dword ptr [ebp - 0x3e]; lea esi, [esi]; lea ecx, [esp + 4]; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x001222b9: fidiv dword ptr [ebp - 0x3f]; lea esi, [esi]; lea ecx, [esp + 0xc]; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x0008d794: fidivr dword ptr [0xfffff000]; mov eax, 0; cmova eax, edx; ret; 
0x00111a8d: fidivr dword ptr [0xfffff000]; mov eax, 0; pop edi; cmova eax, edx; ret; 
0x00104c0e: fidivr dword ptr [eax + 0xd0]; call dword ptr gs:[0x10]; 
0x00054c34: fidivr dword ptr [ecx]; fdiv dword ptr [edi - 0x19]; mov eax, ecx; pop ebx; pop esi; ret; 
0x000952fe: fidivr dword ptr [ecx]; ret 0xa72; 
0x00054695: fidivr dword ptr [ecx]; ret 0xee7f; 
0x00034560: fidivr dword ptr [esi]; jmp edx; 
0x0009beee: fidivr word ptr [ebx]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0014a1f4: fild dword ptr [eax + 0xf2eff78]; xchg esp, eax; ret; 
0x001728e1: fild dword ptr [eax + 0xf72007d]; xchg esp, eax; ret; 
0x00049041: fild dword ptr [eax + eax]; add byte ptr [ecx], dh; rol byte ptr [ebx + 0x440ffff8], cl; ret 0x3c83; 
0x0007b23c: fild dword ptr [eax - 0x76da2b83]; ret 0x5374; 
0x0011c632: fild dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00105015: fild dword ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000b5fa9: fild dword ptr [ebp - 0x760d8b37]; ret; 
0x0008da25: fild dword ptr [ebx + 0xd7401f8]; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x00152e40: fild dword ptr [ebx + 0xf0b023c]; xchg ebp, eax; ret; 
0x0012842c: fild dword ptr [ebx - 0x69f0f606]; ret; 
0x00128dec: fild dword ptr [ebx - 0x69f0f608]; ret; 
0x0011ed9f: fild dword ptr [ecx + 0x42cec]; add byte ptr [ebp - 0x6b46180], cl; jmp dword ptr [ebp - 0x75]; 
0x00035da4: fild dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; fscale; fstp st(1); ret; 
0x0008db30: fild word ptr [ebp + 0x316a78c0]; sar byte ptr [ecx], cl; fmul dword ptr [edi]; xchg ebp, eax; ret 0x148d; 
0x0007dc31: fild word ptr [ebp + 0xffd89db]; inc esp; call 0x6f426; jmp dword ptr [esi - 0x70]; 
0x001a0ae0: fild word ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x000e8a0f: fild word ptr [ebx - 0x6bf0bf05]; ret; 
0x000ad56d: fild word ptr [esi]; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000abc42: fimul dword ptr [eax]; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0002c5d6: fimul dword ptr [ebp - 0x47f2ba8]; add cl, byte ptr [edi]; xchg esi, eax; ret; 
0x0006c451: fimul dword ptr [ebp - 0x6274f4fc]; insb byte ptr es:[edi], dx; idiv edi; jmp ptr [ecx]; ret; 
0x0003f4ff: fimul dword ptr [ebx + 0x138245c]; ret; 
0x000cb98d: fimul dword ptr [ebx + 0x160245c]; ret; 
0x000d7e93: fimul dword ptr [ebx + 0x3b0c246c]; push 0x83b77d1c; ret 0x8301; 
0x000f0ef5: fimul dword ptr [ebx + 0x408b0c50]; or byte ptr [ebx - 0x76e3db8c], cl; shr dword ptr [ecx], cl; ret; 
0x00109925: fimul dword ptr [ebx - 0x47fbdba4]; cmp al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00109925: fimul dword ptr [ebx - 0x47fbdba4]; cmp al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00121415: fimul dword ptr [ebx - 0x47fbdba4]; fadd dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00121415: fimul dword ptr [ebx - 0x47fbdba4]; fadd dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00123a25: fimul dword ptr [ebx - 0x47fbdba4]; inc byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001192a5: fimul dword ptr [ebx - 0x47fbdba4]; jae 0x1192ad; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00123d15: fimul dword ptr [ebx - 0x47fbdba4]; je 0x123d1d; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00123ed5: fimul dword ptr [ebx - 0x47fbdba4]; jle 0x123ede; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00123905: fimul dword ptr [ebx - 0x47fbdba4]; jno 0x12390d; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000dd615: fimul dword ptr [ebx - 0x47fbdba4]; jp 0xdd61d; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00121a75: fimul dword ptr [ebx - 0x47fbdba4]; mov byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00121a75: fimul dword ptr [ebx - 0x47fbdba4]; mov byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0010b175: fimul dword ptr [ebx - 0x47fbdba4]; or al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010c265: fimul dword ptr [ebx - 0x47fbdba4]; or al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ddbe5: fimul dword ptr [ebx - 0x47fbdba4]; sbb eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010c2c5: fimul dword ptr [ebx - 0x47fbdba4]; sub byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010af85: fimul dword ptr [ebx - 0x47fbdba4]; sub dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000df5b5: fimul dword ptr [ebx - 0x47fbdba4]; test byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010b1a5: fimul dword ptr [ebx - 0x47fbdba4]; test dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00118ce5: fimul dword ptr [ebx - 0x47fbdba4]; xor eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000425de: fimul dword ptr [ebx - 0x74c7dba4]; je 0x4260a; cmp al, 1; ret; 
0x00123ba5: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x00123da5: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x00121815: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x0010b065: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x00123dd5: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x00123e45: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x00123e75: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x00123ea5: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x00037945: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x00109b95: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x27; call dword ptr gs:[0x10]; 
0x000df5e5: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x0010afb5: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x3f; call dword ptr gs:[0x10]; 
0x001184b5: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x0010c1a5: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x53; call dword ptr gs:[0x10]; 
0x00119275: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x0011c4f5: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x00109975: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x001185d5: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x00123935: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x0010abe5: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x0011c6c5: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x0011c6f5: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x000faf85: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x000fafb5: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x00121025: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x00123965: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x00123995: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x00037f95: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000df385: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x00123c75: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x0011f4f5: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x0011f485: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x0011f355: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x00109945: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xf; call dword ptr gs:[0x10]; 
0x0010c135: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 9; call dword ptr gs:[0x10]; 
0x00142bd9: fimul dword ptr [ebx - 0x7ce7dba4]; ret 0x8320; 
0x000bf4a2: fimul dword ptr [ecx + 0x7c8d2404]; xchg dword ptr [ecx + eax*4], eax; ret 0; 
0x00104d67: fimul dword ptr [ecx + 0xd2b8c1]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b983a: fimul dword ptr [ecx - 0x72f7dbbc]; jl 0xb97c9; add al, 0x81; ret 0; 
0x000715de: fimul dword ptr [ecx - 0x7c3ede2f]; stc; push dword ptr [eax + ecx*2 - 0x77]; ret; 
0x001044d2: fimul dword ptr [ecx]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000ad272: fimul dword ptr [ecx]; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0004f9c9: fimul dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00091d98: fimul word ptr [ebp - 0x67bff79]; call dword ptr [eax - 0x73]; 
0x000519a9: fimul word ptr [ecx + 0x5f5e5bd8]; pop ebp; ret; 
0x000de7d6: fimul word ptr [ecx - 0x7cf3dbb4]; ret; 
0x00049a1d: fimul word ptr [edi]; xchg esp, eax; ret; 
0x0007c626: fist dword ptr [edi + 0xf]; add byte ptr [ecx + 0x1ad9d6c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x00130e7c: fist word ptr [edi - 7]; call dword ptr [eax - 0x75]; 
0x0013e361: fistp dword ptr [0xc483ffee]; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0003bd38: fistp dword ptr [ebx + 0x31]; rcr byte ptr [esi + 0x5f], 0x5d; ret; 
0x00118d81: fistp dword ptr [ecx + 0x5c8bfff6]; and al, 0x20; mov edx, eax; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x001479b8: fistp dword ptr [esi - 7]; call dword ptr [esi - 0x18]; 
0x000231fb: fistp qword ptr [ebx + eax]; pop ebp; les eax, ptr [ebx - 0x387cf314]; add dword ptr [ebx - 0x7d], edx; ret; 
0x000c415d: fistp qword ptr [edi - 0x3b7c000b]; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000e0012: fistp qword ptr [esi]; jmp edi; 
0x000868d5: fistp qword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x000593e2: fistp word ptr [ebx - 0x77]; rcr byte ptr [esi + 0x5f], 1; pop ebp; ret; 
0x00136d8a: fistp word ptr [ecx - 7]; call dword ptr [eax - 0x18]; 
0x00025743: fisttp dword ptr [ebp + 0x490f0343]; ret; 
0x000ed334: fisttp dword ptr [ebp + 0x490f1f43]; ret; 
0x000fd2a5: fisttp dword ptr [ebp - 0x6736b]; dec dword ptr [edi]; inc ebp; ret; 
0x000c9ff1: fisttp dword ptr [ebp - 0x7600e4a4]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x00093cd9: fisttp dword ptr [ebx + 0x106b81b]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00093d4e: fisttp dword ptr [ebx + 0x198b81b]; add byte ptr [eax], al; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000fe444: fisttp dword ptr [ebx + 0x4308b0]; add byte ptr [ecx - 0x71b4b], cl; dec dword ptr [ecx - 0x2f7f723a]; and ch, ch; call dword ptr [eax - 0x73]; 
0x0010a38e: fisttp dword ptr [ebx - 0x1337b]; jmp dword ptr [ebp - 0x75]; 
0x000ee9c1: fisttp dword ptr [ebx - 0x72e3dbb4]; push ebx; add al, 0x83; ret; 
0x00116ac8: fisttp dword ptr [ebx - 0x74efdbb4]; push esp; and al, 0x14; mov esi, ebx; call dword ptr gs:[0x10]; 
0x0010463b: fisttp dword ptr [ecx + 0x1242484]; add byte ptr [eax], al; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0009531f: fisttp dword ptr [ecx + 0x21082474]; ret; 
0x000399f4: fisttp dword ptr [ecx + 0x5f5e5bd8]; pop ebp; ret; 
0x00173e64: fisttp dword ptr [ecx + 0x5f5e5bd8]; ret; 
0x0013389a: fisttp dword ptr [ecx + 0xbab8e1]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00026878: fisttp dword ptr [ecx - 0x76bfdbbc]; ret 0xb60f; 
0x000a022b: fisttp dword ptr [ecx - 0x7cf4143a]; ret; 
0x00052cb1: fisttp dword ptr [ecx - 0x974b]; dec dword ptr [ecx - 0x72e71410]; je 0x52ce5; add byte ptr [ebx - 0x3e7cfbaf], cl; add al, 0x83; ret; 
0x000ed610: fisttp dword ptr [ecx]; ret; 
0x0004d7e9: fisttp dword ptr [edi]; dec ecx; ret; 
0x000d3a67: fisttp dword ptr [edi]; dec edi; ret; 
0x0002715d: fisttp dword ptr [edi]; inc ebp; ret 0x4489; 
0x00141229: fisttp dword ptr [edi]; inc ebp; ret 0x548b; 
0x0019ccc6: fisttp dword ptr [edi]; inc ebp; ret; 
0x00034d8f: fisttp dword ptr [edi]; test byte ptr [edx - 0x7d000000], bh; in al, dx; or byte ptr [ebp - 0x6d05d7b], cl; call dword ptr [eax + 0x53]; 
0x00193911: fisttp dword ptr [edi]; test dword ptr [eax - 0x7d000000], esi; ret 0x6610; 
0x00041c5e: fisttp dword ptr [edi]; xchg ebp, eax; ret 0x5409; 
0x0019a4d3: fisttp dword ptr [edi]; xchg ebp, eax; ret 0x6c89; 
0x00174978: fisttp dword ptr [edi]; xchg esp, eax; ret 0xc483; 
0x00097e4f: fisttp qword ptr [ebp - 0x6af0f798]; ret; 
0x0015b20e: fisttp qword ptr [ebx + 0x508d1043]; add al, 0x89; push ebx; adc bl, ch; ret; 
0x0014075a: fisttp qword ptr [ebx - 0x7ce3dba4]; ret 0x8802; 
0x001050c2: fisttp qword ptr [ecx + 0x5f5e5bf0]; ret; 
0x000cfd8f: fisttp qword ptr [edi]; xchg esi, eax; ret; 
0x000b44f0: fisttp word ptr [ecx + 0x5f5e5bf0]; ret; 
0x000edecc: fisttp word ptr [ecx]; ret 0x5388; 
0x0019c547: fisttp word ptr [ecx]; test dword ptr [ebx], 0xf1c247c; xchg ebp, eax; ret 0xd789; 
0x0002a311: fisttp word ptr [edi]; xchg edi, eax; ret 0xd184; 
0x00104d62: fisub dword ptr [ebp - 0x25760003]; mov ecx, eax; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x00151fcb: fisub dword ptr [ecx]; ret 0x448b; 
0x000963d3: fisub dword ptr [ecx]; ret 0xd789; 
0x00086b40: fisub dword ptr [ecx]; sar byte ptr [ecx], 1; ret; 
0x001938db: fisub dword ptr [esi + 0xf]; cmp byte ptr [eax], al; ret 0xf66; 
0x0017b3fd: fisub dword ptr [esi + 0xf]; jg 0x17b444; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0017b99d: fisub dword ptr [esi + 0xf]; jg 0x17b9e4; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x001926cc: fisub dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x001495a1: fisub dword ptr [esi - 0x3f]; ret 0x8108; 
0x0008e4da: fisub dword ptr [esi - 0x70]; nop; nop; endbr32; xor eax, eax; ret; 
0x000f0d4e: fisub dword ptr [esi - 0x7f]; loope 0xf0d52; add esi, esi; ret; 
0x0017aced: fisub word ptr [esi + 0xf]; jg 0x17ad34; out dx, al; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x0017be2d: fisub word ptr [esi + 0xf]; jg 0x17be74; out dx, al; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x0019248c: fisub word ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x001475d6: fisubr dword ptr [ecx]; ret 0x6e8b; 
0x0011d85e: fisubr word ptr [eax]; lock inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000b38e3: fld dword ptr [eax]; add byte ptr [eax], al; bsr eax, eax; add eax, edi; pop edi; ret; 
0x00123c7f: fld dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000363df: fld dword ptr [ebx + 0x1cd904ec]; and al, 0xd9; add al, 0x24; add esp, 4; ret; 
0x0003611f: fld dword ptr [ebx + 0x1cdd08ec]; and al, 0xdd; add al, 0x24; add esp, 8; ret; 
0x000501a9: fld dword ptr [ebx - 0x361f7b]; jmp dword ptr [eax]; 
0x0009e082: fld dword ptr [ebx - 0x3b7cfe40]; or al, 0x2b; dec ebp; add byte ptr [ecx], ch; ret 0xd801; 
0x000dc604: fld dword ptr [ebx - 0x72affb14]; xchg byte ptr [eax], bl; inc esi; stc; call dword ptr [edi - 1]; 
0x00095b06: fld dword ptr [ecx]; ret; 
0x00036457: fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x000362ed: fld dword ptr [esp + 4]; ret; 
0x000363e6: fld dword ptr [esp]; add esp, 4; ret; 
0x00036349: fld dword ptr [esp]; mov dword ptr [edx], eax; add esp, 4; ret; 
0x000ef95a: fld qword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x4489; 
0x0010a961: fld qword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00115ab9: fld qword ptr [eax]; add byte ptr [eax], al; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x0010ab39: fld qword ptr [eax]; add byte ptr [eax], al; mov ecx, esi; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0010a8c9: fld qword ptr [eax]; add byte ptr [eax], al; mov ecx, esi; mov edx, edi; call dword ptr gs:[0x10]; 
0x000b6490: fld qword ptr [eax]; add byte ptr [ebx - 0x3b7ceb89], cl; adc cl, ch; imul edi, edi, -1; jmp dword ptr [esi - 0x70]; 
0x0003a5c0: fld qword ptr [ebp - 0x769a8b40]; ret; 
0x00196b4f: fld qword ptr [ecx]; add byte ptr [eax], al; mov eax, ecx; ret; 
0x0003619f: fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00035fad: fld qword ptr [esp + 4]; ret; 
0x0004ca69: fld qword ptr [esp]; add esp, 0xc; ret; 
0x00036126: fld qword ptr [esp]; add esp, 8; ret; 
0x00035e39: fld xword ptr [esp + 4]; fadd st(0); mov dword ptr [eax], ecx; ret; 
0x00035da8: fld xword ptr [esp + 4]; fscale; fstp st(1); ret; 
0x00035e2e: fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00035c1d: fld xword ptr [esp + 4]; ret; 
0x0004caa3: fld xword ptr [esp]; add esp, 0x1c; ret; 
0x001a05bb: fld1; fdiv dword ptr [edx - 0x62754]; fstp st(0); add esp, 0x20; ret; 
0x0014678e: fld1; pop esp; sar dh, cl; jmp dword ptr [esi - 0x70]; 
0x000c2b27: fldcw word ptr [ecx]; ret 0x28b; 
0x000c376d: fldcw word ptr [ecx]; ret 0x3a8b; 
0x00071d0d: fldcw word ptr [ecx]; ret 0xc129; 
0x0007147e: fldcw word ptr [ecx]; sar dword ptr [ecx], 0xca; jbe 0x714d8; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x00073b47: fldcw word ptr [ecx]; sar dword ptr [ecx], 0xca; jbe 0x73b91; sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x0007961b: fldcw word ptr [ecx]; sar dword ptr [ecx], 0xca; jbe 0x797f0; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x000b3be6: fldenv [esi + 0xf]; je 0xb3c3a; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000b4385: fldenv [esi + 0xf]; je 0xb43d4; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x0019275c: fldenv [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x000b3aea: fldenv [esi + 0xf]; xlatb; ret; 
0x00198419: fldenv [esi + 0xf]; xlatb; retf 0xf66; xlatb; ret; 
0x00144a86: fldenv [esi - 0x3f]; ret 0xf08; 
0x00082d2a: fldenv [esi - 0x70]; nop; nop; endbr32; ret; 
0x000fdd1e: fmul dword ptr [ebp + 0x428dc114]; or byte ptr [ecx - 0x6d76b], cl; call dword ptr [eax - 1]; 
0x000a2a10: fmul dword ptr [ebp + 0xf664049]; xlatb; ret; 
0x000c0778: fmul dword ptr [ebx + 0x2918245c]; sal byte ptr [ecx], 1; shr byte ptr [ecx], cl; ret; 
0x0012ead0: fmul dword ptr [ebx + 0x45c7a445]; fadd qword ptr [ecx]; add byte ptr [eax], al; add byte ptr [ecx + 0x428be045], cl; or al, 0x89; ret; 
0x0011cb67: fmul dword ptr [ebx - 0x1337b]; jmp dword ptr [ebp - 0x75]; 
0x0003d9c2: fmul dword ptr [ebx - 0x50f0dbfc]; ret 0xc301; 
0x0008bc47: fmul dword ptr [ecx + 0x5bc03107]; pop esi; pop edi; ret; 
0x000b5de7: fmul dword ptr [ecx + 0x5f5e5bd8]; pop ebp; ret; 
0x001667df: fmul dword ptr [ecx - 0x2776f3be]; pop ebx; ret; 
0x0019c742: fmul dword ptr [ecx - 0x76dfdbac]; ret 0xe8c1; 
0x00026936: fmul dword ptr [ecx - 0x76fe743e]; ret; 
0x00089c3d: fmul dword ptr [ecx]; ret 0xf089; 
0x00069eb5: fmul dword ptr [edi]; dec eax; ret 0x4489; 
0x00067bc1: fmul dword ptr [edi]; dec eax; ret 0xb589; 
0x0003ab5b: fmul dword ptr [edi]; dec eax; ret 0xf3c3; 
0x0004e5ff: fmul dword ptr [edi]; dec esp; ret 0x8589; 
0x0009eb3a: fmul dword ptr [edi]; inc ebp; ret 0xc483; 
0x000b4482: fmul dword ptr [edi]; inc edi; ret; 
0x000335db: fmul dword ptr [edi]; inc edx; ret; 
0x0010414b: fmul dword ptr [edi]; lahf; ret 0xe8c1; 
0x000498b4: fmul dword ptr [edi]; or dword ptr [eax - 0xb], 0xffffffff; jmp ptr [ecx]; ret; 
0x001313e7: fmul dword ptr [edi]; sahf; ret 0xd108; 
0x0002692e: fmul dword ptr [edi]; test byte ptr [esi + 0x29000003], dh; fmul dword ptr [ecx - 0x76fe743e]; ret; 
0x0008db38: fmul dword ptr [edi]; xchg ebp, eax; ret 0x148d; 
0x0004b661: fmul dword ptr [edx + 0x74]; sub dl, byte ptr [eax - 0xa]; ret 0x7501; 
0x00023f61: fmul qword ptr [ebp - 0x2078df7d]; call dword ptr [eax - 0x73]; 
0x0010a7b3: fmul qword ptr [ebp - 0x74ffd98c]; xchg esp, eax; and al, 0xa8; add byte ptr [eax], al; add byte ptr [eax + 0x133], bh; call dword ptr gs:[0x10]; 
0x000e9e13: fmul qword ptr [ebx - 0x5cf0afaf]; ret 0xd473; 
0x0003011b: fmul qword ptr [ebx - 0x76f7db84]; ret; 
0x0016e0a4: fmul qword ptr [ebx - 0x7cefdba4]; ret; 
0x00048a22: fmul qword ptr [ecx + 0x5f5e5bd8]; ret; 
0x0005d1c6: fmul qword ptr [ecx - 0x59f7b]; dec dword ptr [ebx - 0x5a743]; jmp dword ptr [ebp - 0x5f]; 
0x0002468b: fmul qword ptr [ecx - 0x7c2dce28]; ret; 
0x0016bb9f: fnsave dword ptr [esi - 0xf]; inc dword ptr [ebx + 0x448b10c4]; and al, 0xc; add esp, 0x18; pop ebx; ret; 
0x00192611: fnstcw word ptr [eax]; jne 0x192d90; pop ebx; ret; 
0x00195483: fnstcw word ptr [eax]; jne 0x1956b0; pop ebx; ret; 
0x0009ba1c: fnstcw word ptr [ecx]; ret 0x3376; 
0x00035ea3: fnstcw word ptr [edx + 0xa]; jne 0x35eb0; fadd st(0); add esp, 0x18; pop ebx; ret; 
0x00036202: fnstcw word ptr [edx + 0xb]; jne 0x36210; fadd st(0); add esp, 0x18; pop ebx; ret; 
0x000364ae: fnstcw word ptr [edx + 0xf]; jne 0x364c0; fadd st(0); add esp, 8; pop ebx; ret; 
0x000347cc: fnstcw word ptr [esi]; jmp ecx; 
0x00140afc: fnstenv [esi + 9]; mov eax, ebx; shl eax, 4; lea eax, [edx + eax + 8]; pop ebx; ret; 
0x00035e5a: fnstsw ax; fstp st(0); and eax, 0x200; ret; 
0x00088a6f: fnstsw word ptr [0xfffff000]; cmovbe ebp, edx; jmp 0x889fa; lea esi, [esi]; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x00124d76: fprem1; dec dword ptr [ebp - 0x76fbdbb4]; ret 0x448b; 
0x0019252c: frstor dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x00035dac: fscale; fstp st(1); ret; 
0x000bc2ba: fst qword ptr [esi]; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x000b5caf: fstp dword ptr [ebx + 0x5e]; cmovg eax, edx; pop edi; ret; 
0x00192da5: fstp dword ptr [ebx - 0x48]; add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x192db0; neg eax; ret; 
0x0013a617: fstp dword ptr [ebx - 7]; call dword ptr [eax - 0x73]; 
0x0007c62d: fstp dword ptr [edx]; add byte ptr [ebx - 0x77], dl; ret; 
0x000363e3: fstp dword ptr [esp]; fld dword ptr [esp]; add esp, 4; ret; 
0x00036388: fstp dword ptr [esp]; fld dword ptr [esp]; mov dword ptr [edx], eax; add esp, 4; ret; 
0x00036049: fstp qword ptr [eax]; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0003b9b5: fstp qword ptr [eax]; xor eax, eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x000b891f: fstp qword ptr [ebx + 0x5e]; mov edx, ebp; pop edi; pop ebp; ret; 
0x0009e292: fstp qword ptr [ebx + 0x5e]; pop edi; ret; 
0x000a1ea2: fstp qword ptr [ebx - 0x77]; rcr byte ptr [esi + 0x5f], 1; pop ebp; ret; 
0x000d96df: fstp qword ptr [ecx]; cld; jmp dword ptr [esi - 0x70]; 
0x0009a1cb: fstp qword ptr [edx - 0x48]; push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x000cae61: fstp qword ptr [esp]; fld qword ptr [esp]; add esp, 0xc; ret; 
0x00036123: fstp qword ptr [esp]; fld qword ptr [esp]; add esp, 8; ret; 
0x001a05c3: fstp st(0); add esp, 0x20; ret; 
0x00035e5c: fstp st(0); and eax, 0x200; ret; 
0x00035dae: fstp st(1); ret; 
0x000363de: fstp st(1); sub esp, 4; fstp dword ptr [esp]; fld dword ptr [esp]; add esp, 4; ret; 
0x0003611e: fstp st(1); sub esp, 8; fstp qword ptr [esp]; fld qword ptr [esp]; add esp, 8; ret; 
0x00035d61: fstp xword ptr [eax]; add esp, 0x40; pop ebx; pop esi; pop edi; ret; 
0x00093cd5: fstp xword ptr [ecx + 4]; add ebx, ebx; mov ebx, dword ptr [ebx]; mov eax, 0x106; call dword ptr gs:[0x10]; 
0x00093d4a: fstp xword ptr [ecx + 4]; add ebx, ebx; mov ebx, dword ptr [ebx]; mov eax, 0x198; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0005492b: fstp xword ptr [ecx]; ret 0xbb7d; 
0x00072a58: fstpnce st(4), st(0); cli; jmp dword ptr [esi - 0x70]; 
0x00035e5d: fsub dword ptr [0x200]; ret; 
0x0017ae0d: fsub dword ptr [esi + 0xf]; jg 0x17ae54; call 0x42edbd7d; clc; pop ebx; ret; 
0x0017bf4d: fsub dword ptr [esi + 0xf]; jg 0x17bf94; call 0x42edcebd; clc; pop ebx; ret; 
0x001927fc: fsub dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x000ab24c: fsub dword ptr [esi + 0xf]; xlatb; ret; 
0x001575d3: fsub qword ptr [edx - 7]; call dword ptr [eax + 0x6a]; 
0x001576eb: fsub qword ptr [edx - 7]; call dword ptr [eax - 0x18]; 
0x00157627: fsub qword ptr [edx - 7]; jmp dword ptr [ebp - 0x75]; 
0x0017ad4d: fsub qword ptr [esi + 0xf]; jg 0x17ad94; in al, dx; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x0017be8d: fsub qword ptr [esi + 0xf]; jg 0x17bed4; in al, dx; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x0018f5c7: fsub st(1), st(0); ret; 
0x00035d07: fsubp st(1); add esp, 0x40; pop ebx; pop esi; pop edi; ret; 
0x000cae5f: fsubp st(1); fstp qword ptr [esp]; fld qword ptr [esp]; add esp, 0xc; ret; 
0x000648ad: fsubp st(1); outsd dx, dword ptr [esi]; jmp 0x648b1; jmp dword ptr [ebp - 0x5f]; 
0x00035d37: fsubp st(1); ret; 
0x0004f047: fsubr dword ptr [ebx]; test dword ptr [eax - 0x76000037], edi; ret 0xe283; 
0x000c4070: fsubr dword ptr [ecx]; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x00078e9a: fsubr qword ptr [edx]; push dword ptr [ebp - 0x2c]; push edx; push ebx; push esi; call eax; 
0x0009968c: fsubr st(0); out dx, al; ret 0xffff; 
0x00020de8: fsubr st(0); ret 0xa; 
0x000f7797: fsubr st(0); rol dword ptr [ebx - 1], cl; dec dword ptr [ebx + 0x458b2455]; xor byte ptr [ecx], bh; sal byte ptr [ebx + ecx - 0x77], 1; ret 0xf189; 
0x00143a73: fsubr st(1); ret 0xfffe; 
0x00162863: fsubr st(3); inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x00159576: fucomi st(0); je 0x15951e; std; jmp dword ptr [esi - 0x70]; 
0x0016d298: fucomi st(0); push edx; cld; jmp dword ptr [esi - 0x70]; 
0x0003dff5: fucomi st(1); mov dword ptr [0x8dfffffe], eax; je 0x3e024; add byte ptr [eax + 0x244cb60f], dl; and al, 0x39; ret; 
0x0003d7d5: fucomi st(1); mov eax, 0x8dfffffe; je 0x3d804; add byte ptr [eax + 0x244cb60f], dl; sbb byte ptr [ecx], bh; ret; 
0x000dceb7: fucomi st(1); ret; 
0x00140f5f: fucomi st(3); ret 0xb48d; 
0x00178f29: fucomi st(5); call dword ptr [eax + 0x6a]; 
0x001622eb: fucomp st(0); call dword ptr [esi]; 
0x0015bf86: fucomp st(0); jp 0x15bf88; jmp dword ptr [esi - 0x70]; 
0x000d3b17: fucomp st(0); ret; 
0x000f3e0f: fucompi st(1); ret; 
0x0013321e: fucompi st(6); jmp dword ptr [esi - 0x70]; 
0x001236fe: fucompi st(7); call dword ptr [ebx + 0x56]; 
0x001236f2: fucompi st(7); dec dword ptr [ebx - 0x7af3dbac]; ror byte ptr [edi], cl; test bh, cl; fucompi st(7); call dword ptr [ebx + 0x56]; 
0x000289db: fucompp; mov ebx, 0x89fffffb; ret 0xe283; 
0x00035e58: fxam; fnstsw ax; fstp st(0); and eax, 0x200; ret; 
0x0009a98f: hlt; add byte ptr [eax], al; add byte ptr [ebp - 0x66ba380], cl; call dword ptr [eax + 0x68]; 
0x001547e6: hlt; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x840f; 
0x000250e5: hlt; add dword ptr [eax], eax; add byte ptr [ebx - 0x7ce3dbbc], cl; ret 0x8301; 
0x00095bd7: hlt; add dword ptr [eax], eax; add byte ptr [ecx], al; ret; 
0x00076423: hlt; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0013f96b: hlt; add esp, 8; pop ebx; ret; 
0x00162e0c: hlt; bnd call dword ptr [ebp - 0x73]; 
0x001592b6: hlt; bnd call dword ptr [ecx - 0x73]; 
0x001590d3: hlt; bnd call dword ptr [edx + 0x6a]; 
0x001710d8: hlt; call dword ptr [eax - 0x18]; 
0x0016f010: hlt; call dword ptr [eax - 0x73]; 
0x000bc265: hlt; clc; dec dword ptr [ebx - 0x7636cefd]; ret 0x4489; 
0x001645c5: hlt; cld; call dword ptr [eax - 0x73]; 
0x0016bef1: hlt; dec dword ptr [ebp - 0x13343]; dec dword ptr [ecx - 0xa77b]; dec dword ptr [ebp - 0xa77b]; call dword ptr [edi + 0x50]; 
0x000e0985: hlt; dec dword ptr [ebp - 0x6658f7b]; call dword ptr [eax - 0x73]; 
0x000e1804: hlt; dec dword ptr [ebx - 0x18f43]; dec dword ptr [ebp - 0x6656b79]; call dword ptr [eax + 0x68]; 
0x001703bb: hlt; dec dword ptr [ecx + 0x45f6240c]; adc byte ptr [esi*2 + 0x828d18], al; push ebx; hlt; jmp dword ptr [esi - 9]; 
0x0006b464: hlt; idiv bh; jmp ptr [ecx]; ret; 
0x0013c759: hlt; inc dword ptr [ebx + 0x448b10c4]; and al, 0xc; add esp, 0x18; pop ebx; ret; 
0x000d839f: hlt; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x000218ee: hlt; insd dword ptr es:[edi], dx; stc; call dword ptr [eax - 0x18]; 
0x000daa06: hlt; jmp dword ptr [ebp - 0x75]; 
0x000d9685: hlt; jmp dword ptr [esi - 0x70]; 
0x001703ca: hlt; jmp dword ptr [esi - 9]; 
0x00198005: hlt; jne 0x198040; pop edi; pop esi; pop ebx; ret; 
0x0002ea5c: hlt; jno 0x2ea58; call dword ptr [eax - 0x73]; 
0x0002eaa9: hlt; jno 0x2eaa5; call dword ptr [eax - 0x73]; 
0x0002eace: hlt; jno 0x2eaca; call dword ptr [eax - 0x73]; 
0x0017b567: hlt; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017aee7: hlt; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x0017b00e: hlt; mov dword ptr [edx - 8], eax; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017a9de: hlt; mov dword ptr [edx - 8], eax; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x001311fb: hlt; mov eax, dword ptr [eax + 0x18]; ret; 
0x000de420: hlt; mov eax, ecx; call dword ptr gs:[0x10]; 
0x0017ee21: hlt; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00180e51: hlt; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, edx; pop ebx; ret; 
0x00188301: hlt; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x000d6e02: hlt; out 0xff, al; call dword ptr [ecx + 0x52]; 
0x0004dfc6: hlt; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x000222e3: hlt; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0019614a: hlt; pop edi; ret; 
0x0013dcdc: hlt; pop esp; stc; call dword ptr [eax + 0x53]; 
0x00150e81: hlt; pushal; stc; call dword ptr [eax - 0x73]; 
0x00080b5b: hlt; ret; 
0x00073478: hlt; sar dl, cl; jmp dword ptr [esi - 0x70]; 
0x00083914: hlt; sbb dword ptr [eax], eax; add byte ptr [ebx + 0x45a8b02], cl; mov ecx, dword ptr [edx + 8]; mov edx, dword ptr [edx + 0xc]; call dword ptr gs:[0x10]; 
0x001745d5: hlt; sti; jmp dword ptr [esi - 0x70]; 
0x001951c7: hlt; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x00094ce9: hlt; test ecx, edi; call dword ptr [eax - 1]; 
0x000bacd1: hlt; xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x000b5417: hlt; xor eax, eax; ret; 
0x000e7c71: idiv al; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x0011991e: idiv bh; add esp, 0x10; mov eax, 1; add esp, 8; pop ebx; ret; 
0x001500ed: idiv bh; add esp, 0x10; test eax, eax; sete al; add esp, 0xc; ret; 
0x0004367d: idiv bh; call dword ptr [eax + 0x6a]; 
0x0009ea3b: idiv bh; call dword ptr [ebx + 0x56]; 
0x0009b473: idiv bh; cmovne eax, edx; ret; 
0x0012051e: idiv bh; dec dword ptr [ebp - 0x65e9f7d]; call dword ptr [eax - 0x73]; 
0x000c2718: idiv bh; dec dword ptr [ebp - 0x6685770]; call dword ptr [edx - 0x73]; 
0x00148ec6: idiv bh; dec dword ptr [ebx + 0x39702444]; ret 0x840f; 
0x00049a0a: idiv bh; dec dword ptr [ebx + 0x5f8d243c]; inc byte ptr [ebx - 0x6bf0021d]; ret; 
0x000c7e82: idiv bh; dec dword ptr [ebx - 0x363b6b]; inc dword ptr [ebx - 0x361f7b]; jmp dword ptr [eax]; 
0x000c844d: idiv bh; dec dword ptr [ebx - 0x364b63]; jmp dword ptr [ebp - 0x75]; 
0x0006322e: idiv bh; dec dword ptr [ebx - 0x4f37b]; jmp dword ptr [ebp - 0x75]; 
0x00041590: idiv bh; dec dword ptr [ebx - 0x72d3db84]; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x00029cd9: idiv bh; dec dword ptr [ebx - 0x7ccbdbbc]; ret 0x8904; 
0x000a6a8c: idiv bh; inc dword ptr [eax + 0xf000a79]; test byte ptr [edi], al; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000a6a36: idiv bh; inc dword ptr [eax + 0xf000d79]; test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0017056c: idiv bh; inc dword ptr [ebp - 0x761a8b40]; ret; 
0x0004f70f: idiv bh; inc dword ptr [ebx - 0x41f0fe18]; adc byte ptr [ebx - 0x362743], al; call dword ptr [eax]; 
0x0005b85e: idiv bh; jmp dword ptr [ebp - 0x5f]; 
0x000df197: idiv bh; jmp dword ptr [ebp - 0x75]; 
0x000a61e2: idiv bh; jmp dword ptr [esi + 0xf]; 
0x00132c02: idiv bh; jmp dword ptr [esi - 0x70]; 
0x0006b465: idiv bh; jmp ptr [ecx]; ret; 
0x0009b658: idiv bh; lea eax, [eax - 0x174a50]; test byte ptr [ecx + 0x7e], 0x10; cmovne eax, edx; ret; 
0x0009b528: idiv bh; lea eax, [eax - 0x174b10]; test byte ptr [ecx + 0x7e], 0x10; cmovne eax, edx; ret; 
0x0009b0a8: idiv bh; lea eax, [eax - 0x174bd0]; test byte ptr [ecx + 0x7e], 0x10; cmovne eax, edx; ret; 
0x00118d83: idiv bh; mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00118e63: idiv bh; mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x0017493a: idiv bh; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x0009b3a8: idiv bh; test byte ptr [ecx + 0x184], 4; lea edx, [edx - 0x187980]; cmove eax, edx; ret; 
0x00083bf0: idiv byte ptr [eax + 0xf0]; call dword ptr gs:[0x10]; 
0x001268da: idiv byte ptr [ebx + 0x18]; or dh, 1; call dword ptr gs:[0x10]; 
0x00125d3a: idiv byte ptr [ebx + 0xe]; or dh, 1; call dword ptr gs:[0x10]; 
0x00084a56: idiv byte ptr [edx + 0x7fffffff]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00085557: idiv byte ptr [edx + 1]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00133bc6: idiv byte ptr [esi]; inc dword ptr [ebx - 0x2776d73c]; pop ebx; ret; 
0x0011b7dd: idiv dh; jmp dword ptr [ebp - 0x75]; 
0x00093f64: idiv dword ptr [eax + 0x104]; call dword ptr gs:[0x10]; 
0x000bd265: idiv dword ptr [ecx]; ret; 
0x000bbaf5: idiv dword ptr [esi + 7]; add byte ptr [ebx - 0x72cfdb84], cl; xchg esp, esi; xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x0003ab9d: idiv dword ptr [esp + 0xc]; mov dword ptr [ecx], eax; mov eax, ecx; mov dword ptr [ecx + 4], edx; ret 4; 
0x001a0767: idiv edi; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000669bd: idiv edi; call dword ptr [eax + 0x57]; 
0x0004051f: idiv edi; call dword ptr [eax + 0x6a]; 
0x00066799: idiv edi; call dword ptr [eax - 0x18]; 
0x000662d5: idiv edi; call dword ptr [eax - 0x75]; 
0x000662d5: idiv edi; call dword ptr [eax - 0x75]; test dword ptr [edi + esi*8 - 0x7cac0001], ecx; ret; 
0x00066f4c: idiv edi; call dword ptr [eax]; 
0x00066f4c: idiv edi; call dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx + 0x6785c6d3], cl; idiv edi; jmp dword ptr [eax]; 
0x00066d9d: idiv edi; call dword ptr [ebx + 0x52]; 
0x000673b7: idiv edi; call dword ptr [ebx + 0x57]; 
0x000673b7: idiv edi; call dword ptr [ebx + 0x57]; push dword ptr [ebp - 0x87c]; call edx; 
0x0006bc84: idiv edi; call dword ptr [ebx + 0xf]; 
0x0006c1e3: idiv edi; call dword ptr [ebx - 0x18]; 
0x0006cec6: idiv edi; call dword ptr [ebx - 0x75]; 
0x000662dc: idiv edi; call dword ptr [ebx - 0x7d]; 
0x000662dc: idiv edi; call dword ptr [ebx - 0x7d]; ret; 
0x0006b17c: idiv edi; call dword ptr [ebx]; 
0x000d477a: idiv edi; call dword ptr [ecx + 0x50]; 
0x00066dfc: idiv edi; call dword ptr [ecx + 0x6a]; 
0x0006b344: idiv edi; call dword ptr [edx + 0x50]; 
0x0006c501: idiv edi; call dword ptr [edx + 0x56]; 
0x0006c6bc: idiv edi; call dword ptr [edx + 0x6a]; 
0x00067c23: idiv edi; call dword ptr [edx - 0x18]; 
0x00066d11: idiv edi; call dword ptr [edx - 0x77]; 
0x0006cb96: idiv edi; call dword ptr [esi + 0x52]; 
0x00067c9e: idiv edi; call dword ptr [esi + 0x6a]; 
0x00067051: idiv edi; call dword ptr [esi - 0x18]; 
0x0006c38f: idiv edi; call dword ptr [esi - 1]; 
0x000677dd: idiv edi; call ptr [eax + 0xf]; xchg esp, eax; ret 0x5352; 
0x0006768d: idiv edi; dec dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret; 
0x00165e06: idiv edi; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; mov eax, 1; ret; 
0x0003a1f4: idiv edi; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; nop; xor eax, eax; ret; 
0x000668b3: idiv edi; dec dword ptr [ebp - 0x686db79]; call dword ptr [eax - 0x73]; 
0x0009e898: idiv edi; dec dword ptr [ebp - 0x6fffd98c]; add esp, 4; pop ebx; pop esi; ret; 
0x000673a5: idiv edi; dec dword ptr [ebx + 0x193c80]; add byte ptr [ebx - 0x137c4fec], cl; add al, 0x89; lea edx, [edi + esi*8 - 1]; call dword ptr [ebx + 0x57]; 
0x001020b4: idiv edi; dec dword ptr [ebx + 0x4ecb384]; stc; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x00066a09: idiv edi; dec dword ptr [ebx + 0x5f8b1447]; sbb byte ptr [ecx], ch; ret; 
0x000e8c27: idiv edi; dec dword ptr [ebx - 0x16afdb94]; ret; 
0x000e24b7: idiv edi; dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0x14922f80]; call dword ptr [eax + 0x6a]; 
0x00178f17: idiv edi; dec dword ptr [ebx - 0x4737b]; dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0x12240f80]; call dword ptr [eax + 0x6a]; 
0x00106b37: idiv edi; dec dword ptr [ebx - 0x4737b]; dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0x124b8f80]; call dword ptr [eax + 0x6a]; 
0x001771d7: idiv edi; dec dword ptr [ebx - 0x4737b]; dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0x130f5f80]; call dword ptr [eax + 0x6a]; 
0x00175717: idiv edi; dec dword ptr [ebx - 0x4737b]; dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0x131b3f80]; call dword ptr [eax + 0x6a]; 
0x000e4b57: idiv edi; dec dword ptr [ebx - 0x4737b]; dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0x146b6f80]; call dword ptr [eax + 0x6a]; 
0x00063c1e: idiv edi; dec dword ptr [ebx - 0x4f37b]; jmp dword ptr [ebp - 0x75]; 
0x00034d0e: idiv edi; dec dword ptr [ebx - 0x7cd3db8c]; ret 0xc702; 
0x0006cb00: idiv edi; dec dword ptr [ebx - 0x89763]; call dword ptr [edx - 0x77]; 
0x0006704b: idiv edi; dec dword ptr [ebx - 0x8c77b]; call dword ptr [esi - 0x18]; 
0x0006c1dd: idiv edi; dec dword ptr [ebx - 0x8e77b]; call dword ptr [ebx - 0x18]; 
0x0012752a: idiv edi; dec dword ptr [ecx + 0x260b3]; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00067043: idiv edi; dec dword ptr [ecx + 0x408d8bc2]; idiv edi; dec dword ptr [ebx - 0x8c77b]; call dword ptr [esi - 0x18]; 
0x000679b3: idiv edi; dec dword ptr [ecx - 0x17257627]; mov eax, dword ptr [0x89ffffdf]; test dword ptr [edi + esi*8 - 1], esi; jmp ptr [ecx]; ret; 
0x000c26fa: idiv edi; dec dword ptr [ecx - 0x76a3dbac]; ret 0x92e9; 
0x00066d97: idiv edi; dec dword ptr [ecx - 0x87773]; call dword ptr [ebx + 0x52]; 
0x0006c477: idiv edi; dec dword ptr [ecx - 0x88b6b]; call dword ptr [ecx + 0x6a]; 
0x0006c6b6: idiv edi; dec dword ptr [ecx - 0x88b6b]; call dword ptr [edx + 0x6a]; 
0x0006ce46: idiv edi; dec dword ptr [ecx - 0x88b6b]; call dword ptr [edx - 0x18]; 
0x0006c568: idiv edi; dec dword ptr [ecx - 0x88b73]; call dword ptr [esi + 0x6a]; 
0x000675cc: idiv edi; dec dword ptr [ecx - 0x88b7b]; jmp ptr [ecx]; ret; 
0x00066087: idiv edi; dec dword ptr [ecx - 0x8b743]; dec dword ptr [ecx - 0x8c37b]; jmp dword ptr [ebp - 0x5f]; 
0x0006608d: idiv edi; dec dword ptr [ecx - 0x8c37b]; jmp dword ptr [ebp - 0x5f]; 
0x0006b104: idiv edi; dec dword ptr [ecx - 0x8d743]; jmp dword ptr [ebp - 0x5f]; 
0x0006b0fe: idiv edi; dec dword ptr [ecx - 0x8e77b]; dec dword ptr [ecx - 0x8d743]; jmp dword ptr [ebp - 0x5f]; 
0x0006b45f: idiv edi; dec dword ptr [ecx - 0x90b7b]; jmp ptr [ecx]; ret; 
0x000e6fc7: idiv edi; dec dword ptr [edi]; mov dh, 0x55; add byte ptr [ecx], bh; ret 0x840f; 
0x000670fa: idiv edi; dec dword ptr [edi]; xchg ebp, eax; ret 0x9522; 
0x0006c965: idiv edi; dec dword ptr [edx]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret; 
0x000677f5: idiv edi; inc dword ptr [ebx - 0x47cef3c]; or cl, byte ptr [edi]; xchg esp, eax; ret; 
0x00067d87: idiv edi; inc dword ptr [ebx - 0x6a76f314]; xchg esp, eax; idiv edi; call dword ptr [esi - 0x18]; 
0x000667f1: idiv edi; inc dword ptr [ebx - 0x7f72f314]; aam 0x78; stc; call dword ptr [eax - 0x18]; 
0x0006858e: idiv edi; inc dword ptr [ebx - 0x7f72f314]; clc; js 0x68592; call dword ptr [eax - 0x18]; 
0x0006d833: idiv edi; inc dword ptr [ebx - 0x7f72f314]; clc; js 0x6d837; call dword ptr [eax - 0x18]; 
0x0006c288: idiv edi; inc dword ptr [ebx]; test dword ptr [edi + esi*8 - 1], ecx; jmp ptr [ecx]; ret; 
0x00066f58: idiv edi; jmp dword ptr [eax]; 
0x0005b45d: idiv edi; jmp dword ptr [ebp - 0x5f]; 
0x00066863: idiv edi; jmp dword ptr [ebp - 0x75]; 
0x00067804: idiv edi; jmp dword ptr [edx]; 
0x000a62ed: idiv edi; jmp dword ptr [esi + 0xf]; 
0x0002eb03: idiv edi; jmp dword ptr [esi - 0x70]; 
0x00067095: idiv edi; jmp ptr [ecx]; ret; 
0x00191760: idiv edi; mov eax, dword ptr [ebx + eax*4 - 0x86b80]; sub eax, ecx; pop ebp; pop ebx; ret; 
0x0018ef53: idiv edi; mov eax, dword ptr [ebx + eax*4 - 0x86b80]; sub eax, ecx; pop ebx; ret; 
0x0010b0d3: idiv edi; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov edx, eax; mov eax, 8; call dword ptr gs:[0x10]; 
0x0010af03: idiv edi; mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 6; call dword ptr gs:[0x10]; 
0x000677d5: idiv edi; push dword ptr [ecx]; rol byte ptr [eax - 0x89a43], cl; call ptr [eax + 0xf]; xchg esp, eax; ret 0x5352; 
0x00191767: idiv edi; sub eax, ecx; pop ebp; pop ebx; ret; 
0x0018ef5a: idiv edi; sub eax, ecx; pop ebx; ret; 
0x001930f9: idiv edi; sub eax, ecx; pop esi; pop edi; pop ebx; ret; 
0x001624f3: idiv edi; sub esp, 8; lea edx, [esp + 0x20]; push edx; push eax; call edi; 
0x00160f41: imul ah; call dword ptr [eax - 0x73]; 
0x00131026: imul bh; inc dword ptr [ebx - 0x72afef3c]; xchg esi, ecx; push edi; stc; call dword ptr [ebx + 0x50]; 
0x00026033: imul byte ptr [ebx]; stc; call dword ptr [eax - 0x18]; 
0x001951e7: imul byte ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x000a3148: imul byte ptr [ecx]; ret 0x280f; 
0x000a4b4c: imul byte ptr [ecx]; ret 0xc301; 
0x00105c45: imul dword ptr [0xc4830000]; adc byte ptr [ebp - 0x477bf040], al; add byte ptr [eax], al; add byte ptr [ebx - 0x19f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000c8bc5: imul dword ptr [ebp - 0xa]; dec dword ptr [ebx - 0x364b73]; dec dword ptr [ebp - 0x667377f]; call dword ptr [eax - 0x73]; 
0x00195178: imul dword ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x000a3278: imul dword ptr [ecx]; ret 0x280f; 
0x000a4cac: imul dword ptr [ecx]; ret 0xc301; 
0x0017fe34: imul eax, dword ptr [eax + eax], 0x3e8b1c03; jmp ebx; 
0x00080a5b: imul eax, dword ptr [ebx + 0x5e5b3cc4], 0x5f; pop ebp; ret; 
0x0014e6d3: imul eax, dword ptr [ebx + edx*2], -0x77; sti; call 0x20140; mov dword ptr [esp], ebp; call esi; 
0x001628f3: imul eax, dword ptr [ecx + 0x110c4], 0; pop ebx; pop esi; pop edi; ret; 
0x0008b610: imul eax, dword ptr [ecx + eax], 0x75; ret 0x44c7; 
0x00070fc1: imul eax, dword ptr [ecx], 0; add byte ptr [ebx + 0x6a08ec], al; push esi; call dword ptr [ebx + 8]; 
0x00150e5b: imul eax, dword ptr [ecx], 0xec830000; or byte ptr [ebp - 0x69e5a7d], cl; call dword ptr [eax - 1]; 
0x00025a4a: imul eax, dword ptr [edi + ecx], 0x44; ret; 
0x000abdb3: imul eax, dword ptr [edi], 0x5e5f0000; pop ebx; ret; 
0x0003d711: imul eax, dword ptr [edx], 0; add byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; aad 1; ret 0xf089; 
0x000d7f6a: imul eax, dword ptr [esp + 0x10], 0x34; add eax, dword ptr [edx]; add esp, 8; pop ebx; ret; 
0x00152111: imul eax, ecx, 0xb6db6db7; pop edi; pop ebp; ret; 
0x00088a51: imul ebp, dword ptr [eax + 5], 0; mov ecx, dword ptr [edi + 0x68]; mov edx, dword ptr [esp + 0xc]; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0015aceb: imul ebp; jmp dword ptr [esi - 0x70]; 
0x0009a2eb: imul ebx, dword ptr [eax], -0x77; jae 0x9a310; mov dword ptr [ebx], eax; push eax; call ecx; 
0x00152081: imul ebx, dword ptr [ecx], -2; jmp dword ptr [esi - 0x70]; 
0x0019b2fe: imul ecx, dword ptr [eax], -0x7f; les ebp, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret 4; 
0x00122364: imul ecx, dword ptr [ebx - 0x74afdba4], 0x4c; and al, 0x54; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x0008e22d: imul ecx, dword ptr [ecx + eax], 0x5b; pop esi; pop edi; ret; 
0x00081a8a: imul edi, dword ptr [esi], -7; call dword ptr [ecx + 0x52]; 
0x0003a9a1: imul edi, eax, -1; jmp dword ptr [esi - 0x70]; 
0x0009a612: imul edi, eax, 0x5f5e5bff; ret; 
0x000feea7: imul edi, ecx, 0x8301ffff; ret; 
0x00025f74: imul edi, edi, -1; dec dword ptr [ebx - 0x72c3db8c]; xchg byte ptr [eax + 0x6a], ah; stc; call dword ptr [eax - 0x73]; 
0x000b649a: imul edi, edi, -1; jmp dword ptr [esi - 0x70]; 
0x0008be43: imul edi, edi, 0xc4458bff; add esp, 0x10; call eax; 
0x000eba0e: imul edi, edx, -1; call dword ptr [eax + 0x50]; 
0x0010381a: imul edi, esp, -1; jmp dword ptr [esi - 0x70]; 
0x0002b256: imul edx, dword ptr [eax + eax], -0x7f; ret 0xeda7; 
0x00140bb3: imul edx, esi, 0xc483ffff; adc byte ptr [ebp - 0x146f8b40], al; ret; 
0x00171b7c: imul edx; inc dword ptr [ebx - 0x3fcef73c]; pop ebx; ret; 
0x00171b73: imul edx; inc dword ptr [ebx - 0x7af09f1e]; mov edi, esi; ljmp 0xc031:0x8c483ff; pop ebx; ret; 
0x0016bc13: imul esi, dword ptr [esi - 0xf], 0x10c483ff; add esp, 8; pop ebx; ret; 
0x00132b01: imul esi, edi, -1; jmp dword ptr [esi - 0x70]; 
0x00132c01: imul esi, esi, -1; jmp dword ptr [esi - 0x70]; 
0x001a0f23: imul esi, esi, 0xfe39ffed; jae 0x1a0f39; lea esi, [esi]; nop; call dword ptr [esi]; 
0x0013c758: imul esi, esp, -1; add esp, 0x10; mov eax, dword ptr [esp + 0xc]; add esp, 0x18; pop ebx; ret; 
0x0011f39c: in al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010bb27: in al, 0; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0015ef58: in al, 0x11; in al, dx; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0004a194: in al, 0x30; stc; call dword ptr [eax - 0x18]; 
0x0012c458: in al, 0x3c; out dx, eax; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0011d333: in al, 0x44; add byte ptr [eax], al; push eax; call 0x11d4d0; add esp, 0x1c; ret; 
0x000e3234: in al, 0x47; stc; call dword ptr [eax - 0x18]; 
0x001197a5: in al, 0x4a; stc; call dword ptr [edx - 0x77]; 
0x0015ef08: in al, 0x4a; std; jmp dword ptr [esi - 0x70]; 
0x0015ef08: in al, 0x4a; std; jmp dword ptr [esi - 0x70]; nop; endbr32; ret; 
0x00158678: in al, 0x50; push esi; call 0x15a0a0; mov eax, dword ptr [esp + 0x18]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x00071d65: in al, 0x6a; call dword ptr [esi - 0x18]; 
0x000247dc: in al, 0x6e; stc; call dword ptr [eax - 0x18]; 
0x0002c8b2: in al, 0x72; stc; call dword ptr [eax + 0x56]; 
0x001a0daf: in al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0009c6a9: in al, 0x83; ret 0x8301; 
0x000720da: in al, 0x89; ret; 
0x0008de53: in al, 0x8b; mov esp, 0x1a20c3; add bh, dh; mov dword ptr [ecx], 0x74000000; aad 0x89; ret 0xe083; 
0x000b7126: in al, 0x96; stc; call dword ptr [eax - 0x73]; 
0x000ce98f: in al, 0x98; stc; call dword ptr [eax - 0x18]; 
0x000ce98f: in al, 0x98; stc; call dword ptr [eax - 0x18]; daa; adc dh, dh; jmp dword ptr [esi - 0x70]; 
0x000fa66d: in al, 0x9b; stc; call dword ptr [eax - 0x73]; 
0x00158f08: in al, 0xaa; std; jmp dword ptr [esi - 0x70]; 
0x0016cf40: in al, 0xb3; stc; call dword ptr [edi + 0x56]; 
0x000736c8: in al, 0xd0; cli; jmp dword ptr [esi - 0x70]; 
0x00175729: in al, 0xec; call dword ptr [eax + 0x6a]; 
0x00123724: in al, 0xf0; sub esp, 0xc; push esi; call edx; 
0x000c14e5: in al, 0xf6; dec dword ptr [ebx - 0x72dbdb84]; xchg dword ptr [edi + edx*4], esp; stc; call dword ptr [eax - 0x73]; 
0x00196b29: in al, 0xf; test dword ptr [eax - 0x77ffffff], esi; ret 0xe280; 
0x00196c54: in al, 0xf; test dword ptr [ebp - 0x78000000], eax; ret 0xe280; 
0x000721df: in al, 0xfa; jmp dword ptr [esi - 0x70]; 
0x0004153a: in al, 0xfe; dec dword ptr [ebx - 0x72d3db84]; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x000415b3: in al, 0xfe; dec dword ptr [ecx + 0x68808dc7]; jbe 0x415b6; call dword ptr [eax - 0x73]; 
0x00145563: in al, 0xfe; jmp dword ptr [esi - 0x70]; 
0x0006b9ea: in al, 0xff; jmp eax; 
0x00073345: in al, 0xff; jne 0x73351; push edx; call dword ptr [ebx + 0x1c]; 
0x000748aa: in al, 0xff; jne 0x748b6; push esi; call dword ptr [eax + 0x1c]; 
0x000df645: in al, dx; adc al, 0x6a; add byte ptr [edx], ch; call 0xdf5e0; add esp, 0x1c; ret; 
0x0016d18f: in al, dx; adc al, 0x6a; add cl, byte ptr [ebp - 0x699dc80]; call dword ptr [eax - 0x18]; 
0x0015358f: in al, dx; adc al, 0x8d; adc cl, 0x61; stc; call dword ptr [eax + 0x6a]; 
0x00154b8f: in al, dx; adc al, 0x8d; add byte ptr [ecx + 0x62], 0xf9; call dword ptr [eax + 0x6a]; 
0x00153c2f: in al, dx; adc al, 0x8d; and al, 0x61; stc; call dword ptr [eax + 0x6a]; 
0x001575cf: in al, dx; adc al, 0x8d; sbb ah, 0x62; stc; call dword ptr [eax + 0x6a]; 
0x0015644f: in al, dx; adc al, 0x8d; sub byte ptr [edx + 0x6a50fff9], 1; call 0x152d90; add esp, 0x1c; ret; 
0x001578af: in al, dx; adc al, 0x8d; sub cl, 0x62; stc; call dword ptr [eax + 0x6a]; 
0x00157e5f: in al, dx; adc al, 0x8d; xor dh, 0x62; stc; call dword ptr [eax + 0x6a]; 
0x0016d15f: in al, dx; adc al, 0xff; je 0x16d188; sbb byte ptr [ebp - 0x699dc80], cl; call dword ptr [eax - 0x18]; 
0x0002170f: in al, dx; adc byte ptr [eax - 0x45], ch; add dword ptr [eax], eax; add byte ptr [ebp - 0x6995f80], cl; call dword ptr [eax + 0x6a]; 
0x00172982: in al, dx; adc byte ptr [eax - 0x54], ch; add byte ptr [eax], al; add al, ch; ret 0xead7; 
0x0009441e: in al, dx; adc byte ptr [eax - 0x73], dl; sbb byte ptr [eax + 0x5b], 0xf9; call dword ptr [eax + 0x6a]; 
0x000331bf: in al, dx; adc byte ptr [ebp - 0x35f80], cl; call dword ptr [eax - 0x75]; 
0x001a0871: in al, dx; adc byte ptr [ebp - 0x897df7d], cl; call dword ptr [eax - 1]; 
0x001586e1: in al, dx; adc byte ptr [ebp - 0xd1a0f7d], cl; call dword ptr [eax - 0x73]; 
0x0013cca1: in al, dx; adc byte ptr [ebp - 0xed39f7d], cl; call dword ptr [eax - 0x73]; 
0x0007e86c: in al, dx; add al, 0x29; ret 0x5052; 
0x0013b59a: in al, dx; add al, 0x29; ret 0x5752; 
0x00096c77: in al, dx; add al, 0x29; ret 0xf801; 
0x0007860f: in al, dx; add al, 0x29; ret 0xfac1; 
0x0005919c: in al, dx; add al, 0x29; ret; 
0x0016f003: in al, dx; add al, 0x31; test byte ptr [ebp + 0x50282444], -0x73; xchg dword ptr [eax + 0x4d], esi; hlt; call dword ptr [eax - 0x73]; 
0x000a23bc: in al, dx; add al, 0x39; ror byte ptr [ecx + 0xf102454], 1; inc edi; ret 0x5350; 
0x0007d780: in al, dx; add al, 0x50; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x00077be6: in al, dx; add al, 0x50; push edx; push dword ptr [esp + 0x18]; call ecx; 
0x0007d20e: in al, dx; add al, 0x50; push edx; push esi; call ecx; 
0x0011d781: in al, dx; add al, 0x51; push 3; push ebx; call edx; 
0x0017312b: in al, dx; add al, 0x51; push dword ptr [esp + 0xc]; push ebx; call dword ptr [ebp + 0x3c]; 
0x0006c062: in al, dx; add al, 0x51; push edi; push dword ptr [ebp - 0x8a0]; call edx; 
0x000671d1: in al, dx; add al, 0x53; push dword ptr [ebp - 0x88c]; push dword ptr [ebp - 0x87c]; call dword ptr [edx + 0x1c]; 
0x00065de1: in al, dx; add al, 0x53; push dword ptr [esp + 0x14]; push ebp; call dword ptr [eax + 0x1c]; 
0x000719e6: in al, dx; add al, 0x53; push dword ptr [esp + 0x1c]; push dword ptr [esi + 0x98]; call eax; 
0x0006d981: in al, dx; add al, 0x53; push dword ptr [esp + 0x24]; push ebp; call dword ptr [esi + 0x1c]; 
0x00066a36: in al, dx; add al, 0x53; push eax; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x00068b42: in al, dx; add al, 0x53; push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x00073908: in al, dx; add al, 0x53; push edi; push esi; call dword ptr [eax + 0x2c]; 
0x00066b51: in al, dx; add al, 0x53; push edx; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x0006bac9: in al, dx; add al, 0x53; push esi; push dword ptr [ebp - 0x8a0]; call dword ptr [eax + 0x1c]; 
0x0006dd6a: in al, dx; add al, 0x53; push esi; push ebp; call dword ptr [edi + 0x1c]; 
0x0003913d: in al, dx; add al, 0x55; push dword ptr [esp + 0x30]; push esi; call edi; 
0x0007d68a: in al, dx; add al, 0x55; push dword ptr [esp + 0x3c]; push edi; call dword ptr [esi + 0x20]; 
0x00069993: in al, dx; add al, 0x55; push dword ptr [esp + 0x44]; push edi; call dword ptr [eax + 0x1c]; 
0x000698a8: in al, dx; add al, 0x55; push dword ptr [esp + 0x44]; push edi; call dword ptr [ebx + 0x1c]; 
0x0006a7b7: in al, dx; add al, 0x55; push eax; push esi; mov eax, dword ptr [esp + 0x1c]; call dword ptr [eax + 0x1c]; 
0x00038e35: in al, dx; add al, 0x55; push ebx; push esi; call edi; 
0x00074ca3: in al, dx; add al, 0x55; push edi; push ebx; mov eax, dword ptr [esp + 0x10]; call dword ptr [eax + 0x1c]; 
0x00038e11: in al, dx; add al, 0x55; push esi; push dword ptr [esp + 0x1c]; call edi; 
0x00038de4: in al, dx; add al, 0x55; push esi; push dword ptr [esp + 0x30]; call edi; 
0x0007c1d1: in al, dx; add al, 0x56; push dword ptr [esp + 0x28]; push edi; call dword ptr [ebp + 0x1c]; 
0x00068706: in al, dx; add al, 0x56; push dword ptr [esp + 0x28]; push edi; call dword ptr [ebx + 0x1c]; 
0x00074974: in al, dx; add al, 0x56; push dword ptr [esp + 0x38]; push edi; call dword ptr [edx + 0x1c]; 
0x0007c353: in al, dx; add al, 0x56; push ebp; push edi; call dword ptr [edx + 0x1c]; 
0x0011d74a: in al, dx; add al, 0x57; push 0; push ebx; call esi; 
0x0011d75e: in al, dx; add al, 0x57; push 1; push ebx; call esi; 
0x0011d771: in al, dx; add al, 0x57; push 2; push ebx; call esi; 
0x00071d17: in al, dx; add al, 0x57; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x00072b74: in al, dx; add al, 0x57; push dword ptr [esp + 8]; push ebx; call dword ptr [ebp + 0x1c]; 
0x00053857: in al, dx; add al, 0x57; push ebx; push dword ptr [ebp - 0x88]; call eax; 
0x0006ebc9: in al, dx; add al, 0x57; push esi; push ebp; call dword ptr [ebx + 0x1c]; 
0x00074c31: in al, dx; add al, 0x6a; adc byte ptr [edi + 0x53], dl; call dword ptr [eax + 0x1c]; 
0x00080733: in al, dx; add al, 0x6a; add byte ptr [edx], ch; push ebx; call dword ptr [ebp + 0x2c]; 
0x0012f310: in al, dx; add al, 0x6a; add eax, 0x575e938d; stc; call dword ptr [edx + 0x50]; 
0x0012f7ee: in al, dx; add al, 0x6a; add eax, 0x5794808d; stc; call dword ptr [eax - 1]; 
0x000f7d4f: in al, dx; add al, 0x6a; add eax, 0x6003848d; cld; clc; call dword ptr [eax - 0x73]; 
0x00130fb5: in al, dx; add al, 0x6a; add eax, 0x6d20878d; stc; call dword ptr [eax - 0x75]; 
0x001451d7: in al, dx; add al, 0x6a; add eax, 0x8d8134ff; or ah, 0x72; stc; call dword ptr [eax - 0x18]; 
0x000fa47f: in al, dx; add al, 0x6a; add eax, 0x9bc4868d; stc; call dword ptr [eax - 0x73]; 
0x0012efa1: in al, dx; add al, 0x6a; add eax, 0xa480808d; stc; call dword ptr [eax - 0x75]; 
0x0012fbeb: in al, dx; add al, 0x6a; add eax, 0xa4b8808d; stc; call dword ptr [eax + 0x6a]; 
0x000ff6eb: in al, dx; add al, 0x6a; add eax, 0xcc818d50; jb 0xff6ee; call dword ptr [eax - 0x18]; 
0x00057eac: in al, dx; add al, 0x6a; add eax, 0xcc838d50; jb 0x57eaf; call dword ptr [eax - 0x18]; 
0x00081a5e: in al, dx; add al, 0x6a; add eax, 0xcc838d50; jb 0x81a61; call dword ptr [eax - 0x18]; 
0x0009b56a: in al, dx; add al, 0x6a; add eax, 0xcc838d50; jb 0x9b56d; call dword ptr [eax - 0x18]; 
0x00058edd: in al, dx; add al, 0x6a; add eax, 0xcc858d50; jb 0x58ee0; call dword ptr [eax - 0x18]; 
0x00165576: in al, dx; add al, 0x6a; call dword ptr [ebp + 0x56]; 
0x00165576: in al, dx; add al, 0x6a; call dword ptr [ebp + 0x56]; call edi; 
0x00167152: in al, dx; add al, 0x6a; call dword ptr [ebp + 0x57]; 
0x00033d52: in al, dx; add al, 0x6a; or ecx, dword ptr [ebx - 0x72ebdb8c]; xchg byte ptr [edi + 0x2f], dh; stc; call dword ptr [eax - 1]; 
0x0013f9e7: in al, dx; add al, 0x83; ret 0x8802; 
0x00142abe: in al, dx; add al, 0x83; ret 0xf0c; 
0x00041035: in al, dx; add al, 0x83; ret; 
0x001036e7: in al, dx; add al, 0x83; sti; add cl, byte ptr [edi]; xchg esp, eax; ret 0xff52; 
0x00067c99: in al, dx; add al, 0x88; xchg ebp, eax; xchg esp, eax; idiv edi; call dword ptr [esi + 0x6a]; 
0x000673b2: in al, dx; add al, 0x89; lea edx, [edi + esi*8 - 1]; call dword ptr [ebx + 0x57]; 
0x000673b2: in al, dx; add al, 0x89; lea edx, [edi + esi*8 - 1]; call dword ptr [ebx + 0x57]; push dword ptr [ebp - 0x87c]; call edx; 
0x0006d281: in al, dx; add al, 0x89; lea esi, [edi + esi*8 - 1]; call dword ptr [esi + 0x52]; 
0x000fdd12: in al, dx; add al, 0x89; ret; 
0x0002e3c5: in al, dx; add al, 0x89; test dword ptr [esi + edi*8 - 1], eax; call dword ptr [ebx + 0x56]; 
0x00082707: in al, dx; add al, 0x8b; adc dl, byte ptr [ebx + 0x50]; push ecx; call edx; 
0x0006c563: in al, dx; add al, 0x8b; popfd; push 0x89fffff7; lea esi, [edi + esi*8 - 1]; call dword ptr [esi + 0x6a]; 
0x0017802c: in al, dx; add al, 0x8b; push esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0002c2a1: in al, dx; add al, 0x8d; adc dword ptr [eax + 0x20], -0x20; call dword ptr [esi + 0x31]; 
0x0008ef11: in al, dx; add al, 0x8d; and dword ptr [eax + 0x4a], 0xffffffe6; call dword ptr [eax - 0x73]; 
0x00140eca: in al, dx; add al, 0x8d; mov fs, word ptr [edi + 0x5d]; stc; dec dword ptr [ebp - 0x6a28d7a]; call dword ptr [ecx - 0x77]; 
0x00168acc: in al, dx; add al, 0x8d; or dword ptr [eax + 0x500000a5], 0xffffff8d; add dword ptr [esi + 0x62], -7; call dword ptr [eax + 0x6a]; 
0x00160124: in al, dx; add al, 0x8d; sub dword ptr [ecx], 0x6afff964; add eax, 0xcc818d50; jb 0x16012d; call dword ptr [eax - 0x18]; 
0x00139259: in al, dx; add al, 0x8d; test dword ptr [ebp + 0x6afff95a], ebp; add eax, 0xcc858d50; jb 0x139262; call dword ptr [eax - 0x18]; 
0x0009b349: in al, dx; add al, 0x8d; test dword ptr [ebx + 0x6afff943], esi; add eax, 0xcc858d50; jb 0x9b352; call dword ptr [eax - 0x18]; 
0x000590ab: in al, dx; add al, 0x8d; test dword ptr [ecx + 0x32], eax; stc; call dword ptr [ecx + 0x50]; 
0x000592a9: in al, dx; add al, 0x8d; test dword ptr [edi + 0x32], ecx; stc; call dword ptr [ecx + 0x50]; 
0x0013919b: in al, dx; add al, 0x8d; test dword ptr [edx + 0x6afff95a], edi; add eax, 0xcc858d50; jb 0x1391a4; call dword ptr [eax - 0x18]; 
0x0013a980: in al, dx; add al, 0x8d; test ebp, ecx; dec eax; stc; call dword ptr [eax - 0x77]; 
0x0006fc41: in al, dx; add al, 0xc1; clc; add dl, byte ptr [eax - 0x77]; ret; 
0x000363e1: in al, dx; add al, 0xd9; sbb al, 0x24; fld dword ptr [esp]; add esp, 4; ret; 
0x001020ba: in al, dx; add al, 0xf9; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x0012ceac: in al, dx; add al, 0xff; je 0x12ced5; sbb byte ptr [edx], ch; push 0x2000004; call eax; 
0x00021671: in al, dx; add al, 0xff; je 0x2169a; or al, 0x56; push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x000392a1: in al, dx; add al, 0xff; je 0x392ca; adc byte ptr [ebp + 0x56], dl; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00039403: in al, dx; add al, 0xff; je 0x3942c; adc byte ptr [ebp + 0x56], dl; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00039474: in al, dx; add al, 0xff; je 0x3949d; adc byte ptr [ebp + 0x56], dl; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00071a40: in al, dx; add al, 0xff; je 0x71a69; xor byte ptr [ebp + 0x5110244c], cl; push dword ptr [edx + 0x98]; call eax; 
0x0007c683: in al, dx; add al, 0xff; je 0x7c6ac; or al, 0x57; push ebx; call dword ptr [esi + 0x3c]; 
0x00073341: in al, dx; add al, 0xff; jne 0x7332a; push dword ptr [ebp + 8]; push edx; call dword ptr [ebx + 0x1c]; 
0x00073a91: in al, dx; add al, 0xff; jne 0x73aaa; push dword ptr [ebp + 0xc]; push esi; call dword ptr [ebx + 0x2c]; 
0x000748a6: in al, dx; add al, 0xff; jne 0x7488f; push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x0006c38a: in al, dx; add al, 0xff; mov ch, 0x54; idiv edi; call dword ptr [esi - 1]; 
0x0011e837: in al, dx; add al, 0xff; xor byte ptr [ebp - 0x6a4607d], cl; call dword ptr [eax + 0x6a]; 
0x0011e9cf: in al, dx; add al, 0xff; xor byte ptr [ebp - 0x6a99c7d], cl; call dword ptr [eax + 0x6a]; 
0x00142e7b: in al, dx; add al, 1; ret 0x4489; 
0x0015b3b6: in al, dx; add al, 1; ret 0xc129; 
0x000ce988: in al, dx; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; and esp, 0xffffff98; stc; call dword ptr [eax - 0x18]; 
0x000cb7b1: in al, dx; add byte ptr [eax], al; add byte ptr [eax - 0x75], dl; inc esp; and al, 0x5c; call eax; 
0x0003202c: in al, dx; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00029d24: in al, dx; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax + esi*2], ch; stc; call dword ptr [eax - 0x18]; 
0x00026f53: in al, dx; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + esi*2], ebp; stc; call dword ptr [eax - 0x18]; 
0x0012fea7: in al, dx; add esp, 4; pop ebx; pop esi; ret; 
0x00152ba3: in al, dx; add esp, 8; pop ebx; ret; 
0x00132cd3: in al, dx; call 0x132270; lea esi, [esi]; add esp, 8; pop ebx; ret; 
0x0017572a: in al, dx; call dword ptr [eax + 0x6a]; 
0x00160f42: in al, dx; call dword ptr [eax - 0x73]; 
0x0012c450: in al, dx; cmp al, 0xef; dec dword ptr [ecx - 0x1b17dbcc]; cmp al, 0xef; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00157623: in al, dx; cmp byte ptr [ebp - 0x69d2380], cl; jmp dword ptr [ebp - 0x75]; 
0x00155823: in al, dx; cmp byte ptr [ebp - 0x69d7880], cl; jmp dword ptr [ebp - 0x75]; 
0x00154be3: in al, dx; cmp byte ptr [ebp - 0x69dbe80], cl; jmp dword ptr [ebp - 0x75]; 
0x000c46f3: in al, dx; cmp byte ptr [ebp - 0x6d4e848], cl; jmp dword ptr [ebp - 0x75]; 
0x000b64fa: in al, dx; cmp eax, dword ptr [eax]; add byte ptr [edi], cl; inc esp; ret 0xff50; 
0x0015b141: in al, dx; dec dword ptr [ecx - 0xa17dbcc]; dec edi; in al, dx; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00160f40: in al, dx; imul ah; call dword ptr [eax - 0x73]; 
0x0015d8ed: in al, dx; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0015b149: in al, dx; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00158e5f: in al, dx; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x00164940: in al, dx; inc dword ptr [ebx - 0x72aff33c]; sbb dword ptr [eax + 0x5b], -7; call dword ptr [eax + 0x6a]; 
0x0015fbb0: in al, dx; inc dword ptr [ebx - 0x74aaf314]; inc esp; and al, 0x48; call dword ptr [eax + 0x10]; 
0x0015fc85: in al, dx; inc esp; add dword ptr [eax], eax; add byte ptr [ecx - 0x12f7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00150e24: in al, dx; inc esp; add dword ptr [eax], eax; add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0005692c: in al, dx; jbe 0x56928; call dword ptr [eax - 0x18]; 
0x00171f03: in al, dx; jmp dword ptr [esi - 0x70]; 
0x00120d80: in al, dx; lock dec dword ptr [ebp - 0x65d9f7d]; call dword ptr [eax - 0x73]; 
0x00137850: in al, dx; mov dh, ch; jmp dword ptr [ebp - 0x75]; 
0x0017b3a2: in al, dx; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017ad52: in al, dx; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x0017f383: in al, dx; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00181353: in al, dx; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, edx; pop ebx; ret; 
0x001887e3: in al, dx; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x001887de: in al, dx; movdqa xmmword ptr [edx - 0x14], xmm0; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x00071919: in al, dx; or al, 0x31; call dword ptr [esi - 0x18]; 
0x00133897: in al, dx; or al, 0x31; fisttp dword ptr [ecx + 0xbab8e1]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0008c025: in al, dx; or al, 0x31; rol byte ptr [eax + 0xf00197d], cl; xchg ebp, eax; ret 0xe2c1; 
0x0008c77c: in al, dx; or al, 0x31; rol byte ptr [eax + 0xf00197f], cl; xchg ebp, eax; ret 0xe2c1; 
0x0013c87d: in al, dx; or al, 0x50; call 0x16ed20; mov dword ptr [esp], ebp; call esi; 
0x00083625: in al, dx; or al, 0x50; call edx; 
0x00022978: in al, dx; or al, 0x51; call 0x16ed20; mov dword ptr [esp], ebx; mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x00023008: in al, dx; or al, 0x51; call 0x16ed20; mov dword ptr [esp], ebx; mov ecx, dword ptr [ebp - 0x40]; call ecx; 
0x0013cb81: in al, dx; or al, 0x53; call 0x16ed20; mov dword ptr [esp], ebp; call ebx; 
0x0002b873: in al, dx; or al, 0x53; call 0x16ed20; mov dword ptr [esp], esi; call ebx; 
0x001596b4: in al, dx; or al, 0x53; call dword ptr [eax + 0x10]; 
0x0007df86: in al, dx; or al, 0x53; call dword ptr [edi + 0x44]; 
0x00075bba: in al, dx; or al, 0x53; call dword ptr [esi + 0x10]; 
0x0007bfbd: in al, dx; or al, 0x53; call dword ptr [esi + 0x30]; 
0x0007dde4: in al, dx; or al, 0x53; call dword ptr [esi + 0x44]; 
0x00160db9: in al, dx; or al, 0x55; call dword ptr [eax + 0x10]; 
0x0015ac4f: in al, dx; or al, 0x55; call dword ptr [esi]; 
0x00160dd0: in al, dx; or al, 0x55; call eax; 
0x0015fbb3: in al, dx; or al, 0x55; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x10]; 
0x001a0625: in al, dx; or al, 0x56; call 0x16ed20; add ebp, dword ptr [edi + 8]; mov dword ptr [esp], ebp; call esi; 
0x0013c9dd: in al, dx; or al, 0x56; call 0x16ed20; mov dword ptr [esp], ebp; call esi; 
0x00022805: in al, dx; or al, 0x56; call 0x16ed20; mov dword ptr [esp], ebx; call esi; 
0x00158b53: in al, dx; or al, 0x56; call dword ptr [eax + 0x10]; 
0x0007ab9e: in al, dx; or al, 0x56; call dword ptr [eax + 0x30]; 
0x0007fd24: in al, dx; or al, 0x56; call dword ptr [ebp + 0x30]; 
0x00173f30: in al, dx; or al, 0x56; call dword ptr [ebp + 0x44]; 
0x00071486: in al, dx; or al, 0x56; call dword ptr [ebx + 0x30]; 
0x00073b4f: in al, dx; or al, 0x56; call dword ptr [ebx + 0x34]; 
0x0007f97f: in al, dx; or al, 0x56; call dword ptr [edi + 0x34]; 
0x00174075: in al, dx; or al, 0x56; call dword ptr [edi + 0x44]; 
0x0002df10: in al, dx; or al, 0x56; call eax; 
0x00123727: in al, dx; or al, 0x56; call edx; 
0x00123727: in al, dx; or al, 0x56; call edx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x0015f871: in al, dx; or al, 0x56; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x00159b59: in al, dx; or al, 0x56; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x001434aa: in al, dx; or al, 0x56; mov edx, dword ptr [esp + 0x20]; call edx; 
0x00159b07: in al, dx; or al, 0x57; call 0x10aec0; mov eax, dword ptr [ebp + 0x20]; mov dword ptr [esp], ebp; call dword ptr [eax + 0x10]; 
0x000da1dc: in al, dx; or al, 0x57; call 0x16ed20; add esp, 0x10; mov eax, edi; call eax; 
0x00023738: in al, dx; or al, 0x57; call 0x16ed20; mov dword ptr [esp], ebx; call edi; 
0x00159e4e: in al, dx; or al, 0x57; call eax; 
0x0016bc81: in al, dx; or al, 0x68; add byte ptr [ecx], 0; add al, ch; ret; 
0x00083d7d: in al, dx; or al, 0x6a; add al, ch; ljmp 0x1cc4:0x83fffff5; ret; 
0x0009a261: in al, dx; or al, 0x6a; add eax, 0x43a2838d; stc; call dword ptr [eax - 0x73]; 
0x0009e101: in al, dx; or al, 0x83; mov dword ptr [esi + edx*2], 0x17564e8; add byte ptr [ecx - 0x3b7c0389], cl; adc byte ptr [ecx], ch; ret; 
0x0015e7b5: in al, dx; or al, 0x83; ret 0x5208; 
0x00033c41: in al, dx; or al, 0x83; ret; 
0x0005b83b: in al, dx; or al, 0x89; lea ecx, [edx + edi*8 - 1]; call dword ptr [ecx - 0x18]; 
0x0005c385: in al, dx; or al, 0x89; lea edx, [edx + edi*8 - 1]; call dword ptr [edi - 0x18]; 
0x0008fbae: in al, dx; or al, 0x89; push esp; and al, 0x10; push dword ptr [eax + 4]; call dword ptr [eax]; 
0x000f01e1: in al, dx; or al, 0x89; ret 0xe989; 
0x0005b97c: in al, dx; or al, 0x89; ret; 
0x0002ea7f: in al, dx; or al, 0x89; test dword ptr [esi + edi*8 - 1], eax; call dword ptr [ebx - 0x75]; 
0x000e2be0: in al, dx; or al, 0x89; xchg ebp, eax; cmp bl, 0xff; call dword ptr [ebx - 0x18]; 
0x00107250: in al, dx; or al, 0x89; xchg ebp, eax; cmp bl, 0xff; call dword ptr [ebx - 0x18]; ret 0xf7b4; 
0x00067d8b: in al, dx; or al, 0x89; xchg ebp, eax; xchg esp, eax; idiv edi; call dword ptr [esi - 0x18]; 
0x0014cba4: in al, dx; or al, 0x8b; add byte ptr [ecx], bh; ret 0x5473; 
0x00158c9d: in al, dx; or al, 0x8b; dec eax; add al, 0x50; call dword ptr [ecx + 0x10]; 
0x00162105: in al, dx; or al, 0x8b; dec edx; add al, 0x52; call dword ptr [ecx + 0x10]; 
0x001613a0: in al, dx; or al, 0x8b; inc ebp; cmp al, 0x53; call dword ptr [eax + 0x10]; 
0x0016474a: in al, dx; or al, 0x8b; inc ebp; or al, 0x57; call dword ptr [eax + 0x10]; 
0x001590e4: in al, dx; or al, 0x8b; inc ebx; add al, 0x53; call dword ptr [eax + 0x10]; 
0x00162e3e: in al, dx; or al, 0x8b; inc edi; add al, 0x57; call dword ptr [eax + 0x10]; 
0x001593ac: in al, dx; or al, 0x8b; inc edx; add al, 0x52; call dword ptr [eax + 0x10]; 
0x000d996b: in al, dx; or al, 0x8b; jge 0xd9944; mov eax, dword ptr [ebp - 0x30]; push esi; call eax; 
0x000d9bab: in al, dx; or al, 0x8b; jge 0xd9b84; mov eax, dword ptr [ebp - 0x30]; push esi; call eax; 
0x00158e4a: in al, dx; or al, 0x8b; push eax; add al, 0x50; call dword ptr [edx + 0x10]; 
0x001511f0: in al, dx; or al, 0x8b; sub dword ptr [edx - 0x373f0000], 9; xor eax, dword ptr gs:[0x18]; push eax; call edx; 
0x00105e27: in al, dx; or al, 0x8b; test dword ptr [esi + edi*8 - 1], edx; call dword ptr [edi - 1]; 
0x000e1797: in al, dx; or al, 0x8b; test dword ptr [esi + edi*8 - 1], esp; call dword ptr [edi - 1]; 
0x000667f5: in al, dx; or al, 0x8d; adc ah, 0x78; stc; call dword ptr [eax - 0x18]; 
0x0014f3c8: in al, dx; or al, 0x8d; add ah, 0xad; stc; call dword ptr [eax - 0x18]; 
0x00156a4a: in al, dx; or al, 0x8d; add esp, 0x62; stc; call dword ptr [eax - 0x18]; 
0x0010cc06: in al, dx; or al, 0x8d; and dword ptr [edi + 0x4a], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00168fe9: in al, dx; or al, 0x8d; and dword ptr [esi + 0x5f], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00086be1: in al, dx; or al, 0x8d; cmp ah, 0x7e; stc; call dword ptr [eax - 0x18]; 
0x00068592: in al, dx; or al, 0x8d; cmp al, 0x78; stc; call dword ptr [eax - 0x18]; 
0x000317a3: in al, dx; or al, 0x8d; cmp byte ptr [esi], 0x2f; stc; call dword ptr [eax - 0x18]; 
0x0007be0e: in al, dx; or al, 0x8d; cmp dword ptr [esi + edi*2], -7; call dword ptr [eax - 0x18]; 
0x0010d26e: in al, dx; or al, 0x8d; cmp dword ptr [esi], 0x45; stc; call dword ptr [eax - 0x18]; 
0x00158fd4: in al, dx; or al, 0x8d; cmp edi, 0x62; stc; call dword ptr [eax - 0x18]; 
0x00109d31: in al, dx; or al, 0x8d; cmp esp, -0x62; stc; call dword ptr [eax - 0x18]; 
0x00150da1: in al, dx; or al, 0x8d; inc ebx; add al, 0x50; call edi; 
0x00147988: in al, dx; or al, 0x8d; mov bl, 0xce; pop esi; stc; call dword ptr [esi - 0x18]; 
0x001479b4: in al, dx; or al, 0x8d; mov bl, 0xdb; pop esi; stc; call dword ptr [esi - 0x18]; 
0x001479e0: in al, dx; or al, 0x8d; mov bl, 0xea; pop esi; stc; call dword ptr [esi - 0x18]; 
0x00065c5d: in al, dx; or al, 0x8d; nop; cmp byte ptr [ecx - 7], bh; call dword ptr [edx - 0x73]; 
0x0014c86d: in al, dx; or al, 0x8d; nop; mov ah, 0xac; stc; call dword ptr [edx - 0x73]; 
0x00159c71: in al, dx; or al, 0x8d; or dword ptr [ebp + 0x63], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000e60d1: in al, dx; or al, 0x8d; or dword ptr [esi], 0x48; stc; call dword ptr [eax - 0x18]; 
0x000cf411: in al, dx; or al, 0x8d; pop edx; add dword ptr [ecx - 0xff6b], ecx; call dword ptr [ebx - 0x18]; 
0x001605eb: in al, dx; or al, 0x8d; push ebx; dec esp; push edx; call eax; 
0x000cd565: in al, dx; or al, 0x8d; sbb dword ptr [esi], 0x45; stc; call dword ptr [eax - 0x18]; 
0x000fe854: in al, dx; or al, 0x8d; test dword ptr [ecx + edi*8 - 1], ebx; call dword ptr [eax - 0x73]; 
0x000fddff: in al, dx; or al, 0x8d; test dword ptr [ecx + edi*8 - 1], ebx; call dword ptr [eax - 0x75]; 
0x000219de: in al, dx; or al, 0x8d; test esp, esi; insd dword ptr es:[edi], dx; stc; call dword ptr [eax - 0x18]; 
0x00147a04: in al, dx; or al, 0x8d; wait; add bl, byte ptr [edi - 7]; call dword ptr [ebx - 0x18]; 
0x000218ea: in al, dx; or al, 0x8d; xchg ah, dh; insd dword ptr es:[edi], dx; stc; call dword ptr [eax - 0x18]; 
0x00084d8d: in al, dx; or al, 0x8d; xchg al, al; jle 0x84d8d; call dword ptr [eax - 0x18]; 
0x0013b111: in al, dx; or al, 0x8d; xchg bh, ah; pop ebx; stc; call dword ptr [eax - 0x18]; 
0x001152d3: in al, dx; or al, 0x8d; xchg byte ptr [eax - 7], al; call dword ptr [eax - 0x18]; 
0x0013b0f0: in al, dx; or al, 0x8d; xchg byte ptr [ebx], al; pop esp; stc; call dword ptr [eax - 0x18]; 
0x00109feb: in al, dx; or al, 0x8d; xchg byte ptr [edi + ebx*4 - 7], ch; call dword ptr [eax - 0x18]; 
0x0013b014: in al, dx; or al, 0x8d; xchg byte ptr [edi], cl; pop esp; stc; call dword ptr [eax - 0x18]; 
0x0011c2f1: in al, dx; or al, 0x8d; xchg byte ptr [esi], bh; inc ebp; stc; call dword ptr [eax - 0x18]; 
0x0013ad31: in al, dx; or al, 0x8d; xchg ch, dh; pop ebx; stc; call dword ptr [eax - 0x18]; 
0x00168835: in al, dx; or al, 0x8d; xchg dword ptr [esi + 0x5f], esp; stc; call dword ptr [eax - 0x18]; 
0x000e2717: in al, dx; or al, 0x8d; xor cl, 0x47; stc; call dword ptr [eax - 0x18]; 
0x00109e91: in al, dx; or al, 0x8d; xor dword ptr [edi + ebx*4], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00084ddd: in al, dx; or al, 0xff; jae 0x84de6; call dword ptr [ebx]; 
0x0008bf24: in al, dx; or al, 0xff; jae 0x8bf2d; call dword ptr [ebx]; 
0x00114c72: in al, dx; or al, 0xff; je 0x114c9b; sbb al, 0xe8; ret; 
0x0013a501: in al, dx; or al, 0xff; je 0x13a52a; sbb byte ptr [esi - 0x3f], ah; ret; 
0x0014fb16: in al, dx; or al, 0xff; je 0x14fb3f; sub al, 0xe8; jmp ecx; 
0x00157692: in al, dx; or al, 0xff; je 0x1576bb; and al, 0xe8; ret; 
0x0003a693: in al, dx; or al, 0xff; je 0x3a6bc; sub al, ch; ret 0xfffe; 
0x000914e3: in al, dx; or al, 0xff; je 0x9150c; sbb al, ch; ret 0xffa5; 
0x000e87d3: in al, dx; or al, 0xff; je 0xe87fc; cmp al, 0xe8; ret 0x400; 
0x00020f48: in al, dx; or al, 0xff; jne 0x20f19; call dword ptr [ebp - 0x38]; 
0x00023989: in al, dx; or al, 1; ret 0xe852; 
0x0016a0a9: in al, dx; or al, 1; ret; 
0x0009aee1: in al, dx; or al, ch; pop eax; or byte ptr [eax + eax], 0xe8; ret; 
0x00164020: in al, dx; or bh, al; add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebp - 0xc5d7f7d], cl; call dword ptr [eax - 0x73]; 
0x0015e590: in al, dx; or bh, al; add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebp - 0xcb79f7d], cl; call dword ptr [eax - 0x73]; 
0x001256a1: in al, dx; or bh, bh; je 0x12565b; add byte ptr [ebx - 0x7cacfe3a], al; ret; 
0x00158341: in al, dx; or bh, bh; je 0x15836a; or byte ptr [esi - 0x18], dl; ret; 
0x00158913: in al, dx; or bh, bh; je 0x15893c; sbb al, 0x56; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0015dba6: in al, dx; or bh, bh; je 0x15dbcf; cmp al, 0x56; mov eax, dword ptr [esp + 0x40]; call eax; 
0x0016089b: in al, dx; or bh, bh; je 0x1608c4; cmp al, 0x56; mov eax, dword ptr [esp + 0x40]; call eax; 
0x00161387: in al, dx; or bh, bh; je 0x1613b0; sub al, 0x53; mov eax, dword ptr [esp + 0x18]; call eax; 
0x0006cafb: in al, dx; or bh, bh; mov ch, 0x74; idiv edi; dec dword ptr [ebx - 0x89763]; call dword ptr [edx - 0x77]; 
0x00066d0c: in al, dx; or bh, bh; mov ch, 0x88; idiv edi; call dword ptr [edx - 0x77]; 
0x000e172e: in al, dx; or byte ptr [eax + 0x57], dl; call esi; 
0x0011e758: in al, dx; or byte ptr [eax - 0x73], dl; and dword ptr [eax], 0xffffffba; stc; call dword ptr [eax - 0x18]; 
0x0009a5d1: in al, dx; or byte ptr [eax - 1], dl; jae 0x9a5fb; call edx; 
0x000579f5: in al, dx; or byte ptr [eax - 1], dl; je 0x57a1f; adc al, ch; jmp ecx; 
0x00070dea: in al, dx; or byte ptr [ebp + 0x50082444], cl; push esi; call dword ptr [ebx + 0x48]; 
0x0007cb65: in al, dx; or byte ptr [ebp + 0x50182444], cl; push esi; call dword ptr [edi + 0x48]; 
0x0007c7fc: in al, dx; or byte ptr [ebp + 0x50282444], cl; push esi; call dword ptr [edi + 0x48]; 
0x00077792: in al, dx; or byte ptr [ebp + 0x50402444], cl; push dword ptr [esp + 0x18]; call dword ptr [edi + 0x48]; 
0x000d7159: in al, dx; or byte ptr [ebp + 0x511c244c], cl; mov dword ptr [esp + 0x18], ecx; push ebx; call eax; 
0x00105519: in al, dx; or byte ptr [ebp + 0x52082454], cl; push eax; call dword ptr [ecx + 0x20]; 
0x000d72d3: in al, dx; or byte ptr [ebp + 0x520c2454], cl; push ebx; call eax; 
0x000e0e79: in al, dx; or byte ptr [ebp + 0x52142454], cl; push eax; call dword ptr [ecx + 0x20]; 
0x001624f6: in al, dx; or byte ptr [ebp + 0x52202454], cl; push eax; call edi; 
0x0007cea5: in al, dx; or byte ptr [ebp + 0x52282454], cl; push esi; call dword ptr [eax + 0x48]; 
0x0007faed: in al, dx; or byte ptr [ebp + 0x52500179], cl; mov dword ptr [esp + 0x40], edx; call dword ptr [esi + 0xc]; 
0x000df8ac: in al, dx; or byte ptr [ebp - 0x14c76b], cl; call dword ptr [edx + 0x50]; 
0x000dfa81: in al, dx; or byte ptr [ebp - 0x14c77b], cl; call dword ptr [eax + 0x52]; 
0x000dfa0d: in al, dx; or byte ptr [ebp - 0x15277b], cl; call dword ptr [eax - 1]; 
0x000e15aa: in al, dx; or byte ptr [ebp - 0x1837b], cl; call dword ptr [eax + 0x56]; 
0x000e17bc: in al, dx; or byte ptr [ebp - 0x1837b], cl; call dword ptr [eax - 0x75]; 
0x00105c3a: in al, dx; or byte ptr [ebp - 0x18f7b], cl; call dword ptr [eax + 0x56]; 
0x00105e4c: in al, dx; or byte ptr [ebp - 0x18f7b], cl; call dword ptr [eax - 0x75]; 
0x00093011: in al, dx; or byte ptr [ebp - 0x1971df79], cl; call dword ptr [eax - 0x73]; 
0x0007b7d5: in al, dx; or byte ptr [ebp - 0x1aeaef7d], cl; dec dword ptr [ecx - 0x72afebaa]; xor dword ptr [eax + 0x14], 0xffffffe5; call dword ptr [eax - 0x73]; 
0x0002e911: in al, dx; or byte ptr [ebp - 0x1af7b], cl; call dword ptr [eax - 1]; 
0x000c68e4: in al, dx; or byte ptr [ebp - 0x35f48], cl; call dword ptr [edi + 0x53]; 
0x000c6473: in al, dx; or byte ptr [ebp - 0x35ff7b], cl; dec dword ptr [ebp - 0x360363]; dec dword ptr [ebx - 0x363773]; call dword ptr [eax - 0x75]; 
0x000c7638: in al, dx; or byte ptr [ebp - 0x35ff7b], cl; dec dword ptr [ebx - 0x36476b]; push dword ptr [ecx]; call dword ptr [eax - 0x73]; 
0x0005057e: in al, dx; or byte ptr [ebp - 0x361773], cl; dec dword ptr [ebp - 0x35f363]; call dword ptr [edx - 0x77]; 
0x0016cf3c: in al, dx; or byte ptr [ebp - 0x64c1b45], cl; call dword ptr [edi + 0x56]; 
0x00124081: in al, dx; or byte ptr [ebp - 0x65cf779], cl; call dword ptr [eax + 0x55]; 
0x0012409c: in al, dx; or byte ptr [ebp - 0x65d0f79], cl; call dword ptr [eax + 0x55]; 
0x001240ba: in al, dx; or byte ptr [ebp - 0x65d2779], cl; call dword ptr [eax + 0x55]; 
0x000fd1cd: in al, dx; or byte ptr [ebp - 0x67343], cl; call dword ptr [edi - 1]; 
0x000fec39: in al, dx; or byte ptr [ebp - 0x6737b], cl; call dword ptr [eax - 0x73]; 
0x000302bf: in al, dx; or byte ptr [ebp - 0x68cab7b], cl; dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x0002c8ae: in al, dx; or byte ptr [ebp - 0x68d1b79], cl; call dword ptr [eax + 0x56]; 
0x0016c1a6: in al, dx; or byte ptr [ebp - 0x699ea55], cl; call dword ptr [ebp + 0x56]; 
0x0016d5fb: in al, dx; or byte ptr [ebp - 0x699ea7d], cl; call dword ptr [ebp + 0x50]; 
0x0016c7d8: in al, dx; or byte ptr [ebp - 0x699f845], cl; call dword ptr [edi + 0x55]; 
0x0016c18b: in al, dx; or byte ptr [ebp - 0x699f845], cl; call dword ptr [edi + 0x56]; 
0x0016d066: in al, dx; or byte ptr [ebp - 0x69a076a], cl; call dword ptr [edx - 0x77]; 
0x0016c1c1: in al, dx; or byte ptr [ebp - 0x69a076d], cl; call dword ptr [edx - 0x77]; 
0x0016c812: in al, dx; or byte ptr [ebp - 0x69a0775], cl; call dword ptr [ecx - 0x77]; 
0x0016c835: in al, dx; or byte ptr [ebp - 0x69a1645], cl; call dword ptr [edi + 0x55]; 
0x0016c1e4: in al, dx; or byte ptr [ebp - 0x69a1645], cl; call dword ptr [edi + 0x56]; 
0x0016d085: in al, dx; or byte ptr [ebp - 0x69a164a], cl; call dword ptr [esi + 0x53]; 
0x0015cba2: in al, dx; or byte ptr [ebp - 0x69d3d7d], cl; call dword ptr [eax - 1]; 
0x00155327: in al, dx; or byte ptr [ebp - 0x69e3180], cl; call dword ptr [eax + 0x56]; 
0x00150e60: in al, dx; or byte ptr [ebp - 0x69e5a7d], cl; call dword ptr [eax - 1]; 
0x0013c49f: in al, dx; or byte ptr [ebp - 0x6a36d6d], cl; call dword ptr [edx + 0x50]; 
0x0013bfb1: in al, dx; or byte ptr [ebp - 0x6a3a969], cl; call dword ptr [edx + 0x50]; 
0x0013c321: in al, dx; or byte ptr [ebp - 0x6a3a96d], cl; call dword ptr [edx + 0x50]; 
0x0013b7b3: in al, dx; or byte ptr [ebp - 0x6a8876d], cl; dec dword ptr [ecx - 0x48b7b]; call dword ptr [edi + 0x52]; 
0x00120b1a: in al, dx; or byte ptr [ebp - 0x6ab107d], cl; call dword ptr [eax + 0x56]; 
0x0011f6d7: in al, dx; or byte ptr [ebp - 0x6ad557d], cl; call dword ptr [eax + 0x57]; 
0x0011f97a: in al, dx; or byte ptr [ebp - 0x6ade67d], cl; call dword ptr [eax + 0x57]; 
0x0011f95f: in al, dx; or byte ptr [ebp - 0x6ae097d], cl; call dword ptr [eax + 0x57]; 
0x0011f944: in al, dx; or byte ptr [ebp - 0x6ae2d7d], cl; call dword ptr [eax + 0x57]; 
0x0011f929: in al, dx; or byte ptr [ebp - 0x6ae667d], cl; call dword ptr [eax + 0x57]; 
0x0011f90e: in al, dx; or byte ptr [ebp - 0x6ae8d7d], cl; call dword ptr [eax + 0x57]; 
0x0011f8f3: in al, dx; or byte ptr [ebp - 0x6aeb37d], cl; call dword ptr [eax + 0x57]; 
0x0011f8d8: in al, dx; or byte ptr [ebp - 0x6aee97d], cl; call dword ptr [eax + 0x57]; 
0x0011f8bd: in al, dx; or byte ptr [ebp - 0x6af1f7d], cl; call dword ptr [eax + 0x57]; 
0x0011f8a2: in al, dx; or byte ptr [ebp - 0x6af6f7d], cl; call dword ptr [eax + 0x57]; 
0x0011f887: in al, dx; or byte ptr [ebp - 0x6afb77d], cl; call dword ptr [eax + 0x57]; 
0x0011f86c: in al, dx; or byte ptr [ebp - 0x6afde7d], cl; call dword ptr [eax + 0x57]; 
0x0011f851: in al, dx; or byte ptr [ebp - 0x6b0107d], cl; call dword ptr [eax + 0x57]; 
0x0011f836: in al, dx; or byte ptr [ebp - 0x6b0447d], cl; call dword ptr [eax + 0x57]; 
0x0011f81b: in al, dx; or byte ptr [ebp - 0x6b0797d], cl; call dword ptr [eax + 0x57]; 
0x0011f800: in al, dx; or byte ptr [ebp - 0x6b0ab7d], cl; call dword ptr [eax + 0x57]; 
0x0011f7e5: in al, dx; or byte ptr [ebp - 0x6b0f77d], cl; call dword ptr [eax + 0x57]; 
0x0011f7ca: in al, dx; or byte ptr [ebp - 0x6b13b7d], cl; call dword ptr [eax + 0x57]; 
0x0011f7af: in al, dx; or byte ptr [ebp - 0x6b16d7d], cl; call dword ptr [eax + 0x57]; 
0x0011f794: in al, dx; or byte ptr [ebp - 0x6b1a37d], cl; call dword ptr [eax + 0x57]; 
0x0011f6bc: in al, dx; or byte ptr [ebp - 0x6b1e17d], cl; call dword ptr [eax + 0x57]; 
0x0011f779: in al, dx; or byte ptr [ebp - 0x6b1e47d], cl; call dword ptr [eax + 0x57]; 
0x0011f75e: in al, dx; or byte ptr [ebp - 0x6b2197d], cl; call dword ptr [eax + 0x57]; 
0x0011f743: in al, dx; or byte ptr [ebp - 0x6b2607d], cl; call dword ptr [eax + 0x57]; 
0x0011f728: in al, dx; or byte ptr [ebp - 0x6b2997d], cl; call dword ptr [eax + 0x57]; 
0x0011f70d: in al, dx; or byte ptr [ebp - 0x6b2ed7d], cl; call dword ptr [eax + 0x57]; 
0x0011f6f2: in al, dx; or byte ptr [ebp - 0x6b3577d], cl; call dword ptr [eax + 0x57]; 
0x001197c0: in al, dx; or byte ptr [ebp - 0x6b3e06a], cl; call dword ptr [edx - 0x77]; 
0x0011f6a1: in al, dx; or byte ptr [ebp - 0x6b3e37d], cl; call dword ptr [eax + 0x57]; 
0x0011f686: in al, dx; or byte ptr [ebp - 0x6b42d7d], cl; call dword ptr [eax + 0x57]; 
0x001197df: in al, dx; or byte ptr [ebp - 0x6b5156a], cl; call dword ptr [edx - 0x77]; 
0x001197a1: in al, dx; or byte ptr [ebp - 0x6b51b6a], cl; call dword ptr [edx - 0x77]; 
0x000df940: in al, dx; or byte ptr [ebp - 0x6b6b768], cl; dec dword ptr [ebp - 0x6b91c80]; call dword ptr [ebx + 0x50]; 
0x00119889: in al, dx; or byte ptr [ebp - 0x6b6b77d], cl; call dword ptr [eax - 0x73]; 
0x000eb724: in al, dx; or byte ptr [ebp - 0x6b7907d], cl; call dword ptr [eax + 0x55]; 
0x000eb8f9: in al, dx; or byte ptr [ebp - 0x6b7977d], cl; call dword ptr [eax + 0x55]; 
0x000eb86b: in al, dx; or byte ptr [ebp - 0x6b79d7d], cl; call dword ptr [eax + 0x55]; 
0x000eb79e: in al, dx; or byte ptr [ebp - 0x6b7a37d], cl; call dword ptr [eax + 0x55]; 
0x000eb427: in al, dx; or byte ptr [ebp - 0x6b7a97d], cl; call dword ptr [eax + 0x55]; 
0x000eb537: in al, dx; or byte ptr [ebp - 0x6b7b57d], cl; call dword ptr [eax + 0x55]; 
0x000eb3b2: in al, dx; or byte ptr [ebp - 0x6b7bb7d], cl; call dword ptr [eax + 0x55]; 
0x000eb6cb: in al, dx; or byte ptr [ebp - 0x6b7c17d], cl; call dword ptr [eax + 0x55]; 
0x000df9f6: in al, dx; or byte ptr [ebp - 0x6b8fb80], cl; call dword ptr [eax + 0x53]; 
0x000dfa53: in al, dx; or byte ptr [ebp - 0x6b8fb80], cl; call dword ptr [eax - 1]; 
0x000cd47a: in al, dx; or byte ptr [ebp - 0x6bac37d], cl; call dword ptr [eax + 0x56]; 
0x000ccfd5: in al, dx; or byte ptr [ebp - 0x6baf47d], cl; call dword ptr [eax + 0x56]; 
0x0009a1aa: in al, dx; or byte ptr [ebp - 0x6bc737a], cl; call dword ptr [ebx + 0x50]; 
0x001500e0: in al, dx; or byte ptr [ebp - 0x6bca97f], cl; call dword ptr [eax + 0x52]; 
0x000fc5b7: in al, dx; or byte ptr [ebp - 0x6bf7f79], cl; call dword ptr [eax + 0x53]; 
0x000eb575: in al, dx; or byte ptr [ebp - 0x6c15b7d], cl; call dword ptr [eax + 0x55]; 
0x0007e238: in al, dx; or byte ptr [ebp - 0x6c19a7b], cl; call dword ptr [eax - 0x75]; 
0x00058569: in al, dx; or byte ptr [ebp - 0x6ce8061], cl; call dword ptr [ecx + 0x53]; 
0x00057faf: in al, dx; or byte ptr [ebp - 0x6ce847a], cl; call dword ptr [eax + 0x53]; 
0x00034d97: in al, dx; or byte ptr [ebp - 0x6d05d7b], cl; call dword ptr [eax + 0x53]; 
0x0011b5f2: in al, dx; or byte ptr [ebp - 0x6d0c37a], cl; call dword ptr [eax - 1]; 
0x0011e702: in al, dx; or byte ptr [ebp - 0x6d0c37d], cl; call dword ptr [eax + 0x6a]; 
0x001489a8: in al, dx; or byte ptr [ebp - 0x6d0c579], cl; call dword ptr [eax + 0x56]; 
0x0002c196: in al, dx; or byte ptr [ebp - 0x6d3877d], cl; call dword ptr [eax - 1]; 
0x0002c178: in al, dx; or byte ptr [ebp - 0x6d38d6d], cl; call dword ptr [edx + 0x50]; 
0x00148312: in al, dx; or byte ptr [ebp - 0x6d5a479], cl; call dword ptr [eax - 0x73]; 
0x001391e9: in al, dx; or byte ptr [ebp - 0x6d5a47b], cl; call dword ptr [eax + 0x53]; 
0x000cd504: in al, dx; or byte ptr [ebp - 0x6d5a47d], cl; call dword ptr [eax + 0x56]; 
0x00088181: in al, dx; or byte ptr [ebp - 0x6d5a47d], cl; call dword ptr [eax - 0x73]; 
0x000cf07e: in al, dx; or byte ptr [ebp - 0x6d5a47f], cl; call dword ptr [eax + 0x53]; 
0x00158a47: in al, dx; or byte ptr [ebp - 0x74bfdb84], cl; dec eax; and byte ptr [edi + 0x50], dl; call dword ptr [ecx + 8]; 
0x000cf031: in al, dx; or byte ptr [ebp - 0x877b], cl; call dword ptr [eax + 0x53]; 
0x001a075a: in al, dx; or byte ptr [ebp - 0x89a2f6d], cl; call dword ptr [edx + 0x50]; 
0x00130a70: in al, dx; or byte ptr [ebp - 0x8b43], cl; call dword ptr [edi + 0x6a]; 
0x0015feb1: in al, dx; or byte ptr [ebp - 0x8b63], cl; call dword ptr [esi + 0x53]; 
0x0015ff11: in al, dx; or byte ptr [ebp - 0x8b7b], cl; call dword ptr [eax + 0x56]; 
0x0011b930: in al, dx; or byte ptr [ebp - 0x8f7b], cl; call dword ptr [eax - 0x73]; 
0x00160078: in al, dx; or byte ptr [ebp - 0x9b7b], cl; call dword ptr [eax + 0x6a]; 
0x0016a709: in al, dx; or byte ptr [ebp - 0xa37b], cl; call dword ptr [eax + 0x6a]; 
0x0016aeec: in al, dx; or byte ptr [ebp - 0xa77b], cl; call dword ptr [eax - 1]; 
0x000cf2b9: in al, dx; or byte ptr [ebp - 0xb363], cl; call dword ptr [ebx + 0x6a]; 
0x0015878a: in al, dx; or byte ptr [ebp - 0xc48df79], cl; call dword ptr [eax - 0x73]; 
0x00163031: in al, dx; or byte ptr [ebp - 0xc70ef7d], cl; call dword ptr [eax - 0x73]; 
0x00160dd9: in al, dx; or byte ptr [ebp - 0xc950f7d], cl; call dword ptr [eax - 0x73]; 
0x0015e2eb: in al, dx; or byte ptr [ebp - 0xcc0af7d], cl; call dword ptr [eax - 0x73]; 
0x00084bd6: in al, dx; or byte ptr [ebx + 0x2010247c], al; je 0x84be8; add esp, 8; pop ebx; ret; 
0x0015db8e: in al, dx; or byte ptr [ebx + 0x20508b00], cl; push esi; push eax; call dword ptr [edx + 4]; 
0x0015a3da: in al, dx; or byte ptr [ebx + 0x206a0447], cl; push edi; call dword ptr [eax + 0x18]; 
0x0016ea99: in al, dx; or byte ptr [ebx + 0x3a083], cl; add byte ptr [ecx + 0x52], dl; call dword ptr [eax + 0x24]; 
0x0016eb39: in al, dx; or byte ptr [ebx + 0x3a083], cl; add byte ptr [ecx + 0x52], dl; call dword ptr [eax + 0x28]; 
0x000fd556: in al, dx; or byte ptr [ebx + 0x430888], cl; add byte ptr [ecx - 0x71b73], cl; dec dword ptr [ecx - 0x2f7f723f]; and ch, ch; call dword ptr [eax - 0x73]; 
0x0015f231: in al, dx; or byte ptr [ebx + 0x438b0cc6], al; add al, 0x56; push ebx; call dword ptr [eax + 0x24]; 
0x00162e2d: in al, dx; or byte ptr [ebx + 0x478b04c1], al; add al, 0x51; push edi; call dword ptr [eax + 8]; 
0x001588fd: in al, dx; or byte ptr [ebx + 0x50562050], cl; call dword ptr [edx + 4]; 
0x00158a67: in al, dx; or byte ptr [ebx + 0x50572048], cl; call dword ptr [ecx + 8]; 
0x0015f191: in al, dx; or byte ptr [ebx + 0x53560443], cl; call dword ptr [eax + 0x24]; 
0x00165e95: in al, dx; or byte ptr [ebx + 0x56530446], cl; call dword ptr [eax + 4]; 
0x0007634b: in al, dx; or byte ptr [ebx + 0x56], dl; call dword ptr [edi + 0x18]; 
0x00131329: in al, dx; or byte ptr [ebx + 0x56a1c40], cl; ror eax, 9; xor eax, dword ptr gs:[0x18]; push esi; call eax; 
0x0015b099: in al, dx; or byte ptr [ebx + 0x74ff0443], cl; and al, 0x1c; push ebx; call dword ptr [eax + 4]; 
0x0015b049: in al, dx; or byte ptr [ebx + 0x74ff0443], cl; and al, 0x1c; push ebx; call dword ptr [eax]; 
0x001639e1: in al, dx; or byte ptr [ebx + 0x74ff0843], cl; and al, 0x14; push ebx; call dword ptr [eax]; 
0x00163bd0: in al, dx; or byte ptr [ebx + 0x74ff0843], cl; and al, 0x1c; push ebx; call dword ptr [eax + 0xc]; 
0x001588e1: in al, dx; or byte ptr [ebx + 0x74ff1043], cl; and al, 0x14; push esi; call dword ptr [eax + 4]; 
0x0015f113: in al, dx; or byte ptr [ebx + 0x86a0443], cl; push ebx; call dword ptr [eax + 0x18]; 
0x0015a481: in al, dx; or byte ptr [ebx + 0x86a0447], cl; push edi; call dword ptr [eax + 0x18]; 
0x00158e81: in al, dx; or byte ptr [ebx + 0xa34083], cl; add byte ptr [ebp - 0x7cf48b40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x0015a456: in al, dx; or byte ptr [ebx - 0x1a7cfbb9], cl; cld; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x0015a4cb: in al, dx; or byte ptr [ebx - 0x1f7cfba9], cl; cld; push eax; push edi; call dword ptr [edx + 0x18]; 
0x00063a4b: in al, dx; or byte ptr [ebx - 0x4f363], cl; call dword ptr [edx + 0x50]; 
0x00062635: in al, dx; or byte ptr [ebx - 0x4f363], cl; call dword ptr [esi + 0x50]; 
0x0006225b: in al, dx; or byte ptr [ebx - 0x4f363], cl; dec dword ptr [ecx - 0x4eb6b]; call dword ptr [ecx + 0x50]; 
0x000615bc: in al, dx; or byte ptr [ebx - 0x4f77b], cl; call dword ptr [edi - 1]; 
0x00061383: in al, dx; or byte ptr [ebx - 0x50b4b], cl; call dword ptr [edi - 1]; 
0x0006426a: in al, dx; or byte ptr [ebx - 0x52373], cl; jmp ptr [ecx]; ret; 
0x0005bc39: in al, dx; or byte ptr [ebx - 0x59b63], cl; call dword ptr [ecx + 0x50]; 
0x0005b62a: in al, dx; or byte ptr [ebx - 0x59b63], cl; call dword ptr [edx + 0x50]; 
0x0005b897: in al, dx; or byte ptr [ebx - 0x59b63], cl; dec dword ptr [ecx - 0x5ab73]; call dword ptr [edx + 0x50]; 
0x00160862: in al, dx; or byte ptr [ebx - 0x6b72afbd], cl; and al, 0xac; add byte ptr [eax], al; add byte ptr [edx + 0x56], dl; call dword ptr [eax + 4]; 
0x00153fec: in al, dx; or byte ptr [ebx - 0x72d7dbbc], cl; or dh, 0x61; stc; call dword ptr [eax - 1]; 
0x0013a03c: in al, dx; or byte ptr [ebx - 0x72e3dbbc], cl; cmp byte ptr [edx + 0x5b], 0xf9; call dword ptr [eax + 0x6a]; 
0x00179e16: in al, dx; or byte ptr [ebx - 0x72e7dbbc], cl; cmp byte ptr [ebx + 0x4a], 0xf9; call dword ptr [eax + 0x53]; 
0x000fc59c: in al, dx; or byte ptr [ebx - 0x72ebdb84], cl; xchg dword ptr [ebx], eax; dec ecx; stc; call dword ptr [eax + 0x56]; 
0x000fc7dc: in al, dx; or byte ptr [ebx - 0x72ebdbbc], cl; adc byte ptr [edx], 0x49; stc; call dword ptr [eax + 0x56]; 
0x000fca91: in al, dx; or byte ptr [ebx - 0x72ebdbbc], cl; cmp ch, 0x48; stc; call dword ptr [eax + 0x56]; 
0x000fc925: in al, dx; or byte ptr [ebx - 0x72ebdbbc], cl; or byte ptr [edx], 0x49; stc; call dword ptr [eax + 0x56]; 
0x000f66f5: in al, dx; or byte ptr [ebx - 0x72ebdbbc], cl; xor byte ptr [edi + 0x48], 0xf9; call dword ptr [eax - 1]; 
0x001531ff: in al, dx; or byte ptr [ebx - 0x72efdbbc], cl; or dh, 0x61; stc; call dword ptr [eax + 0x51]; 
0x0015386f: in al, dx; or byte ptr [ebx - 0x72efdbbc], cl; or dh, 0x61; stc; call dword ptr [eax + 0x57]; 
0x00163c19: in al, dx; or byte ptr [ebx - 0x73], dl; push esp; and al, 0x38; push edx; call dword ptr [eax + 0xc]; 
0x000dfb97: in al, dx; or byte ptr [ebx - 0x73], dl; xor al, 0x46; stc; call dword ptr [eax - 0x18]; 
0x000fa6ed: in al, dx; or byte ptr [ebx - 0x7f723383], cl; cmp al, 0x2f; stc; call dword ptr [eax - 1]; 
0x0012f6e5: in al, dx; or byte ptr [ebx - 0x8f73], cl; dec dword ptr [ebx - 0x936b]; call dword ptr [edi + 0x50]; 
0x000814f6: in al, dx; or byte ptr [ebx - 0xe7dbbc], cl; je 0x81523; sbb al, 0x85; ror byte ptr [edi], 0x48; ret 0xff50; 
0x001302dd: in al, dx; or byte ptr [ebx - 1], dl; jae 0x130313; call eax; 
0x000cb178: in al, dx; or byte ptr [ecx + 0x536c247c], cl; push ebp; mov eax, dword ptr [esp + 0x34]; call eax; 
0x000ed2bd: in al, dx; or byte ptr [ecx + 0x6a016ac6], cl; xor byte ptr [ebx - 0x17dfdba4], cl; ret 0xf32e; 
0x001595f9: in al, dx; or byte ptr [ecx + 0x873ff03], cl; push esi; call dword ptr [ebx + 0xc]; 
0x0002e2ce: in al, dx; or byte ptr [ecx - 0x1bb6b], cl; call dword ptr [esi + 0x51]; 
0x00033652: in al, dx; or byte ptr [ecx - 0x1d76b], cl; call dword ptr [eax - 1]; 
0x000da052: in al, dx; or byte ptr [ecx - 0x567a7239], cl; inc ebp; stc; call dword ptr [eax + 0x53]; 
0x0007bc8d: in al, dx; or byte ptr [ecx - 0x7c72f7bb], cl; rcr byte ptr [ecx], 0xe5; call dword ptr [eax - 0x73]; 
0x00030cbb: in al, dx; or byte ptr [ecx - 0x7f724fab], cl; cmp ch, byte ptr [edi]; stc; call dword ptr [eax + 0x53]; 
0x0012f824: in al, dx; or byte ptr [ecx - 0x836b], cl; call dword ptr [edx + 0x56]; 
0x0012ec49: in al, dx; or byte ptr [ecx - 0x976b], cl; call dword ptr [edx + 0x53]; 
0x0002f2a1: in al, dx; or byte ptr [ecx - 0xe36b], cl; call dword ptr [ecx + 0x50]; 
0x0009a553: in al, dx; or byte ptr [ecx - 1], dl; jae 0x9a57d; call eax; 
0x0009e5dd: in al, dx; or byte ptr [ecx], al; ret 0x5489; 
0x000357db: in al, dx; or byte ptr [ecx], al; ret 0x8952; 
0x000622d7: in al, dx; or byte ptr [ecx], al; ror dword ptr [ebp + 0x8d04], 0; add byte ptr [ecx - 0x51773], cl; call dword ptr [eax + 0x53]; 
0x0007ca49: in al, dx; or byte ptr [ecx], ch; ret 0x352; 
0x00147ecb: in al, dx; or byte ptr [ecx], ch; ret; 
0x00124386: in al, dx; or byte ptr [ecx], dh; call dword ptr [edi + 0x56]; 
0x000d729a: in al, dx; or byte ptr [edi + 0x53], dl; call eax; 
0x00119fc1: in al, dx; or byte ptr [edi], cl; mov esi, 0xe85357f8; ret; 
0x0007e96f: in al, dx; or byte ptr [edx - 1], ch; push dword ptr [eax]; mov eax, dword ptr [ebp - 0x2c]; call dword ptr [eax + 0xc]; 
0x00077504: in al, dx; or byte ptr [edx - 1], ch; push dword ptr [edi]; call dword ptr [eax + 0xc]; 
0x0015aabe: in al, dx; or byte ptr [edx], ch; push ebx; call dword ptr [eax + 0x14]; 
0x0003a836: in al, dx; or byte ptr [edx], ch; push edx; call edi; 
0x0007a29b: in al, dx; or byte ptr [edx], ch; push esi; call dword ptr [ebp + 8]; 
0x00070fc6: in al, dx; or byte ptr [edx], ch; push esi; call dword ptr [ebx + 8]; 
0x0009a464: in al, dx; or byte ptr [esi - 1], dl; jae 0x9a48e; call eax; 
0x00036121: in al, dx; or ch, bl; sbb al, 0x24; fld qword ptr [esp]; add esp, 8; ret; 
0x001a150e: in al, dx; out 0xff, eax; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x001a14d3: in al, dx; out 0xff, eax; add esp, 0x18; pop ebx; ret; 
0x001a0f83: in al, dx; pop ebx; pop esi; pop edi; ret; 
0x0015c813: in al, dx; pop ebx; ret; 
0x0010bd23: in al, dx; pop esp; add dword ptr [eax], eax; add byte ptr [ebx - 0x13350], cl; jmp dword ptr [ebp - 0x5f]; 
0x00037a93: in al, dx; pushfd; add byte ptr [eax], al; add byte ptr [ebx - 0x13348], cl; jmp dword ptr [ebp - 0x75]; 
0x00129380: in al, dx; ret 0xfff8; 
0x0016a554: in al, dx; rol byte ptr [eax], 0; add byte ptr [ecx - 0xb77b], cl; dec dword ptr [ecx - 0xbb6b]; jmp dword ptr [ebp - 0x5f]; 
0x00179c90: in al, dx; sahf; stc; call dword ptr [eax - 0x73]; 
0x0007bf71: in al, dx; sbb byte ptr [eax - 0x18], dl; ja 0x7bfae; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00094842: in al, dx; sbb byte ptr [ebp - 0x66bf370], cl; call dword ptr [edx - 0x73]; 
0x0008fc91: in al, dx; sbb byte ptr [ebp - 0x67d1380], cl; call dword ptr [eax - 0x18]; 
0x00133a01: in al, dx; sbb byte ptr [ebp - 0x6a70880], cl; call dword ptr [eax - 0x18]; 
0x00132281: in al, dx; sbb byte ptr [ebp - 0x6a74a80], cl; call dword ptr [eax - 0x18]; 
0x0007cbb9: in al, dx; sbb byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0017a5cf: in al, dx; sbb byte ptr [ebx - 0x11380], cl; jmp dword ptr [ebp + 3]; 
0x0004aa17: in al, dx; sbb byte ptr [ecx + 0x3001bbe1], cl; add byte ptr [eax], al; mov eax, 0x180; call dword ptr gs:[0x10]; 
0x001567f5: in al, dx; sbb byte ptr [edx + 0xa], ch; call 0x152e60; add esp, 0x1c; ret; 
0x00156475: in al, dx; sbb byte ptr [edx + 1], ch; call 0x152e60; add esp, 0x1c; ret; 
0x00155bb5: in al, dx; sbb byte ptr [edx + 2], ch; call 0x152e60; add esp, 0x1c; ret; 
0x00154bb5: in al, dx; sbb byte ptr [edx + 3], ch; call 0x152e60; add esp, 0x1c; ret; 
0x001557f5: in al, dx; sbb byte ptr [edx + 4], ch; call 0x152e60; add esp, 0x1c; ret; 
0x001535b5: in al, dx; sbb byte ptr [edx + 5], ch; call 0x152e60; add esp, 0x1c; ret; 
0x00155f55: in al, dx; sbb byte ptr [edx + 6], ch; call 0x152e60; add esp, 0x1c; ret; 
0x00157e85: in al, dx; sbb byte ptr [edx + 7], ch; call 0x152e60; add esp, 0x1c; ret; 
0x00153c55: in al, dx; sbb byte ptr [edx + 8], ch; call 0x152e60; add esp, 0x1c; ret; 
0x001578d5: in al, dx; sbb byte ptr [edx + 9], ch; call 0x152e60; add esp, 0x1c; ret; 
0x001575f5: in al, dx; sbb byte ptr [edx], ch; call 0x152e60; add esp, 0x1c; ret; 
0x00038295: in al, dx; sbb byte ptr [edx], ch; call 0x37b20; add esp, 0x1c; ret; 
0x000227a0: in al, dx; sldt word ptr [eax]; ret; 
0x0002db1d: in al, dx; sub al, 0xf9; call dword ptr [eax - 0x18]; 
0x00094215: in al, dx; sub byte ptr [ebx - 0x72c3db94], cl; pop dword ptr [eax - 0x23]; clc; jmp dword ptr [ebp - 1]; 
0x0011f3d7: in eax, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001978c7: in eax, 0; add byte ptr [eax], al; lea eax, [eax + 0xb]; pop edi; ret; 
0x00025442: in eax, 0x10; add byte ptr [ebx - 0x72b3db84], cl; xchg eax, esp; push -7; call dword ptr [eax + 0x68]; 
0x000caf67: in eax, 0x22; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000ed557: in eax, 0x2b; inc dword ptr [ebx - 0x3fceef3c]; add esp, 8; pop ebx; ret; 
0x00114967: in eax, 0x3e; cld; jmp dword ptr [ebp - 0x5f]; 
0x001028c8: in eax, 0x49; stc; call dword ptr [eax - 0x18]; 
0x000a1dfa: in eax, 0x5b; mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x0016346a: in eax, 0x5b; pop esi; pop edi; ret; 
0x0016945c: in eax, 0x61; stc; call dword ptr [eax + 0x6a]; 
0x001a0e72: in eax, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00163f02: in eax, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x00094f99: in eax, 0x83; les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000a5f16: in eax, 0x83; ret; 
0x000b5d5a: in eax, 0x89; fadd dword ptr [ebx + 0x5e5b04c4]; ret; 
0x000b5b0a: in eax, 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x00170572: in eax, 0x89; ret; 
0x00169407: in eax, 0xa5; cld; jmp dword ptr [esi - 0x70]; 
0x0010da67: in eax, 0xad; cld; jmp dword ptr [ebp - 0x5f]; 
0x00137fd9: in eax, 0xf0; call dword ptr [eax - 0x18]; 
0x001586e6: in eax, 0xf2; call dword ptr [eax - 0x73]; 
0x000c9e93: in eax, 0xf; je 0xc9eb0; add eax, 2; ret; 
0x0015a45c: in eax, 0xfc; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x000413f5: in eax, 0xfe; dec dword ptr [ebx - 0x72d3db84]; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x000ed1e6: in eax, 0xff; add esi, dword ptr [ecx + esi - 0xa]; ret 0x7404; 
0x00040cf6: in eax, 0xff; call dword ptr [eax + 0x6a]; 
0x0006272b: in eax, 0xff; dec dword ptr [ebx - 0x4f37b]; jmp dword ptr [ebp - 0x75]; 
0x0005d779: in eax, 0xff; jmp dword ptr [ebp - 0x5f]; 
0x00135435: in eax, 0xff; jmp dword ptr [esi - 0x70]; 
0x000213c6: in eax, 0xff; xor edx, dword ptr gs:[0x18]; rol edx, 9; mov dword ptr [eax + 0x1978], edx; ret; 
0x000b601d: in eax, 2; lea edx, [edx - 0x924b0]; cmovne eax, edx; ret; 
0x0009bf6d: in eax, 2; lea edx, [edx - 0x95fe0]; cmovne eax, edx; ret; 
0x0009c2dd: in eax, 2; lea edx, [edx - 0x9af10]; cmovne eax, edx; ret; 
0x0009c25d: in eax, 2; lea edx, [edx - 0x9af40]; cmovne eax, edx; ret; 
0x0009c29d: in eax, 2; lea edx, [edx - 0x9d420]; cmovne eax, edx; ret; 
0x0009c21d: in eax, 2; lea edx, [edx - 0x9d450]; cmovne eax, edx; ret; 
0x0009b46d: in eax, 2; lea edx, [edx - 0x9ee40]; cmovne eax, edx; ret; 
0x0009afed: in eax, 2; lea edx, [edx - 0xa02b0]; cmovne eax, edx; ret; 
0x0012386c: in eax, 4; add byte ptr [ecx + 0x106791c5], al; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x001933e6: in eax, dx; adc byte ptr [edi], cl; xchg byte ptr [ebx - 0x7cfffffe], al; ret 0x8310; 
0x00191f3f: in eax, dx; adc byte ptr [edi], cl; xchg byte ptr [ebx - 0x7cffffff], bl; ret 0x8310; 
0x00029d01: in eax, dx; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax + esi*2 - 7], dl; call dword ptr [eax - 0x18]; 
0x00026f30: in eax, dx; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + esi*2 - 7], edx; call dword ptr [eax - 0x18]; 
0x000ef884: in eax, dx; add dword ptr [ebx - 0x7603e7bc], ecx; ret; 
0x000b40c7: in eax, dx; add eax, ecx; pop edi; ret; 
0x0015e43f: in eax, dx; and ebp, ebp; call dword ptr [eax - 0x73]; 
0x0002df4f: in eax, dx; and edi, edi; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00123722: in eax, dx; and esp, 0xfffffff0; sub esp, 0xc; push esi; call edx; 
0x000fc6c1: in eax, dx; call dword ptr [eax + 0x6a]; 
0x000fd56a: in eax, dx; call dword ptr [eax - 0x73]; 
0x000fd623: in eax, dx; call dword ptr [edx + 0x6a]; 
0x00071809: in eax, dx; cli; jmp dword ptr [esi - 0x70]; 
0x00154b1d: in eax, dx; dec dword ptr [ebp - 0x650d77b]; call dword ptr [eax - 0x73]; 
0x001197ff: in eax, dx; dec edx; stc; call dword ptr [eax + 0x50]; 
0x00140e77: in eax, dx; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0015fc39: in eax, dx; inc dword ptr [ebx - 0x72afef3c]; or dword ptr [eax], 0xffffffb1; stc; call dword ptr [eax - 0x73]; 
0x0014f4ea: in eax, dx; jmp dword ptr [ebp - 0x5f]; 
0x00152b51: in eax, dx; jmp dword ptr [esi - 0x70]; 
0x0009a524: in eax, dx; jne 0x9a479; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax - 0x148]; call dword ptr [eax]; 
0x000a1ce2: in eax, dx; mov eax, edx; pop ebx; pop esi; ret; 
0x000a1e42: in eax, dx; mov eax, edx; pop ebx; ret; 
0x0009fa73: in eax, dx; mov eax, esi; or byte ptr [ebx], dl; pop ebx; pop esi; ret; 
0x00131cc2: in eax, dx; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0017b372: in eax, dx; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017ad22: in eax, dx; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x000975e1: in eax, dx; or al, 0x39; ror byte ptr [ecx + 0xf6c244c], 1; inc edi; ret 0x5c89; 
0x0011f909: in eax, dx; or al, byte ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; jb 0x11f965; stc; call dword ptr [eax + 0x57]; 
0x0019203b: in eax, dx; or byte ptr [edi], cl; test byte ptr [edi - 0x7d000000], bl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x000e959a: in eax, dx; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x00172aff: in eax, dx; push cs; cld; jmp dword ptr [esi - 0x70]; 
0x000b66ff: in eax, dx; rol byte ptr [edi], cl; add byte ptr [ebp - 0x669777e], cl; call dword ptr [eax - 0x73]; 
0x0006d443: inc bh; inc edi; sub byte ptr [edi], al; add byte ptr [eax], al; add cl, ch; ret 0xffe5; 
0x00083142: inc byte ptr [eax + eax]; add byte ptr [eax], al; mov dword ptr gs:[0x7c], edx; ret; 
0x0008289a: inc byte ptr [eax + eax]; add byte ptr [eax], al; mov dword ptr gs:[0x80], eax; ret; 
0x000827d3: inc byte ptr [eax + eax]; add byte ptr [eax], al; ret; 
0x000828c3: inc byte ptr [eax + eax]; add byte ptr [ebx + 0x47401f8], al; ret; 
0x00083167: inc byte ptr [eax + eax]; add byte ptr [ebx + 0x87401f8], al; ret; 
0x00123a2b: inc byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00049a12: inc byte ptr [ebx - 0x6bf0021d]; ret; 
0x0011e123: inc byte ptr [ebx - 0x7401fba0]; inc ecx; add al, 0x89; ret 0xe083; 
0x0003b8ee: inc byte ptr [ecx]; add byte ptr [eax], al; add esp, 0x18; lea eax, [ebx + 6]; pop ebx; ret; 
0x0008ad4a: inc byte ptr [ecx]; ret; 
0x0006a99c: inc byte ptr [edx]; push esi; push ecx; push eax; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x00149578: inc cl; ljmp 0xc166:0xfe2c117; ret 0x6608; 
0x00118026: inc dword ptr [eax + 0x2c740038]; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x001180c6: inc dword ptr [eax + 0x2c740038]; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x000da7e6: inc dword ptr [eax + 0x2c740038]; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x000df73b: inc dword ptr [eax + 0x2f740038]; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x000df7eb: inc dword ptr [eax + 0x2f740038]; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x000df3d2: inc dword ptr [eax + 0x30740038]; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x000df472: inc dword ptr [eax + 0x30740038]; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x00118172: inc dword ptr [eax + 0x30740038]; mov edx, 0xffffffff; mov eax, 0xd0; mov ebx, edx; call dword ptr gs:[0x10]; 
0x00118252: inc dword ptr [eax + 0x30740038]; mov edx, 0xffffffff; mov eax, 0xd2; mov ebx, edx; call dword ptr gs:[0x10]; 
0x000a6a8e: inc dword ptr [eax + 0xf000a79]; test byte ptr [edi], al; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000a6a38: inc dword ptr [eax + 0xf000d79]; test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0009bf6b: inc dword ptr [eax - 0x6d72fd1b]; and byte ptr [eax + 0x450ffff6], ah; ret 0x66c3; 
0x0009c21b: inc dword ptr [eax - 0x6d72fd1b]; mov al, 0x2b; idiv bh; cmovne eax, edx; ret; 
0x000b601b: inc dword ptr [eax - 0x6d72fd1b]; push eax; fcomi st(6); dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0009c25b: inc dword ptr [eax - 0x6d72fd1b]; rcl byte ptr [eax - 0xa], 0xff; cmovne eax, edx; ret; 
0x0009b46b: inc dword ptr [eax - 0x6d72fd1b]; rcl byte ptr [ecx], 0xf6; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x00054746: inc dword ptr [eax - 0xcf43]; jmp dword ptr [edi + 0x75]; 
0x000543fb: inc dword ptr [eax - 0xcf43]; jmp dword ptr [edi - 0x75]; 
0x000fd0e8: inc dword ptr [eax]; add al, 0; add byte ptr [ecx], cl; ret 0x840f; 
0x000677b5: inc dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ebp + 0xb6], cl; add byte ptr [ecx + 0x6785c6d3], cl; idiv edi; jmp dword ptr [eax]; 
0x0005ce47: inc dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx - 0x59b7b], cl; jmp dword ptr [ebp - 0x75]; 
0x0005c2fd: inc dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx - 0x760e7638], cl; dec byte ptr [ecx - 0x5ab7b]; jmp dword ptr [esi - 0x70]; 
0x000506de: inc dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], dh; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000fef7d: inc dword ptr [eax]; add byte ptr [eax], al; add byte ptr [edi], cl; test byte ptr [edi - 0x16000003], cl; ret; 
0x000c5ece: inc dword ptr [eax]; add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0x8589; 
0x000e1d4b: inc dword ptr [eax]; add byte ptr [eax], al; add cl, ch; ret 3; 
0x0005ecee: inc dword ptr [eax]; add byte ptr [eax], al; add cl, ch; wait; loope 0x5ecf6; call dword ptr [eax - 0x75]; 
0x00123a97: inc dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001962cc: inc dword ptr [eax]; add byte ptr [eax], al; jne 0x196100; xor eax, eax; pop edi; ret; 
0x00035bcc: inc dword ptr [eax]; add byte ptr [ecx], ch; rol ecx, 1; call 0x10ed1cf6; or eax, ecx; ret; 
0x000dfc58: inc dword ptr [eax]; add byte ptr [edi], cl; inc esp; ret 0xc35b; 
0x0019082c: inc dword ptr [eax]; add byte ptr [edi], cl; test dword ptr [ecx - 0x7cfffff2], ebp; std; adc byte ptr [ebp - 0x79f00f93], cl; call dword ptr [eax]; 
0x0018c228: inc dword ptr [eax]; add byte ptr [edi], cl; test ebp, edi; add eax, 0xfd830000; adc byte ptr [ebp - 0x79f00f93], cl; ret; 
0x000943d7: inc dword ptr [eax]; add byte ptr [esi + 4], dh; ret; 
0x000eaf59: inc dword ptr [eax]; clc; jmp dword ptr [esi + 0xb]; 
0x000b47cf: inc dword ptr [eax]; je 0xb47d4; inc eax; pop edi; ret; 
0x000b4973: inc dword ptr [eax]; je 0xb4978; inc eax; pop edi; pop esi; ret; 
0x000a1b02: inc dword ptr [eax]; mov dword ptr [esi], edx; pop ebx; pop esi; ret; 
0x00133adb: inc dword ptr [eax]; or eax, edx; bswap eax; mov dword ptr [ecx], eax; mov eax, ecx; ret 4; 
0x00133ab3: inc dword ptr [eax]; ret; 
0x000c84da: inc dword ptr [ebp + 0x28e0fc0]; add al, 0; add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x000a61fc: inc dword ptr [ebp + 0x2b850fc0]; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0005f23c: inc dword ptr [ebp + 0x2d850fc0]; add al, byte ptr [eax]; add byte ptr [ebx - 0x59b7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000a61dc: inc dword ptr [ebp + 0x4b850fc0]; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0005bb72: inc dword ptr [ebp + 0x7d840fc0]; xor dword ptr [eax], eax; add byte ptr [ebx - 0x5db73], cl; call ecx; 
0x000a621c: inc dword ptr [ebp + 0xb850fc0]; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000ee1c4: inc dword ptr [ebp - 0x16688b40]; imul edi, edi, -1; jmp dword ptr [esi - 0x70]; 
0x00119e03: inc dword ptr [ebp - 0x17f88b40]; mov dword ptr [0x89fffffd], eax; ret 0x4c8b; 
0x00028027: inc dword ptr [ebp - 0x327af00a]; or dword ptr [eax], eax; add byte ptr [ebx - 0x76e3db8c], cl; ret 0xb60f; 
0x000517f8: inc dword ptr [ebp - 0x38ec8b40]; add byte ptr [edi], ch; jbe 0x5178d; ret 0x40c7; 
0x000573b1: inc dword ptr [ebp - 0x3c7af00a]; add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0x55; or al, 0xf6; ret 0xf40; 
0x00166225: inc dword ptr [ebp - 0x3f6af040]; add esp, 0x1c; movzx eax, al; ret; 
0x000f8316: inc dword ptr [ebp - 0x3f6bf040]; add esp, 0x2c; movzx eax, al; ret; 
0x000481a2: inc dword ptr [ebp - 0x3f6bf040]; add esp, 0xc; movzx eax, al; ret; 
0x0004ff77: inc dword ptr [ebp - 0x4e70f040]; out 0xff, eax; dec dword ptr [ebx - 0x365343]; dec dword ptr [ebp - 0x6894f79]; call dword ptr [eax - 0x73]; 
0x0006456a: inc dword ptr [ebp - 0x657af037]; aad 0xff; dec dword ptr [ebx - 0x4f37b]; jmp dword ptr [ebp - 0x75]; 
0x00050891: inc dword ptr [ebp - 0x6771f040]; add al, 0; add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x00062a32: inc dword ptr [ebp - 0x6f7af00a]; jecxz 0x62a39; dec dword ptr [ebx - 0x4f37b]; jmp dword ptr [ebp - 0x75]; 
0x0015b20a: inc dword ptr [ebp - 0x74228b40]; inc ebx; adc byte ptr [ebp + 0x53890450], cl; adc bl, ch; ret; 
0x0014f1a9: inc dword ptr [ebp - 0x747d8b40]; push ebp; mov word ptr [ebp - 0x6524b7e], cs; call dword ptr [eax - 0x73]; 
0x0005b350: inc dword ptr [ebp - 0x74818a37]; test dword ptr [edx + edi*8 - 1], esp; jmp dword ptr [ebp - 0x75]; 
0x0017056e: inc dword ptr [ebp - 0x761a8b40]; ret; 
0x0013e67d: inc dword ptr [ebp - 0x76a28740]; ret; 
0x0007b49b: inc dword ptr [ebp - 0x76cf8b40]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0002cca6: inc dword ptr [ebp - 0x76f58b2e]; inc esp; and al, 0xc; call edx; 
0x000c801d: inc dword ptr [ebp - 0x7ad18a40]; test byte ptr [edi], -0x7b; pushfd; add al, byte ptr [eax]; add byte ptr [ebx - 0x36477b], al; jmp eax; 
0x0005036d: inc dword ptr [ebp - 0x7ad18a40]; test byte ptr [edi], -0x7b; sti; add al, byte ptr [eax]; add byte ptr [ebx - 0x364f7b], al; jmp eax; 
0x00058ed7: inc dword ptr [ebp - 0x7cbb8b40]; in al, dx; add al, 0x6a; add eax, 0xcc858d50; jb 0x58ee0; call dword ptr [eax - 0x18]; 
0x00057ea6: inc dword ptr [ebp - 0x7cc38b40]; in al, dx; add al, 0x6a; add eax, 0xcc838d50; jb 0x57eaf; call dword ptr [eax - 0x18]; 
0x00150dfe: inc dword ptr [ebx + 0x1b810c4]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0011aec5: inc dword ptr [ebx + 0x1ba10c4]; add byte ptr [eax], al; add byte ptr [ebx - 0x2f76f73c], al; pop ebx; ret; 
0x0004e395: inc dword ptr [ebx + 0x440ffff8]; ret 0x8589; 
0x000c69c4: inc dword ptr [ebx + 0x440ffff8]; ret; 
0x000d89bc: inc dword ptr [ebx + 0x448b10c4]; and al, 0xc; add esp, 0x14; pop ebx; pop esi; ret; 
0x00087f8a: inc dword ptr [ebx + 0x448b10c4]; and al, 0xc; add esp, 0x18; pop ebx; ret; 
0x00163e2e: inc dword ptr [ebx + 0x448b10c4]; and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x163e43; add esp, 0x1c; ret; 
0x0015ac34: inc dword ptr [ebx + 0x478b0cc4]; or byte ptr [ebp - 1], dl; jbe 0x15ac4b; push edi; call dword ptr [eax + 8]; 
0x0012f5e2: inc dword ptr [ebx + 0x478b10c4]; sbb al, 0x89; ret 0x572b; 
0x000c8a59: inc dword ptr [ebx + 0x48d04ec]; mov ch, 4; add byte ptr [eax], al; add byte ptr [ebx - 0x364b63], cl; dec dword ptr [ecx - 0x361f73]; call dword ptr [eax + 0x6a]; 
0x00050f3a: inc dword ptr [ebx + 0x48d04ec]; mov ch, 4; add byte ptr [eax], al; add byte ptr [ebx - 0x365363], cl; dec dword ptr [ecx - 0x361f73]; call dword ptr [eax + 0x6a]; 
0x001406ed: inc dword ptr [ebx + 0x48d10c4]; pop ebx; pop esi; pop edi; ret; 
0x000b6110: inc dword ptr [ebx + 0x48d14c4]; cwde; pop ebx; pop esi; ret; 
0x001167d1: inc dword ptr [ebx + 0x508930ca]; or byte ptr [edx + 0x100], bh; mov word ptr [eax + 0x16], dx; ret; 
0x00053855: inc dword ptr [ebx + 0x535704ec]; push dword ptr [ebp - 0x88]; call eax; 
0x0013362a: inc dword ptr [ebx + 0x548b10c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x133645; add esp, 0x2c; ret; 
0x0013369a: inc dword ptr [ebx + 0x548b10c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x1336b5; add esp, 0x2c; ret; 
0x0013aadb: inc dword ptr [ebx + 0x548b10c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x13aaf0; add esp, 0x2c; ret; 
0x000864f3: inc dword ptr [ebx + 0x548b10c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x86508; add esp, 0x2c; ret; 
0x0008ae8f: inc dword ptr [ebx + 0x548b10c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x8aea4; add esp, 0x2c; ret; 
0x0008c1f3: inc dword ptr [ebx + 0x548b10c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x8c208; add esp, 0x2c; ret; 
0x0008c653: inc dword ptr [ebx + 0x548b10c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x8c668; add esp, 0x2c; ret; 
0x0008cb3f: inc dword ptr [ebx + 0x548b10c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x8cb54; add esp, 0x2c; ret; 
0x0008cf8f: inc dword ptr [ebx + 0x548b10c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x8cfa4; add esp, 0x2c; ret; 
0x001195e4: inc dword ptr [ebx + 0x548b10c4]; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1195f9; add esp, 0x1c; ret; 
0x001745be: inc dword ptr [ebx + 0x548b10c4]; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1745d3; add esp, 0x1c; ret; 
0x000cad83: inc dword ptr [ebx + 0x548b10c4]; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xcad98; add esp, 0x1c; ret; 
0x000d4827: inc dword ptr [ebx + 0x548b10c4]; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xd483c; add esp, 0x1c; ret; 
0x000d6eb7: inc dword ptr [ebx + 0x548b10c4]; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xd6ecc; add esp, 0x1c; ret; 
0x001624f4: inc dword ptr [ebx + 0x548d08ec]; and al, 0x20; push edx; push eax; call edi; 
0x000f008d: inc dword ptr [ebx + 0x5d3b01c3]; add al, 0x7c; ret 0xb48d; 
0x00173b99: inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x000a1f25: inc dword ptr [ebx + 0x5e5b08c4]; pop edi; pop ebp; ret; 
0x000ff784: inc dword ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x00146044: inc dword ptr [ebx + 0x5e5b10c4]; pop edi; pop ebp; ret; 
0x000790f1: inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0002c7b7: inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0016606d: inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; jmp eax; 
0x00078839: inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x00132786: inc dword ptr [ebx + 0x5e5b20c4]; pop edi; ret; 
0x000eb1c1: inc dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x00146117: inc dword ptr [ebx + 0x5e5b38c4]; pop edi; pop ebp; ret; 
0x000d7c04: inc dword ptr [ebx + 0x5e5b3cc4]; pop edi; pop ebp; ret; 
0x000d37d8: inc dword ptr [ebx + 0x5fb82dfb]; add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret; 
0x0011c0ee: inc dword ptr [ebx + 0x658d10c4]; clc; pop ebx; pop esi; pop ebp; ret; 
0x000df2b9: inc dword ptr [ebx + 0x66c31cc4]; nop; endbr32; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x000d6d68: inc dword ptr [ebx + 0x6a5004ec]; xor byte ptr [ecx - 0x17], dl; ret 0xffe5; 
0x000d47a9: inc dword ptr [ebx + 0x73e910c4]; idiv edi; call dword ptr [ecx + 0x50]; 
0x0008b60e: inc dword ptr [ebx + 0x7501046b]; ret 0x44c7; 
0x0011e7e0: inc dword ptr [ebx + 0x8b10c4]; test eax, eax; je 0x11e830; call eax; 
0x0011e922: inc dword ptr [ebx + 0x8b10c4]; test eax, eax; je 0x11e9c8; call eax; 
0x000f5155: inc dword ptr [ebx + 0xc8b10c4]; and al, 0x89; ret 0x448b; 
0x00049e0c: inc dword ptr [ebx + 0xf01243c]; xchg esp, eax; ret; 
0x0013b7a7: inc dword ptr [ebx + 0xf02113c]; test byte ptr [edi*8 - 0x137c0001], cl; or byte ptr [ebp - 0x6a8876d], cl; dec dword ptr [ecx - 0x48b7b]; call dword ptr [edi + 0x52]; 
0x00153ef0: inc dword ptr [ebx + 0xf0b023c]; xchg ebp, eax; ret 0xc483; 
0x00147983: inc dword ptr [ebx - 0x137cef3c]; or al, 0x8d; mov bl, 0xce; pop esi; stc; call dword ptr [esi - 0x18]; 
0x001479af: inc dword ptr [ebx - 0x137cef3c]; or al, 0x8d; mov bl, 0xdb; pop esi; stc; call dword ptr [esi - 0x18]; 
0x001479db: inc dword ptr [ebx - 0x137cef3c]; or al, 0x8d; mov bl, 0xea; pop esi; stc; call dword ptr [esi - 0x18]; 
0x0013b00f: inc dword ptr [ebx - 0x137cef3c]; or al, 0x8d; xchg byte ptr [edi], cl; pop esp; stc; call dword ptr [eax - 0x18]; 
0x0016d5f6: inc dword ptr [ebx - 0x137cef3c]; or byte ptr [ebp - 0x699ea7d], cl; call dword ptr [ebp + 0x50]; 
0x0015a47c: inc dword ptr [ebx - 0x137cef3c]; or byte ptr [ebx + 0x86a0447], cl; push edi; call dword ptr [eax + 0x18]; 
0x0007b8cf: inc dword ptr [ebx - 0x17a9f314]; dec eax; cli; dec dword ptr [ebx - 0x1337d]; jmp dword ptr [ebp - 0x75]; 
0x0003a3b4: inc dword ptr [ebx - 0x17a9f314]; ret 0x48d; 
0x001574da: inc dword ptr [ebx - 0x17aef314]; or al, 0x82; inc dword ptr [ebx - 0x77cef3c]; dec dword ptr [edi]; xchg esp, eax; ret 0xe1e9; 
0x000c2712: inc dword ptr [ebx - 0x19160031]; idiv bh; dec dword ptr [ebp - 0x6685770]; call dword ptr [edx - 0x73]; 
0x0009827d: inc dword ptr [ebx - 0x1b46f314]; adc al, byte ptr [eax]; add byte ptr [ebx - 0x72e7db8c], cl; xchg byte ptr [ebx + edx*4 - 0x69720007], al; lds eax, ptr [eax - 7]; call dword ptr [eax - 0x73]; 
0x0008b8cb: inc dword ptr [ebx - 0x1f7ce940]; test dword ptr [edi], 0xfffe2c84; inc dword ptr [ebx - 0x7872f314]; mov byte ptr [esi - 7], bh; call dword ptr [eax - 0x18]; 
0x0008c0e1: inc dword ptr [ebx - 0x1f7ce940]; test dword ptr [edi], 0xfffef284; inc dword ptr [ebx - 0x7872f314]; mov byte ptr [esi - 7], bh; call dword ptr [eax - 0x18]; 
0x000839ea: inc dword ptr [ebx - 0x1f7ce940]; test dword ptr [edi], 0xfffef584; inc dword ptr [ebx - 0x7872f314]; mov byte ptr [esi - 7], bh; call dword ptr [eax - 0x18]; 
0x0008ca0d: inc dword ptr [ebx - 0x1f7ce940]; test dword ptr [edi], 0xffff2584; inc dword ptr [ebx - 0x7872f314]; mov byte ptr [esi - 7], bh; call dword ptr [eax - 0x18]; 
0x0008c7fc: inc dword ptr [ebx - 0x1f7ce940]; test dword ptr [edi], 0xffff3184; inc dword ptr [ebx - 0x7a72f314]; mov byte ptr [esi - 7], bh; call dword ptr [eax - 0x18]; 
0x00091ae6: inc dword ptr [ebx - 0x1f7ce940]; test dword ptr [edi], 0xffff6d84; inc dword ptr [ebx - 0x7a72f314]; mov byte ptr [esi - 7], bh; call dword ptr [eax - 0x18]; 
0x0009e28d: inc dword ptr [ebx - 0x2288fe06]; pop ebx; pop esi; pop edi; ret; 
0x00171f7e: inc dword ptr [ebx - 0x247aef3c]; jne 0x171f90; add esp, 8; pop ebx; ret; 
0x00021c4a: inc dword ptr [ebx - 0x2708ef3c]; pop ebx; adc edx, 0; neg edx; ret; 
0x0011c8ba: inc dword ptr [ebx - 0x2776d73c]; pop ebx; ret; 
0x0014df86: inc dword ptr [ebx - 0x2776eb3c]; pop ebx; pop esi; ret; 
0x00119878: inc dword ptr [ebx - 0x2776ef3c]; add esp, 4; pop ebx; pop esi; ret; 
0x000caa31: inc dword ptr [ebx - 0x287cfe3a]; add byte ptr [ecx], bh; ret; 
0x0004fafb: inc dword ptr [ebx - 0x2d7c0040]; call dword ptr [edx - 0x75]; 
0x000c721a: inc dword ptr [ebx - 0x2d7c0040]; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00166f38: inc dword ptr [ebx - 0x2f08e33c]; shr eax, 0x1f; ret; 
0x000d6da2: inc dword ptr [ebx - 0x3616ef3c]; jecxz 0xd6da9; call dword ptr [eax + 0x53]; 
0x000c7e8a: inc dword ptr [ebx - 0x361f7b]; jmp dword ptr [eax]; 
0x0004fd27: inc dword ptr [ebx - 0x36277b]; call dword ptr [eax]; 
0x0004fb16: inc dword ptr [ebx - 0x36277b]; jmp dword ptr [eax]; 
0x0004e189: inc dword ptr [ebx - 0x362f43]; call dword ptr [eax]; 
0x000c6119: inc dword ptr [ebx - 0x363743]; call dword ptr [eax]; 
0x000c88e4: inc dword ptr [ebx - 0x36477b]; jmp eax; 
0x00050d31: inc dword ptr [ebx - 0x364f7b]; jmp eax; 
0x00099a46: inc dword ptr [ebx - 0x3746f314]; adc eax, dword ptr [eax]; add byte ptr [ebx - 0x72d3db84], cl; xchg dword ptr [ebx + edx*4 - 7], ecx; dec dword ptr [ebp - 0x6bf3a69]; call dword ptr [eax - 0x73]; 
0x00080279: inc dword ptr [ebx - 0x3b7c10dd]; add al, 0x5b; pop esi; ret; 
0x00095513: inc dword ptr [ebx - 0x3b7cef3c]; adc al, 0x5b; pop esi; ret; 
0x00034327: inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x0011a153: inc dword ptr [ebx - 0x3b7cef3c]; or byte ptr [eax + 1], bh; pop ebx; ret; 
0x00081552: inc dword ptr [ebx - 0x3b7cf7f2]; adc al, 0x5b; pop esi; ret; 
0x000fa4c8: inc dword ptr [ebx - 0x3b7cfefa]; adc byte ptr [ecx], al; ret; 
0x000fb247: inc dword ptr [ebx - 0x3d8a2508]; lea esi, [esi]; lea ecx, [esp + 4]; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x00104c07: inc dword ptr [ebx - 0x3e760035]; mov edx, ebx; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x001222b6: inc dword ptr [ebx - 0x3e8a2508]; lea esi, [esi]; lea ecx, [esp + 0xc]; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x001328cf: inc dword ptr [ebx - 0x3f7aef3c]; je 0x1328e0; add esp, 8; pop ebx; ret; 
0x000ddda3: inc dword ptr [ebx - 0x3f7aef3c]; jne 0xdddb0; add esp, 8; pop ebx; ret; 
0x00125220: inc dword ptr [ebx - 0x3f7aef3c]; js 0x125230; add esp, 8; pop ebx; ret; 
0x001500ee: inc dword ptr [ebx - 0x3f7aef3c]; sete al; add esp, 0xc; ret; 
0x0012d33f: inc dword ptr [ebx - 0x3f7cef3c]; sbb al, 0x89; loope 0x12d2d2; ret 0x25; 
0x00083e2d: inc dword ptr [ebx - 0x3fcee73c]; pop ebx; ret; 
0x0007b537: inc dword ptr [ebx - 0x3fceeb3c]; pop ebx; pop esi; ret; 
0x00087da0: inc dword ptr [ebx - 0x3fceef3c]; add esp, 0xc; ret; 
0x000351ae: inc dword ptr [ebx - 0x3fceef3c]; add esp, 4; pop ebx; pop esi; ret; 
0x000ed55a: inc dword ptr [ebx - 0x3fceef3c]; add esp, 8; pop ebx; ret; 
0x000fb331: inc dword ptr [ebx - 0x3fceef3c]; pop ebx; pop esi; pop edi; ret; 
0x000ed547: inc dword ptr [ebx - 0x3fcef73c]; pop ebx; ret; 
0x00091b21: inc dword ptr [ebx - 0x3fe6fe08]; add esp, 0x1c; ret; 
0x0004f711: inc dword ptr [ebx - 0x41f0fe18]; adc byte ptr [ebx - 0x362743], al; call dword ptr [eax]; 
0x000677f7: inc dword ptr [ebx - 0x47cef3c]; or cl, byte ptr [edi]; xchg esp, eax; ret; 
0x000ba72c: inc dword ptr [ebx - 0x5bf0002e]; ret 0xc102; 
0x0006c561: inc dword ptr [ebx - 0x6274fb14]; push 0x89fffff7; lea esi, [edi + esi*8 - 1]; call dword ptr [esi + 0x6a]; 
0x00147a02: inc dword ptr [ebx - 0x6472f314]; add bl, byte ptr [edi - 7]; call dword ptr [ebx - 0x18]; 
0x000df93e: inc dword ptr [ebx - 0x6772f714]; dec eax; dec ecx; stc; dec dword ptr [ebp - 0x6b91c80]; call dword ptr [ebx + 0x50]; 
0x0008eb62: inc dword ptr [ebx - 0x69f00208]; ret; 
0x00067d89: inc dword ptr [ebx - 0x6a76f314]; xchg esp, eax; idiv edi; call dword ptr [esi - 0x18]; 
0x00067c97: inc dword ptr [ebx - 0x6a77fb14]; xchg esp, eax; idiv edi; call dword ptr [esi + 0x6a]; 
0x00121896: inc dword ptr [ebx - 0x6af0f708]; rol byte ptr [ebx - 0x49f0d33c], 0xc0; neg eax; ret; 
0x00121855: inc dword ptr [ebx - 0x6af0f708]; rol byte ptr [ebx - 0x49f0e33c], 0xc0; neg eax; ret; 
0x00060aa1: inc dword ptr [ebx - 0x6bf0d808]; ret 0xf883; 
0x00114bd5: inc dword ptr [ebx - 0x6bf0fc02]; ret 0xe2e9; 
0x0010cc35: inc dword ptr [ebx - 0x6bf0fc02]; ret 0xf2e9; 
0x0013b7b1: inc dword ptr [ebx - 0x6c72f714]; js 0x13b810; stc; dec dword ptr [ecx - 0x48b7b]; call dword ptr [edi + 0x52]; 
0x0009bfb8: inc dword ptr [ebx - 0x6d72fe1d]; add byte ptr [edi - 0xb], dh; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x00131b18: inc dword ptr [ebx - 0x6d72fe1d]; mov al, byte ptr [0xffff536]; inc esp; ret 0xc35b; 
0x0009c098: inc dword ptr [ebx - 0x6d72fe1d]; nop; retf 0xfff5; cmove eax, edx; pop ebx; ret; 
0x00131bb8: inc dword ptr [ebx - 0x6d72fe1d]; rcl byte ptr [esi - 0xb]; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x0009c3a8: inc dword ptr [ebx - 0x6d72fe1d]; sal byte ptr [esi], 0xf5; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x00066df5: inc dword ptr [ebx - 0x7276fb14]; xchg esp, eax; idiv edi; call dword ptr [ecx + 0x6a]; 
0x000dfb95: inc dword ptr [ebx - 0x72acf714]; xor al, 0x46; stc; call dword ptr [eax - 0x18]; 
0x0015fc3a: inc dword ptr [ebx - 0x72afef3c]; or dword ptr [eax], 0xffffffb1; stc; call dword ptr [eax - 0x73]; 
0x00131028: inc dword ptr [ebx - 0x72afef3c]; xchg esi, ecx; push edi; stc; call dword ptr [ebx + 0x50]; 
0x0016039f: inc dword ptr [ebx - 0x72aff33c]; cmp dword ptr [eax + 0x57], -7; call dword ptr [eax + 0x6a]; 
0x0009a277: inc dword ptr [ebx - 0x72aff33c]; sbb dword ptr [eax + 0x5b], -7; call dword ptr [eax + 0x6a]; 
0x00058eed: inc dword ptr [ebx - 0x72aff33c]; test dword ptr [edi + 0x32], ebx; stc; call dword ptr [eax + 0x56]; 
0x0013a323: inc dword ptr [ebx - 0x72aff33c]; xchg dword ptr [eax + 0x57], edi; stc; call dword ptr [eax + 0x6a]; 
0x00127294: inc dword ptr [ebx - 0x72aff33c]; xchg dword ptr [ecx], edx; push esi; stc; call dword ptr [eax + 0x6a]; 
0x0012e820: inc dword ptr [ebx - 0x72aff33c]; xor dword ptr [esi + 0x57], 0xfffffff9; call dword ptr [eax + 0x57]; 
0x0011e681: inc dword ptr [ebx - 0x72aff33c]; xor dword ptr [esi + 0x57], 0xfffffff9; call dword ptr [eax + 0x6a]; 
0x0011bc67: inc dword ptr [ebx - 0x72affb14]; xchg byte ptr [esi + 0x4b], bl; stc; call dword ptr [eax - 1]; 
0x00129c59: inc dword ptr [ebx - 0x72affb14]; xchg dword ptr [edi + 0x56], esp; stc; call dword ptr [eax + 0x53]; 
0x00178221: inc dword ptr [ebx - 0x73ee33c]; pop ds; ret; 
0x001434a8: inc dword ptr [ebx - 0x74a9f314]; push esp; and al, 0x20; call edx; 
0x0015fbb1: inc dword ptr [ebx - 0x74aaf314]; inc esp; and al, 0x48; call dword ptr [eax + 0x10]; 
0x00131778: inc dword ptr [ebx - 0x74aff314]; inc ebp; mov esp, 0x8db075ff; cmp byte ptr [eax + 0x58], 0xf9; call dword ptr [edx - 0x17]; 
0x000796ac: inc dword ptr [ebx - 0x7620c39a]; ret; 
0x0007192a: inc dword ptr [ebx - 0x776ef3c]; pop ebx; pop esi; pop edi; ret; 
0x000fd554: inc dword ptr [ebx - 0x7774f714]; or byte ptr [ebx], al; add byte ptr [ecx - 0x71b73], cl; dec dword ptr [ecx - 0x2f7f723f]; and ch, ch; call dword ptr [eax - 0x73]; 
0x0015e7bf: inc dword ptr [ebx - 0x77cef3c]; add dword ptr [eax + 1], edi; sbb eax, -1; add esp, 0xc; ret; 
0x00166fa2: inc dword ptr [ebx - 0x77cef3c]; add dword ptr [edi], ecx; xchg esp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x0017215d: inc dword ptr [ebx - 0x77cef3c]; dec dword ptr [edi]; test byte ptr [edi - 0x77000000], dl; ret 0xe283; 
0x001574e3: inc dword ptr [ebx - 0x77cef3c]; dec dword ptr [edi]; xchg esp, eax; ret 0xe1e9; 
0x0012402f: inc dword ptr [ebx - 0x77cef3c]; push dword ptr [esp - 0x7d]; in al, dx; add al, 0x89; ret; 
0x000839f6: inc dword ptr [ebx - 0x7872f314]; mov byte ptr [esi - 7], bh; call dword ptr [eax - 0x18]; 
0x0008b3fa: inc dword ptr [ebx - 0x7872f314]; mov byte ptr [esi - 7], bh; call dword ptr [eax - 0x18]; add bh, bh; jmp dword ptr [ebp - 0x39]; 
0x00168833: inc dword ptr [ebx - 0x7872f314]; pop di; stc; call dword ptr [eax - 0x18]; 
0x000584d6: inc dword ptr [ebx - 0x7872f314]; test byte ptr [ecx], dh; stc; call dword ptr [eax - 0x18]; 
0x00148310: inc dword ptr [ebx - 0x7872f714]; pop ebx; sub bh, cl; call dword ptr [eax - 0x73]; 
0x000c6c42: inc dword ptr [ebx - 0x78f0f608]; movsb byte ptr es:[edi], byte ptr [esi]; add eax, dword ptr [eax]; add byte ptr [ebx - 0x361f7b], cl; inc dword ptr [ebx - 0x363743]; call dword ptr [eax]; 
0x00109fe9: inc dword ptr [ebx - 0x7972f314]; insb byte ptr es:[edi], dx; lahf; stc; call dword ptr [eax - 0x18]; 
0x0010a159: inc dword ptr [ebx - 0x7972f314]; movsb byte ptr es:[edi], byte ptr [esi]; lahf; stc; call dword ptr [eax - 0x18]; 
0x0013b10f: inc dword ptr [ebx - 0x7972f314]; out 0x5b, eax; stc; call dword ptr [eax - 0x18]; 
0x0011b5f0: inc dword ptr [ebx - 0x7972f714]; cmp al, 0x2f; stc; call dword ptr [eax - 1]; 
0x0008ac18: inc dword ptr [ebx - 0x7a72f314]; mov byte ptr [esi - 7], bh; call dword ptr [eax - 0x18]; 
0x000590a9: inc dword ptr [ebx - 0x7a72fb14]; inc ecx; xor bh, cl; call dword ptr [ecx + 0x50]; 
0x0006790c: inc dword ptr [ebx - 0x7a72fb14]; pushfd; idiv edi; call dword ptr [eax + 0x57]; 
0x0005d9a6: inc dword ptr [ebx - 0x7af00008]; ret; 
0x00171b75: inc dword ptr [ebx - 0x7af09f1e]; mov edi, esi; ljmp 0xc031:0x8c483ff; pop ebx; ret; 
0x000f0d8b: inc dword ptr [ebx - 0x7bf00008]; ret; 
0x00109d2f: inc dword ptr [ebx - 0x7c72f314]; cld; sahf; stc; call dword ptr [eax - 0x18]; 
0x0010d26c: inc dword ptr [ebx - 0x7c72f314]; inc ebp; stc; call dword ptr [eax - 0x18]; 
0x000c46c2: inc dword ptr [ebx - 0x7c72f314]; inc esp; cwde; stc; call dword ptr [eax - 0x18]; 
0x00034f84: inc dword ptr [ebx - 0x7c72f314]; mov ah, 0x2f; stc; call dword ptr [eax - 0x18]; 
0x00109e8f: inc dword ptr [ebx - 0x7c72f314]; xor al, 0x9f; stc; call dword ptr [eax - 0x18]; 
0x000eb869: inc dword ptr [ebx - 0x7c72f714]; bound ecx, qword ptr [eax - 7]; call dword ptr [eax + 0x55]; 
0x000cd975: inc dword ptr [ebx - 0x7c72f714]; cmp al, 0x45; stc; call dword ptr [eax + 0x56]; 
0x000eb6c9: inc dword ptr [ebx - 0x7c72f714]; dec eax; stc; call dword ptr [eax + 0x55]; 
0x000eb535: inc dword ptr [ebx - 0x7c72f714]; dec edx; dec eax; stc; call dword ptr [eax + 0x55]; 
0x000eb802: inc dword ptr [ebx - 0x7c72f714]; inc esp; dec eax; stc; call dword ptr [eax + 0x55]; 
0x000eb722: inc dword ptr [ebx - 0x7c72f714]; outsd dx, dword ptr [esi]; dec eax; stc; call dword ptr [eax + 0x55]; 
0x000eb79c: inc dword ptr [ebx - 0x7c72f714]; pop esp; dec eax; stc; call dword ptr [eax + 0x55]; 
0x00168185: inc dword ptr [ebx - 0x7cef3c]; push dword ptr [edi + edx - 0x75]; jnp 0x41a221ea; or byte ptr [ecx], bh; ret 0x2675; 
0x000cf07c: inc dword ptr [ebx - 0x7e72f714]; pop ebx; sub bh, cl; call dword ptr [eax + 0x53]; 
0x000667f3: inc dword ptr [ebx - 0x7f72f314]; aam 0x78; stc; call dword ptr [eax - 0x18]; 
0x00068590: inc dword ptr [ebx - 0x7f72f314]; clc; js 0x68592; call dword ptr [eax - 0x18]; 
0x0006d835: inc dword ptr [ebx - 0x7f72f314]; clc; js 0x6d837; call dword ptr [eax - 0x18]; 
0x000e2715: inc dword ptr [ebx - 0x7f72f314]; int1; inc edi; stc; call dword ptr [eax - 0x18]; 
0x000df9f4: inc dword ptr [ebx - 0x7f72f714]; add al, 0x47; stc; call dword ptr [eax + 0x53]; 
0x000dfa51: inc dword ptr [ebx - 0x7f72f714]; add al, 0x47; stc; call dword ptr [eax - 1]; 
0x00085a0f: inc dword ptr [ebx - 0x9ce0320]; mov edx, eax; mov eax, 0xf0; or edx, 2; call dword ptr gs:[0x10]; 
0x0008575f: inc dword ptr [ebx - 0x9ce0320]; mov edx, eax; mov eax, edi; or edx, 2; call dword ptr gs:[0x10]; 
0x0013f966: inc dword ptr [ebx - 0xb8b0a08]; add esp, 8; pop ebx; ret; 
0x00071c35: inc dword ptr [ebx - 0xf76df3c]; pop ebx; pop esi; pop edi; ret; 
0x000909fd: inc dword ptr [ebx - 0xf76eb3c]; pop ebx; pop esi; ret; 
0x00073282: inc dword ptr [ebx - 0xf76ef3c]; add esp, 4; pop ebx; pop esi; ret; 
0x00131c4c: inc dword ptr [ebx - 0xffeef3c]; pop ebx; pop esi; pop edi; ret; 
0x0013390c: inc dword ptr [ebx]; add byte ptr [eax], al; ja 0x133919; sar eax, 5; add esp, 0xc; ret; 
0x001963c1: inc dword ptr [ebx]; add byte ptr [eax], al; jne 0x196100; xor eax, eax; pop edi; ret; 
0x0003b69b: inc dword ptr [ebx]; add byte ptr [eax], al; xor eax, edx; ret; 
0x001196bb: inc dword ptr [ebx]; cmovae esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0006c28a: inc dword ptr [ebx]; test dword ptr [edi + esi*8 - 1], ecx; jmp ptr [ecx]; ret; 
0x00139b62: inc dword ptr [ecx + 0x200f9]; add byte ptr [edi], cl; inc esp; ret 0x4589; 
0x001a0dcb: inc dword ptr [ecx + 0x89234c3]; add byte ptr [ebx + 0x194483], cl; add byte ptr [ebp + 0x314574c0], al; jmp dword ptr [esi - 0x70]; 
0x001a0869: inc dword ptr [ecx + 0x89796c3]; add byte ptr [ebx - 0x7c72ef14], al; and byte ptr [eax - 9], ch; call dword ptr [eax - 1]; 
0x001932c9: inc dword ptr [ecx + 0x96d36c3]; add byte ptr [ebx - 0x677d], cl; jmp dword ptr [ebp - 0x75]; 
0x00192dc9: inc dword ptr [ecx + 0x97236c3]; add byte ptr [ebx - 0x677d], cl; jmp dword ptr [ebp - 0x75]; 
0x0018f0c9: inc dword ptr [ecx + 0x9af36c3]; add byte ptr [ebx - 0x677d], cl; jmp dword ptr [ebp - 0x75]; 
0x0018cbb9: inc dword ptr [ecx + 0x9d446c3]; add byte ptr [ebx - 0x677d], cl; jmp dword ptr [ebp - 0x75]; 
0x001730e7: inc dword ptr [ecx + 0xb6f18c6]; add byte ptr [ebx - 0x77], dl; ret; 
0x0017297a: inc dword ptr [ecx + 0xb7685c3]; add byte ptr [ebx - 0x5397ef14], al; add byte ptr [eax], al; add al, ch; ret 0xead7; 
0x0006ccf4: inc dword ptr [ecx]; add byte ptr [eax], al; add bh, al; test dword ptr [eax], edi; idiv edi; call dword ptr [eax]; 
0x0003b8bd: inc dword ptr [ecx]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x001963b1: inc dword ptr [ecx]; add byte ptr [eax], al; jne 0x196100; xor eax, eax; pop edi; ret; 
0x000b4086: inc dword ptr [ecx]; clc; pop edi; ret; 
0x000b40c3: inc dword ptr [ecx]; clc; xor ch, ch; add eax, ecx; pop edi; ret; 
0x00101543: inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x0003455e: inc dword ptr [ecx]; fidivr dword ptr [esi]; jmp edx; 
0x000e0010: inc dword ptr [ecx]; fistp qword ptr [esi]; jmp edi; 
0x0009ba1a: inc dword ptr [ecx]; fnstcw word ptr [ecx]; ret 0x3376; 
0x000347ca: inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x000f63b1: inc dword ptr [ecx]; inc edi; sub byte ptr [edi], cl; mov dh, 0x46; add al, 0x89; ret 0xe283; 
0x00122dc7: inc dword ptr [ecx]; je 0x122e00; lea ecx, [esp + 0xc]; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x00122f47: inc dword ptr [ecx]; je 0x122f80; lea ecx, [esp + 0xc]; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x00168377: inc dword ptr [ecx]; ret 0x858b; 
0x00033c17: inc dword ptr [ecx]; ret 0xd089; 
0x0002e28f: inc dword ptr [ecx]; ret 0xd139; 
0x0005b9a2: inc dword ptr [ecx]; ret 0xd801; 
0x0005b42e: inc dword ptr [ecx]; ret 0xf001; 
0x0005bb3c: inc dword ptr [ecx]; ret; 
0x000b5927: inc dword ptr [ecx]; sar dword ptr [esi], 1; jmp ecx; 
0x000336d7: inc dword ptr [ecx]; sbb al, byte ptr [ecx]; pop edx; add al, 0x83; ret 0x3908; 
0x001963d1: inc dword ptr [edi]; add byte ptr [eax], al; jne 0x196100; xor eax, eax; pop edi; ret; 
0x00199094: inc dword ptr [edi]; add byte ptr [ecx - 0x7683dbbc], cl; ret 0xd285; 
0x00133bc7: inc dword ptr ds:[ebx - 0x2776d73c]; pop ebx; ret; 
0x00094efa: inc eax; adc al, 0x89; dec eax; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00166b39: inc eax; adc al, 4; mov eax, 1; ret; 
0x000da8a8: inc eax; adc bl, ch; call dword ptr [eax - 0x18]; 
0x0007ff5d: inc eax; adc byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ret 0x40c7; 
0x0019781c: inc eax; adc byte ptr [ebp - 0x74f18a2e], al; inc esp; and al, 0xc; pop edi; ret; 
0x00078124: inc eax; adc byte ptr [ebx + 0x5e5b04c4], al; jmp eax; 
0x00081bb0: inc eax; adc byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; jmp eax; 
0x000600e1: inc eax; adc byte ptr [ebx], ch; xor byte ptr [ebx - 0x17aff314], al; ret 0x3a6; 
0x000fdefa: inc eax; add al, 0x3c; jg 0xfdf0e; inc esp; ret 0x8589; 
0x0011f62f: inc eax; add al, 0x5b; ret; 
0x0019792a: inc eax; add al, 0x5f; ret; 
0x001657b1: inc eax; add al, 0x83; les ebx, ptr [eax]; pop ebx; jmp eax; 
0x00023401: inc eax; add al, 0x85; ror byte ptr [edi], 0x44; ret; 
0x0014e251: inc eax; add al, 0x85; sal byte ptr [ebp + eax + 0x39], 0x50; or byte ptr [ebp - 0xc], dh; ret; 
0x0016df95: inc eax; add al, 0x89; ret; 
0x000df2e5: inc eax; add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x000dfdf6: inc eax; add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0x66c3; 
0x000dfd8d: inc eax; add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0x8dc3; 
0x00128f75: inc eax; add byte ptr [eax], al; mov eax, edx; ret; 
0x0002fbe8: inc eax; add byte ptr [eax], al; ret; 
0x0006e4c2: inc eax; add dword ptr [eax], eax; add byte ptr [eax], al; add edx, dword ptr [esi + eax*4]; jmp edx; 
0x0006f413: inc eax; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0019908e: inc eax; add eax, 0xff250000; inc dword ptr [edi]; add byte ptr [ecx - 0x7683dbbc], cl; ret 0xd285; 
0x000b3fc5: inc eax; add edx, eax; jl 0xb4000; add eax, ecx; ret; 
0x000b54d8: inc eax; add esp, 0x100; sub eax, edx; ret; 
0x00146ed3: inc eax; add esp, 0x118; pop ebx; ret; 
0x000ddcff: inc eax; add esp, 0x18; pop ebx; ret; 
0x00075f51: inc eax; and al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000828bf: inc eax; and al, 0x65; mov byte ptr [0x4fe], al; cmp eax, 1; je 0x828d0; ret; 
0x0011f2da: inc eax; and al, 0x85; ror byte ptr [edi], 0x44; ret 0x66c3; 
0x000ced67: inc eax; and byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp + 0x3dd08a], cl; add byte ptr [ebp - 0x15f16f6e], cl; call dword ptr [ecx + 0x52]; 
0x0002167b: inc eax; call dword ptr [ebp]; 
0x0007faf7: inc eax; call dword ptr [esi + 0xc]; 
0x00021618: inc eax; call eax; 
0x001315c3: inc eax; clc; dec dword ptr [ebx - 0x3b7c3bab]; adc byte ptr [ebp - 0x7ce4e98c], cl; ret; 
0x0017ee5b: inc eax; clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00180e8b: inc eax; clc; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x0018833b: inc eax; clc; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x00188354: inc eax; cld; mov dword ptr [edx - 5], ecx; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x0012d29e: inc eax; cmovne eax, edx; pop ebx; ret; 
0x0002ff9d: inc eax; cmp al, 0x8b; add al, 0x90; ret; 
0x000b5723: inc eax; cmp cl, 0; je 0xb572a; inc eax; sub eax, dword ptr [esp + 4]; ret; 
0x000dc7fc: inc eax; cmp esp, esi; jmp dword ptr [ebp - 0x75]; 
0x0013c41c: inc eax; dec ebx; add byte ptr [eax], al; push edx; call eax; 
0x00127a4e: inc eax; dec esp; call 0x127920; add esp, 4; ret; 
0x001719a9: inc eax; dec esp; ret; 
0x000677e8: inc eax; idiv edi; call dword ptr [eax - 0x18]; 
0x0006704a: inc eax; idiv edi; dec dword ptr [ebx - 0x8c77b]; call dword ptr [esi - 0x18]; 
0x000675cb: inc eax; idiv edi; dec dword ptr [ecx - 0x88b7b]; jmp ptr [ecx]; ret; 
0x000a634c: inc eax; idiv edi; jmp dword ptr [esi + 0xf]; 
0x000c157c: inc eax; in al, 0xf6; dec dword ptr [ebx - 0x72dbdb84]; xchg dword ptr [edi + edx*4], esp; stc; call dword ptr [eax - 0x73]; 
0x00080278: inc eax; inc dword ptr [ebx - 0x3b7c10dd]; add al, 0x5b; pop esi; ret; 
0x000b54d7: inc eax; inc eax; add esp, 0x100; sub eax, edx; ret; 
0x000b54d6: inc eax; inc eax; inc eax; add esp, 0x100; sub eax, edx; ret; 
0x000ce088: inc eax; inc ebp; stc; call dword ptr [eax - 0x18]; 
0x0011f5b9: inc eax; inc esp; mov ecx, dword ptr [esp + 8]; mov dword ptr [ecx], eax; mov eax, 1; ret; 
0x0011f651: inc eax; inc esp; pop ebx; ret; 
0x000894de: inc eax; insb byte ptr es:[edi], dx; stc; call dword ptr [eax - 0x73]; 
0x000a2567: inc eax; ja 0xa2571; mov eax, dword ptr [ecx + edx*4 - 0x9c0]; ret; 
0x000a2597: inc eax; ja 0xa25a1; mov eax, dword ptr [ecx + edx*4 - 0x8a0]; ret; 
0x0007a7b4: inc eax; jge 0x7a7b0; call dword ptr [eax - 0x18]; 
0x0011fab5: inc eax; jl 0x11fa41; push esi; add al, 0x89; ret 0xe8c1; 
0x0011fc59: inc eax; jl 0x11fbe5; push esi; add al, 0x89; ret 0xe8c1; 
0x0011fe19: inc eax; jl 0x11fda5; push esi; add al, 0x89; ret 0xe8c1; 
0x00120065: inc eax; jl 0x11fff1; push esi; add al, 0x89; ret 0xe8c1; 
0x00120184: inc eax; jl 0x120110; push esi; add al, 0x89; ret 0xe8c1; 
0x0012017f: inc eax; jl 0x120178; dec dword ptr [ebx + 0x56897c40]; add al, 0x89; ret 0xe8c1; 
0x0012028b: inc eax; jl 0x120217; push esi; add al, 0x89; ret 0xe8c1; 
0x001202eb: inc eax; jl 0x120277; push esi; add al, 0x89; ret 0xe8c1; 
0x0012075d: inc eax; jl 0x1206e9; push esi; add al, 0x89; ret 0xe8c1; 
0x00152b12: inc eax; jl 0x152b15; add byte ptr [eax], al; add byte ptr [ebx + 0x5f5e04c4], al; ret; 
0x0012c1f1: inc eax; jmp dword ptr [eax]; 
0x0017efee: inc eax; jmp dword ptr [esi - 0x77]; 
0x0018b0ed: inc eax; jne 0x18b160; movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x0019596c: inc eax; jne 0x1959d4; add eax, 7; ret; 
0x001959ac: inc eax; jne 0x1959f4; add eax, 0xf; ret; 
0x00195c85: inc eax; jne 0x195d50; lea eax, [edi + 7]; pop edi; ret; 
0x00195cd8: inc eax; jne 0x195dc0; lea eax, [edi + 0xf]; pop edi; ret; 
0x00195bf9: inc eax; jne 0x195dd0; lea eax, [edi + 0xf]; pop edi; ret; 
0x00195b56: inc eax; jne 0x195dd0; lea eax, [edi + 7]; pop edi; ret; 
0x00196641: inc eax; jne 0x196770; lea eax, [edi + 7]; pop edi; ret; 
0x00196694: inc eax; jne 0x1967d0; lea eax, [edi + 0xf]; pop edi; ret; 
0x00196cc9: inc eax; jne 0x196d70; test al, 0x20; jne 0x196d60; lea eax, [ecx + 4]; ret; 
0x00197331: inc eax; jne 0x1973e0; lea eax, [edx + 7]; ret; 
0x00197384: inc eax; jne 0x197440; lea eax, [edx + 0xf]; ret; 
0x00197764: inc eax; jne 0x197b19; add eax, 7; pop edi; ret; 
0x001977b4: inc eax; jne 0x197b41; add eax, 0xf; pop edi; ret; 
0x00087640: inc eax; jne 0x87664; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x000931c5: inc eax; jne 0x931e8; add ebx, 1; mov eax, 0x115; call dword ptr gs:[0x10]; 
0x001164ed: inc eax; lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00158e85: inc eax; mov dword ptr [0xc0850000], eax; je 0x158e98; add esp, 8; pop ebx; ret; 
0x000dbd29: inc eax; mov dword ptr [edx], ebx; add esp, 0x28; pop ebx; ret; 
0x00124a2c: inc eax; mov dword ptr [esp + 0x14], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00124da3: inc eax; mov dword ptr [esp + 0x14], eax; mov eax, dword ptr [esp + 0x44]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00083ca5: inc eax; mov eax, dword ptr [edi]; mov ebx, dword ptr [edi + 4]; mov ecx, dword ptr [edi + 8]; mov edx, dword ptr [edi + 0xc]; call dword ptr gs:[0x10]; 
0x000b35e5: inc eax; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00122290: inc eax; mov eax, ecx; pop ebx; pop esi; pop edi; ret; 
0x00162e05: inc eax; mov ebx, 0xb68dfff3; and ah, dh; bnd call dword ptr [ebp - 0x73]; 
0x00158a4c: inc eax; mov ecx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [ecx + 8]; 
0x00109d7f: inc eax; mov ecx, dword ptr [esp + 0x30]; mov eax, 0x127; mov ebx, 0xffffff9c; mov edx, edi; call dword ptr gs:[0x10]; 
0x000d70fc: inc eax; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000936cc: inc eax; mov edx, dword ptr [esp + 0x48]; mov eax, 0x117; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x0009340c: inc eax; mov edx, dword ptr [esp + 0x48]; mov eax, 0x118; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00093650: inc eax; mov edx, dword ptr [esp + 0x48]; mov eax, 0x1a2; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x00093394: inc eax; mov edx, dword ptr [esp + 0x48]; mov eax, 0x1a3; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00093458: inc eax; mov edx, dword ptr [esp + 0x48]; mov ecx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x118; call dword ptr gs:[0x10]; 
0x000934a8: inc eax; mov edx, dword ptr [esp + 0x48]; mov ecx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x1a3; call dword ptr gs:[0x10]; 
0x001092ad: inc eax; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000fb1d5: inc eax; mov esi, dword ptr [esp + 0x44]; lea ecx, [esp + 0xc]; mov eax, 0x1a7; call dword ptr gs:[0x10]; 
0x001312fe: inc eax; or al, 0x56; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00197986: inc eax; or al, 0x5f; ret; 
0x0007860c: inc eax; or al, 0x83; in al, dx; add al, 0x29; ret 0xfac1; 
0x000944d4: inc eax; or al, 0x83; ret; 
0x00091218: inc eax; or al, 0x85; sal byte ptr [ebp - 0xe], 0x5b; ret; 
0x0012f7b0: inc eax; or al, 0x89; ret; 
0x0008242a: inc eax; or bh, bh; je 0x82453; xor byte ptr [edx + 0x51], dl; call eax; 
0x001160d9: inc eax; or byte ptr [0x100f], ah; ret; 
0x00146df2: inc eax; or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0005180d: inc eax; or byte ptr [eax], al; mov eax, edx; ret; 
0x00083163: inc eax; or byte ptr [ebp - 0x5e], ah; inc byte ptr [eax + eax]; add byte ptr [ebx + 0x87401f8], al; ret; 
0x000842dd: inc eax; or byte ptr [ebx + 0x28901e0], al; xor eax, eax; ret; 
0x000f0efa: inc eax; or byte ptr [ebx - 0x76e3db8c], cl; shr dword ptr [ecx], cl; ret; 
0x00131344: inc eax; or byte ptr [ecx - 0x373edbcc], cl; or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x0014d8e5: inc eax; or byte ptr [ecx], al; je 0x14d90d; add esp, 0xc; ret; 
0x0008437d: inc eax; or cl, al; clc; add al, byte ptr [ebx + 0x28901e0]; xor eax, eax; ret; 
0x000abbdc: inc eax; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0009dd8a: inc eax; or eax, 0x73c38100; ret 0x18; 
0x0009dd1a: inc eax; or eax, 0xe3c38100; ret 0x18; 
0x000fd1c8: inc eax; or eax, 0xec830000; or byte ptr [ebp - 0x67343], cl; call dword ptr [edi - 1]; 
0x0011f93f: inc eax; or eax, dword ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; rcl byte ptr [ecx - 7], cl; call dword ptr [eax + 0x57]; 
0x00075593: inc eax; out 0xff, al; call dword ptr [eax - 0x73]; 
0x0002ed91: inc eax; pop eax; ret; 
0x000b5170: inc eax; pop ebp; pop ebx; pop esi; pop edi; ret; 
0x00035d33: inc eax; pop ebx; pop esi; pop edi; fsubp st(1); ret; 
0x0011567c: inc eax; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00035cc1: inc eax; pop ebx; pop esi; pop edi; ret; 
0x000add33: inc eax; pop edi; pop esi; pop ebx; ret; 
0x000b4977: inc eax; pop edi; pop esi; ret; 
0x0009dd0c: inc eax; pop edi; ret; 
0x00197895: inc eax; pop es; pop edi; ret; 
0x0010491d: inc eax; pop es; stc; inc dword ptr [ecx]; sar dword ptr [esi], 1; jmp ecx; 
0x001719d9: inc eax; pop esp; ret; 
0x000a2353: inc eax; popfd; call 0xc24e3359; ret; 
0x001979a6: inc eax; push cs; pop edi; ret; 
0x000c4ecb: inc eax; push dword ptr [eax]; call edi; 
0x0012c94c: inc eax; push dword ptr [esp + 0x20]; push esi; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x000b6301: inc eax; push eax; push dword ptr [edi]; call ebx; 
0x00077797: inc eax; push eax; push dword ptr [esp + 0x18]; call dword ptr [edi + 0x48]; 
0x001719c9: inc eax; push eax; ret; 
0x000b6bd2: inc eax; push edi; call esi; 
0x000f3154: inc eax; push es; adc byte ptr [edx + ebx*8 - 0x75], dh; pop eax; add al, 0xf7; ret; 
0x00197946: inc eax; push es; pop edi; ret; 
0x00171a59: inc eax; push esp; ret; 
0x0011fe74: inc eax; push ss; cmc; dec dword ptr [ebx + 0x8080]; add byte ptr [ecx - 0x6c72fbaa], cl; ret 0xf94d; 
0x0002f7b5: inc eax; ret; 
0x00082805: inc eax; sbb al, 0x65; mov dword ptr [0x80], eax; ret; 
0x0013132c: inc eax; sbb al, 0x6a; add eax, 0x6509c8c1; xor eax, dword ptr [0x18]; push esi; call eax; 
0x00082028: inc eax; sbb al, 0x83; les edx, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x000fd531: inc eax; sbb al, 0x83; ret 0x8501; 
0x00160dc9: inc eax; sbb al, 0x85; sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x55; call eax; 
0x00158698: inc eax; sbb al, 0x85; sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x56; call eax; 
0x00159f2c: inc eax; sbb al, 0x85; sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x57; call eax; 
0x00030cd3: inc eax; sbb al, 0x89; ret 0x25; 
0x00147f2d: inc eax; sbb byte ptr [ebp + 0x5b0d75c0], al; pop esi; pop edi; ret; 
0x0012e2c3: inc eax; sbb byte ptr [ebp - 0x7c088a40], al; ret 0x8b18; 
0x0012f30a: inc eax; sbb byte ptr [ebx - 0x137c53a3], cl; add al, 0x6a; add eax, 0x575e938d; stc; call dword ptr [edx + 0x50]; 
0x00035bed: inc eax; shr eax, 0x1f; ret; 
0x000fc5bc: inc eax; stc; call dword ptr [eax + 0x53]; 
0x00091151: inc eax; stc; call dword ptr [eax - 0x18]; 
0x0009114a: inc eax; stc; call dword ptr [eax - 0x73]; 
0x0015e4a5: inc eax; sub al, 0x83; ror byte ptr [eax], 0x89; inc esp; and al, 4; jmp edx; 
0x0002fdb5: inc eax; sub byte ptr [ebx + 0x2009084], cl; add byte ptr [eax], al; ret; 
0x000b5729: inc eax; sub eax, dword ptr [esp + 4]; ret; 
0x0004aa15: inc eax; sub esp, 0x18; mov ecx, esp; mov ebx, 0x3001; mov eax, 0x180; call dword ptr gs:[0x10]; 
0x0002dd9d: inc eax; test bh, dh; call dword ptr [esi - 1]; 
0x000b47ca: inc eax; test ecx, 0xff0000; je 0xb47d4; inc eax; pop edi; ret; 
0x00177f50: inc eax; wait; stc; call dword ptr [eax - 0x73]; 
0x00136efc: inc eax; xchg edx, eax; out dx, al; jmp dword ptr [ebp - 0x75]; 
0x0003acd0: inc eax; xor al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0002ff5d: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x1000; ret; 
0x0002ff3d: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x100; ret; 
0x0002ff1d: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x2000; ret; 
0x0002fe9d: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x200; ret; 
0x0002fedd: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x4000; ret; 
0x0002fe3d: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x400; ret; 
0x0002febd: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x8000; ret; 
0x0002fe7d: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x800; ret; 
0x0002fdfd: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 1; ret; 
0x0002fe5d: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 2; ret; 
0x0002fefd: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 4; ret; 
0x0002fe1d: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 8; ret; 
0x0002fd85: inc eax; xor byte ptr [ebx + 0x2009084], cl; add byte ptr [eax], al; ret; 
0x00164655: inc eax; xor byte ptr [ebx + 0x448908c0], al; and al, 4; jmp edx; 
0x000eaa65: inc eax; xor byte ptr [ecx], bh; ret; 
0x00084733: inc eax; xor eax, eax; mov dword ptr [ecx + 4], edx; ret; 
0x0008bcfa: inc eax; xor eax, eax; ret; 
0x000dd5d8: inc eax; xor ebp, ebx; call dword ptr [eax - 1]; 
0x0007b20a: inc ebp; aam 0x89; ret 0xf889; 
0x00169a24: inc ebp; adc al, 0x39; ret 0x870f; 
0x0010c979: inc ebp; adc al, 0x50; push 1; push dword ptr [esp + 0x30]; push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x0010ccb4: inc ebp; adc al, 0x50; push 2; push dword ptr [esp + 0x30]; push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x0010cc49: inc ebp; adc al, 0x50; push 5; push dword ptr [esp + 0x30]; push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x00167fbc: inc ebp; adc al, 0x89; push ebp; test byte ptr [ecx + 0x458b9045], cl; sbb byte ptr [ecx - 0x837b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00141bea: inc ebp; adc al, 0x89; test dword ptr [edi + edi*8 - 1], esi; jmp dword ptr [ebp - 0x5f]; 
0x0011b8a8: inc ebp; adc byte ptr [ebx - 0x13362], cl; dec dword ptr [ecx - 0xab7b]; jmp dword ptr [ebp - 0x5f]; 
0x0013b3ae: inc ebp; adc byte ptr [ecx - 0x4977b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0016ab3f: inc ebp; adc byte ptr [ecx - 0xeb43], cl; dec dword ptr [ecx - 0xf34b]; dec dword ptr [ecx - 0xe77b]; jmp dword ptr [ebp - 0x5f]; 
0x001703c1: inc ebp; adc byte ptr [esi*2 + 0x828d18], al; push ebx; hlt; jmp dword ptr [esi - 9]; 
0x00115a0c: inc ebp; adc dword ptr [eax], eax; push ebx; mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000eddda: inc ebp; add al, 0x85; ror byte ptr [edi], 0x84; ret 1; 
0x000d2893: inc ebp; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x001588fa: inc ebp; add byte ptr [ebx + 0x508b08ec], al; and byte ptr [esi + 0x50], dl; call dword ptr [edx + 4]; 
0x000392e1: inc ebp; add byte ptr [ebx - 0x3a7cfe11], al; add al, 0x89; add ecx, dword ptr [ebx - 0x7cfbdbbc]; ret; 
0x000d0d36: inc ebp; add byte ptr [ebx - 0x76f3db8c], cl; ret 0x44f6; 
0x00169a21: inc ebp; add byte ptr [ebx], 0x45; adc al, 0x39; ret 0x870f; 
0x00158a61: inc ebp; add byte ptr [ecx - 0x137cdbec], cl; or byte ptr [ebx + 0x50572048], cl; call dword ptr [ecx + 8]; 
0x000418af: inc ebp; add byte ptr [ecx - 0x76dbdbbc], cl; ret 0xe283; 
0x0012daf1: inc ebp; add byte ptr [edi], cl; xchg esp, eax; ret 0xc085; 
0x000f9ba4: inc ebp; add dh, dh; ret; 
0x001959ae: inc ebp; add eax, 0xf; ret; 
0x0012ed87: inc ebp; and al, 0; add byte ptr [ebx - 0xaff33c], al; jne 0x12ed46; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x0007cdaf: inc ebp; and byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; jmp eax; 
0x00085488: inc ebp; and byte ptr [ecx + 0x247c8bc1], cl; add al, 0x89; ret 0xe183; 
0x00144e71: inc ebp; and byte ptr [ecx - 0x4477b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00035067: inc ebp; call 0x26856; jmp dword ptr [esi - 0x70]; 
0x0008b451: inc ebp; cli; dec dword ptr [ebp - 0x67e3b79]; call dword ptr [eax - 0x73]; 
0x0008b470: inc ebp; cli; jmp dword ptr [esi - 0x70]; 
0x001613a3: inc ebp; cmp al, 0x53; call dword ptr [eax + 0x10]; 
0x00161337: inc ebp; cmp al, 0xff; jne 0x16138c; mov ebx, dword ptr [esp + 0x3c]; push ebx; call dword ptr [eax + 0x14]; 
0x0007e96c: inc ebp; fadd dword ptr [ebx - 0x95f714]; push dword ptr [eax]; mov eax, dword ptr [ebp - 0x2c]; call dword ptr [eax + 0xc]; 
0x0014148d: inc ebp; fadd qword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx - 0xab7b], cl; call dword ptr [eax + 0x6a]; 
0x0012ead5: inc ebp; fadd qword ptr [ecx]; add byte ptr [eax], al; add byte ptr [ecx + 0x428be045], cl; or al, 0x89; ret; 
0x0017129a: inc ebp; fadd st(7), st(0); inc esp; ret; 
0x000e996b: inc ebp; fmul dword ptr [ecx + 0x5f5e5bd8]; pop ebp; ret; 
0x00023f60: inc ebp; fmul qword ptr [ebp - 0x2078df7d]; call dword ptr [eax - 0x73]; 
0x00143a72: inc ebp; fsubr st(1); ret 0xfffe; 
0x0017157e: inc ebp; les eax, ptr [ebx - 0x7f72f314]; je 0x1715ed; stc; call dword ptr [eax - 0x18]; 
0x00030af0: inc ebp; les ecx, ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x000239be: inc ebp; les ecx, ptr [ebp - 0x6ba217d]; call dword ptr [eax - 1]; 
0x000a16b6: inc ebp; les ecx, ptr [edi]; mov dh, 0x3c; or byte ptr [ebp - 0x7c588a01], al; ret 0xeb01; 
0x00022f83: inc ebp; mov ah, 0x39; adc byte ptr [edi], cl; test byte ptr [ebx + 0x6b000001], ah; ret 0x8b3c; 
0x001309e6: inc ebp; mov ah, 0x83; ret; 
0x00091f57: inc ebp; mov ah, 0x89; ret 0x458b; 
0x001311aa: inc ebp; mov ah, 0x89; ret; 
0x0013e816: inc ebp; mov ah, 0x8b; test dword ptr [edi + edi*8 - 1], ebp; jmp dword ptr [esi - 0x77]; 
0x00058ada: inc ebp; mov eax, 0x161; call dword ptr gs:[0x10]; 
0x0015a0d7: inc ebp; mov ebp, 0xc4830000; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000cc45a: inc ebp; mov esi, 0x89fff8e4; ret 0x80b8; 
0x00130ecc: inc ebp; mov esp, 0; push 0x1000002; call edx; 
0x00077092: inc ebp; mov esp, 0x5250d029; push edi; call dword ptr [ebx + 0x38]; 
0x000222df: inc ebp; mov esp, 0x5bf4658d; pop esi; pop edi; pop ebp; ret; 
0x0013177e: inc ebp; mov esp, 0x8db075ff; cmp byte ptr [eax + 0x58], 0xf9; call dword ptr [edx - 0x17]; 
0x0016e7d7: inc ebp; movsb byte ptr es:[edi], byte ptr [esi]; push dword ptr [ebp - 0x60]; push 0x28; push dword ptr [ebp - 0x50]; call eax; 
0x0016474d: inc ebp; or al, 0x57; call dword ptr [eax + 0x10]; 
0x0014d50c: inc ebp; or al, 0x81; ret; 
0x0008c271: inc ebp; or al, 0x89; sal dh, 1; ret 0x7501; 
0x00164724: inc ebp; or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edx], ch; push edi; call dword ptr [eax + 0x14]; 
0x0007bc90: inc ebp; or byte ptr [ebp - 0x1ae63f7d], cl; call dword ptr [eax - 0x73]; 
0x0010fd01: inc ebp; or byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x0014b752: inc ebp; or byte ptr [ecx - 0x76efdbac], cl; ret 0xeac1; 
0x00164aac: inc ebp; or byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [edx], ch; push esi; call dword ptr [eax + 0x14]; 
0x0005363f: inc ebp; or byte ptr [edi], 0xb6; push eax; or al, 0x89; sal esi, 1; ret 0xf40; 
0x00052793: inc ebp; or byte ptr [edi], 0xb6; push eax; or al, 0xf6; ret 0xf40; 
0x0010c859: inc ebp; or byte ptr [edi], cl; inc esp; ret 0x4589; 
0x00192d4a: inc ebp; pop ebx; ret; 
0x0013c07c: inc ebp; ret 0x4389; 
0x0009b881: inc ebp; ret 0x4401; 
0x0002715f: inc ebp; ret 0x4489; 
0x0009246e: inc ebp; ret 0x45c7; 
0x00075926: inc ebp; ret 0x4689; 
0x00049fd2: inc ebp; ret 0x548b; 
0x000eac3d: inc ebp; ret 0x5e5b; 
0x00083e62: inc ebp; ret 0x66c3; 
0x0007f902: inc ebp; ret 0x689; 
0x000d70b3: inc ebp; ret 0x8dc3; 
0x000dfe5c: inc ebp; ret 0x90c3; 
0x000dfd0d: inc ebp; ret 0xb8c3; 
0x0003e779: inc ebp; ret 0xb9eb; 
0x0011cad4: inc ebp; ret 0xc084; 
0x000a1703: inc ebp; ret 0xc289; 
0x0012d2a0: inc ebp; ret 0xc35b; 
0x00091254: inc ebp; ret 0xc3c3; 
0x0009eb3c: inc ebp; ret 0xc483; 
0x001218e4: inc ebp; ret 0xd231; 
0x00170502: inc ebp; ret 0xe0c1; 
0x0007221c: inc ebp; ret 0xec83; 
0x0002613f: inc ebp; ret 0xf289; 
0x000fd2ad: inc ebp; ret; 
0x000a02d6: inc ebp; rol byte ptr [ebp - 0x3a76f040], 1; add byte ptr [eax], al; add byte ptr [ebx + 0x4d89ac55], cl; aam 0x29; ret 0xb48d; 
0x00155324: inc ebp; rol byte ptr [ebx - 0x7f72f714], 1; into; popal; stc; call dword ptr [eax + 0x56]; 
0x00077501: inc ebp; rol byte ptr [ebx - 0x95f714], 0xff; aaa; call dword ptr [eax + 0xc]; 
0x0004b85d: inc ebp; rol byte ptr [ecx], 1; ret 0x458b; 
0x0013f0cb: inc ebp; ror byte ptr [ebx + 0x489d05d], 0x37; mov eax, 6; call dword ptr gs:[0x10]; 
0x001313de: inc ebp; ror byte ptr [edi], 1; xchg esp, eax; rol dword ptr [ebp - 0x278a760a], 0xf; sahf; ret 0xd108; 
0x0007b19e: inc ebp; salc; mov dword ptr [ecx], edx; pop ebx; pop esi; ret; 
0x000f7aeb: inc ebp; sbb al, 0x89; ret 0xeac0; 
0x00144e68: inc ebp; sbb al, 0x89; test dword ptr [ebx + edi*8 + 0x458bffff], edi; and byte ptr [ecx - 0x4477b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00086819: inc ebp; sbb byte ptr [ebx + 0x488b685e], cl; add al, 0x8b; adc byte ptr [eax + 0xf1], bh; call dword ptr gs:[0x10]; 
0x000d8ae9: inc ebp; sbb byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x00167fc5: inc ebp; sbb byte ptr [ecx - 0x837b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000da03a: inc ebp; stc; call dword ptr [eax + 0x53]; 
0x000ccfda: inc ebp; stc; call dword ptr [eax + 0x56]; 
0x000cd56a: inc ebp; stc; call dword ptr [eax - 0x18]; 
0x000cd56a: inc ebp; stc; call dword ptr [eax - 0x18]; lodsd eax, dword ptr [esi]; ret; 
0x000db09f: inc ebp; stc; call dword ptr [eax - 0x73]; 
0x000239c3: inc ebp; stc; call dword ptr [eax - 1]; 
0x000dad15: inc ebp; stc; call dword ptr [ecx + 0x50]; 
0x00048374: inc ebp; stc; dec dword ptr [ebx - 0x1336e]; jmp dword ptr [esi - 0x77]; 
0x000f778c: inc ebp; sub al, 0x39; sal byte ptr [esi + ecx - 0x77], 1; ret 0xf189; 
0x0010e9c7: inc ebp; sub byte ptr [ebx - 0x6bf0fc07], al; ret; 
0x00066082: inc ebp; sub byte ptr [ecx - 0x8d36b], cl; dec dword ptr [ecx - 0x8b743]; dec dword ptr [ecx - 0x8c37b]; jmp dword ptr [ebp - 0x5f]; 
0x0013f1f9: inc ebp; test byte ptr [ecx], al; ret 0x3883; 
0x00141f2d: inc ebp; xchg dword ptr [ebx - 0x68f0f008], eax; ret; 
0x000f77a1: inc ebp; xor byte ptr [ecx], bh; sal byte ptr [ebx + ecx - 0x77], 1; ret 0xf189; 
0x0008795e: inc ebx; aas; stc; call dword ptr [eax - 0x18]; 
0x00079bc6: inc ebx; adc al, 0x29; ror byte ptr [ecx + 0x8c48301], 1; xor eax, eax; pop ebx; ret; 
0x0012c848: inc ebx; adc al, 0x31; rol byte ptr [ebp - 0x3db7f040], cl; add esp, 8; pop ebx; ret; 
0x0015a094: inc ebx; adc al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x0007b116: inc ebx; adc al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0008b353: inc ebx; adc al, 0x83; ret; 
0x0014d194: inc ebx; adc al, 0x89; ret 0xc985; 
0x0013c046: inc ebx; adc al, 3; inc ebx; adc byte ptr [ecx], bh; ret 0x6273; 
0x001588e4: inc ebx; adc bh, bh; je 0x15890d; adc al, 0x56; call dword ptr [eax + 4]; 
0x0015b210: inc ebx; adc byte ptr [ebp + 0x53890450], cl; adc bl, ch; ret; 
0x0015b19a: inc ebx; adc byte ptr [ebx + 0x1b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0013c049: inc ebx; adc byte ptr [ecx], bh; ret 0x6273; 
0x001589df: inc ebx; adc byte ptr [edx], ch; push esi; call dword ptr [eax + 0x14]; 
0x0016f91e: inc ebx; add al, 0x2b; inc ebx; add al, 0x83; ret; 
0x001040f3: inc ebx; add al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00150da4: inc ebx; add al, 0x50; call edi; 
0x001590e7: inc ebx; add al, 0x53; call dword ptr [eax + 0x10]; 
0x0015f194: inc ebx; add al, 0x56; push ebx; call dword ptr [eax + 0x24]; 
0x001596e7: inc ebx; add al, 0x5a; push edi; push ebx; call dword ptr [eax + 0x14]; 
0x0009a62a: inc ebx; add al, 0x5b; pop esi; pop edi; ret; 
0x001596b1: inc ebx; add al, 0x83; in al, dx; or al, 0x53; call dword ptr [eax + 0x10]; 
0x000308d2: inc ebx; add al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0015920e: inc ebx; add al, 0x83; les edx, ptr [ebx + edx*2]; call dword ptr [eax + 0x10]; 
0x0002d7aa: inc ebx; add al, 0x83; ret; 
0x000f6039: inc ebx; add al, 0x89; ret 0xe283; 
0x0015b04c: inc ebx; add al, 0xff; je 0x15b075; sbb al, 0x53; call dword ptr [eax]; 
0x0015b09c: inc ebx; add al, 0xff; je 0x15b0c5; sbb al, 0x53; call dword ptr [eax + 4]; 
0x00140912: inc ebx; add al, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x000e5e64: inc ebx; add bl, byte ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x00119978: inc ebx; add byte ptr [eax], al; add esp, 8; mov eax, 1; pop ebx; ret; 
0x001a1196: inc ebx; add byte ptr [eax], al; call 0x20140; add esp, 0x18; pop ebx; ret; 
0x00025745: inc ebx; add ecx, dword ptr [edi]; dec ecx; ret; 
0x000dde40: inc ebx; add esp, 0x34; pop ebx; pop esi; ret; 
0x0002ed3b: inc ebx; and byte ptr [esi + 0x17], dh; mov edx, dword ptr [ebx + eax*4 + 0x24]; pop ebx; mov eax, edx; ret; 
0x0009a54e: inc ebx; and byte ptr [esi + ecx - 0x7d], dh; in al, dx; or byte ptr [ecx - 1], dl; jae 0x9a57d; call eax; 
0x000ec25f: inc ebx; cmp al, 0x8b; inc ebx; sbb al, 0x89; ret 0xc085; 
0x00123d0e: inc ebx; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x00123aae: inc ebx; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x82; call dword ptr gs:[0x10]; 
0x0010c25e: inc ebx; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xa; call dword ptr gs:[0x10]; 
0x0006bdd5: inc ebx; idiv edi; jmp dword ptr [eax]; 
0x000d8d74: inc ebx; int1; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00048df4: inc ebx; jmp dword ptr [eax]; 
0x001589d8: inc ebx; or al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x6a1043], cl; push esi; call dword ptr [eax + 0x14]; 
0x001309a4: inc ebx; or al, 0x56; mov dword ptr [ebp - 0x44], eax; push 0; push 0x1000006; call edx; 
0x00130856: inc ebx; or al, 0x56; mov dword ptr [ebp - 0x44], eax; push dword ptr [ebp - 0xbc]; push 0; call edx; 
0x0016e951: inc ebx; or al, 0x83; les ebp, ptr [eax]; pop ebx; ret; 
0x0008236a: inc ebx; or al, 0x83; les ebx, ptr [eax]; pop ebx; ret; 
0x0015a16f: inc ebx; or al, 0x83; ret; 
0x000908c1: inc ebx; or al, 0x89; fiadd dword ptr [ebp - 0x76e58b40]; ret; 
0x0008921b: inc ebx; or al, 0x89; ret 0xe281; 
0x001639e4: inc ebx; or bh, bh; je 0x163a0d; adc al, 0x53; call dword ptr [eax]; 
0x00163bd3: inc ebx; or bh, bh; je 0x163bfc; sbb al, 0x53; call dword ptr [eax + 0xc]; 
0x0014527e: inc ebx; or byte ptr [eax + 0x92], bh; mov dword ptr [ebx + 0xc], 1; add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x0008bf1d: inc ebx; or byte ptr [ebp - 0x7ced8b40], al; in al, dx; or al, 0xff; jae 0x8bf2d; call dword ptr [ebx]; 
0x00081eb9: inc ebx; or byte ptr [ebx + 0x10891851], cl; add esp, 4; pop ebx; pop esi; ret; 
0x0007b110: inc ebx; or byte ptr [ebx + 0x43891043], cl; adc al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0008226d: inc ebx; or byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret; 
0x000e5d3c: inc ebx; or byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00081ed1: inc ebx; or byte ptr [ecx + 0x4c48308], cl; pop ebx; pop esi; ret; 
0x00104b44: inc ebx; or byte ptr [ecx], bh; ret 0x840f; 
0x0015d69d: inc ebx; or byte ptr [ecx], bh; ror byte ptr [edi], 1; dec edi; ret 0x8966; 
0x00173b94: inc ebx; push 0xffffffff; add esp, 4; pop ebx; pop esi; ret; 
0x00160865: inc ebx; push eax; lea edx, [esp + 0xac]; push edx; push esi; call dword ptr [eax + 4]; 
0x00160849: inc ebx; push eax; push dword ptr [ebx + 0x48]; push dword ptr [esp + 0x2c]; push esi; call dword ptr [eax + 0xc]; 
0x0003b8f6: inc ebx; push es; pop ebx; ret; 
0x000357d8: inc ebx; ret 0xec83; 
0x0016f281: inc ebx; ret 0xfa83; 
0x0006b229: inc ebx; ret; 
0x000cd68e: inc ebx; ror dword ptr [ecx + 0x3db8ab], 1; add byte ptr [ecx + 0x3db083], cl; add byte ptr [ecx], bh; ret 0x870f; 
0x000ec280: inc ebx; sbb al, 0x83; ret 0x3901; 
0x0009c438: inc ebx; sbb al, 0x83; ret; 
0x000ec262: inc ebx; sbb al, 0x89; ret 0xc085; 
0x0013c0af: inc ebx; sbb byte ptr [ebx - 0x3776fb3c], al; pop ebx; pop esi; ret; 
0x000372e5: inc ebx; sbb byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x0007f403: inc ebx; sbb byte ptr [ecx - 0x3fceefbd], cl; add esp, 4; pop ebx; pop esi; ret; 
0x000921a9: inc ebx; sbb byte ptr [edx], cl; add byte ptr [ebx - 0x78726f83], cl; sbb al, 0x84; stc; call dword ptr [eax - 0x73]; 
0x001500e5: inc ebx; stc; call dword ptr [eax + 0x52]; 
0x0009b367: inc ebx; stc; call dword ptr [eax + 0x57]; 
0x0013ab84: inc ebx; stc; call dword ptr [eax + 0x6a]; 
0x000b6716: inc ebx; stc; call dword ptr [eax - 0x18]; 
0x0009a268: inc ebx; stc; call dword ptr [eax - 0x73]; 
0x0013dbe3: inc ebx; stc; call dword ptr [eax - 1]; 
0x0009a1af: inc ebx; stc; call dword ptr [ebx + 0x50]; 
0x000a24d7: inc ebx; stc; call dword ptr [ecx + 0x50]; 
0x00160260: inc ebx; stc; call dword ptr [esi + 0x57]; 
0x0009a5f7: inc ebx; sub byte ptr [ecx], al; jne 0x9a5d0; sub esp, 0xc; push eax; call edx; 
0x00073b4d: inc ebx; sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x0011d75c: inc ebx; sub esp, 4; push edi; push 1; push ebx; call esi; 
0x0007646f: inc ebx; xor byte ptr [ecx + 0x30738906], cl; add esp, 4; pop ebx; pop esi; ret; 
0x0012371f: inc ebx; xor ebp, ebp; and esp, 0xfffffff0; sub esp, 0xc; push esi; call edx; 
0x00083942: inc ecx; adc al, 0x39; ret 0x1074; 
0x00090b76: inc ecx; adc byte ptr [ecx + 0x5e5b1042], cl; ret; 
0x00090afa: inc ecx; adc byte ptr [ecx + 0x5e5b104e], cl; ret; 
0x0016659f: inc ecx; add al, 0x52; push ecx; call dword ptr [eax + 0x24]; 
0x00165b2f: inc ecx; add al, 0x52; push ecx; call dword ptr [eax + 4]; 
0x000a8196: inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; pop edi; ret; 
0x000a82d6: inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; ret; 
0x000a3db6: inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edi; pop edi; ret; 
0x000a3ee6: inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x0002c0cc: inc ecx; add al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0011e061: inc ecx; add al, 0x89; ret 0xe083; 
0x000f1009: inc ecx; add al, 0x89; ret; 
0x000dfee6: inc ecx; add byte ptr [eax + esi + 0x31], dh; rol byte ptr [ecx - 0x52053106], 0x1b; setne al; ret; 
0x0005934e: inc ecx; add byte ptr [eax - 0x73], dl; cmp byte ptr [edi + 0x31], 0xf9; call dword ptr [eax - 0x18]; 
0x000df615: inc ecx; add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x000a3eb7: inc ecx; add cl, byte ptr [eax - 0x2f76fdbe]; ret; 
0x000b256a: inc ecx; add cl, byte ptr [eax - 0x776fdbe]; pop ebx; pop edi; ret; 
0x000a3d97: inc ecx; add cl, byte ptr [eax - 0x776fdbe]; pop edi; ret; 
0x00144a7d: inc ecx; add cl, byte ptr [ecx - 0x393e9907]; or byte ptr [ecx], ch; fldenv [esi - 0x3f]; ret 0xf08; 
0x000868c8: inc ecx; add dword ptr [eax], eax; add byte ptr [ebp - 0x6c13179], cl; call dword ptr [eax - 0x73]; 
0x000e95f1: inc ecx; add dword ptr [ebx + 0x5e], ebx; ret; 
0x000acafb: inc ecx; add eax, 0x42130f66; add eax, 0x5f0c428d; ret; 
0x000b268e: inc ecx; add eax, 0x42130f66; add eax, 0x5f5bf889; ret; 
0x000a81b5: inc ecx; add ecx, dword ptr [ecx + 0x428d0342]; push es; pop edi; ret; 
0x000a82e5: inc ecx; add ecx, dword ptr [ecx + 0x428d0342]; push es; ret; 
0x000a3ef5: inc ecx; add ecx, dword ptr [ecx - 0x2f76fcbe]; ret; 
0x000b25d8: inc ecx; add ecx, dword ptr [ecx - 0x776fcbe]; pop ebx; pop edi; ret; 
0x000a3dc5: inc ecx; add ecx, dword ptr [ecx - 0x776fcbe]; pop edi; ret; 
0x0014737a: inc ecx; add esp, 0x1c; ret; 
0x0002e59e: inc ecx; and byte ptr [ecx], bh; ret 0x4d0f; 
0x00116fb0: inc ecx; clc; pop ds; add esp, 8; pop ebx; ret; 
0x00139b61: inc ecx; inc dword ptr [ecx + 0x200f9]; add byte ptr [edi], cl; inc esp; ret 0x4589; 
0x0009cec8: inc ecx; inc dword ptr [ecx]; ret; 
0x000e0663: inc ecx; inc edi; stc; call dword ptr [eax - 0x18]; 
0x000b5412: inc ecx; inc edx; test al, al; jne 0xb540c; xor eax, eax; ret; 
0x001480b8: inc ecx; je 0x1480a6; or ecx, dword ptr [ebp + 0x3c002674]; or dword ptr [edx + ecx - 0x7d], esi; ret; 
0x0009af64: inc ecx; jge 0x9af69; lea edx, [edx - 0x17c220]; cmovne eax, edx; ret; 
0x0009b074: inc ecx; jge 0x9b079; lea edx, [edx - 0x187850]; cmovne eax, edx; ret; 
0x0009b424: inc ecx; jge 0x9b429; lea edx, [edx - 0x179f20]; cmovne eax, edx; ret; 
0x0009b4b4: inc ecx; jge 0x9b4b9; lea edx, [edx - 0x186000]; cmovne eax, edx; ret; 
0x0009c184: inc ecx; jge 0x9c189; lea edx, [edx - 0x183480]; cmovne eax, edx; ret; 
0x0009c1d4: inc ecx; jge 0x9c1d9; lea edx, [edx - 0x181c10]; cmovne eax, edx; ret; 
0x000b5ac1: inc ecx; jge 0xb5ac6; cmovne eax, edx; ret; 
0x0009b0b1: inc ecx; jle 0x9b0c4; cmovne eax, edx; ret; 
0x0009b531: inc ecx; jle 0x9b544; cmovne eax, edx; ret; 
0x0009b661: inc ecx; jle 0x9b674; cmovne eax, edx; ret; 
0x0009543e: inc ecx; jmp dword ptr [ecx]; 
0x000a3549: inc ecx; jmp dword ptr [esi + 0xf]; 
0x0007b059: inc ecx; or al, 0x31; rol byte ptr [ebp - 0x3d6af040], cl; mov eax, edx; ret; 
0x00130f67: inc ecx; or al, 0x56; mov dword ptr [ebp - 0x44], eax; push edi; push dword ptr [ebp - 0xc0]; call edx; 
0x000ab57b: inc ecx; or byte ptr [eax - 0x2f76f7be], cl; ret; 
0x000b260c: inc ecx; or byte ptr [eax - 0x776f7be], cl; pop ebx; pop edi; ret; 
0x000ab41b: inc ecx; or byte ptr [eax - 0x776f7be], cl; pop edi; ret; 
0x000f4e1b: inc ecx; or byte ptr [ebp + 0x390474c0], al; ret 0xcb75; 
0x000c4624: inc ecx; or byte ptr [ebx + 0x418901c0], al; or byte ptr [edi], cl; nop; ret 0x4e8b; 
0x0011df92: inc ecx; or byte ptr [ecx + 0x418b0447], cl; add al, 0x89; ret; 
0x000ab5db: inc ecx; or byte ptr [ecx - 0x2f76f7be], cl; ret; 
0x000b266c: inc ecx; or byte ptr [ecx - 0x776f7be], cl; pop ebx; pop edi; ret; 
0x000ab47b: inc ecx; or byte ptr [ecx - 0x776f7be], cl; pop edi; ret; 
0x00168194: inc ecx; or byte ptr [ecx], bh; ret 0x2675; 
0x00169644: inc ecx; or byte ptr [ecx], bh; ret 0x4675; 
0x00167a49: inc ecx; or byte ptr [ecx], bh; ret 0x5175; 
0x000c462a: inc ecx; or byte ptr [edi], cl; nop; ret 0x4e8b; 
0x000ac9ca: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; lea eax, [edx + 0xf]; pop edi; ret; 
0x000accbb: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; lea eax, [edx + 0xf]; ret; 
0x000ab38a: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; mov eax, edi; pop edi; ret; 
0x000ab65b: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; mov eax, edx; ret; 
0x000a8305: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000a3f15: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000a8365: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000a3f75: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000a8326: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000a3f36: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x001383c2: inc ecx; pop edx; stc; call dword ptr [eax - 0x18]; 
0x00138563: inc ecx; pop edx; stc; call dword ptr [eax - 0x73]; 
0x000acabb: inc ecx; pop es; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x000acc1b: inc ecx; pop es; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000ab45b: inc ecx; pop es; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000ab5bb: inc ecx; pop es; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000acb3b: inc ecx; pop es; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000acc9b: inc ecx; pop es; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000ab4db: inc ecx; pop es; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000ab63b: inc ecx; pop es; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000a8345: inc ecx; pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000a3f55: inc ecx; pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000a5e37: inc ecx; pop es; pop ebx; ret; 
0x00196d81: inc ecx; pop es; ret; 
0x00196dd1: inc ecx; push cs; ret; 
0x000acb1b: inc ecx; push es; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000acc7b: inc ecx; push es; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000ab4bb: inc ecx; push es; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000ab61b: inc ecx; push es; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000a5e27: inc ecx; push es; pop ebx; ret; 
0x00196d71: inc ecx; push es; ret; 
0x0014daa8: inc ecx; pushal; stc; call dword ptr [eax - 0x18]; 
0x0012c550: inc ecx; sbb al, 0x39; sal byte ptr [edx + 0xa], 1; mov eax, 1; ret; 
0x00094d3c: inc ecx; stc; call dword ptr [eax - 0x18]; 
0x000949c0: inc ecx; stc; jmp dword ptr [ebp - 0x5f]; 
0x0015b047: inc ecx; sub esp, 8; mov eax, dword ptr [ebx + 4]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax]; 
0x000590af: inc ecx; xor bh, cl; call dword ptr [ecx + 0x50]; 
0x00083bee: inc ecx; xor esi, esi; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0012c3e0: inc edi; adc al, 0x29; ret; 
0x00083cc8: inc edi; adc al, 0x39; ret 0x1074; 
0x0007600a: inc edi; adc al, 0x5e; pop edi; jmp eax; 
0x000ad94f: inc edi; adc al, 0x5f; pop esi; pop ebx; ret; 
0x000353dd: inc edi; adc al, 0x89; ret; 
0x00066a0d: inc edi; adc al, 0x8b; pop edi; sbb byte ptr [ecx], ch; ret; 
0x000ad911: inc edi; adc bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x000ad8d9: inc edi; adc byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0007616a: inc edi; adc byte ptr [esi + 0x5f], bl; jmp eax; 
0x0016fa0d: inc edi; adc byte ptr [esi - 0x3f], ah; call 0x10163619; test byte ptr [ebp - 0x76ffffff], ah; ret 0xb60f; 
0x000ad8ef: inc edi; adc dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x000ad92f: inc edi; adc ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x00094b4f: inc edi; add al, 0; add byte ptr [eax], al; add byte ptr [ebp + 0x39b774d2], al; ret 0xb374; 
0x00162e33: inc edi; add al, 0x51; push edi; call dword ptr [eax + 8]; 
0x00162e41: inc edi; add al, 0x57; call dword ptr [eax + 0x10]; 
0x000ad775: inc edi; add al, 0x5f; pop esi; pop ebx; ret; 
0x00195d31: inc edi; add al, 0x5f; ret; 
0x0015a459: inc edi; add al, 0x83; in eax, 0xfc; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x0011df95: inc edi; add al, 0x8b; inc ecx; add al, 0x89; ret; 
0x00171625: inc edi; add al, 0x8d; push 0x24448909; and al, 0x89; ret; 
0x000919a3: inc edi; add al, 0x8d; xor dword ptr [eax + 0x78], 0xffffffe6; call dword ptr [eax + 0x55]; 
0x00035414: inc edi; add al, 0xf; scasd eax, dword ptr es:[edi]; ret 0x6c8b; 
0x0003827a: inc edi; add al, 2; add byte ptr es:[eax], al; add byte ptr [eax - 1], bh; ret; 
0x000de95c: inc edi; add al, 2; push ss; add byte ptr [eax], al; add bl, ch; ret; 
0x000ad747: inc edi; add bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x0016707f: inc edi; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x000483f8: inc edi; add dword ptr [ecx], edi; ret 0x860f; 
0x000ad735: inc edi; add dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x000938e8: inc edi; add ebx, 1; mov eax, 0x116; call dword ptr gs:[0x10]; 
0x000ad75d: inc edi; add ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x00156b75: inc edi; add ecx, dword ptr [edi]; dec esi; ret 0xec83; 
0x00140b93: inc edi; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00147033: inc edi; add esp, 0x118; pop ebx; ret; 
0x0010b0c8: inc edi; add esp, 0x14; pop ebx; pop esi; ret; 
0x001127d4: inc edi; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x000ea58b: inc edi; and al, 0x39; ret; 
0x000265e8: inc edi; and byte ptr [ecx - 0x9d3dbbc], cl; ret 0x7501; 
0x0012c1db: inc edi; and byte ptr [ecx], ch; fdivr dword ptr [ecx]; ret 0x8f0f; 
0x000adae3: inc edi; and byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000ac463: inc edi; call ptr [edi + 0x5e]; pop ebx; ret; 
0x000b4192: inc edi; call ptr [esi + 0x5f]; pop ebp; ret; 
0x00196173: inc edi; clc; pop edi; ret; 
0x0019619c: inc edi; cld; pop edi; ret; 
0x0007b9e5: inc edi; cli; inc dword ptr [ebx - 0x3fceeb3c]; pop ebx; pop esi; ret; 
0x00196211: inc edi; cli; pop edi; ret; 
0x001961d1: inc edi; cmc; pop edi; ret; 
0x00196149: inc edi; hlt; pop edi; ret; 
0x00050d1d: inc edi; inc dword ptr [ebx - 0x362f43]; call dword ptr [eax]; 
0x0008eb61: inc edi; inc dword ptr [ebx - 0x69f00208]; ret; 
0x000add32: inc edi; inc eax; pop edi; pop esi; pop ebx; ret; 
0x0016aea3: inc edi; inc edi; or al, 1; add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x858b; 
0x000f7dfa: inc edi; inc esi; adc al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x00141883: inc edi; inc esp; ret; 
0x001961a1: inc edi; int1; pop edi; ret; 
0x0016bca5: inc edi; jge 0x16bca4; jmp dword ptr [esi - 0x70]; 
0x000e34b5: inc edi; jnp 0xe34b3; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; xor eax, eax; ret; 
0x000ad8c3: inc edi; maxps xmm3, xmmword ptr [esi + 0x5b]; ret; 
0x00093408: inc edi; mov ebx, dword ptr [esp + 0x40]; mov edx, dword ptr [esp + 0x48]; mov eax, 0x118; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000ad85f: inc edi; or al, 0x5f; pop esi; pop ebx; ret; 
0x00195da1: inc edi; or al, 0x5f; ret; 
0x000fed78: inc edi; or al, 0x6a; and byte ptr [ebx - 0x6e363], cl; call dword ptr [edx - 0x77]; 
0x0010a9d0: inc edi; or al, 0x89; inc esp; and al, 0x28; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0008a6b1: inc edi; or al, 0x89; ret; 
0x000fb951: inc edi; or al, 0xeb; ret 0x768d; 
0x0016aea5: inc edi; or al, 1; add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x858b; 
0x00077c14: inc edi; or al, 1; ret 0xc101; 
0x000ad821: inc edi; or bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x0015ac39: inc edi; or byte ptr [ebp - 1], dl; jbe 0x15ac4b; push edi; call dword ptr [eax + 8]; 
0x0015ac7c: inc edi; or byte ptr [ebp - 1], dl; jbe 0x15ac8e; push edi; call dword ptr [eax + 0x10]; 
0x0011d6a7: inc edi; or byte ptr [ebx - 0x7cb3dbac], cl; ret; 
0x000e2420: inc edi; or byte ptr [ecx], bh; ret 0x830f; 
0x00103ea7: inc edi; or byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x000ad7e9: inc edi; or byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000ad7ff: inc edi; or dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x000ad83f: inc edi; or ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x000adac3: inc edi; pop ds; pop edi; pop esi; pop ebx; ret; 
0x00197ff8: inc edi; pop edi; pop esi; pop ebx; ret; 
0x001961b1: inc edi; pop edi; ret; 
0x000ad7cb: inc edi; pop es; pop edi; pop esi; pop ebx; ret; 
0x00195b5e: inc edi; pop es; pop edi; ret; 
0x000ad9b3: inc edi; pop ss; pop edi; pop esi; pop ebx; ret; 
0x000ad8a3: inc edi; push cs; pop edi; pop esi; pop ebx; ret; 
0x00195dc1: inc edi; push cs; pop edi; ret; 
0x000adaa3: inc edi; push ds; pop edi; pop esi; pop ebx; ret; 
0x00160db6: inc edi; push eax; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x000ac4d7: inc edi; push es; pop edi; pop esi; pop ebx; ret; 
0x00195d51: inc edi; push es; pop edi; ret; 
0x000ad993: inc edi; push ss; pop edi; pop esi; pop ebx; ret; 
0x00088334: inc edi; ret 0x4589; 
0x000a23c5: inc edi; ret 0x5350; 
0x000971ed: inc edi; ret 0x548b; 
0x000975ea: inc edi; ret 0x5c89; 
0x00111a9a: inc edi; ret 0x66c3; 
0x0008d7a0: inc edi; ret 0x8dc3; 
0x0008df25: inc edi; ret 0x948b; 
0x000cc5d5: inc edi; ret 0x960f; 
0x00099ac6: inc edi; ret 0xc083; 
0x000b44a3: inc edi; ret 0xf029; 
0x00138bcd: inc edi; ret 0xf983; 
0x000b4484: inc edi; ret; 
0x00094590: inc edi; ror dword ptr [ecx + 0x3b6c82], 0; ret; 
0x000d8f25: inc edi; sar byte ptr [eax + 0xdc], 1; call dword ptr gs:[0x10]; 
0x000ada69: inc edi; sbb al, 0x5f; pop esi; pop ebx; ret; 
0x00077c11: inc edi; sbb al, 0x89; inc edi; or al, 1; ret 0xc101; 
0x0012f5e7: inc edi; sbb al, 0x89; ret 0x572b; 
0x000ada1b: inc edi; sbb bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x000f70c9: inc edi; sbb byte ptr [ebx - 0x7cebdbb4], cl; ret; 
0x0012c3a9: inc edi; sbb byte ptr [ecx], ch; ret 0x5250; 
0x000ad9d3: inc edi; sbb byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000ad9f9: inc edi; sbb dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x000ada49: inc edi; sbb ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x00161ea5: inc edi; sbb edi, ebp; jmp dword ptr [esi - 0x70]; 
0x000df9fb: inc edi; stc; call dword ptr [eax + 0x53]; 
0x0007a7d4: inc edi; stc; call dword ptr [eax - 0x18]; 
0x000e17f6: inc edi; stc; call dword ptr [eax - 0x73]; 
0x000dfa58: inc edi; stc; call dword ptr [eax - 1]; 
0x00196201: inc edi; stc; pop edi; ret; 
0x00196231: inc edi; std; pop edi; ret; 
0x000b41b2: inc edi; std; pop esi; pop edi; pop ebp; ret; 
0x00196221: inc edi; sti; pop edi; ret; 
0x0006d445: inc edi; sub byte ptr [edi], al; add byte ptr [eax], al; add cl, ch; ret 0xffe5; 
0x000f63b3: inc edi; sub byte ptr [edi], cl; mov dh, 0x46; add al, 0x89; ret 0xe283; 
0x00127121: inc edi; test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x000e1d45: inc edi; test dword ptr [ebx + edi*8 - 1], esi; inc dword ptr [eax]; add byte ptr [eax], al; add cl, ch; ret 3; 
0x00195173: inc edi; test dword ptr [edi], 0x29f756b6; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x001667a6: inc edx; adc al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; ret; 
0x00090b79: inc edx; adc byte ptr [ebx + 0x5e], bl; ret; 
0x000a9f6e: inc edx; adc byte ptr [edi + 0x5b], bl; ret; 
0x0011274f: inc edx; add al, 0; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x00097529: inc edx; add al, 0x39; ret; 
0x001593af: inc edx; add al, 0x52; call dword ptr [eax + 0x10]; 
0x000a2133: inc edx; add al, 0x5b; pop esi; ret; 
0x000a9ec2: inc edx; add al, 0x5f; pop ebx; ret; 
0x000a818b: inc edx; add al, 0x5f; ret; 
0x000acbf8: inc edx; add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000ab598: inc edx; add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x00152d6e: inc edx; add al, 0x83; clc; add dword ptr [edi + 0xb], edi; ret; 
0x000bd2d1: inc edx; add al, 0x83; ret 0x8304; 
0x000b5dd1: inc edx; add al, 0x83; ret 0x8504; 
0x000e7bca: inc edx; add al, 0x83; ret 0xeb04; 
0x0011a9f2: inc edx; add al, 0x85; sal byte ptr [edx + eax - 0x77], 0x10; ret; 
0x0015930b: inc edx; add al, 0x89; adc al, 0x24; call dword ptr [eax + 0x10]; 
0x000b259b: inc edx; add al, 0x89; clc; pop ebx; pop edi; ret; 
0x000a3da8: inc edx; add al, 0x89; clc; pop edi; ret; 
0x001656f9: inc edx; add al, 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x00165711: inc edx; add al, 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x000a202b: inc edx; add al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000ab578: inc edx; add al, 0x8a; inc ecx; or byte ptr [eax - 0x2f76f7be], cl; ret; 
0x000ab418: inc edx; add al, 0x8a; inc ecx; or byte ptr [eax - 0x776f7be], cl; pop edi; ret; 
0x000ab5d8: inc edx; add al, 0x8b; inc ecx; or byte ptr [ecx - 0x2f76f7be], cl; ret; 
0x000ab478: inc edx; add al, 0x8b; inc ecx; or byte ptr [ecx - 0x776f7be], cl; pop edi; ret; 
0x00094b79: inc edx; add al, 0x8b; push edx; or byte ptr [ecx], al; lds edi, ptr [ecx]; ret; 
0x000a8188: inc edx; add al, 0x8d; inc edx; add al, 0x5f; ret; 
0x000ac979: inc edx; add al, 0x8d; inc edx; pop es; pop edi; ret; 
0x000acbc8: inc edx; add al, 0x8d; inc edx; pop es; ret; 
0x000894d5: inc edx; add al, 1; add esp, 0xc; ret; 
0x00058ba7: inc edx; add al, 1; add esp, 4; pop ebx; pop esi; ret; 
0x00058c01: inc edx; add al, 1; xor eax, eax; pop ebx; pop esi; ret; 
0x000a2046: inc edx; add al, byte ptr [eax]; pop ebx; pop esi; ret; 
0x000a5faa: inc edx; add cl, byte ptr [ecx + 0x3eb83d0]; lea ecx, [edx + 3]; jne 0xa5ed1; pop ebx; ret; 
0x00188a60: inc edx; add cl, byte ptr [edi]; mov bh, 8; mov word ptr [edx], cx; pop ebx; ret; 
0x00140486: inc edx; add dword ptr [eax + 2], edi; ret; 
0x0007e5b1: inc edx; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; test dword ptr [ebx], edi; stc; call dword ptr [eax - 0x18]; 
0x000b6213: inc edx; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x000a20fc: inc edx; add dword ptr [ebx + 0x5e], ebx; ret; 
0x000e5a8b: inc edx; add dword ptr [ebx - 0x3f7bfe3e], eax; jne 0xe5a61; xor eax, eax; ret; 
0x001889e0: inc edx; add dword ptr [edi], ecx; mov dh, 8; mov byte ptr [edx], cl; pop ebx; ret; 
0x000eb8a0: inc edx; add dword ptr [esi + ecx - 0x77], esi; ret; 
0x000acb00: inc edx; add eax, 0x5f0c428d; ret; 
0x000b2693: inc edx; add eax, 0x5f5bf889; ret; 
0x000a211f: inc edx; add ebx, dword ptr [ebx + 0x5e]; ret; 
0x000a6028: inc edx; add ecx, dword ptr [ecx + 0x7eb83d0]; lea ecx, [edx + 7]; jne 0xa5ed1; pop ebx; ret; 
0x0002556a: inc edx; add ecx, dword ptr [edi]; dec ecx; ret 0xec83; 
0x000906e4: inc edx; add esp, 0x124; pop ebx; pop esi; ret; 
0x00037c83: inc edx; add esp, 0x94; pop ebx; pop edi; ret; 
0x000fb8a8: inc edx; and byte ptr [ecx], al; rol dword ptr [ebp - 0x76f38b01], 1; ret 0x4089; 
0x00129171: inc edx; and edx, 0x1000; mov eax, edx; ret; 
0x001287ef: inc edx; and edx, 0x100; mov eax, edx; ret; 
0x00129071: inc edx; and edx, 0x2000; mov eax, edx; ret; 
0x00128e71: inc edx; and edx, 0x200; mov eax, edx; ret; 
0x00128f71: inc edx; and edx, 0x4000; mov eax, edx; ret; 
0x00128c71: inc edx; and edx, 0x400; mov eax, edx; ret; 
0x00128ef1: inc edx; and edx, 0x8000; mov eax, edx; ret; 
0x00128cf1: inc edx; and edx, 1; mov eax, edx; ret; 
0x00128d71: inc edx; and edx, 2; mov eax, edx; ret; 
0x00128ff1: inc edx; and edx, 4; mov eax, edx; ret; 
0x00128bf1: inc edx; and edx, 8; mov eax, edx; ret; 
0x00188532: inc edx; call 0x4096952b; clc; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x0017ae11: inc edx; call 0x42edbd7d; clc; pop ebx; ret; 
0x0017b471: inc edx; call 0x42edc3dd; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017ba11: inc edx; call 0x42edc97d; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017bf51: inc edx; call 0x42edcebd; clc; pop ebx; ret; 
0x0012d585: inc edx; call dword ptr [esi + 0x53]; 
0x0017b010: inc edx; clc; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017a9e0: inc edx; clc; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x0017b476: inc edx; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00180e90: inc edx; clc; mov eax, edx; pop ebx; ret; 
0x0017ae16: inc edx; clc; pop ebx; ret; 
0x0017b013: inc edx; cld; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00180eaa: inc edx; cld; mov eax, edx; pop ebx; ret; 
0x0017a9e3: inc edx; cld; pop ebx; ret; 
0x0017b053: inc edx; cli; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017aa23: inc edx; cli; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x0017aea6: inc edx; cmc; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0017a1aa: inc edx; cwde; sti; jmp dword ptr [esi - 0x70]; 
0x0017b057: inc edx; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0017b036: inc edx; dec dword ptr [ebx + 0x5b082444]; ret; 
0x000b4ba9: inc edx; dec dword ptr [edi]; test dword ptr [ebx + 0x5e000000], ebx; xor eax, eax; pop ebx; ret; 
0x000b4a9e: inc edx; dec dword ptr [edi]; test dword ptr [esi + 0x5e000001], esp; xor eax, eax; pop ebx; ret; 
0x0017b3fc: inc edx; fisub dword ptr [esi + 0xf]; jg 0x17b444; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0017b99c: inc edx; fisub dword ptr [esi + 0xf]; jg 0x17b9e4; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0017b566: inc edx; hlt; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017aee6: inc edx; hlt; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x0017a9dd: inc edx; hlt; mov dword ptr [edx - 8], eax; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x00188300: inc edx; hlt; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x0017b3a1: inc edx; in al, dx; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017ad51: inc edx; in al, dx; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x001887e2: inc edx; in al, dx; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x0017ad21: inc edx; in eax, dx; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x000a1b01: inc edx; inc dword ptr [eax]; mov dword ptr [esi], edx; pop ebx; pop esi; ret; 
0x0008ec56: inc edx; inc dword ptr [ebx - 0x69f00208]; ret; 
0x0011151e: inc edx; inc edx; xor eax, eax; ret; 
0x0002145a: inc edx; inc esi; mov eax, 0x744c7139; sbb dword ptr [ebp - 0x1ae26f70], ecx; jmp dword ptr [ebp + 0x33]; 
0x000dca7b: inc edx; inc esi; stc; call dword ptr [eax - 0x18]; 
0x000dcc0e: inc edx; inc esi; stc; call dword ptr [eax - 0x73]; 
0x00058eea: inc edx; ja 0x58eea; inc dword ptr [ebx - 0x72aff33c]; test dword ptr [edi + 0x32], ebx; stc; call dword ptr [eax + 0x56]; 
0x000c167a: inc edx; jecxz 0xc1673; dec dword ptr [ebx - 0x72dbdb84]; xchg dword ptr [edi + edx*4], esp; stc; call dword ptr [eax - 0x73]; 
0x00087c7a: inc edx; jge 0x87c77; dec dword ptr [ebx - 0x7872dbc4]; movsb byte ptr es:[edi], byte ptr [esi]; jg 0x87c7f; call dword ptr [eax + 0x68]; 
0x0017ade1: inc edx; jmp 0x6710f070; mov dword ptr [edx - 3], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0017bf21: inc edx; jmp 0x671101b0; mov dword ptr [edx - 3], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00095c37: inc edx; jmp dword ptr [ecx]; 
0x0017ab82: inc edx; jo 0x17ab06; ret 0x80; 
0x0017abe9: inc edx; jo 0x17ab6d; ret 0x80; 
0x0017ac3b: inc edx; jo 0x17abbf; ret 0x80; 
0x0017b1d2: inc edx; jo 0x17b156; ret 0x80; 
0x0017b239: inc edx; jo 0x17b1bd; ret 0x80; 
0x0017b28b: inc edx; jo 0x17b20f; ret 0x80; 
0x0008fbea: inc edx; js 0x8fbe7; jmp dword ptr [esi - 0x70]; 
0x001984ed: inc edx; lea eax, [edi - 0x10]; pop edi; ret; 
0x0017b401: inc edx; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x001658aa: inc edx; loope 0x1658a9; jmp dword ptr [esi - 0x70]; 
0x0016afaa: inc edx; mov bh, ah; dec dword ptr [ebx - 0xf34b]; dec dword ptr [ebp - 0x64c2b7a]; call dword ptr [eax - 0x73]; 
0x000650fa: inc edx; mov ch, 0xff; call dword ptr [eax - 0x75]; 
0x0017aa1d: inc edx; mov dword ptr [edx - 0xa], eax; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x0017b5a6: inc edx; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017af16: inc edx; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0017b5e6: inc edx; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017af46: inc edx; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x0017a9fd: inc edx; mov dword ptr [edx - 9], eax; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0017ee56: inc edx; movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00180e86: inc edx; movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x00188336: inc edx; movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x0017b4e6: inc edx; mul byte ptr [esi - 0x77]; inc edx; dec byte ptr [ebx + 0x5b082444]; ret; 
0x000a9f2f: inc edx; or al, 0x5f; pop ebx; ret; 
0x000a8233: inc edx; or al, 0x5f; ret; 
0x000513d6: inc edx; or al, 0x83; les ebx, ptr [eax]; mov eax, edx; pop ebx; ret 4; 
0x00032a98: inc edx; or al, 0x83; ret 0x8908; 
0x0012eadf: inc edx; or al, 0x89; ret; 
0x00188956: inc edx; or bl, dh; movd dword ptr [eax], mm0; movq qword ptr [edx], xmm0; pop ebx; ret; 
0x00116101: inc edx; or byte ptr [0x100f], ah; ret; 
0x00058c37: inc edx; or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edi + 0x1f88302], al; jg 0x58c48; ret; 
0x000a9f2c: inc edx; or byte ptr [ebp + 0x5b5f0c42], cl; ret; 
0x0008313d: inc edx; or byte ptr [ebp - 0x3a], ah; add eax, 0x4fe; add byte ptr [ebp - 0x77], ah; adc eax, 0x7c; ret; 
0x000c7020: inc edx; or byte ptr [ebx - 0x363743], al; call dword ptr [eax]; 
0x00081569: inc edx; or byte ptr [ebx - 0x37c6ebb6], cl; cmovb eax, ecx; sub eax, dword ptr [edx + 0xc]; ret; 
0x000a606c: inc edx; or byte ptr [ecx + 0x9eb83d0], cl; lea ecx, [edx + 9]; jne 0xa5ed1; pop ebx; ret; 
0x000a608e: inc edx; or byte ptr [ecx + 0xaeb83d0], cl; lea ecx, [edx + 0xa]; jne 0xa5ed1; pop ebx; ret; 
0x000a60cc: inc edx; or byte ptr [ecx + 0xceb83d0], cl; lea ecx, [edx + 0xc]; jne 0xa5ed1; pop ebx; ret; 
0x000fdd23: inc edx; or byte ptr [ecx - 0x6d76b], cl; call dword ptr [eax - 1]; 
0x0016b225: inc edx; or byte ptr [ecx], al; ret; 
0x000a9ef4: inc edx; or byte ptr [edi + 0x5b], bl; ret; 
0x0017b341: inc edx; out dx, al; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017acf1: inc edx; out dx, al; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x001886c2: inc edx; out dx, al; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; pop ebx; ret; 
0x0017b311: inc edx; out dx, eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017acc1: inc edx; out dx, eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00188612: inc edx; out dx, eax; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x000ab00e: inc edx; pop es; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000a820c: inc edx; pop es; lea eax, [edx + 0xa]; pop edi; ret; 
0x000a834c: inc edx; pop es; lea eax, [edx + 0xa]; ret; 
0x000acb40: inc edx; pop es; lea eax, [edx + 0xe]; pop edi; ret; 
0x000acca0: inc edx; pop es; lea eax, [edx + 0xe]; ret; 
0x000b264f: inc edx; pop es; mov eax, edi; pop ebx; pop edi; ret; 
0x000a3e1c: inc edx; pop es; mov eax, edi; pop edi; ret; 
0x000a3f5c: inc edx; pop es; mov eax, edx; ret; 
0x000a20ee: inc edx; pop es; pop ebx; pop esi; ret; 
0x000a80b9: inc edx; pop es; pop edi; ret; 
0x000a82f9: inc edx; pop es; ret; 
0x0018c8a3: inc edx; pop es; sub eax, ecx; pop ebp; ret; 
0x0018b0f6: inc edx; pop es; sub eax, ecx; ret; 
0x00065c7a: inc edx; popfd; cld; jmp dword ptr [esi - 0x70]; 
0x000aaf36: inc edx; push cs; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000a8273: inc edx; push cs; pop edi; ret; 
0x000a83d3: inc edx; push cs; ret; 
0x000a2089: inc edx; push es; add byte ptr [ecx + 0x5bd08902], cl; pop esi; ret; 
0x000a2159: inc edx; push es; add byte ptr [ecx + 0x6428d02], cl; pop ebx; pop esi; ret; 
0x000acb20: inc edx; push es; lea eax, [edx + 0xd]; pop edi; ret; 
0x000acc80: inc edx; push es; lea eax, [edx + 0xd]; ret; 
0x000b26b3: inc edx; push es; mov eax, edi; pop ebx; pop edi; ret; 
0x000ab4c0: inc edx; push es; mov eax, edi; pop edi; ret; 
0x000ab620: inc edx; push es; mov eax, edx; ret; 
0x000a215f: inc edx; push es; pop ebx; pop esi; ret; 
0x000a81bb: inc edx; push es; pop edi; ret; 
0x000a82eb: inc edx; push es; ret; 
0x0018c97f: inc edx; push es; sub eax, ecx; pop ebp; ret; 
0x0018b166: inc edx; push es; sub eax, ecx; ret; 
0x00154d7b: inc edx; ret 0x4489; 
0x001408b1: inc edx; ret 0x8dc3; 
0x0012599c: inc edx; ret 0x90c3; 
0x001463c0: inc edx; ret 0xb60f; 
0x00032b7b: inc edx; ret 0xc189; 
0x000b440e: inc edx; ret 0xf289; 
0x0017af37: inc edx; ret 0xf66; 
0x000335dd: inc edx; ret; 
0x00138bc4: inc edx; rol byte ptr [ebx - 0x77ca816], 1; or dword ptr [edi], ecx; inc edi; ret 0xf983; 
0x000eaa6d: inc edx; sbb al, 0x39; ret; 
0x0008c6db: inc edx; sbb dword ptr [ecx], esi; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0017aa43: inc edx; stc; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0015f702: inc edx; std; jmp dword ptr [esi - 0x70]; 
0x0017b077: inc edx; std; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017aa47: inc edx; std; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0017b033: inc edx; sti; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017aa03: inc edx; sti; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0016ec88: inc edx; sub al, 0x83; les esi, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x00023bb5: inc edx; sub bh, cl; call dword ptr [eax - 0x18]; 
0x0011273f: inc edx; sub byte ptr [esi + 0x5f], bl; ret; 
0x000b5413: inc edx; test al, al; jne 0xb540c; xor eax, eax; ret; 
0x0017b050: inc edx; test byte ptr [ecx - 0x769905be], 0x42; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0017ef10: inc edx; test dword ptr [edi], 0x88ff48b6; dec edx; dec dword ptr [ebx + 0x5b082444]; ret; 
0x00115fb6: inc edx; xor al, 0x5b; pop esi; pop edi; ret; 
0x0010fb8e: inc edx; xor eax, eax; ret; 
0x0018cbbc: inc esi; aam 9; add byte ptr [ebx - 0x677d], cl; jmp dword ptr [ebp - 0x75]; 
0x000f7dfc: inc esi; adc al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x00120771: inc esi; adc al, 0x8d; adc edx, 0x52; stc; dec dword ptr [eax - 0x6c72f7aa]; ret 0xf952; 
0x0002df09: inc esi; adc byte ptr [ebp - 0x7cf68b40], al; in al, dx; or al, 0x56; call eax; 
0x0007cd24: inc esi; adc byte ptr [esi + 0x5f], bl; jmp eax; 
0x000ce976: inc esi; adc dh, dh; dec dword ptr [ebp - 0x666db7d]; call dword ptr [eax - 0x73]; 
0x0006528d: inc esi; add al, 0; add byte ptr [ebp - 0x6cd907a], cl; call dword ptr [eax - 0x73]; 
0x00080c06: inc esi; add al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x001655f4: inc esi; add al, 0x52; push ebp; push esi; call dword ptr [eax + 0xc]; 
0x0016562c: inc esi; add al, 0x52; push ebp; push esi; call dword ptr [eax + 8]; 
0x00165611: inc esi; add al, 0x53; push edx; push esi; call dword ptr [eax + 0xc]; 
0x00165649: inc esi; add al, 0x53; push edx; push esi; call dword ptr [eax + 8]; 
0x00165e98: inc esi; add al, 0x53; push esi; call dword ptr [eax + 4]; 
0x000ee161: inc esi; add al, 0x83; ret; 
0x0007cb02: inc esi; add al, 0x89; inc esi; or byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0011d9a3: inc esi; add al, 0x89; ret 0xe083; 
0x000f63b7: inc esi; add al, 0x89; ret 0xe283; 
0x0007d700: inc esi; add al, 0x8b; push esi; or byte ptr [ecx], ch; ret 0xfa39; 
0x00120a99: inc esi; add byte ptr [eax], al; add esp, 0x18; mov eax, ebx; pop ebx; ret; 
0x00127713: inc esi; add byte ptr [eax], al; add word ptr [edx + eax*2], 1; ret; 
0x0012770b: inc esi; add byte ptr [eax], al; jae 0x12771b; mov edx, dword ptr [ecx + 0x4628]; add word ptr [edx + eax*2], 1; ret; 
0x00095616: inc esi; add dword ptr [eax], eax; add byte ptr [ebx + 0x44c90], cl; add byte ptr [ecx], bh; ret; 
0x0015717d: inc esi; add dword ptr [ebp + 0x3c89017e], ecx; and al, 0x84; ror byte ptr [edi], 0x95; ret 0x3a3c; 
0x000b5368: inc esi; add ebx, dword ptr [esi + 0x5f]; ret; 
0x000379f9: inc esi; add esp, 0x14; pop ebx; pop esi; ret; 
0x0007fbf0: inc esi; and byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; jmp eax; 
0x0012be9d: inc esi; and byte ptr [ebx - 0xf76fb3c], al; pop ebx; pop esi; ret; 
0x0007d209: inc esi; and byte ptr [ecx], ch; rol byte ptr [ebx + 0x525004ec], 1; push esi; call ecx; 
0x0014e7b9: inc esi; bnd call dword ptr [ebx + 0x50]; 
0x0011e7e9: inc esi; call eax; 
0x0016f2f1: inc esi; cld; jmp dword ptr [esi - 0x70]; 
0x00161bee: inc esi; cmp al, 0x83; in al, dx; or al, 0x55; call dword ptr [eax + 0x10]; 
0x00075929: inc esi; cmp al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00072fa9: inc esi; cmp byte ptr [ecx], bh; ret; 
0x0017434f: inc esi; int1; dec dword ptr [ebp + 0xb6]; add byte ptr [eax + 0x16], bh; pop ebx; ret; 
0x000fb30b: inc esi; into; call dword ptr gs:[0x10]; 
0x00087e69: inc esi; iretd; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x00152bbc: inc esi; je 0x152bcc; add byte ptr [ebx - 0x77], dl; ret; 
0x00027a76: inc esi; jg 0x27a79; add byte ptr [ebx - 0x72c7db84], cl; xchg eax, esp; jo 0x27a7c; call dword ptr [eax - 0x73]; 
0x000496b4: inc esi; jmp dword ptr [eax]; 
0x00099073: inc esi; jmp dword ptr [ecx]; 
0x00088a76: inc esi; ljmp 0:0xb68d80eb; add byte ptr [eax], al; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x000217bc: inc esi; mov byte ptr [eax], ah; add byte ptr [ebx - 0x77], dl; ret; 
0x0002145b: inc esi; mov eax, 0x744c7139; sbb dword ptr [ebp - 0x1ae26f70], ecx; jmp dword ptr [ebp + 0x33]; 
0x001308bc: inc esi; or al, 0x53; mov dword ptr [ebp - 0x44], eax; push 0; push 0x1000005; call edx; 
0x0015b2d4: inc esi; or al, 0x83; les eax, ptr [ecx + eax]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x00080c03: inc esi; or al, 0x89; inc esi; add al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00171101: inc esi; or bl, ch; xchg eax, ebp; out 0x28, al; cld; jmp dword ptr [esi - 0x70]; 
0x001204bd: inc esi; or byte ptr [eax - 0x7c72ebba], cl; ret; 
0x0007c590: inc esi; or byte ptr [ecx + 0x4c483f0], cl; pop ebx; pop esi; ret; 
0x0003ac13: inc esi; or byte ptr [ecx + 0xc5689f0], cl; add esp, 0x34; pop ebx; pop esi; ret 4; 
0x00080c15: inc esi; or byte ptr [ecx - 0x3fcefbba], cl; pop ebx; pop esi; pop edi; ret; 
0x00151aa1: inc esi; or byte ptr [ecx], bh; ret 0x1074; 
0x0007cb05: inc esi; or byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x000dfdc4: inc esi; pop eax; mov eax, 0x20; mov edx, 0x40; cmove eax, edx; ret; 
0x000dfed8: inc esi; push ebx; setne al; ret; 
0x0011fa1a: inc esi; push ebx; stc; call dword ptr [eax + 0x57]; 
0x00191c2b: inc esi; ret 0x5d5e; 
0x0009b1f4: inc esi; ret 0xc3eb; 
0x0014023e: inc esi; ret 0xec83; 
0x000b4430: inc esi; ret 0xf029; 
0x0009a0b0: inc esi; ret 0xfa89; 
0x00082750: inc esi; sal byte ptr [ecx], 1; sar byte ptr [ebx], 0x54; and al, 4; setae al; ret; 
0x000f02f8: inc esi; sbb al, 0x39; ret; 
0x0012f414: inc esi; sbb al, 0x89; ret 0x562b; 
0x00156de4: inc esi; sbb byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x000961c4: inc esi; sbb byte ptr [ecx], bh; ret 0x850f; 
0x00023b30: inc esi; sbb byte ptr [edi], cl; mov bh, 0x83; shr byte ptr [esi - 7], 1; jmp dword ptr [esi - 0x77]; 
0x000dc444: inc esi; stc; call dword ptr [eax + 0x56]; 
0x000df910: inc esi; stc; call dword ptr [eax + 0x6a]; 
0x000dca7c: inc esi; stc; call dword ptr [eax - 0x18]; 
0x000dcc0f: inc esi; stc; call dword ptr [eax - 0x73]; 
0x000df94b: inc esi; stc; call dword ptr [ebx + 0x50]; 
0x000dc5a6: inc esi; stc; call dword ptr [ecx - 1]; 
0x000dc60c: inc esi; stc; call dword ptr [edi - 1]; 
0x0011fb6d: inc esi; sub byte ptr [eax + 4], bh; pop ebx; pop esi; pop edi; ret; 
0x00080cb0: inc esi; sub byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0007f46a: inc esi; sub byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x001959a9: inc esi; test dh, 0x40; jne 0x1959f4; add eax, 0xf; ret; 
0x0005d958: inc esi; test dword ptr [edx + edi*8 - 1], eax; jmp dword ptr [ebp + 0x31]; 
0x00024846: inc esi; xor byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x000e9f0b: inc esi; xor byte ptr [ecx], bh; ret 0x4e0f; 
0x000b43a4: inc esp; adc al, dh; ret; 
0x000b43d4: inc esp; adc byte ptr [eax], ah; ret; 
0x0015a37c: inc esp; adc byte ptr [eax], ch; push eax; push edi; call dword ptr [ecx + 0x18]; 
0x000b43c4: inc esp; adc byte ptr [eax], dl; ret; 
0x000930b5: inc esp; add al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0014d7f1: inc esp; add al, byte ptr [eax]; add byte ptr [ebp - 0x6a02a7e], cl; call dword ptr [eax - 0x73]; 
0x00099afe: inc esp; add al, byte ptr [ebx + eax*4]; jmp 0x1ea1e0b; cmovne eax, ecx; pop ebx; ret; 
0x0008eaba: inc esp; add bh, bh; pop esi; pop edi; pop ebp; ret; 
0x000dff38: inc esp; add bh, bh; ret; 
0x0011b319: inc esp; add byte ptr [eax], al; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0011b3ab: inc esp; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0002015d: inc esp; add byte ptr [eax], al; endbr32; jmp dword ptr [ebx + 0xc]; 
0x0011d334: inc esp; add byte ptr [eax], al; push eax; call 0x11d4d0; add esp, 0x1c; ret; 
0x0008fe9d: inc esp; add byte ptr [edx], al; ret; 
0x00140b05: inc esp; add cl, byte ptr [eax]; pop ebx; ret; 
0x000b439b: inc esp; add dh, byte ptr [eax]; ret; 
0x0006f406: inc esp; add dword ptr [eax], eax; add byte ptr [eax], al; add edx, dword ptr [esi + eax*4]; jmp edx; 
0x0006e807: inc esp; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0015fc86: inc esp; add dword ptr [eax], eax; add byte ptr [ecx - 0x12f7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00150e25: inc esp; add dword ptr [eax], eax; add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000b3fdb: inc esp; add dword ptr [eax], edx; ret; 
0x000b3ffb: inc esp; add dword ptr [eax], esi; ret; 
0x000b3feb: inc esp; add dword ptr [eax], esp; ret; 
0x00081a1a: inc esp; add eax, dword ptr [eax]; add byte ptr [ebp + 0x72840fc0], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x736d], cl; jmp dword ptr [ebp - 0x5f]; 
0x001624e2: inc esp; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x00132d99: inc esp; and al, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x00036ed5: inc esp; and al, 0x10; and eax, 0x80000000; ret; 
0x00074ca9: inc esp; and al, 0x10; call dword ptr [eax + 0x1c]; 
0x00173752: inc esp; and al, 0x10; call dword ptr [eax + 0x40]; 
0x00170469: inc esp; and al, 0x10; call eax; 
0x00035e36: inc esp; and al, 0x10; fld xword ptr [esp + 4]; fadd st(0); mov dword ptr [eax], ecx; ret; 
0x00035da5: inc esp; and al, 0x10; fld xword ptr [esp + 4]; fscale; fstp st(1); ret; 
0x00035e2b: inc esp; and al, 0x10; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0017a985: inc esp; and al, 0x10; mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x00127a4a: inc esp; and al, 0x10; mov eax, dword ptr [eax + 0x4c]; call 0x127920; add esp, 4; ret; 
0x00125315: inc esp; and al, 0x10; mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00124a26: inc esp; and al, 0x10; mov eax, dword ptr [esp + 0x40]; mov dword ptr [esp + 0x14], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00087eca: inc esp; and al, 0x10; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x0009e03a: inc esp; and al, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00029572: inc esp; and al, 0x10; push es; add byte ptr [eax], al; add cl, ch; ret 0xfffe; 
0x00142332: inc esp; and al, 0x10; sub eax, ebx; add esp, 8; pop ebx; ret; 
0x0012d030: inc esp; and al, 0x14; add eax, 0x2000001; push eax; call dword ptr [edi + 0x14]; 
0x0011c1b1: inc esp; and al, 0x14; call dword ptr gs:[0x10]; 
0x00021514: inc esp; and al, 0x14; call eax; 
0x000d75d4: inc esp; and al, 0x14; lea ecx, [esp + 4]; mov dword ptr [esp + 8], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x00124a2e: inc esp; and al, 0x14; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00124965: inc esp; and al, 0x14; mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00124da5: inc esp; and al, 0x14; mov eax, dword ptr [esp + 0x44]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00075341: inc esp; and al, 0x14; pop ebx; pop esi; pop edi; ret; 
0x00089815: inc esp; and al, 0x18; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0015f875: inc esp; and al, 0x18; call dword ptr [eax + 0x10]; 
0x0006a9a2: inc esp; and al, 0x18; call dword ptr [eax + 0x1c]; 
0x0016138f: inc esp; and al, 0x18; call eax; 
0x00158681: inc esp; and al, 0x18; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x001254fe: inc esp; and al, 0x18; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x001254b0: inc esp; and al, 0x18; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x0012496d: inc esp; and al, 0x18; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001261f8: inc esp; and al, 0x18; or esi, 0x100; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0007cb68: inc esp; and al, 0x18; push eax; push esi; call dword ptr [edi + 0x48]; 
0x000da06f: inc esp; and al, 0x1c; call 0x16ed20; add esp, 0x10; mov eax, dword ptr [esp + 0xc]; call eax; 
0x000658e2: inc esp; and al, 0x1c; call dword ptr [eax + 0x1c]; 
0x0009423b: inc esp; and al, 0x1c; mov dword ptr [esp], eax; call esi; 
0x00124e56: inc esp; and al, 0x1c; mov eax, dword ptr [esp + 0x60]; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0008dff1: inc esp; and al, 0x1c; mov eax, dword ptr [esp + 0xb8]; mov dword ptr [esp + 0x20], eax; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x000331cf: inc esp; and al, 0x1c; push dword ptr [eax]; call 0xb44b0; add esp, 0x1c; ret; 
0x0016569c: inc esp; and al, 0x1c; sub eax, dword ptr gs:[0x14]; jne 0x1656ac; add esp, 0x2c; ret; 
0x0006de53: inc esp; and al, 0x20; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x0006de03: inc esp; and al, 0x20; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x0012cdad: inc esp; and al, 0x20; call dword ptr [eax + 0x14]; 
0x000392aa: inc esp; and al, 0x20; call eax; 
0x0008dffc: inc esp; and al, 0x20; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x000388d6: inc esp; and al, 0x20; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x00068c33: inc esp; and al, 0x24; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x00068bdb: inc esp; and al, 0x24; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x00163848: inc esp; and al, 0x24; add eax, 0x51000000; push eax; call dword ptr [edx + 0xc]; 
0x00082104: inc esp; and al, 0x24; call eax; 
0x00124792: inc esp; and al, 0x24; mov dword ptr [esp + 0x38], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001243ee: inc esp; and al, 0x24; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001248cf: inc esp; and al, 0x24; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0015a7e1: inc esp; and al, 0x28; call dword ptr [eax + 0x18]; 
0x000778f8: inc esp; and al, 0x28; call dword ptr [eax + 0x40]; 
0x0012c954: inc esp; and al, 0x28; call eax; 
0x00093f5f: inc esp; and al, 0x28; cmove esi, edi; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x0012452e: inc esp; and al, 0x28; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00124e5e: inc esp; and al, 0x28; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000916ab: inc esp; and al, 0x28; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0010a9d3: inc esp; and al, 0x28; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x001246d6: inc esp; and al, 0x28; mov eax, dword ptr [esp + 0x64]; mov dword ptr [esp + 0x2c], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0007c7ff: inc esp; and al, 0x28; push eax; push esi; call dword ptr [edi + 0x48]; 
0x0013bf29: inc esp; and al, 0x2c; call eax; 
0x001246de: inc esp; and al, 0x2c; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00058874: inc esp; and al, 0x30; call eax; 
0x0012482e: inc esp; and al, 0x30; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00093b14: inc esp; and al, 0x34; add al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0006f421: inc esp; and al, 0x34; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x000cb181: inc esp; and al, 0x34; call eax; 
0x0012478e: inc esp; and al, 0x34; lea eax, [esp + 0x24]; mov dword ptr [esp + 0x38], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00078c83: inc esp; and al, 0x34; push eax; call ebx; 
0x000b644d: inc esp; and al, 0x34; push eax; push dword ptr [esi + 8]; call ebx; 
0x0011632e: inc esp; and al, 0x37; mov eax, dword ptr [esp + 0x84]; lea ecx, [eax + 0x5402]; mov eax, edi; call dword ptr gs:[0x10]; 
0x0006e7d0: inc esp; and al, 0x38; add dword ptr [eax], eax; add byte ptr [eax], al; add edx, dword ptr [esi + eax*4]; jmp edx; 
0x0006f451: inc esp; and al, 0x38; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0012449f: inc esp; and al, 0x38; mov dword ptr [esp + 0xc], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00124ad9: inc esp; and al, 0x38; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00124796: inc esp; and al, 0x38; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000da3df: inc esp; and al, 0x38; push eax; push dword ptr [esp + 0x24]; push dword ptr [esp + 0x30]; call ebx; 
0x0006e84b: inc esp; and al, 0x3c; and byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x0015ddfd: inc esp; and al, 0x3c; call eax; 
0x00124969: inc esp; and al, 0x3c; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001636b5: inc esp; and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x1636c5; add esp, 0x4c; ret; 
0x00163725: inc esp; and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x163735; add esp, 0x4c; ret; 
0x00163795: inc esp; and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x1637a5; add esp, 0x4c; ret; 
0x001637f8: inc esp; and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x163808; add esp, 0x4c; ret; 
0x00163858: inc esp; and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x163868; add esp, 0x4c; ret; 
0x001638c5: inc esp; and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x1638d5; add esp, 0x4c; ret; 
0x00163945: inc esp; and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x163955; add esp, 0x4c; ret; 
0x0006e4c0: inc esp; and al, 0x40; add dword ptr [eax], eax; add byte ptr [eax], al; add edx, dword ptr [esi + eax*4]; jmp edx; 
0x0006f411: inc esp; and al, 0x40; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0015dbae: inc esp; and al, 0x40; call eax; 
0x00124a2a: inc esp; and al, 0x40; mov dword ptr [esp + 0x14], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000c4ec9: inc esp; and al, 0x40; push dword ptr [eax]; call edi; 
0x000b62ff: inc esp; and al, 0x40; push eax; push dword ptr [edi]; call ebx; 
0x00077795: inc esp; and al, 0x40; push eax; push dword ptr [esp + 0x18]; call dword ptr [edi + 0x48]; 
0x000930b3: inc esp; and al, 0x44; add al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0006f404: inc esp; and al, 0x44; add dword ptr [eax], eax; add byte ptr [eax], al; add edx, dword ptr [esi + eax*4]; jmp edx; 
0x0006e805: inc esp; and al, 0x44; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x00025bbd: inc esp; and al, 0x44; call eax; 
0x00124da9: inc esp; and al, 0x44; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0015fbb7: inc esp; and al, 0x48; call dword ptr [eax + 0x10]; 
0x0015fa55: inc esp; and al, 0x48; call dword ptr [eax + 0x14]; 
0x00024aa7: inc esp; and al, 0x48; call eax; 
0x0006e743: inc esp; and al, 0x4c; add dword ptr [eax], eax; add byte ptr [eax], al; add edx, dword ptr [esi + eax*4]; jmp edx; 
0x0006f3a1: inc esp; and al, 0x4c; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x00027243: inc esp; and al, 0x4c; call eax; 
0x00069749: inc esp; and al, 0x4e; and byte ptr [ecx], dh; rol byte ptr [eax - 0x6bf0a705], cl; ret 0xff52; 
0x000499d8: inc esp; and al, 0x50; add byte ptr [edi], cl; xchg esp, eax; ret; 
0x000fc328: inc esp; and al, 0x57; add byte ptr [eax - 0x73], dl; sub edi, 0x48; stc; call dword ptr [eax - 0x18]; 
0x0006e557: inc esp; and al, 0x5c; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x0006f381: inc esp; and al, 0x5c; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x000cb7b7: inc esp; and al, 0x5c; call eax; 
0x001162a7: inc esp; and al, 0x5c; xor eax, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00124e5a: inc esp; and al, 0x60; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0006e6f8: inc esp; and al, 0x64; add dword ptr [eax], eax; add byte ptr [eax], al; add edx, dword ptr [esi + eax*4]; jmp edx; 
0x0006f391: inc esp; and al, 0x64; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x001246da: inc esp; and al, 0x64; mov dword ptr [esp + 0x2c], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000b6a65: inc esp; and al, 0x64; mov dword ptr [esp + 0x34], edx; push eax; push edi; call esi; 
0x000b70c9: inc esp; and al, 0x64; push eax; push esi; call ebx; 
0x00069397: inc esp; and al, 0x68; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x00122836: inc esp; and al, 0x68; mov eax, dword ptr [edx + 0xa0]; mov dword ptr [esp + 0x6c], eax; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x00028c94: inc esp; and al, 0x68; push eax; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; call esi; 
0x00122840: inc esp; and al, 0x6c; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x0002623b: inc esp; and al, 0x6c; push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x5c]; call edi; 
0x00037a34: inc esp; and al, 0xc; add esp, 0x14; pop ebx; pop esi; ret; 
0x00087f8f: inc esp; and al, 0xc; add esp, 0x18; pop ebx; ret; 
0x0009a3ff: inc esp; and al, 0xc; call dword ptr [edx]; 
0x000da07b: inc esp; and al, 0xc; call eax; 
0x0002ccac: inc esp; and al, 0xc; call edx; 
0x0003619c: inc esp; and al, 0xc; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00035c1a: inc esp; and al, 0xc; fld xword ptr [esp + 4]; ret; 
0x000843f7: inc esp; and al, 0xc; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x000d77fc: inc esp; and al, 0xc; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x001244a3: inc esp; and al, 0xc; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0010a34c: inc esp; and al, 0xc; mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0009a341: inc esp; and al, 0xc; mov eax, dword ptr [eax - 0x148]; call dword ptr [eax]; 
0x0011636f: inc esp; and al, 0xc; mov eax, edi; call dword ptr gs:[0x10]; 
0x00126c39: inc esp; and al, 0xc; mov edx, dword ptr [edx]; mov dword ptr [eax], edx; mov eax, 1; ret; 
0x00117468: inc esp; and al, 0xc; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00117638: inc esp; and al, 0xc; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x00035be5: inc esp; and al, 0xc; or eax, 0xffff8000; inc eax; shr eax, 0x1f; ret; 
0x000b3183: inc esp; and al, 0xc; pop ebx; pop esi; ret; 
0x00197823: inc esp; and al, 0xc; pop edi; ret; 
0x00026811: inc esp; and al, 0xc; push es; add byte ptr [eax], al; add cl, ch; ret; 
0x00151306: inc esp; and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x151316; add esp, 0x1c; ret; 
0x00163e33: inc esp; and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x163e43; add esp, 0x1c; ret; 
0x00163e82: inc esp; and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x163ebc; add esp, 0x1c; ret; 
0x0003b6e8: inc esp; and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x3b6f8; add esp, 0x1c; ret; 
0x0003b73b: inc esp; and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x3b74b; add esp, 0x1c; ret; 
0x00166b35: inc esp; and al, 4; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x0013faf5: inc esp; and al, 4; add eax, 9; and eax, 0xfffffff8; add eax, 0xc; ret; 
0x00084761: inc esp; and al, 4; and dword ptr [eax + 8], 0xfffffffb; xor eax, eax; ret; 
0x0007be85: inc esp; and al, 4; and dword ptr [eax], 0xffffffcf; ret; 
0x0002fdc5: inc esp; and al, 4; and eax, 0x7f; ret; 
0x00133a65: inc esp; and al, 4; and eax, 0xffff; ror ax, 8; ret; 
0x00133a55: inc esp; and al, 4; bswap eax; ret; 
0x0009c0fb: inc esp; and al, 4; cmove eax, edx; add eax, 1; ret; 
0x000829a0: inc esp; and al, 4; cmp dword ptr [eax], 1; je 0x829b0; ret; 
0x000362ea: inc esp; and al, 4; fld dword ptr [esp + 4]; ret; 
0x0004ca66: inc esp; and al, 4; fld qword ptr [esp]; add esp, 0xc; ret; 
0x0014f3f7: inc esp; and al, 4; jmp 0x151480; nop; xor eax, eax; ret; 
0x0015d887: inc esp; and al, 4; jmp edx; 
0x0015d887: inc esp; and al, 4; jmp edx; lea esi, [esi]; endbr32; ret; 
0x0008e065: inc esp; and al, 4; lock dec dword ptr [eax]; jne 0x8e070; xor eax, eax; ret; 
0x00104feb: inc esp; and al, 4; mov dword ptr [eax + 0x108], edx; xor eax, eax; ret; 
0x00104fd3: inc esp; and al, 4; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x00084871: inc esp; and al, 4; mov dword ptr [eax + 0x14], edx; xor eax, eax; ret; 
0x0008d6e5: inc esp; and al, 4; mov dword ptr [eax], 0; mov dword ptr [eax + 4], 0; xor eax, eax; ret; 
0x00084b85: inc esp; and al, 4; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x0008e0a5: inc esp; and al, 4; mov dword ptr [eax], 1; xor eax, eax; ret; 
0x000361a0: inc esp; and al, 4; mov dword ptr [eax], ecx; ret; 
0x000d7490: inc esp; and al, 4; mov eax, 0x108; mov dword ptr [esp + 8], ecx; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x001243f2: inc esp; and al, 4; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0014df95: inc esp; and al, 4; mov eax, dword ptr [eax + 0x10]; ret; 
0x00166b75: inc esp; and al, 4; mov eax, dword ptr [eax + 0x14]; ret; 
0x00164651: inc esp; and al, 4; mov eax, dword ptr [eax + 0x30]; add eax, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x00080eb5: inc esp; and al, 4; mov eax, dword ptr [eax + 0x34]; ret; 
0x001719a5: inc esp; and al, 4; mov eax, dword ptr [eax + 0x4c]; ret; 
0x001719c5: inc esp; and al, 4; mov eax, dword ptr [eax + 0x50]; ret; 
0x00171a55: inc esp; and al, 4; mov eax, dword ptr [eax + 0x54]; ret; 
0x00171a45: inc esp; and al, 4; mov eax, dword ptr [eax + 0x58]; ret; 
0x001719d5: inc esp; and al, 4; mov eax, dword ptr [eax + 0x5c]; ret; 
0x00091b55: inc esp; and al, 4; mov eax, dword ptr [eax + 0x64]; ret; 
0x001160d5: inc esp; and al, 4; mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x00171989: inc esp; and al, 4; mov eax, dword ptr [eax + edx*4]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x0007b0c5: inc esp; and al, 4; mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x0007b075: inc esp; and al, 4; mov eax, dword ptr [eax]; and eax, 0x804; ret; 
0x00094390: inc esp; and al, 4; mov eax, dword ptr [eax]; cmp eax, 0x3fc; jbe 0x943a0; ret; 
0x00094570: inc esp; and al, 4; mov eax, dword ptr [eax]; cmp eax, 0x50; jbe 0x94580; ret; 
0x000943d0: inc esp; and al, 4; mov eax, dword ptr [eax]; cmp eax, 0xffff; jbe 0x943e0; ret; 
0x000d9105: inc esp; and al, 4; mov eax, dword ptr [eax]; ret; 
0x0007be95: inc esp; and al, 4; mov eax, dword ptr [eax]; shr eax, 4; and eax, 1; ret; 
0x0007beb5: inc esp; and al, 4; mov eax, dword ptr [eax]; shr eax, 5; and eax, 1; ret; 
0x001248cb: inc esp; and al, 4; mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012452a: inc esp; and al, 4; mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00166b55: inc esp; and al, 4; mov edx, dword ptr [esp + 0xc]; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x001719b5: inc esp; and al, 4; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x00084645: inc esp; and al, 4; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x00104465: inc esp; and al, 4; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x00080b75: inc esp; and al, 4; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x00171965: inc esp; and al, 4; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x0002df85: inc esp; and al, 4; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x00104435: inc esp; and al, 4; mov word ptr [eax], dx; xor eax, eax; ret; 
0x00035fae: inc esp; and al, 4; ret; 
0x00087dd9: inc esp; and al, 4; sete al; movzx eax, al; ret; 
0x0007eef5: inc esp; and al, 4; test byte ptr [eax], 0x80; jne 0x7ef00; ret; 
0x0007b085: inc esp; and al, 4; test byte ptr [eax], 4; sete al; movzx eax, al; ret; 
0x0007b0a5: inc esp; and al, 4; test byte ptr [eax], 8; sete al; movzx eax, al; ret; 
0x000de7df: inc esp; and al, 8; call edx; 
0x000b4d66: inc esp; and al, 8; cld; pop edi; ret; 
0x00087dd5: inc esp; and al, 8; cmp dword ptr [esp + 4], eax; sete al; movzx eax, al; ret; 
0x00036454: inc esp; and al, 8; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00035faa: inc esp; and al, 8; fld qword ptr [esp + 4]; ret; 
0x000842fc: inc esp; and al, 8; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x00086685: inc esp; and al, 8; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000d75dc: inc esp; and al, 8; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x00093460: inc esp; and al, 8; mov eax, 0x118; call dword ptr gs:[0x10]; 
0x000ddb68: inc esp; and al, 8; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x00109c71: inc esp; and al, 8; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x001118c1: inc esp; and al, 8; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x000934b0: inc esp; and al, 8; mov eax, 0x1a3; call dword ptr gs:[0x10]; 
0x000386bf: inc esp; and al, 8; mov eax, 0x1a5; call dword ptr gs:[0x10]; 
0x00124532: inc esp; and al, 8; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00125a8b: inc esp; and al, 8; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00125b9a: inc esp; and al, 8; mov eax, 0x75; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x00038667: inc esp; and al, 8; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x0010a95d: inc esp; and al, 8; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0012449b: inc esp; and al, 8; mov eax, dword ptr [esp + 0x38]; mov dword ptr [esp + 0xc], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0013eb36: inc esp; and al, 8; mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; 
0x00181497: inc esp; and al, 8; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x0011754e: inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x0011771e: inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x00103b4e: inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x00103c2e: inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x00071a5c: inc esp; and al, 8; mov edx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x0002ff75: inc esp; and al, 8; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0002ff95: inc esp; and al, 8; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00093728: inc esp; and al, 8; mov esi, dword ptr [esp + 0x4c]; mov eax, 0x117; call dword ptr gs:[0x10]; 
0x00093778: inc esp; and al, 8; mov esi, dword ptr [esp + 0x4c]; mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x000374f0: inc esp; and al, 8; mov esp, ecx; jmp edx; 
0x0010440c: inc esp; and al, 8; mov word ptr [eax], dx; xor eax, eax; ret; 
0x00076425: inc esp; and al, 8; pop ebx; ret; 
0x000b4d3c: inc esp; and al, 8; pop edi; ret; 
0x000afd53: inc esp; and al, 8; pop esi; ret; 
0x00070ded: inc esp; and al, 8; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x0002ffe0: inc esp; and al, 8; ret; 
0x00058385: inc esp; and al, 8; rol byte ptr [ecx], 0; add cl, ch; call dword ptr [edi]; 
0x00162101: inc esp; and al, 8; sub esp, 0xc; mov ecx, dword ptr [edx + 4]; push edx; call dword ptr [ecx + 0x10]; 
0x0007dc37: inc esp; call 0x6f426; jmp dword ptr [esi - 0x70]; 
0x00025bbf: inc esp; call eax; 
0x000b3cb4: inc esp; cmp al, dh; pop edi; ret; 
0x000b3ce4: inc esp; cmp byte ptr [eax], ah; pop edi; ret; 
0x000b3cd4: inc esp; cmp byte ptr [eax], dl; pop edi; ret; 
0x000c46c8: inc esp; cwde; stc; call dword ptr [eax - 0x18]; 
0x000eb3b6: inc esp; dec eax; stc; call dword ptr [eax + 0x55]; 
0x000dc603: inc esp; fld dword ptr [ebx - 0x72affb14]; xchg byte ptr [eax], bl; inc esi; stc; call dword ptr [edi - 1]; 
0x00093f63: inc esp; idiv dword ptr [eax + 0x104]; call dword ptr gs:[0x10]; 
0x00087b78: inc esp; jle 0x87b75; dec dword ptr [ebx - 0x7972dbcc]; xchg esp, eax; jg 0x87b7d; call dword ptr [eax - 0x73]; 
0x000fb1d9: inc esp; lea ecx, [esp + 0xc]; mov eax, 0x1a7; call dword ptr gs:[0x10]; 
0x00122404: inc esp; lea edx, [esp + 0xc]; mov ebx, dword ptr [esp + 0x50]; call dword ptr gs:[0x10]; 
0x001661e9: inc esp; mov bl, 0xf9; call dword ptr [eax - 0x73]; 
0x00124dab: inc esp; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0016ec86: inc esp; mov eax, dword ptr [edx + 0x2c]; add esp, 0x34; pop ebx; pop esi; jmp eax; 
0x0010bcbb: inc esp; mov eax, edx; pop ebx; pop esi; ret; 
0x001164e9: inc esp; mov ebx, dword ptr [esp + 0x40]; lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000d70f8: inc esp; mov ebx, dword ptr [esp + 0x40]; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0011f5ba: inc esp; mov ecx, dword ptr [esp + 8]; mov dword ptr [ecx], eax; mov eax, 1; ret; 
0x0019fb9f: inc esp; mov word ptr [eax - 0x7d], ss; ret 0x8920; 
0x0002f7b3: inc esp; nop; inc eax; ret; 
0x00068e41: inc esp; or al, ah; mov ecx, dword ptr [edx + eax*4 - 0x737e0]; add ecx, ebp; jmp ecx; 
0x00069141: inc esp; or al, ah; mov ecx, dword ptr [edx + eax*4 - 0x73860]; add ecx, ebp; jmp ecx; 
0x000693da: inc esp; or al, ah; mov ecx, dword ptr [edx + eax*4 - 0x738e0]; add ecx, ebp; jmp ecx; 
0x0006933a: inc esp; or al, ah; mov ecx, dword ptr [edx + eax*4 - 0x739e0]; add ecx, ebp; jmp ecx; 
0x00068d8a: inc esp; or al, ah; mov ecx, dword ptr [edx + eax*4]; add ecx, ebp; jmp ecx; 
0x000b3fa4: inc esp; or byte ptr [eax], ah; ret; 
0x000b3fb4: inc esp; or byte ptr [eax], dh; ret; 
0x000b3f94: inc esp; or byte ptr [eax], dl; ret; 
0x0006e78a: inc esp; pavgb mm1, qword ptr [ebx - 0x768fdb8c]; fiadd dword ptr [ebx]; adc al, 0x86; jmp edx; 
0x0011f652: inc esp; pop ebx; ret; 
0x0017fb88: inc esp; pop es; add dword ptr [edi - 0x18], ebx; push 0x81ffff22; ret; 
0x00181e88: inc esp; pop es; add ebx, dword ptr [edi - 0x18]; push 0x81fffeff; ret; 
0x00182f08: inc esp; pop es; maxps xmm5, xmm0; call 0x82182e00; ret; 
0x0017e488: inc esp; pop es; or byte ptr [edi - 0x18], bl; push 0x81ffff39; ret; 
0x00180608: inc esp; pop es; or dword ptr [edi - 0x18], ebx; call 0x82180529; ret; 
0x00182988: inc esp; pop es; or ebx, dword ptr [edi - 0x18]; push 0x81fffef4; ret; 
0x00152229: inc esp; popal; stc; call dword ptr [ebx - 0x73]; 
0x0004c243: inc esp; popfd; add byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x0012d29b: inc esp; push ecx; add dword ptr [eax + 0xf], eax; inc ebp; ret 0xc35b; 
0x000eaff8: inc esp; push ecx; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00069999: inc esp; push edi; call dword ptr [eax + 0x1c]; 
0x000698ae: inc esp; push edi; call dword ptr [ebx + 0x1c]; 
0x0015ddfa: inc esp; push esi; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x000c5b1a: inc esp; push ss; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x00130fdf: inc esp; rcl dword ptr [eax - 0x73], 0x87; salc; push edi; stc; call dword ptr [eax - 1]; 
0x000c5096: inc esp; ret 0x108b; 
0x0008bd3e: inc esp; ret 0x118b; 
0x000378bb: inc esp; ret 0x24e9; 
0x000e0cc4: inc esp; ret 0x31c3; 
0x0004904b: inc esp; ret 0x3c83; 
0x00045678: inc esp; ret 0x4489; 
0x000b6784: inc esp; ret 0x44c7; 
0x0010c85c: inc esp; ret 0x4589; 
0x000d154c: inc esp; ret 0x4789; 
0x0003f36f: inc esp; ret 0x489; 
0x0007cc98: inc esp; ret 0x568b; 
0x00098f6c: inc esp; ret 0x568d; 
0x001569fe: inc esp; ret 0x5e5b; 
0x0009afb8: inc esp; ret 0x66c3; 
0x0012c224: inc esp; ret 0x7789; 
0x000eda31: inc esp; ret 0x804; 
0x0004e39a: inc esp; ret 0x8589; 
0x0010f2df: inc esp; ret 0x8966; 
0x000b6945: inc esp; ret 0x8b65; 
0x000dadc1: inc esp; ret 0x8d50; 
0x0008475a: inc esp; ret 0x8dc3; 
0x000dfcec: inc esp; ret 0x90c3; 
0x000dfc8d: inc esp; ret 0xb8c3; 
0x0009c0ff: inc esp; ret 0xc083; 
0x0009bfc3: inc esp; ret 0xc35b; 
0x0003e734: inc esp; ret 0xc483; 
0x00094d84: inc esp; ret 0xd231; 
0x00099579: inc esp; ret 0xe821; 
0x000947f6: inc esp; ret 0xec83; 
0x000b64ff: inc esp; ret 0xff50; 
0x00151e95: inc esp; ret 4; 
0x00023406: inc esp; ret; 
0x00037801: inc esp; sar byte ptr [esi + 8], 1; mov eax, 0xae; call dword ptr gs:[0x10]; 
0x001a0dd4: inc esp; sbb dword ptr [eax], eax; add byte ptr [ebp + 0x314574c0], al; jmp dword ptr [esi - 0x70]; 
0x00098c16: inc esp; shl dword ptr [ecx], 1; ret 0x1a8b; 
0x000cc89a: inc esp; stc; call dword ptr [eax + 0x53]; 
0x000ccc36: inc esp; stc; call dword ptr [eax + 0x55]; 
0x000b6c59: inc esp; stc; call dword ptr [eax - 0x18]; 
0x00059168: inc esp; std; jmp ptr [ecx]; ret; 
0x0009ba00: inc esp; test byte ptr [eax*4 + 0x10974c0], ch; ret; 
0x00084f9b: inc esp; xchg ebp, eax; or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; call dword ptr gs:[0x10]; 
0x00150dbf: inc esp; xchg ebx, eax; add al, 0x83; ret 0x8301; 
0x000bbc4d: inc sp; stc; call dword ptr [eax - 0x18]; 
0x0014a5b2: insb byte ptr es:[edi], dx; add al, 0; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0006fc93: insb byte ptr es:[edi], dx; add dword ptr [eax], 0x5f5e5b00; pop ebp; ret; 
0x00142162: insb byte ptr es:[edi], dx; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0014280f: insb byte ptr es:[edi], dx; add eax, 0x5e5b0000; pop edi; pop ebp; ret; 
0x000ffe2d: insb byte ptr es:[edi], dx; add eax, dword ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000c4656: insb byte ptr es:[edi], dx; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0014bb41: insb byte ptr es:[edi], dx; and al, 0x24; add dword ptr [ecx], ebp; ret 0x828d; 
0x00094218: insb byte ptr es:[edi], dx; and al, 0x3c; lea ecx, [edi - 0x722c0]; call dword ptr gs:[0x10]; 
0x000cb012: insb byte ptr es:[edi], dx; and al, 0x6c; push ebp; mov ecx, dword ptr [esp + 0x34]; call ecx; 
0x00035e3a: insb byte ptr es:[edi], dx; and al, 4; fadd st(0); mov dword ptr [eax], ecx; ret; 
0x00035da9: insb byte ptr es:[edi], dx; and al, 4; fscale; fstp st(1); ret; 
0x00035e2f: insb byte ptr es:[edi], dx; and al, 4; mov dword ptr [eax], ecx; ret; 
0x00035c1e: insb byte ptr es:[edi], dx; and al, 4; ret; 
0x00027f09: insb byte ptr es:[edi], dx; call esi; 
0x00174366: insb byte ptr es:[edi], dx; clc; jmp dword ptr [esi - 0x70]; 
0x0006b17b: insb byte ptr es:[edi], dx; idiv edi; call dword ptr [ebx]; 
0x0006c287: insb byte ptr es:[edi], dx; idiv edi; inc dword ptr [ebx]; test dword ptr [edi + esi*8 - 1], ecx; jmp ptr [ecx]; ret; 
0x0006c457: insb byte ptr es:[edi], dx; idiv edi; jmp ptr [ecx]; ret; 
0x0009dd89: insb byte ptr es:[edi], dx; inc eax; or eax, 0x73c38100; ret 0x18; 
0x0008b450: insb byte ptr es:[edi], dx; inc ebp; cli; dec dword ptr [ebp - 0x67e3b79]; call dword ptr [eax - 0x73]; 
0x00109fef: insb byte ptr es:[edi], dx; lahf; stc; call dword ptr [eax - 0x18]; 
0x0004acfb: insb byte ptr es:[edi], dx; lea ecx, [ecx + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x00167eb1: insb byte ptr es:[edi], dx; mov bl, 0xf9; call dword ptr [eax - 0x18]; 
0x00122842: insb byte ptr es:[edi], dx; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x0004aaad: insb byte ptr es:[edi], dx; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x000252d6: insb byte ptr es:[edi], dx; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x00085f73: insb byte ptr es:[edi], dx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00027f05: insb byte ptr es:[edi], dx; push dword ptr [esp + 0x6c]; call esi; 
0x0002623d: insb byte ptr es:[edi], dx; push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x5c]; call edi; 
0x000cb014: insb byte ptr es:[edi], dx; push ebp; mov ecx, dword ptr [esp + 0x34]; call ecx; 
0x000cb17d: insb byte ptr es:[edi], dx; push ebx; push ebp; mov eax, dword ptr [esp + 0x34]; call eax; 
0x00129bbf: insb byte ptr es:[edi], dx; push esi; stc; call dword ptr [eax + 0x53]; 
0x00151a91: insb byte ptr es:[edi], dx; ret 0x8304; 
0x000c3450: insb byte ptr es:[edi], dx; ret; 
0x000894df: insb byte ptr es:[edi], dx; stc; call dword ptr [eax - 0x73]; 
0x0014d262: insb byte ptr es:[edi], dx; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x18]; 
0x0003175a: insb byte ptr es:[edi], dx; sub bh, cl; call dword ptr [eax - 0x73]; 
0x00105503: insb byte ptr es:[edi], dx; sub edx, dword ptr gs:[0x14]; jne 0x105526; add esp, 0x78; pop ebx; ret; 
0x00107c83: insb byte ptr es:[edi], dx; sub edx, dword ptr gs:[0x14]; jne 0x107ca6; add esp, 0x78; pop ebx; ret; 
0x001259ff: insb byte ptr es:[edi], dx; sub edx, dword ptr gs:[0x14]; jne 0x125a14; add esp, 0x7c; ret; 
0x0005835f: insb byte ptr es:[edi], dx; sub edx, dword ptr gs:[0x14]; jne 0x5836e; add esp, 0x78; pop ebx; ret; 
0x000e0e63: insb byte ptr es:[edi], dx; sub edx, dword ptr gs:[0x14]; jne 0xe0e86; add esp, 0x78; pop ebx; ret; 
0x000e3523: insb byte ptr es:[edi], dx; sub edx, dword ptr gs:[0x14]; jne 0xe3546; add esp, 0x78; pop ebx; ret; 
0x000f8553: insb byte ptr es:[edi], dx; sub edx, dword ptr gs:[0x14]; jne 0xf8576; add esp, 0x78; pop ebx; ret; 
0x000f9133: insb byte ptr es:[edi], dx; sub edx, dword ptr gs:[0x14]; jne 0xf9156; add esp, 0x78; pop ebx; ret; 
0x0004aa6f: insb byte ptr es:[edi], dx; xor ecx, ecx; mov ebx, 0; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x000d4d1e: insd dword ptr es:[edi], dx; add dword ptr [eax], eax; add byte ptr [ebx - 0xc76b], cl; jmp ptr [ecx]; ret 0xd089; 
0x000ffd94: insd dword ptr es:[edi], dx; and byte ptr [edi], al; add byte ptr [ecx + 0x12a268c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x00079f66: insd dword ptr es:[edi], dx; cli; jmp dword ptr [esi - 0x70]; 
0x0011a151: insd dword ptr es:[edi], dx; cmc; inc dword ptr [ebx - 0x3b7cef3c]; or byte ptr [eax + 1], bh; pop ebx; ret; 
0x000b648f: insd dword ptr es:[edi], dx; fld qword ptr [eax]; add byte ptr [ebx - 0x3b7ceb89], cl; adc cl, ch; imul edi, edi, -1; jmp dword ptr [esi - 0x70]; 
0x00152b4f: insd dword ptr es:[edi], dx; into; in eax, dx; jmp dword ptr [esi - 0x70]; 
0x000b3a42: insd dword ptr es:[edi], dx; lea esi, [esi]; lea esi, [esi]; xor eax, eax; ret; 
0x000cabe9: insd dword ptr es:[edi], dx; stc; call dword ptr [eax + 0x56]; 
0x000218ef: insd dword ptr es:[edi], dx; stc; call dword ptr [eax - 0x18]; 
0x00130fbc: insd dword ptr es:[edi], dx; stc; call dword ptr [eax - 0x75]; 
0x0015ccd5: insd dword ptr es:[edi], dx; std; jmp dword ptr [esi - 0x70]; 
0x00078bdc: insd dword ptr es:[edi], dx; sti; dec dword ptr [ebp - 0x682cb7a]; call dword ptr [eax - 0x73]; 
0x000df38f: int 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000faa4e: int 0x48; stc; call dword ptr [eax - 0x77]; 
0x0013aac6: int 0x48; stc; call dword ptr [eax - 1]; 
0x000b791a: int 0x5b; pop esi; mov eax, ebp; pop edi; pop ebp; ret; 
0x00037765: int 0x80; 
0x0014de62: int 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000ca675: int 0xc1; ljmp 0x29d2:0x31d0891f; ret; 
0x00120def: int 0xeb; lock dec dword ptr [ebp - 0x65d9f7d]; call dword ptr [eax - 0x73]; 
0x00136b19: int 0xf0; call dword ptr [eax - 0x18]; 
0x00178058: int 0xf3; inc dword ptr [ebx - 0x3fceef3c]; add esp, 4; pop ebx; pop esi; ret; 
0x001625e2: int 0xf7; inc dword ptr [ebx + 0x548d08ec]; and al, 0x20; push edx; push eax; call edi; 
0x0006b9db: int 0xf8; dec dword ptr [ebx - 0x365f797c]; clc; dec dword ptr [ebp + 0x15df0684]; in al, 0xff; jmp eax; 
0x00146cd8: int 0xfe; jmp dword ptr [esi - 0x70]; 
0x0005dfe1: int 0xff; dec dword ptr [ebx - 0x59b7b]; jmp dword ptr [ebp - 0x75]; 
0x00063842: int 0xff; jmp dword ptr [ebp - 0x5f]; 
0x000b6c3f: int 7; add byte ptr [ebx - 0x72e3db8c], cl; xchg al, cl; xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x0009e84e: int1; add eax, 1; test dl, dl; mov edx, 0; cmove eax, edx; ret; 
0x00084f98: int1; add edi, 0x89544; add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; call dword ptr gs:[0x10]; 
0x000832cb: int1; and dword ptr [ebp - 1], 0x1015; add byte ptr [ebx + 0x5e], bl; ret; 
0x0013cfba: int1; call dword ptr [eax - 0x18]; 
0x0013cca7: int1; call dword ptr [eax - 0x73]; 
0x00094714: int1; call dword ptr [edx + 0x51]; 
0x00094714: int1; call dword ptr [edx + 0x51]; push eax; call 0xb4de0; add esp, 0x1c; ret; 
0x000d70fe: int1; call dword ptr gs:[0x10]; 
0x000e000e: int1; clc; inc dword ptr [ecx]; fistp qword ptr [esi]; jmp edi; 
0x00041457: int1; das; stc; call dword ptr [eax - 0x18]; 
0x00174350: int1; dec dword ptr [ebp + 0xb6]; add byte ptr [eax + 0x16], bh; pop ebx; ret; 
0x00114ca7: int1; dec dword ptr [ebp - 0x65fc37d]; call dword ptr [eax - 0x73]; 
0x0005e1ed: int1; fdivp st(7); dec dword ptr [ebx - 0x59b7b]; jmp dword ptr [ebp - 0x75]; 
0x0016bb19: int1; inc dword ptr [ebx + 0x448b10c4]; and al, 0xc; add esp, 0x18; pop ebx; ret; 
0x00139023: int1; inc dword ptr [ebx - 0x2776d73c]; pop ebx; ret; 
0x00166f37: int1; inc dword ptr [ebx - 0x2f08e33c]; shr eax, 0x1f; ret; 
0x00103f63: int1; inc dword ptr [ebx - 0x3fceef3c]; pop ebx; pop esi; pop edi; ret; 
0x000e271b: int1; inc edi; stc; call dword ptr [eax - 0x18]; 
0x0010f5df: int1; jmp dword ptr [ebp - 0x5f]; 
0x0010fac3: int1; jmp dword ptr [ebp - 0x75]; 
0x0011833a: int1; jmp dword ptr [esi - 0x70]; 
0x0017af87: int1; mov dword ptr [edx - 7], eax; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0003bd15: int1; mov eax, 0x163; xor edx, edx; sub ecx, ebx; call dword ptr gs:[0x10]; 
0x000a1c9e: int1; mov eax, edx; pop ebx; ret; 
0x0008defd: int1; mov ebx, dword ptr [esp + 0xa0]; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x00088a98: int1; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000d8d75: int1; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000fbbf6: int1; mov edx, dword ptr [edx + 8]; pop ebx; pop esi; mov eax, edx; ret; 
0x0010ab3e: int1; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0010ab7a: int1; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0010a8ce: int1; mov edx, edi; call dword ptr gs:[0x10]; 
0x0010a959: int1; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0017445e: int1; mov edx, esi; mov edi, eax; mov eax, ebp; call dword ptr gs:[0x10]; 
0x000a1d9e: int1; pop ebx; pop esi; ret; 
0x0004ae7e: int1; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x001961a2: int1; pop edi; ret; 
0x00136f8b: int1; ret 0xfff4; 
0x00195197: int1; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x0008b8f3: int1; xchg dword ptr [eax + 0xf0], edi; mov esi, edx; call dword ptr gs:[0x10]; 
0x0008f4d4: int1; xor eax, eax; pop ebx; ret; 
0x0009a596: int1; xor eax, eax; ret; 
0x00087b6b: into; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [edi + edi*2], ch; stc; call dword ptr [eax - 0x18]; 
0x0008cb8e: into; add byte ptr [eax], al; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x6174; 
0x001261fc: into; add byte ptr [ecx], al; add byte ptr [eax], al; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00037e85: into; add edi, esi; ret 0; 
0x0009531c: into; and dh, bh; fisttp dword ptr [ecx + 0x21082474]; ret; 
0x00088eb4: into; call dword ptr gs:[0x10]; 
0x00166b23: into; cld; jmp dword ptr [esi - 0x70]; 
0x000739a9: into; cli; jmp dword ptr [esi - 0x70]; 
0x000fb309: into; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x00152b50: into; in eax, dx; jmp dword ptr [esi - 0x70]; 
0x000b5364: into; jne 0xb536a; lea eax, [esi + 3]; pop esi; pop edi; ret; 
0x0014798c: into; pop esi; stc; call dword ptr [esi - 0x18]; 
0x00153207: into; popal; stc; call dword ptr [eax + 0x51]; 
0x001561e1: into; popal; stc; call dword ptr [eax + 0x55]; 
0x0015532b: into; popal; stc; call dword ptr [eax + 0x56]; 
0x00153877: into; popal; stc; call dword ptr [eax + 0x57]; 
0x00153ff4: into; popal; stc; call dword ptr [eax - 1]; 
0x0012414c: into; push ebp; stc; call dword ptr [eax - 0x18]; 
0x0013102f: into; push edi; stc; call dword ptr [ebx + 0x50]; 
0x000868ce: into; stc; call dword ptr [eax - 0x73]; 
0x00092b74: into; stc; dec dword ptr [ebx - 0x7972778b]; pushal; test cl, bh; call dword ptr [eax + 0x68]; 
0x0009ff89: iretd; add byte ptr [eax], al; add byte ptr [ebx + 0x4bfac55], cl; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5589; 
0x000aa15d: iretd; add dword ptr [eax], eax; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x0007385e: iretd; cli; jmp dword ptr [esi - 0x70]; 
0x000fac21: iretd; dec eax; stc; call dword ptr [eax - 0x73]; 
0x001236fd: iretd; fucompi st(7); call dword ptr [ebx + 0x56]; 
0x000d9ae0: iretd; je 0xd9ad7; jmp dword ptr [esi - 0x70]; 
0x0016ba1d: iretd; jg 0x16ba1c; jmp dword ptr [esi - 0x70]; 
0x0007925a: iretd; mov dword ptr [ebx], edx; add esp, 4; pop ebx; pop esi; ret; 
0x001253c3: iretd; mov eax, 0x1a1; mov ecx, edx; mov edx, edi; mov edi, ebp; call dword ptr gs:[0x10]; 
0x00087e6a: iretd; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x00159236: iretd; mov eax, dword ptr [ecx]; add byte ptr [ecx + 0xd0dc6c5], al; add byte ptr [edi + 0x31], dl; call dword ptr [esi - 0x42]; 
0x00087e64: iretd; mov ebx, dword ptr [eax + 0x68]; cmovbe ecx, edi; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x0008bc8a: iretd; or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x001a0c40: iretd; pop ebx; pop esi; pop edi; ret; 
0x0007be8a: iretd; ret; 
0x000b4478: iretd; sub eax, esi; pop ebx; pop esi; ret; 
0x00104fd0: ja 0x104fde; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x001052b8: ja 0x1052c0; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0010866c: ja 0x108678; pop ebx; pop esi; ret; 
0x0010939b: ja 0x1093a8; pop ebx; pop esi; pop edi; ret; 
0x001096ff: ja 0x109708; pop ebx; pop esi; ret; 
0x0010975f: ja 0x109768; pop ebx; pop esi; ret; 
0x0010a1ac: ja 0x10a200; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0010a27c: ja 0x10a2d0; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0010a499: ja 0x10a4a0; pop ebx; ret; 
0x0010aef3: ja 0x10af40; add esp, 0x14; pop ebx; pop esi; ret; 
0x0010b037: ja 0x10b040; pop ebx; ret; 
0x0010b0c7: ja 0x10b110; add esp, 0x14; pop ebx; pop esi; ret; 
0x0010fb86: ja 0x10fb98; mov edx, dword ptr [esp + 8]; mov word ptr [edx + 0x3e], ax; xor eax, eax; ret; 
0x00111516: ja 0x111528; mov edx, dword ptr [esp + 8]; mov word ptr [edx + 0x42], ax; xor eax, eax; ret; 
0x001116dc: ja 0x111730; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x001140d6: ja 0x1140e8; mov edx, dword ptr [esp + 8]; mov word ptr [edx + 0x42], ax; xor eax, eax; ret; 
0x00115a25: ja 0x115a30; pop ebx; ret; 
0x00115bf5: ja 0x115c10; pop ebx; pop esi; pop edi; ret; 
0x00115c78: ja 0x115c90; pop ebx; pop esi; pop edi; ret; 
0x00115cf4: ja 0x115d10; pop ebx; pop esi; pop edi; ret; 
0x00115d77: ja 0x115d90; pop ebx; pop esi; pop edi; ret; 
0x00115dde: ja 0x115de8; pop ebx; pop esi; ret; 
0x00115e48: ja 0x115e50; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00115e9e: ja 0x115ea8; pop ebx; pop esi; ret; 
0x0011666e: ja 0x1166c8; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00116864: ja 0x1167e9; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00116919: ja 0x116920; pop ebx; ret; 
0x00116969: ja 0x116970; pop ebx; ret; 
0x00116a7f: ja 0x116a88; pop ebx; pop esi; pop edi; ret; 
0x00116adf: ja 0x116ae8; pop ebx; pop esi; pop edi; ret; 
0x0011722e: ja 0x117238; pop ebx; pop esi; ret; 
0x0011729c: ja 0x1172f0; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0011736c: ja 0x1173c0; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00118d73: ja 0x118dc0; add esp, 0x14; pop ebx; pop esi; ret; 
0x00118e53: ja 0x118ea0; add esp, 0x14; pop ebx; pop esi; ret; 
0x00118f40: ja 0x118f48; pop ebx; pop esi; ret; 
0x0011a7f9: ja 0x11a800; pop ebx; ret; 
0x0011a849: ja 0x11a850; pop ebx; ret; 
0x0011a89e: ja 0x11a8a8; pop ebx; pop esi; ret; 
0x0011a8fe: ja 0x11a908; pop ebx; pop esi; ret; 
0x0011c58c: ja 0x11c5e0; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0011ea61: ja 0x11ea68; pop ebx; ret; 
0x00121369: ja 0x121370; pop ebx; ret; 
0x001213c3: ja 0x1213d0; pop ebx; pop esi; pop edi; ret; 
0x001217e4: ja 0x1217f0; pop ebx; pop esi; pop edi; ret; 
0x00121a43: ja 0x121a50; pop ebx; pop esi; pop edi; ret; 
0x00121e8c: ja 0x121ee0; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00122008: ja 0x122028; pop ebx; pop esi; pop edi; ret; 
0x001225b8: ja 0x1225c0; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00122ff9: ja 0x123000; pop ebx; ret; 
0x00123049: ja 0x123050; pop ebx; ret; 
0x00123099: ja 0x1230a0; pop ebx; ret; 
0x001231aa: ja 0x1231b0; pop ebx; pop esi; pop edi; ret; 
0x001238a1: ja 0x1238b0; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00125c55: ja 0x125c60; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001260f7: ja 0x126100; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00126793: ja 0x1267a0; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001267f7: ja 0x126800; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00133910: ja 0x133919; sar eax, 5; add esp, 0xc; ret; 
0x00147478: ja 0x1474a7; stc; call dword ptr [eax + 0x51]; 
0x0015b114: ja 0x15b100; mov dword ptr [edx + 0x10], ecx; pop ebx; ret; 
0x0016420d: ja 0x16420e; inc dword ptr [ebx - 0x77cef3c]; add dword ptr [eax + 1], edi; sbb eax, -1; add esp, 0xc; ret; 
0x001658d0: ja 0x165903; rol byte ptr [ebx - 0x6bf0fd08], cl; ret 0xf883; 
0x001659c0: ja 0x1659f3; rol byte ptr [ebx - 0x6bf0fd08], cl; ret 0xf883; 
0x0016bb18: ja 0x16bb0b; inc dword ptr [ebx + 0x448b10c4]; and al, 0xc; add esp, 0x18; pop ebx; ret; 
0x0017112c: ja 0x17113d; mov eax, edx; mov edx, dword ptr [ecx - 0xc8]; shl eax, 5; lea eax, [eax + edx + 0x64]; ret; 
0x001743e4: ja 0x1743f0; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x001780bf: ja 0x1780c8; pop ebx; pop esi; ret; 
0x0017a347: ja 0x17a350; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0017a457: ja 0x17a460; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0018b1b5: ja 0x18b1b9; neg eax; ret; 
0x0018c9f5: ja 0x18c9f9; neg eax; pop ebp; ret; 
0x0018f0a5: ja 0x18f0a9; neg eax; add esp, 4; pop ebx; ret; 
0x00191935: ja 0x191939; neg eax; add esp, 4; pop ebp; pop ebx; ret; 
0x00191df5: ja 0x191df9; neg eax; ret; 
0x001920f5: ja 0x1920f9; neg eax; pop ebp; ret; 
0x001922c5: ja 0x1922c9; neg eax; ret; 
0x00192dac: ja 0x192db0; neg eax; ret; 
0x00193125: ja 0x193129; neg eax; pop edi; pop ebx; ret; 
0x00193685: ja 0x193689; neg eax; pop edi; pop ebp; pop ebx; ret; 
0x0019405d: ja 0x194061; neg eax; ret; 
0x001956d6: ja 0x1956da; neg eax; ret; 
0x00033d5c: ja 0x33d8d; stc; call dword ptr [eax - 1]; 
0x0003776a: ja 0x3776c; add byte ptr [eax], al; int 0x80; 
0x0003799a: ja 0x379a0; pop ebx; ret; 
0x000379f8: ja 0x37a40; add esp, 0x14; pop ebx; pop esi; ret; 
0x0003bc4c: ja 0x3bca0; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0004ac84: ja 0x4acc2; mov edi, dword ptr [edi + 0x38]; ret; 
0x00054c37: ja 0x54c20; mov eax, ecx; pop ebx; pop esi; ret; 
0x0005691a: ja 0x56915; call dword ptr [eax - 0x73]; 
0x00058a29: ja 0x58a30; pop ebx; ret; 
0x00058a83: ja 0x58a90; pop ebx; pop esi; pop edi; ret; 
0x00058eeb: ja 0x58eea; inc dword ptr [ebx - 0x72aff33c]; test dword ptr [edi + 0x32], ebx; stc; call dword ptr [eax + 0x56]; 
0x0006e782: ja 0x6da41; movzx eax, byte ptr [edi + ecx - 0x20]; mov esi, dword ptr [esp + 0x70]; mov edx, ebx; add edx, dword ptr [esi + eax*4]; jmp edx; 
0x0006fd3b: ja 0x6fd44; mov eax, dword ptr [ecx + edx*4 - 0xbe0]; ret; 
0x00076422: ja 0x76418; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00079c59: ja 0x79c5b; add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x0007bf75: ja 0x7bfae; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000802f2: ja 0x802e8; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00080e8a: ja 0x80e1d; sbb al, byte ptr [eax]; mov eax, dword ptr [eax + 0xce0]; ret; 
0x00083796: ja 0x837a0; pop ebx; pop esi; pop edi; ret; 
0x00084863: ja 0x84870; ret; 
0x00084bab: ja 0x84bc0; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0008bee9: ja 0x8bef0; pop ebx; pop esi; pop edi; ret; 
0x0008d70b: ja 0x8d720; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0008d73b: ja 0x8d750; mov edx, dword ptr [esp + 4]; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x00092c65: ja 0x92c70; pop ebx; ret; 
0x000931dc: ja 0x931f8; pop ebx; pop esi; pop edi; ret; 
0x0009330e: ja 0x93318; pop ebx; pop esi; ret; 
0x000938fd: ja 0x93908; pop ebx; ret; 
0x00093ced: ja 0x93cf8; pop ebx; ret; 
0x0009bfbf: ja 0x9bfb6; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x0009e291: ja 0x9e270; pop ebx; pop esi; pop edi; ret; 
0x000a2568: ja 0xa2571; mov eax, dword ptr [ecx + edx*4 - 0x9c0]; ret; 
0x000a2598: ja 0xa25a1; mov eax, dword ptr [ecx + edx*4 - 0x8a0]; ret; 
0x000b3732: ja 0xb37e0; add eax, edi; add eax, ecx; pop edi; ret; 
0x000b37d2: ja 0xb37e0; sub edi, 0x10; add eax, edi; pop edi; ret; 
0x000b4477: ja 0xb4448; sub eax, esi; pop ebx; pop esi; ret; 
0x000b6800: ja 0xb680a; call ebx; 
0x000b686f: ja 0xb6879; call ebx; 
0x000cc087: ja 0xcc090; pop ebx; ret; 
0x000d7431: ja 0xd74c0; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000d7569: ja 0xd7600; lea ecx, [esp + 0xc]; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000d8f38: ja 0xd8f40; pop ebx; pop esi; ret; 
0x000ddcfe: ja 0xddd40; add esp, 0x18; pop ebx; ret; 
0x000de41e: ja 0xde440; hlt; mov eax, ecx; call dword ptr gs:[0x10]; 
0x000f66fd: ja 0xf6747; stc; call dword ptr [eax - 1]; 
0x000fb38e: ja 0xfb398; pop ebx; pop esi; ret; 
0x000fb407: ja 0xfb40f; setne al; movzx eax, al; ret; 
0x000fc1fc: ja 0xfc201; add byte ptr [ebx - 0x7872dbc4], cl; dec esp; sahf; stc; call dword ptr [eax - 0x73]; 
0x00108623: jae 0x108617; dec dword ptr [ebx - 0x18f43]; dec dword ptr [ebp - 0x6612779]; call dword ptr [eax + 0x68]; 
0x001192ab: jae 0x1192ad; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012770e: jae 0x12771b; mov edx, dword ptr [ecx + 0x4628]; add word ptr [edx + eax*2], 1; ret; 
0x0012cb09: jae 0x12cae0; add esp, 4; pop ebx; pop esi; ret; 
0x001302e1: jae 0x130313; call eax; 
0x001311f5: jae 0x131200; cmp dword ptr [eax + 4], ecx; jne 0x1311f0; mov eax, dword ptr [eax + 0x18]; ret; 
0x0013fd1d: jae 0x13fd32; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x001595fe: jae 0x159608; push esi; call dword ptr [ebx + 0xc]; 
0x0015efa4: jae 0x15ef29; les ebx, ptr [eax]; pop ebx; ret; 
0x0016084c: jae 0x160896; push dword ptr [esp + 0x2c]; push esi; call dword ptr [eax + 0xc]; 
0x00161bec: jae 0x161b79; inc esi; cmp al, 0x83; in al, dx; or al, 0x55; call dword ptr [eax + 0x10]; 
0x0016e2f8: jae 0x16e2e0; mov eax, 1; pop ebx; ret; 
0x00192619: jae 0x192622; add byte ptr [eax], al; pop ebx; ret; 
0x00195b59: jae 0x195b5d; add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x001a0f29: jae 0x1a0f39; lea esi, [esi]; nop; call dword ptr [esi]; 
0x00037961: jae 0x216d0; ret; 
0x0004aa89: jae 0x216d0; xor eax, eax; ret; 
0x000225d4: jae 0x225da; call esi; 
0x0002262e: jae 0x22634; call esi; 
0x000302c4: jae 0x302bf; dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x00033277: jae 0x33272; jmp dword ptr [esi - 0x77]; 
0x0003a2e4: jae 0x3a2f9; lea esi, [esi]; lea esi, [esi]; call dword ptr [ebx]; 
0x0003ab17: jae 0x3ab1d; call eax; 
0x0003bd12: jae 0x3bd39; mov ecx, esi; mov eax, 0x163; xor edx, edx; sub ecx, ebx; call dword ptr gs:[0x10]; 
0x0004b738: jae 0x4b730; mov eax, edx; pop ebx; pop esi; ret; 
0x00051149: jae 0x51133; std; dec dword ptr [ebx - 0x365343]; dec dword ptr [ebp - 0x6894f79]; call dword ptr [eax - 0x73]; 
0x000217d8: jae 0x5e5d94a2; pop edi; pop ebp; ret; 
0x0004aed8: jae 0x5e5fbba2; pop edi; pop ebp; ret; 
0x0004afd8: jae 0x5e5fbca2; pop edi; pop ebp; ret; 
0x0007f940: jae 0x5e63060a; pop edi; pop ebp; ret; 
0x000de6c0: jae 0x5e69038a; pop edi; pop ebp; ret; 
0x000eefad: jae 0x5e6a2c77; pop edi; pop ebp; ret; 
0x0011f29e: jae 0x5e6d5f68; pop edi; pop ebp; ret; 
0x00140a9d: jae 0x5e6f5767; pop edi; pop ebp; ret; 
0x0014cbb8: jae 0x5e6fd882; pop edi; pop ebp; ret; 
0x00066a2f: jae 0x676f0; sub esp, 4; push ebx; push eax; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x00074464: jae 0x74470; lea ecx, [edx + 4]; mov dword ptr [eax], ecx; mov eax, dword ptr [edx]; ret; 
0x000745a2: jae 0x745b0; lea ecx, [edx + 4]; mov dword ptr [eax], ecx; mov eax, dword ptr [edx]; ret; 
0x00076474: jae 0x764a6; add esp, 4; pop ebx; pop esi; ret; 
0x0007984b: jae 0x79847; jmp dword ptr [esi - 0x70]; 
0x00079921: jae 0x7991d; jmp dword ptr [esi - 0x70]; 
0x0007a3a0: jae 0x7a3b6; mov dword ptr [ebx + 0x18], esi; pop ebx; pop esi; pop edi; ret; 
0x0007a3a3: jae 0x7a3bd; pop ebx; pop esi; pop edi; ret; 
0x0007b23a: jae 0x7b2b1; fild dword ptr [eax - 0x76da2b83]; ret 0x5374; 
0x0007bf1e: jae 0x7bf30; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x0007bf5c: jae 0x7bf70; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x0007d0d7: jae 0x7d430; push ebp; push dword ptr [esp + 8]; push dword ptr [esp + 8]; push esi; call dword ptr [edi + 0x40]; 
0x0007da6c: jae 0x7da78; movzx eax, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x000807a8: jae 0x80858; sub esp, 4; push 0; push 0; push ebx; call dword ptr [ebp + 0x2c]; 
0x00080aff: jae 0x80b31; add esp, 4; pop ebx; pop esi; ret; 
0x00081000: jae 0x81020; movzx eax, byte ptr [edx]; pop ebx; pop esi; ret; 
0x00081a5c: jae 0x819e1; in al, dx; add al, 0x6a; add eax, 0xcc838d50; jb 0x81a61; call dword ptr [eax - 0x18]; 
0x000849d4: jae 0x849a0; mov ecx, dword ptr [ebx + 0xc]; mov eax, 0xf0; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00084de0: jae 0x84de6; call dword ptr [ebx]; 
0x0008bf27: jae 0x8bf2d; call dword ptr [ebx]; 
0x0009a2ee: jae 0x9a310; mov dword ptr [ebx], eax; push eax; call ecx; 
0x0009a468: jae 0x9a48e; call eax; 
0x0009a557: jae 0x9a57d; call eax; 
0x0009a58e: jae 0x9a5a0; mov eax, dword ptr [eax + 4]; test eax, eax; jne 0x9a588; xor eax, eax; ret; 
0x0009a5d5: jae 0x9a5fb; call edx; 
0x0002c070: jae 0xa76c46e; add esp, 8; pop ebx; ret; 
0x000ad4d9: jae 0xad4e2; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000b4693: jae 0xb4697; movsw word ptr es:[edi], word ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; pop edi; ret; 
0x000b4dac: jae 0xb4db0; movsw word ptr es:[edi], word ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; xchg edi, eax; mov esi, edx; ret; 
0x000dfe2a: jae 0xdfe75; push edx; mov eax, 0x20; mov edx, 0x40; cmove eax, edx; ret; 
0x000eaa52: jae 0xeaa5c; add byte ptr [ecx + 0x13f5abc1], al; add byte ptr [ebp - 0x77], dl; ret 0x5657; 
0x000fba71: jae 0xfba77; push dword ptr [ebx]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x38]; call esi; 
0x0010285b: jb 0x102856; call dword ptr [eax - 0x18]; 
0x00109d9d: jb 0x109d22; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00112739: jb 0x11275b; mov dword ptr [edx + 0x24], edi; mov dword ptr [edx + 0x28], eax; pop esi; pop edi; ret; 
0x0011710a: jb 0x117110; xor eax, eax; pop ebx; ret; 
0x0011f912: jb 0x11f965; stc; call dword ptr [eax + 0x57]; 
0x00127a9b: jb 0x127aa5; seta al; movzx eax, al; neg eax; ret; 
0x0012c554: jb 0x12c560; mov eax, 1; ret; 
0x00131402: jb 0x1313f4; call dword ptr [edx - 0x3f]; 
0x001391a9: jb 0x1391a4; call dword ptr [eax - 0x18]; 
0x00139267: jb 0x139262; call dword ptr [eax - 0x18]; 
0x0013928f: jb 0x13928a; call dword ptr [eax - 0x18]; 
0x001392bf: jb 0x1392ba; call dword ptr [eax - 0x18]; 
0x0013a222: jb 0x13a21d; call dword ptr [eax - 0x18]; 
0x0013a31b: jb 0x13a316; call dword ptr [eax - 0x18]; 
0x0013a5a6: jb 0x13a5a1; call dword ptr [eax - 0x18]; 
0x0013a6f6: jb 0x13a6f1; call dword ptr [eax - 0x18]; 
0x0013a71e: jb 0x13a719; call dword ptr [eax + 0x55]; 
0x0013a773: jb 0x13a76e; call dword ptr [eax - 0x18]; 
0x0013b687: jb 0x13b682; call dword ptr [eax - 0x18]; 
0x0013b94c: jb 0x13b947; call dword ptr [eax - 0x18]; 
0x00140ed4: jb 0x140f33; stc; call dword ptr [ecx - 0x77]; 
0x001451be: jb 0x1451b9; call dword ptr [eax - 0x18]; 
0x001451e1: jb 0x1451dc; call dword ptr [eax - 0x18]; 
0x001474f7: jb 0x1474f2; call dword ptr [eax - 0x18]; 
0x001476af: jb 0x1476aa; call dword ptr [eax - 0x18]; 
0x00147724: jb 0x14771f; call dword ptr [eax - 0x18]; 
0x00147923: jb 0x14791e; call dword ptr [eax - 0x18]; 
0x00158bbf: jb 0x158bba; call dword ptr [eax - 0x18]; 
0x00158e5e: jb 0x158e4c; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x0015910f: jb 0x15910a; call dword ptr [eax - 0x18]; 
0x001592ec: jb 0x1592e7; call dword ptr [eax - 0x18]; 
0x001593e8: jb 0x1593e3; call dword ptr [eax - 0x18]; 
0x0015ac9f: jb 0x15ac9a; call dword ptr [eax - 0x18]; 
0x0015acea: jb 0x15ace3; in eax, dx; jmp dword ptr [esi - 0x70]; 
0x0015ad6b: jb 0x15ad66; call dword ptr [eax - 0x18]; 
0x0015ae97: jb 0x15ae92; call dword ptr [eax - 0x18]; 
0x0015af22: jb 0x15af1d; call dword ptr [eax - 0x18]; 
0x0015af4f: jb 0x15af4a; call dword ptr [eax - 0x18]; 
0x0015b7cc: jb 0x15b7c7; call dword ptr [eax - 0x18]; 
0x0015c7d7: jb 0x15c7d6; jmp dword ptr [esi - 0x70]; 
0x0015cf7a: jb 0x15cfe6; std; jmp dword ptr [esi - 0x70]; 
0x0015e43a: jb 0x15e435; call dword ptr [eax - 0x18]; 
0x0015e60d: jb 0x15e608; call dword ptr [eax - 0x18]; 
0x0015ece7: jb 0x15ece2; call dword ptr [eax - 0x18]; 
0x0015ed65: jb 0x15ed60; call dword ptr [eax - 0x18]; 
0x0015ed65: jb 0x15ed60; call dword ptr [eax - 0x18]; ret 0xed18; 
0x0015edb2: jb 0x15edad; call dword ptr [eax - 0x18]; 
0x0015f82b: jb 0x15f826; call dword ptr [eax - 0x18]; 
0x0015fc32: jb 0x15fc2d; call dword ptr [eax - 0x18]; 
0x00160132: jb 0x16012d; call dword ptr [eax - 0x18]; 
0x001602a2: jb 0x16029d; call dword ptr [eax - 0x18]; 
0x00160f3b: jb 0x160f36; call dword ptr [eax - 0x18]; 
0x00161cf9: jb 0x161cf4; call dword ptr [eax - 0x18]; 
0x0016409d: jb 0x164098; call dword ptr [eax - 0x18]; 
0x0016451f: jb 0x16451a; call dword ptr [eax - 0x18]; 
0x00164571: jb 0x16456c; call dword ptr [eax - 0x18]; 
0x001645d5: jb 0x1645d0; call dword ptr [eax - 0x18]; 
0x00164939: jb 0x164934; call dword ptr [eax - 0x18]; 
0x00164e79: jb 0x164e74; call dword ptr [eax - 0x18]; 
0x00164ec1: jb 0x164ebc; call dword ptr [eax - 0x18]; 
0x00164eff: jb 0x164efa; call dword ptr [eax - 0x18]; 
0x00164fa6: jb 0x164fa1; call dword ptr [eax - 0x18]; 
0x001654b9: jb 0x1654b4; call dword ptr [eax - 0x18]; 
0x00165f5d: jb 0x165f58; call dword ptr [eax - 0x18]; 
0x001661dd: jb 0x1661d8; call dword ptr [eax - 0x18]; 
0x00166a4e: jb 0x166a49; call dword ptr [eax - 0x18]; 
0x0016719f: jb 0x16719a; call dword ptr [eax - 0x18]; 
0x0016f317: jb 0x16f321; seta al; movzx eax, al; neg eax; ret; 
0x001728e5: jb 0x1728f6; xchg esp, eax; ret; 
0x001922e0: jb 0x1922f0; movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x00192dcd: jb 0x192dd8; add byte ptr [ebx - 0x677d], cl; jmp dword ptr [ebp - 0x75]; 
0x00196933: jb 0x196970; lea eax, [edi + 0xa]; pop edi; ret; 
0x00196875: jb 0x196970; lea eax, [edi + 0xb]; pop edi; ret; 
0x00196943: jb 0x196970; lea eax, [edi + 0xc]; pop edi; ret; 
0x00196953: jb 0x196970; lea eax, [edi + 0xd]; pop edi; ret; 
0x00196963: jb 0x196970; lea eax, [edi + 0xe]; pop edi; ret; 
0x0019689e: jb 0x196970; lea eax, [edi + 0xf]; pop edi; ret; 
0x001968c3: jb 0x196970; lea eax, [edi + 1]; pop edi; ret; 
0x001968d3: jb 0x196970; lea eax, [edi + 2]; pop edi; ret; 
0x0019680a: jb 0x196970; lea eax, [edi + 3]; pop edi; ret; 
0x001968e3: jb 0x196970; lea eax, [edi + 4]; pop edi; ret; 
0x001968f3: jb 0x196970; lea eax, [edi + 5]; pop edi; ret; 
0x00196903: jb 0x196970; lea eax, [edi + 6]; pop edi; ret; 
0x0019683b: jb 0x196970; lea eax, [edi + 7]; pop edi; ret; 
0x00196913: jb 0x196970; lea eax, [edi + 8]; pop edi; ret; 
0x00196923: jb 0x196970; lea eax, [edi + 9]; pop edi; ret; 
0x00197973: jb 0x1979b0; lea eax, [eax + 0xa]; pop edi; ret; 
0x001978c5: jb 0x1979b0; lea eax, [eax + 0xb]; pop edi; ret; 
0x00197983: jb 0x1979b0; lea eax, [eax + 0xc]; pop edi; ret; 
0x00197993: jb 0x1979b0; lea eax, [eax + 0xd]; pop edi; ret; 
0x001979a3: jb 0x1979b0; lea eax, [eax + 0xe]; pop edi; ret; 
0x001978ee: jb 0x1979b0; lea eax, [eax + 0xf]; pop edi; ret; 
0x00197903: jb 0x1979b0; lea eax, [eax + 1]; pop edi; ret; 
0x00197913: jb 0x1979b0; lea eax, [eax + 2]; pop edi; ret; 
0x0019785b: jb 0x1979b0; lea eax, [eax + 3]; pop edi; ret; 
0x00197923: jb 0x1979b0; lea eax, [eax + 4]; pop edi; ret; 
0x00197933: jb 0x1979b0; lea eax, [eax + 5]; pop edi; ret; 
0x00197943: jb 0x1979b0; lea eax, [eax + 6]; pop edi; ret; 
0x0019788e: jb 0x1979b0; lea eax, [eax + 7]; pop edi; ret; 
0x00197953: jb 0x1979b0; lea eax, [eax + 8]; pop edi; ret; 
0x00197963: jb 0x1979b0; lea eax, [eax + 9]; pop edi; ret; 
0x001a11ca: jb 0x1a11bb; out 0xff, eax; add esp, 0x18; pop ebx; ret; 
0x0002c17c: jb 0x2c1aa; stc; call dword ptr [edx + 0x50]; 
0x0002c8b3: jb 0x2c8ae; call dword ptr [eax + 0x56]; 
0x0002d060: jb 0x2d05b; call dword ptr [eax + 0x56]; 
0x0002e508: jb 0x2e503; call dword ptr [eax - 0x18]; 
0x0002e8f5: jb 0x2e8f0; call dword ptr [eax - 0x18]; 
0x0002fa5d: jb 0x2fa58; call dword ptr [eax - 0x18]; 
0x0004ff66: jb 0x4ffa1; ror byte ptr [edi], 1; dec edi; ret 0x8503; 
0x00057eb4: jb 0x57eaf; call dword ptr [eax - 0x18]; 
0x00058ba4: jb 0x58bae; add dword ptr [edx + 4], 1; add esp, 4; pop ebx; pop esi; ret; 
0x00058ee5: jb 0x58ee0; call dword ptr [eax - 0x18]; 
0x00058f3f: jb 0x58f3a; call dword ptr [eax - 0x18]; 
0x0005bec6: jb 0x5beca; add byte ptr [ebx - 0x4216ef3c], al; fcos; call dword ptr [edx - 0x73]; 
0x0007519e: jb 0x751b4; mov byte ptr [ecx], bl; add esp, 4; pop ebx; pop esi; ret; 
0x00079a49: jb 0x79a45; jmp dword ptr [esi - 0x70]; 
0x00081a66: jb 0x81a61; call dword ptr [eax - 0x18]; 
0x00081ae9: jb 0x81ae4; call dword ptr [eax - 0x18]; 
0x00081b09: jb 0x81b49; stc; call dword ptr [ecx + 0x52]; 
0x00082295: jb 0x82290; call dword ptr [eax - 0x18]; 
0x0009a26f: jb 0x9a26a; call dword ptr [eax - 0x18]; 
0x0009b357: jb 0x9b352; call dword ptr [eax - 0x18]; 
0x0009b572: jb 0x9b56d; call dword ptr [eax - 0x18]; 
0x0009b5d3: jb 0x9b5ce; call dword ptr [eax - 0x18]; 
0x000a24b5: jb 0xa24b0; call dword ptr [eax - 0x18]; 
0x000ac5f6: jb 0xabad8; movdqu xmmword ptr [edi + 0x30], xmm7; pop edi; pop esi; pop ebx; ret; 
0x000c79c3: jb 0xc79fe; ror byte ptr [edi], 1; dec edi; ret 0x8503; 
0x000d9d21: jb 0xd9d17; jmp dword ptr [esi - 0x70]; 
0x000dd84b: jb 0xdd84d; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000dd946: jb 0xdd948; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000dfeb0: jb 0xdfeb2; add byte ptr [ebp + 0x31], dh; rol byte ptr [ecx + 0xadf5fa], 0; setne al; ret; 
0x000f7d5e: jb 0xf7d59; call dword ptr [eax - 0x18]; 
0x000f7ed2: jb 0xf7ecd; call dword ptr [eax - 0x18]; 
0x000fa43d: jb 0xfa438; call dword ptr [eax - 0x18]; 
0x000fa48d: jb 0xfa488; call dword ptr [eax - 0x18]; 
0x000fa5d4: jb 0xfa5cf; call dword ptr [eax - 0x18]; 
0x000fa675: jb 0xfa670; call dword ptr [eax - 0x18]; 
0x000fa721: jb 0xfa71c; call dword ptr [eax - 0x18]; 
0x000fac29: jb 0xfac24; call dword ptr [eax - 0x18]; 
0x000fad00: jb 0xfacfb; call dword ptr [eax - 0x18]; 
0x000fad43: jb 0xfad3e; call dword ptr [eax - 0x18]; 
0x000fb3d7: jb 0xfb3e1; setne al; movzx eax, al; neg eax; ret; 
0x000ff6f3: jb 0xff6ee; call dword ptr [eax - 0x18]; 
0x00107a0e: jbe 0x107a10; xor edx, edx; lea ebx, [esp + 8]; mov eax, 0x13e; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0010829e: jbe 0x1082a0; sub esp, 0xc; mov eax, dword ptr [ebp - 0x19c]; push dword ptr [ebp - 0x198]; call dword ptr [eax + 0x14]; 
0x0010c42b: jbe 0x10c439; call dword ptr [esi + 0x24]; 
0x0010d49e: jbe 0x10d4ac; call dword ptr [esi + 0x24]; 
0x001143ae: jbe 0x1143bc; call dword ptr [esi + 0x24]; 
0x00118339: jbe 0x11832c; jmp dword ptr [esi - 0x70]; 
0x00118d63: jbe 0x118d65; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00118d8c: jbe 0x118d8e; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011e296: jbe 0x11e298; ret; 
0x0011e688: jbe 0x11e6e1; stc; call dword ptr [eax + 0x6a]; 
0x0011f5ae: jbe 0x11f5b0; xor eax, eax; ret; 
0x0011f656: jbe 0x11f658; mov eax, dword ptr [eax + 0x368]; pop ebx; ret; 
0x00127047: jbe 0x127010; mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0012e730: jbe 0x12e789; stc; call dword ptr [eax + 0x57]; 
0x0012e827: jbe 0x12e880; stc; call dword ptr [eax + 0x57]; 
0x001312be: jbe 0x1312c0; xor eax, eax; ret; 
0x00131b6f: jbe 0x131b66; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x00131d06: jbe 0x131d37; clc; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00133894: jbe 0x1338e8; sub esp, 0xc; xor ebx, ebx; mov ecx, esp; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x00133aae: jbe 0x133ab0; and eax, 0xffffff; ret; 
0x0014049e: jbe 0x1404a0; mov eax, 0xffffffff; ret; 
0x00140736: jbe 0x140738; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x00140ad6: jbe 0x140ad8; mov eax, 0xffffffff; ret; 
0x00140afd: jbe 0x140b08; mov eax, ebx; shl eax, 4; lea eax, [edx + eax + 8]; pop ebx; ret; 
0x001495be: jbe 0x1495c0; mov eax, 0xffffffff; pop ebx; ret; 
0x0014c8b6: jbe 0x14c8b8; xor eax, eax; ret; 
0x001585be: jbe 0x1585c0; endbr32; ret; 
0x001593be: jbe 0x1593c0; sub esp, 0xc; mov eax, dword ptr [edx + 4]; push edx; call dword ptr [eax + 0x10]; 
0x001596bf: jbe 0x1596d1; push ebx; call dword ptr [esi + 0x14]; 
0x0015a754: jbe 0x15a760; mov eax, 2; pop ebx; pop esi; ret; 
0x0015aa0e: jbe 0x15aa10; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0015aa86: jbe 0x15aa88; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0015ac3d: jbe 0x15ac4b; push edi; call dword ptr [eax + 8]; 
0x0015ac80: jbe 0x15ac8e; push edi; call dword ptr [eax + 0x10]; 
0x001639de: jbe 0x1639e0; sub esp, 8; mov eax, dword ptr [ebx + 8]; push dword ptr [esp + 0x14]; push ebx; call dword ptr [eax]; 
0x0016570e: jbe 0x165710; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x001657fe: jbe 0x165800; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x00165dde: jbe 0x165de0; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x00166c1a: jbe 0x166c28; add dword ptr [esi + 0x14], edi; pop ebx; pop esi; pop edi; ret; 
0x0016bba0: jbe 0x16bb93; inc dword ptr [ebx + 0x448b10c4]; and al, 0xc; add esp, 0x18; pop ebx; ret; 
0x0016d352: jbe 0x16d2d7; in al, dx; add al, 0x83; ret; 
0x0016d946: jbe 0x16d948; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0016eb36: jbe 0x16eb38; sub esp, 8; mov eax, dword ptr [ebx + 0x3a0]; push ecx; push edx; call dword ptr [eax + 0x28]; 
0x00170465: jbe 0x17046b; push ebp; mov eax, dword ptr [esp + 0x10]; call eax; 
0x0017199e: jbe 0x1719a0; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x00171ade: jbe 0x171ae0; test al, al; jne 0x171b04; mov eax, 4; add esp, 0xc; ret; 
0x00172362: jbe 0x172480; sub esp, 8; push 0; push esi; call dword ptr [ebx + 8]; 
0x0017297e: jbe 0x17298b; add byte ptr [ebx - 0x5397ef14], al; add byte ptr [eax], al; add al, ch; ret 0xead7; 
0x00172a72: jbe 0x172aa5; stc; call dword ptr [eax + 0x6a]; 
0x00173f29: jbe 0x174000; sub esp, 0xc; push esi; call dword ptr [ebp + 0x44]; 
0x00174072: jbe 0x174080; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x0018c9ee: jbe 0x18c9f0; mov eax, 1; ja 0x18c9f9; neg eax; pop ebp; ret; 
0x0018c913: jbe 0x18ca03; movzx ecx, byte ptr [eax + 3]; movzx eax, byte ptr [edx + 3]; sub eax, ecx; pop ebp; ret; 
0x0018c933: jbe 0x18ca03; movzx ecx, byte ptr [eax + 4]; movzx eax, byte ptr [edx + 4]; sub eax, ecx; pop ebp; ret; 
0x001920ee: jbe 0x1920f0; mov eax, 1; ja 0x1920f9; neg eax; pop ebp; ret; 
0x001956ce: jbe 0x1956d0; pop ebx; mov eax, 1; ja 0x1956da; neg eax; ret; 
0x0019635e: jbe 0x196360; and eax, 3; jne 0x196100; xor eax, eax; pop edi; ret; 
0x0019636e: jbe 0x196370; and eax, 7; jne 0x196100; xor eax, eax; pop edi; ret; 
0x0019637e: jbe 0x196380; and eax, 0x1f; jne 0x196100; xor eax, eax; pop edi; ret; 
0x0019638e: jbe 0x196390; and eax, 0x3f; jne 0x196100; xor eax, eax; pop edi; ret; 
0x0019639e: jbe 0x1963a0; and eax, 0x7f; jne 0x196100; xor eax, eax; pop edi; ret; 
0x001963ae: jbe 0x1963b0; and eax, 0x1ff; jne 0x196100; xor eax, eax; pop edi; ret; 
0x00196f8e: jbe 0x196f90; add edx, 2; jl 0x197040; lea eax, [ecx + 2]; ret; 
0x00196f9e: jbe 0x196fa0; add edx, 3; jl 0x197040; lea eax, [ecx + 3]; ret; 
0x00196fae: jbe 0x196fb0; add edx, 5; jl 0x197040; lea eax, [ecx + 5]; ret; 
0x00196fbe: jbe 0x196fc0; add edx, 6; jl 0x197040; lea eax, [ecx + 6]; ret; 
0x00197b7e: jbe 0x197b80; xor eax, eax; ret; 
0x0019804e: jbe 0x198050; pop edi; pop esi; pop ebx; ret; 
0x0017df53: jbe 0x1c1adf5d; mov edi, dword ptr [esi]; jmp ebx; 
0x0002278e: jbe 0x22790; endbr32; call 0x171e01; add eax, 0x207867; mov eax, dword ptr [eax + 0xfec]; ret; 
0x0002c7b1: jbe 0x2c7b7; call 0x20140; add esp, 0x14; pop ebx; pop esi; ret; 
0x0002ed3d: jbe 0x2ed56; mov edx, dword ptr [ebx + eax*4 + 0x24]; pop ebx; mov eax, edx; ret; 
0x00034ebe: jbe 0x34ec0; xor eax, eax; ret; 
0x00038526: jbe 0x38528; mov eax, 0xffffffff; ret; 
0x0003a2ee: jbe 0x3a2f0; call dword ptr [ebx]; 
0x0003eeaa: jbe 0x3eea5; call dword ptr [eax + 0x68]; 
0x0003eecd: jbe 0x3eec8; call dword ptr [eax + 0x68]; 
0x00040870: jbe 0x4086b; call dword ptr [eax - 0x73]; 
0x000413dc: jbe 0x413d7; call dword ptr [eax - 0x73]; 
0x000413ff: jbe 0x413fa; call dword ptr [eax - 0x73]; 
0x00041412: jbe 0x4140d; call dword ptr [eax - 0x18]; 
0x00041422: jbe 0x4141d; call dword ptr [eax - 0x73]; 
0x00041445: jbe 0x41440; call dword ptr [eax - 0x73]; 
0x00041468: jbe 0x41463; call dword ptr [eax - 0x73]; 
0x00041492: jbe 0x4148d; call dword ptr [eax - 0x73]; 
0x000414c1: jbe 0x414bc; call dword ptr [eax - 0x73]; 
0x00041521: jbe 0x4151c; call dword ptr [eax - 0x73]; 
0x00041544: jbe 0x4153f; call dword ptr [eax - 0x73]; 
0x00041567: jbe 0x41562; call dword ptr [eax - 0x73]; 
0x0004159a: jbe 0x41595; call dword ptr [eax - 0x73]; 
0x000415bb: jbe 0x415b6; call dword ptr [eax - 0x73]; 
0x000415de: jbe 0x415d9; call dword ptr [eax - 0x73]; 
0x00041601: jbe 0x415fc; call dword ptr [eax - 0x73]; 
0x00041f4a: jbe 0x41f45; call dword ptr [eax + 0x68]; 
0x00041f6d: jbe 0x41f68; call dword ptr [eax + 0x68]; 
0x00043a4f: jbe 0x43a4a; call dword ptr [eax - 0x73]; 
0x00044612: jbe 0x4460d; call dword ptr [eax - 0x73]; 
0x00044635: jbe 0x44630; call dword ptr [eax - 0x73]; 
0x00044658: jbe 0x44653; call dword ptr [eax - 0x73]; 
0x0004467b: jbe 0x44676; call dword ptr [eax - 0x73]; 
0x0004469e: jbe 0x44699; call dword ptr [eax - 0x73]; 
0x000446c1: jbe 0x446bc; call dword ptr [eax - 0x73]; 
0x000446eb: jbe 0x446e6; call dword ptr [eax - 0x73]; 
0x0004470e: jbe 0x44709; call dword ptr [eax - 0x73]; 
0x00044731: jbe 0x4472c; call dword ptr [eax - 0x73]; 
0x00044754: jbe 0x4474f; call dword ptr [eax - 0x73]; 
0x00044777: jbe 0x44772; call dword ptr [eax - 0x73]; 
0x0004479a: jbe 0x44795; call dword ptr [eax - 0x73]; 
0x000447bd: jbe 0x447b8; call dword ptr [eax - 0x73]; 
0x00044805: jbe 0x44800; call dword ptr [eax - 0x73]; 
0x00044828: jbe 0x44823; call dword ptr [eax - 0x73]; 
0x0004484b: jbe 0x44846; call dword ptr [eax - 0x73]; 
0x0004485e: jbe 0x44859; call dword ptr [eax - 0x18]; 
0x0004516a: jbe 0x45165; call dword ptr [eax + 0x68]; 
0x0004518d: jbe 0x45188; call dword ptr [eax + 0x68]; 
0x00046b9e: jbe 0x46b99; call dword ptr [eax - 0x73]; 
0x000477e0: jbe 0x477db; call dword ptr [eax - 0x73]; 
0x00047803: jbe 0x477fe; call dword ptr [eax - 0x73]; 
0x00047826: jbe 0x47821; call dword ptr [eax - 0x73]; 
0x00047849: jbe 0x47844; call dword ptr [eax - 0x73]; 
0x0004789c: jbe 0x47897; call dword ptr [eax - 0x73]; 
0x000478bf: jbe 0x478ba; call dword ptr [eax - 0x73]; 
0x000478e2: jbe 0x478dd; call dword ptr [eax - 0x73]; 
0x00047905: jbe 0x47900; call dword ptr [eax - 0x73]; 
0x00047918: jbe 0x47913; call dword ptr [eax - 0x18]; 
0x00047928: jbe 0x47923; call dword ptr [eax - 0x73]; 
0x0004794b: jbe 0x47946; call dword ptr [eax - 0x73]; 
0x0004796e: jbe 0x47969; call dword ptr [eax - 0x73]; 
0x00047991: jbe 0x4798c; call dword ptr [eax - 0x73]; 
0x000479b4: jbe 0x479af; call dword ptr [eax - 0x73]; 
0x000479d7: jbe 0x479d2; call dword ptr [eax - 0x73]; 
0x00047a01: jbe 0x479fc; call dword ptr [eax - 0x73]; 
0x0004ddaa: jbe 0x4dda5; call dword ptr [eax + 0x68]; 
0x0004ddcd: jbe 0x4ddc8; call dword ptr [eax + 0x68]; 
0x0004ff89: jbe 0x4ff84; call dword ptr [eax - 0x73]; 
0x00050fd0: jbe 0x50fcb; call dword ptr [eax - 0x73]; 
0x00050ff5: jbe 0x50ff0; call dword ptr [eax - 0x73]; 
0x0005101a: jbe 0x51015; call dword ptr [eax - 0x73]; 
0x0005103f: jbe 0x5103a; call dword ptr [eax - 0x73]; 
0x00051064: jbe 0x5105f; call dword ptr [eax - 0x73]; 
0x00051089: jbe 0x51084; call dword ptr [eax - 0x73]; 
0x000510e7: jbe 0x510e2; call dword ptr [eax - 0x73]; 
0x0005110c: jbe 0x51107; call dword ptr [eax - 0x73]; 
0x0005111f: jbe 0x5111a; call dword ptr [eax - 0x18]; 
0x00051131: jbe 0x5112c; call dword ptr [eax - 0x73]; 
0x00051156: jbe 0x51151; call dword ptr [eax - 0x73]; 
0x0005117b: jbe 0x51176; call dword ptr [eax - 0x73]; 
0x000511a0: jbe 0x5119b; call dword ptr [eax - 0x73]; 
0x000511ca: jbe 0x511c5; call dword ptr [eax - 0x73]; 
0x000511ef: jbe 0x511ea; call dword ptr [eax - 0x73]; 
0x00051214: jbe 0x5120f; call dword ptr [eax - 0x73]; 
0x00051802: jbe 0x5178d; ret 0x40c7; 
0x0005692d: jbe 0x56928; call dword ptr [eax - 0x18]; 
0x00057bb6: jbe 0x57b3d; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000600bb: jbe 0x6008f; mov dword ptr [ebx], edi; pop ebx; pop esi; pop edi; ret; 
0x000674f5: jbe 0x680ba; sub esp, 4; push ebx; push dword ptr [ebp - 0x88c]; push dword ptr [ebp - 0x87c]; call dword ptr [edx + 0x1c]; 
0x00067f6c: jbe 0x68488; sub esp, 4; push ebx; push edx; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x00068b3b: jbe 0x69c00; sub esp, 4; push ebx; push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x000698a1: jbe 0x6a328; sub esp, 4; push ebp; push dword ptr [esp + 0x44]; push edi; call dword ptr [ebx + 0x1c]; 
0x00069054: jbe 0x6a3ed; sub esp, 4; push ebx; push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x0006a91b: jbe 0x6a8ef; mov dword ptr [ebx], edi; pop ebx; pop esi; pop edi; ret; 
0x0006dd63: jbe 0x6eea0; sub esp, 4; push ebx; push esi; push ebp; call dword ptr [edi + 0x1c]; 
0x000703fb: jbe 0x703cf; mov dword ptr [ebx], edi; pop ebx; pop esi; pop edi; ret; 
0x00070fbf: jbe 0x71130; sub esp, 8; push 0; push esi; call dword ptr [ebx + 8]; 
0x00071483: jbe 0x714d8; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x00071d14: jbe 0x71d80; sub esp, 4; push edi; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x00072303: jbe 0x72400; sub esp, 4; push edi; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x00072b71: jbe 0x72b9f; sub esp, 4; push edi; push dword ptr [esp + 8]; push ebx; call dword ptr [ebp + 0x1c]; 
0x00073b4c: jbe 0x73b91; sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x00074971: jbe 0x74990; sub esp, 4; push esi; push dword ptr [esp + 0x38]; push edi; call dword ptr [edx + 0x1c]; 
0x00074c2e: jbe 0x74c30; sub esp, 4; push 0x10; push edi; push ebx; call dword ptr [eax + 0x1c]; 
0x00075bb7: jbe 0x75bf0; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x000761ae: jbe 0x76126; pop ebx; mov eax, dword ptr [edx]; pop esi; pop edi; ret; 
0x00076348: jbe 0x76378; sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x000774fe: jbe 0x7757e; mov eax, dword ptr [ebp - 0x40]; sub esp, 8; push -1; push dword ptr [edi]; call dword ptr [eax + 0xc]; 
0x00077f23: jbe 0x780ab; push 1; push 0; push 0; push dword ptr [esp + 0x18]; call dword ptr [ebx + 0x40]; 
0x0007812e: jbe 0x78130; add esp, 4; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x00079599: jbe 0x79595; jmp dword ptr [esi - 0x70]; 
0x00079620: jbe 0x797f0; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x0007a298: jbe 0x7a2f0; sub esp, 8; push 0; push esi; call dword ptr [ebp + 8]; 
0x0007ab96: jbe 0x7ab99; add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x3c]; sub esp, 0xc; push esi; call dword ptr [eax + 0x30]; 
0x0007ab94: jbe 0x7ad10; mov eax, dword ptr [ebp - 0x3c]; sub esp, 0xc; push esi; call dword ptr [eax + 0x30]; 
0x0007b066: jbe 0x7b068; mov edx, 1; mov eax, edx; ret; 
0x0007bfba: jbe 0x7bfe0; sub esp, 0xc; push ebx; call dword ptr [esi + 0x30]; 
0x0007c1ce: jbe 0x7c230; sub esp, 4; push esi; push dword ptr [esp + 0x28]; push edi; call dword ptr [ebp + 0x1c]; 
0x0007c350: jbe 0x7c3a0; sub esp, 4; push esi; push ebp; push edi; call dword ptr [edx + 0x1c]; 
0x0007c4f1: jbe 0x7c518; push dword ptr [esp + 0x2c]; push edi; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x0007c7f5: jbe 0x7ca10; sub esp, 8; lea eax, [esp + 0x28]; push eax; push esi; call dword ptr [edi + 0x48]; 
0x0007d687: jbe 0x7d6a1; sub esp, 4; push ebp; push dword ptr [esp + 0x3c]; push edi; call dword ptr [esi + 0x20]; 
0x0007d779: jbe 0x7d878; sub esp, 4; push eax; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x0007dddd: jbe 0x7df08; sub esp, 0xc; push ebx; call dword ptr [esi + 0x44]; 
0x0007df83: jbe 0x7dfc0; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x0007f97c: jbe 0x7f9d0; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x0007fa27: jbe 0x7fa50; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x0007fd1d: jbe 0x7fdc8; sub esp, 0xc; push esi; call dword ptr [ebp + 0x30]; 
0x00080216: jbe 0x80240; sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x00080e1e: jbe 0x80e20; endbr32; mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x0008299c: jbe 0x829b8; add byte ptr [ebx - 0x7cfbdbbc], cl; cmp byte ptr [ecx], al; je 0x829b0; ret; 
0x0008372e: jbe 0x83730; add esp, 4; pop ebx; pop esi; ret; 
0x0008468e: jbe 0x84690; and eax, 0xfffffffd; mov dword ptr [ecx + 8], eax; xor eax, eax; ret; 
0x00084724: jbe 0x84730; ret; 
0x0008475e: jbe 0x84760; mov eax, dword ptr [esp + 4]; and dword ptr [eax + 8], 0xfffffffb; xor eax, eax; ret; 
0x0008486e: jbe 0x84870; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x14], edx; xor eax, eax; ret; 
0x00084a84: jbe 0x84abf; mov ecx, dword ptr [edi + 0xc]; mov eax, 0xf0; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00084bbe: jbe 0x84bc0; mov eax, 0x16; ret; 
0x00084dda: jbe 0x84e18; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x0008668e: jbe 0x86690; mov eax, 0x16; ret; 
0x00087e7c: jbe 0x87e88; pop ebx; neg eax; pop esi; pop edi; ret; 
0x00087ee5: jbe 0x87ef0; add esp, 4; neg eax; pop ebx; pop esi; ret; 
0x00088386: jbe 0x88388; mov eax, 3; ret; 
0x0008d71e: jbe 0x8d720; mov eax, 0x16; ret; 
0x0008ea4e: jbe 0x8ea50; mov dword ptr [eax + 4], edx; ret; 
0x0009439a: jbe 0x943a0; ret; 
0x000943de: jbe 0x943e0; nop; mov dword ptr [edx + 0x204], eax; ret; 
0x000943da: jbe 0x943e0; ret; 
0x00094578: jbe 0x94580; ret; 
0x00095c9e: jbe 0x95ca0; xor eax, eax; ret; 
0x0009889e: jbe 0x988a0; ret; 
0x0009e02a: jbe 0x9e041; pop ebx; pop esi; pop edi; ret; 
0x000a3e8e: jbe 0xa3e90; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x000a3efe: jbe 0xa3f00; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000a5dce: jbe 0xa5dd0; movlpd qword ptr [ecx], xmm0; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x000a813e: jbe 0xa8140; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; pop edi; ret; 
0x000a83de: jbe 0xa83e0; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x000aa22e: jbe 0xaa230; movlpd qword ptr [ecx], xmm0; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x000ab4ee: jbe 0xab4f0; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x000ac40e: jbe 0xac410; mov word ptr [edi], dx; pop edi; pop esi; pop ebx; ret; 
0x000ac4de: jbe 0xac4e0; movdqu xmmword ptr [edi - 1], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000ac69e: jbe 0xac6a0; mov eax, edi; pop edi; pop esi; pop ebx; ret; 
0x000ac9de: jbe 0xac9e0; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; pop edi; ret; 
0x000adb2e: jbe 0xadb30; mov word ptr [edi], dx; pop edi; pop esi; pop ebx; ret; 
0x000adbfe: jbe 0xadc00; movdqu xmmword ptr [edi - 1], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000addce: jbe 0xaddd0; mov eax, edi; pop edi; pop esi; pop ebx; ret; 
0x000b31ba: jbe 0xb31be; mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b367e: jbe 0xb3680; pop ebx; pop esi; ret; 
0x000b39be: jbe 0xb39c0; xor eax, eax; pop edi; ret; 
0x000b3a22: jbe 0xb3a50; add eax, ecx; ret; 
0x000b3cf5: jbe 0xb3d30; add eax, edi; pop edi; ret; 
0x000b3d08: jbe 0xb3d30; lea eax, [edi + eax + 0x10]; pop edi; ret; 
0x000b3d18: jbe 0xb3d30; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x000b3d28: jbe 0xb3d30; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000b3f8e: jbe 0xb3f90; bsr eax, eax; lea eax, [eax + ecx + 0x10]; ret; 
0x000b43be: jbe 0xb43c0; bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x000b592e: jbe 0xb5930; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1d8]; ret; 
0x000b593e: jbe 0xb5940; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1ac]; ret; 
0x000b594e: jbe 0xb5950; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1b0]; ret; 
0x000b595e: jbe 0xb5960; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1b4]; ret; 
0x000b596e: jbe 0xb5970; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1b8]; ret; 
0x000b597e: jbe 0xb5980; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1bc]; ret; 
0x000b598e: jbe 0xb5990; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1c0]; ret; 
0x000b599e: jbe 0xb59a0; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1c4]; ret; 
0x000b59ae: jbe 0xb59b0; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1c8]; ret; 
0x000b59be: jbe 0xb59c0; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1cc]; ret; 
0x000b59ce: jbe 0xb59d0; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1d0]; ret; 
0x000b59de: jbe 0xb59e0; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1d4]; ret; 
0x000b59ee: jbe 0xb59f0; mov eax, 0xffffffff; ret; 
0x000b6452: jbe 0xb645c; call ebx; 
0x000b953a: jbe 0xb9535; call dword ptr [eax + 0x68]; 
0x000b955d: jbe 0xb9558; call dword ptr [eax + 0x68]; 
0x000bbac6: jbe 0xbbac1; call dword ptr [eax - 0x18]; 
0x000bbb23: jbe 0xbbb1e; call dword ptr [eax - 0x73]; 
0x000bc4b2: jbe 0xbc4ad; call dword ptr [eax + 0x68]; 
0x000bc4d5: jbe 0xbc4d0; call dword ptr [eax + 0x68]; 
0x000be90a: jbe 0xbe905; call dword ptr [eax - 0x73]; 
0x000be98d: jbe 0xbe988; call dword ptr [eax - 0x18]; 
0x000bf1aa: jbe 0xbf1a5; call dword ptr [eax + 0x68]; 
0x000bf1cd: jbe 0xbf1c8; call dword ptr [eax + 0x68]; 
0x000c14cc: jbe 0xc14c7; call dword ptr [eax - 0x73]; 
0x000c1603: jbe 0xc15fe; call dword ptr [eax - 0x18]; 
0x000c5d12: jbe 0xc5d0d; call dword ptr [eax + 0x68]; 
0x000c5d35: jbe 0xc5d30; call dword ptr [eax + 0x68]; 
0x000c8b9b: jbe 0xc8b96; call dword ptr [eax - 0x18]; 
0x000c8d49: jbe 0xc8d44; call dword ptr [eax - 0x73]; 
0x000c9ede: jbe 0xc9ee0; mov eax, 2; ret; 
0x000c9eee: jbe 0xc9ef0; mov eax, 3; ret; 
0x000c9efe: jbe 0xc9f00; mov eax, 4; ret; 
0x000c9f0e: jbe 0xc9f10; mov eax, 5; ret; 
0x000c9f1e: jbe 0xc9f20; mov eax, 6; ret; 
0x000c9f2e: jbe 0xc9f30; mov eax, 7; ret; 
0x000ced2c: jbe 0xced38; mov eax, edx; ret; 
0x000d70be: jbe 0xd70c0; mov edx, dword ptr [esp + 0xc]; mov dword ptr [edx], ebx; pop ebx; ret; 
0x000e147e: jbe 0xe1480; sub esp, 0xc; mov eax, dword ptr [ebp - 0x19c]; push dword ptr [ebp - 0x198]; call dword ptr [eax + 0x14]; 
0x000e95ee: jbe 0xe95f0; lea eax, [ecx + 1]; pop ebx; pop esi; ret; 
0x000e95fe: jbe 0xe9600; xor eax, eax; pop ebx; pop esi; ret; 
0x000f8b6e: jbe 0xf8b70; sub esp, 0xc; mov eax, dword ptr [ebp - 0x19c]; push dword ptr [ebp - 0x198]; call dword ptr [eax + 0x14]; 
0x000fb24e: jbe 0xfb250; lea ecx, [esp + 4]; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x001018af: je 0x1018d5; adc byte ptr [ebp - 0x6615b7a], cl; call dword ptr [eax - 0x73]; 
0x001040fc: je 0x104124; add byte ptr [eax + 0x9b85b], dl; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x0010449e: je 0x1044c4; sub al, 0xe8; or cl, byte ptr [edx]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x001044ce: je 0x1044f4; sub al, 0xe8; fimul dword ptr [ecx]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x00104b3c: je 0x104b64; add byte ptr [eax - 0x74fbac75], dl; inc ebx; or byte ptr [ecx], bh; ret 0x840f; 
0x00104eea: je 0x104f10; sub al, 0xff; je 0x104f14; sub al, 0xe8; ljmp 0x2cc4:0x83fffff5; ret; 
0x00104eee: je 0x104f14; sub al, 0xe8; ljmp 0x2cc4:0x83fffff5; ret; 
0x0010500e: je 0x105026; mov ecx, dword ptr [esp + 0xc]; mov eax, 0xdb; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00105dbb: je 0x105dcb; sub esp, 8; push eax; push edi; call esi; 
0x0010854b: je 0x10855b; sub esp, 8; push eax; push edi; call esi; 
0x001087b8: je 0x1087c5; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x001087b4: je 0x1087da; sbb al, 0xe8; je 0x1087c5; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0010880a: je 0x108830; sbb byte ptr [edx - 0x64], ch; call 0x108ad0; add esp, 0x18; pop ebx; ret; 
0x0010889d: je 0x1088c3; sbb byte ptr [edx - 0x64], ch; call 0x108ad0; add esp, 0x18; pop ebx; ret; 
0x001088be: je 0x1088e4; sbb byte ptr [edx - 0x64], ch; call 0x108c90; add esp, 0x1c; ret; 
0x00108916: je 0x108973; pop esi; ret; 
0x001089ff: je 0x108a5c; pop esi; ret; 
0x00108a51: je 0x108a77; sbb byte ptr [edx - 0x64], ch; call 0x108c90; add esp, 0x1c; ret; 
0x00108aa9: je 0x108b06; pop esi; ret; 
0x00109030: je 0x10908d; pop esi; ret; 
0x00109344: je 0x10936a; sub byte ptr [edx - 0x64], ch; call 0x109360; add esp, 0x2c; ret; 
0x00109705: je 0x10972d; add byte ptr [ebx - 0x1336a], cl; jmp dword ptr [ebp - 0x75]; 
0x00109765: je 0x10978d; add byte ptr [ebx - 0x1336a], cl; jmp dword ptr [ebp - 0x75]; 
0x001099b1: je 0x1099d7; sbb byte ptr [edx - 0x64], ch; call 0x1099c0; add esp, 0x1c; ret; 
0x0010a7b5: je 0x10a7dd; add byte ptr [ebx + 0xa82494], cl; add byte ptr [eax], al; mov eax, 0x133; call dword ptr gs:[0x10]; 
0x0010aad0: je 0x10aaf6; sbb al, 0xe8; or byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0010aefc: je 0x10af24; add byte ptr [eax - 0x887a418], dl; dec dword ptr [ebx - 0x76dfdba4]; ret 0x6b8; 
0x0010b2e1: je 0x10b307; and byte ptr [esi - 0x75], dl; jl 0x10b30c; xor byte ptr [ebp - 0x6b59779], cl; call dword ptr [eax - 0x18]; 
0x0010bced: je 0x10bd15; add byte ptr [ebx - 0x1336d], cl; jmp dword ptr [ebp - 0x75]; 
0x0010c97f: je 0x10c9a5; xor bh, bh; jne 0x10c991; call dword ptr [ebp + 0x24]; 
0x0010c9d3: je 0x10c9f9; cmp al, 0xe8; jne 0x10c997; cld; jmp dword ptr [ebp - 0x5f]; 
0x0010cc4f: je 0x10cc75; xor bh, bh; jne 0x10cc61; call dword ptr [ebp + 0x24]; 
0x0010ccba: je 0x10cce0; xor bh, bh; jne 0x10cccc; call dword ptr [ebp + 0x24]; 
0x0010da0f: je 0x10da35; xor bh, bh; jne 0x10da21; call dword ptr [ebp + 0x24]; 
0x0010da63: je 0x10da89; cmp al, 0xe8; in eax, 0xad; cld; jmp dword ptr [ebp - 0x5f]; 
0x0010dcdf: je 0x10dd05; xor bh, bh; jne 0x10dcf1; call dword ptr [ebp + 0x24]; 
0x0010dd4a: je 0x10dd70; xor bh, bh; jne 0x10dd5c; call dword ptr [ebp + 0x24]; 
0x00110275: je 0x11029d; add byte ptr [ebx - 0x13342], cl; jmp dword ptr [ebp - 0x5f]; 
0x00111a75: je 0x111a9b; sbb byte ptr [ecx + 0x247c8bca], cl; sbb al, 0xc1; cli; pop ds; call dword ptr gs:[0x10]; 
0x001122bf: je 0x1122e5; pop esp; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x001122b8: je 0x112318; mov ebx, dword ptr [esp + 0x50]; mov esi, dword ptr [esp + 0x5c]; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0011236c: je 0x112392; pop esp; mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x001126e2: je 0x1126f8; mov dword ptr [edx], 0xffffffff; mov dword ptr [edx + 4], 0xffffffff; pop esi; pop edi; ret; 
0x00112887: je 0x1128e4; pop esi; ret; 
0x00112e35: je 0x112e5d; add byte ptr [ebx - 0x13342], cl; jmp dword ptr [ebp - 0x5f]; 
0x0011490f: je 0x114935; xor bh, bh; jne 0x114921; call dword ptr [ebp + 0x24]; 
0x00114963: je 0x114989; cmp al, 0xe8; in eax, 0x3e; cld; jmp dword ptr [ebp - 0x5f]; 
0x00114bef: je 0x114c15; xor bh, bh; jne 0x114c01; call dword ptr [ebp + 0x24]; 
0x00114c5a: je 0x114c80; xor bh, bh; jne 0x114c6c; call dword ptr [ebp + 0x24]; 
0x00114c75: je 0x114c9b; sbb al, 0xe8; ret; 
0x00115a7b: je 0x115ab0; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00115b2b: je 0x115b60; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00115bd9: je 0x115c00; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x00115c59: je 0x115c80; mov ecx, dword ptr [esp + 0x10]; or dh, 0x80; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x00115cd9: je 0x115d00; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00115d59: je 0x115d80; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x001164e7: je 0x11650d; inc esp; mov ebx, dword ptr [esp + 0x40]; lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00116741: je 0x116767; sbb al, 0xe8; mov bh, 0xa; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00116f11: je 0x116f37; adc byte ptr [ecx + eax], bh; ret 0x1389; 
0x0011802a: je 0x118058; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x001180ca: je 0x1180f8; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x00118176: je 0x1181a8; mov edx, 0xffffffff; mov eax, 0xd0; mov ebx, edx; call dword ptr gs:[0x10]; 
0x00118256: je 0x118288; mov edx, 0xffffffff; mov eax, 0xd2; mov ebx, edx; call dword ptr gs:[0x10]; 
0x0011831a: je 0x11831d; ret; 
0x00118d7c: je 0x118da4; add byte ptr [eax - 0x9662418], dl; dec dword ptr [ebx - 0x76dfdba4]; ret 0x76b8; 
0x00118e5c: je 0x118e84; add byte ptr [eax - 0x9670418], dl; dec dword ptr [ebx - 0x76dfdba4]; ret 0x94b8; 
0x0011930e: je 0x119334; sbb al, 0xe8; ljmp 0x1cc4:0x83fff3f2; ret; 
0x0011937a: je 0x1193a0; sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; call 0x58600; add esp, 0x1c; ret; 
0x001194f5: je 0x11951d; add byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x75]; 
0x00119885: je 0x1198ad; add byte ptr [ebx - 0x7c72f714], al; dec eax; dec ecx; stc; call dword ptr [eax - 0x73]; 
0x00119955: je 0x11997d; add byte ptr [ebx - 0x7c72f714], al; dec eax; dec ecx; stc; call dword ptr [eax - 0x73]; 
0x0011a19c: je 0x11a1b0; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x0011a9c8: je 0x11a9cd; mov dword ptr [ecx + 4], edx; mov dword ptr [edx], ecx; mov dword ptr [edx + 4], eax; ret; 
0x0011a9ef: je 0x11a9f4; mov dword ptr [edx + 4], eax; test eax, eax; je 0x11a9fa; mov dword ptr [eax], edx; ret; 
0x0011a9f6: je 0x11a9fa; mov dword ptr [eax], edx; ret; 
0x0011c8a5: je 0x11c8cb; and byte ptr [ecx], bh; ror byte ptr [edi], 1; dec edi; ret 0x8d50; 
0x0011ce7b: je 0x11cea1; and byte ptr [edi], cl; dec edi; ret 0x8d50; 
0x0011d183: je 0x11d1a9; xor cl, bl; ror byte ptr [edi], 0x9e; ret 0xff85; 
0x0011d404: je 0x11d410; pop ebx; pop esi; pop edi; ret; 
0x0011d747: je 0x11d780; sub esp, 4; push edi; push 0; push ebx; call esi; 
0x0011d7c7: je 0x11d800; sub esp, 4; push edi; push 0; push ebx; call esi; 
0x0011dbc8: je 0x11dbe8; sub esp, 8; push dword ptr [ebx]; mov ebp, ebx; push esi; call edi; 
0x0011e23e: je 0x11e244; test edx, edx; jne 0x11e248; ret; 
0x0011e262: je 0x11e268; test edx, edx; jne 0x11e270; ret; 
0x0011e28e: je 0x11e298; jmp 0x11d830; lea esi, [esi]; ret; 
0x0011e56e: je 0x11e594; sbb al, 0xe8; mov edx, 0x83fffffe; les ebx, ptr [eax]; pop ebx; ret; 
0x0011e622: je 0x11e648; sbb al, 0xff; je 0x11e64c; sbb al, 0xe8; cmp bh, 0xff; jmp dword ptr [esi - 0x70]; 
0x0011e626: je 0x11e64c; sbb al, 0xe8; cmp bh, 0xff; jmp dword ptr [esi - 0x70]; 
0x0011e7e8: je 0x11e830; call eax; 
0x0011e92a: je 0x11e9c8; call eax; 
0x0011ed0b: je 0x11ed3e; add dword ptr [ebx + 0x39142454], ecx; ret 0x1a77; 
0x0011eefe: je 0x11ef08; add esp, 0xc; ret; 
0x0011f628: je 0x11f638; cmp ecx, edx; jne 0x11f620; mov eax, dword ptr [eax + 4]; pop ebx; ret; 
0x0011f67c: je 0x11f6a2; adc al, 0xf; xchg byte ptr [esi + ecx - 0x137d0000], bl; or byte ptr [ebp - 0x6b42d7d], cl; call dword ptr [eax + 0x57]; 
0x00120d15: je 0x120d3d; add byte ptr [edi + 0x452083], al; add byte ptr [ebx - 0x71f0fe08], al; ret; 
0x00121058: je 0x12107e; sbb byte ptr [edx], ch; call 0x122700; add esp, 0x1c; ret; 
0x00121303: je 0x121306; ret; 
0x00121af4: je 0x121b1a; cmp al, 0xb8; add byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00121bd4: je 0x121bfa; cmp al, 0xb8; cmp eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00121cb4: je 0x121cda; cmp al, 0xb8; cmp al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00121f3b: je 0x121f70; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x178; call dword ptr gs:[0x10]; 
0x00121f6b: je 0x121fbb; pop ebx; pop esi; ret; 
0x00121ff5: je 0x122010; mov eax, 0x17c; call dword ptr gs:[0x10]; 
0x00122363: je 0x1223d0; mov ebx, dword ptr [esp + 0x50]; mov ecx, dword ptr [esp + 0x54]; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x00122dc9: je 0x122e00; lea ecx, [esp + 0xc]; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x00122f49: je 0x122f80; lea ecx, [esp + 0xc]; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x00123716: je 0x123721; pop esi; pop ebx; jl 0x216d0; ret; 
0x00123704: je 0x12372a; sbb byte ptr [ecx + 0x244c8bcb], cl; adc byte ptr [eax + 0x1b3], bh; int 0x80; 
0x00123d1b: je 0x123d1d; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00124147: je 0x12416d; and byte ptr [ebp - 0x6aa317a], cl; call dword ptr [eax - 0x18]; 
0x001241ec: je 0x124214; add byte ptr [eax - 0x7c76f373], dl; ret 0x8d01; 
0x00124aca: je 0x124af0; add al, 0x89; loope 0x124a59; ret 0x448b; 
0x001256a4: je 0x12565b; add byte ptr [ebx - 0x7cacfe3a], al; ret; 
0x0012590d: je 0x125935; add byte ptr [ebx - 0x1337d], cl; jmp dword ptr [ebp - 0x75]; 
0x00125b4a: je 0x125b70; push eax; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x00125c5d: je 0x125c85; add byte ptr [ebx - 0x1336b], cl; jmp dword ptr [ebp - 0x75]; 
0x001260b2: je 0x1260d8; sbb al, 0xe8; add ax, 0; add esp, 0x1c; ret; 
0x00126523: je 0x126580; mov ebx, dword ptr [esp + 0x50]; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x00126700: je 0x126726; or byte ptr [ebx - 0x47cbdb84], cl; jne 0x12670a; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00126c30: je 0x126c38; ret; 
0x00126c34: je 0x126c5c; add byte ptr [eax + 0xc24448b], dl; mov edx, dword ptr [edx]; mov dword ptr [eax], edx; mov eax, 1; ret; 
0x00126f02: je 0x126f1f; lea edx, [edi + edi]; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; call dword ptr gs:[0x10]; 
0x00127084: je 0x1270ac; add byte ptr [eax + 0x92b8], dl; add byte ptr [ebx - 0x4f763], cl; dec dword ptr [ebx - 0x4fb73]; jmp dword ptr [ebp - 1]; 
0x00127516: je 0x127528; mov dword ptr [ebx + 0x260], esi; add esp, 4; pop ebx; pop esi; ret; 
0x00127580: je 0x127584; add byte ptr [eax], al; call 0x20140; add esp, 0x18; pop ebx; ret; 
0x00129e8d: je 0x129eb5; add byte ptr [ebx - 0x13379], cl; jmp dword ptr [ebp - 0x75]; 
0x0012a7ef: je 0x12a806; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x0012c05c: je 0x12c084; add byte ptr [eax + 0x39ff438d], dl; lds ecx, ptr [edi]; xchg dword ptr [0x89000002], edx; ret; 
0x0012c1cb: je 0x12c1f1; or byte ptr [ebp + 0x39013044], cl; ret; 
0x0012c3dc: je 0x12c402; add al, 0x89; inc edi; adc al, 0x29; ret; 
0x0012c608: je 0x12c62e; adc al, ch; jmp 0x8112ca68; ret; 
0x0012c94e: je 0x12c974; and byte ptr [esi + 0x53], dl; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0012ca2b: je 0x12ca18; pop ebx; mov eax, ecx; pop esi; pop edi; ret; 
0x0012cda4: je 0x12cdca; or al, 0x68; add dword ptr [eax], eax; add byte ptr [edx], al; mov eax, dword ptr [esp + 0x20]; call dword ptr [eax + 0x14]; 
0x0012ceaf: je 0x12ced5; sbb byte ptr [edx], ch; push 0x2000004; call eax; 
0x0012d21e: je 0x12d228; xor eax, eax; pop ebx; ret; 
0x001302c1: je 0x1302d0; add esp, 8; pop ebx; ret; 
0x001302da: je 0x130300; sub esp, 8; push ebx; push dword ptr [ebx + 0x30]; call eax; 
0x001312b3: je 0x1312c8; ret; 
0x00131365: je 0x13138d; add byte ptr [ebp + 0x5b8f865], cl; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop ebp; ret; 
0x00131bf2: je 0x131c0a; lea eax, [edx - 0xae9c0]; test byte ptr [ecx + 0x184], 1; lea edx, [edx - 0xaf060]; cmove eax, edx; ret; 
0x00131d02: je 0x131d28; sbb al, 0xe8; jbe 0x131d37; clc; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00131f77: je 0x131f9d; xor al, 0x52; push dword ptr [esp + 0x2c]; call 0x7a3b0; add esp, 0x2c; ret; 
0x001326a5: je 0x1326cd; add byte ptr [ebx - 0x13353], cl; jmp dword ptr [ebp - 0x75]; 
0x001328d5: je 0x1328e0; add esp, 8; pop ebx; ret; 
0x00132d16: je 0x132d3c; sbb al, 0xe8; mov byte ptr [0x83fff82f], al; les ebx, ptr [eax]; pop ebx; ret; 
0x00132d24: je 0x132d4c; add byte ptr [eax - 0xabc18], dl; jmp dword ptr [esi - 0x70]; 
0x00132d95: je 0x132dbd; add byte ptr [ebx - 0x7cefdbbc], cl; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00132f34: je 0x132f5c; add byte ptr [eax - 0xccc18], dl; jmp dword ptr [esi - 0x70]; 
0x00132f67: je 0x132f8d; xor al, 0x52; push dword ptr [esp + 0x2c]; call 0x75350; add esp, 0x2c; ret; 
0x00132fdc: je 0x133004; add byte ptr [eax - 0xd7418], dl; jmp dword ptr [esi - 0x70]; 
0x001332cd: je 0x1332f5; add byte ptr [ebx - 0x13365], cl; jmp dword ptr [ebp - 0x75]; 
0x001343a5: je 0x1343cb; sub al, 0xc7; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0x1334a], cl; jmp dword ptr [ebp - 0x5f]; 
0x0013a504: je 0x13a52a; sbb byte ptr [esi - 0x3f], ah; ret; 
0x0013ad2d: je 0x13ad55; add byte ptr [ebx - 0x7972f314], al; cmc; pop ebx; stc; call dword ptr [eax - 0x18]; 
0x0013bfc5: je 0x13bfd0; sub esp, 0xc; push esi; call eax; 
0x0013c335: je 0x13c340; sub esp, 0xc; push esi; call eax; 
0x0013c4f1: je 0x13c517; pop eax; push dword ptr [esp + 0x58]; push esi; call edi; 
0x0013c4f5: je 0x13c51b; pop eax; push esi; call edi; 
0x0013c87a: je 0x13c88d; sub esp, 0xc; push eax; call 0x16ed20; mov dword ptr [esp], ebp; call esi; 
0x0013cb7a: je 0x13c9f5; sub esp, 0xc; push ebx; call 0x16ed20; mov dword ptr [esp], ebp; call ebx; 
0x0013d625: je 0x13d64d; add byte ptr [ebp - 0x4374b], cl; jmp dword ptr [esi - 0x70]; 
0x0013f96a: je 0x13f960; add esp, 8; pop ebx; ret; 
0x00140835: je 0x14085b; sub byte ptr [ebx - 0x7cd3db84], cl; ret 0x8902; 
0x00141415: je 0x14143d; add al, ch; ret; 
0x001422fc: je 0x142308; add esp, 8; pop ebx; ret; 
0x00142304: je 0x14232c; add byte ptr [eax - 0x7cfffc3a], dl; les ecx, ptr [eax]; pop ebx; ret; 
0x00142eaa: je 0x142ed0; or al, 0x8b; inc esp; and al, 0x20; call eax; 
0x001431c9: je 0x1431ef; or al, 0x8b; inc esp; and al, 0x20; call eax; 
0x00143b35: je 0x143b5d; add byte ptr [ebx - 0x1137a], cl; jmp dword ptr [ebp - 0x75]; 
0x00147193: je 0x1471b9; adc al, 0x8d; xchg byte ptr [edx + 0x5e], bh; stc; call dword ptr [eax - 0x18]; 
0x00147408: je 0x147418; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00147717: je 0x14773d; or al, 0x8d; xchg byte ptr [eax - 0x56], dl; stc; call dword ptr [eax - 0x73]; 
0x0014791d: je 0x147943; xor al, 0x8d; or esp, 0x72; stc; call dword ptr [eax - 0x18]; 
0x001480b9: je 0x1480a6; or ecx, dword ptr [ebp + 0x3c002674]; or dword ptr [edx + ecx - 0x7d], esi; ret; 
0x0014945f: je 0x149485; xor al, 0x89; ret; 
0x00149804: je 0x14982c; add byte ptr [eax - 0x48], dl; call ptr [ebx + 0x5e]; pop edi; ret; 
0x0014a1d4: je 0x14a1fc; add byte ptr [eax + 0xf2efa80], dl; xchg esp, eax; ret 0xc083; 
0x0014ab7c: je 0x14ab88; pop ebx; pop esi; ret; 
0x0014c808: je 0x14c810; add esp, 8; pop ebx; ret; 
0x0014c8ac: je 0x14c8e0; xor ecx, ecx; mov eax, ecx; pop ebx; pop esi; ret; 
0x0014cf0a: je 0x14cf18; jmp 0x14caf0; lea esi, [esi]; ret; 
0x0014d8e2: je 0x14d8ee; add dword ptr [eax + 8], 1; je 0x14d90d; add esp, 0xc; ret; 
0x0014d8e8: je 0x14d90d; add esp, 0xc; ret; 
0x0014e255: je 0x14e25c; cmp dword ptr [eax + 8], edx; jne 0x14e250; ret; 
0x0014f49d: je 0x14f4c3; sbb al, 0x51; push eax; push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0014f4a3: je 0x14f4c9; and al, 0x8b; inc esp; and al, 0x24; call eax; 
0x0014fb19: je 0x14fb3f; sub al, 0xe8; jmp ecx; 
0x00150149: je 0x150130; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00150bfd: je 0x150c25; add byte ptr [ebx + 0x1db8200b], al; add byte ptr [eax], al; add byte ptr [ebx - 0x1336a], cl; jmp dword ptr [ebp - 0x75]; 
0x0015144d: je 0x151460; xor ecx, ecx; cmp eax, 2; jne 0x151470; mov eax, ecx; ret; 
0x001516b7: je 0x15171c; mov byte ptr [ebx + 0x8258], 0; mov dword ptr [ebx + 0x8248], 0; call esi; 
0x00152847: je 0x15286d; or byte ptr [ebp - 0x651577a], cl; call dword ptr [eax - 0x73]; 
0x00152bbd: je 0x152bcc; add byte ptr [ebx - 0x77], dl; ret; 
0x0015467c: je 0x1546a2; sbb byte ptr [ecx - 0x72ec1408], cl; je 0x1546ac; add byte ptr [eax - 0x7cfbbc75], dl; ret; 
0x00154684: je 0x1546ac; add byte ptr [eax - 0x7cfbbc75], dl; ret; 
0x00154d99: je 0x154dbf; cmp al, 0x89; ret; 
0x00154efc: je 0x154f22; cmp byte ptr [edx + 2], ch; push dword ptr [esp + 0x3c]; call 0x154d40; add esp, 0x3c; ret; 
0x00155896: je 0x1558bc; and al, 0xe8; ret 0xffd4; 
0x00157695: je 0x1576bb; and al, 0xe8; ret; 
0x001581a8: je 0x1581ce; adc al, 0x8b; inc esp; and al, 0x14; call eax; 
0x00158344: je 0x15836a; or byte ptr [esi - 0x18], dl; ret; 
0x0015869c: je 0x1586a7; sub esp, 0xc; push esi; call eax; 
0x001588dd: je 0x158905; add byte ptr [ebx + 0x438b08ec], al; adc bh, bh; je 0x15890d; adc al, 0x56; call dword ptr [eax + 4]; 
0x001588e7: je 0x15890d; adc al, 0x56; call dword ptr [eax + 4]; 
0x00158916: je 0x15893c; sbb al, 0x56; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00158925: je 0x158a0d; sub esp, 0xc; mov eax, dword ptr [ebx + 0x10]; push esi; call dword ptr [eax + 0x10]; 
0x00158b6a: je 0x158b75; sub esp, 0xc; push esi; call eax; 
0x00158b4d: je 0x158bb0; mov eax, dword ptr [ebx + 0x10]; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x00158c9a: je 0x158caf; sub esp, 0xc; mov ecx, dword ptr [eax + 4]; push eax; call dword ptr [ecx + 0x10]; 
0x00158d50: je 0x158d76; adc al, 0xff; je 0x158d7a; je 0x158da8; call dword ptr [ecx]; 
0x00158d54: je 0x158d7a; je 0x158da8; call dword ptr [ecx]; 
0x00158d56: je 0x158da8; call dword ptr [ecx]; 
0x00158e47: je 0x158e56; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x00158e8b: je 0x158e98; add esp, 8; pop ebx; ret; 
0x00159578: je 0x15951e; std; jmp dword ptr [esi - 0x70]; 
0x00159598: je 0x1595be; and byte ptr [ebp - 0xc47ef80], cl; jmp dword ptr [ebp - 0x75]; 
0x001596ae: je 0x15963d; mov eax, dword ptr [ebx + 4]; sub esp, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x001596ca: je 0x15963d; sub esp, 0xc; mov eax, dword ptr [ebx + 4]; add esi, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x0015981e: je 0x159844; xor al, 0x56; push ecx; push 5; push ebx; call dword ptr [eax]; 
0x00159b56: je 0x159b01; sub esp, 0xc; push esi; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x00159b79: je 0x159b84; sub esp, 0xc; push esi; call eax; 
0x00159e47: je 0x159cca; sub esp, 0xc; push edi; call eax; 
0x00159e2e: je 0x159e54; and byte ptr [edi - 0x75], dl; inc esp; and al, 0x2c; call eax; 
0x00159ee3: je 0x159f09; and al, 0x8b; inc esp; and al, 0x34; call eax; 
0x00159f30: je 0x159f3b; sub esp, 0xc; push edi; call eax; 
0x00159f17: je 0x159f3d; and byte ptr [edi - 0x75], dl; inc esp; and al, 0x2c; call eax; 
0x00159f88: je 0x159f98; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0015a0fa: je 0x15a120; sbb al, 0xff; je 0x15a124; sbb al, 0xe8; ljmp 0x1cc4:0x830000bc; ret; 
0x0015a0fe: je 0x15a124; sbb al, 0xe8; ljmp 0x1cc4:0x830000bc; ret; 
0x0015a1b3: je 0x15a1c0; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0015a252: je 0x15a270; mov dword ptr [eax], 0x10; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x0015a27a: je 0x15a290; mov dword ptr [eax], 0x10; mov dword ptr [eax + 4], 1; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x0015a2e5: je 0x15a30d; add bh, al; add byte ptr [eax + eax], cl; add byte ptr [eax], al; pop ebx; ret; 
0x0015a7dc: je 0x15a802; or byte ptr [edi - 0x75], dl; inc esp; and al, 0x28; call dword ptr [eax + 0x18]; 
0x0015a814: je 0x15a81f; sub esp, 0xc; push edi; call eax; 
0x0015aa68: je 0x15aa88; sub esp, 0xc; mov eax, dword ptr [ebx + 0x2398]; push esi; call dword ptr [eax + 0x10]; 
0x0015ac48: je 0x15ad4b; sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x0015afad: je 0x15afe0; mov eax, ecx; pop ebx; ret; 
0x0015b021: je 0x15b070; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0015b04f: je 0x15b075; sbb al, 0x53; call dword ptr [eax]; 
0x0015b046: je 0x15b089; sub esp, 8; mov eax, dword ptr [ebx + 4]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax]; 
0x0015b09f: je 0x15b0c5; sbb al, 0x53; call dword ptr [eax + 4]; 
0x0015b2b3: je 0x15b2c0; add esp, 4; pop ebx; pop esi; ret; 
0x0015bc58: je 0x15bc68; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0015c978: je 0x15c980; add esp, 4; pop ebx; pop esi; ret; 
0x0015ca48: je 0x15ca50; add esp, 4; pop ebx; pop esi; ret; 
0x0015cb08: je 0x15cb10; add esp, 4; pop ebx; pop esi; ret; 
0x0015d8cb: je 0x15d8dc; sub esp, 0xc; lea edx, [ebx + 0xac]; push edx; call eax; 
0x0015db57: je 0x15db7d; sub al, 0x56; call dword ptr [eax + 0xc]; 
0x0015dba9: je 0x15dbcf; cmp al, 0x56; mov eax, dword ptr [esp + 0x40]; call eax; 
0x0015ddf8: je 0x15de1e; inc esp; push esi; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x0015df7d: je 0x15dfa5; add byte ptr [ecx], ch; ret; 
0x0015e2df: je 0x15e2ea; sub esp, 0xc; push esi; call eax; 
0x0015e2b8: je 0x15e3f8; mov eax, dword ptr [ebp + 0xb0]; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x0015e51c: je 0x15e52a; sub esp, 0xc; lea edx, [edi + 8]; push edx; call eax; 
0x0015f848: je 0x15f853; sub esp, 0xc; push esi; call eax; 
0x0015fa04: je 0x15fa0f; sub esp, 0xc; push edi; call eax; 
0x00160398: je 0x1603be; sbb al, 0xe8; sar ch, 0xff; inc dword ptr [ebx - 0x72aff33c]; cmp dword ptr [eax + 0x57], -7; call dword ptr [eax + 0x6a]; 
0x0016084f: je 0x160875; sub al, 0x56; call dword ptr [eax + 0xc]; 
0x0016089e: je 0x1608c4; cmp al, 0x56; mov eax, dword ptr [esp + 0x40]; call eax; 
0x00160ac0: je 0x160ae6; inc esp; push esi; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x00160dcd: je 0x160dd8; sub esp, 0xc; push ebp; call eax; 
0x00160daf: je 0x160eb8; mov eax, dword ptr [edi + 0x50]; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x001611a8: je 0x1611b6; sub esp, 0xc; lea edx, [ebx + 0x38]; push edx; call eax; 
0x0016138a: je 0x1613b0; sub al, 0x53; mov eax, dword ptr [esp + 0x18]; call eax; 
0x00161beb: je 0x161c60; mov eax, dword ptr [esi + 0x3c]; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x0016217d: je 0x1621a3; cmp al, 0x55; push edi; push esi; push eax; call dword ptr [edx]; 
0x001622d8: je 0x162335; pop edi; ret; 
0x0016283d: je 0x16284e; sub esp, 0xc; mov eax, dword ptr [edx + 0x20]; push edx; call dword ptr [eax + 0x10]; 
0x00163024: je 0x163030; pop ebx; pop esi; pop edi; ret; 
0x0016309e: je 0x1630a8; pop ebx; pop esi; pop edi; ret; 
0x001630a5: je 0x1630cd; add byte ptr [ebx - 0x637d], cl; call ptr [ebx + 0x5e]; pop edi; ret; 
0x0016312e: je 0x163140; pop ebx; sub eax, -0x80; pop esi; pop edi; ret; 
0x001631be: je 0x1631d0; pop ebx; add eax, 0x90; pop esi; pop edi; ret; 
0x0016324e: je 0x163260; pop ebx; add eax, 0x94; pop esi; pop edi; ret; 
0x00163406: je 0x163410; pop ebx; pop esi; pop edi; ret; 
0x001639e7: je 0x163a0d; adc al, 0x53; call dword ptr [eax]; 
0x00163b12: je 0x163b38; sbb al, 0x53; call eax; 
0x00163bd6: je 0x163bfc; sbb al, 0x53; call dword ptr [eax + 0xc]; 
0x00163e7f: je 0x163e98; mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x163ebc; add esp, 0x1c; ret; 
0x00163fac: je 0x163fba; sub esp, 0xc; lea edx, [edi + 8]; push edx; call eax; 
0x001646c5: je 0x1646d3; sub esp, 0xc; lea edx, [edi + 8]; push edx; call eax; 
0x00164747: je 0x164780; sub esp, 0xc; mov eax, dword ptr [ebp + 0xc]; push edi; call dword ptr [eax + 0x10]; 
0x001654ac: je 0x1654d2; adc byte ptr [ebp - 0x69c1f7a], cl; call dword ptr [eax - 0x73]; 
0x00165573: je 0x165590; sub esp, 4; push -1; push ebp; push esi; call edi; 
0x0016560c: je 0x165636; stc; dec dword ptr [ebx + 0x52530446]; push esi; call dword ptr [eax + 0xc]; 
0x001656e5: je 0x165710; cmp eax, 2; sete al; movzx eax, al; ret; 
0x001657d5: je 0x165800; cmp eax, 2; sete al; movzx eax, al; ret; 
0x00165db5: je 0x165de0; cmp eax, 2; sete al; movzx eax, al; ret; 
0x0016645d: je 0x166490; mov eax, ecx; pop ebx; ret; 
0x001664cd: je 0x166500; mov eax, ecx; pop ebx; ret; 
0x001669eb: je 0x166a11; xor byte ptr [ebx + 0x74ed852f], cl; sbb al, 0x83; in al, dx; add al, 0x6a; call dword ptr [ebp + 0x56]; 
0x0016714e: je 0x167174; add al, 0x83; in al, dx; add al, 0x6a; call dword ptr [ebp + 0x57]; 
0x00167877: je 0x16789d; xor byte ptr [ecx], ch; ret 0x5356; 
0x00167e9c: je 0x167ec2; cmp byte ptr [ebp - 0x64c5f7a], cl; call dword ptr [eax - 0x73]; 
0x00167f57: je 0x167f7d; xor byte ptr [ecx], ch; ret 0x5356; 
0x0016aa4d: je 0x16aa75; add byte ptr [ebx + 0x2901106d], al; ret; 
0x0016b1bc: je 0x16b1e4; add byte ptr [eax - 0x76efbd75], dl; ret 0xf839; 
0x0016be78: je 0x16be6b; inc dword ptr [ebx + 0x448b10c4]; and al, 0xc; add esp, 0x18; pop ebx; ret; 
0x0016c11d: je 0x16c145; add byte ptr [ecx], dh; test byte ptr [ebx - 0xf76fb3c], 0x5b; pop esi; ret; 
0x0016d162: je 0x16d188; sbb byte ptr [ebp - 0x699dc80], cl; call dword ptr [eax - 0x18]; 
0x0016e5ab: je 0x16e5d1; and al, 0x8b; inc esp; and al, 0x24; call eax; 
0x0016ea94: je 0x16eabc; add byte ptr [eax - 0x74f7137d], dl; and dword ptr [eax + 0x51000003], 0x52; call dword ptr [eax + 0x24]; 
0x0016f81d: je 0x16f845; add byte ptr [ebp - 0x7cfbdbbc], cl; ret; 
0x0017064d: je 0x170675; add dh, dh; ret; 
0x00170770: je 0x170796; adc al, 0x8b; inc esp; and al, 0x10; call eax; 
0x00171585: je 0x1715ed; stc; call dword ptr [eax - 0x18]; 
0x00171aca: je 0x171ae4; cmp al, 4; jne 0x21303; mov eax, 8; add esp, 0xc; ret; 
0x00171f7c: je 0x171f6c; inc dword ptr [ebx - 0x247aef3c]; jne 0x171f90; add esp, 8; pop ebx; ret; 
0x00171f8c: je 0x171fb4; add byte ptr [eax - 0x77c2dcf], dl; dec dword ptr [edi]; xchg esp, eax; ret 0x1389; 
0x00171fc1: je 0x171fdb; sub esp, 4; push dword ptr [esp + 0x20]; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x00172025: je 0x172033; lea edx, [ebx - 0x1ba0]; mov dword ptr [eax + 0x94], edx; add esp, 8; pop ebx; ret; 
0x001720a2: je 0x1720b0; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x001729d2: je 0x1729e0; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x0017312f: je 0x173155; or al, 0x53; call dword ptr [ebp + 0x3c]; 
0x00173b91: je 0x173ba0; mov dword ptr [ebx + 0x68], 0xffffffff; add esp, 4; pop ebx; pop esi; ret; 
0x00173c17: je 0x173c30; mov dword ptr [ebx + 0x68], 0xffffffff; add esp, 4; pop ebx; pop esi; ret; 
0x00173e44: je 0x173e50; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x001749e4: je 0x174a0a; sbb al, 0xe8; les eax, ptr [ecx - 0x2708000a]; sbb eax, eax; add esp, 0x1c; ret; 
0x001780c5: je 0x1780ed; add byte ptr [ebx - 0x1336a], cl; jmp dword ptr [ebp - 0x75]; 
0x0017810a: je 0x178130; sub al, 0xff; je 0x178134; sub al, 0xe8; lcall 0x2cc4, 0x83fff8cd; ret; 
0x0017810e: je 0x178134; sub al, 0xe8; lcall 0x2cc4, 0x83fff8cd; ret; 
0x0017a512: je 0x17a538; sub al, 0xff; je 0x17a53c; sub al, 0xe8; ret 0xfb9a; 
0x0017a516: je 0x17a53c; sub al, 0xe8; ret 0xfb9a; 
0x0017b84c: je 0x17b850; mov byte ptr [edi], al; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017bd9c: je 0x17bda0; mov byte ptr [edi], al; pop edi; pop ebx; ret; 
0x0018b0fc: je 0x18b124; add byte ptr [eax + 0xf08b60f], dl; mov dh, 2; sub eax, ecx; ret; 
0x0018b11c: je 0x18b144; add byte ptr [eax + 0x248b60f], dl; movzx eax, byte ptr [edx + 2]; sub eax, ecx; ret; 
0x0018b12c: je 0x18b154; add byte ptr [eax + 0x348b60f], dl; movzx eax, byte ptr [edx + 3]; sub eax, ecx; ret; 
0x0018b13c: je 0x18b164; add byte ptr [eax + 0x448b60f], dl; movzx eax, byte ptr [edx + 4]; sub eax, ecx; ret; 
0x0018b14c: je 0x18b174; add byte ptr [eax + 0x548b60f], dl; movzx eax, byte ptr [edx + 5]; sub eax, ecx; ret; 
0x0018b15c: je 0x18b184; add byte ptr [eax + 0x648b60f], dl; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x0018b16c: je 0x18b194; add byte ptr [eax - 0x7cf73f7d], dl; ret 0xf608; 
0x0018b1ac: je 0x18b1d4; add byte ptr [eax + 0x1b8], dl; add byte ptr [edi + 2], dh; neg eax; ret; 
0x001918bc: je 0x1918e4; add byte ptr [eax - 0x7cf73f7d], dl; ret 0x8308; 
0x001922bd: je 0x1922d0; pop ebx; mov eax, 1; ja 0x1922c9; neg eax; ret; 
0x001922dc: je 0x192304; add byte ptr [eax - 0x49f0f18e], dl; add byte ptr [edi], cl; mov dh, 0x12; sub eax, edx; ret; 
0x00192abc: je 0x192ae4; add byte ptr [eax + 0x486f0ff3], dl; ret; 
0x00193c1d: je 0x193c45; add byte ptr [ebx + 0x31], bl; rcr byte ptr [esi + 0x5f], 0x5d; ret; 
0x00193cd4: je 0x193cf0; mov eax, 1; jg 0x193ce0; neg eax; ret; 
0x00194056: je 0x194070; mov eax, 1; ja 0x194061; neg eax; ret; 
0x00195cfc: je 0x195d24; add byte ptr [eax + 0x5f01478d], dl; ret; 
0x0019672c: je 0x196754; add byte ptr [eax + 0x5f01478d], dl; ret; 
0x00196bb2: je 0x196bbd; pmovmskb eax, xmm1; test eax, eax; jne 0x196df0; xor eax, eax; ret; 
0x001970c2: je 0x197120; bsr edi, edi; add eax, edi; pop edi; ret; 
0x00197a07: je 0x197b0a; mov eax, 4; pop edi; ret; 
0x00197a60: je 0x197b1e; mov eax, 8; pop edi; ret; 
0x00197ab0: je 0x197b32; mov eax, 0xc; pop edi; ret; 
0x00197ae2: je 0x197b46; cmp byte ptr [edx + 0xf], 0; je 0x197b46; mov eax, 0x10; pop edi; ret; 
0x00197ae8: je 0x197b46; mov eax, 0x10; pop edi; ret; 
0x001982e2: je 0x1982f0; test al, 1; jne 0x198300; lea eax, [ecx + 4]; ret; 
0x001982ed: je 0x198315; add dh, dh; les eax, ptr [ecx]; jne 0x198310; lea eax, [ecx + 0xc]; ret; 
0x001984cc: je 0x198464; pop esi; lea eax, [edi - 0x10]; pop edi; ret; 
0x00198590: je 0x198570; lea eax, [edi - 0x10]; pop edi; ret; 
0x001985a3: je 0x198570; test al, 0xf0; jne 0x198530; lea eax, [edi - 0x10]; pop edi; ret; 
0x0019858b: je 0x1985a0; and eax, 1; je 0x198570; lea eax, [edi - 0x10]; pop edi; ret; 
0x00198c6e: je 0x198c80; mov edx, eax; xor eax, eax; tzcnt edx, edx; add eax, edx; ret; 
0x00198c7c: je 0x198ca4; add byte ptr [eax - 0x2d43f00d], dl; mov eax, 0x20; add eax, edx; ret; 
0x00198fad: je 0x198fd3; xor byte ptr [ecx + 0x24748bf1], cl; or al, 9; ret; 
0x00198fb3: je 0x198fd9; or al, 9; ret; 
0x0019c504: je 0x19c52a; or al, 0xf; xchg ebp, eax; ret 0xc208; 
0x0019c7a6: je 0x19c7cc; or al, 0xb; je 0x19c7d0; add al, 0xf; xchg esp, eax; ret; 
0x0019c7aa: je 0x19c7d0; add al, 0xf; xchg esp, eax; ret; 
0x0019e19a: je 0x19e1c0; adc byte ptr [ecx], cl; ret; 
0x0019f910: je 0x19f936; and al, 9; ret 0xe889; 
0x001a05b9: je 0x1a05c5; fld1; fdiv dword ptr [edx - 0x62754]; fstp st(0); add esp, 0x20; ret; 
0x001a08dd: je 0x1a08e9; mov dword ptr [esp + 8], eax; call edx; 
0x001a0a3d: je 0x1a0a4c; sub esp, 0xc; push eax; call edx; 
0x00020f45: je 0x20f64; sub esp, 0xc; push dword ptr [ebp - 0x34]; call dword ptr [ebp - 0x38]; 
0x00021416: je 0x21419; ret; 
0x00021510: je 0x21536; adc al, 0x8b; inc esp; and al, 0x14; call eax; 
0x00021616: je 0x2163c; inc eax; call eax; 
0x00021674: je 0x2169a; or al, 0x56; push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x00021679: je 0x2169f; inc eax; call dword ptr [ebp]; 
0x00021fc0: je 0x21fe6; add al, 0x8d; xchg byte ptr [eax + 0x6e], dl; stc; call dword ptr [eax - 0x73]; 
0x000225cb: je 0x225f1; pop eax; push ebp; push dword ptr [esp + 0x30]; push dword ptr [ebx + 4]; call esi; 
0x000225d0: je 0x225f6; xor bh, bh; jae 0x225da; call esi; 
0x00022802: je 0x22817; sub esp, 0xc; push esi; call 0x16ed20; mov dword ptr [esp], ebx; call esi; 
0x00023735: je 0x2374a; sub esp, 0xc; push edi; call 0x16ed20; mov dword ptr [esp], ebx; call edi; 
0x00024a9b: je 0x24ac1; pop esp; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00024a9f: je 0x24ac5; pop eax; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00024aa3: je 0x24ac9; pushal; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00024fab: je 0x24fd1; jo 0x24fae; aad 0x89; ret 0xc483; 
0x000250dd: je 0x25105; add byte ptr [ebx - 0x7bf0fb07], al; hlt; add dword ptr [eax], eax; add byte ptr [ebx - 0x7ce3dbbc], cl; ret 0x8301; 
0x000255ee: je 0x25614; pushal; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x000255f2: je 0x25618; pop esp; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x000255f6: je 0x2561c; mov eax, dword ptr fs:[esp + 0x48]; call eax; 
0x00025bb1: je 0x25bd7; pop esp; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x00025bb5: je 0x25bdb; pop eax; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x00025bb9: je 0x25bdf; pushal; mov eax, dword ptr [esp + 0x44]; call eax; 
0x00025ee4: je 0x25f0a; cmp al, 0x8d; xchg byte ptr [eax + 0x6a], ah; stc; call dword ptr [eax - 0x73]; 
0x00025f79: je 0x25f9f; cmp al, 0x8d; xchg byte ptr [eax + 0x6a], ah; stc; call dword ptr [eax - 0x73]; 
0x00025fd5: je 0x25ffb; cmp al, 0x8d; xchg byte ptr [eax + 0x6a], ah; stc; call dword ptr [eax - 0x73]; 
0x00025ff8: je 0x2601e; cmp al, 0x8d; xchg byte ptr [eax + 0x6a], ah; stc; call dword ptr [eax + 0x68]; 
0x0002601b: je 0x26041; cmp al, 0x8d; xchg byte ptr [eax], bl; jno 0x2601c; call dword ptr [eax - 0x73]; 
0x0002603e: je 0x26064; cmp al, 0x8d; xchg byte ptr [eax + 0x6a], ah; stc; call dword ptr [eax + 0x68]; 
0x00026240: je 0x26266; push esp; push dword ptr [esp + 0x5c]; call edi; 
0x00026244: je 0x2626a; pop esp; call edi; 
0x000263bf: je 0x263e5; cmp al, 0x8d; xchg byte ptr [eax], ah; push -7; call dword ptr [eax - 0x73]; 
0x000264d9: je 0x264ff; cmp al, 0x8d; xchg byte ptr [eax], ah; push -7; call dword ptr [eax - 0x73]; 
0x00026533: je 0x26559; cmp al, 0x8d; xchg byte ptr [eax], ah; push -7; call dword ptr [eax - 0x73]; 
0x00026732: je 0x26758; push esp; push dword ptr [esp + 0x54]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00026736: je 0x2675c; push esp; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00026870: je 0x26896; xor byte ptr [ecx + 0x310c2454], cl; fisttp dword ptr [ecx - 0x76bfdbbc]; ret 0xb60f; 
0x0002723b: je 0x27261; pop esp; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0002723f: je 0x27265; pop esp; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x00027f03: je 0x27f29; insb byte ptr es:[edi], dx; push dword ptr [esp + 0x6c]; call esi; 
0x00027f07: je 0x27f2d; insb byte ptr es:[edi], dx; call esi; 
0x00028031: je 0x28057; sbb al, 0x89; ret 0xb60f; 
0x00028c99: je 0x28cbf; pop esp; push dword ptr [esp + 0x5c]; call esi; 
0x00028c9d: je 0x28cc3; pop esp; call esi; 
0x00029493: je 0x294b9; push dword ptr fs:[esp + 0x64]; call edi; 
0x0002a047: je 0x2a06d; pop eax; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x0002a04b: je 0x2a071; pop eax; mov eax, dword ptr [esp + 0x44]; call eax; 
0x0002a88b: je 0x2a8b1; push dword ptr fs:[esp + 0x64]; call edi; 
0x0002b4c2: je 0x2b4e8; pop eax; push dword ptr [esp + 0x50]; push dword ptr [esp + 0x50]; call esi; 
0x0002b4c6: je 0x2b4ec; push eax; push dword ptr [esp + 0x50]; call esi; 
0x0002b4ca: je 0x2b4f0; push eax; call esi; 
0x0002b5ee: je 0x2b614; push eax; push dword ptr [esp + 0x50]; call esi; 
0x0002b5f2: je 0x2b618; push eax; call esi; 
0x0002b870: je 0x2b893; sub esp, 0xc; push ebx; call 0x16ed20; mov dword ptr [esp], esi; call ebx; 
0x0002c074: je 0x2c080; add esp, 8; pop ebx; ret; 
0x0002c06f: je 0x2c080; cmp eax, 3; je 0x2c080; add esp, 8; pop ebx; ret; 
0x0002c2f2: je 0x2c318; adc al, 0x8d; nop; push eax; and al, ah; call dword ptr [edx - 1]; 
0x0002cca9: je 0x2ccb5; mov dword ptr [esp + 0xc], eax; call edx; 
0x0002cdcb: je 0x2cdcf; call edx; 
0x0002da45: je 0x2da6d; add dh, dh; ret 0x7503; 
0x0002df0d: je 0x2df18; sub esp, 0xc; push esi; call eax; 
0x000305bf: je 0x305c6; cmp byte ptr [eax], 0; jne 0x305d0; mov eax, edx; add esp, 0xc; ret; 
0x000305ff: je 0x30606; cmp byte ptr [eax], 0; jne 0x30610; mov eax, edx; add esp, 0xc; ret; 
0x0003068a: je 0x306b0; sbb byte ptr [edx], ch; call 0x30630; add esp, 0x1c; ret; 
0x00031ad2: je 0x31af8; sub byte ptr [edx], ch; call 0x31a60; add esp, 0x2c; ret; 
0x00032a7b: je 0x32aa1; sbb al, 0x83; ret 0x8b04; 
0x00033d57: je 0x33d7d; adc al, 0x8d; xchg byte ptr [edi + 0x2f], dh; stc; call dword ptr [eax - 1]; 
0x0003455c: je 0x34556; inc dword ptr [ecx]; fidivr dword ptr [esi]; jmp edx; 
0x000347c8: je 0x347c2; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x00034c50: je 0x34c76; sub al, 0x83; ret 0xc702; 
0x00034cef: je 0x34d15; sub al, 0x83; ret 0xc702; 
0x00034d12: je 0x34d38; sub al, 0x83; ret 0xc702; 
0x00034d35: je 0x34d5b; sub al, 0x83; ret 0xc702; 
0x000373c5: je 0x373ce; rdsspd ecx; mov dword ptr [edx + 0x28], ecx; ret; 
0x000380b5: je 0x380c7; mov dword ptr [eax + 4], 0; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x00038519: je 0x38530; lea ecx, [eax + 1]; mov dword ptr [edx + 0x68], ecx; ret; 
0x00038c4c: je 0x38c72; sbb al, 0xe8; or al, 0x3c; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000392a4: je 0x392ca; adc byte ptr [ebp + 0x56], dl; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00039306: je 0x3932c; adc bh, bh; jne 0x3930c; push dword ptr [esi]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00039406: je 0x3942c; adc byte ptr [ebp + 0x56], dl; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00039477: je 0x3949d; adc byte ptr [ebp + 0x56], dl; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00039fbd: je 0x39fe5; add byte ptr [ebx - 0x1337a], cl; jmp dword ptr [ebp - 0x75]; 
0x0003a539: je 0x3a534; call dword ptr [eax - 0x73]; 
0x0003a645: je 0x3a640; call dword ptr [eax - 0x73]; 
0x0003a696: je 0x3a6bc; sub al, ch; ret 0xfffe; 
0x0003a711: je 0x3a70c; call dword ptr [edx - 0x73]; 
0x0003a99d: je 0x3a9c3; sbb al, 0xe8; imul edi, eax, -1; jmp dword ptr [esi - 0x70]; 
0x0003a9c9: je 0x3a9ef; sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; call 0x3a660; add esp, 0x1c; ret; 
0x0003aa8e: je 0x3aa89; call dword ptr [eax - 0x18]; 
0x0003ad99: je 0x3ada1; mov dword ptr [edx], 0; add esp, 4; pop ebx; pop esi; ret; 
0x0003b8b9: je 0x3b8df; sbb al, 0xe8; inc dword ptr [ecx]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0003b93c: je 0x3b962; sbb byte ptr [eax + 0x50], dl; call 0x3b950; add esp, 0x1c; ret; 
0x0003c88c: je 0x3c8b2; sub al, 0xe8; mov word ptr [ecx], es; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0003c8ce: je 0x3c8f4; sub al, 0xe8; cmp al, byte ptr [edi]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0003c98c: je 0x3c9b2; sub al, 0xe8; sbb al, 0xc; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0003d7dc: je 0x3d804; add byte ptr [eax + 0x244cb60f], dl; sbb byte ptr [ecx], bh; ret; 
0x0003dffc: je 0x3e024; add byte ptr [eax + 0x244cb60f], dl; and al, 0x39; ret; 
0x0003e678: je 0x3e69e; sbb al, 0xe8; add byte ptr [ecx], bh; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0003edfd: je 0x3ee25; add byte ptr [ebx + 0x1182474], cl; ret; 
0x0003ee01: je 0x3ee27; sbb byte ptr [ecx], al; ret; 
0x000415f1: je 0x415ec; call dword ptr [eax - 0x18]; 
0x00041614: je 0x4160f; call dword ptr [eax - 0x18]; 
0x00041aac: je 0x41ad4; add byte ptr [eax + 0xa9d231], dl; add byte ptr [eax], dl; add byte ptr [edi], cl; xchg ebp, eax; ret 0xea81; 
0x00041e9d: je 0x41ec5; add byte ptr [ebx + 0x1182474], cl; ret; 
0x00041ea1: je 0x41ec7; sbb byte ptr [ecx], al; ret; 
0x000425e4: je 0x4260a; cmp al, 1; ret; 
0x00044648: je 0x44643; call dword ptr [eax - 0x18]; 
0x00044721: je 0x4471c; call dword ptr [eax - 0x18]; 
0x000449ea: je 0x44a10; sub al, 0xf; xchg ebp, eax; ret 0xd689; 
0x000450bd: je 0x450e5; add byte ptr [ebx + 0x1182474], cl; ret; 
0x000450c1: je 0x450e7; sbb byte ptr [ecx], al; ret; 
0x000477f3: je 0x477ee; call dword ptr [eax - 0x18]; 
0x0004785c: je 0x47857; call dword ptr [eax - 0x18]; 
0x00048067: je 0x4808d; sub byte ptr [eax + 0x25], bh; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x00048b4e: je 0x48b60; add esp, 4; pop ebx; pop esi; ret; 
0x00048bc4: je 0x48bea; sub al, 0xe8; add al, 0; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0004930c: je 0x49334; add byte ptr [eax - 0x7c40fb73], dl; ret; 
0x00049eda: je 0x49f00; sub al, 0xff; je 0x49f04; sub al, 0xe8; ljmp 0x2cc4:0x83ffffec; ret; 
0x00049ede: je 0x49f04; sub al, 0xe8; ljmp 0x2cc4:0x83ffffec; ret; 
0x0004a085: je 0x4a08d; cmp byte ptr [eax - 1], 0x2f; jne 0x4a080; add esp, 8; pop ebx; ret; 
0x0004dcfd: je 0x4dd25; add byte ptr [ebx + 0x1182474], cl; ret; 
0x0004dd01: je 0x4dd27; sbb byte ptr [ecx], al; ret; 
0x00051052: je 0x5104d; call dword ptr [eax - 0x18]; 
0x0005109c: je 0x51097; call dword ptr [eax - 0x18]; 
0x00051809: je 0x5187f; jns 0x517d3; inc eax; or byte ptr [eax], al; mov eax, edx; ret; 
0x0005180a: je 0x51885; mov byte ptr [eax + 8], 0; mov eax, edx; ret; 
0x00051f82: je 0x51fa8; sbb al, 0xe8; add word ptr ss:[eax], ax; add esp, 0x1c; ret; 
0x00052cbd: je 0x52ce5; add byte ptr [ebx - 0x3e7cfbaf], cl; add al, 0x83; ret; 
0x00056025: je 0x5604d; add dh, dh; ret; 
0x00056914: je 0x5693a; or al, 0x8d; xchg byte ptr [edi + esi*2], dl; stc; call dword ptr [eax - 0x73]; 
0x0005722d: je 0x57255; add byte ptr [edi], cl; mov dh, 0x55; or al, 0xf6; ret 0xf01; 
0x00057417: je 0x5743d; or byte ptr [ebp - 0x6cffe4d], cl; dec dword ptr [ecx - 0x9ebdb8c]; ret 0xf50; 
0x00057421: je 0x57447; adc al, 0xf6; ret 0xf50; 
0x000578a8: je 0x578ce; and al, 0x89; ret 0xfa29; 
0x000579f9: je 0x57a1f; adc al, ch; jmp ecx; 
0x00057b02: je 0x57b28; sub byte ptr [edx - 1], ch; push dword ptr [esp + 0x2c]; call 0x73cc0; add esp, 0x2c; ret; 
0x00057b08: je 0x57b2e; sub al, 0xe8; mov al, 0xc1; add dword ptr [eax], eax; add esp, 0x2c; ret; 
0x00057b33: je 0x57b59; sbb al, 0xe8; jne 0x57b5d; add al, byte ptr [eax]; add esp, 0x1c; ret; 
0x00057b92: je 0x57bb8; sbb al, 0xe8; mov dh, 0x18; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00057bb2: je 0x57bd8; sbb al, 0xe8; jbe 0x57b3d; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00058255: je 0x5827d; add byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x000583b8: je 0x583de; sbb al, 0xe8; xor byte ptr [eax], bl; or eax, dword ptr [eax]; add esp, 0x1c; ret; 
0x000587da: je 0x58765; ret; 
0x00058902: je 0x58928; sbb al, 0xe8; wait; add dword ptr [eax], eax; add esp, 0x1c; ret; 
0x00058ad9: je 0x58b20; mov eax, 0x161; call dword ptr gs:[0x10]; 
0x00058cd3: je 0x58cf9; sbb al, 0xe8; jne 0x58ce0; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0005930c: je 0x59334; add byte ptr [eax + 0x3224858d], dl; stc; call dword ptr [esi - 0x77]; 
0x0005d0cd: je 0x5d0f5; add byte ptr [ebx - 0x59b7b], cl; dec dword ptr [ebx - 0x13348]; jmp dword ptr [ebp - 0x5f]; 
0x000658db: je 0x65901; or al, 0x56; push eax; push ebp; mov eax, dword ptr [esp + 0x1c]; call dword ptr [eax + 0x1c]; 
0x00065ddc: je 0x65e04; add byte ptr [eax + 0x5304ec83], dl; push dword ptr [esp + 0x14]; push ebp; call dword ptr [eax + 0x1c]; 
0x00065de5: je 0x65e0b; adc al, 0x55; call dword ptr [eax + 0x1c]; 
0x0006774d: je 0x67775; add byte ptr [eax - 0x89843], al; jmp dword ptr [eax]; 
0x000698ac: je 0x698d2; inc esp; push edi; call dword ptr [ebx + 0x1c]; 
0x00069997: je 0x699bd; inc esp; push edi; call dword ptr [eax + 0x1c]; 
0x0006ae55: je 0x6ae7b; adc al, 0x55; call dword ptr [eax + 0x1c]; 
0x0006bdcd: je 0x6bdf5; add byte ptr [ebx - 0x7a39fe20], al; inc ebx; idiv edi; jmp dword ptr [eax]; 
0x0006c665: je 0x6c68d; add byte ptr [eax - 0x8bc43], al; jmp dword ptr [eax]; 
0x0006d985: je 0x6d9ab; and al, 0x55; call dword ptr [esi + 0x1c]; 
0x0006e78e: je 0x6e7b4; jo 0x6e71b; fiadd dword ptr [ebx]; adc al, 0x86; jmp edx; 
0x0006e99d: je 0x6e9c5; add byte ptr [ebx + 0x3908245c], cl; ret; 
0x0007178c: je 0x717b4; add byte ptr [eax + 0x7420c2f6], dl; adc ecx, dword ptr [ebx - 0x13371]; jmp dword ptr [ebp - 0x75]; 
0x000719e3: je 0x719fc; sub esp, 4; push ebx; push dword ptr [esp + 0x1c]; push dword ptr [esi + 0x98]; call eax; 
0x00071a43: je 0x71a69; xor byte ptr [ebp + 0x5110244c], cl; push dword ptr [edx + 0x98]; call eax; 
0x00071a59: je 0x71a70; mov eax, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x00071a9a: je 0x71ab0; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 4], edx; jmp eax; 
0x000723dd: je 0x72405; add byte ptr [ebx + 0x5d8b08ec], al; in al, 0x6a; call dword ptr [esi - 0x18]; 
0x00072a83: je 0x72aa9; or byte ptr [ebp - 0x683036a], cl; jmp dword ptr [ebp - 0x75]; 
0x00073265: je 0x73270; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x00074308: je 0x7432e; adc al, 0xe8; jmp 0x810752eb; ret; 
0x00075bec: je 0x75c14; add byte ptr [eax + 0x619be8], dl; add bl, ch; ret 0xb48d; 
0x00076005: je 0x7602b; adc byte ptr [ebx - 0x75], bl; inc edi; adc al, 0x5e; pop edi; jmp eax; 
0x00076165: je 0x7618b; adc byte ptr [ebx - 0x75], bl; inc edi; adc byte ptr [esi + 0x5f], bl; jmp eax; 
0x00076358: je 0x7635d; and dword ptr [esi], 0xffffffef; pop ebx; pop esi; pop edi; ret; 
0x000763ad: je 0x763b2; and dword ptr [ebx], 0xffffffef; add esp, 4; pop ebx; pop esi; ret; 
0x0007641e: je 0x76430; cmp edx, ecx; ja 0x76418; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00077a69: je 0x77a8f; sbb bh, bh; je 0x77a93; sbb byte ptr [ebx + 0x56182474], cl; call dword ptr [edi + 0x40]; 
0x00077a6d: je 0x77a93; sbb byte ptr [ebx + 0x56182474], cl; call dword ptr [edi + 0x40]; 
0x00077b7e: je 0x77ba4; sub bh, bh; je 0x77ba8; sub byte ptr [ebx + 0x56182474], cl; call dword ptr [edi + 0x40]; 
0x00077b82: je 0x77ba8; sub byte ptr [ebx + 0x56182474], cl; call dword ptr [edi + 0x40]; 
0x00078120: je 0x78146; adc byte ptr [ebx - 0x3b7cefc0], cl; add al, 0x5b; pop esi; jmp eax; 
0x0007849a: je 0x784c0; xor al, 0x8b; adc esi, esi; ret 0xf08; 
0x00079429: je 0x79438; mov eax, dword ptr [eax + 0x38]; test eax, eax; js 0x79438; ret; 
0x0007af2c: je 0x7af54; add byte ptr [eax - 0x76b7b175], dl; ret; 
0x0007b49e: je 0x7b4d0; mov eax, edx; pop ebx; pop esi; ret; 
0x0007b952: je 0x7b988; mov eax, edx; pop ebx; ret; 
0x0007be7c: je 0x7be7e; add byte ptr [eax - 0x4e1f00d], dl; mov eax, dword ptr [esp + 4]; and dword ptr [eax], 0xffffffcf; ret; 
0x0007c423: je 0x7c3be; push 1; push edx; push eax; push ebx; call dword ptr [edi + 0x40]; 
0x0007c4f4: je 0x7c51a; sub al, 0x57; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x0007c5e6: je 0x7c5f0; add esp, 4; pop ebx; pop esi; ret; 
0x0007c686: je 0x7c6ac; or al, 0x57; push ebx; call dword ptr [esi + 0x3c]; 
0x0007d68e: je 0x7d6b4; cmp al, 0x57; call dword ptr [esi + 0x20]; 
0x0007e5a5: je 0x7e625; stc; call dword ptr [eax - 0x73]; 
0x0007e5c4: je 0x7e644; stc; call dword ptr [eax - 0x73]; 
0x0007ea1a: je 0x7ea40; and al, 0x8b; adc esi, esi; ret 0xf08; 
0x0007f4fc: je 0x7f524; add byte ptr [eax + 0x6a08ec83], dl; call dword ptr [esi - 0x18]; 
0x0007f5c9: je 0x7f5ef; adc byte ptr [ebx - 0x75], bl; inc edi; adc byte ptr [esi + 0x5f], bl; jmp eax; 
0x0007f799: je 0x7f7bf; adc byte ptr [ebx - 0x75], bl; inc edi; adc al, 0x5e; pop edi; jmp eax; 
0x0007fdc5: je 0x7fded; add al, ch; ret; 
0x0007fe27: je 0x7fe4d; cmp byte ptr [edx], ch; push edi; push esi; push ebx; call dword ptr [ebp + 0x24]; 
0x0007ffac: je 0x7ffc2; mov dword ptr [eax], 0; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; ret; 
0x000801bc: je 0x801e4; add byte ptr [eax - 0x4e1f00d], dl; mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x00080226: je 0x8022b; and dword ptr [esi], 0xffffffef; pop ebx; pop esi; pop edi; ret; 
0x000802ee: je 0x80300; cmp edx, ecx; ja 0x802e8; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00080b52: je 0x80b60; mov edx, eax; mov eax, dword ptr [eax]; test eax, eax; jne 0x80b50; ret; 
0x000814fd: je 0x81523; sbb al, 0x85; ror byte ptr [edi], 0x48; ret 0xff50; 
0x0008150b: je 0x81531; sbb al, 0xe8; cmp eax, 0x83ffffff; les ebx, ptr [eax]; pop ebx; ret; 
0x000821ca: je 0x821f0; sub al, 0xff; je 0x821f4; cmp al, 0x51; push dword ptr [esp + 0x3c]; call eax; 
0x000821ce: je 0x821f4; cmp al, 0x51; push dword ptr [esp + 0x3c]; call eax; 
0x0008233c: je 0x82362; xor bh, bh; je 0x82366; cmp al, 0x51; call eax; 
0x00082340: je 0x82366; cmp al, 0x51; call eax; 
0x0008242d: je 0x82453; xor byte ptr [edx + 0x51], dl; call eax; 
0x0008251a: je 0x82540; sub al, 0x52; push ecx; push esi; call eax; 
0x00082647: je 0x8266d; and byte ptr [edx + 0x51], dl; mov eax, dword ptr [esp + 0x24]; call eax; 
0x00082794: je 0x82797; ret; 
0x000827c9: je 0x827d8; mov eax, dword ptr gs:[8]; mov byte ptr [eax + 0x4fe], 0; ret; 
0x00082858: je 0x82868; mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x000828ca: je 0x828d0; ret; 
0x000828ed: je 0x82900; mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x000829a6: je 0x829b0; ret; 
0x00083057: je 0x830f0; mov eax, 0x1a6; xor edx, edx; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0008316e: je 0x83178; ret; 
0x00083622: je 0x83600; sub esp, 0xc; push eax; call edx; 
0x000838ea: je 0x838f8; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00083bed: je 0x83c30; xor esi, esi; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00083e56: je 0x83e64; mov eax, dword ptr [edx]; mov edx, 0x16; test eax, eax; cmovne eax, edx; ret; 
0x0008419d: je 0x841b0; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x0008460f: je 0x84620; test edx, edx; jne 0x84630; and dword ptr [eax + 8], 0xfffffffe; xor eax, eax; ret; 
0x0008467b: je 0x84690; or eax, 2; mov dword ptr [ecx + 8], eax; xor eax, eax; ret; 
0x0008474a: je 0x84760; cmp eax, 1; mov edx, 0x5f; mov eax, 0x16; cmove eax, edx; ret; 
0x000847e7: je 0x847d9; mov byte ptr [edx + 0x88], 0; add esp, 4; pop esi; pop edi; ret; 
0x000848cc: je 0x84908; mov ecx, dword ptr [ebx + 0xc]; mov eax, edi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0008496d: je 0x84995; add byte ptr [eax + 0x16], bh; pop ebx; ret; 
0x00084bdd: je 0x84be8; add esp, 8; pop ebx; ret; 
0x00084dd5: je 0x84dfd; add byte ptr [ecx], bh; bnd jbe 0x84e18; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x000850d6: je 0x850f1; xor esi, esi; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0008534d: je 0x85375; add byte ptr [ebx - 0x3e2f76ed], cl; call 0x893fc75d; clc; call dword ptr gs:[0x10]; 
0x00085357: je 0x85390; mov eax, edi; call dword ptr gs:[0x10]; 
0x000855de: je 0x855f6; xor esi, esi; mov eax, edi; call dword ptr gs:[0x10]; 
0x000857d0: je 0x857e0; pop ebx; pop esi; pop edi; ret; 
0x00085849: je 0x85850; pop ebx; pop esi; pop edi; ret; 
0x000858ae: je 0x858b8; pop ebx; pop esi; pop edi; ret; 
0x00086866: je 0x868bc; mov ebx, dword ptr [esi + 0x68]; mov ecx, dword ptr [esi + 0x230]; lea edx, [esi + 0x22c]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x00087636: je 0x87228; mov ebx, eax; and ebx, 0x40; jne 0x87664; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x0008817d: je 0x881a5; add byte ptr [ebx - 0x7c72f714], al; pop ebx; sub bh, cl; call dword ptr [eax - 0x73]; 
0x0008896d: je 0x88995; add byte ptr [eax + 0x16], bh; pop ebx; ret; 
0x00088f23: je 0x88f49; or al, 0x8d; xchg byte ptr [ecx + eax*4 - 7], dl; call dword ptr [eax - 0x73]; 
0x00088fb6: je 0x88fdc; or al, 0x8d; xchg byte ptr [ecx + eax*4 - 7], dl; call dword ptr [eax - 0x73]; 
0x000891a0: je 0x891c6; or al, 0x8d; xchg byte ptr [ecx + eax*4 - 7], dl; call dword ptr [eax - 0x73]; 
0x000891c3: je 0x891e9; or al, 0x8d; xchg byte ptr [ecx + eax*4 - 7], dl; call dword ptr [eax - 0x73]; 
0x00089385: je 0x89308; stc; call dword ptr [eax + 0x68]; 
0x000893bd: je 0x89340; stc; call dword ptr [eax + 0x6a]; 
0x0008946a: je 0x893ed; stc; call dword ptr [eax + 0x68]; 
0x0008947b: je 0x893fe; stc; call dword ptr [eax - 0x73]; 
0x00089e45: je 0x89e6d; add byte ptr [ebx - 0x77cf440], al; or ecx, dword ptr [edi]; xchg dword ptr [eax - 0x45000004], ebp; or dword ptr [eax], 0xa30f0000; ret 0x830f; 
0x0008b02a: je 0x8b435; mov eax, 0xf0; mov ecx, 8; mov esi, edx; call dword ptr gs:[0x10]; 
0x0008bcc3: je 0x8bcd0; mov eax, 0x16; ret; 
0x0008bcee: je 0x8bd00; cmp edx, 1; jne 0x8bd10; or dword ptr [eax], 0x40000000; xor eax, eax; ret; 
0x0008bdc5: je 0x8be00; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0008bf21: je 0x8bf35; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x0008bf51: je 0x8bf60; xor eax, eax; ret; 
0x0008c94c: je 0x8c974; add byte ptr [eax - 0x76ffba75], dl; ret 0xe283; 
0x0008d0b2: je 0x8d0b8; test al, 1; jne 0x8d08a; mov eax, 0x10; pop ebx; ret; 
0x0008d09e: je 0x8d0c0; mov eax, dword ptr gs:[0x68]; mov dword ptr [edx + 0x1c], eax; xor eax, eax; pop ebx; ret; 
0x0008d28b: je 0x8d219; mov ecx, dword ptr [esp + 8]; mov eax, 0xf0; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008da29: je 0x8da38; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x0008dfc0: je 0x8dfe6; or al, 0x89; ret; 
0x0008e0e0: je 0x8e0e3; ret; 
0x0008e1cc: je 0x8e1f2; sub al, 0x52; call 0x886f0; add esp, 0x20; add esp, 0xc; ret; 
0x0008e1dd: je 0x8e205; add byte ptr [eax + 0x10], bh; add esp, 0xc; ret; 
0x0008e25b: je 0x8e230; mov ecx, dword ptr [ebx + 4]; mov eax, 0xf0; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008e229: je 0x8e238; lock sub dword ptr [ebx + 0xc], 1; pop ebx; pop esi; pop edi; ret; 
0x0008e4b1: je 0x8e4c0; xor eax, eax; add esp, 8; pop ebx; ret; 
0x0008ea05: je 0x8ea2d; add byte ptr [ebx - 0x13379], cl; jmp dword ptr [ebp - 0x75]; 
0x0008ea43: je 0x8ea50; ret; 
0x0008efdb: je 0x8efb0; mov ecx, dword ptr [ebx + 4]; mov eax, 0xf0; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008efa9: je 0x8efb8; lock sub dword ptr [ebx + 0xc], 1; pop ebx; pop esi; pop edi; ret; 
0x0008f2cd: je 0x8f2f5; add byte ptr [ebx - 0x1337a], cl; jmp dword ptr [ebp - 0x75]; 
0x0008f33b: je 0x8f310; mov ecx, dword ptr [ebx + 4]; mov eax, 0xf0; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008f309: je 0x8f318; lock sub dword ptr [ebx + 0xc], 1; pop ebx; pop esi; pop edi; ret; 
0x0008feee: je 0x8fefa; cmp eax, 0xc; jne 0x8ff1f; mov eax, 3; add esp, 0xc; ret; 
0x000900b0: je 0x900bc; cmp eax, 0xc; jne 0x900df; mov eax, 3; add esp, 0xc; ret; 
0x00090240: je 0x9024c; cmp eax, 0xc; jne 0x9026f; mov eax, 3; add esp, 0xc; ret; 
0x00090436: je 0x90442; cmp eax, 0xc; jne 0x9046f; mov eax, 3; add esp, 0xc; ret; 
0x000905b0: je 0x905bc; cmp eax, 0xc; jne 0x905df; mov eax, 3; add esp, 0xc; ret; 
0x00090630: je 0x9063c; cmp eax, 0xc; jne 0x9065f; mov eax, 3; add esp, 0xc; ret; 
0x000907bd: je 0x907e5; add byte ptr [ebx - 0x1337a], cl; jmp dword ptr [ebp - 0x75]; 
0x00090b94: je 0x90b52; pop ebx; pop esi; ret; 
0x00091215: je 0x9120a; mov eax, dword ptr [eax + 0xc]; test eax, eax; jne 0x91210; pop ebx; ret; 
0x00091206: je 0x91213; xor eax, eax; pop ebx; ret; 
0x000914e6: je 0x9150c; sbb al, ch; ret 0xffa5; 
0x00091fac: je 0x91fd4; add byte ptr [eax - 0x7c00bc73], dl; ljmp 0x8956:0x7edb8510; ret; 
0x00092c9e: je 0x92cc4; sbb al, 0xe8; cmp al, byte ptr [esi]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00092fc4: je 0x93010; mov ebx, dword ptr [esp + 0xa0]; mov eax, 0x119; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00093272: je 0x931f8; stc; call dword ptr [eax - 0x18]; 
0x000932c2: je 0x932e8; sub al, 0xff; je 0x932ec; sub al, 0xe8; add byte ptr [0xc4830000], 0x2c; ret; 
0x000932c6: je 0x932ec; sub al, 0xe8; add byte ptr [0xc4830000], 0x2c; ret; 
0x0009365d: je 0x93683; dec esp; call dword ptr gs:[0x10]; 
0x000936d9: je 0x936ff; dec esp; call dword ptr gs:[0x10]; 
0x0009372c: je 0x93752; dec esp; mov eax, 0x117; call dword ptr gs:[0x10]; 
0x0009377c: je 0x937a2; dec esp; mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x00093d9c: je 0x93dc4; add byte ptr [eax + 0xc244c8d], dl; mov eax, 0x105; call dword ptr gs:[0x10]; 
0x000944ee: je 0x94514; adc byte ptr [ebx + 0x11c246c], cl; pop eax; add al, 0x89; ret; 
0x000949ba: je 0x949e0; sub byte ptr [ebp - 0x6bef672], cl; jmp dword ptr [ebp - 0x5f]; 
0x00094d32: je 0x94d58; sub byte ptr [ebx - 0x72cbdbbc], cl; and byte ptr [ecx], 0x41; stc; call dword ptr [eax - 0x18]; 
0x00095321: je 0x95347; or byte ptr [ecx], ah; ret; 
0x00095adc: je 0x95b02; or byte ptr [ebx + 0x418d1048], cl; jmp dword ptr [ecx]; 
0x00095c89: je 0x95c90; add esp, 0xc; ret; 
0x000975ef: je 0x97574; sal dword ptr [ecx], 0x83; ret; 
0x00098287: je 0x982ad; sbb byte ptr [ebp - 0x66c7b7a], cl; dec dword ptr [ebp - 0x6bf3a6a]; call dword ptr [eax - 0x73]; 
0x000982ab: je 0x982d1; sbb byte ptr [ebp - 0x66c7b7a], cl; dec dword ptr [ebp - 0x6bf3a6a]; call dword ptr [eax - 0x73]; 
0x00098487: je 0x984ad; sbb byte ptr [ebp - 0x66c9b7a], cl; dec dword ptr [ebp - 0x6bf3a6a]; call dword ptr [eax - 0x73]; 
0x0009a45d: je 0x9a518; sub esp, 8; push esi; push dword ptr [ebx + 0x24]; call eax; 
0x0009a550: je 0x9a560; sub esp, 8; push ecx; push dword ptr [ebx + 0x24]; call eax; 
0x0009a6e2: je 0x9a712; pop ebx; pop esi; pop edi; ret; 
0x0009b026: je 0x9b04c; sbb al, 0xe8; and bh, byte ptr [ebx]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0009b3a2: je 0x9b3ba; lea eax, [edx - 0x94920]; test byte ptr [ecx + 0x184], 4; lea edx, [edx - 0x187980]; cmove eax, edx; ret; 
0x0009be2d: je 0x9be53; sbb al, 0xe8; or eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0009beea: je 0x9bf10; sbb al, 0xe8; fidivr word ptr [ebx]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0009bff2: je 0x9c00a; lea eax, [edx - 0xae9a0]; test byte ptr [ecx + 0x184], 1; lea edx, [edx - 0xaf040]; cmove eax, edx; ret; 
0x0009c0d2: je 0x9c0ea; lea eax, [edx - 0xae420]; test byte ptr [ecx + 0x184], 1; lea edx, [edx - 0xaf660]; cmove eax, edx; ret; 
0x0009dd06: je 0x9dd0d; cmp cl, dl; je 0x9dd0d; inc eax; pop edi; ret; 
0x0009dd0a: je 0x9dd0d; inc eax; pop edi; ret; 
0x0009e89c: je 0x9e8c4; add byte ptr [eax + 0x5b04c483], dl; pop esi; ret; 
0x0009ea41: je 0x9ea67; cmp al, 0xff; je 0x9ea6b; cmp al, 0xe8; ret; 
0x0009ea45: je 0x9ea6b; cmp al, 0xe8; ret; 
0x000a1afc: je 0xa1b24; add byte ptr [eax + 0xff42c6], dl; mov dword ptr [esi], edx; pop ebx; pop esi; ret; 
0x000a1b15: je 0xa1b3d; add byte ptr [ecx - 0x763fce3e], cl; push ss; pop ebx; pop esi; ret; 
0x000a1c99: je 0xa1c9f; cmp eax, ebx; jne 0xa1c90; mov eax, edx; pop ebx; ret; 
0x000a1d69: je 0xa1d60; pop ebx; ret; 
0x000a1d99: je 0xa1d90; cmp edx, esi; je 0xa1d90; pop ebx; pop esi; ret; 
0x000a1d9d: je 0xa1d90; pop ebx; pop esi; ret; 
0x000a1e3d: je 0xa1e50; cmp eax, ecx; jne 0xa1e30; mov eax, edx; pop ebx; ret; 
0x000a20f4: je 0xa211c; add byte ptr [eax - 0x72cd769a], dl; inc edx; add dword ptr [ebx + 0x5e], ebx; ret; 
0x000a264c: je 0xa2674; add byte ptr [eax - 0x7cfe49f1], dl; rol dword ptr [ecx], 0x83; ret 0xf01; 
0x000a3d5c: je 0xa3d84; add byte ptr [eax + 0x16f0ff3], dl; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000a3d6d: je 0xa3d95; add byte ptr [edx - 0x76fd77ff], cl; clc; pop edi; ret; 
0x000a3fed: je 0xa4015; add bl, dh; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000a5c58: je 0xa5c5c; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000a5d5c: je 0xa5d84; add byte ptr [eax + 0x5b118966], dl; ret; 
0x000a5d8c: je 0xa5db4; add byte ptr [eax + 0x51881189], dl; add al, 0x5b; ret; 
0x000a5e1c: je 0xa5e44; add byte ptr [eax + 0x1130f66], dl; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000a5e2c: je 0xa5e54; add byte ptr [eax + 0x1130f66], dl; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000a5e3c: je 0xa5e64; add byte ptr [eax + 0x1130f66], dl; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x000a6b6a: je 0xa5fa0; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; pop ebx; ret; 
0x000a6b0f: je 0xa6020; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; pop ebx; ret; 
0x000a812c: je 0xa8154; add byte ptr [eax + 0x16f0ff3], dl; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000aa1bc: je 0xaa1e4; add byte ptr [eax + 0x5b118966], dl; ret; 
0x000aa1ec: je 0xaa214; add byte ptr [eax + 0x51881189], dl; add al, 0x5b; ret; 
0x000aa27c: je 0xaa2a4; add byte ptr [eax + 0x1130f66], dl; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000aa28c: je 0xaa2b4; add byte ptr [eax + 0x1130f66], dl; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000aa29c: je 0xaa2c4; add byte ptr [eax + 0x1130f66], dl; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x000ab39d: je 0xab3c5; add byte ptr [edx - 0x76fd77ff], cl; clc; pop edi; ret; 
0x000abca8: je 0xabcb2; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000ac3ed: je 0xac415; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000ac3fc: je 0xac424; add byte ptr [eax + 0x5e5f1788], dl; pop ebx; ret; 
0x000adb0d: je 0xadb35; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000adb1c: je 0xadb44; add byte ptr [eax + 0x5e5f1788], dl; pop ebx; ret; 
0x000af68d: je 0xaf6b5; add byte ptr [eax + 0x18a017a], cl; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x000b1c3d: je 0xb1c65; add byte ptr [ebp - 0x7cc78a40], al; ret; 
0x000b385f: je 0xb39c0; bsr eax, eax; add eax, edi; pop edi; ret; 
0x000b3a1b: je 0xb3a30; bsf ecx, ecx; sub edx, ecx; jbe 0xb3a50; add eax, ecx; ret; 
0x000b3be9: je 0xb3c3a; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000b3c9b: je 0xb3cec; adc byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x315a75c0], 0xc0; pop edi; ret; 
0x000b3f42: je 0xb3f4d; pmovmskb eax, xmm1; test eax, eax; jne 0xb3fc0; xor eax, eax; ret; 
0x000b3f70: je 0xb3fbb; and byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x316575c0], 0xc0; ret; 
0x000b402a: je 0xb4000; bsr ecx, edx; add eax, ecx; ret; 
0x000b4082: je 0xb40e0; bsr edi, edi; add eax, edi; pop edi; ret; 
0x000b4203: je 0xb4210; bsf ecx, ecx; add eax, ecx; ret; 
0x000b4248: je 0xb4260; bsf eax, eax; add eax, edx; add eax, ecx; ret; 
0x000b4388: je 0xb43d4; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000b4445: je 0xb446d; add byte ptr [ecx - 0x7cf5742d], cl; ret 0x8104; 
0x000b44ef: je 0xb44d0; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000b4567: je 0xb4548; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000b46a3: je 0xb46b3; call ecx; 
0x000b47d1: je 0xb47d4; inc eax; pop edi; ret; 
0x000b4975: je 0xb4978; inc eax; pop edi; pop esi; ret; 
0x000b4d47: je 0xb4d57; call ecx; 
0x000b4fce: je 0xb4fd4; mov byte ptr [ecx + edx + 3], ah; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000b5727: je 0xb572a; inc eax; sub eax, dword ptr [esp + 4]; ret; 
0x000b5846: je 0xb584f; mov byte ptr [ecx + eax], 0; dec ecx; jne 0xb5848; pop esi; ret; 
0x000b58e8: je 0xb58f1; or dword ptr [eax + 0x3be0], 1; xor eax, eax; pop ebx; ret; 
0x000b5b09: je 0xb5af0; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000b5b28: je 0xb5b4e; adc al, ch; leave; ret 0xb; 
0x000b5d59: je 0xb5d40; mov eax, ebx; add esp, 4; pop ebx; pop esi; ret; 
0x000b5fa5: je 0xb5fcd; add byte ptr [ecx], dh; fild dword ptr [ebp - 0x760d8b37]; ret; 
0x000b60c8: je 0xb60d0; mov eax, esi; pop ebx; pop esi; ret; 
0x000b60f5: je 0xb611b; and byte ptr [esi - 0x18], dl; push edx; mov eax, dword ptr [0xc483fff6]; or al, 0x89; ret; 
0x000b64cf: je 0xb64da; mov edx, dword ptr [edx]; xor eax, eax; test edx, edx; sete al; ret; 
0x000b6507: je 0xb652d; sbb byte ptr [edx], ch; call 0xb6520; add esp, 0x1c; ret; 
0x000b6a8f: je 0xb6ab5; sbb al, 0x8d; xchg al, cl; xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x000b6bcc: je 0xb6bf2; xor al, 0xff; je 0xb6bf6; inc eax; push edi; call esi; 
0x000b6bd0: je 0xb6bf6; inc eax; push edi; call esi; 
0x000b6c43: je 0xb6c69; sbb al, 0x8d; xchg al, cl; xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x000b6c63: je 0xb6c89; sbb al, 0x8d; xchg al, cl; xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x000b6c83: je 0xb6ca9; sbb al, 0x8d; xchg al, cl; xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x000b70c4: je 0xb70ea; sub al, 0x55; lea eax, [esp + 0x64]; push eax; push esi; call ebx; 
0x000b7121: je 0xb7147; sbb al, 0x8d; xchg ah, ah; xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x000b725f: je 0xb7285; sbb al, 0x8d; xchg ah, ah; xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x000b727f: je 0xb72a5; sbb al, 0x8d; xchg ah, ah; xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x000b72f0: je 0xb72f6; test edx, edx; jne 0xb72e8; ret; 
0x000b736c: je 0xb7392; sub al, 0xe8; or al, 3; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000b73ae: je 0xb73d4; sub al, 0xe8; fiadd dword ptr [edi]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000b74ae: je 0xb74d4; sub al, 0xe8; sbb dl, byte ptr [edx]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000b74ec: je 0xb7512; sub al, 0xe8; fcom qword ptr [ecx]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000b7568: je 0xb758e; sbb al, 0xe8; add byte ptr [eax], ah; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000b75aa: je 0xb75d0; sbb al, 0xe8; dec edi; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000b7668: je 0xb768e; sbb al, 0xe8; jo 0xb76e9; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000b911c: je 0xb9144; add byte ptr [eax + 0xa9d231], dl; add byte ptr [eax], dl; add byte ptr [edi], cl; xchg ebp, eax; ret 0xea81; 
0x000bbb13: je 0xbbb0e; call dword ptr [eax - 0x18]; 
0x000bbb59: je 0xbbb54; call dword ptr [eax - 0x18]; 
0x000bbdaa: je 0xbbdd0; sub al, 0xf; xchg ebp, eax; ret 0xd689; 
0x000be891: je 0xbe88c; call dword ptr [eax - 0x18]; 
0x000be9d3: je 0xbe9ce; call dword ptr [eax - 0x18]; 
0x000c159a: je 0xc1595; call dword ptr [eax - 0x18]; 
0x000c16c2: je 0xc16bd; call dword ptr [eax - 0x18]; 
0x000c1a57: je 0xc1a5f; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000c1f77: je 0xc1f02; ret 0x860f; 
0x000c2c84: je 0xc2cac; add byte ptr [eax + 0x3901c083], dl; ret; 
0x000c2ccc: je 0xc2cf4; add byte ptr [eax + 0x3901c083], dl; ret; 
0x000c478c: je 0xc4711; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000c4a04: je 0xc4a2c; add byte ptr [eax - 0x7c03af73], dl; cli; add ecx, dword ptr [edi]; xchg esi, eax; ret 0xd284; 
0x000c4c2e: je 0xc4c54; sbb al, 0xff; je 0xc4c58; sbb al, 0xe8; div byte ptr [ecx + edi*8 + 0x1cc483ff]; ret; 
0x000c4c32: je 0xc4c58; sbb al, 0xe8; div byte ptr [ecx + edi*8 + 0x1cc483ff]; ret; 
0x000c508a: je 0xc50b0; adc byte ptr [ebp + 0x2c928dc0], al; cmp al, 0; add byte ptr [edi], cl; inc esp; ret 0x108b; 
0x000c6be4: je 0xc6c0c; add byte ptr [eax + 0x7565f883], dl; sbb dword ptr [ebx - 0x361f7b], ecx; inc dword ptr [ebx - 0x363743]; call dword ptr [eax]; 
0x000c8c79: je 0xc8c74; call dword ptr [eax - 0x18]; 
0x000c8da6: je 0xc8da1; call dword ptr [eax - 0x18]; 
0x000c9cad: je 0xc9cd5; add byte ptr [edi + 0x5e], bl; ret; 
0x000c9ccd: je 0xc9cf5; add byte ptr [eax + 1], bh; jg 0xc9cd9; neg eax; ret; 
0x000c9e77: je 0xc9e90; mov cl, dl; and cl, 0xf; je 0xc9ea0; ret; 
0x000c9e7e: je 0xc9ea0; ret; 
0x000c9e95: je 0xc9eb0; add eax, 2; ret; 
0x000c9f74: je 0xc9f88; cmp dword ptr [edx + eax*4 + 4], 0; lea ecx, [eax + 1]; jne 0xc9f58; mov eax, ecx; ret; 
0x000c9f84: je 0xc9fac; add byte ptr [eax - 0x37763e77], dl; ret; 
0x000ca045: je 0xca050; mov edx, dword ptr [eax]; cmp edx, ecx; jne 0xca040; ret; 
0x000ca3a4: je 0xca3ca; or al, 0xc1; ljmp 0x29d2:0x31d0891f; ret; 
0x000ca6ca: je 0xca6f0; or byte ptr [ecx], al; rol dword ptr [ecx], cl; ret; 
0x000cb7ab: je 0xcb7d1; pop eax; lea eax, [esp + 0xec]; push eax; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x000cba23: je 0xcba49; pop eax; lea eax, [esp + 0xb4]; push eax; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x000cbb6a: je 0xcbb90; sbb al, 0xe8; mov esi, 0x83fffff6; les ebx, ptr [eax]; pop ebx; ret; 
0x000ceb56: je 0xcebc8; mov ebx, dword ptr [esp + 0x50]; lea edx, [esp + 0x1c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000d0d39: je 0xd0d5f; or al, 0x89; ret 0x44f6; 
0x000d0db9: je 0xd0ddf; or al, 0x89; ret 0x44f6; 
0x000d284a: je 0xd2870; sub al, 0xff; je 0xd2874; sub al, 0xe8; lcall 0x2cc4, 0x8300001f; ret; 
0x000d284e: je 0xd2874; sub al, 0xe8; lcall 0x2cc4, 0x8300001f; ret; 
0x000d288a: je 0xd28b0; sub al, 0xff; je 0xd28b4; sub al, 0xe8; ljmp 0x2cc4:0x83000045; ret; 
0x000d288e: je 0xd28b4; sub al, 0xe8; ljmp 0x2cc4:0x83000045; ret; 
0x000d2fa6: je 0xd2fcc; sbb byte ptr [edi], cl; dec ecx; ret 0xc483; 
0x000d6eee: je 0xd6ef8; add esp, 0xc; ret; 
0x000d6fce: je 0xd6fd8; add esp, 0xc; ret; 
0x000d70f6: je 0xd711c; inc esp; mov ebx, dword ptr [esp + 0x40]; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000d72fc: je 0xd72ab; cmp eax, -0x26; jne 0xd7340; lea ecx, [esp + 4]; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x000d7297: je 0xd72c8; sub esp, 8; push edi; push ebx; call eax; 
0x000d72d0: je 0xd72ec; sub esp, 8; lea edx, [esp + 0xc]; push edx; push ebx; call eax; 
0x000d7739: je 0xd76c4; cli; call dword ptr gs:[0x10]; 
0x000d77f8: je 0xd7783; cli; mov dword ptr [esp + 0xc], eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x000d78f1: je 0xd787c; ljmp 0x424:0x748bc789; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000d7926: je 0xd78b1; ljmp 0x424:0x748bc789; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000d7f68: je 0xd7f80; imul eax, dword ptr [esp + 0x10], 0x34; add eax, dword ptr [edx]; add esp, 8; pop ebx; ret; 
0x000d94dd: je 0xd9500; sub esp, 0xc; push esi; call eax; 
0x000d9ae1: je 0xd9ad7; jmp dword ptr [esi - 0x70]; 
0x000da0f1: je 0xda117; pop eax; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x1c]; call edi; 
0x000da0f5: je 0xda11b; pop eax; push dword ptr [esp + 0x1c]; call edi; 
0x000da3db: je 0xda401; and byte ptr [ebp + 0x50382444], cl; push dword ptr [esp + 0x24]; push dword ptr [esp + 0x30]; call ebx; 
0x000da7ea: je 0xda818; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x000dc625: je 0xdc64d; add byte ptr [ebx - 0x1337a], cl; jmp dword ptr [ebp - 0x75]; 
0x000dd65f: je 0xdd670; xor edx, edx; cmp eax, -1; cmove eax, edx; pop ebx; ret; 
0x000dd69a: je 0xdd6c0; sbb byte ptr [edx - 1], ch; call 0xdd6b0; add esp, 0x1c; ret; 
0x000dd6e0: je 0xdd706; sbb byte ptr [edx - 1], ch; call 0xdd7f0; add esp, 0x1c; ret; 
0x000ddb64: je 0xddb8a; cmp al, 0x89; inc esp; and al, 8; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x000de3d0: je 0xde3d9; test eax, eax; jne 0xde3d9; pop ecx; jmp ecx; 
0x000de3d0: je 0xde3d9; test eax, eax; jne 0xde3d9; pop ecx; jmp ecx; ret; 
0x000de76f: je 0xde773; call eax; 
0x000de7d5: je 0xde7b5; mov dword ptr [esp + 0xc], ecx; add ebx, 1; mov dword ptr [esp + 8], eax; call edx; 
0x000de825: je 0xde7b5; mov dword ptr [esp + 0xc], ecx; mov dword ptr [esp + 8], eax; call edx; 
0x000df3d6: je 0xdf408; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x000df476: je 0xdf4a8; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x000df73f: je 0xdf770; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x000df7ef: je 0xdf820; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x000dfdb5: je 0xdfddd; add byte ptr [eax + 0x40], bh; ret; 
0x000dfee8: je 0xdff1a; xor eax, eax; cmp edx, 0x1badface; setne al; ret; 
0x000dff03: je 0xdff1a; xor eax, eax; cmp edx, 0x1cd1; setne al; ret; 
0x000dfeb3: je 0xdff1a; xor eax, eax; cmp edx, 0xadf5; setne al; ret; 
0x000e172b: je 0xe173b; sub esp, 8; push eax; push edi; call esi; 
0x000e3ddb: je 0xe3deb; sub esp, 8; push eax; push edi; call esi; 
0x000e5a6d: je 0xe5a73; cmp al, 0x3f; jne 0xe5a89; mov eax, 1; ret; 
0x000e87d6: je 0xe87fc; cmp al, 0xe8; ret 0x400; 
0x000e957b: je 0xe9596; pop ebx; pop esi; pop edi; ret; 
0x000e95dd: je 0xe95f0; pop ebx; pop esi; ret; 
0x000eab08: je 0xeab39; add esp, 4; pop ebx; pop esi; ret; 
0x000eac7c: je 0xeabe2; pop ebx; pop esi; pop edi; ret; 
0x000ed35c: je 0xed384; add byte ptr [eax - 0x3f7cef09], dl; add al, 0x39; ret 0xf775; 
0x000ed52f: je 0xed550; add esp, 8; xor eax, eax; pop ebx; ret; 
0x000ee3db: je 0xee401; cmp al, 0x29; ret 0x448b; 
0x000f0efd: je 0xf0f23; sbb al, 0x89; shr dword ptr [ecx], cl; ret; 
0x000f1226: je 0xf124c; xor al, ch; ret 0xfff1; 
0x000f8e1b: je 0xf8e2b; sub esp, 8; push eax; push edi; call esi; 
0x000f99eb: je 0xf99fb; sub esp, 8; push eax; push edi; call esi; 
0x000fb1d7: je 0xfb1fd; inc esp; lea ecx, [esp + 0xc]; mov eax, 0x1a7; call dword ptr gs:[0x10]; 
0x000fbbbf: je 0xfbbd0; mov eax, edx; pop ebx; pop esi; ret; 
0x000fbc5d: je 0xfbc85; add byte ptr [ecx], dh; rol byte ptr [ecx + 0xc0fefb], cl; add byte ptr [edi], cl; xchg ebp, eax; ret 0x548d; 
0x000fda3d: je 0xfda65; add byte ptr [eax + 0x74000978], al; sbb ecx, dword ptr [ecx - 0x7ccf7427]; ret; 
0x001018ad: jecxz 0x10183a; je 0x1018d5; adc byte ptr [ebp - 0x6615b7a], cl; call dword ptr [eax - 0x73]; 
0x0011dd1c: jecxz 0x11dd47; ret; 
0x0011de10: jecxz 0x11de3b; ret; 
0x0011f4cc: jecxz 0x11f4ce; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012841a: jecxz 0x12841d; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00128ddd: jecxz 0x128de0; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00131b1a: jecxz 0x131b1d; lea edx, [edx - 0xac960]; cmove eax, edx; pop ebx; ret; 
0x00131b6a: jecxz 0x131b6d; lea edx, [edx - 0xa8920]; cmove eax, edx; pop ebx; ret; 
0x00131bba: jecxz 0x131bbd; lea edx, [edx - 0xaa930]; cmove eax, edx; pop ebx; ret; 
0x00139857: jecxz 0x1397e2; shl dword ptr [0xfffff000], 0x29; ret; 
0x0013fdc3: jecxz 0x13fd4e; shl dword ptr [0xfffff000], 0x29; ret; 
0x0014cdf3: jecxz 0x14ce54; stc; call dword ptr [eax - 0x18]; 
0x0014cdf3: jecxz 0x14ce54; stc; call dword ptr [eax - 0x18]; ret; 
0x0014cee7: jecxz 0x14cf48; stc; call dword ptr [eax - 0x18]; 
0x0014d7fe: jecxz 0x14d85f; stc; call dword ptr [eax - 0x18]; 
0x00150e1f: jecxz 0x150db2; or eax, 0x44ec8100; add dword ptr [eax], eax; add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00165584: jecxz 0x165509; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0016714c: jecxz 0x1670d9; je 0x167174; add al, 0x83; in al, dx; add al, 0x6a; call dword ptr [ebp + 0x57]; 
0x0016d218: jecxz 0x16d202; shl byte ptr [edi - 4], cl; jmp dword ptr [esi - 0x70]; 
0x00172351: jecxz 0x172352; dec dword ptr [ecx + 0x74928dd9]; jmp 0x17235a; jmp ptr [ecx]; ret 0xc129; 
0x00173d0c: jecxz 0x173d0d; dec dword ptr [ebp - 0x148b6a]; jmp ptr [ecx]; ret 0xf989; 
0x00173e22: jecxz 0x173e23; jmp ptr [ecx]; ret 0xc129; 
0x00173e62: jecxz 0x173e95; fisttp dword ptr [ecx + 0x5f5e5bd8]; ret; 
0x00179ff9: jecxz 0x17a038; stc; jmp dword ptr [esi - 0x70]; 
0x00185ab3: jecxz 0x185a9d; inc eax; ret; 
0x001927bf: jecxz 0x1927c6; add byte ptr [eax], al; pop ebx; ret; 
0x00196e99: jecxz 0x196e9b; add byte ptr [eax], al; add edx, 0; jl 0x197040; mov eax, ecx; ret; 
0x0019729e: jecxz 0x197223; ret 0x6640; 
0x001a06f0: jecxz 0x1a0675; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000415d4: jecxz 0x415d4; dec dword ptr [ebx - 0x72d3db84]; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x000415f7: jecxz 0x415f7; dec dword ptr [ebx - 0x72d3db84]; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x0004b690: jecxz 0x4b61b; pop ds; pop ebx; pop esi; pop edi; ret; 
0x000507fd: jecxz 0x507fe; dec dword ptr [ebx - 0x365363]; jmp dword ptr [ebp - 0x75]; 
0x0005382d: jecxz 0x5382e; dec dword ptr [ebp - 0x148b6e]; jmp ptr [ecx]; ret 0xf189; 
0x0005db89: jecxz 0x5db8a; dec dword ptr [ebx - 0x59b7b]; jmp dword ptr [ebp - 0x75]; 
0x00062a38: jecxz 0x62a39; dec dword ptr [ebx - 0x4f37b]; jmp dword ptr [ebp - 0x75]; 
0x00062f97: jecxz 0x62f98; dec dword ptr [ebx - 0x4f37b]; jmp dword ptr [ebp - 0x75]; 
0x0006695c: jecxz 0x6695d; jmp eax; 
0x0006d43b: jecxz 0x6d43c; jmp dword ptr [esi - 0x70]; 
0x0006d491: jecxz 0x6d492; dec dword ptr [edi]; mov dh, 0x57; or al, 0xf6; ret 0xf08; 
0x00070dd8: jecxz 0x70dd9; jmp ptr [ecx]; ret 0xd989; 
0x00070fb4: jecxz 0x70fb5; jmp ptr [ecx]; ret 0xd989; 
0x00071478: jecxz 0x71479; jmp ptr [ecx]; ret 0xd989; 
0x000738f0: jecxz 0x738f1; dec dword ptr [ebp - 0x148b6e]; jmp ptr [ecx]; ret 0x4d89; 
0x00073a7f: jecxz 0x73a80; jmp ptr [ecx]; ret 0xd989; 
0x00073b41: jecxz 0x73b42; jmp ptr [ecx]; ret 0xd989; 
0x00074718: jecxz 0x746dc; cli; jmp dword ptr [esi - 0x70]; 
0x00074894: jecxz 0x74895; jmp ptr [ecx]; ret 0x4d89; 
0x00076a47: jecxz 0x76a86; stc; call dword ptr [eax - 0x18]; 
0x00077cbb: jecxz 0x77cbc; jmp ptr [ecx]; ret 0xf989; 
0x00077f12: jecxz 0x77f13; dec dword ptr [ebp - 0x148b6b]; jmp ptr [ecx]; ret 0xd989; 
0x00079615: jecxz 0x79616; jmp ptr [ecx]; ret 0xd989; 
0x0007ab88: jecxz 0x7ab89; jmp ptr [ecx]; ret 0x4d89; 
0x0007d2ad: jecxz 0x7d2ae; jmp ptr [ecx]; ret 0xd989; 
0x0007d3c4: jecxz 0x7d3c5; jmp ptr [ecx]; ret 0xd989; 
0x0007e062: jecxz 0x7e063; jmp ptr [ecx]; ret 0xf189; 
0x0007f971: jecxz 0x7f972; jmp ptr [ecx]; ret 0xf989; 
0x000813ad: jecxz 0x813ec; stc; call dword ptr [eax - 0x18]; 
0x00081eed: jecxz 0x81ee8; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x0008229b: jecxz 0x82297; call dword ptr [eax + 0x6a]; 
0x00083807: jecxz 0x8378c; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0008763f: jecxz 0x87681; jne 0x87664; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x0009bfba: jecxz 0x9bfbd; lea edx, [edx - 0xa8900]; cmove eax, edx; pop ebx; ret; 
0x0009c04a: jecxz 0x9c04d; lea edx, [edx - 0xaa910]; cmove eax, edx; pop ebx; ret; 
0x0009c09a: jecxz 0x9c09d; lea edx, [edx - 0xa3570]; cmove eax, edx; pop ebx; ret; 
0x0009c1da: jecxz 0x9c1c3; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0009c3aa: jecxz 0x9c3ad; lea edx, [edx - 0xac940]; cmove eax, edx; pop ebx; ret; 
0x000abe39: jecxz 0xabe41; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000b4c20: jecxz 0xb4ba5; ret 0x8304; 
0x000b5925: jecxz 0xb591f; inc dword ptr [ecx]; sar dword ptr [esi], 1; jmp ecx; 
0x000c155a: jecxz 0xc155b; dec dword ptr [ebx - 0x72dbdb84]; xchg dword ptr [edi + edx*4], esp; stc; call dword ptr [eax - 0x73]; 
0x000c15c3: jecxz 0xc15bb; dec dword ptr [ebx - 0x72dbdb84]; xchg dword ptr [edi + edx*4], esp; stc; call dword ptr [eax - 0x73]; 
0x000c15e6: jecxz 0xc15de; dec dword ptr [ebx - 0x72dbdb84]; xchg dword ptr [edi + edx*4], esp; stc; call dword ptr [eax - 0x73]; 
0x000c1609: jecxz 0xc1601; dec dword ptr [ebx - 0x72dbdb84]; xchg dword ptr [edi + edx*4], esp; stc; call dword ptr [eax - 0x73]; 
0x000c1658: jecxz 0xc1650; dec dword ptr [ebx - 0x72dbdb84]; xchg dword ptr [edi + edx*4], esp; stc; call dword ptr [eax - 0x73]; 
0x000c167b: jecxz 0xc1673; dec dword ptr [ebx - 0x72dbdb84]; xchg dword ptr [edi + edx*4], esp; stc; call dword ptr [eax - 0x73]; 
0x000ca3ea: jecxz 0xca3eb; dec dword ptr [edi]; add byte ptr [ecx], al; ret; 
0x000d6da8: jecxz 0xd6da9; call dword ptr [eax + 0x53]; 
0x000df94a: jecxz 0xdf992; stc; call dword ptr [ebx + 0x50]; 
0x00104c6a: jg 0x104c54; jo 0x104c05; std; call dword ptr [ecx + 0x6a]; 
0x0010884d: jg 0x108851; add byte ptr [eax], al; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00108ce7: jg 0x108cea; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011532d: jg 0x115333; call dword ptr gs:[0x10]; 
0x0011532d: jg 0x115333; call dword ptr gs:[0x10]; pop ebp; pop edi; pop ebx; ret; 
0x001167cf: jg 0x1167d0; inc dword ptr [ebx + 0x508930ca]; or byte ptr [edx + 0x100], bh; mov word ptr [eax + 0x16], dx; ret; 
0x0011c08d: jg 0x11c0e0; lea esp, [ebp - 8]; pop ebx; pop esi; pop ebp; ret; 
0x0011c152: jg 0x11c178; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x0011ce84: jg 0x11ced1; stc; call dword ptr [eax + 0x53]; 
0x00120e61: jg 0x120e90; add esp, 8; pop ebx; ret; 
0x001239d2: jg 0x1239d4; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012ab45: jg 0x12ab68; add esp, 0x18; pop ebx; ret; 
0x0013c3f5: jg 0x13c450; add esp, 4; pop ebx; pop esi; ret; 
0x0013c723: jg 0x13c748; add esp, 0x18; pop ebx; ret; 
0x00140e17: jg 0x140e74; mov eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x0014743d: jg 0x1473c4; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0014cb2b: jg 0x14cb68; add esp, 4; pop ebx; pop esi; ret; 
0x00150d95: jg 0x150df0; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x001518f1: jg 0x151918; add esp, 8; pop ebx; ret; 
0x00152a0b: jg 0x152a30; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x00152d73: jg 0x152d80; ret; 
0x0015c808: jg 0x15c819; mov dh, 0x14; adc dword ptr [eax - 0x27c600b0], ecx; jne 0x15c800; pop ebx; ret; 
0x0015d74e: jg 0x15d750; add byte ptr [ebx + 0x3910244c], cl; ret 0x4e0f; 
0x00163469: jg 0x163450; pop ebx; pop esi; pop edi; ret; 
0x0016ba1e: jg 0x16ba1c; jmp dword ptr [esi - 0x70]; 
0x0016ba64: jg 0x16ba88; add esp, 8; pop ebx; ret; 
0x0016bae2: jg 0x16bb08; add esp, 0x18; pop ebx; ret; 
0x0016bb6e: jg 0x16bb90; add esp, 0x18; pop ebx; ret; 
0x0016bbe4: jg 0x16bc08; add esp, 8; pop ebx; ret; 
0x0016bd94: jg 0x16bdb8; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016be46: jg 0x16be68; add esp, 0x18; pop ebx; ret; 
0x0016d7a4: jg 0x16d7b0; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x00170b25: jg 0x170b48; add esp, 4; pop ebx; pop esi; ret; 
0x00170bc5: jg 0x170be8; add esp, 4; pop ebx; pop esi; ret; 
0x00170c75: jg 0x170c98; pop ebx; pop esi; pop edi; ret; 
0x0017abe8: jg 0x17ac2c; jo 0x17ab6d; ret 0x80; 
0x0017acc0: jg 0x17ad04; out dx, eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0017acf0: jg 0x17ad34; out dx, al; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x0017ad20: jg 0x17ad64; in eax, dx; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0017ad50: jg 0x17ad94; in al, dx; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x0017ade0: jg 0x17ae24; jmp 0x6710f070; mov dword ptr [edx - 3], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0017ae10: jg 0x17ae54; call 0x42edbd7d; clc; pop ebx; ret; 
0x0017af06: jg 0x17af4a; ret; 
0x0017af36: jg 0x17af7a; ret 0xf66; 
0x0017b238: jg 0x17b27c; jo 0x17b1bd; ret 0x80; 
0x0017b310: jg 0x17b354; out dx, eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017b340: jg 0x17b384; out dx, al; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017b3a0: jg 0x17b3e4; in al, dx; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017b3fb: jg 0x17b43f; fisub dword ptr [esi + 0xf]; jg 0x17b444; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0017b400: jg 0x17b444; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0017b470: jg 0x17b4b4; call 0x42edc3dd; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017b596: jg 0x17b5da; ret; 
0x0017b5d6: jg 0x17b61a; ret 0xf66; 
0x0017b8b0: jg 0x17b8f4; out dx, eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017b8e0: jg 0x17b924; out dx, al; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017b940: jg 0x17b984; in al, dx; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017b99b: jg 0x17b9df; fisub dword ptr [esi + 0xf]; jg 0x17b9e4; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0017b9a0: jg 0x17b9e4; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0017ba10: jg 0x17ba54; call 0x42edc97d; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017bb36: jg 0x17bb7a; ret; 
0x0017bb76: jg 0x17bbba; ret 0xf66; 
0x0017be00: jg 0x17be44; out dx, eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0017be30: jg 0x17be74; out dx, al; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x0017be60: jg 0x17bea4; in eax, dx; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0017be90: jg 0x17bed4; in al, dx; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x0017bf20: jg 0x17bf64; jmp 0x671101b0; mov dword ptr [edx - 3], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0017bf50: jg 0x17bf94; call 0x42edcebd; clc; pop ebx; ret; 
0x0017c046: jg 0x17c08a; ret; 
0x0017c076: jg 0x17c0ba; ret 0xf66; 
0x00188531: jg 0x188575; call 0x4096952b; clc; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x00188611: jg 0x188655; out dx, eax; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x001886c1: jg 0x188705; out dx, al; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; pop ebx; ret; 
0x001887e1: jg 0x188825; in al, dx; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x00193cdb: jg 0x193ce0; neg eax; ret; 
0x00194006: jg 0x194010; neg eax; ret; 
0x00198045: jg 0x198050; neg eax; pop edi; pop esi; pop ebx; ret; 
0x00198136: jg 0x198140; neg eax; ret; 
0x00198bcb: jg 0x198bcf; mov eax, edi; pop edi; ret; 
0x00198c56: jg 0x198c5a; mov eax, edx; ret; 
0x0019e164: jg 0x19e166; add byte ptr [ecx - 0x76f3dbac], cl; ret 0xb70f; 
0x001a1056: jg 0x1a1078; add esp, 4; pop ebx; pop esi; ret; 
0x00027a77: jg 0x27a79; add byte ptr [ebx - 0x72c7db84], cl; xchg eax, esp; jo 0x27a7c; call dword ptr [eax - 0x73]; 
0x00035c14: jg 0x35c16; add byte ptr [ecx], cl; ror byte ptr [ecx - 0x24f3dbbc], 1; insb byte ptr es:[edi], dx; and al, 4; ret; 
0x00035f51: jg 0x35edc; ret; 
0x00035fa6: jg 0x35fb1; ror byte ptr [ecx - 0x22f7dbbc], 1; inc esp; and al, 4; ret; 
0x000362bb: jg 0x362bc; sub ecx, eax; xor eax, ecx; shr eax, 0x1f; ret; 
0x000362e6: jg 0x362f1; ror byte ptr [ecx - 0x26fbdbbc], 1; inc esp; and al, 4; ret; 
0x00036595: jg 0x36520; ret; 
0x0003a16a: jg 0x3a190; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0003a4fc: jg 0x3a528; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0003a6d1: jg 0x3a700; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x0003af97: jg 0x3afb8; add esp, 4; pop ebx; pop esi; ret; 
0x0003b0c6: jg 0x3b0e8; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x0003d8a0: jg 0x3d8fd; pop esi; pop edi; pop ebp; ret; 
0x000479cd: jg 0x479cd; dec dword ptr [ebx - 0x72dbdb84]; xchg dword ptr [esi + esi*2 - 7], ebx; call dword ptr [eax - 0x73]; 
0x0004a984: jg 0x4a9a8; add esp, 0x14; pop ebx; pop esi; ret; 
0x0004ac87: jg 0x4acc1; ret; 
0x00054cb4: jg 0x54cf0; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x00056d17: jg 0x56d50; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x0005856d: jg 0x585a0; stc; call dword ptr [ecx + 0x53]; 
0x00058c42: jg 0x58c48; ret; 
0x00059353: jg 0x59386; stc; call dword ptr [eax - 0x18]; 
0x0005d38b: jg 0x5d39c; dec edi; ret; 
0x00070c29: jg 0x70c48; add esp, 0x14; pop ebx; pop esi; ret; 
0x00070d3a: jg 0x70d58; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00072de3: jg 0x72df0; ret; 
0x0007be63: jg 0x7be70; ret; 
0x0007ec59: jg 0x7ec90; add esp, 8; pop ebx; ret; 
0x00080f73: jg 0x80f80; ret; 
0x000834df: jg 0x83518; pop ebx; pop esi; pop edi; ret; 
0x00084796: jg 0x8471b; bound ecx, qword ptr [esi + edi*8]; add esp, 8; pop ebx; ret; 
0x000868c3: jg 0x868be; call dword ptr [eax + 0x68]; 
0x000868e6: jg 0x868e1; call dword ptr [eax + 0x68]; 
0x00086d22: jg 0x86d1d; call dword ptr [eax - 0x73]; 
0x0008794c: jg 0x87947; call dword ptr [eax - 0x73]; 
0x00087b60: jg 0x87b5b; call dword ptr [eax - 0x73]; 
0x00087b73: jg 0x87b6e; call dword ptr [eax - 0x18]; 
0x00087b82: jg 0x87b7d; call dword ptr [eax - 0x73]; 
0x00087ba4: jg 0x87b9f; call dword ptr [eax - 0x73]; 
0x00087bfc: jg 0x87bf7; call dword ptr [eax - 0x73]; 
0x00087c1e: jg 0x87c19; call dword ptr [eax + 0x68]; 
0x00087c40: jg 0x87c3b; call dword ptr [eax - 0x73]; 
0x00087c62: jg 0x87c5d; call dword ptr [eax - 0x73]; 
0x00087c84: jg 0x87c7f; call dword ptr [eax + 0x68]; 
0x00087c95: jg 0x87c90; call dword ptr [eax - 0x73]; 
0x00087e35: jg 0x87e30; call dword ptr [eax - 0x18]; 
0x00087f55: jg 0x87f78; add esp, 0x18; pop ebx; ret; 
0x00088548: jg 0x88608; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x00088f3c: jg 0x88f37; call dword ptr [eax - 0x18]; 
0x00089c7b: jg 0x89c76; call dword ptr [eax - 0x18]; 
0x0008a37b: jg 0x8a3ae; test byte ptr [ecx + 0x80e1], 0; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008ab7b: jg 0x8ab76; call dword ptr [eax - 0x18]; 
0x0008c0c6: jg 0x8c0d7; xchg ebp, eax; rol ecx, 0xe1; pop es; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008c781: jg 0x8c79c; add byte ptr [edi], cl; xchg ebp, eax; ret 0xe2c1; 
0x0008c7e1: jg 0x8c7f2; xchg ebp, eax; rol ecx, 0xe1; pop es; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008c885: jg 0x8c8a0; add byte ptr [edi], cl; xchg ebp, eax; ret 0xe2c1; 
0x0008c9f2: jg 0x8ca03; xchg ebp, eax; rol ecx, 0xe1; pop es; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008d01c: jg 0x8d02d; xchg ebp, eax; rol ecx, 0xe1; pop es; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008fa36: jg 0x8fae8; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000a3d66: jg 0xa3d6a; mov eax, edi; pop edi; ret; 
0x000a3ff6: jg 0xa3ffa; mov eax, edx; ret; 
0x000a8136: jg 0xa813a; lea eax, [edx + 0xf]; pop edi; ret; 
0x000a83e6: jg 0xa83ea; lea eax, [edx + 0xf]; ret; 
0x000abb76: jg 0xabb79; jne 0xac520; pop edi; pop esi; pop ebx; ret; 
0x000abbfb: jg 0xabc02; jne 0xac520; pop edi; pop esi; pop ebx; ret; 
0x000abc20: jg 0xabc28; jne 0xac520; pop edi; pop esi; pop ebx; ret; 
0x000abc3e: jg 0xabc47; jne 0xac520; pop edi; pop esi; pop ebx; ret; 
0x000abc5c: jg 0xabc66; jne 0xac520; pop edi; pop esi; pop ebx; ret; 
0x000abc7f: jg 0xabc8a; jne 0xac520; pop edi; pop esi; pop ebx; ret; 
0x000abca4: jg 0xabcb0; jne 0xac520; pop edi; pop esi; pop ebx; ret; 
0x000abce2: jg 0xabcf0; jne 0xac520; pop edi; pop esi; pop ebx; ret; 
0x000abd06: jg 0xabd15; jne 0xac520; pop edi; pop esi; pop ebx; ret; 
0x000abd66: jg 0xabd77; jne 0xac520; pop edi; pop esi; pop ebx; ret; 
0x000abd8c: jg 0xabd9e; jne 0xac520; pop edi; pop esi; pop ebx; ret; 
0x000abe66: jg 0xabe7e; jne 0xac520; pop edi; pop esi; pop ebx; ret; 
0x000abe96: jg 0xabeaf; jne 0xac520; pop edi; pop esi; pop ebx; ret; 
0x000abf2e: jg 0xabf4a; jne 0xac520; pop edi; pop esi; pop ebx; ret; 
0x000abf5c: jg 0xabf79; jne 0xac520; pop edi; pop esi; pop ebx; ret; 
0x000abf8c: jg 0xabfaa; jne 0xac520; pop edi; pop esi; pop ebx; ret; 
0x000abfb6: jg 0xabfd5; jne 0xac520; pop edi; pop esi; pop ebx; ret; 
0x000abfe6: jg 0xac006; jne 0xac520; pop edi; pop esi; pop ebx; ret; 
0x000ac016: jg 0xac037; jne 0xac520; pop edi; pop esi; pop ebx; ret; 
0x000ac046: jg 0xac068; jne 0xac520; pop edi; pop esi; pop ebx; ret; 
0x000ac1c6: jg 0xac1cf; pop edi; pop esi; pop ebx; ret; 
0x000ac1d9: jg 0xac1e2; mov byte ptr [edi + 0x10], cl; pop edi; pop esi; pop ebx; ret; 
0x000ac1fa: jg 0xac203; mov word ptr [edi + 0x10], cx; pop edi; pop esi; pop ebx; ret; 
0x000ac219: jg 0xac222; mov dword ptr [edi + 0xf], ecx; pop edi; pop esi; pop ebx; ret; 
0x000ac239: jg 0xac242; mov dword ptr [edi + 0x10], ecx; pop edi; pop esi; pop ebx; ret; 
0x000ac27b: jg 0xac284; movlpd qword ptr [edi + 0xe], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000ac29b: jg 0xac2a4; movlpd qword ptr [edi + 0xf], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000ac2bb: jg 0xac2c4; movlpd qword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ac35b: jg 0xac364; movdqu xmmword ptr [edi + 0xd], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ac37b: jg 0xac384; movdqu xmmword ptr [edi + 0xe], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ac39b: jg 0xac3a4; movdqu xmmword ptr [edi + 0xf], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ac3bb: jg 0xac3c4; movdqu xmmword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ac37f: jg 0xac3d8; push cs; pop edi; pop esi; pop ebx; ret; 
0x000ac39f: jg 0xac3f8; maxps xmm3, xmmword ptr [esi + 0x5b]; ret; 
0x000ac3bf: jg 0xac418; adc byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000ac3e2: jg 0xac43b; adc byte ptr [eax + 0x5e5f204f], cl; pop ebx; ret; 
0x000ac4f2: jg 0xac4fb; pop edi; pop esi; pop ebx; ret; 
0x000ac4e2: jg 0xac52b; call ptr [edi + 0x5e]; pop ebx; ret; 
0x000ac5ff: jg 0xac631; pop edi; pop esi; pop ebx; ret; 
0x000ac5fe: jg 0xac67f; xor byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000ad20d: jg 0xad211; jne 0xadc50; pop edi; pop esi; pop ebx; ret; 
0x000ad230: jg 0xad235; jne 0xadc50; pop edi; pop esi; pop ebx; ret; 
0x000ad24b: jg 0xad251; jne 0xadc50; pop edi; pop esi; pop ebx; ret; 
0x000ad26e: jg 0xad275; jne 0xadc50; pop edi; pop esi; pop ebx; ret; 
0x000ad293: jg 0xad29b; jne 0xadc50; pop edi; pop esi; pop ebx; ret; 
0x000ad2b1: jg 0xad2ba; jne 0xadc50; pop edi; pop esi; pop ebx; ret; 
0x000ad317: jg 0xad323; jne 0xadc50; pop edi; pop esi; pop ebx; ret; 
0x000ad345: jg 0xad352; jne 0xadc50; pop edi; pop esi; pop ebx; ret; 
0x000ad375: jg 0xad383; jne 0xadc50; pop edi; pop esi; pop ebx; ret; 
0x000ad3a9: jg 0xad3b8; jne 0xadc50; pop edi; pop esi; pop ebx; ret; 
0x000ad3d9: jg 0xad3e9; jne 0xadc50; pop edi; pop esi; pop ebx; ret; 
0x000ad409: jg 0xad41a; jne 0xadc50; pop edi; pop esi; pop ebx; ret; 
0x000ad42f: jg 0xad441; jne 0xadc50; pop edi; pop esi; pop ebx; ret; 
0x000ad4a5: jg 0xad4ba; jne 0xadc50; pop edi; pop esi; pop ebx; ret; 
0x000ad5cc: jg 0xad5e7; jne 0xadc50; pop edi; pop esi; pop ebx; ret; 
0x000ad65f: jg 0xad67d; jne 0xadc50; pop edi; pop esi; pop ebx; ret; 
0x000ad689: jg 0xad6a8; jne 0xadc50; pop edi; pop esi; pop ebx; ret; 
0x000ad6b9: jg 0xad6d9; jne 0xadc50; pop edi; pop esi; pop ebx; ret; 
0x000ad6e9: jg 0xad70a; jne 0xadc50; pop edi; pop esi; pop ebx; ret; 
0x000ad719: jg 0xad73b; jne 0xadc50; pop edi; pop esi; pop ebx; ret; 
0x000ad8d6: jg 0xad8df; lea eax, [edi + 0x10]; pop edi; pop esi; pop ebx; ret; 
0x000ada7f: jg 0xadad8; or eax, 0x5f1d478d; pop esi; pop ebx; ret; 
0x000adabf: jg 0xadb18; jge 0x5e69fa0e; pop ebx; ret; 
0x000adadf: jg 0xadb38; adc byte ptr [ebp + 0x5e5f2047], cl; pop ebx; ret; 
0x000adb02: jg 0xadb5b; adc byte ptr [eax + 0x5e5f204f], cl; pop ebx; ret; 
0x000adc12: jg 0xadc1b; pop edi; pop esi; pop ebx; ret; 
0x000adc02: jg 0xadc4b; call ptr [edi + 0x5e]; pop ebx; ret; 
0x000add2f: jg 0xadd61; lea eax, [edi + 0x40]; pop edi; pop esi; pop ebx; ret; 
0x000add2e: jg 0xaddaf; xor byte ptr [ebp + 0x5e5f4047], cl; pop ebx; ret; 
0x000afec6: jg 0xafec8; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000afed6: jg 0xafed8; mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000afefa: jg 0xafefc; mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000aff19: jg 0xaff1b; mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000aff39: jg 0xaff3b; mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000aff59: jg 0xaff5b; mov dword ptr [eax + 0x10], ecx; mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000aff7b: jg 0xaff7d; movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000aff9b: jg 0xaff9d; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000affbb: jg 0xaffbd; movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000affdb: jg 0xaffdd; movlpd qword ptr [eax + 0x10], xmm2; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000affff: jg 0xb0001; movlpd qword ptr [eax + 0x10], xmm2; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b001e: jg 0xb0020; movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b003e: jg 0xb0040; movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b005b: jg 0xb005d; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b007b: jg 0xb007d; movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b009b: jg 0xb009d; movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b005f: jg 0xb00b1; or eax, 0x824448b; pop esi; ret; 
0x000b00bb: jg 0xb00bd; movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b007f: jg 0xb00d1; push cs; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b009f: jg 0xb00f1; jnp 0x5e1324eb; ret; 
0x000b00bf: jg 0xb0111; adc byte ptr [ebx + 0x5e082444], cl; ret; 
0x000b3349: jg 0xb334b; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b336c: jg 0xb336e; mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b338d: jg 0xb338f; mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b33ac: jg 0xb33ae; mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b33cc: jg 0xb33ce; mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b340e: jg 0xb3410; movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b342e: jg 0xb3430; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b344e: jg 0xb3450; movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b352e: jg 0xb3530; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b354e: jg 0xb3550; movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b356e: jg 0xb3570; movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b3532: jg 0xb3584; or eax, 0xc24448b; pop ebx; pop esi; ret; 
0x000b358e: jg 0xb3590; movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b3552: jg 0xb35a4; push cs; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b3572: jg 0xb35c4; jnp 0x5b1759be; pop esi; ret; 
0x000b3592: jg 0xb35e4; adc byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000b8190: jg 0xb8115; ret; 
0x000b8830: jg 0xb87b5; ret; 
0x000c9ca5: jg 0xc9cb0; neg eax; pop edi; pop esi; ret; 
0x000c9cd5: jg 0xc9cd9; neg eax; ret; 
0x000cd20a: jg 0xcd230; add esp, 8; pop ebx; ret; 
0x000d8991: jg 0xd89b0; add esp, 0x14; pop ebx; pop esi; ret; 
0x000d8b82: jg 0xd8ba0; add esp, 4; pop ebx; pop esi; ret; 
0x000d8bf8: jg 0xd8c10; pop ebx; pop esi; pop edi; ret; 
0x000d8c46: jg 0xd8c60; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x000dea7c: jg 0xdea8d; test byte ptr [ebx - 0x7d000000], ch; ret 0x8904; 
0x000dfc52: jg 0xdfc54; add byte ptr [eax], al; mov edx, 0xfffa; cmove eax, edx; pop ebx; ret; 
0x000dfc82: jg 0xdfc84; add byte ptr [eax], al; mov edx, 0x7fffffff; pop ebx; cmove eax, edx; ret; 
0x000dfca4: jg 0xdfca6; add byte ptr [eax], al; mov edx, 0xfde8; pop ebx; cmove eax, edx; ret; 
0x000dfcbf: jg 0xdfcc1; add byte ptr [eax], al; mov edx, 0x7d00; pop ebx; cmove eax, edx; ret; 
0x000dfce1: jg 0xdfce3; add byte ptr [eax], al; mov edx, 0xfa; pop ebx; cmove eax, edx; ret; 
0x000dfc8a: jg 0xdfce7; cmove eax, edx; ret; 
0x000dfd08: jg 0xdfd0a; add byte ptr [eax], al; cmovne eax, edx; ret; 
0x000fdefd: jg 0xfdf0e; inc esp; ret 0x8589; 
0x0011c532: jge 0x11c534; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00123eaf: jge 0x123eb2; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0013227d: jge 0x13228e; add byte ptr [ebx - 0x7f72e714], al; mov ch, 0x58; stc; call dword ptr [eax - 0x18]; 
0x0015bc26: jge 0x15bc25; jmp dword ptr [esi - 0x70]; 
0x0015e144: jge 0x15e0c9; les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x0015e46f: jge 0x15e4c6; std; jmp dword ptr [esi - 0x70]; 
0x0016bca6: jge 0x16bca4; jmp dword ptr [esi - 0x70]; 
0x001720bf: jge 0x1720a1; ljmp 0xf089:0x10c483ff; add esp, 4; pop ebx; pop esi; ret; 
0x001728e3: jge 0x1728e5; jb 0x1728f6; xchg esp, eax; ret; 
0x0019611f: jge 0x196121; add byte ptr [eax], al; lea eax, [edi - 0x10]; pop edi; ret; 
0x00196caf: jge 0x196cb1; add byte ptr [eax], al; mov eax, ecx; ret; 
0x00020f42: jge 0x20f14; add byte ptr [ebp + ebx - 0x7d], dh; in al, dx; or al, 0xff; jne 0x20f19; call dword ptr [ebp - 0x38]; 
0x00027c45: jge 0x27c47; add byte ptr [ebx - 0x72c7db84], cl; xchg eax, esp; jo 0x27c4a; call dword ptr [eax - 0x73]; 
0x00027c68: jge 0x27c6a; add byte ptr [ebx - 0x72c7db84], cl; xchg eax, esp; jo 0x27c6d; call dword ptr [eax - 0x73]; 
0x000535c9: jge 0x53553; add byte ptr [edi], cl; test dword ptr [esi - 0x9fffffc], ebp; ret 0xf50; 
0x000ad92d: jge 0x5e69ec7a; pop ebx; ret; 
0x000ad9b1: jge 0x5e69f0fe; pop ebx; ret; 
0x000adac1: jge 0x5e69fa0e; pop ebx; ret; 
0x00076a35: jge 0x76a30; call dword ptr [eax - 0x73]; 
0x0007759f: jge 0x7759a; call dword ptr [eax - 0x73]; 
0x00078bc6: jge 0x78bc1; call dword ptr [eax - 0x73]; 
0x00078be2: jge 0x78bdd; call dword ptr [eax - 0x73]; 
0x0007a796: jge 0x7a791; call dword ptr [eax - 0x18]; 
0x0007a7b5: jge 0x7a7b0; call dword ptr [eax - 0x18]; 
0x0008139b: jge 0x81396; call dword ptr [eax - 0x73]; 
0x00081f7c: jge 0x81fbc; stc; call dword ptr [eax + 0x6a]; 
0x000a0363: jge 0x830a29dd; ret; 
0x000a5d26: jge 0x85196c76; mov al, byte ptr [0x5f000001]; pop ebx; ret; 
0x000ad407: jge 0x8519e38c; aas; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00087c15: jge 0x87c11; dec dword ptr [ebx - 0x7872dbc4]; movsb byte ptr es:[edi], byte ptr [esi]; jg 0x87c19; call dword ptr [eax + 0x68]; 
0x00087c37: jge 0x87c33; dec dword ptr [ebx - 0x7972dbcc]; xchg esp, eax; jg 0x87c3b; call dword ptr [eax - 0x73]; 
0x00087c59: jge 0x87c55; dec dword ptr [ebx - 0x7972dbcc]; movsb byte ptr es:[edi], byte ptr [esi]; jg 0x87c5d; call dword ptr [eax - 0x73]; 
0x00087c7b: jge 0x87c77; dec dword ptr [ebx - 0x7872dbc4]; movsb byte ptr es:[edi], byte ptr [esi]; jg 0x87c7f; call dword ptr [eax + 0x68]; 
0x0008c02a: jge 0x8c045; add byte ptr [edi], cl; xchg ebp, eax; ret 0xe2c1; 
0x0008c13c: jge 0x8c157; add byte ptr [edi], cl; xchg ebp, eax; ret 0xe2c1; 
0x0008c98a: jge 0x8c9a5; add byte ptr [edi], cl; xchg ebp, eax; ret 0xe2c1; 
0x0008caa2: jge 0x8cabd; add byte ptr [edi], cl; xchg ebp, eax; ret 0xe2c1; 
0x00090ad5: jge 0x90af0; pop ebx; pop esi; mov dword ptr [ecx + 0x10], eax; mov dword ptr [edx + 0x3adc], ecx; ret; 
0x0009478c: jge 0x94796; add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x0009af65: jge 0x9af69; lea edx, [edx - 0x17c220]; cmovne eax, edx; ret; 
0x0009b075: jge 0x9b079; lea edx, [edx - 0x187850]; cmovne eax, edx; ret; 
0x0009b425: jge 0x9b429; lea edx, [edx - 0x179f20]; cmovne eax, edx; ret; 
0x0009b4b5: jge 0x9b4b9; lea edx, [edx - 0x186000]; cmovne eax, edx; ret; 
0x0009c185: jge 0x9c189; lea edx, [edx - 0x183480]; cmovne eax, edx; ret; 
0x0009c1d5: jge 0x9c1d9; lea edx, [edx - 0x181c10]; cmovne eax, edx; ret; 
0x000b5ac2: jge 0xb5ac6; cmovne eax, edx; ret; 
0x000be96f: jge 0xbe9c1; pop es; add byte ptr [ebx - 0x72cfdb84], cl; xchg dword ptr [edi + edx*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x000d839e: jge 0xd8394; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x000d996e: jge 0xd9944; mov eax, dword ptr [ebp - 0x30]; push esi; call eax; 
0x000d9bae: jge 0xd9b84; mov eax, dword ptr [ebp - 0x30]; push esi; call eax; 
0x000dfcc5: jge 0xdfcc7; add byte ptr [ebx + 0xf], bl; inc esp; ret 0xb8c3; 
0x000fb121: jge 0xfb0a6; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x000fc23f: jge 0xfc278; dec dword ptr [ebx - 0x7872dbc4]; dec esp; sahf; stc; call dword ptr [eax - 0x73]; 
0x00101472: jl 0x101498; adc byte ptr [ebp - 0x6615b79], cl; call dword ptr [eax - 0x73]; 
0x00102582: jl 0x1025a8; adc byte ptr [ebp - 0x6614f79], cl; call dword ptr [eax - 0x73]; 
0x001027ad: jl 0x1027d3; adc byte ptr [ebp - 0x6617779], cl; call dword ptr [eax - 0x73]; 
0x001028b0: jl 0x1028d6; adc byte ptr [ebp - 0x6615b79], cl; call dword ptr [eax - 0x73]; 
0x00102a93: jl 0x102af0; pop esi; pop edi; pop ebp; ret; 
0x001092ab: jl 0x1092d1; inc eax; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00109457: jl 0x1094b4; pop esi; pop edi; pop ebp; ret; 
0x001095c7: jl 0x109624; pop esi; pop edi; pop ebp; ret; 
0x0010a401: jl 0x10a427; cmp al, 0xb8; mov word ptr [eax], es; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010b2e6: jl 0x10b30c; xor byte ptr [ebp - 0x6b59779], cl; call dword ptr [eax - 0x18]; 
0x0010e81b: jl 0x10e878; pop esi; pop edi; pop ebp; ret; 
0x00111a7b: jl 0x111aa1; sbb al, 0xc1; cli; pop ds; call dword ptr gs:[0x10]; 
0x0011fab6: jl 0x11fa41; push esi; add al, 0x89; ret 0xe8c1; 
0x0011fc5a: jl 0x11fbe5; push esi; add al, 0x89; ret 0xe8c1; 
0x0011fe1a: jl 0x11fda5; push esi; add al, 0x89; ret 0xe8c1; 
0x00120066: jl 0x11fff1; push esi; add al, 0x89; ret 0xe8c1; 
0x00120185: jl 0x120110; push esi; add al, 0x89; ret 0xe8c1; 
0x00120180: jl 0x120178; dec dword ptr [ebx + 0x56897c40]; add al, 0x89; ret 0xe8c1; 
0x0012028c: jl 0x120217; push esi; add al, 0x89; ret 0xe8c1; 
0x001202ec: jl 0x120277; push esi; add al, 0x89; ret 0xe8c1; 
0x0012075e: jl 0x1206e9; push esi; add al, 0x89; ret 0xe8c1; 
0x001212ec: jl 0x121312; sub byte ptr [eax + 0x78], bh; mov dword ptr [ecx], ebx; int 0x80; 
0x00121ff8: jl 0x121ffb; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00123128: jl 0x123185; pop esi; pop edi; pop ebp; ret; 
0x00124809: jl 0x12482f; xor al, 0xb8; sbb eax, 0xf000000; inc ebp; ret; 
0x00125a87: jl 0x125aad; xor al, 0x89; inc esp; and al, 8; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00125d12: jl 0x125d6f; pop esi; pop edi; pop ebp; ret; 
0x00126704: jl 0x12672a; xor al, 0xb8; jne 0x12670a; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001268b5: jl 0x126912; pop esi; pop edi; pop ebp; ret; 
0x00135c75: jl 0x135c9b; and bh, al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0x13341], cl; jmp dword ptr [ebp - 0x5f]; 
0x001365a5: jl 0x1365cb; xor bh, al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0x13341], cl; jmp dword ptr [ebp - 0x5f]; 
0x001391da: jl 0x139165; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x0013a30e: jl 0x13a334; sbb al, 0x8d; xchg eax, esp; movsd dword ptr es:[edi], dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x0013a599: jl 0x13a5bf; sbb al, 0x8d; xchg dword ptr [eax], eax; cmpsb byte ptr [esi], byte ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x0013a766: jl 0x13a78c; sbb al, 0x8d; xchg dword ptr [ebx + ebx*2 - 7], ebx; call dword ptr [eax - 0x73]; 
0x0013cc29: jl 0x13cc4f; sub byte ptr [ebp - 0x658f379], cl; call dword ptr [eax - 0x73]; 
0x00140839: jl 0x14085f; sub al, 0x83; ret 0x8902; 
0x001408a9: jl 0x1408cf; or byte ptr [eax + 0xf000000], al; inc edx; ret 0x8dc3; 
0x001476a2: jl 0x1476c8; or al, 0x8d; xchg dword ptr [eax], ebx; stosb byte ptr es:[edi], al; stc; call dword ptr [eax - 0x73]; 
0x0014c690: jl 0x14c6b6; or al, 0x8d; xchg dword ptr [ebx + ebp*4 - 7], ebx; call dword ptr [eax - 0x73]; 
0x00152392: jl 0x1523b8; adc byte ptr [ebp - 0x6d5a479], cl; call dword ptr [eax + 0x53]; 
0x00152b13: jl 0x152b15; add byte ptr [eax], al; add byte ptr [ebx + 0x5f5e04c4], al; ret; 
0x00155251: jl 0x155277; xor al, 0x8d; xchg dword ptr [edi + ebp*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x00158a4a: jl 0x158a70; inc eax; mov ecx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [ecx + 8]; 
0x0015be09: jl 0x15be2f; and byte ptr [edi], cl; xchg esp, eax; ret; 
0x00160f47: jl 0x160efa; stc; call dword ptr [eax - 0x73]; 
0x001674f7: jl 0x167482; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x00168d8b: jl 0x168db1; sbb byte ptr [ebp + 0x39183844], cl; ret 0x860f; 
0x0016bd36: jl 0x16bd34; jmp dword ptr [esi - 0x70]; 
0x0016c527: jl 0x16c4ac; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0016e99f: jl 0x16e9a4; add byte ptr [eax], al; mov dword ptr [ebx + 8], eax; add esp, 0x28; pop ebx; ret; 
0x0016e9f1: jl 0x16e9f6; add byte ptr [eax], al; mov dword ptr [ebx + 8], eax; add esp, 0x28; pop ebx; ret; 
0x0016eda8: jl 0x16edad; add byte ptr [eax], al; mov dword ptr [ebx], eax; add esp, 0x28; pop ebx; ret; 
0x00172794: jl 0x1727ba; xor byte ptr [edi - 0x18], dl; or dword ptr [ecx], 0xfffffff1; jmp dword ptr [ebp - 0x75]; 
0x0017a3b6: jl 0x17a3dc; or byte ptr [eax + 0x75], bh; mov ebx, 3; call dword ptr gs:[0x10]; 
0x00196ff3: jl 0x197040; lea eax, [ecx + 0xa]; ret; 
0x00197003: jl 0x197040; lea eax, [ecx + 0xb]; ret; 
0x00196f6e: jl 0x197040; lea eax, [ecx + 0xc]; ret; 
0x00197013: jl 0x197040; lea eax, [ecx + 0xd]; ret; 
0x00197023: jl 0x197040; lea eax, [ecx + 0xe]; ret; 
0x00197033: jl 0x197040; lea eax, [ecx + 0xf]; ret; 
0x00196f83: jl 0x197040; lea eax, [ecx + 1]; ret; 
0x00196f93: jl 0x197040; lea eax, [ecx + 2]; ret; 
0x00196fa3: jl 0x197040; lea eax, [ecx + 3]; ret; 
0x00196f0b: jl 0x197040; lea eax, [ecx + 4]; ret; 
0x00196fb3: jl 0x197040; lea eax, [ecx + 5]; ret; 
0x00196fc3: jl 0x197040; lea eax, [ecx + 6]; ret; 
0x00196fd3: jl 0x197040; lea eax, [ecx + 7]; ret; 
0x00196f44: jl 0x197040; lea eax, [ecx + 8]; ret; 
0x00196fe3: jl 0x197040; lea eax, [ecx + 9]; ret; 
0x00196e21: jl 0x197040; mov eax, ecx; ret; 
0x00197ab2: jl 0x197ab4; add byte ptr [eax], al; mov eax, 0xc; pop edi; ret; 
0x0019909a: jl 0x199025; ret 0xd285; 
0x00199e5e: jl 0x199de3; add al, 0x83; ret; 
0x00199e81: jl 0x199ea7; adc byte ptr [ecx], ch; ret; 
0x0019a695: jl 0x19a619; add al, 0x83; ret 0xd304; 
0x0019aa8d: jl 0x19aab3; adc byte ptr [ebx - 0x76cfdb8c], cl; ret 0x448b; 
0x0019b6a7: jl 0x19b6e2; ret 0x860f; 
0x0019c54b: jl 0x19c571; sbb al, 0xf; xchg ebp, eax; ret 0xd789; 
0x0019e3a6: jl 0x19e331; ret 0xd285; 
0x0019f020: jl 0x19efa5; add al, 0x83; ret; 
0x0019f043: jl 0x19f069; adc al, 0x29; ret; 
0x001212fd: jl 0x216d0; je 0x121306; ret; 
0x0012371a: jl 0x216d0; ret; 
0x000217db: jl 0x21838; pop esi; pop edi; pop ebp; ret; 
0x00022677: jl 0x226e7; stc; call dword ptr [eax - 0x73]; 
0x00022693: jl 0x22703; stc; call dword ptr [eax - 0x73]; 
0x00025869: jl 0x2588f; sub byte ptr [ebp - 0x6955f79], cl; call dword ptr [eax - 0x73]; 
0x000258ff: jl 0x25925; sub byte ptr [ebp - 0x6955f79], cl; call dword ptr [eax - 0x73]; 
0x00025927: jl 0x2594d; sub byte ptr [ebp - 0x6955f79], cl; call dword ptr [eax + 0x68]; 
0x0002594a: jl 0x25970; sub byte ptr [ebp - 0x6955f79], cl; call dword ptr [eax + 0x68]; 
0x0002595c: jl 0x25982; sub byte ptr [ebp - 0x6955f79], cl; call dword ptr [eax - 0x73]; 
0x000267bb: jl 0x26818; pop esi; pop edi; pop ebp; ret; 
0x00026be9: jl 0x26c46; pop esi; pop edi; pop ebp; jmp eax; 
0x00026f1f: jl 0x26f45; cmp al, 0x8d; xchg esp, edi; jo 0x26f20; call dword ptr [eax - 0x73]; 
0x00026f42: jl 0x26f68; cmp al, 0x8d; xchg esp, edi; jo 0x26f43; call dword ptr [eax - 0x73]; 
0x00026f65: jl 0x26f8b; cmp al, 0x8d; xchg esp, edi; jo 0x26f66; call dword ptr [eax - 0x73]; 
0x00026fce: jl 0x26ff4; cmp al, 0x8d; xchg esp, edi; jo 0x26fcf; call dword ptr [eax - 0x73]; 
0x00027026: jl 0x2704c; cmp al, 0x8d; xchg esp, edi; jo 0x27027; call dword ptr [eax - 0x73]; 
0x00027049: jl 0x2706f; cmp al, 0x8d; xchg esp, edi; jo 0x2704a; call dword ptr [eax - 0x73]; 
0x000272c3: jl 0x27320; pop esi; pop edi; pop ebp; ret; 
0x000276ac: jl 0x276d2; cmp byte ptr [ebp - 0x6963f79], cl; call dword ptr [eax - 0x73]; 
0x00027686: jl 0x276e3; pop esi; pop edi; pop ebp; jmp eax; 
0x00027a58: jl 0x27a7e; cmp byte ptr [ebp - 0x6963f79], cl; call dword ptr [eax - 0x73]; 
0x00027a7b: jl 0x27aa1; cmp byte ptr [ebp - 0x68f1f79], cl; call dword ptr [eax - 0x73]; 
0x00027aa3: jl 0x27ac9; cmp byte ptr [ebp - 0x68f1f79], cl; call dword ptr [eax - 0x73]; 
0x00027ba1: jl 0x27bc7; cmp byte ptr [ebp - 0x6963f79], cl; call dword ptr [eax + 0x68]; 
0x00027bce: jl 0x27bf4; cmp byte ptr [ebp - 0x68f1f79], cl; call dword ptr [eax - 0x73]; 
0x00027bf1: jl 0x27c17; cmp byte ptr [ebp - 0x6963f79], cl; call dword ptr [eax - 0x73]; 
0x00027c14: jl 0x27c3a; cmp byte ptr [ebp - 0x6963f79], cl; call dword ptr [eax + 0x68]; 
0x00027c26: jl 0x27c4c; cmp byte ptr [ebp - 0x68f1f79], cl; call dword ptr [eax - 0x73]; 
0x00027c49: jl 0x27c6f; cmp byte ptr [ebp - 0x68f1f79], cl; call dword ptr [eax - 0x73]; 
0x00027c6c: jl 0x27c92; cmp byte ptr [ebp - 0x68f1f79], cl; call dword ptr [eax - 0x73]; 
0x0002951b: jl 0x29578; pop esi; pop edi; pop ebp; ret; 
0x00029982: jl 0x299df; pop esi; pop edi; pop ebp; jmp eax; 
0x0002a483: jl 0x2a4a9; cmp byte ptr [ebp - 0x696df79], cl; call dword ptr [eax - 0x73]; 
0x0002a5aa: jl 0x2a5d0; cmp byte ptr [ebp - 0x6971f79], cl; call dword ptr [eax - 0x73]; 
0x0002a5cd: jl 0x2a5f3; cmp byte ptr [ebp - 0x696df79], cl; call dword ptr [eax - 0x73]; 
0x0002a5f0: jl 0x2a616; cmp byte ptr [ebp - 0x696df79], cl; call dword ptr [eax - 0x73]; 
0x0002a613: jl 0x2a639; cmp byte ptr [ebp - 0x696df79], cl; call dword ptr [eax + 0x68]; 
0x0002a636: jl 0x2a65c; cmp byte ptr [ebp - 0x6971f79], cl; call dword ptr [eax - 0x73]; 
0x0002a660: jl 0x2a686; cmp byte ptr [ebp - 0x696df79], cl; call dword ptr [eax + 0x68]; 
0x0002a677: jl 0x2a69d; cmp byte ptr [ebp - 0x6971f79], cl; call dword ptr [eax - 0x73]; 
0x0002a91b: jl 0x2a978; pop esi; pop edi; pop ebp; ret; 
0x0002adb5: jl 0x2ae12; pop esi; pop edi; pop ebp; jmp eax; 
0x0002b428: jl 0x2b485; pop esi; pop edi; pop ebp; ret; 
0x0002b6e7: jl 0x2b70d; add al, 0x83; ret 0x8d01; 
0x0002da3e: jl 0x2d9c5; add byte ptr [0x748dd375], al; add dh, dh; ret 0x7503; 
0x0003540d: jl 0x35433; sbb al, 0x8b; push ebx; or byte ptr [ecx - 0x50f0fbb9], cl; ret 0x6c8b; 
0x00037438: jl 0x3745e; adc al, ch; mov ecx, 0x810013a9; ret; 
0x00038515: jl 0x3853b; add al, 0; je 0x38530; lea ecx, [eax + 1]; mov dword ptr [edx + 0x68], ecx; ret; 
0x0003ab9e: jl 0x3abc4; or al, 0x89; add dword ptr [ecx + 0x45189c8], ecx; ret 4; 
0x0003abbe: jl 0x3abe4; or al, 0x89; add dword ptr [ecx + 0x45189c8], ecx; ret 4; 
0x0003eea4: jl 0x3eeca; adc al, 0x8d; xchg dword ptr [esi + esi*2 - 7], ebx; call dword ptr [eax + 0x68]; 
0x0003eec7: jl 0x3eeed; adc al, 0x8d; xchg dword ptr [esi + esi*2 - 7], ebx; call dword ptr [eax + 0x68]; 
0x0004086a: jl 0x40890; sub al, 0x8d; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x000413d6: jl 0x413fc; sub al, 0x8d; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x000413f9: jl 0x4141f; sub al, 0x8d; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x0004141c: jl 0x41442; sub al, 0x8d; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x0004143f: jl 0x41465; sub al, 0x8d; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x00041434: jl 0x41466; stc; call dword ptr [eax - 0x18]; 
0x00041462: jl 0x41488; sub al, 0x8d; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x0004148c: jl 0x414b2; sub al, 0x8d; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x000414bb: jl 0x414e1; sub al, 0x8d; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x0004151b: jl 0x41541; sub al, 0x8d; xchg dword ptr [esi + esi*2 - 7], ebx; call dword ptr [eax - 0x73]; 
0x0004153e: jl 0x41564; sub al, 0x8d; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x00041561: jl 0x41587; sub al, 0x8d; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x00041594: jl 0x415ba; sub al, 0x8d; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x000415d8: jl 0x415fe; sub al, 0x8d; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x000415fb: jl 0x41621; sub al, 0x8d; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x00041f44: jl 0x41f6a; adc al, 0x8d; xchg dword ptr [esi + esi*2 - 7], ebx; call dword ptr [eax + 0x68]; 
0x00041f67: jl 0x41f8d; adc al, 0x8d; xchg dword ptr [esi + esi*2 - 7], ebx; call dword ptr [eax + 0x68]; 
0x00044624: jl 0x44656; stc; call dword ptr [eax - 0x18]; 
0x000447b7: jl 0x447dd; and al, 0x8d; xchg dword ptr [esi + esi*2 - 7], ebx; call dword ptr [eax - 0x73]; 
0x00044ce7: jl 0x44d0d; cmp byte ptr [edi], cl; xchg ebp, eax; ret 0x5409; 
0x00045164: jl 0x4518a; adc al, 0x8d; xchg dword ptr [esi + esi*2 - 7], ebx; call dword ptr [eax + 0x68]; 
0x00045187: jl 0x451ad; adc al, 0x8d; xchg dword ptr [esi + esi*2 - 7], ebx; call dword ptr [eax + 0x68]; 
0x0004795d: jl 0x4798f; stc; call dword ptr [eax - 0x18]; 
0x000479d1: jl 0x479f7; and al, 0x8d; xchg dword ptr [esi + esi*2 - 7], ebx; call dword ptr [eax - 0x73]; 
0x0004dda4: jl 0x4ddca; adc al, 0x8d; xchg dword ptr [esi + esi*2 - 7], ebx; call dword ptr [eax + 0x68]; 
0x0004ddc7: jl 0x4dded; adc al, 0x8d; xchg dword ptr [esi + esi*2 - 7], ebx; call dword ptr [eax + 0x68]; 
0x00050fe2: jl 0x51014; stc; call dword ptr [eax - 0x18]; 
0x00054b68: jl 0x54b23; stc; call dword ptr [eax + 0x57]; 
0x00055391: jl 0x553b7; adc byte ptr [edi], cl; mov dh, 0x5f; or al, 0xf6; ret; 
0x000588af: jl 0x5890c; pop esi; pop edi; pop ebp; ret; 
0x00066012: jl 0x66038; sub al, 0x8d; xchg dword ptr [eax], edi; jns 0x66013; call dword ptr [eax - 0x73]; 
0x0006b08a: jl 0x6b0b0; sub al, 0x8d; xchg dword ptr [eax], edi; jns 0x6b08b; call dword ptr [eax - 0x73]; 
0x0006eaa0: jl 0x6eac6; push eax; push edi; push esi; push ebp; call dword ptr [ebx + 0x1c]; 
0x00070e5d: jl 0x70eba; pop esi; pop edi; pop ebp; ret; 
0x00072a89: jl 0x72a84; jmp dword ptr [ebp - 0x75]; 
0x00073d20: jl 0x73d46; cmp byte ptr [edi - 0x18], dl; cmpsd dword ptr [esi], dword ptr es:[edi]; ret 0; 
0x0007be5c: jl 0x7be77; add byte ptr [eax], al; cmp eax, 1; jg 0x7be70; ret; 
0x0007c2c3: jl 0x7c2e9; and dh, al; add al, 7; add byte ptr [ecx - 0x14ec7407], cl; ret; 
0x000819c0: jl 0x819c4; add byte ptr [eax], al; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x000827c5: jl 0x827eb; add al, 1; je 0x827d8; mov eax, dword ptr gs:[8]; mov byte ptr [eax + 0x4fe], 0; ret; 
0x000827f1: jl 0x827f3; add byte ptr [eax], al; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x80], eax; ret; 
0x00082828: jl 0x8282a; add byte ptr [eax], al; mov dword ptr [eax + 0xc], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x00082831: jl 0x82833; add byte ptr [eax], al; ret; 
0x0008314a: jl 0x8314c; add byte ptr [eax], al; ret; 
0x00084bd9: jl 0x84bff; adc byte ptr [eax], ah; je 0x84be8; add esp, 8; pop ebx; ret; 
0x0008548d: jl 0x854b3; add al, 0x89; ret 0xe183; 
0x00085531: jl 0x85557; add al, 0x89; ret 0xe183; 
0x00085c66: jl 0x85cc3; pop esi; pop edi; pop ebp; ret; 
0x000862b1: jl 0x8630e; pop esi; pop edi; pop ebp; ret; 
0x00086a3d: jl 0x86a43; add byte ptr [eax], al; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x00090e9f: jl 0x90ed2; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x00091204: jl 0x911f8; je 0x91213; xor eax, eax; pop ebx; ret; 
0x0009124c: jl 0x91240; mov edx, 0; cmovne eax, edx; ret; 
0x00091cda: jl 0x91d00; or al, 0x8d; xchg dword ptr [esp + eax*4], edx; stc; call dword ptr [eax - 0x73]; 
0x00096e98: jl 0x96ebe; adc al, 0x8d; inc edx; jmp dword ptr [ecx]; 
0x00096f22: jl 0x96f48; and bl, ch; ret 0x548b; 
0x00099a2c: jl 0x99a52; sub al, 0x8d; xchg dword ptr [ebx + edx*4 - 7], ecx; dec dword ptr [ebp - 0x6bf3a69]; call dword ptr [eax - 0x73]; 
0x00099a50: jl 0x99a76; sub al, 0x8d; xchg dword ptr [ebx + edx*4 - 7], ecx; dec dword ptr [ebp - 0x6bf3a69]; call dword ptr [eax - 0x73]; 
0x0009cd1d: jl 0x9cd43; and byte ptr [ebp - 0x107c00bf], cl; add dword ptr [ecx], eax; ret; 
0x0009d1d6: jl 0x9d1fc; sbb byte ptr [ebx - 0x76ebdbb4], cl; ret 0xf901; 
0x000a1dc1: jl 0xa1de7; sbb byte ptr [edi], cl; mov esi, 0xfc53906; xchg esp, eax; ret 0xc739; 
0x000ad5d0: jl 0xad5d8; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000b3fc8: jl 0xb4000; add eax, ecx; ret; 
0x000b3fd8: jl 0xb4000; lea eax, [ecx + eax + 0x10]; ret; 
0x000b3fe8: jl 0xb4000; lea eax, [ecx + eax + 0x20]; ret; 
0x000b3ff8: jl 0xb4000; lea eax, [ecx + eax + 0x30]; ret; 
0x000b61fb: jl 0xb6186; fdiv st(7); ret; 
0x000b76b5: jl 0xb76db; pop eax; add dword ptr [edi], ecx; xchg esp, eax; ret 0x7c83; 
0x000b7bc5: jl 0xb7beb; dec eax; add dword ptr [edi], ecx; xchg esp, eax; ret 0x7c83; 
0x000b9534: jl 0xb955a; adc al, 0x8d; xchg dword ptr [esi + esi*2 - 7], ebx; call dword ptr [eax + 0x68]; 
0x000b9557: jl 0xb957d; adc al, 0x8d; xchg dword ptr [esi + esi*2 - 7], ebx; call dword ptr [eax + 0x68]; 
0x000b9840: jl 0xb97c9; add al, 0x81; ret 0; 
0x000baccc: jl 0xbacf2; xor byte ptr [ebp - 0x6690b79], cl; call dword ptr [eax - 0x73]; 
0x000bb60a: jl 0xbb630; cmp byte ptr [edi], cl; xchg edi, eax; ret; 
0x000bba21: jl 0xbba47; xor byte ptr [ebp - 0x6690b79], cl; call dword ptr [eax - 0x73]; 
0x000bba44: jl 0xbba6a; xor byte ptr [ebp - 0x6690b79], cl; call dword ptr [eax - 0x73]; 
0x000bba67: jl 0xbba8d; xor byte ptr [ebp - 0x6690b79], cl; call dword ptr [eax - 0x73]; 
0x000bba8a: jl 0xbbab0; xor byte ptr [ebp - 0x6690b79], cl; call dword ptr [eax - 0x73]; 
0x000bbaad: jl 0xbbad3; xor byte ptr [ebp - 0x6690b79], cl; call dword ptr [eax - 0x73]; 
0x000bbad0: jl 0xbbaf6; xor byte ptr [ebp - 0x6690b79], cl; call dword ptr [eax - 0x73]; 
0x000bbafa: jl 0xbbb20; xor byte ptr [ebp - 0x6690b79], cl; call dword ptr [eax - 0x73]; 
0x000bbb1d: jl 0xbbb43; xor byte ptr [ebp - 0x689a379], cl; call dword ptr [eax - 0x73]; 
0x000bbb40: jl 0xbbb66; xor byte ptr [ebp - 0x6690b79], cl; call dword ptr [eax - 0x73]; 
0x000bbb63: jl 0xbbb89; xor byte ptr [ebp - 0x6690b79], cl; call dword ptr [eax - 0x73]; 
0x000bbb86: jl 0xbbbac; xor byte ptr [ebp - 0x6690b79], cl; call dword ptr [eax - 0x73]; 
0x000bbba9: jl 0xbbbcf; xor byte ptr [ebp - 0x6690b79], cl; call dword ptr [eax - 0x73]; 
0x000bbbcc: jl 0xbbbf2; xor byte ptr [ebp - 0x6690b79], cl; call dword ptr [eax - 0x73]; 
0x000bbbef: jl 0xbbc15; xor byte ptr [ebp - 0x6690b79], cl; call dword ptr [eax - 0x73]; 
0x000bbc12: jl 0xbbc38; xor byte ptr [ebp - 0x6690b79], cl; call dword ptr [eax - 0x73]; 
0x000bbc07: jl 0xbbc39; stc; call dword ptr [eax - 0x18]; 
0x000bbc35: jl 0xbbc5b; xor byte ptr [ebp - 0x6690b79], cl; call dword ptr [eax - 0x73]; 
0x000bc0a7: jl 0xbc0cd; cmp byte ptr [edi], cl; xchg ebp, eax; ret 0x5409; 
0x000bc4ac: jl 0xbc4d2; adc al, 0x8d; xchg dword ptr [esi + esi*2 - 7], ebx; call dword ptr [eax + 0x68]; 
0x000bc4cf: jl 0xbc4f5; adc al, 0x8d; xchg dword ptr [esi + esi*2 - 7], ebx; call dword ptr [eax + 0x68]; 
0x000be41a: jl 0xbe440; cmp byte ptr [edi], cl; xchg edi, eax; ret; 
0x000be855: jl 0xbe87b; xor byte ptr [ebp - 0x668f379], cl; call dword ptr [eax - 0x73]; 
0x000be89b: jl 0xbe8c1; xor byte ptr [ebp - 0x668f379], cl; call dword ptr [eax - 0x73]; 
0x000be8b3: jl 0xbe8e5; stc; call dword ptr [eax - 0x18]; 
0x000be927: jl 0xbe94d; xor byte ptr [ebp - 0x668f379], cl; call dword ptr [eax - 0x73]; 
0x000be974: jl 0xbe99a; xor byte ptr [ebp - 0x668f379], cl; call dword ptr [eax - 0x73]; 
0x000be9dd: jl 0xbea03; xor byte ptr [ebp - 0x668f379], cl; call dword ptr [eax - 0x73]; 
0x000bf1a4: jl 0xbf1ca; adc al, 0x8d; xchg dword ptr [esi + esi*2 - 7], ebx; call dword ptr [eax + 0x68]; 
0x000bf1c7: jl 0xbf1ed; adc al, 0x8d; xchg dword ptr [esi + esi*2 - 7], ebx; call dword ptr [eax + 0x68]; 
0x000bf4a7: jl 0xbf430; add al, 0x81; ret 0; 
0x000bfd72: jl 0xbfd98; sub al, 0x8d; xchg dword ptr [ecx + edi*4 - 7], ebx; call dword ptr [eax + 0x56]; 
0x000c07b0: jl 0xc07d6; and al, 0x8d; xchg dword ptr [edi + edx*4], esp; stc; call dword ptr [eax - 0x73]; 
0x000c14c6: jl 0xc14ec; and al, 0x8d; xchg dword ptr [esi + esi*2 - 7], ebx; call dword ptr [eax - 0x73]; 
0x000c14e9: jl 0xc150f; and al, 0x8d; xchg dword ptr [edi + edx*4], esp; stc; call dword ptr [eax - 0x73]; 
0x000c150c: jl 0xc1532; and al, 0x8d; xchg dword ptr [edi + edx*4], esp; stc; call dword ptr [eax - 0x73]; 
0x000c152f: jl 0xc1555; and al, 0x8d; xchg dword ptr [edi + edx*4], esp; stc; call dword ptr [eax - 0x73]; 
0x000c155e: jl 0xc1584; and al, 0x8d; xchg dword ptr [edi + edx*4], esp; stc; call dword ptr [eax - 0x73]; 
0x000c1581: jl 0xc15a7; and al, 0x8d; xchg dword ptr [edi + edx*4], esp; stc; call dword ptr [eax - 0x73]; 
0x000c1576: jl 0xc15a8; stc; call dword ptr [eax - 0x18]; 
0x000c15a4: jl 0xc15ca; and al, 0x8d; xchg dword ptr [edi + edx*4], esp; stc; call dword ptr [eax - 0x73]; 
0x000c15c7: jl 0xc15ed; and al, 0x8d; xchg dword ptr [edi + edx*4], esp; stc; call dword ptr [eax - 0x73]; 
0x000c15ea: jl 0xc1610; and al, 0x8d; xchg dword ptr [edi + edx*4], esp; stc; call dword ptr [eax - 0x73]; 
0x000c160d: jl 0xc1633; and al, 0x8d; xchg dword ptr [edi + edx*4], esp; stc; call dword ptr [eax - 0x73]; 
0x000c1639: jl 0xc165f; and al, 0x8d; xchg dword ptr [edi + edx*4], esp; stc; call dword ptr [eax - 0x73]; 
0x000c165c: jl 0xc1682; and al, 0x8d; xchg dword ptr [edi + edx*4], esp; stc; call dword ptr [eax - 0x73]; 
0x000c167f: jl 0xc16a5; and al, 0x8d; xchg dword ptr [edi + edx*4], esp; stc; call dword ptr [eax - 0x73]; 
0x000c16a9: jl 0xc16cf; and al, 0x8d; xchg dword ptr [edi + edx*4], esp; stc; call dword ptr [eax - 0x73]; 
0x000c5d0c: jl 0xc5d32; adc al, 0x8d; xchg dword ptr [esi + esi*2 - 7], ebx; call dword ptr [eax + 0x68]; 
0x000c5d2f: jl 0xc5d55; adc al, 0x8d; xchg dword ptr [esi + esi*2 - 7], ebx; call dword ptr [eax + 0x68]; 
0x000c8c53: jl 0xc8c85; stc; call dword ptr [eax - 0x18]; 
0x000c9d20: jl 0xc9d2c; mov ecx, 1; pop ebx; pop esi; mov eax, ecx; ret; 
0x000c9f77: jl 0xc9efb; add al, 0; lea ecx, [eax + 1]; jne 0xc9f58; mov eax, ecx; ret; 
0x000cb00d: jl 0xcb033; push 0x246c8d51; insb byte ptr es:[edi], dx; push ebp; mov ecx, dword ptr [esp + 0x34]; call ecx; 
0x000cb04f: jl 0xcb0ac; pop esi; pop edi; pop ebp; ret; 
0x000cb17b: jl 0xcb1a1; insb byte ptr es:[edi], dx; push ebx; push ebp; mov eax, dword ptr [esp + 0x34]; call eax; 
0x000d26cd: jl 0xd26f3; sbb byte ptr [ebp - 0x666a379], cl; call dword ptr [eax - 0x73]; 
0x000d6eea: jl 0xd6f10; adc al, 1; je 0xd6ef8; add esp, 0xc; ret; 
0x000d6fca: jl 0xd6ff0; adc al, 1; je 0xd6fd8; add esp, 0xc; ret; 
0x000da5b8: jl 0xda5de; or byte ptr [ebp - 0x6666379], cl; call dword ptr [eax - 0x73]; 
0x000e59f8: jl 0xe5a1e; adc al, ch; stc; ret; 
0x000efb53: jl 0xefbb0; pop esi; pop edi; pop ebp; ret; 
0x000f108c: jl 0xf10e9; pop esi; pop edi; pop ebp; ret; 
0x000f43f0: jl 0xf4416; xor byte ptr [ebp - 0x6b78a79], cl; dec dword ptr [ebp - 0x6b7af71]; call dword ptr [eax - 0x77]; 
0x000f4680: jl 0xf46a6; xor byte ptr [ebp - 0x6d17879], cl; dec dword ptr [ebp - 0x6c15b71]; call dword ptr [eax - 0x17]; 
0x000fac1c: jl 0xfac42; adc al, 0x8d; xchg edi, ecx; dec eax; stc; call dword ptr [eax - 0x73]; 
0x000fc59f: jl 0xfc5c5; adc al, 0x8d; xchg dword ptr [ebx], eax; dec ecx; stc; call dword ptr [eax + 0x56]; 
0x0011fab1: jle 0x11faa9; dec dword ptr [ebx + 0x56897c40]; add al, 0x89; ret 0xe8c1; 
0x00123edb: jle 0x123ede; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001382c5: jle 0x1382b5; jmp dword ptr [ebp - 0x75]; 
0x0013bff2: jle 0x13c050; stc; call dword ptr [eax - 0x18]; 
0x001422f7: jle 0x1422fe; cmp byte ptr [ebx], 0x2e; je 0x142308; add esp, 8; pop ebx; ret; 
0x0014e8c0: jle 0x14e8bb; call dword ptr [eax - 0x18]; 
0x0014e8c0: jle 0x14e8bb; call dword ptr [eax - 0x18]; retf; bnd jmp dword ptr [esi - 0x70]; 
0x001593fe: jle 0x15946f; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x1c]; mov eax, dword ptr [edx + 4]; mov dword ptr [esp], edx; call dword ptr [eax + 0x10]; 
0x0015ee88: jle 0x15ee0d; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00162c4d: jle 0x162c60; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00166c1d: jle 0x166c33; pop ebx; pop esi; pop edi; ret; 
0x001693dc: jle 0x169443; stc; call dword ptr [eax - 0x18]; 
0x001743fe: jle 0x1743f9; call dword ptr [eax - 0x18]; 
0x001743fe: jle 0x1743f9; call dword ptr [eax - 0x18]; sub dword ptr [eax - 0x10], esi; jmp dword ptr [esi - 0x70]; 
0x0017ee5a: jle 0x17ee9c; clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017f066: jle 0x17f0a8; clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017f4fa: jle 0x17f4fc; movq qword ptr [edx], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00180e8a: jle 0x180ecc; clc; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x00181086: jle 0x1810c8; clc; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x00182faa: jle 0x182fec; clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001831b6: jle 0x1831f8; clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018364a: jle 0x18364c; movq qword ptr [edx], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018833a: jle 0x18837c; clc; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x00188536: jle 0x188578; clc; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x0018895a: jle 0x18895c; movq qword ptr [edx], xmm0; pop ebx; ret; 
0x00193bbb: jle 0x193c58; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0019769e: jle 0x197629; ret 0xe283; 
0x0004aa78: jle 0x4aa7a; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0004aab4: jle 0x4aab6; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0004ad05: jle 0x4ad07; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000520a8: jle 0x51fd5; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0005b354: jle 0x5b2e1; test dword ptr [edx + edi*8 - 1], esp; jmp dword ptr [ebp - 0x75]; 
0x000719fa: jle 0x719ff; or dword ptr [esi], 0x20; add esp, 4; pop ebx; pop esi; ret; 
0x000774ff: jle 0x7748c; inc ebp; rol byte ptr [ebx - 0x95f714], 0xff; aaa; call dword ptr [eax + 0xc]; 
0x0007a619: jle 0x7a614; call dword ptr [eax - 0x73]; 
0x0007a783: jle 0x7a77e; call dword ptr [eax - 0x73]; 
0x0007a7a2: jle 0x7a79d; call dword ptr [eax - 0x73]; 
0x0007a7c1: jle 0x7a7bc; call dword ptr [eax - 0x73]; 
0x0007b01d: jle 0x7b030; mov edx, dword ptr [edx + 0x58]; mov eax, dword ptr [edx + 0x1c]; sub eax, dword ptr [edx + 0x18]; sar eax, 2; ret; 
0x0007b14d: jle 0x7b160; mov edx, dword ptr [edx + 0x58]; mov eax, dword ptr [edx + 0x10]; sub eax, dword ptr [edx + 0xc]; sar eax, 2; ret; 
0x0007be13: jle 0x7be0e; call dword ptr [eax - 0x18]; 
0x0007e5a6: jle 0x7e5a1; call dword ptr [eax - 0x73]; 
0x0007e5c5: jle 0x7e5c0; call dword ptr [eax - 0x73]; 
0x00082dee: jle 0x82de9; call dword ptr [eax - 0x18]; 
0x0008308e: jle 0x83089; call dword ptr [eax - 0x18]; 
0x000831e0: jle 0x831db; call dword ptr [eax - 0x18]; 
0x00083262: jle 0x8325d; call dword ptr [eax - 0x18]; 
0x000837ae: jle 0x837a9; call dword ptr [eax - 0x18]; 
0x00083874: jle 0x8386f; call dword ptr [eax - 0x18]; 
0x000839fd: jle 0x839f8; call dword ptr [eax - 0x18]; 
0x00083c20: jle 0x83c1b; call dword ptr [eax - 0x18]; 
0x000848fc: jle 0x848f7; call dword ptr [eax - 0x18]; 
0x00084a0b: jle 0x84a06; call dword ptr [eax - 0x18]; 
0x00084d92: jle 0x84d8d; call dword ptr [eax - 0x18]; 
0x00085218: jle 0x85213; call dword ptr [eax - 0x18]; 
0x00085381: jle 0x8537c; call dword ptr [eax - 0x18]; 
0x000856f0: jle 0x856eb; call dword ptr [eax - 0x18]; 
0x0008580d: jle 0x85808; call dword ptr [eax - 0x18]; 
0x0008587b: jle 0x85876; call dword ptr [eax - 0x18]; 
0x000858e7: jle 0x858e2; call dword ptr [eax - 0x18]; 
0x00085a54: jle 0x85a4f; call dword ptr [eax - 0x18]; 
0x00085b2a: jle 0x85b25; call dword ptr [eax - 0x18]; 
0x00085e38: jle 0x85e33; call dword ptr [eax - 0x18]; 
0x00086146: jle 0x86141; call dword ptr [eax - 0x18]; 
0x00086496: jle 0x86491; call dword ptr [eax - 0x18]; 
0x00086be6: jle 0x86be1; call dword ptr [eax - 0x18]; 
0x00086c4e: jle 0x86c49; call dword ptr [eax - 0x18]; 
0x00087b79: jle 0x87b75; dec dword ptr [ebx - 0x7972dbcc]; xchg esp, eax; jg 0x87b7d; call dword ptr [eax - 0x73]; 
0x00087b9b: jle 0x87b97; dec dword ptr [ebx - 0x7872dbc4]; xchg esp, eax; jg 0x87b9f; call dword ptr [eax - 0x73]; 
0x00088dce: jle 0x88dc9; call dword ptr [eax - 0x18]; 
0x00089868: jle 0x89863; call dword ptr [eax - 0x18]; 
0x00089b06: jle 0x89b01; call dword ptr [eax - 0x18]; 
0x0008a318: jle 0x8a313; call dword ptr [eax - 0x18]; 
0x0008ac1f: jle 0x8ac1a; call dword ptr [eax - 0x18]; 
0x0008b401: jle 0x8b3fc; call dword ptr [eax - 0x18]; 
0x0008b401: jle 0x8b3fc; call dword ptr [eax - 0x18]; add bh, bh; jmp dword ptr [ebp - 0x39]; 
0x0008b8de: jle 0x8b8d9; call dword ptr [eax - 0x18]; 
0x0008bc5d: jle 0x8bc2a; pop ebx; mov eax, 0x16; pop esi; pop edi; ret; 
0x0008bdf2: jle 0x8bded; call dword ptr [eax - 0x18]; 
0x0008befe: jle 0x8bef9; call dword ptr [eax - 0x18]; 
0x0008c0f4: jle 0x8c0ef; call dword ptr [eax - 0x18]; 
0x0008c596: jle 0x8c591; call dword ptr [eax - 0x18]; 
0x0008c80f: jle 0x8c80a; call dword ptr [eax - 0x18]; 
0x0008ca20: jle 0x8ca1b; call dword ptr [eax - 0x18]; 
0x0008cb86: jle 0x8cb90; dec ecx; lcall 0, 0xce870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x6174; 
0x0008cec8: jle 0x8cec3; call dword ptr [eax - 0x18]; 
0x0008d042: jle 0x8d03d; call dword ptr [eax - 0x18]; 
0x0008d2c6: jle 0x8d2c1; call dword ptr [eax - 0x18]; 
0x0008d608: jle 0x8d603; call dword ptr [eax - 0x18]; 
0x0008e286: jle 0x8e281; call dword ptr [eax - 0x18]; 
0x0008e9fb: jle 0x8e9f6; call dword ptr [eax - 0x18]; 
0x0008f006: jle 0x8f001; call dword ptr [eax - 0x18]; 
0x0008f366: jle 0x8f361; call dword ptr [eax - 0x18]; 
0x00091af9: jle 0x91af4; call dword ptr [eax - 0x18]; 
0x0009b0b2: jle 0x9b0c4; cmovne eax, edx; ret; 
0x0009b532: jle 0x9b544; cmovne eax, edx; ret; 
0x0009b662: jle 0x9b674; cmovne eax, edx; ret; 
0x000abb9e: jle 0xabba9; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000bbaf6: jle 0xbbaff; add byte ptr [ebx - 0x72cfdb84], cl; xchg esp, esi; xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x000cf9b3: jle 0xcf9c5; add dword ptr [ebp + 0x76c98], ecx; add byte ptr [edi], cl; sahf; ret 0xd329; 
0x000dfd21: jle 0xdfd23; add byte ptr [eax], al; pop ebx; ret; 
0x000eab3c: jle 0xeab8b; add byte ptr [edi], cl; xchg ebp, eax; rol byte ptr [ebx - 0x3ffefb3c], 0x5b; pop esi; ret; 
0x000eb1be: jle 0xeb20f; inc dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x00105e01: jmp 0x105cb9; sub esp, 0xc; push dword ptr [ebp - 0x1a8]; mov eax, dword ptr [ebp - 0x1ac]; call dword ptr [eax + 0x10]; 
0x00108298: jmp 0x1081e8; lea esi, [esi]; sub esp, 0xc; mov eax, dword ptr [ebp - 0x19c]; push dword ptr [ebp - 0x198]; call dword ptr [eax + 0x14]; 
0x00108591: jmp 0x108449; sub esp, 0xc; push dword ptr [ebp - 0x198]; mov eax, dword ptr [ebp - 0x19c]; call dword ptr [eax + 0x10]; 
0x0010a7b2: jmp 0x10a790; lea esi, [esi]; mov edx, dword ptr [esp + 0xa8]; mov eax, 0x133; call dword ptr gs:[0x10]; 
0x001199c5: jmp 0x119730; lea esi, [esi]; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0011e290: jmp 0x11d830; lea esi, [esi]; ret; 
0x0011f4ff: jmp 0x11f501; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00120dd4: jmp 0x120dc6; dec dword ptr [ebp - 0x65d9f7d]; call dword ptr [eax - 0x73]; 
0x00120df0: jmp 0x120de2; dec dword ptr [ebp - 0x65d9f7d]; call dword ptr [eax - 0x73]; 
0x00120e0c: jmp 0x120dfe; dec dword ptr [ebp - 0x65d9f7d]; call dword ptr [eax - 0x73]; 
0x0012ca2c: jmp 0x12ca89; mov eax, ecx; pop esi; pop edi; ret; 
0x0012e4c9: jmp 0x12e44e; ret; 
0x00131ac2: jmp 0x131909; call 0x1339f0; nop; nop; endbr32; ret; 
0x001325fe: jmp 0x1325ee; jmp dword ptr [esi - 0x70]; 
0x00140e48: jmp 0x140e38; jmp dword ptr [esi - 0x70]; 
0x0014cf0c: jmp 0x14caf0; lea esi, [esi]; ret; 
0x00150941: jmp 0x150944; jne 0x1508d0; pop ebx; pop esi; ret; 
0x0014f3fa: jmp 0x151480; nop; xor eax, eax; ret; 
0x001571b4: jmp 0x1571df; ret; 
0x001593b8: jmp 0x15932f; lea esi, [esi]; sub esp, 0xc; mov eax, dword ptr [edx + 4]; push edx; call dword ptr [eax + 0x10]; 
0x0015ef02: jmp 0x15ee78; call 0x1339f0; nop; nop; endbr32; ret; 
0x0015f18e: jmp 0x15f1c2; sub esp, 8; mov eax, dword ptr [ebx + 4]; push esi; push ebx; call dword ptr [eax + 0x24]; 
0x0015f701: jmp 0x15f745; std; jmp dword ptr [esi - 0x70]; 
0x00160607: jmp 0x160608; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x001611c7: jmp 0x1611c8; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00162864: jmp 0x162865; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x00163c27: jmp 0x163b20; lea esi, [esi]; sub esp, 0xc; mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 0x14]; 
0x00163fc9: jmp 0x163fca; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x001646ec: jmp 0x1646ed; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00165e04: jmp 0x1655a0; lea esi, [esi]; mov eax, 1; ret; 
0x00166759: jmp 0x166703; call 0x1339f0; endbr32; ret; 
0x0016aaf4: jmp 0x16aaf5; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016d940: jmp 0x16d7d0; lea esi, [esi]; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0016efba: jmp 0x16ee77; nop; mov dword ptr [esp + 8], ecx; call eax; 
0x0016efb5: jmp 0x16efb6; add esp, 0x10; jmp 0x16ee77; nop; mov dword ptr [esp + 8], ecx; call eax; 
0x00171df4: jmp 0x171c50; mov ebx, dword ptr [esp]; ret; 
0x00171ec4: jmp 0x171ec5; jmp ptr [edx]; push dword ptr [esp + 0x1c]; call 0x3a730; add esp, 0x1c; ret; 
0x00172359: jmp 0x17235a; jmp ptr [ecx]; ret 0xc129; 
0x00173d12: jmp 0x173d13; jmp ptr [ecx]; ret 0xf989; 
0x0017ad82: jmp 0x17ad0d; inc edx; sti; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0017bec2: jmp 0x17be4d; inc edx; sti; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0017c51c: jmp 0x17c86e; mov eax, edx; pop edi; pop esi; pop ebx; ret; 
0x0017d33c: jmp 0x17d68e; mov eax, edx; pop edi; pop esi; pop ebx; ret; 
0x001932c7: jmp 0x1932c6; inc dword ptr [ecx + 0x96d36c3]; add byte ptr [ebx - 0x677d], cl; jmp dword ptr [ebp - 0x75]; 
0x00197b71: jmp 0x1980b0; lea esi, [esi]; lea esi, [esi]; xor eax, eax; ret; 
0x001888db: jmp 0x1c1b88e3; mov edi, dword ptr [esi]; jmp ebx; 
0x00099b02: jmp 0x1ea1e0b; cmovne eax, ecx; pop ebx; ret; 
0x00025861: jmp 0x25872; test dword ptr [esi - 0x75000000], edx; jl 0x2588f; sub byte ptr [ebp - 0x6955f79], cl; call dword ptr [eax - 0x73]; 
0x000263e9: jmp 0x26378; inc ebx; add ecx, dword ptr [edi]; dec ecx; ret; 
0x0002d8cb: jmp 0x2def0; pop ebx; ret; 
0x000b601a: jmp 0x2f0e11e; lea edx, [edx - 0x924b0]; cmovne eax, edx; ret; 
0x001043a9: jmp 0x2fa052e; rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x001043e9: jmp 0x2fa056e; rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x00104f2f: jmp 0x2fa10b4; rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x00104faf: jmp 0x2fa1134; rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x0003a1f2: jmp 0x39920; lea esi, [esi]; nop; xor eax, eax; ret; 
0x000b46fd: jmp 0x3edca04; rep stosd dword ptr es:[edi], eax; mov ecx, edx; rep stosb byte ptr es:[edi], al; pop edi; ret; 
0x000441d7: jmp 0x441e8; pushfd; ret; 
0x00038663: jmp 0x448d80f1; and al, 8; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x000386bb: jmp 0x448d8149; and al, 8; mov eax, 0x1a5; call dword ptr gs:[0x10]; 
0x00047347: jmp 0x47358; pushfd; ret; 
0x0004b13c: jmp 0x4b0c7; call 0x5f630e9e; ret; 
0x0004b6f8: jmp 0x4b683; pop ds; pop ebx; pop esi; pop edi; ret; 
0x0009365b: jmp 0x4c2daaeb; call dword ptr gs:[0x10]; 
0x000936d7: jmp 0x4c2dab67; call dword ptr gs:[0x10]; 
0x0004c7bc: jmp 0x4c747; call 0x5f63251e; ret; 
0x001578b3: jmp 0x5115721a; push 9; call 0x152d90; add esp, 0x1c; ret; 
0x000d4777: jmp 0x51465; call dword ptr [ecx + 0x50]; 
0x00053833: jmp 0x53834; jmp ptr [ecx]; ret 0xf189; 
0x00054744: jmp 0x54745; inc dword ptr [eax - 0xcf43]; jmp dword ptr [edi + 0x75]; 
0x00056910: jmp 0x56911; dec dword ptr [ebx - 0x72f3db8c]; xchg byte ptr [edi + esi*2], dl; stc; call dword ptr [eax - 0x73]; 
0x000d4720: jmp 0x56b0e; call dword ptr [ecx + 0x50]; 
0x00035d08: jmp 0x5b442190; pop esi; pop edi; ret; 
0x0004af9b: jmp 0x5bee24a1; mov eax, 1; pop esi; pop edi; ret; 
0x00051938: jmp 0x5e60f1c6; pop edi; pop ebp; ret; 
0x0005e931: jmp 0x5e932; call dword ptr [edx - 0x73]; 
0x001043ac: jmp 0x5eb636b3; pop edi; ret; 
0x001043ec: jmp 0x5eb636f3; pop edi; ret; 
0x00104f32: jmp 0x5eb64239; pop edi; ret; 
0x00104fb2: jmp 0x5eb642b9; pop edi; ret; 
0x0016df1f: jmp 0x5ebcd226; pop edi; ret; 
0x000b5c76: jmp 0x5ecb8dd6; pop edi; ret; 
0x000ad663: jmp 0x5f0ad66d; pop esi; pop ebx; ret; 
0x000c9bb3: jmp 0x5f0c9bb8; pop esi; ret; 
0x00103ee4: jmp 0x5fbc31eb; ret; 
0x0010436a: jmp 0x5fbc3671; ret; 
0x000648b0: jmp 0x648b1; jmp dword ptr [ebp - 0x5f]; 
0x0004ae9e: jmp 0x666fe; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x0004af9e: jmp 0x667fe; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x0017ade2: jmp 0x6710f070; mov dword ptr [edx - 3], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0017bf22: jmp 0x671101b0; mov dword ptr [edx - 3], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00069734: jmp 0x68af3; lea esi, [esi]; jmp eax; 
0x000738f6: jmp 0x738f7; jmp ptr [ecx]; ret 0x4d89; 
0x00076a7e: jmp 0x75950; lea esi, [esi]; nop; mov eax, 0xffffffff; ret; 
0x000764d6: jmp 0x764c2; mov eax, 0xffffffff; pop ebx; ret; 
0x00077f18: jmp 0x77f19; jmp ptr [ecx]; ret 0xd989; 
0x000a9d43: jmp 0x800a9d4d; cmp byte ptr [ecx], al; sbb eax, -1; pop edi; pop ebx; ret; 
0x000813de: jmp 0x80ce0; lea esi, [esi]; nop; mov eax, 0xffffffff; ret; 
0x00080e18: jmp 0x80d26; lea esi, [esi]; endbr32; mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x0007430c: jmp 0x810752eb; ret; 
0x0012c60c: jmp 0x8112ca68; ret; 
0x0017da0c: jmp 0x8217d954; ret; 
0x0018f10c: jmp 0x8218ef3d; ret; 
0x00192e0c: jmp 0x82192c00; ret; 
0x0019330c: jmp 0x821930fb; ret; 
0x00082d29: jmp 0x82d04; nop; nop; nop; endbr32; ret; 
0x0009345e: jmp 0x82d78ec; mov eax, 0x118; call dword ptr gs:[0x10]; 
0x000934ae: jmp 0x82d793c; mov eax, 0x1a3; call dword ptr gs:[0x10]; 
0x00093726: jmp 0x82d7bb4; mov esi, dword ptr [esp + 0x4c]; mov eax, 0x117; call dword ptr gs:[0x10]; 
0x00093776: jmp 0x82d7c04; mov esi, dword ptr [esp + 0x4c]; mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x00094419: jmp 0x83095d79; in al, dx; adc byte ptr [eax - 0x73], dl; sbb byte ptr [eax + 0x5b], 0xf9; call dword ptr [eax + 0x6a]; 
0x0007be7a: jmp 0x83280; nop; endbr32; mov eax, dword ptr [esp + 4]; and dword ptr [eax], 0xffffffcf; ret; 
0x000f5ede: jmp 0x83302566; ret 0x8340; 
0x000b5a8e: jmp 0x838d5192; add byte ptr [eax], al; add byte ptr [edi + ecx], al; inc ebp; ret 0x66c3; 
0x000b5b8e: jmp 0x838d5292; add byte ptr [eax], al; add byte ptr [edi + ecx], al; inc ebp; ret 0x66c3; 
0x0009c453: jmp 0x83fc3859; ret 0x8904; 
0x0016ba93: jmp 0x8416ac0f; les edx, ptr [eax]; add esp, 8; pop ebx; ret; 
0x00083ec6: jmp 0x853f0; pop ebx; mov eax, 0xc; pop esi; pop edi; ret; 
0x0008653a: jmp 0x85b40; nop; mov eax, 0x16; pop ebx; ret; 
0x0017434d: jmp 0x88980; lea esi, [esi]; mov eax, 0x16; pop ebx; ret; 
0x00088b2a: jmp 0x88980; nop; mov eax, 0x16; pop ebx; ret; 
0x00088a78: jmp 0x889fa; lea esi, [esi]; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x00088eb2: jmp 0x88e3d; into; call dword ptr gs:[0x10]; 
0x00105192: jmp 0x8921161a; ret; 
0x00089be0: jmp 0x89b6b; into; call dword ptr gs:[0x10]; 
0x0009c445: jmp 0x89c13952; xor byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0008c000: jmp 0x89c83408; ret 0xca83; 
0x0004b736: jmp 0x89fb2a3c; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0008b8a9: jmp 0x8b61d; mov edx, 1; mov eax, 0xf0; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0013f0c6: jmp 0x8bcc6656; inc ebp; ror byte ptr [ebx + 0x489d05d], 0x37; mov eax, 6; call dword ptr gs:[0x10]; 
0x000415d3: jmp 0x8c0414bb; jl 0x415fe; sub al, 0x8d; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x00095c32: jmp 0x8d19acc2; inc edx; jmp dword ptr [ecx]; 
0x00120dd3: jmp 0x8e11fec3; and dword ptr [eax - 0x5e], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x00085fc0: jmp 0x9507d; add byte ptr [edx + 1], bh; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00086300: jmp 0x953bd; add byte ptr [edx + 1], bh; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009a1ca: jmp 0x9a1a9; pop edx; mov eax, 0x16; pop ebx; pop esi; ret; 
0x0011cacd: jmp 0x9a21a3af; ror byte ptr [edi], 0x45; ret 0xc084; 
0x0011d0ad: jmp 0x9a21a98f; ror byte ptr [edi], 0x45; ret 0xc084; 
0x0009a33a: jmp 0x9a2d2; lea esi, [esi]; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax - 0x148]; call dword ptr [eax]; 
0x0009a3f2: jmp 0x9a37f; lea esi, [esi]; mov edx, dword ptr [edi - 0x148]; mov dword ptr [esp + 0xc], eax; call dword ptr [edx]; 
0x0009a55e: jmp 0x9a4fe; sub esp, 0xc; push dword ptr [esp + 0x14]; call eax; 
0x000e0df4: jmp 0x9b000; lea esi, [esi]; xor eax, eax; ret; 
0x0009d1d4: jmp 0x9d161; jl 0x9d1fc; sbb byte ptr [ebx - 0x76ebdbb4], cl; ret 0xf901; 
0x000b4692: jmp 0xa571490a; rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; pop edi; ret; 
0x000b4dab: jmp 0xa5715023; rep movsd dword ptr es:[edi], dword ptr [esi]; xchg edi, eax; mov esi, edx; ret; 
0x000a5901: jmp 0xa590f; lea ecx, [edx + 0xc]; jne 0xa5ed0; pop edi; pop ebx; ret; 
0x000a593b: jmp 0xa594d; lea ecx, [edx + 0x10]; jne 0xa5ed0; pop edi; pop ebx; ret; 
0x000a5b87: jmp 0xa5b8a; lea ecx, [edx + 1]; jne 0xa5ed0; pop edi; pop ebx; ret; 
0x000a5bcf: jmp 0xa5bd4; lea ecx, [edx + 3]; jne 0xa5ed0; pop edi; pop ebx; ret; 
0x000a5bed: jmp 0xa5bf4; lea ecx, [edx + 5]; jne 0xa5ed0; pop edi; pop ebx; ret; 
0x000a5c0f: jmp 0xa5c17; lea ecx, [edx + 6]; jne 0xa5ed0; pop edi; pop ebx; ret; 
0x000a5c2d: jmp 0xa5c36; lea ecx, [edx + 7]; jne 0xa5ed0; pop edi; pop ebx; ret; 
0x000a5c51: jmp 0xa5c5c; lea ecx, [edx + 9]; jne 0xa5ed0; pop edi; pop ebx; ret; 
0x000a5cc5: jmp 0xa5cd4; lea ecx, [edx + 0xd]; jne 0xa5ed0; pop edi; pop ebx; ret; 
0x000a5cf5: jmp 0xa5d05; lea ecx, [edx + 0xe]; jne 0xa5ed0; pop edi; pop ebx; ret; 
0x000a5d25: jmp 0xa5d36; lea ecx, [edx + 0xf]; jne 0xa5ed0; pop edi; pop ebx; ret; 
0x000a5f67: jmp 0xa5f6a; lea ecx, [edx + 1]; jne 0xa5ed1; pop ebx; ret; 
0x000a5f89: jmp 0xa5f8d; lea ecx, [edx + 2]; jne 0xa5ed1; pop ebx; ret; 
0x000a5faf: jmp 0xa5fb4; lea ecx, [edx + 3]; jne 0xa5ed1; pop ebx; ret; 
0x000a5fc7: jmp 0xa5fcd; lea ecx, [edx + 4]; jne 0xa5ed1; pop ebx; ret; 
0x000a5fed: jmp 0xa5ff4; lea ecx, [edx + 5]; jne 0xa5ed1; pop ebx; ret; 
0x000a600f: jmp 0xa6017; lea ecx, [edx + 6]; jne 0xa5ed1; pop ebx; ret; 
0x000a602d: jmp 0xa6036; lea ecx, [edx + 7]; jne 0xa5ed1; pop ebx; ret; 
0x000a604b: jmp 0xa6055; lea ecx, [edx + 8]; jne 0xa5ed1; pop ebx; ret; 
0x000a6071: jmp 0xa607c; lea ecx, [edx + 9]; jne 0xa5ed1; pop ebx; ret; 
0x000a6093: jmp 0xa609f; lea ecx, [edx + 0xa]; jne 0xa5ed1; pop ebx; ret; 
0x000a60b1: jmp 0xa60be; lea ecx, [edx + 0xb]; jne 0xa5ed1; pop ebx; ret; 
0x000a60d1: jmp 0xa60df; lea ecx, [edx + 0xc]; jne 0xa5ed1; pop ebx; ret; 
0x000a60f5: jmp 0xa6104; lea ecx, [edx + 0xd]; jne 0xa5ed1; pop ebx; ret; 
0x000a6125: jmp 0xa6135; lea ecx, [edx + 0xe]; jne 0xa5ed1; pop ebx; ret; 
0x000a6155: jmp 0xa6166; lea ecx, [edx + 0xf]; jne 0xa5ed1; pop ebx; ret; 
0x000a617b: jmp 0xa618d; lea ecx, [edx + 0x10]; jne 0xa5ed1; pop ebx; ret; 
0x000aa4ec: jmp 0xaa4f6; lea ecx, [edx + 8]; jne 0xaa331; pop ebx; ret; 
0x000aa636: jmp 0xaa647; lea ecx, [edx + 0xf]; jne 0xaa331; pop ebx; ret; 
0x000b3a41: jmp 0xb3ab0; lea esi, [esi]; lea esi, [esi]; xor eax, eax; ret; 
0x000b4216: jmp 0xb4270; lea esi, [esi]; nop; xor eax, eax; ret; 
0x000dd846: jmp 0xb8fe1c5a; jb 0xdd84d; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0007f17d: jmp 0xc48bc1ab; adc byte ptr [ecx], bh; sal dword ptr [edi + 0x49], 0x89; ret 0x448b; 
0x0006f37c: jmp 0xc797f380; inc esp; and al, 0x5c; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0007fd18: jmp 0xc841ce46; jbe 0x7fdc8; sub esp, 0xc; push esi; call dword ptr [ebp + 0x30]; 
0x00173f24: jmp 0xc8511052; jbe 0x174000; sub esp, 0xc; push esi; call dword ptr [ebp + 0x44]; 
0x000cccd0: jmp 0xccd16; stc; call dword ptr [eax + 0x55]; 
0x000cae60: jmp 0xdd30cb42; add al, 0x24; add esp, 0xc; ret; 
0x000cae80: jmp 0xdd30cb62; add al, 0x24; add esp, 0xc; ret; 
0x000de40c: jmp 0xde421; nop; mov eax, edx; call dword ptr gs:[0x10]; 
0x000df8b1: jmp 0xdf8b2; call dword ptr [edx + 0x50]; 
0x000dfa86: jmp 0xdfa87; call dword ptr [eax + 0x52]; 
0x000e1478: jmp 0xe13c8; lea esi, [esi]; sub esp, 0xc; mov eax, dword ptr [ebp - 0x19c]; push dword ptr [ebp - 0x198]; call dword ptr [eax + 0x14]; 
0x000e1771: jmp 0xe1629; sub esp, 0xc; push dword ptr [ebp - 0x198]; mov eax, dword ptr [ebp - 0x19c]; call dword ptr [eax + 0x10]; 
0x000e3e21: jmp 0xe3cd9; sub esp, 0xc; push dword ptr [ebp - 0x198]; mov eax, dword ptr [ebp - 0x19c]; call dword ptr [eax + 0x10]; 
0x000e95eb: jmp 0xe95d4; lea esi, [esi]; lea eax, [ecx + 1]; pop ebx; pop esi; ret; 
0x000f9f25: jmp 0xe9b5922c; cmp ah, 0xff; jmp dword ptr [esi - 0x70]; 
0x000f8b68: jmp 0xf8ab8; lea esi, [esi]; sub esp, 0xc; mov eax, dword ptr [ebp - 0x19c]; push dword ptr [ebp - 0x198]; call dword ptr [eax + 0x14]; 
0x000f8e61: jmp 0xf8d19; sub esp, 0xc; push dword ptr [ebp - 0x198]; mov eax, dword ptr [ebp - 0x19c]; call dword ptr [eax + 0x10]; 
0x000b5721: jmp 0xf98b9736; add byte ptr [ecx + eax + 0x40], dh; sub eax, dword ptr [esp + 4]; ret; 
0x000f9a31: jmp 0xf98e9; sub esp, 0xc; push dword ptr [ebp - 0x198]; mov eax, dword ptr [ebp - 0x19c]; call dword ptr [eax + 0x10]; 
0x000fdd1c: jmp 0xfdd1f; fmul dword ptr [ebp + 0x428dc114]; or byte ptr [ecx - 0x6d76b], cl; call dword ptr [eax - 1]; 
0x0016ecea: jmp dword ptr [eax + 0x30]; 
0x00165703: jmp dword ptr [eax + 4]; 
0x00048df5: jmp dword ptr [eax]; 
0x00082861: jmp dword ptr [eax]; lea esi, [esi]; nop; ret; 
0x0005d95e: jmp dword ptr [ebp + 0x31]; 
0x000213c7: jmp dword ptr [ebp + 0x33]; 
0x000213c7: jmp dword ptr [ebp + 0x33]; adc eax, 0x18; rol edx, 9; mov dword ptr [eax + 0x1978], edx; ret; 
0x00084d21: jmp dword ptr [ebp + 0x39]; 
0x0004e2cb: jmp dword ptr [ebp + 0xf]; 
0x00021df3: jmp dword ptr [ebp + 3]; 
0x00021df3: jmp dword ptr [ebp + 3]; add eax, 0; ret; 
0x000836a8: jmp dword ptr [ebp - 0x39]; 
0x0008fccb: jmp dword ptr [ebp - 0x5d]; 
0x0008fccb: jmp dword ptr [ebp - 0x5d]; pop eax; add al, byte ptr [eax]; add byte ptr [ebp - 0x19a4cf7d], cl; call dword ptr [ecx + 0x50]; 
0x0002243f: jmp dword ptr [ebp - 0x5f]; 
0x00022105: jmp dword ptr [ebp - 0x75]; 
0x00171f45: jmp dword ptr [ebp - 0x75]; adc eax, 0; mov dword ptr [edx + eax], 0x16; xor eax, eax; ret; 
0x000958f7: jmp dword ptr [ebp - 0x7d]; 
0x00086adf: jmp dword ptr [ebp - 1]; 
0x000632e7: jmp dword ptr [ebp]; 
0x00020164: jmp dword ptr [ebx + 0xc]; 
0x00020006: jmp dword ptr [ebx + 8]; 
0x00020154: jmp dword ptr [ebx - 0x10]; nop word ptr [eax + eax]; endbr32; jmp dword ptr [ebx + 0xc]; 
0x0015b713: jmp dword ptr [ebx - 0x41]; 
0x0002e25d: jmp dword ptr [ebx]; 
0x00169f4d: jmp dword ptr [ecx - 0x15]; 
0x0002e63a: jmp dword ptr [ecx]; 
0x00074121: jmp dword ptr [ecx]; ret 0xc483; 
0x00126ce2: jmp dword ptr [edi + 0x6d]; 
0x0005474c: jmp dword ptr [edi + 0x75]; 
0x00054401: jmp dword ptr [edi - 0x75]; 
0x00158fd8: jmp dword ptr [edx - 7]; 
0x00158fd8: jmp dword ptr [edx - 7]; call dword ptr [eax - 0x18]; 
0x00067806: jmp dword ptr [edx]; 
0x000563d1: jmp dword ptr [esi + 0x3d]; 
0x000eaf5c: jmp dword ptr [esi + 0xb]; 
0x00020149: jmp dword ptr [esi + 0xf]; 
0x000a6b14: jmp dword ptr [esi + 0xf]; adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; pop ebx; ret; 
0x00192d12: jmp dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3273; 
0x00192cf8: jmp dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x4c73; 
0x00192cde: jmp dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6673; 
0x001923de: jmp dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x00020159: jmp dword ptr [esi + 0xf]; pop ds; inc esp; add byte ptr [eax], al; endbr32; jmp dword ptr [ebx + 0xc]; 
0x00050bed: jmp dword ptr [esi + 6]; 
0x0013f928: jmp dword ptr [esi - 0x39]; 
0x00139cc5: jmp dword ptr [esi - 0x3f]; 
0x00139cc5: jmp dword ptr [esi - 0x3f]; ret; 
0x0002001d: jmp dword ptr [esi - 0x70]; 
0x0015ef0b: jmp dword ptr [esi - 0x70]; nop; endbr32; ret; 
0x00084b49: jmp dword ptr [esi - 0x70]; nop; nop; endbr32; xor eax, eax; ret; 
0x000238f1: jmp dword ptr [esi - 0x77]; 
0x001884bf: jmp dword ptr [esi - 0x77]; dec edx; std; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0019c6bc: jmp dword ptr [esi - 0x7b]; 
0x000ccd16: jmp dword ptr [esi - 0x7d]; 
0x00141ec0: jmp dword ptr [esi - 0x7f]; 
0x001703cb: jmp dword ptr [esi - 9]; 
0x000d7463: jmp dword ptr [esi]; 
0x000218e7: jmp eax; 
0x0015a9be: jmp eax; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00071aa6: jmp eax; lea esi, [esi]; nop; xor eax, eax; ret; 
0x000719a8: jmp eax; mov eax, 0xffffffff; pop ebx; ret; 
0x0017431c: jmp eax; nop; add esp, 4; pop ebx; pop esi; ret; 
0x0005986e: jmp ebx; 
0x00193cb9: jmp ebx; lea esi, [esi]; nop; pop ebx; xor eax, eax; ret; 
0x000347ce: jmp ecx; 
0x000b592b: jmp ecx; lea esi, [esi]; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1d8]; ret; 
0x000b367b: jmp ecx; lea esi, [esi]; pop ebx; pop esi; ret; 
0x000de3d7: jmp ecx; ret; 
0x00021f55: jmp edi; 
0x00034562: jmp edx; 
0x0015d88a: jmp edx; lea esi, [esi]; endbr32; ret; 
0x001605a5: jmp edx; lea esi, [esi]; nop; endbr32; ret; 
0x0016064d: jmp edx; nop; xor eax, eax; pop ebx; pop esi; ret; 
0x0015d93e: jmp edx; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00066362: jmp esi; 
0x000feb82: jmp ptr [eax + 0x11]; or al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [edx + 0x49], ch; stc; call dword ptr [eax - 0x18]; 
0x001a0af5: jmp ptr [eax + 0x16]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; or dword ptr [ebx + 0x2d], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0002895a: jmp ptr [eax + 0x19]; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [esp + ebp], bl; stc; call dword ptr [eax - 0x18]; 
0x0002d864: jmp ptr [eax + 0x1a]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg eax, ecx; sub al, 0xf9; call dword ptr [eax - 0x18]; 
0x00024d4e: jmp ptr [eax + 0x1e]; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; or dword ptr [eax + 0x6f], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00025fe4: jmp ptr [eax + 0x1e]; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax + 0x6f], cl; stc; call dword ptr [eax - 0x18]; 
0x00025403: jmp ptr [eax + 0x1e]; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + 0x6f], ecx; stc; call dword ptr [eax - 0x18]; 
0x000775a8: jmp ptr [eax + 0x20]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; cmp bh, 0x3d; stc; call dword ptr [eax - 0x18]; 
0x0013f916: jmp ptr [eax + 0x20]; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [edi - 7], bl; call dword ptr [eax - 0x18]; 
0x00087c6b: jmp ptr [eax + 0x26]; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [edi + 0x3f], bl; stc; call dword ptr [eax - 0x18]; 
0x0014d7cd: jmp ptr [eax + 0x27]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; cmp byte ptr [eax], 0xac; stc; call dword ptr [eax - 0x18]; 
0x00044780: jmp ptr [eax + 0x30]; add al, 0; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], al; jne 0x44785; call dword ptr [eax - 0x18]; 
0x000413e5: jmp ptr [eax + 0x30]; add al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], eax; jne 0x413ea; call dword ptr [eax - 0x18]; 
0x000478eb: jmp ptr [eax + 0x30]; add al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], eax; jne 0x478f0; call dword ptr [eax - 0x18]; 
0x000511a9: jmp ptr [eax + 0x30]; add al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], eax; jne 0x511ae; call dword ptr [eax - 0x18]; 
0x000bba53: jmp ptr [eax + 0x30]; add al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], eax; jne 0xbba58; call dword ptr [eax - 0x18]; 
0x000c15d6: jmp ptr [eax + 0x30]; add al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], eax; jne 0xc15db; call dword ptr [eax - 0x18]; 
0x000c8c00: jmp ptr [eax + 0x30]; add al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], eax; jne 0xc8c05; call dword ptr [eax - 0x18]; 
0x00087955: jmp ptr [eax + 0x38]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + 0x3f], eax; stc; call dword ptr [eax - 0x18]; 
0x0007e5af: jmp ptr [eax + 0x42]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; test dword ptr [ebx], edi; stc; call dword ptr [eax - 0x18]; 
0x000c8cb9: jmp ptr [eax + 0x4b]; add al, 0; add byte ptr [eax - 0x73], dl; and byte ptr [eax], 0x30; stc; call dword ptr [eax - 0x18]; 
0x000415c4: jmp ptr [eax + 0x4b]; add al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], esp; xor cl, bh; call dword ptr [eax - 0x18]; 
0x0004473a: jmp ptr [eax + 0x4d]; add eax, 0x8d500000; xchg al, dh; jne 0x4473f; call dword ptr [eax - 0x18]; 
0x00041570: jmp ptr [eax + 0x4d]; add eax, 0x8d500000; xchg eax, esi; jne 0x41575; call dword ptr [eax - 0x18]; 
0x0004780c: jmp ptr [eax + 0x4d]; add eax, 0x8d500000; xchg eax, esi; jne 0x47811; call dword ptr [eax - 0x18]; 
0x0005113a: jmp ptr [eax + 0x4d]; add eax, 0x8d500000; xchg eax, esi; jne 0x5113f; call dword ptr [eax - 0x18]; 
0x000bbb95: jmp ptr [eax + 0x4d]; add eax, 0x8d500000; xchg eax, esi; jne 0xbbb9a; call dword ptr [eax - 0x18]; 
0x000be864: jmp ptr [eax + 0x4d]; add eax, 0x8d500000; xchg eax, esi; jne 0xbe869; call dword ptr [eax - 0x18]; 
0x000c166b: jmp ptr [eax + 0x4d]; add eax, 0x8d500000; xchg eax, esi; jne 0xc1670; call dword ptr [eax - 0x18]; 
0x000c8d03: jmp ptr [eax + 0x50]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; and byte ptr [esi + 0x44], 0xf9; call dword ptr [eax - 0x18]; 
0x000bbc44: jmp ptr [eax + 0x50]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [esi + 0x44], esp; stc; call dword ptr [eax - 0x18]; 
0x00087b8b: jmp ptr [eax + 0x51]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [edx + 0x47], ch; stc; call dword ptr [eax - 0x18]; 
0x0014d6a1: jmp ptr [eax + 0x53]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; add al, 0xab; stc; call dword ptr [eax - 0x18]; 
0x00044854: jmp ptr [eax + 0x5f]; add eax, 0x8d500000; xchg byte ptr [eax], bh; jbe 0x44859; call dword ptr [eax - 0x18]; 
0x00041408: jmp ptr [eax + 0x5f]; add eax, 0x8d500000; xchg dword ptr [eax], edi; jbe 0x4140d; call dword ptr [eax - 0x18]; 
0x0004790e: jmp ptr [eax + 0x5f]; add eax, 0x8d500000; xchg dword ptr [eax], edi; jbe 0x47913; call dword ptr [eax - 0x18]; 
0x00051115: jmp ptr [eax + 0x5f]; add eax, 0x8d500000; xchg dword ptr [eax], edi; jbe 0x5111a; call dword ptr [eax - 0x18]; 
0x000bbabc: jmp ptr [eax + 0x5f]; add eax, 0x8d500000; xchg dword ptr [eax], edi; jbe 0xbbac1; call dword ptr [eax - 0x18]; 
0x000be983: jmp ptr [eax + 0x5f]; add eax, 0x8d500000; xchg dword ptr [eax], edi; jbe 0xbe988; call dword ptr [eax - 0x18]; 
0x000c15f9: jmp ptr [eax + 0x5f]; add eax, 0x8d500000; xchg dword ptr [eax], edi; jbe 0xc15fe; call dword ptr [eax - 0x18]; 
0x0015151e: jmp ptr [eax + 0x60]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xor byte ptr [ecx], 0x61; stc; call dword ptr [eax - 0x18]; 
0x00023bd0: jmp ptr [eax + 0x6a]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xor dword ptr [ebx], 0x2a; stc; call dword ptr [eax - 0x18]; 
0x0008ab71: jmp ptr [eax + 0x72]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; test eax, edi; jg 0x8ab76; call dword ptr [eax - 0x18]; 
0x000c79ef: jmp ptr [eax + 0x74]; add eax, 0x8d500000; adc byte ptr [ecx + 0x30], 0xf9; call dword ptr [eax - 0x18]; 
0x00040879: jmp ptr [eax + 0x74]; add eax, 0x8d500000; xchg dword ptr [ecx + 0x30], edx; stc; call dword ptr [eax - 0x18]; 
0x0014c69f: jmp ptr [eax + 0x75]; add al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + ebp*4], edi; stc; call dword ptr [eax - 0x18]; 
0x0002eab3: jmp ptr [eax + 0x78]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; or byte ptr [edi], 0x2d; stc; call dword ptr [eax - 0x18]; 
0x00087c05: jmp ptr [eax + 0x7a]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + 0x3f], edx; stc; call dword ptr [eax - 0x18]; 
0x0004152a: jmp ptr [eax + 0x7b]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [edx], ebp; xor cl, bh; call dword ptr [eax - 0x18]; 
0x0014d259: jmp ptr [eax + 0x7c]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + ebp*4 - 7], ebp; call dword ptr [eax - 0x18]; 
0x00152b40: jmp ptr [eax + 9]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; add al, 0x61; stc; call dword ptr [eax - 0x18]; 
0x000f2a19: jmp ptr [eax - 0x117af0ff]; or al, byte ptr [eax]; add byte ptr [ebp - 0x76dd8b40], al; ret 0xe283; 
0x00029cff: jmp ptr [eax - 0x13]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax + esi*2 - 7], dl; call dword ptr [eax - 0x18]; 
0x00026f2e: jmp ptr [eax - 0x13]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + esi*2 - 7], edx; call dword ptr [eax - 0x18]; 
0x000ce986: jmp ptr [eax - 0x14]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; and esp, 0xffffff98; stc; call dword ptr [eax - 0x18]; 
0x00029d22: jmp ptr [eax - 0x14]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax + esi*2], ch; stc; call dword ptr [eax - 0x18]; 
0x00026f51: jmp ptr [eax - 0x14]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + esi*2], ebp; stc; call dword ptr [eax - 0x18]; 
0x00024c8b: jmp ptr [eax - 0x16]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; sub dword ptr [eax], 0x6f; stc; call dword ptr [eax - 0x18]; 
0x00024d1c: jmp ptr [eax - 0x17]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; adc esi, 0x2b; stc; call dword ptr [eax - 0x18]; 
0x00025f88: jmp ptr [eax - 0x17]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dh, dl; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x000253c1: jmp ptr [eax - 0x17]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg esi, edx; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x00028780: jmp ptr [eax - 0x18]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [esp + ebp], bl; stc; call dword ptr [eax - 0x18]; 
0x0014ddca: jmp ptr [eax - 0x1a]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [edx + 0x60], esp; stc; call dword ptr [eax - 0x18]; 
0x000ce967: jmp ptr [eax - 0x1b]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; sbb dword ptr [edx + 0x45], -7; call dword ptr [eax - 0x18]; 
0x0014ddab: jmp ptr [eax - 0x1b]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + 0x60], edx; stc; call dword ptr [eax - 0x18]; 
0x000287c1: jmp ptr [eax - 0x1e]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], cl; jo 0x287c6; call dword ptr [eax - 0x18]; 
0x00029d45: jmp ptr [eax - 0x1e]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], cl; jo 0x29d4a; call dword ptr [eax - 0x18]; 
0x0002b14d: jmp ptr [eax - 0x1e]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], cl; jo 0x2b152; call dword ptr [eax - 0x18]; 
0x00026f74: jmp ptr [eax - 0x1e]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ecx; jo 0x26f79; call dword ptr [eax - 0x18]; 
0x00027c7b: jmp ptr [eax - 0x1e]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ecx; jo 0x27c80; call dword ptr [eax - 0x18]; 
0x00076a3e: jmp ptr [eax - 0x1f]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; and ebx, 0x3d; stc; call dword ptr [eax - 0x18]; 
0x00023780: jmp ptr [eax - 0x1f]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg byte ptr [esi], cl; sub bh, cl; call dword ptr [eax - 0x18]; 
0x000813a4: jmp ptr [eax - 0x22]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; and ebx, 0x3d; stc; call dword ptr [eax - 0x18]; 
0x000912c0: jmp ptr [eax - 0x22]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + eax*4 - 7], ecx; call dword ptr [eax - 0x18]; 
0x0004480e: jmp ptr [eax - 0x28]; add eax, 0x8d500000; xchg byte ptr [esi + 0x30], ah; stc; call dword ptr [eax - 0x18]; 
0x000414ca: jmp ptr [eax - 0x28]; add eax, 0x8d500000; xchg dword ptr [esi + 0x30], esp; stc; call dword ptr [eax - 0x18]; 
0x000e322b: jmp ptr [eax - 0x2a]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; and ah, 0x47; stc; call dword ptr [eax - 0x18]; 
0x00087b69: jmp ptr [eax - 0x32]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [edi + edi*2], ch; stc; call dword ptr [eax - 0x18]; 
0x000c2a14: jmp ptr [eax - 0x3e]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; cmp eax, -0x69; stc; call dword ptr [eax - 0x18]; 
0x00086d2b: jmp ptr [eax - 0x3f]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dh, bh; stc; call dword ptr [eax - 0x18]; 
0x00147e4e: jmp ptr [eax - 0x3f]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; sub dword ptr [ebx], 0x5f; stc; call dword ptr [eax - 0x18]; 
0x00088fc5: jmp ptr [eax - 0x40]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax + eax*4 - 7], dl; call dword ptr [eax - 0x18]; 
0x0014b2bd: jmp ptr [eax - 0x42]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + ebp*4], edi; stc; call dword ptr [eax - 0x18]; 
0x0002ea66: jmp ptr [eax - 0x46]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xor byte ptr [edx], 0x2d; stc; call dword ptr [eax - 0x18]; 
0x00088f32: jmp ptr [eax - 0x4f]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg al, bh; jg 0x88f37; call dword ptr [eax - 0x18]; 
0x00089c71: jmp ptr [eax - 0x4f]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg al, bh; jg 0x89c76; call dword ptr [eax - 0x18]; 
0x00087c9e: jmp ptr [eax - 0x4f]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [ebx + 0x3f], al; stc; call dword ptr [eax - 0x18]; 
0x000c8d9c: jmp ptr [eax - 0x50]; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; or ah, 0x74; stc; call dword ptr [eax - 0x18]; 
0x00044717: jmp ptr [eax - 0x50]; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg ah, cl; je 0x4471c; call dword ptr [eax - 0x18]; 
0x0004160a: jmp ptr [eax - 0x50]; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg esp, ecx; je 0x4160f; call dword ptr [eax - 0x18]; 
0x000477e9: jmp ptr [eax - 0x50]; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg esp, ecx; je 0x477ee; call dword ptr [eax - 0x18]; 
0x00051048: jmp ptr [eax - 0x50]; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg esp, ecx; je 0x5104d; call dword ptr [eax - 0x18]; 
0x000bbb09: jmp ptr [eax - 0x50]; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg esp, ecx; je 0xbbb0e; call dword ptr [eax - 0x18]; 
0x000c16b8: jmp ptr [eax - 0x50]; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg esp, ecx; je 0xc16bd; call dword ptr [eax - 0x18]; 
0x00023b82: jmp ptr [eax - 0x52]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; or dword ptr [edi + 0x2a], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000ce306: jmp ptr [eax - 0x54]; ret 0xf0; 
0x00152833: jmp ptr [eax - 0x57]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg byte ptr [ebx + 0x3f], al; stc; call dword ptr [eax - 0x18]; 
0x00023bac: jmp ptr [eax - 0x58]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; add dword ptr [edx + 0x2a], -7; call dword ptr [eax - 0x18]; 
0x00056923: jmp ptr [eax - 0x5c]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg ah, ch; jbe 0x56928; call dword ptr [eax - 0x18]; 
0x00026542: jmp ptr [eax - 0x5d]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dl, al; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x0007a7ab: jmp ptr [eax - 0x62]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; add dword ptr [eax + 0x7d], -7; call dword ptr [eax - 0x18]; 
0x0007a7ca: jmp ptr [eax - 0x69]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; sub dword ptr [edx + 0x47], -7; call dword ptr [eax - 0x18]; 
0x0002602a: jmp ptr [eax - 0x6d]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dh, dh; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x0002db14: jmp ptr [eax - 0x71]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; sub esp, 0x2c; stc; call dword ptr [eax - 0x18]; 
0x001693d3: jmp ptr [eax - 0x72]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; cmp dword ptr [esi + 0x65], -7; call dword ptr [eax - 0x18]; 
0x0009117c: jmp ptr [eax - 0x74]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; sub byte ptr [edi + 0x40], 0xf9; call dword ptr [eax - 0x18]; 
0x000c4b65: jmp ptr [eax - 0x74]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [esi + 0x44], ecx; stc; call dword ptr [eax - 0x18]; 
0x0008aa23: jmp ptr [eax - 0x7a]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; test dword ptr [eax + eax*4 - 7], edx; call dword ptr [eax - 0x18]; 
0x000ce948: jmp ptr [eax - 0x7b]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; or dword ptr [ebx + 0x45], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000fd050: jmp ptr [eax - 0x7bf78bfe]; ror byte ptr [edi], cl; test dword ptr [esi - 0x74ffffe8], esi; push esi; add al, 0xf7; ret 0xfffd; 
0x0014d7aa: jmp ptr [eax - 0xe]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; or byte ptr [eax], 0xac; stc; call dword ptr [eax - 0x18]; 
0x00041471: jmp ptr [eax - 4]; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [edi], ecx; xor cl, bh; call dword ptr [eax - 0x18]; 
0x0016ab08: jmp ptr [eax - 8]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg al, al; stc; call dword ptr [eax - 0x18]; 
0x000ff1b6: jmp ptr [eax]; add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call ebx; 
0x00066a05: jmp ptr [ebx]; mov ch, 0x7c; idiv edi; dec dword ptr [ebx + 0x5f8b1447]; sbb byte ptr [ecx], ch; ret; 
0x0005f20c: jmp ptr [ebx]; test dword ptr [eax + 0x39fffffb], edi; ret 0x1875; 
0x000c62a5: jmp ptr [ebx]; test dword ptr [eax - 0x76000037], edi; test dword ptr [eax - 0x76000037], esi; ret; 
0x0005d4d3: jmp ptr [ebx]; test dword ptr [eax - 0x7c000005], edi; in al, dx; or al, 0x89; ret; 
0x000a3bf8: jmp ptr [ecx]; ret 0x280f; 
0x000738f8: jmp ptr [ecx]; ret 0x4d89; 
0x000d4f41: jmp ptr [ecx]; ret 0xb8; 
0x0017235b: jmp ptr [ecx]; ret 0xc129; 
0x000a57ac: jmp ptr [ecx]; ret 0xc301; 
0x000d4d27: jmp ptr [ecx]; ret 0xd089; 
0x00050e78: jmp ptr [ecx]; ret 0xd889; 
0x00070dda: jmp ptr [ecx]; ret 0xd989; 
0x0002b7d1: jmp ptr [ecx]; ret 0xe183; 
0x00023f16: jmp ptr [ecx]; ret 0xe383; 
0x0002d24d: jmp ptr [ecx]; ret 0xe683; 
0x00053835: jmp ptr [ecx]; ret 0xf189; 
0x00077cbd: jmp ptr [ecx]; ret 0xf989; 
0x00039d37: jmp ptr [ecx]; ret; 
0x0005cd1e: jmp ptr [ecx]; ror byte ptr [ecx - 0x4577b], 1; call dword ptr [eax - 0x7d]; 
0x00035f7c: jmp ptr [ecx]; sal dword ptr [ecx], 0xc8; shr eax, 0x1f; ret; 
0x0004a089: jmp ptr [edi]; jne 0x4a080; add esp, 8; pop ebx; ret; 
0x00130861: jmp ptr [edx]; call edx; 
0x0009d48d: jmp ptr [edx]; cmp eax, edx; jne 0x9d488; mov eax, ecx; ret; 
0x00171ec6: jmp ptr [edx]; push dword ptr [esp + 0x1c]; call 0x3a730; add esp, 0x1c; ret; 
0x001592bf: jmp ptr [edx]; push ecx; push 4; push edx; mov dword ptr [esp + 0x2c], edx; call dword ptr [eax]; 
0x001626be: jmp ptr [edx]; push edx; push 4; push ebx; call dword ptr [eax]; 
0x00103b17: jne 0x103b40; mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb4; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00103bf7: jne 0x103c20; mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb5; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00103cd6: jne 0x103d00; mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb4; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00103db6: jne 0x103de0; mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb5; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00104432: jne 0x10443d; mov eax, dword ptr [esp + 4]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x00105065: jne 0x105077; add esp, 0x1c; ret; 
0x001050c1: jne 0x1050a0; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0010533d: jne 0x10531e; xor eax, eax; pop ebx; ret; 
0x0010550b: jne 0x105526; add esp, 0x78; pop ebx; ret; 
0x00107a05: jne 0x107a59; add esp, 0x14; pop ebx; pop esi; ret; 
0x00107abd: jne 0x107a9e; xor eax, eax; pop ebx; ret; 
0x00107c8b: jne 0x107ca6; add esp, 0x78; pop ebx; ret; 
0x00108709: jne 0x108710; add esp, 0x38; pop ebx; ret; 
0x00108789: jne 0x108790; add esp, 0x38; pop ebx; ret; 
0x00108912: jne 0x10892e; add esp, 0x74; pop ebx; pop esi; ret; 
0x001089fb: jne 0x108a3b; add esp, 0x74; pop ebx; pop esi; ret; 
0x00108aa5: jne 0x108abe; add esp, 0x74; pop ebx; pop esi; ret; 
0x0010902c: jne 0x109046; add esp, 0x74; pop ebx; pop esi; ret; 
0x0010937c: jne 0x1093c8; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x001097d8: jne 0x1097e7; add esp, 0x54; pop ebx; pop esi; ret; 
0x00109838: jne 0x109847; add esp, 0x54; pop ebx; pop esi; ret; 
0x00109898: jne 0x1098a7; add esp, 0x64; pop ebx; pop esi; ret; 
0x00109904: jne 0x109917; add esp, 0x60; pop ebx; pop esi; pop edi; ret; 
0x00109d7e: jne 0x109dc0; mov ecx, dword ptr [esp + 0x30]; mov eax, 0x127; mov ebx, 0xffffff9c; mov edx, edi; call dword ptr gs:[0x10]; 
0x0010a040: jne 0x10a080; mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x127; mov edx, edi; call dword ptr gs:[0x10]; 
0x0010a18d: jne 0x10a1b8; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 3; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0010a25d: jne 0x10a288; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 4; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0010ac8e: jne 0x10ad4e; add esp, 0x24; pop ebx; pop esi; ret; 
0x0010adee: jne 0x10aeae; add esp, 0x24; pop ebx; pop esi; ret; 
0x0010aedc: jne 0x10af00; mov ebx, dword ptr [esp + 0x20]; mov eax, 6; call dword ptr gs:[0x10]; 
0x0010b0ac: jne 0x10b0d0; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 8; call dword ptr gs:[0x10]; 
0x0010bb23: jne 0x10bb7b; add esp, 0xe4; pop ebx; pop esi; ret; 
0x0010bcb7: jne 0x10bd04; add esp, 0x44; mov eax, edx; pop ebx; pop esi; ret; 
0x0010c114: jne 0x10c11d; movzx eax, al; add esp, 0x4c; ret; 
0x0010c983: jne 0x10c991; call dword ptr [ebp + 0x24]; 
0x0010c9d7: jne 0x10c997; cld; jmp dword ptr [ebp - 0x5f]; 
0x0010cc53: jne 0x10cc61; call dword ptr [ebp + 0x24]; 
0x0010ccbe: jne 0x10cccc; call dword ptr [ebp + 0x24]; 
0x0010da13: jne 0x10da21; call dword ptr [ebp + 0x24]; 
0x0010dce3: jne 0x10dcf1; call dword ptr [ebp + 0x24]; 
0x0010dd4e: jne 0x10dd5c; call dword ptr [ebp + 0x24]; 
0x001116bd: jne 0x1116e8; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0xa8; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00111a50: jne 0x111a58; add esp, 0x24; pop ebx; pop esi; ret; 
0x00111afe: jne 0x111b06; add esp, 0x14; pop esi; pop edi; ret; 
0x001124dc: jne 0x112500; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x001125e8: jne 0x112613; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x001127d3: jne 0x11281c; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x00112883: jne 0x1128bc; add esp, 0x74; pop ebx; pop esi; ret; 
0x00114913: jne 0x114921; call dword ptr [ebp + 0x24]; 
0x00114bf3: jne 0x114c01; call dword ptr [ebp + 0x24]; 
0x00114c5e: jne 0x114c6c; call dword ptr [ebp + 0x24]; 
0x001152b0: jne 0x1152c0; add esp, 4; pop ebx; pop esi; ret; 
0x00115a9f: jne 0x115af9; add esp, 0x14; pop ebx; pop esi; ret; 
0x00115b4f: jne 0x115ba9; add esp, 0x14; pop ebx; pop esi; ret; 
0x001161c7: jne 0x11619e; or ecx, 0x80000000; mov dword ptr [eax], ecx; xor eax, eax; pop ebx; ret; 
0x0011658d: jne 0x1165b9; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x001165fc: jne 0x116609; add esp, 0x1c; ret; 
0x0011664d: jne 0x116680; mov ebx, dword ptr [esp + 0x20]; mov eax, 0x36; mov ecx, 0x5409; mov edx, 1; call dword ptr gs:[0x10]; 
0x00116a0f: jne 0x116a49; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00116bfe: jne 0x116c29; add esp, 0x54; pop ebx; pop esi; ret; 
0x00116d02: jne 0x116d29; add esp, 0x54; pop ebx; pop esi; ret; 
0x00116d8b: jne 0x116e34; add esp, 0x18; mov eax, ebx; pop ebx; ret; 
0x00116ea8: jne 0x116ecb; add esp, 0x14; pop ebx; pop esi; ret; 
0x00116f6a: jne 0x116f79; add esp, 0x54; pop ebx; pop esi; ret; 
0x0011727d: jne 0x1172a8; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x91; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011734d: jne 0x117378; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x92; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00117516: jne 0x117540; mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14d; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001176e6: jne 0x117710; mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14e; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0011804e: jne 0x118099; add esp, 0x28; pop ebx; ret; 
0x001180ee: jne 0x118139; add esp, 0x28; pop ebx; ret; 
0x0011819d: jne 0x118217; add esp, 0x24; pop ebx; pop esi; ret; 
0x0011827d: jne 0x1182f7; add esp, 0x24; pop ebx; pop esi; ret; 
0x00118379: jne 0x11837f; add esp, 0x1c; ret; 
0x00118589: jne 0x1185c7; add esp, 0x190; pop ebx; pop esi; pop edi; ret; 
0x00118d5c: jne 0x118d80; mov ebx, dword ptr [esp + 0x20]; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00118e3c: jne 0x118e60; mov ebx, dword ptr [esp + 0x20]; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x001191d6: jne 0x119207; add esp, 0x14; pop ebx; pop esi; ret; 
0x00119582: jne 0x119597; add esp, 0x3c; ret; 
0x001195f3: jne 0x1195f9; add esp, 0x1c; ret; 
0x0011985e: jne 0x119870; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x00119a27: jne 0x119a00; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x00119a88: jne 0x119a60; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x00119ba1: jne 0x119b5c; add esp, 0xc; ret; 
0x00119bf0: jne 0x119bcb; mov eax, esi; pop ebx; pop esi; ret; 
0x0011a27e: jne 0x11a23e; pop ebx; pop esi; pop edi; ret; 
0x0011a3d0: jne 0x11a3d8; add esp, 0x34; pop ebx; pop esi; ret; 
0x0011a455: jne 0x11a45d; add esp, 0x34; pop ebx; pop esi; ret; 
0x0011a4f3: jne 0x11a4fb; add esp, 0x34; pop ebx; pop esi; ret; 
0x0011a575: jne 0x11a57d; add esp, 0x34; pop ebx; pop esi; ret; 
0x0011a60e: jne 0x11a615; add esp, 0x38; pop ebx; ret; 
0x0011a693: jne 0x11a69a; add esp, 0x38; pop ebx; ret; 
0x0011a722: jne 0x11a72a; add esp, 0x34; pop ebx; pop esi; ret; 
0x0011a7b3: jne 0x11a7bc; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0011c3cd: jne 0x11c419; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0011c49f: jne 0x11c4e9; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0011c56d: jne 0x11c598; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x90; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011c8b0: jne 0x11c8fd; stc; call dword ptr [eax + 0x53]; 
0x0011d39d: jne 0x11d3a3; add esp, 0x1c; ret; 
0x0011d76e: jne 0x11d790; sub esp, 4; push edi; push 2; push ebx; call esi; 
0x0011d75b: jne 0x11d7a0; sub esp, 4; push edi; push 1; push ebx; call esi; 
0x0011d7ee: jne 0x11d810; sub esp, 4; push edi; push 2; push ebx; call esi; 
0x0011d7db: jne 0x11d820; sub esp, 4; push edi; push 1; push ebx; call esi; 
0x0011d84f: jne 0x11d87c; sub esp, 0xc; push dword ptr [ebx]; call esi; 
0x0011dc9b: jne 0x11dc65; mov dword ptr [ebp - 0x30], edx; call eax; 
0x0011e242: jne 0x11e248; ret; 
0x0011e266: jne 0x11e270; ret; 
0x0011e6a5: jne 0x11e6af; add esp, 0x418; pop ebx; ret; 
0x0011e81e: jne 0x11e84e; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0011ea4a: jne 0x11ea88; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x0011eec6: jne 0x11eedf; add esp, 0x1018; pop ebx; ret; 
0x0011f0a4: jne 0x11f0ae; add esp, 0x54; mov eax, ebx; pop ebx; pop esi; ret; 
0x0011f134: jne 0x11f13e; add esp, 0x54; mov eax, ebx; pop ebx; pop esi; ret; 
0x0011f62c: jne 0x11f620; mov eax, dword ptr [eax + 4]; pop ebx; ret; 
0x00120a13: jne 0x120a1b; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x0012128a: jne 0x121296; add esp, 0xe0; pop ebx; pop esi; pop edi; ret; 
0x00121e6d: jne 0x121e98; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x156; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00122174: jne 0x12220f; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x001222ba: jne 0x12227d; lea esi, [esi]; lea ecx, [esp + 0xc]; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x00122640: jne 0x122669; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x001226d0: jne 0x1226f9; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00122c11: jne 0x122c1d; add esp, 0xe0; pop ebx; pop esi; pop edi; ret; 
0x00122df1: jne 0x122e40; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x00122eb1: jne 0x122f08; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x00122f71: jne 0x122fc0; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x00123830: jne 0x123859; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00123fd9: jne 0x123fec; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00124421: jne 0x124449; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x001244c4: jne 0x1244e9; add esp, 0x28; pop ebx; ret; 
0x00124561: jne 0x124589; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x001245e9: jne 0x124609; add esp, 0x18; pop ebx; ret; 
0x00124669: jne 0x124689; add esp, 0x18; pop ebx; ret; 
0x001248f4: jne 0x124919; add esp, 0x18; pop ebx; ret; 
0x0012499c: jne 0x1249c9; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x00124bd1: jne 0x124bf9; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x00124c7c: jne 0x124ca9; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x00124d21: jne 0x124d49; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x00124ddc: jne 0x124e09; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x00125044: jne 0x125069; add esp, 0x18; pop ebx; ret; 
0x001250c9: jne 0x1250e9; add esp, 0x18; pop ebx; ret; 
0x00125154: jne 0x125179; add esp, 0x28; pop ebx; ret; 
0x001251ed: jne 0x1251f6; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x001252bd: jne 0x1252c3; add esp, 0x1c; ret; 
0x0012534c: jne 0x125379; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x00125438: jne 0x1254f0; mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x001258ca: jne 0x125900; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00125a07: jne 0x125a14; add esp, 0x7c; ret; 
0x00125a49: jne 0x125a4b; add byte ptr [eax], al; mov ebx, 0xb; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x00125a8f: jne 0x125a91; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00125b9e: jne 0x125ba0; add byte ptr [eax], al; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x00125d35: jne 0x125d37; add byte ptr [eax], al; xor esi, esi; mov ebx, 0xe; or dh, 1; call dword ptr gs:[0x10]; 
0x00125ff7: jne 0x12608e; add esp, 0x60; pop ebx; pop esi; pop edi; ret; 
0x00126202: jne 0x126204; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00126699: jne 0x1266c1; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00126708: jne 0x12670a; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001268d5: jne 0x1268d7; add byte ptr [eax], al; xor esi, esi; mov ebx, 0x18; or dh, 1; call dword ptr gs:[0x10]; 
0x00126eb5: jne 0x126eee; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; mov edx, 0x40; call dword ptr gs:[0x10]; 
0x001288fa: jne 0x128908; mov eax, edx; pop ebx; pop esi; ret; 
0x00128975: jne 0x128980; mov eax, edx; pop ebx; pop esi; ret; 
0x00128b69: jne 0x128b70; mov eax, edx; pop ebx; pop esi; ret; 
0x001291be: jne 0x1291c8; mov eax, edx; pop ebx; pop esi; ret; 
0x0012921e: jne 0x129228; mov eax, edx; pop ebx; pop esi; ret; 
0x00129409: jne 0x129410; mov eax, edx; pop ebx; pop esi; ret; 
0x0012d2f3: jne 0x12d2df; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x0012ed90: jne 0x12ed46; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x0012fcbe: jne 0x12fcf0; pop ebx; pop esi; pop edi; ret; 
0x0012fea6: jne 0x12fe94; add esp, 4; pop ebx; pop esi; ret; 
0x001311fa: jne 0x1311f0; mov eax, dword ptr [eax + 0x18]; ret; 
0x001312cd: jne 0x1312b5; mov edx, dword ptr [edx + 0x14]; xor eax, eax; test edx, edx; sete al; ret; 
0x001312ad: jne 0x1312c0; mov ecx, dword ptr [edx]; test ecx, ecx; je 0x1312c8; ret; 
0x00131cc1: jne 0x131cb0; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00132ab0: jne 0x132ac0; pop ebx; pop esi; pop edi; ret; 
0x00132cd2: jne 0x132cc0; call 0x132270; lea esi, [esi]; add esp, 8; pop ebx; ret; 
0x00132e4c: jne 0x132e06; mov eax, dword ptr [esp + 0x10]; pop ebx; pop esi; pop edi; ret; 
0x00133639: jne 0x133645; add esp, 0x2c; ret; 
0x001336a9: jne 0x1336b5; add esp, 0x2c; ret; 
0x0013aa54: jne 0x13aa5d; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0013aaea: jne 0x13aaf0; add esp, 0x2c; ret; 
0x0013c316: jne 0x13c300; add esp, 4; pop ebx; pop esi; ret; 
0x0013ebf0: jne 0x13ec1c; add esp, 0x24; pop ebx; pop esi; ret; 
0x0013f0c8: jne 0x13f082; mov eax, dword ptr [ebp - 0x40]; mov ebx, dword ptr [ebp - 0x30]; mov dword ptr [edi + esi], eax; mov eax, 6; call dword ptr gs:[0x10]; 
0x0013fb9a: jne 0x13fbd0; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0014047d: jne 0x1404a0; shr eax, 3; sub eax, 1; mov byte ptr [edx + 1], al; mov eax, 2; ret; 
0x00140643: jne 0x140660; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00140acc: jne 0x140ad8; movzx eax, byte ptr [eax + 1]; shr eax, 1; ret; 
0x00140b92: jne 0x140bdb; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00140e47: jne 0x140e34; out dx, al; jmp dword ptr [esi - 0x70]; 
0x001410fe: jne 0x141168; add esp, 0x14; pop ebx; pop esi; ret; 
0x00141b47: jne 0x141b50; pop ebx; pop esi; pop edi; ret; 
0x001452a6: jne 0x1452e3; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x001454b3: jne 0x1454cd; add esp, 0x18; pop ebx; ret; 
0x0014550f: jne 0x145515; add esp, 0x1c; ret; 
0x0014555b: jne 0x145561; add esp, 0x1c; ret; 
0x001469eb: jne 0x1469f7; add esp, 0x810; pop ebx; pop esi; pop edi; ret; 
0x00146cca: jne 0x146cd6; add esp, 0x110; pop ebx; pop esi; pop edi; ret; 
0x00146e5e: jne 0x146e28; mov eax, 1; pop ebx; ret; 
0x00146ed2: jne 0x146f14; add esp, 0x118; pop ebx; ret; 
0x00146f72: jne 0x146fd0; add esp, 0x118; pop ebx; ret; 
0x00147032: jne 0x14707b; add esp, 0x118; pop ebx; ret; 
0x001470d2: jne 0x1470fd; add esp, 0x11c; ret; 
0x00147379: jne 0x1473bc; add esp, 0x1c; ret; 
0x00147f31: jne 0x147f40; pop ebx; pop esi; pop edi; ret; 
0x00147f77: jne 0x147f60; pop ebx; pop esi; pop edi; ret; 
0x0014ab4c: jne 0x14ab55; movzx eax, ax; add esp, 0x2c; ret; 
0x0014d850: jne 0x14d860; add esp, 4; pop ebx; pop esi; ret; 
0x0014e25a: jne 0x14e250; ret; 
0x0014e893: jne 0x14e840; mov edx, 1; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0014edad: jne 0x14edb4; add esp, 0x28; pop ebx; ret; 
0x00150943: jne 0x1508d0; pop ebx; pop esi; ret; 
0x00150c53: jne 0x150c80; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x00151310: jne 0x151316; add esp, 0x1c; ret; 
0x00151454: jne 0x151470; mov eax, ecx; ret; 
0x00152ba2: jne 0x152b90; add esp, 8; pop ebx; ret; 
0x00153626: jne 0x15365e; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00153cc6: jne 0x153cfe; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00155c26: jne 0x155c5e; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00155fc6: jne 0x155ffe; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x001564e6: jne 0x15651e; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00156866: jne 0x15689e; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00157946: jne 0x15797e; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00157ef6: jne 0x157f2e; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00158577: jne 0x15852d; std; jmp dword ptr [esi - 0x70]; 
0x001586b2: jne 0x1586bb; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00158739: jne 0x158748; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00158f00: jne 0x158f07; add esp, 0x28; pop ebx; ret; 
0x001590e1: jne 0x159100; sub esp, 0xc; mov eax, dword ptr [ebx + 4]; push ebx; call dword ptr [eax + 0x10]; 
0x00159184: jne 0x159223; add esp, 0x34; pop ebx; pop esi; ret; 
0x001593a9: jne 0x1593d7; sub esp, 0xc; mov eax, dword ptr [edx + 4]; push edx; call dword ptr [eax + 0x10]; 
0x0015943d: jne 0x159450; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x001595d4: jne 0x159609; add esp, 0x14; pop ebx; pop esi; ret; 
0x00159ffd: jne 0x15a010; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0015a0bd: jne 0x15a0c8; add esp, 4; pop ebx; pop esi; ret; 
0x0015a139: jne 0x15a148; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0015a265: jne 0x15a2b8; mov dword ptr [eax], 0; pop ebx; ret; 
0x0015a3d3: jne 0x15a500; sub esp, 8; mov eax, dword ptr [edi + 4]; push 0x20; push edi; call dword ptr [eax + 0x18]; 
0x0015b087: jne 0x15b098; xor edx, edx; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0015b546: jne 0x15b576; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0015b5d1: jne 0x15b606; add esp, 0x14; pop ebx; pop esi; ret; 
0x0015bf6f: jne 0x15bf87; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0015c812: jne 0x15c800; pop ebx; ret; 
0x0015c926: jne 0x15c930; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0015c9c9: jne 0x15c9d8; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0015edb7: jne 0x15edd1; in eax, dx; call dword ptr [eax - 0x73]; 
0x0015efa3: jne 0x15f018; add esp, 0x18; pop ebx; ret; 
0x0016133a: jne 0x16138c; mov ebx, dword ptr [esp + 0x3c]; push ebx; call dword ptr [eax + 0x14]; 
0x00162258: jne 0x162267; add esp, 0x1c; ret; 
0x001622d4: jne 0x1622ec; add esp, 0x74; pop ebx; pop edi; ret; 
0x00162382: jne 0x162397; add esp, 0x28; pop ebx; ret; 
0x00162422: jne 0x162437; add esp, 0x28; pop ebx; ret; 
0x001624e1: jne 0x162527; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x001625d1: jne 0x162617; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x001626ef: jne 0x1626ff; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00162774: jne 0x16277a; add esp, 0x1c; ret; 
0x001627eb: jne 0x1627ff; add esp, 0x18; pop ebx; ret; 
0x001628f2: jne 0x16295f; add esp, 0x110; pop ebx; pop esi; pop edi; ret; 
0x00162d02: jne 0x162d2f; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x0016334a: jne 0x1632cf; ret 0x3901; 
0x0016364f: jne 0x163655; add esp, 0x4c; ret; 
0x001636bf: jne 0x1636c5; add esp, 0x4c; ret; 
0x0016372f: jne 0x163735; add esp, 0x4c; ret; 
0x0016379f: jne 0x1637a5; add esp, 0x4c; ret; 
0x00163802: jne 0x163808; add esp, 0x4c; ret; 
0x00163862: jne 0x163868; add esp, 0x4c; ret; 
0x001638cf: jne 0x1638d5; add esp, 0x4c; ret; 
0x0016394f: jne 0x163955; add esp, 0x4c; ret; 
0x00163d41: jne 0x163d4c; add esp, 0x94; pop ebx; pop edi; ret; 
0x00163e3d: jne 0x163e43; add esp, 0x1c; ret; 
0x00163e8c: jne 0x163ebc; add esp, 0x1c; ret; 
0x00163f01: jne 0x163ee8; add esp, 8; pop ebx; ret; 
0x00164263: jne 0x164270; mov dword ptr [ebx], 0; pop ebx; pop esi; pop edi; ret; 
0x001656a6: jne 0x1656ac; add esp, 0x2c; ret; 
0x00165757: jne 0x1657b9; add esp, 0x18; pop ebx; ret; 
0x00165847: jne 0x1658a9; add esp, 0x18; pop ebx; ret; 
0x001658e9: jne 0x165996; add esp, 0x14; mov eax, edx; pop ebx; pop esi; ret; 
0x001659d9: jne 0x165a86; add esp, 0x14; mov eax, edx; pop ebx; pop esi; ret; 
0x00165aee: jne 0x165b3b; add esp, 0x18; pop ebx; ret; 
0x00165b7e: jne 0x165bcb; add esp, 0x18; pop ebx; ret; 
0x00165c3d: jne 0x165c5b; add esp, 0x18; pop ebx; ret; 
0x00165ca2: jne 0x165cfb; add esp, 0x18; pop ebx; ret; 
0x00165d3e: jne 0x165d99; add esp, 0x18; pop ebx; ret; 
0x0016627d: jne 0x166326; add esp, 0x14; mov eax, edx; pop ebx; pop esi; ret; 
0x0016637d: jne 0x166426; add esp, 0x14; mov eax, edx; pop ebx; pop esi; ret; 
0x0016655e: jne 0x1665ab; add esp, 0x18; pop ebx; ret; 
0x001665ee: jne 0x16663b; add esp, 0x18; pop ebx; ret; 
0x0016667e: jne 0x1666cb; add esp, 0x18; pop ebx; ret; 
0x0016670e: jne 0x16675b; add esp, 0x18; pop ebx; ret; 
0x00166aff: jne 0x166b21; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00166d54: jne 0x166d5c; add esp, 0x54; pop ebx; pop esi; ret; 
0x00166dc6: jne 0x166dcf; movzx eax, al; add esp, 0x1c; ret; 
0x00166e26: jne 0x166e2f; movzx eax, al; add esp, 0x1c; ret; 
0x00166e8f: jne 0x166e96; add esp, 0x18; pop ebx; ret; 
0x00166eef: jne 0x166ef6; add esp, 0x18; pop ebx; ret; 
0x00166f82: jne 0x166f90; add esp, 0xc; ret; 
0x00166fd2: jne 0x166fe0; add esp, 0xc; ret; 
0x00167891: jne 0x16789a; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00167f71: jne 0x167f7a; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0016b456: jne 0x16b47c; add esp, 0x514; mov eax, ebx; pop ebx; pop esi; ret; 
0x0016b9eb: jne 0x16ba1c; add esp, 0x18; pop ebx; ret; 
0x0016bc71: jne 0x16bca4; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016bd01: jne 0x16bd34; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016d207: jne 0x16d219; add esp, 0x18; pop ebx; ret; 
0x0016d27f: jne 0x16d299; add esp, 0x18; pop ebx; ret; 
0x0016de0e: jne 0x16de6b; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x0016e538: jne 0x16e5c8; sub esp, 0xc; push dword ptr [esp + 0x24]; mov esi, dword ptr [esp + 0x24]; call esi; 
0x0016e58c: jne 0x16e5e6; add esp, 0xd4; mov eax, ebx; pop ebx; pop esi; ret; 
0x0016e645: jne 0x16e64e; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0016e7da: jne 0x16e77c; push 0x28; push dword ptr [ebp - 0x50]; call eax; 
0x0016e7df: jne 0x16e791; call eax; 
0x0016e8cb: jne 0x16e901; add esp, 0x28; pop ebx; ret; 
0x0016ea8c: jne 0x16eaab; add esp, 0x28; pop ebx; ret; 
0x0016eb2e: jne 0x16eb54; add esp, 0x28; pop ebx; ret; 
0x0016ec5c: jne 0x16ec9c; add esp, 0x34; pop ebx; pop esi; ret; 
0x0016f1c3: jne 0x16f1ca; add esp, 0x28; pop ebx; ret; 
0x0016f587: jne 0x16f630; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0016f97c: jne 0x16f9d8; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x001708d7: jne 0x1708e0; add esp, 4; pop ebx; pop esi; ret; 
0x00170980: jne 0x170990; add esp, 4; pop ebx; pop esi; ret; 
0x00170a2a: jne 0x170a30; pop ebx; pop esi; pop edi; ret; 
0x00170e1b: jne 0x170e28; add esp, 8; pop ebx; ret; 
0x00171a26: jne 0x171a2d; add esp, 0x18; pop ebx; ret; 
0x00171ae2: jne 0x171b04; mov eax, 4; add esp, 0xc; ret; 
0x00171f84: jne 0x171f90; add esp, 8; pop ebx; ret; 
0x00173e90: jne 0x173ea0; add esp, 8; pop ebx; ret; 
0x001745cd: jne 0x1745d3; add esp, 0x1c; ret; 
0x0017a05e: jne 0x17a066; add esp, 0x14; pop esi; pop edi; ret; 
0x0017a189: jne 0x17a1a9; add esp, 0x18; pop ebx; ret; 
0x0017a252: jne 0x17a25a; add esp, 0x14; pop ebx; pop esi; ret; 
0x0017a2cc: jne 0x17a2d4; add esp, 0x14; pop ebx; pop esi; ret; 
0x0017a3ba: jne 0x17a3bc; add byte ptr [eax], al; mov ebx, 3; call dword ptr gs:[0x10]; 
0x0018b0ee: jne 0x18b160; movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x0018cb97: jne 0x18c9f0; pop ebp; xor eax, eax; ret; 
0x00191c0c: jne 0x191c20; pop esi; pop ebp; pop ebx; xor eax, eax; ret; 
0x00192617: jne 0x192d90; pop ebx; ret; 
0x00192450: jne 0x192da6; pop ebx; ret; 
0x00193dbf: jne 0x194000; pop ebx; ret; 
0x00195489: jne 0x1956b0; pop ebx; ret; 
0x00195546: jne 0x1956d0; pop ebx; ret; 
0x0019594a: jne 0x195942; ret 0x7504; 
0x00195949: jne 0x1959c0; test dl, 4; jne 0x1959c4; add eax, 3; ret; 
0x0019594e: jne 0x1959c4; add eax, 3; ret; 
0x00195968: jne 0x1959d0; test dl, 0x40; jne 0x1959d4; add eax, 7; ret; 
0x0019596d: jne 0x1959d4; add eax, 7; ret; 
0x0019598f: jne 0x1959e0; test dh, 4; jne 0x1959e4; add eax, 0xb; ret; 
0x00195994: jne 0x1959e4; add eax, 0xb; ret; 
0x001959a8: jne 0x1959f0; test dh, 0x40; jne 0x1959f4; add eax, 0xf; ret; 
0x001959ad: jne 0x1959f4; add eax, 0xf; ret; 
0x00195c7e: jne 0x195d40; test al, 0x40; jne 0x195d50; lea eax, [edi + 7]; pop edi; ret; 
0x00195c86: jne 0x195d50; lea eax, [edi + 7]; pop edi; ret; 
0x00195b4e: jne 0x195d50; test dl, 0x40; jne 0x195dd0; lea eax, [edi + 7]; pop edi; ret; 
0x00195cd9: jne 0x195dc0; lea eax, [edi + 0xf]; pop edi; ret; 
0x00195c40: jne 0x195dd0; lea eax, [edi + 0xb]; pop edi; ret; 
0x00195bfa: jne 0x195dd0; lea eax, [edi + 0xf]; pop edi; ret; 
0x00195b9d: jne 0x195dd0; lea eax, [edi + 3]; pop edi; ret; 
0x00195b57: jne 0x195dd0; lea eax, [edi + 7]; pop edi; ret; 
0x0019629d: jne 0x196100; xor eax, eax; pop edi; ret; 
0x0019611d: jne 0x1961a0; lea eax, [edi - 0x10]; pop edi; ret; 
0x00196142: jne 0x1961d0; lea eax, [edi - 0xc]; pop edi; ret; 
0x0019616c: jne 0x196200; lea eax, [edi - 8]; pop edi; ret; 
0x00196195: jne 0x196230; lea eax, [edi - 4]; pop edi; ret; 
0x00196294: jne 0x196370; and eax, 0xf; jne 0x196100; xor eax, eax; pop edi; ret; 
0x0019661f: jne 0x196740; lea eax, [edi + 3]; pop edi; ret; 
0x00196642: jne 0x196770; lea eax, [edi + 7]; pop edi; ret; 
0x00196663: jne 0x196790; test ah, 4; jne 0x1967a0; lea eax, [edi + 0xb]; pop edi; ret; 
0x0019666c: jne 0x1967a0; lea eax, [edi + 0xb]; pop edi; ret; 
0x0019668c: jne 0x1967c0; test ah, 0x40; jne 0x1967d0; lea eax, [edi + 0xf]; pop edi; ret; 
0x00196695: jne 0x1967d0; lea eax, [edi + 0xf]; pop edi; ret; 
0x00196712: jne 0x1967e0; xor eax, eax; pop edi; ret; 
0x00196801: jne 0x1968d0; sub edx, 4; jb 0x196970; lea eax, [edi + 3]; pop edi; ret; 
0x00196832: jne 0x196900; sub edx, 8; jb 0x196970; lea eax, [edi + 7]; pop edi; ret; 
0x0019686c: jne 0x196930; sub edx, 0xc; jb 0x196970; lea eax, [edi + 0xb]; pop edi; ret; 
0x0019706a: jne 0x196c90; xor eax, eax; ret; 
0x00196b4d: jne 0x196d30; mov eax, ecx; ret; 
0x00196b45: jne 0x196d40; test al, 2; jne 0x196d30; mov eax, ecx; ret; 
0x00196cd2: jne 0x196d60; lea eax, [ecx + 4]; ret; 
0x00196cca: jne 0x196d70; test al, 0x20; jne 0x196d60; lea eax, [ecx + 4]; ret; 
0x00196cfc: jne 0x196d90; lea eax, [ecx + 8]; ret; 
0x00196d25: jne 0x196dc0; lea eax, [ecx + 0xc]; ret; 
0x00196bba: jne 0x196df0; xor eax, eax; ret; 
0x00196bf9: jne 0x196e70; xor eax, eax; ret; 
0x00196e18: jne 0x196f80; add edx, 0; jl 0x197040; mov eax, ecx; ret; 
0x00196f02: jne 0x196fb0; add edx, 4; jl 0x197040; lea eax, [ecx + 4]; ret; 
0x00196f3b: jne 0x196fe0; add edx, 8; jl 0x197040; lea eax, [ecx + 8]; ret; 
0x00196f65: jne 0x197010; add edx, 0xc; jl 0x197040; lea eax, [ecx + 0xc]; ret; 
0x00197307: jne 0x1973a0; test al, 4; jne 0x1973b0; lea eax, [edx + 3]; ret; 
0x0019730f: jne 0x1973b0; lea eax, [edx + 3]; ret; 
0x0019732a: jne 0x1973d0; test al, 0x40; jne 0x1973e0; lea eax, [edx + 7]; ret; 
0x00197332: jne 0x1973e0; lea eax, [edx + 7]; ret; 
0x00197353: jne 0x197400; test ah, 4; jne 0x197410; lea eax, [edx + 0xb]; ret; 
0x0019735c: jne 0x197410; lea eax, [edx + 0xb]; ret; 
0x0019737c: jne 0x197430; test ah, 0x40; jne 0x197440; lea eax, [edx + 0xf]; ret; 
0x00197385: jne 0x197440; lea eax, [edx + 0xf]; ret; 
0x00197820: jne 0x197830; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x00197852: jne 0x197910; sub edi, 4; jb 0x1979b0; lea eax, [eax + 3]; pop edi; ret; 
0x0019773f: jne 0x197b05; add eax, 3; pop edi; ret; 
0x00197765: jne 0x197b19; add eax, 7; pop edi; ret; 
0x00197783: jne 0x197b28; test dh, 4; jne 0x197b2d; add eax, 0xb; pop edi; ret; 
0x0019778c: jne 0x197b2d; add eax, 0xb; pop edi; ret; 
0x001977b5: jne 0x197b41; add eax, 0xf; pop edi; ret; 
0x00197ff7: jne 0x198040; pop edi; pop esi; pop ebx; ret; 
0x00198128: jne 0x198130; pop ebx; ret; 
0x001981dc: jne 0x1982a0; test dl, 0xf; jne 0x198320; lea eax, [ecx + 4]; ret; 
0x001982b7: jne 0x1982d0; test dh, 0xf; jne 0x198320; lea eax, [ecx + 0xc]; ret; 
0x001982e6: jne 0x198300; lea eax, [ecx + 4]; ret; 
0x001982f3: jne 0x198310; lea eax, [ecx + 0xc]; ret; 
0x001982bc: jne 0x198320; lea eax, [ecx + 0xc]; ret; 
0x001981e5: jne 0x198320; lea eax, [ecx + 4]; ret; 
0x00198477: jne 0x198530; lea eax, [edi - 0x10]; pop edi; ret; 
0x0019846f: jne 0x198540; test al, 0xf0; jne 0x198530; lea eax, [edi - 0x10]; pop edi; ret; 
0x00198513: jne 0x198550; test al, 0xf0; jne 0x198530; lea eax, [edi - 0x10]; pop edi; ret; 
0x00198543: jne 0x198560; lea eax, [edi - 8]; pop edi; ret; 
0x00198bab: jne 0x198be0; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x00198bc3: jne 0x198bf0; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x001a06ef: jne 0x1a06d4; add esp, 4; pop ebx; pop esi; ret; 
0x001a0c3f: jne 0x1a0c10; pop ebx; pop esi; pop edi; ret; 
0x001a0dae: jne 0x1a0d94; add esp, 4; pop ebx; pop esi; ret; 
0x001a0e71: jne 0x1a0e58; add esp, 4; pop ebx; pop esi; ret; 
0x001a0f82: jne 0x1a0f70; pop ebx; pop esi; pop edi; ret; 
0x001a1248: jne 0x1a1250; add esp, 4; pop ebx; pop esi; ret; 
0x00020f4b: jne 0x20f19; call dword ptr [ebp - 0x38]; 
0x0009a60f: jne 0x20f6f; pop ebx; pop esi; pop edi; ret; 
0x00171ace: jne 0x21303; mov eax, 8; add esp, 0xc; ret; 
0x00171b79: jne 0x21308; add esp, 8; xor eax, eax; pop ebx; ret; 
0x000213e5: jne 0x213c2; mov ecx, dword ptr [eax - 0xe8]; cmp dword ptr [ecx + 0x94], edx; jne 0x213c2; ret; 
0x000213f3: jne 0x213c2; ret; 
0x00021539: jne 0x21553; mov edx, 1; xor ebx, ebx; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x00021dd3: jne 0x21dd9; add esp, 0x1c; ret; 
0x00021e71: jne 0x21ea6; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0002bb52: jne 0x2bb82; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0002f7f8: jne 0x2f800; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000305c4: jne 0x305d0; mov eax, edx; add esp, 0xc; ret; 
0x00030604: jne 0x30610; mov eax, edx; add esp, 0xc; ret; 
0x00034eba: jne 0x34e99; ret; 
0x00035ea6: jne 0x35eb0; fadd st(0); add esp, 0x18; pop ebx; ret; 
0x00036205: jne 0x36210; fadd st(0); add esp, 0x18; pop ebx; ret; 
0x000364b1: jne 0x364c0; fadd st(0); add esp, 8; pop ebx; ret; 
0x0003661c: jne 0x36626; mov eax, edx; add esp, 0x1c; ret 4; 
0x00037272: jne 0x37279; add esp, 0x18; pop ebx; ret; 
0x000372e2: jne 0x372f0; mov dword ptr [ebx + 0x18], eax; add esp, 8; xor eax, eax; pop ebx; ret; 
0x000375e6: jne 0x375f1; add esp, 0x124; pop ebx; pop esi; ret; 
0x0003768a: jne 0x37698; add esp, 8; pop ebx; ret; 
0x00037919: jne 0x37920; add esp, 8; pop ebx; ret; 
0x000379dc: jne 0x37a00; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xb3; mov ecx, 8; call dword ptr gs:[0x10]; 
0x00037b86: jne 0x37b98; add esp, 0x114; pop ebx; pop edi; ret; 
0x00037c06: jne 0x37c18; add esp, 0x114; pop ebx; pop edi; ret; 
0x00037c82: jne 0x37cc6; add esp, 0x94; pop ebx; pop edi; ret; 
0x00037d21: jne 0x37d2c; add esp, 0x94; pop ebx; pop edi; ret; 
0x00037da0: jne 0x37db7; add esp, 0x98; pop ebx; ret; 
0x00037f46: jne 0x37f7c; add esp, 0x28; pop ebx; ret; 
0x00038318: jne 0x38321; add esp, 0x12c; ret; 
0x0003839c: jne 0x383a0; mov edx, dword ptr [eax]; xor eax, eax; test edx, edx; sete al; ret; 
0x00038607: jne 0x38658; mov eax, 0xb1; mov esi, 8; mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x0003882f: jne 0x38837; add esp, 0x24; pop ebx; pop esi; ret; 
0x00038988: jne 0x3899f; add esp, 0x98; pop ebx; ret; 
0x00038a08: jne 0x38a1f; add esp, 0x98; pop ebx; ret; 
0x00038a90: jne 0x38a99; add esp, 0x9c; ret; 
0x00038bfb: jne 0x38c17; add esp, 0x220; pop ebx; pop esi; pop edi; ret; 
0x0003930a: jne 0x3930c; push dword ptr [esi]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0003ac51: jne 0x3ac60; add esp, 4; pop ebx; pop esi; ret; 
0x0003ad60: jne 0x3ad66; add esp, 0x2c; ret; 
0x0003ae90: jne 0x3ae96; add esp, 0x2c; ret; 
0x0003b171: jne 0x3b1ac; add esp, 0x18; pop ebx; ret; 
0x0003b6f2: jne 0x3b6f8; add esp, 0x1c; ret; 
0x0003b745: jne 0x3b74b; add esp, 0x1c; ret; 
0x0003b7a2: jne 0x3b7a8; add esp, 0x1c; ret; 
0x0003b7f5: jne 0x3b7fb; add esp, 0x1c; ret; 
0x0003b842: jne 0x3b848; add esp, 0x1c; ret; 
0x0003b895: jne 0x3b89b; add esp, 0x1c; ret; 
0x0003bc2d: jne 0x3bc58; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x163; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0003e766: jne 0x3e77d; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x000413ef: jne 0x413ea; call dword ptr [eax - 0x18]; 
0x0004157a: jne 0x41575; call dword ptr [eax - 0x18]; 
0x000415ad: jne 0x415a8; call dword ptr [eax - 0x18]; 
0x00041696: jne 0x416ad; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0004466b: jne 0x44666; call dword ptr [eax - 0x18]; 
0x00044744: jne 0x4473f; call dword ptr [eax - 0x18]; 
0x0004478a: jne 0x44785; call dword ptr [eax - 0x18]; 
0x00044916: jne 0x4492d; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00047816: jne 0x47811; call dword ptr [eax - 0x18]; 
0x000478f5: jne 0x478f0; call dword ptr [eax - 0x18]; 
0x000478f5: jne 0x478f0; call dword ptr [eax - 0x18]; ret 0xfe80; 
0x000479c7: jne 0x479c2; call dword ptr [eax - 0x18]; 
0x000480fb: jne 0x4815c; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000489ac: jne 0x489b5; add esp, 0x42c; ret; 
0x00048a21: jne 0x489ff; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00048a76: jne 0x48a60; lea eax, [ebx + 0x18b0]; mov byte ptr [eax + ecx], 0; pop ebx; pop esi; ret; 
0x0004a08b: jne 0x4a080; add esp, 8; pop ebx; ret; 
0x0004ab6e: jne 0x4ab72; push ecx; ret; 
0x0004ad44: jne 0x4ad6e; sub esp, 0x18; mov ecx, esp; mov ebx, 0x3001; mov eax, 0x180; call dword ptr gs:[0x10]; 
0x0004ae14: jne 0x4ae18; push ecx; ret; 
0x0004ae7d: jne 0x4ae70; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0004ae9d: jne 0x4ae88; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x0004af7d: jne 0x4af70; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0004af9d: jne 0x4af88; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x0004b1ee: jne 0x4b1e0; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x0004d111: jne 0x4d11c; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x0004d19f: jne 0x4d1aa; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x0004d206: jne 0x4d21d; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00051144: jne 0x5113f; call dword ptr [eax - 0x18]; 
0x000511b3: jne 0x511ae; call dword ptr [eax - 0x18]; 
0x00051227: jne 0x51222; call dword ptr [eax - 0x18]; 
0x00051288: jne 0x51293; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000518ab: jne 0x518cd; add esp, 0x434; pop ebx; pop esi; ret; 
0x00057b37: jne 0x57b5d; add al, byte ptr [eax]; add esp, 0x1c; ret; 
0x0005824d: jne 0x58258; add esp, 8; pop ebx; ret; 
0x000582e0: jne 0x582ea; add esp, 0x1018; pop ebx; ret; 
0x00058367: jne 0x5836e; add esp, 0x78; pop ebx; ret; 
0x0005894c: jne 0x5895f; add esp, 0x1c; ret; 
0x00058c34: jne 0x58c44; mov dword ptr [edx + 8], 0; xchg dword ptr [edx], eax; cmp eax, 1; jg 0x58c48; ret; 
0x00058cd7: jne 0x58ce0; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00071d1b: jne 0x71d25; push esi; call dword ptr [ebx + 0x1c]; 
0x0007230e: jne 0x72318; push esi; call dword ptr [ebx + 0x1c]; 
0x00073344: jne 0x7332a; push dword ptr [ebp + 8]; push edx; call dword ptr [ebx + 0x1c]; 
0x00073347: jne 0x73351; push edx; call dword ptr [ebx + 0x1c]; 
0x00073a97: jne 0x73aa5; push esi; call dword ptr [ebx + 0x2c]; 
0x00073a94: jne 0x73aaa; push dword ptr [ebp + 0xc]; push esi; call dword ptr [ebx + 0x2c]; 
0x000748a9: jne 0x7488f; push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x000748ac: jne 0x748b6; push esi; call dword ptr [eax + 0x1c]; 
0x0007587c: jne 0x75870; ret; 
0x00075d93: jne 0x75df8; sub esp, 0xc; mov eax, dword ptr [eax + 0x88]; push esi; call dword ptr [eax + 0x34]; 
0x0007601f: jne 0x75faf; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x0007617f: jne 0x7610f; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x00078ad0: jne 0x78bbe; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x00078dcf: jne 0x78de0; mov eax, dword ptr [edx + 0x28]; cmp dword ptr [edx + 0x24], eax; cmovne eax, ecx; ret; 
0x00078e9e: jne 0x78e74; push edx; push ebx; push esi; call eax; 
0x0007be06: jne 0x7be1c; add esp, 0x28; pop ebx; ret; 
0x0007c126: jne 0x7c130; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x0007cbb2: jne 0x7ccd7; sub esp, -0x80; pop ebx; pop esi; pop edi; ret; 
0x0007e6d0: jne 0x7e6e0; add esp, 8; pop ebx; ret; 
0x0007eefb: jne 0x7ef00; ret; 
0x0007f13c: jne 0x7f130; ret; 
0x0007ff0c: jne 0x7ff00; ret; 
0x0008017a: jne 0x801a8; add esp, 4; pop ebx; pop esi; ret; 
0x000802b8: jne 0x8027a; add esp, 4; pop ebx; pop esi; ret; 
0x00080b5a: jne 0x80b50; ret; 
0x00080ba8: jne 0x80bb8; sub edx, dword ptr [eax + 0xc]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x00081ffa: jne 0x82031; add esp, 0x14; pop ebx; pop esi; ret; 
0x000821b9: jne 0x821dd; add esp, 0x2c; ret; 
0x00082321: jne 0x8234b; add esp, 0x2c; ret; 
0x0008240d: jne 0x8243b; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x00082504: jne 0x82529; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x000826f0: jne 0x82715; add esp, 0x24; pop ebx; pop esi; ret; 
0x0008278c: jne 0x82796; and edx, 0x38; cmp edx, 8; je 0x82797; ret; 
0x00082a68: jne 0x82a70; add esp, 0x14; pop ebx; pop esi; ret; 
0x00082aeb: jne 0x82b2b; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00082bc8: jne 0x82c01; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x00082cff: jne 0x82d10; xend; xor eax, eax; add esp, 0xc; ret; 
0x000830ca: jne 0x83108; mov eax, 0xf0; xor edx, edx; call dword ptr gs:[0x10]; 
0x00084610: jne 0x8323bbe8; pushal; or dh, bh; xor eax, eax; ret; 
0x0008383f: jne 0x837e1; mov edx, 0xfffffffe; xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x00084613: jne 0x84630; and dword ptr [eax + 8], 0xfffffffe; xor eax, eax; ret; 
0x00084c92: jne 0x84d87; add esp, 0x94; pop ebx; pop esi; ret; 
0x00084ecf: jne 0x84ef3; add esp, 0x24; pop ebx; pop esi; ret; 
0x00086502: jne 0x86508; add esp, 0x2c; ret; 
0x000865c0: jne 0x865c9; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00087669: jne 0x87228; lea ecx, [ebp + 0x22c]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x00087641: jne 0x87664; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x00087d8d: jne 0x87d98; add esp, 0xc; ret; 
0x00087d82: jne 0x87db9; mov eax, dword ptr [edx + 0x84]; and eax, 0x10; jne 0x87d98; add esp, 0xc; ret; 
0x00088668: jne 0x88698; mov eax, edx; pop ebx; pop esi; ret; 
0x00088966: jne 0x88970; xor eax, eax; pop ebx; ret; 
0x000894d2: jne 0x894d8; add dword ptr [edx + 4], 1; add esp, 0xc; ret; 
0x000895d3: jne 0x895db; add esp, 0x14; pop ebx; pop esi; ret; 
0x000895fc: jne 0x8960a; mov edx, dword ptr gs:[0x68]; mov dword ptr [eax + 8], edx; xor edx, edx; mov eax, edx; ret; 
0x0008ae0e: jne 0x8ae15; add esp, 0x28; pop ebx; ret; 
0x0008ae9e: jne 0x8aea4; add esp, 0x2c; ret; 
0x0008bcae: jne 0x8bcc0; and dword ptr [eax], 0x7fffffff; xor eax, eax; ret; 
0x0008bcf3: jne 0x8bd10; or dword ptr [eax], 0x40000000; xor eax, eax; ret; 
0x0008bdc1: jne 0x8be00; test al, 1; je 0x8be00; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0008c202: jne 0x8c208; add esp, 0x2c; ret; 
0x0008c662: jne 0x8c668; add esp, 0x2c; ret; 
0x0008cb4e: jne 0x8cb54; add esp, 0x2c; ret; 
0x0008cf9e: jne 0x8cfa4; add esp, 0x2c; ret; 
0x0008cff6: jne 0x8d000; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0008d0b6: jne 0x8d08a; mov eax, 0x10; pop ebx; ret; 
0x0008defa: jne 0x8df48; mov ecx, esi; mov ebx, dword ptr [esp + 0xa0]; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x0008df35: jne 0x8df67; add esp, 0x90; pop ebx; pop esi; pop edi; ret; 
0x0008e06b: jne 0x8e070; xor eax, eax; ret; 
0x0008e0d8: jne 0x8e0e2; and eax, 0x38; cmp eax, 8; je 0x8e0e3; ret; 
0x0008e193: jne 0x8e1a9; add esp, 0x24; pop ebx; pop esi; ret; 
0x0008e3a9: jne 0x8e3b0; xor eax, eax; pop ebx; pop esi; ret; 
0x0008e453: jne 0x8e48b; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0008e9c2: jne 0x8e9d0; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0008f148: jne 0x8f158; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0008f1fc: jne 0x8f233; add esp, 0x24; pop ebx; pop esi; ret; 
0x0008f29e: jne 0x8f2eb; add esp, 0x124; pop ebx; pop esi; ret; 
0x0008f490: jne 0x8f4a0; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0008f4d3: jne 0x8f4c6; xor eax, eax; pop ebx; ret; 
0x0008f521: jne 0x8f530; xor eax, eax; pop ebx; ret; 
0x0008fde7: jne 0x8fe24; add esp, 0x38; pop ebx; ret; 
0x0008fe81: jne 0x8feaf; mov eax, 3; add esp, 0xc; ret; 
0x0008fef3: jne 0x8ff1f; mov eax, 3; add esp, 0xc; ret; 
0x0008ff51: jne 0x8ff7f; mov eax, 3; add esp, 0xc; ret; 
0x0008ffb9: jne 0x8ffe7; mov eax, 3; add esp, 0xc; ret; 
0x00090057: jne 0x90077; add esp, 0x2c; ret; 
0x000900b5: jne 0x900df; mov eax, 3; add esp, 0xc; ret; 
0x0009016d: jne 0x901a7; add esp, 0x14; pop ebx; pop esi; ret; 
0x000901e1: jne 0x9020f; mov eax, 3; add esp, 0xc; ret; 
0x00090245: jne 0x9026f; mov eax, 3; add esp, 0xc; ret; 
0x000902e3: jne 0x90307; add esp, 0x2c; ret; 
0x00090341: jne 0x9036f; mov eax, 3; add esp, 0xc; ret; 
0x000903a1: jne 0x903cf; mov eax, 3; add esp, 0xc; ret; 
0x0009043b: jne 0x9046f; mov eax, 3; add esp, 0xc; ret; 
0x000904a1: jne 0x904cf; mov eax, 3; add esp, 0xc; ret; 
0x00090553: jne 0x90577; add esp, 0x18; pop ebx; ret; 
0x000905b5: jne 0x905df; mov eax, 3; add esp, 0xc; ret; 
0x00090635: jne 0x9065f; mov eax, 3; add esp, 0xc; ret; 
0x000906e3: jne 0x90727; add esp, 0x124; pop ebx; pop esi; ret; 
0x0009078e: jne 0x907db; add esp, 0x124; pop ebx; pop esi; ret; 
0x00090af7: jne 0x90ae8; mov dword ptr [ecx + 0x10], eax; mov dword ptr [esi + 0x10], ecx; pop ebx; pop esi; ret; 
0x00090b73: jne 0x90b68; mov eax, dword ptr [ecx + 0x10]; mov dword ptr [edx + 0x10], eax; pop ebx; pop esi; ret; 
0x0009121c: jne 0x91210; pop ebx; ret; 
0x000918ce: jne 0x918d0; mov dword ptr [esp], ebp; call 0x20140; mov dword ptr [esp], edi; call esi; 
0x00091ac4: jne 0x91a60; mov edx, 1; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0009222d: jne 0x92234; add esp, 0x28; pop ebx; ret; 
0x00092db2: jne 0x92dbe; add esp, 0x90; pop ebx; pop esi; pop edi; ret; 
0x000931c6: jne 0x931e8; add ebx, 1; mov eax, 0x115; call dword ptr gs:[0x10]; 
0x00093407: jne 0x93450; mov ebx, dword ptr [esp + 0x40]; mov edx, dword ptr [esp + 0x48]; mov eax, 0x118; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000935e7: jne 0x935ef; add esp, 0x24; pop ebx; pop esi; ret; 
0x000938b5: jne 0x938bc; add esp, 0x28; pop ebx; ret; 
0x000938e7: jne 0x93930; add ebx, 1; mov eax, 0x116; call dword ptr gs:[0x10]; 
0x00093d8e: jne 0x93e2f; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00093e93: jne 0x93e9a; add esp, 0x38; pop ebx; ret; 
0x0009431a: jne 0x94337; add esp, 0xb4; pop ebx; pop esi; ret; 
0x00094703: jne 0x94710; ret; 
0x000952bc: jne 0x952c4; add esp, 0x24; pop ebx; pop esi; ret; 
0x000959b6: jne 0x95a00; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00099cc8: jne 0x99cd3; add esp, 0x38; mov eax, ebx; pop ebx; ret 4; 
0x0009a525: jne 0x9a479; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax - 0x148]; call dword ptr [eax]; 
0x0009a595: jne 0x9a588; xor eax, eax; ret; 
0x0009a5fa: jne 0x9a5d0; sub esp, 0xc; push eax; call edx; 
0x0009a653: jne 0x9a648; mov eax, ecx; ret; 
0x0009ae66: jne 0x9ae72; add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret 4; 
0x0009afe4: jne 0x9aff8; lea eax, [edx - 0x174c00]; and ch, 2; lea edx, [edx - 0xa02b0]; cmovne eax, edx; ret; 
0x0009b464: jne 0x9b478; lea eax, [edx - 0x187a30]; and ch, 2; lea edx, [edx - 0x9ee40]; cmovne eax, edx; ret; 
0x0009bf64: jne 0x9bf78; lea eax, [edx - 0x175680]; and ch, 2; lea edx, [edx - 0x95fe0]; cmovne eax, edx; ret; 
0x0009c214: jne 0x9c228; lea eax, [edx - 0x175af0]; and ch, 2; lea edx, [edx - 0x9d450]; cmovne eax, edx; ret; 
0x0009c254: jne 0x9c268; lea eax, [edx - 0x175a10]; and ch, 2; lea edx, [edx - 0x9af40]; cmovne eax, edx; ret; 
0x0009c294: jne 0x9c2a8; lea eax, [edx - 0x175b50]; and ch, 2; lea edx, [edx - 0x9d420]; cmovne eax, edx; ret; 
0x0009c2d4: jne 0x9c2e8; lea eax, [edx - 0x175a80]; and ch, 2; lea edx, [edx - 0x9af10]; cmovne eax, edx; ret; 
0x0009c447: jne 0x9c400; mov dword ptr [eax], esi; pop ebx; pop esi; pop edi; ret; 
0x0009c6f0: jne 0x9c6b8; mov dword ptr [eax + 0x1c], esi; pop ebx; pop esi; ret; 
0x0009d345: jne 0x9d330; pop ebx; pop esi; pop edi; ret; 
0x0009d491: jne 0x9d488; mov eax, ecx; ret; 
0x0009de30: jne 0x9de18; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0009e109: jne 0x9e10c; add byte ptr [ecx - 0x3b7c0389], cl; adc byte ptr [ecx], ch; ret; 
0x0009e265: jne 0x9e277; pop ebx; pop esi; pop edi; ret; 
0x0009e84d: jne 0x9e840; add eax, 1; test dl, dl; mov edx, 0; cmove eax, edx; ret; 
0x0009fa72: jne 0x9fa61; mov eax, esi; or byte ptr [ebx], dl; pop ebx; pop esi; ret; 
0x000a1af4: jne 0xa1ae8; mov dword ptr [esi], edx; pop ebx; pop esi; ret; 
0x000a1c9d: jne 0xa1c90; mov eax, edx; pop ebx; ret; 
0x000a1ce1: jne 0xa1cd0; mov eax, edx; pop ebx; pop esi; ret; 
0x000a1e41: jne 0xa1e30; mov eax, edx; pop ebx; ret; 
0x000a586c: jne 0xa5ed0; pop edi; pop ebx; ret; 
0x000a5f6c: jne 0xa5ed1; pop ebx; ret; 
0x000a9d41: jne 0xaa330; cmp byte ptr [eax], 1; sbb eax, -1; pop edi; pop ebx; ret; 
0x000aa3cc: jne 0xaa331; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000aa4f1: jne 0xaa331; pop ebx; ret; 
0x000abb78: jne 0xac520; pop edi; pop esi; pop ebx; ret; 
0x000ad1ea: jne 0xadc50; pop edi; pop esi; pop ebx; ret; 
0x000ae04a: jne 0xae042; ret 0x7504; 
0x000b034a: jne 0xb0342; ret 0x7504; 
0x000b3bf2: jne 0xb3ce0; pmovmskb eax, xmm1; bsf eax, eax; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000b3ca4: jne 0xb3d00; xor eax, eax; pop edi; ret; 
0x000b3c6a: jne 0xb3d20; xor eax, eax; pop edi; ret; 
0x000b3eda: jne 0xb3f90; pmovmskb eax, xmm1; bsr eax, eax; add eax, ecx; ret; 
0x000b3f4a: jne 0xb3fc0; xor eax, eax; ret; 
0x000b3f79: jne 0xb3fe0; xor eax, eax; ret; 
0x000b4189: jne 0xb4180; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000b4391: jne 0xb43d0; pmovmskb eax, xmm1; bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x000b499b: jne 0xb49a1; xor eax, eax; pop ebx; ret; 
0x000b4a2c: jne 0xb4c38; pop esi; xor eax, eax; pop ebx; ret; 
0x000b4aa0: jne 0xb4c4c; pop esi; xor eax, eax; pop ebx; ret; 
0x000b5365: jne 0xb536a; lea eax, [esi + 3]; pop esi; pop edi; ret; 
0x000b5416: jne 0xb540c; xor eax, eax; ret; 
0x000b55a1: jne 0xb55a5; xor eax, eax; ret; 
0x000b584d: jne 0xb5848; pop esi; ret; 
0x000b5c75: jne 0xb5c60; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x000b5fc8: jne 0xb5fa0; lea ebx, [eax + 8]; mov eax, ebx; pop ebx; ret; 
0x000b6014: jne 0xb6028; lea eax, [edx - 0x160060]; and ch, 2; lea edx, [edx - 0x924b0]; cmovne eax, edx; ret; 
0x000b63a0: jne 0xb64b5; add esp, 0x40; pop ebx; pop esi; pop edi; ret; 
0x000b72f4: jne 0xb72e8; ret; 
0x000b8d06: jne 0xb8d1d; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x000bba5d: jne 0xbba58; call dword ptr [eax - 0x18]; 
0x000bbb9f: jne 0xbbb9a; call dword ptr [eax - 0x18]; 
0x000bbbc2: jne 0xbbbbd; call dword ptr [eax - 0x18]; 
0x000bbcd6: jne 0xbbced; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x000be86e: jne 0xbe869; call dword ptr [eax - 0x18]; 
0x000be9f6: jne 0xbe9f1; call dword ptr [eax - 0x18]; 
0x000bea5f: jne 0xbea5a; call dword ptr [eax - 0x18]; 
0x000beae6: jne 0xbeafd; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x000c1502: jne 0xc14fd; call dword ptr [eax - 0x18]; 
0x000c15e0: jne 0xc15db; call dword ptr [eax - 0x18]; 
0x000c1675: jne 0xc1670; call dword ptr [eax - 0x18]; 
0x000c176c: jne 0xc17bb; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000c183c: jne 0xc189d; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000c191c: jne 0xc195b; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000c41c2: jne 0xc41ec; add esp, 0x18; pop ebx; ret; 
0x000c4655: jne 0xc46c3; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000c51e6: jne 0xc51fd; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x000c8c0a: jne 0xc8c05; call dword ptr [eax - 0x18]; 
0x000c8c9e: jne 0xc8c99; call dword ptr [eax - 0x18]; 
0x000c8d37: jne 0xc8d32; call dword ptr [eax - 0x18]; 
0x000c8e08: jne 0xc8e13; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000c8e91: jne 0xc8e9c; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000c8f1f: jne 0xc8f2a; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000c9b4f: jne 0xc9ca0; pop edi; pop esi; ret; 
0x000c9b2e: jne 0xc9ca0; xor eax, eax; pop edi; pop esi; ret; 
0x000c9d17: jne 0xc9d08; mov eax, ecx; pop ebx; pop esi; ret; 
0x000c9f7e: jne 0xc9f58; mov eax, ecx; ret; 
0x000ca04b: jne 0xca040; ret; 
0x000ca07c: jne 0xca070; mov eax, ecx; pop ebx; ret; 
0x000cad12: jne 0xcad27; add esp, 0x28; pop ebx; ret; 
0x000cad92: jne 0xcad98; add esp, 0x1c; ret; 
0x000caddd: jne 0xcade4; add esp, 0x38; pop ebx; ret; 
0x000cae3d: jne 0xcae44; add esp, 0x48; pop ebx; ret; 
0x000cbce3: jne 0xcbcea; add esp, 0x28; pop ebx; ret; 
0x000cbd44: jne 0xcbd6b; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000cbf39: jne 0xcbf79; add esp, 0x28; pop ebx; ret; 
0x000cbff2: jne 0xcc053; add esp, 0x24; pop ebx; pop esi; ret; 
0x000cc2fd: jne 0xcc318; add esp, 0x38; pop ebx; ret; 
0x000cea24: jne 0xcea49; add esp, 0x24; pop ebx; pop esi; ret; 
0x000ceabc: jne 0xceae1; add esp, 0x24; pop ebx; pop esi; ret; 
0x000ceccc: jne 0xceced; add esp, 0x50; pop ebx; pop esi; pop edi; ret; 
0x000cef0f: jne 0xcef18; add esp, 0x28; xor eax, eax; pop ebx; ret; 
0x000cf92d: jne 0xcf938; add esp, 4; pop ebx; pop esi; ret; 
0x000d4836: jne 0xd483c; add esp, 0x1c; ret; 
0x000d6ec6: jne 0xd6ecc; add esp, 0x1c; ret; 
0x000d702a: jne 0xd7062; add esp, 0x28; pop ebx; ret; 
0x000d7093: jne 0xd70a1; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x000d7249: jne 0xd7250; add esp, 0x28; pop ebx; ret; 
0x000d7301: jne 0xd7340; lea ecx, [esp + 4]; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x000d72b8: jne 0xd735c; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000d772b: jne 0xd77f0; mov eax, 0x10b; mov ecx, dword ptr [esp + 0x74]; mov edx, edi; call dword ptr gs:[0x10]; 
0x000d7b7e: jne 0xd7bb3; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x000d7f96: jne 0xd7f6a; add esp, 8; xor eax, eax; pop ebx; ret; 
0x000d8429: jne 0xd8433; add esp, 0xe8; pop ebx; ret; 
0x000d84ae: jne 0xd84b5; add esp, 0x38; pop ebx; ret; 
0x000d8555: jne 0xd855f; add esp, 0xe8; pop ebx; ret; 
0x000d85de: jne 0xd85e5; add esp, 0x38; pop ebx; ret; 
0x000d8740: jne 0xd877c; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x000d976e: jne 0xd97b8; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x000da80e: jne 0xda859; add esp, 0x28; pop ebx; ret; 
0x000dd739: jne 0xdd7e3; add esp, 0x68; pop ebx; ret; 
0x000dda2d: jne 0xddaf3; add esp, 0x64; pop ebx; pop esi; ret; 
0x000ddceb: jne 0xddd08; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x000ddda9: jne 0xdddb0; add esp, 8; pop ebx; ret; 
0x000dde3f: jne 0xdde84; add esp, 0x34; pop ebx; pop esi; ret; 
0x000de3d4: jne 0xde3d9; pop ecx; jmp ecx; 
0x000de3d4: jne 0xde3d9; pop ecx; jmp ecx; ret; 
0x000df3fa: jne 0xdf449; add esp, 0x28; pop ebx; ret; 
0x000df49a: jne 0xdf4e9; add esp, 0x28; pop ebx; ret; 
0x000df763: jne 0xdf7b9; add esp, 0x24; pop ebx; pop esi; ret; 
0x000df813: jne 0xdf869; add esp, 0x24; pop ebx; pop esi; ret; 
0x000dfdb2: jne 0xdfdc0; lea esi, [esi]; mov eax, 0x40; ret; 
0x000e0c9d: jne 0xe0c7e; xor eax, eax; pop ebx; ret; 
0x000e0e6b: jne 0xe0e86; add esp, 0x78; pop ebx; ret; 
0x000e335d: jne 0xe333e; xor eax, eax; pop ebx; ret; 
0x000e352b: jne 0xe3546; add esp, 0x78; pop ebx; ret; 
0x000e5a92: jne 0xe5a61; xor eax, eax; ret; 
0x000e5a71: jne 0xe5a89; mov eax, 1; ret; 
0x000f43f5: jne 0xf443f; stc; dec dword ptr [ebp - 0x6b7af71]; call dword ptr [eax - 0x77]; 
0x000f838d: jne 0xf836e; xor eax, eax; pop ebx; ret; 
0x000f855b: jne 0xf8576; add esp, 0x78; pop ebx; ret; 
0x000f8f6d: jne 0xf8f4e; xor eax, eax; pop ebx; ret; 
0x000f913b: jne 0xf9156; add esp, 0x78; pop ebx; ret; 
0x000fb120: jne 0xfb19f; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000fb24b: jne 0xfb20f; lea esi, [esi]; lea ecx, [esp + 4]; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x000fbbf5: jne 0xfbbe8; mov edx, dword ptr [edx + 8]; pop ebx; pop esi; mov eax, edx; ret; 
0x000ff69d: jne 0xff680; pop ebx; pop esi; pop edi; ret; 
0x0012390b: jno 0x12390d; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001322c1: jno 0x132302; stc; call dword ptr [eax - 0x18]; 
0x001338f2: jno 0x1338f8; mov edi, dword ptr [ecx + 8]; mov ebp, dword ptr [ecx + 0xc]; nop; jmp edx; 
0x0014ab7a: jno 0x14ab7e; je 0x14ab88; pop ebx; pop esi; ret; 
0x00166a06: jno 0x16698b; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00196bfb: jno 0x196bff; add byte ptr [eax], al; xor eax, eax; ret; 
0x001a0aec: jno 0x1a0ae7; call dword ptr [eax - 0x73]; 
0x00026021: jno 0x2601c; call dword ptr [eax - 0x73]; 
0x0002c0d6: jno 0x2c0d1; call dword ptr [eax - 0x73]; 
0x0002c2c3: jno 0x2c2be; call dword ptr [eax - 0x73]; 
0x0002d85b: jno 0x2d856; call dword ptr [eax - 0x73]; 
0x0002db0b: jno 0x2db06; call dword ptr [eax - 0x73]; 
0x0002ea5d: jno 0x2ea58; call dword ptr [eax - 0x73]; 
0x0002eaaa: jno 0x2eaa5; call dword ptr [eax - 0x73]; 
0x0002eacf: jno 0x2eaca; call dword ptr [eax - 0x73]; 
0x00079b91: jno 0x79b8d; jmp dword ptr [esi - 0x70]; 
0x0008818c: jno 0x881cd; stc; call dword ptr [eax - 0x18]; 
0x000d0b7e: jno 0xd0bc5; stc; call dword ptr [eax + 0x56]; 
0x0010fac1: jnp 0x10fac9; int1; jmp dword ptr [ebp - 0x75]; 
0x001196b8: jnp 0x1196b9; cmp edi, 3; cmovae esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x001238e2: jnp 0x1238e4; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000edde9: jnp 0x149be634; mov eax, 0xc0833803; add al, 0x39; ret 0xf775; 
0x00160f71: jnp 0x160f9d; std; jmp dword ptr [esi - 0x70]; 
0x00169cef: jnp 0x169cdf; dec dword ptr [ebx + 0x291c244c]; ret; 
0x00179e1e: jnp 0x179e6a; stc; call dword ptr [eax + 0x53]; 
0x00196fc4: jnp 0x196f53; inc ecx; push es; ret; 
0x0016818f: jnp 0x41a221ea; or byte ptr [ecx], bh; ret 0x2675; 
0x0004c844: jnp 0x4c84a; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00057fb3: jnp 0x57fe6; stc; call dword ptr [eax + 0x53]; 
0x000580a6: jnp 0x580d9; stc; call dword ptr [eax + 0x53]; 
0x000b33b0: jnp 0x5b1757fa; pop esi; ret; 
0x000b3434: jnp 0x5b17587e; pop esi; ret; 
0x000b3574: jnp 0x5b1759be; pop esi; ret; 
0x000aff1d: jnp 0x5e132367; ret; 
0x000affa1: jnp 0x5e1323eb; ret; 
0x000b00a1: jnp 0x5e1324eb; ret; 
0x00079009: jnp 0x79005; jmp dword ptr [esi - 0x70]; 
0x0008bfa0: jnp 0x8bfaa; dec ecx; lcall 0, 0xc4870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x0008c903: jnp 0x8c90d; dec ecx; lcall 1, 0x31870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x000e34b6: jnp 0xe34b3; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; xor eax, eax; ret; 
0x001185df: jns 0x1185e1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001192ed: jns 0x1192f2; mov byte ptr [ebx], 0; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x0011df5e: jns 0x11deeb; pop ecx; add al, 0xf6; ret; 
0x0012a004: jns 0x12a05c; stc; call dword ptr [eax - 0x18]; 
0x001338f5: jns 0x1338ff; mov ebp, dword ptr [ecx + 0xc]; nop; jmp edx; 
0x0013e546: jns 0x13e54a; add esi, dword ptr [eax + edi*2 - 0x7d]; ret 0x8303; 
0x0014e643: jns 0x14e658; out dx, al; dec dword ptr [ebp - 0x652c36b]; call dword ptr [edx - 0x73]; 
0x00151f13: jns 0x151f76; stc; call dword ptr [eax + 0x53]; 
0x00154795: jns 0x15471a; ret; 
0x0018cbf7: jns 0x18cbeb; call dword ptr [ebx - 0x18]; 
0x0002f29b: jns 0x2f2b5; push dword ptr [ecx + ebx - 0x7d]; in al, dx; or byte ptr [ecx - 0xe36b], cl; call dword ptr [ecx + 0x50]; 
0x000ad7c6: jns 0x4797db23; pop es; pop edi; pop esi; pop ebx; ret; 
0x0005180b: jns 0x517d3; inc eax; or byte ptr [eax], al; mov eax, edx; ret; 
0x000ac0c6: jns 0x5e69c423; pop ebx; ret; 
0x00065c62: jns 0x65c5d; call dword ptr [edx - 0x73]; 
0x00066018: jns 0x66013; call dword ptr [eax - 0x73]; 
0x000668b9: jns 0x668b4; call dword ptr [eax - 0x73]; 
0x0006acd2: jns 0x6accd; call dword ptr [edx - 0x73]; 
0x0006b090: jns 0x6b08b; call dword ptr [eax - 0x73]; 
0x0006b999: jns 0x6b994; call dword ptr [eax - 0x73]; 
0x000fbc58: jns 0x749d802e; add byte ptr es:[ecx], dh; rol byte ptr [ecx + 0xc0fefb], cl; add byte ptr [edi], cl; xchg ebp, eax; ret 0x548d; 
0x0007faf0: jns 0x7faf3; push eax; push edx; mov dword ptr [esp + 0x40], edx; call dword ptr [esi + 0xc]; 
0x00089bd4: jns 0x89dc0; mov eax, 0xf0; mov ebx, ebp; mov esi, ecx; call dword ptr gs:[0x10]; 
0x00093bee: jns 0x93bf5; lea eax, [edx + edx]; mov ebx, dword ptr [eax]; mov eax, 0x107; call dword ptr gs:[0x10]; 
0x00093cd6: jns 0x93cdc; add ebx, ebx; mov ebx, dword ptr [ebx]; mov eax, 0x106; call dword ptr gs:[0x10]; 
0x00093d4b: jns 0x93d51; add ebx, ebx; mov ebx, dword ptr [ebx]; mov eax, 0x198; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000a6a3a: jns 0xa6a49; add byte ptr [edi], cl; test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000a6a90: jns 0xa6a9c; add byte ptr [edi], cl; test byte ptr [edi], al; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000aaf1a: jns 0xaaf29; add byte ptr [edi], cl; test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000ad2d3: jns 0xad2de; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000d72ea: jns 0xd731b; mov eax, 0x193; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000d742b: jns 0xd7435; dec ecx; lcall 0, 0x89870f3b; add byte ptr [eax + 0x194], bh; call dword ptr gs:[0x10]; 
0x000d9684: jns 0xd967a; jmp dword ptr [esi - 0x70]; 
0x000e9599: jns 0xe9588; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x00104c6c: jo 0x104c05; std; call dword ptr [ecx + 0x6a]; 
0x00106b48: jo 0x106afe; in eax, dx; call dword ptr [eax + 0x6a]; 
0x001127d7: jo 0x112834; pop esi; pop edi; ret; 
0x0011bc1d: jo 0x11bc6a; stc; call dword ptr [edi + 0x50]; 
0x0011c24b: jo 0x11c1d6; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x00122df5: jo 0x122e52; pop esi; pop edi; ret; 
0x00122eb5: jo 0x122f12; pop esi; pop edi; ret; 
0x00122f75: jo 0x122fd2; pop esi; pop edi; ret; 
0x00122fdc: jo 0x122fee; add byte ptr [ebx - 0x48], dl; ret; 
0x001251f1: jo 0x12524e; pop esi; pop edi; ret; 
0x001295cc: jo 0x129639; out dx, eax; jmp dword ptr [ebp - 0x75]; 
0x00129f3b: jo 0x129f93; stc; call dword ptr [eax - 0x18]; 
0x0012a0ce: jo 0x12a126; stc; call dword ptr [eax - 0x73]; 
0x0014842e: jo 0x148469; ret 0x840f; 
0x00148b02: jo 0x148b3d; ret 0x840f; 
0x00148b35: jo 0x148b70; ret 0x840f; 
0x00148ecc: jo 0x148f07; ret 0x840f; 
0x0014d697: jo 0x14d645; stc; call dword ptr [eax - 0x73]; 
0x0014d7eb: jo 0x14d799; stc; call dword ptr [eax + 0x68]; 
0x0014d80e: jo 0x14d7bc; stc; call dword ptr [eax + 0x68]; 
0x00152a40: jo 0x1529f0; stc; call dword ptr [edx - 0x73]; 
0x0015859d: jo 0x1585b3; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x00159303: jo 0x159305; add byte ptr [ebx - 0x74e3dbac], cl; inc edx; add al, 0x89; adc al, 0x24; call dword ptr [eax + 0x10]; 
0x00166f32: jo 0x166f40; call 0x79850; add esp, 0x1c; not eax; shr eax, 0x1f; ret; 
0x0016f00e: jo 0x16f05d; hlt; call dword ptr [eax - 0x73]; 
0x00174404: jo 0x1743f6; jmp dword ptr [esi - 0x70]; 
0x0017ab83: jo 0x17ab06; ret 0x80; 
0x0017abea: jo 0x17ab6d; ret 0x80; 
0x0017ac3c: jo 0x17abbf; ret 0x80; 
0x0017b096: jo 0x17b058; add bh, dh; ret 0xf; 
0x0017b1d3: jo 0x17b156; ret 0x80; 
0x0017b23a: jo 0x17b1bd; ret 0x80; 
0x0017b28c: jo 0x17b20f; ret 0x80; 
0x0017b736: jo 0x17b6f8; add bh, dh; ret 0xf; 
0x0018b0ef: jo 0x18b100; mov dh, 0x48; pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x00199449: jo 0x199442; ret 0; 
0x0019f285: jo 0x19f210; ret 0xf889; 
0x00024fad: jo 0x24fae; aad 0x89; ret 0xc483; 
0x00026f25: jo 0x26f20; call dword ptr [eax - 0x73]; 
0x00026f38: jo 0x26f33; call dword ptr [eax - 0x18]; 
0x00026f48: jo 0x26f43; call dword ptr [eax - 0x73]; 
0x00026f5b: jo 0x26f56; call dword ptr [eax - 0x18]; 
0x00026f6b: jo 0x26f66; call dword ptr [eax - 0x73]; 
0x00026f7e: jo 0x26f79; call dword ptr [eax - 0x18]; 
0x00026fd4: jo 0x26fcf; call dword ptr [eax - 0x73]; 
0x0002702c: jo 0x27027; call dword ptr [eax - 0x73]; 
0x0002704f: jo 0x2704a; call dword ptr [eax - 0x73]; 
0x00027a81: jo 0x27a7c; call dword ptr [eax - 0x73]; 
0x00027aa9: jo 0x27aa4; call dword ptr [eax - 0x73]; 
0x00027bd4: jo 0x27bcf; call dword ptr [eax - 0x73]; 
0x00027c2c: jo 0x27c27; call dword ptr [eax - 0x73]; 
0x00027c3f: jo 0x27c3a; call dword ptr [eax - 0x18]; 
0x00027c4f: jo 0x27c4a; call dword ptr [eax - 0x73]; 
0x00027c62: jo 0x27c5d; call dword ptr [eax - 0x18]; 
0x00027c72: jo 0x27c6d; call dword ptr [eax - 0x73]; 
0x00027c85: jo 0x27c80; call dword ptr [eax - 0x18]; 
0x00028777: jo 0x28772; call dword ptr [eax - 0x73]; 
0x000287b8: jo 0x287b3; call dword ptr [eax - 0x73]; 
0x000287cb: jo 0x287c6; call dword ptr [eax - 0x18]; 
0x00028804: jo 0x287ff; call dword ptr [eax - 0x73]; 
0x000291c0: jo 0x291bb; call dword ptr [eax - 0x73]; 
0x00029206: jo 0x29201; call dword ptr [eax - 0x73]; 
0x00029292: jo 0x2928d; call dword ptr [eax - 0x73]; 
0x00029cf6: jo 0x29cf1; call dword ptr [eax - 0x73]; 
0x00029d09: jo 0x29d04; call dword ptr [eax - 0x18]; 
0x00029d19: jo 0x29d14; call dword ptr [eax - 0x73]; 
0x00029d2c: jo 0x29d27; call dword ptr [eax - 0x18]; 
0x00029d3c: jo 0x29d37; call dword ptr [eax - 0x73]; 
0x00029d4f: jo 0x29d4a; call dword ptr [eax - 0x18]; 
0x00029d5f: jo 0x29d5a; call dword ptr [eax - 0x73]; 
0x00029d82: jo 0x29d7d; call dword ptr [eax - 0x73]; 
0x00029e25: jo 0x29e20; call dword ptr [eax - 0x73]; 
0x0002b111: jo 0x2b10c; call dword ptr [eax - 0x18]; 
0x0002b134: jo 0x2b12f; call dword ptr [eax - 0x18]; 
0x0002b157: jo 0x2b152; call dword ptr [eax - 0x18]; 
0x0003aecc: jo 0x3ae86; pop es; add byte ptr [ebx - 0x3b7cef3c], al; add al, 0x5b; pop esi; ret; 
0x0004ab7c: jo 0x4aba6; mov ebp, dword ptr [eax + 0x2c]; mov ebx, dword ptr [eax + 0x34]; xor eax, eax; ret; 
0x0004ae25: jo 0x4ae4f; mov ebp, dword ptr [eax + 0x2c]; mov ebx, dword ptr [eax + 0x34]; xor eax, eax; ret; 
0x00055176: jo 0x55101; ret 0xc483; 
0x00068f75: jo 0x68f86; mov dh, 0x44; or al, ah; mov ecx, dword ptr [edx + eax*4]; add ecx, ebp; jmp ecx; 
0x0006e790: jo 0x6e71b; fiadd dword ptr [ebx]; adc al, 0x86; jmp edx; 
0x0007beed: jo 0x7bf03; mov eax, ebx; mov byte ptr [edx], cl; pop ebx; pop esi; ret; 
0x0007c00d: jo 0x7c023; mov eax, ebx; mov byte ptr [edx], cl; pop ebx; pop esi; ret; 
0x0007caa4: jo 0x7cade; call 0x10a3d0; add esp, 0x18; pop ebx; ret; 
0x00086d21: jo 0x86da2; stc; call dword ptr [eax - 0x73]; 
0x0008c26f: jo 0x8c1fa; inc ebp; or al, 0x89; sal dh, 1; ret 0x7501; 
0x0008f9c4: jo 0x8f948; stc; call dword ptr [eax - 0x18]; 
0x0008fbb5: jo 0x8fbbb; call dword ptr [eax]; 
0x0009516d: jo 0x951aa; add byte ptr [eax], al; add dword ptr [ebx - 0x1637d], ecx; jmp dword ptr [ebp - 0x75]; 
0x0009b06f: jo 0x9b024; call 0x7d4ba775; add cl, byte ptr [ebp - 0x18784f6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0009b0a6: jo 0x9b040; idiv bh; lea eax, [eax - 0x174bd0]; test byte ptr [ecx + 0x7e], 0x10; cmovne eax, edx; ret; 
0x0009c6f3: jo 0x9c711; pop ebx; pop esi; ret; 
0x0009d48c: jo 0x9d48d; sub bh, byte ptr [ecx]; sal byte ptr [ebp - 0xb], 1; mov eax, ecx; ret; 
0x000afd77: jo 0xafd7b; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000afd93: jo 0xafd99; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000afde5: jo 0xafdef; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000afed9: jo 0xafeeb; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000aff5f: jo 0xaff75; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000affe3: jo 0xafffd; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b31bd: jo 0xb31c1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b31e9: jo 0xb31ef; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b326b: jo 0xb3275; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b336f: jo 0xb3381; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b33f5: jo 0xb340b; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b3479: jo 0xb3493; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b766c: jo 0xb76e9; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000bb427: jo 0xbb429; add byte ptr [eax], al; add byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000c1085: jo 0xc1087; add byte ptr [eax], al; add byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000caea2: jo 0xcaea8; push dword ptr [eax]; call 0xcd250; add esp, 0x1c; ret; 
0x000caeef: jo 0xcaef5; push dword ptr [eax]; call 0xcd250; add esp, 0x1c; ret; 
0x000caf42: jo 0xcaf48; push dword ptr [eax]; call 0xcd250; add esp, 0x1c; ret; 
0x000caf8f: jo 0xcaf95; push dword ptr [eax]; call 0xcd250; add esp, 0x1c; ret; 
0x000ccdee: jo 0xccdf4; pop ebx; pop esi; pop edi; ret; 
0x000ceb57: jo 0xceae4; pop esp; and al, 0x50; lea edx, [esp + 0x1c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000d8744: jo 0xd87a1; pop esi; pop edi; ret; 
0x000d9772: jo 0xd97cf; pop esi; pop edi; ret; 
0x000da5a8: jo 0xda543; stc; call dword ptr [eax - 0x18]; 
0x000e0989: jo 0xe0925; stc; call dword ptr [eax - 0x73]; 
0x000e7c70: jo 0xe7c68; clc; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x0011273c: jp 0x112762; mov dword ptr [edx + 0x28], eax; pop esi; pop edi; ret; 
0x00115fb3: jp 0x115ff1; mov dword ptr [edx + 0x34], eax; pop ebx; pop esi; pop edi; ret; 
0x0011c938: jp 0x11c985; stc; call dword ptr [eax - 1]; 
0x0013a044: jp 0x13a0a1; stc; call dword ptr [eax + 0x6a]; 
0x00147198: jp 0x1471f8; stc; call dword ptr [eax - 0x18]; 
0x00152bed: jp 0x152b72; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00159302: jp 0x159374; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x1c]; mov eax, dword ptr [edx + 4]; mov dword ptr [esp], edx; call dword ptr [eax + 0x10]; 
0x0015bf89: jp 0x15bf88; jmp dword ptr [esi - 0x70]; 
0x00197a4a: jp 0x197a52; add byte ptr [edi], cl; test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x00197aad: jp 0x197aba; add byte ptr [edi], cl; test byte ptr [eax + eax], bh; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x00197ae5: jp 0x197af6; add byte ptr [esp + ebx*2 - 0x48], dh; adc byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x00035ea4: jp 0x35eb0; jne 0x35eb0; fadd st(0); add esp, 0x18; pop ebx; ret; 
0x00036203: jp 0x36210; jne 0x36210; fadd st(0); add esp, 0x18; pop ebx; ret; 
0x000364af: jp 0x364c0; jne 0x364c0; fadd st(0); add esp, 8; pop ebx; ret; 
0x000739a8: jp 0x73978; cli; jmp dword ptr [esi - 0x70]; 
0x000af691: jp 0xaf694; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x000af6a1: jp 0xaf6a5; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x000af6d1: jp 0xaf6d7; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x000af741: jp 0xaf74b; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000b28a5: jp 0xb28af; mov eax, edi; pop ebx; pop edi; ret; 
0x000b2902: jp 0xb2914; mov eax, edi; pop ebx; pop edi; ret; 
0x000d0a56: jp 0xd0a9d; stc; call dword ptr [eax + 0x56]; 
0x000dd61b: jp 0xdd61d; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010550f: js 0x10556c; ret; 
0x00107c8f: js 0x107cec; ret; 
0x0010af02: js 0x10aefb; dec dword ptr [ebx - 0x76dfdba4]; ret 0x6b8; 
0x001160fe: js 0x116108; mov eax, dword ptr [edx + 8]; and eax, 0x100f; ret; 
0x0011819e: js 0x118123; les esp, ptr [ebx + ebx*2]; pop esi; ret; 
0x0011827e: js 0x118203; les esp, ptr [ebx + ebx*2]; pop esi; ret; 
0x0011f189: js 0x11f18c; add byte ptr [edx - 0x77], dh; ret 0xdeb; 
0x00120aa6: js 0x120a49; stc; call dword ptr [eax - 0x73]; 
0x001212f0: js 0x1212f2; add byte ptr [eax], al; mov dword ptr [ecx], ebx; int 0x80; 
0x00121f42: js 0x121f45; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00125226: js 0x125230; add esp, 8; pop ebx; ret; 
0x0012e6f3: js 0x12e74c; stc; call dword ptr [eax + 0x57]; 
0x00131785: js 0x1317df; stc; call dword ptr [edx - 0x17]; 
0x001382c4: js 0x138344; out dx, al; jmp dword ptr [ebp - 0x75]; 
0x0013a21a: js 0x13a1c2; stc; call dword ptr [eax - 0x73]; 
0x0013a246: js 0x13a29f; stc; call dword ptr [eax + 0x6a]; 
0x0013a32a: js 0x13a383; stc; call dword ptr [eax + 0x6a]; 
0x0013a6af: js 0x13a708; stc; call dword ptr [eax + 0x6a]; 
0x0013b7b7: js 0x13b810; stc; dec dword ptr [ecx - 0x48b7b]; call dword ptr [edi + 0x52]; 
0x0013e54a: js 0x13e4cf; ret 0x8303; 
0x00140ac9: js 0x140acd; add byte ptr [ebp + 0xa], dh; movzx eax, byte ptr [eax + 1]; shr eax, 1; ret; 
0x00140c6f: js 0x140c19; stc; call dword ptr [eax - 0x73]; 
0x0014232f: js 0x14233c; mov eax, dword ptr [esp + 0x10]; sub eax, ebx; add esp, 8; pop ebx; ret; 
0x001434a3: js 0x142f9e; sub esp, 0xc; push esi; mov edx, dword ptr [esp + 0x20]; call edx; 
0x001509d6: js 0x1509e0; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x0015accc: js 0x15ad25; stc; call dword ptr [eax + 0x6a]; 
0x0015aed0: js 0x15af29; stc; call dword ptr [eax + 0x6a]; 
0x001603a6: js 0x1603ff; stc; call dword ptr [eax + 0x6a]; 
0x001603e2: js 0x16043b; stc; call dword ptr [eax + 0x6a]; 
0x00160532: js 0x16058b; stc; call dword ptr [eax + 0x6a]; 
0x00163346: js 0x163340; push dword ptr [ebp + esi*2 - 0x7d]; ret 0x3901; 
0x001641e3: js 0x1641e4; inc dword ptr [ebx - 0x2776eb3c]; pop ebx; pop esi; ret; 
0x0016b91d: js 0x16b928; add esp, 4; pop ebx; pop esi; ret; 
0x0016ed11: js 0x16ed16; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0016ed51: js 0x16ed56; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0017285e: js 0x1727e3; les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x00174385: js 0x174390; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00199d23: js 0x199cae; ret 0x4489; 
0x0019a055: js 0x199fe0; ret 0xb60f; 
0x0019e9e3: js 0x19e96e; ret 0x4489; 
0x000213d4: js 0x213ef; add byte ptr [eax], al; ret; 
0x00021474: js 0x2148f; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0002c19a: js 0x2c1c8; stc; call dword ptr [eax - 1]; 
0x0002c2c2: js 0x2c335; stc; call dword ptr [eax - 0x73]; 
0x0002f8fd: js 0x2f956; stc; call dword ptr [esi - 1]; 
0x000374e9: js 0x374f3; mov ebp, dword ptr [eax + 0xc]; nop; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x00037539: js 0x37543; mov ebp, dword ptr [eax + 0xc]; nop; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x00038ddd: js 0x39182; sub esp, 4; push ebp; push esi; push dword ptr [esp + 0x30]; call edi; 
0x000ad758: js 0x4797d9b5; add ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x0004a088: js 0x4a089; das; jne 0x4a080; add esp, 8; pop ebx; ret; 
0x0004ab79: js 0x4ab9f; mov esi, dword ptr [eax + 0x28]; mov ebp, dword ptr [eax + 0x2c]; mov ebx, dword ptr [eax + 0x34]; xor eax, eax; ret; 
0x0004ae22: js 0x4ae48; mov esi, dword ptr [eax + 0x28]; mov ebp, dword ptr [eax + 0x2c]; mov ebx, dword ptr [eax + 0x34]; xor eax, eax; ret; 
0x0005836b: js 0x583c8; ret; 
0x0005bcb3: js 0x5bcae; call dword ptr [eax - 0x73]; 
0x000ac088: js 0x5e69c2e5; pop ebx; ret; 
0x000ac0a6: js 0x5e69c503; pop ebx; ret; 
0x00065288: js 0x65283; call dword ptr [eax + 0x68]; 
0x00065287: js 0x65301; stc; call dword ptr [eax + 0x68]; 
0x000654c2: js 0x654bd; call dword ptr [eax + 0x68]; 
0x000654c1: js 0x6553b; stc; call dword ptr [eax + 0x68]; 
0x0006602b: js 0x66026; call dword ptr [eax - 0x18]; 
0x000667fa: js 0x667f5; call dword ptr [eax - 0x18]; 
0x000668cc: js 0x668c7; call dword ptr [eax - 0x18]; 
0x00068597: js 0x68592; call dword ptr [eax - 0x18]; 
0x0006972a: js 0x68816; mov dword ptr [esp + 0x10], ebx; jmp 0x68af3; lea esi, [esi]; jmp eax; 
0x0006a0de: js 0x6a0d9; call dword ptr [eax - 0x18]; 
0x0006b0a3: js 0x6b09e; call dword ptr [eax - 0x18]; 
0x0006b8da: js 0x6b8d5; call dword ptr [eax - 0x18]; 
0x0006b9ac: js 0x6b9a7; call dword ptr [eax - 0x18]; 
0x0006d83c: js 0x6d837; call dword ptr [eax - 0x18]; 
0x0006f583: js 0x6f57e; call dword ptr [eax - 0x18]; 
0x00079430: js 0x79438; ret; 
0x0007b238: js 0x7b23b; jae 0x7b2b1; fild dword ptr [eax - 0x76da2b83]; ret 0x5374; 
0x00080e85: js 0x80e96; sldt word ptr [0x1a9177]; mov eax, dword ptr [eax + 0xce0]; ret; 
0x00083487: js 0x83412; ret 0xca83; 
0x0008da65: js 0x8da70; mov dword ptr [edx + 0x3a28], eax; xor eax, eax; ret; 
0x0008fbeb: js 0x8fbe7; jmp dword ptr [esi - 0x70]; 
0x000904ef: js 0x904f0; jmp dword ptr [esi - 0x70]; 
0x000913ab: js 0x913b5; adc al, 0xf; xchg dword ptr [ebx + eax - 0x58180000], ebx; ret; 
0x000919a8: js 0x91990; call dword ptr [eax + 0x55]; 
0x000971eb: js 0x971fc; inc edi; ret 0x548b; 
0x000b35e4: js 0xb3626; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b5924: js 0xb5909; clc; inc dword ptr [ecx]; sar dword ptr [esi], 1; jmp ecx; 
0x000f679b: js 0xc0926dad; add dword ptr [ecx], edi; ret 0xda75; 
0x000c9c27: js 0xc9c88; pop esi; ret; 
0x000de348: js 0xde34a; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000de345: js 0xde3af; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x000de8ed: js 0xde950; mov eax, 0x166; lea ecx, [ebp - 0x6d179]; mov edi, 0x1000; mov ebx, dword ptr [esp + 0xc0]; call dword ptr gs:[0x10]; 
0x000e020a: js 0xe0210; ret; 
0x000e0e6f: js 0xe0ecc; ret; 
0x000e352f: js 0xe358c; ret; 
0x000f31dd: js 0xf31de; call dword ptr [eax - 1]; 
0x000f6764: js 0xf679f; ret 0x4f0f; 
0x000f855f: js 0xf85bc; ret; 
0x000f913f: js 0xf919c; ret; 
0x00089391: lahf; aas; stc; call dword ptr [eax - 0x73]; 
0x0019039d: lahf; adc eax, 0xc1830000; adc byte ptr [esi + 0xf], ah; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000aa18d: lahf; add dword ptr [eax], eax; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x00097b83: lahf; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x00038ddf: lahf; add eax, dword ptr [eax]; add byte ptr [ebx + 0x565504ec], al; push dword ptr [esp + 0x30]; call edi; 
0x0011f747: lahf; dec ebp; stc; call dword ptr [eax + 0x57]; 
0x000721de: lahf; in al, 0xfa; jmp dword ptr [esi - 0x70]; 
0x0005856c: lahf; jg 0x585a0; stc; call dword ptr [ecx + 0x53]; 
0x000d839d: lahf; jge 0xd8394; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x000ad3ad: lahf; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0003003b: lahf; pop ds; add byte ptr [ebx - 0x14380], cl; jmp dword ptr [ebp + 3]; 
0x0003003b: lahf; pop ds; add byte ptr [ebx - 0x14380], cl; jmp dword ptr [ebp + 3]; add eax, 0; ret; 
0x0003001b: lahf; pop ds; add byte ptr [ebx - 0xb80], cl; jmp dword ptr [ebp + 3]; 
0x0003001b: lahf; pop ds; add byte ptr [ebx - 0xb80], cl; jmp dword ptr [ebp + 3]; add eax, 0; ret; 
0x0011e83d: lahf; pop ebx; stc; call dword ptr [eax + 0x6a]; 
0x0011e3e6: lahf; pop ebx; stc; call dword ptr [eax - 1]; 
0x00058fa5: lahf; pop ebx; stc; call dword ptr [ebx + 0x50]; 
0x0011e487: lahf; pop ebx; stc; call dword ptr [ecx + 0x50]; 
0x0014ba6a: lahf; ret 0xd009; 
0x0005cee2: lahf; ret 0xd629; 
0x0010414d: lahf; ret 0xe8c1; 
0x000543ee: lahf; ret 0xfa80; 
0x00030e2d: lahf; ret 5; 
0x000c9fed: lahf; ret; 
0x00109e96: lahf; stc; call dword ptr [eax - 0x18]; 
0x0005d159: lahf; sub al, 0; add byte ptr [ebx - 0x5ef63], cl; dec dword ptr [ebx - 0x5db73]; inc dword ptr [ecx]; ret; 
0x0002c46d: lahf; sub al, 0xf9; call dword ptr [eax + 0x56]; 
0x000d742f: lcall 0, 0x89870f3b; add byte ptr [eax + 0x194], bh; call dword ptr gs:[0x10]; 
0x0008bfa4: lcall 0, 0xc4870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x0008cb8a: lcall 0, 0xce870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x6174; 
0x00122130: lcall 0x2454, 0x8b000001; xor al, 0x8b; pop esp; and al, 0x30; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000be922: lcall 0x247c, 0x8bfff710; xor byte ptr [ebp - 0x668f379], cl; call dword ptr [eax - 0x73]; 
0x0002a65b: lcall 0x247c, 0x8bfffffa; cmp byte ptr [ebp - 0x696df79], cl; call dword ptr [eax + 0x68]; 
0x000d2852: lcall 0x2cc4, 0x8300001f; ret; 
0x00178112: lcall 0x2cc4, 0x83fff8cd; ret; 
0x000fb32f: lcall 0x3110, 0xc483fffb; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00056aae: lcall 0x4c83, 0x8d0cec83; sbb dword ptr [eax], eax; add byte ptr [eax - 0x18], dl; ret 0x2c6; 
0x00140e2b: lcall 0x4c85, 0x8d82eb3b; test al, 0xf9; call dword ptr [eax - 0x73]; 
0x0009b259: lcall 0x5b10, 0xc4830001; pop esi; pop edi; ret; 
0x0006d82c: lcall 0x6885, 0x8bfffff3; idiv edi; inc dword ptr [ebx - 0x7f72f314]; clc; js 0x6d837; call dword ptr [eax - 0x18]; 
0x0009b527: lcall 0xb4f0, 0x808dfff6; call 0x7e4bac32; adc byte ptr [edi], cl; inc ebp; ret 0x66c3; 
0x00091ac5: lcall 0xb800, 0x1ba; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; call dword ptr gs:[0x10]; 
0x0008c907: lcall 1, 0x31870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x00097cd9: lds eax, ptr [eax - 7]; call dword ptr [eax - 0x73]; 
0x000d0998: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x448b; 
0x000d2c6f: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x448d; 
0x000d5bf2: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x468b; 
0x000d2bd7: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x548d; 
0x000d4d59: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x858b; 
0x000d1358: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xbe0f; 
0x000cc51f: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xc889; 
0x000cf6c7: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xd129; 
0x000d4cba: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xf889; 
0x00122e90: lds eax, ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00123031: lds eax, ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0009b564: lds eax, ptr [ebp - 0x7cd88b40]; in al, dx; add al, 0x6a; add eax, 0xcc838d50; jb 0x9b56d; call dword ptr [eax - 0x18]; 
0x0003ab3a: lds eax, ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x000b9f83: lds eax, ptr [ebx + eax*4]; ret; 
0x0009a51f: lds eax, ptr [ebx - 0x127aef3c]; jne 0x9a479; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax - 0x148]; call dword ptr [eax]; 
0x000392e7: lds eax, ptr [ecx + ecx*4]; add ecx, dword ptr [ebx - 0x7cfbdbbc]; ret; 
0x00193e37: lds eax, ptr [ecx]; add byte ptr [eax], al; pop ebx; ret; 
0x000cc7c5: lds ebp, ptr [ecx]; int 0x80; 
0x00095b93: lds ebp, ptr [ecx]; ret 0x4589; 
0x001596bb: lds ebx, ptr [eax + 0x5a]; push dword ptr [esi + 0x10]; push ebx; call dword ptr [esi + 0x14]; 
0x000c8447: lds ecx, ptr [eax + 0xd]; add cl, ch; cli; idiv bh; dec dword ptr [ebx - 0x364b63]; jmp dword ptr [ebp - 0x75]; 
0x0004a9b7: lds ecx, ptr [eax - 0x3b7cfffd]; adc byte ptr [ebx - 0x14f3dbbc], cl; ret 0x748d; 
0x00092eea: lds ecx, ptr [ebp - 0x19734f7d]; call dword ptr [eax + 0x56]; 
0x0003a70d: lds ecx, ptr [ebp - 0x68bc770]; call dword ptr [edx - 0x73]; 
0x00161ceb: lds ecx, ptr [ebp - 0x69c1f7d]; call dword ptr [ecx + 0x6a]; 
0x00145e09: lds ecx, ptr [ebx - 0x1337b]; jmp dword ptr [ebp - 0x75]; 
0x00116db5: lds ecx, ptr [ebx - 0x76fbdbbc]; ret; 
0x000cb485: lds ecx, ptr [ecx + 0x31442454]; ror byte ptr [ecx - 0x7a97dba4], cl; ror byte ptr [edi], 0x48; ret 0x548b; 
0x000302b7: lds ecx, ptr [ecx + 8]; add byte ptr [ebx - 0x137cef3c], al; or byte ptr [ebp - 0x68cab7b], cl; dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x000cb482: lds ecx, ptr [edi]; dec esi; lds ecx, ptr [ecx + 0x31442454]; ror byte ptr [ecx - 0x7a97dba4], cl; ror byte ptr [edi], 0x48; ret 0x548b; 
0x0012c064: lds ecx, ptr [edi]; xchg dword ptr [0x89000002], edx; ret; 
0x000968b2: lds ecx, ptr [edi]; xchg dword ptr [edi - 0x76fffffd], esi; outsd dx, dword ptr [esi]; or byte ptr [eax - 0x76f7b875], dl; ret 0xf801; 
0x000a1dc8: lds ecx, ptr [edi]; xchg esp, eax; ret 0xc739; 
0x00094b7f: lds edi, ptr [ecx]; ret; 
0x0002280a: lds edx, ptr [eax + eax]; mov dword ptr [esp], ebx; call esi; 
0x0008dceb: lds edx, ptr [esi]; ret; 
0x001267d0: lds esi, ptr [ecx]; cmp byte ptr [eax], dl; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x000cb75a: lds esi, ptr [edx + ebp*2 - 0x7d]; clc; cmp al, 0xf; xchg esp, eax; ret 0xc031; 
0x000e8fa4: lds esi, ptr [edx + ebx + 0x39]; ret; 
0x0019781b: lea eax, [eax + 0x10]; test edx, edx; jne 0x197830; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x0002ecbd: lea eax, [eax + 0x1120]; ret; 
0x0008d991: lea eax, [eax + 0x3a60]; push eax; call 0x84130; add esp, 0x1c; ret; 
0x0011d331: lea eax, [eax + 0x44e4]; push eax; call 0x11d4d0; add esp, 0x1c; ret; 
0x00197975: lea eax, [eax + 0xa]; pop edi; ret; 
0x001978cb: lea eax, [eax + 0xb]; pop edi; ret; 
0x00197985: lea eax, [eax + 0xc]; pop edi; ret; 
0x00197995: lea eax, [eax + 0xd]; pop edi; ret; 
0x001979a5: lea eax, [eax + 0xe]; pop edi; ret; 
0x001978f4: lea eax, [eax + 0xf]; pop edi; ret; 
0x00197909: lea eax, [eax + 1]; pop edi; ret; 
0x00197919: lea eax, [eax + 2]; pop edi; ret; 
0x00197861: lea eax, [eax + 3]; pop edi; ret; 
0x00197929: lea eax, [eax + 4]; pop edi; ret; 
0x00197935: lea eax, [eax + 5]; pop edi; ret; 
0x00197945: lea eax, [eax + 6]; pop edi; ret; 
0x00197894: lea eax, [eax + 7]; pop edi; ret; 
0x00197955: lea eax, [eax + 8]; pop edi; ret; 
0x00197965: lea eax, [eax + 9]; pop edi; ret; 
0x0008fe9c: lea eax, [eax + eax + 2]; ret; 
0x0008eab9: lea eax, [eax + eax - 1]; pop esi; pop edi; pop ebp; ret; 
0x000dff37: lea eax, [eax + eax - 1]; ret; 
0x0004b077: lea eax, [eax + eax*8 + 2]; call 0x4b030; add eax, ebx; jmp eax; 
0x000b6114: lea eax, [eax + ebx*4]; pop ebx; pop esi; ret; 
0x000b3f93: lea eax, [eax + ecx + 0x10]; ret; 
0x000b3fa3: lea eax, [eax + ecx + 0x20]; ret; 
0x000b3fb3: lea eax, [eax + ecx + 0x30]; ret; 
0x000b3cd3: lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x000b3ce3: lea eax, [eax + edi + 0x20]; pop edi; ret; 
0x000b3cb3: lea eax, [eax + edi - 0x10]; pop edi; ret; 
0x000b43c3: lea eax, [eax + edx + 0x10]; ret; 
0x000b43d3: lea eax, [eax + edx + 0x20]; ret; 
0x0015a37b: lea eax, [eax + edx + 0x28]; push eax; push edi; call dword ptr [ecx + 0x18]; 
0x00083571: lea eax, [eax + edx + 0x4000]; ret; 
0x00171139: lea eax, [eax + edx + 0x64]; ret; 
0x000b43a3: lea eax, [eax + edx - 0x10]; ret; 
0x0009b65a: lea eax, [eax - 0x174a50]; test byte ptr [ecx + 0x7e], 0x10; cmovne eax, edx; ret; 
0x0009b52a: lea eax, [eax - 0x174b10]; test byte ptr [ecx + 0x7e], 0x10; cmovne eax, edx; ret; 
0x0009b0aa: lea eax, [eax - 0x174bd0]; test byte ptr [ecx + 0x7e], 0x10; cmovne eax, edx; ret; 
0x0002173e: lea eax, [eax - 0x69214]; ret; 
0x0002175e: lea eax, [eax - 0x6921c]; ret; 
0x00021716: lea eax, [eax - 0x69960]; push eax; push 1; call 0x10a240; add esp, 0x1c; ret; 
0x0016d165: lea eax, [eax - 0x699dd]; push eax; call 0x109bf0; add esp, 0x1c; ret; 
0x001578b1: lea eax, [eax - 0x69d17]; push eax; push 9; call 0x152d90; add esp, 0x1c; ret; 
0x001575d1: lea eax, [eax - 0x69d24]; push eax; push 0; call 0x152d90; add esp, 0x1c; ret; 
0x001567d1: lea eax, [eax - 0x69d48]; push eax; push 0xa; call 0x152d90; add esp, 0x1c; ret; 
0x00156451: lea eax, [eax - 0x69d54]; push eax; push 1; call 0x152d90; add esp, 0x1c; ret; 
0x00155f31: lea eax, [eax - 0x69d60]; push eax; push 6; call 0x152d90; add esp, 0x1c; ret; 
0x00155b91: lea eax, [eax - 0x69d6b]; push eax; push 2; call 0x152d90; add esp, 0x1c; ret; 
0x001557d1: lea eax, [eax - 0x69d79]; push eax; push 4; call 0x152d90; add esp, 0x1c; ret; 
0x00154b91: lea eax, [eax - 0x69dbf]; push eax; push 3; call 0x152d90; add esp, 0x1c; ret; 
0x00153c31: lea eax, [eax - 0x69e20]; push eax; push 8; call 0x152d90; add esp, 0x1c; ret; 
0x00153591: lea eax, [eax - 0x69e2f]; push eax; push 5; call 0x152d90; add esp, 0x1c; ret; 
0x00088379: lea eax, [eax*8 + 6]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000622dd: lea eax, [eax]; add byte ptr [eax], al; add byte ptr [ecx - 0x51773], cl; call dword ptr [eax + 0x53]; 
0x0010c978: lea eax, [ebp + 0x14]; push eax; push 1; push dword ptr [esp + 0x30]; push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x0010ccb3: lea eax, [ebp + 0x14]; push eax; push 2; push dword ptr [esp + 0x30]; push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x0010cc48: lea eax, [ebp + 0x14]; push eax; push 5; push dword ptr [esp + 0x30]; push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x000ff1b1: lea eax, [ebp - 0x11c]; push 0x100; push eax; push edx; call ebx; 
0x000d26e5: lea eax, [ebp - 7]; call dword ptr [eax - 0x18]; 
0x00048a78: lea eax, [ebx + 0x18b0]; mov byte ptr [eax + ecx], 0; pop ebx; pop esi; ret; 
0x001586f9: lea eax, [ebx + 0xa300]; pop ebx; ret; 
0x001a08d2: lea eax, [ebx + 0xc60]; mov dword ptr [eax + ebp*4], edi; test edx, edx; je 0x1a08e9; mov dword ptr [esp + 8], eax; call edx; 
0x000e5e63: lea eax, [ebx + 2]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00150da3: lea eax, [ebx + 4]; push eax; call edi; 
0x0003b8f5: lea eax, [ebx + 6]; pop ebx; ret; 
0x000e5d3b: lea eax, [ebx + 8]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00093ed2: lea eax, [ebx + ebx]; mov ebx, dword ptr [eax]; mov ecx, dword ptr [esp + 0x64]; mov eax, 0x199; mov esi, ebp; call dword ptr gs:[0x10]; 
0x0011f1fb: lea eax, [ebx - 0x6b598]; pop ebx; pop esi; ret; 
0x00076435: lea eax, [ebx - 1]; pop ebx; ret; 
0x00196da0: lea eax, [ecx + 0xa]; ret; 
0x00196db0: lea eax, [ecx + 0xb]; ret; 
0x00196d2b: lea eax, [ecx + 0xc]; ret; 
0x00196dc0: lea eax, [ecx + 0xd]; ret; 
0x00196dd0: lea eax, [ecx + 0xe]; ret; 
0x00196de0: lea eax, [ecx + 0xf]; ret; 
0x000e95f0: lea eax, [ecx + 1]; pop ebx; pop esi; ret; 
0x00196d30: lea eax, [ecx + 1]; ret; 
0x00196d40: lea eax, [ecx + 2]; ret; 
0x00196d50: lea eax, [ecx + 3]; ret; 
0x00196cd8: lea eax, [ecx + 4]; ret; 
0x00196d60: lea eax, [ecx + 5]; ret; 
0x00196d70: lea eax, [ecx + 6]; ret; 
0x00196d80: lea eax, [ecx + 7]; ret; 
0x00196d02: lea eax, [ecx + 8]; ret; 
0x00196d90: lea eax, [ecx + 9]; ret; 
0x000b3fda: lea eax, [ecx + eax + 0x10]; ret; 
0x000b3fea: lea eax, [ecx + eax + 0x20]; ret; 
0x000b3ffa: lea eax, [ecx + eax + 0x30]; ret; 
0x000ff6f0: lea eax, [ecx - 0x68d34]; push eax; call 0x30630; add esp, 0x18; pop ebx; ret; 
0x00038530: lea eax, [ecx - 1]; mov dword ptr [edx + 0x64], eax; mov eax, ecx; ret; 
0x000ad8d8: lea eax, [edi + 0x10]; pop edi; pop esi; pop ebx; ret; 
0x000ad8ee: lea eax, [edi + 0x11]; pop edi; pop esi; pop ebx; ret; 
0x000ad910: lea eax, [edi + 0x12]; pop edi; pop esi; pop ebx; ret; 
0x000ad92e: lea eax, [edi + 0x13]; pop edi; pop esi; pop ebx; ret; 
0x000ad94e: lea eax, [edi + 0x14]; pop edi; pop esi; pop ebx; ret; 
0x000ad974: lea eax, [edi + 0x15]; pop edi; pop esi; pop ebx; ret; 
0x000ad992: lea eax, [edi + 0x16]; pop edi; pop esi; pop ebx; ret; 
0x000ad9b2: lea eax, [edi + 0x17]; pop edi; pop esi; pop ebx; ret; 
0x000ad9d2: lea eax, [edi + 0x18]; pop edi; pop esi; pop ebx; ret; 
0x000ad9f8: lea eax, [edi + 0x19]; pop edi; pop esi; pop ebx; ret; 
0x000ada1a: lea eax, [edi + 0x1a]; pop edi; pop esi; pop ebx; ret; 
0x000ada48: lea eax, [edi + 0x1b]; pop edi; pop esi; pop ebx; ret; 
0x000ada68: lea eax, [edi + 0x1c]; pop edi; pop esi; pop ebx; ret; 
0x000ada82: lea eax, [edi + 0x1d]; pop edi; pop esi; pop ebx; ret; 
0x000adaa2: lea eax, [edi + 0x1e]; pop edi; pop esi; pop ebx; ret; 
0x000adac2: lea eax, [edi + 0x1f]; pop edi; pop esi; pop ebx; ret; 
0x000adae2: lea eax, [edi + 0x20]; pop edi; pop esi; pop ebx; ret; 
0x000add31: lea eax, [edi + 0x40]; pop edi; pop esi; pop ebx; ret; 
0x000ad820: lea eax, [edi + 0xa]; pop edi; pop esi; pop ebx; ret; 
0x00195d80: lea eax, [edi + 0xa]; pop edi; ret; 
0x000ad83e: lea eax, [edi + 0xb]; pop edi; pop esi; pop ebx; ret; 
0x00195c46: lea eax, [edi + 0xb]; pop edi; ret; 
0x000ad85e: lea eax, [edi + 0xc]; pop edi; pop esi; pop ebx; ret; 
0x00195da0: lea eax, [edi + 0xc]; pop edi; ret; 
0x000ad882: lea eax, [edi + 0xd]; pop edi; pop esi; pop ebx; ret; 
0x00195db0: lea eax, [edi + 0xd]; pop edi; ret; 
0x000ad8a2: lea eax, [edi + 0xe]; pop edi; pop esi; pop ebx; ret; 
0x00195dc0: lea eax, [edi + 0xe]; pop edi; ret; 
0x000ad8c2: lea eax, [edi + 0xf]; pop edi; pop esi; pop ebx; ret; 
0x00195c00: lea eax, [edi + 0xf]; pop edi; ret; 
0x000ad734: lea eax, [edi + 1]; pop edi; pop esi; pop ebx; ret; 
0x00195d00: lea eax, [edi + 1]; pop edi; ret; 
0x000ad746: lea eax, [edi + 2]; pop edi; pop esi; pop ebx; ret; 
0x00195d10: lea eax, [edi + 2]; pop edi; ret; 
0x000ad75c: lea eax, [edi + 3]; pop edi; pop esi; pop ebx; ret; 
0x00195ba3: lea eax, [edi + 3]; pop edi; ret; 
0x000ad774: lea eax, [edi + 4]; pop edi; pop esi; pop ebx; ret; 
0x00195d30: lea eax, [edi + 4]; pop edi; ret; 
0x000ad78a: lea eax, [edi + 5]; pop edi; pop esi; pop ebx; ret; 
0x00195d40: lea eax, [edi + 5]; pop edi; ret; 
0x000ad7ac: lea eax, [edi + 6]; pop edi; pop esi; pop ebx; ret; 
0x00195d50: lea eax, [edi + 6]; pop edi; ret; 
0x000ad7ca: lea eax, [edi + 7]; pop edi; pop esi; pop ebx; ret; 
0x00195b5d: lea eax, [edi + 7]; pop edi; ret; 
0x000ad7e8: lea eax, [edi + 8]; pop edi; pop esi; pop ebx; ret; 
0x00195d60: lea eax, [edi + 8]; pop edi; ret; 
0x000ad7fe: lea eax, [edi + 9]; pop edi; pop esi; pop ebx; ret; 
0x00195d70: lea eax, [edi + 9]; pop edi; ret; 
0x000b3d0a: lea eax, [edi + eax + 0x10]; pop edi; ret; 
0x000b3d1a: lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x000b3bff: lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000d4f26: lea eax, [edi + edi*8 - 1]; call dword ptr [eax - 0x18]; 
0x00196123: lea eax, [edi - 0x10]; pop edi; ret; 
0x000de8f5: lea eax, [edi - 0x400006d2]; add byte ptr [eax], dl; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0xc0]; call dword ptr gs:[0x10]; 
0x001961e0: lea eax, [edi - 0xa]; pop edi; ret; 
0x001961d0: lea eax, [edi - 0xb]; pop edi; ret; 
0x00196148: lea eax, [edi - 0xc]; pop edi; ret; 
0x001961c0: lea eax, [edi - 0xd]; pop edi; ret; 
0x001961b0: lea eax, [edi - 0xe]; pop edi; ret; 
0x001961a0: lea eax, [edi - 0xf]; pop edi; ret; 
0x00196250: lea eax, [edi - 1]; pop edi; ret; 
0x000b4191: lea eax, [edi - 1]; pop esi; pop edi; pop ebp; ret; 
0x00196240: lea eax, [edi - 2]; pop edi; ret; 
0x000b41a1: lea eax, [edi - 2]; pop esi; pop edi; pop ebp; ret; 
0x00196230: lea eax, [edi - 3]; pop edi; ret; 
0x000b41b1: lea eax, [edi - 3]; pop esi; pop edi; pop ebp; ret; 
0x0019619b: lea eax, [edi - 4]; pop edi; ret; 
0x00196220: lea eax, [edi - 5]; pop edi; ret; 
0x00196210: lea eax, [edi - 6]; pop edi; ret; 
0x00196200: lea eax, [edi - 7]; pop edi; ret; 
0x00196172: lea eax, [edi - 8]; pop edi; ret; 
0x001961f0: lea eax, [edi - 9]; pop edi; ret; 
0x00195cf0: lea eax, [edi]; pop edi; ret; 
0x000a9f6d: lea eax, [edx + 0x10]; pop edi; pop ebx; ret; 
0x00080f83: lea eax, [edx + 0x199c]; push eax; call 0x83280; add esp, 0x1c; ret; 
0x000a820e: lea eax, [edx + 0xa]; pop edi; ret; 
0x000a834e: lea eax, [edx + 0xa]; ret; 
0x000aaf87: lea eax, [edx + 0xb]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000a80fe: lea eax, [edx + 0xb]; pop edi; ret; 
0x000a836e: lea eax, [edx + 0xb]; ret; 
0x000a9f2e: lea eax, [edx + 0xc]; pop edi; pop ebx; ret; 
0x000a8232: lea eax, [edx + 0xc]; pop edi; ret; 
0x000a8392: lea eax, [edx + 0xc]; ret; 
0x000a8252: lea eax, [edx + 0xd]; pop edi; ret; 
0x000a83b2: lea eax, [edx + 0xd]; ret; 
0x000aaf35: lea eax, [edx + 0xe]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000a8272: lea eax, [edx + 0xe]; pop edi; ret; 
0x000a83d2: lea eax, [edx + 0xe]; ret; 
0x000a8138: lea eax, [edx + 0xf]; pop edi; ret; 
0x000a83e8: lea eax, [edx + 0xf]; ret; 
0x000a20fb: lea eax, [edx + 1]; pop ebx; pop esi; ret; 
0x000a8156: lea eax, [edx + 1]; pop edi; ret; 
0x000a8296: lea eax, [edx + 1]; ret; 
0x000a816c: lea eax, [edx + 2]; pop edi; ret; 
0x000a82ac: lea eax, [edx + 2]; ret; 
0x000ab064: lea eax, [edx + 3]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000a211e: lea eax, [edx + 3]; pop ebx; pop esi; ret; 
0x000a8084: lea eax, [edx + 3]; pop edi; ret; 
0x000a82b4: lea eax, [edx + 3]; ret; 
0x000a2132: lea eax, [edx + 4]; pop ebx; pop esi; ret; 
0x000a9ec1: lea eax, [edx + 4]; pop edi; pop ebx; ret; 
0x000a818a: lea eax, [edx + 4]; pop edi; ret; 
0x000a82ca: lea eax, [edx + 4]; ret; 
0x000a214a: lea eax, [edx + 5]; pop ebx; pop esi; ret; 
0x000a819c: lea eax, [edx + 5]; pop edi; ret; 
0x000a82dc: lea eax, [edx + 5]; ret; 
0x000a215e: lea eax, [edx + 6]; pop ebx; pop esi; ret; 
0x000a81ba: lea eax, [edx + 6]; pop edi; ret; 
0x000a82ea: lea eax, [edx + 6]; ret; 
0x000ab00d: lea eax, [edx + 7]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000a20ed: lea eax, [edx + 7]; pop ebx; pop esi; ret; 
0x000a80b8: lea eax, [edx + 7]; pop edi; ret; 
0x000a82f8: lea eax, [edx + 7]; ret; 
0x000a9ef3: lea eax, [edx + 8]; pop edi; pop ebx; ret; 
0x000a81ce: lea eax, [edx + 8]; pop edi; ret; 
0x000a830e: lea eax, [edx + 8]; ret; 
0x000a81f0: lea eax, [edx + 9]; pop edi; ret; 
0x000a8330: lea eax, [edx + 9]; ret; 
0x000b439a: lea eax, [edx + eax + 0x30]; ret; 
0x00140b04: lea eax, [edx + eax + 8]; pop ebx; ret; 
0x00093bf0: lea eax, [edx + edx]; mov ebx, dword ptr [eax]; mov eax, 0x107; call dword ptr gs:[0x10]; 
0x000b6016: lea eax, [edx - 0x160060]; and ch, 2; lea edx, [edx - 0x924b0]; cmovne eax, edx; ret; 
0x0009afe6: lea eax, [edx - 0x174c00]; and ch, 2; lea edx, [edx - 0xa02b0]; cmovne eax, edx; ret; 
0x0009af5d: lea eax, [edx - 0x1751d0]; test byte ptr [ecx + 0x7d], 2; lea edx, [edx - 0x17c220]; cmovne eax, edx; ret; 
0x0009bf66: lea eax, [edx - 0x175680]; and ch, 2; lea edx, [edx - 0x95fe0]; cmovne eax, edx; ret; 
0x0009c256: lea eax, [edx - 0x175a10]; and ch, 2; lea edx, [edx - 0x9af40]; cmovne eax, edx; ret; 
0x0009c2d6: lea eax, [edx - 0x175a80]; and ch, 2; lea edx, [edx - 0x9af10]; cmovne eax, edx; ret; 
0x0009c216: lea eax, [edx - 0x175af0]; and ch, 2; lea edx, [edx - 0x9d450]; cmovne eax, edx; ret; 
0x0009c296: lea eax, [edx - 0x175b50]; and ch, 2; lea edx, [edx - 0x9d420]; cmovne eax, edx; ret; 
0x0009b41d: lea eax, [edx - 0x176970]; test byte ptr [ecx + 0x7d], 2; lea edx, [edx - 0x179f20]; cmovne eax, edx; ret; 
0x0009b466: lea eax, [edx - 0x187a30]; and ch, 2; lea edx, [edx - 0x9ee40]; cmovne eax, edx; ret; 
0x001451bb: lea eax, [edx - 0x68d34]; push eax; call 0x30630; add esp, 0x10; add esp, 0xc; ret; 
0x00059351: lea eax, [edx - 0x6ce81]; push eax; call 0x109bf0; add esp, 0x1c; ret; 
0x0009b3a4: lea eax, [edx - 0x94920]; test byte ptr [ecx + 0x184], 4; lea edx, [edx - 0x187980]; cmove eax, edx; ret; 
0x0009bfb3: lea eax, [edx - 0xa4690]; and ebx, 1; lea edx, [edx - 0xa8900]; cmove eax, edx; pop ebx; ret; 
0x00131b63: lea eax, [edx - 0xa46b0]; and ebx, 1; lea edx, [edx - 0xa8920]; cmove eax, edx; pop ebx; ret; 
0x0009c043: lea eax, [edx - 0xa5690]; and ebx, 1; lea edx, [edx - 0xaa910]; cmove eax, edx; pop ebx; ret; 
0x00131bb3: lea eax, [edx - 0xa56b0]; and ebx, 1; lea edx, [edx - 0xaa930]; cmove eax, edx; pop ebx; ret; 
0x0009c3a3: lea eax, [edx - 0xa6680]; and ebx, 1; lea edx, [edx - 0xac940]; cmove eax, edx; pop ebx; ret; 
0x00131b13: lea eax, [edx - 0xa66a0]; and ebx, 1; lea edx, [edx - 0xac960]; cmove eax, edx; pop ebx; ret; 
0x0009c0d4: lea eax, [edx - 0xae420]; test byte ptr [ecx + 0x184], 1; lea edx, [edx - 0xaf660]; cmove eax, edx; ret; 
0x0009bff4: lea eax, [edx - 0xae9a0]; test byte ptr [ecx + 0x184], 1; lea edx, [edx - 0xaf040]; cmove eax, edx; ret; 
0x00131bf4: lea eax, [edx - 0xae9c0]; test byte ptr [ecx + 0x184], 1; lea edx, [edx - 0xaf060]; cmove eax, edx; ret; 
0x000a8144: lea eax, [edx]; pop edi; ret; 
0x000a8284: lea eax, [edx]; ret; 
0x000b5367: lea eax, [esi + 3]; pop esi; pop edi; ret; 
0x0006b9e5: lea eax, [esi + eax - 0x1bea21]; jmp eax; 
0x00066957: lea eax, [esi + eax - 0x1c3ae9]; jmp eax; 
0x00074ad8: lea eax, [esi + ebx]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001406f1: lea eax, [esi + edi]; pop ebx; pop esi; pop edi; ret; 
0x0007cb67: lea eax, [esp + 0x18]; push eax; push esi; call dword ptr [edi + 0x48]; 
0x00124791: lea eax, [esp + 0x24]; mov dword ptr [esp + 0x38], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0007c7fe: lea eax, [esp + 0x28]; push eax; push esi; call dword ptr [edi + 0x48]; 
0x000b644c: lea eax, [esp + 0x34]; push eax; push dword ptr [esi + 8]; call ebx; 
0x000da3de: lea eax, [esp + 0x38]; push eax; push dword ptr [esp + 0x24]; push dword ptr [esp + 0x30]; call ebx; 
0x000b62fe: lea eax, [esp + 0x40]; push eax; push dword ptr [edi]; call ebx; 
0x00077794: lea eax, [esp + 0x40]; push eax; push dword ptr [esp + 0x18]; call dword ptr [edi + 0x48]; 
0x000b6a64: lea eax, [esp + 0x64]; mov dword ptr [esp + 0x34], edx; push eax; push edi; call esi; 
0x000b70c8: lea eax, [esp + 0x64]; push eax; push esi; call ebx; 
0x00028c93: lea eax, [esp + 0x68]; push eax; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; call esi; 
0x0002623a: lea eax, [esp + 0x6c]; push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x5c]; call edi; 
0x0002948a: lea eax, [esp + 0x80]; push eax; push dword ptr [esp + 0x64]; push dword ptr [esp + 0x64]; call edi; 
0x000cba26: lea eax, [esp + 0xb4]; push eax; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x000cb7ae: lea eax, [esp + 0xec]; push eax; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x00070dec: lea eax, [esp + 8]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x000b3fd9: lea eax, es:[ecx + eax + 0x10]; ret; 
0x000b3d09: lea eax, es:[edi + eax + 0x10]; pop edi; ret; 
0x000811f6: lea ebp, [0x89000001]; ret 0x468b; 
0x0002c445: lea ebp, [ecx + edi*8]; call dword ptr [eax + 0x56]; 
0x001412bd: lea ebp, [edi + edi*8 - 1]; jmp dword ptr [ebp - 0x5f]; 
0x00087670: lea ebp, [edx + eax]; add byte ptr [eax], al; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x000cb011: lea ebp, [esp + 0x6c]; push ebp; mov ecx, dword ptr [esp + 0x34]; call ecx; 
0x0016f080: lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00086baa: lea ebx, [eax + 0x520]; mov eax, 0x182; call dword ptr gs:[0x10]; 
0x000de36b: lea ebx, [eax + 0x70]; mov dword ptr [eax + 0x70], ebx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x000869d7: lea ebx, [eax + 0x70]; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x000b5fe0: lea ebx, [eax + 0xc]; mov eax, ebx; pop ebx; ret; 
0x000b5fd8: lea ebx, [eax + 4]; mov eax, ebx; pop ebx; ret; 
0x000b5fca: lea ebx, [eax + 8]; mov eax, ebx; pop ebx; ret; 
0x0004b070: lea ebx, [eax*4 - 4]; lea eax, [eax + eax*8 + 2]; call 0x4b030; add eax, ebx; jmp eax; 
0x00085057: lea ebx, [ebp + eax*4 + 0x28]; mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; call dword ptr gs:[0x10]; 
0x000c9ff2: lea ebx, [ebx + ebx - 1]; mov eax, ebx; pop ebx; pop esi; ret; 
0x000d7082: lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x00119bed: lea ebx, [edx + 1]; jne 0x119bcb; mov eax, esi; pop ebx; pop esi; ret; 
0x00074ecc: lea ebx, [edx + 4]; mov dword ptr [eax + 0x10], ebx; mov eax, ecx; mov dword ptr [edx], ecx; pop ebx; ret; 
0x00161a07: lea ebx, [esp + 0xe0]; push ebx; push eax; call dword ptr [edx + 8]; 
0x00107a12: lea ebx, [esp + 8]; mov eax, 0x13e; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00086a3b: lea ecx, [eax + 0x47c]; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x00116338: lea ecx, [eax + 0x5402]; mov eax, edi; call dword ptr gs:[0x10]; 
0x0004aaab: lea ecx, [eax + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x00162f24: lea ecx, [eax + 0xa4a0]; mov eax, dword ptr gs:[0]; mov dword ptr [eax + edx], ecx; ret; 
0x000c9f7b: lea ecx, [eax + 1]; jne 0xc9f58; mov eax, ecx; ret; 
0x0003851b: lea ecx, [eax + 1]; mov dword ptr [edx + 0x68], ecx; ret; 
0x0008f4cc: lea ecx, [eax - 2]; lock cmpxchg dword ptr [edx], ecx; jne 0x8f4c6; xor eax, eax; pop ebx; ret; 
0x0008766f: lea ecx, [ebp + 0x22c]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x000de8f4: lea ecx, [ebp - 0x6d179]; mov edi, 0x1000; mov ebx, dword ptr [esp + 0xc0]; call dword ptr gs:[0x10]; 
0x00127082: lea ecx, [ebp - 0x6fffd98c]; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; call dword ptr gs:[0x10]; 
0x001220dd: lea ecx, [ebx + ebx]; pop ebx; shr eax, cl; and eax, 3; ret; 
0x001596af: lea ecx, [ebx - 0x137cfbbd]; or al, 0x53; call dword ptr [eax + 0x10]; 
0x0004acfc: lea ecx, [ecx + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x001669b8: lea ecx, [ecx - 0x4e0]; mov dword ptr [eax + 0x14], edx; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x0008725e: lea ecx, [ecx - 0x72600]; mov esi, 8; mov dword ptr [esp + 8], edx; call dword ptr gs:[0x10]; 
0x0009421b: lea ecx, [edi - 0x722c0]; call dword ptr gs:[0x10]; 
0x000a593d: lea ecx, [edx + 0x10]; jne 0xa5ed0; pop edi; pop ebx; ret; 
0x000a617d: lea ecx, [edx + 0x10]; jne 0xa5ed1; pop ebx; ret; 
0x000aa65e: lea ecx, [edx + 0x10]; jne 0xaa331; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000a6095: lea ecx, [edx + 0xa]; jne 0xa5ed1; pop ebx; ret; 
0x000aa546: lea ecx, [edx + 0xa]; jne 0xaa331; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000a60b3: lea ecx, [edx + 0xb]; jne 0xa5ed1; pop ebx; ret; 
0x000aa574: lea ecx, [edx + 0xb]; jne 0xaa331; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000a5903: lea ecx, [edx + 0xc]; jne 0xa5ed0; pop edi; pop ebx; ret; 
0x000a60d3: lea ecx, [edx + 0xc]; jne 0xa5ed1; pop ebx; ret; 
0x000aa5a4: lea ecx, [edx + 0xc]; jne 0xaa331; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000a5cc7: lea ecx, [edx + 0xd]; jne 0xa5ed0; pop edi; pop ebx; ret; 
0x000a60f7: lea ecx, [edx + 0xd]; jne 0xa5ed1; pop ebx; ret; 
0x000aa5d8: lea ecx, [edx + 0xd]; jne 0xaa331; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000a5cf7: lea ecx, [edx + 0xe]; jne 0xa5ed0; pop edi; pop ebx; ret; 
0x000a6127: lea ecx, [edx + 0xe]; jne 0xa5ed1; pop ebx; ret; 
0x000a5d27: lea ecx, [edx + 0xf]; jne 0xa5ed0; pop edi; pop ebx; ret; 
0x000a6157: lea ecx, [edx + 0xf]; jne 0xa5ed1; pop ebx; ret; 
0x000aa638: lea ecx, [edx + 0xf]; jne 0xaa331; pop ebx; ret; 
0x000a5b89: lea ecx, [edx + 1]; jne 0xa5ed0; pop edi; pop ebx; ret; 
0x000a5f69: lea ecx, [edx + 1]; jne 0xa5ed1; pop ebx; ret; 
0x000aa3c9: lea ecx, [edx + 1]; jne 0xaa331; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x0007bf20: lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x000a5f8b: lea ecx, [edx + 2]; jne 0xa5ed1; pop ebx; ret; 
0x000aa3ec: lea ecx, [edx + 2]; jne 0xaa331; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000a5bd1: lea ecx, [edx + 3]; jne 0xa5ed0; pop edi; pop ebx; ret; 
0x000a5fb1: lea ecx, [edx + 3]; jne 0xa5ed1; pop ebx; ret; 
0x000aa412: lea ecx, [edx + 3]; jne 0xaa331; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000a5fc9: lea ecx, [edx + 4]; jne 0xa5ed1; pop ebx; ret; 
0x000aa43a: lea ecx, [edx + 4]; jne 0xaa331; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x00074466: lea ecx, [edx + 4]; mov dword ptr [eax], ecx; mov eax, dword ptr [edx]; ret; 
0x000a5bef: lea ecx, [edx + 5]; jne 0xa5ed0; pop edi; pop ebx; ret; 
0x000a5fef: lea ecx, [edx + 5]; jne 0xa5ed1; pop ebx; ret; 
0x000aa460: lea ecx, [edx + 5]; jne 0xaa331; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000a5c11: lea ecx, [edx + 6]; jne 0xa5ed0; pop edi; pop ebx; ret; 
0x000a6011: lea ecx, [edx + 6]; jne 0xa5ed1; pop ebx; ret; 
0x000a5c2f: lea ecx, [edx + 7]; jne 0xa5ed0; pop edi; pop ebx; ret; 
0x000a602f: lea ecx, [edx + 7]; jne 0xa5ed1; pop ebx; ret; 
0x000a604d: lea ecx, [edx + 8]; jne 0xa5ed1; pop ebx; ret; 
0x000aa4ee: lea ecx, [edx + 8]; jne 0xaa331; pop ebx; ret; 
0x000a5c53: lea ecx, [edx + 9]; jne 0xa5ed0; pop edi; pop ebx; ret; 
0x000a6073: lea ecx, [edx + 9]; jne 0xa5ed1; pop ebx; ret; 
0x000aa514: lea ecx, [edx + 9]; jne 0xaa331; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x0005b83e: lea ecx, [edx + edi*8 - 1]; call dword ptr [ecx - 0x18]; 
0x0007079e: lea ecx, [esi + 0x28]; push ecx; push 1; push esi; call eax; 
0x000889c4: lea ecx, [esi - 0x72580]; mov dword ptr [esp + 8], edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x00162074: lea ecx, [esp + 0x10]; push ecx; push 0xd; push edx; call dword ptr [eax + 0x14]; 
0x00071a46: lea ecx, [esp + 0x10]; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x00165776: lea ecx, [esp + 0x10]; push ecx; push edx; call dword ptr [eax]; 
0x000d7190: lea ecx, [esp + 0x14]; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x00122249: lea ecx, [esp + 0x1c]; mov eax, 0x19a; call dword ptr gs:[0x10]; 
0x000d715b: lea ecx, [esp + 0x1c]; push ecx; mov dword ptr [esp + 0x18], ecx; push ebx; call eax; 
0x00161fb7: lea ecx, [esp + 0x20]; push ecx; push 6; push eax; call dword ptr [edx + 0x14]; 
0x00165efa: lea ecx, [esp + 0x20]; push ecx; push esi; call dword ptr [eax]; 
0x00161fa4: lea ecx, [esp + 0x28]; push ecx; push 4; push edx; call dword ptr [eax + 0x14]; 
0x000c4ec3: lea ecx, [esp + 0x54]; push ecx; mov eax, dword ptr [esp + 0x40]; push dword ptr [eax]; call edi; 
0x00093da0: lea ecx, [esp + 0xc]; mov eax, 0x105; call dword ptr gs:[0x10]; 
0x00122188: lea ecx, [esp + 0xc]; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x000d756f: lea ecx, [esp + 0xc]; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000fb1da: lea ecx, [esp + 0xc]; mov eax, 0x1a7; call dword ptr gs:[0x10]; 
0x000ce9c8: lea ecx, [esp + 0xc]; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x00122dcb: lea ecx, [esp + 0xc]; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x00122f4b: lea ecx, [esp + 0xc]; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x00122e8b: lea ecx, [esp + 0xc]; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x000d749c: lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x000d75d7: lea ecx, [esp + 4]; mov dword ptr [esp + 8], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x000d7303: lea ecx, [esp + 4]; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x00116b38: lea ecx, [esp + 4]; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x000fb130: lea ecx, [esp + 4]; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x000de344: lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x0005d483: lea edi, [eax - 0x76000005]; ret 0xb589; 
0x000501a3: lea edi, [eax - 0x76000037]; fld dword ptr [ebx - 0x361f7b]; jmp dword ptr [eax]; 
0x001196b7: lea edi, [ebx - 1]; cmp edi, 3; cmovae esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0007faef: lea edi, [ecx + 1]; push eax; push edx; mov dword ptr [esp + 0x40], edx; call dword ptr [esi + 0xc]; 
0x000abd8b: lea edi, [edi + 0x10]; jne 0xac520; pop edi; pop esi; pop ebx; ret; 
0x000ad42e: lea edi, [edi + 0x10]; jne 0xadc50; pop edi; pop esi; pop ebx; ret; 
0x000ad4a4: lea edi, [edi + 0x13]; jne 0xadc50; pop edi; pop esi; pop ebx; ret; 
0x000abe65: lea edi, [edi + 0x16]; jne 0xac520; pop edi; pop esi; pop ebx; ret; 
0x000abe95: lea edi, [edi + 0x17]; jne 0xac520; pop edi; pop esi; pop ebx; ret; 
0x000ad5cb: lea edi, [edi + 0x19]; jne 0xadc50; pop edi; pop esi; pop ebx; ret; 
0x000abf2d: lea edi, [edi + 0x1a]; jne 0xac520; pop edi; pop esi; pop ebx; ret; 
0x000abf5b: lea edi, [edi + 0x1b]; jne 0xac520; pop edi; pop esi; pop ebx; ret; 
0x000abf8b: lea edi, [edi + 0x1c]; jne 0xac520; pop edi; pop esi; pop ebx; ret; 
0x000ad65e: lea edi, [edi + 0x1c]; jne 0xadc50; pop edi; pop esi; pop ebx; ret; 
0x000abfb5: lea edi, [edi + 0x1d]; jne 0xac520; pop edi; pop esi; pop ebx; ret; 
0x000ad688: lea edi, [edi + 0x1d]; jne 0xadc50; pop edi; pop esi; pop ebx; ret; 
0x000abfe5: lea edi, [edi + 0x1e]; jne 0xac520; pop edi; pop esi; pop ebx; ret; 
0x000ad6b8: lea edi, [edi + 0x1e]; jne 0xadc50; pop edi; pop esi; pop ebx; ret; 
0x000ac015: lea edi, [edi + 0x1f]; jne 0xac520; pop edi; pop esi; pop ebx; ret; 
0x000ad6e8: lea edi, [edi + 0x1f]; jne 0xadc50; pop edi; pop esi; pop ebx; ret; 
0x000ac045: lea edi, [edi + 0x20]; jne 0xac520; pop edi; pop esi; pop ebx; ret; 
0x000ad718: lea edi, [edi + 0x20]; jne 0xadc50; pop edi; pop esi; pop ebx; ret; 
0x000abca3: lea edi, [edi + 0xa]; jne 0xac520; pop edi; pop esi; pop ebx; ret; 
0x000ad316: lea edi, [edi + 0xa]; jne 0xadc50; pop edi; pop esi; pop ebx; ret; 
0x000ad344: lea edi, [edi + 0xb]; jne 0xadc50; pop edi; pop esi; pop ebx; ret; 
0x000abce1: lea edi, [edi + 0xc]; jne 0xac520; pop edi; pop esi; pop ebx; ret; 
0x000ad374: lea edi, [edi + 0xc]; jne 0xadc50; pop edi; pop esi; pop ebx; ret; 
0x000abd05: lea edi, [edi + 0xd]; jne 0xac520; pop edi; pop esi; pop ebx; ret; 
0x000ad3a8: lea edi, [edi + 0xd]; jne 0xadc50; pop edi; pop esi; pop ebx; ret; 
0x000ad3d8: lea edi, [edi + 0xe]; jne 0xadc50; pop edi; pop esi; pop ebx; ret; 
0x000abd65: lea edi, [edi + 0xf]; jne 0xac520; pop edi; pop esi; pop ebx; ret; 
0x000ad408: lea edi, [edi + 0xf]; jne 0xadc50; pop edi; pop esi; pop ebx; ret; 
0x000abb75: lea edi, [edi + 1]; jne 0xac520; pop edi; pop esi; pop ebx; ret; 
0x000ad20c: lea edi, [edi + 2]; jne 0xadc50; pop edi; pop esi; pop ebx; ret; 
0x000ad22f: lea edi, [edi + 3]; jne 0xadc50; pop edi; pop esi; pop ebx; ret; 
0x000ad24a: lea edi, [edi + 4]; jne 0xadc50; pop edi; pop esi; pop ebx; ret; 
0x000abbfa: lea edi, [edi + 5]; jne 0xac520; pop edi; pop esi; pop ebx; ret; 
0x000ad26d: lea edi, [edi + 5]; jne 0xadc50; pop edi; pop esi; pop ebx; ret; 
0x000abc1f: lea edi, [edi + 6]; jne 0xac520; pop edi; pop esi; pop ebx; ret; 
0x000ad292: lea edi, [edi + 6]; jne 0xadc50; pop edi; pop esi; pop ebx; ret; 
0x000abc3d: lea edi, [edi + 7]; jne 0xac520; pop edi; pop esi; pop ebx; ret; 
0x000ad2b0: lea edi, [edi + 7]; jne 0xadc50; pop edi; pop esi; pop ebx; ret; 
0x000abc5b: lea edi, [edi + 8]; jne 0xac520; pop edi; pop esi; pop ebx; ret; 
0x000abc7e: lea edi, [edi + 9]; jne 0xac520; pop edi; pop esi; pop ebx; ret; 
0x00158a49: lea edi, [esp + 0x40]; mov ecx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [ecx + 8]; 
0x0017a3b5: lea edi, [esp + 8]; mov eax, 0x75; mov ebx, 3; call dword ptr gs:[0x10]; 
0x0004acf9: lea edx, [eax + 0x6c]; lea ecx, [ecx + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0004aa6d: lea edx, [eax + 0x6c]; xor ecx, ecx; mov ebx, 0; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0009eb36: lea edx, [eax + 1]; mov eax, ebx; cmovne eax, edx; add esp, 0x18; pop ebx; ret; 
0x0014741e: lea edx, [eax + ecx]; pop ebx; mov eax, edx; ret; 
0x0002c2f5: lea edx, [eax - 0x1fdfb0]; push edx; push dword ptr [eax + 0x1018]; call 0x11e250; add esp, 0x1c; ret; 
0x0009b524: lea edx, [eax - 0x96600]; lea eax, [eax - 0x174b10]; test byte ptr [ecx + 0x7e], 0x10; cmovne eax, edx; ret; 
0x001611ad: lea edx, [ebx + 0x38]; push edx; call eax; 
0x0013c41a: lea edx, [ebx + 0x4b40]; push edx; call eax; 
0x001605ed: lea edx, [ebx + 0x4c]; push edx; call eax; 
0x0015d8d0: lea edx, [ebx + 0xac]; push edx; call eax; 
0x00172027: lea edx, [ebx - 0x1ba0]; mov dword ptr [eax + 0x94], edx; add esp, 8; pop ebx; ret; 
0x001313ff: lea edx, [ebx - 0xf8d20]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0014e66f: lea edx, [ebx]; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0015b07a: lea edx, [ecx + 4]; push edx; push ebx; call dword ptr [eax + 4]; 
0x0015b03a: lea edx, [ecx + 4]; push edx; push ebx; call dword ptr [eax]; 
0x0002ed50: lea edx, [ecx - 0x6d179]; mov eax, edx; pop ebx; ret; 
0x0015e521: lea edx, [edi + 8]; push edx; call eax; 
0x00126f04: lea edx, [edi + edi]; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; call dword ptr gs:[0x10]; 
0x000673b5: lea edx, [edi + esi*8 - 1]; call dword ptr [ebx + 0x57]; 
0x000673b5: lea edx, [edi + esi*8 - 1]; call dword ptr [ebx + 0x57]; push dword ptr [ebp - 0x87c]; call edx; 
0x0016560a: lea edx, [edi - 0x6d78c]; mov eax, dword ptr [esi + 4]; push ebx; push edx; push esi; call dword ptr [eax + 0xc]; 
0x0005c388: lea edx, [edx + edi*8 - 1]; call dword ptr [edi - 0x18]; 
0x0005b8a0: lea edx, [edx + edi*8 - 1]; call dword ptr [edx + 0x50]; 
0x0005c28d: lea edx, [edx + edi*8 - 1]; call dword ptr [esi - 0x18]; 
0x0009dba1: lea edx, [edx - 0x175e30]; cmove eax, edx; ret; 
0x000a2351: lea edx, [edx - 0x1762c0]; cmove eax, edx; ret; 
0x0009bf31: lea edx, [edx - 0x176620]; cmove eax, edx; ret; 
0x0009b501: lea edx, [edx - 0x176810]; cmove eax, edx; ret; 
0x0009afb1: lea edx, [edx - 0x176920]; cmove eax, edx; ret; 
0x0009b427: lea edx, [edx - 0x179f20]; cmovne eax, edx; ret; 
0x0009af67: lea edx, [edx - 0x17c220]; cmovne eax, edx; ret; 
0x0009c1d7: lea edx, [edx - 0x181c10]; cmovne eax, edx; ret; 
0x0009c187: lea edx, [edx - 0x183480]; cmovne eax, edx; ret; 
0x0009b4b7: lea edx, [edx - 0x186000]; cmovne eax, edx; ret; 
0x0009b077: lea edx, [edx - 0x187850]; cmovne eax, edx; ret; 
0x0009b3b1: lea edx, [edx - 0x187980]; cmove eax, edx; ret; 
0x00167037: lea edx, [edx - 0x4a0]; mov dword ptr [eax + 4], edx; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0xc], edx; ret; 
0x000b601f: lea edx, [edx - 0x924b0]; cmovne eax, edx; ret; 
0x0009bf6f: lea edx, [edx - 0x95fe0]; cmovne eax, edx; ret; 
0x0009c2df: lea edx, [edx - 0x9af10]; cmovne eax, edx; ret; 
0x0009c25f: lea edx, [edx - 0x9af40]; cmovne eax, edx; ret; 
0x0009c29f: lea edx, [edx - 0x9d420]; cmovne eax, edx; ret; 
0x0009c21f: lea edx, [edx - 0x9d450]; cmovne eax, edx; ret; 
0x0009b46f: lea edx, [edx - 0x9ee40]; cmovne eax, edx; ret; 
0x0009afef: lea edx, [edx - 0xa02b0]; cmovne eax, edx; ret; 
0x0009c09c: lea edx, [edx - 0xa3570]; cmove eax, edx; pop ebx; ret; 
0x0009bfbc: lea edx, [edx - 0xa8900]; cmove eax, edx; pop ebx; ret; 
0x00131b6c: lea edx, [edx - 0xa8920]; cmove eax, edx; pop ebx; ret; 
0x0009c04c: lea edx, [edx - 0xaa910]; cmove eax, edx; pop ebx; ret; 
0x00131bbc: lea edx, [edx - 0xaa930]; cmove eax, edx; pop ebx; ret; 
0x0009c3ac: lea edx, [edx - 0xac940]; cmove eax, edx; pop ebx; ret; 
0x00131b1c: lea edx, [edx - 0xac960]; cmove eax, edx; pop ebx; ret; 
0x0009c001: lea edx, [edx - 0xaf040]; cmove eax, edx; ret; 
0x00131c01: lea edx, [edx - 0xaf060]; cmove eax, edx; ret; 
0x0009c0e1: lea edx, [edx - 0xaf660]; cmove eax, edx; ret; 
0x00086871: lea edx, [esi + 0x22c]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x00078c7e: lea edx, [esi + 0x28]; push edx; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x00070285: lea edx, [esi + 0x28]; push edx; push 1; push esi; call eax; 
0x00078d5d: lea edx, [esi + 4]; push edx; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x00105567: lea edx, [esi + edi*8 - 1]; jmp dword ptr [ebp - 0x5f]; 
0x001626b9: lea edx, [esi - 0xc4940]; push 0; push edx; push 4; push ebx; call dword ptr [eax]; 
0x001590d0: lea edx, [esi - 0xd0be0]; push edx; push 1; push ebx; call dword ptr [eax]; 
0x00159201: lea edx, [esi - 0xd0be0]; push edx; push 2; push ebx; call dword ptr [eax]; 
0x0016659a: lea edx, [esp + 0x10]; mov eax, dword ptr [ecx + 4]; push edx; push ecx; call dword ptr [eax + 0x24]; 
0x00165b2a: lea edx, [esp + 0x10]; mov eax, dword ptr [ecx + 4]; push edx; push ecx; call dword ptr [eax + 4]; 
0x001662ac: lea edx, [esp + 0x10]; push edx; push ebx; call dword ptr [eax + 0x20]; 
0x0015f1a8: lea edx, [esp + 0x10]; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x0016597e: lea edx, [esp + 0x10]; push edx; push ebx; call dword ptr [eax + 4]; 
0x0016591b: lea edx, [esp + 0x10]; push edx; push ebx; call dword ptr [eax]; 
0x0016656e: lea edx, [esp + 0x10]; push edx; push ecx; call dword ptr [eax + 0x20]; 
0x00165c16: lea edx, [esp + 0x10]; push edx; push ecx; call dword ptr [eax + 4]; 
0x00165afe: lea edx, [esp + 0x10]; push edx; push ecx; call dword ptr [eax]; 
0x0014100e: lea edx, [esp + 0x10]; push edx; push edi; call eax; 
0x001410da: lea edx, [esp + 0x10]; push edx; push esi; call eax; 
0x000e0e7b: lea edx, [esp + 0x14]; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x0016134f: lea edx, [esp + 0x14c]; push edx; push ebx; call dword ptr [eax + 4]; 
0x000939a8: lea edx, [esp + 0x18]; mov eax, 0x103; mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00109425: lea edx, [esp + 0x18]; mov eax, 0x10c; call dword ptr gs:[0x10]; 
0x00109595: lea edx, [esp + 0x18]; mov eax, 0x10d; call dword ptr gs:[0x10]; 
0x000ceb5c: lea edx, [esp + 0x1c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x001624f8: lea edx, [esp + 0x20]; push edx; push eax; call edi; 
0x0007cea7: lea edx, [esp + 0x28]; push edx; push esi; call dword ptr [eax + 0x48]; 
0x00108ec8: lea edx, [esp + 0x2c]; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x000b67fa: lea edx, [esp + 0x34]; push edx; push dword ptr [edi + 8]; call ebx; 
0x00163c1c: lea edx, [esp + 0x38]; push edx; call dword ptr [eax + 0xc]; 
0x0015db72: lea edx, [esp + 0xac]; push edx; push esi; call dword ptr [eax + 4]; 
0x001169f2: lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0011ee98: lea edx, [esp + 0xc]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x00122406: lea edx, [esp + 0xc]; mov ebx, dword ptr [esp + 0x50]; call dword ptr gs:[0x10]; 
0x00166296: lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 0x20]; 
0x001662eb: lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x0016595b: lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 4]; 
0x00165906: lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax]; 
0x000d72d5: lea edx, [esp + 0xc]; push edx; push ebx; call eax; 
0x00165cb6: lea edx, [esp + 0xc]; push edx; push ecx; call dword ptr [eax + 4]; 
0x00115ab4: lea edx, [esp + 4]; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x001164ee: lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0010551b: lea edx, [esp + 8]; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x0003a2dc: lea esi, [eax - 0x1c60]; cmp ebx, esi; jae 0x3a2f9; lea esi, [esi]; lea esi, [esi]; call dword ptr [ebx]; 
0x00143a64: lea esi, [ebx + edi*8 - 0x6a740001]; mov eax, 0x85fffffb; ror byte ptr [edi], 0x45; fsubr st(1); ret 0xfffe; 
0x00038dd2: lea esi, [ecx + eax]; push esi; call edi; 
0x0004f191: lea esi, [ecx + ecx*8 - 1]; jmp dword ptr [ebp - 0x75]; 
0x0006d284: lea esi, [edi + esi*8 - 1]; call dword ptr [esi + 0x52]; 
0x0006c56c: lea esi, [edi + esi*8 - 1]; call dword ptr [esi + 0x6a]; 
0x00166fef: lea esi, [edx - 0x3b7c0010]; adc byte ptr [ebx - 0x6bf0fe08], al; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x001959ba: lea esi, [esi]; add eax, 1; ret; 
0x00196f8d: lea esi, [esi]; add edx, 2; jl 0x197040; lea eax, [ecx + 2]; ret; 
0x00196f9d: lea esi, [esi]; add edx, 3; jl 0x197040; lea eax, [ecx + 3]; ret; 
0x00196fad: lea esi, [esi]; add edx, 5; jl 0x197040; lea eax, [ecx + 5]; ret; 
0x00196fbd: lea esi, [esi]; add edx, 6; jl 0x197040; lea eax, [ecx + 6]; ret; 
0x0007812d: lea esi, [esi]; add esp, 4; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0008372d: lea esi, [esi]; add esp, 4; pop ebx; pop esi; ret; 
0x0015aa0d: lea esi, [esi]; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00132cd9: lea esi, [esi]; add esp, 8; pop ebx; ret; 
0x00058254: lea esi, [esi]; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0019637d: lea esi, [esi]; and eax, 0x1f; jne 0x196100; xor eax, eax; pop edi; ret; 
0x001963ad: lea esi, [esi]; and eax, 0x1ff; jne 0x196100; xor eax, eax; pop edi; ret; 
0x0019638d: lea esi, [esi]; and eax, 0x3f; jne 0x196100; xor eax, eax; pop edi; ret; 
0x0019639d: lea esi, [esi]; and eax, 0x7f; jne 0x196100; xor eax, eax; pop edi; ret; 
0x00133aad: lea esi, [esi]; and eax, 0xffffff; ret; 
0x0008468d: lea esi, [esi]; and eax, 0xfffffffd; mov dword ptr [ecx + 8], eax; xor eax, eax; ret; 
0x0019635d: lea esi, [esi]; and eax, 3; jne 0x196100; xor eax, eax; pop edi; ret; 
0x0019636d: lea esi, [esi]; and eax, 7; jne 0x196100; xor eax, eax; pop edi; ret; 
0x000b3caa: lea esi, [esi]; bsf eax, eax; lea eax, [eax + edi - 0x10]; pop edi; ret; 
0x000b43bd: lea esi, [esi]; bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x000b3f8d: lea esi, [esi]; bsr eax, eax; lea eax, [eax + ecx + 0x10]; ret; 
0x000b40cc: lea esi, [esi]; bsr edi, edi; lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x0003a2ed: lea esi, [esi]; call dword ptr [ebx]; 
0x00084dd4: lea esi, [esi]; cmp edx, esi; jbe 0x84e18; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x00080e7c: lea esi, [esi]; endbr32; call 0x171e01; add eax, 0x1a9177; mov eax, dword ptr [eax + 0xce0]; ret; 
0x000384cc: lea esi, [esi]; endbr32; call 0x171e01; add eax, 0x1f1b27; mov eax, dword ptr [eax + 0x64]; ret; 
0x000227ac: lea esi, [esi]; endbr32; call 0x171e01; add eax, 0x207847; mov eax, dword ptr [eax + 0xff0]; ret; 
0x0002278d: lea esi, [esi]; endbr32; call 0x171e01; add eax, 0x207867; mov eax, dword ptr [eax + 0xfec]; ret; 
0x0002174c: lea esi, [esi]; endbr32; call 0x171e01; add eax, 0x2088a7; lea eax, [eax - 0x6921c]; ret; 
0x00080e1d: lea esi, [esi]; endbr32; mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x00080e3a: lea esi, [esi]; endbr32; mov eax, 0xffffffff; ret; 
0x001585cc: lea esi, [esi]; endbr32; mov eax, 1; ret; 
0x00166b6c: lea esi, [esi]; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x0017199d: lea esi, [esi]; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x00171a4c: lea esi, [esi]; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x54]; ret; 
0x001719cc: lea esi, [esi]; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x001719ac: lea esi, [esi]; endbr32; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x00080ebc: lea esi, [esi]; endbr32; mov eax, dword ptr [esp + 4]; ret; 
0x0016676c: lea esi, [esi]; endbr32; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x00080e6a: lea esi, [esi]; endbr32; ret; 
0x00080e4a: lea esi, [esi]; endbr32; xor eax, eax; ret; 
0x00069739: lea esi, [esi]; jmp eax; 
0x000e95ed: lea esi, [esi]; lea eax, [ecx + 1]; pop ebx; pop esi; ret; 
0x001982c9: lea esi, [esi]; lea eax, [ecx + 8]; ret; 
0x00195d7c: lea esi, [esi]; lea eax, [edi + 0xa]; pop edi; ret; 
0x00195d8c: lea esi, [esi]; lea eax, [edi + 0xb]; pop edi; ret; 
0x00195d9c: lea esi, [esi]; lea eax, [edi + 0xc]; pop edi; ret; 
0x00195dac: lea esi, [esi]; lea eax, [edi + 0xd]; pop edi; ret; 
0x00195dbc: lea esi, [esi]; lea eax, [edi + 0xe]; pop edi; ret; 
0x00195d0c: lea esi, [esi]; lea eax, [edi + 2]; pop edi; ret; 
0x00195d1c: lea esi, [esi]; lea eax, [edi + 3]; pop edi; ret; 
0x00195d2c: lea esi, [esi]; lea eax, [edi + 4]; pop edi; ret; 
0x00195d3c: lea esi, [esi]; lea eax, [edi + 5]; pop edi; ret; 
0x00195d4c: lea esi, [esi]; lea eax, [edi + 6]; pop edi; ret; 
0x00195d5c: lea esi, [esi]; lea eax, [edi + 8]; pop edi; ret; 
0x00195d6c: lea esi, [esi]; lea eax, [edi + 9]; pop edi; ret; 
0x001961dc: lea esi, [esi]; lea eax, [edi - 0xa]; pop edi; ret; 
0x001961cc: lea esi, [esi]; lea eax, [edi - 0xb]; pop edi; ret; 
0x001961bc: lea esi, [esi]; lea eax, [edi - 0xd]; pop edi; ret; 
0x001961ac: lea esi, [esi]; lea eax, [edi - 0xe]; pop edi; ret; 
0x0019624c: lea esi, [esi]; lea eax, [edi - 1]; pop edi; ret; 
0x0019623c: lea esi, [esi]; lea eax, [edi - 2]; pop edi; ret; 
0x0019622c: lea esi, [esi]; lea eax, [edi - 3]; pop edi; ret; 
0x0019855c: lea esi, [esi]; lea eax, [edi - 4]; pop edi; ret; 
0x0019621c: lea esi, [esi]; lea eax, [edi - 5]; pop edi; ret; 
0x0019620c: lea esi, [esi]; lea eax, [edi - 6]; pop edi; ret; 
0x001961fc: lea esi, [esi]; lea eax, [edi - 7]; pop edi; ret; 
0x0019854a: lea esi, [esi]; lea eax, [edi - 8]; pop edi; ret; 
0x001961ec: lea esi, [esi]; lea eax, [edi - 9]; pop edi; ret; 
0x0019739a: lea esi, [esi]; lea eax, [edx + 1]; ret; 
0x00122181: lea esi, [esi]; lea ecx, [esp + 0xc]; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x000fb129: lea esi, [esi]; lea ecx, [esp + 4]; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x001959b3: lea esi, [esi]; lea esi, [esi]; add eax, 1; ret; 
0x00133aa6: lea esi, [esi]; lea esi, [esi]; and eax, 0xffffff; ret; 
0x0003a2e6: lea esi, [esi]; lea esi, [esi]; call dword ptr [ebx]; 
0x00082d35: lea esi, [esi]; lea esi, [esi]; endbr32; ret; 
0x001982c2: lea esi, [esi]; lea esi, [esi]; lea eax, [ecx + 8]; ret; 
0x00197393: lea esi, [esi]; lea esi, [esi]; lea eax, [edx + 1]; ret; 
0x0008ea46: lea esi, [esi]; lea esi, [esi]; mov dword ptr [eax + 4], edx; ret; 
0x00084bb6: lea esi, [esi]; lea esi, [esi]; mov eax, 0x16; ret; 
0x00140496: lea esi, [esi]; lea esi, [esi]; mov eax, 0xffffffff; ret; 
0x000c9ec3: lea esi, [esi]; lea esi, [esi]; mov eax, 1; ret; 
0x000c9ed6: lea esi, [esi]; lea esi, [esi]; mov eax, 2; ret; 
0x000c9ee6: lea esi, [esi]; lea esi, [esi]; mov eax, 3; ret; 
0x000c9ef6: lea esi, [esi]; lea esi, [esi]; mov eax, 4; ret; 
0x000c9f06: lea esi, [esi]; lea esi, [esi]; mov eax, 5; ret; 
0x000c9f16: lea esi, [esi]; lea esi, [esi]; mov eax, 6; ret; 
0x000c9f26: lea esi, [esi]; lea esi, [esi]; mov eax, 7; ret; 
0x00198295: lea esi, [esi]; lea esi, [esi]; mov eax, ecx; ret; 
0x000a5d33: lea esi, [esi]; lea esi, [esi]; pop ebx; ret; 
0x00095c96: lea esi, [esi]; lea esi, [esi]; xor eax, eax; ret; 
0x000a813d: lea esi, [esi]; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; pop edi; ret; 
0x000a3d6c: lea esi, [esi]; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x000a3e8d: lea esi, [esi]; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x000afd4a: lea esi, [esi]; mov byte ptr [eax], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000a5d49: lea esi, [esi]; mov byte ptr [ecx], dl; pop ebx; ret; 
0x0008ea4d: lea esi, [esi]; mov dword ptr [eax + 4], edx; ret; 
0x0015a2e4: lea esi, [esi]; mov dword ptr [eax], 0xc; pop ebx; ret; 
0x0008e1dc: lea esi, [esi]; mov eax, 0x10; add esp, 0xc; ret; 
0x0008496c: lea esi, [esi]; mov eax, 0x16; pop ebx; ret; 
0x00084bbd: lea esi, [esi]; mov eax, 0x16; ret; 
0x000dfdb4: lea esi, [esi]; mov eax, 0x40; ret; 
0x00122dfa: lea esi, [esi]; mov eax, 0x6a; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00122f7a: lea esi, [esi]; mov eax, 0x6b; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00088a7a: lea esi, [esi]; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x001495bd: lea esi, [esi]; mov eax, 0xffffffff; pop ebx; ret; 
0x00038525: lea esi, [esi]; mov eax, 0xffffffff; ret; 
0x0018c9ed: lea esi, [esi]; mov eax, 1; ja 0x18c9f9; neg eax; pop ebp; ret; 
0x00191dea: lea esi, [esi]; mov eax, 1; ja 0x191df9; neg eax; ret; 
0x001920ed: lea esi, [esi]; mov eax, 1; ja 0x1920f9; neg eax; pop ebp; ret; 
0x000c9ccc: lea esi, [esi]; mov eax, 1; jg 0xc9cd9; neg eax; ret; 
0x0009a59a: lea esi, [esi]; mov eax, 1; ret; 
0x000c9edd: lea esi, [esi]; mov eax, 2; ret; 
0x00087daa: lea esi, [esi]; mov eax, 3; add esp, 0xc; ret; 
0x00088385: lea esi, [esi]; mov eax, 3; ret; 
0x000c9efd: lea esi, [esi]; mov eax, 4; ret; 
0x000c9f0d: lea esi, [esi]; mov eax, 5; ret; 
0x000c9f1d: lea esi, [esi]; mov eax, 6; ret; 
0x000c9f2d: lea esi, [esi]; mov eax, 7; ret; 
0x0011f655: lea esi, [esi]; mov eax, dword ptr [eax + 0x368]; pop ebx; ret; 
0x000819cc: lea esi, [esi]; mov eax, dword ptr [eax + 0x3a0]; mov dword ptr [esp + 0x10], edx; mov eax, dword ptr [eax + 4]; add esp, 0xc; jmp eax; 
0x001630a4: lea esi, [esi]; mov eax, dword ptr [ebx - 0x64]; pop ebx; pop esi; pop edi; ret; 
0x0007b15c: lea esi, [esi]; mov eax, dword ptr [edx + 0x14]; sub eax, dword ptr [edx + 0x10]; ret; 
0x0007b02c: lea esi, [esi]; mov eax, dword ptr [edx + 0x20]; sub eax, dword ptr [edx + 0x1c]; ret; 
0x0016570d: lea esi, [esi]; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x000b593d: lea esi, [esi]; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1ac]; ret; 
0x000b594d: lea esi, [esi]; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1b0]; ret; 
0x000b595d: lea esi, [esi]; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1b4]; ret; 
0x000b596d: lea esi, [esi]; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1b8]; ret; 
0x000b597d: lea esi, [esi]; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1bc]; ret; 
0x000b598d: lea esi, [esi]; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1c0]; ret; 
0x000b599d: lea esi, [esi]; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1c4]; ret; 
0x000b59ad: lea esi, [esi]; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1c8]; ret; 
0x000b59bd: lea esi, [esi]; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1cc]; ret; 
0x000b59cd: lea esi, [esi]; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1d0]; ret; 
0x000b59dd: lea esi, [esi]; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1d4]; ret; 
0x000b592d: lea esi, [esi]; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1d8]; ret; 
0x00132d94: lea esi, [esi]; mov eax, dword ptr [esp + 0x10]; add esp, 4; pop ebx; pop esi; ret; 
0x0009a33c: lea esi, [esi]; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax - 0x148]; call dword ptr [eax]; 
0x001979aa: lea esi, [esi]; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x0008475d: lea esi, [esi]; mov eax, dword ptr [esp + 4]; and dword ptr [eax + 8], 0xfffffffb; xor eax, eax; ret; 
0x0008486d: lea esi, [esi]; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x14], edx; xor eax, eax; ret; 
0x0019829c: lea esi, [esi]; mov eax, ecx; ret; 
0x0007b352: lea esi, [esi]; mov eax, edi; call dword ptr gs:[0x10]; 
0x000ac69d: lea esi, [esi]; mov eax, edi; pop edi; pop esi; pop ebx; ret; 
0x0019671c: lea esi, [esi]; mov eax, edi; pop edi; ret; 
0x00021542: lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x000cebc2: lea esi, [esi]; mov ebx, dword ptr [esp + 0x50]; mov eax, 0x68; mov edx, esi; call dword ptr gs:[0x10]; 
0x00151459: lea esi, [esi]; mov ecx, 1; mov eax, ecx; ret; 
0x0007b065: lea esi, [esi]; mov edx, 1; mov eax, edx; ret; 
0x0009a3f4: lea esi, [esi]; mov edx, dword ptr [edi - 0x148]; mov dword ptr [esp + 0xc], eax; call dword ptr [edx]; 
0x0010a7b4: lea esi, [esi]; mov edx, dword ptr [esp + 0xa8]; mov eax, 0x133; call dword ptr gs:[0x10]; 
0x000d70bd: lea esi, [esi]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [edx], ebx; pop ebx; ret; 
0x000a5d6c: lea esi, [esi]; mov word ptr [ecx], dx; mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x000ac40d: lea esi, [esi]; mov word ptr [edi], dx; pop edi; pop esi; pop ebx; ret; 
0x000a83dd: lea esi, [esi]; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x000a3fec: lea esi, [esi]; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000ac4dd: lea esi, [esi]; movdqu xmmword ptr [edi - 1], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000a5dcd: lea esi, [esi]; movlpd qword ptr [ecx], xmm0; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x000a3efd: lea esi, [esi]; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000c9e9b: lea esi, [esi]; nop; add eax, 1; ret; 
0x000c9eab: lea esi, [esi]; nop; add eax, 3; ret; 
0x0009e89b: lea esi, [esi]; nop; add esp, 4; pop ebx; pop esi; ret; 
0x0011ae8b: lea esi, [esi]; nop; add esp, 8; xor eax, eax; pop ebx; ret; 
0x001a0f2b: lea esi, [esi]; nop; call dword ptr [esi]; 
0x000801bb: lea esi, [esi]; nop; endbr32; mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x001587e7: lea esi, [esi]; nop; endbr32; ret; 
0x00196d9b: lea esi, [esi]; nop; lea eax, [ecx + 0xa]; ret; 
0x00196dab: lea esi, [esi]; nop; lea eax, [ecx + 0xb]; ret; 
0x00196dbb: lea esi, [esi]; nop; lea eax, [ecx + 0xd]; ret; 
0x00196dcb: lea esi, [esi]; nop; lea eax, [ecx + 0xe]; ret; 
0x00196ddb: lea esi, [esi]; nop; lea eax, [ecx + 0xf]; ret; 
0x00196d3b: lea esi, [esi]; nop; lea eax, [ecx + 2]; ret; 
0x00196d4b: lea esi, [esi]; nop; lea eax, [ecx + 3]; ret; 
0x00196d5b: lea esi, [esi]; nop; lea eax, [ecx + 5]; ret; 
0x00196d6b: lea esi, [esi]; nop; lea eax, [ecx + 6]; ret; 
0x00196d7b: lea esi, [esi]; nop; lea eax, [ecx + 7]; ret; 
0x00196d8b: lea esi, [esi]; nop; lea eax, [ecx + 9]; ret; 
0x00195cfb: lea esi, [esi]; nop; lea eax, [edi + 1]; pop edi; ret; 
0x00195ceb: lea esi, [esi]; nop; lea eax, [edi]; pop edi; ret; 
0x0019740b: lea esi, [esi]; nop; lea eax, [edx + 0xa]; ret; 
0x0019741b: lea esi, [esi]; nop; lea eax, [edx + 0xc]; ret; 
0x0019742b: lea esi, [esi]; nop; lea eax, [edx + 0xd]; ret; 
0x0019743b: lea esi, [esi]; nop; lea eax, [edx + 0xe]; ret; 
0x001973ab: lea esi, [esi]; nop; lea eax, [edx + 2]; ret; 
0x001973bb: lea esi, [esi]; nop; lea eax, [edx + 4]; ret; 
0x001973cb: lea esi, [esi]; nop; lea eax, [edx + 5]; ret; 
0x001973db: lea esi, [esi]; nop; lea eax, [edx + 6]; ret; 
0x001973eb: lea esi, [esi]; nop; lea eax, [edx + 8]; ret; 
0x001973fb: lea esi, [esi]; nop; lea eax, [edx + 9]; ret; 
0x00093d9b: lea esi, [esi]; nop; lea ecx, [esp + 0xc]; mov eax, 0x105; call dword ptr gs:[0x10]; 
0x00142303: lea esi, [esi]; nop; mov byte ptr [ebx], 0; add esp, 8; pop ebx; ret; 
0x000a5d8b: lea esi, [esi]; nop; mov dword ptr [ecx], edx; mov byte ptr [ecx + 4], dl; pop ebx; ret; 
0x000943dd: lea esi, [esi]; nop; mov dword ptr [edx + 0x204], eax; ret; 
0x00084627: lea esi, [esi]; nop; mov eax, 0x16; ret; 
0x00127083: lea esi, [esi]; nop; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; call dword ptr gs:[0x10]; 
0x00076a83: lea esi, [esi]; nop; mov eax, 0xffffffff; ret; 
0x0018b1ab: lea esi, [esi]; nop; mov eax, 1; ja 0x18b1b9; neg eax; ret; 
0x000e0e03: lea esi, [esi]; nop; mov eax, 1; ret; 
0x0015afb3: lea esi, [esi]; nop; mov ecx, 1; pop ebx; mov eax, ecx; ret; 
0x000c9f83: lea esi, [esi]; nop; mov ecx, eax; mov eax, ecx; ret; 
0x000a5d5b: lea esi, [esi]; nop; mov word ptr [ecx], dx; pop ebx; ret; 
0x000a5e1b: lea esi, [esi]; nop; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000a5e2b: lea esi, [esi]; nop; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000a5e3b: lea esi, [esi]; nop; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x0018b11b: lea esi, [esi]; nop; movzx ecx, byte ptr [eax + 2]; movzx eax, byte ptr [edx + 2]; sub eax, ecx; ret; 
0x0018b12b: lea esi, [esi]; nop; movzx ecx, byte ptr [eax + 3]; movzx eax, byte ptr [edx + 3]; sub eax, ecx; ret; 
0x0018b13b: lea esi, [esi]; nop; movzx ecx, byte ptr [eax + 4]; movzx eax, byte ptr [edx + 4]; sub eax, ecx; ret; 
0x0018b14b: lea esi, [esi]; nop; movzx ecx, byte ptr [eax + 5]; movzx eax, byte ptr [edx + 5]; sub eax, ecx; ret; 
0x0018b15b: lea esi, [esi]; nop; movzx ecx, byte ptr [eax + 6]; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x0018b0fb: lea esi, [esi]; nop; movzx ecx, byte ptr [eax]; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x0008bccb: lea esi, [esi]; nop; or dword ptr [eax], 0x80000000; xor eax, eax; ret; 
0x0008326b: lea esi, [esi]; nop; pop ebx; pop esi; pop edi; ret; 
0x00193cbb: lea esi, [esi]; nop; pop ebx; xor eax, eax; ret; 
0x000b00c8: lea esi, [esi]; nop; pop esi; ret; 
0x00082863: lea esi, [esi]; nop; ret; 
0x00133b68: lea esi, [esi]; nop; shr eax, 0x18; ret; 
0x00080bb3: lea esi, [esi]; nop; sub edx, dword ptr [eax + 8]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x000e3a13: lea esi, [esi]; nop; sub esp, 0xc; mov eax, dword ptr [ebp - 0x19c]; push dword ptr [ebp - 0x198]; call dword ptr [eax + 0x14]; 
0x001059f3: lea esi, [esi]; nop; sub esp, 0xc; mov eax, dword ptr [ebp - 0x1ac]; push dword ptr [ebp - 0x1a8]; call dword ptr [eax + 0x14]; 
0x00163b1b: lea esi, [esi]; nop; sub esp, 0xc; mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 4]; 
0x00198c7b: lea esi, [esi]; nop; tzcnt edx, edx; mov eax, 0x20; add eax, edx; ret; 
0x001585ab: lea esi, [esi]; nop; xor eax, eax; add esp, 0xc; ret; 
0x000b37db: lea esi, [esi]; nop; xor eax, eax; pop edi; ret; 
0x0003a1f7: lea esi, [esi]; nop; xor eax, eax; ret; 
0x0008461c: lea esi, [esi]; or dword ptr [eax + 8], 1; xor eax, eax; ret; 
0x00140735: lea esi, [esi]; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x001956cd: lea esi, [esi]; pop ebx; mov eax, 1; ja 0x1956da; neg eax; ret; 
0x000b367d: lea esi, [esi]; pop ebx; pop esi; ret; 
0x000a5d3a: lea esi, [esi]; pop ebx; ret; 
0x000e95a4: lea esi, [esi]; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x001922ca: lea esi, [esi]; pop ebx; xor eax, eax; ret; 
0x000ac3ec: lea esi, [esi]; pop edi; pop esi; pop ebx; ret; 
0x000c9cac: lea esi, [esi]; pop edi; pop esi; ret; 
0x00060111: lea esi, [esi]; ret; 
0x000802fa: lea esi, [esi]; sub ebx, edx; lea eax, [ebx - 1]; pop ebx; ret; 
0x000745ac: lea esi, [esi]; sub esp, 0x18; push ecx; call 0x75f80; add esp, 0x1c; ret; 
0x000e147d: lea esi, [esi]; sub esp, 0xc; mov eax, dword ptr [ebp - 0x19c]; push dword ptr [ebp - 0x198]; call dword ptr [eax + 0x14]; 
0x00163c2c: lea esi, [esi]; sub esp, 0xc; mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 0x14]; 
0x001593bd: lea esi, [esi]; sub esp, 0xc; mov eax, dword ptr [edx + 4]; push edx; call dword ptr [eax + 0x10]; 
0x0009a512: lea esi, [esi]; sub esp, 0xc; push esi; call eax; 
0x00074c2d: lea esi, [esi]; sub esp, 4; push 0x10; push edi; push ebx; call dword ptr [eax + 0x1c]; 
0x001588dc: lea esi, [esi]; sub esp, 8; mov eax, dword ptr [ebx + 0x10]; push dword ptr [esp + 0x14]; push esi; call dword ptr [eax + 4]; 
0x0016eb35: lea esi, [esi]; sub esp, 8; mov eax, dword ptr [ebx + 0x3a0]; push ecx; push edx; call dword ptr [eax + 0x28]; 
0x001639dd: lea esi, [esi]; sub esp, 8; mov eax, dword ptr [ebx + 8]; push dword ptr [esp + 0x14]; push ebx; call dword ptr [eax]; 
0x0019853c: lea esi, [esi]; test ah, 0xf0; jne 0x198560; lea eax, [edi - 8]; pop edi; ret; 
0x001982ec: lea esi, [esi]; test ah, 1; jne 0x198310; lea eax, [ecx + 0xc]; ret; 
0x00171add: lea esi, [esi]; test al, al; jne 0x171b04; mov eax, 4; add esp, 0xc; ret; 
0x0004b18c: lea esi, [esi]; xor eax, eax; pop ebx; pop esi; ret; 
0x00099b0c: lea esi, [esi]; xor eax, eax; pop ebx; ret; 
0x000c9cba: lea esi, [esi]; xor eax, eax; pop edi; pop esi; ret; 
0x000b39bd: lea esi, [esi]; xor eax, eax; pop edi; ret; 
0x00034ebd: lea esi, [esi]; xor eax, eax; ret; 
0x00107a0d: lea esi, [esi]; xor edx, edx; lea ebx, [esp + 8]; mov eax, 0x13e; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0015981d: lea esi, [esp + 0x34]; push esi; push ecx; push 5; push ebx; call dword ptr [eax]; 
0x001266ff: lea esi, [esp + 8]; mov edi, dword ptr [esp + 0x34]; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0006c1db: lea esp, [eax]; idiv edi; dec dword ptr [ebx - 0x8e77b]; call dword ptr [ebx - 0x18]; 
0x0004dfc4: lea esp, [ebp - 0xc]; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x000222e1: lea esp, [ebp - 0xc]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00131368: lea esp, [ebp - 8]; mov eax, 5; pop ebx; pop esi; pop ebp; ret; 
0x0011c08f: lea esp, [ebp - 8]; pop ebx; pop esi; pop ebp; ret; 
0x0013135b: lea esp, [ebp - 8]; xor eax, eax; pop ebx; pop esi; pop ebp; ret; 
0x0012f9a8: lea esp, [edi + edi*8 - 1]; dec dword ptr [ebx - 0x9f6b]; call dword ptr [eax - 0x75]; 
0x000e0ec7: lea esp, [esi + edi*8 - 1]; jmp dword ptr [ebp - 0x5f]; 
0x000e0373: lea esp, es:[ebp - 0xc]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000c5153: leave; adc edi, edi; jmp dword ptr [esi - 0x70]; 
0x000ced24: leave; add al, byte ptr [ecx - 0x70a3d707]; add dh, byte ptr [esi + 0xa]; mov eax, edx; ret; 
0x001161ca: leave; add byte ptr [eax], al; add byte ptr [eax - 0x3fcef777], al; pop ebx; ret; 
0x00078533: leave; add byte ptr [eax], al; add byte ptr [ebp + 0x4889044a], cl; adc byte ptr [ecx - 0x9ec74ce], cl; ret 0x7402; 
0x000df325: leave; add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x000b4207: leave; add eax, ecx; ret; 
0x000305d5: leave; call 0x300b0; mov edx, dword ptr [esp + 0x14]; add esp, 0xc; mov eax, edx; ret; 
0x0010b02a: leave; call dword ptr gs:[0x10]; 
0x0010b02a: leave; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x10b040; pop ebx; ret; 
0x0006b9e2: leave; clc; dec dword ptr [ebp + 0x15df0684]; in al, 0xff; jmp eax; 
0x0003e732: leave; cmove eax, edx; add esp, 4; pop ebx; pop esi; ret; 
0x00151450: leave; cmp eax, 2; jne 0x151470; mov eax, ecx; ret; 
0x0011a9c7: leave; je 0x11a9cd; mov dword ptr [ecx + 4], edx; mov dword ptr [edx], ecx; mov dword ptr [edx + 4], eax; ret; 
0x0012d21d: leave; je 0x12d228; xor eax, eax; pop ebx; ret; 
0x001312b2: leave; je 0x1312c8; ret; 
0x0008b029: leave; je 0x8b435; mov eax, 0xf0; mov ecx, 8; mov esi, edx; call dword ptr gs:[0x10]; 
0x000b4202: leave; je 0xb4210; bsf ecx, ecx; add eax, ecx; ret; 
0x000d6da7: leave; jecxz 0xd6da9; call dword ptr [eax + 0x53]; 
0x0010533c: leave; jne 0x10531e; xor eax, eax; pop ebx; ret; 
0x00107abc: leave; jne 0x107a9e; xor eax, eax; pop ebx; ret; 
0x001288f9: leave; jne 0x128908; mov eax, edx; pop ebx; pop esi; ret; 
0x00128974: leave; jne 0x128980; mov eax, edx; pop ebx; pop esi; ret; 
0x00128b68: leave; jne 0x128b70; mov eax, edx; pop ebx; pop esi; ret; 
0x001291bd: leave; jne 0x1291c8; mov eax, edx; pop ebx; pop esi; ret; 
0x0012921d: leave; jne 0x129228; mov eax, edx; pop ebx; pop esi; ret; 
0x00129408: leave; jne 0x129410; mov eax, edx; pop ebx; pop esi; ret; 
0x0015a264: leave; jne 0x15a2b8; mov dword ptr [eax], 0; pop ebx; ret; 
0x00078dce: leave; jne 0x78de0; mov eax, dword ptr [edx + 0x28]; cmp dword ptr [edx + 0x24], eax; cmovne eax, ecx; ret; 
0x00094702: leave; jne 0x94710; ret; 
0x000a1af3: leave; jne 0xa1ae8; mov dword ptr [esi], edx; pop ebx; pop esi; ret; 
0x000b55a0: leave; jne 0xb55a5; xor eax, eax; ret; 
0x000e0c9c: leave; jne 0xe0c7e; xor eax, eax; pop ebx; ret; 
0x000e335c: leave; jne 0xe333e; xor eax, eax; pop ebx; ret; 
0x000f838c: leave; jne 0xf836e; xor eax, eax; pop ebx; ret; 
0x000f8f6c: leave; jne 0xf8f4e; xor eax, eax; pop ebx; ret; 
0x001160fd: leave; js 0x116108; mov eax, dword ptr [edx + 8]; and eax, 0x100f; ret; 
0x000e0209: leave; js 0xe0210; ret; 
0x000d742e: leave; lcall 0, 0x89870f3b; add byte ptr [eax + 0x194], bh; call dword ptr gs:[0x10]; 
0x0008bfa3: leave; lcall 0, 0xc4870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x0008cb89: leave; lcall 0, 0xce870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x6174; 
0x0008c906: leave; lcall 1, 0x31870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x0008e08e: leave; lock cmpxchg dword ptr [edx], ecx; mov eax, 0x10; cmove eax, ecx; ret; 
0x0003ec39: leave; mov bl, 0x1e; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x000b27a4: leave; mov byte ptr [eax], cl; mov eax, edi; pop ebx; pop edi; ret; 
0x000373ca: leave; mov dword ptr [edx + 0x28], ecx; ret; 
0x000d707a: leave; mov eax, 0x196; not ebx; lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x00088eab: leave; mov eax, 0xf0; mov ebx, ebp; mov esi, ecx; call dword ptr gs:[0x10]; 
0x0014c8af: leave; mov eax, ecx; pop ebx; pop esi; ret; 
0x0004aa71: leave; mov ebx, 0; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x00084820: leave; or dword ptr [edx + 8], 8; mov dword ptr [edx + 0x10], eax; mov eax, ecx; ret; 
0x000b5b2c: leave; ret 0xb; 
0x00056793: leave; ret 1; 
0x000b3a1f: leave; sub edx, ecx; jbe 0xb3a50; add eax, ecx; ret; 
0x0015afaa: leave; test eax, eax; je 0x15afe0; mov eax, ecx; pop ebx; ret; 
0x0016645a: leave; test eax, eax; je 0x166490; mov eax, ecx; pop ebx; ret; 
0x001664ca: leave; test eax, eax; je 0x166500; mov eax, ecx; pop ebx; ret; 
0x000a5908: les eax, ptr [0x5b5f0000]; ret; 
0x00035d32: les eax, ptr [eax + 0x5b]; pop esi; pop edi; fsubp st(1); ret; 
0x00035cc0: les eax, ptr [eax + 0x5b]; pop esi; pop edi; ret; 
0x00158841: les eax, ptr [eax + edi*4]; adc byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0010e500: les eax, ptr [eax + edi*4]; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0009a129: les eax, ptr [eax + edi*4]; push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00122f50: les eax, ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00195c88: les eax, ptr [eax]; add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x0012272e: les eax, ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0xc0]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00123081: les eax, ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000b42bd: les eax, ptr [ebp - 0x257af040]; add byte ptr [eax], al; add bh, dh; ret 0x3f; 
0x00196af6: les eax, ptr [ebp - 0x7e7af040]; add dword ptr [eax], eax; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000b3eb2: les eax, ptr [ebp - 0xa7af040]; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x00078127: les eax, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x00035136: les eax, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00022781: les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000218d9: les eax, ptr [ebx + ebx*2]; pop esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0018f0aa: les eax, ptr [ebx + ebx*2]; ret; 
0x000231ff: les eax, ptr [ebx - 0x387cf314]; add dword ptr [ebx - 0x7d], edx; ret; 
0x000e7bff: les eax, ptr [ebx - 0x7c72f314]; push cs; dec eax; stc; call dword ptr [eax - 0x18]; 
0x0017157f: les eax, ptr [ebx - 0x7f72f314]; je 0x1715ed; stc; call dword ptr [eax - 0x18]; 
0x0015b2d7: les eax, ptr [ecx + eax]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0010bcba: les eax, ptr [ecx + ecx*4 - 0x30]; pop ebx; pop esi; ret; 
0x0015a9b8: les eax, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; jmp eax; 
0x0014080d: les eax, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x0003a6d4: les eax, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x0015219d: les eax, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5f], 1; ret; 
0x001749e8: les eax, ptr [ecx - 0x2708000a]; sbb eax, eax; add esp, 0x1c; ret; 
0x0011f1f9: les eax, ptr [ecx*4 - 0x6b5977d]; call ptr [ebx + 0x5e]; ret; 
0x000b59a8: les eax, ptr [ecx]; add byte ptr [eax], al; ret; 
0x001982f1: les eax, ptr [ecx]; jne 0x198310; lea eax, [ecx + 0xc]; ret; 
0x0015bc80: les eax, ptr [edi + ecx]; mov dh, 0xc0; pop ebx; pop esi; ret; 
0x00087ee8: les eax, ptr [edi + esi*8]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x0019616a: les eax, ptr [edx]; jne 0x196200; lea eax, [edi - 8]; pop edi; ret; 
0x00196cfa: les eax, ptr [edx]; jne 0x196d90; lea eax, [ecx + 8]; ret; 
0x00196f39: les eax, ptr [edx]; jne 0x196fe0; add edx, 8; jl 0x197040; lea eax, [ecx + 8]; ret; 
0x00197351: les eax, ptr [edx]; jne 0x197400; test ah, 4; jne 0x197410; lea eax, [edx + 0xb]; ret; 
0x00191941: les eax, ptr [esi + ebx*2]; pop edi; pop ebp; pop ebx; xor eax, eax; ret; 
0x000847da: les eax, ptr [esi + ebx*2]; pop edi; ret; 
0x000dd740: les ebp, ptr [eax + 0x5b]; ret; 
0x0019b301: les ebp, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret 4; 
0x0002445d: les ebp, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x000e8271: les ebp, ptr [eax + ebp + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x000e6749: les ebp, ptr [eax + ecx + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x0004d114: les ebp, ptr [eax]; mov eax, ebx; pop ebx; ret 4; 
0x0011c875: les ebp, ptr [eax]; mov eax, ebx; pop ebx; ret; 
0x0017497d: les ebp, ptr [eax]; or eax, edx; pop ebx; movzx eax, al; neg eax; ret; 
0x00037f49: les ebp, ptr [eax]; pop ebx; ret; 
0x000cef12: les ebp, ptr [eax]; xor eax, eax; pop ebx; ret; 
0x0014280e: les ebp, ptr [ebp + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000ffe2c: les ebp, ptr [ebx + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000252d5: les ebp, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; jmp eax; 
0x00085f72: les ebp, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x000b7d54: les ebp, ptr [ebx + ebx*2]; pop esi; mov eax, ebp; pop edi; pop ebp; ret; 
0x00021f76: les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0006fc92: les ebp, ptr [ecx + eax*4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0003831b: les ebp, ptr [ecx + eax]; add byte ptr [eax], al; ret; 
0x00142161: les ebp, ptr [ecx + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00033da7: les ebp, ptr [ecx + ecx*4]; call 0x5d629c0a; ret; 
0x00081d53: les ebp, ptr [ecx + ecx*4]; call 0x5d677bb6; ret; 
0x000b7bf7: les ebp, ptr [ecx + ecx*4]; call 0x5d6ada5a; ret; 
0x000f7914: les ebp, ptr [ecx + ecx*4]; call 0x5d6ed777; ret; 
0x000fa8ae: les ebp, ptr [ecx + ecx*4]; call 0x5d6f0711; ret; 
0x0003edf3: les ebp, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x00088c37: les ebp, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x0007b665: les ebp, ptr [ecx + esi]; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x000c35a9: les ebp, ptr [ecx]; ret; 
0x0012189e: les ebp, ptr [edi + ecx]; mov dh, 0xc0; neg eax; ret; 
0x000f831d: les ebp, ptr [edi + ecx]; mov dh, 0xc0; ret; 
0x001190a7: les ebp, ptr [esp + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x000489af: les ebp, ptr [esp + eax]; add byte ptr [eax], al; ret; 
0x0014a5b1: les ebp, ptr [esp + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00037da3: les ebx, ptr [eax + 0x5b000000]; ret; 
0x00199776: les ebx, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret 4; 
0x00037b03: les ebx, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x000e94ff: les ebx, ptr [eax + ecx]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x001586f7: les ebx, ptr [eax]; lea eax, [ebx + 0xa300]; pop ebx; ret; 
0x0003b8f3: les ebx, ptr [eax]; lea eax, [ebx + 6]; pop ebx; ret; 
0x00116d92: les ebx, ptr [eax]; mov eax, ebx; pop ebx; ret; 
0x000513d9: les ebx, ptr [eax]; mov eax, edx; pop ebx; ret 4; 
0x001657b4: les ebx, ptr [eax]; pop ebx; jmp eax; 
0x0009cae0: les ebx, ptr [eax]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00035eab: les ebx, ptr [eax]; pop ebx; ret; 
0x00083e2f: les ebx, ptr [eax]; xor eax, eax; pop ebx; ret; 
0x000df2bb: les ebx, ptr [ebx + eax*8]; nop; endbr32; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x00024c62: les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; jmp eax; 
0x000262dd: les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x0008eab6: les ebx, ptr [ebx + ebx*2]; lea eax, [eax + eax - 1]; pop esi; pop edi; pop ebp; ret; 
0x0011e334: les ebx, ptr [ebx + ebx*2]; mov eax, ebp; pop esi; pop edi; pop ebp; ret; 
0x00155ddb: les ebx, ptr [ebx + ebx*2]; mov eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x0006ab2b: les ebx, ptr [ebx + ebx*2]; mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x000339af: les ebx, ptr [ebx + ebx*2]; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x0007671b: les ebx, ptr [ebx + ebx*2]; neg eax; pop esi; pop edi; pop ebp; ret; 
0x0008ea7e: les ebx, ptr [ebx + ebx*2]; or eax, 1; pop esi; pop edi; pop ebp; ret; 
0x0009b5f9: les ebx, ptr [ebx + ebx*2]; pop esi; mov eax, ebp; pop edi; pop ebp; ret; 
0x0007352c: les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; jmp eax; 
0x00021d1a: les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0013a6ee: les ebx, ptr [ebx - 7]; call dword ptr [eax - 0x73]; 
0x00108eab: les ebx, ptr [ecx + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x00178223: les ebx, ptr [ecx + eax*8]; clc; pop ds; ret; 
0x001470d5: les ebx, ptr [ecx + eax]; add byte ptr [eax], al; ret; 
0x00038fc7: les ebx, ptr [ecx + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000306e5: les ebx, ptr [ecx + ecx*4]; call 0x5d626548; ret; 
0x00049f9e: les ebx, ptr [ecx + ecx*4]; call 0x5d63fe01; ret; 
0x00049ff4: les ebx, ptr [ecx + ecx*4]; call 0x5d63fe57; ret; 
0x000700d6: les ebx, ptr [ecx + ecx*4]; call 0x5d665f39; ret; 
0x000701cc: les ebx, ptr [ecx + ecx*4]; call 0x5d66602f; ret; 
0x0007bad2: les ebx, ptr [ecx + ecx*4]; call 0x5d671935; ret; 
0x0007db56: les ebx, ptr [ecx + ecx*4]; call 0x5d6739b9; ret; 
0x0009084f: les ebx, ptr [ecx + ecx*4]; call 0x5d6866b2; ret; 
0x0009b62b: les ebx, ptr [ecx + ecx*4]; call 0x5d69148e; ret; 
0x0011978e: les ebx, ptr [ecx + ecx*4]; call 0x5d70f5f1; ret; 
0x0011e306: les ebx, ptr [ecx + ecx*4]; call 0x5d714169; ret; 
0x001513f7: les ebx, ptr [ecx + ecx*4]; call 0x5d74725a; ret; 
0x001519b8: les ebx, ptr [ecx + ecx*4]; call 0x5d74781b; ret; 
0x000337ef: les ebx, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x0002f57d: les ebx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x0008c046: les ebx, ptr [ecx + ecx*4]; ret 0x895b; 
0x00021ab2: les ebx, ptr [ecx + esi]; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x000e5e61: les ebx, ptr [ecx*4 + 0x5e5b0243]; pop edi; pop ebp; ret; 
0x000e5d39: les ebx, ptr [ecx*4 + 0x5e5b0843]; pop edi; pop ebp; ret; 
0x0012185d: les ebx, ptr [edi + ecx]; mov dh, 0xc0; neg eax; ret; 
0x0015c83a: les ebx, ptr [edi + ecx]; mov dh, 0xc0; ret; 
0x000cae40: les ecx, ptr [eax + 0x5b]; ret; 
0x000f1cef: les ecx, ptr [eax + edi + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x000ffd76: les ecx, ptr [eax + edi*4]; add eax, 0x5b000000; pop esi; pop edi; pop ebp; ret; 
0x0012ed8c: les ecx, ptr [eax + edx*2]; push dword ptr [ebp - 0x4c]; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x0012dc3d: les ecx, ptr [eax + edx*2]; push dword ptr [esp + 8]; push 0x2000003; call dword ptr [ebp + 0x14]; 
0x0012d9f6: les ecx, ptr [eax + edx*2]; push edi; push 0x2000006; call dword ptr [esi + 0x14]; 
0x0012f50e: les ecx, ptr [eax + edx*2]; push esi; push edx; call dword ptr [ebx + 0x14]; 
0x0014741c: les ecx, ptr [eax]; lea edx, [eax + ecx]; pop ebx; mov eax, edx; ret; 
0x0008ada1: les ecx, ptr [eax]; mov eax, 0x16; pop ebx; ret; 
0x00133385: les ecx, ptr [eax]; mov eax, 0xffffffff; pop ebx; ret; 
0x0011997c: les ecx, ptr [eax]; mov eax, 1; pop ebx; ret; 
0x0008da2c: les ecx, ptr [eax]; mov eax, ebx; pop ebx; ret; 
0x0011aecf: les ecx, ptr [eax]; mov eax, edx; pop ebx; ret; 
0x0007e6f5: les ecx, ptr [eax]; movzx eax, al; pop ebx; neg eax; ret; 
0x0015aadb: les ecx, ptr [eax]; movzx eax, al; pop ebx; ret; 
0x00104153: les ecx, ptr [eax]; or eax, edx; pop ebx; ret; 
0x000516b0: les ecx, ptr [eax]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0002c01d: les ecx, ptr [eax]; pop ebx; ret; 
0x0003612a: les ecx, ptr [eax]; ret; 
0x000372e8: les ecx, ptr [eax]; xor eax, eax; pop ebx; ret; 
0x00030af1: les ecx, ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x000239bf: les ecx, ptr [ebp - 0x6ba217d]; call dword ptr [eax - 1]; 
0x000c3def: les ecx, ptr [ebx + 0xc8dbc45]; mov cs, word ptr [ebx - 0x3f7cfb90]; add al, 0x83; ret; 
0x0009e087: les ecx, ptr [ebx + ebp]; dec ebp; add byte ptr [ecx], ch; ret 0xd801; 
0x0003671a: les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret 4; 
0x0003955c: les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x000ff8e9: les ecx, ptr [ebx + ebx*2]; mov eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x0009bea7: les ecx, ptr [ebx + ebx*2]; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x0012bdc8: les ecx, ptr [ebx + ebx*2]; pop esi; mov eax, ecx; pop edi; pop ebp; ret; 
0x00075c52: les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; jmp eax; 
0x0009ad81: les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret 4; 
0x0002f637: les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0015ac36: les ecx, ptr [ebx + ecx*4]; inc edi; or byte ptr [ebp - 1], dl; jbe 0x15ac4b; push edi; call dword ptr [eax + 8]; 
0x00036244: les ecx, ptr [ebx - 0x1337d]; jmp dword ptr [ebp - 0x75]; 
0x000b9532: les ecx, ptr [ebx - 0x72ebdb84]; xchg dword ptr [esi + esi*2 - 7], ebx; call dword ptr [eax + 0x68]; 
0x0015531f: les ecx, ptr [ecx + 0x458bcc45]; rol byte ptr [ebx - 0x7f72f714], 1; into; popal; stc; call dword ptr [eax + 0x56]; 
0x00075537: les ecx, ptr [ecx + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00133316: les ecx, ptr [ecx + ebp*8]; ret; 
0x000c4011: les ecx, ptr [ecx + ebp]; ret; 
0x0007a55a: les ecx, ptr [ecx + ecx*4]; call 0x5d6703bd; ret; 
0x0007a595: les ecx, ptr [ecx + ecx*4]; call 0x5d6703f8; ret; 
0x00084571: les ecx, ptr [ecx + ecx*4]; call 0x5d67a3d4; ret; 
0x000d80dd: les ecx, ptr [ecx + ecx*4]; call 0x5d6cdf40; ret; 
0x000ff99a: les ecx, ptr [ecx + ecx*4]; call 0x5d6f57fd; ret; 
0x0011dbdc: les ecx, ptr [ecx + ecx*4]; call 0x5d713a3f; ret; 
0x0011e388: les ecx, ptr [ecx + ecx*4]; call 0x5d7141eb; ret; 
0x00131dcc: les ecx, ptr [ecx + ecx*4]; call 0x5d727c2f; ret; 
0x0013fa9e: les ecx, ptr [ecx + ecx*4]; call 0x5d735901; ret; 
0x0007e686: les ecx, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x00023f5d: les ecx, ptr [ecx + ecx*4]; inc ebp; fmul qword ptr [ebp - 0x2078df7d]; call dword ptr [eax - 0x73]; 
0x000846ed: les ecx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x0010f89d: les ecx, ptr [ecx + ecx*4]; ret 0x408d; 
0x0005f2cd: les ecx, ptr [ecx + ecx*4]; ret 0x8489; 
0x0005f1a8: les ecx, ptr [ecx + ecx*4]; ret 0x8589; 
0x0002fa4d: les ecx, ptr [ecx + ecx*4]; ret; 
0x000237b9: les ecx, ptr [ecx + esi]; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x000951ea: les ecx, ptr [ecx*4 - 0x19598f7d]; call dword ptr [eax + 0x56]; 
0x0009527a: les ecx, ptr [ecx*4 - 0x195a9f7d]; call dword ptr [eax + 0x56]; 
0x00095232: les ecx, ptr [ecx*4 - 0x195c9f7d]; call dword ptr [eax + 0x56]; 
0x00095220: les ecx, ptr [ecx*4 - 0x195cbf7d]; call dword ptr [eax + 0x56]; 
0x000895b4: les ecx, ptr [ecx*4 - 0x1a0a9f7d]; call dword ptr [eax + 0x56]; 
0x0008fe97: les ecx, ptr [edi + ecx]; mov dh, 0xc0; lea eax, [eax + eax + 2]; ret; 
0x000481a9: les ecx, ptr [edi + ecx]; mov dh, 0xc0; ret; 
0x001982b5: les ecx, ptr [edi]; jne 0x1982d0; test dh, 0xf; jne 0x198320; lea eax, [ecx + 0xc]; ret; 
0x000a16b7: les ecx, ptr [edi]; mov dh, 0x3c; or byte ptr [ebp - 0x7c588a01], al; ret 0xeb01; 
0x0007543a: les ecx, ptr [edx + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0011f7ce: les ecx, ptr [esi - 7]; call dword ptr [eax + 0x57]; 
0x000420ef: les ecx, ptr [esp + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0005836a: les edi, ptr [eax + 0x5b]; ret; 
0x0019cfbb: les edi, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret 4; 
0x00057ca3: les edi, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x00099ccb: les edi, ptr [eax]; mov eax, ebx; pop ebx; ret 4; 
0x00146119: les edi, ptr [eax]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0008fdea: les edi, ptr [eax]; pop ebx; ret; 
0x00026be8: les edi, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; jmp eax; 
0x000217da: les edi, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x00036ec2: les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret 4; 
0x00024257: les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000e98ed: les edi, ptr [ebx + ebx*2]; pop esi; sar eax, 1; pop edi; pop ebp; ret; 
0x0016da51: les edi, ptr [ecx + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x001391d9: les edi, ptr [ecx + ecx*4 - 0x28]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0002ba25: les edi, ptr [ecx + ecx*4 - 0x38]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000b76e7: les edi, ptr [ecx + ecx*4]; call 0x5d6ad54a; ret; 
0x0003d1f4: les edi, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x000887a5: les edi, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x00090e9e: les edi, ptr [ecx + esi - 0x40]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0008507a: les edi, ptr [ecx + esi]; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x0003ccb8: les edi, ptr [edi + esi*8]; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x0014afd2: les edi, ptr [edx + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x0008df38: les edx, ptr [eax + 0x5b000000]; pop esi; pop edi; ret; 
0x0011858c: les edx, ptr [eax + 0x5b000001]; pop esi; pop edi; ret; 
0x000ceccf: les edx, ptr [eax + 0x5b]; pop esi; pop edi; ret; 
0x00084c99: les edx, ptr [eax + eax + 0x5e5b0000]; ret; 
0x00037c85: les edx, ptr [eax + eax + 0x5f5b0000]; ret; 
0x0016b459: les edx, ptr [eax - 0x27770000]; pop ebx; pop esi; ret; 
0x0016c05a: les edx, ptr [eax - 0x76ffffff]; rcr byte ptr [ebx + 0x5e], 1; pop edi; ret; 
0x00146ccd: les edx, ptr [eax]; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00131c4e: les edx, ptr [eax]; add eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00095515: les edx, ptr [eax]; add esp, 0x14; pop ebx; pop esi; ret; 
0x0003b9ee: les edx, ptr [eax]; add esp, 0xc; ret; 
0x0015ab59: les edx, ptr [eax]; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x00143bc7: les edx, ptr [eax]; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x00022827: les edx, ptr [eax]; add esp, 4; pop ebx; pop esi; ret; 
0x00084169: les edx, ptr [eax]; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0011a155: les edx, ptr [eax]; add esp, 8; mov eax, 1; pop ebx; ret; 
0x0002c01a: les edx, ptr [eax]; add esp, 8; pop ebx; ret; 
0x0008be4a: les edx, ptr [eax]; call eax; 
0x00095c84: les edx, ptr [eax]; cmp eax, -1; je 0x95c90; add esp, 0xc; ret; 
0x0015e7c1: les edx, ptr [eax]; cmp eax, 1; mov eax, 1; sbb eax, -1; add esp, 0xc; ret; 
0x00166fa4: les edx, ptr [eax]; cmp eax, 1; sete al; add esp, 0xc; movzx eax, al; ret; 
0x0012ab40: les edx, ptr [eax]; cmp edx, 1; jg 0x12ab68; add esp, 0x18; pop ebx; ret; 
0x0016badd: les edx, ptr [eax]; cmp edx, 1; jg 0x16bb08; add esp, 0x18; pop ebx; ret; 
0x0016bb69: les edx, ptr [eax]; cmp edx, 1; jg 0x16bb90; add esp, 0x18; pop ebx; ret; 
0x0016be41: les edx, ptr [eax]; cmp edx, 1; jg 0x16be68; add esp, 0x18; pop ebx; ret; 
0x00087f50: les edx, ptr [eax]; cmp edx, 1; jg 0x87f78; add esp, 0x18; pop ebx; ret; 
0x00166757: les edx, ptr [eax]; jmp 0x166703; call 0x1339f0; endbr32; ret; 
0x0016efb8: les edx, ptr [eax]; jmp 0x16ee77; nop; mov dword ptr [esp + 8], ecx; call eax; 
0x0009a55c: les edx, ptr [eax]; jmp 0x9a4fe; sub esp, 0xc; push dword ptr [esp + 0x14]; call eax; 
0x001406ef: les edx, ptr [eax]; lea eax, [esi + edi]; pop ebx; pop esi; pop edi; ret; 
0x0011c0f0: les edx, ptr [eax]; lea esp, [ebp - 8]; pop ebx; pop esi; pop ebp; ret; 
0x00146def: les edx, ptr [eax]; mov dword ptr [eax + 8], 0; add esp, 4; pop ebx; pop esi; ret; 
0x00127302: les edx, ptr [eax]; mov dword ptr [ebx + 0x260], 0; add esp, 8; pop ebx; ret; 
0x00127326: les edx, ptr [eax]; mov dword ptr [ebx + 0x260], 3; add esp, 8; pop ebx; ret; 
0x000d6f07: les edx, ptr [eax]; mov eax, 1; add esp, 0xc; ret; 
0x00119921: les edx, ptr [eax]; mov eax, 1; add esp, 8; pop ebx; ret; 
0x00072242: les edx, ptr [eax]; mov eax, 1; pop ebx; pop esi; pop edi; ret; 
0x0011e7e2: les edx, ptr [eax]; mov eax, dword ptr [eax]; test eax, eax; je 0x11e830; call eax; 
0x0011e924: les edx, ptr [eax]; mov eax, dword ptr [eax]; test eax, eax; je 0x11e9c8; call eax; 
0x0012c7ce: les edx, ptr [eax]; mov eax, dword ptr [ebx + 8]; mov dword ptr [ebx + 8], edx; add esp, 8; pop ebx; ret; 
0x00165699: les edx, ptr [eax]; mov eax, dword ptr [esp + 0x1c]; sub eax, dword ptr gs:[0x14]; jne 0x1656ac; add esp, 0x2c; ret; 
0x001636b2: les edx, ptr [eax]; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x1636c5; add esp, 0x4c; ret; 
0x00163722: les edx, ptr [eax]; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x163735; add esp, 0x4c; ret; 
0x00163792: les edx, ptr [eax]; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x1637a5; add esp, 0x4c; ret; 
0x001637f5: les edx, ptr [eax]; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x163808; add esp, 0x4c; ret; 
0x00163855: les edx, ptr [eax]; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x163868; add esp, 0x4c; ret; 
0x001638c2: les edx, ptr [eax]; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x1638d5; add esp, 0x4c; ret; 
0x00163942: les edx, ptr [eax]; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x163955; add esp, 0x4c; ret; 
0x00037a31: les edx, ptr [eax]; mov eax, dword ptr [esp + 0xc]; add esp, 0x14; pop ebx; pop esi; ret; 
0x00087f8c: les edx, ptr [eax]; mov eax, dword ptr [esp + 0xc]; add esp, 0x18; pop ebx; ret; 
0x000da078: les edx, ptr [eax]; mov eax, dword ptr [esp + 0xc]; call eax; 
0x00163e30: les edx, ptr [eax]; mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x163e43; add esp, 0x1c; ret; 
0x0003b6e5: les edx, ptr [eax]; mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x3b6f8; add esp, 0x1c; ret; 
0x0003b738: les edx, ptr [eax]; mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x3b74b; add esp, 0x1c; ret; 
0x0011987a: les edx, ptr [eax]; mov eax, ebx; add esp, 4; pop ebx; pop esi; ret; 
0x000da1e5: les edx, ptr [eax]; mov eax, edi; call eax; 
0x0007192c: les edx, ptr [eax]; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x00140fd4: les edx, ptr [eax]; mov eax, edx; pop ebx; pop esi; pop edi; ret; 
0x0003b0f8: les edx, ptr [eax]; mov eax, esi; add esp, 4; pop ebx; pop esi; ret; 
0x0014949c: les edx, ptr [eax]; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00021dc6: les edx, ptr [eax]; mov ecx, dword ptr [esp + 0xc]; sub ecx, dword ptr gs:[0x14]; jne 0x21dd9; add esp, 0x1c; ret; 
0x0011aec7: les edx, ptr [eax]; mov edx, 1; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00086b86: les edx, ptr [eax]; mov edx, 1; xor ebx, ebx; nop; mov eax, edx; call dword ptr gs:[0x10]; 
0x0013362c: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x133645; add esp, 0x2c; ret; 
0x0013369c: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x1336b5; add esp, 0x2c; ret; 
0x0013aadd: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x13aaf0; add esp, 0x2c; ret; 
0x0003ad53: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x3ad66; add esp, 0x2c; ret; 
0x0003ae83: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x3ae96; add esp, 0x2c; ret; 
0x000864f5: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x86508; add esp, 0x2c; ret; 
0x0008ae91: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x8aea4; add esp, 0x2c; ret; 
0x0008c1f5: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x8c208; add esp, 0x2c; ret; 
0x0008c655: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x8c668; add esp, 0x2c; ret; 
0x0008cb41: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x8cb54; add esp, 0x2c; ret; 
0x0008cf91: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x8cfa4; add esp, 0x2c; ret; 
0x00163642: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x3c]; sub edx, dword ptr gs:[0x14]; jne 0x163655; add esp, 0x4c; ret; 
0x001195e6: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x1195f9; add esp, 0x1c; ret; 
0x001745c0: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x1745d3; add esp, 0x1c; ret; 
0x0003b795: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x3b7a8; add esp, 0x1c; ret; 
0x0003b7e8: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x3b7fb; add esp, 0x1c; ret; 
0x0003b835: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x3b848; add esp, 0x1c; ret; 
0x0003b888: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x3b89b; add esp, 0x1c; ret; 
0x000cad85: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xcad98; add esp, 0x1c; ret; 
0x000d4829: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xd483c; add esp, 0x1c; ret; 
0x000d6eb9: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xd6ecc; add esp, 0x1c; ret; 
0x00021c4c: les edx, ptr [eax]; neg eax; pop ebx; adc edx, 0; neg edx; ret; 
0x000220f5: les edx, ptr [eax]; neg eax; sbb eax, eax; add esp, 0xc; ret; 
0x001469ee: les edx, ptr [eax]; or byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00056b99: les edx, ptr [eax]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0002bb55: les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0013c92a: les edx, ptr [eax]; push dword ptr [esp + 4]; push 0x400; push dword ptr [esp + 0x10]; push ebp; call edi; 
0x001482af: les edx, ptr [eax]; sub eax, 1; add esp, 4; pop ebx; pop esi; ret; 
0x00162e3b: les edx, ptr [eax]; sub esp, 0xc; mov eax, dword ptr [edi + 4]; push edi; call dword ptr [eax + 0x10]; 
0x0016284c: les edx, ptr [eax]; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x0015a47e: les edx, ptr [eax]; sub esp, 8; mov eax, dword ptr [edi + 4]; push 8; push edi; call dword ptr [eax + 0x18]; 
0x001328d1: les edx, ptr [eax]; test eax, eax; je 0x1328e0; add esp, 8; pop ebx; ret; 
0x0013bfc1: les edx, ptr [eax]; test eax, eax; je 0x13bfd0; sub esp, 0xc; push esi; call eax; 
0x0013c331: les edx, ptr [eax]; test eax, eax; je 0x13c340; sub esp, 0xc; push esi; call eax; 
0x0015ac44: les edx, ptr [eax]; test eax, eax; je 0x15ad4b; sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x00119b9d: les edx, ptr [eax]; test eax, eax; jne 0x119b5c; add esp, 0xc; ret; 
0x00037686: les edx, ptr [eax]; test eax, eax; jne 0x37698; add esp, 8; pop ebx; ret; 
0x00037915: les edx, ptr [eax]; test eax, eax; jne 0x37920; add esp, 8; pop ebx; ret; 
0x000ddda5: les edx, ptr [eax]; test eax, eax; jne 0xdddb0; add esp, 8; pop ebx; ret; 
0x00125222: les edx, ptr [eax]; test eax, eax; js 0x125230; add esp, 8; pop ebx; ret; 
0x001500f0: les edx, ptr [eax]; test eax, eax; sete al; add esp, 0xc; ret; 
0x0009a521: les edx, ptr [eax]; test ebp, ebp; jne 0x9a479; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax - 0x148]; call dword ptr [eax]; 
0x00171f80: les edx, ptr [eax]; test ebx, ebx; jne 0x171f90; add esp, 8; pop ebx; ret; 
0x00087da2: les edx, ptr [eax]; xor eax, eax; add esp, 0xc; ret; 
0x000351b0: les edx, ptr [eax]; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x000ed55c: les edx, ptr [eax]; xor eax, eax; add esp, 8; pop ebx; ret; 
0x00087e9b: les edx, ptr [eax]; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x001097db: les edx, ptr [ebx + ebx*2 + 0x5e]; ret; 
0x0008202b: les edx, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x000cd19b: les edx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0002c7b9: les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x00159211: les edx, ptr [ebx + edx*2]; call dword ptr [eax + 0x10]; 
0x00037b89: les edx, ptr [ecx + eax]; add byte ptr [eax], al; pop ebx; pop edi; ret; 
0x0011f0a7: les edx, ptr [ecx + ecx*4 - 0x28]; pop ebx; pop esi; ret; 
0x00124424: les edx, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x001658f0: les edx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000b6112: les edx, ptr [ecx*4 + 0x5e5b9804]; ret; 
0x0009483d: les edx, ptr [edi + 0x19]; add byte ptr [ebx - 0x6f72e714], al; or al, 0x94; stc; call dword ptr [edx - 0x73]; 
0x00111b01: les edx, ptr [esi + ebx*2]; pop edi; ret; 
0x000d8743: les esi, ptr [eax + 0x5b]; pop esi; pop edi; ret; 
0x0009431d: les esi, ptr [eax + eax + 0x5e5b0000]; ret; 
0x0011c24a: les esi, ptr [eax - 0x77]; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x000cbc73: les esi, ptr [eax]; mov eax, ecx; pop ebx; pop esi; pop edi; ret; 
0x00078ad7: les esi, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x00108915: les esi, ptr [ebx + ebx*2 + 0x5e]; ret; 
0x001622d7: les esi, ptr [ebx + ebx*2 + 0x5f]; ret; 
0x0016ec8b: les esi, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x0003ac1b: les esi, ptr [ebx + ebx*2]; pop esi; ret 4; 
0x000dde42: les esi, ptr [ebx + ebx*2]; pop esi; ret; 
0x0002db0a: les esi, ptr [ecx - 7]; call dword ptr [eax - 0x73]; 
0x000518ae: les esi, ptr [esp + eax]; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x00162099: les esp, ptr [eax + 0x5b000000]; pop esi; pop edi; ret; 
0x00109907: les esp, ptr [eax + 0x5b]; pop esi; pop edi; ret; 
0x00038bfe: les esp, ptr [eax]; add al, byte ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00084e4d: les esp, ptr [eax]; add esp, 0xc; ret; 
0x0013ccde: les esp, ptr [eax]; add esp, 8; pop ebx; ret; 
0x0013c71e: les esp, ptr [eax]; cmp edx, 1; jg 0x13c748; add esp, 0x18; pop ebx; ret; 
0x00196193: les esp, ptr [eax]; jne 0x196230; lea eax, [edi - 4]; pop edi; ret; 
0x00196d23: les esp, ptr [eax]; jne 0x196dc0; lea eax, [ecx + 0xc]; ret; 
0x00196f63: les esp, ptr [eax]; jne 0x197010; add edx, 0xc; jl 0x197040; lea eax, [ecx + 0xc]; ret; 
0x0019737a: les esp, ptr [eax]; jne 0x197430; test ah, 0x40; jne 0x197440; lea eax, [edx + 0xf]; ret; 
0x00140c49: les esp, ptr [eax]; mov eax, ebx; pop ebx; pop esi; pop edi; ret 4; 
0x000d6f5c: les esp, ptr [eax]; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000cbde6: les esp, ptr [eax]; mov eax, ecx; pop ebx; pop esi; pop edi; ret; 
0x000581bb: les esp, ptr [eax]; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x00071c37: les esp, ptr [eax]; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0011d390: les esp, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x11d3a3; add esp, 0x1c; ret; 
0x00021e74: les esp, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x001a05c6: les esp, ptr [eax]; ret; 
0x000dda34: les esp, ptr [ebx + ebx*2 + 0x5e]; ret; 
0x000cc3be: les esp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00038832: les esp, ptr [ebx + ebx*2]; pop esi; ret; 
0x000375e9: les esp, ptr [ecx + eax]; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x00082410: les esp, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x0003a654: les esp, ptr [ecx - 7]; call dword ptr [eax - 0x18]; 
0x0003a654: les esp, ptr [ecx - 7]; call dword ptr [eax - 0x18]; bound edx, qword ptr [ebx - 1]; jmp dword ptr [esi - 0x70]; 
0x00156a4e: les esp, ptr [edx - 7]; call dword ptr [eax - 0x18]; 
0x001a14a0: les esp, ptr [edx]; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x0004ac7a: ljmp 0:0x15c8789; mov esp, edx; mov esi, dword ptr [edi + 0x3c]; mov edi, dword ptr [edi + 0x38]; ret; 
0x000b5a5e: ljmp 0:0x8381f6ff; add byte ptr [edi + ecx], al; inc ebp; ret 0x66c3; 
0x00171ad2: ljmp 0:0x8b8ff; add esp, 0xc; ret; 
0x00088a77: ljmp 0:0xb68d80eb; add byte ptr [eax], al; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x00133b5c: ljmp 0:0xf98110; or byte ptr [edi], 0x44; ret 0x8dc3; 
0x000ca6c7: ljmp 0x108:0x24748b1c; rol dword ptr [ecx], cl; ret; 
0x000d6fe2: ljmp 0x10c4:0x83000000; mov eax, 1; add esp, 0xc; ret; 
0x001a0852: ljmp 0x14c4:0x83ffe7f8; pop ebx; pop esi; ret; 
0x000e9597: ljmp 0x1b8:0x5bed7901; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x0009c6ee: ljmp 0x1c70:0x89c67508; pop ebx; pop esi; ret; 
0x0015a102: ljmp 0x1cc4:0x830000bc; ret; 
0x00119312: ljmp 0x1cc4:0x83fff3f2; ret; 
0x00083d82: ljmp 0x1cc4:0x83fffff5; ret; 
0x000792af: ljmp 0x1e0:0x83d08904; add esp, 0x14; pop ebx; pop esi; ret; 
0x0007936f: ljmp 0x1e0:0x83d08905; add esp, 0x14; pop ebx; pop esi; ret; 
0x000ca3a8: ljmp 0x29d2:0x31d0891f; ret; 
0x000d2892: ljmp 0x2cc4:0x83000045; ret; 
0x00049ee2: ljmp 0x2cc4:0x83ffffec; ret; 
0x00104ef2: ljmp 0x2cc4:0x83fffff5; ret; 
0x0004f373: ljmp 0x3001:0x878dffff; stc; dec dword ptr [ebp - 0x35f49]; call dword ptr [esi + 0x6a]; 
0x000d78f3: ljmp 0x424:0x748bc789; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x0017b402: ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x000635a8: ljmp 0x440f:0x93048d01; ret; 
0x00072216: ljmp 0x450f:0x107f602; ret 0xec83; 
0x000df90a: ljmp 0x46be:0x808dffff; stc; call dword ptr [eax + 0x6a]; 
0x00138bc7: ljmp 0x470f:0x9f88357; ret 0xf983; 
0x001968f1: ljmp 0x547:0x8d7b7206; pop edi; ret; 
0x000abf32: ljmp 0x5b5e:0x5f000005; ret; 
0x00128a93: ljmp 0x5bd0:0x8901e283; pop esi; ret; 
0x0012d2f4: ljmp 0x5bf0:0x8904c483; pop esi; ret; 
0x000764d7: ljmp 0x5bff:0xffffffb8; ret; 
0x0017b84a: ljmp 0x5f07:0x88027402; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017bd9a: ljmp 0x5f07:0x88027402; pop ebx; ret; 
0x00196901: ljmp 0x647:0x8d6b7207; pop edi; ret; 
0x0007130a: ljmp 0x6a02:0x6a000000; add byte ptr [edx], ch; push ebp; call dword ptr [esi + 0x40]; 
0x00024c8d: ljmp 0x838d:0x50000002; sub byte ptr [edi - 7], ch; call dword ptr [eax - 0x18]; 
0x0012e4c4: ljmp 0x83eb:0x89c87501; ret; 
0x00196911: ljmp 0x847:0x8d5b7209; pop edi; ret; 
0x00171b74: ljmp 0x850f:0x60e283ff; mov edi, esi; ljmp 0xc031:0x8c483ff; pop ebx; ret; 
0x00025ef5: ljmp 0x868d:0x50000002; sub byte ptr [edi - 7], ch; call dword ptr [eax - 0x18]; 
0x0002530c: ljmp 0x878d:0x50000002; sub byte ptr [edi - 7], ch; call dword ptr [eax - 0x18]; 
0x000ca673: ljmp 0x891f:0xeac1cd89; sal byte ptr [ecx], 1; shr byte ptr [ecx], cl; ret; 
0x00091fb4: ljmp 0x8956:0x7edb8510; ret; 
0x000b3ff4: ljmp 0x8d06:0x7cc20110; inc esp; add dword ptr [eax], esi; ret; 
0x000df9f2: ljmp 0x8d08:0xec83ffff; add byte ptr [edi + eax*2], 0xf9; call dword ptr [eax + 0x53]; 
0x000dfa4f: ljmp 0x8d08:0xec83ffff; add byte ptr [edi + eax*2], 0xf9; call dword ptr [eax - 1]; 
0x000b3fe4: ljmp 0x8d16:0x7cc20120; inc esp; add dword ptr [eax], esp; ret; 
0x000b3fd4: ljmp 0x8d26:0x7cc20130; inc esp; add dword ptr [eax], edx; ret; 
0x00196921: ljmp 0x947:0x8d4b720a; pop edi; ret; 
0x000401f1: ljmp 0x970f:0x9fa8330; ret 0xd284; 
0x00196931: ljmp 0xa47:0x8d3b720b; pop edi; ret; 
0x000918b2: ljmp 0xaf:0xb8fffa67; add byte ptr [eax], al; xor edx, edx; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00171b7d: ljmp 0xc031:0x8c483ff; pop ebx; ret; 
0x0014957a: ljmp 0xc166:0xfe2c117; ret 0x6608; 
0x000b3d01: ljmp 0xc229:0xc0bc0f10; jbe 0xb3d30; lea eax, [edi + eax + 0x10]; pop edi; ret; 
0x000b3d11: ljmp 0xc229:0xc0bc0f20; jbe 0xb3d30; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x000b3d21: ljmp 0xc229:0xc0bc0f30; jbe 0xb3d30; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000e5a88: ljmp 0xc283:0x142b60f; add dword ptr [eax + eax*8 - 0x3fce328b], eax; ret; 
0x00196941: ljmp 0xc47:0x8d2b720d; pop edi; ret; 
0x00073e02: ljmp 0xd024:0x9489ffff; add byte ptr [eax], al; add byte ptr [ebx + 0x6a5720c4], al; call dword ptr [edi + 0x56]; 
0x001287d3: ljmp 0xd089:0x5b01e283; pop esi; pop edi; ret; 
0x000365c1: ljmp 0xd089:0x7fff0000; shr eax, 0x1f; ret; 
0x00196951: ljmp 0xd47:0x8d1b720e; pop edi; ret; 
0x00120768: ljmp 0xe283:0x1e08314; add dword ptr [eax - 0x7c72ebba], ecx; rcl byte ptr [edx - 7], cl; dec dword ptr [eax - 0x6c72f7aa]; ret 0xf952; 
0x0004f708: ljmp 0xe284:0xfd3201f; idiv bh; inc dword ptr [ebx - 0x41f0fe18]; adc byte ptr [ebx - 0x362743], al; call dword ptr [eax]; 
0x00196961: ljmp 0xe47:0x8d0b720f; pop edi; ret; 
0x000232e2: ljmp 0xe900:0x1b9; ret; 
0x00096c71: ljmp 0xec83:0x20244c89; add al, 0x29; ret 0xf801; 
0x000d70ac: ljmp 0xf00:0x3b8; inc ebp; ret 0x8dc3; 
0x000b5abe: ljmp 0xf02:0x7d41f6ff; inc ebp; ret 0x66c3; 
0x001720c1: ljmp 0xf089:0x10c483ff; add esp, 4; pop ebx; pop esi; ret; 
0x001926ea: ljmp 0xf66:0xd1ef0f66; cmp byte ptr [edi], dl; ret 0x830f; 
0x00186a0f: ljmp 0xf702:0x89068b04; ret 0xf; 
0x001838df: ljmp 0xf702:0x89078b04; ret 0xf; 
0x00054b8d: ljmp 0xfcb9:0x43e9ffff; call dword ptr [eax - 0x77]; 
0x00034eac: ljmp 0xfff:0xffff2518; xor eax, edx; movzx edx, byte ptr [ecx]; test dl, dl; jne 0x34e99; ret; 
0x000890ca: lock add byte ptr [eax], al; add byte ptr [ecx + 0x7b9eb], cl; add byte ptr [eax], al; mov esi, edx; call dword ptr gs:[0x10]; 
0x0008abd6: lock add byte ptr [eax], al; add byte ptr [ecx + 0x7b9fb], cl; add byte ptr [eax], al; mov esi, edx; call dword ptr gs:[0x10]; 
0x000831aa: lock add byte ptr [eax], al; add byte ptr [ecx + 0x80], bh; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x00091acc: lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; call dword ptr gs:[0x10]; 
0x00086c79: lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000839cb: lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; xor esi, esi; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x00089809: lock add byte ptr [eax], al; add byte ptr [ecx + 0x87], bh; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x0008b3b7: lock add byte ptr [eax], al; add byte ptr [ecx + 7], bh; mov dword ptr [ebx + 4], 0; mov esi, edx; call dword ptr gs:[0x10]; 
0x0008b031: lock add byte ptr [eax], al; add byte ptr [ecx + 8], bh; mov esi, edx; call dword ptr gs:[0x10]; 
0x00024151: lock add byte ptr [eax], al; add byte ptr [ecx - 0x76ff7439], cl; ret 0xce80; 
0x00084a51: lock add byte ptr [eax], al; add byte ptr [ecx], dh; idiv byte ptr [edx + 0x7fffffff]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00085552: lock add byte ptr [eax], al; add byte ptr [ecx], dh; idiv byte ptr [edx + 1]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008c0be: lock add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; setne cl; shl ecx, 7; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008d292: lock add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008a373: lock add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008505c: lock add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008c4d8: lock add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000857e3: lock add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00085ad8: lock add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008b532: lock add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000854af: lock add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008502a: lock add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00085cb4: lock add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008322e: lock add byte ptr [eax], al; add byte ptr [edx + 2], bh; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00095bd1: lock add dword ptr [eax], eax; add byte ptr [ebp + 0x1f40d], cl; add byte ptr [ecx], al; ret; 
0x001743c6: lock add dword ptr [ebx], 1; mov edx, 1; mov eax, 0xf0; xor esi, esi; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000858b8: lock and dword ptr [ebx], 0xfffffffe; mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008f48c: lock cmpxchg dword ptr [ebx], edx; jne 0x8f4a0; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0008e3a5: lock cmpxchg dword ptr [ebx], esi; jne 0x8e3b0; xor eax, eax; pop ebx; pop esi; ret; 
0x00082c9e: lock cmpxchg dword ptr [ecx], edx; setne al; movzx eax, al; pop ebx; ret; 
0x0008f4cf: lock cmpxchg dword ptr [edx], ecx; jne 0x8f4c6; xor eax, eax; pop ebx; ret; 
0x0008f51d: lock cmpxchg dword ptr [edx], ecx; jne 0x8f530; xor eax, eax; pop ebx; ret; 
0x0008e08f: lock cmpxchg dword ptr [edx], ecx; mov eax, 0x10; cmove eax, ecx; ret; 
0x000886dc: lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x0008e068: lock dec dword ptr [eax]; jne 0x8e070; xor eax, eax; ret; 
0x00120d81: lock dec dword ptr [ebp - 0x65d9f7d]; call dword ptr [eax - 0x73]; 
0x00098f69: lock dec dword ptr [edi]; inc esp; ret 0x568d; 
0x00094d81: lock dec dword ptr [edi]; inc esp; ret 0xd231; 
0x00099576: lock dec dword ptr [edi]; inc esp; ret 0xe821; 
0x00098c13: lock dec dword ptr [edi]; inc esp; shl dword ptr [ecx], 1; ret 0x1a8b; 
0x0011d860: lock inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x00166fa1: lock inc dword ptr [ebx - 0x77cef3c]; add dword ptr [edi], ecx; xchg esp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x0009fa75: lock or byte ptr [ebx], dl; pop ebx; pop esi; ret; 
0x0008e22b: lock sub dword ptr [ebx + 0xc], 1; pop ebx; pop esi; pop edi; ret; 
0x001190a8: lodsb al, byte ptr [esi]; add al, 0; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00172985: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add al, ch; ret 0xead7; 
0x001601d0: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebp - 0x6b5fd7d], cl; call dword ptr [esi + 0x57]; 
0x0019b302: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 4; 
0x0002445e: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0008fa38: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x0015d87e: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ecx - 0x76f7dbb4], cl; inc esp; and al, 4; jmp edx; 
0x0015db75: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [edx + 0x56], dl; call dword ptr [eax + 4]; 
0x0019d8da: lodsb al, byte ptr [esi]; and al, 0x94; add byte ptr [eax], al; add byte ptr [ecx], cl; ret 0xbc89; 
0x000c4a1b: lodsb al, byte ptr [esi]; cwde; stc; call dword ptr [eax - 0x73]; 
0x0011ce8c: lodsb al, byte ptr [esi]; inc dword ptr [ebx - 0x2776d73c]; pop ebx; ret; 
0x000df909: lodsb al, byte ptr [esi]; ljmp 0x46be:0x808dffff; stc; call dword ptr [eax + 0x6a]; 
0x000df9f1: lodsb al, byte ptr [esi]; ljmp 0x8d08:0xec83ffff; add byte ptr [edi + eax*2], 0xf9; call dword ptr [eax + 0x53]; 
0x000dfa4e: lodsb al, byte ptr [esi]; ljmp 0x8d08:0xec83ffff; add byte ptr [edi + eax*2], 0xf9; call dword ptr [eax - 1]; 
0x001511f4: lodsb al, byte ptr [esi]; mov byte ptr [0xc8c10000], al; or dword ptr [ebp + 0x33], esp; add eax, 0x18; push eax; call edx; 
0x000e80da: lodsb al, byte ptr [esi]; or byte ptr [eax], al; add al, ch; sub bl, byte ptr [ebp - 0x387efff8]; sbb eax, 0x8900141f; ret; 
0x000e674a: lodsb al, byte ptr [esi]; or byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00149e39: lodsb al, byte ptr [esi]; pop edi; stc; call dword ptr [eax - 0x18]; 
0x000c8d18: lodsb al, byte ptr [esi]; push es; add byte ptr [ebx - 0x364b73], cl; dec dword ptr [ebp - 0x667377f]; call dword ptr [eax - 0x73]; 
0x00085b49: lodsb al, byte ptr [esi]; ret 0xe; 
0x000ce308: lodsb al, byte ptr [esi]; ret 0xf0; 
0x00179740: lodsb al, byte ptr [esi]; ret 0xfff6; 
0x000caaa5: lodsb al, byte ptr [esi]; ret; 
0x00120980: lodsb al, byte ptr [esi]; ror byte ptr [eax + esi], 1; ror byte ptr [ecx], 0xc8; ret; 
0x0014cde1: lodsb al, byte ptr [esi]; stc; call dword ptr [eax + 0x68]; 
0x0014d7b4: lodsb al, byte ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x0014ced5: lodsb al, byte ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x0014c872: lodsb al, byte ptr [esi]; stc; call dword ptr [edx - 0x73]; 
0x000e8272: lodsb al, byte ptr [esi]; sub byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000dfeba: lodsd eax, dword ptr [esi]; add byte ptr [eax], al; setne al; ret; 
0x00065d47: lodsd eax, dword ptr [esi]; add dword ptr [eax], eax; add byte ptr [ebp + 0x10e74c0], al; ret; 
0x000d8d0f: lodsd eax, dword ptr [esi]; and edi, esp; jmp dword ptr [esi - 0x70]; 
0x0010da68: lodsd eax, dword ptr [esi]; cld; jmp dword ptr [ebp - 0x5f]; 
0x000d72fd: lodsd eax, dword ptr [esi]; cmp eax, -0x26; jne 0xd7340; lea ecx, [esp + 4]; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x0010cd1e: lodsd eax, dword ptr [esi]; dec edx; stc; call dword ptr [eax - 0x18]; 
0x00114ca6: lodsd eax, dword ptr [esi]; int1; dec dword ptr [ebp - 0x65fc37d]; call dword ptr [eax - 0x73]; 
0x00044b70: lodsd eax, dword ptr [esi]; mov al, 0xba; stc; jmp dword ptr [ebp - 0x75]; 
0x0004b6e6: lodsd eax, dword ptr [esi]; ret; 
0x0014e63e: lodsd eax, dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x0014d8f1: lodsd eax, dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x0014e64a: lodsd eax, dword ptr [esi]; stc; call dword ptr [edx - 0x73]; 
0x00105906: loope 0x105891; ret 0x25; 
0x0010727d: loope 0x107208; ret 0x25; 
0x00108086: loope 0x108011; ret 0x25; 
0x00118f2e: loope 0x118f2e; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0011cbbe: loope 0x11cb9d; xor byte ptr [eax], 0xbb; stc; dec dword ptr [edi]; xchg ebp, eax; ret; 
0x0011d18e: loope 0x11d19f; xchg ebp, eax; ret; 
0x0011fa00: loope 0x11fa54; stc; call dword ptr [eax + 0x57]; 
0x001243da: loope 0x124365; ret 0x448b; 
0x0012451b: loope 0x1244a6; ret 0x448b; 
0x00124ace: loope 0x124a59; ret 0x448b; 
0x00124b8a: loope 0x124b15; ret 0x448b; 
0x00124cda: loope 0x124c65; ret 0x448b; 
0x00127d73: loope 0x127d84; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc110; 
0x0012d347: loope 0x12d2d2; ret 0x25; 
0x00133a97: loope 0x133a99; add byte ptr [eax], al; rol byte ptr [ecx + 0xf9], 0x80; cmove eax, edx; ret; 
0x00133b56: loope 0x133b58; add byte ptr [eax], al; rol cl, 0xea; adc byte ptr [ecx + 0xf9], al; or byte ptr [edi], 0x44; ret 0x8dc3; 
0x0013b3ea: loope 0x13b375; ret 0x25; 
0x0013ff3b: loope 0x13fec6; ret 0x25; 
0x001458d5: loope 0x1458d5; jmp dword ptr [esi - 0x70]; 
0x00147419: loope 0x14741f; add esp, 8; lea edx, [eax + ecx]; pop ebx; mov eax, edx; ret; 
0x0015fd1e: loope 0x15fca9; ret 0x25; 
0x001658ab: loope 0x1658a9; jmp dword ptr [esi - 0x70]; 
0x001694b6: loope 0x16943b; rcr byte ptr [ebx], 0x89; ret 0x25; 
0x00175e5d: loope 0x175de8; ret 0x25; 
0x0017791d: loope 0x1778a8; ret 0x25; 
0x0017965d: loope 0x1795e8; ret 0x25; 
0x001869c4: loope 0x1869bd; ret 1; 
0x00189c84: loope 0x189c7d; ret 1; 
0x00193a9e: loope 0x193afb; add eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x00195cdb: loope 0x195cdd; add byte ptr [eax], al; lea eax, [edi + 0xf]; pop edi; ret; 
0x0002d369: loope 0x2d2f4; ret 0x25; 
0x0002d5f5: loope 0x2d580; ret 0x25; 
0x000314e9: loope 0x31474; ret; 
0x00031e7b: loope 0x31e21; push cs; add byte ptr [ecx - 0x76dbdbbc], cl; ret; 
0x0004aa1a: loope 0x4a9d7; add dword ptr [eax], esi; add byte ptr [eax], al; mov eax, 0x180; call dword ptr gs:[0x10]; 
0x0004ac32: loope 0x4abef; add al, 0x30; add byte ptr [eax], al; mov eax, 0x180; call dword ptr gs:[0x10]; 
0x0004ad4a: loope 0x4ad07; add dword ptr [eax], esi; add byte ptr [eax], al; mov eax, 0x180; call dword ptr gs:[0x10]; 
0x00052e68: loope 0x52df3; ret 0x25; 
0x00053748: loope 0x536cd; rcr byte ptr [ebx], 0x89; ret 0x25; 
0x0005ecf5: loope 0x5ecf6; call dword ptr [eax - 0x75]; 
0x00063214: loope 0x63215; jmp dword ptr [ebp - 0x5f]; 
0x00063814: loope 0x63815; dec dword ptr [ebx - 0x4f37b]; jmp dword ptr [ebp - 0x75]; 
0x0006d68b: loope 0x6d68c; jmp dword ptr [esi - 0x70]; 
0x00078bdb: loope 0x78c4a; sti; dec dword ptr [ebp - 0x682cb7a]; call dword ptr [eax - 0x73]; 
0x0007b236: loope 0x7b1b8; js 0x7b23b; jae 0x7b2b1; fild dword ptr [eax - 0x76da2b83]; ret 0x5374; 
0x0008c0cb: loope 0x8c0d4; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008c7e6: loope 0x8c7ef; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008c9f7: loope 0x8ca00; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008d021: loope 0x8d02a; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00094585: loope 0x94577; cmp eax, 0xb; mov eax, 8; cmova eax, ecx; mov dword ptr [edx + 0x3b6c], eax; ret; 
0x000a1d2e: loope 0xa1d8b; mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x000ac588: loope 0xac50d; ret; 
0x000ac5a5: loope 0xac52a; ret; 
0x000adcb8: loope 0xadc3d; ret; 
0x000adcd5: loope 0xadc5a; ret; 
0x000afcb9: loope 0xafc48; mov dh, 0; add byte ptr [eax], al; add byte ptr [edi], cl; mov esp, 0x83ce01d2; ret 0x2910; 
0x000b2fb9: loope 0xb2f48; mov dh, 0; add byte ptr [eax], al; add byte ptr [edi], cl; mov esp, 0x83ce01d2; ret 0x2910; 
0x000b367c: loope 0xb360b; jbe 0xb3680; pop ebx; pop esi; ret; 
0x000b42b6: loope 0xb423b; ret 0x6640; 
0x000b592c: loope 0xb58bb; jbe 0xb5930; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1d8]; ret; 
0x000c9e7c: loope 0xc9e8d; je 0xc9ea0; ret; 
0x000d1a69: loope 0xd1a6a; call dword ptr [edi + 0x57]; 
0x000d6df9: loope 0xd6dfa; call dword ptr [ecx + 0x52]; 
0x000df518: loope 0xdf4a3; ret 0x25; 
0x000e02b5: loope 0xe0240; ret 0x25; 
0x000e1266: loope 0xe11f1; ret 0x25; 
0x000e1803: loope 0xe17f9; dec dword ptr [ebx - 0x18f43]; dec dword ptr [ebp - 0x6656b79]; call dword ptr [eax + 0x68]; 
0x000e2c0d: loope 0xe2b98; ret 0x25; 
0x000e3926: loope 0xe38b1; ret 0x25; 
0x000e529d: loope 0xe5228; ret 0x25; 
0x000eac37: loope 0xeabb9; add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0x5e5b; 
0x000f0d51: loope 0xf0d52; add esi, esi; ret; 
0x000f3187: loope 0xf3188; add esi, esi; ret; 
0x000f8956: loope 0xf88e1; ret 0x25; 
0x000f9536: loope 0xf94c1; ret 0x25; 
0x000ff69e: loope 0xff6fb; pop esi; pop edi; ret; 
0x000ac21d: maxps xmm3, xmmword ptr [esi + 0x5b]; ret; 
0x00182f0a: maxps xmm5, xmm0; call 0x82182e00; ret; 
0x00103b56: mov ah, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00091bd0: mov ah, 0; add byte ptr [eax], al; mov dword ptr [esp + 0x20], eax; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x00103b22: mov ah, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0009431e: mov ah, 0; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x000cba29: mov ah, 0; add byte ptr [eax], al; push eax; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x0009a98d: mov ah, 0x24; hlt; add byte ptr [eax], al; add byte ptr [ebp - 0x66ba380], cl; call dword ptr [eax + 0x68]; 
0x001230fc: mov ah, 0x24; mov al, byte ptr [0xb8000000]; sub al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001734b9: mov ah, 0x24; mov esp, 0x55000000; push edi; push esi; call dword ptr [ebx + 0x40]; 
0x00108ec2: mov ah, 0x24; mov esp, 0x8d000001; push esp; and al, 0x2c; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x0009bb11: mov ah, 0x24; push eax; add dword ptr [eax], eax; add byte ptr [ecx - 0x76f3dbbc], cl; ret 0xa165; 
0x00109a0d: mov ah, 0x24; pushfd; add byte ptr [eax], al; add al, ch; cwde; ret 0; 
0x00132cda: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0006973a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x001982ca: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [ecx + 8]; ret; 
0x00122182: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea ecx, [esp + 0xc]; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x000fb12a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea ecx, [esp + 4]; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x001959b4: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; add eax, 1; ret; 
0x00133aa7: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; and eax, 0xffffff; ret; 
0x0003a2e7: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; call dword ptr [ebx]; 
0x00082d36: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; endbr32; ret; 
0x001982c3: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 8]; ret; 
0x00197394: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 1]; ret; 
0x0008ea47: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov dword ptr [eax + 4], edx; ret; 
0x00084bb7: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 0x16; ret; 
0x00140497: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 0xffffffff; ret; 
0x000c9ec4: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 1; ret; 
0x000c9ed7: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 2; ret; 
0x000c9ee7: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 3; ret; 
0x000c9ef7: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 4; ret; 
0x000c9f07: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 5; ret; 
0x000c9f17: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 6; ret; 
0x000c9f27: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 7; ret; 
0x00198296: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, ecx; ret; 
0x000a5d34: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; pop ebx; ret; 
0x00095c97: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; ret; 
0x000a5d4a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov byte ptr [ecx], dl; pop ebx; ret; 
0x0008bd0a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x16; ret; 
0x00165e0a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 1; ret; 
0x001982fa: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, ecx; ret; 
0x001968aa: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edi; pop edi; ret; 
0x0015145a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov ecx, 1; mov eax, ecx; ret; 
0x001587e8: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; endbr32; ret; 
0x00084628: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 0x16; ret; 
0x000b00c9: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; pop esi; ret; 
0x000828f9: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; ret; 
0x00133b69: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; shr eax, 0x18; ret; 
0x0003a1f8: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; xor eax, eax; ret; 
0x00060112: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0016e302: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; pop ebx; ret; 
0x000b40da: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x000dff12: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x00034f8a: mov ah, 0x2f; stc; call dword ptr [eax - 0x18]; 
0x00022f84: mov ah, 0x39; adc byte ptr [edi], cl; test byte ptr [ebx + 0x6b000001], ah; ret 0x8b3c; 
0x0012eed3: mov ah, 0x6a; add eax, 0x57b5808d; stc; call dword ptr [eax - 0x75]; 
0x000231f9: mov ah, 0x6b; fistp qword ptr [ebx + eax]; pop ebp; les eax, ptr [ebx - 0x387cf314]; add dword ptr [ebx - 0x7d], edx; ret; 
0x000317a1: mov ah, 0x83; in al, dx; or al, 0x8d; cmp byte ptr [esi], 0x2f; stc; call dword ptr [eax - 0x18]; 
0x0012f50c: mov ah, 0x83; les ecx, ptr [eax + edx*2]; push esi; push edx; call dword ptr [ebx + 0x14]; 
0x001309e7: mov ah, 0x83; ret; 
0x000fc1d1: mov ah, 0x85; ret; 
0x000c3684: mov ah, 0x85; sal byte ptr [ebx - 0x75], 0x7d; les ebp, ptr [ecx]; ret; 
0x00030e28: mov ah, 0x89; push ebp; shr al, 0x9f; ret 5; 
0x00091f58: mov ah, 0x89; ret 0x458b; 
0x001311ab: mov ah, 0x89; ret; 
0x0017157c: mov ah, 0x8b; inc ebp; les eax, ptr [ebx - 0x7f72f314]; je 0x1715ed; stc; call dword ptr [eax - 0x18]; 
0x0013e817: mov ah, 0x8b; test dword ptr [edi + edi*8 - 1], ebp; jmp dword ptr [esi - 0x77]; 
0x0017064b: mov ah, 0x8d; je 0x170675; add dh, dh; ret; 
0x000c29fe: mov ah, 0x97; stc; call dword ptr [eax - 0x18]; 
0x000de2f9: mov ah, 0x99; stc; call dword ptr [eax - 0x73]; 
0x000e63c6: mov ah, 0x9a; stc; call dword ptr [eax - 0x18]; 
0x0013fae2: mov ah, 0xa7; stc; call dword ptr [eax - 0x18]; 
0x0014c871: mov ah, 0xac; stc; call dword ptr [edx - 0x73]; 
0x0014f1b3: mov ah, 0xad; stc; call dword ptr [eax - 0x73]; 
0x000869d1: mov ah, 0xb9; or al, 0; add byte ptr [eax], al; lea ebx, [eax + 0x70]; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x00068588: mov ah, 0xc; add byte ptr [ebx - 0x8737b], cl; inc dword ptr [ebx - 0x7f72f314]; clc; js 0x68592; call dword ptr [eax - 0x18]; 
0x000b4c0b: mov ah, 0xe8; call 0x810b57e3; ret; 
0x0009b0ad: mov ah, 0xe8; push esi; inc ecx; jle 0x9b0c4; cmovne eax, edx; ret; 
0x0009b52d: mov ah, 0xe8; push esi; inc ecx; jle 0x9b544; cmovne eax, edx; ret; 
0x00106b49: mov ah, 0xed; call dword ptr [eax + 0x6a]; 
0x000c5b0b: mov ah, 0xf5; jmp dword ptr [esi - 0x70]; 
0x0016f0b9: mov ah, 0xf9; call dword ptr [eax + 0x6a]; 
0x00141eab: mov ah, 0xf; mov bh, 0x59; adc cl, byte ptr [ebp - 0x2ff4d]; jmp dword ptr [esi - 0x7d]; 
0x00158578: mov ah, 0xfd; jmp dword ptr [esi - 0x70]; 
0x00050204: mov ah, 0xff; dec dword ptr [ebx - 0x362f7b]; call dword ptr [esi - 1]; 
0x00115302: mov ah, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010497e: mov ah, 1; add byte ptr [eax], al; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x000b5968: mov ah, 1; add byte ptr [eax], al; ret; 
0x0007e059: mov ah, 3; xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebp - 0x1c5f79], cl; jmp ptr [ecx]; ret 0xf189; 
0x0015db6e: mov al, 0; add byte ptr [eax], al; lea edx, [esp + 0xac]; push edx; push esi; call dword ptr [eax + 4]; 
0x00037981: mov al, 0; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; mov ecx, 8; call dword ptr gs:[0x10]; 
0x000b3edc: mov al, 0; add byte ptr [eax], al; pmovmskb eax, xmm1; bsr eax, eax; add eax, ecx; ret; 
0x0015e2c0: mov al, 0; add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x000b3c6c: mov al, 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x000befba: mov al, 0x16; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x00048a7a: mov al, 0x18; add byte ptr [eax], al; mov byte ptr [eax + ecx], 0; pop ebx; pop esi; ret; 
0x00131b98: mov al, 0x2b; cmc; dec dword ptr [ebx + 0x18499]; add dh, dh; ret; 
0x0009c221: mov al, 0x2b; idiv bh; cmovne eax, edx; ret; 
0x00163403: mov al, 0x39; sbb byte ptr [eax + ecx + 0x5b], dh; pop esi; pop edi; ret; 
0x0007aafe: mov al, 0x62; cli; jmp dword ptr [esi - 0x70]; 
0x00027061: mov al, 0x6f; stc; call dword ptr [eax - 0x18]; 
0x0004ff88: mov al, 0x76; stc; call dword ptr [eax - 0x73]; 
0x000668cb: mov al, 0x78; stc; call dword ptr [eax - 0x18]; 
0x000673b0: mov al, 0x83; in al, dx; add al, 0x89; lea edx, [edi + esi*8 - 1]; call dword ptr [ebx + 0x57]; 
0x00086bdf: mov al, 0x83; in al, dx; or al, 0x8d; cmp ah, 0x7e; stc; call dword ptr [eax - 0x18]; 
0x0005359c: mov al, 0x83; ret; 
0x0009b079: mov al, 0x87; out 0xff, eax; cmovne eax, edx; ret; 
0x00131782: mov al, 0x8d; cmp byte ptr [eax + 0x58], 0xf9; call dword ptr [edx - 0x17]; 
0x00030cbf: mov al, 0x8d; cmp byte ptr [edx], 0x2f; stc; call dword ptr [eax + 0x53]; 
0x00086d1e: mov al, 0x8d; xchg byte ptr [eax + 0x7f], dh; stc; call dword ptr [eax - 0x73]; 
0x0015f739: mov al, 0x90; add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; 
0x0015f739: mov al, 0x90; add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x000fc2c1: mov al, 0x9d; stc; call dword ptr [eax - 0x18]; 
0x00102587: mov al, 0x9e; stc; call dword ptr [eax - 0x73]; 
0x0009c298: mov al, 0xa4; call 0x2ef439e; lea edx, [edx - 0x9d420]; cmovne eax, edx; ret; 
0x001046a6: mov al, 0xa7; in eax, dx; call dword ptr [eax - 0x73]; 
0x001693c9: mov al, 0xb3; stc; call dword ptr [eax - 0x73]; 
0x0009b65c: mov al, 0xb5; call 0x7e4bad62; adc byte ptr [edi], cl; inc ebp; ret 0x66c3; 
0x00044b71: mov al, 0xba; stc; jmp dword ptr [ebp - 0x75]; 
0x0011d194: mov al, 0xba; stc; jmp dword ptr [ecx]; 
0x00057b0c: mov al, 0xc1; add dword ptr [eax], eax; add esp, 0x2c; ret; 
0x00119728: mov al, 0xe8; ret 0x1a2; 
0x00140c67: mov al, 0xe8; sub dword ptr [0x878dffff], 0x78; test al, 0xf9; call dword ptr [eax - 0x73]; 
0x00032632: mov al, 0xe9; ret; 
0x00160258: mov al, 0xf3; dec dword ptr [ecx - 0x7c72dbfc]; inc ebx; stc; call dword ptr [esi + 0x57]; 
0x0015b7d9: mov al, 0xf9; call dword ptr [eax - 0x73]; 
0x000909fb: mov al, 0xff; inc dword ptr [ebx - 0xf76eb3c]; pop ebx; pop esi; ret; 
0x000b5958: mov al, 1; add byte ptr [eax], al; ret; 
0x0012f11d: mov al, 8; ret 0x975; 
0x000b58eb: mov al, ah; cmp eax, dword ptr [eax]; add byte ptr [ecx], al; xor eax, eax; pop ebx; ret; 
0x00080f0c: mov al, byte ptr [0x1000019]; add esp, 4; pop ebx; pop esi; ret; 
0x000d2b36: mov al, byte ptr [0x1fff8e9]; fnstcw word ptr [esi]; jmp ecx; 
0x0010b128: mov al, byte ptr [0x26b48d]; add byte ptr [eax], al; add byte ptr [ebx - 0x13372], cl; jmp dword ptr [ebp - 0x75]; 
0x00074893: mov al, byte ptr [0x29ffffe3]; ret 0x4d89; 
0x00173e21: mov al, byte ptr [0x29ffffe3]; ret 0xc129; 
0x00070dd7: mov al, byte ptr [0x29ffffe3]; ret 0xd989; 
0x0007e061: mov al, byte ptr [0x29ffffe3]; ret 0xf189; 
0x00077cba: mov al, byte ptr [0x29ffffe3]; ret 0xf989; 
0x0005efa4: mov al, byte ptr [0x2bffffb6]; test dword ptr [eax - 0x7c000005], edi; in al, dx; or al, 0x89; ret; 
0x0007c89c: mov al, byte ptr [0x39000001]; ret 0x448b; 
0x00168192: mov al, byte ptr [0x3908418b]; ret 0x2675; 
0x0003a2de: mov al, byte ptr [0x39ffffe3]; jae 0x3a2f9; lea esi, [esi]; lea esi, [esi]; call dword ptr [ebx]; 
0x00059f58: mov al, byte ptr [0x3efff8be]; jmp eax; 
0x00149b6d: mov al, byte ptr [0x3efff90d]; jmp ebx; 
0x001711ca: mov al, byte ptr [0x3efff928]; jmp eax; 
0x0009b4ba: mov al, byte ptr [0x450fffe7]; ret 0x66c3; 
0x0009bf72: mov al, byte ptr [0x450ffff6]; ret 0x66c3; 
0x00155f33: mov al, byte ptr [0x50fff962]; push 6; call 0x152d90; add esp, 0x1c; ret; 
0x00021718: mov al, byte ptr [0x50fff966]; push 1; call 0x10a240; add esp, 0x1c; ret; 
0x0016ea9d: mov al, byte ptr [0x51000003]; push edx; call dword ptr [eax + 0x24]; 
0x0016eb3d: mov al, byte ptr [0x51000003]; push edx; call dword ptr [eax + 0x28]; 
0x0016209a: mov al, byte ptr [0x5b000000]; pop esi; pop edi; ret; 
0x000a5942: mov al, byte ptr [0x5b5f0000]; ret; 
0x000a5d2c: mov al, byte ptr [0x5f000001]; pop ebx; ret; 
0x00162f26: mov al, byte ptr [0x650000a4]; mov eax, dword ptr [0]; mov dword ptr [eax + edx], ecx; ret; 
0x00104c65: mov al, byte ptr [0x6a000000]; jg 0x104c54; jo 0x104c05; std; call dword ptr [ecx + 0x6a]; 
0x000b6018: mov al, byte ptr [0x80ffe9ff]; in eax, 2; lea edx, [edx - 0x924b0]; cmovne eax, edx; ret; 
0x00100e55: mov al, byte ptr [0x8100070f]; ret; 
0x000eec55: mov al, byte ptr [0x81000831]; ret; 
0x000ec855: mov al, byte ptr [0x81000855]; ret; 
0x0017fa55: mov al, byte ptr [0x81ffff23]; ret; 
0x0017e355: mov al, byte ptr [0x81ffff3a]; ret; 
0x0010cc01: mov al, byte ptr [0x83000000]; in al, dx; or al, 0x8d; and dword ptr [edi + 0x4a], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0012283b: mov al, byte ptr [0x89000000]; inc esp; and al, 0x6c; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x0016ece2: mov al, byte ptr [0x89000003]; dec esp; and al, 4; jmp dword ptr [eax + 0x30]; 
0x000819d2: mov al, byte ptr [0x89000003]; push esp; and al, 0x10; mov eax, dword ptr [eax + 4]; add esp, 0xc; jmp eax; 
0x0002e982: mov al, byte ptr [0x89000010]; ret 0x858b; 
0x0002297c: mov al, byte ptr [0x890014c3]; sbb al, 0x24; mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x00193a4e: mov al, byte ptr [0x89fff8de]; ret; 
0x000718f7: mov al, byte ptr [0x89ffffe6]; ret 0x9689; 
0x0009801c: mov al, byte ptr [0x89ffffef]; ret; 
0x000b85a5: mov al, byte ptr [0x89fffffc]; ret; 
0x0009707c: mov al, byte ptr [0x89fffffe]; ret; 
0x0004e84d: mov al, byte ptr [0x8bffffc9]; xchg ebp, eax; ror cl, 0xff; call dword ptr [eax - 0x73]; 
0x0012cc8c: mov al, byte ptr [0x8dfffffe]; xchg edi, esp; push esi; stc; call dword ptr [ebp - 1]; 
0x0019732c: mov al, byte ptr [0xa8000000]; inc eax; jne 0x1973e0; lea eax, [edx + 7]; ret; 
0x00092fc9: mov al, byte ptr [0xb8000000]; sbb dword ptr [ecx], eax; add byte ptr [eax], al; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0008df01: mov al, byte ptr [0xb8000000]; scasd eax, dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [esi + 8], bh; call dword ptr gs:[0x10]; 
0x001230fe: mov al, byte ptr [0xb8000000]; sub al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00089120: mov al, byte ptr [0xbafffffc]; or dword ptr [eax], 0xa30f0000; ret 0x830f; 
0x0005d955: mov al, byte ptr [0xc6fffffd]; test dword ptr [edx + edi*8 - 1], eax; jmp dword ptr [ebp + 0x31]; 
0x0016707c: mov al, byte ptr [0xc7ffffc1]; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0014bab8: mov al, byte ptr [0xf6000050]; ret 0xf01; 
0x0009c0e3: mov al, byte ptr [0xffff509]; inc esp; ret 0x66c3; 
0x00131c03: mov al, byte ptr [0xffff50f]; inc esp; ret 0x66c3; 
0x00131b1e: mov al, byte ptr [0xffff536]; inc esp; ret 0xc35b; 
0x0016e53a: mov al, byte ptr [eax]; add byte ptr [eax], al; sub esp, 0xc; push dword ptr [esp + 0x24]; mov esi, dword ptr [esp + 0x24]; call esi; 
0x00026f3e: mov al, byte ptr [eax]; add byte ptr [ebx - 0x72c3db84], cl; xchg esp, edi; jo 0x26f43; call dword ptr [eax - 0x73]; 
0x00026f61: mov al, byte ptr [eax]; add byte ptr [ebx - 0x72c3db84], cl; xchg esp, edi; jo 0x26f66; call dword ptr [eax - 0x73]; 
0x0003c0ff: mov al, byte ptr [ebx - 2]; jmp dword ptr [esi - 0x70]; 
0x000a8166: mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; pop edi; ret; 
0x000a82a6: mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; ret; 
0x000b2569: mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edi; pop ebx; pop edi; ret; 
0x000a3d96: mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edi; pop edi; ret; 
0x000a3eb6: mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x000a82c4: mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; lea eax, [edx + 4]; ret; 
0x000a3ed4: mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; mov eax, edx; ret; 
0x000aca7a: mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x000acbda: mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000b260b: mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edi; pop ebx; pop edi; ret; 
0x000ab41a: mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000ab57a: mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000a8304: mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000a3f14: mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x00195c42: mov al, byte ptr [ecx]; add byte ptr [eax], al; lea eax, [edi + 0xb]; pop edi; ret; 
0x000a8140: mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; pop edi; ret; 
0x000a8280: mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; ret; 
0x000b2543: mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edi; pop ebx; pop edi; ret; 
0x000a3d70: mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x000a3e90: mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x001640a2: mov al, ch; in al, dx; call dword ptr [eax - 0x73]; 
0x000a8194: mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, [edx + 5]; pop edi; ret; 
0x000a82d4: mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, [edx + 5]; ret; 
0x000a3db4: mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edi; pop edi; ret; 
0x000a3ee4: mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x000aca9a: mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x000acbfa: mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000b262b: mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop ebx; pop edi; ret; 
0x000ab43a: mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000ab59a: mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000a8324: mov ax, word ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000a3f34: mov ax, word ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000a8150: mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; pop edi; ret; 
0x000a8290: mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; ret; 
0x000a82a0: mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; ret; 
0x000a3eb0: mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x000b2553: mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop ebx; pop edi; ret; 
0x000a3d80: mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x000a3ea0: mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edx; ret; 
0x00196f85: mov bh, 0; add byte ptr [eax], al; lea eax, [ecx + 1]; ret; 
0x0010b25c: mov bh, 0; add byte ptr [eax], al; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00104409: mov bh, 0x10; mov eax, dword ptr [esp + 8]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x0012916f: mov bh, 0x14; inc edx; and edx, 0x1000; mov eax, edx; ret; 
0x001287ed: mov bh, 0x14; inc edx; and edx, 0x100; mov eax, edx; ret; 
0x0012906f: mov bh, 0x14; inc edx; and edx, 0x2000; mov eax, edx; ret; 
0x00128e6f: mov bh, 0x14; inc edx; and edx, 0x200; mov eax, edx; ret; 
0x00128f6f: mov bh, 0x14; inc edx; and edx, 0x4000; mov eax, edx; ret; 
0x00128c6f: mov bh, 0x14; inc edx; and edx, 0x400; mov eax, edx; ret; 
0x00128eef: mov bh, 0x14; inc edx; and edx, 0x8000; mov eax, edx; ret; 
0x00128cef: mov bh, 0x14; inc edx; and edx, 1; mov eax, edx; ret; 
0x00128d6f: mov bh, 0x14; inc edx; and edx, 2; mov eax, edx; ret; 
0x00128fef: mov bh, 0x14; inc edx; and edx, 4; mov eax, edx; ret; 
0x00128bef: mov bh, 0x14; inc edx; and edx, 8; mov eax, edx; ret; 
0x0008834a: mov bh, 0x1c; sbb al, byte ptr [eax]; mov eax, dword ptr [eax + 0x3a28]; ret; 
0x0010cd05: mov bh, 0x2c; dec dword ptr [ebp - 0x65fc37d]; call dword ptr [eax - 0x73]; 
0x00094b58: mov bh, 0x39; ret 0xb374; 
0x00144a7c: mov bh, 0x41; add cl, byte ptr [ecx - 0x393e9907]; or byte ptr [ecx], ch; fldenv [esi - 0x3f]; ret 0xf08; 
0x0016fa0c: mov bh, 0x47; adc byte ptr [esi - 0x3f], ah; call 0x10163619; test byte ptr [ebp - 0x76ffffff], ah; ret 0xb60f; 
0x000fe8d1: mov bh, 0x4c; push ss; dec byte ptr [ebx - 0x6d34b]; jmp dword ptr [esi - 0x77]; 
0x000cc531: mov bh, 0x56; or al, 0x29; ret 0x428d; 
0x00141ead: mov bh, 0x59; adc cl, byte ptr [ebp - 0x2ff4d]; jmp dword ptr [esi - 0x7d]; 
0x00092c4b: mov bh, 0x73; sbb dword ptr [eax], eax; push ebx; mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0016bd35: mov bh, 0x7c; cld; jmp dword ptr [esi - 0x70]; 
0x000d7e9c: mov bh, 0x83; ret 0x8301; 
0x00023b33: mov bh, 0x83; shr byte ptr [esi - 7], 1; jmp dword ptr [esi - 0x77]; 
0x000cc458: mov bh, 0x84; inc ebp; mov esi, 0x89fff8e4; ret 0x80b8; 
0x0002ffd8: mov bh, 0x84; push eax; add byte ptr [ecx], al; add byte ptr [eax], al; and eax, dword ptr [esp + 8]; ret; 
0x00104878: mov bh, 0x89; rol byte ptr [ebx - 0x7c99cf20], 1; clc; adc byte ptr [edi], cl; test byte ptr [eax - 0x9fffffc], bl; ret 0xf20; 
0x0009c448: mov bh, 0x89; xor byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000238ec: mov bh, 0x93; shr byte ptr [esi - 7], 1; jmp dword ptr [esi - 0x77]; 
0x0016c0c4: mov bh, 0x99; add byte ptr [esi + 0x728d0000], ah; jmp dword ptr [esi - 0x7d]; 
0x00048371: mov bh, 0x9a; inc ebp; stc; dec dword ptr [ebx - 0x1336e]; jmp dword ptr [esi - 0x77]; 
0x00116745: mov bh, 0xa; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0008954a: mov bh, 0xa; sbb al, byte ptr [eax]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x11c], edx; ret; 
0x0014ab4f: mov bh, 0xc0; add esp, 0x2c; ret; 
0x00133a91: mov bh, 0xd0; movzx eax, al; and ecx, 0xc0000000; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x00164f05: mov bh, 0xec; call dword ptr [eax - 0x73]; 
0x0015878f: mov bh, 0xf3; call dword ptr [eax - 0x73]; 
0x0002fca3: mov bh, 4; push eax; and eax, 0x1000; ret; 
0x0002fc73: mov bh, 4; push eax; and eax, 0x100; ret; 
0x0002fc43: mov bh, 4; push eax; and eax, 0x2000; ret; 
0x0002fb83: mov bh, 4; push eax; and eax, 0x200; ret; 
0x0002fbe3: mov bh, 4; push eax; and eax, 0x4000; ret; 
0x0002faf3: mov bh, 4; push eax; and eax, 0x400; ret; 
0x0002fbb3: mov bh, 4; push eax; and eax, 0x8000; ret; 
0x0002fb53: mov bh, 4; push eax; and eax, 0x800; ret; 
0x0002fd53: mov bh, 4; push eax; and eax, 1; ret; 
0x0002fb23: mov bh, 4; push eax; and eax, 2; ret; 
0x0002fc13: mov bh, 4; push eax; and eax, 4; ret; 
0x0002fac3: mov bh, 4; push eax; and eax, 8; ret; 
0x0013127b: mov bh, 4; push eax; shr ax, 0xe; and eax, 1; pop ebx; ret; 
0x00083b27: mov bh, 5; add byte ptr [ebx + 0x21ba084e], cl; add byte ptr [eax], al; add byte ptr [ecx + 0x10eb8c3], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00039558: mov bh, 7; add byte ptr [ebx + 0x5e5b4cc4], al; pop edi; pop ebp; ret; 
0x0017f5d9: mov bh, 8; mov word ptr [edx], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00188a29: mov bh, 8; mov word ptr [edx], cx; pop ebx; ret; 
0x0016afab: mov bh, ah; dec dword ptr [ebx - 0xf34b]; dec dword ptr [ebp - 0x64c2b7a]; call dword ptr [eax - 0x73]; 
0x0015af7f: mov bh, ch; dec dword ptr [ebp - 0x69c2c7d]; call dword ptr [edx + 0x6a]; 
0x00037a11: mov bl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00198479: mov bl, 0; add byte ptr [eax], al; lea eax, [edi - 0x10]; pop edi; ret; 
0x000379e3: mov bl, 0; add byte ptr [eax], al; mov ecx, 8; call dword ptr gs:[0x10]; 
0x0003455a: mov bl, 0; je 0x34556; inc dword ptr [ecx]; fidivr dword ptr [esi]; jmp edx; 
0x0003ec3a: mov bl, 0x1e; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x0014d909: mov bl, 0x20; out dx, al; dec dword ptr [ebp - 0x652fb7f]; call dword ptr [eax - 0x73]; 
0x0016c185: mov bl, 0x48; or al, 0; add byte ptr [ebx - 0x4472f714], al; pop es; stc; call dword ptr [edi + 0x56]; 
0x0013cd4b: mov bl, 0x5c; stc; call dword ptr [eax - 0x18]; 
0x0013cede: mov bl, 0x5c; stc; call dword ptr [eax - 0x73]; 
0x00127519: mov bl, 0x60; add al, byte ptr [eax]; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0015db51: mov bl, 0xa8; add byte ptr [eax], al; add bh, bh; je 0x15db7d; sub al, 0x56; call dword ptr [eax + 0xc]; 
0x0014798b: mov bl, 0xce; pop esi; stc; call dword ptr [esi - 0x18]; 
0x001479b7: mov bl, 0xdb; pop esi; stc; call dword ptr [esi - 0x18]; 
0x001479e3: mov bl, 0xea; pop esi; stc; call dword ptr [esi - 0x18]; 
0x001020b9: mov bl, 0xec; add al, 0xf9; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x00167eb2: mov bl, 0xf9; call dword ptr [eax - 0x18]; 
0x001654c6: mov bl, 0xf9; call dword ptr [eax - 0x73]; 
0x0016cf41: mov bl, 0xf9; call dword ptr [edi + 0x56]; 
0x000ee1c2: mov bl, 0xff; inc dword ptr [ebp - 0x16688b40]; imul edi, edi, -1; jmp dword ptr [esi - 0x70]; 
0x0012370e: mov bl, 1; add byte ptr [eax], al; int 0x80; 
0x0005741b: mov bl, 1; xor cl, bh; dec dword ptr [ecx - 0x9ebdb8c]; ret 0xf50; 
0x001a14a1: mov byte ptr [0], al; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x00083140: mov byte ptr [0x4fe], 0; mov dword ptr gs:[0x7c], edx; ret; 
0x00082898: mov byte ptr [0x4fe], 0; mov dword ptr gs:[0x80], eax; ret; 
0x000828c2: mov byte ptr [0x4fe], al; cmp eax, 1; je 0x828d0; ret; 
0x00083166: mov byte ptr [0x4fe], al; cmp eax, 1; je 0x83178; ret; 
0x000abb7a: mov byte ptr [0x5f000009], al; pop esi; pop ebx; ret; 
0x000490fa: mov byte ptr [0x83000004], al; ret; 
0x001a119a: mov byte ptr [0x83ffe7ef], al; les ebx, ptr [eax]; pop ebx; ret; 
0x00132d1a: mov byte ptr [0x83fff82f], al; les ebx, ptr [eax]; pop ebx; ret; 
0x0008c9c2: mov byte ptr [0x89000000], al; ret 0xf283; 
0x00093656: mov byte ptr [0x89000001], al; jmp 0x4c2daaeb; call dword ptr gs:[0x10]; 
0x000ffd9b: mov byte ptr [0x89530012], al; ret; 
0x000cfd89: mov byte ptr [0x8d01f980], al; dec edx; fisttp qword ptr [edi]; xchg esi, eax; ret; 
0x0019d106: mov byte ptr [0x9c8b0000], 0x24; add byte ptr [eax], 0; add dh, dh; ret; 
0x000e0df6: mov byte ptr [0xb48dfffb], al; add byte ptr es:[eax], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x000751b7: mov byte ptr [0xc4830000], al; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00047102: mov byte ptr [0xc4830000], al; adc byte ptr [ecx + 0x244439c1], cl; sbb byte ptr [edi], cl; test byte ptr [0x39000004], ah; ret; 
0x001511f5: mov byte ptr [0xc8c10000], al; or dword ptr [ebp + 0x33], esp; add eax, 0x18; push eax; call edx; 
0x0019514a: mov byte ptr [0xf6000000], al; ret 0x7501; 
0x001518eb: mov byte ptr [0xf8830000], al; add dword ptr [edi + 0x25], edi; add esp, 8; pop ebx; ret; 
0x000cd203: mov byte ptr [0xf8830000], bh; add dword ptr [edi + 0x24], edi; add esp, 8; pop ebx; ret; 
0x000b336e: mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afed8: mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0002ecb7: mov byte ptr [eax + 0x1155], dl; lea eax, [eax + 0x1120]; ret; 
0x000b33f4: mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aff5e: mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b3478: mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000affe2: mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b35e3: mov byte ptr [eax + 0x40], bh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000827d1: mov byte ptr [eax + 0x4fe], 0; ret; 
0x00162f25: mov byte ptr [eax + 0x650000a4], ah; mov eax, dword ptr [0]; mov dword ptr [eax + edx], ecx; ret; 
0x001959ab: mov byte ptr [eax + 0x75], 0x45; add eax, 0xf; ret; 
0x00195bf8: mov byte ptr [eax + 0xf], 0x85; rol byte ptr [ecx], 1; add byte ptr [eax], al; lea eax, [edi + 0xf]; pop edi; ret; 
0x001977b3: mov byte ptr [eax + 0xf], 0x85; xchg byte ptr [ebx], al; add byte ptr [eax], al; add eax, 0xf; pop edi; ret; 
0x000b31bc: mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afd76: mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b31e8: mov byte ptr [eax + 4], dh; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afd92: mov byte ptr [eax + 4], dh; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0005180c: mov byte ptr [eax + 8], 0; mov eax, edx; ret; 
0x000b326a: mov byte ptr [eax + 8], dh; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afde4: mov byte ptr [eax + 8], dh; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0007183e: mov byte ptr [eax + eax + 0x488b0000], dl; pop eax; mov dword ptr [ecx + 0x88], edx; ret; 
0x0002f8f6: mov byte ptr [eax + eax - 0x7c730000], dl; js 0x2f956; stc; call dword ptr [esi - 1]; 
0x00048a7e: mov byte ptr [eax + ecx], 0; pop ebx; pop esi; ret; 
0x00162c75: mov byte ptr [eax + esi], 0; add esp, 4; mov eax, 1; pop ebx; pop esi; ret; 
0x0015c80d: mov byte ptr [eax - 1], dl; cmp eax, ebx; jne 0x15c800; pop ebx; ret; 
0x00147f73: mov byte ptr [eax*4 + 0x5be775c0], 0x5e; pop edi; ret; 
0x00197a4f: mov byte ptr [eax], 0; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x00120a9a: mov byte ptr [eax], 0; add esp, 0x18; mov eax, ebx; pop ebx; ret; 
0x000a1b60: mov byte ptr [eax], 0; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x0002170b: mov byte ptr [eax], ah; add byte ptr [ebx - 0x4497ef14], al; add dword ptr [eax], eax; add byte ptr [ebp - 0x6995f80], cl; call dword ptr [eax + 0x6a]; 
0x000217bd: mov byte ptr [eax], ah; add byte ptr [ebx - 0x77], dl; ret; 
0x000847eb: mov byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5f5e04c4], al; ret; 
0x000847d4: mov byte ptr [eax], al; add byte ptr [eax], al; add dword ptr [ebx + 0x5f5e04c4], eax; ret; 
0x0007c607: mov byte ptr [eax], al; add byte ptr [eax], al; add esp, 4; pop ebx; pop esi; ret; 
0x00121a7b: mov byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00121a7b: mov byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00196cd4: mov byte ptr [eax], al; add byte ptr [eax], al; lea eax, [ecx + 4]; ret; 
0x00196144: mov byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi - 0xc]; pop edi; ret; 
0x000dd841: mov byte ptr [eax], al; add byte ptr [eax], al; mov ecx, ebp; cmove esi, eax; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x0002b5e8: mov byte ptr [eax], al; add byte ptr [eax], al; push eax; push dword ptr [esp + 0x50]; push dword ptr [esp + 0x50]; call esi; 
0x00075d9a: mov byte ptr [eax], al; add byte ptr [eax], al; push esi; call dword ptr [eax + 0x34]; 
0x00071848: mov byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x000b3180: mov byte ptr [eax], bh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b29a3: mov byte ptr [eax], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x0012b4b6: mov byte ptr [eax], cl; add byte ptr [eax - 0x73], dl; adc dword ptr [eax + 0x50000048], -0x73; adc dword ptr [eax], 0x67; bnd call dword ptr [eax - 0x73]; 
0x000b27a5: mov byte ptr [eax], cl; mov eax, edi; pop ebx; pop edi; ret; 
0x00059429: mov byte ptr [eax], cl; pop ebx; pop esi; pop edi; ret; 
0x000b3195: mov byte ptr [eax], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afd50: mov byte ptr [eax], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00092677: mov byte ptr [ebp - 0x67b9f7a], cl; call dword ptr [eax + 0x68]; 
0x000926da: mov byte ptr [ebp - 0x67b9f7a], cl; call dword ptr [eax - 0x73]; 
0x00168ad0: mov byte ptr [ebp - 0x72b00000], ah; add dword ptr [esi + 0x62], -7; call dword ptr [eax + 0x6a]; 
0x000c8c34: mov byte ptr [ebp - 0xa], ch; dec dword ptr [ebx - 0x364b43]; dec dword ptr [ebp - 0x6673779]; call dword ptr [eax - 0x73]; 
0x0008d9db: mov byte ptr [ebx + 0x4fd], dl; xor eax, eax; pop ebx; ret; 
0x00147ee9: mov byte ptr [ebx + 0x5e5b1cc4], 0x5f; pop ebp; ret; 
0x001516b9: mov byte ptr [ebx + 0x8258], 0; mov dword ptr [ebx + 0x8248], 0; call esi; 
0x000b4369: mov byte ptr [ebx + 0xf6640ea], 0xd7; rol byte ptr [ebp + 0x663b75c0], 0xf; xlatb; ret 0xc085; 
0x00140911: mov byte ptr [ebx + 2], 0; pop ebx; pop esi; pop edi; ret; 
0x0006b6a4: mov byte ptr [ebx + ebx], ah; add dh, dh; ret 0xf40; 
0x00021fbe: mov byte ptr [ebx - 0x72fbdb8c], cl; xchg byte ptr [eax + 0x6e], dl; stc; call dword ptr [eax - 0x73]; 
0x0016c0da: mov byte ptr [ebx - 0xf76fb3c], 0x5b; pop esi; ret; 
0x00153750: mov byte ptr [ebx - 0xf76fd12], 0x5e; pop edi; pop ebp; ret; 
0x001192ef: mov byte ptr [ebx], 0; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x00142308: mov byte ptr [ebx], 0; add esp, 8; pop ebx; ret; 
0x000a5d73: mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x000a5d92: mov byte ptr [ecx + 4], dl; pop ebx; ret; 
0x000a5dd4: mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x000b5848: mov byte ptr [ecx + eax], 0; dec ecx; jne 0xb5848; pop esi; ret; 
0x000b4fd0: mov byte ptr [ecx + edx + 3], ah; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x00140650: mov byte ptr [ecx + edx], 0; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00148855: mov byte ptr [ecx], 0x3c; and byte ptr [ebp + esi*8 + 0x3c], dh; or dword ptr [ecx + esi*8 - 0x7c], esi; ror byte ptr [edi], 0x94; ret 0xa3c; 
0x001489dd: mov byte ptr [ecx], 0x3c; and byte ptr [ebp + esi*8 + 0x3c], dh; or dword ptr [ecx + esi*8 - 0x7d], esi; in al, dx; or byte ptr [ebp - 0x6d0c579], cl; call dword ptr [eax + 0x56]; 
0x0009df93: mov byte ptr [ecx], 0x83; ret 0x8401; 
0x000e2259: mov byte ptr [ecx], 0x83; ret 0x8801; 
0x0004e3a7: mov byte ptr [ecx], 0x83; ret 0x8b01; 
0x000286a9: mov byte ptr [ecx], 0x83; ret; 
0x000caa33: mov byte ptr [ecx], 0x83; xlatb; add byte ptr [ecx], bh; ret; 
0x000d1e04: mov byte ptr [ecx], 0x89; ret 0x44f6; 
0x0015333d: mov byte ptr [ecx], 0x89; ret 0xb70f; 
0x0012e965: mov byte ptr [ecx], 0x89; ret; 
0x000496b1: mov byte ptr [ecx], 0xc6; inc esi; jmp dword ptr [eax]; 
0x000e1176: mov byte ptr [ecx], 0xe8; ret; 
0x00127021: mov byte ptr [ecx], 1; ret; 
0x0002853f: mov byte ptr [ecx], 9; ret 0x7439; 
0x000751a0: mov byte ptr [ecx], bl; add esp, 4; pop ebx; pop esi; ret; 
0x000a5d50: mov byte ptr [ecx], dl; pop ebx; ret; 
0x000ad8eb: mov byte ptr [edi + 0x10], cl; lea eax, [edi + 0x11]; pop edi; pop esi; pop ebx; ret; 
0x000ac1db: mov byte ptr [edi + 0x10], cl; pop edi; pop esi; pop ebx; ret; 
0x000ad971: mov byte ptr [edi + 0x14], dl; lea eax, [edi + 0x15]; pop edi; pop esi; pop ebx; ret; 
0x000ac261: mov byte ptr [edi + 0x14], dl; pop edi; pop esi; pop ebx; ret; 
0x000ad9f5: mov byte ptr [edi + 0x18], cl; lea eax, [edi + 0x19]; pop edi; pop esi; pop ebx; ret; 
0x000ac2e5: mov byte ptr [edi + 0x18], cl; pop edi; pop esi; pop ebx; ret; 
0x000ac3e5: mov byte ptr [edi + 0x20], cl; pop edi; pop esi; pop ebx; ret; 
0x000ad759: mov byte ptr [edi + 2], dl; lea eax, [edi + 3]; pop edi; pop esi; pop ebx; ret; 
0x000ac089: mov byte ptr [edi + 2], dl; pop edi; pop esi; pop ebx; ret; 
0x000ad787: mov byte ptr [edi + 4], dl; lea eax, [edi + 5]; pop edi; pop esi; pop ebx; ret; 
0x000ac0a7: mov byte ptr [edi + 4], dl; pop edi; pop esi; pop ebx; ret; 
0x000ad7fb: mov byte ptr [edi + 8], dl; lea eax, [edi + 9]; pop edi; pop esi; pop ebx; ret; 
0x000ac0eb: mov byte ptr [edi + 8], dl; pop edi; pop esi; pop ebx; ret; 
0x00195c3e: mov byte ptr [edi + ecx], 0x85; mov al, byte ptr [ecx]; add byte ptr [eax], al; lea eax, [edi + 0xb]; pop edi; ret; 
0x00038dde: mov byte ptr [edi - 0x7cfffffd], bl; in al, dx; add al, 0x55; push esi; push dword ptr [esp + 0x30]; call edi; 
0x000b53f1: mov byte ptr [edi], ah; mov eax, dword ptr [esp + 0x10]; pop ebx; pop esi; pop edi; ret; 
0x000b57b7: mov byte ptr [edi], ah; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x0017b84e: mov byte ptr [edi], al; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017bd9e: mov byte ptr [edi], al; pop edi; pop ebx; ret; 
0x001847e9: mov byte ptr [edi], al; pop esi; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00189ab9: mov byte ptr [edi], al; pop esi; pop edi; pop ebx; ret; 
0x000ad732: mov byte ptr [edi], dl; lea eax, [edi + 1]; pop edi; pop esi; pop ebx; ret; 
0x000ac062: mov byte ptr [edi], dl; pop edi; pop esi; pop ebx; ret; 
0x000b2901: mov byte ptr [edx + 0x10], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000847e9: mov byte ptr [edx + 0x88], 0; add esp, 4; pop esi; pop edi; ret; 
0x000847d2: mov byte ptr [edx + 0x88], 1; add esp, 4; pop esi; pop edi; ret; 
0x00140485: mov byte ptr [edx + 1], al; mov eax, 2; ret; 
0x000af690: mov byte ptr [edx + 1], bh; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x000a2045: mov byte ptr [edx + 2], 0; pop ebx; pop esi; ret; 
0x000a8169: mov byte ptr [edx + 2], al; lea eax, [edx + 2]; pop edi; ret; 
0x000a82a9: mov byte ptr [edx + 2], al; lea eax, [edx + 2]; ret; 
0x000b256c: mov byte ptr [edx + 2], al; mov eax, edi; pop ebx; pop edi; ret; 
0x000a3d99: mov byte ptr [edx + 2], al; mov eax, edi; pop edi; ret; 
0x000a3eb9: mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x000af6a0: mov byte ptr [edx + 2], bh; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x000a8187: mov byte ptr [edx + 4], al; lea eax, [edx + 4]; pop edi; ret; 
0x000a82c7: mov byte ptr [edx + 4], al; lea eax, [edx + 4]; ret; 
0x000b259a: mov byte ptr [edx + 4], al; mov eax, edi; pop ebx; pop edi; ret; 
0x000a3da7: mov byte ptr [edx + 4], al; mov eax, edi; pop edi; ret; 
0x000a3ed7: mov byte ptr [edx + 4], al; mov eax, edx; ret; 
0x000af6d0: mov byte ptr [edx + 4], bh; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x000a2158: mov byte ptr [edx + 6], 0; mov dword ptr [edx], eax; lea eax, [edx + 6]; pop ebx; pop esi; ret; 
0x000a2088: mov byte ptr [edx + 6], 0; mov dword ptr [edx], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x000a81cb: mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x000a830b: mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000b260e: mov byte ptr [edx + 8], al; mov eax, edi; pop ebx; pop edi; ret; 
0x000a3ddb: mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000a3f1b: mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000b28a4: mov byte ptr [edx + 8], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000af740: mov byte ptr [edx + 8], bh; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x00195145: mov byte ptr [edx + edx*8 + 0xa2840f], 0; add dh, dh; ret 0x7501; 
0x000a1b00: mov byte ptr [edx - 1], 0; mov dword ptr [esi], edx; pop ebx; pop esi; ret; 
0x0017b035: mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00181014: mov byte ptr [edx - 1], al; mov eax, edx; pop ebx; ret; 
0x0017aa05: mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0017eecc: mov byte ptr [edx - 1], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00180eec: mov byte ptr [edx - 1], cl; mov eax, edx; pop ebx; ret; 
0x0018839c: mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x00123887: mov byte ptr [edx], 0; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x14]; cmovne edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x000a2010: mov byte ptr [edx], 0; mov eax, edx; pop ebx; pop esi; ret; 
0x0011f1a5: mov byte ptr [edx], 0; mov eax, esi; add esp, 4; pop ebx; pop esi; ret; 
0x0012cbaf: mov byte ptr [edx], 0x20; pop ebx; pop esi; pop edi; ret; 
0x0002a23a: mov byte ptr [edx], 0x39; test dword ptr [edi], 0x30182; add byte ptr [ebx - 0x7cfbdba4], cl; ret; 
0x0019598d: mov byte ptr [edx], 0x75; dec edi; test dh, 4; jne 0x1959e4; add eax, 0xb; ret; 
0x0012cb62: mov byte ptr [edx], 0xa; pop ebx; pop esi; pop edi; ret; 
0x000cafc4: mov byte ptr [edx], ah; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000a8142: mov byte ptr [edx], al; lea eax, [edx]; pop edi; ret; 
0x000a8282: mov byte ptr [edx], al; lea eax, [edx]; ret; 
0x00181673: mov byte ptr [edx], al; mov eax, dword ptr [esp + 8]; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x0017f673: mov byte ptr [edx], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000b2545: mov byte ptr [edx], al; mov eax, edi; pop ebx; pop edi; ret; 
0x000a3d72: mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x000a3e92: mov byte ptr [edx], al; mov eax, edx; ret; 
0x00188ab3: mov byte ptr [edx], al; pop ebx; ret; 
0x00116339: mov byte ptr [edx], al; push esp; add byte ptr [eax], al; mov eax, edi; call dword ptr gs:[0x10]; 
0x0018152b: mov byte ptr [edx], cl; mov eax, dword ptr [esp + 8]; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x0017f54b: mov byte ptr [edx], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0007bef1: mov byte ptr [edx], cl; pop ebx; pop esi; ret; 
0x001889ab: mov byte ptr [edx], cl; pop ebx; ret; 
0x0015163b: mov byte ptr [edx], dl; add byte ptr [eax], al; call esi; 
0x00152bbb: mov byte ptr [esi + 0x74], 0xd; add byte ptr [ebx - 0x77], dl; ret; 
0x000217bb: mov byte ptr [esi - 0x78], 0x20; add byte ptr [ebx - 0x77], dl; ret; 
0x00082ded: mov byte ptr [esi - 7], bh; call dword ptr [eax - 0x18]; 
0x0008b400: mov byte ptr [esi - 7], bh; call dword ptr [eax - 0x18]; add bh, bh; jmp dword ptr [ebp - 0x39]; 
0x0014e8bf: mov byte ptr [esi - 7], bh; call dword ptr [eax - 0x18]; retf; bnd jmp dword ptr [esi - 0x70]; 
0x001743fd: mov byte ptr [esi - 7], bh; call dword ptr [eax - 0x18]; sub dword ptr [eax - 0x10], esi; jmp dword ptr [esi - 0x70]; 
0x00089566: mov byte ptr [esi], cl; add byte ptr [0x1a0a97], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x114], edx; ret; 
0x00089546: mov byte ptr [esi], cl; add byte ptr [0x1a0ab7], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x11c], edx; ret; 
0x0011632d: mov byte ptr [esp + 0x37], al; mov eax, dword ptr [esp + 0x84]; lea ecx, [eax + 0x5402]; mov eax, edi; call dword ptr gs:[0x10]; 
0x00087259: mov byte ptr [esp + 0x4b], 0; lea ecx, [ecx - 0x72600]; mov esi, 8; mov dword ptr [esp + 8], edx; call dword ptr gs:[0x10]; 
0x00086a3c: mov byte ptr [esp + eax], bh; add byte ptr [eax + 0xaf], bh; call dword ptr gs:[0x10]; 
0x0008313f: mov byte ptr gs:[0x4fe], 0; mov dword ptr gs:[0x7c], edx; ret; 
0x00082897: mov byte ptr gs:[0x4fe], 0; mov dword ptr gs:[0x80], eax; ret; 
0x000828c1: mov byte ptr gs:[0x4fe], al; cmp eax, 1; je 0x828d0; ret; 
0x00083165: mov byte ptr gs:[0x4fe], al; cmp eax, 1; je 0x83178; ret; 
0x000b3194: mov byte ptr ss:[eax], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00127018: mov ch, 0; add byte ptr [eax], al; add byte ptr [ebp - 0x397cfeb6], cl; add dword ptr [ecx], eax; ret; 
0x0015fdcd: mov ch, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x12f63], cl; call dword ptr [eax - 0x18]; 
0x000528d3: mov ch, 0; add byte ptr [eax], al; add byte ptr [ecx], ch; ret; 
0x00052b2e: mov ch, 0; add byte ptr [eax], al; add byte ptr [edi], cl; dec esi; ret 0xec83; 
0x00103c36: mov ch, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00197387: mov ch, 0; add byte ptr [eax], al; lea eax, [edx + 0xf]; ret; 
0x00103c02: mov ch, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0009a45f: mov ch, 0; add byte ptr [eax], al; sub esp, 8; push esi; push dword ptr [ebx + 0x24]; call eax; 
0x00067d85: mov ch, 0x2c; idiv edi; inc dword ptr [ebx - 0x6a76f314]; xchg esp, eax; idiv edi; call dword ptr [esi - 0x18]; 
0x00067041: mov ch, 0x3c; idiv edi; dec dword ptr [ecx + 0x408d8bc2]; idiv edi; dec dword ptr [ebx - 0x8c77b]; call dword ptr [esi - 0x18]; 
0x000677e7: mov ch, 0x40; idiv edi; call dword ptr [eax - 0x18]; 
0x000677f3: mov ch, 0x48; idiv edi; inc dword ptr [ebx - 0x47cef3c]; or cl, byte ptr [edi]; xchg esp, eax; ret; 
0x0006c38d: mov ch, 0x54; idiv edi; call dword ptr [esi - 1]; 
0x0012eed8: mov ch, 0x57; stc; call dword ptr [eax - 0x75]; 
0x00132285: mov ch, 0x58; stc; call dword ptr [eax - 0x18]; 
0x0006cafe: mov ch, 0x74; idiv edi; dec dword ptr [ebx - 0x89763]; call dword ptr [edx - 0x77]; 
0x00066a07: mov ch, 0x7c; idiv edi; dec dword ptr [ebx + 0x5f8b1447]; sbb byte ptr [ecx], ch; ret; 
0x00159817: mov ch, 0x80; cmc; bnd call dword ptr [esi - 0x73]; 
0x00066d0f: mov ch, 0x88; idiv edi; call dword ptr [edx - 0x77]; 
0x000670f8: mov ch, 0x94; idiv edi; dec dword ptr [edi]; xchg ebp, eax; ret 0x9522; 
0x00051207: mov ch, 0xe7; std; dec dword ptr [ebx - 0x365343]; dec dword ptr [ebp - 0x6894f79]; call dword ptr [eax - 0x73]; 
0x0009b65d: mov ch, 0xe8; push esi; inc ecx; jle 0x9b674; cmovne eax, edx; ret; 
0x001a1356: mov ch, 0xfa; jmp dword ptr [esi - 0x70]; 
0x000650fb: mov ch, 0xff; call dword ptr [eax - 0x75]; 
0x000c6682: mov ch, 4; add byte ptr [eax], al; add byte ptr [ebx - 0x364b63], cl; dec dword ptr [ecx - 0x361f73]; call dword ptr [eax + 0x6a]; 
0x0004eb62: mov ch, 4; add byte ptr [eax], al; add byte ptr [ebx - 0x365363], cl; dec dword ptr [ecx - 0x361f73]; call dword ptr [eax + 0x6a]; 
0x001924ed: mov ch, 8; add byte ptr [eax], al; pop ebx; ret; 
0x000ad297: mov ch, 9; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0013dcee: mov ch, ah; add al, 0; add byte ptr [ecx], bh; ret; 
0x0003851f: mov ch, byte ptr [eax]; add byte ptr [eax], al; ret; 
0x00071808: mov ch, ch; cli; jmp dword ptr [esi - 0x70]; 
0x00051032: mov ch, cl; std; dec dword ptr [ebx - 0x365343]; dec dword ptr [ebp - 0x6894f79]; call dword ptr [eax - 0x73]; 
0x000c9e90: mov ch, dh; and ch, 0xf; je 0xc9eb0; add eax, 2; ret; 
0x0003866b: mov cl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0003860a: mov cl, 0; add byte ptr [eax], al; mov esi, 8; mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x00082ca0: mov cl, 0x11; setne al; movzx eax, al; pop ebx; ret; 
0x0008f48e: mov cl, 0x13; jne 0x8f4a0; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0008e3a7: mov cl, 0x33; jne 0x8e3b0; xor eax, eax; pop ebx; pop esi; ret; 
0x000886de: mov cl, 0x54; and al, 4; ret; 
0x0008f4d1: mov cl, 0xa; jne 0x8f4c6; xor eax, eax; pop ebx; ret; 
0x0008f51f: mov cl, 0xa; jne 0x8f530; xor eax, eax; pop ebx; ret; 
0x0008e091: mov cl, 0xa; mov eax, 0x10; cmove eax, ecx; ret; 
0x00120e0b: mov cl, 0xeb; lock dec dword ptr [ebp - 0x65d9f7d]; call dword ptr [eax - 0x73]; 
0x001654bf: mov cl, 0xec; call dword ptr [eax - 0x73]; 
0x0015fc42: mov cl, 0xf9; call dword ptr [eax - 0x73]; 
0x00162906: mov cl, 0xf9; call dword ptr [ebx - 1]; 
0x000fa4c6: mov cl, 0xfb; inc dword ptr [ebx - 0x3b7cfefa]; adc byte ptr [ecx], al; ret; 
0x000654b6: mov cl, 0xff; dec dword ptr [ebx - 0x4f34b]; dec dword ptr [ebp - 0x687877a]; call dword ptr [eax + 0x68]; 
0x00138896: mov cl, 0xff; jmp dword ptr [esi - 0x70]; 
0x0007385d: mov cl, bh; cli; jmp dword ptr [esi - 0x70]; 
0x0007c606: mov cl, byte ptr [eax - 0x7d000000]; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000b9344: mov cl, byte ptr [ebx]; add byte ptr [ecx + 0x170cb9c7], al; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x000b6265: mov cl, byte ptr [ebx]; add byte ptr [edx + 0x59], bl; push ebx; push dword ptr [edi]; call esi; 
0x000c9e79: mov cl, dl; and cl, 0xf; je 0xc9ea0; ret; 
0x000eeb59: mov cs, eax; add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0x14; add eax, dword ptr [ecx]; ret 0xb60f; 
0x0002e556: mov cs, esp; adc byte ptr [eax], al; add byte ptr [edi], cl; dec ebp; ret 0xec83; 
0x00078606: mov cs, word ptr [ebp - 0x75000000]; inc eax; or al, 0x83; in al, dx; add al, 0x29; ret 0xfac1; 
0x000c3df5: mov cs, word ptr [ebx - 0x3f7cfb90]; add al, 0x83; ret; 
0x000de826: mov cs, word ptr [ecx - 0x76f3dbb4]; inc esp; and al, 8; call edx; 
0x000949be: mov cs, word ptr [ecx]; inc ecx; stc; jmp dword ptr [ebp - 0x5f]; 
0x000afd70: mov cx, word ptr [esi]; mov word ptr [eax], cx; mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00161c33: mov dh, 0; add byte ptr [eax], al; add al, ch; ret; 
0x00174353: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 0x16], bh; pop ebx; ret; 
0x0008bc93: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 0x16], bh; ret; 
0x0012c463: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 0x29], dl; ret 0x838d; 
0x00122dfb: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 0x6a], bh; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00122f7b: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 0x6b], bh; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00088a7b: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 0xe0], bh; call dword ptr gs:[0x10]; 
0x00191deb: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 1], bh; ja 0x191df9; neg eax; ret; 
0x0009a59b: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x00087dab: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 3], bh; add esp, 0xc; ret; 
0x0011decb: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebp - 0x74f38b40], al; push eax; add al, 0xf6; ret 0xf01; 
0x00095cab: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebp - 0x77], dl; ret 0x5657; 
0x0019c083: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x3968245c], cl; ret; 
0x00057553: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x48904e8], al; and al, 0xf6; ret 0xf20; 
0x000cf40b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5a8d0cec], al; add dword ptr [ecx - 0xff6b], ecx; call dword ptr [ebx - 0x18]; 
0x001979ab: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5f0c2444], cl; ret; 
0x001217eb: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x13369], cl; jmp dword ptr [ebp - 0x75]; 
0x0012679b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x1336b], cl; jmp dword ptr [ebp - 0x75]; 
0x0010e8e3: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x13375], cl; jmp dword ptr [ebp - 0x5f]; 
0x000735bb: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x1337a], cl; jmp dword ptr [ebp - 0x75]; 
0x0002dae3: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x1337d], cl; jmp dword ptr [ebp - 0x75]; 
0x000d74bb: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x1337e], cl; jmp dword ptr [ebp - 0x75]; 
0x000376db: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x1337f], cl; jmp dword ptr [ebp - 0x75]; 
0x0012322b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x75]; 
0x000c7b6b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x0004fd53: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x36277b], al; call dword ptr [eax]; 
0x001199cb: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x0005a973: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x59b7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000feb6b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x6e34b], cl; dec dword ptr [ebp - 0x661a37a]; call dword ptr [eax - 0x73]; 
0x001391e3: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x7a72f714], al; pop ebx; sub bh, cl; call dword ptr [eax + 0x53]; 
0x00168fe3: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x7c72f314], al; pop di; stc; call dword ptr [eax - 0x18]; 
0x000f1eb3: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x7cf4dcf6], cl; ret 0x8304; 
0x000f17cb: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x7cf7f6f6], cl; rol byte ptr [ebx + eax*4], 0xc2; add al, 0x39; ret; 
0x001419c3: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0xbb7b], cl; dec dword ptr [ebx - 0xa363]; dec dword ptr [ebp + 0x48d4004]; ret; 
0x000677bb: mov dh, 0; add byte ptr [eax], al; add byte ptr [ecx + 0x6785c6d3], cl; idiv edi; jmp dword ptr [eax]; 
0x00094fa3: mov dh, 0; add byte ptr [eax], al; add byte ptr [ecx - 0x76f3db94], cl; ret; 
0x000afcbb: mov dh, 0; add byte ptr [eax], al; add byte ptr [edi], cl; mov esp, 0x83ce01d2; ret 0x2910; 
0x0007468b: mov dh, 0; add byte ptr [eax], al; add dh, dh; ret 0x7420; 
0x0019774b: mov dh, 0; add byte ptr [eax], al; add dh, dh; ret 0xf10; 
0x00196c76: mov dh, 0; add byte ptr [eax], al; mov eax, ecx; ret; 
0x0007fa42: mov dh, 0; add esp, 4; pop ebx; pop esi; ret; 
0x0017f671: mov dh, 0; mov byte ptr [edx], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00188ab1: mov dh, 0; mov byte ptr [edx], al; pop ebx; ret; 
0x001922e3: mov dh, 0; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x0007da6f: mov dh, 0; pop ebx; pop esi; pop edi; ret; 
0x000e0cb9: mov dh, 0x10; pop ebx; test dl, dl; mov edx, 0; cmove eax, edx; ret; 
0x00034eb6: mov dh, 0x11; test dl, dl; jne 0x34e99; ret; 
0x001922e6: mov dh, 0x12; sub eax, edx; ret; 
0x0015c80a: mov dh, 0x14; adc dword ptr [eax - 0x27c600b0], ecx; jne 0x15c800; pop ebx; ret; 
0x000eeb5f: mov dh, 0x14; add eax, dword ptr [ecx]; ret 0xb60f; 
0x000ebf3d: mov dh, 0x14; ret 0xc083; 
0x00057b96: mov dh, 0x18; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00146e5a: mov dh, 0x18; test ebx, ebx; jne 0x146e28; mov eax, 1; pop ebx; ret; 
0x000f5b01: mov dh, 0x1c; add dword ptr [ebp + 0xf01186c], ecx; mov dh, 4; sub dword ptr [ecx], edi; ret 0xd075; 
0x00162e0a: mov dh, 0x20; hlt; bnd call dword ptr [ebp - 0x73]; 
0x0002d1d7: mov dh, 0x2c; stc; call dword ptr [eax - 0x18]; 
0x000a16b9: mov dh, 0x3c; or byte ptr [ebp - 0x7c588a01], al; ret 0xeb01; 
0x00080277: mov dh, 0x40; inc dword ptr [ebx - 0x3b7c10dd]; add al, 0x5b; pop esi; ret; 
0x0017efed: mov dh, 0x40; jmp dword ptr [esi - 0x77]; 
0x000e5a8a: mov dh, 0x42; add dword ptr [ebx - 0x3f7bfe3e], eax; jne 0xe5a61; xor eax, eax; ret; 
0x0018c8a2: mov dh, 0x42; pop es; sub eax, ecx; pop ebp; ret; 
0x0018b0f5: mov dh, 0x42; pop es; sub eax, ecx; ret; 
0x0018c97e: mov dh, 0x42; push es; sub eax, ecx; pop ebp; ret; 
0x0018b165: mov dh, 0x42; push es; sub eax, ecx; ret; 
0x000f6038: mov dh, 0x43; add al, 0x89; ret 0xe283; 
0x00068e40: mov dh, 0x44; or al, ah; mov ecx, dword ptr [edx + eax*4 - 0x737e0]; add ecx, ebp; jmp ecx; 
0x00069140: mov dh, 0x44; or al, ah; mov ecx, dword ptr [edx + eax*4 - 0x73860]; add ecx, ebp; jmp ecx; 
0x000693d9: mov dh, 0x44; or al, ah; mov ecx, dword ptr [edx + eax*4 - 0x738e0]; add ecx, ebp; jmp ecx; 
0x00069339: mov dh, 0x44; or al, ah; mov ecx, dword ptr [edx + eax*4 - 0x739e0]; add ecx, ebp; jmp ecx; 
0x00068d89: mov dh, 0x44; or al, ah; mov ecx, dword ptr [edx + eax*4]; add ecx, ebp; jmp ecx; 
0x0006e789: mov dh, 0x44; pavgb mm1, qword ptr [ebx - 0x768fdb8c]; fiadd dword ptr [ebx]; adc al, 0x86; jmp edx; 
0x0007b209: mov dh, 0x45; aam 0x89; ret 0xf889; 
0x000f7aea: mov dh, 0x45; sbb al, 0x89; ret 0xeac0; 
0x000f63b6: mov dh, 0x46; add al, 0x89; ret 0xe283; 
0x0015717c: mov dh, 0x46; add dword ptr [ebp + 0x3c89017e], ecx; and al, 0x84; ror byte ptr [edi], 0x95; ret 0x3a3c; 
0x00195172: mov dh, 0x47; test dword ptr [edi], 0x29f756b6; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x0018c95a: mov dh, 0x48; add eax, 0x542b60f; sub eax, ecx; pop ebp; ret; 
0x0018b151: mov dh, 0x48; add eax, 0x542b60f; sub eax, ecx; ret; 
0x0017eec9: mov dh, 0x48; dec dword ptr [eax + 0x448bff4a]; and al, 8; pop ebx; ret; 
0x00180ee9: mov dh, 0x48; dec dword ptr [eax - 0x2f7600b6]; pop ebx; ret; 
0x0018c89e: mov dh, 0x48; pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; pop ebp; ret; 
0x0018b0f1: mov dh, 0x48; pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x0018c97a: mov dh, 0x48; push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; pop ebp; ret; 
0x0018b161: mov dh, 0x48; push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x0010148a: mov dh, 0x49; stc; call dword ptr [eax - 0x18]; 
0x000fd871: mov dh, 0x4a; or cl, ch; ret 0xfff8; 
0x00053642: mov dh, 0x50; or al, 0x89; sal esi, 1; ret 0xf40; 
0x00052796: mov dh, 0x50; or al, 0xf6; ret 0xf40; 
0x000fbc51: mov dh, 0x50; or dword ptr [ebx + 0x5e], ebx; and edx, 0xf; mov eax, edx; ret; 
0x000f234a: mov dh, 0x52; sbb al, 0xf6; ret 0xf08; 
0x0009a4e2: mov dh, 0x53; sub dh, dh; ret 0x7502; 
0x000e6fcb: mov dh, 0x55; add byte ptr [ecx], bh; ret 0x840f; 
0x00057231: mov dh, 0x55; or al, 0xf6; ret 0xf01; 
0x000573bb: mov dh, 0x55; or al, 0xf6; ret 0xf40; 
0x001951e5: mov dh, 0x56; imul byte ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x00195176: mov dh, 0x56; imul dword ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x000f6dbe: mov dh, 0x56; sbb byte ptr [ebx - 0x4976c74], cl; clc; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x001951a5: mov dh, 0x56; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x0006b69e: mov dh, 0x57; or al, 0x84; ror byte ptr [edi], cl; mov byte ptr [ebx + ebx], ah; add dh, dh; ret 0xf40; 
0x0006b678: mov dh, 0x57; or al, 0xf6; ret 0xf08; 
0x00140749: mov dh, 0x5a; add dword ptr [ebp - 0x76fde7bc], ecx; ret; 
0x00055395: mov dh, 0x5f; or al, 0xf6; ret; 
0x00152116: mov dh, 0x5f; pop ebp; ret; 
0x001626b2: mov dh, 0x64; sub cl, bh; call dword ptr [edi + 0x52]; 
0x00140821: mov dh, 0x6a; add dword ptr [ebp - 0x76fdd7bc], ecx; ret; 
0x000d14e5: mov dh, 0x83; ret 0x8901; 
0x00034a94: mov dh, 0x83; ret 0x8d01; 
0x0003ec81: mov dh, 0x83; ret; 
0x0002cf3c: mov dh, 0x84; push ds; aas; test bh, dh; call dword ptr [ebp + 3]; 
0x000c0e86: mov dh, 0xa7; clc; call dword ptr [ebx - 1]; 
0x00166dc9: mov dh, 0xc0; add esp, 0x1c; ret; 
0x0010c117: mov dh, 0xc0; add esp, 0x4c; ret; 
0x0015bd09: mov dh, 0xc0; add esp, 4; pop ebx; pop esi; ret; 
0x0011b00f: mov dh, 0xc0; add esp, 8; pop ebx; ret; 
0x00133a94: mov dh, 0xc0; and ecx, 0xc0000000; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x0008fe9a: mov dh, 0xc0; lea eax, [eax + eax + 2]; ret; 
0x000dff35: mov dh, 0xc0; lea eax, [eax + eax - 1]; ret; 
0x00037309: mov dh, 0xc0; mov dword ptr [ebx + 0x18], eax; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0008313a: mov dh, 0xc0; mov dword ptr [edx + 8], eax; mov byte ptr gs:[0x4fe], 0; mov dword ptr gs:[0x7c], edx; ret; 
0x000fb3dd: mov dh, 0xc0; neg eax; ret; 
0x0007e6f8: mov dh, 0xc0; pop ebx; neg eax; ret; 
0x0015bc83: mov dh, 0xc0; pop ebx; pop esi; ret; 
0x00082ca6: mov dh, 0xc0; pop ebx; ret; 
0x00038233: mov dh, 0xc0; ret; 
0x0010c327: mov dh, 0xc0; sbb ecx, edx; sbb eax, 0; pop ebx; pop esi; ret; 
0x0008fd66: mov dh, 0xc0; sub eax, 2; add esp, 0xc; ret; 
0x0002485b: mov dh, 0xc2; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x0012097d: mov dh, 0xc8; shrd eax, edx, 0xc; xor al, al; or eax, ecx; ret; 
0x0003cc71: mov dh, 0xc; adc edi, dword ptr [eax]; dec esp; adc eax, 0x83167500; ret 0x3901; 
0x000f519e: mov dh, 0xc; add ecx, dword ptr [ebp + 0xf01084c]; mov dh, 4; or edi, dword ptr [ecx]; ret 0xd375; 
0x000f6799: mov dh, 0xc; js 0xc0926dad; add dword ptr [ecx], edi; ret 0xda75; 
0x00191dca: mov dh, 0xc; push cs; sub eax, ecx; pop esi; pop edi; ret; 
0x00082892: mov dh, 0xd2; mov dword ptr [eax + 0x24], edx; mov byte ptr gs:[0x4fe], 0; mov dword ptr gs:[0x80], eax; ret; 
0x000c9ff0: mov dh, 0xdb; lea ebx, [ebx + ebx - 1]; mov eax, ebx; pop ebx; pop esi; ret; 
0x0016d088: mov dh, 0xe9; stc; call dword ptr [esi + 0x53]; 
0x00164fac: mov dh, 0xec; inc dword ptr [ebx - 0x72aff33c]; sbb dword ptr [eax + 0x5b], -7; call dword ptr [eax + 0x6a]; 
0x00135497: mov dh, 0xf0; call dword ptr [eax - 0x18]; 
0x001622aa: mov dh, 0xf3; call dword ptr [eax - 0x48]; 
0x001626bc: mov dh, 0xf3; jmp ptr [edx]; push edx; push 4; push ebx; call dword ptr [eax]; 
0x0009b3a7: mov dh, 0xf6; push esi; add dword ptr [ecx + eax - 0x72fc0000], 0xe7868092; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000a266a: mov dh, 0xfb; pop ebx; pop esi; sub eax, edi; pop edi; ret; 
0x00138369: mov dh, 0xff; jmp dword ptr [esi - 0x70]; 
0x0005efa5: mov dh, 0xff; jmp ptr [ebx]; test dword ptr [eax - 0x7c000005], edi; in al, dx; or al, 0x89; ret; 
0x000a5c16: mov dh, 2; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0018ef64: mov dh, 2; mov ecx, dword ptr [ebx + ecx*4 - 0x86b80]; mov eax, dword ptr [ebx + eax*4 - 0x86b80]; sub eax, ecx; pop ebx; ret; 
0x00081003: mov dh, 2; pop ebx; pop esi; ret; 
0x001732fa: mov dh, 2; pop esi; pop edi; ret; 
0x0007bf27: mov dh, 2; ret; 
0x0018c8bd: mov dh, 2; sub eax, ecx; pop ebp; ret; 
0x0018b104: mov dh, 2; sub eax, ecx; ret; 
0x001267cc: mov dh, 4; add byte ptr [ecx + 0x103831c5], al; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x000f51a6: mov dh, 4; or edi, dword ptr [ecx]; ret 0xd375; 
0x000f5b09: mov dh, 4; sub dword ptr [ecx], edi; ret 0xd075; 
0x00189ab7: mov dh, 6; mov byte ptr [edi], al; pop esi; pop edi; pop ebx; ret; 
0x000b4997: mov dh, 8; cmp cl, byte ptr [edx]; jne 0xb49a1; xor eax, eax; pop ebx; ret; 
0x0017f549: mov dh, 8; mov byte ptr [edx], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001889a9: mov dh, 8; mov byte ptr [edx], cl; pop ebx; ret; 
0x0018c8ba: mov dh, 8; movzx eax, byte ptr [edx]; sub eax, ecx; pop ebp; ret; 
0x0018b101: mov dh, 8; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x00105339: mov dh, 8; test cl, cl; jne 0x10531e; xor eax, eax; pop ebx; ret; 
0x00107ab9: mov dh, 8; test cl, cl; jne 0x107a9e; xor eax, eax; pop ebx; ret; 
0x000e0c99: mov dh, 8; test cl, cl; jne 0xe0c7e; xor eax, eax; pop ebx; ret; 
0x000e3359: mov dh, 8; test cl, cl; jne 0xe333e; xor eax, eax; pop ebx; ret; 
0x000f8389: mov dh, 8; test cl, cl; jne 0xf836e; xor eax, eax; pop ebx; ret; 
0x000f8f69: mov dh, 8; test cl, cl; jne 0xf8f4e; xor eax, eax; pop ebx; ret; 
0x000b6f6a: mov dh, bh; dec dword ptr [ebx - 0x72e3dba4]; adc esp, -0x6a; stc; call dword ptr [eax - 0x73]; 
0x000b6faa: mov dh, bh; jmp dword ptr [esi - 0x70]; 
0x000b31b9: mov dh, byte ptr [esi + 2]; mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b3193: mov dh, byte ptr [esi]; mov byte ptr [eax], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00137851: mov dh, ch; jmp dword ptr [ebp - 0x75]; 
0x00092f75: mov dh, ch; or eax, 0x70870500; sbb dword ptr [eax], eax; mov dword ptr [eax + 0x3b04], 0; ret; 
0x000388da: mov dl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012543a: mov dl, 0; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x000447ac: mov dl, 0x30; stc; call dword ptr [eax - 0x18]; 
0x00174a8a: mov dl, 0x34; clc; jmp dword ptr [esi - 0x70]; 
0x000da094: mov dl, 0x45; stc; call dword ptr [eax + 0x53]; 
0x000dafd4: mov dl, 0x45; stc; call dword ptr [eax - 0x18]; 
0x00124284: mov dl, 0x55; stc; dec dword ptr [ebp - 0x6aa3f53]; call dword ptr [eax - 0x18]; 
0x0012b594: mov dl, 0x56; stc; call dword ptr [eax - 0x18]; 
0x0013a35b: mov dl, 0x5b; stc; call dword ptr [eax + 0x6a]; 
0x00158788: mov dl, 0x83; in al, dx; or byte ptr [ebp - 0xc48df79], cl; call dword ptr [eax - 0x73]; 
0x00166ff0: mov dl, 0xf0; inc dword ptr [ebx - 0x77cef3c]; add dword ptr [edi], ecx; xchg esp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x0011c8b8: mov dl, 0xf3; inc dword ptr [ebx - 0x2776d73c]; pop ebx; ret; 
0x000447b3: mov dl, 0xfe; dec dword ptr [ebx - 0x72dbdb84]; xchg dword ptr [esi + esi*2 - 7], ebx; call dword ptr [eax - 0x73]; 
0x00065438: mov dl, 0xff; dec dword ptr [ebx - 0x5277b]; call dword ptr [ebx + 0x53]; 
0x00087f88: mov dl, 0xff; inc dword ptr [ebx + 0x448b10c4]; and al, 0xc; add esp, 0x18; pop ebx; ret; 
0x0010ff48: mov dl, 0xff; jmp dword ptr [ebp - 0x75]; 
0x000abe6a: mov dl, 6; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000abd6a: mov dl, 7; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000ac060: mov dl, byte ptr [esi]; mov byte ptr [edi], dl; pop edi; pop esi; pop ebx; ret; 
0x00148696: mov dl, dh; jmp dword ptr [ebp - 0x5f]; 
0x000ffea6: mov ds, word ptr [eax - 0x760006b7]; ret; 
0x0013901a: mov ds, word ptr [edx - 7]; call dword ptr [eax + 0x53]; 
0x000ad4a9: mov dword ptr [0x5f000007], eax; pop esi; pop ebx; ret; 
0x00022f89: mov dword ptr [0x6b000001], eax; ret 0x8b3c; 
0x00082830: mov dword ptr [0x7c], eax; ret; 
0x00083148: mov dword ptr [0x7c], edx; ret; 
0x000827f9: mov dword ptr [0x80], eax; ret; 
0x000828b8: mov dword ptr [0x80], edx; mov eax, dword ptr [eax + 0x24]; mov byte ptr gs:[0x4fe], al; cmp eax, 1; je 0x828d0; ret; 
0x0011e652: mov dword ptr [0x81000537], eax; ret; 
0x0009b3dd: mov dword ptr [0x81f6ffe8], eax; add dword ptr [eax], 0; add byte ptr [edi + ecx], al; inc ebp; ret 0x66c3; 
0x00116d8d: mov dword ptr [0x83000000], eax; les ebx, ptr [eax]; mov eax, ebx; pop ebx; ret; 
0x0016f589: mov dword ptr [0x83000000], eax; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0016627f: mov dword ptr [0x83000000], eax; les edx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000a61d9: mov dword ptr [0x85fffff8], eax; ror byte ptr [edi], 0x85; dec ebx; idiv bh; jmp dword ptr [esi + 0xf]; 
0x001399a9: mov dword ptr [0x89fffff7], eax; ret; 
0x00119e09: mov dword ptr [0x89fffffd], eax; ret 0x4c8b; 
0x00088f1e: mov dword ptr [0x8bfffffd], eax; je 0x88f49; or al, 0x8d; xchg byte ptr [ecx + eax*4 - 7], dl; call dword ptr [eax - 0x73]; 
0x0014e659: mov dword ptr [0x8dffee13], eax; xchg ebp, eax; cmp al, 0xad; stc; call dword ptr [edx - 0x73]; 
0x0003dff7: mov dword ptr [0x8dfffffe], eax; je 0x3e024; add byte ptr [eax + 0x244cb60f], dl; and al, 0x39; ret; 
0x00158e86: mov dword ptr [0xc0850000], eax; je 0x158e98; add esp, 8; pop ebx; ret; 
0x000ced40: mov dword ptr [0xc2920f00], eax; add edx, 0x16d; mov eax, edx; ret; 
0x00027c1f: mov dword ptr [0xeb000001], eax; mov ecx, dword ptr [ebx - 0x72c7db84]; xchg eax, esp; jo 0x27c27; call dword ptr [eax - 0x73]; 
0x0008fc8d: mov dword ptr [0xec830019], eax; sbb byte ptr [ebp - 0x67d1380], cl; call dword ptr [eax - 0x18]; 
0x000f6033: mov dword ptr [0xf000001], eax; mov dh, 0x43; add al, 0x89; ret 0xe283; 
0x00020155: mov dword ptr [0xfffffff0], eax; nop word ptr [eax + eax]; endbr32; jmp dword ptr [ebx + 0xc]; 
0x00082924: mov dword ptr [eax + 0x104], edx; ret; 
0x00082944: mov dword ptr [eax + 0x108], edx; ret; 
0x00104fee: mov dword ptr [eax + 0x108], edx; xor eax, eax; ret; 
0x0008450c: mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 8], 0x10; xor eax, eax; ret; 
0x0015ba5e: mov dword ptr [eax + 0x10], ebx; mov eax, 1; pop ebx; pop esi; ret; 
0x00074ecf: mov dword ptr [eax + 0x10], ebx; mov eax, ecx; mov dword ptr [edx], ecx; pop ebx; ret; 
0x00094efc: mov dword ptr [eax + 0x10], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x000b33f1: mov dword ptr [eax + 0x10], ecx; mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aff5b: mov dword ptr [eax + 0x10], ecx; mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b3390: mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afefd: mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0007b0f9: mov dword ptr [eax + 0x10], edx; add esp, 8; pop ebx; ret; 
0x00084840: mov dword ptr [eax + 0x10], edx; xor eax, eax; ret; 
0x00082964: mov dword ptr [eax + 0x10c], edx; ret; 
0x00104fd6: mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x00082984: mov dword ptr [eax + 0x110], edx; ret; 
0x00089574: mov dword ptr [eax + 0x114], edx; ret; 
0x00089554: mov dword ptr [eax + 0x11c], edx; ret; 
0x0003bae5: mov dword ptr [eax + 0x14], 5; xor eax, eax; ret; 
0x001669be: mov dword ptr [eax + 0x14], edx; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x00084874: mov dword ptr [eax + 0x14], edx; xor eax, eax; ret; 
0x0007beec: mov dword ptr [eax + 0x14], esi; mov eax, ebx; mov byte ptr [edx], cl; pop ebx; pop esi; ret; 
0x001167de: mov dword ptr [eax + 0x16], edx; ret; 
0x000b34d8: mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b0025: mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0015ba5b: mov dword ptr [eax + 0x18], ecx; mov dword ptr [eax + 0x10], ebx; mov eax, 1; pop ebx; pop esi; ret; 
0x000b34aa: mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b0007: mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00021472: mov dword ptr [eax + 0x1978], edx; pop ebx; pop esi; ret; 
0x000213d2: mov dword ptr [eax + 0x1978], edx; ret; 
0x00080fb8: mov dword ptr [eax + 0x19a0], 0; mov dword ptr [eax + 0x19a4], 0; ret; 
0x00080fc2: mov dword ptr [eax + 0x19a4], 0; ret; 
0x000827eb: mov dword ptr [eax + 0x1c], edx; mov edx, dword ptr gs:[0x7c]; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x80], eax; ret; 
0x0009c6f2: mov dword ptr [eax + 0x1c], esi; pop ebx; pop esi; ret; 
0x00094375: mov dword ptr [eax + 0x1cc], edx; ret; 
0x00094355: mov dword ptr [eax + 0x1d0], edx; ret; 
0x0009462b: mov dword ptr [eax + 0x1ec], 1; ret; 
0x00094405: mov dword ptr [eax + 0x208], edx; ret; 
0x000758d7: mov dword ptr [eax + 0x20], ecx; mov dword ptr [eax], edx; pop ebx; ret; 
0x000758a8: mov dword ptr [eax + 0x20], ecx; ret; 
0x000827f5: mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x80], eax; ret; 
0x00075f50: mov dword ptr [eax + 0x24], 0; pop ebx; pop esi; pop edi; ret; 
0x0007f350: mov dword ptr [eax + 0x24], ecx; mov dword ptr [eax + 0xc], edx; mov dword ptr [eax + 4], edx; ret; 
0x0007f384: mov dword ptr [eax + 0x24], ecx; mov dword ptr [eax + 4], edx; pop ebx; ret; 
0x00082894: mov dword ptr [eax + 0x24], edx; mov byte ptr gs:[0x4fe], 0; mov dword ptr gs:[0x80], eax; ret; 
0x001155c7: mov dword ptr [eax + 0x28], edx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0007f34a: mov dword ptr [eax + 0x2c], edx; mov edx, dword ptr [eax + 0x24]; mov dword ptr [eax + 0x24], ecx; mov dword ptr [eax + 0xc], edx; mov dword ptr [eax + 4], edx; ret; 
0x00092f7e: mov dword ptr [eax + 0x3b04], 0; ret; 
0x00094268: mov dword ptr [eax + 0x3b08], 0; ret; 
0x000946e5: mov dword ptr [eax + 0x3b68], edx; ret; 
0x000946fc: mov dword ptr [eax + 0x3b], ebp; add byte ptr [eax], al; test ecx, ecx; jne 0x94710; ret; 
0x001719bc: mov dword ptr [eax + 0x4c], edx; ret; 
0x001153f4: mov dword ptr [eax + 0x50], ecx; mov dword ptr [eax + 0x54], edx; xor eax, eax; ret; 
0x001153f7: mov dword ptr [eax + 0x54], edx; xor eax, eax; ret; 
0x000de36e: mov dword ptr [eax + 0x70], ebx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x00152b11: mov dword ptr [eax + 0x7c], 0; add esp, 4; pop esi; pop edi; ret; 
0x0007183d: mov dword ptr [eax + 0x94], ecx; mov ecx, dword ptr [eax + 0x58]; mov dword ptr [ecx + 0x88], edx; ret; 
0x0017202d: mov dword ptr [eax + 0x94], edx; add esp, 8; pop ebx; ret; 
0x00084505: mov dword ptr [eax + 0xc], 0; mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 8], 0x10; xor eax, eax; ret; 
0x000911c5: mov dword ptr [eax + 0xc], ecx; ret; 
0x0007f353: mov dword ptr [eax + 0xc], edx; mov dword ptr [eax + 4], edx; ret; 
0x0008282c: mov dword ptr [eax + 0xc], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x0016685e: mov dword ptr [eax + 0xc], edx; mov eax, ecx; pop ebx; ret; 
0x0016681e: mov dword ptr [eax + 0xc], edx; mov eax, ecx; ret; 
0x0009129a: mov dword ptr [eax + 0xc], edx; pop ebx; pop esi; pop edi; ret; 
0x00167044: mov dword ptr [eax + 0xc], edx; ret; 
0x00140964: mov dword ptr [eax + 0xc], edx; xor eax, eax; pop ebx; pop esi; ret; 
0x00084965: mov dword ptr [eax + 0xc], edx; xor eax, eax; pop ebx; ret; 
0x0008464c: mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x0003bb7f: mov dword ptr [eax + 0xe], edx; xor eax, eax; pop ebx; pop esi; ret; 
0x0015318c: mov dword ptr [eax + 0xf8], ecx; mov dword ptr [eax + 0xfc], edx; ret; 
0x000b33ae: mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aff1b: mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00153192: mov dword ptr [eax + 0xfc], edx; ret; 
0x000b322a: mov dword ptr [eax + 3], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afdc7: mov dword ptr [eax + 3], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0014c82f: mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; add esp, 8; pop ebx; ret; 
0x0007ffb4: mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; ret; 
0x0015a31e: mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x000380b7: mov dword ptr [eax + 4], 0; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x000f82d9: mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x0008d6ee: mov dword ptr [eax + 4], 0; xor eax, eax; ret; 
0x0013fb33: mov dword ptr [eax + 4], 0x29; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0015a282: mov dword ptr [eax + 4], 1; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x00058bec: mov dword ptr [eax + 4], 1; xor eax, eax; pop ebx; pop esi; ret; 
0x0015a2ac: mov dword ptr [eax + 4], ecx; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x000c50b9: mov dword ptr [eax + 4], ecx; mov dword ptr [eax], edx; xor eax, eax; pop ebx; pop esi; ret; 
0x0007589d: mov dword ptr [eax + 4], ecx; mov ecx, dword ptr [eax + 8]; mov dword ptr [eax], edx; mov dword ptr [eax + 8], edx; mov dword ptr [eax + 0x20], ecx; ret; 
0x00160567: mov dword ptr [eax + 4], ecx; mov edx, dword ptr [edx + 0x2c]; mov dword ptr [eax + 8], edx; ret; 
0x00160f97: mov dword ptr [eax + 4], ecx; mov edx, dword ptr [edx + 0x34]; mov dword ptr [eax + 8], edx; ret; 
0x0007bf23: mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x0015a25a: mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x000758d1: mov dword ptr [eax + 4], edx; mov dword ptr [eax + 8], ebx; mov dword ptr [eax + 0x20], ecx; mov dword ptr [eax], edx; pop ebx; ret; 
0x000afda9: mov dword ptr [eax + 4], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0007b0f3: mov dword ptr [eax + 4], edx; mov edx, dword ptr [eax + 0xc]; mov dword ptr [eax + 0x10], edx; add esp, 8; pop ebx; ret; 
0x0016703d: mov dword ptr [eax + 4], edx; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0xc], edx; ret; 
0x00082822: mov dword ptr [eax + 4], edx; mov edx, dword ptr gs:[0x7c]; mov dword ptr [eax + 0xc], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x0007f387: mov dword ptr [eax + 4], edx; pop ebx; ret; 
0x0007f356: mov dword ptr [eax + 4], edx; ret; 
0x0010446c: mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x000ccded: mov dword ptr [eax + 4], esi; pop ebx; pop esi; pop edi; ret; 
0x000b32ae: mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afe2b: mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00146df1: mov dword ptr [eax + 8], 0; add esp, 4; pop ebx; pop esi; ret; 
0x0014c836: mov dword ptr [eax + 8], 0; add esp, 8; pop ebx; ret; 
0x000f82d2: mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x0007ffbb: mov dword ptr [eax + 8], 0; ret; 
0x00084513: mov dword ptr [eax + 8], 0x10; xor eax, eax; ret; 
0x000758d4: mov dword ptr [eax + 8], ebx; mov dword ptr [eax + 0x20], ecx; mov dword ptr [eax], edx; pop ebx; ret; 
0x00058be9: mov dword ptr [eax + 8], ecx; mov dword ptr [eax + 4], 1; xor eax, eax; pop ebx; pop esi; ret; 
0x0015a289: mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x000758a5: mov dword ptr [eax + 8], edx; mov dword ptr [eax + 0x20], ecx; ret; 
0x000b3290: mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afe0d: mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b60d0: mov dword ptr [eax + 8], edx; mov eax, esi; pop ebx; pop esi; ret; 
0x001167d5: mov dword ptr [eax + 8], edx; mov edx, 0x100; mov word ptr [eax + 0x16], dx; ret; 
0x000f82bf: mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x0015d856: mov dword ptr [eax + 8], edx; ret; 
0x001161af: mov dword ptr [eax + 8], edx; xor eax, eax; pop ebx; ret; 
0x00089605: mov dword ptr [eax + 8], edx; xor edx, edx; mov eax, edx; ret; 
0x001a08d8: mov dword ptr [eax + ebp*4], edi; test edx, edx; je 0x1a08e9; mov dword ptr [esp + 8], eax; call edx; 
0x000300a5: mov dword ptr [eax + ebx], edx; pop ebx; pop esi; ret; 
0x00162f30: mov dword ptr [eax + edx], ecx; ret; 
0x00167080: mov dword ptr [eax], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0007ffae: mov dword ptr [eax], 0; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; ret; 
0x0008d6e8: mov dword ptr [eax], 0; mov dword ptr [eax + 4], 0; xor eax, eax; ret; 
0x000f82cc: mov dword ptr [eax], 0; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x0017a988: mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x000911b3: mov dword ptr [eax], 0; mov ecx, dword ptr [edx + 0x3ae0]; mov dword ptr [edx + 0x3ae0], eax; mov dword ptr [eax + 0xc], ecx; ret; 
0x0015a267: mov dword ptr [eax], 0; pop ebx; ret; 
0x000380be: mov dword ptr [eax], 0; xor eax, eax; ret; 
0x0015a318: mov dword ptr [eax], 0x10; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x0015a27c: mov dword ptr [eax], 0x10; mov dword ptr [eax + 4], 1; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x0015a254: mov dword ptr [eax], 0x10; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x0015a300: mov dword ptr [eax], 0xa; pop ebx; ret; 
0x0015a2f0: mov dword ptr [eax], 0xb; pop ebx; ret; 
0x0013fb2d: mov dword ptr [eax], 0xc; mov dword ptr [eax + 4], 0x29; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0015a2e8: mov dword ptr [eax], 0xc; pop ebx; ret; 
0x000df305: mov dword ptr [eax], 0xff650000; adc eax, 0x10; ret; 
0x0008e0a8: mov dword ptr [eax], 1; xor eax, eax; ret; 
0x0015a2a6: mov dword ptr [eax], 6; mov dword ptr [eax + 4], ecx; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x0015a293: mov dword ptr [eax], 7; mov dword ptr [eax + 4], edx; pop ebx; ret; 
0x0015a310: mov dword ptr [eax], 8; pop ebx; ret; 
0x0015a2d6: mov dword ptr [eax], 9; mov dword ptr [eax + 4], ecx; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x000d7433: mov dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000c9c13: mov dword ptr [eax], eax; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x00026fca: mov dword ptr [eax], eax; add byte ptr [ebx - 0x72c3db84], cl; xchg esp, edi; jo 0x26fcf; call dword ptr [eax - 0x73]; 
0x00027045: mov dword ptr [eax], eax; add byte ptr [ebx - 0x72c3db84], cl; xchg esp, edi; jo 0x2704a; call dword ptr [eax - 0x73]; 
0x001669b6: mov dword ptr [eax], ebx; lea ecx, [ecx - 0x4e0]; mov dword ptr [eax + 0x14], edx; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x00081ed3: mov dword ptr [eax], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x000afd74: mov dword ptr [eax], ecx; mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b3228: mov dword ptr [eax], ecx; mov dword ptr [eax + 3], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afdc5: mov dword ptr [eax], ecx; mov dword ptr [eax + 3], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00083307: mov dword ptr [eax], ecx; mov dword ptr [edx + 0x924], 0; ret; 
0x00076033: mov dword ptr [eax], ecx; mov eax, dword ptr [edx]; pop ebx; pop esi; pop edi; ret; 
0x00074469: mov dword ptr [eax], ecx; mov eax, dword ptr [edx]; ret; 
0x000b31eb: mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afd95: mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000f772a: mov dword ptr [eax], ecx; mov eax, edx; ret; 
0x00160562: mov dword ptr [eax], ecx; mov ecx, dword ptr [edx + 0x28]; mov dword ptr [eax + 4], ecx; mov edx, dword ptr [edx + 0x2c]; mov dword ptr [eax + 8], edx; ret; 
0x00160f92: mov dword ptr [eax], ecx; mov ecx, dword ptr [edx + 0x30]; mov dword ptr [eax + 4], ecx; mov edx, dword ptr [edx + 0x34]; mov dword ptr [eax + 8], edx; ret; 
0x00035e32: mov dword ptr [eax], ecx; ret; 
0x00088928: mov dword ptr [eax], ecx; xor eax, eax; pop ebx; pop esi; ret; 
0x001161cf: mov dword ptr [eax], ecx; xor eax, eax; pop ebx; ret; 
0x0006010b: mov dword ptr [eax], edi; pop ebx; pop esi; pop edi; ret; 
0x00081ebe: mov dword ptr [eax], edx; add esp, 4; pop ebx; pop esi; ret; 
0x000cf93e: mov dword ptr [eax], edx; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x000ccdeb: mov dword ptr [eax], edx; mov dword ptr [eax + 4], esi; pop ebx; pop esi; pop edi; ret; 
0x000758a3: mov dword ptr [eax], edx; mov dword ptr [eax + 8], edx; mov dword ptr [eax + 0x20], ecx; ret; 
0x0015b1e5: mov dword ptr [eax], edx; mov eax, 1; add esp, 8; pop ebx; ret; 
0x00126c3e: mov dword ptr [eax], edx; mov eax, 1; ret; 
0x000b31a7: mov dword ptr [eax], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afd64: mov dword ptr [eax], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0002f764: mov dword ptr [eax], edx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00120fb6: mov dword ptr [eax], edx; pop ebx; pop esi; pop edi; ret; 
0x000758da: mov dword ptr [eax], edx; pop ebx; ret; 
0x0011a9f8: mov dword ptr [eax], edx; ret; 
0x0003baa4: mov dword ptr [eax], edx; xor eax, eax; add esp, 8; pop ebx; ret; 
0x00076512: mov dword ptr [eax], edx; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x000c50bc: mov dword ptr [eax], edx; xor eax, eax; pop ebx; pop esi; ret; 
0x000842ff: mov dword ptr [eax], edx; xor eax, eax; ret; 
0x00171bea: mov dword ptr [eax], esi; mov eax, edx; pop ebx; pop esi; ret; 
0x0009c449: mov dword ptr [eax], esi; pop ebx; pop esi; pop edi; ret; 
0x00164723: mov dword ptr [ebp + 8], 0; push 0; push edi; call dword ptr [eax + 0x14]; 
0x00164aab: mov dword ptr [ebp + 8], 1; push 0; push esi; call dword ptr [eax + 0x14]; 
0x0003ab12: mov dword ptr [ebp + edi], edx; push dword ptr [ebx + 4]; call eax; 
0x00084f9a: mov dword ptr [ebp + edx*4 + 8], 0; mov edx, 0x7fffffff; call dword ptr gs:[0x10]; 
0x0010858b: mov dword ptr [ebp - 0x1a4], edi; jmp 0x108449; sub esp, 0xc; push dword ptr [ebp - 0x198]; mov eax, dword ptr [ebp - 0x19c]; call dword ptr [eax + 0x10]; 
0x000e176b: mov dword ptr [ebp - 0x1a4], edi; jmp 0xe1629; sub esp, 0xc; push dword ptr [ebp - 0x198]; mov eax, dword ptr [ebp - 0x19c]; call dword ptr [eax + 0x10]; 
0x000e3e1b: mov dword ptr [ebp - 0x1a4], edi; jmp 0xe3cd9; sub esp, 0xc; push dword ptr [ebp - 0x198]; mov eax, dword ptr [ebp - 0x19c]; call dword ptr [eax + 0x10]; 
0x000f8e5b: mov dword ptr [ebp - 0x1a4], edi; jmp 0xf8d19; sub esp, 0xc; push dword ptr [ebp - 0x198]; mov eax, dword ptr [ebp - 0x19c]; call dword ptr [eax + 0x10]; 
0x000f9a2b: mov dword ptr [ebp - 0x1a4], edi; jmp 0xf98e9; sub esp, 0xc; push dword ptr [ebp - 0x198]; mov eax, dword ptr [ebp - 0x19c]; call dword ptr [eax + 0x10]; 
0x00105dfb: mov dword ptr [ebp - 0x1b4], edi; jmp 0x105cb9; sub esp, 0xc; push dword ptr [ebp - 0x1a8]; mov eax, dword ptr [ebp - 0x1ac]; call dword ptr [eax + 0x10]; 
0x0008be3a: mov dword ptr [ebp - 0x30], 1; call 0x82810; mov eax, dword ptr [ebp - 0x3c]; add esp, 0x10; call eax; 
0x0011dc9d: mov dword ptr [ebp - 0x30], edx; call eax; 
0x00130ec6: mov dword ptr [ebp - 0x38], eax; push 0; mov dword ptr [ebp - 0x44], 0; push 0x1000002; call edx; 
0x0002cdbf: mov dword ptr [ebp - 0x40], edx; mov edx, dword ptr [ebx + edi*4 - 0x3a4]; test edx, edx; je 0x2cdcf; call edx; 
0x00130ecb: mov dword ptr [ebp - 0x44], 0; push 0x1000002; call edx; 
0x001308bf: mov dword ptr [ebp - 0x44], eax; push 0; push 0x1000005; call edx; 
0x001309a7: mov dword ptr [ebp - 0x44], eax; push 0; push 0x1000006; call edx; 
0x00130859: mov dword ptr [ebp - 0x44], eax; push dword ptr [ebp - 0xbc]; push 0; call edx; 
0x00130f6a: mov dword ptr [ebp - 0x44], eax; push edi; push dword ptr [ebp - 0xc0]; call edx; 
0x00077091: mov dword ptr [ebp - 0x44], eax; sub eax, edx; push eax; push edx; push edi; call dword ptr [ebx + 0x38]; 
0x00130710: mov dword ptr [ebp - 0x44], edx; call eax; 
0x00130d16: mov dword ptr [ebp - 0x44], edx; push 0; push 0x1000004; call eax; 
0x0013090f: mov dword ptr [ebp - 0x44], edx; push 0; push 0x1000007; call eax; 
0x00130dd7: mov dword ptr [ebp - 0x44], edx; push edi; push ebx; call eax; 
0x00126fd4: mov dword ptr [ebp - 0x4e0], eax; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x001271a4: mov dword ptr [ebp - 0x500], ecx; call dword ptr gs:[0x10]; 
0x0013facc: mov dword ptr [ebp - 0x6581f7a], ecx; call dword ptr [eax - 0x73]; 
0x000edde5: mov dword ptr [ebp - 0x74f08140], 0x148d0845; mov eax, 0xc0833803; add al, 0x39; ret 0xf775; 
0x0006c399: mov dword ptr [ebp - 0x88c], ecx; call dword ptr [ebx + 0x1c]; 
0x0006c50c: mov dword ptr [ebp - 0x88c], edx; call dword ptr [ebx + 0x1c]; 
0x000673b4: mov dword ptr [ebp - 0x8ac], ecx; push ebx; push edi; push dword ptr [ebp - 0x87c]; call edx; 
0x0008245c: mov dword ptr [ebx + 0x10], eax; add esp, 0x18; pop ebx; ret; 
0x0015b199: mov dword ptr [ebx + 0x10], eax; add esp, 4; mov eax, 1; pop ebx; pop esi; ret; 
0x0007f405: mov dword ptr [ebx + 0x10], eax; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x0014dd0a: mov dword ptr [ebx + 0x10], ecx; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0009a626: mov dword ptr [ebx + 0x10], edx; mov dword ptr [ebx + 4], eax; pop ebx; pop esi; pop edi; ret; 
0x0008f58c: mov dword ptr [ebx + 0x124], eax; add esp, 0x18; pop ebx; ret; 
0x0007b115: mov dword ptr [ebx + 0x14], eax; add esp, 8; pop ebx; ret; 
0x0007a39f: mov dword ptr [ebx + 0x14], esi; mov dword ptr [ebx + 0x18], esi; pop ebx; pop esi; pop edi; ret; 
0x0013c0ae: mov dword ptr [ebx + 0x18], eax; add esp, 4; mov eax, ecx; pop ebx; pop esi; ret; 
0x000372e4: mov dword ptr [ebx + 0x18], eax; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0009a2ea: mov dword ptr [ebx + 0x18], ebp; mov dword ptr [ebx + 0x20], esi; mov dword ptr [ebx], eax; push eax; call ecx; 
0x0007a3a2: mov dword ptr [ebx + 0x18], esi; pop ebx; pop esi; pop edi; ret; 
0x0009a2ed: mov dword ptr [ebx + 0x20], esi; mov dword ptr [ebx], eax; push eax; call ecx; 
0x00127304: mov dword ptr [ebx + 0x260], 0; add esp, 8; pop ebx; ret; 
0x00127328: mov dword ptr [ebx + 0x260], 3; add esp, 8; pop ebx; ret; 
0x00127518: mov dword ptr [ebx + 0x260], esi; add esp, 4; pop ebx; pop esi; ret; 
0x00076473: mov dword ptr [ebx + 0x30], esi; add esp, 4; pop ebx; pop esi; ret; 
0x0011b316: mov dword ptr [ebx + 0x4414], eax; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0011b3a8: mov dword ptr [ebx + 0x4414], eax; add esp, 8; pop ebx; ret; 
0x001160a3: mov dword ptr [ebx + 0x50], edx; pop ebx; pop esi; pop edi; ret; 
0x00151855: mov dword ptr [ebx + 0x5188], 0; call esi; 
0x001517ce: mov dword ptr [ebx + 0x61c8], 0; call esi; 
0x00173b93: mov dword ptr [ebx + 0x68], 0xffffffff; add esp, 4; pop ebx; pop esi; ret; 
0x00151747: mov dword ptr [ebx + 0x7208], 0; call esi; 
0x001516c0: mov dword ptr [ebx + 0x8248], 0; call esi; 
0x00151639: mov dword ptr [ebx + 0x9288], 0; call esi; 
0x00158e9d: mov dword ptr [ebx + 0xa340], eax; add esp, 8; pop ebx; ret; 
0x001589d7: mov dword ptr [ebx + 0xc], 0; mov eax, dword ptr [ebx + 0x10]; push 0; push esi; call dword ptr [eax + 0x14]; 
0x00145285: mov dword ptr [ebx + 0xc], 1; add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x00082369: mov dword ptr [ebx + 0xc], eax; add esp, 0x18; pop ebx; ret; 
0x0016e950: mov dword ptr [ebx + 0xc], eax; add esp, 0x28; pop ebx; ret; 
0x000844e3: mov dword ptr [ebx + 0xc], eax; add esp, 4; xor eax, eax; pop ebx; pop edi; ret; 
0x0007a5e9: mov dword ptr [ebx + 0xc], edx; add esp, 4; pop ebx; pop esi; ret; 
0x0012c7fe: mov dword ptr [ebx + 0xc], edx; add esp, 8; pop ebx; ret; 
0x000dd687: mov dword ptr [ebx + 0xc], edx; pop ebx; ret; 
0x0013cc7d: mov dword ptr [ebx + 0xfc0], eax; add esp, 0x18; pop ebx; ret; 
0x0008b3c0: mov dword ptr [ebx + 4], 0; mov esi, edx; call dword ptr gs:[0x10]; 
0x0009a629: mov dword ptr [ebx + 4], eax; pop ebx; pop esi; pop edi; ret; 
0x00103fb1: mov dword ptr [ebx + 4], eax; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x0010422c: mov dword ptr [ebx + 4], eax; xor eax, eax; add esp, 8; pop ebx; ret; 
0x001040f2: mov dword ptr [ebx + 4], eax; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0004c843: mov dword ptr [ebx + 4], edi; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0012c75e: mov dword ptr [ebx + 4], edx; add esp, 8; pop ebx; ret; 
0x00140d39: mov dword ptr [ebx + 4], edx; mov dword ptr [ebx + 8], ecx; pop ebx; pop esi; pop edi; ret 4; 
0x0007b97a: mov dword ptr [ebx + 4], edx; xor edx, edx; mov dword ptr [ebx], eax; mov eax, edx; pop ebx; ret; 
0x0008bf2b: mov dword ptr [ebx + 8], 0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0016e9a3: mov dword ptr [ebx + 8], eax; add esp, 0x28; pop ebx; ret; 
0x0014527d: mov dword ptr [ebx + 8], eax; mov eax, 0x92; mov dword ptr [ebx + 0xc], 1; add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x0007b10f: mov dword ptr [ebx + 8], eax; mov eax, dword ptr [ebx + 0x10]; mov dword ptr [ebx + 0x14], eax; add esp, 8; pop ebx; ret; 
0x00162033: mov dword ptr [ebx + 8], eax; mov eax, dword ptr [ebx]; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x00140d3c: mov dword ptr [ebx + 8], ecx; pop ebx; pop esi; pop edi; ret 4; 
0x0012c7ae: mov dword ptr [ebx + 8], edx; add esp, 8; pop ebx; ret; 
0x000dd681: mov dword ptr [ebx + 8], edx; mov edx, dword ptr [ebx + 0xc]; mov dword ptr [ebx + 0xc], edx; pop ebx; ret; 
0x00093924: mov dword ptr [ebx + eax], ecx; mov eax, 0xffffffff; pop ebx; ret; 
0x0008bed7: mov dword ptr [ebx], 0; call dword ptr gs:[0x10]; 
0x00164265: mov dword ptr [ebx], 0; pop ebx; pop esi; pop edi; ret; 
0x0008be66: mov dword ptr [ebx], 2; mov edx, 0x7fffffff; xor esi, esi; call dword ptr gs:[0x10]; 
0x00071b8f: mov dword ptr [ebx], eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016edac: mov dword ptr [ebx], eax; add esp, 0x28; pop ebx; ret; 
0x0009c970: mov dword ptr [ebx], eax; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x0007b4c7: mov dword ptr [ebx], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x0007b97f: mov dword ptr [ebx], eax; mov eax, edx; pop ebx; ret; 
0x00052089: mov dword ptr [ebx], eax; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x001595fb: mov dword ptr [ebx], eax; push dword ptr [ebx + 8]; push esi; call dword ptr [ebx + 0xc]; 
0x0009a2f0: mov dword ptr [ebx], eax; push eax; call ecx; 
0x00075ef7: mov dword ptr [ebx], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x00166857: mov dword ptr [ebx], ecx; mov ecx, 1; mov dword ptr [eax + 0xc], edx; mov eax, ecx; pop ebx; ret; 
0x000600bd: mov dword ptr [ebx], edi; pop ebx; pop esi; pop edi; ret; 
0x0007925b: mov dword ptr [ebx], edx; add esp, 4; pop ebx; pop esi; ret; 
0x00171f98: mov dword ptr [ebx], edx; add esp, 8; pop ebx; ret; 
0x00059427: mov dword ptr [ebx], edx; mov byte ptr [eax], cl; pop ebx; pop esi; pop edi; ret; 
0x00060109: mov dword ptr [ebx], edx; mov dword ptr [eax], edi; pop ebx; pop esi; pop edi; ret; 
0x0014e891: mov dword ptr [ebx], esi; jne 0x14e840; mov edx, 1; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00091ac2: mov dword ptr [ebx], esi; jne 0x91a60; mov edx, 1; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00090ad9: mov dword ptr [ecx + 0x10], eax; mov dword ptr [edx + 0x3adc], ecx; ret; 
0x00090af9: mov dword ptr [ecx + 0x10], eax; mov dword ptr [esi + 0x10], ecx; pop ebx; pop esi; ret; 
0x00071846: mov dword ptr [ecx + 0x88], edx; ret; 
0x00083355: mov dword ptr [ecx + 0x924], 0; pop ebx; ret; 
0x00149599: mov dword ptr [ecx + 0xa], edx; pop ebx; ret; 
0x000a5db2: mov dword ptr [ecx + 3], edx; pop ebx; ret; 
0x0002c0cb: mov dword ptr [ecx + 4], eax; add esp, 8; pop ebx; ret; 
0x00083304: mov dword ptr [ecx + 4], eax; mov dword ptr [eax], ecx; mov dword ptr [edx + 0x924], 0; ret; 
0x0011a9ca: mov dword ptr [ecx + 4], edx; mov dword ptr [edx], ecx; mov dword ptr [edx + 4], eax; ret; 
0x0003bbd8: mov dword ptr [ecx + 4], edx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000a5da3: mov dword ptr [ecx + 4], edx; pop ebx; ret; 
0x0003aba5: mov dword ptr [ecx + 4], edx; ret 4; 
0x00084736: mov dword ptr [ecx + 4], edx; ret; 
0x000a5df4: mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x00116147: mov dword ptr [ecx + 8], eax; xor eax, eax; pop ebx; ret; 
0x00084680: mov dword ptr [ecx + 8], eax; xor eax, eax; ret; 
0x000a5de5: mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x0009393d: mov dword ptr [ecx + eax], 0x16; mov eax, 0xffffffff; pop ebx; ret; 
0x000380d4: mov dword ptr [ecx + eax], 0x16; mov eax, 0xffffffff; ret; 
0x0010fba5: mov dword ptr [ecx + eax], 0x16; mov eax, 1; ret; 
0x0011711d: mov dword ptr [ecx + eax], 0xc; mov eax, 0xffffffff; pop ebx; ret; 
0x000d8835: mov dword ptr [ecx + eax], 2; xor eax, eax; add esp, 0xc; ret; 
0x0002210d: mov dword ptr [ecx + eax], 9; mov eax, 0xffffffff; add esp, 0xc; ret; 
0x00079445: mov dword ptr [ecx + eax], 9; mov eax, 0xffffffff; ret; 
0x0005200c: mov dword ptr [ecx + edx*4], eax; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0017807f: mov dword ptr [ecx + edx], eax; add esp, 4; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x00150c15: mov dword ptr [ecx + edx], eax; add esp, 4; pop ebx; pop esi; ret; 
0x00058a9f: mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; pop ebx; pop esi; pop edi; ret; 
0x00093327: mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x000379af: mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; pop ebx; ret; 
0x000216ee: mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; ret; 
0x00151d9e: mov dword ptr [ecx - 7], esp; call dword ptr [eax + 0x53]; 
0x0008de5c: mov dword ptr [ecx], 0x74000000; aad 0x89; ret 0xe083; 
0x000b57b5: mov dword ptr [ecx], 0xf8892788; pop ebx; pop esi; pop edi; ret; 
0x0007904c: mov dword ptr [ecx], eax; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00079bca: mov dword ptr [ecx], eax; add esp, 8; xor eax, eax; pop ebx; ret; 
0x00117106: mov dword ptr [ecx], eax; cmp eax, ebx; jb 0x117110; xor eax, eax; pop ebx; ret; 
0x0008d9d9: mov dword ptr [ecx], eax; mov byte ptr [ebx + 0x4fd], dl; xor eax, eax; pop ebx; ret; 
0x0011f5a5: mov dword ptr [ecx], eax; mov eax, 1; ret; 
0x000843f4: mov dword ptr [ecx], eax; mov eax, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0003aba1: mov dword ptr [ecx], eax; mov eax, ecx; mov dword ptr [ecx + 4], edx; ret 4; 
0x00133ae1: mov dword ptr [ecx], eax; mov eax, ecx; ret 4; 
0x0008bd4c: mov dword ptr [ecx], eax; mov eax, edx; ret; 
0x0008665f: mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x001212f4: mov dword ptr [ecx], ebx; int 0x80; 
0x000a5d71: mov dword ptr [ecx], edx; mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x000a5d90: mov dword ptr [ecx], edx; mov byte ptr [ecx + 4], dl; pop ebx; ret; 
0x000a5db0: mov dword ptr [ecx], edx; mov dword ptr [ecx + 3], edx; pop ebx; ret; 
0x000a5da0: mov dword ptr [ecx], edx; mov word ptr [ecx + 4], dx; pop ebx; ret; 
0x00140772: mov dword ptr [ecx], edx; pop ebx; pop esi; pop edi; ret; 
0x0007b1a0: mov dword ptr [ecx], edx; pop ebx; pop esi; ret; 
0x000a5d61: mov dword ptr [ecx], edx; pop ebx; ret; 
0x00075036: mov dword ptr [ecx], esi; add esp, 4; pop ebx; pop esi; ret; 
0x00084afd: mov dword ptr [edi + 0x10], 0; mov ecx, dword ptr [edi + 0xc]; xor cl, 0x81; mov dword ptr [edi], 0; call dword ptr gs:[0x10]; 
0x000ad90d: mov dword ptr [edi + 0x10], ecx; lea eax, [edi + 0x12]; pop edi; pop esi; pop ebx; ret; 
0x000ad94b: mov dword ptr [edi + 0x10], ecx; lea eax, [edi + 0x14]; pop edi; pop esi; pop ebx; ret; 
0x000ac25e: mov dword ptr [edi + 0x10], ecx; mov byte ptr [edi + 0x14], dl; pop edi; pop esi; pop ebx; ret; 
0x000ac1fd: mov dword ptr [edi + 0x10], ecx; pop edi; pop esi; pop ebx; ret; 
0x0004ac7b: mov dword ptr [edi + 0x15c], eax; mov esp, edx; mov esi, dword ptr [edi + 0x3c]; mov edi, dword ptr [edi + 0x38]; ret; 
0x000ac325: mov dword ptr [edi + 0x17], ecx; pop edi; pop esi; pop ebx; ret; 
0x000ada17: mov dword ptr [edi + 0x18], ecx; lea eax, [edi + 0x1a]; pop edi; pop esi; pop ebx; ret; 
0x000ada65: mov dword ptr [edi + 0x18], ecx; lea eax, [edi + 0x1c]; pop edi; pop esi; pop ebx; ret; 
0x000ac307: mov dword ptr [edi + 0x18], ecx; pop edi; pop esi; pop ebx; ret; 
0x00083897: mov dword ptr [edi + 0x218], 1; mov edx, 1; call dword ptr gs:[0x10]; 
0x000ad92b: mov dword ptr [edi + 0xf], ecx; lea eax, [edi + 0x13]; pop edi; pop esi; pop ebx; ret; 
0x000ac21b: mov dword ptr [edi + 0xf], ecx; pop edi; pop esi; pop ebx; ret; 
0x000ad7c7: mov dword ptr [edi + 3], edx; lea eax, [edi + 7]; pop edi; pop esi; pop ebx; ret; 
0x000ac0c7: mov dword ptr [edi + 3], edx; pop edi; pop esi; pop ebx; ret; 
0x000ac0b9: mov dword ptr [edi + 4], edx; pop edi; pop esi; pop ebx; ret; 
0x000ac12b: mov dword ptr [edi + 7], edx; pop edi; pop esi; pop ebx; ret; 
0x00103ea6: mov dword ptr [edi + 8], eax; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x000ad81d: mov dword ptr [edi + 8], edx; lea eax, [edi + 0xa]; pop edi; pop esi; pop ebx; ret; 
0x000ad85b: mov dword ptr [edi + 8], edx; lea eax, [edi + 0xc]; pop edi; pop esi; pop ebx; ret; 
0x000ac10d: mov dword ptr [edi + 8], edx; pop edi; pop esi; pop ebx; ret; 
0x0013f0d0: mov dword ptr [edi + esi], eax; mov eax, 6; call dword ptr gs:[0x10]; 
0x000ac420: mov dword ptr [edi - 1], edx; pop edi; pop esi; pop ebx; ret; 
0x00084b0a: mov dword ptr [edi], 0; call dword ptr gs:[0x10]; 
0x000b725b: mov dword ptr [edi], 0x24748b00; sbb al, 0x8d; xchg ah, ah; xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x0004b688: mov dword ptr [edi], eax; pop eax; pop ebx; pop esi; pop edi; ret; 
0x0008bc48: mov dword ptr [edi], eax; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0004b691: mov dword ptr [edi], ebx; pop ebx; pop esi; pop edi; ret; 
0x000ac087: mov dword ptr [edi], ecx; mov byte ptr [edi + 2], dl; pop edi; pop esi; pop ebx; ret; 
0x000ac0a5: mov dword ptr [edi], ecx; mov byte ptr [edi + 4], dl; pop edi; pop esi; pop ebx; ret; 
0x000ac0c5: mov dword ptr [edi], ecx; mov dword ptr [edi + 3], edx; pop edi; pop esi; pop ebx; ret; 
0x000ac0b6: mov dword ptr [edi], ecx; mov word ptr [edi + 4], dx; pop edi; pop esi; pop ebx; ret; 
0x000ad744: mov dword ptr [edi], edx; lea eax, [edi + 2]; pop edi; pop esi; pop ebx; ret; 
0x000ad772: mov dword ptr [edi], edx; lea eax, [edi + 4]; pop edi; pop esi; pop ebx; ret; 
0x000ac440: mov dword ptr [edi], edx; mov byte ptr [edi + 4], dl; pop edi; pop esi; pop ebx; ret; 
0x000ac450: mov dword ptr [edi], edx; mov word ptr [edi + 4], dx; pop edi; pop esi; pop ebx; ret; 
0x001466e1: mov dword ptr [edi], edx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000ac074: mov dword ptr [edi], edx; pop edi; pop esi; pop ebx; ret; 
0x0013f9d3: mov dword ptr [edi], esi; pop esi; pop edi; ret; 
0x00084825: mov dword ptr [edx + 0x10], eax; mov eax, ecx; ret; 
0x00090b78: mov dword ptr [edx + 0x10], eax; pop ebx; pop esi; ret; 
0x00075033: mov dword ptr [edx + 0x10], ebx; mov dword ptr [ecx], esi; add esp, 4; pop ebx; pop esi; ret; 
0x0015b116: mov dword ptr [edx + 0x10], ecx; pop ebx; ret; 
0x001667a5: mov dword ptr [edx + 0x14], eax; mov eax, 1; pop ebx; ret; 
0x001667db: mov dword ptr [edx + 0x14], ecx; add eax, ebx; mov dword ptr [edx + 0xc], eax; mov eax, ebx; pop ebx; ret; 
0x0007519d: mov dword ptr [edx + 0x14], esi; mov byte ptr [ecx], bl; add esp, 4; pop ebx; pop esi; ret; 
0x000829c2: mov dword ptr [edx + 0x19f0], eax; ret; 
0x0008d0a6: mov dword ptr [edx + 0x1c], eax; xor eax, eax; pop ebx; ret; 
0x000943b6: mov dword ptr [edx + 0x1fc], eax; ret; 
0x000943e1: mov dword ptr [edx + 0x204], eax; ret; 
0x000eaaa9: mov dword ptr [edx + 0x20], ebx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00112738: mov dword ptr [edx + 0x20], esi; mov dword ptr [edx + 0x24], edi; mov dword ptr [edx + 0x28], eax; pop esi; pop edi; ret; 
0x0008377b: mov dword ptr [edx + 0x218], 1; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011273b: mov dword ptr [edx + 0x24], edi; mov dword ptr [edx + 0x28], eax; pop esi; pop edi; ret; 
0x0011273e: mov dword ptr [edx + 0x28], eax; pop esi; pop edi; ret; 
0x000373cb: mov dword ptr [edx + 0x28], ecx; ret; 
0x0015b0f4: mov dword ptr [edx + 0x2c], ebx; mov dword ptr [edx + 0x34], ecx; pop ebx; ret; 
0x00115fb5: mov dword ptr [edx + 0x34], eax; pop ebx; pop esi; pop edi; ret; 
0x0015b0f7: mov dword ptr [edx + 0x34], ecx; pop ebx; ret; 
0x0008da67: mov dword ptr [edx + 0x3a28], eax; xor eax, eax; ret; 
0x00090adc: mov dword ptr [edx + 0x3adc], ecx; ret; 
0x000911bf: mov dword ptr [edx + 0x3ae0], eax; mov dword ptr [eax + 0xc], ecx; ret; 
0x00098890: mov dword ptr [edx + 0x3b5c], 0; pop ebx; pop esi; ret; 
0x00094592: mov dword ptr [edx + 0x3b6c], eax; ret; 
0x00115fb2: mov dword ptr [edx + 0x3c], edi; mov dword ptr [edx + 0x34], eax; pop ebx; pop esi; pop edi; ret; 
0x0010fb8d: mov dword ptr [edx + 0x3e], eax; xor eax, eax; ret; 
0x0011151d: mov dword ptr [edx + 0x42], eax; xor eax, eax; ret; 
0x00038533: mov dword ptr [edx + 0x64], eax; mov eax, ecx; ret; 
0x0003851e: mov dword ptr [edx + 0x68], ecx; ret; 
0x0007c605: mov dword ptr [edx + 0x88], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x00083309: mov dword ptr [edx + 0x924], 0; ret; 
0x000513d5: mov dword ptr [edx + 0xc], eax; add esp, 0x18; mov eax, edx; pop ebx; ret 4; 
0x001667e0: mov dword ptr [edx + 0xc], eax; mov eax, ebx; pop ebx; ret; 
0x00188aad: mov dword ptr [edx + 1], ecx; movzx eax, byte ptr [eax]; mov byte ptr [edx], al; pop ebx; ret; 
0x001889a5: mov dword ptr [edx + 1], ecx; movzx ecx, byte ptr [eax]; mov byte ptr [edx], cl; pop ebx; ret; 
0x00188a25: mov dword ptr [edx + 2], ecx; movzx ecx, word ptr [eax]; mov word ptr [edx], cx; pop ebx; ret; 
0x000a81b7: mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; pop edi; ret; 
0x000a82e7: mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; ret; 
0x000b25da: mov dword ptr [edx + 3], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000a3dc7: mov dword ptr [edx + 3], eax; mov eax, edi; pop edi; ret; 
0x000a3ef7: mov dword ptr [edx + 3], eax; mov eax, edx; ret; 
0x0011274e: mov dword ptr [edx + 4], 0; pop esi; pop edi; ret; 
0x001126ea: mov dword ptr [edx + 4], 0xffffffff; pop esi; pop edi; ret; 
0x000a8199: mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; pop edi; ret; 
0x000a82d9: mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; ret; 
0x000ac978: mov dword ptr [edx + 4], eax; lea eax, [edx + 7]; pop edi; ret; 
0x000acbc7: mov dword ptr [edx + 4], eax; lea eax, [edx + 7]; ret; 
0x000aca77: mov dword ptr [edx + 4], eax; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x000acbd7: mov dword ptr [edx + 4], eax; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000ab417: mov dword ptr [edx + 4], eax; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000ab577: mov dword ptr [edx + 4], eax; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000acbf7: mov dword ptr [edx + 4], eax; mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000ab597: mov dword ptr [edx + 4], eax; mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000acad7: mov dword ptr [edx + 4], eax; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x000acc37: mov dword ptr [edx + 4], eax; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000ab477: mov dword ptr [edx + 4], eax; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x000ab5d7: mov dword ptr [edx + 4], eax; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000b25bc: mov dword ptr [edx + 4], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000a3db9: mov dword ptr [edx + 4], eax; mov eax, edi; pop edi; ret; 
0x000a202a: mov dword ptr [edx + 4], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x000a3ee9: mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x0011a9cf: mov dword ptr [edx + 4], eax; ret; 
0x0011a9f1: mov dword ptr [edx + 4], eax; test eax, eax; je 0x11a9fa; mov dword ptr [eax], edx; ret; 
0x0008d741: mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x000a2145: mov dword ptr [edx + 4], ebx; mov dword ptr [edx], eax; lea eax, [edx + 5]; pop ebx; pop esi; ret; 
0x000a2075: mov dword ptr [edx + 4], ebx; mov dword ptr [edx], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x00104229: mov dword ptr [edx + 4], ecx; mov dword ptr [ebx + 4], eax; xor eax, eax; add esp, 8; pop ebx; ret; 
0x00184839: mov dword ptr [edx + 4], ecx; mov ecx, dword ptr [eax]; mov dword ptr [edx], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00189af9: mov dword ptr [edx + 4], ecx; mov ecx, dword ptr [eax]; mov dword ptr [edx], ecx; pop ebx; ret; 
0x000a820b: mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x000a834b: mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000b264e: mov dword ptr [edx + 7], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000a3e1b: mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000a3f5b: mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x00058c36: mov dword ptr [edx + 8], 0; xchg dword ptr [edx], eax; cmp eax, 1; jg 0x58c48; ret; 
0x000aaf84: mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000a80fb: mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x000a836b: mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000a9f2b: mov dword ptr [edx + 8], eax; lea eax, [edx + 0xc]; pop edi; pop ebx; ret; 
0x000a81ed: mov dword ptr [edx + 8], eax; lea eax, [edx + 9]; pop edi; ret; 
0x000a832d: mov dword ptr [edx + 8], eax; lea eax, [edx + 9]; ret; 
0x0008313c: mov dword ptr [edx + 8], eax; mov byte ptr gs:[0x4fe], 0; mov dword ptr gs:[0x7c], edx; ret; 
0x000b2630: mov dword ptr [edx + 8], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000a5b2b: mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; pop ebx; ret; 
0x000a3d2b: mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x000a6aa4: mov dword ptr [edx + 8], eax; mov eax, edx; pop ebx; ret; 
0x000a3f3d: mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000894cc: mov dword ptr [edx + 8], ecx; cmp eax, 0x21; jne 0x894d8; add dword ptr [edx + 4], 1; add esp, 0xc; ret; 
0x00058ba3: mov dword ptr [edx + 8], esi; add dword ptr [edx + 4], 1; add esp, 4; pop ebx; pop esi; ret; 
0x000e9a58: mov dword ptr [edx + eax*4], ecx; mov eax, 1; add esp, 4; pop ebx; pop esi; ret; 
0x0008f17d: mov dword ptr [edx + eax], 0x16; add esp, 4; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0011d515: mov dword ptr [edx + eax], 0x16; add esp, 4; pop ebx; pop esi; ret; 
0x0013337d: mov dword ptr [edx + eax], 0x16; add esp, 8; mov eax, 0xffffffff; pop ebx; ret; 
0x00037645: mov dword ptr [edx + eax], 0x16; mov eax, 0xffffffff; pop ebx; ret; 
0x000376ed: mov dword ptr [edx + eax], 0x16; mov eax, 0xffffffff; ret; 
0x00071bd8: mov dword ptr [edx + eax], 0x16; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0009936d: mov dword ptr [edx + eax], 0x16; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00171f4d: mov dword ptr [edx + eax], 0x16; xor eax, eax; ret; 
0x00035ef0: mov dword ptr [edx + eax], 0x22; add esp, 0x18; pop ebx; ret; 
0x000364fe: mov dword ptr [edx + eax], 0x22; add esp, 8; pop ebx; ret; 
0x0003827b: mov dword ptr [edx + eax], 0x26; mov eax, 0xffffffff; ret; 
0x0008f4ed: mov dword ptr [edx + eax], 0xb; mov eax, 0xffffffff; pop ebx; ret; 
0x000d87dd: mov dword ptr [edx + eax], 2; xor eax, eax; add esp, 0xc; ret; 
0x0011f645: mov dword ptr [edx + eax], 2; xor eax, eax; pop ebx; ret; 
0x0017c86a: mov dword ptr [edx + ecx - 4], ebx; mov eax, edx; pop ebx; ret; 
0x0002cc9d: mov dword ptr [edx + edi*4], ecx; mov edx, dword ptr [ebx + edi*4 - 0x3a0]; test edx, edx; je 0x2ccb5; mov dword ptr [esp + 0xc], eax; call edx; 
0x0017a9d9: mov dword ptr [edx - 0x10], eax; mov dword ptr [edx - 0xc], eax; mov dword ptr [edx - 8], eax; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x0017b04f: mov dword ptr [edx - 0xa], eax; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017aa1f: mov dword ptr [edx - 0xa], eax; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x0017a9dc: mov dword ptr [edx - 0xc], eax; mov dword ptr [edx - 8], eax; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x0017a9fc: mov dword ptr [edx - 0xd], eax; mov dword ptr [edx - 9], eax; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0017aa1c: mov dword ptr [edx - 0xe], eax; mov dword ptr [edx - 0xa], eax; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x0017b056: mov dword ptr [edx - 2], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017aa26: mov dword ptr [edx - 2], eax; pop ebx; ret; 
0x0017ef5d: mov dword ptr [edx - 2], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00180f7d: mov dword ptr [edx - 2], ecx; mov eax, edx; pop ebx; ret; 
0x0018842d: mov dword ptr [edx - 2], ecx; pop ebx; ret; 
0x0017b076: mov dword ptr [edx - 3], eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017aa46: mov dword ptr [edx - 3], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0017eff1: mov dword ptr [edx - 3], ecx; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00181011: mov dword ptr [edx - 3], ecx; mov byte ptr [edx - 1], al; mov eax, edx; pop ebx; ret; 
0x001884c1: mov dword ptr [edx - 3], ecx; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0017b012: mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00180ea9: mov dword ptr [edx - 4], eax; mov eax, edx; pop ebx; ret; 
0x0017a9e2: mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x0017ee25: mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00180e55: mov dword ptr [edx - 4], ecx; mov eax, edx; pop ebx; ret; 
0x00166816: mov dword ptr [edx - 4], ecx; mov ecx, 1; mov dword ptr [eax + 0xc], edx; mov eax, ecx; ret; 
0x00188305: mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x0017b032: mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017aa02: mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0017ee76: mov dword ptr [edx - 5], ecx; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00180ea6: mov dword ptr [edx - 5], ecx; mov dword ptr [edx - 4], eax; mov eax, edx; pop ebx; ret; 
0x00188356: mov dword ptr [edx - 5], ecx; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x00188395: mov dword ptr [edx - 5], ecx; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x0017b052: mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017aa22: mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x00188425: mov dword ptr [edx - 6], ecx; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; pop ebx; ret; 
0x0017aa42: mov dword ptr [edx - 7], eax; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0017b00f: mov dword ptr [edx - 8], eax; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017a9df: mov dword ptr [edx - 8], eax; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x00189859: mov dword ptr [edx - 8], ecx; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x0017b02f: mov dword ptr [edx - 9], eax; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017a9ff: mov dword ptr [edx - 9], eax; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0003ad9b: mov dword ptr [edx], 0; add esp, 4; pop ebx; pop esi; ret; 
0x000aa065: mov dword ptr [edx], 0x38800000; add dword ptr [ebx + 0x5b5fffd8], eax; ret; 
0x001126e4: mov dword ptr [edx], 0xffffffff; mov dword ptr [edx + 4], 0xffffffff; pop esi; pop edi; ret; 
0x00084442: mov dword ptr [edx], eax; add esp, 0x18; xor eax, eax; pop ebx; ret; 
0x00081f72: mov dword ptr [edx], eax; add esp, 4; pop ebx; pop esi; ret; 
0x0003634c: mov dword ptr [edx], eax; add esp, 4; ret; 
0x000a8154: mov dword ptr [edx], eax; lea eax, [edx + 1]; pop edi; ret; 
0x000a8294: mov dword ptr [edx], eax; lea eax, [edx + 1]; ret; 
0x000ab062: mov dword ptr [edx], eax; lea eax, [edx + 3]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000a211c: mov dword ptr [edx], eax; lea eax, [edx + 3]; pop ebx; pop esi; ret; 
0x000a8082: mov dword ptr [edx], eax; lea eax, [edx + 3]; pop edi; ret; 
0x000a82b2: mov dword ptr [edx], eax; lea eax, [edx + 3]; ret; 
0x000a2130: mov dword ptr [edx], eax; lea eax, [edx + 4]; pop ebx; pop esi; ret; 
0x000a9ebf: mov dword ptr [edx], eax; lea eax, [edx + 4]; pop edi; pop ebx; ret; 
0x000a2148: mov dword ptr [edx], eax; lea eax, [edx + 5]; pop ebx; pop esi; ret; 
0x000a215c: mov dword ptr [edx], eax; lea eax, [edx + 6]; pop ebx; pop esi; ret; 
0x000a8164: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; pop edi; ret; 
0x000a82a4: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; ret; 
0x000a3d94: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edi; pop edi; ret; 
0x000a3eb4: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x000a82c2: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; lea eax, [edx + 4]; ret; 
0x000a3ed2: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; mov eax, edx; ret; 
0x000a82d2: mov dword ptr [edx], eax; mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, [edx + 5]; ret; 
0x000a3ee2: mov dword ptr [edx], eax; mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x00083353: mov dword ptr [edx], eax; mov dword ptr [ecx + 0x924], 0; pop ebx; ret; 
0x00057a63: mov dword ptr [edx], eax; mov eax, 1; ret; 
0x000a81b2: mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; pop edi; ret; 
0x000a82e2: mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; ret; 
0x000a3dc2: mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edi; pop edi; ret; 
0x000a3ef2: mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edx; ret; 
0x000ab562: mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 4]; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x000b2557: mov dword ptr [edx], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000a5abf: mov dword ptr [edx], eax; mov eax, edi; pop edi; pop ebx; ret; 
0x000a3cb2: mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x000a2054: mov dword ptr [edx], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x000a6b72: mov dword ptr [edx], eax; mov eax, edx; pop ebx; ret; 
0x000a3ea4: mov dword ptr [edx], eax; mov eax, edx; ret; 
0x00080b62: mov dword ptr [edx], eax; ret; 
0x0009a118: mov dword ptr [edx], eax; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x0003ba34: mov dword ptr [edx], eax; xor eax, eax; add esp, 8; pop ebx; ret; 
0x000842e2: mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000dbd2a: mov dword ptr [edx], ebx; add esp, 0x28; pop ebx; ret; 
0x0017c864: mov dword ptr [edx], ebx; mov ebx, dword ptr [eax + ecx - 4]; mov dword ptr [edx + ecx - 4], ebx; mov eax, edx; pop ebx; ret; 
0x000d70c4: mov dword ptr [edx], ebx; pop ebx; ret; 
0x000fadea: mov dword ptr [edx], ecx; add esp, 0x24; pop ebx; pop esi; ret; 
0x00075bd2: mov dword ptr [edx], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x0011a9cd: mov dword ptr [edx], ecx; mov dword ptr [edx + 4], eax; ret; 
0x00181494: mov dword ptr [edx], ecx; mov eax, dword ptr [esp + 8]; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x0017f4c4: mov dword ptr [edx], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00074ed4: mov dword ptr [edx], ecx; pop ebx; ret; 
0x0004ac96: mov dword ptr [edx], ecx; ret; 
0x00074345: mov dword ptr [edx], edi; pop ebx; pop esi; pop edi; ret; 
0x000d9d66: mov dword ptr [edx], esi; add esp, 4; pop ebx; pop esi; ret; 
0x000a20f9: mov dword ptr [edx], esi; lea eax, [edx + 1]; pop ebx; pop esi; ret; 
0x000a2041: mov dword ptr [edx], esi; mov eax, edx; mov byte ptr [edx + 2], 0; pop ebx; pop esi; ret; 
0x000a2039: mov dword ptr [edx], esi; mov eax, edx; pop ebx; pop esi; ret; 
0x00090afc: mov dword ptr [esi + 0x10], ecx; pop ebx; pop esi; ret; 
0x0011fc98: mov dword ptr [esi + 0x10], edx; pop ebx; pop esi; pop edi; ret; 
0x000f7dfb: mov dword ptr [esi + 0x14], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0010e4ca: mov dword ptr [esi + 0x14], eax; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x00156de3: mov dword ptr [esi + 0x18], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0007a5e6: mov dword ptr [esi + 0x18], edx; mov dword ptr [ebx + 0xc], edx; add esp, 4; pop ebx; pop esi; ret; 
0x0012be9c: mov dword ptr [esi + 0x20], eax; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x000f0323: mov dword ptr [esi + 0x20], ebx; pop ebx; pop esi; pop edi; ret; 
0x0007f469: mov dword ptr [esi + 0x28], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x00080caf: mov dword ptr [esi + 0x28], 0; add esp, 4; pop ebx; pop esi; ret; 
0x0011fb6c: mov dword ptr [esi + 0x28], eax; mov eax, 4; pop ebx; pop esi; pop edi; ret; 
0x00075928: mov dword ptr [esi + 0x3c], eax; add esp, 4; pop ebx; pop esi; ret; 
0x00079d14: mov dword ptr [esi + 0xa4], eax; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000791b4: mov dword ptr [esi + 0xa4], edx; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0003ac17: mov dword ptr [esi + 0xc], edx; add esp, 0x34; pop ebx; pop esi; ret 4; 
0x00080c05: mov dword ptr [esi + 4], eax; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0007c58f: mov dword ptr [esi + 8], eax; mov eax, esi; add esp, 4; pop ebx; pop esi; ret; 
0x0007cb04: mov dword ptr [esi + 8], eax; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0009e104: mov dword ptr [esi + edx*2], 0x17564e8; add byte ptr [ecx - 0x3b7c0389], cl; adc byte ptr [ecx], ch; ret; 
0x0007f904: mov dword ptr [esi], eax; add esp, 4; pop ebx; pop esi; ret; 
0x00076471: mov dword ptr [esi], eax; mov dword ptr [ebx + 0x30], esi; add esp, 4; pop ebx; pop esi; ret; 
0x001732d7: mov dword ptr [esi], eax; mov eax, 0xffffffff; pop ebx; pop esi; pop edi; ret; 
0x0009f25c: mov dword ptr [esi], ecx; add al, byte ptr [eax]; add byte ptr [ebx + 0x29142454], cl; ret 0xb48d; 
0x00038414: mov dword ptr [esi], edx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000a1af6: mov dword ptr [esi], edx; pop ebx; pop esi; ret; 
0x0011ee8f: mov dword ptr [esp + 0x100c], eax; xor eax, eax; lea edx, [esp + 0xc]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x00125314: mov dword ptr [esp + 0x10], eax; mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00124a25: mov dword ptr [esp + 0x10], eax; mov eax, dword ptr [esp + 0x40]; mov dword ptr [esp + 0x14], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00069730: mov dword ptr [esp + 0x10], ebx; jmp 0x68af3; lea esi, [esi]; jmp eax; 
0x00158830: mov dword ptr [esp + 0x10], edx; add esp, 4; pop ebx; pop esi; jmp eax; 
0x000818da: mov dword ptr [esp + 0x10], edx; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x000819d6: mov dword ptr [esp + 0x10], edx; mov eax, dword ptr [eax + 4]; add esp, 0xc; jmp eax; 
0x0015a76b: mov dword ptr [esp + 0x10], edx; pop ebx; pop esi; jmp eax; 
0x0008fbb0: mov dword ptr [esp + 0x10], edx; push dword ptr [eax + 4]; call dword ptr [eax]; 
0x0007811f: mov dword ptr [esp + 0x10], esi; mov eax, dword ptr [eax + 0x10]; add esp, 4; pop ebx; pop esi; jmp eax; 
0x00076164: mov dword ptr [esp + 0x10], esi; pop ebx; mov eax, dword ptr [edi + 0x10]; pop esi; pop edi; jmp eax; 
0x00076004: mov dword ptr [esp + 0x10], esi; pop ebx; mov eax, dword ptr [edi + 0x14]; pop esi; pop edi; jmp eax; 
0x0010463c: mov dword ptr [esp + 0x124], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x000d8f9b: mov dword ptr [esp + 0x13c], eax; xor eax, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x00124a2d: mov dword ptr [esp + 0x14], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00124964: mov dword ptr [esp + 0x14], eax; mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00124da4: mov dword ptr [esp + 0x14], eax; mov eax, dword ptr [esp + 0x44]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000818d6: mov dword ptr [esp + 0x14], ecx; mov dword ptr [esp + 0x10], edx; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x0003a831: mov dword ptr [esp + 0x14], ecx; sub esp, 8; push 0; push edx; call edi; 
0x0015b3be: mov dword ptr [esp + 0x14], edx; push dword ptr [esi]; call dword ptr [esi + 0x20]; 
0x00089814: mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x001254fd: mov dword ptr [esp + 0x18], eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x001254af: mov dword ptr [esp + 0x18], eax; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x0012496c: mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001261f7: mov dword ptr [esp + 0x18], eax; or esi, 0x100; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00125b4d: mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x000d7160: mov dword ptr [esp + 0x18], ecx; push ebx; call eax; 
0x001223ff: mov dword ptr [esp + 0x18], edx; cmove esi, ebx; lea edx, [esp + 0xc]; mov ebx, dword ptr [esp + 0x50]; call dword ptr gs:[0x10]; 
0x001169ec: mov dword ptr [esp + 0x18], edx; mov esi, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00108cdd: mov dword ptr [esp + 0x18c], eax; xor eax, eax; mov eax, 0x17f; call dword ptr gs:[0x10]; 
0x000da06e: mov dword ptr [esp + 0x1c], eax; call 0x16ed20; add esp, 0x10; mov eax, dword ptr [esp + 0xc]; call eax; 
0x00124e55: mov dword ptr [esp + 0x1c], eax; mov eax, dword ptr [esp + 0x60]; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0008dff0: mov dword ptr [esp + 0x1c], eax; mov eax, dword ptr [esp + 0xb8]; mov dword ptr [esp + 0x20], eax; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x0006de52: mov dword ptr [esp + 0x20], 0; jmp eax; 
0x0006de02: mov dword ptr [esp + 0x20], 1; jmp eax; 
0x0008dffb: mov dword ptr [esp + 0x20], eax; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x000388d5: mov dword ptr [esp + 0x20], eax; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x001657ac: mov dword ptr [esp + 0x20], edx; mov eax, dword ptr [eax + 4]; add esp, 0x18; pop ebx; jmp eax; 
0x00068c32: mov dword ptr [esp + 0x24], 0; jmp eax; 
0x00068bda: mov dword ptr [esp + 0x24], 1; jmp eax; 
0x00163847: mov dword ptr [esp + 0x24], 5; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x00091679: mov dword ptr [esp + 0x24], ecx; mov edx, ecx; mov ecx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00093f5e: mov dword ptr [esp + 0x28], eax; cmove esi, edi; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x00124e5d: mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000916aa: mov dword ptr [esp + 0x28], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0010a9d2: mov dword ptr [esp + 0x28], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x001246d5: mov dword ptr [esp + 0x28], eax; mov eax, dword ptr [esp + 0x64]; mov dword ptr [esp + 0x2c], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00124824: mov dword ptr [esp + 0x28], ebx; mov ebx, 0xf; mov dword ptr [esp + 0x30], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0016f49a: mov dword ptr [esp + 0x28], ecx; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x000394e0: mov dword ptr [esp + 0x28], ecx; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x001636a5: mov dword ptr [esp + 0x28], edx; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x001246dd: mov dword ptr [esp + 0x2c], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0016f39a: mov dword ptr [esp + 0x2c], ecx; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x001592c6: mov dword ptr [esp + 0x2c], edx; call dword ptr [eax]; 
0x00093b0f: mov dword ptr [esp + 0x2c], edx; mov dword ptr [esp + 0x34], 4; call dword ptr gs:[0x10]; 
0x0012482d: mov dword ptr [esp + 0x30], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0006f420: mov dword ptr [esp + 0x34], 1; jmp ebx; 
0x00093b13: mov dword ptr [esp + 0x34], 4; call dword ptr gs:[0x10]; 
0x0012478d: mov dword ptr [esp + 0x34], eax; lea eax, [esp + 0x24]; mov dword ptr [esp + 0x38], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00163635: mov dword ptr [esp + 0x34], edx; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x000b6a68: mov dword ptr [esp + 0x34], edx; push eax; push edi; call esi; 
0x0006e7cf: mov dword ptr [esp + 0x38], 1; add edx, dword ptr [esi + eax*4]; jmp edx; 
0x0006f450: mov dword ptr [esp + 0x38], 1; jmp ebx; 
0x00124795: mov dword ptr [esp + 0x38], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0006e84a: mov dword ptr [esp + 0x3c], 0x20; jmp eax; 
0x0006e4bf: mov dword ptr [esp + 0x40], 1; add edx, dword ptr [esi + eax*4]; jmp edx; 
0x0006f410: mov dword ptr [esp + 0x40], 1; jmp ebx; 
0x0007faf4: mov dword ptr [esp + 0x40], edx; call dword ptr [esi + 0xc]; 
0x00160192: mov dword ptr [esp + 0x434], edx; mov edx, dword ptr [eax + 4]; push ecx; push eax; call dword ptr [edx + 8]; 
0x0006f403: mov dword ptr [esp + 0x44], 1; add edx, dword ptr [esi + eax*4]; jmp edx; 
0x0006e804: mov dword ptr [esp + 0x44], 1; jmp ebx; 
0x000930b2: mov dword ptr [esp + 0x44], 2; call dword ptr gs:[0x10]; 
0x0006e742: mov dword ptr [esp + 0x4c], 1; add edx, dword ptr [esi + eax*4]; jmp edx; 
0x0006f3a0: mov dword ptr [esp + 0x4c], 1; jmp ebx; 
0x0006e556: mov dword ptr [esp + 0x5c], 0; jmp eax; 
0x0006f380: mov dword ptr [esp + 0x5c], 1; jmp ebx; 
0x001162a6: mov dword ptr [esp + 0x5c], eax; xor eax, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0006e6f7: mov dword ptr [esp + 0x64], 1; add edx, dword ptr [esi + eax*4]; jmp edx; 
0x0006f390: mov dword ptr [esp + 0x64], 1; jmp ebx; 
0x00069396: mov dword ptr [esp + 0x68], 1; jmp eax; 
0x00122835: mov dword ptr [esp + 0x68], eax; mov eax, dword ptr [edx + 0xa0]; mov dword ptr [esp + 0x6c], eax; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x000cb00c: mov dword ptr [esp + 0x68], edi; push ecx; lea ebp, [esp + 0x6c]; push ebp; mov ecx, dword ptr [esp + 0x34]; call ecx; 
0x0012283f: mov dword ptr [esp + 0x6c], eax; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x000cb17a: mov dword ptr [esp + 0x6c], edi; push ebx; push ebp; mov eax, dword ptr [esp + 0x34]; call eax; 
0x0009a3fe: mov dword ptr [esp + 0xc], eax; call dword ptr [edx]; 
0x0002ccab: mov dword ptr [esp + 0xc], eax; call edx; 
0x00035c19: mov dword ptr [esp + 0xc], eax; fld xword ptr [esp + 4]; ret; 
0x000d77fb: mov dword ptr [esp + 0xc], eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x001244a2: mov dword ptr [esp + 0xc], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0010a34b: mov dword ptr [esp + 0xc], eax; mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0011636e: mov dword ptr [esp + 0xc], eax; mov eax, edi; call dword ptr gs:[0x10]; 
0x00117467: mov dword ptr [esp + 0xc], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00117637: mov dword ptr [esp + 0xc], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x0016647b: mov dword ptr [esp + 0xc], ebx; mov dword ptr [esp + 8], edx; pop ebx; mov eax, dword ptr [eax + 0x20]; jmp eax; 
0x00166493: mov dword ptr [esp + 0xc], ebx; mov dword ptr [esp + 8], edx; pop ebx; mov eax, dword ptr [eax + 0x24]; jmp eax; 
0x0015afe3: mov dword ptr [esp + 0xc], ebx; mov dword ptr [esp + 8], edx; pop ebx; mov eax, dword ptr [eax + 4]; jmp eax; 
0x0015afcb: mov dword ptr [esp + 0xc], ebx; mov dword ptr [esp + 8], edx; pop ebx; mov eax, dword ptr [eax]; jmp eax; 
0x000de7d7: mov dword ptr [esp + 0xc], ecx; add ebx, 1; mov dword ptr [esp + 8], eax; call edx; 
0x000de827: mov dword ptr [esp + 0xc], ecx; mov dword ptr [esp + 8], eax; call edx; 
0x00071999: mov dword ptr [esp + 0xc], ecx; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 8], edx; pop ebx; jmp eax; 
0x00081982: mov dword ptr [esp + 0xc], ecx; pop ebx; mov eax, dword ptr [edx + 0x18]; pop esi; jmp eax; 
0x001662e7: mov dword ptr [esp + 0xc], edx; lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x00165957: mov dword ptr [esp + 0xc], edx; lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 4]; 
0x00035e26: mov dword ptr [esp + 0xc], edx; mov eax, dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00021610: mov dword ptr [esp + 0xc], edx; push esi; push dword ptr [esp + 0x40]; call eax; 
0x000362e9: mov dword ptr [esp + 4], eax; fld dword ptr [esp + 4]; ret; 
0x0004ca65: mov dword ptr [esp + 4], eax; fld qword ptr [esp]; add esp, 0xc; ret; 
0x0014f3f6: mov dword ptr [esp + 4], eax; jmp 0x151480; nop; xor eax, eax; ret; 
0x0015d886: mov dword ptr [esp + 4], eax; jmp edx; 
0x0015d886: mov dword ptr [esp + 4], eax; jmp edx; lea esi, [esi]; endbr32; ret; 
0x000d748f: mov dword ptr [esp + 4], eax; mov eax, 0x108; mov dword ptr [esp + 8], ecx; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x001243f1: mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001248ca: mov dword ptr [esp + 4], eax; mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00124529: mov dword ptr [esp + 4], eax; mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0016ece6: mov dword ptr [esp + 4], ecx; jmp dword ptr [eax + 0x30]; 
0x001656ff: mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x0008285d: mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0008285d: mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; lea esi, [esi]; nop; ret; 
0x00071aa2: mov dword ptr [esp + 4], edx; jmp eax; 
0x0004ca9c: mov dword ptr [esp + 4], edx; mov dword ptr [esp], eax; fld xword ptr [esp]; add esp, 0x1c; ret; 
0x0003644f: mov dword ptr [esp + 4], edx; mov eax, dword ptr [esp + 8]; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x001589bb: mov dword ptr [esp + 4], edx; sub esp, 0xc; mov ecx, dword ptr [eax + 0x20]; push eax; call dword ptr [ecx + 0xc]; 
0x000de7de: mov dword ptr [esp + 8], eax; call edx; 
0x00035fa9: mov dword ptr [esp + 8], eax; fld qword ptr [esp + 4]; ret; 
0x000d75db: mov dword ptr [esp + 8], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x0009345f: mov dword ptr [esp + 8], eax; mov eax, 0x118; call dword ptr gs:[0x10]; 
0x000ddb67: mov dword ptr [esp + 8], eax; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x00109c70: mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x001118c0: mov dword ptr [esp + 8], eax; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x000934af: mov dword ptr [esp + 8], eax; mov eax, 0x1a3; call dword ptr gs:[0x10]; 
0x000386be: mov dword ptr [esp + 8], eax; mov eax, 0x1a5; call dword ptr gs:[0x10]; 
0x00124531: mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00125a8a: mov dword ptr [esp + 8], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00125b99: mov dword ptr [esp + 8], eax; mov eax, 0x75; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x00038666: mov dword ptr [esp + 8], eax; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x0010a95c: mov dword ptr [esp + 8], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0012449a: mov dword ptr [esp + 8], eax; mov eax, dword ptr [esp + 0x38]; mov dword ptr [esp + 0xc], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0011754d: mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x0011771d: mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x00103b4d: mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x00103c2d: mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x00093727: mov dword ptr [esp + 8], eax; mov esi, dword ptr [esp + 0x4c]; mov eax, 0x117; call dword ptr gs:[0x10]; 
0x00093777: mov dword ptr [esp + 8], eax; mov esi, dword ptr [esp + 0x4c]; mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x00162100: mov dword ptr [esp + 8], eax; sub esp, 0xc; mov ecx, dword ptr [edx + 4]; push edx; call dword ptr [ecx + 0x10]; 
0x0016efc0: mov dword ptr [esp + 8], ecx; call eax; 
0x000d7498: mov dword ptr [esp + 8], ecx; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x0015d882: mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x001656fb: mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x00165713: mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x00087269: mov dword ptr [esp + 8], edx; call dword ptr gs:[0x10]; 
0x00036197: mov dword ptr [esp + 8], edx; mov eax, dword ptr [esp + 0xc]; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x000889ca: mov dword ptr [esp + 8], edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x0002d8c6: mov dword ptr [esp + 8], edx; pop ebx; jmp 0x2def0; pop ebx; ret; 
0x000719a3: mov dword ptr [esp + 8], edx; pop ebx; jmp eax; 
0x0016647f: mov dword ptr [esp + 8], edx; pop ebx; mov eax, dword ptr [eax + 0x20]; jmp eax; 
0x00166497: mov dword ptr [esp + 8], edx; pop ebx; mov eax, dword ptr [eax + 0x24]; jmp eax; 
0x0015afe7: mov dword ptr [esp + 8], edx; pop ebx; mov eax, dword ptr [eax + 4]; jmp eax; 
0x0015afcf: mov dword ptr [esp + 8], edx; pop ebx; mov eax, dword ptr [eax]; jmp eax; 
0x00170e31: mov dword ptr [esp], eax; call 0x20140; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00161f1b: mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x0009423e: mov dword ptr [esp], eax; call esi; 
0x0004ca1c: mov dword ptr [esp], eax; fld dword ptr [esp]; add esp, 4; ret; 
0x0004caa0: mov dword ptr [esp], eax; fld xword ptr [esp]; add esp, 0x1c; ret; 
0x001243ea: mov dword ptr [esp], eax; mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00124b9a: mov dword ptr [esp], eax; mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00124ad5: mov dword ptr [esp], eax; mov eax, dword ptr [esp + 0x38]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000918d0: mov dword ptr [esp], ebp; call 0x20140; mov dword ptr [esp], edi; call esi; 
0x00159b12: mov dword ptr [esp], ebp; call dword ptr [eax + 0x10]; 
0x0013cb89: mov dword ptr [esp], ebp; call ebx; 
0x0013c885: mov dword ptr [esp], ebp; call esi; 
0x00023740: mov dword ptr [esp], ebx; call edi; 
0x0002280d: mov dword ptr [esp], ebx; call esi; 
0x00022980: mov dword ptr [esp], ebx; mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x00023010: mov dword ptr [esp], ebx; mov ecx, dword ptr [ebp - 0x40]; call ecx; 
0x000918d8: mov dword ptr [esp], edi; call esi; 
0x0015930d: mov dword ptr [esp], edx; call dword ptr [eax + 0x10]; 
0x00158a63: mov dword ptr [esp], edx; sub esp, 8; mov ecx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [ecx + 8]; 
0x000ead06: mov dword ptr [esp], esi; call 0x20140; add esp, 0x14; pop ebx; pop esi; ret; 
0x00158684: mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0002b87b: mov dword ptr [esp], esi; call ebx; 
0x0013bf25: mov dword ptr [esp], esi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x00131346: mov dword ptr [esp], esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00093f5d: mov dword ptr fs:[esp + 0x28], eax; cmove esi, edi; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x001246dc: mov dword ptr fs:[esp + 0x2c], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000b6a67: mov dword ptr fs:[esp + 0x34], edx; push eax; push edi; call esi; 
0x0008282f: mov dword ptr gs:[0x7c], eax; ret; 
0x00083147: mov dword ptr gs:[0x7c], edx; ret; 
0x000827f8: mov dword ptr gs:[0x80], eax; ret; 
0x000828b7: mov dword ptr gs:[0x80], edx; mov eax, dword ptr [eax + 0x24]; mov byte ptr gs:[0x4fe], al; cmp eax, 1; je 0x828d0; ret; 
0x000b31a3: mov dx, word ptr [esi]; mov word ptr [eax], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afd60: mov dx, word ptr [esi]; mov word ptr [eax], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ac070: mov dx, word ptr [esi]; mov word ptr [edi], dx; pop edi; pop esi; pop ebx; ret; 
0x0008d79a: mov eax, 0; cmova eax, edx; ret; 
0x00192612: mov eax, 0; jne 0x192d90; pop ebx; ret; 
0x0019244b: mov eax, 0; jne 0x192da6; pop ebx; ret; 
0x00193dba: mov eax, 0; jne 0x194000; pop ebx; ret; 
0x00195484: mov eax, 0; jne 0x1956b0; pop ebx; ret; 
0x00195541: mov eax, 0; jne 0x1956d0; pop ebx; ret; 
0x0004ab69: mov eax, 0; jne 0x4ab72; push ecx; ret; 
0x0004ae0f: mov eax, 0; jne 0x4ae18; push ecx; ret; 
0x00111a93: mov eax, 0; pop edi; cmova eax, edx; ret; 
0x00121af7: mov eax, 0x100; call dword ptr gs:[0x10]; 
0x00121ab8: mov eax, 0x100; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000dfe60: mov eax, 0x100; ret; 
0x0011c69b: mov eax, 0x101; call dword ptr gs:[0x10]; 
0x00132e4d: mov eax, 0x1024448b; pop ebx; pop esi; pop edi; ret; 
0x000939ac: mov eax, 0x103; mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00093f65: mov eax, 0x104; call dword ptr gs:[0x10]; 
0x00093da4: mov eax, 0x105; call dword ptr gs:[0x10]; 
0x00093cdc: mov eax, 0x106; call dword ptr gs:[0x10]; 
0x00093bf5: mov eax, 0x107; call dword ptr gs:[0x10]; 
0x000d75df: mov eax, 0x108; call dword ptr gs:[0x10]; 
0x000d7493: mov eax, 0x108; mov dword ptr [esp + 8], ecx; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x000d7307: mov eax, 0x109; call dword ptr gs:[0x10]; 
0x0008e1e0: mov eax, 0x10; add esp, 0xc; ret; 
0x0008e093: mov eax, 0x10; cmove eax, ecx; ret; 
0x00158843: mov eax, 0x10; pop ebx; pop esi; ret; 
0x0008d0b8: mov eax, 0x10; pop ebx; ret; 
0x00197aea: mov eax, 0x10; pop edi; ret; 
0x000d7095: mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x000d77ff: mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x000d7731: mov eax, 0x10b; mov ecx, dword ptr [esp + 0x74]; mov edx, edi; call dword ptr gs:[0x10]; 
0x00109429: mov eax, 0x10c; call dword ptr gs:[0x10]; 
0x00109599: mov eax, 0x10d; call dword ptr gs:[0x10]; 
0x00083b34: mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000931cb: mov eax, 0x115; call dword ptr gs:[0x10]; 
0x000938ec: mov eax, 0x116; call dword ptr gs:[0x10]; 
0x0009372f: mov eax, 0x117; call dword ptr gs:[0x10]; 
0x000936d1: mov eax, 0x117; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x00093463: mov eax, 0x118; call dword ptr gs:[0x10]; 
0x00093411: mov eax, 0x118; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00092fcd: mov eax, 0x119; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000ddb6b: mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x000ddb29: mov eax, 0x11c; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00123b54: mov eax, 0x123; call dword ptr gs:[0x10]; 
0x00123b54: mov eax, 0x123; call dword ptr gs:[0x10]; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x00123b31: mov eax, 0x124; call dword ptr gs:[0x10]; 
0x00123bae: mov eax, 0x125; call dword ptr gs:[0x10]; 
0x00109c74: mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00115bdf: mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x00109c30: mov eax, 0x127; mov ebx, 0xffffff9c; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00109d84: mov eax, 0x127; mov ebx, 0xffffff9c; mov edx, edi; call dword ptr gs:[0x10]; 
0x00109ee4: mov eax, 0x127; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0010a04a: mov eax, 0x127; mov edx, edi; call dword ptr gs:[0x10]; 
0x00109bd1: mov eax, 0x128; call dword ptr gs:[0x10]; 
0x00109386: mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0010bc2b: mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x00108ecc: mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x00123191: mov eax, 0x12c; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x0010c2a1: mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x0010c17b: mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x0010c1e1: mov eax, 0x130; call dword ptr gs:[0x10]; 
0x0010c246: mov eax, 0x131; call dword ptr gs:[0x10]; 
0x00109ade: mov eax, 0x132; call dword ptr gs:[0x10]; 
0x0010a7bf: mov eax, 0x133; call dword ptr gs:[0x10]; 
0x0011185e: mov eax, 0x135; mov edi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00123d4a: mov eax, 0x136; call dword ptr gs:[0x10]; 
0x000869da: mov eax, 0x137; call dword ptr gs:[0x10]; 
0x00121bd7: mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x00121b98: mov eax, 0x13b; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00121cb7: mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x00121c78: mov eax, 0x13c; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00107a16: mov eax, 0x13e; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0011236f: mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00123dae: mov eax, 0x142; call dword ptr gs:[0x10]; 
0x0012218c: mov eax, 0x146; call dword ptr gs:[0x10]; 
0x0012181e: mov eax, 0x148; call dword ptr gs:[0x10]; 
0x00123a5a: mov eax, 0x149; call dword ptr gs:[0x10]; 
0x000df2c4: mov eax, 0x14; call dword ptr gs:[0x10]; 
0x000df2c4: mov eax, 0x14; call dword ptr gs:[0x10]; ret; 
0x0010aff1: mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x0010b06e: mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x0010b020: mov eax, 0x14b; mov ebx, dword ptr [esp + 8]; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x00123b7a: mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x0011746f: mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00117434: mov eax, 0x14d; mov edi, ebp; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00117520: mov eax, 0x14d; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0011763f: mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x00117604: mov eax, 0x14e; mov edi, ebp; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001176f0: mov eax, 0x14e; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0008dfff: mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x00125446: mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00123dde: mov eax, 0x152; call dword ptr gs:[0x10]; 
0x00121930: mov eax, 0x154; call dword ptr gs:[0x10]; 
0x001169e7: mov eax, 0x154; mov dword ptr [esp + 0x18], edx; mov esi, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00123e1b: mov eax, 0x155; call dword ptr gs:[0x10]; 
0x00121eab: mov eax, 0x156; call dword ptr gs:[0x10]; 
0x00121e77: mov eax, 0x156; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00122843: mov eax, 0x157; call dword ptr gs:[0x10]; 
0x00118eea: mov eax, 0x158; call dword ptr gs:[0x10]; 
0x00125807: mov eax, 0x159; call dword ptr gs:[0x10]; 
0x001257c8: mov eax, 0x159; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00123c1b: mov eax, 0x15; call dword ptr gs:[0x10]; 
0x00123e4e: mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x00058adb: mov eax, 0x161; call dword ptr gs:[0x10]; 
0x0003bc6b: mov eax, 0x163; call dword ptr gs:[0x10]; 
0x0003bc37: mov eax, 0x163; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0003bd16: mov eax, 0x163; xor edx, edx; sub ecx, ebx; call dword ptr gs:[0x10]; 
0x00123e7e: mov eax, 0x164; call dword ptr gs:[0x10]; 
0x000de8ef: mov eax, 0x166; lea ecx, [ebp - 0x6d179]; mov edi, 0x1000; mov ebx, dword ptr [esp + 0xc0]; call dword ptr gs:[0x10]; 
0x00084754: mov eax, 0x16; cmove eax, edx; ret; 
0x00084858: mov eax, 0x16; cmp edx, 0x3fff; ja 0x84870; ret; 
0x0008471c: mov eax, 0x16; cmp edx, 2; jbe 0x84730; ret; 
0x000a23f3: mov eax, 0x16; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0009a12b: mov eax, 0x16; pop ebx; pop esi; ret; 
0x00084970: mov eax, 0x16; pop ebx; ret; 
0x0008bc60: mov eax, 0x16; pop esi; pop edi; ret; 
0x00084630: mov eax, 0x16; ret; 
0x00121f41: mov eax, 0x178; call dword ptr gs:[0x10]; 
0x00121ff7: mov eax, 0x17c; call dword ptr gs:[0x10]; 
0x00123eae: mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x00123eda: mov eax, 0x17e; call dword ptr gs:[0x10]; 
0x00108ce6: mov eax, 0x17f; call dword ptr gs:[0x10]; 
0x0004aa20: mov eax, 0x180; call dword ptr gs:[0x10]; 
0x00086bb0: mov eax, 0x182; call dword ptr gs:[0x10]; 
0x000d72ec: mov eax, 0x193; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000d7437: mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000d707b: mov eax, 0x196; not ebx; lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x000d7791: mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000d76bb: mov eax, 0x197; mov ecx, dword ptr [esp + 0x74]; mov edx, ebp; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000d79c3: mov eax, 0x197; mov ecx, edi; mov ebx, 1; call dword ptr gs:[0x10]; 
0x000d7872: mov eax, 0x197; mov edx, ebp; mov ebx, 1; call dword ptr gs:[0x10]; 
0x00093d51: mov eax, 0x198; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00093edb: mov eax, 0x199; mov esi, ebp; call dword ptr gs:[0x10]; 
0x0012224d: mov eax, 0x19a; call dword ptr gs:[0x10]; 
0x0012212f: mov eax, 0x19a; mov edx, dword ptr [esp + 0x34]; mov ebx, dword ptr [esp + 0x30]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0012236d: mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x001122c2: mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x001118c4: mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x001117e2: mov eax, 0x19e; mov edi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x001254b3: mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x001253c4: mov eax, 0x1a1; mov ecx, edx; mov edx, edi; mov edi, ebp; call dword ptr gs:[0x10]; 
0x0009377f: mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x00093655: mov eax, 0x1a2; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x000934b3: mov eax, 0x1a3; call dword ptr gs:[0x10]; 
0x00093399: mov eax, 0x1a3; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00126529: mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x000386c2: mov eax, 0x1a5; call dword ptr gs:[0x10]; 
0x00038591: mov eax, 0x1a5; mov esi, 8; mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x0008305d: mov eax, 0x1a6; xor edx, edx; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000fb1de: mov eax, 0x1a7; call dword ptr gs:[0x10]; 
0x001196b2: mov eax, 0x1a; lea edi, [ebx - 1]; cmp edi, 3; cmovae esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0012370d: mov eax, 0x1b3; int 0x80; 
0x00115301: mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x0010497d: mov eax, 0x1b4; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x000ddbea: mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x000ddced: mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x00198c84: mov eax, 0x20; add eax, edx; ret; 
0x000dfe56: mov eax, 0x20; cmovne eax, edx; ret; 
0x000dfd87: mov eax, 0x20; mov edx, 0x40; cmove eax, edx; ret; 
0x0010a480: mov eax, 0x21; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00118e04: mov eax, 0x24; call dword ptr gs:[0x10]; 
0x00118e04: mov eax, 0x24; call dword ptr gs:[0x10]; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x0003794e: mov eax, 0x25; call dword ptr gs:[0x10]; 
0x0004806a: mov eax, 0x25; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x00058a10: mov eax, 0x26; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00109b9e: mov eax, 0x27; call dword ptr gs:[0x10]; 
0x0010c2ca: mov eax, 0x28; call dword ptr gs:[0x10]; 
0x00054690: mov eax, 0x2901c083; fidivr dword ptr [ecx]; ret 0xee7f; 
0x0010af8a: mov eax, 0x29; call dword ptr gs:[0x10]; 
0x000dd645: mov eax, 0x2b; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001170f0: mov eax, 0x2d; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000c7642: mov eax, 0x31ffffc9; call dword ptr [eax - 0x73]; 
0x00118cea: mov eax, 0x33; call dword ptr gs:[0x10]; 
0x00121350: mov eax, 0x34; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001162ac: mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00116653: mov eax, 0x36; mov ecx, 0x5409; mov edx, 1; call dword ptr gs:[0x10]; 
0x00169642: mov eax, 0x3908418b; ret 0x4675; 
0x000df5ee: mov eax, 0x39; call dword ptr gs:[0x10]; 
0x0005f20f: mov eax, 0x39fffffb; ret 0x1875; 
0x001441b8: mov eax, 0x39fffffb; ret 0x4072; 
0x0005ac48: mov eax, 0x39fffffb; ret 0x840f; 
0x0010992a: mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x0010992a: mov eax, 0x3c; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00149b66: mov eax, 0x3d1b60f; pushfd; xchg ebx, eax; mov al, byte ptr [0x3efff90d]; jmp ebx; 
0x00118d1a: mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x0011ea50: mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x00060930: mov eax, 0x3efff8c1; jmp eax; 
0x0010afbe: mov eax, 0x3f; call dword ptr gs:[0x10]; 
0x000df2e4: mov eax, 0x40; call dword ptr gs:[0x10]; 
0x000df2e4: mov eax, 0x40; call dword ptr gs:[0x10]; ret; 
0x000dfdb8: mov eax, 0x40; ret; 
0x000df614: mov eax, 0x41; call dword ptr gs:[0x10]; 
0x000df614: mov eax, 0x41; call dword ptr gs:[0x10]; ret; 
0x000df694: mov eax, 0x42; call dword ptr gs:[0x10]; 
0x001184be: mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x00116950: mov eax, 0x4c; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00116b3c: mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x000cc070: mov eax, 0x4f; mov ecx, dword ptr [esp + 8]; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x00088345: mov eax, 0x5000e9a; mov bh, 0x1c; sbb al, byte ptr [eax]; mov eax, dword ptr [eax + 0x3a28]; ret; 
0x001567d3: mov eax, 0x50fff962; push 0xa; call 0x152d90; add esp, 0x1c; ret; 
0x0010c1ae: mov eax, 0x53; call dword ptr gs:[0x10]; 
0x0010c211: mov eax, 0x55; call dword ptr gs:[0x10]; 
0x00123d7a: mov eax, 0x56; call dword ptr gs:[0x10]; 
0x0011927e: mov eax, 0x57; call dword ptr gs:[0x10]; 
0x000b6264: mov eax, 0x5a000b8a; pop ecx; push ebx; push dword ptr [edi]; call esi; 
0x0011c4fe: mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x001631d2: mov eax, 0x5bffffff; pop esi; pop edi; ret; 
0x0011a7e0: mov eax, 0x5c; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011a830: mov eax, 0x5d; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0010997e: mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x00116fd0: mov eax, 0x60; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00117031: mov eax, 0x61; call dword ptr gs:[0x10]; 
0x00120fd1: mov eax, 0x65; call dword ptr gs:[0x10]; 
0x001243f5: mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00124f3c: mov eax, 0x66; mov ebx, 0xe; call dword ptr gs:[0x10]; 
0x00123be1: mov eax, 0x67; call dword ptr gs:[0x10]; 
0x000ceb60: mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000cebcc: mov eax, 0x68; mov edx, esi; call dword ptr gs:[0x10]; 
0x000ce9cc: mov eax, 0x69; call dword ptr gs:[0x10]; 
0x00122e00: mov eax, 0x6a; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0015a167: mov eax, 0x6afffff9; add byte ptr [eax - 0x73], dl; inc ebx; or al, 0x83; ret; 
0x00122f80: mov eax, 0x6b; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00122ec7: mov eax, 0x6c; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00120ffa: mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x0011924a: mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x0012390a: mov eax, 0x71; call dword ptr gs:[0x10]; 
0x000dd84a: mov eax, 0x72; call dword ptr gs:[0x10]; 
0x001192aa: mov eax, 0x73; call dword ptr gs:[0x10]; 
0x0002145c: mov eax, 0x744c7139; sbb dword ptr [ebp - 0x1ae26f70], ecx; jmp dword ptr [ebp + 0x33]; 
0x00123d1a: mov eax, 0x74; call dword ptr gs:[0x10]; 
0x00125a8e: mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00125b9d: mov eax, 0x75; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x00125a48: mov eax, 0x75; mov ebx, 0xb; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x0017a3b9: mov eax, 0x75; mov ebx, 3; call dword ptr gs:[0x10]; 
0x001268d4: mov eax, 0x75; xor esi, esi; mov ebx, 0x18; or dh, 1; call dword ptr gs:[0x10]; 
0x00125d34: mov eax, 0x75; xor esi, esi; mov ebx, 0xe; or dh, 1; call dword ptr gs:[0x10]; 
0x00118d62: mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00037769: mov eax, 0x77; int 0x80; 
0x000de347: mov eax, 0x78; call dword ptr gs:[0x10]; 
0x001212ef: mov eax, 0x78; mov dword ptr [ecx], ebx; int 0x80; 
0x001185de: mov eax, 0x79; call dword ptr gs:[0x10]; 
0x000dd61a: mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x001238e1: mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x0011c531: mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x0004aa77: mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x000dfd20: mov eax, 0x7e; pop ebx; ret; 
0x00036298: mov eax, 0x7f800000; and edx, 0x7fffffff; sub eax, edx; shr eax, 0x1f; ret; 
0x001239d1: mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x000dfd07: mov eax, 0x7f; cmovne eax, edx; ret; 
0x000dfcbe: mov eax, 0x7f; mov edx, 0x7d00; pop ebx; cmove eax, edx; ret; 
0x000dfc81: mov eax, 0x7f; mov edx, 0x7fffffff; pop ebx; cmove eax, edx; ret; 
0x000dfce0: mov eax, 0x7f; mov edx, 0xfa; pop ebx; cmove eax, edx; ret; 
0x000dfca3: mov eax, 0x7f; mov edx, 0xfde8; pop ebx; cmove eax, edx; ret; 
0x000dfc51: mov eax, 0x7f; mov edx, 0xfffa; cmove eax, edx; pop ebx; ret; 
0x00123afb: mov eax, 0x80; call dword ptr gs:[0x10]; 
0x0016bb3d: mov eax, 0x81000062; ret; 
0x0016ba3d: mov eax, 0x81000063; ret; 
0x00123a01: mov eax, 0x81; call dword ptr gs:[0x10]; 
0x0018813d: mov eax, 0x81fffe9c; ret; 
0x00187d3d: mov eax, 0x81fffea0; ret; 
0x0018763d: mov eax, 0x81fffea7; ret; 
0x0018723d: mov eax, 0x81fffeab; ret; 
0x0017e33d: mov eax, 0x81ffff3a; ret; 
0x00123aba: mov eax, 0x82; call dword ptr gs:[0x10]; 
0x00123cf6: mov eax, 0x83; call dword ptr gs:[0x10]; 
0x0005d4d6: mov eax, 0x83fffffb; in al, dx; or al, 0x89; ret; 
0x0012702e: mov eax, 0x83fffffc; ret 0x8902; 
0x000df5ba: mov eax, 0x84; call dword ptr gs:[0x10]; 
0x0010b1aa: mov eax, 0x85; call dword ptr gs:[0x10]; 
0x00143a6b: mov eax, 0x85fffffb; ror byte ptr [edi], 0x45; fsubr st(1); ret 0xfffe; 
0x00104c57: mov eax, 0x85fffffe; ror byte ptr [edi], 0x44; ret 0xec83; 
0x0012393e: mov eax, 0x86; call dword ptr gs:[0x10]; 
0x00121a7a: mov eax, 0x88; call dword ptr gs:[0x10]; 
0x00121a7a: mov eax, 0x88; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0008dff7: mov eax, 0x89000000; inc esp; and al, 0x20; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x000388d1: mov eax, 0x89000000; inc esp; and al, 0x20; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x00097184: mov eax, 0x89000005; ret 0x708d; 
0x000501a4: mov eax, 0x89ffffc9; fld dword ptr [ebx - 0x361f7b]; jmp dword ptr [eax]; 
0x0004f04a: mov eax, 0x89ffffc9; ret 0xe283; 
0x000c62a8: mov eax, 0x89ffffc9; test dword ptr [eax - 0x76000037], esi; ret; 
0x0005d484: mov eax, 0x89fffffb; ret 0xb589; 
0x0009a3fa: mov eax, 0x89fffffe; inc esp; and al, 0xc; call dword ptr [edx]; 
0x0005b999: mov eax, 0x8bfffffb; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xd801; 
0x0005e366: mov eax, 0x8bfffffb; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xf001; 
0x0010a404: mov eax, 0x8c; call dword ptr gs:[0x10]; 
0x0010a34f: mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000c2a04: mov eax, 0x8dfff6cf; cmp dword ptr [eax], -0x68; stc; call dword ptr [eax - 0x73]; 
0x0003d7d7: mov eax, 0x8dfffffe; je 0x3d804; add byte ptr [eax + 0x244cb60f], dl; sbb byte ptr [ecx], bh; ret; 
0x0010abee: mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x0011c5ab: mov eax, 0x90; call dword ptr gs:[0x10]; 
0x0011c577: mov eax, 0x90; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0016efbb: mov eax, 0x90fffffe; mov dword ptr [esp + 8], ecx; call eax; 
0x001172bb: mov eax, 0x91; call dword ptr gs:[0x10]; 
0x00117287: mov eax, 0x91; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011738b: mov eax, 0x92; call dword ptr gs:[0x10]; 
0x00145280: mov eax, 0x92; mov dword ptr [ebx + 0xc], 1; add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x00126f07: mov eax, 0x92; mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; call dword ptr gs:[0x10]; 
0x00126eb7: mov eax, 0x92; mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; mov edx, 0x40; call dword ptr gs:[0x10]; 
0x00117357: mov eax, 0x92; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x000df66a: mov eax, 0x93; call dword ptr gs:[0x10]; 
0x00118e42: mov eax, 0x94; call dword ptr gs:[0x10]; 
0x0011c6ce: mov eax, 0x96; call dword ptr gs:[0x10]; 
0x0011c6fe: mov eax, 0x97; call dword ptr gs:[0x10]; 
0x0011c72a: mov eax, 0x98; call dword ptr gs:[0x10]; 
0x0011c754: mov eax, 0x99; call dword ptr gs:[0x10]; 
0x000faf8e: mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x00087675: mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x00086877: mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x00087643: mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x0008fe34: mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0008fe34: mov eax, 0x9e; call dword ptr gs:[0x10]; ret; 
0x000fb06a: mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x000fb09a: mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x000fb134: mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x0012102e: mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x00123cbb: mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x001116fb: mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x001116c7: mov eax, 0xa8; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00123c51: mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x0010c26a: mov eax, 0xa; call dword ptr gs:[0x10]; 
0x00149e23: mov eax, 0xab28868d; stc; call dword ptr [eax - 0x73]; 
0x00037760: mov eax, 0xad; int 0x80; 
0x00037808: mov eax, 0xae; call dword ptr gs:[0x10]; 
0x00086a41: mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x00091674: mov eax, 0xaf; mov dword ptr [esp + 0x24], ecx; mov edx, ecx; mov ecx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x000872da: mov eax, 0xaf; mov ebx, 2; mov esi, 8; call dword ptr gs:[0x10]; 
0x000875c9: mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x000918b6: mov eax, 0xaf; xor edx, edx; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00037980: mov eax, 0xb0; mov ebx, dword ptr [esp + 8]; mov ecx, 8; call dword ptr gs:[0x10]; 
0x0003866a: mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x00038609: mov eax, 0xb1; mov esi, 8; mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x000388d9: mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x00037a10: mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x000379e2: mov eax, 0xb3; mov ecx, 8; call dword ptr gs:[0x10]; 
0x00103b55: mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x00103b21: mov eax, 0xb4; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00103c35: mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x00103c01: mov eax, 0xb5; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0010b25b: mov eax, 0xb7; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00197a62: mov eax, 0xb8000000; or byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x0012396e: mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x0012399e: mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x000de881: mov eax, 0xb; call dword ptr gs:[0x10]; 
0x00037f9e: mov eax, 0xba; call dword ptr gs:[0x10]; 
0x00112106: mov eax, 0xbb; call dword ptr gs:[0x10]; 
0x000de3b5: mov eax, 0xbe; int 0x80; 
0x00116900: mov eax, 0xbf; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000eddef: mov eax, 0xc0833803; add al, 0x39; ret 0xf775; 
0x000ced1e: mov eax, 0xc189051e; ror ecx, 2; cmp ecx, 0x28f5c28; jbe 0xced38; mov eax, edx; ret; 
0x00122dcf: mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x00122fe0: mov eax, 0xc3; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00159fba: mov eax, 0xc4830000; adc byte ptr [ebp - 0x7c398b40], al; ret; 
0x0002fa49: mov eax, 0xc4830006; or al, 0x89; ret; 
0x0003aecd: mov eax, 0xc4830007; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00122f4f: mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x00123080: mov eax, 0xc4; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00122e8f: mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x00123030: mov eax, 0xc5; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0010bbf1: mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x000df304: mov eax, 0xc7; call dword ptr gs:[0x10]; 
0x000df304: mov eax, 0xc7; call dword ptr gs:[0x10]; ret; 
0x000df344: mov eax, 0xc8; call dword ptr gs:[0x10]; 
0x000df344: mov eax, 0xc8; call dword ptr gs:[0x10]; ret; 
0x000df324: mov eax, 0xc9; call dword ptr gs:[0x10]; 
0x000df324: mov eax, 0xc9; call dword ptr gs:[0x10]; ret; 
0x0010b17a: mov eax, 0xc; call dword ptr gs:[0x10]; 
0x00197ab6: mov eax, 0xc; pop edi; ret; 
0x00083dec: mov eax, 0xc; pop esi; pop edi; ret; 
0x000df364: mov eax, 0xca; call dword ptr gs:[0x10]; 
0x000df364: mov eax, 0xca; call dword ptr gs:[0x10]; ret; 
0x00118030: mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x001180d0: mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x000df38e: mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x000da7f0: mov eax, 0xce; call dword ptr gs:[0x10]; 
0x0010bbc1: mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000df745: mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x0011817d: mov eax, 0xd0; mov ebx, edx; call dword ptr gs:[0x10]; 
0x000df6c1: mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000df7f5: mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x0011825d: mov eax, 0xd2; mov ebx, edx; call dword ptr gs:[0x10]; 
0x000df6f1: mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x0010bb91: mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x000df3dc: mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x000df47c: mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x001213fa: mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x001213fa: mov eax, 0xd7; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0012141a: mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x0012141a: mov eax, 0xd8; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00123c7e: mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x0011c661: mov eax, 0xda; call dword ptr gs:[0x10]; 
0x0011c631: mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x00105014: mov eax, 0xdb; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000d8f27: mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x000d8d6e: mov eax, 0xdc; cmovae esi, ecx; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0010a960: mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00115ab8: mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x0010ab38: mov eax, 0xdd; mov ecx, esi; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0010a8c8: mov eax, 0xdd; mov ecx, esi; mov edx, edi; call dword ptr gs:[0x10]; 
0x00088a80: mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x00123f04: mov eax, 0xe0; call dword ptr gs:[0x10]; ret; 
0x0011f53b: mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x0011f4cb: mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x0011f39b: mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x0011f3d6: mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x0011f436: mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x0011f306: mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x0011f401: mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x0011f461: mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x000c7354: mov eax, 0xe9ffffc9; push 0x31ffffea; inc dword ptr [ebx - 0x363743]; call dword ptr [eax]; 
0x000db932: mov eax, 0xe9fffffe; ret 0xfffc; 
0x0011f331: mov eax, 0xea; call dword ptr gs:[0x10]; 
0x0011f4fe: mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x0011f48e: mov eax, 0xec; call dword ptr gs:[0x10]; 
0x0011f35e: mov eax, 0xed; call dword ptr gs:[0x10]; 
0x00112136: mov eax, 0xef; call dword ptr gs:[0x10]; 
0x00083bf1: mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000890c9: mov eax, 0xf0; mov ebx, ebp; mov ecx, 7; mov esi, edx; call dword ptr gs:[0x10]; 
0x00088eac: mov eax, 0xf0; mov ebx, ebp; mov esi, ecx; call dword ptr gs:[0x10]; 
0x0008abd5: mov eax, 0xf0; mov ebx, edi; mov ecx, 7; mov esi, edx; call dword ptr gs:[0x10]; 
0x000831a9: mov eax, 0xf0; mov ecx, 0x80; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x00091acb: mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00086c78: mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000839ca: mov eax, 0xf0; mov ecx, 0x81; xor esi, esi; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x00089808: mov eax, 0xf0; mov ecx, 0x87; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x0008b3b6: mov eax, 0xf0; mov ecx, 7; mov dword ptr [ebx + 4], 0; mov esi, edx; call dword ptr gs:[0x10]; 
0x0008b030: mov eax, 0xf0; mov ecx, 8; mov esi, edx; call dword ptr gs:[0x10]; 
0x0008b8b3: mov eax, 0xf0; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0008c0bd: mov eax, 0xf0; mov edx, 0x7fffffff; setne cl; shl ecx, 7; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008d291: mov eax, 0xf0; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008a372: mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008505b: mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008c4d7: mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000857e2: mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00085ad7: mov eax, 0xf0; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008b531: mov eax, 0xf0; mov edx, 1; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000854ae: mov eax, 0xf0; mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x00085029: mov eax, 0xf0; mov edx, 1; xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00085cb3: mov eax, 0xf0; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008322d: mov eax, 0xf0; mov edx, 2; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0008b8f5: mov eax, 0xf0; mov esi, edx; call dword ptr gs:[0x10]; 
0x00088d97: mov eax, 0xf0; not ecx; and ecx, 0x80; call dword ptr gs:[0x10]; 
0x00085a17: mov eax, 0xf0; or edx, 2; call dword ptr gs:[0x10]; 
0x000849d9: mov eax, 0xf0; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x000830cc: mov eax, 0xf0; xor edx, edx; call dword ptr gs:[0x10]; 
0x001743cf: mov eax, 0xf0; xor esi, esi; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00084a50: mov eax, 0xf0; xor esi, esi; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00085551: mov eax, 0xf0; xor esi, esi; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008e260: mov eax, 0xf0; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00086823: mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x00087e6b: mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x0010994e: mov eax, 0xf; call dword ptr gs:[0x10]; 
0x0017a418: mov eax, 0xfb95d2e8; jmp dword ptr [esi - 0x70]; 
0x000dfd10: mov eax, 0xfc17; pop ebx; ret; 
0x00123a2a: mov eax, 0xfe; call dword ptr gs:[0x10]; 
0x00123a96: mov eax, 0xff; call dword ptr gs:[0x10]; 
0x000df194: mov eax, 0xfff6d6e8; jmp dword ptr [ebp - 0x75]; 
0x000dfd30: mov eax, 0xfffa; pop ebx; ret; 
0x00022114: mov eax, 0xffffffff; add esp, 0xc; ret; 
0x000801c4: mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x00147369: mov eax, 0xffffffff; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x1473bc; add esp, 0x1c; ret; 
0x0002b73f: mov eax, 0xffffffff; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00058aa2: mov eax, 0xffffffff; pop ebx; pop esi; pop edi; ret; 
0x00037754: mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0003764c: mov eax, 0xffffffff; pop ebx; ret; 
0x0003bd4f: mov eax, 0xffffffff; pop esi; pop edi; pop ebp; ret; 
0x00072269: mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x000216f1: mov eax, 0xffffffff; ret; 
0x000d6f09: mov eax, 1; add esp, 0xc; ret; 
0x000e9a5b: mov eax, 1; add esp, 4; pop ebx; pop esi; ret; 
0x00119923: mov eax, 1; add esp, 8; pop ebx; ret; 
0x00092e08: mov eax, 1; call 0x92d70; mov dword ptr [esp], esi; call ebx; 
0x0012130c: mov eax, 1; call dword ptr gs:[0x10]; 
0x0018b1b0: mov eax, 1; ja 0x18b1b9; neg eax; ret; 
0x0018c9f0: mov eax, 1; ja 0x18c9f9; neg eax; pop ebp; ret; 
0x00191df0: mov eax, 1; ja 0x191df9; neg eax; ret; 
0x001920f0: mov eax, 1; ja 0x1920f9; neg eax; pop ebp; ret; 
0x001922c0: mov eax, 1; ja 0x1922c9; neg eax; ret; 
0x00192da7: mov eax, 1; ja 0x192db0; neg eax; ret; 
0x00194058: mov eax, 1; ja 0x194061; neg eax; ret; 
0x001956d1: mov eax, 1; ja 0x1956da; neg eax; ret; 
0x00193cd6: mov eax, 1; jg 0x193ce0; neg eax; ret; 
0x00194001: mov eax, 1; jg 0x194010; neg eax; ret; 
0x00198131: mov eax, 1; jg 0x198140; neg eax; ret; 
0x000c9cd0: mov eax, 1; jg 0xc9cd9; neg eax; ret; 
0x000b541b: mov eax, 1; mov ecx, 0xffffffff; cmovb eax, ecx; ret; 
0x00072244: mov eax, 1; pop ebx; pop esi; pop edi; ret; 
0x0010e502: mov eax, 1; pop ebx; pop esi; ret; 
0x0011997e: mov eax, 1; pop ebx; ret; 
0x0004aea0: mov eax, 1; pop esi; pop edi; ret; 
0x00057a65: mov eax, 1; ret; 
0x0015e7c6: mov eax, 1; sbb eax, -1; add esp, 0xc; ret; 
0x000e0203: mov eax, 1; test ecx, ecx; js 0xe0210; ret; 
0x0015a756: mov eax, 2; pop ebx; pop esi; ret; 
0x000c9ee0: mov eax, 2; ret; 
0x00087db0: mov eax, 3; add esp, 0xc; ret; 
0x0010a1cb: mov eax, 3; call dword ptr gs:[0x10]; 
0x000d70ad: mov eax, 3; cmovne eax, edx; ret; 
0x0010a197: mov eax, 3; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011fbd1: mov eax, 3; pop ebx; pop esi; pop edi; ret; 
0x00088388: mov eax, 3; ret; 
0x00171ae4: mov eax, 4; add esp, 0xc; ret; 
0x0010a29b: mov eax, 4; call dword ptr gs:[0x10]; 
0x0010a267: mov eax, 4; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011fb6f: mov eax, 4; pop ebx; pop esi; pop edi; ret; 
0x00197a0d: mov eax, 4; pop edi; ret; 
0x000c9f00: mov eax, 4; ret; 
0x0013136b: mov eax, 5; pop ebx; pop esi; pop ebp; ret; 
0x000ffd78: mov eax, 5; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000c9f10: mov eax, 5; ret; 
0x0010aee2: mov eax, 6; call dword ptr gs:[0x10]; 
0x0013eb3b: mov eax, 6; call dword ptr gs:[0x10]; pop ebx; ret; 
0x00092c50: mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000c9f20: mov eax, 6; ret; 
0x000c9f30: mov eax, 7; ret; 
0x00171ad4: mov eax, 8; add esp, 0xc; ret; 
0x0010b0b6: mov eax, 8; call dword ptr gs:[0x10]; 
0x0009458a: mov eax, 8; cmova eax, ecx; mov dword ptr [edx + 0x3b6c], eax; ret; 
0x00197a66: mov eax, 8; pop edi; ret; 
0x0010c13e: mov eax, 9; call dword ptr gs:[0x10]; 
0x00104101: mov eax, 9; pop esi; pop edi; ret; 
0x00162f2b: mov eax, dword ptr [0]; mov dword ptr [eax + edx], ecx; ret; 
0x00116366: mov eax, dword ptr [0]; mov eax, dword ptr [eax + ebp]; mov dword ptr [esp + 0xc], eax; mov eax, edi; call dword ptr gs:[0x10]; 
0x000d8f96: mov eax, dword ptr [0x14]; mov dword ptr [esp + 0x13c], eax; xor eax, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x00108cd8: mov eax, dword ptr [0x14]; mov dword ptr [esp + 0x18c], eax; xor eax, eax; mov eax, 0x17f; call dword ptr gs:[0x10]; 
0x001162a1: mov eax, dword ptr [0x14]; mov dword ptr [esp + 0x5c], eax; xor eax, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00037a58: mov eax, dword ptr [0x26b48d]; add byte ptr [eax], al; add byte ptr [ebx - 0x13372], cl; jmp dword ptr [ebp - 0x75]; 
0x0009dba4: mov eax, dword ptr [0x440fffe8]; ret 0x66c3; 
0x000a612c: mov eax, dword ptr [0x5bfffffd]; ret; 
0x0008d0a1: mov eax, dword ptr [0x68]; mov dword ptr [edx + 0x1c], eax; xor eax, eax; pop ebx; ret; 
0x00182a54: mov eax, dword ptr [0x81fffef3]; ret; 
0x00181f54: mov eax, dword ptr [0x81fffefe]; ret; 
0x00180d54: mov eax, dword ptr [0x81ffff10]; ret; 
0x0017e154: mov eax, dword ptr [0x81ffff3c]; ret; 
0x001183d3: mov eax, dword ptr [0x83000000]; in al, dx; or al, 0x89; ret; 
0x0007acab: mov eax, dword ptr [0x89000a5d]; ret; 
0x000679bb: mov eax, dword ptr [0x89ffffdf]; test dword ptr [edi + esi*8 - 1], esi; jmp ptr [ecx]; ret; 
0x0005b993: mov eax, dword ptr [0x8b000014]; test dword ptr [eax - 0x74000005], edi; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xd801; 
0x00154b1b: mov eax, dword ptr [0x8dffedae]; test dword ptr [eax], ebp; scasd eax, dword ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x000980eb: mov eax, dword ptr [0x9000000]; ret; 
0x0015bcb5: mov eax, dword ptr [0xc4830000]; adc byte ptr [ebp - 0x7c648b40], al; in al, dx; add al, 0x83; ret; 
0x0015bce7: mov eax, dword ptr [0xc4830000]; adc byte ptr [ebp - 0x7ce58b40], al; in al, dx; add al, 0x83; ret; 
0x000b60fb: mov eax, dword ptr [0xc483fff6]; or al, 0x89; ret; 
0x000ddce4: mov eax, dword ptr [0xc]; test eax, eax; jne 0xddd08; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x000827cc: mov eax, dword ptr [8]; mov byte ptr [eax + 0x4fe], 0; ret; 
0x000de33a: mov eax, dword ptr [8]; mov ebx, 0x1200011; lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x0008d765: mov eax, dword ptr [8]; ret; 
0x000886d5: mov eax, dword ptr [8]; xor edx, edx; lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x0002b8ce: mov eax, dword ptr [eax + 0x1014]; ret; 
0x00078123: mov eax, dword ptr [eax + 0x10]; add esp, 4; pop ebx; pop esi; jmp eax; 
0x0014df98: mov eax, dword ptr [eax + 0x10]; ret; 
0x00118315: mov eax, dword ptr [eax + 0x10]; test eax, eax; je 0x11831d; ret; 
0x000818de: mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x00094ef9: mov eax, dword ptr [eax + 0x14]; mov dword ptr [eax + 0x10], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x00166b78: mov eax, dword ptr [eax + 0x14]; ret; 
0x001311fc: mov eax, dword ptr [eax + 0x18]; ret; 
0x000b5946: mov eax, dword ptr [eax + 0x1ac]; ret; 
0x000b5956: mov eax, dword ptr [eax + 0x1b0]; ret; 
0x000b5966: mov eax, dword ptr [eax + 0x1b4]; ret; 
0x000b5976: mov eax, dword ptr [eax + 0x1b8]; ret; 
0x000b5986: mov eax, dword ptr [eax + 0x1bc]; ret; 
0x000b5996: mov eax, dword ptr [eax + 0x1c0]; ret; 
0x000b59a6: mov eax, dword ptr [eax + 0x1c4]; ret; 
0x000b59b6: mov eax, dword ptr [eax + 0x1c8]; ret; 
0x00082027: mov eax, dword ptr [eax + 0x1c]; add esp, 0x14; pop ebx; pop esi; jmp eax; 
0x00082804: mov eax, dword ptr [eax + 0x1c]; mov dword ptr gs:[0x80], eax; ret; 
0x0013132b: mov eax, dword ptr [eax + 0x1c]; push 5; ror eax, 9; xor eax, dword ptr gs:[0x18]; push esi; call eax; 
0x00158697: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x1586a7; sub esp, 0xc; push esi; call eax; 
0x00158b65: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x158b75; sub esp, 0xc; push esi; call eax; 
0x00159b74: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x159b84; sub esp, 0xc; push esi; call eax; 
0x00159e42: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x159cca; sub esp, 0xc; push edi; call eax; 
0x00159f2b: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x159f3b; sub esp, 0xc; push edi; call eax; 
0x0015a80f: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x15a81f; sub esp, 0xc; push edi; call eax; 
0x0015e2da: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x15e2ea; sub esp, 0xc; push esi; call eax; 
0x0015f843: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x15f853; sub esp, 0xc; push esi; call eax; 
0x0015f9ff: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x15fa0f; sub esp, 0xc; push edi; call eax; 
0x00160dc8: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x160dd8; sub esp, 0xc; push ebp; call eax; 
0x000b59c6: mov eax, dword ptr [eax + 0x1cc]; ret; 
0x000b59d6: mov eax, dword ptr [eax + 0x1d0]; ret; 
0x000b59e6: mov eax, dword ptr [eax + 0x1d4]; ret; 
0x000b5936: mov eax, dword ptr [eax + 0x1d8]; ret; 
0x00166484: mov eax, dword ptr [eax + 0x20]; jmp eax; 
0x0015aab7: mov eax, dword ptr [eax + 0x2398]; sub esp, 8; push 0; push ebx; call dword ptr [eax + 0x14]; 
0x0016649c: mov eax, dword ptr [eax + 0x24]; jmp eax; 
0x000828be: mov eax, dword ptr [eax + 0x24]; mov byte ptr gs:[0x4fe], al; cmp eax, 1; je 0x828d0; ret; 
0x001280d4: mov eax, dword ptr [eax + 0x24]; ret; 
0x0011f2d9: mov eax, dword ptr [eax + 0x24]; test eax, eax; cmove eax, edx; ret; 
0x0002fdb4: mov eax, dword ptr [eax + 0x28]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x0002fd23: mov eax, dword ptr [eax + 0x28]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0015e4a4: mov eax, dword ptr [eax + 0x2c]; add eax, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x00164654: mov eax, dword ptr [eax + 0x30]; add eax, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0002fd84: mov eax, dword ptr [eax + 0x30]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x0002fce3: mov eax, dword ptr [eax + 0x30]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0003accf: mov eax, dword ptr [eax + 0x34]; add esp, 4; pop ebx; pop esi; ret; 
0x0002ff5c: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x0002ff3c: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x0002ff1c: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x0002fe9c: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x0002fedc: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x0002fe3c: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x0002febc: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x0002fe7c: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x0002fdfc: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x0002fe5c: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x0002fefc: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x0002fe1c: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x00080eb8: mov eax, dword ptr [eax + 0x34]; ret; 
0x0007ff07: mov eax, dword ptr [eax + 0x34]; test eax, eax; jne 0x7ff00; ret; 
0x0011f5d0: mov eax, dword ptr [eax + 0x368]; mov ecx, dword ptr [esp + 8]; mov dword ptr [ecx], eax; mov eax, 1; ret; 
0x0011f658: mov eax, dword ptr [eax + 0x368]; pop ebx; ret; 
0x0002ff7c: mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0007942b: mov eax, dword ptr [eax + 0x38]; test eax, eax; js 0x79438; ret; 
0x000819d0: mov eax, dword ptr [eax + 0x3a0]; mov dword ptr [esp + 0x10], edx; mov eax, dword ptr [eax + 4]; add esp, 0xc; jmp eax; 
0x0008834e: mov eax, dword ptr [eax + 0x3a28]; ret; 
0x0002ff9c: mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0011f5b8: mov eax, dword ptr [eax + 0x44]; mov ecx, dword ptr [esp + 8]; mov dword ptr [ecx], eax; mov eax, 1; ret; 
0x0011f650: mov eax, dword ptr [eax + 0x44]; pop ebx; ret; 
0x00127a4d: mov eax, dword ptr [eax + 0x4c]; call 0x127920; add esp, 4; ret; 
0x001719a8: mov eax, dword ptr [eax + 0x4c]; ret; 
0x001719c8: mov eax, dword ptr [eax + 0x50]; ret; 
0x00171a58: mov eax, dword ptr [eax + 0x54]; ret; 
0x0002ed90: mov eax, dword ptr [eax + 0x58]; ret; 
0x001719d8: mov eax, dword ptr [eax + 0x5c]; ret; 
0x000384de: mov eax, dword ptr [eax + 0x64]; ret; 
0x000384be: mov eax, dword ptr [eax + 0x68]; ret; 
0x00075d98: mov eax, dword ptr [eax + 0x88]; push esi; call dword ptr [eax + 0x34]; 
0x000829b6: mov eax, dword ptr [eax + 0x98]; shr eax, 0xb; and eax, 1; mov dword ptr [edx + 0x19f0], eax; ret; 
0x001312fd: mov eax, dword ptr [eax + 0xc]; push esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00091217: mov eax, dword ptr [eax + 0xc]; test eax, eax; jne 0x91210; pop ebx; ret; 
0x00080e8e: mov eax, dword ptr [eax + 0xce0]; ret; 
0x0002279e: mov eax, dword ptr [eax + 0xfec]; ret; 
0x000227be: mov eax, dword ptr [eax + 0xff0]; ret; 
0x0009a64c: mov eax, dword ptr [eax + 4]; add ecx, edx; test eax, eax; jne 0x9a648; mov eax, ecx; ret; 
0x001657b0: mov eax, dword ptr [eax + 4]; add esp, 0x18; pop ebx; jmp eax; 
0x000819da: mov eax, dword ptr [eax + 4]; add esp, 0xc; jmp eax; 
0x0015afec: mov eax, dword ptr [eax + 4]; jmp eax; 
0x00083301: mov eax, dword ptr [eax + 4]; mov dword ptr [ecx + 4], eax; mov dword ptr [eax], ecx; mov dword ptr [edx + 0x924], 0; ret; 
0x0011f62e: mov eax, dword ptr [eax + 4]; pop ebx; ret; 
0x0014e250: mov eax, dword ptr [eax + 4]; test eax, eax; je 0x14e25c; cmp dword ptr [eax + 8], edx; jne 0x14e250; ret; 
0x0009a590: mov eax, dword ptr [eax + 4]; test eax, eax; jne 0x9a588; xor eax, eax; ret; 
0x001160d8: mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x000842dc: mov eax, dword ptr [eax + 8]; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00083162: mov eax, dword ptr [eax + 8]; mov byte ptr gs:[0x4fe], al; cmp eax, 1; je 0x83178; ret; 
0x00131343: mov eax, dword ptr [eax + 8]; mov dword ptr [esp], esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00082429: mov eax, dword ptr [eax + 8]; push dword ptr [esp + 0x30]; push edx; push ecx; call eax; 
0x0008437c: mov eax, dword ptr [eax + 8]; sar eax, 2; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00080b7c: mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x0011636b: mov eax, dword ptr [eax + ebp]; mov dword ptr [esp + 0xc], eax; mov eax, edi; call dword ptr gs:[0x10]; 
0x0002fd87: mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x0002f7b2: mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0017196c: mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x0017198c: mov eax, dword ptr [eax + edx*4]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x0002fce6: mov eax, dword ptr [eax + edx*4]; ret; 
0x00133dfe: mov eax, dword ptr [eax - 0x114]; add eax, dword ptr gs:[0]; ret; 
0x00051fab: mov eax, dword ptr [eax - 0x11c]; push dword ptr [eax]; call 0x685c0; add esp, 0x1c; ret; 
0x0007523b: mov eax, dword ptr [eax - 0x11c]; push dword ptr [eax]; call 0x6d850; add esp, 0x1c; ret; 
0x000f7722: mov eax, dword ptr [eax - 0x120]; mov edx, dword ptr [eax]; mov dword ptr [eax], ecx; mov eax, edx; ret; 
0x00021dee: mov eax, dword ptr [eax - 0x134]; add eax, dword ptr gs:[0]; ret; 
0x000dfe47: mov eax, dword ptr [eax - 0x134]; cmp dword ptr [edx + eax], 0x26; mov edx, 0xffffffff; mov eax, 0x20; cmovne eax, edx; ret; 
0x00038275: mov eax, dword ptr [eax - 0x134]; mov dword ptr [edx + eax], 0x26; mov eax, 0xffffffff; ret; 
0x0002fffe: mov eax, dword ptr [eax - 0x13c]; add eax, dword ptr gs:[0]; ret; 
0x0002fc95: mov eax, dword ptr [eax - 0x13c]; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x0002fc65: mov eax, dword ptr [eax - 0x13c]; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x0002fc35: mov eax, dword ptr [eax - 0x13c]; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x0002fb75: mov eax, dword ptr [eax - 0x13c]; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x0002fbd5: mov eax, dword ptr [eax - 0x13c]; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x0002fae5: mov eax, dword ptr [eax - 0x13c]; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x0002fba5: mov eax, dword ptr [eax - 0x13c]; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x0002fb45: mov eax, dword ptr [eax - 0x13c]; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x0002fd45: mov eax, dword ptr [eax - 0x13c]; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x0002fb15: mov eax, dword ptr [eax - 0x13c]; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x0002fc05: mov eax, dword ptr [eax - 0x13c]; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x0002fab5: mov eax, dword ptr [eax - 0x13c]; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x0003003e: mov eax, dword ptr [eax - 0x144]; add eax, dword ptr gs:[0]; ret; 
0x0009a344: mov eax, dword ptr [eax - 0x148]; call dword ptr [eax]; 
0x00147125: mov eax, dword ptr [eax - 0x14]; mov eax, dword ptr [edx + eax]; ret; 
0x0002ed85: mov eax, dword ptr [eax - 0x68]; mov eax, dword ptr [edx + eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x58]; ret; 
0x0002f7a5: mov eax, dword ptr [eax - 0x68]; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0002ece8: mov eax, dword ptr [eax - 0x68]; push dword ptr [edx + eax]; push dword ptr [esp + 0x1c]; call 0x2ed00; add esp, 0x1c; ret; 
0x00054be0: mov eax, dword ptr [eax - 0x68]; push dword ptr [edx + eax]; push dword ptr [esp + 0x1c]; call 0x523c0; add esp, 0x1c; ret; 
0x0009b2d8: mov eax, dword ptr [eax - 0x68]; push dword ptr [edx + eax]; push dword ptr [esp + 0x1c]; call 0xa2400; add esp, 0x1c; ret; 
0x00057bfc: mov eax, dword ptr [eax - 0x70]; push dword ptr [eax]; call 0x59450; add esp, 0x1c; ret; 
0x0007529c: mov eax, dword ptr [eax - 0x70]; push dword ptr [eax]; call 0x60130; add esp, 0x1c; ret; 
0x0018ef50: mov eax, dword ptr [eax - 0x7400086c]; test byte ptr [ebx - 0x86b80], al; sub eax, ecx; pop ebx; ret; 
0x0016ed09: mov eax, dword ptr [eax - 0xc8]; call dword ptr [eax + 0x378]; add esp, 0x1c; ret; 
0x001280ce: mov eax, dword ptr [eax - 0xc8]; mov eax, dword ptr [eax + 0x24]; ret; 
0x0011f2d3: mov eax, dword ptr [eax - 0xc8]; mov eax, dword ptr [eax + 0x24]; test eax, eax; cmove eax, edx; ret; 
0x0003001e: mov eax, dword ptr [eax - 0xc]; add eax, dword ptr gs:[0]; ret; 
0x00131226: mov eax, dword ptr [eax - 0xd4]; push dword ptr [eax]; push dword ptr [esp + 0x1c]; call 0x12fc60; add esp, 0x1c; ret; 
0x00188353: mov eax, dword ptr [eax - 4]; mov dword ptr [edx - 5], ecx; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x000c1ddc: mov eax, dword ptr [eax]; add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ret 0xd839; 
0x0007b0c8: mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x0007b078: mov eax, dword ptr [eax]; and eax, 0x804; ret; 
0x0008bbbc: mov eax, dword ptr [eax]; and eax, 0xf000dff; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0008660c: mov eax, dword ptr [eax]; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00094393: mov eax, dword ptr [eax]; cmp eax, 0x3fc; jbe 0x943a0; ret; 
0x00094573: mov eax, dword ptr [eax]; cmp eax, 0x50; jbe 0x94580; ret; 
0x000943d3: mov eax, dword ptr [eax]; cmp eax, 0xffff; jbe 0x943e0; ret; 
0x0015afd4: mov eax, dword ptr [eax]; jmp eax; 
0x00075bd0: mov eax, dword ptr [eax]; mov dword ptr [edx], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x0004ca9a: mov eax, dword ptr [eax]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], eax; fld xword ptr [esp]; add esp, 0x1c; ret; 
0x0002fdb2: mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x28]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x0002fd21: mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x28]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0002fd82: mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x30]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x0002fce1: mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x30]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0003accd: mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x34]; add esp, 4; pop ebx; pop esi; ret; 
0x0002ed8e: mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x58]; ret; 
0x00161f0d: mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x0015dce0: mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x00161371: mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push ebx; push eax; call dword ptr [edx + 4]; 
0x0015dda3: mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [edx + 8]; 
0x0015db90: mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push esi; push eax; call dword ptr [edx + 4]; 
0x00089650: mov eax, dword ptr [eax]; mov edx, dword ptr [esp + 8]; shr eax, 0x13; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0008e4f8: mov eax, dword ptr [eax]; mov edx, dword ptr [esp + 8]; shr eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00082339: mov eax, dword ptr [eax]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x3c]; push ecx; call eax; 
0x000d9108: mov eax, dword ptr [eax]; ret; 
0x0008bb5c: mov eax, dword ptr [eax]; sar eax, 0x1c; and eax, 3; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000865ec: mov eax, dword ptr [eax]; sar eax, 1; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0008bb7c: mov eax, dword ptr [eax]; shr eax, 0x1f; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0007be98: mov eax, dword ptr [eax]; shr eax, 4; and eax, 1; ret; 
0x0007beb8: mov eax, dword ptr [eax]; shr eax, 5; and eax, 1; ret; 
0x0002df8c: mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x0011e7e4: mov eax, dword ptr [eax]; test eax, eax; je 0x11e830; call eax; 
0x0011e926: mov eax, dword ptr [eax]; test eax, eax; je 0x11e9c8; call eax; 
0x000de76b: mov eax, dword ptr [eax]; test eax, eax; je 0xde773; call eax; 
0x00080b56: mov eax, dword ptr [eax]; test eax, eax; jne 0x80b50; ret; 
0x00086818: mov eax, dword ptr [ebp + 0x18]; mov ebx, dword ptr [esi + 0x68]; mov ecx, dword ptr [eax + 4]; mov edx, dword ptr [eax]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x00159b0f: mov eax, dword ptr [ebp + 0x20]; mov dword ptr [esp], ebp; call dword ptr [eax + 0x10]; 
0x00161336: mov eax, dword ptr [ebp + 0x3c]; push dword ptr [ebp + 0x50]; mov ebx, dword ptr [esp + 0x3c]; push ebx; call dword ptr [eax + 0x14]; 
0x001613a2: mov eax, dword ptr [ebp + 0x3c]; push ebx; call dword ptr [eax + 0x10]; 
0x0015e2be: mov eax, dword ptr [ebp + 0xb0]; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x0016474c: mov eax, dword ptr [ebp + 0xc]; push edi; call dword ptr [eax + 0x10]; 
0x001280eb: mov eax, dword ptr [ebp + 4]; call 0x127590; pop edx; pop ecx; pop eax; ret; 
0x000e177f: mov eax, dword ptr [ebp - 0x19c]; call dword ptr [eax + 0x10]; 
0x000e1483: mov eax, dword ptr [ebp - 0x19c]; push dword ptr [ebp - 0x198]; call dword ptr [eax + 0x14]; 
0x00105e0f: mov eax, dword ptr [ebp - 0x1ac]; call dword ptr [eax + 0x10]; 
0x001059fb: mov eax, dword ptr [ebp - 0x1ac]; push dword ptr [ebp - 0x1a8]; call dword ptr [eax + 0x14]; 
0x000748a2: mov eax, dword ptr [ebp - 0x20]; sub esp, 4; push dword ptr [ebp - 0x1c]; push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x00073904: mov eax, dword ptr [ebp - 0x20]; sub esp, 4; push ebx; push edi; push esi; call dword ptr [eax + 0x2c]; 
0x0007e96b: mov eax, dword ptr [ebp - 0x28]; sub esp, 8; push -1; push dword ptr [eax]; mov eax, dword ptr [ebp - 0x2c]; call dword ptr [eax + 0xc]; 
0x0007e975: mov eax, dword ptr [ebp - 0x2c]; call dword ptr [eax + 0xc]; 
0x000d9970: mov eax, dword ptr [ebp - 0x30]; push esi; call eax; 
0x000d94d8: mov eax, dword ptr [ebp - 0x34]; test eax, eax; je 0xd9500; sub esp, 0xc; push esi; call eax; 
0x0008be46: mov eax, dword ptr [ebp - 0x3c]; add esp, 0x10; call eax; 
0x0011dc97: mov eax, dword ptr [ebp - 0x3c]; push dword ptr [ebp - 0x38]; mov dword ptr [ebp - 0x30], edx; call eax; 
0x0007ab9a: mov eax, dword ptr [ebp - 0x3c]; sub esp, 0xc; push esi; call dword ptr [eax + 0x30]; 
0x0013f0ca: mov eax, dword ptr [ebp - 0x40]; mov ebx, dword ptr [ebp - 0x30]; mov dword ptr [edi + esi], eax; mov eax, 6; call dword ptr gs:[0x10]; 
0x00077500: mov eax, dword ptr [ebp - 0x40]; sub esp, 8; push -1; push dword ptr [edi]; call dword ptr [eax + 0xc]; 
0x0016e7d6: mov eax, dword ptr [ebp - 0x5c]; push dword ptr [ebp - 0x60]; push 0x28; push dword ptr [ebp - 0x50]; call eax; 
0x001589b8: mov eax, dword ptr [ebp]; mov dword ptr [esp + 4], edx; sub esp, 0xc; mov ecx, dword ptr [eax + 0x20]; push eax; call dword ptr [ecx + 0xc]; 
0x001588f9: mov eax, dword ptr [ebp]; sub esp, 8; mov edx, dword ptr [eax + 0x20]; push esi; push eax; call dword ptr [edx + 4]; 
0x001589ee: mov eax, dword ptr [ebx + 0x10]; add esp, 0xc; push dword ptr [ebx + 0x229c]; push dword ptr [esp + 0x10]; push esi; call dword ptr [eax + 0xc]; 
0x0007b112: mov eax, dword ptr [ebx + 0x10]; mov dword ptr [ebx + 0x14], eax; add esp, 8; pop ebx; ret; 
0x001589de: mov eax, dword ptr [ebx + 0x10]; push 0; push esi; call dword ptr [eax + 0x14]; 
0x001588e3: mov eax, dword ptr [ebx + 0x10]; push dword ptr [esp + 0x14]; push esi; call dword ptr [eax + 4]; 
0x0015892e: mov eax, dword ptr [ebx + 0x10]; push esi; call dword ptr [eax + 0x10]; 
0x00158b4f: mov eax, dword ptr [ebx + 0x10]; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x0015a093: mov eax, dword ptr [ebx + 0x14]; add esp, 4; pop ebx; pop esi; jmp eax; 
0x0009a54d: mov eax, dword ptr [ebx + 0x20]; je 0x9a560; sub esp, 8; push ecx; push dword ptr [ebx + 0x24]; call eax; 
0x0015aa6d: mov eax, dword ptr [ebx + 0x2398]; push esi; call dword ptr [eax + 0x10]; 
0x0016ea9b: mov eax, dword ptr [ebx + 0x3a0]; push ecx; push edx; call dword ptr [eax + 0x24]; 
0x0016eb3b: mov eax, dword ptr [ebx + 0x3a0]; push ecx; push edx; call dword ptr [eax + 0x28]; 
0x00160864: mov eax, dword ptr [ebx + 0x50]; lea edx, [esp + 0xac]; push edx; push esi; call dword ptr [eax + 4]; 
0x00160848: mov eax, dword ptr [ebx + 0x50]; push dword ptr [ebx + 0x48]; push dword ptr [esp + 0x2c]; push esi; call dword ptr [eax + 0xc]; 
0x001511f2: mov eax, dword ptr [ebx + 0xa2ac]; ror eax, 9; xor eax, dword ptr gs:[0x18]; push eax; call edx; 
0x00158e83: mov eax, dword ptr [ebx + 0xa340]; test eax, eax; je 0x158e98; add esp, 8; pop ebx; ret; 
0x0015db6c: mov eax, dword ptr [ebx + 0xb0]; lea edx, [esp + 0xac]; push edx; push esi; call dword ptr [eax + 4]; 
0x001309a3: mov eax, dword ptr [ebx + 0xc]; push esi; mov dword ptr [ebp - 0x44], eax; push 0; push 0x1000006; call edx; 
0x00130855: mov eax, dword ptr [ebx + 0xc]; push esi; mov dword ptr [ebp - 0x44], eax; push dword ptr [ebp - 0xbc]; push 0; call edx; 
0x0015b17d: mov eax, dword ptr [ebx + 0xc]; sub esi, eax; push esi; push eax; push dword ptr [ebx]; call dword ptr [ebx + 8]; 
0x001596d3: mov eax, dword ptr [ebx + 4]; add esi, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x0015920d: mov eax, dword ptr [ebx + 4]; add esp, 0x14; push ebx; call dword ptr [eax + 0x10]; 
0x001596e6: mov eax, dword ptr [ebx + 4]; pop edx; push edi; push ebx; call dword ptr [eax + 0x14]; 
0x0015f115: mov eax, dword ptr [ebx + 4]; push 8; push ebx; call dword ptr [eax + 0x18]; 
0x0015b09b: mov eax, dword ptr [ebx + 4]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax + 4]; 
0x0015b04b: mov eax, dword ptr [ebx + 4]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax]; 
0x001590e6: mov eax, dword ptr [ebx + 4]; push ebx; call dword ptr [eax + 0x10]; 
0x0015f193: mov eax, dword ptr [ebx + 4]; push esi; push ebx; call dword ptr [eax + 0x24]; 
0x001596b0: mov eax, dword ptr [ebx + 4]; sub esp, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x00081ed0: mov eax, dword ptr [ebx + 8]; mov dword ptr [eax], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x0012c7ab: mov eax, dword ptr [ebx + 8]; mov dword ptr [ebx + 8], edx; add esp, 8; pop ebx; ret; 
0x001639e3: mov eax, dword ptr [ebx + 8]; push dword ptr [esp + 0x14]; push ebx; call dword ptr [eax]; 
0x00163bd2: mov eax, dword ptr [ebx + 8]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax + 0xc]; 
0x00163c33: mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 0x14]; 
0x00163b23: mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 4]; 
0x0008bf1c: mov eax, dword ptr [ebx + 8]; test eax, eax; je 0x8bf35; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x0011d84a: mov eax, dword ptr [ebx + 8]; test eax, eax; jne 0x11d87c; sub esp, 0xc; push dword ptr [ebx]; call esi; 
0x00191762: mov eax, dword ptr [ebx + eax*4 - 0x86b80]; sub eax, ecx; pop ebp; pop ebx; ret; 
0x0018ef55: mov eax, dword ptr [ebx + eax*4 - 0x86b80]; sub eax, ecx; pop ebx; ret; 
0x0015a764: mov eax, dword ptr [ebx + ecx*4 - 0x264]; mov dword ptr [esp + 0x10], edx; pop ebx; pop esi; jmp eax; 
0x00163260: mov eax, dword ptr [ebx - 0x3c]; pop ebx; pop esi; pop edi; ret; 
0x001631d0: mov eax, dword ptr [ebx - 0x48]; pop ebx; pop esi; pop edi; ret; 
0x001630a8: mov eax, dword ptr [ebx - 0x64]; pop ebx; pop esi; pop edi; ret; 
0x00163140: mov eax, dword ptr [ebx - 0xcc]; pop ebx; pop esi; pop edi; ret; 
0x0011e7db: mov eax, dword ptr [ebx - 0xdc]; add esp, 0x10; mov eax, dword ptr [eax]; test eax, eax; je 0x11e830; call eax; 
0x0011e91d: mov eax, dword ptr [ebx - 0xdc]; add esp, 0x10; mov eax, dword ptr [eax]; test eax, eax; je 0x11e9c8; call eax; 
0x00162849: mov eax, dword ptr [ebx]; add esp, 0x10; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x00174315: mov eax, dword ptr [ebx]; add esp, 4; pop ebx; pop esi; jmp eax; 
0x00162036: mov eax, dword ptr [ebx]; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x00161f16: mov eax, dword ptr [ebx]; mov edx, dword ptr [eax + 4]; mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x00161f08: mov eax, dword ptr [ebx]; sub esp, 0xc; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x00090b75: mov eax, dword ptr [ecx + 0x10]; mov dword ptr [edx + 0x10], eax; pop ebx; pop esi; ret; 
0x00130f66: mov eax, dword ptr [ecx + 0xc]; push esi; mov dword ptr [ebp - 0x44], eax; push edi; push dword ptr [ebp - 0xc0]; call edx; 
0x0007b058: mov eax, dword ptr [ecx + 0xc]; xor edx, edx; test eax, eax; setne dl; mov eax, edx; ret; 
0x000a81b4: mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; pop edi; ret; 
0x000a82e4: mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; ret; 
0x000b25d7: mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000a3dc4: mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edi; pop edi; ret; 
0x000a3ef4: mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edx; ret; 
0x000acbd4: mov eax, dword ptr [ecx + 4]; mov dword ptr [edx + 4], eax; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000acc34: mov eax, dword ptr [ecx + 4]; mov dword ptr [edx + 4], eax; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000ab564: mov eax, dword ptr [ecx + 4]; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x000a8195: mov eax, dword ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, [edx + 5]; pop edi; ret; 
0x000a82d5: mov eax, dword ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, [edx + 5]; ret; 
0x000a3db5: mov eax, dword ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edi; pop edi; ret; 
0x000a3ee5: mov eax, dword ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x0016659e: mov eax, dword ptr [ecx + 4]; push edx; push ecx; call dword ptr [eax + 0x24]; 
0x00165b2e: mov eax, dword ptr [ecx + 4]; push edx; push ecx; call dword ptr [eax + 4]; 
0x000acaba: mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x000acc1a: mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000ab45a: mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000ab5ba: mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000a8344: mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000a3f54: mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000acada: mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x000acc3a: mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000b266b: mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000ab47a: mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x000ab5da: mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000aca9b: mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x000acbfb: mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000b262c: mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop ebx; pop edi; ret; 
0x000ab43b: mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000ab59b: mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000a8364: mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000a3f74: mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000a8325: mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000a3f35: mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000764c2: mov eax, dword ptr [ecx + 8]; pop ebx; sub eax, edx; ret; 
0x00080bad: mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x0002fd1e: mov eax, dword ptr [ecx + eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x28]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0002fcde: mov eax, dword ptr [ecx + eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x30]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00128891: mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x00128751: mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x001284d1: mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x00128611: mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x00128251: mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x00128571: mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x001282f1: mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x00128391: mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x001286b1: mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x001281b1: mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x000a259a: mov eax, dword ptr [ecx + edx*4 - 0x8a0]; ret; 
0x000a256a: mov eax, dword ptr [ecx + edx*4 - 0x9c0]; ret; 
0x0006fd3d: mov eax, dword ptr [ecx + edx*4 - 0xbe0]; ret; 
0x00171f40: mov eax, dword ptr [ecx - 0x134]; mov edx, dword ptr gs:[0]; mov dword ptr [edx + eax], 0x16; xor eax, eax; ret; 
0x00159237: mov eax, dword ptr [ecx]; add byte ptr [ecx + 0xd0dc6c5], al; add byte ptr [edi + 0x31], dl; call dword ptr [esi - 0x42]; 
0x000a8080: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; lea eax, [edx + 3]; pop edi; ret; 
0x000a82b0: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; lea eax, [edx + 3]; ret; 
0x000a9ebd: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; lea eax, [edx + 4]; pop edi; pop ebx; ret; 
0x000a82c0: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; lea eax, [edx + 4]; ret; 
0x000a3ed0: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; mov eax, edx; ret; 
0x000a82d0: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, [edx + 5]; ret; 
0x000a3ee0: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x000a82e0: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; ret; 
0x000a3ef0: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edx; ret; 
0x000ab560: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 4]; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x000b2583: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000a5abd: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edi; pop edi; pop ebx; ret; 
0x000a3cb0: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x000a6b70: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; pop ebx; ret; 
0x000a3ec0: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; ret; 
0x00080b60: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; ret; 
0x000a8151: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; pop edi; ret; 
0x000a8291: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; ret; 
0x000a82a1: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; ret; 
0x000a3eb1: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x000b2554: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop ebx; pop edi; ret; 
0x000a3d81: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x000a3ea1: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; mov eax, edx; ret; 
0x00076169: mov eax, dword ptr [edi + 0x10]; pop esi; pop edi; jmp eax; 
0x00076009: mov eax, dword ptr [edi + 0x14]; pop esi; pop edi; jmp eax; 
0x00160db5: mov eax, dword ptr [edi + 0x50]; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x0010a9cf: mov eax, dword ptr [edi + 0xc]; mov dword ptr [esp + 0x28], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0015a458: mov eax, dword ptr [edi + 4]; and ebp, 0xfffffffc; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x0015a3dc: mov eax, dword ptr [edi + 4]; push 0x20; push edi; call dword ptr [eax + 0x18]; 
0x0015a483: mov eax, dword ptr [edi + 4]; push 8; push edi; call dword ptr [eax + 0x18]; 
0x00162e32: mov eax, dword ptr [edi + 4]; push ecx; push edi; call dword ptr [eax + 8]; 
0x00162e40: mov eax, dword ptr [edi + 4]; push edi; call dword ptr [eax + 0x10]; 
0x0015ac7b: mov eax, dword ptr [edi + 8]; push ebp; push dword ptr [esi + 0xc]; push edi; call dword ptr [eax + 0x10]; 
0x0015ac38: mov eax, dword ptr [edi + 8]; push ebp; push dword ptr [esi + 0xc]; push edi; call dword ptr [eax + 8]; 
0x00083ca6: mov eax, dword ptr [edi]; mov ebx, dword ptr [edi + 4]; mov ecx, dword ptr [edi + 8]; mov edx, dword ptr [edi + 0xc]; call dword ptr gs:[0x10]; 
0x0007b152: mov eax, dword ptr [edx + 0x10]; sub eax, dword ptr [edx + 0xc]; sar eax, 2; ret; 
0x000ed540: mov eax, dword ptr [edx + 0x14]; call 0xeacc0; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0007b160: mov eax, dword ptr [edx + 0x14]; sub eax, dword ptr [edx + 0x10]; ret; 
0x00081987: mov eax, dword ptr [edx + 0x18]; pop esi; jmp eax; 
0x0007b022: mov eax, dword ptr [edx + 0x1c]; sub eax, dword ptr [edx + 0x18]; sar eax, 2; ret; 
0x00162842: mov eax, dword ptr [edx + 0x20]; push edx; call dword ptr [eax + 0x10]; 
0x0007b030: mov eax, dword ptr [edx + 0x20]; sub eax, dword ptr [edx + 0x1c]; ret; 
0x00078dd1: mov eax, dword ptr [edx + 0x28]; cmp dword ptr [edx + 0x24], eax; cmovne eax, ecx; ret; 
0x0016ec87: mov eax, dword ptr [edx + 0x2c]; add esp, 0x34; pop ebx; pop esi; jmp eax; 
0x0016ece0: mov eax, dword ptr [edx + 0x3a0]; mov dword ptr [esp + 4], ecx; jmp dword ptr [eax + 0x30]; 
0x00087d84: mov eax, dword ptr [edx + 0x84]; and eax, 0x10; jne 0x87d98; add esp, 0xc; ret; 
0x00122839: mov eax, dword ptr [edx + 0xa0]; mov dword ptr [esp + 0x6c], eax; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x00166778: mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x001656f8: mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x00165710: mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0015930a: mov eax, dword ptr [edx + 4]; mov dword ptr [esp], edx; call dword ptr [eax + 0x10]; 
0x001593ae: mov eax, dword ptr [edx + 4]; push edx; call dword ptr [eax + 0x10]; 
0x00116100: mov eax, dword ptr [edx + 8]; and eax, 0x100f; ret; 
0x00081568: mov eax, dword ptr [edx + 8]; mov ecx, dword ptr [edx + 0x14]; cmp eax, ecx; cmovb eax, ecx; sub eax, dword ptr [edx + 0xc]; ret; 
0x00099afd: mov eax, dword ptr [edx + eax + 4]; sub ecx, 4; and eax, 1; cmovne eax, ecx; pop ebx; ret; 
0x0002ed8b: mov eax, dword ptr [edx + eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x58]; ret; 
0x0002f7ab: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0002fdab: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x28]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x0002fd7b: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x30]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x0002fc9b: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x0002fc6b: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x0002fc3b: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x0002fb7b: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x0002fbdb: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x0002faeb: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x0002fbab: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x0002fb4b: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x0002fd4b: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x0002fb1b: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x0002fc0b: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x0002fabb: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x0014712b: mov eax, dword ptr [edx + eax]; ret; 
0x00132024: mov eax, dword ptr [edx - 0x11c]; push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x685c0; add esp, 0x1c; ret; 
0x00133014: mov eax, dword ptr [edx - 0x11c]; push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x6d850; add esp, 0x1c; ret; 
0x00118021: mov eax, dword ptr [edx - 0x12c]; cmp byte ptr [eax], 0; je 0x118058; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x001180c1: mov eax, dword ptr [edx - 0x12c]; cmp byte ptr [eax], 0; je 0x1180f8; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x000da7e1: mov eax, dword ptr [edx - 0x12c]; cmp byte ptr [eax], 0; je 0xda818; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x000df3cd: mov eax, dword ptr [edx - 0x12c]; cmp byte ptr [eax], 0; je 0xdf408; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x000df46d: mov eax, dword ptr [edx - 0x12c]; cmp byte ptr [eax], 0; je 0xdf4a8; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x0009391e: mov eax, dword ptr [edx - 0x134]; mov dword ptr [ebx + eax], ecx; mov eax, 0xffffffff; pop ebx; ret; 
0x0011830f: mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x10]; test eax, eax; je 0x11831d; ret; 
0x000b5940: mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1ac]; ret; 
0x000b5950: mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1b0]; ret; 
0x000b5960: mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1b4]; ret; 
0x000b5970: mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1b8]; ret; 
0x000b5980: mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1bc]; ret; 
0x000b5990: mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1c0]; ret; 
0x000b59a0: mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1c4]; ret; 
0x000b59b0: mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1c8]; ret; 
0x000b59c0: mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1cc]; ret; 
0x000b59d0: mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1d0]; ret; 
0x000b59e0: mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1d4]; ret; 
0x000b5930: mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1d8]; ret; 
0x000829b0: mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x98]; shr eax, 0xb; and eax, 1; mov dword ptr [edx + 0x19f0], eax; ret; 
0x0008667f: mov eax, dword ptr [edx]; and eax, 0xfffffffe; or eax, dword ptr [esp + 8]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00083918: mov eax, dword ptr [edx]; mov ebx, dword ptr [edx + 4]; mov ecx, dword ptr [edx + 8]; mov edx, dword ptr [edx + 0xc]; call dword ptr gs:[0x10]; 
0x00083e58: mov eax, dword ptr [edx]; mov edx, 0x16; test eax, eax; cmovne eax, edx; ret; 
0x00076035: mov eax, dword ptr [edx]; pop ebx; pop esi; pop edi; ret; 
0x000761b5: mov eax, dword ptr [edx]; pop esi; pop edi; ret; 
0x0007446b: mov eax, dword ptr [edx]; ret; 
0x0007cd23: mov eax, dword ptr [esi + 0x10]; pop esi; pop edi; jmp eax; 
0x0002df08: mov eax, dword ptr [esi + 0x10]; test eax, eax; je 0x2df18; sub esp, 0xc; push esi; call eax; 
0x000eab50: mov eax, dword ptr [esi + 0x3c]; add esp, 4; pop ebx; pop esi; ret; 
0x00161bed: mov eax, dword ptr [esi + 0x3c]; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x001308bb: mov eax, dword ptr [esi + 0xc]; push ebx; mov dword ptr [ebp - 0x44], eax; push 0; push 0x1000005; call edx; 
0x00165610: mov eax, dword ptr [esi + 4]; push ebx; push edx; push esi; call dword ptr [eax + 0xc]; 
0x00165648: mov eax, dword ptr [esi + 4]; push ebx; push edx; push esi; call dword ptr [eax + 8]; 
0x00165e97: mov eax, dword ptr [esi + 4]; push ebx; push esi; call dword ptr [eax + 4]; 
0x001655f3: mov eax, dword ptr [esi + 4]; push edx; push ebp; push esi; call dword ptr [eax + 0xc]; 
0x0016562b: mov eax, dword ptr [esi + 4]; push edx; push ebp; push esi; call dword ptr [eax + 8]; 
0x0006b9de: mov eax, dword ptr [esi + eax*4 - 0x73660]; lea eax, [esi + eax - 0x1bea21]; jmp eax; 
0x00066950: mov eax, dword ptr [esi + eax*4 - 0x73a60]; lea eax, [esi + eax - 0x1c3ae9]; jmp eax; 
0x000df736: mov eax, dword ptr [esi - 0x12c]; cmp byte ptr [eax], 0; je 0xdf770; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x000df7e6: mov eax, dword ptr [esi - 0x12c]; cmp byte ptr [eax], 0; je 0xdf820; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x00132d98: mov eax, dword ptr [esp + 0x10]; add esp, 4; pop ebx; pop esi; ret; 
0x00036ed4: mov eax, dword ptr [esp + 0x10]; and eax, 0x80000000; ret; 
0x00074ca8: mov eax, dword ptr [esp + 0x10]; call dword ptr [eax + 0x1c]; 
0x00173751: mov eax, dword ptr [esp + 0x10]; call dword ptr [eax + 0x40]; 
0x00170468: mov eax, dword ptr [esp + 0x10]; call eax; 
0x00035e35: mov eax, dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; fadd st(0); mov dword ptr [eax], ecx; ret; 
0x00035e2a: mov eax, dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0017a984: mov eax, dword ptr [esp + 0x10]; mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x00127a49: mov eax, dword ptr [esp + 0x10]; mov eax, dword ptr [eax + 0x4c]; call 0x127920; add esp, 4; ret; 
0x00087ec9: mov eax, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x000b53f3: mov eax, dword ptr [esp + 0x10]; pop ebx; pop esi; pop edi; ret; 
0x00142331: mov eax, dword ptr [esp + 0x10]; sub eax, ebx; add esp, 8; pop ebx; ret; 
0x0012d02f: mov eax, dword ptr [esp + 0x14]; add eax, 0x2000001; push eax; call dword ptr [edi + 0x14]; 
0x0011c1b0: mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00021513: mov eax, dword ptr [esp + 0x14]; call eax; 
0x000d75d3: mov eax, dword ptr [esp + 0x14]; lea ecx, [esp + 4]; mov dword ptr [esp + 8], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x00075340: mov eax, dword ptr [esp + 0x14]; pop ebx; pop esi; pop edi; ret; 
0x0015f874: mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x0006a9a1: mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x0016138e: mov eax, dword ptr [esp + 0x18]; call eax; 
0x00158680: mov eax, dword ptr [esp + 0x18]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x000658e1: mov eax, dword ptr [esp + 0x1c]; call dword ptr [eax + 0x1c]; 
0x0009423a: mov eax, dword ptr [esp + 0x1c]; mov dword ptr [esp], eax; call esi; 
0x000331ce: mov eax, dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0xb44b0; add esp, 0x1c; ret; 
0x0016569b: mov eax, dword ptr [esp + 0x1c]; sub eax, dword ptr gs:[0x14]; jne 0x1656ac; add esp, 0x2c; ret; 
0x0012cdac: mov eax, dword ptr [esp + 0x20]; call dword ptr [eax + 0x14]; 
0x000392a9: mov eax, dword ptr [esp + 0x20]; call eax; 
0x00082103: mov eax, dword ptr [esp + 0x24]; call eax; 
0x001243ed: mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001248ce: mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0015a7e0: mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x18]; 
0x000778f7: mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x40]; 
0x0012c953: mov eax, dword ptr [esp + 0x28]; call eax; 
0x0012452d: mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0013bf28: mov eax, dword ptr [esp + 0x2c]; call eax; 
0x00058873: mov eax, dword ptr [esp + 0x30]; call eax; 
0x000cb180: mov eax, dword ptr [esp + 0x34]; call eax; 
0x00078c82: mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x0012449e: mov eax, dword ptr [esp + 0x38]; mov dword ptr [esp + 0xc], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00124ad8: mov eax, dword ptr [esp + 0x38]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0015ddfc: mov eax, dword ptr [esp + 0x3c]; call eax; 
0x00124968: mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001636b4: mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x1636c5; add esp, 0x4c; ret; 
0x00163724: mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x163735; add esp, 0x4c; ret; 
0x00163794: mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x1637a5; add esp, 0x4c; ret; 
0x001637f7: mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x163808; add esp, 0x4c; ret; 
0x00163857: mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x163868; add esp, 0x4c; ret; 
0x001638c4: mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x1638d5; add esp, 0x4c; ret; 
0x00163944: mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x163955; add esp, 0x4c; ret; 
0x0015dbad: mov eax, dword ptr [esp + 0x40]; call eax; 
0x00124a29: mov eax, dword ptr [esp + 0x40]; mov dword ptr [esp + 0x14], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000c4ec8: mov eax, dword ptr [esp + 0x40]; push dword ptr [eax]; call edi; 
0x00025bbc: mov eax, dword ptr [esp + 0x44]; call eax; 
0x00124da8: mov eax, dword ptr [esp + 0x44]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0015fbb6: mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x10]; 
0x0015fa54: mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x14]; 
0x00024aa6: mov eax, dword ptr [esp + 0x48]; call eax; 
0x00027242: mov eax, dword ptr [esp + 0x4c]; call eax; 
0x000cb7b6: mov eax, dword ptr [esp + 0x5c]; call eax; 
0x00124e59: mov eax, dword ptr [esp + 0x60]; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001246d9: mov eax, dword ptr [esp + 0x64]; mov dword ptr [esp + 0x2c], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00116331: mov eax, dword ptr [esp + 0x84]; lea ecx, [eax + 0x5402]; mov eax, edi; call dword ptr gs:[0x10]; 
0x00159b5c: mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x00091bcd: mov eax, dword ptr [esp + 0xb4]; mov dword ptr [esp + 0x20], eax; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x0008dff4: mov eax, dword ptr [esp + 0xb8]; mov dword ptr [esp + 0x20], eax; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x000388ce: mov eax, dword ptr [esp + 0xb8]; mov dword ptr [esp + 0x20], eax; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x00037a33: mov eax, dword ptr [esp + 0xc]; add esp, 0x14; pop ebx; pop esi; ret; 
0x00087f8e: mov eax, dword ptr [esp + 0xc]; add esp, 0x18; pop ebx; ret; 
0x000da07a: mov eax, dword ptr [esp + 0xc]; call eax; 
0x0003619b: mov eax, dword ptr [esp + 0xc]; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x000843f6: mov eax, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0009a340: mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax - 0x148]; call dword ptr [eax]; 
0x00126c38: mov eax, dword ptr [esp + 0xc]; mov edx, dword ptr [edx]; mov dword ptr [eax], edx; mov eax, 1; ret; 
0x00035be4: mov eax, dword ptr [esp + 0xc]; or eax, 0xffff8000; inc eax; shr eax, 0x1f; ret; 
0x000b3182: mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00197822: mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x00151305: mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x151316; add esp, 0x1c; ret; 
0x00163e32: mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x163e43; add esp, 0x1c; ret; 
0x00163e81: mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x163ebc; add esp, 0x1c; ret; 
0x0003b6e7: mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x3b6f8; add esp, 0x1c; ret; 
0x0003b73a: mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x3b74b; add esp, 0x1c; ret; 
0x00166b34: mov eax, dword ptr [esp + 4]; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x0013faf4: mov eax, dword ptr [esp + 4]; add eax, 9; and eax, 0xfffffff8; add eax, 0xc; ret; 
0x00084760: mov eax, dword ptr [esp + 4]; and dword ptr [eax + 8], 0xfffffffb; xor eax, eax; ret; 
0x0007be84: mov eax, dword ptr [esp + 4]; and dword ptr [eax], 0xffffffcf; ret; 
0x0002fdc4: mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x00133a64: mov eax, dword ptr [esp + 4]; and eax, 0xffff; ror ax, 8; ret; 
0x00133a54: mov eax, dword ptr [esp + 4]; bswap eax; ret; 
0x0008299f: mov eax, dword ptr [esp + 4]; cmp dword ptr [eax], 1; je 0x829b0; ret; 
0x0008e064: mov eax, dword ptr [esp + 4]; lock dec dword ptr [eax]; jne 0x8e070; xor eax, eax; ret; 
0x00104fea: mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x108], edx; xor eax, eax; ret; 
0x00104fd2: mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x00084870: mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x14], edx; xor eax, eax; ret; 
0x0008d6e4: mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 0; mov dword ptr [eax + 4], 0; xor eax, eax; ret; 
0x00084b84: mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x0008e0a4: mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 1; xor eax, eax; ret; 
0x0014df94: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x10]; ret; 
0x00166b74: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x00164650: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x30]; add eax, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x00080eb4: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x001719a4: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x001719c4: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x50]; ret; 
0x00171a54: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x54]; ret; 
0x00171a44: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x001719d4: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x00091b54: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x64]; ret; 
0x001160d4: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x00171988: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + edx*4]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x0007b0c4: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x0007b074: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x804; ret; 
0x0009438f: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0x3fc; jbe 0x943a0; ret; 
0x0009456f: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0x50; jbe 0x94580; ret; 
0x000943cf: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0xffff; jbe 0x943e0; ret; 
0x000d9104: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; ret; 
0x0007be94: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; shr eax, 4; and eax, 1; ret; 
0x0007beb4: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; shr eax, 5; and eax, 1; ret; 
0x00166b54: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 0xc]; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x001719b4: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x00084644: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x00104464: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x00080b74: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x00171964: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x0002df84: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x00104434: mov eax, dword ptr [esp + 4]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x00080ec4: mov eax, dword ptr [esp + 4]; ret; 
0x0007eef4: mov eax, dword ptr [esp + 4]; test byte ptr [eax], 0x80; jne 0x7ef00; ret; 
0x0007b084: mov eax, dword ptr [esp + 4]; test byte ptr [eax], 4; sete al; movzx eax, al; ret; 
0x0007b0a4: mov eax, dword ptr [esp + 4]; test byte ptr [eax], 8; sete al; movzx eax, al; ret; 
0x000b4d65: mov eax, dword ptr [esp + 8]; cld; pop edi; ret; 
0x00087dd4: mov eax, dword ptr [esp + 8]; cmp dword ptr [esp + 4], eax; sete al; movzx eax, al; ret; 
0x00036453: mov eax, dword ptr [esp + 8]; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x000842fb: mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0013eb35: mov eax, dword ptr [esp + 8]; mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; 
0x00181496: mov eax, dword ptr [esp + 8]; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x00071a5b: mov eax, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x0002ff74: mov eax, dword ptr [esp + 8]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0002ff94: mov eax, dword ptr [esp + 8]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x000374ef: mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x0010440b: mov eax, dword ptr [esp + 8]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x0017b015: mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000b4d3b: mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000afd52: mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00171e01: mov eax, dword ptr [esp]; ret; 
0x0011d849: mov eax, dword ptr es:[ebx + 8]; test eax, eax; jne 0x11d87c; sub esp, 0xc; push dword ptr [ebx]; call esi; 
0x000255f8: mov eax, dword ptr fs:[esp + 0x48]; call eax; 
0x00162f2a: mov eax, dword ptr gs:[0]; mov dword ptr [eax + edx], ecx; ret; 
0x00116365: mov eax, dword ptr gs:[0]; mov eax, dword ptr [eax + ebp]; mov dword ptr [esp + 0xc], eax; mov eax, edi; call dword ptr gs:[0x10]; 
0x000d8f95: mov eax, dword ptr gs:[0x14]; mov dword ptr [esp + 0x13c], eax; xor eax, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x00108cd7: mov eax, dword ptr gs:[0x14]; mov dword ptr [esp + 0x18c], eax; xor eax, eax; mov eax, 0x17f; call dword ptr gs:[0x10]; 
0x001162a0: mov eax, dword ptr gs:[0x14]; mov dword ptr [esp + 0x5c], eax; xor eax, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0008d0a0: mov eax, dword ptr gs:[0x68]; mov dword ptr [edx + 0x1c], eax; xor eax, eax; pop ebx; ret; 
0x000ddce3: mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0xddd08; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x000827cb: mov eax, dword ptr gs:[8]; mov byte ptr [eax + 0x4fe], 0; ret; 
0x000de339: mov eax, dword ptr gs:[8]; mov ebx, 0x1200011; lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x0008d764: mov eax, dword ptr gs:[8]; ret; 
0x000886d4: mov eax, dword ptr gs:[8]; xor edx, edx; lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x0003930d: mov eax, dword ptr ss:[esp + 0x20]; call eax; 
0x00083848: mov eax, ebp; call dword ptr gs:[0x10]; 
0x001565e6: mov eax, ebp; pop ebp; ret; 
0x0004b13d: mov eax, ebp; pop ebx; pop ebp; pop esi; pop edi; ret; 
0x00099c01: mov eax, ebp; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x00025b54: mov eax, ebp; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0009b5fd: mov eax, ebp; pop edi; pop ebp; ret; 
0x00120edf: mov eax, ebp; pop esi; mov edx, ecx; pop edi; pop ebp; ret; 
0x00030766: mov eax, ebp; pop esi; pop edi; pop ebp; ret; 
0x00138893: mov eax, ebp; push edi; mov cl, 0xff; jmp dword ptr [esi - 0x70]; 
0x0013d463: mov eax, ebp; xchg dword ptr [ebp - 1], esp; jmp dword ptr [esi - 0x70]; 
0x000b5d5b: mov eax, ebx; add esp, 4; pop ebx; pop esi; ret; 
0x00116faa: mov eax, ebx; call 0x116ed0; sar eax, 0x1f; add esp, 8; pop ebx; ret; 
0x000b72c5: mov eax, ebx; cmovne eax, edx; add esp, 0x14; pop ebx; pop esi; ret; 
0x0009eb39: mov eax, ebx; cmovne eax, edx; add esp, 0x18; pop ebx; ret; 
0x0007beef: mov eax, ebx; mov byte ptr [edx], cl; pop ebx; pop esi; ret; 
0x00120955: mov eax, ebx; pop ebx; and edx, 0xfff; and eax, 0xfffff000; or eax, edx; ret; 
0x0015a9ba: mov eax, ebx; pop ebx; pop esi; jmp eax; 
0x00025021: mov eax, ebx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00140c4b: mov eax, ebx; pop ebx; pop esi; pop edi; ret 4; 
0x0002f7fa: mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0003a6d6: mov eax, ebx; pop ebx; pop esi; ret; 
0x000c3f91: mov eax, ebx; pop ebx; pop esi; sub eax, edx; pop edi; ret; 
0x0004d116: mov eax, ebx; pop ebx; ret 4; 
0x0008da2e: mov eax, ebx; pop ebx; ret; 
0x00140aff: mov eax, ebx; shl eax, 4; lea eax, [edx + eax + 8]; pop ebx; ret; 
0x00058249: mov eax, ebx; test edx, edx; jne 0x58258; add esp, 8; pop ebx; ret; 
0x000de421: mov eax, ecx; call dword ptr gs:[0x10]; 
0x0003aba3: mov eax, ecx; mov dword ptr [ecx + 4], edx; ret 4; 
0x00074ed2: mov eax, ecx; mov dword ptr [edx], ecx; pop ebx; ret; 
0x00074343: mov eax, ecx; mov dword ptr [edx], edi; pop ebx; pop esi; pop edi; ret; 
0x000229c3: mov eax, ecx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00037ebd: mov eax, ecx; pop ebx; pop esi; pop edi; ret; 
0x00054c39: mov eax, ecx; pop ebx; pop esi; ret; 
0x000ca07e: mov eax, ecx; pop ebx; ret; 
0x0009f8f2: mov eax, ecx; pop edi; pop ebp; ret; 
0x00074357: mov eax, ecx; pop edi; ret; 
0x000747b6: mov eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x0012ca2e: mov eax, ecx; pop esi; pop edi; ret; 
0x00133ae3: mov eax, ecx; ret 4; 
0x0002f6ac: mov eax, ecx; ret; 
0x0007b358: mov eax, edi; call dword ptr gs:[0x10]; 
0x000da1e7: mov eax, edi; call eax; 
0x000f0321: mov eax, edi; mov dword ptr [esi + 0x20], ebx; pop ebx; pop esi; pop edi; ret; 
0x00086c20: mov eax, edi; mov esi, edx; call dword ptr gs:[0x10]; 
0x001209d2: mov eax, edi; or eax, esi; pop esi; pop edi; or eax, ecx; ret; 
0x00085767: mov eax, edi; or edx, 2; call dword ptr gs:[0x10]; 
0x000b24d9: mov eax, edi; pop ebx; pop edi; ret; 
0x0002bc2d: mov eax, edi; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000581bd: mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x000723b8: mov eax, edi; pop edi; pop ebp; ret; 
0x000a5ac1: mov eax, edi; pop edi; pop ebx; ret; 
0x000ac6a0: mov eax, edi; pop edi; pop esi; pop ebx; ret; 
0x000885e7: mov eax, edi; pop edi; ret; 
0x000723d6: mov eax, edi; pop esi; pop edi; pop ebp; ret; 
0x000848d1: mov eax, edi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0003661e: mov eax, edx; add esp, 0x1c; ret 4; 
0x000305c6: mov eax, edx; add esp, 0xc; ret; 
0x000792b1: mov eax, edx; and eax, 1; add esp, 0x14; pop ebx; pop esi; ret; 
0x00021548: mov eax, edx; call dword ptr gs:[0x10]; 
0x000a2043: mov eax, edx; mov byte ptr [edx + 2], 0; pop ebx; pop esi; ret; 
0x0017cece: mov eax, edx; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x0017112e: mov eax, edx; mov edx, dword ptr [ecx - 0xc8]; shl eax, 5; lea eax, [eax + edx + 0x64]; ret; 
0x0003ab58: mov eax, edx; neg eax; cmovs eax, edx; ret; 
0x0015219f: mov eax, edx; pop ebx; pop edi; ret; 
0x00024b02: mov eax, edx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00140fd6: mov eax, edx; pop ebx; pop esi; pop edi; ret; 
0x0004b73a: mov eax, edx; pop ebx; pop esi; ret; 
0x000513db: mov eax, edx; pop ebx; ret 4; 
0x0002ed56: mov eax, edx; pop ebx; ret; 
0x000a1eb4: mov eax, edx; pop edi; pop ebp; ret; 
0x0017c521: mov eax, edx; pop edi; pop esi; pop ebx; ret; 
0x0002f5a6: mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x0004b1f1: mov eax, edx; pop esi; pop edi; ret; 
0x0002ed44: mov eax, edx; ret; 
0x00035f62: mov eax, edx; shr eax, 0x1f; ret; 
0x00085352: mov eax, edx; shr eax, 3; je 0x85390; mov eax, edi; call dword ptr gs:[0x10]; 
0x000a6178: mov eax, edx; sub ebx, 0x10; lea ecx, [edx + 0x10]; jne 0xa5ed1; pop ebx; ret; 
0x000a6090: mov eax, edx; sub ebx, 0xa; lea ecx, [edx + 0xa]; jne 0xa5ed1; pop ebx; ret; 
0x000a60ae: mov eax, edx; sub ebx, 0xb; lea ecx, [edx + 0xb]; jne 0xa5ed1; pop ebx; ret; 
0x000a60ce: mov eax, edx; sub ebx, 0xc; lea ecx, [edx + 0xc]; jne 0xa5ed1; pop ebx; ret; 
0x000a60f2: mov eax, edx; sub ebx, 0xd; lea ecx, [edx + 0xd]; jne 0xa5ed1; pop ebx; ret; 
0x000a6122: mov eax, edx; sub ebx, 0xe; lea ecx, [edx + 0xe]; jne 0xa5ed1; pop ebx; ret; 
0x000a6152: mov eax, edx; sub ebx, 0xf; lea ecx, [edx + 0xf]; jne 0xa5ed1; pop ebx; ret; 
0x000a5f64: mov eax, edx; sub ebx, 1; lea ecx, [edx + 1]; jne 0xa5ed1; pop ebx; ret; 
0x000a5f86: mov eax, edx; sub ebx, 2; lea ecx, [edx + 2]; jne 0xa5ed1; pop ebx; ret; 
0x000a5fac: mov eax, edx; sub ebx, 3; lea ecx, [edx + 3]; jne 0xa5ed1; pop ebx; ret; 
0x000a5fc4: mov eax, edx; sub ebx, 4; lea ecx, [edx + 4]; jne 0xa5ed1; pop ebx; ret; 
0x000a5fea: mov eax, edx; sub ebx, 5; lea ecx, [edx + 5]; jne 0xa5ed1; pop ebx; ret; 
0x000a600c: mov eax, edx; sub ebx, 6; lea ecx, [edx + 6]; jne 0xa5ed1; pop ebx; ret; 
0x000a602a: mov eax, edx; sub ebx, 7; lea ecx, [edx + 7]; jne 0xa5ed1; pop ebx; ret; 
0x000a6048: mov eax, edx; sub ebx, 8; lea ecx, [edx + 8]; jne 0xa5ed1; pop ebx; ret; 
0x000a606e: mov eax, edx; sub ebx, 9; lea ecx, [edx + 9]; jne 0xa5ed1; pop ebx; ret; 
0x0003b0fa: mov eax, esi; add esp, 4; pop ebx; pop esi; ret; 
0x0003ac15: mov eax, esi; mov dword ptr [esi + 0xc], edx; add esp, 0x34; pop ebx; pop esi; ret 4; 
0x0009fa74: mov eax, esi; or byte ptr [ebx], dl; pop ebx; pop esi; ret; 
0x00036bf1: mov eax, esi; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x0002a0cd: mov eax, esi; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0005200f: mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0009ae6b: mov eax, esi; pop ebx; pop esi; ret 4; 
0x0003b0cb: mov eax, esi; pop ebx; pop esi; ret; 
0x0002c29a: mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x0003b02f: mov eax, esi; pop esi; pop edi; ret; 
0x000b3ff1: mov ebp, 0x10ea83c0; add edx, eax; jl 0xb4000; lea eax, [ecx + eax + 0x30]; ret; 
0x000b3fe1: mov ebp, 0x20ea83c0; add edx, eax; jl 0xb4000; lea eax, [ecx + eax + 0x20]; ret; 
0x000b3fd1: mov ebp, 0x30ea83c0; add edx, eax; jl 0xb4000; lea eax, [ecx + eax + 0x10]; ret; 
0x000b40c2: mov ebp, 0x30f801ff; in eax, dx; add eax, ecx; pop edi; ret; 
0x000b3fc1: mov ebp, 0x40ea83c0; add edx, eax; jl 0xb4000; add eax, ecx; ret; 
0x00193f3f: mov ebp, 0x5b000000; ret; 
0x000b3866: mov ebp, 0x5ff801c0; ret; 
0x000b4085: mov ebp, 0x5ff801ff; ret; 
0x00047809: mov ebp, 0x68fff930; dec ebp; add eax, 0x8d500000; xchg eax, esi; jne 0x47811; call dword ptr [eax - 0x18]; 
0x00051137: mov ebp, 0x68fff930; dec ebp; add eax, 0x8d500000; xchg eax, esi; jne 0x5113f; call dword ptr [eax - 0x18]; 
0x000bbb92: mov ebp, 0x68fff930; dec ebp; add eax, 0x8d500000; xchg eax, esi; jne 0xbbb9a; call dword ptr [eax - 0x18]; 
0x000be861: mov ebp, 0x68fff930; dec ebp; add eax, 0x8d500000; xchg eax, esi; jne 0xbe869; call dword ptr [eax - 0x18]; 
0x000c1668: mov ebp, 0x68fff930; dec ebp; add eax, 0x8d500000; xchg eax, esi; jne 0xc1670; call dword ptr [eax - 0x18]; 
0x00047997: mov ebp, 0x68fff930; fadd dword ptr [0x8d500000]; xchg dword ptr [esi + 0x30], esp; stc; call dword ptr [eax - 0x18]; 
0x0004790b: mov ebp, 0x68fff930; pop edi; add eax, 0x8d500000; xchg dword ptr [eax], edi; jbe 0x47913; call dword ptr [eax - 0x18]; 
0x00051112: mov ebp, 0x68fff930; pop edi; add eax, 0x8d500000; xchg dword ptr [eax], edi; jbe 0x5111a; call dword ptr [eax - 0x18]; 
0x000bbab9: mov ebp, 0x68fff930; pop edi; add eax, 0x8d500000; xchg dword ptr [eax], edi; jbe 0xbbac1; call dword ptr [eax - 0x18]; 
0x000be980: mov ebp, 0x68fff930; pop edi; add eax, 0x8d500000; xchg dword ptr [eax], edi; jbe 0xbe988; call dword ptr [eax - 0x18]; 
0x000c15f6: mov ebp, 0x68fff930; pop edi; add eax, 0x8d500000; xchg dword ptr [eax], edi; jbe 0xc15fe; call dword ptr [eax - 0x18]; 
0x000c8d00: mov ebp, 0x68fff930; push eax; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; and byte ptr [esi + 0x44], 0xf9; call dword ptr [eax - 0x18]; 
0x000df04f: mov ebp, 0x83000000; ret; 
0x000cd4ff: mov ebp, 0x83000003; in al, dx; or byte ptr [ebp - 0x6d5a47d], cl; call dword ptr [eax + 0x56]; 
0x000750cf: mov ebp, 0x890000a3; ret; 
0x0014ced1: mov ebp, 0xaca0868d; stc; call dword ptr [eax - 0x73]; 
0x0015a0d8: mov ebp, 0xc4830000; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00066c7c: mov ebp, 0xc4830000; adc byte ptr [ecx], bh; ret; 
0x0005db07: mov ebp, 0xfffffa60; dec dword ptr [edi]; xchg ebp, eax; ror byte ptr [ecx - 0x2fe91639], 0xff; dec dword ptr [ebx - 0x59b7b]; jmp dword ptr [ebp - 0x75]; 
0x00105dfc: mov ebp, 0xfffffe4c; jmp 0x105cb9; sub esp, 0xc; push dword ptr [ebp - 0x1a8]; mov eax, dword ptr [ebp - 0x1ac]; call dword ptr [eax + 0x10]; 
0x0010858c: mov ebp, 0xfffffe5c; jmp 0x108449; sub esp, 0xc; push dword ptr [ebp - 0x198]; mov eax, dword ptr [ebp - 0x19c]; call dword ptr [eax + 0x10]; 
0x000e176c: mov ebp, 0xfffffe5c; jmp 0xe1629; sub esp, 0xc; push dword ptr [ebp - 0x198]; mov eax, dword ptr [ebp - 0x19c]; call dword ptr [eax + 0x10]; 
0x000e3e1c: mov ebp, 0xfffffe5c; jmp 0xe3cd9; sub esp, 0xc; push dword ptr [ebp - 0x198]; mov eax, dword ptr [ebp - 0x19c]; call dword ptr [eax + 0x10]; 
0x000f8e5c: mov ebp, 0xfffffe5c; jmp 0xf8d19; sub esp, 0xc; push dword ptr [ebp - 0x198]; mov eax, dword ptr [ebp - 0x19c]; call dword ptr [eax + 0x10]; 
0x000f9a2c: mov ebp, 0xfffffe5c; jmp 0xf98e9; sub esp, 0xc; push dword ptr [ebp - 0x198]; mov eax, dword ptr [ebp - 0x19c]; call dword ptr [eax + 0x10]; 
0x001212fe: mov ebp, cs; add esi, eax; push dword ptr [ecx + eax - 0x3d]; mov ebp, esi; call ebx; 
0x0004ab7e: mov ebp, dword ptr [eax + 0x2c]; mov ebx, dword ptr [eax + 0x34]; xor eax, eax; ret; 
0x000374eb: mov ebp, dword ptr [eax + 0xc]; nop; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x0010153f: mov ebp, dword ptr [eax + 3]; stc; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x0014e6d2: mov ebp, dword ptr [ebx + 4]; push ebx; mov ebx, edi; call 0x20140; mov dword ptr [esp], ebp; call esi; 
0x001338f7: mov ebp, dword ptr [ecx + 0xc]; nop; jmp edx; 
0x00115329: mov ebp, dword ptr [edi + 8]; mov edi, dword ptr [edi + 4]; call dword ptr gs:[0x10]; 
0x00094217: mov ebp, dword ptr [esp + 0x3c]; lea ecx, [edi - 0x722c0]; call dword ptr gs:[0x10]; 
0x00171e09: mov ebp, dword ptr [esp]; ret; 
0x000a02db: mov ebp, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x4d89ac55], cl; aam 0x29; ret 0xb48d; 
0x000d7a98: mov ebp, eax; mov esi, dword ptr [esp + 4]; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x001596ba: mov ebp, eax; pop eax; pop edx; push dword ptr [esi + 0x10]; push ebx; call dword ptr [esi + 0x14]; 
0x001565e0: mov ebp, eax; pop edi; sub ebp, 2; mov eax, ebp; pop ebp; ret; 
0x00141167: mov ebp, eax; sub dword ptr [eax], -1; jmp dword ptr [esi - 0x70]; 
0x0011dbcf: mov ebp, ebx; push esi; call edi; 
0x001328cd: mov ebp, edi; inc dword ptr [ebx - 0x3f7aef3c]; je 0x1328e0; add esp, 8; pop ebx; ret; 
0x0014d5b4: mov ebp, es; push 0x8b000001; dec esp; ret 0x8904; 
0x00121306: mov ebp, esi; call ebx; 
0x00121306: mov ebp, esi; call ebx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x0004aa72: mov ebx, 0; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x000de33f: mov ebx, 0x1200011; lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x0012677e: mov ebx, 0x16; mov edi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0017a43a: mov ebx, 0x18; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x001268db: mov ebx, 0x18; or dh, 1; call dword ptr gs:[0x10]; 
0x0004aa1b: mov ebx, 0x3001; mov eax, 0x180; call dword ptr gs:[0x10]; 
0x0004ac33: mov ebx, 0x3004; mov eax, 0x180; call dword ptr gs:[0x10]; 
0x0015a23a: mov ebx, 0x8100017b; ret; 
0x0003833a: mov ebx, 0x8100139a; ret; 
0x00066a31: mov ebx, 0x8300000c; in al, dx; add al, 0x53; push eax; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x0008f589: mov ebx, 0x83890006; and al, 1; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x00147e3f: mov ebx, 0x838dfffe; aam 0xaa; stc; call dword ptr [eax - 0x73]; 
0x00098301: mov ebx, 0x89ffffec; ret; 
0x000289dd: mov ebx, 0x89fffffb; ret 0xe283; 
0x0005deb6: mov ebx, 0x8bffffd1; test dword ptr [edx + edi*8 - 1], esp; jmp dword ptr [ebp - 0x75]; 
0x0011cbc2: mov ebx, 0x950ffff9; ret; 
0x000ff7fe: mov ebx, 0x9e88838d; stc; call dword ptr [eax - 0x73]; 
0x00162e06: mov ebx, 0xb68dfff3; and ah, dh; bnd call dword ptr [ebp - 0x73]; 
0x00125a4d: mov ebx, 0xb; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x000645e5: mov ebx, 0xc483fffb; adc byte ptr [ebp - 0xc7bf040], al; or al, 0; add byte ptr [ebx - 0x50f63], cl; call ecx; 
0x00125b51: mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x0017a671: mov ebx, 0xd8f7fffb; sbb eax, eax; add esp, 0x2c; ret; 
0x00125c40: mov ebx, 0xd; mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00124f41: mov ebx, 0xe; call dword ptr gs:[0x10]; 
0x00125d3b: mov ebx, 0xe; or dh, 1; call dword ptr gs:[0x10]; 
0x00124828: mov ebx, 0xf; mov dword ptr [esp + 0x30], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00118f2b: mov ebx, 0xfee1dead; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0002cdc4: mov ebx, 0xfffffc5c; test edx, edx; je 0x2cdcf; call edx; 
0x0002cca2: mov ebx, 0xfffffc60; test edx, edx; je 0x2ccb5; mov dword ptr [esp + 0xc], eax; call edx; 
0x00115be4: mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x00109c65: mov ebx, 0xffffff9c; mov ecx, dword ptr [esp + 0x30]; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00109dc5: mov ebx, 0xffffff9c; mov ecx, dword ptr [esp + 0x30]; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00109c35: mov ebx, 0xffffff9c; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00109d89: mov ebx, 0xffffff9c; mov edx, edi; call dword ptr gs:[0x10]; 
0x000d7879: mov ebx, 1; call dword ptr gs:[0x10]; 
0x0009420f: mov ebx, 1; sub esp, 0x28; mov ebp, dword ptr [esp + 0x3c]; lea ecx, [edi - 0x722c0]; call dword ptr gs:[0x10]; 
0x0014528f: mov ebx, 2; call dword ptr gs:[0x10]; 
0x0004aaae: mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x001260da: mov ebx, 2; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0007b34a: mov ebx, 2; mov edx, dword ptr [ebp - 0x34]; lea esi, [esi]; mov eax, edi; call dword ptr gs:[0x10]; 
0x000872df: mov ebx, 2; mov esi, 8; call dword ptr gs:[0x10]; 
0x00088a10: mov ebx, 2; xor edx, edx; mov ecx, dword ptr [esp + 8]; mov esi, 8; call dword ptr gs:[0x10]; 
0x001046f3: mov ebx, 2; xor edx, edx; mov ecx, ebp; mov esi, 8; call dword ptr gs:[0x10]; 
0x0017a3be: mov ebx, 3; call dword ptr gs:[0x10]; 
0x001243e5: mov ebx, 5; mov dword ptr [esp], eax; mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0004ab81: mov ebx, dword ptr [eax + 0x34]; xor eax, eax; ret; 
0x00087e65: mov ebx, dword ptr [eax + 0x68]; cmovbe ecx, edi; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x0008d781: mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x00087ed1: mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x0017c866: mov ebx, dword ptr [eax + ecx - 4]; mov dword ptr [edx + ecx - 4], ebx; mov eax, edx; pop ebx; ret; 
0x0002f853: mov ebx, dword ptr [eax + ecx]; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00093bf3: mov ebx, dword ptr [eax]; mov eax, 0x107; call dword ptr gs:[0x10]; 
0x0013eb39: mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; 
0x0013eb39: mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; pop ebx; ret; 
0x00093ed5: mov ebx, dword ptr [eax]; mov ecx, dword ptr [esp + 0x64]; mov eax, 0x199; mov esi, ebp; call dword ptr gs:[0x10]; 
0x0015a766: mov ebx, dword ptr [ebp + edi*8 + 0x5489ffff]; and al, 0x10; pop ebx; pop esi; jmp eax; 
0x0013f0cd: mov ebx, dword ptr [ebp - 0x30]; mov dword ptr [edi + esi], eax; mov eax, 6; call dword ptr gs:[0x10]; 
0x00126f0c: mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; call dword ptr gs:[0x10]; 
0x00127049: mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x00126ebc: mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; mov edx, 0x40; call dword ptr gs:[0x10]; 
0x00126fc3: mov ebx, dword ptr [ebp - 0x4f8]; mov edx, 2; mov ecx, dword ptr [ebp - 0x500]; mov dword ptr [ebp - 0x4e0], eax; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x00150944: mov ebx, dword ptr [ebx + 0x5e]; ret; 
0x00104978: mov ebx, dword ptr [ebx + 4]; xor edx, edx; mov eax, 0x1b4; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x00093cda: mov ebx, dword ptr [ebx]; mov eax, 0x106; call dword ptr gs:[0x10]; 
0x00093d4f: mov ebx, dword ptr [ebx]; mov eax, 0x198; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0013ec00: mov ebx, dword ptr [ebx]; mov eax, 6; call dword ptr gs:[0x10]; 
0x001338ef: mov ebx, dword ptr [ecx]; mov esi, dword ptr [ecx + 4]; mov edi, dword ptr [ecx + 8]; mov ebp, dword ptr [ecx + 0xc]; nop; jmp edx; 
0x00083ca8: mov ebx, dword ptr [edi + 4]; mov ecx, dword ptr [edi + 8]; mov edx, dword ptr [edi + 0xc]; call dword ptr gs:[0x10]; 
0x00115327: mov ebx, dword ptr [edi]; mov ebp, dword ptr [edi + 8]; mov edi, dword ptr [edi + 4]; call dword ptr gs:[0x10]; 
0x00192d73: mov ebx, dword ptr [edx + 0xc]; cmp ecx, ebx; mov eax, 0; jne 0x192d90; pop ebx; ret; 
0x0008391a: mov ebx, dword ptr [edx + 4]; mov ecx, dword ptr [edx + 8]; mov edx, dword ptr [edx + 0xc]; call dword ptr gs:[0x10]; 
0x0008681b: mov ebx, dword ptr [esi + 0x68]; mov ecx, dword ptr [eax + 4]; mov edx, dword ptr [eax]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x00086868: mov ebx, dword ptr [esi + 0x68]; mov ecx, dword ptr [esi + 0x230]; lea edx, [esi + 0x22c]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0004806f: mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x0010938b: mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x000fb304: mov ebx, dword ptr [esp + 0x10]; cmp esi, ecx; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x0008bed3: mov ebx, dword ptr [esp + 0x10]; mov dword ptr [ebx], 0; call dword ptr gs:[0x10]; 
0x0011c697: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x00115cdf: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0010bc27: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0010c177: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x00123e17: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x00123c17: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x00123af7: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x00123cb7: mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0011f537: mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x0011f4c7: mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x0011f397: mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x001217d0: mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00058a6f: mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00115d5f: mov ebx, dword ptr [esp + 0x10]; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0012388c: mov ebx, dword ptr [esp + 0x14]; cmovne edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x00123196: mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x001052a0: mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x001302bd: mov ebx, dword ptr [esp + 0x18]; je 0x1302d0; add esp, 8; pop ebx; ret; 
0x0011c1ac: mov ebx, dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x001212e7: mov ebx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x28]; mov eax, 0x78; mov dword ptr [ecx], ebx; int 0x80; 
0x00115ab0: mov ebx, dword ptr [esp + 0x20]; lea edx, [esp + 4]; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x0011664f: mov ebx, dword ptr [esp + 0x20]; mov eax, 0x36; mov ecx, 0x5409; mov edx, 1; call dword ptr gs:[0x10]; 
0x00118d5e: mov ebx, dword ptr [esp + 0x20]; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00118e3e: mov ebx, dword ptr [esp + 0x20]; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x000379de: mov ebx, dword ptr [esp + 0x20]; mov eax, 0xb3; mov ecx, 8; call dword ptr gs:[0x10]; 
0x00115a7d: mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0010aede: mov ebx, dword ptr [esp + 0x20]; mov eax, 6; call dword ptr gs:[0x10]; 
0x00037a05: mov ebx, dword ptr [esp + 0x20]; mov ecx, 8; mov edx, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x00121e6f: mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x156; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0003bc2f: mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x163; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011c56f: mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x90; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011727f: mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x91; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011734f: mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x92; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001116bf: mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0xa8; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0010a18f: mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 3; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0010a25f: mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 4; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0010b0ae: mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 8; call dword ptr gs:[0x10]; 
0x0010b0d5: mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov edx, eax; mov eax, 8; call dword ptr gs:[0x10]; 
0x000fb0e8: mov ebx, dword ptr [esp + 0x20]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00118d85: mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00118e65: mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x0010af05: mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 6; call dword ptr gs:[0x10]; 
0x000d7426: mov ebx, dword ptr [esp + 0x30]; cmp dword ptr [ecx + 8], 0x3b9ac9ff; ja 0xd74c0; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000ce9c4: mov ebx, dword ptr [esp + 0x30]; lea ecx, [esp + 0xc]; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x0011802c: mov ebx, dword ptr [esp + 0x30]; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x001180cc: mov ebx, dword ptr [esp + 0x30]; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x000da7ec: mov ebx, dword ptr [esp + 0x30]; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x000df741: mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x000df7f1: mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x000df3d8: mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x000df478: mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x0010ab34: mov ebx, dword ptr [esp + 0x30]; mov eax, 0xdd; mov ecx, esi; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00109edc: mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x127; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0010a042: mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x127; mov edx, edi; call dword ptr gs:[0x10]; 
0x00117518: mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14d; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001176e8: mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14e; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00103b19: mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb4; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00103bf9: mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb5; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00122138: mov ebx, dword ptr [esp + 0x30]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0010a3fc: mov ebx, dword ptr [esp + 0x30]; mov edi, dword ptr [esp + 0x3c]; mov eax, 0x8c; call dword ptr gs:[0x10]; 
0x0016133c: mov ebx, dword ptr [esp + 0x3c]; push ebx; call dword ptr [eax + 0x14]; 
0x001164ea: mov ebx, dword ptr [esp + 0x40]; lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000d70f9: mov ebx, dword ptr [esp + 0x40]; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00093409: mov ebx, dword ptr [esp + 0x40]; mov edx, dword ptr [esp + 0x48]; mov eax, 0x118; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00093391: mov ebx, dword ptr [esp + 0x40]; mov edx, dword ptr [esp + 0x48]; mov eax, 0x1a3; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000fb1d2: mov ebx, dword ptr [esp + 0x40]; mov esi, dword ptr [esp + 0x44]; lea ecx, [esp + 0xc]; mov eax, 0x1a7; call dword ptr gs:[0x10]; 
0x0012240a: mov ebx, dword ptr [esp + 0x50]; call dword ptr gs:[0x10]; 
0x000ceb58: mov ebx, dword ptr [esp + 0x50]; lea edx, [esp + 0x1c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x00126525: mov ebx, dword ptr [esp + 0x50]; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x000cebc8: mov ebx, dword ptr [esp + 0x50]; mov eax, 0x68; mov edx, esi; call dword ptr gs:[0x10]; 
0x0010a8c4: mov ebx, dword ptr [esp + 0x50]; mov eax, 0xdd; mov ecx, esi; mov edx, edi; call dword ptr gs:[0x10]; 
0x00122365: mov ebx, dword ptr [esp + 0x50]; mov ecx, dword ptr [esp + 0x54]; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x00122241: mov ebx, dword ptr [esp + 0x50]; mov edx, dword ptr [esp + 0x54]; lea ecx, [esp + 0x1c]; mov eax, 0x19a; call dword ptr gs:[0x10]; 
0x00112367: mov ebx, dword ptr [esp + 0x50]; mov esi, dword ptr [esp + 0x5c]; mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x001122ba: mov ebx, dword ptr [esp + 0x50]; mov esi, dword ptr [esp + 0x5c]; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00116b34: mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 4]; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x0012192c: mov ebx, dword ptr [esp + 0x60]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x00122ec0: mov ebx, dword ptr [esp + 0x84]; mov eax, 0x6c; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0010958e: mov ebx, dword ptr [esp + 0x90]; lea edx, [esp + 0x18]; mov eax, 0x10d; call dword ptr gs:[0x10]; 
0x00092fc6: mov ebx, dword ptr [esp + 0xa0]; mov eax, 0x119; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0008defe: mov ebx, dword ptr [esp + 0xa0]; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x000de8ff: mov ebx, dword ptr [esp + 0xc0]; call dword ptr gs:[0x10]; 
0x00122732: mov ebx, dword ptr [esp + 0xc0]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00083297: mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00083297: mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; pop ebx; pop esi; ret; 
0x000d8f1e: mov ebx, dword ptr [esp + 0xc]; cmp edx, eax; cmova edx, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x0010c242: mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x00121f3d: mov ebx, dword ptr [esp + 0xc]; mov eax, 0x178; call dword ptr gs:[0x10]; 
0x00123cf2: mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x00121f70: mov ebx, dword ptr [esp + 0xc]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x0010b257: mov ebx, dword ptr [esp + 0xc]; mov eax, 0xb7; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00112102: mov ebx, dword ptr [esp + 0xc]; mov eax, 0xbb; call dword ptr gs:[0x10]; 
0x0011f3d2: mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x0011f432: mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x0011f302: mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x00112132: mov ebx, dword ptr [esp + 0xc]; mov eax, 0xef; call dword ptr gs:[0x10]; 
0x00123a92: mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x000832c6: mov ebx, dword ptr [esp + 0xc]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00123baa: mov ebx, dword ptr [esp + 4]; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x00123d46: mov ebx, dword ptr [esp + 4]; mov eax, 0x136; call dword ptr gs:[0x10]; 
0x00123daa: mov ebx, dword ptr [esp + 4]; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x0012181a: mov ebx, dword ptr [esp + 4]; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x00123a56: mov ebx, dword ptr [esp + 4]; mov eax, 0x149; call dword ptr gs:[0x10]; 
0x0010b06a: mov ebx, dword ptr [esp + 4]; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x00123b76: mov ebx, dword ptr [esp + 4]; mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x00123dda: mov ebx, dword ptr [esp + 4]; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x00118ee6: mov ebx, dword ptr [esp + 4]; mov eax, 0x158; call dword ptr gs:[0x10]; 
0x00123e4a: mov ebx, dword ptr [esp + 4]; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x00123e7a: mov ebx, dword ptr [esp + 4]; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x00123eaa: mov ebx, dword ptr [esp + 4]; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x00123ed6: mov ebx, dword ptr [esp + 4]; mov eax, 0x17e; call dword ptr gs:[0x10]; 
0x000ddbe6: mov ebx, dword ptr [esp + 4]; mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x0003794a: mov ebx, dword ptr [esp + 4]; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x00109b9a: mov ebx, dword ptr [esp + 4]; mov eax, 0x27; call dword ptr gs:[0x10]; 
0x0010c2c6: mov ebx, dword ptr [esp + 4]; mov eax, 0x28; call dword ptr gs:[0x10]; 
0x0010af86: mov ebx, dword ptr [esp + 4]; mov eax, 0x29; call dword ptr gs:[0x10]; 
0x00118ce6: mov ebx, dword ptr [esp + 4]; mov eax, 0x33; call dword ptr gs:[0x10]; 
0x000df5ea: mov ebx, dword ptr [esp + 4]; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x00109926: mov ebx, dword ptr [esp + 4]; mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x00109926: mov ebx, dword ptr [esp + 4]; mov eax, 0x3c; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00118d16: mov ebx, dword ptr [esp + 4]; mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x0010afba: mov ebx, dword ptr [esp + 4]; mov eax, 0x3f; call dword ptr gs:[0x10]; 
0x001184ba: mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x0010c1aa: mov ebx, dword ptr [esp + 4]; mov eax, 0x53; call dword ptr gs:[0x10]; 
0x00123d76: mov ebx, dword ptr [esp + 4]; mov eax, 0x56; call dword ptr gs:[0x10]; 
0x0011927a: mov ebx, dword ptr [esp + 4]; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x0011c4fa: mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x0010997a: mov ebx, dword ptr [esp + 4]; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x00120ff6: mov ebx, dword ptr [esp + 4]; mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x00119246: mov ebx, dword ptr [esp + 4]; mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x00123906: mov ebx, dword ptr [esp + 4]; mov eax, 0x71; call dword ptr gs:[0x10]; 
0x001192a6: mov ebx, dword ptr [esp + 4]; mov eax, 0x73; call dword ptr gs:[0x10]; 
0x00123d16: mov ebx, dword ptr [esp + 4]; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x001185da: mov ebx, dword ptr [esp + 4]; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x000dd616: mov ebx, dword ptr [esp + 4]; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x00123ab6: mov ebx, dword ptr [esp + 4]; mov eax, 0x82; call dword ptr gs:[0x10]; 
0x000df5b6: mov ebx, dword ptr [esp + 4]; mov eax, 0x84; call dword ptr gs:[0x10]; 
0x0010b1a6: mov ebx, dword ptr [esp + 4]; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x0012393a: mov ebx, dword ptr [esp + 4]; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x00121a76: mov ebx, dword ptr [esp + 4]; mov eax, 0x88; call dword ptr gs:[0x10]; 
0x00121a76: mov ebx, dword ptr [esp + 4]; mov eax, 0x88; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0010abea: mov ebx, dword ptr [esp + 4]; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x000df666: mov ebx, dword ptr [esp + 4]; mov eax, 0x93; call dword ptr gs:[0x10]; 
0x0011c6ca: mov ebx, dword ptr [esp + 4]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x0011c6fa: mov ebx, dword ptr [esp + 4]; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x0011c726: mov ebx, dword ptr [esp + 4]; mov eax, 0x98; call dword ptr gs:[0x10]; 
0x000faf8a: mov ebx, dword ptr [esp + 4]; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x000fafba: mov ebx, dword ptr [esp + 4]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x000fb016: mov ebx, dword ptr [esp + 4]; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x000fb066: mov ebx, dword ptr [esp + 4]; mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x000fb096: mov ebx, dword ptr [esp + 4]; mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x0012102a: mov ebx, dword ptr [esp + 4]; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x0010c266: mov ebx, dword ptr [esp + 4]; mov eax, 0xa; call dword ptr gs:[0x10]; 
0x0012396a: mov ebx, dword ptr [esp + 4]; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x0012399a: mov ebx, dword ptr [esp + 4]; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x00037f9a: mov ebx, dword ptr [esp + 4]; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x0010b176: mov ebx, dword ptr [esp + 4]; mov eax, 0xc; call dword ptr gs:[0x10]; 
0x000df38a: mov ebx, dword ptr [esp + 4]; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x001213f6: mov ebx, dword ptr [esp + 4]; mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x00121416: mov ebx, dword ptr [esp + 4]; mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x00121416: mov ebx, dword ptr [esp + 4]; mov eax, 0xd8; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00123c7a: mov ebx, dword ptr [esp + 4]; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x0011f4fa: mov ebx, dword ptr [esp + 4]; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x0011f48a: mov ebx, dword ptr [esp + 4]; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x0011f35a: mov ebx, dword ptr [esp + 4]; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x0010994a: mov ebx, dword ptr [esp + 4]; mov eax, 0xf; call dword ptr gs:[0x10]; 
0x00123a26: mov ebx, dword ptr [esp + 4]; mov eax, 0xfe; call dword ptr gs:[0x10]; 
0x0010c13a: mov ebx, dword ptr [esp + 4]; mov eax, 9; call dword ptr gs:[0x10]; 
0x00058a19: mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00105019: mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; neg eax; pop ebx; ret; 
0x00123f2d: mov ebx, dword ptr [esp + 8]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00123b2d: mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x00109bcd: mov ebx, dword ptr [esp + 8]; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x0010c29d: mov ebx, dword ptr [esp + 8]; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x0010c1dd: mov ebx, dword ptr [esp + 8]; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x0010afed: mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x001152fd: mov ebx, dword ptr [esp + 8]; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x0010c20d: mov ebx, dword ptr [esp + 8]; mov eax, 0x55; call dword ptr gs:[0x10]; 
0x0011702d: mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x00120fcd: mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x00123bdd: mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x001238dd: mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x0011c52d: mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x001239cd: mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x001239fd: mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x000fafed: mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x00123c4d: mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000de87d: mov ebx, dword ptr [esp + 8]; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x0010bbed: mov ebx, dword ptr [esp + 8]; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x0010bbbd: mov ebx, dword ptr [esp + 8]; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000df6bd: mov ebx, dword ptr [esp + 8]; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000df6ed: mov ebx, dword ptr [esp + 8]; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x0010bb8d: mov ebx, dword ptr [esp + 8]; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x0011c65d: mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x0011c62d: mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x0011f3fd: mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x0011f45d: mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x0011f32d: mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x00037985: mov ebx, dword ptr [esp + 8]; mov ecx, 8; call dword ptr gs:[0x10]; 
0x0010b025: mov ebx, dword ptr [esp + 8]; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x00171df9: mov ebx, dword ptr [esp]; ret; 
0x0010a041: mov ebx, dword ptr ds:[esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x127; mov edx, edi; call dword ptr gs:[0x10]; 
0x00116b33: mov ebx, dword ptr fs:[esp + 0x60]; lea ecx, [esp + 4]; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x0012192b: mov ebx, dword ptr fs:[esp + 0x60]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x0008763c: mov ebx, eax; and ebx, 0x40; jne 0x87664; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x00087667: mov ebx, eax; jne 0x87228; lea ecx, [ebp + 0x22c]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x00083b32: mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0012130a: mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x0006fc47: mov ebx, eax; push edx; push esi; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x000890ce: mov ebx, ebp; mov ecx, 7; mov esi, edx; call dword ptr gs:[0x10]; 
0x00088eb1: mov ebx, ebp; mov esi, ecx; call dword ptr gs:[0x10]; 
0x0008c4e3: mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00123707: mov ebx, ecx; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x1b3; int 0x80; 
0x0014e6d6: mov ebx, edi; call 0x20140; mov dword ptr [esp], ebp; call esi; 
0x00084afb: mov ebx, edi; mov dword ptr [edi + 0x10], 0; mov ecx, dword ptr [edi + 0xc]; xor cl, 0x81; mov dword ptr [edi], 0; call dword ptr gs:[0x10]; 
0x0008abda: mov ebx, edi; mov ecx, 7; mov esi, edx; call dword ptr gs:[0x10]; 
0x00085035: mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00118182: mov ebx, edx; call dword ptr gs:[0x10]; 
0x0003795a: mov ebx, edx; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x00116a69: mov ebx, edx; mov ecx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00109936: mov ebx, edx; ret; 
0x00140e72: mov ebx, esi; call 0x20140; add esp, 0x14; pop ebx; pop esi; ret; 
0x000939b1: mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00115abd: mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x000a0255: mov ecx, 0x4bb; add byte ptr [ecx], ch; ret; 
0x00116658: mov ecx, 0x5409; mov edx, 1; call dword ptr gs:[0x10]; 
0x00116689: mov ecx, 0x5409; mov edx, 1; mov edi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0015ac95: mov ecx, 0x6afff963; add eax, 0xcc838d50; jb 0x15ac9a; call dword ptr [eax - 0x18]; 
0x00086c1b: mov ecx, 0x80; mov eax, edi; mov esi, edx; call dword ptr gs:[0x10]; 
0x000831ae: mov ecx, 0x80; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x0016d43c: mov ecx, 0x81000049; ret; 
0x0003743c: mov ecx, 0x810013a9; ret; 
0x00091ad0: mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00086c7d: mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0016f076: mov ecx, 0x81; mov edx, 1; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0008328a: mov ecx, 0x81; mov edx, 1; push ebx; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000839cf: mov ecx, 0x81; xor esi, esi; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x0017fa3c: mov ecx, 0x81ffff23; ret; 
0x000fd864: mov ecx, 0x85fffff8; dec dword ptr [edi]; test byte ptr [ebx + 0xf00000f], al; mov dh, 0x4a; or cl, ch; ret 0xfff8; 
0x0008980d: mov ecx, 0x87; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x0008766b: mov ecx, 0x8dfffffb; lea ebp, [edx + eax]; add byte ptr [eax], al; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x0005754e: mov ecx, 0x8dfffffc; mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x48904e8], al; and al, 0xf6; ret 0xf20; 
0x000de366: mov ecx, 0xc; lea ebx, [eax + 0x70]; mov dword ptr [eax + 0x70], ebx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x000869d2: mov ecx, 0xc; lea ebx, [eax + 0x70]; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x0009bfb6: mov ecx, 0xe383fff5; add dword ptr [ebp - 0xa88ff6e], ecx; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x00131b66: mov ecx, 0xe383fff5; add dword ptr [ebp - 0xa891f6e], ecx; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x000362b8: mov ecx, 0xff7fffff; sub ecx, eax; xor eax, ecx; shr eax, 0x1f; ret; 
0x00035f78: mov ecx, 0xffefffff; sub ecx, eax; xor eax, ecx; shr eax, 0x1f; ret; 
0x00035bca: mov ecx, 0xfffe; sub ecx, edx; shr eax, 0x1f; shr ecx, 0x10; or eax, ecx; ret; 
0x0006e784: mov ecx, 0xffffff2; mov dh, 0x44; pavgb mm1, qword ptr [ebx - 0x768fdb8c]; fiadd dword ptr [ebx]; adc al, 0x86; jmp edx; 
0x00104982: mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x000b5420: mov ecx, 0xffffffff; cmovb eax, ecx; ret; 
0x00074350: mov ecx, 0xffffffff; pop ebx; pop esi; mov eax, ecx; pop edi; ret; 
0x00166859: mov ecx, 1; mov dword ptr [eax + 0xc], edx; mov eax, ecx; pop ebx; ret; 
0x00166819: mov ecx, 1; mov dword ptr [eax + 0xc], edx; mov eax, ecx; ret; 
0x00151460: mov ecx, 1; mov eax, ecx; ret; 
0x0015afb8: mov ecx, 1; pop ebx; mov eax, ecx; ret; 
0x000c9d22: mov ecx, 1; pop ebx; pop esi; mov eax, ecx; ret; 
0x0008b3bb: mov ecx, 7; mov dword ptr [ebx + 4], 0; mov esi, edx; call dword ptr gs:[0x10]; 
0x000890d0: mov ecx, 7; mov esi, edx; call dword ptr gs:[0x10]; 
0x00037989: mov ecx, 8; call dword ptr gs:[0x10]; 
0x00037a09: mov ecx, 8; mov edx, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x0008b035: mov ecx, 8; mov esi, edx; call dword ptr gs:[0x10]; 
0x001589c2: mov ecx, dword ptr [eax + 0x20]; push eax; call dword ptr [ecx + 0xc]; 
0x00158a4d: mov ecx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [ecx + 8]; 
0x00071843: mov ecx, dword ptr [eax + 0x58]; mov dword ptr [ecx + 0x88], edx; ret; 
0x001889a2: mov ecx, dword ptr [eax + 1]; mov dword ptr [edx + 1], ecx; movzx ecx, byte ptr [eax]; mov byte ptr [edx], cl; pop ebx; ret; 
0x00188a22: mov ecx, dword ptr [eax + 2]; mov dword ptr [edx + 2], ecx; movzx ecx, word ptr [eax]; mov word ptr [edx], cx; pop ebx; ret; 
0x00189af6: mov ecx, dword ptr [eax + 4]; mov dword ptr [edx + 4], ecx; mov ecx, dword ptr [eax]; mov dword ptr [edx], ecx; pop ebx; ret; 
0x0008681e: mov ecx, dword ptr [eax + 4]; mov edx, dword ptr [eax]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x00158c9f: mov ecx, dword ptr [eax + 4]; push eax; call dword ptr [ecx + 0x10]; 
0x000758a0: mov ecx, dword ptr [eax + 8]; mov dword ptr [eax], edx; mov dword ptr [eax + 8], edx; mov dword ptr [eax + 0x20], ecx; ret; 
0x0012d219: mov ecx, dword ptr [eax + 8]; test ecx, ecx; je 0x12d228; xor eax, eax; pop ebx; ret; 
0x000213e7: mov ecx, dword ptr [eax - 0xe8]; cmp dword ptr [ecx + 0x94], edx; jne 0x213c2; ret; 
0x0017ee22: mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00180e52: mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, edx; pop ebx; ret; 
0x00188302: mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x0008ea3e: mov ecx, dword ptr [eax]; cmp dword ptr [edx + 0x10], ecx; je 0x8ea50; ret; 
0x0017f4c2: mov ecx, dword ptr [eax]; mov dword ptr [edx], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00188922: mov ecx, dword ptr [eax]; mov dword ptr [edx], ecx; pop ebx; ret; 
0x00088d95: mov ecx, dword ptr [eax]; mov eax, 0xf0; not ecx; and ecx, 0x80; call dword ptr gs:[0x10]; 
0x000832ff: mov ecx, dword ptr [eax]; mov eax, dword ptr [eax + 4]; mov dword ptr [ecx + 4], eax; mov dword ptr [eax], ecx; mov dword ptr [edx + 0x924], 0; ret; 
0x00022983: mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x00023013: mov ecx, dword ptr [ebp - 0x40]; call ecx; 
0x00126f12: mov ecx, dword ptr [ebp - 0x4fc]; call dword ptr gs:[0x10]; 
0x0012704f: mov ecx, dword ptr [ebp - 0x4fc]; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x00126ec2: mov ecx, dword ptr [ebp - 0x4fc]; mov edx, 0x40; call dword ptr gs:[0x10]; 
0x00126fce: mov ecx, dword ptr [ebp - 0x500]; mov dword ptr [ebp - 0x4e0], eax; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0009a3f3: mov ecx, dword ptr [ebp - 0x74ffd98c]; xchg edi, eax; mov eax, 0x89fffffe; inc esp; and al, 0xc; call dword ptr [edx]; 
0x000849d6: mov ecx, dword ptr [ebx + 0xc]; mov eax, 0xf0; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x000848ce: mov ecx, dword ptr [ebx + 0xc]; mov eax, edi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0008e25d: mov ecx, dword ptr [ebx + 4]; mov eax, 0xf0; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0018ef4e: mov ecx, dword ptr [ebx + ecx*4 - 0x86b80]; mov eax, dword ptr [ebx + eax*4 - 0x86b80]; sub eax, ecx; pop ebx; ret; 
0x0012d297: mov ecx, dword ptr [ebx + ecx]; test byte ptr [ecx + edx*2 + 1], 0x40; cmovne eax, edx; pop ebx; ret; 
0x00027c24: mov ecx, dword ptr [ebx - 0x72c7db84]; xchg eax, esp; jo 0x27c27; call dword ptr [eax - 0x73]; 
0x00140833: mov ecx, dword ptr [ebx - 0x74d7db8c]; jl 0x14085f; sub al, 0x83; ret 0x8902; 
0x000946fb: mov ecx, dword ptr [ecx + 0x3b68]; test ecx, ecx; jne 0x94710; ret; 
0x0012d291: mov ecx, dword ptr [ecx - 0x13c]; mov ecx, dword ptr [ebx + ecx]; test byte ptr [ecx + edx*2 + 1], 0x40; cmovne eax, edx; pop ebx; ret; 
0x00085ad4: mov ecx, dword ptr [edi + 0x10]; mov eax, 0xf0; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00088a55: mov ecx, dword ptr [edi + 0x68]; mov edx, dword ptr [esp + 0xc]; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00084a86: mov ecx, dword ptr [edi + 0xc]; mov eax, 0xf0; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00084b04: mov ecx, dword ptr [edi + 0xc]; xor cl, 0x81; mov dword ptr [edi], 0; call dword ptr gs:[0x10]; 
0x00083cab: mov ecx, dword ptr [edi + 8]; mov edx, dword ptr [edi + 0xc]; call dword ptr gs:[0x10]; 
0x00076b9e: mov ecx, dword ptr [edx + 0x10]; cmp eax, ecx; cmovb eax, ecx; sub eax, dword ptr [edx + 8]; sar eax, 2; ret; 
0x0008156b: mov ecx, dword ptr [edx + 0x14]; cmp eax, ecx; cmovb eax, ecx; sub eax, dword ptr [edx + 0xc]; ret; 
0x0015a260: mov ecx, dword ptr [edx + 0x18]; test ecx, ecx; jne 0x15a2b8; mov dword ptr [eax], 0; pop ebx; ret; 
0x00160564: mov ecx, dword ptr [edx + 0x28]; mov dword ptr [eax + 4], ecx; mov edx, dword ptr [edx + 0x2c]; mov dword ptr [eax + 8], edx; ret; 
0x00160f94: mov ecx, dword ptr [edx + 0x30]; mov dword ptr [eax + 4], ecx; mov edx, dword ptr [edx + 0x34]; mov dword ptr [eax + 8], edx; ret; 
0x000911b9: mov ecx, dword ptr [edx + 0x3ae0]; mov dword ptr [edx + 0x3ae0], eax; mov dword ptr [eax + 0xc], ecx; ret; 
0x00126c2a: mov ecx, dword ptr [edx + 4]; cmp byte ptr [ecx], 0; je 0x126c38; ret; 
0x00162107: mov ecx, dword ptr [edx + 4]; push edx; call dword ptr [ecx + 0x10]; 
0x0008391d: mov ecx, dword ptr [edx + 8]; mov edx, dword ptr [edx + 0xc]; call dword ptr gs:[0x10]; 
0x00068e44: mov ecx, dword ptr [edx + eax*4 - 0x737e0]; add ecx, ebp; jmp ecx; 
0x00069144: mov ecx, dword ptr [edx + eax*4 - 0x73860]; add ecx, ebp; jmp ecx; 
0x000693dd: mov ecx, dword ptr [edx + eax*4 - 0x738e0]; add ecx, ebp; jmp ecx; 
0x0006933d: mov ecx, dword ptr [edx + eax*4 - 0x739e0]; add ecx, ebp; jmp ecx; 
0x00068d8d: mov ecx, dword ptr [edx + eax*4]; add ecx, ebp; jmp ecx; 
0x001312af: mov ecx, dword ptr [edx]; test ecx, ecx; je 0x1312c8; ret; 
0x001160fa: mov ecx, dword ptr [edx]; test ecx, ecx; js 0x116108; mov eax, dword ptr [edx + 8]; and eax, 0x100f; ret; 
0x000c9bf0: mov ecx, dword ptr [esi + 0x1c]; cmp dword ptr [edi + 0x1c], ecx; jne 0xc9ca0; pop edi; pop esi; ret; 
0x0010c423: mov ecx, dword ptr [esi + 0x20]; push dword ptr [ecx + eax]; push edx; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x0008686b: mov ecx, dword ptr [esi + 0x230]; lea edx, [esi + 0x22c]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x000c9c70: mov ecx, dword ptr [esi + 0x34]; cmp dword ptr [edi + 0x34], ecx; jne 0xc9ca0; pop edi; pop esi; ret; 
0x000c9c90: mov ecx, dword ptr [esi + 0x3c]; cmp dword ptr [edi + 0x3c], ecx; jne 0xc9ca0; pop edi; pop esi; ret; 
0x00083b2a: mov ecx, dword ptr [esi + 8]; mov edx, 0x21; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000c9b4b: mov ecx, dword ptr [esi]; cmp dword ptr [edi], ecx; jne 0xc9ca0; pop edi; pop esi; ret; 
0x000afd90: mov ecx, dword ptr [esi]; mov byte ptr [eax + 4], dh; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000afd71: mov ecx, dword ptr [esi]; mov word ptr [eax], cx; mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0017ced0: mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x00115bdb: mov ecx, dword ptr [esp + 0x10]; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x00123709: mov ecx, dword ptr [esp + 0x10]; mov eax, 0x1b3; int 0x80; 
0x0011ea4c: mov ecx, dword ptr [esp + 0x10]; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x00108658: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0010c23e: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x00123cee: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x001120fe: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xbb; call dword ptr gs:[0x10]; 
0x0011f3ce: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x0011f42e: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x0011f2fe: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x0011212e: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xef; call dword ptr gs:[0x10]; 
0x00123a8e: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x000832c2: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000932f6: mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00116ac9: mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov esi, ebx; call dword ptr gs:[0x10]; 
0x00116a6b: mov ecx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00115c5b: mov ecx, dword ptr [esp + 0x10]; or dh, 0x80; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x00125c3c: mov ecx, dword ptr [esp + 0x14]; mov ebx, 0xd; mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0011c693: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x00115cdb: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0010bc23: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0010c173: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x00123e13: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x00123c13: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x00123af3: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x00123cb3: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0011f533: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x0011f4c3: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x0011f393: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x001217cc: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00115d5b: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0010937e: mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x00058a67: mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0017a32f: mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x001260df: mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0009167f: mov ecx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0015b076: mov ecx, dword ptr [esp + 0x1c]; lea edx, [ecx + 4]; push edx; push ebx; call dword ptr [eax + 4]; 
0x0015b036: mov ecx, dword ptr [esp + 0x1c]; lea edx, [ecx + 4]; push edx; push ebx; call dword ptr [eax]; 
0x0011c1a8: mov ecx, dword ptr [esp + 0x1c]; mov ebx, dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00121e73: mov ecx, dword ptr [esp + 0x24]; mov eax, 0x156; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0003bc33: mov ecx, dword ptr [esp + 0x24]; mov eax, 0x163; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011c573: mov ecx, dword ptr [esp + 0x24]; mov eax, 0x90; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00117283: mov ecx, dword ptr [esp + 0x24]; mov eax, 0x91; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00117353: mov ecx, dword ptr [esp + 0x24]; mov eax, 0x92; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001116c3: mov ecx, dword ptr [esp + 0x24]; mov eax, 0xa8; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0010a193: mov ecx, dword ptr [esp + 0x24]; mov eax, 3; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0010a263: mov ecx, dword ptr [esp + 0x24]; mov eax, 4; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0010b0b2: mov ecx, dword ptr [esp + 0x24]; mov eax, 8; call dword ptr gs:[0x10]; 
0x00121ea1: mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x0003bc61: mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x0011c5a1: mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x001172b1: mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x00117381: mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x001116f1: mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x0010a1c1: mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 3; call dword ptr gs:[0x10]; 
0x0010a291: mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 4; call dword ptr gs:[0x10]; 
0x0010b0d9: mov ecx, dword ptr [esp + 0x24]; mov edx, eax; mov eax, 8; call dword ptr gs:[0x10]; 
0x00109c2c: mov ecx, dword ptr [esp + 0x30]; mov eax, 0x127; mov ebx, 0xffffff9c; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00109d80: mov ecx, dword ptr [esp + 0x30]; mov eax, 0x127; mov ebx, 0xffffff9c; mov edx, edi; call dword ptr gs:[0x10]; 
0x00109c6a: mov ecx, dword ptr [esp + 0x30]; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00109dca: mov ecx, dword ptr [esp + 0x30]; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000cb016: mov ecx, dword ptr [esp + 0x34]; call ecx; 
0x00117463: mov ecx, dword ptr [esp + 0x34]; mov dword ptr [esp + 0xc], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00117633: mov ecx, dword ptr [esp + 0x34]; mov dword ptr [esp + 0xc], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x00117549: mov ecx, dword ptr [esp + 0x34]; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00117719: mov ecx, dword ptr [esp + 0x34]; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x00103b49: mov ecx, dword ptr [esp + 0x34]; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x00103c29: mov ecx, dword ptr [esp + 0x34]; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x00121ab4: mov ecx, dword ptr [esp + 0x34]; mov eax, 0x100; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000ddb25: mov ecx, dword ptr [esp + 0x34]; mov eax, 0x11c; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00109ee0: mov ecx, dword ptr [esp + 0x34]; mov eax, 0x127; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0010a046: mov ecx, dword ptr [esp + 0x34]; mov eax, 0x127; mov edx, edi; call dword ptr gs:[0x10]; 
0x00121b94: mov ecx, dword ptr [esp + 0x34]; mov eax, 0x13b; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00121c74: mov ecx, dword ptr [esp + 0x34]; mov eax, 0x13c; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00117430: mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14d; mov edi, ebp; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0011751c: mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14d; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00117600: mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14e; mov edi, ebp; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001176ec: mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14e; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001257c4: mov ecx, dword ptr [esp + 0x34]; mov eax, 0x159; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00103b1d: mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb4; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00103bfd: mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb5; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000916a4: mov ecx, dword ptr [esp + 0x34]; mov edx, ebp; mov dword ptr [esp + 0x28], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x00109f19: mov ecx, dword ptr [esp + 0x34]; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0010a089: mov ecx, dword ptr [esp + 0x34]; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0011185a: mov ecx, dword ptr [esp + 0x54]; mov eax, 0x135; mov edi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00122369: mov ecx, dword ptr [esp + 0x54]; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x001117de: mov ecx, dword ptr [esp + 0x54]; mov eax, 0x19e; mov edi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x001118ba: mov ecx, dword ptr [esp + 0x54]; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x00093f5a: mov ecx, dword ptr [esp + 0x64]; mov dword ptr [esp + 0x28], eax; cmove esi, edi; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x00093ed7: mov ecx, dword ptr [esp + 0x64]; mov eax, 0x199; mov esi, ebp; call dword ptr gs:[0x10]; 
0x00121928: mov ecx, dword ptr [esp + 0x64]; mov ebx, dword ptr [esp + 0x60]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000d76c0: mov ecx, dword ptr [esp + 0x74]; mov edx, ebp; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000d7736: mov ecx, dword ptr [esp + 0x74]; mov edx, edi; call dword ptr gs:[0x10]; 
0x000d77f5: mov ecx, dword ptr [esp + 0x74]; mov edx, edi; mov dword ptr [esp + 0xc], eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x0010a64f: mov ecx, dword ptr [esp + 0xa4]; mov edx, dword ptr [esp + 0xa8]; mov esi, dword ptr [esp + 0xac]; call dword ptr gs:[0x10]; 
0x0010a354: mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00105010: mov ecx, dword ptr [esp + 0xc]; mov eax, 0xdb; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00058a15: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00123f29: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00123b29: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x00109bc9: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x0010c299: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x0010c1d9: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x0010afe9: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x001152f9: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x0010c209: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x55; call dword ptr gs:[0x10]; 
0x00117029: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x00120fc9: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x00123bd9: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x001238d9: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x0011c529: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x001239c9: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x001239f9: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x000fafe9: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x00123c49: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000de879: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x0010bbe9: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x0010bbb9: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000df6b9: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000df6e9: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x0010bb89: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x0011c659: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x0011c629: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x0011f3f9: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x0011f459: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x0011f329: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x001254f5: mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov dword ptr [esp + 0x18], eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x001254a7: mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov dword ptr [esp + 0x18], eax; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x0012543e: mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x0008d779: mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x00021dc8: mov ecx, dword ptr [esp + 0xc]; sub ecx, dword ptr gs:[0x14]; jne 0x21dd9; add esp, 0x1c; ret; 
0x00084718: mov ecx, dword ptr [esp + 4]; mov eax, 0x16; cmp edx, 2; jbe 0x84730; ret; 
0x000e01ff: mov ecx, dword ptr [esp + 4]; mov eax, 1; test ecx, ecx; js 0xe0210; ret; 
0x0011f5a1: mov ecx, dword ptr [esp + 8]; mov dword ptr [ecx], eax; mov eax, 1; ret; 
0x0008d28d: mov ecx, dword ptr [esp + 8]; mov eax, 0xf0; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00123ba6: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x00123da6: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x00121816: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x0010b066: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x00123dd6: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x00123e46: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x00123e76: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x00123ea6: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x00037946: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x00109b96: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x27; call dword ptr gs:[0x10]; 
0x000df5e6: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x0010afb6: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x3f; call dword ptr gs:[0x10]; 
0x001184b6: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x0010c1a6: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x53; call dword ptr gs:[0x10]; 
0x00119276: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x0011c4f6: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x00109976: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x001185d6: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x00123936: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x0010abe6: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x0011c6c6: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x0011c6f6: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x000faf86: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x000fafb6: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x00121026: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x00123966: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x00123996: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x00037f96: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000df386: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x00123c76: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x0011f4f6: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x0011f486: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x0011f356: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x00109946: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xf; call dword ptr gs:[0x10]; 
0x0010c136: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 9; call dword ptr gs:[0x10]; 
0x00088a17: mov ecx, dword ptr [esp + 8]; mov esi, 8; call dword ptr gs:[0x10]; 
0x000cc075: mov ecx, dword ptr [esp + 8]; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x000875c3: mov ecx, dword ptr [esp + 8]; xor edx, edx; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x00171e11: mov ecx, dword ptr [esp]; ret; 
0x00084f94: mov ecx, dword ptr [esp]; xor cl, 0x81; mov dword ptr [ebp + edx*4 + 8], 0; mov edx, 0x7fffffff; call dword ptr gs:[0x10]; 
0x00104d68: mov ecx, eax; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x000c9f88: mov ecx, eax; mov eax, ecx; ret; 
0x00104c0b: mov ecx, eax; mov edx, ebx; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x000ced21: mov ecx, eax; ror ecx, 2; cmp ecx, 0x28f5c28; jbe 0xced38; mov eax, edx; ret; 
0x00092fd2: mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000dd845: mov ecx, ebp; cmove esi, eax; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x0009345d: mov ecx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x118; call dword ptr gs:[0x10]; 
0x000934ad: mov ecx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x1a3; call dword ptr gs:[0x10]; 
0x00093725: mov ecx, ebp; mov dword ptr [esp + 8], eax; mov esi, dword ptr [esp + 0x4c]; mov eax, 0x117; call dword ptr gs:[0x10]; 
0x00093775: mov ecx, ebp; mov dword ptr [esp + 8], eax; mov esi, dword ptr [esp + 0x4c]; mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x00085fbf: mov ecx, ebp; mov eax, 0xf0; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0003859b: mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x000386ba: mov ecx, ebp; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x1a5; call dword ptr gs:[0x10]; 
0x00038662: mov ecx, ebp; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x001046fa: mov ecx, ebp; mov esi, 8; call dword ptr gs:[0x10]; 
0x0009365a: mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x00083064: mov ecx, edi; call dword ptr gs:[0x10]; 
0x000d7a96: mov ecx, edi; mov ebp, eax; mov esi, dword ptr [esp + 4]; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000d79c8: mov ecx, edi; mov ebx, 1; call dword ptr gs:[0x10]; 
0x0008b8b8: mov ecx, edx; call dword ptr gs:[0x10]; 
0x0007183b: mov ecx, edx; mov dword ptr [eax + 0x94], ecx; mov ecx, dword ptr [eax + 0x58]; mov dword ptr [ecx + 0x88], edx; ret; 
0x000857e0: mov ecx, edx; mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x001253c9: mov ecx, edx; mov edx, edi; mov edi, ebp; call dword ptr gs:[0x10]; 
0x000b4e1d: mov ecx, edx; rep stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000b4704: mov ecx, edx; rep stosb byte ptr es:[edi], al; pop edi; ret; 
0x000d70fd: mov ecx, esi; call dword ptr gs:[0x10]; 
0x0003bd14: mov ecx, esi; mov eax, 0x163; xor edx, edx; sub ecx, ebx; call dword ptr gs:[0x10]; 
0x0008defc: mov ecx, esi; mov ebx, dword ptr [esp + 0xa0]; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x00088a97: mov ecx, esi; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0010ab3d: mov ecx, esi; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0010ab79: mov ecx, esi; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0010a8cd: mov ecx, esi; mov edx, edi; call dword ptr gs:[0x10]; 
0x0010a958: mov ecx, esi; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0017445d: mov ecx, esi; mov edx, esi; mov edi, eax; mov eax, ebp; call dword ptr gs:[0x10]; 
0x0013389b: mov ecx, esp; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x0004aa19: mov ecx, esp; mov ebx, 0x3001; mov eax, 0x180; call dword ptr gs:[0x10]; 
0x0004ac31: mov ecx, esp; mov ebx, 0x3004; mov eax, 0x180; call dword ptr gs:[0x10]; 
0x000de8fa: mov edi, 0x1000; mov ebx, dword ptr [esp + 0xc0]; call dword ptr gs:[0x10]; 
0x0008a82a: mov edi, 0x11c85; add byte ptr [ecx], bh; ret 0x4e0f; 
0x0013b9ee: mov edi, 0x2cc86; add byte ptr [ecx], ch; ret 0xc031; 
0x00031a0d: mov edi, 0x3c89000e; and al, 0x89; ret; 
0x00094237: mov edi, 0x448bfff8; and al, 0x1c; mov dword ptr [esp], eax; call esi; 
0x000c9bdd: mov edi, 0x5f000000; pop esi; ret; 
0x000ad68d: mov edi, 0x5f000005; pop esi; pop ebx; ret; 
0x00133336: mov edi, 0x810003ea; ret; 
0x0011ae36: mov edi, 0x8100056f; ret; 
0x0011a136: mov edi, 0x8100057c; ret; 
0x000b6036: mov edi, 0x81000bbd; ret; 
0x001a0d36: mov edi, 0x81fffd10; ret; 
0x000674f7: mov edi, 0x8300000b; in al, dx; add al, 0x53; push dword ptr [ebp - 0x88c]; push dword ptr [ebp - 0x87c]; call dword ptr [edx + 0x1c]; 
0x00068b3d: mov edi, 0x83000010; in al, dx; add al, 0x53; push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x00116901: mov edi, 0x8b000000; dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001197be: mov edi, 0x8d08ec83; xchg esi, eax; pop ds; dec esp; stc; call dword ptr [edx - 0x77]; 
0x0003ff8a: mov edi, 0x8dffffef; xchg dword ptr [ecx], eax; xor cl, bh; dec dword ptr [ebp - 0x35f49]; call dword ptr [esi + 0x6a]; 
0x000d772d: mov edi, 0xb8000000; or eax, dword ptr [ecx]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x74]; mov edx, edi; call dword ptr gs:[0x10]; 
0x000c415e: mov edi, 0xc483fff5; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00084165: mov edi, 0xc483fff9; adc byte ptr [ebx - 0x3fcefb3c], al; pop ebx; pop esi; ret; 
0x000ca0bc: mov edi, 0xc483fffe; adc al, 0x5b; pop esi; ret; 
0x0015cf75: mov edi, 0xe8fffffd; jb 0x15cfe6; std; jmp dword ptr [esi - 0x70]; 
0x001117e7: mov edi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0004ab78: mov edi, dword ptr [eax + 0x24]; mov esi, dword ptr [eax + 0x28]; mov ebp, dword ptr [eax + 0x2c]; mov ebx, dword ptr [eax + 0x34]; xor eax, eax; ret; 
0x000374e8: mov edi, dword ptr [eax + 8]; mov ebp, dword ptr [eax + 0xc]; nop; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x000347c6: mov edi, dword ptr [eax]; je 0x347c2; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x000d996d: mov edi, dword ptr [ebp - 0x2c]; mov eax, dword ptr [ebp - 0x30]; push esi; call eax; 
0x0015fe61: mov edi, dword ptr [ebx]; std; jmp dword ptr [esi - 0x70]; 
0x001338f4: mov edi, dword ptr [ecx + 8]; mov ebp, dword ptr [ecx + 0xc]; nop; jmp edx; 
0x0004ac86: mov edi, dword ptr [edi + 0x38]; ret; 
0x0011532c: mov edi, dword ptr [edi + 4]; call dword ptr gs:[0x10]; 
0x0011532c: mov edi, dword ptr [edi + 4]; call dword ptr gs:[0x10]; pop ebp; pop edi; pop ebx; ret; 
0x0017d6eb: mov edi, dword ptr [esi]; jmp ebx; 
0x00126783: mov edi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0017a337: mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00111a7a: mov edi, dword ptr [esp + 0x1c]; sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x001052a8: mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x001212eb: mov edi, dword ptr [esp + 0x28]; mov eax, 0x78; mov dword ptr [ecx], ebx; int 0x80; 
0x00125a56: mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x00125a86: mov edi, dword ptr [esp + 0x34]; mov dword ptr [esp + 8], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00126703: mov edi, dword ptr [esp + 0x34]; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0010a400: mov edi, dword ptr [esp + 0x3c]; mov eax, 0x8c; call dword ptr gs:[0x10]; 
0x001092aa: mov edi, dword ptr [esp + 0x40]; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0006ea9f: mov edi, dword ptr [esp + 0x50]; push edi; push esi; push ebp; call dword ptr [ebx + 0x1c]; 
0x00171e0d: mov edi, dword ptr [esp]; ret; 
0x000d778f: mov edi, eax; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x00116693: mov edi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00174461: mov edi, eax; mov eax, ebp; call dword ptr gs:[0x10]; 
0x00121ea5: mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x0003bc65: mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x0011c5a5: mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x001172b5: mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x00117385: mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x001116f5: mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x0010a1c5: mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 3; call dword ptr gs:[0x10]; 
0x0010a295: mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 4; call dword ptr gs:[0x10]; 
0x00121aed: mov edi, eax; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x00121bcd: mov edi, eax; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x00121cad: mov edi, eax; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x001257fd: mov edi, eax; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x000d78f4: mov edi, eax; mov esi, dword ptr [esp + 4]; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000b4cd1: mov edi, eax; mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x0016c815: mov edi, eax; stc; call dword ptr [ecx - 0x77]; 
0x001253cd: mov edi, ebp; call dword ptr gs:[0x10]; 
0x001254a5: mov edi, ebp; mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov dword ptr [esp + 0x18], eax; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x00117439: mov edi, ebp; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000c31d0: mov edi, ebx; add byte ptr [eax], al; add byte ptr [ebx - 0x1f3e4fab], cl; add ch, byte ptr [ecx]; ret 0x28b; 
0x0009ff88: mov edi, ecx; add byte ptr [eax], al; add byte ptr [ebx + 0x4bfac55], cl; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5589; 
0x001253c2: mov edi, ecx; mov eax, 0x1a1; mov ecx, edx; mov edx, edi; mov edi, ebp; call dword ptr gs:[0x10]; 
0x000f0d89: mov edi, edi; inc dword ptr [ebx - 0x7bf00008]; ret; 
0x0007a899: mov edi, edi; jmp dword ptr [ecx]; 
0x00171b7b: mov edi, esi; ljmp 0xc031:0x8c483ff; pop ebx; ret; 
0x00125c3a: mov edi, esi; mov ecx, dword ptr [esp + 0x14]; mov ebx, 0xd; mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00125996: mov edx, 0; cmovb eax, edx; ret; 
0x0009e854: mov edx, 0; cmove eax, edx; ret; 
0x0009124e: mov edx, 0; cmovne eax, edx; ret; 
0x001167d8: mov edx, 0x100; mov word ptr [eax + 0x16], dx; ret; 
0x00083e5a: mov edx, 0x16; test eax, eax; cmovne eax, edx; ret; 
0x00083b2d: mov edx, 0x21; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00126ec8: mov edx, 0x40; call dword ptr gs:[0x10]; 
0x000dfd8c: mov edx, 0x40; cmove eax, edx; ret; 
0x0008474f: mov edx, 0x5f; mov eax, 0x16; cmove eax, edx; ret; 
0x0011f2ce: mov edx, 0x64; mov eax, dword ptr [eax - 0xc8]; mov eax, dword ptr [eax + 0x24]; test eax, eax; cmove eax, edx; ret; 
0x0013919f: mov edx, 0x6afff95a; add eax, 0xcc858d50; jb 0x1391a4; call dword ptr [eax - 0x18]; 
0x000dfcc3: mov edx, 0x7d00; pop ebx; cmove eax, edx; ret; 
0x00084fa2: mov edx, 0x7fffffff; call dword ptr gs:[0x10]; 
0x000dfc86: mov edx, 0x7fffffff; pop ebx; cmove eax, edx; ret; 
0x0003d89c: mov edx, 0x7fffffff; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0008c0c2: mov edx, 0x7fffffff; setne cl; shl ecx, 7; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00084a57: mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008a377: mov edx, 0x7fffffff; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00085060: mov edx, 0x7fffffff; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008c4dc: mov edx, 0x7fffffff; xor esi, esi; mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000857e7: mov edx, 0x7fffffff; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000b82d9: mov edx, 0x80000000; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000d943b: mov edx, 0x81000989; ret; 
0x0008863b: mov edx, 0x81000e97; ret; 
0x0006013b: mov edx, 0x8100111c; ret; 
0x00048a3b: mov edx, 0x81001293; ret; 
0x0002db3b: mov edx, 0x81001442; ret; 
0x00034d92: mov edx, 0x83000000; in al, dx; or byte ptr [ebp - 0x6d05d7b], cl; call dword ptr [eax + 0x53]; 
0x0010ac90: mov edx, 0x83000000; les esp, ptr [ebx + ebx*2]; pop esi; ret; 
0x0011e572: mov edx, 0x83fffffe; les ebx, ptr [eax]; pop ebx; ret; 
0x0008854a: mov edx, 0x89000000; clc; pop ebx; pop esi; pop edi; ret; 
0x00069735: mov edx, 0x8dfffff3; mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x001646eb: mov edx, 0xc483ffeb; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00169402: mov edx, 0xe8ffec65; in eax, 0xa5; cld; jmp dword ptr [esi - 0x70]; 
0x000dfce5: mov edx, 0xfa; pop ebx; cmove eax, edx; ret; 
0x000dfca8: mov edx, 0xfde8; pop ebx; cmove eax, edx; ret; 
0x000dfc56: mov edx, 0xfffa; cmove eax, edx; pop ebx; ret; 
0x00083841: mov edx, 0xfffffffe; xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x0009c0f4: mov edx, 0xffffffff; bsf eax, dword ptr [esp + 4]; cmove eax, edx; add eax, 1; ret; 
0x00191c25: mov edx, 0xffffffff; cmovbe eax, edx; pop esi; pop ebp; pop ebx; ret; 
0x0002485d: mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x000dfe51: mov edx, 0xffffffff; mov eax, 0x20; cmovne eax, edx; ret; 
0x00118178: mov edx, 0xffffffff; mov eax, 0xd0; mov ebx, edx; call dword ptr gs:[0x10]; 
0x00118258: mov edx, 0xffffffff; mov eax, 0xd2; mov ebx, edx; call dword ptr gs:[0x10]; 
0x0014e2c0: mov edx, 0xffffffff; mov eax, edx; pop ebx; pop esi; ret; 
0x0009c143: mov edx, 0xffffffff; pop ebx; cmove eax, edx; add eax, 0x21; ret; 
0x0009c12f: mov edx, 0xffffffff; pop ebx; cmove eax, edx; add eax, 1; ret; 
0x000dfcfd: mov edx, 0xffffffff; pop ebx; cmp dword ptr [ecx + eax], 0x26; mov eax, 0x7f; cmovne eax, edx; ret; 
0x000735dc: mov edx, 0xffffffff; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000801c9: mov edx, 0xffffffff; ret; 
0x0007b94b: mov edx, 0xffffffff; test eax, eax; je 0x7b988; mov eax, edx; pop ebx; ret; 
0x0011aec9: mov edx, 1; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00083785: mov edx, 1; call dword ptr gs:[0x10]; 
0x0016f07b: mov edx, 1; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00091ac6: mov edx, 1; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0008b8ae: mov edx, 1; mov eax, 0xf0; mov ecx, edx; call dword ptr gs:[0x10]; 
0x001743ca: mov edx, 1; mov eax, 0xf0; xor esi, esi; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0007b068: mov edx, 1; mov eax, edx; ret; 
0x0011668e: mov edx, 1; mov edi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0014e2d0: mov edx, 1; pop ebx; pop esi; mov eax, edx; ret; 
0x0008328f: mov edx, 1; push ebx; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00085558: mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0002153b: mov edx, 1; xor ebx, ebx; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x00086b88: mov edx, 1; xor ebx, ebx; nop; mov eax, edx; call dword ptr gs:[0x10]; 
0x0008b536: mov edx, 1; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00083996: mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008502e: mov edx, 1; xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00085cb8: mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00126fc9: mov edx, 2; mov ecx, dword ptr [ebp - 0x500]; mov dword ptr [ebp - 0x4e0], eax; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0011ef16: mov edx, 2; test eax, eax; cmove eax, edx; add esp, 0xc; ret; 
0x000831b3: mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x00083232: mov edx, 2; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00171f47: mov edx, dword ptr [0]; mov dword ptr [edx + eax], 0x16; xor eax, eax; ret; 
0x0014711f: mov edx, dword ptr [0]; mov eax, dword ptr [eax - 0x14]; mov eax, dword ptr [edx + eax]; ret; 
0x000895ff: mov edx, dword ptr [0x68]; mov dword ptr [eax + 8], edx; xor edx, edx; mov eax, edx; ret; 
0x000827ef: mov edx, dword ptr [0x7c]; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x80], eax; ret; 
0x00082826: mov edx, dword ptr [0x7c]; mov dword ptr [eax + 0xc], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x000827e5: mov edx, dword ptr [0x80]; mov dword ptr [eax + 0x1c], edx; mov edx, dword ptr gs:[0x7c]; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x80], eax; ret; 
0x00084408: mov edx, dword ptr [eax + 0x10]; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x001a0a38: mov edx, dword ptr [eax + 0x10]; test edx, edx; je 0x1a0a4c; sub esp, 0xc; push eax; call edx; 
0x00037681: mov edx, dword ptr [eax + 0x10c48300]; test eax, eax; jne 0x37698; add esp, 8; pop ebx; ret; 
0x00149b10: mov edx, dword ptr [eax + 0x1fff90d]; fidivr dword ptr [esi]; jmp edx; 
0x00161a04: mov edx, dword ptr [eax + 0x20]; lea ebx, [esp + 0xe0]; push ebx; push eax; call dword ptr [edx + 8]; 
0x00161f0f: mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x0015dce2: mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x00161373: mov edx, dword ptr [eax + 0x20]; push ebx; push eax; call dword ptr [edx + 4]; 
0x0015dda5: mov edx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [edx + 8]; 
0x001588ff: mov edx, dword ptr [eax + 0x20]; push esi; push eax; call dword ptr [edx + 4]; 
0x0007f34d: mov edx, dword ptr [eax + 0x24]; mov dword ptr [eax + 0x24], ecx; mov dword ptr [eax + 0xc], edx; mov dword ptr [eax + 4], edx; ret; 
0x001636a2: mov edx, dword ptr [eax + 0x28]; mov dword ptr [esp + 0x28], edx; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x0007b0f6: mov edx, dword ptr [eax + 0xc]; mov dword ptr [eax + 0x10], edx; add esp, 8; pop ebx; ret; 
0x0008285a: mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x00161f18: mov edx, dword ptr [eax + 4]; mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x00158e4c: mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x00160199: mov edx, dword ptr [eax + 4]; push ecx; push eax; call dword ptr [edx + 8]; 
0x00163639: mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x0012a80d: mov edx, dword ptr [eax + esi]; pop esi; pop edi; mov eax, edx; ret; 
0x0006c05e: mov edx, dword ptr [eax + esi]; sub esp, 4; push ecx; push edi; push dword ptr [ebp - 0x8a0]; call edx; 
0x00162f1e: mov edx, dword ptr [eax - 0x150]; lea ecx, [eax + 0xa4a0]; mov eax, dword ptr gs:[0]; mov dword ptr [eax + edx], ecx; ret; 
0x0002140e: mov edx, dword ptr [eax - 0xb8]; test edx, edx; je 0x21419; ret; 
0x0008bf4c: mov edx, dword ptr [eax]; and edx, 2; je 0x8bf60; xor eax, eax; ret; 
0x000ca047: mov edx, dword ptr [eax]; cmp edx, ecx; jne 0xca040; ret; 
0x000f7728: mov edx, dword ptr [eax]; mov dword ptr [eax], ecx; mov eax, edx; ret; 
0x00086821: mov edx, dword ptr [eax]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x00104fe8: mov edx, dword ptr [eax]; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x108], edx; xor eax, eax; ret; 
0x00084338: mov edx, dword ptr [eax]; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0007663a: mov edx, dword ptr [eax]; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x00170e17: mov edx, dword ptr [eax]; test edx, edx; jne 0x170e28; add esp, 8; pop ebx; ret; 
0x0003839e: mov edx, dword ptr [eax]; xor eax, eax; test edx, edx; sete al; ret; 
0x0007b34f: mov edx, dword ptr [ebp - 0x34]; lea esi, [esi]; mov eax, edi; call dword ptr gs:[0x10]; 
0x0012f50a: mov edx, dword ptr [ebp - 0x4c]; add esp, 0xc; push eax; push esi; push edx; call dword ptr [ebx + 0x14]; 
0x0008478d: mov edx, dword ptr [ebx + 0x18]; and dword ptr [edx + 8], 0x7fffffff; and dword ptr [edx + 0xc], 0xfffffffe; add esp, 8; pop ebx; ret; 
0x000dd684: mov edx, dword ptr [ebx + 0xc]; mov dword ptr [ebx + 0xc], edx; pop ebx; ret; 
0x0003baa1: mov edx, dword ptr [ebx + 2]; mov dword ptr [eax], edx; xor eax, eax; add esp, 8; pop ebx; ret; 
0x000dd67e: mov edx, dword ptr [ebx + 8]; mov dword ptr [ebx + 8], edx; mov edx, dword ptr [ebx + 0xc]; mov dword ptr [ebx + 0xc], edx; pop ebx; ret; 
0x00081f6f: mov edx, dword ptr [ebx + 8]; mov dword ptr [edx], eax; add esp, 4; pop ebx; pop esi; ret; 
0x0002ed3f: mov edx, dword ptr [ebx + eax*4 + 0x24]; pop ebx; mov eax, edx; ret; 
0x00121f65: mov edx, dword ptr [ebx + ecx]; cmp edx, 0x26; je 0x121fbb; pop ebx; pop esi; ret; 
0x0002cca0: mov edx, dword ptr [ebx + edi*4 - 0x3a0]; test edx, edx; je 0x2ccb5; mov dword ptr [esp + 0xc], eax; call edx; 
0x0002cdc2: mov edx, dword ptr [ebx + edi*4 - 0x3a4]; test edx, edx; je 0x2cdcf; call edx; 
0x00085350: mov edx, dword ptr [ebx]; mov eax, edx; shr eax, 3; je 0x85390; mov eax, edi; call dword ptr gs:[0x10]; 
0x00081ebb: mov edx, dword ptr [ecx + 0x18]; mov dword ptr [eax], edx; add esp, 4; pop ebx; pop esi; ret; 
0x0003009c: mov edx, dword ptr [ecx + 0x30]; add edx, 0x200; mov dword ptr [eax + ebx], edx; pop ebx; pop esi; ret; 
0x00127710: mov edx, dword ptr [ecx + 0x4628]; add word ptr [edx + eax*2], 1; ret; 
0x00130dd3: mov edx, dword ptr [ecx + 0xc]; push esi; mov dword ptr [ebp - 0x44], edx; push edi; push ebx; call eax; 
0x001287e9: mov edx, dword ptr [ecx + edx]; movzx edx, word ptr [edx + eax*2]; and edx, 0x100; mov eax, edx; ret; 
0x00171130: mov edx, dword ptr [ecx - 0xc8]; shl eax, 5; lea eax, [eax + edx + 0x64]; ret; 
0x00083be8: mov edx, dword ptr [edi + 0x10]; test edx, edx; je 0x83c30; xor esi, esi; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00083cae: mov edx, dword ptr [edi + 0xc]; call dword ptr gs:[0x10]; 
0x0013090b: mov edx, dword ptr [edi + 0xc]; push ebx; mov dword ptr [ebp - 0x44], edx; push 0; push 0x1000007; call eax; 
0x0015a4cd: mov edx, dword ptr [edi + 4]; and eax, 0xfffffffc; push eax; push edi; call dword ptr [edx + 0x18]; 
0x0009a3f8: mov edx, dword ptr [edi - 0x148]; mov dword ptr [esp + 0xc], eax; call dword ptr [edx]; 
0x0015a290: mov edx, dword ptr [edx + 0x10]; mov dword ptr [eax], 7; mov dword ptr [eax + 4], edx; pop ebx; ret; 
0x0015a2a3: mov edx, dword ptr [edx + 0x14]; mov dword ptr [eax], 6; mov dword ptr [eax + 4], ecx; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x001312cf: mov edx, dword ptr [edx + 0x14]; xor eax, eax; test edx, edx; sete al; ret; 
0x0015a2d3: mov edx, dword ptr [edx + 0x20]; mov dword ptr [eax], 9; mov dword ptr [eax + 4], ecx; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x0016056a: mov edx, dword ptr [edx + 0x2c]; mov dword ptr [eax + 8], edx; ret; 
0x00160f9a: mov edx, dword ptr [edx + 0x34]; mov dword ptr [eax + 8], edx; ret; 
0x0007b14f: mov edx, dword ptr [edx + 0x58]; mov eax, dword ptr [edx + 0x10]; sub eax, dword ptr [edx + 0xc]; sar eax, 2; ret; 
0x0007b01f: mov edx, dword ptr [edx + 0x58]; mov eax, dword ptr [edx + 0x1c]; sub eax, dword ptr [edx + 0x18]; sar eax, 2; ret; 
0x0015d850: mov edx, dword ptr [edx + 0x8c]; mov dword ptr [eax + 8], edx; ret; 
0x00071a9c: mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 4], edx; jmp eax; 
0x0007199d: mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 8], edx; pop ebx; jmp eax; 
0x00083920: mov edx, dword ptr [edx + 0xc]; call dword ptr gs:[0x10]; 
0x00140961: mov edx, dword ptr [edx + 0xc]; mov dword ptr [eax + 0xc], edx; xor eax, eax; pop ebx; pop esi; ret; 
0x000fbbf7: mov edx, dword ptr [edx + 8]; pop ebx; pop esi; mov eax, edx; ret; 
0x000216e8: mov edx, dword ptr [edx - 0x134]; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; ret; 
0x000379a7: mov edx, dword ptr [edx - 0x134]; neg eax; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; pop ebx; ret; 
0x00075873: mov edx, dword ptr [edx]; cmp eax, ecx; cmovg eax, ecx; test edx, edx; jne 0x75870; ret; 
0x0007f133: mov edx, dword ptr [edx]; cmp eax, ecx; cmovg eax, ecx; test edx, edx; jne 0x7f130; ret; 
0x00082922: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x104], edx; ret; 
0x00082942: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x108], edx; ret; 
0x00082962: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x10c], edx; ret; 
0x00082982: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x110], edx; ret; 
0x00089572: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x114], edx; ret; 
0x00089552: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x11c], edx; ret; 
0x00126c3c: mov edx, dword ptr [edx]; mov dword ptr [eax], edx; mov eax, 1; ret; 
0x0008ea3c: mov edx, dword ptr [edx]; mov ecx, dword ptr [eax]; cmp dword ptr [edx + 0x10], ecx; je 0x8ea50; ret; 
0x00094372: mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x1cc], edx; ret; 
0x00094352: mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x1d0], edx; ret; 
0x00094402: mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x208], edx; ret; 
0x000946e2: mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x3b68], edx; ret; 
0x00082709: mov edx, dword ptr [edx]; push ebx; push eax; push ecx; call edx; 
0x000b64d1: mov edx, dword ptr [edx]; xor eax, eax; test edx, edx; sete al; ret; 
0x00130d12: mov edx, dword ptr [esi + 0x30]; push ebx; mov dword ptr [ebp - 0x44], edx; push 0; push 0x1000004; call eax; 
0x001310ae: mov edx, dword ptr [esi + 0x30]; push ebx; push 0; push 0x1000001; mov dword ptr [ebp - 0x44], edx; call eax; 
0x000afdc2: mov edx, dword ptr [esi + 3]; mov dword ptr [eax], ecx; mov dword ptr [eax + 3], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0006e8a5: mov edx, dword ptr [esi + eax*4 - 0x735e0]; add edx, ebx; jmp edx; 
0x0002cdbb: mov edx, dword ptr [esi + edi*4 - 4]; mov dword ptr [ebp - 0x40], edx; mov edx, dword ptr [ebx + edi*4 - 0x3a4]; test edx, edx; je 0x2cdcf; call edx; 
0x00130705: mov edx, dword ptr [esi - 0x18]; push ebx; push 0; push 0x1000003; mov dword ptr [ebp - 0x44], edx; call eax; 
0x000b31d3: mov edx, dword ptr [esi]; mov dword ptr [eax], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afd80: mov edx, dword ptr [esi]; mov dword ptr [eax], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00120fb4: mov edx, dword ptr [esi]; mov dword ptr [eax], edx; pop ebx; pop esi; pop edi; ret; 
0x000ac090: mov edx, dword ptr [esi]; mov dword ptr [edi], edx; pop edi; pop esi; pop ebx; ret; 
0x000b31a4: mov edx, dword ptr [esi]; mov word ptr [eax], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afd61: mov edx, dword ptr [esi]; mov word ptr [eax], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ac071: mov edx, dword ptr [esi]; mov word ptr [edi], dx; pop edi; pop esi; pop ebx; ret; 
0x0008361e: mov edx, dword ptr [esi]; test edx, edx; je 0x83600; sub esp, 0xc; push eax; call edx; 
0x001254f9: mov edx, dword ptr [esp + 0x10]; mov dword ptr [esp + 0x18], eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x001254ab: mov edx, dword ptr [esp + 0x10]; mov dword ptr [esp + 0x18], eax; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x00125442: mov edx, dword ptr [esp + 0x10]; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x0008d77d: mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x001096eb: mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00123f25: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00123b25: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x00109bc5: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x0010c295: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x0010c1d5: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x0010afe5: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x001152f5: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x0010c205: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x55; call dword ptr gs:[0x10]; 
0x00117025: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x00120fc5: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x00123bd5: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x001238d5: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x0011c525: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x001239c5: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x001239f5: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x000fafe5: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x00123c45: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000de875: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x0010bbe5: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x0010bbb5: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000df6b5: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000df6e5: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x0010bb85: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x0011c655: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x0011c625: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x0011f3f5: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x0011f455: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x0011f325: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x000305db: mov edx, dword ptr [esp + 0x14]; add esp, 0xc; mov eax, edx; ret; 
0x00087ecd: mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x0017802e: mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x000932fa: mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0010c23a: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x00123cea: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x001120fa: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xbb; call dword ptr gs:[0x10]; 
0x0011f3ca: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x0011f42a: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x0011f2fa: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x0011212a: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xef; call dword ptr gs:[0x10]; 
0x00123a8a: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x00116acd: mov edx, dword ptr [esp + 0x14]; mov esi, ebx; call dword ptr gs:[0x10]; 
0x00159709: mov edx, dword ptr [esp + 0x14]; push edx; push ebx; call dword ptr [eax + 0x14]; 
0x00125c45: mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00121fee: mov edx, dword ptr [esp + 0x18]; cmp esi, -1; je 0x122010; mov eax, 0x17c; call dword ptr gs:[0x10]; 
0x000f82bb: mov edx, dword ptr [esp + 0x18]; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x00109382: mov edx, dword ptr [esp + 0x18]; mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x000fb300: mov edx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x10]; cmp esi, ecx; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x00058a6b: mov edx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0011c68f: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x0010bc1f: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0010c16f: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x00123e0f: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x00123c0f: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x00123aef: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x00123caf: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0011f52f: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x0011f4bf: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x0011f38f: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x0017a333: mov edx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x001260e3: mov edx, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00166f7c: mov edx, dword ptr [esp + 0x18]; test edx, edx; jne 0x166f90; add esp, 0xc; ret; 
0x00166fcc: mov edx, dword ptr [esp + 0x18]; test edx, edx; jne 0x166fe0; add esp, 0xc; ret; 
0x0012318d: mov edx, dword ptr [esp + 0x1c]; mov eax, 0x12c; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x00159306: mov edx, dword ptr [esp + 0x1c]; mov eax, dword ptr [edx + 4]; mov dword ptr [esp], edx; call dword ptr [eax + 0x10]; 
0x0010529c: mov edx, dword ptr [esp + 0x1c]; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x0013362e: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x133645; add esp, 0x2c; ret; 
0x0013369e: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x1336b5; add esp, 0x2c; ret; 
0x0013aadf: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x13aaf0; add esp, 0x2c; ret; 
0x0003ad55: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x3ad66; add esp, 0x2c; ret; 
0x0003ae85: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x3ae96; add esp, 0x2c; ret; 
0x000821ae: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x821dd; add esp, 0x2c; ret; 
0x00082316: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x8234b; add esp, 0x2c; ret; 
0x000864f7: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x86508; add esp, 0x2c; ret; 
0x0008ae93: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x8aea4; add esp, 0x2c; ret; 
0x0008c1f7: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x8c208; add esp, 0x2c; ret; 
0x0008c657: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x8c668; add esp, 0x2c; ret; 
0x0008cb43: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x8cb54; add esp, 0x2c; ret; 
0x0008cf93: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x8cfa4; add esp, 0x2c; ret; 
0x0009004c: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x90077; add esp, 0x2c; ret; 
0x000902d8: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x90307; add esp, 0x2c; ret; 
0x00123882: mov edx, dword ptr [esp + 0x1c]; test esi, 2; mov ebx, dword ptr [esp + 0x14]; cmovne edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x001434ad: mov edx, dword ptr [esp + 0x20]; call edx; 
0x0011c1a4: mov edx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x1c]; mov ebx, dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000fb0e4: mov edx, dword ptr [esp + 0x24]; mov ebx, dword ptr [esp + 0x20]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0003bc3c: mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00121ea7: mov edx, dword ptr [esp + 0x28]; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x0003bc67: mov edx, dword ptr [esp + 0x28]; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x0011c5a7: mov edx, dword ptr [esp + 0x28]; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x001172b7: mov edx, dword ptr [esp + 0x28]; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x00117387: mov edx, dword ptr [esp + 0x28]; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x001116f7: mov edx, dword ptr [esp + 0x28]; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x0010a1c7: mov edx, dword ptr [esp + 0x28]; mov eax, 3; call dword ptr gs:[0x10]; 
0x0010a297: mov edx, dword ptr [esp + 0x28]; mov eax, 4; call dword ptr gs:[0x10]; 
0x00119577: mov edx, dword ptr [esp + 0x2c]; sub edx, dword ptr gs:[0x14]; jne 0x119597; add esp, 0x3c; ret; 
0x0017a3b1: mov edx, dword ptr [esp + 0x34]; lea edi, [esp + 8]; mov eax, 0x75; mov ebx, 3; call dword ptr gs:[0x10]; 
0x000ce9c0: mov edx, dword ptr [esp + 0x34]; mov ebx, dword ptr [esp + 0x30]; lea ecx, [esp + 0xc]; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x00122134: mov edx, dword ptr [esp + 0x34]; mov ebx, dword ptr [esp + 0x30]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00103b26: mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001266fb: mov edx, dword ptr [esp + 0x38]; lea esi, [esp + 8]; mov edi, dword ptr [esp + 0x34]; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0011746b: mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x0011763b: mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x00103b51: mov edx, dword ptr [esp + 0x38]; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x00103c31: mov edx, dword ptr [esp + 0x38]; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x001092a6: mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 0x40]; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000ddb2e: mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000ddb5f: mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov dword ptr [esp + 8], eax; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x00121aef: mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x00121bcf: mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x00121caf: mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x001257ff: mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x00163644: mov edx, dword ptr [esp + 0x3c]; sub edx, dword ptr gs:[0x14]; jne 0x163655; add esp, 0x4c; ret; 
0x000dbd26: mov edx, dword ptr [esp + 0x40]; mov dword ptr [edx], ebx; add esp, 0x28; pop ebx; ret; 
0x000936cd: mov edx, dword ptr [esp + 0x48]; mov eax, 0x117; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x0009340d: mov edx, dword ptr [esp + 0x48]; mov eax, 0x118; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00093651: mov edx, dword ptr [esp + 0x48]; mov eax, 0x1a2; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x00093395: mov edx, dword ptr [esp + 0x48]; mov eax, 0x1a3; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00093459: mov edx, dword ptr [esp + 0x48]; mov ecx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x118; call dword ptr gs:[0x10]; 
0x000934a9: mov edx, dword ptr [esp + 0x48]; mov ecx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x1a3; call dword ptr gs:[0x10]; 
0x00125b45: mov edx, dword ptr [esp + 0x48]; mov esi, dword ptr [esp + 0x50]; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x00122245: mov edx, dword ptr [esp + 0x54]; lea ecx, [esp + 0x1c]; mov eax, 0x19a; call dword ptr gs:[0x10]; 
0x00116b30: mov edx, dword ptr [esp + 0x64]; mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 4]; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x001259fc: mov edx, dword ptr [esp + 0x6c]; sub edx, dword ptr gs:[0x14]; jne 0x125a14; add esp, 0x7c; ret; 
0x00068f72: mov edx, dword ptr [esp + 0x70]; movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edx + eax*4]; add ecx, ebp; jmp ecx; 
0x000dd83e: mov edx, dword ptr [esp + 0x88]; mov ecx, ebp; cmove esi, eax; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x00109ad7: mov edx, dword ptr [esp + 0x98]; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x0010a7b8: mov edx, dword ptr [esp + 0xa8]; mov eax, 0x133; call dword ptr gs:[0x10]; 
0x0010a656: mov edx, dword ptr [esp + 0xa8]; mov esi, dword ptr [esp + 0xac]; call dword ptr gs:[0x10]; 
0x00166b58: mov edx, dword ptr [esp + 0xc]; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x00071a5f: mov edx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x00118f30: mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00036345: mov edx, dword ptr [esp + 0xc]; fld dword ptr [esp]; mov dword ptr [edx], eax; add esp, 4; ret; 
0x0017198f: mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x000d70c0: mov edx, dword ptr [esp + 0xc]; mov dword ptr [edx], ebx; pop ebx; ret; 
0x00088a58: mov edx, dword ptr [esp + 0xc]; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00088a93: mov edx, dword ptr [esp + 0xc]; mov ecx, esi; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00068e3b: mov edx, dword ptr [esp + 0xc]; movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edx + eax*4 - 0x737e0]; add ecx, ebp; jmp ecx; 
0x0006913b: mov edx, dword ptr [esp + 0xc]; movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edx + eax*4 - 0x73860]; add ecx, ebp; jmp ecx; 
0x0010505a: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x105077; add esp, 0x1c; ret; 
0x001165f1: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x116609; add esp, 0x1c; ret; 
0x0011836e: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x11837f; add esp, 0x1c; ret; 
0x001195e8: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x1195f9; add esp, 0x1c; ret; 
0x0011d392: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x11d3a3; add esp, 0x1c; ret; 
0x001252b2: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x1252c3; add esp, 0x1c; ret; 
0x00145504: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x145515; add esp, 0x1c; ret; 
0x00145550: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x145561; add esp, 0x1c; ret; 
0x0014736e: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x1473bc; add esp, 0x1c; ret; 
0x0016224d: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x162267; add esp, 0x1c; ret; 
0x00162769: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x16277a; add esp, 0x1c; ret; 
0x001745c2: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x1745d3; add esp, 0x1c; ret; 
0x0003b797: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x3b7a8; add esp, 0x1c; ret; 
0x0003b7ea: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x3b7fb; add esp, 0x1c; ret; 
0x0003b837: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x3b848; add esp, 0x1c; ret; 
0x0003b88a: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x3b89b; add esp, 0x1c; ret; 
0x00058941: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x5895f; add esp, 0x1c; ret; 
0x000cad87: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xcad98; add esp, 0x1c; ret; 
0x000d482b: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xd483c; add esp, 0x1c; ret; 
0x000d6ebb: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xd6ecc; add esp, 0x1c; ret; 
0x0008d73d: mov edx, dword ptr [esp + 4]; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x00084bad: mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0002ff78: mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0002ff98: mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0002f7ae: mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0002fdae: mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x28]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x0002fd7e: mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x30]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00166774: mov edx, dword ptr [esp + 4]; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x0003ab54: mov edx, dword ptr [esp + 4]; mov eax, edx; neg eax; cmovs eax, edx; ret; 
0x0008291e: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x104], edx; ret; 
0x0008293e: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x108], edx; ret; 
0x0008295e: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x10c], edx; ret; 
0x0008297e: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x110], edx; ret; 
0x0008956e: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x114], edx; ret; 
0x0008954e: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x11c], edx; ret; 
0x0009436e: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x1cc], edx; ret; 
0x0009434e: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x1d0], edx; ret; 
0x000943fe: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x208], edx; ret; 
0x000946de: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x3b68], edx; ret; 
0x0002fc9e: mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x0002fc6e: mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x0002fc3e: mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x0002fb7e: mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x0002fbde: mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x0002faee: mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x0002fbae: mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x0002fb4e: mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x0002fd4e: mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x0002fb1e: mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x0002fc0e: mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x0002fabe: mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x001719b8: mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x00167040: mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0xc], edx; ret; 
0x00084648: mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x00104468: mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x00084854: mov edx, dword ptr [esp + 8]; mov eax, 0x16; cmp edx, 0x3fff; ja 0x84870; ret; 
0x00080b78: mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x00171968: mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x0002df88: mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x0010fb88: mov edx, dword ptr [esp + 8]; mov word ptr [edx + 0x3e], ax; xor eax, eax; ret; 
0x00111518: mov edx, dword ptr [esp + 8]; mov word ptr [edx + 0x42], ax; xor eax, eax; ret; 
0x00084838: mov edx, dword ptr [esp + 8]; or dword ptr [eax + 8], 8; mov dword ptr [eax + 0x10], edx; xor eax, eax; ret; 
0x00089652: mov edx, dword ptr [esp + 8]; shr eax, 0x13; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0008e4fa: mov edx, dword ptr [esp + 8]; shr eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00171dfd: mov edx, dword ptr [esp]; ret; 
0x00119622: mov edx, dword ptr es:[edx - 0x134]; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; ret; 
0x00171f46: mov edx, dword ptr gs:[0]; mov dword ptr [edx + eax], 0x16; xor eax, eax; ret; 
0x0014711e: mov edx, dword ptr gs:[0]; mov eax, dword ptr [eax - 0x14]; mov eax, dword ptr [edx + eax]; ret; 
0x000895fe: mov edx, dword ptr gs:[0x68]; mov dword ptr [eax + 8], edx; xor edx, edx; mov eax, edx; ret; 
0x000827ee: mov edx, dword ptr gs:[0x7c]; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x80], eax; ret; 
0x00082825: mov edx, dword ptr gs:[0x7c]; mov dword ptr [eax + 0xc], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x000827e4: mov edx, dword ptr gs:[0x80]; mov dword ptr [eax + 0x1c], edx; mov edx, dword ptr gs:[0x7c]; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x80], eax; ret; 
0x000ddd0d: mov edx, eax; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x00118d89: mov edx, eax; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00118e69: mov edx, eax; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x00037a0e: mov edx, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x000852a4: mov edx, eax; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00085a15: mov edx, eax; mov eax, 0xf0; or edx, 2; call dword ptr gs:[0x10]; 
0x0010af09: mov edx, eax; mov eax, 6; call dword ptr gs:[0x10]; 
0x0010b0dd: mov edx, eax; mov eax, 8; call dword ptr gs:[0x10]; 
0x00080b54: mov edx, eax; mov eax, dword ptr [eax]; test eax, eax; jne 0x80b50; ret; 
0x00085765: mov edx, eax; mov eax, edi; or edx, 2; call dword ptr gs:[0x10]; 
0x000a1b18: mov edx, eax; xor eax, eax; mov dword ptr [esi], edx; pop ebx; pop esi; ret; 
0x00198c70: mov edx, eax; xor eax, eax; tzcnt edx, edx; add eax, edx; ret; 
0x00109c3a: mov edx, ebp; call dword ptr gs:[0x10]; 
0x000916a8: mov edx, ebp; mov dword ptr [esp + 0x28], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x00109c6e: mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x001118be: mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x0010ab7b: mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000d7877: mov edx, ebp; mov ebx, 1; call dword ptr gs:[0x10]; 
0x000d778d: mov edx, ebp; mov edi, eax; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000d78f2: mov edx, ebp; mov edi, eax; mov esi, dword ptr [esp + 4]; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000d76c4: mov edx, ebp; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x00081739: mov edx, ebp; pop ebp; ret; 
0x00021a83: mov edx, ebp; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000b8922: mov edx, ebp; pop edi; pop ebp; ret; 
0x000587d3: mov edx, ebp; pop es; add byte ptr [ebx - 0x768bdbbc], cl; ret; 
0x0006e791: mov edx, ebx; add edx, dword ptr [esi + eax*4]; jmp edx; 
0x00104c0d: mov edx, ebx; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x00123d44: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x136; call dword ptr gs:[0x10]; 
0x00123a54: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x149; call dword ptr gs:[0x10]; 
0x00123b74: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x00118ee4: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x158; call dword ptr gs:[0x10]; 
0x00123ed4: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x17e; call dword ptr gs:[0x10]; 
0x000ddbe4: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x0010c2c4: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x28; call dword ptr gs:[0x10]; 
0x0010af84: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x29; call dword ptr gs:[0x10]; 
0x00118ce4: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x33; call dword ptr gs:[0x10]; 
0x00109924: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x00109924: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3c; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00118d14: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x00123d74: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x56; call dword ptr gs:[0x10]; 
0x00120ff4: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x00119244: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x00123904: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x71; call dword ptr gs:[0x10]; 
0x001192a4: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x73; call dword ptr gs:[0x10]; 
0x00123d14: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x000dd614: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x00123ab4: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x82; call dword ptr gs:[0x10]; 
0x000df5b4: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x84; call dword ptr gs:[0x10]; 
0x0010b1a4: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x00121a74: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x88; call dword ptr gs:[0x10]; 
0x00121a74: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x88; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x000df664: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x93; call dword ptr gs:[0x10]; 
0x0011c724: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x98; call dword ptr gs:[0x10]; 
0x000fb014: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x000fb064: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x000fb094: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x0010c264: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xa; call dword ptr gs:[0x10]; 
0x0010b174: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xc; call dword ptr gs:[0x10]; 
0x001213f4: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x00121414: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x00121414: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd8; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00123a24: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xfe; call dword ptr gs:[0x10]; 
0x00123ba4: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x00123da4: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x00121814: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x0010b064: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x00123dd4: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x00123e44: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x00123e74: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x00123ea4: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x00037944: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x00109b94: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x27; call dword ptr gs:[0x10]; 
0x000df5e4: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x0010afb4: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x3f; call dword ptr gs:[0x10]; 
0x001184b4: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x0010c1a4: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x53; call dword ptr gs:[0x10]; 
0x00119274: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x0011c4f4: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x00109974: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x001185d4: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x00123934: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x0010abe4: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x0011c6c4: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x0011c6f4: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x000faf84: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x000fafb4: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x00121024: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x00123964: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x00123994: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x00037f94: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000df384: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x00123c74: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x0011f4f4: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x0011f484: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x0011f354: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x00109944: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xf; call dword ptr gs:[0x10]; 
0x0010c134: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 9; call dword ptr gs:[0x10]; 
0x00104d66: mov edx, ebx; mov ecx, eax; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x0009167d: mov edx, ecx; mov ecx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00111a78: mov edx, ecx; mov edi, dword ptr [esp + 0x1c]; sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x00120ee2: mov edx, ecx; pop edi; pop ebp; ret; 
0x000365be: mov edx, ecx; sub edx, 0x7fff0000; mov eax, edx; shr eax, 0x1f; ret; 
0x0003859d: mov edx, edi; call dword ptr gs:[0x10]; 
0x00086a39: mov edx, edi; lea ecx, [eax + 0x47c]; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x000d77f9: mov edx, edi; mov dword ptr [esp + 0xc], eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x00109dce: mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000386bc: mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x1a5; call dword ptr gs:[0x10]; 
0x00038664: mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x0010a95a: mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x001253cb: mov edx, edi; mov edi, ebp; call dword ptr gs:[0x10]; 
0x00076d25: mov edx, edi; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00076d6f: mov edx, edi; pop edi; pop ebp; ret; 
0x000cebd1: mov edx, esi; call dword ptr gs:[0x10]; 
0x0017445f: mov edx, esi; mov edi, eax; mov eax, ebp; call dword ptr gs:[0x10]; 
0x00036a71: mov edx, fs; add byte ptr [eax], al; add byte ptr [ecx + 0x9024bc], al; add byte ptr [eax], al; push eax; ret; 
0x0019d105: mov es, esi; add eax, 0x9c8b0000; and al, 0x80; add byte ptr [eax], al; add dh, dh; ret; 
0x000889c5: mov es, word ptr [eax - 0x76000726]; push esp; and al, 8; mov esi, 8; call dword ptr gs:[0x10]; 
0x00196cfe: mov es, word ptr [eax]; add byte ptr [eax], al; lea eax, [ecx + 8]; ret; 
0x0019616e: mov es, word ptr [eax]; add byte ptr [eax], al; lea eax, [edi - 8]; pop edi; ret; 
0x000314de: mov es, word ptr [ecx + 8]; add byte ptr [ebx - 0x3f7cef3c], al; sbb al, 0x89; loope 0x31474; ret; 
0x000c84de: mov es, word ptr [edx]; add al, 0; add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x0009b1b9: mov esi, 0x10c483c2; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000c254b: mov esi, 0x39ae048b; ret; 
0x0009a1a1: mov esi, 0x3b58; add byte ptr [esp + ebx - 0x7d], dh; in al, dx; or byte ptr [ebp - 0x6bc737a], cl; call dword ptr [ebx + 0x50]; 
0x00086ba5: mov esi, 0x53053053; lea ebx, [eax + 0x520]; mov eax, 0x182; call dword ptr gs:[0x10]; 
0x00165137: mov esi, 0x810000cc; ret; 
0x0014d837: mov esi, 0x81000245; ret; 
0x0012be37: mov esi, 0x8100045f; ret; 
0x000cc637: mov esi, 0x81000a57; ret; 
0x00084137: mov esi, 0x81000edc; ret; 
0x0007f437: mov esi, 0x81000f29; ret; 
0x0003ac37: mov esi, 0x81001371; ret; 
0x001a1437: mov esi, 0x81fffd09; ret; 
0x001a0e37: mov esi, 0x81fffd0f; ret; 
0x0017f937: mov esi, 0x81ffff24; ret; 
0x0017ab37: mov esi, 0x81ffff72; ret; 
0x000d2591: mov esi, 0x83d3890a; ret 0x8901; 
0x000c4301: mov esi, 0x83d789c0; rol dword ptr [ecx], 0x83; ret 0x8b01; 
0x000fc461: mov esi, 0x83df89ca; ret; 
0x000514bc: mov esi, 0x83ea2900; rol byte ptr [ecx], 0x39; ret 0x3a74; 
0x0006137e: mov esi, 0x83fffff2; in al, dx; or byte ptr [ebx - 0x50b4b], cl; call dword ptr [edi - 1]; 
0x000cbb6e: mov esi, 0x83fffff6; les ebx, ptr [eax]; pop ebx; ret; 
0x0002d677: mov esi, 0x895f3cd0; push ebp; ror byte ptr [edi], 0x94; ret 0x3a3c; 
0x000cc45b: mov esi, 0x89fff8e4; ret 0x80b8; 
0x0007d6fb: mov esi, 0x8b000000; inc esi; add al, 0x8b; push esi; or byte ptr [ecx], ch; ret 0xfa39; 
0x0002652e: mov esi, 0x8b0010d4; je 0x26559; cmp al, 0x8d; xchg byte ptr [eax], ah; push -7; call dword ptr [eax - 0x73]; 
0x0014f3c6: mov esi, 0x8d0cec83; add ah, 0xad; stc; call dword ptr [eax - 0x18]; 
0x00092674: mov esi, 0x8d88758b; xchg byte ptr [eax - 0x7c], ah; stc; call dword ptr [eax + 0x68]; 
0x000c7b66: mov esi, 0x8dffffed; mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x0002cdbd: mov esi, 0xc05589fc; mov edx, dword ptr [ebx + edi*4 - 0x3a4]; test edx, edx; je 0x2cdcf; call edx; 
0x00066bbb: mov esi, 0xc4830000; adc byte ptr [ecx], bh; ret; 
0x0004982f: mov esi, 0xc4830006; adc byte ptr [ebx + 0x128244c], cl; ret; 
0x00034325: mov esi, 0xc483fffe; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000a1d64: mov esi, 0xda390114; je 0xa1d60; pop ebx; ret; 
0x00119fc4: mov esi, 0xe85357f8; ret; 
0x001981de: mov esi, 0xf6000000; ret 0xf0f; 
0x000a1dc5: mov esi, 0xfc53906; xchg esp, eax; ret 0xc739; 
0x001332e6: mov esi, 0xffef84e8; jmp dword ptr [esi - 0x70]; 
0x000872e4: mov esi, 8; call dword ptr gs:[0x10]; 
0x00087264: mov esi, 8; mov dword ptr [esp + 8], edx; call dword ptr gs:[0x10]; 
0x00037803: mov esi, 8; mov eax, 0xae; call dword ptr gs:[0x10]; 
0x00038596: mov esi, 8; mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x00086a34: mov esi, 8; mov edx, edi; lea ecx, [eax + 0x47c]; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0004ab7b: mov esi, dword ptr [eax + 0x28]; mov ebp, dword ptr [eax + 0x2c]; mov ebx, dword ptr [eax + 0x34]; xor eax, eax; ret; 
0x000de406: mov esi, dword ptr [eax - 0x134]; jmp 0xde421; nop; mov eax, edx; call dword ptr gs:[0x10]; 
0x0013f0c7: mov esi, dword ptr [ebp - 0x48]; mov eax, dword ptr [ebp - 0x40]; mov ebx, dword ptr [ebp - 0x30]; mov dword ptr [edi + esi], eax; mov eax, 6; call dword ptr gs:[0x10]; 
0x000918cd: mov esi, dword ptr [ebp]; mov dword ptr [esp], ebp; call 0x20140; mov dword ptr [esp], edi; call esi; 
0x001338f1: mov esi, dword ptr [ecx + 4]; mov edi, dword ptr [ecx + 8]; mov ebp, dword ptr [ecx + 0xc]; nop; jmp edx; 
0x0005847b: mov esi, dword ptr [ecx]; stc; call dword ptr [eax - 1]; 
0x0004ac83: mov esi, dword ptr [edi + 0x3c]; mov edi, dword ptr [edi + 0x38]; ret; 
0x00116a6f: mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x001217d4: mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00123703: mov esi, dword ptr [esp + 0x18]; mov ebx, ecx; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x1b3; int 0x80; 
0x00111a74: mov esi, dword ptr [esp + 0x18]; mov edx, ecx; mov edi, dword ptr [esp + 0x1c]; sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x00077a70: mov esi, dword ptr [esp + 0x18]; push esi; call dword ptr [edi + 0x40]; 
0x00108ec1: mov esi, dword ptr [esp + 0x1bc]; lea edx, [esp + 0x2c]; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x00058a73: mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0012319a: mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x001052a4: mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x00058ad3: mov esi, dword ptr [esp + 0x20]; test edi, edi; je 0x58b20; mov eax, 0x161; call dword ptr gs:[0x10]; 
0x0016e545: mov esi, dword ptr [esp + 0x24]; call esi; 
0x00048066: mov esi, dword ptr [esp + 0x28]; mov eax, 0x25; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x000ddb32: mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000ddb63: mov esi, dword ptr [esp + 0x3c]; mov dword ptr [esp + 8], eax; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x00121af3: mov esi, dword ptr [esp + 0x3c]; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x00121bd3: mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x00121cb3: mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x00125803: mov esi, dword ptr [esp + 0x3c]; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x001092ae: mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00125a52: mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x000fb1d6: mov esi, dword ptr [esp + 0x44]; lea ecx, [esp + 0xc]; mov eax, 0x1a7; call dword ptr gs:[0x10]; 
0x001164e6: mov esi, dword ptr [esp + 0x44]; mov ebx, dword ptr [esp + 0x40]; lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000d70f5: mov esi, dword ptr [esp + 0x44]; mov ebx, dword ptr [esp + 0x40]; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0009365c: mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x0009372b: mov esi, dword ptr [esp + 0x4c]; mov eax, 0x117; call dword ptr gs:[0x10]; 
0x0009377b: mov esi, dword ptr [esp + 0x4c]; mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x00125b49: mov esi, dword ptr [esp + 0x50]; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x0011236b: mov esi, dword ptr [esp + 0x5c]; mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x001122be: mov esi, dword ptr [esp + 0x5c]; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0006e78d: mov esi, dword ptr [esp + 0x70]; mov edx, ebx; add edx, dword ptr [esi + eax*4]; jmp edx; 
0x001230fb: mov esi, dword ptr [esp + 0xa0]; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x0010a65d: mov esi, dword ptr [esp + 0xac]; call dword ptr gs:[0x10]; 
0x000658da: mov esi, dword ptr [esp + 0xc]; push esi; push eax; push ebp; mov eax, dword ptr [esp + 0x1c]; call dword ptr [eax + 0x1c]; 
0x000d76c6: mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000d78f6: mov esi, dword ptr [esp + 4]; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000d7789: mov esi, dword ptr [esp + 4]; mov edx, ebp; mov edi, eax; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x00171e05: mov esi, dword ptr [esp]; ret; 
0x0016c0d9: mov esi, eax; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x00159828: mov esi, eax; mov eax, dword ptr [ebx + 4]; add esp, 0x14; push ebx; call dword ptr [eax + 0x10]; 
0x0008af5e: mov esi, eax; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x00093ee0: mov esi, ebp; call dword ptr gs:[0x10]; 
0x00116ad1: mov esi, ebx; call dword ptr gs:[0x10]; 
0x001169f0: mov esi, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00088eb3: mov esi, ecx; call dword ptr gs:[0x10]; 
0x00122372: mov esi, edi; call dword ptr gs:[0x10]; 
0x00121894: mov esi, edi; inc dword ptr [ebx - 0x6af0f708]; rol byte ptr [ebx - 0x49f0d33c], 0xc0; neg eax; ret; 
0x00121853: mov esi, edi; inc dword ptr [ebx - 0x6af0f708]; rol byte ptr [ebx - 0x49f0e33c], 0xc0; neg eax; ret; 
0x00086c22: mov esi, edx; call dword ptr gs:[0x10]; 
0x000b46bf: mov esi, edx; cld; pop edi; ret; 
0x00089812: mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x000b4cd3: mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x000b4d63: mov esi, edx; mov eax, dword ptr [esp + 8]; cld; pop edi; ret; 
0x000b4d39: mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000b4699: mov esi, edx; pop edi; ret; 
0x0012677b: mov esi, edx; push ebx; mov ebx, 0x16; mov edi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000b4db3: mov esi, edx; ret; 
0x0009f4b4: mov esi, esi; add dword ptr [eax], eax; add byte ptr [ebx + 0x29142454], cl; ret 0x8b90; 
0x00089bd5: mov esi, esp; add dword ptr [eax], eax; add byte ptr [eax + 0xf0], bh; mov ebx, ebp; mov esi, ecx; call dword ptr gs:[0x10]; 
0x0010a3fa: mov esi, esp; mov ebx, dword ptr [esp + 0x30]; mov edi, dword ptr [esp + 0x3c]; mov eax, 0x8c; call dword ptr gs:[0x10]; 
0x00092eee: mov esi, fs; call dword ptr [eax + 0x56]; 
0x00130ecd: mov esp, 0; push 0x1000002; call edx; 
0x0008de55: mov esp, 0x1a20c3; add bh, dh; mov dword ptr [ecx], 0x74000000; aad 0x89; ret 0xe083; 
0x0005b99f: mov esp, 0x1fffffb; ret 0xd801; 
0x0005e36c: mov esp, 0x1fffffb; ret 0xf001; 
0x00198c82: mov esp, 0x20b8d2; add byte ptr [eax], al; add eax, edx; ret; 
0x00054926: mov esp, 0x31d829d2; fstp xword ptr [ecx]; ret 0xbb7d; 
0x0013df18: mov esp, 0x39000002; ret; 
0x00083900: mov esp, 0x390005b9; ret; 
0x00077093: mov esp, 0x5250d029; push edi; call dword ptr [ebx + 0x38]; 
0x00109746: mov esp, 0x53001208; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x001734bb: mov esp, 0x55000000; push edi; push esi; call dword ptr [ebx + 0x40]; 
0x0019cfbc: mov esp, 0x5b000000; pop esi; pop edi; pop ebp; ret 4; 
0x00057ca4: mov esp, 0x5b000000; pop esi; pop edi; pop ebp; ret; 
0x0016da52: mov esp, 0x5b000001; pop esi; pop edi; pop ebp; ret; 
0x0014afd3: mov esp, 0x5b000002; pop esi; pop edi; pop ebp; ret; 
0x000222e0: mov esp, 0x5bf4658d; pop esi; pop edi; pop ebp; ret; 
0x000abf60: mov esp, 0x5f000005; pop esi; pop ebx; ret; 
0x000abc60: mov esp, 0x5f000008; pop esi; pop ebx; ret; 
0x000a271a: mov esp, 0x5fd001d2; pop esi; ret; 
0x000b3cc1: mov esp, 0x5ff801c0; ret; 
0x00030040: mov esp, 0x65fffffe; add eax, dword ptr [0]; ret; 
0x00164515: mov esp, 0x6afff9b1; add eax, 0xcc838d50; jb 0x16451a; call dword ptr [eax - 0x18]; 
0x000b3cf1: mov esp, 0x76c229c0; cmp dword ptr [ecx], eax; clc; pop edi; ret; 
0x000b3d04: mov esp, 0x76c229c0; lea eax, es:[edi + eax + 0x10]; pop edi; ret; 
0x000b3d24: mov esp, 0x76c229c0; push es; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000b3d14: mov esp, 0x76c229c0; push ss; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x0007a615: mov esp, 0x7e24828d; stc; call dword ptr [eax - 0x73]; 
0x000afd01: mov esp, 0x7f0ff3d1; and byte ptr [ebx - 0x3f7cef3a], al; adc al, ch; jmp dword ptr [eax]; 
0x0016df39: mov esp, 0x8100003e; ret; 
0x0015cb39: mov esp, 0x81000152; ret; 
0x0015a339: mov esp, 0x8100017a; ret; 
0x0013ec39: mov esp, 0x81000331; ret; 
0x00139039: mov esp, 0x8100038d; ret; 
0x00134539: mov esp, 0x810003d8; ret; 
0x00133239: mov esp, 0x810003eb; ret; 
0x0011e439: mov esp, 0x81000539; ret; 
0x000eaa51: mov esp, 0x81000873; shr dword ptr [ebx + 0x550013f5], 0x89; ret 0x5657; 
0x0009cf39: mov esp, 0x81000d4e; ret; 
0x0008fb39: mov esp, 0x81000e22; ret; 
0x00081039: mov esp, 0x81000f0d; ret; 
0x00108810: mov esp, 0x83000002; les ebx, ptr [eax]; pop ebx; ret; 
0x000220f0: mov esp, 0x83000005; les edx, ptr [eax]; neg eax; sbb eax, eax; add esp, 0xc; ret; 
0x000ab963: mov esp, 0x83ce01d2; ret 0x2910; 
0x000a2724: mov esp, 0x83d001d2; rcl byte ptr [eax], 0x5f; pop esi; ret; 
0x000a273e: mov esp, 0x83d001d2; sal byte ptr [eax], 0x5f; pop esi; ret; 
0x000a2731: mov esp, 0x83d001d2; shl byte ptr [eax], 0x5f; pop esi; ret; 
0x00095510: mov esp, 0x83fffffd; les edx, ptr [eax]; add esp, 0x14; pop ebx; pop esi; ret; 
0x000e5da0: mov esp, 0x89000000; ret; 
0x000f9110: mov esp, 0x890000f7; ret 0xc483; 
0x00144e6c: mov esp, 0x8bfffffb; inc ebp; and byte ptr [ecx - 0x4477b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00151034: mov esp, 0x8bfffffe; add byte ptr [ebx - 0x7bf0fe08], al; cli; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf00220], al; ret; 
0x00108ec4: mov esp, 0x8d000001; push esp; and al, 0x2c; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x0013177f: mov esp, 0x8db075ff; cmp byte ptr [eax + 0x58], 0xf9; call dword ptr [edx - 0x17]; 
0x00077cb2: mov esp, 0x9401; add byte ptr [ebp - 0x1c5f7b], cl; jmp ptr [ecx]; ret 0xf989; 
0x0007f968: mov esp, 0x9406; add byte ptr [ebp - 0x1c5f7d], cl; jmp ptr [ecx]; ret 0xf989; 
0x001317b4: mov esp, 0xa5cc828d; stc; call dword ptr [eax - 0x73]; 
0x0013f909: mov esp, 0xa7a0868d; stc; call dword ptr [eax - 0x73]; 
0x00195c80: mov esp, 0xa8000000; inc eax; jne 0x195d50; lea eax, [edi + 7]; pop edi; ret; 
0x000c344b: mov esp, 0xe8cc4589; insb byte ptr es:[edi], dx; ret; 
0x00161ea0: mov esp, 0xe8ffed85; inc edi; sbb edi, ebp; jmp dword ptr [esi - 0x70]; 
0x0009c0fa: mov esp, 0xf042444; inc esp; ret 0xc083; 
0x000e000b: mov esp, 0xf8f15083; inc dword ptr [ecx]; fistp qword ptr [esi]; jmp edi; 
0x000374f3: mov esp, ecx; jmp edx; 
0x0004ac81: mov esp, edx; mov esi, dword ptr [edi + 0x3c]; mov edi, dword ptr [edi + 0x38]; ret; 
0x00093016: mov fs, esi; call dword ptr [eax - 0x73]; 
0x000a61d8: mov fs, word ptr [ebx - 0x7a000008]; ror byte ptr [edi], 0x85; dec ebx; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000578a2: mov fs, word ptr [ecx + edi*8 - 1]; dec dword ptr [ebx - 0x76dbdb8c]; ret 0xfa29; 
0x00140ecd: mov fs, word ptr [edi + 0x5d]; stc; dec dword ptr [ebp - 0x6a28d7a]; call dword ptr [ecx - 0x77]; 
0x0013f1f0: mov fs, word ptr [edi + edi*8 - 1]; dec dword ptr [ebp + 0x458b061c]; test byte ptr [ecx], al; ret 0x3883; 
0x0002d573: mov gs, word ptr [ecx + edi*8]; call dword ptr [edx + 0x50]; 
0x00193bbc: mov ss, word ptr [edi + 0x5b000000]; pop esi; pop edi; pop ebp; ret; 
0x000abf90: mov word ptr [0x5e5f0000], es; pop ebx; ret; 
0x000b338f: mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afefc: mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x001167dd: mov word ptr [eax + 0x16], dx; ret; 
0x000b34a9: mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b0006: mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0007c89b: mov word ptr [eax + 0x39000001], fs; ret 0x448b; 
0x0003bb7e: mov word ptr [eax + 0xe], dx; xor eax, eax; pop ebx; pop esi; ret; 
0x000afda8: mov word ptr [eax + 4], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b328f: mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afe0c: mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00046fc2: mov word ptr [eax + eax - 0x6b770000], ds; and al, 0x84; add byte ptr [eax], al; add cl, ch; ret; 
0x000b967a: mov word ptr [eax + ebp*2], fs; add al, 0; add byte ptr [edi], cl; xchg ebp, eax; ret 0x9eb; 
0x000bf2e2: mov word ptr [eax + ebx*2], fs; add dword ptr [eax], eax; add byte ptr [edi], cl; xchg ebp, eax; ret 0x9eb; 
0x000b9833: mov word ptr [eax + ecx*4], fs; add byte ptr [eax], al; add byte ptr [ecx + 0x244489da], cl; or byte ptr [ebp - 0x7efb7884], cl; ret 0; 
0x0019dcb1: mov word ptr [eax + ecx*4], fs; add byte ptr [eax], al; add byte ptr [ecx - 0x7c07763a], cl; ret; 
0x00045a46: mov word ptr [eax + ecx*4], fs; add byte ptr [eax], al; add byte ptr [ecx - 0x7e38fe26], cl; ret 0; 
0x0010bdbe: mov word ptr [eax + ecx*4], fs; add dword ptr [eax], eax; add byte ptr [ebx + 0x518d0cc4], al; call dword ptr [edx + 0x53]; 
0x0019fba0: mov word ptr [eax - 0x7d], ss; ret 0x8920; 
0x000afd73: mov word ptr [eax], cx; mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b31a6: mov word ptr [eax], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afd63: mov word ptr [eax], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0010440f: mov word ptr [eax], dx; xor eax, eax; ret; 
0x0010a405: mov word ptr [eax], es; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0015d852: mov word ptr [eax], es; add byte ptr [eax], al; mov dword ptr [eax + 8], edx; ret; 
0x0010a350: mov word ptr [eax], es; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00038a85: mov word ptr [eax], es; add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x38a99; add esp, 0x9c; ret; 
0x0005516d: mov word ptr [eax], fs; add dword ptr [eax], eax; add byte ptr [ecx - 0x768fdbbc], cl; ret 0xc483; 
0x00144a95: mov word ptr [ebp + edi*8 - 1], gs; jmp dword ptr [esi - 0x7d]; 
0x0014f1b0: mov word ptr [ebp - 0x6524b7e], cs; call dword ptr [eax - 0x73]; 
0x0008d28c: mov word ptr [ebx - 0x47f7dbb4], cs; lock add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0018ef4f: mov word ptr [ebx - 0x86b80], cs; mov eax, dword ptr [ebx + eax*4 - 0x86b80]; sub eax, ecx; pop ebx; ret; 
0x0009a1ae: mov word ptr [ebx - 7], es; call dword ptr [ebx + 0x50]; 
0x00149598: mov word ptr [ecx + 0xa], dx; pop ebx; ret; 
0x0003bbd7: mov word ptr [ecx + 4], dx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000a5da2: mov word ptr [ecx + 4], dx; pop ebx; ret; 
0x000a5de4: mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x0015f7b0: mov word ptr [ecx], cs; in al, dx; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000a5d70: mov word ptr [ecx], dx; mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x000a5d60: mov word ptr [ecx], dx; pop ebx; ret; 
0x0003c890: mov word ptr [ecx], es; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x00108ce0: mov word ptr [ecx], es; add byte ptr [eax], al; xor eax, eax; mov eax, 0x17f; call dword ptr gs:[0x10]; 
0x000ad90c: mov word ptr [edi + 0x10], cx; lea eax, [edi + 0x12]; pop edi; pop esi; pop ebx; ret; 
0x000ac1fc: mov word ptr [edi + 0x10], cx; pop edi; pop esi; pop ebx; ret; 
0x000ada16: mov word ptr [edi + 0x18], cx; lea eax, [edi + 0x1a]; pop edi; pop esi; pop ebx; ret; 
0x000ac306: mov word ptr [edi + 0x18], cx; pop edi; pop esi; pop ebx; ret; 
0x000ac0b8: mov word ptr [edi + 4], dx; pop edi; pop esi; pop ebx; ret; 
0x000ad81c: mov word ptr [edi + 8], dx; lea eax, [edi + 0xa]; pop edi; pop esi; pop ebx; ret; 
0x000ac10c: mov word ptr [edi + 8], dx; pop edi; pop esi; pop ebx; ret; 
0x000ac086: mov word ptr [edi], cx; mov byte ptr [edi + 2], dl; pop edi; pop esi; pop ebx; ret; 
0x000ad743: mov word ptr [edi], dx; lea eax, [edi + 2]; pop edi; pop esi; pop ebx; ret; 
0x000ac073: mov word ptr [edi], dx; pop edi; pop esi; pop ebx; ret; 
0x000abd90: mov word ptr [edi], es; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0010fb8c: mov word ptr [edx + 0x3e], ax; xor eax, eax; ret; 
0x0011151c: mov word ptr [edx + 0x42], ax; xor eax, eax; ret; 
0x00188aac: mov word ptr [edx + 1], cx; movzx eax, byte ptr [eax]; mov byte ptr [edx], al; pop ebx; ret; 
0x000a8198: mov word ptr [edx + 4], ax; lea eax, [edx + 5]; pop edi; ret; 
0x000a82d8: mov word ptr [edx + 4], ax; lea eax, [edx + 5]; ret; 
0x000b25bb: mov word ptr [edx + 4], ax; mov eax, edi; pop ebx; pop edi; ret; 
0x000a3db8: mov word ptr [edx + 4], ax; mov eax, edi; pop edi; ret; 
0x000a3ee8: mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x000a2144: mov word ptr [edx + 4], bx; mov dword ptr [edx], eax; lea eax, [edx + 5]; pop ebx; pop esi; ret; 
0x000a2074: mov word ptr [edx + 4], bx; mov dword ptr [edx], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x000a81ec: mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x000a832c: mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000b262f: mov word ptr [edx + 8], ax; mov eax, edi; pop ebx; pop edi; ret; 
0x000a3dfc: mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000a3f3c: mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x00068e45: mov word ptr [edx - 0x737e0], es; add ecx, ebp; jmp ecx; 
0x00069145: mov word ptr [edx - 0x73860], es; add ecx, ebp; jmp ecx; 
0x000693de: mov word ptr [edx - 0x738e0], es; add ecx, ebp; jmp ecx; 
0x0006933e: mov word ptr [edx - 0x739e0], es; add ecx, ebp; jmp ecx; 
0x0017b055: mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017aa25: mov word ptr [edx - 2], ax; pop ebx; ret; 
0x0017ef5c: mov word ptr [edx - 2], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00180f7c: mov word ptr [edx - 2], cx; mov eax, edx; pop ebx; ret; 
0x0018842c: mov word ptr [edx - 2], cx; pop ebx; ret; 
0x0017b075: mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017aa45: mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0017eff0: mov word ptr [edx - 3], cx; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00181010: mov word ptr [edx - 3], cx; mov byte ptr [edx - 1], al; mov eax, edx; pop ebx; ret; 
0x001884c0: mov word ptr [edx - 3], cx; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x000a8153: mov word ptr [edx], ax; lea eax, [edx + 1]; pop edi; ret; 
0x000a8293: mov word ptr [edx], ax; lea eax, [edx + 1]; ret; 
0x000a8163: mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; pop edi; ret; 
0x000a82a3: mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; ret; 
0x000a3d93: mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edi; pop edi; ret; 
0x000a3eb3: mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x000b2556: mov word ptr [edx], ax; mov eax, edi; pop ebx; pop edi; ret; 
0x000a3d83: mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x000a3ea3: mov word ptr [edx], ax; mov eax, edx; ret; 
0x001815cb: mov word ptr [edx], cx; mov eax, dword ptr [esp + 8]; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x0017f5db: mov word ptr [edx], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00188a2b: mov word ptr [edx], cx; pop ebx; ret; 
0x000a20f8: mov word ptr [edx], si; lea eax, [edx + 1]; pop ebx; pop esi; ret; 
0x000a2040: mov word ptr [edx], si; mov eax, edx; mov byte ptr [edx + 2], 0; pop ebx; pop esi; ret; 
0x000a2038: mov word ptr [edx], si; mov eax, edx; pop ebx; pop esi; ret; 
0x000de309: mov word ptr [esi - 7], es; call dword ptr [eax - 0x18]; 
0x0007488b: mov word ptr [esi], es; xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebp - 0x1c5f79], cl; jmp ptr [ecx]; ret 0x4d89; 
0x0006e60c: mov word ptr [esp + ecx*4], fs; add byte ptr [eax], al; add al, ch; cdq; ret 0xffff; 
0x0019bac9: mov word ptr [esp + ecx*4], fs; add byte ptr [eax], al; add dh, dh; ret; 
0x00111da3: mov word ptr [esp + edx], fs; add dword ptr [eax], eax; add byte ptr [ecx - 0x76efdbbc], cl; ret 0x4c89; 
0x0010a650: mov word ptr [esp], fs; add byte ptr [eax], al; add byte ptr [ebx + 0xa82494], cl; add byte ptr [eax], al; mov esi, dword ptr [esp + 0xac]; call dword ptr gs:[0x10]; 
0x00188919: movd dword ptr [eax + 4], mm0; movq qword ptr [edx + 4], xmm0; mov ecx, dword ptr [eax]; mov dword ptr [edx], ecx; pop ebx; ret; 
0x0018832f: movd dword ptr [eax - 0x10], mm0; movq qword ptr [edx - 0x10], xmm0; movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x00188469: movd dword ptr [eax - 0xa], mm0; movq qword ptr [edx - 0xa], xmm0; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; pop ebx; ret; 
0x0017ee59: movd dword ptr [eax - 8], mm0; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00180e89: movd dword ptr [eax - 8], mm0; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x00188339: movd dword ptr [eax - 8], mm0; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x001883d9: movd dword ptr [eax - 9], mm0; movq qword ptr [edx - 9], xmm0; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x0017f4f9: movd dword ptr [eax], mm0; movq qword ptr [edx], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00188959: movd dword ptr [eax], mm0; movq qword ptr [edx], xmm0; pop ebx; ret; 
0x0017f08a: movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001810aa: movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, edx; pop ebx; ret; 
0x0018854a: movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; pop ebx; ret; 
0x00188540: movdqa xmm0, xmmword ptr [eax - 0x20]; movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; pop ebx; ret; 
0x0017b2de: movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001810af: movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, edx; pop ebx; ret; 
0x0017ac8e: movdqa xmmword ptr [edx - 0x10], xmm0; pop ebx; ret; 
0x0017b30e: movdqa xmmword ptr [edx - 0x11], xmm0; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017acbe: movdqa xmmword ptr [edx - 0x11], xmm0; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0018860f: movdqa xmmword ptr [edx - 0x11], xmm0; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x0017b33e: movdqa xmmword ptr [edx - 0x12], xmm0; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017acee: movdqa xmmword ptr [edx - 0x12], xmm0; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x001886bf: movdqa xmmword ptr [edx - 0x12], xmm0; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; pop ebx; ret; 
0x0017ad1e: movdqa xmmword ptr [edx - 0x13], xmm0; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0017b39e: movdqa xmmword ptr [edx - 0x14], xmm0; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017ad4e: movdqa xmmword ptr [edx - 0x14], xmm0; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x001887df: movdqa xmmword ptr [edx - 0x14], xmm0; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x0017b3fe: movdqa xmmword ptr [edx - 0x16], xmm0; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017adae: movdqa xmmword ptr [edx - 0x16], xmm0; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x0017adde: movdqa xmmword ptr [edx - 0x17], xmm0; mov dword ptr [edx - 7], eax; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0017b46e: movdqa xmmword ptr [edx - 0x18], xmm0; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017ae0e: movdqa xmmword ptr [edx - 0x18], xmm0; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x0018852f: movdqa xmmword ptr [edx - 0x18], xmm0; movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x0017b49e: movdqa xmmword ptr [edx - 0x19], xmm0; movq qword ptr [edx - 9], xmm0; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017ae3e: movdqa xmmword ptr [edx - 0x19], xmm0; movq qword ptr [edx - 9], xmm0; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0017b4de: movdqa xmmword ptr [edx - 0x1a], xmm0; movq qword ptr [edx - 0xa], xmm0; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017ae6e: movdqa xmmword ptr [edx - 0x1a], xmm0; movq qword ptr [edx - 0xa], xmm0; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x0017aede: movdqa xmmword ptr [edx - 0x1c], xmm0; movq qword ptr [edx - 0xc], xmm0; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x0017af0e: movdqa xmmword ptr [edx - 0x1d], xmm0; movq qword ptr [edx - 0xd], xmm0; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0017af3e: movdqa xmmword ptr [edx - 0x1e], xmm0; movq qword ptr [edx - 0xe], xmm0; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x0017f085: movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001810a5: movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, edx; pop ebx; ret; 
0x00188545: movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; pop ebx; ret; 
0x0017b2d9: movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017ac89: movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmmword ptr [edx - 0x10], xmm0; pop ebx; ret; 
0x0017ada9: movdqa xmmword ptr [edx - 0x26], xmm0; movdqa xmmword ptr [edx - 0x16], xmm0; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x0017b2d4: movdqa xmmword ptr [edx - 0x30], xmm0; movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017ac84: movdqa xmmword ptr [edx - 0x30], xmm0; movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmmword ptr [edx - 0x10], xmm0; pop ebx; ret; 
0x0017ac7f: movdqa xmmword ptr [edx - 0x40], xmm0; movdqa xmmword ptr [edx - 0x30], xmm0; movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmmword ptr [edx - 0x10], xmm0; pop ebx; ret; 
0x000a8130: movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000a83e0: movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x000a3d60: movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000a3ff0: movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000afec0: movdqu xmm0, xmmword ptr [esi]; movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b3590: movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b00bd: movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b3530: movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b005d: movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b3550: movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b007d: movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b3570: movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b009d: movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b336a: movdqu xmmword ptr [eax], xmm0; mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afed4: movdqu xmmword ptr [eax], xmm0; mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000aff57: movdqu xmmword ptr [eax], xmm0; mov dword ptr [eax + 0x10], ecx; mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b33ca: movdqu xmmword ptr [eax], xmm0; mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aff37: movdqu xmmword ptr [eax], xmm0; mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b33aa: movdqu xmmword ptr [eax], xmm0; mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aff17: movdqu xmmword ptr [eax], xmm0; mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b3347: movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afec4: movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b338b: movdqu xmmword ptr [eax], xmm0; mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afef8: movdqu xmmword ptr [eax], xmm0; mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b358c: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b00b9: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b352c: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b0059: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b354c: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b0079: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b356c: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b0099: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000affd9: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0x10], xmm2; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b001c: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b003c: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b344c: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000affb9: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000afffd: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0x10], xmm2; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b340c: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aff79: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b342c: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aff99: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000adadd: movdqu xmmword ptr [edi + 0x10], xmm2; lea eax, [edi + 0x20]; pop edi; pop esi; pop ebx; ret; 
0x000ac3e0: movdqu xmmword ptr [edi + 0x10], xmm2; mov byte ptr [edi + 0x20], cl; pop edi; pop esi; pop ebx; ret; 
0x000ac3bd: movdqu xmmword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000add2c: movdqu xmmword ptr [edi + 0x30], xmm7; lea eax, [edi + 0x40]; pop edi; pop esi; pop ebx; ret; 
0x000ac5fc: movdqu xmmword ptr [edi + 0x30], xmm7; pop edi; pop esi; pop ebx; ret; 
0x000ada7d: movdqu xmmword ptr [edi + 0xd], xmm2; lea eax, [edi + 0x1d]; pop edi; pop esi; pop ebx; ret; 
0x000ac35d: movdqu xmmword ptr [edi + 0xd], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ac37d: movdqu xmmword ptr [edi + 0xe], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000adabd: movdqu xmmword ptr [edi + 0xf], xmm2; lea eax, [edi + 0x1f]; pop edi; pop esi; pop ebx; ret; 
0x000ac39d: movdqu xmmword ptr [edi + 0xf], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ac4e0: movdqu xmmword ptr [edi - 1], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000ad8d4: movdqu xmmword ptr [edi], xmm0; lea eax, [edi + 0x10]; pop edi; pop esi; pop ebx; ret; 
0x000ac1d7: movdqu xmmword ptr [edi], xmm0; mov byte ptr [edi + 0x10], cl; pop edi; pop esi; pop ebx; ret; 
0x000ac237: movdqu xmmword ptr [edi], xmm0; mov dword ptr [edi + 0x10], ecx; pop edi; pop esi; pop ebx; ret; 
0x000ac217: movdqu xmmword ptr [edi], xmm0; mov dword ptr [edi + 0xf], ecx; pop edi; pop esi; pop ebx; ret; 
0x000ac1f8: movdqu xmmword ptr [edi], xmm0; mov word ptr [edi + 0x10], cx; pop edi; pop esi; pop ebx; ret; 
0x000ac3b9: movdqu xmmword ptr [edi], xmm0; movdqu xmmword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ac359: movdqu xmmword ptr [edi], xmm0; movdqu xmmword ptr [edi + 0xd], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ac379: movdqu xmmword ptr [edi], xmm0; movdqu xmmword ptr [edi + 0xe], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ac399: movdqu xmmword ptr [edi], xmm0; movdqu xmmword ptr [edi + 0xf], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ac2b9: movdqu xmmword ptr [edi], xmm0; movlpd qword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ac279: movdqu xmmword ptr [edi], xmm0; movlpd qword ptr [edi + 0xe], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000ac299: movdqu xmmword ptr [edi], xmm0; movlpd qword ptr [edi + 0xf], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000ac1c4: movdqu xmmword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000a8134: movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000a83e4: movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x000a3d64: movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000a3ff4: movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000b3473: movlpd qword ptr [eax + 0x10], xmm2; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000affdd: movlpd qword ptr [eax + 0x10], xmm2; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b34d3: movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b0020: movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b3503: movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b0040: movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b3450: movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000affbd: movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b34a4: movlpd qword ptr [eax + 0x10], xmm2; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b0001: movlpd qword ptr [eax + 0x10], xmm2; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b3410: movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aff7d: movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b3430: movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aff9d: movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b32f0: movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afe6d: movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b3310: movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afe8d: movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b3330: movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afead: movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b32aa: movlpd qword ptr [eax], xmm0; mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afe27: movlpd qword ptr [eax], xmm0; mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b32ca: movlpd qword ptr [eax], xmm0; mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afe47: movlpd qword ptr [eax], xmm0; mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b3247: movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afdd4: movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b328b: movlpd qword ptr [eax], xmm0; mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afe08: movlpd qword ptr [eax], xmm0; mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b32ec: movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afe69: movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b330c: movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afe89: movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b332c: movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afea9: movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000a5e14: movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x000a5e24: movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000a5e34: movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000a5e44: movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x000a5dd0: movlpd qword ptr [ecx], xmm0; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x000a5df0: movlpd qword ptr [ecx], xmm0; mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x000a5e00: movlpd qword ptr [ecx], xmm0; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x000a5de0: movlpd qword ptr [ecx], xmm0; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000a5e10: movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x000a5e20: movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000a5e30: movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000a5e40: movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x000a5dc0: movlpd qword ptr [ecx], xmm0; pop ebx; ret; 
0x000ad9cd: movlpd qword ptr [edi + 0x10], xmm2; lea eax, [edi + 0x18]; pop edi; pop esi; pop ebx; ret; 
0x000ac2e0: movlpd qword ptr [edi + 0x10], xmm2; mov byte ptr [edi + 0x18], cl; pop edi; pop esi; pop ebx; ret; 
0x000ac320: movlpd qword ptr [edi + 0x10], xmm2; mov dword ptr [edi + 0x17], ecx; pop edi; pop esi; pop ebx; ret; 
0x000ac340: movlpd qword ptr [edi + 0x10], xmm2; mov dword ptr [edi + 0x18], ecx; pop edi; pop esi; pop ebx; ret; 
0x000ac301: movlpd qword ptr [edi + 0x10], xmm2; mov word ptr [edi + 0x18], cx; pop edi; pop esi; pop ebx; ret; 
0x000ac2bd: movlpd qword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ac27d: movlpd qword ptr [edi + 0xe], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000ad9ad: movlpd qword ptr [edi + 0xf], xmm3; lea eax, [edi + 0x17]; pop edi; pop esi; pop ebx; ret; 
0x000ac29d: movlpd qword ptr [edi + 0xf], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000ac4c4: movlpd qword ptr [edi + 5], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000ad87d: movlpd qword ptr [edi + 5], xmm1; lea eax, [edi + 0xd]; pop edi; pop esi; pop ebx; ret; 
0x000ac16d: movlpd qword ptr [edi + 5], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000ac4d4: movlpd qword ptr [edi + 6], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000ac18d: movlpd qword ptr [edi + 6], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000ac1ad: movlpd qword ptr [edi + 7], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000ac460: movlpd qword ptr [edi - 1], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000ad7e4: movlpd qword ptr [edi], xmm0; lea eax, [edi + 8]; pop edi; pop esi; pop ebx; ret; 
0x000ac0e7: movlpd qword ptr [edi], xmm0; mov byte ptr [edi + 8], dl; pop edi; pop esi; pop ebx; ret; 
0x000ac127: movlpd qword ptr [edi], xmm0; mov dword ptr [edi + 7], edx; pop edi; pop esi; pop ebx; ret; 
0x000ac147: movlpd qword ptr [edi], xmm0; mov dword ptr [edi + 8], edx; pop edi; pop esi; pop ebx; ret; 
0x000ac108: movlpd qword ptr [edi], xmm0; mov word ptr [edi + 8], dx; pop edi; pop esi; pop ebx; ret; 
0x000ac4c0: movlpd qword ptr [edi], xmm0; movlpd qword ptr [edi + 5], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000ac169: movlpd qword ptr [edi], xmm0; movlpd qword ptr [edi + 5], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000ac4d0: movlpd qword ptr [edi], xmm0; movlpd qword ptr [edi + 6], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000ac189: movlpd qword ptr [edi], xmm0; movlpd qword ptr [edi + 6], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000ac1a9: movlpd qword ptr [edi], xmm0; movlpd qword ptr [edi + 7], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000ac0d4: movlpd qword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000acafd: movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x000acc5d: movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000b2690: movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000ab49d: movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x000ab5fd: movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000a822d: movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000a838d: movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000a3e3d: movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000a3f9d: movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000acb1d: movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000acc7d: movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b26b0: movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000ab4bd: movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000ab61d: movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000a824d: movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; pop edi; ret; 
0x000a83ad: movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000a3e5d: movlpd qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x000a3fbd: movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000acb3d: movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000acc9d: movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b26d0: movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000ab4dd: movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000ab63d: movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000a826d: movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; pop edi; ret; 
0x000a83cd: movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000a3e7d: movlpd qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x000a6a50: movlpd qword ptr [edx + 7], xmm1; mov eax, edx; pop ebx; ret; 
0x000a3fdd: movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000ac9cc: movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000accbd: movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000ab38c: movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000ab65d: movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000a9f68: movlpd qword ptr [edx + 8], xmm1; lea eax, [edx + 0x10]; pop edi; pop ebx; ret; 
0x000b28fc: movlpd qword ptr [edx + 8], xmm1; mov byte ptr [edx + 0x10], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000b252c: movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop ebx; pop edi; ret; 
0x000a5b68: movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; pop ebx; ret; 
0x000af67c: movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; ret; 
0x000ab009: movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000a80b4: movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x000a82f4: movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; ret; 
0x000a9eef: movlpd qword ptr [edx], xmm0; lea eax, [edx + 8]; pop edi; pop ebx; ret; 
0x000af757: movlpd qword ptr [edx], xmm0; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000af777: movlpd qword ptr [edx], xmm0; mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000a81c7: movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x000a8307: movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000a3dd7: movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000a3f17: movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000b28a0: movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000a8207: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x000a8347: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000a3e17: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000a3f57: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000a80f7: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x000a8367: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000a9f27: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xc]; pop edi; pop ebx; ret; 
0x000a5b27: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; pop ebx; ret; 
0x000a3d27: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x000a6aa0: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; pop ebx; ret; 
0x000a3f77: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000af797: movlpd qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000af7b7: movlpd qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x00198c34: movlpd qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000b24d5: movlpd qword ptr [edx], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000a5aef: movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; pop ebx; ret; 
0x000a3ce4: movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000a6b19: movlpd qword ptr [edx], xmm0; mov eax, edx; pop ebx; ret; 
0x000a3f04: movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000a81e8: movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x000a8328: movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000a3df8: movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000a3f38: movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000a8229: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000a8389: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000a3e39: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000a3f99: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000a8249: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; pop edi; ret; 
0x000a83a9: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000a3e59: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x000a3fb9: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000a8269: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; pop edi; ret; 
0x000a83c9: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000a3e79: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x000a6a4c: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; pop ebx; ret; 
0x000a3fd9: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000a9f64: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; lea eax, [edx + 0x10]; pop edi; pop ebx; ret; 
0x000b2528: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop ebx; pop edi; ret; 
0x000a5b64: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; pop ebx; ret; 
0x000af678: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; ret; 
0x000acaf4: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x000acc54: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000ab494: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x000ab5f4: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000acb14: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000acc74: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000ab4b4: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000ab614: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000acb34: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000acc94: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000ab4d4: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000ab634: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000ac9c3: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000accb4: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000ab383: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000ab654: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000acaf8: movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x000acc58: movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000b268b: movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000ab498: movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x000ab5f8: movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000acb18: movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000acc78: movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000ab4b8: movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000ab618: movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000acb38: movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000acc98: movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000ab4d8: movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000ab638: movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000ac9c7: movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000accb8: movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000ab387: movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000ab658: movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000a8300: movlpd xmm0, qword ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000a3f10: movlpd xmm0, qword ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000a8340: movlpd xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000a3f50: movlpd xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000a8360: movlpd xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000a3f70: movlpd xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000a80b0: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x000a82f0: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; ret; 
0x000a9eeb: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 8]; pop edi; pop ebx; ret; 
0x00198c30: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000b24d1: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000a5aeb: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; pop ebx; ret; 
0x000a3ce0: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000a6b15: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; pop ebx; ret; 
0x000a3f00: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000acc50: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000ab5f0: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000acc70: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000ab610: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000acc90: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000ab630: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000accb0: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000ab650: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000a8380: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000a3f90: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000a83a0: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000a3fb0: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000a83c0: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000a3fd0: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000afde0: movlpd xmm0, qword ptr [esi]; mov byte ptr [eax + 8], dh; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b3243: movlpd xmm0, qword ptr [esi]; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afdd0: movlpd xmm0, qword ptr [esi]; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ac0d0: movlpd xmm0, qword ptr [esi]; movlpd qword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000a8224: movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000a8384: movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000a3e34: movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000a3f94: movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000a83a4: movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000a3fb4: movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000a83c4: movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000a3fd4: movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000afe64: movlpd xmm1, qword ptr [esi + 5]; movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b3474: movlps qword ptr [eax + 0x10], xmm2; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000affde: movlps qword ptr [eax + 0x10], xmm2; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b34d4: movlps qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b0021: movlps qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b3504: movlps qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b0041: movlps qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b3451: movlps qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000affbe: movlps qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b34a5: movlps qword ptr [eax + 0x10], xmm2; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b0002: movlps qword ptr [eax + 0x10], xmm2; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b3411: movlps qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aff7e: movlps qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b3431: movlps qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aff9e: movlps qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b32f1: movlps qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afe6e: movlps qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b3311: movlps qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afe8e: movlps qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b3331: movlps qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afeae: movlps qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b32ab: movlps qword ptr [eax], xmm0; mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afe28: movlps qword ptr [eax], xmm0; mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b32cb: movlps qword ptr [eax], xmm0; mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afe48: movlps qword ptr [eax], xmm0; mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b3248: movlps qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afdd5: movlps qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b328c: movlps qword ptr [eax], xmm0; mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afe09: movlps qword ptr [eax], xmm0; mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b32ed: movlps qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afe6a: movlps qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b330d: movlps qword ptr [eax], xmm0; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afe8a: movlps qword ptr [eax], xmm0; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b332d: movlps qword ptr [eax], xmm0; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afeaa: movlps qword ptr [eax], xmm0; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000a5e15: movlps qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x000a5e25: movlps qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000a5e35: movlps qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000a5e45: movlps qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x000a5dd1: movlps qword ptr [ecx], xmm0; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x000a5df1: movlps qword ptr [ecx], xmm0; mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x000a5e01: movlps qword ptr [ecx], xmm0; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x000a5de1: movlps qword ptr [ecx], xmm0; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000a5e11: movlps qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x000a5e21: movlps qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000a5e31: movlps qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000a5e41: movlps qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x000a5dc1: movlps qword ptr [ecx], xmm0; pop ebx; ret; 
0x000ad9ce: movlps qword ptr [edi + 0x10], xmm2; lea eax, [edi + 0x18]; pop edi; pop esi; pop ebx; ret; 
0x000ac2e1: movlps qword ptr [edi + 0x10], xmm2; mov byte ptr [edi + 0x18], cl; pop edi; pop esi; pop ebx; ret; 
0x000ac321: movlps qword ptr [edi + 0x10], xmm2; mov dword ptr [edi + 0x17], ecx; pop edi; pop esi; pop ebx; ret; 
0x000ac341: movlps qword ptr [edi + 0x10], xmm2; mov dword ptr [edi + 0x18], ecx; pop edi; pop esi; pop ebx; ret; 
0x000ac302: movlps qword ptr [edi + 0x10], xmm2; mov word ptr [edi + 0x18], cx; pop edi; pop esi; pop ebx; ret; 
0x000ac2be: movlps qword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ac27e: movlps qword ptr [edi + 0xe], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000ad9ae: movlps qword ptr [edi + 0xf], xmm3; lea eax, [edi + 0x17]; pop edi; pop esi; pop ebx; ret; 
0x000ac29e: movlps qword ptr [edi + 0xf], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000ac4c5: movlps qword ptr [edi + 5], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000ad87e: movlps qword ptr [edi + 5], xmm1; lea eax, [edi + 0xd]; pop edi; pop esi; pop ebx; ret; 
0x000ac16e: movlps qword ptr [edi + 5], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000ac4d5: movlps qword ptr [edi + 6], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000ac18e: movlps qword ptr [edi + 6], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000ac1ae: movlps qword ptr [edi + 7], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000ac461: movlps qword ptr [edi - 1], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000ad7e5: movlps qword ptr [edi], xmm0; lea eax, [edi + 8]; pop edi; pop esi; pop ebx; ret; 
0x000ac0e8: movlps qword ptr [edi], xmm0; mov byte ptr [edi + 8], dl; pop edi; pop esi; pop ebx; ret; 
0x000ac128: movlps qword ptr [edi], xmm0; mov dword ptr [edi + 7], edx; pop edi; pop esi; pop ebx; ret; 
0x000ac148: movlps qword ptr [edi], xmm0; mov dword ptr [edi + 8], edx; pop edi; pop esi; pop ebx; ret; 
0x000ac109: movlps qword ptr [edi], xmm0; mov word ptr [edi + 8], dx; pop edi; pop esi; pop ebx; ret; 
0x000ac4c1: movlps qword ptr [edi], xmm0; movlpd qword ptr [edi + 5], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000ac16a: movlps qword ptr [edi], xmm0; movlpd qword ptr [edi + 5], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000ac4d1: movlps qword ptr [edi], xmm0; movlpd qword ptr [edi + 6], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000ac18a: movlps qword ptr [edi], xmm0; movlpd qword ptr [edi + 6], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000ac1aa: movlps qword ptr [edi], xmm0; movlpd qword ptr [edi + 7], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000ac0d5: movlps qword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000acafe: movlps qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x000acc5e: movlps qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000b2691: movlps qword ptr [edx + 5], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000ab49e: movlps qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x000ab5fe: movlps qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000a822e: movlps qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000a838e: movlps qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000a3e3e: movlps qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000a3f9e: movlps qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000acb1e: movlps qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000acc7e: movlps qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b26b1: movlps qword ptr [edx + 6], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000ab4be: movlps qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000ab61e: movlps qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000a824e: movlps qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; pop edi; ret; 
0x000a83ae: movlps qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000a3e5e: movlps qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x000a3fbe: movlps qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000acb3e: movlps qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000acc9e: movlps qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b26d1: movlps qword ptr [edx + 7], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000ab4de: movlps qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000ab63e: movlps qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000a826e: movlps qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; pop edi; ret; 
0x000a83ce: movlps qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000a3e7e: movlps qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x000a6a51: movlps qword ptr [edx + 7], xmm1; mov eax, edx; pop ebx; ret; 
0x000a3fde: movlps qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000ac9cd: movlps qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000accbe: movlps qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000ab38d: movlps qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000ab65e: movlps qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000a9f69: movlps qword ptr [edx + 8], xmm1; lea eax, [edx + 0x10]; pop edi; pop ebx; ret; 
0x000b28fd: movlps qword ptr [edx + 8], xmm1; mov byte ptr [edx + 0x10], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000b252d: movlps qword ptr [edx + 8], xmm1; mov eax, edi; pop ebx; pop edi; ret; 
0x000a5b69: movlps qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; pop ebx; ret; 
0x000af67d: movlps qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; ret; 
0x000ab00a: movlps qword ptr [edx], xmm0; lea eax, [edx + 7]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000a80b5: movlps qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x000a82f5: movlps qword ptr [edx], xmm0; lea eax, [edx + 7]; ret; 
0x000a9ef0: movlps qword ptr [edx], xmm0; lea eax, [edx + 8]; pop edi; pop ebx; ret; 
0x000af758: movlps qword ptr [edx], xmm0; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000af778: movlps qword ptr [edx], xmm0; mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000a81c8: movlps qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x000a8308: movlps qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000a3dd8: movlps qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000a3f18: movlps qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000b28a1: movlps qword ptr [edx], xmm0; mov byte ptr [edx + 8], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000a8208: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x000a8348: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000a3e18: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000a3f58: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000a80f8: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x000a8368: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000a9f28: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xc]; pop edi; pop ebx; ret; 
0x000a5b28: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; pop ebx; ret; 
0x000a3d28: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x000a6aa1: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; pop ebx; ret; 
0x000a3f78: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000af798: movlps qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000af7b8: movlps qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x00198c35: movlps qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000b24d6: movlps qword ptr [edx], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000a5af0: movlps qword ptr [edx], xmm0; mov eax, edi; pop edi; pop ebx; ret; 
0x000a3ce5: movlps qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000a6b1a: movlps qword ptr [edx], xmm0; mov eax, edx; pop ebx; ret; 
0x000a3f05: movlps qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000a81e9: movlps qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x000a8329: movlps qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000a3df9: movlps qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000a3f39: movlps qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000a822a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000a838a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000a3e3a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000a3f9a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000a824a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; pop edi; ret; 
0x000a83aa: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000a3e5a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x000a3fba: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000a826a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; pop edi; ret; 
0x000a83ca: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000a3e7a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x000a6a4d: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; pop ebx; ret; 
0x000a3fda: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000a9f65: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; lea eax, [edx + 0x10]; pop edi; pop ebx; ret; 
0x000b2529: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop ebx; pop edi; ret; 
0x000a5b65: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; pop ebx; ret; 
0x000af679: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; ret; 
0x000acaf5: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x000acc55: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000ab495: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x000ab5f5: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000acb15: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000acc75: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000ab4b5: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000ab615: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000acb35: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000acc95: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000ab4d5: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000ab635: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000ac9c4: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000accb5: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000ab384: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000ab655: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000acaf9: movlps xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x000acc59: movlps xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000b268c: movlps xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000ab499: movlps xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x000ab5f9: movlps xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000acb19: movlps xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000acc79: movlps xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000ab4b9: movlps xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000ab619: movlps xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000acb39: movlps xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000acc99: movlps xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000ab4d9: movlps xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000ab639: movlps xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000ac9c8: movlps xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000accb9: movlps xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000ab388: movlps xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000ab659: movlps xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000a8301: movlps xmm0, qword ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000a3f11: movlps xmm0, qword ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000a8341: movlps xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000a3f51: movlps xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000a8361: movlps xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000a3f71: movlps xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000a80b1: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x000a82f1: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; ret; 
0x000a9eec: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 8]; pop edi; pop ebx; ret; 
0x00198c31: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000b24d2: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000a5aec: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; pop ebx; ret; 
0x000a3ce1: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000a6b16: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; pop ebx; ret; 
0x000a3f01: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000acc51: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000ab5f1: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000acc71: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000ab611: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000acc91: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000ab631: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000accb1: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000ab651: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000a8381: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000a3f91: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000a83a1: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000a3fb1: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000a83c1: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000a3fd1: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000afde1: movlps xmm0, qword ptr [esi]; mov byte ptr [eax + 8], dh; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b3244: movlps xmm0, qword ptr [esi]; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afdd1: movlps xmm0, qword ptr [esi]; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ac0d1: movlps xmm0, qword ptr [esi]; movlpd qword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000a8225: movlps xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000a8385: movlps xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000a3e35: movlps xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000a3f95: movlps xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000a83a5: movlps xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000a3fb5: movlps xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000a83c5: movlps xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000a3fd5: movlps xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000afe65: movlps xmm1, qword ptr [esi + 5]; movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0017f08b: movq mm0, qword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001810ab: movq mm0, qword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, edx; pop ebx; ret; 
0x0018854b: movq mm0, qword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; pop ebx; ret; 
0x00188541: movq mm0, qword ptr [eax - 0x20]; movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; pop ebx; ret; 
0x000a8131: movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000a83e1: movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x000a3d61: movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000a3ff1: movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000afec1: movq mm0, qword ptr [esi]; movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b3591: movq qword ptr [eax + 0x10], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b00be: movq qword ptr [eax + 0x10], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b3531: movq qword ptr [eax + 0xd], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b005e: movq qword ptr [eax + 0xd], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b3551: movq qword ptr [eax + 0xe], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b007e: movq qword ptr [eax + 0xe], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b3571: movq qword ptr [eax + 0xf], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b009e: movq qword ptr [eax + 0xf], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b336b: movq qword ptr [eax], mm0; mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afed5: movq qword ptr [eax], mm0; mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000aff58: movq qword ptr [eax], mm0; mov dword ptr [eax + 0x10], ecx; mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b33cb: movq qword ptr [eax], mm0; mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aff38: movq qword ptr [eax], mm0; mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b33ab: movq qword ptr [eax], mm0; mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aff18: movq qword ptr [eax], mm0; mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b3348: movq qword ptr [eax], mm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afec5: movq qword ptr [eax], mm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b338c: movq qword ptr [eax], mm0; mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afef9: movq qword ptr [eax], mm0; mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b358d: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b00ba: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b352d: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b005a: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b354d: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b007a: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b356d: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b009a: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000affda: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0x10], xmm2; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b001d: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b003d: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b344d: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000affba: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000afffe: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0x10], xmm2; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b340d: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aff7a: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b342d: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aff9a: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000adade: movq qword ptr [edi + 0x10], mm2; lea eax, [edi + 0x20]; pop edi; pop esi; pop ebx; ret; 
0x000ac3e1: movq qword ptr [edi + 0x10], mm2; mov byte ptr [edi + 0x20], cl; pop edi; pop esi; pop ebx; ret; 
0x000ac3be: movq qword ptr [edi + 0x10], mm2; pop edi; pop esi; pop ebx; ret; 
0x000add2d: movq qword ptr [edi + 0x30], mm7; lea eax, [edi + 0x40]; pop edi; pop esi; pop ebx; ret; 
0x000ac5fd: movq qword ptr [edi + 0x30], mm7; pop edi; pop esi; pop ebx; ret; 
0x000ada7e: movq qword ptr [edi + 0xd], mm2; lea eax, [edi + 0x1d]; pop edi; pop esi; pop ebx; ret; 
0x000ac35e: movq qword ptr [edi + 0xd], mm2; pop edi; pop esi; pop ebx; ret; 
0x000ac37e: movq qword ptr [edi + 0xe], mm2; pop edi; pop esi; pop ebx; ret; 
0x000adabe: movq qword ptr [edi + 0xf], mm2; lea eax, [edi + 0x1f]; pop edi; pop esi; pop ebx; ret; 
0x000ac39e: movq qword ptr [edi + 0xf], mm2; pop edi; pop esi; pop ebx; ret; 
0x000ac4e1: movq qword ptr [edi - 1], mm0; pop edi; pop esi; pop ebx; ret; 
0x000ad8d5: movq qword ptr [edi], mm0; lea eax, [edi + 0x10]; pop edi; pop esi; pop ebx; ret; 
0x000ac1d8: movq qword ptr [edi], mm0; mov byte ptr [edi + 0x10], cl; pop edi; pop esi; pop ebx; ret; 
0x000ac238: movq qword ptr [edi], mm0; mov dword ptr [edi + 0x10], ecx; pop edi; pop esi; pop ebx; ret; 
0x000ac218: movq qword ptr [edi], mm0; mov dword ptr [edi + 0xf], ecx; pop edi; pop esi; pop ebx; ret; 
0x000ac1f9: movq qword ptr [edi], mm0; mov word ptr [edi + 0x10], cx; pop edi; pop esi; pop ebx; ret; 
0x000ac3ba: movq qword ptr [edi], mm0; movdqu xmmword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ac35a: movq qword ptr [edi], mm0; movdqu xmmword ptr [edi + 0xd], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ac37a: movq qword ptr [edi], mm0; movdqu xmmword ptr [edi + 0xe], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ac39a: movq qword ptr [edi], mm0; movdqu xmmword ptr [edi + 0xf], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ac2ba: movq qword ptr [edi], mm0; movlpd qword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ac27a: movq qword ptr [edi], mm0; movlpd qword ptr [edi + 0xe], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000ac29a: movq qword ptr [edi], mm0; movlpd qword ptr [edi + 0xf], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000ac1c5: movq qword ptr [edi], mm0; pop edi; pop esi; pop ebx; ret; 
0x0017f4bd: movq qword ptr [edx + 4], xmm0; mov ecx, dword ptr [eax]; mov dword ptr [edx], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018891d: movq qword ptr [edx + 4], xmm0; mov ecx, dword ptr [eax]; mov dword ptr [edx], ecx; pop ebx; ret; 
0x0017b2df: movq qword ptr [edx - 0x10], mm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001810b0: movq qword ptr [edx - 0x10], mm0; mov eax, edx; pop ebx; ret; 
0x0017ac8f: movq qword ptr [edx - 0x10], mm0; pop ebx; ret; 
0x00188333: movq qword ptr [edx - 0x10], xmm0; movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x0017b30f: movq qword ptr [edx - 0x11], mm0; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017acbf: movq qword ptr [edx - 0x11], mm0; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00188610: movq qword ptr [edx - 0x11], mm0; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x0017b33f: movq qword ptr [edx - 0x12], mm0; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017acef: movq qword ptr [edx - 0x12], mm0; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x001886c0: movq qword ptr [edx - 0x12], mm0; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; pop ebx; ret; 
0x0017ad1f: movq qword ptr [edx - 0x13], mm0; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0017b39f: movq qword ptr [edx - 0x14], mm0; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017ad4f: movq qword ptr [edx - 0x14], mm0; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x001887e0: movq qword ptr [edx - 0x14], mm0; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x0017b3ff: movq qword ptr [edx - 0x16], mm0; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017adaf: movq qword ptr [edx - 0x16], mm0; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x0017addf: movq qword ptr [edx - 0x17], mm0; mov dword ptr [edx - 7], eax; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0017b46f: movq qword ptr [edx - 0x18], mm0; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017ae0f: movq qword ptr [edx - 0x18], mm0; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x00188530: movq qword ptr [edx - 0x18], mm0; movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x0017b49f: movq qword ptr [edx - 0x19], mm0; movq qword ptr [edx - 9], xmm0; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017ae3f: movq qword ptr [edx - 0x19], mm0; movq qword ptr [edx - 9], xmm0; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0017b4df: movq qword ptr [edx - 0x1a], mm0; movq qword ptr [edx - 0xa], xmm0; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017ae6f: movq qword ptr [edx - 0x1a], mm0; movq qword ptr [edx - 0xa], xmm0; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x0017aedf: movq qword ptr [edx - 0x1c], mm0; movq qword ptr [edx - 0xc], xmm0; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x0017af0f: movq qword ptr [edx - 0x1d], mm0; movq qword ptr [edx - 0xd], xmm0; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0017af3f: movq qword ptr [edx - 0x1e], mm0; movq qword ptr [edx - 0xe], xmm0; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x0017f086: movq qword ptr [edx - 0x20], mm0; movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001810a6: movq qword ptr [edx - 0x20], mm0; movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, edx; pop ebx; ret; 
0x00188546: movq qword ptr [edx - 0x20], mm0; movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; pop ebx; ret; 
0x0017b2da: movq qword ptr [edx - 0x20], mm0; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017ac8a: movq qword ptr [edx - 0x20], mm0; movdqa xmmword ptr [edx - 0x10], xmm0; pop ebx; ret; 
0x0017adaa: movq qword ptr [edx - 0x26], mm0; movdqa xmmword ptr [edx - 0x16], xmm0; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x0017b2d5: movq qword ptr [edx - 0x30], mm0; movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017ac85: movq qword ptr [edx - 0x30], mm0; movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmmword ptr [edx - 0x10], xmm0; pop ebx; ret; 
0x0017ac80: movq qword ptr [edx - 0x40], mm0; movdqa xmmword ptr [edx - 0x30], xmm0; movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmmword ptr [edx - 0x10], xmm0; pop ebx; ret; 
0x0017b4e3: movq qword ptr [edx - 0xa], xmm0; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017ae73: movq qword ptr [edx - 0xa], xmm0; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x0017ef9d: movq qword ptr [edx - 0xa], xmm0; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00180fbd: movq qword ptr [edx - 0xa], xmm0; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, edx; pop ebx; ret; 
0x0018846d: movq qword ptr [edx - 0xa], xmm0; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; pop ebx; ret; 
0x0017aee3: movq qword ptr [edx - 0xc], xmm0; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x0017af13: movq qword ptr [edx - 0xd], xmm0; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0017af43: movq qword ptr [edx - 0xe], xmm0; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x0017b473: movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00180e8d: movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x0017ae13: movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x0017b4a3: movq qword ptr [edx - 9], xmm0; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017ae43: movq qword ptr [edx - 9], xmm0; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0017ef0d: movq qword ptr [edx - 9], xmm0; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00180f2d: movq qword ptr [edx - 9], xmm0; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, edx; pop ebx; ret; 
0x001883dd: movq qword ptr [edx - 9], xmm0; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x000a8135: movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000a83e5: movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; ret; 
0x000a3d65: movq qword ptr [edx], mm0; mov eax, edi; pop edi; ret; 
0x000a3ff5: movq qword ptr [edx], mm0; mov eax, edx; ret; 
0x0017f4fc: movq qword ptr [edx], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018895c: movq qword ptr [edx], xmm0; pop ebx; ret; 
0x00188918: movq xmm0, qword ptr [eax + 4]; movq qword ptr [edx + 4], xmm0; mov ecx, dword ptr [eax]; mov dword ptr [edx], ecx; pop ebx; ret; 
0x0018832e: movq xmm0, qword ptr [eax - 0x10]; movq qword ptr [edx - 0x10], xmm0; movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x00188468: movq xmm0, qword ptr [eax - 0xa]; movq qword ptr [edx - 0xa], xmm0; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; pop ebx; ret; 
0x0017ee58: movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00180e88: movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x00188338: movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x001883d8: movq xmm0, qword ptr [eax - 9]; movq qword ptr [edx - 9], xmm0; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x0017f4f8: movq xmm0, qword ptr [eax]; movq qword ptr [edx], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00188958: movq xmm0, qword ptr [eax]; movq qword ptr [edx], xmm0; pop ebx; ret; 
0x00163b0d: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add bh, bh; je 0x163b38; sbb al, 0x53; call eax; 
0x00056925: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg ah, ch; jbe 0x56928; call dword ptr [eax - 0x18]; 
0x0014cde6: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebp - 0x6a02a7d], cl; call dword ptr [eax - 0x73]; 
0x0010a652: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx + 0xa82494], cl; add byte ptr [eax], al; mov esi, dword ptr [esp + 0xac]; call dword ptr gs:[0x10]; 
0x000791b6: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x000c9bf8: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x00162f27: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; mov eax, dword ptr gs:[0]; mov dword ptr [eax + edx], ecx; ret; 
0x000c6c48: movsb byte ptr es:[edi], byte ptr [esi]; add eax, dword ptr [eax]; add byte ptr [ebx - 0x361f7b], cl; inc dword ptr [ebx - 0x363743]; call dword ptr [eax]; 
0x0009c299: movsb byte ptr es:[edi], byte ptr [esi]; call 0x2ef439e; lea edx, [edx - 0x9d420]; cmovne eax, edx; ret; 
0x0012e6e4: movsb byte ptr es:[edi], byte ptr [esi]; dec dword ptr [ebx - 0x3b7cd7ba]; adc byte ptr [ebx - 0x72affb14], al; cmp dword ptr [eax + 0x57], -7; call dword ptr [eax + 0x57]; 
0x0002b255: movsb byte ptr es:[edi], byte ptr [esi]; imul edx, dword ptr [eax + eax], -0x7f; ret 0xeda7; 
0x001661e3: movsb byte ptr es:[edi], byte ptr [esi]; in al, dx; call dword ptr [eax - 0x73]; 
0x00087b5f: movsb byte ptr es:[edi], byte ptr [esi]; jg 0x87b5b; call dword ptr [eax - 0x73]; 
0x00087c1d: movsb byte ptr es:[edi], byte ptr [esi]; jg 0x87c19; call dword ptr [eax + 0x68]; 
0x00087c61: movsb byte ptr es:[edi], byte ptr [esi]; jg 0x87c5d; call dword ptr [eax - 0x73]; 
0x00087c83: movsb byte ptr es:[edi], byte ptr [esi]; jg 0x87c7f; call dword ptr [eax + 0x68]; 
0x0002d85a: movsb byte ptr es:[edi], byte ptr [esi]; jno 0x2d856; call dword ptr [eax - 0x73]; 
0x0010a15f: movsb byte ptr es:[edi], byte ptr [esi]; lahf; stc; call dword ptr [eax - 0x18]; 
0x0002fa48: movsb byte ptr es:[edi], byte ptr [esi]; mov eax, 0xc4830006; or al, 0x89; ret; 
0x000716b0: movsb byte ptr es:[edi], byte ptr [esi]; out dx, al; cli; jmp dword ptr [esi - 0x70]; 
0x000b4ccf: movsb byte ptr es:[edi], byte ptr [esi]; pop eax; mov edi, eax; mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x00139fad: movsb byte ptr es:[edi], byte ptr [esi]; pop ebx; stc; call dword ptr [eax - 1]; 
0x00031e7c: movsb byte ptr es:[edi], byte ptr [esi]; push cs; add byte ptr [ecx - 0x76dbdbbc], cl; ret; 
0x0016e7d8: movsb byte ptr es:[edi], byte ptr [esi]; push dword ptr [ebp - 0x60]; push 0x28; push dword ptr [ebp - 0x50]; call eax; 
0x000403ab: movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00127d75: movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc110; 
0x00179748: movsb byte ptr es:[edi], byte ptr [esi]; ret 0xfff6; 
0x00101477: movsb byte ptr es:[edi], byte ptr [esi]; sahf; stc; call dword ptr [eax - 0x73]; 
0x000eb579: movsb byte ptr es:[edi], byte ptr [esi]; stc; call dword ptr [eax + 0x55]; 
0x0012fbf2: movsb byte ptr es:[edi], byte ptr [esi]; stc; call dword ptr [eax + 0x6a]; 
0x000f468b: movsb byte ptr es:[edi], byte ptr [esi]; stc; call dword ptr [eax - 0x17]; 
0x0012efa8: movsb byte ptr es:[edi], byte ptr [esi]; stc; call dword ptr [eax - 0x75]; 
0x0012f24f: movsb byte ptr es:[edi], byte ptr [esi]; stc; call dword ptr [edx + 0x50]; 
0x00159579: movsb byte ptr es:[edi], byte ptr [esi]; std; jmp dword ptr [esi - 0x70]; 
0x00038592: movsd dword ptr es:[edi], dword ptr [esi]; add dword ptr [eax], eax; add byte ptr [esi + 8], bh; mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x0009c219: movsd dword ptr es:[edi], dword ptr [esi]; call 0x2ef431e; lea edx, [edx - 0x9d450]; cmovne eax, edx; ret; 
0x0009c259: movsd dword ptr es:[edi], dword ptr [esi]; call 0x2ef435e; lea edx, [edx - 0x9af40]; cmovne eax, edx; ret; 
0x0009c2d9: movsd dword ptr es:[edi], dword ptr [esi]; call 0x2ef43de; lea edx, [edx - 0x9af10]; cmovne eax, edx; ret; 
0x00169408: movsd dword ptr es:[edi], dword ptr [esi]; cld; jmp dword ptr [esi - 0x70]; 
0x001023ba: movsd dword ptr es:[edi], dword ptr [esi]; dec ecx; stc; call dword ptr [eax - 0x18]; 
0x0004b660: movsd dword ptr es:[edi], dword ptr [esi]; fmul dword ptr [edx + 0x74]; sub dl, byte ptr [eax - 0xa]; ret 0x7501; 
0x00041417: movsd dword ptr es:[edi], dword ptr [esi]; in eax, 0xfe; dec dword ptr [ebx - 0x72d3db84]; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x000847d1: movsd dword ptr es:[edi], dword ptr [esi]; mov byte ptr [edx + 0x88], 1; add esp, 4; pop esi; pop edi; ret; 
0x00152b10: movsd dword ptr es:[edi], dword ptr [esi]; mov dword ptr [eax + 0x7c], 0; add esp, 4; pop esi; pop edi; ret; 
0x000dfd86: movsd dword ptr es:[edi], dword ptr [esi]; mov eax, 0x20; mov edx, 0x40; cmove eax, edx; ret; 
0x000b46be: movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; cld; pop edi; ret; 
0x000b4d62: movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; cld; pop edi; ret; 
0x000b4d38: movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000b4698: movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; pop edi; ret; 
0x000843b9: movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x00150e64: movsd dword ptr es:[edi], dword ptr [esi]; popal; stc; call dword ptr [eax - 1]; 
0x000b4d36: movsd dword ptr es:[edi], dword ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000b4696: movsd dword ptr es:[edi], dword ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; pop edi; ret; 
0x000b4daf: movsd dword ptr es:[edi], dword ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; xchg edi, eax; mov esi, edx; ret; 
0x0004b67e: movsd dword ptr es:[edi], dword ptr [esi]; ret; 
0x001317c8: movsd dword ptr es:[edi], dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x0012e5b0: movsd dword ptr es:[edi], dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x00104d63: movsd dword ptr es:[edi], dword ptr [esi]; std; dec dword ptr [ecx - 0x473e7626]; rol byte ptr [eax], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0004db2a: movsd dword ptr es:[edi], dword ptr [esi]; sub ebp, edi; jmp dword ptr [esi - 0x70]; 
0x000b4db1: movsd dword ptr es:[edi], dword ptr [esi]; xchg edi, eax; mov esi, edx; ret; 
0x000b4d35: movsw word ptr es:[edi], word ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000b4695: movsw word ptr es:[edi], word ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; pop edi; ret; 
0x000b4dae: movsw word ptr es:[edi], word ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; xchg edi, eax; mov esi, edx; ret; 
0x000a1d63: movsx edx, byte ptr [ecx + eax]; cmp edx, ebx; je 0xa1d60; pop ebx; ret; 
0x00166dc8: movzx eax, al; add esp, 0x1c; ret; 
0x0010c116: movzx eax, al; add esp, 0x4c; ret; 
0x0015bd08: movzx eax, al; add esp, 4; pop ebx; pop esi; ret; 
0x0011b00e: movzx eax, al; add esp, 8; pop ebx; ret; 
0x00133a93: movzx eax, al; and ecx, 0xc0000000; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x0008fe99: movzx eax, al; lea eax, [eax + eax + 2]; ret; 
0x000dff34: movzx eax, al; lea eax, [eax + eax - 1]; ret; 
0x00037308: movzx eax, al; mov dword ptr [ebx + 0x18], eax; add esp, 8; xor eax, eax; pop ebx; ret; 
0x00083139: movzx eax, al; mov dword ptr [edx + 8], eax; mov byte ptr gs:[0x4fe], 0; mov dword ptr gs:[0x7c], edx; ret; 
0x000fb3dc: movzx eax, al; neg eax; ret; 
0x0007e6f7: movzx eax, al; pop ebx; neg eax; ret; 
0x0015bc82: movzx eax, al; pop ebx; pop esi; ret; 
0x00082ca5: movzx eax, al; pop ebx; ret; 
0x00038232: movzx eax, al; ret; 
0x0010c326: movzx eax, al; sbb ecx, edx; sbb eax, 0; pop ebx; pop esi; ret; 
0x0008fd65: movzx eax, al; sub eax, 2; add esp, 0xc; ret; 
0x0014ab4e: movzx eax, ax; add esp, 0x2c; ret; 
0x00140ace: movzx eax, byte ptr [eax + 1]; shr eax, 1; ret; 
0x00068e3f: movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edx + eax*4 - 0x737e0]; add ecx, ebp; jmp ecx; 
0x0006913f: movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edx + eax*4 - 0x73860]; add ecx, ebp; jmp ecx; 
0x000693d8: movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edx + eax*4 - 0x738e0]; add ecx, ebp; jmp ecx; 
0x00069338: movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edx + eax*4 - 0x739e0]; add ecx, ebp; jmp ecx; 
0x00068d88: movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edx + eax*4]; add ecx, ebp; jmp ecx; 
0x00080276: movzx eax, byte ptr [eax - 1]; and dword ptr [ebx], 0xffffffef; add esp, 4; pop ebx; pop esi; ret; 
0x0019258d: movzx eax, byte ptr [eax - 1]; cmp al, byte ptr [edx - 1]; mov eax, 0; jne 0x192da6; pop ebx; ret; 
0x00195697: movzx eax, byte ptr [eax - 1]; cmp al, byte ptr [edx - 1]; mov eax, 0; jne 0x1956d0; pop ebx; ret; 
0x0007fa41: movzx eax, byte ptr [eax]; add esp, 4; pop ebx; pop esi; ret; 
0x0017f670: movzx eax, byte ptr [eax]; mov byte ptr [edx], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00188ab0: movzx eax, byte ptr [eax]; mov byte ptr [edx], al; pop ebx; ret; 
0x001922e2: movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x0007da6e: movzx eax, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0006e788: movzx eax, byte ptr [edi + ecx - 0x20]; mov esi, dword ptr [esp + 0x70]; mov edx, ebx; add edx, dword ptr [esi + eax*4]; jmp edx; 
0x00191dc5: movzx eax, byte ptr [edi + ecx]; movzx ecx, byte ptr [esi + ecx]; sub eax, ecx; pop esi; pop edi; ret; 
0x000e5a89: movzx eax, byte ptr [edx + 1]; add edx, 1; test al, al; jne 0xe5a61; xor eax, eax; ret; 
0x0018c8dd: movzx eax, byte ptr [edx + 1]; sub eax, ecx; pop ebp; ret; 
0x0018b114: movzx eax, byte ptr [edx + 1]; sub eax, ecx; ret; 
0x0018c8fd: movzx eax, byte ptr [edx + 2]; sub eax, ecx; pop ebp; ret; 
0x0018b124: movzx eax, byte ptr [edx + 2]; sub eax, ecx; ret; 
0x0018c91d: movzx eax, byte ptr [edx + 3]; sub eax, ecx; pop ebp; ret; 
0x0018b134: movzx eax, byte ptr [edx + 3]; sub eax, ecx; ret; 
0x0018c93d: movzx eax, byte ptr [edx + 4]; sub eax, ecx; pop ebp; ret; 
0x0018b144: movzx eax, byte ptr [edx + 4]; sub eax, ecx; ret; 
0x0018c95d: movzx eax, byte ptr [edx + 5]; sub eax, ecx; pop ebp; ret; 
0x0018b154: movzx eax, byte ptr [edx + 5]; sub eax, ecx; ret; 
0x0018c97d: movzx eax, byte ptr [edx + 6]; sub eax, ecx; pop ebp; ret; 
0x0018b164: movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x0018c8a1: movzx eax, byte ptr [edx + 7]; sub eax, ecx; pop ebp; ret; 
0x0018b0f4: movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x0018ef63: movzx eax, byte ptr [edx]; mov ecx, dword ptr [ebx + ecx*4 - 0x86b80]; mov eax, dword ptr [ebx + eax*4 - 0x86b80]; sub eax, ecx; pop ebx; ret; 
0x00081002: movzx eax, byte ptr [edx]; pop ebx; pop esi; ret; 
0x001732f9: movzx eax, byte ptr [edx]; pop esi; pop edi; ret; 
0x0007bf26: movzx eax, byte ptr [edx]; ret; 
0x0018c8bc: movzx eax, byte ptr [edx]; sub eax, ecx; pop ebp; ret; 
0x0018b103: movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x00116329: movzx eax, byte ptr [esi + 0x23]; mov byte ptr [esp + 0x37], al; mov eax, dword ptr [esp + 0x84]; lea ecx, [eax + 0x5402]; mov eax, edi; call dword ptr gs:[0x10]; 
0x00189ab6: movzx eax, byte ptr [esi]; mov byte ptr [edi], al; pop esi; pop edi; pop ebx; ret; 
0x0002485a: movzx eax, dl; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x0002ffd7: movzx eax, word ptr [eax + edx*2 + 0x100]; and eax, dword ptr [esp + 8]; ret; 
0x0002fca2: movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x0002fc72: movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x0002fc42: movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x0002fb82: movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x0002fbe2: movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x0002faf2: movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x0002fbb2: movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x0002fb52: movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x0002fd52: movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x0002fb22: movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x0002fc12: movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x0002fac2: movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x0013127a: movzx eax, word ptr [eax + edx*2]; shr ax, 0xe; and eax, 1; pop ebx; ret; 
0x000c9fef: movzx ebx, bl; lea ebx, [ebx + ebx - 1]; mov eax, ebx; pop ebx; pop esi; ret; 
0x00146e59: movzx ebx, byte ptr [eax]; test ebx, ebx; jne 0x146e28; mov eax, 1; pop ebx; ret; 
0x0012097c: movzx ecx, al; shrd eax, edx, 0xc; xor al, al; or eax, ecx; ret; 
0x0018cb90: movzx ecx, byte ptr [eax + 0xf]; cmp byte ptr [edx + 0xf], cl; jne 0x18c9f0; pop ebp; xor eax, eax; ret; 
0x0018c8d9: movzx ecx, byte ptr [eax + 1]; movzx eax, byte ptr [edx + 1]; sub eax, ecx; pop ebp; ret; 
0x0018b110: movzx ecx, byte ptr [eax + 1]; movzx eax, byte ptr [edx + 1]; sub eax, ecx; ret; 
0x0018c8f9: movzx ecx, byte ptr [eax + 2]; movzx eax, byte ptr [edx + 2]; sub eax, ecx; pop ebp; ret; 
0x0018b120: movzx ecx, byte ptr [eax + 2]; movzx eax, byte ptr [edx + 2]; sub eax, ecx; ret; 
0x0018c919: movzx ecx, byte ptr [eax + 3]; movzx eax, byte ptr [edx + 3]; sub eax, ecx; pop ebp; ret; 
0x0018b130: movzx ecx, byte ptr [eax + 3]; movzx eax, byte ptr [edx + 3]; sub eax, ecx; ret; 
0x0018c939: movzx ecx, byte ptr [eax + 4]; movzx eax, byte ptr [edx + 4]; sub eax, ecx; pop ebp; ret; 
0x0018b140: movzx ecx, byte ptr [eax + 4]; movzx eax, byte ptr [edx + 4]; sub eax, ecx; ret; 
0x0018c959: movzx ecx, byte ptr [eax + 5]; movzx eax, byte ptr [edx + 5]; sub eax, ecx; pop ebp; ret; 
0x0018b150: movzx ecx, byte ptr [eax + 5]; movzx eax, byte ptr [edx + 5]; sub eax, ecx; ret; 
0x0018c979: movzx ecx, byte ptr [eax + 6]; movzx eax, byte ptr [edx + 6]; sub eax, ecx; pop ebp; ret; 
0x0018b160: movzx ecx, byte ptr [eax + 6]; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x0018c89d: movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; pop ebp; ret; 
0x0018b0f0: movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x00192444: movzx ecx, byte ptr [eax - 1]; cmp cl, byte ptr [edx - 1]; mov eax, 0; jne 0x192da6; pop ebx; ret; 
0x0019553a: movzx ecx, byte ptr [eax - 1]; cmp cl, byte ptr [edx - 1]; mov eax, 0; jne 0x1956d0; pop ebx; ret; 
0x0017eec8: movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00180ee8: movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, edx; pop ebx; ret; 
0x00188398: movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x000b4996: movzx ecx, byte ptr [eax]; cmp cl, byte ptr [edx]; jne 0xb49a1; xor eax, eax; pop ebx; ret; 
0x0017f548: movzx ecx, byte ptr [eax]; mov byte ptr [edx], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001889a8: movzx ecx, byte ptr [eax]; mov byte ptr [edx], cl; pop ebx; ret; 
0x0018c8b9: movzx ecx, byte ptr [eax]; movzx eax, byte ptr [edx]; sub eax, ecx; pop ebp; ret; 
0x0018b100: movzx ecx, byte ptr [eax]; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x00105338: movzx ecx, byte ptr [eax]; test cl, cl; jne 0x10531e; xor eax, eax; pop ebx; ret; 
0x00107ab8: movzx ecx, byte ptr [eax]; test cl, cl; jne 0x107a9e; xor eax, eax; pop ebx; ret; 
0x000e0c98: movzx ecx, byte ptr [eax]; test cl, cl; jne 0xe0c7e; xor eax, eax; pop ebx; ret; 
0x000e3358: movzx ecx, byte ptr [eax]; test cl, cl; jne 0xe333e; xor eax, eax; pop ebx; ret; 
0x000f8388: movzx ecx, byte ptr [eax]; test cl, cl; jne 0xf836e; xor eax, eax; pop ebx; ret; 
0x000f8f68: movzx ecx, byte ptr [eax]; test cl, cl; jne 0xf8f4e; xor eax, eax; pop ebx; ret; 
0x00191dc9: movzx ecx, byte ptr [esi + ecx]; sub eax, ecx; pop esi; pop edi; ret; 
0x0017ef58: movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00180f78: movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, edx; pop ebx; ret; 
0x00188428: movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; pop ebx; ret; 
0x0017f5d8: movzx ecx, word ptr [eax]; mov word ptr [edx], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00188a28: movzx ecx, word ptr [eax]; mov word ptr [edx], cx; pop ebx; ret; 
0x000a2669: movzx edi, bl; pop ebx; pop esi; sub eax, edi; pop edi; ret; 
0x00133a90: movzx edx, ax; movzx eax, al; and ecx, 0xc0000000; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x000fbc50: movzx edx, byte ptr [eax + 9]; pop ebx; pop esi; and edx, 0xf; mov eax, edx; ret; 
0x000e0cb8: movzx edx, byte ptr [eax]; pop ebx; test dl, dl; mov edx, 0; cmove eax, edx; ret; 
0x0015c809: movzx edx, byte ptr [ecx + edx]; mov byte ptr [eax - 1], dl; cmp eax, ebx; jne 0x15c800; pop ebx; ret; 
0x00034eb5: movzx edx, byte ptr [ecx]; test dl, dl; jne 0x34e99; ret; 
0x001922e5: movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x00195184: movzx edx, byte ptr [esi - 0x10]; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x001951e4: movzx edx, byte ptr [esi - 0xa]; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x001951b4: movzx edx, byte ptr [esi - 0xd]; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x001951a4: movzx edx, byte ptr [esi - 0xe]; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x00195175: movzx edx, byte ptr [esi - 9]; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x00082891: movzx edx, dl; mov dword ptr [eax + 0x24], edx; mov byte ptr gs:[0x4fe], 0; mov dword ptr gs:[0x80], eax; ret; 
0x00104408: movzx edx, word ptr [eax]; mov eax, dword ptr [esp + 8]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x0012916e: movzx edx, word ptr [edx + eax*2]; and edx, 0x1000; mov eax, edx; ret; 
0x001287ec: movzx edx, word ptr [edx + eax*2]; and edx, 0x100; mov eax, edx; ret; 
0x0012906e: movzx edx, word ptr [edx + eax*2]; and edx, 0x2000; mov eax, edx; ret; 
0x00128e6e: movzx edx, word ptr [edx + eax*2]; and edx, 0x200; mov eax, edx; ret; 
0x00128f6e: movzx edx, word ptr [edx + eax*2]; and edx, 0x4000; mov eax, edx; ret; 
0x00128c6e: movzx edx, word ptr [edx + eax*2]; and edx, 0x400; mov eax, edx; ret; 
0x00128eee: movzx edx, word ptr [edx + eax*2]; and edx, 0x8000; mov eax, edx; ret; 
0x00128cee: movzx edx, word ptr [edx + eax*2]; and edx, 1; mov eax, edx; ret; 
0x00128d6e: movzx edx, word ptr [edx + eax*2]; and edx, 2; mov eax, edx; ret; 
0x00128fee: movzx edx, word ptr [edx + eax*2]; and edx, 4; mov eax, edx; ret; 
0x00128bee: movzx edx, word ptr [edx + eax*2]; and edx, 8; mov eax, edx; ret; 
0x00157e63: mul byte ptr [edx - 7]; call dword ptr [eax + 0x6a]; 
0x00157e63: mul byte ptr [edx - 7]; call dword ptr [eax + 0x6a]; pop es; call 0x152d90; add esp, 0x1c; ret; 
0x00157f63: mul byte ptr [edx - 7]; call dword ptr [eax - 0x18]; 
0x0013e813: mul byte ptr [esi - 0x77]; inc ebp; mov ah, 0x8b; test dword ptr [edi + edi*8 - 1], ebp; jmp dword ptr [esi - 0x77]; 
0x0017b4e7: mul byte ptr [esi - 0x77]; inc edx; dec byte ptr [ebx + 0x5b082444]; ret; 
0x00133a05: neg dword ptr [eax - 7]; call dword ptr [eax - 0x18]; 
0x0011830b: neg dword ptr [ecx + edx]; add byte ptr [ebx - 0xc77e], cl; dec dword ptr [ebx - 0x3f7aefc0]; je 0x11831d; ret; 
0x00191937: neg eax; add esp, 4; pop ebp; pop ebx; ret; 
0x0018f0a7: neg eax; add esp, 4; pop ebx; ret; 
0x0003ab5a: neg eax; cmovs eax, edx; ret; 
0x000b5c8e: neg eax; cmp ecx, edi; pop edi; cmovg eax, edx; ret; 
0x00093325: neg eax; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x000379ad: neg eax; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; pop ebx; ret; 
0x000216e6: neg eax; mov edx, dword ptr [edx - 0x134]; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; ret; 
0x0003627b: neg eax; or eax, ecx; sar eax, 0x1f; not eax; and eax, edx; ret; 
0x0018c9f7: neg eax; pop ebp; ret; 
0x00021c4e: neg eax; pop ebx; adc edx, 0; neg edx; ret; 
0x0003ccba: neg eax; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0004b0f7: neg eax; pop ebx; pop esi; pop edi; ret; 
0x00087eea: neg eax; pop ebx; pop esi; ret; 
0x00105024: neg eax; pop ebx; ret; 
0x00193687: neg eax; pop edi; pop ebp; pop ebx; ret; 
0x00193127: neg eax; pop edi; pop ebx; ret; 
0x00198047: neg eax; pop edi; pop esi; pop ebx; ret; 
0x000c9ca7: neg eax; pop edi; pop esi; ret; 
0x0007671e: neg eax; pop esi; pop edi; pop ebp; ret; 
0x00087e7f: neg eax; pop esi; pop edi; ret; 
0x0007e6fb: neg eax; ret; 
0x0007bfc3: neg eax; sbb eax, eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x000819c4: neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x0017a5f4: neg eax; sbb eax, eax; add esp, 0x2c; ret; 
0x000220f7: neg eax; sbb eax, eax; add esp, 0xc; ret; 
0x000589e4: neg eax; sbb eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x0003ab86: neg edx; cmovs edx, ebx; cmovs eax, ecx; pop ebx; ret; 
0x000d70a8: neg edx; cmp eax, -0x16; mov eax, 3; cmovne eax, edx; ret; 
0x0008d793: neg edx; cmp eax, 0xfffff000; mov eax, 0; cmova eax, edx; ret; 
0x00111a8c: neg edx; cmp eax, 0xfffff000; mov eax, 0; pop edi; cmova eax, edx; ret; 
0x0003d861: neg edx; pop esi; pop edi; pop ebp; ret; 
0x00021c54: neg edx; ret; 
0x0002015b: nop dword ptr [eax + eax]; endbr32; jmp dword ptr [ebx + 0xc]; 
0x0002015a: nop word ptr [eax + eax]; endbr32; jmp dword ptr [ebx + 0xc]; 
0x00089575: nop; adc al, 1; add byte ptr [eax], al; ret; 
0x00082985: nop; adc byte ptr [ecx], al; add byte ptr [eax], al; ret; 
0x000fc45c: nop; add al, 0; add byte ptr [edi], cl; mov esi, 0x83df89ca; ret; 
0x00082925: nop; add al, 1; add byte ptr [eax], al; ret; 
0x00109421: nop; add byte ptr [eax], al; add byte ptr [ebp - 0x47e7dbac], cl; or al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0008df39: nop; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00109ad3: nop; add byte ptr [eax], al; add byte ptr [ebx + 0x982494], cl; add byte ptr [eax], al; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x0006fc3c: nop; add byte ptr [eax], al; add byte ptr [ebx - 0x73efb14], al; add dl, byte ptr [eax - 0x77]; ret; 
0x000b4e65: nop; add byte ptr [eax], al; add byte ptr [edx - 9], al; ret 3; 
0x001631c2: nop; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x000f75ac: nop; add byte ptr [edi], cl; test dword ptr [eax - 0x7c000005], ecx; ret 0x8301; 
0x0002fd89: nop; add byte ptr [edx], al; add byte ptr [eax], al; ret; 
0x0015f73a: nop; add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; 
0x0015f73a: nop; add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x0011858d: nop; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0016c05b: nop; add dword ptr [eax], eax; add byte ptr [ecx + 0x5f5e5bd0], cl; ret; 
0x00058bff: nop; add dword ptr [edx + 4], 1; xor eax, eax; pop ebx; pop esi; ret; 
0x0011991c: nop; add eax, 0xc483fff6; adc byte ptr [eax + 1], bh; add esp, 8; pop ebx; ret; 
0x00197aff: nop; add eax, 1; pop edi; ret; 
0x000c9e9f: nop; add eax, 1; ret; 
0x000c9eaf: nop; add eax, 3; ret; 
0x0004b02f: nop; add eax, dword ptr [esp]; ret; 
0x00196f7f: nop; add edx, 1; jl 0x197040; lea eax, [ecx + 1]; ret; 
0x0008b9b4: nop; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0015883f: nop; add esp, 4; mov eax, 0x10; pop ebx; pop esi; ret; 
0x00150157: nop; add esp, 4; mov eax, 1; pop ebx; pop esi; ret; 
0x0009e89f: nop; add esp, 4; pop ebx; pop esi; ret; 
0x000f76ff: nop; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0008ad9f: nop; add esp, 8; mov eax, 0x16; pop ebx; ret; 
0x0011ae8f: nop; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0008bcff: nop; and dword ptr [eax], 0xbfffffff; xor eax, eax; ret; 
0x001963df: nop; and eax, 0x1fff; jne 0x196100; xor eax, eax; pop edi; ret; 
0x001963bf: nop; and eax, 0x3ff; jne 0x196100; xor eax, eax; pop edi; ret; 
0x001963ef: nop; and eax, 0x3fff; jne 0x196100; xor eax, eax; pop edi; ret; 
0x001963cf: nop; and eax, 0x7ff; jne 0x196100; xor eax, eax; pop edi; ret; 
0x001963ff: nop; and eax, 0x7fff; jne 0x196100; xor eax, eax; pop edi; ret; 
0x0013604b: nop; arpl dx, si; call dword ptr [eax - 0x73]; 
0x000b43af: nop; bsf eax, eax; add eax, edx; ret; 
0x000b3ccf: nop; bsf eax, eax; lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x000b43cf: nop; bsf eax, eax; lea eax, [eax + edx + 0x20]; ret; 
0x000b439f: nop; bsf eax, eax; lea eax, [eax + edx - 0x10]; ret; 
0x000b3f7f: nop; bsr eax, eax; add eax, ecx; ret; 
0x000b3f9f: nop; bsr eax, eax; lea eax, [eax + ecx + 0x20]; ret; 
0x000b3faf: nop; bsr eax, eax; lea eax, [eax + ecx + 0x30]; ret; 
0x00118d7f: nop; call 0x82760; mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x0010aeff: nop; call 0x82760; mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 6; call dword ptr gs:[0x10]; 
0x001a0f2f: nop; call dword ptr [esi]; 
0x00065c60: nop; cmp byte ptr [ecx - 7], bh; call dword ptr [edx - 0x73]; 
0x0009f9e1: nop; dec eax; xchg ebp, eax; stc; call dword ptr [edx - 0x73]; 
0x0009561b: nop; dec esp; add al, 0; add byte ptr [ecx], bh; ret; 
0x00092f6f: nop; endbr32; call 0x171e01; add eax, 0x197087; mov dword ptr [eax + 0x3b04], 0; ret; 
0x000384af: nop; endbr32; call 0x171e01; add eax, 0x1f1b47; mov eax, dword ptr [eax + 0x68]; ret; 
0x0002b8bf: nop; endbr32; call 0x171e01; add eax, 0x1fe737; mov eax, dword ptr [eax + 0x1014]; ret; 
0x0002172f: nop; endbr32; call 0x171e01; add eax, 0x2088c7; lea eax, [eax - 0x69214]; ret; 
0x00123b4f: nop; endbr32; mov eax, 0x123; call dword ptr gs:[0x10]; 
0x000df2bf: nop; endbr32; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x000df2bf: nop; endbr32; mov eax, 0x14; call dword ptr gs:[0x10]; ret; 
0x00118dff: nop; endbr32; mov eax, 0x24; call dword ptr gs:[0x10]; 
0x000df2df: nop; endbr32; mov eax, 0x40; call dword ptr gs:[0x10]; 
0x000df2df: nop; endbr32; mov eax, 0x40; call dword ptr gs:[0x10]; ret; 
0x000df60f: nop; endbr32; mov eax, 0x41; call dword ptr gs:[0x10]; 
0x000df60f: nop; endbr32; mov eax, 0x41; call dword ptr gs:[0x10]; ret; 
0x000df68f: nop; endbr32; mov eax, 0x42; call dword ptr gs:[0x10]; 
0x0011c74f: nop; endbr32; mov eax, 0x99; call dword ptr gs:[0x10]; 
0x0008fe2f: nop; endbr32; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0008fe2f: nop; endbr32; mov eax, 0x9e; call dword ptr gs:[0x10]; ret; 
0x000df2ff: nop; endbr32; mov eax, 0xc7; call dword ptr gs:[0x10]; 
0x000df2ff: nop; endbr32; mov eax, 0xc7; call dword ptr gs:[0x10]; ret; 
0x000df33f: nop; endbr32; mov eax, 0xc8; call dword ptr gs:[0x10]; 
0x000df33f: nop; endbr32; mov eax, 0xc8; call dword ptr gs:[0x10]; ret; 
0x000df31f: nop; endbr32; mov eax, 0xc9; call dword ptr gs:[0x10]; 
0x000df31f: nop; endbr32; mov eax, 0xc9; call dword ptr gs:[0x10]; ret; 
0x000df35f: nop; endbr32; mov eax, 0xca; call dword ptr gs:[0x10]; 
0x000df35f: nop; endbr32; mov eax, 0xca; call dword ptr gs:[0x10]; ret; 
0x00123eff: nop; endbr32; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x00123eff: nop; endbr32; mov eax, 0xe0; call dword ptr gs:[0x10]; ret; 
0x000801bf: nop; endbr32; mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x0007f9df: nop; endbr32; mov eax, 0xffffffff; ret; 
0x001656bf: nop; endbr32; mov eax, 1; ret; 
0x0015a94f: nop; endbr32; mov eax, 2; ret; 
0x000827ff: nop; endbr32; mov eax, dword ptr [eax + 0x1c]; mov dword ptr gs:[0x80], eax; ret; 
0x00036ecf: nop; endbr32; mov eax, dword ptr [esp + 0x10]; and eax, 0x80000000; ret; 
0x00166b2f: nop; endbr32; mov eax, dword ptr [esp + 4]; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x0007be7f: nop; endbr32; mov eax, dword ptr [esp + 4]; and dword ptr [eax], 0xffffffcf; ret; 
0x0002fdbf: nop; endbr32; mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x00133a5f: nop; endbr32; mov eax, dword ptr [esp + 4]; and eax, 0xffff; ror ax, 8; ret; 
0x00133a4f: nop; endbr32; mov eax, dword ptr [esp + 4]; bswap eax; ret; 
0x00084b7f: nop; endbr32; mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x0008e09f: nop; endbr32; mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 1; xor eax, eax; ret; 
0x0014df8f: nop; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x10]; ret; 
0x00080eaf: nop; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x00091b4f: nop; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x64]; ret; 
0x001160cf: nop; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x0007b0bf: nop; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x000d90ff: nop; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; ret; 
0x0007eeef: nop; endbr32; mov eax, dword ptr [esp + 4]; test byte ptr [eax], 0x80; jne 0x7ef00; ret; 
0x0008d75f: nop; endbr32; mov eax, dword ptr gs:[8]; ret; 
0x000886cf: nop; endbr32; mov eax, dword ptr gs:[8]; xor edx, edx; lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x00123d3f: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x136; call dword ptr gs:[0x10]; 
0x00123a4f: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x149; call dword ptr gs:[0x10]; 
0x00123b6f: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x00118edf: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x158; call dword ptr gs:[0x10]; 
0x00123ecf: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x17e; call dword ptr gs:[0x10]; 
0x000ddbdf: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x0010c2bf: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x28; call dword ptr gs:[0x10]; 
0x0010af7f: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x29; call dword ptr gs:[0x10]; 
0x00118cdf: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x33; call dword ptr gs:[0x10]; 
0x0010991f: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x00118d0f: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x00123d6f: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x56; call dword ptr gs:[0x10]; 
0x00120fef: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x0011923f: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x001238ff: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x71; call dword ptr gs:[0x10]; 
0x0011929f: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x73; call dword ptr gs:[0x10]; 
0x000dd60f: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x000df5af: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x84; call dword ptr gs:[0x10]; 
0x0010b19f: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x00121a6f: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x88; call dword ptr gs:[0x10]; 
0x000df65f: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x93; call dword ptr gs:[0x10]; 
0x0011c71f: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x98; call dword ptr gs:[0x10]; 
0x000fb00f: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x000fb05f: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x000fb08f: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x0010b16f: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xc; call dword ptr gs:[0x10]; 
0x001213ef: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x0012140f: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x00123a1f: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xfe; call dword ptr gs:[0x10]; 
0x0008c66f: nop; endbr32; nop; xor eax, eax; ret; 
0x000de3af: nop; endbr32; pop ecx; mov eax, 0xbe; int 0x80; 
0x000dd63f: nop; endbr32; push ebx; mov eax, 0x2b; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0002148f: nop; endbr32; ret; 
0x0008010f: nop; endbr32; xor eax, eax; ret; 
0x001592b5: nop; hlt; bnd call dword ptr [ecx - 0x73]; 
0x0002f7b4: nop; inc eax; ret; 
0x001922df: nop; jb 0x1922f0; movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x00062a37: nop; jecxz 0x62a39; dec dword ptr [ebx - 0x4f37b]; jmp dword ptr [ebp - 0x75]; 
0x001338fa: nop; jmp edx; 
0x00152a3f: nop; jo 0x1529f0; stc; call dword ptr [edx - 0x73]; 
0x0016ed10: nop; js 0x16ed16; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0016ed50: nop; js 0x16ed56; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000213d3: nop; js 0x213ef; add byte ptr [eax], al; ret; 
0x00021473: nop; js 0x2148f; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x00196d9f: nop; lea eax, [ecx + 0xa]; ret; 
0x00196daf: nop; lea eax, [ecx + 0xb]; ret; 
0x00196dbf: nop; lea eax, [ecx + 0xd]; ret; 
0x00196dcf: nop; lea eax, [ecx + 0xe]; ret; 
0x00196ddf: nop; lea eax, [ecx + 0xf]; ret; 
0x00196d2f: nop; lea eax, [ecx + 1]; ret; 
0x00196d3f: nop; lea eax, [ecx + 2]; ret; 
0x00196d4f: nop; lea eax, [ecx + 3]; ret; 
0x00196d5f: nop; lea eax, [ecx + 5]; ret; 
0x00196d6f: nop; lea eax, [ecx + 6]; ret; 
0x00196d7f: nop; lea eax, [ecx + 7]; ret; 
0x00196d8f: nop; lea eax, [ecx + 9]; ret; 
0x0003852f: nop; lea eax, [ecx - 1]; mov dword ptr [edx + 0x64], eax; mov eax, ecx; ret; 
0x00195cff: nop; lea eax, [edi + 1]; pop edi; ret; 
0x0019852f: nop; lea eax, [edi - 0xc]; pop edi; ret; 
0x00195cef: nop; lea eax, [edi]; pop edi; ret; 
0x0019740f: nop; lea eax, [edx + 0xa]; ret; 
0x0019741f: nop; lea eax, [edx + 0xc]; ret; 
0x0019742f: nop; lea eax, [edx + 0xd]; ret; 
0x0019743f: nop; lea eax, [edx + 0xe]; ret; 
0x001973af: nop; lea eax, [edx + 2]; ret; 
0x001973bf: nop; lea eax, [edx + 4]; ret; 
0x001973cf: nop; lea eax, [edx + 5]; ret; 
0x001973df: nop; lea eax, [edx + 6]; ret; 
0x001973ef: nop; lea eax, [edx + 8]; ret; 
0x001973ff: nop; lea eax, [edx + 9]; ret; 
0x000b5fdf: nop; lea ebx, [eax + 0xc]; mov eax, ebx; pop ebx; ret; 
0x000d718f: nop; lea ecx, [esp + 0x14]; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x00093d9f: nop; lea ecx, [esp + 0xc]; mov eax, 0x105; call dword ptr gs:[0x10]; 
0x0002ed4f: nop; lea edx, [ecx - 0x6d179]; mov eax, edx; pop ebx; ret; 
0x0014c870: nop; mov ah, 0xac; stc; call dword ptr [edx - 0x73]; 
0x00059f57: nop; mov al, byte ptr [0x3efff8be]; jmp eax; 
0x001711c9: nop; mov al, byte ptr [0x3efff928]; jmp eax; 
0x0014bab7: nop; mov al, byte ptr [0xf6000050]; ret 0xf01; 
0x000a827f: nop; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; ret; 
0x000acb4f: nop; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x000a814f: nop; mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; pop edi; ret; 
0x000a828f: nop; mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; ret; 
0x000a3d7f: nop; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x000a3e9f: nop; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edx; ret; 
0x00142307: nop; mov byte ptr [ebx], 0; add esp, 8; pop ebx; ret; 
0x000ac3ff: nop; mov byte ptr [edi], dl; pop edi; pop esi; pop ebx; ret; 
0x000a1aff: nop; mov byte ptr [edx - 1], 0; mov dword ptr [esi], edx; pop ebx; pop esi; ret; 
0x000a200f: nop; mov byte ptr [edx], 0; mov eax, edx; pop ebx; pop esi; ret; 
0x000c9e8f: nop; mov ch, dh; and ch, 0xf; je 0xc9eb0; add eax, 2; ret; 
0x00094374: nop; mov dword ptr [eax + 0x1cc], edx; ret; 
0x00094354: nop; mov dword ptr [eax + 0x1d0], edx; ret; 
0x00094404: nop; mov dword ptr [eax + 0x208], edx; ret; 
0x000946e4: nop; mov dword ptr [eax + 0x3b68], edx; ret; 
0x000b60cf: nop; mov dword ptr [eax + 8], edx; mov eax, esi; pop ebx; pop esi; ret; 
0x0015a2ff: nop; mov dword ptr [eax], 0xa; pop ebx; ret; 
0x0015a30f: nop; mov dword ptr [eax], 8; pop ebx; ret; 
0x000a5d8f: nop; mov dword ptr [ecx], edx; mov byte ptr [ecx + 4], dl; pop ebx; ret; 
0x000a5daf: nop; mov dword ptr [ecx], edx; mov dword ptr [ecx + 3], edx; pop ebx; ret; 
0x000a5d9f: nop; mov dword ptr [ecx], edx; mov word ptr [ecx + 4], dx; pop ebx; ret; 
0x000a5d7f: nop; mov dword ptr [ecx], edx; pop ebx; ret; 
0x000ac41f: nop; mov dword ptr [edi - 1], edx; pop edi; pop esi; pop ebx; ret; 
0x000ac42f: nop; mov dword ptr [edi], edx; pop edi; pop esi; pop ebx; ret; 
0x000943e0: nop; mov dword ptr [edx + 0x204], eax; ret; 
0x0006f37f: nop; mov dword ptr [esp + 0x5c], 1; jmp ebx; 
0x001620ff: nop; mov dword ptr [esp + 8], eax; sub esp, 0xc; mov ecx, dword ptr [edx + 4]; push edx; call dword ptr [ecx + 0x10]; 
0x0016efbf: nop; mov dword ptr [esp + 8], ecx; call eax; 
0x000afd5f: nop; mov dx, word ptr [esi]; mov word ptr [eax], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000dfe5f: nop; mov eax, 0x100; ret; 
0x0008653f: nop; mov eax, 0x16; pop ebx; ret; 
0x0008462f: nop; mov eax, 0x16; ret; 
0x000dfd1f: nop; mov eax, 0x7e; pop ebx; ret; 
0x00127087: nop; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; call dword ptr gs:[0x10]; 
0x0003775f: nop; mov eax, 0xad; int 0x80; 
0x000831a8: nop; mov eax, 0xf0; mov ecx, 0x80; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x000dfd2f: nop; mov eax, 0xfffa; pop ebx; ret; 
0x00149807: nop; mov eax, 0xffffffff; pop ebx; pop esi; pop edi; ret; 
0x00076a87: nop; mov eax, 0xffffffff; ret; 
0x0018b1af: nop; mov eax, 1; ja 0x18b1b9; neg eax; ret; 
0x000e0e07: nop; mov eax, 1; ret; 
0x0014048f: nop; mov eax, 2; ret; 
0x0011f5cf: nop; mov eax, dword ptr [eax + 0x368]; mov ecx, dword ptr [esp + 8]; mov dword ptr [ecx], eax; mov eax, 1; ret; 
0x0011f5b7: nop; mov eax, dword ptr [eax + 0x44]; mov ecx, dword ptr [esp + 8]; mov dword ptr [ecx], eax; mov eax, 1; ret; 
0x0017196e: nop; mov eax, dword ptr [eax]; ret; 
0x0016313f: nop; mov eax, dword ptr [ebx - 0xcc]; pop ebx; pop esi; pop edi; ret; 
0x00171f3f: nop; mov eax, dword ptr [ecx - 0x134]; mov edx, dword ptr gs:[0]; mov dword ptr [edx + eax], 0x16; xor eax, eax; ret; 
0x000a807f: nop; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; lea eax, [edx + 3]; pop edi; ret; 
0x000a3caf: nop; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x000a3ebf: nop; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; ret; 
0x0016ecdf: nop; mov eax, dword ptr [edx + 0x3a0]; mov dword ptr [esp + 4], ecx; jmp dword ptr [eax + 0x30]; 
0x00126c37: nop; mov eax, dword ptr [esp + 0xc]; mov edx, dword ptr [edx]; mov dword ptr [eax], edx; mov eax, 1; ret; 
0x000374ee: nop; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x00086b8f: nop; mov eax, edx; call dword ptr gs:[0x10]; 
0x000a69df: nop; mov eax, edx; pop ebx; ret; 
0x0019738f: nop; mov eax, edx; ret; 
0x0013ebff: nop; mov ebx, dword ptr [ebx]; mov eax, 6; call dword ptr gs:[0x10]; 
0x00115aaf: nop; mov ebx, dword ptr [esp + 0x20]; lea edx, [esp + 4]; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x0015afb7: nop; mov ecx, 1; pop ebx; mov eax, ecx; ret; 
0x000c9f87: nop; mov ecx, eax; mov eax, ecx; ret; 
0x0014e2bf: nop; mov edx, 0xffffffff; mov eax, edx; pop ebx; pop esi; ret; 
0x0015a28f: nop; mov edx, dword ptr [edx + 0x10]; mov dword ptr [eax], 7; mov dword ptr [eax + 4], edx; pop ebx; ret; 
0x000afd7f: nop; mov edx, dword ptr [esi]; mov dword ptr [eax], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0017198e: nop; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x000a5d5f: nop; mov word ptr [ecx], dx; pop ebx; ret; 
0x000a20f7: nop; mov word ptr [edx], si; lea eax, [edx + 1]; pop ebx; pop esi; ret; 
0x000a812f: nop; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000a3d5f: nop; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x00198c4f: nop; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000afebf: nop; movdqu xmm0, xmmword ptr [esi]; movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000a5e1f: nop; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000a5e2f: nop; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000a5e3f: nop; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x000a5dbf: nop; movlpd qword ptr [ecx], xmm0; pop ebx; ret; 
0x000a80af: nop; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x000a82ef: nop; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; ret; 
0x000a3cdf: nop; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x00198c1f: nop; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x001317c7: nop; movsd dword ptr es:[edi], dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x0007f69f: nop; movzx eax, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0018b11f: nop; movzx ecx, byte ptr [eax + 2]; movzx eax, byte ptr [edx + 2]; sub eax, ecx; ret; 
0x0018b12f: nop; movzx ecx, byte ptr [eax + 3]; movzx eax, byte ptr [edx + 3]; sub eax, ecx; ret; 
0x0018b13f: nop; movzx ecx, byte ptr [eax + 4]; movzx eax, byte ptr [edx + 4]; sub eax, ecx; ret; 
0x0018b14f: nop; movzx ecx, byte ptr [eax + 5]; movzx eax, byte ptr [edx + 5]; sub eax, ecx; ret; 
0x0018b15f: nop; movzx ecx, byte ptr [eax + 6]; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x0018b0ff: nop; movzx ecx, byte ptr [eax]; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x0004b02d: nop; nop; add eax, dword ptr [esp]; ret; 
0x00123b4d: nop; nop; endbr32; mov eax, 0x123; call dword ptr gs:[0x10]; 
0x00118dfe: nop; nop; endbr32; mov eax, 0x24; call dword ptr gs:[0x10]; 
0x000df2de: nop; nop; endbr32; mov eax, 0x40; call dword ptr gs:[0x10]; 
0x000df2de: nop; nop; endbr32; mov eax, 0x40; call dword ptr gs:[0x10]; ret; 
0x000df60d: nop; nop; endbr32; mov eax, 0x41; call dword ptr gs:[0x10]; 
0x000df60d: nop; nop; endbr32; mov eax, 0x41; call dword ptr gs:[0x10]; ret; 
0x000df68d: nop; nop; endbr32; mov eax, 0x42; call dword ptr gs:[0x10]; 
0x0011c74d: nop; nop; endbr32; mov eax, 0x99; call dword ptr gs:[0x10]; 
0x0008fe2e: nop; nop; endbr32; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0008fe2e: nop; nop; endbr32; mov eax, 0x9e; call dword ptr gs:[0x10]; ret; 
0x000df2fe: nop; nop; endbr32; mov eax, 0xc7; call dword ptr gs:[0x10]; 
0x000df2fe: nop; nop; endbr32; mov eax, 0xc7; call dword ptr gs:[0x10]; ret; 
0x000df33e: nop; nop; endbr32; mov eax, 0xc8; call dword ptr gs:[0x10]; 
0x000df33e: nop; nop; endbr32; mov eax, 0xc8; call dword ptr gs:[0x10]; ret; 
0x000df31e: nop; nop; endbr32; mov eax, 0xc9; call dword ptr gs:[0x10]; 
0x000df31e: nop; nop; endbr32; mov eax, 0xc9; call dword ptr gs:[0x10]; ret; 
0x000df35e: nop; nop; endbr32; mov eax, 0xca; call dword ptr gs:[0x10]; 
0x000df35e: nop; nop; endbr32; mov eax, 0xca; call dword ptr gs:[0x10]; ret; 
0x00123efd: nop; nop; endbr32; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x00123efd: nop; nop; endbr32; mov eax, 0xe0; call dword ptr gs:[0x10]; ret; 
0x0015a95d: nop; nop; endbr32; mov eax, 2; ret; 
0x00036ece: nop; nop; endbr32; mov eax, dword ptr [esp + 0x10]; and eax, 0x80000000; ret; 
0x00133a4e: nop; nop; endbr32; mov eax, dword ptr [esp + 4]; bswap eax; ret; 
0x000d90fe: nop; nop; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; ret; 
0x0008d75d: nop; nop; endbr32; mov eax, dword ptr gs:[8]; ret; 
0x0008c66e: nop; nop; endbr32; nop; xor eax, eax; ret; 
0x000de3ad: nop; nop; endbr32; pop ecx; mov eax, 0xbe; int 0x80; 
0x0002148e: nop; nop; endbr32; ret; 
0x00084b4d: nop; nop; endbr32; xor eax, eax; ret; 
0x0003775d: nop; nop; mov eax, 0xad; int 0x80; 
0x0004b02b: nop; nop; nop; add eax, dword ptr [esp]; ret; 
0x00123b4b: nop; nop; nop; endbr32; mov eax, 0x123; call dword ptr gs:[0x10]; 
0x00118dfc: nop; nop; nop; endbr32; mov eax, 0x24; call dword ptr gs:[0x10]; 
0x000df2dc: nop; nop; nop; endbr32; mov eax, 0x40; call dword ptr gs:[0x10]; 
0x000df60b: nop; nop; nop; endbr32; mov eax, 0x41; call dword ptr gs:[0x10]; 
0x000df68b: nop; nop; nop; endbr32; mov eax, 0x42; call dword ptr gs:[0x10]; 
0x0011c74b: nop; nop; nop; endbr32; mov eax, 0x99; call dword ptr gs:[0x10]; 
0x0008fe2c: nop; nop; nop; endbr32; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x000df2fc: nop; nop; nop; endbr32; mov eax, 0xc7; call dword ptr gs:[0x10]; 
0x000df33c: nop; nop; nop; endbr32; mov eax, 0xc8; call dword ptr gs:[0x10]; 
0x000df31c: nop; nop; nop; endbr32; mov eax, 0xc9; call dword ptr gs:[0x10]; 
0x000df35c: nop; nop; nop; endbr32; mov eax, 0xca; call dword ptr gs:[0x10]; 
0x00123efb: nop; nop; nop; endbr32; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x0015a95b: nop; nop; nop; endbr32; mov eax, 2; ret; 
0x0008d75b: nop; nop; nop; endbr32; mov eax, dword ptr gs:[8]; ret; 
0x0002148c: nop; nop; nop; endbr32; ret; 
0x00084b4b: nop; nop; nop; endbr32; xor eax, eax; ret; 
0x0004b029: nop; nop; nop; nop; add eax, dword ptr [esp]; ret; 
0x0002148a: nop; nop; nop; nop; endbr32; ret; 
0x00094845: nop; or al, 0x94; stc; call dword ptr [edx - 0x73]; 
0x00082965: nop; or al, 1; add byte ptr [eax], al; ret; 
0x00104fd7: nop; or al, 1; add byte ptr [eax], al; xor eax, eax; ret; 
0x00082945: nop; or byte ptr [ecx], al; add byte ptr [eax], al; ret; 
0x00104fef: nop; or byte ptr [ecx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x00094406: nop; or byte ptr [edx], al; add byte ptr [eax], al; ret; 
0x0008bccf: nop; or dword ptr [eax], 0x80000000; xor eax, eax; ret; 
0x0008472f: nop; or dword ptr [ecx + 8], 0x40; xor eax, eax; mov dword ptr [ecx + 4], edx; ret; 
0x00037767: nop; pop eax; mov eax, 0x77; int 0x80; 
0x0012c50f: nop; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x001040ff: nop; pop ebx; mov eax, 9; pop esi; pop edi; ret; 
0x0008326f: nop; pop ebx; pop esi; pop edi; ret; 
0x000b39cf: nop; pop ebx; pop esi; pop edi; xor eax, eax; ret; 
0x00195f2f: nop; pop ebx; pop esi; xor eax, eax; pop edi; ret; 
0x00166c4f: nop; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x00193cbf: nop; pop ebx; xor eax, eax; ret; 
0x0016da5c: nop; pop edi; cld; call dword ptr [ebp + 0x57]; 
0x001920df: nop; pop esi; pop edi; xor eax, eax; pop ebp; ret; 
0x000b00cf: nop; pop esi; ret; 
0x0019b296: nop; push 0x3efff9d8; jmp eax; 
0x0002c2f6: nop; push eax; and al, ah; call dword ptr [edx - 1]; 
0x0011f8a6: nop; push eax; stc; call dword ptr [eax + 0x57]; 
0x00162343: nop; push eax; sub ebx, esi; call dword ptr [edx - 0x73]; 
0x001627a9: nop; push eax; sub ebx, esi; call dword ptr [edx - 0x75]; 
0x000c462d: nop; ret 0x4e8b; 
0x0009acf3: nop; ret 0xc801; 
0x0005e45f: nop; ret 0xffff; 
0x0002fce8: nop; ret; 
0x0009c09e: nop; retf 0xfff5; cmove eax, edx; pop ebx; ret; 
0x00094356: nop; rol byte ptr [ecx], 1; add byte ptr [eax], al; ret; 
0x00089555: nop; sbb al, 1; add byte ptr [eax], al; ret; 
0x000213c4: nop; sbb eax, 0x3365ffe5; adc eax, 0x18; rol edx, 9; mov dword ptr [eax + 0x1978], edx; ret; 
0x00133b6f: nop; shr eax, 0x18; ret; 
0x0019790f: nop; sub edi, 3; jb 0x1979b0; lea eax, [eax + 2]; pop edi; ret; 
0x0019791f: nop; sub edi, 5; jb 0x1979b0; lea eax, [eax + 4]; pop edi; ret; 
0x0019792f: nop; sub edi, 6; jb 0x1979b0; lea eax, [eax + 5]; pop edi; ret; 
0x001968bf: nop; sub edx, 2; jb 0x196970; lea eax, [edi + 1]; pop edi; ret; 
0x001968cf: nop; sub edx, 3; jb 0x196970; lea eax, [edi + 2]; pop edi; ret; 
0x001968df: nop; sub edx, 5; jb 0x196970; lea eax, [edi + 4]; pop edi; ret; 
0x001968ef: nop; sub edx, 6; jb 0x196970; lea eax, [edi + 5]; pop edi; ret; 
0x00080bb7: nop; sub edx, dword ptr [eax + 8]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x0007bf6f: nop; sub esp, 0x18; push eax; call 0x7f6f0; add esp, 0x1c; ret; 
0x000e3a17: nop; sub esp, 0xc; mov eax, dword ptr [ebp - 0x19c]; push dword ptr [ebp - 0x198]; call dword ptr [eax + 0x14]; 
0x001059f7: nop; sub esp, 0xc; mov eax, dword ptr [ebp - 0x1ac]; push dword ptr [ebp - 0x1a8]; call dword ptr [eax + 0x14]; 
0x00163b1f: nop; sub esp, 0xc; mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 4]; 
0x0015f86f: nop; sub esp, 0xc; push esi; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x00072aff: nop; sub esp, 4; push 0x10; push dword ptr [esp + 8]; push ebx; call dword ptr [eax + 0x1c]; 
0x0002166f: nop; sub esp, 4; push dword ptr [esp + 0xc]; push esi; push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x00065ddf: nop; sub esp, 4; push ebx; push dword ptr [esp + 0x14]; push ebp; call dword ptr [eax + 0x1c]; 
0x0016ea97: nop; sub esp, 8; mov eax, dword ptr [ebx + 0x3a0]; push ecx; push edx; call dword ptr [eax + 0x24]; 
0x0009a5cf: nop; sub esp, 8; push eax; push dword ptr [ebx + 0x24]; call edx; 
0x000c271c: nop; test al, 0x97; stc; call dword ptr [edx - 0x73]; 
0x001985bf: nop; test al, 0xf0; jne 0x198530; lea eax, [edi - 0x10]; pop edi; ret; 
0x00022838: nop; test byte ptr [esi - 7], ch; call dword ptr [edx - 0x73]; 
0x00198c7f: nop; tzcnt edx, edx; mov eax, 0x20; add eax, edx; ret; 
0x00150e49: nop; xor al, 0xf9; call dword ptr [eax + 0x52]; 
0x000da56b: nop; xor al, 0xf9; call dword ptr [eax - 0x18]; 
0x0008584f: nop; xor cl, 0x81; mov eax, 0xf0; mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x00095c8f: nop; xor eax, eax; add esp, 0xc; ret; 
0x000853e8: nop; xor eax, eax; pop ebx; pop edi; ret; 
0x0016064f: nop; xor eax, eax; pop ebx; pop esi; ret; 
0x0012599f: nop; xor eax, eax; pop ebx; ret; 
0x0019310f: nop; xor eax, eax; pop edi; pop ebx; ret; 
0x000b37df: nop; xor eax, eax; pop edi; ret; 
0x0003a1ff: nop; xor eax, eax; ret; 
0x000a1e4f: nop; xor edx, edx; pop ebx; mov eax, edx; ret; 
0x0008b8ef: nop; xor edx, edx; xor cl, 0x87; mov eax, 0xf0; mov esi, edx; call dword ptr gs:[0x10]; 
0x000227b6: not byte ptr [eax + eax]; add eax, 0x207847; mov eax, dword ptr [eax + 0xff0]; ret; 
0x00022796: not byte ptr [eax + eax]; add eax, 0x207867; mov eax, dword ptr [eax + 0xfec]; ret; 
0x000832c0: not byte ptr [ebx - 0x75]; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008bed1: not byte ptr [ebx - 0x75]; pop esp; and al, 0x10; mov dword ptr [ebx], 0; call dword ptr gs:[0x10]; 
0x0003ec3f: not byte ptr [ebx - 0x77]; ret; 
0x00125c38: not byte ptr [ebx - 0x77]; test dword ptr [ebx - 0x44ebdbb4], 0xd; mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0011f963: not byte ptr [ecx - 7]; call dword ptr [eax + 0x57]; 
0x00058a0b: not dword ptr [0xb853001d]; add byte ptr es:[eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x00035b70: not eax; and eax, ecx; ret; 
0x00035f33: not eax; and eax, edx; ret; 
0x00088377: not eax; lea eax, [eax*8 + 6]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00166f3c: not eax; shr eax, 0x1f; ret; 
0x000d7080: not ebx; lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x00088d9c: not ecx; and ecx, 0x80; call dword ptr gs:[0x10]; 
0x00193cb8: notrack jmp ebx; lea esi, [esi]; nop; pop ebx; xor eax, eax; ret; 
0x000b592a: notrack jmp ecx; lea esi, [esi]; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1d8]; ret; 
0x000b367a: notrack jmp ecx; lea esi, [esi]; pop ebx; pop esi; ret; 
0x0016064c: notrack jmp edx; nop; xor eax, eax; pop ebx; pop esi; ret; 
0x0015d93d: notrack jmp edx; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0019689f: or ah, 0; add byte ptr [eax], al; lea eax, [edi + 0xf]; pop edi; ret; 
0x00082293: or ah, 0x72; stc; call dword ptr [eax - 0x18]; 
0x000c8da4: or ah, 0x74; stc; call dword ptr [eax - 0x18]; 
0x0008f997: or ah, 0x82; stc; call dword ptr [eax - 0x73]; 
0x001317b6: or ah, 0xa5; stc; call dword ptr [eax - 0x73]; 
0x000ba914: or ah, 0xb9; stc; call dword ptr [eax + 0x53]; 
0x000b59c7: or ah, 1; add byte ptr [eax], al; ret; 
0x0017c868: or ah, bh; mov dword ptr [edx + ecx - 4], ebx; mov eax, edx; pop ebx; ret; 
0x000b4d68: or ah, bh; pop edi; ret; 
0x00088961: or ah, byte ptr [eax]; sbb al, byte ptr [eax]; add byte ptr [ebp + 8], dh; xor eax, eax; pop ebx; ret; 
0x001589d9: or al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x6a1043], cl; push esi; call dword ptr [eax + 0x14]; 
0x0004ac2c: or al, 0; add byte ptr [eax], al; add byte ptr [ecx + 0x3004bbe1], cl; add byte ptr [eax], al; mov eax, 0x180; call dword ptr gs:[0x10]; 
0x0011c919: or al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x4e0f; 
0x000dd6a0: or al, 0; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0010b17b: or al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000de367: or al, 0; add byte ptr [eax], al; lea ebx, [eax + 0x70]; mov dword ptr [eax + 0x70], ebx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x000869d3: or al, 0; add byte ptr [eax], al; lea ebx, [eax + 0x70]; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x0013fb2f: or al, 0; add byte ptr [eax], al; mov dword ptr [eax + 4], 0x29; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00117120: or al, 0; add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; ret; 
0x0015a2ea: or al, 0; add byte ptr [eax], al; pop ebx; ret; 
0x00197ab7: or al, 0; add byte ptr [eax], al; pop edi; ret; 
0x00083ded: or al, 0; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x000ddce5: or al, 0; add byte ptr [eax], al; test eax, eax; jne 0xddd08; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x0011f9ab: or al, 0; add byte ptr [ebp - 0x6ad9f7d], cl; call dword ptr [edx + 0x52]; 
0x00066a32: or al, 0; add byte ptr [ebx + 0x505304ec], al; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x0006ebc5: or al, 0; add byte ptr [ebx + 0x565704ec], al; push ebp; call dword ptr [ebx + 0x1c]; 
0x00190cde: or al, 0; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0016c7d4: or al, 0; add byte ptr [ebx - 0x4472f714], al; pop es; stc; call dword ptr [edi + 0x55]; 
0x0016c187: or al, 0; add byte ptr [ebx - 0x4472f714], al; pop es; stc; call dword ptr [edi + 0x56]; 
0x000645f0: or al, 0; add byte ptr [ebx - 0x50f63], cl; call ecx; 
0x001a08d5: or al, 0; add byte ptr [ecx - 0x2d7a57c4], cl; je 0x1a08e9; mov dword ptr [esp + 8], eax; call edx; 
0x00095853: or al, 0; add byte ptr [edi + 0x3b5c86], al; add byte ptr [ebx - 0x70f0fe08], al; ret 0; 
0x0014d8e0: or al, 0; je 0x14d8ee; add dword ptr [eax + 8], 1; je 0x14d90d; add esp, 0xc; ret; 
0x0011ee92: or al, 0x10; add byte ptr [eax], al; xor eax, eax; lea edx, [esp + 0xc]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x00162f31: or al, 0x10; ret; 
0x000b934a: or al, 0x17; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x000ca66f: or al, 0x19; aad 0x89; ljmp 0x891f:0xeac1cd89; sal byte ptr [ecx], 1; shr byte ptr [ecx], cl; ret; 
0x001220de: or al, 0x1b; pop ebx; shr eax, cl; and eax, 3; ret; 
0x00171e12: or al, 0x24; ret; 
0x00084f95: or al, 0x24; xor cl, 0x81; mov dword ptr [ebp + edx*4 + 8], 0; mov edx, 0x7fffffff; call dword ptr gs:[0x10]; 
0x000cc533: or al, 0x29; ret 0x428d; 
0x000c4012: or al, 0x29; ret; 
0x0009e088: or al, 0x2b; dec ebp; add byte ptr [ecx], ch; ret 0xd801; 
0x00120982: or al, 0x30; ror byte ptr [ecx], 0xc8; ret; 
0x0007191a: or al, 0x31; call dword ptr [esi - 0x18]; 
0x00133898: or al, 0x31; fisttp dword ptr [ecx + 0xbab8e1]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00026876: or al, 0x31; fisttp dword ptr [ecx - 0x76bfdbbc]; ret 0xb60f; 
0x000237ba: or al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x0008e9c3: or al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0008c026: or al, 0x31; rol byte ptr [eax + 0xf00197d], cl; xchg ebp, eax; ret 0xe2c1; 
0x0008c77d: or al, 0x31; rol byte ptr [eax + 0xf00197f], cl; xchg ebp, eax; ret 0xe2c1; 
0x0007b05a: or al, 0x31; rol byte ptr [ebp - 0x3d6af040], cl; mov eax, edx; ret; 
0x000dd93d: or al, 0x31; rol byte ptr [ebp - 0xfbbf001], 0xb8; jb 0xdd948; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00075ef4: or al, 0x31; ror byte ptr [ecx + 0x4c4830b], 0x5b; pop esi; ret; 
0x0003d478: or al, 0x31; ror byte ptr [ecx - 0x6fef1436], 0x83; rol byte ptr [ecx], 0x39; ret; 
0x00192d75: or al, 0x39; fnstcw word ptr [eax]; jne 0x192d90; pop ebx; ret; 
0x000968b0: or al, 0x39; lds ecx, ptr [edi]; xchg dword ptr [edi - 0x76fffffd], esi; outsd dx, dword ptr [esi]; or byte ptr [eax - 0x76f7b875], dl; ret 0xf801; 
0x00188c60: or al, 0x39; ret 0x1d72; 
0x0012c1c1: or al, 0x39; ret 0x217e; 
0x00186aa0: or al, 0x39; ret 0x2972; 
0x0014684b: or al, 0x39; ret 0x307e; 
0x000d8f21: or al, 0x39; ret 0x470f; 
0x0009b0e1: or al, 0x39; ret 0x840f; 
0x00038ec5: or al, 0x39; ret; 
0x000975e2: or al, 0x39; ror byte ptr [ecx + 0xf6c244c], 1; inc edi; ret 0x5c89; 
0x001480b1: or al, 0x39; ror byte ptr [edi], 1; dec edi; ret 0x4189; 
0x000d7e97: or al, 0x3b; push 0x83b77d1c; ret 0x8301; 
0x00038c50: or al, 0x3c; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0013c87e: or al, 0x50; call 0x16ed20; mov dword ptr [esp], ebp; call esi; 
0x001a07ab: or al, 0x50; call 0x20140; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00083626: or al, 0x50; call edx; 
0x000da06c: or al, 0x50; mov dword ptr [esp + 0x1c], eax; call 0x16ed20; add esp, 0x10; mov eax, dword ptr [esp + 0xc]; call eax; 
0x0012ed8d: or al, 0x50; push dword ptr [ebp - 0x4c]; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x0012dc3e: or al, 0x50; push dword ptr [esp + 8]; push 0x2000003; call dword ptr [ebp + 0x14]; 
0x0012d9f7: or al, 0x50; push edi; push 0x2000006; call dword ptr [esi + 0x14]; 
0x0012f50f: or al, 0x50; push esi; push edx; call dword ptr [ebx + 0x14]; 
0x00022979: or al, 0x51; call 0x16ed20; mov dword ptr [esp], ebx; mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x00023009: or al, 0x51; call 0x16ed20; mov dword ptr [esp], ebx; mov ecx, dword ptr [ebp - 0x40]; call ecx; 
0x00087d9a: or al, 0x52; call 0x836d0; add esp, 0x10; xor eax, eax; add esp, 0xc; ret; 
0x0002160e: or al, 0x52; mov dword ptr [esp + 0xc], edx; push esi; push dword ptr [esp + 0x40]; call eax; 
0x00166299: or al, 0x52; push ebx; call dword ptr [eax + 0x20]; 
0x001662ee: or al, 0x52; push ebx; call dword ptr [eax + 0x24]; 
0x0016595e: or al, 0x52; push ebx; call dword ptr [eax + 4]; 
0x00165909: or al, 0x52; push ebx; call dword ptr [eax]; 
0x000d72d8: or al, 0x52; push ebx; call eax; 
0x00165cb9: or al, 0x52; push ecx; call dword ptr [eax + 4]; 
0x0013cb82: or al, 0x53; call 0x16ed20; mov dword ptr [esp], ebp; call ebx; 
0x0002b874: or al, 0x53; call 0x16ed20; mov dword ptr [esp], esi; call ebx; 
0x001596b5: or al, 0x53; call dword ptr [eax + 0x10]; 
0x00173131: or al, 0x53; call dword ptr [ebp + 0x3c]; 
0x0007df87: or al, 0x53; call dword ptr [edi + 0x44]; 
0x00075bbb: or al, 0x53; call dword ptr [esi + 0x10]; 
0x0007bfbe: or al, 0x53; call dword ptr [esi + 0x30]; 
0x0007dde5: or al, 0x53; call dword ptr [esi + 0x44]; 
0x001308bd: or al, 0x53; mov dword ptr [ebp - 0x44], eax; push 0; push 0x1000005; call edx; 
0x0013090d: or al, 0x53; mov dword ptr [ebp - 0x44], edx; push 0; push 0x1000007; call eax; 
0x00160dba: or al, 0x55; call dword ptr [eax + 0x10]; 
0x0015ac50: or al, 0x55; call dword ptr [esi]; 
0x00160dd1: or al, 0x55; call eax; 
0x0015fbb4: or al, 0x55; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x10]; 
0x001a0626: or al, 0x56; call 0x16ed20; add ebp, dword ptr [edi + 8]; mov dword ptr [esp], ebp; call esi; 
0x0013c9de: or al, 0x56; call 0x16ed20; mov dword ptr [esp], ebp; call esi; 
0x00022806: or al, 0x56; call 0x16ed20; mov dword ptr [esp], ebx; call esi; 
0x0002df4c: or al, 0x56; call 0x20140; add esp, 0x14; pop ebx; pop esi; ret; 
0x00158b54: or al, 0x56; call dword ptr [eax + 0x10]; 
0x0007ab9f: or al, 0x56; call dword ptr [eax + 0x30]; 
0x0007fd25: or al, 0x56; call dword ptr [ebp + 0x30]; 
0x00173f31: or al, 0x56; call dword ptr [ebp + 0x44]; 
0x00073a98: or al, 0x56; call dword ptr [ebx + 0x2c]; 
0x00071487: or al, 0x56; call dword ptr [ebx + 0x30]; 
0x00073b50: or al, 0x56; call dword ptr [ebx + 0x34]; 
0x0007f980: or al, 0x56; call dword ptr [edi + 0x34]; 
0x00174076: or al, 0x56; call dword ptr [edi + 0x44]; 
0x0002df11: or al, 0x56; call eax; 
0x00123728: or al, 0x56; call edx; 
0x00123728: or al, 0x56; call edx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x001309a5: or al, 0x56; mov dword ptr [ebp - 0x44], eax; push 0; push 0x1000006; call edx; 
0x00130857: or al, 0x56; mov dword ptr [ebp - 0x44], eax; push dword ptr [ebp - 0xbc]; push 0; call edx; 
0x00130f68: or al, 0x56; mov dword ptr [ebp - 0x44], eax; push edi; push dword ptr [ebp - 0xc0]; call edx; 
0x00130dd5: or al, 0x56; mov dword ptr [ebp - 0x44], edx; push edi; push ebx; call eax; 
0x0015f872: or al, 0x56; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x00159b5a: or al, 0x56; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x001434ab: or al, 0x56; mov edx, dword ptr [esp + 0x20]; call edx; 
0x00021676: or al, 0x56; push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x00021613: or al, 0x56; push dword ptr [esp + 0x40]; call eax; 
0x000658dd: or al, 0x56; push eax; push ebp; mov eax, dword ptr [esp + 0x1c]; call dword ptr [eax + 0x1c]; 
0x001312ff: or al, 0x56; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00159b08: or al, 0x57; call 0x10aec0; mov eax, dword ptr [ebp + 0x20]; mov dword ptr [esp], ebp; call dword ptr [eax + 0x10]; 
0x000da1dd: or al, 0x57; call 0x16ed20; add esp, 0x10; mov eax, edi; call eax; 
0x00023739: or al, 0x57; call 0x16ed20; mov dword ptr [esp], ebx; call edi; 
0x0015ac81: or al, 0x57; call dword ptr [eax + 0x10]; 
0x0015ac3e: or al, 0x57; call dword ptr [eax + 8]; 
0x00159e4f: or al, 0x57; call eax; 
0x0007c688: or al, 0x57; push ebx; call dword ptr [esi + 0x3c]; 
0x00081985: or al, 0x5b; mov eax, dword ptr [edx + 0x18]; pop esi; jmp eax; 
0x000ff8ea: or al, 0x5b; mov eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x0009bea8: or al, 0x5b; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x0012bdc9: or al, 0x5b; pop esi; mov eax, ecx; pop edi; pop ebp; ret; 
0x00075c53: or al, 0x5b; pop esi; pop edi; pop ebp; jmp eax; 
0x0009ad82: or al, 0x5b; pop esi; pop edi; pop ebp; ret 4; 
0x0002f638: or al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x0009129c: or al, 0x5b; pop esi; pop edi; ret; 
0x000b3185: or al, 0x5b; pop esi; ret; 
0x000dd689: or al, 0x5b; ret; 
0x000a9f30: or al, 0x5f; pop ebx; ret; 
0x000ad860: or al, 0x5f; pop esi; pop ebx; ret; 
0x000a8234: or al, 0x5f; ret; 
0x0013a320: or al, 0x63; out dx, eax; inc dword ptr [ebx - 0x72aff33c]; xchg dword ptr [eax + 0x57], edi; stc; call dword ptr [eax + 0x6a]; 
0x00122fec: or al, 0x65; call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x123000; pop ebx; ret; 
0x0012303c: or al, 0x65; call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x123050; pop ebx; ret; 
0x0012308c: or al, 0x65; call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x1230a0; pop ebx; ret; 
0x0008329a: or al, 0x65; call dword ptr [0x10]; pop ebx; pop esi; ret; 
0x0008282e: or al, 0x65; mov dword ptr [0x7c], eax; ret; 
0x000895fd: or al, 0x65; mov edx, dword ptr [0x68]; mov dword ptr [eax + 8], edx; xor edx, edx; mov eax, edx; ret; 
0x00151308: or al, 0x65; sub eax, dword ptr [0x14]; jne 0x151316; add esp, 0x1c; ret; 
0x00163e35: or al, 0x65; sub eax, dword ptr [0x14]; jne 0x163e43; add esp, 0x1c; ret; 
0x00163e84: or al, 0x65; sub eax, dword ptr [0x14]; jne 0x163ebc; add esp, 0x1c; ret; 
0x00036614: or al, 0x65; sub eax, dword ptr [0x14]; jne 0x36626; mov eax, edx; add esp, 0x1c; ret 4; 
0x0003726a: or al, 0x65; sub eax, dword ptr [0x14]; jne 0x37279; add esp, 0x18; pop ebx; ret; 
0x0003b6ea: or al, 0x65; sub eax, dword ptr [0x14]; jne 0x3b6f8; add esp, 0x1c; ret; 
0x0003b73d: or al, 0x65; sub eax, dword ptr [0x14]; jne 0x3b74b; add esp, 0x1c; ret; 
0x00021dcb: or al, 0x65; sub ecx, dword ptr [0x14]; jne 0x21dd9; add esp, 0x1c; ret; 
0x0010505d: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x105077; add esp, 0x1c; ret; 
0x001165f4: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x116609; add esp, 0x1c; ret; 
0x00118371: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x11837f; add esp, 0x1c; ret; 
0x001195eb: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x1195f9; add esp, 0x1c; ret; 
0x0011d395: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x11d3a3; add esp, 0x1c; ret; 
0x001245e1: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x124609; add esp, 0x18; pop ebx; ret; 
0x00124661: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x124689; add esp, 0x18; pop ebx; ret; 
0x001248ec: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x124919; add esp, 0x18; pop ebx; ret; 
0x0012503c: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x125069; add esp, 0x18; pop ebx; ret; 
0x001250c1: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x1250e9; add esp, 0x18; pop ebx; ret; 
0x001252b5: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x1252c3; add esp, 0x1c; ret; 
0x001454ab: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x1454cd; add esp, 0x18; pop ebx; ret; 
0x00145507: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x145515; add esp, 0x1c; ret; 
0x00145553: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x145561; add esp, 0x1c; ret; 
0x00147371: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x1473bc; add esp, 0x1c; ret; 
0x0015ef9b: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x15f018; add esp, 0x18; pop ebx; ret; 
0x00162250: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x162267; add esp, 0x1c; ret; 
0x0016276c: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x16277a; add esp, 0x1c; ret; 
0x001627e3: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x1627ff; add esp, 0x18; pop ebx; ret; 
0x0016574f: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x1657b9; add esp, 0x18; pop ebx; ret; 
0x0016583f: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x1658a9; add esp, 0x18; pop ebx; ret; 
0x00165ae6: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x165b3b; add esp, 0x18; pop ebx; ret; 
0x00165b76: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x165bcb; add esp, 0x18; pop ebx; ret; 
0x00165c35: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x165c5b; add esp, 0x18; pop ebx; ret; 
0x00165c9a: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x165cfb; add esp, 0x18; pop ebx; ret; 
0x00165d36: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x165d99; add esp, 0x18; pop ebx; ret; 
0x00166556: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x1665ab; add esp, 0x18; pop ebx; ret; 
0x001665e6: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x16663b; add esp, 0x18; pop ebx; ret; 
0x00166676: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x1666cb; add esp, 0x18; pop ebx; ret; 
0x00166706: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x16675b; add esp, 0x18; pop ebx; ret; 
0x00166dbe: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x166dcf; movzx eax, al; add esp, 0x1c; ret; 
0x00166e1e: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x166e2f; movzx eax, al; add esp, 0x1c; ret; 
0x00166e87: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x166e96; add esp, 0x18; pop ebx; ret; 
0x00166ee7: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x166ef6; add esp, 0x18; pop ebx; ret; 
0x0016b9e3: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x16ba1c; add esp, 0x18; pop ebx; ret; 
0x0016d1ff: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x16d219; add esp, 0x18; pop ebx; ret; 
0x0016d277: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x16d299; add esp, 0x18; pop ebx; ret; 
0x00171a1e: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x171a2d; add esp, 0x18; pop ebx; ret; 
0x001745c5: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x1745d3; add esp, 0x1c; ret; 
0x0017a181: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x17a1a9; add esp, 0x18; pop ebx; ret; 
0x0003b169: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x3b1ac; add esp, 0x18; pop ebx; ret; 
0x0003b79a: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x3b7a8; add esp, 0x1c; ret; 
0x0003b7ed: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x3b7fb; add esp, 0x1c; ret; 
0x0003b83a: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x3b848; add esp, 0x1c; ret; 
0x0003b88d: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x3b89b; add esp, 0x1c; ret; 
0x00058944: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x5895f; add esp, 0x1c; ret; 
0x0009054b: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x90577; add esp, 0x18; pop ebx; ret; 
0x000c41ba: or al, 0x65; sub edx, dword ptr [0x14]; jne 0xc41ec; add esp, 0x18; pop ebx; ret; 
0x000cad8a: or al, 0x65; sub edx, dword ptr [0x14]; jne 0xcad98; add esp, 0x1c; ret; 
0x000d482e: or al, 0x65; sub edx, dword ptr [0x14]; jne 0xd483c; add esp, 0x1c; ret; 
0x000d6ebe: or al, 0x65; sub edx, dword ptr [0x14]; jne 0xd6ecc; add esp, 0x1c; ret; 
0x0016bc82: or al, 0x68; add byte ptr [ecx], 0; add al, ch; ret; 
0x0012cda6: or al, 0x68; add dword ptr [eax], eax; add byte ptr [edx], al; mov eax, dword ptr [esp + 0x20]; call dword ptr [eax + 0x14]; 
0x00083d7e: or al, 0x6a; add al, ch; ljmp 0x1cc4:0x83fffff5; ret; 
0x000ce301: or al, 0x6a; add byte ptr [ebp - 0x5397008b], cl; ret 0xf0; 
0x0009a262: or al, 0x6a; add eax, 0x43a2838d; stc; call dword ptr [eax - 0x73]; 
0x0007e665: or al, 0x6a; add ebp, dword ptr [edx + 1]; push 0; push 0; push ebx; call dword ptr [ebp + 0x24]; 
0x00173e2f: or al, 0x6a; add ebp, dword ptr [edx + 1]; push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x00173d25: or al, 0x6a; add ebp, dword ptr [edx + 2]; push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x000fed79: or al, 0x6a; and byte ptr [ebx - 0x6e363], cl; call dword ptr [edx - 0x77]; 
0x000247cc: or al, 0x6f; stc; call dword ptr [eax - 0x73]; 
0x0013fa53: or al, 0x74; push -0x73; dec edx; jmp dword ptr [ecx]; 
0x0008fe80: or al, 0x75; sub al, 0xb8; add eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 0xc; ret; 
0x0008fef2: or al, 0x75; sub bh, byte ptr [eax + 3]; add esp, 0xc; ret; 
0x000900b4: or al, 0x75; sub byte ptr [eax + 3], bh; add esp, 0xc; ret; 
0x0009043a: or al, 0x75; xor bh, byte ptr [eax + 3]; add esp, 0xc; ret; 
0x00146d6e: or al, 0x7f; ret; 
0x000832c9: or al, 0x80; int1; and dword ptr [ebp - 1], 0x1015; add byte ptr [ebx + 0x5e], bl; ret; 
0x0014d50d: or al, 0x81; ret; 
0x00068d8e: or al, 0x82; add ecx, ebp; jmp ecx; 
0x001574e0: or al, 0x82; inc dword ptr [ebx - 0x77cef3c]; dec dword ptr [edi]; xchg esp, eax; ret 0xe1e9; 
0x000e9a59: or al, 0x82; mov eax, 1; add esp, 4; pop ebx; pop esi; ret; 
0x00045673: or al, 0x83; clc; dec dword ptr [edi]; inc esp; ret 0x4489; 
0x0007860d: or al, 0x83; in al, dx; add al, 0x29; ret 0xfac1; 
0x0007d884: or al, 0x83; in al, dx; add al, 0x50; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x00038e33: or al, 0x83; in al, dx; add al, 0x55; push ebx; push esi; call edi; 
0x00038e0f: or al, 0x83; in al, dx; add al, 0x55; push esi; push dword ptr [esp + 0x1c]; call edi; 
0x00174073: or al, 0x83; in al, dx; or al, 0x56; call dword ptr [edi + 0x44]; 
0x00157690: or al, 0x83; in al, dx; or al, 0xff; je 0x1576bb; and al, 0xe8; ret; 
0x0015cba0: or al, 0x83; in al, dx; or byte ptr [ebp - 0x69d3d7d], cl; call dword ptr [eax - 1]; 
0x00165e93: or al, 0x83; in al, dx; or byte ptr [ebx + 0x56530446], cl; call dword ptr [eax + 4]; 
0x0007a5eb: or al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0015b2d5: or al, 0x83; les eax, ptr [ecx + eax]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0016e952: or al, 0x83; les ebp, ptr [eax]; pop ebx; ret; 
0x00051cb7: or al, 0x83; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000513d7: or al, 0x83; les ebx, ptr [eax]; mov eax, edx; pop ebx; ret 4; 
0x0008236b: or al, 0x83; les ebx, ptr [eax]; pop ebx; ret; 
0x000262db: or al, 0x83; les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x00034094: or al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0003768b: or al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0007e18c: or al, 0x83; les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x00075c50: or al, 0x83; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; jmp eax; 
0x00075d83: or al, 0x83; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000267b8: or al, 0x83; les edi, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x00036ec0: or al, 0x83; les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret 4; 
0x00051d27: or al, 0x83; les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x001585a3: or al, 0x83; les edx, ptr [eax]; add esp, 0xc; ret; 
0x0003bc91: or al, 0x83; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x00037a36: or al, 0x83; les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x0003ac19: or al, 0x83; les esi, ptr [ebx + ebx*2]; pop esi; ret 4; 
0x0009e102: or al, 0x83; mov dword ptr [esi + edx*2], 0x17564e8; add byte ptr [ecx - 0x3b7c0389], cl; adc byte ptr [ecx], ch; ret; 
0x000b37d3: or al, 0x83; out dx, eax; adc byte ptr [ecx], al; clc; pop edi; ret; 
0x0015e7b6: or al, 0x83; ret 0x5208; 
0x000b5c3a: or al, 0x83; ret 0x8310; 
0x00094bc5: or al, 0x83; ret 0x8901; 
0x000fac9e: or al, 0x83; ret 0x8902; 
0x000f012b: or al, 0x83; ret 0x8904; 
0x00032a99: or al, 0x83; ret 0x8908; 
0x00094d95: or al, 0x83; ret 0x8b01; 
0x00033c42: or al, 0x83; ret; 
0x0013fc4f: or al, 0x83; ror byte ptr [esi], 0x85; sal byte ptr [ebx + 0x39], cl; ret 0x4572; 
0x0009097d: or al, 0x83; stc; call dword ptr [eax - 0x18]; 
0x0006b6a0: or al, 0x84; ror byte ptr [edi], cl; mov byte ptr [ebx + ebx], ah; add dh, dh; ret 0xf40; 
0x001236f8: or al, 0x85; ror byte ptr [edi], cl; test bh, cl; fucompi st(7); call dword ptr [ebx + 0x56]; 
0x001197ba: or al, 0x85; sal byte ptr [ebp - 0x41], 0x83; in al, dx; or byte ptr [ebp - 0x6b3e06a], cl; call dword ptr [edx - 0x77]; 
0x001197d9: or al, 0x85; sal byte ptr [ebp - 0x60], 0x83; in al, dx; or byte ptr [ebp - 0x6b5156a], cl; call dword ptr [edx - 0x77]; 
0x00091219: or al, 0x85; sal byte ptr [ebp - 0xe], 0x5b; ret; 
0x0011e25f: or al, 0x85; sal byte ptr [esp + eax - 0x7b], 0xd2; jne 0x11e270; ret; 
0x00094e00: or al, 0x87; stc; call dword ptr [eax - 1]; 
0x0003aba0: or al, 0x89; add dword ptr [ecx + 0x45189c8], ecx; ret 4; 
0x0007a55b: or al, 0x89; call 0x5d6703bd; ret; 
0x0007a596: or al, 0x89; call 0x5d6703f8; ret; 
0x00084572: or al, 0x89; call 0x5d67a3d4; ret; 
0x000d80de: or al, 0x89; call 0x5d6cdf40; ret; 
0x000ff99b: or al, 0x89; call 0x5d6f57fd; ret; 
0x0011dbdd: or al, 0x89; call 0x5d713a3f; ret; 
0x0011e389: or al, 0x89; call 0x5d7141eb; ret; 
0x00131dcd: or al, 0x89; call 0x5d727c2f; ret; 
0x0013fa9f: or al, 0x89; call 0x5d735901; ret; 
0x00116371: or al, 0x89; clc; call dword ptr gs:[0x10]; 
0x000848d0: or al, 0x89; clc; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0007f383: or al, 0x89; dec eax; and al, 0x89; push eax; add al, 0x5b; ret; 
0x0007e687: or al, 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x000908c2: or al, 0x89; fiadd dword ptr [ebp - 0x76e58b40]; ret; 
0x00023f5e: or al, 0x89; inc ebp; fmul qword ptr [ebp - 0x2078df7d]; call dword ptr [eax - 0x73]; 
0x000372e3: or al, 0x89; inc ebx; sbb byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x00080c04: or al, 0x89; inc esi; add al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0010a9d1: or al, 0x89; inc esp; and al, 0x28; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000de82a: or al, 0x89; inc esp; and al, 8; call edx; 
0x00088a96: or al, 0x89; int1; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0005b83c: or al, 0x89; lea ecx, [edx + edi*8 - 1]; call dword ptr [ecx - 0x18]; 
0x0005c386: or al, 0x89; lea edx, [edx + edi*8 - 1]; call dword ptr [edi - 0x18]; 
0x0015b0f3: or al, 0x89; pop edx; sub al, 0x89; dec edx; xor al, 0x5b; ret; 
0x00091299: or al, 0x89; push eax; or al, 0x5b; pop esi; pop edi; ret; 
0x000dd686: or al, 0x89; push ebx; or al, 0x5b; ret; 
0x0012c7fd: or al, 0x89; push ebx; or al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0013022c: or al, 0x89; push esi; sbb al, 1; ret 0x448b; 
0x0008fbaf: or al, 0x89; push esp; and al, 0x10; push dword ptr [eax + 4]; call dword ptr [eax]; 
0x0016647e: or al, 0x89; push esp; and al, 8; pop ebx; mov eax, dword ptr [eax + 0x20]; jmp eax; 
0x00166496: or al, 0x89; push esp; and al, 8; pop ebx; mov eax, dword ptr [eax + 0x24]; jmp eax; 
0x0015afe6: or al, 0x89; push esp; and al, 8; pop ebx; mov eax, dword ptr [eax + 4]; jmp eax; 
0x0015afce: or al, 0x89; push esp; and al, 8; pop ebx; mov eax, dword ptr [eax]; jmp eax; 
0x000846ee: or al, 0x89; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x001288fb: or al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000fb8af: or al, 0x89; ret 0x4089; 
0x0010f89e: or al, 0x89; ret 0x408d; 
0x0012494c: or al, 0x89; ret 0x448b; 
0x000d0d3b: or al, 0x89; ret 0x44f6; 
0x00077e2b: or al, 0x89; ret 0x48d; 
0x00119025: or al, 0x89; ret 0x7c8d; 
0x0005f2ce: or al, 0x89; ret 0x8489; 
0x0005f1a9: or al, 0x89; ret 0x8589; 
0x00080b53: or al, 0x89; ret 0x8b; 
0x0009bb1a: or al, 0x89; ret 0xa165; 
0x0019e16a: or al, 0x89; ret 0xb70f; 
0x0008c53f: or al, 0x89; ret 0xca81; 
0x0008f082: or al, 0x89; ret 0xca83; 
0x0008921c: or al, 0x89; ret 0xe281; 
0x000f01e2: or al, 0x89; ret 0xe989; 
0x00035e0b: or al, 0x89; ret 0xff25; 
0x0002e858: or al, 0x89; ret; 
0x0008c272: or al, 0x89; sal dh, 1; ret 0x7501; 
0x00053644: or al, 0x89; sal esi, 1; ret 0xf40; 
0x0002ea80: or al, 0x89; test dword ptr [esi + edi*8 - 1], eax; call dword ptr [ebx - 0x75]; 
0x00104c62: or al, 0x89; xchg dword ptr [eax + 0x6a000000], esp; jg 0x104c54; jo 0x104c05; std; call dword ptr [ecx + 0x6a]; 
0x000e2be1: or al, 0x89; xchg ebp, eax; cmp bl, 0xff; call dword ptr [ebx - 0x18]; 
0x00107251: or al, 0x89; xchg ebp, eax; cmp bl, 0xff; call dword ptr [ebx - 0x18]; ret 0xf7b4; 
0x00067d8c: or al, 0x89; xchg ebp, eax; xchg esp, eax; idiv edi; call dword ptr [esi - 0x18]; 
0x0008ea3b: or al, 0x8b; adc cl, byte ptr [ebx + 0x104a3908]; je 0x8ea50; ret; 
0x00126c3b: or al, 0x8b; adc cl, byte ptr [ecx + 0x1b810]; add byte ptr [eax], al; ret; 
0x0009a3c1: or al, 0x8b; adc eax, dword ptr [ecx]; ret 0x1089; 
0x00083e57: or al, 0x8b; add bh, byte ptr [edx + 0x16]; test eax, eax; cmovne eax, edx; ret; 
0x0014cba5: or al, 0x8b; add byte ptr [ecx], bh; ret 0x5473; 
0x001658ca: or al, 0x8b; add eax, dword ptr [ebp + 0x317774c0]; rol byte ptr [ebx - 0x6bf0fd08], cl; ret 0xf883; 
0x00158c9e: or al, 0x8b; dec eax; add al, 0x50; call dword ptr [ecx + 0x10]; 
0x00162106: or al, 0x8b; dec edx; add al, 0x52; call dword ptr [ecx + 0x10]; 
0x001312fc: or al, 0x8b; inc eax; or al, 0x56; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000f0ef8: or al, 0x8b; inc eax; or byte ptr [ebx - 0x76e3db8c], cl; shr dword ptr [ecx], cl; ret; 
0x0016ab3d: or al, 0x8b; inc ebp; adc byte ptr [ecx - 0xeb43], cl; dec dword ptr [ecx - 0xf34b]; dec dword ptr [ecx - 0xe77b]; jmp dword ptr [ebp - 0x5f]; 
0x000eddd8: or al, 0x8b; inc ebp; add al, 0x85; ror byte ptr [edi], 0x84; ret 1; 
0x001613a1: or al, 0x8b; inc ebp; cmp al, 0x53; call dword ptr [eax + 0x10]; 
0x00022f81: or al, 0x8b; inc ebp; mov ah, 0x39; adc byte ptr [edi], cl; test byte ptr [ebx + 0x6b000001], ah; ret 0x8b3c; 
0x0016474b: or al, 0x8b; inc ebp; or al, 0x57; call dword ptr [eax + 0x10]; 
0x001590e5: or al, 0x8b; inc ebx; add al, 0x53; call dword ptr [eax + 0x10]; 
0x0015f235: or al, 0x8b; inc ebx; add al, 0x56; push ebx; call dword ptr [eax + 0x24]; 
0x000c4622: or al, 0x8b; inc ecx; or byte ptr [ebx + 0x418901c0], al; or byte ptr [edi], cl; nop; ret 0x4e8b; 
0x00162e3f: or al, 0x8b; inc edi; add al, 0x57; call dword ptr [eax + 0x10]; 
0x0015ac37: or al, 0x8b; inc edi; or byte ptr [ebp - 1], dl; jbe 0x15ac4b; push edi; call dword ptr [eax + 8]; 
0x001593ad: or al, 0x8b; inc edx; add al, 0x52; call dword ptr [eax + 0x10]; 
0x00035e29: or al, 0x8b; inc esp; and al, 0x10; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0012d02e: or al, 0x8b; inc esp; and al, 0x14; add eax, 0x2000001; push eax; call dword ptr [edi + 0x14]; 
0x00142eac: or al, 0x8b; inc esp; and al, 0x20; call eax; 
0x00104fd1: or al, 0x8b; inc esp; and al, 4; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x000842fa: or al, 0x8b; inc esp; and al, 8; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x00147191: or al, 0x8b; je 0x1471b9; adc al, 0x8d; xchg byte ptr [edx + 0x5e], bh; stc; call dword ptr [eax - 0x18]; 
0x000d996c: or al, 0x8b; jge 0xd9944; mov eax, dword ptr [ebp - 0x30]; push esi; call eax; 
0x000d9bac: or al, 0x8b; jge 0xd9b84; mov eax, dword ptr [ebp - 0x30]; push esi; call eax; 
0x00122409: or al, 0x8b; pop esp; and al, 0x50; call dword ptr gs:[0x10]; 
0x0010b256: or al, 0x8b; pop esp; and al, 0xc; mov eax, 0xb7; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00058a18: or al, 0x8b; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x00123f2c: or al, 0x8b; pop esp; and al, 8; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00123b2c: or al, 0x8b; pop esp; and al, 8; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x00109bcc: or al, 0x8b; pop esp; and al, 8; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x0010c29c: or al, 0x8b; pop esp; and al, 8; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x0010c1dc: or al, 0x8b; pop esp; and al, 8; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x0010afec: or al, 0x8b; pop esp; and al, 8; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x001152fc: or al, 0x8b; pop esp; and al, 8; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x0010c20c: or al, 0x8b; pop esp; and al, 8; mov eax, 0x55; call dword ptr gs:[0x10]; 
0x0011702c: or al, 0x8b; pop esp; and al, 8; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x00120fcc: or al, 0x8b; pop esp; and al, 8; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x00123bdc: or al, 0x8b; pop esp; and al, 8; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x001238dc: or al, 0x8b; pop esp; and al, 8; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x0011c52c: or al, 0x8b; pop esp; and al, 8; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x001239cc: or al, 0x8b; pop esp; and al, 8; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x001239fc: or al, 0x8b; pop esp; and al, 8; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x000fafec: or al, 0x8b; pop esp; and al, 8; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x00123c4c: or al, 0x8b; pop esp; and al, 8; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000de87c: or al, 0x8b; pop esp; and al, 8; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x0010bbec: or al, 0x8b; pop esp; and al, 8; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x0010bbbc: or al, 0x8b; pop esp; and al, 8; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000df6bc: or al, 0x8b; pop esp; and al, 8; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000df6ec: or al, 0x8b; pop esp; and al, 8; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x0010bb8c: or al, 0x8b; pop esp; and al, 8; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x0011c65c: or al, 0x8b; pop esp; and al, 8; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x0011c62c: or al, 0x8b; pop esp; and al, 8; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x0011f3fc: or al, 0x8b; pop esp; and al, 8; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x0011f45c: or al, 0x8b; pop esp; and al, 8; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x0011f32c: or al, 0x8b; pop esp; and al, 8; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x00158e4b: or al, 0x8b; push eax; add al, 0x50; call dword ptr [edx + 0x10]; 
0x0011ded3: or al, 0x8b; push eax; add al, 0xf6; ret 0xf01; 
0x001254f8: or al, 0x8b; push esp; and al, 0x10; mov dword ptr [esp + 0x18], eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x001254aa: or al, 0x8b; push esp; and al, 0x10; mov dword ptr [esp + 0x18], eax; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x00125441: or al, 0x8b; push esp; and al, 0x10; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x0008d77c: or al, 0x8b; push esp; and al, 0x10; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x0011746a: or al, 0x8b; push esp; and al, 0x38; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x0011763a: or al, 0x8b; push esp; and al, 0x38; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x001511f1: or al, 0x8b; sub dword ptr [edx - 0x373f0000], 9; xor eax, dword ptr gs:[0x18]; push eax; call edx; 
0x0015a763: or al, 0x8b; test byte ptr [ebx - 0x264], cl; mov dword ptr [esp + 0x10], edx; pop ebx; pop esi; jmp eax; 
0x00105e28: or al, 0x8b; test dword ptr [esi + edi*8 - 1], edx; call dword ptr [edi - 1]; 
0x000e1798: or al, 0x8b; test dword ptr [esi + edi*8 - 1], esp; call dword ptr [edi - 1]; 
0x000e23db: or al, 0x8b; xchg ebp, eax; cmp bl, 0xff; call dword ptr [edi - 1]; 
0x0007199c: or al, 0x8b; xchg edx, eax; cwde; add byte ptr [eax], al; add byte ptr [ecx + 0x5b082454], cl; jmp eax; 
0x000667f6: or al, 0x8d; adc ah, 0x78; stc; call dword ptr [eax - 0x18]; 
0x0014f3c9: or al, 0x8d; add ah, 0xad; stc; call dword ptr [eax - 0x18]; 
0x00095221: or al, 0x8d; add dword ptr [eax - 0x5d], -0x1a; call dword ptr [eax + 0x56]; 
0x00156a4b: or al, 0x8d; add esp, 0x62; stc; call dword ptr [eax - 0x18]; 
0x0009527b: or al, 0x8d; and dword ptr [eax - 0x5b], 0xffffffe6; call dword ptr [eax + 0x56]; 
0x00095233: or al, 0x8d; and dword ptr [eax - 0x5d], 0xffffffe6; call dword ptr [eax + 0x56]; 
0x000895b5: or al, 0x8d; and dword ptr [eax - 0xb], 0xffffffe5; call dword ptr [eax + 0x56]; 
0x0010cc07: or al, 0x8d; and dword ptr [edi + 0x4a], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00168fea: or al, 0x8d; and dword ptr [esi + 0x5f], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00086be2: or al, 0x8d; cmp ah, 0x7e; stc; call dword ptr [eax - 0x18]; 
0x00068593: or al, 0x8d; cmp al, 0x78; stc; call dword ptr [eax - 0x18]; 
0x000317a4: or al, 0x8d; cmp byte ptr [esi], 0x2f; stc; call dword ptr [eax - 0x18]; 
0x0007be0f: or al, 0x8d; cmp dword ptr [esi + edi*2], -7; call dword ptr [eax - 0x18]; 
0x0010d26f: or al, 0x8d; cmp dword ptr [esi], 0x45; stc; call dword ptr [eax - 0x18]; 
0x00158fd5: or al, 0x8d; cmp edi, 0x62; stc; call dword ptr [eax - 0x18]; 
0x00109d32: or al, 0x8d; cmp esp, -0x62; stc; call dword ptr [eax - 0x18]; 
0x00163372: or al, 0x8d; dec edx; add dword ptr [ecx - 0x46f076fd], ecx; ret; 
0x000a5902: or al, 0x8d; dec edx; or al, 0xf; test esp, eax; add eax, 0x5b5f0000; ret; 
0x00150da2: or al, 0x8d; inc ebx; add al, 0x50; call edi; 
0x00150bfb: or al, 0x8d; je 0x150c25; add byte ptr [ebx + 0x1db8200b], al; add byte ptr [eax], al; add byte ptr [ebx - 0x1336a], cl; jmp dword ptr [ebp - 0x75]; 
0x0015df7b: or al, 0x8d; je 0x15dfa5; add byte ptr [ecx], ch; ret; 
0x000c2c82: or al, 0x8d; je 0xc2cac; add byte ptr [eax + 0x3901c083], dl; ret; 
0x000c2cca: or al, 0x8d; je 0xc2cf4; add byte ptr [eax + 0x3901c083], dl; ret; 
0x000dfdb3: or al, 0x8d; je 0xdfddd; add byte ptr [eax + 0x40], bh; ret; 
0x00147989: or al, 0x8d; mov bl, 0xce; pop esi; stc; call dword ptr [esi - 0x18]; 
0x001479b5: or al, 0x8d; mov bl, 0xdb; pop esi; stc; call dword ptr [esi - 0x18]; 
0x001479e1: or al, 0x8d; mov bl, 0xea; pop esi; stc; call dword ptr [esi - 0x18]; 
0x00065c5e: or al, 0x8d; nop; cmp byte ptr [ecx - 7], bh; call dword ptr [edx - 0x73]; 
0x0014c86e: or al, 0x8d; nop; mov ah, 0xac; stc; call dword ptr [edx - 0x73]; 
0x001037cf: or al, 0x8d; or byte ptr [ebp + 0x4a], 0xf9; call dword ptr [eax - 0x18]; 
0x00102f9a: or al, 0x8d; or byte ptr [edx + 0x4a], 0xf9; call dword ptr [eax - 0x18]; 
0x00159c72: or al, 0x8d; or dword ptr [ebp + 0x63], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000e60d2: or al, 0x8d; or dword ptr [esi], 0x48; stc; call dword ptr [eax - 0x18]; 
0x000cf412: or al, 0x8d; pop edx; add dword ptr [ecx - 0xff6b], ecx; call dword ptr [ebx - 0x18]; 
0x001605ec: or al, 0x8d; push ebx; dec esp; push edx; call eax; 
0x0010bdc6: or al, 0x8d; push ecx; call dword ptr [edx + 0x53]; 
0x0009b8d7: or al, 0x8d; push esi; dec dword ptr [ebx + 0x3904244c]; ret; 
0x001662ea: or al, 0x8d; push esp; and al, 0xc; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x0016595a: or al, 0x8d; push esp; and al, 0xc; push edx; push ebx; call dword ptr [eax + 4]; 
0x0013dbdf: or al, 0x8d; sbb al, 0x43; stc; call dword ptr [eax - 1]; 
0x000cd566: or al, 0x8d; sbb dword ptr [esi], 0x45; stc; call dword ptr [eax - 0x18]; 
0x000cd566: or al, 0x8d; sbb dword ptr [esi], 0x45; stc; call dword ptr [eax - 0x18]; lodsd eax, dword ptr [esi]; ret; 
0x0010f378: or al, 0x8d; sub byte ptr [eax + 0x4a], 0xf9; call dword ptr [eax - 0x18]; 
0x000fe855: or al, 0x8d; test dword ptr [ecx + edi*8 - 1], ebx; call dword ptr [eax - 0x73]; 
0x000fde00: or al, 0x8d; test dword ptr [ecx + edi*8 - 1], ebx; call dword ptr [eax - 0x75]; 
0x000219df: or al, 0x8d; test esp, esi; insd dword ptr es:[edi], dx; stc; call dword ptr [eax - 0x18]; 
0x00147a05: or al, 0x8d; wait; add bl, byte ptr [edi - 7]; call dword ptr [ebx - 0x18]; 
0x000218eb: or al, 0x8d; xchg ah, dh; insd dword ptr es:[edi], dx; stc; call dword ptr [eax - 0x18]; 
0x00084d8e: or al, 0x8d; xchg al, al; jle 0x84d8d; call dword ptr [eax - 0x18]; 
0x0013b112: or al, 0x8d; xchg bh, ah; pop ebx; stc; call dword ptr [eax - 0x18]; 
0x00147719: or al, 0x8d; xchg byte ptr [eax - 0x56], dl; stc; call dword ptr [eax - 0x73]; 
0x001152d4: or al, 0x8d; xchg byte ptr [eax - 7], al; call dword ptr [eax - 0x18]; 
0x0013b0f1: or al, 0x8d; xchg byte ptr [ebx], al; pop esp; stc; call dword ptr [eax - 0x18]; 
0x00088f25: or al, 0x8d; xchg byte ptr [ecx + eax*4 - 7], dl; call dword ptr [eax - 0x73]; 
0x00109fec: or al, 0x8d; xchg byte ptr [edi + ebx*4 - 7], ch; call dword ptr [eax - 0x18]; 
0x00056916: or al, 0x8d; xchg byte ptr [edi + esi*2], dl; stc; call dword ptr [eax - 0x73]; 
0x0013b015: or al, 0x8d; xchg byte ptr [edi], cl; pop esp; stc; call dword ptr [eax - 0x18]; 
0x0011c2f2: or al, 0x8d; xchg byte ptr [esi], bh; inc ebp; stc; call dword ptr [eax - 0x18]; 
0x0013ad32: or al, 0x8d; xchg ch, dh; pop ebx; stc; call dword ptr [eax - 0x18]; 
0x0015a164: or al, 0x8d; xchg dword ptr [eax + 0x6afffff9], edi; add byte ptr [eax - 0x73], dl; inc ebx; or al, 0x83; ret; 
0x001476a4: or al, 0x8d; xchg dword ptr [eax], ebx; stosb byte ptr es:[edi], al; stc; call dword ptr [eax - 0x73]; 
0x0014c692: or al, 0x8d; xchg dword ptr [ebx + ebp*4 - 7], ebx; call dword ptr [eax - 0x73]; 
0x00168836: or al, 0x8d; xchg dword ptr [esi + 0x5f], esp; stc; call dword ptr [eax - 0x18]; 
0x00091cdc: or al, 0x8d; xchg dword ptr [esp + eax*4], edx; stc; call dword ptr [eax - 0x73]; 
0x0014d7e8: or al, 0x8d; xor byte ptr [eax - 0x54], 0xf9; call dword ptr [eax + 0x68]; 
0x0014d694: or al, 0x8d; xor byte ptr [eax - 0x54], 0xf9; call dword ptr [eax - 0x73]; 
0x00151511: or al, 0x8d; xor byte ptr [esi + ebp*4], 0xf9; call dword ptr [eax - 0x73]; 
0x000e2718: or al, 0x8d; xor cl, 0x47; stc; call dword ptr [eax - 0x18]; 
0x000951eb: or al, 0x8d; xor dword ptr [eax - 0x5a], 0xffffffe6; call dword ptr [eax + 0x56]; 
0x00109e92: or al, 0x8d; xor dword ptr [edi + ebx*4], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000fc7a8: or al, 0x8d; xor eax, 0x13; in eax, dx; call dword ptr [eax + 0x6a]; 
0x001338f9: or al, 0x90; jmp edx; 
0x000374ed: or al, 0x90; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x00094846: or al, 0x94; stc; call dword ptr [edx - 0x73]; 
0x000bdaf5: or al, 0x97; stc; call dword ptr [eax - 0x73]; 
0x000c79e4: or al, 0x98; stc; call dword ptr [eax - 0x73]; 
0x000b3678: or al, 0x99; notrack jmp ecx; lea esi, [esi]; pop ebx; pop esi; ret; 
0x0013cc2e: or al, 0xa7; stc; call dword ptr [eax - 0x73]; 
0x001982e3: or al, 0xa8; add dword ptr [ebp + 0x18], esi; lea eax, [ecx + 4]; ret; 
0x00155256: or al, 0xaf; stc; call dword ptr [eax - 0x73]; 
0x001167cd: or al, 0xb4; jg 0x1167d0; inc dword ptr [ebx + 0x508930ca]; or byte ptr [edx + 0x100], bh; mov word ptr [eax + 0x16], dx; ret; 
0x00193fef: or al, 0xb8; add byte ptr [eax], al; add byte ptr [eax], al; jne 0x194000; pop ebx; ret; 
0x00161031: or al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x000ffd77: or al, 0xb8; add eax, 0x5b000000; pop esi; pop edi; pop ebp; ret; 
0x00105013: or al, 0xb8; fild dword ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011f3d5: or al, 0xb8; in eax, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00123a95: or al, 0xb8; inc dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00121f40: or al, 0xb8; js 0x121f45; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00122e8e: or al, 0xb8; lds eax, ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00122f4e: or al, 0xb8; les eax, ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010b25a: or al, 0xb8; mov bh, 0; add byte ptr [eax], al; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0010a34e: or al, 0xb8; mov word ptr [eax], es; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000d7094: or al, 0xb8; or al, byte ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000d77fe: or al, 0xb8; or eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011f435: or al, 0xb8; out 0, al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011f305: or al, 0xb8; out 0, eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00122dce: or al, 0xb8; ret; 
0x0010c245: or al, 0xb8; xor dword ptr [ecx], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00099a25: or al, 0xb9; retf 0x13; add byte ptr [ebx - 0x72d3db84], cl; xchg dword ptr [ebx + edx*4 - 7], ecx; dec dword ptr [ebp - 0x6bf3a69]; call dword ptr [eax - 0x73]; 
0x000982a4: or al, 0xb9; sub eax, 0x8b000013; je 0x982d1; sbb byte ptr [ebp - 0x66c7b7a], cl; dec dword ptr [ebp - 0x6bf3a6a]; call dword ptr [eax - 0x73]; 
0x0019c7a8: or al, 0xb; je 0x19c7d0; add al, 0xf; xchg esp, eax; ret; 
0x0012cc07: or al, 0xb; pop edx; or al, 0xf6; ret; 
0x0012d298: or al, 0xb; test byte ptr [ecx + edx*2 + 1], 0x40; cmovne eax, edx; pop ebx; ret; 
0x0002cc9e: or al, 0xba; mov edx, dword ptr [ebx + edi*4 - 0x3a0]; test edx, edx; je 0x2ccb5; mov dword ptr [esp + 0xc], eax; call edx; 
0x000ca3a6: or al, 0xc1; ljmp 0x29d2:0x31d0891f; ret; 
0x000583b4: or al, 0xc2; push eax; push dword ptr [esp + 0x1c]; call 0x109bf0; add esp, 0x1c; ret; 
0x00128a91: or al, 0xd3; ljmp 0x5bd0:0x8901e283; pop esi; ret; 
0x00036348: or al, 0xd9; add al, 0x24; mov dword ptr [edx], eax; add esp, 4; ret; 
0x00036387: or al, 0xd9; sbb al, 0x24; fld dword ptr [esp]; mov dword ptr [edx], eax; add esp, 4; ret; 
0x00035c1c: or al, 0xdb; insb byte ptr es:[edi], dx; and al, 4; ret; 
0x0003619e: or al, 0xdd; inc esp; and al, 4; mov dword ptr [eax], ecx; ret; 
0x00088639: or al, 0xe8; mov edx, 0x81000e97; ret; 
0x00048a39: or al, 0xe8; mov edx, 0x81001293; ret; 
0x000838fe: or al, 0xe8; mov esp, 0x390005b9; ret; 
0x00166f33: or al, 0xe8; pop ss; sub ecx, esi; inc dword ptr [ebx - 0x2f08e33c]; shr eax, 0x1f; ret; 
0x001337d3: or al, 0xe9; outsb dx, byte ptr [si]; hlt; jmp dword ptr [esi - 0x70]; 
0x00133773: or al, 0xe9; pop es; push -0xc; jmp dword ptr [esi - 0x70]; 
0x0014ed44: or al, 0xe9; ret 0xfffd; 
0x00133317: or al, 0xe9; ret; 
0x001920cf: or al, 0xe; sub eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x00191dcb: or al, 0xe; sub eax, ecx; pop esi; pop edi; ret; 
0x0004a9c1: or al, 0xeb; ret 0x748d; 
0x000fb952: or al, 0xeb; ret 0x768d; 
0x0016bdd1: or al, 0xeb; ret 0x838b; 
0x00152adb: or al, 0xeb; ret 0x9066; 
0x0012ab81: or al, 0xeb; ret; 
0x0014f4e9: or al, 0xed; jmp dword ptr [ebp - 0x5f]; 
0x0008c2f5: or al, 0xf6; ret 0x7502; 
0x0012e012: or al, 0xf6; ret 0x7504; 
0x00057233: or al, 0xf6; ret 0xf01; 
0x0006b67a: or al, 0xf6; ret 0xf08; 
0x00052798: or al, 0xf6; ret 0xf40; 
0x00055397: or al, 0xf6; ret; 
0x001978c4: or al, 0xf; and ch, 0; add byte ptr [eax], al; lea eax, [eax + 0xb]; pop edi; ret; 
0x00143015: or al, 0xf; dec esi; ret; 
0x00068e3e: or al, 0xf; mov dh, 0x44; or al, ah; mov ecx, dword ptr [edx + eax*4 - 0x737e0]; add ecx, ebp; jmp ecx; 
0x0006913e: or al, 0xf; mov dh, 0x44; or al, ah; mov ecx, dword ptr [edx + eax*4 - 0x73860]; add ecx, ebp; jmp ecx; 
0x0008fe98: or al, 0xf; mov dh, 0xc0; lea eax, [eax + eax + 2]; ret; 
0x000481aa: or al, 0xf; mov dh, 0xc0; ret; 
0x000408ad: or al, 0xf; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000c9b95: or al, 0xf; test dword ptr [ecx + eax], eax; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x000abce3: or al, 0xf; test dword ptr [esi], esi; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000ad376: or al, 0xf; test ebx, edx; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000a5905: or al, 0xf; test esp, eax; add eax, 0x5b5f0000; ret; 
0x0019c506: or al, 0xf; xchg ebp, eax; ret 0xc208; 
0x00196874: or al, 0xf; xor ch, 0; add byte ptr [eax], al; lea eax, [edi + 0xb]; pop edi; ret; 
0x00084799: or al, 0xfe; add esp, 8; pop ebx; ret; 
0x00084dde: or al, 0xff; jae 0x84de6; call dword ptr [ebx]; 
0x0008bf25: or al, 0xff; jae 0x8bf2d; call dword ptr [ebx]; 
0x00114c73: or al, 0xff; je 0x114c9b; sbb al, 0xe8; ret; 
0x0013a502: or al, 0xff; je 0x13a52a; sbb byte ptr [esi - 0x3f], ah; ret; 
0x0013c4ef: or al, 0xff; je 0x13c517; pop eax; push dword ptr [esp + 0x58]; push esi; call edi; 
0x00142ea8: or al, 0xff; je 0x142ed0; or al, 0x8b; inc esp; and al, 0x20; call eax; 
0x001431c7: or al, 0xff; je 0x1431ef; or al, 0x8b; inc esp; and al, 0x20; call eax; 
0x0014fb17: or al, 0xff; je 0x14fb3f; sub al, 0xe8; jmp ecx; 
0x00157693: or al, 0xff; je 0x1576bb; and al, 0xe8; ret; 
0x0003a694: or al, 0xff; je 0x3a6bc; sub al, ch; ret 0xfffe; 
0x00082518: or al, 0xff; je 0x82540; sub al, 0x52; push ecx; push esi; call eax; 
0x000914e4: or al, 0xff; je 0x9150c; sbb al, ch; ret 0xffa5; 
0x000da0ef: or al, 0xff; je 0xda117; pop eax; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x1c]; call edi; 
0x000da3d9: or al, 0xff; je 0xda401; and byte ptr [ebp + 0x50382444], cl; push dword ptr [esp + 0x24]; push dword ptr [esp + 0x30]; call ebx; 
0x000e87d4: or al, 0xff; je 0xe87fc; cmp al, 0xe8; ret 0x400; 
0x00020f49: or al, 0xff; jne 0x20f19; call dword ptr [ebp - 0x38]; 
0x0016aea6: or al, 1; add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x858b; 
0x0010942a: or al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00104f4a: or al, 1; add byte ptr [eax], al; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x00082966: or al, 1; add byte ptr [eax], al; ret; 
0x001470c7: or al, 1; add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x1470fd; add esp, 0x11c; ret; 
0x00104fd8: or al, 1; add byte ptr [eax], al; xor eax, eax; ret; 
0x00166c1b: or al, 1; jle 0x166c33; pop ebx; pop esi; pop edi; ret; 
0x0008e22e: or al, 1; pop ebx; pop esi; pop edi; ret; 
0x00166b5b: or al, 1; push eax; adc al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x000f52c9: or al, 1; ret 0xc083; 
0x00077c15: or al, 1; ret 0xc101; 
0x0002398a: or al, 1; ret 0xe852; 
0x0009ba47: or al, 1; ret; 
0x000b7370: or al, 3; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x00102d5c: or al, 3; add byte ptr [ebp - 0x6614f7a], cl; call dword ptr [eax - 0x73]; 
0x00093925: or al, 3; mov eax, 0xffffffff; pop ebx; ret; 
0x00026813: or al, 6; add byte ptr [eax], al; add cl, ch; ret; 
0x00192696: or al, 7; add byte ptr [eax], al; pop ebx; ret; 
0x00198fb5: or al, 9; ret; 
0x00133df5: or al, ah; add eax, dword ptr [eax]; add eax, 0xf6207; mov eax, dword ptr [eax - 0x114]; add eax, dword ptr gs:[0]; ret; 
0x00068e42: or al, ah; mov ecx, dword ptr [edx + eax*4 - 0x737e0]; add ecx, ebp; jmp ecx; 
0x00069142: or al, ah; mov ecx, dword ptr [edx + eax*4 - 0x73860]; add ecx, ebp; jmp ecx; 
0x000693db: or al, ah; mov ecx, dword ptr [edx + eax*4 - 0x738e0]; add ecx, ebp; jmp ecx; 
0x0006933b: or al, ah; mov ecx, dword ptr [edx + eax*4 - 0x739e0]; add ecx, ebp; jmp ecx; 
0x00068d8b: or al, ah; mov ecx, dword ptr [edx + eax*4]; add ecx, ebp; jmp ecx; 
0x00058387: or al, al; add dword ptr [eax], eax; add cl, ch; call dword ptr [edi]; 
0x000b4fcc: or al, al; je 0xb4fd4; mov byte ptr [ecx + edx + 3], ah; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000feb85: or al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [edx + 0x49], ch; stc; call dword ptr [eax - 0x18]; 
0x0003b942: or al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0010c26b: or al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0004ac92: or al, byte ptr [eax]; add byte ptr [eax], al; mov dword ptr [edx], ecx; ret; 
0x0015a302: or al, byte ptr [eax]; add byte ptr [eax], al; pop ebx; ret; 
0x000f2a1f: or al, byte ptr [eax]; add byte ptr [ebp - 0x76dd8b40], al; ret 0xe283; 
0x000d3b0c: or al, byte ptr [eax]; add byte ptr [ebx + 0x6a5204ec], al; and byte ptr [ebp - 0x77], dl; fucomp st(0); ret; 
0x00190f2e: or al, byte ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00049304: or al, byte ptr [eax]; add byte ptr [ebx - 0x72ebdbac], cl; je 0x49334; add byte ptr [eax - 0x7c40fb73], dl; ret; 
0x0011f8ef: or al, byte ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; dec esp; push ecx; stc; call dword ptr [eax + 0x57]; 
0x0011f90a: or al, byte ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; jb 0x11f965; stc; call dword ptr [eax + 0x57]; 
0x0011f8d4: or al, byte ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; push ss; push ecx; stc; call dword ptr [eax + 0x57]; 
0x000698a4: or al, byte ptr [eax]; add byte ptr [ebx - 0xaafb14], al; je 0x698d2; inc esp; push edi; call dword ptr [ebx + 0x1c]; 
0x000ad1ed: or al, byte ptr [eax]; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0008833e: or al, byte ptr [eax]; endbr32; call 0x171e01; add eax, 0x1a1cb7; mov eax, dword ptr [eax + 0x3a28]; ret; 
0x000865cc: or al, byte ptr [eax]; nop; endbr32; xor eax, eax; ret; 
0x0008e04a: or al, byte ptr [eax]; nop; nop; endbr32; xor eax, eax; ret; 
0x001160fb: or al, byte ptr [ebp - 0x74f78737]; inc edx; or byte ptr [0x100f], ah; ret; 
0x000900b1: or al, byte ptr [ebx + 0x28750cf8]; mov eax, 3; add esp, 0xc; ret; 
0x0008feef: or al, byte ptr [ebx + 0x2a750cf8]; mov eax, 3; add esp, 0xc; ret; 
0x00090437: or al, byte ptr [ebx + 0x32750cf8]; mov eax, 3; add esp, 0xc; ret; 
0x00075bd3: or al, byte ptr [ebx + 0x5e5b04c4]; ret; 
0x000fadeb: or al, byte ptr [ebx + 0x5e5b24c4]; ret; 
0x000bdbf2: or al, byte ptr [ebx - 0x3f7cff2f]; add al, 0x39; ret; 
0x0009ae67: or al, byte ptr [ebx - 0xf76eb3c]; pop ebx; pop esi; ret 4; 
0x00146ccb: or al, byte ptr [ecx + 0x110c4]; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x001469ec: or al, byte ptr [ecx + 0x810c4]; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00092db3: or al, byte ptr [ecx + 0x90c4]; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0012128b: or al, byte ptr [ecx + 0xe0c4]; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000a1af1: or al, byte ptr [ecx + ecx*8 + 0x1689f275]; pop ebx; pop esi; ret; 
0x000d7096: or al, byte ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00196c32: or al, byte ptr [ecx]; add byte ptr [eax], al; test al, 2; jne 0x196d30; mov eax, ecx; ret; 
0x0015a238: or al, ch; mov ebx, 0x8100017b; ret; 
0x00038338: or al, ch; mov ebx, 0x8100139a; ret; 
0x0009aee2: or al, ch; pop eax; or byte ptr [eax + eax], 0xe8; ret; 
0x00103e97: or al, ch; ret; 
0x00172e69: or al, dh; jmp dword ptr [ecx]; 
0x00172e69: or al, dh; jmp dword ptr [ecx]; ret 0xc483; 
0x0017cecc: or bh, ah; mov eax, edx; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x0017c86c: or bh, ah; mov eax, edx; pop ebx; ret; 
0x00164021: or bh, al; add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebp - 0xc5d7f7d], cl; call dword ptr [eax - 0x73]; 
0x0015e591: or bh, al; add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebp - 0xcb79f7d], cl; call dword ptr [eax - 0x73]; 
0x00163846: or bh, al; inc esp; and al, 0x24; add eax, 0x51000000; push eax; call dword ptr [edx + 0xc]; 
0x0003eec3: or bh, bh; dec dword ptr [ebx - 0x72ebdb84]; xchg dword ptr [esi + esi*2 - 7], ebx; call dword ptr [eax + 0x68]; 
0x001256a2: or bh, bh; je 0x12565b; add byte ptr [ebx - 0x7cacfe3a], al; ret; 
0x00158342: or bh, bh; je 0x15836a; or byte ptr [esi - 0x18], dl; ret; 
0x00158914: or bh, bh; je 0x15893c; sbb al, 0x56; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0015dba7: or bh, bh; je 0x15dbcf; cmp al, 0x56; mov eax, dword ptr [esp + 0x40]; call eax; 
0x0016089c: or bh, bh; je 0x1608c4; cmp al, 0x56; mov eax, dword ptr [esp + 0x40]; call eax; 
0x00161388: or bh, bh; je 0x1613b0; sub al, 0x53; mov eax, dword ptr [esp + 0x18]; call eax; 
0x001639e5: or bh, bh; je 0x163a0d; adc al, 0x53; call dword ptr [eax]; 
0x00163bd4: or bh, bh; je 0x163bfc; sbb al, 0x53; call dword ptr [eax + 0xc]; 
0x0017076e: or bh, bh; je 0x170796; adc al, 0x8b; inc esp; and al, 0x10; call eax; 
0x0008242b: or bh, bh; je 0x82453; xor byte ptr [edx + 0x51], dl; call eax; 
0x00094d30: or bh, bh; je 0x94d58; sub byte ptr [ebx - 0x72cbdbbc], cl; and byte ptr [ecx], 0x41; stc; call dword ptr [eax - 0x18]; 
0x000d742c: or bh, bh; leave; lcall 0, 0x89870f3b; add byte ptr [eax + 0x194], bh; call dword ptr gs:[0x10]; 
0x0008bfa1: or bh, bh; leave; lcall 0, 0xc4870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x0008cb87: or bh, bh; leave; lcall 0, 0xce870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x6174; 
0x0008c904: or bh, bh; leave; lcall 1, 0x31870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x0006cafc: or bh, bh; mov ch, 0x74; idiv edi; dec dword ptr [ebx - 0x89763]; call dword ptr [edx - 0x77]; 
0x00066d0d: or bh, bh; mov ch, 0x88; idiv edi; call dword ptr [edx - 0x77]; 
0x0008e092: or bh, byte ptr [eax + 0x10]; cmove eax, ecx; ret; 
0x0012c555: or bh, byte ptr [eax + 1]; ret; 
0x0015a755: or bh, byte ptr [eax + 2]; pop ebx; pop esi; ret; 
0x000c9d21: or bh, byte ptr [ecx + 1]; pop ebx; pop esi; mov eax, ecx; ret; 
0x001600e2: or bh, byte ptr [ecx]; std; jmp dword ptr [esi - 0x70]; 
0x0009124b: or bh, byte ptr [edx + esi*8 - 0x46]; add byte ptr [eax], al; add byte ptr [eax], al; cmovne eax, edx; ret; 
0x0009a9af: or bh, dh; jmp dword ptr [esi - 0x70]; 
0x0017411b: or bh, dh; ret 0x202; 
0x00116126: or bh, dh; ret 0xeff0; 
0x000363af: or bh, dh; ret 0xffff; 
0x00088376: or bh, dh; ror byte ptr [ebp + 0x6c504], 1; add byte ptr [eax], al; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0009c189: or bl, 0xe7; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x00084766: or bl, bh; xor eax, eax; ret; 
0x0003b698: or bl, byte ptr [ebx + 0x25]; inc dword ptr [ebx]; add byte ptr [eax], al; xor eax, edx; ret; 
0x0011d405: or bl, byte ptr [ebx + 0x5e]; pop edi; ret; 
0x0007bef2: or bl, byte ptr [ebx + 0x5e]; ret; 
0x00087e7d: or bl, byte ptr [ebx - 9]; fcomp dword ptr [esi + 0x5f]; ret; 
0x000ad822: or bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x000e7bfd: or bl, ch; les eax, ptr [ebx - 0x7c72f314]; push cs; dec eax; stc; call dword ptr [eax - 0x18]; 
0x00171102: or bl, ch; xchg eax, ebp; out 0x28, al; cld; jmp dword ptr [esi - 0x70]; 
0x0017f4f7: or bl, dh; movd dword ptr [eax], mm0; movq qword ptr [edx], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00188957: or bl, dh; movd dword ptr [eax], mm0; movq qword ptr [edx], xmm0; pop ebx; ret; 
0x00057a5a: or byte ptr [0x100], ah; or eax, 7; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x001160da: or byte ptr [0x100f], ah; ret; 
0x000847d3: or byte ptr [eax + 0x1000000], 0x83; les eax, ptr [esi + ebx*2]; pop edi; ret; 
0x000d75de: or byte ptr [eax + 0x108], bh; call dword ptr gs:[0x10]; 
0x00123f30: or byte ptr [eax + 0x10e], bh; call dword ptr gs:[0x10]; 
0x00093462: or byte ptr [eax + 0x118], bh; call dword ptr gs:[0x10]; 
0x000ddb6a: or byte ptr [eax + 0x11c], bh; call dword ptr gs:[0x10]; 
0x00123b30: or byte ptr [eax + 0x124], bh; call dword ptr gs:[0x10]; 
0x00109c73: or byte ptr [eax + 0x127], bh; call dword ptr gs:[0x10]; 
0x00109bd0: or byte ptr [eax + 0x128], bh; call dword ptr gs:[0x10]; 
0x0010c2a0: or byte ptr [eax + 0x12d], bh; call dword ptr gs:[0x10]; 
0x0010c1e0: or byte ptr [eax + 0x130], bh; call dword ptr gs:[0x10]; 
0x00107a15: or byte ptr [eax + 0x13e], bh; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0010aff0: or byte ptr [eax + 0x14a], bh; call dword ptr gs:[0x10]; 
0x00084857: or byte ptr [eax + 0x16], bh; cmp edx, 0x3fff; ja 0x84870; ret; 
0x0008ada2: or byte ptr [eax + 0x16], bh; pop ebx; ret; 
0x001118c3: or byte ptr [eax + 0x19e], bh; call dword ptr gs:[0x10]; 
0x000934b2: or byte ptr [eax + 0x1a3], bh; call dword ptr gs:[0x10]; 
0x000386c1: or byte ptr [eax + 0x1a5], bh; call dword ptr gs:[0x10]; 
0x00115300: or byte ptr [eax + 0x1b4], bh; call dword ptr gs:[0x10]; 
0x001164f1: or byte ptr [eax + 0x36], bh; call dword ptr gs:[0x10]; 
0x000afd75: or byte ptr [eax + 0x448b0270], cl; and al, 8; pop esi; ret; 
0x000938e3: or byte ptr [eax + 0x47752f3b], al; add ebx, 1; mov eax, 0x116; call dword ptr gs:[0x10]; 
0x0010c210: or byte ptr [eax + 0x55], bh; call dword ptr gs:[0x10]; 
0x00070def: or byte ptr [eax + 0x56], dl; call dword ptr [ebx + 0x48]; 
0x000e172f: or byte ptr [eax + 0x57], dl; call esi; 
0x00117030: or byte ptr [eax + 0x61], bh; call dword ptr gs:[0x10]; 
0x00120fd0: or byte ptr [eax + 0x65], bh; call dword ptr gs:[0x10]; 
0x00124534: or byte ptr [eax + 0x66], bh; call dword ptr gs:[0x10]; 
0x00123be0: or byte ptr [eax + 0x67], bh; call dword ptr gs:[0x10]; 
0x00125a8d: or byte ptr [eax + 0x75], bh; call dword ptr gs:[0x10]; 
0x00125b9c: or byte ptr [eax + 0x75], bh; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x0017a3b8: or byte ptr [eax + 0x75], bh; mov ebx, 3; call dword ptr gs:[0x10]; 
0x001238e0: or byte ptr [eax + 0x7b], bh; call dword ptr gs:[0x10]; 
0x0011c530: or byte ptr [eax + 0x7d], bh; call dword ptr gs:[0x10]; 
0x001239d0: or byte ptr [eax + 0x7f], bh; call dword ptr gs:[0x10]; 
0x00123a00: or byte ptr [eax + 0x81], bh; call dword ptr gs:[0x10]; 
0x0014527f: or byte ptr [eax + 0x92], bh; mov dword ptr [ebx + 0xc], 1; add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x000faff0: or byte ptr [eax + 0x9c], bh; call dword ptr gs:[0x10]; 
0x00123c50: or byte ptr [eax + 0xa9], bh; call dword ptr gs:[0x10]; 
0x00038669: or byte ptr [eax + 0xb1], bh; call dword ptr gs:[0x10]; 
0x000de880: or byte ptr [eax + 0xb], bh; call dword ptr gs:[0x10]; 
0x0010bbf0: or byte ptr [eax + 0xc6], bh; call dword ptr gs:[0x10]; 
0x0010bbc0: or byte ptr [eax + 0xcf], bh; call dword ptr gs:[0x10]; 
0x000df6c0: or byte ptr [eax + 0xd1], bh; call dword ptr gs:[0x10]; 
0x000df6f0: or byte ptr [eax + 0xd3], bh; call dword ptr gs:[0x10]; 
0x0010bb90: or byte ptr [eax + 0xd4], bh; call dword ptr gs:[0x10]; 
0x0011c660: or byte ptr [eax + 0xda], bh; call dword ptr gs:[0x10]; 
0x0011c630: or byte ptr [eax + 0xdb], bh; call dword ptr gs:[0x10]; 
0x0010a95f: or byte ptr [eax + 0xdd], bh; call dword ptr gs:[0x10]; 
0x0011f400: or byte ptr [eax + 0xe8], bh; call dword ptr gs:[0x10]; 
0x0011f460: or byte ptr [eax + 0xe9], bh; call dword ptr gs:[0x10]; 
0x0011f330: or byte ptr [eax + 0xea], bh; call dword ptr gs:[0x10]; 
0x001408ab: or byte ptr [eax + 0xf000000], al; inc edx; ret 0x8dc3; 
0x0008d290: or byte ptr [eax + 0xf0], bh; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008c4d6: or byte ptr [eax + 0xf0], bh; mov edx, 0x7fffffff; xor esi, esi; mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008d199: or byte ptr [eax + 0xf0], bh; mov edx, 0x7fffffff; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008d228: or byte ptr [eax + 0xf0], bh; mov edx, 1; xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008c4ac: or byte ptr [eax + 0xf0], bh; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00088d96: or byte ptr [eax + 0xf0], bh; not ecx; and ecx, 0x80; call dword ptr gs:[0x10]; 
0x000b3269: or byte ptr [eax + 0xf660870], cl; adc eax, dword ptr [eax]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0011997d: or byte ptr [eax + 1], bh; pop ebx; ret; 
0x0009aee5: or byte ptr [eax + eax], 0xe8; ret; 
0x00095852: or byte ptr [eax + eax], cl; add byte ptr [edi + 0x3b5c86], al; add byte ptr [ebx - 0x70f0fe08], al; ret 0; 
0x000ab57c: or byte ptr [eax - 0x2f76f7be], cl; ret; 
0x0012db1b: or byte ptr [eax - 0x49f0ffc2], al; adc byte ptr [edi], cl; test byte ptr [eax - 0x7d000000], dl; ret 0x8801; 
0x0011e759: or byte ptr [eax - 0x73], dl; and dword ptr [eax], 0xffffffba; stc; call dword ptr [eax - 0x18]; 
0x000dad10: or byte ptr [eax - 0x73], dl; test eax, esp; inc ebp; stc; call dword ptr [ecx + 0x50]; 
0x000968bb: or byte ptr [eax - 0x76f7b875], dl; ret 0xf801; 
0x000b2900: or byte ptr [eax - 0x776ef86], cl; pop ebx; pop edi; ret; 
0x000b260d: or byte ptr [eax - 0x776f7be], cl; pop ebx; pop edi; ret; 
0x000ab41c: or byte ptr [eax - 0x776f7be], cl; pop edi; ret; 
0x001204be: or byte ptr [eax - 0x7c72ebba], cl; ret; 
0x000854aa: or byte ptr [eax - 0xf477e0f], al; add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x00133386: or byte ptr [eax - 1], bh; pop ebx; ret; 
0x0009a5d2: or byte ptr [eax - 1], dl; jae 0x9a5fb; call edx; 
0x000579f6: or byte ptr [eax - 1], dl; je 0x57a1f; adc al, ch; jmp ecx; 
0x00026f7d: or byte ptr [eax - 7], dh; call dword ptr [eax - 0x18]; 
0x00094269: or byte ptr [eax], 0x3b; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x000847ea: or byte ptr [eax], 0x83; les eax, ptr [esi + ebx*2]; pop edi; ret; 
0x0014d7b2: or byte ptr [eax], 0xac; stc; call dword ptr [eax - 0x18]; 
0x000b3fa5: or byte ptr [eax], ah; ret; 
0x00139cbe: or byte ptr [eax], al; add al, ch; cli; push ebp; cli; jmp dword ptr [esi - 0x3f]; 
0x000e80db: or byte ptr [eax], al; add al, ch; sub bl, byte ptr [ebp - 0x387efff8]; sbb eax, 0x8900141f; ret; 
0x00146df3: or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00058c38: or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edi + 0x1f88302], al; jg 0x58c48; ret; 
0x00084f9d: or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; call dword ptr gs:[0x10]; 
0x00164725: or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edx], ch; push edi; call dword ptr [eax + 0x14]; 
0x0010aad4: or byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00171ad5: or byte ptr [eax], al; add byte ptr [eax], al; add esp, 0xc; ret; 
0x0003798a: or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0009458b: or byte ptr [eax], al; add byte ptr [eax], al; cmova eax, ecx; mov dword ptr [edx + 0x3b6c], eax; ret; 
0x0008bcf6: or byte ptr [eax], al; add byte ptr [eax], al; inc eax; xor eax, eax; ret; 
0x000827cd: or byte ptr [eax], al; add byte ptr [eax], al; mov byte ptr [eax + 0x4fe], 0; ret; 
0x00087265: or byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp + 8], edx; call dword ptr gs:[0x10]; 
0x00124f38: or byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x66; mov ebx, 0xe; call dword ptr gs:[0x10]; 
0x00037804: or byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0xae; call dword ptr gs:[0x10]; 
0x000de33b: or byte ptr [eax], al; add byte ptr [eax], al; mov ebx, 0x1200011; lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x00038597: or byte ptr [eax], al; add byte ptr [eax], al; mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x00037a0a: or byte ptr [eax], al; add byte ptr [eax], al; mov edx, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x001117e8: or byte ptr [eax], al; add byte ptr [eax], al; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00086a35: or byte ptr [eax], al; add byte ptr [eax], al; mov edx, edi; lea ecx, [eax + 0x47c]; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0008b036: or byte ptr [eax], al; add byte ptr [eax], al; mov esi, edx; call dword ptr gs:[0x10]; 
0x0015a312: or byte ptr [eax], al; add byte ptr [eax], al; pop ebx; ret; 
0x00197a67: or byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x0008d766: or byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0008bcd1: or byte ptr [eax], al; add byte ptr [eax], al; xor byte ptr [ecx], 0xc0; ret; 
0x000886d6: or byte ptr [eax], al; add byte ptr [eax], al; xor edx, edx; lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x0007778e: or byte ptr [eax], al; add byte ptr [ebx + 0x448d08ec], al; and al, 0x40; push eax; push dword ptr [esp + 0x18]; call dword ptr [edi + 0x48]; 
0x00048324: or byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x001469f0: or byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000f9222: or byte ptr [eax], al; add byte ptr [ebx - 0x17a8f314], al; ret 0xfdf5; 
0x0011f7c6: or byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; les ecx, ptr [esi - 7]; call dword ptr [eax + 0x57]; 
0x0011f7fc: or byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; push esp; dec edi; stc; call dword ptr [eax + 0x57]; 
0x0011f817: or byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; xchg byte ptr [edi - 7], cl; call dword ptr [eax + 0x57]; 
0x000abc25: or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0009480a: or byte ptr [eax], al; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00095c81: or byte ptr [eax], al; add esp, 0x10; cmp eax, -1; je 0x95c90; add esp, 0xc; ret; 
0x0009478d: or byte ptr [eax], al; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0007caa9: or byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x000331d7: or byte ptr [eax], al; add esp, 0x1c; ret; 
0x0005180e: or byte ptr [eax], al; mov eax, edx; ret; 
0x00048a80: or byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0004ab68: or byte ptr [eax], bh; jne 0x4ab72; push ecx; ret; 
0x0004ae0e: or byte ptr [eax], bh; jne 0x4ae18; push ecx; ret; 
0x0008483e: or byte ptr [eax], cl; mov dword ptr [eax + 0x10], edx; xor eax, eax; ret; 
0x00084823: or byte ptr [eax], cl; mov dword ptr [edx + 0x10], eax; mov eax, ecx; ret; 
0x000b3fb5: or byte ptr [eax], dh; ret; 
0x000b3f95: or byte ptr [eax], dl; ret; 
0x00093cd3: or byte ptr [ebp + 0x10479db], al; fisttp dword ptr [ebx + 0x106b81b]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0002c16e: or byte ptr [ebp + 0x1d840fc0], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x6c72f714], al; jb 0x2c1aa; stc; call dword ptr [edx + 0x50]; 
0x0012c0a9: or byte ptr [ebp + 0x39010544], cl; ret; 
0x0012c1cd: or byte ptr [ebp + 0x39013044], cl; ret; 
0x000f4e1c: or byte ptr [ebp + 0x390474c0], al; ret 0xcb75; 
0x000f2274: or byte ptr [ebp + 0x390474d2], al; ret 0x2b75; 
0x001037d1: or byte ptr [ebp + 0x4a], 0xf9; call dword ptr [eax - 0x18]; 
0x00070deb: or byte ptr [ebp + 0x50082444], cl; push esi; call dword ptr [ebx + 0x48]; 
0x0007cb66: or byte ptr [ebp + 0x50182444], cl; push esi; call dword ptr [edi + 0x48]; 
0x0007c7fd: or byte ptr [ebp + 0x50282444], cl; push esi; call dword ptr [edi + 0x48]; 
0x00077793: or byte ptr [ebp + 0x50402444], cl; push dword ptr [esp + 0x18]; call dword ptr [edi + 0x48]; 
0x000d715a: or byte ptr [ebp + 0x511c244c], cl; mov dword ptr [esp + 0x18], ecx; push ebx; call eax; 
0x0010551a: or byte ptr [ebp + 0x52082454], cl; push eax; call dword ptr [ecx + 0x20]; 
0x000d72d4: or byte ptr [ebp + 0x520c2454], cl; push ebx; call eax; 
0x000e0e7a: or byte ptr [ebp + 0x52142454], cl; push eax; call dword ptr [ecx + 0x20]; 
0x001624f7: or byte ptr [ebp + 0x52202454], cl; push eax; call edi; 
0x0007cea6: or byte ptr [ebp + 0x52282454], cl; push esi; call dword ptr [eax + 0x48]; 
0x0007faee: or byte ptr [ebp + 0x52500179], cl; mov dword ptr [esp + 0x40], edx; call dword ptr [esi + 0xc]; 
0x00097e41: or byte ptr [ebp + 0x55893014], cl; cmp byte ptr [ebp + 0x7c09b], cl; add byte ptr [ecx], bh; fisttp qword ptr [ebp - 0x6af0f798]; ret; 
0x000a9f2d: or byte ptr [ebp + 0x5b5f0c42], cl; ret; 
0x000a9f6c: or byte ptr [ebp + 0x5b5f1042], cl; ret; 
0x000def16: or byte ptr [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret; 
0x000ad7fd: or byte ptr [ebp + 0x5e5f0947], cl; pop ebx; ret; 
0x000ad81f: or byte ptr [ebp + 0x5e5f0a47], cl; pop ebx; ret; 
0x000ad85d: or byte ptr [ebp + 0x5e5f0c47], cl; pop ebx; ret; 
0x00088a79: or byte ptr [ebp + 0xb6], 0; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x000c3822: or byte ptr [ebp + 0xf514], 0; add byte ptr [ecx], bh; ret; 
0x000c2d0a: or byte ptr [ebp + 0xfd14], 0; add byte ptr [ecx], bh; ret; 
0x0008e06a: or byte ptr [ebp + 3], dh; xor eax, eax; ret; 
0x000df8ad: or byte ptr [ebp - 0x14c76b], cl; call dword ptr [edx + 0x50]; 
0x000dfa82: or byte ptr [ebp - 0x14c77b], cl; call dword ptr [eax + 0x52]; 
0x000dfa0e: or byte ptr [ebp - 0x15277b], cl; call dword ptr [eax - 1]; 
0x000e15ab: or byte ptr [ebp - 0x1837b], cl; call dword ptr [eax + 0x56]; 
0x000e17bd: or byte ptr [ebp - 0x1837b], cl; call dword ptr [eax - 0x75]; 
0x00105c3b: or byte ptr [ebp - 0x18f7b], cl; call dword ptr [eax + 0x56]; 
0x00105e4d: or byte ptr [ebp - 0x18f7b], cl; call dword ptr [eax - 0x75]; 
0x00093012: or byte ptr [ebp - 0x1971df79], cl; call dword ptr [eax - 0x73]; 
0x0007bc91: or byte ptr [ebp - 0x1ae63f7d], cl; call dword ptr [eax - 0x73]; 
0x0007b7d6: or byte ptr [ebp - 0x1aeaef7d], cl; dec dword ptr [ecx - 0x72afebaa]; xor dword ptr [eax + 0x14], 0xffffffe5; call dword ptr [eax - 0x73]; 
0x0002e912: or byte ptr [ebp - 0x1af7b], cl; call dword ptr [eax - 1]; 
0x00044b6a: or byte ptr [ebp - 0x249e8a40], al; lodsd eax, dword ptr [esi]; mov al, 0xba; stc; jmp dword ptr [ebp - 0x75]; 
0x000b5fc7: or byte ptr [ebp - 0x2a], dh; lea ebx, [eax + 8]; mov eax, ebx; pop ebx; ret; 
0x000c68e5: or byte ptr [ebp - 0x35f48], cl; call dword ptr [edi + 0x53]; 
0x000c6474: or byte ptr [ebp - 0x35ff7b], cl; dec dword ptr [ebp - 0x360363]; dec dword ptr [ebx - 0x363773]; call dword ptr [eax - 0x75]; 
0x000c7639: or byte ptr [ebp - 0x35ff7b], cl; dec dword ptr [ebx - 0x36476b]; push dword ptr [ecx]; call dword ptr [eax - 0x73]; 
0x0005057f: or byte ptr [ebp - 0x361773], cl; dec dword ptr [ebp - 0x35f363]; call dword ptr [edx - 0x77]; 
0x0008313e: or byte ptr [ebp - 0x3a], ah; add eax, 0x4fe; add byte ptr [ebp - 0x77], ah; adc eax, 0x7c; ret; 
0x0009c6ef: or byte ptr [ebp - 0x3a], dh; mov dword ptr [eax + 0x1c], esi; pop ebx; pop esi; ret; 
0x0014ba2b: or byte ptr [ebp - 0x3c7bf037], al; add al, byte ptr [eax]; add dh, dh; ret 0xf08; 
0x0009cac8: or byte ptr [ebp - 0x3f7cfeab], cl; add dword ptr [ecx], edi; ret 0xc72; 
0x00085056: or byte ptr [ebp - 0x47d77aa4], cl; lock add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x0009c446: or byte ptr [ebp - 0x49], dh; mov dword ptr [eax], esi; pop ebx; pop esi; pop edi; ret; 
0x000f602e: or byte ptr [ebp - 0x5c7bf040], al; add dword ptr [eax], eax; add byte ptr [edi], cl; mov dh, 0x43; add al, 0x89; ret 0xe283; 
0x00083164: or byte ptr [ebp - 0x5e], ah; inc byte ptr [eax + eax]; add byte ptr [ebx + 0x87401f8], al; ret; 
0x0016cf3d: or byte ptr [ebp - 0x64c1b45], cl; call dword ptr [edi + 0x56]; 
0x00152849: or byte ptr [ebp - 0x651577a], cl; call dword ptr [eax - 0x73]; 
0x00124082: or byte ptr [ebp - 0x65cf779], cl; call dword ptr [eax + 0x55]; 
0x0012409d: or byte ptr [ebp - 0x65d0f79], cl; call dword ptr [eax + 0x55]; 
0x001240bb: or byte ptr [ebp - 0x65d2779], cl; call dword ptr [eax + 0x55]; 
0x000e5c17: or byte ptr [ebp - 0x6650b7f], cl; call dword ptr [eax - 0x73]; 
0x000da5ba: or byte ptr [ebp - 0x6666379], cl; call dword ptr [eax - 0x73]; 
0x000fd1ce: or byte ptr [ebp - 0x67343], cl; call dword ptr [edi - 1]; 
0x000fec3a: or byte ptr [ebp - 0x6737b], cl; call dword ptr [eax - 0x73]; 
0x00072a85: or byte ptr [ebp - 0x683036a], cl; jmp dword ptr [ebp - 0x75]; 
0x000302c0: or byte ptr [ebp - 0x68cab7b], cl; dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x0002c8af: or byte ptr [ebp - 0x68d1b79], cl; call dword ptr [eax + 0x56]; 
0x0016c1a7: or byte ptr [ebp - 0x699ea55], cl; call dword ptr [ebp + 0x56]; 
0x0016d5fc: or byte ptr [ebp - 0x699ea7d], cl; call dword ptr [ebp + 0x50]; 
0x0016c7d9: or byte ptr [ebp - 0x699f845], cl; call dword ptr [edi + 0x55]; 
0x0016c18c: or byte ptr [ebp - 0x699f845], cl; call dword ptr [edi + 0x56]; 
0x0016d067: or byte ptr [ebp - 0x69a076a], cl; call dword ptr [edx - 0x77]; 
0x0016c1c2: or byte ptr [ebp - 0x69a076d], cl; call dword ptr [edx - 0x77]; 
0x0016c813: or byte ptr [ebp - 0x69a0775], cl; call dword ptr [ecx - 0x77]; 
0x0016c836: or byte ptr [ebp - 0x69a1645], cl; call dword ptr [edi + 0x55]; 
0x0016c1e5: or byte ptr [ebp - 0x69a1645], cl; call dword ptr [edi + 0x56]; 
0x0016d086: or byte ptr [ebp - 0x69a164a], cl; call dword ptr [esi + 0x53]; 
0x0015cba3: or byte ptr [ebp - 0x69d3d7d], cl; call dword ptr [eax - 1]; 
0x00155328: or byte ptr [ebp - 0x69e3180], cl; call dword ptr [eax + 0x56]; 
0x00150e61: or byte ptr [ebp - 0x69e5a7d], cl; call dword ptr [eax - 1]; 
0x0013c4a0: or byte ptr [ebp - 0x6a36d6d], cl; call dword ptr [edx + 0x50]; 
0x0013bfb2: or byte ptr [ebp - 0x6a3a969], cl; call dword ptr [edx + 0x50]; 
0x0013c322: or byte ptr [ebp - 0x6a3a96d], cl; call dword ptr [edx + 0x50]; 
0x0013b7b4: or byte ptr [ebp - 0x6a8876d], cl; dec dword ptr [ecx - 0x48b7b]; call dword ptr [edi + 0x52]; 
0x00120b1b: or byte ptr [ebp - 0x6ab107d], cl; call dword ptr [eax + 0x56]; 
0x0011f6d8: or byte ptr [ebp - 0x6ad557d], cl; call dword ptr [eax + 0x57]; 
0x0011f97b: or byte ptr [ebp - 0x6ade67d], cl; call dword ptr [eax + 0x57]; 
0x0011f960: or byte ptr [ebp - 0x6ae097d], cl; call dword ptr [eax + 0x57]; 
0x0011f945: or byte ptr [ebp - 0x6ae2d7d], cl; call dword ptr [eax + 0x57]; 
0x0011f92a: or byte ptr [ebp - 0x6ae667d], cl; call dword ptr [eax + 0x57]; 
0x0011f90f: or byte ptr [ebp - 0x6ae8d7d], cl; call dword ptr [eax + 0x57]; 
0x0011f8f4: or byte ptr [ebp - 0x6aeb37d], cl; call dword ptr [eax + 0x57]; 
0x0011f8d9: or byte ptr [ebp - 0x6aee97d], cl; call dword ptr [eax + 0x57]; 
0x0011f8be: or byte ptr [ebp - 0x6af1f7d], cl; call dword ptr [eax + 0x57]; 
0x0011f8a3: or byte ptr [ebp - 0x6af6f7d], cl; call dword ptr [eax + 0x57]; 
0x0011f888: or byte ptr [ebp - 0x6afb77d], cl; call dword ptr [eax + 0x57]; 
0x0011f86d: or byte ptr [ebp - 0x6afde7d], cl; call dword ptr [eax + 0x57]; 
0x0011f852: or byte ptr [ebp - 0x6b0107d], cl; call dword ptr [eax + 0x57]; 
0x0011f837: or byte ptr [ebp - 0x6b0447d], cl; call dword ptr [eax + 0x57]; 
0x0011f81c: or byte ptr [ebp - 0x6b0797d], cl; call dword ptr [eax + 0x57]; 
0x0011f801: or byte ptr [ebp - 0x6b0ab7d], cl; call dword ptr [eax + 0x57]; 
0x0011f7e6: or byte ptr [ebp - 0x6b0f77d], cl; call dword ptr [eax + 0x57]; 
0x0011f7cb: or byte ptr [ebp - 0x6b13b7d], cl; call dword ptr [eax + 0x57]; 
0x0011f7b0: or byte ptr [ebp - 0x6b16d7d], cl; call dword ptr [eax + 0x57]; 
0x0011f795: or byte ptr [ebp - 0x6b1a37d], cl; call dword ptr [eax + 0x57]; 
0x0011f6bd: or byte ptr [ebp - 0x6b1e17d], cl; call dword ptr [eax + 0x57]; 
0x0011f77a: or byte ptr [ebp - 0x6b1e47d], cl; call dword ptr [eax + 0x57]; 
0x0011f75f: or byte ptr [ebp - 0x6b2197d], cl; call dword ptr [eax + 0x57]; 
0x0011f744: or byte ptr [ebp - 0x6b2607d], cl; call dword ptr [eax + 0x57]; 
0x0011f729: or byte ptr [ebp - 0x6b2997d], cl; call dword ptr [eax + 0x57]; 
0x0011f70e: or byte ptr [ebp - 0x6b2ed7d], cl; call dword ptr [eax + 0x57]; 
0x0011f6f3: or byte ptr [ebp - 0x6b3577d], cl; call dword ptr [eax + 0x57]; 
0x001197c1: or byte ptr [ebp - 0x6b3e06a], cl; call dword ptr [edx - 0x77]; 
0x0011f6a2: or byte ptr [ebp - 0x6b3e37d], cl; call dword ptr [eax + 0x57]; 
0x0011f687: or byte ptr [ebp - 0x6b42d7d], cl; call dword ptr [eax + 0x57]; 
0x001197e0: or byte ptr [ebp - 0x6b5156a], cl; call dword ptr [edx - 0x77]; 
0x001197a2: or byte ptr [ebp - 0x6b51b6a], cl; call dword ptr [edx - 0x77]; 
0x000df941: or byte ptr [ebp - 0x6b6b768], cl; dec dword ptr [ebp - 0x6b91c80]; call dword ptr [ebx + 0x50]; 
0x0011988a: or byte ptr [ebp - 0x6b6b77d], cl; call dword ptr [eax - 0x73]; 
0x0013aa31: or byte ptr [ebp - 0x6b73279], cl; call dword ptr [eax - 0x77]; 
0x000eb725: or byte ptr [ebp - 0x6b7907d], cl; call dword ptr [eax + 0x55]; 
0x000eb8fa: or byte ptr [ebp - 0x6b7977d], cl; call dword ptr [eax + 0x55]; 
0x000eb86c: or byte ptr [ebp - 0x6b79d7d], cl; call dword ptr [eax + 0x55]; 
0x000eb79f: or byte ptr [ebp - 0x6b7a37d], cl; call dword ptr [eax + 0x55]; 
0x000eb428: or byte ptr [ebp - 0x6b7a97d], cl; call dword ptr [eax + 0x55]; 
0x000eb538: or byte ptr [ebp - 0x6b7b57d], cl; call dword ptr [eax + 0x55]; 
0x000eb3b3: or byte ptr [ebp - 0x6b7bb7d], cl; call dword ptr [eax + 0x55]; 
0x000eb6cc: or byte ptr [ebp - 0x6b7c17d], cl; call dword ptr [eax + 0x55]; 
0x000df9f7: or byte ptr [ebp - 0x6b8fb80], cl; call dword ptr [eax + 0x53]; 
0x000dfa54: or byte ptr [ebp - 0x6b8fb80], cl; call dword ptr [eax - 1]; 
0x000cd47b: or byte ptr [ebp - 0x6bac37d], cl; call dword ptr [eax + 0x56]; 
0x000ccfd6: or byte ptr [ebp - 0x6baf47d], cl; call dword ptr [eax + 0x56]; 
0x0009a1ab: or byte ptr [ebp - 0x6bc737a], cl; call dword ptr [ebx + 0x50]; 
0x001500e1: or byte ptr [ebp - 0x6bca97f], cl; call dword ptr [eax + 0x52]; 
0x000fc5b8: or byte ptr [ebp - 0x6bf7f79], cl; call dword ptr [eax + 0x53]; 
0x000eb576: or byte ptr [ebp - 0x6c15b7d], cl; call dword ptr [eax + 0x55]; 
0x0007e239: or byte ptr [ebp - 0x6c19a7b], cl; call dword ptr [eax - 0x75]; 
0x0005856a: or byte ptr [ebp - 0x6ce8061], cl; call dword ptr [ecx + 0x53]; 
0x00057fb0: or byte ptr [ebp - 0x6ce847a], cl; call dword ptr [eax + 0x53]; 
0x00057419: or byte ptr [ebp - 0x6cffe4d], cl; dec dword ptr [ecx - 0x9ebdb8c]; ret 0xf50; 
0x00034d98: or byte ptr [ebp - 0x6d05d7b], cl; call dword ptr [eax + 0x53]; 
0x0011b5f3: or byte ptr [ebp - 0x6d0c37a], cl; call dword ptr [eax - 1]; 
0x0011e703: or byte ptr [ebp - 0x6d0c37d], cl; call dword ptr [eax + 0x6a]; 
0x001489a9: or byte ptr [ebp - 0x6d0c579], cl; call dword ptr [eax + 0x56]; 
0x0002c197: or byte ptr [ebp - 0x6d3877d], cl; call dword ptr [eax - 1]; 
0x0002c179: or byte ptr [ebp - 0x6d38d6d], cl; call dword ptr [edx + 0x50]; 
0x00148313: or byte ptr [ebp - 0x6d5a479], cl; call dword ptr [eax - 0x73]; 
0x001391ea: or byte ptr [ebp - 0x6d5a47b], cl; call dword ptr [eax + 0x53]; 
0x000cd505: or byte ptr [ebp - 0x6d5a47d], cl; call dword ptr [eax + 0x56]; 
0x00088182: or byte ptr [ebp - 0x6d5a47d], cl; call dword ptr [eax - 0x73]; 
0x000cf07f: or byte ptr [ebp - 0x6d5a47f], cl; call dword ptr [eax + 0x53]; 
0x0011df5a: or byte ptr [ebp - 0x74868b37], al; pop ecx; add al, 0xf6; ret; 
0x0002d7a4: or byte ptr [ebp - 0x74988a2e], al; inc ebx; add al, 0x83; ret; 
0x0012cc00: or byte ptr [ebp - 0x74a48b40], al; pop esi; or al, 0xb; pop edx; or al, 0xf6; ret; 
0x00158a48: or byte ptr [ebp - 0x74bfdb84], cl; dec eax; and byte ptr [edi + 0x50], dl; call dword ptr [ecx + 8]; 
0x0011ea47: or byte ptr [ebp - 0x74c38a40], al; dec esp; and al, 0x10; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x000828ea: or byte ptr [ebp - 0x74ee8b2e], al; push eax; add al, 0x89; push esp; and al, 4; jmp dword ptr [eax]; 
0x00082855: or byte ptr [ebp - 0x74f18b2e], al; push eax; add al, 0x89; push esp; and al, 4; jmp dword ptr [eax]; 
0x000de7d2: or byte ptr [ebp - 0x76218b2e], al; dec esp; and al, 0xc; add ebx, 1; mov dword ptr [esp + 8], eax; call edx; 
0x00198c6b: or byte ptr [ebp - 0x76ef8b40], al; ret 0xc031; 
0x000abc5a: or byte ptr [ebp - 0x7af0f781], cl; mov esp, 0x5f000008; pop esi; pop ebx; ret; 
0x0011e23b: or byte ptr [ebp - 0x7afb8b40], al; sal byte ptr [ebp + 4], cl; ret; 
0x000a16bb: or byte ptr [ebp - 0x7c588a01], al; ret 0xeb01; 
0x0016d07f: or byte ptr [ebp - 0x7ccb8b40], al; in al, dx; or byte ptr [ebp - 0x69a164a], cl; call dword ptr [esi + 0x53]; 
0x0008bf1e: or byte ptr [ebp - 0x7ced8b40], al; in al, dx; or al, 0xff; jae 0x8bf2d; call dword ptr [ebx]; 
0x0006fe83: or byte ptr [ebp - 0x7cffd98c], cl; ret; 
0x000b983e: or byte ptr [ebp - 0x7efb7884], cl; ret 0; 
0x000cf032: or byte ptr [ebp - 0x877b], cl; call dword ptr [eax + 0x53]; 
0x001a075b: or byte ptr [ebp - 0x89a2f6d], cl; call dword ptr [edx + 0x50]; 
0x00130a71: or byte ptr [ebp - 0x8b43], cl; call dword ptr [edi + 0x6a]; 
0x0015feb2: or byte ptr [ebp - 0x8b63], cl; call dword ptr [esi + 0x53]; 
0x0015ff12: or byte ptr [ebp - 0x8b7b], cl; call dword ptr [eax + 0x56]; 
0x0011b931: or byte ptr [ebp - 0x8f7b], cl; call dword ptr [eax - 0x73]; 
0x00160079: or byte ptr [ebp - 0x9b7b], cl; call dword ptr [eax + 0x6a]; 
0x0016a70a: or byte ptr [ebp - 0xa37b], cl; call dword ptr [eax + 0x6a]; 
0x0016aeed: or byte ptr [ebp - 0xa77b], cl; call dword ptr [eax - 1]; 
0x000cf2ba: or byte ptr [ebp - 0xb363], cl; call dword ptr [ebx + 0x6a]; 
0x0015878b: or byte ptr [ebp - 0xc48df79], cl; call dword ptr [eax - 0x73]; 
0x00163032: or byte ptr [ebp - 0xc70ef7d], cl; call dword ptr [eax - 0x73]; 
0x00160dda: or byte ptr [ebp - 0xc950f7d], cl; call dword ptr [eax - 0x73]; 
0x0014e259: or byte ptr [ebp - 0xc], dh; ret; 
0x0015e2ec: or byte ptr [ebp - 0xcc0af7d], cl; call dword ptr [eax - 0x73]; 
0x0010a48c: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x10a4a0; pop ebx; ret; 
0x00115a18: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x115a30; pop ebx; ret; 
0x0011690c: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x116920; pop ebx; ret; 
0x0011695c: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x116970; pop ebx; ret; 
0x0011a7ec: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x11a800; pop ebx; ret; 
0x0011a83c: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x11a850; pop ebx; ret; 
0x0012135c: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x121370; pop ebx; ret; 
0x00058a1c: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x58a30; pop ebx; ret; 
0x00092c58: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x92c70; pop ebx; ret; 
0x0010501c: or byte ptr [ebp - 1], ah; adc eax, 0x10; neg eax; pop ebx; ret; 
0x0015ac3a: or byte ptr [ebp - 1], dl; jbe 0x15ac4b; push edi; call dword ptr [eax + 8]; 
0x0015ac7d: or byte ptr [ebp - 1], dl; jbe 0x15ac8e; push edi; call dword ptr [eax + 0x10]; 
0x00164f0b: or byte ptr [ebp - 7], ah; call dword ptr [eax - 0x73]; 
0x00081eba: or byte ptr [ebx + 0x10891851], cl; add esp, 4; pop ebx; pop esi; ret; 
0x0007bf1d: or byte ptr [ebx + 0x10], dh; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x0007bf5b: or byte ptr [ebx + 0x12], dh; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x0008d737: or byte ptr [ebx + 0x137701f8], al; mov edx, dword ptr [esp + 4]; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x00084ba7: or byte ptr [ebx + 0x137701f8], al; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0008d707: or byte ptr [ebx + 0x137702f8], al; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0008bb5b: or byte ptr [ebx + 0x1cf8c100], cl; and eax, 3; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0008660b: or byte ptr [ebx + 0x1e08300], cl; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0008bb7b: or byte ptr [ebx + 0x1fe8c100], cl; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00084bd7: or byte ptr [ebx + 0x2010247c], al; je 0x84be8; add esp, 8; pop ebx; ret; 
0x0015db8f: or byte ptr [ebx + 0x20508b00], cl; push esi; push eax; call dword ptr [edx + 4]; 
0x0015a3db: or byte ptr [ebx + 0x206a0447], cl; push edi; call dword ptr [eax + 0x18]; 
0x00022727: or byte ptr [ebx + 0x24448900], cl; or byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [ecx - 0x16fbdbbc], cl; ret; 
0x000842de: or byte ptr [ebx + 0x28901e0], al; xor eax, eax; ret; 
0x00199209: or byte ptr [ebx + 0x29042444], cl; ret 0xc085; 
0x0019f041: or byte ptr [ebx + 0x2914247c], cl; ret; 
0x0008bf4b: or byte ptr [ebx + 0x2e28310], cl; je 0x8bf60; xor eax, eax; ret; 
0x001595f7: or byte ptr [ebx + 0x38908ec], al; push dword ptr [ebx + 8]; push esi; call dword ptr [ebx + 0xc]; 
0x00188c5c: or byte ptr [ebx + 0x390c2454], cl; ret 0x1d72; 
0x00186a9c: or byte ptr [ebx + 0x390c2454], cl; ret 0x2972; 
0x0016ea9a: or byte ptr [ebx + 0x3a083], cl; add byte ptr [ecx + 0x52], dl; call dword ptr [eax + 0x24]; 
0x0016eb3a: or byte ptr [ebx + 0x3a083], cl; add byte ptr [ecx + 0x52], dl; call dword ptr [eax + 0x28]; 
0x000c4625: or byte ptr [ebx + 0x418901c0], al; or byte ptr [edi], cl; nop; ret 0x4e8b; 
0x00095ade: or byte ptr [ebx + 0x418d1048], cl; jmp dword ptr [ecx]; 
0x000fd557: or byte ptr [ebx + 0x430888], cl; add byte ptr [ecx - 0x71b73], cl; dec dword ptr [ecx - 0x2f7f723f]; and ch, ch; call dword ptr [eax - 0x73]; 
0x0007b111: or byte ptr [ebx + 0x43891043], cl; adc al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0015f232: or byte ptr [ebx + 0x438b0cc6], al; add al, 0x56; push ebx; call dword ptr [eax + 0x24]; 
0x000894ce: or byte ptr [ebx + 0x47521f8], al; add dword ptr [edx + 4], 1; add esp, 0xc; ret; 
0x00162e2e: or byte ptr [ebx + 0x478b04c1], al; add al, 0x51; push edi; call dword ptr [eax + 8]; 
0x0009f4aa: or byte ptr [ebx + 0x4899004], cl; and al, 0x85; ror byte ptr [edi], 0x89; test byte ptr [ecx], 0; add byte ptr [ebx + 0x29142454], cl; ret 0x8b90; 
0x00162103: or byte ptr [ebx + 0x4a8b0cec], al; add al, 0x52; call dword ptr [ecx + 0x10]; 
0x001588fe: or byte ptr [ebx + 0x50562050], cl; call dword ptr [edx + 4]; 
0x00158a68: or byte ptr [ebx + 0x50572048], cl; call dword ptr [ecx + 8]; 
0x0015f192: or byte ptr [ebx + 0x53560443], cl; call dword ptr [eax + 0x24]; 
0x000dd683: or byte ptr [ebx + 0x53890c53], cl; or al, 0x5b; ret; 
0x00165e96: or byte ptr [ebx + 0x56530446], cl; call dword ptr [eax + 4]; 
0x0006f253: or byte ptr [ebx + 0x565704ec], al; push ebp; call dword ptr [ebx + 0x1c]; 
0x0007634c: or byte ptr [ebx + 0x56], dl; call dword ptr [edi + 0x18]; 
0x0013132a: or byte ptr [ebx + 0x56a1c40], cl; ror eax, 9; xor eax, dword ptr gs:[0x18]; push esi; call eax; 
0x000b31ec: or byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000afd96: or byte ptr [ebx + 0x5e082444], cl; ret; 
0x000a1f65: or byte ptr [ebx + 0x5e5b02c0], al; pop edi; pop ebp; ret; 
0x0007c5e7: or byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00081555: or byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x00081185: or byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x00034e6a: or byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x000806a3: or byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret; 
0x00036718: or byte ptr [ebx + 0x5e5b4cc4], al; pop edi; pop ebp; ret 4; 
0x00087d51: or byte ptr [ebx + 0x5e5b4cc4], al; pop edi; pop ebp; ret; 
0x00028c32: or byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; ret; 
0x000c1b25: or byte ptr [ebx + 0x5e], bl; mov eax, edi; pop edi; pop ebp; ret; 
0x000fbbf9: or byte ptr [ebx + 0x5e], bl; mov eax, edx; ret; 
0x000516b1: or byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00140d3e: or byte ptr [ebx + 0x5e], bl; pop edi; ret 4; 
0x0005942a: or byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0009330f: or byte ptr [ebx + 0x5e], bl; ret; 
0x00076034: or byte ptr [ebx + 0x5f5e5b02], cl; ret; 
0x001165f0: or byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x116609; add esp, 0x1c; ret; 
0x001252b1: or byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x1252c3; add esp, 0x1c; ret; 
0x00058940: or byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x5895f; add esp, 0x1c; ret; 
0x0013eb38: or byte ptr [ebx + 0x6b818], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0013eb38: or byte ptr [ebx + 0x6b818], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; pop ebx; ret; 
0x0015b09a: or byte ptr [ebx + 0x74ff0443], cl; and al, 0x1c; push ebx; call dword ptr [eax + 4]; 
0x0015b04a: or byte ptr [ebx + 0x74ff0443], cl; and al, 0x1c; push ebx; call dword ptr [eax]; 
0x001639e2: or byte ptr [ebx + 0x74ff0843], cl; and al, 0x14; push ebx; call dword ptr [eax]; 
0x00163bd1: or byte ptr [ebx + 0x74ff0843], cl; and al, 0x1c; push ebx; call dword ptr [eax + 0xc]; 
0x001588e2: or byte ptr [ebx + 0x74ff1043], cl; and al, 0x14; push esi; call dword ptr [eax + 4]; 
0x00163344: or byte ptr [ebx + 0x74fff878], al; jne 0x1632cf; ret 0x3901; 
0x0015f114: or byte ptr [ebx + 0x86a0443], cl; push ebx; call dword ptr [eax + 0x18]; 
0x0015a482: or byte ptr [ebx + 0x86a0447], cl; push edi; call dword ptr [eax + 0x18]; 
0x0017196b: or byte ptr [ebx + 0x8b9004], cl; ret; 
0x00158e82: or byte ptr [ebx + 0xa34083], cl; add byte ptr [ebp - 0x7cf48b40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x0007da6b: or byte ptr [ebx + 0xa], dh; movzx eax, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0015db6b: or byte ptr [ebx + 0xb083], cl; add byte ptr [ebp + 0xac2494], cl; add byte ptr [eax], al; push edx; push esi; call dword ptr [eax + 4]; 
0x0008bbbb: or byte ptr [ebx + 0xdff2500], cl; add byte ptr [edi], cl; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0008a2de: or byte ptr [ebx + 0xf0b808], cl; add byte ptr [eax], al; not ecx; and ecx, 0x80; call dword ptr gs:[0x10]; 
0x000408a9: or byte ptr [ebx + 0xf0c2454], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x001243e4: or byte ptr [ebx + 5], bh; mov dword ptr [esp], eax; mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0013fc4e: or byte ptr [ebx + eax*4], cl; ror byte ptr [esi], 0x85; sal byte ptr [ebx + 0x39], cl; ret 0x4572; 
0x0012ca2a: or byte ptr [ebx + ebp*8 + 0x5b], dh; mov eax, ecx; pop esi; pop edi; ret; 
0x00030cb6: or byte ptr [ebx - 0x137c67bb], cl; or byte ptr [ecx - 0x7f724fab], cl; cmp ch, byte ptr [edi]; stc; call dword ptr [eax + 0x53]; 
0x00162e39: or byte ptr [ebx - 0x137cef3c], al; or al, 0x8b; inc edi; add al, 0x57; call dword ptr [eax + 0x10]; 
0x0015edfb: or byte ptr [ebx - 0x16fbdbbc], cl; dec ebx; idiv edi; jmp dword ptr [esi - 0x70]; 
0x0002d8c9: or byte ptr [ebx - 0x17], bl; and byte ptr [esi], al; add byte ptr [eax], al; pop ebx; ret; 
0x0015a457: or byte ptr [ebx - 0x1a7cfbb9], cl; cld; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x0015a4cc: or byte ptr [ebx - 0x1f7cfba9], cl; cld; push eax; push edi; call dword ptr [edx + 0x18]; 
0x0003619a: or byte ptr [ebx - 0x22f3dbbc], cl; inc esp; and al, 4; mov dword ptr [eax], ecx; ret; 
0x0011f0a5: or byte ptr [ebx - 0x2776ab3c], al; pop ebx; pop esi; ret; 
0x0007c127: or byte ptr [ebx - 0x2776fb3c], al; pop ebx; pop esi; ret; 
0x00080bba: or byte ptr [ebx - 0x2fd6f7bf], cl; ret; 
0x000c7021: or byte ptr [ebx - 0x363743], al; call dword ptr [eax]; 
0x0012d218: or byte ptr [ebx - 0x367af7b8], cl; je 0x12d228; xor eax, eax; pop ebx; ret; 
0x0008156a: or byte ptr [ebx - 0x37c6ebb6], cl; cmovb eax, ecx; sub eax, dword ptr [edx + 0xc]; ret; 
0x000f17d3: or byte ptr [ebx - 0x3d7cfb40], al; add al, 0x39; ret; 
0x0015f842: or byte ptr [ebx - 0x3f7ae3c0], cl; je 0x15f853; sub esp, 0xc; push esi; call eax; 
0x0015ac42: or byte ptr [ebx - 0x3f7aef3c], al; je 0x15ad4b; sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x0015c927: or byte ptr [ebx - 0x3fcefb3c], al; pop ebx; pop esi; ret; 
0x00111908: or byte ptr [ebx - 0x47abdbb4], cl; xor eax, 0xbf000001; or byte ptr [eax], al; add byte ptr [eax], al; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00103b50: or byte ptr [ebx - 0x47c7dbac], cl; mov ah, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00103c30: or byte ptr [ebx - 0x47c7dbac], cl; mov ch, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00126702: or byte ptr [ebx - 0x47cbdb84], cl; jne 0x12670a; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000df5e9: or byte ptr [ebx - 0x47fbdba4], cl; cmp dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00123c79: or byte ptr [ebx - 0x47fbdba4], cl; fld dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000df389: or byte ptr [ebx - 0x47fbdba4], cl; int 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00123ea9: or byte ptr [ebx - 0x47fbdba4], cl; jge 0x123eb2; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011f4f9: or byte ptr [ebx - 0x47fbdba4], cl; jmp 0x11f501; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001185d9: or byte ptr [ebx - 0x47fbdba4], cl; jns 0x1185e1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010c139: or byte ptr [ebx - 0x47fbdba4], cl; or dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010abe9: or byte ptr [ebx - 0x47fbdba4], cl; pop dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00123939: or byte ptr [ebx - 0x47fbdba4], cl; xchg byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00084717: or byte ptr [ebx - 0x47fbdbb4], cl; push ss; add byte ptr [eax], al; add byte ptr [ebx + 0xa7602fa], al; ret; 
0x00063a4c: or byte ptr [ebx - 0x4f363], cl; call dword ptr [edx + 0x50]; 
0x00062636: or byte ptr [ebx - 0x4f363], cl; call dword ptr [esi + 0x50]; 
0x0006225c: or byte ptr [ebx - 0x4f363], cl; dec dword ptr [ecx - 0x4eb6b]; call dword ptr [ecx + 0x50]; 
0x000615bd: or byte ptr [ebx - 0x4f77b], cl; call dword ptr [edi - 1]; 
0x00061384: or byte ptr [ebx - 0x50b4b], cl; call dword ptr [edi - 1]; 
0x0006426b: or byte ptr [ebx - 0x52373], cl; jmp ptr [ecx]; ret; 
0x0005bc3a: or byte ptr [ebx - 0x59b63], cl; call dword ptr [ecx + 0x50]; 
0x0005b62b: or byte ptr [ebx - 0x59b63], cl; call dword ptr [edx + 0x50]; 
0x0005b898: or byte ptr [ebx - 0x59b63], cl; dec dword ptr [ecx - 0x5ab73]; call dword ptr [edx + 0x50]; 
0x00160863: or byte ptr [ebx - 0x6b72afbd], cl; and al, 0xac; add byte ptr [eax], al; add byte ptr [edx + 0x56], dl; call dword ptr [eax + 4]; 
0x00153fed: or byte ptr [ebx - 0x72d7dbbc], cl; or dh, 0x61; stc; call dword ptr [eax - 1]; 
0x0013a03d: or byte ptr [ebx - 0x72e3dbbc], cl; cmp byte ptr [edx + 0x5b], 0xf9; call dword ptr [eax + 0x6a]; 
0x00179e17: or byte ptr [ebx - 0x72e7dbbc], cl; cmp byte ptr [ebx + 0x4a], 0xf9; call dword ptr [eax + 0x53]; 
0x000fc59d: or byte ptr [ebx - 0x72ebdb84], cl; xchg dword ptr [ebx], eax; dec ecx; stc; call dword ptr [eax + 0x56]; 
0x000fc7dd: or byte ptr [ebx - 0x72ebdbbc], cl; adc byte ptr [edx], 0x49; stc; call dword ptr [eax + 0x56]; 
0x000fca92: or byte ptr [ebx - 0x72ebdbbc], cl; cmp ch, 0x48; stc; call dword ptr [eax + 0x56]; 
0x000fc926: or byte ptr [ebx - 0x72ebdbbc], cl; or byte ptr [edx], 0x49; stc; call dword ptr [eax + 0x56]; 
0x000f66f6: or byte ptr [ebx - 0x72ebdbbc], cl; xor byte ptr [edi + 0x48], 0xf9; call dword ptr [eax - 1]; 
0x00152222: or byte ptr [ebx - 0x72efdbbc], cl; cwde; inc esp; popal; stc; call dword ptr [ebx - 0x73]; 
0x00153200: or byte ptr [ebx - 0x72efdbbc], cl; or dh, 0x61; stc; call dword ptr [eax + 0x51]; 
0x00153870: or byte ptr [ebx - 0x72efdbbc], cl; or dh, 0x61; stc; call dword ptr [eax + 0x57]; 
0x00163c1a: or byte ptr [ebx - 0x73], dl; push esp; and al, 0x38; push edx; call dword ptr [eax + 0xc]; 
0x000dfb98: or byte ptr [ebx - 0x73], dl; xor al, 0x46; stc; call dword ptr [eax - 0x18]; 
0x0008437b: or byte ptr [ebx - 0x73ef7c0], cl; add al, byte ptr [ebx + 0x28901e0]; xor eax, eax; ret; 
0x000374ea: or byte ptr [ebx - 0x746ff398], cl; inc esp; and al, 8; mov esp, ecx; jmp edx; 
0x0008d778: or byte ptr [ebx - 0x74f3dbb4], cl; push esp; and al, 0x10; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x0002ff97: or byte ptr [ebx - 0x74fbdbac], cl; inc eax; cmp al, 0x8b; add al, 0x90; ret; 
0x00171987: or byte ptr [ebx - 0x74fbdbbc], cl; add al, 0x90; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x0002272d: or byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [ecx - 0x16fbdbbc], cl; ret; 
0x0016464f: or byte ptr [ebx - 0x74fbdbbc], cl; inc eax; xor byte ptr [ebx + 0x448908c0], al; and al, 4; jmp edx; 
0x0011d6a1: or byte ptr [ebx - 0x76afdb84], cl; inc edi; or byte ptr [ebx - 0x7cb3dbac], cl; ret; 
0x0012449d: or byte ptr [ebx - 0x76c7dbbc], cl; inc esp; and al, 0xc; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000f0efb: or byte ptr [ebx - 0x76e3db8c], cl; shr dword ptr [ecx], cl; ret; 
0x00083333: or byte ptr [ebx - 0x76f3dbac], cl; ret; 
0x000643cb: or byte ptr [ebx - 0x7bf00005], al; xchg edx, eax; adc al, byte ptr [eax]; add byte ptr [ebx - 0x17acf314], al; ret 0xc44; 
0x0011d6a8: or byte ptr [ebx - 0x7cb3dbac], cl; ret; 
0x0019f01e: or byte ptr [ebx - 0x7cfb7c84], cl; ret; 
0x00058ba5: or byte ptr [ebx - 0x7cfefbbe], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0014f1ad: or byte ptr [ebx - 0x7d7273ab], 0xb4; lodsd eax, dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x000fa6ee: or byte ptr [ebx - 0x7f723383], cl; cmp al, 0x2f; stc; call dword ptr [eax - 1]; 
0x0012f6e6: or byte ptr [ebx - 0x8f73], cl; dec dword ptr [ebx - 0x936b]; call dword ptr [edi + 0x50]; 
0x0011532b: or byte ptr [ebx - 0x9afb81], cl; adc eax, 0x10; pop ebp; pop edi; pop ebx; ret; 
0x000814f7: or byte ptr [ebx - 0xe7dbbc], cl; je 0x81523; sbb al, 0x85; ror byte ptr [edi], 0x48; ret 0xff50; 
0x001302de: or byte ptr [ebx - 1], dl; jae 0x130313; call eax; 
0x0011f95a: or byte ptr [ebx], 0; add byte ptr [ebx - 0x7c72f714], al; not byte ptr [ecx - 7]; call dword ptr [eax + 0x57]; 
0x00127226: or byte ptr [ebx], 0x56; stc; call dword ptr [eax + 0x57]; 
0x000fe447: or byte ptr [ebx], al; add byte ptr [ecx - 0x71b4b], cl; dec dword ptr [ecx - 0x2f7f723a]; and ch, ch; call dword ptr [eax - 0x73]; 
0x000fd55a: or byte ptr [ebx], al; add byte ptr [ecx - 0x71b73], cl; dec dword ptr [ecx - 0x2f7f723f]; and ch, ch; call dword ptr [eax - 0x73]; 
0x0009426a: or byte ptr [ebx], bh; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0009fa76: or byte ptr [ebx], dl; pop ebx; pop esi; ret; 
0x000758d6: or byte ptr [ecx + 0x10892048], cl; pop ebx; ret; 
0x0011f5a4: or byte ptr [ecx + 0x1b801], cl; add byte ptr [eax], al; ret; 
0x0003661d: or byte ptr [ecx + 0x1cc483d0], cl; ret 4; 
0x00039283: or byte ptr [ecx + 0x24448b03], cl; add al, 0x83; ret; 
0x000779cc: or byte ptr [ecx + 0x244c8bc8], cl; adc cl, al; clc; add cl, byte ptr [edi]; scasd eax, dword ptr es:[edi]; ret 0x2999; 
0x00025c45: or byte ptr [ecx + 0x29008bf2], cl; ret 0xfa83; 
0x0017317d: or byte ptr [ecx + 0x39082444], cl; ret 0x9774; 
0x00025738: or byte ptr [ecx + 0x39242454], cl; ret; 
0x00091148: or byte ptr [ecx + 0x40], 0xf9; call dword ptr [eax - 0x73]; 
0x0011df93: or byte ptr [ecx + 0x418b0447], cl; add al, 0x89; ret; 
0x0009a625: or byte ptr [ecx + 0x43891053], cl; add al, 0x5b; pop esi; pop edi; ret; 
0x000b3229: or byte ptr [ecx + 0x448b0350], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000afdc6: or byte ptr [ecx + 0x448b0350], cl; and al, 8; pop esi; ret; 
0x00081f71: or byte ptr [ecx + 0x4c48302], cl; pop ebx; pop esi; ret; 
0x00081ed2: or byte ptr [ecx + 0x4c48308], cl; pop ebx; pop esi; ret; 
0x0007c591: or byte ptr [ecx + 0x4c483f0], cl; pop ebx; pop esi; ret; 
0x0016363b: or byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x000cb179: or byte ptr [ecx + 0x536c247c], cl; push ebp; mov eax, dword ptr [esp + 0x34]; call eax; 
0x000dd680: or byte ptr [ecx + 0x538b0853], cl; or al, 0x89; push ebx; or al, 0x5b; ret; 
0x000758d0: or byte ptr [ecx + 0x58890450], cl; or byte ptr [ecx + 0x10892048], cl; pop ebx; ret; 
0x0002f855: or byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x000a1c54: or byte ptr [ecx + 0x5f5e5bf0], cl; pop ebp; ret; 
0x000c1b12: or byte ptr [ecx + 0x5f5e5bf8], cl; pop ebp; ret; 
0x000ed2be: or byte ptr [ecx + 0x6a016ac6], cl; xor byte ptr [ebx - 0x17dfdba4], cl; ret 0xf32e; 
0x000758a2: or byte ptr [ecx + 0x8508910], cl; mov dword ptr [eax + 0x20], ecx; ret; 
0x001595fa: or byte ptr [ecx + 0x873ff03], cl; push esi; call dword ptr [ebx + 0xc]; 
0x0019d8d8: or byte ptr [ecx + 0x9424ac], 0; add byte ptr [ecx], cl; ret 0xbc89; 
0x00199774: or byte ptr [ecx + 0x9cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 4; 
0x000a606d: or byte ptr [ecx + 0x9eb83d0], cl; lea ecx, [edx + 9]; jne 0xa5ed1; pop ebx; ret; 
0x0019b2ff: or byte ptr [ecx + 0xacc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 4; 
0x00100f37: or byte ptr [ecx + 0xacc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000a608f: or byte ptr [ecx + 0xaeb83d0], cl; lea ecx, [edx + 0xa]; jne 0xa5ed1; pop ebx; ret; 
0x0019cfb9: or byte ptr [ecx + 0xbcc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 4; 
0x0003ac14: or byte ptr [ecx + 0xc5689f0], cl; add esp, 0x34; pop ebx; pop esi; ret 4; 
0x000a60cd: or byte ptr [ecx + 0xceb83d0], cl; lea ecx, [edx + 0xc]; jne 0xa5ed1; pop ebx; ret; 
0x00133b54: or byte ptr [ecx + 0xe1], al; rol cl, 0xea; adc byte ptr [ecx + 0xf9], al; or byte ptr [edi], 0x44; ret 0x8dc3; 
0x000ca3e8: or byte ptr [ecx + 0xfffffe3], al; add byte ptr [ecx], al; ret; 
0x00037988: or byte ptr [ecx + 8], bh; call dword ptr gs:[0x10]; 
0x000e0c9a: or byte ptr [ecx + ecx*8 - 0x3fce208b], al; pop ebx; ret; 
0x00035f77: or byte ptr [ecx - 0x100001], bh; sub ecx, eax; xor eax, ecx; shr eax, 0x1f; ret; 
0x00095db9: or byte ptr [ecx - 0x117af039], cl; add al, byte ptr [eax]; add byte ptr [ebx - 0x15f73], cl; jmp dword ptr [ebp - 0x5f]; 
0x001047d7: or byte ptr [ecx - 0x13f7b], cl; dec dword ptr [ecx - 0x14743]; jmp dword ptr [ebp - 0x5f]; 
0x00104e81: or byte ptr [ecx - 0x14f6b], cl; call dword ptr [edx - 0x7d]; 
0x0006b84e: or byte ptr [ecx - 0x16e122e9], cl; ret; 
0x000376d0: or byte ptr [ecx - 0x16fbdbbc], cl; add al, byte ptr [eax]; add byte ptr [ebp + 0xb6], cl; add byte ptr [ebx - 0x1337f], cl; jmp dword ptr [ebp - 0x75]; 
0x00141163: or byte ptr [ecx - 0x177414ed], cl; sub dword ptr [eax], -1; jmp dword ptr [esi - 0x70]; 
0x0002e2cf: or byte ptr [ecx - 0x1bb6b], cl; call dword ptr [esi + 0x51]; 
0x00033653: or byte ptr [ecx - 0x1d76b], cl; call dword ptr [eax - 1]; 
0x000ab5dc: or byte ptr [ecx - 0x2f76f7be], cl; ret; 
0x00077090: or byte ptr [ecx - 0x2fd643bb], cl; push eax; push edx; push edi; call dword ptr [ebx + 0x38]; 
0x00131345: or byte ptr [ecx - 0x373edbcc], cl; or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x00084824: or byte ptr [ecx - 0x3776efbe], cl; ret; 
0x0009a43d: or byte ptr [ecx - 0x3e05fe08], cl; clc; add eax, dword ptr [ecx]; ret 0x38b; 
0x0008483f: or byte ptr [ecx - 0x3fceefb0], cl; ret; 
0x0008464b: or byte ptr [ecx - 0x3fcef3b0], cl; ret; 
0x0010446b: or byte ptr [ecx - 0x3fcefbb0], cl; ret; 
0x00080c16: or byte ptr [ecx - 0x3fcefbba], cl; pop ebx; pop esi; pop edi; ret; 
0x001040f1: or byte ptr [ecx - 0x3fcefbbd], cl; pop ebx; pop esi; pop edi; ret; 
0x000d748e: or byte ptr [ecx - 0x47fbdbbc], cl; or byte ptr [ecx], al; add byte ptr [eax], al; mov dword ptr [esp + 8], ecx; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x00035412: or byte ptr [ecx - 0x50f0fbb9], cl; ret 0x6c8b; 
0x000da053: or byte ptr [ecx - 0x567a7239], cl; inc ebp; stc; call dword ptr [eax + 0x53]; 
0x000fdd24: or byte ptr [ecx - 0x6d76b], cl; call dword ptr [eax - 1]; 
0x0012e36e: or byte ptr [ecx - 0x76e3dbbc], cl; ret; 
0x0014b753: or byte ptr [ecx - 0x76efdbac], cl; ret 0xeac1; 
0x0015e4cc: or byte ptr [ecx - 0x76f7dbb4], cl; inc esp; and al, 4; jmp edx; 
0x000b266d: or byte ptr [ecx - 0x776f7be], cl; pop ebx; pop edi; ret; 
0x000ab47c: or byte ptr [ecx - 0x776f7be], cl; pop edi; ret; 
0x0007bc8e: or byte ptr [ecx - 0x7c72f7bb], cl; rcr byte ptr [ecx], 0xe5; call dword ptr [eax - 0x73]; 
0x00030cbc: or byte ptr [ecx - 0x7f724fab], cl; cmp ch, byte ptr [edi]; stc; call dword ptr [eax + 0x53]; 
0x001408a7: or byte ptr [ecx - 0x7ff7db84], al; add byte ptr [eax], al; add byte ptr [edi], cl; inc edx; ret 0x8dc3; 
0x0012f825: or byte ptr [ecx - 0x836b], cl; call dword ptr [edx + 0x56]; 
0x0012ec4a: or byte ptr [ecx - 0x976b], cl; call dword ptr [edx + 0x53]; 
0x0002f2a2: or byte ptr [ecx - 0xe36b], cl; call dword ptr [ecx + 0x50]; 
0x0009a554: or byte ptr [ecx - 1], dl; jae 0x9a57d; call eax; 
0x00095323: or byte ptr [ecx], ah; ret; 
0x00164aad: or byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [edx], ch; push esi; call dword ptr [eax + 0x14]; 
0x000d75e0: or byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000d7494: or byte ptr [ecx], al; add byte ptr [eax], al; mov dword ptr [esp + 8], ecx; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x00104f6a: or byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x00082946: or byte ptr [ecx], al; add byte ptr [eax], al; ret; 
0x00104ff0: or byte ptr [ecx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x0014d8e6: or byte ptr [ecx], al; je 0x14d90d; add esp, 0xc; ret; 
0x00094b7d: or byte ptr [ecx], al; lds edi, ptr [ecx]; ret; 
0x0009e5de: or byte ptr [ecx], al; ret 0x5489; 
0x000357dc: or byte ptr [ecx], al; ret 0x8952; 
0x0016b226: or byte ptr [ecx], al; ret; 
0x000ca6cc: or byte ptr [ecx], al; rol dword ptr [ecx], cl; ret; 
0x000622d8: or byte ptr [ecx], al; ror dword ptr [ebp + 0x8d04], 0; add byte ptr [ecx - 0x51773], cl; call dword ptr [eax + 0x53]; 
0x00084622: or byte ptr [ecx], al; xor eax, eax; ret; 
0x00087dd7: or byte ptr [ecx], bh; inc esp; and al, 4; sete al; movzx eax, al; ret; 
0x00151aa2: or byte ptr [ecx], bh; ret 0x1074; 
0x00185980: or byte ptr [ecx], bh; ret 0x1d72; 
0x00168195: or byte ptr [ecx], bh; ret 0x2675; 
0x001674d4: or byte ptr [ecx], bh; ret 0x2775; 
0x00181710: or byte ptr [ecx], bh; ret 0x2972; 
0x00169645: or byte ptr [ecx], bh; ret 0x4675; 
0x00167a4a: or byte ptr [ecx], bh; ret 0x5175; 
0x000e2421: or byte ptr [ecx], bh; ret 0x830f; 
0x00104b45: or byte ptr [ecx], bh; ret 0x840f; 
0x000390ce: or byte ptr [ecx], bh; ret 0x8e0f; 
0x00173181: or byte ptr [ecx], bh; ret 0x9774; 
0x0009bdc0: or byte ptr [ecx], bh; ret 0xeb75; 
0x000957b8: or byte ptr [ecx], bh; ret 0xf375; 
0x0006e9a3: or byte ptr [ecx], bh; ret; 
0x0015d69e: or byte ptr [ecx], bh; ror byte ptr [edi], 1; dec edi; ret 0x8966; 
0x0009824f: or byte ptr [ecx], bh; ror dword ptr [edi], cl; xchg ebp, eax; ret 0xe083; 
0x00144a84: or byte ptr [ecx], ch; fldenv [esi - 0x3f]; ret 0xf08; 
0x0007ca4a: or byte ptr [ecx], ch; ret 0x352; 
0x000d136f: or byte ptr [ecx], ch; ret 0xd929; 
0x0007d704: or byte ptr [ecx], ch; ret 0xfa39; 
0x00147ecc: or byte ptr [ecx], ch; ret; 
0x00151fc9: or byte ptr [ecx], cl; fisub dword ptr [ecx]; ret 0x448b; 
0x00124387: or byte ptr [ecx], dh; call dword ptr [edi + 0x56]; 
0x000fe442: or byte ptr [ecx], dh; fisttp dword ptr [ebx + 0x4308b0]; add byte ptr [ecx - 0x71b4b], cl; dec dword ptr [ecx - 0x2f7f723a]; and ch, ch; call dword ptr [eax - 0x73]; 
0x0010b028: or byte ptr [ecx], dh; leave; call dword ptr gs:[0x10]; 
0x000d7078: or byte ptr [ecx], dh; leave; mov eax, 0x196; not ebx; lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x0008481e: or byte ptr [ecx], dh; leave; or dword ptr [edx + 8], 8; mov dword ptr [edx + 0x10], eax; mov eax, ecx; ret; 
0x0007cb06: or byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0015c170: or byte ptr [ecx], dh; ret 0xc889; 
0x0015bff2: or byte ptr [ecx], dh; ret 0xe281; 
0x000872d7: or byte ptr [ecx], dh; sar byte ptr [eax + 0xaf], cl; mov ebx, 2; mov esi, 8; call dword ptr gs:[0x10]; 
0x000875c6: or byte ptr [ecx], dh; sar byte ptr [eax + 0xaf], cl; mov esi, 8; call dword ptr gs:[0x10]; 
0x00119741: or byte ptr [ecx], dl; add byte ptr [ebx - 0x77], dl; ret; 
0x000d729b: or byte ptr [edi + 0x53], dl; call eax; 
0x000a9ef5: or byte ptr [edi + 0x5b], bl; ret; 
0x000ac0ed: or byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000c9c97: or byte ptr [edi + 0x5e], bl; ret; 
0x0017112b: or byte ptr [edi + 0xf], dh; mov eax, edx; mov edx, dword ptr [ecx - 0xc8]; shl eax, 5; lea eax, [eax + edx + 0x64]; ret; 
0x000c2b66: or byte ptr [edi + ebp*8 - 0x75], dh; pop ebp; sar byte ptr [ecx], 1; ret; 
0x000913ac: or byte ptr [edi + ecx], dl; xchg dword ptr [ebx + eax - 0x58180000], ebx; ret; 
0x0017e48a: or byte ptr [edi - 0x18], bl; push 0x81ffff39; ret; 
0x0015a7de: or byte ptr [edi - 0x75], dl; inc esp; and al, 0x28; call dword ptr [eax + 0x18]; 
0x0011f7e9: or byte ptr [edi - 7], cl; call dword ptr [eax + 0x57]; 
0x0002eabb: or byte ptr [edi], 0x2d; stc; call dword ptr [eax - 0x18]; 
0x00133aa1: or byte ptr [edi], 0x44; ret 0x8dc3; 
0x0012d516: or byte ptr [edi], 0x57; stc; call dword ptr [eax - 1]; 
0x00104893: or byte ptr [edi], 0x85; pop ss; add al, 0; add dh, dh; ret 0xf02; 
0x000e7427: or byte ptr [edi], 0xa3; ret 0x830f; 
0x0010ab24: or byte ptr [edi], 0xa3; ret 0xdc73; 
0x00053640: or byte ptr [edi], 0xb6; push eax; or al, 0x89; sal esi, 1; ret 0xf40; 
0x00052794: or byte ptr [edi], 0xb6; push eax; or al, 0xf6; ret 0xf40; 
0x0010c85a: or byte ptr [edi], cl; inc esp; ret 0x4589; 
0x000dd962: or byte ptr [edi], cl; lahf; ret; 
0x0007e6f6: or byte ptr [edi], cl; mov dh, 0xc0; pop ebx; neg eax; ret; 
0x0015aadc: or byte ptr [edi], cl; mov dh, 0xc0; pop ebx; ret; 
0x0012097b: or byte ptr [edi], cl; mov dh, 0xc8; shrd eax, edx, 0xc; xor al, al; or eax, ecx; ret; 
0x0018c8bb: or byte ptr [edi], cl; mov dh, 2; sub eax, ecx; pop ebp; ret; 
0x0018b102: or byte ptr [edi], cl; mov dh, 2; sub eax, ecx; ret; 
0x00119fc2: or byte ptr [edi], cl; mov esi, 0xe85357f8; ret; 
0x000c462b: or byte ptr [edi], cl; nop; ret 0x4e8b; 
0x0019683a: or byte ptr [edi], cl; sub byte ptr [edi], 1; add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x0019203c: or byte ptr [edi], cl; test byte ptr [edi - 0x7d000000], bl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x000abc5d: or byte ptr [edi], cl; test dword ptr [eax + ecx + 0x5e5f0000], edi; pop ebx; ret; 
0x000c9b7a: or byte ptr [edi], cl; test dword ptr [edi], ebx; add dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; ret; 
0x000980d7: or byte ptr [edi], cl; xchg ebp, eax; ret 0xe083; 
0x0009797d: or byte ptr [edi], cl; xchg ebp, eax; ret; 
0x00121899: or byte ptr [edi], cl; xchg ebp, eax; rol byte ptr [ebx - 0x49f0d33c], 0xc0; neg eax; ret; 
0x00121858: or byte ptr [edi], cl; xchg ebp, eax; rol byte ptr [ebx - 0x49f0e33c], 0xc0; neg eax; ret; 
0x000fb3d8: or byte ptr [edi], cl; xchg ebp, eax; ror byte ptr [edi], 0xb6; sal bh, 0xd8; ret; 
0x00127a9c: or byte ptr [edi], cl; xchg edi, eax; ror byte ptr [edi], 0xb6; sal bh, 0xd8; ret; 
0x001167d7: or byte ptr [edx + 0x100], bh; mov word ptr [eax + 0x16], dx; ret; 
0x00083b2c: or byte ptr [edx + 0x21], bh; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00102f9c: or byte ptr [edx + 0x4a], 0xf9; call dword ptr [eax - 0x18]; 
0x0010551e: or byte ptr [edx + 0x50], dl; call dword ptr [ecx + 0x20]; 
0x0015e605: or byte ptr [edx + 0x6a], dl; add eax, 0xcc838d50; jb 0x15e608; call dword ptr [eax - 0x18]; 
0x00164095: or byte ptr [edx + 0x6a], dl; add eax, 0xcc838d50; jb 0x164098; call dword ptr [eax - 0x18]; 
0x000b31b8: or byte ptr [edx + 0x70880276], cl; add cl, byte ptr [ebx + 0x5b0c2444]; pop esi; ret; 
0x00127a9a: or byte ptr [edx + 8], dh; seta al; movzx eax, al; neg eax; ret; 
0x0007b534: or byte ptr [edx + edi*8 - 1], cl; add esp, 0x14; xor eax, eax; pop ebx; pop esi; ret; 
0x0014c8ab: or byte ptr [edx + esi + 0x31], dh; leave; mov eax, ecx; pop ebx; pop esi; ret; 
0x00114177: or byte ptr [edx - 0x18], dl; ret 0xf0bf; 
0x0007e970: or byte ptr [edx - 1], ch; push dword ptr [eax]; mov eax, dword ptr [ebp - 0x2c]; call dword ptr [eax + 0xc]; 
0x00077505: or byte ptr [edx - 1], ch; push dword ptr [edi]; call dword ptr [eax + 0xc]; 
0x000fc92c: or byte ptr [edx], 0x49; stc; call dword ptr [eax + 0x56]; 
0x0015e4c5: or byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebx + 0x4c8908c0], al; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x00094407: or byte ptr [edx], al; add byte ptr [eax], al; ret; 
0x000b4998: or byte ptr [edx], bh; or dh, byte ptr [ebp + 4]; xor eax, eax; pop ebx; ret; 
0x0015aabf: or byte ptr [edx], ch; push ebx; call dword ptr [eax + 0x14]; 
0x0003a837: or byte ptr [edx], ch; push edx; call edi; 
0x0007a29c: or byte ptr [edx], ch; push esi; call dword ptr [ebp + 8]; 
0x00070fc7: or byte ptr [edx], ch; push esi; call dword ptr [ebx + 8]; 
0x00109747: or byte ptr [edx], dl; add byte ptr [ebx - 0x75], dl; push esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000af742: or byte ptr [esi + 0xf], ah; adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000afe46: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [eax]; mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b326c: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [eax]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afde6: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [eax]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000afe07: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [eax]; mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ac9cb: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; lea eax, [edx + 0xf]; pop edi; ret; 
0x000accbc: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; lea eax, [edx + 0xf]; ret; 
0x000ab38b: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; mov eax, edi; pop edi; ret; 
0x000ab65c: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; mov eax, edx; ret; 
0x000a81c6: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x000a8306: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000a3dd6: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000a3f16: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000a80f6: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x000a8366: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000a3d26: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x000a6a9f: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; pop ebx; ret; 
0x000a3f76: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000a81e7: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x000a8327: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000a3df7: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000a3f37: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000af677: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; ret; 
0x000b283a: or byte ptr [esi + 0xf], ah; adc ecx, dword ptr [edx + 8]; mov eax, edi; pop ebx; pop edi; ret; 
0x000889cd: or byte ptr [esi + 8], bh; call dword ptr gs:[0x10]; 
0x00158346: or byte ptr [esi - 0x18], dl; ret; 
0x00149767: or byte ptr [esi - 0x3f], ah; ret 0xff08; 
0x0011151b: or byte ptr [esi - 0x77], ah; inc edx; inc edx; xor eax, eax; ret; 
0x0010fb8b: or byte ptr [esi - 0x77], ah; inc edx; xor eax, eax; ret; 
0x0017f5da: or byte ptr [esi - 0x77], ah; or cl, byte ptr [ebx + 0x5b082444]; ret; 
0x00149574: or byte ptr [esi - 0x77], ah; pop eax; inc cl; ljmp 0xc166:0xfe2c117; ret 0x6608; 
0x0019890d: or byte ptr [esi - 0x7d], bl; ret 0x830c; 
0x0009a465: or byte ptr [esi - 1], dl; jae 0x9a48e; call eax; 
0x001581a5: or byte ptr [esi - 1], dl; je 0x1581ce; adc al, 0x8b; inc esp; and al, 0x14; call eax; 
0x0007a782: or byte ptr [esi - 7], bh; call dword ptr [eax - 0x73]; 
0x000e8736: or byte ptr [esi], 0x48; stc; call dword ptr [eax - 0x18]; 
0x0002fff5: or byte ptr [esi], bl; adc al, 0; add eax, 0x1fa007; mov eax, dword ptr [eax - 0x13c]; add eax, dword ptr gs:[0]; ret; 
0x000abce6: or byte ptr ss:[eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000faa4d: or ch, 0x48; stc; call dword ptr [eax - 0x77]; 
0x0013aac5: or ch, 0x48; stc; call dword ptr [eax - 1]; 
0x00035fac: or ch, bl; inc esp; and al, 4; ret; 
0x00036122: or ch, bl; sbb al, 0x24; fld qword ptr [esp]; add esp, 8; ret; 
0x00038c68: or ch, byte ptr [edx]; push dword ptr [esp + 0x1c]; call 0x3c860; add esp, 0x1c; ret; 
0x00038c88: or ch, byte ptr [edx]; push dword ptr [esp + 0x1c]; call 0x3c960; add esp, 0x1c; ret; 
0x0008437e: or cl, al; clc; add al, byte ptr [ebx + 0x28901e0]; xor eax, eax; ret; 
0x0006ecbf: or cl, al; clc; add ch, byte ptr [ecx]; ret; 
0x00036456: or cl, bl; inc esp; and al, 4; mov dword ptr [eax], ecx; ret; 
0x00079f35: or cl, byte ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x00074465: or cl, byte ptr [ebp + 0x889044a]; mov eax, dword ptr [edx]; ret; 
0x001602cc: or cl, byte ptr [ebp - 0x6b74ff8a]; ret; 
0x0015d3f8: or cl, byte ptr [ebx + 0x3920245c]; pop eax; adc al, 0xf; xchg edi, eax; ret 0x4bd; 
0x0017f4c5: or cl, byte ptr [ebx + 0x5b082444]; ret; 
0x0007b057: or cl, byte ptr [ebx - 0x2dcef3bf]; test eax, eax; setne dl; mov eax, edx; ret; 
0x00181495: or cl, byte ptr [ebx - 0x74f7dbbc]; dec esp; and al, 0x10; add eax, ecx; pop ebx; ret; 
0x00142013: or cl, byte ptr [ebx - 0x76ebdbbc]; ret 0xc085; 
0x00173e45: or cl, byte ptr [ecx + 0x5f5e5bd8]; ret; 
0x0016d7a5: or cl, byte ptr [ecx + 0x5f5e5bf8]; ret; 
0x000305c5: or cl, byte ptr [ecx + 0xcc483d0]; ret; 
0x000fc92d: or cl, byte ptr [ecx - 7]; call dword ptr [eax + 0x56]; 
0x000f17d1: or cl, byte ptr [ecx]; or byte ptr [ebx - 0x3d7cfb40], al; add al, 0x39; ret; 
0x00144a7a: or cl, byte ptr [edi]; mov bh, 0x41; add cl, byte ptr [ecx - 0x393e9907]; or byte ptr [ecx], ch; fldenv [esi - 0x3f]; ret 0xf08; 
0x0007da6d: or cl, byte ptr [edi]; mov dh, 0; pop ebx; pop esi; pop edi; ret; 
0x0008a828: or cl, byte ptr [edi]; mov edi, 0x11c85; add byte ptr [ecx], bh; ret 0x4e0f; 
0x000abca5: or cl, byte ptr [edi]; test dword ptr [eax + ecx], esi; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000ad318: or cl, byte ptr [edi]; test dword ptr [ecx], esi; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000a5c77: or cl, byte ptr [edi]; test dword ptr [edx + 2], edx; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000fd06b: or cl, byte ptr [edi]; xchg ebp, eax; ret 0xd120; 
0x00148b81: or cl, byte ptr [edi]; xchg esp, eax; ret 0xd008; 
0x000677fd: or cl, byte ptr [edi]; xchg esp, eax; ret; 
0x00102916: or cl, byte ptr [edx - 7]; call dword ptr [eax - 0x18]; 
0x001044a2: or cl, byte ptr [edx]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0005e92e: or cl, ch; pop es; jmp 0x5e932; call dword ptr [edx - 0x73]; 
0x000fd873: or cl, ch; ret 0xfff8; 
0x000b559f: or cl, cl; jne 0xb55a5; xor eax, eax; ret; 
0x0008e4fd: or cl, dl; call 0xc039e78d; ret; 
0x0008431e: or cl, dl; clc; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00153206: or dh, 0x61; stc; call dword ptr [eax + 0x51]; 
0x0015532a: or dh, 0x61; stc; call dword ptr [eax + 0x56]; 
0x00153876: or dh, 0x61; stc; call dword ptr [eax + 0x57]; 
0x00153ff3: or dh, 0x61; stc; call dword ptr [eax - 1]; 
0x00115d63: or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00115c5f: or dh, 0x80; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x00125d40: or dh, 1; call dword ptr gs:[0x10]; 
0x00084617: or dh, bh; xor eax, eax; ret; 
0x00051915: or dh, byte ptr [eax + ebp*2 - 0x7d]; call dword ptr [eax]; 
0x00194055: or dh, byte ptr [eax + ebx - 0x48]; add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x194061; neg eax; ret; 
0x0007641d: or dh, byte ptr [eax + edx + 0x39]; retf 0xf477; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00082aea: or dh, byte ptr [ebp + 0x3e]; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0008f520: or dh, byte ptr [ebp + 0xd]; xor eax, eax; pop ebx; ret; 
0x000b499a: or dh, byte ptr [ebp + 4]; xor eax, eax; pop ebx; ret; 
0x00035ea5: or dh, byte ptr [ebp + 8]; fadd st(0); add esp, 0x18; pop ebx; ret; 
0x0008f4d2: or dh, byte ptr [ebp - 0xf]; xor eax, eax; pop ebx; ret; 
0x000eab07: or dh, byte ptr [edi + ebp - 0x7d]; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00197962: or dh, byte ptr [edx + 0x4b]; lea eax, [eax + 9]; pop edi; ret; 
0x00196922: or dh, byte ptr [edx + 0x4b]; lea eax, [edi + 9]; pop edi; ret; 
0x00193cd3: or dh, byte ptr [edx + ebx - 0x48]; add dword ptr [eax], eax; add byte ptr [eax], al; jg 0x193ce0; neg eax; ret; 
0x0015a202: or dh, byte ptr [esi - 0x3b7d0000]; adc byte ptr [ebp - 0x7c578b40], al; ret; 
0x00158f5d: or dh, dh; ret 0x7401; 
0x0008d387: or dh, dh; ret 0x7502; 
0x0009500f: or dh, dh; ret 0xf0f; 
0x000990d9: or dh, dh; ret; 
0x00133f34: or dl, al; out dx, al; jmp dword ptr [ebp - 0x75]; 
0x0011671c: or dl, byte ptr [eax + eax]; push dword ptr [esp + 0x1c]; call 0x117200; add esp, 0x1c; ret; 
0x00021406: or dword ptr [0x8bf70500], edx; and byte ptr [eax], al; mov edx, dword ptr [eax - 0xb8]; test edx, edx; je 0x21419; ret; 
0x000b58ea: or dword ptr [eax + 0x3be0], 1; xor eax, eax; pop ebx; ret; 
0x0007ff00: or dword ptr [eax + 0x3c], 0x80; mov eax, dword ptr [eax + 0x34]; test eax, eax; jne 0x7ff00; ret; 
0x0011988c: or dword ptr [eax + 0x49], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x0012b4b5: or dword ptr [eax + 0x50000048], 0xffffff8d; adc dword ptr [eax + 0x50000048], -0x73; adc dword ptr [eax], 0x67; bnd call dword ptr [eax - 0x73]; 
0x00168acf: or dword ptr [eax + 0x500000a5], 0xffffff8d; add dword ptr [esi + 0x62], -7; call dword ptr [eax + 0x6a]; 
0x0011f88a: or dword ptr [eax + 0x50], 0xfffffff9; call dword ptr [eax + 0x57]; 
0x00151856: or dword ptr [eax + 0x51], 0; add byte ptr [eax], al; call esi; 
0x00024d56: or dword ptr [eax + 0x6f], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0015163a: or dword ptr [eax + 0x92], 0; add byte ptr [eax], al; call esi; 
0x00084620: or dword ptr [eax + 8], 1; xor eax, eax; ret; 
0x0008483c: or dword ptr [eax + 8], 8; mov dword ptr [eax + 0x10], edx; xor eax, eax; ret; 
0x00116659: or dword ptr [eax + eax], edx; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011668a: or dword ptr [eax + eax], edx; mov edx, 1; mov edi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000cd580: or dword ptr [eax - 0x67], 0xfffffff9; call dword ptr [esi + 0x50]; 
0x000601f9: or dword ptr [eax - 0x76000001], 0xfffabcbd; dec dword ptr [ebx - 0x4ef43]; dec dword ptr [ecx - 0x4c77b]; dec dword ptr [ebp - 0x4c77b]; call dword ptr [eax - 0x77]; 
0x000cd202: or dword ptr [eax - 0x7cffffc3], 0xfffffff8; add dword ptr [edi + 0x24], edi; add esp, 8; pop ebx; ret; 
0x000498b6: or dword ptr [eax - 0xb], 0xffffffff; jmp ptr [ecx]; ret; 
0x0008bcf5: or dword ptr [eax], 0x40000000; xor eax, eax; ret; 
0x0011f7e8: or dword ptr [eax], 0x4f; stc; call dword ptr [eax + 0x57]; 
0x00164f0a: or dword ptr [eax], 0x65; stc; call dword ptr [eax - 0x73]; 
0x00151748: or dword ptr [eax], 0x72; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x0007a781: or dword ptr [eax], 0x7e; stc; call dword ptr [eax - 0x73]; 
0x0008bcd0: or dword ptr [eax], 0x80000000; xor eax, eax; ret; 
0x00085201: or dword ptr [eax], 0xa30f0000; ret 0x820f; 
0x00084aac: or dword ptr [eax], 0xa30f0000; ret 0x830f; 
0x0008bde3: or dword ptr [eax], 0xa30f0000; ret 0x9d72; 
0x00083253: or dword ptr [eax], 0xa30f0000; ret 0xc172; 
0x000831d1: or dword ptr [eax], 0xa30f0000; ret 0xc372; 
0x00083861: or dword ptr [eax], 0xa30f0000; ret 0xce72; 
0x000849f8: or dword ptr [eax], 0xa30f0000; ret 0xcf72; 
0x00083c0d: or dword ptr [eax], 0xa30f0000; ret 0xd272; 
0x00085372: or dword ptr [eax], 0xa30f0000; ret 0xd572; 
0x00085a41: or dword ptr [eax], 0xa30f0000; ret 0xe372; 
0x0015fc40: or dword ptr [eax], 0xffffffb1; stc; call dword ptr [eax - 0x73]; 
0x000ff21d: or dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], al; sahf; stc; call dword ptr [eax - 0x18]; 
0x000de1a2: or dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [eax], al; add al, ch; ret 0xfb4d; 
0x0010c13f: or dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0015a2d8: or dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 4], ecx; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x00022110: or dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xffffffff; add esp, 0xc; ret; 
0x00079448: or dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xffffffff; ret; 
0x00104102: or dword ptr [eax], eax; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x0002802d: or dword ptr [eax], eax; add byte ptr [ebx - 0x76e3db8c], cl; ret 0xb60f; 
0x001484d5: or dword ptr [eax], eax; add byte ptr [ebx - 0x7872f314], al; xchg esp, eax; pop edi; stc; call dword ptr [eax - 0x18]; 
0x0011f868: or dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f714], al; and dword ptr [eax - 7], edx; call dword ptr [eax + 0x57]; 
0x0011f883: or dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f714], al; dec eax; push eax; stc; call dword ptr [eax + 0x57]; 
0x0011f89e: or dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f714], al; nop; push eax; stc; call dword ptr [eax + 0x57]; 
0x0011f84d: or dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f714], al; out dx, eax; dec edi; stc; call dword ptr [eax + 0x57]; 
0x0006998f: or dword ptr [eax], eax; add byte ptr [ebx - 0xaafb14], al; je 0x699bd; inc esp; push edi; call dword ptr [eax + 0x1c]; 
0x000949b2: or dword ptr [eax], eax; add byte ptr [ecx - 0x76dfdbbc], cl; je 0x949e0; sub byte ptr [ebp - 0x6bef672], cl; jmp dword ptr [ebp - 0x5f]; 
0x000abb7b: or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000da075: or dword ptr [eax], eax; add esp, 0x10; mov eax, dword ptr [esp + 0xc]; call eax; 
0x000da1e2: or dword ptr [eax], eax; add esp, 0x10; mov eax, edi; call eax; 
0x00131303: or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x000218df: or dword ptr [ebp + 0x33], esp; add eax, 0x18; jmp eax; 
0x00141006: or dword ptr [ebp + 0x33], esp; add eax, 0x18; lea edx, [esp + 0x10]; push edx; push edi; call eax; 
0x001410d2: or dword ptr [ebp + 0x33], esp; add eax, 0x18; lea edx, [esp + 0x10]; push edx; push esi; call eax; 
0x0003ab0a: or dword ptr [ebp + 0x33], esp; add eax, 0x18; mov dword ptr [ebp + edi], edx; push dword ptr [ebx + 4]; call eax; 
0x0002196a: or dword ptr [ebp + 0x33], esp; add eax, 0x18; pop edi; pop ebp; jmp eax; 
0x001511fa: or dword ptr [ebp + 0x33], esp; add eax, 0x18; push eax; call edx; 
0x00131332: or dword ptr [ebp + 0x33], esp; add eax, 0x18; push esi; call eax; 
0x00159c74: or dword ptr [ebp + 0x63], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000abc7d: or dword ptr [ebp - 0x7af0f681], ecx; cdq; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000a5c52: or dword ptr [ebp - 0x7af0f6b6], ecx; je 0xa5c5c; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x001a0afd: or dword ptr [ebx + 0x2d], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000ce950: or dword ptr [ebx + 0x45], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000dcb43: or dword ptr [ebx + 0x46], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00138493: or dword ptr [ebx + 0x5a], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000cf92e: or dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x00123786: or dword ptr [ebx + 0x5e5b0cc4], eax; pop edi; pop ebp; ret; 
0x000fbc53: or dword ptr [ebx + 0x5e], ebx; and edx, 0xf; mov eax, edx; ret; 
0x00125c56: or dword ptr [ebx + 0x5e], ebx; pop edi; pop ebp; ret; 
0x00104433: or dword ptr [ebx + 0x66042444], ecx; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x00115a7a: or dword ptr [ebx + esi - 0x75], esi; pop esp; and al, 0x20; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00087ee6: or dword ptr [ebx - 0x2708fb3c], eax; pop ebx; pop esi; ret; 
0x00099cc9: or dword ptr [ebx - 0x2776c73c], eax; pop ebx; ret 4; 
0x0004d112: or dword ptr [ebx - 0x2776d73c], eax; pop ebx; ret 4; 
0x0015e2e0: or dword ptr [ebx - 0xa9f314], eax; rol byte ptr [ebx - 0x137cef3c], 1; or byte ptr [ebp - 0xcc0af7d], cl; call dword ptr [eax - 0x73]; 
0x00160dce: or dword ptr [ebx - 0xaaf314], eax; rol byte ptr [ebx - 0x137cef3c], 1; or byte ptr [ebp - 0xc950f7d], cl; call dword ptr [eax - 0x73]; 
0x00073266: or dword ptr [ebx - 0xf76fb3c], eax; pop ebx; pop esi; ret; 
0x000ccfd8: or dword ptr [ebx], 0x45; stc; call dword ptr [eax + 0x56]; 
0x000375e7: or dword ptr [ecx + 0x124c4], eax; add byte ptr [ebx + 0x5e], bl; ret; 
0x00021471: or dword ptr [ecx + 0x197890], ecx; add byte ptr [ebx + 0x5e], bl; ret; 
0x00044ef9: or dword ptr [ecx + 0x1e], edx; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x000b5411: or dword ptr [ecx + 0x42], eax; test al, al; jne 0xb540c; xor eax, eax; ret; 
0x00140afe: or dword ptr [ecx + 0x4e0c1d8], ecx; lea eax, [edx + eax + 8]; pop ebx; ret; 
0x00037d22: or dword ptr [ecx + 0x94c4], eax; add byte ptr [ebx + 0x5f], bl; ret; 
0x00084730: or dword ptr [ecx + 8], 0x40; xor eax, eax; mov dword ptr [ecx + 4], edx; ret; 
0x0014885c: or dword ptr [ecx + esi*8 - 0x7c], esi; ror byte ptr [edi], 0x94; ret 0xa3c; 
0x001489e4: or dword ptr [ecx + esi*8 - 0x7d], esi; in al, dx; or byte ptr [ebp - 0x6d0c579], cl; call dword ptr [eax + 0x56]; 
0x00171629: or dword ptr [ecx - 0x76dbdbbc], ecx; ret; 
0x00150dbd: or dword ptr [ecx - 0x7cfb6cbc], ecx; ret 0x8301; 
0x000949bf: or dword ptr [ecx - 7], eax; jmp dword ptr [ebp - 0x5f]; 
0x00172799: or dword ptr [ecx], 0xfffffff1; jmp dword ptr [ebp - 0x75]; 
0x000d7308: or dword ptr [ecx], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0009ba06: or dword ptr [ecx], eax; ret; 
0x001311f6: or dword ptr [ecx], edi; dec eax; add al, 0x75; hlt; mov eax, dword ptr [eax + 0x18]; ret; 
0x0009a7d8: or dword ptr [ecx], edi; ret 0x3374; 
0x0016adb5: or dword ptr [ecx], edi; ret; 
0x000971e5: or dword ptr [ecx], edi; ror byte ptr [ecx + 0xf78246c], 1; inc edi; ret 0x548b; 
0x000b4474: or dword ptr [ecx], edi; sal byte ptr [edi - 0x31], 1; sub eax, esi; pop ebx; pop esi; ret; 
0x0014a1f2: or dword ptr [ecx], esi; fild dword ptr [eax + 0xf2eff78]; xchg esp, eax; ret; 
0x00023b8a: or dword ptr [edi + 0x2a], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000ad800: or dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x000f02d3: or dword ptr [edi + edi*8 + 0x5bf889ff], ebx; pop esi; pop edi; ret; 
0x0018060a: or dword ptr [edi - 0x18], ebx; call 0x82180529; ret; 
0x000fd86c: or dword ptr [edi], 0; add byte ptr [edi], cl; mov dh, 0x4a; or cl, ch; ret 0xfff8; 
0x00138bcb: or dword ptr [edi], ecx; inc edi; ret 0xf983; 
0x0014df74: or dword ptr [edi], ecx; lahf; ret; 
0x000f6797: or dword ptr [edi], ecx; mov dh, 0xc; js 0xc0926dad; add dword ptr [ecx], edi; ret 0xda75; 
0x000abc80: or dword ptr [edi], ecx; test dword ptr [ecx + 0x5f000008], ebx; pop esi; pop ebx; ret; 
0x000a5c55: or dword ptr [edi], ecx; test dword ptr [edx + eax], esi; add byte ptr [edi + 0x5b], bl; ret; 
0x000c68d6: or dword ptr [edi], ecx; xchg byte ptr [ebp - 0x7400000b], al; test dword ptr [ecx + ecx*8 - 0x137c0001], esi; or byte ptr [ebp - 0x35f48], cl; call dword ptr [edi + 0x53]; 
0x0004e0fc: or dword ptr [edi], ecx; xchg ch, bh; add dword ptr [eax], eax; add byte ptr [ebx - 0x362f43], al; call dword ptr [eax]; 
0x000401f5: or dword ptr [edi], ecx; xchg edi, eax; ret 0xd284; 
0x0009b102: or dword ptr [edi], ecx; xchg esi, eax; ret 0xb60f; 
0x0012842f: or dword ptr [edi], ecx; xchg esi, eax; ret; 
0x000eb53a: or dword ptr [edx + 0x48], 0xfffffff9; call dword ptr [eax + 0x55]; 
0x00197952: or dword ptr [edx + 0x5b], esi; lea eax, [eax + 8]; pop edi; ret; 
0x00196912: or dword ptr [edx + 0x5b], esi; lea eax, [edi + 8]; pop edi; ret; 
0x0016e391: or dword ptr [edx + 0x66], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00084821: or dword ptr [edx + 8], 8; mov dword ptr [edx + 0x10], eax; mov eax, ecx; ret; 
0x00171e70: or dword ptr [edx + eax*4], ebx; xor eax, eax; pop ebx; ret; 
0x00038178: or dword ptr [edx + ebx*4], eax; xor eax, eax; pop ebx; ret; 
0x001480c1: or dword ptr [edx + ecx - 0x7d], esi; ret; 
0x000698a3: or dword ptr [edx], 0xec830000; add al, 0x55; push dword ptr [esp + 0x44]; push edi; call dword ptr [ebx + 0x1c]; 
0x001096e7: or dword ptr [edx], edx; add byte ptr [ebx - 0x75], dl; push esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00123717: or dword ptr [esi + 0x5b], ebx; jl 0x216d0; ret; 
0x000b3ed3: or dword ptr [esi + 0xf], esp; xlatb; ret 0xc085; 
0x00196bb3: or dword ptr [esi + 0xf], esp; xlatb; rol dword ptr [ebp + 0x30850fc0], 2; add byte ptr [eax], al; xor eax, eax; ret; 
0x000b3f43: or dword ptr [esi + 0xf], esp; xlatb; rol dword ptr [ebp + 0x317475c0], 0xc0; ret; 
0x000719fc: or dword ptr [esi], 0x20; add esp, 4; pop ebx; pop esi; ret; 
0x000e60d4: or dword ptr [esi], 0x48; stc; call dword ptr [eax - 0x18]; 
0x0015e618: or dword ptr [esi], 0x64; stc; call dword ptr [eax - 0x73]; 
0x00081553: or dword ptr [esi], 8; add esp, 0x14; pop ebx; pop esi; ret; 
0x00021dce: or eax, 0x14; jne 0x21dd9; add esp, 0x1c; ret; 
0x000cbcde: or eax, 0x14; jne 0xcbcea; add esp, 0x28; pop ebx; ret; 
0x000a5cc9: or eax, 0x200850f; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0008bbc0: or eax, 0x2890f00; xor eax, eax; ret; 
0x0015923d: or eax, 0x3157000d; call dword ptr [esi - 0x42]; 
0x00099afc: or eax, 0x402448b; sub ecx, 4; and eax, 1; cmovne eax, ecx; pop ebx; ret; 
0x00197982: or eax, 0x408d2b72; or al, 0x5f; ret; 
0x000908bd: or eax, 0x438b9066; or al, 0x89; fiadd dword ptr [ebp - 0x76e58b40]; ret; 
0x00150e21: or eax, 0x44ec8100; add dword ptr [eax], eax; add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00196942: or eax, 0x478d2b72; or al, 0x5f; ret; 
0x001a0a3e: or eax, 0x500cec83; call edx; 
0x000c710d: or eax, 0x538b9066; add al, 0x83; ret; 
0x0003ac52: or eax, 0x5b04c483; pop esi; ret; 
0x001302c2: or eax, 0x5b08c483; ret; 
0x001097d9: or eax, 0x5b54c483; pop esi; ret; 
0x00109899: or eax, 0x5b64c483; pop esi; ret; 
0x00073682: or eax, 0x5bf4658d; pop esi; pop edi; pop ebp; ret; 
0x001238a2: or eax, 0x5d5f5e5b; ret; 
0x0015873a: or eax, 0x5e5bc031; pop edi; ret; 
0x0015c9ca: or eax, 0x5ec0315b; pop edi; ret; 
0x000ada81: or eax, 0x5f1d478d; pop esi; pop ebx; ret; 
0x001517cf: or eax, 0x61; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x00092f77: or eax, 0x70870500; sbb dword ptr [eax], eax; mov dword ptr [eax + 0x3b04], 0; ret; 
0x0009dd8b: or eax, 0x73c38100; ret 0x18; 
0x000ac358: or eax, 0x77f0ff3; movdqu xmmword ptr [edi + 0xd], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b352b: or eax, 0x7f0ff3; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b0058: or eax, 0x7f0ff3; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0015bee8: or eax, 0x8100015f; ret; 
0x001225e8: or eax, 0x810004f8; ret; 
0x000abd07: or eax, 0x812850f; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000b0061: or eax, 0x824448b; pop esi; ret; 
0x000fc1c4: or eax, 0x8300768d; ret 0xd101; 
0x0013160a: or eax, 0x8301478d; ret; 
0x0009df6e: or eax, 0x830a8890; ret 0x8301; 
0x0011fa61: or eax, 0x838d0000; push ebx; push esp; stc; call dword ptr [edx + 0x52]; 
0x000fc7d7: or eax, 0x83fffffe; in al, dx; or byte ptr [ebx - 0x72ebdbbc], cl; adc byte ptr [edx], 0x49; stc; call dword ptr [eax + 0x56]; 
0x0005e361: or eax, 0x858b0000; mov eax, 0x8bfffffb; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xf001; 
0x0004819f: or eax, 0x85fffffb; ror byte ptr [edi], 0x94; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x0002e93d: or eax, 0x89000010; ret 0x858b; 
0x001311a5: or eax, 0x89ac458b; inc ebp; mov ah, 0x89; ret; 
0x000ad3aa: or eax, 0x89f850f; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000827ca: or eax, 0x8a165; add byte ptr [eax], al; mov byte ptr [eax + 0x4fe], 0; ret; 
0x00125c41: or eax, 0x8b000000; push esp; and al, 0x18; call dword ptr gs:[0x10]; 
0x00158e48: or eax, 0x8b0cec83; push eax; add al, 0x50; call dword ptr [edx + 0x10]; 
0x0005e3c3: or eax, 0x8bfffff1; test dword ptr [edx + edi*8 - 1], esp; jmp dword ptr [ebp - 0x75]; 
0x0004158f: or eax, 0x8bfffff6; jl 0x415ba; sub al, 0x8d; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x0014e208: or eax, 0x8dffffff; sbb dword ptr [eax - 0x53], -7; call dword ptr [eax - 0x73]; 
0x00034555: or eax, 0x948b6877; mov bl, 0; je 0x34556; inc dword ptr [ecx]; fidivr dword ptr [esi]; jmp edx; 
0x000d8d6a: or eax, 0xb8000001; fadd qword ptr [eax]; add byte ptr [eax], al; cmovae esi, ecx; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000b3534: or eax, 0xc24448b; pop ebx; pop esi; ret; 
0x00023f59: or eax, 0xc4830009; or al, 0x89; inc ebp; fmul qword ptr [ebp - 0x2078df7d]; call dword ptr [eax - 0x73]; 
0x0008e22a: or eax, 0xc6b83f0; add dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x000a6a3b: or eax, 0xcd840f00; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0009dd1b: or eax, 0xe3c38100; ret 0x18; 
0x0015cccf: or eax, 0xe8fff817; sbb byte ptr [ebp - 3], ch; jmp dword ptr [esi - 0x70]; 
0x001508bb: or eax, 0xebc1fff9; add edi, dword ptr [esi]; jmp ecx; 
0x0004a212: or eax, 0xebfc7e8b; ret; 
0x000fd1c9: or eax, 0xec830000; or byte ptr [ebp - 0x67343], cl; call dword ptr [edi - 1]; 
0x000cc5d0: or eax, 0xf000000; inc edi; ret 0x960f; 
0x000a5cc6: or eax, 0xf0d4a8d; test dword ptr [eax], eax; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x000ad3a7: or eax, 0xf0d7f8d; test dword ptr [edi + 0x5f000008], ebx; pop esi; pop ebx; ret; 
0x000abd04: or eax, 0xf0d7f8d; test dword ptr [edx], edx; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0008c901: or eax, 0xff087b81; leave; lcall 1, 0x31870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x0008cb84: or eax, 0xff087e81; leave; lcall 0, 0xce870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x6174; 
0x00035be8: or eax, 0xffff8000; inc eax; shr eax, 0x1f; ret; 
0x0008ea81: or eax, 1; pop esi; pop edi; pop ebp; ret; 
0x0008467d: or eax, 2; mov dword ptr [ecx + 8], eax; xor eax, eax; ret; 
0x000852a1: or eax, 2; mov edx, eax; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00057a60: or eax, 7; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x0009be31: or eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000de882: or eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0008f4f0: or eax, dword ptr [eax]; add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; ret; 
0x00125a4e: or eax, dword ptr [eax]; add byte ptr [eax], al; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x0015a2f2: or eax, dword ptr [eax]; add byte ptr [eax], al; pop ebx; ret; 
0x0011f991: or eax, dword ptr [eax]; add byte ptr [ebp - 0x6adc37d], cl; call dword ptr [ecx + 0x51]; 
0x00075047: or eax, dword ptr [eax]; add byte ptr [ebx - 0x3b7cef3c], al; add al, 0x5b; pop esi; ret; 
0x0011f925: or eax, dword ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; cdq; push ecx; stc; call dword ptr [eax + 0x57]; 
0x0011f95b: or eax, dword ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; not byte ptr [ecx - 7]; call dword ptr [eax + 0x57]; 
0x0011f940: or eax, dword ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; rcl byte ptr [ecx - 7], cl; call dword ptr [eax + 0x57]; 
0x0011f976: or eax, dword ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; sbb dword ptr [edx - 7], edx; call dword ptr [eax + 0x57]; 
0x000583be: or eax, dword ptr [eax]; add esp, 0x1c; ret; 
0x00197aae: or eax, dword ptr [eax]; je 0x197b32; mov eax, 0xc; pop edi; ret; 
0x000b6266: or eax, dword ptr [eax]; pop edx; pop ecx; push ebx; push dword ptr [edi]; call esi; 
0x001780a8: or eax, dword ptr [eax]; push ebx; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000de69e: or eax, dword ptr [ebp - 0x7c128a25]; rol byte ptr [ecx], 0x39; ret 0xee75; 
0x000ccfd9: or eax, dword ptr [ebp - 7]; call dword ptr [eax + 0x56]; 
0x00121f67: or eax, dword ptr [ebx + 0x4e7426fa]; pop ebx; pop esi; ret; 
0x00075ef8: or eax, dword ptr [ebx + 0x5e5b04c4]; ret; 
0x0009e0a4: or eax, dword ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x00020f40: or eax, dword ptr [ebx + 0x7400d07d]; sbb eax, 0xff0cec83; jne 0x20f19; call dword ptr [ebp - 0x38]; 
0x00140e23: or eax, dword ptr [ebx - 0x3d7efe17]; add dl, cl; lcall 0x4c85, 0x8d82eb3b; test al, 0xf9; call dword ptr [eax - 0x73]; 
0x0015a1b4: or eax, dword ptr [ebx - 0x3fcefb3c]; pop ebx; pop esi; ret; 
0x0008911a: or eax, dword ptr [ebx - 0x78f0f408]; mov al, byte ptr [0xbafffffc]; or dword ptr [eax], 0xa30f0000; ret 0x830f; 
0x00075535: or eax, dword ptr [ecx + 0x14cc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0016da4f: or eax, dword ptr [ecx + 0x1bcc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00037b01: or eax, dword ptr [ecx + 0x9cc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00057ca1: or eax, dword ptr [ecx + 0xbcc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00058e4a: or eax, dword ptr [ecx + 0xccc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000d7800: or eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000d7732: or eax, dword ptr [ecx]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x74]; mov edx, edi; call dword ptr gs:[0x10]; 
0x00086684: or eax, dword ptr [esp + 8]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x001578b9: or eax, ebp; sal dword ptr [edi + edi*8 + 0x1cc483ff], 1; ret; 
0x001578d8: or eax, ebp; xor byte ptr [ebp - 0x3b7c0001], 0x1c; ret; 
0x00035bd7: or eax, ecx; ret; 
0x0003627d: or eax, ecx; sar eax, 0x1f; not eax; and eax, edx; ret; 
0x00164264: or eax, edi; add eax, dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00133add: or eax, edx; bswap eax; mov dword ptr [ecx], eax; mov eax, ecx; ret 4; 
0x00071b8d: or eax, edx; mov dword ptr [ebx], eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x00116145: or eax, edx; mov dword ptr [ecx + 8], eax; xor eax, eax; pop ebx; ret; 
0x0008665d: or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x00035c17: or eax, edx; mov dword ptr [esp + 0xc], eax; fld xword ptr [esp + 4]; ret; 
0x000362e7: or eax, edx; mov dword ptr [esp + 4], eax; fld dword ptr [esp + 4]; ret; 
0x0004ca63: or eax, edx; mov dword ptr [esp + 4], eax; fld qword ptr [esp]; add esp, 0xc; ret; 
0x00035fa7: or eax, edx; mov dword ptr [esp + 8], eax; fld qword ptr [esp + 4]; ret; 
0x0004ca1a: or eax, edx; mov dword ptr [esp], eax; fld dword ptr [esp]; add esp, 4; ret; 
0x001259fa: or eax, edx; mov edx, dword ptr [esp + 0x6c]; sub edx, dword ptr gs:[0x14]; jne 0x125a14; add esp, 0x7c; ret; 
0x0017497f: or eax, edx; pop ebx; movzx eax, al; neg eax; ret; 
0x00104155: or eax, edx; pop ebx; ret; 
0x00120963: or eax, edx; ret; 
0x0008bd48: or eax, edx; xor edx, edx; mov dword ptr [ecx], eax; mov eax, edx; ret; 
0x001209d4: or eax, esi; pop esi; pop edi; or eax, ecx; ret; 
0x0015fc38: or ebp, ebp; inc dword ptr [ebx - 0x72afef3c]; or dword ptr [eax], 0xffffffb1; stc; call dword ptr [eax - 0x73]; 
0x0003cc87: or ebp, ecx; ret 0xfffe; 
0x0012f5e0: or ebp, edi; inc dword ptr [ebx + 0x478b10c4]; sbb al, 0x89; ret 0x572b; 
0x0009c0e4: or ebp, esi; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x0013cee4: or ebx, 0x5c; stc; call dword ptr [eax - 0x18]; 
0x00104c08: or ebx, 0xffffffff; mov ecx, eax; mov edx, ebx; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x00126794: or ebx, dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x00058a84: or ebx, dword ptr [ebx + 0x5e]; pop edi; ret; 
0x000ad840: or ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x0018298a: or ebx, dword ptr [edi - 0x18]; push 0x81fffef4; ret; 
0x001161c9: or ecx, 0x80000000; mov dword ptr [eax], ecx; xor eax, eax; pop ebx; ret; 
0x001480bb: or ecx, dword ptr [ebp + 0x3c002674]; or dword ptr [edx + ecx - 0x7d], esi; ret; 
0x0007381c: or ecx, dword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x000a60b2: or ecx, dword ptr [ebp - 0x7af0f4b6]; adc eax, 0x5bfffffe; ret; 
0x000a1ae3: or ecx, dword ptr [ebp - 0x7cffd98c]; ret 0x3801; 
0x00033d55: or ecx, dword ptr [ebx - 0x72ebdb8c]; xchg byte ptr [edi + 0x2f], dh; stc; call dword ptr [eax - 1]; 
0x0006c454: or ecx, dword ptr [ebx - 0x89363]; jmp ptr [ecx]; ret; 
0x00152d2e: or ecx, dword ptr [ecx + 0x4a8d293c]; add al, 0xf; xchg ebp, eax; ret; 
0x000d8d09: or ecx, dword ptr [ecx - 0x16fbdbbc]; lodsd eax, dword ptr [esi]; and edi, esp; jmp dword ptr [esi - 0x70]; 
0x0009a0ae: or ecx, dword ptr [edi]; inc esi; ret 0xfa89; 
0x000a60b5: or ecx, dword ptr [edi]; test dword ptr [0x5bfffffe], edx; ret; 
0x000ad346: or ecx, dword ptr [edi]; test dword ptr [ebx], eax; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000a5ca5: or ecx, dword ptr [edi]; test dword ptr [edx + eax], esp; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x00089e4d: or ecx, dword ptr [edi]; xchg dword ptr [eax - 0x45000004], ebp; or dword ptr [eax], 0xa30f0000; ret 0x830f; 
0x0008911d: or ecx, dword ptr [edi]; xchg dword ptr [eax - 0x45000004], esp; or dword ptr [eax], 0xa30f0000; ret 0x830f; 
0x001537f0: or ecx, dword ptr [edi]; xchg ebp, eax; ret 0xc483; 
0x00152e44: or ecx, dword ptr [edi]; xchg ebp, eax; ret; 
0x00120766: or ecx, eax; ljmp 0xe283:0x1e08314; add dword ptr [eax - 0x7c72ebba], ecx; rcl byte ptr [edx - 7], cl; dec dword ptr [eax - 0x6c72f7aa]; ret 0xf952; 
0x0017279a: or ecx, esi; jmp dword ptr [ebp - 0x75]; 
0x0008bcc4: or edi, dword ptr [eax + 0x16]; ret; 
0x000dfdef: or edi, dword ptr [eax + 0x20]; mov edx, 0x40; cmove eax, edx; ret; 
0x000dfca2: or edi, dword ptr [eax + 0x7f]; mov edx, 0xfde8; pop ebx; cmove eax, edx; ret; 
0x00094589: or edi, dword ptr [eax + 8]; cmova eax, ecx; mov dword ptr [edx + 0x3b6c], eax; ret; 
0x00166858: or edi, dword ptr [ecx + 1]; mov dword ptr [eax + 0xc], edx; mov eax, ecx; pop ebx; ret; 
0x000f51a8: or edi, dword ptr [ecx]; ret 0xd375; 
0x0013b354: or edi, ecx; inc dword ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x0002f98c: or edi, edi; call dword ptr [eax - 0x73]; 
0x0002f97a: or edi, edi; call dword ptr [edx + 0x52]; 
0x00198046: or edi, esi; fcomp dword ptr [edi + 0x5e]; pop ebx; ret; 
0x000c9ca6: or edi, esi; fcomp dword ptr [edi + 0x5e]; ret; 
0x001167d2: or edx, 0x30; mov dword ptr [eax + 8], edx; mov edx, 0x100; mov word ptr [eax + 0x16], dx; ret; 
0x000850d1: or edx, 1; shr esi, 1; je 0x850f1; xor esi, esi; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000855d9: or edx, 1; shr esi, 1; je 0x855f6; xor esi, esi; mov eax, edi; call dword ptr gs:[0x10]; 
0x00085769: or edx, 2; call dword ptr gs:[0x10]; 
0x00127227: or edx, dword ptr [esi - 7]; call dword ptr [eax + 0x57]; 
0x000dfded: or edx, eax; or edi, dword ptr [eax + 0x20]; mov edx, 0x40; cmove eax, edx; ret; 
0x000dfca0: or edx, eax; or edi, dword ptr [eax + 0x7f]; mov edx, 0xfde8; pop ebx; cmove eax, edx; ret; 
0x001161ad: or edx, ecx; mov dword ptr [eax + 8], edx; xor eax, eax; pop ebx; ret; 
0x000ced3e: or edx, edi; mov dword ptr [0xc2920f00], eax; add edx, 0x16d; mov eax, edx; ret; 
0x001261fb: or esi, 0x100; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00036204: or esi, dword ptr [ebp + 9]; fadd st(0); add esp, 0x18; pop ebx; ret; 
0x00197972: or esi, dword ptr [edx + 0x3b]; lea eax, [eax + 0xa]; pop edi; ret; 
0x00196932: or esi, dword ptr [edx + 0x3b]; lea eax, [edi + 0xa]; pop edi; ret; 
0x000592f2: or esi, dword ptr [edx]; stc; call dword ptr [esi - 0x77]; 
0x0010f5de: or esi, ecx; jmp dword ptr [ebp - 0x5f]; 
0x0017252f: or esi, ecx; jmp dword ptr [ebp - 0x75]; 
0x0012d299: or esi, esi; inc esp; push ecx; add dword ptr [eax + 0xf], eax; inc ebp; ret 0xc35b; 
0x00160130: or esp, 0x50fff972; call 0x30630; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000ff6f1: or esp, 0x50fff972; call 0x30630; add esp, 0x18; pop ebx; ret; 
0x00171f41: or esp, 0x65fffffe; mov edx, dword ptr [0]; mov dword ptr [edx + eax], 0x16; xor eax, eax; ret; 
0x00023b2a: or esp, 0x6e; stc; dec dword ptr [ecx - 0x48f0e7ba]; adc eax, 0x6e; stc; jmp dword ptr [esi - 0x77]; 
0x00057eb2: or esp, 0x72; stc; call dword ptr [eax - 0x18]; 
0x0015ed63: or esp, 0x72; stc; call dword ptr [eax - 0x18]; ret 0xed18; 
0x0014d7e1: or esp, dword ptr [edx - 2]; dec dword ptr [ebx - 0x72f3dbac]; xor byte ptr [eax - 0x54], 0xf9; call dword ptr [eax + 0x68]; 
0x0015f7b1: or esp, ebp; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0011f437: out 0, al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011f307: out 0, eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00192cbb: out 0, eax; add byte ptr [eax], al; pop ebx; ret; 
0x00193306: out 0x12, al; bnd call dword ptr [ebx - 0x18]; 
0x00193306: out 0x12, al; bnd call dword ptr [ebx - 0x18]; jmp 0x821930fb; ret; 
0x0015fbae: out 0x16, al; in al, dx; inc dword ptr [ebx - 0x74aaf314]; inc esp; and al, 0x48; call dword ptr [eax + 0x10]; 
0x00171106: out 0x28, al; cld; jmp dword ptr [esi - 0x70]; 
0x00107c15: out 0x33, eax; stc; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; xor eax, eax; ret; 
0x0017ac3a: out 0x42, eax; jo 0x17abbf; ret 0x80; 
0x0017b28a: out 0x42, eax; jo 0x17b20f; ret 0x80; 
0x0011f762: out 0x4d, al; stc; call dword ptr [eax + 0x57]; 
0x0018f106: out 0x54, al; bnd call dword ptr [ebx - 0x18]; 
0x0018f106: out 0x54, al; bnd call dword ptr [ebx - 0x18]; jmp 0x8218ef3d; ret; 
0x0012cc92: out 0x56, eax; stc; call dword ptr [ebp - 1]; 
0x00147f78: out 0x5b, eax; pop esi; pop edi; ret; 
0x0013b115: out 0x5b, eax; stc; call dword ptr [eax - 0x18]; 
0x0008291a: out 0x76, eax; sbb al, byte ptr [eax]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x104], edx; ret; 
0x001a0bd9: out 0x83, al; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000d8058: out 0x83, eax; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000221a7: out 0x89, al; ret 0x25; 
0x00022247: out 0x89, eax; ret 0x25; 
0x0010a3fb: out 0x8b, al; pop esp; and al, 0x30; mov edi, dword ptr [esp + 0x3c]; mov eax, 0x8c; call dword ptr gs:[0x10]; 
0x000ee178: out 0x8b, eax; push ebp; add dh, dh; inc esp; ret 0x804; 
0x000e95ec: out 0x8d, eax; jbe 0xe95f0; lea eax, [ecx + 1]; pop ebx; pop esi; ret; 
0x0003001a: out 0x9f, eax; pop ds; add byte ptr [ebx - 0xb80], cl; jmp dword ptr [ebp + 3]; 
0x0003001a: out 0x9f, eax; pop ds; add byte ptr [ebx - 0xb80], cl; jmp dword ptr [ebp + 3]; add eax, 0; ret; 
0x0016e2f9: out 0xb8, al; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; ret; 
0x00124d75: out 0xd9, eax; cmc; dec dword ptr [ebp - 0x76fbdbb4]; ret 0x448b; 
0x000887de: out 0xe5, al; call dword ptr [eax - 0x73]; 
0x00132a76: out 0xee, eax; jmp dword ptr [esi - 0x70]; 
0x000d0935: out 0xf8, al; inc dword ptr [ecx]; fidivr dword ptr [esi]; jmp edx; 
0x001065bc: out 0xfa, al; call dword ptr [edi - 1]; 
0x00071fe9: out 0xfa, al; jmp dword ptr [esi - 0x70]; 
0x00071eb1: out 0xfa, eax; jmp dword ptr [esi - 0x70]; 
0x000511e3: out 0xfd, eax; dec dword ptr [ebx - 0x365343]; dec dword ptr [ebp - 0x6894f79]; call dword ptr [eax - 0x73]; 
0x001552c0: out 0xfd, eax; jmp dword ptr [esi - 0x70]; 
0x001452e5: out 0xfe, eax; jmp dword ptr [esi - 0x70]; 
0x00075594: out 0xff, al; call dword ptr [eax - 0x73]; 
0x000713ae: out 0xff, al; call dword ptr [ecx + 0x52]; 
0x0005b37b: out 0xff, al; jmp dword ptr [esi - 0x70]; 
0x001a07b0: out 0xff, eax; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x001a0e1c: out 0xff, eax; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x001a0854: out 0xff, eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x001a119c: out 0xff, eax; add esp, 0x18; pop ebx; ret; 
0x0009b46a: out 0xff, eax; and ch, 2; lea edx, [edx - 0x9ee40]; cmovne eax, edx; ret; 
0x000d46d5: out 0xff, eax; call dword ptr [eax + 0x51]; 
0x00079153: out 0xff, eax; call dword ptr [eax - 0x73]; 
0x0007128d: out 0xff, eax; call dword ptr [ecx + 0x52]; 
0x0009b3b5: out 0xff, eax; cmove eax, edx; ret; 
0x0009b07b: out 0xff, eax; cmovne eax, edx; ret; 
0x0004ff7d: out 0xff, eax; dec dword ptr [ebx - 0x365343]; dec dword ptr [ebp - 0x6894f79]; call dword ptr [eax - 0x73]; 
0x000414b7: out 0xff, eax; dec dword ptr [ebx - 0x72d3db84]; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x0019b092: out 0xff, eax; jmp dword ptr [esi - 0x70]; 
0x0009b4b1: out 0xff, eax; test byte ptr [ecx + 0x7d], 2; lea edx, [edx - 0x186000]; cmovne eax, edx; ret; 
0x00089bd6: out 1, al; add byte ptr [eax], al; mov eax, 0xf0; mov ebx, ebp; mov esi, ecx; call dword ptr gs:[0x10]; 
0x000425dc: out 1, al; fimul dword ptr [ebx - 0x74c7dba4]; je 0x4260a; cmp al, 1; ret; 
0x0003f4fd: out 1, eax; fimul dword ptr [ebx + 0x138245c]; ret; 
0x00067c05: out 3, eax; add byte ptr [eax], al; xor byte ptr [ebx - 0x8bf63], cl; dec dword ptr [ecx - 0x88b7b]; jmp ptr [ecx]; ret; 
0x000ff52b: out 4, eax; add byte ptr [ebx - 0x6e37b], cl; jmp dword ptr [ebp - 0x75]; 
0x000b5222: out dx, al; add al, 0x83; out dx, al; add al, 0xf7; ret 0; 
0x000b5225: out dx, al; add al, 0xf7; ret 0; 
0x00095dbe: out dx, al; add al, byte ptr [eax]; add byte ptr [ebx - 0x15f73], cl; jmp dword ptr [ebp - 0x5f]; 
0x0004ec07: out dx, al; add byte ptr [eax], al; add byte ptr [ebx - 0x362f4b], cl; call dword ptr [edi - 1]; 
0x000b3bce: out dx, al; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x00153752: out dx, al; add cl, byte ptr [ecx + 0x5d5f5ef0]; ret; 
0x0012cb07: out dx, al; add dword ptr [ebx - 0x2b], esi; add esp, 4; pop ebx; pop esi; ret; 
0x0005c358: out dx, al; add dword ptr [ecx], edi; ret 0x850f; 
0x00043fb7: out dx, al; add eax, dword ptr [eax]; add byte ptr [ecx], bh; ret; 
0x00119b8d: out dx, al; call dword ptr [eax - 0x73]; 
0x00093ee1: out dx, al; call dword ptr gs:[0x10]; 
0x000716b1: out dx, al; cli; jmp dword ptr [esi - 0x70]; 
0x0014e645: out dx, al; dec dword ptr [ebp - 0x652c36b]; call dword ptr [edx - 0x73]; 
0x0014d90b: out dx, al; dec dword ptr [ebp - 0x652fb7f]; call dword ptr [eax - 0x73]; 
0x0014ddbc: out dx, al; dec dword ptr [ebp - 0x6531f79]; call dword ptr [eax - 0x73]; 
0x0014cdfb: out dx, al; dec dword ptr [ebp - 0x6533b7d]; call dword ptr [eax + 0x68]; 
0x00169cf0: out dx, al; dec dword ptr [ebx + 0x291c244c]; ret; 
0x0014d806: out dx, al; dec dword ptr [ebx - 0x72f3dbac]; xor byte ptr [eax - 0x54], 0xf9; call dword ptr [eax + 0x68]; 
0x0013e363: out dx, al; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x00171f7d: out dx, al; inc dword ptr [ebx - 0x247aef3c]; jne 0x171f90; add esp, 8; pop ebx; ret; 
0x001a1085: out dx, al; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x000850d5: out dx, al; je 0x850f1; xor esi, esi; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000855dd: out dx, al; je 0x855f6; xor esi, esi; mov eax, edi; call dword ptr gs:[0x10]; 
0x00133f36: out dx, al; jmp dword ptr [ebp - 0x75]; 
0x0013226a: out dx, al; jmp dword ptr [esi - 0x70]; 
0x00169cee: out dx, al; jnp 0x169cdf; dec dword ptr [ebx + 0x291c244c]; ret; 
0x001220dc: out dx, al; lea ecx, [ebx + ebx]; pop ebx; shr eax, cl; and eax, 3; ret; 
0x0017b342: out dx, al; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017acf2: out dx, al; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x001886be: out dx, al; movdqa xmmword ptr [edx - 0x12], xmm0; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; pop ebx; ret; 
0x0017f243: out dx, al; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00181223: out dx, al; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, edx; pop ebx; ret; 
0x001886c3: out dx, al; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; pop ebx; ret; 
0x000f2a1e: out dx, al; or al, byte ptr [eax]; add byte ptr [ebp - 0x76dd8b40], al; ret 0xe283; 
0x00092f76: out dx, al; or eax, 0x70870500; sbb dword ptr [eax], eax; mov dword ptr [eax + 0x3b04], 0; ret; 
0x0017252e: out dx, al; or esi, ecx; jmp dword ptr [ebp - 0x75]; 
0x00132269: out dx, al; out dx, al; jmp dword ptr [esi - 0x70]; 
0x000284ed: out dx, al; ret 0; 
0x0009968e: out dx, al; ret 0xffff; 
0x000b5a07: out dx, al; ret; 
0x00022687: out dx, al; sub ecx, edi; call dword ptr [eax - 0x18]; 
0x000b37d5: out dx, eax; adc byte ptr [ecx], al; clc; pop edi; ret; 
0x001978ec: out dx, eax; adc byte ptr [edi], cl; cmp byte ptr [eax + eax + 0x408d0000], 0xf; pop edi; ret; 
0x00084c94: out dx, eax; add byte ptr [eax], al; add byte ptr [ecx + 0x94c4], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x000dfe0b: out dx, eax; add byte ptr [eax], al; mov eax, 0x20; mov edx, 0x40; cmove eax, edx; ret; 
0x000d947a: out dx, eax; add dword ptr [eax], eax; add byte ptr [ebx - 0x13345], cl; jmp dword ptr [ebp - 0x75]; 
0x0004fd14: out dx, eax; add dword ptr [ecx - 0x364f43], ecx; dec dword ptr [ecx - 0x360343]; dec dword ptr [ebx - 0x361f7b]; inc dword ptr [ebx - 0x36277b]; call dword ptr [eax]; 
0x0009cd24: out dx, eax; add dword ptr [ecx], eax; ret; 
0x00197921: out dx, eax; add eax, 0x87820f; add byte ptr [eax], al; lea eax, [eax + 4]; pop edi; ret; 
0x000763b1: out dx, eax; add esp, 4; pop ebx; pop esi; ret; 
0x00127cfe: out dx, eax; call dword ptr [eax + 0x6a]; 
0x00126d3a: out dx, eax; call dword ptr [eax - 0x18]; 
0x001236ff: out dx, eax; call dword ptr [ebx + 0x56]; 
0x001253ce: out dx, eax; call dword ptr gs:[0x10]; 
0x001236f3: out dx, eax; dec dword ptr [ebx - 0x7af3dbac]; ror byte ptr [edi], cl; test bh, cl; fucompi st(7); call dword ptr [ebx + 0x56]; 
0x0012c452: out dx, eax; dec dword ptr [ecx - 0x1b17dbcc]; cmp al, 0xef; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000fc32f: out dx, eax; dec eax; stc; call dword ptr [eax - 0x18]; 
0x0011f855: out dx, eax; dec edi; stc; call dword ptr [eax + 0x57]; 
0x0012f5e1: out dx, eax; inc dword ptr [ebx + 0x478b10c4]; sbb al, 0x89; ret 0x572b; 
0x0012c45a: out dx, eax; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00131027: out dx, eax; inc dword ptr [ebx - 0x72afef3c]; xchg esi, ecx; push edi; stc; call dword ptr [ebx + 0x50]; 
0x0013a322: out dx, eax; inc dword ptr [ebx - 0x72aff33c]; xchg dword ptr [eax + 0x57], edi; stc; call dword ptr [eax + 0x6a]; 
0x001295ce: out dx, eax; jmp dword ptr [ebp - 0x75]; 
0x0013f927: out dx, eax; jmp dword ptr [esi - 0x39]; 
0x00035f7b: out dx, eax; jmp ptr [ecx]; sal dword ptr [ecx], 0xc8; shr eax, 0x1f; ret; 
0x0017b312: out dx, eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017acc2: out dx, eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00090af8: out dx, eax; mov dword ptr [ecx + 0x10], eax; mov dword ptr [esi + 0x10], ecx; pop ebx; pop esi; ret; 
0x000c9d18: out dx, eax; mov eax, ecx; pop ebx; pop esi; ret; 
0x001254a6: out dx, eax; mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov dword ptr [esp + 0x18], eax; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x0011743a: out dx, eax; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0018860e: out dx, eax; movdqa xmmword ptr [edx - 0x11], xmm0; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x0017f173: out dx, eax; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00181173: out dx, eax; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, edx; pop ebx; ret; 
0x00188613: out dx, eax; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x00197961: out dx, eax; or dh, byte ptr [edx + 0x4b]; lea eax, [eax + 9]; pop edi; ret; 
0x00197951: out dx, eax; or dword ptr [edx + 0x5b], esi; lea eax, [eax + 8]; pop edi; ret; 
0x00197981: out dx, eax; or eax, 0x408d2b72; or al, 0x5f; ret; 
0x0011f990: out dx, eax; or eax, dword ptr [eax]; add byte ptr [ebp - 0x6adc37d], cl; call dword ptr [ecx + 0x51]; 
0x00197971: out dx, eax; or esi, dword ptr [edx + 0x3b]; lea eax, [eax + 0xa]; pop edi; ret; 
0x001a1173: out dx, eax; out 0xff, eax; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x001a119b: out dx, eax; out 0xff, eax; add esp, 0x18; pop ebx; ret; 
0x0007635c: out dx, eax; pop ebx; pop esi; pop edi; ret; 
0x00197941: out dx, eax; pop es; jb 0x1979b0; lea eax, [eax + 6]; pop edi; ret; 
0x00197991: out dx, eax; push cs; jb 0x1979b0; lea eax, [eax + 0xd]; pop edi; ret; 
0x00197931: out dx, eax; push es; jb 0x1979b0; lea eax, [eax + 5]; pop edi; ret; 
0x00120b1e: out dx, eax; push esp; stc; call dword ptr [eax + 0x56]; 
0x00192354: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x2c73; 
0x00192d15: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3273; 
0x0019233f: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3e73; 
0x00192cfb: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x4c73; 
0x0019232a: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x5073; 
0x00192315: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6273; 
0x00192ce1: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6673; 
0x001923e1: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x00126521: outsb dx, byte ptr [esi]; add al, 0x74; pop ebx; mov ebx, dword ptr [esp + 0x50]; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x000cb72e: outsb dx, byte ptr [esi]; add dword ptr [eax], eax; add byte ptr [edi], cl; xchg ebp, eax; ret; 
0x00079ea9: outsb dx, byte ptr [esi]; cli; jmp dword ptr [esi - 0x70]; 
0x000eba16: outsb dx, byte ptr [esi]; dec eax; stc; call dword ptr [eax + 0x55]; 
0x0013c45c: outsb dx, byte ptr [esi]; hlt; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x001337d6: outsb dx, byte ptr [esi]; hlt; jmp dword ptr [esi - 0x70]; 
0x0014105c: outsb dx, byte ptr [esi]; int1; call dword ptr [eax - 0x73]; 
0x0015af7e: outsb dx, byte ptr [esi]; mov bh, ch; dec dword ptr [ebp - 0x69c2c7d]; call dword ptr [edx + 0x6a]; 
0x001654be: outsb dx, byte ptr [esi]; mov cl, 0xec; call dword ptr [eax - 0x73]; 
0x0017411a: outsb dx, byte ptr [esi]; or bh, dh; ret 0x202; 
0x00081184: outsb dx, byte ptr [esi]; or byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x00063e5e: outsb dx, byte ptr [esi]; ret 0xffff; 
0x0008fe92: outsb dx, byte ptr [esi]; sete al; add esp, 0xc; movzx eax, al; lea eax, [eax + eax + 2]; ret; 
0x0017b092: outsb dx, byte ptr [esi]; shl byte ptr [esi + 0xf], 0x70; rol byte ptr [eax], 0xf7; ret 0xf; 
0x00021fd6: outsb dx, byte ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x00021fc6: outsb dx, byte ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x0002283a: outsb dx, byte ptr [esi]; stc; call dword ptr [edx - 0x73]; 
0x000238e5: outsb dx, byte ptr [esi]; stc; dec dword ptr [ecx - 0x48f0e7b0]; xchg ebx, eax; shr byte ptr [esi - 7], 1; jmp dword ptr [esi - 0x77]; 
0x00023b2c: outsb dx, byte ptr [esi]; stc; dec dword ptr [ecx - 0x48f0e7ba]; adc eax, 0x6e; stc; jmp dword ptr [esi - 0x77]; 
0x000238ef: outsb dx, byte ptr [esi]; stc; jmp dword ptr [esi - 0x77]; 
0x001337d5: outsb dx, byte ptr [si]; hlt; jmp dword ptr [esi - 0x70]; 
0x00192311: outsd dx, dword ptr [esi]; adc ah, byte ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6273; 
0x000e839d: outsd dx, dword ptr [esi]; add al, 0; add byte ptr [ebx - 0x6bf0a308], al; ret 0x5422; 
0x001593ff: outsd dx, dword ptr [esi]; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x1c]; mov eax, dword ptr [edx + 4]; mov dword ptr [esp], edx; call dword ptr [eax + 0x10]; 
0x001913cd: outsd dx, dword ptr [esi]; add eax, 0xc1830000; adc byte ptr [esi + 0xf], ah; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000a8132: outsd dx, dword ptr [esi]; add ebx, esi; movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000a83e2: outsd dx, dword ptr [esi]; add ebx, esi; movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; ret; 
0x000a3d62: outsd dx, dword ptr [esi]; add ebx, esi; movq qword ptr [edx], mm0; mov eax, edi; pop edi; ret; 
0x000a3ff2: outsd dx, dword ptr [esi]; add ebx, esi; movq qword ptr [edx], mm0; mov eax, edx; ret; 
0x0007fe9e: outsd dx, dword ptr [esi]; and byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x00192b62: outsd dx, dword ptr [esi]; dec eax; ret 0xff3; 
0x00192ac2: outsd dx, dword ptr [esi]; dec eax; ret; 
0x000eb728: outsd dx, dword ptr [esi]; dec eax; stc; call dword ptr [eax + 0x55]; 
0x0018f5c6: outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00091185: outsd dx, dword ptr [esi]; inc eax; stc; call dword ptr [eax - 0x18]; 
0x000648af: outsd dx, dword ptr [esi]; jmp 0x648b1; jmp dword ptr [ebp - 0x5f]; 
0x000968ba: outsd dx, dword ptr [esi]; or byte ptr [eax - 0x76f7b875], dl; ret 0xf801; 
0x000ad3dd: outsd dx, dword ptr [esi]; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000353d6: outsd dx, dword ptr [esi]; push cs; add byte ptr [ebx + 0x478920c4], al; adc al, 0x89; ret; 
0x001926e8: outsd dx, dword ptr [esi]; push edx; ljmp 0xf66:0xd1ef0f66; cmp byte ptr [edi], dl; ret 0x830f; 
0x00192b67: outsd dx, dword ptr [esi]; push edx; ret 0xc2bb; 
0x00192ac7: outsd dx, dword ptr [esi]; push edx; ret; 
0x000afec2: outsd dx, dword ptr [esi]; push es; movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00024c95: outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x000247cd: outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x00193a4b: outsd dx, dword ptr [esi]; xchg esp, eax; xor ah, byte ptr [eax - 0x76000722]; ret; 
0x00065293: outsd dx, dword ptr [esi]; xor bh, cl; call dword ptr [eax - 0x73]; 
0x000601be: outsd dx, dword ptr [esi]; xor byte ptr [eax], al; add byte ptr [ebp - 0x477bf001], al; xor al, 0; add byte ptr [ebx - 0x4f373], cl; jmp dword ptr [ebp - 0x75]; 
0x0014a527: paddw mm7, mm7; dec dword ptr [ebx - 0x74e7dbbc]; pop eax; or dh, dh; ret; 
0x0006e78b: pavgb mm1, qword ptr [ebx - 0x768fdb8c]; fiadd dword ptr [ebx]; adc al, 0x86; jmp edx; 
0x000b3f6f: pcmpeqb mm1, qword ptr [ecx + 0x20]; pmovmskb eax, xmm1; test eax, eax; jne 0xb3fe0; xor eax, eax; ret; 
0x00196bb1: pcmpeqb mm1, qword ptr [ecx]; pmovmskb eax, xmm1; test eax, eax; jne 0x196df0; xor eax, eax; ret; 
0x000b3f41: pcmpeqb mm1, qword ptr [ecx]; pmovmskb eax, xmm1; test eax, eax; jne 0xb3fc0; xor eax, eax; ret; 
0x0019858a: pcmpeqb mm2, qword ptr [ebx]; and eax, 1; je 0x198570; lea eax, [edi - 0x10]; pop edi; ret; 
0x000c9e94: pcmpeqb mm3, qword ptr [ecx]; add eax, 2; ret; 
0x000c9e7d: pcmpeqb mm4, qword ptr [eax]; ret; 
0x000b3f6e: pcmpeqb xmm1, xmmword ptr [ecx + 0x20]; pmovmskb eax, xmm1; test eax, eax; jne 0xb3fe0; xor eax, eax; ret; 
0x00196bb0: pcmpeqb xmm1, xmmword ptr [ecx]; pmovmskb eax, xmm1; test eax, eax; jne 0x196df0; xor eax, eax; ret; 
0x000b3f40: pcmpeqb xmm1, xmmword ptr [ecx]; pmovmskb eax, xmm1; test eax, eax; jne 0xb3fc0; xor eax, eax; ret; 
0x001982b6: pcmpeqw mm2, qword ptr [edi]; test dh, 0xf; jne 0x198320; lea eax, [ecx + 0xc]; ret; 
0x00198285: pcmpeqw mm3, qword ptr [eax]; test dl, 0xf; jne 0x198320; lea eax, [ecx + 4]; ret; 
0x0014957e: pcmpgtd mm0, mm1; ret 0x6608; 
0x000ac0b7: pcmpgtd mm1, qword ptr [ecx + 0x5e5f0457]; pop ebx; ret; 
0x0009c004: pmaddwd mm7, mm7; cmove eax, edx; ret; 
0x00197063: pmovmskb eax, mm1; and eax, edx; test eax, eax; jne 0x196c90; xor eax, eax; ret; 
0x000b3bf9: pmovmskb eax, mm1; bsf eax, eax; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000b4394: pmovmskb eax, mm1; bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x000b3ee1: pmovmskb eax, mm1; bsr eax, eax; add eax, ecx; ret; 
0x0019670d: pmovmskb eax, mm1; test eax, eax; jne 0x1967e0; xor eax, eax; pop edi; ret; 
0x00196bb5: pmovmskb eax, mm1; test eax, eax; jne 0x196df0; xor eax, eax; ret; 
0x00196bf4: pmovmskb eax, mm1; test eax, eax; jne 0x196e70; xor eax, eax; ret; 
0x000b3c9f: pmovmskb eax, mm1; test eax, eax; jne 0xb3d00; xor eax, eax; pop edi; ret; 
0x000b3c65: pmovmskb eax, mm1; test eax, eax; jne 0xb3d20; xor eax, eax; pop edi; ret; 
0x000b3f45: pmovmskb eax, mm1; test eax, eax; jne 0xb3fc0; xor eax, eax; ret; 
0x000b3f74: pmovmskb eax, mm1; test eax, eax; jne 0xb3fe0; xor eax, eax; ret; 
0x00197062: pmovmskb eax, xmm1; and eax, edx; test eax, eax; jne 0x196c90; xor eax, eax; ret; 
0x000b3bf8: pmovmskb eax, xmm1; bsf eax, eax; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000b4393: pmovmskb eax, xmm1; bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x000b3ee0: pmovmskb eax, xmm1; bsr eax, eax; add eax, ecx; ret; 
0x0019670c: pmovmskb eax, xmm1; test eax, eax; jne 0x1967e0; xor eax, eax; pop edi; ret; 
0x00196bb4: pmovmskb eax, xmm1; test eax, eax; jne 0x196df0; xor eax, eax; ret; 
0x00196bf3: pmovmskb eax, xmm1; test eax, eax; jne 0x196e70; xor eax, eax; ret; 
0x000b3c9e: pmovmskb eax, xmm1; test eax, eax; jne 0xb3d00; xor eax, eax; pop edi; ret; 
0x000b3c64: pmovmskb eax, xmm1; test eax, eax; jne 0xb3d20; xor eax, eax; pop edi; ret; 
0x000b3f44: pmovmskb eax, xmm1; test eax, eax; jne 0xb3fc0; xor eax, eax; ret; 
0x000b3f73: pmovmskb eax, xmm1; test eax, eax; jne 0xb3fe0; xor eax, eax; ret; 
0x000b41fe: pmovmskb ecx, mm0; test ecx, ecx; je 0xb4210; bsf ecx, ecx; add eax, ecx; ret; 
0x000b41fd: pmovmskb ecx, xmm0; test ecx, ecx; je 0xb4210; bsf ecx, ecx; add eax, ecx; ret; 
0x00168839: pop di; stc; call dword ptr [eax - 0x18]; 
0x001280cb: pop ds; adc byte ptr [eax], al; mov eax, dword ptr [eax - 0xc8]; mov eax, dword ptr [eax + 0x24]; ret; 
0x0008dfbb: pop ds; add byte ptr [eax], al; add byte ptr [ebp - 0x76f3db8c], cl; ret; 
0x000d2853: pop ds; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x001963e2: pop ds; add byte ptr [eax], al; jne 0x196100; xor eax, eax; pop edi; ret; 
0x00131ac9: pop ds; add byte ptr [eax], al; nop; nop; endbr32; ret; 
0x0002fffc: pop ds; add byte ptr [ebx - 0x13b80], cl; jmp dword ptr [ebp + 3]; 
0x0002fffc: pop ds; add byte ptr [ebx - 0x13b80], cl; jmp dword ptr [ebp + 3]; add eax, 0; ret; 
0x0003003c: pop ds; add byte ptr [ebx - 0x14380], cl; jmp dword ptr [ebp + 3]; 
0x0003003c: pop ds; add byte ptr [ebx - 0x14380], cl; jmp dword ptr [ebp + 3]; add eax, 0; ret; 
0x0003755a: pop ds; add byte ptr [ebx - 0x77], dl; ret; 
0x0003001c: pop ds; add byte ptr [ebx - 0xb80], cl; jmp dword ptr [ebp + 3]; 
0x0003001c: pop ds; add byte ptr [ebx - 0xb80], cl; jmp dword ptr [ebp + 3]; add eax, 0; ret; 
0x0007cbb4: pop ds; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e5b80ec], al; pop edi; ret; 
0x000c9b7d: pop ds; add dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; ret; 
0x0019161d: pop ds; add eax, dword ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000ceccd: pop ds; add esp, 0x50; pop ebx; pop esi; pop edi; ret; 
0x0003af98: pop ds; add esp, 4; pop ebx; pop esi; ret; 
0x00104151: pop ds; add esp, 8; or eax, edx; pop ebx; ret; 
0x00116fb3: pop ds; add esp, 8; pop ebx; ret; 
0x000ed530: pop ds; add esp, 8; xor eax, eax; pop ebx; ret; 
0x00111a80: pop ds; call dword ptr gs:[0x10]; 
0x000f90c6: pop ds; cli; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; xor eax, eax; ret; 
0x0012651f: pop ds; cmp dword ptr [esi + 4], ebp; je 0x126580; mov ebx, dword ptr [esp + 0x50]; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x001197c4: pop ds; dec esp; stc; call dword ptr [edx - 0x77]; 
0x0002015c: pop ds; inc esp; add byte ptr [eax], al; endbr32; jmp dword ptr [ebx + 0xc]; 
0x00163468: pop ds; jg 0x163450; pop ebx; pop esi; pop edi; ret; 
0x00196382: pop ds; jne 0x196100; xor eax, eax; pop edi; ret; 
0x000ac017: pop ds; jne 0xac520; pop edi; pop esi; pop ebx; ret; 
0x000ad6ea: pop ds; jne 0xadc50; pop edi; pop esi; pop ebx; ret; 
0x0008bb80: pop ds; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0010a34a: pop ds; mov dword ptr [esp + 0xc], eax; mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00115328: pop ds; mov ebp, dword ptr [edi + 8]; mov edi, dword ptr [edi + 4]; call dword ptr gs:[0x10]; 
0x00076d6e: pop ds; mov edx, edi; pop edi; pop ebp; ret; 
0x00036281: pop ds; not eax; and eax, edx; ret; 
0x0011f7c5: pop ds; or byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; les ecx, ptr [esi - 7]; call dword ptr [eax + 0x57]; 
0x001780a7: pop ds; or eax, dword ptr [eax]; push ebx; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0004ca62: pop ds; or eax, edx; mov dword ptr [esp + 4], eax; fld qword ptr [esp]; add esp, 0xc; ret; 
0x0004ca19: pop ds; or eax, edx; mov dword ptr [esp], eax; fld dword ptr [esp]; add esp, 4; ret; 
0x0004b692: pop ds; pop ebx; pop esi; pop edi; ret; 
0x00081737: pop ds; pop edi; mov edx, ebp; pop ebp; ret; 
0x00035f31: pop ds; pop edi; not eax; and eax, edx; ret; 
0x000adac4: pop ds; pop edi; pop esi; pop ebx; ret; 
0x0017374d: pop ds; push ebx; push ecx; push esi; mov eax, dword ptr [esp + 0x10]; call dword ptr [eax + 0x40]; 
0x00035bf0: pop ds; ret; 
0x00035bd3: pop ds; shr ecx, 0x10; or eax, ecx; ret; 
0x00035b6d: pop ds; sub ecx, edx; not eax; and eax, ecx; ret; 
0x000ad6bd: pop dword ptr [0x5e5f0000]; pop ebx; ret; 
0x0009421c: pop dword ptr [eax - 0x23]; clc; jmp dword ptr [ebp - 1]; 
0x00167fb0: pop dword ptr [eax - 0x76ffff5b]; test dword ptr [edi + edi*8 - 1], ebx; dec dword ptr [ebx + 0x55891445]; test byte ptr [ecx + 0x458b9045], cl; sbb byte ptr [ecx - 0x837b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0010abef: pop dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0019828d: pop dword ptr [eax]; add byte ptr [eax], al; lea eax, [ecx + 4]; ret; 
0x000ced2a: pop dword ptr [edx]; jbe 0xced38; mov eax, edx; ret; 
0x0002c5d8: pop eax; aam 0x80; sti; add cl, byte ptr [edi]; xchg esi, eax; ret; 
0x0015d3fe: pop eax; adc al, 0xf; xchg edi, eax; ret 0x4bd; 
0x0015ba5f: pop eax; adc byte ptr [eax + 1], bh; pop ebx; pop esi; ret; 
0x00074ed0: pop eax; adc byte ptr [ecx + 0x5b0a89c8], cl; ret; 
0x00074341: pop eax; adc byte ptr [ecx + 0x5b3a89c8], cl; pop esi; pop edi; ret; 
0x0013145c: pop eax; add al, 0x83; ret 0xc601; 
0x000944f6: pop eax; add al, 0x89; ret; 
0x000f0d30: pop eax; add al, 0xf7; ret; 
0x0008fcce: pop eax; add al, byte ptr [eax]; add byte ptr [ebp - 0x19a4cf7d], cl; call dword ptr [ecx + 0x50]; 
0x00081f3b: pop eax; add al, byte ptr [eax]; add byte ptr [ecx + 0x4c48310], cl; pop ebx; pop esi; ret; 
0x000bf2e4: pop eax; add dword ptr [eax], eax; add byte ptr [edi], cl; xchg ebp, eax; ret 0x9eb; 
0x000b76b7: pop eax; add dword ptr [edi], ecx; xchg esp, eax; ret 0x7c83; 
0x0011666f: pop eax; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00115aa0: pop eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016e58d: pop eax; add esp, 0xd4; mov eax, ebx; pop ebx; pop esi; ret; 
0x000eaa62: pop eax; and al, 0x8b; inc eax; xor byte ptr [ecx], bh; ret; 
0x0009c6eb: pop eax; and byte ptr [ebx - 0x398af716], al; mov dword ptr [eax + 0x1c], esi; pop ebx; pop esi; ret; 
0x0011bc64: pop eax; cld; inc dword ptr [ebx - 0x72affb14]; xchg byte ptr [esi + 0x4b], bl; stc; call dword ptr [eax - 1]; 
0x0006b343: pop eax; idiv edi; call dword ptr [edx + 0x50]; 
0x00149577: pop eax; inc cl; ljmp 0xc166:0xfe2c117; ret 0x6608; 
0x000a1f24: pop eax; inc dword ptr [ebx + 0x5e5b08c4]; pop edi; pop ebp; ret; 
0x000b3433: pop eax; jnp 0x5b17587e; pop esi; ret; 
0x000affa0: pop eax; jnp 0x5e1323eb; ret; 
0x000cba25: pop eax; lea eax, [esp + 0xb4]; push eax; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x000cb7ad: pop eax; lea eax, [esp + 0xec]; push eax; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x000b4217: pop eax; lea esi, [esi]; nop; xor eax, eax; ret; 
0x0014e20e: pop eax; lodsd eax, dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x00071845: pop eax; mov dword ptr [ecx + 0x88], edx; ret; 
0x0007c604: pop eax; mov dword ptr [edx + 0x88], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x000dfdc5: pop eax; mov eax, 0x20; mov edx, 0x40; cmove eax, edx; ret; 
0x00037768: pop eax; mov eax, 0x77; int 0x80; 
0x000dfc80: pop eax; mov eax, 0x7f; mov edx, 0x7fffffff; pop ebx; cmove eax, edx; ret; 
0x001596e5: pop eax; mov eax, dword ptr [ebx + 4]; pop edx; push edi; push ebx; call dword ptr [eax + 0x14]; 
0x0007b151: pop eax; mov eax, dword ptr [edx + 0x10]; sub eax, dword ptr [edx + 0xc]; sar eax, 2; ret; 
0x0007b021: pop eax; mov eax, dword ptr [edx + 0x1c]; sub eax, dword ptr [edx + 0x18]; sar eax, 2; ret; 
0x0002a04d: pop eax; mov eax, dword ptr [esp + 0x44]; call eax; 
0x000b4cd0: pop eax; mov edi, eax; mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x0012f24e: pop eax; movsb byte ptr es:[edi], byte ptr [esi]; stc; call dword ptr [edx + 0x50]; 
0x000838fd: pop eax; or al, 0xe8; mov esp, 0x390005b9; ret; 
0x0009aee4: pop eax; or byte ptr [eax + eax], 0xe8; ret; 
0x00030cb5: pop eax; or byte ptr [ebx - 0x137c67bb], cl; or byte ptr [ecx - 0x7f724fab], cl; cmp ch, byte ptr [edi]; stc; call dword ptr [eax + 0x53]; 
0x000758d5: pop eax; or byte ptr [ecx + 0x10892048], cl; pop ebx; ret; 
0x0014a530: pop eax; or dh, dh; ret; 
0x000226a3: pop eax; outsb dx, byte ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x0007a834: pop eax; pop ebp; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0004b68a: pop eax; pop ebx; pop esi; pop edi; ret; 
0x00094423: pop eax; pop ebx; stc; call dword ptr [eax + 0x6a]; 
0x00130312: pop eax; pop ebx; stc; call dword ptr [eax - 1]; 
0x000c9c47: pop eax; pop edi; pop esi; ret; 
0x0015fa4f: pop eax; pop edx; push 0; push edi; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x14]; 
0x001596bc: pop eax; pop edx; push dword ptr [esi + 0x10]; push ebx; call dword ptr [esi + 0x14]; 
0x00159e2b: pop eax; pop edx; push dword ptr [esp + 0x20]; push edi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x0015a7d9: pop eax; pop edx; push dword ptr [esp + 8]; push edi; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x18]; 
0x000b3413: pop eax; push cs; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aff80: pop eax; push cs; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000da0f7: pop eax; push dword ptr [esp + 0x1c]; call edi; 
0x0002b4c4: pop eax; push dword ptr [esp + 0x50]; push dword ptr [esp + 0x50]; call esi; 
0x0002a049: pop eax; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x000da0f3: pop eax; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x1c]; call edi; 
0x0013c4f3: pop eax; push dword ptr [esp + 0x58]; push esi; call edi; 
0x00025bb7: pop eax; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x00024aa1: pop eax; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x000225cd: pop eax; push ebp; push dword ptr [esp + 0x30]; push dword ptr [ebx + 4]; call esi; 
0x0013c4f7: pop eax; push esi; call edi; 
0x0002ed92: pop eax; ret; 
0x0006d97c: pop eax; sbb byte ptr [eax], al; add byte ptr [ebx - 0xacfb14], al; je 0x6d9ab; and al, 0x55; call dword ptr [esi + 0x1c]; 
0x000d38fd: pop eax; sbb byte ptr [ebx - 0x78f0f905], al; ret 7; 
0x00132286: pop eax; stc; call dword ptr [eax - 0x18]; 
0x001316b4: pop eax; stc; call dword ptr [ecx + 0x52]; 
0x00131786: pop eax; stc; call dword ptr [edx - 0x17]; 
0x00145f52: pop eax; xor byte ptr [eax + 0x64bbfd5f], cl; add byte ptr [eax], al; add byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; ret; 
0x00144187: pop ebp; adc byte ptr [ecx - 0x44f6b], cl; jmp dword ptr [ebp - 0x75]; 
0x000f0092: pop ebp; add al, 0x7c; ret 0xb48d; 
0x0011a831: pop ebp; add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x0007a835: pop ebp; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x00040f0f: pop ebp; add eax, dword ptr [eax]; add byte ptr [ecx], bh; ret; 
0x0011c1be: pop ebp; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x00020de7: pop ebp; fsubr st(0); ret 0xa; 
0x00071d64: pop ebp; in al, 0x6a; call dword ptr [esi - 0x18]; 
0x00171df3: pop ebp; jmp 0x171c50; mov ebx, dword ptr [esp]; ret; 
0x00021973: pop ebp; jmp eax; 
0x000231fe: pop ebp; les eax, ptr [ebx - 0x387cf314]; add dword ptr [ebx - 0x7d], edx; ret; 
0x00149b65: pop ebp; mov eax, 0x3d1b60f; pushfd; xchg ebx, eax; mov al, byte ptr [0x3efff90d]; jmp ebx; 
0x0002f6ab: pop ebp; mov eax, ecx; ret; 
0x0007d871: pop ebp; mov eax, edx; ret; 
0x000e990d: pop ebp; neg eax; ret; 
0x0012f5df: pop ebp; or ebp, edi; inc dword ptr [ebx + 0x478b10c4]; sbb al, 0x89; ret 0x572b; 
0x000b5171: pop ebp; pop ebx; pop esi; pop edi; ret; 
0x0019176b: pop ebp; pop ebx; ret; 
0x00191945: pop ebp; pop ebx; xor eax, eax; ret; 
0x00115336: pop ebp; pop edi; pop ebx; ret; 
0x0004b140: pop ebp; pop esi; pop edi; ret; 
0x0010413f: pop ebp; ret 0xfffd; 
0x0003671f: pop ebp; ret 4; 
0x000217df: pop ebp; ret; 
0x000c2b6a: pop ebp; sar byte ptr [ecx], 1; ret; 
0x001400d7: pop ebp; stc; call dword ptr [eax - 0x18]; 
0x00140e42: pop ebp; stc; call dword ptr [eax - 0x18]; jne 0x140e34; out dx, al; jmp dword ptr [esi - 0x70]; 
0x001444dd: pop ebp; stc; call dword ptr [eax - 0x73]; 
0x00140ef0: pop ebp; stc; call dword ptr [ecx + 0x50]; 
0x00140ed5: pop ebp; stc; call dword ptr [ecx - 0x77]; 
0x001450cc: pop ebp; stc; dec dword ptr [ebp - 0x41c6b]; call dword ptr [eax + 0x52]; 
0x00140ecf: pop ebp; stc; dec dword ptr [ebp - 0x6a28d7a]; call dword ptr [ecx - 0x77]; 
0x0005916f: pop ebp; std; dec dword ptr [ebx + 0x39c8290f]; ret; 
0x0010ebf1: pop ebp; sub dh, dh; ret; 
0x001412b4: pop ebp; test byte ptr [ecx - 0x8f7b], cl; dec dword ptr [ecx - 0x9373]; jmp dword ptr [ebp - 0x5f]; 
0x0018ca03: pop ebp; xor eax, eax; ret; 
0x00021c50: pop ebx; adc edx, 0; neg edx; ret; 
0x00104979: pop ebx; add al, 0x31; sar byte ptr [eax + 0x1b4], cl; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x000b3861: pop ebx; add dword ptr [eax], eax; add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x001631c0: pop ebx; add eax, 0x90; pop esi; pop edi; ret; 
0x00163250: pop ebx; add eax, 0x94; pop esi; pop edi; ret; 
0x00193a9f: pop ebx; add eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x0013fa00: pop ebx; add esi, eax; mov dword ptr [edi], esi; pop esi; pop edi; ret; 
0x0016de0f: pop ebx; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x0003b699: pop ebx; and eax, 0x3ff; xor eax, edx; ret; 
0x00120957: pop ebx; and edx, 0xfff; and eax, 0xfffff000; or eax, edx; ret; 
0x000ea0a6: pop ebx; call dword ptr [ebx]; 
0x0009c148: pop ebx; cmove eax, edx; add eax, 0x21; ret; 
0x0009c134: pop ebx; cmove eax, edx; add eax, 1; ret; 
0x000dfc8b: pop ebx; cmove eax, edx; ret; 
0x0003b02b: pop ebx; cmove esi, eax; mov eax, esi; pop esi; pop edi; ret; 
0x000dfd02: pop ebx; cmp dword ptr [ecx + eax], 0x26; mov eax, 0x7f; cmovne eax, edx; ret; 
0x000de88d: pop ebx; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x0004aa83: pop ebx; cmp eax, 0xfffff001; jae 0x216d0; xor eax, eax; ret; 
0x0015b7d1: pop ebx; dec esi; in eax, dx; call dword ptr [eax - 0x73]; 
0x00123719: pop ebx; jl 0x216d0; ret; 
0x0002d8ca: pop ebx; jmp 0x2def0; pop ebx; ret; 
0x00086539: pop ebx; jmp 0x85b40; nop; mov eax, 0x16; pop ebx; ret; 
0x0017434c: pop ebx; jmp 0x88980; lea esi, [esi]; mov eax, 0x16; pop ebx; ret; 
0x00088b29: pop ebx; jmp 0x88980; nop; mov eax, 0x16; pop ebx; ret; 
0x000719a7: pop ebx; jmp eax; 
0x000719a7: pop ebx; jmp eax; mov eax, 0xffffffff; pop ebx; ret; 
0x0010af01: pop ebx; js 0x10aefb; dec dword ptr [ebx - 0x76dfdba4]; ret 0x6b8; 
0x00197954: pop ebx; lea eax, [eax + 8]; pop edi; ret; 
0x0008eab8: pop ebx; lea eax, [eax + eax - 1]; pop esi; pop edi; pop ebp; ret; 
0x00083570: pop ebx; lea eax, [eax + edx + 0x4000]; ret; 
0x00196fe4: pop ebx; lea eax, [ecx + 9]; ret; 
0x00196914: pop ebx; lea eax, [edi + 8]; pop edi; ret; 
0x000b4190: pop ebx; lea eax, [edi - 1]; pop esi; pop edi; pop ebp; ret; 
0x000b41a0: pop ebx; lea eax, [edi - 2]; pop esi; pop edi; pop ebp; ret; 
0x000b41b0: pop ebx; lea eax, [edi - 3]; pop esi; pop edi; pop ebp; ret; 
0x0013f9d2: pop ebx; mov dword ptr [edi], esi; pop esi; pop edi; ret; 
0x0008bc5f: pop ebx; mov eax, 0x16; pop esi; pop edi; ret; 
0x00083deb: pop ebx; mov eax, 0xc; pop esi; pop edi; ret; 
0x0003bd4e: pop ebx; mov eax, 0xffffffff; pop esi; pop edi; pop ebp; ret; 
0x00072268: pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x001922bf: pop ebx; mov eax, 1; ja 0x1922c9; neg eax; ret; 
0x00192da6: pop ebx; mov eax, 1; ja 0x192db0; neg eax; ret; 
0x001956d0: pop ebx; mov eax, 1; ja 0x1956da; neg eax; ret; 
0x00194000: pop ebx; mov eax, 1; jg 0x194010; neg eax; ret; 
0x00198130: pop ebx; mov eax, 1; jg 0x198140; neg eax; ret; 
0x0004ae9f: pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x00104100: pop ebx; mov eax, 9; pop esi; pop edi; ret; 
0x00166483: pop ebx; mov eax, dword ptr [eax + 0x20]; jmp eax; 
0x0016649b: pop ebx; mov eax, dword ptr [eax + 0x24]; jmp eax; 
0x0015afeb: pop ebx; mov eax, dword ptr [eax + 4]; jmp eax; 
0x0015afd3: pop ebx; mov eax, dword ptr [eax]; jmp eax; 
0x00076168: pop ebx; mov eax, dword ptr [edi + 0x10]; pop esi; pop edi; jmp eax; 
0x00076008: pop ebx; mov eax, dword ptr [edi + 0x14]; pop esi; pop edi; jmp eax; 
0x00081986: pop ebx; mov eax, dword ptr [edx + 0x18]; pop esi; jmp eax; 
0x000761b4: pop ebx; mov eax, dword ptr [edx]; pop esi; pop edi; ret; 
0x0007cd22: pop ebx; mov eax, dword ptr [esi + 0x10]; pop esi; pop edi; jmp eax; 
0x00030765: pop ebx; mov eax, ebp; pop esi; pop edi; pop ebp; ret; 
0x000747b5: pop ebx; mov eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x0012ca2d: pop ebx; mov eax, ecx; pop esi; pop edi; ret; 
0x0015afbd: pop ebx; mov eax, ecx; ret; 
0x000723d5: pop ebx; mov eax, edi; pop esi; pop edi; pop ebp; ret; 
0x0002f5a5: pop ebx; mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x0004b1f0: pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x0002ed43: pop ebx; mov eax, edx; ret; 
0x00035f61: pop ebx; mov eax, edx; shr eax, 0x1f; ret; 
0x0002c299: pop ebx; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x0003b06a: pop ebx; mov eax, esi; pop esi; pop edi; ret; 
0x00126524: pop ebx; mov ebx, dword ptr [esp + 0x50]; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x0012a80c: pop ebx; mov edx, dword ptr [eax + esi]; pop esi; pop edi; mov eax, edx; ret; 
0x00174981: pop ebx; movzx eax, al; neg eax; ret; 
0x001732f8: pop ebx; movzx eax, byte ptr [edx]; pop esi; pop edi; ret; 
0x0007671d: pop ebx; neg eax; pop esi; pop edi; pop ebp; ret; 
0x00087e7e: pop ebx; neg eax; pop esi; pop edi; ret; 
0x0007e6fa: pop ebx; neg eax; ret; 
0x000d70a7: pop ebx; neg edx; cmp eax, -0x16; mov eax, 3; cmovne eax, edx; ret; 
0x0008d792: pop ebx; neg edx; cmp eax, 0xfffff000; mov eax, 0; cmova eax, edx; ret; 
0x0003d860: pop ebx; neg edx; pop esi; pop edi; pop ebp; ret; 
0x000abbc1: pop ebx; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0008ea80: pop ebx; or eax, 1; pop esi; pop edi; pop ebp; ret; 
0x0004b13f: pop ebx; pop ebp; pop esi; pop edi; ret; 
0x0018ca02: pop ebx; pop ebp; xor eax, eax; ret; 
0x0003b3f8: pop ebx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00037b8e: pop ebx; pop edi; ret; 
0x00054c47: pop ebx; pop esi; add ecx, eax; mov eax, ecx; ret; 
0x000fbc54: pop ebx; pop esi; and edx, 0xf; mov eax, edx; ret; 
0x000b5cb0: pop ebx; pop esi; cmovg eax, edx; pop edi; ret; 
0x0010c252: pop ebx; pop esi; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x0015210f: pop ebx; pop esi; imul eax, ecx, 0xb6db6db7; pop edi; pop ebp; ret; 
0x00078129: pop ebx; pop esi; jmp eax; 
0x00090ad7: pop ebx; pop esi; mov dword ptr [ecx + 0x10], eax; mov dword ptr [edx + 0x3adc], ecx; ret; 
0x0009b5fb: pop ebx; pop esi; mov eax, ebp; pop edi; pop ebp; ret; 
0x0009f8f0: pop ebx; pop esi; mov eax, ecx; pop edi; pop ebp; ret; 
0x00074355: pop ebx; pop esi; mov eax, ecx; pop edi; ret; 
0x000c9d27: pop ebx; pop esi; mov eax, ecx; ret; 
0x000723b6: pop ebx; pop esi; mov eax, edi; pop edi; pop ebp; ret; 
0x000885e5: pop ebx; pop esi; mov eax, edi; pop edi; ret; 
0x000a1eb2: pop ebx; pop esi; mov eax, edx; pop edi; pop ebp; ret; 
0x000fbbfa: pop ebx; pop esi; mov eax, edx; ret; 
0x0003659e: pop ebx; pop esi; mov eax, edx; shr eax, 0x1f; ret; 
0x000b8920: pop ebx; pop esi; mov edx, ebp; pop edi; pop ebp; ret; 
0x0011c092: pop ebx; pop esi; pop ebp; ret; 
0x0010bc37: pop ebx; pop esi; pop edi; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x00035d34: pop ebx; pop esi; pop edi; fsubp st(1); ret; 
0x00024c64: pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x0003671c: pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x000217dc: pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00140c4d: pop ebx; pop esi; pop edi; ret 4; 
0x00021e76: pop ebx; pop esi; pop edi; ret; 
0x000b39d0: pop ebx; pop esi; pop edi; xor eax, eax; ret; 
0x0003ac1d: pop ebx; pop esi; ret 4; 
0x00021478: pop ebx; pop esi; ret; 
0x000218db: pop ebx; pop esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x000e98ef: pop ebx; pop esi; sar eax, 1; pop edi; pop ebp; ret; 
0x00074b28: pop ebx; pop esi; sar eax, 2; pop edi; pop ebp; ret; 
0x0004b181: pop ebx; pop esi; sbb eax, eax; and eax, 2; sub eax, 1; ret; 
0x0011a200: pop ebx; pop esi; setne al; pop edi; movzx eax, al; ret; 
0x000b3979: pop ebx; pop esi; sub eax, 0x10; pop edi; ret; 
0x0014f2a3: pop ebx; pop esi; sub eax, 1; pop edi; pop ebp; ret; 
0x000a266c: pop ebx; pop esi; sub eax, edi; pop edi; ret; 
0x00193c4d: pop ebx; pop esi; sub eax, edx; pop edi; pop ebp; ret; 
0x000c3f93: pop ebx; pop esi; sub eax, edx; pop edi; ret; 
0x00195f30: pop ebx; pop esi; xor eax, eax; pop edi; ret; 
0x0004d118: pop ebx; ret 4; 
0x0002c01f: pop ebx; ret; 
0x0011d482: pop ebx; setne al; pop esi; pop edi; movzx eax, al; ret; 
0x001220e0: pop ebx; shr eax, cl; and eax, 3; ret; 
0x00094424: pop ebx; stc; call dword ptr [eax + 0x6a]; 
0x0013ad36: pop ebx; stc; call dword ptr [eax - 0x18]; 
0x0013a55a: pop ebx; stc; call dword ptr [eax - 0x42]; 
0x0013a618: pop ebx; stc; call dword ptr [eax - 0x73]; 
0x0011e3e7: pop ebx; stc; call dword ptr [eax - 1]; 
0x00058fa6: pop ebx; stc; call dword ptr [ebx + 0x50]; 
0x0011e488: pop ebx; stc; call dword ptr [ecx + 0x50]; 
0x00105496: pop ebx; stc; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; xor eax, eax; ret; 
0x000cf082: pop ebx; sub bh, cl; call dword ptr [eax + 0x53]; 
0x000cd508: pop ebx; sub bh, cl; call dword ptr [eax + 0x56]; 
0x0013b43f: pop ebx; sub bh, cl; call dword ptr [eax + 0x57]; 
0x00088185: pop ebx; sub bh, cl; call dword ptr [eax - 0x73]; 
0x0002412f: pop ebx; sub bh, cl; call dword ptr [edx + 0x50]; 
0x001322b8: pop ebx; sub bh, cl; dec dword ptr [ecx - 0x7872af05]; jno 0x132302; stc; call dword ptr [eax - 0x18]; 
0x00163130: pop ebx; sub eax, -0x80; pop esi; pop edi; ret; 
0x000764c5: pop ebx; sub eax, edx; ret; 
0x00116ff0: pop ebx; sub edx, eax; test eax, eax; cmovns eax, edx; ret; 
0x000e0cbb: pop ebx; test dl, dl; mov edx, 0; cmove eax, edx; ret; 
0x001212fa: pop ebx; test eax, eax; jl 0x216d0; je 0x121306; ret; 
0x0003bd39: pop ebx; xor eax, eax; pop esi; pop edi; pop ebp; ret; 
0x0004ae7f: pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0018f0ae: pop ebx; xor eax, eax; ret; 
0x00141eae: pop ecx; adc cl, byte ptr [ebp - 0x2ff4d]; jmp dword ptr [esi - 0x7d]; 
0x00097b60: pop ecx; add al, 0xf6; ret; 
0x0004ac8f: pop ecx; add ecx, 0xa; mov dword ptr [edx], ecx; ret; 
0x00165d3f: pop ecx; add esp, 0x18; pop ebx; ret; 
0x0013c3f6: pop ecx; add esp, 4; pop ebx; pop esi; ret; 
0x00030079: pop ecx; and al, 0x81; ret; 
0x000de3d6: pop ecx; jmp ecx; 
0x000de3d6: pop ecx; jmp ecx; ret; 
0x000de3b4: pop ecx; mov eax, 0xbe; int 0x80; 
0x001280f4: pop ecx; pop eax; ret; 
0x00150d96: pop ecx; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x00037374: pop ecx; pop edx; ret; 
0x0015894c: pop ecx; push 0; push esi; call dword ptr [eax + 0x14]; 
0x000b6269: pop ecx; push ebx; push dword ptr [edi]; call esi; 
0x000946f8: pop ecx; sbb dword ptr [eax], eax; mov ecx, dword ptr [ecx + 0x3b68]; test ecx, ecx; jne 0x94710; ret; 
0x00133bbe: pop ecx; stc; call dword ptr [eax + 0x6a]; 
0x00135563: pop ecx; stc; call dword ptr [eax - 0x18]; 
0x00135635: pop ecx; stc; call dword ptr [eax - 0x18]; ret 0x1a0; 
0x00135716: pop ecx; stc; call dword ptr [eax - 0x73]; 
0x00087c74: pop edi; aas; stc; call dword ptr [eax - 0x18]; 
0x00084750: pop edi; add byte ptr [eax], al; add byte ptr [eax + 0x16], bh; cmove eax, edx; ret; 
0x000d37dd: pop edi; add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret; 
0x000ad6ed: pop edi; add eax, 0x5e5f0000; pop ebx; ret; 
0x00044856: pop edi; add eax, 0x8d500000; xchg byte ptr [eax], bh; jbe 0x44859; call dword ptr [eax - 0x18]; 
0x0004140a: pop edi; add eax, 0x8d500000; xchg dword ptr [eax], edi; jbe 0x4140d; call dword ptr [eax - 0x18]; 
0x00047910: pop edi; add eax, 0x8d500000; xchg dword ptr [eax], edi; jbe 0x47913; call dword ptr [eax - 0x18]; 
0x00051117: pop edi; add eax, 0x8d500000; xchg dword ptr [eax], edi; jbe 0x5111a; call dword ptr [eax - 0x18]; 
0x000bbabe: pop edi; add eax, 0x8d500000; xchg dword ptr [eax], edi; jbe 0xbbac1; call dword ptr [eax - 0x18]; 
0x000be985: pop edi; add eax, 0x8d500000; xchg dword ptr [eax], edi; jbe 0xbe988; call dword ptr [eax - 0x18]; 
0x000c15fb: pop edi; add eax, 0x8d500000; xchg dword ptr [eax], edi; jbe 0xc15fe; call dword ptr [eax - 0x18]; 
0x000480fc: pop edi; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000c183d: pop edi; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000cbff3: pop edi; add esp, 0x24; pop ebx; pop esi; ret; 
0x0016da5d: pop edi; cld; call dword ptr [ebp + 0x57]; 
0x0007ae51: pop edi; cli; jmp dword ptr [esi - 0x70]; 
0x00111a98: pop edi; cmova eax, edx; ret; 
0x000b5c92: pop edi; cmovg eax, edx; ret; 
0x0010bc39: pop edi; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x00035d36: pop edi; fsubp st(1); ret; 
0x0004145d: pop edi; in eax, 0xfe; dec dword ptr [ebx - 0x72d3db84]; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x00049a11: pop edi; inc byte ptr [ebx - 0x6bf0021d]; ret; 
0x000e0999: pop edi; inc edi; stc; call dword ptr [eax - 0x18]; 
0x000ad9b0: pop edi; jge 0x5e69f0fe; pop ebx; ret; 
0x0007600d: pop edi; jmp eax; 
0x000ac2a0: pop edi; maxps xmm3, xmmword ptr [esi + 0x5b]; ret; 
0x00128890: pop edi; mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x00128750: pop edi; mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x001284d0: pop edi; mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x00128610: pop edi; mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x00128250: pop edi; mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x00128570: pop edi; mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x001282f0: pop edi; mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x00128390: pop edi; mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x001286b0: pop edi; mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x001281b0: pop edi; mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x001857cc: pop edi; mov eax, dword ptr [esp + 8]; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x0017b850: pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0012a811: pop edi; mov eax, edx; ret; 
0x001287e8: pop edi; mov edx, dword ptr [ecx + edx]; movzx edx, word ptr [edx + eax*2]; and edx, 0x100; mov eax, edx; ret; 
0x00081738: pop edi; mov edx, ebp; pop ebp; ret; 
0x0011a205: pop edi; movzx eax, al; ret; 
0x0012916d: pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 0x1000; mov eax, edx; ret; 
0x001290ed: pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 0x100; mov eax, edx; ret; 
0x0012906d: pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 0x2000; mov eax, edx; ret; 
0x00128e6d: pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 0x200; mov eax, edx; ret; 
0x00128f6d: pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 0x4000; mov eax, edx; ret; 
0x00128c6d: pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 0x400; mov eax, edx; ret; 
0x00128eed: pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 0x8000; mov eax, edx; ret; 
0x00128ced: pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 1; mov eax, edx; ret; 
0x00128d6d: pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 2; mov eax, edx; ret; 
0x00128fed: pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 4; mov eax, edx; ret; 
0x00128bed: pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 8; mov eax, edx; ret; 
0x00035f32: pop edi; not eax; and eax, edx; ret; 
0x00190cdd: pop edi; or al, 0; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0002e857: pop edi; or al, 0x89; ret; 
0x00055396: pop edi; or al, 0xf6; ret; 
0x0012ca29: pop edi; or byte ptr [ebx + ebp*8 + 0x5b], dh; mov eax, ecx; pop esi; pop edi; ret; 
0x001209d7: pop edi; or eax, ecx; ret; 
0x0010f5dd: pop edi; or esi, ecx; jmp dword ptr [ebp - 0x5f]; 
0x0011c1bd: pop edi; pop ebp; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x00171df2: pop edi; pop ebp; jmp 0x171c50; mov ebx, dword ptr [esp]; ret; 
0x00021972: pop edi; pop ebp; jmp eax; 
0x0002f6aa: pop edi; pop ebp; mov eax, ecx; ret; 
0x0007d870: pop edi; pop ebp; mov eax, edx; ret; 
0x000e990c: pop edi; pop ebp; neg eax; ret; 
0x00193662: pop edi; pop ebp; pop ebx; ret; 
0x00191944: pop edi; pop ebp; pop ebx; xor eax, eax; ret; 
0x0003671e: pop edi; pop ebp; ret 4; 
0x000217de: pop edi; pop ebp; ret; 
0x0018ca01: pop edi; pop ebx; pop ebp; xor eax, eax; ret; 
0x000a5872: pop edi; pop ebx; ret; 
0x000abb60: pop edi; pop esi; pop ebx; ret; 
0x000a271e: pop edi; pop esi; ret; 
0x0017ff83: pop edi; push 0x1c030004; mov edi, dword ptr [esi]; jmp ebx; 
0x000ac280: pop edi; push cs; pop edi; pop esi; pop ebx; ret; 
0x00140c4f: pop edi; ret 4; 
0x00021e78: pop edi; ret; 
0x00066a10: pop edi; sbb byte ptr [ecx], ch; ret; 
0x00147e58: pop edi; stc; call dword ptr [eax - 0x18]; 
0x0014cdf4: pop edi; stc; call dword ptr [eax - 0x18]; ret; 
0x0014cc3b: pop edi; stc; call dword ptr [eax - 0x73]; 
0x00147a09: pop edi; stc; call dword ptr [ebx - 0x18]; 
0x001565e2: pop edi; sub ebp, 2; mov eax, ebp; pop ebp; ret; 
0x00058ef4: pop edi; xor bh, cl; call dword ptr [eax + 0x56]; 
0x001920e1: pop edi; xor eax, eax; pop ebp; ret; 
0x000b39d2: pop edi; xor eax, eax; ret; 
0x00075034: pop edx; adc byte ptr [ecx + 0x4c48331], cl; pop ebx; pop esi; ret; 
0x000336db: pop edx; add al, 0x83; ret 0x3908; 
0x000e73fe: pop edx; add al, 0x83; ret 0x8301; 
0x00056c2d: pop edx; add al, 0x83; ret 0x8304; 
0x000a2146: pop edx; add al, 0x89; add cl, byte ptr [ebp + 0x5e5b0542]; ret; 
0x00074ecd: pop edx; add al, 0x89; pop eax; adc byte ptr [ecx + 0x5b0a89c8], cl; ret; 
0x00038c2f: pop edx; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00119bee: pop edx; add dword ptr [ebp - 0x27], esi; mov eax, esi; pop ebx; pop esi; ret; 
0x0014074a: pop edx; add dword ptr [ebp - 0x76fde7bc], ecx; ret; 
0x000cf414: pop edx; add dword ptr [ecx - 0xff6b], ecx; call dword ptr [ebx - 0x18]; 
0x00165312: pop edx; add esi, ebp; call ecx; 
0x0016f97d: pop edx; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000eaaaa: pop edx; and byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0009a611: pop edx; imul edi, eax, 0x5f5e5bff; ret; 
0x0009e28c: pop edx; inc dword ptr [ebx - 0x2288fe06]; pop ebx; pop esi; pop edi; ret; 
0x000ce970: pop edx; inc ebp; stc; call dword ptr [eax - 0x18]; 
0x0009a1cc: pop edx; mov eax, 0x16; pop ebx; pop esi; ret; 
0x00192d74: pop edx; or al, 0x39; fnstcw word ptr [eax]; jne 0x192d90; pop ebx; ret; 
0x0012cc09: pop edx; or al, 0xf6; ret; 
0x00036717: pop edx; or byte ptr [ebx + 0x5e5b4cc4], al; pop edi; pop ebp; ret 4; 
0x00071fe8: pop edx; out 0xfa, al; jmp dword ptr [esi - 0x70]; 
0x0003b37c: pop edx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001280f3: pop edx; pop ecx; pop eax; ret; 
0x0015894b: pop edx; pop ecx; push 0; push esi; call dword ptr [eax + 0x14]; 
0x000b6268: pop edx; pop ecx; push ebx; push dword ptr [edi]; call esi; 
0x0007b006: pop edx; pop esi; cli; jmp dword ptr [esi - 0x70]; 
0x0015fa50: pop edx; push 0; push edi; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x14]; 
0x001596bd: pop edx; push dword ptr [esi + 0x10]; push ebx; call dword ptr [esi + 0x14]; 
0x00159e2c: pop edx; push dword ptr [esp + 0x20]; push edi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x0015a7da: pop edx; push dword ptr [esp + 8]; push edi; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x18]; 
0x001596e9: pop edx; push edi; push ebx; call dword ptr [eax + 0x14]; 
0x00037375: pop edx; ret; 
0x0013901b: pop edx; stc; call dword ptr [eax + 0x53]; 
0x00137d63: pop edx; stc; call dword ptr [eax - 0x18]; 
0x00137e35: pop edx; stc; call dword ptr [eax - 0x18]; ret 0x178; 
0x00137f04: pop edx; stc; call dword ptr [eax - 0x73]; 
0x0015b0f5: pop edx; sub al, 0x89; dec edx; xor al, 0x5b; ret; 
0x000b3ca5: pop edx; xor eax, eax; pop edi; ret; 
0x00084b0b: pop es; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0019967c: pop es; add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [edx - 0x76fffffe], edx; ret; 
0x0006d447: pop es; add byte ptr [eax], al; add cl, ch; ret 0xffe5; 
0x00119b6c: pop es; add byte ptr [eax], al; add esp, 0x10; add esp, 0xc; ret; 
0x00058c86: pop es; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0003c8d3: pop es; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x001963d2: pop es; add byte ptr [eax], al; jne 0x196100; xor eax, eax; pop edi; ret; 
0x0019261a: pop es; add byte ptr [eax], al; pop ebx; ret; 
0x000abd3b: pop es; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000b6701: pop es; add byte ptr [ebp - 0x669777e], cl; call dword ptr [eax - 0x73]; 
0x0002c398: pop es; add byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x00039559: pop es; add byte ptr [ebx + 0x5e5b4cc4], al; pop edi; pop ebp; ret; 
0x0003aece: pop es; add byte ptr [ebx - 0x3b7cef3c], al; add al, 0x5b; pop esi; ret; 
0x000be971: pop es; add byte ptr [ebx - 0x72cfdb84], cl; xchg dword ptr [edi + edx*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x000bbaf7: pop es; add byte ptr [ebx - 0x72cfdb84], cl; xchg esp, esi; xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x000c16a6: pop es; add byte ptr [ebx - 0x72dbdb84], cl; xchg dword ptr [edi + edx*4], esp; stc; call dword ptr [eax - 0x73]; 
0x000b725c: pop es; add byte ptr [ebx - 0x72e3db8c], cl; xchg ah, ah; xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x000b6c40: pop es; add byte ptr [ebx - 0x72e3db8c], cl; xchg al, cl; xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x000587d5: pop es; add byte ptr [ebx - 0x768bdbbc], cl; ret; 
0x000ffd96: pop es; add byte ptr [ecx + 0x12a268c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x0007c2c8: pop es; add byte ptr [ecx - 0x14ec7407], cl; ret; 
0x00199095: pop es; add byte ptr [ecx - 0x7683dbbc], cl; ret 0xd285; 
0x0017fb89: pop es; add dword ptr [edi - 0x18], ebx; push 0x81ffff22; ret; 
0x00072219: pop es; add dword ptr [edi], ecx; inc ebp; ret 0xec83; 
0x00181e89: pop es; add ebx, dword ptr [edi - 0x18]; push 0x81fffeff; ret; 
0x00167892: pop es; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00038319: pop es; add esp, 0x12c; ret; 
0x000865c1: pop es; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000cef10: pop es; add esp, 0x28; xor eax, eax; pop ebx; ret; 
0x0011a7b4: pop es; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x000489ad: pop es; add esp, 0x42c; ret; 
0x001251ee: pop es; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x00038a91: pop es; add esp, 0x9c; ret; 
0x001708d8: pop es; add esp, 4; pop ebx; pop esi; ret; 
0x00133dfa: pop es; bound ecx, qword ptr [edi]; add byte ptr [ebx - 0x11380], cl; jmp dword ptr [ebp + 3]; 
0x00133dfa: pop es; bound ecx, qword ptr [edi]; add byte ptr [ebx - 0x11380], cl; jmp dword ptr [ebp + 3]; add eax, 0; ret; 
0x00157e69: pop es; call 0x152d90; add esp, 0x1c; ret; 
0x00157e88: pop es; call 0x152e60; add esp, 0x1c; ret; 
0x000ab00f: pop es; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000a6a95: pop es; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00196902: pop es; jb 0x196970; lea eax, [edi + 6]; pop edi; ret; 
0x00197942: pop es; jb 0x1979b0; lea eax, [eax + 6]; pop edi; ret; 
0x00196fd2: pop es; jl 0x197040; lea eax, [ecx + 7]; ret; 
0x0005e930: pop es; jmp 0x5e932; call dword ptr [edx - 0x73]; 
0x00196372: pop es; jne 0x196100; xor eax, eax; pop edi; ret; 
0x000a5c31: pop es; jne 0xa5ed0; pop edi; pop ebx; ret; 
0x000a6031: pop es; jne 0xa5ed1; pop ebx; ret; 
0x000aa4c2: pop es; jne 0xaa331; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000abc3f: pop es; jne 0xac520; pop edi; pop esi; pop ebx; ret; 
0x000ad2b2: pop es; jne 0xadc50; pop edi; pop esi; pop ebx; ret; 
0x000ad8d7: pop es; lea eax, [edi + 0x10]; pop edi; pop esi; pop ebx; ret; 
0x000ad83d: pop es; lea eax, [edi + 0xb]; pop edi; pop esi; pop ebx; ret; 
0x000ad8c1: pop es; lea eax, [edi + 0xf]; pop edi; pop esi; pop ebx; ret; 
0x000ad7e7: pop es; lea eax, [edi + 8]; pop edi; pop esi; pop ebx; ret; 
0x00198528: pop es; lea eax, [edi - 0x10]; pop edi; ret; 
0x000a820d: pop es; lea eax, [edx + 0xa]; pop edi; ret; 
0x000a834d: pop es; lea eax, [edx + 0xa]; ret; 
0x000aaf34: pop es; lea eax, [edx + 0xe]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000a8271: pop es; lea eax, [edx + 0xe]; pop edi; ret; 
0x000a83d1: pop es; lea eax, [edx + 0xe]; ret; 
0x000a5c2e: pop es; lea ecx, [edx + 7]; jne 0xa5ed0; pop edi; pop ebx; ret; 
0x000a602e: pop es; lea ecx, [edx + 7]; jne 0xa5ed1; pop ebx; ret; 
0x00182f09: pop es; maxps xmm5, xmm0; call 0x82182e00; ret; 
0x000e0df5: pop es; mov byte ptr [0xb48dfffb], al; add byte ptr es:[eax], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x000b5847: pop es; mov byte ptr [ecx + eax], 0; dec ecx; jne 0xb5848; pop esi; ret; 
0x000ac1da: pop es; mov byte ptr [edi + 0x10], cl; pop edi; pop esi; pop ebx; ret; 
0x000ac0ea: pop es; mov byte ptr [edi + 8], dl; pop edi; pop esi; pop ebx; ret; 
0x001a1355: pop es; mov ch, 0xfa; jmp dword ptr [esi - 0x70]; 
0x00084964: pop es; mov dword ptr [eax + 0xc], edx; xor eax, eax; pop ebx; ret; 
0x000ac23a: pop es; mov dword ptr [edi + 0x10], ecx; pop edi; pop esi; pop ebx; ret; 
0x000ac21a: pop es; mov dword ptr [edi + 0xf], ecx; pop edi; pop esi; pop ebx; ret; 
0x000ac12a: pop es; mov dword ptr [edi + 7], edx; pop edi; pop esi; pop ebx; ret; 
0x000ac14a: pop es; mov dword ptr [edi + 8], edx; pop edi; pop esi; pop ebx; ret; 
0x0008e56a: pop es; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x000acabc: pop es; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x000acc1c: pop es; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000b264d: pop es; mov dword ptr [edx + 7], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000ab45c: pop es; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000ab5bc: pop es; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x00057a62: pop es; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x000a2599: pop es; mov eax, dword ptr [ecx + edx*4 - 0x8a0]; ret; 
0x000a2569: pop es; mov eax, dword ptr [ecx + edx*4 - 0x9c0]; ret; 
0x0006fd3c: pop es; mov eax, dword ptr [ecx + edx*4 - 0xbe0]; ret; 
0x000b32b0: pop es; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afe2d: pop es; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b2650: pop es; mov eax, edi; pop ebx; pop edi; ret; 
0x000a3e1d: pop es; mov eax, edi; pop edi; ret; 
0x000a6a54: pop es; mov eax, edx; pop ebx; ret; 
0x000a3f5d: pop es; mov eax, edx; ret; 
0x00083ca7: pop es; mov ebx, dword ptr [edi + 4]; mov ecx, dword ptr [edi + 8]; mov edx, dword ptr [edi + 0xc]; call dword ptr gs:[0x10]; 
0x0018ef4d: pop es; mov ecx, dword ptr [ebx + ecx*4 - 0x86b80]; mov eax, dword ptr [ebx + eax*4 - 0x86b80]; sub eax, ecx; pop ebx; ret; 
0x000ac1fb: pop es; mov word ptr [edi + 0x10], cx; pop edi; pop esi; pop ebx; ret; 
0x000ac10b: pop es; mov word ptr [edi + 8], dx; pop edi; pop esi; pop ebx; ret; 
0x000ac3bc: pop es; movdqu xmmword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ac35c: pop es; movdqu xmmword ptr [edi + 0xd], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ac37c: pop es; movdqu xmmword ptr [edi + 0xe], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ac39c: pop es; movdqu xmmword ptr [edi + 0xf], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000afe26: pop es; movlpd qword ptr [eax], xmm0; mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000afea8: pop es; movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ac2bc: pop es; movlpd qword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ac27c: pop es; movlpd qword ptr [edi + 0xe], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000ac29c: pop es; movlpd qword ptr [edi + 0xf], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000ac4c3: pop es; movlpd qword ptr [edi + 5], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000ac16c: pop es; movlpd qword ptr [edi + 5], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000ac4d3: pop es; movlpd qword ptr [edi + 6], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000ac18c: pop es; movlpd qword ptr [edi + 6], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000ac1ac: pop es; movlpd qword ptr [edi + 7], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000acb3c: pop es; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000acc9c: pop es; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b26cf: pop es; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000ab4dc: pop es; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000ab63c: pop es; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000a8206: pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x000a8346: pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000a3e16: pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000a3f56: pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000a8268: pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; pop edi; ret; 
0x000a83c8: pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000a3e78: pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x000a6a4b: pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; pop ebx; ret; 
0x000a3fd8: pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x00166dc7: pop es; movzx eax, al; add esp, 0x1c; ret; 
0x0010c115: pop es; movzx eax, al; add esp, 0x4c; ret; 
0x0014ab4d: pop es; movzx eax, ax; add esp, 0x2c; ret; 
0x0018c8a0: pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; pop ebp; ret; 
0x0018b0f3: pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x0017e489: pop es; or byte ptr [edi - 0x18], bl; push 0x81ffff39; ret; 
0x000b58e9: pop es; or dword ptr [eax + 0x3be0], 1; xor eax, eax; pop ebx; ret; 
0x00180609: pop es; or dword ptr [edi - 0x18], ebx; call 0x82180529; ret; 
0x00182989: pop es; or ebx, dword ptr [edi - 0x18]; push 0x81fffef4; ret; 
0x0004b689: pop es; pop eax; pop ebx; pop esi; pop edi; ret; 
0x001260f8: pop es; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00116a80: pop es; pop ebx; pop esi; pop edi; ret; 
0x000a20ef: pop es; pop ebx; pop esi; ret; 
0x000a5df6: pop es; pop ebx; ret; 
0x0017b84f: pop es; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017bd9f: pop es; pop edi; pop ebx; ret; 
0x000ac0d7: pop es; pop edi; pop esi; pop ebx; ret; 
0x000a80ba: pop es; pop edi; ret; 
0x001847ea: pop es; pop esi; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00189aba: pop es; pop esi; pop edi; pop ebx; ret; 
0x00133775: pop es; push -0xc; jmp dword ptr [esi - 0x70]; 
0x0002d1b8: pop es; pushal; test bh, dh; call dword ptr [eax - 0x18]; 
0x000373c6: pop es; rdsspd ecx; mov dword ptr [edx + 0x28], ecx; ret; 
0x000a82fa: pop es; ret; 
0x00133911: pop es; sar eax, 5; add esp, 0xc; ret; 
0x0016d928: pop es; stc; call dword ptr [eax - 0x18]; 
0x0016d030: pop es; stc; call dword ptr [edi + 0x53]; 
0x0016c7dc: pop es; stc; call dword ptr [edi + 0x55]; 
0x0016c18f: pop es; stc; call dword ptr [edi + 0x56]; 
0x0010ce75: pop es; stc; dec dword ptr [edi]; inc esp; ret 0x4489; 
0x0010491e: pop es; stc; inc dword ptr [ecx]; sar dword ptr [esi], 1; jmp ecx; 
0x0018c8a4: pop es; sub eax, ecx; pop ebp; ret; 
0x0018b0f7: pop es; sub eax, ecx; ret; 
0x000aa4ea: pop es; sub ebx, 8; lea ecx, [edx + 8]; jne 0xaa331; pop ebx; ret; 
0x000de3d1: pop es; test eax, eax; jne 0xde3d9; pop ecx; jmp ecx; 
0x000de3d1: pop es; test eax, eax; jne 0xde3d9; pop ecx; jmp ecx; ret; 
0x0008c0cc: pop es; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008bc49: pop es; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x000e41ec: pop esi; adc al, byte ptr [eax]; add byte ptr [ebp - 0x45b7b], cl; call dword ptr [eax - 0x77]; 
0x00054c48: pop esi; add ecx, eax; mov eax, ecx; ret; 
0x000f02f0: pop esi; and al, 0x39; ret; 
0x000f0324: pop esi; and byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000e9908: pop esi; and eax, 1; pop edi; pop ebp; neg eax; ret; 
0x000fbc55: pop esi; and edx, 0xf; mov eax, edx; ret; 
0x000b39b2: pop esi; bsr eax, eax; add eax, edi; sub eax, 0x10; pop edi; ret; 
0x0007b007: pop esi; cli; jmp dword ptr [esi - 0x70]; 
0x0002f6a6: pop esi; cmove ecx, eax; pop edi; pop ebp; mov eax, ecx; ret; 
0x000b5cb1: pop esi; cmovg eax, edx; pop edi; ret; 
0x0002ecb0: pop esi; cmp dl, 0xff; cmove edx, ecx; mov byte ptr [eax + 0x1155], dl; lea eax, [eax + 0x1120]; ret; 
0x0010c253: pop esi; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x000f9ac3: pop esi; dec dword ptr [ebx - 0x18f43]; dec dword ptr [ebp - 0x6656b79]; call dword ptr [eax + 0x68]; 
0x0011bc6e: pop esi; dec ebx; stc; call dword ptr [eax - 1]; 
0x001710d7: pop esi; hlt; call dword ptr [eax - 0x18]; 
0x000e6fc6: pop esi; idiv edi; dec dword ptr [edi]; mov dh, 0x55; add byte ptr [ecx], bh; ret 0x840f; 
0x00152110: pop esi; imul eax, ecx, 0xb6db6db7; pop edi; pop ebp; ret; 
0x0007812a: pop esi; jmp eax; 
0x001984ce: pop esi; lea eax, [edi - 0x10]; pop edi; ret; 
0x00090ad8: pop esi; mov dword ptr [ecx + 0x10], eax; mov dword ptr [edx + 0x3adc], ecx; ret; 
0x0009b5fc: pop esi; mov eax, ebp; pop edi; pop ebp; ret; 
0x0009f8f1: pop esi; mov eax, ecx; pop edi; pop ebp; ret; 
0x00074356: pop esi; mov eax, ecx; pop edi; ret; 
0x000c9d28: pop esi; mov eax, ecx; ret; 
0x000723b7: pop esi; mov eax, edi; pop edi; pop ebp; ret; 
0x000885e6: pop esi; mov eax, edi; pop edi; ret; 
0x000a1eb3: pop esi; mov eax, edx; pop edi; pop ebp; ret; 
0x000fbbfb: pop esi; mov eax, edx; ret; 
0x0003659f: pop esi; mov eax, edx; shr eax, 0x1f; ret; 
0x001122b9: pop esi; mov ebx, dword ptr [esp + 0x50]; mov esi, dword ptr [esp + 0x5c]; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000b8921: pop esi; mov edx, ebp; pop edi; pop ebp; ret; 
0x00120ee1: pop esi; mov edx, ecx; pop edi; pop ebp; ret; 
0x000b5c8d: pop esi; neg eax; cmp ecx, edi; pop edi; cmovg eax, edx; ret; 
0x0012cc06: pop esi; or al, 0xb; pop edx; or al, 0xf6; ret; 
0x000990d8: pop esi; or dh, dh; ret; 
0x00191c2d: pop esi; pop ebp; pop ebx; ret; 
0x00191c0e: pop esi; pop ebp; pop ebx; xor eax, eax; ret; 
0x0011c093: pop esi; pop ebp; ret; 
0x00123718: pop esi; pop ebx; jl 0x216d0; ret; 
0x000abb61: pop esi; pop ebx; ret; 
0x001212f9: pop esi; pop ebx; test eax, eax; jl 0x216d0; je 0x121306; ret; 
0x00135634: pop esi; pop ecx; stc; call dword ptr [eax - 0x18]; 
0x00135634: pop esi; pop ecx; stc; call dword ptr [eax - 0x18]; ret 0x1a0; 
0x0010bc38: pop esi; pop edi; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x00035d35: pop esi; pop edi; fsubp st(1); ret; 
0x0007600c: pop esi; pop edi; jmp eax; 
0x0012888f: pop esi; pop edi; mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x0012874f: pop esi; pop edi; mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x001284cf: pop esi; pop edi; mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x0012860f: pop esi; pop edi; mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x0012824f: pop esi; pop edi; mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x0012856f: pop esi; pop edi; mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x001282ef: pop esi; pop edi; mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x0012838f: pop esi; pop edi; mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x001286af: pop esi; pop edi; mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x001281af: pop esi; pop edi; mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x001847eb: pop esi; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0012a810: pop esi; pop edi; mov eax, edx; ret; 
0x0011d486: pop esi; pop edi; movzx eax, al; ret; 
0x0012916c: pop esi; pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 0x1000; mov eax, edx; ret; 
0x001290ec: pop esi; pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 0x100; mov eax, edx; ret; 
0x0012906c: pop esi; pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 0x2000; mov eax, edx; ret; 
0x00128e6c: pop esi; pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 0x200; mov eax, edx; ret; 
0x00128f6c: pop esi; pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 0x4000; mov eax, edx; ret; 
0x00128c6c: pop esi; pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 0x400; mov eax, edx; ret; 
0x00128eec: pop esi; pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 0x8000; mov eax, edx; ret; 
0x00128cec: pop esi; pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 1; mov eax, edx; ret; 
0x00128d6c: pop esi; pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 2; mov eax, edx; ret; 
0x00128fec: pop esi; pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 4; mov eax, edx; ret; 
0x00128bec: pop esi; pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 8; mov eax, edx; ret; 
0x001209d6: pop esi; pop edi; or eax, ecx; ret; 
0x0011c1bc: pop esi; pop edi; pop ebp; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x00171df1: pop esi; pop edi; pop ebp; jmp 0x171c50; mov ebx, dword ptr [esp]; ret; 
0x00024c65: pop esi; pop edi; pop ebp; jmp eax; 
0x00193661: pop esi; pop edi; pop ebp; pop ebx; ret; 
0x00191943: pop esi; pop edi; pop ebp; pop ebx; xor eax, eax; ret; 
0x0003671d: pop esi; pop edi; pop ebp; ret 4; 
0x000217dd: pop esi; pop edi; pop ebp; ret; 
0x0018ca00: pop esi; pop edi; pop ebx; pop ebp; xor eax, eax; ret; 
0x00189abb: pop esi; pop edi; pop ebx; ret; 
0x00140c4e: pop esi; pop edi; ret 4; 
0x00021e77: pop esi; pop edi; ret; 
0x001920e0: pop esi; pop edi; xor eax, eax; pop ebp; ret; 
0x000b39d1: pop esi; pop edi; xor eax, eax; ret; 
0x00086869: pop esi; push 0x2308e8b; add byte ptr [eax], al; lea edx, [esi + 0x22c]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0008681c: pop esi; push 0x8b04488b; adc byte ptr [eax + 0xf1], bh; call dword ptr gs:[0x10]; 
0x0004db26: pop esi; push cs; add cl, ch; movsd dword ptr es:[edi], dword ptr [esi]; sub ebp, edi; jmp dword ptr [esi - 0x70]; 
0x0012f316: pop esi; push edi; stc; call dword ptr [edx + 0x50]; 
0x000a586e: pop esi; push es; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0003ac1e: pop esi; ret 4; 
0x00021479: pop esi; ret; 
0x000218dc: pop esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x00021967: pop esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; pop edi; pop ebp; jmp eax; 
0x00035f2e: pop esi; sar eax, 0x1f; pop edi; not eax; and eax, edx; ret; 
0x000e98f0: pop esi; sar eax, 1; pop edi; pop ebp; ret; 
0x00074b29: pop esi; sar eax, 2; pop edi; pop ebp; ret; 
0x00081734: pop esi; sar ebp, 0x1f; pop edi; mov edx, ebp; pop ebp; ret; 
0x00076d6b: pop esi; sar edi, 0x1f; mov edx, edi; pop edi; pop ebp; ret; 
0x0004b182: pop esi; sbb eax, eax; and eax, 2; sub eax, 1; ret; 
0x0011a201: pop esi; setne al; pop edi; movzx eax, al; ret; 
0x00147199: pop esi; stc; call dword ptr [eax - 0x18]; 
0x00147438: pop esi; stc; call dword ptr [eax - 0x18]; jg 0x1473c4; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0014798d: pop esi; stc; call dword ptr [esi - 0x18]; 
0x000b397a: pop esi; sub eax, 0x10; pop edi; ret; 
0x0014f2a4: pop esi; sub eax, 1; pop edi; pop ebp; ret; 
0x000a266d: pop esi; sub eax, edi; pop edi; ret; 
0x00193c4e: pop esi; sub eax, edx; pop edi; pop ebp; ret; 
0x000c3f94: pop esi; sub eax, edx; pop edi; ret; 
0x001537fb: pop esi; sub edx, 2; pop edi; pop ebp; mov eax, edx; ret; 
0x0007d86d: pop esi; sub edx, edi; pop edi; pop ebp; mov eax, edx; ret; 
0x001984e9: pop esi; test al, 0xf0; jne 0x198530; lea eax, [edi - 0x10]; pop edi; ret; 
0x000b4a32: pop esi; xor eax, eax; pop ebx; ret; 
0x00193670: pop esi; xor eax, eax; pop edi; pop ebp; pop ebx; ret; 
0x00195f31: pop esi; xor eax, eax; pop edi; ret; 
0x0006e559: pop esp; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x0011a7e1: pop esp; add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x0006f383: pop esp; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x000ee158: pop esp; add dword ptr [eax], eax; add byte ptr [ebp - 0x74ffd98c], cl; inc esi; add al, 0x83; ret; 
0x00038fc8: pop esp; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0010bd24: pop esp; add dword ptr [eax], eax; add byte ptr [ebx - 0x13350], cl; jmp dword ptr [ebp - 0x5f]; 
0x0002dbb8: pop esp; add dword ptr [eax], eax; add byte ptr [ebx - 0x1337d], cl; jmp dword ptr [ebp - 0x75]; 
0x0004ac7d: pop esp; add dword ptr [eax], eax; add byte ptr [ecx + 0x3c778bd4], cl; mov edi, dword ptr [edi + 0x38]; ret; 
0x00057b77: pop esp; add dword ptr [eax], eax; add esp, 0x1c; ret; 
0x000850a1: pop esp; add eax, 0x89038b10; ret 0xff0; 
0x0004c350: pop esp; add eax, dword ptr [eax]; add byte ptr [ebx + 0x29342454], cl; ret 0x5489; 
0x00146f73: pop esp; add esp, 0x118; pop ebx; ret; 
0x0010938c: pop esp; and al, 0x10; call dword ptr gs:[0x10]; 
0x000fb305: pop esp; and al, 0x10; cmp esi, ecx; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x00069731: pop esp; and al, 0x10; jmp 0x68af3; lea esi, [esi]; jmp eax; 
0x0008bed4: pop esp; and al, 0x10; mov dword ptr [ebx], 0; call dword ptr gs:[0x10]; 
0x0011c698: pop esp; and al, 0x10; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x00115ce0: pop esp; and al, 0x10; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0010bc28: pop esp; and al, 0x10; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0010c178: pop esp; and al, 0x10; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x00123e18: pop esp; and al, 0x10; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x00123c18: pop esp; and al, 0x10; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x00123af8: pop esp; and al, 0x10; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x00123cb8: pop esp; and al, 0x10; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0011f538: pop esp; and al, 0x10; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x0011f4c8: pop esp; and al, 0x10; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x0011f398: pop esp; and al, 0x10; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x001217d1: pop esp; and al, 0x10; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00058a70: pop esp; and al, 0x10; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00115d60: pop esp; and al, 0x10; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0012388d: pop esp; and al, 0x14; cmovne edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x00123197: pop esp; and al, 0x14; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x001052a1: pop esp; and al, 0x14; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x001302be: pop esp; and al, 0x18; je 0x1302d0; add esp, 8; pop ebx; ret; 
0x0011c1ad: pop esp; and al, 0x18; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00125b4e: pop esp; and al, 0x18; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x001212e8: pop esp; and al, 0x18; mov edi, dword ptr [esp + 0x28]; mov eax, 0x78; mov dword ptr [ecx], ebx; int 0x80; 
0x00115ab1: pop esp; and al, 0x20; lea edx, [esp + 4]; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x00116650: pop esp; and al, 0x20; mov eax, 0x36; mov ecx, 0x5409; mov edx, 1; call dword ptr gs:[0x10]; 
0x00118d5f: pop esp; and al, 0x20; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00118e3f: pop esp; and al, 0x20; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x000379df: pop esp; and al, 0x20; mov eax, 0xb3; mov ecx, 8; call dword ptr gs:[0x10]; 
0x00115a7e: pop esp; and al, 0x20; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0010aedf: pop esp; and al, 0x20; mov eax, 6; call dword ptr gs:[0x10]; 
0x00037a06: pop esp; and al, 0x20; mov ecx, 8; mov edx, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x00121e70: pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x156; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0003bc30: pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x163; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011c570: pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x90; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00117280: pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x91; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00117350: pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x92; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001116c0: pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0xa8; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0010a190: pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 3; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0010a260: pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 4; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0010b0af: pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 8; call dword ptr gs:[0x10]; 
0x0010b0d6: pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov edx, eax; mov eax, 8; call dword ptr gs:[0x10]; 
0x000fb0e9: pop esp; and al, 0x20; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00118d86: pop esp; and al, 0x20; mov edx, eax; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00118e66: pop esp; and al, 0x20; mov edx, eax; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x0010af06: pop esp; and al, 0x20; mov edx, eax; mov eax, 6; call dword ptr gs:[0x10]; 
0x00124825: pop esp; and al, 0x28; mov ebx, 0xf; mov dword ptr [esp + 0x30], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000d7427: pop esp; and al, 0x30; cmp dword ptr [ecx + 8], 0x3b9ac9ff; ja 0xd74c0; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000ce9c5: pop esp; and al, 0x30; lea ecx, [esp + 0xc]; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x0011802d: pop esp; and al, 0x30; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x001180cd: pop esp; and al, 0x30; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x000da7ed: pop esp; and al, 0x30; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x000df742: pop esp; and al, 0x30; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x000df7f2: pop esp; and al, 0x30; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x000df3d9: pop esp; and al, 0x30; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x000df479: pop esp; and al, 0x30; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x0010ab35: pop esp; and al, 0x30; mov eax, 0xdd; mov ecx, esi; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00109edd: pop esp; and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x127; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0010a043: pop esp; and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x127; mov edx, edi; call dword ptr gs:[0x10]; 
0x00117519: pop esp; and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14d; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001176e9: pop esp; and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14e; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00103b1a: pop esp; and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb4; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00103bfa: pop esp; and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb5; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00122139: pop esp; and al, 0x30; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0010a3fd: pop esp; and al, 0x30; mov edi, dword ptr [esp + 0x3c]; mov eax, 0x8c; call dword ptr gs:[0x10]; 
0x0016133d: pop esp; and al, 0x3c; push ebx; call dword ptr [eax + 0x14]; 
0x001164eb: pop esp; and al, 0x40; lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000d70fa: pop esp; and al, 0x40; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0009340a: pop esp; and al, 0x40; mov edx, dword ptr [esp + 0x48]; mov eax, 0x118; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00093392: pop esp; and al, 0x40; mov edx, dword ptr [esp + 0x48]; mov eax, 0x1a3; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000fb1d3: pop esp; and al, 0x40; mov esi, dword ptr [esp + 0x44]; lea ecx, [esp + 0xc]; mov eax, 0x1a7; call dword ptr gs:[0x10]; 
0x0012240b: pop esp; and al, 0x50; call dword ptr gs:[0x10]; 
0x000ceb59: pop esp; and al, 0x50; lea edx, [esp + 0x1c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x00126526: pop esp; and al, 0x50; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x000cebc9: pop esp; and al, 0x50; mov eax, 0x68; mov edx, esi; call dword ptr gs:[0x10]; 
0x0010a8c5: pop esp; and al, 0x50; mov eax, 0xdd; mov ecx, esi; mov edx, edi; call dword ptr gs:[0x10]; 
0x00122366: pop esp; and al, 0x50; mov ecx, dword ptr [esp + 0x54]; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x00122242: pop esp; and al, 0x50; mov edx, dword ptr [esp + 0x54]; lea ecx, [esp + 0x1c]; mov eax, 0x19a; call dword ptr gs:[0x10]; 
0x00112368: pop esp; and al, 0x50; mov esi, dword ptr [esp + 0x5c]; mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x001122bb: pop esp; and al, 0x50; mov esi, dword ptr [esp + 0x5c]; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00116b35: pop esp; and al, 0x60; lea ecx, [esp + 4]; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x0012192d: pop esp; and al, 0x60; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x00083298: pop esp; and al, 0xc; call dword ptr gs:[0x10]; 
0x00083298: pop esp; and al, 0xc; call dword ptr gs:[0x10]; pop ebx; pop esi; ret; 
0x000d8f1f: pop esp; and al, 0xc; cmp edx, eax; cmova edx, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x0016647c: pop esp; and al, 0xc; mov dword ptr [esp + 8], edx; pop ebx; mov eax, dword ptr [eax + 0x20]; jmp eax; 
0x00166494: pop esp; and al, 0xc; mov dword ptr [esp + 8], edx; pop ebx; mov eax, dword ptr [eax + 0x24]; jmp eax; 
0x0015afe4: pop esp; and al, 0xc; mov dword ptr [esp + 8], edx; pop ebx; mov eax, dword ptr [eax + 4]; jmp eax; 
0x0015afcc: pop esp; and al, 0xc; mov dword ptr [esp + 8], edx; pop ebx; mov eax, dword ptr [eax]; jmp eax; 
0x0010c243: pop esp; and al, 0xc; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x00121f3e: pop esp; and al, 0xc; mov eax, 0x178; call dword ptr gs:[0x10]; 
0x00123cf3: pop esp; and al, 0xc; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x00121f71: pop esp; and al, 0xc; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x0010b258: pop esp; and al, 0xc; mov eax, 0xb7; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00112103: pop esp; and al, 0xc; mov eax, 0xbb; call dword ptr gs:[0x10]; 
0x0011f3d3: pop esp; and al, 0xc; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x0011f433: pop esp; and al, 0xc; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x0011f303: pop esp; and al, 0xc; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x00112133: pop esp; and al, 0xc; mov eax, 0xef; call dword ptr gs:[0x10]; 
0x00123a93: pop esp; and al, 0xc; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x000832c7: pop esp; and al, 0xc; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00123bab: pop esp; and al, 4; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x00123d47: pop esp; and al, 4; mov eax, 0x136; call dword ptr gs:[0x10]; 
0x00123dab: pop esp; and al, 4; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x0012181b: pop esp; and al, 4; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x00123a57: pop esp; and al, 4; mov eax, 0x149; call dword ptr gs:[0x10]; 
0x0010b06b: pop esp; and al, 4; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x00123b77: pop esp; and al, 4; mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x00123ddb: pop esp; and al, 4; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x00118ee7: pop esp; and al, 4; mov eax, 0x158; call dword ptr gs:[0x10]; 
0x00123e4b: pop esp; and al, 4; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x00123e7b: pop esp; and al, 4; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x00123eab: pop esp; and al, 4; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x00123ed7: pop esp; and al, 4; mov eax, 0x17e; call dword ptr gs:[0x10]; 
0x000ddbe7: pop esp; and al, 4; mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x0003794b: pop esp; and al, 4; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x00109b9b: pop esp; and al, 4; mov eax, 0x27; call dword ptr gs:[0x10]; 
0x0010c2c7: pop esp; and al, 4; mov eax, 0x28; call dword ptr gs:[0x10]; 
0x0010af87: pop esp; and al, 4; mov eax, 0x29; call dword ptr gs:[0x10]; 
0x00118ce7: pop esp; and al, 4; mov eax, 0x33; call dword ptr gs:[0x10]; 
0x000df5eb: pop esp; and al, 4; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x00109927: pop esp; and al, 4; mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x00109927: pop esp; and al, 4; mov eax, 0x3c; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00118d17: pop esp; and al, 4; mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x0010afbb: pop esp; and al, 4; mov eax, 0x3f; call dword ptr gs:[0x10]; 
0x001184bb: pop esp; and al, 4; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x0010c1ab: pop esp; and al, 4; mov eax, 0x53; call dword ptr gs:[0x10]; 
0x00123d77: pop esp; and al, 4; mov eax, 0x56; call dword ptr gs:[0x10]; 
0x0011927b: pop esp; and al, 4; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x0011c4fb: pop esp; and al, 4; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x0010997b: pop esp; and al, 4; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x00120ff7: pop esp; and al, 4; mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x00119247: pop esp; and al, 4; mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x00123907: pop esp; and al, 4; mov eax, 0x71; call dword ptr gs:[0x10]; 
0x001192a7: pop esp; and al, 4; mov eax, 0x73; call dword ptr gs:[0x10]; 
0x00123d17: pop esp; and al, 4; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x001185db: pop esp; and al, 4; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x000dd617: pop esp; and al, 4; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x00123ab7: pop esp; and al, 4; mov eax, 0x82; call dword ptr gs:[0x10]; 
0x000df5b7: pop esp; and al, 4; mov eax, 0x84; call dword ptr gs:[0x10]; 
0x0010b1a7: pop esp; and al, 4; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x0012393b: pop esp; and al, 4; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x00121a77: pop esp; and al, 4; mov eax, 0x88; call dword ptr gs:[0x10]; 
0x00121a77: pop esp; and al, 4; mov eax, 0x88; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0010abeb: pop esp; and al, 4; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x000df667: pop esp; and al, 4; mov eax, 0x93; call dword ptr gs:[0x10]; 
0x0011c6cb: pop esp; and al, 4; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x0011c6fb: pop esp; and al, 4; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x0011c727: pop esp; and al, 4; mov eax, 0x98; call dword ptr gs:[0x10]; 
0x000faf8b: pop esp; and al, 4; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x000fafbb: pop esp; and al, 4; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x000fb017: pop esp; and al, 4; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x000fb067: pop esp; and al, 4; mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x000fb097: pop esp; and al, 4; mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x0012102b: pop esp; and al, 4; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x0010c267: pop esp; and al, 4; mov eax, 0xa; call dword ptr gs:[0x10]; 
0x0012396b: pop esp; and al, 4; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x0012399b: pop esp; and al, 4; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x00037f9b: pop esp; and al, 4; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x0010b177: pop esp; and al, 4; mov eax, 0xc; call dword ptr gs:[0x10]; 
0x000df38b: pop esp; and al, 4; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x001213f7: pop esp; and al, 4; mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x00121417: pop esp; and al, 4; mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x00121417: pop esp; and al, 4; mov eax, 0xd8; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00123c7b: pop esp; and al, 4; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x0011f4fb: pop esp; and al, 4; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x0011f48b: pop esp; and al, 4; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x0011f35b: pop esp; and al, 4; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x0010994b: pop esp; and al, 4; mov eax, 0xf; call dword ptr gs:[0x10]; 
0x00123a27: pop esp; and al, 4; mov eax, 0xfe; call dword ptr gs:[0x10]; 
0x0010c13b: pop esp; and al, 4; mov eax, 9; call dword ptr gs:[0x10]; 
0x00058a1a: pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x0010501a: pop esp; and al, 8; call dword ptr gs:[0x10]; neg eax; pop ebx; ret; 
0x00123f2e: pop esp; and al, 8; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00123b2e: pop esp; and al, 8; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x00109bce: pop esp; and al, 8; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x0010c29e: pop esp; and al, 8; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x0010c1de: pop esp; and al, 8; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x00107a13: pop esp; and al, 8; mov eax, 0x13e; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0010afee: pop esp; and al, 8; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x001152fe: pop esp; and al, 8; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x0010c20e: pop esp; and al, 8; mov eax, 0x55; call dword ptr gs:[0x10]; 
0x0011702e: pop esp; and al, 8; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x00120fce: pop esp; and al, 8; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x00123bde: pop esp; and al, 8; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x001238de: pop esp; and al, 8; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x0011c52e: pop esp; and al, 8; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x001239ce: pop esp; and al, 8; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x001239fe: pop esp; and al, 8; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x000fafee: pop esp; and al, 8; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x00123c4e: pop esp; and al, 8; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000de87e: pop esp; and al, 8; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x0010bbee: pop esp; and al, 8; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x0010bbbe: pop esp; and al, 8; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000df6be: pop esp; and al, 8; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000df6ee: pop esp; and al, 8; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x0010bb8e: pop esp; and al, 8; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x0011c65e: pop esp; and al, 8; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x0011c62e: pop esp; and al, 8; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x0011f3fe: pop esp; and al, 8; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x0011f45e: pop esp; and al, 8; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x0011f32e: pop esp; and al, 8; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x00037986: pop esp; and al, 8; mov ecx, 8; call dword ptr gs:[0x10]; 
0x0010b026: pop esp; and al, 8; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x000b4083: pop esp; bsr edi, edi; add eax, edi; pop edi; ret; 
0x000cb7b9: pop esp; call eax; 
0x00026246: pop esp; call edi; 
0x00028c9f: pop esp; call esi; 
0x000d26d2: pop esp; cdq; stc; call dword ptr [eax - 0x73]; 
0x00098892: pop esp; cmp eax, dword ptr [eax]; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00095858: pop esp; cmp eax, dword ptr [eax]; add byte ptr [ebx - 0x70f0fe08], al; ret 0; 
0x0013f91f: pop esp; cmpsd dword ptr [esi], dword ptr es:[edi]; stc; call dword ptr [eax - 0x18]; 
0x000eb7a2: pop esp; dec eax; stc; call dword ptr [eax + 0x55]; 
0x0011f798: pop esp; dec esi; stc; call dword ptr [eax + 0x57]; 
0x0003eea9: pop esp; jbe 0x3eea5; call dword ptr [eax + 0x68]; 
0x0003eecc: pop esp; jbe 0x3eec8; call dword ptr [eax + 0x68]; 
0x00041520: pop esp; jbe 0x4151c; call dword ptr [eax - 0x73]; 
0x00041f49: pop esp; jbe 0x41f45; call dword ptr [eax + 0x68]; 
0x00041f6c: pop esp; jbe 0x41f68; call dword ptr [eax + 0x68]; 
0x000447bc: pop esp; jbe 0x447b8; call dword ptr [eax - 0x73]; 
0x00045169: pop esp; jbe 0x45165; call dword ptr [eax + 0x68]; 
0x0004518c: pop esp; jbe 0x45188; call dword ptr [eax + 0x68]; 
0x000479d6: pop esp; jbe 0x479d2; call dword ptr [eax - 0x73]; 
0x0004dda9: pop esp; jbe 0x4dda5; call dword ptr [eax + 0x68]; 
0x0004ddcc: pop esp; jbe 0x4ddc8; call dword ptr [eax + 0x68]; 
0x00051063: pop esp; jbe 0x5105f; call dword ptr [eax - 0x73]; 
0x000b9539: pop esp; jbe 0xb9535; call dword ptr [eax + 0x68]; 
0x000b955c: pop esp; jbe 0xb9558; call dword ptr [eax + 0x68]; 
0x000bbb22: pop esp; jbe 0xbbb1e; call dword ptr [eax - 0x73]; 
0x000bc4b1: pop esp; jbe 0xbc4ad; call dword ptr [eax + 0x68]; 
0x000bc4d4: pop esp; jbe 0xbc4d0; call dword ptr [eax + 0x68]; 
0x000be909: pop esp; jbe 0xbe905; call dword ptr [eax - 0x73]; 
0x000bf1a9: pop esp; jbe 0xbf1a5; call dword ptr [eax + 0x68]; 
0x000bf1cc: pop esp; jbe 0xbf1c8; call dword ptr [eax + 0x68]; 
0x000c14cb: pop esp; jbe 0xc14c7; call dword ptr [eax - 0x73]; 
0x000c5d11: pop esp; jbe 0xc5d0d; call dword ptr [eax + 0x68]; 
0x000c5d34: pop esp; jbe 0xc5d30; call dword ptr [eax + 0x68]; 
0x000c8d48: pop esp; jbe 0xc8d44; call dword ptr [eax - 0x73]; 
0x0014d7a0: pop esp; lodsb al, byte ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x00026f60: pop esp; mov al, byte ptr [eax]; add byte ptr [ebx - 0x72c3db84], cl; xchg esp, edi; jo 0x26f66; call dword ptr [eax - 0x73]; 
0x00166a5a: pop esp; mov bl, 0xf9; call dword ptr [eax - 0x73]; 
0x00163634: pop esp; mov dword ptr [esp + 0x34], edx; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x00197ae9: pop esp; mov eax, 0x10; pop edi; ret; 
0x0011236e: pop esp; mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x001122c1: pop esp; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00027241: pop esp; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0017c867: pop esp; or ah, bh; mov dword ptr [edx + ecx - 4], ebx; mov eax, edx; pop ebx; ret; 
0x0017c86b: pop esp; or bh, ah; mov eax, edx; pop ebx; ret; 
0x000e9500: pop esp; or byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000ced29: pop esp; pop dword ptr [edx]; jbe 0xced38; mov eax, edx; ret; 
0x00024c63: pop esp; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x000262de: pop esp; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0013a76b: pop esp; pop ebx; stc; call dword ptr [eax - 0x73]; 
0x00025bb3: pop esp; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x00024a9d: pop esp; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00028c9b: pop esp; push dword ptr [esp + 0x5c]; call esi; 
0x0002723d: pop esp; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x000255f4: pop esp; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00150d19: pop esp; push ebx; push ebp; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x001719da: pop esp; ret; 
0x000feb78: pop esp; sahf; stc; call dword ptr [eax - 0x73]; 
0x00146790: pop esp; sar dh, cl; jmp dword ptr [esi - 0x70]; 
0x000c9ff3: pop esp; sbb edi, edi; mov eax, ebx; pop ebx; pop esi; ret; 
0x0013dcdd: pop esp; stc; call dword ptr [eax + 0x53]; 
0x0007a628: pop esp; stc; call dword ptr [eax - 0x18]; 
0x0013bb94: pop esp; stc; call dword ptr [eax - 0x39]; 
0x0013cedf: pop esp; stc; call dword ptr [eax - 0x73]; 
0x0013c8e8: pop esp; stc; call dword ptr [eax - 1]; 
0x0013bfb6: pop esp; stc; call dword ptr [edx + 0x50]; 
0x0014c695: pop esp; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x0002c2d2: pop esp; sub al, 0xf9; call dword ptr [eax - 0x18]; 
0x000dd731: pop esp; sub edx, dword ptr gs:[0x14]; jne 0xdd7e3; add esp, 0x68; pop ebx; ret; 
0x00085058: pop esp; test dword ptr [eax], ebp; mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; call dword ptr gs:[0x10]; 
0x0009a995: pop esp; xchg esp, eax; stc; call dword ptr [eax + 0x68]; 
0x001162a9: pop esp; xor eax, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00104896: pop ss; add al, 0; add dh, dh; ret 0xf02; 
0x000b934b: pop ss; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x000936d2: pop ss; add dword ptr [eax], eax; add byte ptr [ecx + 0x24748be9], cl; dec esp; call dword ptr gs:[0x10]; 
0x0011eec7: pop ss; add esp, 0x1018; pop ebx; ret; 
0x00108aa6: pop ss; add esp, 0x74; pop ebx; pop esi; ret; 
0x00021dea: pop ss; and byte ptr [eax], 0; mov eax, dword ptr [eax - 0x134]; add eax, dword ptr gs:[0]; ret; 
0x00192e07: pop ss; bnd call dword ptr [ebx - 0x18]; 
0x00192e07: pop ss; bnd call dword ptr [ebx - 0x18]; jmp 0x82192c00; ret; 
0x000dfd11: pop ss; cld; add byte ptr [eax], al; pop ebx; ret; 
0x00124945: pop ss; fdivrp st(5); dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x000abe97: pop ss; jne 0xac520; pop edi; pop esi; pop ebx; ret; 
0x000ada47: pop ss; lea eax, [edi + 0x1b]; pop edi; pop esi; pop ebx; ret; 
0x000ad733: pop ss; lea eax, [edi + 1]; pop edi; pop esi; pop ebx; ret; 
0x000ad745: pop ss; lea eax, [edi + 2]; pop edi; pop esi; pop ebx; ret; 
0x000ad773: pop ss; lea eax, [edi + 4]; pop edi; pop esi; pop ebx; ret; 
0x00198518: pop ss; lea eax, [edi - 0x10]; pop edi; ret; 
0x00114ca5: pop ss; lodsd eax, dword ptr [esi]; int1; dec dword ptr [ebp - 0x65fc37d]; call dword ptr [eax - 0x73]; 
0x000ac441: pop ss; mov byte ptr [edi + 4], dl; pop edi; pop esi; pop ebx; ret; 
0x000c9e78: pop ss; mov cl, dl; and cl, 0xf; je 0xc9ea0; ret; 
0x00173c18: pop ss; mov dword ptr [ebx + 0x68], 0xffffffff; add esp, 4; pop ebx; pop esi; ret; 
0x000b34da: pop ss; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00163e80: pop ss; mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x163ebc; add esp, 0x1c; ret; 
0x000b0027: pop ss; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0002ed3e: pop ss; mov edx, dword ptr [ebx + eax*4 + 0x24]; pop ebx; mov eax, edx; ret; 
0x000ac451: pop ss; mov word ptr [edi + 4], dx; pop edi; pop esi; pop ebx; ret; 
0x001466e2: pop ss; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00115d78: pop ss; pop ebx; pop esi; pop edi; ret; 
0x000ac063: pop ss; pop edi; pop esi; pop ebx; ret; 
0x00192359: pop ss; ret 0x2c73; 
0x00192d1a: pop ss; ret 0x3273; 
0x00192344: pop ss; ret 0x3e73; 
0x00192d00: pop ss; ret 0x4c73; 
0x0019232f: pop ss; ret 0x5073; 
0x0019231a: pop ss; ret 0x6273; 
0x00192ce6: pop ss; ret 0x6673; 
0x00191c99: pop ss; ret 0x830f; 
0x00166f35: pop ss; sub ecx, esi; inc dword ptr [ebx - 0x2f08e33c]; shr eax, 0x1f; ret; 
0x000c46f7: pop ss; sub edi, ecx; jmp dword ptr [ebp - 0x75]; 
0x000f84e5: pop ss; sub edi, edx; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; xor eax, eax; ret; 
0x000719e4: pop ss; sub esp, 4; push ebx; push dword ptr [esp + 0x1c]; push dword ptr [esi + 0x98]; call eax; 
0x001982b8: pop ss; test dh, 0xf; jne 0x198320; lea eax, [ecx + 0xc]; ret; 
0x0017a2d5: pop ss; xchg edi, eax; sti; jmp dword ptr [esi - 0x70]; 
0x000aa0cb: popal; add al, byte ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x00145c8b: popal; add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; pop esi; ret; 
0x001517d1: popal; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x0009478b: popal; jge 0x94796; add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x000a66e3: popal; jmp dword ptr [esi + 0xf]; 
0x0011ce8b: popal; lodsb al, byte ptr [esi]; inc dword ptr [ebx - 0x2776d73c]; pop ebx; ret; 
0x000de8ee: popal; mov eax, 0x166; lea ecx, [ebp - 0x6d179]; mov edi, 0x1000; mov ebx, dword ptr [esp + 0xc0]; call dword ptr gs:[0x10]; 
0x00158b4e: popal; mov eax, dword ptr [ebx + 0x10]; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x000bce1b: popal; ret; 
0x00153208: popal; stc; call dword ptr [eax + 0x51]; 
0x00151d9f: popal; stc; call dword ptr [eax + 0x53]; 
0x001561e2: popal; stc; call dword ptr [eax + 0x55]; 
0x0015532c: popal; stc; call dword ptr [eax + 0x56]; 
0x00153878: popal; stc; call dword ptr [eax + 0x57]; 
0x00153594: popal; stc; call dword ptr [eax + 0x6a]; 
0x0003a655: popal; stc; call dword ptr [eax - 0x18]; 
0x0003a655: popal; stc; call dword ptr [eax - 0x18]; bound edx, qword ptr [ebx - 1]; jmp dword ptr [esi - 0x70]; 
0x00150e65: popal; stc; call dword ptr [eax - 1]; 
0x0015222a: popal; stc; call dword ptr [ebx - 0x73]; 
0x0015d825: popal; std; jmp dword ptr [esi - 0x70]; 
0x001280c6: popfd; add al, 0; add eax, 0x101f37; mov eax, dword ptr [eax - 0xc8]; mov eax, dword ptr [eax + 0x24]; ret; 
0x0004c244: popfd; add byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x00061122: popfd; call 0x8a061122; ret; 
0x000a2354: popfd; call 0xc24e3359; ret; 
0x00065c7b: popfd; cld; jmp dword ptr [esi - 0x70]; 
0x000675ca: popfd; inc eax; idiv edi; dec dword ptr [ecx - 0x88b7b]; jmp ptr [ecx]; ret; 
0x0006c456: popfd; insb byte ptr es:[edi], dx; idiv edi; jmp ptr [ecx]; ret; 
0x0006c566: popfd; push 0x89fffff7; lea esi, [edi + esi*8 - 1]; call dword ptr [esi + 0x6a]; 
0x0016e64f: popfd; push ebx; cld; jmp dword ptr [esi - 0x70]; 
0x00104e8e: popfd; sar dh, 0xff; call dword ptr [eax + 0x51]; 
0x000fc23a: popfd; stc; call dword ptr [eax - 0x18]; 
0x00148ec5: psadbw mm7, mm7; dec dword ptr [ebx + 0x39702444]; ret 0x840f; 
0x000aff16: psllq mm1, qword ptr [edi]; jg 0xaff1b; mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000aff98: psllq mm1, qword ptr [edi]; jg 0xaff9d; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b0098: psllq mm1, qword ptr [edi]; jg 0xb009d; movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ff6f9: psllq mm7, mm7; add esp, 0x18; pop ebx; ret; 
0x00034cea: psubd mm7, mm7; dec dword ptr [ebx - 0x7cd3db8c]; ret 0xc702; 
0x001a14d2: push -0x14; out 0xff, eax; add esp, 0x18; pop ebx; ret; 
0x0002b547: push -0x48; push es; add byte ptr [eax], al; add cl, ch; ret; 
0x0010880d: push -0x64; call 0x108ad0; add esp, 0x18; pop ebx; ret; 
0x001088c1: push -0x64; call 0x108c90; add esp, 0x1c; ret; 
0x0012321c: push -0x64; call 0x109360; add esp, 0x20; add esp, 0xc; ret; 
0x00109347: push -0x64; call 0x109360; add esp, 0x2c; ret; 
0x001099b4: push -0x64; call 0x1099c0; add esp, 0x1c; ret; 
0x0013fa55: push -0x73; dec edx; jmp dword ptr [ecx]; 
0x00072066: push -0x77; ret; 
0x000cb75c: push -0x7d; clc; cmp al, 0xf; xchg esp, eax; ret 0xc031; 
0x00071d15: push -0x7d; in al, dx; add al, 0x57; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x000ae064: push -0xa; ret 0x7520; 
0x000ae069: push -0xa; ret 0x7540; 
0x00133776: push -0xc; jmp dword ptr [esi - 0x70]; 
0x00160dde: push -0xd; call dword ptr [eax - 0x73]; 
0x000f8ef3: push -0xd; dec dword ptr [ebx - 0x18f43]; dec dword ptr [ebp - 0x6656b79]; call dword ptr [eax + 0x68]; 
0x00102ebb: push -0xd; dec dword ptr [ecx - 0x76ebdbbc]; ret; 
0x000dd69d: push -1; call 0xdd6b0; add esp, 0x1c; ret; 
0x000dd6e3: push -1; call 0xdd7f0; add esp, 0x1c; ret; 
0x0007e971: push -1; push dword ptr [eax]; mov eax, dword ptr [ebp - 0x2c]; call dword ptr [eax + 0xc]; 
0x00077506: push -1; push dword ptr [edi]; call dword ptr [eax + 0xc]; 
0x00057b05: push -1; push dword ptr [esp + 0x2c]; call 0x73cc0; add esp, 0x2c; ret; 
0x00165578: push -1; push ebp; push esi; call edi; 
0x0015cf7b: push -3; jmp dword ptr [esi - 0x70]; 
0x0002541d: push -7; call dword ptr [eax + 0x68]; 
0x00025301: push -7; call dword ptr [eax - 0x73]; 
0x00122e01: push 0; add byte ptr [eax], al; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0012105b: push 0; call 0x122700; add esp, 0x1c; ret; 
0x001575d8: push 0; call 0x152d90; add esp, 0x1c; ret; 
0x001575f7: push 0; call 0x152e60; add esp, 0x1c; ret; 
0x0003068d: push 0; call 0x30630; add esp, 0x1c; ret; 
0x00031ad5: push 0; call 0x31a60; add esp, 0x2c; ret; 
0x00038297: push 0; call 0x37b20; add esp, 0x1c; ret; 
0x001603ab: push 0; call 0x70c80; add esp, 0x18; pop ebx; ret; 
0x00083d7f: push 0; call 0x83370; add esp, 0x1c; ret; 
0x000b650a: push 0; call 0xb6520; add esp, 0x1c; ret; 
0x000d6fdf: push 0; call 0xd70d0; add esp, 0x10; mov eax, 1; add esp, 0xc; ret; 
0x000d6eff: push 0; call 0xd7260; add esp, 0x10; mov eax, 1; add esp, 0xc; ret; 
0x000df649: push 0; call 0xdf5e0; add esp, 0x1c; ret; 
0x00130862: push 0; call edx; 
0x000b67f8: push 0; lea edx, [esp + 0x34]; push edx; push dword ptr [edi + 8]; call ebx; 
0x00130ec9: push 0; mov dword ptr [ebp - 0x44], 0; push 0x1000002; call edx; 
0x000df647: push 0; push 0; call 0xdf5e0; add esp, 0x1c; ret; 
0x000b67f6: push 0; push 0; lea edx, [esp + 0x34]; push edx; push dword ptr [edi + 8]; call ebx; 
0x00022626: push 0; push 0; push 0; push eax; push dword ptr [ebx + 4]; call esi; 
0x00077f2b: push 0; push 0; push dword ptr [esp + 0x18]; call dword ptr [ebx + 0x40]; 
0x00077cce: push 0; push 0; push dword ptr [esp + 0x18]; call dword ptr [edi + 0x40]; 
0x00119309: push 0; push 0; push dword ptr [esp + 0x1c]; call 0x58600; add esp, 0x1c; ret; 
0x00022628: push 0; push 0; push eax; push dword ptr [ebx + 4]; call esi; 
0x00071310: push 0; push 0; push ebp; call dword ptr [esi + 0x40]; 
0x0007e66a: push 0; push 0; push ebx; call dword ptr [ebp + 0x24]; 
0x00080735: push 0; push 0; push ebx; call dword ptr [ebp + 0x2c]; 
0x00173d2a: push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x0007e075: push 0; push 0; push ebx; call dword ptr [esi + 0x40]; 
0x0007d2c0: push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x001310b2: push 0; push 0x1000001; mov dword ptr [ebp - 0x44], edx; call eax; 
0x00130709: push 0; push 0x1000003; mov dword ptr [ebp - 0x44], edx; call eax; 
0x00130d19: push 0; push 0x1000004; call eax; 
0x001308c2: push 0; push 0x1000005; call edx; 
0x001309aa: push 0; push 0x1000006; call edx; 
0x00130912: push 0; push 0x1000007; call eax; 
0x0012ceb2: push 0; push 0x2000004; call eax; 
0x0008f027: push 0; push 1; push eax; call 0x82fd0; add esp, 0x2c; ret; 
0x00078e9b: push 0; push dword ptr [ebp - 0x2c]; push edx; push ebx; push esi; call eax; 
0x0007d1b2: push 0; push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; push esi; call dword ptr [edx + 0x40]; 
0x00077f2d: push 0; push dword ptr [esp + 0x18]; call dword ptr [ebx + 0x40]; 
0x00077cd0: push 0; push dword ptr [esp + 0x18]; call dword ptr [edi + 0x40]; 
0x000dd697: push 0; push dword ptr [esp + 0x18]; push -1; call 0xdd6b0; add esp, 0x1c; ret; 
0x001735da: push 0; push dword ptr [esp + 0x18]; push dword ptr [esp + 0x18]; push esi; call dword ptr [edx + 0x40]; 
0x00121327: push 0; push dword ptr [esp + 0x1c]; call 0x121340; add esp, 0x1c; ret; 
0x00162af5: push 0; push dword ptr [esp + 0x1c]; call 0x162970; add esp, 0x10; add esp, 0xc; ret; 
0x0003a9cc: push 0; push dword ptr [esp + 0x1c]; call 0x3a660; add esp, 0x1c; ret; 
0x00171ec7: push 0; push dword ptr [esp + 0x1c]; call 0x3a730; add esp, 0x1c; ret; 
0x00038c69: push 0; push dword ptr [esp + 0x1c]; call 0x3c860; add esp, 0x1c; ret; 
0x00038c89: push 0; push dword ptr [esp + 0x1c]; call 0x3c960; add esp, 0x1c; ret; 
0x000489c7: push 0; push dword ptr [esp + 0x1c]; call 0x48970; add esp, 0x1c; ret; 
0x0011930b: push 0; push dword ptr [esp + 0x1c]; call 0x58600; add esp, 0x1c; ret; 
0x00079f9b: push 0; push dword ptr [esp + 0x1c]; call 0x739b0; add esp, 0x1c; ret; 
0x000a2537: push 0; push dword ptr [esp + 0x1c]; call 0xb4de0; add esp, 0x18; pop ebx; ret; 
0x00038847: push 0; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x387d0; add esp, 0x1c; ret; 
0x0003e5f1: push 0; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x3eee0; add esp, 0x1c; ret; 
0x000448ab: push 0; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x41f80; add esp, 0x1c; ret; 
0x0003e6f1: push 0; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x451a0; add esp, 0x1c; ret; 
0x000740a7: push 0; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x71860; add esp, 0x1c; ret; 
0x000bbc6b: push 0; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xb9570; add esp, 0x1c; ret; 
0x000b75e1: push 0; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xbc4e0; add esp, 0x1c; ret; 
0x000c16eb: push 0; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xbf1e0; add esp, 0x1c; ret; 
0x00077b7b: push 0; push dword ptr [esp + 0x28]; push dword ptr [esp + 0x28]; mov esi, dword ptr [esp + 0x18]; push esi; call dword ptr [edi + 0x40]; 
0x0003063f: push 0; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x31290; add esp, 0x2c; ret; 
0x000886bb: push 0; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x886f0; add esp, 0x2c; ret; 
0x000b71e5: push 0; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x38]; push dword ptr [esp + 0x38]; push esi; call ebx; 
0x000b6e95: push 0; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x38]; push edi; call esi; 
0x000c4ab5: push 0; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x38]; push edi; call esi; 
0x00112530: push 0; push eax; call 0x112270; add esp, 0x10; add esp, 0xc; ret; 
0x0008ae3d: push 0; push eax; call 0x8a410; add esp, 0x18; pop ebx; ret; 
0x0002262a: push 0; push eax; push dword ptr [ebx + 4]; call esi; 
0x00071312: push 0; push ebp; call dword ptr [esi + 0x40]; 
0x0007d960: push 0; push ebp; push edi; push ebx; call dword ptr [esi + 0x40]; 
0x0015aac0: push 0; push ebx; call dword ptr [eax + 0x14]; 
0x0007e66c: push 0; push ebx; call dword ptr [ebp + 0x24]; 
0x00080737: push 0; push ebx; call dword ptr [ebp + 0x2c]; 
0x00173d2c: push 0; push ebx; call dword ptr [edi + 0x24]; 
0x0007e077: push 0; push ebx; call dword ptr [esi + 0x40]; 
0x0011d74d: push 0; push ebx; call esi; 
0x000c492b: push 0; push ebx; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x38]; push edi; call esi; 
0x000778ef: push 0; push ebx; push ecx; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x40]; 
0x0007cfc0: push 0; push ebx; push ecx; push esi; call dword ptr [ebp + 0x40]; 
0x001592c0: push 0; push ecx; push 4; push edx; mov dword ptr [esp + 0x2c], edx; call dword ptr [eax]; 
0x000818ba: push 0; push ecx; push edx; call 0x16df30; add esp, 0x1c; ret; 
0x0016472a: push 0; push edi; call dword ptr [eax + 0x14]; 
0x0015fa51: push 0; push edi; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x14]; 
0x0014f764: push 0; push edi; push ebx; call edx; 
0x00073748: push 0; push edi; push esi; push ebx; call dword ptr [ebp + 0x24]; 
0x0003a838: push 0; push edx; call edi; 
0x001626bf: push 0; push edx; push 4; push ebx; call dword ptr [eax]; 
0x0015894d: push 0; push esi; call dword ptr [eax + 0x14]; 
0x0007a29d: push 0; push esi; call dword ptr [ebp + 8]; 
0x0007d2c2: push 0; push esi; call dword ptr [ebx + 0x40]; 
0x00070fc8: push 0; push esi; call dword ptr [ebx + 8]; 
0x001310b4: push 0x1000001; mov dword ptr [ebp - 0x44], edx; call eax; 
0x00130ed2: push 0x1000002; call edx; 
0x0013070b: push 0x1000003; mov dword ptr [ebp - 0x44], edx; call eax; 
0x00130d1b: push 0x1000004; call eax; 
0x001308c4: push 0x1000005; call edx; 
0x001309ac: push 0x1000006; call edx; 
0x00130914: push 0x1000007; call eax; 
0x000ff1b7: push 0x100; push eax; push edx; call ebx; 
0x00119b23: push 0x1018; call 0x20150; add esp, 0x18; pop ebx; ret; 
0x00072b03: push 0x10; push dword ptr [esp + 8]; push ebx; call dword ptr [eax + 0x1c]; 
0x00074c33: push 0x10; push edi; push ebx; call dword ptr [eax + 0x1c]; 
0x0017feeb: push 0x1c030004; mov edi, dword ptr [esi]; jmp ebx; 
0x000f6dc4: push 0x1fff8fb; fnstcw word ptr [esi]; jmp ecx; 
0x00101540: push 0x1fff903; fdivr dword ptr [esi]; jmp eax; 
0x000e2f48: push 0x1fffffb; ret; 
0x0012cda7: push 0x2000001; mov eax, dword ptr [esp + 0x20]; call dword ptr [eax + 0x14]; 
0x0012dc44: push 0x2000003; call dword ptr [ebp + 0x14]; 
0x0012ceb4: push 0x2000004; call eax; 
0x0012ed92: push 0x2000005; call dword ptr [ebx + 0x14]; 
0x0012d9fa: push 0x2000006; call dword ptr [esi + 0x14]; 
0x0015a3df: push 0x20; push edi; call dword ptr [eax + 0x18]; 
0x00164f57: push 0x2260; push 0x2260; push dword ptr [esp + 0x1c]; call 0x164c90; add esp, 0x1c; ret; 
0x00164f5c: push 0x2260; push dword ptr [esp + 0x1c]; call 0x164c90; add esp, 0x1c; ret; 
0x0008686a: push 0x2308e8b; add byte ptr [eax], al; lea edx, [esi + 0x22c]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0010b15b: push 0x241; push dword ptr [esp + 0x1c]; call 0x109d40; add esp, 0x1c; ret; 
0x00171628: push 0x24448909; and al, 0x89; ret; 
0x000887d5: push 0x24448b52; adc byte ptr [ebp - 0x1a192f80], cl; call dword ptr [eax - 0x73]; 
0x000cb00f: push 0x246c8d51; insb byte ptr es:[edi], dx; push ebp; mov ecx, dword ptr [esp + 0x34]; call ecx; 
0x0002a044: push 0x2474ff50; pop eax; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x00028c96: push 0x2474ff50; pop esp; push dword ptr [esp + 0x5c]; call esi; 
0x0016e7dc: push 0x28; push dword ptr [ebp - 0x50]; call eax; 
0x001322b5: push 0x2a5b878d; stc; dec dword ptr [ecx - 0x7872af05]; jno 0x132302; stc; call dword ptr [eax - 0x18]; 
0x0008db34: push 0x31; sar byte ptr [ecx], cl; fmul dword ptr [edi]; xchg ebp, eax; ret 0x148d; 
0x000c7359: push 0x31ffffea; inc dword ptr [ebx - 0x363743]; call dword ptr [eax]; 
0x0004ab7f: push 0x34588b2c; xor eax, eax; ret; 
0x0008cb97: push 0x39000000; ret 0x6174; 
0x0008d2f3: push 0x39000000; ret 0x6574; 
0x0008c24a: push 0x39000000; ret 0x7e74; 
0x0008bfb1: push 0x39000000; ret 0x840f; 
0x0019b297: push 0x3efff9d8; jmp eax; 
0x0013cc73: push 0x400; call 0x20150; mov dword ptr [ebx + 0xfc0], eax; add esp, 0x18; pop ebx; ret; 
0x0013c930: push 0x400; push dword ptr [esp + 0x10]; push ebp; call edi; 
0x000374ec: push 0x448b900c; and al, 8; mov esp, ecx; jmp edx; 
0x0007a7d3: push 0x47; stc; call dword ptr [eax - 0x18]; 
0x000cb48f: push 0x480fc085; ret 0x548b; 
0x000feb8b: push 0x49; stc; call dword ptr [eax - 0x18]; 
0x0010bad8: push 0x4a; stc; call dword ptr [eax - 0x18]; 
0x00088a52: push 0x4f8b0005; push 0xc24548b; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0011671b: push 0x540a; push dword ptr [esp + 0x1c]; call 0x117200; add esp, 0x1c; ret; 
0x0011661c: push 0x5410; push dword ptr [esp + 0x1c]; call 0x117200; add esp, 0x1c; ret; 
0x00088a90: push 0x548b0005; and al, 0xc; mov ecx, esi; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0011f65a: push 0x5b000003; ret; 
0x001410ff: push 0x5b14c483; pop esi; ret; 
0x0011f1fd: push 0x5bfff94a; pop esi; ret; 
0x00119329: push 0x8000; push 0; push dword ptr [esp + 0x1c]; call 0x58600; add esp, 0x1c; ret; 
0x000842b7: push 0x80; push dword ptr [esp + 0x1c]; call 0x841e0; add esp, 0x18; pop ebx; ret; 
0x000845eb: push 0x80; push dword ptr [esp + 0x1c]; call 0x84520; add esp, 0x1c; ret; 
0x0008d7c7: push 0x80; push dword ptr [esp + 0x1c]; call 0x8d770; add esp, 0x18; pop ebx; ret; 
0x000aa4c5: push 0x80fffffe; cmp byte ptr [ecx], al; sbb eax, -1; pop ebx; ret; 
0x00156991: push 0x810001b4; ret 0x366b; 
0x0018298d: push 0x81fffef4; ret; 
0x0018258d: push 0x81fffef8; ret; 
0x00181e8d: push 0x81fffeff; ret; 
0x00181a8d: push 0x81ffff03; ret; 
0x0017fb8d: push 0x81ffff22; ret; 
0x0017e48d: push 0x81ffff39; ret; 
0x000424d9: push 0x83000001; salc; add byte ptr [ecx], dh; ror byte ptr [ecx + 0xfb83f2], 0x19; ret 0xba; 
0x00072ddc: push 0x83000019; clc; add dword ptr [edi + 0xb], edi; ret; 
0x000d7e99: push 0x83b77d1c; ret 0x8301; 
0x0006b8d0: push 0x83fffff7; in al, dx; or al, 0x8d; adc ah, 0x78; stc; call dword ptr [eax - 0x18]; 
0x0006d832: push 0x83fffff7; in al, dx; or al, 0x8d; cmp al, 0x78; stc; call dword ptr [eax - 0x18]; 
0x00060c7d: push 0x8500000b; test byte ptr [edi], -0x6b; ret 0xff83; 
0x000946fd: push 0x8500003b; leave; jne 0x94710; ret; 
0x000918d4: push 0x89fff8e8; cmp al, 0x24; call esi; 
0x000ee244: push 0x89ffffb3; ret 0xe883; 
0x0006c567: push 0x89fffff7; lea esi, [edi + esi*8 - 1]; call dword ptr [esi + 0x6a]; 
0x00179735: push 0x89fffffb; test dword ptr [ebx + edi*8 - 0x53170001], edx; ret 0xfff6; 
0x001412af: push 0x89ffffff; pop ebp; test byte ptr [ecx - 0x8f7b], cl; dec dword ptr [ecx - 0x9373]; jmp dword ptr [ebp - 0x5f]; 
0x0014d5b6: push 0x8b000001; dec esp; ret 0x8904; 
0x0011f5d2: push 0x8b000003; dec esp; and al, 8; mov dword ptr [ecx], eax; mov eax, 1; ret; 
0x0008681d: push 0x8b04488b; adc byte ptr [eax + 0xf1], bh; call dword ptr gs:[0x10]; 
0x0005370f: push 0x8bffffff; test dword ptr [edi + edi*8 - 1], eax; dec dword ptr [edi]; scasd eax, dword ptr es:[edi]; ret; 
0x0006b992: push 0x8dfffff7; xchg dword ptr [ecx + edi*2], esp; stc; call dword ptr [eax - 0x73]; 
0x0011b98d: push 0x8dffffff; test dword ptr [edi + edi*8 - 1], edi; call dword ptr [eax - 0x73]; 
0x0011ec31: push 0x93818d50; dec ebx; stc; call dword ptr [eax - 0x18]; 
0x00122838: push 0xa0828b; add byte ptr [eax], al; mov dword ptr [esp + 0x6c], eax; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x001567d8: push 0xa; call 0x152d90; add esp, 0x1c; ret; 
0x001567f7: push 0xa; call 0x152e60; add esp, 0x1c; ret; 
0x00038c67: push 0xa; push 0; push dword ptr [esp + 0x1c]; call 0x3c860; add esp, 0x1c; ret; 
0x00038c87: push 0xa; push 0; push dword ptr [esp + 0x1c]; call 0x3c960; add esp, 0x1c; ret; 
0x00034557: push 0xb3948b; je 0x34556; inc dword ptr [ecx]; fidivr dword ptr [esi]; jmp edx; 
0x00088a57: push 0xc24548b; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0015358b: push 0xd; add byte ptr [ebx - 0x7f72eb14], al; shl dword ptr [ecx - 7], 1; call dword ptr [eax + 0x6a]; 
0x00162079: push 0xd; push edx; call dword ptr [eax + 0x14]; 
0x0011f245: push 0xe853c031; ret 0x4a; 
0x000b967c: push 0xf000004; xchg ebp, eax; ret 0x9eb; 
0x000995e1: push 0xf600003b; ret 0x7402; 
0x000b6711: push 0xf7828d50; inc ebx; stc; call dword ptr [eax - 0x18]; 
0x001626ad: push 0xfffff928; mov dh, 0x64; sub cl, bh; call dword ptr [edi + 0x52]; 
0x00173b95: push 0xffffffff; add esp, 4; pop ebx; pop esi; ret; 
0x0002171d: push 1; call 0x10a240; add esp, 0x1c; ret; 
0x00156458: push 1; call 0x152d90; add esp, 0x1c; ret; 
0x00156477: push 1; call 0x152e60; add esp, 0x1c; ret; 
0x000808b3: push 1; call 0x80310; add esp, 0x18; pop ebx; ret; 
0x00069399: push 1; jmp eax; 
0x00077f29: push 1; push 0; push 0; push dword ptr [esp + 0x18]; call dword ptr [ebx + 0x40]; 
0x0007e668: push 1; push 0; push 0; push ebx; call dword ptr [ebp + 0x24]; 
0x00173e32: push 1; push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x0007d3d5: push 1; push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x00079f99: push 1; push 0; push dword ptr [esp + 0x1c]; call 0x739b0; add esp, 0x1c; ret; 
0x00146e07: push 1; push dword ptr [esp + 0x1c]; call 0x146ce0; add esp, 0x1c; ret; 
0x0008bab7: push 1; push dword ptr [esp + 0x1c]; call 0x8b960; add esp, 0x1c; ret; 
0x00071957: push 1; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x71860; add esp, 0x1c; ret; 
0x0010c97c: push 1; push dword ptr [esp + 0x30]; push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x00037369: push 1; push dword ptr [esp + 8]; call 0x372d0; pop ecx; pop edx; ret; 
0x0008e1f9: push 1; push eax; call 0x82fd0; add esp, 0x28; pop ebx; ret; 
0x0008f029: push 1; push eax; call 0x82fd0; add esp, 0x2c; ret; 
0x001590d7: push 1; push ebx; call dword ptr [eax]; 
0x0011d761: push 1; push ebx; call esi; 
0x0007880a: push 1; push edx; push eax; push ebx; call dword ptr [edi + 0x40]; 
0x00174256: push 1; push edx; push eax; push esi; call dword ptr [edi + 0x40]; 
0x00070289: push 1; push esi; call eax; 
0x00155b98: push 2; call 0x152d90; add esp, 0x1c; ret; 
0x00155bb7: push 2; call 0x152e60; add esp, 0x1c; ret; 
0x00077ccc: push 2; push 0; push 0; push dword ptr [esp + 0x18]; call dword ptr [edi + 0x40]; 
0x0007130e: push 2; push 0; push 0; push ebp; call dword ptr [esi + 0x40]; 
0x00173d28: push 2; push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x0007e073: push 2; push 0; push 0; push ebx; call dword ptr [esi + 0x40]; 
0x0007d2be: push 2; push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x0013a7c7: push 2; push dword ptr [esp + 0x1c]; call 0x139a50; add esp, 0x1c; ret; 
0x0010ccb7: push 2; push dword ptr [esp + 0x30]; push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x00154eff: push 2; push dword ptr [esp + 0x3c]; call 0x154d40; add esp, 0x3c; ret; 
0x00159208: push 2; push ebx; call dword ptr [eax]; 
0x0011d774: push 2; push ebx; call esi; 
0x00154b98: push 3; call 0x152d90; add esp, 0x1c; ret; 
0x00154bb7: push 3; call 0x152e60; add esp, 0x1c; ret; 
0x0007e666: push 3; push 1; push 0; push 0; push ebx; call dword ptr [ebp + 0x24]; 
0x00173e30: push 3; push 1; push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x00173d26: push 3; push 2; push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x0011d784: push 3; push ebx; call edx; 
0x00162e16: push 3; push edi; call dword ptr [eax]; 
0x001557d8: push 4; call 0x152d90; add esp, 0x1c; ret; 
0x001557f7: push 4; call 0x152e60; add esp, 0x1c; ret; 
0x001626c2: push 4; push ebx; call dword ptr [eax]; 
0x00161fa9: push 4; push edx; call dword ptr [eax + 0x14]; 
0x001592c3: push 4; push edx; mov dword ptr [esp + 0x2c], edx; call dword ptr [eax]; 
0x00153598: push 5; call 0x152d90; add esp, 0x1c; ret; 
0x001535b7: push 5; call 0x152e60; add esp, 0x1c; ret; 
0x00030687: push 5; push dword ptr [esp + 0x18]; push 0; call 0x30630; add esp, 0x1c; ret; 
0x00030667: push 5; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x30630; add esp, 0x1c; ret; 
0x0010cc4c: push 5; push dword ptr [esp + 0x30]; push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x00159823: push 5; push ebx; call dword ptr [eax]; 
0x0013132e: push 5; ror eax, 9; xor eax, dword ptr gs:[0x18]; push esi; call eax; 
0x00155f38: push 6; call 0x152d90; add esp, 0x1c; ret; 
0x00155f57: push 6; call 0x152e60; add esp, 0x1c; ret; 
0x00161fbc: push 6; push eax; call dword ptr [edx + 0x14]; 
0x00157e68: push 7; call 0x152d90; add esp, 0x1c; ret; 
0x00157e87: push 7; call 0x152e60; add esp, 0x1c; ret; 
0x00153c38: push 8; call 0x152d90; add esp, 0x1c; ret; 
0x00153c57: push 8; call 0x152e60; add esp, 0x1c; ret; 
0x0015f118: push 8; push ebx; call dword ptr [eax + 0x18]; 
0x0015a486: push 8; push edi; call dword ptr [eax + 0x18]; 
0x001578b8: push 9; call 0x152d90; add esp, 0x1c; ret; 
0x001578d7: push 9; call 0x152e60; add esp, 0x1c; ret; 
0x00087bb6: push cs; aas; stc; call dword ptr [eax - 0x18]; 
0x0009f25d: push cs; add al, byte ptr [eax]; add byte ptr [ebx + 0x29142454], cl; ret 0xb48d; 
0x000e2f50: push cs; add al, byte ptr [eax]; add byte ptr [ebx - 0x17acf314], al; ret; 
0x00089567: push cs; add byte ptr [0x1a0a97], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x114], edx; ret; 
0x00089547: push cs; add byte ptr [0x1a0ab7], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x11c], edx; ret; 
0x00088347: push cs; add byte ptr [0x1a1cb7], al; mov eax, dword ptr [eax + 0x3a28]; ret; 
0x00082977: push cs; add byte ptr [0x1a7687], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x110], edx; ret; 
0x00082957: push cs; add byte ptr [0x1a76a7], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x10c], edx; ret; 
0x00082937: push cs; add byte ptr [0x1a76c7], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x108], edx; ret; 
0x00082917: push cs; add byte ptr [0x1a76e7], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x104], edx; ret; 
0x0014711c: push cs; add byte ptr [ebp - 0x75], ah; adc eax, 0; mov eax, dword ptr [eax - 0x14]; mov eax, dword ptr [edx + eax]; ret; 
0x000353d7: push cs; add byte ptr [ebx + 0x478920c4], al; adc al, 0x89; ret; 
0x0002f985: push cs; add byte ptr [ebx + 0xfe910c4], al; or edi, edi; call dword ptr [eax - 0x73]; 
0x000511bf: push cs; add byte ptr [ebx - 0x365343], cl; dec dword ptr [ebp - 0x6894f79]; call dword ptr [eax - 0x73]; 
0x0002eafc: push cs; add byte ptr [ebx - 0x4d16ef3c], al; idiv edi; jmp dword ptr [esi - 0x70]; 
0x0013cc9e: push cs; add byte ptr [ebx - 0x7c72ef14], al; pushal; sub al, 0xf1; call dword ptr [eax - 0x73]; 
0x00082997: push cs; add byte ptr [ecx + 0x1a7667c2], al; add byte ptr [ebx - 0x7cfbdbbc], cl; cmp byte ptr [ecx], al; je 0x829b0; ret; 
0x00031e7d: push cs; add byte ptr [ecx - 0x76dbdbbc], cl; ret; 
0x0004d087: push cs; add cl, ch; cmp esi, dword ptr [edi*8 + 0x3436e9ff]; std; jmp dword ptr [esi - 0x70]; 
0x0004db27: push cs; add cl, ch; movsd dword ptr es:[edi], dword ptr [esi]; sub ebp, edi; jmp dword ptr [esi - 0x70]; 
0x0008f9ae: push cs; add dl, bh; dec dword ptr [ebp - 0x67d337e]; call dword ptr [eax - 0x73]; 
0x001626f0: push cs; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x001152b1: push cs; add esp, 4; pop ebx; pop esi; ret; 
0x0008f149: push cs; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00147409: push cs; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0007e6d1: push cs; add esp, 8; pop ebx; ret; 
0x0008f491: push cs; add esp, 8; xor eax, eax; pop ebx; ret; 
0x000719fd: push cs; and byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00131281: push cs; and eax, 1; pop ebx; ret; 
0x000b46a4: push cs; call ecx; 
0x00172b00: push cs; cld; jmp dword ptr [esi - 0x70]; 
0x000aaf37: push cs; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000c9b4c: push cs; cmp dword ptr [edi], ecx; jne 0xc9ca0; pop edi; pop esi; ret; 
0x0011f629: push cs; cmp ecx, edx; jne 0x11f620; mov eax, dword ptr [eax + 4]; pop ebx; ret; 
0x000e60d5: push cs; dec eax; stc; call dword ptr [eax - 0x18]; 
0x00196952: push cs; jb 0x196970; lea eax, [edi + 0xd]; pop edi; ret; 
0x00197992: push cs; jb 0x1979b0; lea eax, [eax + 0xd]; pop edi; ret; 
0x00197022: push cs; jl 0x197040; lea eax, [ecx + 0xe]; ret; 
0x000a5cf9: push cs; jne 0xa5ed0; pop edi; pop ebx; ret; 
0x000a6129: push cs; jne 0xa5ed1; pop ebx; ret; 
0x000aa60a: push cs; jne 0xaa331; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000ad3da: push cs; jne 0xadc50; pop edi; pop esi; pop ebx; ret; 
0x000ad991: push cs; lea eax, [edi + 0x16]; pop edi; pop esi; pop ebx; ret; 
0x000adaa1: push cs; lea eax, [edi + 0x1e]; pop edi; pop esi; pop ebx; ret; 
0x000a5cf6: push cs; lea ecx, [edx + 0xe]; jne 0xa5ed0; pop edi; pop ebx; ret; 
0x000a6126: push cs; lea ecx, [edx + 0xe]; jne 0xa5ed1; pop ebx; ret; 
0x001a0f2a: push cs; lea esi, [esi]; nop; call dword ptr [esi]; 
0x000afd91: push cs; mov byte ptr [eax + 4], dh; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00058c35: push cs; mov dword ptr [edx + 8], 0; xchg dword ptr [edx], eax; cmp eax, 1; jg 0x58c48; ret; 
0x000b3414: push cs; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00197821: push cs; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x000aff81: push cs; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00082859: push cs; mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x000afd72: push cs; mov word ptr [eax], cx; mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b0078: push cs; movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000aff78: push cs; movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x001922e1: push cs; movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x00081554: push cs; or byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x000857d1: push cs; pop ebx; pop esi; pop edi; ret; 
0x000ac281: push cs; pop edi; pop esi; pop ebx; ret; 
0x000a8274: push cs; pop edi; ret; 
0x0010ddf4: push cs; ret 0x11; 
0x000f359e: push cs; ret 0xffff; 
0x000a83d4: push cs; ret; 
0x0015e619: push cs; stc; call dword ptr [eax - 0x73]; 
0x00023789: push cs; sub bh, cl; call dword ptr [eax - 0x18]; 
0x001920d0: push cs; sub eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x00191dcc: push cs; sub eax, ecx; pop esi; pop edi; ret; 
0x000aa634: push cs; sub ebx, 0xf; lea ecx, [edx + 0xf]; jne 0xaa331; pop ebx; ret; 
0x00080ba9: push cs; sub edx, dword ptr [eax + 0xc]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x000e172c: push cs; sub esp, 8; push eax; push edi; call esi; 
0x0009a551: push cs; sub esp, 8; push ecx; push dword ptr [ebx + 0x24]; call eax; 
0x0003bb81: push cs; xor eax, eax; pop ebx; pop esi; ret; 
0x0002cf3e: push ds; aas; test bh, dh; call dword ptr [ebp + 3]; 
0x0002fff6: push ds; adc al, 0; add eax, 0x1fa007; mov eax, dword ptr [eax - 0x13c]; add eax, dword ptr gs:[0]; ret; 
0x0003ec3b: push ds; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x000ced1f: push ds; add eax, 0xc9c1c189; add al, byte ptr [ecx - 0x70a3d707]; add dh, byte ptr [esi + 0xa]; mov eax, edx; ret; 
0x00024d50: push ds; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; or dword ptr [eax + 0x6f], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00025fe6: push ds; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax + 0x6f], cl; stc; call dword ptr [eax - 0x18]; 
0x00025405: push ds; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + 0x6f], ecx; stc; call dword ptr [eax - 0x18]; 
0x001245ea: push ds; add esp, 0x18; pop ebx; ret; 
0x00090058: push ds; add esp, 0x2c; ret; 
0x0008bba0: push ds; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0011f6c0: push ds; dec esi; stc; call dword ptr [eax + 0x57]; 
0x0016bef0: push ds; hlt; dec dword ptr [ebp - 0x13343]; dec dword ptr [ecx - 0xa77b]; dec dword ptr [ebp - 0xa77b]; call dword ptr [edi + 0x50]; 
0x000cd569: push ds; inc ebp; stc; call dword ptr [eax - 0x18]; 
0x000cd569: push ds; inc ebp; stc; call dword ptr [eax - 0x18]; lodsd eax, dword ptr [esi]; ret; 
0x000abfe7: push ds; jne 0xac520; pop edi; pop esi; pop ebx; ret; 
0x000ad6ba: push ds; jne 0xadc50; pop edi; pop esi; pop ebx; ret; 
0x000373c9: push ds; leave; mov dword ptr [edx + 0x28], ecx; ret; 
0x00081001: push ds; movzx eax, byte ptr [edx]; pop ebx; pop esi; ret; 
0x00074ada: push ds; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00122009: push ds; pop ebx; pop esi; pop edi; ret; 
0x000adaa4: push ds; pop edi; pop esi; pop ebx; ret; 
0x00038c2e: push ds; pop edx; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00137d62: push ds; pop edx; stc; call dword ptr [eax - 0x18]; 
0x00137f03: push ds; pop edx; stc; call dword ptr [eax - 0x73]; 
0x00092f72: push ds; sti; call 0x171e01; add eax, 0x197087; mov dword ptr [eax + 0x3b04], 0; ret; 
0x00088342: push ds; sti; call 0x171e01; add eax, 0x1a1cb7; mov eax, dword ptr [eax + 0x3a28]; ret; 
0x00080e82: push ds; sti; call 0x171e01; add eax, 0x1a9177; mov eax, dword ptr [eax + 0xce0]; ret; 
0x000384d2: push ds; sti; call 0x171e01; add eax, 0x1f1b27; mov eax, dword ptr [eax + 0x64]; ret; 
0x000384b2: push ds; sti; call 0x171e01; add eax, 0x1f1b47; mov eax, dword ptr [eax + 0x68]; ret; 
0x0002b8c2: push ds; sti; call 0x171e01; add eax, 0x1fe737; mov eax, dword ptr [eax + 0x1014]; ret; 
0x000227b2: push ds; sti; call 0x171e01; add eax, 0x207847; mov eax, dword ptr [eax + 0xff0]; ret; 
0x00022792: push ds; sti; call 0x171e01; add eax, 0x207867; mov eax, dword ptr [eax + 0xfec]; ret; 
0x00021752: push ds; sti; call 0x171e01; add eax, 0x2088a7; lea eax, [eax - 0x6921c]; ret; 
0x00021732: push ds; sti; call 0x171e01; add eax, 0x2088c7; lea eax, [eax - 0x69214]; ret; 
0x00020162: push ds; sti; jmp dword ptr [ebx + 0xc]; 
0x00020152: push ds; sti; jmp dword ptr [ebx - 0x10]; nop word ptr [eax + eax]; endbr32; jmp dword ptr [ebx + 0xc]; 
0x00123b52: push ds; sti; mov eax, 0x123; call dword ptr gs:[0x10]; 
0x000df2c2: push ds; sti; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x000df2c2: push ds; sti; mov eax, 0x14; call dword ptr gs:[0x10]; ret; 
0x00118e02: push ds; sti; mov eax, 0x24; call dword ptr gs:[0x10]; 
0x000df2e2: push ds; sti; mov eax, 0x40; call dword ptr gs:[0x10]; 
0x000df2e2: push ds; sti; mov eax, 0x40; call dword ptr gs:[0x10]; ret; 
0x000df612: push ds; sti; mov eax, 0x41; call dword ptr gs:[0x10]; 
0x000df612: push ds; sti; mov eax, 0x41; call dword ptr gs:[0x10]; ret; 
0x000df692: push ds; sti; mov eax, 0x42; call dword ptr gs:[0x10]; 
0x0011c752: push ds; sti; mov eax, 0x99; call dword ptr gs:[0x10]; 
0x0008fe32: push ds; sti; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0008fe32: push ds; sti; mov eax, 0x9e; call dword ptr gs:[0x10]; ret; 
0x000df302: push ds; sti; mov eax, 0xc7; call dword ptr gs:[0x10]; 
0x000df302: push ds; sti; mov eax, 0xc7; call dword ptr gs:[0x10]; ret; 
0x000df342: push ds; sti; mov eax, 0xc8; call dword ptr gs:[0x10]; 
0x000df342: push ds; sti; mov eax, 0xc8; call dword ptr gs:[0x10]; ret; 
0x000df322: push ds; sti; mov eax, 0xc9; call dword ptr gs:[0x10]; 
0x000df322: push ds; sti; mov eax, 0xc9; call dword ptr gs:[0x10]; ret; 
0x000df362: push ds; sti; mov eax, 0xca; call dword ptr gs:[0x10]; 
0x000df362: push ds; sti; mov eax, 0xca; call dword ptr gs:[0x10]; ret; 
0x00123f02: push ds; sti; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x00123f02: push ds; sti; mov eax, 0xe0; call dword ptr gs:[0x10]; ret; 
0x000801c2: push ds; sti; mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x0007f9e2: push ds; sti; mov eax, 0xffffffff; ret; 
0x001585d2: push ds; sti; mov eax, 1; ret; 
0x0015a952: push ds; sti; mov eax, 2; ret; 
0x00082802: push ds; sti; mov eax, dword ptr [eax + 0x1c]; mov dword ptr gs:[0x80], eax; ret; 
0x00036ed2: push ds; sti; mov eax, dword ptr [esp + 0x10]; and eax, 0x80000000; ret; 
0x0017a982: push ds; sti; mov eax, dword ptr [esp + 0x10]; mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x00166b32: push ds; sti; mov eax, dword ptr [esp + 4]; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x0007be82: push ds; sti; mov eax, dword ptr [esp + 4]; and dword ptr [eax], 0xffffffcf; ret; 
0x0002fdc2: push ds; sti; mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x00133a62: push ds; sti; mov eax, dword ptr [esp + 4]; and eax, 0xffff; ror ax, 8; ret; 
0x00133a52: push ds; sti; mov eax, dword ptr [esp + 4]; bswap eax; ret; 
0x00084b82: push ds; sti; mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x0008e0a2: push ds; sti; mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 1; xor eax, eax; ret; 
0x0014df92: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x10]; ret; 
0x00166b72: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x00080eb2: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x001719a2: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x001719c2: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x50]; ret; 
0x00171a52: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x54]; ret; 
0x00171a42: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x001719d2: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x00091b52: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x64]; ret; 
0x001160d2: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x0007b0c2: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x0007b072: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x804; ret; 
0x000d9102: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; ret; 
0x001719b2: push ds; sti; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x00080ec2: push ds; sti; mov eax, dword ptr [esp + 4]; ret; 
0x0007eef2: push ds; sti; mov eax, dword ptr [esp + 4]; test byte ptr [eax], 0x80; jne 0x7ef00; ret; 
0x0008d762: push ds; sti; mov eax, dword ptr gs:[8]; ret; 
0x000886d2: push ds; sti; mov eax, dword ptr gs:[8]; xor edx, edx; lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x00166772: push ds; sti; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x00123d42: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x136; call dword ptr gs:[0x10]; 
0x00123a52: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x149; call dword ptr gs:[0x10]; 
0x00123b72: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x00118ee2: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x158; call dword ptr gs:[0x10]; 
0x00123ed2: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x17e; call dword ptr gs:[0x10]; 
0x000ddbe2: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x0010c2c2: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x28; call dword ptr gs:[0x10]; 
0x0010af82: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x29; call dword ptr gs:[0x10]; 
0x00118ce2: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x33; call dword ptr gs:[0x10]; 
0x00109922: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x00118d12: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x00123d72: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x56; call dword ptr gs:[0x10]; 
0x00120ff2: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x00119242: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x00123902: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x71; call dword ptr gs:[0x10]; 
0x001192a2: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x73; call dword ptr gs:[0x10]; 
0x00123d12: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x000dd612: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x00123ab2: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x82; call dword ptr gs:[0x10]; 
0x000df5b2: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x84; call dword ptr gs:[0x10]; 
0x0010b1a2: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x00121a72: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x88; call dword ptr gs:[0x10]; 
0x000df662: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x93; call dword ptr gs:[0x10]; 
0x0011c722: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x98; call dword ptr gs:[0x10]; 
0x000fb012: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x000fb062: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x000fb092: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x0010c262: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xa; call dword ptr gs:[0x10]; 
0x0010b172: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xc; call dword ptr gs:[0x10]; 
0x001213f2: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x00121412: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x00123a22: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xfe; call dword ptr gs:[0x10]; 
0x0008c672: push ds; sti; nop; xor eax, eax; ret; 
0x000de3b2: push ds; sti; pop ecx; mov eax, 0xbe; int 0x80; 
0x000dd642: push ds; sti; push ebx; mov eax, 0x2b; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00021492: push ds; sti; ret; 
0x00080112: push ds; sti; xor eax, eax; ret; 
0x0015aa69: push ds; sub esp, 0xc; mov eax, dword ptr [ebx + 0x2398]; push esi; call dword ptr [eax + 0x10]; 
0x0011dbc9: push ds; sub esp, 8; push dword ptr [ebx]; mov ebp, ebx; push esi; call edi; 
0x0002c2fc: push dword ptr [eax + 0x1018]; call 0x11e250; add esp, 0x1c; ret; 
0x0015859c: push dword ptr [eax + 0x14]; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x0015f738: push dword ptr [eax + 0x190]; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x0015f738: push dword ptr [eax + 0x190]; push eax; push edx; call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x0007caa3: push dword ptr [eax + 0x38]; call 0x10a3d0; add esp, 0x18; pop ebx; ret; 
0x00166f31: push dword ptr [eax + 0xc]; call 0x79850; add esp, 0x1c; not eax; shr eax, 0x1f; ret; 
0x0008fbb4: push dword ptr [eax + 4]; call dword ptr [eax]; 
0x000caea1: push dword ptr [eax + 4]; push dword ptr [eax]; call 0xcd250; add esp, 0x1c; ret; 
0x0016f932: push dword ptr [eax + ebx*2 - 0x77]; ret 0xe283; 
0x000d9749: push dword ptr [eax + ecx*2 - 0x77]; ret 0xe283; 
0x000715e5: push dword ptr [eax + ecx*2 - 0x77]; ret; 
0x00057c02: push dword ptr [eax]; call 0x59450; add esp, 0x1c; ret; 
0x000752a2: push dword ptr [eax]; call 0x60130; add esp, 0x1c; ret; 
0x00051fb1: push dword ptr [eax]; call 0x685c0; add esp, 0x1c; ret; 
0x00075241: push dword ptr [eax]; call 0x6d850; add esp, 0x1c; ret; 
0x000331d2: push dword ptr [eax]; call 0xb44b0; add esp, 0x1c; ret; 
0x000caea4: push dword ptr [eax]; call 0xcd250; add esp, 0x1c; ret; 
0x000c4ecc: push dword ptr [eax]; call edi; 
0x0007e973: push dword ptr [eax]; mov eax, dword ptr [ebp - 0x2c]; call dword ptr [eax + 0xc]; 
0x0011dc95: push dword ptr [eax]; mov eax, dword ptr [ebp - 0x3c]; push dword ptr [ebp - 0x38]; mov dword ptr [ebp - 0x30], edx; call eax; 
0x000331cc: push dword ptr [eax]; mov eax, dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0xb44b0; add esp, 0x1c; ret; 
0x0013122c: push dword ptr [eax]; push dword ptr [esp + 0x1c]; call 0x12fc60; add esp, 0x1c; ret; 
0x000dea17: push dword ptr [eax]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xde870; add esp, 0x1c; ret; 
0x000decb7: push dword ptr [eax]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xdf280; add esp, 0x1c; ret; 
0x00073a93: push dword ptr [ebp + 0x14]; push dword ptr [ebp + 0xc]; push esi; call dword ptr [ebx + 0x2c]; 
0x00161339: push dword ptr [ebp + 0x50]; mov ebx, dword ptr [esp + 0x3c]; push ebx; call dword ptr [eax + 0x14]; 
0x0010c982: push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x00073a96: push dword ptr [ebp + 0xc]; push esi; call dword ptr [ebx + 0x2c]; 
0x00132aaf: push dword ptr [ebp + 0xe]; pop ebx; pop esi; pop edi; ret; 
0x00073346: push dword ptr [ebp + 8]; push edx; call dword ptr [ebx + 0x1c]; 
0x000748ab: push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x00071d1a: push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x00104431: push dword ptr [ebp + 9]; mov eax, dword ptr [esp + 4]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x001732b5: push dword ptr [ebp + eax + 1]; ret 0x5689; 
0x00071a58: push dword ptr [ebp + edx - 0x75]; inc esp; and al, 8; mov edx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x00163348: push dword ptr [ebp + esi*2 - 0x7d]; ret 0x3901; 
0x000e1489: push dword ptr [ebp - 0x198]; call dword ptr [eax + 0x14]; 
0x000e1779: push dword ptr [ebp - 0x198]; mov eax, dword ptr [ebp - 0x19c]; call dword ptr [eax + 0x10]; 
0x00105a01: push dword ptr [ebp - 0x1a8]; call dword ptr [eax + 0x14]; 
0x00105e09: push dword ptr [ebp - 0x1a8]; mov eax, dword ptr [ebp - 0x1ac]; call dword ptr [eax + 0x10]; 
0x00073343: push dword ptr [ebp - 0x1c]; push dword ptr [ebp + 8]; push edx; call dword ptr [ebx + 0x1c]; 
0x000748a8: push dword ptr [ebp - 0x1c]; push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x00078e9d: push dword ptr [ebp - 0x2c]; push edx; push ebx; push esi; call eax; 
0x001a0c3e: push dword ptr [ebp - 0x31]; pop ebx; pop esi; pop edi; ret; 
0x00020f4a: push dword ptr [ebp - 0x34]; call dword ptr [ebp - 0x38]; 
0x0011dc9a: push dword ptr [ebp - 0x38]; mov dword ptr [ebp - 0x30], edx; call eax; 
0x000802b7: push dword ptr [ebp - 0x40]; add esp, 4; pop ebx; pop esi; ret; 
0x0012ed8f: push dword ptr [ebp - 0x4c]; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x0016e7de: push dword ptr [ebp - 0x50]; call eax; 
0x000ff018: push dword ptr [ebp - 0x534]; push dword ptr [ebp - 0x538]; push dword ptr [ebp - 0x6e0]; push dword ptr [ebp - 0x6ec]; call ebx; 
0x000ff01e: push dword ptr [ebp - 0x538]; push dword ptr [ebp - 0x6e0]; push dword ptr [ebp - 0x6ec]; call ebx; 
0x0016e7d9: push dword ptr [ebp - 0x60]; push 0x28; push dword ptr [ebp - 0x50]; call eax; 
0x000ff024: push dword ptr [ebp - 0x6e0]; push dword ptr [ebp - 0x6ec]; call ebx; 
0x000ff02a: push dword ptr [ebp - 0x6ec]; call ebx; 
0x000ff012: push dword ptr [ebp - 0x714]; push dword ptr [ebp - 0x534]; push dword ptr [ebp - 0x538]; push dword ptr [ebp - 0x6e0]; push dword ptr [ebp - 0x6ec]; call ebx; 
0x0007601e: push dword ptr [ebp - 0x72]; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x00062257: push dword ptr [ebp - 0x7d]; in al, dx; or byte ptr [ebx - 0x4f363], cl; dec dword ptr [ecx - 0x4eb6b]; call dword ptr [ecx + 0x50]; 
0x0005b893: push dword ptr [ebp - 0x7d]; in al, dx; or byte ptr [ebx - 0x59b63], cl; dec dword ptr [ecx - 0x5ab73]; call dword ptr [edx + 0x50]; 
0x00066da2: push dword ptr [ebp - 0x87c]; call dword ptr [eax + 0x1c]; 
0x00066a3a: push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x000671da: push dword ptr [ebp - 0x87c]; call dword ptr [edx + 0x1c]; 
0x000673bc: push dword ptr [ebp - 0x87c]; call edx; 
0x0005385b: push dword ptr [ebp - 0x88]; call eax; 
0x000671d4: push dword ptr [ebp - 0x88c]; push dword ptr [ebp - 0x87c]; call dword ptr [edx + 0x1c]; 
0x0006bacd: push dword ptr [ebp - 0x8a0]; call dword ptr [eax + 0x1c]; 
0x0006cb9b: push dword ptr [ebp - 0x8a0]; call dword ptr [ebx + 0x1c]; 
0x0006c066: push dword ptr [ebp - 0x8a0]; call edx; 
0x0006c393: push dword ptr [ebp - 0x8a0]; mov dword ptr [ebp - 0x88c], ecx; call dword ptr [ebx + 0x1c]; 
0x0006c506: push dword ptr [ebp - 0x8a0]; mov dword ptr [ebp - 0x88c], edx; call dword ptr [ebx + 0x1c]; 
0x0013085c: push dword ptr [ebp - 0xbc]; push 0; call edx; 
0x00130f6e: push dword ptr [ebp - 0xc0]; call edx; 
0x00039309: push dword ptr [ebp]; push dword ptr [esi]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x001589f4: push dword ptr [ebx + 0x229c]; push dword ptr [esp + 0x10]; push esi; call dword ptr [eax + 0xc]; 
0x0009a467: push dword ptr [ebx + 0x24]; call eax; 
0x0009a5d4: push dword ptr [ebx + 0x24]; call edx; 
0x0012757e: push dword ptr [ebx + 0x274]; call 0x20140; add esp, 0x18; pop ebx; ret; 
0x001302e0: push dword ptr [ebx + 0x30]; call eax; 
0x0016084b: push dword ptr [ebx + 0x48]; push dword ptr [esp + 0x2c]; push esi; call dword ptr [eax + 0xc]; 
0x0015db50: push dword ptr [ebx + 0xa8]; push dword ptr [esp + 0x2c]; push esi; call dword ptr [eax + 0xc]; 
0x00084ddf: push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x0003ab16: push dword ptr [ebx + 4]; call eax; 
0x000225d3: push dword ptr [ebx + 4]; call esi; 
0x00020000: push dword ptr [ebx + 4]; jmp dword ptr [ebx + 8]; 
0x000fba70: push dword ptr [ebx + 4]; push dword ptr [ebx]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x38]; call esi; 
0x001595fd: push dword ptr [ebx + 8]; push esi; call dword ptr [ebx + 0xc]; 
0x000763ac: push dword ptr [ebx + eax - 0x7d]; and ebp, edi; add esp, 4; pop ebx; pop esi; ret; 
0x00076357: push dword ptr [ebx + eax - 0x7d]; out dx, eax; pop ebx; pop esi; pop edi; ret; 
0x00126f01: push dword ptr [ebx + ebx - 0x73]; adc al, 0x3f; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; call dword ptr gs:[0x10]; 
0x00023734: push dword ptr [ebx + edx - 0x7d]; in al, dx; or al, 0x57; call 0x16ed20; mov dword ptr [esp], ebx; call edi; 
0x001547e0: push dword ptr [ebx - 0x75]; test byte ptr [esp + esi*8], ah; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x840f; 
0x00082455: push dword ptr [ebx]; call 0x16f110; mov dword ptr [ebx + 0x10], eax; add esp, 0x18; pop ebx; ret; 
0x00082362: push dword ptr [ebx]; call 0x16f1d0; mov dword ptr [ebx + 0xc], eax; add esp, 0x18; pop ebx; ret; 
0x0015b8c2: push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x0015b184: push dword ptr [ebx]; call dword ptr [ebx + 8]; 
0x0016e948: push dword ptr [ebx]; call dword ptr [edx + 0x380]; mov dword ptr [ebx + 0xc], eax; add esp, 0x28; pop ebx; ret; 
0x0011d854: push dword ptr [ebx]; call esi; 
0x0011dbcd: push dword ptr [ebx]; mov ebp, ebx; push esi; call edi; 
0x0002e93b: push dword ptr [ebx]; or eax, 0x89000010; ret 0x858b; 
0x000fba73: push dword ptr [ebx]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x38]; call esi; 
0x0002e95d: push dword ptr [ebx]; sub esp, 0x89000010; ret 0x858b; 
0x00121302: push dword ptr [ecx + eax - 0x3d]; mov ebp, esi; call ebx; 
0x00121302: push dword ptr [ecx + eax - 0x3d]; mov ebp, esi; call ebx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x0010c426: push dword ptr [ecx + eax]; push edx; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x0007121c: push dword ptr [ecx + ebp*4 - 0x77]; ret 0xe283; 
0x00121ff4: push dword ptr [ecx + ebx - 0x48]; jl 0x121ffb; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0002f29d: push dword ptr [ecx + ebx - 0x7d]; in al, dx; or byte ptr [ecx - 0xe36b], cl; call dword ptr [ecx + 0x50]; 
0x00154793: push dword ptr [ecx + edi*2 - 0x7d]; ret; 
0x0016791f: push dword ptr [ecx]; call dword ptr [eax + 0x6a]; 
0x000c7645: push dword ptr [ecx]; call dword ptr [eax - 0x73]; 
0x00152e3e: push dword ptr [ecx]; fild dword ptr [ebx + 0xf0b023c]; xchg ebp, eax; ret; 
0x000dceb5: push dword ptr [ecx]; fucomi st(1); ret; 
0x000c735c: push dword ptr [ecx]; inc dword ptr [ebx - 0x363743]; call dword ptr [eax]; 
0x000fb4ff: push dword ptr [ecx]; jmp dword ptr [esi - 0x77]; 
0x0016f498: push dword ptr [ecx]; mov dword ptr [esp + 0x28], ecx; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0016f398: push dword ptr [ecx]; mov dword ptr [esp + 0x2c], ecx; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x000677d7: push dword ptr [ecx]; rol byte ptr [eax - 0x89a43], cl; call ptr [eax + 0xf]; xchg esp, eax; ret 0x5352; 
0x0008b3b3: push dword ptr [ecx]; sar byte ptr [eax + 0xf0], cl; mov ecx, 7; mov dword ptr [ebx + 4], 0; mov esi, edx; call dword ptr gs:[0x10]; 
0x00092e05: push dword ptr [ecx]; sar byte ptr [eax + 1], cl; call 0x92d70; mov dword ptr [esp], esi; call ebx; 
0x0005deb2: push dword ptr [ecx]; shr cl, 0xbb; sar edi, 1; dec dword ptr [ebx - 0x59b7b]; jmp dword ptr [ebp - 0x75]; 
0x0014e204: push dword ptr [ecx]; shr cl, cl; or eax, 0x8dffffff; sbb dword ptr [eax - 0x53], -7; call dword ptr [eax - 0x73]; 
0x00115c77: push dword ptr [edi + 0x16]; pop ebx; pop esi; pop edi; ret; 
0x00115d76: push dword ptr [edi + 0x17]; pop ebx; pop esi; pop edi; ret; 
0x00115bf4: push dword ptr [edi + 0x19]; pop ebx; pop esi; pop edi; ret; 
0x000931db: push dword ptr [edi + 0x1a]; pop ebx; pop esi; pop edi; ret; 
0x00122007: push dword ptr [edi + 0x1e]; pop ebx; pop esi; pop edi; ret; 
0x000de41d: push dword ptr [edi + 0x20]; hlt; mov eax, ecx; call dword ptr gs:[0x10]; 
0x000ddcfd: push dword ptr [edi + 0x40]; add esp, 0x18; pop ebx; ret; 
0x000379f7: push dword ptr [edi + 0x46]; add esp, 0x14; pop ebx; pop esi; ret; 
0x0010b0c6: push dword ptr [edi + 0x47]; add esp, 0x14; pop ebx; pop esi; ret; 
0x0010aef2: push dword ptr [edi + 0x4b]; add esp, 0x14; pop ebx; pop esi; ret; 
0x0003bc4b: push dword ptr [edi + 0x52]; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0011666d: push dword ptr [edi + 0x58]; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x001217e3: push dword ptr [edi + 0xa]; pop ebx; pop esi; pop edi; ret; 
0x0010866b: push dword ptr [edi + 0xa]; pop ebx; pop esi; ret; 
0x001743e3: push dword ptr [edi + 0xa]; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x00126792: push dword ptr [edi + 0xb]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00058a82: push dword ptr [edi + 0xb]; pop ebx; pop esi; pop edi; ret; 
0x001238a0: push dword ptr [edi + 0xd]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001231a9: push dword ptr [edi + 4]; pop ebx; pop esi; pop edi; ret; 
0x00037999: push dword ptr [edi + 4]; pop ebx; ret; 
0x0008bee8: push dword ptr [edi + 5]; pop ebx; pop esi; pop edi; ret; 
0x00058a28: push dword ptr [edi + 5]; pop ebx; ret; 
0x001052b7: push dword ptr [edi + 6]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000d8f37: push dword ptr [edi + 6]; pop ebx; pop esi; ret; 
0x001260f6: push dword ptr [edi + 7]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00116a7e: push dword ptr [edi + 7]; pop ebx; pop esi; pop edi; ret; 
0x001096fe: push dword ptr [edi + 7]; pop ebx; pop esi; ret; 
0x000cc086: push dword ptr [edi + 7]; pop ebx; ret; 
0x000b67ff: push dword ptr [edi + 8]; call ebx; 
0x00083795: push dword ptr [edi + 8]; pop ebx; pop esi; pop edi; ret; 
0x0009330d: push dword ptr [edi + 8]; pop ebx; pop esi; ret; 
0x00125c54: push dword ptr [edi + 9]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00092c64: push dword ptr [edi + 9]; pop ebx; ret; 
0x00063a47: push dword ptr [edi + ebx - 0x7d]; in al, dx; or byte ptr [ebx - 0x4f363], cl; call dword ptr [edx + 0x50]; 
0x0005bc35: push dword ptr [edi + ebx - 0x7d]; in al, dx; or byte ptr [ebx - 0x59b63], cl; call dword ptr [ecx + 0x50]; 
0x0005b626: push dword ptr [edi + ebx - 0x7d]; in al, dx; or byte ptr [ebx - 0x59b63], cl; call dword ptr [edx + 0x50]; 
0x0008db2e: push dword ptr [edi + ebx*8 - 0x7b]; sar byte ptr [eax + 0x6a], 0x31; sar byte ptr [ecx], cl; fmul dword ptr [edi]; xchg ebp, eax; ret 0x148d; 
0x0016818b: push dword ptr [edi + edx - 0x75]; jnp 0x41a221ea; or byte ptr [ecx], bh; ret 0x2675; 
0x00077508: push dword ptr [edi]; call dword ptr [eax + 0xc]; 
0x000b6303: push dword ptr [edi]; call ebx; 
0x000b626b: push dword ptr [edi]; call esi; 
0x00170462: push dword ptr [edi]; push dword ptr [esi + 4]; push ebp; mov eax, dword ptr [esp + 0x10]; call eax; 
0x0016f411: push dword ptr [edi]; push dword ptr [esi]; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00071a4b: push dword ptr [edx + 0x98]; call eax; 
0x00171fcb: push dword ptr [edx + 0x98]; call eax; cdq; add esp, 0x10; add esp, 0xc; ret; 
0x0002ecee: push dword ptr [edx + eax]; push dword ptr [esp + 0x1c]; call 0x2ed00; add esp, 0x1c; ret; 
0x00054be6: push dword ptr [edx + eax]; push dword ptr [esp + 0x1c]; call 0x523c0; add esp, 0x1c; ret; 
0x0009b2de: push dword ptr [edx + eax]; push dword ptr [esp + 0x1c]; call 0xa2400; add esp, 0x1c; ret; 
0x000c198e: push dword ptr [edx + eax]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc1b40; add esp, 0x1c; ret; 
0x00173e43: push dword ptr [edx + ecx - 0x77]; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x001596be: push dword ptr [esi + 0x10]; push ebx; call dword ptr [esi + 0x14]; 
0x000719ed: push dword ptr [esi + 0x98]; call eax; 
0x00087e7b: push dword ptr [esi + 0xa]; pop ebx; neg eax; pop esi; pop edi; ret; 
0x0010c42a: push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x0015ac7f: push dword ptr [esi + 0xc]; push edi; call dword ptr [eax + 0x10]; 
0x0015ac3c: push dword ptr [esi + 0xc]; push edi; call dword ptr [eax + 8]; 
0x0002c7b0: push dword ptr [esi + 4]; call 0x20140; add esp, 0x14; pop ebx; pop esi; ret; 
0x00170464: push dword ptr [esi + 4]; push ebp; mov eax, dword ptr [esp + 0x10]; call eax; 
0x000b6451: push dword ptr [esi + 8]; call ebx; 
0x00087ee4: push dword ptr [esi + 9]; add esp, 4; neg eax; pop ebx; pop esi; ret; 
0x000600ba: push dword ptr [esi - 0x2e]; mov dword ptr [ebx], edi; pop ebx; pop esi; pop edi; ret; 
0x0015b3c2: push dword ptr [esi]; call dword ptr [esi + 0x20]; 
0x0003930c: push dword ptr [esi]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0016f413: push dword ptr [esi]; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00039305: push dword ptr [esp + 0x10]; push dword ptr [ebp]; push dword ptr [esi]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0007d1b4: push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; push esi; call dword ptr [edx + 0x40]; 
0x0013c935: push dword ptr [esp + 0x10]; push ebp; call edi; 
0x000392a3: push dword ptr [esp + 0x10]; push ebp; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x001589fa: push dword ptr [esp + 0x10]; push esi; call dword ptr [eax + 0xc]; 
0x0007d1b8: push dword ptr [esp + 0x10]; push esi; call dword ptr [edx + 0x40]; 
0x0009a563: push dword ptr [esp + 0x14]; call eax; 
0x0017076f: push dword ptr [esp + 0x14]; mov eax, dword ptr [esp + 0x10]; call eax; 
0x0002150f: push dword ptr [esp + 0x14]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x00158d4f: push dword ptr [esp + 0x14]; push dword ptr [esp + 0x74]; push eax; call dword ptr [ecx]; 
0x00065de4: push dword ptr [esp + 0x14]; push ebp; call dword ptr [eax + 0x1c]; 
0x001639e6: push dword ptr [esp + 0x14]; push ebx; call dword ptr [eax]; 
0x001588e6: push dword ptr [esp + 0x14]; push esi; call dword ptr [eax + 4]; 
0x00077f2f: push dword ptr [esp + 0x18]; call dword ptr [ebx + 0x40]; 
0x00077cd2: push dword ptr [esp + 0x18]; call dword ptr [edi + 0x40]; 
0x00077799: push dword ptr [esp + 0x18]; call dword ptr [edi + 0x48]; 
0x00077bea: push dword ptr [esp + 0x18]; call ecx; 
0x0016d161: push dword ptr [esp + 0x18]; lea eax, [eax - 0x699dd]; push eax; call 0x109bf0; add esp, 0x1c; ret; 
0x00051fa7: push dword ptr [esp + 0x18]; mov eax, dword ptr [eax - 0x11c]; push dword ptr [eax]; call 0x685c0; add esp, 0x1c; ret; 
0x00075237: push dword ptr [esp + 0x18]; mov eax, dword ptr [eax - 0x11c]; push dword ptr [eax]; call 0x6d850; add esp, 0x1c; ret; 
0x00057bf8: push dword ptr [esp + 0x18]; mov eax, dword ptr [eax - 0x70]; push dword ptr [eax]; call 0x59450; add esp, 0x1c; ret; 
0x00075298: push dword ptr [esp + 0x18]; mov eax, dword ptr [eax - 0x70]; push dword ptr [eax]; call 0x60130; add esp, 0x1c; ret; 
0x0016ed05: push dword ptr [esp + 0x18]; mov eax, dword ptr [eax - 0xc8]; call dword ptr [eax + 0x378]; add esp, 0x1c; ret; 
0x0016f39e: push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x000778f3: push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x40]; 
0x00077a6c: push dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x18]; push esi; call dword ptr [edi + 0x40]; 
0x00108809: push dword ptr [esp + 0x18]; push -0x64; call 0x108ad0; add esp, 0x18; pop ebx; ret; 
0x001088bd: push dword ptr [esp + 0x18]; push -0x64; call 0x108c90; add esp, 0x1c; ret; 
0x001099b0: push dword ptr [esp + 0x18]; push -0x64; call 0x1099c0; add esp, 0x1c; ret; 
0x000dd699: push dword ptr [esp + 0x18]; push -1; call 0xdd6b0; add esp, 0x1c; ret; 
0x000dd6df: push dword ptr [esp + 0x18]; push -1; call 0xdd7f0; add esp, 0x1c; ret; 
0x00121057: push dword ptr [esp + 0x18]; push 0; call 0x122700; add esp, 0x1c; ret; 
0x00030689: push dword ptr [esp + 0x18]; push 0; call 0x30630; add esp, 0x1c; ret; 
0x000b6506: push dword ptr [esp + 0x18]; push 0; call 0xb6520; add esp, 0x1c; ret; 
0x0012ceae: push dword ptr [esp + 0x18]; push 0; push 0x2000004; call eax; 
0x0003a9c8: push dword ptr [esp + 0x18]; push 0; push dword ptr [esp + 0x1c]; call 0x3a660; add esp, 0x1c; ret; 
0x00119379: push dword ptr [esp + 0x18]; push 0; push dword ptr [esp + 0x1c]; call 0x58600; add esp, 0x1c; ret; 
0x0010b157: push dword ptr [esp + 0x18]; push 0x241; push dword ptr [esp + 0x1c]; call 0x109d40; add esp, 0x1c; ret; 
0x000845e7: push dword ptr [esp + 0x18]; push 0x80; push dword ptr [esp + 0x1c]; call 0x84520; add esp, 0x1c; ret; 
0x0016ed01: push dword ptr [esp + 0x18]; push dword ptr [esp + 0x18]; mov eax, dword ptr [eax - 0xc8]; call dword ptr [eax + 0x378]; add esp, 0x1c; ret; 
0x00077a68: push dword ptr [esp + 0x18]; push dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x18]; push esi; call dword ptr [edi + 0x40]; 
0x001735dc: push dword ptr [esp + 0x18]; push dword ptr [esp + 0x18]; push esi; call dword ptr [edx + 0x40]; 
0x0003b93b: push dword ptr [esp + 0x18]; push eax; push eax; call 0x3b950; add esp, 0x1c; ret; 
0x001735e0: push dword ptr [esp + 0x18]; push esi; call dword ptr [edx + 0x40]; 
0x001087b3: push dword ptr [esp + 0x1c]; call 0x109330; add esp, 0x1c; ret; 
0x000583b7: push dword ptr [esp + 0x1c]; call 0x109bf0; add esp, 0x1c; ret; 
0x0010b160: push dword ptr [esp + 0x1c]; call 0x109d40; add esp, 0x1c; ret; 
0x0010aacf: push dword ptr [esp + 0x1c]; call 0x10aae0; add esp, 0x1c; ret; 
0x00116777: push dword ptr [esp + 0x1c]; call 0x117200; add esp, 0x10; add esp, 0xc; ret; 
0x00116621: push dword ptr [esp + 0x1c]; call 0x117200; add esp, 0x1c; ret; 
0x0011bf12: push dword ptr [esp + 0x1c]; call 0x11b880; add esp, 0x1c; ret; 
0x0011d3c8: push dword ptr [esp + 0x1c]; call 0x11d3e0; add esp, 0x1c; ret; 
0x0011e539: push dword ptr [esp + 0x1c]; call 0x11e3b0; add esp, 0x18; pop ebx; ret; 
0x0011e509: push dword ptr [esp + 0x1c]; call 0x11e430; add esp, 0x18; pop ebx; ret; 
0x00121329: push dword ptr [esp + 0x1c]; call 0x121340; add esp, 0x1c; ret; 
0x001260b1: push dword ptr [esp + 0x1c]; call 0x126620; add esp, 0x1c; ret; 
0x0017a493: push dword ptr [esp + 0x1c]; call 0x12a070; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x0013122e: push dword ptr [esp + 0x1c]; call 0x12fc60; add esp, 0x1c; ret; 
0x0012fe2e: push dword ptr [esp + 0x1c]; call 0x12fd10; add esp, 0x18; pop ebx; ret; 
0x0017a713: push dword ptr [esp + 0x1c]; call 0x136d20; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x0017a803: push dword ptr [esp + 0x1c]; call 0x137ea0; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x0017a833: push dword ptr [esp + 0x1c]; call 0x138500; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00138b58: push dword ptr [esp + 0x1c]; call 0x138b70; add esp, 0x1c; ret; 
0x00138fc8: push dword ptr [esp + 0x1c]; call 0x138fe0; add esp, 0x1c; ret; 
0x0013a7c9: push dword ptr [esp + 0x1c]; call 0x139a50; add esp, 0x1c; ret; 
0x00146e09: push dword ptr [esp + 0x1c]; call 0x146ce0; add esp, 0x1c; ret; 
0x00162b16: push dword ptr [esp + 0x1c]; call 0x162870; add esp, 0x10; add esp, 0xc; ret; 
0x00162af7: push dword ptr [esp + 0x1c]; call 0x162970; add esp, 0x10; add esp, 0xc; ret; 
0x00164f61: push dword ptr [esp + 0x1c]; call 0x164c90; add esp, 0x1c; ret; 
0x0015a0fd: push dword ptr [esp + 0x1c]; call 0x165df0; add esp, 0x1c; ret; 
0x00165ff5: push dword ptr [esp + 0x1c]; call 0x165e20; add esp, 0x1c; ret; 
0x00172a23: push dword ptr [esp + 0x1c]; call 0x1722a0; add esp, 0x18; pop ebx; ret; 
0x0002c010: push dword ptr [esp + 0x1c]; call 0x20140; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00105123: push dword ptr [esp + 0x1c]; call 0x20140; add esp, 0x18; pop ebx; ret; 
0x0009a681: push dword ptr [esp + 0x1c]; call 0x20160; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0002ecf1: push dword ptr [esp + 0x1c]; call 0x2ed00; add esp, 0x1c; ret; 
0x0003066d: push dword ptr [esp + 0x1c]; call 0x30630; add esp, 0x1c; ret; 
0x0003884d: push dword ptr [esp + 0x1c]; call 0x387d0; add esp, 0x1c; ret; 
0x0003a750: push dword ptr [esp + 0x1c]; call 0x3a660; add esp, 0x1c; ret; 
0x00171ec9: push dword ptr [esp + 0x1c]; call 0x3a730; add esp, 0x1c; ret; 
0x0003b8b8: push dword ptr [esp + 0x1c]; call 0x3bac0; add esp, 0x1c; ret; 
0x0003b918: push dword ptr [esp + 0x1c]; call 0x3bb40; add esp, 0x1c; ret; 
0x00038c4b: push dword ptr [esp + 0x1c]; call 0x3c860; add esp, 0x1c; ret; 
0x00038c8b: push dword ptr [esp + 0x1c]; call 0x3c960; add esp, 0x1c; ret; 
0x0003e5b9: push dword ptr [esp + 0x1c]; call 0x3eee0; add esp, 0x1c; ret; 
0x0003e639: push dword ptr [esp + 0x1c]; call 0x41f80; add esp, 0x1c; ret; 
0x0003e6b9: push dword ptr [esp + 0x1c]; call 0x451a0; add esp, 0x1c; ret; 
0x000489c9: push dword ptr [esp + 0x1c]; call 0x48970; add esp, 0x1c; ret; 
0x00054be9: push dword ptr [esp + 0x1c]; call 0x523c0; add esp, 0x1c; ret; 
0x00057bd3: push dword ptr [esp + 0x1c]; call 0x57b80; add esp, 0x1c; ret; 
0x000752c3: push dword ptr [esp + 0x1c]; call 0x57ba0; add esp, 0x1c; ret; 
0x001193cf: push dword ptr [esp + 0x1c]; call 0x58600; add esp, 0x10; add esp, 0xc; ret; 
0x0011930d: push dword ptr [esp + 0x1c]; call 0x58600; add esp, 0x1c; ret; 
0x00057b91: push dword ptr [esp + 0x1c]; call 0x59450; add esp, 0x1c; ret; 
0x00057bb1: push dword ptr [esp + 0x1c]; call 0x60130; add esp, 0x1c; ret; 
0x00051f81: push dword ptr [esp + 0x1c]; call 0x685c0; add esp, 0x1c; ret; 
0x000751e2: push dword ptr [esp + 0x1c]; call 0x6d850; add esp, 0x1c; ret; 
0x00070c92: push dword ptr [esp + 0x1c]; call 0x70ba0; add esp, 0x1c; ret; 
0x00079d53: push dword ptr [esp + 0x1c]; call 0x70f00; add esp, 0x18; pop ebx; ret; 
0x0007195d: push dword ptr [esp + 0x1c]; call 0x71860; add esp, 0x1c; ret; 
0x00058901: push dword ptr [esp + 0x1c]; call 0x72440; add esp, 0x1c; ret; 
0x00079f80: push dword ptr [esp + 0x1c]; call 0x73870; add esp, 0x1c; ret; 
0x00079f9d: push dword ptr [esp + 0x1c]; call 0x739b0; add esp, 0x1c; ret; 
0x00057b32: push dword ptr [esp + 0x1c]; call 0x79fb0; add esp, 0x1c; ret; 
0x00057b52: push dword ptr [esp + 0x1c]; call 0x7a180; add esp, 0x1c; ret; 
0x0007a7f1: push dword ptr [esp + 0x1c]; call 0x7a640; add esp, 0x1c; ret; 
0x0008150a: push dword ptr [esp + 0x1c]; call 0x81450; add esp, 0x18; pop ebx; ret; 
0x000842bc: push dword ptr [esp + 0x1c]; call 0x841e0; add esp, 0x18; pop ebx; ret; 
0x000845f0: push dword ptr [esp + 0x1c]; call 0x84520; add esp, 0x1c; ret; 
0x0008bab9: push dword ptr [esp + 0x1c]; call 0x8b960; add esp, 0x1c; ret; 
0x0008d7cc: push dword ptr [esp + 0x1c]; call 0x8d770; add esp, 0x18; pop ebx; ret; 
0x00091b19: push dword ptr [esp + 0x1c]; call 0x91360; cmp eax, 1; sbb eax, eax; add esp, 0x1c; ret; 
0x0009325f: push dword ptr [esp + 0x1c]; call 0x931a0; add esp, 0x18; pop ebx; ret; 
0x00092c9d: push dword ptr [esp + 0x1c]; call 0x932e0; add esp, 0x1c; ret; 
0x0009be2c: push dword ptr [esp + 0x1c]; call 0x9be40; add esp, 0x1c; ret; 
0x000a22b7: push dword ptr [esp + 0x1c]; call 0x9dbb0; add esp, 0x18; pop ebx; ret; 
0x0009b025: push dword ptr [esp + 0x1c]; call 0x9eb50; add esp, 0x1c; ret; 
0x0009bee9: push dword ptr [esp + 0x1c]; call 0x9fad0; add esp, 0x1c; ret; 
0x0009b2e1: push dword ptr [esp + 0x1c]; call 0xa2400; add esp, 0x1c; ret; 
0x00131d01: push dword ptr [esp + 0x1c]; call 0xb4c80; add esp, 0x14; pop ebx; pop esi; ret; 
0x000a218b: push dword ptr [esp + 0x1c]; call 0xb4c80; add esp, 0x18; pop ebx; ret; 
0x000b61af: push dword ptr [esp + 0x1c]; call 0xb4d90; add esp, 0x18; pop ebx; ret; 
0x000a2539: push dword ptr [esp + 0x1c]; call 0xb4de0; add esp, 0x18; pop ebx; ret; 
0x00132d15: push dword ptr [esp + 0x1c]; call 0xb5cc0; add esp, 0x18; pop ebx; ret; 
0x000ca0b6: push dword ptr [esp + 0x1c]; call 0xb6030; add esp, 0x14; pop ebx; pop esi; ret; 
0x00132f25: push dword ptr [esp + 0x1c]; call 0xb6120; add esp, 0x18; pop ebx; ret; 
0x000b7529: push dword ptr [esp + 0x1c]; call 0xb9570; add esp, 0x1c; ret; 
0x000b75a9: push dword ptr [esp + 0x1c]; call 0xbc4e0; add esp, 0x1c; ret; 
0x000b7629: push dword ptr [esp + 0x1c]; call 0xbf1e0; add esp, 0x1c; ret; 
0x000c1995: push dword ptr [esp + 0x1c]; call 0xc1b40; add esp, 0x1c; ret; 
0x000c19d9: push dword ptr [esp + 0x1c]; call 0xc27a0; add esp, 0x1c; ret; 
0x000cbb69: push dword ptr [esp + 0x1c]; call 0xcb230; add esp, 0x18; pop ebx; ret; 
0x001749e3: push dword ptr [esp + 0x1c]; call 0xdcbb0; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x000dd6c1: push dword ptr [esp + 0x1c]; call 0xdd9e0; add esp, 0x1c; ret; 
0x000903ff: push dword ptr [esp + 0x1c]; call 0xde450; add esp, 0x1c; ret; 
0x000dea1d: push dword ptr [esp + 0x1c]; call 0xde870; add esp, 0x1c; ret; 
0x000df291: push dword ptr [esp + 0x1c]; call 0xdef30; add esp, 0x1c; ret; 
0x000decbd: push dword ptr [esp + 0x1c]; call 0xdf280; add esp, 0x1c; ret; 
0x00038e15: push dword ptr [esp + 0x1c]; call edi; 
0x0013202a: push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x685c0; add esp, 0x1c; ret; 
0x0013301a: push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x6d850; add esp, 0x1c; ret; 
0x000719e9: push dword ptr [esp + 0x1c]; push dword ptr [esi + 0x98]; call eax; 
0x0011bf0e: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x11b880; add esp, 0x1c; ret; 
0x0011e535: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x11e3b0; add esp, 0x18; pop ebx; ret; 
0x0011e505: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x11e430; add esp, 0x18; pop ebx; ret; 
0x0012fe2a: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x12fd10; add esp, 0x18; pop ebx; ret; 
0x0015a0f9: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x165df0; add esp, 0x1c; ret; 
0x00030669: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x30630; add esp, 0x1c; ret; 
0x00038849: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x387d0; add esp, 0x1c; ret; 
0x0003a74c: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x3a660; add esp, 0x1c; ret; 
0x0003e5b5: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x3eee0; add esp, 0x1c; ret; 
0x0003e635: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x41f80; add esp, 0x1c; ret; 
0x0003e6b5: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x451a0; add esp, 0x1c; ret; 
0x00057bcf: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x57b80; add esp, 0x1c; ret; 
0x000752bf: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x57ba0; add esp, 0x1c; ret; 
0x000c4c0e: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x60130; add esp, 0x1c; ret; 
0x00057a7e: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x685c0; add esp, 0x1c; ret; 
0x000751de: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x6d850; add esp, 0x1c; ret; 
0x00070c8e: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x70ba0; add esp, 0x1c; ret; 
0x00071959: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x71860; add esp, 0x1c; ret; 
0x00079f7c: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x73870; add esp, 0x1c; ret; 
0x0007a16d: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x79fb0; add esp, 0x1c; ret; 
0x00057b4e: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x7a180; add esp, 0x1c; ret; 
0x0007a7ed: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x7a640; add esp, 0x1c; ret; 
0x000a22b3: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x9dbb0; add esp, 0x18; pop ebx; ret; 
0x000a2187: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xb4c80; add esp, 0x18; pop ebx; ret; 
0x000b61ab: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xb4d90; add esp, 0x18; pop ebx; ret; 
0x00132f21: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xb6120; add esp, 0x18; pop ebx; ret; 
0x000b7525: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xb9570; add esp, 0x1c; ret; 
0x000b75e3: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xbc4e0; add esp, 0x1c; ret; 
0x000b7625: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xbf1e0; add esp, 0x1c; ret; 
0x000c1991: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc1b40; add esp, 0x1c; ret; 
0x000c19d5: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc27a0; add esp, 0x1c; ret; 
0x000dd6bd: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xdd9e0; add esp, 0x1c; ret; 
0x000903fb: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xde450; add esp, 0x1c; ret; 
0x000dea19: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xde870; add esp, 0x1c; ret; 
0x000df28d: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xdef30; add esp, 0x1c; ret; 
0x000decb9: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xdf280; add esp, 0x1c; ret; 
0x00132096: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x685c0; add esp, 0x1c; ret; 
0x00133086: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x6d850; add esp, 0x1c; ret; 
0x0011bf29: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x11b880; add esp, 0x1c; ret; 
0x0003a748: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x3a660; add esp, 0x1c; ret; 
0x0003e5b1: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x3eee0; add esp, 0x1c; ret; 
0x0003e631: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x41f80; add esp, 0x1c; ret; 
0x0003e6b1: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x451a0; add esp, 0x1c; ret; 
0x0007a169: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x79fb0; add esp, 0x1c; ret; 
0x0007a319: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x7a180; add esp, 0x1c; ret; 
0x0007a7e9: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x7a640; add esp, 0x1c; ret; 
0x000b7521: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xb9570; add esp, 0x1c; ret; 
0x000b7621: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xbf1e0; add esp, 0x1c; ret; 
0x000c19d1: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc27a0; add esp, 0x1c; ret; 
0x000dd6b9: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xdd9e0; add esp, 0x1c; ret; 
0x000903f7: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xde450; add esp, 0x1c; ret; 
0x000df289: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xdef30; add esp, 0x1c; ret; 
0x00163bd5: push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax + 0xc]; 
0x0015b09e: push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax + 4]; 
0x0015b04e: push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax]; 
0x00163b11: push dword ptr [esp + 0x1c]; push ebx; call eax; 
0x0014f49c: push dword ptr [esp + 0x1c]; push ecx; push eax; push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x00158915: push dword ptr [esp + 0x1c]; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00171b57: push dword ptr [esp + 0x20]; call 0x1719d0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00171ba3: push dword ptr [esp + 0x20]; call 0x171a40; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00171b3e: push dword ptr [esp + 0x20]; call 0x171a50; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00119af3: push dword ptr [esp + 0x20]; call 0x20140; add esp, 0x18; pop ebx; ret; 
0x000da3da: push dword ptr [esp + 0x20]; lea eax, [esp + 0x38]; push eax; push dword ptr [esp + 0x24]; push dword ptr [esp + 0x30]; call ebx; 
0x0011bf5a: push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x11b880; add esp, 0x1c; ret; 
0x0013205a: push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x685c0; add esp, 0x1c; ret; 
0x0013304a: push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x6d850; add esp, 0x1c; ret; 
0x001336da: push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x79fb0; add esp, 0x1c; ret; 
0x0013373a: push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x7a180; add esp, 0x1c; ret; 
0x0013379a: push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x7a640; add esp, 0x1c; ret; 
0x00171fc6: push dword ptr [esp + 0x20]; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x00159e2d: push dword ptr [esp + 0x20]; push edi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x00082646: push dword ptr [esp + 0x20]; push edx; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0012c94d: push dword ptr [esp + 0x20]; push esi; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0014f4a2: push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x00159ee2: push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x34]; call eax; 
0x0016e541: push dword ptr [esp + 0x24]; mov esi, dword ptr [esp + 0x24]; call esi; 
0x000da3e3: push dword ptr [esp + 0x24]; push dword ptr [esp + 0x30]; call ebx; 
0x0006d984: push dword ptr [esp + 0x24]; push ebp; call dword ptr [esi + 0x1c]; 
0x0005886f: push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x30]; call eax; 
0x00077b81: push dword ptr [esp + 0x28]; mov esi, dword ptr [esp + 0x18]; push esi; call dword ptr [edi + 0x40]; 
0x00109343: push dword ptr [esp + 0x28]; push -0x64; call 0x109360; add esp, 0x2c; ret; 
0x00057b01: push dword ptr [esp + 0x28]; push -1; push dword ptr [esp + 0x2c]; call 0x73cc0; add esp, 0x2c; ret; 
0x00031ad1: push dword ptr [esp + 0x28]; push 0; call 0x31a60; add esp, 0x2c; ret; 
0x00077b7d: push dword ptr [esp + 0x28]; push dword ptr [esp + 0x28]; mov esi, dword ptr [esp + 0x18]; push esi; call dword ptr [edi + 0x40]; 
0x0007c1d4: push dword ptr [esp + 0x28]; push edi; call dword ptr [ebp + 0x1c]; 
0x00068709: push dword ptr [esp + 0x28]; push edi; call dword ptr [ebx + 0x1c]; 
0x00104eed: push dword ptr [esp + 0x2c]; call 0x1044e0; add esp, 0x2c; ret; 
0x0010449d: push dword ptr [esp + 0x2c]; call 0x104eb0; add esp, 0x2c; ret; 
0x001087d7: push dword ptr [esp + 0x2c]; call 0x109360; add esp, 0x2c; ret; 
0x0011e885: push dword ptr [esp + 0x2c]; call 0x11e790; add esp, 0x28; pop ebx; ret; 
0x0011ea1d: push dword ptr [esp + 0x2c]; call 0x11e8a0; add esp, 0x28; pop ebx; ret; 
0x0012e8a9: push dword ptr [esp + 0x2c]; call 0x12e680; add esp, 0x28; pop ebx; ret; 
0x0017a5eb: push dword ptr [esp + 0x2c]; call 0x1356a0; neg eax; sbb eax, eax; add esp, 0x2c; ret; 
0x0017a66b: push dword ptr [esp + 0x2c]; call 0x136190; neg eax; sbb eax, eax; add esp, 0x2c; ret; 
0x0013a7af: push dword ptr [esp + 0x2c]; call 0x139c40; add esp, 0x2c; ret; 
0x0013a8e5: push dword ptr [esp + 0x2c]; call 0x13a7e0; add esp, 0x2c; ret; 
0x0013b14d: push dword ptr [esp + 0x2c]; call 0x13ab00; add esp, 0x2c; ret; 
0x0013ccd4: push dword ptr [esp + 0x2c]; call 0x13c6c0; add esp, 0x20; add esp, 8; pop ebx; ret; 
0x00162ef7: push dword ptr [esp + 0x2c]; call 0x162d40; add esp, 0x2c; ret; 
0x00030645: push dword ptr [esp + 0x2c]; call 0x31290; add esp, 0x2c; ret; 
0x00031aa5: push dword ptr [esp + 0x2c]; call 0x31a60; add esp, 0x2c; ret; 
0x00039905: push dword ptr [esp + 0x2c]; call 0x395a0; add esp, 0x2c; ret; 
0x0003c84d: push dword ptr [esp + 0x2c]; call 0x3ca20; add esp, 0x2c; ret; 
0x0003c8cd: push dword ptr [esp + 0x2c]; call 0x3d010; add esp, 0x2c; ret; 
0x0003c94d: push dword ptr [esp + 0x2c]; call 0x3d5b0; add esp, 0x2c; ret; 
0x0003c9cd: push dword ptr [esp + 0x2c]; call 0x3ddd0; add esp, 0x2c; ret; 
0x00048bc3: push dword ptr [esp + 0x2c]; call 0x48bd0; add esp, 0x2c; ret; 
0x000728d9: push dword ptr [esp + 0x2c]; call 0x72700; add esp, 0x2c; ret; 
0x00057b07: push dword ptr [esp + 0x2c]; call 0x73cc0; add esp, 0x2c; ret; 
0x00074b85: push dword ptr [esp + 0x2c]; call 0x749a0; add esp, 0x28; pop ebx; ret; 
0x00075209: push dword ptr [esp + 0x2c]; call 0x75350; add esp, 0x2c; ret; 
0x00057ad9: push dword ptr [esp + 0x2c]; call 0x7a3b0; add esp, 0x2c; ret; 
0x000800ad: push dword ptr [esp + 0x2c]; call 0x7ffd0; add esp, 0x28; pop ebx; ret; 
0x00084e43: push dword ptr [esp + 0x2c]; call 0x886f0; add esp, 0x20; add esp, 0xc; ret; 
0x000886c1: push dword ptr [esp + 0x2c]; call 0x886f0; add esp, 0x2c; ret; 
0x00093295: push dword ptr [esp + 0x2c]; call 0x93580; add esp, 0x2c; ret; 
0x000932c5: push dword ptr [esp + 0x2c]; call 0x93850; add esp, 0x2c; ret; 
0x000b732d: push dword ptr [esp + 0x2c]; call 0xb7680; add esp, 0x2c; ret; 
0x000b73ad: push dword ptr [esp + 0x2c]; call 0xb7b90; add esp, 0x2c; ret; 
0x000b742d: push dword ptr [esp + 0x2c]; call 0xb8030; add esp, 0x2c; ret; 
0x000b74ad: push dword ptr [esp + 0x2c]; call 0xb86d0; add esp, 0x2c; ret; 
0x000b695a: push dword ptr [esp + 0x2c]; call 0xc4810; add esp, 0x2c; ret; 
0x000cf97b: push dword ptr [esp + 0x2c]; call 0xcfa80; add esp, 0x2c; ret; 
0x000d284d: push dword ptr [esp + 0x2c]; call 0xd47f0; add esp, 0x2c; ret; 
0x000d288d: push dword ptr [esp + 0x2c]; call 0xd6e80; add esp, 0x2c; ret; 
0x000faeeb: push dword ptr [esp + 0x2c]; call 0xfa760; add esp, 0x28; pop ebx; ret; 
0x000fae23: push dword ptr [esp + 0x2c]; call 0xfad70; add esp, 0x28; pop ebx; ret; 
0x00104ee9: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x1044e0; add esp, 0x2c; ret; 
0x00178109: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x104eb0; add esp, 0x2c; ret; 
0x001087d3: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x109360; add esp, 0x2c; ret; 
0x0011e881: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x11e790; add esp, 0x28; pop ebx; ret; 
0x0011ea19: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x11e8a0; add esp, 0x28; pop ebx; ret; 
0x0012e8a5: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x12e680; add esp, 0x28; pop ebx; ret; 
0x0013a8e1: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x13a7e0; add esp, 0x2c; ret; 
0x0013b149: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x13ab00; add esp, 0x2c; ret; 
0x00162ef3: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x162d40; add esp, 0x2c; ret; 
0x00030641: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x31290; add esp, 0x2c; ret; 
0x00031aa1: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x31a60; add esp, 0x2c; ret; 
0x00039901: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x395a0; add esp, 0x2c; ret; 
0x0003c849: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x3ca20; add esp, 0x2c; ret; 
0x0003d591: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x3d010; add esp, 0x2c; ret; 
0x0003c949: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x3d5b0; add esp, 0x2c; ret; 
0x0003c9c9: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x3ddd0; add esp, 0x2c; ret; 
0x00049ed9: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x48bd0; add esp, 0x2c; ret; 
0x000728d5: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x72700; add esp, 0x2c; ret; 
0x00074b81: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x749a0; add esp, 0x28; pop ebx; ret; 
0x00075205: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x75350; add esp, 0x2c; ret; 
0x00057ad5: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x7a3b0; add esp, 0x2c; ret; 
0x000800a9: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x7ffd0; add esp, 0x28; pop ebx; ret; 
0x00084e3f: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x886f0; add esp, 0x20; add esp, 0xc; ret; 
0x000886bd: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x886f0; add esp, 0x2c; ret; 
0x00093291: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x93580; add esp, 0x2c; ret; 
0x000932c1: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x93850; add esp, 0x2c; ret; 
0x000b7329: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xb7680; add esp, 0x2c; ret; 
0x000b8011: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xb7b90; add esp, 0x2c; ret; 
0x000b7429: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xb8030; add esp, 0x2c; ret; 
0x000b8c91: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xb86d0; add esp, 0x2c; ret; 
0x000b6956: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xc4810; add esp, 0x2c; ret; 
0x000cf977: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xcfa80; add esp, 0x2c; ret; 
0x000d2849: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xd47f0; add esp, 0x2c; ret; 
0x000d2889: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xd6e80; add esp, 0x2c; ret; 
0x000faee7: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xfa760; add esp, 0x28; pop ebx; ret; 
0x000fae1f: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xfad70; add esp, 0x28; pop ebx; ret; 
0x00178135: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x104eb0; add esp, 0x2c; ret; 
0x0013a8dd: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x13a7e0; add esp, 0x2c; ret; 
0x0013b145: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x13ab00; add esp, 0x2c; ret; 
0x00162eef: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x162d40; add esp, 0x2c; ret; 
0x00031a71: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x31290; add esp, 0x2c; ret; 
0x00031a9d: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x31a60; add esp, 0x2c; ret; 
0x000398fd: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x395a0; add esp, 0x2c; ret; 
0x0003c845: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x3ca20; add esp, 0x2c; ret; 
0x0003d58d: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x3d010; add esp, 0x2c; ret; 
0x0003c945: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x3d5b0; add esp, 0x2c; ret; 
0x0003c9c5: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x3ddd0; add esp, 0x2c; ret; 
0x000728d1: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x72700; add esp, 0x2c; ret; 
0x00075201: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x75350; add esp, 0x2c; ret; 
0x00057ad1: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x7a3b0; add esp, 0x2c; ret; 
0x0009328d: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x93580; add esp, 0x2c; ret; 
0x000b7325: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xb7680; add esp, 0x2c; ret; 
0x000b800d: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xb7b90; add esp, 0x2c; ret; 
0x000b7425: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xb8030; add esp, 0x2c; ret; 
0x000b8c8d: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xb86d0; add esp, 0x2c; ret; 
0x000b6952: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xc4810; add esp, 0x2c; ret; 
0x000cf973: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xcfa80; add esp, 0x2c; ret; 
0x000fba75: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x38]; call esi; 
0x000fba79: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x38]; call esi; 
0x000b71e7: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x38]; push dword ptr [esp + 0x38]; push esi; call ebx; 
0x000b6e97: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x38]; push edi; call esi; 
0x000821c9: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x3c]; push ecx; push dword ptr [esp + 0x3c]; call eax; 
0x000b70c3: push dword ptr [esp + 0x2c]; push ebp; lea eax, [esp + 0x64]; push eax; push esi; call ebx; 
0x00161389: push dword ptr [esp + 0x2c]; push ebx; mov eax, dword ptr [esp + 0x18]; call eax; 
0x0007c4f3: push dword ptr [esp + 0x2c]; push edi; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x0008e1cb: push dword ptr [esp + 0x2c]; push edx; call 0x886f0; add esp, 0x20; add esp, 0xc; ret; 
0x00082519: push dword ptr [esp + 0x2c]; push edx; push ecx; push esi; call eax; 
0x0015db56: push dword ptr [esp + 0x2c]; push esi; call dword ptr [eax + 0xc]; 
0x000da3e7: push dword ptr [esp + 0x30]; call ebx; 
0x00038de8: push dword ptr [esp + 0x30]; call edi; 
0x00071a42: push dword ptr [esp + 0x30]; lea ecx, [esp + 0x10]; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x0010c97e: push dword ptr [esp + 0x30]; push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x000225cf: push dword ptr [esp + 0x30]; push dword ptr [ebx + 4]; call esi; 
0x000c492e: push dword ptr [esp + 0x30]; push dword ptr [esp + 0x38]; push edi; call esi; 
0x0008233b: push dword ptr [esp + 0x30]; push dword ptr [esp + 0x3c]; push ecx; call eax; 
0x00131ee8: push dword ptr [esp + 0x30]; push edx; push dword ptr [esp + 0x2c]; call 0x73cc0; add esp, 0x2c; ret; 
0x0008242c: push dword ptr [esp + 0x30]; push edx; push ecx; call eax; 
0x00039140: push dword ptr [esp + 0x30]; push esi; call edi; 
0x0005886b: push dword ptr [esp + 0x34]; push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x30]; call eax; 
0x000c4ab7: push dword ptr [esp + 0x34]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x38]; push edi; call esi; 
0x000b6bcb: push dword ptr [esp + 0x34]; push dword ptr [esp + 0x40]; push edi; call esi; 
0x00132f66: push dword ptr [esp + 0x34]; push edx; push dword ptr [esp + 0x2c]; call 0x75350; add esp, 0x2c; ret; 
0x00131f76: push dword ptr [esp + 0x34]; push edx; push dword ptr [esp + 0x2c]; call 0x7a3b0; add esp, 0x2c; ret; 
0x000fba7d: push dword ptr [esp + 0x38]; call esi; 
0x0007fe26: push dword ptr [esp + 0x38]; push 0; push edi; push esi; push ebx; call dword ptr [ebp + 0x24]; 
0x00154efb: push dword ptr [esp + 0x38]; push 2; push dword ptr [esp + 0x3c]; call 0x154d40; add esp, 0x3c; ret; 
0x000b71eb: push dword ptr [esp + 0x38]; push dword ptr [esp + 0x38]; push esi; call ebx; 
0x00074977: push dword ptr [esp + 0x38]; push edi; call dword ptr [edx + 0x1c]; 
0x000b6e9f: push dword ptr [esp + 0x38]; push edi; call esi; 
0x000b71ef: push dword ptr [esp + 0x38]; push esi; call ebx; 
0x001446e5: push dword ptr [esp + 0x3c]; call 0x144130; add esp, 0x3c; ret; 
0x00154f01: push dword ptr [esp + 0x3c]; call 0x154d40; add esp, 0x3c; ret; 
0x00161d65: push dword ptr [esp + 0x3c]; call 0x161a90; add esp, 0x3c; ret; 
0x000821d2: push dword ptr [esp + 0x3c]; call eax; 
0x000b6e9b: push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x38]; push edi; call esi; 
0x001446e1: push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x144130; add esp, 0x3c; ret; 
0x00154f2f: push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x154d40; add esp, 0x3c; ret; 
0x00161d61: push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x161a90; add esp, 0x3c; ret; 
0x001446dd: push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x144130; add esp, 0x3c; ret; 
0x00154f2b: push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x154d40; add esp, 0x3c; ret; 
0x00161d5d: push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x161a90; add esp, 0x3c; ret; 
0x0016217c: push dword ptr [esp + 0x3c]; push ebp; push edi; push esi; push eax; call dword ptr [edx]; 
0x0008233f: push dword ptr [esp + 0x3c]; push ecx; call eax; 
0x000821cd: push dword ptr [esp + 0x3c]; push ecx; push dword ptr [esp + 0x3c]; call eax; 
0x0007d68d: push dword ptr [esp + 0x3c]; push edi; call dword ptr [esi + 0x20]; 
0x0015dba8: push dword ptr [esp + 0x3c]; push esi; mov eax, dword ptr [esp + 0x40]; call eax; 
0x00021678: push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x00021615: push dword ptr [esp + 0x40]; call eax; 
0x000b6bcf: push dword ptr [esp + 0x40]; push edi; call esi; 
0x00069996: push dword ptr [esp + 0x44]; push edi; call dword ptr [eax + 0x1c]; 
0x000698ab: push dword ptr [esp + 0x44]; push edi; call dword ptr [ebx + 0x1c]; 
0x0015ddf7: push dword ptr [esp + 0x44]; push esi; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x0002b4c9: push dword ptr [esp + 0x50]; call esi; 
0x0002b4c5: push dword ptr [esp + 0x50]; push dword ptr [esp + 0x50]; call esi; 
0x00026735: push dword ptr [esp + 0x54]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00026731: push dword ptr [esp + 0x54]; push dword ptr [esp + 0x54]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0002623f: push dword ptr [esp + 0x54]; push dword ptr [esp + 0x5c]; call edi; 
0x000cba22: push dword ptr [esp + 0x58]; lea eax, [esp + 0xb4]; push eax; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x000cb7aa: push dword ptr [esp + 0x58]; lea eax, [esp + 0xec]; push eax; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x0002a04a: push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x000da0f4: push dword ptr [esp + 0x58]; push dword ptr [esp + 0x1c]; call edi; 
0x0002b4c1: push dword ptr [esp + 0x58]; push dword ptr [esp + 0x50]; push dword ptr [esp + 0x50]; call esi; 
0x0002a046: push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x000da0f0: push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x1c]; call edi; 
0x0013c4f0: push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; push esi; call edi; 
0x00025bb4: push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x00024a9e: push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x000225ca: push dword ptr [esp + 0x58]; push ebp; push dword ptr [esp + 0x30]; push dword ptr [ebx + 4]; call esi; 
0x0013c4f4: push dword ptr [esp + 0x58]; push esi; call edi; 
0x00026243: push dword ptr [esp + 0x5c]; call edi; 
0x00028c9c: push dword ptr [esp + 0x5c]; call esi; 
0x0002723e: push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x00025bb0: push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x00024a9a: push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00028c98: push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; call esi; 
0x0002723a: push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x000255f1: push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00025bb8: push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x00024aa2: push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x000255ed: push dword ptr [esp + 0x60]; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00029496: push dword ptr [esp + 0x64]; call edi; 
0x000255f5: push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00029492: push dword ptr [esp + 0x64]; push dword ptr [esp + 0x64]; call edi; 
0x00027f06: push dword ptr [esp + 0x6c]; call esi; 
0x00027f02: push dword ptr [esp + 0x6c]; push dword ptr [esp + 0x6c]; call esi; 
0x00158d53: push dword ptr [esp + 0x74]; push eax; call dword ptr [ecx]; 
0x001734b8: push dword ptr [esp + 0xbc]; push ebp; push edi; push esi; call dword ptr [ebx + 0x40]; 
0x00142ea9: push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0012cda3: push dword ptr [esp + 0xc]; push 0x2000001; mov eax, dword ptr [esp + 0x20]; call dword ptr [eax + 0x14]; 
0x0017312e: push dword ptr [esp + 0xc]; push ebx; call dword ptr [ebp + 0x3c]; 
0x0007c685: push dword ptr [esp + 0xc]; push edi; push ebx; call dword ptr [esi + 0x3c]; 
0x00021673: push dword ptr [esp + 0xc]; push esi; push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x000f2346: push dword ptr [esp + 0xf]; mov dh, 0x52; sbb al, 0xf6; ret 0xf08; 
0x0013c92c: push dword ptr [esp + 4]; push 0x400; push dword ptr [esp + 0x10]; push ebp; call edi; 
0x0003736b: push dword ptr [esp + 8]; call 0x372d0; pop ecx; pop edx; ret; 
0x0012dc40: push dword ptr [esp + 8]; push 0x2000003; call dword ptr [ebp + 0x14]; 
0x0007d0de: push dword ptr [esp + 8]; push dword ptr [esp + 8]; push esi; call dword ptr [edi + 0x40]; 
0x00072b05: push dword ptr [esp + 8]; push ebx; call dword ptr [eax + 0x1c]; 
0x00072b77: push dword ptr [esp + 8]; push ebx; call dword ptr [ebp + 0x1c]; 
0x0015a7db: push dword ptr [esp + 8]; push edi; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x18]; 
0x0007d0e2: push dword ptr [esp + 8]; push esi; call dword ptr [edi + 0x40]; 
0x000b4081: push dword ptr [esp + ebx*2 + 0xf]; mov ebp, 0x5ff801ff; ret; 
0x000c4620: push dword ptr [esp + ecx - 0x75]; inc ecx; or byte ptr [ebx + 0x418901c0], al; or byte ptr [edi], cl; nop; ret 0x4e8b; 
0x000fb8ad: push dword ptr [esp + ecx - 0x77]; ret 0x4089; 
0x000b61f9: push dword ptr [esp + edi*2 - 0x77]; fdiv st(7); ret; 
0x0009fa29: push dword ptr [esp + edx*2 - 9]; ret 0; 
0x00124035: push dword ptr [esp - 0x7d]; in al, dx; add al, 0x89; ret; 
0x0009fa31: push dword ptr [esp - 9]; ret 0; 
0x00029495: push dword ptr fs:[esp + 0x64]; call edi; 
0x0016f414: push dword ptr ss:[esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00074f90: push eax; adc al, 0x73; ret; 
0x001669bf: push eax; adc al, 0x89; dec eax; add al, 0x5b; ret; 
0x00166b5d: push eax; adc al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x000b3476: push eax; adc byte ptr [eax + 0x448b1870], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000affe0: push eax; adc byte ptr [eax + 0x448b1870], cl; and al, 8; pop esi; ret; 
0x00078633: push eax; adc byte ptr [ebp + 0x4889044a], cl; adc byte ptr [ecx - 0x9ec74ce], cl; ret 0xf02; 
0x001a0a39: push eax; adc byte ptr [ebp - 0x7cf28b2e], al; in al, dx; or al, 0x50; call edx; 
0x00162847: push eax; adc byte ptr [ebx + 0x10c48303], cl; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x000b4211: push eax; adc byte ptr [ebx + 0x58ebf0e2], al; lea esi, [esi]; nop; xor eax, eax; ret; 
0x000b3453: push eax; adc byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000affc0: push eax; adc byte ptr [ebx + 0x5e082444], cl; ret; 
0x000649cb: push eax; adc byte ptr [ebx - 0x50f7b], cl; call dword ptr [edx - 1]; 
0x00074f8d: push eax; adc byte ptr [ebx], bh; push eax; adc al, 0x73; ret; 
0x000b34d6: push eax; adc byte ptr [ecx + 0x448b1748], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000b0023: push eax; adc byte ptr [ecx + 0x448b1748], cl; and al, 8; pop esi; ret; 
0x000b3506: push eax; adc byte ptr [ecx + 0x448b1848], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000b0043: push eax; adc byte ptr [ecx + 0x448b1848], cl; and al, 8; pop esi; ret; 
0x001596b8: push eax; adc byte ptr [ecx - 0xa5a73b], cl; jbe 0x1596d1; push ebx; call dword ptr [esi + 0x14]; 
0x000b34a7: push eax; adc byte ptr [esi - 0x77], ah; dec eax; sbb byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000b0004: push eax; adc byte ptr [esi - 0x77], ah; dec eax; sbb byte ptr [ebx + 0x5e082444], cl; ret; 
0x00123577: push eax; adc eax, dword ptr [ecx]; ret; 
0x00048512: push eax; add al, 0; add byte ptr [ebx + 0x688d04ec], al; call dword ptr [ebp + 0x53]; 
0x00158e4d: push eax; add al, 0x50; call dword ptr [edx + 0x10]; 
0x0016019a: push eax; add al, 0x51; push eax; call dword ptr [edx + 8]; 
0x0007f388: push eax; add al, 0x5b; ret; 
0x00082823: push eax; add al, 0x65; mov edx, dword ptr [0x7c]; mov dword ptr [eax + 0xc], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x00074462: push eax; add al, 0x73; or cl, byte ptr [ebp + 0x889044a]; mov eax, dword ptr [edx]; ret; 
0x00066393: push eax; add al, 0x89; adc dword ptr [ebx - 0x7cf87700], ecx; ret; 
0x00060107: push eax; add al, 0x89; adc ecx, dword ptr [ecx + 0x5f5e5b38]; ret; 
0x00161f19: push eax; add al, 0x89; add al, 0x24; call dword ptr [edx + 0x10]; 
0x000758d2: push eax; add al, 0x89; pop eax; or byte ptr [ecx + 0x10892048], cl; pop ebx; ret; 
0x0015b213: push eax; add al, 0x89; push ebx; adc bl, ch; ret; 
0x0008285b: push eax; add al, 0x89; push esp; and al, 4; jmp dword ptr [eax]; 
0x000944d1: push eax; add al, 0x8b; inc eax; or al, 0x83; ret; 
0x000afdaa: push eax; add al, 0x8b; inc esp; and al, 8; pop esi; ret; 
0x0016703e: push eax; add al, 0x8b; push esp; and al, 8; mov dword ptr [eax + 0xc], edx; ret; 
0x000391cc: push eax; add al, 0xe9; ret; 
0x0011ded5: push eax; add al, 0xf6; ret 0xf01; 
0x000c8d05: push eax; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; and byte ptr [esi + 0x44], 0xf9; call dword ptr [eax - 0x18]; 
0x000bbc46: push eax; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [esi + 0x44], esp; stc; call dword ptr [eax - 0x18]; 
0x0014e2b3: push eax; add byte ptr [eax], al; mov eax, edx; pop ebx; pop esi; ret; 
0x0002ffda: push eax; add byte ptr [ecx], al; add byte ptr [eax], al; and eax, dword ptr [esp + 8]; ret; 
0x000499da: push eax; add byte ptr [edi], cl; xchg esp, eax; ret; 
0x001047d1: push eax; add dword ptr [eax], eax; add byte ptr [ebx - 0x7a76f783], cl; sar dh, 0xff; dec dword ptr [ecx - 0x14743]; jmp dword ptr [ebp - 0x5f]; 
0x0009bb13: push eax; add dword ptr [eax], eax; add byte ptr [ecx - 0x76f3dbbc], cl; ret 0xa165; 
0x00104365: push eax; add dword ptr [eax], eax; add cl, al; jmp 0x5fbc3671; ret; 
0x00059425: push eax; add dword ptr [ecx + 0x5b088813], ecx; pop esi; pop edi; ret; 
0x00052fe1: push eax; add dword ptr [ecx + 0xc61453], ecx; sub eax, 0xfff8c7e9; jmp dword ptr [esi - 0x70]; 
0x0009eb37: push eax; add dword ptr [ecx - 0x3dbaf028], ecx; add esp, 0x18; pop ebx; ret; 
0x00157017: push eax; add eax, 0x18; push eax; call 0x156df0; add esp, 0x2c; ret; 
0x00138c84: push eax; add eax, 0x5b0cc483; pop esi; pop edi; pop ebp; ret; 
0x00072213: push eax; add eax, ecx; ljmp 0x450f:0x107f602; ret 0xec83; 
0x000a1ae0: push eax; add ebx, ebp; or ecx, dword ptr [ebp - 0x7cffd98c]; ret 0x3801; 
0x000b322b: push eax; add ecx, dword ptr [ebx + 0x5b0c2444]; pop esi; ret; 
0x000afdc8: push eax; add ecx, dword ptr [ebx + 0x5e082444]; ret; 
0x00082895: push eax; and al, 0x65; mov byte ptr [0x4fe], 0; mov dword ptr gs:[0x80], eax; ret; 
0x0002c2f7: push eax; and al, ah; call dword ptr [edx - 1]; 
0x0002c2a5: push eax; and al, ah; call dword ptr [esi + 0x31]; 
0x00161a05: push eax; and byte ptr [ebp + 0xe0249c], cl; add byte ptr [eax], al; push ebx; push eax; call dword ptr [edx + 8]; 
0x001463ba: push eax; and byte ptr [ebx + 0x420f1afe], al; ret 0xb60f; 
0x00161374: push eax; and byte ptr [ebx + 0x50], dl; call dword ptr [edx + 4]; 
0x0007589b: push eax; and byte ptr [ecx + 0x488b0448], cl; or byte ptr [ecx + 0x8508910], cl; mov dword ptr [eax + 0x20], ecx; ret; 
0x0015dda6: push eax; and byte ptr [edi + 0x50], dl; call dword ptr [edx + 8]; 
0x00158900: push eax; and byte ptr [esi + 0x50], dl; call dword ptr [edx + 4]; 
0x0002fca5: push eax; and eax, 0x1000; ret; 
0x0002fc75: push eax; and eax, 0x100; ret; 
0x0002fc45: push eax; and eax, 0x2000; ret; 
0x0002fb85: push eax; and eax, 0x200; ret; 
0x0002fbe5: push eax; and eax, 0x4000; ret; 
0x0002faf5: push eax; and eax, 0x400; ret; 
0x0002fbb5: push eax; and eax, 0x8000; ret; 
0x0002fb55: push eax; and eax, 0x800; ret; 
0x0002fd55: push eax; and eax, 1; ret; 
0x0002fb25: push eax; and eax, 2; ret; 
0x0002fc15: push eax; and eax, 4; ret; 
0x0002fac5: push eax; and eax, 8; ret; 
0x0010884b: push eax; call 0x108ad0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0010896a: push eax; call 0x108c90; add esp, 0x10; add esp, 0xc; ret; 
0x00059357: push eax; call 0x109bf0; add esp, 0x1c; ret; 
0x00112532: push eax; call 0x112270; add esp, 0x10; add esp, 0xc; ret; 
0x001a07f0: push eax; call 0x11c4f0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0011d337: push eax; call 0x11d4d0; add esp, 0x1c; ret; 
0x001a0763: push eax; call 0x11e280; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00094806: push eax; call 0x1240e0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00149166: push eax; call 0x149060; add esp, 0x14; pop ebx; pop esi; ret; 
0x0015701b: push eax; call 0x156df0; add esp, 0x2c; ret; 
0x0013c87f: push eax; call 0x16ed20; mov dword ptr [esp], ebp; call esi; 
0x001a07ac: push eax; call 0x20140; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00105100: push eax; call 0x20150; add esp, 0x18; pop ebx; ret; 
0x001451c1: push eax; call 0x30630; add esp, 0x10; add esp, 0xc; ret; 
0x00160135: push eax; call 0x30630; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000ff6f6: push eax; call 0x30630; add esp, 0x18; pop ebx; ret; 
0x0003b940: push eax; call 0x3b950; add esp, 0x1c; ret; 
0x0003b9e7: push eax; call 0x3ba00; add esp, 0x10; add esp, 0xc; ret; 
0x0003ba67: push eax; call 0x3ba80; add esp, 0x10; add esp, 0xc; ret; 
0x00058983: push eax; call 0x72280; cmp eax, 1; sbb eax, eax; add esp, 0x1c; ret; 
0x0007bf73: push eax; call 0x7f6f0; add esp, 0x1c; ret; 
0x0008e1fb: push eax; call 0x82fd0; add esp, 0x28; pop ebx; ret; 
0x0008f02b: push eax; call 0x82fd0; add esp, 0x2c; ret; 
0x000cd239: push eax; call 0x83280; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00080f89: push eax; call 0x83280; add esp, 0x1c; ret; 
0x0008d997: push eax; call 0x84130; add esp, 0x1c; ret; 
0x0008ae3f: push eax; call 0x8a410; add esp, 0x18; pop ebx; ret; 
0x001586f0: push eax; call 0x8bf40; add esp, 0x18; lea eax, [ebx + 0xa300]; pop ebx; ret; 
0x0002475e: push eax; call 0x8bf40; add esp, 0x1c; ret; 
0x000fb428: push eax; call 0xb4980; add esp, 0x1c; ret; 
0x00094718: push eax; call 0xb4de0; add esp, 0x1c; ret; 
0x000ced7b: push eax; call 0xcb230; add esp, 0x1c; ret; 
0x000caec5: push eax; call 0xcd250; add esp, 0x1c; ret; 
0x00158ca2: push eax; call dword ptr [ecx + 0x10]; 
0x000e0e80: push eax; call dword ptr [ecx + 0x20]; 
0x001589c5: push eax; call dword ptr [ecx + 0xc]; 
0x00158a51: push eax; call dword ptr [ecx + 8]; 
0x00158d57: push eax; call dword ptr [ecx]; 
0x0012d038: push eax; call dword ptr [edi + 0x14]; 
0x00158e4f: push eax; call dword ptr [edx + 0x10]; 
0x00161fbe: push eax; call dword ptr [edx + 0x14]; 
0x0015dce5: push eax; call dword ptr [edx + 0xc]; 
0x00158903: push eax; call dword ptr [edx + 4]; 
0x0015dda9: push eax; call dword ptr [edx + 8]; 
0x00162183: push eax; call dword ptr [edx]; 
0x0012240d: push eax; call dword ptr gs:[0x10]; 
0x00078c86: push eax; call ebx; 
0x0009a2f2: push eax; call ecx; 
0x00150da6: push eax; call edi; 
0x00083627: push eax; call edx; 
0x0002b4cc: push eax; call esi; 
0x0008f51c: push eax; cmpxchg dword ptr [edx], ecx; jne 0x8f530; xor eax, eax; pop ebx; ret; 
0x000f43fb: push eax; dec eax; stc; call dword ptr [eax - 0x77]; 
0x001719bd: push eax; dec esp; ret; 
0x000b6021: push eax; fcomi st(6); dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0009c262: push eax; idiv bh; cmovne eax, edx; ret; 
0x0004acfa: push eax; insb byte ptr es:[edi], dx; lea ecx, [ecx + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0004aa6e: push eax; insb byte ptr es:[edi], dx; xor ecx, ecx; mov ebx, 0; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x000e000d: push eax; int1; clc; inc dword ptr [ecx]; fistp qword ptr [esi]; jmp edi; 
0x00094577: push eax; jbe 0x94580; ret; 
0x0010eb95: push eax; jmp dword ptr [esi - 0x7d]; 
0x000b3573: push eax; jnp 0x5b1759be; pop esi; ret; 
0x000b00a0: push eax; jnp 0x5e1324eb; ret; 
0x000ff1b0: push eax; lea eax, [ebp - 0x11c]; push 0x100; push eax; push edx; call ebx; 
0x00059350: push eax; lea eax, [edx - 0x6ce81]; push eax; call 0x109bf0; add esp, 0x1c; ret; 
0x000b644b: push eax; lea eax, [esp + 0x34]; push eax; push dword ptr [esi + 8]; call ebx; 
0x000ceb5b: push eax; lea edx, [esp + 0x1c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x00160866: push eax; lea edx, [esp + 0xac]; push edx; push esi; call dword ptr [eax + 4]; 
0x00165f69: push eax; mov bl, 0xf9; call dword ptr [eax - 0x73]; 
0x001153f6: push eax; mov dword ptr [eax + 0x54], edx; xor eax, eax; ret; 
0x00125b4c: push eax; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x000da06d: push eax; mov dword ptr [esp + 0x1c], eax; call 0x16ed20; add esp, 0x10; mov eax, dword ptr [esp + 0xc]; call eax; 
0x00125b98: push eax; mov dword ptr [esp + 8], eax; mov eax, 0x75; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x00126528: push eax; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x000cebcb: push eax; mov eax, 0x68; mov edx, esi; call dword ptr gs:[0x10]; 
0x0010a8c7: push eax; mov eax, 0xdd; mov ecx, esi; mov edx, edi; call dword ptr gs:[0x10]; 
0x0006a9a0: push eax; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x000cb7b5: push eax; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x0016133b: push eax; mov ebx, dword ptr [esp + 0x3c]; push ebx; call dword ptr [eax + 0x14]; 
0x0006fc46: push eax; mov ebx, eax; push edx; push esi; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x00131b65: push eax; mov ecx, 0xe383fff5; add dword ptr [ebp - 0xa891f6e], ecx; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x00122368: push eax; mov ecx, dword ptr [esp + 0x54]; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x0010a957: push eax; mov ecx, esi; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00122244: push eax; mov edx, dword ptr [esp + 0x54]; lea ecx, [esp + 0x1c]; mov eax, 0x19a; call dword ptr gs:[0x10]; 
0x0011236a: push eax; mov esi, dword ptr [esp + 0x5c]; mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x001122bd: push eax; mov esi, dword ptr [esp + 0x5c]; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00075ef3: push eax; or al, 0x31; ror byte ptr [ecx + 0x4c4830b], 0x5b; pop esi; ret; 
0x0009129b: push eax; or al, 0x5b; pop esi; pop edi; ret; 
0x0008282d: push eax; or al, 0x65; mov dword ptr [0x7c], eax; ret; 
0x00053643: push eax; or al, 0x89; sal esi, 1; ret 0xf40; 
0x000f0ef7: push eax; or al, 0x8b; inc eax; or byte ptr [ebx - 0x76e3db8c], cl; shr dword ptr [ecx], cl; ret; 
0x0012e011: push eax; or al, 0xf6; ret 0x7504; 
0x00052797: push eax; or al, 0xf6; ret 0xf40; 
0x000b5fc6: push eax; or byte ptr [ebp - 0x2a], dh; lea ebx, [eax + 8]; mov eax, ebx; pop ebx; ret; 
0x0002d7a3: push eax; or byte ptr [ebp - 0x74988a2e], al; inc ebx; add al, 0x83; ret; 
0x0014e258: push eax; or byte ptr [ebp - 0xc], dh; ret; 
0x0007bf1c: push eax; or byte ptr [ebx + 0x10], dh; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x0007bf5a: push eax; or byte ptr [ebx + 0x12], dh; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x000b3291: push eax; or byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000afe0e: push eax; or byte ptr [ebx + 0x5e082444], cl; ret; 
0x00162e38: push eax; or byte ptr [ebx - 0x137cef3c], al; or al, 0x8b; inc edi; add al, 0x57; call dword ptr [eax + 0x10]; 
0x00080bb9: push eax; or byte ptr [ebx - 0x2fd6f7bf], cl; ret; 
0x0015ac41: push eax; or byte ptr [ebx - 0x3f7aef3c], al; je 0x15ad4b; sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x0016363a: push eax; or byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x0006b84d: push eax; or byte ptr [ecx - 0x16e122e9], cl; ret; 
0x001167d6: push eax; or byte ptr [edx + 0x100], bh; mov word ptr [eax + 0x16], dx; ret; 
0x00158f5c: push eax; or dh, dh; ret 0x7401; 
0x000fbc52: push eax; or dword ptr [ebx + 0x5e], ebx; and edx, 0xf; mov eax, edx; ret; 
0x000b0060: push eax; or eax, 0x824448b; pop esi; ret; 
0x000b3533: push eax; or eax, 0xc24448b; pop ebx; pop esi; ret; 
0x0008bd46: push eax; or eax, edx; xor edx, edx; mov dword ptr [ecx], eax; mov eax, edx; ret; 
0x00021fc5: push eax; outsb dx, byte ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x000cecd0: push eax; pop ebx; pop esi; pop edi; ret; 
0x000be970: push eax; pop es; add byte ptr [ebx - 0x72cfdb84], cl; xchg dword ptr [edi + edx*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x000b32af: push eax; pop es; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afe2c: push eax; pop es; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x001575d7: push eax; push 0; call 0x152d90; add esp, 0x1c; ret; 
0x001603aa: push eax; push 0; call 0x70c80; add esp, 0x18; pop ebx; ret; 
0x001193a0: push eax; push 0; push dword ptr [esp + 0x1c]; call 0x58600; add esp, 0x1c; ret; 
0x0011661b: push eax; push 0x5410; push dword ptr [esp + 0x1c]; call 0x117200; add esp, 0x1c; ret; 
0x001567d7: push eax; push 0xa; call 0x152d90; add esp, 0x1c; ret; 
0x0002171c: push eax; push 1; call 0x10a240; add esp, 0x1c; ret; 
0x00156457: push eax; push 1; call 0x152d90; add esp, 0x1c; ret; 
0x0010c97b: push eax; push 1; push dword ptr [esp + 0x30]; push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x00155b97: push eax; push 2; call 0x152d90; add esp, 0x1c; ret; 
0x0010ccb6: push eax; push 2; push dword ptr [esp + 0x30]; push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x00154b97: push eax; push 3; call 0x152d90; add esp, 0x1c; ret; 
0x001557d7: push eax; push 4; call 0x152d90; add esp, 0x1c; ret; 
0x00153597: push eax; push 5; call 0x152d90; add esp, 0x1c; ret; 
0x0010cc4b: push eax; push 5; push dword ptr [esp + 0x30]; push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x00155f37: push eax; push 6; call 0x152d90; add esp, 0x1c; ret; 
0x00157e67: push eax; push 7; call 0x152d90; add esp, 0x1c; ret; 
0x00153c37: push eax; push 8; call 0x152d90; add esp, 0x1c; ret; 
0x001578b7: push eax; push 9; call 0x152d90; add esp, 0x1c; ret; 
0x000b3553: push eax; push cs; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b0080: push eax; push cs; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0003bb80: push eax; push cs; xor eax, eax; pop ebx; pop esi; ret; 
0x0012ed8e: push eax; push dword ptr [ebp - 0x4c]; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x00066a39: push eax; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x0009a5d3: push eax; push dword ptr [ebx + 0x24]; call edx; 
0x0016084a: push eax; push dword ptr [ebx + 0x48]; push dword ptr [esp + 0x2c]; push esi; call dword ptr [eax + 0xc]; 
0x0002262c: push eax; push dword ptr [ebx + 4]; call esi; 
0x0015b183: push eax; push dword ptr [ebx]; call dword ptr [ebx + 8]; 
0x0016f497: push eax; push dword ptr [ecx]; mov dword ptr [esp + 0x28], ecx; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0016f397: push eax; push dword ptr [ecx]; mov dword ptr [esp + 0x2c], ecx; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x000b6302: push eax; push dword ptr [edi]; call ebx; 
0x000b6450: push eax; push dword ptr [esi + 8]; call ebx; 
0x00077798: push eax; push dword ptr [esp + 0x18]; call dword ptr [edi + 0x48]; 
0x001087b2: push eax; push dword ptr [esp + 0x1c]; call 0x109330; add esp, 0x1c; ret; 
0x000583b6: push eax; push dword ptr [esp + 0x1c]; call 0x109bf0; add esp, 0x1c; ret; 
0x0011d3c7: push eax; push dword ptr [esp + 0x1c]; call 0x11d3e0; add esp, 0x1c; ret; 
0x0011e59c: push eax; push dword ptr [esp + 0x1c]; call 0x11e3b0; add esp, 0x18; pop ebx; ret; 
0x0011e56c: push eax; push dword ptr [esp + 0x1c]; call 0x11e430; add esp, 0x18; pop ebx; ret; 
0x00138b57: push eax; push dword ptr [esp + 0x1c]; call 0x138b70; add esp, 0x1c; ret; 
0x00138fc7: push eax; push dword ptr [esp + 0x1c]; call 0x138fe0; add esp, 0x1c; ret; 
0x00162b15: push eax; push dword ptr [esp + 0x1c]; call 0x162870; add esp, 0x10; add esp, 0xc; ret; 
0x00165ff4: push eax; push dword ptr [esp + 0x1c]; call 0x165e20; add esp, 0x1c; ret; 
0x0003b8b7: push eax; push dword ptr [esp + 0x1c]; call 0x3bac0; add esp, 0x1c; ret; 
0x0003b917: push eax; push dword ptr [esp + 0x1c]; call 0x3bb40; add esp, 0x1c; ret; 
0x001193ce: push eax; push dword ptr [esp + 0x1c]; call 0x58600; add esp, 0x10; add esp, 0xc; ret; 
0x0009325e: push eax; push dword ptr [esp + 0x1c]; call 0x931a0; add esp, 0x18; pop ebx; ret; 
0x000cbb68: push eax; push dword ptr [esp + 0x1c]; call 0xcb230; add esp, 0x18; pop ebx; ret; 
0x0011bf0d: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x11b880; add esp, 0x1c; ret; 
0x00057bce: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x57b80; add esp, 0x1c; ret; 
0x000752be: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x57ba0; add esp, 0x1c; ret; 
0x000c4c0d: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x60130; add esp, 0x1c; ret; 
0x00057a7d: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x685c0; add esp, 0x1c; ret; 
0x000751dd: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x6d850; add esp, 0x1c; ret; 
0x00070c8d: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x70ba0; add esp, 0x1c; ret; 
0x00057b4d: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x7a180; add esp, 0x1c; ret; 
0x0007a80d: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x7a640; add esp, 0x1c; ret; 
0x0014f4a1: push eax; push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x000da3e2: push eax; push dword ptr [esp + 0x24]; push dword ptr [esp + 0x30]; call ebx; 
0x0013a7ae: push eax; push dword ptr [esp + 0x2c]; call 0x139c40; add esp, 0x2c; ret; 
0x001087d2: push eax; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x109360; add esp, 0x2c; ret; 
0x0002b4c8: push eax; push dword ptr [esp + 0x50]; call esi; 
0x0002b5ec: push eax; push dword ptr [esp + 0x50]; push dword ptr [esp + 0x50]; call esi; 
0x00026730: push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x54]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0002623e: push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x5c]; call edi; 
0x0002a045: push eax; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x00028c97: push eax; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; call esi; 
0x00027239: push eax; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x00029491: push eax; push dword ptr [esp + 0x64]; push dword ptr [esp + 0x64]; call edi; 
0x00027f01: push eax; push dword ptr [esp + 0x6c]; push dword ptr [esp + 0x6c]; call esi; 
0x0012dc3f: push eax; push dword ptr [esp + 8]; push 0x2000003; call dword ptr [ebp + 0x14]; 
0x0003b93f: push eax; push eax; call 0x3b950; add esp, 0x1c; ret; 
0x0003b9e6: push eax; push eax; call 0x3ba00; add esp, 0x10; add esp, 0xc; ret; 
0x0003ba66: push eax; push eax; call 0x3ba80; add esp, 0x10; add esp, 0xc; ret; 
0x000658df: push eax; push ebp; mov eax, dword ptr [esp + 0x1c]; call dword ptr [eax + 0x1c]; 
0x0015b9e0: push eax; push ebp; push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x0007d782: push eax; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x0017319d: push eax; push ebx; call dword ptr [ebp + 0x40]; 
0x0007c6ec: push eax; push ebx; call dword ptr [ecx + 0x40]; 
0x0007880d: push eax; push ebx; call dword ptr [edi + 0x40]; 
0x0008270c: push eax; push ecx; call edx; 
0x00082264: push eax; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0015a37f: push eax; push edi; call dword ptr [ecx + 0x18]; 
0x0015a4d3: push eax; push edi; call dword ptr [edx + 0x18]; 
0x000b6a6c: push eax; push edi; call esi; 
0x0012d9f8: push eax; push edi; push 0x2000006; call dword ptr [esi + 0x14]; 
0x0006eaa2: push eax; push edi; push esi; push ebp; call dword ptr [ebx + 0x1c]; 
0x0015859f: push eax; push edx; call dword ptr [ecx + 0xc]; 
0x0015859f: push eax; push edx; call dword ptr [ecx + 0xc]; add esp, 0x10; add esp, 0xc; ret; 
0x0015f73e: push eax; push edx; call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x000ff1bc: push eax; push edx; call ebx; 
0x0007faf2: push eax; push edx; mov dword ptr [esp + 0x40], edx; call dword ptr [esi + 0xc]; 
0x00077be8: push eax; push edx; push dword ptr [esp + 0x18]; call ecx; 
0x00077096: push eax; push edx; push edi; call dword ptr [ebx + 0x38]; 
0x0007d210: push eax; push edx; push esi; call ecx; 
0x00158679: push eax; push esi; call 0x15a0a0; mov eax, dword ptr [esp + 0x18]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x00070df0: push eax; push esi; call dword ptr [ebx + 0x48]; 
0x0007e871: push eax; push esi; call dword ptr [edi + 0x38]; 
0x00174259: push eax; push esi; call dword ptr [edi + 0x40]; 
0x0007c802: push eax; push esi; call dword ptr [edi + 0x48]; 
0x000b70cc: push eax; push esi; call ebx; 
0x000b62fc: push eax; push esi; lea eax, [esp + 0x40]; push eax; push dword ptr [edi]; call ebx; 
0x0006a7ba: push eax; push esi; mov eax, dword ptr [esp + 0x1c]; call dword ptr [eax + 0x1c]; 
0x0015b8c0: push eax; push esi; push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x0012f510: push eax; push esi; push edx; call dword ptr [ebx + 0x14]; 
0x001153f8: push eax; push esp; xor eax, eax; ret; 
0x001167df: push eax; push ss; ret; 
0x00083f3c: push eax; ret 0xfff9; 
0x00036a7d: push eax; ret; 
0x0009b0fe: push eax; rol byte ptr [ebx - 0x69f0f606], 1; ret 0xb60f; 
0x000827ec: push eax; sbb al, 0x65; mov edx, dword ptr [0x7c]; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x80], eax; ret; 
0x0012cb36: push eax; sbb al, 0x89; ret; 
0x000238e9: push eax; sbb byte ptr [edi], cl; mov bh, 0x93; shr byte ptr [esi - 7], 1; jmp dword ptr [esi - 0x77]; 
0x0007bca9: push eax; sbb esp, ebp; call dword ptr [eax - 1]; 
0x00152b36: push eax; scasb al, byte ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x0013127d: push eax; shr ax, 0xe; and eax, 1; pop ebx; ret; 
0x0011f871: push eax; stc; call dword ptr [eax + 0x57]; 
0x0009aff1: push eax; std; cmc; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0014771c: push eax; stosb byte ptr es:[edi], al; stc; call dword ptr [eax - 0x73]; 
0x0015e7ac: push eax; sub al, 0x8b; add al, byte ptr [ebp - 0x7ce58b40]; in al, dx; or al, 0x83; ret 0x5208; 
0x001155c8: push eax; sub byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x001636a3: push eax; sub byte ptr [ecx - 0x74d7dbac], cl; push eax; or byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x001624a9: push eax; sub ebx, esi; call dword ptr [eax - 0x48]; 
0x00162344: push eax; sub ebx, esi; call dword ptr [edx - 0x73]; 
0x001627aa: push eax; sub ebx, esi; call dword ptr [edx - 0x75]; 
0x00160db7: push eax; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x00131bb5: push eax; test eax, 0xe383fff5; add dword ptr [ebp - 0xaa92f6e], ecx; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x00140237: push ebp; aam 0x8b; add byte ptr [ecx], bh; ret 0x460f; 
0x00096e91: push ebp; adc byte ptr [ebx - 0x76d7db94], cl; jl 0x96ebe; adc al, 0x8d; inc edx; jmp dword ptr [ecx]; 
0x0009c53d: push ebp; add byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x000e6fcc: push ebp; add byte ptr [ecx], bh; ret 0x840f; 
0x000ee17a: push ebp; add dh, dh; inc esp; ret 0x804; 
0x000a9fd7: push ebp; add eax, dword ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x00122eb2: push ebp; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x0007e670: push ebp; and al, 0x21; ret 0xc483; 
0x000f7789: push ebp; and al, 0x8b; inc ebp; sub al, 0x39; sal byte ptr [esi + ecx - 0x77], 1; ret 0xf189; 
0x000f779e: push ebp; and al, 0x8b; inc ebp; xor byte ptr [ecx], bh; sal byte ptr [ebx + ecx - 0x77], 1; ret 0xf189; 
0x00094234: push ebp; call 0x20140; mov eax, dword ptr [esp + 0x1c]; mov dword ptr [esp], eax; call esi; 
0x00160dbb: push ebp; call dword ptr [eax + 0x10]; 
0x00065de8: push ebp; call dword ptr [eax + 0x1c]; 
0x0006eaa5: push ebp; call dword ptr [ebx + 0x1c]; 
0x0006dd6e: push ebp; call dword ptr [edi + 0x1c]; 
0x0006d988: push ebp; call dword ptr [esi + 0x1c]; 
0x00071314: push ebp; call dword ptr [esi + 0x40]; 
0x0015ac51: push ebp; call dword ptr [esi]; 
0x00160dd2: push ebp; call eax; 
0x0013c939: push ebp; call edi; 
0x00139cc3: push ebp; cli; jmp dword ptr [esi - 0x3f]; 
0x00139cc3: push ebp; cli; jmp dword ptr [esi - 0x3f]; ret; 
0x00097e46: push ebp; cmp byte ptr [ebp + 0x7c09b], cl; add byte ptr [ecx], bh; fisttp qword ptr [ebp - 0x6af0f798]; ret; 
0x000dab9d: push ebp; hlt; jmp dword ptr [ebp - 0x75]; 
0x000720d9: push ebp; in al, 0x89; ret; 
0x00027c67: push ebp; jge 0x27c6a; add byte ptr [ebx - 0x72c7db84], cl; xchg eax, esp; jo 0x27c6d; call dword ptr [eax - 0x73]; 
0x000b70c7: push ebp; lea eax, [esp + 0x64]; push eax; push esi; call ebx; 
0x0012eed2: push ebp; mov ah, 0x6a; add eax, 0x57b5808d; stc; call dword ptr [eax - 0x75]; 
0x0012f50b: push ebp; mov ah, 0x83; les ecx, ptr [eax + edx*2]; push esi; push edx; call dword ptr [ebx + 0x14]; 
0x0005359b: push ebp; mov al, 0x83; ret; 
0x00030cbe: push ebp; mov al, 0x8d; cmp byte ptr [edx], 0x2f; stc; call dword ptr [eax + 0x53]; 
0x00168191: push ebp; mov al, byte ptr [0x3908418b]; ret 0x2675; 
0x0010ff47: push ebp; mov dl, 0xff; jmp dword ptr [ebp - 0x75]; 
0x0005468f: push ebp; mov eax, 0x2901c083; fidivr dword ptr [ecx]; ret 0xee7f; 
0x00169641: push ebp; mov eax, 0x3908418b; ret 0x4675; 
0x00170467: push ebp; mov eax, dword ptr [esp + 0x10]; call eax; 
0x000658e0: push ebp; mov eax, dword ptr [esp + 0x1c]; call dword ptr [eax + 0x1c]; 
0x000cb17f: push ebp; mov eax, dword ptr [esp + 0x34]; call eax; 
0x0015fbb5: push ebp; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x10]; 
0x00115326: push ebp; mov ebx, dword ptr [edi]; mov ebp, dword ptr [edi + 8]; mov edi, dword ptr [edi + 4]; call dword ptr gs:[0x10]; 
0x000cb015: push ebp; mov ecx, dword ptr [esp + 0x34]; call ecx; 
0x001317b3: push ebp; mov esp, 0xa5cc828d; stc; call dword ptr [eax - 0x73]; 
0x0014f1af: push ebp; mov word ptr [ebp - 0x6524b7e], cs; call dword ptr [eax - 0x73]; 
0x00057232: push ebp; or al, 0xf6; ret 0xf01; 
0x000573bc: push ebp; or al, 0xf6; ret 0xf40; 
0x00079ea8: push ebp; outsb dx, byte ptr [esi]; cli; jmp dword ptr [esi - 0x70]; 
0x0014831d: push ebp; pop edi; stc; call dword ptr [eax - 0x18]; 
0x0014cc3a: push ebp; pop edi; stc; call dword ptr [eax - 0x73]; 
0x0013856a: push ebp; pop edx; stc; call dword ptr [eax - 0x18]; 
0x0014f763: push ebp; push 0; push edi; push ebx; call edx; 
0x0015b9e1: push ebp; push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x0015ac7e: push ebp; push dword ptr [esi + 0xc]; push edi; call dword ptr [eax + 0x10]; 
0x0015ac3b: push ebp; push dword ptr [esi + 0xc]; push edi; call dword ptr [eax + 8]; 
0x000225ce: push ebp; push dword ptr [esp + 0x30]; push dword ptr [ebx + 4]; call esi; 
0x0003913f: push ebp; push dword ptr [esp + 0x30]; push esi; call edi; 
0x0007d68c: push ebp; push dword ptr [esp + 0x3c]; push edi; call dword ptr [esi + 0x20]; 
0x00069995: push ebp; push dword ptr [esp + 0x44]; push edi; call dword ptr [eax + 0x1c]; 
0x000698aa: push ebp; push dword ptr [esp + 0x44]; push edi; call dword ptr [ebx + 0x1c]; 
0x0007d0dd: push ebp; push dword ptr [esp + 8]; push dword ptr [esp + 8]; push esi; call dword ptr [edi + 0x40]; 
0x0006a7b9: push ebp; push eax; push esi; mov eax, dword ptr [esp + 0x1c]; call dword ptr [eax + 0x1c]; 
0x00150d1b: push ebp; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x00038e37: push ebp; push ebx; push esi; call edi; 
0x00038dd0: push ebp; push ecx; lea esi, [ecx + eax]; push esi; call edi; 
0x0015a45e: push ebp; push edi; call dword ptr [eax + 0x18]; 
0x00068b45: push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x0007c356: push ebp; push edi; call dword ptr [edx + 0x1c]; 
0x0007d962: push ebp; push edi; push ebx; call dword ptr [esi + 0x40]; 
0x00074ca5: push ebp; push edi; push ebx; mov eax, dword ptr [esp + 0x10]; call dword ptr [eax + 0x1c]; 
0x001734bf: push ebp; push edi; push esi; call dword ptr [ebx + 0x40]; 
0x00162180: push ebp; push edi; push esi; push eax; call dword ptr [edx]; 
0x001655f7: push ebp; push esi; call dword ptr [eax + 0xc]; 
0x0016562f: push ebp; push esi; call dword ptr [eax + 8]; 
0x0007d783: push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x0016557a: push ebp; push esi; call edi; 
0x000392a7: push ebp; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00162e14: push ebp; push esi; push 3; push edi; call dword ptr [eax]; 
0x00038e13: push ebp; push esi; push dword ptr [esp + 0x1c]; call edi; 
0x00038de6: push ebp; push esi; push dword ptr [esp + 0x30]; call edi; 
0x0002d67c: push ebp; ror byte ptr [edi], 0x94; ret 0x3a3c; 
0x00136697: push ebp; sar edi, cl; jmp dword ptr [esi - 0x70]; 
0x00030e2a: push ebp; shr al, 0x9f; ret 5; 
0x00120e06: push ebp; stc; call dword ptr [eax - 0x18]; 
0x00124285: push ebp; stc; dec dword ptr [ebp - 0x6aa3f53]; call dword ptr [eax - 0x18]; 
0x0015e470: push ebp; std; jmp dword ptr [esi - 0x70]; 
0x0007759a: push ebp; test al, 0x8d; and byte ptr [eax], 0x7d; stc; call dword ptr [eax - 0x73]; 
0x00167fbf: push ebp; test byte ptr [ecx + 0x458b9045], cl; sbb byte ptr [ecx - 0x837b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00087c0e: push ebx; aas; stc; call dword ptr [eax - 0x18]; 
0x000faa4a: push ebx; adc al, 0x8d; or ch, 0x48; stc; call dword ptr [eax - 0x77]; 
0x00052fe4: push ebx; adc al, 0xc6; add byte ptr [0xfff8c7e9], ch; jmp dword ptr [esi - 0x70]; 
0x0015b216: push ebx; adc bl, ch; ret; 
0x0007a5e4: push ebx; adc byte ptr [ecx + 0x53891856], cl; or al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0009a627: push ebx; adc byte ptr [ecx + 0x5e5b0443], cl; pop edi; ret; 
0x0016fa6e: push ebx; add al, 0x29; ret 0x143b; 
0x0016fc96: push ebx; add al, 0x29; ret 0x543b; 
0x0007b4c3: push ebx; add al, 0x31; ror byte ptr [ecx + 0x5bd08903], cl; pop esi; ret; 
0x0007b97b: push ebx; add al, 0x31; ror byte ptr [ecx + 0x5bd08903], cl; ret; 
0x000e9579: push ebx; add al, 0x74; sbb dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x0012c75f: push ebx; add al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x000b5d41: push ebx; add al, 0x83; ret; 
0x00140d3a: push ebx; add al, 0x89; dec ebx; or byte ptr [ebx + 0x5e], bl; pop edi; ret 4; 
0x00104b41: push ebx; add al, 0x8b; inc ebx; or byte ptr [ecx], bh; ret 0x840f; 
0x000764d1: push ebx; add al, 0xc1; cli; add ch, bl; ljmp 0x5bff:0xffffffb8; ret; 
0x0011e092: push ebx; add al, 0xf6; ret 0x7401; 
0x0014d6a3: push ebx; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; add al, 0xab; stc; call dword ptr [eax - 0x18]; 
0x0003baa2: push ebx; add cl, byte ptr [ecx - 0x7c3fcef0]; les ecx, ptr [eax]; pop ebx; ret; 
0x0009d94d: push ebx; add dword ptr [eax], eax; add byte ptr [ebx + 0x3910245c], cl; ret; 
0x00070319: push ebx; add eax, dword ptr [eax - 0x7cfdf2b2]; ret; 
0x000ec5ce: push ebx; and al, 0x39; ror byte ptr [edi], 1; dec edi; ret 0x538b; 
0x00022831: push ebx; and byte ptr [ebp - 0x720d8b2e], al; nop; test byte ptr [esi - 7], ch; call dword ptr [edx - 0x73]; 
0x0013cb83: push ebx; call 0x16ed20; mov dword ptr [esp], ebp; call ebx; 
0x0002b875: push ebx; call 0x16ed20; mov dword ptr [esp], esi; call ebx; 
0x00133bc4: push ebx; call 0x57ac0; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x0011c8b5: push ebx; call 0x57af0; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x001590e9: push ebx; call dword ptr [eax + 0x10]; 
0x001596eb: push ebx; call dword ptr [eax + 0x14]; 
0x0015f11a: push ebx; call dword ptr [eax + 0x18]; 
0x00072b09: push ebx; call dword ptr [eax + 0x1c]; 
0x0016629b: push ebx; call dword ptr [eax + 0x20]; 
0x0015f197: push ebx; call dword ptr [eax + 0x24]; 
0x00075ec3: push ebx; call dword ptr [eax + 0xc]; 
0x0015b07e: push ebx; call dword ptr [eax + 4]; 
0x001590d9: push ebx; call dword ptr [eax]; 
0x0015920a: push ebx; call dword ptr [eax]; mov eax, dword ptr [ebx + 4]; add esp, 0x14; push ebx; call dword ptr [eax + 0x10]; 
0x00072b7b: push ebx; call dword ptr [ebp + 0x1c]; 
0x0007374c: push ebx; call dword ptr [ebp + 0x24]; 
0x00080739: push ebx; call dword ptr [ebp + 0x2c]; 
0x00173132: push ebx; call dword ptr [ebp + 0x3c]; 
0x0007c4f9: push ebx; call dword ptr [ebp + 0x40]; 
0x0008048d: push ebx; call dword ptr [ebp + 0xc]; 
0x0007c6ed: push ebx; call dword ptr [ecx + 0x40]; 
0x00173d2e: push ebx; call dword ptr [edi + 0x24]; 
0x0007880e: push ebx; call dword ptr [edi + 0x40]; 
0x0007df88: push ebx; call dword ptr [edi + 0x44]; 
0x00075bbc: push ebx; call dword ptr [esi + 0x10]; 
0x001596c1: push ebx; call dword ptr [esi + 0x14]; 
0x000763e6: push ebx; call dword ptr [esi + 0x18]; 
0x0007bfbf: push ebx; call dword ptr [esi + 0x30]; 
0x0007c68a: push ebx; call dword ptr [esi + 0x3c]; 
0x0007d964: push ebx; call dword ptr [esi + 0x40]; 
0x0007dde6: push ebx; call dword ptr [esi + 0x44]; 
0x0007f3d6: push ebx; call dword ptr [esi + 0xc]; 
0x000d7164: push ebx; call eax; 
0x0011d786: push ebx; call edx; 
0x0011d74f: push ebx; call esi; 
0x0016e650: push ebx; cld; jmp dword ptr [esi - 0x70]; 
0x000ddd09: push ebx; dec edx; cli; dec dword ptr [ecx + 0x1db8c2]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001605ee: push ebx; dec esp; push edx; call eax; 
0x001703c9: push ebx; hlt; jmp dword ptr [esi - 9]; 
0x0012051d: push ebx; idiv bh; dec dword ptr [ebp - 0x65e9f7d]; call dword ptr [eax - 0x73]; 
0x00028c92: push ebx; lea eax, [esp + 0x68]; push eax; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; call esi; 
0x00026239: push ebx; lea eax, [esp + 0x6c]; push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x5c]; call edi; 
0x00029489: push ebx; lea eax, [esp + 0x80]; push eax; push dword ptr [esp + 0x64]; push dword ptr [esp + 0x64]; call edi; 
0x00086ba9: push ebx; lea ebx, [eax + 0x520]; mov eax, 0x182; call dword ptr gs:[0x10]; 
0x0004acf8: push ebx; lea edx, [eax + 0x6c]; lea ecx, [ecx + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0004aa6c: push ebx; lea edx, [eax + 0x6c]; xor ecx, ecx; mov ebx, 0; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x00163c1b: push ebx; lea edx, [esp + 0x38]; push edx; call dword ptr [eax + 0xc]; 
0x000b6f69: push ebx; mov dh, bh; dec dword ptr [ebx - 0x72e3dba4]; adc esp, -0x6a; stc; call dword ptr [eax - 0x73]; 
0x00130ec5: push ebx; mov dword ptr [ebp - 0x38], eax; push 0; mov dword ptr [ebp - 0x44], 0; push 0x1000002; call edx; 
0x001308be: push ebx; mov dword ptr [ebp - 0x44], eax; push 0; push 0x1000005; call edx; 
0x00130d15: push ebx; mov dword ptr [ebp - 0x44], edx; push 0; push 0x1000004; call eax; 
0x0013090e: push ebx; mov dword ptr [ebp - 0x44], edx; push 0; push 0x1000007; call eax; 
0x0010b01f: push ebx; mov eax, 0x14b; mov ebx, dword ptr [esp + 8]; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x0010a47f: push ebx; mov eax, 0x21; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00058a0f: push ebx; mov eax, 0x26; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000dd644: push ebx; mov eax, 0x2b; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001170ef: push ebx; mov eax, 0x2d; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0012134f: push ebx; mov eax, 0x34; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011694f: push ebx; mov eax, 0x4c; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000cc06f: push ebx; mov eax, 0x4f; mov ecx, dword ptr [esp + 8]; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x0011a7df: push ebx; mov eax, 0x5c; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011a82f: push ebx; mov eax, 0x5d; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00116fcf: push ebx; mov eax, 0x60; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0003797f: push ebx; mov eax, 0xb0; mov ebx, dword ptr [esp + 8]; mov ecx, 8; call dword ptr gs:[0x10]; 
0x001168ff: push ebx; mov eax, 0xbf; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00122fdf: push ebx; mov eax, 0xc3; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00159fb9: push ebx; mov eax, 0xc4830000; adc byte ptr [ebp - 0x7c398b40], al; ret; 
0x0012307f: push ebx; mov eax, 0xc4; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012302f: push ebx; mov eax, 0xc5; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00092c4f: push ebx; mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00074ca7: push ebx; mov eax, dword ptr [esp + 0x10]; call dword ptr [eax + 0x1c]; 
0x0016138d: push ebx; mov eax, dword ptr [esp + 0x18]; call eax; 
0x0012c952: push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0013eb34: push ebx; mov eax, dword ptr [esp + 8]; mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; 
0x000de338: push ebx; mov eax, dword ptr gs:[8]; mov ebx, 0x1200011; lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x0012677d: push ebx; mov ebx, 0x16; mov edi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0017a439: push ebx; mov ebx, 0x18; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00118f2a: push ebx; mov ebx, 0xfee1dead; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0009420e: push ebx; mov ebx, 1; sub esp, 0x28; mov ebp, dword ptr [esp + 0x3c]; lea ecx, [edi - 0x722c0]; call dword ptr gs:[0x10]; 
0x001260d9: push ebx; mov ebx, 2; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0008bed2: push ebx; mov ebx, dword ptr [esp + 0x10]; mov dword ptr [ebx], 0; call dword ptr gs:[0x10]; 
0x0014e6d5: push ebx; mov ebx, edi; call 0x20140; mov dword ptr [esp], ebp; call esi; 
0x00116a68: push ebx; mov ebx, edx; mov ecx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00108657: push ebx; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000832c1: push ebx; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000932f5: push ebx; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x001217cb: push ebx; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00058a66: push ebx; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00125c39: push ebx; mov edi, esi; mov ecx, dword ptr [esp + 0x14]; mov ebx, 0xd; mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x001096ea: push ebx; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00123f24: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00123b24: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x00109bc4: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x0010c294: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x0010c1d4: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x0010afe4: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x001152f4: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x0010c204: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x55; call dword ptr gs:[0x10]; 
0x00117024: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x00120fc4: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x00123bd4: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x001238d4: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x0011c524: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x001239c4: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x001239f4: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x000fafe4: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x00123c44: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000de874: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x0010bbe4: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x0010bbb4: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000df6b4: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000df6e4: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x0010bb84: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x0011c654: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x0011c624: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x0011f3f4: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x0011f454: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x0011f324: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x000ac5fb: push ebx; movq qword ptr [edi + 0x30], mm7; pop edi; pop esi; pop ebx; ret; 
0x000dd688: push ebx; or al, 0x5b; ret; 
0x0007a5ea: push ebx; or al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0012c7ff: push ebx; or al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x000e5d09: push ebx; or al, 0x83; ret; 
0x000dd685: push ebx; or al, 0x89; push ebx; or al, 0x5b; ret; 
0x0009a3c0: push ebx; or al, 0x8b; adc eax, dword ptr [ecx]; ret 0x1089; 
0x000dd682: push ebx; or byte ptr [ebx + 0x53890c53], cl; or al, 0x5b; ret; 
0x0017317c: push ebx; or byte ptr [ecx + 0x39082444], cl; ret 0x9774; 
0x00081f70: push ebx; or byte ptr [ecx + 0x4c48302], cl; pop ebx; pop esi; ret; 
0x000dd67f: push ebx; or byte ptr [ecx + 0x538b0853], cl; or al, 0x89; push ebx; or al, 0x5b; ret; 
0x00035411: push ebx; or byte ptr [ecx - 0x50f0fbb9], cl; ret 0x6c8b; 
0x0009500e: push ebx; or dh, dh; ret 0xf0f; 
0x00135562: push ebx; pop ecx; stc; call dword ptr [eax - 0x18]; 
0x00135715: push ebx; pop ecx; stc; call dword ptr [eax - 0x73]; 
0x001310b1: push ebx; push 0; push 0x1000001; mov dword ptr [ebp - 0x44], edx; call eax; 
0x00130708: push ebx; push 0; push 0x1000003; mov dword ptr [ebp - 0x44], edx; call eax; 
0x0005385a: push ebx; push dword ptr [ebp - 0x88]; call eax; 
0x000671d3: push ebx; push dword ptr [ebp - 0x88c]; push dword ptr [ebp - 0x87c]; call dword ptr [edx + 0x1c]; 
0x001302df: push ebx; push dword ptr [ebx + 0x30]; call eax; 
0x000b626a: push ebx; push dword ptr [edi]; call esi; 
0x00065de3: push ebx; push dword ptr [esp + 0x14]; push ebp; call dword ptr [eax + 0x1c]; 
0x000719e8: push ebx; push dword ptr [esp + 0x1c]; push dword ptr [esi + 0x98]; call eax; 
0x0006d983: push ebx; push dword ptr [esp + 0x24]; push ebp; call dword ptr [esi + 0x1c]; 
0x000c492d: push ebx; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x38]; push edi; call esi; 
0x0002b4c0: push ebx; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x50]; push dword ptr [esp + 0x50]; call esi; 
0x00025baf: push ebx; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x000255ec: push ebx; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00161376: push ebx; push eax; call dword ptr [edx + 4]; 
0x00161a0e: push ebx; push eax; call dword ptr [edx + 8]; 
0x001160a4: push ebx; push eax; pop ebx; pop esi; pop edi; ret; 
0x00066a38: push ebx; push eax; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x0008270b: push ebx; push eax; push ecx; call edx; 
0x000cb17e: push ebx; push ebp; mov eax, dword ptr [esp + 0x34]; call eax; 
0x00150d1a: push ebx; push ebp; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x00068b44: push ebx; push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x000778f1: push ebx; push ecx; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x40]; 
0x0007cfc2: push ebx; push ecx; push esi; call dword ptr [ebp + 0x40]; 
0x0017374e: push ebx; push ecx; push esi; mov eax, dword ptr [esp + 0x10]; call dword ptr [eax + 0x40]; 
0x000673ba: push ebx; push edi; push dword ptr [ebp - 0x87c]; call edx; 
0x0007390a: push ebx; push edi; push esi; call dword ptr [eax + 0x2c]; 
0x00066da0: push ebx; push edx; push dword ptr [ebp - 0x87c]; call dword ptr [eax + 0x1c]; 
0x00066b53: push ebx; push edx; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x00165613: push ebx; push edx; push esi; call dword ptr [eax + 0xc]; 
0x0016564b: push ebx; push edx; push esi; call dword ptr [eax + 8]; 
0x00165e9a: push ebx; push esi; call dword ptr [eax + 4]; 
0x0007634d: push ebx; push esi; call dword ptr [edi + 0x18]; 
0x00078ea1: push ebx; push esi; call eax; 
0x00038e38: push ebx; push esi; call edi; 
0x0006bacb: push ebx; push esi; push dword ptr [ebp - 0x8a0]; call dword ptr [eax + 0x1c]; 
0x0006dd6c: push ebx; push esi; push ebp; call dword ptr [edi + 0x1c]; 
0x0011fa66: push ebx; push esp; stc; call dword ptr [edx + 0x52]; 
0x0014ddb4: push ebx; pushal; stc; call dword ptr [eax - 0x18]; 
0x00115bb6: push ebx; ret 5; 
0x000ec448: push ebx; sbb al, 0x83; rol byte ptr [ecx], 0x39; ret 0xef7f; 
0x0013c043: push ebx; sbb byte ptr [ebx + 0x43031443], cl; adc byte ptr [ecx], bh; ret 0x6273; 
0x000dfed9: push ebx; setne al; ret; 
0x0011fa1b: push ebx; stc; call dword ptr [eax + 0x57]; 
0x0011fa4d: push ebx; stc; call dword ptr [ecx + 0x51]; 
0x00160b54: push ebx; sub byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x0009a4e3: push ebx; sub dh, dh; ret 0x7502; 
0x00071484: push ebx; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x0017802a: push ebx; sub esp, 4; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x000ee3d8: push ebx; xor al, 0x89; je 0xee401; cmp al, 0x29; ret 0x448b; 
0x000c81e9: push ebx; xor al, 0xf8; dec dword ptr [ebx - 0x36377b]; call dword ptr [esi - 1]; 
0x00116ac6: push ebx; xor ebx, ebx; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov esi, ebx; call dword ptr gs:[0x10]; 
0x0004aaa8: push ebx; xor edx, edx; lea ecx, [eax + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x00083294: push ebx; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0007b978: push ecx; adc al, 0x89; push ebx; add al, 0x31; ror byte ptr [ecx + 0x5bd08903], cl; ret; 
0x0008356b: push ecx; adc byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; ret; 
0x000fb3d5: push ecx; adc byte ptr [edx + 8], dh; setne al; movzx eax, al; neg eax; ret; 
0x0015b07b: push ecx; add al, 0x52; push ebx; call dword ptr [eax + 4]; 
0x0015b03b: push ecx; add al, 0x52; push ebx; call dword ptr [eax]; 
0x0003bbd9: push ecx; add al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x000a5d93: push ecx; add al, 0x5b; ret; 
0x000fb405: push ecx; add al, 0x77; push es; setne al; movzx eax, al; ret; 
0x00151851: push ecx; add byte ptr [eax], al; add bh, al; or dword ptr [eax + 0x51], 0; add byte ptr [eax], al; call esi; 
0x00151858: push ecx; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x0012d29c: push ecx; add dword ptr [eax + 0xf], eax; inc ebp; ret 0xc35b; 
0x00087b8d: push ecx; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [edx + 0x47], ch; stc; call dword ptr [eax - 0x18]; 
0x0002297a: push ecx; call 0x16ed20; mov dword ptr [esp], ebx; mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x0002300a: push ecx; call 0x16ed20; mov dword ptr [esp], ebx; mov ecx, dword ptr [ebp - 0x40]; call ecx; 
0x000745b3: push ecx; call 0x75f80; add esp, 0x1c; ret; 
0x00166573: push ecx; call dword ptr [eax + 0x20]; 
0x001665a2: push ecx; call dword ptr [eax + 0x24]; 
0x00165b32: push ecx; call dword ptr [eax + 4]; 
0x00165b03: push ecx; call dword ptr [eax]; 
0x0010bdc8: push ecx; call dword ptr [edx + 0x53]; 
0x00082343: push ecx; call eax; 
0x0008270d: push ecx; call edx; 
0x000eaff1: push ecx; dec dword ptr [ecx + 0x44e82434]; push ecx; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000eaff9: push ecx; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000cb010: push ecx; lea ebp, [esp + 0x6c]; push ebp; mov ecx, dword ptr [esp + 0x34]; call ecx; 
0x0007079d: push ecx; lea ecx, [esi + 0x28]; push ecx; push 1; push esi; call eax; 
0x000c4ec2: push ecx; lea ecx, [esp + 0x54]; push ecx; mov eax, dword ptr [esp + 0x40]; push dword ptr [eax]; call edi; 
0x00038dd1: push ecx; lea esi, [ecx + eax]; push esi; call edi; 
0x0011c08e: push ecx; lea esp, [ebp - 8]; pop ebx; pop esi; pop ebp; ret; 
0x0015a266: push ecx; mov dword ptr [eax], 0; pop ebx; ret; 
0x000d715f: push ecx; mov dword ptr [esp + 0x18], ecx; push ebx; call eax; 
0x00082102: push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x000c4ec7: push ecx; mov eax, dword ptr [esp + 0x40]; push dword ptr [eax]; call edi; 
0x0010c422: push ecx; mov ecx, dword ptr [esi + 0x20]; push dword ptr [ecx + eax]; push edx; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x00130dd4: push ecx; or al, 0x56; mov dword ptr [ebp - 0x44], edx; push edi; push ebx; call eax; 
0x001585a2: push ecx; or al, 0x83; les edx, ptr [eax]; add esp, 0xc; ret; 
0x001674d3: push ecx; or byte ptr [ecx], bh; ret 0x2775; 
0x00127a99: push ecx; or byte ptr [edx + 8], dh; seta al; movzx eax, al; neg eax; ret; 
0x000a5df5: push ecx; pop es; pop ebx; ret; 
0x00162078: push ecx; push 0xd; push edx; call dword ptr [eax + 0x14]; 
0x000707a1: push ecx; push 1; push esi; call eax; 
0x0011d783: push ecx; push 3; push ebx; call edx; 
0x00161fa8: push ecx; push 4; push edx; call dword ptr [eax + 0x14]; 
0x001592c2: push ecx; push 4; push edx; mov dword ptr [esp + 0x2c], edx; call dword ptr [eax]; 
0x00159822: push ecx; push 5; push ebx; call dword ptr [eax]; 
0x00161fbb: push ecx; push 6; push eax; call dword ptr [edx + 0x14]; 
0x00044efa: push ecx; push ds; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x0009a555: push ecx; push dword ptr [ebx + 0x24]; call eax; 
0x00071a4a: push ecx; push dword ptr [edx + 0x98]; call eax; 
0x000778f2: push ecx; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x40]; 
0x000821d1: push ecx; push dword ptr [esp + 0x3c]; call eax; 
0x0015ddf6: push ecx; push dword ptr [esp + 0x44]; push esi; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x0017312d: push ecx; push dword ptr [esp + 0xc]; push ebx; call dword ptr [ebp + 0x3c]; 
0x00094717: push ecx; push eax; call 0xb4de0; add esp, 0x1c; ret; 
0x0016363c: push ecx; push eax; call dword ptr [edx + 0xc]; 
0x0016019c: push ecx; push eax; call dword ptr [edx + 8]; 
0x0006a99f: push ecx; push eax; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x0014f4a0: push ecx; push eax; push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0015ddf5: push ecx; push ecx; push dword ptr [esp + 0x44]; push esi; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x00162e35: push ecx; push edi; call dword ptr [eax + 8]; 
0x0006c064: push ecx; push edi; push dword ptr [ebp - 0x8a0]; call edx; 
0x000818bc: push ecx; push edx; call 0x16df30; add esp, 0x1c; ret; 
0x0016eaa1: push ecx; push edx; call dword ptr [eax + 0x24]; 
0x0016eb41: push ecx; push edx; call dword ptr [eax + 0x28]; 
0x0016577a: push ecx; push edx; call dword ptr [eax]; 
0x0015b3bc: push ecx; push edx; mov dword ptr [esp + 0x14], edx; push dword ptr [esi]; call dword ptr [esi + 0x20]; 
0x000ced79: push ecx; push edx; push eax; call 0xcb230; add esp, 0x1c; ret; 
0x00165efe: push ecx; push esi; call dword ptr [eax]; 
0x0007cfc3: push ecx; push esi; call dword ptr [ebp + 0x40]; 
0x0008251e: push ecx; push esi; call eax; 
0x0017374f: push ecx; push esi; mov eax, dword ptr [esp + 0x10]; call dword ptr [eax + 0x40]; 
0x0004ab70: push ecx; ret; 
0x0016d19b: push ecx; retf 0xfff9; add esp, 0x1c; ret; 
0x00081ebc: push ecx; sbb byte ptr [ecx + 0x4c48310], cl; pop ebx; pop esi; ret; 
0x0011f8dd: push ecx; stc; call dword ptr [eax + 0x57]; 
0x0015d8eb: push ecx; sub ah, ch; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0008919b: push ecx; test al, 0xa; add byte ptr [ebx - 0x72f3db8c], cl; xchg byte ptr [ecx + eax*4 - 7], dl; call dword ptr [eax - 0x73]; 
0x0003009d: push ecx; xor byte ptr [ecx + 0x200c2], al; add byte ptr [ecx + 0x5e5b1814], cl; ret; 
0x00040882: push ecx; xor cl, bh; call dword ptr [eax - 0x18]; 
0x000ac262: push edi; adc al, 0x5f; pop esi; pop ebx; ret; 
0x000ad9f3: push edi; adc byte ptr [eax + 0x478d184f], cl; sbb dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x000ac2e3: push edi; adc byte ptr [eax + 0x5e5f184f], cl; pop ebx; ret; 
0x000ac3e3: push edi; adc byte ptr [eax + 0x5e5f204f], cl; pop ebx; ret; 
0x00083be9: push edi; adc byte ptr [ebp + 0x314174d2], al; idiv byte ptr [eax + 0xf0]; call dword ptr gs:[0x10]; 
0x000ad9d0: push edi; adc byte ptr [ebp + 0x5e5f1847], cl; pop ebx; ret; 
0x000adae0: push edi; adc byte ptr [ebp + 0x5e5f2047], cl; pop ebx; ret; 
0x000ada63: push edi; adc byte ptr [ecx + 0x478d184f], cl; sbb al, 0x5f; pop esi; pop ebx; ret; 
0x000ac323: push edi; adc byte ptr [ecx + 0x5e5f174f], cl; pop ebx; ret; 
0x000ac343: push edi; adc byte ptr [ecx + 0x5e5f184f], cl; pop ebx; ret; 
0x000ac2c0: push edi; adc byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000ada14: push edi; adc byte ptr [esi - 0x77], ah; dec edi; sbb byte ptr [ebp + 0x5e5f1a47], cl; pop ebx; ret; 
0x000ac304: push edi; adc byte ptr [esi - 0x77], ah; dec edi; sbb byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b6145: push edi; adc dword ptr [eax], eax; add byte ptr [ebx - 0x76aff33c], al; ret; 
0x000ac0a8: push edi; add al, 0x5f; pop esi; pop ebx; ret; 
0x000ac08a: push edi; add bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x000fc32a: push edi; add byte ptr [eax - 0x73], dl; sub edi, 0x48; stc; call dword ptr [eax - 0x18]; 
0x000ad75a: push edi; add cl, byte ptr [ebp + 0x5e5f0347]; pop ebx; ret; 
0x0016c80d: push edi; add eax, dword ptr [eax]; add byte ptr [ebx - 0x7472f714], al; clc; stc; call dword ptr [ecx - 0x77]; 
0x000ac0c8: push edi; add ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x000ad7c8: push edi; add ecx, dword ptr [ebp + 0x5e5f0747]; pop ebx; ret; 
0x00165ca3: push edi; add esp, 0x18; pop ebx; ret; 
0x00173d30: push edi; and al, 0x21; ret 0xc483; 
0x00159b09: push edi; call 0x10aec0; mov eax, dword ptr [ebp + 0x20]; mov dword ptr [esp], ebp; call dword ptr [eax + 0x10]; 
0x000da1de: push edi; call 0x16ed20; add esp, 0x10; mov eax, edi; call eax; 
0x0002373a: push edi; call 0x16ed20; mov dword ptr [esp], ebx; call edi; 
0x000918b0: push edi; call 0x380a0; mov eax, 0xaf; xor edx, edx; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0015ac82: push edi; call dword ptr [eax + 0x10]; 
0x0016472c: push edi; call dword ptr [eax + 0x14]; 
0x000e179f: push edi; call dword ptr [eax + 0x18]; 
0x00068b46: push edi; call dword ptr [eax + 0x1c]; 
0x0015ac3f: push edi; call dword ptr [eax + 8]; 
0x00162e18: push edi; call dword ptr [eax]; 
0x0007c1d8: push edi; call dword ptr [ebp + 0x1c]; 
0x0006870d: push edi; call dword ptr [ebx + 0x1c]; 
0x00077098: push edi; call dword ptr [ebx + 0x38]; 
0x0015a380: push edi; call dword ptr [ecx + 0x18]; 
0x0015a4d4: push edi; call dword ptr [edx + 0x18]; 
0x0007497b: push edi; call dword ptr [edx + 0x1c]; 
0x0007d691: push edi; call dword ptr [esi + 0x20]; 
0x00141013: push edi; call eax; 
0x000b6a6d: push edi; call esi; 
0x000ac421: push edi; call ptr [edi + 0x5e]; pop ebx; ret; 
0x0008a1e7: push edi; cli; jmp dword ptr [esi - 0x70]; 
0x000daa05: push edi; hlt; jmp dword ptr [ebp - 0x75]; 
0x000adac0: push edi; jge 0x5e69fa0e; pop ebx; ret; 
0x00127d71: push edi; loope 0x127d84; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc110; 
0x000ac3a0: push edi; maxps xmm3, xmmword ptr [esi + 0x5b]; ret; 
0x00138895: push edi; mov cl, 0xff; jmp dword ptr [esi - 0x70]; 
0x0015a7df: push edi; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x18]; 
0x00159e31: push edi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x0015fa53: push edi; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x14]; 
0x0012c1c0: push edi; or al, 0x39; ret 0x217e; 
0x0013090c: push edi; or al, 0x53; mov dword ptr [ebp - 0x44], edx; push 0; push 0x1000007; call eax; 
0x0006b69f: push edi; or al, 0x84; ror byte ptr [edi], cl; mov byte ptr [ebx + ebx], ah; add dh, dh; ret 0xf40; 
0x0006b679: push edi; or al, 0xf6; ret 0xf08; 
0x000ad7fc: push edi; or byte ptr [ebp + 0x5e5f0947], cl; pop ebx; ret; 
0x000ad81e: push edi; or byte ptr [ebp + 0x5e5f0a47], cl; pop ebx; ret; 
0x000ad85c: push edi; or byte ptr [ebp + 0x5e5f0c47], cl; pop ebx; ret; 
0x0007708f: push edi; or byte ptr [ecx - 0x2fd643bb], cl; push eax; push edx; push edi; call dword ptr [ebx + 0x38]; 
0x000ac0ec: push edi; or byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000ada80: push edi; or eax, 0x5f1d478d; pop esi; pop ebx; ret; 
0x00071eb0: push edi; out 0xfa, eax; jmp dword ptr [esi - 0x70]; 
0x000ac12c: push edi; pop es; pop edi; pop esi; pop ebx; ret; 
0x0011d74c: push edi; push 0; push ebx; call esi; 
0x0012d9f9: push edi; push 0x2000006; call dword ptr [esi + 0x14]; 
0x0011d760: push edi; push 1; push ebx; call esi; 
0x0011d773: push edi; push 2; push ebx; call esi; 
0x000ac380: push edi; push cs; pop edi; pop esi; pop ebx; ret; 
0x00071d19: push edi; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x000673bb: push edi; push dword ptr [ebp - 0x87c]; call edx; 
0x0006c065: push edi; push dword ptr [ebp - 0x8a0]; call edx; 
0x00130f6d: push edi; push dword ptr [ebp - 0xc0]; call edx; 
0x00159ee1: push edi; push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x34]; call eax; 
0x00024a99: push edi; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00072b76: push edi; push dword ptr [esp + 8]; push ebx; call dword ptr [ebp + 0x1c]; 
0x00158a50: push edi; push eax; call dword ptr [ecx + 8]; 
0x0015dda8: push edi; push eax; call dword ptr [edx + 8]; 
0x00082263: push edi; push eax; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x00115325: push edi; push ebp; mov ebx, dword ptr [edi]; mov ebp, dword ptr [edi + 8]; mov edi, dword ptr [edi + 4]; call dword ptr gs:[0x10]; 
0x001596ea: push edi; push ebx; call dword ptr [eax + 0x14]; 
0x00074c35: push edi; push ebx; call dword ptr [eax + 0x1c]; 
0x0007c689: push edi; push ebx; call dword ptr [esi + 0x3c]; 
0x0007d963: push edi; push ebx; call dword ptr [esi + 0x40]; 
0x000d729c: push edi; push ebx; call eax; 
0x0014f766: push edi; push ebx; call edx; 
0x00074ca6: push edi; push ebx; mov eax, dword ptr [esp + 0x10]; call dword ptr [eax + 0x1c]; 
0x00053859: push edi; push ebx; push dword ptr [ebp - 0x88]; call eax; 
0x00082100: push edi; push edx; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0007390b: push edi; push esi; call dword ptr [eax + 0x2c]; 
0x001734c0: push edi; push esi; call dword ptr [ebx + 0x40]; 
0x00162181: push edi; push esi; push eax; call dword ptr [edx]; 
0x0006eaa3: push edi; push esi; push ebp; call dword ptr [ebx + 0x1c]; 
0x0007374a: push edi; push esi; push ebx; call dword ptr [ebp + 0x24]; 
0x0007c4f7: push edi; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x00036dcb: push edi; ret 0; 
0x0007c627: push edi; sldt word ptr [ecx + 0x1ad9d6c6]; add byte ptr [ebx - 0x77], dl; ret; 
0x0012e6f4: push edi; stc; call dword ptr [eax + 0x57]; 
0x0011e689: push edi; stc; call dword ptr [eax + 0x6a]; 
0x0012e5c3: push edi; stc; call dword ptr [eax - 0x18]; 
0x0012eed9: push edi; stc; call dword ptr [eax - 0x75]; 
0x0012d518: push edi; stc; call dword ptr [eax - 1]; 
0x00131030: push edi; stc; call dword ptr [ebx + 0x50]; 
0x0012f317: push edi; stc; call dword ptr [edx + 0x50]; 
0x0002f8fe: push edi; stc; call dword ptr [esi - 1]; 
0x0013b7b8: push edi; stc; dec dword ptr [ecx - 0x48b7b]; call dword ptr [edi + 0x52]; 
0x000f7f20: push edi; std; clc; call dword ptr [ecx + 0x6a]; 
0x000a25c5: push edi; xlatb; cld; jmp dword ptr [esi - 0x70]; 
0x00161f14: push edx; adc byte ptr [ebx + 0x4508b03], cl; mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x001969cc: push edx; adc byte ptr [ecx], ch; ret 0xe183; 
0x00192326: push edx; adc byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x5073; 
0x000a5c7a: push edx; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x0003bc4d: push edx; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00107a06: push edx; add esp, 0x14; pop ebx; pop esi; ret; 
0x0019233b: push edx; and byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3e73; 
0x000818bd: push edx; call 0x16df30; add esp, 0x1c; ret; 
0x00087d9b: push edx; call 0x836d0; add esp, 0x10; xor eax, eax; add esp, 0xc; ret; 
0x0008e1cf: push edx; call 0x886f0; add esp, 0x20; add esp, 0xc; ret; 
0x0008ad8a: push edx; call 0x8a410; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x001593b1: push edx; call dword ptr [eax + 0x10]; 
0x00161fab: push edx; call dword ptr [eax + 0x14]; 
0x0016eaa2: push edx; call dword ptr [eax + 0x24]; 
0x0016eb42: push edx; call dword ptr [eax + 0x28]; 
0x00163c20: push edx; call dword ptr [eax + 0xc]; 
0x0016577b: push edx; call dword ptr [eax]; 
0x0012f512: push edx; call dword ptr [ebx + 0x14]; 
0x00073349: push edx; call dword ptr [ebx + 0x1c]; 
0x0016210a: push edx; call dword ptr [ecx + 0x10]; 
0x001585a0: push edx; call dword ptr [ecx + 0xc]; 
0x001585a0: push edx; call dword ptr [ecx + 0xc]; add esp, 0x10; add esp, 0xc; ret; 
0x0015f73f: push edx; call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x0013c420: push edx; call eax; 
0x000ff1bd: push edx; call ebx; 
0x0003a83a: push edx; call edi; 
0x0016d29a: push edx; cld; jmp dword ptr [esi - 0x70]; 
0x00165d9a: push edx; fdiv st(4), st(0); jmp dword ptr [esi - 0x70]; 
0x001926cb: push edx; fisub dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0019248b: push edx; fisub word ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0019275b: push edx; fldenv [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0019252b: push edx; frstor dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x001927fb: push edx; fsub dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x000b6a63: push edx; lea eax, [esp + 0x64]; mov dword ptr [esp + 0x34], edx; push eax; push edi; call esi; 
0x001313fe: push edx; lea edx, [ebx - 0xf8d20]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00078c7d: push edx; lea edx, [esi + 0x28]; push edx; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x00070284: push edx; lea edx, [esi + 0x28]; push edx; push 1; push esi; call eax; 
0x00078d5c: push edx; lea edx, [esi + 4]; push edx; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x001590cf: push edx; lea edx, [esi - 0xd0be0]; push edx; push 1; push ebx; call dword ptr [eax]; 
0x00159200: push edx; lea edx, [esi - 0xd0be0]; push edx; push 2; push ebx; call dword ptr [eax]; 
0x000b6868: push edx; lea edx, [esp + 0x34]; push edx; push dword ptr [edi + 8]; call ebx; 
0x001926e9: push edx; ljmp 0xf66:0xd1ef0f66; cmp byte ptr [edi], dl; ret 0x830f; 
0x0015b3bd: push edx; mov dword ptr [esp + 0x14], edx; push dword ptr [esi]; call dword ptr [esi + 0x20]; 
0x001592c5: push edx; mov dword ptr [esp + 0x2c], edx; call dword ptr [eax]; 
0x0007faf3: push edx; mov dword ptr [esp + 0x40], edx; call dword ptr [esi + 0xc]; 
0x0002160f: push edx; mov dword ptr [esp + 0xc], edx; push esi; push dword ptr [esp + 0x40]; call eax; 
0x000dfe2d: push edx; mov eax, 0x20; mov edx, 0x40; cmove eax, edx; ret; 
0x000b60fa: push edx; mov eax, dword ptr [0xc483fff6]; or al, 0x89; ret; 
0x00078c81: push edx; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x001646ea: push edx; mov edx, 0xc483ffeb; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00161a03: push edx; mov edx, dword ptr [eax + 0x20]; lea ebx, [esp + 0xe0]; push ebx; push eax; call dword ptr [edx + 8]; 
0x0013022b: push edx; or al, 0x89; push esi; sbb al, 1; ret 0x448b; 
0x000fbbf8: push edx; or byte ptr [ebx + 0x5e], bl; mov eax, edx; ret; 
0x00094b7c: push edx; or byte ptr [ecx], al; lds edi, ptr [ecx]; ret; 
0x00124f10: push edx; or byte ptr [edi], cl; xchg ebp, eax; ret; 
0x00149573: push edx; or byte ptr [esi - 0x77], ah; pop eax; inc cl; ljmp 0xc166:0xfe2c117; ret 0x6608; 
0x0007b150: push edx; pop eax; mov eax, dword ptr [edx + 0x10]; sub eax, dword ptr [edx + 0xc]; sar eax, 2; ret; 
0x0007b020: push edx; pop eax; mov eax, dword ptr [edx + 0x1c]; sub eax, dword ptr [edx + 0x18]; sar eax, 2; ret; 
0x00140e41: push edx; pop ebp; stc; call dword ptr [eax - 0x18]; 
0x001590d6: push edx; push 1; push ebx; call dword ptr [eax]; 
0x00070288: push edx; push 1; push esi; call eax; 
0x00159207: push edx; push 2; push ebx; call dword ptr [eax]; 
0x001626c1: push edx; push 4; push ebx; call dword ptr [eax]; 
0x0002c2fb: push edx; push dword ptr [eax + 0x1018]; call 0x11e250; add esp, 0x1c; ret; 
0x00066da1: push edx; push dword ptr [ebp - 0x87c]; call dword ptr [eax + 0x1c]; 
0x00066b54: push edx; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x0006cb9a: push edx; push dword ptr [ebp - 0x8a0]; call dword ptr [ebx + 0x1c]; 
0x000b67fe: push edx; push dword ptr [edi + 8]; call ebx; 
0x0010c429: push edx; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x00077be9: push edx; push dword ptr [esp + 0x18]; call ecx; 
0x001194e3: push edx; push dword ptr [esp + 0x1c]; call 0x58600; add esp, 0x10; add esp, 0xc; ret; 
0x0011bf59: push edx; push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x11b880; add esp, 0x1c; ret; 
0x00132059: push edx; push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x685c0; add esp, 0x1c; ret; 
0x00133049: push edx; push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x6d850; add esp, 0x1c; ret; 
0x001336d9: push edx; push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x79fb0; add esp, 0x1c; ret; 
0x00133739: push edx; push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x7a180; add esp, 0x1c; ret; 
0x00133799: push edx; push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x7a640; add esp, 0x1c; ret; 
0x00131eec: push edx; push dword ptr [esp + 0x2c]; call 0x73cc0; add esp, 0x2c; ret; 
0x00132f6a: push edx; push dword ptr [esp + 0x2c]; call 0x75350; add esp, 0x2c; ret; 
0x00131f7a: push edx; push dword ptr [esp + 0x2c]; call 0x7a3b0; add esp, 0x2c; ret; 
0x00108969: push edx; push eax; call 0x108c90; add esp, 0x10; add esp, 0xc; ret; 
0x0002475d: push edx; push eax; call 0x8bf40; add esp, 0x1c; ret; 
0x000ced7a: push edx; push eax; call 0xcb230; add esp, 0x1c; ret; 
0x000caec4: push edx; push eax; call 0xcd250; add esp, 0x1c; ret; 
0x000e0e7f: push edx; push eax; call dword ptr [ecx + 0x20]; 
0x001624fc: push edx; push eax; call edi; 
0x0017319c: push edx; push eax; push ebx; call dword ptr [ebp + 0x40]; 
0x0007c6eb: push edx; push eax; push ebx; call dword ptr [ecx + 0x40]; 
0x0007880c: push edx; push eax; push ebx; call dword ptr [edi + 0x40]; 
0x0007e870: push edx; push eax; push esi; call dword ptr [edi + 0x38]; 
0x00174258: push edx; push eax; push esi; call dword ptr [edi + 0x40]; 
0x001655f6: push edx; push ebp; push esi; call dword ptr [eax + 0xc]; 
0x0016562e: push edx; push ebp; push esi; call dword ptr [eax + 8]; 
0x0015970d: push edx; push ebx; call dword ptr [eax + 0x14]; 
0x0016629a: push edx; push ebx; call dword ptr [eax + 0x20]; 
0x0015f1ac: push edx; push ebx; call dword ptr [eax + 0x24]; 
0x0015b07d: push edx; push ebx; call dword ptr [eax + 4]; 
0x0015b03d: push edx; push ebx; call dword ptr [eax]; 
0x000d72d9: push edx; push ebx; call eax; 
0x00078ea0: push edx; push ebx; push esi; call eax; 
0x00166572: push edx; push ecx; call dword ptr [eax + 0x20]; 
0x001665a1: push edx; push ecx; call dword ptr [eax + 0x24]; 
0x00165b31: push edx; push ecx; call dword ptr [eax + 4]; 
0x00165b02: push edx; push ecx; call dword ptr [eax]; 
0x00082430: push edx; push ecx; call eax; 
0x00082101: push edx; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x00094716: push edx; push ecx; push eax; call 0xb4de0; add esp, 0x1c; ret; 
0x0008251d: push edx; push ecx; push esi; call eax; 
0x00077097: push edx; push edi; call dword ptr [ebx + 0x38]; 
0x00141012: push edx; push edi; call eax; 
0x0007ceab: push edx; push esi; call dword ptr [eax + 0x48]; 
0x00165614: push edx; push esi; call dword ptr [eax + 0xc]; 
0x0015db79: push edx; push esi; call dword ptr [eax + 4]; 
0x0016564c: push edx; push esi; call dword ptr [eax + 8]; 
0x001410de: push edx; push esi; call eax; 
0x0007d211: push edx; push esi; call ecx; 
0x0006fc49: push edx; push esi; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x0006c504: push edx; push esi; push dword ptr [ebp - 0x8a0]; mov dword ptr [ebp - 0x88c], edx; call dword ptr [ebx + 0x1c]; 
0x00192b68: push edx; ret 0xc2bb; 
0x00192ac8: push edx; ret; 
0x00131405: push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0007c359: push edx; sbb al, 0x89; ret 0x1b8; 
0x000f234b: push edx; sbb al, 0xf6; ret 0xf08; 
0x00091c98: push edx; sbb byte ptr [ebp - 0x762d8b2e], al; ret; 
0x0005d99a: push edx; sbb eax, 0xc4830002; adc byte ptr [ecx - 0x59f7b], cl; inc dword ptr [ebx - 0x7af00008]; ret; 
0x00192b8b: push edx; shl byte ptr [esi + 0xf], cl; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x00192c3b: push edx; shl dword ptr [esi + 0xf], 1; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x00192aeb: push edx; shl dword ptr [esi + 0xf], cl; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0011f6dc: push edx; stc; call dword ptr [eax + 0x57]; 
0x0011f997: push edx; stc; call dword ptr [ecx + 0x51]; 
0x0011f9b1: push edx; stc; call dword ptr [edx + 0x52]; 
0x00120776: push edx; stc; dec dword ptr [eax - 0x6c72f7aa]; ret 0xf952; 
0x0007a79c: push edx; sti; dec dword ptr [ebp - 0x681f77d]; call dword ptr [eax - 0x73]; 
0x0007f97d: push edx; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x00133895: push edx; sub esp, 0xc; xor ebx, ebx; mov ecx, esp; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x00192350: push edx; xor byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x2c73; 
0x000f3155: push es; adc byte ptr [edx + ebx*8 - 0x75], dh; pop eax; add al, 0xf7; ret; 
0x000217b7: push es; adc eax, 0x46c68100; mov byte ptr [eax], ah; add byte ptr [ebx - 0x77], dl; ret; 
0x00021756: push es; adc eax, 0x88a70500; and byte ptr [eax], al; lea eax, [eax - 0x6921c]; ret; 
0x00021736: push es; adc eax, 0x88c70500; and byte ptr [eax], al; lea eax, [eax - 0x69214]; ret; 
0x0009471b: push es; add al, byte ptr [eax]; add esp, 0x1c; ret; 
0x0013eb3c: push es; add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; pop ebx; ret; 
0x0010f6d1: push es; add byte ptr [eax], al; add byte ptr [ecx - 0x277c9912], cl; jmp dword ptr [esi - 0x77]; 
0x000ec76d: push es; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x4e0f; 
0x00029575: push es; add byte ptr [eax], al; add cl, ch; ret 0xfffe; 
0x00026814: push es; add byte ptr [eax], al; add cl, ch; ret; 
0x00092ca3: push es; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0003c911: push es; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0008da3a: push es; add byte ptr [eax], al; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x0002d8cd: push es; add byte ptr [eax], al; pop ebx; ret; 
0x000a586f: push es; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000abe3a: push es; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0016139c: push es; add byte ptr [eax], al; sub esp, 0xc; mov eax, dword ptr [ebp + 0x3c]; push ebx; call dword ptr [eax + 0x10]; 
0x000c502c: push es; add byte ptr [ebp - 0x667437b], cl; call dword ptr [eax - 0x73]; 
0x00146bf1: push es; add byte ptr [ebx + 0x5e5b04c4], al; pop edi; pop ebp; ret; 
0x000c8d19: push es; add byte ptr [ebx - 0x364b73], cl; dec dword ptr [ebp - 0x667377f]; call dword ptr [eax - 0x73]; 
0x000a208a: push es; add byte ptr [ecx + 0x5bd08902], cl; pop esi; ret; 
0x000a215a: push es; add byte ptr [ecx + 0x6428d02], cl; pop ebx; pop esi; ret; 
0x00197a4b: push es; add byte ptr [edi], cl; test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x00075d91: push es; add dh, byte ptr [ebp + 0x63]; sub esp, 0xc; mov eax, dword ptr [eax + 0x88]; push esi; call dword ptr [eax + 0x34]; 
0x00082a69: push es; add esp, 0x14; pop ebx; pop esi; ret; 
0x00111aff: push es; add esp, 0x14; pop esi; pop edi; ret; 
0x00038830: push es; add esp, 0x24; pop ebx; pop esi; ret; 
0x0011a3d1: push es; add esp, 0x34; pop ebx; pop esi; ret; 
0x00166d55: push es; add esp, 0x54; pop ebx; pop esi; ret; 
0x0007f905: push es; add esp, 4; pop ebx; pop esi; ret; 
0x0014c809: push es; add esp, 8; pop ebx; ret; 
0x00155f39: push es; call 0x152d90; add esp, 0x1c; ret; 
0x00155f58: push es; call 0x152e60; add esp, 0x1c; ret; 
0x0004a086: push es; cmp byte ptr [eax - 1], 0x2f; jne 0x4a080; add esp, 8; pop ebx; ret; 
0x00034d30: push es; idiv edi; dec dword ptr [ebx - 0x7cd3db8c]; ret 0xc702; 
0x0010fac2: push es; int1; jmp dword ptr [ebp - 0x75]; 
0x001968f2: push es; jb 0x196970; lea eax, [edi + 5]; pop edi; ret; 
0x00197932: push es; jb 0x1979b0; lea eax, [eax + 5]; pop edi; ret; 
0x00127046: push es; jbe 0x127010; mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x00196fc2: push es; jl 0x197040; lea eax, [ecx + 6]; ret; 
0x000a5c13: push es; jne 0xa5ed0; pop edi; pop ebx; ret; 
0x000a6013: push es; jne 0xa5ed1; pop ebx; ret; 
0x000aa494: push es; jne 0xaa331; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000abc21: push es; jne 0xac520; pop edi; pop esi; pop ebx; ret; 
0x000ad294: push es; jne 0xadc50; pop edi; pop esi; pop ebx; ret; 
0x000b3ff9: push es; lea eax, [ecx + eax + 0x30]; ret; 
0x000ad8a1: push es; lea eax, [edi + 0xe]; pop edi; pop esi; pop ebx; ret; 
0x000b3d29: push es; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000a8251: push es; lea eax, [edx + 0xd]; pop edi; ret; 
0x000a83b1: push es; lea eax, [edx + 0xd]; ret; 
0x000a5c10: push es; lea ecx, [edx + 6]; jne 0xa5ed0; pop edi; pop ebx; ret; 
0x000a6010: push es; lea ecx, [edx + 6]; jne 0xa5ed1; pop ebx; ret; 
0x000afde3: push es; mov byte ptr [eax + 8], dh; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00189ab8: push es; mov byte ptr [edi], al; pop esi; pop edi; pop ebx; ret; 
0x00076472: push es; mov dword ptr [ebx + 0x30], esi; add esp, 4; pop ebx; pop esi; ret; 
0x0003ad9a: push es; mov dword ptr [edx], 0; add esp, 4; pop ebx; pop esi; ret; 
0x001732d8: push es; mov eax, 0xffffffff; pop ebx; pop esi; pop edi; ret; 
0x0015bce6: push es; mov eax, dword ptr [0xc4830000]; adc byte ptr [ebp - 0x7ce58b40], al; in al, dx; add al, 0x83; ret; 
0x000b3314: push es; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afe91: push es; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0002f7f9: push es; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000b26b4: push es; mov eax, edi; pop ebx; pop edi; ret; 
0x000a3e61: push es; mov eax, edi; pop edi; ret; 
0x000a3fc1: push es; mov eax, edx; ret; 
0x000b60c9: push es; mov eax, esi; pop ebx; pop esi; ret; 
0x0018f027: push es; mov ecx, dword ptr [ebx + ecx*4 - 0x86b80]; mov eax, dword ptr [ebx + eax*4 - 0x86b80]; sub eax, ecx; pop ebx; ret; 
0x00094236: push es; mov edi, 0x448bfff8; and al, 0x1c; mov dword ptr [esp], eax; call esi; 
0x000afed3: push es; movdqu xmmword ptr [eax], xmm0; mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b3346: push es; movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afec3: push es; movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ac1c3: push es; movdqu xmmword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b3246: push es; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afdd3: push es; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000afe88: push es; movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ac0d3: push es; movlpd qword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000acb1c: push es; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000acc7c: push es; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b26af: push es; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000ab4bc: push es; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000ab61c: push es; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000a8248: push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; pop edi; ret; 
0x000a83a8: push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000a3e58: push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x000a3fb8: push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x0018c97c: push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; pop ebp; ret; 
0x0018b163: push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x00120a14: push es; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x001052b9: push es; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000a2160: push es; pop ebx; pop esi; ret; 
0x0003b8f7: push es; pop ebx; ret; 
0x000ac191: push es; pop edi; pop esi; pop ebx; ret; 
0x000a81bc: push es; pop edi; ret; 
0x00192e06: push es; pop ss; bnd call dword ptr [ebx - 0x18]; 
0x00192e06: push es; pop ss; bnd call dword ptr [ebx - 0x18]; jmp 0x82192c00; ret; 
0x00161fbd: push es; push eax; call dword ptr [edx + 0x14]; 
0x00079431: push es; ret; 
0x000fb408: push es; setne al; movzx eax, al; ret; 
0x0018c980: push es; sub eax, ecx; pop ebp; ret; 
0x0018b167: push es; sub eax, ecx; ret; 
0x0007488c: push es; xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebp - 0x1c5f79], cl; jmp ptr [ecx]; ret 0x4d89; 
0x00070dd0: push es; xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebp - 0x1c5f79], cl; jmp ptr [ecx]; ret 0xd989; 
0x0007f969: push es; xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebp - 0x1c5f7d], cl; jmp ptr [ecx]; ret 0xf989; 
0x00080178: push es; xor byte ptr [ebp + 0x2c], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x001204b7: push esi; adc byte ptr [ebx + 0x468801e0], al; or byte ptr [eax - 0x7c72ebba], cl; ret; 
0x0002c1f2: push esi; adc byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x0011fc99: push esi; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000983d6: push esi; adc byte ptr [ecx], bh; ret 0x3a73; 
0x000ac084: push esi; add ah, byte ptr [esi - 0x77]; js 0x5e69c2e5; pop ebx; ret; 
0x00078d5e: push esi; add al, 0x52; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x000ac0a3: push esi; add al, 0x89; js 0x5e69c503; pop ebx; ret; 
0x000ac0b4: push esi; add al, 0x89; pcmpgtd mm1, qword ptr [ecx + 0x5e5f0457]; pop ebx; ret; 
0x0011fab8: push esi; add al, 0x89; ret 0xe8c1; 
0x0011fe7f: push esi; add al, 0x8d; xchg ebx, eax; ret 0xf94d; 
0x000fd05e: push esi; add al, 0xf7; ret 0xfffd; 
0x0009b3a9: push esi; add dword ptr [ecx + eax - 0x72fc0000], 0xe7868092; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x0009db99: push esi; add dword ptr [ecx + eax - 0x72fc0000], 0xe8a1d092; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x0009c0d9: push esi; add dword ptr [ecx + eax - 0x72ff0000], 0xf509a092; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x00131bf9: push esi; add dword ptr [ecx + eax - 0x72ff0000], 0xf50fa092; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x0009bff9: push esi; add dword ptr [ecx + eax - 0x72ff0000], 0xf50fc092; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000b3226: push esi; add ecx, dword ptr [ecx + 0x3508908]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afdc3: push esi; add ecx, dword ptr [ecx + 0x3508908]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ac0c3: push esi; add ecx, dword ptr [ecx + 0x357890f]; pop edi; pop esi; pop ebx; ret; 
0x0010bb24: push esi; add esp, 0xe4; pop ebx; pop esi; ret; 
0x0007e869: push esi; and byte ptr [ebx - 0x3dd6fb14], al; push edx; push eax; push esi; call dword ptr [edi + 0x38]; 
0x000708c4: push esi; and byte ptr [ebx - 0x74c3dbac], cl; adc bh, byte ptr [ecx]; ret 0x420f; 
0x0015867a: push esi; call 0x15a0a0; mov eax, dword ptr [esp + 0x18]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x001a0627: push esi; call 0x16ed20; add ebp, dword ptr [edi + 8]; mov dword ptr [esp], ebp; call esi; 
0x0013c9df: push esi; call 0x16ed20; mov dword ptr [esp], ebp; call esi; 
0x00022807: push esi; call 0x16ed20; mov dword ptr [esp], ebx; call esi; 
0x0002df4d: push esi; call 0x20140; add esp, 0x14; pop ebx; pop esi; ret; 
0x00130706: push esi; call 0x6813715f; add eax, dword ptr [eax]; add byte ptr [ecx], al; mov dword ptr [ebp - 0x44], edx; call eax; 
0x00158931: push esi; call dword ptr [eax + 0x10]; 
0x0015894f: push esi; call dword ptr [eax + 0x14]; 
0x000748ae: push esi; call dword ptr [eax + 0x1c]; 
0x000f8ebb: push esi; call dword ptr [eax + 0x20]; 
0x0007390c: push esi; call dword ptr [eax + 0x2c]; 
0x0007aba0: push esi; call dword ptr [eax + 0x30]; 
0x00075d9e: push esi; call dword ptr [eax + 0x34]; 
0x0007ceac: push esi; call dword ptr [eax + 0x48]; 
0x001589fe: push esi; call dword ptr [eax + 0xc]; 
0x001588ea: push esi; call dword ptr [eax + 4]; 
0x00165630: push esi; call dword ptr [eax + 8]; 
0x00165eff: push esi; call dword ptr [eax]; 
0x0007fd26: push esi; call dword ptr [ebp + 0x30]; 
0x0007cfc4: push esi; call dword ptr [ebp + 0x40]; 
0x00173f32: push esi; call dword ptr [ebp + 0x44]; 
0x0007dbbc: push esi; call dword ptr [ebp + 0xc]; 
0x0007a29f: push esi; call dword ptr [ebp + 8]; 
0x00071d1d: push esi; call dword ptr [ebx + 0x1c]; 
0x00073a99: push esi; call dword ptr [ebx + 0x2c]; 
0x00071488: push esi; call dword ptr [ebx + 0x30]; 
0x00073b51: push esi; call dword ptr [ebx + 0x34]; 
0x0007d784: push esi; call dword ptr [ebx + 0x38]; 
0x0007d2c4: push esi; call dword ptr [ebx + 0x40]; 
0x00070df1: push esi; call dword ptr [ebx + 0x48]; 
0x00159600: push esi; call dword ptr [ebx + 0xc]; 
0x00070fca: push esi; call dword ptr [ebx + 8]; 
0x0007634e: push esi; call dword ptr [edi + 0x18]; 
0x0007f981: push esi; call dword ptr [edi + 0x34]; 
0x0007e872: push esi; call dword ptr [edi + 0x38]; 
0x00077a74: push esi; call dword ptr [edi + 0x40]; 
0x00174077: push esi; call dword ptr [edi + 0x44]; 
0x0007c803: push esi; call dword ptr [edi + 0x48]; 
0x0007d1bc: push esi; call dword ptr [edx + 0x40]; 
0x0002df12: push esi; call eax; 
0x000b70cd: push esi; call ebx; 
0x0007d212: push esi; call ecx; 
0x00038dd5: push esi; call edi; 
0x00123729: push esi; call edx; 
0x00123729: push esi; call edx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x0009c04f: push esi; cmc; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x0009b8d9: push esi; dec dword ptr [ebx + 0x3904244c]; ret; 
0x000eb42b: push esi; dec eax; stc; call dword ptr [eax + 0x55]; 
0x001951e6: push esi; imul byte ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x00195177: push esi; imul dword ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x0009ba19: push esi; inc dword ptr [ecx]; fnstcw word ptr [ecx]; ret 0x3376; 
0x001500e4: push esi; inc ebx; stc; call dword ptr [eax + 0x52]; 
0x0009af62: push esi; inc ecx; jge 0x9af69; lea edx, [edx - 0x17c220]; cmovne eax, edx; ret; 
0x0009b072: push esi; inc ecx; jge 0x9b079; lea edx, [edx - 0x187850]; cmovne eax, edx; ret; 
0x0009b422: push esi; inc ecx; jge 0x9b429; lea edx, [edx - 0x179f20]; cmovne eax, edx; ret; 
0x0009b4b2: push esi; inc ecx; jge 0x9b4b9; lea edx, [edx - 0x186000]; cmovne eax, edx; ret; 
0x0009c182: push esi; inc ecx; jge 0x9c189; lea edx, [edx - 0x183480]; cmovne eax, edx; ret; 
0x0009c1d2: push esi; inc ecx; jge 0x9c1d9; lea edx, [edx - 0x181c10]; cmovne eax, edx; ret; 
0x000b5abf: push esi; inc ecx; jge 0xb5ac6; cmovne eax, edx; ret; 
0x0009b0af: push esi; inc ecx; jle 0x9b0c4; cmovne eax, edx; ret; 
0x0009b52f: push esi; inc ecx; jle 0x9b544; cmovne eax, edx; ret; 
0x0009b65f: push esi; inc ecx; jle 0x9b674; cmovne eax, edx; ret; 
0x0016aaf3: push esi; jmp 0x16aaf5; add esp, 0x14; pop ebx; pop esi; ret; 
0x000b62fd: push esi; lea eax, [esp + 0x40]; push eax; push dword ptr [edi]; call ebx; 
0x001309a6: push esi; mov dword ptr [ebp - 0x44], eax; push 0; push 0x1000006; call edx; 
0x00130858: push esi; mov dword ptr [ebp - 0x44], eax; push dword ptr [ebp - 0xbc]; push 0; call edx; 
0x00130f69: push esi; mov dword ptr [ebp - 0x44], eax; push edi; push dword ptr [ebp - 0xc0]; call edx; 
0x00130dd6: push esi; mov dword ptr [ebp - 0x44], edx; push edi; push ebx; call eax; 
0x00173750: push esi; mov eax, dword ptr [esp + 0x10]; call dword ptr [eax + 0x40]; 
0x0015f873: push esi; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x0006fc4a: push esi; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x0006a7bb: push esi; mov eax, dword ptr [esp + 0x1c]; call dword ptr [eax + 0x1c]; 
0x000392a8: push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0015ddfb: push esi; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x0015dbac: push esi; mov eax, dword ptr [esp + 0x40]; call eax; 
0x00159b5b: push esi; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x001302bc: push esi; mov ebx, dword ptr [esp + 0x18]; je 0x1302d0; add esp, 8; pop ebx; ret; 
0x001434ac: push esi; mov edx, dword ptr [esp + 0x20]; call edx; 
0x00123702: push esi; mov esi, dword ptr [esp + 0x18]; mov ebx, ecx; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x1b3; int 0x80; 
0x0012677a: push esi; mov esi, edx; push ebx; mov ebx, 0x16; mov edi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000cc532: push esi; or al, 0x29; ret 0x428d; 
0x0003ac18: push esi; or al, 0x83; les esi, ptr [ebx + ebx*2]; pop esi; ret 4; 
0x0012e171: push esi; or al, 0xf6; ret 0x7504; 
0x000abcc6: push esi; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000f2273: push esi; or byte ptr [ebp + 0x390474d2], al; ret 0x2b75; 
0x000eadd7: push esi; or byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x0007d703: push esi; or byte ptr [ecx], ch; ret 0xfa39; 
0x000ad2f6: push esi; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b0057: push esi; or eax, 0x7f0ff3; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000414b6: push esi; out 0xff, eax; dec dword ptr [ebx - 0x72d3db84]; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x00058cf6: push esi; pop es; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0013bfb5: push esi; pop esp; stc; call dword ptr [edx + 0x50]; 
0x00162e15: push esi; push 3; push edi; call dword ptr [eax]; 
0x0006bacc: push esi; push dword ptr [ebp - 0x8a0]; call dword ptr [eax + 0x1c]; 
0x0006c392: push esi; push dword ptr [ebp - 0x8a0]; mov dword ptr [ebp - 0x88c], ecx; call dword ptr [ebx + 0x1c]; 
0x0006c505: push esi; push dword ptr [ebp - 0x8a0]; mov dword ptr [ebp - 0x88c], edx; call dword ptr [ebx + 0x1c]; 
0x0009a466: push esi; push dword ptr [ebx + 0x24]; call eax; 
0x0015b8c1: push esi; push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x001581a6: push esi; push dword ptr [esp + 0x14]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x00038e14: push esi; push dword ptr [esp + 0x1c]; call edi; 
0x00082645: push esi; push dword ptr [esp + 0x20]; push edx; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0007c1d3: push esi; push dword ptr [esp + 0x28]; push edi; call dword ptr [ebp + 0x1c]; 
0x00068708: push esi; push dword ptr [esp + 0x28]; push edi; call dword ptr [ebx + 0x1c]; 
0x00038de7: push esi; push dword ptr [esp + 0x30]; call edi; 
0x00074976: push esi; push dword ptr [esp + 0x38]; push edi; call dword ptr [edx + 0x1c]; 
0x00021677: push esi; push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x00021614: push esi; push dword ptr [esp + 0x40]; call eax; 
0x00158902: push esi; push eax; call dword ptr [edx + 4]; 
0x00162182: push esi; push eax; call dword ptr [edx]; 
0x0015b182: push esi; push eax; push dword ptr [ebx]; call dword ptr [ebx + 8]; 
0x000658de: push esi; push eax; push ebp; mov eax, dword ptr [esp + 0x1c]; call dword ptr [eax + 0x1c]; 
0x0006eaa4: push esi; push ebp; call dword ptr [ebx + 0x1c]; 
0x0006dd6d: push esi; push ebp; call dword ptr [edi + 0x1c]; 
0x0007c355: push esi; push ebp; push edi; call dword ptr [edx + 0x1c]; 
0x0015f196: push esi; push ebx; call dword ptr [eax + 0x24]; 
0x0007374b: push esi; push ebx; call dword ptr [ebp + 0x24]; 
0x0007c4f8: push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x0012c951: push esi; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x00116a67: push esi; push ebx; mov ebx, edx; mov ecx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x001217ca: push esi; push ebx; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00159821: push esi; push ecx; push 5; push ebx; call dword ptr [eax]; 
0x0006a99e: push esi; push ecx; push eax; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x00159ee0: push esi; push edi; push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x34]; call eax; 
0x00082262: push esi; push edi; push eax; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x000820ff: push esi; push edi; push edx; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0012f511: push esi; push edx; call dword ptr [ebx + 0x14]; 
0x0006cb99: push esi; push edx; push dword ptr [ebp - 0x8a0]; call dword ptr [ebx + 0x1c]; 
0x00159edf: push esi; push esi; push edi; push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x34]; call eax; 
0x00197845: push esi; ret 0xf02; 
0x00052874: push esi; ret 0xf40; 
0x0016f78f: push esi; ret 0xf60; 
0x00061c0d: push esi; ret; 
0x00131300: push esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0013022e: push esi; sbb al, 1; ret 0x448b; 
0x000f6dbf: push esi; sbb byte ptr [ebx - 0x4976c74], cl; clc; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x0007a5e7: push esi; sbb byte ptr [ecx - 0x3b7cf3ad], cl; add al, 0x5b; pop esi; ret; 
0x00129bc0: push esi; stc; call dword ptr [eax + 0x53]; 
0x00127228: push esi; stc; call dword ptr [eax + 0x57]; 
0x0011e9d6: push esi; stc; call dword ptr [eax + 0x6a]; 
0x00129f3c: push esi; stc; call dword ptr [eax - 0x18]; 
0x0012a0cf: push esi; stc; call dword ptr [eax - 0x73]; 
0x0012c4bb: push esi; stc; call dword ptr [eax - 1]; 
0x0012cc93: push esi; stc; call dword ptr [ebp - 1]; 
0x0012c46e: push esi; stc; call dword ptr [edx + 0x50]; 
0x0015b3a4: push esi; sub al, 0x89; ret; 
0x0015b3d4: push esi; sub al, 1; ret 0x5689; 
0x00078c7f: push esi; sub byte ptr [edx - 0x75], dl; inc esp; and al, 0x34; push eax; call ebx; 
0x001951a6: push esi; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x0007a299: push esi; sub esp, 8; push 0; push esi; call dword ptr [ebp + 8]; 
0x0015b3d9: push esi; xor byte ptr [ebx + 0x568b3046], cl; sub al, 0x89; ret; 
0x0008becf: push esi; xor esi, esi; push ebx; mov ebx, dword ptr [esp + 0x10]; mov dword ptr [ebx], 0; call dword ptr gs:[0x10]; 
0x0008fcc2: push esp; add al, byte ptr [eax]; add byte ptr [ebp - 0x19a37f7d], cl; jmp dword ptr [ebp - 0x5d]; 
0x0011633b: push esp; add byte ptr [eax], al; mov eax, edi; call dword ptr gs:[0x10]; 
0x0011665a: push esp; add byte ptr [eax], al; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011668b: push esp; add byte ptr [eax], al; mov edx, 1; mov edi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0011661e: push esp; add byte ptr [eax], al; push dword ptr [esp + 0x1c]; call 0x117200; add esp, 0x1c; ret; 
0x000df764: push esp; add esp, 0x24; pop ebx; pop esi; ret; 
0x00158831: push esp; and al, 0x10; add esp, 4; pop ebx; pop esi; jmp eax; 
0x001254fa: push esp; and al, 0x10; mov dword ptr [esp + 0x18], eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x001254ac: push esp; and al, 0x10; mov dword ptr [esp + 0x18], eax; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x00125443: push esp; and al, 0x10; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x000818db: push esp; and al, 0x10; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x000819d7: push esp; and al, 0x10; mov eax, dword ptr [eax + 4]; add esp, 0xc; jmp eax; 
0x0016659b: push esp; and al, 0x10; mov eax, dword ptr [ecx + 4]; push edx; push ecx; call dword ptr [eax + 0x24]; 
0x00165b2b: push esp; and al, 0x10; mov eax, dword ptr [ecx + 4]; push edx; push ecx; call dword ptr [eax + 4]; 
0x0008d77e: push esp; and al, 0x10; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x001096ec: push esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00123f26: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00123b26: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x00109bc6: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x0010c296: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x0010c1d6: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x0010afe6: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x001152f6: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x0010c206: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x55; call dword ptr gs:[0x10]; 
0x00117026: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x00120fc6: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x00123bd6: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x001238d6: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x0011c526: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x001239c6: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x001239f6: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x000fafe6: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x00123c46: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000de876: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x0010bbe6: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x0010bbb6: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000df6b6: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000df6e6: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x0010bb86: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x0011c656: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x0011c626: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x0011f3f6: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x0011f456: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x0011f326: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x0015a76c: push esp; and al, 0x10; pop ebx; pop esi; jmp eax; 
0x0008fbb1: push esp; and al, 0x10; push dword ptr [eax + 4]; call dword ptr [eax]; 
0x001662ad: push esp; and al, 0x10; push edx; push ebx; call dword ptr [eax + 0x20]; 
0x0015f1a9: push esp; and al, 0x10; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x0016597f: push esp; and al, 0x10; push edx; push ebx; call dword ptr [eax + 4]; 
0x0016591c: push esp; and al, 0x10; push edx; push ebx; call dword ptr [eax]; 
0x0016656f: push esp; and al, 0x10; push edx; push ecx; call dword ptr [eax + 0x20]; 
0x00165c17: push esp; and al, 0x10; push edx; push ecx; call dword ptr [eax + 4]; 
0x00165aff: push esp; and al, 0x10; push edx; push ecx; call dword ptr [eax]; 
0x0014100f: push esp; and al, 0x10; push edx; push edi; call eax; 
0x001410db: push esp; and al, 0x10; push edx; push esi; call eax; 
0x000cc4ce: push esp; and al, 0x10; sbb ch, byte ptr [ecx]; ret; 
0x000305dc: push esp; and al, 0x14; add esp, 0xc; mov eax, edx; ret; 
0x00087ece: push esp; and al, 0x14; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x0017802f: push esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x000932fb: push esp; and al, 0x14; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0010c23b: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x00123ceb: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x001120fb: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xbb; call dword ptr gs:[0x10]; 
0x0011f3cb: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x0011f42b: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x0011f2fb: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x0011212b: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xef; call dword ptr gs:[0x10]; 
0x00123a8b: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x00116ace: push esp; and al, 0x14; mov esi, ebx; call dword ptr gs:[0x10]; 
0x0015b3bf: push esp; and al, 0x14; push dword ptr [esi]; call dword ptr [esi + 0x20]; 
0x000e0e7c: push esp; and al, 0x14; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x0015970a: push esp; and al, 0x14; push edx; push ebx; call dword ptr [eax + 0x14]; 
0x00125c46: push esp; and al, 0x18; call dword ptr gs:[0x10]; 
0x00122400: push esp; and al, 0x18; cmove esi, ebx; lea edx, [esp + 0xc]; mov ebx, dword ptr [esp + 0x50]; call dword ptr gs:[0x10]; 
0x00121fef: push esp; and al, 0x18; cmp esi, -1; je 0x122010; mov eax, 0x17c; call dword ptr gs:[0x10]; 
0x000f82bc: push esp; and al, 0x18; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x000939a9: push esp; and al, 0x18; mov eax, 0x103; mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00109426: push esp; and al, 0x18; mov eax, 0x10c; call dword ptr gs:[0x10]; 
0x00109596: push esp; and al, 0x18; mov eax, 0x10d; call dword ptr gs:[0x10]; 
0x00109383: push esp; and al, 0x18; mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x000fb301: push esp; and al, 0x18; mov ebx, dword ptr [esp + 0x10]; cmp esi, ecx; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x00058a6c: push esp; and al, 0x18; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0011c690: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x0010bc20: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0010c170: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x00123e10: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x00123c10: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x00123af0: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x00123cb0: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0011f530: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x0011f4c0: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x0011f390: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x0017a334: push esp; and al, 0x18; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x001260e4: push esp; and al, 0x18; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x001169ed: push esp; and al, 0x18; mov esi, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00166f7d: push esp; and al, 0x18; test edx, edx; jne 0x166f90; add esp, 0xc; ret; 
0x00166fcd: push esp; and al, 0x18; test edx, edx; jne 0x166fe0; add esp, 0xc; ret; 
0x0012318e: push esp; and al, 0x1c; mov eax, 0x12c; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x000ceb5d: push esp; and al, 0x1c; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x00159307: push esp; and al, 0x1c; mov eax, dword ptr [edx + 4]; mov dword ptr [esp], edx; call dword ptr [eax + 0x10]; 
0x0010529d: push esp; and al, 0x1c; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x0013362f: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x133645; add esp, 0x2c; ret; 
0x0013369f: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x1336b5; add esp, 0x2c; ret; 
0x0013aae0: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x13aaf0; add esp, 0x2c; ret; 
0x0003ad56: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x3ad66; add esp, 0x2c; ret; 
0x0003ae86: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x3ae96; add esp, 0x2c; ret; 
0x000821af: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x821dd; add esp, 0x2c; ret; 
0x00082317: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x8234b; add esp, 0x2c; ret; 
0x000864f8: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x86508; add esp, 0x2c; ret; 
0x0008ae94: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x8aea4; add esp, 0x2c; ret; 
0x0008c1f8: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x8c208; add esp, 0x2c; ret; 
0x0008c658: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x8c668; add esp, 0x2c; ret; 
0x0008cb44: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x8cb54; add esp, 0x2c; ret; 
0x0008cf94: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x8cfa4; add esp, 0x2c; ret; 
0x0009004d: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x90077; add esp, 0x2c; ret; 
0x000902d9: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x90307; add esp, 0x2c; ret; 
0x00123883: push esp; and al, 0x1c; test esi, 2; mov ebx, dword ptr [esp + 0x14]; cmovne edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x001434ae: push esp; and al, 0x20; call edx; 
0x001657ad: push esp; and al, 0x20; mov eax, dword ptr [eax + 4]; add esp, 0x18; pop ebx; jmp eax; 
0x0011c1a5: push esp; and al, 0x20; mov ecx, dword ptr [esp + 0x1c]; mov ebx, dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x001624f9: push esp; and al, 0x20; push edx; push eax; call edi; 
0x000fb0e5: push esp; and al, 0x24; mov ebx, dword ptr [esp + 0x20]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0003bc3d: push esp; and al, 0x28; call dword ptr gs:[0x10]; 
0x00121ea8: push esp; and al, 0x28; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x0003bc68: push esp; and al, 0x28; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x0011c5a8: push esp; and al, 0x28; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x001172b8: push esp; and al, 0x28; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x00117388: push esp; and al, 0x28; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x001116f8: push esp; and al, 0x28; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x0010a1c8: push esp; and al, 0x28; mov eax, 3; call dword ptr gs:[0x10]; 
0x0010a298: push esp; and al, 0x28; mov eax, 4; call dword ptr gs:[0x10]; 
0x001636a6: push esp; and al, 0x28; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x0007cea8: push esp; and al, 0x28; push edx; push esi; call dword ptr [eax + 0x48]; 
0x001592c7: push esp; and al, 0x2c; call dword ptr [eax]; 
0x00093b10: push esp; and al, 0x2c; mov dword ptr [esp + 0x34], 4; call dword ptr gs:[0x10]; 
0x00108ec9: push esp; and al, 0x2c; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x00119578: push esp; and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0x119597; add esp, 0x3c; ret; 
0x0017a3b2: push esp; and al, 0x34; lea edi, [esp + 8]; mov eax, 0x75; mov ebx, 3; call dword ptr gs:[0x10]; 
0x000ce9c1: push esp; and al, 0x34; mov ebx, dword ptr [esp + 0x30]; lea ecx, [esp + 0xc]; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x00122135: push esp; and al, 0x34; mov ebx, dword ptr [esp + 0x30]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00163636: push esp; and al, 0x34; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x000b6a69: push esp; and al, 0x34; push eax; push edi; call esi; 
0x000b67fb: push esp; and al, 0x34; push edx; push dword ptr [edi + 8]; call ebx; 
0x00103b27: push esp; and al, 0x38; call dword ptr gs:[0x10]; 
0x001266fc: push esp; and al, 0x38; lea esi, [esp + 8]; mov edi, dword ptr [esp + 0x34]; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0011746c: push esp; and al, 0x38; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x0011763c: push esp; and al, 0x38; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x00103b52: push esp; and al, 0x38; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x00103c32: push esp; and al, 0x38; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x001092a7: push esp; and al, 0x38; mov edi, dword ptr [esp + 0x40]; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000ddb2f: push esp; and al, 0x38; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000ddb60: push esp; and al, 0x38; mov esi, dword ptr [esp + 0x3c]; mov dword ptr [esp + 8], eax; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x00121af0: push esp; and al, 0x38; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x00121bd0: push esp; and al, 0x38; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x00121cb0: push esp; and al, 0x38; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x00125800: push esp; and al, 0x38; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x00163c1d: push esp; and al, 0x38; push edx; call dword ptr [eax + 0xc]; 
0x00163645: push esp; and al, 0x3c; sub edx, dword ptr gs:[0x14]; jne 0x163655; add esp, 0x4c; ret; 
0x0007faf5: push esp; and al, 0x40; call dword ptr [esi + 0xc]; 
0x000dbd27: push esp; and al, 0x40; mov dword ptr [edx], ebx; add esp, 0x28; pop ebx; ret; 
0x000936ce: push esp; and al, 0x48; mov eax, 0x117; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x0009340e: push esp; and al, 0x48; mov eax, 0x118; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00093652: push esp; and al, 0x48; mov eax, 0x1a2; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x00093396: push esp; and al, 0x48; mov eax, 0x1a3; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0009345a: push esp; and al, 0x48; mov ecx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x118; call dword ptr gs:[0x10]; 
0x000934aa: push esp; and al, 0x48; mov ecx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x1a3; call dword ptr gs:[0x10]; 
0x00125b46: push esp; and al, 0x48; mov esi, dword ptr [esp + 0x50]; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x00122246: push esp; and al, 0x54; lea ecx, [esp + 0x1c]; mov eax, 0x19a; call dword ptr gs:[0x10]; 
0x00116b31: push esp; and al, 0x64; mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 4]; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x001259fd: push esp; and al, 0x6c; sub edx, dword ptr gs:[0x14]; jne 0x125a14; add esp, 0x7c; ret; 
0x00068f73: push esp; and al, 0x70; movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edx + eax*4]; add ecx, ebp; jmp ecx; 
0x00166b59: push esp; and al, 0xc; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x00071a60: push esp; and al, 0xc; add esp, 0x1c; ret; 
0x001169f3: push esp; and al, 0xc; call dword ptr gs:[0x10]; 
0x00036346: push esp; and al, 0xc; fld dword ptr [esp]; mov dword ptr [edx], eax; add esp, 4; ret; 
0x001662e8: push esp; and al, 0xc; lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x00165958: push esp; and al, 0xc; lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 4]; 
0x00171990: push esp; and al, 0xc; mov dword ptr [eax], edx; ret; 
0x000d70c1: push esp; and al, 0xc; mov dword ptr [edx], ebx; pop ebx; ret; 
0x0011ee99: push esp; and al, 0xc; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x00035e27: push esp; and al, 0xc; mov eax, dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00122407: push esp; and al, 0xc; mov ebx, dword ptr [esp + 0x50]; call dword ptr gs:[0x10]; 
0x00088a59: push esp; and al, 0xc; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00088a94: push esp; and al, 0xc; mov ecx, esi; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00068e3c: push esp; and al, 0xc; movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edx + eax*4 - 0x737e0]; add ecx, ebp; jmp ecx; 
0x0006913c: push esp; and al, 0xc; movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edx + eax*4 - 0x73860]; add ecx, ebp; jmp ecx; 
0x00166297: push esp; and al, 0xc; push edx; push ebx; call dword ptr [eax + 0x20]; 
0x001662ec: push esp; and al, 0xc; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x0016595c: push esp; and al, 0xc; push edx; push ebx; call dword ptr [eax + 4]; 
0x00165907: push esp; and al, 0xc; push edx; push ebx; call dword ptr [eax]; 
0x000d72d6: push esp; and al, 0xc; push edx; push ebx; call eax; 
0x00165cb7: push esp; and al, 0xc; push edx; push ecx; call dword ptr [eax + 4]; 
0x00021611: push esp; and al, 0xc; push esi; push dword ptr [esp + 0x40]; call eax; 
0x0010505b: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x105077; add esp, 0x1c; ret; 
0x001165f2: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x116609; add esp, 0x1c; ret; 
0x0011836f: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x11837f; add esp, 0x1c; ret; 
0x001195e9: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1195f9; add esp, 0x1c; ret; 
0x0011d393: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x11d3a3; add esp, 0x1c; ret; 
0x001252b3: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1252c3; add esp, 0x1c; ret; 
0x00145505: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x145515; add esp, 0x1c; ret; 
0x00145551: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x145561; add esp, 0x1c; ret; 
0x0014736f: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1473bc; add esp, 0x1c; ret; 
0x0016224e: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x162267; add esp, 0x1c; ret; 
0x0016276a: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x16277a; add esp, 0x1c; ret; 
0x001745c3: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1745d3; add esp, 0x1c; ret; 
0x0003b798: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x3b7a8; add esp, 0x1c; ret; 
0x0003b7eb: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x3b7fb; add esp, 0x1c; ret; 
0x0003b838: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x3b848; add esp, 0x1c; ret; 
0x0003b88b: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x3b89b; add esp, 0x1c; ret; 
0x00058942: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x5895f; add esp, 0x1c; ret; 
0x000cad88: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xcad98; add esp, 0x1c; ret; 
0x000d482c: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xd483c; add esp, 0x1c; ret; 
0x000d6ebc: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xd6ecc; add esp, 0x1c; ret; 
0x00165700: push esp; and al, 4; jmp dword ptr [eax + 4]; 
0x0008285e: push esp; and al, 4; jmp dword ptr [eax]; 
0x0008285e: push esp; and al, 4; jmp dword ptr [eax]; lea esi, [esi]; nop; ret; 
0x00071aa3: push esp; and al, 4; jmp eax; 
0x0008d73e: push esp; and al, 4; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x00084bae: push esp; and al, 4; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0004ca9d: push esp; and al, 4; mov dword ptr [esp], eax; fld xword ptr [esp]; add esp, 0x1c; ret; 
0x00115ab5: push esp; and al, 4; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x0002ff79: push esp; and al, 4; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0002ff99: push esp; and al, 4; mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0002f7af: push esp; and al, 4; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0002fdaf: push esp; and al, 4; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x28]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x0002fd7f: push esp; and al, 4; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x30]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00166775: push esp; and al, 4; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x00036450: push esp; and al, 4; mov eax, dword ptr [esp + 8]; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0003ab55: push esp; and al, 4; mov eax, edx; neg eax; cmovs eax, edx; ret; 
0x0008291f: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x104], edx; ret; 
0x0008293f: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x108], edx; ret; 
0x0008295f: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x10c], edx; ret; 
0x0008297f: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x110], edx; ret; 
0x0008956f: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x114], edx; ret; 
0x0008954f: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x11c], edx; ret; 
0x0009436f: push esp; and al, 4; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x1cc], edx; ret; 
0x0009434f: push esp; and al, 4; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x1d0], edx; ret; 
0x000943ff: push esp; and al, 4; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x208], edx; ret; 
0x000946df: push esp; and al, 4; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x3b68], edx; ret; 
0x0002fc9f: push esp; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x0002fc6f: push esp; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x0002fc3f: push esp; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x0002fb7f: push esp; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x0002fbdf: push esp; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x0002faef: push esp; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x0002fbaf: push esp; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x0002fb4f: push esp; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x0002fd4f: push esp; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x0002fb1f: push esp; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x0002fc0f: push esp; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x0002fabf: push esp; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x000886df: push esp; and al, 4; ret; 
0x00082755: push esp; and al, 4; setae al; ret; 
0x001589bc: push esp; and al, 4; sub esp, 0xc; mov ecx, dword ptr [eax + 0x20]; push eax; call dword ptr [ecx + 0xc]; 
0x0008726a: push esp; and al, 8; call dword ptr gs:[0x10]; 
0x001719b9: push esp; and al, 8; mov dword ptr [eax + 0x4c], edx; ret; 
0x00167041: push esp; and al, 8; mov dword ptr [eax + 0xc], edx; ret; 
0x00084649: push esp; and al, 8; mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x00104469: push esp; and al, 8; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x00084855: push esp; and al, 8; mov eax, 0x16; cmp edx, 0x3fff; ja 0x84870; ret; 
0x001164ef: push esp; and al, 8; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00080b79: push esp; and al, 8; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x00171969: push esp; and al, 8; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x0002df89: push esp; and al, 8; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x00036198: push esp; and al, 8; mov eax, dword ptr [esp + 0xc]; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x000889cb: push esp; and al, 8; mov esi, 8; call dword ptr gs:[0x10]; 
0x0010fb89: push esp; and al, 8; mov word ptr [edx + 0x3e], ax; xor eax, eax; ret; 
0x00111519: push esp; and al, 8; mov word ptr [edx + 0x42], ax; xor eax, eax; ret; 
0x00084839: push esp; and al, 8; or dword ptr [eax + 8], 8; mov dword ptr [eax + 0x10], edx; xor eax, eax; ret; 
0x0002d8c7: push esp; and al, 8; pop ebx; jmp 0x2def0; pop ebx; ret; 
0x000719a4: push esp; and al, 8; pop ebx; jmp eax; 
0x00166480: push esp; and al, 8; pop ebx; mov eax, dword ptr [eax + 0x20]; jmp eax; 
0x00166498: push esp; and al, 8; pop ebx; mov eax, dword ptr [eax + 0x24]; jmp eax; 
0x0015afe8: push esp; and al, 8; pop ebx; mov eax, dword ptr [eax + 4]; jmp eax; 
0x0015afd0: push esp; and al, 8; pop ebx; mov eax, dword ptr [eax]; jmp eax; 
0x0010551c: push esp; and al, 8; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x00089653: push esp; and al, 8; shr eax, 0x13; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0008e4fb: push esp; and al, 8; shr eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0018f107: push esp; bnd call dword ptr [ebx - 0x18]; 
0x0018f107: push esp; bnd call dword ptr [ebx - 0x18]; jmp 0x8218ef3d; ret; 
0x0003ab13: push esp; cmp eax, 0x473ff00; call eax; 
0x0013a717: push esp; cmpsb byte ptr [esi], byte ptr es:[edi]; stc; dec dword ptr [ebp - 0x68d3356]; call dword ptr [eax + 0x55]; 
0x000ead03: push esp; dec dword ptr [ecx + 0x32e82434]; push esp; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0011b9b9: push esp; dec ebx; stc; call dword ptr [eax - 0x75]; 
0x0011f804: push esp; dec edi; stc; call dword ptr [eax + 0x57]; 
0x000673b6: push esp; idiv edi; call dword ptr [ebx + 0x57]; 
0x000673b6: push esp; idiv edi; call dword ptr [ebx + 0x57]; push dword ptr [ebp - 0x87c]; call edx; 
0x0006c38e: push esp; idiv edi; call dword ptr [esi - 1]; 
0x000ead0b: push esp; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00091150: push esp; inc eax; stc; call dword ptr [eax - 0x18]; 
0x000dfed7: push esp; inc esi; push ebx; setne al; ret; 
0x000dcc15: push esp; inc esi; stc; call dword ptr [eax - 0x18]; 
0x000302c3: push esp; jae 0x302bf; dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x000dfdb1: push esp; jne 0xdfdc0; lea esi, [esi]; mov eax, 0x40; ret; 
0x00026f37: push esp; jo 0x26f33; call dword ptr [eax - 0x18]; 
0x00027c3e: push esp; jo 0x27c3a; call dword ptr [eax - 0x18]; 
0x00029d08: push esp; jo 0x29d04; call dword ptr [eax - 0x18]; 
0x0002b110: push esp; jo 0x2b10c; call dword ptr [eax - 0x18]; 
0x00122248: push esp; lea ecx, [esp + 0x1c]; mov eax, 0x19a; call dword ptr gs:[0x10]; 
0x0015b7d8: push esp; mov al, 0xf9; call dword ptr [eax - 0x73]; 
0x00124e54: push esp; mov dword ptr [esp + 0x1c], eax; mov eax, dword ptr [esp + 0x60]; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0011185d: push esp; mov eax, 0x135; mov edi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0012236c: push esp; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x001117e1: push esp; mov eax, 0x19e; mov edi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00026738: push esp; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0011f0a8: push esp; mov eax, ebx; pop ebx; pop esi; ret; 
0x00086867: push esp; mov ebx, dword ptr [esi + 0x68]; mov ecx, dword ptr [esi + 0x230]; lea edx, [esi + 0x22c]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x001118bd: push esp; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x0002cdbc: push esp; mov esi, 0xc05589fc; mov edx, dword ptr [ebx + edi*4 - 0x3a4]; test edx, edx; je 0x2cdcf; call edx; 
0x0014f4e8: push esp; or al, 0xed; jmp dword ptr [ebp - 0x5f]; 
0x0012ad3d: push esp; out dx, eax; jmp dword ptr [ebp - 0x75]; 
0x001097dc: push esp; pop ebx; pop esi; ret; 
0x00026734: push esp; push dword ptr [esp + 0x54]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00026242: push esp; push dword ptr [esp + 0x5c]; call edi; 
0x000c4ec6: push esp; push ecx; mov eax, dword ptr [esp + 0x40]; push dword ptr [eax]; call edi; 
0x00171a5a: push esp; ret; 
0x00120b1f: push esp; stc; call dword ptr [eax + 0x56]; 
0x0011fa83: push esp; stc; call dword ptr [eax + 0x57]; 
0x00120ab7: push esp; stc; call dword ptr [eax - 0x18]; 
0x0011fa67: push esp; stc; call dword ptr [edx + 0x52]; 
0x000d7c02: push esp; sti; inc dword ptr [ebx + 0x5e5b3cc4]; pop edi; pop ebp; ret; 
0x0004bf39: push esp; xchg dword ptr [ebx + eax*4], eax; ret 0x8901; 
0x000c29df: push esp; xchg ebp, eax; stc; call dword ptr [eax - 0x18]; 
0x001153f9: push esp; xor eax, eax; ret; 
0x00161ce6: push ss; adc al, 0; add byte ptr [ecx - 0x1f7c723b], cl; arpl cx, di; call dword ptr [ecx + 0x6a]; 
0x001a0af7: push ss; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; or dword ptr [ebx + 0x2d], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0016d213: push ss; add byte ptr [eax], al; add bl, ch; jecxz 0x16d202; shl byte ptr [edi - 4], cl; jmp dword ptr [esi - 0x70]; 
0x000de960: push ss; add byte ptr [eax], al; add bl, ch; ret; 
0x0010fba8: push ss; add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x00037750: push ss; add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; pop esi; ret; 
0x00037648: push ss; add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; ret; 
0x000376f0: push ss; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x00083e5b: push ss; add byte ptr [eax], al; add byte ptr [ebp - 0x3dbaf040], al; ret; 
0x0011d518: push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000a23f4: push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0009a12c: push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0008471d: push ss; add byte ptr [eax], al; add byte ptr [ebx + 0xa7602fa], al; ret; 
0x00099400: push ss; add byte ptr [eax], al; add byte ptr [ebx - 0x3fcefb3c], al; pop ebx; pop esi; ret; 
0x00084859: push ss; add byte ptr [eax], al; add byte ptr [ecx + 0x3ffffa], al; add byte ptr [edi + 0xb], dh; ret; 
0x00071bdb: push ss; add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x00099370: push ss; add byte ptr [eax], al; add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00084755: push ss; add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0x8dc3; 
0x0008bc61: push ss; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x00104429: push ss; add byte ptr [eax], al; add byte ptr [esi - 9], ah; ret 0xff00; 
0x0012105f: push ss; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000bc2bb: push ss; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x000b6796: push ss; add dword ptr [eax], eax; add byte ptr [ebx - 0x677b], cl; jmp dword ptr [ebp - 0x75]; 
0x00067f6e: push ss; add eax, 0xec830000; add al, 0x53; push edx; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x0015bf70: push ss; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x001622d5: push ss; add esp, 0x74; pop ebx; pop edi; ret; 
0x0016d6d6: push ss; arpl sp, di; jmp dword ptr [esi - 0x70]; 
0x000b4249: push ss; bsf eax, eax; add eax, edx; add eax, ecx; ret; 
0x0011fe75: push ss; cmc; dec dword ptr [ebx + 0x8080]; add byte ptr [ecx - 0x6c72fbaa], cl; ret 0xf94d; 
0x000fe8d3: push ss; dec byte ptr [ebx - 0x6d34b]; jmp dword ptr [esi - 0x77]; 
0x000d7f69: push ss; imul eax, dword ptr [esp + 0x10], 0x34; add eax, dword ptr [edx]; add esp, 8; pop ebx; ret; 
0x0015fbaf: push ss; in al, dx; inc dword ptr [ebx - 0x74aaf314]; inc esp; and al, 0x48; call dword ptr [eax + 0x10]; 
0x0015c7d6: push ss; jb 0x15c7d6; jmp dword ptr [esi - 0x70]; 
0x000abe67: push ss; jne 0xac520; pop edi; pop esi; pop ebx; ret; 
0x0018cbf6: push ss; jns 0x18cbeb; call dword ptr [ebx - 0x18]; 
0x000b3fe9: push ss; lea eax, [ecx + eax + 0x20]; ret; 
0x000b3d19: push ss; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x0009b3a3: push ss; lea eax, [edx - 0x94920]; test byte ptr [ecx + 0x184], 4; lea edx, [edx - 0x187980]; cmove eax, edx; ret; 
0x0009c0d3: push ss; lea eax, [edx - 0xae420]; test byte ptr [ecx + 0x184], 1; lea edx, [edx - 0xaf660]; cmove eax, edx; ret; 
0x0009bff3: push ss; lea eax, [edx - 0xae9a0]; test byte ptr [ecx + 0x184], 1; lea edx, [edx - 0xaf040]; cmove eax, edx; ret; 
0x00131bf3: push ss; lea eax, [edx - 0xae9c0]; test byte ptr [ecx + 0x184], 1; lea edx, [edx - 0xaf060]; cmove eax, edx; ret; 
0x000ac061: push ss; mov byte ptr [edi], dl; pop edi; pop esi; pop ebx; ret; 
0x000b31d4: push ss; mov dword ptr [eax], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afd81: push ss; mov dword ptr [eax], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00120fb5: push ss; mov dword ptr [eax], edx; pop ebx; pop esi; pop edi; ret; 
0x000ac091: push ss; mov dword ptr [edi], edx; pop edi; pop esi; pop ebx; ret; 
0x000e5a72: push ss; mov eax, 1; ret; 
0x0010500f: push ss; mov ecx, dword ptr [esp + 0xc]; mov eax, 0xdb; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000b31a5: push ss; mov word ptr [eax], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000afd62: push ss; mov word ptr [eax], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ac072: push ss; mov word ptr [edi], dx; pop edi; pop esi; pop ebx; ret; 
0x00038415: push ss; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000d8bf9: push ss; pop ebx; pop esi; pop edi; ret; 
0x000a1af7: push ss; pop ebx; pop esi; ret; 
0x000ad994: push ss; pop edi; pop esi; pop ebx; ret; 
0x0011f8dc: push ss; push ecx; stc; call dword ptr [eax + 0x57]; 
0x0008dcec: push ss; ret; 
0x0005db13: push ss; sar bh, 1; dec dword ptr [ebx - 0x59b7b]; jmp dword ptr [ebp - 0x75]; 
0x001670fe: push ss; stc; call dword ptr [ebp + 0x6a]; 
0x0008361f: push ss; test edx, edx; je 0x83600; sub esp, 0xc; push eax; call edx; 
0x000591a2: push ss; xor bh, cl; call dword ptr [ebx + 0x50]; 
0x000855df: push ss; xor esi, esi; mov eax, edi; call dword ptr gs:[0x10]; 
0x0011f69c: pushal; add al, 0; add byte ptr [ebx - 0x7c72f714], al; sbb al, 0x4c; stc; call dword ptr [eax + 0x57]; 
0x0010488d: pushal; add al, 0; add dh, dh; ret 0xf80; 
0x0012751a: pushal; add al, byte ptr [eax]; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00116fd1: pushal; add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x00151520: pushal; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xor byte ptr [ecx], 0x61; stc; call dword ptr [eax - 0x18]; 
0x0005516f: pushal; add dword ptr [eax], eax; add byte ptr [ecx - 0x768fdbbc], cl; ret 0xc483; 
0x0006d27c: pushal; add eax, 0xec830000; add al, 0x89; lea esi, [edi + esi*8 - 1]; call dword ptr [esi + 0x52]; 
0x00165758: pushal; add esp, 0x18; pop ebx; ret; 
0x0015ab47: pushal; and al, byte ptr [eax]; add byte ptr [ebx - 0x7f], dl; ret; 
0x0009b42a: pushal; call 0xc24ec42f; ret; 
0x000f7d56: pushal; cld; clc; call dword ptr [eax - 0x73]; 
0x0016d90b: pushal; cld; jmp dword ptr [esi - 0x70]; 
0x0007ad6b: pushal; cli; jmp dword ptr [esi - 0x70]; 
0x000aa82c: pushal; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00066f4b: pushal; idiv edi; call dword ptr [eax]; 
0x0006768c: pushal; idiv edi; dec dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret; 
0x000a632c: pushal; idiv edi; jmp dword ptr [esi + 0xf]; 
0x0004155c: pushal; in al, 0xfe; dec dword ptr [ebx - 0x72d3db84]; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x00171b78: pushal; jne 0x21308; add esp, 8; xor eax, eax; pop ebx; ret; 
0x00116b37: pushal; lea ecx, [esp + 4]; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x00124e5c: pushal; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00163934: pushal; mov dword ptr [esp + 0x34], edx; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x0012192f: pushal; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x0015dda2: pushal; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [edx + 8]; 
0x00025bbb: pushal; mov eax, dword ptr [esp + 0x44]; call eax; 
0x00024aa5: pushal; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0006ebc4: pushal; or al, 0; add byte ptr [ebx + 0x565704ec], al; push ebp; call dword ptr [ebx + 0x1c]; 
0x001a08d4: pushal; or al, 0; add byte ptr [ecx - 0x2d7a57c4], cl; je 0x1a08e9; mov dword ptr [esp + 8], eax; call edx; 
0x000ad1ec: pushal; or al, byte ptr [eax]; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00084765: pushal; or bl, bh; xor eax, eax; ret; 
0x00084616: pushal; or dh, bh; xor eax, eax; ret; 
0x0011f867: pushal; or dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f714], al; and dword ptr [eax - 7], edx; call dword ptr [eax + 0x57]; 
0x0007a1c3: pushal; out 0xff, eax; call dword ptr [eax - 0x73]; 
0x0007128c: pushal; out 0xff, eax; call dword ptr [ecx + 0x52]; 
0x00109908: pushal; pop ebx; pop esi; pop edi; ret; 
0x000fc27d: pushal; popfd; stc; call dword ptr [eax - 0x18]; 
0x00025ffd: pushal; push -7; call dword ptr [eax + 0x68]; 
0x00025ee9: pushal; push -7; call dword ptr [eax - 0x73]; 
0x000255f0: pushal; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0011f9b0: pushal; push edx; stc; call dword ptr [edx + 0x52]; 
0x0014d904: pushal; stc; call dword ptr [eax - 0x18]; 
0x00150e82: pushal; stc; call dword ptr [eax - 0x73]; 
0x0013cca5: pushal; sub al, 0xf1; call dword ptr [eax - 0x73]; 
0x0007c1cf: pushal; sub esp, 4; push esi; push dword ptr [esp + 0x28]; push edi; call dword ptr [ebp + 0x1c]; 
0x00140cbc: pushal; test al, 0xf9; call dword ptr [eax - 0x73]; 
0x0002d1b9: pushal; test bh, dh; call dword ptr [eax - 0x18]; 
0x0009267a: pushal; test cl, bh; call dword ptr [eax + 0x68]; 
0x000926dd: pushal; test cl, bh; call dword ptr [eax - 0x73]; 
0x000c8026: pushfd; add al, byte ptr [eax]; add byte ptr [ebx - 0x36477b], al; jmp eax; 
0x0006e9a8: pushfd; add al, byte ptr [eax]; add byte ptr [ebx - 0x3eb3dbbc], cl; clc; add ch, byte ptr [ecx]; ret; 
0x00109a0f: pushfd; add byte ptr [eax], al; add al, ch; cwde; ret 0; 
0x00199777: pushfd; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 4; 
0x00037b04: pushfd; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00037a94: pushfd; add byte ptr [eax], al; add byte ptr [ebx - 0x13348], cl; jmp dword ptr [ebp - 0x75]; 
0x000bd58d: pushfd; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fe13], al; ret; 
0x000eb570: pushfd; add byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; movsb byte ptr es:[edi], byte ptr [esi]; stc; call dword ptr [eax + 0x55]; 
0x0008ebd8: pushfd; add byte ptr [eax], al; add dh, dh; ret 0xf02; 
0x00108eac: pushfd; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000913b0: pushfd; add eax, dword ptr [eax]; add al, ch; cmpsd dword ptr [esi], dword ptr es:[edi]; ret; 
0x00048510: pushfd; and al, 0x50; add al, 0; add byte ptr [ebx + 0x688d04ec], al; call dword ptr [ebp + 0x53]; 
0x0019d10b: pushfd; and al, 0x80; add byte ptr [eax], al; add dh, dh; ret; 
0x00122ec1: pushfd; and al, 0x84; add byte ptr [eax], al; add byte ptr [eax + 0x6c], bh; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0019d0e0: pushfd; and al, 0x88; add byte ptr [eax], al; add byte ptr [ecx], cl; ret 0xb60f; 
0x00092fc7: pushfd; and al, 0xa0; add byte ptr [eax], al; add byte ptr [eax + 0x119], bh; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0008deff: pushfd; and al, 0xa0; add byte ptr [eax], al; add byte ptr [eax + 0xaf], bh; mov esi, 8; call dword ptr gs:[0x10]; 
0x001484c1: pushfd; and al, 0xd8; add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; ret; 
0x00161a08: pushfd; and al, 0xe0; add byte ptr [eax], al; add byte ptr [ebx + 0x50], dl; call dword ptr [edx + 8]; 
0x000f3054: pushfd; and al, 0xe0; add byte ptr [eax], al; add byte ptr [ecx], al; ret; 
0x000f2478: pushfd; and al, 0xf8; add byte ptr [eax], al; add byte ptr [edi], cl; dec esp; ret 0xc183; 
0x000f6565: pushfd; bnd jmp dword ptr [ebp - 0x75]; 
0x0010880e: pushfd; call 0x108ad0; add esp, 0x18; pop ebx; ret; 
0x001088c2: pushfd; call 0x108c90; add esp, 0x1c; ret; 
0x0012321d: pushfd; call 0x109360; add esp, 0x20; add esp, 0xc; ret; 
0x00109348: pushfd; call 0x109360; add esp, 0x2c; ret; 
0x001099b5: pushfd; call 0x1099c0; add esp, 0x1c; ret; 
0x000da5bd: pushfd; cdq; stc; call dword ptr [eax - 0x73]; 
0x00169d26: pushfd; cld; jmp dword ptr [esi - 0x70]; 
0x0007c100: pushfd; dec ebp; cli; jmp dword ptr [esi - 0x70]; 
0x000669bc: pushfd; idiv edi; call dword ptr [eax + 0x57]; 
0x0014ed18: pushfd; lodsd eax, dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x00023b78: pushfd; outsb dx, byte ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x000b73f0: pushfd; pop es; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000b5c8b: pushfd; rcr byte ptr [esi - 9], 0xd8; cmp ecx, edi; pop edi; cmovg eax, edx; ret; 
0x000441d9: pushfd; ret; 
0x0007ec52: pushfd; sbb dword ptr [eax], eax; add byte ptr [ebx + 0x357f01f8], al; add esp, 8; pop ebx; ret; 
0x00080f6c: pushfd; sbb dword ptr [eax], eax; add byte ptr [ebx + 0xb7f01f8], al; ret; 
0x000fc218: pushfd; stc; call dword ptr [eax - 0x18]; 
0x000facf9: pushfd; stc; call dword ptr [eax - 0x73]; 
0x0014d285: pushfd; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x18]; 
0x00149b6b: pushfd; xchg ebx, eax; mov al, byte ptr [0x3efff90d]; jmp ebx; 
0x000f4354: pushfd; xchg ecx, eax; sar dl, 0xf8; dec dword ptr [ecx + 0x3ecb01d0]; jmp ebx; 
0x00077095: rcl byte ptr [eax + 0x52]; push edi; call dword ptr [ebx + 0x38]; 
0x0015b8bf: rcl byte ptr [eax + 0x56]; push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x00166c5e: rcl byte ptr [eax - 0x4e1f00d], 0x8b; inc esp; and al, 4; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x0013ab7f: rcl byte ptr [eax - 0x73], 0x86; fadd dword ptr [ebx - 7]; call dword ptr [eax + 0x6a]; 
0x0009c261: rcl byte ptr [eax - 0xa], 0xff; cmovne eax, edx; ret; 
0x000a2729: rcl byte ptr [eax], 0x5f; pop esi; ret; 
0x00127ceb: rcl byte ptr [eax], 0x83; ret 0x3904; 
0x00189e63: rcl byte ptr [eax], 0x83; ret 0x5310; 
0x0018ccb9: rcl byte ptr [eax], 0x83; ret 0x5710; 
0x001846bd: rcl byte ptr [eax], 0x83; ret 0x8310; 
0x00126db4: rcl byte ptr [eax], 0x83; ret 0x890c; 
0x000c905d: rcl byte ptr [eax], 0x83; ret 0x8910; 
0x000afd0b: rcl byte ptr [eax], 0xe8; jmp dword ptr [eax]; 
0x00127706: rcl byte ptr [eax]; cmp eax, dword ptr [ecx + 0x4624]; jae 0x12771b; mov edx, dword ptr [ecx + 0x4628]; add word ptr [edx + eax*2], 1; ret; 
0x000fc6bf: rcl byte ptr [ebx], 0xed; call dword ptr [eax + 0x6a]; 
0x0011f948: rcl byte ptr [ecx - 7], cl; call dword ptr [eax + 0x57]; 
0x0009b471: rcl byte ptr [ecx], 0xf6; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0016522f: rcl byte ptr [edi - 0x18], 0x3a; add al, 0xf5; call ecx; 
0x0016530f: rcl byte ptr [edi - 0x18], 0x5a; add esi, ebp; call ecx; 
0x0016844f: rcl byte ptr [edi], 0x89; shl dword ptr [0xfffff000], 0x29; ret 0xe183; 
0x00120775: rcl byte ptr [edx - 7], cl; dec dword ptr [eax - 0x6c72f7aa]; ret 0xf952; 
0x00131bbe: rcl byte ptr [esi - 0xb]; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x0014bab6: rcl dword ptr [eax + 0x50a0], 0xf6; ret 0xf01; 
0x00104364: rcl dword ptr [eax + 1], 0; add cl, al; jmp 0x5fbc3671; ret; 
0x00130fe0: rcl dword ptr [eax - 0x73], 0x87; salc; push edi; stc; call dword ptr [eax - 1]; 
0x00066586: rcl dword ptr [eax], 0x39; ret 0xf475; 
0x000b3d89: rcl dword ptr [eax], 0x83; ret 0x2910; 
0x0015b3bb: rcl dword ptr [ecx + 0x52], 0x89; push esp; and al, 0x14; push dword ptr [esi]; call dword ptr [esi + 0x20]; 
0x00126779: rcl dword ptr [esi - 0x77]; salc; push ebx; mov ebx, 0x16; mov edi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00171e6a: rcl ebx, 0xe3; sar eax, 5; or dword ptr [edx + eax*4], ebx; xor eax, eax; pop ebx; ret; 
0x00128198: rcl ebx, 1; call 0x5b146222; pop esi; pop edi; ret; 
0x00128238: rcl ebx, 1; call 0x5b1462c2; pop esi; pop edi; ret; 
0x001282d8: rcl ebx, 1; call 0x5b146362; pop esi; pop edi; ret; 
0x00128378: rcl ebx, 1; call 0x5b146402; pop esi; pop edi; ret; 
0x001284b8: rcl ebx, 1; call 0x5b146542; pop esi; pop edi; ret; 
0x00128558: rcl ebx, 1; call 0x5b1465e2; pop esi; pop edi; ret; 
0x001285f8: rcl ebx, 1; call 0x5b146682; pop esi; pop edi; ret; 
0x00128698: rcl ebx, 1; call 0x5b146722; pop esi; pop edi; ret; 
0x00128738: rcl ebx, 1; call 0x5b1467c2; pop esi; pop edi; ret; 
0x00128878: rcl ebx, 1; call 0x5b146902; pop esi; pop edi; ret; 
0x00157019: rcr byte ptr [eax], 0x50; call 0x156df0; add esp, 0x2c; ret; 
0x0012e4c1: rcr byte ptr [eax], 0x83; ljmp 0x83eb:0x89c87501; ret; 
0x0013135f: rcr byte ptr [ebx + 0x5e], 0x5d; ret; 
0x00021ab5: rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x00076515: rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00024b03: rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x00140fd7: rcr byte ptr [ebx + 0x5e], 1; pop edi; ret; 
0x0004b73b: rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000a1eb1: rcr byte ptr [ebx + 0x5e], cl; mov eax, edx; pop edi; pop ebp; ret; 
0x0003db53: rcr byte ptr [ebx + 0x5e], cl; pop edi; pop ebp; ret; 
0x001521a0: rcr byte ptr [ebx + 0x5f], 1; ret; 
0x00174980: rcr byte ptr [ebx + 0xf], 1; mov dh, 0xc0; neg eax; ret; 
0x0003a63a: rcr byte ptr [ebx - 0x77], cl; rcr byte ptr [esi + 0x5f], 1; pop ebp; ret; 
0x0012ff0f: rcr byte ptr [ebx - 0x77], cl; rcr byte ptr [esi + 0x5f], 1; ret; 
0x0007e6f9: rcr byte ptr [ebx - 9], 0xd8; ret; 
0x0005374a: rcr byte ptr [ebx], 0x89; ret 0x25; 
0x000e21c2: rcr byte ptr [ebx], 0x89; shl dword ptr [0xfffff000], 0x29; ret 0xe183; 
0x0002e554: rcr byte ptr [ebx], 1; mov cs, esp; adc byte ptr [eax], al; add byte ptr [edi], cl; dec ebp; ret 0xec83; 
0x000c0799: rcr byte ptr [ecx], 0x39; ror byte ptr [edi], 1; dec edi; ret 0x403; 
0x00040854: rcr byte ptr [ecx], 0x39; ror byte ptr [edi], 1; dec edi; ret 0xf001; 
0x0010c328: rcr byte ptr [ecx], 0xd1; sbb eax, 0; pop ebx; pop esi; ret; 
0x0007bc94: rcr byte ptr [ecx], 0xe5; call dword ptr [eax - 0x73]; 
0x00193672: rcr byte ptr [edi + 0x5d], 0x5b; ret; 
0x000a1eb5: rcr byte ptr [edi + 0x5d], 1; ret; 
0x0017c522: rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x000a271d: rcr byte ptr [edi + 0x5e], 1; ret; 
0x0015f736: rcr byte ptr [edi + edi*8], 0xb0; nop; add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; 
0x0003b37b: rcr byte ptr [edx + 0x5b], 0x5e; pop edi; pop ebp; ret; 
0x00151168: rcr byte ptr [edx], 0x89; shl dword ptr [0xfffff000], 0x29; ret 0xe183; 
0x0003bd3b: rcr byte ptr [esi + 0x5f], 0x5d; ret; 
0x0011d485: rcr byte ptr [esi + 0x5f], 0xf; mov dh, 0xc0; ret; 
0x0002f5a7: rcr byte ptr [esi + 0x5f], 1; pop ebp; ret; 
0x0004b1f2: rcr byte ptr [esi + 0x5f], 1; ret; 
0x000b5c8c: rcr byte ptr [esi - 9], 0xd8; cmp ecx, edi; pop edi; cmovg eax, edx; ret; 
0x0002d366: rcr byte ptr [esi], 0x89; loope 0x2d2f4; ret 0x25; 
0x0002d5f2: rcr byte ptr [esi], 0x89; loope 0x2d580; ret 0x25; 
0x00099f35: rcr ch, 0xf8; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x0004b180: rcr dword ptr [ebx + 0x5e], 1; sbb eax, eax; and eax, 2; sub eax, 1; ret; 
0x00136cb4: rcr dword ptr [ecx - 7], cl; call dword ptr [eax - 0x18]; 
0x0013fc97: rcr dword ptr [ecx], 0xd2; mov eax, edx; pop ebx; pop esi; ret; 
0x001220da: rdpkru; lea ecx, [ebx + ebx]; pop ebx; shr eax, cl; and eax, 3; ret; 
0x0004ab63: rdsspd eax; cmp ecx, dword ptr [eax]; mov eax, 0; jne 0x4ab72; push ecx; ret; 
0x0004ae09: rdsspd eax; cmp ecx, dword ptr [eax]; mov eax, 0; jne 0x4ae18; push ecx; ret; 
0x000373c7: rdsspd ecx; mov dword ptr [edx + 0x28], ecx; ret; 
0x000dd660: rdtsc; rol byte ptr [ebx + 0x440ffff8], cl; ret 0xc35b; 
0x0015b088: rdtsc; rol byte ptr [ebx - 0x2f76f73c], cl; pop ebx; ret; 
0x00034eb2: rdtsc; ror byte ptr [edi], 1; mov dh, 0x11; test dl, dl; jne 0x34e99; ret; 
0x000b4cce: rep movsb byte ptr es:[edi], byte ptr [esi]; pop eax; mov edi, eax; mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x000847d0: rep movsd dword ptr es:[edi], dword ptr [esi]; mov byte ptr [edx + 0x88], 1; add esp, 4; pop esi; pop edi; ret; 
0x00152b0f: rep movsd dword ptr es:[edi], dword ptr [esi]; mov dword ptr [eax + 0x7c], 0; add esp, 4; pop esi; pop edi; ret; 
0x000b46bd: rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; cld; pop edi; ret; 
0x000b4d61: rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; cld; pop edi; ret; 
0x000b4d37: rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000b4697: rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; pop edi; ret; 
0x000843b8: rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x000b4db0: rep movsd dword ptr es:[edi], dword ptr [esi]; xchg edi, eax; mov esi, edx; ret; 
0x000b4e1f: rep stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000b4706: rep stosb byte ptr es:[edi], al; pop edi; ret; 
0x000b4e1b: rep stosd dword ptr es:[edi], eax; mov ecx, edx; rep stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000b4702: rep stosd dword ptr es:[edi], eax; mov ecx, edx; rep stosb byte ptr es:[edi], al; pop edi; ret; 
0x00103ee6: rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x00023790: ret 0; 
0x00138fea: ret 0x1017; 
0x0009fe24: ret 0x101; 
0x00083945: ret 0x1074; 
0x0009a3c5: ret 0x1089; 
0x00097881: ret 0x108; 
0x000c5097: ret 0x108b; 
0x000a530a: ret 0x10; 
0x00119740: ret 0x1108; 
0x0002e899: ret 0x110; 
0x000c8eba: ret 0x1147; 
0x0003a8d1: ret 0x1177; 
0x0008bd3f: ret 0x118b; 
0x0010ddf5: ret 0x11; 
0x000c8e2a: ret 0x11d7; 
0x00049d44: ret 0x11eb; 
0x00138dda: ret 0x1227; 
0x0009ad0b: ret 0x1274; 
0x00047a47: ret 0x12a3; 
0x0003a8be: ret 0x1376; 
0x00116f16: ret 0x1389; 
0x00038447: ret 0x1399; 
0x000eddc7: ret 0x13; 
0x0010ecf3: ret 0x1403; 
0x0006213a: ret 0x141; 
0x00023a36: ret 0x142b; 
0x0016fa71: ret 0x143b; 
0x00138b7a: ret 0x1487; 
0x00042dcc: ret 0x1489; 
0x0008db3b: ret 0x148d; 
0x000ddd8d: ret 0x14; 
0x00023347: ret 0x14ea; 
0x000a4d8a: ret 0x15; 
0x000cf0e1: ret 0x15eb; 
0x00058a0a: ret 0x15f7; 
0x001390ea: ret 0x161; 
0x001089aa: ret 0x1657; 
0x000b3d17: ret 0x1676; 
0x000b3fe7: ret 0x167c; 
0x00148221: ret 0x168b; 
0x0010894a: ret 0x16b7; 
0x000ced46: ret 0x16d; 
0x0011e01c: ret 0x1789; 
0x00137e3a: ret 0x178; 
0x0009880a: ret 0x17f7; 
0x000d87fa: ret 0x1807; 
0x0005f214: ret 0x1875; 
0x0012876a: ret 0x1897; 
0x0009dd20: ret 0x18; 
0x00026938: ret 0x18b; 
0x000d10f0: ret 0x190; 
0x00057fba: ret 0x191; 
0x000f57fd: ret 0x1972; 
0x0009ba34: ret 0x1976; 
0x0008ddf0: ret 0x19; 
0x0013563a: ret 0x1a0; 
0x0011972a: ret 0x1a2; 
0x0011ed13: ret 0x1a77; 
0x00098c19: ret 0x1a8b; 
0x0007dd1c: ret 0x1a; 
0x000384fa: ret 0x1b07; 
0x0013fd01: ret 0x1b72; 
0x00043934: ret 0x1b8; 
0x000d11ff: ret 0x1b9; 
0x001456a9: ret 0x1bb; 
0x0003838a: ret 0x1c77; 
0x000c2548: ret 0x1c8b; 
0x000d50a9: ret 0x1c8d; 
0x00116d2a: ret 0x1cc; 
0x00116c2a: ret 0x1cd; 
0x0011830a: ret 0x1cf7; 
0x00185982: ret 0x1d72; 
0x000b379e: ret 0x1d75; 
0x0012c448: ret 0x1d77; 
0x000ddd0e: ret 0x1db8; 
0x000cf86e: ret 0x1db9; 
0x0016fe61: ret 0x1deb; 
0x0004817a: ret 0x1e87; 
0x0004af50: ret 0x1e89; 
0x0003dddb: ret 0x1e; 
0x000380fa: ret 0x1f07; 
0x00038340: ret 0x1f1c; 
0x000380aa: ret 0x1f57; 
0x0004ae5d: ret 0x1f74; 
0x0019824e: ret 0x1f75; 
0x0013e541: ret 0x1f77; 
0x0014685e: ret 0x1f7e; 
0x000d807a: ret 0x1f87; 
0x00061d97: ret 0x1f; 
0x000d2cd6: ret 0x1fb8; 
0x0014b203: ret 0x1feb; 
0x0011800a: ret 0x1ff7; 
0x000e8c3a: ret 0x2000; 
0x000300a0: ret 0x200; 
0x0017411d: ret 0x202; 
0x0009471a: ret 0x206; 
0x0014af44: ret 0x20eb; 
0x00047a99: ret 0x2174; 
0x0012c1c3: ret 0x217e; 
0x00029815: ret 0x21e9; 
0x0002560a: ret 0x2374; 
0x00036331: ret 0x2474; 
0x000378bc: ret 0x24e9; 
0x000221a9: ret 0x25; 
0x00082de1: ret 0x2672; 
0x00168197: ret 0x2675; 
0x000b3d07: ret 0x2676; 
0x000b3fd7: ret 0x267c; 
0x0003797a: ret 0x2687; 
0x001378fa: ret 0x2707; 
0x000b37b9: ret 0x275; 
0x001674d6: ret 0x2775; 
0x000a2b2a: ret 0x280f; 
0x000c2b29: ret 0x28b; 
0x000e0aea: ret 0x28d; 
0x00054662: ret 0x2901; 
0x000ab968: ret 0x2910; 
0x00146ada: ret 0x2937; 
0x000e002a: ret 0x293; 
0x000b3e68: ret 0x2940; 
0x000d1521: ret 0x2964; 
0x00181712: ret 0x2972; 
0x000779d8: ret 0x2999; 
0x000d752a: ret 0x2ad7; 
0x0019a8ac: ret 0x2ae9; 
0x000f227a: ret 0x2b75; 
0x0015bf53: ret 0x2b8; 
0x000d740a: ret 0x2bf7; 
0x001373fa: ret 0x2c07; 
0x00056aba: ret 0x2c6; 
0x0019235a: ret 0x2c73; 
0x0014732a: ret 0x2cd7; 
0x0012f10d: ret 0x2d3c; 
0x0012f5a3: ret 0x2d74; 
0x0008a07b: ret 0x2d75; 
0x001170ea: ret 0x2f17; 
0x000d70da: ret 0x2f27; 
0x0002c5ed: ret 0x2f3c; 
0x0007cc40: ret 0x2f74; 
0x0016701a: ret 0x2fe7; 
0x00163d81: ret 0x2feb; 
0x00116fca: ret 0x3037; 
0x0003b660: ret 0x3039; 
0x0014684d: ret 0x307e; 
0x00074c01: ret 0x3089; 
0x00023953: ret 0x3101; 
0x001466dd: ret 0x3102; 
0x000432e0: ret 0x311c; 
0x000e0cc5: ret 0x31c3; 
0x00192d1b: ret 0x3273; 
0x000e8f1c: ret 0x328b; 
0x00116d3a: ret 0x32c7; 
0x000fbcbe: ret 0x32c; 
0x00033c09: ret 0x3325; 
0x0009a7da: ret 0x3374; 
0x0009ba1e: ret 0x3376; 
0x000d56f0: ret 0x348d; 
0x00146b3a: ret 0x34c7; 
0x0007ca4c: ret 0x352; 
0x00051301: ret 0x3574; 
0x00156996: ret 0x366b; 
0x000b3fc7: ret 0x367c; 
0x0011694a: ret 0x36b7; 
0x000b692a: ret 0x36d7; 
0x001168fa: ret 0x3707; 
0x000a1ae9: ret 0x3801; 
0x000b3783: ret 0x3875; 
0x0013f1fc: ret 0x3883; 
0x0009a446: ret 0x38b; 
0x00024b71: ret 0x3901; 
0x0003545a: ret 0x3903; 
0x0003b2a0: ret 0x3904; 
0x000336de: ret 0x3908; 
0x00054429: ret 0x390c; 
0x00092523: ret 0x3910; 
0x0009a44d: ret 0x3964; 
0x000b3cf4: ret 0x3976; 
0x000caaab: ret 0x39f5; 
0x0002c5cf: ret 0x3a3c; 
0x000600ea: ret 0x3a6; 
0x000983d9: ret 0x3a73; 
0x000514c4: ret 0x3a74; 
0x00198233: ret 0x3a75; 
0x0003547d: ret 0x3a80; 
0x000a0fea: ret 0x3a8b; 
0x000b652a: ret 0x3ad7; 
0x00026f11: ret 0x3b01; 
0x000f3d7c: ret 0x3b08; 
0x000b64ea: ret 0x3b17; 
0x000f18a1: ret 0x3b20; 
0x0004c86f: ret 0x3b89; 
0x0004fe7a: ret 0x3b8; 
0x000c04ca: ret 0x3b; 
0x0003641b: ret 0x3be6; 
0x00072e4e: ret 0x3c01; 
0x000cc5b9: ret 0x3c75; 
0x0004904c: ret 0x3c83; 
0x001464df: ret 0x3c89; 
0x000d3bd0: ret 0x3c8d; 
0x000b636a: ret 0x3c97; 
0x0008bdc0: ret 0x3d75; 
0x0003867a: ret 0x3d; 
0x000ce6e9: ret 0x3de9; 
0x00192345: ret 0x3e73; 
0x00036161: ret 0x3ea0; 
0x000f6890: ret 0x3f8b; 
0x000b42c7: ret 0x3f; 
0x0019b59c: ret 0x4000; 
0x000b5ffa: ret 0x4007; 
0x000e87da: ret 0x400; 
0x000c079f: ret 0x403; 
0x001441bd: ret 0x4072; 
0x000fb8b1: ret 0x4089; 
0x00090b69: ret 0x408b; 
0x00039a70: ret 0x408d; 
0x00051804: ret 0x40c7; 
0x001480b6: ret 0x4189; 
0x00054955: ret 0x418d; 
0x00035df3: ret 0x420e; 
0x0007024c: ret 0x420f; 
0x00127c88: ret 0x4240; 
0x000251eb: ret 0x428b; 
0x000cc535: ret 0x428d; 
0x0009518c: ret 0x430; 
0x000357d6: ret 0x430f; 
0x0015c6e2: ret 0x4388; 
0x0013c07d: ret 0x4389; 
0x000ba7a6: ret 0x438d; 
0x0009b882: ret 0x4401; 
0x000bdade: ret 0x4403; 
0x0010ec39: ret 0x443b; 
0x00075b8a: ret 0x4477; 
0x0012c962: ret 0x4483; 
0x0002555f: ret 0x4489; 
0x00025331: ret 0x448b; 
0x000d2c75: ret 0x448d; 
0x00029599: ret 0x44c7; 
0x000d0d3d: ret 0x44f6; 
0x0004a672: ret 0x44f7; 
0x0013fc58: ret 0x4572; 
0x0002d41c: ret 0x4583; 
0x00022c9b: ret 0x4589; 
0x00022308: ret 0x458b; 
0x0010c723: ret 0x458d; 
0x0009246f: ret 0x45c7; 
0x00115a0a: ret 0x45f7; 
0x000b442e: ret 0x460f; 
0x0012cf76: ret 0x4639; 
0x00169647: ret 0x4675; 
0x00075927: ret 0x4689; 
0x00052c16: ret 0x468b; 
0x0016330e: ret 0x468d; 
0x000b590a: ret 0x46f7; 
0x000cc8ca: ret 0x470f; 
0x0009a589: ret 0x476; 
0x0006588a: ret 0x4777; 
0x000d154d: ret 0x4789; 
0x000e2b0e: ret 0x478b; 
0x0016bca3: ret 0x47e8; 
0x00067b91: ret 0x47e9; 
0x00129a47: ret 0x483; 
0x00152b82: ret 0x488d; 
0x0003f370: ret 0x489; 
0x00040833: ret 0x48b; 
0x00033ab7: ret 0x48d; 
0x00165990: ret 0x48e9; 
0x001965d3: ret 0x498d; 
0x0011f24a: ret 0x4a; 
0x00119b4a: ret 0x4b7; 
0x0015d402: ret 0x4bd; 
0x000f305d: ret 0x4c0f; 
0x0010b364: ret 0x4c39; 
0x00192d01: ret 0x4c73; 
0x0004a4ce: ret 0x4c88; 
0x00029433: ret 0x4c89; 
0x00119e0e: ret 0x4c8b; 
0x00166320: ret 0x4ce9; 
0x0002e5a1: ret 0x4d0f; 
0x000738fa: ret 0x4d89; 
0x0004687a: ret 0x4d; 
0x00022c98: ret 0x4e0f; 
0x0014519a: ret 0x4e67; 
0x0003b666: ret 0x4e6d; 
0x0012f71b: ret 0x4e89; 
0x000c462e: ret 0x4e8b; 
0x000c516a: ret 0x4e97; 
0x0006cd68: ret 0x4e9; 
0x000c513a: ret 0x4ec7; 
0x001250fa: ret 0x4f07; 
0x000f6766: ret 0x4f0f; 
0x000c507a: ret 0x4f87; 
0x00088ed0: ret 0x4fe9; 
0x000cc3fb: ret 0x5005; 
0x00124ffa: ret 0x5007; 
0x0007e86f: ret 0x5052; 
0x000882af: ret 0x5072; 
0x00192330: ret 0x5073; 
0x0012e04d: ret 0x508b; 
0x00149cca: ret 0x5152; 
0x00167a4c: ret 0x5175; 
0x0002e5a4: ret 0x518b; 
0x000e3000: ret 0x5201; 
0x0015e7b8: ret 0x5208; 
0x0012c3ac: ret 0x5250; 
0x000a2aae: ret 0x528d; 
0x00189e66: ret 0x5310; 
0x0007741d: ret 0x532b; 
0x000a23c6: ret 0x5350; 
0x000677e3: ret 0x5352; 
0x0016787b: ret 0x5356; 
0x0007b242: ret 0x5374; 
0x000b3768: ret 0x5375; 
0x000edece: ret 0x5388; 
0x0017391c: ret 0x5389; 
0x000ec5d4: ret 0x538b; 
0x00102348: ret 0x538d; 
0x000f53fc: ret 0x5403; 
0x00041c61: ret 0x5409; 
0x000e6877: ret 0x5422; 
0x000286dc: ret 0x542b; 
0x000cb8df: ret 0x5438; 
0x0015d1e9: ret 0x543b; 
0x0014cba9: ret 0x5473; 
0x00145950: ret 0x5484; 
0x000b76c5: ret 0x5488; 
0x00040764: ret 0x5489; 
0x00049fd3: ret 0x548b; 
0x000d2bdd: ret 0x548d; 
0x0009fdc7: ret 0x5503; 
0x0013e9dc: ret 0x5522; 
0x000f49c0: ret 0x5523; 
0x00198218: ret 0x5575; 
0x0007721f: ret 0x5589; 
0x000ea040: ret 0x5603; 
0x00193018: ret 0x5608; 
0x0012f417: ret 0x562b; 
0x000f0275: ret 0x5650; 
0x0004da1f: ret 0x5652; 
0x00095cb2: ret 0x5657; 
0x00173ac8: ret 0x5675; 
0x0015b3d7: ret 0x5689; 
0x0007cc99: ret 0x568b; 
0x00098f6d: ret 0x568d; 
0x00191d59: ret 0x5708; 
0x000ee550: ret 0x570b; 
0x0018ccbc: ret 0x5710; 
0x0012f5ea: ret 0x572b; 
0x00023546: ret 0x574; 
0x0013b59d: ret 0x5752; 
0x001248aa: ret 0x5757; 
0x0009133b: ret 0x578b; 
0x0016c447: ret 0x59; 
0x0012461a: ret 0x59e7; 
0x0009bd49: ret 0x59e9; 
0x0012459a: ret 0x5a67; 
0x0009456a: ret 0x5a97; 
0x0012445a: ret 0x5ba7; 
0x00094418: ret 0x5be9; 
0x000d2c07: ret 0x5c29; 
0x000943ca: ret 0x5c37; 
0x00077d38: ret 0x5c3b; 
0x0009438a: ret 0x5c77; 
0x0017437a: ret 0x5c87; 
0x0003d7c4: ret 0x5c89; 
0x00094495: ret 0x5c8b; 
0x000a42ae: ret 0x5c8d; 
0x00089c03: ret 0x5ce9; 
0x00191c2c: ret 0x5d5e; 
0x000e9ae2: ret 0x5d89; 
0x000c3d87: ret 0x5d8b; 
0x000eac3e: ret 0x5e5b; 
0x001140ca: ret 0x5f37; 
0x0002c694: ret 0x5f3c; 
0x0002e855: ret 0x5f89; 
0x0008cb9c: ret 0x6174; 
0x00080a04: ret 0x6176; 
0x0013c04c: ret 0x6273; 
0x00093cca: ret 0x6337; 
0x000ca430: ret 0x64f7; 
0x00071b2e: ret 0x6509; 
0x0008d2f8: ret 0x6574; 
0x0013ba6e: ret 0x6601; 
0x00142df8: ret 0x6608; 
0x00193919: ret 0x6610; 
0x000ab243: ret 0x6640; 
0x00192ce7: ret 0x6673; 
0x00083e63: ret 0x66c3; 
0x000938da: ret 0x6727; 
0x000b3d27: ret 0x676; 
0x000b3ff7: ret 0x67c; 
0x000fca73: ret 0x6889; 
0x00097591: ret 0x688d; 
0x0002b82f: ret 0x689; 
0x000392b5: ret 0x68b; 
0x000ba872: ret 0x6a; 
0x0004c8a4: ret 0x6b89; 
0x0010af0a: ret 0x6b8; 
0x00131a89: ret 0x6be; 
0x000eecc1: ret 0x6c74; 
0x00151a8f: ret 0x6c89; 
0x00035418: ret 0x6c8b; 
0x000832ea: ret 0x6d17; 
0x0005c6fb: ret 0x6de9; 
0x000b3a40: ret 0x6deb; 
0x001475d8: ret 0x6e8b; 
0x000c502a: ret 0x6e9; 
0x000d4134: ret 0x6eb8; 
0x000bc60d: ret 0x6eb; 
0x000ced16: ret 0x6eba; 
0x0012307a: ret 0x6f87; 
0x00164b55: ret 0x6f8b; 
0x0013306a: ret 0x6f97; 
0x0012302a: ret 0x6fd7; 
0x00132ffa: ret 0x7007; 
0x00122fda: ret 0x7027; 
0x00097189: ret 0x708d; 
0x00152efa: ret 0x7107; 
0x000ec5ae: ret 0x71e9; 
0x00092dda: ret 0x7227; 
0x00072dba: ret 0x7247; 
0x00092c4a: ret 0x73b7; 
0x000eac93: ret 0x7401; 
0x00078542: ret 0x7402; 
0x000b4424: ret 0x7403; 
0x000ed1ec: ret 0x7404; 
0x0019dc02: ret 0x7407; 
0x00075dc4: ret 0x7408; 
0x000b404b: ret 0x7410; 
0x00071791: ret 0x7420; 
0x00028542: ret 0x7439; 
0x0003d8f9: ret 0x7489; 
0x0002f502: ret 0x748d; 
0x000265ef: ret 0x7501; 
0x0008c26c: ret 0x7502; 
0x0002da49: ret 0x7503; 
0x000ae04c: ret 0x7504; 
0x0019515e: ret 0x7508; 
0x000ae061: ret 0x7510; 
0x00152aea: ret 0x7517; 
0x000ae066: ret 0x7520; 
0x000ae06b: ret 0x7540; 
0x001308dd: ret 0x758b; 
0x0008299a: ret 0x7667; 
0x0015297a: ret 0x7687; 
0x000efedc: ret 0x768d; 
0x00118d8a: ret 0x76b8; 
0x00141e86: ret 0x7772; 
0x0012c225: ret 0x7789; 
0x000e9961: ret 0x7839; 
0x0008267a: ret 0x7987; 
0x0010ea7a: ret 0x798b; 
0x000ed63b: ret 0x7a75; 
0x0004a068: ret 0x7a80; 
0x0011251a: ret 0x7ae7; 
0x00196fc1: ret 0x7c06; 
0x00196fd1: ret 0x7c07; 
0x00196fe1: ret 0x7c09; 
0x00196ff1: ret 0x7c0a; 
0x00197001: ret 0x7c0b; 
0x00197011: ret 0x7c0d; 
0x00197021: ret 0x7c0e; 
0x00197031: ret 0x7c0f; 
0x000b76bb: ret 0x7c83; 
0x00075647: ret 0x7c89; 
0x00077c07: ret 0x7c8b; 
0x00119027: ret 0x7c8d; 
0x000a232a: ret 0x7cd7; 
0x000821fa: ret 0x7e07; 
0x00191d99: ret 0x7e10; 
0x0008c24f: ret 0x7e74; 
0x0008927c: ret 0x7eb; 
0x00114c3f: ret 0x7ee9; 
0x000220da: ret 0x7f27; 
0x0006f809: ret 0x7f3c; 
0x0013207a: ret 0x7f87; 
0x0013200a: ret 0x7ff7; 
0x0019c036: ret 0x7fff; 
0x00034792: ret 0x8001; 
0x000e7120: ret 0x800; 
0x000fd111: ret 0x8014; 
0x000eda32: ret 0x804; 
0x00072c49: ret 0x808b; 
0x0017ab85: ret 0x80; 
0x00116488: ret 0x80a9; 
0x000cc460: ret 0x80b8; 
0x000b444d: ret 0x8104; 
0x000888f8: ret 0x8108; 
0x000a1eca: ret 0x8137; 
0x000eac04: ret 0x8166; 
0x00081e8a: ret 0x8177; 
0x0002b049: ret 0x81e9; 
0x0006dcf6: ret 0x820f; 
0x0014bb46: ret 0x828d; 
0x0009995a: ret 0x82c; 
0x000250ee: ret 0x8301; 
0x0009c76b: ret 0x8303; 
0x0004ae8b: ret 0x8304; 
0x0009c73b: ret 0x8305; 
0x0004abec: ret 0x8307; 
0x00143222: ret 0x8308; 
0x00198910: ret 0x830c; 
0x00084ab2: ret 0x830f; 
0x000b5c3c: ret 0x8310; 
0x0008eac9: ret 0x8314; 
0x0008a39b: ret 0x8316; 
0x000896d2: ret 0x8318; 
0x000b4c05: ret 0x8320; 
0x0003b431: ret 0x833c; 
0x000ab294: ret 0x8340; 
0x00056e14: ret 0x8366; 
0x00091354: ret 0x8389; 
0x0013b6ca: ret 0x838b; 
0x0011ad4c: ret 0x838d; 
0x000dabfe: ret 0x8390; 
0x00171c5a: ret 0x83a7; 
0x0002c3ce: ret 0x8401; 
0x00056b47: ret 0x8404; 
0x000239db: ret 0x840f; 
0x00131bda: ret 0x8427; 
0x00131b8a: ret 0x8477; 
0x0005f2d0: ret 0x8489; 
0x00198f98: ret 0x848b; 
0x000f45e7: ret 0x84c7; 
0x000f761c: ret 0x84e9; 
0x000fd534: ret 0x8501; 
0x0004ff6b: ret 0x8503; 
0x000b5dd4: ret 0x8504; 
0x00023a69: ret 0x850f; 
0x00131aea: ret 0x8517; 
0x0012fe67: ret 0x8518; 
0x000b431a: ret 0x8540; 
0x000c1a7a: ret 0x8587; 
0x0004e39b: ret 0x8589; 
0x0002e943: ret 0x858b; 
0x000c8aa5: ret 0x858d; 
0x000483fb: ret 0x860f; 
0x000818fa: ret 0x8707; 
0x000cd69d: ret 0x870f; 
0x00047c98: ret 0x874; 
0x0007181a: ret 0x87e7; 
0x00024993: ret 0x8801; 
0x0013f9ea: ret 0x8802; 
0x00025127: ret 0x8804; 
0x0006dcee: ret 0x880f; 
0x000517ea: ret 0x8817; 
0x000d3beb: ret 0x8830; 
0x000e9a33: ret 0x883; 
0x00151e56: ret 0x889; 
0x000256ad: ret 0x8901; 
0x00034ae3: ret 0x8902; 
0x00029ce1: ret 0x8904; 
0x00032a9b: ret 0x8908; 
0x000213d0: ret 0x8909; 
0x00040805: ret 0x890a; 
0x00126db7: ret 0x890c; 
0x000dea99: ret 0x890f; 
0x000c9060: ret 0x8910; 
0x00070a5d: ret 0x891b; 
0x0019fba3: ret 0x8920; 
0x000216da: ret 0x8927; 
0x000d570b: ret 0x8930; 
0x00022914: ret 0x893c; 
0x000357de: ret 0x8952; 
0x000c89f8: ret 0x8957; 
0x0008c049: ret 0x895b; 
0x000cc5b4: ret 0x8964; 
0x0008a86d: ret 0x8966; 
0x0002b7aa: ret 0x89e; 
0x000ca940: ret 0x89f5; 
0x0011150a: ret 0x8af7; 
0x000410b1: ret 0x8b01; 
0x0009c780: ret 0x8b02; 
0x00125975: ret 0x8b03; 
0x00032a7f: ret 0x8b04; 
0x0009c720: ret 0x8b06; 
0x00024a56: ret 0x8b07; 
0x00032c62: ret 0x8b08; 
0x000b4e81: ret 0x8b10; 
0x0012e2ca: ret 0x8b18; 
0x0009c401: ret 0x8b20; 
0x00080b5e: ret 0x8b30; 
0x00022f8e: ret 0x8b3c; 
0x0012cfc1: ret 0x8b52; 
0x000b6946: ret 0x8b65; 
0x0010b0de: ret 0x8b8; 
0x0010100b: ret 0x8b8b; 
0x0009f4be: ret 0x8b90; 
0x00080b55: ret 0x8b; 
0x00053f25: ret 0x8c0f; 
0x0014d5b2: ret 0x8c89; 
0x0005548c: ret 0x8c8d; 
0x00088653: ret 0x8c; 
0x0012134a: ret 0x8cb7; 
0x0002b6eb: ret 0x8d01; 
0x0014970c: ret 0x8d08; 
0x000d7d45: ret 0x8d0f; 
0x000b4261: ret 0x8d10; 
0x000dadc2: ret 0x8d50; 
0x00052a27: ret 0x8d89; 
0x00067047: ret 0x8d8b; 
0x0009d439: ret 0x8d8d; 
0x00024864: ret 0x8dc3; 
0x00029c41: ret 0x8de9; 
0x000390d0: ret 0x8e0f; 
0x000911aa: ret 0x8e57; 
0x0008ba83: ret 0x8e9; 
0x0010cc9f: ret 0x8ee9; 
0x000c2f37: ret 0x8f0f; 
0x0014109a: ret 0x8f67; 
0x0008392b: ret 0x8f8b; 
0x00160ffa: ret 0x9007; 
0x00048a1a: ret 0x901; 
0x00133dd2: ret 0x904; 
0x0007f48d: ret 0x9066; 
0x000d2c0b: ret 0x908d; 
0x00080f4a: ret 0x90b7; 
0x000dfced: ret 0x90c3; 
0x0007019a: ret 0x90e9; 
0x000c2702: ret 0x92e9; 
0x00141f2a: ret 0x930f; 
0x00140c9a: ret 0x9367; 
0x0014882d: ret 0x93c; 
0x0003b528: ret 0x93eb; 
0x0019dbf2: ret 0x940b; 
0x00105202: ret 0x940f; 
0x00198269: ret 0x9474; 
0x0019bc78: ret 0x9488; 
0x0008df26: ret 0x948b; 
0x00118e6a: ret 0x94b8; 
0x0003e999: ret 0x950f; 
0x000670ff: ret 0x9522; 
0x0005f0d4: ret 0x952b; 
0x00064332: ret 0x9539; 
0x0002bc5d: ret 0x953b; 
0x00090ab6: ret 0x954b; 
0x000862e7: ret 0x9575; 
0x000e1253: ret 0x9588; 
0x0004ecc2: ret 0x9589; 
0x00120a5a: ret 0x95a7; 
0x000cc5d6: ret 0x960f; 
0x000e09ba: ret 0x9647; 
0x000ed6ad: ret 0x9674; 
0x000718fc: ret 0x9689; 
0x0012f11f: ret 0x975; 
0x00173183: ret 0x9774; 
0x00085fa7: ret 0x9775; 
0x00035645: ret 0x98eb; 
0x00133b98: ret 0x998b; 
0x0016062a: ret 0x99d7; 
0x001a055a: ret 0x9aa7; 
0x000ee453: ret 0x9aeb; 
0x00085c97: ret 0x9b75; 
0x0011964a: ret 0x9b7; 
0x00103f8b: ret 0x9b8; 
0x00072d41: ret 0x9c; 
0x001302aa: ret 0x9d57; 
0x0008bde9: ret 0x9d72; 
0x0004e064: ret 0x9d88; 
0x000332b3: ret 0x9d89; 
0x0004f867: ret 0x9d8d; 
0x0008025a: ret 0x9da7; 
0x000e01fa: ret 0x9e07; 
0x000801da: ret 0x9e27; 
0x00078af0: ret 0x9e3b; 
0x000b9682: ret 0x9eb; 
0x0015010a: ret 0x9ef7; 
0x00047bba: ret 0x9f74; 
0x0011960a: ret 0x9f7; 
0x0003005a: ret 0x9fa7; 
0x00024d38: ret 0x9fe9; 
0x000c17b2: ret 0xa074; 
0x0006089d: ret 0xa165; 
0x0005c4ec: ret 0xa175; 
0x00091c2a: ret 0xa1d; 
0x000ec67e: ret 0xa1e9; 
0x0007fdea: ret 0xa217; 
0x00148863: ret 0xa3c; 
0x000dfbda: ret 0xa427; 
0x0007fbaa: ret 0xa457; 
0x0010fb7a: ret 0xa487; 
0x0011d04c: ret 0xa4e9; 
0x00035898: ret 0xa5eb; 
0x0007f9fa: ret 0xa607; 
0x00095300: ret 0xa72; 
0x00089f7c: ret 0xa75; 
0x0003362f: ret 0xa7e9; 
0x000df565: ret 0xa874; 
0x000c2c5a: ret 0xa8b; 
0x0002f64a: ret 0xa9b7; 
0x00020dea: ret 0xa; 
0x0008f5aa: ret 0xaa57; 
0x0014f54a: ret 0xaab7; 
0x0011ca75: ret 0xaae9; 
0x000df45a: ret 0xaba7; 
0x00040820: ret 0xabb8; 
0x000ecc1b: ret 0xac03; 
0x000df3ba: ret 0xac47; 
0x0007f39a: ret 0xac67; 
0x0010aa3a: ret 0xb0; 
0x0008252a: ret 0xb14; 
0x0016ed7a: ret 0xb287; 
0x000ced5a: ret 0xb2a7; 
0x0014df38: ret 0xb2e8; 
0x00094b5a: ret 0xb374; 
0x000cce68: ret 0xb38b; 
0x00037a0f: ret 0xb3b8; 
0x0014ca96: ret 0xb439; 
0x0019e14f: ret 0xb489; 
0x00039326: ret 0xb48d; 
0x00069791: ret 0xb4ff; 
0x0005d489: ret 0xb589; 
0x0005cec3: ret 0xb58b; 
0x000e2a3d: ret 0xb58d; 
0x0006749a: ret 0xb5; 
0x0011ea3a: ret 0xb5c7; 
0x0002687e: ret 0xb60f; 
0x0016e9ba: ret 0xb647; 
0x00045979: ret 0xb68d; 
0x0016e96a: ret 0xb697; 
0x000cc52f: ret 0xb70f; 
0x000de69c: ret 0xb74; 
0x0016bd33: ret 0xb7e8; 
0x000a1647: ret 0xb801; 
0x000d413b: ret 0xb850; 
0x0003bd4d: ret 0xb85b; 
0x000593b1: ret 0xb89; 
0x000d4f43: ret 0xb8; 
0x000dfc8e: ret 0xb8c3; 
0x00116760: ret 0xb963; 
0x000e1024: ret 0xb973; 
0x0011946a: ret 0xb97; 
0x0016e66a: ret 0xb997; 
0x00070171: ret 0xb9e9; 
0x0003e77a: ret 0xb9eb; 
0x000432d4: ret 0xb; 
0x000424e8: ret 0xba; 
0x000374b4: ret 0xbb01; 
0x00119c19: ret 0xbb03; 
0x0005492d: ret 0xbb7d; 
0x0015a1da: ret 0xbb; 
0x00037e06: ret 0xbc89; 
0x000c8667: ret 0xbd39; 
0x00070b40: ret 0xbd74; 
0x0005ab16: ret 0xbd83; 
0x0013d504: ret 0xbd8d; 
0x0006006d: ret 0xbe08; 
0x0005f779: ret 0xbe0f; 
0x001163f9: ret 0xbe75; 
0x0007941a: ret 0xbe7; 
0x000c5e7b: ret 0xbeb; 
0x00029fcf: ret 0xbeeb; 
0x0011940a: ret 0xbf7; 
0x0003b0b5: ret 0xc031; 
0x0013bb19: ret 0xc069; 
0x0002c20a: ret 0xc083; 
0x0009ac93: ret 0xc084; 
0x0002e51b: ret 0xc085; 
0x000a29e3: ret 0xc0be; 
0x00035c55: ret 0xc0d9; 
0x00022643: ret 0xc101; 
0x000403ac: ret 0xc102; 
0x000e9adc: ret 0xc104; 
0x00053282: ret 0xc108; 
0x00127d76: ret 0xc110; 
0x0004a4bd: ret 0xc121; 
0x00071d0f: ret 0xc129; 
0x0004baf7: ret 0xc139; 
0x000caa81: ret 0xc169; 
0x00083259: ret 0xc172; 
0x000f2480: ret 0xc183; 
0x00032b7c: ret 0xc189; 
0x0019c509: ret 0xc208; 
0x0008d207: ret 0xc231; 
0x0003b232: ret 0xc269; 
0x000cc5b2: ret 0xc26b; 
0x000ced44: ret 0xc281; 
0x000a1645: ret 0xc283; 
0x0008c963: ret 0xc289; 
0x00192b69: ret 0xc2bb; 
0x0007dd1a: ret 0xc2e7; 
0x00091c28: ret 0xc2e8; 
0x0003d9c8: ret 0xc301; 
0x000ea37b: ret 0xc339; 
0x0009bfc4: ret 0xc35b; 
0x000b5cb4: ret 0xc35f; 
0x000831d7: ret 0xc372; 
0x00091255: ret 0xc3c3; 
0x0009b1f5: ret 0xc3eb; 
0x000643da: ret 0xc44; 
0x001193ba: ret 0xc47; 
0x00024fb1: ret 0xc483; 
0x0009db7a: ret 0xc487; 
0x00129ae8: ret 0xc589; 
0x0008da5a: ret 0xc5a7; 
0x00083742: ret 0xc5e8; 
0x000cdcca: ret 0xc601; 
0x0012cacd: ret 0xc629; 
0x0014d57d: ret 0xc683; 
0x0003534d: ret 0xc689; 
0x000238ab: ret 0xc6; 
0x0015d91a: ret 0xc6e7; 
0x0013efe7: ret 0xc701; 
0x00034c54: ret 0xc702; 
0x00029725: ret 0xc704; 
0x00152b97: ret 0xc708; 
0x0009cad0: ret 0xc72; 
0x000a1dcb: ret 0xc739; 
0x0008a6c0: ret 0xc74; 
0x0019c2a1: ret 0xc789; 
0x0009acf4: ret 0xc801; 
0x0007591c: ret 0xc883; 
0x000223e4: ret 0xc889; 
0x0014bb9c: ret 0xc8c1; 
0x0009e287: ret 0xc8d; 
0x0008a834: ret 0xc931; 
0x00084d0b: ret 0xc983; 
0x00069e9b: ret 0xc985; 
0x000438f3: ret 0xc; 
0x00140e28: ret 0xca00; 
0x0002c38c: ret 0xca08; 
0x000ba9d4: ret 0xca19; 
0x00173465: ret 0xca29; 
0x001704aa: ret 0xca39; 
0x0008c541: ret 0xca81; 
0x00083489: ret 0xca83; 
0x00095156: ret 0xcac1; 
0x0011cd26: ret 0xcad8; 
0x0019b9ad: ret 0xcb11; 
0x000f4e22: ret 0xcb75; 
0x00103fcd: ret 0xcb8; 
0x0005933a: ret 0xcc7; 
0x000d41c6: ret 0xcde9; 
0x00083867: ret 0xce72; 
0x0002415a: ret 0xce80; 
0x0004d13a: ret 0xcec7; 
0x0004d0aa: ret 0xcf57; 
0x000849fe: ret 0xcf72; 
0x0015a240: ret 0xcfd; 
0x000dcffa: ret 0xd007; 
0x00071021: ret 0xd008; 
0x00071000: ret 0xd009; 
0x000c0b5a: ret 0xd020; 
0x000cb36a: ret 0xd069; 
0x000f5b0d: ret 0xd075; 
0x00030ce5: ret 0xd089; 
0x000ee9d2: ret 0xd101; 
0x001313ea: ret 0xd108; 
0x00043cae: ret 0xd120; 
0x000cf6cd: ret 0xd129; 
0x0002e291: ret 0xd139; 
0x000ea064: ret 0xd17f; 
0x00028f23: ret 0xd184; 
0x0004a4b9: ret 0xd189; 
0x000ed637: ret 0xd201; 
0x00094d85: ret 0xd231; 
0x00083c13: ret 0xd272; 
0x000401f8: ret 0xd284; 
0x00123333: ret 0xd285; 
0x0007cd5a: ret 0xd2a7; 
0x0007ccc0: ret 0xd2e9; 
0x00085140: ret 0xd2f7; 
0x00050b5a: ret 0xd301; 
0x0019a699: ret 0xd304; 
0x000408d1: ret 0xd31d; 
0x00038633: ret 0xd321; 
0x000cf9be: ret 0xd329; 
0x000cba8e: ret 0xd338; 
0x000ee8cb: ret 0xd339; 
0x000dccaa: ret 0xd357; 
0x000caa7b: ret 0xd369; 
0x00084e02: ret 0xd372; 
0x000f51aa: ret 0xd375; 
0x0019999b: ret 0xd389; 
0x00052a7c: ret 0xd439; 
0x000e9e19: ret 0xd473; 
0x00085378: ret 0xd572; 
0x00148834: ret 0xd589; 
0x0005cee3: ret 0xd629; 
0x00149aa2: ret 0xd639; 
0x0012c9c6: ret 0xd63b; 
0x000449ef: ret 0xd689; 
0x000ca4d5: ret 0xd719; 
0x0007cfb7: ret 0xd739; 
0x000963d5: ret 0xd789; 
0x00026e5c: ret 0xd7e9; 
0x0005b9a4: ret 0xd801; 
0x0015c7ea: ret 0xd817; 
0x000c1de3: ret 0xd839; 
0x000302d8: ret 0xd889; 
0x00035bc5: ret 0xd8f7; 
0x000d1371: ret 0xd929; 
0x00070ddc: ret 0xd989; 
0x0019a3ee: ret 0xd9f7; 
0x00045372: ret 0xd; 
0x000f555f: ret 0xda01; 
0x00099447: ret 0xda21; 
0x0007ce99: ret 0xda29; 
0x00096038: ret 0xda39; 
0x000f67a3: ret 0xda75; 
0x000cb435: ret 0xda81; 
0x0008df17: ret 0xdaf7; 
0x000ab14e: ret 0xdb31; 
0x0007c4ba: ret 0xdb47; 
0x000b7c28: ret 0xdb85; 
0x0010ab27: ret 0xdc73; 
0x0009c37a: ret 0xdc87; 
0x000e8ec9: ret 0xdceb; 
0x0015c2ea: ret 0xdd17; 
0x000eea6e: ret 0xdd39; 
0x0009c2ba: ret 0xdd47; 
0x0009c27a: ret 0xdd87; 
0x0009c23a: ret 0xddc7; 
0x0009c1fa: ret 0xde07; 
0x0009c1aa: ret 0xde57; 
0x000bc65a: ret 0xde89; 
0x0009c15a: ret 0xdea7; 
0x0011f18f: ret 0xdeb; 
0x0009c0ba: ret 0xdf47; 
0x000d10ea: ret 0xdf89; 
0x0009c06a: ret 0xdf97; 
0x0009c01a: ret 0xdfe7; 
0x0009bfda: ret 0xe027; 
0x0011f28d: ret 0xe075; 
0x0009bf8a: ret 0xe077; 
0x00026ee0: ret 0xe083; 
0x000c454d: ret 0xe089; 
0x0009bf4a: ret 0xe0b7; 
0x0015bfd0: ret 0xe0c1; 
0x0009bf0a: ret 0xe0f7; 
0x0012beca: ret 0xe137; 
0x0002b7d3: ret 0xe183; 
0x0007be3a: ret 0xe1c7; 
0x001574ec: ret 0xe1e9; 
0x00196105: ret 0xe280; 
0x00034ea2: ret 0xe281; 
0x00028618: ret 0xe283; 
0x00084961: ret 0xe2c1; 
0x00114bdb: ret 0xe2e9; 
0x00085a47: ret 0xe372; 
0x000529e3: ret 0xe381; 
0x00023f18: ret 0xe383; 
0x000ec2e3: ret 0xe3eb; 
0x000e759b: ret 0xe581; 
0x00150e12: ret 0xe589; 
0x00144140: ret 0xe5e; 
0x0002d24f: ret 0xe683; 
0x000fcc2a: ret 0xe74; 
0x0019c50b: ret 0xe75; 
0x000f39c4: ret 0xe775; 
0x000ca923: ret 0xe7f7; 
0x00043a39: ret 0xe801; 
0x0009957a: ret 0xe821; 
0x0002398c: ret 0xe852; 
0x000cd770: ret 0xe856; 
0x0011aa02: ret 0xe857; 
0x000597ed: ret 0xe883; 
0x00085acc: ret 0xe889; 
0x0004ae50: ret 0xe89; 
0x000f6645: ret 0xe8c0; 
0x0004b06c: ret 0xe8c1; 
0x0009b8ab: ret 0xe901; 
0x0014ed43: ret 0xe90c; 
0x0011cab4: ret 0xe975; 
0x0002734d: ret 0xe983; 
0x000f01e4: ret 0xe989; 
0x0005ec5c: ret 0xe9; 
0x000edf14: ret 0xe9c0; 
0x00085b4a: ret 0xe; 
0x0012c1fa: ret 0xea29; 
0x0007a6eb: ret 0xea39; 
0x0003b58a: ret 0xea77; 
0x00041ab9: ret 0xea81; 
0x000b3a95: ret 0xea83; 
0x000d06b6: ret 0xeac0; 
0x0005874b: ret 0xeac1; 
0x0008e9ac: ret 0xead1; 
0x0017298a: ret 0xead7; 
0x000a16c1: ret 0xeb01; 
0x00119c39: ret 0xeb03; 
0x000e7bcd: ret 0xeb04; 
0x0009b4da: ret 0xeb27; 
0x00119bb6: ret 0xeb53; 
0x0016a27a: ret 0xeb5e; 
0x0008c308: ret 0xeb75; 
0x0009b48a: ret 0xeb77; 
0x0004ae99: ret 0xeb83; 
0x0009b44a: ret 0xebb7; 
0x0009b3fa: ret 0xec07; 
0x000558a9: ret 0xec75; 
0x0009b38a: ret 0xec77; 
0x0002556e: ret 0xec83; 
0x000593a6: ret 0xed01; 
0x0015ed6a: ret 0xed18; 
0x0002b528: ret 0xed31; 
0x0016357b: ret 0xed85; 
0x0002b25a: ret 0xeda7; 
0x000de6a7: ret 0xee75; 
0x00054697: ret 0xee7f; 
0x0008aa80: ret 0xee9; 
0x000db13a: ret 0xeec7; 
0x0003a8e2: ret 0xef76; 
0x000ec44e: ret 0xef7f; 
0x000eb934: ret 0xef89; 
0x0009b04a: ret 0xefb7; 
0x0019c470: ret 0xefc1; 
0x0010b01a: ret 0xefe7; 
0x00116128: ret 0xeff0; 
0x0004085a: ret 0xf001; 
0x00120c74: ret 0xf009; 
0x00196e1f: ret 0xf00; 
0x0003189e: ret 0xf01; 
0x000b4431: ret 0xf029; 
0x00078640: ret 0xf02; 
0x0009afca: ret 0xf037; 
0x000509b9: ret 0xf039; 
0x00196fa1: ret 0xf03; 
0x000a2626: ret 0xf04; 
0x00196fb1: ret 0xf05; 
0x000c3cf8: ret 0xf075; 
0x0009af8a: ret 0xf077; 
0x0004c856: ret 0xf083; 
0x0003d719: ret 0xf089; 
0x00026d77: ret 0xf08; 
0x000ce309: ret 0xf0; 
0x000852a5: ret 0xf0b8; 
0x0011417a: ret 0xf0bf; 
0x0009af3a: ret 0xf0c7; 
0x00142ac1: ret 0xf0c; 
0x00095011: ret 0xf0f; 
0x0007d64f: ret 0xf101; 
0x0006d151: ret 0xf10; 
0x000e2248: ret 0xf139; 
0x0002e0bc: ret 0xf175; 
0x00053837: ret 0xf189; 
0x0009eeeb: ret 0xf201; 
0x00057434: ret 0xf20; 
0x000fec8a: ret 0xf214; 
0x00199c8d: ret 0xf27e; 
0x0008c09b: ret 0xf283; 
0x00026140: ret 0xf289; 
0x000f427a: ret 0xf2be; 
0x0010cc3b: ret 0xf2e9; 
0x0003b234: ret 0xf31d; 
0x000ed2ca: ret 0xf32e; 
0x00118576: ret 0xf372; 
0x000957ba: ret 0xf375; 
0x00087e8e: ret 0xf389; 
0x0003ab5e: ret 0xf3c3; 
0x0005279a: ret 0xf40; 
0x0009bdce: ret 0xf474; 
0x00066589: ret 0xf475; 
0x00052851: ret 0xf50; 
0x00199cda: ret 0xf572; 
0x00124afa: ret 0xf5dc; 
0x000b4421: ret 0xf601; 
0x0016e079: ret 0xf604; 
0x0018b174: ret 0xf608; 
0x0016f791: ret 0xf60; 
0x00109d5f: ret 0xf631; 
0x000a2937: ret 0xf66; 
0x0004f895: ret 0xf672; 
0x000a239f: ret 0xf685; 
0x0011a97a: ret 0xf687; 
0x0006a93a: ret 0xf6c7; 
0x0019aa0e: ret 0xf6e9; 
0x0009d9fb: ret 0xf739; 
0x0008d791: ret 0xf75b; 
0x0009cb9e: ret 0xf775; 
0x0010725a: ret 0xf7b4; 
0x0011a82a: ret 0xf7d7; 
0x00043633: ret 0xf7ff; 
0x0009fa25: ret 0xf800; 
0x0005941e: ret 0xf801; 
0x00104892: ret 0xf80; 
0x0011a7da: ret 0xf827; 
0x000da7ca: ret 0xf837; 
0x0014164f: ret 0xf839; 
0x0002c6ea: ret 0xf883; 
0x00050de0: ret 0xf889; 
0x000dae9f: ret 0xf8c1; 
0x0009d1de: ret 0xf901; 
0x00024d7a: ret 0xf92b; 
0x0009b366: ret 0xf943; 
0x0011fe83: ret 0xf94d; 
0x00120173: ret 0xf94f; 
0x0012077e: ret 0xf952; 
0x00058e8a: ret 0xf962; 
0x000e205c: ret 0xf980; 
0x00031ead: ret 0xf981; 
0x000f19b5: ret 0xf983; 
0x00077cbf: ret 0xf989; 
0x00075af8: ret 0xf; 
0x0009b112: ret 0xfa01; 
0x0019b421: ret 0xfa09; 
0x000cb35e: ret 0xfa19; 
0x00055105: ret 0xfa29; 
0x000de27a: ret 0xfa2c; 
0x0007d706: ret 0xfa39; 
0x0007b3f8: ret 0xfa4e; 
0x0007a5aa: ret 0xfa57; 
0x000f6553: ret 0xfa73; 
0x000543ef: ret 0xfa80; 
0x00024cbe: ret 0xfa83; 
0x0009a0b1: ret 0xfa89; 
0x0002ed15: ret 0xfac1; 
0x000cd84a: ret 0xfae8; 
0x0003892a: ret 0xfb0; 
0x000de1aa: ret 0xfb4d; 
0x0010a47a: ret 0xfb87; 
0x000fb326: ret 0xfb89; 
0x0017a51a: ret 0xfb9a; 
0x000d13d4: ret 0xfbc1; 
0x001420fa: ret 0xfc8d; 
0x0003b393: ret 0xfc; 
0x000e48ca: ret 0xfd04; 
0x000f922a: ret 0xfdf5; 
0x000d2f9e: ret 0xfe29; 
0x000478fa: ret 0xfe80; 
0x000323c9: ret 0xfe81; 
0x0002afcf: ret 0xfe83; 
0x0019838a: ret 0xfe89; 
0x0010442f: ret 0xff00; 
0x0003468c: ret 0xff03; 
0x000942da: ret 0xff04; 
0x0014976a: ret 0xff08; 
0x000850a7: ret 0xff0; 
0x00035dd1: ret 0xff25; 
0x00199c11: ret 0xff31; 
0x00192b64: ret 0xff3; 
0x0016f69e: ret 0xff3c; 
0x000583b5: ret 0xff50; 
0x00069754: ret 0xff52; 
0x00043c4c: ret 0xff56; 
0x0012813d: ret 0xff80; 
0x00060c85: ret 0xff83; 
0x0011cbba: ret 0xff85; 
0x000914ea: ret 0xffa5; 
0x00021e37: ret 0xffb8; 
0x0002485c: ret 0xffba; 
0x000449c2: ret 0xffbf; 
0x00063f7a: ret 0xffc6; 
0x0005e2ae: ret 0xffcb; 
0x0009857a: ret 0xffcf; 
0x0015589a: ret 0xffd4; 
0x0006d44c: ret 0xffe5; 
0x0006d14a: ret 0xffe6; 
0x000591aa: ret 0xffe8; 
0x0006a363: ret 0xffed; 
0x000439b4: ret 0xffee; 
0x000f7493: ret 0xfff0; 
0x000f122a: ret 0xfff1; 
0x00032fae: ret 0xfff2; 
0x000fd631: ret 0xfff3; 
0x000444a4: ret 0xfff4; 
0x000ba942: ret 0xfff5; 
0x0016b0de: ret 0xfff6; 
0x00050d73: ret 0xfff7; 
0x00057945: ret 0xfff8; 
0x0006ca51: ret 0xfff9; 
0x00068453: ret 0xfffa; 
0x000326ae: ret 0xfffb; 
0x00035821: ret 0xfffc; 
0x0002799e: ret 0xfffd; 
0x0002013a: ret 0xfffe; 
0x0002003a: ret 0xffff; 
0x0002a2a6: ret 1; 
0x0002a94a: ret 2; 
0x000b4e47: ret 3; 
0x00036623: ret 4; 
0x00030e2e: ret 5; 
0x0005b7dc: ret 6; 
0x0002685f: ret 7; 
0x000c93da: ret 8; 
0x000202cb: ret; 
0x000df365: retf 0; add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x0015b1e4: retf 0x1089; mov eax, 1; add esp, 8; pop ebx; ret; 
0x00099a27: retf 0x13; add byte ptr [ebx - 0x72d3db84], cl; xchg dword ptr [ebx + edx*4 - 7], ecx; dec dword ptr [ebp - 0x6bf3a69]; call dword ptr [eax - 0x73]; 
0x00080fff: retf 0x1e73; movzx eax, byte ptr [edx]; pop ebx; pop esi; ret; 
0x000b3a21: retf 0x2c76; add eax, ecx; ret; 
0x00073b4b: retf 0x4376; sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x000b72ef: retf 0x474; test edx, edx; jne 0xb72e8; ret; 
0x0009167e: retf 0x4c8b; and al, 0x18; call dword ptr gs:[0x10]; 
0x0007f97b: retf 0x5276; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x00071482: retf 0x5376; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x00120ee3: retf 0x5d5f; ret; 
0x00071d13: retf 0x6a76; sub esp, 4; push edi; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x00056023: retf 0x748d; add dh, dh; ret; 
0x00111a79: retf 0x7c8b; and al, 0x1c; sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x00070fbe: retf 0x860f; imul eax, dword ptr [ecx], 0; add byte ptr [ebx + 0x6a08ec], al; push esi; call dword ptr [ebx + 8]; 
0x001167d3: retf 0x8930; push eax; or byte ptr [edx + 0x100], bh; mov word ptr [eax + 0x16], dx; ret; 
0x0004f703: retf 0x950f; ret; 
0x0019d0de: retf 0x9c89; and al, 0x88; add byte ptr [eax], al; add byte ptr [ecx], cl; ret 0xb60f; 
0x000e0c97: retf 0xb60f; or byte ptr [ecx + ecx*8 - 0x3fce208b], al; pop ebx; ret; 
0x00197b6e: retf 0xc801; jmp 0x1980b0; lea esi, [esi]; lea esi, [esi]; xor eax, eax; ret; 
0x000b402e: retf 0xc801; ret; 
0x000b37cf: retf 0xc839; ja 0xb37e0; sub edi, 0x10; add eax, edi; pop edi; ret; 
0x00080213: retf 0xd039; jbe 0x80240; sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x000850d2: retf 0xd101; out dx, al; je 0x850f1; xor esi, esi; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000855da: retf 0xd101; out dx, al; je 0x855f6; xor esi, esi; mov eax, edi; call dword ptr gs:[0x10]; 
0x000b4027: retf 0xd285; je 0xb4000; bsr ecx, edx; add eax, ecx; ret; 
0x000de3cd: retf 0xd285; je 0xde3d9; test eax, eax; jne 0xde3d9; pop ecx; jmp ecx; 
0x0008d650: retf 0xe902; ret 0xfffc; 
0x00152ba1: retf 0xec75; add esp, 8; pop ebx; ret; 
0x00165f62: retf 0xeca6; call dword ptr [eax - 0x73]; 
0x000f8ef2: retf 0xf36a; dec dword ptr [ebx - 0x18f43]; dec dword ptr [ebp - 0x6656b79]; call dword ptr [eax + 0x68]; 
0x000ca04a: retf 0xf375; ret; 
0x00076421: retf 0xf477; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019841d: retf 0xf66; xlatb; ret; 
0x0003b22d: retf 0xfac1; adc byte ptr [ecx], ch; ret 0xc269; 
0x000cfa45: retf 0xfac1; add ch, byte ptr [ecx]; ret 0x48d; 
0x00166b22: retf 0xfcce; jmp dword ptr [esi - 0x70]; 
0x0009c09f: retf 0xfff5; cmove eax, edx; pop ebx; ret; 
0x0006e8a9: retf 0xfff8; add edx, ebx; jmp edx; 
0x0016d16e: retf 0xfff9; add esp, 0x1c; ret; 
0x00192214: retf 0xfffe; jmp dword ptr [esi - 0x70]; 
0x001926ab: retf 0xffff; jmp dword ptr [esi + 0xf]; 
0x001926ab: retf 0xffff; jmp dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0008b44a: retf; aas; stc; call dword ptr [eax - 0x18]; 
0x00152821: retf; adc esi, edi; dec dword ptr [ecx - 0x737f723a]; scasb al, byte ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x00193928: retf; add cl, byte ptr [edi]; xchg esp, eax; ret; 
0x0014e8c6: retf; bnd jmp dword ptr [esi - 0x70]; 
0x00073ca0: retf; cli; jmp dword ptr [esi - 0x70]; 
0x00104c09: retf; dec dword ptr [ecx - 0x4725763f]; rol byte ptr [eax], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00123708: retf; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x1b3; int 0x80; 
0x0009c18a: retf; out 0xff, eax; cmovne eax, edx; ret; 
0x0008bc5e: retf; pop ebx; mov eax, 0x16; pop esi; pop edi; ret; 
0x0013cee5: retf; pop esp; stc; call dword ptr [eax - 0x18]; 
0x0002f984: retf; push cs; add byte ptr [ebx + 0xfe910c4], al; or edi, edi; call dword ptr [eax - 0x73]; 
0x0010c4b1: retf; ret; 
0x001985a4: retf; test al, 0xf0; jne 0x198530; lea eax, [edi - 0x10]; pop edi; ret; 
0x000e17ef: rol byte ptr [0x878d0000], 0xc0; inc edi; stc; call dword ptr [eax - 0x73]; 
0x001569f9: rol byte ptr [eax + 0x440f0038], cl; ret 0x5e5b; 
0x0003ac4d: rol byte ptr [eax + 0xd75003a], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0008c028: rol byte ptr [eax + 0xf00197d], cl; xchg ebp, eax; ret 0xe2c1; 
0x0008c77f: rol byte ptr [eax + 0xf00197f], cl; xchg ebp, eax; ret 0xe2c1; 
0x00141b44: rol byte ptr [eax + eax*8 + 0x5e5b0775], 0x5f; ret; 
0x001a1245: rol byte ptr [eax + eax*8 - 0x3b7cf98b], 4; pop ebx; pop esi; ret; 
0x000ac04a: rol byte ptr [eax + eax], cl; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00169d39: rol byte ptr [eax - 0x387f0000], 1; ret; 
0x0006974e: rol byte ptr [eax - 0x6bf0a705], cl; ret 0xff52; 
0x0009b167: rol byte ptr [eax - 0x6bf0cf05], cl; ret 0xb60f; 
0x0009b10c: rol byte ptr [eax - 0x6bf0cf07], cl; ret 0xfa01; 
0x00156a3f: rol byte ptr [eax - 0x7bf0ffc6], 0x2a; add eax, dword ptr [eax]; add byte ptr [ebx - 0x7c72f314], al; les esp, ptr [edx - 7]; call dword ptr [eax - 0x18]; 
0x000677d9: rol byte ptr [eax - 0x89a43], cl; call ptr [eax + 0xf]; xchg esp, eax; ret 0x5352; 
0x000ca041: rol byte ptr [eax*4 - 0x74f68b2e], 0x10; cmp edx, ecx; jne 0xca040; ret; 
0x000ca078: rol byte ptr [eax*4 - 0x760d8a2e], 0xc8; pop ebx; ret; 
0x000dda2f: rol byte ptr [eax], 0; add byte ptr [ebx + 0x5e5b64c4], al; ret; 
0x0016c1bc: rol byte ptr [eax], 0; add byte ptr [ebx - 0x6c72f714], al; clc; stc; call dword ptr [edx - 0x77]; 
0x00154d94: rol byte ptr [eax], 0; add byte ptr [ebx], al; je 0x154dbf; cmp al, 0x89; ret; 
0x0016a555: rol byte ptr [eax], 0; add byte ptr [ecx - 0xb77b], cl; dec dword ptr [ecx - 0xbb6b]; jmp dword ptr [ebp - 0x5f]; 
0x0017b097: rol byte ptr [eax], 0xf7; ret 0xf; 
0x000df746: rol byte ptr [eax], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011817e: rol byte ptr [eax], 1; add byte ptr [eax], al; mov ebx, edx; call dword ptr gs:[0x10]; 
0x00020f43: rol byte ptr [eax], 1; je 0x20f64; sub esp, 0xc; push dword ptr [ebp - 0x34]; call dword ptr [ebp - 0x38]; 
0x000df7f6: rol byte ptr [eax], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011825e: rol byte ptr [eax], cl; add byte ptr [eax], al; mov ebx, edx; call dword ptr gs:[0x10]; 
0x0003ab84: rol byte ptr [eax], cl; neg edx; cmovs edx, ebx; cmovs eax, ecx; pop ebx; ret; 
0x00021c52: rol byte ptr [eax], cl; neg edx; ret; 
0x0011d401: rol byte ptr [ebp + 0x5b0a74d2], 0x5e; pop edi; ret; 
0x000b4370: rol byte ptr [ebp + 0x663b75c0], 0xf; xlatb; ret 0xc085; 
0x0009b468: rol byte ptr [ebp - 0x1a7f0019], 1; add cl, byte ptr [ebp - 0x9ee3f6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a02d7: rol byte ptr [ebp - 0x3a76f040], 1; add byte ptr [eax], al; add byte ptr [ebx + 0x4d89ac55], cl; aam 0x29; ret 0xb48d; 
0x0007b05c: rol byte ptr [ebp - 0x3d6af040], cl; mov eax, edx; ret; 
0x0012c84b: rol byte ptr [ebp - 0x3db7f040], cl; add esp, 8; pop ebx; ret; 
0x00124096: rol byte ptr [ebp - 0x7c398b2e], 0xec; or byte ptr [ebp - 0x65d0f79], cl; call dword ptr [eax + 0x55]; 
0x0015b01e: rol byte ptr [ebp - 0x7cb28b40], cl; les ecx, ptr [eax]; mov eax, edx; pop ebx; ret; 
0x000dd93f: rol byte ptr [ebp - 0xfbbf001], 0xb8; jb 0xdd948; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000eab04: rol byte ptr [ebx + 0x2f740afb], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000947f1: rol byte ptr [ebx + 0x440f02f8], cl; ret 0xec83; 
0x00049046: rol byte ptr [ebx + 0x440ffff8], cl; ret 0x3c83; 
0x000dd662: rol byte ptr [ebx + 0x440ffff8], cl; ret 0xc35b; 
0x000a5f87: rol byte ptr [ebx + 0x4a8d02eb], 1; add cl, byte ptr [edi]; test dword ptr [0x5bffffff], edi; ret; 
0x000a600d: rol byte ptr [ebx + 0x4a8d06eb], 1; push es; jne 0xa5ed1; pop ebx; ret; 
0x000a602b: rol byte ptr [ebx + 0x4a8d07eb], 1; pop es; jne 0xa5ed1; pop ebx; ret; 
0x000a60af: rol byte ptr [ebx + 0x4a8d0beb], 1; or ecx, dword ptr [edi]; test dword ptr [0x5bfffffe], edx; ret; 
0x000a6123: rol byte ptr [ebx + 0x4a8d0eeb], 1; push cs; jne 0xa5ed1; pop ebx; ret; 
0x0004b8f7: rol byte ptr [ebx + 0x4e8d10c4], 1; add al, 3; add cl, byte ptr [edi]; xchg edx, eax; ret 0x689; 
0x0007d20c: rol byte ptr [ebx + 0x525004ec], 1; push esi; call ecx; 
0x0003b2b6: rol byte ptr [ebx + 0x5e5b04c4], 0x5f; pop ebp; ret; 
0x0004a107: rol byte ptr [ebx + 0x5e5b0cc4], 0x5f; pop ebp; ret; 
0x00056b97: rol byte ptr [ebx + 0x5e5b10c4], 0x5f; pop ebp; ret; 
0x0011ccc8: rol byte ptr [ebx + 0x5e5b10c4], 0x5f; ret; 
0x0011d788: rol byte ptr [ebx + 0x5e5b10c4], cl; pop edi; ret; 
0x0009cade: rol byte ptr [ebx + 0x5e5b18c4], 1; pop edi; pop ebp; ret; 
0x00084adf: rol byte ptr [ebx + 0x5e5b1cc4], 0x5f; pop ebp; ret; 
0x00091a91: rol byte ptr [ebx + 0x5e5b1cc4], cl; pop edi; pop ebp; ret; 
0x0007f1c2: rol byte ptr [ebx + 0x5e5b2cc4], 0x5f; pop ebp; ret; 
0x000ce50d: rol byte ptr [ebx + 0x5e5b2cc4], cl; pop edi; pop ebp; ret; 
0x0003cc19: rol byte ptr [ebx + 0x5e5b3cc4], 0x5f; pop ebp; ret; 
0x0003d78b: rol byte ptr [ebx + 0x5e5b4cc4], cl; pop edi; pop ebp; ret; 
0x000a2727: rol byte ptr [ebx + 0x5e5f10c0], 1; ret; 
0x000a2734: rol byte ptr [ebx + 0x5e5f20c0], 1; ret; 
0x000a2741: rol byte ptr [ebx + 0x5e5f30c0], 1; ret; 
0x000a2594: rol byte ptr [ebx + 0x77740fa], 0x8b; test byte ptr [ecx - 0x8a0], dl; ret; 
0x000a2564: rol byte ptr [ebx + 0x77740fa], 0x8b; test byte ptr [ecx - 0x9c0], dl; ret; 
0x000f17d5: rol byte ptr [ebx + eax*4], 0xc2; add al, 0x39; ret; 
0x00104e8a: rol byte ptr [ebx + edx*2], 0x8b; popfd; sar dh, 0xff; call dword ptr [eax + 0x51]; 
0x00160dd4: rol byte ptr [ebx - 0x137cef3c], 1; or byte ptr [ebp - 0xc950f7d], cl; call dword ptr [eax - 0x73]; 
0x0015e2e6: rol byte ptr [ebx - 0x137cef3c], 1; or byte ptr [ebp - 0xcc0af7d], cl; call dword ptr [eax - 0x73]; 
0x0004b184: rol byte ptr [ebx - 0x177cfd20], 1; ret; 
0x000de4e5: rol byte ptr [ebx - 0x1f7cfb3c], 0xc; pop ebx; pop esi; ret; 
0x0015b08a: rol byte ptr [ebx - 0x2f76f73c], cl; pop ebx; ret; 
0x00086659: rol byte ptr [ebx - 0x2ff60220], cl; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x0008fd67: rol byte ptr [ebx - 0x3b7cfd18], 0xc; ret; 
0x000792b2: rol byte ptr [ebx - 0x3b7cfe20], 1; adc al, 0x5b; pop esi; ret; 
0x000b3fc2: rol byte ptr [ebx - 0x3dfebf16], 0x7c; add eax, ecx; ret; 
0x000b3fd2: rol byte ptr [ebx - 0x3dfecf16], 0x7c; lea eax, es:[ecx + eax + 0x10]; ret; 
0x000b3fe2: rol byte ptr [ebx - 0x3dfedf16], 0x7c; push ss; lea eax, [ecx + eax + 0x20]; ret; 
0x000b3ff2: rol byte ptr [ebx - 0x3dfeef16], 0x7c; push es; lea eax, [ecx + eax + 0x30]; ret; 
0x0011961c: rol byte ptr [ebx - 0x3f7c0f20], 0x26; mov edx, dword ptr [edx - 0x134]; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; ret; 
0x000d7f97: rol byte ptr [ebx - 0x3fcef73c], cl; pop ebx; ret; 
0x000eab41: rol byte ptr [ebx - 0x3ffefb3c], 0x5b; pop esi; ret; 
0x001036e5: rol byte ptr [ebx - 0x47cfb14], cl; add cl, byte ptr [edi]; xchg esp, eax; ret 0xff52; 
0x0012189c: rol byte ptr [ebx - 0x49f0d33c], 0xc0; neg eax; ret; 
0x000f831b: rol byte ptr [ebx - 0x49f0d33c], 0xc0; ret; 
0x0012185b: rol byte ptr [ebx - 0x49f0e33c], 0xc0; neg eax; ret; 
0x0015c838: rol byte ptr [ebx - 0x49f0e33c], 0xc0; ret; 
0x0008fe95: rol byte ptr [ebx - 0x49f0f33c], 0xc0; lea eax, [eax + eax + 2]; ret; 
0x000481a7: rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x0007e6f3: rol byte ptr [ebx - 0x49f0f73c], 0xc0; pop ebx; neg eax; ret; 
0x0015aad9: rol byte ptr [ebx - 0x49f0f73c], 0xc0; pop ebx; ret; 
0x0015bc7e: rol byte ptr [ebx - 0x49f0fb3c], 0xc0; pop ebx; pop esi; ret; 
0x0009a55a: rol byte ptr [ebx - 0x6114ef3c], 1; sub esp, 0xc; push dword ptr [esp + 0x14]; call eax; 
0x0009b0ff: rol byte ptr [ebx - 0x69f0f606], 1; ret 0xb60f; 
0x00171f91: rol byte ptr [ebx - 0x6bf00008], cl; ret 0x1389; 
0x001658d2: rol byte ptr [ebx - 0x6bf0fd08], cl; ret 0xf883; 
0x00138bc5: rol byte ptr [ebx - 0x77ca816], 1; or dword ptr [edi], ecx; inc edi; ret 0xf983; 
0x000980e5: rol byte ptr [ebx - 0x78f0f007], 1; mov eax, dword ptr [0x9000000]; ret; 
0x000848f5: rol byte ptr [ebx - 0x7a72f314], cl; mov byte ptr [esi - 7], bh; call dword ptr [eax - 0x18]; 
0x000438ed: rol byte ptr [ebx - 0x7bf0eb08], 1; ret 0xc; 
0x0010487a: rol byte ptr [ebx - 0x7c99cf20], 1; clc; adc byte ptr [edi], cl; test byte ptr [eax - 0x9fffffc], bl; ret 0xf20; 
0x00155325: rol byte ptr [ebx - 0x7f72f714], 1; into; popal; stc; call dword ptr [eax + 0x56]; 
0x00077502: rol byte ptr [ebx - 0x95f714], 0xff; aaa; call dword ptr [eax + 0xc]; 
0x00197746: rol byte ptr [ebx], 0x5f; ret; 
0x0015a36a: rol byte ptr [ebx], 0x83; ret 0x8303; 
0x000dff06: rol byte ptr [ecx + 0x1cd1fa], 0; setne al; ret; 
0x0006fd34: rol byte ptr [ecx + 0x85fa], 0; ja 0x6fd44; mov eax, dword ptr [ecx + edx*4 - 0xbe0]; ret; 
0x000dfeb6: rol byte ptr [ecx + 0xadf5fa], 0; setne al; ret; 
0x000fbc61: rol byte ptr [ecx + 0xc0fefb], cl; add byte ptr [edi], cl; xchg ebp, eax; ret 0x548d; 
0x00133a95: rol byte ptr [ecx + 0xe1], 0xc0; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x00133a9b: rol byte ptr [ecx + 0xf9], 0x80; cmove eax, edx; ret; 
0x0015b197: rol byte ptr [ecx + ecx*4], 0x43; adc byte ptr [ebx + 0x1b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x000b5e3f: rol byte ptr [ecx + ecx*4], 3; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0003e730: rol byte ptr [ecx + ecx*8 - 0x7c3dbbf1], cl; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000b72ec: rol byte ptr [ecx + edi], 0xca; je 0xb72f6; test edx, edx; jne 0xb72e8; ret; 
0x000dfeeb: rol byte ptr [ecx - 0x52053106], 0x1b; setne al; ret; 
0x00088fc7: rol byte ptr [ecx], 0; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax + eax*4 - 7], dl; call dword ptr [eax - 0x18]; 
0x00058388: rol byte ptr [ecx], 0; add cl, ch; call dword ptr [edi]; 
0x00054692: rol byte ptr [ecx], 0x29; fidivr dword ptr [ecx]; ret 0xee7f; 
0x0010c854: rol byte ptr [ecx], 0x31; sar byte ptr [ebx], cl; inc ebp; or byte ptr [edi], cl; inc esp; ret 0x4589; 
0x000e8fa1: rol byte ptr [ecx], 0x39; lds esi, ptr [edx + ebx + 0x39]; ret; 
0x0009ba31: rol byte ptr [ecx], 0x39; ret 0x1976; 
0x000514c1: rol byte ptr [ecx], 0x39; ret 0x3a74; 
0x000de699: rol byte ptr [ecx], 0x39; ret 0xb74; 
0x0009cacd: rol byte ptr [ecx], 0x39; ret 0xc72; 
0x000f67a0: rol byte ptr [ecx], 0x39; ret 0xda75; 
0x0011f28a: rol byte ptr [ecx], 0x39; ret 0xe075; 
0x000f39c1: rol byte ptr [ecx], 0x39; ret 0xe775; 
0x0011cab1: rol byte ptr [ecx], 0x39; ret 0xe975; 
0x000de6a4: rol byte ptr [ecx], 0x39; ret 0xee75; 
0x000ec44b: rol byte ptr [ecx], 0x39; ret 0xef7f; 
0x0003d481: rol byte ptr [ecx], 0x39; ret; 
0x000ea05c: rol byte ptr [ecx], 0x39; ror dword ptr [edi], cl; dec esi; sar dword ptr [ecx], cl; ret 0xd17f; 
0x000b62fa: rol byte ptr [ecx], 0x50; push esi; lea eax, [esp + 0x40]; push eax; push dword ptr [edi]; call ebx; 
0x00197b01: rol byte ptr [ecx], 0x5f; ret; 
0x0009d489: rol byte ptr [ecx], 0x80; jo 0x9d48d; sub bh, byte ptr [ecx]; sal byte ptr [ebp - 0xb], 1; mov eax, ecx; ret; 
0x0009e084: rol byte ptr [ecx], 0x83; les ecx, ptr [ebx + ebp]; dec ebp; add byte ptr [ecx], ch; ret 0xd801; 
0x00092520: rol byte ptr [ecx], 0x83; ret 0x3910; 
0x000f189e: rol byte ptr [ecx], 0x83; ret 0x3b20; 
0x0010f90e: rol byte ptr [ecx], 0x83; ret 0x5201; 
0x000258c9: rol byte ptr [ecx], 0x83; ret 0x8801; 
0x000256aa: rol byte ptr [ecx], 0x83; ret 0x8901; 
0x0007e464: rol byte ptr [ecx], 0x83; ret 0x8b01; 
0x00024cd7: rol byte ptr [ecx], 0x83; ret; 
0x0009e850: rol byte ptr [ecx], 0x84; sar byte ptr [edx], cl; cmove eax, edx; ret; 
0x0009c96e: rol byte ptr [ecx], 0x89; add eax, dword ptr [ebx - 0xf76fb3c]; pop ebx; pop esi; ret; 
0x000943b4: rol byte ptr [ecx], 0x89; cmp ah, 1; add byte ptr [eax], al; ret; 
0x0013c0ac: rol byte ptr [ecx], 0x89; inc ebx; sbb byte ptr [ebx - 0x3776fb3c], al; pop ebx; pop esi; ret; 
0x000c4627: rol byte ptr [ecx], 0x89; inc ecx; or byte ptr [edi], cl; nop; ret 0x4e8b; 
0x00173ac5: rol byte ptr [ecx], 0x89; ret 0x5675; 
0x00130211: rol byte ptr [ecx], 0x89; ret 0xe2c1; 
0x0012c1f7: rol byte ptr [ecx], 0x89; ret 0xea29; 
0x00072a19: rol byte ptr [ecx], 0x8b; adc esi, esi; ret 0xf20; 
0x0012fe61: rol byte ptr [ecx], 0x8b; dec edx; add al, 0x83; ret 0x8518; 
0x000b3ee6: rol byte ptr [ecx], 0xc8; ret; 
0x000b424c: rol byte ptr [ecx], 0xd0; add eax, ecx; ret; 
0x000b43b2: rol byte ptr [ecx], 0xd0; ret; 
0x000b3867: rol byte ptr [ecx], 0xf8; pop edi; ret; 
0x000b39b5: rol byte ptr [ecx], 0xf8; sub eax, 0x10; pop edi; ret; 
0x000a1d61: rol byte ptr [ecx], 0xf; mov esi, 0xda390114; je 0xa1d60; pop ebx; ret; 
0x00195bfc: rol byte ptr [ecx], 1; add byte ptr [eax], al; lea eax, [edi + 0xf]; pop edi; ret; 
0x000a5cfc: rol byte ptr [ecx], 1; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x00094357: rol byte ptr [ecx], 1; add byte ptr [eax], al; ret; 
0x0004b85e: rol byte ptr [ecx], 1; ret 0x458b; 
0x00146e29: rol byte ptr [ecx], 1; ret; 
0x000a271b: rol byte ptr [ecx], cl; rcr byte ptr [edi + 0x5e], 1; ret; 
0x000f4959: rol byte ptr [ecx], cl; ret; 
0x000a2725: rol byte ptr [ecx], cl; rol byte ptr [ebx + 0x5e5f10c0], 1; ret; 
0x000a2732: rol byte ptr [ecx], cl; rol byte ptr [ebx + 0x5e5f20c0], 1; ret; 
0x000a273f: rol byte ptr [ecx], cl; rol byte ptr [ebx + 0x5e5f30c0], 1; ret; 
0x000ed6a9: rol byte ptr [ecx], cl; ror byte ptr [ecx], cl; ret 0x9674; 
0x000cd200: rol byte ptr [edi + 0x3d8883], 0; cmp eax, 1; jg 0xcd230; add esp, 8; pop ebx; ret; 
0x000e17fc: rol byte ptr [edi - 7], 1; call dword ptr [eax - 0x18]; 
0x00098248: rol byte ptr [edi], 0; add byte ptr [ebx + 0x3908245c], cl; ror dword ptr [edi], cl; xchg ebp, eax; ret 0xe083; 
0x00099d45: rol byte ptr [edi], 0; add byte ptr [ecx - 0x76dfdbbc], cl; ret; 
0x00097e4a: rol byte ptr [edi], 0; add byte ptr [ecx], bh; fisttp qword ptr [ebp - 0x6af0f798]; ret; 
0x000957bf: rol byte ptr [edi], 0; add byte ptr [ecx], bh; ret; 
0x0019776c: rol byte ptr [edi], 0x5f; ret; 
0x000b6700: rol byte ptr [edi], cl; add byte ptr [ebp - 0x669777e], cl; call dword ptr [eax - 0x73]; 
0x0004b079: rol byte ptr [edx], 0; add byte ptr [eax], al; call 0x4b030; add eax, ebx; jmp eax; 
0x000a1f67: rol byte ptr [edx], 0x5b; pop esi; pop edi; pop ebp; ret; 
0x00197b06: rol byte ptr [edx], 0x5f; ret; 
0x00197b1a: rol byte ptr [esi], 0x5f; ret; 
0x0008e567: rol cl, 0xe0; pop es; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x00133b5a: rol cl, 0xea; adc byte ptr [ecx + 0xf9], al; or byte ptr [edi], 0x44; ret 0x8dc3; 
0x00085353: rol cl, 1; call 0x893fc75d; clc; call dword ptr gs:[0x10]; 
0x000de78a: rol cl, cl; sti; jmp dword ptr [esi - 0x70]; 
0x000a2044: rol dh, 1; inc edx; add al, byte ptr [eax]; pop ebx; pop esi; ret; 
0x000c9e7a: rol dword ptr [eax + 0x20740fe1], 1; ret; 
0x000931c4: rol dword ptr [eax + 0x75], 0x20; add ebx, 1; mov eax, 0x115; call dword ptr gs:[0x10]; 
0x0018b0ec: rol dword ptr [eax + 0x75], 0x70; movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x0016df19: rol dword ptr [eax - 0x3effffff], 0xe9; add dh, bl; movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x00086d2d: rol dword ptr [eax], 0; add byte ptr [eax - 0x73], dl; xchg dh, bh; stc; call dword ptr [eax - 0x18]; 
0x00034f7b: rol dword ptr [eax], 0; add byte ptr [ebp - 0x6b42f55], cl; inc dword ptr [ebx - 0x7c72f314]; mov ah, 0x2f; stc; call dword ptr [eax - 0x18]; 
0x000b47cc: rol dword ptr [eax], 0; inc dword ptr [eax]; je 0xb47d4; inc eax; pop edi; ret; 
0x000df6c2: rol dword ptr [eax], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00173f2b: rol dword ptr [eax], 1; add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [ebp + 0x44]; 
0x000df6f2: rol dword ptr [eax], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0002268e: rol dword ptr [eax], cl; add byte ptr [ebp - 0x691837f], cl; call dword ptr [eax - 0x73]; 
0x00196bb7: rol dword ptr [ebp + 0x30850fc0], 2; add byte ptr [eax], al; xor eax, eax; ret; 
0x000b3ca1: rol dword ptr [ebp + 0x315a75c0], 0xc0; pop edi; ret; 
0x000b3f76: rol dword ptr [ebp + 0x316575c0], 0xc0; ret; 
0x000b3f47: rol dword ptr [ebp + 0x317475c0], 0xc0; ret; 
0x00196bf6: rol dword ptr [ebp + 0x71850fc0], 2; add byte ptr [eax], al; xor eax, eax; ret; 
0x001313e2: rol dword ptr [ebp - 0x278a760a], 0xf; sahf; ret 0xd108; 
0x0019670f: rol dword ptr [ebp - 0x377af040], 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x000b3c67: rol dword ptr [ebp - 0x4f7af040], 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x00093beb: rol dword ptr [ebp - 0x72fa862e], cl; add al, 0x12; mov ebx, dword ptr [eax]; mov eax, 0x107; call dword ptr gs:[0x10]; 
0x000fb8ab: rol dword ptr [ebp - 0x76f38b01], 1; ret 0x4089; 
0x000715e2: rol dword ptr [ebx + 0x4874fff9], 0x89; ret; 
0x0010d39c: rol dword ptr [ebx + 0x5e5b00d8], 1; pop edi; pop ebp; ret; 
0x0010c32a: rol dword ptr [ebx + 0x5e5b00d8], 1; ret; 
0x00163341: rol dword ptr [ebx + 0x788308c0], 0xf8; push dword ptr [ebp + esi*2 - 0x7d]; ret 0x3901; 
0x00162e30: rol dword ptr [ebx + ecx*4], 0x47; add al, 0x51; push edi; call dword ptr [eax + 8]; 
0x0012c95a: rol dword ptr [ebx - 0x3f7aef3c], 0xf; xchg esp, eax; ret 0x4483; 
0x00092e16: rol dword ptr [ebx - 0x3fceeb3c], cl; pop ebx; pop esi; ret; 
0x0019df94: rol dword ptr [ebx - 0x67cf01f], 1; add al, 0xf; test byte ptr [ebx - 0x76000004], dl; ret; 
0x0008325b: rol dword ptr [ebx - 0x7872f314], 0x88; jle 0x8325d; call dword ptr [eax - 0x18]; 
0x000f7799: rol dword ptr [ebx - 1], cl; dec dword ptr [ebx + 0x458b2455]; xor byte ptr [ecx], bh; sal byte ptr [ebx + ecx - 0x77], 1; ret 0xf189; 
0x000858a9: rol dword ptr [ebx], 0x83; clc; add esi, dword ptr [eax + ecx + 0x5b]; pop esi; pop edi; ret; 
0x000d8882: rol dword ptr [ebx], 1; add byte ptr [ebx - 0x1337d], cl; jmp dword ptr [ebp - 0x75]; 
0x00149b69: rol dword ptr [ebx], 1; pushfd; xchg ebx, eax; mov al, byte ptr [0x3efff90d]; jmp ebx; 
0x00147e50: rol dword ptr [ecx], 0; add byte ptr [eax - 0x73], dl; sub dword ptr [ebx], 0x5f; stc; call dword ptr [eax - 0x18]; 
0x00057b0d: rol dword ptr [ecx], 0; add esp, 0x2c; ret; 
0x000e754d: rol dword ptr [ecx], 0x29; ret 0xd301; 
0x0005c355: rol dword ptr [ecx], 0x83; out dx, al; add dword ptr [ecx], edi; ret 0x850f; 
0x000888f5: rol dword ptr [ecx], 0x83; ret 0x8108; 
0x00056b44: rol dword ptr [ecx], 0x83; ret 0x8404; 
0x000c4306: rol dword ptr [ecx], 0x83; ret 0x8b01; 
0x0003f379: rol dword ptr [ecx], 0x83; ret 0x8d01; 
0x000a2654: rol dword ptr [ecx], 0x83; ret 0xf01; 
0x000f7538: rol dword ptr [ecx], 0x83; ret; 
0x0009c3f9: rol dword ptr [ecx], 0xeb; adc eax, 0x8300768d; ret 0x8b20; 
0x000b952f: rol dword ptr [ecx], 0xeb; les ecx, ptr [ebx - 0x72ebdb84]; xchg dword ptr [esi + esi*2 - 7], ebx; call dword ptr [eax + 0x68]; 
0x000f19b2: rol dword ptr [ecx], 9; ret 0xf983; 
0x000ca6ce: rol dword ptr [ecx], cl; ret; 
0x000ad47b: rol dword ptr [edi], 1; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00165167: rol dword ptr [edx], 0x89; ret; 
0x00048a17: rol dword ptr [esi], 0x83; ret 0x901; 
0x0014958d: rol dx, 8; add edx, 1; rol dx, 8; mov word ptr [ecx + 0xa], dx; pop ebx; ret; 
0x00149594: rol dx, 8; mov word ptr [ecx + 0xa], dx; pop ebx; ret; 
0x000381d6: rol eax, cl; and dword ptr [edx + ebx*4], eax; xor eax, eax; pop ebx; ret; 
0x000ced22: rol ecx, 0xc9; add al, byte ptr [ecx - 0x70a3d707]; add dh, byte ptr [esi + 0xa]; mov eax, edx; ret; 
0x0008c0c9: rol ecx, 0xe1; pop es; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008bffe: rol ecx, 0xe9; add esi, dword ptr [edi + edi*4 - 0x77]; ret 0xca83; 
0x0008a868: rol ecx, 0xf8; add eax, dword ptr [ecx]; ret 0x8966; 
0x00035bd0: rol ecx, 1; call 0x10ed1cf6; or eax, ecx; ret; 
0x0014958e: rol edx, 8; add edx, 1; rol dx, 8; mov word ptr [ecx + 0xa], dx; pop ebx; ret; 
0x00149595: rol edx, 8; mov word ptr [ecx + 0xa], dx; pop ebx; ret; 
0x0002146f: rol edx, 9; mov dword ptr [eax + 0x1978], edx; pop ebx; pop esi; ret; 
0x000213cf: rol edx, 9; mov dword ptr [eax + 0x1978], edx; ret; 
0x00133a6d: ror ax, 8; ret; 
0x00120981: ror byte ptr [eax + esi], 1; ror byte ptr [ecx], 0xc8; ret; 
0x000f7532: ror byte ptr [eax - 0x7cefdbac], 1; rol dword ptr [ecx], 0x83; ret; 
0x000957b7: ror byte ptr [eax], 0x39; ret 0xf375; 
0x000fb426: ror byte ptr [eax], 0x50; call 0xb4980; add esp, 0x1c; ret; 
0x00197b24: ror byte ptr [eax], 0x5f; ret; 
0x00163343: ror byte ptr [eax], 0x83; js 0x163340; push dword ptr [ebp + esi*2 - 0x7d]; ret 0x3901; 
0x00193015: ror byte ptr [eax], 0x83; ret 0x5608; 
0x00191d56: ror byte ptr [eax], 0x83; ret 0x5708; 
0x0018c991: ror byte ptr [eax], 0x83; ret 0x8308; 
0x0014d1ae: ror byte ptr [eax], 0x83; ret 0x8908; 
0x0018b171: ror byte ptr [eax], 0x83; ret 0xf608; 
0x0015e4cb: ror byte ptr [eax], 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0015e4a8: ror byte ptr [eax], 0x89; inc esp; and al, 4; jmp edx; 
0x0004aaaa: ror byte ptr [ebp + 0x2bb6c48], cl; add byte ptr [eax], al; add byte ptr [eax + 0x7e], bh; call dword ptr gs:[0x10]; 
0x000cc529: ror byte ptr [ebp + 0x480f0750], 1; ret 0xb70f; 
0x00025568: ror byte ptr [ebp + 0x490f0342], cl; ret 0xec83; 
0x0019a543: ror byte ptr [ebp + 0x490f1f42], cl; ret 0xf8c1; 
0x00199c0b: ror byte ptr [ebp + 0x490f1f42], cl; ret 0xff31; 
0x00172b9c: ror byte ptr [ebp + 0x5e5bf465], 0x5f; pop ebp; ret; 
0x00088378: ror byte ptr [ebp + 0x6c504], 1; add byte ptr [eax], al; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0011dec9: ror byte ptr [ebp + 0xb6], 1; add byte ptr [ebp - 0x74f38b40], al; push eax; add al, 0xf6; ret 0xf01; 
0x00072211: ror byte ptr [ebp - 0x153efcb0], 1; add dh, dh; pop es; add dword ptr [edi], ecx; inc ebp; ret 0xec83; 
0x00098574: ror byte ptr [ebp - 0x17efd4bc], cl; ret 0xffcf; 
0x0009eb35: ror byte ptr [ebp - 0x2776feb0], 0xf; inc ebp; ret 0xc483; 
0x0002412c: ror byte ptr [ebp - 0x6d5a469], cl; call dword ptr [edx + 0x50]; 
0x00195868: ror byte ptr [ebp - 0x7af0efc0], cl; ret 0; 
0x00146847: ror byte ptr [ebx + 0x390c2454], 1; ret 0x307e; 
0x000f6769: ror byte ptr [ebx + 0x39642444], 1; ret 0x8e0f; 
0x00126c29: ror byte ptr [ebx + 0x3980044a], 0; je 0x126c38; ret; 
0x000cce59: ror byte ptr [ebx + 0x3d5483], cl; add byte ptr [ecx], bh; cmp dword ptr [eax + 0x3d], 0; add byte ptr [edi], cl; xchg ebp, eax; ret 0xb38b; 
0x0013f0cc: ror byte ptr [ebx + 0x489d05d], 0x37; mov eax, 6; call dword ptr gs:[0x10]; 
0x0016224c: ror byte ptr [ebx + 0x650c2454], 0x2b; adc eax, 0x14; jne 0x162267; add esp, 0x1c; ret; 
0x001259fb: ror byte ptr [ebx + 0x656c2454], 1; sub edx, dword ptr [0x14]; jne 0x125a14; add esp, 0x7c; ret; 
0x001160f9: ror byte ptr [ebx + 0x78c9850a], 8; mov eax, dword ptr [edx + 8]; and eax, 0x100f; ret; 
0x0019e597: ror byte ptr [ebx + 0x9282454], 1; ret 0x448b; 
0x001252ef: ror byte ptr [ebx - 0x17c7dba4], 0x67; aam 0xf5; dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x0012493f: ror byte ptr [ebx - 0x17cbdba4], 0x17; fdivrp st(5); dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x00124c1f: ror byte ptr [ebx - 0x17cbdba4], 0x37; fcomi st(5); dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x00124d6f: ror byte ptr [ebx - 0x17cbdba4], 0xe7; fprem1; dec dword ptr [ebp - 0x76fbdbb4]; ret 0x448b; 
0x000d0930: ror byte ptr [ebx - 0x19b37c6c], 0xf8; inc dword ptr [ecx]; fidivr dword ptr [esi]; jmp edx; 
0x00088a16: ror byte ptr [ebx - 0x41f7dbb4], cl; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00116b2f: ror byte ptr [ebx - 0x749bdbac], 0x5c; and al, 0x60; lea ecx, [esp + 4]; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x00122240: ror byte ptr [ebx - 0x74afdba4], 0x54; and al, 0x54; lea ecx, [esp + 0x1c]; mov eax, 0x19a; call dword ptr gs:[0x10]; 
0x001164e5: ror byte ptr [ebx - 0x74bbdb8c], 0x5c; and al, 0x40; lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000fb1d1: ror byte ptr [ebx - 0x74bfdba4], 0x74; and al, 0x44; lea ecx, [esp + 0xc]; mov eax, 0x1a7; call dword ptr gs:[0x10]; 
0x000ce9bf: ror byte ptr [ebx - 0x74cbdbac], 0x5c; and al, 0x30; lea ecx, [esp + 0xc]; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x00127a48: ror byte ptr [ebx - 0x74efdbbc], cl; inc eax; dec esp; call 0x127920; add esp, 4; ret; 
0x00035062: ror byte ptr [ebx - 7], 1; dec dword ptr [edi]; inc ebp; call 0x26856; jmp dword ptr [esi - 0x70]; 
0x00034f81: ror byte ptr [ebx - 7], 1; inc dword ptr [ebx - 0x7c72f314]; mov ah, 0x2f; stc; call dword ptr [eax - 0x18]; 
0x0011f68a: ror byte ptr [ebx - 7], cl; call dword ptr [eax + 0x57]; 
0x00197793: ror byte ptr [ebx], 0x5f; ret; 
0x00089e49: ror byte ptr [ebx], 0x83; clc; or ecx, dword ptr [edi]; xchg dword ptr [eax - 0x45000004], ebp; or dword ptr [eax], 0xa30f0000; ret 0x830f; 
0x00089119: ror byte ptr [ebx], 0x83; clc; or ecx, dword ptr [edi]; xchg dword ptr [eax - 0x45000004], esp; or dword ptr [eax], 0xa30f0000; ret 0x830f; 
0x000dfdee: ror byte ptr [ebx], 1; mov eax, 0x20; mov edx, 0x40; cmove eax, edx; ret; 
0x000dfca1: ror byte ptr [ebx], 1; mov eax, 0x7f; mov edx, 0xfde8; pop ebx; cmove eax, edx; ret; 
0x000dfdec: ror byte ptr [ebx], 1; ror byte ptr [ebx], 1; mov eax, 0x20; mov edx, 0x40; cmove eax, edx; ret; 
0x00071b8e: ror byte ptr [ecx + 0x14c48303], 1; pop ebx; pop esi; ret; 
0x00165d67: ror byte ptr [ecx + 0x1b803], 0; add bl, ch; ret 0xb48d; 
0x0012372b: ror byte ptr [ecx + 0x1b8c3], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000c4302: ror byte ptr [ecx + 0x1c183d7], 0x83; ret 0x8b01; 
0x00044ce1: ror byte ptr [ecx + 0x23d231d7], cl; jl 0x44d0d; cmp byte ptr [edi], cl; xchg ebp, eax; ret 0x5409; 
0x000bc0a1: ror byte ptr [ecx + 0x23d231d7], cl; jl 0xbc0cd; cmp byte ptr [edi], cl; xchg ebp, eax; ret 0x5409; 
0x00075ef6: ror byte ptr [ecx + 0x4c4830b], 0x5b; pop esi; ret; 
0x0007b4c6: ror byte ptr [ecx + 0x5bd08903], cl; pop esi; ret; 
0x0007b97e: ror byte ptr [ecx + 0x5bd08903], cl; ret; 
0x001160a2: ror byte ptr [ecx + 0x5e5b5053], 0x5f; ret; 
0x00038413: ror byte ptr [ecx + 0x5f5e5b16], 0x5d; ret; 
0x001466e0: ror byte ptr [ecx + 0x5f5e5b17], 0x5d; ret; 
0x000600bc: ror byte ptr [ecx + 0x5f5e5b3b], cl; ret; 
0x0009fde7: ror byte ptr [ecx + 0x75cb38f1], cl; adc eax, 0x83d4758b; ret 0xf01; 
0x000a136b: ror byte ptr [ecx + 0x75cb38f9], cl; adc eax, 0x83d47d8b; ret 0xf01; 
0x001046f9: ror byte ptr [ecx + 0x8bee9], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00079bc9: ror byte ptr [ecx + 0x8c48301], 1; xor eax, eax; pop ebx; ret; 
0x000dd95e: ror byte ptr [ecx + 0xf082444], 0x9f; ret; 
0x00085fbe: ror byte ptr [ecx + 0xf0b8e9], 1; add byte ptr [eax], al; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000a23bf: ror byte ptr [ecx + 0xf102454], 1; inc edi; ret 0x5350; 
0x000d2fa4: ror byte ptr [ecx + 0xf182474], cl; dec ecx; ret 0xc483; 
0x000975e4: ror byte ptr [ecx + 0xf6c244c], 1; inc edi; ret 0x5c89; 
0x000971e7: ror byte ptr [ecx + 0xf78246c], 1; inc edi; ret 0x548b; 
0x0004ef41: ror byte ptr [ecx + 0xf983da], 0x19; ret 0xba; 
0x000424e1: ror byte ptr [ecx + 0xfb83f2], 0x19; ret 0xba; 
0x000b96cc: ror byte ptr [ecx + 0xffd89e8], 0x94; ret 0xf883; 
0x00035fa8: ror byte ptr [ecx - 0x22f7dbbc], 1; inc esp; and al, 4; ret; 
0x0004ca64: ror byte ptr [ecx - 0x22fbdbbc], 1; add al, 0x24; add esp, 0xc; ret; 
0x00035c18: ror byte ptr [ecx - 0x24f3dbbc], 1; insb byte ptr es:[edi], dx; and al, 4; ret; 
0x000362e8: ror byte ptr [ecx - 0x26fbdbbc], 1; inc esp; and al, 4; ret; 
0x0005db0f: ror byte ptr [ecx - 0x2fe91639], 0xff; dec dword ptr [ebx - 0x59b7b]; jmp dword ptr [ebp - 0x75]; 
0x0008313b: ror byte ptr [ecx - 0x399af7be], 5; inc byte ptr [eax + eax]; add byte ptr [eax], al; mov dword ptr gs:[0x7c], edx; ret; 
0x0003730a: ror byte ptr [ecx - 0x3b7ce7bd], 8; xor eax, eax; pop ebx; ret; 
0x00116146: ror byte ptr [ecx - 0x3fcef7bf], 1; pop ebx; ret; 
0x0005cd20: ror byte ptr [ecx - 0x4577b], 1; call dword ptr [eax - 0x7d]; 
0x0003d47a: ror byte ptr [ecx - 0x6fef1436], 0x83; rol byte ptr [ecx], 0x39; ret; 
0x0019b95b: ror byte ptr [ecx - 0x7693dbbc], 1; ret 0x6c89; 
0x000cb48b: ror byte ptr [ecx - 0x7a97dba4], cl; ror byte ptr [edi], 0x48; ret 0x548b; 
0x00199cd1: ror byte ptr [ecx - 0x7cffeab4], cl; ret 0x3904; 
0x0009b108: ror byte ptr [ecx - 0x7f2dce29], cl; stc; xor byte ptr [edi], cl; xchg esp, eax; ret 0xfa01; 
0x00197b29: ror byte ptr [ecx], 0x5f; ret; 
0x00150dbc: ror byte ptr [ecx], 0x89; inc esp; xchg ebx, eax; add al, 0x83; ret 0x8301; 
0x00120984: ror byte ptr [ecx], 0xc8; ret; 
0x00136f85: ror byte ptr [ecx], 1; add byte ptr [eax - 0x18], dl; int1; ret 0xfff4; 
0x0019c545: ror byte ptr [ecx], cl; fisttp word ptr [ecx]; test dword ptr [ebx], 0xf1c247c; xchg ebp, eax; ret 0xd789; 
0x000ed639: ror byte ptr [ecx], cl; ret 0x7a75; 
0x000ed6ab: ror byte ptr [ecx], cl; ret 0x9674; 
0x00130fdd: ror byte ptr [edi], 0x44; rcl dword ptr [eax - 0x73], 0x87; salc; push edi; stc; call dword ptr [eax - 1]; 
0x0011f2dd: ror byte ptr [edi], 0x44; ret 0x66c3; 
0x0012c222: ror byte ptr [edi], 0x44; ret 0x7789; 
0x00129acd: ror byte ptr [edi], 0x44; ret 0x8d50; 
0x0011ef1c: ror byte ptr [edi], 0x44; ret 0xc483; 
0x00104c5c: ror byte ptr [edi], 0x44; ret 0xec83; 
0x00023404: ror byte ptr [edi], 0x44; ret; 
0x00143a70: ror byte ptr [edi], 0x45; fsubr st(1); ret 0xfffe; 
0x00083e60: ror byte ptr [edi], 0x45; ret 0x66c3; 
0x0011cad2: ror byte ptr [edi], 0x45; ret 0xc084; 
0x0012cf73: ror byte ptr [edi], 0x48; ret 0x4639; 
0x000cb491: ror byte ptr [edi], 0x48; ret 0x548b; 
0x0002c207: ror byte ptr [edi], 0x48; ret 0xc083; 
0x0003ac8d: ror byte ptr [edi], 0x48; ret 0xc483; 
0x0012caca: ror byte ptr [edi], 0x48; ret 0xc629; 
0x00081501: ror byte ptr [edi], 0x48; ret 0xff50; 
0x00116ff4: ror byte ptr [edi], 0x49; ret 0x8dc3; 
0x000da614: ror byte ptr [edi], 0x4e; ret 0x4489; 
0x00091338: ror byte ptr [edi], 0x4e; ret 0x578b; 
0x001024ca: ror byte ptr [edi], 0x4e; ret 0xe883; 
0x001977bc: ror byte ptr [edi], 0x5f; ret; 
0x0013c4b6: ror byte ptr [edi], 0x84; add byte ptr [eax], al; add byte ptr [ebx - 0x1337d], cl; jmp dword ptr [ebp + 3]; 
0x000e4b30: ror byte ptr [edi], 0x84; add dword ptr [esi], 0x2fbb0000; add byte ptr [eax], al; add byte ptr [ebx - 0x46b73], cl; jmp dword ptr [esi - 0x77]; 
0x0011f6b4: ror byte ptr [edi], 0x84; and eax, 0x83000005; in al, dx; or byte ptr [ebp - 0x6b1e17d], cl; call dword ptr [eax + 0x57]; 
0x000e8a61: ror byte ptr [edi], 0x84; call 0x840e8a60; ret 0x8901; 
0x0005d658: ror byte ptr [edi], 0x84; call dword ptr [eax]; 
0x0011f6ea: ror byte ptr [edi], 0x84; dec edi; add eax, 0xec830000; or byte ptr [ebp - 0x6b3577d], cl; call dword ptr [eax + 0x57]; 
0x00150e58: ror byte ptr [edi], 0x84; imul eax, dword ptr [ecx], 0xec830000; or byte ptr [ebp - 0x69e5a7d], cl; call dword ptr [eax - 1]; 
0x0011f93c: ror byte ptr [edi], 0x84; inc eax; or eax, dword ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; rcl byte ptr [ecx - 7], cl; call dword ptr [eax + 0x57]; 
0x0002414e: ror byte ptr [edi], 0x84; lock add byte ptr [eax], al; add byte ptr [ecx - 0x76ff7439], cl; ret 0xce80; 
0x0005efa1: ror byte ptr [edi], 0x84; mov al, byte ptr [0x2bffffb6]; test dword ptr [eax - 0x7c000005], edi; in al, dx; or al, 0x89; ret; 
0x000f6030: ror byte ptr [edi], 0x84; mov dword ptr [0xf000001], eax; mov dh, 0x43; add al, 0x89; ret 0xe283; 
0x00097181: ror byte ptr [edi], 0x84; mov eax, 0x89000005; ret 0x708d; 
0x0005b990: ror byte ptr [edi], 0x84; mov eax, dword ptr [0x8b000014]; test dword ptr [eax - 0x74000005], edi; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xd801; 
0x000df04c: ror byte ptr [edi], 0x84; mov ebp, 0x83000000; ret; 
0x000cd4fc: ror byte ptr [edi], 0x84; mov ebp, 0x83000003; in al, dx; or byte ptr [ebp - 0x6d5a47d], cl; call dword ptr [eax + 0x56]; 
0x000645ec: ror byte ptr [edi], 0x84; or al, 0; add byte ptr [ebx - 0x50f63], cl; call ecx; 
0x0011f957: ror byte ptr [edi], 0x84; or byte ptr [ebx], 0; add byte ptr [ebx - 0x7c72f714], al; not byte ptr [ecx - 7]; call dword ptr [eax + 0x57]; 
0x000d9477: ror byte ptr [edi], 0x84; out dx, eax; add dword ptr [eax], eax; add byte ptr [ebx - 0x13345], cl; jmp dword ptr [ebp - 0x75]; 
0x0011f98d: ror byte ptr [edi], 0x84; out dx, eax; or eax, dword ptr [eax]; add byte ptr [ebp - 0x6adc37d], cl; call dword ptr [ecx + 0x51]; 
0x0011f7c2: ror byte ptr [edi], 0x84; pop ds; or byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; les ecx, ptr [esi - 7]; call dword ptr [eax + 0x57]; 
0x0011f864: ror byte ptr [edi], 0x84; pushal; or dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f714], al; and dword ptr [eax - 7], edx; call dword ptr [eax + 0x57]; 
0x0002cc92: ror byte ptr [edi], 0x84; ret 0; 
0x0011f9db: ror byte ptr [edi], 0x84; ret 0xd; 
0x0002d3e7: ror byte ptr [edi], 0x84; ret 1; 
0x00171607: ror byte ptr [edi], 0x84; ret 2; 
0x00169821: ror byte ptr [edi], 0x84; ret 3; 
0x0002bd9d: ror byte ptr [edi], 0x84; ret; 
0x0016c1b9: ror byte ptr [edi], 0x84; rol byte ptr [eax], 0; add byte ptr [ebx - 0x6c72f714], al; clc; stc; call dword ptr [edx - 0x77]; 
0x00154d91: ror byte ptr [edi], 0x84; rol byte ptr [eax], 0; add byte ptr [ebx], al; je 0x154dbf; cmp al, 0x89; ret; 
0x0002c170: ror byte ptr [edi], 0x84; sbb eax, 0x83000001; in al, dx; or byte ptr [ebp - 0x6d38d6d], cl; call dword ptr [edx + 0x50]; 
0x0011f9a7: ror byte ptr [edi], 0x84; sbb ecx, dword ptr [eax + eax]; add byte ptr [ebp - 0x6ad9f7d], cl; call dword ptr [edx + 0x52]; 
0x0011f720: ror byte ptr [edi], 0x84; stc; add eax, 0xec830000; or byte ptr [ebp - 0x6b2997d], cl; call dword ptr [eax + 0x57]; 
0x0011c98e: ror byte ptr [edi], 0x84; stosd dword ptr es:[edi], eax; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000e0282: ror byte ptr [edi], 0x84; test dword ptr [eax], 0xec830000; or al, 0x89; ret; 
0x0011f87f: ror byte ptr [edi], 0x84; test eax, 0x83000009; in al, dx; or byte ptr [ebp - 0x6afb77d], cl; call dword ptr [eax + 0x57]; 
0x0011f813: ror byte ptr [edi], 0x84; xchg edx, eax; or byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; xchg byte ptr [edi - 7], cl; call dword ptr [eax + 0x57]; 
0x0011f705: ror byte ptr [edi], 0x84; xchg esp, eax; add eax, 0xec830000; or byte ptr [ebp - 0x6b2ed7d], cl; call dword ptr [eax + 0x57]; 
0x00196af8: ror byte ptr [edi], 0x85; add dword ptr [ecx], 0xf660000; xlatb; ret; 
0x000a6344: ror byte ptr [edi], 0x85; add eax, 0xe9fffff6; inc eax; idiv edi; jmp dword ptr [esi + 0xf]; 
0x000aa824: ror byte ptr [edi], 0x85; and eax, 0xe9fffff5; pushal; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000a6324: ror byte ptr [edi], 0x85; and eax, 0xe9fffff6; pushal; idiv edi; jmp dword ptr [esi + 0xf]; 
0x000b3eb4: ror byte ptr [edi], 0x85; cmc; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000a61de: ror byte ptr [edi], 0x85; dec ebx; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00196bf8: ror byte ptr [edi], 0x85; jno 0x196bff; add byte ptr [eax], al; xor eax, eax; ret; 
0x000b3c69: ror byte ptr [edi], 0x85; mov al, 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x001183d0: ror byte ptr [edi], 0x85; mov eax, dword ptr [0x83000000]; in al, dx; or al, 0x89; ret; 
0x0005e3c0: ror byte ptr [edi], 0x85; or eax, 0x8bfffff1; test dword ptr [edx + edi*8 - 1], esp; jmp dword ptr [ebp - 0x75]; 
0x000b3bcb: ror byte ptr [edi], 0x85; out dx, al; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x00089247: ror byte ptr [edi], 0x85; ret 0; 
0x0010b948: ror byte ptr [edi], 0x85; ret 0xfffe; 
0x00025e2d: ror byte ptr [edi], 0x85; ret; 
0x0005f23e: ror byte ptr [edi], 0x85; sub eax, 0x8b000002; test dword ptr [edx + edi*8 - 1], esp; jmp dword ptr [ebp - 0x75]; 
0x0013689a: ror byte ptr [edi], 0x85; test byte ptr [ecx], 0; add byte ptr [ebx - 0x1334a], cl; jmp dword ptr [ebp - 0x75]; 
0x0010146a: ror byte ptr [edi], 0x85; test dword ptr [0x7c8b0000], 0x878d1024; movsb byte ptr es:[edi], byte ptr [esi]; sahf; stc; call dword ptr [eax - 0x73]; 
0x001670f5: ror byte ptr [edi], 0x85; test dword ptr [eax], 0x838d0000; push ss; stc; call dword ptr [ebp + 0x6a]; 
0x00196bb9: ror byte ptr [edi], 0x85; xor byte ptr [edx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x00038ddc: ror byte ptr [edi], 0x88; lahf; add eax, dword ptr [eax]; add byte ptr [ebx + 0x565504ec], al; push dword ptr [esp + 0x30]; call edi; 
0x0013df15: ror byte ptr [edi], 0x88; mov esp, 0x39000002; ret; 
0x000cc197: ror byte ptr [edi], 0x88; ret 0; 
0x00073b5b: ror byte ptr [edi], 0x88; ret 0xfffe; 
0x0006c54d: ror byte ptr [edi], 0x88; ret; 
0x0002f8f4: ror byte ptr [edi], 0x88; xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebp - 0x6a8877d], cl; call dword ptr [esi - 1]; 
0x0009f25a: ror byte ptr [edi], 0x89; push cs; add al, byte ptr [eax]; add byte ptr [ebx + 0x29142454], cl; ret 0xb48d; 
0x0014edf5: ror byte ptr [edi], 0x89; ret 0x25; 
0x0016a9b9: ror byte ptr [edi], 0x89; shl dword ptr [0xfffff000], 0x29; ret 0xe183; 
0x0013153e: ror byte ptr [edi], 0x89; shl dword ptr [0xfffff000], 0x29; ret; 
0x0009f4b2: ror byte ptr [edi], 0x89; test byte ptr [ecx], 0; add byte ptr [ebx + 0x29142454], cl; ret 0x8b90; 
0x000c84dc: ror byte ptr [edi], 0x8e; add al, byte ptr [eax + eax]; add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x00050893: ror byte ptr [edi], 0x8e; cwde; add al, 0; add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x00061d94: ror byte ptr [edi], 0x8e; ret 0x1f; 
0x000f2fdb: ror byte ptr [edi], 0x8e; syscall; 
0x0005504e: ror byte ptr [edi], 0x8f; ret; 
0x0002d67d: ror byte ptr [edi], 0x94; ret 0x3a3c; 
0x0012c95f: ror byte ptr [edi], 0x94; ret 0x4483; 
0x000cb8dc: ror byte ptr [edi], 0x94; ret 0x5438; 
0x0006f806: ror byte ptr [edi], 0x94; ret 0x7f3c; 
0x00148860: ror byte ptr [edi], 0x94; ret 0xa3c; 
0x0016218c: ror byte ptr [edi], 0x94; ret 0xc031; 
0x000383f1: ror byte ptr [edi], 0x94; ret; 
0x000f8318: ror byte ptr [edi], 0x94; rol byte ptr [ebx - 0x49f0d33c], 0xc0; ret; 
0x000481a4: ror byte ptr [edi], 0x94; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x0008c6d8: ror byte ptr [edi], 0x95; inc edx; sbb dword ptr [ecx], esi; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00157186: ror byte ptr [edi], 0x95; ret 0x3a3c; 
0x0016598d: ror byte ptr [edi], 0x95; ret 0x48e9; 
0x0016631d: ror byte ptr [edi], 0x95; ret 0x4ce9; 
0x000e6994: ror byte ptr [edi], 0x95; ret 0xb48d; 
0x0015b05b: ror byte ptr [edi], 0x95; ret 0xc483; 
0x0007b05e: ror byte ptr [edi], 0x95; ret 0xd089; 
0x000e1933: ror byte ptr [edi], 0x95; ret 0xf981; 
0x000355ed: ror byte ptr [edi], 0x95; ret; 
0x0015c835: ror byte ptr [edi], 0x95; rol byte ptr [ebx - 0x49f0e33c], 0xc0; ret; 
0x0015aad6: ror byte ptr [edi], 0x95; rol byte ptr [ebx - 0x49f0f73c], 0xc0; pop ebx; ret; 
0x0015bc7b: ror byte ptr [edi], 0x95; rol byte ptr [ebx - 0x49f0fb3c], 0xc0; pop ebx; pop esi; ret; 
0x0011cbb7: ror byte ptr [edi], 0x9e; ret 0xff85; 
0x000dd862: ror byte ptr [edi], 0x9f; ret; 
0x0004b65e: ror byte ptr [edi], 0xa5; fmul dword ptr [edx + 0x74]; sub dl, byte ptr [eax - 0xa]; ret 0x7501; 
0x0008fd64: ror byte ptr [edi], 0xb6; rol byte ptr [ebx - 0x3b7cfd18], 0xc; ret; 
0x00037307: ror byte ptr [edi], 0xb6; ror byte ptr [ecx - 0x3b7ce7bd], 8; xor eax, eax; pop ebx; ret; 
0x000fb3db: ror byte ptr [edi], 0xb6; sal bh, 0xd8; ret; 
0x0016fa0a: ror byte ptr [edi], 0xb7; inc edi; adc byte ptr [esi - 0x3f], ah; call 0x10163619; test byte ptr [ebp - 0x76ffffff], ah; ret 0xb60f; 
0x0009c003: ror byte ptr [edi], 0xf5; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000c079c: ror byte ptr [edi], 1; dec edi; ret 0x403; 
0x001480b3: ror byte ptr [edi], 1; dec edi; ret 0x4189; 
0x000bdadb: ror byte ptr [edi], 1; dec edi; ret 0x4403; 
0x000ec5d1: ror byte ptr [edi], 1; dec edi; ret 0x538b; 
0x00148129: ror byte ptr [edi], 1; dec edi; ret 0x548b; 
0x0004ff68: ror byte ptr [edi], 1; dec edi; ret 0x8503; 
0x0015d6a0: ror byte ptr [edi], 1; dec edi; ret 0x8966; 
0x0011c8a9: ror byte ptr [edi], 1; dec edi; ret 0x8d50; 
0x00043a36: ror byte ptr [edi], 1; dec edi; ret 0xe801; 
0x00040857: ror byte ptr [edi], 1; dec edi; ret 0xf001; 
0x000f0272: ror byte ptr [edi], 1; dec esp; ret 0x5650; 
0x00040263: ror byte ptr [edi], 1; dec esp; ret; 
0x00088332: ror byte ptr [edi], 1; inc edi; ret 0x4589; 
0x00099ac4: ror byte ptr [edi], 1; inc edi; ret 0xc083; 
0x000811f4: ror byte ptr [edi], 1; lea ebp, [0x89000001]; ret 0x468b; 
0x00034eb4: ror byte ptr [edi], 1; mov dh, 0x11; test dl, dl; jne 0x34e99; ret; 
0x00133a92: ror byte ptr [edi], 1; mov dh, 0xc0; and ecx, 0xc0000000; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x000b38e0: ror byte ptr [edi], 1; test cl, bl; add byte ptr [eax], al; add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x000b3731: ror byte ptr [edi], 1; xchg dword ptr [eax + 0x1000000], ebp; clc; add eax, ecx; pop edi; ret; 
0x0010b361: ror byte ptr [edi], 1; xchg ebp, eax; ret 0x4c39; 
0x001313df: ror byte ptr [edi], 1; xchg esp, eax; rol dword ptr [ebp - 0x278a760a], 0xf; sahf; ret 0xd108; 
0x00098eb9: ror byte ptr [edi], 1; xor byte ptr [eax + 2], 0; add dh, dh; ret; 
0x0011c9e6: ror byte ptr [edi], cl; dec ecx; ret 0xc483; 
0x00061d69: ror byte ptr [edi], cl; inc esp; ret; 
0x0006b6a2: ror byte ptr [edi], cl; mov byte ptr [ebx + ebx], ah; add dh, dh; ret 0xf40; 
0x00024859: ror byte ptr [edi], cl; mov dh, 0xc2; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x000506e4: ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x001236fa: ror byte ptr [edi], cl; test bh, cl; fucompi st(7); call dword ptr [ebx + 0x56]; 
0x000fc459: ror byte ptr [edi], cl; test byte ptr [eax + 0xf000004], dl; mov esi, 0x83df89ca; ret; 
0x0004e078: ror byte ptr [edi], cl; test byte ptr [ecx - 0x76fffffd], dl; ret; 
0x0002290c: ror byte ptr [edi], cl; test byte ptr [edi + 0x6b000000], dl; ret 0x893c; 
0x00195147: ror byte ptr [edi], cl; test byte ptr [edx - 0xa000000], ah; ret 0x7501; 
0x000ac665: ror byte ptr [edi], cl; test dword ptr [ebx + esi*8 - 1], esi; jmp dword ptr [esi + 0xf]; 
0x000fd056: ror byte ptr [edi], cl; test dword ptr [esi - 0x74ffffe8], esi; push esi; add al, 0xf7; ret 0xfffd; 
0x0005ab13: ror byte ptr [edi], cl; xchg ebp, eax; ret 0xbd83; 
0x00105207: ror byte ptr [edi], cl; xchg ebp, eax; ret 0xd009; 
0x00165d64: ror byte ptr [edi], cl; xchg ebp, eax; ror byte ptr [ecx + 0x1b803], 0; add bl, ch; ret 0xb48d; 
0x000f7130: ror byte ptr [edi], cl; xchg esp, eax; ret 0xd020; 
0x000d145c: ror byte ptr [edi], cl; xchg esp, eax; ret; 
0x00197b2e: ror byte ptr [edx], 0x5f; ret; 
0x00197b42: ror byte ptr [esi], 0x5f; ret; 
0x0013fc51: ror byte ptr [esi], 0x85; sal byte ptr [ebx + 0x39], cl; ret 0x4572; 
0x0004e853: ror cl, 0xff; call dword ptr [eax - 0x73]; 
0x000c7bfa: ror cl, 0xff; call dword ptr [eax - 0x75]; 
0x000c672a: ror cl, 0xff; call dword ptr [ebx + 0x56]; 
0x0004e7a1: ror cl, 0xff; call dword ptr [ebx]; 
0x000c865b: ror cl, 0xff; dec dword ptr [ebp - 0x36177b]; dec dword ptr [edi]; xchg edi, eax; ret 0xbd39; 
0x000c610a: ror cl, 0xff; dec dword ptr [ecx - 0x35ff73]; dec dword ptr [ecx - 0x35fb63]; inc dword ptr [ebx - 0x363743]; call dword ptr [eax]; 
0x000c7217: ror cl, 0xff; inc dword ptr [ebx - 0x2d7c0040]; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0004ef00: ror cl, 0xff; inc dword ptr [ebx - 0x362f43]; call dword ptr [eax]; 
0x000c62a2: ror cl, 0xff; jmp ptr [ebx]; test dword ptr [eax - 0x76000037], edi; test dword ptr [eax - 0x76000037], esi; ret; 
0x000ad379: ror dword ptr [eax], cl; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000d7081: ror dword ptr [ebp + 0x2dd1c], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000622da: ror dword ptr [ebp + 0x8d04], 0; add byte ptr [ecx - 0x51773], cl; call dword ptr [eax + 0x53]; 
0x001964c7: ror dword ptr [ebp + 0xf661049], 1; xlatb; ret 0xc085; 
0x00022242: ror dword ptr [ebp - 0x1876e1c0], 0x89; ret 0x25; 
0x000221a2: ror dword ptr [ebp - 0x1976e1c0], 0x89; ret 0x25; 
0x0019781a: ror dword ptr [ebp - 0x2d7aefc0], 1; jne 0x197830; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x001222bb: ror dword ptr [ebp - 0x72ffd98c], 0x4c; and al, 0xc; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x0002da43: ror dword ptr [ebp - 0x9ffd98c], cl; ret 0x7503; 
0x0007c2c1: ror dword ptr [ebx - 0x39dfdb84], 1; add al, 7; add byte ptr [ecx - 0x14ec7407], cl; ret; 
0x00059731: ror dword ptr [ebx - 0x5a36b], cl; jmp dword ptr [ebp - 0x75]; 
0x0012c3da: ror dword ptr [ebx - 0x76fbdb8c], cl; inc edi; adc al, 0x29; ret; 
0x000946f6: ror dword ptr [ebx], 0x59; sbb dword ptr [eax], eax; mov ecx, dword ptr [ecx + 0x3b68]; test ecx, ecx; jne 0x94710; ret; 
0x00121309: ror dword ptr [ecx + 0x1b8c3], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00094591: ror dword ptr [ecx + 0x3b6c82], 0; ret; 
0x000cd68f: ror dword ptr [ecx + 0x3db8ab], 1; add byte ptr [ecx + 0x3db083], cl; add byte ptr [ecx], bh; ret 0x870f; 
0x0007183c: ror dword ptr [ecx + 0x9488], 1; add byte ptr [ebx - 0x6e76a7b8], cl; mov byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x00103ee1: ror dword ptr [ecx + eax*8 - 0x17], 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x000961be: ror dword ptr [ecx - 0x72d7dbbc], 1; inc esi; sbb byte ptr [ecx], bh; ret 0x850f; 
0x00035e25: ror dword ptr [ecx - 0x74f3dbac], 0x44; and al, 0x10; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00036196: ror dword ptr [ecx - 0x74f7dbac], 0x44; and al, 0xc; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0003644e: ror dword ptr [ecx - 0x74fbdbac], 0x44; and al, 8; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00198589: ror dword ptr [edi], 0x74; adc eax, dword ptr [ebx - 0x218bfe20]; lea eax, [edi - 0x10]; pop edi; ret; 
0x0006d279: ror dword ptr [edi], 0x86; pushal; add eax, 0xec830000; add al, 0x89; lea esi, [edi + esi*8 - 1]; call dword ptr [esi + 0x52]; 
0x0013e9d9: ror dword ptr [edi], 0x96; ret 0x5522; 
0x000b3ee3: ror dword ptr [edi], 0xbd; rol byte ptr [ecx], 0xc8; ret; 
0x0004ef50: ror dword ptr [edi], 1; dec ebp; ret; 
0x0007d778: ror dword ptr [edi], 1; xchg cl, bh; add byte ptr [eax], al; add byte ptr [ebx + 0x555004ec], al; push esi; call dword ptr [ebx + 0x38]; 
0x000ea05f: ror dword ptr [edi], cl; dec esi; sar dword ptr [ecx], cl; ret 0xd17f; 
0x0004f70b: ror dword ptr [edi], cl; test dl, ah; idiv bh; inc dword ptr [ebx - 0x41f0fe18]; adc byte ptr [ebx - 0x362743], al; call dword ptr [eax]; 
0x00098251: ror dword ptr [edi], cl; xchg ebp, eax; ret 0xe083; 
0x000e956d: ror dword ptr [edi], cl; xchg esp, eax; ret 0xd008; 
0x0004ac91: ror dword ptr [edx], 0; add byte ptr [eax], al; mov dword ptr [edx], ecx; ret; 
0x0013cc9d: ror dword ptr [esi], cl; add byte ptr [ebx - 0x7c72ef14], al; pushal; sub al, 0xf1; call dword ptr [eax - 0x73]; 
0x00133a6e: ror eax, 8; ret; 
0x00131301: ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000218dd: ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x00141004: ror eax, 9; xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x10]; push edx; push edi; call eax; 
0x001410d0: ror eax, 9; xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x10]; push edx; push esi; call eax; 
0x0003ab08: ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [ebp + edi], edx; push dword ptr [ebx + 4]; call eax; 
0x00021968: ror eax, 9; xor eax, dword ptr gs:[0x18]; pop edi; pop ebp; jmp eax; 
0x001511f8: ror eax, 9; xor eax, dword ptr gs:[0x18]; push eax; call edx; 
0x00131330: ror eax, 9; xor eax, dword ptr gs:[0x18]; push esi; call eax; 
0x000ced23: ror ecx, 2; cmp ecx, 0x28f5c28; jbe 0xced38; mov eax, edx; ret; 
0x0013cc9c: ror word ptr [esi], cl; add byte ptr [ebx - 0x7c72ef14], al; pushal; sub al, 0xf1; call dword ptr [eax - 0x73]; 
0x0007a7ad: sahf; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; add dword ptr [eax + 0x7d], -7; call dword ptr [eax - 0x18]; 
0x0008fe35: sahf; add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x000d72ba: sahf; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x001117e3: sahf; add dword ptr [eax], eax; add byte ptr [edi + 8], bh; mov edx, ebp; call dword ptr gs:[0x10]; 
0x000a9f8e: sahf; add eax, dword ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x0011eda8: sahf; dec ebx; stc; jmp dword ptr [ebp - 0x75]; 
0x000790ee: sahf; fcos; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000da039: sahf; inc ebp; stc; call dword ptr [eax + 0x53]; 
0x000db0a5: sahf; inc ebp; stc; call dword ptr [eax - 0x18]; 
0x00095851: sahf; or byte ptr [eax + eax], cl; add byte ptr [edi + 0x3b5c86], al; add byte ptr [ebx - 0x70f0fe08], al; ret 0; 
0x0012105e: sahf; push ss; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x001313e9: sahf; ret 0xd108; 
0x000cf9bd: sahf; ret 0xd329; 
0x0011cbb9: sahf; ret 0xff85; 
0x00173baa: sahf; sar dh, 0xff; dec dword ptr [edi]; xchg esp, eax; ret 0xd008; 
0x0010860a: sahf; stc; call dword ptr [eax + 0x68]; 
0x000ff224: sahf; stc; call dword ptr [eax - 0x18]; 
0x000fc205: sahf; stc; call dword ptr [eax - 0x73]; 
0x0009a55f: sahf; sub esp, 0xc; push dword ptr [esp + 0x14]; call eax; 
0x000886db: sal al, cl; cmpxchg dword ptr [esp + 4], edx; ret; 
0x0004b0f6: sal bh, 0xd8; pop ebx; pop esi; pop edi; ret; 
0x000fb3de: sal bh, 0xd8; ret; 
0x00069eb3: sal bh, 1; fmul dword ptr [edi]; dec eax; ret 0x4489; 
0x0003ab59: sal bh, 1; fmul dword ptr [edi]; dec eax; ret 0xf3c3; 
0x000f1890: sal bh, 2; add byte ptr [eax + eax], al; add byte ptr [edi], cl; test dword ptr [edx - 0x7cfffff9], ebp; rol byte ptr [ecx], 0x83; ret 0x3b20; 
0x00054c44: sal bh, cl; pop ebx; pop esi; add ecx, eax; mov eax, ecx; ret; 
0x00132adf: sal bh, cl; pop ebx; pop esi; pop edi; ret; 
0x000843b7: sal bl, 0xa5; pop esi; pop edi; ret; 
0x000d6784: sal bl, 0xff; call dword ptr [ebx - 0x75]; 
0x0008eb5d: sal byte ptr [eax + eax*2 - 0x73], 0x47; inc dword ptr [ebx - 0x69f00208]; ret; 
0x001240b6: sal byte ptr [eax + ebp*4 - 0x7d], cl; in al, dx; or byte ptr [ebp - 0x65d2779], cl; call dword ptr [eax + 0x55]; 
0x00023771: sal byte ptr [eax + ebp*8 - 0x73], 0x86; test byte ptr [esi - 7], ch; call dword ptr [eax - 0x73]; 
0x0012e16d: sal byte ptr [eax + ebx - 0x75], cl; push esi; or al, 0xf6; ret 0x7504; 
0x001500dc: sal byte ptr [eax + ebx - 0x7d], cl; in al, dx; or byte ptr [ebp - 0x6bca97f], cl; call dword ptr [eax + 0x52]; 
0x0016309d: sal byte ptr [eax + ecx + 0x5b], 1; pop esi; pop edi; ret; 
0x0007c5e5: sal byte ptr [eax + ecx - 0x7d], 0xc4; add al, 0x5b; pop esi; ret; 
0x001631bd: sal byte ptr [eax + edx + 0x5b], 1; add eax, 0x90; pop esi; pop edi; ret; 
0x0016324d: sal byte ptr [eax + edx + 0x5b], 1; add eax, 0x94; pop esi; pop edi; ret; 
0x0016312d: sal byte ptr [eax + edx + 0x5b], 1; sub eax, -0x80; pop esi; pop edi; ret; 
0x00198c6d: sal byte ptr [eax + edx - 0x77], 0xc2; xor eax, eax; tzcnt edx, edx; add eax, edx; ret; 
0x00048b4d: sal byte ptr [eax + edx - 0x7d], 0xc4; add al, 0x5b; pop esi; ret; 
0x0008bced: sal byte ptr [eax + edx - 0x7d], cl; cli; add dword ptr [ebp + 0x1b], esi; or dword ptr [eax], 0x40000000; xor eax, eax; ret; 
0x0007b49d: sal byte ptr [eax + esi - 0x77], 0xd0; pop ebx; pop esi; ret; 
0x000847e6: sal byte ptr [eax + esi*8 - 0x3a], cl; or byte ptr [eax], 0x83; les eax, ptr [esi + ebx*2]; pop edi; ret; 
0x000a2743: sal byte ptr [eax], 0x5f; pop esi; ret; 
0x0008bcad: sal byte ptr [ebp + 0x10], cl; and dword ptr [eax], 0x7fffffff; xor eax, eax; ret; 
0x00140642: sal byte ptr [ebp + 0x1b], 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x00084612: sal byte ptr [ebp + 0x1b], cl; and dword ptr [eax + 8], 0xfffffffe; xor eax, eax; ret; 
0x001590e0: sal byte ptr [ebp + 0x1d], 0x83; in al, dx; or al, 0x8b; inc ebx; add al, 0x53; call dword ptr [eax + 0x10]; 
0x0011d76d: sal byte ptr [ebp + 0x20], 0x83; in al, dx; add al, 0x57; push 2; push ebx; call esi; 
0x00171ae1: sal byte ptr [ebp + 0x20], 0xb8; add al, 0; add byte ptr [eax], al; add esp, 0xc; ret; 
0x00118d5b: sal byte ptr [ebp + 0x22], 0x8b; pop esp; and al, 0x20; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00118e3b: sal byte ptr [ebp + 0x22], 0x8b; pop esp; and al, 0x20; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x000379db: sal byte ptr [ebp + 0x22], 0x8b; pop esp; and al, 0x20; mov eax, 0xb3; mov ecx, 8; call dword ptr gs:[0x10]; 
0x0010aedb: sal byte ptr [ebp + 0x22], 0x8b; pop esp; and al, 0x20; mov eax, 6; call dword ptr gs:[0x10]; 
0x0010b0ab: sal byte ptr [ebp + 0x22], 0x8b; pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 8; call dword ptr gs:[0x10]; 
0x001593a8: sal byte ptr [ebp + 0x2c], 0x83; in al, dx; or al, 0x8b; inc edx; add al, 0x52; call dword ptr [eax + 0x10]; 
0x000c801f: sal byte ptr [ebp + 0x2e], 0x85; test byte ptr [edi], -0x7b; pushfd; add al, byte ptr [eax]; add byte ptr [ebx - 0x36477b], al; jmp eax; 
0x0005036f: sal byte ptr [ebp + 0x2e], 0x85; test byte ptr [edi], -0x7b; sti; add al, byte ptr [eax]; add byte ptr [ebx - 0x364f7b], al; jmp eax; 
0x000fc5b3: sal byte ptr [ebp + 0x32], 0x83; in al, dx; or byte ptr [ebp - 0x6bf7f79], cl; call dword ptr [eax + 0x53]; 
0x0005f234: sal byte ptr [ebp + 0x37], 0x8b; test dword ptr [eax - 0x7a000005], ebp; ror byte ptr [edi], 0x85; sub eax, 0x8b000002; test dword ptr [edx + edi*8 - 1], esp; jmp dword ptr [ebp - 0x75]; 
0x000a6191: sal byte ptr [ebp + 0x38], 0x83; ret; 
0x0011ea49: sal byte ptr [ebp + 0x3c], 0x8b; dec esp; and al, 0x10; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x000b4390: sal byte ptr [ebp + 0x3d], 0x66; pmovmskb eax, mm1; bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x00109d7d: sal byte ptr [ebp + 0x40], cl; mov ecx, dword ptr [esp + 0x30]; mov eax, 0x127; mov ebx, 0xffffff9c; mov edx, edi; call dword ptr gs:[0x10]; 
0x0015fead: sal byte ptr [ebp + 0x60], 0x83; in al, dx; or byte ptr [ebp - 0x8b63], cl; call dword ptr [esi + 0x53]; 
0x00044b6c: sal byte ptr [ebp + 0x61], 0xdb; lodsd eax, dword ptr [esi]; mov al, 0xba; stc; jmp dword ptr [ebp - 0x75]; 
0x000c4654: sal byte ptr [ebp + 0x6c], cl; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00164262: sal byte ptr [ebp + 0xb], 0xc7; add eax, dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00170e1a: sal byte ptr [ebp + 0xb], cl; add esp, 8; pop ebx; ret; 
0x00037689: sal byte ptr [ebp + 0xc], 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x000372e1: sal byte ptr [ebp + 0xc], 0x89; inc ebx; sbb byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x00166f81: sal byte ptr [ebp + 0xc], cl; add esp, 0xc; ret; 
0x00158738: sal byte ptr [ebp + 0xd], 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00147f30: sal byte ptr [ebp + 0xd], 0x5b; pop esi; pop edi; ret; 
0x0015c9c8: sal byte ptr [ebp + 0xd], 0x5b; xor eax, eax; pop esi; pop edi; ret; 
0x001152af: sal byte ptr [ebp + 0xe], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0017097f: sal byte ptr [ebp + 0xe], cl; add esp, 4; pop ebx; pop esi; ret; 
0x0019781f: sal byte ptr [ebp + 0xe], cl; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x0015b086: sal byte ptr [ebp + 0xf], 0x31; rol byte ptr [ebx - 0x2f76f73c], cl; pop ebx; ret; 
0x00082cfe: sal byte ptr [ebp + 0xf], cl; xend; xor eax, eax; add esp, 0xc; ret; 
0x0003839b: sal byte ptr [ebp + 2], cl; mov edx, dword ptr [eax]; xor eax, eax; test edx, edx; sete al; ret; 
0x000de3d3: sal byte ptr [ebp + 3], 0x59; jmp ecx; 
0x000de3d3: sal byte ptr [ebp + 3], 0x59; jmp ecx; ret; 
0x00170a29: sal byte ptr [ebp + 4], 0x5b; pop esi; pop edi; ret; 
0x0011e241: sal byte ptr [ebp + 4], cl; ret; 
0x00037918: sal byte ptr [ebp + 5], 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x001a1247: sal byte ptr [ebp + 6], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00141b46: sal byte ptr [ebp + 7], 0x5b; pop esi; pop edi; ret; 
0x0011e265: sal byte ptr [ebp + 8], cl; ret; 
0x0015a0bc: sal byte ptr [ebp + 9], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000cf92c: sal byte ptr [ebp + 9], cl; add esp, 4; pop ebx; pop esi; ret; 
0x0005824c: sal byte ptr [ebp + 9], cl; add esp, 8; pop ebx; ret; 
0x0014e254: sal byte ptr [ebp + eax + 0x39], 0x50; or byte ptr [ebp - 0xc], dh; ret; 
0x000305be: sal byte ptr [ebp + eax - 0x80], 0x38; add byte ptr [ebp + 0xa], dh; mov eax, edx; add esp, 0xc; ret; 
0x0016401c: sal byte ptr [ebp + ebp*2 - 0x7d], 0xec; or bh, al; add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebp - 0xc5d7f7d], cl; call dword ptr [eax - 0x73]; 
0x0015e58c: sal byte ptr [ebp + ebp*2 - 0x7d], 0xec; or bh, al; add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebp - 0xcb79f7d], cl; call dword ptr [eax - 0x73]; 
0x000d72fb: sal byte ptr [ebp + ebp*4 - 0x7d], 0xf8; fidiv dword ptr [ebp + 0x3d]; lea ecx, [esp + 4]; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x000df9ec: sal byte ptr [ebp + ebx - 0x75], 0x85; lodsb al, byte ptr [esi]; ljmp 0x8d08:0xec83ffff; add byte ptr [edi + eax*2], 0xf9; call dword ptr [eax + 0x53]; 
0x0015b20c: sal byte ptr [ebp + ebx*8 - 0x75], 0x43; adc byte ptr [ebp + 0x53890450], cl; adc bl, ch; ret; 
0x0008e4b0: sal byte ptr [ebp + ecx + 0x31], 0xc0; add esp, 8; pop ebx; ret; 
0x00173b90: sal byte ptr [ebp + ecx - 0x39], 0x43; push 0xffffffff; add esp, 4; pop ebx; pop esi; ret; 
0x00158e46: sal byte ptr [ebp + ecx - 0x7d], 0xec; or al, 0x8b; push eax; add al, 0x50; call dword ptr [edx + 0x10]; 
0x001a0a3c: sal byte ptr [ebp + ecx - 0x7d], cl; in al, dx; or al, 0x50; call edx; 
0x001596ad: sal byte ptr [ebp + ecx*4 - 0x75], 0x43; add al, 0x83; in al, dx; or al, 0x53; call dword ptr [eax + 0x10]; 
0x00042ee0: sal byte ptr [ebp + edx + 0x39], cl; ret; 
0x00090af6: sal byte ptr [ebp - 0x11], 0x89; inc ecx; adc byte ptr [ecx + 0x5e5b104e], cl; ret; 
0x000c9d16: sal byte ptr [ebp - 0x11], cl; mov eax, ecx; pop ebx; pop esi; ret; 
0x00131cc0: sal byte ptr [ebp - 0x13], cl; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0012fea5: sal byte ptr [ebp - 0x14], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00132cd1: sal byte ptr [ebp - 0x14], cl; call 0x132270; lea esi, [esi]; add esp, 8; pop ebx; ret; 
0x0013c315: sal byte ptr [ebp - 0x18], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00147f76: sal byte ptr [ebp - 0x19], 0x5b; pop esi; pop edi; ret; 
0x00163f00: sal byte ptr [ebp - 0x1b], 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x001152cf: sal byte ptr [ebp - 0x20], 0x83; in al, dx; or al, 0x8d; xchg byte ptr [eax - 7], al; call dword ptr [eax - 0x18]; 
0x00034eb9: sal byte ptr [ebp - 0x23], cl; ret; 
0x00119a26: sal byte ptr [ebp - 0x29], 0x5b; xor eax, eax; pop esi; pop edi; ret; 
0x00119a87: sal byte ptr [ebp - 0x2a], 0x5b; xor eax, eax; pop esi; pop edi; ret; 
0x001161c6: sal byte ptr [ebp - 0x2b], cl; or ecx, 0x80000000; mov dword ptr [eax], ecx; xor eax, eax; pop ebx; ret; 
0x000d7f95: sal byte ptr [ebp - 0x2e], cl; add esp, 8; xor eax, eax; pop ebx; ret; 
0x001197bc: sal byte ptr [ebp - 0x41], 0x83; in al, dx; or byte ptr [ebp - 0x6b3e06a], cl; call dword ptr [edx - 0x77]; 
0x00098570: sal byte ptr [ebp - 0x58], 0x31; ror byte ptr [ebp - 0x17efd4bc], cl; ret 0xffcf; 
0x001197db: sal byte ptr [ebp - 0x60], 0x83; in al, dx; or byte ptr [ebp - 0x6b5156a], cl; call dword ptr [edx - 0x77]; 
0x000dfa09: sal byte ptr [ebp - 0x6c], 0x83; in al, dx; or byte ptr [ebp - 0x15277b], cl; call dword ptr [eax - 1]; 
0x000b5d58: sal byte ptr [ebp - 0x77], 0xd8; add esp, 4; pop ebx; pop esi; ret; 
0x000b5b08: sal byte ptr [ebp - 0x77], 0xd8; pop ebx; pop esi; pop edi; ret; 
0x001197fa: sal byte ptr [ebp - 0x7f], 0x8d; xchg esi, eax; in eax, dx; dec edx; stc; call dword ptr [eax + 0x50]; 
0x0009d490: sal byte ptr [ebp - 0xb], 1; mov eax, ecx; ret; 
0x0009121b: sal byte ptr [ebp - 0xe], 0x5b; ret; 
0x000ca07b: sal byte ptr [ebp - 0xe], cl; mov eax, ecx; pop ebx; ret; 
0x0007587b: sal byte ptr [ebp - 0xe], cl; ret; 
0x0012e2c6: sal byte ptr [ebp - 9], 0x83; ret 0x8b18; 
0x0013fc54: sal byte ptr [ebx + 0x39], cl; ret 0x4572; 
0x001311f4: sal byte ptr [ebx + 9], 1; cmp dword ptr [eax + 4], ecx; jne 0x1311f0; mov eax, dword ptr [eax + 0x18]; ret; 
0x00148a36: sal byte ptr [ebx + eax - 0x3a], 0; add byte ptr [eax - 0x7bf0ffc2], al; ret; 
0x0011a9ee: sal byte ptr [ebx + eax - 0x77], cl; inc edx; add al, 0x85; sal byte ptr [edx + eax - 0x77], 0x10; ret; 
0x00179e12: sal byte ptr [ebx + ebp*4 - 0x7d], 0xec; or byte ptr [ebx - 0x72e7dbbc], cl; cmp byte ptr [ebx + 0x4a], 0xf9; call dword ptr [eax + 0x53]; 
0x0012cc02: sal byte ptr [ebx + ebx*2 - 0x75], 0x5e; or al, 0xb; pop edx; or al, 0xf6; ret; 
0x0015bcbc: sal byte ptr [ebx + ebx*4 - 0x7d], 0xec; add al, 0x83; ret; 
0x000f77a4: sal byte ptr [ebx + ecx - 0x77], 1; ret 0xf189; 
0x0007b22f: sal byte ptr [ebx + ecx - 0x80], cl; cli; and eax, 0x7880e175; add dword ptr [ebx + 0x75], esi; fild dword ptr [eax - 0x76da2b83]; ret 0x5374; 
0x00074f89: sal byte ptr [ebx + ecx*8 - 0x75], 0x50; adc byte ptr [ebx], bh; push eax; adc al, 0x73; ret; 
0x000c35a4: sal byte ptr [ebx + ecx*8 - 0x75], 0x7d; les ebp, ptr [ecx]; ret; 
0x000517fa: sal byte ptr [ebx + edx - 0x39], 0; das; jbe 0x5178d; ret 0x40c7; 
0x00158c99: sal byte ptr [ebx + edx - 0x7d], 0xec; or al, 0x8b; dec eax; add al, 0x50; call dword ptr [ecx + 0x10]; 
0x001a0756: sal byte ptr [ebx + edx - 0x7d], 0xec; or byte ptr [ebp - 0x89a2f6d], cl; call dword ptr [edx + 0x50]; 
0x00121f3a: sal byte ptr [ebx + esi - 0x75], cl; pop esp; and al, 0xc; mov eax, 0x178; call dword ptr gs:[0x10]; 
0x00161bea: sal byte ptr [ebx + esi*2 - 0x75], 0x46; cmp al, 0x83; in al, dx; or al, 0x55; call dword ptr [eax + 0x10]; 
0x000c3686: sal byte ptr [ebx - 0x75], 0x7d; les ebp, ptr [ecx]; ret; 
0x00083bec: sal byte ptr [ecx + eax*2 + 0x31], cl; idiv byte ptr [eax + 0xf0]; call dword ptr gs:[0x10]; 
0x0015b045: sal byte ptr [ecx + eax*2 - 0x7d], 0xec; or byte ptr [ebx + 0x74ff0443], cl; and al, 0x1c; push ebx; call dword ptr [eax]; 
0x0015caa4: sal byte ptr [ecx + ebp - 0x7d], 0xec; add al, 0x83; ret; 
0x00159b55: sal byte ptr [ecx + ebp*4 - 0x7d], 0xec; or al, 0x56; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x00123715: sal byte ptr [ecx + ecx + 0x5e], 0x5b; jl 0x216d0; ret; 
0x0014df72: sal byte ptr [ecx + ecx + 0xf], 0x9f; ret; 
0x000ca044: sal byte ptr [ecx + ecx - 0x75], cl; adc byte ptr [ecx], bh; retf 0xf375; ret; 
0x00160dcc: sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x55; call eax; 
0x0002df0c: sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x56; call eax; 
0x00159f2f: sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x57; call eax; 
0x000a1adc: sal byte ptr [ecx + edi - 0x73], cl; push eax; add ebx, ebp; or ecx, dword ptr [ebp - 0x7cffd98c]; ret 0x3801; 
0x0008419c: sal byte ptr [ecx + edx + 0x31], 0xc0; add esp, 4; pop ebx; pop esi; ret; 
0x000a1e3c: sal byte ptr [ecx + edx + 0x39], 0xc8; jne 0xa1e30; mov eax, edx; pop ebx; ret; 
0x000828ec: sal byte ptr [ecx + edx - 0x75], cl; push eax; add al, 0x89; push esp; and al, 4; jmp dword ptr [eax]; 
0x0013c879: sal byte ptr [ecx + edx - 0x7d], 0xec; or al, 0x50; call 0x16ed20; mov dword ptr [esp], ebp; call esi; 
0x0015afac: sal byte ptr [ecx + esi - 0x77], 0xc8; pop ebx; ret; 
0x000d94dc: sal byte ptr [ecx - 0x7d], 0xec; or al, 0x56; call eax; 
0x0003db51: sal byte ptr [ecx], 0xd2; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00132add: sal byte ptr [ecx], 1; sal bh, cl; pop ebx; pop esi; pop edi; ret; 
0x00082751: sal byte ptr [ecx], 1; sar byte ptr [ebx], 0x54; and al, 4; setae al; ret; 
0x000bac9b: sal byte ptr [ecx], 1; shr byte ptr [ecx], cl; ret; 
0x0009c1cf: sal byte ptr [edi + 0x41f6ffe8], 0x7d; add cl, byte ptr [ebp - 0x181c0f6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000de3cf: sal byte ptr [edi + eax - 0x7b], cl; sal byte ptr [ebp + 3], 0x59; jmp ecx; 
0x000de3cf: sal byte ptr [edi + eax - 0x7b], cl; sal byte ptr [ebp + 3], 0x59; jmp ecx; ret; 
0x000d7296: sal byte ptr [edi + ebp - 0x7d], 0xec; or byte ptr [edi + 0x53], dl; call eax; 
0x0002c8aa: sal byte ptr [edi + ebx - 0x7d], 0xec; or byte ptr [ebp - 0x68d1b79], cl; call dword ptr [eax + 0x56]; 
0x0015c9e9: sal byte ptr [edi + ebx*8 - 0x7d], 0xec; or byte ptr [ebp - 0xc48df79], cl; call dword ptr [eax - 0x73]; 
0x0002c06e: sal byte ptr [edi + ecx - 0x7d], 0xf8; add esi, dword ptr [edx + ecx - 0x7d]; les ecx, ptr [eax]; pop ebx; ret; 
0x0016cf38: sal byte ptr [edi + ecx*2 - 0x7d], 0xec; or byte ptr [ebp - 0x64c1b45], cl; call dword ptr [edi + 0x56]; 
0x0014a011: sal byte ptr [edi + edi - 0x7d], 0xec; add al, 0x89; ret; 
0x00173c16: sal byte ptr [edi + edx - 0x39], 0x43; push 0xffffffff; add esp, 4; pop ebx; pop esi; ret; 
0x000c9e76: sal byte ptr [edi + edx - 0x78], cl; rol dword ptr [eax + 0x20740fe1], 1; ret; 
0x000719e2: sal byte ptr [edi + edx - 0x7d], 0xec; add al, 0x53; push dword ptr [esp + 0x1c]; push dword ptr [esi + 0x98]; call eax; 
0x0011d746: sal byte ptr [edi + esi - 0x7d], 0xec; add al, 0x57; push 0; push ebx; call esi; 
0x00164746: sal byte ptr [edi + esi - 0x7d], 0xec; or al, 0x8b; inc ebp; or al, 0x57; call dword ptr [eax + 0x10]; 
0x00094b56: sal byte ptr [edi + esi*4 + 0x39], cl; ret 0xb374; 
0x000b4476: sal byte ptr [edi - 0x31], 1; sub eax, esi; pop ebx; pop esi; ret; 
0x0009b566: sal byte ptr [edi - 0x7d], 0xec; add al, 0x6a; add eax, 0xcc838d50; jb 0x9b56d; call dword ptr [eax - 0x18]; 
0x0012c553: sal byte ptr [edx + 0xa], 1; mov eax, 1; ret; 
0x0011a9f5: sal byte ptr [edx + eax - 0x77], 0x10; ret; 
0x0014aa01: sal byte ptr [edx + eax*2 - 0x7d], 0xec; or al, 0x89; ret; 
0x0014f1ab: sal byte ptr [edx + eax*4 - 0x75], 0x55; mov word ptr [ebp - 0x6524b7e], cs; call dword ptr [eax - 0x73]; 
0x0015bcee: sal byte ptr [edx + ebx - 0x7d], 0xec; add al, 0x83; ret; 
0x0015e7b1: sal byte ptr [edx + ebx - 0x7d], 0xec; or al, 0x83; ret 0x5208; 
0x000d72cf: sal byte ptr [edx + ebx - 0x7d], 0xec; or byte ptr [ebp + 0x520c2454], cl; push ebx; call eax; 
0x00163023: sal byte ptr [edx + ecx + 0x5b], 0x5e; pop edi; ret; 
0x0011d403: sal byte ptr [edx + ecx + 0x5b], cl; pop esi; pop edi; ret; 
0x0002cca8: sal byte ptr [edx + ecx - 0x77], cl; inc esp; and al, 0xc; call edx; 
0x001a08dc: sal byte ptr [edx + ecx - 0x77], cl; inc esp; and al, 8; call edx; 
0x0008feed: sal byte ptr [edx + ecx - 0x7d], 0xf8; or al, 0x75; sub bh, byte ptr [eax + 3]; add esp, 0xc; ret; 
0x000900af: sal byte ptr [edx + ecx - 0x7d], 0xf8; or al, 0x75; sub byte ptr [eax + 3], bh; add esp, 0xc; ret; 
0x00090435: sal byte ptr [edx + ecx - 0x7d], 0xf8; or al, 0x75; xor bh, byte ptr [eax + 3]; add esp, 0xc; ret; 
0x000848cb: sal byte ptr [edx + edi - 0x75], cl; dec ebx; or al, 0x89; clc; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0011a19b: sal byte ptr [edx + edx + 0x5b], 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x0008bf20: sal byte ptr [edx + edx - 0x7d], 0xec; or al, 0xff; jae 0x8bf2d; call dword ptr [ebx]; 
0x00091c9b: sal byte ptr [edx + edx*8 - 0x77], cl; ret; 
0x00158786: sal byte ptr [edx + esi*4 - 0x7d], 0xec; or byte ptr [ebp - 0xc48df79], cl; call dword ptr [eax - 0x73]; 
0x00022834: sal byte ptr [edx + esi*8 - 0x73], cl; nop; test byte ptr [esi - 7], ch; call dword ptr [edx - 0x73]; 
0x00080215: sal byte ptr [esi + 0x28], 1; sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x00072b70: sal byte ptr [esi + 0x2c], 1; sub esp, 4; push edi; push dword ptr [esp + 8]; push ebx; call dword ptr [ebp + 0x1c]; 
0x001626bb: sal byte ptr [esi + 0x6afff3], 0x52; push 4; push ebx; call dword ptr [eax]; 
0x0003ad98: sal byte ptr [esi + eax - 0x39], cl; add al, byte ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0015c977: sal byte ptr [esi + eax - 0x7d], cl; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00124098: sal byte ptr [esi + eax*8 - 0x7d], cl; in al, dx; or byte ptr [ebp - 0x65d0f79], cl; call dword ptr [eax + 0x55]; 
0x0009a6e1: sal byte ptr [esi + ebp + 0x5b], 0x5e; pop edi; ret; 
0x000de7d4: sal byte ptr [esi + ebx*8 - 0x77], cl; dec esp; and al, 0xc; add ebx, 1; mov dword ptr [esp + 8], eax; call edx; 
0x0011f627: sal byte ptr [esi + ecx + 0x39], cl; sal dword ptr [ebp - 0xe], 1; mov eax, dword ptr [eax + 4]; pop ebx; ret; 
0x00082857: sal byte ptr [esi + ecx - 0x75], cl; push eax; add al, 0x89; push esp; and al, 4; jmp dword ptr [eax]; 
0x000f778f: sal byte ptr [esi + ecx - 0x77], 1; ret 0xf189; 
0x00147407: sal byte ptr [esi + ecx - 0x7d], cl; les ecx, ptr [eax]; mov eax, edx; pop ebx; ret; 
0x000de824: sal byte ptr [esi + ecx*4 - 0x77], cl; dec esp; and al, 0xc; mov dword ptr [esp + 8], eax; call edx; 
0x000b4247: sal byte ptr [esi + edx + 0xf], 0xbc; rol byte ptr [ecx], 0xd0; add eax, ecx; ret; 
0x00032a94: sal byte ptr [esi - 0x75], 0x42; or al, 0x83; ret 0x8908; 
0x00043a33: sal byte ptr [esi], 0x39; ror byte ptr [edi], 1; dec edi; ret 0xe801; 
0x0009c3ae: sal byte ptr [esi], 0xf5; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x000a1c98: sal byte ptr [esp + eax + 0x39], 0xd8; jne 0xa1c90; mov eax, edx; pop ebx; ret; 
0x000f2276: sal byte ptr [esp + eax + 0x39], cl; ret 0x2b75; 
0x000b4fcd: sal byte ptr [esp + eax - 0x78], 0x64; adc dword ptr [ebx], eax; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0011e23d: sal byte ptr [esp + eax - 0x7b], 0xd2; jne 0x11e248; ret; 
0x0011e261: sal byte ptr [esp + eax - 0x7b], 0xd2; jne 0x11e270; ret; 
0x00058ed9: sal byte ptr [esp + eax*2 - 0x7d], 0xec; add al, 0x6a; add eax, 0xcc858d50; jb 0x58ee0; call dword ptr [eax - 0x18]; 
0x00143b8a: sal byte ptr [esp + eax*2 - 0x7d], 0xec; add al, 0x89; ret; 
0x0010b4a1: sal byte ptr [esp + ebp*4 - 0x77], 1; ret; 
0x00083621: sal byte ptr [esp + ebx*8 - 0x7d], cl; in al, dx; or al, 0x50; call edx; 
0x001982e1: sal byte ptr [esp + ecx - 0x58], 1; jne 0x198300; lea eax, [ecx + 4]; ret; 
0x0011ded1: sal byte ptr [esp + ecx - 0x75], 0x50; add al, 0xf6; ret 0xf01; 
0x00083e55: sal byte ptr [esp + ecx - 0x75], cl; add bh, byte ptr [edx + 0x16]; test eax, eax; cmovne eax, edx; ret; 
0x00057ea8: sal byte ptr [esp + edi - 0x7d], 0xec; add al, 0x6a; add eax, 0xcc838d50; jb 0x57eaf; call dword ptr [eax - 0x18]; 
0x0007ffab: sal byte ptr [esp + edx - 0x39], 0; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; ret; 
0x00084749: sal byte ptr [esp + edx - 0x7d], 0xf8; add dword ptr [edx + 0x5f], edi; mov eax, 0x16; cmove eax, edx; ret; 
0x0014ce7b: sal byte ptr [esp + edx*2 - 0x7d], cl; ret 0x8901; 
0x0007b951: sal byte ptr [esp + esi - 0x77], 0xd0; pop ebx; ret; 
0x0016d081: sal byte ptr [esp + esi - 0x7d], 0xec; or byte ptr [ebp - 0x69a164a], cl; call dword ptr [esi + 0x53]; 
0x001302d9: sal byte ptr [esp - 0x7d], 0xec; or byte ptr [ebx - 1], dl; jae 0x130313; call eax; 
0x000aa7cc: sal dh, 0xff; jmp dword ptr [esi + 0xf]; 
0x0008c274: sal dh, 1; ret 0x7501; 
0x000c2737: sal dh, cl; dec dword ptr [ebp - 0x6685770]; call dword ptr [edx - 0x73]; 
0x000c2794: sal dh, cl; jmp dword ptr [esi - 0x70]; 
0x000931c2: sal dh, cl; rol dword ptr [eax + 0x75], 0x20; add ebx, 1; mov eax, 0x115; call dword ptr gs:[0x10]; 
0x00127cf1: sal dword ptr [ebp - 0xc], 0x8b; test dword ptr [edi + edi*8 - 1], eax; dec dword ptr [ebp - 0x10257f80]; call dword ptr [eax + 0x6a]; 
0x00090b72: sal dword ptr [ebp - 0xd], 0x8b; inc ecx; adc byte ptr [ecx + 0x5e5b1042], cl; ret; 
0x0011f62b: sal dword ptr [ebp - 0xe], 1; mov eax, dword ptr [eax + 4]; pop ebx; ret; 
0x0013fd1c: sal dword ptr [ebx + 0x13], 0x5b; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x00091214: sal dword ptr [ebx + esi*8 - 0x75], cl; inc eax; or al, 0x85; sal byte ptr [ebp - 0xe], 0x5b; ret; 
0x0009dd09: sal dword ptr [ecx + eax + 0x40], 1; pop edi; ret; 
0x000975f1: sal dword ptr [ecx], 0x83; ret; 
0x00035f7e: sal dword ptr [ecx], 0xc8; shr eax, 0x1f; ret; 
0x0007f184: sal dword ptr [edi + 0x49], 0x89; ret 0x448b; 
0x00152112: sal dword ptr [edi + 0x5fb6db6d], 0x5d; ret; 
0x001578bb: sal dword ptr [edi + edi*8 + 0x1cc483ff], 1; ret; 
0x000774fd: sal dword ptr [esi + 0x7e], 0x8b; inc ebp; rol byte ptr [ebx - 0x95f714], 0xff; aaa; call dword ptr [eax + 0xc]; 
0x00080b51: sal dword ptr [esp + ecx - 0x77], 0xc2; mov eax, dword ptr [eax]; test eax, eax; jne 0x80b50; ret; 
0x000b4ccd: sal ebx, 0xa4; pop eax; mov edi, eax; mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x000b4e1e: sal ebx, 1; stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000b4705: sal ebx, 1; stosb byte ptr es:[edi], al; pop edi; ret; 
0x0009db97: sal esi, 1; push esi; add dword ptr [ecx + eax - 0x72fc0000], 0xe8a1d092; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x00053646: sal esi, 1; ret 0xf40; 
0x001981d6: salc; add byte ptr [eax], al; add byte ptr [eax - 0x417af0f1], ch; add byte ptr [eax], al; add dh, dh; ret 0xf0f; 
0x000424de: salc; add byte ptr [ecx], dh; ror byte ptr [ecx + 0xfb83f2], 0x19; ret 0xba; 
0x0017f4fe: salc; add cl, byte ptr [ebx + 0x5b082444]; ret; 
0x000e322d: salc; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; and ah, 0x47; stc; call dword ptr [eax - 0x18]; 
0x0011d778: salc; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00086c23: salc; call dword ptr gs:[0x10]; 
0x000b46c0: salc; cld; pop edi; ret; 
0x0007c62c: salc; fstp dword ptr [edx]; add byte ptr [ebx - 0x77], dl; ret; 
0x000df196: salc; idiv bh; jmp dword ptr [ebp - 0x75]; 
0x0017b475: salc; inc edx; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00180e8f: salc; inc edx; clc; mov eax, edx; pop ebx; ret; 
0x0017ae15: salc; inc edx; clc; pop ebx; ret; 
0x0017aee5: salc; inc edx; hlt; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x0017af15: salc; inc edx; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0017af45: salc; inc edx; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x00188335: salc; inc edx; movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x0017b4e5: salc; inc edx; mul byte ptr [esi - 0x77]; inc edx; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0017ef0f: salc; inc edx; test dword ptr [edi], 0x88ff48b6; dec edx; dec dword ptr [ebx + 0x5b082444]; ret; 
0x000b5fc9: salc; lea ebx, [eax + 8]; mov eax, ebx; pop ebx; ret; 
0x000751b6: salc; mov byte ptr [0xc4830000], al; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0007b19f: salc; mov dword ptr [ecx], edx; pop ebx; pop esi; ret; 
0x00089813: salc; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x000b4cd4: salc; mov eax, dword ptr [esp + 4]; ret; 
0x000b4d64: salc; mov eax, dword ptr [esp + 8]; cld; pop edi; ret; 
0x000b4d3a: salc; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0017ae6d: salc; movdqa xmmword ptr [edx - 0x1a], xmm0; movq qword ptr [edx - 0xa], xmm0; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x00119a89: salc; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x000b469a: salc; pop edi; ret; 
0x00057b76: salc; pop esp; add dword ptr [eax], eax; add esp, 0x1c; ret; 
0x0012677c: salc; push ebx; mov ebx, 0x16; mov edi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0008a1e6: salc; push edi; cli; jmp dword ptr [esi - 0x70]; 
0x00130fe4: salc; push edi; stc; call dword ptr [eax - 1]; 
0x000b4db4: salc; ret; 
0x0015b8bd: salc; sub eax, edx; push eax; push esi; push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x00024d25: salc; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x0002acf3: salc; sub edi, ecx; call dword ptr [eax - 0x18]; ret; 
0x0003ec33: salc; xor dword ptr [ebx], edx; add byte ptr [ecx + 0x1eb3c9c7], al; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x0012711e: sar ah, 0xff; inc edi; test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x00192cdb: sar bh, 0xff; jmp dword ptr [esi + 0xf]; 
0x00192cdb: sar bh, 0xff; jmp dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6673; 
0x0005db14: sar bh, 1; dec dword ptr [ebx - 0x59b7b]; jmp dword ptr [ebp - 0x75]; 
0x0011ce79: sar bh, 1; je 0x11cea1; and byte ptr [edi], cl; dec edi; ret 0x8d50; 
0x00063b82: sar bh, cl; dec dword ptr [ebx - 0x50763]; jmp dword ptr [ebp - 0x5f]; 
0x0015e793: sar bh, cl; inc dword ptr [ebx - 0x2776eb3c]; pop ebx; pop esi; ret; 
0x0005d4d1: sar bh, cl; jmp ptr [ebx]; test dword ptr [eax - 0x7c000005], edi; in al, dx; or al, 0x89; ret; 
0x000ced3c: sar byte ptr [0xa3d70b], cl; setb dl; add edx, 0x16d; mov eax, edx; ret; 
0x0008d0b7: sar byte ptr [eax + 0x10], cl; pop ebx; ret; 
0x0010497c: sar byte ptr [eax + 0x1b4], cl; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x0011d99f: sar byte ptr [eax + 0x1e], 0x8b; inc esi; add al, 0x89; ret 0xe083; 
0x00198c83: sar byte ptr [eax + 0x20], cl; add eax, edx; ret; 
0x0007d52f: sar byte ptr [eax + 0x26], 0x29; ret; 
0x00118fb4: sar byte ptr [eax + 0x2c], 0x83; in al, dx; add al, 0x89; ret; 
0x0014674b: sar byte ptr [eax + 0x3a], 0x83; in al, dx; add al, 0x89; ret; 
0x00057fab: sar byte ptr [eax + 0x3a], 0x83; in al, dx; or byte ptr [ebp - 0x6ce847a], cl; call dword ptr [eax + 0x53]; 
0x0005809e: sar byte ptr [eax + 0x3f], 0x83; in al, dx; or byte ptr [ebp - 0x6ce847a], cl; call dword ptr [eax + 0x53]; 
0x0013e67f: sar byte ptr [eax + 0x5d], 0x89; ret; 
0x0008db32: sar byte ptr [eax + 0x6a], 0x31; sar byte ptr [ecx], cl; fmul dword ptr [edi]; xchg ebp, eax; ret 0x148d; 
0x000872d9: sar byte ptr [eax + 0xaf], cl; mov ebx, 2; mov esi, 8; call dword ptr gs:[0x10]; 
0x000875c8: sar byte ptr [eax + 0xaf], cl; mov esi, 8; call dword ptr gs:[0x10]; 
0x000d8f26: sar byte ptr [eax + 0xdc], 1; call dword ptr gs:[0x10]; 
0x0008b3b5: sar byte ptr [eax + 0xf0], cl; mov ecx, 7; mov dword ptr [ebx + 4], 0; mov esi, edx; call dword ptr gs:[0x10]; 
0x00092e07: sar byte ptr [eax + 1], cl; call 0x92d70; mov dword ptr [esp], esi; call ebx; 
0x001509d5: sar byte ptr [eax + 8], 0x83; les eax, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x00125225: sar byte ptr [eax + 8], 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0016b91c: sar byte ptr [eax + 9], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0008da64: sar byte ptr [eax + 9], 0x89; sub byte ptr [eax], 0x3a; add byte ptr [eax], al; xor eax, eax; ret; 
0x00174384: sar byte ptr [eax + 9], 0x8b; push esp; and al, 4; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00160fcb: sar byte ptr [eax], 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x000eac79: sar byte ptr [eax], 0xa; je 0xeabe2; pop ebx; pop esi; pop edi; ret; 
0x00119359: sar byte ptr [eax], 0xf; inc esp; ret; 
0x00198124: sar byte ptr [ebx], 0x4a; cld; jne 0x198130; pop ebx; ret; 
0x00082753: sar byte ptr [ebx], 0x54; and al, 4; setae al; ret; 
0x00173ba8: sar byte ptr [ebx], 0x9e; sar dh, 0xff; dec dword ptr [edi]; xchg esp, eax; ret 0xd008; 
0x0010c857: sar byte ptr [ebx], cl; inc ebp; or byte ptr [edi], cl; inc esp; ret 0x4589; 
0x00140cb7: sar byte ptr [ecx + 0x26], 0x8d; and byte ptr [eax - 0x58], 0xf9; call dword ptr [eax - 0x73]; 
0x000d72e9: sar byte ptr [ecx + 0x2f], cl; mov eax, 0x193; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00086c1a: sar byte ptr [ecx + 0x80], cl; mov eax, edi; mov esi, edx; call dword ptr gs:[0x10]; 
0x001192ec: sar byte ptr [ecx + 3], 0xc6; add eax, dword ptr [eax]; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x00093bed: sar byte ptr [ecx + 5], cl; lea eax, [edx + edx]; mov ebx, dword ptr [eax]; mov eax, 0x107; call dword ptr gs:[0x10]; 
0x000281ed: sar byte ptr [ecx - 0x28], 0x2d; ret 0; 
0x00027df6: sar byte ptr [ecx - 0x29], 0x2d; ret 0; 
0x00086b42: sar byte ptr [ecx], 1; ret; 
0x0008db36: sar byte ptr [ecx], cl; fmul dword ptr [edi]; xchg ebp, eax; ret 0x148d; 
0x00143662: sar byte ptr [ecx], cl; ret 0x860f; 
0x000891b8: sar byte ptr [edi], cl; stc; call dword ptr [eax - 0x18]; 
0x0008bd37: sar byte ptr [edx + 0x200], 0xf; inc esp; ret 0x118b; 
0x0016be06: sar byte ptr [edx + 1], 0xe8; call 0x8116be71; ret; 
0x0016bb36: sar byte ptr [edx + 1], 0xe8; mov eax, 0x81000062; ret; 
0x0016ba36: sar byte ptr [edx + 1], 0xe8; mov eax, 0x81000063; ret; 
0x000b82d8: sar byte ptr [edx - 0x80000000], 0x5b; pop esi; pop edi; pop ebp; ret; 
0x0009c12e: sar byte ptr [edx - 1], 0x5b; cmove eax, edx; add eax, 1; ret; 
0x001938f2: sar byte ptr [edx], 0x83; ret 0x2910; 
0x0009e853: sar byte ptr [edx], cl; cmove eax, edx; ret; 
0x000d4424: sar byte ptr [esi + 0x22], 1; ret 0x7c83; 
0x00086ba4: sar byte ptr [esi + 0x53053053], cl; lea ebx, [eax + 0x520]; mov eax, 0x182; call dword ptr gs:[0x10]; 
0x001422f6: sar byte ptr [esi + 5], 0x80; cmp ebp, dword ptr [esi]; je 0x142308; add esp, 8; pop ebx; ret; 
0x00037802: sar byte ptr [esi + 8], 1; mov eax, 0xae; call dword ptr gs:[0x10]; 
0x0011fab0: sar byte ptr [esi - 0xa], 1; dec dword ptr [ebx + 0x56897c40]; add al, 0x89; ret 0xe8c1; 
0x0016039c: sar ch, 0xff; inc dword ptr [ebx - 0x72aff33c]; cmp dword ptr [eax + 0x57], -7; call dword ptr [eax + 0x6a]; 
0x0015dd4a: sar ch, 0xff; jmp dword ptr [esi - 0x70]; 
0x00104e8f: sar dh, 0xff; call dword ptr [eax + 0x51]; 
0x0002141b: sar dh, 0xff; dec dword ptr [ebx - 0x6f70]; call dword ptr [esi + 0x53]; 
0x001047da: sar dh, 0xff; dec dword ptr [ecx - 0x14743]; jmp dword ptr [ebp - 0x5f]; 
0x00173bab: sar dh, 0xff; dec dword ptr [edi]; xchg esp, eax; ret 0xd008; 
0x00071010: sar dh, 0xff; dec dword ptr [edi]; xchg esp, eax; ret 0xd009; 
0x00109d2c: sar dh, 0xff; inc dword ptr [ebx - 0x7c72f314]; cld; sahf; stc; call dword ptr [eax - 0x18]; 
0x001048cb: sar dh, 0xff; jmp dword ptr [ebp - 0x75]; 
0x00028d5a: sar dh, 0xff; jmp dword ptr [esi - 0x70]; 
0x00146791: sar dh, cl; jmp dword ptr [esi - 0x70]; 
0x000f4356: sar dl, 0xf8; dec dword ptr [ecx + 0x3ecb01d0]; jmp ebx; 
0x0006015c: sar dl, 0xff; dec dword ptr [ecx - 0x4f363]; jmp dword ptr [ebp - 0x5f]; 
0x000736c9: sar dl, 1; jmp dword ptr [esi - 0x70]; 
0x0015cea6: sar dl, cl; jmp dword ptr [ebp - 0x75]; 
0x00073479: sar dl, cl; jmp dword ptr [esi - 0x70]; 
0x0003795b: sar dword ptr [0xfffff001], cl; jae 0x216d0; ret; 
0x000857e1: sar dword ptr [eax + 0xf0], 1; mov edx, 0x7fffffff; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00070fbc: sar dword ptr [ecx], 0xca; jbe 0x71130; sub esp, 8; push 0; push esi; call dword ptr [ebx + 8]; 
0x00071480: sar dword ptr [ecx], 0xca; jbe 0x714d8; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x00073b49: sar dword ptr [ecx], 0xca; jbe 0x73b91; sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x0007961d: sar dword ptr [ecx], 0xca; jbe 0x797f0; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x0007f979: sar dword ptr [ecx], 0xca; jbe 0x7f9d0; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x000ea062: sar dword ptr [ecx], cl; ret 0xd17f; 
0x00125995: sar dword ptr [edx], 1; cmovb eax, edx; ret; 
0x000b5929: sar dword ptr [esi], 1; jmp ecx; 
0x000b5929: sar dword ptr [esi], 1; jmp ecx; lea esi, [esi]; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1d8]; ret; 
0x0008bb5e: sar eax, 0x1c; and eax, 3; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0008bb9e: sar eax, 0x1e; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00116fb1: sar eax, 0x1f; add esp, 8; pop ebx; ret; 
0x0010a348: sar eax, 0x1f; mov dword ptr [esp + 0xc], eax; mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0003627f: sar eax, 0x1f; not eax; and eax, edx; ret; 
0x00035f2f: sar eax, 0x1f; pop edi; not eax; and eax, edx; ret; 
0x00178225: sar eax, 0x1f; ret; 
0x00035b6b: sar eax, 0x1f; sub ecx, edx; not eax; and eax, ecx; ret; 
0x0008431f: sar eax, 1; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000e98f1: sar eax, 1; pop edi; pop ebp; ret; 
0x0008437f: sar eax, 2; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00074b2a: sar eax, 2; pop edi; pop ebp; ret; 
0x00076ba9: sar eax, 2; ret; 
0x00133912: sar eax, 5; add esp, 0xc; ret; 
0x00171e9d: sar eax, 5; and dword ptr [edx + eax*4], ebx; xor eax, eax; pop ebx; ret; 
0x00171e3e: sar eax, 5; and edx, dword ptr [ecx + eax*4]; setne al; movzx eax, al; ret; 
0x00171e6d: sar eax, 5; or dword ptr [edx + eax*4], ebx; xor eax, eax; pop ebx; ret; 
0x00081735: sar ebp, 0x1f; pop edi; mov edx, ebp; pop ebp; ret; 
0x00076432: sar ebx, 2; lea eax, [ebx - 1]; pop ebx; ret; 
0x000381d3: sar ebx, 5; rol eax, cl; and dword ptr [edx + ebx*4], eax; xor eax, eax; pop ebx; ret; 
0x00038173: sar ebx, 5; shl eax, cl; or dword ptr [edx + ebx*4], eax; xor eax, eax; pop ebx; ret; 
0x00038229: sar ecx, 5; and eax, dword ptr [edx + ecx*4]; setne al; movzx eax, al; ret; 
0x00092694: sar ecx, cl; dec dword ptr [ebx - 0x7972778b]; pushal; test cl, bh; call dword ptr [eax + 0x68]; 
0x00076d6c: sar edi, 0x1f; mov edx, edi; pop edi; pop ebp; ret; 
0x0009f9fb: sar edi, 0xf8; dec dword ptr [ebp - 0x66ab770]; call dword ptr [edx - 0x73]; 
0x00192c1b: sar edi, 0xff; jmp dword ptr [esi + 0xf]; 
0x00192c1b: sar edi, 0xff; jmp dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0016707d: sar edi, 0xff; mov dword ptr [eax], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x000649b9: sar edi, 1; dec dword ptr [ebx - 0x5277b]; call dword ptr [ebx + 0x53]; 
0x0005deb7: sar edi, 1; dec dword ptr [ebx - 0x59b7b]; jmp dword ptr [ebp - 0x75]; 
0x0015e7bd: sar edi, 1; inc dword ptr [ebx - 0x77cef3c]; add dword ptr [eax + 1], edi; sbb eax, -1; add esp, 0xc; ret; 
0x00098c24: sar edi, 1; jmp dword ptr [ebp - 0x5f]; 
0x00136829: sar edi, 1; jmp dword ptr [esi - 0x70]; 
0x00136698: sar edi, cl; jmp dword ptr [esi - 0x70]; 
0x00111a7e: sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x000764d3: sar edx, 2; jmp 0x764c2; mov eax, 0xffffffff; pop ebx; ret; 
0x000764bf: sar edx, 2; mov eax, dword ptr [ecx + 8]; pop ebx; sub eax, edx; ret; 
0x0006a99b: sar esi, 2; push esi; push ecx; push eax; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x0004ac77: saveprevssp; mov dword ptr [edi + 0x15c], eax; mov esp, edx; mov esi, dword ptr [edi + 0x3c]; mov edi, dword ptr [edi + 0x38]; ret; 
0x001575d2: sbb ah, 0x62; stc; call dword ptr [eax + 0x6a]; 
0x00157626: sbb ah, 0x62; stc; jmp dword ptr [ebp - 0x75]; 
0x0015e612: sbb ah, byte ptr [eax]; in eax, dx; call dword ptr [eax - 0x73]; 
0x0007bca3: sbb ah, ch; call dword ptr [eax - 0x73]; 
0x001745d4: sbb ah, dh; sti; jmp dword ptr [esi - 0x70]; 
0x0013aabf: sbb al, 0; add byte ptr [eax], al; add byte ptr [ebp - 0x6b73280], cl; call dword ptr [eax - 1]; 
0x0018fcae: sbb al, 0; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0011830c: sbb al, 0x11; add byte ptr [ebx - 0xc77e], cl; dec dword ptr [ebx - 0x3f7aefc0]; je 0x11831d; ret; 
0x00023741: sbb al, 0x24; call edi; 
0x0002280e: sbb al, 0x24; call esi; 
0x000363e4: sbb al, 0x24; fld dword ptr [esp]; add esp, 4; ret; 
0x00036389: sbb al, 0x24; fld dword ptr [esp]; mov dword ptr [edx], eax; add esp, 4; ret; 
0x000cae62: sbb al, 0x24; fld qword ptr [esp]; add esp, 0xc; ret; 
0x00036124: sbb al, 0x24; fld qword ptr [esp]; add esp, 8; ret; 
0x00022981: sbb al, 0x24; mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x00023011: sbb al, 0x24; mov ecx, dword ptr [ebp - 0x40]; call ecx; 
0x00171dfa: sbb al, 0x24; ret; 
0x00169cf5: sbb al, 0x29; ret; 
0x00028789: sbb al, 0x2c; stc; call dword ptr [eax - 0x18]; 
0x001728df: sbb al, 0x31; fild dword ptr [eax + 0xf72007d]; xchg esp, eax; ret; 
0x00021ab3: sbb al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x001252ed: sbb al, 0x31; ror byte ptr [ebx - 0x17c7dba4], 0x67; aam 0xf5; dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x0012493d: sbb al, 0x31; ror byte ptr [ebx - 0x17cbdba4], 0x17; fdivrp st(5); dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x00124c1d: sbb al, 0x31; ror byte ptr [ebx - 0x17cbdba4], 0x37; fcomi st(5); dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x00124d6d: sbb al, 0x31; ror byte ptr [ebx - 0x17cbdba4], 0xe7; fprem1; dec dword ptr [ebp - 0x76fbdbb4]; ret 0x448b; 
0x000fb1cf: sbb al, 0x31; ror byte ptr [ebx - 0x74bfdba4], 0x74; and al, 0x44; lea ecx, [esp + 0xc]; mov eax, 0x1a7; call dword ptr gs:[0x10]; 
0x000ce9bd: sbb al, 0x31; ror byte ptr [ebx - 0x74cbdbac], 0x5c; and al, 0x30; lea ecx, [esp + 0xc]; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x000c9bf2: sbb al, 0x39; dec edi; sbb al, 0xf; test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x000d7d43: sbb al, 0x39; ret 0x8d0f; 
0x000eaa6e: sbb al, 0x39; ret; 
0x0012c551: sbb al, 0x39; sal byte ptr [edx + 0xa], 1; mov eax, 1; ret; 
0x0013dbe1: sbb al, 0x43; stc; call dword ptr [eax - 1]; 
0x0011f6a5: sbb al, 0x4c; stc; call dword ptr [eax + 0x57]; 
0x00058982: sbb al, 0x50; call 0x72280; cmp eax, 1; sbb eax, eax; add esp, 0x1c; ret; 
0x0011947f: sbb al, 0x50; push dword ptr [esp + 0x1c]; call 0x58600; add esp, 0x10; add esp, 0xc; ret; 
0x000d715e: sbb al, 0x51; mov dword ptr [esp + 0x18], ecx; push ebx; call eax; 
0x0014f49f: sbb al, 0x51; push eax; push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x001590ce: sbb al, 0x52; lea edx, [esi - 0xd0be0]; push edx; push 1; push ebx; call dword ptr [eax]; 
0x001591ff: sbb al, 0x52; lea edx, [esi - 0xd0be0]; push edx; push 2; push ebx; call dword ptr [eax]; 
0x00163bd8: sbb al, 0x53; call dword ptr [eax + 0xc]; 
0x0015b0a1: sbb al, 0x53; call dword ptr [eax + 4]; 
0x0015b051: sbb al, 0x53; call dword ptr [eax]; 
0x00163b14: sbb al, 0x53; call eax; 
0x00158918: sbb al, 0x56; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0008eab7: sbb al, 0x5b; lea eax, [eax + eax - 1]; pop esi; pop edi; pop ebp; ret; 
0x0011e335: sbb al, 0x5b; mov eax, ebp; pop esi; pop edi; pop ebp; ret; 
0x00155ddc: sbb al, 0x5b; mov eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x0006ab2c: sbb al, 0x5b; mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x000339b0: sbb al, 0x5b; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x0007671c: sbb al, 0x5b; neg eax; pop esi; pop edi; pop ebp; ret; 
0x0008ea7f: sbb al, 0x5b; or eax, 1; pop esi; pop edi; pop ebp; ret; 
0x0009b5fa: sbb al, 0x5b; pop esi; mov eax, ebp; pop edi; pop ebp; ret; 
0x0007352d: sbb al, 0x5b; pop esi; pop edi; pop ebp; jmp eax; 
0x00021d1b: sbb al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x0009c6f4: sbb al, 0x5b; pop esi; ret; 
0x000ada6a: sbb al, 0x5f; pop esi; pop ebx; ret; 
0x00082806: sbb al, 0x65; mov dword ptr [0x80], eax; ret; 
0x000827ed: sbb al, 0x65; mov edx, dword ptr [0x7c]; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x80], eax; ret; 
0x0016569e: sbb al, 0x65; sub eax, dword ptr [0x14]; jne 0x1656ac; add esp, 0x2c; ret; 
0x0007bdfe: sbb al, 0x65; sub eax, dword ptr [0x14]; jne 0x7be1c; add esp, 0x28; pop ebx; ret; 
0x000cbcdb: sbb al, 0x65; sub ecx, dword ptr [0x14]; jne 0xcbcea; add esp, 0x28; pop ebx; ret; 
0x00118046: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x118099; add esp, 0x28; pop ebx; ret; 
0x001180e6: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x118139; add esp, 0x28; pop ebx; ret; 
0x001244bc: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x1244e9; add esp, 0x28; pop ebx; ret; 
0x0012514c: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x125179; add esp, 0x28; pop ebx; ret; 
0x00133631: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x133645; add esp, 0x2c; ret; 
0x001336a1: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x1336b5; add esp, 0x2c; ret; 
0x0013aae2: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x13aaf0; add esp, 0x2c; ret; 
0x0014ab44: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x14ab55; movzx eax, ax; add esp, 0x2c; ret; 
0x0014eda5: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x14edb4; add esp, 0x28; pop ebx; ret; 
0x00158ef8: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x158f07; add esp, 0x28; pop ebx; ret; 
0x0016237a: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x162397; add esp, 0x28; pop ebx; ret; 
0x0016241a: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x162437; add esp, 0x28; pop ebx; ret; 
0x0016e8c3: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x16e901; add esp, 0x28; pop ebx; ret; 
0x0016ea84: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x16eaab; add esp, 0x28; pop ebx; ret; 
0x0016eb26: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x16eb54; add esp, 0x28; pop ebx; ret; 
0x0016f1bb: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x16f1ca; add esp, 0x28; pop ebx; ret; 
0x00037f3e: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x37f7c; add esp, 0x28; pop ebx; ret; 
0x0003ad58: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x3ad66; add esp, 0x2c; ret; 
0x0003ae88: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x3ae96; add esp, 0x2c; ret; 
0x000821b1: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x821dd; add esp, 0x2c; ret; 
0x00082319: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x8234b; add esp, 0x2c; ret; 
0x000864fa: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x86508; add esp, 0x2c; ret; 
0x0008ae06: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x8ae15; add esp, 0x28; pop ebx; ret; 
0x0008ae96: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x8aea4; add esp, 0x2c; ret; 
0x0008c1fa: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x8c208; add esp, 0x2c; ret; 
0x0008c65a: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x8c668; add esp, 0x2c; ret; 
0x0008cb46: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x8cb54; add esp, 0x2c; ret; 
0x0008cf96: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x8cfa4; add esp, 0x2c; ret; 
0x0009004f: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x90077; add esp, 0x2c; ret; 
0x000902db: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x90307; add esp, 0x2c; ret; 
0x00092225: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x92234; add esp, 0x28; pop ebx; ret; 
0x000938ad: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x938bc; add esp, 0x28; pop ebx; ret; 
0x000cad0a: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0xcad27; add esp, 0x28; pop ebx; ret; 
0x000cbf31: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0xcbf79; add esp, 0x28; pop ebx; ret; 
0x000d7022: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0xd7062; add esp, 0x28; pop ebx; ret; 
0x000d7241: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0xd7250; add esp, 0x28; pop ebx; ret; 
0x000da806: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0xda859; add esp, 0x28; pop ebx; ret; 
0x000df3f2: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0xdf449; add esp, 0x28; pop ebx; ret; 
0x000df492: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0xdf4e9; add esp, 0x28; pop ebx; ret; 
0x0010413b: sbb al, 0x6a; add al, 0xe8; pop ebp; ret 0xfffd; 
0x0013132d: sbb al, 0x6a; add eax, 0x6509c8c1; xor eax, dword ptr [0x18]; push esi; call eax; 
0x000e8383: sbb al, 0x74; push -0x77; ret; 
0x0003a538: sbb al, 0x74; stc; call dword ptr [eax - 0x73]; 
0x000d7e9a: sbb al, 0x7d; mov bh, 0x83; ret 0x8301; 
0x000d7e91: sbb al, 0x7e; fimul dword ptr [ebx + 0x3b0c246c]; push 0x83b77d1c; ret 0x8301; 
0x00171e71: sbb al, 0x82; xor eax, eax; pop ebx; ret; 
0x0019c1f2: sbb al, 0x83; cli; add ecx, dword ptr [edi]; test dword ptr [edx + esi*8 - 1], edx; call ebx; 
0x000695be: sbb al, 0x83; in al, dx; add al, 0x53; push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x001669f3: sbb al, 0x83; in al, dx; add al, 0x6a; call dword ptr [ebp + 0x56]; 
0x0009a1a8: sbb al, 0x83; in al, dx; or byte ptr [ebp - 0x6bc737a], cl; call dword ptr [ebx + 0x50]; 
0x0007ca47: sbb al, 0x83; in al, dx; or byte ptr [ecx], ch; ret 0x352; 
0x000d8b83: sbb al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00165c3e: sbb al, 0x83; les ebx, ptr [eax]; pop ebx; ret; 
0x0012c5be: sbb al, 0x83; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00027683: sbb al, 0x83; les edi, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; jmp eax; 
0x00070d3b: sbb al, 0x83; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x00082029: sbb al, 0x83; les edx, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x000cc3bc: sbb al, 0x83; les esp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000ec281: sbb al, 0x83; ret 0x3901; 
0x000250ec: sbb al, 0x83; ret 0x8301; 
0x000fd532: sbb al, 0x83; ret 0x8501; 
0x0014075e: sbb al, 0x83; ret 0x8802; 
0x000da186: sbb al, 0x83; ret 0x8901; 
0x00032a7d: sbb al, 0x83; ret 0x8b04; 
0x000268d8: sbb al, 0x83; ret; 
0x000ec449: sbb al, 0x83; rol byte ptr [ecx], 0x39; ret 0xef7f; 
0x000256a8: sbb al, 0x83; rol byte ptr [ecx], 0x83; ret 0x8901; 
0x000888f3: sbb al, 0x83; rol dword ptr [ecx], 0x83; ret 0x8108; 
0x000fb424: sbb al, 0x83; ror byte ptr [eax], 0x50; call 0xb4980; add esp, 0x1c; ret; 
0x000921b2: sbb al, 0x84; stc; call dword ptr [eax - 0x73]; 
0x000814ff: sbb al, 0x85; ror byte ptr [edi], 0x48; ret 0xff50; 
0x00025e2b: sbb al, 0x85; ror byte ptr [edi], 0x85; ret; 
0x00160dca: sbb al, 0x85; sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x55; call eax; 
0x00158699: sbb al, 0x85; sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x56; call eax; 
0x00159f2d: sbb al, 0x85; sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x57; call eax; 
0x0009423d: sbb al, 0x89; add al, 0x24; call esi; 
0x000306e6: sbb al, 0x89; call 0x5d626548; ret; 
0x00049f9f: sbb al, 0x89; call 0x5d63fe01; ret; 
0x00049ff5: sbb al, 0x89; call 0x5d63fe57; ret; 
0x000700d7: sbb al, 0x89; call 0x5d665f39; ret; 
0x000701cd: sbb al, 0x89; call 0x5d66602f; ret; 
0x0007bad3: sbb al, 0x89; call 0x5d671935; ret; 
0x0007db57: sbb al, 0x89; call 0x5d6739b9; ret; 
0x00090850: sbb al, 0x89; call 0x5d6866b2; ret; 
0x0009b62c: sbb al, 0x89; call 0x5d69148e; ret; 
0x0011978f: sbb al, 0x89; call 0x5d70f5f1; ret; 
0x0011e307: sbb al, 0x89; call 0x5d714169; ret; 
0x001513f8: sbb al, 0x89; call 0x5d74725a; ret; 
0x001519b9: sbb al, 0x89; call 0x5d74781b; ret; 
0x000d7d40: sbb al, 0x89; dec esi; sbb al, 0x39; ret 0x8d0f; 
0x000337f0: sbb al, 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x00077c12: sbb al, 0x89; inc edi; or al, 1; ret 0xc101; 
0x000a2029: sbb al, 0x89; inc edx; add al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0012d345: sbb al, 0x89; loope 0x12d2d2; ret 0x25; 
0x000314e7: sbb al, 0x89; loope 0x31474; ret; 
0x000eaaa8: sbb al, 0x89; pop edx; and byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0002f57e: sbb al, 0x89; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x0007c35a: sbb al, 0x89; ret 0x1b8; 
0x00030cd4: sbb al, 0x89; ret 0x25; 
0x0019f5fa: sbb al, 0x89; ret 0x4489; 
0x0013a0c5: sbb al, 0x89; ret 0x478b; 
0x0012f415: sbb al, 0x89; ret 0x562b; 
0x0012f5e8: sbb al, 0x89; ret 0x572b; 
0x0008c047: sbb al, 0x89; ret 0x895b; 
0x0009da9b: sbb al, 0x89; ret 0x98eb; 
0x00028033: sbb al, 0x89; ret 0xb60f; 
0x000ec263: sbb al, 0x89; ret 0xc085; 
0x0007591a: sbb al, 0x89; ret 0xc883; 
0x000f7aec: sbb al, 0x89; ret 0xeac0; 
0x00084fdc: sbb al, 0x89; ret; 
0x000f0eff: sbb al, 0x89; shr dword ptr [ecx], cl; ret; 
0x00144e69: sbb al, 0x89; test dword ptr [ebx + edi*8 + 0x458bffff], edi; and byte ptr [ecx - 0x4477b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000d9d65: sbb al, 0x89; xor al, byte ptr [ebx + 0x5e5b04c4]; ret; 
0x00159309: sbb al, 0x8b; inc edx; add al, 0x89; adc al, 0x24; call dword ptr [eax + 0x10]; 
0x00124e58: sbb al, 0x8b; inc esp; and al, 0x60; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000ca6c8: sbb al, 0x8b; je 0xca6f0; or byte ptr [ecx], al; rol dword ptr [ecx], cl; ret; 
0x000a1dbf: sbb al, 0x8b; jl 0xa1de7; sbb byte ptr [edi], cl; mov esi, 0xfc53906; xchg esp, eax; ret 0xc739; 
0x000918cc: sbb al, 0x8b; jne 0x918d0; mov dword ptr [esp], ebp; call 0x20140; mov dword ptr [esp], edi; call esi; 
0x0010529f: sbb al, 0x8b; pop esp; and al, 0x14; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x0011c1ab: sbb al, 0x8b; pop esp; and al, 0x18; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0003540f: sbb al, 0x8b; push ebx; or byte ptr [ecx - 0x50f0fbb9], cl; ret 0x6c8b; 
0x0014a4e8: sbb al, 0x8b; sbb dword ptr [ecx], edi; ret; 
0x000b6f70: sbb al, 0x8d; adc esp, -0x6a; stc; call dword ptr [eax - 0x73]; 
0x0013a6eb: sbb al, 0x8d; add ah, 0x5b; stc; call dword ptr [eax - 0x73]; 
0x00145619: sbb al, 0x8d; add ah, 0xa9; stc; call dword ptr [eax - 0x73]; 
0x0016d925: sbb al, 0x8d; add byte ptr [edi], 0x66; stc; call dword ptr [eax - 0x18]; 
0x0013a2dd: sbb al, 0x8d; add byte ptr [edx], 0x4a; stc; call dword ptr [eax + 0x6a]; 
0x0013a041: sbb al, 0x8d; cmp byte ptr [edx + 0x5b], 0xf9; call dword ptr [eax + 0x6a]; 
0x0013defe: sbb al, 0x8d; cmp cl, 0x5c; stc; call dword ptr [eax + 0x53]; 
0x0013a6ac: sbb al, 0x8d; cmp dword ptr [eax + 0x57], -7; call dword ptr [eax + 0x6a]; 
0x0013a217: sbb al, 0x8d; cmp dword ptr [eax - 0x5a], -7; call dword ptr [eax - 0x73]; 
0x000e5e62: sbb al, 0x8d; inc ebx; add bl, byte ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x000e5d3a: sbb al, 0x8d; inc ebx; or byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0010eb93: sbb al, 0x8d; push eax; jmp dword ptr [esi - 0x7d]; 
0x000ee9c5: sbb al, 0x8d; push ebx; add al, 0x83; ret; 
0x0009500c: sbb al, 0x8d; push ebx; or dh, dh; ret 0xf0f; 
0x0015b079: sbb al, 0x8d; push ecx; add al, 0x52; push ebx; call dword ptr [eax + 4]; 
0x0015b039: sbb al, 0x8d; push ecx; add al, 0x52; push ebx; call dword ptr [eax]; 
0x0013a614: sbb al, 0x8d; sbb cl, 0x5b; stc; call dword ptr [eax - 0x73]; 
0x0013a680: sbb al, 0x8d; sub byte ptr [eax], 0xa6; stc; call dword ptr [eax + 0x55]; 
0x000b7123: sbb al, 0x8d; xchg ah, ah; xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x000b6a91: sbb al, 0x8d; xchg al, cl; xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x0013a59b: sbb al, 0x8d; xchg dword ptr [eax], eax; cmpsb byte ptr [esi], byte ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x0013a768: sbb al, 0x8d; xchg dword ptr [ebx + ebx*2 - 7], ebx; call dword ptr [eax - 0x73]; 
0x0013a310: sbb al, 0x8d; xchg eax, esp; movsd dword ptr es:[edi], dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x0013dcd9: sbb al, 0x8d; xor ah, 0x5c; stc; call dword ptr [eax + 0x53]; 
0x0013a556: sbb al, 0x8d; xor byte ptr [ebx], 0x5b; stc; call dword ptr [eax - 0x42]; 
0x000e95db: sbb al, 0x8e; je 0xe95f0; pop ebx; pop esi; ret; 
0x000fc239: sbb al, 0x9d; stc; call dword ptr [eax - 0x18]; 
0x00120dcd: sbb al, 0xa2; stc; call dword ptr [eax - 0x18]; 
0x00150c96: sbb al, 0xae; stc; call dword ptr [eax - 0x73]; 
0x0016f0b8: sbb al, 0xb4; stc; call dword ptr [eax + 0x6a]; 
0x0012c4ff: sbb al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x00123190: sbb al, 0xb8; sub al, 1; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x00036a4b: sbb al, 0xc1; call dword ptr [eax]; 
0x00178224: sbb al, 0xc1; clc; pop ds; ret; 
0x00111a7d: sbb al, 0xc1; cli; pop ds; call dword ptr gs:[0x10]; 
0x000df2bc: sbb al, 0xc3; nop; endbr32; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x0012cbae: sbb al, 0xc6; add ah, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0012cb61: sbb al, 0xc6; add cl, byte ptr [edx]; pop ebx; pop esi; pop edi; ret; 
0x0003c990: sbb al, 0xc; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000d7083: sbb al, 0xdd; add al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001260b4: sbb al, 0xe8; add ax, 0; add esp, 0x1c; ret; 
0x000b756a: sbb al, 0xe8; add byte ptr [eax], ah; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0003e67a: sbb al, 0xe8; add byte ptr [ecx], bh; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00051f84: sbb al, 0xe8; add word ptr ss:[eax], ax; add esp, 0x1c; ret; 
0x0009b028: sbb al, 0xe8; and bh, byte ptr [ebx]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00119b69: sbb al, 0xe8; and dword ptr [edi], eax; add byte ptr [eax], al; add esp, 0x10; add esp, 0xc; ret; 
0x00092ca0: sbb al, 0xe8; cmp al, byte ptr [esi]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0011e628: sbb al, 0xe8; cmp bh, 0xff; jmp dword ptr [esi - 0x70]; 
0x0008150d: sbb al, 0xe8; cmp eax, 0x83ffffff; les ebx, ptr [eax]; pop ebx; ret; 
0x000b75ac: sbb al, 0xe8; dec edi; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0017821c: sbb al, 0xe8; dec esi; stc; inc dword ptr [ebx - 0x73ee33c]; pop ds; ret; 
0x000c4c34: sbb al, 0xe8; div byte ptr [ecx + edi*8 + 0x1cc483ff]; ret; 
0x0009beec: sbb al, 0xe8; fidivr word ptr [ebx]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0003a99f: sbb al, 0xe8; imul edi, eax, -1; jmp dword ptr [esi - 0x70]; 
0x0003b8bb: sbb al, 0xe8; inc dword ptr [ecx]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00131d04: sbb al, 0xe8; jbe 0x131d37; clc; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00057bb4: sbb al, 0xe8; jbe 0x57b3d; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x001087b6: sbb al, 0xe8; je 0x1087c5; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00057b35: sbb al, 0xe8; jne 0x57b5d; add al, byte ptr [eax]; add esp, 0x1c; ret; 
0x00058cd5: sbb al, 0xe8; jne 0x58ce0; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000b766a: sbb al, 0xe8; jo 0xb76e9; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x001749e6: sbb al, 0xe8; les eax, ptr [ecx - 0x2708000a]; sbb eax, eax; add esp, 0x1c; ret; 
0x0015a100: sbb al, 0xe8; ljmp 0x1cc4:0x830000bc; ret; 
0x00119310: sbb al, 0xe8; ljmp 0x1cc4:0x83fff3f2; ret; 
0x00116743: sbb al, 0xe8; mov bh, 0xa; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00132d18: sbb al, 0xe8; mov byte ptr [0x83fff82f], al; les ebx, ptr [eax]; pop ebx; ret; 
0x00057b94: sbb al, 0xe8; mov dh, 0x18; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0011e570: sbb al, 0xe8; mov edx, 0x83fffffe; les ebx, ptr [eax]; pop ebx; ret; 
0x000cbb6c: sbb al, 0xe8; mov esi, 0x83fffff6; les ebx, ptr [eax]; pop ebx; ret; 
0x00038c4e: sbb al, 0xe8; or al, 0x3c; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0010aad2: sbb al, 0xe8; or byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0009be2f: sbb al, 0xe8; or eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00038c2c: sbb al, 0xe8; push ds; pop edx; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00058cf4: sbb al, 0xe8; push esi; pop es; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00114c77: sbb al, 0xe8; ret; 
0x00057b74: sbb al, 0xe8; salc; pop esp; add dword ptr [eax], eax; add esp, 0x1c; ret; 
0x0016039a: sbb al, 0xe8; sar ch, 0xff; inc dword ptr [ebx - 0x72aff33c]; cmp dword ptr [eax + 0x57], -7; call dword ptr [eax + 0x6a]; 
0x000da071: sbb al, 0xe8; test eax, 0x8300094c; les edx, ptr [eax]; mov eax, dword ptr [esp + 0xc]; call eax; 
0x00058904: sbb al, 0xe8; wait; add dword ptr [eax], eax; add esp, 0x1c; ret; 
0x0017a8e6: sbb al, 0xe8; xchg esp, eax; and eax, 0xd8f7fffc; sbb eax, eax; add esp, 0x1c; ret; 
0x000583ba: sbb al, 0xe8; xor byte ptr [eax], bl; or eax, dword ptr [eax]; add esp, 0x1c; ret; 
0x0015dd48: sbb al, 0xe9; sar ch, 0xff; jmp dword ptr [esi - 0x70]; 
0x0015e538: sbb al, 0xec; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000fde11: sbb al, 0xed; call dword ptr [eax + 0x6a]; 
0x0014ddbb: sbb al, 0xee; dec dword ptr [ebp - 0x6531f79]; call dword ptr [eax - 0x73]; 
0x0010dd96: sbb al, 0xf2; dec dword ptr [ebp - 0x65fc37d]; call dword ptr [eax - 0x73]; 
0x000f234c: sbb al, 0xf6; ret 0xf08; 
0x00123885: sbb al, 0xf7; mov byte ptr [edx], 0; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x14]; cmovne edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x000f82ca: sbb al, 0xf9; mov dword ptr [eax], 0; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x0012185e: sbb al, 0xf; mov dh, 0xc0; neg eax; ret; 
0x0015c83b: sbb al, 0xf; mov dh, 0xc0; ret; 
0x00078530: sbb al, 0xf; test cl, cl; add byte ptr [eax], al; add byte ptr [ebp + 0x4889044a], cl; adc byte ptr [ecx - 0x9ec74ce], cl; ret 0x7402; 
0x000c9bf5: sbb al, 0xf; test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x000abf8d: sbb al, 0xf; test dword ptr [ebp + eax + 0x5e5f0000], ecx; pop ebx; ret; 
0x000ad660: sbb al, 0xf; test ecx, ebp; add eax, 0x5e5f0000; pop ebx; ret; 
0x0019c54d: sbb al, 0xf; xchg ebp, eax; ret 0xd789; 
0x0014ca46: sbb al, 0xf; xchg edi, eax; ret 0xd008; 
0x0004af4d: sbb al, 0xf; xchg edx, eax; ret 0x1e89; 
0x0004ae4d: sbb al, 0xf; xchg edx, eax; ret 0xe89; 
0x000cba8b: sbb al, 0xf; xchg esp, eax; ret 0xd338; 
0x0012402d: sbb al, 0xff; inc dword ptr [ebx - 0x77cef3c]; push dword ptr [esp - 0x7d]; in al, dx; add al, 0x89; ret; 
0x0011e624: sbb al, 0xff; je 0x11e64c; sbb al, 0xe8; cmp bh, 0xff; jmp dword ptr [esi - 0x70]; 
0x001260b0: sbb al, 0xff; je 0x1260d8; sbb al, 0xe8; add ax, 0; add esp, 0x1c; ret; 
0x0015a0fc: sbb al, 0xff; je 0x15a124; sbb al, 0xe8; ljmp 0x1cc4:0x830000bc; ret; 
0x00051f80: sbb al, 0xff; je 0x51fa8; sbb al, 0xe8; add word ptr ss:[eax], ax; add esp, 0x1c; ret; 
0x000c4c30: sbb al, 0xff; je 0xc4c58; sbb al, 0xe8; div byte ptr [ecx + edi*8 + 0x1cc483ff]; ret; 
0x0007caa2: sbb al, 0xff; jo 0x7cade; call 0x10a3d0; add esp, 0x18; pop ebx; ret; 
0x0015f737: sbb al, 0xff; mov al, 0x90; add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; 
0x00124f18: sbb al, 1; add byte ptr [eax], al; add byte ptr [ecx - 0x7ce7dbbc], cl; ret; 
0x000b677e: sbb al, 1; add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0x44c7; 
0x000ddb6c: sbb al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00197890: sbb al, 1; add byte ptr [eax], al; lea eax, [eax + 7]; pop edi; ret; 
0x000ddb2a: sbb al, 1; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00089556: sbb al, 1; add byte ptr [eax], al; ret; 
0x0003830d: sbb al, 1; add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x38321; add esp, 0x12c; ret; 
0x00104636: sbb al, 1; add byte ptr [eax], al; xor ebx, ebx; mov dword ptr [esp + 0x124], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x000944f4: sbb al, 1; pop eax; add al, 0x89; ret; 
0x0013022f: sbb al, 1; ret 0x448b; 
0x0011c870: sbb al, 3; add byte ptr [eax], al; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x000a5bb0: sbb al, 3; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000489a1: sbb al, 4; add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x489b5; add esp, 0x42c; ret; 
0x0002f854: sbb al, 8; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x001096e6: sbb al, 9; adc al, byte ptr [eax]; push ebx; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0008de58: sbb al, byte ptr [eax]; add bh, dh; mov dword ptr [ecx], 0x74000000; aad 0x89; ret 0xe083; 
0x001196b3: sbb al, byte ptr [eax]; add byte ptr [eax], al; lea edi, [ebx - 1]; cmp edi, 3; cmovae esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00088665: sbb al, byte ptr [eax]; add byte ptr [ebp + 0x2e], dh; mov eax, edx; pop ebx; pop esi; ret; 
0x00088963: sbb al, byte ptr [eax]; add byte ptr [ebp + 8], dh; xor eax, eax; pop ebx; ret; 
0x000888e6: sbb al, byte ptr [eax]; add byte ptr [ebx + 0x7501a802], cl; add eax, 0x75fef883; sbb al, 0x83; rol dword ptr [ecx], 0x83; ret 0x8108; 
0x0018fefe: sbb al, byte ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0015867d: sbb al, byte ptr [eax]; add byte ptr [ebx - 0x76e7dbbc], cl; xor al, 0x24; call dword ptr [eax + 0x10]; 
0x0008834c: sbb al, byte ptr [eax]; mov eax, dword ptr [eax + 0x3a28]; ret; 
0x00080e8c: sbb al, byte ptr [eax]; mov eax, dword ptr [eax + 0xce0]; ret; 
0x0008299d: sbb al, byte ptr [eax]; mov eax, dword ptr [esp + 4]; cmp dword ptr [eax], 1; je 0x829b0; ret; 
0x0008291c: sbb al, byte ptr [eax]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x104], edx; ret; 
0x0008293c: sbb al, byte ptr [eax]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x108], edx; ret; 
0x0008295c: sbb al, byte ptr [eax]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x10c], edx; ret; 
0x0008297c: sbb al, byte ptr [eax]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x110], edx; ret; 
0x0008956c: sbb al, byte ptr [eax]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x114], edx; ret; 
0x0008954c: sbb al, byte ptr [eax]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x11c], edx; ret; 
0x000d72d1: sbb al, byte ptr [ebx + 0x548d08ec]; and al, 0xc; push edx; push ebx; call eax; 
0x0011d632: sbb al, byte ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x00108913: sbb al, byte ptr [ebx + 0x5e5b74c4]; ret; 
0x00038bfc: sbb al, byte ptr [ecx + 0x220c4]; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000336d9: sbb al, byte ptr [ecx]; pop edx; add al, 0x83; ret 0x3908; 
0x000e0274: sbb al, byte ptr [edi - 7]; call dword ptr [eax - 0x18]; 
0x000a58b2: sbb al, byte ptr [esi]; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0010108b: sbb al, ch; jmp esi; 
0x000914e8: sbb al, ch; ret 0xffa5; 
0x00130e7b: sbb bh, 0x57; stc; call dword ptr [eax - 0x75]; 
0x001088bc: sbb bh, bh; je 0x1088e4; sbb byte ptr [edx - 0x64], ch; call 0x108c90; add esp, 0x1c; ret; 
0x00108a4f: sbb bh, bh; je 0x108a77; sbb byte ptr [edx - 0x64], ch; call 0x108c90; add esp, 0x1c; ret; 
0x001099af: sbb bh, bh; je 0x1099d7; sbb byte ptr [edx - 0x64], ch; call 0x1099c0; add esp, 0x1c; ret; 
0x00077a6b: sbb bh, bh; je 0x77a93; sbb byte ptr [ebx + 0x56182474], cl; call dword ptr [edi + 0x40]; 
0x000814fb: sbb bh, bh; je 0x81523; sbb al, 0x85; ror byte ptr [edi], 0x48; ret 0xff50; 
0x000b6505: sbb bh, bh; je 0xb652d; sbb byte ptr [edx], ch; call 0xb6520; add esp, 0x1c; ret; 
0x000dd6de: sbb bh, bh; je 0xdd706; sbb byte ptr [edx - 1], ch; call 0xdd7f0; add esp, 0x1c; ret; 
0x00141fa5: sbb bh, bh; jmp dword ptr [esi - 0x70]; 
0x000caea0: sbb bh, bh; jo 0xcaea8; push dword ptr [eax]; call 0xcd250; add esp, 0x1c; ret; 
0x000caeed: sbb bh, bh; jo 0xcaef5; push dword ptr [eax]; call 0xcd250; add esp, 0x1c; ret; 
0x000caf40: sbb bh, bh; jo 0xcaf48; push dword ptr [eax]; call 0xcd250; add esp, 0x1c; ret; 
0x000caf8d: sbb bh, bh; jo 0xcaf95; push dword ptr [eax]; call 0xcd250; add esp, 0x1c; ret; 
0x0016ed4e: sbb bh, bh; nop; js 0x16ed56; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00193cd5: sbb bh, byte ptr [eax + 1]; jg 0x193ce0; neg eax; ret; 
0x000c40dd: sbb bh, byte ptr [ecx]; ret; 
0x000931dd: sbb bl, byte ptr [ebx + 0x5e]; pop edi; ret; 
0x000d86e8: sbb bl, byte ptr [ecx]; adc eax, 0x89535600; ret; 
0x000ada1c: sbb bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x000a1774: sbb bl, ch; ret; 
0x00133ad7: sbb byte ptr [0xffffff], ah; or eax, edx; bswap eax; mov dword ptr [ecx], eax; mov eax, ecx; ret 4; 
0x00034ead: sbb byte ptr [0xfffffff], ah; xor eax, edx; movzx edx, byte ptr [ecx]; test dl, dl; jne 0x34e99; ret; 
0x000939ab: sbb byte ptr [eax + 0x103], bh; mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00093bf4: sbb byte ptr [eax + 0x107], bh; call dword ptr gs:[0x10]; 
0x00109428: sbb byte ptr [eax + 0x10c], bh; call dword ptr gs:[0x10]; 
0x00109598: sbb byte ptr [eax + 0x10d], bh; call dword ptr gs:[0x10]; 
0x00109385: sbb byte ptr [eax + 0x129], bh; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x00125500: sbb byte ptr [eax + 0x151], bh; call dword ptr gs:[0x10]; 
0x001254b2: sbb byte ptr [eax + 0x1a1], bh; call dword ptr gs:[0x10]; 
0x0017e54a: sbb byte ptr [eax + 0x1c030004], al; mov edi, dword ptr [esi]; jmp ebx; 
0x0003b93e: sbb byte ptr [eax + 0x50], dl; call 0x3b950; add esp, 0x1c; ret; 
0x0003b9e5: sbb byte ptr [eax + 0x50], dl; call 0x3ba00; add esp, 0x10; add esp, 0xc; ret; 
0x0003ba65: sbb byte ptr [eax + 0x50], dl; call 0x3ba80; add esp, 0x10; add esp, 0xc; ret; 
0x0007cb6a: sbb byte ptr [eax + 0x56], dl; call dword ptr [edi + 0x48]; 
0x00094422: sbb byte ptr [eax + 0x5b], 0xf9; call dword ptr [eax + 0x6a]; 
0x00130311: sbb byte ptr [eax + 0x5b], 0xf9; call dword ptr [eax - 1]; 
0x0012496f: sbb byte ptr [eax + 0x66], bh; call dword ptr gs:[0x10]; 
0x0011661a: sbb byte ptr [eax + 0x68], dl; adc byte ptr [eax + eax], dl; push dword ptr [esp + 0x1c]; call 0x117200; add esp, 0x1c; ret; 
0x00089807: sbb byte ptr [eax + 0xf0], bh; mov ecx, 0x87; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x00194057: sbb byte ptr [eax + 1], bh; ja 0x194061; neg eax; ret; 
0x0013eb3a: sbb byte ptr [eax + 6], bh; call dword ptr gs:[0x10]; 
0x0013eb3a: sbb byte ptr [eax + 6], bh; call dword ptr gs:[0x10]; pop ebx; ret; 
0x00163405: sbb byte ptr [eax + ecx + 0x5b], dh; pop esi; pop edi; ret; 
0x0007bf72: sbb byte ptr [eax - 0x18], dl; ja 0x7bfae; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0002ed86: sbb byte ptr [eax - 0x74000001], 4; add cl, byte ptr [ebx + 0x58408b00]; ret; 
0x0002f7a6: sbb byte ptr [eax - 0x74000001], 4; add cl, byte ptr [ebx - 0x74fbdbac]; inc esp; nop; inc eax; ret; 
0x0015aab8: sbb byte ptr [eax - 0x7cffffdd], 0xec; or byte ptr [edx], ch; push ebx; call dword ptr [eax + 0x14]; 
0x0008377c: sbb byte ptr [eax], 2; add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov edx, 1; call dword ptr gs:[0x10]; 
0x00021de5: sbb byte ptr [eax], al; adc eax, 0x82170500; and byte ptr [eax], al; mov eax, dword ptr [eax - 0x134]; add eax, dword ptr gs:[0]; ret; 
0x0015968b: sbb byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x438b0cec], al; add al, 0x53; call dword ptr [eax + 0x10]; 
0x00156de5: sbb byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x000265de: sbb byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx - 0x72d7dbbc], cl; inc edi; and byte ptr [ecx - 0x9d3dbbc], cl; ret 0x7501; 
0x00131307: sbb byte ptr [eax], al; add byte ptr [eax], al; call eax; 
0x000218e3: sbb byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x0014100a: sbb byte ptr [eax], al; add byte ptr [eax], al; lea edx, [esp + 0x10]; push edx; push edi; call eax; 
0x001410d6: sbb byte ptr [eax], al; add byte ptr [eax], al; lea edx, [esp + 0x10]; push edx; push esi; call eax; 
0x0003ab0e: sbb byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [ebp + edi], edx; push dword ptr [ebx + 4]; call eax; 
0x0017a43b: sbb byte ptr [eax], al; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x001268dc: sbb byte ptr [eax], al; add byte ptr [eax], al; or dh, 1; call dword ptr gs:[0x10]; 
0x0002196e: sbb byte ptr [eax], al; add byte ptr [eax], al; pop edi; pop ebp; jmp eax; 
0x001511fe: sbb byte ptr [eax], al; add byte ptr [eax], al; push eax; call edx; 
0x00131336: sbb byte ptr [eax], al; add byte ptr [eax], al; push esi; call eax; 
0x000213cb: sbb byte ptr [eax], al; add byte ptr [eax], al; rol edx, 9; mov dword ptr [eax + 0x1978], edx; ret; 
0x0006d97d: sbb byte ptr [eax], al; add byte ptr [ebx - 0xacfb14], al; je 0x6d9ab; and al, 0x55; call dword ptr [esi + 0x1c]; 
0x00048a7b: sbb byte ptr [eax], al; add dh, al; add al, 8; add byte ptr [ebx + 0x5e], bl; ret; 
0x0002c2fe: sbb byte ptr [eax], dl; add byte ptr [eax], al; call 0x11e250; add esp, 0x1c; ret; 
0x00119b24: sbb byte ptr [eax], dl; add byte ptr [eax], al; call 0x20150; add esp, 0x18; pop ebx; ret; 
0x000582e4: sbb byte ptr [eax], dl; add byte ptr [eax], al; pop ebx; ret; 
0x00169ff5: sbb byte ptr [ebp + 0x10000], 0; add cl, ch; ret 0xfffe; 
0x00168d8d: sbb byte ptr [ebp + 0x39183844], cl; ret 0x860f; 
0x001969c7: sbb byte ptr [ebp + 0x528d1049], cl; adc byte ptr [ecx], ch; ret 0xe183; 
0x00147f2e: sbb byte ptr [ebp + 0x5b0d75c0], al; pop esi; pop edi; ret; 
0x0009e262: sbb byte ptr [ebp + 0x5b1075db], al; pop esi; pop edi; ret; 
0x000ad9f7: sbb byte ptr [ebp + 0x5e5f1947], cl; pop ebx; ret; 
0x000ada19: sbb byte ptr [ebp + 0x5e5f1a47], cl; pop ebx; ret; 
0x000ada67: sbb byte ptr [ebp + 0x5e5f1c47], cl; pop ebx; ret; 
0x0014f762: sbb byte ptr [ebp + 0x6a], dl; add byte ptr [edi + 0x53], dl; call edx; 
0x00075db2: sbb byte ptr [ebp + 0x88a8], cl; add byte ptr [ebp + 0x84b8], cl; add byte ptr [ebp - 0x9fa8b37], al; ret 0x7408; 
0x001302c0: sbb byte ptr [ebp + ecx - 0x7d], dh; les ecx, ptr [eax]; pop ebx; ret; 
0x000b64f5: sbb byte ptr [ebp - 0x136d7240], al; cmp eax, dword ptr [eax]; add byte ptr [edi], cl; inc esp; ret 0xff50; 
0x00094233: sbb byte ptr [ebp - 0x18], dl; push es; mov edi, 0x448bfff8; and al, 0x1c; mov dword ptr [esp], eax; call esi; 
0x000378b3: sbb byte ptr [ebp - 0x1f289f7d], cl; dec dword ptr [edi]; inc esp; ret 0x24e9; 
0x0005133f: sbb byte ptr [ebp - 0x35f80], cl; call dword ptr [eax + 0x6a]; 
0x000b7e45: sbb byte ptr [ebp - 0x35f80], cl; call dword ptr [eax - 1]; 
0x00146e5b: sbb byte ptr [ebp - 0x47378a25], al; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; ret; 
0x001669b7: sbb byte ptr [ebp - 0x4df77], cl; dec dword ptr [ecx + 0x48891450]; add al, 0x5b; ret; 
0x0015aec1: sbb byte ptr [ebp - 0x567bf040], al; add byte ptr [eax], al; add byte ptr [ebx - 0x72affb14], al; cmp dword ptr [eax + 0x57], -7; call dword ptr [eax + 0x6a]; 
0x0011ec22: sbb byte ptr [ebp - 0x65edf7f], cl; call dword ptr [eax - 0x73]; 
0x000d26cf: sbb byte ptr [ebp - 0x666a379], cl; call dword ptr [eax - 0x73]; 
0x00094843: sbb byte ptr [ebp - 0x66bf370], cl; call dword ptr [edx - 0x73]; 
0x00098289: sbb byte ptr [ebp - 0x66c7b7a], cl; dec dword ptr [ebp - 0x6bf3a6a]; call dword ptr [eax - 0x73]; 
0x00098489: sbb byte ptr [ebp - 0x66c9b7a], cl; dec dword ptr [ebp - 0x6bf3a6a]; call dword ptr [eax - 0x73]; 
0x0008fc92: sbb byte ptr [ebp - 0x67d1380], cl; call dword ptr [eax - 0x18]; 
0x00083870: sbb byte ptr [ebp - 0x6817780], cl; call dword ptr [eax - 0x18]; 
0x0006a0da: sbb byte ptr [ebp - 0x6870780], cl; call dword ptr [eax - 0x18]; 
0x0002197c: sbb byte ptr [ebp - 0x6920b80], cl; call dword ptr [eax - 0x18]; 
0x0016d164: sbb byte ptr [ebp - 0x699dc80], cl; call dword ptr [eax - 0x18]; 
0x00157f60: sbb byte ptr [ebp - 0x69d0980], cl; call dword ptr [eax - 0x18]; 
0x00156550: sbb byte ptr [ebp - 0x69d5380], cl; call dword ptr [eax - 0x18]; 
0x001558d0: sbb byte ptr [ebp - 0x69d7880], cl; call dword ptr [eax - 0x18]; 
0x00153d30: sbb byte ptr [ebp - 0x69e1f80], cl; call dword ptr [eax - 0x18]; 
0x00153690: sbb byte ptr [ebp - 0x69e2e80], cl; call dword ptr [eax - 0x18]; 
0x00133a02: sbb byte ptr [ebp - 0x6a70880], cl; call dword ptr [eax - 0x18]; 
0x00132282: sbb byte ptr [ebp - 0x6a74a80], cl; call dword ptr [eax - 0x18]; 
0x00179e1b: sbb byte ptr [ebp - 0x6b58480], cl; call dword ptr [eax + 0x53]; 
0x0010264b: sbb byte ptr [ebp - 0x6b5fd80], cl; call dword ptr [eax + 0x6a]; 
0x00102850: sbb byte ptr [ebp - 0x6b6177d], cl; call dword ptr [eax - 0x73]; 
0x000fab2a: sbb byte ptr [ebp - 0x6b7f180], cl; call dword ptr [eax - 0x18]; 
0x000ceb53: sbb byte ptr [ebp - 0x748f8b0a], al; pop esp; and al, 0x50; lea edx, [esp + 0x1c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x00091c99: sbb byte ptr [ebp - 0x762d8b2e], al; ret; 
0x00035892: sbb byte ptr [ebp - 0x76bc8b40], al; ret 0xa5eb; 
0x0012e2c4: sbb byte ptr [ebp - 0x7c088a40], al; ret 0x8b18; 
0x00146e23: sbb byte ptr [ebp - 0x7cc78b25], al; rol byte ptr [ecx], 1; ret; 
0x0002c8a8: sbb byte ptr [ebp - 0x7ce08b40], al; in al, dx; or byte ptr [ebp - 0x68d1b79], cl; call dword ptr [eax + 0x56]; 
0x0007e6cd: sbb byte ptr [ebp - 0x7cf18a25], al; les ecx, ptr [eax]; pop ebx; ret; 
0x000b4188: sbb byte ptr [ebp - 0xb], dh; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001703c5: sbb byte ptr [ebp - 0xbacff7e], cl; jmp dword ptr [esi - 9]; 
0x0015ccd4: sbb byte ptr [ebp - 3], ch; jmp dword ptr [esi - 0x70]; 
0x0003baa0: sbb byte ptr [ebx + 0x10890253], cl; xor eax, eax; add esp, 8; pop ebx; ret; 
0x00121ff1: sbb byte ptr [ebx + 0x1974fffe], al; mov eax, 0x17c; call dword ptr gs:[0x10]; 
0x000fb303: sbb byte ptr [ebx + 0x3910245c], cl; into; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x000f71ac: sbb byte ptr [ebx + 0x3c8da904], cl; ret; 
0x0002c0c7: sbb byte ptr [ebx + 0x418901e8], al; add al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0013c044: sbb byte ptr [ebx + 0x43031443], cl; adc byte ptr [ecx], bh; ret 0x6273; 
0x0014d18f: sbb byte ptr [ebx + 0x438910c4], al; adc al, 0x89; ret 0xc985; 
0x00077c0f: sbb byte ptr [ebx + 0x47891c47], cl; or al, 1; ret 0xc101; 
0x0008681a: sbb byte ptr [ebx + 0x488b685e], cl; add al, 0x8b; adc byte ptr [eax + 0xf1], bh; call dword ptr gs:[0x10]; 
0x000d7d3d: sbb byte ptr [ebx + 0x4e891c4f], cl; sbb al, 0x39; ret 0x8d0f; 
0x00077be4: sbb byte ptr [ebx + 0x525004ec], al; push dword ptr [esp + 0x18]; call ecx; 
0x0003b793: sbb byte ptr [ebx + 0x548b10c4], al; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x3b7a8; add esp, 0x1c; ret; 
0x0003b7e6: sbb byte ptr [ebx + 0x548b10c4], al; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x3b7fb; add esp, 0x1c; ret; 
0x0003b833: sbb byte ptr [ebx + 0x548b10c4], al; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x3b848; add esp, 0x1c; ret; 
0x0003b886: sbb byte ptr [ebx + 0x548b10c4], al; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x3b89b; add esp, 0x1c; ret; 
0x00077a6f: sbb byte ptr [ebx + 0x56182474], cl; call dword ptr [edi + 0x40]; 
0x000b347a: sbb byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000affe4: sbb byte ptr [ebx + 0x5e082444], cl; ret; 
0x0009e7ef: sbb byte ptr [ebx + 0x5e5b04c4], al; pop edi; pop ebp; ret; 
0x000cfa76: sbb byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x0003604a: sbb byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x000d8aea: sbb byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x0002c8cf: sbb byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x0014d22b: sbb byte ptr [ebx + 0x5e5b4cc4], al; pop edi; pop ebp; ret; 
0x00024c60: sbb byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; jmp eax; 
0x0010902d: sbb byte ptr [ebx + 0x5e5b74c4], al; ret; 
0x00026be6: sbb byte ptr [ebx + 0x5e5b7cc4], al; pop edi; pop ebp; jmp eax; 
0x000b82dd: sbb byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x0007cbba: sbb byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0009cae1: sbb byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0007a3a4: sbb byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000300a7: sbb byte ptr [ebx + 0x5e], bl; ret; 
0x00171fc2: sbb byte ptr [ebx + 0x74ff04ec], al; and al, 0x20; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x00125b50: sbb byte ptr [ebx + 0xc], bh; call dword ptr gs:[0x10]; 
0x00098891: sbb byte ptr [ebx + edi], 0; add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0017a5d0: sbb byte ptr [ebx - 0x11380], cl; jmp dword ptr [ebp + 3]; 
0x0012f30b: sbb byte ptr [ebx - 0x137c53a3], cl; add al, 0x6a; add eax, 0x575e938d; stc; call dword ptr [edx + 0x50]; 
0x000f3afd: sbb byte ptr [ebx - 0x1f3ef314], al; add eax, dword ptr [ecx]; ret 0x4489; 
0x0007c163: sbb byte ptr [ebx - 0x2776fb3c], al; pop ebx; pop esi; ret; 
0x0013c0b0: sbb byte ptr [ebx - 0x3776fb3c], al; pop ebx; pop esi; ret; 
0x0015a80e: sbb byte ptr [ebx - 0x3f7ae3c0], cl; je 0x15a81f; sub esp, 0xc; push edi; call eax; 
0x000372e6: sbb byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x000d12a1: sbb byte ptr [ebx - 0x4774f314], al; sub bh, 0xff; call dword ptr [edi - 0x18]; 
0x001212ea: sbb byte ptr [ebx - 0x47d7db84], cl; js 0x1212f2; add byte ptr [eax], al; mov dword ptr [ecx], ebx; int 0x80; 
0x0012318c: sbb byte ptr [ebx - 0x47e3dbac], cl; sub al, 1; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x000f6dc0: sbb byte ptr [ebx - 0x4976c74], cl; clc; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x0002fcd0: sbb byte ptr [ebx - 0x677f], cl; jmp dword ptr [ebp - 0x75]; 
0x0010529b: sbb byte ptr [ebx - 0x74e3dbac], cl; pop esp; and al, 0x14; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x0010c239: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x00123ce9: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x001120f9: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xbb; call dword ptr gs:[0x10]; 
0x0011f3c9: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x0011f429: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x0011f2f9: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x00112129: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xef; call dword ptr gs:[0x10]; 
0x00123a89: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x0011c692: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x0010bc22: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0010c172: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x00123e12: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x00123c12: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x00123af2: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x00123cb2: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0011f532: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x0011f4c2: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x0011f392: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x0009d1d8: sbb byte ptr [ebx - 0x76ebdbb4], cl; ret 0xf901; 
0x000d2f96: sbb byte ptr [ebx - 0x76efdb8c], cl; ret; 
0x000d38fe: sbb byte ptr [ebx - 0x78f0f905], al; ret 7; 
0x000f70ca: sbb byte ptr [ebx - 0x7cebdbb4], cl; ret; 
0x000f58c9: sbb byte ptr [ebx - 0x7cf3dbb4], cl; ret; 
0x001500de: sbb byte ptr [ebx - 0x7e72f714], al; push esi; inc ebx; stc; call dword ptr [eax + 0x52]; 
0x00123881: sbb byte ptr [ebx - 0x8e3dbac], cl; mov byte ptr [edx], 0; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x14]; cmovne edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x0007d688: sbb byte ptr [ebx - 0xaafb14], al; je 0x7d6b4; cmp al, 0x57; call dword ptr [esi + 0x20]; 
0x0011ce44: sbb byte ptr [ebx], al; add byte ptr [eax], al; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x001261fa: sbb byte ptr [ecx + 0x100ce], al; add byte ptr [eax + 0x75], bh; call dword ptr gs:[0x10]; 
0x0015ba5d: sbb byte ptr [ecx + 0x1b81058], cl; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00036a45: sbb byte ptr [ecx + 0x244489c7], cl; sbb al, 0xc1; call dword ptr [eax]; 
0x00123706: sbb byte ptr [ecx + 0x244c8bcb], cl; adc byte ptr [eax + 0x1b3], bh; int 0x80; 
0x00111a77: sbb byte ptr [ecx + 0x247c8bca], cl; sbb al, 0xc1; cli; pop ds; call dword ptr gs:[0x10]; 
0x0004aa18: sbb byte ptr [ecx + 0x3001bbe1], cl; add byte ptr [eax], al; mov eax, 0x180; call dword ptr gs:[0x10]; 
0x000a211b: sbb byte ptr [ecx + 0x3428d02], cl; pop ebx; pop esi; ret; 
0x0009a2ec: sbb byte ptr [ecx + 0x3892073], cl; push eax; call ecx; 
0x00138d95: sbb byte ptr [ecx + 0x44cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00081ebd: sbb byte ptr [ecx + 0x4c48310], cl; pop ebx; pop esi; ret; 
0x000a2053: sbb byte ptr [ecx + 0x5bd08902], cl; pop esi; ret; 
0x0014689f: sbb byte ptr [ecx + 0x5f5e5be8], cl; pop ebp; ret; 
0x000d8c47: sbb byte ptr [ecx + 0x5f5e5bf8], cl; ret; 
0x0017c863: sbb byte ptr [ecx + 0x85c8b1a], cl; cld; mov dword ptr [edx + ecx - 4], ebx; mov eax, edx; pop ebx; ret; 
0x00080f6b: sbb byte ptr [ecx + ebx - 0x77d0000], 1; jg 0x80f80; ret; 
0x000a1d13: sbb byte ptr [ecx + ebx - 0x7d], dh; ret 0xf01; 
0x0009c3a5: sbb byte ptr [ecx - 0x1c7c000b], 1; lea edx, [edx - 0xac940]; cmove eax, edx; pop ebx; ret; 
0x0007a5e8: sbb byte ptr [ecx - 0x3b7cf3ad], cl; add al, 0x5b; pop esi; ret; 
0x0007f404: sbb byte ptr [ecx - 0x3fceefbd], cl; add esp, 4; pop ebx; pop esi; ret; 
0x00120a9f: sbb byte ptr [ecx - 0x723ca428], cl; cmp byte ptr [eax - 0x5f], 0xf9; call dword ptr [eax - 0x73]; 
0x0015467e: sbb byte ptr [ecx - 0x72ec1408], cl; je 0x1546ac; add byte ptr [eax - 0x7cfbbc75], dl; ret; 
0x000d7d36: sbb byte ptr [ecx - 0x76ebdbb4], cl; dec esi; sbb byte ptr [ebx + 0x4e891c4f], cl; sbb al, 0x39; ret 0x8d0f; 
0x0003ba33: sbb byte ptr [ecx - 0x7c3fcefe], cl; les ecx, ptr [eax]; pop ebx; ret; 
0x001531f9: sbb byte ptr [ecx - 0x7cefdbbc], cl; in al, dx; or byte ptr [ebx - 0x72efdbbc], cl; or dh, 0x61; stc; call dword ptr [eax + 0x51]; 
0x00153869: sbb byte ptr [ecx - 0x7cefdbbc], cl; in al, dx; or byte ptr [ebx - 0x72efdbbc], cl; or dh, 0x61; stc; call dword ptr [eax + 0x57]; 
0x00167fc6: sbb byte ptr [ecx - 0x837b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00026020: sbb byte ptr [ecx - 7], dh; call dword ptr [eax - 0x73]; 
0x00093464: sbb byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00093412: sbb byte ptr [ecx], al; add byte ptr [eax], al; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00146ed6: sbb byte ptr [ecx], al; add byte ptr [eax], al; pop ebx; ret; 
0x00172364: sbb byte ptr [ecx], al; add byte ptr [eax], al; sub esp, 8; push 0; push esi; call dword ptr [ebx + 8]; 
0x0003ee03: sbb byte ptr [ecx], al; ret; 
0x000c9bd7: sbb byte ptr [ecx], bh; dec edi; sbb byte ptr [edi], cl; test dword ptr [edi + 0x5f000000], edi; pop esi; ret; 
0x00087e62: sbb byte ptr [ecx], bh; iretd; mov ebx, dword ptr [eax + 0x68]; cmovbe ecx, edi; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x000961c5: sbb byte ptr [ecx], bh; ret 0x850f; 
0x00168d91: sbb byte ptr [ecx], bh; ret 0x860f; 
0x0003d7e4: sbb byte ptr [ecx], bh; ret; 
0x000c9fe7: sbb byte ptr [ecx], bh; sbb dh, byte ptr [esp + edx*8 + 0xf]; lahf; ret; 
0x0019a6ba: sbb byte ptr [ecx], ch; ret 0x448b; 
0x0012c3aa: sbb byte ptr [ecx], ch; ret 0x5250; 
0x00066a11: sbb byte ptr [ecx], ch; ret; 
0x000c077c: sbb byte ptr [ecx], ch; sal byte ptr [ecx], 1; shr byte ptr [ecx], cl; ret; 
0x0009bda0: sbb byte ptr [ecx], cl; ret 0xc985; 
0x001259f9: sbb byte ptr [ecx], cl; ror byte ptr [ebx + 0x656c2454], 1; sub edx, dword ptr [0x14]; jne 0x125a14; add esp, 0x7c; ret; 
0x000ac2e7: sbb byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x001730ea: sbb byte ptr [edi + 0xb], ch; add byte ptr [ebx - 0x77], dl; ret; 
0x0010c4ae: sbb byte ptr [edi - 0x18], dl; retf; ret; 
0x000d2fa8: sbb byte ptr [edi], cl; dec ecx; ret 0xc483; 
0x00032b79: sbb byte ptr [edi], cl; inc edx; ret 0xc189; 
0x00122402: sbb byte ptr [edi], cl; inc esp; lea edx, [esp + 0xc]; mov ebx, dword ptr [esp + 0x50]; call dword ptr gs:[0x10]; 
0x00023b31: sbb byte ptr [edi], cl; mov bh, 0x83; shr byte ptr [esi - 7], 1; jmp dword ptr [esi - 0x77]; 
0x000238ea: sbb byte ptr [edi], cl; mov bh, 0x93; shr byte ptr [esi - 7], 1; jmp dword ptr [esi - 0x77]; 
0x000a1dc3: sbb byte ptr [edi], cl; mov esi, 0xfc53906; xchg esp, eax; ret 0xc739; 
0x0004710d: sbb byte ptr [edi], cl; test byte ptr [0x39000004], ah; ret; 
0x00043fb4: sbb byte ptr [edi], cl; test dh, ch; add eax, dword ptr [eax]; add byte ptr [ecx], bh; ret; 
0x000c9bda: sbb byte ptr [edi], cl; test dword ptr [edi + 0x5f000000], edi; pop esi; ret; 
0x00168905: sbb byte ptr [edi], cl; xchg esp, eax; ret; 
0x00108968: sbb byte ptr [edx + 0x50], dl; call 0x108c90; add esp, 0x10; add esp, 0xc; ret; 
0x001567f6: sbb byte ptr [edx + 0xa], ch; call 0x152e60; add esp, 0x1c; ret; 
0x0002153a: sbb byte ptr [edx + 1], bh; xor ebx, ebx; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x00156476: sbb byte ptr [edx + 1], ch; call 0x152e60; add esp, 0x1c; ret; 
0x00155bb6: sbb byte ptr [edx + 2], ch; call 0x152e60; add esp, 0x1c; ret; 
0x00154bb6: sbb byte ptr [edx + 3], ch; call 0x152e60; add esp, 0x1c; ret; 
0x001557f6: sbb byte ptr [edx + 4], ch; call 0x152e60; add esp, 0x1c; ret; 
0x001535b6: sbb byte ptr [edx + 5], ch; call 0x152e60; add esp, 0x1c; ret; 
0x00155f56: sbb byte ptr [edx + 6], ch; call 0x152e60; add esp, 0x1c; ret; 
0x00157e86: sbb byte ptr [edx + 7], ch; call 0x152e60; add esp, 0x1c; ret; 
0x00153c56: sbb byte ptr [edx + 8], ch; call 0x152e60; add esp, 0x1c; ret; 
0x001578d6: sbb byte ptr [edx + 9], ch; call 0x152e60; add esp, 0x1c; ret; 
0x0010880c: sbb byte ptr [edx - 0x64], ch; call 0x108ad0; add esp, 0x18; pop ebx; ret; 
0x001088c0: sbb byte ptr [edx - 0x64], ch; call 0x108c90; add esp, 0x1c; ret; 
0x001099b3: sbb byte ptr [edx - 0x64], ch; call 0x1099c0; add esp, 0x1c; ret; 
0x00162340: sbb byte ptr [edx - 0x73], dl; nop; push eax; sub ebx, esi; call dword ptr [edx - 0x73]; 
0x00133ba8: sbb byte ptr [edx - 0x77], dl; ret 0xeac1; 
0x000dd69c: sbb byte ptr [edx - 1], ch; call 0xdd6b0; add esp, 0x1c; ret; 
0x000dd6e2: sbb byte ptr [edx - 1], ch; call 0xdd7f0; add esp, 0x1c; ret; 
0x0010388d: sbb byte ptr [edx - 7], cl; call dword ptr [eax - 0x18]; 
0x0008377d: sbb byte ptr [edx], al; add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov edx, 1; call dword ptr gs:[0x10]; 
0x00086c74: sbb byte ptr [edx], al; add byte ptr [eax], al; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0012105a: sbb byte ptr [edx], ch; call 0x122700; add esp, 0x1c; ret; 
0x001575f6: sbb byte ptr [edx], ch; call 0x152e60; add esp, 0x1c; ret; 
0x0003068c: sbb byte ptr [edx], ch; call 0x30630; add esp, 0x1c; ret; 
0x00038296: sbb byte ptr [edx], ch; call 0x37b20; add esp, 0x1c; ret; 
0x000b6509: sbb byte ptr [edx], ch; call 0xb6520; add esp, 0x1c; ret; 
0x000d6fde: sbb byte ptr [edx], ch; call 0xd70d0; add esp, 0x10; mov eax, 1; add esp, 0xc; ret; 
0x000d6efe: sbb byte ptr [edx], ch; call 0xd7260; add esp, 0x10; mov eax, 1; add esp, 0xc; ret; 
0x0012ceb1: sbb byte ptr [edx], ch; push 0x2000004; call eax; 
0x0003a9cb: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; call 0x3a660; add esp, 0x1c; ret; 
0x0011937c: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; call 0x58600; add esp, 0x1c; ret; 
0x000a2536: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; call 0xb4de0; add esp, 0x18; pop ebx; ret; 
0x0004162a: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x3eee0; add esp, 0x1c; ret; 
0x000448aa: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x41f80; add esp, 0x1c; ret; 
0x00047a2a: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x451a0; add esp, 0x1c; ret; 
0x000bbc6a: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xb9570; add esp, 0x1c; ret; 
0x000bea7a: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xbc4e0; add esp, 0x1c; ret; 
0x000c16ea: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xbf1e0; add esp, 0x1c; ret; 
0x0011252f: sbb byte ptr [edx], ch; push eax; call 0x112270; add esp, 0x10; add esp, 0xc; ret; 
0x000ad234: sbb byte ptr [edx], cl; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000921aa: sbb byte ptr [edx], cl; add byte ptr [ebx - 0x78726f83], cl; sbb al, 0x84; stc; call dword ptr [eax - 0x73]; 
0x00082261: sbb byte ptr [esi + 0x57], dl; push eax; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x000820fe: sbb byte ptr [esi + 0x57], dl; push edx; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x00120758: sbb byte ptr [esi + esi*8 + 0x7c408bff], 0x89; push esi; add al, 0x89; ret 0xe8c1; 
0x0017252b: sbb byte ptr [esi - 0x18], dl; out dx, al; or esi, ecx; jmp dword ptr [ebp - 0x75]; 
0x00034324: sbb byte ptr [esi - 0x3b7c0002], bh; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0013a506: sbb byte ptr [esi - 0x3f], ah; ret; 
0x000a2143: sbb byte ptr [esi - 0x77], ah; pop edx; add al, 0x89; add cl, byte ptr [ebp + 0x5e5b0542]; ret; 
0x000dc60b: sbb byte ptr [esi - 7], al; call dword ptr [edi - 1]; 
0x00171acb: sbb byte ptr [esp + eax], bh; jne 0x21303; mov eax, 8; add esp, 0xc; ret; 
0x000cc4d1: sbb ch, byte ptr [ecx]; ret; 
0x0015edb8: sbb ch, ch; call dword ptr [eax - 0x73]; 
0x0013a616: sbb cl, 0x5b; stc; call dword ptr [eax - 0x73]; 
0x000e918e: sbb cl, al; clc; sbb byte ptr [ecx], bh; ret 0x850f; 
0x000abf2c: sbb cl, byte ptr [ebp - 0x7af0e581]; ljmp 0x5b5e:0x5f000005; ret; 
0x000954e8: sbb cl, byte ptr [ebx + 0x19]; add byte ptr [ebx - 0x77], dl; ret; 
0x00154719: sbb cl, byte ptr [ebx + 0x39682444]; ret 0x840f; 
0x0014842a: sbb cl, byte ptr [ebx + 0x39702444]; ret 0x840f; 
0x000c9fe5: sbb cl, byte ptr [ebx + 0x741a3918]; aam 0xf; lahf; ret; 
0x001331a4: sbb cl, byte ptr [ebx - 0x13375]; jmp dword ptr [ebp - 0x75]; 
0x0017c865: sbb cl, byte ptr [ebx - 0x7603f7a4]; pop esp; or bh, ah; mov eax, edx; pop ebx; ret; 
0x00121852: sbb cl, byte ptr [ecx - 0x77c0002]; or byte ptr [edi], cl; xchg ebp, eax; rol byte ptr [ebx - 0x49f0e33c], 0xc0; neg eax; ret; 
0x001463be: sbb cl, byte ptr [edi]; inc edx; ret 0xb60f; 
0x000abf2f: sbb cl, byte ptr [edi]; test edx, ebp; add eax, 0x5e5f0000; pop ebx; ret; 
0x0005d953: sbb cl, ch; mov al, byte ptr [0xc6fffffd]; test dword ptr [edx + edi*8 - 1], eax; jmp dword ptr [ebp + 0x31]; 
0x0006a361: sbb cl, ch; ret 0xffed; 
0x000cae5e: sbb dh, bl; jmp 0xdd30cb42; add al, 0x24; add esp, 0xc; ret; 
0x000c9fe9: sbb dh, byte ptr [esp + edx*8 + 0xf]; lahf; ret; 
0x00115cc5: sbb dh, dh; ret 0x7540; 
0x00198287: sbb dh, dh; ret 0xf0f; 
0x001939f7: sbb dh, dl; jmp dword ptr [esi - 0x70]; 
0x00127cfc: sbb dl, 0xef; call dword ptr [eax + 0x6a]; 
0x000889c6: sbb dl, 0xf8; dec dword ptr [ecx - 0x41f7dbac]; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b74b2: sbb dl, byte ptr [edx]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000d86e9: sbb dword ptr [0x89535600], edx; ret; 
0x00121ff6: sbb dword ptr [eax + 0x17c], edi; call dword ptr gs:[0x10]; 
0x0009a27d: sbb dword ptr [eax + 0x5b], -7; call dword ptr [eax + 0x6a]; 
0x0014e20d: sbb dword ptr [eax - 0x53], -7; call dword ptr [eax - 0x73]; 
0x000e0995: sbb dword ptr [eax - 0x73], edx; test dword ptr [edi + 0x47], ebx; stc; call dword ptr [eax - 0x18]; 
0x001516ba: sbb dword ptr [eax - 0x7e], 0; add byte ptr [eax], al; mov dword ptr [ebx + 0x8248], 0; call esi; 
0x000839c7: sbb dword ptr [eax], eax; add byte ptr [eax + 0xf0], bh; mov ecx, 0x81; xor esi, esi; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x00056ab5: sbb dword ptr [eax], eax; add byte ptr [eax - 0x18], dl; ret 0x2c6; 
0x001a0dd5: sbb dword ptr [eax], eax; add byte ptr [ebp + 0x314574c0], al; jmp dword ptr [esi - 0x70]; 
0x0007ec53: sbb dword ptr [eax], eax; add byte ptr [ebx + 0x357f01f8], al; add esp, 8; pop ebx; ret; 
0x00083915: sbb dword ptr [eax], eax; add byte ptr [ebx + 0x45a8b02], cl; mov ecx, dword ptr [edx + 8]; mov edx, dword ptr [edx + 0xc]; call dword ptr gs:[0x10]; 
0x00021475: sbb dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; ret; 
0x00072ddd: sbb dword ptr [eax], eax; add byte ptr [ebx + 0xb7f01f8], al; ret; 
0x000673ab: sbb dword ptr [eax], eax; add byte ptr [ebx - 0x137c4fec], cl; add al, 0x89; lea edx, [edi + esi*8 - 1]; call dword ptr [ebx + 0x57]; 
0x0004a9af: sbb dword ptr [eax], eax; add byte ptr [ebx - 0x17adf314], al; lds ecx, ptr [eax - 0x3b7cfffd]; adc byte ptr [ebx - 0x14f3dbbc], cl; ret 0x748d; 
0x00080f0d: sbb dword ptr [eax], eax; add byte ptr [ecx], al; add esp, 4; pop ebx; pop esi; ret; 
0x00092f7c: sbb dword ptr [eax], eax; mov dword ptr [eax + 0x3b04], 0; ret; 
0x0009438d: sbb dword ptr [eax], eax; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0x3fc; jbe 0x943a0; ret; 
0x0009456d: sbb dword ptr [eax], eax; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0x50; jbe 0x94580; ret; 
0x000943cd: sbb dword ptr [eax], eax; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0xffff; jbe 0x943e0; ret; 
0x000946f9: sbb dword ptr [eax], eax; mov ecx, dword ptr [ecx + 0x3b68]; test ecx, ecx; jne 0x94710; ret; 
0x0009436c: sbb dword ptr [eax], eax; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x1cc], edx; ret; 
0x0009434c: sbb dword ptr [eax], eax; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x1d0], edx; ret; 
0x000943fc: sbb dword ptr [eax], eax; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x208], edx; ret; 
0x000946dc: sbb dword ptr [eax], eax; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x3b68], edx; ret; 
0x00092c4d: sbb dword ptr [eax], eax; push ebx; mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000932f3: sbb dword ptr [eax], eax; push ebx; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000ad433: sbb dword ptr [eax], ecx; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000dfdb0: sbb dword ptr [ebp + esi*2 + 0xc], edx; lea esi, [esi]; mov eax, 0x40; ret; 
0x00021461: sbb dword ptr [ebp - 0x1ae26f70], ecx; jmp dword ptr [ebp + 0x33]; 
0x001287bd: sbb dword ptr [ebp - 0x76ea8b37], eax; ret 0xeac1; 
0x001288f7: sbb dword ptr [ebp - 0x76f38a37], eax; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x00128972: sbb dword ptr [ebp - 0x76f68a37], eax; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x001291bb: sbb dword ptr [ebp - 0x76f78a37], eax; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x00128b66: sbb dword ptr [ebp - 0x76fa8a37], eax; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000c8ca3: sbb dword ptr [ebp - 0xa], ebp; dec dword ptr [ebx - 0x364b6b]; dec dword ptr [ebp - 0x667377e]; call dword ptr [eax - 0x73]; 
0x000cd507: sbb dword ptr [ebx + 0x2a], -7; call dword ptr [eax + 0x56]; 
0x0013b43e: sbb dword ptr [ebx + 0x2a], -7; call dword ptr [eax + 0x57]; 
0x00088184: sbb dword ptr [ebx + 0x2a], -7; call dword ptr [eax - 0x73]; 
0x000751a1: sbb dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x000d91c9: sbb dword ptr [ebx + 0x5e5b1cc4], eax; pop edi; pop ebp; ret; 
0x00090ad6: sbb dword ptr [ebx + 0x5e], ebx; mov dword ptr [ecx + 0x10], eax; mov dword ptr [edx + 0x3adc], ecx; ret; 
0x000e957c: sbb dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x000c6bec: sbb dword ptr [ebx - 0x361f7b], ecx; inc dword ptr [ebx - 0x363743]; call dword ptr [eax]; 
0x000c629f: sbb dword ptr [ebx - 0x363f7b], ecx; jmp ptr [ebx]; test dword ptr [eax - 0x76000037], edi; test dword ptr [eax - 0x76000037], esi; ret; 
0x00029ae0: sbb dword ptr [ebx - 0x7ce3dbac], ecx; ret 0x8301; 
0x0011f77c: sbb dword ptr [ebx], 0x4e; stc; call dword ptr [eax + 0x57]; 
0x00026039: sbb dword ptr [ecx + 0x748b0000], 0x24; cmp al, 0x8d; xchg byte ptr [eax + 0x6a], ah; stc; call dword ptr [eax + 0x68]; 
0x0007ec51: sbb dword ptr [ecx + ebx - 0x77d0000], 1; jg 0x7ec90; add esp, 8; pop ebx; ret; 
0x0013554c: sbb dword ptr [ecx + ecx*2], 0; add byte ptr [eax - 0x73], dl; and dword ptr [ecx + ecx*2], 0; add byte ptr [eax - 0x73], dl; adc dword ptr [eax], 0x63; bnd call dword ptr [eax - 0x73]; 
0x0011f97d: sbb dword ptr [ecx], 0x52; stc; call dword ptr [eax + 0x57]; 
0x000dfcbb: sbb dword ptr [ecx], eax; add byte ptr [eax + 0x7f], bh; mov edx, 0x7d00; pop ebx; cmove eax, edx; ret; 
0x00092fce: sbb dword ptr [ecx], eax; add byte ptr [eax], al; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0004b34d: sbb dword ptr [ecx], eax; ret; 
0x000a277d: sbb dword ptr [ecx], ebp; ret; 
0x0009602e: sbb dword ptr [ecx], edi; ret 0x840f; 
0x0014a4ea: sbb dword ptr [ecx], edi; ret; 
0x000c079a: sbb dword ptr [ecx], edi; ror byte ptr [edi], 1; dec edi; ret 0x403; 
0x00040855: sbb dword ptr [ecx], edi; ror byte ptr [edi], 1; dec edi; ret 0xf001; 
0x000850d7: sbb dword ptr [ecx], esi; idiv byte ptr [eax + 0xf0]; call dword ptr gs:[0x10]; 
0x0008c6dc: sbb dword ptr [ecx], esi; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x000ad9fa: sbb dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x001630a9: sbb dword ptr [edi + edi*8 + 0x5e5bffff], 0x5f; ret; 
0x000f0333: sbb dword ptr [edi - 0x7760001], esp; pop ebx; pop esi; pop edi; ret; 
0x000ad5cd: sbb dword ptr [edi], ecx; test dword ptr [esi + eax], edi; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000ce96f: sbb dword ptr [edx + 0x45], -7; call dword ptr [eax - 0x18]; 
0x0011f97e: sbb dword ptr [edx - 7], edx; call dword ptr [eax + 0x57]; 
0x00120dcc: sbb dword ptr [edx], -7; call dword ptr [eax - 0x18]; 
0x00196e23: sbb dword ptr [edx], eax; add byte ptr [eax], al; mov eax, ecx; ret; 
0x00108654: sbb dword ptr [edx], edx; add byte ptr [ebx - 0x75], dl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00135633: sbb dword ptr [esi + 0x59], -7; call dword ptr [eax - 0x18]; 
0x00135633: sbb dword ptr [esi + 0x59], -7; call dword ptr [eax - 0x18]; ret 0x1a0; 
0x000cd568: sbb dword ptr [esi], 0x45; stc; call dword ptr [eax - 0x18]; 
0x000cd568: sbb dword ptr [esi], 0x45; stc; call dword ptr [eax - 0x18]; lodsd eax, dword ptr [esi]; ret; 
0x0011f6bf: sbb dword ptr [esi], 0x4e; stc; call dword ptr [eax + 0x57]; 
0x00137d61: sbb dword ptr [esi], 0x5a; stc; call dword ptr [eax - 0x18]; 
0x00137f02: sbb dword ptr [esi], 0x5a; stc; call dword ptr [eax - 0x73]; 
0x000ad633: sbb dword ptr [esi], eax; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0011f6a4: sbb dword ptr [esp + ecx*2], -7; call dword ptr [eax + 0x57]; 
0x0015e7cb: sbb eax, -1; add esp, 0xc; ret; 
0x000b29a0: sbb eax, -1; mov byte ptr [eax], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000aa3d5: sbb eax, -1; pop ebx; ret; 
0x000a9c66: sbb eax, -1; pop edi; pop ebx; ret; 
0x000b4c4e: sbb eax, -1; pop esi; pop ebx; ret; 
0x0010d39d: sbb eax, 0; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0010c32b: sbb eax, 0; pop ebx; pop esi; ret; 
0x0004bf30: sbb eax, 0x26b48d; add byte ptr [eax], al; add byte ptr [ebx - 0x7cfb78ac], cl; ret 0x8901; 
0x00058a0d: sbb eax, 0x26b85300; add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x000213c5: sbb eax, 0x3365ffe5; adc eax, 0x18; rol edx, 9; mov dword ptr [eax + 0x1978], edx; ret; 
0x00074972: sbb eax, 0x5604ec83; push dword ptr [esp + 0x38]; push edi; call dword ptr [edx + 0x1c]; 
0x000abfb7: sbb eax, 0x562850f; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0015b7de: sbb eax, 0x57; stc; call dword ptr [eax + 0x6a]; 
0x00070c2a: sbb eax, 0x5b14c483; pop esi; ret; 
0x0016ea8d: sbb eax, 0x5b28c483; ret; 
0x0015e9e6: sbb eax, 0x5b6cc483; pop esi; pop edi; pop ebp; ret; 
0x000743f2: sbb eax, 0x5bf4658d; pop esi; pop edi; pop ebp; ret; 
0x000ad68a: sbb eax, 0x5bf850f; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000abbff: sbb eax, 0x5f000009; pop esi; pop ebx; ret; 
0x001237d8: sbb eax, 0x810004e6; ret; 
0x00186ad8: sbb eax, 0x81fffeb3; ret; 
0x0002c173: sbb eax, 0x83000001; in al, dx; or byte ptr [ebp - 0x6d38d6d], cl; call dword ptr [edx + 0x50]; 
0x000e80e5: sbb eax, 0x8900141f; ret; 
0x0010bae8: sbb eax, 0x8908ec83; ret; 
0x001590e2: sbb eax, 0x8b0cec83; inc ebx; add al, 0x53; call dword ptr [eax + 0x10]; 
0x000c159f: sbb eax, 0x8bfff6e4; jl 0xc15ca; and al, 0x8d; xchg dword ptr [edi + edx*4], esp; stc; call dword ptr [eax - 0x73]; 
0x00120d63: sbb eax, 0x8dffffff; and dword ptr [eax - 0x5e], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x0019fdb6: sbb eax, 0x903e0c1; ret 0x48d; 
0x0005d99b: sbb eax, 0xc4830002; adc byte ptr [ecx - 0x59f7b], cl; inc dword ptr [ebx - 0x7af00008]; ret; 
0x0013e362: sbb eax, 0xc483ffee; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00030036: sbb eax, 0xc7050014; lahf; pop ds; add byte ptr [ebx - 0x14380], cl; jmp dword ptr [ebp + 3]; 
0x00030016: sbb eax, 0xe7050014; lahf; pop ds; add byte ptr [ebx - 0xb80], cl; jmp dword ptr [ebp + 3]; 
0x0012480d: sbb eax, 0xf000000; inc ebp; ret; 
0x000ad687: sbb eax, 0xf1d7f8d; test dword ptr [edi + 0x5f000005], edi; pop esi; pop ebx; ret; 
0x00020f46: sbb eax, 0xff0cec83; jne 0x20f19; call dword ptr [ebp - 0x38]; 
0x000ddbeb: sbb eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0005d4f3: sbb eax, dword ptr [eax]; add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xd801; 
0x0006b6a6: sbb eax, dword ptr [eax]; add dh, dh; ret 0xf40; 
0x000e1728: sbb eax, dword ptr [ebp - 0x7cf18b0a]; in al, dx; or byte ptr [eax + 0x57], dl; call esi; 
0x00057f46: sbb eax, dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0013e6ed: sbb eax, dword ptr [ebx + 0x5e5b4cc4]; pop edi; pop ebp; ret; 
0x001953d4: sbb eax, dword ptr [ebx - 0x7bf0d207]; ret 0; 
0x00165574: sbb eax, dword ptr [ebx - 0x95fb14]; push ebp; push esi; call edi; 
0x0008e02b: sbb eax, dword ptr [ecx + 0x9cc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0009431b: sbb eax, dword ptr [ecx + 0xb4c4]; add byte ptr [ebx + 0x5e], bl; ret; 
0x0008bcf4: sbb eax, dword ptr [ecx + 8]; inc eax; xor eax, eax; ret; 
0x00196621: sbb eax, dword ptr [ecx]; add byte ptr [eax], al; lea eax, [edi + 3]; pop edi; ret; 
0x0019aa1b: sbb eax, dword ptr [ecx]; ret 0xe283; 
0x0006b6a5: sbb eax, dword ptr fs:[eax]; add dh, dh; ret 0xf40; 
0x0007bfc5: sbb eax, eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x0005898c: sbb eax, eax; add esp, 0x1c; ret; 
0x0017a5f6: sbb eax, eax; add esp, 0x2c; ret; 
0x000220f9: sbb eax, eax; add esp, 0xc; ret; 
0x000de4e4: sbb eax, eax; add esp, 4; and eax, 0xc; pop ebx; pop esi; ret; 
0x000589e6: sbb eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x0004b183: sbb eax, eax; and eax, 2; sub eax, 1; ret; 
0x0016224b: sbb eax, eax; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x162267; add esp, 0x1c; ret; 
0x0004b0f5: sbb eax, eax; neg eax; pop ebx; pop esi; pop edi; ret; 
0x00090a6a: sbb eax, eax; pop ebx; pop esi; pop edi; ret; 
0x000b49a1: sbb eax, eax; sbb eax, -1; pop ebx; ret; 
0x000b4c4c: sbb eax, eax; sbb eax, -1; pop esi; pop ebx; ret; 
0x0012bdf9: sbb eax, esi; call dword ptr [eax - 1]; 
0x0007bc95: sbb ebp, esp; call dword ptr [eax - 0x73]; 
0x00041516: sbb ebx, -1; dec dword ptr [ebx - 0x72d3db84]; xchg dword ptr [esi + esi*2 - 7], ebx; call dword ptr [eax - 0x73]; 
0x000ada4a: sbb ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x000dbd09: sbb ebx, ebp; call dword ptr [eax - 1]; 
0x00061b94: sbb ebx, ebx; cmp edi, dword ptr [ecx]; ret 0x840f; 
0x0011f9aa: sbb ecx, dword ptr [eax + eax]; add byte ptr [ebp - 0x6ad9f7d], cl; call dword ptr [edx + 0x52]; 
0x00033aaf: sbb ecx, dword ptr [eax]; add byte ptr [ecx - 0x76d3dbbc], cl; ret 0x48d; 
0x0002b89e: sbb ecx, dword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x00126f03: sbb ecx, dword ptr [ebp - 0x6d47c0ec]; add byte ptr [eax], al; add byte ptr [ebx - 0x4f763], cl; dec dword ptr [ebx - 0x4fb73]; jmp dword ptr [ebp - 1]; 
0x000abf5a: sbb ecx, dword ptr [ebp - 0x7af0e481]; mov esp, 0x5f000005; pop esi; pop ebx; ret; 
0x00093ed4: sbb ecx, dword ptr [ebx + 0x244c8b18]; mov eax, 0x199; mov esi, ebp; call dword ptr gs:[0x10]; 
0x0016b5ab: sbb ecx, dword ptr [ebx - 0x1337d]; jmp dword ptr [ebp - 0x75]; 
0x00140644: sbb ecx, dword ptr [ecx + 0x5f5e5bd8]; ret; 
0x000fda45: sbb ecx, dword ptr [ecx - 0x7ccf7427]; ret; 
0x000e87cd: sbb ecx, dword ptr [ecx - 0x7cd3dbb4]; in al, dx; or al, 0xff; je 0xe87fc; cmp al, 0xe8; ret 0x400; 
0x000abf5d: sbb ecx, dword ptr [edi]; test dword ptr [ebp + eax + 0x5e5f0000], edi; pop ebx; ret; 
0x0011f77d: sbb ecx, dword ptr [esi - 7]; call dword ptr [eax + 0x57]; 
0x0010c329: sbb ecx, edx; sbb eax, 0; pop ebx; pop esi; ret; 
0x00136d89: sbb edi, 0x59; stc; call dword ptr [eax - 0x18]; 
0x00093cdb: sbb edi, dword ptr [eax + 0x106]; call dword ptr gs:[0x10]; 
0x00093d50: sbb edi, dword ptr [eax + 0x198]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000ddcec: sbb edi, dword ptr [eax + 0x1d]; call dword ptr gs:[0x10]; 
0x0013ec01: sbb edi, dword ptr [eax + 6]; call dword ptr gs:[0x10]; 
0x000c3ff4: sbb edi, dword ptr [ecx]; ret; 
0x00161ea6: sbb edi, ebp; jmp dword ptr [esi - 0x70]; 
0x000c9ff4: sbb edi, edi; mov eax, ebx; pop ebx; pop esi; ret; 
0x0004ddc3: sbb edi, esi; dec dword ptr [ebx - 0x72ebdb84]; xchg dword ptr [esi + esi*2 - 7], ebx; call dword ptr [eax + 0x68]; 
0x00150ca2: sbb edx, dword ptr [eax - 0x73]; xchg al, ch; lodsd eax, dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x00035f5f: sbb edx, ebx; pop ebx; mov eax, edx; shr eax, 0x1f; ret; 
0x0003659c: sbb edx, ebx; pop ebx; pop esi; mov eax, edx; shr eax, 0x1f; ret; 
0x0013fc98: sbb edx, edx; mov eax, edx; pop ebx; pop esi; ret; 
0x00193b30: sbb edx, esi; jmp dword ptr [esi - 0x70]; 
0x000239c1: sbb esi, 0x45; stc; call dword ptr [eax - 1]; 
0x0009c0d7: sbb esi, ebp; push esi; add dword ptr [ecx + eax - 0x72ff0000], 0xf509a092; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x00152082: sbb esi, edi; jmp dword ptr [esi - 0x70]; 
0x000ed8e8: sbb esi, esi; ret; 
0x000e63b2: sbb esp, -0x66; stc; call dword ptr [eax - 0x73]; 
0x000945dd: sbb esp, -0x7c; stc; call dword ptr [ebp + 0x51]; 
0x001a0aea: sbb esp, 0x71; stc; call dword ptr [eax - 0x73]; 
0x0007bcaa: sbb esp, ebp; call dword ptr [eax - 1]; 
0x000d96b0: sbb esp, edi; jmp dword ptr [esi - 0x70]; 
0x000535ce: scasb al, byte ptr es:[edi]; add al, 0; add dh, dh; ret 0xf50; 
0x0019787e: scasb al, byte ptr es:[edi]; add byte ptr [eax], al; add dh, dh; ret 0xf40; 
0x00023b84: scasb al, byte ptr es:[edi]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; or dword ptr [edi + 0x2a], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0009af60: scasb al, byte ptr es:[edi]; call 0x7d4ba665; add cl, byte ptr [ebp - 0x17c21f6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x00168b19: scasb al, byte ptr es:[edi]; cld; jmp dword ptr [esi - 0x70]; 
0x000e24b6: scasb al, byte ptr es:[edi]; idiv edi; dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0x14922f80]; call dword ptr [eax + 0x6a]; 
0x00154b1c: scasb al, byte ptr es:[edi]; in eax, dx; dec dword ptr [ebp - 0x650d77b]; call dword ptr [eax - 0x73]; 
0x00162e04: scasb al, byte ptr es:[edi]; inc eax; mov ebx, 0xb68dfff3; and ah, dh; bnd call dword ptr [ebp - 0x73]; 
0x000fb32e: scasb al, byte ptr es:[edi]; lcall 0x3110, 0xc483fffb; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00166fa0: scasb al, byte ptr es:[edi]; lock inc dword ptr [ebx - 0x77cef3c]; add dword ptr [edi], ecx; xchg esp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x00147e3e: scasb al, byte ptr es:[edi]; mov ebx, 0x838dfffe; aam 0xaa; stc; call dword ptr [eax - 0x73]; 
0x00154b73: scasb al, byte ptr es:[edi]; stc; call dword ptr [eax - 0x18]; 
0x00150c97: scasb al, byte ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x00152a41: scasb al, byte ptr es:[edi]; stc; call dword ptr [edx - 0x73]; 
0x00024d73: scasb al, byte ptr es:[edi]; sub edi, ecx; call dword ptr [eax - 0x73]; 
0x0013913e: scasb al, byte ptr es:[edi]; test al, 0xff; jmp dword ptr [esi - 0x70]; 
0x0003d716: scasd eax, dword ptr es:[edi]; aad 1; ret 0xf089; 
0x000872db: scasd eax, dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [ebx + 2], bh; mov esi, 8; call dword ptr gs:[0x10]; 
0x00091675: scasd eax, dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [ecx - 0x76dbdbb4], cl; retf 0x4c8b; and al, 0x18; call dword ptr gs:[0x10]; 
0x000875ca: scasd eax, dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [esi + 8], bh; call dword ptr gs:[0x10]; 
0x0003d9c1: scasd eax, dword ptr es:[edi]; fmul dword ptr [ebx - 0x50f0dbfc]; ret 0xc301; 
0x0017fe33: scasd eax, dword ptr es:[edi]; imul eax, dword ptr [eax + eax], 0x3e8b1c03; jmp ebx; 
0x001450cb: scasd eax, dword ptr es:[edi]; pop ebp; stc; dec dword ptr [ebp - 0x41c6b]; call dword ptr [eax + 0x52]; 
0x000779d7: scasd eax, dword ptr es:[edi]; ret 0x2999; 
0x00035417: scasd eax, dword ptr es:[edi]; ret 0x6c8b; 
0x000787e2: scasd eax, dword ptr es:[edi]; ret 0xbe0f; 
0x0003d9c7: scasd eax, dword ptr es:[edi]; ret 0xc301; 
0x0005371a: scasd eax, dword ptr es:[edi]; ret; 
0x00154b03: scasd eax, dword ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x0002d175: scasd eax, dword ptr es:[edi]; sub al, 0xf9; call dword ptr [eax - 0x18]; 
0x00037552: scasd eax, dword ptr es:[edi]; test al, 0x13; add byte ptr [ecx + 0x1f2aaac6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x00127a9d: seta al; movzx eax, al; neg eax; ret; 
0x00082758: setae al; ret; 
0x000ced42: setb dl; add edx, 0x16d; mov eax, edx; ret; 
0x000f8319: sete al; add esp, 0x2c; movzx eax, al; ret; 
0x0008fe93: sete al; add esp, 0xc; movzx eax, al; lea eax, [eax + eax + 2]; ret; 
0x000481a5: sete al; add esp, 0xc; movzx eax, al; ret; 
0x001500f4: sete al; add esp, 0xc; ret; 
0x000dff31: sete al; movzx eax, al; lea eax, [eax + eax - 1]; ret; 
0x0007b08b: sete al; movzx eax, al; ret; 
0x0008fd62: sete al; movzx eax, al; sub eax, 2; add esp, 0xc; ret; 
0x0002fdde: sete al; ret; 
0x00171f95: sete dl; mov dword ptr [ebx], edx; add esp, 8; pop ebx; ret; 
0x0010414c: setg dl; shr eax, 0x1f; add esp, 8; or eax, edx; pop ebx; ret; 
0x00121859: setne al; add esp, 0x1c; movzx eax, al; neg eax; ret; 
0x0015c836: setne al; add esp, 0x1c; movzx eax, al; ret; 
0x0012189a: setne al; add esp, 0x2c; movzx eax, al; neg eax; ret; 
0x000eab3f: setne al; add esp, 4; add eax, eax; pop ebx; pop esi; ret; 
0x0015bc7c: setne al; add esp, 4; movzx eax, al; pop ebx; pop esi; ret; 
0x0007e6f1: setne al; add esp, 8; movzx eax, al; pop ebx; neg eax; ret; 
0x0015aad7: setne al; add esp, 8; movzx eax, al; pop ebx; ret; 
0x0015bd05: setne al; movzx eax, al; add esp, 4; pop ebx; pop esi; ret; 
0x0011b00b: setne al; movzx eax, al; add esp, 8; pop ebx; ret; 
0x000fb3d9: setne al; movzx eax, al; neg eax; ret; 
0x00082ca2: setne al; movzx eax, al; pop ebx; ret; 
0x0003822f: setne al; movzx eax, al; ret; 
0x0011a202: setne al; pop edi; movzx eax, al; ret; 
0x0011d483: setne al; pop esi; pop edi; movzx eax, al; ret; 
0x000dfebd: setne al; ret; 
0x0008e565: setne al; shl eax, 7; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x0008c6d9: setne byte ptr [edx + 0x19]; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0008c0c7: setne cl; shl ecx, 7; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0015b05c: setne dl; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0007b05f: setne dl; mov eax, edx; ret; 
0x0008495f: setne dl; shl edx, 7; mov dword ptr [eax + 0xc], edx; xor eax, eax; pop ebx; ret; 
0x000b63a2: sgdt [eax]; add byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x00175728: shl ah, 0xec; call dword ptr [eax + 0x6a]; 
0x00079152: shl bh, 0xff; call dword ptr [eax - 0x73]; 
0x00062f96: shl bl, 0xff; dec dword ptr [ebx - 0x4f37b]; jmp dword ptr [ebp - 0x75]; 
0x000a2736: shl byte ptr [eax], 0x5f; pop esi; ret; 
0x001a075e: shl byte ptr [ebp - 9], 1; call dword ptr [edx + 0x50]; 
0x0013b3e7: shl byte ptr [ebx], 0x89; loope 0x13b375; ret 0x25; 
0x00044ce5: shl byte ptr [ebx], cl; jl 0x44d0d; cmp byte ptr [edi], cl; xchg ebp, eax; ret 0x5409; 
0x000bc0a5: shl byte ptr [ebx], cl; jl 0xbc0cd; cmp byte ptr [edi], cl; xchg ebp, eax; ret 0x5409; 
0x0009dba3: shl byte ptr [ecx + 0x440fffe8], 1; ret 0x66c3; 
0x001311f1: shl byte ptr [ecx + edi], 0xd0; jae 0x131200; cmp dword ptr [eax + 4], ecx; jne 0x1311f0; mov eax, dword ptr [eax + 0x18]; ret; 
0x0016d21a: shl byte ptr [edi - 4], cl; jmp dword ptr [esi - 0x70]; 
0x000fd568: shl byte ptr [edx], 1; in eax, dx; call dword ptr [eax - 0x73]; 
0x0014ab77: shl byte ptr [esi + 0x39], 0x71; add dh, byte ptr [edx + ecx + 0x5b]; pop esi; ret; 
0x0017b093: shl byte ptr [esi + 0xf], 0x70; rol byte ptr [eax], 0xf7; ret 0xf; 
0x00191c95: shl byte ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x000b3ea6: shl byte ptr [esi + 0xf], 1; xlatb; ret 0xc085; 
0x00192b8c: shl byte ptr [esi + 0xf], cl; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0003bbd6: shl byte ptr [esi - 0x77], 0x51; add al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x0019c224: shl byte ptr [esi - 0x7f], cl; ret 0x7fff; 
0x0002b7cc: shl dword ptr [0xfffff000], 0x29; ret 0xe183; 
0x00131541: shl dword ptr [0xfffff000], 0x29; ret; 
0x0015af84: shl dword ptr [ebx - 7], cl; call dword ptr [edx + 0x6a]; 
0x00153593: shl dword ptr [ecx - 7], 1; call dword ptr [eax + 0x6a]; 
0x00153693: shl dword ptr [ecx - 7], 1; call dword ptr [eax - 0x18]; 
0x00197065: shl dword ptr [ecx], 0xd0; test eax, eax; jne 0x196c90; xor eax, eax; ret; 
0x00098c17: shl dword ptr [ecx], 1; ret 0x1a8b; 
0x000b4025: shl dword ptr [ecx], 1; retf 0xd285; je 0xb4000; bsr ecx, edx; add eax, ecx; ret; 
0x000715e0: shl dword ptr [ecx], 1; rol dword ptr [ebx + 0x4874fff9], 0x89; ret; 
0x0007d061: shl dword ptr [ecx], cl; ret; 
0x000b3eae: shl dword ptr [esi + 0xf], 0xd7; les eax, ptr [ebp - 0xa7af040]; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x00197061: shl dword ptr [esi + 0xf], 0xd7; shl dword ptr [ecx], 0xd0; test eax, eax; jne 0x196c90; xor eax, eax; ret; 
0x00192355: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x2c73; 
0x00192d16: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3273; 
0x00192340: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3e73; 
0x00192cfc: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x4c73; 
0x0019232b: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x5073; 
0x00192316: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6273; 
0x00192ce2: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6673; 
0x001923e2: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x00192c3c: shl dword ptr [esi + 0xf], 1; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x000b3ad5: shl dword ptr [esi + 0xf], 1; xlatb; ret 0xc085; 
0x00192aec: shl dword ptr [esi + 0xf], cl; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x001050fd: shl eax, 2; push eax; call 0x20150; add esp, 0x18; pop ebx; ret; 
0x00140b01: shl eax, 4; lea eax, [edx + eax + 8]; pop ebx; ret; 
0x00171136: shl eax, 5; lea eax, [eax + edx + 0x64]; ret; 
0x0008e568: shl eax, 7; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x00057a58: shl eax, 8; and eax, 0x100; or eax, 7; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x00038176: shl eax, cl; or dword ptr [edx + ebx*4], eax; xor eax, eax; pop ebx; ret; 
0x00038227: shl eax, cl; sar ecx, 5; and eax, dword ptr [edx + ecx*4]; setne al; movzx eax, al; ret; 
0x0004b68f: shl ebx, cl; mov dword ptr [edi], ebx; pop ebx; pop esi; pop edi; ret; 
0x00171e6b: shl ebx, cl; sar eax, 5; or dword ptr [edx + eax*4], ebx; xor eax, eax; pop ebx; ret; 
0x00147418: shl ecx, 4; add esp, 8; lea edx, [eax + ecx]; pop ebx; mov eax, edx; ret; 
0x0008c0ca: shl ecx, 7; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00133afd: shl edx, 0x10; or eax, edx; bswap eax; mov dword ptr [ecx], eax; mov eax, ecx; ret 4; 
0x0008bc83: shl edx, 0x1c; and eax, 0xcfffffff; or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x0004ca60: shl edx, 0x1f; or eax, edx; mov dword ptr [esp + 4], eax; fld qword ptr [esp]; add esp, 0xc; ret; 
0x0004ca17: shl edx, 0x1f; or eax, edx; mov dword ptr [esp], eax; fld dword ptr [esp]; add esp, 4; ret; 
0x0003b696: shl edx, 0xa; pop ebx; and eax, 0x3ff; xor eax, edx; ret; 
0x001408a2: shl edx, 4; add edx, 8; cmp dword ptr [esp + 8], 0x80; cmovb eax, edx; ret; 
0x00084962: shl edx, 7; mov dword ptr [eax + 0xc], edx; xor eax, eax; pop ebx; ret; 
0x00133b23: shl edx, 8; or eax, edx; bswap eax; mov dword ptr [ecx], eax; mov eax, ecx; ret 4; 
0x001065bb: shl esi, 0xfa; call dword ptr [edi - 1]; 
0x00030e2b: shr al, 0x9f; ret 5; 
0x00082528: shr al, 1; ret 0xb14; 
0x0013127e: shr ax, 0xe; and eax, 1; pop ebx; ret; 
0x0015f18d: shr bl, 0x32; sub esp, 8; mov eax, dword ptr [ebx + 4]; push esi; push ebx; call dword ptr [eax + 0x24]; 
0x0010a7b1: shr bl, 0xdc; lea esi, [esi]; mov edx, dword ptr [esp + 0xa8]; mov eax, 0x133; call dword ptr gs:[0x10]; 
0x000c2cc8: shr bl, 1; or al, 0x8d; je 0xc2cf4; add byte ptr [eax + 0x3901c083], dl; ret; 
0x001602ca: shr bl, cl; or cl, byte ptr [ebp - 0x6b74ff8a]; ret; 
0x000908bb: shr bl, cl; or eax, 0x438b9066; or al, 0x89; fiadd dword ptr [ebp - 0x76e58b40]; ret; 
0x0010ea6d: shr byte ptr [eax + 0x2444c720], cl; and al, 1; add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0x798b; 
0x0015859a: shr byte ptr [eax], 0xff; jo 0x1585b3; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x000e24c8: shr byte ptr [ebp - 0x15], 1; call dword ptr [eax + 0x6a]; 
0x000c8bea: shr byte ptr [ebp - 0xa], cl; dec dword ptr [ebx - 0x364b43]; dec dword ptr [ebp - 0x6673779]; call dword ptr [eax - 0x73]; 
0x00091691: shr byte ptr [ebx - 0x1a], 1; call dword ptr [eax - 1]; 
0x0009c028: shr byte ptr [ebx], 1; cmc; dec dword ptr [ebx + 0x18499]; add dh, dh; ret; 
0x000b3cf2: shr byte ptr [ecx], 0xc2; jbe 0xb3d30; add eax, edi; pop edi; ret; 
0x000b3d05: shr byte ptr [ecx], 0xc2; jbe 0xb3d30; lea eax, [edi + eax + 0x10]; pop edi; ret; 
0x000b3d15: shr byte ptr [ecx], 0xc2; jbe 0xb3d30; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x000b3d25: shr byte ptr [ecx], 0xc2; jbe 0xb3d30; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x0004ff55: shr byte ptr [ecx], 1; ret; 
0x00054927: shr byte ptr [ecx], cl; fdiv dword ptr [ecx]; fstp xword ptr [ecx]; ret 0xbb7d; 
0x000bac9d: shr byte ptr [ecx], cl; ret; 
0x00147473: shr byte ptr [edx + 2], 0x8d; xor dword ptr [edi + 0x2d], 0xfffffff9; call dword ptr [eax + 0x51]; 
0x00172a6d: shr byte ptr [edx], 0x8d; xchg dword ptr [esi + 0x31], esi; stc; call dword ptr [eax + 0x6a]; 
0x000238ee: shr byte ptr [esi - 7], 1; jmp dword ptr [esi - 0x77]; 
0x0005deb4: shr cl, 0xbb; sar edi, 1; dec dword ptr [ebx - 0x59b7b]; jmp dword ptr [ebp - 0x75]; 
0x0006d148: shr cl, 0xc2; out 0xff, al; jmp dword ptr [esi - 0x70]; 
0x0014e206: shr cl, cl; or eax, 0x8dffffff; sbb dword ptr [eax - 0x53], -7; call dword ptr [eax - 0x73]; 
0x00079f65: shr dword ptr [ebp - 6], cl; jmp dword ptr [esi - 0x70]; 
0x000cc4cc: shr dword ptr [ebx + 0x54], cl; and al, 0x10; sbb ch, byte ptr [ecx]; ret; 
0x000eaa56: shr dword ptr [ebx + 0x550013f5], 0x89; ret 0x5657; 
0x001468f1: shr dword ptr [ecx], 1; fld dword ptr [ecx]; ret; 
0x000cbe71: shr dword ptr [ecx], cl; ret; 
0x0003b693: shr eax, 0x10; shl edx, 0xa; pop ebx; and eax, 0x3ff; xor eax, edx; ret; 
0x00089656: shr eax, 0x13; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00133b70: shr eax, 0x18; ret; 
0x0010414f: shr eax, 0x1f; add esp, 8; or eax, edx; pop ebx; ret; 
0x0008bb7e: shr eax, 0x1f; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00035bee: shr eax, 0x1f; ret; 
0x00035bd1: shr eax, 0x1f; shr ecx, 0x10; or eax, ecx; ret; 
0x000829bc: shr eax, 0xb; and eax, 1; mov dword ptr [edx + 0x19f0], eax; ret; 
0x0013127f: shr eax, 0xe; and eax, 1; pop ebx; ret; 
0x0008e4fe: shr eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00140ad2: shr eax, 1; ret; 
0x0004b06d: shr eax, 2; lea ebx, [eax*4 - 4]; lea eax, [eax + eax*8 + 2]; call 0x4b030; add eax, ebx; jmp eax; 
0x00085354: shr eax, 3; je 0x85390; mov eax, edi; call dword ptr gs:[0x10]; 
0x0014047f: shr eax, 3; sub eax, 1; mov byte ptr [edx + 1], al; mov eax, 2; ret; 
0x000943b0: shr eax, 4; add eax, 1; mov dword ptr [edx + 0x1fc], eax; ret; 
0x0007be9a: shr eax, 4; and eax, 1; ret; 
0x0007beba: shr eax, 5; and eax, 1; ret; 
0x00133b52: shr eax, 8; and ecx, 0xc0000000; shr edx, 0x10; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x00128199: shr eax, cl; and eax, 1; pop ebx; pop esi; pop edi; ret; 
0x001220e1: shr eax, cl; and eax, 3; ret; 
0x00166b20: shr eax, cl; retf 0xfcce; jmp dword ptr [esi - 0x70]; 
0x00163fc8: shr ebx, 0xff; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0004b6f7: shr ebx, cl; mov dword ptr [edi], ebx; pop ebx; pop esi; pop edi; ret; 
0x00035bd4: shr ecx, 0x10; or eax, ecx; ret; 
0x001043ab: shr ecx, 2; rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x00103ee3: shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x000eba0c: shr ecx, cl; imul edi, edx, -1; call dword ptr [eax + 0x50]; 
0x000ba5f6: shr ecx, cl; ret 0xfffc; 
0x00133b5b: shr edx, 0x10; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x00128a92: shr edx, cl; and edx, 1; mov eax, edx; pop ebx; pop esi; ret; 
0x000850d4: shr esi, 1; je 0x850f1; xor esi, esi; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000855dc: shr esi, 1; je 0x855f6; xor esi, esi; mov eax, edi; call dword ptr gs:[0x10]; 
0x0012097f: shrd eax, edx, 0xc; xor al, al; or eax, ecx; ret; 
0x00080e87: sldt word ptr [0x1a9177]; mov eax, dword ptr [eax + 0xce0]; ret; 
0x0013cc80: sldt word ptr [eax]; add esp, 0x18; pop ebx; ret; 
0x0012095b: sldt word ptr [eax]; and eax, 0xfffff000; or eax, edx; ret; 
0x00196304: sldt word ptr [eax]; jne 0x196100; xor eax, eax; pop edi; ret; 
0x000227a1: sldt word ptr [eax]; ret; 
0x000671cd: sldt word ptr [eax]; sub esp, 4; push ebx; push dword ptr [ebp - 0x88c]; push dword ptr [ebp - 0x87c]; call dword ptr [edx + 0x1c]; 
0x0013227e: sldt word ptr [ebx - 0x7f72e714]; mov ch, 0x58; stc; call dword ptr [eax - 0x18]; 
0x001339fe: sldt word ptr [ebx - 0x7f72e714]; neg dword ptr [eax - 7]; call dword ptr [eax - 0x18]; 
0x0007c628: sldt word ptr [ecx + 0x1ad9d6c6]; add byte ptr [ebx - 0x77], dl; ret; 
0x000ca3ed: sldt word ptr [ecx]; ret; 
0x000250e1: stc; add al, 0xf; test ah, dh; add dword ptr [eax], eax; add byte ptr [ebx - 0x7ce3dbbc], cl; ret 0x8301; 
0x0019df99: stc; add al, 0xf; test byte ptr [ebx - 0x76000004], dl; ret; 
0x0007d77b: stc; add byte ptr [eax], al; add byte ptr [ebx + 0x555004ec], al; push esi; call dword ptr [ebx + 0x38]; 
0x000b5725: stc; add byte ptr [ecx + eax + 0x40], dh; sub eax, dword ptr [esp + 4]; ret; 
0x0004ef45: stc; add byte ptr [ecx], bl; ret 0xba; 
0x00189e02: stc; add byte ptr [edi], cl; test byte ptr [eax - 0x7cffffed], dh; ret 0x8308; 
0x00191d4d: stc; add byte ptr [edi], cl; test byte ptr [ebx - 0x7d000000], cl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x000fbbbd: stc; add dh, byte ptr [edi + ecx - 0x77]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000cfd8b: stc; add dword ptr [ebp - 0x69f022b6], ecx; ret; 
0x0015b2b1: stc; add dword ptr [ebx + ecx - 0x7d], esi; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0011f723: stc; add eax, 0xec830000; or byte ptr [ebp - 0x6b2997d], cl; call dword ptr [eax + 0x57]; 
0x00104362: stc; add ecx, 0x150; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x00103edf: stc; add ecx, 0x4c; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x0010e9ca: stc; add ecx, dword ptr [edi]; xchg esp, eax; ret; 
0x0015a752: stc; add esi, dword ptr [esi + 0xa]; mov eax, 2; pop ebx; pop esi; ret; 
0x00048a1f: stc; and al, 0x75; fmul qword ptr [ecx + 0x5f5e5bd8]; ret; 
0x001a1083: stc; and esi, ebp; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x00119801: stc; call dword ptr [eax + 0x50]; 
0x0014747a: stc; call dword ptr [eax + 0x51]; 
0x001500e6: stc; call dword ptr [eax + 0x52]; 
0x00030cc4: stc; call dword ptr [eax + 0x53]; 
0x000ccc37: stc; call dword ptr [eax + 0x55]; 
0x0002c419: stc; call dword ptr [eax + 0x56]; 
0x0003ffc8: stc; call dword ptr [eax + 0x57]; 
0x00024d69: stc; call dword ptr [eax + 0x68]; 
0x0002171a: stc; call dword ptr [eax + 0x6a]; 
0x001578b5: stc; call dword ptr [eax + 0x6a]; or eax, ebp; sal dword ptr [edi + edi*8 + 0x1cc483ff], 1; ret; 
0x00157e65: stc; call dword ptr [eax + 0x6a]; pop es; call 0x152d90; add esp, 0x1c; ret; 
0x00155f35: stc; call dword ptr [eax + 0x6a]; push es; call 0x152d90; add esp, 0x1c; ret; 
0x000f468d: stc; call dword ptr [eax - 0x17]; 
0x000218f0: stc; call dword ptr [eax - 0x18]; 
0x001552b6: stc; call dword ptr [eax - 0x18]; add ah, byte ptr [edi + 0x2de8ffed]; out 0xfd, eax; jmp dword ptr [esi - 0x70]; 
0x0008b402: stc; call dword ptr [eax - 0x18]; add bh, bh; jmp dword ptr [ebp - 0x39]; 
0x00102eb6: stc; call dword ptr [eax - 0x18]; bound ebp, qword ptr [edx - 0xd]; dec dword ptr [ecx - 0x76ebdbbc]; ret; 
0x0003a656: stc; call dword ptr [eax - 0x18]; bound edx, qword ptr [ebx - 1]; jmp dword ptr [esi - 0x70]; 
0x000ce991: stc; call dword ptr [eax - 0x18]; daa; adc dh, dh; jmp dword ptr [esi - 0x70]; 
0x0008b46b: stc; call dword ptr [eax - 0x18]; dec ebp; inc ebp; cli; jmp dword ptr [esi - 0x70]; 
0x00152b4b: stc; call dword ptr [eax - 0x18]; insd dword ptr es:[edi], dx; into; in eax, dx; jmp dword ptr [esi - 0x70]; 
0x00147439: stc; call dword ptr [eax - 0x18]; jg 0x1473c4; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00140e43: stc; call dword ptr [eax - 0x18]; jne 0x140e34; out dx, al; jmp dword ptr [esi - 0x70]; 
0x000cd56b: stc; call dword ptr [eax - 0x18]; lodsd eax, dword ptr [esi]; ret; 
0x001693fe: stc; call dword ptr [eax - 0x18]; mov edx, 0xe8ffec65; in eax, 0xa5; cld; jmp dword ptr [esi - 0x70]; 
0x0016d197: stc; call dword ptr [eax - 0x18]; push ecx; retf 0xfff9; add esp, 0x1c; ret; 
0x00137e36: stc; call dword ptr [eax - 0x18]; ret 0x178; 
0x00135636: stc; call dword ptr [eax - 0x18]; ret 0x1a0; 
0x0015ed66: stc; call dword ptr [eax - 0x18]; ret 0xed18; 
0x000478f6: stc; call dword ptr [eax - 0x18]; ret 0xfe80; 
0x00119896: stc; call dword ptr [eax - 0x18]; ret 7; 
0x0002acf5: stc; call dword ptr [eax - 0x18]; ret; 
0x0014e8c1: stc; call dword ptr [eax - 0x18]; retf; bnd jmp dword ptr [esi - 0x70]; 
0x0008a1e2: stc; call dword ptr [eax - 0x18]; salc; push edi; cli; jmp dword ptr [esi - 0x70]; 
0x001743ff: stc; call dword ptr [eax - 0x18]; sub dword ptr [eax - 0x10], esi; jmp dword ptr [esi - 0x70]; 
0x00118334: stc; call dword ptr [eax - 0x18]; test byte ptr [esi - 0xf], dh; jmp dword ptr [esi - 0x70]; 
0x0013f921: stc; call dword ptr [eax - 0x18]; xchg edi, eax; add bh, ch; jmp dword ptr [esi - 0x39]; 
0x0011b072: stc; call dword ptr [eax - 0x39]; 
0x0013a55b: stc; call dword ptr [eax - 0x42]; 
0x00021fc7: stc; call dword ptr [eax - 0x73]; 
0x0014cdee: stc; call dword ptr [eax - 0x73]; and ebx, 0x5f; stc; call dword ptr [eax - 0x18]; ret; 
0x0011988f: stc; call dword ptr [eax - 0x73]; xor eax, 0x4a; stc; call dword ptr [eax - 0x18]; ret 7; 
0x0007e23e: stc; call dword ptr [eax - 0x75]; 
0x0006ab76: stc; call dword ptr [eax - 0x77]; 
0x000239c4: stc; call dword ptr [eax - 1]; 
0x0016d601: stc; call dword ptr [ebp + 0x50]; 
0x000945e0: stc; call dword ptr [ebp + 0x51]; 
0x00057d11: stc; call dword ptr [ebp + 0x53]; 
0x00057ec4: stc; call dword ptr [ebp + 0x56]; 
0x00167100: stc; call dword ptr [ebp + 0x6a]; 
0x0012cc94: stc; call dword ptr [ebp - 1]; 
0x00058fa7: stc; call dword ptr [ebx + 0x50]; 
0x00147a0a: stc; call dword ptr [ebx - 0x18]; 
0x0015222b: stc; call dword ptr [ebx - 0x73]; 
0x000bb2ab: stc; call dword ptr [ebx - 1]; 
0x000590b1: stc; call dword ptr [ecx + 0x50]; 
0x0011f998: stc; call dword ptr [ecx + 0x51]; 
0x00081a8c: stc; call dword ptr [ecx + 0x52]; 
0x0005856f: stc; call dword ptr [ecx + 0x53]; 
0x00161cf0: stc; call dword ptr [ecx + 0x6a]; 
0x00140ed6: stc; call dword ptr [ecx - 0x77]; 
0x000dc5a7: stc; call dword ptr [ecx - 1]; 
0x0011bc1f: stc; call dword ptr [edi + 0x50]; 
0x001626b5: stc; call dword ptr [edi + 0x52]; 
0x0016d032: stc; call dword ptr [edi + 0x53]; 
0x0016c7de: stc; call dword ptr [edi + 0x55]; 
0x0016c191: stc; call dword ptr [edi + 0x56]; 
0x0011bb97: stc; call dword ptr [edi - 0x7f]; 
0x000dc60d: stc; call dword ptr [edi - 1]; 
0x00024131: stc; call dword ptr [edx + 0x50]; 
0x000eb987: stc; call dword ptr [edx + 0x52]; 
0x0015ad81: stc; call dword ptr [edx + 0x6a]; 
0x00131787: stc; call dword ptr [edx - 0x17]; 
0x0002283b: stc; call dword ptr [edx - 0x73]; 
0x001197a7: stc; call dword ptr [edx - 0x77]; 
0x001421eb: stc; call dword ptr [edx - 1]; 
0x000cd583: stc; call dword ptr [esi + 0x50]; 
0x0016d08b: stc; call dword ptr [esi + 0x53]; 
0x001601d8: stc; call dword ptr [esi + 0x57]; 
0x00047e03: stc; call dword ptr [esi + 0x6a]; 
0x0014798e: stc; call dword ptr [esi - 0x18]; 
0x000592f4: stc; call dword ptr [esi - 0x77]; 
0x0002f8ff: stc; call dword ptr [esi - 1]; 
0x00083065: stc; call dword ptr gs:[0x10]; 
0x0011f1ff: stc; call ptr [ebx + 0x5e]; ret; 
0x00120777: stc; dec dword ptr [eax - 0x6c72f7aa]; ret 0xf952; 
0x00105497: stc; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; xor eax, eax; ret; 
0x0003ff92: stc; dec dword ptr [ebp - 0x35f49]; call dword ptr [esi + 0x6a]; 
0x001450cd: stc; dec dword ptr [ebp - 0x41c6b]; call dword ptr [eax + 0x52]; 
0x0013a719: stc; dec dword ptr [ebp - 0x68d3356]; call dword ptr [eax + 0x55]; 
0x00140ed0: stc; dec dword ptr [ebp - 0x6a28d7a]; call dword ptr [ecx - 0x77]; 
0x00124286: stc; dec dword ptr [ebp - 0x6aa3f53]; call dword ptr [eax - 0x18]; 
0x000f43f7: stc; dec dword ptr [ebp - 0x6b7af71]; call dword ptr [eax - 0x77]; 
0x000df946: stc; dec dword ptr [ebp - 0x6b91c80]; call dword ptr [ebx + 0x50]; 
0x00099a33: stc; dec dword ptr [ebp - 0x6bf3a69]; call dword ptr [eax - 0x73]; 
0x00097cd5: stc; dec dword ptr [ebp - 0x6bf3a6a]; call dword ptr [eax - 0x73]; 
0x000f4687: stc; dec dword ptr [ebp - 0x6c15b71]; call dword ptr [eax - 0x17]; 
0x0016560e: stc; dec dword ptr [ebx + 0x52530446]; push esi; call dword ptr [eax + 0xc]; 
0x00048375: stc; dec dword ptr [ebx - 0x1336e]; jmp dword ptr [esi - 0x77]; 
0x00092695: stc; dec dword ptr [ebx - 0x7972778b]; pushal; test cl, bh; call dword ptr [eax + 0x68]; 
0x0013b7b9: stc; dec dword ptr [ecx - 0x48b7b]; call dword ptr [edi + 0x52]; 
0x000238e6: stc; dec dword ptr [ecx - 0x48f0e7b0]; xchg ebx, eax; shr byte ptr [esi - 7], 1; jmp dword ptr [esi - 0x77]; 
0x00023b2d: stc; dec dword ptr [ecx - 0x48f0e7ba]; adc eax, 0x6e; stc; jmp dword ptr [esi - 0x77]; 
0x00024506: stc; dec dword ptr [ecx - 0x48f0f7bd]; xchg eax, esp; outsb dx, byte ptr [esi]; stc; jmp dword ptr [esi - 0x77]; 
0x0009b35e: stc; dec dword ptr [ecx - 0x72afdbe4]; test edx, eax; inc ebx; stc; call dword ptr [eax + 0x57]; 
0x00057414: stc; dec dword ptr [ecx - 0x72f7db8c]; mov bl, 1; xor cl, bh; dec dword ptr [ecx - 0x9ebdb8c]; ret 0xf50; 
0x000302c5: stc; dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x001322ba: stc; dec dword ptr [ecx - 0x7872af05]; jno 0x132302; stc; call dword ptr [eax - 0x18]; 
0x0005741e: stc; dec dword ptr [ecx - 0x9ebdb8c]; ret 0xf50; 
0x0002ef38: stc; dec dword ptr [ecx - 0xdb6b]; call dword ptr [eax - 0x39]; 
0x00035064: stc; dec dword ptr [edi]; inc ebp; call 0x26856; jmp dword ptr [esi - 0x70]; 
0x0010ce76: stc; dec dword ptr [edi]; inc esp; ret 0x4489; 
0x0007cc95: stc; dec dword ptr [edi]; inc esp; ret 0x568b; 
0x000dadbe: stc; dec dword ptr [edi]; inc esp; ret 0x8d50; 
0x000dad06: stc; dec dword ptr [edi]; inc esp; ret 0xec83; 
0x0011cbc3: stc; dec dword ptr [edi]; xchg ebp, eax; ret; 
0x00119e02: stc; inc dword ptr [ebp - 0x17f88b40]; mov dword ptr [0x89fffffd], eax; ret 0x4c8b; 
0x000517f7: stc; inc dword ptr [ebp - 0x38ec8b40]; add byte ptr [edi], ch; jbe 0x5178d; ret 0x40c7; 
0x0013b355: stc; inc dword ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x00081eee: stc; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x00083e2c: stc; inc dword ptr [ebx - 0x3fcee73c]; pop ebx; ret; 
0x0009a276: stc; inc dword ptr [ebx - 0x72aff33c]; sbb dword ptr [eax + 0x5b], -7; call dword ptr [eax + 0x6a]; 
0x00178220: stc; inc dword ptr [ebx - 0x73ee33c]; pop ds; ret; 
0x0016d7b7: stc; inc dword ptr [ebx - 0x776ef3c]; pop ebx; pop esi; pop edi; ret; 
0x0017215c: stc; inc dword ptr [ebx - 0x77cef3c]; dec dword ptr [edi]; test byte ptr [edi - 0x77000000], dl; ret 0xe283; 
0x00034f83: stc; inc dword ptr [ebx - 0x7c72f314]; mov ah, 0x2f; stc; call dword ptr [eax - 0x18]; 
0x00101542: stc; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x00149b13: stc; inc dword ptr [ecx]; fidivr dword ptr [esi]; jmp edx; 
0x0010491f: stc; inc dword ptr [ecx]; sar dword ptr [esi], 1; jmp ecx; 
0x000836a7: stc; jmp dword ptr [ebp - 0x39]; 
0x000949c1: stc; jmp dword ptr [ebp - 0x5f]; 
0x0003ebe4: stc; jmp dword ptr [ebp - 0x75]; 
0x0011d196: stc; jmp dword ptr [ecx]; 
0x0018cc5a: stc; jmp dword ptr [esi + 0xf]; 
0x00179fcb: stc; jmp dword ptr [esi - 0x70]; 
0x000238f0: stc; jmp dword ptr [esi - 0x77]; 
0x001a0af4: stc; jmp ptr [eax + 0x16]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; or dword ptr [ebx + 0x2d], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00024d4d: stc; jmp ptr [eax + 0x1e]; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; or dword ptr [eax + 0x6f], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0013f915: stc; jmp ptr [eax + 0x20]; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [edi - 7], bl; call dword ptr [eax - 0x18]; 
0x00044739: stc; jmp ptr [eax + 0x4d]; add eax, 0x8d500000; xchg al, dh; jne 0x4473f; call dword ptr [eax - 0x18]; 
0x0004156f: stc; jmp ptr [eax + 0x4d]; add eax, 0x8d500000; xchg eax, esi; jne 0x41575; call dword ptr [eax - 0x18]; 
0x0004780b: stc; jmp ptr [eax + 0x4d]; add eax, 0x8d500000; xchg eax, esi; jne 0x47811; call dword ptr [eax - 0x18]; 
0x00051139: stc; jmp ptr [eax + 0x4d]; add eax, 0x8d500000; xchg eax, esi; jne 0x5113f; call dword ptr [eax - 0x18]; 
0x000bbb94: stc; jmp ptr [eax + 0x4d]; add eax, 0x8d500000; xchg eax, esi; jne 0xbbb9a; call dword ptr [eax - 0x18]; 
0x000be863: stc; jmp ptr [eax + 0x4d]; add eax, 0x8d500000; xchg eax, esi; jne 0xbe869; call dword ptr [eax - 0x18]; 
0x000c166a: stc; jmp ptr [eax + 0x4d]; add eax, 0x8d500000; xchg eax, esi; jne 0xc1670; call dword ptr [eax - 0x18]; 
0x000c8d02: stc; jmp ptr [eax + 0x50]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; and byte ptr [esi + 0x44], 0xf9; call dword ptr [eax - 0x18]; 
0x00044853: stc; jmp ptr [eax + 0x5f]; add eax, 0x8d500000; xchg byte ptr [eax], bh; jbe 0x44859; call dword ptr [eax - 0x18]; 
0x00041407: stc; jmp ptr [eax + 0x5f]; add eax, 0x8d500000; xchg dword ptr [eax], edi; jbe 0x4140d; call dword ptr [eax - 0x18]; 
0x0004790d: stc; jmp ptr [eax + 0x5f]; add eax, 0x8d500000; xchg dword ptr [eax], edi; jbe 0x47913; call dword ptr [eax - 0x18]; 
0x00051114: stc; jmp ptr [eax + 0x5f]; add eax, 0x8d500000; xchg dword ptr [eax], edi; jbe 0x5111a; call dword ptr [eax - 0x18]; 
0x000bbabb: stc; jmp ptr [eax + 0x5f]; add eax, 0x8d500000; xchg dword ptr [eax], edi; jbe 0xbbac1; call dword ptr [eax - 0x18]; 
0x000be982: stc; jmp ptr [eax + 0x5f]; add eax, 0x8d500000; xchg dword ptr [eax], edi; jbe 0xbe988; call dword ptr [eax - 0x18]; 
0x000c15f8: stc; jmp ptr [eax + 0x5f]; add eax, 0x8d500000; xchg dword ptr [eax], edi; jbe 0xc15fe; call dword ptr [eax - 0x18]; 
0x000c79ee: stc; jmp ptr [eax + 0x74]; add eax, 0x8d500000; adc byte ptr [ecx + 0x30], 0xf9; call dword ptr [eax - 0x18]; 
0x00040878: stc; jmp ptr [eax + 0x74]; add eax, 0x8d500000; xchg dword ptr [ecx + 0x30], edx; stc; call dword ptr [eax - 0x18]; 
0x0014d258: stc; jmp ptr [eax + 0x7c]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + ebp*4 - 7], ebp; call dword ptr [eax - 0x18]; 
0x00029cfe: stc; jmp ptr [eax - 0x13]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax + esi*2 - 7], dl; call dword ptr [eax - 0x18]; 
0x00026f2d: stc; jmp ptr [eax - 0x13]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + esi*2 - 7], edx; call dword ptr [eax - 0x18]; 
0x000ce966: stc; jmp ptr [eax - 0x1b]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; sbb dword ptr [edx + 0x45], -7; call dword ptr [eax - 0x18]; 
0x000912bf: stc; jmp ptr [eax - 0x22]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + eax*4 - 7], ecx; call dword ptr [eax - 0x18]; 
0x0004480d: stc; jmp ptr [eax - 0x28]; add eax, 0x8d500000; xchg byte ptr [esi + 0x30], ah; stc; call dword ptr [eax - 0x18]; 
0x000414c9: stc; jmp ptr [eax - 0x28]; add eax, 0x8d500000; xchg dword ptr [esi + 0x30], esp; stc; call dword ptr [eax - 0x18]; 
0x00088fc4: stc; jmp ptr [eax - 0x40]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax + eax*4 - 7], dl; call dword ptr [eax - 0x18]; 
0x00023b81: stc; jmp ptr [eax - 0x52]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; or dword ptr [edi + 0x2a], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00023bab: stc; jmp ptr [eax - 0x58]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; add dword ptr [edx + 0x2a], -7; call dword ptr [eax - 0x18]; 
0x0007a7aa: stc; jmp ptr [eax - 0x62]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; add dword ptr [eax + 0x7d], -7; call dword ptr [eax - 0x18]; 
0x0007a7c9: stc; jmp ptr [eax - 0x69]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; sub dword ptr [edx + 0x47], -7; call dword ptr [eax - 0x18]; 
0x001693d2: stc; jmp ptr [eax - 0x72]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; cmp dword ptr [esi + 0x65], -7; call dword ptr [eax - 0x18]; 
0x0009117b: stc; jmp ptr [eax - 0x74]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; sub byte ptr [edi + 0x40], 0xf9; call dword ptr [eax - 0x18]; 
0x0008aa22: stc; jmp ptr [eax - 0x7a]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; test dword ptr [eax + eax*4 - 7], edx; call dword ptr [eax - 0x18]; 
0x000ce947: stc; jmp ptr [eax - 0x7b]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; or dword ptr [ebx + 0x45], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0004f372: stc; ljmp 0x3001:0x878dffff; stc; dec dword ptr [ebp - 0x35f49]; call dword ptr [esi + 0x6a]; 
0x000f82cb: stc; mov dword ptr [eax], 0; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x000d7a97: stc; mov ebp, eax; mov esi, dword ptr [esp + 4]; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000d79c9: stc; mov ebx, 1; call dword ptr gs:[0x10]; 
0x0017b074: stc; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017aa44: stc; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00148b80: stc; or cl, byte ptr [edi]; xchg esp, eax; ret 0xd008; 
0x00115a79: stc; or dword ptr [ebx + esi - 0x75], esi; pop esp; and al, 0x20; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x001a07af: stc; out 0xff, eax; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000b5c91: stc; pop edi; cmovg eax, edx; ret; 
0x00196202: stc; pop edi; ret; 
0x000b584e: stc; pop esi; ret; 
0x0013df01: stc; pop esp; stc; call dword ptr [eax + 0x53]; 
0x000715e4: stc; push dword ptr [eax + ecx*2 - 0x77]; ret; 
0x0016791e: stc; push dword ptr [ecx]; call dword ptr [eax + 0x6a]; 
0x000e59fc: stc; ret; 
0x001953d1: stc; sub al, 0x74; sbb eax, dword ptr [ebx - 0x7bf0d207]; ret 0; 
0x000ced27: stc; sub byte ptr [edi + ecx*4 + 2], bl; jbe 0xced38; mov eax, edx; ret; 
0x0004e051: stc; xor byte ptr [edi], cl; test byte ptr [edi - 0x76fffffd], ah; ret; 
0x0009b10e: stc; xor byte ptr [edi], cl; xchg esp, eax; ret 0xfa01; 
0x00190836: std; adc byte ptr [ebp - 0x79f00f93], cl; call dword ptr [eax]; 
0x0018b732: std; adc byte ptr [ebp - 0x79f00f93], cl; ret; 
0x001936aa: std; add al, 0x76; ret; 
0x00197a09: std; add byte ptr [eax], al; add byte ptr [eax + 4], bh; pop edi; ret; 
0x000dfcaa: std; add byte ptr [eax], al; pop ebx; cmove eax, edx; ret; 
0x0004e0ff: std; add dword ptr [eax], eax; add byte ptr [ebx - 0x362f43], al; call dword ptr [eax]; 
0x00195b3f: std; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x0019de81: std; add dword ptr [ecx], ebx; shl byte ptr [esi - 0x7f], cl; ret 0x7fff; 
0x000dceae: std; add dword ptr [edi], ecx; test byte ptr [edi + edi*8 - 1], cl; push dword ptr [ecx]; fucomi st(1); ret; 
0x0018c22d: std; add eax, 0xfd830000; adc byte ptr [ebp - 0x79f00f93], cl; ret; 
0x00104c6e: std; call dword ptr [ecx + 0x6a]; 
0x000f7f21: std; clc; call dword ptr [ecx + 0x6a]; 
0x0009fcbf: std; cld; clc; dec dword ptr [ebp - 0x66a2370]; call dword ptr [edx - 0x73]; 
0x0009aff2: std; cmc; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0015eda3: std; dec dword ptr [ebp - 0x69c1f7d]; call dword ptr [edx + 0x6a]; 
0x0015af80: std; dec dword ptr [ebp - 0x69c2c7d]; call dword ptr [edx + 0x6a]; 
0x00059171: std; dec dword ptr [ebx + 0x39c8290f]; ret; 
0x00050fea: std; dec dword ptr [ebx - 0x365343]; dec dword ptr [ebp - 0x6894f79]; call dword ptr [eax - 0x73]; 
0x00051059: std; dec dword ptr [ebx - 0x365343]; dec dword ptr [ebp - 0x689a379]; call dword ptr [eax - 0x73]; 
0x00104d64: std; dec dword ptr [ecx - 0x473e7626]; rol byte ptr [eax], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000fca99: std; dec eax; stc; call dword ptr [eax + 0x56]; 
0x00035dad: std; fstp st(1); ret; 
0x00132785: std; inc dword ptr [ebx + 0x5e5b20c4]; pop edi; ret; 
0x000d6da1: std; inc dword ptr [ebx - 0x3616ef3c]; jecxz 0xd6da9; call dword ptr [eax + 0x53]; 
0x00104c06: std; inc dword ptr [ebx - 0x3e760035]; mov edx, ebx; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x001328ce: std; inc dword ptr [ebx - 0x3f7aef3c]; je 0x1328e0; add esp, 8; pop ebx; ret; 
0x00058eec: std; inc dword ptr [ebx - 0x72aff33c]; test dword ptr [edi + 0x32], ebx; stc; call dword ptr [eax + 0x56]; 
0x001a0dca: std; inc dword ptr [ecx + 0x89234c3]; add byte ptr [ebx + 0x194483], cl; add byte ptr [ebp + 0x314574c0], al; jmp dword ptr [esi - 0x70]; 
0x001a0868: std; inc dword ptr [ecx + 0x89796c3]; add byte ptr [ebx - 0x7c72ef14], al; and byte ptr [eax - 9], ch; call dword ptr [eax - 1]; 
0x001932c8: std; inc dword ptr [ecx + 0x96d36c3]; add byte ptr [ebx - 0x677d], cl; jmp dword ptr [ebp - 0x75]; 
0x00192dc8: std; inc dword ptr [ecx + 0x97236c3]; add byte ptr [ebx - 0x677d], cl; jmp dword ptr [ebp - 0x75]; 
0x0004d091: std; jmp dword ptr [esi - 0x70]; 
0x0015ef0a: std; jmp dword ptr [esi - 0x70]; nop; endbr32; ret; 
0x0005916a: std; jmp ptr [ecx]; ret; 
0x0017b078: std; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00181013: std; mov byte ptr [edx - 1], al; mov eax, edx; pop ebx; ret; 
0x0017aa48: std; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00084692: std; mov dword ptr [ecx + 8], eax; xor eax, eax; ret; 
0x001924e5: std; mov eax, 0; jne 0x192da6; pop ebx; ret; 
0x001955fb: std; mov eax, 0; jne 0x1956d0; pop ebx; ret; 
0x000ad24f: std; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0008665c: std; or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x00081736: std; pop ds; pop edi; mov edx, ebp; pop ebp; ret; 
0x00196232: std; pop edi; ret; 
0x000b41b3: std; pop esi; pop edi; pop ebp; ret; 
0x0013ed32: sti; adc al, 0xf; xchg esp, eax; ret; 
0x0013f8cb: sti; add al, 0x72; ret; 
0x00050376: sti; add al, byte ptr [eax]; add byte ptr [ebx - 0x364f7b], al; jmp eax; 
0x00172111: sti; add byte ptr [eax], al; add byte ptr [ebx - 0x1337d], cl; jmp dword ptr [ebp - 0x75]; 
0x000424e5: sti; add byte ptr [ecx], bl; ret 0xba; 
0x0002c5db: sti; add cl, byte ptr [edi]; xchg esi, eax; ret; 
0x001036ea: sti; add cl, byte ptr [edi]; xchg esp, eax; ret 0xff52; 
0x001280c3: sti; call 0x171e01; add eax, 0x101f37; mov eax, dword ptr [eax - 0xc8]; mov eax, dword ptr [eax + 0x24]; ret; 
0x00092f73: sti; call 0x171e01; add eax, 0x197087; mov dword ptr [eax + 0x3b04], 0; ret; 
0x00088343: sti; call 0x171e01; add eax, 0x1a1cb7; mov eax, dword ptr [eax + 0x3a28]; ret; 
0x00080e83: sti; call 0x171e01; add eax, 0x1a9177; mov eax, dword ptr [eax + 0xce0]; ret; 
0x000384d3: sti; call 0x171e01; add eax, 0x1f1b27; mov eax, dword ptr [eax + 0x64]; ret; 
0x000384b3: sti; call 0x171e01; add eax, 0x1f1b47; mov eax, dword ptr [eax + 0x68]; ret; 
0x0002fff3: sti; call 0x171e01; add eax, 0x1fa007; mov eax, dword ptr [eax - 0x13c]; add eax, dword ptr gs:[0]; ret; 
0x0002b8c3: sti; call 0x171e01; add eax, 0x1fe737; mov eax, dword ptr [eax + 0x1014]; ret; 
0x000227b3: sti; call 0x171e01; add eax, 0x207847; mov eax, dword ptr [eax + 0xff0]; ret; 
0x00022793: sti; call 0x171e01; add eax, 0x207867; mov eax, dword ptr [eax + 0xfec]; ret; 
0x00021de3: sti; call 0x171e01; add eax, 0x208217; mov eax, dword ptr [eax - 0x134]; add eax, dword ptr gs:[0]; ret; 
0x00021753: sti; call 0x171e01; add eax, 0x2088a7; lea eax, [eax - 0x6921c]; ret; 
0x00021733: sti; call 0x171e01; add eax, 0x2088c7; lea eax, [eax - 0x69214]; ret; 
0x00133df3: sti; call 0x171e01; add eax, 0xf6207; mov eax, dword ptr [eax - 0x114]; add eax, dword ptr gs:[0]; ret; 
0x0014e6d7: sti; call 0x20140; mov dword ptr [esp], ebp; call esi; 
0x000f6dc5: sti; clc; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x000827c3: sti; cmp dword ptr [esp + 4], 1; je 0x827d8; mov eax, dword ptr gs:[8]; mov byte ptr [eax + 0x4fe], 0; ret; 
0x000e0df7: sti; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; xor eax, eax; ret; 
0x0007e5c0: sti; dec dword ptr [ebp - 0x6818b7b]; call dword ptr [eax - 0x73]; 
0x0007a79d: sti; dec dword ptr [ebp - 0x681f77d]; call dword ptr [eax - 0x73]; 
0x00078bdd: sti; dec dword ptr [ebp - 0x682cb7a]; call dword ptr [eax - 0x73]; 
0x00119e30: sti; dec edx; stc; call dword ptr [edx + 0x50]; 
0x00035da3: sti; fild dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; fscale; fstp st(1); ret; 
0x0004051e: sti; idiv edi; call dword ptr [eax + 0x6a]; 
0x000d7c03: sti; inc dword ptr [ebx + 0x5e5b3cc4]; pop edi; pop ebp; ret; 
0x000fa4c7: sti; inc dword ptr [ebx - 0x3b7cfefa]; adc byte ptr [ecx], al; ret; 
0x000fb330: sti; inc dword ptr [ebx - 0x3fceef3c]; pop ebx; pop esi; pop edi; ret; 
0x00063841: sti; int 0xff; jmp dword ptr [ebp - 0x5f]; 
0x000c1559: sti; jecxz 0xc155b; dec dword ptr [ebx - 0x72dbdb84]; xchg dword ptr [edi + edx*4], esp; stc; call dword ptr [eax - 0x73]; 
0x00020163: sti; jmp dword ptr [ebx + 0xc]; 
0x00020153: sti; jmp dword ptr [ebx - 0x10]; nop word ptr [eax + eax]; endbr32; jmp dword ptr [ebx + 0xc]; 
0x000de78c: sti; jmp dword ptr [esi - 0x70]; 
0x0017b034: sti; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017aa04: sti; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00084afc: sti; mov dword ptr [edi + 0x10], 0; mov ecx, dword ptr [edi + 0xc]; xor cl, 0x81; mov dword ptr [edi], 0; call dword ptr gs:[0x10]; 
0x0017ee78: sti; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00180ea8: sti; mov dword ptr [edx - 4], eax; mov eax, edx; pop ebx; ret; 
0x00188358: sti; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x00188394: sti; mov dword ptr [edx - 5], ecx; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x00123b53: sti; mov eax, 0x123; call dword ptr gs:[0x10]; 
0x00123b53: sti; mov eax, 0x123; call dword ptr gs:[0x10]; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x000df2c3: sti; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x000df2c3: sti; mov eax, 0x14; call dword ptr gs:[0x10]; ret; 
0x00118e03: sti; mov eax, 0x24; call dword ptr gs:[0x10]; 
0x00118e03: sti; mov eax, 0x24; call dword ptr gs:[0x10]; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x000df2e3: sti; mov eax, 0x40; call dword ptr gs:[0x10]; 
0x000df2e3: sti; mov eax, 0x40; call dword ptr gs:[0x10]; ret; 
0x000df613: sti; mov eax, 0x41; call dword ptr gs:[0x10]; 
0x000df613: sti; mov eax, 0x41; call dword ptr gs:[0x10]; ret; 
0x000df693: sti; mov eax, 0x42; call dword ptr gs:[0x10]; 
0x0011c753: sti; mov eax, 0x99; call dword ptr gs:[0x10]; 
0x0008fe33: sti; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0008fe33: sti; mov eax, 0x9e; call dword ptr gs:[0x10]; ret; 
0x000df303: sti; mov eax, 0xc7; call dword ptr gs:[0x10]; 
0x000df303: sti; mov eax, 0xc7; call dword ptr gs:[0x10]; ret; 
0x000df343: sti; mov eax, 0xc8; call dword ptr gs:[0x10]; 
0x000df343: sti; mov eax, 0xc8; call dword ptr gs:[0x10]; ret; 
0x000df323: sti; mov eax, 0xc9; call dword ptr gs:[0x10]; 
0x000df323: sti; mov eax, 0xc9; call dword ptr gs:[0x10]; ret; 
0x000df363: sti; mov eax, 0xca; call dword ptr gs:[0x10]; 
0x000df363: sti; mov eax, 0xca; call dword ptr gs:[0x10]; ret; 
0x00123f03: sti; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x00123f03: sti; mov eax, 0xe0; call dword ptr gs:[0x10]; ret; 
0x000801c3: sti; mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x0007f9e3: sti; mov eax, 0xffffffff; ret; 
0x001585d3: sti; mov eax, 1; ret; 
0x0015a953: sti; mov eax, 2; ret; 
0x00082803: sti; mov eax, dword ptr [eax + 0x1c]; mov dword ptr gs:[0x80], eax; ret; 
0x00188352: sti; mov eax, dword ptr [eax - 4]; mov dword ptr [edx - 5], ecx; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x00036ed3: sti; mov eax, dword ptr [esp + 0x10]; and eax, 0x80000000; ret; 
0x0017a983: sti; mov eax, dword ptr [esp + 0x10]; mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x00035be3: sti; mov eax, dword ptr [esp + 0xc]; or eax, 0xffff8000; inc eax; shr eax, 0x1f; ret; 
0x00166b33: sti; mov eax, dword ptr [esp + 4]; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x0013faf3: sti; mov eax, dword ptr [esp + 4]; add eax, 9; and eax, 0xfffffff8; add eax, 0xc; ret; 
0x0007be83: sti; mov eax, dword ptr [esp + 4]; and dword ptr [eax], 0xffffffcf; ret; 
0x0002fdc3: sti; mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x00133a63: sti; mov eax, dword ptr [esp + 4]; and eax, 0xffff; ror ax, 8; ret; 
0x00133a53: sti; mov eax, dword ptr [esp + 4]; bswap eax; ret; 
0x0008e063: sti; mov eax, dword ptr [esp + 4]; lock dec dword ptr [eax]; jne 0x8e070; xor eax, eax; ret; 
0x0008d6e3: sti; mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 0; mov dword ptr [eax + 4], 0; xor eax, eax; ret; 
0x00084b83: sti; mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x0008e0a3: sti; mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 1; xor eax, eax; ret; 
0x0014df93: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x10]; ret; 
0x00166b73: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x00080eb3: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x001719a3: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x001719c3: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x50]; ret; 
0x00171a53: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x54]; ret; 
0x00171a43: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x001719d3: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x00091b53: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x64]; ret; 
0x001160d3: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x0007b0c3: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x0007b073: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x804; ret; 
0x000d9103: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; ret; 
0x0007be93: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; shr eax, 4; and eax, 1; ret; 
0x0007beb3: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; shr eax, 5; and eax, 1; ret; 
0x00166b53: sti; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 0xc]; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x001719b3: sti; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x00084643: sti; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x00104463: sti; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x00080b73: sti; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x00171963: sti; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x0002df83: sti; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x00080ec3: sti; mov eax, dword ptr [esp + 4]; ret; 
0x0007eef3: sti; mov eax, dword ptr [esp + 4]; test byte ptr [eax], 0x80; jne 0x7ef00; ret; 
0x0007b083: sti; mov eax, dword ptr [esp + 4]; test byte ptr [eax], 4; sete al; movzx eax, al; ret; 
0x0007b0a3: sti; mov eax, dword ptr [esp + 4]; test byte ptr [eax], 8; sete al; movzx eax, al; ret; 
0x00087dd3: sti; mov eax, dword ptr [esp + 8]; cmp dword ptr [esp + 4], eax; sete al; movzx eax, al; ret; 
0x0002ff73: sti; mov eax, dword ptr [esp + 8]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0002ff93: sti; mov eax, dword ptr [esp + 8]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0008d763: sti; mov eax, dword ptr gs:[8]; ret; 
0x000886d3: sti; mov eax, dword ptr gs:[8]; xor edx, edx; lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x0008abdb: sti; mov ecx, 7; mov esi, edx; call dword ptr gs:[0x10]; 
0x0009c0f3: sti; mov edx, 0xffffffff; bsf eax, dword ptr [esp + 4]; cmove eax, edx; add eax, 1; ret; 
0x00166773: sti; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x0003ab53: sti; mov edx, dword ptr [esp + 4]; mov eax, edx; neg eax; cmovs eax, edx; ret; 
0x00084853: sti; mov edx, dword ptr [esp + 8]; mov eax, 0x16; cmp edx, 0x3fff; ja 0x84870; ret; 
0x00123d43: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x136; call dword ptr gs:[0x10]; 
0x00123a53: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x149; call dword ptr gs:[0x10]; 
0x00123b73: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x00118ee3: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x158; call dword ptr gs:[0x10]; 
0x00123ed3: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x17e; call dword ptr gs:[0x10]; 
0x000ddbe3: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x0010c2c3: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x28; call dword ptr gs:[0x10]; 
0x0010af83: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x29; call dword ptr gs:[0x10]; 
0x00118ce3: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x33; call dword ptr gs:[0x10]; 
0x00109923: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x00118d13: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x00123d73: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x56; call dword ptr gs:[0x10]; 
0x00120ff3: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x00119243: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x00123903: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x71; call dword ptr gs:[0x10]; 
0x001192a3: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x73; call dword ptr gs:[0x10]; 
0x00123d13: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x000dd613: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x00123ab3: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x82; call dword ptr gs:[0x10]; 
0x000df5b3: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x84; call dword ptr gs:[0x10]; 
0x0010b1a3: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x00121a73: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x88; call dword ptr gs:[0x10]; 
0x000df663: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x93; call dword ptr gs:[0x10]; 
0x0011c723: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x98; call dword ptr gs:[0x10]; 
0x000fb013: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x000fb063: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x000fb093: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x0010c263: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xa; call dword ptr gs:[0x10]; 
0x0010b173: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xc; call dword ptr gs:[0x10]; 
0x001213f3: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x00121413: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x00123a23: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xfe; call dword ptr gs:[0x10]; 
0x00123ba3: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x00123da3: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x00121813: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x0010b063: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x00123dd3: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x00123e43: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x00123e73: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x00123ea3: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x00037943: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x00109b93: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x27; call dword ptr gs:[0x10]; 
0x000df5e3: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x0010afb3: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x3f; call dword ptr gs:[0x10]; 
0x001184b3: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x0010c1a3: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x53; call dword ptr gs:[0x10]; 
0x00119273: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x0011c4f3: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x00109973: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x001185d3: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x00123933: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x0010abe3: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x0011c6c3: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x0011c6f3: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x000faf83: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x000fafb3: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x00121023: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x00123963: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x00123993: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x00037f93: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000df383: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x00123c73: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x0011f4f3: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x0011f483: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x0011f353: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x00109943: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xf; call dword ptr gs:[0x10]; 
0x0010c133: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 9; call dword ptr gs:[0x10]; 
0x0017eec7: sti; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00180ee7: sti; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, edx; pop ebx; ret; 
0x00188397: sti; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x0008c673: sti; nop; xor eax, eax; ret; 
0x000677fc: sti; or cl, byte ptr [edi]; xchg esp, eax; ret; 
0x000eab06: sti; or dh, byte ptr [edi + ebp - 0x7d]; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00119b8c: sti; out dx, al; call dword ptr [eax - 0x73]; 
0x000a266b: sti; pop ebx; pop esi; sub eax, edi; pop edi; ret; 
0x000de3b3: sti; pop ecx; mov eax, 0xbe; int 0x80; 
0x00196222: sti; pop edi; ret; 
0x000b61f8: sti; push dword ptr [esp + edi*2 - 0x77]; fdiv st(7); ret; 
0x000dd643: sti; push ebx; mov eax, 0x2b; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0013eb33: sti; push ebx; mov eax, dword ptr [esp + 8]; mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; 
0x00086fe1: sti; ret 0xffff; 
0x00115b06: sti; ret 5; 
0x00021493: sti; ret; 
0x0013bf21: sti; sub eax, 0x34890003; and al, 0x8b; inc esp; and al, 0x2c; call eax; 
0x000d37da: sti; sub eax, 0x5fb8; add byte ptr [edi], cl; inc esp; ret; 
0x001575f3: sti; sub esp, 0x18; push 0; call 0x152e60; add esp, 0x1c; ret; 
0x00038293: sti; sub esp, 0x18; push 0; call 0x37b20; add esp, 0x1c; ret; 
0x001567f3: sti; sub esp, 0x18; push 0xa; call 0x152e60; add esp, 0x1c; ret; 
0x00156473: sti; sub esp, 0x18; push 1; call 0x152e60; add esp, 0x1c; ret; 
0x00155bb3: sti; sub esp, 0x18; push 2; call 0x152e60; add esp, 0x1c; ret; 
0x00154bb3: sti; sub esp, 0x18; push 3; call 0x152e60; add esp, 0x1c; ret; 
0x001557f3: sti; sub esp, 0x18; push 4; call 0x152e60; add esp, 0x1c; ret; 
0x001535b3: sti; sub esp, 0x18; push 5; call 0x152e60; add esp, 0x1c; ret; 
0x00155f53: sti; sub esp, 0x18; push 6; call 0x152e60; add esp, 0x1c; ret; 
0x00157e83: sti; sub esp, 0x18; push 7; call 0x152e60; add esp, 0x1c; ret; 
0x00153c53: sti; sub esp, 0x18; push 8; call 0x152e60; add esp, 0x1c; ret; 
0x001578d3: sti; sub esp, 0x18; push 9; call 0x152e60; add esp, 0x1c; ret; 
0x0009b169: sti; xor byte ptr [edi], cl; xchg esp, eax; ret 0xb60f; 
0x00085036: sti; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00080113: sti; xor eax, eax; ret; 
0x000807aa: stosb byte ptr es:[edi], al; add byte ptr [eax], al; add byte ptr [ebx + 0x6a04ec], al; push 0; push ebx; call dword ptr [ebp + 0x2c]; 
0x0015cb99: stosb byte ptr es:[edi], al; add byte ptr [eax], al; add byte ptr [ecx - 0x7cf3dbbc], cl; in al, dx; or byte ptr [ebp - 0x69d3d7d], cl; call dword ptr [eax - 1]; 
0x00034dae: stosb byte ptr es:[edi], al; das; stc; call dword ptr [eax + 0x53]; 
0x0010259a: stosb byte ptr es:[edi], al; dec ecx; stc; call dword ptr [eax - 0x18]; 
0x001315c2: stosb byte ptr es:[edi], al; inc eax; clc; dec dword ptr [ebx - 0x3b7c3bab]; adc byte ptr [ebp - 0x7ce4e98c], cl; ret; 
0x000b4e20: stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000b4707: stosb byte ptr es:[edi], al; pop edi; ret; 
0x0011f6db: stosb byte ptr es:[edi], al; push edx; stc; call dword ptr [eax + 0x57]; 
0x00149e5c: stosb byte ptr es:[edi], al; stc; call dword ptr [eax - 0x18]; 
0x001476a8: stosb byte ptr es:[edi], al; stc; call dword ptr [eax - 0x73]; 
0x00158f09: stosb byte ptr es:[edi], al; std; jmp dword ptr [esi - 0x70]; 
0x000defe8: stosb byte ptr es:[edi], al; sub al, 0xf9; call dword ptr [eax - 0x18]; 
0x00037558: stosb byte ptr es:[edi], al; sub bl, byte ptr [edi]; add byte ptr [ebx - 0x77], dl; ret; 
0x0011c991: stosd dword ptr es:[edi], eax; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x00025441: stosd dword ptr es:[edi], eax; in eax, 0x10; add byte ptr [ebx - 0x72b3db84], cl; xchg eax, esp; push -7; call dword ptr [eax + 0x68]; 
0x00092686: stosd dword ptr es:[edi], eax; inc eax; stc; call dword ptr [eax - 0x73]; 
0x000b4e1c: stosd dword ptr es:[edi], eax; mov ecx, edx; rep stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000b4703: stosd dword ptr es:[edi], eax; mov ecx, edx; rep stosb byte ptr es:[edi], al; pop edi; ret; 
0x0014e894: stosd dword ptr es:[edi], eax; mov edx, 1; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00103ee7: stosd dword ptr es:[edi], eax; pop edi; ret; 
0x000e3da1: stosd dword ptr es:[edi], eax; ret; 
0x00034f80: stosd dword ptr es:[edi], eax; ror byte ptr [ebx - 7], 1; inc dword ptr [ebx - 0x7c72f314]; mov ah, 0x2f; stc; call dword ptr [eax - 0x18]; 
0x0014b2c7: stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x18]; 
0x00149e27: stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x00133dfc: str word ptr [ebx - 0x11380]; jmp dword ptr [ebp + 3]; 
0x00133dfc: str word ptr [ebx - 0x11380]; jmp dword ptr [ebp + 3]; add eax, 0; ret; 
0x00041489: str word ptr [ebx - 0x72d3db84]; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x00047bb7: str word ptr [ecx]; ret 0x9f74; 
0x000c17af: str word ptr [ecx]; ret 0xa074; 
0x0008fc94: sub ah, 0x82; stc; call dword ptr [eax - 0x18]; 
0x0002279f: sub ah, 0xf; add byte ptr [eax], al; ret; 
0x0009462c: sub ah, 1; add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x00171107: sub ah, bh; jmp dword ptr [esi - 0x70]; 
0x0015d8ec: sub ah, ch; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x001645c4: sub ah, dh; cld; call dword ptr [eax - 0x73]; 
0x0005d15a: sub al, 0; add byte ptr [ebx - 0x5ef63], cl; dec dword ptr [ebx - 0x5db73]; inc dword ptr [ecx]; ret; 
0x0004caa4: sub al, 0x24; add esp, 0x1c; ret; 
0x000918d1: sub al, 0x24; call 0x20140; mov dword ptr [esp], edi; call esi; 
0x00159b13: sub al, 0x24; call dword ptr [eax + 0x10]; 
0x0013cb8a: sub al, 0x24; call ebx; 
0x0013c886: sub al, 0x24; call esi; 
0x00171e0a: sub al, 0x24; ret; 
0x0007b666: sub al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x00156a3d: sub al, 0x31; rol byte ptr [eax - 0x7bf0ffc6], 0x2a; add eax, dword ptr [eax]; add byte ptr [ebx - 0x7c72f314], al; les esp, ptr [edx - 7]; call dword ptr [eax - 0x18]; 
0x001164e3: sub al, 0x31; ror byte ptr [ebx - 0x74bbdb8c], 0x5c; and al, 0x40; lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000f778d: sub al, 0x39; sal byte ptr [esi + ecx - 0x77], 1; ret 0xf189; 
0x0013a7ad: sub al, 0x50; push dword ptr [esp + 0x2c]; call 0x139c40; add esp, 0x2c; ret; 
0x0008e1ce: sub al, 0x52; call 0x886f0; add esp, 0x20; add esp, 0xc; ret; 
0x000b6867: sub al, 0x52; lea edx, [esp + 0x34]; push edx; push dword ptr [edi + 8]; call ebx; 
0x0008251c: sub al, 0x52; push ecx; push esi; call eax; 
0x0016138c: sub al, 0x53; mov eax, dword ptr [esp + 0x18]; call eax; 
0x000b70c6: sub al, 0x55; lea eax, [esp + 0x64]; push eax; push esi; call ebx; 
0x00162e13: sub al, 0x55; push esi; push 3; push edi; call dword ptr [eax]; 
0x0015db59: sub al, 0x56; call dword ptr [eax + 0xc]; 
0x0007c4f6: sub al, 0x57; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x0015fa4e: sub al, 0x58; pop edx; push 0; push edi; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x14]; 
0x000b7d55: sub al, 0x5b; pop esi; mov eax, ebp; pop edi; pop ebp; ret; 
0x00021f77: sub al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x00108701: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0x108710; add esp, 0x38; pop ebx; ret; 
0x00108781: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0x108790; add esp, 0x38; pop ebx; ret; 
0x0011957a: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0x119597; add esp, 0x3c; ret; 
0x0011a606: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0x11a615; add esp, 0x38; pop ebx; ret; 
0x0011a68b: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0x11a69a; add esp, 0x38; pop ebx; ret; 
0x0008fddf: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0x8fe24; add esp, 0x38; pop ebx; ret; 
0x00093e8b: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0x93e9a; add esp, 0x38; pop ebx; ret; 
0x000cadd5: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0xcade4; add esp, 0x38; pop ebx; ret; 
0x000cc2f5: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0xcc318; add esp, 0x38; pop ebx; ret; 
0x000d84a6: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0xd84b5; add esp, 0x38; pop ebx; ret; 
0x000d85d6: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0xd85e5; add esp, 0x38; pop ebx; ret; 
0x0011d434: sub al, 0x69; ret; 
0x0012321b: sub al, 0x6a; pushfd; call 0x109360; add esp, 0x20; add esp, 0xc; ret; 
0x00021fd5: sub al, 0x6e; stc; call dword ptr [eax - 0x18]; 
0x00026f5a: sub al, 0x70; stc; call dword ptr [eax - 0x18]; 
0x00079920: sub al, 0x73; cli; jmp dword ptr [esi - 0x70]; 
0x001953d2: sub al, 0x74; sbb eax, dword ptr [ebx - 0x7bf0d207]; ret 0; 
0x000c9c45: sub al, 0x75; pop eax; pop edi; pop esi; ret; 
0x00087b72: sub al, 0x7f; stc; call dword ptr [eax - 0x18]; 
0x000ccfca: sub al, 0x80; add byte ptr ds:[edi], cl; test byte ptr [eax + eax - 0x137d0000], cl; or byte ptr [ebp - 0x6baf47d], cl; call dword ptr [eax + 0x56]; 
0x0009a19f: sub al, 0x80; mov esi, 0x3b58; add byte ptr [esp + ebx - 0x7d], dh; in al, dx; or byte ptr [ebp - 0x6bc737a], cl; call dword ptr [ebx + 0x50]; 
0x0014280c: sub al, 0x81; les ebp, ptr [ebp + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00072b72: sub al, 0x83; in al, dx; add al, 0x57; push dword ptr [esp + 8]; push ebx; call dword ptr [ebp + 0x1c]; 
0x00118fb6: sub al, 0x83; in al, dx; add al, 0x89; ret; 
0x001593aa: sub al, 0x83; in al, dx; or al, 0x8b; inc edx; add al, 0x52; call dword ptr [eax + 0x10]; 
0x00114c70: sub al, 0x83; in al, dx; or al, 0xff; je 0x114c9b; sbb al, 0xe8; ret; 
0x000e87d1: sub al, 0x83; in al, dx; or al, 0xff; je 0xe87fc; cmp al, 0xe8; ret 0x400; 
0x0008017b: sub al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0016ec89: sub al, 0x83; les esi, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x0008240e: sub al, 0x83; les esp, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x000ff6db: sub al, 0x83; ret 0x8301; 
0x000e6f17: sub al, 0x83; ret 0x8801; 
0x0014083b: sub al, 0x83; ret 0x8902; 
0x00125973: sub al, 0x83; ret 0x8b03; 
0x00034c52: sub al, 0x83; ret 0xc702; 
0x000e98da: sub al, 0x83; ret; 
0x0015e4a6: sub al, 0x83; ror byte ptr [eax], 0x89; inc esp; and al, 4; jmp edx; 
0x00033da8: sub al, 0x89; call 0x5d629c0a; ret; 
0x00081d54: sub al, 0x89; call 0x5d677bb6; ret; 
0x000b7bf8: sub al, 0x89; call 0x5d6ada5a; ret; 
0x000f7915: sub al, 0x89; call 0x5d6ed777; ret; 
0x000fa8af: sub al, 0x89; call 0x5d6f0711; ret; 
0x0015b0f6: sub al, 0x89; dec edx; xor al, 0x5b; ret; 
0x0003edf4: sub al, 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x00088c38: sub al, 0x89; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x00033ab5: sub al, 0x89; ret 0x48d; 
0x000ee3a5: sub al, 0x89; ret; 
0x0015e7ad: sub al, 0x8b; add al, byte ptr [ebp - 0x7ce58b40]; in al, dx; or al, 0x83; ret 0x5208; 
0x0011802b: sub al, 0x8b; pop esp; and al, 0x30; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x001180cb: sub al, 0x8b; pop esp; and al, 0x30; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x000da7eb: sub al, 0x8b; pop esp; and al, 0x30; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x000c04c0: sub al, 0x8d; or ah, 0xb9; stc; call dword ptr [eax + 0x53]; 
0x0004086c: sub al, 0x8d; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x00066014: sub al, 0x8d; xchg dword ptr [eax], edi; jns 0x66013; call dword ptr [eax - 0x73]; 
0x0006b08c: sub al, 0x8d; xchg dword ptr [eax], edi; jns 0x6b08b; call dword ptr [eax - 0x73]; 
0x00099a2e: sub al, 0x8d; xchg dword ptr [ebx + edx*4 - 7], ecx; dec dword ptr [ebp - 0x6bf3a69]; call dword ptr [eax - 0x73]; 
0x000bfd74: sub al, 0x8d; xchg dword ptr [ecx + edi*4 - 7], ebx; call dword ptr [eax + 0x56]; 
0x0004151d: sub al, 0x8d; xchg dword ptr [esi + esi*2 - 7], ebx; call dword ptr [eax - 0x73]; 
0x000b6730: sub al, 0x95; stc; call dword ptr [eax - 0x18]; 
0x00176490: sub al, 0x9b; stc; call dword ptr [eax - 0x73]; 
0x0012e5d2: sub al, 0xa5; stc; call dword ptr [eax - 0x73]; 
0x00198283: sub al, 0xa8; pcmpeqw mm3, qword ptr [eax]; test dl, 0xf; jne 0x198320; lea eax, [ecx + 4]; ret; 
0x00140ccc: sub al, 0xa8; stc; call dword ptr [eax - 0x18]; 
0x0008fe82: sub al, 0xb8; add eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 0xc; ret; 
0x00108ecb: sub al, 0xb8; sub al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00198fa8: sub al, 0xc1; call 0x248e18cc; xor byte ptr [ecx + 0x24748bf1], cl; or al, 9; ret; 
0x001343a7: sub al, 0xc7; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0x1334a], cl; jmp dword ptr [ebp - 0x5f]; 
0x00093b12: sub al, 0xc7; inc esp; and al, 0x34; add al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00048bc6: sub al, 0xe8; add al, 0; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000932c8: sub al, 0xe8; add byte ptr [0xc4830000], 0x2c; ret; 
0x0003c90e: sub al, 0xe8; cld; push es; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0003c8d0: sub al, 0xe8; cmp al, byte ptr [edi]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000b74ee: sub al, 0xe8; fcom qword ptr [ecx]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000b73b0: sub al, 0xe8; fiadd dword ptr [edi]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x001044d0: sub al, 0xe8; fimul dword ptr [ecx]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0014fb1b: sub al, 0xe8; jmp ecx; 
0x000d2850: sub al, 0xe8; lcall 0x2cc4, 0x8300001f; ret; 
0x00178110: sub al, 0xe8; lcall 0x2cc4, 0x83fff8cd; ret; 
0x000d2890: sub al, 0xe8; ljmp 0x2cc4:0x83000045; ret; 
0x00049ee0: sub al, 0xe8; ljmp 0x2cc4:0x83ffffec; ret; 
0x00104ef0: sub al, 0xe8; ljmp 0x2cc4:0x83fffff5; ret; 
0x00057b0a: sub al, 0xe8; mov al, 0xc1; add dword ptr [eax], eax; add esp, 0x2c; ret; 
0x0012cc8a: sub al, 0xe8; mov al, byte ptr [0x8dfffffe]; xchg edi, esp; push esi; stc; call dword ptr [ebp - 1]; 
0x0003c88e: sub al, 0xe8; mov word ptr [ecx], es; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000b736e: sub al, 0xe8; or al, 3; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x001044a0: sub al, 0xe8; or cl, byte ptr [edx]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000b73ee: sub al, 0xe8; pushfd; pop es; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0017a518: sub al, 0xe8; ret 0xfb9a; 
0x0003c98e: sub al, 0xe8; sbb al, 0xc; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000b74b0: sub al, 0xe8; sbb dl, byte ptr [edx]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x00132781: sub al, 0xe8; sub dword ptr [0xc483fffd], edx; and byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0013cca6: sub al, 0xf1; call dword ptr [eax - 0x73]; 
0x0010cd06: sub al, 0xf2; dec dword ptr [ebp - 0x65fc37d]; call dword ptr [eax - 0x73]; 
0x0011e7d8: sub al, 0xf5; dec dword ptr [ebx - 0xdb7d]; inc dword ptr [ebx + 0x8b10c4]; test eax, eax; je 0x11e830; call eax; 
0x000265ed: sub al, 0xf6; ret 0x7501; 
0x0002c418: sub al, 0xf9; call dword ptr [eax + 0x56]; 
0x0002878a: sub al, 0xf9; call dword ptr [eax - 0x18]; 
0x0002c19b: sub al, 0xf9; call dword ptr [eax - 1]; 
0x0002c17d: sub al, 0xf9; call dword ptr [edx + 0x50]; 
0x0002ef37: sub al, 0xf9; dec dword ptr [ecx - 0xdb6b]; call dword ptr [eax - 0x39]; 
0x00029cfd: sub al, 0xf9; jmp ptr [eax - 0x13]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax + esi*2 - 7], dl; call dword ptr [eax - 0x18]; 
0x00026f2c: sub al, 0xf9; jmp ptr [eax - 0x13]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + esi*2 - 7], edx; call dword ptr [eax - 0x18]; 
0x0012189f: sub al, 0xf; mov dh, 0xc0; neg eax; ret; 
0x000f831e: sub al, 0xf; mov dh, 0xc0; ret; 
0x00041aff: sub al, 0xf; xchg ebp, eax; ret 0xb60f; 
0x001475b8: sub al, 0xf; xchg ebp, eax; ret 0xd184; 
0x000449ec: sub al, 0xf; xchg ebp, eax; ret 0xd689; 
0x0002c389: sub al, 0xf; xchg esp, eax; ret 0xca08; 
0x0013b195: sub al, 0xf; xchg esp, eax; ret; 
0x00150d54: sub al, 0xfe; jmp dword ptr [esi - 0x70]; 
0x00104eec: sub al, 0xff; je 0x104f14; sub al, 0xe8; ljmp 0x2cc4:0x83fffff5; ret; 
0x0017810c: sub al, 0xff; je 0x178134; sub al, 0xe8; lcall 0x2cc4, 0x83fff8cd; ret; 
0x0017a510: sub al, 0xff; je 0x17a538; sub al, 0xff; je 0x17a53c; sub al, 0xe8; ret 0xfb9a; 
0x0017a514: sub al, 0xff; je 0x17a53c; sub al, 0xe8; ret 0xfb9a; 
0x00049edc: sub al, 0xff; je 0x49f04; sub al, 0xe8; ljmp 0x2cc4:0x83ffffec; ret; 
0x000821cc: sub al, 0xff; je 0x821f4; cmp al, 0x51; push dword ptr [esp + 0x3c]; call eax; 
0x000932c4: sub al, 0xff; je 0x932ec; sub al, 0xe8; add byte ptr [0xc4830000], 0x2c; ret; 
0x000d284c: sub al, 0xff; je 0xd2874; sub al, 0xe8; lcall 0x2cc4, 0x8300001f; ret; 
0x000d288c: sub al, 0xff; je 0xd28b4; sub al, 0xe8; ljmp 0x2cc4:0x83000045; ret; 
0x00108ecd: sub al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00123192: sub al, 1; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x0003831c: sub al, 1; add byte ptr [eax], al; ret; 
0x0015b3d5: sub al, 1; ret 0x5689; 
0x00087671: sub al, 2; add byte ptr [eax], al; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x00086873: sub al, 2; add byte ptr [eax], al; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x00027998: sub al, 3; add byte ptr [eax], al; add cl, ch; ret 0xfffd; 
0x000489b0: sub al, 4; add byte ptr [eax], al; ret; 
0x0013ebf1: sub al, byte ptr [ebx + 0x5e5b24c4]; ret; 
0x0011658e: sub al, byte ptr [ebx + 0x5e5b30c4]; pop edi; ret; 
0x00124a5e: sub al, byte ptr [ebx - 0x2776df3c]; pop ebx; pop esi; pop edi; ret; 
0x0010bc2c: sub al, byte ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000dc5a5: sub al, byte ptr [esi - 7]; call dword ptr [ecx - 1]; 
0x00169f4b: sub al, ch; jmp dword ptr [ecx - 0x15]; 
0x0003a698: sub al, ch; ret 0xfffe; 
0x000ed585: sub al, ch; xchg ebp, eax; ret; 
0x0011d85f: sub al, dh; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000d12a7: sub bh, 0xff; call dword ptr [edi - 0x18]; 
0x00109342: sub bh, bh; je 0x10936a; sub byte ptr [edx - 0x64], ch; call 0x109360; add esp, 0x2c; ret; 
0x00031ad0: sub bh, bh; je 0x31af8; sub byte ptr [edx], ch; call 0x31a60; add esp, 0x2c; ret; 
0x00077b80: sub bh, bh; je 0x77ba8; sub byte ptr [ebx + 0x56182474], cl; call dword ptr [edi + 0x40]; 
0x0014116a: sub bh, bh; jmp dword ptr [esi - 0x70]; 
0x0016e7dd: sub bh, bh; jne 0x16e791; call eax; 
0x0015859b: sub bh, bh; jo 0x1585b3; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x0008fef4: sub bh, byte ptr [eax + 3]; add esp, 0xc; ret; 
0x0009d48e: sub bh, byte ptr [ecx]; sal byte ptr [ebp - 0xb], 1; mov eax, ecx; ret; 
0x00160f72: sub bh, ch; jmp dword ptr [esi - 0x70]; 
0x000cf083: sub bh, cl; call dword ptr [eax + 0x53]; 
0x000cd509: sub bh, cl; call dword ptr [eax + 0x56]; 
0x0013b440: sub bh, cl; call dword ptr [eax + 0x57]; 
0x0002378a: sub bh, cl; call dword ptr [eax - 0x18]; 
0x0003175b: sub bh, cl; call dword ptr [eax - 0x73]; 
0x00024130: sub bh, cl; call dword ptr [edx + 0x50]; 
0x001322b9: sub bh, cl; dec dword ptr [ecx - 0x7872af05]; jno 0x132302; stc; call dword ptr [eax - 0x18]; 
0x00023b80: sub bh, cl; jmp ptr [eax - 0x52]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; or dword ptr [edi + 0x2a], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00023baa: sub bh, cl; jmp ptr [eax - 0x58]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; add dword ptr [edx + 0x2a], -7; call dword ptr [eax - 0x18]; 
0x00171ec3: sub bl, 0xff; jmp ptr [edx]; push dword ptr [esp + 0x1c]; call 0x3a730; add esp, 0x1c; ret; 
0x000e80df: sub bl, byte ptr [ebp - 0x387efff8]; sbb eax, 0x8900141f; ret; 
0x00037559: sub bl, byte ptr [edi]; add byte ptr [ebx - 0x77], dl; ret; 
0x0015df79: sub bl, ch; or al, 0x8d; je 0x15dfa5; add byte ptr [ecx], ch; ret; 
0x00162226: sub bl, dh; call dword ptr [edx - 0x75]; 
0x00121eaa: sub byte ptr [eax + 0x156], bh; call dword ptr gs:[0x10]; 
0x0003bc6a: sub byte ptr [eax + 0x163], bh; call dword ptr gs:[0x10]; 
0x00072ddb: sub byte ptr [eax + 0x19], 0; add byte ptr [ebx + 0xb7f01f8], al; ret; 
0x00048069: sub byte ptr [eax + 0x25], bh; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x000f752c: sub byte ptr [eax + 0x480f003b], al; ror byte ptr [eax - 0x7cefdbac], 1; rol dword ptr [ecx], 0x83; ret; 
0x0010f37a: sub byte ptr [eax + 0x4a], 0xf9; call dword ptr [eax - 0x18]; 
0x0007c801: sub byte ptr [eax + 0x56], dl; call dword ptr [edi + 0x48]; 
0x0015a37e: sub byte ptr [eax + 0x57], dl; call dword ptr [ecx + 0x18]; 
0x00124e60: sub byte ptr [eax + 0x66], bh; call dword ptr gs:[0x10]; 
0x000415b9: sub byte ptr [eax + 0x76], 0xf9; call dword ptr [eax - 0x73]; 
0x001212ee: sub byte ptr [eax + 0x78], bh; mov dword ptr [ecx], ebx; int 0x80; 
0x0011c5aa: sub byte ptr [eax + 0x90], bh; call dword ptr gs:[0x10]; 
0x001172ba: sub byte ptr [eax + 0x91], bh; call dword ptr gs:[0x10]; 
0x0011738a: sub byte ptr [eax + 0x92], bh; call dword ptr gs:[0x10]; 
0x001116fa: sub byte ptr [eax + 0xa8], bh; call dword ptr gs:[0x10]; 
0x000916ad: sub byte ptr [eax + 0xaf], bh; call dword ptr gs:[0x10]; 
0x0010a9d5: sub byte ptr [eax + 0xdd], bh; call dword ptr gs:[0x10]; 
0x0008505a: sub byte ptr [eax + 0xf0], bh; mov edx, 0x7fffffff; xor esi, esi; call dword ptr gs:[0x10]; 
0x0011f5d1: sub byte ptr [eax + 3], 0; add byte ptr [ebx - 0x76f7dbb4], cl; add dword ptr [eax + 1], edi; ret; 
0x000900b6: sub byte ptr [eax + 3], bh; add esp, 0xc; ret; 
0x0010a1ca: sub byte ptr [eax + 3], bh; call dword ptr gs:[0x10]; 
0x0010a29a: sub byte ptr [eax + 4], bh; call dword ptr gs:[0x10]; 
0x0011fb6e: sub byte ptr [eax + 4], bh; pop ebx; pop esi; pop edi; ret; 
0x00140ccb: sub byte ptr [eax + ebp*4], 0xf9; call dword ptr [eax - 0x18]; 
0x000b644a: sub byte ptr [eax - 0x73], dl; inc esp; and al, 0x34; push eax; push dword ptr [esi + 8]; call ebx; 
0x0016f00a: sub byte ptr [eax - 0x73], dl; xchg dword ptr [eax + 0x4d], esi; hlt; call dword ptr [eax - 0x73]; 
0x00157016: sub byte ptr [eax - 0x7d], dl; rcr byte ptr [eax], 0x50; call 0x156df0; add esp, 0x2c; ret; 
0x0008834f: sub byte ptr [eax], 0x3a; add byte ptr [eax], al; ret; 
0x0008da68: sub byte ptr [eax], 0x3a; add byte ptr [eax], al; xor eax, eax; ret; 
0x0013a682: sub byte ptr [eax], 0xa6; stc; call dword ptr [eax + 0x55]; 
0x00131af8: sub byte ptr [eax], 0xf5; dec dword ptr [ebx + 0x18499]; add dh, dh; ret; 
0x00080cb1: sub byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0007f46b: sub byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x00028ac6: sub byte ptr [eax], al; add byte ptr [eax], al; add dh, dh; ret 0x7501; 
0x0010c2cb: sub byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e8273: sub byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00124f37: sub byte ptr [eax], cl; add byte ptr [eax], al; add byte ptr [eax + 0x66], bh; mov ebx, 0xe; call dword ptr gs:[0x10]; 
0x000c9c3a: sub byte ptr [ebp + 0x63], dh; pop edi; pop esi; ret; 
0x0013cc2b: sub byte ptr [ebp - 0x658f379], cl; call dword ptr [eax - 0x73]; 
0x00085214: sub byte ptr [ebp - 0x6817780], cl; call dword ptr [eax - 0x18]; 
0x00025929: sub byte ptr [ebp - 0x6955f79], cl; call dword ptr [eax + 0x68]; 
0x0002586b: sub byte ptr [ebp - 0x6955f79], cl; call dword ptr [eax - 0x73]; 
0x00153ff1: sub byte ptr [ebp - 0x69e3180], cl; call dword ptr [eax - 1]; 
0x000da036: sub byte ptr [ebp - 0x6ba6179], cl; call dword ptr [eax + 0x53]; 
0x000949bc: sub byte ptr [ebp - 0x6bef672], cl; jmp dword ptr [ebp - 0x5f]; 
0x0002fdb6: sub byte ptr [ebx + 0x2009084], cl; add byte ptr [eax], al; ret; 
0x00115a77: sub byte ptr [ebx + 0x337409f9], al; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x001636a8: sub byte ptr [ebx + 0x50510850], cl; call dword ptr [edx + 0xc]; 
0x0011d38e: sub byte ptr [ebx + 0x548b20c4], al; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x11d3a3; add esp, 0x1c; ret; 
0x00077b84: sub byte ptr [ebx + 0x56182474], cl; call dword ptr [edi + 0x40]; 
0x00080217: sub byte ptr [ebx + 0x565308ec], al; call dword ptr [edi + 0x18]; 
0x000762b5: sub byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x000da78e: sub byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x000dce8c: sub byte ptr [ebx + 0x5e5b4cc4], al; pop edi; pop ebp; ret; 
0x000264ab: sub byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; jmp eax; 
0x000db3e4: sub byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; ret; 
0x001155c9: sub byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00119576: sub byte ptr [ebx + 0x652c2454], cl; sub edx, dword ptr [0x14]; jne 0x119597; add esp, 0x3c; ret; 
0x0015db8c: sub byte ptr [ebx + 0x8b08ec], al; mov edx, dword ptr [eax + 0x20]; push esi; push eax; call dword ptr [edx + 4]; 
0x0015dcdc: sub byte ptr [ebx + 0x8b0cec], al; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x00124827: sub byte ptr [ebx + 0xf], bh; mov dword ptr [esp + 0x30], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000da610: sub byte ptr [ebx + 0xfc08506], cl; dec esi; ret 0x4489; 
0x00165572: sub byte ptr [ebx + ebx - 0x7d], dh; in al, dx; add al, 0x6a; call dword ptr [ebp + 0x56]; 
0x00165572: sub byte ptr [ebx + ebx - 0x7d], dh; in al, dx; add al, 0x6a; call dword ptr [ebp + 0x56]; call edi; 
0x00094593: sub byte ptr [ebx + edi], 0; ret; 
0x0004ad45: sub byte ptr [ebx - 0x1e76e714], al; mov ebx, 0x3001; mov eax, 0x180; call dword ptr gs:[0x10]; 
0x00135c73: sub byte ptr [ebx - 0x38dfdb84], cl; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0x13341], cl; jmp dword ptr [ebp - 0x5f]; 
0x00082026: sub byte ptr [ebx - 0x3b7ce3c0], cl; adc al, 0x5b; pop esi; jmp eax; 
0x0010e9c8: sub byte ptr [ebx - 0x6bf0fc07], al; ret; 
0x00094216: sub byte ptr [ebx - 0x72c3db94], cl; pop dword ptr [eax - 0x23]; clc; jmp dword ptr [ebp - 1]; 
0x00094d34: sub byte ptr [ebx - 0x72cbdbbc], cl; and byte ptr [ecx], 0x41; stc; call dword ptr [eax - 0x18]; 
0x000b711f: sub byte ptr [ebx - 0x72e3db8c], cl; xchg ah, ah; xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x00117517: sub byte ptr [ebx - 0x74cfdba4], cl; dec esp; and al, 0x34; mov eax, 0x14d; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001176e7: sub byte ptr [ebx - 0x74cfdba4], cl; dec esp; and al, 0x34; mov eax, 0x14e; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00103cd7: sub byte ptr [ebx - 0x74cfdba4], cl; dec esp; and al, 0x34; mov eax, 0xb4; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00103db7: sub byte ptr [ebx - 0x74cfdba4], cl; dec esp; and al, 0x34; mov eax, 0xb5; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001246d8: sub byte ptr [ebx - 0x769bdbbc], cl; inc esp; and al, 0x2c; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000f548f: sub byte ptr [ebx - 0x76f7db84], cl; ret 0xf889; 
0x000bf460: sub byte ptr [ebx - 0x7ac3dbbc], cl; ror byte ptr [edi], 0x84; ret; 
0x00034686: sub byte ptr [ebx - 0x7caaf33c], al; ret 0xff03; 
0x00140837: sub byte ptr [ebx - 0x7cd3db84], cl; ret 0x8902; 
0x000caf24: sub byte ptr [ebx], ah; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0006c1d7: sub byte ptr [ecx + 0x208d8bc2], cl; idiv edi; dec dword ptr [ebx - 0x8e77b]; call dword ptr [ebx - 0x18]; 
0x000e98d4: sub byte ptr [ecx + 0x246c8be9], cl; sub al, 0x83; ret; 
0x0009b0dd: sub byte ptr [ecx + 0x390c245c], cl; ret 0x840f; 
0x00161fa7: sub byte ptr [ecx + 0x6a], dl; add al, 0x52; call dword ptr [eax + 0x14]; 
0x0009bf68: sub byte ptr [ecx - 0x1a7f0018], 2; lea edx, [edx - 0x95fe0]; cmovne eax, edx; ret; 
0x00096e96: sub byte ptr [ecx - 0x72ebdb84], cl; inc edx; jmp dword ptr [ecx]; 
0x001636a4: sub byte ptr [ecx - 0x74d7dbac], cl; push eax; or byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x0019e149: sub byte ptr [ecx - 0x76afdbac], cl; ret 0xb489; 
0x00078037: sub byte ptr [ecx - 0x76bbdbbc], cl; ret; 
0x0011636d: sub byte ptr [ecx - 0x76f3dbbc], cl; clc; call dword ptr gs:[0x10]; 
0x00119021: sub byte ptr [ecx - 0x76f3dbbc], cl; ret 0x7c8d; 
0x000f010b: sub byte ptr [ecx - 0x7cd7dba4], cl; ret 0x3904; 
0x00066083: sub byte ptr [ecx - 0x8d36b], cl; dec dword ptr [ecx - 0x8b743]; dec dword ptr [ecx - 0x8c37b]; jmp dword ptr [ebp - 0x5f]; 
0x00109bd2: sub byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00196644: sub byte ptr [ecx], al; add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x0009a45b: sub byte ptr [ecx], al; je 0x9a518; sub esp, 8; push esi; push dword ptr [ebx + 0x24]; call eax; 
0x0009a5f8: sub byte ptr [ecx], al; jne 0x9a5d0; sub esp, 0xc; push eax; call edx; 
0x00049838: sub byte ptr [ecx], al; ret; 
0x000c9c37: sub byte ptr [ecx], bh; dec edi; sub byte ptr [ebp + 0x63], dh; pop edi; pop esi; ret; 
0x000498b2: sub byte ptr [ecx], bh; fmul dword ptr [edi]; or dword ptr [eax - 0xb], 0xffffffff; jmp ptr [ecx]; ret; 
0x0017497e: sub byte ptr [ecx], cl; rcr byte ptr [ebx + 0xf], 1; mov dh, 0xc0; neg eax; ret; 
0x0019e59b: sub byte ptr [ecx], cl; ret 0x448b; 
0x00091184: sub byte ptr [edi + 0x40], 0xf9; call dword ptr [eax - 0x18]; 
0x000c9c77: sub byte ptr [edi + 0x5e], bl; ret; 
0x000ced28: sub byte ptr [edi + ecx*4 + 2], bl; jbe 0xced38; mov eax, edx; ret; 
0x00024c94: sub byte ptr [edi - 7], ch; call dword ptr [eax - 0x18]; 
0x0019683c: sub byte ptr [edi], 1; add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x0006d446: sub byte ptr [edi], al; add byte ptr [eax], al; add cl, ch; ret 0xffe5; 
0x00093f61: sub byte ptr [edi], cl; inc esp; idiv dword ptr [eax + 0x104]; call dword ptr gs:[0x10]; 
0x000f63b4: sub byte ptr [edi], cl; mov dh, 0x46; add al, 0x89; ret 0xe283; 
0x0019e271: sub byte ptr [edi], cl; test byte ptr [esi - 0x76fffff0], dl; ret 0xea83; 
0x0007ceaa: sub byte ptr [edx + 0x56], dl; call dword ptr [eax + 0x48]; 
0x00156452: sub byte ptr [edx + 0x6a50fff9], 1; call 0x152d90; add esp, 0x1c; ret; 
0x00037368: sub byte ptr [edx + 1], ch; push dword ptr [esp + 8]; call 0x372d0; pop ecx; pop edx; ret; 
0x00109346: sub byte ptr [edx - 0x64], ch; call 0x109360; add esp, 0x2c; ret; 
0x00078c80: sub byte ptr [edx - 0x75], dl; inc esp; and al, 0x34; push eax; call ebx; 
0x00057b04: sub byte ptr [edx - 1], ch; push dword ptr [esp + 0x2c]; call 0x73cc0; add esp, 0x2c; ret; 
0x00088350: sub byte ptr [edx], bh; add byte ptr [eax], al; ret; 
0x0008da69: sub byte ptr [edx], bh; add byte ptr [eax], al; xor eax, eax; ret; 
0x00031ad4: sub byte ptr [edx], ch; call 0x31a60; add esp, 0x2c; ret; 
0x0008e11c: sub byte ptr [edx], ch; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x886f0; add esp, 0x2c; ret; 
0x00112740: sub byte ptr [esi + 0x5f], bl; ret; 
0x000394e3: sub byte ptr [esi - 0x75], dl; inc esp; and al, 0x20; call eax; 
0x0013cfb8: sub byte ptr [esi], 0xf1; call dword ptr [eax - 0x18]; 
0x000511be: sub byte ptr [esi], cl; add byte ptr [ebx - 0x365343], cl; dec dword ptr [ebp - 0x6894f79]; call dword ptr [eax - 0x73]; 
0x0016e860: sub ch, bl; jmp dword ptr [esi - 0x70]; 
0x00036048: sub ch, bl; sbb byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x00069933: sub ch, byte ptr [ecx]; ret; 
0x0009c389: sub ch, dh; dec dword ptr [ebx + 0x18499]; add dh, dh; ret; 
0x001578b2: sub cl, 0x62; stc; call dword ptr [eax + 0x6a]; 
0x001578b2: sub cl, 0x62; stc; call dword ptr [eax + 0x6a]; or eax, ebp; sal dword ptr [edi + edi*8 + 0x1cc483ff], 1; ret; 
0x001626b4: sub cl, bh; call dword ptr [edi + 0x52]; 
0x0016560d: sub cl, bh; dec dword ptr [ebx + 0x52530446]; push esi; call dword ptr [eax + 0xc]; 
0x0011bfed: sub cl, byte ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x000b6a8d: sub cl, byte ptr [ebx - 0x72e3db8c]; xchg al, cl; xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x0003a4fd: sub cl, byte ptr [ecx + 0x5f5e5bd8]; ret; 
0x0006076c: sub cl, byte ptr [edi]; xchg esp, eax; ret; 
0x0009a2e8: sub dh, bh; mov dword ptr [ebx + 0x18], ebp; mov dword ptr [ebx + 0x20], esi; mov dword ptr [ebx], eax; push eax; call ecx; 
0x001622a3: sub dh, bl; call dword ptr [edx - 0x73]; 
0x00041533: sub dh, byte ptr [eax]; stc; call dword ptr [eax - 0x18]; 
0x000e5a6c: sub dh, byte ptr [esp + eax + 0x3c]; aas; jne 0xe5a89; mov eax, 1; ret; 
0x0011e91a: sub dh, ch; dec dword ptr [ebx - 0xdb7d]; inc dword ptr [ebx + 0x8b10c4]; test eax, eax; je 0x11e9c8; call eax; 
0x0009a4e4: sub dh, dh; ret 0x7502; 
0x00104ec4: sub dh, dh; ret 0x8d01; 
0x0010ebf2: sub dh, dh; ret; 
0x0004b664: sub dl, byte ptr [eax - 0xa]; ret 0x7501; 
0x0008e7f6: sub dl, byte ptr [esi - 0x18]; ret; 
0x00140c69: sub dword ptr [0x878dffff], 0x78; test al, 0xf9; call dword ptr [eax - 0x73]; 
0x00132783: sub dword ptr [0xc483fffd], edx; and byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000eb8fc: sub dword ptr [eax + 0x48], -7; call dword ptr [eax + 0x55]; 
0x0011f1fc: sub dword ptr [eax + 0x4a], -7; call ptr [ebx + 0x5e]; ret; 
0x000ce382: sub dword ptr [eax + 0x5000003d], -0x18; ret; 
0x00174403: sub dword ptr [eax - 0x10], esi; jmp dword ptr [esi - 0x70]; 
0x0003ebe1: sub dword ptr [eax - 0x46], -7; jmp dword ptr [ebp - 0x75]; 
0x000ff810: sub dword ptr [eax - 0x62], -7; call dword ptr [eax - 0x18]; 
0x000ccde6: sub dword ptr [eax - 0x76000001], 0x10; mov dword ptr [eax + 4], esi; pop ebx; pop esi; pop edi; ret; 
0x0014d922: sub dword ptr [eax - 7], esp; call dword ptr [eax - 0x18]; 
0x00141169: sub dword ptr [eax], -1; jmp dword ptr [esi - 0x70]; 
0x00024c93: sub dword ptr [eax], 0x6f; stc; call dword ptr [eax - 0x18]; 
0x0010af8b: sub dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0013fb36: sub dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00152d31: sub dword ptr [ebp - 0x6af0fbb6], ecx; ret; 
0x00041cd9: sub dword ptr [ebx + 0x3156001e], eax; not byte ptr [ebx - 0x77]; ret; 
0x00081a89: sub dword ptr [ebx + 0x3e], -7; call dword ptr [ecx + 0x52]; 
0x00074ca1: sub dword ptr [ebx + 0x575504ec], eax; push ebx; mov eax, dword ptr [esp + 0x10]; call dword ptr [eax + 0x1c]; 
0x000d7fe1: sub dword ptr [ebx + 0x5e5b0cc4], eax; pop edi; pop ebp; ret; 
0x00146d76: sub dword ptr [ebx + 0x5e5b1cc4], eax; pop edi; pop ebp; ret; 
0x001125e9: sub dword ptr [ebx + 0x5e5b30c4], eax; pop edi; ret; 
0x00116bff: sub dword ptr [ebx + 0x5e5b54c4], eax; ret; 
0x0008e22c: sub dword ptr [ebx + 0xc], 1; pop ebx; pop esi; pop edi; ret; 
0x0003d710: sub dword ptr [ebx + 2], 0; add byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; aad 1; ret 0xf089; 
0x000cbc71: sub dword ptr [ebx - 0x3776cf3c], eax; pop ebx; pop esi; pop edi; ret; 
0x00121e6e: sub dword ptr [ebx - 0x74dfdba4], ecx; dec esp; and al, 0x24; mov eax, 0x156; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0003bc2e: sub dword ptr [ebx - 0x74dfdba4], ecx; dec esp; and al, 0x24; mov eax, 0x163; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011c56e: sub dword ptr [ebx - 0x74dfdba4], ecx; dec esp; and al, 0x24; mov eax, 0x90; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011727e: sub dword ptr [ebx - 0x74dfdba4], ecx; dec esp; and al, 0x24; mov eax, 0x91; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011734e: sub dword ptr [ebx - 0x74dfdba4], ecx; dec esp; and al, 0x24; mov eax, 0x92; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001116be: sub dword ptr [ebx - 0x74dfdba4], ecx; dec esp; and al, 0x24; mov eax, 0xa8; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0010a18e: sub dword ptr [ebx - 0x74dfdba4], ecx; dec esp; and al, 0x24; mov eax, 3; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0010a25e: sub dword ptr [ebx - 0x74dfdba4], ecx; dec esp; and al, 0x24; mov eax, 4; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001933e0: sub dword ptr [ebx - 0x7cfffffe], -0x13; adc byte ptr [edi], cl; xchg byte ptr [ebx - 0x7cfffffe], al; ret 0x8310; 
0x0013ead1: sub dword ptr [ebx - 0x937b], ecx; jmp dword ptr [ebp - 0x75]; 
0x0011ae6b: sub dword ptr [ebx], 0x4b; stc; call dword ptr [eax - 0x18]; 
0x00147e56: sub dword ptr [ebx], 0x5f; stc; call dword ptr [eax - 0x18]; 
0x000eb984: sub dword ptr [ecx + 0x32], -7; call dword ptr [edx + 0x52]; 
0x0013571b: sub dword ptr [ecx + 0x59], -7; call dword ptr [eax - 0x18]; 
0x00137e33: sub dword ptr [ecx], 0x5a; stc; call dword ptr [eax - 0x18]; 
0x00137e33: sub dword ptr [ecx], 0x5a; stc; call dword ptr [eax - 0x18]; ret 0x178; 
0x00160127: sub dword ptr [ecx], 0x6afff964; add eax, 0xcc818d50; jb 0x16012d; call dword ptr [eax - 0x18]; 
0x00109387: sub dword ptr [ecx], eax; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x000f5b0b: sub dword ptr [ecx], edi; ret 0xd075; 
0x000908b9: sub dword ptr [ecx], esi; shr bl, cl; or eax, 0x438b9066; or al, 0x89; fiadd dword ptr [ebp - 0x76e58b40]; ret; 
0x00086ea7: sub dword ptr [ecx], esp; ret; 
0x000eb727: sub dword ptr [edi + 0x48], -7; call dword ptr [eax + 0x55]; 
0x00087c52: sub dword ptr [edi], edi; stc; call dword ptr [eax - 0x18]; 
0x0007a7d2: sub dword ptr [edx + 0x47], -7; call dword ptr [eax - 0x18]; 
0x001511f3: sub dword ptr [edx - 0x373f0000], 9; xor eax, dword ptr gs:[0x18]; push eax; call edx; 
0x000807a9: sub dword ptr [edx - 0x7d000000], -0x14; add al, 0x6a; add byte ptr [edx], ch; push ebx; call dword ptr [ebp + 0x2c]; 
0x00137e34: sub dword ptr [edx - 7], ebx; call dword ptr [eax - 0x18]; 
0x00137e34: sub dword ptr [edx - 7], ebx; call dword ptr [eax - 0x18]; ret 0x178; 
0x001088a3: sub dword ptr [edx], eax; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x000eba15: sub dword ptr [esi + 0x48], -7; call dword ptr [eax + 0x55]; 
0x001645e0: sub eax, -0x4f; stc; call dword ptr [eax - 0x73]; 
0x000e7f12: sub eax, -0x66; stc; call dword ptr [eax - 0x73]; 
0x00163131: sub eax, -0x80; pop esi; pop edi; ret; 
0x001339e9: sub eax, -1; jmp dword ptr [esi - 0x70]; 
0x000b397b: sub eax, 0x10; pop edi; ret; 
0x001a0af3: sub eax, 0x1668fff9; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; or dword ptr [ebx + 0x2d], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0013bf22: sub eax, 0x34890003; and al, 0x8b; inc esp; and al, 0x2c; call eax; 
0x00102852: sub eax, 0x49; stc; call dword ptr [eax - 0x73]; 
0x00120e62: sub eax, 0x5b08c483; ret; 
0x0015fe32: sub eax, 0x5bf4658d; pop esi; pop edi; pop ebp; ret; 
0x000d37db: sub eax, 0x5fb8; add byte ptr [edi], cl; inc esp; ret; 
0x000c45c8: sub eax, 0x81000ad8; ret; 
0x001a0dc8: sub eax, 0x81fffd10; ret; 
0x0007e96a: sub eax, 0x83d8458b; in al, dx; or byte ptr [edx - 1], ch; push dword ptr [eax]; mov eax, dword ptr [ebp - 0x2c]; call dword ptr [eax + 0xc]; 
0x00140c6a: sub eax, 0x878dffff; js 0x140c19; stc; call dword ptr [eax - 0x73]; 
0x000811f7: sub eax, 0x89000001; ret 0x468b; 
0x0003a6d2: sub eax, 0x8904c483; fcomp dword ptr [ebx + 0x5e]; ret; 
0x001170f1: sub eax, 0x8b000000; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x0005f241: sub eax, 0x8b000002; test dword ptr [edx + edi*8 - 1], esp; jmp dword ptr [ebp - 0x75]; 
0x000982a6: sub eax, 0x8b000013; je 0x982d1; sbb byte ptr [ebp - 0x66c7b7a], cl; dec dword ptr [ebp - 0x6bf3a6a]; call dword ptr [eax - 0x73]; 
0x00117212: sub eax, 0x8b530011; dec esp; and al, 0x10; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012f10f: sub eax, 0x940fd789; ret 0x8966; 
0x00105c46: sub eax, 0xc4830000; adc byte ptr [ebp - 0x477bf040], al; add byte ptr [eax], al; add byte ptr [ebx - 0x19f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000516da: sub eax, 0xf901c8d; dec edi; ret; 
0x00052fe8: sub eax, 0xfff8c7e9; jmp dword ptr [esi - 0x70]; 
0x001482b1: sub eax, 1; add esp, 4; pop ebx; pop esi; ret; 
0x00140482: sub eax, 1; mov byte ptr [edx + 1], al; mov eax, 2; ret; 
0x0002c0c8: sub eax, 1; mov dword ptr [ecx + 4], eax; add esp, 8; pop ebx; ret; 
0x00162766: sub eax, 1; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x16277a; add esp, 0x1c; ret; 
0x0014f2a5: sub eax, 1; pop edi; pop ebp; ret; 
0x0004b188: sub eax, 1; ret; 
0x000943ad: sub eax, 1; shr eax, 4; add eax, 1; mov dword ptr [edx + 0x1fc], eax; ret; 
0x0008fd68: sub eax, 2; add esp, 0xc; ret; 
0x0011e69f: sub eax, dword ptr [0x14]; jne 0x11e6af; add esp, 0x418; pop ebx; ret; 
0x0015130a: sub eax, dword ptr [0x14]; jne 0x151316; add esp, 0x1c; ret; 
0x001636b9: sub eax, dword ptr [0x14]; jne 0x1636c5; add esp, 0x4c; ret; 
0x00163729: sub eax, dword ptr [0x14]; jne 0x163735; add esp, 0x4c; ret; 
0x00163799: sub eax, dword ptr [0x14]; jne 0x1637a5; add esp, 0x4c; ret; 
0x001637fc: sub eax, dword ptr [0x14]; jne 0x163808; add esp, 0x4c; ret; 
0x0016385c: sub eax, dword ptr [0x14]; jne 0x163868; add esp, 0x4c; ret; 
0x001638c9: sub eax, dword ptr [0x14]; jne 0x1638d5; add esp, 0x4c; ret; 
0x00163949: sub eax, dword ptr [0x14]; jne 0x163955; add esp, 0x4c; ret; 
0x00163e37: sub eax, dword ptr [0x14]; jne 0x163e43; add esp, 0x1c; ret; 
0x00163e86: sub eax, dword ptr [0x14]; jne 0x163ebc; add esp, 0x1c; ret; 
0x001656a0: sub eax, dword ptr [0x14]; jne 0x1656ac; add esp, 0x2c; ret; 
0x00036616: sub eax, dword ptr [0x14]; jne 0x36626; mov eax, edx; add esp, 0x1c; ret 4; 
0x0003726c: sub eax, dword ptr [0x14]; jne 0x37279; add esp, 0x18; pop ebx; ret; 
0x0003b6ec: sub eax, dword ptr [0x14]; jne 0x3b6f8; add esp, 0x1c; ret; 
0x0003b73f: sub eax, dword ptr [0x14]; jne 0x3b74b; add esp, 0x1c; ret; 
0x0007be00: sub eax, dword ptr [0x14]; jne 0x7be1c; add esp, 0x28; pop ebx; ret; 
0x000dd646: sub eax, dword ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000625cb: sub eax, dword ptr [eax]; add byte ptr [ebx - 0x50f7b], cl; call ecx; 
0x0011d850: sub eax, dword ptr [ebx + 0x33ff0cec]; call esi; 
0x0006a9f8: sub eax, dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x000308d1: sub eax, dword ptr [ebx + 4]; add esp, 4; pop ebx; pop esi; ret; 
0x0012c9b4: sub eax, dword ptr [ebx + 4]; pop ebx; pop esi; pop edi; ret; 
0x000847b4: sub eax, dword ptr [ebx - 0x17a8f314]; ret 0xfff9; 
0x0012499d: sub eax, dword ptr [ebx - 0x2776db3c]; pop ebx; pop esi; ret; 
0x0012c54f: sub eax, dword ptr [ecx + 0x1c]; cmp eax, edx; jb 0x12c560; mov eax, 1; ret; 
0x0007b163: sub eax, dword ptr [edx + 0x10]; ret; 
0x0007b025: sub eax, dword ptr [edx + 0x18]; sar eax, 2; ret; 
0x0007b033: sub eax, dword ptr [edx + 0x1c]; ret; 
0x00081573: sub eax, dword ptr [edx + 0xc]; ret; 
0x0007b155: sub eax, dword ptr [edx + 0xc]; sar eax, 2; ret; 
0x00080b7f: sub eax, dword ptr [edx + 8]; ret; 
0x00076ba6: sub eax, dword ptr [edx + 8]; sar eax, 2; ret; 
0x0002df8e: sub eax, dword ptr [edx]; ret; 
0x0015b2d3: sub eax, dword ptr [esi + 0xc]; add esp, 4; add eax, edx; pop ebx; pop esi; ret; 
0x000b572a: sub eax, dword ptr [esp + 4]; ret; 
0x0011e69e: sub eax, dword ptr gs:[0x14]; jne 0x11e6af; add esp, 0x418; pop ebx; ret; 
0x00151309: sub eax, dword ptr gs:[0x14]; jne 0x151316; add esp, 0x1c; ret; 
0x001636b8: sub eax, dword ptr gs:[0x14]; jne 0x1636c5; add esp, 0x4c; ret; 
0x00163728: sub eax, dword ptr gs:[0x14]; jne 0x163735; add esp, 0x4c; ret; 
0x00163798: sub eax, dword ptr gs:[0x14]; jne 0x1637a5; add esp, 0x4c; ret; 
0x001637fb: sub eax, dword ptr gs:[0x14]; jne 0x163808; add esp, 0x4c; ret; 
0x0016385b: sub eax, dword ptr gs:[0x14]; jne 0x163868; add esp, 0x4c; ret; 
0x001638c8: sub eax, dword ptr gs:[0x14]; jne 0x1638d5; add esp, 0x4c; ret; 
0x00163948: sub eax, dword ptr gs:[0x14]; jne 0x163955; add esp, 0x4c; ret; 
0x00163e36: sub eax, dword ptr gs:[0x14]; jne 0x163e43; add esp, 0x1c; ret; 
0x00163e85: sub eax, dword ptr gs:[0x14]; jne 0x163ebc; add esp, 0x1c; ret; 
0x0016569f: sub eax, dword ptr gs:[0x14]; jne 0x1656ac; add esp, 0x2c; ret; 
0x00036615: sub eax, dword ptr gs:[0x14]; jne 0x36626; mov eax, edx; add esp, 0x1c; ret 4; 
0x0003726b: sub eax, dword ptr gs:[0x14]; jne 0x37279; add esp, 0x18; pop ebx; ret; 
0x0003b6eb: sub eax, dword ptr gs:[0x14]; jne 0x3b6f8; add esp, 0x1c; ret; 
0x0003b73e: sub eax, dword ptr gs:[0x14]; jne 0x3b74b; add esp, 0x1c; ret; 
0x0007bdff: sub eax, dword ptr gs:[0x14]; jne 0x7be1c; add esp, 0x28; pop ebx; ret; 
0x00051193: sub eax, ebp; std; dec dword ptr [ebx - 0x365343]; dec dword ptr [ebp - 0x6894f79]; call dword ptr [eax - 0x73]; 
0x00142335: sub eax, ebx; add esp, 8; pop ebx; ret; 
0x00191769: sub eax, ecx; pop ebp; pop ebx; ret; 
0x0018c8a5: sub eax, ecx; pop ebp; ret; 
0x0015b2cb: sub eax, ecx; pop ebx; pop esi; ret; 
0x0018ef5c: sub eax, ecx; pop ebx; ret; 
0x0019365f: sub eax, ecx; pop esi; pop edi; pop ebp; pop ebx; ret; 
0x001920d1: sub eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x001930fb: sub eax, ecx; pop esi; pop edi; pop ebx; ret; 
0x00191dcd: sub eax, ecx; pop esi; pop edi; ret; 
0x0015b9de: sub eax, ecx; push eax; push ebp; push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x0018b0f8: sub eax, ecx; ret; 
0x000a2717: sub eax, edi; bsf edx, edx; add eax, edx; pop edi; pop esi; ret; 
0x000a266e: sub eax, edi; pop edi; ret; 
0x00173199: sub eax, edx; cdq; push edx; push eax; push ebx; call dword ptr [ebp + 0x40]; 
0x00079bc8: sub eax, edx; mov dword ptr [ecx], eax; add esp, 8; xor eax, eax; pop ebx; ret; 
0x000843f2: sub eax, edx; mov dword ptr [ecx], eax; mov eax, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x000c4071: sub eax, edx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00193c4f: sub eax, edx; pop edi; pop ebp; ret; 
0x00195179: sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x000c3f95: sub eax, edx; pop edi; ret; 
0x00077094: sub eax, edx; push eax; push edx; push edi; call dword ptr [ebx + 0x38]; 
0x0015b8be: sub eax, edx; push eax; push esi; push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x000764c6: sub eax, edx; ret; 
0x000362a3: sub eax, edx; shr eax, 0x1f; ret; 
0x0007d20b: sub eax, edx; sub esp, 4; push eax; push edx; push esi; call ecx; 
0x000b4432: sub eax, esi; pop ebx; pop esi; ret; 
0x001334e9: sub ebp, -1; jmp dword ptr [esi - 0x70]; 
0x001565e3: sub ebp, 2; mov eax, ebp; pop ebp; ret; 
0x000dc699: sub ebp, ebx; call dword ptr [eax - 0x18]; 
0x0016d5f4: sub ebp, ebx; inc dword ptr [ebx - 0x137cef3c]; or byte ptr [ebp - 0x699ea7d], cl; call dword ptr [ebp + 0x50]; 
0x0004db2b: sub ebp, edi; jmp dword ptr [esi - 0x70]; 
0x0014cdfa: sub ebp, esi; dec dword ptr [ebp - 0x6533b7d]; call dword ptr [eax + 0x68]; 
0x000a593a: sub ebx, 0x10; lea ecx, [edx + 0x10]; jne 0xa5ed0; pop edi; pop ebx; ret; 
0x000a617a: sub ebx, 0x10; lea ecx, [edx + 0x10]; jne 0xa5ed1; pop ebx; ret; 
0x000a6092: sub ebx, 0xa; lea ecx, [edx + 0xa]; jne 0xa5ed1; pop ebx; ret; 
0x000a60b0: sub ebx, 0xb; lea ecx, [edx + 0xb]; jne 0xa5ed1; pop ebx; ret; 
0x000a5900: sub ebx, 0xc; lea ecx, [edx + 0xc]; jne 0xa5ed0; pop edi; pop ebx; ret; 
0x000a60d0: sub ebx, 0xc; lea ecx, [edx + 0xc]; jne 0xa5ed1; pop ebx; ret; 
0x000a5cc4: sub ebx, 0xd; lea ecx, [edx + 0xd]; jne 0xa5ed0; pop edi; pop ebx; ret; 
0x000a60f4: sub ebx, 0xd; lea ecx, [edx + 0xd]; jne 0xa5ed1; pop ebx; ret; 
0x000a5cf4: sub ebx, 0xe; lea ecx, [edx + 0xe]; jne 0xa5ed0; pop edi; pop ebx; ret; 
0x000a6124: sub ebx, 0xe; lea ecx, [edx + 0xe]; jne 0xa5ed1; pop ebx; ret; 
0x000a5d24: sub ebx, 0xf; lea ecx, [edx + 0xf]; jne 0xa5ed0; pop edi; pop ebx; ret; 
0x000a6154: sub ebx, 0xf; lea ecx, [edx + 0xf]; jne 0xa5ed1; pop ebx; ret; 
0x000aa635: sub ebx, 0xf; lea ecx, [edx + 0xf]; jne 0xaa331; pop ebx; ret; 
0x00150940: sub ebx, 1; jne 0x1508d0; pop ebx; pop esi; ret; 
0x000a5b86: sub ebx, 1; lea ecx, [edx + 1]; jne 0xa5ed0; pop edi; pop ebx; ret; 
0x000a5f66: sub ebx, 1; lea ecx, [edx + 1]; jne 0xa5ed1; pop ebx; ret; 
0x000a5f88: sub ebx, 2; lea ecx, [edx + 2]; jne 0xa5ed1; pop ebx; ret; 
0x000a5bce: sub ebx, 3; lea ecx, [edx + 3]; jne 0xa5ed0; pop edi; pop ebx; ret; 
0x000a5fae: sub ebx, 3; lea ecx, [edx + 3]; jne 0xa5ed1; pop ebx; ret; 
0x000a5fc6: sub ebx, 4; lea ecx, [edx + 4]; jne 0xa5ed1; pop ebx; ret; 
0x000a5bec: sub ebx, 5; lea ecx, [edx + 5]; jne 0xa5ed0; pop edi; pop ebx; ret; 
0x000a5fec: sub ebx, 5; lea ecx, [edx + 5]; jne 0xa5ed1; pop ebx; ret; 
0x000a5c0e: sub ebx, 6; lea ecx, [edx + 6]; jne 0xa5ed0; pop edi; pop ebx; ret; 
0x000a600e: sub ebx, 6; lea ecx, [edx + 6]; jne 0xa5ed1; pop ebx; ret; 
0x000a5c2c: sub ebx, 7; lea ecx, [edx + 7]; jne 0xa5ed0; pop edi; pop ebx; ret; 
0x000a602c: sub ebx, 7; lea ecx, [edx + 7]; jne 0xa5ed1; pop ebx; ret; 
0x000a604a: sub ebx, 8; lea ecx, [edx + 8]; jne 0xa5ed1; pop ebx; ret; 
0x000aa4eb: sub ebx, 8; lea ecx, [edx + 8]; jne 0xaa331; pop ebx; ret; 
0x000a5c50: sub ebx, 9; lea ecx, [edx + 9]; jne 0xa5ed0; pop edi; pop ebx; ret; 
0x000a6070: sub ebx, 9; lea ecx, [edx + 9]; jne 0xa5ed1; pop ebx; ret; 
0x00150c54: sub ebx, dword ptr [ebx - 0x77]; rcr byte ptr [esi + 0x5f], 1; ret; 
0x00147e57: sub ebx, dword ptr [edi - 7]; call dword ptr [eax - 0x18]; 
0x0014df83: sub ebx, ebx; inc dword ptr [ebx - 0x2776eb3c]; pop ebx; pop esi; ret; 
0x00080300: sub ebx, edx; lea eax, [ebx - 1]; pop ebx; ret; 
0x00076430: sub ebx, edx; sar ebx, 2; lea eax, [ebx - 1]; pop ebx; ret; 
0x00092693: sub ebx, edx; stc; dec dword ptr [ebx - 0x7972778b]; pushal; test cl, bh; call dword ptr [eax + 0x68]; 
0x001624aa: sub ebx, esi; call dword ptr [eax - 0x48]; 
0x00162345: sub ebx, esi; call dword ptr [edx - 0x73]; 
0x001627ab: sub ebx, esi; call dword ptr [edx - 0x75]; 
0x001043a8: sub ecx, -0x80; shr ecx, 2; rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x0004b735: sub ecx, 1; jae 0x4b730; mov eax, edx; pop ebx; pop esi; ret; 
0x00099b01: sub ecx, 4; and eax, 1; cmovne eax, ecx; pop ebx; ret; 
0x00021dcd: sub ecx, dword ptr [0x14]; jne 0x21dd9; add esp, 0x1c; ret; 
0x000cbcdd: sub ecx, dword ptr [0x14]; jne 0xcbcea; add esp, 0x28; pop ebx; ret; 
0x0011ae6c: sub ecx, dword ptr [ebx - 7]; call dword ptr [eax - 0x18]; 
0x0009ad18: sub ecx, dword ptr [ecx + 0x5f5e5bc8]; pop ebp; ret; 
0x0017d7f7: sub ecx, dword ptr [esi + 0x1c030004]; mov edi, dword ptr [esi]; jmp ebx; 
0x0015b2c5: sub ecx, dword ptr [esi + 0x2c]; add esp, 4; sub eax, ecx; pop ebx; pop esi; ret; 
0x0015b0f0: sub ecx, dword ptr [esp + 0xc]; mov dword ptr [edx + 0x2c], ebx; mov dword ptr [edx + 0x34], ecx; pop ebx; ret; 
0x00021dcc: sub ecx, dword ptr gs:[0x14]; jne 0x21dd9; add esp, 0x1c; ret; 
0x000cbcdc: sub ecx, dword ptr gs:[0x14]; jne 0xcbcea; add esp, 0x28; pop ebx; ret; 
0x0007147f: sub ecx, eax; cmp edx, ecx; jbe 0x714d8; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x00073b48: sub ecx, eax; cmp edx, ecx; jbe 0x73b91; sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x0007961c: sub ecx, eax; cmp edx, ecx; jbe 0x797f0; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x0007f978: sub ecx, eax; cmp edx, ecx; jbe 0x7f9d0; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x0015b3ba: sub ecx, eax; push ecx; push edx; mov dword ptr [esp + 0x14], edx; push dword ptr [esi]; call dword ptr [esi + 0x20]; 
0x00035f7d: sub ecx, eax; xor eax, ecx; shr eax, 0x1f; ret; 
0x0003bd1d: sub ecx, ebx; call dword ptr gs:[0x10]; 
0x00104361: sub ecx, edi; add ecx, 0x150; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x00103ede: sub ecx, edi; add ecx, 0x4c; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x00022688: sub ecx, edi; call dword ptr [eax - 0x18]; 
0x00173f25: sub ecx, edx; cmp eax, ecx; jbe 0x174000; sub esp, 0xc; push esi; call dword ptr [ebp + 0x44]; 
0x0017406e: sub ecx, edx; cmp eax, ecx; jbe 0x174080; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x00075bb3: sub ecx, edx; cmp eax, ecx; jbe 0x75bf0; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x0007bfb6: sub ecx, edx; cmp eax, ecx; jbe 0x7bfe0; sub esp, 0xc; push ebx; call dword ptr [esi + 0x30]; 
0x0007ddd9: sub ecx, edx; cmp eax, ecx; jbe 0x7df08; sub esp, 0xc; push ebx; call dword ptr [esi + 0x44]; 
0x0007df7f: sub ecx, edx; cmp eax, ecx; jbe 0x7dfc0; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x0007fa23: sub ecx, edx; cmp eax, ecx; jbe 0x7fa50; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x0007fd19: sub ecx, edx; cmp eax, ecx; jbe 0x7fdc8; sub esp, 0xc; push esi; call dword ptr [ebp + 0x30]; 
0x00035b6e: sub ecx, edx; not eax; and eax, ecx; ret; 
0x00035bcf: sub ecx, edx; shr eax, 0x1f; shr ecx, 0x10; or eax, ecx; ret; 
0x00166f36: sub ecx, esi; inc dword ptr [ebx - 0x2f08e33c]; shr eax, 0x1f; ret; 
0x000b37d4: sub edi, 0x10; add eax, edi; pop edi; ret; 
0x001978eb: sub edi, 0x10; jb 0x1979b0; lea eax, [eax + 0xf]; pop edi; ret; 
0x000fc32e: sub edi, 0x48; stc; call dword ptr [eax - 0x18]; 
0x0011f854: sub edi, 0x4f; stc; call dword ptr [eax + 0x57]; 
0x00120b1d: sub edi, 0x54; stc; call dword ptr [eax + 0x56]; 
0x00197960: sub edi, 0xa; jb 0x1979b0; lea eax, [eax + 9]; pop edi; ret; 
0x00197970: sub edi, 0xb; jb 0x1979b0; lea eax, [eax + 0xa]; pop edi; ret; 
0x00197980: sub edi, 0xd; jb 0x1979b0; lea eax, [eax + 0xc]; pop edi; ret; 
0x00197990: sub edi, 0xe; jb 0x1979b0; lea eax, [eax + 0xd]; pop edi; ret; 
0x001979a0: sub edi, 0xf; jb 0x1979b0; lea eax, [eax + 0xe]; pop edi; ret; 
0x00197900: sub edi, 2; jb 0x1979b0; lea eax, [eax + 1]; pop edi; ret; 
0x00197910: sub edi, 3; jb 0x1979b0; lea eax, [eax + 2]; pop edi; ret; 
0x00197858: sub edi, 4; jb 0x1979b0; lea eax, [eax + 3]; pop edi; ret; 
0x00197920: sub edi, 5; jb 0x1979b0; lea eax, [eax + 4]; pop edi; ret; 
0x00197930: sub edi, 6; jb 0x1979b0; lea eax, [eax + 5]; pop edi; ret; 
0x00197940: sub edi, 7; jb 0x1979b0; lea eax, [eax + 6]; pop edi; ret; 
0x0019788b: sub edi, 8; jb 0x1979b0; lea eax, [eax + 7]; pop edi; ret; 
0x00197950: sub edi, 9; jb 0x1979b0; lea eax, [eax + 8]; pop edi; ret; 
0x00024d26: sub edi, ecx; call dword ptr [eax - 0x18]; 
0x0002acf4: sub edi, ecx; call dword ptr [eax - 0x18]; ret; 
0x00024d74: sub edi, ecx; call dword ptr [eax - 0x73]; 
0x000c46f8: sub edi, ecx; jmp dword ptr [ebp - 0x75]; 
0x00024d4c: sub edi, ecx; jmp ptr [eax + 0x1e]; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; or dword ptr [eax + 0x6f], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000f84e6: sub edi, edx; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; xor eax, eax; ret; 
0x000b3ff3: sub edx, 0x10; add edx, eax; jl 0xb4000; lea eax, [ecx + eax + 0x30]; ret; 
0x0019689b: sub edx, 0x10; jb 0x196970; lea eax, [edi + 0xf]; pop edi; ret; 
0x000b3fe3: sub edx, 0x20; add edx, eax; jl 0xb4000; lea eax, [ecx + eax + 0x20]; ret; 
0x000b3fd3: sub edx, 0x30; add edx, eax; jl 0xb4000; lea eax, [ecx + eax + 0x10]; ret; 
0x000b3fc3: sub edx, 0x40; add edx, eax; jl 0xb4000; add eax, ecx; ret; 
0x000365c0: sub edx, 0x7fff0000; mov eax, edx; shr eax, 0x1f; ret; 
0x00196920: sub edx, 0xa; jb 0x196970; lea eax, [edi + 9]; pop edi; ret; 
0x00196930: sub edx, 0xb; jb 0x196970; lea eax, [edi + 0xa]; pop edi; ret; 
0x00196872: sub edx, 0xc; jb 0x196970; lea eax, [edi + 0xb]; pop edi; ret; 
0x00196940: sub edx, 0xd; jb 0x196970; lea eax, [edi + 0xc]; pop edi; ret; 
0x00196950: sub edx, 0xe; jb 0x196970; lea eax, [edi + 0xd]; pop edi; ret; 
0x00196960: sub edx, 0xf; jb 0x196970; lea eax, [edi + 0xe]; pop edi; ret; 
0x001968c0: sub edx, 2; jb 0x196970; lea eax, [edi + 1]; pop edi; ret; 
0x0017bd99: sub edx, 2; je 0x17bda0; mov byte ptr [edi], al; pop edi; pop ebx; ret; 
0x001537fc: sub edx, 2; pop edi; pop ebp; mov eax, edx; ret; 
0x001968d0: sub edx, 3; jb 0x196970; lea eax, [edi + 2]; pop edi; ret; 
0x00196807: sub edx, 4; jb 0x196970; lea eax, [edi + 3]; pop edi; ret; 
0x001968e0: sub edx, 5; jb 0x196970; lea eax, [edi + 4]; pop edi; ret; 
0x001968f0: sub edx, 6; jb 0x196970; lea eax, [edi + 5]; pop edi; ret; 
0x00196900: sub edx, 7; jb 0x196970; lea eax, [edi + 6]; pop edi; ret; 
0x00196838: sub edx, 8; jb 0x196970; lea eax, [edi + 7]; pop edi; ret; 
0x0009c6ed: sub edx, 8; jne 0x9c6b8; mov dword ptr [eax + 0x1c], esi; pop ebx; pop esi; ret; 
0x00196910: sub edx, 9; jb 0x196970; lea eax, [edi + 8]; pop edi; ret; 
0x0010505f: sub edx, dword ptr [0x14]; jne 0x105077; add esp, 0x1c; ret; 
0x00105505: sub edx, dword ptr [0x14]; jne 0x105526; add esp, 0x78; pop ebx; ret; 
0x00107c85: sub edx, dword ptr [0x14]; jne 0x107ca6; add esp, 0x78; pop ebx; ret; 
0x00108703: sub edx, dword ptr [0x14]; jne 0x108710; add esp, 0x38; pop ebx; ret; 
0x00108783: sub edx, dword ptr [0x14]; jne 0x108790; add esp, 0x38; pop ebx; ret; 
0x0010c10e: sub edx, dword ptr [0x14]; jne 0x10c11d; movzx eax, al; add esp, 0x4c; ret; 
0x001165f6: sub edx, dword ptr [0x14]; jne 0x116609; add esp, 0x1c; ret; 
0x00118048: sub edx, dword ptr [0x14]; jne 0x118099; add esp, 0x28; pop ebx; ret; 
0x001180e8: sub edx, dword ptr [0x14]; jne 0x118139; add esp, 0x28; pop ebx; ret; 
0x00118373: sub edx, dword ptr [0x14]; jne 0x11837f; add esp, 0x1c; ret; 
0x0011957c: sub edx, dword ptr [0x14]; jne 0x119597; add esp, 0x3c; ret; 
0x001195ed: sub edx, dword ptr [0x14]; jne 0x1195f9; add esp, 0x1c; ret; 
0x0011a608: sub edx, dword ptr [0x14]; jne 0x11a615; add esp, 0x38; pop ebx; ret; 
0x0011a68d: sub edx, dword ptr [0x14]; jne 0x11a69a; add esp, 0x38; pop ebx; ret; 
0x0011d397: sub edx, dword ptr [0x14]; jne 0x11d3a3; add esp, 0x1c; ret; 
0x0011eec0: sub edx, dword ptr [0x14]; jne 0x11eedf; add esp, 0x1018; pop ebx; ret; 
0x001244be: sub edx, dword ptr [0x14]; jne 0x1244e9; add esp, 0x28; pop ebx; ret; 
0x001245e3: sub edx, dword ptr [0x14]; jne 0x124609; add esp, 0x18; pop ebx; ret; 
0x00124663: sub edx, dword ptr [0x14]; jne 0x124689; add esp, 0x18; pop ebx; ret; 
0x001248ee: sub edx, dword ptr [0x14]; jne 0x124919; add esp, 0x18; pop ebx; ret; 
0x0012503e: sub edx, dword ptr [0x14]; jne 0x125069; add esp, 0x18; pop ebx; ret; 
0x001250c3: sub edx, dword ptr [0x14]; jne 0x1250e9; add esp, 0x18; pop ebx; ret; 
0x0012514e: sub edx, dword ptr [0x14]; jne 0x125179; add esp, 0x28; pop ebx; ret; 
0x001252b7: sub edx, dword ptr [0x14]; jne 0x1252c3; add esp, 0x1c; ret; 
0x00125a01: sub edx, dword ptr [0x14]; jne 0x125a14; add esp, 0x7c; ret; 
0x00133633: sub edx, dword ptr [0x14]; jne 0x133645; add esp, 0x2c; ret; 
0x001336a3: sub edx, dword ptr [0x14]; jne 0x1336b5; add esp, 0x2c; ret; 
0x0013aae4: sub edx, dword ptr [0x14]; jne 0x13aaf0; add esp, 0x2c; ret; 
0x001454ad: sub edx, dword ptr [0x14]; jne 0x1454cd; add esp, 0x18; pop ebx; ret; 
0x00145509: sub edx, dword ptr [0x14]; jne 0x145515; add esp, 0x1c; ret; 
0x00145555: sub edx, dword ptr [0x14]; jne 0x145561; add esp, 0x1c; ret; 
0x00146ecc: sub edx, dword ptr [0x14]; jne 0x146f14; add esp, 0x118; pop ebx; ret; 
0x00146f6c: sub edx, dword ptr [0x14]; jne 0x146fd0; add esp, 0x118; pop ebx; ret; 
0x0014702c: sub edx, dword ptr [0x14]; jne 0x14707b; add esp, 0x118; pop ebx; ret; 
0x001470cc: sub edx, dword ptr [0x14]; jne 0x1470fd; add esp, 0x11c; ret; 
0x00147373: sub edx, dword ptr [0x14]; jne 0x1473bc; add esp, 0x1c; ret; 
0x0014ab46: sub edx, dword ptr [0x14]; jne 0x14ab55; movzx eax, ax; add esp, 0x2c; ret; 
0x0014eda7: sub edx, dword ptr [0x14]; jne 0x14edb4; add esp, 0x28; pop ebx; ret; 
0x00158efa: sub edx, dword ptr [0x14]; jne 0x158f07; add esp, 0x28; pop ebx; ret; 
0x0015ef9d: sub edx, dword ptr [0x14]; jne 0x15f018; add esp, 0x18; pop ebx; ret; 
0x00162252: sub edx, dword ptr [0x14]; jne 0x162267; add esp, 0x1c; ret; 
0x0016237c: sub edx, dword ptr [0x14]; jne 0x162397; add esp, 0x28; pop ebx; ret; 
0x0016241c: sub edx, dword ptr [0x14]; jne 0x162437; add esp, 0x28; pop ebx; ret; 
0x0016276e: sub edx, dword ptr [0x14]; jne 0x16277a; add esp, 0x1c; ret; 
0x001627e5: sub edx, dword ptr [0x14]; jne 0x1627ff; add esp, 0x18; pop ebx; ret; 
0x00163649: sub edx, dword ptr [0x14]; jne 0x163655; add esp, 0x4c; ret; 
0x00165751: sub edx, dword ptr [0x14]; jne 0x1657b9; add esp, 0x18; pop ebx; ret; 
0x00165841: sub edx, dword ptr [0x14]; jne 0x1658a9; add esp, 0x18; pop ebx; ret; 
0x00165ae8: sub edx, dword ptr [0x14]; jne 0x165b3b; add esp, 0x18; pop ebx; ret; 
0x00165b78: sub edx, dword ptr [0x14]; jne 0x165bcb; add esp, 0x18; pop ebx; ret; 
0x00165c37: sub edx, dword ptr [0x14]; jne 0x165c5b; add esp, 0x18; pop ebx; ret; 
0x00165c9c: sub edx, dword ptr [0x14]; jne 0x165cfb; add esp, 0x18; pop ebx; ret; 
0x00165d38: sub edx, dword ptr [0x14]; jne 0x165d99; add esp, 0x18; pop ebx; ret; 
0x00166558: sub edx, dword ptr [0x14]; jne 0x1665ab; add esp, 0x18; pop ebx; ret; 
0x001665e8: sub edx, dword ptr [0x14]; jne 0x16663b; add esp, 0x18; pop ebx; ret; 
0x00166678: sub edx, dword ptr [0x14]; jne 0x1666cb; add esp, 0x18; pop ebx; ret; 
0x00166708: sub edx, dword ptr [0x14]; jne 0x16675b; add esp, 0x18; pop ebx; ret; 
0x00166dc0: sub edx, dword ptr [0x14]; jne 0x166dcf; movzx eax, al; add esp, 0x1c; ret; 
0x00166e20: sub edx, dword ptr [0x14]; jne 0x166e2f; movzx eax, al; add esp, 0x1c; ret; 
0x00166e89: sub edx, dword ptr [0x14]; jne 0x166e96; add esp, 0x18; pop ebx; ret; 
0x00166ee9: sub edx, dword ptr [0x14]; jne 0x166ef6; add esp, 0x18; pop ebx; ret; 
0x0016b9e5: sub edx, dword ptr [0x14]; jne 0x16ba1c; add esp, 0x18; pop ebx; ret; 
0x0016d201: sub edx, dword ptr [0x14]; jne 0x16d219; add esp, 0x18; pop ebx; ret; 
0x0016d279: sub edx, dword ptr [0x14]; jne 0x16d299; add esp, 0x18; pop ebx; ret; 
0x0016e8c5: sub edx, dword ptr [0x14]; jne 0x16e901; add esp, 0x28; pop ebx; ret; 
0x0016ea86: sub edx, dword ptr [0x14]; jne 0x16eaab; add esp, 0x28; pop ebx; ret; 
0x0016eb28: sub edx, dword ptr [0x14]; jne 0x16eb54; add esp, 0x28; pop ebx; ret; 
0x0016f1bd: sub edx, dword ptr [0x14]; jne 0x16f1ca; add esp, 0x28; pop ebx; ret; 
0x00171a20: sub edx, dword ptr [0x14]; jne 0x171a2d; add esp, 0x18; pop ebx; ret; 
0x001745c7: sub edx, dword ptr [0x14]; jne 0x1745d3; add esp, 0x1c; ret; 
0x0017a183: sub edx, dword ptr [0x14]; jne 0x17a1a9; add esp, 0x18; pop ebx; ret; 
0x00037d9a: sub edx, dword ptr [0x14]; jne 0x37db7; add esp, 0x98; pop ebx; ret; 
0x00037f40: sub edx, dword ptr [0x14]; jne 0x37f7c; add esp, 0x28; pop ebx; ret; 
0x00038312: sub edx, dword ptr [0x14]; jne 0x38321; add esp, 0x12c; ret; 
0x00038982: sub edx, dword ptr [0x14]; jne 0x3899f; add esp, 0x98; pop ebx; ret; 
0x00038a02: sub edx, dword ptr [0x14]; jne 0x38a1f; add esp, 0x98; pop ebx; ret; 
0x00038a8a: sub edx, dword ptr [0x14]; jne 0x38a99; add esp, 0x9c; ret; 
0x0003ad5a: sub edx, dword ptr [0x14]; jne 0x3ad66; add esp, 0x2c; ret; 
0x0003ae8a: sub edx, dword ptr [0x14]; jne 0x3ae96; add esp, 0x2c; ret; 
0x0003b16b: sub edx, dword ptr [0x14]; jne 0x3b1ac; add esp, 0x18; pop ebx; ret; 
0x0003b79c: sub edx, dword ptr [0x14]; jne 0x3b7a8; add esp, 0x1c; ret; 
0x0003b7ef: sub edx, dword ptr [0x14]; jne 0x3b7fb; add esp, 0x1c; ret; 
0x0003b83c: sub edx, dword ptr [0x14]; jne 0x3b848; add esp, 0x1c; ret; 
0x0003b88f: sub edx, dword ptr [0x14]; jne 0x3b89b; add esp, 0x1c; ret; 
0x000489a6: sub edx, dword ptr [0x14]; jne 0x489b5; add esp, 0x42c; ret; 
0x000582da: sub edx, dword ptr [0x14]; jne 0x582ea; add esp, 0x1018; pop ebx; ret; 
0x00058361: sub edx, dword ptr [0x14]; jne 0x5836e; add esp, 0x78; pop ebx; ret; 
0x00058946: sub edx, dword ptr [0x14]; jne 0x5895f; add esp, 0x1c; ret; 
0x000821b3: sub edx, dword ptr [0x14]; jne 0x821dd; add esp, 0x2c; ret; 
0x0008231b: sub edx, dword ptr [0x14]; jne 0x8234b; add esp, 0x2c; ret; 
0x000864fc: sub edx, dword ptr [0x14]; jne 0x86508; add esp, 0x2c; ret; 
0x0008ae08: sub edx, dword ptr [0x14]; jne 0x8ae15; add esp, 0x28; pop ebx; ret; 
0x0008ae98: sub edx, dword ptr [0x14]; jne 0x8aea4; add esp, 0x2c; ret; 
0x0008c1fc: sub edx, dword ptr [0x14]; jne 0x8c208; add esp, 0x2c; ret; 
0x0008c65c: sub edx, dword ptr [0x14]; jne 0x8c668; add esp, 0x2c; ret; 
0x0008cb48: sub edx, dword ptr [0x14]; jne 0x8cb54; add esp, 0x2c; ret; 
0x0008cf98: sub edx, dword ptr [0x14]; jne 0x8cfa4; add esp, 0x2c; ret; 
0x0008fde1: sub edx, dword ptr [0x14]; jne 0x8fe24; add esp, 0x38; pop ebx; ret; 
0x00090051: sub edx, dword ptr [0x14]; jne 0x90077; add esp, 0x2c; ret; 
0x000902dd: sub edx, dword ptr [0x14]; jne 0x90307; add esp, 0x2c; ret; 
0x0009054d: sub edx, dword ptr [0x14]; jne 0x90577; add esp, 0x18; pop ebx; ret; 
0x00092227: sub edx, dword ptr [0x14]; jne 0x92234; add esp, 0x28; pop ebx; ret; 
0x000938af: sub edx, dword ptr [0x14]; jne 0x938bc; add esp, 0x28; pop ebx; ret; 
0x00093e8d: sub edx, dword ptr [0x14]; jne 0x93e9a; add esp, 0x38; pop ebx; ret; 
0x000c41bc: sub edx, dword ptr [0x14]; jne 0xc41ec; add esp, 0x18; pop ebx; ret; 
0x000cad0c: sub edx, dword ptr [0x14]; jne 0xcad27; add esp, 0x28; pop ebx; ret; 
0x000cad8c: sub edx, dword ptr [0x14]; jne 0xcad98; add esp, 0x1c; ret; 
0x000cadd7: sub edx, dword ptr [0x14]; jne 0xcade4; add esp, 0x38; pop ebx; ret; 
0x000cae37: sub edx, dword ptr [0x14]; jne 0xcae44; add esp, 0x48; pop ebx; ret; 
0x000cbf33: sub edx, dword ptr [0x14]; jne 0xcbf79; add esp, 0x28; pop ebx; ret; 
0x000cc2f7: sub edx, dword ptr [0x14]; jne 0xcc318; add esp, 0x38; pop ebx; ret; 
0x000d4830: sub edx, dword ptr [0x14]; jne 0xd483c; add esp, 0x1c; ret; 
0x000d6ec0: sub edx, dword ptr [0x14]; jne 0xd6ecc; add esp, 0x1c; ret; 
0x000d7024: sub edx, dword ptr [0x14]; jne 0xd7062; add esp, 0x28; pop ebx; ret; 
0x000d7243: sub edx, dword ptr [0x14]; jne 0xd7250; add esp, 0x28; pop ebx; ret; 
0x000d8423: sub edx, dword ptr [0x14]; jne 0xd8433; add esp, 0xe8; pop ebx; ret; 
0x000d84a8: sub edx, dword ptr [0x14]; jne 0xd84b5; add esp, 0x38; pop ebx; ret; 
0x000d854f: sub edx, dword ptr [0x14]; jne 0xd855f; add esp, 0xe8; pop ebx; ret; 
0x000d85d8: sub edx, dword ptr [0x14]; jne 0xd85e5; add esp, 0x38; pop ebx; ret; 
0x000da808: sub edx, dword ptr [0x14]; jne 0xda859; add esp, 0x28; pop ebx; ret; 
0x000dd733: sub edx, dword ptr [0x14]; jne 0xdd7e3; add esp, 0x68; pop ebx; ret; 
0x000df3f4: sub edx, dword ptr [0x14]; jne 0xdf449; add esp, 0x28; pop ebx; ret; 
0x000df494: sub edx, dword ptr [0x14]; jne 0xdf4e9; add esp, 0x28; pop ebx; ret; 
0x000e0e65: sub edx, dword ptr [0x14]; jne 0xe0e86; add esp, 0x78; pop ebx; ret; 
0x000e3525: sub edx, dword ptr [0x14]; jne 0xe3546; add esp, 0x78; pop ebx; ret; 
0x000f8555: sub edx, dword ptr [0x14]; jne 0xf8576; add esp, 0x78; pop ebx; ret; 
0x000f9135: sub edx, dword ptr [0x14]; jne 0xf9156; add esp, 0x78; pop ebx; ret; 
0x0017d6f7: sub edx, dword ptr [eax + 0x1c030004]; mov edi, dword ptr [esi]; jmp ebx; 
0x00080baa: sub edx, dword ptr [eax + 0xc]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x00080bb8: sub edx, dword ptr [eax + 8]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x000764d0: sub edx, dword ptr [ebx + 4]; sar edx, 2; jmp 0x764c2; mov eax, 0xffffffff; pop ebx; ret; 
0x000764bc: sub edx, dword ptr [ebx + 8]; sar edx, 2; mov eax, dword ptr [ecx + 8]; pop ebx; sub eax, edx; ret; 
0x0010505e: sub edx, dword ptr gs:[0x14]; jne 0x105077; add esp, 0x1c; ret; 
0x00105504: sub edx, dword ptr gs:[0x14]; jne 0x105526; add esp, 0x78; pop ebx; ret; 
0x00107c84: sub edx, dword ptr gs:[0x14]; jne 0x107ca6; add esp, 0x78; pop ebx; ret; 
0x00108702: sub edx, dword ptr gs:[0x14]; jne 0x108710; add esp, 0x38; pop ebx; ret; 
0x00108782: sub edx, dword ptr gs:[0x14]; jne 0x108790; add esp, 0x38; pop ebx; ret; 
0x0010c10d: sub edx, dword ptr gs:[0x14]; jne 0x10c11d; movzx eax, al; add esp, 0x4c; ret; 
0x001165f5: sub edx, dword ptr gs:[0x14]; jne 0x116609; add esp, 0x1c; ret; 
0x00118047: sub edx, dword ptr gs:[0x14]; jne 0x118099; add esp, 0x28; pop ebx; ret; 
0x001180e7: sub edx, dword ptr gs:[0x14]; jne 0x118139; add esp, 0x28; pop ebx; ret; 
0x00118372: sub edx, dword ptr gs:[0x14]; jne 0x11837f; add esp, 0x1c; ret; 
0x0011957b: sub edx, dword ptr gs:[0x14]; jne 0x119597; add esp, 0x3c; ret; 
0x001195ec: sub edx, dword ptr gs:[0x14]; jne 0x1195f9; add esp, 0x1c; ret; 
0x0011a607: sub edx, dword ptr gs:[0x14]; jne 0x11a615; add esp, 0x38; pop ebx; ret; 
0x0011a68c: sub edx, dword ptr gs:[0x14]; jne 0x11a69a; add esp, 0x38; pop ebx; ret; 
0x0011d396: sub edx, dword ptr gs:[0x14]; jne 0x11d3a3; add esp, 0x1c; ret; 
0x0011eebf: sub edx, dword ptr gs:[0x14]; jne 0x11eedf; add esp, 0x1018; pop ebx; ret; 
0x001244bd: sub edx, dword ptr gs:[0x14]; jne 0x1244e9; add esp, 0x28; pop ebx; ret; 
0x001245e2: sub edx, dword ptr gs:[0x14]; jne 0x124609; add esp, 0x18; pop ebx; ret; 
0x00124662: sub edx, dword ptr gs:[0x14]; jne 0x124689; add esp, 0x18; pop ebx; ret; 
0x001248ed: sub edx, dword ptr gs:[0x14]; jne 0x124919; add esp, 0x18; pop ebx; ret; 
0x0012503d: sub edx, dword ptr gs:[0x14]; jne 0x125069; add esp, 0x18; pop ebx; ret; 
0x001250c2: sub edx, dword ptr gs:[0x14]; jne 0x1250e9; add esp, 0x18; pop ebx; ret; 
0x0012514d: sub edx, dword ptr gs:[0x14]; jne 0x125179; add esp, 0x28; pop ebx; ret; 
0x001252b6: sub edx, dword ptr gs:[0x14]; jne 0x1252c3; add esp, 0x1c; ret; 
0x00125a00: sub edx, dword ptr gs:[0x14]; jne 0x125a14; add esp, 0x7c; ret; 
0x00133632: sub edx, dword ptr gs:[0x14]; jne 0x133645; add esp, 0x2c; ret; 
0x001336a2: sub edx, dword ptr gs:[0x14]; jne 0x1336b5; add esp, 0x2c; ret; 
0x0013aae3: sub edx, dword ptr gs:[0x14]; jne 0x13aaf0; add esp, 0x2c; ret; 
0x001454ac: sub edx, dword ptr gs:[0x14]; jne 0x1454cd; add esp, 0x18; pop ebx; ret; 
0x00145508: sub edx, dword ptr gs:[0x14]; jne 0x145515; add esp, 0x1c; ret; 
0x00145554: sub edx, dword ptr gs:[0x14]; jne 0x145561; add esp, 0x1c; ret; 
0x00146ecb: sub edx, dword ptr gs:[0x14]; jne 0x146f14; add esp, 0x118; pop ebx; ret; 
0x00146f6b: sub edx, dword ptr gs:[0x14]; jne 0x146fd0; add esp, 0x118; pop ebx; ret; 
0x0014702b: sub edx, dword ptr gs:[0x14]; jne 0x14707b; add esp, 0x118; pop ebx; ret; 
0x001470cb: sub edx, dword ptr gs:[0x14]; jne 0x1470fd; add esp, 0x11c; ret; 
0x00147372: sub edx, dword ptr gs:[0x14]; jne 0x1473bc; add esp, 0x1c; ret; 
0x0014ab45: sub edx, dword ptr gs:[0x14]; jne 0x14ab55; movzx eax, ax; add esp, 0x2c; ret; 
0x0014eda6: sub edx, dword ptr gs:[0x14]; jne 0x14edb4; add esp, 0x28; pop ebx; ret; 
0x00158ef9: sub edx, dword ptr gs:[0x14]; jne 0x158f07; add esp, 0x28; pop ebx; ret; 
0x0015ef9c: sub edx, dword ptr gs:[0x14]; jne 0x15f018; add esp, 0x18; pop ebx; ret; 
0x00162251: sub edx, dword ptr gs:[0x14]; jne 0x162267; add esp, 0x1c; ret; 
0x0016237b: sub edx, dword ptr gs:[0x14]; jne 0x162397; add esp, 0x28; pop ebx; ret; 
0x0016241b: sub edx, dword ptr gs:[0x14]; jne 0x162437; add esp, 0x28; pop ebx; ret; 
0x0016276d: sub edx, dword ptr gs:[0x14]; jne 0x16277a; add esp, 0x1c; ret; 
0x001627e4: sub edx, dword ptr gs:[0x14]; jne 0x1627ff; add esp, 0x18; pop ebx; ret; 
0x00163648: sub edx, dword ptr gs:[0x14]; jne 0x163655; add esp, 0x4c; ret; 
0x00165750: sub edx, dword ptr gs:[0x14]; jne 0x1657b9; add esp, 0x18; pop ebx; ret; 
0x00165840: sub edx, dword ptr gs:[0x14]; jne 0x1658a9; add esp, 0x18; pop ebx; ret; 
0x00165ae7: sub edx, dword ptr gs:[0x14]; jne 0x165b3b; add esp, 0x18; pop ebx; ret; 
0x00165b77: sub edx, dword ptr gs:[0x14]; jne 0x165bcb; add esp, 0x18; pop ebx; ret; 
0x00165c36: sub edx, dword ptr gs:[0x14]; jne 0x165c5b; add esp, 0x18; pop ebx; ret; 
0x00165c9b: sub edx, dword ptr gs:[0x14]; jne 0x165cfb; add esp, 0x18; pop ebx; ret; 
0x00165d37: sub edx, dword ptr gs:[0x14]; jne 0x165d99; add esp, 0x18; pop ebx; ret; 
0x00166557: sub edx, dword ptr gs:[0x14]; jne 0x1665ab; add esp, 0x18; pop ebx; ret; 
0x001665e7: sub edx, dword ptr gs:[0x14]; jne 0x16663b; add esp, 0x18; pop ebx; ret; 
0x00166677: sub edx, dword ptr gs:[0x14]; jne 0x1666cb; add esp, 0x18; pop ebx; ret; 
0x00166707: sub edx, dword ptr gs:[0x14]; jne 0x16675b; add esp, 0x18; pop ebx; ret; 
0x00166dbf: sub edx, dword ptr gs:[0x14]; jne 0x166dcf; movzx eax, al; add esp, 0x1c; ret; 
0x00166e1f: sub edx, dword ptr gs:[0x14]; jne 0x166e2f; movzx eax, al; add esp, 0x1c; ret; 
0x00166e88: sub edx, dword ptr gs:[0x14]; jne 0x166e96; add esp, 0x18; pop ebx; ret; 
0x00166ee8: sub edx, dword ptr gs:[0x14]; jne 0x166ef6; add esp, 0x18; pop ebx; ret; 
0x0016b9e4: sub edx, dword ptr gs:[0x14]; jne 0x16ba1c; add esp, 0x18; pop ebx; ret; 
0x0016d200: sub edx, dword ptr gs:[0x14]; jne 0x16d219; add esp, 0x18; pop ebx; ret; 
0x0016d278: sub edx, dword ptr gs:[0x14]; jne 0x16d299; add esp, 0x18; pop ebx; ret; 
0x0016e8c4: sub edx, dword ptr gs:[0x14]; jne 0x16e901; add esp, 0x28; pop ebx; ret; 
0x0016ea85: sub edx, dword ptr gs:[0x14]; jne 0x16eaab; add esp, 0x28; pop ebx; ret; 
0x0016eb27: sub edx, dword ptr gs:[0x14]; jne 0x16eb54; add esp, 0x28; pop ebx; ret; 
0x0016f1bc: sub edx, dword ptr gs:[0x14]; jne 0x16f1ca; add esp, 0x28; pop ebx; ret; 
0x00171a1f: sub edx, dword ptr gs:[0x14]; jne 0x171a2d; add esp, 0x18; pop ebx; ret; 
0x001745c6: sub edx, dword ptr gs:[0x14]; jne 0x1745d3; add esp, 0x1c; ret; 
0x0017a182: sub edx, dword ptr gs:[0x14]; jne 0x17a1a9; add esp, 0x18; pop ebx; ret; 
0x00037d99: sub edx, dword ptr gs:[0x14]; jne 0x37db7; add esp, 0x98; pop ebx; ret; 
0x00037f3f: sub edx, dword ptr gs:[0x14]; jne 0x37f7c; add esp, 0x28; pop ebx; ret; 
0x00038311: sub edx, dword ptr gs:[0x14]; jne 0x38321; add esp, 0x12c; ret; 
0x00038981: sub edx, dword ptr gs:[0x14]; jne 0x3899f; add esp, 0x98; pop ebx; ret; 
0x00038a01: sub edx, dword ptr gs:[0x14]; jne 0x38a1f; add esp, 0x98; pop ebx; ret; 
0x00038a89: sub edx, dword ptr gs:[0x14]; jne 0x38a99; add esp, 0x9c; ret; 
0x0003ad59: sub edx, dword ptr gs:[0x14]; jne 0x3ad66; add esp, 0x2c; ret; 
0x0003ae89: sub edx, dword ptr gs:[0x14]; jne 0x3ae96; add esp, 0x2c; ret; 
0x0003b16a: sub edx, dword ptr gs:[0x14]; jne 0x3b1ac; add esp, 0x18; pop ebx; ret; 
0x0003b79b: sub edx, dword ptr gs:[0x14]; jne 0x3b7a8; add esp, 0x1c; ret; 
0x0003b7ee: sub edx, dword ptr gs:[0x14]; jne 0x3b7fb; add esp, 0x1c; ret; 
0x0003b83b: sub edx, dword ptr gs:[0x14]; jne 0x3b848; add esp, 0x1c; ret; 
0x0003b88e: sub edx, dword ptr gs:[0x14]; jne 0x3b89b; add esp, 0x1c; ret; 
0x000489a5: sub edx, dword ptr gs:[0x14]; jne 0x489b5; add esp, 0x42c; ret; 
0x000582d9: sub edx, dword ptr gs:[0x14]; jne 0x582ea; add esp, 0x1018; pop ebx; ret; 
0x00058360: sub edx, dword ptr gs:[0x14]; jne 0x5836e; add esp, 0x78; pop ebx; ret; 
0x00058945: sub edx, dword ptr gs:[0x14]; jne 0x5895f; add esp, 0x1c; ret; 
0x000821b2: sub edx, dword ptr gs:[0x14]; jne 0x821dd; add esp, 0x2c; ret; 
0x0008231a: sub edx, dword ptr gs:[0x14]; jne 0x8234b; add esp, 0x2c; ret; 
0x000864fb: sub edx, dword ptr gs:[0x14]; jne 0x86508; add esp, 0x2c; ret; 
0x0008ae07: sub edx, dword ptr gs:[0x14]; jne 0x8ae15; add esp, 0x28; pop ebx; ret; 
0x0008ae97: sub edx, dword ptr gs:[0x14]; jne 0x8aea4; add esp, 0x2c; ret; 
0x0008c1fb: sub edx, dword ptr gs:[0x14]; jne 0x8c208; add esp, 0x2c; ret; 
0x0008c65b: sub edx, dword ptr gs:[0x14]; jne 0x8c668; add esp, 0x2c; ret; 
0x0008cb47: sub edx, dword ptr gs:[0x14]; jne 0x8cb54; add esp, 0x2c; ret; 
0x0008cf97: sub edx, dword ptr gs:[0x14]; jne 0x8cfa4; add esp, 0x2c; ret; 
0x0008fde0: sub edx, dword ptr gs:[0x14]; jne 0x8fe24; add esp, 0x38; pop ebx; ret; 
0x00090050: sub edx, dword ptr gs:[0x14]; jne 0x90077; add esp, 0x2c; ret; 
0x000902dc: sub edx, dword ptr gs:[0x14]; jne 0x90307; add esp, 0x2c; ret; 
0x0009054c: sub edx, dword ptr gs:[0x14]; jne 0x90577; add esp, 0x18; pop ebx; ret; 
0x00092226: sub edx, dword ptr gs:[0x14]; jne 0x92234; add esp, 0x28; pop ebx; ret; 
0x000938ae: sub edx, dword ptr gs:[0x14]; jne 0x938bc; add esp, 0x28; pop ebx; ret; 
0x00093e8c: sub edx, dword ptr gs:[0x14]; jne 0x93e9a; add esp, 0x38; pop ebx; ret; 
0x000c41bb: sub edx, dword ptr gs:[0x14]; jne 0xc41ec; add esp, 0x18; pop ebx; ret; 
0x000cad0b: sub edx, dword ptr gs:[0x14]; jne 0xcad27; add esp, 0x28; pop ebx; ret; 
0x000cad8b: sub edx, dword ptr gs:[0x14]; jne 0xcad98; add esp, 0x1c; ret; 
0x000cadd6: sub edx, dword ptr gs:[0x14]; jne 0xcade4; add esp, 0x38; pop ebx; ret; 
0x000cae36: sub edx, dword ptr gs:[0x14]; jne 0xcae44; add esp, 0x48; pop ebx; ret; 
0x000cbf32: sub edx, dword ptr gs:[0x14]; jne 0xcbf79; add esp, 0x28; pop ebx; ret; 
0x000cc2f6: sub edx, dword ptr gs:[0x14]; jne 0xcc318; add esp, 0x38; pop ebx; ret; 
0x000d482f: sub edx, dword ptr gs:[0x14]; jne 0xd483c; add esp, 0x1c; ret; 
0x000d6ebf: sub edx, dword ptr gs:[0x14]; jne 0xd6ecc; add esp, 0x1c; ret; 
0x000d7023: sub edx, dword ptr gs:[0x14]; jne 0xd7062; add esp, 0x28; pop ebx; ret; 
0x000d7242: sub edx, dword ptr gs:[0x14]; jne 0xd7250; add esp, 0x28; pop ebx; ret; 
0x000d8422: sub edx, dword ptr gs:[0x14]; jne 0xd8433; add esp, 0xe8; pop ebx; ret; 
0x000d84a7: sub edx, dword ptr gs:[0x14]; jne 0xd84b5; add esp, 0x38; pop ebx; ret; 
0x000d854e: sub edx, dword ptr gs:[0x14]; jne 0xd855f; add esp, 0xe8; pop ebx; ret; 
0x000d85d7: sub edx, dword ptr gs:[0x14]; jne 0xd85e5; add esp, 0x38; pop ebx; ret; 
0x000da807: sub edx, dword ptr gs:[0x14]; jne 0xda859; add esp, 0x28; pop ebx; ret; 
0x000dd732: sub edx, dword ptr gs:[0x14]; jne 0xdd7e3; add esp, 0x68; pop ebx; ret; 
0x000df3f3: sub edx, dword ptr gs:[0x14]; jne 0xdf449; add esp, 0x28; pop ebx; ret; 
0x000df493: sub edx, dword ptr gs:[0x14]; jne 0xdf4e9; add esp, 0x28; pop ebx; ret; 
0x000e0e64: sub edx, dword ptr gs:[0x14]; jne 0xe0e86; add esp, 0x78; pop ebx; ret; 
0x000e3524: sub edx, dword ptr gs:[0x14]; jne 0xe3546; add esp, 0x78; pop ebx; ret; 
0x000f8554: sub edx, dword ptr gs:[0x14]; jne 0xf8576; add esp, 0x78; pop ebx; ret; 
0x000f9134: sub edx, dword ptr gs:[0x14]; jne 0xf9156; add esp, 0x78; pop ebx; ret; 
0x000b3cf3: sub edx, eax; jbe 0xb3d30; add eax, edi; pop edi; ret; 
0x000b3d06: sub edx, eax; jbe 0xb3d30; lea eax, [edi + eax + 0x10]; pop edi; ret; 
0x000b3d16: sub edx, eax; jbe 0xb3d30; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x000b3d26: sub edx, eax; jbe 0xb3d30; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x0007e86e: sub edx, eax; push edx; push eax; push esi; call dword ptr [edi + 0x38]; 
0x00116ff1: sub edx, eax; test eax, eax; cmovns eax, edx; ret; 
0x000b3a20: sub edx, ecx; jbe 0xb3a50; add eax, ecx; ret; 
0x0007d86e: sub edx, edi; pop edi; pop ebp; mov eax, edx; ret; 
0x0012cb06: sub esi, 1; jae 0x12cae0; add esp, 4; pop ebx; pop esi; ret; 
0x00153751: sub esi, 2; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x0015b180: sub esi, eax; push esi; push eax; push dword ptr [ebx]; call dword ptr [ebx + 8]; 
0x0009c029: sub esi, ebp; dec dword ptr [ebx + 0x18499]; add dh, dh; ret; 
0x000ed558: sub esi, ebx; inc dword ptr [ebx - 0x3fceef3c]; add esp, 8; pop ebx; ret; 
0x00198bc4: sub esi, ebx; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x0008bc33: sub esi, edi; ret; 
0x0009c222: sub esi, esi; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x00109ac1: sub esp, -0x80; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0007cbb8: sub esp, -0x80; pop ebx; pop esi; pop edi; ret; 
0x000df644: sub esp, 0x14; push 0; push 0; call 0xdf5e0; add esp, 0x1c; ret; 
0x00121324: sub esp, 0x14; push 0; push dword ptr [esp + 0x1c]; call 0x121340; add esp, 0x1c; ret; 
0x000489c4: sub esp, 0x14; push 0; push dword ptr [esp + 0x1c]; call 0x48970; add esp, 0x1c; ret; 
0x000808b0: sub esp, 0x14; push 1; call 0x80310; add esp, 0x18; pop ebx; ret; 
0x00146e04: sub esp, 0x14; push 1; push dword ptr [esp + 0x1c]; call 0x146ce0; add esp, 0x1c; ret; 
0x0008bab4: sub esp, 0x14; push 1; push dword ptr [esp + 0x1c]; call 0x8b960; add esp, 0x1c; ret; 
0x0013a7c4: sub esp, 0x14; push 2; push dword ptr [esp + 0x1c]; call 0x139a50; add esp, 0x1c; ret; 
0x00172a20: sub esp, 0x14; push dword ptr [esp + 0x1c]; call 0x1722a0; add esp, 0x18; pop ebx; ret; 
0x00105120: sub esp, 0x14; push dword ptr [esp + 0x1c]; call 0x20140; add esp, 0x18; pop ebx; ret; 
0x00079d50: sub esp, 0x14; push dword ptr [esp + 0x1c]; call 0x70f00; add esp, 0x18; pop ebx; ret; 
0x00119af0: sub esp, 0x14; push dword ptr [esp + 0x20]; call 0x20140; add esp, 0x18; pop ebx; ret; 
0x0008d98e: sub esp, 0x18; lea eax, [eax + 0x3a60]; push eax; call 0x84130; add esp, 0x1c; ret; 
0x0011d32e: sub esp, 0x18; lea eax, [eax + 0x44e4]; push eax; call 0x11d4d0; add esp, 0x1c; ret; 
0x00080f80: sub esp, 0x18; lea eax, [edx + 0x199c]; push eax; call 0x83280; add esp, 0x1c; ret; 
0x0004aa16: sub esp, 0x18; mov ecx, esp; mov ebx, 0x3001; mov eax, 0x180; call dword ptr gs:[0x10]; 
0x001575f4: sub esp, 0x18; push 0; call 0x152e60; add esp, 0x1c; ret; 
0x00038294: sub esp, 0x18; push 0; call 0x37b20; add esp, 0x1c; ret; 
0x001567f4: sub esp, 0x18; push 0xa; call 0x152e60; add esp, 0x1c; ret; 
0x00156474: sub esp, 0x18; push 1; call 0x152e60; add esp, 0x1c; ret; 
0x00155bb4: sub esp, 0x18; push 2; call 0x152e60; add esp, 0x1c; ret; 
0x00154bb4: sub esp, 0x18; push 3; call 0x152e60; add esp, 0x1c; ret; 
0x001557f4: sub esp, 0x18; push 4; call 0x152e60; add esp, 0x1c; ret; 
0x001535b4: sub esp, 0x18; push 5; call 0x152e60; add esp, 0x1c; ret; 
0x00155f54: sub esp, 0x18; push 6; call 0x152e60; add esp, 0x1c; ret; 
0x00157e84: sub esp, 0x18; push 7; call 0x152e60; add esp, 0x1c; ret; 
0x00153c54: sub esp, 0x18; push 8; call 0x152e60; add esp, 0x1c; ret; 
0x001578d4: sub esp, 0x18; push 9; call 0x152e60; add esp, 0x1c; ret; 
0x0007bf70: sub esp, 0x18; push eax; call 0x7f6f0; add esp, 0x1c; ret; 
0x000745b0: sub esp, 0x18; push ecx; call 0x75f80; add esp, 0x1c; ret; 
0x00094214: sub esp, 0x28; mov ebp, dword ptr [esp + 0x3c]; lea ecx, [edi - 0x722c0]; call dword ptr gs:[0x10]; 
0x0002db1c: sub esp, 0x2c; stc; call dword ptr [eax - 0x18]; 
0x0002e95f: sub esp, 0x89000010; ret 0x858b; 
0x0011eef4: sub esp, 0xc; call 0x11ec40; test eax, eax; je 0x11ef08; add esp, 0xc; ret; 
0x00150da0: sub esp, 0xc; lea eax, [ebx + 4]; push eax; call edi; 
0x001611aa: sub esp, 0xc; lea edx, [ebx + 0x38]; push edx; call eax; 
0x001605ea: sub esp, 0xc; lea edx, [ebx + 0x4c]; push edx; call eax; 
0x0015d8cd: sub esp, 0xc; lea edx, [ebx + 0xac]; push edx; call eax; 
0x0015e51e: sub esp, 0xc; lea edx, [edi + 8]; push edx; call eax; 
0x0008fbad: sub esp, 0xc; mov dword ptr [esp + 0x10], edx; push dword ptr [eax + 4]; call dword ptr [eax]; 
0x00075d95: sub esp, 0xc; mov eax, dword ptr [eax + 0x88]; push esi; call dword ptr [eax + 0x34]; 
0x00161f0a: sub esp, 0xc; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x0015dcdd: sub esp, 0xc; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x0016139f: sub esp, 0xc; mov eax, dword ptr [ebp + 0x3c]; push ebx; call dword ptr [eax + 0x10]; 
0x00164749: sub esp, 0xc; mov eax, dword ptr [ebp + 0xc]; push edi; call dword ptr [eax + 0x10]; 
0x000e1480: sub esp, 0xc; mov eax, dword ptr [ebp - 0x19c]; push dword ptr [ebp - 0x198]; call dword ptr [eax + 0x14]; 
0x001059f8: sub esp, 0xc; mov eax, dword ptr [ebp - 0x1ac]; push dword ptr [ebp - 0x1a8]; call dword ptr [eax + 0x14]; 
0x0015892b: sub esp, 0xc; mov eax, dword ptr [ebx + 0x10]; push esi; call dword ptr [eax + 0x10]; 
0x0015aa6a: sub esp, 0xc; mov eax, dword ptr [ebx + 0x2398]; push esi; call dword ptr [eax + 0x10]; 
0x001511ef: sub esp, 0xc; mov eax, dword ptr [ebx + 0xa2ac]; ror eax, 9; xor eax, dword ptr gs:[0x18]; push eax; call edx; 
0x001596d0: sub esp, 0xc; mov eax, dword ptr [ebx + 4]; add esi, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x001590e3: sub esp, 0xc; mov eax, dword ptr [ebx + 4]; push ebx; call dword ptr [eax + 0x10]; 
0x00163c30: sub esp, 0xc; mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 0x14]; 
0x00163b20: sub esp, 0xc; mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 4]; 
0x00162e3d: sub esp, 0xc; mov eax, dword ptr [edi + 4]; push edi; call dword ptr [eax + 0x10]; 
0x0016283f: sub esp, 0xc; mov eax, dword ptr [edx + 0x20]; push edx; call dword ptr [eax + 0x10]; 
0x001593ab: sub esp, 0xc; mov eax, dword ptr [edx + 4]; push edx; call dword ptr [eax + 0x10]; 
0x001589bf: sub esp, 0xc; mov ecx, dword ptr [eax + 0x20]; push eax; call dword ptr [ecx + 0xc]; 
0x00158c9c: sub esp, 0xc; mov ecx, dword ptr [eax + 4]; push eax; call dword ptr [ecx + 0x10]; 
0x00162104: sub esp, 0xc; mov ecx, dword ptr [edx + 4]; push edx; call dword ptr [ecx + 0x10]; 
0x000d996a: sub esp, 0xc; mov edi, dword ptr [ebp - 0x2c]; mov eax, dword ptr [ebp - 0x30]; push esi; call eax; 
0x00158e49: sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x00083d7c: sub esp, 0xc; push 0; call 0x83370; add esp, 0x1c; ret; 
0x000e1776: sub esp, 0xc; push dword ptr [ebp - 0x198]; mov eax, dword ptr [ebp - 0x19c]; call dword ptr [eax + 0x10]; 
0x00105e06: sub esp, 0xc; push dword ptr [ebp - 0x1a8]; mov eax, dword ptr [ebp - 0x1ac]; call dword ptr [eax + 0x10]; 
0x00020f47: sub esp, 0xc; push dword ptr [ebp - 0x34]; call dword ptr [ebp - 0x38]; 
0x0012757b: sub esp, 0xc; push dword ptr [ebx + 0x274]; call 0x20140; add esp, 0x18; pop ebx; ret; 
0x00084ddc: sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x0011d851: sub esp, 0xc; push dword ptr [ebx]; call esi; 
0x0009a560: sub esp, 0xc; push dword ptr [esp + 0x14]; call eax; 
0x0016e53e: sub esp, 0xc; push dword ptr [esp + 0x24]; mov esi, dword ptr [esp + 0x24]; call esi; 
0x0013c87c: sub esp, 0xc; push eax; call 0x16ed20; mov dword ptr [esp], ebp; call esi; 
0x00083624: sub esp, 0xc; push eax; call edx; 
0x00160db8: sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x0015ac4e: sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x00160dcf: sub esp, 0xc; push ebp; call eax; 
0x0015fbb2: sub esp, 0xc; push ebp; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x10]; 
0x0013cb80: sub esp, 0xc; push ebx; call 0x16ed20; mov dword ptr [esp], ebp; call ebx; 
0x0002b872: sub esp, 0xc; push ebx; call 0x16ed20; mov dword ptr [esp], esi; call ebx; 
0x001596b3: sub esp, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x0007df85: sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x00075bb9: sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x0007bfbc: sub esp, 0xc; push ebx; call dword ptr [esi + 0x30]; 
0x0007dde3: sub esp, 0xc; push ebx; call dword ptr [esi + 0x44]; 
0x00022977: sub esp, 0xc; push ecx; call 0x16ed20; mov dword ptr [esp], ebx; mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x00023007: sub esp, 0xc; push ecx; call 0x16ed20; mov dword ptr [esp], ebx; mov ecx, dword ptr [ebp - 0x40]; call ecx; 
0x00159b06: sub esp, 0xc; push edi; call 0x10aec0; mov eax, dword ptr [ebp + 0x20]; mov dword ptr [esp], ebp; call dword ptr [eax + 0x10]; 
0x000da1db: sub esp, 0xc; push edi; call 0x16ed20; add esp, 0x10; mov eax, edi; call eax; 
0x00023737: sub esp, 0xc; push edi; call 0x16ed20; mov dword ptr [esp], ebx; call edi; 
0x00159e4d: sub esp, 0xc; push edi; call eax; 
0x001a0624: sub esp, 0xc; push esi; call 0x16ed20; add ebp, dword ptr [edi + 8]; mov dword ptr [esp], ebp; call esi; 
0x0013c9dc: sub esp, 0xc; push esi; call 0x16ed20; mov dword ptr [esp], ebp; call esi; 
0x00022804: sub esp, 0xc; push esi; call 0x16ed20; mov dword ptr [esp], ebx; call esi; 
0x00158b52: sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x0007ab9d: sub esp, 0xc; push esi; call dword ptr [eax + 0x30]; 
0x0007fd23: sub esp, 0xc; push esi; call dword ptr [ebp + 0x30]; 
0x00173f2f: sub esp, 0xc; push esi; call dword ptr [ebp + 0x44]; 
0x00071485: sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x00073b4e: sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x0007f97e: sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x00174074: sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x0002df0f: sub esp, 0xc; push esi; call eax; 
0x00123726: sub esp, 0xc; push esi; call edx; 
0x00123726: sub esp, 0xc; push esi; call edx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x0015f870: sub esp, 0xc; push esi; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x00159b58: sub esp, 0xc; push esi; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x001434a9: sub esp, 0xc; push esi; mov edx, dword ptr [esp + 0x20]; call edx; 
0x0003ab05: sub esp, 0xc; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [ebp + edi], edx; push dword ptr [ebx + 4]; call eax; 
0x000d6ee4: sub esp, 0xc; xor eax, eax; cmp dword ptr [esp + 0x14], 1; je 0xd6ef8; add esp, 0xc; ret; 
0x000d6fc4: sub esp, 0xc; xor eax, eax; cmp dword ptr [esp + 0x14], 1; je 0xd6fd8; add esp, 0xc; ret; 
0x00133896: sub esp, 0xc; xor ebx, ebx; mov ecx, esp; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000363e0: sub esp, 4; fstp dword ptr [esp]; fld dword ptr [esp]; add esp, 4; ret; 
0x000673b1: sub esp, 4; mov dword ptr [ebp - 0x8ac], ecx; push ebx; push edi; push dword ptr [ebp - 0x87c]; call edx; 
0x00082706: sub esp, 4; mov edx, dword ptr [edx]; push ebx; push eax; push ecx; call edx; 
0x0017802b: sub esp, 4; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x00165575: sub esp, 4; push -1; push ebp; push esi; call edi; 
0x00080732: sub esp, 4; push 0; push 0; push ebx; call dword ptr [ebp + 0x2c]; 
0x00072b00: sub esp, 4; push 0x10; push dword ptr [esp + 8]; push ebx; call dword ptr [eax + 0x1c]; 
0x00074c30: sub esp, 4; push 0x10; push edi; push ebx; call dword ptr [eax + 0x1c]; 
0x00073a90: sub esp, 4; push dword ptr [ebp + 0x14]; push dword ptr [ebp + 0xc]; push esi; call dword ptr [ebx + 0x2c]; 
0x00073340: sub esp, 4; push dword ptr [ebp - 0x1c]; push dword ptr [ebp + 8]; push edx; call dword ptr [ebx + 0x1c]; 
0x000748a5: sub esp, 4; push dword ptr [ebp - 0x1c]; push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x000392a0: sub esp, 4; push dword ptr [esp + 0x10]; push ebp; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0012ceab: sub esp, 4; push dword ptr [esp + 0x18]; push 0; push 0x2000004; call eax; 
0x00171fc3: sub esp, 4; push dword ptr [esp + 0x20]; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x00071a3f: sub esp, 4; push dword ptr [esp + 0x30]; lea ecx, [esp + 0x10]; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x0007c682: sub esp, 4; push dword ptr [esp + 0xc]; push edi; push ebx; call dword ptr [esi + 0x3c]; 
0x00021670: sub esp, 4; push dword ptr [esp + 0xc]; push esi; push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x0007d77f: sub esp, 4; push eax; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x00077be5: sub esp, 4; push eax; push edx; push dword ptr [esp + 0x18]; call ecx; 
0x0007d20d: sub esp, 4; push eax; push edx; push esi; call ecx; 
0x0003913c: sub esp, 4; push ebp; push dword ptr [esp + 0x30]; push esi; call edi; 
0x0007d689: sub esp, 4; push ebp; push dword ptr [esp + 0x3c]; push edi; call dword ptr [esi + 0x20]; 
0x00069992: sub esp, 4; push ebp; push dword ptr [esp + 0x44]; push edi; call dword ptr [eax + 0x1c]; 
0x000698a7: sub esp, 4; push ebp; push dword ptr [esp + 0x44]; push edi; call dword ptr [ebx + 0x1c]; 
0x0006a7b6: sub esp, 4; push ebp; push eax; push esi; mov eax, dword ptr [esp + 0x1c]; call dword ptr [eax + 0x1c]; 
0x00038e34: sub esp, 4; push ebp; push ebx; push esi; call edi; 
0x00074ca2: sub esp, 4; push ebp; push edi; push ebx; mov eax, dword ptr [esp + 0x10]; call dword ptr [eax + 0x1c]; 
0x00038e10: sub esp, 4; push ebp; push esi; push dword ptr [esp + 0x1c]; call edi; 
0x00038de3: sub esp, 4; push ebp; push esi; push dword ptr [esp + 0x30]; call edi; 
0x000671d0: sub esp, 4; push ebx; push dword ptr [ebp - 0x88c]; push dword ptr [ebp - 0x87c]; call dword ptr [edx + 0x1c]; 
0x00065de0: sub esp, 4; push ebx; push dword ptr [esp + 0x14]; push ebp; call dword ptr [eax + 0x1c]; 
0x000719e5: sub esp, 4; push ebx; push dword ptr [esp + 0x1c]; push dword ptr [esi + 0x98]; call eax; 
0x0006d980: sub esp, 4; push ebx; push dword ptr [esp + 0x24]; push ebp; call dword ptr [esi + 0x1c]; 
0x00066a35: sub esp, 4; push ebx; push eax; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x00068b41: sub esp, 4; push ebx; push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x00073907: sub esp, 4; push ebx; push edi; push esi; call dword ptr [eax + 0x2c]; 
0x00066b50: sub esp, 4; push ebx; push edx; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x0006bac8: sub esp, 4; push ebx; push esi; push dword ptr [ebp - 0x8a0]; call dword ptr [eax + 0x1c]; 
0x0006dd69: sub esp, 4; push ebx; push esi; push ebp; call dword ptr [edi + 0x1c]; 
0x0011d780: sub esp, 4; push ecx; push 3; push ebx; call edx; 
0x0017312a: sub esp, 4; push ecx; push dword ptr [esp + 0xc]; push ebx; call dword ptr [ebp + 0x3c]; 
0x0006c061: sub esp, 4; push ecx; push edi; push dword ptr [ebp - 0x8a0]; call edx; 
0x0011d749: sub esp, 4; push edi; push 0; push ebx; call esi; 
0x0011d75d: sub esp, 4; push edi; push 1; push ebx; call esi; 
0x0011d770: sub esp, 4; push edi; push 2; push ebx; call esi; 
0x00071d16: sub esp, 4; push edi; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x00072b73: sub esp, 4; push edi; push dword ptr [esp + 8]; push ebx; call dword ptr [ebp + 0x1c]; 
0x00053856: sub esp, 4; push edi; push ebx; push dword ptr [ebp - 0x88]; call eax; 
0x0006ebc8: sub esp, 4; push edi; push esi; push ebp; call dword ptr [ebx + 0x1c]; 
0x0007c1d0: sub esp, 4; push esi; push dword ptr [esp + 0x28]; push edi; call dword ptr [ebp + 0x1c]; 
0x00068705: sub esp, 4; push esi; push dword ptr [esp + 0x28]; push edi; call dword ptr [ebx + 0x1c]; 
0x00074973: sub esp, 4; push esi; push dword ptr [esp + 0x38]; push edi; call dword ptr [edx + 0x1c]; 
0x0007c352: sub esp, 4; push esi; push ebp; push edi; call dword ptr [edx + 0x1c]; 
0x0007e86b: sub esp, 4; sub edx, eax; push edx; push eax; push esi; call dword ptr [edi + 0x38]; 
0x00162e2c: sub esp, 8; add ecx, 4; mov eax, dword ptr [edi + 4]; push ecx; push edi; call dword ptr [eax + 8]; 
0x0015f230: sub esp, 8; add esi, 0xc; mov eax, dword ptr [ebx + 4]; push esi; push ebx; call dword ptr [eax + 0x24]; 
0x0011b3a0: sub esp, 8; call 0x11b020; mov dword ptr [ebx + 0x4414], eax; add esp, 8; pop ebx; ret; 
0x00084bd5: sub esp, 8; cmp dword ptr [esp + 0x10], 0x20; je 0x84be8; add esp, 8; pop ebx; ret; 
0x00036120: sub esp, 8; fstp qword ptr [esp]; fld qword ptr [esp]; add esp, 8; ret; 
0x0007cb64: sub esp, 8; lea eax, [esp + 0x18]; push eax; push esi; call dword ptr [edi + 0x48]; 
0x0007c7fb: sub esp, 8; lea eax, [esp + 0x28]; push eax; push esi; call dword ptr [edi + 0x48]; 
0x00077791: sub esp, 8; lea eax, [esp + 0x40]; push eax; push dword ptr [esp + 0x18]; call dword ptr [edi + 0x48]; 
0x00070de9: sub esp, 8; lea eax, [esp + 8]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x000d7158: sub esp, 8; lea ecx, [esp + 0x1c]; push ecx; mov dword ptr [esp + 0x18], ecx; push ebx; call eax; 
0x0007faec: sub esp, 8; lea edi, [ecx + 1]; push eax; push edx; mov dword ptr [esp + 0x40], edx; call dword ptr [esi + 0xc]; 
0x00158a46: sub esp, 8; lea edi, [esp + 0x40]; mov ecx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [ecx + 8]; 
0x000e0e78: sub esp, 8; lea edx, [esp + 0x14]; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x001624f5: sub esp, 8; lea edx, [esp + 0x20]; push edx; push eax; call edi; 
0x0007cea4: sub esp, 8; lea edx, [esp + 0x28]; push edx; push esi; call dword ptr [eax + 0x48]; 
0x000d72d2: sub esp, 8; lea edx, [esp + 0xc]; push edx; push ebx; call eax; 
0x00105518: sub esp, 8; lea edx, [esp + 8]; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x001595f8: sub esp, 8; mov dword ptr [ebx], eax; push dword ptr [ebx + 8]; push esi; call dword ptr [ebx + 0xc]; 
0x000cb177: sub esp, 8; mov dword ptr [esp + 0x6c], edi; push ebx; push ebp; mov eax, dword ptr [esp + 0x34]; call eax; 
0x0015db8d: sub esp, 8; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push esi; push eax; call dword ptr [edx + 4]; 
0x001588e0: sub esp, 8; mov eax, dword ptr [ebx + 0x10]; push dword ptr [esp + 0x14]; push esi; call dword ptr [eax + 4]; 
0x0016ea98: sub esp, 8; mov eax, dword ptr [ebx + 0x3a0]; push ecx; push edx; call dword ptr [eax + 0x24]; 
0x0016eb38: sub esp, 8; mov eax, dword ptr [ebx + 0x3a0]; push ecx; push edx; call dword ptr [eax + 0x28]; 
0x00160861: sub esp, 8; mov eax, dword ptr [ebx + 0x50]; lea edx, [esp + 0xac]; push edx; push esi; call dword ptr [eax + 4]; 
0x0015f112: sub esp, 8; mov eax, dword ptr [ebx + 4]; push 8; push ebx; call dword ptr [eax + 0x18]; 
0x0015b098: sub esp, 8; mov eax, dword ptr [ebx + 4]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax + 4]; 
0x0015b048: sub esp, 8; mov eax, dword ptr [ebx + 4]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax]; 
0x0015f190: sub esp, 8; mov eax, dword ptr [ebx + 4]; push esi; push ebx; call dword ptr [eax + 0x24]; 
0x001639e0: sub esp, 8; mov eax, dword ptr [ebx + 8]; push dword ptr [esp + 0x14]; push ebx; call dword ptr [eax]; 
0x00163bcf: sub esp, 8; mov eax, dword ptr [ebx + 8]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax + 0xc]; 
0x0015a455: sub esp, 8; mov eax, dword ptr [edi + 4]; and ebp, 0xfffffffc; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x0015a3d9: sub esp, 8; mov eax, dword ptr [edi + 4]; push 0x20; push edi; call dword ptr [eax + 0x18]; 
0x0015a480: sub esp, 8; mov eax, dword ptr [edi + 4]; push 8; push edi; call dword ptr [eax + 0x18]; 
0x00165e94: sub esp, 8; mov eax, dword ptr [esi + 4]; push ebx; push esi; call dword ptr [eax + 4]; 
0x00158a66: sub esp, 8; mov ecx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [ecx + 8]; 
0x001588fc: sub esp, 8; mov edx, dword ptr [eax + 0x20]; push esi; push eax; call dword ptr [edx + 4]; 
0x0015a4ca: sub esp, 8; mov edx, dword ptr [edi + 4]; and eax, 0xfffffffc; push eax; push edi; call dword ptr [edx + 0x18]; 
0x0007e96e: sub esp, 8; push -1; push dword ptr [eax]; mov eax, dword ptr [ebp - 0x2c]; call dword ptr [eax + 0xc]; 
0x00077503: sub esp, 8; push -1; push dword ptr [edi]; call dword ptr [eax + 0xc]; 
0x0015aabd: sub esp, 8; push 0; push ebx; call dword ptr [eax + 0x14]; 
0x0003a835: sub esp, 8; push 0; push edx; call edi; 
0x0007a29a: sub esp, 8; push 0; push esi; call dword ptr [ebp + 8]; 
0x00070fc5: sub esp, 8; push 0; push esi; call dword ptr [ebx + 8]; 
0x0011dc92: sub esp, 8; push dword ptr [eax]; mov eax, dword ptr [ebp - 0x3c]; push dword ptr [ebp - 0x38]; mov dword ptr [ebp - 0x30], edx; call eax; 
0x0011dbca: sub esp, 8; push dword ptr [ebx]; mov ebp, ebx; push esi; call edi; 
0x00158912: sub esp, 8; push dword ptr [esp + 0x1c]; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00161386: sub esp, 8; push dword ptr [esp + 0x2c]; push ebx; mov eax, dword ptr [esp + 0x18]; call eax; 
0x00058868: sub esp, 8; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x30]; call eax; 
0x0015dba5: sub esp, 8; push dword ptr [esp + 0x3c]; push esi; mov eax, dword ptr [esp + 0x40]; call eax; 
0x0009a5d0: sub esp, 8; push eax; push dword ptr [ebx + 0x24]; call edx; 
0x000e172d: sub esp, 8; push eax; push edi; call esi; 
0x00163c18: sub esp, 8; push ebx; lea edx, [esp + 0x38]; push edx; call dword ptr [eax + 0xc]; 
0x001302dc: sub esp, 8; push ebx; push dword ptr [ebx + 0x30]; call eax; 
0x0007634a: sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x0009a552: sub esp, 8; push ecx; push dword ptr [ebx + 0x24]; call eax; 
0x000d7299: sub esp, 8; push edi; push ebx; call eax; 
0x0009a463: sub esp, 8; push esi; push dword ptr [ebx + 0x24]; call eax; 
0x0013b018: subps xmm7, xmm1; call dword ptr [eax - 0x18]; 
0x000312d5: syscall; 
0x000ad53d: sysret; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00196192: test ah, 0x20; jne 0x196230; lea eax, [edi - 4]; pop edi; ret; 
0x00196d22: test ah, 0x20; jne 0x196dc0; lea eax, [ecx + 0xc]; ret; 
0x00196f62: test ah, 0x20; jne 0x197010; add edx, 0xc; jl 0x197040; lea eax, [ecx + 0xc]; ret; 
0x00197379: test ah, 0x20; jne 0x197430; test ah, 0x40; jne 0x197440; lea eax, [edx + 0xf]; ret; 
0x00195cd6: test ah, 0x40; jne 0x195dc0; lea eax, [edi + 0xf]; pop edi; ret; 
0x00196692: test ah, 0x40; jne 0x1967d0; lea eax, [edi + 0xf]; pop edi; ret; 
0x00197382: test ah, 0x40; jne 0x197440; lea eax, [edx + 0xf]; ret; 
0x00198540: test ah, 0xf0; jne 0x198560; lea eax, [edi - 8]; pop edi; ret; 
0x001982b4: test ah, 0xf; jne 0x1982d0; test dh, 0xf; jne 0x198320; lea eax, [ecx + 0xc]; ret; 
0x001982f0: test ah, 1; jne 0x198310; lea eax, [ecx + 0xc]; ret; 
0x00196169: test ah, 2; jne 0x196200; lea eax, [edi - 8]; pop edi; ret; 
0x00196cf9: test ah, 2; jne 0x196d90; lea eax, [ecx + 8]; ret; 
0x00196f38: test ah, 2; jne 0x196fe0; add edx, 8; jl 0x197040; lea eax, [ecx + 8]; ret; 
0x00197350: test ah, 2; jne 0x197400; test ah, 4; jne 0x197410; lea eax, [edx + 0xb]; ret; 
0x00196669: test ah, 4; jne 0x1967a0; lea eax, [edi + 0xb]; pop edi; ret; 
0x00197359: test ah, 4; jne 0x197410; lea eax, [edx + 0xb]; ret; 
0x0011f974: test ah, al; or eax, dword ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; sbb dword ptr [edx - 7], edx; call dword ptr [eax + 0x57]; 
0x00156e0f: test ah, cl; add dword ptr [eax], eax; add byte ptr [ebx - 0x13b7d], cl; jmp dword ptr [ebp - 0x75]; 
0x000250e4: test ah, dh; add dword ptr [eax], eax; add byte ptr [ebx - 0x7ce3dbbc], cl; ret 0x8301; 
0x000f1f59: test ah, dl; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000b3734: test al, 0; add byte ptr [eax], al; add eax, edi; add eax, ecx; pop edi; ret; 
0x00196f04: test al, 0; add byte ptr [eax], al; add edx, 4; jl 0x197040; lea eax, [ecx + 4]; ret; 
0x001116fc: test al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00197334: test al, 0; add byte ptr [eax], al; lea eax, [edx + 7]; ret; 
0x0010a7bb: test al, 0; add byte ptr [eax], al; mov eax, 0x133; call dword ptr gs:[0x10]; 
0x001116c8: test al, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0010a659: test al, 0; add byte ptr [eax], al; mov esi, dword ptr [esp + 0xac]; call dword ptr gs:[0x10]; 
0x0015db52: test al, 0; add byte ptr [eax], al; push dword ptr [esp + 0x2c]; push esi; call dword ptr [eax + 0xc]; 
0x00037553: test al, 0x13; add byte ptr [ecx + 0x1f2aaac6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x00196140: test al, 0x20; jne 0x1961d0; lea eax, [edi - 0xc]; pop edi; ret; 
0x00196cd0: test al, 0x20; jne 0x196d60; lea eax, [ecx + 4]; ret; 
0x00196f00: test al, 0x20; jne 0x196fb0; add edx, 4; jl 0x197040; lea eax, [ecx + 4]; ret; 
0x00197328: test al, 0x20; jne 0x1973d0; test al, 0x40; jne 0x1973e0; lea eax, [edx + 7]; ret; 
0x00098572: test al, 0x31; ror byte ptr [ebp - 0x17efd4bc], cl; ret 0xffcf; 
0x00195c84: test al, 0x40; jne 0x195d50; lea eax, [edi + 7]; pop edi; ret; 
0x00196640: test al, 0x40; jne 0x196770; lea eax, [edi + 7]; pop edi; ret; 
0x00196cc8: test al, 0x40; jne 0x196d70; test al, 0x20; jne 0x196d60; lea eax, [ecx + 4]; ret; 
0x00197330: test al, 0x40; jne 0x1973e0; lea eax, [edx + 7]; ret; 
0x0011f6f6: test al, 0x4c; stc; call dword ptr [eax + 0x57]; 
0x00087c14: test al, 0x7d; cli; dec dword ptr [ebx - 0x7872dbc4]; movsb byte ptr es:[edi], byte ptr [esi]; jg 0x87c19; call dword ptr [eax + 0x68]; 
0x001240b8: test al, 0x83; in al, dx; or byte ptr [ebp - 0x65d2779], cl; call dword ptr [eax + 0x55]; 
0x00119c17: test al, 0x83; ret 0xbb03; 
0x000a0c8f: test al, 0x83; ret 0xf01; 
0x0015a20c: test al, 0x83; ret; 
0x000912b6: test al, 0x83; stc; call dword ptr [eax - 0x73]; 
0x001a08da: test al, 0x85; sal byte ptr [edx + ecx - 0x77], cl; inc esp; and al, 8; call edx; 
0x00075db4: test al, 0x88; add byte ptr [eax], al; add byte ptr [ebp + 0x84b8], cl; add byte ptr [ebp - 0x9fa8b37], al; ret 0x7408; 
0x0007759b: test al, 0x8d; and byte ptr [eax], 0x7d; stc; call dword ptr [eax - 0x73]; 
0x000c271d: test al, 0x97; stc; call dword ptr [edx - 0x73]; 
0x000e58d0: test al, 0x9a; stc; call dword ptr [eax - 0x73]; 
0x0008919c: test al, 0xa; add byte ptr [ebx - 0x72f3db8c], cl; xchg byte ptr [ecx + eax*4 - 7], dl; call dword ptr [eax - 0x73]; 
0x0015284c: test al, 0xae; stc; call dword ptr [eax - 0x73]; 
0x001358bc: test al, 0xee; jmp dword ptr [ebp - 0x75]; 
0x00198475: test al, 0xf0; jne 0x198530; lea eax, [edi - 0x10]; pop edi; ret; 
0x0015a47a: test al, 0xf5; inc dword ptr [ebx - 0x137cef3c]; or byte ptr [ebx + 0x86a0447], cl; push edi; call dword ptr [eax + 0x18]; 
0x00140ccd: test al, 0xf9; call dword ptr [eax - 0x18]; 
0x001400c7: test al, 0xf9; call dword ptr [eax - 0x73]; 
0x001981da: test al, 0xf; jne 0x1982a0; test dl, 0xf; jne 0x198320; lea eax, [ecx + 4]; ret; 
0x00045183: test al, 0xfe; dec dword ptr [ebx - 0x72ebdb84]; xchg dword ptr [esi + esi*2 - 7], ebx; call dword ptr [eax + 0x68]; 
0x0013913f: test al, 0xff; jmp dword ptr [esi - 0x70]; 
0x0008bdc3: test al, 1; je 0x8be00; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x001982e4: test al, 1; jne 0x198300; lea eax, [ecx + 4]; ret; 
0x0008d0b4: test al, 1; jne 0x8d08a; mov eax, 0x10; pop ebx; ret; 
0x0019611b: test al, 2; jne 0x1961a0; lea eax, [edi - 0x10]; pop edi; ret; 
0x00196b4b: test al, 2; jne 0x196d30; mov eax, ecx; ret; 
0x00196e59: test al, 2; jne 0x196f80; add edx, 0; jl 0x197040; mov eax, ecx; ret; 
0x00197305: test al, 2; jne 0x1973a0; test al, 4; jne 0x1973b0; lea eax, [edx + 3]; ret; 
0x0019661d: test al, 4; jne 0x196740; lea eax, [edi + 3]; pop edi; ret; 
0x00196b43: test al, 4; jne 0x196d40; test al, 2; jne 0x196d30; mov eax, ecx; ret; 
0x0019730d: test al, 4; jne 0x1973b0; lea eax, [edx + 3]; ret; 
0x00021755: test al, 6; adc eax, 0x88a70500; and byte ptr [eax], al; lea eax, [eax - 0x6921c]; ret; 
0x0004b078: test al, al; add al, byte ptr [eax]; add byte ptr [eax], al; call 0x4b030; add eax, ebx; jmp eax; 
0x0016c1bb: test al, al; add byte ptr [eax], al; add byte ptr [ebx - 0x6c72f714], al; clc; stc; call dword ptr [edx - 0x77]; 
0x00154d93: test al, al; add byte ptr [eax], al; add byte ptr [ebx], al; je 0x154dbf; cmp al, 0x89; ret; 
0x001982e0: test al, al; je 0x1982f0; test al, 1; jne 0x198300; lea eax, [ecx + 4]; ret; 
0x0008e4af: test al, al; je 0x8e4c0; xor eax, eax; add esp, 8; pop ebx; ret; 
0x00141b45: test al, al; jne 0x141b50; pop ebx; pop esi; pop edi; ret; 
0x00171ae0: test al, al; jne 0x171b04; mov eax, 4; add esp, 0xc; ret; 
0x001a1246: test al, al; jne 0x1a1250; add esp, 4; pop ebx; pop esi; ret; 
0x000b5414: test al, al; jne 0xb540c; xor eax, eax; ret; 
0x000e5a90: test al, al; jne 0xe5a61; xor eax, eax; ret; 
0x00024150: test al, dh; add byte ptr [eax], al; add byte ptr [ecx - 0x76ff7439], cl; ret 0xce80; 
0x00071bd7: test bh, 4; add dl, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x000cd474: test bh, al; add al, 0; add byte ptr [ebx - 0x7c72f714], al; cmp al, 0x45; stc; call dword ptr [eax + 0x56]; 
0x000e6864: test bh, al; add eax, dword ptr [eax]; add byte ptr [eax - 0x7bf0a205], al; add al, 0; add byte ptr [eax - 0x6bf0a305], al; ret 0x5422; 
0x000d9479: test bh, ch; add dword ptr [eax], eax; add byte ptr [ebx - 0x13345], cl; jmp dword ptr [ebp - 0x75]; 
0x0011f98f: test bh, ch; or eax, dword ptr [eax]; add byte ptr [ebp - 0x6adc37d], cl; call dword ptr [ecx + 0x51]; 
0x001236fc: test bh, cl; fucompi st(7); call dword ptr [ebx + 0x56]; 
0x0002d1ba: test bh, dh; call dword ptr [eax - 0x18]; 
0x0002cf40: test bh, dh; call dword ptr [ebp + 3]; 
0x0002dd9e: test bh, dh; call dword ptr [esi - 1]; 
0x000a6a34: test bh, dl; idiv bh; inc dword ptr [eax + 0xf000d79]; test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0014ba2f: test bl, al; add al, byte ptr [eax]; add dh, dh; ret 0xf08; 
0x00172110: test bl, bh; add byte ptr [eax], al; add byte ptr [ebx - 0x1337d], cl; jmp dword ptr [ebp - 0x75]; 
0x00049040: test bl, bl; add al, 0; add byte ptr [ecx], dh; rol byte ptr [ebx + 0x440ffff8], cl; ret 0x3c83; 
0x000299be: test bl, bl; add eax, dword ptr [eax]; add byte ptr [ebx - 0x72bbdb8c], cl; xchg byte ptr [eax + 0x69], ah; stc; call dword ptr [eax - 0x73]; 
0x0013c4b8: test bl, dh; add byte ptr [eax], al; add byte ptr [ebx - 0x1337d], cl; jmp dword ptr [ebp + 3]; 
0x000645ee: test bl, dh; or al, 0; add byte ptr [ebx - 0x50f63], cl; call ecx; 
0x0004710f: test byte ptr [0x39000004], ah; ret; 
0x0002c172: test byte ptr [0x83000001], bl; in al, dx; or byte ptr [ebp - 0x6d38d6d], cl; call dword ptr [edx + 0x50]; 
0x0011f6b6: test byte ptr [0x83000005], ah; in al, dx; or byte ptr [ebp - 0x6b1e17d], cl; call dword ptr [eax + 0x57]; 
0x0008b02b: test byte ptr [0xb8000004], al; lock add byte ptr [eax], al; add byte ptr [ecx + 8], bh; mov esi, edx; call dword ptr gs:[0x10]; 
0x0002fd88: test byte ptr [eax + 0x200], dl; ret; 
0x0005efa3: test byte ptr [eax + 0x2bffffb6], ah; test dword ptr [eax - 0x7c000005], edi; in al, dx; or al, 0x89; ret; 
0x000fc45b: test byte ptr [eax + 0xf000004], dl; mov esi, 0x83df89ca; ret; 
0x000eb56f: test byte ptr [eax + eax - 0x137d0000], bl; or byte ptr [ebp - 0x6c15b7d], cl; call dword ptr [eax + 0x55]; 
0x000ccfcf: test byte ptr [eax + eax - 0x137d0000], cl; or byte ptr [ebp - 0x6baf47d], cl; call dword ptr [eax + 0x56]; 
0x0005fd07: test byte ptr [eax + eax - 0x7a750000], al; mov eax, 0x8bfffffb; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xf001; 
0x00100058: test byte ptr [eax + eax - 0x7b750000], bl; and al, 0xd0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x001601cf: test byte ptr [eax + eax - 0x7c730000], ch; add cl, byte ptr [edx - 7]; call dword ptr [esi + 0x57]; 
0x0002948b: test byte ptr [eax + eax*4], ah; add byte ptr [eax], al; add byte ptr [eax - 1], dl; je 0x294b9; push dword ptr fs:[esp + 0x64]; call edi; 
0x0002a883: test byte ptr [eax + eax*4], ah; add byte ptr [eax], al; add byte ptr [eax - 1], dl; je 0x2a8b1; push dword ptr fs:[esp + 0x64]; call edi; 
0x00197ab1: test byte ptr [eax + eax], bh; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x0007a1b7: test byte ptr [eax + ebp*8], ah; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp - 0x189f7d], cl; call dword ptr [eax - 0x73]; 
0x0014c35a: test byte ptr [eax + ecx*4], ah; add byte ptr [eax], al; add byte ptr [ebx + 0x1008b11], cl; ret 0x5052; 
0x0014c495: test byte ptr [eax + ecx*4], ah; add byte ptr [eax], al; add byte ptr [ebx + 0x1008b17], cl; ret 0x5052; 
0x000388cf: test byte ptr [eax + edi*4], ah; add byte ptr [eax], al; add byte ptr [ecx - 0x47dfdbbc], cl; mov dl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010005e: test byte ptr [eax + edx*8], ah; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000db931: test byte ptr [eax - 0x16000002], bh; ret 0xfffc; 
0x00197a61: test byte ptr [eax - 0x48000000], bh; or byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x00097183: test byte ptr [eax - 0x76fffffb], bh; ret 0x708d; 
0x00189e05: test byte ptr [eax - 0x7cffffed], dh; ret 0x8308; 
0x0011f959: test byte ptr [eax - 0x7cfffff5], al; in al, dx; or byte ptr [ebp - 0x6ae097d], cl; call dword ptr [eax + 0x57]; 
0x000f39bb: test byte ptr [eax - 0x7cfffffe], al; rol byte ptr [ecx], 0x39; ret 0xe775; 
0x0010cc00: test byte ptr [eax - 0x7d000000], ah; in al, dx; or al, 0x8d; and dword ptr [edi + 0x4a], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00192035: test byte ptr [eax - 0x7d000000], ch; in eax, dx; or byte ptr [edi], cl; test byte ptr [edi - 0x7d000000], bl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x0012db23: test byte ptr [eax - 0x7d000000], dl; ret 0x8801; 
0x00104883: test byte ptr [eax - 0x9fffffc], bl; ret 0xf20; 
0x001316b3: test byte ptr [eax - 7], bl; call dword ptr [ecx + 0x52]; 
0x00029cf5: test byte ptr [eax - 7], dh; call dword ptr [eax - 0x73]; 
0x0009ba01: test byte ptr [eax*4 + 0x10974c0], ch; ret; 
0x0007eef8: test byte ptr [eax], 0x80; jne 0x7ef00; ret; 
0x0007b088: test byte ptr [eax], 4; sete al; movzx eax, al; ret; 
0x0007b0a8: test byte ptr [eax], 8; sete al; movzx eax, al; ret; 
0x00075587: test byte ptr [eax], ah; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp - 0x19bf7d], cl; call dword ptr [eax - 0x73]; 
0x00087d86: test byte ptr [eax], al; add byte ptr [eax], al; and eax, 0x10; jne 0x87d98; add esp, 0xc; ret; 
0x000df5bb: test byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00116334: test byte ptr [eax], al; add byte ptr [eax], al; lea ecx, [eax + 0x5402]; mov eax, edi; call dword ptr gs:[0x10]; 
0x00122e87: test byte ptr [eax], al; add byte ptr [eax], al; lea ecx, [esp + 0xc]; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x00122ec3: test byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x6c; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000625c9: test byte ptr [eax], dh; sub eax, dword ptr [eax]; add byte ptr [ebx - 0x50f7b], cl; call ecx; 
0x0002ffd9: test byte ptr [eax], dl; add dword ptr [eax], eax; add byte ptr [ebx], ah; inc esp; and al, 8; ret; 
0x0016f006: test byte ptr [ebp + 0x50282444], -0x73; xchg dword ptr [eax + 0x4d], esi; hlt; call dword ptr [eax - 0x73]; 
0x00052b2b: test byte ptr [ebp + 0xb504], 0; add byte ptr [edi], cl; dec esi; ret 0xec83; 
0x0011f707: test byte ptr [ebp + eax - 0x137d0000], dl; or byte ptr [ebp - 0x6b2ed7d], cl; call dword ptr [eax + 0x57]; 
0x0005e35f: test byte ptr [ebp + ecx], bh; add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xf001; 
0x00167fec: test byte ptr [ebp - 0x72b00000], ah; add dword ptr [esi + 0x62], -7; call dword ptr [eax + 0x6a]; 
0x0019e20e: test byte ptr [ebp - 0x76fffff6], bl; ret 0xea83; 
0x0016fa16: test byte ptr [ebp - 0x76ffffff], ah; ret 0xb60f; 
0x0011f78e: test byte ptr [ebp - 0x7cfffff9], cl; in al, dx; or byte ptr [ebp - 0x6b1a37d], cl; call dword ptr [eax + 0x57]; 
0x000cd4fe: test byte ptr [ebp - 0x7cfffffd], bh; in al, dx; or byte ptr [ebp - 0x6d5a47d], cl; call dword ptr [eax + 0x56]; 
0x000df04e: test byte ptr [ebp - 0x7d000000], bh; ret; 
0x0009a45e: test byte ptr [ebp - 0x7d000000], dh; in al, dx; or byte ptr [esi - 1], dl; jae 0x9a48e; call eax; 
0x000415ac: test byte ptr [ebp - 7], dh; call dword ptr [eax - 0x18]; 
0x0009a5f6: test byte ptr [ebx + 0x28], 1; jne 0x9a5d0; sub esp, 0xc; push eax; call edx; 
0x0011c990: test byte ptr [ebx + 0x39000000], ch; ret; 
0x0011cf60: test byte ptr [ebx + 0x39000000], dh; ret; 
0x0002265b: test byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x00083296: test byte ptr [ebx + 0x650c245c], -1; adc eax, 0x10; pop ebx; pop esi; ret; 
0x00022f88: test byte ptr [ebx + 0x6b000001], ah; ret 0x8b3c; 
0x000f6032: test byte ptr [ebx + 0xf000001], ah; mov dh, 0x43; add al, 0x89; ret 0xe283; 
0x000fd86b: test byte ptr [ebx + 0xf00000f], al; mov dh, 0x4a; or cl, ch; ret 0xfff8; 
0x000b3860: test byte ptr [ebx + 1], bl; add byte ptr [eax], al; bsr eax, eax; add eax, edi; pop edi; ret; 
0x0016c82f: test byte ptr [ebx + eax - 0x137d0000], bl; or byte ptr [ebp - 0x69a1645], cl; call dword ptr [edi + 0x55]; 
0x0010f6c7: test byte ptr [ebx + eax], ah; add byte ptr [ebx - 0x47fee383], al; push es; add byte ptr [eax], al; add byte ptr [ecx - 0x277c9912], cl; jmp dword ptr [esi - 0x77]; 
0x0015a765: test byte ptr [ebx - 0x264], cl; mov dword ptr [esp + 0x10], edx; pop ebx; pop esi; jmp eax; 
0x0009828c: test byte ptr [ebx - 0x69720007], dl; lds eax, ptr [eax - 7]; call dword ptr [eax - 0x73]; 
0x0019df9c: test byte ptr [ebx - 0x76000004], dl; ret; 
0x001597b8: test byte ptr [ebx - 0x77000000], bl; ret; 
0x00065e60: test byte ptr [ebx - 0x7b000000], dl; ror byte ptr [edi], 0x84; ret; 
0x00049c53: test byte ptr [ebx - 0x7c00000f], ch; ret; 
0x0016d060: test byte ptr [ebx - 0x7d000000], bl; in al, dx; or byte ptr [ebp - 0x69a076a], cl; call dword ptr [edx - 0x77]; 
0x000dea7e: test byte ptr [ebx - 0x7d000000], ch; ret 0x8904; 
0x00191d50: test byte ptr [ebx - 0x7d000000], cl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x0016c1a0: test byte ptr [ebx - 0x7d000000], dh; in al, dx; or byte ptr [ebp - 0x699ea55], cl; call dword ptr [ebp + 0x56]; 
0x00191763: test byte ptr [ebx - 0x86b80], al; sub eax, ecx; pop ebp; pop ebx; ret; 
0x0018ef56: test byte ptr [ebx - 0x86b80], al; sub eax, ecx; pop ebx; ret; 
0x00084f93: test byte ptr [ebx - 0xe7fdbf4], -0x7f; mov dword ptr [ebp + edx*4 + 8], 0; mov edx, 0x7fffffff; call dword ptr gs:[0x10]; 
0x0016c121: test byte ptr [ebx - 0xf76fb3c], 0x5b; pop esi; ret; 
0x0006d48f: test byte ptr [ebx - 1], bh; dec dword ptr [edi]; mov dh, 0x57; or al, 0xf6; ret 0xf08; 
0x00160db0: test byte ptr [ebx], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x137cafb9], cl; or al, 0x55; call dword ptr [eax + 0x10]; 
0x000f7d54: test byte ptr [ebx], al; pushal; cld; clc; call dword ptr [eax - 0x73]; 
0x000c5e70: test byte ptr [ebx], bh; adc dword ptr [eax], eax; add byte ptr [ebp + 0xff189ff], al; xchg ebp, eax; ret 0xbeb; 
0x0011f9a9: test byte ptr [ebx], bl; or al, 0; add byte ptr [ebp - 0x6ad9f7d], cl; call dword ptr [edx + 0x52]; 
0x0002c190: test byte ptr [ebx], cl; add dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f714], al; js 0x2c1c8; stc; call dword ptr [eax - 1]; 
0x0002dd9b: test byte ptr [ebx], cl; inc eax; test bh, dh; call dword ptr [esi - 1]; 
0x000e6d08: test byte ptr [ebx], dh; add dword ptr [eax], eax; add byte ptr [eax - 0x7af0d107], al; cmp bl, 0xff; jmp dword ptr [ebp - 0x5f]; 
0x00104c29: test byte ptr [ebx], dh; add dword ptr [eax], eax; add byte ptr [ebx - 0x13f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x00034f58: test byte ptr [ebx], dl; add dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f314], al; mov dh, 0x2c; stc; call dword ptr [eax - 0x18]; 
0x0009bffa: test byte ptr [ecx + 0x184], 1; lea edx, [edx - 0xaf040]; cmove eax, edx; ret; 
0x00131bfa: test byte ptr [ecx + 0x184], 1; lea edx, [edx - 0xaf060]; cmove eax, edx; ret; 
0x0009c0da: test byte ptr [ecx + 0x184], 1; lea edx, [edx - 0xaf660]; cmove eax, edx; ret; 
0x0009b3aa: test byte ptr [ecx + 0x184], 4; lea edx, [edx - 0x187980]; cmove eax, edx; ret; 
0x00167fc0: test byte ptr [ecx + 0x458b9045], cl; sbb byte ptr [ecx - 0x837b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000b5ac0: test byte ptr [ecx + 0x7d], 2; cmovne eax, edx; ret; 
0x0009b423: test byte ptr [ecx + 0x7d], 2; lea edx, [edx - 0x179f20]; cmovne eax, edx; ret; 
0x0009af63: test byte ptr [ecx + 0x7d], 2; lea edx, [edx - 0x17c220]; cmovne eax, edx; ret; 
0x0009c1d3: test byte ptr [ecx + 0x7d], 2; lea edx, [edx - 0x181c10]; cmovne eax, edx; ret; 
0x0009c183: test byte ptr [ecx + 0x7d], 2; lea edx, [edx - 0x183480]; cmovne eax, edx; ret; 
0x0009b4b3: test byte ptr [ecx + 0x7d], 2; lea edx, [edx - 0x186000]; cmovne eax, edx; ret; 
0x0009b073: test byte ptr [ecx + 0x7d], 2; lea edx, [edx - 0x187850]; cmovne eax, edx; ret; 
0x0009b0b0: test byte ptr [ecx + 0x7e], 0x10; cmovne eax, edx; ret; 
0x0008a37d: test byte ptr [ecx + 0x80e1], 0; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0002dbb7: test byte ptr [ecx + eax], bl; add byte ptr [ebx - 0x1337d], cl; jmp dword ptr [ebp - 0x75]; 
0x0012d29a: test byte ptr [ecx + edx*2 + 1], 0x40; cmovne eax, edx; pop ebx; ret; 
0x000e4b32: test byte ptr [ecx - 0x44fffffa], al; das; add byte ptr [eax], al; add byte ptr [ebx - 0x46b73], cl; jmp dword ptr [esi - 0x77]; 
0x000e2492: test byte ptr [ecx - 0x44fffffa], dl; das; add byte ptr [eax], al; add byte ptr [ebx - 0x46b73], cl; jmp dword ptr [esi - 0x77]; 
0x0005b992: test byte ptr [ecx - 0x74ffffec], ah; test dword ptr [eax - 0x74000005], edi; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xd801; 
0x0017b051: test byte ptr [ecx - 0x769905be], 0x42; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0004e07a: test byte ptr [ecx - 0x76fffffd], dl; ret; 
0x0011f881: test byte ptr [ecx - 0x7cfffff7], ch; in al, dx; or byte ptr [ebp - 0x6afb77d], cl; call dword ptr [eax + 0x57]; 
0x0007e232: test byte ptr [ecx - 0x7cffffff], dh; in al, dx; or byte ptr [ebp - 0x6c19a7b], cl; call dword ptr [eax - 0x75]; 
0x000a259b: test byte ptr [ecx - 0x8a0], dl; ret; 
0x001412b5: test byte ptr [ecx - 0x8f7b], cl; dec dword ptr [ecx - 0x9373]; jmp dword ptr [ebp - 0x5f]; 
0x000a256b: test byte ptr [ecx - 0x9c0], dl; ret; 
0x0006fd3e: test byte ptr [ecx - 0xbe0], dl; ret; 
0x0009f4b5: test byte ptr [ecx], 0; add byte ptr [ebx + 0x29142454], cl; ret 0x8b90; 
0x0013689d: test byte ptr [ecx], 0; add byte ptr [ebx - 0x1334a], cl; jmp dword ptr [ebp - 0x75]; 
0x0002f978: test byte ptr [ecx], ah; or edi, edi; call dword ptr [edx + 0x52]; 
0x0009b3ac: test byte ptr [ecx], al; add byte ptr [eax], al; add al, 0x8d; xchg edx, eax; add byte ptr [esi + 0x440fffe7], 0xc2; ret; 
0x0009db9c: test byte ptr [ecx], al; add byte ptr [eax], al; add al, 0x8d; xchg edx, eax; shl byte ptr [ecx + 0x440fffe8], 1; ret 0x66c3; 
0x0009bffc: test byte ptr [ecx], al; add byte ptr [eax], al; add dword ptr [ebp - 0xaf03f6e], ecx; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x00131bfc: test byte ptr [ecx], al; add byte ptr [eax], al; add dword ptr [ebp - 0xaf05f6e], ecx; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x0009c0dc: test byte ptr [ecx], al; add byte ptr [eax], al; add dword ptr [ebp - 0xaf65f6e], ecx; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x00195548: test byte ptr [ecx], al; add byte ptr [eax], al; pop ebx; ret; 
0x0013f1fa: test byte ptr [ecx], al; ret 0x3883; 
0x00150e7a: test byte ptr [ecx], dh; add dword ptr [eax], eax; add byte ptr [ebp - 0x69f0b7d], cl; call dword ptr [eax - 0x73]; 
0x000584dc: test byte ptr [ecx], dh; stc; call dword ptr [eax - 0x18]; 
0x000a6a8a: test byte ptr [ecx], dl; idiv bh; inc dword ptr [eax + 0xf000a79]; test byte ptr [edi], al; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0005e006: test byte ptr [edi + 0x2bffffc5], bl; test dword ptr [eax - 0x7c000005], edi; in al, dx; or al, 0x89; ret; 
0x0002290e: test byte ptr [edi + 0x6b000000], dl; ret 0x893c; 
0x000dceb1: test byte ptr [edi + edi*8 - 1], cl; push dword ptr [ecx]; fucomi st(1); ret; 
0x000fef83: test byte ptr [edi - 0x16000003], cl; ret; 
0x00174114: test byte ptr [edi - 0x75000000], dl; outsb dx, byte ptr [esi]; or bh, dh; ret 0x202; 
0x0004e054: test byte ptr [edi - 0x76fffffd], ah; ret; 
0x00172165: test byte ptr [edi - 0x77000000], dl; ret 0xe283; 
0x0019203e: test byte ptr [edi - 0x7d000000], bl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x000868c2: test byte ptr [edi - 7], bh; call dword ptr [eax + 0x68]; 
0x0013b7ad: test byte ptr [edi*8 - 0x137c0001], cl; or byte ptr [ebp - 0x6a8876d], cl; dec dword ptr [ecx - 0x48b7b]; call dword ptr [edi + 0x52]; 
0x001951e3: test byte ptr [edi], -0x4a; push esi; imul byte ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x0005cee0: test byte ptr [edi], -0x61; ret 0xd629; 
0x00044e45: test byte ptr [edi], -0x6b; ret 0x5409; 
0x00060c82: test byte ptr [edi], -0x6b; ret 0xff83; 
0x000f4796: test byte ptr [edi], -0x6c; ret 0xd008; 
0x0003f6d9: test byte ptr [edi], -0x78; ret; 
0x00062a34: test byte ptr [edi], -0x7b; nop; jecxz 0x62a39; dec dword ptr [ebx - 0x4f37b]; jmp dword ptr [ebp - 0x75]; 
0x0014a524: test byte ptr [edi], -0x7b; paddw mm7, mm7; dec dword ptr [ebx - 0x74e7dbbc]; pop eax; or dh, dh; ret; 
0x000c8023: test byte ptr [edi], -0x7b; pushfd; add al, byte ptr [eax]; add byte ptr [ebx - 0x36477b], al; jmp eax; 
0x00060977: test byte ptr [edi], -0x7b; ret 0xfffc; 
0x000573b3: test byte ptr [edi], -0x7b; ret; 
0x00050373: test byte ptr [edi], -0x7b; sti; add al, byte ptr [eax]; add byte ptr [ebx - 0x364f7b], al; jmp eax; 
0x000b6793: test byte ptr [edi], -0x7c; push ss; add dword ptr [eax], eax; add byte ptr [ebx - 0x677b], cl; jmp dword ptr [ebp - 0x75]; 
0x000ad456: test byte ptr [edi], 0; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000dde1a: test byte ptr [edi], 0x44; ret 0x8d50; 
0x00053fa0: test byte ptr [edi], 0x49; ret; 
0x000a6a94: test byte ptr [edi], al; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0002d1b7: test byte ptr [edi], al; pushal; test bh, dh; call dword ptr [eax - 0x18]; 
0x0011f7c4: test byte ptr [edi], bl; or byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; les ecx, ptr [esi - 7]; call dword ptr [eax + 0x57]; 
0x00061d84: test byte ptr [edi], ch; adc byte ptr [eax], al; add byte ptr [ecx], al; ret; 
0x00033c37: test byte ptr [edi], ch; add eax, dword ptr [eax]; add byte ptr [ebp - 0x7cffd98c], cl; in al, dx; or al, 0x83; ret; 
0x00148ec4: test byte ptr [edi], cl; idiv bh; dec dword ptr [ebx + 0x39702444]; ret 0x840f; 
0x000b58e1: test byte ptr [edx + 0x185], 0x80; je 0xb58f1; or dword ptr [eax + 0x3be0], 1; xor eax, eax; pop ebx; ret; 
0x001322d1: test byte ptr [edx - 0x76ffffff], bl; ret; 
0x0016f8e6: test byte ptr [edx - 0x77000000], dh; ret 0xe283; 
0x0011f815: test byte ptr [edx - 0x7cfffff8], dl; in al, dx; or byte ptr [ebp - 0x6b0797d], cl; call dword ptr [eax + 0x57]; 
0x00034d91: test byte ptr [edx - 0x7d000000], bh; in al, dx; or byte ptr [ebp - 0x6d05d7b], cl; call dword ptr [eax + 0x53]; 
0x000eb421: test byte ptr [edx - 0x7d000000], bl; in al, dx; or byte ptr [ebp - 0x6b7a97d], cl; call dword ptr [eax + 0x55]; 
0x00195149: test byte ptr [edx - 0xa000000], ah; ret 0x7501; 
0x000a5bd6: test byte ptr [edx], 0; add byte ptr [edi + 0x5b], bl; ret; 
0x00156a44: test byte ptr [edx], ch; add eax, dword ptr [eax]; add byte ptr [ebx - 0x7c72f314], al; les esp, ptr [edx - 7]; call dword ptr [eax - 0x18]; 
0x00026930: test byte ptr [esi + 0x29000003], dh; fmul dword ptr [ecx - 0x76fe743e]; ret; 
0x0008aa12: test byte ptr [esi + edi*8 - 1], dh; dec dword ptr [ebp - 0x6937f7b]; call dword ptr [eax - 0x73]; 
0x0006b9df: test byte ptr [esi - 0x73660], al; lea eax, [esi + eax - 0x1bea21]; jmp eax; 
0x00066951: test byte ptr [esi - 0x73a60], al; lea eax, [esi + eax - 0x1c3ae9]; jmp eax; 
0x0005ccc5: test byte ptr [esi - 0x74ffffdf], dh; test dword ptr [eax - 0x74000005], edi; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xd801; 
0x0007d6fa: test byte ptr [esi - 0x75000000], bh; inc esi; add al, 0x8b; push esi; or byte ptr [ecx], ch; ret 0xfa39; 
0x0019e273: test byte ptr [esi - 0x76fffff0], dl; ret 0xea83; 
0x0003563f: test byte ptr [esi - 0x76fffffe], dl; ret 0x98eb; 
0x0014caba: test byte ptr [esi - 0x7c000002], al; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0002e90b: test byte ptr [esi - 0x7c000007], dh; in al, dx; or byte ptr [ebp - 0x1af7b], cl; call dword ptr [eax - 1]; 
0x0002d055: test byte ptr [esi - 0x7cffffff], ah; in al, dx; or byte ptr [ebp - 0x68d1b79], cl; call dword ptr [eax + 0x56]; 
0x000b4e41: test byte ptr [esi - 0x8ffffff], cl; ret 3; 
0x00118338: test byte ptr [esi - 0xf], dh; jmp dword ptr [esi - 0x70]; 
0x00023776: test byte ptr [esi - 7], ch; call dword ptr [eax - 0x73]; 
0x00022839: test byte ptr [esi - 7], ch; call dword ptr [edx - 0x73]; 
0x00080177: test byte ptr [esi], 0x80; jne 0x801a8; add esp, 4; pop ebx; pop esi; ret; 
0x00075d90: test byte ptr [esi], 2; jne 0x75df8; sub esp, 0xc; mov eax, dword ptr [eax + 0x88]; push esi; call dword ptr [eax + 0x34]; 
0x0002cf3d: test byte ptr [esi], bl; aas; test bh, dh; call dword ptr [ebp + 3]; 
0x000b6795: test byte ptr [esi], dl; add dword ptr [eax], eax; add byte ptr [ebx - 0x677b], cl; jmp dword ptr [ebp - 0x75]; 
0x00068c51: test byte ptr [esp + eax*8], ah; add byte ptr [eax], al; add byte ptr [eax - 0x18], dl; ret; 
0x000cb7af: test byte ptr [esp + ebp*8], ah; add byte ptr [eax], al; add byte ptr [eax - 0x75], dl; inc esp; and al, 0x5c; call eax; 
0x00046fc1: test byte ptr [esp + ebx*4 - 0x77000000], cl; xchg esp, eax; and al, 0x84; add byte ptr [eax], al; add cl, ch; ret; 
0x0008ebd6: test byte ptr [esp + ebx*4], ah; add byte ptr [eax], al; add dh, dh; ret 0xf02; 
0x0006860c: test byte ptr [esp + ebx*8], ah; add al, 0; add byte ptr [ebx - 0x1337f], cl; jmp dword ptr [ebp - 0x75]; 
0x0019dbea: test byte ptr [esp + ecx*4], ah; add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ret 0x940b; 
0x0004d4b7: test byte ptr [esp + ecx*4], ah; add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ror byte ptr [edi], 0x95; ret; 
0x000d28d7: test byte ptr [esp + edi*4], ah; add byte ptr [eax], al; add byte ptr [ecx - 0x76d7dbbc], cl; ret 0xa165; 
0x000da02b: test byte ptr [esp + esi*2], ah; add al, 0; add byte ptr [ebx + 0x24448901], cl; sub byte ptr [ebp - 0x6ba6179], cl; call dword ptr [eax + 0x53]; 
0x000cba27: test byte ptr [esp + esi*4], ah; add byte ptr [eax], al; add byte ptr [eax - 0x75], dl; inc esp; and al, 0x5c; call eax; 
0x00091bce: test byte ptr [esp + esi*4], ah; add byte ptr [eax], al; add byte ptr [ecx - 0x47dfdbbc], cl; mov dl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001547e4: test byte ptr [esp + esi*8], ah; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x840f; 
0x0010463d: test byte ptr [esp], ah; add dword ptr [eax], eax; add byte ptr [eax + 0xaf], bh; call dword ptr gs:[0x10]; 
0x0018b194: test ch, 0x40; jne 0x18b160; movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x0004e2c1: test ch, ah; and al, byte ptr [eax]; add byte ptr [eax - 0x363743], al; jmp dword ptr [ebp + 0xf]; 
0x00197a08: test ch, bh; add byte ptr [eax], al; add byte ptr [eax + 4], bh; pop edi; ret; 
0x0011f908: test ch, ch; or al, byte ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; jb 0x11f965; stc; call dword ptr [eax + 0x57]; 
0x000a6a3e: test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x001273e7: test ch, dl; add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x8389; 
0x0018b0eb: test cl, 0x40; jne 0x18b160; movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x000931c3: test cl, 0x40; jne 0x931e8; add ebx, 1; mov eax, 0x115; call dword ptr gs:[0x10]; 
0x0011fa5f: test cl, ah; or eax, 0x838d0000; push ebx; push esp; stc; call dword ptr [edx + 0x52]; 
0x0011f722: test cl, bh; add eax, 0xec830000; or byte ptr [ebp - 0x6b2997d], cl; call dword ptr [eax + 0x57]; 
0x0009267b: test cl, bh; call dword ptr [eax + 0x68]; 
0x0009268e: test cl, bh; call dword ptr [eax - 0x18]; 
0x00091ce0: test cl, bh; call dword ptr [eax - 0x73]; 
0x000945df: test cl, bh; call dword ptr [ebp + 0x51]; 
0x000b38e2: test cl, bl; add byte ptr [eax], al; add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x00078532: test cl, cl; add byte ptr [eax], al; add byte ptr [ebp + 0x4889044a], cl; adc byte ptr [ecx - 0x9ec74ce], cl; ret 0x7402; 
0x0003e731: test cl, cl; cmove eax, edx; add esp, 4; pop ebx; pop esi; ret; 
0x0010533b: test cl, cl; jne 0x10531e; xor eax, eax; pop ebx; ret; 
0x00107abb: test cl, cl; jne 0x107a9e; xor eax, eax; pop ebx; ret; 
0x000a1af2: test cl, cl; jne 0xa1ae8; mov dword ptr [esi], edx; pop ebx; pop esi; ret; 
0x000e0c9b: test cl, cl; jne 0xe0c7e; xor eax, eax; pop ebx; ret; 
0x000e335b: test cl, cl; jne 0xe333e; xor eax, eax; pop ebx; ret; 
0x000f838b: test cl, cl; jne 0xf836e; xor eax, eax; pop ebx; ret; 
0x000f8f6b: test cl, cl; jne 0xf8f4e; xor eax, eax; pop ebx; ret; 
0x001959a5: test dh, 0x20; jne 0x1959f0; test dh, 0x40; jne 0x1959f4; add eax, 0xf; ret; 
0x001959aa: test dh, 0x40; jne 0x1959f4; add eax, 0xf; ret; 
0x00195bf7: test dh, 0x40; jne 0x195dd0; lea eax, [edi + 0xf]; pop edi; ret; 
0x001977b2: test dh, 0x40; jne 0x197b41; add eax, 0xf; pop edi; ret; 
0x001982b9: test dh, 0xf; jne 0x198320; lea eax, [ecx + 0xc]; ret; 
0x0019598c: test dh, 2; jne 0x1959e0; test dh, 4; jne 0x1959e4; add eax, 0xb; ret; 
0x00195991: test dh, 4; jne 0x1959e4; add eax, 0xb; ret; 
0x00195c3d: test dh, 4; jne 0x195dd0; lea eax, [edi + 0xb]; pop edi; ret; 
0x00197789: test dh, 4; jne 0x197b2d; add eax, 0xb; pop edi; ret; 
0x00197a4e: test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x0019ab07: test dh, bl; add al, 0; add byte ptr [ebx - 0x7ac3dbbc], cl; ror byte ptr [edi], 0x84; ret; 
0x00043fb6: test dh, ch; add eax, dword ptr [eax]; add byte ptr [ecx], bh; ret; 
0x001981d5: test dh, dl; add byte ptr [eax], al; add byte ptr [eax - 0x417af0f1], ch; add byte ptr [eax], al; add dh, dh; ret 0xf0f; 
0x00195965: test dl, 0x20; jne 0x1959d0; test dl, 0x40; jne 0x1959d4; add eax, 7; ret; 
0x0019596a: test dl, 0x40; jne 0x1959d4; add eax, 7; ret; 
0x00195b54: test dl, 0x40; jne 0x195dd0; lea eax, [edi + 7]; pop edi; ret; 
0x00197762: test dl, 0x40; jne 0x197b19; add eax, 7; pop edi; ret; 
0x000c5b13: test dl, 0xa; add byte ptr [ecx + 0x1644e9c7], al; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x001981e2: test dl, 0xf; jne 0x198320; lea eax, [ecx + 4]; ret; 
0x00195946: test dl, 2; jne 0x1959c0; test dl, 4; jne 0x1959c4; add eax, 3; ret; 
0x0019594b: test dl, 4; jne 0x1959c4; add eax, 3; ret; 
0x00195b9a: test dl, 4; jne 0x195dd0; lea eax, [edi + 3]; pop edi; ret; 
0x0019773c: test dl, 4; jne 0x197b05; add eax, 3; pop edi; ret; 
0x0004f70d: test dl, ah; idiv bh; inc dword ptr [ebx - 0x41f0fe18]; adc byte ptr [ebx - 0x362743], al; call dword ptr [eax]; 
0x0013b9cb: test dl, bh; add al, byte ptr [eax]; add byte ptr [ebx - 0x1337a], cl; jmp dword ptr [ebp - 0x75]; 
0x0015103e: test dl, bh; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf00220], al; ret; 
0x000286d2: test dl, bl; add byte ptr [eax], al; add byte ptr [ebx - 0x76dfdb8c], cl; ret 0x542b; 
0x00151e7c: test dl, bl; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x840f; 
0x0010e9c1: test dl, ch; add byte ptr [eax], al; add byte ptr [ebx - 0x67cd7bb], cl; add ecx, dword ptr [edi]; xchg esp, eax; ret; 
0x000c9e75: test dl, dl; je 0xc9e90; mov cl, dl; and cl, 0xf; je 0xc9ea0; ret; 
0x00034eb8: test dl, dl; jne 0x34e99; ret; 
0x0009e852: test dl, dl; mov edx, 0; cmove eax, edx; ret; 
0x00024858: test dl, dl; movzx eax, dl; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x000a60b7: test dword ptr [0x5bfffffe], edx; ret; 
0x000a5f8f: test dword ptr [0x5bffffff], edi; ret; 
0x000abbfe: test dword ptr [0x5f000009], ebx; pop esi; pop ebx; ret; 
0x0010146d: test dword ptr [0x7c8b0000], 0x878d1024; movsb byte ptr es:[edi], byte ptr [esi]; sahf; stc; call dword ptr [eax - 0x73]; 
0x000fc7d6: test dword ptr [0x83fffffe], ecx; in al, dx; or byte ptr [ebx - 0x72ebdbbc], cl; adc byte ptr [edx], 0x49; stc; call dword ptr [eax + 0x56]; 
0x0005f240: test dword ptr [0x8b000002], ebp; test dword ptr [edx + edi*8 - 1], esp; jmp dword ptr [ebp - 0x75]; 
0x0005e3c2: test dword ptr [0x8bfffff1], ecx; test dword ptr [edx + edi*8 - 1], esp; jmp dword ptr [ebp - 0x75]; 
0x000aa826: test dword ptr [0xe9fffff5], esp; pushal; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000a6346: test dword ptr [0xe9fffff6], eax; inc eax; idiv edi; jmp dword ptr [esi + 0xf]; 
0x000a6326: test dword ptr [0xe9fffff6], esp; pushal; idiv edi; jmp dword ptr [esi + 0xf]; 
0x00077cb9: test dword ptr [eax + 0x29ffffe3], esp; ret 0xf989; 
0x0005f208: test dword ptr [eax + 0x2bfffffb], ebp; test dword ptr [eax + 0x39fffffb], edi; ret 0x1875; 
0x0006b221: test dword ptr [eax + 0x39fffff7], eax; ret; 
0x0005f20e: test dword ptr [eax + 0x39fffffb], edi; ret 0x1875; 
0x000ce087: test dword ptr [eax + 0x45], eax; stc; call dword ptr [eax - 0x18]; 
0x000a5d2b: test dword ptr [eax + 0x5f000001], esp; pop ebx; ret; 
0x000a5c33: test dword ptr [eax + 0x5f000002], ebx; pop ebx; ret; 
0x000b3edb: test dword ptr [eax + 0x66000000], esi; pmovmskb eax, mm1; bsr eax, eax; add eax, ecx; ret; 
0x000ad1eb: test dword ptr [eax + 0xa], esp; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00192b51: test dword ptr [eax + 2], edx; add byte ptr [eax], al; pop ebx; ret; 
0x000abbdb: test dword ptr [eax + 9], eax; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00192451: test dword ptr [eax + 9], edx; add byte ptr [eax], al; pop ebx; ret; 
0x00195c7f: test dword ptr [eax + eax + 0x40a80000], edi; jne 0x195d50; lea eax, [edi + 7]; pop edi; ret; 
0x000c9bf7: test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x00191d47: test dword ptr [eax + eax - 0x67d0000], esp; add byte ptr [edi], cl; test byte ptr [ebx - 0x7d000000], cl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x0008aa2b: test dword ptr [eax + eax*4 - 7], edx; call dword ptr [eax - 0x18]; 
0x00140e30: test dword ptr [eax + ebp*4 - 7], ecx; call dword ptr [eax - 0x73]; 
0x000abc5f: test dword ptr [eax + ecx + 0x5e5f0000], edi; pop ebx; ret; 
0x000abca7: test dword ptr [eax + ecx], esi; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0005d2a4: test dword ptr [eax - 0x39ffffeb], ebp; test dword ptr [edx + edi*8 - 1], eax; jmp dword ptr [ebp - 0x75]; 
0x0014e629: test dword ptr [eax - 0x53], ebp; stc; call dword ptr [eax - 0x73]; 
0x0019732b: test dword ptr [eax - 0x58000000], esp; inc eax; jne 0x1973e0; lea eax, [edx + 7]; ret; 
0x000e096c: test dword ptr [eax - 0x66], ebx; stc; call dword ptr [eax - 0x73]; 
0x000e0988: test dword ptr [eax - 0x66], esi; stc; call dword ptr [eax - 0x73]; 
0x00197333: test dword ptr [eax - 0x73000000], ebp; inc edx; pop es; ret; 
0x00196143: test dword ptr [eax - 0x73000000], ecx; inc edi; hlt; pop edi; ret; 
0x0005b998: test dword ptr [eax - 0x74000005], edi; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xd801; 
0x0005e365: test dword ptr [eax - 0x74000005], edi; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xf001; 
0x00100d00: test dword ptr [eax - 0x76000005], edx; ret 0x8589; 
0x0004f049: test dword ptr [eax - 0x76000037], edi; ret 0xe283; 
0x000c62a7: test dword ptr [eax - 0x76000037], edi; test dword ptr [eax - 0x76000037], esi; ret; 
0x000c62ad: test dword ptr [eax - 0x76000037], esi; ret; 
0x00196b2b: test dword ptr [eax - 0x77ffffff], esi; ret 0xe280; 
0x0005f238: test dword ptr [eax - 0x7a000005], ebp; ror byte ptr [edi], 0x85; sub eax, 0x8b000002; test dword ptr [edx + edi*8 - 1], esp; jmp dword ptr [ebp - 0x75]; 
0x00100a69: test dword ptr [eax - 0x7c000005], ecx; in al, dx; or al, 0x8d; xor cl, 0x47; stc; call dword ptr [eax - 0x18]; 
0x000f75af: test dword ptr [eax - 0x7c000005], ecx; ret 0x8301; 
0x0005d4d5: test dword ptr [eax - 0x7c000005], edi; in al, dx; or al, 0x89; ret; 
0x000e2711: test dword ptr [eax - 0x7c000005], edx; in al, dx; or al, 0x8d; xor cl, 0x47; stc; call dword ptr [eax - 0x18]; 
0x00196f03: test dword ptr [eax - 0x7d000000], ebp; ret 0xf04; 
0x0015e2bf: test dword ptr [eax - 0x7d000000], esi; in al, dx; or al, 0x56; call dword ptr [eax + 0x10]; 
0x00193913: test dword ptr [eax - 0x7d000000], esi; ret 0x6610; 
0x00167a3d: test dword ptr [eax], 0x4d8b0000; add byte ptr [ebx - 0x74bbdbac], cl; inc ecx; or byte ptr [ecx], bh; ret 0x5175; 
0x001670f8: test dword ptr [eax], 0x838d0000; push ss; stc; call dword ptr [ebp + 0x6a]; 
0x00072305: test dword ptr [eax], 0xec830000; add al, 0x57; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x000e0285: test dword ptr [eax], 0xec830000; or al, 0x89; ret; 
0x000a5ccb: test dword ptr [eax], eax; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x000952f8: test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], al; fidivr dword ptr [ecx]; ret 0xa72; 
0x000c28c0: test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x1a8b; 
0x000c2fc5: test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x28b; 
0x000c2e78: test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x3a8b; 
0x000c2c54: test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xa8b; 
0x0010b1ab: test dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0006fd37: test dword ptr [eax], eax; add byte ptr [eax], al; ja 0x6fd44; mov eax, dword ptr [ecx + edx*4 - 0xbe0]; ret; 
0x0006d67a: test dword ptr [eax], eax; add byte ptr [ebx - 0x77cef3c], al; dec dword ptr [edi]; test dword ptr [edi - 0x16000020], eax; and cl, 0xff; jmp dword ptr [esi - 0x70]; 
0x0002da3f: test dword ptr [eax], eax; add eax, 0x748dd375; add dh, dh; ret 0x7503; 
0x000d1a67: test dword ptr [eax], ebp; loope 0xd1a6a; call dword ptr [edi + 0x57]; 
0x00085059: test dword ptr [eax], ebp; mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; call dword ptr gs:[0x10]; 
0x00154b01: test dword ptr [eax], ebp; scasd eax, dword ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x0006c1e1: test dword ptr [eax], ebx; idiv edi; call dword ptr [ebx - 0x18]; 
0x0006b102: test dword ptr [eax], ebx; idiv edi; dec dword ptr [ecx - 0x8d743]; jmp dword ptr [ebp - 0x5f]; 
0x000ad233: test dword ptr [eax], ebx; or al, byte ptr [eax]; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000e27aa: test dword ptr [eax], ecx; add byte ptr [eax], al; add byte ptr [ebx - 0x46f63], cl; call dword ptr [esi + 0x52]; 
0x000e4e42: test dword ptr [eax], ecx; add byte ptr [eax], al; add byte ptr [ebx - 0x47363], cl; call dword ptr [esi + 0x52]; 
0x0006bdaf: test dword ptr [eax], edi; idiv edi; call dword ptr [eax]; 
0x0006704f: test dword ptr [eax], edi; idiv edi; call dword ptr [esi - 0x18]; 
0x0006c5ce: test dword ptr [eax], edi; idiv edi; dec dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret; 
0x0006c963: test dword ptr [eax], edi; idiv edi; dec dword ptr [edx]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret; 
0x000dfa84: test dword ptr [eax], edi; jmp 0xdfa87; call dword ptr [eax + 0x52]; 
0x001400c5: test dword ptr [eax], esp; test al, 0xf9; call dword ptr [eax - 0x73]; 
0x0007e23b: test dword ptr [ebp + 0x3e], esp; stc; call dword ptr [eax - 0x75]; 
0x00193f3e: test dword ptr [ebp + 0x5b000000], edi; ret; 
0x00192bfc: test dword ptr [ebp + 0x5b000001], esp; ret; 
0x00192a1c: test dword ptr [ebp + 0x5b000003], eax; ret; 
0x001924ec: test dword ptr [ebp + 0x5b000008], esi; ret; 
0x000ad296: test dword ptr [ebp + 0x5f000009], esi; pop esi; pop ebx; ret; 
0x0013925c: test dword ptr [ebp + 0x6afff95a], ebp; add eax, 0xcc858d50; jb 0x139262; call dword ptr [eax - 0x18]; 
0x0013227c: test dword ptr [ebp + 0xf], edi; add byte ptr [ebx - 0x7f72e714], al; mov ch, 0x58; stc; call dword ptr [eax - 0x18]; 
0x00192846: test dword ptr [ebp + 5], eax; add byte ptr [eax], al; pop ebx; ret; 
0x000abf8f: test dword ptr [ebp + eax + 0x5e5f0000], ecx; pop ebx; ret; 
0x000abf5f: test dword ptr [ebp + eax + 0x5e5f0000], edi; pop ebx; ret; 
0x000aa7c6: test dword ptr [ebp - 0x1600000b], eax; sal dh, 0xff; jmp dword ptr [esi + 0xf]; 
0x00195b36: test dword ptr [ebp - 0x57fffffe], edx; and byte ptr [edi], cl; test ebp, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x00196ca6: test dword ptr [ebp - 0x58000000], edx; add cl, byte ptr [edi]; test dword ptr [ebp], edi; add byte ptr [eax], al; mov eax, ecx; ret; 
0x00196ed6: test dword ptr [ebp - 0x58000000], esi; add cl, byte ptr [edi]; test dword ptr [ebp - 0x7d000000], ebx; ret 0xf00; 
0x00196196: test dword ptr [ebp - 0x73000000], edx; inc edi; cld; pop edi; ret; 
0x00025ede: test dword ptr [ebp - 0x75000000], edx; je 0x25f0a; cmp al, 0x8d; xchg byte ptr [eax + 0x6a], ah; stc; call dword ptr [eax - 0x73]; 
0x00085926: test dword ptr [ebp - 0x77000000], esi; ret 0xca83; 
0x00196c56: test dword ptr [ebp - 0x78000000], eax; ret 0xe280; 
0x00196ede: test dword ptr [ebp - 0x7d000000], ebx; ret 0xf00; 
0x00122175: test dword ptr [ebp - 0x7d000000], edx; les esp, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x00196f66: test dword ptr [ebp - 0x7d000000], esp; ret 0xf0c; 
0x00120e05: test dword ptr [ebp - 7], edx; call dword ptr [eax - 0x18]; 
0x0019611e: test dword ptr [ebp], edi; add byte ptr [eax], al; lea eax, [edi - 0x10]; pop edi; ret; 
0x00196cae: test dword ptr [ebp], edi; add byte ptr [eax], al; mov eax, ecx; ret; 
0x001391ec: test dword ptr [ebx + 0x2a], ebx; stc; call dword ptr [eax + 0x53]; 
0x000b4bac: test dword ptr [ebx + 0x5e000000], ebx; xor eax, eax; pop ebx; ret; 
0x000ad4a8: test dword ptr [ebx + 0x5f000007], esp; pop esi; pop ebx; ret; 
0x0009b34c: test dword ptr [ebx + 0x6afff943], esi; add eax, 0xcc858d50; jb 0x9b352; call dword ptr [eax - 0x18]; 
0x000c9b50: test dword ptr [ebx + 1], ecx; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x00195b58: test dword ptr [ebx + 2], esi; add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x00192618: test dword ptr [ebx + 7], esi; add byte ptr [eax], al; pop ebx; ret; 
0x000ad4d8: test dword ptr [ebx + 7], esi; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000abbc0: test dword ptr [ebx + 9], ebx; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000a5baf: test dword ptr [ebx + eax], ebx; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x00144e6b: test dword ptr [ebx + edi*8 + 0x458bffff], edi; and byte ptr [ecx - 0x4477b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00144e62: test dword ptr [ebx + edi*8 + 0x458bffff], esi; sbb al, 0x89; test dword ptr [ebx + edi*8 + 0x458bffff], edi; and byte ptr [ecx - 0x4477b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000e4da9: test dword ptr [ebx + edi*8 - 0x137c0001], ecx; or al, 0x8d; xor cl, 0x47; stc; call dword ptr [eax - 0x18]; 
0x0017973a: test dword ptr [ebx + edi*8 - 0x53170001], edx; ret 0xfff6; 
0x00127123: test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x000e2ecd: test dword ptr [ebx + edi*8 - 1], ebp; dec dword ptr [ecx]; ret 0x840f; 
0x001270e1: test dword ptr [ebx + edi*8 - 1], ecx; call ecx; 
0x0013b7bc: test dword ptr [ebx + edi*8 - 1], esi; call dword ptr [edi + 0x52]; 
0x000e1d47: test dword ptr [ebx + edi*8 - 1], esi; inc dword ptr [eax]; add byte ptr [eax], al; add cl, ch; ret 3; 
0x000302c2: test dword ptr [ebx + esi*2 - 7], edx; dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x001661e8: test dword ptr [ebx + esi*4 - 7], eax; call dword ptr [eax - 0x73]; 
0x000ac667: test dword ptr [ebx + esi*8 - 1], esi; jmp dword ptr [esi + 0xf]; 
0x0006f980: test dword ptr [ebx - 0x16000003], edx; ret; 
0x00125c3b: test dword ptr [ebx - 0x44ebdbb4], 0xd; mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0002140a: test dword ptr [ebx - 0x6f74ffe0], 0xffffff48; test edx, edx; je 0x21419; ret; 
0x00055ff1: test dword ptr [ebx - 0x7c000009], ecx; ret; 
0x0019778d: test dword ptr [ebx - 0x7cfffffd], ebx; ror byte ptr [ebx], 0x5f; ret; 
0x00093d8f: test dword ptr [ebx - 0x7d000000], ebx; les esp, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x00116d8c: test dword ptr [ebx - 0x7d000000], esp; les ebx, ptr [eax]; mov eax, ebx; pop ebx; ret; 
0x0016f588: test dword ptr [ebx - 0x7d000000], esp; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0016627e: test dword ptr [ebx - 0x7d000000], esp; les edx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000aa098: test dword ptr [ebx - 0x7ffffffe], edx; cmp byte ptr [ecx], al; sbb eax, -1; pop edi; pop ebx; ret; 
0x0019772e: test dword ptr [ebx - 0xa000000], ecx; ret 0xf02; 
0x0011cf0b: test dword ptr [ebx - 7], ecx; call dword ptr [eax - 1]; 
0x0019c549: test dword ptr [ebx], 0xf1c247c; xchg ebp, eax; ret 0xd789; 
0x00192a1d: test dword ptr [ebx], eax; add byte ptr [eax], al; pop ebx; ret; 
0x000ad348: test dword ptr [ebx], eax; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00057428: test dword ptr [ebx], ebp; add dword ptr [eax], eax; add byte ptr [ebx + 0x48903e8], al; and al, 0xf6; ret 0xf20; 
0x000a6200: test dword ptr [ebx], ebp; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000a6220: test dword ptr [ebx], ecx; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000592f1: test dword ptr [ebx], ecx; xor bh, cl; call dword ptr [esi - 0x77]; 
0x000ad210: test dword ptr [ebx], edi; or al, byte ptr [eax]; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0007e5b7: test dword ptr [ebx], edi; stc; call dword ptr [eax - 0x18]; 
0x000caec7: test dword ptr [ebx], esp; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000590ae: test dword ptr [ecx + 0x32], eax; stc; call dword ptr [ecx + 0x50]; 
0x000e0662: test dword ptr [ecx + 0x47], eax; stc; call dword ptr [eax - 0x18]; 
0x00192720: test dword ptr [ecx + 0x5b000006], eax; ret; 
0x000a612b: test dword ptr [ecx + 0x5bfffffd], esp; ret; 
0x000a6033: test dword ptr [ecx + 0x5bfffffe], ebx; ret; 
0x000c9c12: test dword ptr [ecx + 0x5f000000], ecx; pop esi; ret; 
0x000abc82: test dword ptr [ecx + 0x5f000008], ebx; pop esi; pop ebx; ret; 
0x00193eb2: test dword ptr [ecx + 1], ecx; add byte ptr [eax], al; pop ebx; ret; 
0x00196bfa: test dword ptr [ecx + 2], esi; add byte ptr [eax], al; xor eax, eax; ret; 
0x000abdb2: test dword ptr [ecx + 7], ebp; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000ad2d2: test dword ptr [ecx + 9], edi; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000c9b97: test dword ptr [ecx + eax], eax; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x000ee157: test dword ptr [ecx + eax], ebx; add byte ptr [ebp - 0x74ffd98c], cl; inc esi; add al, 0x83; ret; 
0x000c9b67: test dword ptr [ecx + eax], esi; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x000c68de: test dword ptr [ecx + ecx*8 - 0x137c0001], esi; or byte ptr [ebp - 0x35f48], cl; call dword ptr [edi + 0x53]; 
0x000fe04a: test dword ptr [ecx + edi*8 - 1], eax; call dword ptr [eax - 0x73]; 
0x000fe857: test dword ptr [ecx + edi*8 - 1], ebx; call dword ptr [eax - 0x73]; 
0x000fde02: test dword ptr [ecx + edi*8 - 1], ebx; call dword ptr [eax - 0x75]; 
0x000fef79: test dword ptr [ecx + edi*8 - 1], ebx; inc dword ptr [eax]; add byte ptr [eax], al; add byte ptr [edi], cl; test byte ptr [edi - 0x16000003], cl; ret; 
0x0008766a: test dword ptr [ecx - 0x72000005], edi; lea ebp, [edx + eax]; add byte ptr [eax], al; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x000bf7e4: test dword ptr [ecx - 0x74ffffea], edx; xchg esp, eax; and al, 0x88; add byte ptr [eax], al; add byte ptr [ebx - 0x76f7dbbc], cl; ret; 
0x0008c7b1: test dword ptr [ecx - 0x77000000], edx; ret 0xf283; 
0x000fd863: test dword ptr [ecx - 0x7a000008], edi; dec dword ptr [edi]; test byte ptr [ebx + 0xf00000f], al; mov dh, 0x4a; or cl, ch; ret 0xfff8; 
0x00171b7a: test dword ptr [ecx - 0x7c001509], ecx; les ecx, ptr [eax]; xor eax, eax; pop ebx; ret; 
0x00190830: test dword ptr [ecx - 0x7cfffff2], ebp; std; adc byte ptr [ebp - 0x79f00f93], cl; call dword ptr [eax]; 
0x00159185: test dword ptr [ecx - 0x7d000000], ebx; les esi, ptr [ebx + ebx*2]; pop esi; ret; 
0x00125ff8: test dword ptr [ecx - 0x7d000000], edx; les esp, ptr [eax + 0x5b]; pop esi; pop edi; ret; 
0x001183d2: test dword ptr [ecx - 0x7d000000], esp; in al, dx; or al, 0x89; ret; 
0x0019784a: test dword ptr [ecx - 0xa000000], esi; ret 0xf04; 
0x00136052: test dword ptr [ecx - 7], ebx; call dword ptr [eax - 0x18]; 
0x00136205: test dword ptr [ecx - 7], ebx; call dword ptr [eax - 0x73]; 
0x000ad432: test dword ptr [ecx], ebx; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000f9220: test dword ptr [ecx], esi; or byte ptr [eax], al; add byte ptr [ebx - 0x17a8f314], al; ret 0xfdf5; 
0x000ad31a: test dword ptr [ecx], esi; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00071282: test dword ptr [ecx], esp; add dword ptr [eax], eax; add byte ptr [ebx - 0x7472f314], al; pushal; out 0xff, eax; call dword ptr [ecx + 0x52]; 
0x00058ef3: test dword ptr [edi + 0x32], ebx; stc; call dword ptr [eax + 0x56]; 
0x000592ac: test dword ptr [edi + 0x32], ecx; stc; call dword ptr [ecx + 0x50]; 
0x00097b82: test dword ptr [edi + 0x39000001], ebx; ret; 
0x000e0998: test dword ptr [edi + 0x47], ebx; stc; call dword ptr [eax - 0x18]; 
0x000a6015: test dword ptr [edi + 0x5bfffffe], esi; ret; 
0x000c9bdc: test dword ptr [edi + 0x5f000000], edi; pop esi; ret; 
0x000ad6bc: test dword ptr [edi + 0x5f000005], ecx; pop esi; pop ebx; ret; 
0x000ad68c: test dword ptr [edi + 0x5f000005], edi; pop esi; pop ebx; ret; 
0x000ad3ac: test dword ptr [edi + 0x5f000008], ebx; pop esi; pop ebx; ret; 
0x000ad2b4: test dword ptr [edi + 0x5f000009], edx; pop esi; pop ebx; ret; 
0x000ad6ec: test dword ptr [edi + 5], ebx; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000ad3dc: test dword ptr [edi + 8], ebp; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000abd8f: test dword ptr [edi + eax + 0x5e5f0000], ecx; pop ebx; ret; 
0x00192695: test dword ptr [edi + eax], ecx; add byte ptr [eax], al; pop ebx; ret; 
0x000d6719: test dword ptr [edi + edi*8 - 1], eax; call dword ptr [ebx - 1]; 
0x000d66b2: test dword ptr [edi + edi*8 - 1], eax; call dword ptr [esi - 1]; 
0x00127cf5: test dword ptr [edi + edi*8 - 1], eax; dec dword ptr [ebp - 0x10257f80]; call dword ptr [eax + 0x6a]; 
0x001419c9: test dword ptr [edi + edi*8 - 1], eax; dec dword ptr [ebx - 0xa363]; dec dword ptr [ebp + 0x48d4004]; ret; 
0x00053714: test dword ptr [edi + edi*8 - 1], eax; dec dword ptr [edi]; scasd eax, dword ptr es:[edi]; ret; 
0x0011b93a: test dword ptr [edi + edi*8 - 1], ebp; call dword ptr [eax - 0x18]; 
0x000e02ab: test dword ptr [edi + edi*8 - 1], ebp; dec dword ptr [ebp - 0x76e5f8bc]; loope 0xe0240; ret 0x25; 
0x0013ead3: test dword ptr [edi + edi*8 - 1], ebp; jmp dword ptr [ebp - 0x75]; 
0x0013e819: test dword ptr [edi + edi*8 - 1], ebp; jmp dword ptr [esi - 0x77]; 
0x0016a70c: test dword ptr [edi + edi*8 - 1], ebx; call dword ptr [eax + 0x6a]; 
0x00167fb6: test dword ptr [edi + edi*8 - 1], ebx; dec dword ptr [ebx + 0x55891445]; test byte ptr [ecx + 0x458b9045], cl; sbb byte ptr [ecx - 0x837b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0005b346: test dword ptr [edi + edi*8 - 1], ecx; dec dword ptr [ebx - 0x45773]; inc dword ptr [ebp - 0x74818a37]; test dword ptr [edx + edi*8 - 1], esp; jmp dword ptr [ebp - 0x75]; 
0x000549b7: test dword ptr [edi + edi*8 - 1], edi; call dword ptr [eax + 0x50]; 
0x0011b992: test dword ptr [edi + edi*8 - 1], edi; call dword ptr [eax - 0x73]; 
0x0005417d: test dword ptr [edi + edi*8 - 1], edi; call dword ptr [edx - 0x73]; 
0x00167fc8: test dword ptr [edi + edi*8 - 1], edi; jmp dword ptr [ebp - 0x5f]; 
0x00141ebc: test dword ptr [edi + edi*8 - 1], edi; jmp dword ptr [esi - 0x7f]; 
0x00141494: test dword ptr [edi + edi*8 - 1], edx; call dword ptr [eax + 0x6a]; 
0x0016a6d5: test dword ptr [edi + edi*8 - 1], edx; dec dword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x000dfa47: test dword ptr [edi + edi*8 - 1], edx; dec dword ptr [ebx - 0x15537b]; inc dword ptr [ebx - 0x7f72f714]; add al, 0x47; stc; call dword ptr [eax - 1]; 
0x00053f96: test dword ptr [edi + edi*8 - 1], edx; dec dword ptr [ecx - 0x7a0fd628]; test byte ptr [edi], 0x49; ret; 
0x0011b8b1: test dword ptr [edi + edi*8 - 1], edx; jmp dword ptr [ebp - 0x5f]; 
0x0015ff14: test dword ptr [edi + edi*8 - 1], esi; call dword ptr [eax + 0x56]; 
0x0011b976: test dword ptr [edi + edi*8 - 1], esi; call dword ptr [eax + 0x6a]; 
0x00141bed: test dword ptr [edi + edi*8 - 1], esi; jmp dword ptr [ebp - 0x5f]; 
0x000e0248: test dword ptr [edi + edi*8 - 1], esi; jmp dword ptr [ebp - 0x75]; 
0x0016007b: test dword ptr [edi + edi*8 - 1], esp; call dword ptr [eax + 0x6a]; 
0x0014167d: test dword ptr [edi + edi*8 - 1], esp; dec dword ptr [edi]; inc esp; ret; 
0x000d65a4: test dword ptr [edi + edi*8 - 1], esp; jmp ptr [ecx]; ret 0xb8; 
0x000667ef: test dword ptr [edi + esi*8 - 0x137c0001], ecx; or al, 0x8d; adc ah, 0x78; stc; call dword ptr [eax - 0x18]; 
0x0006858c: test dword ptr [edi + esi*8 - 0x137c0001], ecx; or al, 0x8d; cmp al, 0x78; stc; call dword ptr [eax - 0x18]; 
0x000662da: test dword ptr [edi + esi*8 - 0x7cac0001], ecx; ret; 
0x0006b17a: test dword ptr [edi + esi*8 - 1], ebp; call dword ptr [ebx]; 
0x0006c28c: test dword ptr [edi + esi*8 - 1], ecx; jmp ptr [ecx]; ret; 
0x000679b1: test dword ptr [edi + esi*8 - 1], esi; dec dword ptr [ecx - 0x17257627]; mov eax, dword ptr [0x89ffffdf]; test dword ptr [edi + esi*8 - 1], esi; jmp ptr [ecx]; ret; 
0x00067802: test dword ptr [edi + esi*8 - 1], esi; jmp dword ptr [edx]; 
0x00067093: test dword ptr [edi + esi*8 - 1], esi; jmp ptr [ecx]; ret; 
0x0006d684: test dword ptr [edi - 0x16000020], eax; and cl, 0xff; jmp dword ptr [esi - 0x70]; 
0x000d772c: test dword ptr [edi - 0x48000000], edi; or eax, dword ptr [ecx]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x74]; mov edx, edi; call dword ptr gs:[0x10]; 
0x00059130: test dword ptr [edi - 0x760006d2], eax; ret; 
0x000837f4: test dword ptr [edi - 0x77000000], eax; ret 0xca83; 
0x00189dfc: test dword ptr [edi - 0x7cffffed], ebp; stc; add byte ptr [edi], cl; test byte ptr [eax - 0x7cffffed], dh; ret 0x8308; 
0x00196f3c: test dword ptr [edi - 0x7d000000], ebx; ret 0xf08; 
0x001658ea: test dword ptr [edi - 0x7d000000], esp; les edx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000aa18c: test dword ptr [edi - 0x7fffffff], ebx; cmp byte ptr [ecx], al; sbb eax, -1; pop edi; pop ebx; ret; 
0x00197874: test dword ptr [edi - 0xa000000], esp; ret 0xf20; 
0x00195174: test dword ptr [edi], 0x29f756b6; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x0002a23d: test dword ptr [edi], 0x30182; add byte ptr [ebx - 0x7cfbdba4], cl; ret; 
0x00028e55: test dword ptr [edi], 0x31382; add byte ptr [ebx - 0x7cfbdba4], cl; ret; 
0x0017ef11: test dword ptr [edi], 0x88ff48b6; dec edx; dec dword ptr [ebx + 0x5b082444]; ret; 
0x0019e3ad: test dword ptr [edi], 0xbd0f0000; ret 0xf083; 
0x0008b8d1: test dword ptr [edi], 0xfffe2c84; inc dword ptr [ebx - 0x7872f314]; mov byte ptr [esi - 7], bh; call dword ptr [eax - 0x18]; 
0x0008c0e7: test dword ptr [edi], 0xfffef284; inc dword ptr [ebx - 0x7872f314]; mov byte ptr [esi - 7], bh; call dword ptr [eax - 0x18]; 
0x000839f0: test dword ptr [edi], 0xfffef584; inc dword ptr [ebx - 0x7872f314]; mov byte ptr [esi - 7], bh; call dword ptr [eax - 0x18]; 
0x0008ca13: test dword ptr [edi], 0xffff2584; inc dword ptr [ebx - 0x7872f314]; mov byte ptr [esi - 7], bh; call dword ptr [eax - 0x18]; 
0x0008c802: test dword ptr [edi], 0xffff3184; inc dword ptr [ebx - 0x7a72f314]; mov byte ptr [esi - 7], bh; call dword ptr [eax - 0x18]; 
0x00091aec: test dword ptr [edi], 0xffff6d84; inc dword ptr [ebx - 0x7a72f314]; mov byte ptr [esi - 7], bh; call dword ptr [eax - 0x18]; 
0x000ad71c: test dword ptr [edi], ebp; add eax, 0x5e5f0000; pop ebx; ret; 
0x00171acf: test dword ptr [edi], ebp; clc; ljmp 0:0x8b8ff; add esp, 0xc; ret; 
0x00059291: test dword ptr [edi], ebp; xor bh, cl; call dword ptr [eax + 0x56]; 
0x0007cbb3: test dword ptr [edi], ebx; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e5b80ec], al; pop edi; ret; 
0x000c9b7c: test dword ptr [edi], ebx; add dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; ret; 
0x000b63a1: test dword ptr [edi], ecx; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x000ad40c: test dword ptr [edi], edi; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00104895: test dword ptr [edi], edx; add al, 0; add dh, dh; ret 0xf02; 
0x000aa004: test dword ptr [edi], esp; add eax, dword ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x0011c937: test dword ptr [edx + 0x4b], edi; stc; call dword ptr [eax - 1]; 
0x00140e40: test dword ptr [edx + 0x5d], edx; stc; call dword ptr [eax - 0x18]; 
0x000a5941: test dword ptr [edx + 0x5f000005], ecx; pop ebx; ret; 
0x000abe99: test dword ptr [edx + 0x5f000006], eax; pop esi; pop ebx; ret; 
0x000abe69: test dword ptr [edx + 0x5f000006], esi; pop esi; pop ebx; ret; 
0x000abd69: test dword ptr [edx + 0x5f000007], esi; pop esi; pop ebx; ret; 
0x000abb79: test dword ptr [edx + 0x5f000009], esp; pop esi; pop ebx; ret; 
0x0009a610: test dword ptr [edx + 0x69], ebx; clc; call ptr [ebx + 0x5e]; pop edi; ret; 
0x0013919e: test dword ptr [edx + 0x6afff95a], edi; add eax, 0xcc858d50; jb 0x1391a4; call dword ptr [eax - 0x18]; 
0x00196e19: test dword ptr [edx + 1], esp; add byte ptr [eax], al; add edx, 0; jl 0x197040; mov eax, ecx; ret; 
0x000a5c79: test dword ptr [edx + 2], edx; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000abfb9: test dword ptr [edx + 5], esp; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000b76af: test dword ptr [edx + eax + 0x7c830000], ecx; and al, 0x58; add dword ptr [edi], ecx; xchg esp, eax; ret 0x7c83; 
0x000a5c57: test dword ptr [edx + eax], esi; add byte ptr [edi + 0x5b], bl; ret; 
0x000a5ca7: test dword ptr [edx + eax], esp; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000df9f0: test dword ptr [edx + ebp*8 - 0x137c0001], ebp; or byte ptr [ebp - 0x6b8fb80], cl; call dword ptr [eax + 0x53]; 
0x000dfa4d: test dword ptr [edx + ebp*8 - 0x137c0001], ebp; or byte ptr [ebp - 0x6b8fb80], cl; call dword ptr [eax - 1]; 
0x000dfb91: test dword ptr [edx + ebp*8 - 0x137c0001], ebp; or byte ptr [ebx - 0x73], dl; xor al, 0x46; stc; call dword ptr [eax - 0x18]; 
0x0005d95a: test dword ptr [edx + edi*8 - 1], eax; jmp dword ptr [ebp + 0x31]; 
0x0005d2aa: test dword ptr [edx + edi*8 - 1], eax; jmp dword ptr [ebp - 0x75]; 
0x0005c2f9: test dword ptr [edx + edi*8 - 1], ecx; inc dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx - 0x760e7638], cl; dec byte ptr [ecx - 0x5ab7b]; jmp dword ptr [esi - 0x70]; 
0x0005c309: test dword ptr [edx + edi*8 - 1], edx; jmp dword ptr [esi - 0x70]; 
0x0005d0d1: test dword ptr [edx + edi*8 - 1], esp; dec dword ptr [ebx - 0x13348]; jmp dword ptr [ebp - 0x5f]; 
0x00059553: test dword ptr [edx + edi*8 - 1], esp; dec dword ptr [ecx - 0x56f4b]; dec dword ptr [ebx - 0x7780]; dec dword ptr [ecx - 0x5737b]; dec dword ptr [ebp - 0x5737b]; call dword ptr [eax - 0x77]; 
0x0005f829: test dword ptr [edx + edi*8 - 1], esp; dec dword ptr [ecx - 0x5bf43]; jmp dword ptr [ebp - 0x75]; 
0x00059971: test dword ptr [edx + edi*8 - 1], esp; jmp dword ptr [ebp - 0x75]; 
0x0019c1f7: test dword ptr [edx + esi*8 - 1], edx; call ebx; 
0x00059311: test dword ptr [edx + esi], esp; stc; call dword ptr [esi - 0x77]; 
0x00125439: test dword ptr [edx - 0x75000000], esi; dec esp; and al, 0xc; mov edx, dword ptr [esp + 0x10]; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00199681: test dword ptr [edx - 0x76fffffe], edx; ret; 
0x0008c9c1: test dword ptr [edx - 0x77000000], esp; ret 0xf283; 
0x000f0089: test dword ptr [edx - 0x7c000006], esi; ret; 
0x000f1898: test dword ptr [edx - 0x7cfffff9], ebp; rol byte ptr [ecx], 0x83; ret 0x3b20; 
0x000490f9: test dword ptr [edx - 0x7cfffffc], esp; ret; 
0x0010ac8f: test dword ptr [edx - 0x7d000000], edi; les esp, ptr [ebx + ebx*2]; pop esi; ret; 
0x0019775d: test dword ptr [edx - 0x9fffffd], esi; ret 0xf40; 
0x000ac019: test dword ptr [edx], eax; add eax, 0x5e5f0000; pop ebx; ret; 
0x000263b9: test dword ptr [edx], ebx; add dword ptr [eax], eax; add byte ptr [ebx - 0x72c3db8c], cl; xchg byte ptr [eax], ah; push -7; call dword ptr [eax - 0x73]; 
0x000a58b1: test dword ptr [edx], ebx; push es; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000abd09: test dword ptr [edx], edx; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000abfe9: test dword ptr [edx], esi; add eax, 0x5e5f0000; pop ebx; ret; 
0x000b4aa1: test dword ptr [esi + 0x5e000001], esp; xor eax, eax; pop ebx; ret; 
0x000a5c15: test dword ptr [esi + 0x5f000002], esi; pop ebx; ret; 
0x0017297d: test dword ptr [esi + 0xb], esi; add byte ptr [ebx - 0x5397ef14], al; add byte ptr [eax], al; add al, ch; ret 0xead7; 
0x000a586d: test dword ptr [esi + 6], ebx; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000abcc5: test dword ptr [esi + 8], edx; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000abb9d: test dword ptr [esi + 9], edi; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000ad2f5: test dword ptr [esi + 9], edx; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000ad5cf: test dword ptr [esi + eax], edi; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0007e5a4: test dword ptr [esi + edi*2 - 7], esi; call dword ptr [eax - 0x73]; 
0x00114bd1: test dword ptr [esi + edi*8 - 0x17c0001], ebp; add ecx, dword ptr [edi]; xchg esp, eax; ret 0xe2e9; 
0x0010cc31: test dword ptr [esi + edi*8 - 0x17c0001], ebp; add ecx, dword ptr [edi]; xchg esp, eax; ret 0xf2e9; 
0x0002e3c8: test dword ptr [esi + edi*8 - 1], eax; call dword ptr [ebx + 0x56]; 
0x0002ea82: test dword ptr [esi + edi*8 - 1], eax; call dword ptr [ebx - 0x75]; 
0x000e11b1: test dword ptr [esi + edi*8 - 1], ebp; call dword ptr [edi - 0x18]; 
0x000e16ad: test dword ptr [esi + edi*8 - 1], ebp; call dword ptr [esi - 0x18]; 
0x00105851: test dword ptr [esi + edi*8 - 1], ebx; call dword ptr [edi - 0x18]; 
0x00105d3d: test dword ptr [esi + edi*8 - 1], ebx; call dword ptr [esi - 0x18]; 
0x0014d68c: test dword ptr [esi + edi*8 - 1], ebx; dec dword ptr [ebx - 0x72f3dbac]; xor byte ptr [eax - 0x54], 0xf9; call dword ptr [eax - 0x73]; 
0x000e15ad: test dword ptr [esi + edi*8 - 1], edi; call dword ptr [eax + 0x56]; 
0x000e17bf: test dword ptr [esi + edi*8 - 1], edi; call dword ptr [eax - 0x75]; 
0x00105e2a: test dword ptr [esi + edi*8 - 1], edx; call dword ptr [edi - 1]; 
0x00105e56: test dword ptr [esi + edi*8 - 1], edx; call dword ptr [esi - 1]; 
0x000e179a: test dword ptr [esi + edi*8 - 1], esp; call dword ptr [edi - 1]; 
0x000e17c6: test dword ptr [esi + edi*8 - 1], esp; call dword ptr [esi - 1]; 
0x00195b25: test dword ptr [esi - 0x57fffffe], esp; adc byte ptr [edi], cl; test esi, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x0019616d: test dword ptr [esi - 0x73000000], ecx; inc edi; clc; pop edi; ret; 
0x000fd058: test dword ptr [esi - 0x74ffffe8], esi; push esi; add al, 0xf7; ret 0xfffd; 
0x00025863: test dword ptr [esi - 0x75000000], edx; jl 0x2588f; sub byte ptr [ebp - 0x6955f79], cl; call dword ptr [eax - 0x73]; 
0x0012c1d5: test dword ptr [esi - 0x75000000], esi; inc edi; and byte ptr [ecx], ch; fdivr dword ptr [ecx]; ret 0x8f0f; 
0x001977b6: test dword ptr [esi - 0x7cfffffd], eax; ror byte ptr [edi], 0x5f; ret; 
0x00197766: test dword ptr [esi - 0x7cfffffd], ebp; rol byte ptr [edi], 0x5f; ret; 
0x000d72b9: test dword ptr [esi - 0x7d000000], ebx; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x000aa496: test dword ptr [esi - 0x7f000002], edx; cmp byte ptr [ecx], al; sbb eax, -1; pop ebx; ret; 
0x000a9f8d: test dword ptr [esi - 0x7ffffffd], ebx; cmp byte ptr [ecx], al; sbb eax, -1; pop edi; pop ebx; ret; 
0x000535cd: test dword ptr [esi - 0x9fffffc], ebp; ret 0xf50; 
0x00197754: test dword ptr [esi - 0x9fffffd], esi; ret 0xf20; 
0x0019787d: test dword ptr [esi - 0xa000000], ebp; ret 0xf40; 
0x001981dd: test dword ptr [esi - 0xa000000], edi; ret 0xf0f; 
0x00192e05: test dword ptr [esi], eax; pop ss; bnd call dword ptr [ebx - 0x18]; 
0x00192e05: test dword ptr [esi], eax; pop ss; bnd call dword ptr [ebx - 0x18]; jmp 0x82192c00; ret; 
0x00195b8d: test dword ptr [esi], edi; add al, byte ptr [eax]; add byte ptr [eax + 0x76850f04], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf04; 
0x000a5b8d: test dword ptr [esi], edi; add eax, dword ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x0018cbf5: test dword ptr [esi], edx; jns 0x18cbeb; call dword ptr [ebx - 0x18]; 
0x000591a1: test dword ptr [esi], edx; xor bh, cl; call dword ptr [ebx + 0x50]; 
0x000abce5: test dword ptr [esi], esi; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0008aa97: test dword ptr [esp + edi*8 - 1], eax; jmp dword ptr [ebp - 0x39]; 
0x0010442d: test dx, 0xff00; jne 0x10443d; mov eax, dword ptr [esp + 4]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x00159b57: test eax, 0x560cec83; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x0011f673: test eax, 0x7c830010; and al, 0x18; add ecx, dword ptr [ebx + 0xf142474]; xchg byte ptr [esi + ecx - 0x137d0000], bl; or byte ptr [ebp - 0x6b42d7d], cl; call dword ptr [eax + 0x57]; 
0x0011f882: test eax, 0x83000009; in al, dx; or byte ptr [ebp - 0x6afb77d], cl; call dword ptr [eax + 0x57]; 
0x00190831: test eax, 0x8300000e; std; adc byte ptr [ebp - 0x79f00f93], cl; call dword ptr [eax]; 
0x000da073: test eax, 0x8300094c; les edx, ptr [eax]; mov eax, dword ptr [esp + 0xc]; call eax; 
0x00065c58: test eax, 0x83001c43; in al, dx; or al, 0x8d; nop; cmp byte ptr [ecx - 7], bh; call dword ptr [edx - 0x73]; 
0x0009c046: test eax, 0xe383fff5; add dword ptr [ebp - 0xaa90f6e], ecx; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x00131bb6: test eax, 0xe383fff5; add dword ptr [ebp - 0xaa92f6e], ecx; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x0009bf69: test eax, 0xe580ffe8; add cl, byte ptr [ebp - 0x95fdf6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000dda2e: test eax, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b64c4], al; ret; 
0x0011ef1b: test eax, eax; cmove eax, edx; add esp, 0xc; ret; 
0x0011f2dc: test eax, eax; cmove eax, edx; ret; 
0x00083e5f: test eax, eax; cmovne eax, edx; ret; 
0x00116ff3: test eax, eax; cmovns eax, edx; ret; 
0x0012c84c: test eax, eax; cmovs eax, edx; add esp, 8; pop ebx; ret; 
0x00118318: test eax, eax; je 0x11831d; ret; 
0x0011a9f4: test eax, eax; je 0x11a9fa; mov dword ptr [eax], edx; ret; 
0x0011e23c: test eax, eax; je 0x11e244; test edx, edx; jne 0x11e248; ret; 
0x0011e260: test eax, eax; je 0x11e268; test edx, edx; jne 0x11e270; ret; 
0x0011e28c: test eax, eax; je 0x11e298; jmp 0x11d830; lea esi, [esi]; ret; 
0x0011e7e6: test eax, eax; je 0x11e830; call eax; 
0x0011e928: test eax, eax; je 0x11e9c8; call eax; 
0x0011eefc: test eax, eax; je 0x11ef08; add esp, 0xc; ret; 
0x00123714: test eax, eax; je 0x123721; pop esi; pop ebx; jl 0x216d0; ret; 
0x001302d8: test eax, eax; je 0x130300; sub esp, 8; push ebx; push dword ptr [ebx + 0x30]; call eax; 
0x001328d3: test eax, eax; je 0x1328e0; add esp, 8; pop ebx; ret; 
0x0013bfc3: test eax, eax; je 0x13bfd0; sub esp, 0xc; push esi; call eax; 
0x0013c333: test eax, eax; je 0x13c340; sub esp, 0xc; push esi; call eax; 
0x0014c806: test eax, eax; je 0x14c810; add esp, 8; pop ebx; ret; 
0x0014cf08: test eax, eax; je 0x14cf18; jmp 0x14caf0; lea esi, [esi]; ret; 
0x0014e253: test eax, eax; je 0x14e25c; cmp dword ptr [eax + 8], edx; jne 0x14e250; ret; 
0x0015869a: test eax, eax; je 0x1586a7; sub esp, 0xc; push esi; call eax; 
0x00158923: test eax, eax; je 0x158a0d; sub esp, 0xc; mov eax, dword ptr [ebx + 0x10]; push esi; call dword ptr [eax + 0x10]; 
0x00158b68: test eax, eax; je 0x158b75; sub esp, 0xc; push esi; call eax; 
0x00158b4b: test eax, eax; je 0x158bb0; mov eax, dword ptr [ebx + 0x10]; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x00158c98: test eax, eax; je 0x158caf; sub esp, 0xc; mov ecx, dword ptr [eax + 4]; push eax; call dword ptr [ecx + 0x10]; 
0x00158e45: test eax, eax; je 0x158e56; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x00158e89: test eax, eax; je 0x158e98; add esp, 8; pop ebx; ret; 
0x001596ac: test eax, eax; je 0x15963d; mov eax, dword ptr [ebx + 4]; sub esp, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x00159b54: test eax, eax; je 0x159b01; sub esp, 0xc; push esi; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x00159b77: test eax, eax; je 0x159b84; sub esp, 0xc; push esi; call eax; 
0x00159e45: test eax, eax; je 0x159cca; sub esp, 0xc; push edi; call eax; 
0x00159f2e: test eax, eax; je 0x159f3b; sub esp, 0xc; push edi; call eax; 
0x0015a812: test eax, eax; je 0x15a81f; sub esp, 0xc; push edi; call eax; 
0x0015aa66: test eax, eax; je 0x15aa88; sub esp, 0xc; mov eax, dword ptr [ebx + 0x2398]; push esi; call dword ptr [eax + 0x10]; 
0x0015ac46: test eax, eax; je 0x15ad4b; sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x0015afab: test eax, eax; je 0x15afe0; mov eax, ecx; pop ebx; ret; 
0x0015b01f: test eax, eax; je 0x15b070; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0015d8c9: test eax, eax; je 0x15d8dc; sub esp, 0xc; lea edx, [ebx + 0xac]; push edx; call eax; 
0x0015e2dd: test eax, eax; je 0x15e2ea; sub esp, 0xc; push esi; call eax; 
0x0015e51a: test eax, eax; je 0x15e52a; sub esp, 0xc; lea edx, [edi + 8]; push edx; call eax; 
0x0015f846: test eax, eax; je 0x15f853; sub esp, 0xc; push esi; call eax; 
0x0015fa02: test eax, eax; je 0x15fa0f; sub esp, 0xc; push edi; call eax; 
0x00160dcb: test eax, eax; je 0x160dd8; sub esp, 0xc; push ebp; call eax; 
0x001611a6: test eax, eax; je 0x1611b6; sub esp, 0xc; lea edx, [ebx + 0x38]; push edx; call eax; 
0x00161be9: test eax, eax; je 0x161c60; mov eax, dword ptr [esi + 0x3c]; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x00163022: test eax, eax; je 0x163030; pop ebx; pop esi; pop edi; ret; 
0x00163faa: test eax, eax; je 0x163fba; sub esp, 0xc; lea edx, [edi + 8]; push edx; call eax; 
0x001646c3: test eax, eax; je 0x1646d3; sub esp, 0xc; lea edx, [edi + 8]; push edx; call eax; 
0x00164745: test eax, eax; je 0x164780; sub esp, 0xc; mov eax, dword ptr [ebp + 0xc]; push edi; call dword ptr [eax + 0x10]; 
0x0016645b: test eax, eax; je 0x166490; mov eax, ecx; pop ebx; ret; 
0x001664cb: test eax, eax; je 0x166500; mov eax, ecx; pop ebx; ret; 
0x0002df0b: test eax, eax; je 0x2df18; sub esp, 0xc; push esi; call eax; 
0x000380b3: test eax, eax; je 0x380c7; mov dword ptr [eax + 4], 0; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x00048b4c: test eax, eax; je 0x48b60; add esp, 4; pop ebx; pop esi; ret; 
0x00071a98: test eax, eax; je 0x71ab0; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 4], edx; jmp eax; 
0x0007b49c: test eax, eax; je 0x7b4d0; mov eax, edx; pop ebx; pop esi; ret; 
0x0007b950: test eax, eax; je 0x7b988; mov eax, edx; pop ebx; ret; 
0x0007c5e4: test eax, eax; je 0x7c5f0; add esp, 4; pop ebx; pop esi; ret; 
0x0007ffaa: test eax, eax; je 0x7ffc2; mov dword ptr [eax], 0; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; ret; 
0x0008bf1f: test eax, eax; je 0x8bf35; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x0009a6e0: test eax, eax; je 0x9a712; pop ebx; pop esi; pop edi; ret; 
0x000b4246: test eax, eax; je 0xb4260; bsf eax, eax; add eax, edx; add eax, ecx; ret; 
0x000d7295: test eax, eax; je 0xd72c8; sub esp, 8; push edi; push ebx; call eax; 
0x000d94db: test eax, eax; je 0xd9500; sub esp, 0xc; push esi; call eax; 
0x000de76d: test eax, eax; je 0xde773; call eax; 
0x001212fb: test eax, eax; jl 0x216d0; je 0x121306; ret; 
0x0010aeda: test eax, eax; jne 0x10af00; mov ebx, dword ptr [esp + 0x20]; mov eax, 6; call dword ptr gs:[0x10]; 
0x0010b0aa: test eax, eax; jne 0x10b0d0; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 8; call dword ptr gs:[0x10]; 
0x001152ae: test eax, eax; jne 0x1152c0; add esp, 4; pop ebx; pop esi; ret; 
0x00118d5a: test eax, eax; jne 0x118d80; mov ebx, dword ptr [esp + 0x20]; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00118e3a: test eax, eax; jne 0x118e60; mov ebx, dword ptr [esp + 0x20]; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x00119b9f: test eax, eax; jne 0x119b5c; add esp, 0xc; ret; 
0x0011d84d: test eax, eax; jne 0x11d87c; sub esp, 0xc; push dword ptr [ebx]; call esi; 
0x0011ea48: test eax, eax; jne 0x11ea88; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x0012fea4: test eax, eax; jne 0x12fe94; add esp, 4; pop ebx; pop esi; ret; 
0x001312ab: test eax, eax; jne 0x1312c0; mov ecx, dword ptr [edx]; test ecx, ecx; je 0x1312c8; ret; 
0x0013c314: test eax, eax; jne 0x13c300; add esp, 4; pop ebx; pop esi; ret; 
0x00147f2f: test eax, eax; jne 0x147f40; pop ebx; pop esi; pop edi; ret; 
0x00147f75: test eax, eax; jne 0x147f60; pop ebx; pop esi; pop edi; ret; 
0x0014d84e: test eax, eax; jne 0x14d860; add esp, 4; pop ebx; pop esi; ret; 
0x001590df: test eax, eax; jne 0x159100; sub esp, 0xc; mov eax, dword ptr [ebx + 4]; push ebx; call dword ptr [eax + 0x10]; 
0x001593a7: test eax, eax; jne 0x1593d7; sub esp, 0xc; mov eax, dword ptr [edx + 4]; push edx; call dword ptr [eax + 0x10]; 
0x0015a0bb: test eax, eax; jne 0x15a0c8; add esp, 4; pop ebx; pop esi; ret; 
0x00163eff: test eax, eax; jne 0x163ee8; add esp, 8; pop ebx; ret; 
0x00170a28: test eax, eax; jne 0x170a30; pop ebx; pop esi; pop edi; ret; 
0x00196710: test eax, eax; jne 0x1967e0; xor eax, eax; pop edi; ret; 
0x00197068: test eax, eax; jne 0x196c90; xor eax, eax; ret; 
0x00196bb8: test eax, eax; jne 0x196df0; xor eax, eax; ret; 
0x00196bf7: test eax, eax; jne 0x196e70; xor eax, eax; ret; 
0x00037688: test eax, eax; jne 0x37698; add esp, 8; pop ebx; ret; 
0x00037917: test eax, eax; jne 0x37920; add esp, 8; pop ebx; ret; 
0x000379da: test eax, eax; jne 0x37a00; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xb3; mov ecx, 8; call dword ptr gs:[0x10]; 
0x0007ff0a: test eax, eax; jne 0x7ff00; ret; 
0x00080b58: test eax, eax; jne 0x80b50; ret; 
0x0009121a: test eax, eax; jne 0x91210; pop ebx; ret; 
0x0009a593: test eax, eax; jne 0x9a588; xor eax, eax; ret; 
0x0009a651: test eax, eax; jne 0x9a648; mov eax, ecx; ret; 
0x000b3ca2: test eax, eax; jne 0xb3d00; xor eax, eax; pop edi; ret; 
0x000b3c68: test eax, eax; jne 0xb3d20; xor eax, eax; pop edi; ret; 
0x000b3f48: test eax, eax; jne 0xb3fc0; xor eax, eax; ret; 
0x000b3f77: test eax, eax; jne 0xb3fe0; xor eax, eax; ret; 
0x000b438f: test eax, eax; jne 0xb43d0; pmovmskb eax, xmm1; bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x000ddce9: test eax, eax; jne 0xddd08; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x000ddda7: test eax, eax; jne 0xdddb0; add esp, 8; pop ebx; ret; 
0x000de3d2: test eax, eax; jne 0xde3d9; pop ecx; jmp ecx; 
0x000de3d2: test eax, eax; jne 0xde3d9; pop ecx; jmp ecx; ret; 
0x00125224: test eax, eax; js 0x125230; add esp, 8; pop ebx; ret; 
0x001434a1: test eax, eax; js 0x142f9e; sub esp, 0xc; push esi; mov edx, dword ptr [esp + 0x20]; call edx; 
0x0016b91b: test eax, eax; js 0x16b928; add esp, 4; pop ebx; pop esi; ret; 
0x00174383: test eax, eax; js 0x174390; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0007942e: test eax, eax; js 0x79438; ret; 
0x0008da63: test eax, eax; js 0x8da70; mov dword ptr [edx + 0x3a28], eax; xor eax, eax; ret; 
0x00154b71: test eax, eax; scasb al, byte ptr es:[edi]; stc; call dword ptr [eax - 0x18]; 
0x000f8317: test eax, eax; sete al; add esp, 0x2c; movzx eax, al; ret; 
0x000481a3: test eax, eax; sete al; add esp, 0xc; movzx eax, al; ret; 
0x001500f2: test eax, eax; sete al; add esp, 0xc; ret; 
0x0015c834: test eax, eax; setne al; add esp, 0x1c; movzx eax, al; ret; 
0x0015aad5: test eax, eax; setne al; add esp, 8; movzx eax, al; pop ebx; ret; 
0x0015b05a: test eax, eax; setne dl; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0007b05d: test eax, eax; setne dl; mov eax, edx; ret; 
0x00078ad1: test eax, ebp; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b30c4], al; pop edi; ret; 
0x000b68f7: test eax, ebp; xchg ebp, eax; stc; call dword ptr [eax - 0x18]; 
0x000a5bf3: test eax, ebx; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x000dadc5: test eax, ebx; inc ebp; stc; call dword ptr [ecx + 0x50]; 
0x001661ef: test eax, ebx; push edi; stc; call dword ptr [eax + 0x6a]; 
0x0008ab79: test eax, edi; jg 0x8ab76; call dword ptr [eax - 0x18]; 
0x000abc23: test eax, edi; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000a5cfb: test eax, edx; add dword ptr [eax], eax; add byte ptr [edi + 0x5b], bl; ret; 
0x000dad13: test eax, esp; inc ebp; stc; call dword ptr [ecx + 0x50]; 
0x0009a523: test ebp, ebp; jne 0x9a479; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax - 0x148]; call dword ptr [eax]; 
0x0013a983: test ebp, ecx; dec eax; stc; call dword ptr [eax - 0x77]; 
0x00178057: test ebp, ecx; inc dword ptr [ebx - 0x3fceef3c]; add esp, 4; pop ebx; pop esi; ret; 
0x0002802b: test ebp, ecx; or dword ptr [eax], eax; add byte ptr [ebx - 0x76e3db8c], cl; ret 0xb60f; 
0x00195b3e: test ebp, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x0018c22c: test ebp, edi; add eax, 0xfd830000; adc byte ptr [ebp - 0x79f00f93], cl; ret; 
0x000ad24e: test ebp, edi; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00047e00: test ebp, edx; xor cl, bh; call dword ptr [esi + 0x6a]; 
0x000aa036: test ebp, esi; add al, byte ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x000b3eb6: test ebp, esi; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000826cd: test ebp, esp; call dword ptr [eax - 0x18]; 
0x000573b5: test ebx, eax; add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0x55; or al, 0xf6; ret 0xf40; 
0x00146e5c: test ebx, ebx; jne 0x146e28; mov eax, 1; pop ebx; ret; 
0x00171f82: test ebx, ebx; jne 0x171f90; add esp, 8; pop ebx; ret; 
0x00173e8e: test ebx, ebx; jne 0x173ea0; add esp, 8; pop ebx; ret; 
0x0007e6ce: test ebx, ebx; jne 0x7e6e0; add esp, 8; pop ebx; ret; 
0x0009e263: test ebx, ebx; jne 0x9e277; pop ebx; pop esi; pop edi; ret; 
0x00093cd4: test ebx, ebx; jns 0x93cdc; add ebx, ebx; mov ebx, dword ptr [ebx]; mov eax, 0x106; call dword ptr gs:[0x10]; 
0x00050375: test ebx, edi; add al, byte ptr [eax]; add byte ptr [ebx - 0x364f7b], al; jmp eax; 
0x000ad378: test ebx, edx; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b47cb: test ecx, 0xff0000; je 0xb47d4; inc eax; pop edi; ret; 
0x000c9bb2: test ecx, ebp; add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x000a9d42: test ecx, ebp; add eax, 0x38800000; add dword ptr [ebx + 0x5b5fffd8], eax; ret; 
0x000ad662: test ecx, ebp; add eax, 0x5e5f0000; pop ebx; ret; 
0x0011a9c6: test ecx, ecx; je 0x11a9cd; mov dword ptr [ecx + 4], edx; mov dword ptr [edx], ecx; mov dword ptr [edx + 4], eax; ret; 
0x0012d21c: test ecx, ecx; je 0x12d228; xor eax, eax; pop ebx; ret; 
0x001312b1: test ecx, ecx; je 0x1312c8; ret; 
0x0008b028: test ecx, ecx; je 0x8b435; mov eax, 0xf0; mov ecx, 8; mov esi, edx; call dword ptr gs:[0x10]; 
0x000b4201: test ecx, ecx; je 0xb4210; bsf ecx, ecx; add eax, ecx; ret; 
0x001288f8: test ecx, ecx; jne 0x128908; mov eax, edx; pop ebx; pop esi; ret; 
0x00128973: test ecx, ecx; jne 0x128980; mov eax, edx; pop ebx; pop esi; ret; 
0x00128b67: test ecx, ecx; jne 0x128b70; mov eax, edx; pop ebx; pop esi; ret; 
0x001291bc: test ecx, ecx; jne 0x1291c8; mov eax, edx; pop ebx; pop esi; ret; 
0x0012921c: test ecx, ecx; jne 0x129228; mov eax, edx; pop ebx; pop esi; ret; 
0x00129407: test ecx, ecx; jne 0x129410; mov eax, edx; pop ebx; pop esi; ret; 
0x0015a263: test ecx, ecx; jne 0x15a2b8; mov dword ptr [eax], 0; pop ebx; ret; 
0x00078dcd: test ecx, ecx; jne 0x78de0; mov eax, dword ptr [edx + 0x28]; cmp dword ptr [edx + 0x24], eax; cmovne eax, ecx; ret; 
0x00094701: test ecx, ecx; jne 0x94710; ret; 
0x001160fc: test ecx, ecx; js 0x116108; mov eax, dword ptr [edx + 8]; and eax, 0x100f; ret; 
0x000e0208: test ecx, ecx; js 0xe0210; ret; 
0x00094cea: test ecx, edi; call dword ptr [eax - 1]; 
0x0005b1d2: test edi, 0xfffa5085; call dword ptr [eax]; 
0x000aa064: test edi, eax; add al, byte ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x00084c93: test edi, ebp; add byte ptr [eax], al; add byte ptr [ecx + 0x94c4], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x000aa15c: test edi, ecx; add dword ptr [eax], eax; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x000dd940: test edi, edi; cmove esi, eax; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x00058ff2: test edi, edi; dec edx; stc; call dword ptr [eax + 0x56]; 
0x001970c0: test edi, edi; je 0x197120; bsr edi, edi; add eax, edi; pop edi; ret; 
0x00058ad7: test edi, edi; je 0x58b20; mov eax, 0x161; call dword ptr gs:[0x10]; 
0x000b4080: test edi, edi; je 0xb40e0; bsr edi, edi; add eax, edi; pop edi; ret; 
0x00132aae: test edi, edi; jne 0x132ac0; pop ebx; pop esi; pop edi; ret; 
0x001a0c3d: test edi, edi; jne 0x1a0c10; pop ebx; pop esi; pop edi; ret; 
0x0009a60d: test edi, edi; jne 0x20f6f; pop ebx; pop esi; pop edi; ret; 
0x000dd83c: test edi, edi; mov edx, dword ptr [esp + 0x88]; mov ecx, ebp; cmove esi, eax; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x001670f7: test edi, esi; add byte ptr [eax], al; add byte ptr [ebp - 0x69ae97d], cl; call dword ptr [ebp + 0x6a]; 
0x000c505e: test edi, esi; inc ebx; stc; call dword ptr [eax - 0x18]; 
0x0009b469: test edi, esp; inc dword ptr [eax - 0x6d72fd1b]; rcl byte ptr [ecx], 0xf6; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0010442e: test edx, 0x975ff00; mov eax, dword ptr [esp + 4]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x0009b365: test edx, eax; inc ebx; stc; call dword ptr [eax + 0x57]; 
0x000c6716: test edx, ebp; add byte ptr [eax], al; add byte ptr [ebx - 0x362f63], cl; dec dword ptr [ebx - 0x36374b]; call dword ptr [edi - 1]; 
0x000abf31: test edx, ebp; add eax, 0x5e5f0000; pop ebx; ret; 
0x000b42c1: test edx, ebx; add byte ptr [eax], al; add bh, dh; ret 0x3f; 
0x000abc41: test edx, ebx; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000ad271: test edx, ebx; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0008a9e7: test edx, edx; aas; stc; call dword ptr [eax - 0x18]; 
0x000ac049: test edx, edx; add al, 0; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0011d402: test edx, edx; je 0x11d410; pop ebx; pop esi; pop edi; ret; 
0x00121f39: test edx, edx; je 0x121f70; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x178; call dword ptr gs:[0x10]; 
0x00147406: test edx, edx; je 0x147418; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0015c976: test edx, edx; je 0x15c980; add esp, 4; pop ebx; pop esi; ret; 
0x0015ca46: test edx, edx; je 0x15ca50; add esp, 4; pop ebx; pop esi; ret; 
0x0015cb06: test edx, edx; je 0x15cb10; add esp, 4; pop ebx; pop esi; ret; 
0x0016283b: test edx, edx; je 0x16284e; sub esp, 0xc; mov eax, dword ptr [edx + 0x20]; push edx; call dword ptr [eax + 0x10]; 
0x001a08db: test edx, edx; je 0x1a08e9; mov dword ptr [esp + 8], eax; call edx; 
0x001a0a3b: test edx, edx; je 0x1a0a4c; sub esp, 0xc; push eax; call edx; 
0x00021414: test edx, edx; je 0x21419; ret; 
0x0002cca7: test edx, edx; je 0x2ccb5; mov dword ptr [esp + 0xc], eax; call edx; 
0x0002cdc9: test edx, edx; je 0x2cdcf; call edx; 
0x00082856: test edx, edx; je 0x82868; mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x000828eb: test edx, edx; je 0x82900; mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x00083620: test edx, edx; je 0x83600; sub esp, 0xc; push eax; call edx; 
0x00083beb: test edx, edx; je 0x83c30; xor esi, esi; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00084679: test edx, edx; je 0x84690; or eax, 2; mov dword ptr [ecx + 8], eax; xor eax, eax; ret; 
0x000848ca: test edx, edx; je 0x84908; mov ecx, dword ptr [ebx + 0xc]; mov eax, edi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x000b4028: test edx, edx; je 0xb4000; bsr ecx, edx; add eax, ecx; ret; 
0x000ca043: test edx, edx; je 0xca050; mov edx, dword ptr [eax]; cmp edx, ecx; jne 0xca040; ret; 
0x000de3ce: test edx, edx; je 0xde3d9; test eax, eax; jne 0xde3d9; pop ecx; jmp ecx; 
0x000de7d3: test edx, edx; je 0xde7b5; mov dword ptr [esp + 0xc], ecx; add ebx, 1; mov dword ptr [esp + 8], eax; call edx; 
0x000de823: test edx, edx; je 0xde7b5; mov dword ptr [esp + 0xc], ecx; mov dword ptr [esp + 8], eax; call edx; 
0x0011e240: test edx, edx; jne 0x11e248; ret; 
0x0011e264: test edx, edx; jne 0x11e270; ret; 
0x00166f80: test edx, edx; jne 0x166f90; add esp, 0xc; ret; 
0x00166fd0: test edx, edx; jne 0x166fe0; add esp, 0xc; ret; 
0x0017097e: test edx, edx; jne 0x170990; add esp, 4; pop ebx; pop esi; ret; 
0x00170e19: test edx, edx; jne 0x170e28; add esp, 8; pop ebx; ret; 
0x0019781e: test edx, edx; jne 0x197830; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x0005824b: test edx, edx; jne 0x58258; add esp, 8; pop ebx; ret; 
0x0007587a: test edx, edx; jne 0x75870; ret; 
0x0007f13a: test edx, edx; jne 0x7f130; ret; 
0x00082cfd: test edx, edx; jne 0x82d10; xend; xor eax, eax; add esp, 0xc; ret; 
0x00084611: test edx, edx; jne 0x84630; and dword ptr [eax + 8], 0xfffffffe; xor eax, eax; ret; 
0x0008bcac: test edx, edx; jne 0x8bcc0; and dword ptr [eax], 0x7fffffff; xor eax, eax; ret; 
0x000b72f2: test edx, edx; jne 0xb72e8; ret; 
0x000c9d15: test edx, edx; jne 0xc9d08; mov eax, ecx; pop ebx; pop esi; ret; 
0x000ca07a: test edx, edx; jne 0xca070; mov eax, ecx; pop ebx; ret; 
0x000cf92b: test edx, edx; jne 0xcf938; add esp, 4; pop ebx; pop esi; ret; 
0x000d7f94: test edx, edx; jne 0xd7f6a; add esp, 8; xor eax, eax; pop ebx; ret; 
0x00093bec: test edx, edx; jns 0x93bf5; lea eax, [edx + edx]; mov ebx, dword ptr [eax]; mov eax, 0x107; call dword ptr gs:[0x10]; 
0x000d72e8: test edx, edx; jns 0xd731b; mov eax, 0x193; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000383a2: test edx, edx; sete al; ret; 
0x0005b85c: test edx, esi; idiv bh; jmp dword ptr [ebp - 0x5f]; 
0x00123886: test esi, 2; mov ebx, dword ptr [esp + 0x14]; cmovne edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x00095dbd: test esi, ebp; add al, byte ptr [eax]; add byte ptr [ebx - 0x15f73], cl; jmp dword ptr [ebp - 0x5f]; 
0x0004ec06: test esi, ebp; add byte ptr [eax], al; add byte ptr [ebx - 0x362f4b], cl; call dword ptr [edi - 1]; 
0x000b3bcd: test esi, ebp; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x0014743e: test esi, ebp; jmp dword ptr [esi - 0x70]; 
0x000f2a1d: test esi, ebp; or al, byte ptr [eax]; add byte ptr [ebp - 0x76dd8b40], al; ret 0xe283; 
0x000fd1bf: test esi, ebx; adc eax, dword ptr [eax]; add byte ptr [eax + 0x40840f40], ch; or eax, 0xec830000; or byte ptr [ebp - 0x67343], cl; call dword ptr [edi - 1]; 
0x0012a1d4: test esi, edi; add dword ptr [eax], eax; add byte ptr [ebx - 0x1334a], cl; jmp dword ptr [ebp - 0x75]; 
0x00195b2d: test esi, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x000a5bd5: test esi, esi; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x0013689c: test esi, esi; add dword ptr [eax], eax; add byte ptr [ebx - 0x1334a], cl; jmp dword ptr [ebp - 0x75]; 
0x00105db9: test esi, esi; je 0x105dcb; sub esp, 8; push eax; push edi; call esi; 
0x00108549: test esi, esi; je 0x10855b; sub esp, 8; push eax; push edi; call esi; 
0x000ceb54: test esi, esi; je 0xcebc8; mov ebx, dword ptr [esp + 0x50]; lea edx, [esp + 0x1c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000e1729: test esi, esi; je 0xe173b; sub esp, 8; push eax; push edi; call esi; 
0x000e3dd9: test esi, esi; je 0xe3deb; sub esp, 8; push eax; push edi; call esi; 
0x000f8e19: test esi, esi; je 0xf8e2b; sub esp, 8; push eax; push edi; call esi; 
0x000f99e9: test esi, esi; je 0xf99fb; sub esp, 8; push eax; push edi; call esi; 
0x001a06ed: test esi, esi; jne 0x1a06d4; add esp, 4; pop ebx; pop esi; ret; 
0x001a0dac: test esi, esi; jne 0x1a0d94; add esp, 4; pop ebx; pop esi; ret; 
0x001a0e6f: test esi, esi; jne 0x1a0e58; add esp, 4; pop ebx; pop esi; ret; 
0x000830c8: test esi, esi; jne 0x83108; mov eax, 0xf0; xor edx, edx; call dword ptr gs:[0x10]; 
0x000ff69b: test esi, esi; jne 0xff680; pop ebx; pop esi; pop edi; ret; 
0x00069728: test esi, esi; js 0x68816; mov dword ptr [esp + 0x10], ebx; jmp 0x68af3; lea esi, [esi]; jmp eax; 
0x00193305: test esi, esp; adc dh, dl; call dword ptr [ebx - 0x18]; 
0x00193305: test esi, esp; adc dh, dl; call dword ptr [ebx - 0x18]; jmp 0x821930fb; ret; 
0x0018f105: test esi, esp; push esp; bnd call dword ptr [ebx - 0x18]; 
0x0018f105: test esi, esp; push esp; bnd call dword ptr [ebx - 0x18]; jmp 0x8218ef3d; ret; 
0x000a5907: test esp, eax; add eax, 0x5b5f0000; ret; 
0x00197737: test esp, eax; add eax, dword ptr [eax]; add dh, dh; ret 0xf04; 
0x0005595f: test esp, ebx; add dword ptr [eax], eax; add dh, dh; ret; 
0x001391a7: test esp, ecx; jb 0x1391a4; call dword ptr [eax - 0x18]; 
0x00139265: test esp, ecx; jb 0x139262; call dword ptr [eax - 0x18]; 
0x0013928d: test esp, ecx; jb 0x13928a; call dword ptr [eax - 0x18]; 
0x001392bd: test esp, ecx; jb 0x1392ba; call dword ptr [eax - 0x18]; 
0x001592ea: test esp, ecx; jb 0x1592e7; call dword ptr [eax - 0x18]; 
0x001593e6: test esp, ecx; jb 0x1593e3; call dword ptr [eax - 0x18]; 
0x001661db: test esp, ecx; jb 0x1661d8; call dword ptr [eax - 0x18]; 
0x00058ee3: test esp, ecx; jb 0x58ee0; call dword ptr [eax - 0x18]; 
0x00058f3d: test esp, ecx; jb 0x58f3a; call dword ptr [eax - 0x18]; 
0x0009b355: test esp, ecx; jb 0x9b352; call dword ptr [eax - 0x18]; 
0x00198383: test esp, edi; add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x00195b4f: test esp, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf40; 
0x0005913e: test esp, edi; xor ecx, edi; call dword ptr [ebx + 0x50]; 
0x00081a7f: test esp, edx; add byte ptr [eax], al; add byte ptr [ebx - 0x72aff314], al; sub dword ptr [ebx + 0x3e], -7; call dword ptr [ecx + 0x52]; 
0x000c9bc7: test esp, edx; add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x0006b463: test esp, esi; idiv bh; jmp ptr [ecx]; ret; 
0x000219e1: test esp, esi; insd dword ptr es:[edi], dx; stc; call dword ptr [eax - 0x18]; 
0x00198c74: tzcnt edx, edx; add eax, edx; ret; 
0x00198c80: tzcnt edx, edx; mov eax, 0x20; add eax, edx; ret; 
0x00163379: ud1; ret; 
0x00020f3f: ud2; cmp dword ptr [ebp - 0x30], 0; je 0x20f64; sub esp, 0xc; push dword ptr [ebp - 0x34]; call dword ptr [ebp - 0x38]; 
0x00147a07: wait; add bl, byte ptr [edi - 7]; call dword ptr [ebx - 0x18]; 
0x0008a0f4: wait; add byte ptr [eax], al; add byte ptr [ebp - 0x6c05879], cl; call dword ptr [eax - 0x73]; 
0x0008938b: wait; add byte ptr [eax], al; add byte ptr [ebp - 0x6c06079], cl; call dword ptr [eax - 0x73]; 
0x00093d90: wait; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b20c4], al; pop edi; ret; 
0x0016d061: wait; add byte ptr [eax], al; add byte ptr [ebx - 0x6972f714], al; clc; stc; call dword ptr [edx - 0x77]; 
0x00058907: wait; add dword ptr [eax], eax; add esp, 0x1c; ret; 
0x00105e93: wait; dec dword ptr [ebx - 0x19f43]; dec dword ptr [ebp - 0x6656b79]; call dword ptr [eax + 0x68]; 
0x0009b657: wait; idiv bh; lea eax, [eax - 0x174a50]; test byte ptr [ecx + 0x7e], 0x10; cmovne eax, edx; ret; 
0x00166a54: wait; in al, dx; call dword ptr [eax - 0x73]; 
0x0005ecf4: wait; loope 0x5ecf6; call dword ptr [eax - 0x75]; 
0x000d3b0b: wait; or al, byte ptr [eax]; add byte ptr [ebx + 0x6a5204ec], al; and byte ptr [ebp - 0x77], dl; fucomp st(0); ret; 
0x00097e49: wait; rol byte ptr [edi], 0; add byte ptr [ecx], bh; fisttp qword ptr [ebp - 0x6af0f798]; ret; 
0x000fa486: wait; stc; call dword ptr [eax - 0x73]; 
0x0014d5dc: wbinvd; ret; 
0x0004147a: wrmsr; stc; call dword ptr [eax - 0x18]; 
0x00069341: xabort -1; add ecx, ebp; jmp ecx; 
0x000fa66c: xchg ah, ah; wait; stc; call dword ptr [eax - 0x73]; 
0x000b7125: xchg ah, ah; xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x00169c0e: xchg ah, al; mov bl, 0xf9; call dword ptr [eax - 0x73]; 
0x000fa484: xchg ah, al; wait; stc; call dword ptr [eax - 0x73]; 
0x0005692b: xchg ah, ch; jbe 0x56928; call dword ptr [eax - 0x18]; 
0x0013b9ef: xchg ah, cl; add al, byte ptr [eax]; add byte ptr [ecx], ch; ret 0xc031; 
0x001018c6: xchg ah, cl; dec ecx; stc; call dword ptr [eax - 0x18]; 
0x00147722: xchg ah, cl; jb 0x14771f; call dword ptr [eax - 0x18]; 
0x0015910d: xchg ah, cl; jb 0x15910a; call dword ptr [eax - 0x18]; 
0x001654b7: xchg ah, cl; jb 0x1654b4; call dword ptr [eax - 0x18]; 
0x0002fa5b: xchg ah, cl; jb 0x2fa58; call dword ptr [eax - 0x18]; 
0x000fa43b: xchg ah, cl; jb 0xfa438; call dword ptr [eax - 0x18]; 
0x000fa48b: xchg ah, cl; jb 0xfa488; call dword ptr [eax - 0x18]; 
0x000fa673: xchg ah, cl; jb 0xfa670; call dword ptr [eax - 0x18]; 
0x0004471f: xchg ah, cl; je 0x4471c; call dword ptr [eax - 0x18]; 
0x000218ed: xchg ah, dh; insd dword ptr es:[edi], dx; stc; call dword ptr [eax - 0x18]; 
0x0016aafd: xchg ah, dl; mov bl, 0xf9; call dword ptr [eax - 0x73]; 
0x001654b0: xchg al, ah; arpl cx, di; call dword ptr [eax - 0x73]; 
0x0013face: xchg al, ah; cmpsd dword ptr [esi], dword ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x00028815: xchg al, ah; outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x000fcb8e: xchg al, al; adc ebp, ebp; call dword ptr [eax + 0x6a]; 
0x00084d90: xchg al, al; jle 0x84d8d; call dword ptr [eax - 0x18]; 
0x0016ab10: xchg al, al; stc; call dword ptr [eax - 0x18]; 
0x00088f3a: xchg al, bh; jg 0x88f37; call dword ptr [eax - 0x18]; 
0x00089c79: xchg al, bh; jg 0x89c76; call dword ptr [eax - 0x18]; 
0x0013ab82: xchg al, bl; inc ebx; stc; call dword ptr [eax + 0x6a]; 
0x001654cb: xchg al, bl; push edi; stc; call dword ptr [eax + 0x6a]; 
0x00150ca5: xchg al, ch; lodsd eax, dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x000b6aa6: xchg al, ch; xchg ebp, eax; stc; call dword ptr [eax - 0x18]; 
0x00097cd2: xchg al, ch; xchg ebx, eax; stc; dec dword ptr [ebp - 0x6bf3a6a]; call dword ptr [eax - 0x73]; 
0x000b6a93: xchg al, cl; xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x00095bd0: xchg al, dh; add dword ptr [eax], eax; add byte ptr [ebp + 0x1f40d], cl; add byte ptr [ecx], al; ret; 
0x00044742: xchg al, dh; jne 0x4473f; call dword ptr [eax - 0x18]; 
0x00149e5a: xchg al, dh; stosb byte ptr es:[edi], al; stc; call dword ptr [eax - 0x18]; 
0x0009b3b4: xchg bh, ah; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x0013b114: xchg bh, ah; pop ebx; stc; call dword ptr [eax - 0x18]; 
0x0019083c: xchg bh, bh; adc byte ptr [eax], al; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00112b08: xchg bh, bh; jmp dword ptr [ebp - 0x75]; 
0x0007add6: xchg bh, bh; jmp dword ptr [ecx]; 
0x000fec43: xchg bh, ch; dec eax; stc; call dword ptr [eax - 0x18]; 
0x00072304: xchg bh, dh; add byte ptr [eax], al; add byte ptr [ebx - 0xa8fb14], al; jne 0x72318; push esi; call dword ptr [ebx + 0x1c]; 
0x000b6c77: xchg bh, dh; inc ebx; stc; call dword ptr [eax - 0x18]; 
0x0014cee6: xchg bl, ah; pop edi; stc; call dword ptr [eax - 0x18]; 
0x0007ddde: xchg byte ptr [0x83000001], ah; in al, dx; or al, 0x53; call dword ptr [esi + 0x44]; 
0x0007c7f6: xchg byte ptr [0x83000002], dl; in al, dx; or byte ptr [ebp + 0x50282444], cl; push esi; call dword ptr [edi + 0x48]; 
0x0011973b: xchg byte ptr [0xc2c68100], al; or byte ptr [ecx], dl; add byte ptr [ebx - 0x77], dl; ret; 
0x00173e20: xchg byte ptr [eax + 0x29ffffe3], ah; ret 0xc129; 
0x0006635c: xchg byte ptr [eax + 0x3efff8c5], al; jmp esi; 
0x000de766: xchg byte ptr [eax + 0x3f], ch; add byte ptr [eax], al; mov eax, dword ptr [eax]; test eax, eax; je 0xde773; call eax; 
0x0010baf4: xchg byte ptr [eax + 0x4a], ch; stc; call dword ptr [eax - 0x18]; 
0x0011bc1c: xchg byte ptr [eax + 0x4b], dh; stc; call dword ptr [edi + 0x50]; 
0x0002b0fc: xchg byte ptr [eax + 0x68], ah; stc; call dword ptr [eax - 0x73]; 
0x00029dc6: xchg byte ptr [eax + 0x69], ah; stc; call dword ptr [eax + 0x68]; 
0x000299c8: xchg byte ptr [eax + 0x69], ah; stc; call dword ptr [eax - 0x73]; 
0x00025ffc: xchg byte ptr [eax + 0x6a], ah; stc; call dword ptr [eax + 0x68]; 
0x00025ee8: xchg byte ptr [eax + 0x6a], ah; stc; call dword ptr [eax - 0x73]; 
0x00021fc4: xchg byte ptr [eax + 0x6e], dl; stc; call dword ptr [eax - 0x73]; 
0x00025fec: xchg byte ptr [eax + 0x6f], cl; stc; call dword ptr [eax - 0x18]; 
0x00065286: xchg byte ptr [eax + 0x78], bh; stc; call dword ptr [eax + 0x68]; 
0x00086d20: xchg byte ptr [eax + 0x7f], dh; stc; call dword ptr [eax - 0x73]; 
0x00079d15: xchg byte ptr [eax + eax - 0xf770000], ah; pop ebx; pop esi; pop edi; ret; 
0x00088fcd: xchg byte ptr [eax + eax*4 - 7], dl; call dword ptr [eax - 0x18]; 
0x0005bcb1: xchg byte ptr [eax + edi*2 - 7], ah; call dword ptr [eax - 0x73]; 
0x00044623: xchg byte ptr [eax + esi - 7], bh; call dword ptr [eax - 0x18]; 
0x00029d07: xchg byte ptr [eax + esi*2 - 7], dl; call dword ptr [eax - 0x18]; 
0x00029d2a: xchg byte ptr [eax + esi*2], ch; stc; call dword ptr [eax - 0x18]; 
0x0014771b: xchg byte ptr [eax - 0x56], dl; stc; call dword ptr [eax - 0x73]; 
0x00092679: xchg byte ptr [eax - 0x7c], ah; stc; call dword ptr [eax + 0x68]; 
0x000926dc: xchg byte ptr [eax - 0x7c], ah; stc; call dword ptr [eax - 0x73]; 
0x0006fc3b: xchg byte ptr [eax - 0x7d000000], dl; in al, dx; add al, 0xc1; clc; add dl, byte ptr [eax - 0x77]; ret; 
0x001152d6: xchg byte ptr [eax - 7], al; call dword ptr [eax - 0x18]; 
0x0008bc2b: xchg byte ptr [eax], ah; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x000263c3: xchg byte ptr [eax], ah; push -7; call dword ptr [eax - 0x73]; 
0x0006e8a7: xchg byte ptr [eax], ah; retf 0xfff8; add edx, ebx; jmp edx; 
0x0012393f: xchg byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00044788: xchg byte ptr [eax], al; jne 0x44785; call dword ptr [eax - 0x18]; 
0x000ff222: xchg byte ptr [eax], al; sahf; stc; call dword ptr [eax - 0x18]; 
0x0004485c: xchg byte ptr [eax], bh; jbe 0x44859; call dword ptr [eax - 0x18]; 
0x001654c4: xchg byte ptr [eax], bh; mov bl, 0xf9; call dword ptr [eax - 0x73]; 
0x00172363: xchg byte ptr [eax], bl; add dword ptr [eax], eax; add byte ptr [ebx + 0x6a08ec], al; push esi; call dword ptr [ebx + 8]; 
0x000dc60a: xchg byte ptr [eax], bl; inc esi; stc; call dword ptr [edi - 1]; 
0x0002601f: xchg byte ptr [eax], bl; jno 0x2601c; call dword ptr [eax - 0x73]; 
0x000de1a0: xchg byte ptr [eax], ch; or dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [eax], al; add al, ch; ret 0xfb4d; 
0x00025efb: xchg byte ptr [eax], ch; outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x00149e25: xchg byte ptr [eax], ch; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x000287c9: xchg byte ptr [eax], cl; jo 0x287c6; call dword ptr [eax - 0x18]; 
0x00029d4d: xchg byte ptr [eax], cl; jo 0x29d4a; call dword ptr [eax - 0x18]; 
0x0002b155: xchg byte ptr [eax], cl; jo 0x2b152; call dword ptr [eax - 0x18]; 
0x0011b3f9: xchg byte ptr [eax], dh; xor ecx, edi; call dword ptr [eax - 0x18]; 
0x000c68d8: xchg byte ptr [ebp - 0x7400000b], al; test dword ptr [ecx + ecx*8 - 0x137c0001], esi; or byte ptr [ebp - 0x35f48], cl; call dword ptr [edi + 0x53]; 
0x00032a92: xchg byte ptr [ebp - 0x74d98b40], al; inc edx; or al, 0x83; ret 0x8908; 
0x0007fd1e: xchg byte ptr [ebp - 0x7d000000], ah; in al, dx; or al, 0x56; call dword ptr [ebp + 0x30]; 
0x00087c36: xchg byte ptr [ebp - 6], bh; dec dword ptr [ebx - 0x7972dbcc]; xchg esp, eax; jg 0x87c3b; call dword ptr [eax - 0x73]; 
0x00057fb2: xchg byte ptr [ebx + 0x31], bh; stc; call dword ptr [eax + 0x53]; 
0x00087ca6: xchg byte ptr [ebx + 0x3f], al; stc; call dword ptr [eax - 0x18]; 
0x00070fc0: xchg byte ptr [ebx + 1], ch; add byte ptr [eax], al; sub esp, 8; push 0; push esi; call dword ptr [ebx + 8]; 
0x0011b9b8: xchg byte ptr [ebx + ecx*2 - 7], dl; call dword ptr [eax - 0x75]; 
0x00095857: xchg byte ptr [ebx + edi], bl; add byte ptr [ebx - 0x70f0fe08], al; ret 0; 
0x0009828b: xchg byte ptr [ebx + edx*4 - 0x69720007], al; lds eax, ptr [eax - 7]; call dword ptr [eax - 0x73]; 
0x0009848b: xchg byte ptr [ebx + edx*4 - 7], ah; dec dword ptr [ebp - 0x6bf3a6a]; call dword ptr [eax - 0x73]; 
0x00167eb0: xchg byte ptr [ebx + esi*4 - 7], ch; call dword ptr [eax - 0x18]; 
0x0005468d: xchg byte ptr [ebx - 0x3f7c47ab], cl; add dword ptr [ecx], ebp; fidivr dword ptr [ecx]; ret 0xee7f; 
0x0014e8b9: xchg byte ptr [ebx - 0x7a72f314], al; mov byte ptr [esi - 7], bh; call dword ptr [eax - 0x18]; 
0x0014e8b9: xchg byte ptr [ebx - 0x7a72f314], al; mov byte ptr [esi - 7], bh; call dword ptr [eax - 0x18]; retf; bnd jmp dword ptr [esi - 0x70]; 
0x00069055: xchg byte ptr [ebx - 0x7cffffed], dl; in al, dx; add al, 0x53; push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x001933e9: xchg byte ptr [ebx - 0x7cfffffe], al; ret 0x8310; 
0x00191f42: xchg byte ptr [ebx - 0x7cffffff], bl; ret 0x8310; 
0x001977b7: xchg byte ptr [ebx], al; add byte ptr [eax], al; add eax, 0xf; pop edi; ret; 
0x0013b0f3: xchg byte ptr [ebx], al; pop esp; stc; call dword ptr [eax - 0x18]; 
0x00078bd4: xchg byte ptr [ebx], bh; stc; call dword ptr [eax - 0x18]; 
0x00088f27: xchg byte ptr [ecx + eax*4 - 7], dl; call dword ptr [eax - 0x73]; 
0x001421e8: xchg byte ptr [ecx + ebp*4 - 7], cl; call dword ptr [edx - 1]; 
0x000698a2: xchg byte ptr [ecx - 0x7cfffff6], al; in al, dx; add al, 0x55; push dword ptr [esp + 0x44]; push edi; call dword ptr [ebx + 0x1c]; 
0x000c2f35: xchg byte ptr [ecx], bh; ret 0x8f0f; 
0x00087c51: xchg byte ptr [ecx], ch; aas; stc; call dword ptr [eax - 0x18]; 
0x00033d5b: xchg byte ptr [edi + 0x2f], dh; stc; call dword ptr [eax - 1]; 
0x00065292: xchg byte ptr [edi + 0x32], ch; stc; call dword ptr [eax - 0x73]; 
0x00087c73: xchg byte ptr [edi + 0x3f], bl; stc; call dword ptr [eax - 0x18]; 
0x00094dff: xchg byte ptr [edi + eax*4], cl; stc; call dword ptr [eax - 1]; 
0x0011b5f5: xchg byte ptr [edi + ebp], bh; stc; call dword ptr [eax - 1]; 
0x00109fee: xchg byte ptr [edi + ebx*4 - 7], ch; call dword ptr [eax - 0x18]; 
0x00087b71: xchg byte ptr [edi + edi*2], ch; stc; call dword ptr [eax - 0x18]; 
0x00056918: xchg byte ptr [edi + esi*2], dl; stc; call dword ptr [eax - 0x73]; 
0x00068b3c: xchg byte ptr [edi - 0x7cfffff0], bh; in al, dx; add al, 0x53; push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x000674f6: xchg byte ptr [edi - 0x7cfffff5], bh; in al, dx; add al, 0x53; push dword ptr [ebp - 0x88c]; push dword ptr [ebp - 0x87c]; call dword ptr [edx + 0x1c]; 
0x0013f91e: xchg byte ptr [edi - 7], bl; call dword ptr [eax - 0x18]; 
0x0011f81f: xchg byte ptr [edi - 7], cl; call dword ptr [eax + 0x57]; 
0x000b6c57: xchg byte ptr [edi], ah; inc esp; stc; call dword ptr [eax - 0x18]; 
0x0018fefc: xchg byte ptr [edi], bh; sbb al, byte ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0019161c: xchg byte ptr [edi], bl; add eax, dword ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0018f80c: xchg byte ptr [edi], ch; and dword ptr [eax], eax; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00190f2c: xchg byte ptr [edi], cl; or al, byte ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0013b017: xchg byte ptr [edi], cl; pop esp; stc; call dword ptr [eax - 0x18]; 
0x0006dd64: xchg byte ptr [edi], dh; adc dword ptr [eax], eax; add byte ptr [ebx + 0x565304ec], al; push ebp; call dword ptr [edi + 0x1c]; 
0x00087b93: xchg byte ptr [edx + 0x47], ch; stc; call dword ptr [eax - 0x18]; 
0x000feb8a: xchg byte ptr [edx + 0x49], ch; stc; call dword ptr [eax - 0x18]; 
0x0010bad7: xchg byte ptr [edx + 0x4a], ch; stc; call dword ptr [eax - 0x18]; 
0x0011b3f2: xchg byte ptr [edx + 0x4b], cl; stc; call dword ptr [eax - 0x73]; 
0x00140ed3: xchg byte ptr [edx + 0x5d], dh; stc; call dword ptr [ecx - 0x77]; 
0x00147197: xchg byte ptr [edx + 0x5e], bh; stc; call dword ptr [eax - 0x18]; 
0x00077f24: xchg byte ptr [edx + 0x6a000001], al; add dword ptr [edx], ebp; push 0; push dword ptr [esp + 0x18]; call dword ptr [ebx + 0x40]; 
0x0008ba8a: xchg byte ptr [edx + eax*4], al; stc; call dword ptr [eax - 0x73]; 
0x0002e506: xchg byte ptr [edx + esi*2], dl; stc; call dword ptr [eax - 0x18]; 
0x0013bb92: xchg byte ptr [edx], bh; pop esp; stc; call dword ptr [eax - 0x39]; 
0x000e0273: xchg byte ptr [edx], bl; inc edi; stc; call dword ptr [eax - 0x18]; 
0x000dc5a4: xchg byte ptr [edx], ch; inc esi; stc; call dword ptr [ecx - 1]; 
0x00044816: xchg byte ptr [esi + 0x30], ah; stc; call dword ptr [eax - 0x18]; 
0x0011bc6d: xchg byte ptr [esi + 0x4b], bl; stc; call dword ptr [eax - 1]; 
0x0007ab95: xchg byte ptr [esi + 1], dh; add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x3c]; sub esp, 0xc; push esi; call dword ptr [eax + 0x30]; 
0x00021fd4: xchg byte ptr [esi + ebp*2], ch; stc; call dword ptr [eax - 0x18]; 
0x00150c95: xchg byte ptr [esi + ebp*4], bl; stc; call dword ptr [eax - 0x73]; 
0x000feb77: xchg byte ptr [esi + ebx*4 - 7], bl; call dword ptr [eax - 0x73]; 
0x000ff44f: xchg byte ptr [esi + ebx*4], dh; stc; call dword ptr [eax - 0x73]; 
0x0011f680: xchg byte ptr [esi + ecx - 0x137d0000], bl; or byte ptr [ebp - 0x6b42d7d], cl; call dword ptr [eax + 0x57]; 
0x000e95cf: xchg byte ptr [esi + edx - 0x77], bh; ret 0xd139; 
0x0011c2f4: xchg byte ptr [esi], bh; inc ebp; stc; call dword ptr [eax - 0x18]; 
0x00023788: xchg byte ptr [esi], cl; sub bh, cl; call dword ptr [eax - 0x18]; 
0x00067f6d: xchg byte ptr [esi], dl; add eax, 0xec830000; add al, 0x53; push edx; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x0009268c: xchg byte ptr [esp + eax*4], dh; stc; call dword ptr [eax - 0x18]; 
0x00028788: xchg byte ptr [esp + ebp], bl; stc; call dword ptr [eax - 0x18]; 
0x0016945b: xchg ch, ah; popal; stc; call dword ptr [eax + 0x6a]; 
0x0004e0fe: xchg ch, bh; add dword ptr [eax], eax; add byte ptr [ebx - 0x362f43], al; call dword ptr [eax]; 
0x0013ad34: xchg ch, dh; pop ebx; stc; call dword ptr [eax - 0x18]; 
0x00172953: xchg ch, dl; xor cl, bh; call dword ptr [eax - 0x18]; 
0x0007d77a: xchg cl, bh; add byte ptr [eax], al; add byte ptr [ebx + 0x555004ec], al; push esi; call dword ptr [ebx + 0x38]; 
0x00172830: xchg cl, bh; jmp dword ptr [ebp - 0x75]; 
0x00086d33: xchg dh, bh; stc; call dword ptr [eax - 0x18]; 
0x0012414b: xchg dh, cl; push ebp; stc; call dword ptr [eax - 0x18]; 
0x00026032: xchg dh, dh; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x00025f90: xchg dh, dl; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x0002acf2: xchg dh, dl; sub edi, ecx; call dword ptr [eax - 0x18]; ret; 
0x0002600f: xchg dl, al; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x0017294c: xchg dl, bl; xor cl, bh; call dword ptr [eax - 0x73]; 
0x000891b7: xchg dl, dl; aas; stc; call dword ptr [eax - 0x18]; 
0x0012c066: xchg dword ptr [0x89000002], edx; ret; 
0x000b3733: xchg dword ptr [eax + 0x1000000], ebp; clc; add eax, ecx; pop edi; ret; 
0x00074892: xchg dword ptr [eax + 0x29ffffe3], esp; ret 0x4d89; 
0x00070dd6: xchg dword ptr [eax + 0x29ffffe3], esp; ret 0xd989; 
0x0007e060: xchg dword ptr [eax + 0x29ffffe3], esp; ret 0xf189; 
0x0010b2ea: xchg dword ptr [eax + 0x4a], ebp; stc; call dword ptr [eax - 0x18]; 
0x0016f00d: xchg dword ptr [eax + 0x4d], esi; hlt; call dword ptr [eax - 0x73]; 
0x0013a329: xchg dword ptr [eax + 0x57], edi; stc; call dword ptr [eax + 0x6a]; 
0x00104c64: xchg dword ptr [eax + 0x6a000000], esp; jg 0x104c54; jo 0x104c05; std; call dword ptr [ecx + 0x6a]; 
0x0015a166: xchg dword ptr [eax + 0x6afffff9], edi; add byte ptr [eax - 0x73], dl; inc ebx; or al, 0x83; ret; 
0x0002540b: xchg dword ptr [eax + 0x6f], ecx; stc; call dword ptr [eax - 0x18]; 
0x0004086e: xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x0008b8f4: xchg dword ptr [eax + 0xf0], edi; mov esi, edx; call dword ptr gs:[0x10]; 
0x00041433: xchg dword ptr [eax + esi - 7], edi; call dword ptr [eax - 0x18]; 
0x00026f36: xchg dword ptr [eax + esi*2 - 7], edx; call dword ptr [eax - 0x18]; 
0x00026f59: xchg dword ptr [eax + esi*2], ebp; stc; call dword ptr [eax - 0x18]; 
0x00089e4f: xchg dword ptr [eax - 0x45000004], ebp; or dword ptr [eax], 0xa30f0000; ret 0x830f; 
0x0008911f: xchg dword ptr [eax - 0x45000004], esp; or dword ptr [eax], 0xa30f0000; ret 0x830f; 
0x00140c6e: xchg dword ptr [eax - 0x58], edi; stc; call dword ptr [eax - 0x73]; 
0x001027c1: xchg dword ptr [eax - 0x62], ebp; stc; call dword ptr [eax - 0x18]; 
0x000fc27c: xchg dword ptr [eax - 0x63], esp; stc; call dword ptr [eax - 0x18]; 
0x00177f4f: xchg dword ptr [eax - 0x65], eax; stc; call dword ptr [eax - 0x73]; 
0x00197925: xchg dword ptr [eax], eax; add byte ptr [eax], al; lea eax, [eax + 4]; pop edi; ret; 
0x00196fb5: xchg dword ptr [eax], eax; add byte ptr [eax], al; lea eax, [ecx + 5]; ret; 
0x001968e5: xchg dword ptr [eax], eax; add byte ptr [eax], al; lea eax, [edi + 4]; pop edi; ret; 
0x0008980e: xchg dword ptr [eax], eax; add byte ptr [eax], al; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x0013a59d: xchg dword ptr [eax], eax; cmpsb byte ptr [esi], byte ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x000cabe7: xchg dword ptr [eax], eax; insd dword ptr es:[edi], dx; stc; call dword ptr [eax + 0x56]; 
0x000413ed: xchg dword ptr [eax], eax; jne 0x413ea; call dword ptr [eax - 0x18]; 
0x000478f3: xchg dword ptr [eax], eax; jne 0x478f0; call dword ptr [eax - 0x18]; 
0x000478f3: xchg dword ptr [eax], eax; jne 0x478f0; call dword ptr [eax - 0x18]; ret 0xfe80; 
0x000511b1: xchg dword ptr [eax], eax; jne 0x511ae; call dword ptr [eax - 0x18]; 
0x000bba5b: xchg dword ptr [eax], eax; jne 0xbba58; call dword ptr [eax - 0x18]; 
0x000c15de: xchg dword ptr [eax], eax; jne 0xc15db; call dword ptr [eax - 0x18]; 
0x000c8c08: xchg dword ptr [eax], eax; jne 0xc8c05; call dword ptr [eax - 0x18]; 
0x00091d9a: xchg dword ptr [eax], eax; test cl, bh; call dword ptr [eax - 0x73]; 
0x0003a643: xchg dword ptr [eax], ebp; je 0x3a640; call dword ptr [eax - 0x73]; 
0x00025312: xchg dword ptr [eax], ebp; outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x00083898: xchg dword ptr [eax], ebx; add al, byte ptr [eax]; add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x0010388c: xchg dword ptr [eax], ebx; dec edx; stc; call dword ptr [eax - 0x18]; 
0x001476a6: xchg dword ptr [eax], ebx; stosb byte ptr es:[edi], al; stc; call dword ptr [eax - 0x73]; 
0x00026f7c: xchg dword ptr [eax], ecx; jo 0x26f79; call dword ptr [eax - 0x18]; 
0x00027c83: xchg dword ptr [eax], ecx; jo 0x27c80; call dword ptr [eax - 0x18]; 
0x00041410: xchg dword ptr [eax], edi; jbe 0x4140d; call dword ptr [eax - 0x18]; 
0x00047916: xchg dword ptr [eax], edi; jbe 0x47913; call dword ptr [eax - 0x18]; 
0x0005111d: xchg dword ptr [eax], edi; jbe 0x5111a; call dword ptr [eax - 0x18]; 
0x000bbac4: xchg dword ptr [eax], edi; jbe 0xbbac1; call dword ptr [eax - 0x18]; 
0x000be98b: xchg dword ptr [eax], edi; jbe 0xbe988; call dword ptr [eax - 0x18]; 
0x000c1601: xchg dword ptr [eax], edi; jbe 0xc15fe; call dword ptr [eax - 0x18]; 
0x00066016: xchg dword ptr [eax], edi; jns 0x66013; call dword ptr [eax - 0x73]; 
0x0006b08e: xchg dword ptr [eax], edi; jns 0x6b08b; call dword ptr [eax - 0x73]; 
0x001710d5: xchg dword ptr [eax], edx; pop esi; hlt; call dword ptr [eax - 0x18]; 
0x00130fba: xchg dword ptr [eax], esp; insd dword ptr es:[edi], dx; stc; call dword ptr [eax - 0x75]; 
0x0015878d: xchg dword ptr [eax], esp; mov bh, 0xf3; call dword ptr [eax - 0x73]; 
0x00093014: xchg dword ptr [eax], esp; mov fs, esi; call dword ptr [eax - 0x73]; 
0x000415cc: xchg dword ptr [eax], esp; xor cl, bh; call dword ptr [eax - 0x18]; 
0x000f43f4: xchg dword ptr [ebp + 0x48], esi; stc; dec dword ptr [ebp - 0x6b7af71]; call dword ptr [eax - 0x77]; 
0x0014831c: xchg dword ptr [ebp + 0x5f], edx; stc; call dword ptr [eax - 0x18]; 
0x00047808: xchg dword ptr [ebp + 0x68fff930], edi; dec ebp; add eax, 0x8d500000; xchg eax, esi; jne 0x47811; call dword ptr [eax - 0x18]; 
0x00051136: xchg dword ptr [ebp + 0x68fff930], edi; dec ebp; add eax, 0x8d500000; xchg eax, esi; jne 0x5113f; call dword ptr [eax - 0x18]; 
0x000bbb91: xchg dword ptr [ebp + 0x68fff930], edi; dec ebp; add eax, 0x8d500000; xchg eax, esi; jne 0xbbb9a; call dword ptr [eax - 0x18]; 
0x000be860: xchg dword ptr [ebp + 0x68fff930], edi; dec ebp; add eax, 0x8d500000; xchg eax, esi; jne 0xbe869; call dword ptr [eax - 0x18]; 
0x000c1667: xchg dword ptr [ebp + 0x68fff930], edi; dec ebp; add eax, 0x8d500000; xchg eax, esi; jne 0xc1670; call dword ptr [eax - 0x18]; 
0x00047996: xchg dword ptr [ebp + 0x68fff930], edi; fadd dword ptr [0x8d500000]; xchg dword ptr [esi + 0x30], esp; stc; call dword ptr [eax - 0x18]; 
0x0004790a: xchg dword ptr [ebp + 0x68fff930], edi; pop edi; add eax, 0x8d500000; xchg dword ptr [eax], edi; jbe 0x47913; call dword ptr [eax - 0x18]; 
0x00051111: xchg dword ptr [ebp + 0x68fff930], edi; pop edi; add eax, 0x8d500000; xchg dword ptr [eax], edi; jbe 0x5111a; call dword ptr [eax - 0x18]; 
0x000bbab8: xchg dword ptr [ebp + 0x68fff930], edi; pop edi; add eax, 0x8d500000; xchg dword ptr [eax], edi; jbe 0xbbac1; call dword ptr [eax - 0x18]; 
0x000be97f: xchg dword ptr [ebp + 0x68fff930], edi; pop edi; add eax, 0x8d500000; xchg dword ptr [eax], edi; jbe 0xbe988; call dword ptr [eax - 0x18]; 
0x000c15f5: xchg dword ptr [ebp + 0x68fff930], edi; pop edi; add eax, 0x8d500000; xchg dword ptr [eax], edi; jbe 0xc15fe; call dword ptr [eax - 0x18]; 
0x0013d465: xchg dword ptr [ebp - 1], esp; jmp dword ptr [esi - 0x70]; 
0x00167914: xchg dword ptr [ebp], esi; add byte ptr [eax - 0x73], dl; xchg dword ptr [edx + 0x31fff962], ebx; call dword ptr [eax + 0x6a]; 
0x0007ec50: xchg dword ptr [ebx + 0x199c], eax; cmp eax, 1; jg 0x7ec90; add esp, 8; pop ebx; ret; 
0x00152396: xchg dword ptr [ebx + 0x2a], ebx; stc; call dword ptr [eax + 0x53]; 
0x00148315: xchg dword ptr [ebx + 0x2a], ebx; stc; call dword ptr [eax - 0x73]; 
0x001322b7: xchg dword ptr [ebx + 0x2a], ebx; stc; dec dword ptr [ecx - 0x7872af05]; jno 0x132302; stc; call dword ptr [eax - 0x18]; 
0x000cd201: xchg dword ptr [ebx + 0x3d88], eax; cmp eax, 1; jg 0xcd230; add esp, 8; pop ebx; ret; 
0x0008795d: xchg dword ptr [ebx + 0x3f], eax; stc; call dword ptr [eax - 0x18]; 
0x00087c0d: xchg dword ptr [ebx + 0x3f], edx; stc; call dword ptr [eax - 0x18]; 
0x0014ddb3: xchg dword ptr [ebx + 0x60], edx; stc; call dword ptr [eax - 0x18]; 
0x000913af: xchg dword ptr [ebx + eax - 0x58180000], ebx; ret; 
0x000912c8: xchg dword ptr [ebx + eax*4 - 7], ecx; call dword ptr [eax - 0x18]; 
0x0004bf3a: xchg dword ptr [ebx + eax*4], eax; ret 0x8901; 
0x00081a19: xchg dword ptr [ebx + eax], eax; add byte ptr [ebp + 0x72840fc0], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x736d], cl; jmp dword ptr [ebp - 0x5f]; 
0x0014d261: xchg dword ptr [ebx + ebp*4 - 7], ebp; call dword ptr [eax - 0x18]; 
0x0014c694: xchg dword ptr [ebx + ebp*4 - 7], ebx; call dword ptr [eax - 0x73]; 
0x0014b2b2: xchg dword ptr [ebx + ebp*4 - 7], esp; call dword ptr [eax - 0x73]; 
0x0014b2c5: xchg dword ptr [ebx + ebp*4], edi; stc; call dword ptr [eax - 0x18]; 
0x0013a76a: xchg dword ptr [ebx + ebx*2 - 7], ebx; call dword ptr [eax - 0x73]; 
0x0017648f: xchg dword ptr [ebx + ebx*4], ebp; stc; call dword ptr [eax - 0x73]; 
0x00099a30: xchg dword ptr [ebx + edx*4 - 7], ecx; dec dword ptr [ebp - 0x6bf3a69]; call dword ptr [eax - 0x73]; 
0x0016d075: xchg dword ptr [ebx - 0x3b7c000c], eax; adc byte ptr [ebx - 0x7af7dbac], cl; sal byte ptr [esp + esi - 0x7d], 0xec; or byte ptr [ebp - 0x69a164a], cl; call dword ptr [esi + 0x53]; 
0x00141f2e: xchg dword ptr [ebx - 0x68f0f008], eax; ret; 
0x00088f1d: xchg dword ptr [ebx - 0x74000003], esp; je 0x88f49; or al, 0x8d; xchg byte ptr [ecx + eax*4 - 7], dl; call dword ptr [eax - 0x73]; 
0x000fc5a3: xchg dword ptr [ebx], eax; dec ecx; stc; call dword ptr [eax + 0x56]; 
0x00040881: xchg dword ptr [ecx + 0x30], edx; stc; call dword ptr [eax - 0x18]; 
0x001322c0: xchg dword ptr [ecx + 0x3f], esi; stc; call dword ptr [eax - 0x18]; 
0x000980ea: xchg dword ptr [ecx + 0x9000000], esp; ret; 
0x0006e783: xchg dword ptr [ecx + 0xffffff2], edi; mov dh, 0x44; pavgb mm1, qword ptr [ebx - 0x768fdb8c]; fiadd dword ptr [ebx]; adc al, 0x86; jmp edx; 
0x00089384: xchg dword ptr [ecx + eax*4 - 7], esi; call dword ptr [eax + 0x68]; 
0x000893bc: xchg dword ptr [ecx + eax*4 - 7], esi; call dword ptr [eax + 0x6a]; 
0x0008947a: xchg dword ptr [ecx + eax*4 - 7], esi; call dword ptr [eax - 0x73]; 
0x000b9841: xchg dword ptr [ecx + eax*4], eax; ret 0; 
0x0004ac7c: xchg dword ptr [ecx + eax], ebx; add byte ptr [ecx + 0x3c778bd4], cl; mov edi, dword ptr [edi + 0x38]; ret; 
0x000d26d1: xchg dword ptr [ecx + ebx*4 - 7], ebx; call dword ptr [eax - 0x73]; 
0x000668b7: xchg dword ptr [ecx + edi*2], esp; stc; call dword ptr [eax - 0x73]; 
0x000bfd76: xchg dword ptr [ecx + edi*4 - 7], ebx; call dword ptr [eax + 0x56]; 
0x000d756a: xchg dword ptr [ecx - 0x73000000], edx; dec esp; and al, 0xc; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000b61f2: xchg dword ptr [ecx - 0x7d000000], eax; sti; push dword ptr [esp + edi*2 - 0x77]; fdiv st(7); ret; 
0x0003ff8f: xchg dword ptr [ecx], eax; xor cl, bh; dec dword ptr [ebp - 0x35f49]; call dword ptr [esi + 0x6a]; 
0x0012729a: xchg dword ptr [ecx], edx; push esi; stc; call dword ptr [eax + 0x6a]; 
0x0008c90a: xchg dword ptr [ecx], esi; add dword ptr [eax], eax; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x00129c29: xchg dword ptr [edi + 0x56], esp; stc; call dword ptr [eax + 0x53]; 
0x000353d5: xchg dword ptr [edi + 0xe], ebp; add byte ptr [ebx + 0x478920c4], al; adc al, 0x89; ret; 
0x00155255: xchg dword ptr [edi + ebp*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x000be859: xchg dword ptr [edi + edx*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x000c07b4: xchg dword ptr [edi + edx*4], esp; stc; call dword ptr [eax - 0x73]; 
0x000968b4: xchg dword ptr [edi - 0x76fffffd], esi; outsd dx, dword ptr [esi]; or byte ptr [eax - 0x76f7b875], dl; ret 0xf801; 
0x0013cc2d: xchg dword ptr [edi], ecx; stc; call dword ptr [eax - 0x73]; 
0x00041479: xchg dword ptr [edi], ecx; xor cl, bh; call dword ptr [eax - 0x18]; 
0x000883e7: xchg dword ptr [edi], edi; stc; call dword ptr [eax - 0x73]; 
0x00140c7e: xchg dword ptr [edi], esi; pop ebp; stc; call dword ptr [eax - 0x18]; 
0x0012e607: xchg dword ptr [edi], esi; push edi; stc; call dword ptr [eax - 0x18]; 
0x00072dda: xchg dword ptr [edx + 0x1968], eax; cmp eax, 1; jg 0x72df0; ret; 
0x0007be5a: xchg dword ptr [edx + 0x197c], eax; cmp eax, 1; jg 0x7be70; ret; 
0x00080f6a: xchg dword ptr [edx + 0x199c], eax; cmp eax, 1; jg 0x80f80; ret; 
0x0016791b: xchg dword ptr [edx + 0x31fff962], ebx; call dword ptr [eax + 0x6a]; 
0x0014ddd2: xchg dword ptr [edx + 0x60], esp; stc; call dword ptr [eax - 0x18]; 
0x00152d6d: xchg dword ptr [edx + 4], eax; cmp eax, 1; jg 0x152d80; ret; 
0x000e6138: xchg dword ptr [edx + eax], esi; add byte ptr [ebx - 0xaff7c74], cl; clc; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x001557d3: xchg dword ptr [edx - 7], esp; call dword ptr [eax + 0x6a]; 
0x001558d3: xchg dword ptr [edx - 7], esp; call dword ptr [eax - 0x18]; 
0x00155827: xchg dword ptr [edx - 7], esp; jmp dword ptr [ebp - 0x75]; 
0x00058c3d: xchg dword ptr [edx], eax; cmp eax, 1; jg 0x58c48; ret; 
0x00041532: xchg dword ptr [edx], ebp; xor cl, bh; call dword ptr [eax - 0x18]; 
0x001711bf: xchg dword ptr [edx], edi; add ebx, ebp; dec dword ptr [ebx - 0x7bfc3bbb]; nop; mov al, byte ptr [0x3efff928]; jmp eax; 
0x001489ab: xchg dword ptr [edx], edi; das; stc; call dword ptr [eax + 0x56]; 
0x000414d2: xchg dword ptr [esi + 0x30], esp; stc; call dword ptr [eax - 0x18]; 
0x00172a71: xchg dword ptr [esi + 0x31], esi; stc; call dword ptr [eax + 0x6a]; 
0x000c4b6d: xchg dword ptr [esi + 0x44], ecx; stc; call dword ptr [eax - 0x18]; 
0x000bbc4c: xchg dword ptr [esi + 0x44], esp; stc; call dword ptr [eax - 0x18]; 
0x00168838: xchg dword ptr [esi + 0x5f], esp; stc; call dword ptr [eax - 0x18]; 
0x000fc203: xchg dword ptr [esi + ebx*4 - 7], ecx; call dword ptr [eax - 0x73]; 
0x00129bbe: xchg dword ptr [esi + edx*2 - 7], ebp; call dword ptr [eax + 0x53]; 
0x0003eea8: xchg dword ptr [esi + esi*2 - 7], ebx; call dword ptr [eax + 0x68]; 
0x0004151f: xchg dword ptr [esi + esi*2 - 7], ebx; call dword ptr [eax - 0x73]; 
0x00103ab8: xchg dword ptr [esi], ebp; dec edx; stc; call dword ptr [eax - 0x18]; 
0x00109a31: xchg dword ptr [esi], ebp; stc; call dword ptr [eax + 0x53]; 
0x0013a38b: xchg dword ptr [esi], ebp; stc; call dword ptr [eax + 0x56]; 
0x000ffa45: xchg dword ptr [esi], ebp; stc; call dword ptr [eax - 0x18]; 
0x000f4685: xchg dword ptr [esi], ebp; stc; dec dword ptr [ebp - 0x6c15b71]; call dword ptr [eax - 0x17]; 
0x000dadbc: xchg dword ptr [esi], ebp; stc; dec dword ptr [edi]; inc esp; ret 0x8d50; 
0x000dad04: xchg dword ptr [esi], ebp; stc; dec dword ptr [edi]; inc esp; ret 0xec83; 
0x00119e00: xchg dword ptr [esi], ebp; stc; inc dword ptr [ebp - 0x17f88b40]; mov dword ptr [0x89fffffd], eax; ret 0x4c8b; 
0x00087bb5: xchg dword ptr [esi], ecx; aas; stc; call dword ptr [eax - 0x18]; 
0x000921b1: xchg dword ptr [esp + eax*4], ebx; stc; call dword ptr [eax - 0x73]; 
0x00091cde: xchg dword ptr [esp + eax*4], edx; stc; call dword ptr [eax - 0x73]; 
0x0003a537: xchg dword ptr [esp + esi*2], ebx; stc; call dword ptr [eax - 0x73]; 
0x0016f0b7: xchg dword ptr [esp + esi*4], ebx; stc; call dword ptr [eax + 0x6a]; 
0x0015fe9d: xchg dword ptr [esp], esp; stc; call dword ptr [eax + 0x53]; 
0x00161f2b: xchg dword ptr [esp], esp; stc; call dword ptr [eax - 0x73]; 
0x000fc6be: xchg eax, eax; adc ebp, ebp; call dword ptr [eax + 0x6a]; 
0x000e17f4: xchg eax, eax; inc edi; stc; call dword ptr [eax - 0x73]; 
0x00171104: xchg eax, ebp; out 0x28, al; cld; jmp dword ptr [esi - 0x70]; 
0x000c4a2d: xchg eax, ebp; xchg ebp, eax; stc; call dword ptr [eax - 0x18]; 
0x000fc29e: xchg eax, ebx; popfd; stc; call dword ptr [eax - 0x18]; 
0x000fc216: xchg eax, ebx; pushfd; stc; call dword ptr [eax - 0x18]; 
0x00108608: xchg eax, ebx; sahf; stc; call dword ptr [eax + 0x68]; 
0x000c8bf5: xchg eax, ecx; cwde; stc; call dword ptr [eax - 0x73]; 
0x001078af: xchg eax, ecx; sahf; stc; call dword ptr [eax - 0x73]; 
0x0002d86c: xchg eax, ecx; sub al, 0xf9; call dword ptr [eax - 0x18]; 
0x0014d2a7: xchg eax, edi; pop edi; stc; call dword ptr [eax - 0x18]; 
0x000e17fb: xchg eax, edx; inc edi; stc; call dword ptr [eax - 0x18]; 
0x00041578: xchg eax, esi; jne 0x41575; call dword ptr [eax - 0x18]; 
0x00047814: xchg eax, esi; jne 0x47811; call dword ptr [eax - 0x18]; 
0x00051142: xchg eax, esi; jne 0x5113f; call dword ptr [eax - 0x18]; 
0x000bbb9d: xchg eax, esi; jne 0xbbb9a; call dword ptr [eax - 0x18]; 
0x000be86c: xchg eax, esi; jne 0xbe869; call dword ptr [eax - 0x18]; 
0x000c1673: xchg eax, esi; jne 0xc1670; call dword ptr [eax - 0x18]; 
0x0003eebb: xchg eax, esp; das; stc; call dword ptr [eax - 0x18]; 
0x00027a7f: xchg eax, esp; jo 0x27a7c; call dword ptr [eax - 0x73]; 
0x00027aa7: xchg eax, esp; jo 0x27aa4; call dword ptr [eax - 0x73]; 
0x00027bd2: xchg eax, esp; jo 0x27bcf; call dword ptr [eax - 0x73]; 
0x00027c2a: xchg eax, esp; jo 0x27c27; call dword ptr [eax - 0x73]; 
0x00027c4d: xchg eax, esp; jo 0x27c4a; call dword ptr [eax - 0x73]; 
0x00027c70: xchg eax, esp; jo 0x27c6d; call dword ptr [eax - 0x73]; 
0x0014dda0: xchg eax, esp; lodsb al, byte ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x0013a312: xchg eax, esp; movsd dword ptr es:[edi], dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x0002450d: xchg eax, esp; outsb dx, byte ptr [esi]; stc; jmp dword ptr [esi - 0x77]; 
0x00026fe5: xchg eax, esp; outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x0002541b: xchg eax, esp; push -7; call dword ptr [eax + 0x68]; 
0x000252ff: xchg eax, esp; push -7; call dword ptr [eax - 0x73]; 
0x00155268: xchg eax, esp; scasb al, byte ptr es:[edi]; stc; call dword ptr [eax - 0x18]; 
0x00087c2f: xchg eax, esp; stc; call dword ptr [eax - 0x18]; 
0x00195b37: xchg ebp, eax; add al, byte ptr [eax]; add byte ptr [eax - 0x27af0e0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x00122176: xchg ebp, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b20c4], al; pop edi; ret; 
0x00025edf: xchg ebp, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x72c3db8c], cl; xchg byte ptr [eax + 0x6a], ah; stc; call dword ptr [eax - 0x73]; 
0x0014e648: xchg ebp, eax; cmp al, 0xad; stc; call dword ptr [edx - 0x73]; 
0x000e2be3: xchg ebp, eax; cmp bl, 0xff; call dword ptr [ebx - 0x18]; 
0x00107253: xchg ebp, eax; cmp bl, 0xff; call dword ptr [ebx - 0x18]; ret 0xf7b4; 
0x000e208c: xchg ebp, eax; cmp bl, 0xff; call dword ptr [edi - 1]; 
0x0008c6da: xchg ebp, eax; inc edx; sbb dword ptr [ecx], esi; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00160257: xchg ebp, eax; mov al, 0xf3; dec dword ptr [ecx - 0x7c72dbfc]; inc ebx; stc; call dword ptr [esi + 0x57]; 
0x0004e84c: xchg ebp, eax; mov al, byte ptr [0x8bffffc9]; xchg ebp, eax; ror cl, 0xff; call dword ptr [eax - 0x73]; 
0x000c7641: xchg ebp, eax; mov eax, 0x31ffffc9; call dword ptr [eax - 0x73]; 
0x001441b7: xchg ebp, eax; mov eax, 0x39fffffb; ret 0x4072; 
0x0005ac47: xchg ebp, eax; mov eax, 0x39fffffb; ret 0x840f; 
0x00143a6a: xchg ebp, eax; mov eax, 0x85fffffb; ror byte ptr [edi], 0x45; fsubr st(1); ret 0xfffe; 
0x000c7353: xchg ebp, eax; mov eax, 0xe9ffffc9; push 0x31ffffea; inc dword ptr [ebx - 0x363743]; call dword ptr [eax]; 
0x0005b99e: xchg ebp, eax; mov esp, 0x1fffffb; ret 0xd801; 
0x0005e36b: xchg ebp, eax; mov esp, 0x1fffffb; ret 0xf001; 
0x00084f9c: xchg ebp, eax; or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; call dword ptr gs:[0x10]; 
0x001412ae: xchg ebp, eax; push 0x89ffffff; pop ebp; test byte ptr [ecx - 0x8f7b], cl; dec dword ptr [ecx - 0x9373]; jmp dword ptr [ebp - 0x5f]; 
0x0011fa34: xchg ebp, eax; push ebx; stc; call dword ptr [eax + 0x57]; 
0x0011d484: xchg ebp, eax; rcr byte ptr [esi + 0x5f], 0xf; mov dh, 0xc0; ret; 
0x0008db3a: xchg ebp, eax; ret 0x148d; 
0x00157188: xchg ebp, eax; ret 0x3a3c; 
0x00038679: xchg ebp, eax; ret 0x3d; 
0x0007ff64: xchg ebp, eax; ret 0x40c7; 
0x0016598f: xchg ebp, eax; ret 0x48e9; 
0x0010b363: xchg ebp, eax; ret 0x4c39; 
0x0016631f: xchg ebp, eax; ret 0x4ce9; 
0x00041c60: xchg ebp, eax; ret 0x5409; 
0x000fbc69: xchg ebp, eax; ret 0x548d; 
0x0019a4d5: xchg ebp, eax; ret 0x6c89; 
0x000bc60c: xchg ebp, eax; ret 0x6eb; 
0x00056e13: xchg ebp, eax; ret 0x8366; 
0x0012cfc0: xchg ebp, eax; ret 0x8b52; 
0x0019dbf1: xchg ebp, eax; ret 0x940b; 
0x0003e998: xchg ebp, eax; ret 0x950f; 
0x000670fe: xchg ebp, eax; ret 0x9522; 
0x000b9681: xchg ebp, eax; ret 0x9eb; 
0x000cce67: xchg ebp, eax; ret 0xb38b; 
0x000e6996: xchg ebp, eax; ret 0xb48d; 
0x00041b01: xchg ebp, eax; ret 0xb60f; 
0x0005ab15: xchg ebp, eax; ret 0xbd83; 
0x000c5e7a: xchg ebp, eax; ret 0xbeb; 
0x0012cd42: xchg ebp, eax; ret 0xc085; 
0x0019c508: xchg ebp, eax; ret 0xc208; 
0x0008d206: xchg ebp, eax; ret 0xc231; 
0x001537f2: xchg ebp, eax; ret 0xc483; 
0x0010b49e: xchg ebp, eax; ret 0xd008; 
0x00105209: xchg ebp, eax; ret 0xd009; 
0x0007b060: xchg ebp, eax; ret 0xd089; 
0x000fd06d: xchg ebp, eax; ret 0xd120; 
0x001475ba: xchg ebp, eax; ret 0xd184; 
0x0004a4b8: xchg ebp, eax; ret 0xd189; 
0x00038632: xchg ebp, eax; ret 0xd321; 
0x001a02e4: xchg ebp, eax; ret 0xd589; 
0x000449ee: xchg ebp, eax; ret 0xd689; 
0x0019c54f: xchg ebp, eax; ret 0xd789; 
0x000c1de2: xchg ebp, eax; ret 0xd839; 
0x000980d9: xchg ebp, eax; ret 0xe083; 
0x00084960: xchg ebp, eax; ret 0xe2c1; 
0x00041ab8: xchg ebp, eax; ret 0xea81; 
0x0011b272: xchg ebp, eax; ret 0xf980; 
0x000e1935: xchg ebp, eax; ret 0xf981; 
0x0015718f: xchg ebp, eax; ret 0xfb89; 
0x00060c84: xchg ebp, eax; ret 0xff83; 
0x000355ef: xchg ebp, eax; ret; 
0x000eab40: xchg ebp, eax; rol byte ptr [ebx - 0x3ffefb3c], 0x5b; pop esi; ret; 
0x0012189b: xchg ebp, eax; rol byte ptr [ebx - 0x49f0d33c], 0xc0; neg eax; ret; 
0x0012185a: xchg ebp, eax; rol byte ptr [ebx - 0x49f0e33c], 0xc0; neg eax; ret; 
0x0015c837: xchg ebp, eax; rol byte ptr [ebx - 0x49f0e33c], 0xc0; ret; 
0x0007e6f2: xchg ebp, eax; rol byte ptr [ebx - 0x49f0f73c], 0xc0; pop ebx; neg eax; ret; 
0x0015aad8: xchg ebp, eax; rol byte ptr [ebx - 0x49f0f73c], 0xc0; pop ebx; ret; 
0x0015bc7d: xchg ebp, eax; rol byte ptr [ebx - 0x49f0fb3c], 0xc0; pop ebx; pop esi; ret; 
0x0008e566: xchg ebp, eax; rol cl, 0xe0; pop es; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x0008c0c8: xchg ebp, eax; rol ecx, 0xe1; pop es; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00165d66: xchg ebp, eax; ror byte ptr [ecx + 0x1b803], 0; add bl, ch; ret 0xb48d; 
0x0005db0e: xchg ebp, eax; ror byte ptr [ecx - 0x2fe91639], 0xff; dec dword ptr [ebx - 0x59b7b]; jmp dword ptr [ebp - 0x75]; 
0x0004d4be: xchg ebp, eax; ror byte ptr [edi], 0x95; ret; 
0x000fb3da: xchg ebp, eax; ror byte ptr [edi], 0xb6; sal bh, 0xd8; ret; 
0x0004e852: xchg ebp, eax; ror cl, 0xff; call dword ptr [eax - 0x73]; 
0x000c865a: xchg ebp, eax; ror cl, 0xff; dec dword ptr [ebp - 0x36177b]; dec dword ptr [edi]; xchg edi, eax; ret 0xbd39; 
0x000c6109: xchg ebp, eax; ror cl, 0xff; dec dword ptr [ecx - 0x35ff73]; dec dword ptr [ecx - 0x35fb63]; inc dword ptr [ebx - 0x363743]; call dword ptr [eax]; 
0x00104e54: xchg ebp, eax; sar dh, 0xff; jmp dword ptr [ebp - 0x75]; 
0x000b6732: xchg ebp, eax; stc; call dword ptr [eax - 0x18]; 
0x0009f9e3: xchg ebp, eax; stc; call dword ptr [edx - 0x73]; 
0x0017a41b: xchg ebp, eax; sti; jmp dword ptr [esi - 0x70]; 
0x00112b07: xchg ebp, eax; xchg bh, bh; jmp dword ptr [ebp - 0x75]; 
0x000dadbb: xchg ebp, eax; xchg dword ptr [esi], ebp; stc; dec dword ptr [edi]; inc esp; ret 0x8d50; 
0x000dad03: xchg ebp, eax; xchg dword ptr [esi], ebp; stc; dec dword ptr [edi]; inc esp; ret 0xec83; 
0x00067c9c: xchg ebp, eax; xchg esp, eax; idiv edi; call dword ptr [esi + 0x6a]; 
0x00067d8e: xchg ebp, eax; xchg esp, eax; idiv edi; call dword ptr [esi - 0x18]; 
0x0013aa33: xchg ebp, ecx; dec eax; stc; call dword ptr [eax - 0x77]; 
0x001028c7: xchg ebp, esp; dec ecx; stc; call dword ptr [eax - 0x18]; 
0x00069056: xchg ebx, eax; adc eax, dword ptr [eax]; add byte ptr [ebx + 0x555304ec], al; push edi; call dword ptr [eax + 0x1c]; 
0x00150dc0: xchg ebx, eax; add al, 0x83; ret 0x8301; 
0x000aa099: xchg ebx, eax; add al, byte ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x0002602c: xchg ebx, eax; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dh, dh; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x00083059: xchg ebx, eax; add byte ptr [eax], al; add byte ptr [eax + 0x1a6], bh; xor edx, edx; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000bb2a9: xchg ebx, eax; add edi, ecx; call dword ptr [ebx - 1]; 
0x0011fc53: xchg ebx, eax; and byte ptr [edx + 0x408bfff6], al; jl 0x11fbe5; push esi; add al, 0x89; ret 0xe8c1; 
0x0016c1c4: xchg ebx, eax; clc; stc; call dword ptr [edx - 0x77]; 
0x0011ec35: xchg ebx, eax; dec ebx; stc; call dword ptr [eax - 0x18]; 
0x0013c41b: xchg ebx, eax; inc eax; dec ebx; add byte ptr [eax], al; push edx; call eax; 
0x0012017e: xchg ebx, eax; inc eax; jl 0x120178; dec dword ptr [ebx + 0x56897c40]; add al, 0x89; ret 0xe8c1; 
0x00141f2c: xchg ebx, eax; inc ebp; xchg dword ptr [ebx - 0x68f0f008], eax; ret; 
0x0002c17b: xchg ebx, eax; jb 0x2c1aa; stc; call dword ptr [edx + 0x50]; 
0x00079008: xchg ebx, eax; jnp 0x79005; jmp dword ptr [esi - 0x70]; 
0x0013b7b6: xchg ebx, eax; js 0x13b810; stc; dec dword ptr [ecx - 0x48b7b]; call dword ptr [edi + 0x52]; 
0x00149b6c: xchg ebx, eax; mov al, byte ptr [0x3efff90d]; jmp ebx; 
0x0012f24d: xchg ebx, eax; pop eax; movsb byte ptr es:[edi], byte ptr [esi]; stc; call dword ptr [edx + 0x50]; 
0x0012f315: xchg ebx, eax; pop esi; push edi; stc; call dword ptr [edx + 0x50]; 
0x000f6dc3: xchg ebx, eax; push 0x1fff8fb; fnstcw word ptr [esi]; jmp ecx; 
0x0013c324: xchg ebx, eax; push esi; pop esp; stc; call dword ptr [edx + 0x50]; 
0x0011fe82: xchg ebx, eax; ret 0xf94d; 
0x00120172: xchg ebx, eax; ret 0xf94f; 
0x0012077d: xchg ebx, eax; ret 0xf952; 
0x00155a72: xchg ebx, eax; ret; 
0x00098247: xchg ebx, eax; rol byte ptr [edi], 0; add byte ptr [ebx + 0x3908245c], cl; ror dword ptr [edi], cl; xchg ebp, eax; ret 0xe083; 
0x0011faaf: xchg ebx, eax; sar byte ptr [esi - 0xa], 1; dec dword ptr [ebx + 0x56897c40]; add al, 0x89; ret 0xe8c1; 
0x00120757: xchg ebx, eax; sbb byte ptr [esi + esi*8 + 0x7c408bff], 0x89; push esi; add al, 0x89; ret 0xe8c1; 
0x001a075d: xchg ebx, eax; shl byte ptr [ebp - 9], 1; call dword ptr [edx + 0x50]; 
0x000238ed: xchg ebx, eax; shr byte ptr [esi - 7], 1; jmp dword ptr [esi - 0x77]; 
0x00099a32: xchg ebx, eax; stc; dec dword ptr [ebp - 0x6bf3a69]; call dword ptr [eax - 0x73]; 
0x00097cd4: xchg ebx, eax; stc; dec dword ptr [ebp - 0x6bf3a6a]; call dword ptr [eax - 0x73]; 
0x0013c4a2: xchg ebx, eax; xchg edx, eax; pop esp; stc; call dword ptr [edx + 0x50]; 
0x0006529a: xchg ebx, eax; xor bh, cl; call dword ptr [eax - 0x18]; 
0x000ccccf: xchg ebx, ebp; inc esp; stc; call dword ptr [eax + 0x55]; 
0x0008b449: xchg ebx, ecx; aas; stc; call dword ptr [eax - 0x18]; 
0x00098482: xchg ecx, eax; adc eax, dword ptr [eax]; add byte ptr [ebx - 0x72e7db8c], cl; xchg byte ptr [ebx + edx*4 - 7], ah; dec dword ptr [ebp - 0x6bf3a6a]; call dword ptr [eax - 0x73]; 
0x00125ff9: xchg ecx, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b60c4], al; pop edi; ret; 
0x00024c77: xchg ecx, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x72c3dba4], cl; add dword ptr [eax], 0x6b; stc; call dword ptr [eax - 0x73]; 
0x0011a071: xchg ecx, eax; call dword ptr [eax]; 
0x000e097d: xchg ecx, eax; inc edi; stc; call dword ptr [eax - 0x18]; 
0x00071847: xchg ecx, eax; mov byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0005200e: xchg ecx, eax; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00102d5b: xchg ecx, eax; or al, 3; add byte ptr [ebp - 0x6614f7a], cl; call dword ptr [eax - 0x73]; 
0x00150e20: xchg ecx, eax; or eax, 0x44ec8100; add dword ptr [eax], eax; add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000d46d4: xchg ecx, eax; out 0xff, eax; call dword ptr [eax + 0x51]; 
0x0013775b: xchg ecx, eax; ret 0xffff; 
0x000f4355: xchg ecx, eax; sar dl, 0xf8; dec dword ptr [ecx + 0x3ecb01d0]; jmp ebx; 
0x00080e8b: xchg ecx, eax; sbb al, byte ptr [eax]; mov eax, dword ptr [eax + 0xce0]; ret; 
0x00119e2f: xchg ecx, eax; sti; dec edx; stc; call dword ptr [edx + 0x50]; 
0x00119dff: xchg ecx, eax; xchg dword ptr [esi], ebp; stc; inc dword ptr [ebp - 0x17f88b40]; mov dword ptr [0x89fffffd], eax; ret 0x4c8b; 
0x000213ee: xchg ecx, eax; xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebp - 0x33], dh; ret; 
0x000cc898: xchg ecx, ebx; inc esp; stc; call dword ptr [eax + 0x53]; 
0x000ccc34: xchg ecx, ebx; inc esp; stc; call dword ptr [eax + 0x55]; 
0x00094e01: xchg ecx, edi; call dword ptr [eax - 1]; 
0x0017215b: xchg ecx, edi; inc dword ptr [ebx - 0x77cef3c]; dec dword ptr [edi]; test byte ptr [edi - 0x77000000], dl; ret 0xe283; 
0x00041456: xchg ecx, esi; das; stc; call dword ptr [eax - 0x18]; 
0x00150d6a: xchg edi, eax; adc byte ptr [edx], al; add byte ptr [ecx + 0xd9292c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x00127117: xchg edi, eax; add al, byte ptr fs:[eax]; add byte ptr [ecx - 0x33f7b], cl; inc edi; test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x0013f925: xchg edi, eax; add bh, ch; jmp dword ptr [esi - 0x39]; 
0x0007a7cc: xchg edi, eax; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; sub dword ptr [edx + 0x47], -7; call dword ptr [eax - 0x18]; 
0x00193bbd: xchg edi, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000d7873: xchg edi, eax; add dword ptr [eax], eax; add byte ptr [ecx + 0x1bbea], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000d79c4: xchg edi, eax; add dword ptr [eax], eax; add byte ptr [ecx + 0x1bbf9], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0015ad7f: xchg edi, eax; arpl cx, di; call dword ptr [edx + 0x6a]; 
0x0009b504: xchg edi, eax; call 0xc24dc509; ret; 
0x00165e05: xchg edi, eax; idiv edi; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; mov eax, 1; ret; 
0x0016560b: xchg edi, eax; je 0x165636; stc; dec dword ptr [ebx + 0x52530446]; push esi; call dword ptr [eax + 0xc]; 
0x00099a36: xchg edi, eax; lds eax, ptr [eax - 7]; call dword ptr [eax - 0x73]; 
0x0009a3f9: xchg edi, eax; mov eax, 0x89fffffe; inc esp; and al, 0xc; call dword ptr [edx]; 
0x000b4db2: xchg edi, eax; mov esi, edx; ret; 
0x0002d572: xchg edi, eax; mov gs, word ptr [ecx + edi*8]; call dword ptr [edx + 0x50]; 
0x000ad2b5: xchg edi, eax; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0002412e: xchg edi, eax; pop ebx; sub bh, cl; call dword ptr [edx + 0x50]; 
0x00147437: xchg edi, eax; pop esi; stc; call dword ptr [eax - 0x18]; 
0x0013bfb4: xchg edi, eax; push esi; pop esp; stc; call dword ptr [edx + 0x50]; 
0x0015d401: xchg edi, eax; ret 0x4bd; 
0x0015d3f5: xchg edi, eax; ret 0xa75; 
0x000c8666: xchg edi, eax; ret 0xbd39; 
0x0014ca48: xchg edi, eax; ret 0xd008; 
0x00028f22: xchg edi, eax; ret 0xd184; 
0x000401f7: xchg edi, eax; ret 0xd284; 
0x000509b8: xchg edi, eax; ret 0xf039; 
0x0014164e: xchg edi, eax; ret 0xf839; 
0x000bb60e: xchg edi, eax; ret; 
0x00127a9e: xchg edi, eax; ror byte ptr [edi], 0xb6; sal bh, 0xd8; ret; 
0x000c29ff: xchg edi, eax; stc; call dword ptr [eax - 0x18]; 
0x000bdaf6: xchg edi, eax; stc; call dword ptr [eax - 0x73]; 
0x000c271e: xchg edi, eax; stc; call dword ptr [edx - 0x73]; 
0x00104c6d: xchg edi, eax; std; call dword ptr [ecx + 0x6a]; 
0x0017a2d6: xchg edi, eax; sti; jmp dword ptr [esi - 0x70]; 
0x0002c417: xchg edi, eax; sub al, 0xf9; call dword ptr [eax + 0x56]; 
0x00141ebb: xchg edi, eax; test dword ptr [edi + edi*8 - 1], edi; jmp dword ptr [esi - 0x7f]; 
0x000a25b5: xchg edi, eax; xlatb; cld; jmp dword ptr [esi - 0x70]; 
0x00044766: xchg edi, eax; xor cl, bh; call dword ptr [eax - 0x18]; 
0x0003eeb4: xchg edi, eax; xor cl, bh; call dword ptr [eax - 0x73]; 
0x00023f65: xchg edi, ebx; call dword ptr [eax - 0x73]; 
0x000868d4: xchg edi, ebx; stc; call dword ptr [eax - 0x18]; 
0x000fac20: xchg edi, ecx; dec eax; stc; call dword ptr [eax - 0x73]; 
0x000b727b: xchg edi, esi; dec dword ptr [ebx - 0x72e3db8c]; xchg ah, ah; xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x000c4b90: xchg edi, esi; inc ebx; stc; call dword ptr [eax - 0x18]; 
0x000b729b: xchg edi, esi; jmp dword ptr [esi - 0x70]; 
0x0009b07a: xchg edi, esp; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0012cc91: xchg edi, esp; push esi; stc; call dword ptr [ebp - 1]; 
0x000643d1: xchg edx, eax; adc al, byte ptr [eax]; add byte ptr [ebx - 0x17acf314], al; ret 0xc44; 
0x0009b4b8: xchg edx, eax; add byte ptr [eax + 0x450fffe7], ah; ret 0x66c3; 
0x00151635: xchg edx, eax; add byte ptr [eax], al; add bh, al; or dword ptr [eax + 0x92], 0; add byte ptr [eax], al; call esi; 
0x0015163c: xchg edx, eax; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x00126f08: xchg edx, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x4f763], cl; dec dword ptr [ebx - 0x4fb73]; jmp dword ptr [ebp - 1]; 
0x0009bfbd: xchg edx, eax; add byte ptr [edi - 0xb], dh; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x0009b3b2: xchg edx, eax; add byte ptr [esi + 0x440fffe7], 0xc2; ret; 
0x0009bf70: xchg edx, eax; and byte ptr [eax + 0x450ffff6], ah; ret 0x66c3; 
0x0016c74f: xchg edx, eax; cli; jmp dword ptr [ebp - 0x75]; 
0x0007199e: xchg edx, eax; cwde; add byte ptr [eax], al; add byte ptr [ecx + 0x5b082454], cl; jmp eax; 
0x0011e4ea: xchg edx, eax; daa; cmc; jmp dword ptr [esi - 0x70]; 
0x0011f7b3: xchg edx, eax; dec esi; stc; call dword ptr [eax + 0x57]; 
0x000c152a: xchg edx, eax; in al, 0xf6; dec dword ptr [ebx - 0x72dbdb84]; xchg dword ptr [edi + edx*4], esp; stc; call dword ptr [eax - 0x73]; 
0x000b64f9: xchg edx, eax; in al, dx; cmp eax, dword ptr [eax]; add byte ptr [edi], cl; inc esp; ret 0xff50; 
0x000a2352: xchg edx, eax; inc eax; popfd; call 0xc24e3359; ret; 
0x000921c5: xchg edx, eax; inc eax; stc; call dword ptr [eax - 0x18]; 
0x0008229a: xchg edx, eax; jecxz 0x82297; call dword ptr [eax + 0x6a]; 
0x0009c220: xchg edx, eax; mov al, 0x2b; idiv bh; cmovne eax, edx; ret; 
0x0009b078: xchg edx, eax; mov al, 0x87; out 0xff, eax; cmovne eax, edx; ret; 
0x0009c0e2: xchg edx, eax; mov al, byte ptr [0xffff509]; inc esp; ret 0x66c3; 
0x00131c02: xchg edx, eax; mov al, byte ptr [0xffff50f]; inc esp; ret 0x66c3; 
0x00131b1d: xchg edx, eax; mov al, byte ptr [0xffff536]; inc esp; ret 0xc35b; 
0x0015d851: xchg edx, eax; mov word ptr [eax], es; add byte ptr [eax], al; mov dword ptr [eax + 8], edx; ret; 
0x0009c09d: xchg edx, eax; nop; retf 0xfff5; cmove eax, edx; pop ebx; ret; 
0x00049302: xchg edx, eax; or al, byte ptr [eax]; add byte ptr [ebx - 0x72ebdbac], cl; je 0x49334; add byte ptr [eax - 0x7c40fb73], dl; ret; 
0x0009c188: xchg edx, eax; or bl, 0xe7; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0011f816: xchg edx, eax; or byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; xchg byte ptr [edi - 7], cl; call dword ptr [eax + 0x57]; 
0x00136efd: xchg edx, eax; out dx, al; jmp dword ptr [ebp - 0x75]; 
0x0013c8e7: xchg edx, eax; pop esp; stc; call dword ptr [eax - 1]; 
0x0013c4a3: xchg edx, eax; pop esp; stc; call dword ptr [edx + 0x50]; 
0x000b6020: xchg edx, eax; push eax; fcomi st(6); dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0009c260: xchg edx, eax; rcl byte ptr [eax - 0xa], 0xff; cmovne eax, edx; ret; 
0x0009b470: xchg edx, eax; rcl byte ptr [ecx], 0xf6; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x00131bbd: xchg edx, eax; rcl byte ptr [esi - 0xb]; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x0004af4f: xchg edx, eax; ret 0x1e89; 
0x0004b901: xchg edx, eax; ret 0x689; 
0x00193a96: xchg edx, eax; ret 0xb60f; 
0x000ced43: xchg edx, eax; ret 0xc281; 
0x0004ae4f: xchg edx, eax; ret 0xe89; 
0x0009c002: xchg edx, eax; ror byte ptr [edi], 0xf5; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x0009c3ad: xchg edx, eax; sal byte ptr [esi], 0xf5; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x0009dba2: xchg edx, eax; shl byte ptr [ecx + 0x440fffe8], 1; ret 0x66c3; 
0x0002542e: xchg edx, eax; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x00089397: xchg edx, edx; aas; stc; call dword ptr [eax - 0x18]; 
0x00126c7a: xchg edx, esi; push ebp; stc; call dword ptr [eax - 0x18]; 
0x000d707c: xchg esi, eax; add dword ptr [eax], eax; add bh, dh; ror dword ptr [ebp + 0x2dd1c], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001590d1: xchg esi, eax; and ah, dh; bnd call dword ptr [edx + 0x6a]; 
0x0009b420: xchg esi, eax; call 0x7d4bab25; add cl, byte ptr [ebp - 0x179f1f6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0009afb4: xchg esi, eax; call 0xc24dbfb9; ret; 
0x0016d069: xchg esi, eax; clc; stc; call dword ptr [edx - 0x77]; 
0x00072a87: xchg esi, eax; cld; jl 0x72a84; jmp dword ptr [ebp - 0x75]; 
0x000869a6: xchg esi, eax; cli; jmp dword ptr [ebp - 0x5f]; 
0x0003a547: xchg esi, eax; das; stc; call dword ptr [eax - 0x18]; 
0x0010ccff: xchg esi, eax; dec edx; stc; call dword ptr [eax - 0x18]; 
0x001197a4: xchg esi, eax; in al, 0x4a; stc; call dword ptr [edx - 0x77]; 
0x001197fe: xchg esi, eax; in eax, dx; dec edx; stc; call dword ptr [eax + 0x50]; 
0x00097cd8: xchg esi, eax; lds eax, ptr [eax - 7]; call dword ptr [eax - 0x73]; 
0x0009a33b: xchg esi, eax; lea esi, [esi]; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax - 0x148]; call dword ptr [eax]; 
0x000791b5: xchg esi, eax; movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x001197c3: xchg esi, eax; pop ds; dec esp; stc; call dword ptr [edx - 0x77]; 
0x001444dc: xchg esi, eax; pop ebp; stc; call dword ptr [eax - 0x73]; 
0x001984cd: xchg esi, eax; pop esi; lea eax, [edi - 0x10]; pop edi; ret; 
0x0013e9db: xchg esi, eax; ret 0x5522; 
0x0009b104: xchg esi, eax; ret 0xb60f; 
0x000c49cb: xchg esi, eax; ret 0xc085; 
0x001404d7: xchg esi, eax; ret 0xd008; 
0x000c4a0f: xchg esi, eax; ret 0xd284; 
0x0013e964: xchg esi, eax; ret 0xf983; 
0x00099a16: xchg esi, eax; ret 0xffff; 
0x0002c5de: xchg esi, eax; ret; 
0x001626ba: xchg esi, eax; sal byte ptr [esi + 0x6afff3], 0x52; push 4; push ebx; call dword ptr [eax]; 
0x000b6c99: xchg esi, eax; stc; call dword ptr [eax - 0x18]; 
0x000b6706: xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x00086872: xchg esi, eax; sub al, 2; add byte ptr [eax], al; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0008cb8d: xchg esi, ecx; add byte ptr [eax], al; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x6174; 
0x001561e0: xchg esi, ecx; popal; stc; call dword ptr [eax + 0x55]; 
0x0013102e: xchg esi, ecx; push edi; stc; call dword ptr [ebx + 0x50]; 
0x000868cd: xchg esi, ecx; stc; call dword ptr [eax - 0x73]; 
0x0014b2e1: xchg esi, edi; jmp dword ptr [ebp - 0x5f]; 
0x00130fe3: xchg esi, edx; push edi; stc; call dword ptr [eax - 1]; 
0x000253c9: xchg esi, edx; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x0007488d: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebp - 0x1c5f79], cl; jmp ptr [ecx]; ret 0x4d89; 
0x00070dd1: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebp - 0x1c5f79], cl; jmp ptr [ecx]; ret 0xd989; 
0x0007e05b: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebp - 0x1c5f79], cl; jmp ptr [ecx]; ret 0xf189; 
0x00077f0b: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebp - 0x1c5f7b], cl; dec dword ptr [ebp - 0x148b6b]; jmp ptr [ecx]; ret 0xd989; 
0x00077cb4: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebp - 0x1c5f7b], cl; jmp ptr [ecx]; ret 0xf989; 
0x0007f96a: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebp - 0x1c5f7d], cl; jmp ptr [ecx]; ret 0xf989; 
0x000738e9: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebp - 0x1c5f7e], cl; dec dword ptr [ebp - 0x148b6e]; jmp ptr [ecx]; ret 0x4d89; 
0x00053826: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebp - 0x1c5f7e], cl; dec dword ptr [ebp - 0x148b6e]; jmp ptr [ecx]; ret 0xf189; 
0x000213ef: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebp - 0x33], dh; ret; 
0x0002f8f7: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebp - 0x6a8877d], cl; call dword ptr [esi - 1]; 
0x00084c9a: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00037c86: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5f], bl; ret; 
0x001230f7: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebx + 0xa024b4], cl; add byte ptr [eax], al; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x0008bfa7: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x0007183f: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x6e76a7b8], cl; mov byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x000bcaed: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x76f7dbbc], cl; ret; 
0x0019d8dc: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ecx], cl; ret 0xbc89; 
0x00163252: xchg esp, eax; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x000da5b4: xchg esp, eax; add eax, 0x247c8b00; or byte ptr [ebp - 0x6666379], cl; call dword ptr [eax - 0x73]; 
0x0011f708: xchg esp, eax; add eax, 0xec830000; or byte ptr [ebp - 0x6b2ed7d], cl; call dword ptr [eax + 0x57]; 
0x00160193: xchg esp, eax; and al, 0x34; add al, 0; add byte ptr [ebx + 0x50510450], cl; call dword ptr [edx + 8]; 
0x00161350: xchg esp, eax; and al, 0x4c; add dword ptr [eax], eax; add byte ptr [edx + 0x53], dl; call dword ptr [eax + 4]; 
0x0019dbfb: xchg esp, eax; and al, 0x80; add byte ptr [eax], al; add dh, dh; ret 0x7407; 
0x000b9b9b: xchg esp, eax; and al, 0x84; add byte ptr [eax], al; add byte ptr [ebx - 0x76f7dbbc], cl; ret; 
0x00046fc8: xchg esp, eax; and al, 0x84; add byte ptr [eax], al; add cl, ch; ret; 
0x000bf7ea: xchg esp, eax; and al, 0x88; add byte ptr [eax], al; add byte ptr [ebx - 0x76f7dbbc], cl; ret; 
0x000dd83f: xchg esp, eax; and al, 0x88; add byte ptr [eax], al; add byte ptr [ecx - 0xfbbf017], cl; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x000bcaeb: xchg esp, eax; and al, 0x94; add byte ptr [eax], al; add byte ptr [ebx - 0x76f7dbbc], cl; ret; 
0x00109ad8: xchg esp, eax; and al, 0x98; add byte ptr [eax], al; add byte ptr [eax + 0x132], bh; call dword ptr gs:[0x10]; 
0x000bd58b: xchg esp, eax; and al, 0x9c; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fe13], al; ret; 
0x0010a7b9: xchg esp, eax; and al, 0xa8; add byte ptr [eax], al; add byte ptr [eax + 0x133], bh; call dword ptr gs:[0x10]; 
0x0010a657: xchg esp, eax; and al, 0xa8; add byte ptr [eax], al; add byte ptr [ebx + 0xac24b4], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0015db73: xchg esp, eax; and al, 0xac; add byte ptr [eax], al; add byte ptr [edx + 0x56], dl; call dword ptr [eax + 4]; 
0x00073e06: xchg esp, eax; and al, 0xd0; add byte ptr [eax], al; add byte ptr [ebx + 0x6a5720c4], al; call dword ptr [edi + 0x56]; 
0x0017a8e8: xchg esp, eax; and eax, 0xd8f7fffc; sbb eax, eax; add esp, 0x1c; ret; 
0x0015aab3: xchg esp, eax; and eax, dword ptr [eax]; add byte ptr [ebx + 0x239880], cl; add byte ptr [ebx + 0x6a08ec], al; push ebx; call dword ptr [eax + 0x14]; 
0x00102eb4: xchg esp, eax; dec ecx; stc; call dword ptr [eax - 0x18]; 
0x00066dfb: xchg esp, eax; idiv edi; call dword ptr [ecx + 0x6a]; 
0x00067c9d: xchg esp, eax; idiv edi; call dword ptr [esi + 0x6a]; 
0x00067d8f: xchg esp, eax; idiv edi; call dword ptr [esi - 0x18]; 
0x00066d96: xchg esp, eax; idiv edi; dec dword ptr [ecx - 0x87773]; call dword ptr [ebx + 0x52]; 
0x000670f9: xchg esp, eax; idiv edi; dec dword ptr [edi]; xchg ebp, eax; ret 0x9522; 
0x0018ef52: xchg esp, eax; idiv edi; mov eax, dword ptr [ebx + eax*4 - 0x86b80]; sub eax, ecx; pop ebx; ret; 
0x00191766: xchg esp, eax; idiv edi; sub eax, ecx; pop ebp; pop ebx; ret; 
0x0018ef59: xchg esp, eax; idiv edi; sub eax, ecx; pop ebx; ret; 
0x00079c58: xchg esp, eax; ja 0x79c5b; add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x000415f0: xchg esp, eax; je 0x415ec; call dword ptr [eax - 0x18]; 
0x00044647: xchg esp, eax; je 0x44643; call dword ptr [eax - 0x18]; 
0x0004785b: xchg esp, eax; je 0x47857; call dword ptr [eax - 0x18]; 
0x0005109b: xchg esp, eax; je 0x51097; call dword ptr [eax - 0x18]; 
0x000bbb58: xchg esp, eax; je 0xbbb54; call dword ptr [eax - 0x18]; 
0x000be890: xchg esp, eax; je 0xbe88c; call dword ptr [eax - 0x18]; 
0x000c1599: xchg esp, eax; je 0xc1595; call dword ptr [eax - 0x18]; 
0x000c8c78: xchg esp, eax; je 0xc8c74; call dword ptr [eax - 0x18]; 
0x0008794b: xchg esp, eax; jg 0x87947; call dword ptr [eax - 0x73]; 
0x00087b81: xchg esp, eax; jg 0x87b7d; call dword ptr [eax - 0x73]; 
0x00087ba3: xchg esp, eax; jg 0x87b9f; call dword ptr [eax - 0x73]; 
0x00087bfb: xchg esp, eax; jg 0x87bf7; call dword ptr [eax - 0x73]; 
0x00087c3f: xchg esp, eax; jg 0x87c3b; call dword ptr [eax - 0x73]; 
0x00087c94: xchg esp, eax; jg 0x87c90; call dword ptr [eax - 0x73]; 
0x00034559: xchg esp, eax; mov bl, 0; je 0x34556; inc dword ptr [ecx]; fidivr dword ptr [esi]; jmp edx; 
0x0002cdc3: xchg esp, eax; mov ebx, 0xfffffc5c; test edx, edx; je 0x2cdcf; call edx; 
0x0002cca1: xchg esp, eax; mov ebx, 0xfffffc60; test edx, edx; je 0x2ccb5; mov dword ptr [esp + 0xc], eax; call edx; 
0x000f0d88: xchg esp, eax; mov edi, edi; inc dword ptr [ebx - 0x7bf00008]; ret; 
0x00149b0f: xchg esp, eax; mov edx, dword ptr [eax + 0x1fff90d]; fidivr dword ptr [esi]; jmp edx; 
0x001484dd: xchg esp, eax; pop edi; stc; call dword ptr [eax - 0x18]; 
0x0003a653: xchg esp, eax; popal; stc; call dword ptr [eax - 0x18]; 
0x0003a653: xchg esp, eax; popal; stc; call dword ptr [eax - 0x18]; bound edx, qword ptr [ebx - 1]; jmp dword ptr [esi - 0x70]; 
0x0012f7f4: xchg esp, eax; push edi; stc; call dword ptr [eax - 1]; 
0x00171f96: xchg esp, eax; ret 0x1389; 
0x0012f10c: xchg esp, eax; ret 0x2d3c; 
0x0002c5ce: xchg esp, eax; ret 0x3a3c; 
0x000f688f: xchg esp, eax; ret 0x3f8b; 
0x0012c961: xchg esp, eax; ret 0x4483; 
0x0010cb47: xchg esp, eax; ret 0x458b; 
0x000677e2: xchg esp, eax; ret 0x5352; 
0x000e6876: xchg esp, eax; ret 0x5422; 
0x000cb8de: xchg esp, eax; ret 0x5438; 
0x0014594f: xchg esp, eax; ret 0x5484; 
0x0002c693: xchg esp, eax; ret 0x5f3c; 
0x000fca72: xchg esp, eax; ret 0x6889; 
0x0010ea79: xchg esp, eax; ret 0x798b; 
0x000b76ba: xchg esp, eax; ret 0x7c83; 
0x00114c3e: xchg esp, eax; ret 0x7ee9; 
0x0006f808: xchg esp, eax; ret 0x7f3c; 
0x000c5ed4: xchg esp, eax; ret 0x8589; 
0x0012f113: xchg esp, eax; ret 0x8966; 
0x0010cc9e: xchg esp, eax; ret 0x8ee9; 
0x0014882c: xchg esp, eax; ret 0x93c; 
0x000fd049: xchg esp, eax; ret 0x9588; 
0x00078aef: xchg esp, eax; ret 0x9e3b; 
0x00148862: xchg esp, eax; ret 0xa3c; 
0x0009b16c: xchg esp, eax; ret 0xb60f; 
0x000cb761: xchg esp, eax; ret 0xc031; 
0x0014a1dc: xchg esp, eax; ret 0xc083; 
0x0012bae4: xchg esp, eax; ret 0xc084; 
0x000348d9: xchg esp, eax; ret 0xc085; 
0x0017497a: xchg esp, eax; ret 0xc483; 
0x000a1dca: xchg esp, eax; ret 0xc739; 
0x0002c38b: xchg esp, eax; ret 0xca08; 
0x00071020: xchg esp, eax; ret 0xd008; 
0x00070fff: xchg esp, eax; ret 0xd009; 
0x000c0b59: xchg esp, eax; ret 0xd020; 
0x00043cad: xchg esp, eax; ret 0xd120; 
0x000ed636: xchg esp, eax; ret 0xd201; 
0x000cba8d: xchg esp, eax; ret 0xd338; 
0x001445a1: xchg esp, eax; ret 0xdaf7; 
0x000bc659: xchg esp, eax; ret 0xde89; 
0x001574eb: xchg esp, eax; ret 0xe1e9; 
0x000f2710: xchg esp, eax; ret 0xe2c1; 
0x00114bda: xchg esp, eax; ret 0xe2e9; 
0x0010cc3a: xchg esp, eax; ret 0xf2e9; 
0x00060724: xchg esp, eax; ret 0xf883; 
0x000e0f9a: xchg esp, eax; ret 0xf8c1; 
0x0009b111: xchg esp, eax; ret 0xfa01; 
0x00069753: xchg esp, eax; ret 0xff52; 
0x0002c5d3: xchg esp, eax; ret; 
0x00141b43: xchg esp, eax; rol byte ptr [eax + eax*8 + 0x5e5b0775], 0x5f; ret; 
0x001a1244: xchg esp, eax; rol byte ptr [eax + eax*8 - 0x3b7cf98b], 4; pop ebx; pop esi; ret; 
0x0012dbaa: xchg esp, eax; rol byte ptr [ebx + 0x5e5b2cc4], 0x5f; pop ebp; ret; 
0x000f831a: xchg esp, eax; rol byte ptr [ebx - 0x49f0d33c], 0xc0; ret; 
0x0008fe94: xchg esp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; lea eax, [eax + eax + 2]; ret; 
0x000481a6: xchg esp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x001313e1: xchg esp, eax; rol dword ptr [ebp - 0x278a760a], 0xf; sahf; ret 0xd108; 
0x0008fd63: xchg esp, eax; ror byte ptr [edi], 0xb6; rol byte ptr [ebx - 0x3b7cfd18], 0xc; ret; 
0x00037306: xchg esp, eax; ror byte ptr [edi], 0xb6; ror byte ptr [ecx - 0x3b7ce7bd], 8; xor eax, eax; pop ebx; ret; 
0x0010387a: xchg esp, eax; sahf; stc; call dword ptr [eax - 0x73]; 
0x00173ba7: xchg esp, eax; sar byte ptr [ebx], 0x9e; sar dh, 0xff; dec dword ptr [edi]; xchg esp, eax; ret 0xd008; 
0x0009a996: xchg esp, eax; stc; call dword ptr [eax + 0x68]; 
0x00161d05: xchg esp, eax; stc; call dword ptr [eax - 0x73]; 
0x00094847: xchg esp, eax; stc; call dword ptr [edx - 0x73]; 
0x0006e8a6: xchg esp, eax; xchg byte ptr [eax], ah; retf 0xfff8; add edx, ebx; jmp edx; 
0x000c2a3c: xchg esp, eax; xchg ebp, eax; stc; call dword ptr [eax - 0x18]; 
0x000b68e8: xchg esp, eax; xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x00193a4c: xchg esp, eax; xor ah, byte ptr [eax - 0x76000722]; ret; 
0x0012dc38: xchg esp, eax; xor eax, 0xc4830000; or al, 0x50; push dword ptr [esp + 8]; push 0x2000003; call dword ptr [ebp + 0x14]; 
0x00179c8f: xchg esp, ebp; sahf; stc; call dword ptr [eax - 0x73]; 
0x0013a319: xchg esp, ecx; jb 0x13a316; call dword ptr [eax - 0x18]; 
0x0013a5a4: xchg esp, ecx; jb 0x13a5a1; call dword ptr [eax - 0x18]; 
0x0013a771: xchg esp, ecx; jb 0x13a76e; call dword ptr [eax - 0x18]; 
0x001476ad: xchg esp, ecx; jb 0x1476aa; call dword ptr [eax - 0x18]; 
0x00158bbd: xchg esp, ecx; jb 0x158bba; call dword ptr [eax - 0x18]; 
0x0015f829: xchg esp, ecx; jb 0x15f826; call dword ptr [eax - 0x18]; 
0x000fac27: xchg esp, ecx; jb 0xfac24; call dword ptr [eax - 0x18]; 
0x000facfe: xchg esp, ecx; jb 0xfacfb; call dword ptr [eax - 0x18]; 
0x000fad41: xchg esp, ecx; jb 0xfad3e; call dword ptr [eax - 0x18]; 
0x00041612: xchg esp, ecx; je 0x4160f; call dword ptr [eax - 0x18]; 
0x000477f1: xchg esp, ecx; je 0x477ee; call dword ptr [eax - 0x18]; 
0x00051050: xchg esp, ecx; je 0x5104d; call dword ptr [eax - 0x18]; 
0x000bbb11: xchg esp, ecx; je 0xbbb0e; call dword ptr [eax - 0x18]; 
0x000c16c0: xchg esp, ecx; je 0xc16bd; call dword ptr [eax - 0x18]; 
0x00026f23: xchg esp, edi; jo 0x26f20; call dword ptr [eax - 0x73]; 
0x00026f46: xchg esp, edi; jo 0x26f43; call dword ptr [eax - 0x73]; 
0x00026f69: xchg esp, edi; jo 0x26f66; call dword ptr [eax - 0x73]; 
0x00026fd2: xchg esp, edi; jo 0x26fcf; call dword ptr [eax - 0x73]; 
0x0002702a: xchg esp, edi; jo 0x27027; call dword ptr [eax - 0x73]; 
0x0002704d: xchg esp, edi; jo 0x2704a; call dword ptr [eax - 0x73]; 
0x000bacd0: xchg esp, esi; xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x000e58e2: xchg esp, esp; inc edi; stc; call dword ptr [eax - 0x18]; 
0x0002c8b1: xchg esp, esp; jb 0x2c8ae; call dword ptr [eax + 0x56]; 
0x0002d05e: xchg esp, esp; jb 0x2d05b; call dword ptr [eax + 0x56]; 
0x00082d01: xend; xor eax, eax; add esp, 0xc; ret; 
0x001213fb: xlatb; add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; mov ebx, edx; ret; 
0x000caa36: xlatb; add byte ptr [ecx], bh; ret; 
0x000a25b6: xlatb; cld; jmp dword ptr [esi - 0x70]; 
0x0017a115: xlatb; cwde; sti; jmp dword ptr [esi - 0x70]; 
0x000a6a35: xlatb; idiv bh; inc dword ptr [eax + 0xf000d79]; test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00174365: xlatb; insb byte ptr es:[edi], dx; clc; jmp dword ptr [esi - 0x70]; 
0x000849d3: xlatb; jae 0x849a0; mov ecx, dword ptr [ebx + 0xc]; mov eax, 0xf0; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x000c15e5: xlatb; jecxz 0xc15de; dec dword ptr [ebx - 0x72dbdb84]; xchg dword ptr [edi + edx*4], esp; stc; call dword ptr [eax - 0x73]; 
0x000b42bc: xlatb; les eax, ptr [ebp - 0x257af040]; add byte ptr [eax], al; add bh, dh; ret 0x3f; 
0x00196af5: xlatb; les eax, ptr [ebp - 0x7e7af040]; add dword ptr [eax], eax; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000b3eb1: xlatb; les eax, ptr [ebp - 0xa7af040]; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x001729f0: xlatb; ljmp 0xf089:0x10c483ff; add esp, 4; pop ebx; pop esi; ret; 
0x000ced3f: xlatb; mov dword ptr [0xc2920f00], eax; add edx, 0x16d; mov eax, edx; ret; 
0x0017ae3d: xlatb; movdqa xmmword ptr [edx - 0x19], xmm0; movq qword ptr [edx - 9], xmm0; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00119a28: xlatb; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0012c4ba: xlatb; push esi; stc; call dword ptr [eax - 1]; 
0x0012c46d: xlatb; push esi; stc; call dword ptr [edx + 0x50]; 
0x001965d2: xlatb; ret 0x498d; 
0x000b3ad8: xlatb; ret 0xc085; 
0x000a2a16: xlatb; ret; 
0x0019841c: xlatb; retf 0xf66; xlatb; ret; 
0x000b436f: xlatb; rol byte ptr [ebp + 0x663b75c0], 0xf; xlatb; ret 0xc085; 
0x00196bb6: xlatb; rol dword ptr [ebp + 0x30850fc0], 2; add byte ptr [eax], al; xor eax, eax; ret; 
0x000b3ca0: xlatb; rol dword ptr [ebp + 0x315a75c0], 0xc0; pop edi; ret; 
0x000b3f75: xlatb; rol dword ptr [ebp + 0x316575c0], 0xc0; ret; 
0x000b3f46: xlatb; rol dword ptr [ebp + 0x317475c0], 0xc0; ret; 
0x00196bf5: xlatb; rol dword ptr [ebp + 0x71850fc0], 2; add byte ptr [eax], al; xor eax, eax; ret; 
0x0019670e: xlatb; rol dword ptr [ebp - 0x377af040], 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x000b3c66: xlatb; rol dword ptr [ebp - 0x4f7af040], 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x00197819: xlatb; ror dword ptr [ebp - 0x2d7aefc0], 1; jne 0x197830; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x000b3ee2: xlatb; ror dword ptr [edi], 0xbd; rol byte ptr [ecx], 0xc8; ret; 
0x00197064: xlatb; shl dword ptr [ecx], 0xd0; test eax, eax; jne 0x196c90; xor eax, eax; ret; 
0x001640a9: xlatb; stc; call dword ptr [eax - 0x73]; 
0x0013dcdb: xor ah, 0x5c; stc; call dword ptr [eax + 0x53]; 
0x0002197e: xor ah, 0x6d; stc; call dword ptr [eax - 0x18]; 
0x0002ea5b: xor ah, 0x71; stc; call dword ptr [eax - 0x73]; 
0x001847b0: xor ah, byte ptr [0x1c030004]; mov edi, dword ptr [esi]; jmp ebx; 
0x00193a4d: xor ah, byte ptr [eax - 0x76000722]; ret; 
0x001657ba: xor ah, dl; cld; jmp dword ptr [esi - 0x70]; 
0x00121351: xor al, 0; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000601c7: xor al, 0; add byte ptr [ebx - 0x4f373], cl; jmp dword ptr [ebp - 0x75]; 
0x000829c3: xor al, 0x19; add byte ptr [eax], al; ret; 
0x000ead07: xor al, 0x24; call 0x20140; add esp, 0x14; pop ebx; pop esi; ret; 
0x00158685: xor al, 0x24; call dword ptr [eax + 0x10]; 
0x0002b87c: xor al, 0x24; call ebx; 
0x0013bf26: xor al, 0x24; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x00171e06: xor al, 0x24; ret; 
0x00131347: xor al, 0x24; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0004c357: xor al, 0x29; ret 0x5489; 
0x001258cb: xor al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0002412a: xor al, 0x31; ror byte ptr [ebp - 0x6d5a469], cl; call dword ptr [edx + 0x50]; 
0x000c9c72: xor al, 0x39; dec edi; xor al, 0x75; sub byte ptr [edi + 0x5e], bl; ret; 
0x0010b53f: xor al, 0x39; ret 0xc189; 
0x001a1195: xor al, 0x43; add byte ptr [eax], al; call 0x20140; add esp, 0x18; pop ebx; ret; 
0x000dfb9b: xor al, 0x46; stc; call dword ptr [eax - 0x18]; 
0x00078c85: xor al, 0x50; call ebx; 
0x000b644f: xor al, 0x50; push dword ptr [esi + 8]; call ebx; 
0x000b6a6b: xor al, 0x50; push edi; call esi; 
0x000b6a62: xor al, 0x52; lea eax, [esp + 0x64]; mov dword ptr [esp + 0x34], edx; push eax; push edi; call esi; 
0x000b67fd: xor al, 0x52; push dword ptr [edi + 8]; call ebx; 
0x00132f69: xor al, 0x52; push dword ptr [esp + 0x2c]; call 0x75350; add esp, 0x2c; ret; 
0x00131f79: xor al, 0x52; push dword ptr [esp + 0x2c]; call 0x7a3b0; add esp, 0x2c; ret; 
0x00159820: xor al, 0x56; push ecx; push 5; push ebx; call dword ptr [eax]; 
0x0012d559: xor al, 0x56; stc; call dword ptr [eax - 1]; 
0x00137f0a: xor al, 0x5a; stc; call dword ptr [eax - 0x18]; 
0x0016ec8c: xor al, 0x5b; pop esi; jmp eax; 
0x00115fb7: xor al, 0x5b; pop esi; pop edi; ret; 
0x0003ac1c: xor al, 0x5b; pop esi; ret 4; 
0x000dde43: xor al, 0x5b; pop esi; ret; 
0x0015b0f9: xor al, 0x5b; ret; 
0x000c9c75: xor al, 0x75; sub byte ptr [edi + 0x5e], bl; ret; 
0x00078bc5: xor al, 0x7d; stc; call dword ptr [eax - 0x73]; 
0x0016d083: xor al, 0x83; in al, dx; or byte ptr [ebp - 0x69a164a], cl; call dword ptr [esi + 0x53]; 
0x0003acd1: xor al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00037f47: xor al, 0x83; les ebp, ptr [eax]; pop ebx; ret; 
0x000252d3: xor al, 0x83; les ebp, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; jmp eax; 
0x00134341: xor al, 0x83; les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x000727d7: xor al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000588ac: xor al, 0x83; les edi, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x00146831: xor al, 0x83; ret 0x8501; 
0x0007dc43: xor al, 0x83; ret 0x8901; 
0x00029cdf: xor al, 0x83; ret 0x8904; 
0x00029723: xor al, 0x83; ret 0xc704; 
0x00173ac3: xor al, 0x83; rol byte ptr [ecx], 0x89; ret 0x5675; 
0x0014fcbd: xor al, 0x84; ror byte ptr [edi], 0x84; ret 0; 
0x0009268d: xor al, 0x84; stc; call dword ptr [eax - 0x18]; 
0x0010a08c: xor al, 0x89; cli; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x001153f3: xor al, 0x89; dec eax; push eax; mov dword ptr [eax + 0x54], edx; xor eax, eax; ret; 
0x00117466: xor al, 0x89; inc esp; and al, 0xc; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00117636: xor al, 0x89; inc esp; and al, 0xc; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x00125a89: xor al, 0x89; inc esp; and al, 8; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0011754c: xor al, 0x89; inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x0011771c: xor al, 0x89; inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x00103b4c: xor al, 0x89; inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x00103c2c: xor al, 0x89; inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x000ee3d9: xor al, 0x89; je 0xee401; cmp al, 0x29; ret 0x448b; 
0x00093c73: xor al, 0x89; ret 0x408b; 
0x00149461: xor al, 0x89; ret; 
0x0007849c: xor al, 0x8b; adc esi, esi; ret 0xf08; 
0x000ce9c3: xor al, 0x8b; pop esp; and al, 0x30; lea ecx, [esp + 0xc]; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x00122137: xor al, 0x8b; pop esp; and al, 0x30; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00163638: xor al, 0x8b; push eax; or byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x00094d38: xor al, 0x8d; and byte ptr [ecx], 0x41; stc; call dword ptr [eax - 0x18]; 
0x00124790: xor al, 0x8d; inc esp; and al, 0x24; mov dword ptr [esp + 0x38], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0017a3b4: xor al, 0x8d; jl 0x17a3dc; or byte ptr [eax + 0x75], bh; mov ebx, 3; call dword ptr gs:[0x10]; 
0x0014791f: xor al, 0x8d; or esp, 0x72; stc; call dword ptr [eax - 0x18]; 
0x00155253: xor al, 0x8d; xchg dword ptr [edi + ebp*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x000ff450: xor al, 0x9e; stc; call dword ptr [eax - 0x73]; 
0x00109e95: xor al, 0x9f; stc; call dword ptr [eax - 0x18]; 
0x0009b3db: xor al, 0xa3; call 0x838baae2; add byte ptr [eax], al; add byte ptr [edi + ecx], al; inc ebp; ret 0x66c3; 
0x0009c257: xor al, 0xa5; call 0x2ef435e; lea edx, [edx - 0x9af40]; cmovne eax, edx; ret; 
0x00151514: xor al, 0xae; stc; call dword ptr [eax - 0x73]; 
0x0009b52b: xor al, 0xb4; call 0x7e4bac32; adc byte ptr [edi], cl; inc ebp; ret 0x66c3; 
0x00121ab7: xor al, 0xb8; add byte ptr [ecx], al; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00121c77: xor al, 0xb8; cmp al, 1; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00121b97: xor al, 0xb8; cmp eax, dword ptr [ecx]; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00126706: xor al, 0xb8; jne 0x12670a; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00103b20: xor al, 0xb8; mov ah, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00103c00: xor al, 0xb8; mov ch, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000ddb28: xor al, 0xb8; sbb al, 1; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0012480b: xor al, 0xb8; sbb eax, 0xf000000; inc ebp; ret; 
0x00178f27: xor al, 0xdb; in eax, dx; call dword ptr [eax + 0x6a]; 
0x00124c23: xor al, 0xe8; aaa; fcomi st(5); dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x00124d73: xor al, 0xe8; out 0xd9, eax; cmc; dec dword ptr [ebp - 0x76fbdbb4]; ret 0x448b; 
0x00124943: xor al, 0xe8; pop ss; fdivrp st(5); dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x000f5377: xor al, 0xe8; ret; 
0x000bc4cb: xor al, 0xf7; dec dword ptr [ebx - 0x72ebdb84]; xchg dword ptr [esi + esi*2 - 7], ebx; call dword ptr [eax + 0x68]; 
0x000c81ea: xor al, 0xf8; dec dword ptr [ebx - 0x36377b]; call dword ptr [esi - 1]; 
0x00174a8b: xor al, 0xf8; jmp dword ptr [esi - 0x70]; 
0x00150e4a: xor al, 0xf9; call dword ptr [eax + 0x52]; 
0x000da56c: xor al, 0xf9; call dword ptr [eax - 0x18]; 
0x000227bf: xor al, 0xf; add byte ptr [eax], al; ret; 
0x0002ff5e: xor al, 0xf; mov bh, 4; push eax; and eax, 0x1000; ret; 
0x0002ff3e: xor al, 0xf; mov bh, 4; push eax; and eax, 0x100; ret; 
0x0002ff1e: xor al, 0xf; mov bh, 4; push eax; and eax, 0x2000; ret; 
0x0002fe9e: xor al, 0xf; mov bh, 4; push eax; and eax, 0x200; ret; 
0x0002fede: xor al, 0xf; mov bh, 4; push eax; and eax, 0x4000; ret; 
0x0002fe3e: xor al, 0xf; mov bh, 4; push eax; and eax, 0x400; ret; 
0x0002febe: xor al, 0xf; mov bh, 4; push eax; and eax, 0x8000; ret; 
0x0002fe7e: xor al, 0xf; mov bh, 4; push eax; and eax, 0x800; ret; 
0x0002fdfe: xor al, 0xf; mov bh, 4; push eax; and eax, 1; ret; 
0x0002fe5e: xor al, 0xf; mov bh, 4; push eax; and eax, 2; ret; 
0x0002fefe: xor al, 0xf; mov bh, 4; push eax; and eax, 4; ret; 
0x0002fe1e: xor al, 0xf; mov bh, 4; push eax; and eax, 8; ret; 
0x0003d9bf: xor al, 0xf; scasd eax, dword ptr es:[edi]; fmul dword ptr [ebx - 0x50f0dbfc]; ret 0xc301; 
0x0010b49c: xor al, 0xf; xchg ebp, eax; ret 0xd008; 
0x000b5a8b: xor al, 0xfc; jmp 0x838d5192; add byte ptr [eax], al; add byte ptr [edi + ecx], al; inc ebp; ret 0x66c3; 
0x0004d090: xor al, 0xfd; jmp dword ptr [esi - 0x70]; 
0x000b6bce: xor al, 0xff; je 0xb6bf6; inc eax; push edi; call esi; 
0x000c9b68: xor al, 1; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x0010c427: xor al, 1; push edx; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x00038dd3: xor al, 1; push esi; call edi; 
0x0002ecef: xor al, 2; push dword ptr [esp + 0x1c]; call 0x2ed00; add esp, 0x1c; ret; 
0x00054be7: xor al, 2; push dword ptr [esp + 0x1c]; call 0x523c0; add esp, 0x1c; ret; 
0x0009b2df: xor al, 2; push dword ptr [esp + 0x1c]; call 0xa2400; add esp, 0x1c; ret; 
0x000c198f: xor al, 2; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc1b40; add esp, 0x1c; ret; 
0x00081f1e: xor al, 3; add byte ptr [ebx - 0x3b7cef3c], al; add al, 0x5b; pop esi; ret; 
0x00160195: xor al, 4; add byte ptr [eax], al; mov edx, dword ptr [eax + 4]; push ecx; push eax; call dword ptr [edx + 8]; 
0x000518af: xor al, 4; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x00120983: xor al, al; or eax, ecx; ret; 
0x00131c4a: xor al, bh; inc dword ptr [ebx - 0xffeef3c]; pop ebx; pop esi; pop edi; ret; 
0x001576ba: xor al, bl; std; jmp dword ptr [esi - 0x70]; 
0x000abfea: xor al, byte ptr [0x5e5f0000]; pop ebx; ret; 
0x0015f18f: xor al, byte ptr [ebx + 0x438b08ec]; add al, 0x56; push ebx; call dword ptr [eax + 0x24]; 
0x000d9d67: xor al, byte ptr [ebx + 0x5e5b04c4]; ret; 
0x00125762: xor al, byte ptr [ebx + 0x5e5b3cc4]; pop edi; pop ebp; ret; 
0x0015acc5: xor al, byte ptr [ebx - 0x72affb14]; cmp dword ptr [eax + 0x57], -7; call dword ptr [eax + 0x6a]; 
0x00109adf: xor al, byte ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00058cb2: xor al, ch; cwde; pop es; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00083f3a: xor al, ch; push eax; ret 0xfff9; 
0x000f4278: xor al, ch; ret 0xf2be; 
0x000f1228: xor al, ch; ret 0xfff1; 
0x000b6714: xor bh, 0x43; stc; call dword ptr [eax - 0x18]; 
0x00133a04: xor bh, 0x58; stc; call dword ptr [eax - 0x18]; 
0x000a630c: xor bh, 0xff; jmp dword ptr [esi + 0xf]; 
0x001365a7: xor bh, al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0x13341], cl; jmp dword ptr [ebp - 0x5f]; 
0x000db991: xor bh, al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0x1336e], cl; jmp dword ptr [ebp - 0x5f]; 
0x00151e93: xor bh, al; inc esp; ret 4; 
0x000225d2: xor bh, bh; jae 0x225da; call esi; 
0x0008233e: xor bh, bh; je 0x82366; cmp al, 0x51; call eax; 
0x0010c981: xor bh, bh; jne 0x10c991; call dword ptr [ebp + 0x24]; 
0x0010cc51: xor bh, bh; jne 0x10cc61; call dword ptr [ebp + 0x24]; 
0x0010ccbc: xor bh, bh; jne 0x10cccc; call dword ptr [ebp + 0x24]; 
0x0010da11: xor bh, bh; jne 0x10da21; call dword ptr [ebp + 0x24]; 
0x0010dce1: xor bh, bh; jne 0x10dcf1; call dword ptr [ebp + 0x24]; 
0x0010dd4c: xor bh, bh; jne 0x10dd5c; call dword ptr [ebp + 0x24]; 
0x00114911: xor bh, bh; jne 0x114921; call dword ptr [ebp + 0x24]; 
0x00114bf1: xor bh, bh; jne 0x114c01; call dword ptr [ebp + 0x24]; 
0x00114c5c: xor bh, bh; jne 0x114c6c; call dword ptr [ebp + 0x24]; 
0x000b35e1: xor bh, bh; mov byte ptr [eax + 0x40], bh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0009043c: xor bh, byte ptr [eax + 3]; add esp, 0xc; ret; 
0x0002b082: xor bh, byte ptr [ecx]; ret; 
0x00058ef5: xor bh, cl; call dword ptr [eax + 0x56]; 
0x0005bcc6: xor bh, cl; call dword ptr [eax - 0x18]; 
0x00065294: xor bh, cl; call dword ptr [eax - 0x73]; 
0x000591a3: xor bh, cl; call dword ptr [ebx + 0x50]; 
0x000590b0: xor bh, cl; call dword ptr [ecx + 0x50]; 
0x000eb986: xor bh, cl; call dword ptr [edx + 0x52]; 
0x000592f3: xor bh, cl; call dword ptr [esi - 0x77]; 
0x00081eec: xor bl, ah; stc; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x00035d60: xor bl, bl; cmp byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x00109c2f: xor byte ptr [eax + 0x127], bh; mov ebx, 0xffffff9c; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00109d83: xor byte ptr [eax + 0x127], bh; mov ebx, 0xffffff9c; mov edx, edi; call dword ptr gs:[0x10]; 
0x001169e6: xor byte ptr [eax + 0x154], bh; mov dword ptr [esp + 0x18], edx; mov esi, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00145f53: xor byte ptr [eax + 0x64bbfd5f], cl; add byte ptr [eax], al; add byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; ret; 
0x00124830: xor byte ptr [eax + 0x66], bh; call dword ptr gs:[0x10]; 
0x0011802f: xor byte ptr [eax + 0xcb], bh; call dword ptr gs:[0x10]; 
0x001180cf: xor byte ptr [eax + 0xcc], bh; call dword ptr gs:[0x10]; 
0x000da7ef: xor byte ptr [eax + 0xce], bh; call dword ptr gs:[0x10]; 
0x000df744: xor byte ptr [eax + 0xd0], bh; call dword ptr gs:[0x10]; 
0x000df7f4: xor byte ptr [eax + 0xd2], bh; call dword ptr gs:[0x10]; 
0x000df3db: xor byte ptr [eax + 0xd5], bh; call dword ptr gs:[0x10]; 
0x000df47b: xor byte ptr [eax + 0xd6], bh; call dword ptr gs:[0x10]; 
0x0010ab37: xor byte ptr [eax + 0xdd], bh; mov ecx, esi; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00098ebb: xor byte ptr [eax + 2], 0; add dh, dh; ret; 
0x00044782: xor byte ptr [eax + eax], al; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], al; jne 0x44785; call dword ptr [eax - 0x18]; 
0x000413e7: xor byte ptr [eax + eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], eax; jne 0x413ea; call dword ptr [eax - 0x18]; 
0x000478ed: xor byte ptr [eax + eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], eax; jne 0x478f0; call dword ptr [eax - 0x18]; 
0x000478ed: xor byte ptr [eax + eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], eax; jne 0x478f0; call dword ptr [eax - 0x18]; ret 0xfe80; 
0x000511ab: xor byte ptr [eax + eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], eax; jne 0x511ae; call dword ptr [eax - 0x18]; 
0x000bba55: xor byte ptr [eax + eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], eax; jne 0xbba58; call dword ptr [eax - 0x18]; 
0x000c15d8: xor byte ptr [eax + eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], eax; jne 0xc15db; call dword ptr [eax - 0x18]; 
0x000c8c02: xor byte ptr [eax + eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], eax; jne 0xc8c05; call dword ptr [eax - 0x18]; 
0x0009b0ac: xor byte ptr [eax + ebp*8 + 0x7e41f6ff], dh; adc byte ptr [edi], cl; inc ebp; ret 0x66c3; 
0x000d6df5: xor byte ptr [eax - 0x17], dl; cdq; loope 0xd6dfa; call dword ptr [ecx + 0x52]; 
0x000d6dff: xor byte ptr [eax - 0x17], dl; hlt; out 0xff, al; call dword ptr [ecx + 0x52]; 
0x0006a721: xor byte ptr [eax - 0x18], dl; cwde; fdivp st(7); dec dword ptr [ecx - 0x76d7db8c]; ret; 
0x00106b47: xor byte ptr [eax - 0x4c], 0xed; call dword ptr [eax + 0x6a]; 
0x0014d7ea: xor byte ptr [eax - 0x54], 0xf9; call dword ptr [eax + 0x68]; 
0x0014d696: xor byte ptr [eax - 0x54], 0xf9; call dword ptr [eax - 0x73]; 
0x000da5a7: xor byte ptr [eax - 0x67], 0xf9; call dword ptr [eax - 0x18]; 
0x0008f9c3: xor byte ptr [eax - 0x7e], 0xf9; call dword ptr [eax - 0x18]; 
0x0009b65b: xor byte ptr [eax - 0x900174b], 0x41; jle 0x9b674; cmovne eax, edx; ret; 
0x0009d48b: xor byte ptr [eax - 1], 0x2a; cmp eax, edx; jne 0x9d488; mov eax, ecx; ret; 
0x000b5a5b: xor byte ptr [eax], 0; ljmp 0:0x8381f6ff; add byte ptr [edi + ecx], al; inc ebp; ret 0x66c3; 
0x0009af5e: xor byte ptr [eax], 0xae; call 0x7d4ba665; add cl, byte ptr [ebp - 0x17c21f6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0009b0ab: xor byte ptr [eax], 0xb4; call 0x7e4ba7b2; adc byte ptr [edi], cl; inc ebp; ret 0x66c3; 
0x0009c17e: xor byte ptr [eax], 0xb7; call 0x7d4bb885; add cl, byte ptr [ebp - 0x18347f6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0011cbc0: xor byte ptr [eax], 0xbb; stc; dec dword ptr [edi]; xchg ebp, eax; ret; 
0x0004aa1d: xor byte ptr [eax], al; add byte ptr [eax + 0x180], bh; call dword ptr gs:[0x10]; 
0x000f7127: xor byte ptr [eax], al; add byte ptr [eax], al; add al, al; call 0xfe1f634; xchg esp, eax; ret 0xd020; 
0x000601bf: xor byte ptr [eax], al; add byte ptr [ebp - 0x477bf001], al; xor al, 0; add byte ptr [ebx - 0x4f373], cl; jmp dword ptr [ebp - 0x75]; 
0x0014aa96: xor byte ptr [eax], al; add byte ptr [ebp - 0x7cbd8b40], al; in al, dx; or al, 0x89; ret; 
0x00162c77: xor byte ptr [eax], al; add esp, 4; mov eax, 1; pop ebx; pop esi; ret; 
0x000b5a5c: xor byte ptr [eax], al; ljmp 0:0x8381f6ff; add byte ptr [edi + ecx], al; inc ebp; ret 0x66c3; 
0x000583bc: xor byte ptr [eax], bl; or eax, dword ptr [eax]; add esp, 0x1c; ret; 
0x000b35e0: xor byte ptr [eax], dh; dec dword ptr [eax + 0x448b4078]; and al, 0xc; pop ebx; pop esi; ret; 
0x00080179: xor byte ptr [ebp + 0x2c], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000c9c60: xor byte ptr [ebp + 0x3d], dh; pop edi; pop esi; ret; 
0x00071a45: xor byte ptr [ebp + 0x5110244c], cl; push dword ptr [edx + 0x98]; call eax; 
0x0002403b: xor byte ptr [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret; 
0x000add30: xor byte ptr [ebp + 0x5e5f4047], cl; pop ebx; ret; 
0x00056790: xor byte ptr [ebp - 0x18], dl; leave; ret 1; 
0x00156e0b: xor byte ptr [ebp - 0x337bf00a], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x13b7d], cl; jmp dword ptr [ebp - 0x75]; 
0x001578da: xor byte ptr [ebp - 0x3b7c0001], 0x1c; ret; 
0x000be857: xor byte ptr [ebp - 0x668f379], cl; call dword ptr [eax - 0x73]; 
0x000bdaf2: xor byte ptr [ebp - 0x668f37f], cl; call dword ptr [eax - 0x73]; 
0x000bacce: xor byte ptr [ebp - 0x6690b79], cl; call dword ptr [eax - 0x73]; 
0x000bbb1f: xor byte ptr [ebp - 0x689a379], cl; call dword ptr [eax - 0x73]; 
0x000be906: xor byte ptr [ebp - 0x689a37f], cl; call dword ptr [eax - 0x73]; 
0x0013c8e4: xor byte ptr [ebp - 0x6a36d80], cl; call dword ptr [eax - 1]; 
0x0011e83a: xor byte ptr [ebp - 0x6a4607d], cl; call dword ptr [eax + 0x6a]; 
0x0011e3e3: xor byte ptr [ebp - 0x6a4607d], cl; call dword ptr [eax - 1]; 
0x0011e9d2: xor byte ptr [ebp - 0x6a99c7d], cl; call dword ptr [eax + 0x6a]; 
0x0010b2e8: xor byte ptr [ebp - 0x6b59779], cl; call dword ptr [eax - 0x18]; 
0x0002f8f2: xor byte ptr [ebp - 0x6b77f040], al; add byte ptr [eax], al; add byte ptr [ebp - 0x6a8877d], cl; call dword ptr [esi - 1]; 
0x000f43f2: xor byte ptr [ebp - 0x6b78a79], cl; dec dword ptr [ebp - 0x6b7af71]; call dword ptr [eax - 0x77]; 
0x000dc440: xor byte ptr [ebp - 0x6b9fe7d], cl; call dword ptr [eax + 0x56]; 
0x000da091: xor byte ptr [ebp - 0x6ba4d7b], cl; call dword ptr [eax + 0x53]; 
0x000d0a53: xor byte ptr [ebp - 0x6ba8580], cl; call dword ptr [eax + 0x56]; 
0x000d0b7b: xor byte ptr [ebp - 0x6ba8e80], cl; call dword ptr [eax + 0x56]; 
0x000f4682: xor byte ptr [ebp - 0x6d17879], cl; dec dword ptr [ebp - 0x6c15b71]; call dword ptr [eax - 0x17]; 
0x0002fd86: xor byte ptr [ebx + 0x2009084], cl; add byte ptr [eax], al; ret; 
0x00164656: xor byte ptr [ebx + 0x448908c0], al; and al, 4; jmp edx; 
0x0015b3da: xor byte ptr [ebx + 0x568b3046], cl; sub al, 0x89; ret; 
0x0006c060: xor byte ptr [ebx + 0x575104ec], al; push dword ptr [ebp - 0x8a0]; call edx; 
0x000b3196: xor byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000afd51: xor byte ptr [ebx + 0x5e082444], cl; ret; 
0x00076475: xor byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0013e75c: xor byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x00024847: xor byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x001562f7: xor byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x00035cbe: xor byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x0012e31e: xor byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; ret; 
0x0002997f: xor byte ptr [ebx + 0x5e5b7cc4], al; pop edi; pop ebp; jmp eax; 
0x00078ad8: xor byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x001669ed: xor byte ptr [ebx + 0x74ed852f], cl; sbb al, 0x83; in al, dx; add al, 0x6a; call dword ptr [ebp + 0x56]; 
0x0003d9bb: xor byte ptr [ebx + 0xf342454], cl; scasd eax, dword ptr es:[edi]; fmul dword ptr [ebx - 0x50f0dbfc]; ret 0xc301; 
0x001586bc: xor byte ptr [ebx + 0xff3fffd], dh; push ds; sti; ret; 
0x00156e09: xor byte ptr [ebx + 0xff68530], cl; test ah, cl; add dword ptr [eax], eax; add byte ptr [ebx - 0x13b7d], cl; jmp dword ptr [ebp - 0x75]; 
0x001171a1: xor byte ptr [ebx - 0x1337a], cl; jmp dword ptr [ebp - 0x75]; 
0x000600e4: xor byte ptr [ebx - 0x17aff314], al; ret 0x3a6; 
0x000ed2c4: xor byte ptr [ebx - 0x17dfdba4], cl; ret 0xf32e; 
0x0008fcd4: xor byte ptr [ebx - 0x1a], bl; call dword ptr [ecx + 0x50]; 
0x0004e0b0: xor byte ptr [ebx - 0x362f43], al; call dword ptr [eax]; 
0x0010a3ff: xor byte ptr [ebx - 0x47c3db84], cl; mov word ptr [eax], es; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00121ab3: xor byte ptr [ebx - 0x47cbdbb4], cl; add byte ptr [ecx], al; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00121c73: xor byte ptr [ebx - 0x47cbdbb4], cl; cmp al, 1; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00121b93: xor byte ptr [ebx - 0x47cbdbb4], cl; cmp eax, dword ptr [ecx]; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00103b1c: xor byte ptr [ebx - 0x47cbdbb4], cl; mov ah, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00103bfc: xor byte ptr [ebx - 0x47cbdbb4], cl; mov ch, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000ddb24: xor byte ptr [ebx - 0x47cbdbb4], cl; sbb al, 1; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000df3d7: xor byte ptr [ebx - 0x47cfdba4], cl; aad 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000401f2: xor byte ptr [ebx - 0x68f0f606], al; ret 0xd284; 
0x0011cbc1: xor byte ptr [ebx - 0x6af00007], bh; ret; 
0x001266fa: xor byte ptr [ebx - 0x72c7dbac], cl; je 0x126726; or byte ptr [ebx - 0x47cbdb84], cl; jne 0x12670a; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0017a3b0: xor byte ptr [ebx - 0x72cbdbac], cl; jl 0x17a3dc; or byte ptr [eax + 0x75], bh; mov ebx, 3; call dword ptr gs:[0x10]; 
0x0013a2d9: xor byte ptr [ebx - 0x72e3dbbc], cl; add byte ptr [edx], 0x4a; stc; call dword ptr [eax + 0x6a]; 
0x0013a610: xor byte ptr [ebx - 0x72e3dbbc], cl; sbb cl, 0x5b; stc; call dword ptr [eax - 0x73]; 
0x00078498: xor byte ptr [ebx - 0x74cbdb8c], cl; adc esi, esi; ret 0xf08; 
0x0010a088: xor byte ptr [ebx - 0x76cbdbb4], cl; cli; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00117462: xor byte ptr [ebx - 0x76cbdbb4], cl; inc esp; and al, 0xc; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00117632: xor byte ptr [ebx - 0x76cbdbb4], cl; inc esp; and al, 0xc; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x00117548: xor byte ptr [ebx - 0x76cbdbb4], cl; inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00117718: xor byte ptr [ebx - 0x76cbdbb4], cl; inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x00103b48: xor byte ptr [ebx - 0x76cbdbb4], cl; inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x00103c28: xor byte ptr [ebx - 0x76cbdbb4], cl; inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x001489a6: xor byte ptr [ebx - 0x7872f714], al; cmp ch, byte ptr [edi]; stc; call dword ptr [eax + 0x56]; 
0x000492fd: xor byte ptr [ebx - 0x78f0f607], al; ret 0xa; 
0x000675c8: xor byte ptr [ebx - 0x8bf63], cl; dec dword ptr [ecx - 0x88b7b]; jmp ptr [ecx]; ret; 
0x0013a558: xor byte ptr [ebx], 0x5b; stc; call dword ptr [eax - 0x42]; 
0x0003009e: xor byte ptr [ecx + 0x200c2], al; add byte ptr [ecx + 0x5e5b1814], cl; ret; 
0x00109c6d: xor byte ptr [ecx + 0x244489ea], cl; or byte ptr [eax + 0x127], bh; call dword ptr gs:[0x10]; 
0x00109dcd: xor byte ptr [ecx + 0x244489fa], cl; or byte ptr [eax + 0x127], bh; call dword ptr gs:[0x10]; 
0x00198faf: xor byte ptr [ecx + 0x24748bf1], cl; or al, 9; ret; 
0x00076470: xor byte ptr [ecx + 0x30738906], cl; add esp, 4; pop ebx; pop esi; ret; 
0x00026872: xor byte ptr [ecx + 0x310c2454], cl; fisttp dword ptr [ecx - 0x76bfdbbc]; ret 0xb60f; 
0x000ffe2a: xor byte ptr [ecx + 0x36cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00124ad4: xor byte ptr [ecx + 0x448b2404], cl; and al, 0x38; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000d0b7d: xor byte ptr [ecx + 0x45], 0xf9; call dword ptr [eax + 0x56]; 
0x0014a5af: xor byte ptr [ecx + 0x46cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000cbc74: xor byte ptr [ecx + 0x5f5e5bc8], cl; ret; 
0x0008df36: xor byte ptr [ecx + 0x90c4], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00108c56: xor byte ptr [ecx + 0x9cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x001167d4: xor byte ptr [ecx + 0xba0850], cl; add dword ptr [eax], eax; add byte ptr [esi - 0x77], ah; push eax; push ss; ret; 
0x000d6d6e: xor byte ptr [ecx - 0x17], dl; ret 0xffe5; 
0x000d7429: xor byte ptr [ecx - 0x3600f787], al; lcall 0, 0x89870f3b; add byte ptr [eax + 0x194], bh; call dword ptr gs:[0x10]; 
0x00097e44: xor byte ptr [ecx - 0x6472c7ab], cl; rol byte ptr [edi], 0; add byte ptr [ecx], bh; fisttp qword ptr [ebp - 0x6af0f798]; ret; 
0x0010ab78: xor byte ptr [ecx - 0x7615760f], cl; inc esp; and al, 8; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00151526: xor byte ptr [ecx], 0x61; stc; call dword ptr [eax - 0x18]; 
0x00171e72: xor byte ptr [ecx], 0xc0; pop ebx; ret; 
0x0008bcd5: xor byte ptr [ecx], 0xc0; ret; 
0x0010c1e2: xor byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b3fd5: xor byte ptr [ecx], al; ret 0x267c; 
0x000c9c5d: xor byte ptr [ecx], bh; dec edi; xor byte ptr [ebp + 0x3d], dh; pop edi; pop esi; ret; 
0x000e9f0c: xor byte ptr [ecx], bh; ret 0x4e0f; 
0x00151e3c: xor byte ptr [ecx], bh; ret 0x840f; 
0x000eaa66: xor byte ptr [ecx], bh; ret; 
0x000f77a2: xor byte ptr [ecx], bh; sal byte ptr [ebx + ecx - 0x77], 1; ret 0xf189; 
0x00167879: xor byte ptr [ecx], ch; ret 0x5356; 
0x0004c49a: xor byte ptr [ecx], ch; ret 0x5489; 
0x0012842a: xor byte ptr [ecx], dh; fild dword ptr [ebx - 0x69f0f606]; ret; 
0x00128dea: xor byte ptr [ecx], dh; fild dword ptr [ebx - 0x69f0f608]; ret; 
0x000dfee9: xor byte ptr [ecx], dh; rol byte ptr [ecx - 0x52053106], 0x1b; setne al; ret; 
0x0011b3fa: xor byte ptr [ecx], dh; stc; call dword ptr [eax - 0x18]; 
0x000517f5: xor byte ptr [ecx], dh; stc; inc dword ptr [ebp - 0x38ec8b40]; add byte ptr [edi], ch; jbe 0x5178d; ret 0x40c7; 
0x000f66fc: xor byte ptr [edi + 0x48], 0xf9; call dword ptr [eax - 1]; 
0x000ac600: xor byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000a2744: xor byte ptr [edi + 0x5e], bl; ret; 
0x00172796: xor byte ptr [edi - 0x18], dl; or dword ptr [ecx], 0xfffffff1; jmp dword ptr [ebp - 0x75]; 
0x000590a5: xor byte ptr [edi - 1], 0xff; inc dword ptr [ebx - 0x7a72fb14]; inc ecx; xor bh, cl; call dword ptr [ecx + 0x50]; 
0x000b3d22: xor byte ptr [edi], cl; mov esp, 0x76c229c0; push es; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000a61d6: xor byte ptr [edi], cl; mov fs, word ptr [ebx - 0x7a000008]; ror byte ptr [edi], 0x85; dec ebx; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000c5e6e: xor byte ptr [edi], cl; test byte ptr [ebx], bh; adc dword ptr [eax], eax; add byte ptr [ebp + 0xff189ff], al; xchg ebp, eax; ret 0xbeb; 
0x0004e052: xor byte ptr [edi], cl; test byte ptr [edi - 0x76fffffd], ah; ret; 
0x0009b16a: xor byte ptr [edi], cl; xchg esp, eax; ret 0xb60f; 
0x000348d7: xor byte ptr [edi], cl; xchg esp, eax; ret 0xc085; 
0x0009b10f: xor byte ptr [edi], cl; xchg esp, eax; ret 0xfa01; 
0x0009b198: xor byte ptr [edi], cl; xchg esp, eax; ret; 
0x0008242f: xor byte ptr [edx + 0x51], dl; call eax; 
0x0008eec0: xor byte ptr [edx - 0x1a], cl; call dword ptr [eax - 1]; 
0x0002f8ec: xor byte ptr [edx - 0x3b7cfffe], al; xor byte ptr [ebp - 0x6b77f040], al; add byte ptr [eax], al; add byte ptr [ebp - 0x6a8877d], cl; call dword ptr [esi - 1]; 
0x00118177: xor byte ptr [edx - 1], bh; mov eax, 0xd0; mov ebx, edx; call dword ptr gs:[0x10]; 
0x00118257: xor byte ptr [edx - 1], bh; mov eax, 0xd2; mov ebx, edx; call dword ptr gs:[0x10]; 
0x0002ea6e: xor byte ptr [edx], 0x2d; stc; call dword ptr [eax - 0x18]; 
0x0005bcc5: xor byte ptr [edx], 0xf9; call dword ptr [eax - 0x18]; 
0x0008686d: xor byte ptr [edx], al; add byte ptr [eax], al; lea edx, [esi + 0x22c]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x00196bbc: xor byte ptr [edx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x000b71e4: xor byte ptr [edx], ch; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x38]; push dword ptr [esp + 0x38]; push esi; call ebx; 
0x0009af5f: xor byte ptr [esi + 0x41f6ffe8], ch; jge 0x9af69; lea edx, [edx - 0x17c220]; cmovne eax, edx; ret; 
0x0012a80f: xor byte ptr [esi + 0x5f], bl; mov eax, edx; ret; 
0x00192351: xor byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x2c73; 
0x001965cf: xor byte ptr [esi + 0xf], ah; xlatb; ret 0x498d; 
0x000b3beb: xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x00151513: xor byte ptr [esi + ebp*4], 0xf9; call dword ptr [eax - 0x73]; 
0x0010487d: xor byte ptr [esi - 0x7d], ah; clc; adc byte ptr [edi], cl; test byte ptr [eax - 0x9fffffc], bl; ret 0xf20; 
0x00196876: xor ch, 0; add byte ptr [eax], al; lea eax, [edi + 0xb]; pop edi; ret; 
0x00159818: xor ch, 0xf2; call dword ptr [esi - 0x73]; 
0x000b40c6: xor ch, ch; add eax, ecx; pop edi; ret; 
0x000e271a: xor cl, 0x47; stc; call dword ptr [eax - 0x18]; 
0x00083239: xor cl, 0x80; call dword ptr gs:[0x10]; 
0x000832ca: xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000832ca: xor cl, 0x81; call dword ptr gs:[0x10]; pop ebx; pop esi; ret; 
0x00084f97: xor cl, 0x81; mov dword ptr [ebp + edx*4 + 8], 0; mov edx, 0x7fffffff; call dword ptr gs:[0x10]; 
0x00084b07: xor cl, 0x81; mov dword ptr [edi], 0; call dword ptr gs:[0x10]; 
0x000854ab: xor cl, 0x81; mov eax, 0xf0; mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008b8f2: xor cl, 0x87; mov eax, 0xf0; mov esi, edx; call dword ptr gs:[0x10]; 
0x0003ffc7: xor cl, bh; call dword ptr [eax + 0x57]; 
0x00040883: xor cl, bh; call dword ptr [eax - 0x18]; 
0x0003eeb6: xor cl, bh; call dword ptr [eax - 0x73]; 
0x00047e02: xor cl, bh; call dword ptr [esi + 0x6a]; 
0x0003ff91: xor cl, bh; dec dword ptr [ebp - 0x35f49]; call dword ptr [esi + 0x6a]; 
0x0005741d: xor cl, bh; dec dword ptr [ecx - 0x9ebdb8c]; ret 0xf50; 
0x00044738: xor cl, bh; jmp ptr [eax + 0x4d]; add eax, 0x8d500000; xchg al, dh; jne 0x4473f; call dword ptr [eax - 0x18]; 
0x0004156e: xor cl, bh; jmp ptr [eax + 0x4d]; add eax, 0x8d500000; xchg eax, esi; jne 0x41575; call dword ptr [eax - 0x18]; 
0x0004780a: xor cl, bh; jmp ptr [eax + 0x4d]; add eax, 0x8d500000; xchg eax, esi; jne 0x47811; call dword ptr [eax - 0x18]; 
0x00051138: xor cl, bh; jmp ptr [eax + 0x4d]; add eax, 0x8d500000; xchg eax, esi; jne 0x5113f; call dword ptr [eax - 0x18]; 
0x000bbb93: xor cl, bh; jmp ptr [eax + 0x4d]; add eax, 0x8d500000; xchg eax, esi; jne 0xbbb9a; call dword ptr [eax - 0x18]; 
0x000be862: xor cl, bh; jmp ptr [eax + 0x4d]; add eax, 0x8d500000; xchg eax, esi; jne 0xbe869; call dword ptr [eax - 0x18]; 
0x000c1669: xor cl, bh; jmp ptr [eax + 0x4d]; add eax, 0x8d500000; xchg eax, esi; jne 0xc1670; call dword ptr [eax - 0x18]; 
0x000c8d01: xor cl, bh; jmp ptr [eax + 0x50]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; and byte ptr [esi + 0x44], 0xf9; call dword ptr [eax - 0x18]; 
0x00044852: xor cl, bh; jmp ptr [eax + 0x5f]; add eax, 0x8d500000; xchg byte ptr [eax], bh; jbe 0x44859; call dword ptr [eax - 0x18]; 
0x00041406: xor cl, bh; jmp ptr [eax + 0x5f]; add eax, 0x8d500000; xchg dword ptr [eax], edi; jbe 0x4140d; call dword ptr [eax - 0x18]; 
0x0004790c: xor cl, bh; jmp ptr [eax + 0x5f]; add eax, 0x8d500000; xchg dword ptr [eax], edi; jbe 0x47913; call dword ptr [eax - 0x18]; 
0x00051113: xor cl, bh; jmp ptr [eax + 0x5f]; add eax, 0x8d500000; xchg dword ptr [eax], edi; jbe 0x5111a; call dword ptr [eax - 0x18]; 
0x000bbaba: xor cl, bh; jmp ptr [eax + 0x5f]; add eax, 0x8d500000; xchg dword ptr [eax], edi; jbe 0xbbac1; call dword ptr [eax - 0x18]; 
0x000be981: xor cl, bh; jmp ptr [eax + 0x5f]; add eax, 0x8d500000; xchg dword ptr [eax], edi; jbe 0xbe988; call dword ptr [eax - 0x18]; 
0x000c15f7: xor cl, bh; jmp ptr [eax + 0x5f]; add eax, 0x8d500000; xchg dword ptr [eax], edi; jbe 0xc15fe; call dword ptr [eax - 0x18]; 
0x000c79ed: xor cl, bh; jmp ptr [eax + 0x74]; add eax, 0x8d500000; adc byte ptr [ecx + 0x30], 0xf9; call dword ptr [eax - 0x18]; 
0x00040877: xor cl, bh; jmp ptr [eax + 0x74]; add eax, 0x8d500000; xchg dword ptr [ecx + 0x30], edx; stc; call dword ptr [eax - 0x18]; 
0x0004480c: xor cl, bh; jmp ptr [eax - 0x28]; add eax, 0x8d500000; xchg byte ptr [esi + 0x30], ah; stc; call dword ptr [eax - 0x18]; 
0x000414c8: xor cl, bh; jmp ptr [eax - 0x28]; add eax, 0x8d500000; xchg dword ptr [esi + 0x30], esp; stc; call dword ptr [eax - 0x18]; 
0x0011d185: xor cl, bl; ror byte ptr [edi], 0x9e; ret 0xff85; 
0x000a20fa: xor cl, byte ptr [ebp + 0x5e5b0142]; ret; 
0x0009c3f1: xor cl, byte ptr [ebp - 0x157c07a8]; add al, 0x83; rol dword ptr [ecx], 0xeb; adc eax, 0x8300768d; ret 0x8b20; 
0x000a2042: xor cl, byte ptr [ecx + 0x242c6d0]; add byte ptr [ebx + 0x5e], bl; ret; 
0x000498a8: xor cl, byte ptr [ecx + 0x74db84f3]; cmp byte ptr [ebx + 0x3928245c], cl; fmul dword ptr [edi]; or dword ptr [eax - 0xb], 0xffffffff; jmp ptr [ecx]; ret; 
0x000731a3: xor cl, byte ptr [ecx - 0x17efdbac]; ret; 
0x00141f87: xor cl, ch; ret 0xfffc; 
0x000d46d2: xor cl, ch; xchg ecx, eax; out 0xff, eax; call dword ptr [eax + 0x51]; 
0x000b27a3: xor cl, cl; mov byte ptr [eax], cl; mov eax, edi; pop ebx; pop edi; ret; 
0x00157e62: xor dh, 0x62; stc; call dword ptr [eax + 0x6a]; 
0x00157f62: xor dh, 0x62; stc; call dword ptr [eax - 0x18]; 
0x000aa80c: xor dh, 0xff; jmp dword ptr [esi + 0xf]; 
0x00079b90: xor dh, byte ptr [ecx - 6]; jmp dword ptr [esi - 0x70]; 
0x0014c8ad: xor dh, byte ptr [ecx]; leave; mov eax, ecx; pop ebx; pop esi; ret; 
0x0013d11d: xor dh, ch; jmp dword ptr [ebp - 0x75]; 
0x000ead0a: xor dl, byte ptr [ebx + esi*8 - 1]; add esp, 0x14; pop ebx; pop esi; ret; 
0x0014a965: xor dword ptr [bx + si], eax; add byte ptr [ebp - 0x7cc08b40], al; in al, dx; add al, 0x89; ret; 
0x0007b7e2: xor dword ptr [eax + 0x14], 0xffffffe5; call dword ptr [eax - 0x73]; 
0x00129f3a: xor dword ptr [eax + 0x56], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0012a0cd: xor dword ptr [eax + 0x56], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x00160de3: xor dword ptr [eax + 0x6b], 0xfffffff3; call dword ptr [eax + 0x57]; 
0x000919a6: xor dword ptr [eax + 0x78], 0xffffffe6; call dword ptr [eax + 0x55]; 
0x00048a79: xor dword ptr [eax - 0x39ffffe8], 4; or byte ptr [eax], al; pop ebx; pop esi; ret; 
0x000951ed: xor dword ptr [eax - 0x5a], 0xffffffe6; call dword ptr [eax + 0x56]; 
0x0015db6d: xor dword ptr [eax - 0x73000000], 0xffffff94; and al, 0xac; add byte ptr [eax], al; add byte ptr [edx + 0x56], dl; call dword ptr [eax + 4]; 
0x00140cc8: xor dword ptr [eax - 0x73], edx; sub byte ptr [eax + ebp*4], 0xf9; call dword ptr [eax - 0x18]; 
0x000e7c6f: xor dword ptr [eax - 0xa], 0xfffffff8; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x00129467: xor dword ptr [eax], 0xfffffff0; call dword ptr [eax - 0x18]; 
0x0014a966: xor dword ptr [eax], eax; add byte ptr [ebp - 0x7cc08b40], al; in al, dx; add al, 0x89; ret; 
0x0005bb78: xor dword ptr [eax], eax; add byte ptr [ebx - 0x5db73], cl; call ecx; 
0x00128dc5: xor dword ptr [ebp - 0x76ea8b37], eax; ret; 
0x00075037: xor dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x0016bc72: xor dword ptr [ebx + 0x5e5b14c4], eax; ret; 
0x0016f86b: xor dword ptr [ebx + 0x5e5b1cc4], eax; pop edi; pop ebp; ret; 
0x00071a3e: xor dword ptr [ebx + 0x74ff04ec], eax; and al, 0x30; lea ecx, [esp + 0x10]; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x0012a7bf: xor dword ptr [ebx - 0x1334a], ecx; jmp dword ptr [ebp - 0x75]; 
0x0011664e: xor dword ptr [ebx - 0x47dfdba4], ecx; add byte ptr ss:[eax], al; add byte ptr [ecx + 0x5409], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00023bd8: xor dword ptr [ebx], 0x2a; stc; call dword ptr [eax - 0x18]; 
0x0003ec34: xor dword ptr [ebx], edx; add byte ptr [ecx + 0x1eb3c9c7], al; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x0008818b: xor dword ptr [ecx + 0x3f], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0002f763: xor dword ptr [ecx + 0x5f5e5b10], ecx; pop ebp; ret; 
0x0004b9b6: xor dword ptr [ecx - 0x387cccfc], ecx; add al, 0x83; ret; 
0x00151527: xor dword ptr [ecx - 7], esp; call dword ptr [eax - 0x18]; 
0x0010c247: xor dword ptr [ecx], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ad31b: xor dword ptr [ecx], ecx; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00095bdf: xor dword ptr [ecx], edi; ret; 
0x00147477: xor dword ptr [edi + 0x2d], 0xfffffff9; call dword ptr [eax + 0x51]; 
0x00109e94: xor dword ptr [edi + ebx*4], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00163141: xor dword ptr [edi + edi*8], 0xffffffff; call ptr [ebx + 0x5e]; pop edi; ret; 
0x00081b08: xor dword ptr [edx + 0x3e], 0xfffffff9; call dword ptr [ecx + 0x52]; 
0x0011f911: xor dword ptr [edx + 0x51], 0xfffffff9; call dword ptr [eax + 0x57]; 
0x00137f09: xor dword ptr [edx + ebx*2], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0012e72f: xor dword ptr [esi + 0x57], 0xfffffff9; call dword ptr [eax + 0x57]; 
0x0011e687: xor dword ptr [esi + 0x57], 0xfffffff9; call dword ptr [eax + 0x6a]; 
0x00164fab: xor dword ptr [esi - 0x3b7c0014], 0x838d500c; pop eax; pop ebx; stc; call dword ptr [eax + 0x6a]; 
0x000fc7aa: xor eax, 0x13; in eax, dx; call dword ptr [eax + 0x6a]; 
0x000e5a6a: xor eax, 0x4742a3c; cmp al, 0x3f; jne 0xe5a89; mov eax, 1; ret; 
0x00119893: xor eax, 0x4a; stc; call dword ptr [eax - 0x18]; 
0x00119893: xor eax, 0x4a; stc; call dword ptr [eax - 0x18]; ret 7; 
0x0007ec5a: xor eax, 0x5b08c483; ret; 
0x00081ffb: xor eax, 0x5b14c483; pop esi; ret; 
0x0008f1fd: xor eax, 0x5b24c483; pop esi; ret; 
0x000dcbc0: xor eax, 0x81000952; ret; 
0x0011c8b7: xor eax, 0x83fff3b2; les ebp, ptr [eax]; mov eax, ebx; pop ebx; ret; 
0x00087d83: xor eax, 0x84828b; add byte ptr [eax], al; and eax, 0x10; jne 0x87d98; add esp, 0xc; ret; 
0x0008eb42: xor eax, 0x8908ec83; ret; 
0x0016b307: xor eax, 0x89fffff2; ret; 
0x0011e7d7: xor eax, 0x8bfff52c; and dword ptr [edi + edi*8], 0xffffffff; inc dword ptr [ebx + 0x8b10c4]; test eax, eax; je 0x11e830; call eax; 
0x0011185f: xor eax, 0xbf000001; or byte ptr [eax], al; add byte ptr [eax], al; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00122dca: xor eax, 0xc244c8d; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x00122f4a: xor eax, 0xc244c8d; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x0012dc39: xor eax, 0xc4830000; or al, 0x50; push dword ptr [esp + 8]; push 0x2000003; call dword ptr [ebp + 0x14]; 
0x001586e4: xor eax, 0xffffffe5; bnd call dword ptr [eax - 0x73]; 
0x00131305: xor eax, dword ptr [0x18]; call eax; 
0x000218e1: xor eax, dword ptr [0x18]; jmp eax; 
0x00141008: xor eax, dword ptr [0x18]; lea edx, [esp + 0x10]; push edx; push edi; call eax; 
0x001410d4: xor eax, dword ptr [0x18]; lea edx, [esp + 0x10]; push edx; push esi; call eax; 
0x0003ab0c: xor eax, dword ptr [0x18]; mov dword ptr [ebp + edi], edx; push dword ptr [ebx + 4]; call eax; 
0x0002196c: xor eax, dword ptr [0x18]; pop edi; pop ebp; jmp eax; 
0x001511fc: xor eax, dword ptr [0x18]; push eax; call edx; 
0x00131334: xor eax, dword ptr [0x18]; push esi; call eax; 
0x00118ceb: xor eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00033c0c: xor eax, dword ptr [eax]; add cl, al; cli; add al, byte ptr [ecx - 0xccc1e]; inc dword ptr [ecx]; ret 0xd089; 
0x001595d5: xor eax, dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00132674: xor eax, dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x00021e72: xor eax, dword ptr [ebx + 0x5e5b20c4]; pop edi; ret; 
0x000d7b7f: xor eax, dword ptr [ebx + 0x5e5b30c4]; pop edi; ret; 
0x000ee2a9: xor eax, dword ptr [ebx + 0x5e5b3cc4]; pop edi; pop ebp; ret; 
0x0010a7c0: xor eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00131304: xor eax, dword ptr gs:[0x18]; call eax; 
0x000218e0: xor eax, dword ptr gs:[0x18]; jmp eax; 
0x00141007: xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x10]; push edx; push edi; call eax; 
0x001410d3: xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x10]; push edx; push esi; call eax; 
0x0003ab0b: xor eax, dword ptr gs:[0x18]; mov dword ptr [ebp + edi], edx; push dword ptr [ebx + 4]; call eax; 
0x0002196b: xor eax, dword ptr gs:[0x18]; pop edi; pop ebp; jmp eax; 
0x001511fb: xor eax, dword ptr gs:[0x18]; push eax; call edx; 
0x00131333: xor eax, dword ptr gs:[0x18]; push esi; call eax; 
0x0011ccc7: xor eax, eax; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0003b9b7: xor eax, eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x00082d04: xor eax, eax; add esp, 0xc; ret; 
0x000351b2: xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x0003ba36: xor eax, eax; add esp, 8; pop ebx; ret; 
0x000e95d8: xor eax, eax; cmp dword ptr [esi + ecx*4], ebx; je 0xe95f0; pop ebx; pop esi; ret; 
0x000d6ee7: xor eax, eax; cmp dword ptr [esp + 0x14], 1; je 0xd6ef8; add esp, 0xc; ret; 
0x000d6fc7: xor eax, eax; cmp dword ptr [esp + 0x14], 1; je 0xd6fd8; add esp, 0xc; ret; 
0x00198123: xor eax, eax; cmp ecx, dword ptr [edx - 4]; jne 0x198130; pop ebx; ret; 
0x000dfeea: xor eax, eax; cmp edx, 0x1badface; setne al; ret; 
0x000dff05: xor eax, eax; cmp edx, 0x1cd1; setne al; ret; 
0x000a2563: xor eax, eax; cmp edx, 0x40; ja 0xa2571; mov eax, dword ptr [ecx + edx*4 - 0x9c0]; ret; 
0x000a2593: xor eax, eax; cmp edx, 0x40; ja 0xa25a1; mov eax, dword ptr [ecx + edx*4 - 0x8a0]; ret; 
0x0006fd33: xor eax, eax; cmp edx, 0x85; ja 0x6fd44; mov eax, dword ptr [ecx + edx*4 - 0xbe0]; ret; 
0x000dfeb5: xor eax, eax; cmp edx, 0xadf5; setne al; ret; 
0x00082752: xor eax, eax; cmp edx, dword ptr [esp + 4]; setae al; ret; 
0x0014ab76: xor eax, eax; cmp word ptr [ecx + 2], si; je 0x14ab88; pop ebx; pop esi; ret; 
0x0010a7b0: xor eax, eax; jmp 0x10a790; lea esi, [esi]; mov edx, dword ptr [esp + 0xa8]; mov eax, 0x133; call dword ptr gs:[0x10]; 
0x0011ee96: xor eax, eax; lea edx, [esp + 0xc]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x001160a1: xor eax, eax; mov dword ptr [ebx + 0x50], edx; pop ebx; pop esi; pop edi; ret; 
0x00075ef5: xor eax, eax; mov dword ptr [ebx], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x00084734: xor eax, eax; mov dword ptr [ecx + 4], edx; ret; 
0x000a1b1a: xor eax, eax; mov dword ptr [esi], edx; pop ebx; pop esi; ret; 
0x00108ce4: xor eax, eax; mov eax, 0x17f; call dword ptr gs:[0x10]; 
0x001162aa: xor eax, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000d8fa2: xor eax, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x000fb1d0: xor eax, eax; mov ebx, dword ptr [esp + 0x40]; mov esi, dword ptr [esp + 0x44]; lea ecx, [esp + 0xc]; mov eax, 0x1a7; call dword ptr gs:[0x10]; 
0x0012223f: xor eax, eax; mov ebx, dword ptr [esp + 0x50]; mov edx, dword ptr [esp + 0x54]; lea ecx, [esp + 0x1c]; mov eax, 0x19a; call dword ptr gs:[0x10]; 
0x00126c28: xor eax, eax; mov ecx, dword ptr [edx + 4]; cmp byte ptr [ecx], 0; je 0x126c38; ret; 
0x000ce9be: xor eax, eax; mov edx, dword ptr [esp + 0x34]; mov ebx, dword ptr [esp + 0x30]; lea ecx, [esp + 0xc]; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x00116b2e: xor eax, eax; mov edx, dword ptr [esp + 0x64]; mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 4]; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x00048064: xor eax, eax; mov esi, dword ptr [esp + 0x28]; mov eax, 0x25; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x001164e4: xor eax, eax; mov esi, dword ptr [esp + 0x44]; mov ebx, dword ptr [esp + 0x40]; lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x001920e2: xor eax, eax; pop ebp; ret; 
0x000844e9: xor eax, eax; pop ebx; pop edi; ret; 
0x0013135e: xor eax, eax; pop ebx; pop esi; pop ebp; ret; 
0x00021ab4: xor eax, eax; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00076514: xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0003a16f: xor eax, eax; pop ebx; pop esi; ret; 
0x000372ea: xor eax, eax; pop ebx; ret; 
0x00193671: xor eax, eax; pop edi; pop ebp; pop ebx; ret; 
0x00193110: xor eax, eax; pop edi; pop ebx; ret; 
0x000c9b34: xor eax, eax; pop edi; pop esi; ret; 
0x000b37e0: xor eax, eax; pop edi; ret; 
0x0003bd3a: xor eax, eax; pop esi; pop edi; pop ebp; ret; 
0x0004ae80: xor eax, eax; pop esi; pop edi; ret; 
0x000843b6: xor eax, eax; rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x00034ec0: xor eax, eax; ret; 
0x000dd93e: xor eax, eax; test edi, edi; cmove esi, eax; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x000383a0: xor eax, eax; test edx, edx; sete al; ret; 
0x00198c72: xor eax, eax; tzcnt edx, edx; add eax, edx; ret; 
0x00035f7f: xor eax, ecx; shr eax, 0x1f; ret; 
0x0009d004: xor eax, edi; jmp dword ptr [ebp - 0x75]; 
0x00034eb3: xor eax, edx; movzx edx, byte ptr [ecx]; test dl, dl; jne 0x34e99; ret; 
0x0003b69f: xor eax, edx; ret; 
0x00023bd9: xor ebp, dword ptr [edx]; stc; call dword ptr [eax - 0x18]; 
0x0009e878: xor ebp, eax; ret 0xfffe; 
0x00123721: xor ebp, ebp; and esp, 0xfffffff0; sub esp, 0xc; push esi; call edx; 
0x000dd5d9: xor ebp, ebx; call dword ptr [eax - 1]; 
0x0013a559: xor ebx, dword ptr [ebx - 7]; call dword ptr [eax - 0x42]; 
0x000cc079: xor ebx, ebx; call dword ptr gs:[0x10]; 
0x000cc079: xor ebx, ebx; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xcc090; pop ebx; ret; 
0x00021540: xor ebx, ebx; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x00087257: xor ebx, ebx; mov byte ptr [esp + 0x4b], 0; lea ecx, [ecx - 0x72600]; mov esi, 8; mov dword ptr [esp + 8], edx; call dword ptr gs:[0x10]; 
0x0010463a: xor ebx, ebx; mov dword ptr [esp + 0x124], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x00173e63: xor ebx, ebx; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00116ac7: xor ebx, ebx; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov esi, ebx; call dword ptr gs:[0x10]; 
0x00133899: xor ebx, ebx; mov ecx, esp; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x00086b8d: xor ebx, ebx; nop; mov eax, edx; call dword ptr gs:[0x10]; 
0x0013b3c2: xor ecx, 0x47; stc; call dword ptr [eax - 0x18]; 
0x00115a7c: xor ecx, dword ptr [ebx - 0x47dfdba4]; fld qword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00121f3c: xor ecx, dword ptr [ebx - 0x47f3dba4]; js 0x121f45; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0005b614: xor ecx, dword ptr [ebx - 0x5db7b]; dec dword ptr [ecx + 0x29008bfa]; ret 0x953b; 
0x0014e6d1: xor ecx, dword ptr [ebx - 0x76acfb95]; sti; call 0x20140; mov dword ptr [esp], ebp; call esi; 
0x000a1c2c: xor ecx, dword ptr [ecx - 0x760e7605]; aad 0x83; ret 0x3801; 
0x0008c53b: xor ecx, dword ptr [ecx - 0x76f3dbac]; ret 0xca81; 
0x000305d4: xor ecx, ecx; call 0x300b0; mov edx, dword ptr [esp + 0x14]; add esp, 0xc; mov eax, edx; ret; 
0x0010b029: xor ecx, ecx; call dword ptr gs:[0x10]; 
0x0010b029: xor ecx, ecx; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x10b040; pop ebx; ret; 
0x0015144f: xor ecx, ecx; cmp eax, 2; jne 0x151470; mov eax, ecx; ret; 
0x0008e08d: xor ecx, ecx; lock cmpxchg dword ptr [edx], ecx; mov eax, 0x10; cmove eax, ecx; ret; 
0x000d7079: xor ecx, ecx; mov eax, 0x196; not ebx; lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x00088eaa: xor ecx, ecx; mov eax, 0xf0; mov ebx, ebp; mov esi, ecx; call dword ptr gs:[0x10]; 
0x0014c8ae: xor ecx, ecx; mov eax, ecx; pop ebx; pop esi; ret; 
0x0004aa70: xor ecx, ecx; mov ebx, 0; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0008481f: xor ecx, ecx; or dword ptr [edx + 8], 8; mov dword ptr [edx + 0x10], eax; mov eax, ecx; ret; 
0x0015afa9: xor ecx, ecx; test eax, eax; je 0x15afe0; mov eax, ecx; pop ebx; ret; 
0x00166459: xor ecx, ecx; test eax, eax; je 0x166490; mov eax, ecx; pop ebx; ret; 
0x001664c9: xor ecx, ecx; test eax, eax; je 0x166500; mov eax, ecx; pop ebx; ret; 
0x00057fb4: xor ecx, edi; call dword ptr [eax + 0x53]; 
0x00172a73: xor ecx, edi; call dword ptr [eax + 0x6a]; 
0x00052103: xor ecx, edi; call dword ptr [eax - 0x18]; 
0x0006ab75: xor ecx, edi; call dword ptr [eax - 0x77]; 
0x0005847c: xor ecx, edi; call dword ptr [eax - 1]; 
0x00059140: xor ecx, edi; call dword ptr [ebx + 0x50]; 
0x0005856e: xor ecx, edi; call dword ptr [ecx + 0x53]; 
0x000517f6: xor ecx, edi; inc dword ptr [ebp - 0x38ec8b40]; add byte ptr [edi], ch; jbe 0x5178d; ret 0x40c7; 
0x000b6f82: xor edi, 0x43; stc; call dword ptr [eax - 0x18]; 
0x0010f887: xor edi, dword ptr [ecx]; ret; 
0x00107c16: xor edi, ecx; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; xor eax, eax; ret; 
0x0002cfd5: xor edi, edi; jmp dword ptr [ebp - 0x75]; 
0x001a1676: xor edi, edi; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x000f7df8: xor edx, 0xffffffff; mov dword ptr [esi + 0x14], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x000213c9: xor edx, dword ptr [0x18]; rol edx, 9; mov dword ptr [eax + 0x1978], edx; ret; 
0x000ce084: xor edx, dword ptr [eax - 0x73]; test dword ptr [eax + 0x45], eax; stc; call dword ptr [eax - 0x18]; 
0x000213c8: xor edx, dword ptr gs:[0x18]; rol edx, 9; mov dword ptr [eax + 0x1978], edx; ret; 
0x0015b089: xor edx, edx; add esp, 8; mov eax, edx; pop ebx; ret; 
0x000830d1: xor edx, edx; call dword ptr gs:[0x10]; 
0x001569f8: xor edx, edx; cmp byte ptr [eax], 0; cmove eax, edx; pop ebx; pop esi; ret; 
0x000dd661: xor edx, edx; cmp eax, -1; cmove eax, edx; pop ebx; ret; 
0x000ced3b: xor edx, edx; cmp eax, 0xa3d70b; setb dl; add edx, 0x16d; mov eax, edx; ret; 
0x00132ade: xor edx, edx; div ebx; pop ebx; pop esi; pop edi; ret; 
0x00107a10: xor edx, edx; lea ebx, [esp + 8]; mov eax, 0x13e; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0004aaa9: xor edx, edx; lea ecx, [eax + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x000886da: xor edx, edx; lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x0007b4c5: xor edx, edx; mov dword ptr [ebx], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x0007b97d: xor edx, edx; mov dword ptr [ebx], eax; mov eax, edx; pop ebx; ret; 
0x0008bd4a: xor edx, edx; mov dword ptr [ecx], eax; mov eax, edx; ret; 
0x0010497b: xor edx, edx; mov eax, 0x1b4; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x000872d8: xor edx, edx; mov eax, 0xaf; mov ebx, 2; mov esi, 8; call dword ptr gs:[0x10]; 
0x000875c7: xor edx, edx; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x0008b3b4: xor edx, edx; mov eax, 0xf0; mov ecx, 7; mov dword ptr [ebx + 4], 0; mov esi, edx; call dword ptr gs:[0x10]; 
0x00092e06: xor edx, edx; mov eax, 1; call 0x92d70; mov dword ptr [esp], esi; call ebx; 
0x00127a47: xor edx, edx; mov eax, dword ptr [esp + 0x10]; mov eax, dword ptr [eax + 0x4c]; call 0x127920; add esp, 4; ret; 
0x00089608: xor edx, edx; mov eax, edx; ret; 
0x00086c19: xor edx, edx; mov ecx, 0x80; mov eax, edi; mov esi, edx; call dword ptr gs:[0x10]; 
0x00088a15: xor edx, edx; mov ecx, dword ptr [esp + 8]; mov esi, 8; call dword ptr gs:[0x10]; 
0x001046f8: xor edx, edx; mov ecx, ebp; mov esi, 8; call dword ptr gs:[0x10]; 
0x00083062: xor edx, edx; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00086ba3: xor edx, edx; mov esi, 0x53053053; lea ebx, [eax + 0x520]; mov eax, 0x182; call dword ptr gs:[0x10]; 
0x0012ff0e: xor edx, edx; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x000a1e50: xor edx, edx; pop ebx; mov eax, edx; ret; 
0x0003db52: xor edx, edx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0003bd1b: xor edx, edx; sub ecx, ebx; call dword ptr gs:[0x10]; 
0x000931c1: xor edx, edx; test cl, 0x40; jne 0x931e8; add ebx, 1; mov eax, 0x115; call dword ptr gs:[0x10]; 
0x0012c84a: xor edx, edx; test eax, eax; cmovs eax, edx; add esp, 8; pop ebx; ret; 
0x0007b05b: xor edx, edx; test eax, eax; setne dl; mov eax, edx; ret; 
0x0008b8f0: xor edx, edx; xor cl, 0x87; mov eax, 0xf0; mov esi, edx; call dword ptr gs:[0x10]; 
0x0011f962: xor esi, 0x51; stc; call dword ptr [eax + 0x57]; 
0x0008e3a8: xor esi, dword ptr [ebp + 5]; xor eax, eax; pop ebx; pop esi; ret; 
0x0014e892: xor esi, dword ptr [ebp - 0x55]; mov edx, 1; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00091ac3: xor esi, dword ptr [ebp - 0x66]; mov edx, 1; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0015c17c: xor esi, dword ptr [ebx]; xor esi, dword ptr [ecx]; ret 0xe0c1; 
0x0015c17e: xor esi, dword ptr [ecx]; ret 0xe0c1; 
0x000839d4: xor esi, esi; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x0016c120: xor esi, esi; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x0008a37c: xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000831b8: xor esi, esi; call dword ptr gs:[0x10]; 
0x0007c6e8: xor esi, esi; cdq; push edx; push eax; push ebx; call dword ptr [ecx + 0x40]; 
0x00083bef: xor esi, esi; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00083846: xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x000855e0: xor esi, esi; mov eax, edi; call dword ptr gs:[0x10]; 
0x001268d9: xor esi, esi; mov ebx, 0x18; or dh, 1; call dword ptr gs:[0x10]; 
0x00125d39: xor esi, esi; mov ebx, 0xe; or dh, 1; call dword ptr gs:[0x10]; 
0x00083295: xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00083295: xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; pop ebx; pop esi; ret; 
0x0008c4e1: xor esi, esi; mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00085033: xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00088d93: xor esi, esi; mov ecx, dword ptr [eax]; mov eax, 0xf0; not ecx; and ecx, 0x80; call dword ptr gs:[0x10]; 
0x00084f92: xor esi, esi; mov ecx, dword ptr [esp]; xor cl, 0x81; mov dword ptr [ebp + edx*4 + 8], 0; mov edx, 0x7fffffff; call dword ptr gs:[0x10]; 
0x001743d4: xor esi, esi; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00084a55: xor esi, esi; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00085556: xor esi, esi; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00085a13: xor esi, esi; mov edx, eax; mov eax, 0xf0; or edx, 2; call dword ptr gs:[0x10]; 
0x00085763: xor esi, esi; mov edx, eax; mov eax, edi; or edx, 2; call dword ptr gs:[0x10]; 
0x0008529f: xor esi, esi; or eax, 2; mov edx, eax; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000b4500: xor esi, esi; pop ebx; mov eax, esi; pop esi; pop edi; ret; 
0x0008bed0: xor esi, esi; push ebx; mov ebx, dword ptr [esp + 0x10]; mov dword ptr [ebx], 0; call dword ptr gs:[0x10]; 
0x000832bf: xor esi, esi; push ebx; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000ed1ea: xor esi, esi; ret 0x7404; 
0x0019783c: xor esi, esi; ret 0xf01; 
0x00083237: xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x000857ec: xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00150e80: xor esp, 0x60; stc; call dword ptr [eax - 0x73]; 
0x00094ce8: xor esp, 0xffffff85; stc; call dword ptr [eax - 1]; 
0x00198bac: xor esp, dword ptr [esi + 0xf]; adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x0012d517: xorps xmm7, xmm1; call dword ptr [eax - 1]; 

44552 gadgets found
