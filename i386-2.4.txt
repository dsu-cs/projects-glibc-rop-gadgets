


Gadgets
=======


0x001271f4: aaa; adc byte ptr [eax], al; add byte ptr [ebp - 0x6aef47d], cl; call dword ptr [edx + 0x52]; 
0x00198064: aaa; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00153c35: aaa; add al, 0xee; jmp dword ptr [esi - 0x70]; 
0x0014983d: aaa; add byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x0009c5df: aaa; add esp, 0x14; pop ebx; pop esi; ret; 
0x001824dc: aaa; add esp, 0x18; pop ebx; ret; 
0x0009a973: aaa; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000aa127: aaa; call 0xc24eb12c; ret; 
0x000c3354: aaa; call ebx; 
0x000c32ae: aaa; call esi; 
0x000b9e9b: aaa; das; adc dword ptr [eax], eax; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000fe1f6: aaa; dec eax; stc; call dword ptr [eax + 0x55]; 
0x000ff9a0: aaa; inc dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x00084ef8: aaa; int1; stc; jmp dword ptr [esi - 0x70]; 
0x00037e05: aaa; lahf; or byte ptr [eax], al; add esp, 0x1c; ret; 
0x0004128a: aaa; mov eax, dword ptr [esp + 0x10]; call eax; 
0x000c4115: aaa; mov eax, dword ptr [esp + 0x38]; call eax; 
0x0011fa38: aaa; mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x127; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0011f798: aaa; mov ecx, dword ptr [esp + 0x30]; mov eax, 0x127; mov ebx, 0xffffff9c; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00063125: aaa; or eax, dword ptr [eax]; add byte ptr [edi], cl; mov esi, 0x89c68900; ret 0x44c7; 
0x0019d17b: aaa; out dx, eax; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0008f560: aaa; pop ebx; pop esi; pop edi; ret; 
0x001548ae: aaa; push eax; push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x00175035: aaa; ret; 
0x00094161: aaa; test byte ptr [edx + 0x80], 0x10; jne 0x94178; xor eax, eax; add esp, 0xc; ret; 
0x000fd799: aad 0; add byte ptr [eax], al; add byte ptr [ebx - 0x77], dl; ret; 
0x0010c50e: aad 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000a6c6f: aad 0; add byte ptr [eax], al; sub esp, 8; push esi; push dword ptr [ebx + 0x24]; call eax; 
0x0017d3c7: aad 0x5d; ljmp 0x5e5b:0x2cc483ff; pop edi; pop ebp; ret; 
0x0016b249: aad 0x62; stc; call dword ptr [eax - 0x18]; 
0x0013fd81: aad 0x72; and esp, dword ptr [esi - 0x7d]; jns 0x13fd8a; add ecx, dword ptr [edi]; test byte ptr [eax - 0x7d000000], cl; ret 0x8303; 
0x001373ca: aad 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00061fd1: aad 0x83; ret 0x101; 
0x000ab9f2: aad 0x83; ret 0x3801; 
0x001368e5: aad 0x83; ret 0x8901; 
0x0015c742: aad 0x83; ret 0xeb18; 
0x000fd084: aad 0x89; fnstcw word ptr [ecx]; ret; 
0x0009a3a2: aad 0x89; ret 0xe083; 
0x0005a5fe: aad 0x89; ret 0xe889; 
0x001b2609: aad 0x89; ret; 
0x00164927: aad 0x93; std; jmp dword ptr [esi - 0x70]; 
0x00078e97: aad 0xb1; sti; dec dword ptr [ebp - 0x692b37a]; call dword ptr [eax - 0x73]; 
0x000a6e40: aad 0xf7; call ptr [ebx + 0x5e]; pop edi; ret; 
0x000bd5a1: aad 0xf9; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0017322e: aad 0xfa; jmp dword ptr [ebp - 0x75]; 
0x00051742: aad 1; ret 0xd889; 
0x001146fe: aam 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000d96c8: aam 0; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x0018b0a8: aam 0x31; out dx, eax; jmp dword ptr [ecx]; 
0x00041ce2: aam 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x000d438e: aam 0x31; ror byte ptr [ecx - 0x7c0ffe35], cl; ret 0x8d01; 
0x000a078a: aam 0x3b; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x000a6045: aam 0x43; stc; call dword ptr [eax - 0x18]; 
0x00085e41: aam 0x48; stc; call dword ptr [eax - 0x18]; 
0x00083fff: aam 0x52; push ebx; push esi; call eax; 
0x000e9ac5: aam 0x56; call eax; 
0x000699f4: aam 0x7d; stc; call dword ptr [eax - 0x73]; 
0x000304a6: aam 0x80; sti; add cl, byte ptr [edi]; xchg esi, eax; ret; 
0x000af552: aam 0x83; ret 0x3901; 
0x0015df9b: aam 0x83; ret 0x8014; 
0x000aeb13: aam 0x83; ret 0xf01; 
0x0005cb6b: aam 0x83; ret; 
0x000958c5: aam 0x85; stc; call dword ptr [eax - 0x18]; 
0x000966cb: aam 0x85; stc; call dword ptr [eax - 0x18]; wait; fyl2xp1; jmp dword ptr [esi - 0x70]; 
0x000fe855: aam 0x89; jl 0xfe87d; or al, 0xe9; ret 0xfffb; 
0x00027907: aam 0x89; ret; 
0x00027555: aam 0x8d; xchg byte ptr [eax + esi*2], al; stc; call dword ptr [eax - 0x73]; 
0x00137b07: aam 0xe8; adc esi, dword ptr [ebx - 0x3b7c0008]; adc byte ptr [ebx - 0x3f7c2bb3], cl; sbb al, 0x89; out 0x89, al; ret; 
0x000c5c6b: aam 0xf5; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000c4d4d: aam 0xf6; push esi; inc ecx; jnp 0xc4d58; cmove eax, edx; ret; 
0x000d9b0b: aam 0xf; lahf; ret; 
0x000d33de: aam 0xf; mov dword ptr [ecx], ecx; add dword ptr [eax], eax; add byte ptr [ebx - 0x1f3e4fab], cl; add ch, byte ptr [ecx]; ret 0x28b; 
0x00160833: aam 0xfd; jmp dword ptr [esi - 0x70]; 
0x001749d3: aam 0xff; inc dword ptr [ebx - 0x2776eb3c]; pop ebx; pop esi; ret; 
0x000c3138: aam 1; add byte ptr [eax], al; ret; 
0x000d3143: aam 1; ret 0x1689; 
0x000d2f09: aam 1; ret 0x5389; 
0x0011e048: aam 4; stc; dec dword ptr [edi]; inc ebp; ret 0x4489; 
0x0017322d: aas; aad 0xfa; jmp dword ptr [ebp - 0x75]; 
0x00197884: aas; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00114ab1: aas; add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x0010b965: aas; add byte ptr [eax], al; cmp eax, 1; jg 0x10b9a8; call dword ptr [esi]; 
0x00090900: aas; add byte ptr [eax], al; ja 0x90910; ret; 
0x001aa592: aas; add byte ptr [eax], al; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x0010b9ae: aas; add byte ptr [eax], al; push eax; call 0x8f2d0; call dword ptr [esi]; 
0x0008664d: aas; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x000cd5bd: aas; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000baa63: aas; and al, 0x11; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b9283: aas; cmp dl, byte ptr [ecx]; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b9403: aas; cmp dword ptr [ecx], edx; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000df1d0: aas; hlt; call ptr [eax - 1]; je 0xdf1fb; and al, 0xe8; ret; 
0x001971f3: aas; inc esi; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001aa532: aas; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x000fa8c2: aas; jne 0xfa8d9; mov eax, 1; ret; 
0x0009f4f0: aas; mov ebx, dword ptr [esp + 0x90]; mov eax, 0x119; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000bacdd: aas; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00195c73: aas; pop ecx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001479e6: aas; pop edx; stc; call dword ptr [eax + 0x51]; 
0x00182bd7: aas; ret 0xb; 
0x00086f65: aas; ret 0xfff9; 
0x001a40fd: aas; sbb al, byte ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000fdbe3: aas; stc; call dword ptr [eax + 0x55]; 
0x0012be25: aas; stc; call dword ptr [eax + 0x6a]; 
0x00106e38: aas; stc; call dword ptr [eax - 0x17]; 
0x00035710: aas; stc; call dword ptr [eax - 0x18]; 
0x00092b2f: aas; stc; call dword ptr [eax - 0x73]; 
0x000886a2: aas; stc; call dword ptr [eax - 0x75]; 
0x0008d93c: aas; stc; call dword ptr [ecx + 0x52]; 
0x00092ba9: aas; stc; call dword ptr [edx + 0x50]; 
0x0008df97: aas; stc; dec dword ptr [ebp + 0xb6]; add byte ptr [edx - 0x77], dl; ret; 
0x000275bf: aas; sub ecx, edi; call dword ptr [eax - 0x18]; 
0x000a0789: adc ah, 0x3b; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x000c3137: adc ah, 1; add byte ptr [eax], al; ret; 
0x000ac3c7: adc ah, bh; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x001a64f2: adc ah, byte ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6273; 
0x000a62cb: adc al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + ebx*4 - 7], edx; call dword ptr [eax - 0x18]; 
0x000a62ee: adc al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ebx; cwde; stc; call dword ptr [eax - 0x18]; 
0x0010b01d: adc al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x000a1591: adc al, 0; add byte ptr [eax], al; add byte ptr [ecx + 0x5a89405e], cl; or al, 0x89; ret 0xca83; 
0x0005184b: adc al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000f0a71: adc al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f0a71: adc al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; ret; 
0x0010c217: adc al, 0; add byte ptr [eax], al; jne 0x10c269; add esp, 0x28; pop ebx; ret; 
0x0010c2ba: adc al, 0; add byte ptr [eax], al; jne 0x10c309; add esp, 0x28; pop ebx; ret; 
0x0010c527: adc al, 0; add byte ptr [eax], al; jne 0x10c579; add esp, 0x28; pop ebx; ret; 
0x0010e4a3: adc al, 0; add byte ptr [eax], al; jne 0x10e553; add esp, 0x68; pop ebx; ret; 
0x00113548: adc al, 0; add byte ptr [eax], al; jne 0x113566; add esp, 0x78; pop ebx; ret; 
0x0011f05e: adc al, 0; add byte ptr [eax], al; jne 0x11f06b; movzx eax, al; add esp, 0x4c; ret; 
0x001215d2: adc al, 0; add byte ptr [eax], al; jne 0x1215dd; add esp, 0x38; pop ebx; ret; 
0x00121652: adc al, 0; add byte ptr [eax], al; jne 0x12165d; add esp, 0x38; pop ebx; ret; 
0x00122ca6: adc al, 0; add byte ptr [eax], al; jne 0x122cb7; add esp, 0x1c; ret; 
0x001243f1: adc al, 0; add byte ptr [eax], al; jne 0x1243ff; add esp, 0x418; pop ebx; ret; 
0x00124f67: adc al, 0; add byte ptr [eax], al; jne 0x124f72; add esp, 0x38; pop ebx; ret; 
0x00125396: adc al, 0; add byte ptr [eax], al; jne 0x1253a0; add esp, 0x1c; ret; 
0x00125e2d: adc al, 0; add byte ptr [eax], al; jne 0x125e4f; add esp, 0x1018; pop ebx; ret; 
0x00126b19: adc al, 0; add byte ptr [eax], al; jne 0x126b23; add esp, 0x1c; ret; 
0x0012b69a: adc al, 0; add byte ptr [eax], al; jne 0x12b6e9; add esp, 0x28; pop ebx; ret; 
0x0012b73a: adc al, 0; add byte ptr [eax], al; jne 0x12b789; add esp, 0x28; pop ebx; ret; 
0x0012d1e5: adc al, 0; add byte ptr [eax], al; jne 0x12d1ef; add esp, 0x3c; ret; 
0x0012d67c: adc al, 0; add byte ptr [eax], al; jne 0x12d686; add esp, 0x1c; ret; 
0x001313e0: adc al, 0; add byte ptr [eax], al; jne 0x131409; add esp, 0x28; pop ebx; ret; 
0x00131505: adc al, 0; add byte ptr [eax], al; jne 0x131529; add esp, 0x18; pop ebx; ret; 
0x00131585: adc al, 0; add byte ptr [eax], al; jne 0x1315a9; add esp, 0x18; pop ebx; ret; 
0x00131870: adc al, 0; add byte ptr [eax], al; jne 0x131899; add esp, 0x18; pop ebx; ret; 
0x00132580: adc al, 0; add byte ptr [eax], al; jne 0x1325a9; add esp, 0x18; pop ebx; ret; 
0x00132697: adc al, 0; add byte ptr [eax], al; jne 0x1326a1; add esp, 0x1c; ret; 
0x00132705: adc al, 0; add byte ptr [eax], al; jne 0x132729; add esp, 0x18; pop ebx; ret; 
0x00132790: adc al, 0; add byte ptr [eax], al; jne 0x1327b9; add esp, 0x28; pop ebx; ret; 
0x00132898: adc al, 0; add byte ptr [eax], al; jne 0x1328a2; add esp, 0x7c; ret; 
0x0013d585: adc al, 0; add byte ptr [eax], al; jne 0x13d595; add esp, 0x2c; ret; 
0x0013e7c5: adc al, 0; add byte ptr [eax], al; jne 0x13e7d5; add esp, 0x2c; ret; 
0x00148ce2: adc al, 0; add byte ptr [eax], al; jne 0x148cf4; add esp, 0x18; pop ebx; ret; 
0x00148d2a: adc al, 0; add byte ptr [eax], al; jne 0x148d34; add esp, 0x1c; ret; 
0x00148d79: adc al, 0; add byte ptr [eax], al; jne 0x148d83; add esp, 0x1c; ret; 
0x0014ac5e: adc al, 0; add byte ptr [eax], al; jne 0x14aca4; add esp, 0x118; pop ebx; ret; 
0x0014acfe: adc al, 0; add byte ptr [eax], al; jne 0x14ad60; add esp, 0x118; pop ebx; ret; 
0x0014adbe: adc al, 0; add byte ptr [eax], al; jne 0x14ae0b; add esp, 0x118; pop ebx; ret; 
0x0014ae5e: adc al, 0; add byte ptr [eax], al; jne 0x14ae8d; add esp, 0x11c; ret; 
0x0014b383: adc al, 0; add byte ptr [eax], al; jne 0x14b3cc; add esp, 0x1c; ret; 
0x0014ef56: adc al, 0; add byte ptr [eax], al; jne 0x14ef63; movzx eax, ax; add esp, 0x2c; ret; 
0x00153646: adc al, 0; add byte ptr [eax], al; jne 0x153651; add esp, 0x28; pop ebx; ret; 
0x001570b4: adc al, 0; add byte ptr [eax], al; jne 0x1570be; add esp, 0x1c; ret; 
0x0016f42b: adc al, 0; add byte ptr [eax], al; jne 0x16f436; add esp, 0x28; pop ebx; ret; 
0x001752d9: adc al, 0; add byte ptr [eax], al; jne 0x175356; add esp, 0x18; pop ebx; ret; 
0x00178492: adc al, 0; add byte ptr [eax], al; jne 0x1784a7; add esp, 0x1c; ret; 
0x001785be: adc al, 0; add byte ptr [eax], al; jne 0x1785d7; add esp, 0x28; pop ebx; ret; 
0x0017865e: adc al, 0; add byte ptr [eax], al; jne 0x178677; add esp, 0x28; pop ebx; ret; 
0x001789a2: adc al, 0; add byte ptr [eax], al; jne 0x1789b7; add esp, 0x1c; ret; 
0x00178a25: adc al, 0; add byte ptr [eax], al; jne 0x178a37; add esp, 0x18; pop ebx; ret; 
0x001798c8: adc al, 0; add byte ptr [eax], al; jne 0x1798d2; add esp, 0x4c; ret; 
0x00179938: adc al, 0; add byte ptr [eax], al; jne 0x179942; add esp, 0x4c; ret; 
0x001799a8: adc al, 0; add byte ptr [eax], al; jne 0x1799b2; add esp, 0x4c; ret; 
0x00179a18: adc al, 0; add byte ptr [eax], al; jne 0x179a22; add esp, 0x4c; ret; 
0x00179a7b: adc al, 0; add byte ptr [eax], al; jne 0x179a85; add esp, 0x4c; ret; 
0x00179adb: adc al, 0; add byte ptr [eax], al; jne 0x179ae5; add esp, 0x4c; ret; 
0x00179b48: adc al, 0; add byte ptr [eax], al; jne 0x179b52; add esp, 0x4c; ret; 
0x00179bc8: adc al, 0; add byte ptr [eax], al; jne 0x179bd2; add esp, 0x4c; ret; 
0x0017a0b9: adc al, 0; add byte ptr [eax], al; jne 0x17a0c3; add esp, 0x1c; ret; 
0x0017a108: adc al, 0; add byte ptr [eax], al; jne 0x17a13c; add esp, 0x1c; ret; 
0x0017b8a2: adc al, 0; add byte ptr [eax], al; jne 0x17b8ac; add esp, 0x2c; ret; 
0x0017b954: adc al, 0; add byte ptr [eax], al; jne 0x17b9b9; add esp, 0x18; pop ebx; ret; 
0x0017ba44: adc al, 0; add byte ptr [eax], al; jne 0x17baa9; add esp, 0x18; pop ebx; ret; 
0x0017bd1b: adc al, 0; add byte ptr [eax], al; jne 0x17bd5c; add esp, 0x18; pop ebx; ret; 
0x0017bdbb: adc al, 0; add byte ptr [eax], al; jne 0x17bdfc; add esp, 0x18; pop ebx; ret; 
0x0017be79: adc al, 0; add byte ptr [eax], al; jne 0x17be9b; add esp, 0x18; pop ebx; ret; 
0x0017befd: adc al, 0; add byte ptr [eax], al; jne 0x17bf37; add esp, 0x18; pop ebx; ret; 
0x0017bf91: adc al, 0; add byte ptr [eax], al; jne 0x17bfd4; add esp, 0x18; pop ebx; ret; 
0x0017c7cb: adc al, 0; add byte ptr [eax], al; jne 0x17c80c; add esp, 0x18; pop ebx; ret; 
0x0017c86b: adc al, 0; add byte ptr [eax], al; jne 0x17c8ac; add esp, 0x18; pop ebx; ret; 
0x0017c90b: adc al, 0; add byte ptr [eax], al; jne 0x17c94c; add esp, 0x18; pop ebx; ret; 
0x0017c9ab: adc al, 0; add byte ptr [eax], al; jne 0x17c9ec; add esp, 0x18; pop ebx; ret; 
0x0017d0a2: adc al, 0; add byte ptr [eax], al; jne 0x17d0af; movzx eax, al; add esp, 0x1c; ret; 
0x0017d102: adc al, 0; add byte ptr [eax], al; jne 0x17d10f; movzx eax, al; add esp, 0x1c; ret; 
0x0017d16c: adc al, 0; add byte ptr [eax], al; jne 0x17d177; add esp, 0x18; pop ebx; ret; 
0x0017d21c: adc al, 0; add byte ptr [eax], al; jne 0x17d227; add esp, 0x18; pop ebx; ret; 
0x001824d7: adc al, 0; add byte ptr [eax], al; jne 0x182514; add esp, 0x18; pop ebx; ret; 
0x001840b1: adc al, 0; add byte ptr [eax], al; jne 0x1840c9; add esp, 0x18; pop ebx; ret; 
0x0018412b: adc al, 0; add byte ptr [eax], al; jne 0x184149; add esp, 0x18; pop ebx; ret; 
0x00186f2d: adc al, 0; add byte ptr [eax], al; jne 0x186f38; add esp, 0x28; pop ebx; ret; 
0x00189831: adc al, 0; add byte ptr [eax], al; jne 0x18983c; add esp, 0x18; pop ebx; ret; 
0x0018c6c9: adc al, 0; add byte ptr [eax], al; jne 0x18c6d3; add esp, 0x1c; ret; 
0x001927d4: adc al, 0; add byte ptr [eax], al; jne 0x1927f7; add esp, 0x18; pop ebx; ret; 
0x00192b4b: adc al, 0; add byte ptr [eax], al; jne 0x192b55; add esp, 0x2c; ret; 
0x0002553d: adc al, 0; add byte ptr [eax], al; jne 0x25547; add esp, 0x1c; ret; 
0x0003ad79: adc al, 0; add byte ptr [eax], al; jne 0x3ad87; mov eax, edx; add esp, 0x1c; ret 4; 
0x0003c2e8: adc al, 0; add byte ptr [eax], al; jne 0x3c2f3; add esp, 0x18; pop ebx; ret; 
0x0003cd9b: adc al, 0; add byte ptr [eax], al; jne 0x3cdb7; add esp, 0x98; pop ebx; ret; 
0x0003cf40: adc al, 0; add byte ptr [eax], al; jne 0x3cf7c; add esp, 0x28; pop ebx; ret; 
0x0003d353: adc al, 0; add byte ptr [eax], al; jne 0x3d361; add esp, 0x128; pop ebx; ret; 
0x0003d953: adc al, 0; add byte ptr [eax], al; jne 0x3d96f; add esp, 0x98; pop ebx; ret; 
0x0003d9d3: adc al, 0; add byte ptr [eax], al; jne 0x3d9ef; add esp, 0x98; pop ebx; ret; 
0x0003da5c: adc al, 0; add byte ptr [eax], al; jne 0x3da69; add esp, 0x9c; ret; 
0x0003df2a: adc al, 0; add byte ptr [eax], al; jne 0x3df34; add esp, 0x1c; ret; 
0x0003efec: adc al, 0; add byte ptr [eax], al; jne 0x3eff6; add esp, 0x1c; ret; 
0x0003f0ff: adc al, 0; add byte ptr [eax], al; jne 0x3f109; add esp, 0x1c; ret; 
0x000405ef: adc al, 0; add byte ptr [eax], al; jne 0x405f9; add esp, 0x1c; ret; 
0x0004081c: adc al, 0; add byte ptr [eax], al; jne 0x40826; add esp, 0x1c; ret; 
0x000409da: adc al, 0; add byte ptr [eax], al; jne 0x409e4; add esp, 0x2c; ret; 
0x00040aec: adc al, 0; add byte ptr [eax], al; jne 0x40af6; add esp, 0x1c; ret; 
0x00040b6f: adc al, 0; add byte ptr [eax], al; jne 0x40b79; add esp, 0x1c; ret; 
0x00041b6d: adc al, 0; add byte ptr [eax], al; jne 0x41bac; add esp, 0x18; pop ebx; ret; 
0x0005349a: adc al, 0; add byte ptr [eax], al; jne 0x534a4; add esp, 0x2c; ret; 
0x0005ada8: adc al, 0; add byte ptr [eax], al; jne 0x5adbf; add esp, 0x1c; ret; 
0x0005f675: adc al, 0; add byte ptr [eax], al; jne 0x5f68e; add esp, 0x78; pop ebx; ret; 
0x000615bc: adc al, 0; add byte ptr [eax], al; jne 0x615ca; add esp, 0x1018; pop ebx; ret; 
0x00061643: adc al, 0; add byte ptr [eax], al; jne 0x6164e; add esp, 0x78; pop ebx; ret; 
0x00087512: adc al, 0; add byte ptr [eax], al; jne 0x8752c; add esp, 0x28; pop ebx; ret; 
0x0009276d: adc al, 0; add byte ptr [eax], al; jne 0x92777; add esp, 0x2c; ret; 
0x00097259: adc al, 0; add byte ptr [eax], al; jne 0x97264; add esp, 0x28; pop ebx; ret; 
0x000972e9: adc al, 0; add byte ptr [eax], al; jne 0x972f3; add esp, 0x2c; ret; 
0x0009859d: adc al, 0; add byte ptr [eax], al; jne 0x985a7; add esp, 0x2c; ret; 
0x00098a0d: adc al, 0; add byte ptr [eax], al; jne 0x98a17; add esp, 0x2c; ret; 
0x00098f29: adc al, 0; add byte ptr [eax], al; jne 0x98f33; add esp, 0x2c; ret; 
0x00099379: adc al, 0; add byte ptr [eax], al; jne 0x99383; add esp, 0x2c; ret; 
0x0009c246: adc al, 0; add byte ptr [eax], al; jne 0x9c297; add esp, 0x38; pop ebx; ret; 
0x0009c4d4: adc al, 0; add byte ptr [eax], al; jne 0x9c4f7; add esp, 0x2c; ret; 
0x0009c740: adc al, 0; add byte ptr [eax], al; jne 0x9c767; add esp, 0x2c; ret; 
0x0009c9a0: adc al, 0; add byte ptr [eax], al; jne 0x9c9c7; add esp, 0x18; pop ebx; ret; 
0x0009e756: adc al, 0; add byte ptr [eax], al; jne 0x9e761; add esp, 0x28; pop ebx; ret; 
0x0009fdce: adc al, 0; add byte ptr [eax], al; jne 0x9fdd9; add esp, 0x28; pop ebx; ret; 
0x000a038e: adc al, 0; add byte ptr [eax], al; jne 0xa0399; add esp, 0x38; pop ebx; ret; 
0x000c5e0d: adc al, 0; add byte ptr [eax], al; jne 0xc5e3c; add esp, 0x18; pop ebx; ret; 
0x000da68a: adc al, 0; add byte ptr [eax], al; jne 0xda69f; add esp, 0x28; pop ebx; ret; 
0x000da70e: adc al, 0; add byte ptr [eax], al; jne 0xda718; add esp, 0x1c; ret; 
0x000da758: adc al, 0; add byte ptr [eax], al; jne 0xda763; add esp, 0x38; pop ebx; ret; 
0x000da7ba: adc al, 0; add byte ptr [eax], al; jne 0xda7c5; add esp, 0x48; pop ebx; ret; 
0x000dba5e: adc al, 0; add byte ptr [eax], al; jne 0xdba69; add esp, 0x28; pop ebx; ret; 
0x000dbcd3: adc al, 0; add byte ptr [eax], al; jne 0xdbd19; add esp, 0x28; pop ebx; ret; 
0x000dc057: adc al, 0; add byte ptr [eax], al; jne 0xdc078; add esp, 0x38; pop ebx; ret; 
0x000e4f72: adc al, 0; add byte ptr [eax], al; jne 0xe4f7c; add esp, 0x1c; ret; 
0x000e7432: adc al, 0; add byte ptr [eax], al; jne 0xe743c; add esp, 0x1c; ret; 
0x000e75a6: adc al, 0; add byte ptr [eax], al; jne 0xe75e2; add esp, 0x28; pop ebx; ret; 
0x000e77c4: adc al, 0; add byte ptr [eax], al; jne 0xe77cf; add esp, 0x28; pop ebx; ret; 
0x000e866a: adc al, 0; add byte ptr [eax], al; jne 0xe8678; add esp, 0xe8; pop ebx; ret; 
0x000e86dc: adc al, 0; add byte ptr [eax], al; jne 0xe86ea; add esp, 0xe8; pop ebx; ret; 
0x000e8780: adc al, 0; add byte ptr [eax], al; jne 0xe878e; add esp, 0xe8; pop ebx; ret; 
0x000efa3f: adc al, 0; add byte ptr [eax], al; jne 0xefa57; add esp, 0x1c; ret; 
0x000f0d78: adc al, 0; add byte ptr [eax], al; jne 0xf0d96; add esp, 0x78; pop ebx; ret; 
0x000f38b8: adc al, 0; add byte ptr [eax], al; jne 0xf38d6; add esp, 0x78; pop ebx; ret; 
0x000f46b8: adc al, 0; add byte ptr [eax], al; jne 0xf46d6; add esp, 0x78; pop ebx; ret; 
0x000f71e8: adc al, 0; add byte ptr [eax], al; jne 0xf7206; add esp, 0x78; pop ebx; ret; 
0x000f7ff8: adc al, 0; add byte ptr [eax], al; jne 0xf8016; add esp, 0x78; pop ebx; ret; 
0x00125dfb: adc al, 0; add byte ptr [eax], al; mov dword ptr [esp + 0x100c], ebx; xor ebx, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000e8c62: adc al, 0; add byte ptr [eax], al; mov dword ptr [esp + 0x13c], ecx; mov ecx, dword ptr [esp + 0x164]; call dword ptr gs:[0x10]; 
0x00053302: adc al, 0; add byte ptr [eax], al; mov dword ptr [esp + 0x14], esi; mov esi, dword ptr [esp + 0x28]; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x00115b68: adc al, 0; add byte ptr [eax], al; mov dword ptr [esp + 0x18c], ebp; mov ebp, dword ptr [esp + 0x1b8]; call dword ptr gs:[0x10]; 
0x000f1cdb: adc al, 0; add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ebx - 0x46f63]; dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x00057e84: adc al, 0; add byte ptr [ebx - 0x361f43], cl; dec dword ptr [ecx + 0x4c891f0c]; pop ds; add al, 0x83; ret; 
0x0004e9ca: adc al, 0; add byte ptr [ecx - 0x7209ce16], cl; dec ebx; rol byte ptr [eax - 0x79f0f607], 1; ret; 
0x00177f0c: adc al, 0; add byte ptr [ecx - 0x7e7c723b], cl; stc; call dword ptr [ecx + 0x6a]; 
0x0003d4c7: adc al, 0; add eax, 0x20194b; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x0003d4a7: adc al, 0; add eax, 0x20196b; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x000fb59d: adc al, 0; mov ecx, dword ptr [esp + 4]; mov eax, 1; test ecx, ecx; js 0xfb5b0; ret; 
0x00172bcb: adc al, 0x11; mov byte ptr [eax - 1], dl; cmp eax, ebx; jne 0x172bc0; pop ebx; ret; 
0x00169487: adc al, 0x18; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x000348f6: adc al, 0x18; pop ebx; pop esi; ret; 
0x00086ccd: adc al, 0x19; ret 0xc889; 
0x000551dd: adc al, 0x24; mov dword ptr [esp + 4], eax; fld xword ptr [esp]; add esp, 0x1c; ret; 
0x00189c22: adc al, 0x24; ret; 
0x0016ef71: adc al, 0x24; sub esp, 8; lea ebp, [esp + 0x40]; push ebp; push eax; call dword ptr [ecx + 8]; 
0x0016ef8d: adc al, 0x24; sub esp, 8; mov ecx, dword ptr [eax + 0x20]; push ebp; push eax; call dword ptr [ecx + 8]; 
0x001366dc: adc al, 0x29; ret 0x478b; 
0x00132814: adc al, 0x29; ret 0xca39; 
0x00096cd1: adc al, 0x29; ret; 
0x00085197: adc al, 0x29; ror byte ptr [ecx + 0x8c48301], 1; xor eax, eax; pop ebx; ret; 
0x00031d25: adc al, 0x2c; stc; call dword ptr [eax - 0x18]; 
0x00136ed9: adc al, 0x31; rol byte ptr [ebp - 0x3db7f040], cl; add esp, 8; pop ebx; ret; 
0x00187cee: adc al, 0x39; fimul word ptr [edi]; xchg edx, eax; ret; 
0x0009d6c9: adc al, 0x39; or bh, byte ptr [edx + esi*8 - 0x46]; add byte ptr [eax], al; add byte ptr [eax], al; cmovne eax, edx; ret; 
0x0008f9d3: adc al, 0x39; ret 0x1074; 
0x00031a7d: adc al, 0x39; ret 0x4d0f; 
0x00173b94: adc al, 0x39; ret 0x4e0f; 
0x00052b6d: adc al, 0x39; ret 0x4e74; 
0x000715df: adc al, 0x39; ret 0x840f; 
0x000528b3: adc al, 0x39; ret; 
0x0016bd88: adc al, 0x39; ror byte ptr [edi], 1; dec esp; ret 0xec83; 
0x0009f4af: adc al, 0x3b; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0011b242: adc al, 0x50; mov eax, dword ptr [esi + 0x20]; push dword ptr [eax + ecx]; push edx; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x0011b836: adc al, 0x50; push 1; push dword ptr [esp + 0x30]; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x0011bbdb: adc al, 0x50; push 2; push dword ptr [esp + 0x30]; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x0011bab2: adc al, 0x50; push 5; push dword ptr [esp + 0x30]; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x0005f7d4: adc al, 0x50; push edi; push ebx; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0016eace: adc al, 0x50; push edx; call dword ptr [ecx + 0xc]; 
0x0016eace: adc al, 0x50; push edx; call dword ptr [ecx + 0xc]; add esp, 0x10; add esp, 0xc; ret; 
0x000f0d8e: adc al, 0x52; push eax; call dword ptr [ecx + 0x20]; 
0x0016fb4c: adc al, 0x52; push ebx; call dword ptr [eax + 0x14]; 
0x0016f732: adc al, 0x53; call dword ptr [eax + 0x10]; 
0x00179c69: adc al, 0x53; call dword ptr [eax]; 
0x00154f64: adc al, 0x55; call edi; 
0x0016ee19: adc al, 0x56; call dword ptr [eax + 4]; 
0x0008e4e4: adc al, 0x56; push edx; push dword ptr [esp + 0x24]; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x000fd888: adc al, 0x59; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000a6a8e: adc al, 0x59; stc; call dword ptr [eax + 0x6a]; 
0x000a0963: adc al, 0x59; stc; call dword ptr [eax - 0x18]; 
0x00134582: adc al, 0x5b; pop edi; ret; 
0x000afe1d: adc al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x0004073a: adc al, 0x5b; pop esi; pop edi; ret; 
0x0002fe48: adc al, 0x5b; pop esi; ret; 
0x000811d0: adc al, 0x5e; pop edi; jmp eax; 
0x000b9b63: adc al, 0x5f; pop esi; pop ebx; ret; 
0x00161812: adc al, 0x60; stc; call dword ptr [eax - 0x18]; 
0x001619c5: adc al, 0x60; stc; call dword ptr [eax - 0x73]; 
0x0005e058: adc al, 0x60; std; dec dword ptr [ebx - 0x8b63]; dec dword ptr [ebp - 0x684677d]; call dword ptr [eax - 0x73]; 
0x0010c346: adc al, 0x6a; add byte ptr [edx], ch; call 0x10c310; add esp, 0x1c; ret; 
0x00184040: adc al, 0x6a; add cl, byte ptr [ebp - 0x6993b80]; call dword ptr [eax - 0x18]; 
0x000a666f: adc al, 0x6a; add dword ptr [ebx - 0x72cbdba4], ecx; sbb dword ptr [esi], 0x44; stc; call dword ptr [eax - 0x18]; 
0x00171537: adc al, 0x72; ret 0x4889; 
0x00185207: adc al, 0x73; out 0xb8, al; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; ret; 
0x00188747: adc al, 0x75; push es; pop ebx; ret; 
0x0009a562: adc al, 0x81; les ebp, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x00158754: adc al, 0x81; les ecx, ptr [esp + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00189c62: adc al, 0x81; setne al; movzx eax, al; ret; 
0x000907eb: adc al, 0x83; clc; add dword ptr [edx + 0x16], edi; mov eax, 0x5f; cmovne eax, edx; ret; 
0x000417ea: adc al, 0x83; in al, dx; add al, 0xf; scasd eax, dword ptr es:[edi]; ret; 
0x000df7a1: adc al, 0x83; jle 0xdf7b5; add dword ptr [ebp + 0x76c98], ecx; add byte ptr [edi], cl; sahf; ret 0xd329; 
0x001704a5: adc al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x00087517: adc al, 0x83; les ebp, ptr [eax]; pop ebx; ret; 
0x001172e8: adc al, 0x83; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0002c997: adc al, 0x83; les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x0008d5bc: adc al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000868d7: adc al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x00059ffa: adc al, 0x83; les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0017235a: adc al, 0x83; les esi, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x000a97e5: adc al, 0x83; ret 0x8301; 
0x00071394: adc al, 0x83; ret 0x8904; 
0x000977f4: adc al, 0x83; ret; 
0x00028c08: adc al, 0x83; rol byte ptr [ecx], 0x83; ret 0x8901; 
0x0010d346: adc al, 0x85; dec dword ptr [edi]; xchg esp, eax; ret; 
0x0010d1c2: adc al, 0x85; ror byte ptr [edi], cl; xchg ebp, eax; ret; 
0x00186795: adc al, 0x85; sal byte ptr [edx + eax - 0x75], cl; add al, byte ptr [ebx]; inc ebx; add al, 0x89; ret; 
0x000803ff: adc al, 0x88; sbb dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x00079340: adc al, 0x89; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000ad11d: adc al, 0x89; call 0x5d6a2f7f; ret; 
0x0017cc60: adc al, 0x89; dec eax; add al, 0x5b; ret; 
0x000a1338: adc al, 0x89; dec ebx; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000c6dfd: adc al, 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x00131294: adc al, 0x89; fcomp dword ptr [ebx + 0x5e]; ret; 
0x001b2c4b: adc al, 0x89; fimul dword ptr [ecx - 0x7c0c7607]; ret; 
0x000e7a64: adc al, 0x89; inc esp; and al, 0x18; mov eax, 0x108; mov dword ptr [esp + 0x14], edi; call dword ptr gs:[0x10]; 
0x0017c0d7: adc al, 0x89; je 0x17c0ff; adc byte ptr [ebx - 0x75], bl; inc eax; or byte ptr [esi + 0x5f], bl; jmp eax; 
0x0003c3ff: adc al, 0x89; push 0xc; mov dword ptr [edx + 0x18], eax; ret; 
0x000f04e8: adc al, 0x89; push ebx; adc al, 0x8d; or byte ptr [ebp + 0x30], 0xf9; call dword ptr [eax - 0x77]; 
0x0008d75c: adc al, 0x89; push esp; and al, 0x10; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x00059f0e: adc al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret 4; 
0x001237dd: adc al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000ec4d3: adc al, 0x89; ret 0x2db9; 
0x0007a4d4: adc al, 0x89; ret 0x4489; 
0x000fcb74: adc al, 0x89; ret 0x478b; 
0x00146b0f: adc al, 0x89; ret 0x689; 
0x00142416: adc al, 0x89; ret 0x998b; 
0x000943a7: adc al, 0x89; ret 0xa165; 
0x00145afa: adc al, 0x89; ret 0xc085; 
0x00099e4d: adc al, 0x89; ret 0xc389; 
0x00151986: adc al, 0x89; ret 0xc985; 
0x0018bd17: adc al, 0x89; ret 0xca29; 
0x00099dfb: adc al, 0x89; ret 0xca83; 
0x00099db7: adc al, 0x89; ret 0xe283; 
0x00099f5a: adc al, 0x89; ret 0xfbd1; 
0x0002b222: adc al, 0x89; ret; 
0x0009e21d: adc al, 0x89; stc; call dword ptr [eax - 0x18]; 
0x001486c4: adc al, 0x89; test dword ptr [ebx + edi*8 + 0x458bffff], esi; sbb al, 0x89; test dword ptr [ebx + edi*8 + 0x458bffff], edi; and byte ptr [ecx - 0x4477b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000890f8: adc al, 0x8b; adc esi, esi; ret 0xf08; 
0x001208a9: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x00130aa9: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x1a8; call dword ptr gs:[0x10]; 
0x00130b89: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x00126a69: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x00128429: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x001248f9: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x001306e9: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x001512bf: adc al, 0x8b; dec esp; ret 0x3904; 
0x001704a2: adc al, 0x8b; inc ebx; adc al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x00097d3b: adc al, 0x8b; inc ebx; or al, 0x89; ret 0xe281; 
0x00024d90: adc al, 0x8b; inc esp; and al, 0x14; call eax; 
0x0013276d: adc al, 0x8b; inc esp; and al, 0x3c; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001322b6: adc al, 0x8b; inc esp; and al, 0x44; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000c0cb6: adc al, 0x8b; inc esp; and al, 0xc; pop ebx; pop esi; ret; 
0x000bd830: adc al, 0x8b; inc esp; and al, 8; pop esi; ret; 
0x0010dafe: adc al, 0x8b; je 0x10db26; and byte ptr [ebx - 0x72e7dbac], cl; test al, 0xac; ret 0xffea; 
0x0014f30c: adc al, 0x8b; jl 0x14f334; adc byte ptr [esi - 0x3f], ah; ret 0x908; 
0x0015a312: adc al, 0x8b; or cl, ch; ret 0xfffe; 
0x00190451: adc al, 0x8b; pop esp; and al, 0x10; call dword ptr gs:[0x10]; 
0x0012ad82: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x001220eb: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00115152: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0011f122: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x00130c82: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x00130902: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x00130982: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x1ad; call dword ptr gs:[0x10]; 
0x00130722: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x1af; call dword ptr gs:[0x10]; 
0x00130ae2: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x1b8; call dword ptr gs:[0x10]; 
0x00130942: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x1ba; call dword ptr gs:[0x10]; 
0x00130812: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x00130b52: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0012f552: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0xac; call dword ptr gs:[0x10]; 
0x0012b7a2: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x00128602: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x00124992: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x0012fb5f: adc al, 0x8b; pop esp; and al, 0x10; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0012206b: adc al, 0x8b; pop esp; and al, 0x10; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0009f80d: adc al, 0x8b; pop esp; and al, 0xc; call dword ptr gs:[0x10]; 
0x000892db: adc al, 0x8b; push ebx; adc byte ptr [ecx], bh; ret 0x2773; 
0x0003a32a: adc al, 0x8b; push ebx; or byte ptr [ecx - 0x50f0fbb9], cl; ret 0x7c8b; 
0x0018bbbb: adc al, 0x8b; push esi; adc byte ptr [ecx], bh; ret 0x4d72; 
0x00132ad4: adc al, 0x8b; push esp; and al, 0x18; call dword ptr gs:[0x10]; 
0x0011f701: adc al, 0x8b; push esp; and al, 0x18; mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0006131a: adc al, 0x8b; push esp; and al, 0x18; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00192982: adc al, 0x8b; push esp; and al, 0x18; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00132fc2: adc al, 0x8b; push esp; and al, 0x18; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00109c66: adc al, 0x8b; push esp; ret; 
0x0002750b: adc al, 0x8b; xor dword ptr [eax + esi*2], 0x4789fff9; sbb byte ptr [edi], cl; mov bh, 0x81; cmp byte ptr [eax - 7], dh; jmp dword ptr [esi - 0x77]; 
0x0016a250: adc al, 0x8d; adc byte ptr [ebp + 0x50fff962], 0x6a; add ch, al; push ecx; ret; 
0x0016ccf0: adc al, 0x8d; adc byte ptr [ebp + 0x63], 0xf9; call dword ptr [eax + 0x6a]; 
0x000c4973: adc al, 0x8d; add al, 0x98; pop ebx; pop esi; ret; 
0x001436e4: adc al, 0x8d; add byte ptr [ecx], 0x59; stc; call dword ptr [eax + 0x6a]; 
0x0016c670: adc al, 0x8d; add byte ptr [edi + 0x63], 0xf9; call dword ptr [eax + 0x6a]; 
0x000247cb: adc al, 0x8d; and byte ptr [eax + 0x59], 0xf9; call dword ptr [eax - 1]; 
0x001559ce: adc al, 0x8d; and byte ptr [esi], 0x46; stc; call dword ptr [eax - 0x18]; 
0x0014390f: adc al, 0x8d; cmp byte ptr [eax - 0x72000655], 0xb2; dec esp; je 0x143914; call dword ptr [eax + 0x56]; 
0x0016db20: adc al, 0x8d; cmp byte ptr [esi + 0x63], 0xf9; call dword ptr [eax + 0x6a]; 
0x0009b12c: adc al, 0x8d; inc ebp; inc dword ptr [ebx - 0x69f00208]; ret; 
0x00188586: adc al, 0x8d; inc edx; dec dword ptr [ecx - 0x762e7635]; ret 0x6c8b; 
0x000f04eb: adc al, 0x8d; or byte ptr [ebp + 0x30], 0xf9; call dword ptr [eax - 0x77]; 
0x00143894: adc al, 0x8d; or dword ptr [eax + 0x59], 0xfffffff9; dec dword ptr [ebp - 0x68bb36d]; call dword ptr [eax - 0x77]; 
0x0008004b: adc al, 0x8d; pop edx; add al, 0x89; pop eax; adc byte ptr [ecx + 0x5b0a89c8], cl; ret; 
0x00143668: adc al, 0x8d; sbb ah, 0x2c; stc; call dword ptr [eax + 0x55]; 
0x001436bd: adc al, 0x8d; sub bh, 0x58; stc; call dword ptr [eax + 0x6a]; 
0x00059e7f: adc al, 0x8d; sub byte ptr [eax + edi*8], 0xff; call dword ptr [eax + 0x6a]; 
0x00143647: adc al, 0x8d; sub byte ptr [esi + 0x59], 0xf9; call dword ptr [eax + 0x6a]; 
0x00039bea: adc al, 0x8d; test edi, eax; stc; call dword ptr [eax + 0x53]; 
0x0003fd74: adc al, 0x8d; test esp, ebx; sub al, 0xf9; dec dword ptr [ecx - 0x76d3dbbc]; ret 0xc189; 
0x000a28cd: adc al, 0x8d; xchg ah, bh; cwde; stc; call dword ptr [eax - 0x73]; 
0x000a27b8: adc al, 0x8d; xchg al, dh; cwde; stc; call dword ptr [eax - 0x73]; 
0x00143782: adc al, 0x8d; xchg byte ptr [ebx + ebp*4 - 7], ah; call dword ptr [eax - 0x73]; 
0x00047765: adc al, 0x8d; xchg dword ptr [eax + edi*2], esi; stc; call dword ptr [eax + 0x68]; 
0x000f07bb: adc al, 0x8d; xchg dword ptr [eax - 0x60], edx; stc; call dword ptr [eax - 0x73]; 
0x001439b4: adc al, 0x8d; xchg dword ptr [eax], ebx; pop ecx; stc; call dword ptr [eax - 0x73]; 
0x0015d359: adc al, 0x8d; xchg dword ptr [ebx + 0x5f], edi; stc; call dword ptr [eax + 0x55]; 
0x00143608: adc al, 0x8d; xchg dword ptr [ebx + ebp*4 - 7], eax; call dword ptr [eax - 0x73]; 
0x000f06ee: adc al, 0x8d; xchg dword ptr [esi + 0x47], esp; stc; call dword ptr [eax - 0x73]; 
0x0015a688: adc al, 0x8d; xchg eax, ebx; mov bl, 0xf9; call dword ptr [eax - 0x73]; 
0x0017616a: adc al, 0x8d; xchg ebp, eax; stc; call dword ptr [eax + 0x53]; 
0x0017f62e: adc al, 0x8d; xchg edi, edi; pop ebx; stc; call dword ptr [eax - 0x18]; 
0x0010978f: adc al, 0x8d; xchg esi, eax; inc eax; dec eax; stc; call dword ptr [edx - 1]; 
0x00143394: adc al, 0x8d; xchg esp, ebx; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x0016b310: adc al, 0x8d; xor bl, 0x62; stc; call dword ptr [eax + 0x6a]; 
0x0016d710: adc al, 0x8d; xor byte ptr [eax + 0x63], 0xf9; call dword ptr [eax + 0x6a]; 
0x0015d8ae: adc al, 0x8d; xor byte ptr [ebp + 0x5f], 0xf9; call dword ptr [eax + 0x55]; 
0x001431c1: adc al, 0x8d; xor byte ptr [esi], 0x59; stc; call dword ptr [eax + 0x6a]; 
0x0011bb20: adc al, 0x8d; xor cl, 0x49; stc; call dword ptr [eax - 0x18]; 
0x00138e85: adc al, 0xa9; stc; call dword ptr [eax - 0x73]; 
0x000fa8c4: adc al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x0010e5b4: adc al, 0xb8; jb 0x10e5b8; add byte ptr [eax], al; mov ecx, ebp; mov edx, dword ptr [esp + 0x88]; call dword ptr gs:[0x10]; 
0x0008f28c: adc al, 0xb8; lock add byte ptr [eax], al; add byte ptr [edx + 2], bh; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x000e7713: adc al, 0xb8; or al, byte ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0003ddc2: adc al, 0xb8; xor eax, 0x31000001; sal byte ptr [ecx], cl; div byte ptr [ecx]; jmp dword ptr [ebp - 1]; 
0x0012f206: adc al, 0xb; cmp edx, 0x26; je 0x12f263; pop ebx; pop esi; ret; 
0x00131305: adc al, 0xbb; adc al, byte ptr [eax]; add byte ptr [eax], al; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000c8e62: adc al, 0xc0; stc; call dword ptr [eax + 0x53]; 
0x0004a690: adc al, 0xc2; stc; jmp dword ptr [ebp - 0x75]; 
0x000ffd62: adc al, 0xe8; call 0x840ffd40; les ecx, ptr [eax]; xor eax, eax; pop ebx; ret; 
0x000df541: adc al, 0xe8; cdq; ret; 
0x00186dc6: adc al, 0xe8; hlt; ret 0xffe9; 
0x00088a23: adc al, 0xe8; ja 0x889ce; stc; jmp dword ptr [ebp - 0x75]; 
0x0014175a: adc al, 0xe8; mov ebp, 0x81000484; ret; 
0x000c5d0a: adc al, 0xe8; or eax, 0x81000c3f; ret; 
0x001a7d0a: adc al, 0xe8; or eax, 0x81fffe1f; ret; 
0x0008f743: adc al, 0xe8; push edi; cmp bh, cl; jmp dword ptr [ebp - 0x39]; 
0x001418ea: adc al, 0xe8; sub eax, 0x81000483; ret; 
0x001b47d4: adc al, 0xe9; ret 0xfffc; 
0x0016ae91: adc al, 0xeb; adc cl, byte ptr [ebp - 0x74ffd98c]; inc ebx; add al, 0x83; ret; 
0x00103f2c: adc al, 0xeb; or dword ptr [eax + 0x2cd1d201], edx; and al, 0x83; ret; 
0x00086bea: adc al, 0xeb; ret; 
0x0017f0e8: adc al, 0xec; sti; jmp dword ptr [esi - 0x70]; 
0x00143982: adc al, 0xef; call dword ptr [ebx + 0x50]; 
0x00190fc4: adc al, 0xf3; call dword ptr [edi - 1]; 
0x00121f55: adc al, 0xf6; ret 0x7540; 
0x000e0ec7: adc al, 0xf; inc edx; ret 0x4c80; 
0x0004321b: adc al, 0xf; mov ebp, 0x1ff383db; lea eax, [ebx + 0x20]; pop ebx; ret; 
0x000489b5: adc al, 0xf; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00115c1d: adc al, 0xf; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc10c; 
0x000d96c5: adc al, 0xf; test esp, edx; add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x000fb3ab: adc al, 0xf; xchg dword ptr [eax - 0x74ffffff], esi; mov esp, 0xf8f5e086; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x0009d82e: adc al, 0xf; xchg ebx, ebx; add eax, dword ptr [eax]; add al, ch; push es; ret; 
0x001737d5: adc al, 0xf; xchg edx, eax; ret 0xd689; 
0x001405ab: adc al, 0xf; xchg esp, eax; ret; 
0x000f16e1: adc al, 0xfc; add cl, ch; ret 0xfff9; 
0x0012d9f6: adc al, 0xff; je 0x12da1e; sbb byte ptr [edx], ch; call 0x12dc40; add esp, 0x1c; ret; 
0x0016b3e0: adc al, 0xff; je 0x16b408; and al, 0x89; ret; 
0x0016f289: adc al, 0xff; je 0x16f2b1; adc al, 0xff; je 0x16f2b5; je 0x16f2e3; call dword ptr [ecx]; 
0x0016f28d: adc al, 0xff; je 0x16f2b5; je 0x16f2e3; call dword ptr [ecx]; 
0x00184010: adc al, 0xff; je 0x184038; sbb byte ptr [ebp - 0x6993b80], cl; call dword ptr [eax - 0x18]; 
0x00186dc2: adc al, 0xff; je 0x186dea; adc al, 0xe8; hlt; ret 0xffe9; 
0x00024d8c: adc al, 0xff; je 0x24db4; adc al, 0x8b; inc esp; and al, 0x14; call eax; 
0x0003f0aa: adc al, 0xff; je 0x3f0d2; sbb byte ptr [eax + 0x50], dl; call 0x3f110; add esp, 0x1c; ret; 
0x000e5d1d: adc al, 0xff; je 0xe5d45; xor byte ptr [ecx], ch; ret; 
0x0007e753: adc al, 0xff; jne 0x7e763; push esi; call dword ptr [ebx + 0x2c]; 
0x000385d2: adc al, 0xff; mov bl, 0xd8; adc al, byte ptr [eax]; add al, ch; ret 0xfeab; 
0x0003486f: adc al, 1; add byte ptr [eax], al; add eax, dword ptr gs:[0]; ret; 
0x0003cb91: adc al, 1; add byte ptr [eax], al; pop ebx; pop edi; ret; 
0x000c3127: adc al, 1; add byte ptr [eax], al; ret; 
0x000abb25: adc al, 1; cmp edx, ebx; je 0xabb20; pop ebx; ret; 
0x0017ca7d: adc al, 1; fmul dword ptr [ecx - 0x2776f3be]; pop ebx; ret; 
0x000e745c: adc al, 1; je 0xe7468; add esp, 0xc; ret; 
0x000e754c: adc al, 1; je 0xe7558; add esp, 0xc; ret; 
0x000fd0a2: adc al, 1; ret 0xd089; 
0x0019be55: adc al, 1; retf 0xc801; call 0x189c1d; add ebx, 0x40091; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019ae75: adc al, 1; retf 0xc801; call 0x189c1d; add ebx, 0x40eb1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0008fa1c: adc al, 2; add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0008f921: adc al, 2; add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov edx, 1; call dword ptr gs:[0x10]; 
0x0017cdda: adc al, 4; mov eax, 1; ret; 
0x00181f52: adc al, 5; add byte ptr [eax], al; mov eax, esi; pop ebx; pop esi; ret; 
0x0014b42f: adc al, 8; pop ebx; mov eax, edx; ret; 
0x00133ed9: adc al, 9; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; call dword ptr gs:[0x10]; 
0x000514d0: adc al, 9; ret 0x874; 
0x000c08e4: adc al, bh; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0004c352: adc al, bl; mov byte ptr [eax], al; ret 0xfff9; 
0x000385d6: adc al, byte ptr [eax]; add al, ch; ret 0xfeab; 
0x000a28dd: adc al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [edi + 0x42], dl; stc; call dword ptr [eax - 0x18]; 
0x000c4dea: adc al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0011f6ca: adc al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x00131307: adc al, byte ptr [eax]; add byte ptr [eax], al; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00073e1b: adc al, byte ptr [eax]; add byte ptr [ebx - 0x5137b], cl; inc dword ptr [ebx - 0x177cf714]; add dword ptr [ecx - 0x5037b], ecx; call dword ptr [esi - 1]; 
0x00035c7e: adc al, byte ptr [eax]; add byte ptr [ecx - 0x8f7b], cl; call dword ptr [eax - 0x73]; 
0x0003c5ce: adc al, byte ptr [eax]; add byte ptr [edi], cl; xchg esp, eax; ret 0xec83; 
0x0011463d: adc al, byte ptr [eax]; push ebx; mov eax, 0x21; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001146ad: adc al, byte ptr [eax]; push ebx; mov eax, 0xf; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001132c5: adc al, byte ptr [eax]; push ebx; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00116048: adc al, byte ptr [eax]; push ebx; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0006234d: adc al, byte ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x001722b4: adc al, byte ptr [ebx + 0x5e5b4cc4]; pop edi; pop ebp; ret; 
0x00116144: adc al, byte ptr [ebx + 0x5e5b60c4]; pop edi; ret; 
0x0003dbd4: adc al, byte ptr [ecx + 0x220c4]; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000ba3ea: adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x000ba54a: adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000bff5d: adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b8daa: adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x000b8f0a: adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000ba40a: adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000ba56a: adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b8dca: adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000b8f2a: adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000ba42a: adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000ba58a: adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b8dea: adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000b8f4a: adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000ba2b9: adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000ba5aa: adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b8c99: adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000b8f6a: adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000b5c32: adc al, byte ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000b1852: adc al, byte ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000b5c72: adc al, byte ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000b1892: adc al, byte ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000b5c92: adc al, byte ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000b18b2: adc al, byte ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000b59e2: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x000b5c22: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; ret; 
0x000b780d: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 8]; pop edi; pop ebx; ret; 
0x001acda2: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000bfda3: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b341d: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; pop ebx; ret; 
0x000b1622: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000b4447: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; pop ebx; ret; 
0x000b1842: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000ba542: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000b8f02: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000ba562: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b8f22: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000ba582: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b8f42: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000ba5a2: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b8f62: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000b5cb2: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000b18d2: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000b5cd2: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000b18f2: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000b5cf2: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000b1912: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000bd6b2: adc al, byte ptr [esi]; mov byte ptr [eax + 8], dh; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0b05: adc al, byte ptr [esi]; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd6a2: adc al, byte ptr [esi]; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b99d2: adc al, byte ptr [esi]; movlpd qword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x001600da: adc al, ch; cmp eax, 0x8100029b; ret; 
0x0014bfda: adc al, ch; cmp eax, 0x810003dc; ret; 
0x00136cda: adc al, ch; cmp eax, 0x8100052f; ret; 
0x0008afda: adc al, ch; cmp eax, 0x81000fec; ret; 
0x0018b8da: adc al, ch; cmp eax, 0x81ffffe3; ret; 
0x000bb577: adc al, ch; mov ah, 0xe6; or al, 0; add ecx, 0x1119b3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9e77: adc al, ch; mov ah, 0xfd; or al, 0; add ecx, 0x112f53; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00175a5a: adc al, ch; mov ebp, 0x81000141; ret; 
0x0008fe5a: adc al, ch; mov ebp, 0x81000f9d; ret; 
0x0008435a: adc al, ch; mov ebp, 0x81001058; ret; 
0x0008115a: adc al, ch; mov ebp, 0x8100108a; ret; 
0x0018b85a: adc al, ch; mov ebp, 0x81ffffe3; ret; 
0x00088c0a: adc al, ch; or eax, 0x81001010; ret; 
0x0010acdd: adc al, ch; or eax, 0xffff845; mov dh, 0x45; sbb al, 0x89; ret 0xeac0; 
0x00186e4c: adc al, ch; push ds; ret 0xffe9; 
0x00045438: adc al, ch; ret 0x165; 
0x00137ab7: adc al, ch; ret; 
0x0017a1fa: adc al, ch; sbb eax, 0x810000fa; ret; 
0x001264fa: adc al, ch; sbb eax, 0x81000637; ret; 
0x00186cbc: adc al, ch; scasb al, byte ptr es:[edi]; ret; 
0x000e8dea: adc al, ch; sub eax, 0x81000a0e; ret; 
0x000810ea: adc al, ch; sub eax, 0x8100108b; ret; 
0x000b9ea6: adc al, ch; test ebp, edi; or al, 0; add ecx, 0x112f24; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb5a6: adc al, ch; test esi, esp; or al, 0; add ecx, 0x111984; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00152ebf: adc al, ch; wait; dec edi; hlt; jmp dword ptr [ebp - 0x75]; 
0x000c1cc5: adc al, dh; ret; 
0x00192ba7: adc bh, al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x0014ab70: adc bh, al; inc eax; or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00130e8d: adc bh, bh; inc dword ptr [ebx - 0x77cef3c]; dec dword ptr [edi]; test byte ptr [eax + eax - 0x137d0000], al; add al, 0x89; ret; 
0x00198955: adc bh, bh; inc dword ptr [ecx + 0x42ed8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014d8a4: adc bh, bh; je 0x14d8cc; sbb al, 0xf; mov bh, 0x50; add ah, byte ptr [esi - 0x3f]; ret 0xf08; 
0x0016ee15: adc bh, bh; je 0x16ee3d; adc al, 0x56; call dword ptr [eax + 4]; 
0x0016335b: adc bh, bh; xor al, 0x24; push 0x400; push dword ptr [esp + 0xc]; push ebp; call edi; 
0x0015a12b: adc bh, bh; xor al, 0x24; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x10]; call edi; 
0x0008ff19: adc bh, byte ptr [eax + 0x16]; test edx, edx; mov edx, 0; cmove eax, edx; ret; 
0x000a629c: adc bh, byte ptr [ecx]; ror byte ptr [edi], 1; inc edi; ret 0x508d; 
0x000a405c: adc bh, byte ptr [ecx]; ror byte ptr [edi], 1; inc edi; ret 0xc083; 
0x000253cd: adc bh, dh; fcomp dword ptr [ebx - 0x7d]; rol byte ptr [eax], cl; neg edx; ret; 
0x000ffbac: adc bh, dh; push eax; add al, 0x83; ror byte ptr [eax], 0x39; ret 0xf475; 
0x0010726c: adc bh, dh; ret 0x30f; 
0x0015feed: adc bl, 0x5f; stc; call dword ptr [eax - 1]; 
0x0003ba24: adc bl, bl; insb byte ptr es:[edi], dx; and al, 4; fadd st(0); mov dword ptr [eax], ecx; ret; 
0x0003bc63: adc bl, bl; insb byte ptr es:[edi], dx; and al, 4; fscale; fstp st(1); ret; 
0x0003ba19: adc bl, bl; insb byte ptr es:[edi], dx; and al, 4; mov dword ptr [eax], ecx; ret; 
0x0012937d: adc bl, byte ptr [ebx - 0x48]; add dword ptr [eax], eax; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x000bb1e2: adc bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x001a5e0d: adc bl, byte ptr [esi + 0x5d]; pop ebx; xor eax, eax; ret; 
0x0011a9fb: adc bl, ch; fild dword ptr [ebx - 0x17a9f314]; cdq; xchg eax, esi; jmp dword ptr [ebp - 0x5f]; 
0x0008ece8: adc bl, ch; fldenv [esi - 0x70]; nop; nop; endbr32; ret; 
0x0008cfec: adc bl, ch; mov al, byte ptr [0x8324838d]; stc; call dword ptr [eax - 0x73]; 
0x001782fc: adc bl, ch; mov ecx, 0xcec8390; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x0010b68c: adc bl, ch; mov es, word ptr [ebx - 0x7c72f314]; inc esi; dec eax; stc; call dword ptr [eax - 0x18]; 
0x0009a0e2: adc bl, ch; ret 0x768d; 
0x0012c2dd: adc bl, ch; ret 0x868d; 
0x0008f58f: adc bl, ch; ret 0xb68d; 
0x00144a12: adc bl, ch; ret 0xe6e8; 
0x000254c5: adc bl, ch; ret; 
0x0015614b: adc bl, ch; ror byte ptr [ebp - 0x64d2f70], 1; call dword ptr [edx - 0x73]; 
0x000a6d8d: adc bl, ch; sahf; sub esp, 0xc; push dword ptr [esp + 0x14]; call eax; 
0x0017cdbe: adc bl, ch; shr al, cl; cmp cl, byte ptr [edi]; cld; jmp dword ptr [esi - 0x70]; 
0x000bd806: adc bl, dh; movq qword ptr [eax], mm0; mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bd7c7: adc bl, dh; movq qword ptr [eax], mm0; mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bd988: adc bl, dh; movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bd888: adc bl, dh; movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0013c8d5: adc byte ptr [0x3ff], bh; ja 0x13c8e4; sar eax, 5; add esp, 0xc; ret; 
0x0003b8e7: adc byte ptr [0x80000000], ah; ret; 
0x0012ad86: adc byte ptr [eax + 0x101], bh; call dword ptr gs:[0x10]; 
0x001220ef: adc byte ptr [eax + 0x127], bh; call dword ptr gs:[0x10]; 
0x00121feb: adc byte ptr [eax + 0x127], bh; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x00115156: adc byte ptr [eax + 0x12a], bh; call dword ptr gs:[0x10]; 
0x0011f126: adc byte ptr [eax + 0x12f], bh; call dword ptr gs:[0x10]; 
0x00131b73: adc byte ptr [eax + 0x151], bh; call dword ptr gs:[0x10]; 
0x00130c86: adc byte ptr [eax + 0x155], bh; call dword ptr gs:[0x10]; 
0x00130906: adc byte ptr [eax + 0x15], bh; call dword ptr gs:[0x10]; 
0x00130986: adc byte ptr [eax + 0x1ad], bh; call dword ptr gs:[0x10]; 
0x00130726: adc byte ptr [eax + 0x1af], bh; call dword ptr gs:[0x10]; 
0x0012e408: adc byte ptr [eax + 0x1b3], bh; int 0x80; 
0x00130ae6: adc byte ptr [eax + 0x1b8], bh; call dword ptr gs:[0x10]; 
0x00130946: adc byte ptr [eax + 0x1ba], bh; call dword ptr gs:[0x10]; 
0x00121f6b: adc byte ptr [eax + 0x27b880ce], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; call dword ptr gs:[0x10]; 
0x0012d6af: adc byte ptr [eax + 0x3e], bh; call dword ptr gs:[0x10]; 
0x000c0cb3: adc byte ptr [eax + 0x448b1470], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000bd82d: adc byte ptr [eax + 0x448b1470], cl; and al, 8; pop esi; ret; 
0x000c0d37: adc byte ptr [eax + 0x448b1870], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000bd8b1: adc byte ptr [eax + 0x448b1870], cl; and al, 8; pop esi; ret; 
0x000af54c: adc byte ptr [eax + 0x458b1104], cl; aam 0x83; ret 0x3901; 
0x000bb2c4: adc byte ptr [eax + 0x478d184f], cl; sbb dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x000b9b60: adc byte ptr [eax + 0x5e5f1457], cl; pop ebx; ret; 
0x000b9be4: adc byte ptr [eax + 0x5e5f184f], cl; pop ebx; ret; 
0x000b9ce4: adc byte ptr [eax + 0x5e5f204f], cl; pop ebx; ret; 
0x001288bf: adc byte ptr [eax + 0x6a], 0; push dword ptr [esp + 0x1c]; call 0x616b0; add esp, 0x1c; ret; 
0x00154f5d: adc byte ptr [eax + 0x6a], dl; add bh, bh; je 0x154f88; adc al, 0x55; call edi; 
0x00130816: adc byte ptr [eax + 0x80], bh; call dword ptr gs:[0x10]; 
0x00130b56: adc byte ptr [eax + 0xa7], bh; call dword ptr gs:[0x10]; 
0x0012f556: adc byte ptr [eax + 0xac], bh; call dword ptr gs:[0x10]; 
0x0012b7a6: adc byte ptr [eax + 0xe2], bh; call dword ptr gs:[0x10]; 
0x00128606: adc byte ptr [eax + 0xe3], bh; call dword ptr gs:[0x10]; 
0x00124996: adc byte ptr [eax + 0xe4], bh; call dword ptr gs:[0x10]; 
0x0009829b: adc byte ptr [eax + 0xf0], bh; mov ecx, 0x81; xor esi, esi; mov edx, 0x7fffffff; mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x00091c06: adc byte ptr [eax + 0xf0], bh; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00092a7e: adc byte ptr [eax + 0xf1], bh; call dword ptr gs:[0x10]; 
0x000e7478: adc byte ptr [eax + 1], bh; add esp, 0xc; ret; 
0x00124b92: adc byte ptr [eax + 1], bh; add esp, 8; pop ebx; ret; 
0x0007cac3: adc byte ptr [eax + 1], bh; pop ebx; pop esi; pop edi; ret; 
0x00171ea0: adc byte ptr [eax + 1], bh; pop ebx; pop esi; ret; 
0x00133b9f: adc byte ptr [eax + 1], bh; ret; 
0x0003488f: adc byte ptr [eax + eax + 0x3650000], 5; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0005baf1: adc byte ptr [eax + eax*8 + 0x5d8b2a74], al; add al, 0x8b; inc ebp; or byte ptr [ecx], bh; ret; 
0x0009a9ce: adc byte ptr [eax + eax*8 - 0x3fcef28c], al; add esp, 8; pop ebx; ret; 
0x0004195f: adc byte ptr [eax + eax], 0x81; ret; 
0x00024f90: adc byte ptr [eax - 0x25], ch; add dword ptr [eax], eax; add byte ptr [ebp - 0x6989380], cl; call dword ptr [eax + 0x6a]; 
0x00123da4: adc byte ptr [eax - 0x73], dl; adc dword ptr [eax + 0x4a], -7; call dword ptr [eax - 1]; 
0x0013baee: adc byte ptr [eax - 0x73], dl; xchg byte ptr [esi + 0x56], bl; stc; call dword ptr [ebx + 0x50]; 
0x00188dc2: adc byte ptr [eax - 0x73], dl; xchg dword ptr [esi + ecx*4 - 0xc], ecx; call dword ptr [eax - 0x18]; 
0x00175f1b: adc byte ptr [eax - 0x73], dl; xor eax, 0xffffffb7; stc; call dword ptr [eax - 0x73]; 
0x00058a3f: adc byte ptr [eax - 0x75], 0x85; ror cl, 0xff; call dword ptr [edi + 0x50]; 
0x0009a7e0: adc byte ptr [eax - 0x76f48aff], ch; ret 0xca83; 
0x000c2ece: adc byte ptr [eax - 0x80], al; stc; add byte ptr [ecx + eax + 0x40], dh; sub eax, dword ptr [esp + 4]; ret; 
0x0013f1ca: adc byte ptr [eax - 1], bh; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00049fcd: adc byte ptr [eax - 7], bh; call dword ptr [eax - 0x18]; 
0x00090c6c: adc byte ptr [eax], ah; je 0x90c80; add esp, 4; pop ebx; pop esi; ret; 
0x000c1cf5: adc byte ptr [eax], ah; ret; 
0x00128ce5: adc byte ptr [eax], al; add al, ch; mov ebx, 0x83ffefa4; les ebx, ptr [eax]; pop ebx; ret; 
0x000a44ef: adc byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg esp, eax; inc edx; stc; call dword ptr [eax - 0x18]; 
0x0002f73d: adc byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0x17a9f314], al; ret; 
0x0005adec: adc byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx + 0x4508910], cl; xor eax, eax; ret; 
0x0008b9fe: adc byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ret 0x40c7; 
0x0009a6f1: adc byte ptr [eax], al; add byte ptr [eax], al; add esp, 0xc; ret; 
0x00121d0e: adc byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0009a5c0: adc byte ptr [eax], al; add byte ptr [eax], al; cmove eax, ecx; ret; 
0x00043316: adc byte ptr [eax], al; add byte ptr [eax], al; cmove eax, edx; ret; 
0x000e760c: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, -0x26; jne 0xe7621; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x00114650: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x114660; pop ebx; ret; 
0x001146c0: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x1146d0; pop ebx; ret; 
0x00114ac0: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x114ad0; pop ebx; ret; 
0x0011f0e0: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x11f0f0; pop ebx; ret; 
0x0011f600: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x11f610; pop ebx; ret; 
0x0011fcde: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x11fcf0; pop ebx; ret; 
0x001208ec: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x120900; pop ebx; ret; 
0x00121000: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x121010; pop ebx; ret; 
0x0012150c: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x121520; pop ebx; ret; 
0x00121a2c: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x121a40; pop ebx; ret; 
0x00122fb0: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x122fc0; pop ebx; ret; 
0x00123000: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x123010; pop ebx; ret; 
0x00124e60: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x124e70; pop ebx; ret; 
0x0012c470: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x12c480; pop ebx; ret; 
0x0012e86c: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x12e880; pop ebx; ret; 
0x0012ef10: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x12ef20; pop ebx; ret; 
0x0012f087: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x12f098; ret; 
0x0012f190: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x12f1a0; pop ebx; ret; 
0x00130290: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x1302a0; pop ebx; ret; 
0x00130550: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x130560; pop ebx; ret; 
0x0003c9a1: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x3c9b0; pop ebx; ret; 
0x000612d0: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x612e0; pop ebx; ret; 
0x0009f18c: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x9f1a0; pop ebx; ret; 
0x000a01e4: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xa01f8; pop ebx; ret; 
0x000dbe0e: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xdbe20; pop ebx; ret; 
0x0010c1b8: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff001; jae 0x24f50; ret; 
0x0017073a: adc byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x00170672: adc byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 4], 1; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x0017068a: adc byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x001321fc: adc byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0003c962: adc byte ptr [eax], al; add byte ptr [eax], al; mov ebx, edx; cmp eax, 0xfffff001; jae 0x24f50; ret; 
0x001214de: adc byte ptr [eax], al; add byte ptr [eax], al; mov ebx, edx; ret; 
0x000fb6a0: adc byte ptr [eax], al; add byte ptr [eax], al; neg eax; pop ebx; ret; 
0x001219fe: adc byte ptr [eax], al; add byte ptr [eax], al; pop ebp; pop edi; pop ebx; ret; 
0x000eab65: adc byte ptr [eax], al; add byte ptr [eax], al; pop ebx; cmp eax, 0xfffff001; jae 0x24f50; ret; 
0x0008f2ee: adc byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x00099499: adc byte ptr [eax], al; add byte ptr [eax], al; pop ebx; ret; 
0x00042cd4: adc byte ptr [eax], al; add byte ptr [eax], al; pop ebx; sub eax, edx; ret; 
0x001abc6b: adc byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x0009c2ac: adc byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x000905d6: adc byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x001271f5: adc byte ptr [eax], al; add byte ptr [ebp - 0x6aef47d], cl; call dword ptr [edx + 0x52]; 
0x001271db: adc byte ptr [eax], al; add byte ptr [ebp - 0x6af187d], cl; call dword ptr [ecx + 0x51]; 
0x000a42b0: adc byte ptr [eax], al; add byte ptr [ebp - 0x6be8479], cl; call dword ptr [eax - 0x73]; 
0x0002718b: adc byte ptr [eax], al; add byte ptr [ebp - 0x7cec8b40], al; in al, dx; or byte ptr [ebp - 0x218ef36d], cl; call dword ptr [edx + 0x50]; 
0x0011efd1: adc byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x001a4a3e: adc byte ptr [eax], al; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x001842e7: adc byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; sub eax, 0x81000059; ret; 
0x00135950: adc byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x00061cea: adc byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x00117090: adc byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x420f; 
0x00175054: adc byte ptr [eax], al; add byte ptr [edi - 0x18], dl; ret; 
0x0002823a: adc byte ptr [eax], al; add byte ptr [edx + 0x50], dl; call 0x982f0; add esp, 0x1c; ret; 
0x0007c382: adc byte ptr [eax], al; add cl, ch; imul edi, edi, -1; jmp dword ptr [esi - 0x70]; 
0x00104fde: adc byte ptr [eax], al; add dh, dh; ret 0xf02; 
0x000c21db: adc byte ptr [eax], al; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; add esi, ecx; jmp ebx; 
0x000c0947: adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bd524: adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000271a0: adc byte ptr [eax], al; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0012f07d: adc byte ptr [eax], al; mov eax, 0x123; call dword ptr gs:[0x10]; 
0x0012f07d: adc byte ptr [eax], al; mov eax, 0x123; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x12f098; ret; 
0x0013473c: adc byte ptr [eax], al; mov eax, dword ptr [eax + 0x108]; mov eax, dword ptr [eax + 0x20]; ret; 
0x0013027d: adc byte ptr [eax], al; push ebx; mov eax, 0x34; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0013053d: adc byte ptr [eax], al; push ebx; mov eax, 0xc3; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012f17d: adc byte ptr [eax], al; push ebx; mov eax, 0xc4; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012eefd: adc byte ptr [eax], al; push ebx; mov eax, 0xc5; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0019bba4: adc byte ptr [eax], bh; ret 0x840f; 
0x001707a1: adc byte ptr [eax], ch; push eax; push edi; call dword ptr [ecx + 0x18]; 
0x0014a74f: adc byte ptr [eax], cl; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x000b941d: adc byte ptr [eax], cl; or eax, 0x1fc18100; cmp dword ptr [ecx], edx; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0011efd0: adc byte ptr [eax], dl; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x000c1ce5: adc byte ptr [eax], dl; ret; 
0x0012702f: adc byte ptr [ebp + 0x12840fc0], al; or byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; mov bl, 0x4d; stc; call dword ptr [eax + 0x55]; 
0x001272a5: adc byte ptr [ebp + 0x18840fc0], al; or al, 0; add byte ptr [ebp - 0x6ad017d], cl; call dword ptr [edx + 0x52]; 
0x00127080: adc byte ptr [ebp + 0x22840fc0], al; or dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f714], al; dec si; stc; call dword ptr [eax + 0x55]; 
0x00126f57: adc byte ptr [ebp + 0x28840fc0], al; add eax, 0xec830000; or byte ptr [ebp - 0x6b4427d], cl; call dword ptr [eax + 0x55]; 
0x00089e2d: adc byte ptr [ebp + 0x292e78c0], al; ret; 
0x000c4c5a: adc byte ptr [ebp + 0x29d975db], al; ret; 
0x0008fcba: adc byte ptr [ebp + 0x313974d2], al; idiv byte ptr [eax + 0xf0]; call dword ptr gs:[0x10]; 
0x00140178: adc byte ptr [ebp + 0x36880ff6], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x76bbdbbc], cl; ret; 
0x001271ef: adc byte ptr [ebp + 0x37840fc0], al; adc byte ptr [eax], al; add byte ptr [ebp - 0x6aef47d], cl; call dword ptr [edx + 0x52]; 
0x00027bea: adc byte ptr [ebp + 0x3840fc0], al; add dword ptr [eax], eax; add byte ptr [ecx - 0x76ff743b], cl; ret 0xce80; 
0x00136797: adc byte ptr [ebp + 0x39010544], cl; ret; 
0x0010cc45: adc byte ptr [ebp + 0x391678db], al; fmul dword ptr [edi]; lahf; ret 0xe8c1; 
0x000c6561: adc byte ptr [ebp + 0x391a74db], al; ret; 
0x0012943f: adc byte ptr [ebp + 0x391c74c0], al; ret; 
0x000c64d8: adc byte ptr [ebp + 0x392374db], al; ret; 
0x00126f8d: adc byte ptr [ebp + 0x3a840fc0], al; add eax, 0xec830000; or byte ptr [ebp - 0x6b3b57d], cl; call dword ptr [eax + 0x55]; 
0x000792a2: adc byte ptr [ebp + 0x47899804], cl; add al, 0x29; fnsave dword ptr [ebx + eax*2 - 0x75]; pop edi; or byte ptr [ecx], bh; ret; 
0x0008765f: adc byte ptr [ebp + 0x4889014a], cl; add al, 0xf; mov dh, 2; ret; 
0x0016a252: adc byte ptr [ebp + 0x50fff962], 0x6a; add ch, al; push ecx; ret; 
0x0016a352: adc byte ptr [ebp + 0x50fff962], 0xe8; ret; 
0x00171641: adc byte ptr [ebp + 0x53890450], cl; adc bl, ch; ret; 
0x0007d4f4: adc byte ptr [ebp + 0x56], dl; call dword ptr [eax + 0x1c]; 
0x00088c44: adc byte ptr [ebp + 0x5b0774c0], al; pop esi; pop edi; ret; 
0x0003680c: adc byte ptr [ebp + 0x5bcf75ff], al; pop esi; pop edi; ret; 
0x0016010a: adc byte ptr [ebp + 0x5be175f6], al; pop esi; pop edi; ret; 
0x00141780: adc byte ptr [ebp + 0x5e5b3e04], cl; pop edi; ret; 
0x0010b115: adc byte ptr [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret; 
0x0012c3b1: adc byte ptr [ebp + 0x5e5bf865], cl; pop ebp; ret; 
0x000bb1bd: adc byte ptr [ebp + 0x5e5f1147], cl; pop ebx; ret; 
0x000bb1df: adc byte ptr [ebp + 0x5e5f1247], cl; pop ebx; ret; 
0x000bb21d: adc byte ptr [ebp + 0x5e5f1447], cl; pop ebx; ret; 
0x000bb2a1: adc byte ptr [ebp + 0x5e5f1847], cl; pop ebx; ret; 
0x000bb3b1: adc byte ptr [ebp + 0x5e5f2047], cl; pop ebx; ret; 
0x0016ccf2: adc byte ptr [ebp + 0x63], 0xf9; call dword ptr [eax + 0x6a]; 
0x0016cdf2: adc byte ptr [ebp + 0x63], 0xf9; call dword ptr [eax - 0x18]; 
0x0016cd46: adc byte ptr [ebp + 0x63], 0xf9; jmp dword ptr [ebp - 0x75]; 
0x0012704a: adc byte ptr [ebp + 0x6c840fc0], al; or byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; dec dword ptr [ebp - 7]; call dword ptr [eax + 0x55]; 
0x00156c76: adc byte ptr [ebp + 0x71840fc0], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f714], al; les ebx, ptr [ebp - 7]; call dword ptr [eax - 1]; 
0x00127139: adc byte ptr [ebp + 0x74840fc0], al; or eax, dword ptr [eax]; add byte ptr [ebp - 0x6b0087d], cl; call dword ptr [edx + 0x52]; 
0x000dd37a: adc byte ptr [ebp + 0x7d840fc0], al; add al, byte ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; sub ecx, edi; call dword ptr [eax + 0x56]; 
0x00094168: adc byte ptr [ebp + 0xd], dh; xor eax, eax; add esp, 0xc; ret; 
0x00152830: adc byte ptr [ebp + 0xf0974c0], al; lahf; ret; 
0x0008ecbc: adc byte ptr [ebp + 0xf0f75d2], al; add ebp, edx; xor eax, eax; add esp, 0xc; ret; 
0x000fabd3: adc byte ptr [ebp + 0xf1c2444], cl; inc esp; ret 0x4c89; 
0x00041ab5: adc byte ptr [ebp + 0xff089c0], al; dec eax; ret 0x9387; 
0x00134799: adc byte ptr [ebp + eax], 0x81; ret; 
0x0009aca0: adc byte ptr [ebp - 0x165c8a40], al; ret; 
0x0016f2eb: adc byte ptr [ebp - 0x167a8b40], al; ret 0xfffe; 
0x001846d3: adc byte ptr [ebp - 0x17d78640], al; ret; 
0x0009ff46: adc byte ptr [ebp - 0x19e6737d], cl; call dword ptr [eax - 0x73]; 
0x000959ed: adc byte ptr [ebp - 0x1a94a37d], cl; call dword ptr [eax - 0x73]; 
0x00094cca: adc byte ptr [ebp - 0x1aa25380], cl; call dword ptr [eax - 0x73]; 
0x000b7fc3: adc byte ptr [ebp - 0x1b160fa5], cl; idiv edi; jmp dword ptr [esi + 0xf]; 
0x000a82b4: adc byte ptr [ebp - 0x1c7bf040], al; add byte ptr [eax], al; add byte ptr [ecx - 0x76c3dbbc], cl; ret 0x448b; 
0x00183557: adc byte ptr [ebp - 0x1f7bf040], al; add eax, dword ptr [eax]; add byte ptr [ebx - 0x7472f714], al; cdq; stc; call dword ptr [ecx - 0x77]; 
0x00030092: adc byte ptr [ebp - 0x20f0037d], cl; call dword ptr [eax - 1]; 
0x000c4002: adc byte ptr [ebp - 0x2f6d7240], al; cmp al, 0; add byte ptr [edi], cl; inc esp; ret 0x4489; 
0x000583d1: adc byte ptr [ebp - 0x35f34b], cl; call dword ptr [eax - 0x48]; 
0x0016971e: adc byte ptr [ebp - 0x367bf040], al; add byte ptr [eax], al; add byte ptr [ebx - 0x7cefdbac], cl; ret 0x8902; 
0x00126fde: adc byte ptr [ebp - 0x367bf040], al; add eax, 0xec830000; or byte ptr [ebp - 0x6b2f87d], cl; call dword ptr [eax + 0x55]; 
0x0012728b: adc byte ptr [ebp - 0x387bf040], al; or al, 0; add byte ptr [ebp - 0x6ad557d], cl; call dword ptr [ecx + 0x51]; 
0x0012711f: adc byte ptr [ebp - 0x387bf040], al; or al, byte ptr [eax]; add byte ptr [ebp - 0x6b03e7d], cl; call dword ptr [ecx + 0x51]; 
0x00127065: adc byte ptr [ebp - 0x397bf040], al; or byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; xor dword ptr [esi - 7], ecx; call dword ptr [eax + 0x55]; 
0x001046b1: adc byte ptr [ebp - 0x3a7bf040], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0017147c: adc byte ptr [ebp - 0x3d6af040], al; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00170f14: adc byte ptr [ebp - 0x3f6af040], al; add esp, 8; movzx eax, al; pop ebx; ret; 
0x00157d81: adc byte ptr [ebp - 0x3f6bf040], al; add esp, 0xc; ret; 
0x00182ce7: adc byte ptr [ebp - 0x3f7bf040], al; add byte ptr [eax], al; add byte ptr [ebx - 0x6c72f714], al; cdq; stc; call dword ptr [edx - 0x77]; 
0x0014c2c4: adc byte ptr [ebp - 0x3f7c7eec], cl; add dword ptr [ecx + 0x2c706], ecx; add byte ptr [eax], al; add bl, ch; ret 0x148d; 
0x00032dd8: adc byte ptr [ebp - 0x3f7cfe88], cl; sbb al, 0x89; out 0x89, al; ret 0x25; 
0x00148051: adc byte ptr [ebp - 0x48f0f3a8], cl; jmp dword ptr [esi - 0x77]; 
0x00182ccc: adc byte ptr [ebp - 0x4c7bf040], al; add byte ptr [eax], al; add byte ptr [ebx - 0x5472f714], al; mov dh, 0x66; stc; call dword ptr [ebp + 0x56]; 
0x00177dd0: adc byte ptr [ebp - 0x587bf040], al; add byte ptr [eax], al; add byte ptr [ebx - 0x137cc3ba], cl; or al, 0x55; call dword ptr [eax + 0x10]; 
0x001271d5: adc byte ptr [ebp - 0x5f7bf040], al; adc byte ptr [eax], al; add byte ptr [ebp - 0x6af187d], cl; call dword ptr [ecx + 0x51]; 
0x00157890: adc byte ptr [ebp - 0x5f7bf040], al; add byte ptr [eax], al; add byte ptr [eax - 0x7af000c1], al; ret 0; 
0x0015f711: adc byte ptr [ebp - 0x64a8b79], cl; call dword ptr [eax - 0x73]; 
0x0015fd5f: adc byte ptr [ebp - 0x64ab37a], cl; call dword ptr [eax - 0x73]; 
0x00098934: adc byte ptr [ebp - 0x67c4380], cl; call dword ptr [eax - 0x18]; 
0x000819a6: adc byte ptr [ebp - 0x67cdb7d], cl; call dword ptr [eax - 0x73]; 
0x0017d39f: adc byte ptr [ebp - 0x69a487a], cl; call dword ptr [eax - 0x73]; 
0x0017815b: adc byte ptr [ebp - 0x69b3a79], cl; call dword ptr [eax - 0x73]; 
0x0017b7aa: adc byte ptr [ebp - 0x69b7e79], cl; call dword ptr [eax - 0x73]; 
0x0017b7aa: adc byte ptr [ebp - 0x69b7e79], cl; call dword ptr [eax - 0x73]; xchg dword ptr [esp + esi*2 - 7], ecx; call dword ptr [eax - 0x18]; ret 0xeb96; 
0x0017c246: adc byte ptr [ebp - 0x69b7e7d], cl; call dword ptr [eax - 0x73]; 
0x00163216: adc byte ptr [ebp - 0x69fac6e], cl; call dword ptr [edx + 0x50]; 
0x001632ba: adc byte ptr [ebp - 0x69fac80], cl; call dword ptr [eax - 1]; 
0x00155966: adc byte ptr [ebp - 0x6a22768], cl; call dword ptr [ebx - 0x73]; 
0x00143712: adc byte ptr [ebp - 0x6a67f80], cl; call dword ptr [eax + 0x6a]; 
0x00117230: adc byte ptr [ebp - 0x6b60d80], cl; call dword ptr [eax - 0x18]; 
0x0011143c: adc byte ptr [ebp - 0x6b66680], cl; call dword ptr [eax + 0x6a]; 
0x0011141d: adc byte ptr [ebp - 0x6b68079], cl; call dword ptr [eax - 0x73]; 
0x000607c5: adc byte ptr [ebp - 0x6cd9a7d], cl; call dword ptr [ecx + 0x50]; 
0x00143ccc: adc byte ptr [ebp - 0x6cfb26a], cl; call dword ptr [edx - 0x46]; 
0x00155a6a: adc byte ptr [ebp - 0x6d69879], cl; call dword ptr [eax + 0x53]; 
0x00177605: adc byte ptr [ebp - 0x6d7bf040], al; add al, 0; add byte ptr [ebx + 0x458b0cec], al; cmp al, 0x57; call dword ptr [eax + 0x10]; 
0x0016f07a: adc byte ptr [ebp - 0x6e7bf040], al; add byte ptr [eax], al; add byte ptr [ebx - 0x137cefbd], cl; or al, 0x56; call dword ptr [eax + 0x10]; 
0x00172f41: adc byte ptr [ebp - 0x7077f040], al; add byte ptr [eax], al; add al, ch; int1; ret 0xfff7; 
0x0009b036: adc byte ptr [ebp - 0x72c28b40], al; inc ebp; inc dword ptr [ebx - 0x69f00208]; ret; 
0x0016faeb: adc byte ptr [ebp - 0x74738b40], al; inc ebx; add al, 0x83; in al, dx; or al, 0x53; call dword ptr [eax + 0x10]; 
0x000f8aaa: adc byte ptr [ebp - 0x74be8b40], al; test dword ptr [edx + edi*8 - 1], eax; jmp dword ptr [ebp - 0x75]; 
0x000f182a: adc byte ptr [ebp - 0x74be8b40], al; test dword ptr [edx + edi*8 - 1], edx; jmp dword ptr [ebp - 0x75]; 
0x0012f1d8: adc byte ptr [ebp - 0x74cc8b2e], al; pop esp; and al, 0xc; mov eax, 0x178; call dword ptr gs:[0x10]; 
0x0010085e: adc byte ptr [ebp - 0x74d28740], al; push esi; or byte ptr [ecx], bh; ret 0x267e; 
0x0010ea04: adc byte ptr [ebp - 0x74dd8b40], al; jns 0x8dcad5d6; sub eax, -0x5f; stc; call dword ptr [eax - 0x73]; 
0x000fadfa: adc byte ptr [ebp - 0x74e28b40], al; test dword ptr [edx + ebp*8 - 0x137c0001], ebx; or byte ptr [ebp - 0x6b7fd80], cl; call dword ptr [eax + 0x53]; 
0x0017c7b4: adc byte ptr [ebp - 0x74efdbb4], cl; inc edx; add al, 0x51; push edx; call dword ptr [eax + 0x24]; 
0x0017bd04: adc byte ptr [ebp - 0x74efdbb4], cl; inc edx; add al, 0x51; push edx; call dword ptr [eax + 4]; 
0x001ab99d: adc byte ptr [ebp - 0x74f18a2e], al; inc esp; and al, 0xc; pop edi; ret; 
0x000e8207: adc byte ptr [ebp - 0x74f88b2e], al; dec edx; or byte ptr [ebp - 0x17f48a37], al; push 0x89fffffc; ret 0xc085; 
0x00034967: adc byte ptr [ebp - 0x76238a40], al; ret; 
0x001832a4: adc byte ptr [ebp - 0x76388a40], al; ret 0x838b; 
0x00145aee: adc byte ptr [ebp - 0x7677f040], al; add byte ptr [eax], al; add byte ptr [ebx - 0x76ebdbbc], cl; ret 0xc085; 
0x00178021: adc byte ptr [ebp - 0x767af040], al; leave; ljmp 0x8908:0x24748bff; ret; 
0x0013d9be: adc byte ptr [ebp - 0x767bf040], al; add dword ptr [eax], eax; add byte ptr [ecx - 0x76ff743b], cl; ret 0xce80; 
0x0015637c: adc byte ptr [ebp - 0x76cc8b40], al; ret 0x488d; 
0x00133be5: adc byte ptr [ebp - 0x76e78b40], al; ret; 
0x001a4a37: adc byte ptr [ebp - 0x79f00f93], cl; call dword ptr [eax]; 
0x0019f933: adc byte ptr [ebp - 0x79f00f93], cl; ret; 
0x000b326c: adc byte ptr [ebp - 0x7af0efb6], cl; mov al, byte ptr [0x5b5f0000]; ret; 
0x0008c134: adc byte ptr [ebp - 0x7af78a2e], al; ror byte ptr [edi], 0x84; push edi; add al, byte ptr [eax]; add byte ptr [ecx], bh; ret; 
0x00162ce3: adc byte ptr [ebp - 0x7c178a40], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0017a186: adc byte ptr [ebp - 0x7c1a8a40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x0004020b: adc byte ptr [ebp - 0x7c1b8a0a], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0002603c: adc byte ptr [ebp - 0x7c1c8a0a], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00172da7: adc byte ptr [ebp - 0x7c208b40], al; in al, dx; or byte ptr [ebp - 0xc34f379], cl; call dword ptr [eax - 0x73]; 
0x001720f9: adc byte ptr [ebp - 0x7c248b40], al; in al, dx; add al, 0x83; ret; 
0x000c4cc5: adc byte ptr [ebp - 0x7c298a25], al; les ecx, ptr [ecx + ebp]; ret; 
0x0016f8b3: adc byte ptr [ebp - 0x7c388b40], al; ret; 
0x00028063: adc byte ptr [ebp - 0x7c478a40], al; in al, dx; or al, 0x8d; test dword ptr [eax + 0x29], edi; stc; call dword ptr [edi - 1]; 
0x0016ecb4: adc byte ptr [ebp - 0x7c4d8b40], al; in al, dx; or byte ptr [ebp - 0xc34f379], cl; call dword ptr [eax - 0x73]; 
0x001925e0: adc byte ptr [ebp - 0x7c548b40], al; in al, dx; or byte ptr [ebx - 0x72e7dbbc], cl; xor byte ptr [esi], 0x4a; stc; call dword ptr [eax + 0x53]; 
0x00170618: adc byte ptr [ebp - 0x7c578b40], al; ret; 
0x0016ff93: adc byte ptr [ebp - 0x7c5b8b40], al; in al, dx; or al, 0x57; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x00170469: adc byte ptr [ebp - 0x7c5e8b40], al; ret; 
0x000fae17: adc byte ptr [ebp - 0x7c6b8a40], al; in al, dx; or byte ptr [ebp - 0x14c77b], cl; call dword ptr [eax - 1]; 
0x000fdad3: adc byte ptr [ebp - 0x7c878b40], al; in al, dx; or byte ptr [ebp - 0x6b7e07d], cl; call dword ptr [eax + 0x55]; 
0x000fdbd8: adc byte ptr [ebp - 0x7c998b40], al; in al, dx; or byte ptr [ebp - 0x6c0bf7d], cl; call dword ptr [eax + 0x55]; 
0x0017617a: adc byte ptr [ebp - 0x7c9e8a40], al; in al, dx; or byte ptr [ebp - 0x8b63], cl; call dword ptr [esi + 0x53]; 
0x0014ee0f: adc byte ptr [ebp - 0x7cbd8b40], al; in al, dx; or al, 0x89; ret; 
0x0014e21f: adc byte ptr [ebp - 0x7cc08b40], al; in al, dx; add al, 0x89; ret; 
0x0012d0ed: adc byte ptr [ebp - 0x7cc18b40], al; ret; 
0x00175b16: adc byte ptr [ebp - 0x7cc28b40], al; in al, dx; or al, 0x56; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x0017a9d8: adc byte ptr [ebp - 0x7cc98b40], al; in al, dx; or al, 0x8b; inc ebx; or al, 0x57; call dword ptr [eax + 0x10]; 
0x0015d369: adc byte ptr [ebp - 0x7ccd8a40], al; in al, dx; or byte ptr [ebp - 0x6bec979], cl; call dword ptr [eax + 0x53]; 
0x001253f2: adc byte ptr [ebp - 0x7cd38740], al; in al, dx; add al, 0x89; ret; 
0x001866c2: adc byte ptr [ebp - 0x7cd68b25], al; in al, dx; or byte ptr [edx + 0x50], dl; call dword ptr [ebx + 0x24]; 
0x00172e62: adc byte ptr [ebp - 0x7cd68b40], al; in al, dx; add al, 0x83; ret; 
0x00186749: adc byte ptr [ebp - 0x7cdd8b25], al; in al, dx; or byte ptr [edx + 0x50], dl; call dword ptr [ebx + 0x28]; 
0x00033524: adc byte ptr [ebp - 0x7ce08b40], al; in al, dx; or byte ptr [ebp - 0x68bbb7b], cl; call dword ptr [eax + 0x56]; 
0x00137d98: adc byte ptr [ebp - 0x7ce48b40], al; ret; 
0x0013c29b: adc byte ptr [ebp - 0x7ce4e884], cl; ret; 
0x0017212c: adc byte ptr [ebp - 0x7ce58b40], al; in al, dx; add al, 0x83; ret; 
0x0017504a: adc byte ptr [ebp - 0x7ce68a40], al; in al, dx; or byte ptr [eax], ch; adc byte ptr [eax], al; add byte ptr [edi - 0x18], dl; ret; 
0x00157d6a: adc byte ptr [ebp - 0x7ce78b2e], al; in al, dx; or byte ptr [ebp - 0x6bbcf7f], cl; call dword ptr [eax + 0x52]; 
0x0011483d: adc byte ptr [ebp - 0x7cf18a40], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0012d15d: adc byte ptr [ebp - 0x7cf18b40], al; ret; 
0x00061f56: adc byte ptr [ebp - 0x7cf28a40], al; les ecx, ptr [eax]; mov eax, ebx; pop ebx; ret; 
0x0003c677: adc byte ptr [ebp - 0x7cf38a40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x00188ab8: adc byte ptr [ebp - 0x7cf48a2e], al; les ecx, ptr [eax]; pop ebx; ret; 
0x00042118: adc byte ptr [ebp - 0x7cf48b40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x00189da1: adc byte ptr [ebp - 0x7cf58a25], al; les ecx, ptr [eax]; pop ebx; ret; 
0x001704ca: adc byte ptr [ebp - 0x7cf68a40], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00162972: adc byte ptr [ebp - 0x7cf68b40], al; in al, dx; or al, 0x56; call eax; 
0x0013d402: adc byte ptr [ebp - 0x7cf68b40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x001318c3: adc byte ptr [ebp - 0x7cf78740], al; les ecx, ptr [eax]; pop ebx; ret; 
0x0003c926: adc byte ptr [ebp - 0x7cfa8a40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x00037df0: adc byte ptr [ebp - 0x7d380], cl; call dword ptr [eax - 0x75]; 
0x00123b33: adc byte ptr [ebp - 0x7e7bf040], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0016ec12: adc byte ptr [ebp - 0xd02f37d], cl; call dword ptr [eax - 0x73]; 
0x00162792: adc byte ptr [ebp - 0xdc6c37d], cl; call dword ptr [eax - 0x73]; 
0x0015e461: adc byte ptr [ebp - 0xe2ef369], cl; call dword ptr [edx + 0x6a]; 
0x0018240a: adc byte ptr [ebx + 0x1074fff8], al; add esp, 4; pop ebx; pop esi; ret; 
0x000a6dc5: adc byte ptr [ebx + 0x10], dh; mov eax, dword ptr [eax + 4]; test eax, eax; jne 0xa6dc0; xor eax, eax; ret; 
0x00178a78: adc byte ptr [ebx + 0x10c48303], cl; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x00087ef3: adc byte ptr [ebx + 0x120245c], cl; ret; 
0x000ccd5f: adc byte ptr [ebx + 0x12e957e8], al; idiv bh; call dword ptr [edi + 0x6a]; 
0x000e9ec3: adc byte ptr [ebx + 0x177f01f8], al; pop ebx; pop esi; pop edi; ret; 
0x00124225: adc byte ptr [ebx + 0x1ac83], cl; add byte ptr [ebx + 0xfcb3], cl; add bh, bh; xor byte ptr [ebp - 0x6a6a47d], cl; call dword ptr [eax - 1]; 
0x0009809f: adc byte ptr [ebx + 0x1b7501fa], al; or dword ptr [eax], 0x40000000; xor eax, eax; ret; 
0x001715cb: adc byte ptr [ebx + 0x1b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x000e95cd: adc byte ptr [ebx + 0x1d7f01f8], al; add esp, 4; pop ebx; pop esi; ret; 
0x000e90ec: adc byte ptr [ebx + 0x1e7f01fa], al; add esp, 0x14; pop ebx; pop esi; ret; 
0x00041993: adc byte ptr [ebx + 0x1f7f01f8], al; add esp, 4; pop ebx; pop esi; ret; 
0x0018265a: adc byte ptr [ebx + 0x207f01fa], al; add esp, 0x18; pop ebx; ret; 
0x00094331: adc byte ptr [ebx + 0x217f01fa], al; add esp, 0x18; pop ebx; ret; 
0x00182880: adc byte ptr [ebx + 0x227f01fa], al; add esp, 0x14; pop ebx; pop esi; ret; 
0x001825ce: adc byte ptr [ebx + 0x247f01fa], al; add esp, 0x18; pop ebx; ret; 
0x0008ddbe: adc byte ptr [ebx + 0x2890853], cl; add esp, 4; pop ebx; pop esi; ret; 
0x00173579: adc byte ptr [ebx + 0x2914244c], cl; ret 0xca39; 
0x0006ea9c: adc byte ptr [ebx + 0x291c245c], cl; ret; 
0x000982fa: adc byte ptr [ebx + 0x2e28310], cl; je 0x98310; xor eax, eax; add esp, 0xc; ret; 
0x0015c34e: adc byte ptr [ebx + 0x311c2454], cl; dec dword ptr [ebx + 0x392c244c]; ret; 
0x0013e054: adc byte ptr [ebx + 0x33e90cc4], al; and bh, dh; dec dword ptr [ebp - 0x7417ff8a]; out 0xff, eax; jmp dword ptr [esi - 0x70]; 
0x0013e944: adc byte ptr [ebx + 0x33e90cc4], al; pop esi; stc; dec dword ptr [ebp - 0x6417ff8a]; fdivp st(7); jmp dword ptr [esi - 0x70]; 
0x000a99d5: adc byte ptr [ebx + 0x39082444], cl; ret; 
0x000aaf19: adc byte ptr [ebx + 0x390c244c], cl; ret 0x840f; 
0x000e8bed: adc byte ptr [ebx + 0x390c245c], cl; ret 0x470f; 
0x000fc71f: adc byte ptr [ebx + 0x39202454], cl; ret; 
0x0003efe1: adc byte ptr [ebx + 0x448b10c4], al; and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x3eff6; add esp, 0x1c; ret; 
0x0003f0f4: adc byte ptr [ebx + 0x448b10c4], al; and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x3f109; add esp, 0x1c; ret; 
0x00178147: adc byte ptr [ebx + 0x4508b03], cl; mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x0017906d: adc byte ptr [ebx + 0x478b0cec], al; add al, 0x57; call dword ptr [eax + 0x10]; 
0x0015658e: adc byte ptr [ebx + 0x47f01fa], al; ret; 
0x0018c414: adc byte ptr [ebx + 0x4c48303], cl; pop ebx; pop esi; jmp eax; 
0x00178a7d: adc byte ptr [ebx + 0x508b0cec], al; add al, 0x50; call dword ptr [edx + 0x10]; 
0x0017c7b8: adc byte ptr [ebx + 0x52510442], cl; call dword ptr [eax + 0x24]; 
0x0017bd08: adc byte ptr [ebx + 0x52510442], cl; call dword ptr [eax + 4]; 
0x000a2365: adc byte ptr [ebx + 0x574fff8], al; add esp, 0xc; ret; 
0x000c1b32: adc byte ptr [ebx + 0x58ebf0e2], al; lea esi, cs:[esi]; xor eax, eax; ret; 
0x000c0a68: adc byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x00188740: adc byte ptr [ebx + 0x5c8b0038], al; and al, 0x14; jne 0x188750; pop ebx; ret; 
0x000bd635: adc byte ptr [ebx + 0x5e082444], cl; ret; 
0x00082bd5: adc byte ptr [ebx + 0x5e5b04c4], al; jmp eax; 
0x00039fbc: adc byte ptr [ebx + 0x5e5b04c4], al; pop edi; pop ebp; ret; 
0x00026138: adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00025057: adc byte ptr [ebx + 0x5e5b04c4], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x000ac417: adc byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x000a1c03: adc byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0003bf1e: adc byte ptr [ebx + 0x5e5b18c4], al; pop edi; ret; 
0x000276c7: adc byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x0008d8b4: adc byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; jmp eax; 
0x000a514b: adc byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x00029e3a: adc byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; ret; 
0x0002b074: adc byte ptr [ebx + 0x5e5b7cc4], al; pop edi; pop ebp; ret; 
0x00170b9e: adc byte ptr [ebx + 0x5e], bl; jmp eax; 
0x00033f55: adc byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0002f7d4: adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0009cf56: adc byte ptr [ebx + 0x5e], bl; ret; 
0x001628b8: adc byte ptr [ebx + 0x60], 0xf9; call dword ptr [eax + 0x55]; 
0x001632bc: adc byte ptr [ebx + 0x60], 0xf9; call dword ptr [eax - 1]; 
0x0017a0b1: adc byte ptr [ebx + 0x650c2444], cl; sub eax, dword ptr [0x14]; jne 0x17a0c3; add esp, 0x1c; ret; 
0x0003efe4: adc byte ptr [ebx + 0x650c2444], cl; sub eax, dword ptr [0x14]; jne 0x3eff6; add esp, 0x1c; ret; 
0x0003f0f7: adc byte ptr [ebx + 0x650c2444], cl; sub eax, dword ptr [0x14]; jne 0x3f109; add esp, 0x1c; ret; 
0x00025535: adc byte ptr [ebx + 0x650c244c], cl; sub ecx, dword ptr [0x14]; jne 0x25547; add esp, 0x1c; ret; 
0x0012d674: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x12d686; add esp, 0x1c; ret; 
0x0018c6c1: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x18c6d3; add esp, 0x1c; ret; 
0x000405e7: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x405f9; add esp, 0x1c; ret; 
0x00040814: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x40826; add esp, 0x1c; ret; 
0x00040ae4: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x40af6; add esp, 0x1c; ret; 
0x00040b67: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x40b79; add esp, 0x1c; ret; 
0x000da706: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0xda718; add esp, 0x1c; ret; 
0x000e4f6a: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0xe4f7c; add esp, 0x1c; ret; 
0x000e742a: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0xe743c; add esp, 0x1c; ret; 
0x0017b89a: adc byte ptr [ebx + 0x651c2444], cl; sub eax, dword ptr [0x14]; jne 0x17b8ac; add esp, 0x2c; ret; 
0x0013d57d: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x13d595; add esp, 0x2c; ret; 
0x0013e7bd: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x13e7d5; add esp, 0x2c; ret; 
0x00192b43: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x192b55; add esp, 0x2c; ret; 
0x000409d2: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x409e4; add esp, 0x2c; ret; 
0x00053492: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x534a4; add esp, 0x2c; ret; 
0x00092765: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x92777; add esp, 0x2c; ret; 
0x000972e1: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x972f3; add esp, 0x2c; ret; 
0x00098595: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x985a7; add esp, 0x2c; ret; 
0x00098a05: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x98a17; add esp, 0x2c; ret; 
0x00098f21: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x98f33; add esp, 0x2c; ret; 
0x00099371: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x99383; add esp, 0x2c; ret; 
0x00179930: adc byte ptr [ebx + 0x653c2444], cl; sub eax, dword ptr [0x14]; jne 0x179942; add esp, 0x4c; ret; 
0x001799a0: adc byte ptr [ebx + 0x653c2444], cl; sub eax, dword ptr [0x14]; jne 0x1799b2; add esp, 0x4c; ret; 
0x00179a10: adc byte ptr [ebx + 0x653c2444], cl; sub eax, dword ptr [0x14]; jne 0x179a22; add esp, 0x4c; ret; 
0x00179a73: adc byte ptr [ebx + 0x653c2444], cl; sub eax, dword ptr [0x14]; jne 0x179a85; add esp, 0x4c; ret; 
0x00179ad3: adc byte ptr [ebx + 0x653c2444], cl; sub eax, dword ptr [0x14]; jne 0x179ae5; add esp, 0x4c; ret; 
0x00179b40: adc byte ptr [ebx + 0x653c2444], cl; sub eax, dword ptr [0x14]; jne 0x179b52; add esp, 0x4c; ret; 
0x00179bc0: adc byte ptr [ebx + 0x653c2444], cl; sub eax, dword ptr [0x14]; jne 0x179bd2; add esp, 0x4c; ret; 
0x001798c0: adc byte ptr [ebx + 0x653c2454], cl; sub edx, dword ptr [0x14]; jne 0x1798d2; add esp, 0x4c; ret; 
0x0010ccca: adc byte ptr [ebx + 0x66082444], cl; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x00117a57: adc byte ptr [ebx + 0x66082454], cl; mov dword ptr [edx + 0x3e], eax; xor eax, eax; ret; 
0x001194f7: adc byte ptr [ebx + 0x66082454], cl; mov dword ptr [edx + 0x42], eax; xor eax, eax; ret; 
0x00124532: adc byte ptr [ebx + 0x74c08500], cl; inc edi; call eax; 
0x00131965: adc byte ptr [ebx + 0xa], bh; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0017ceb9: adc byte ptr [ebx + 0xc], dh; add dword ptr [esi + 0x14], edi; pop ebx; pop esi; pop edi; ret; 
0x000982fc: adc byte ptr [ebx + 0xe7402e2], al; xor eax, eax; add esp, 0xc; ret; 
0x000951b7: adc byte ptr [ebx + 0xf0b808], cl; add byte ptr [eax], al; not ecx; and ecx, 0x80; call dword ptr gs:[0x10]; 
0x000489b1: adc byte ptr [ebx + 0xf142454], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00063481: adc byte ptr [ebx + 0xf2c244c], cl; mov dh, 0x94; and al, 0x83; add byte ptr [eax], al; add byte ptr [ecx], al; ret; 
0x001793ff: adc byte ptr [ebx + 5], bl; nop; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x0017948f: adc byte ptr [ebx + 5], bl; xchg esp, eax; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x00132075: adc byte ptr [ebx + 9], bh; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00060d17: adc byte ptr [ebx - 0x14f3dbbc], cl; mov dword ptr [0x8d0cec83], eax; adc dword ptr [edx + ebx], 0; add byte ptr [eax - 0x18], dl; ret; 
0x000401bd: adc byte ptr [ebx - 0x14f3dbbc], cl; ret 0x748d; 
0x001828bd: adc byte ptr [ebx - 0x14f3dbbc], cl; ret 0x838b; 
0x001689cd: adc byte ptr [ebx - 0x14f3dbbc], cl; ret; 
0x0006ff11: adc byte ptr [ebx - 0x16f3dbb4], cl; ret 0xfff5; 
0x001167e3: adc byte ptr [ebx - 0x17c3dbbc], cl; ret; 
0x001868e3: adc byte ptr [ebx - 0x2776cf3c], al; pop ebx; pop esi; pop edi; ret; 
0x00170df6: adc byte ptr [ebx - 0x2776fb3c], al; pop ebx; pop esi; jmp eax; 
0x00170f9a: adc byte ptr [ebx - 0x2776fb3c], al; pop ebx; pop esi; ret; 
0x000d5644: adc byte ptr [ebx - 0x362f43], al; call dword ptr [eax]; 
0x00082bd2: adc byte ptr [ebx - 0x3b7cefc0], cl; add al, 0x5b; pop esi; jmp eax; 
0x0016f72c: adc byte ptr [ebx - 0x3b7cfbbd], cl; adc al, 0x53; call dword ptr [eax + 0x10]; 
0x0014c370: adc byte ptr [ebx - 0x3b7cfe18], al; add al, 0x5b; pop esi; ret; 
0x0016ebc5: adc byte ptr [ebx - 0x3f7ae3c0], cl; je 0x16ebd6; sub esp, 0xc; push esi; call eax; 
0x0016f098: adc byte ptr [ebx - 0x3f7ae3c0], cl; je 0x16f0a9; sub esp, 0xc; push esi; call eax; 
0x0016ffb3: adc byte ptr [ebx - 0x3f7ae3c0], cl; je 0x16ffc4; sub esp, 0xc; push edi; call eax; 
0x00174629: adc byte ptr [ebx - 0x3f7ae3c0], cl; je 0x17463a; sub esp, 0xc; push esi; call eax; 
0x00175ced: adc byte ptr [ebx - 0x3f7ae3c0], cl; je 0x175cfe; sub esp, 0xc; push edi; call eax; 
0x00177097: adc byte ptr [ebx - 0x3f7ae3c0], cl; je 0x1770a8; sub esp, 0xc; push ebp; call eax; 
0x0009811b: adc byte ptr [ebx - 0x3f7af7bd], cl; je 0x98135; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x000a6dc7: adc byte ptr [ebx - 0x3f7afbc0], cl; jne 0xa6dc0; xor eax, eax; ret; 
0x00137b0f: adc byte ptr [ebx - 0x3f7c2bb3], cl; sbb al, 0x89; out 0x89, al; ret; 
0x0009022a: adc byte ptr [ebx - 0x3fcefb3c], al; pop ebx; pop esi; ret; 
0x0009ceb6: adc byte ptr [ebx - 0x3fe6fe08], al; pop ebx; pop esi; pop edi; ret; 
0x000ba885: adc byte ptr [ebx - 0x43f0ef15], al; shr al, cl; mov al, byte ptr [0x81000cf3]; ror dword ptr [edi + 0x3001125], 0xc; xchg ecx, eax; jmp ecx; 
0x00126a6d: adc byte ptr [ebx - 0x47f3dba4], cl; in eax, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001306ed: adc byte ptr [ebx - 0x47f3dba4], cl; inc dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012842d: adc byte ptr [ebx - 0x47f3dba4], cl; out 0, al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001248fd: adc byte ptr [ebx - 0x47f3dba4], cl; out 0, eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00130aad: adc byte ptr [ebx - 0x47f3dba4], cl; test al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001208ad: adc byte ptr [ebx - 0x47f3dba4], cl; xor dword ptr [ecx], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00077ef7: adc byte ptr [ebx - 0x4f76b], cl; inc dword ptr [ebp - 0x177bf040]; add al, byte ptr [eax]; add byte ptr [ebx - 0x51773], cl; call ecx; 
0x000788bc: adc byte ptr [ebx - 0x4ff63], cl; call dword ptr [edx - 0x77]; 
0x000cba57: adc byte ptr [ebx - 0x5bf0ff26], al; ret 0xc102; 
0x0014ba84: adc byte ptr [ebx - 0x6272f314], al; je 0x14bae7; stc; call dword ptr [ebx - 0x18]; 
0x0014ba58: adc byte ptr [ebx - 0x6272f314], al; pop ebx; stc; call dword ptr [ebx - 0x18]; 
0x0009b2bd: adc byte ptr [ebx - 0x69f00208], al; ret; 
0x00047de2: adc byte ptr [ebx - 0x6af068cc], cl; ret 0xd789; 
0x0016999a: adc byte ptr [ebx - 0x6bf00008], al; ret 0xd1e9; 
0x0007cba9: adc byte ptr [ebx - 0x6bf00008], al; ret; 
0x0017d045: adc byte ptr [ebx - 0x6bf0fe08], al; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x00061beb: adc byte ptr [ebx - 0x6c72f714], al; xor cl, bh; call dword ptr [esi + 0x52]; 
0x00138ff2: adc byte ptr [ebx - 0x72affb14], al; or dword ptr [ebx], 0x56; stc; call dword ptr [eax + 0x56]; 
0x00112f3f: adc byte ptr [ebx - 0x748bdbac], cl; jl 0x112f6b; sbb al, 0x31; fild dword ptr [ebp - 0x14f48a2e]; jo 0x112ed4; ret; 
0x0018bbb4: adc byte ptr [ebx - 0x74dfdb8c], cl; inc esi; adc al, 0x8b; push esi; adc byte ptr [ecx], bh; ret 0x4d72; 
0x000892d4: adc byte ptr [ebx - 0x74dfdba4], cl; inc ebx; adc al, 0x8b; push ebx; adc byte ptr [ecx], bh; ret 0x2773; 
0x000890f4: adc byte ptr [ebx - 0x74ebdb8c], cl; adc esi, esi; ret 0xf08; 
0x0009f809: adc byte ptr [ebx - 0x74ebdbac], cl; pop esp; and al, 0xc; call dword ptr gs:[0x10]; 
0x00097d37: adc byte ptr [ebx - 0x74ebdbb4], cl; inc ebx; or al, 0x89; ret 0xe281; 
0x00130d74: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00130844: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x0011f634: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x00121544: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x00121034: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x00114af4: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x001309e4: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x1ac; call dword ptr gs:[0x10]; 
0x00130754: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x1b0; call dword ptr gs:[0x10]; 
0x001307b4: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x1b1; call dword ptr gs:[0x10]; 
0x001147e4: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x00130a44: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x1b6; call dword ptr gs:[0x10]; 
0x001236c4: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x0012d974: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x001308c4: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x00130584: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x00129564: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x00130664: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x00130694: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x0010c184: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x001309b4: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000eab54: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x0011f094: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x00115114: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000f0ac4: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000f0a94: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x001146f4: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x00128834: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x00128754: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x00128454: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x00128484: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x00124924: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x000686a8: adc byte ptr [ebx - 0x74ffffd1], 0x85; mov eax, 0x39fffffb; ret; 
0x0017c0a2: adc byte ptr [ebx - 0x75], bl; inc eax; or al, 0x5e; pop edi; jmp eax; 
0x0017c0db: adc byte ptr [ebx - 0x75], bl; inc eax; or byte ptr [esi + 0x5f], bl; jmp eax; 
0x000811cc: adc byte ptr [ebx - 0x75], bl; inc edi; adc al, 0x5e; pop edi; jmp eax; 
0x0008131c: adc byte ptr [ebx - 0x75], bl; inc edi; adc byte ptr [esi + 0x5f], bl; jmp eax; 
0x000890bc: adc byte ptr [ebx - 0x75], bl; inc esi; adc byte ptr [esi + 0x5f], bl; jmp eax; 
0x001056fa: adc byte ptr [ebx - 0x75], dh; pop eax; add al, 0xf7; ret; 
0x00131a27: adc byte ptr [ebx - 0x76bfdbbc], cl; inc esp; and al, 0x14; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000e013b: adc byte ptr [ebx - 0x76c3dbb4], cl; ret; 
0x0011fe23: adc byte ptr [ebx - 0x76e7db8c], cl; retf 0x7c8b; and al, 0x1c; sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x0011f43b: adc byte ptr [ebx - 0x76ebdbb4], cl; ret; 
0x000a30fd: adc byte ptr [ebx - 0x76efdb84], cl; ret 0xfa29; 
0x001820da: adc byte ptr [ebx - 0x76f3dbb4], cl; ret 0x408d; 
0x00096016: adc byte ptr [ebx - 0x76f3dbb4], cl; ret 0xe283; 
0x000404ea: adc byte ptr [ebx - 0x76f7dbb4], cl; ret 0xc085; 
0x0010ce39: adc byte ptr [ebx - 0x76fbdbbc], cl; nop; or byte ptr [ecx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x00081c77: adc byte ptr [ebx - 0x77], bl; rcr byte ptr [esi + 0x5f], 1; ret; 
0x000b3b23: adc byte ptr [ebx - 0x79f0ef15], al; cmp eax, -1; inc dword ptr [ebp + 0x2b850fc0]; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0014c85c: adc byte ptr [ebx - 0x7a72f714], al; push edi; stc; call dword ptr [eax + 0x52]; 
0x00150383: adc byte ptr [ebx - 0x7af0fd08], al; ret; 
0x0011d272: adc byte ptr [ebx - 0x7af3dbac], cl; ror byte ptr [edi], 0x84; ret 0xfffc; 
0x00124ae6: adc byte ptr [ebx - 0x7af3dbac], cl; sal byte ptr [ebp - 0x41], 0x83; in al, dx; or byte ptr [ebp - 0x6b5706a], cl; call dword ptr [edx - 0x77]; 
0x00124b05: adc byte ptr [ebx - 0x7af3dbac], cl; sal byte ptr [ebp - 0x60], 0x83; in al, dx; or byte ptr [ebp - 0x6b56d6a], cl; call dword ptr [edx - 0x77]; 
0x00183f2b: adc byte ptr [ebx - 0x7af7dbac], cl; sal byte ptr [esp + esi - 0x7d], 0xec; or byte ptr [ebp - 0x699754a], cl; call dword ptr [esi + 0x53]; 
0x00069735: adc byte ptr [ebx - 0x7bf00108], al; mov eax, dword ptr [0x83000002]; ret; 
0x001463d2: adc byte ptr [ebx - 0x7c2c76ed], cl; ret 0x8303; 
0x001844aa: adc byte ptr [ebx - 0x7c72f714], al; mov dh, 0x66; stc; call dword ptr [ebp + 0x50]; 
0x000611fd: adc byte ptr [ebx - 0x7cf3dbbc], cl; les ebx, ptr [eax]; pop ebx; ret; 
0x0003ca42: adc byte ptr [ebx - 0x7cf3dbbc], cl; les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x0005c424: adc byte ptr [ebx - 0x876b], cl; inc dword ptr [ecx]; ret 0x5589; 
0x001475e8: adc byte ptr [ebx - 0xf76fb3c], al; pop ebx; pop esi; ret; 
0x0007f370: adc byte ptr [ebx], bh; push eax; add al, 0x73; or cl, byte ptr [ebp + 0x889044a]; mov eax, dword ptr [edx]; ret; 
0x001716fa: adc byte ptr [ebx], ch; inc esi; or al, 0x83; les eax, ptr [ecx + eax]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x00086be7: adc byte ptr [ebx], dl; push ecx; adc al, 0xeb; ret; 
0x00107923: adc byte ptr [ecx + 0x24448bc7], cl; cmp al, 0x85; ror byte ptr [edi], 0x84; ret; 
0x000ab047: adc byte ptr [ecx + 0x3118244c], cl; rol byte ptr [ecx], cl; ret; 
0x000aa9b3: adc byte ptr [ecx + 0x3118244c], cl; shr bl, cl; or ecx, dword ptr [ebp - 0x7cffd98c]; ret 0x3901; 
0x000aad87: adc byte ptr [ecx + 0x3118247c], cl; ror byte ptr [ecx + 0x13c244c], cl; ret; 
0x0018b285: adc byte ptr [ecx + 0x39042444], cl; ret 0x9174; 
0x00087bdd: adc byte ptr [ecx + 0x39082444], cl; ret 0x8c74; 
0x0016fc66: adc byte ptr [ecx + 0x4438bc6], cl; add esp, 0x14; push ebx; call dword ptr [eax + 0x10]; 
0x000c0d97: adc byte ptr [ecx + 0x448b1748], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000bd8f4: adc byte ptr [ecx + 0x448b1748], cl; and al, 8; pop esi; ret; 
0x000c0dc7: adc byte ptr [ecx + 0x448b1848], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000bd914: adc byte ptr [ecx + 0x448b1848], cl; and al, 8; pop esi; ret; 
0x00087077: adc byte ptr [ecx + 0x4538903], cl; xor edx, edx; mov eax, edx; pop ebx; ret; 
0x000bb334: adc byte ptr [ecx + 0x478d184f], cl; sbb al, 0x5f; pop esi; pop ebx; ret; 
0x00080225: adc byte ptr [ecx + 0x4c48331], cl; pop ebx; pop esi; ret; 
0x000e9f4b: adc byte ptr [ecx + 0x4c483f0], cl; pop ebx; pop esi; ret; 
0x000e7fc8: adc byte ptr [ecx + 0x4f8b184e], cl; sbb al, 0x89; dec esi; sbb al, 0x39; ret 0x8d0f; 
0x00085cac: adc byte ptr [ecx + 0x50890853], cl; or al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0017c7e9: adc byte ptr [ecx + 0x52], dl; call dword ptr [eax + 0x20]; 
0x0017b979: adc byte ptr [ecx + 0x52], dl; call dword ptr [eax]; 
0x0014841b: adc byte ptr [ecx + 0x5a], 0xf9; call dword ptr [eax + 0x53]; 
0x00080051: adc byte ptr [ecx + 0x5b0a89c8], cl; ret; 
0x0008d7bb: adc byte ptr [ecx + 0x5b0c244c], cl; mov eax, dword ptr [eax + 0x18]; pop esi; jmp eax; 
0x0007f1e2: adc byte ptr [ecx + 0x5b3a89c8], cl; pop esi; pop edi; ret; 
0x001899f9: adc byte ptr [ecx + 0x5bd08930], cl; pop esi; ret; 
0x0005bec8: adc byte ptr [ecx + 0x5bf08903], cl; pop esi; pop edi; ret; 
0x000a6e5a: adc byte ptr [ecx + 0x5e5b0443], cl; pop edi; ret; 
0x00085a18: adc byte ptr [ecx + 0x5e5b0450], cl; ret; 
0x000dcbeb: adc byte ptr [ecx + 0x5e5b0470], cl; pop edi; ret; 
0x0009cf53: adc byte ptr [ecx + 0x5e5b104e], cl; ret; 
0x00040737: adc byte ptr [ecx + 0x5e5b145a], cl; pop edi; ret; 
0x0005b700: adc byte ptr [ecx + 0x5e5b1856], cl; pop edi; ret; 
0x000b9c24: adc byte ptr [ecx + 0x5e5f174f], cl; pop ebx; ret; 
0x000b9c44: adc byte ptr [ecx + 0x5e5f184f], cl; pop ebx; ret; 
0x001876a6: adc byte ptr [ecx + 0x5f5e5bc8], cl; ret; 
0x0013f7b4: adc byte ptr [ecx + 0x5f5e5bd0], cl; ret; 
0x000c5d3f: adc byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x0014d554: adc byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x0009b3b6: adc byte ptr [ecx + 0x5f5e5bf8], cl; ret; 
0x00084256: adc byte ptr [ecx + 0x74c085c7], cl; jae 0x841e1; in al, dx; or al, 0x8d; or dword ptr [eax - 4], 0xffffffff; call dword ptr [eax - 0x73]; 
0x0011140b: adc byte ptr [ecx + 0x74ff85f8], cl; add eax, 0x75003f80; sbb eax, 0x8b056a50; jl 0x111441; adc byte ptr [ebp - 0x6b68079], cl; call dword ptr [eax - 0x73]; 
0x00061cb7: adc byte ptr [ecx + 0x78c085c3], cl; cmp al, byte ptr [ebx - 0x7972f714]; lodsd eax, dword ptr [esi]; xor bh, cl; call dword ptr [eax + 0x53]; 
0x0005b5d6: adc byte ptr [ecx + 0xf5e5bf0], cl; mov dh, 0xc0; pop edi; ret; 
0x001423df: adc byte ptr [ecx + 0xf9], al; or byte ptr [edi], 0x44; ret 0x8dc3; 
0x00110999: adc byte ptr [ecx + 0xfc08507], cl; test ah, bl; add byte ptr [eax], al; add byte ptr [eax - 0x7bf0ffc2], al; ret 0xb; 
0x00038df7: adc byte ptr [ecx + 0xfc085c1], cl; test byte ptr [ebp - 0x77000000], ch; ret 0xab8b; 
0x001632a9: adc byte ptr [ecx + 0xfc085c7], cl; test dword ptr [eax + eax - 0x137d0000], eax; or byte ptr [ebx - 0x72efdbbc], cl; adc byte ptr [ebx + 0x60], 0xf9; call dword ptr [eax - 1]; 
0x0018959e: adc byte ptr [ecx + 0xfc085d8], cl; inc esp; ret 0x178b; 
0x0015095c: adc byte ptr [ecx + 0xfdb85f2], cl; test ah, al; add byte ptr [eax], al; add dh, dh; ret 0xf08; 
0x001235a9: adc byte ptr [ecx + eax], bh; ret 0x1389; 
0x0013acae: adc byte ptr [ecx + ebx*2], 0xf9; call dword ptr [eax + 0x6a]; 
0x000a0962: adc byte ptr [ecx + ebx*2], 0xf9; call dword ptr [eax - 0x18]; 
0x0013e17f: adc byte ptr [ecx - 0x16f3dbb4], cl; cmpsd dword ptr [esi], dword ptr es:[edi]; jg 0x13e17a; jmp dword ptr [esi - 0x70]; 
0x0013e1df: adc byte ptr [ecx - 0x16f3dbb4], cl; idiv dword ptr [edx - 0xc]; jmp dword ptr [esi - 0x70]; 
0x0013e14f: adc byte ptr [ecx - 0x16f3dbb4], cl; push edi; ja 0x13e14c; jmp dword ptr [esi - 0x70]; 
0x0013e11f: adc byte ptr [ecx - 0x16f3dbb4], cl; push edi; jne 0x13e11c; jmp dword ptr [esi - 0x70]; 
0x00056800: adc byte ptr [ecx - 0x361f43], cl; dec dword ptr [ebx - 0x6bf06ff4]; ret 0xf980; 
0x000d595a: adc byte ptr [ecx - 0x365f4b], cl; push dword ptr [ecx]; rol byte ptr [ebx - 0x362f43], cl; call dword ptr [eax]; 
0x0005adf2: adc byte ptr [ecx - 0x3fcefbb0], cl; ret; 
0x000f1975: adc byte ptr [ecx - 0x46b73], cl; dec dword ptr [ecx - 0x4737b]; jmp dword ptr [ebp - 0x75]; 
0x0012ba90: adc byte ptr [ecx - 0x49b7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0017cc55: adc byte ptr [ecx - 0x537672e8], cl; idiv bh; dec dword ptr [ecx + 0x48891450]; add al, 0x5b; ret; 
0x000f188e: adc byte ptr [ecx - 0x5eb7b], cl; call dword ptr [esi - 0x18]; 
0x000f8b0e: adc byte ptr [ecx - 0x5fb7b], cl; call dword ptr [esi - 0x18]; 
0x0014b4a0: adc byte ptr [ecx - 0x72fd9532], cl; add dword ptr [edi], 0x2d; stc; call dword ptr [eax + 0x51]; 
0x001242d4: adc byte ptr [ecx - 0x73], dl; mov ebx, dword ptr [ebx + 0x59]; stc; call dword ptr [ecx + 0x50]; 
0x0007c098: adc byte ptr [ecx - 0x74f3dbb4], cl; xchg edx, eax; cwde; add byte ptr [eax], al; add byte ptr [ecx + 0x5b082454], cl; jmp eax; 
0x000e34a4: adc byte ptr [ecx - 0x76bfdbbc], cl; ret 0x448b; 
0x000e4b3b: adc byte ptr [ecx - 0x76bfdbbc], cl; ret 0x7e9; 
0x000e4ae6: adc byte ptr [ecx - 0x76bfdbbc], cl; ret 0xcae9; 
0x000a358c: adc byte ptr [ecx - 0x76d3db84], cl; ret 0xcaeb; 
0x00131abd: adc byte ptr [ecx - 0x76ebdba4], cl; ret; 
0x00096a3a: adc byte ptr [ecx - 0x76efdbb4], cl; ret 0xc74; 
0x0002dec5: adc byte ptr [ecx - 0x76f3dbbc], cl; fmul dword ptr [ecx - 0x7cfbdbbc]; rol byte ptr [edx], 0x39; ret 0x820f; 
0x00130ee0: adc byte ptr [ecx - 0x7a3fce3e], cl; sal byte ptr [esp + edi - 0x7d], cl; in al, dx; or byte ptr [ebp - 0x659bf79], cl; call dword ptr [eax + 0x55]; 
0x00100853: adc byte ptr [ecx - 0x7c27d608], cl; ret; 
0x000a693f: adc byte ptr [ecx - 0x7c3fcef0], cl; les ecx, ptr [eax]; pop ebx; ret; 
0x00102633: adc byte ptr [ecx - 0x7cefdba4], cl; ret 0x3904; 
0x00082ca8: adc byte ptr [ecx - 0x9ec74c6], cl; ret 0x7502; 
0x0016faf9: adc byte ptr [ecx - 0xa5a73b], cl; jbe 0x16fb11; push ebx; call dword ptr [esi + 0x14]; 
0x0005bf43: adc byte ptr [ecx - 0xa743], cl; dec dword ptr [eax - 0xad73]; dec dword ptr [ecx - 0x8b63]; dec dword ptr [ecx - 0xbf6b]; dec dword ptr [ecx - 0x934b]; jmp dword ptr [ebp - 0x75]; 
0x00032be6: adc byte ptr [ecx - 0xe37b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0005be4b: adc byte ptr [ecx - 0xf766efc], cl; pop ebx; pop esi; pop edi; ret; 
0x000c492c: adc byte ptr [ecx], 0x45; stc; call dword ptr [eax - 0x18]; 
0x000835dd: adc byte ptr [ecx], ah; ret 0xfa83; 
0x001145fa: adc byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0014aa2e: adc byte ptr [ecx], al; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x0011461e: adc byte ptr [ecx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x000c1096: adc byte ptr [ecx], al; clc; pop edi; ret; 
0x001031ec: adc byte ptr [ecx], al; ret 0x448b; 
0x0008287e: adc byte ptr [ecx], al; ret 0x562b; 
0x000c18a5: adc byte ptr [ecx], al; ret 0x67c; 
0x001491e5: adc byte ptr [ecx], al; ret 0x6fe9; 
0x00185d0d: adc byte ptr [ecx], al; ret 0xcdb8; 
0x0007faae: adc byte ptr [ecx], al; ret; 
0x00198f56: adc byte ptr [ecx], al; retf 0xc801; call 0x189c1d; add ebx, 0x42c10; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198e51: adc byte ptr [ecx], al; retf 0xc801; call 0x189c1d; add ebx, 0x42c55; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196f46: adc byte ptr [ecx], al; retf 0xc801; call 0x189c1d; add ebx, 0x449a0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196e41: adc byte ptr [ecx], al; retf 0xc801; call 0x189c1d; add ebx, 0x449e5; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194f46: adc byte ptr [ecx], al; retf 0xc801; call 0x189c1d; add ebx, 0x46720; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194e41: adc byte ptr [ecx], al; retf 0xc801; call 0x189c1d; add ebx, 0x46765; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00171532: adc byte ptr [ecx], al; sar dword ptr [ecx], 1; dec eax; adc al, 0x72; ret 0x4889; 
0x0010bde7: adc byte ptr [ecx], bh; into; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x000892de: adc byte ptr [ecx], bh; ret 0x2773; 
0x000aa77d: adc byte ptr [ecx], bh; ret 0x2e74; 
0x0018bbbe: adc byte ptr [ecx], bh; ret 0x4d72; 
0x001532c5: adc byte ptr [ecx], bh; ret 0x6674; 
0x000a484c: adc byte ptr [ecx], bh; ret 0x820f; 
0x000a389b: adc byte ptr [ecx], bh; ret 0x840f; 
0x0002cd77: adc byte ptr [ecx], bh; ret 0x850f; 
0x000710dc: adc byte ptr [ecx], bh; ret 0x8c0f; 
0x00101555: adc byte ptr [ecx], bh; ret 0xad75; 
0x00151785: adc byte ptr [ecx], bh; ret 0xea75; 
0x00024c7f: adc byte ptr [ecx], bh; ret; 
0x0008c947: adc byte ptr [ecx], bh; sal byte ptr [ebp - 0xc], 1; mov eax, dword ptr [eax]; mov dword ptr [ecx], eax; ret; 
0x000c4d6d: adc byte ptr [ecx], bh; sal dword ptr [ebp + 0x18], 1; ret; 
0x000815f7: adc byte ptr [ecx], bh; sal dword ptr [edx - 0xc], 1; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000aca77: adc byte ptr [ecx], ch; fdivr dword ptr [ecx]; fmul dword ptr [edi]; inc edx; ret; 
0x000a6e91: adc byte ptr [ecx], ch; ret 0x408b; 
0x000dd563: adc byte ptr [ecx], ch; ret 0x880f; 
0x00041c50: adc byte ptr [ecx], ch; ret 0xc269; 
0x000a84c5: adc byte ptr [ecx], ch; ret 0xc8d; 
0x001aab69: adc byte ptr [ecx], ch; ret 0xe183; 
0x0008a1d0: adc byte ptr [ecx], ch; ret 0xfa39; 
0x00038861: adc byte ptr [ecx], ch; ret; 
0x000ba8a9: adc byte ptr [ecx], ch; retf 0x80e8; or al, 0; add ecx, 0x11256f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c73cc: adc byte ptr [ecx], cl; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00064e0b: adc byte ptr [ecx], cl; ret 0x540b; 
0x00137814: adc byte ptr [ecx], cl; ret; 
0x001ae47d: adc byte ptr [ecx], dh; fld xword ptr [ecx]; ret 0xe2c1; 
0x0013f160: adc byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x000816f3: adc byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x001723c3: adc byte ptr [ecx], dh; ret; 
0x00136efe: adc byte ptr [ecx], dh; rol byte ptr [ebp - 0x3db7f040], cl; add esp, 8; pop ebx; ret; 
0x001714a7: adc byte ptr [ecx], dh; rol byte ptr [ebx - 0x2f76f73c], cl; pop ebx; ret; 
0x0013a83c: adc byte ptr [ecx], dh; rol byte ptr [ebx - 0x2f76fb3c], cl; pop ebx; pop esi; ret; 
0x0002fdf7: adc byte ptr [edi + 0x2b], 0xf9; call dword ptr [eax - 0x18]; 
0x000b788f: adc byte ptr [edi + 0x5b], bl; ret; 
0x000b9add: adc byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b006a: adc byte ptr [edi + 0x5e], bl; ret; 
0x00024fbf: adc byte ptr [edi + ebp*2 - 7], 0xff; ret; 
0x001775fb: adc byte ptr [edi - 0x75], dl; inc esp; and al, 0x28; call eax; 
0x00193897: adc byte ptr [edi], cl; adc byte ptr [edx - 0x71], 0xfa; jmp dword ptr [esi - 0x70]; 
0x00196c17: adc byte ptr [edi], cl; adc dl, 0x5b; cli; jmp dword ptr [esi - 0x70]; 
0x00194c17: adc byte ptr [edi], cl; adc dl, 0x7b; cli; jmp dword ptr [esi - 0x70]; 
0x00193217: adc byte ptr [edi], cl; adc dl, 0x95; cli; jmp dword ptr [esi - 0x70]; 
0x00193e27: adc byte ptr [edi], cl; add dl, 0x89; cli; jmp dword ptr [esi - 0x70]; 
0x0019ce27: adc byte ptr [edi], cl; add dl, 0xf9; stc; jmp dword ptr [esi - 0x70]; 
0x001aba6d: adc byte ptr [edi], cl; cmp byte ptr [eax + eax + 0x408d0000], 0xf; pop edi; ret; 
0x000708a2: adc byte ptr [edi], cl; dec ecx; fistp qword ptr [ecx]; ret 0x8d0f; 
0x000afcc0: adc byte ptr [edi], cl; inc edi; ret 0x5350; 
0x000ab503: adc byte ptr [edi], cl; inc esp; ret 0x66c3; 
0x0004314f: adc byte ptr [edi], cl; mov ebp, 0x1ff183c9; lea eax, [ecx + 0x20]; pop ebx; ret; 
0x00047ddb: adc byte ptr [edi], cl; mov esi, 0x243c83d3; adc byte ptr [ebx - 0x6af068cc], cl; ret 0xd789; 
0x00047967: adc byte ptr [edi], cl; mov esi, 0x243c83db; adc byte ptr [edi], cl; xchg esp, eax; ret 0xc8b; 
0x000c15c2: adc byte ptr [edi], cl; mov esp, 0x76c229c0; lea eax, es:[edi + eax + 0x10]; pop edi; ret; 
0x000c0875: adc byte ptr [edi], cl; mov esp, 0x93b3e8d2; or al, 0; add ecx, 0x10c776; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bd575: adc byte ptr [edi], cl; mov esp, 0xc6b3e8d2; or al, 0; add ecx, 0x10f9f6; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba888: adc byte ptr [edi], cl; mov esp, 0xf3a0e8d2; or al, 0; add ecx, 0x11258f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00180f53: adc byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc105; 
0x001aaa3d: adc byte ptr [edi], cl; or ah, 0; add byte ptr [eax], al; lea eax, [edi + 0xf]; pop edi; ret; 
0x000a8eeb: adc byte ptr [edi], cl; test byte ptr [ecx - 0x7cffffff], bl; ret 0xe901; 
0x001ab76e: adc byte ptr [edi], cl; test dword ptr [eax], ebp; add dword ptr [eax], eax; add byte ptr [ebx - 0x79f0bf11], al; ret 1; 
0x000bad00: adc byte ptr [edi], cl; test dword ptr [ecx], ebx; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b968d: adc byte ptr [edi], cl; test dword ptr [edi + eax + 0x5e5f0000], ecx; pop ebx; ret; 
0x001ab9f2: adc byte ptr [edi], cl; test dword ptr [edi - 0xa000000], esp; ret 0xf20; 
0x000b326f: adc byte ptr [edi], cl; test dword ptr [edx + 0x5f000005], ecx; pop ebx; ret; 
0x001ab8d2: adc byte ptr [edi], cl; test dword ptr [esi - 0x9fffffd], esi; ret 0xf20; 
0x000d96b0: adc byte ptr [edi], cl; test ecx, ebp; add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x000b7660: adc byte ptr [edi], cl; test ecx, ebp; add eax, 0x38800000; add dword ptr [ebx + 0x5b5fffd8], eax; ret; 
0x001a9ccb: adc byte ptr [edi], cl; test esi, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x001a75c3: adc byte ptr [edi], cl; xchg byte ptr [edi - 0x7cfffffe], al; ret 0x8310; 
0x001a613c: adc byte ptr [edi], cl; xchg byte ptr [edi - 0x7cffffff], cl; ret 0x8310; 
0x00146931: adc byte ptr [edi], cl; xchg ebp, eax; ret 0xc085; 
0x001b1845: adc byte ptr [edi], cl; xchg ebp, eax; ret 0xc209; 
0x0014c6d4: adc byte ptr [edi], cl; xchg esp, eax; ret 0xa3c; 
0x0004796e: adc byte ptr [edi], cl; xchg esp, eax; ret 0xc8b; 
0x000c7eb2: adc byte ptr [edi], cl; xchg esp, eax; ret 0xf883; 
0x0013fc8c: adc byte ptr [edi], cl; xchg esp, eax; ret; 
0x00198bf7: adc byte ptr [edi], cl; xor dl, 0x3b; cli; jmp dword ptr [esi - 0x70]; 
0x0017be59: adc byte ptr [edx + 0x51], dl; call dword ptr [eax + 4]; 
0x0017be91: adc byte ptr [edx + 0x51], dl; call dword ptr [eax]; 
0x0017c55f: adc byte ptr [edx + 0x53], dl; call dword ptr [eax + 0x20]; 
0x001754eb: adc byte ptr [edx + 0x53], dl; call dword ptr [eax + 0x24]; 
0x0017bb89: adc byte ptr [edx + 0x53], dl; call dword ptr [eax + 4]; 
0x0017bb1e: adc byte ptr [edx + 0x53], dl; call dword ptr [eax]; 
0x0013f8ce: adc byte ptr [edx + 0x56], dl; call eax; 
0x0013f7f1: adc byte ptr [edx + 0x57], dl; call eax; 
0x0003dff6: adc byte ptr [edx + 0xa], ch; push 0; push dword ptr [esp + 0x1c]; call 0x4d7b0; add esp, 0x1c; ret; 
0x001265c8: adc byte ptr [edx + 1], bh; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0007c056: adc byte ptr [edx + 1], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x7bf70; add esp, 0x1c; ret; 
0x00034ed6: adc byte ptr [edx + 5], ch; push dword ptr [esp + 0x18]; push 0; call 0x34e80; add esp, 0x1c; ret; 
0x00034eb6: adc byte ptr [edx + 5], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x34e80; add esp, 0x1c; ret; 
0x00170506: adc byte ptr [edx + 8], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x17c030; add esp, 0x1c; ret; 
0x0015bed6: adc byte ptr [edx + 8], dh; setne al; movzx eax, al; neg eax; ret; 
0x0008756f: adc byte ptr [edx + ebx], 0; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x00193899: adc byte ptr [edx - 0x71], 0xfa; jmp dword ptr [esi - 0x70]; 
0x00136bd6: adc byte ptr [edx - 0x75], dl; inc esi; sbb al, 0x29; rcl byte ptr [eax - 0x73]; xchg dword ptr [ebp + edx*2 - 7], ebp; call dword ptr [eax - 1]; 
0x0010e426: adc byte ptr [edx], ch; push dword ptr [esp + 0x18]; push -1; call 0x10e970; add esp, 0x1c; ret; 
0x0003d816: adc byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x3d7a0; add esp, 0x1c; ret; 
0x0007ee86: adc byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x7bf70; add esp, 0x1c; ret; 
0x0016ef0e: adc byte ptr [edx], ch; push esi; call dword ptr [eax + 0x14]; 
0x00081320: adc byte ptr [esi + 0x5f], bl; jmp eax; 
0x00147652: adc byte ptr [esi + 0x5f], bl; pop ebp; ret; 
0x001a6507: adc byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x5073; 
0x001a37c3: adc byte ptr [esi + 0xf], ah; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x001aa66a: adc byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x001aa682: adc byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000c155d: adc byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x315a75c0], 0xc0; pop edi; ret; 
0x000fe229: adc byte ptr [esi + ecx - 0x77], dh; ret 0xef89; 
0x0009595f: adc byte ptr [esi - 0x17af0007], al; pop es; out 0xf9, eax; jmp dword ptr [esi - 0x70]; 
0x0014f310: adc byte ptr [esi - 0x3f], ah; ret 0x908; 
0x000c0d68: adc byte ptr [esi - 0x77], ah; dec eax; sbb byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000bd8d5: adc byte ptr [esi - 0x77], ah; dec eax; sbb byte ptr [ebx + 0x5e082444], cl; ret; 
0x000bb2e5: adc byte ptr [esi - 0x77], ah; dec edi; sbb byte ptr [ebp + 0x5e5f1a47], cl; pop ebx; ret; 
0x000b9c05: adc byte ptr [esi - 0x77], ah; dec edi; sbb byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00188071: adc byte ptr [esi - 9], ah; ret 0x7f8; 
0x0008f991: adc byte ptr [esi], al; add byte ptr [ecx], bh; ret; 
0x00198f62: adc byte ptr [esp + eax], ch; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00031d24: adc byte ptr [esp + ebp], 0xf9; call dword ptr [eax - 0x18]; 
0x000a42af: adc byte ptr fs:[eax], al; add byte ptr [ebp - 0x6be8479], cl; call dword ptr [eax - 0x73]; 
0x0014fe3f: adc ch, byte ptr [ecx]; ret 0xd101; 
0x0014177a: adc cl, byte ptr [0xc483fff8]; adc byte ptr [ebp + 0x5e5b3e04], cl; pop edi; ret; 
0x000b960a: adc cl, byte ptr [eax]; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0008769d: adc cl, byte ptr [ebp + 0x4889014a]; add al, 0xf; mov dh, 2; ret; 
0x00145979: adc cl, byte ptr [ebp - 0x2ff4d]; jmp dword ptr [esi - 0x7d]; 
0x0016ae93: adc cl, byte ptr [ebp - 0x74ffd98c]; inc ebx; add al, 0x83; ret; 
0x000ac2f5: adc cl, byte ptr [ebp - 0x9bb237e]; inc dword ptr [eax - 0x6d72fd1b]; sub al, 0x30; call 0xc24ed307; ret; 
0x000a9625: adc cl, byte ptr [ebp - 0x9e0337e]; inc dword ptr [eax - 0x6d72fd1b]; sub al, 0x2f; call 0xc24ea637; ret; 
0x000aa2f5: adc cl, byte ptr [ebp - 0xa0ec37e]; inc dword ptr [eax - 0x6d72fd1b]; mov esp, 0xfffe83d; inc esp; ret 0x66c3; 
0x0009af2d: adc cl, byte ptr [ebx + 0x144a3908]; je 0x9af40; ret; 
0x00133b9d: adc cl, byte ptr [ecx + 0x1b810]; add byte ptr [eax], al; ret; 
0x000a1335: adc cl, byte ptr [ecx + 0x4b891459]; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000b5b56: adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000b5cb6: adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000b1776: adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000b18d6: adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000b5cd6: adc cl, byte ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000b18f6: adc cl, byte ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000b5cf6: adc cl, byte ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000b1916: adc cl, byte ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x0004217d: adc cl, byte ptr [ecx - 0x16fbdbac]; mov ecx, 0x2effffe1; lea esi, [esi]; nop; xor eax, eax; ret; 
0x00042e1d: adc cl, byte ptr [edi]; mov ebp, 0x1ff183ca; add ecx, 1; pop ebx; mov eax, ecx; ret; 
0x00171612: adc cl, byte ptr [edi]; retf 0x1089; mov eax, 1; add esp, 8; pop ebx; ret; 
0x000bd736: adc cl, byte ptr [esi + 5]; movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00174157: adc cl, ch; cmp dh, 0xff; call dword ptr [ecx + 0x51]; 
0x00174157: adc cl, ch; cmp dh, 0xff; call dword ptr [ecx + 0x51]; push dword ptr [esp + 0x40]; push ebp; call esi; 
0x0016b2c6: adc cl, ch; mov al, byte ptr [0x8dfffff8]; xchg dword ptr [eax], edx; mov dh, 0xf9; call dword ptr [eax - 0x73]; 
0x00030024: adc cl, ch; push 0x8dffffff; and eax, 0x72; stc; call dword ptr [eax - 0x73]; 
0x000a1753: adc cl, ch; push 0x8dffffff; xchg byte ptr [eax - 0x67], bl; stc; call dword ptr [eax - 0x73]; 
0x0007899b: adc cl, ch; push es; fdiv st(7), st(0); dec dword ptr [ebx - 0x4ff4b]; dec dword ptr [ebp - 0x682177a]; call dword ptr [eax + 0x68]; 
0x00063f40: adc cl, ch; ret 0xffeb; 
0x0006f26e: adc cl, ch; ret 0xfffa; 
0x0014fb14: adc cl, ch; ret 0xfffe; 
0x00024817: adc cl, ch; ret; 
0x00176d9f: adc cl, ch; test eax, 0x51fffffe; push ecx; push dword ptr [esp + 0x40]; push ebp; call esi; 
0x00112e19: adc dh, 0x49; stc; call dword ptr [eax - 0x18]; 
0x001510f5: adc dh, byte ptr [ecx]; leave; mov eax, ecx; pop ebx; pop esi; ret; 
0x0005b71c: adc dh, dh; add ah, byte ptr [eax]; je 0x5b730; add esp, 0xc; ret; 
0x000790cc: adc dh, dh; add ah, byte ptr [eax]; je 0x790e0; add esp, 0xc; ret; 
0x0008bc16: adc dh, dh; push es; xor byte ptr [ebp + 0x2c], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000a55df: adc dh, dh; ret 0xf04; 
0x00155ae9: adc dh, dh; ret 0xf20; 
0x0005ecf2: adc dh, dh; ret 0xf40; 
0x00141b86: adc dh, dh; ret; 
0x00196c19: adc dl, 0x5b; cli; jmp dword ptr [esi - 0x70]; 
0x00194c19: adc dl, 0x7b; cli; jmp dword ptr [esi - 0x70]; 
0x00193219: adc dl, 0x95; cli; jmp dword ptr [esi - 0x70]; 
0x00092fd6: adc dl, bh; inc dword ptr [ebx - 0x17a9f314]; push cs; ret 0xffff; 
0x000a0b43: adc dl, byte ptr [eax + 0x34c9089]; add byte ptr [eax], al; mov dword ptr [eax + 0x378], 1; ret; 
0x000a0b93: adc dl, byte ptr [eax + 0x3509089]; add byte ptr [eax], al; mov dword ptr [eax + 0x378], 1; ret; 
0x000a0bc3: adc dl, byte ptr [eax + 0x3549089]; add byte ptr [eax], al; mov dword ptr [eax + 0x378], 1; ret; 
0x000a08b3: adc dl, byte ptr [eax + 0x3589089]; add byte ptr [eax], al; ret; 
0x000a0893: adc dl, byte ptr [eax + 0x35c9089]; add byte ptr [eax], al; ret; 
0x000a0b13: adc dl, byte ptr [eax + 0x3709089]; add byte ptr [eax], al; mov dword ptr [eax + 0x378], 1; ret; 
0x000a0943: adc dl, byte ptr [eax + 0x3949089]; add byte ptr [eax], al; ret; 
0x000a0b73: adc dl, byte ptr [eax + 0x3c349089]; add byte ptr [eax], al; ret; 
0x00142443: adc dl, byte ptr [ebx - 0x18]; out 0xef, al; int1; inc dword ptr [ebx - 0x2776d73c]; pop ebx; ret; 
0x00123da7: adc dword ptr [eax + 0x4a], -7; call dword ptr [eax - 1]; 
0x00158e0c: adc dword ptr [eax + 0x500000a0], -0x73; sub dword ptr [esi + ecx*2], -0xf; call dword ptr [eax - 0x73]; 
0x00179411: adc dword ptr [eax + 0x5b000001], 0x5e; pop edi; ret; 
0x00172bcc: adc dword ptr [eax - 0x27c600b0], ecx; jne 0x172bc0; pop ebx; ret; 
0x000eabd1: adc dword ptr [eax - 1], edi; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00061351: adc dword ptr [eax - 1], edi; pop ebx; pop esi; pop edi; ret; 
0x0009f839: adc dword ptr [eax - 1], edi; pop ebx; pop esi; ret; 
0x0003c9c1: adc dword ptr [eax - 1], edi; pop ebx; ret; 
0x00024f70: adc dword ptr [eax - 1], edi; ret; 
0x0007b7c3: adc dword ptr [eax - 6], -1; call dword ptr [eax - 0x73]; 
0x0011f9a0: adc dword ptr [eax], -0x5d; stc; call dword ptr [eax - 0x18]; 
0x00094213: adc dword ptr [eax], -0x7b; stc; call dword ptr [eax - 0x18]; 
0x00161811: adc dword ptr [eax], -7; call dword ptr [eax - 0x18]; 
0x001619c4: adc dword ptr [eax], -7; call dword ptr [eax - 0x73]; 
0x000a428c: adc dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg esi, esi; inc edx; stc; call dword ptr [eax - 0x18]; 
0x00131fcc: adc dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001844d5: adc dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0006995d: adc dword ptr [eax], eax; add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0x9589; 
0x00110bb5: adc dword ptr [eax], eax; add byte ptr [ebx - 0x72f7db84], cl; xchg dword ptr [edx], eax; stc; call dword ptr [eax + 0x68]; 
0x00031b95: adc dword ptr [eax], eax; add byte ptr [ecx], cl; ret 0x840f; 
0x00031b2f: adc dword ptr [eax], eax; add byte ptr [ecx], cl; ret 0x850f; 
0x000b9367: adc dword ptr [eax], eax; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9240: adc dword ptr [eax], eax; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ea080: adc dword ptr [eax], eax; and byte ptr [ecx], al; lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x0012575d: adc dword ptr [eax], eax; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0xc]; test eax, eax; je 0x12576d; ret; 
0x001416fc: adc dword ptr [eax], eax; pop ebx; ret; 
0x0011fccd: adc dword ptr [eax], eax; push ebx; mov eax, 0x14b; mov ebx, dword ptr [esp + 8]; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x001208dd: adc dword ptr [eax], eax; push ebx; mov eax, 0x28; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001238dd: adc dword ptr [eax], eax; push ebx; mov eax, 0x2d; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001214fd: adc dword ptr [eax], eax; push ebx; mov eax, 0xa; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00122f9d: adc dword ptr [eax], eax; push ebx; mov eax, 0xbf; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0012e85d: adc dword ptr [eax], eax; push ebx; mov eax, 0xfe; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00121a1d: adc dword ptr [eax], eax; push ebx; mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011f0cd: adc dword ptr [eax], eax; push ebx; mov eax, 9; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0012ad28: adc dword ptr [eax], eax; push ebx; mov ebx, 0xfee1dead; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00120853: adc dword ptr [eax], eax; push ebx; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00120bf8: adc dword ptr [eax], eax; push ebx; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0015df93: adc dword ptr [ebp + 0x39e074c9], eax; or dh, byte ptr [esp + edx*8 - 0x7d]; ret 0x8014; 
0x00126f2e: adc dword ptr [ebp + 0x51], -7; call dword ptr [eax + 0x55]; 
0x00084015: adc dword ptr [ebp + 0x5e5bf465], ecx; pop edi; pop ebp; ret; 
0x00124724: adc dword ptr [ebp + 0x5f], -7; call dword ptr [eax + 0x6a]; 
0x001237d8: adc dword ptr [ebp + 8], esi; add esp, 0x14; mov eax, edx; pop ebx; pop esi; ret; 
0x000fdfca: adc dword ptr [ebp - 0x637af001], eax; add byte ptr [eax], al; add dh, dh; add al, 0x42; add dword ptr [esi + ecx - 0x77], esi; ret; 
0x000c4582: adc dword ptr [ebp - 7], eax; call dword ptr [eax - 0x18]; 
0x001341cd: adc dword ptr [ebp - 7], edx; call dword ptr [eax + 0x57]; 
0x0008ff17: adc dword ptr [ebx + 0x16b812], ecx; add byte ptr [eax], al; test edx, edx; mov edx, 0; cmove eax, edx; ret; 
0x00170f7f: adc dword ptr [ebx + 0x26a0000], 0x68; pushal; and al, byte ptr [eax]; add byte ptr [ebx - 0x7f], dl; ret; 
0x00171a83: adc dword ptr [ebx + 0x29342454], ecx; ret 0xfa01; 
0x00126f49: adc dword ptr [ebx + 0x4b], -7; call dword ptr [eax + 0x55]; 
0x0008e89e: adc dword ptr [ebx + 0x54890450], ecx; and al, 4; jmp dword ptr [eax]; 
0x00157a17: adc dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x0007915e: adc dword ptr [ebx + 0x5e5b0cc4], eax; pop edi; pop ebp; ret; 
0x00120f8e: adc dword ptr [ebx + 0x5e5b1cc4], eax; pop edi; pop ebp; ret; 
0x00141803: adc dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x000fbae6: adc dword ptr [ebx + 0x5e], ebx; ret; 
0x001ae002: adc dword ptr [ebx + eax*4], eax; ret 0x3908; 
0x00038dc8: adc dword ptr [ebx - 0x3e7ccf16], eax; add dword ptr [ebx - 0x69f0f606], eax; ret 0xb60f; 
0x0016f87e: adc dword ptr [ebx - 0x3fcefb3c], eax; pop ebx; pop esi; ret; 
0x001a649e: adc dword ptr [ebx - 0x48], ebx; add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x1a64a9; neg eax; ret; 
0x000fdba3: adc dword ptr [ebx], 0x48; stc; call dword ptr [eax + 0x55]; 
0x0014b184: adc dword ptr [ebx], 0x5b; stc; call dword ptr [eax - 0x18]; 
0x000c27b2: adc dword ptr [ebx], eax; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0003252b: adc dword ptr [ecx + 0x2c], -7; call dword ptr [eax - 0x18]; 
0x000607e2: adc dword ptr [ecx + 0x32], -7; call dword ptr [eax + 0x6a]; 
0x0010e3fa: adc dword ptr [ecx + 0x6b], -0xf; inc ebx; pop ecx; mov eax, 0xbe; int 0x80; 
0x00099f14: adc dword ptr [ecx + eax*8 - 0x15], esi; out 0x89, eax; ret 0xe283; 
0x000a6a8d: adc dword ptr [ecx + ebx*2], -7; call dword ptr [eax + 0x6a]; 
0x001adfff: adc dword ptr [ecx - 0x7cfbee94], ecx; ret 0x3908; 
0x001b5543: adc dword ptr [ecx - 0x7cfbeea4], ecx; ret 0x3908; 
0x00126f7f: adc dword ptr [ecx], 0x4c; stc; call dword ptr [eax + 0x55]; 
0x001341cc: adc dword ptr [ecx], 0x55; stc; call dword ptr [eax + 0x57]; 
0x00028106: adc dword ptr [ecx], eax; ret 0xc083; 
0x0007158e: adc dword ptr [ecx], eax; ret; 
0x000a23b4: adc dword ptr [ecx], edi; ret 0x1d73; 
0x00140fb4: adc dword ptr [ecx], edi; ret 0x460f; 
0x000fef2e: adc dword ptr [ecx], esi; rol byte ptr [eax + 0xf004d7e], cl; xchg ebp, eax; ret 0xd201; 
0x000bb1c0: adc dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x00134784: adc dword ptr [edi + eax*2 - 0x7c9a0000], 0x5b015804; ret; 
0x00099e0c: adc dword ptr [edi + eax*8 - 0x15], esi; out 0x89, eax; ret 0xe283; 
0x0008fa1b: adc dword ptr [edx + eax], 0x10000; add byte ptr [eax], al; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00060d22: adc dword ptr [edx + ebx], 0; add byte ptr [eax - 0x18], dl; ret; 
0x0011bc61: adc dword ptr [edx - 7], ecx; call dword ptr [eax - 0x18]; 
0x000b36d1: adc dword ptr [esi - 0x77], esp; push ecx; add al, 0x5b; ret; 
0x00060650: adc dword ptr [esi], 0x32; stc; call dword ptr [eax + 0x6a]; 
0x000fb154: adc dword ptr [esi], esp; je 0xfb13f; mov eax, 0xffffffff; ret; 
0x000fb2b4: adc dword ptr [esi], esp; je 0xfb2c2; mov eax, 0xffffffff; ret; 
0x000fb5bf: adc dword ptr [esi], esp; je 0xfb5ac; mov eax, 0xffffffff; ret; 
0x000c27b1: adc dword ptr fs:[ebx], eax; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0017a841: adc eax, -0x48; stc; call dword ptr [eax - 0x73]; 
0x000d2cc6: adc eax, -0x66; stc; call dword ptr [eax - 0x18]; 
0x000a35fa: adc eax, -0x6f; stc; call dword ptr [eax - 0x18]; 
0x00189d08: adc eax, 0; mov dword ptr [edx + eax], 0x16; xor eax, eax; ret; 
0x0014b100: adc eax, 0; mov eax, dword ptr [eax + 0x1c8]; mov eax, dword ptr [edx + eax]; ret; 
0x000e760b: adc eax, 0x10; cmp eax, -0x26; jne 0xe7621; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x0011464f: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x114660; pop ebx; ret; 
0x001146bf: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x1146d0; pop ebx; ret; 
0x00114abf: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x114ad0; pop ebx; ret; 
0x0011f0df: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x11f0f0; pop ebx; ret; 
0x0011f5ff: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x11f610; pop ebx; ret; 
0x0011fcdd: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x11fcf0; pop ebx; ret; 
0x001208eb: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x120900; pop ebx; ret; 
0x00120fff: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x121010; pop ebx; ret; 
0x0012150b: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x121520; pop ebx; ret; 
0x00121a2b: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x121a40; pop ebx; ret; 
0x00122faf: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x122fc0; pop ebx; ret; 
0x00122fff: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x123010; pop ebx; ret; 
0x00124e5f: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x124e70; pop ebx; ret; 
0x0012c46f: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x12c480; pop ebx; ret; 
0x0012e86b: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x12e880; pop ebx; ret; 
0x0012ef0f: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x12ef20; pop ebx; ret; 
0x0012f086: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x12f098; ret; 
0x0012f18f: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x12f1a0; pop ebx; ret; 
0x0013028f: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x1302a0; pop ebx; ret; 
0x0013054f: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x130560; pop ebx; ret; 
0x0003c9a0: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x3c9b0; pop ebx; ret; 
0x000612cf: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x612e0; pop ebx; ret; 
0x0009f18b: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x9f1a0; pop ebx; ret; 
0x000a01e3: adc eax, 0x10; cmp eax, 0xfffff000; ja 0xa01f8; pop ebx; ret; 
0x000dbe0d: adc eax, 0x10; cmp eax, 0xfffff000; ja 0xdbe20; pop ebx; ret; 
0x0010c1b7: adc eax, 0x10; cmp eax, 0xfffff001; jae 0x24f50; ret; 
0x0003c961: adc eax, 0x10; mov ebx, edx; cmp eax, 0xfffff001; jae 0x24f50; ret; 
0x001214dd: adc eax, 0x10; mov ebx, edx; ret; 
0x000fb69f: adc eax, 0x10; neg eax; pop ebx; ret; 
0x001219fd: adc eax, 0x10; pop ebp; pop edi; pop ebx; ret; 
0x000eab64: adc eax, 0x10; pop ebx; cmp eax, 0xfffff001; jae 0x24f50; ret; 
0x0008f2ed: adc eax, 0x10; pop ebx; pop esi; ret; 
0x00140392: adc eax, 0x10; pop ebx; ret; 
0x0009c2ab: adc eax, 0x10; ret; 
0x0010c216: adc eax, 0x14; jne 0x10c269; add esp, 0x28; pop ebx; ret; 
0x0010c2b9: adc eax, 0x14; jne 0x10c309; add esp, 0x28; pop ebx; ret; 
0x0010c526: adc eax, 0x14; jne 0x10c579; add esp, 0x28; pop ebx; ret; 
0x0010e4a2: adc eax, 0x14; jne 0x10e553; add esp, 0x68; pop ebx; ret; 
0x00113547: adc eax, 0x14; jne 0x113566; add esp, 0x78; pop ebx; ret; 
0x0011f05d: adc eax, 0x14; jne 0x11f06b; movzx eax, al; add esp, 0x4c; ret; 
0x001215d1: adc eax, 0x14; jne 0x1215dd; add esp, 0x38; pop ebx; ret; 
0x00121651: adc eax, 0x14; jne 0x12165d; add esp, 0x38; pop ebx; ret; 
0x00122ca5: adc eax, 0x14; jne 0x122cb7; add esp, 0x1c; ret; 
0x00124f66: adc eax, 0x14; jne 0x124f72; add esp, 0x38; pop ebx; ret; 
0x00125395: adc eax, 0x14; jne 0x1253a0; add esp, 0x1c; ret; 
0x00125e2c: adc eax, 0x14; jne 0x125e4f; add esp, 0x1018; pop ebx; ret; 
0x00126b18: adc eax, 0x14; jne 0x126b23; add esp, 0x1c; ret; 
0x0012b699: adc eax, 0x14; jne 0x12b6e9; add esp, 0x28; pop ebx; ret; 
0x0012b739: adc eax, 0x14; jne 0x12b789; add esp, 0x28; pop ebx; ret; 
0x0012d1e4: adc eax, 0x14; jne 0x12d1ef; add esp, 0x3c; ret; 
0x0012d67b: adc eax, 0x14; jne 0x12d686; add esp, 0x1c; ret; 
0x001313df: adc eax, 0x14; jne 0x131409; add esp, 0x28; pop ebx; ret; 
0x00131504: adc eax, 0x14; jne 0x131529; add esp, 0x18; pop ebx; ret; 
0x00131584: adc eax, 0x14; jne 0x1315a9; add esp, 0x18; pop ebx; ret; 
0x0013186f: adc eax, 0x14; jne 0x131899; add esp, 0x18; pop ebx; ret; 
0x0013257f: adc eax, 0x14; jne 0x1325a9; add esp, 0x18; pop ebx; ret; 
0x00132696: adc eax, 0x14; jne 0x1326a1; add esp, 0x1c; ret; 
0x00132704: adc eax, 0x14; jne 0x132729; add esp, 0x18; pop ebx; ret; 
0x0013278f: adc eax, 0x14; jne 0x1327b9; add esp, 0x28; pop ebx; ret; 
0x00132897: adc eax, 0x14; jne 0x1328a2; add esp, 0x7c; ret; 
0x0013d584: adc eax, 0x14; jne 0x13d595; add esp, 0x2c; ret; 
0x0013e7c4: adc eax, 0x14; jne 0x13e7d5; add esp, 0x2c; ret; 
0x00148ce1: adc eax, 0x14; jne 0x148cf4; add esp, 0x18; pop ebx; ret; 
0x00148d29: adc eax, 0x14; jne 0x148d34; add esp, 0x1c; ret; 
0x00148d78: adc eax, 0x14; jne 0x148d83; add esp, 0x1c; ret; 
0x0014ac5d: adc eax, 0x14; jne 0x14aca4; add esp, 0x118; pop ebx; ret; 
0x0014acfd: adc eax, 0x14; jne 0x14ad60; add esp, 0x118; pop ebx; ret; 
0x0014adbd: adc eax, 0x14; jne 0x14ae0b; add esp, 0x118; pop ebx; ret; 
0x0014ae5d: adc eax, 0x14; jne 0x14ae8d; add esp, 0x11c; ret; 
0x0014b382: adc eax, 0x14; jne 0x14b3cc; add esp, 0x1c; ret; 
0x0014ef55: adc eax, 0x14; jne 0x14ef63; movzx eax, ax; add esp, 0x2c; ret; 
0x00153645: adc eax, 0x14; jne 0x153651; add esp, 0x28; pop ebx; ret; 
0x0016f42a: adc eax, 0x14; jne 0x16f436; add esp, 0x28; pop ebx; ret; 
0x001752d8: adc eax, 0x14; jne 0x175356; add esp, 0x18; pop ebx; ret; 
0x00178491: adc eax, 0x14; jne 0x1784a7; add esp, 0x1c; ret; 
0x001785bd: adc eax, 0x14; jne 0x1785d7; add esp, 0x28; pop ebx; ret; 
0x0017865d: adc eax, 0x14; jne 0x178677; add esp, 0x28; pop ebx; ret; 
0x001789a1: adc eax, 0x14; jne 0x1789b7; add esp, 0x1c; ret; 
0x00178a24: adc eax, 0x14; jne 0x178a37; add esp, 0x18; pop ebx; ret; 
0x001798c7: adc eax, 0x14; jne 0x1798d2; add esp, 0x4c; ret; 
0x0017b953: adc eax, 0x14; jne 0x17b9b9; add esp, 0x18; pop ebx; ret; 
0x0017ba43: adc eax, 0x14; jne 0x17baa9; add esp, 0x18; pop ebx; ret; 
0x0017bd1a: adc eax, 0x14; jne 0x17bd5c; add esp, 0x18; pop ebx; ret; 
0x0017bdba: adc eax, 0x14; jne 0x17bdfc; add esp, 0x18; pop ebx; ret; 
0x0017be78: adc eax, 0x14; jne 0x17be9b; add esp, 0x18; pop ebx; ret; 
0x0017befc: adc eax, 0x14; jne 0x17bf37; add esp, 0x18; pop ebx; ret; 
0x0017bf90: adc eax, 0x14; jne 0x17bfd4; add esp, 0x18; pop ebx; ret; 
0x0017c7ca: adc eax, 0x14; jne 0x17c80c; add esp, 0x18; pop ebx; ret; 
0x0017c86a: adc eax, 0x14; jne 0x17c8ac; add esp, 0x18; pop ebx; ret; 
0x0017c90a: adc eax, 0x14; jne 0x17c94c; add esp, 0x18; pop ebx; ret; 
0x0017c9aa: adc eax, 0x14; jne 0x17c9ec; add esp, 0x18; pop ebx; ret; 
0x0017d0a1: adc eax, 0x14; jne 0x17d0af; movzx eax, al; add esp, 0x1c; ret; 
0x0017d101: adc eax, 0x14; jne 0x17d10f; movzx eax, al; add esp, 0x1c; ret; 
0x0017d16b: adc eax, 0x14; jne 0x17d177; add esp, 0x18; pop ebx; ret; 
0x0017d21b: adc eax, 0x14; jne 0x17d227; add esp, 0x18; pop ebx; ret; 
0x001824d6: adc eax, 0x14; jne 0x182514; add esp, 0x18; pop ebx; ret; 
0x001840b0: adc eax, 0x14; jne 0x1840c9; add esp, 0x18; pop ebx; ret; 
0x0018412a: adc eax, 0x14; jne 0x184149; add esp, 0x18; pop ebx; ret; 
0x00186f2c: adc eax, 0x14; jne 0x186f38; add esp, 0x28; pop ebx; ret; 
0x00189830: adc eax, 0x14; jne 0x18983c; add esp, 0x18; pop ebx; ret; 
0x0018c6c8: adc eax, 0x14; jne 0x18c6d3; add esp, 0x1c; ret; 
0x001927d3: adc eax, 0x14; jne 0x1927f7; add esp, 0x18; pop ebx; ret; 
0x00192b4a: adc eax, 0x14; jne 0x192b55; add esp, 0x2c; ret; 
0x0003cd9a: adc eax, 0x14; jne 0x3cdb7; add esp, 0x98; pop ebx; ret; 
0x0003cf3f: adc eax, 0x14; jne 0x3cf7c; add esp, 0x28; pop ebx; ret; 
0x0003d352: adc eax, 0x14; jne 0x3d361; add esp, 0x128; pop ebx; ret; 
0x0003d952: adc eax, 0x14; jne 0x3d96f; add esp, 0x98; pop ebx; ret; 
0x0003d9d2: adc eax, 0x14; jne 0x3d9ef; add esp, 0x98; pop ebx; ret; 
0x0003da5b: adc eax, 0x14; jne 0x3da69; add esp, 0x9c; ret; 
0x0003df29: adc eax, 0x14; jne 0x3df34; add esp, 0x1c; ret; 
0x000405ee: adc eax, 0x14; jne 0x405f9; add esp, 0x1c; ret; 
0x0004081b: adc eax, 0x14; jne 0x40826; add esp, 0x1c; ret; 
0x000409d9: adc eax, 0x14; jne 0x409e4; add esp, 0x2c; ret; 
0x00040aeb: adc eax, 0x14; jne 0x40af6; add esp, 0x1c; ret; 
0x00040b6e: adc eax, 0x14; jne 0x40b79; add esp, 0x1c; ret; 
0x00041b6c: adc eax, 0x14; jne 0x41bac; add esp, 0x18; pop ebx; ret; 
0x00053499: adc eax, 0x14; jne 0x534a4; add esp, 0x2c; ret; 
0x0005ada7: adc eax, 0x14; jne 0x5adbf; add esp, 0x1c; ret; 
0x000615bb: adc eax, 0x14; jne 0x615ca; add esp, 0x1018; pop ebx; ret; 
0x00061642: adc eax, 0x14; jne 0x6164e; add esp, 0x78; pop ebx; ret; 
0x0009276c: adc eax, 0x14; jne 0x92777; add esp, 0x2c; ret; 
0x00097258: adc eax, 0x14; jne 0x97264; add esp, 0x28; pop ebx; ret; 
0x000972e8: adc eax, 0x14; jne 0x972f3; add esp, 0x2c; ret; 
0x0009859c: adc eax, 0x14; jne 0x985a7; add esp, 0x2c; ret; 
0x00098a0c: adc eax, 0x14; jne 0x98a17; add esp, 0x2c; ret; 
0x00098f28: adc eax, 0x14; jne 0x98f33; add esp, 0x2c; ret; 
0x00099378: adc eax, 0x14; jne 0x99383; add esp, 0x2c; ret; 
0x0009c245: adc eax, 0x14; jne 0x9c297; add esp, 0x38; pop ebx; ret; 
0x0009c4d3: adc eax, 0x14; jne 0x9c4f7; add esp, 0x2c; ret; 
0x0009c73f: adc eax, 0x14; jne 0x9c767; add esp, 0x2c; ret; 
0x0009c99f: adc eax, 0x14; jne 0x9c9c7; add esp, 0x18; pop ebx; ret; 
0x0009e755: adc eax, 0x14; jne 0x9e761; add esp, 0x28; pop ebx; ret; 
0x0009fdcd: adc eax, 0x14; jne 0x9fdd9; add esp, 0x28; pop ebx; ret; 
0x000a038d: adc eax, 0x14; jne 0xa0399; add esp, 0x38; pop ebx; ret; 
0x000c5e0c: adc eax, 0x14; jne 0xc5e3c; add esp, 0x18; pop ebx; ret; 
0x000da689: adc eax, 0x14; jne 0xda69f; add esp, 0x28; pop ebx; ret; 
0x000da70d: adc eax, 0x14; jne 0xda718; add esp, 0x1c; ret; 
0x000da757: adc eax, 0x14; jne 0xda763; add esp, 0x38; pop ebx; ret; 
0x000da7b9: adc eax, 0x14; jne 0xda7c5; add esp, 0x48; pop ebx; ret; 
0x000dbcd2: adc eax, 0x14; jne 0xdbd19; add esp, 0x28; pop ebx; ret; 
0x000dc056: adc eax, 0x14; jne 0xdc078; add esp, 0x38; pop ebx; ret; 
0x000e4f71: adc eax, 0x14; jne 0xe4f7c; add esp, 0x1c; ret; 
0x000e7431: adc eax, 0x14; jne 0xe743c; add esp, 0x1c; ret; 
0x000e75a5: adc eax, 0x14; jne 0xe75e2; add esp, 0x28; pop ebx; ret; 
0x000e77c3: adc eax, 0x14; jne 0xe77cf; add esp, 0x28; pop ebx; ret; 
0x000e8669: adc eax, 0x14; jne 0xe8678; add esp, 0xe8; pop ebx; ret; 
0x000e86db: adc eax, 0x14; jne 0xe86ea; add esp, 0xe8; pop ebx; ret; 
0x000e877f: adc eax, 0x14; jne 0xe878e; add esp, 0xe8; pop ebx; ret; 
0x000efa3e: adc eax, 0x14; jne 0xefa57; add esp, 0x1c; ret; 
0x000f0d77: adc eax, 0x14; jne 0xf0d96; add esp, 0x78; pop ebx; ret; 
0x000f38b7: adc eax, 0x14; jne 0xf38d6; add esp, 0x78; pop ebx; ret; 
0x000f46b7: adc eax, 0x14; jne 0xf46d6; add esp, 0x78; pop ebx; ret; 
0x000f71e7: adc eax, 0x14; jne 0xf7206; add esp, 0x78; pop ebx; ret; 
0x000f7ff7: adc eax, 0x14; jne 0xf8016; add esp, 0x78; pop ebx; ret; 
0x0012368a: adc eax, 0x14ba; add byte ptr [ebx + 0x29], bl; ret 0xc085; 
0x00024afa: adc eax, 0x18; rol edx, 9; mov dword ptr [eax + 0x1a50], edx; ret; 
0x0002707e: adc eax, 0x241c8900; call edi; 
0x0002f4f8: adc eax, 0x24348900; call ebx; 
0x000ef5b0: adc eax, 0x26b48d; add byte ptr [eax], al; add byte ptr [ebx - 0x17aaf314], al; call esi; 
0x000c133a: adc eax, 0x29c0bc0f; ret 0x860f; 
0x001413a4: adc eax, 0x3900768d; sal dword ptr [esi + edi*2 - 0x7d], 1; rol byte ptr [ecx], 0x83; ret; 
0x0017ca3a: adc eax, 0x4189c229; or al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [ecx + 0x14], edx; ret; 
0x00032bcd: adc eax, 0x45c38100; ret 0x20; 
0x000648ad: adc eax, 0x508d0000; add dword ptr [ecx + 0xc60455], ecx; and eax, 0xfffb62e9; jmp dword ptr [esi - 0x70]; 
0x0010c101: adc eax, 0x5300132d; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000805f6: adc eax, 0x5b20c483; pop esi; pop edi; ret; 
0x00130f31: adc eax, 0x5b2cc483; pop esi; pop edi; pop ebp; ret; 
0x000fab19: adc eax, 0x5bf4658d; pop esi; pop edi; pop ebp; ret; 
0x000b39e8: adc eax, 0x5bfffffe; ret; 
0x00095a60: adc eax, 0x68; mov dword ptr [eax + 8], edx; xor edx, edx; mov eax, edx; ret; 
0x0008e730: adc eax, 0x78; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x0008e767: adc eax, 0x78; mov dword ptr [eax + 0xc], edx; mov dword ptr gs:[0x78], eax; ret; 
0x0008f163: adc eax, 0x78; pop ebx; ret; 
0x0005f4ea: adc eax, 0x7b; stc; call dword ptr [eax - 0x73]; 
0x0008e819: adc eax, 0x7c; mov eax, dword ptr [eax + 0x24]; test eax, eax; jne 0x8e830; ret; 
0x0008e7eb: adc eax, 0x7c; pop ebx; ret; 
0x0019a204: adc eax, 0x81fffefa; ret; 
0x00199704: adc eax, 0x81ffff05; ret; 
0x00197004: adc eax, 0x81ffff2c; ret; 
0x00195004: adc eax, 0x81ffff4c; ret; 
0x0007c15a: adc eax, 0x824448b; mov edx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x001704e7: adc eax, 0x830000bc; les edx, ptr [eax]; add esp, 4; pop ebx; pop esi; ret; 
0x00089d77: adc eax, 0x83000957; les ebx, ptr [eax]; pop ebx; ret; 
0x000af77c: adc eax, 0x8300768d; ret 0x8b20; 
0x000284c3: adc eax, 0x8301c083; ret 0x8901; 
0x000a8f74: adc eax, 0x83e87401; ret 0x8b01; 
0x00174887: adc eax, 0x83ffeae9; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x00042147: adc eax, 0x83ffffff; les edx, ptr [eax]; add esp, 8; pop ebx; ret; 
0x00090726: adc eax, 0x8908418b; ret; 
0x000eda7d: adc eax, 0x89535600; ret; 
0x0007353a: adc eax, 0x8d8b0000; call 0x8a07353e; ret; 
0x00034887: adc eax, 0xa58b0500; and byte ptr [eax], al; mov eax, dword ptr [eax + 0x94]; add eax, dword ptr gs:[0]; ret; 
0x00034867: adc eax, 0xa5ab0500; and byte ptr [eax], al; mov eax, dword ptr [eax + 0x1d0]; add eax, dword ptr gs:[0]; ret; 
0x00034847: adc eax, 0xa5cb0500; and byte ptr [eax], al; mov eax, dword ptr [eax + 0x9c]; add eax, dword ptr gs:[0]; ret; 
0x0008ff88: adc eax, 0xb85b0000; or al, 0; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x001a459e: adc eax, 0xc1830000; adc byte ptr [esi + 0xf], ah; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0017899a: adc eax, 0xc24548b; sub edx, dword ptr gs:[0x14]; jne 0x1789b7; add esp, 0x1c; ret; 
0x000c4cc0: adc eax, 0xc4830007; adc byte ptr [ebp - 0x7c298a25], al; les ecx, ptr [ecx + ebp]; ret; 
0x00033444: adc eax, 0xcec58100; mov ecx, 0x31570020; call dword ptr [esi - 0x42]; 
0x00192ea1: adc eax, 0xd8f7fffd; sbb eax, eax; add esp, 0x2c; ret; 
0x000d964a: adc eax, 0xf390e8b; jne 0xd97a0; pop edi; pop esi; ret; 
0x0002f547: adc eax, 0xf8cb0500; and byte ptr [eax], al; mov eax, dword ptr [eax + 0x10e0]; ret; 
0x0010d4f2: adc eax, dword ptr [eax + eax]; add dh, dh; ret 0xf80; 
0x000a48a9: adc eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], bh; inc ebx; stc; call dword ptr [eax - 0x18]; 
0x000a4a5d: adc eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax - 0x6b], eax; stc; call dword ptr [eax - 0x18]; 
0x000f561b: adc eax, dword ptr [eax]; add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x001a47ee: adc eax, dword ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000c0b6c: adc eax, dword ptr [eax]; mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd6f9: adc eax, dword ptr [eax]; mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0b8c: adc eax, dword ptr [eax]; mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd719: adc eax, dword ptr [eax]; mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0b09: adc eax, dword ptr [eax]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd6a6: adc eax, dword ptr [eax]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0b4d: adc eax, dword ptr [eax]; mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd6da: adc eax, dword ptr [eax]; mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0bae: adc eax, dword ptr [eax]; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd73b: adc eax, dword ptr [eax]; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0bce: adc eax, dword ptr [eax]; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd75b: adc eax, dword ptr [eax]; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0bee: adc eax, dword ptr [eax]; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd77b: adc eax, dword ptr [eax]; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0010c103: adc eax, dword ptr [eax]; push ebx; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00090961: adc eax, dword ptr [ebp - 0x74cd8b2e]; dec ebx; or al, 0x89; clc; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0016f1cf: adc eax, dword ptr [ebx + 0x488b0cec]; add al, 0x50; call dword ptr [ecx + 0x10]; 
0x00025d72: adc eax, dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x00172050: adc eax, dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x00178e28: adc eax, dword ptr [ebx + 0x5e5b3cc4]; pop edi; pop ebp; ret; 
0x000a08e9: adc eax, dword ptr [ebx - 0x177c0f20]; add ecx, eax; call 0x1ca8bfa; mov dword ptr [edx + 0x388], eax; ret; 
0x001ac70c: adc eax, dword ptr [ebx - 0x218bfe20]; lea eax, [edi - 0x10]; pop edi; ret; 
0x000b3746: adc eax, dword ptr [ecx + 5]; pop ebx; ret; 
0x000b3756: adc eax, dword ptr [ecx + 6]; pop ebx; ret; 
0x000b3766: adc eax, dword ptr [ecx + 7]; pop ebx; ret; 
0x000b3776: adc eax, dword ptr [ecx + 8]; pop ebx; ret; 
0x00126b79: adc eax, dword ptr [ecx]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000b3702: adc eax, dword ptr [ecx]; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x000b3722: adc eax, dword ptr [ecx]; mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x000b3732: adc eax, dword ptr [ecx]; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x000b3712: adc eax, dword ptr [ecx]; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000b3742: adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x000b3752: adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000b3762: adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000b3772: adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x000b36f2: adc eax, dword ptr [ecx]; pop ebx; ret; 
0x000a6bd3: adc eax, dword ptr [ecx]; ret 0x1089; 
0x000b9dc6: adc eax, dword ptr [edi + 5]; pop edi; pop esi; pop ebx; ret; 
0x000b9dd6: adc eax, dword ptr [edi + 6]; pop edi; pop esi; pop ebx; ret; 
0x000b9d62: adc eax, dword ptr [edi - 1]; pop edi; pop esi; pop ebx; ret; 
0x000bb0b6: adc eax, dword ptr [edi]; lea eax, [edi + 8]; pop edi; pop esi; pop ebx; ret; 
0x000b99e9: adc eax, dword ptr [edi]; mov byte ptr [edi + 8], dl; pop edi; pop esi; pop ebx; ret; 
0x000b9a29: adc eax, dword ptr [edi]; mov dword ptr [edi + 7], edx; pop edi; pop esi; pop ebx; ret; 
0x000b9a49: adc eax, dword ptr [edi]; mov dword ptr [edi + 8], edx; pop edi; pop esi; pop ebx; ret; 
0x000b9a0a: adc eax, dword ptr [edi]; mov word ptr [edi + 8], dx; pop edi; pop esi; pop ebx; ret; 
0x000b9dc2: adc eax, dword ptr [edi]; movlpd qword ptr [edi + 5], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b9a6b: adc eax, dword ptr [edi]; movlpd qword ptr [edi + 5], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000b9dd2: adc eax, dword ptr [edi]; movlpd qword ptr [edi + 6], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b9a8b: adc eax, dword ptr [edi]; movlpd qword ptr [edi + 6], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000b9aab: adc eax, dword ptr [edi]; movlpd qword ptr [edi + 7], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000b99d6: adc eax, dword ptr [edi]; pop edi; pop esi; pop ebx; ret; 
0x000ba3ef: adc eax, dword ptr [edx + 5]; lea eax, [edx + 0xc]; pop edi; ret; 
0x000ba54f: adc eax, dword ptr [edx + 5]; lea eax, [edx + 0xc]; ret; 
0x000bff62: adc eax, dword ptr [edx + 5]; mov eax, edi; pop ebx; pop edi; ret; 
0x000b8daf: adc eax, dword ptr [edx + 5]; mov eax, edi; pop edi; ret; 
0x000b8f0f: adc eax, dword ptr [edx + 5]; mov eax, edx; ret; 
0x000ba40f: adc eax, dword ptr [edx + 6]; lea eax, [edx + 0xd]; pop edi; ret; 
0x000ba56f: adc eax, dword ptr [edx + 6]; lea eax, [edx + 0xd]; ret; 
0x000bff82: adc eax, dword ptr [edx + 6]; mov eax, edi; pop ebx; pop edi; ret; 
0x000b8dcf: adc eax, dword ptr [edx + 6]; mov eax, edi; pop edi; ret; 
0x000b8f2f: adc eax, dword ptr [edx + 6]; mov eax, edx; ret; 
0x000ba42f: adc eax, dword ptr [edx + 7]; lea eax, [edx + 0xe]; pop edi; ret; 
0x000ba58f: adc eax, dword ptr [edx + 7]; lea eax, [edx + 0xe]; ret; 
0x000bffa2: adc eax, dword ptr [edx + 7]; mov eax, edi; pop ebx; pop edi; ret; 
0x000b8def: adc eax, dword ptr [edx + 7]; mov eax, edi; pop edi; ret; 
0x000b8f4f: adc eax, dword ptr [edx + 7]; mov eax, edx; ret; 
0x000ba2be: adc eax, dword ptr [edx + 8]; lea eax, [edx + 0xf]; pop edi; ret; 
0x000ba5af: adc eax, dword ptr [edx + 8]; lea eax, [edx + 0xf]; ret; 
0x000b8c9e: adc eax, dword ptr [edx + 8]; mov eax, edi; pop edi; ret; 
0x000b8f6f: adc eax, dword ptr [edx + 8]; mov eax, edx; ret; 
0x000b892b: adc eax, dword ptr [edx]; lea eax, [edx + 7]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b59e6: adc eax, dword ptr [edx]; lea eax, [edx + 7]; pop edi; ret; 
0x000b5c26: adc eax, dword ptr [edx]; lea eax, [edx + 7]; ret; 
0x000b7811: adc eax, dword ptr [edx]; lea eax, [edx + 8]; pop edi; pop ebx; ret; 
0x000bd029: adc eax, dword ptr [edx]; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000bd049: adc eax, dword ptr [edx]; mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000b5af9: adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x000b5c39: adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000b1719: adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000b1859: adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000c0172: adc eax, dword ptr [edx]; mov byte ptr [edx + 8], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000b5b39: adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x000b5c79: adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000b1759: adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000b1899: adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000b5a29: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x000b5c99: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000b7849: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xc]; pop edi; pop ebx; ret; 
0x000b3459: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; pop ebx; ret; 
0x000b1669: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x000b43d2: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; pop ebx; ret; 
0x000b18b9: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000bd069: adc eax, dword ptr [edx]; mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000bd089: adc eax, dword ptr [edx]; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x001acda6: adc eax, dword ptr [edx]; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000bfda7: adc eax, dword ptr [edx]; mov eax, edi; pop ebx; pop edi; ret; 
0x000b3421: adc eax, dword ptr [edx]; mov eax, edi; pop edi; pop ebx; ret; 
0x000b1626: adc eax, dword ptr [edx]; mov eax, edi; pop edi; ret; 
0x000b444b: adc eax, dword ptr [edx]; mov eax, edx; pop ebx; ret; 
0x000b1846: adc eax, dword ptr [edx]; mov eax, edx; ret; 
0x000b5b1a: adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x000b5c5a: adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000b173a: adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000b187a: adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000b5b5b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000b5cbb: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000b177b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000b18db: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000b5b7b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; pop edi; ret; 
0x000b5cdb: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000b179b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x000b18fb: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000b5b9b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; pop edi; ret; 
0x000b5cfb: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000b17bb: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x000b437e: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; pop ebx; ret; 
0x000b191b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000b7886: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 8], xmm1; lea eax, [edx + 0x10]; pop edi; pop ebx; ret; 
0x000bfdfa: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop ebx; pop edi; ret; 
0x000b3496: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; pop ebx; ret; 
0x000bcf4a: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; ret; 
0x000ba3e6: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x000ba546: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000b8da6: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x000b8f06: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000ba406: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000ba566: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b8dc6: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000b8f26: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000ba426: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000ba586: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b8de6: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000b8f46: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000ba2b5: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000ba5a6: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b8c95: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000b8f66: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x0005aaac: adc eax, edi; add byte ptr [edi], ch; jbe 0x5aa3d; ret 0x40c7; 
0x000c0cd2: adc ebx, dword ptr [eax + 0xe]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd84f: adc ebx, dword ptr [eax + 0xe]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0cf2: adc ebx, dword ptr [eax + 0xf]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd86f: adc ebx, dword ptr [eax + 0xf]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0008bcd0: adc ebx, dword ptr [ebx + 0x5e]; pop edi; ret; 
0x0014b185: adc ebx, dword ptr [ebx - 7]; call dword ptr [eax - 0x18]; 
0x000bb200: adc ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x000d978c: adc ebx, dword ptr [edi + 0x5e]; ret; 
0x000b9b7f: adc ebx, dword ptr [edi + 0xe]; pop edi; pop esi; pop ebx; ret; 
0x000bb27f: adc ebx, dword ptr [edi + 0xf]; lea eax, [edi + 0x17]; pop edi; pop esi; pop ebx; ret; 
0x000b9b9f: adc ebx, dword ptr [edi + 0xf]; pop edi; pop esi; pop ebx; ret; 
0x001609af: adc ebx, ebp; ret 0xb68d; 
0x000867c8: adc ebx, ebx; stc; jmp dword ptr [esi - 0x70]; 
0x00039e29: adc ecx, 0x2e; stc; call dword ptr [eax - 0x18]; 
0x00066498: adc ecx, dword ptr [eax + 0x5f5e5b08]; ret; 
0x000c0bb2: adc ecx, dword ptr [eax + 5]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd73f: adc ecx, dword ptr [eax + 5]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0bd2: adc ecx, dword ptr [eax + 6]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd75f: adc ecx, dword ptr [eax + 6]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0bf2: adc ecx, dword ptr [eax + 7]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd77f: adc ecx, dword ptr [eax + 7]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000fdba4: adc ecx, dword ptr [eax - 7]; call dword ptr [eax + 0x55]; 
0x0005d62b: adc ecx, dword ptr [ebp + 0x7ff49794]; clc; call dword ptr [edx + 0x51]; 
0x000bad73: adc ecx, dword ptr [ebp - 0x7af0ec81]; mov dword ptr [0x5f000007], eax; pop esi; pop ebx; ret; 
0x000361ab: adc ecx, dword ptr [ebp - 0x7affd98c]; sal byte ptr [ebp + 0x2a], 0x83; ret; 
0x00141c3b: adc ecx, dword ptr [ebp - 0x7cf3f7b4]; ror byte ptr [esi], 0x85; sal byte ptr [ebx + 0x39], cl; ret 0x4572; 
0x00091481: adc ecx, dword ptr [ecx + 0x3e8c1d0]; je 0x914b8; mov eax, edi; call dword ptr gs:[0x10]; 
0x00072979: adc ecx, dword ptr [ecx + 0x5f5e5b38]; ret; 
0x000e8889: adc ecx, dword ptr [ecx - 0x16fbdbbc]; jge 0xe88ab; cld; jmp dword ptr [esi - 0x70]; 
0x000e9fa9: adc ecx, dword ptr [ecx - 0x16fbdbbc]; lodsd eax, dword ptr [esi]; xor ah, bh; jmp dword ptr [esi - 0x70]; 
0x00085c79: adc ecx, dword ptr [ecx - 0x3b7cfbad]; add al, 0x5b; pop esi; ret; 
0x00068692: adc ecx, dword ptr [ecx - 0x5db73]; jmp dword ptr [esi - 0x77]; 
0x00065af8: adc ecx, dword ptr [ecx - 0x7b9fdbbc]; ror byte ptr [edi], cl; test bl, cl; add dword ptr [eax], eax; add byte ptr [eax - 0x7bf08006], al; ret 1; 
0x000bb14f: adc ecx, dword ptr [edi + 5]; lea eax, [edi + 0xd]; pop edi; pop esi; pop ebx; ret; 
0x000b9a6f: adc ecx, dword ptr [edi + 5]; pop edi; pop esi; pop ebx; ret; 
0x000b9a8f: adc ecx, dword ptr [edi + 6]; pop edi; pop esi; pop ebx; ret; 
0x000b9aaf: adc ecx, dword ptr [edi + 7]; pop edi; pop esi; pop ebx; ret; 
0x0014cf45: adc ecx, dword ptr [edi]; mov dh, 0x53; add dword ptr [ecx - 0x72e3dbbc], ecx; inc ebx; add dword ptr [eax - 0x7bf0c406], eax; ret 1; 
0x00147404: adc ecx, dword ptr [edi]; mov edi, 0x39fe5f4c; sar dword ptr [eax], 0xf; dec edi; ret; 
0x000bad76: adc ecx, dword ptr [edi]; test dword ptr [ebx + 0x5f000007], esp; pop esi; pop ebx; ret; 
0x000913d5: adc ecx, dword ptr [edi]; xchg esp, eax; ret 0xb60f; 
0x00091b55: adc ecx, dword ptr [edi]; xchg esp, eax; ret 0xc689; 
0x000b5b5f: adc ecx, dword ptr [edx + 5]; lea eax, [edx + 0xc]; pop edi; ret; 
0x000b5cbf: adc ecx, dword ptr [edx + 5]; lea eax, [edx + 0xc]; ret; 
0x000b177f: adc ecx, dword ptr [edx + 5]; mov eax, edi; pop edi; ret; 
0x000b18df: adc ecx, dword ptr [edx + 5]; mov eax, edx; ret; 
0x000b5b7f: adc ecx, dword ptr [edx + 6]; lea eax, [edx + 0xd]; pop edi; ret; 
0x000b5cdf: adc ecx, dword ptr [edx + 6]; lea eax, [edx + 0xd]; ret; 
0x000b179f: adc ecx, dword ptr [edx + 6]; mov eax, edi; pop edi; ret; 
0x000b18ff: adc ecx, dword ptr [edx + 6]; mov eax, edx; ret; 
0x000b5b9f: adc ecx, dword ptr [edx + 7]; lea eax, [edx + 0xe]; pop edi; ret; 
0x000b5cff: adc ecx, dword ptr [edx + 7]; lea eax, [edx + 0xe]; ret; 
0x000b17bf: adc ecx, dword ptr [edx + 7]; mov eax, edi; pop edi; ret; 
0x000b4382: adc ecx, dword ptr [edx + 7]; mov eax, edx; pop ebx; ret; 
0x000b191f: adc ecx, dword ptr [edx + 7]; mov eax, edx; ret; 
0x000b788a: adc ecx, dword ptr [edx + 8]; lea eax, [edx + 0x10]; pop edi; pop ebx; ret; 
0x000c01ce: adc ecx, dword ptr [edx + 8]; mov byte ptr [edx + 0x10], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000bfdfe: adc ecx, dword ptr [edx + 8]; mov eax, edi; pop ebx; pop edi; ret; 
0x000b349a: adc ecx, dword ptr [edx + 8]; mov eax, edi; pop edi; pop ebx; ret; 
0x000bcf4e: adc ecx, dword ptr [edx + 8]; mov eax, edi; pop edi; ret; 
0x0014156e: adc ecx, eax; call 0x1fc9878; mov byte ptr [edx + 1], al; mov eax, 2; ret; 
0x0016ebeb: adc ecx, esi; cld; call dword ptr [eax - 0x4e1f00d]; ret; 
0x00158fb4: adc edi, 0x5e; stc; call dword ptr [eax - 0x18]; 
0x00142e5f: adc edi, dword ptr [ecx]; ret 0x6c74; 
0x000bd51c: adc edi, eax; or al, 0; add ecx, 0x10fa54; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00032036: adc edi, edi; jmp dword ptr [ebp - 0x75]; 
0x0017c9ee: adc edi, esp; jmp dword ptr [esi - 0x70]; 
0x00040773: adc edx, 0; neg edx; cmovs edx, ebx; cmovs eax, ecx; pop ebx; ret; 
0x000253d1: adc edx, 0; neg edx; ret; 
0x001238be: adc edx, 0; ret; 
0x000eda7c: adc edx, dword ptr [0x89535600]; ret; 
0x000c0d35: adc edx, dword ptr [eax + 0x10]; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd8af: adc edx, dword ptr [eax + 0x10]; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0d95: adc edx, dword ptr [eax + 0x10]; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd8f2: adc edx, dword ptr [eax + 0x10]; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0dc5: adc edx, dword ptr [eax + 0x10]; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd912: adc edx, dword ptr [eax + 0x10]; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0d12: adc edx, dword ptr [eax + 0x10]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd88f: adc edx, dword ptr [eax + 0x10]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0d66: adc edx, dword ptr [eax + 0x10]; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd8d3: adc edx, dword ptr [eax + 0x10]; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bb29f: adc edx, dword ptr [edi + 0x10]; lea eax, [edi + 0x18]; pop edi; pop esi; pop ebx; ret; 
0x000b9be2: adc edx, dword ptr [edi + 0x10]; mov byte ptr [edi + 0x18], cl; pop edi; pop esi; pop ebx; ret; 
0x000b9c22: adc edx, dword ptr [edi + 0x10]; mov dword ptr [edi + 0x17], ecx; pop edi; pop esi; pop ebx; ret; 
0x000b9c42: adc edx, dword ptr [edi + 0x10]; mov dword ptr [edi + 0x18], ecx; pop edi; pop esi; pop ebx; ret; 
0x000b9c03: adc edx, dword ptr [edi + 0x10]; mov word ptr [edi + 0x18], cx; pop edi; pop esi; pop ebx; ret; 
0x000b9bbf: adc edx, dword ptr [edi + 0x10]; pop edi; pop esi; pop ebx; ret; 
0x0008e565: adc edx, dword ptr [esi + 0x50]; push ecx; call edx; 
0x00166ed3: adc esi, 0x61; stc; call dword ptr [eax - 0x18]; 
0x0008eb7a: adc esi, dword ptr [ebp + 0x43]; xor eax, eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x0009b607: adc esi, dword ptr [ebp + 0xe]; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0009b94f: adc esi, dword ptr [ebp + 0xe]; add esp, 8; xor eax, eax; pop ebx; ret; 
0x00137b09: adc esi, dword ptr [ebx - 0x3b7c0008]; adc byte ptr [ebx - 0x3f7c2bb3], cl; sbb al, 0x89; out 0x89, al; ret; 
0x0013d3fd: adc esi, edi; inc dword ptr [ebx - 0x3f7aef3c]; je 0x13d410; add esp, 8; pop ebx; ret; 
0x000d2c71: adc esi, esi; dec dword ptr [ebp - 0x661ff7d]; call dword ptr [eax - 0x73]; 
0x00082cac: adc esi, esi; ret 0x7502; 
0x00082c0a: adc esi, esi; ret 0xf08; 
0x0013d274: adc esi, esi; ret 0xf20; 
0x000a6044: adc esp, 0x43; stc; call dword ptr [eax - 0x18]; 
0x0011e047: adc esp, 4; stc; dec dword ptr [edi]; inc ebp; ret 0x4489; 
0x0013f5ff: add ah, 0; add byte ptr [eax], al; add eax, dword ptr gs:[0]; ret; 
0x00184016: add ah, 0x66; stc; call dword ptr [eax - 0x18]; 
0x000c3e5e: add ah, 0x9b; stc; call dword ptr [eax - 0x73]; 
0x000a606a: add ah, al; clc; jmp dword ptr [esi - 0x70]; 
0x00065114: add ah, al; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [ecx + edx*4 - 0x73f14]; jmp eax; 
0x0006589e: add ah, al; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [edi + edx*4]; mov edi, ecx; jmp eax; 
0x00066026: add ah, al; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [esi + edx*4 - 0x74014]; jmp eax; 
0x000650b0: add ah, al; mov eax, dword ptr [esp + 0x20]; add edi, dword ptr [eax + edx*4 - 0x73f94]; mov edx, edi; mov edi, ecx; jmp edx; 
0x00064bf0: add ah, al; mov eax, dword ptr [esp + 0x20]; add edi, dword ptr [eax + edx*4 - 0x74094]; mov edx, edi; mov edi, ecx; jmp edx; 
0x00064b9f: add ah, al; mov eax, dword ptr [esp + 0x4c]; add edi, dword ptr [eax + edx*4]; mov edx, edi; mov edi, ecx; jmp edx; 
0x00109c77: add ah, bh; dec dword ptr [ecx]; retf 0x5489; ret; 
0x00124087: add ah, bl; mov al, 0x94; ret 0xfff9; 
0x0005b71e: add ah, byte ptr [eax]; je 0x5b730; add esp, 0xc; ret; 
0x000790ce: add ah, byte ptr [eax]; je 0x790e0; add esp, 0xc; ret; 
0x0013722b: add ah, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x00042cca: add ah, byte ptr [ecx - 0x3b7cffea]; sbb byte ptr [ecx + 0x10b8c2], cl; add byte ptr [eax], al; pop ebx; sub eax, edx; ret; 
0x001496ea: add ah, byte ptr [ecx]; add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x001672ea: add ah, byte ptr [edx - 7]; call dword ptr [eax - 0x18]; 
0x001672ea: add ah, byte ptr [edx - 7]; call dword ptr [eax - 0x18]; dec esp; fsin; jmp dword ptr [ebp - 0x75]; 
0x0004a97f: add ah, byte ptr [edx]; add byte ptr [eax], al; add byte ptr [ebx - 0x7af3dbac], cl; sal byte ptr [esp + edi - 0x27], cl; test dword ptr [eax], edx; ret 0xfff9; 
0x0004a836: add ah, byte ptr [edx]; add byte ptr [eax], al; add byte ptr [ebx - 0x7af3dbbc], cl; sal byte ptr [ebp + 0x2d], 0xd9; test dword ptr [eax], eax; ret 0xfff9; 
0x000ba3e7: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x000ba547: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000b8da7: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x000b8f07: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000ba407: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000ba567: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b8dc7: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000b8f27: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000ba427: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000ba587: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b8de7: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000b8f47: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000ba2b6: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000ba5a7: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b8c96: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000b8f67: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000b5b5c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 5]; lea eax, [edx + 0xc]; pop edi; ret; 
0x000b5cbc: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 5]; lea eax, [edx + 0xc]; ret; 
0x000b177c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 5]; mov eax, edi; pop edi; ret; 
0x000b18dc: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 5]; mov eax, edx; ret; 
0x000b5b7c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 6]; lea eax, [edx + 0xd]; pop edi; ret; 
0x000b5cdc: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 6]; lea eax, [edx + 0xd]; ret; 
0x000b179c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 6]; mov eax, edi; pop edi; ret; 
0x000b18fc: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 6]; mov eax, edx; ret; 
0x000b5b9c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 7]; lea eax, [edx + 0xe]; pop edi; ret; 
0x000b5cfc: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 7]; lea eax, [edx + 0xe]; ret; 
0x000b17bc: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 7]; mov eax, edi; pop edi; ret; 
0x000b437f: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 7]; mov eax, edx; pop ebx; ret; 
0x000b191c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 7]; mov eax, edx; ret; 
0x000b7887: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 8]; lea eax, [edx + 0x10]; pop edi; pop ebx; ret; 
0x000bfdfb: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 8]; mov eax, edi; pop ebx; pop edi; ret; 
0x000b3497: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 8]; mov eax, edi; pop edi; pop ebx; ret; 
0x000bcf4b: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 8]; mov eax, edi; pop edi; ret; 
0x0014d8ac: add ah, byte ptr [esi - 0x3f]; ret 0xf08; 
0x000c2530: add ah, byte ptr [esi - 0x5b]; rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000c2599: add ah, byte ptr [esi - 0x5b]; rep movsd dword ptr es:[edi], dword ptr [esi]; xchg edi, eax; mov esi, edx; ret; 
0x000b5c03: add ah, byte ptr [esi - 0x75]; inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; ret; 
0x000b1823: add ah, byte ptr [esi - 0x75]; inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x000b9985: add ah, byte ptr [esi - 0x77]; js 0x5e6a9be5; pop ebx; ret; 
0x0003d26d: add ah, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x0012e288: add ah, byte ptr [esi]; je 0x12e2b6; mov eax, 0xffffffff; add esp, 8; pop ebx; ret; 
0x000ea11f: add ah, dh; mov eax, edx; call dword ptr gs:[0x10]; 
0x0017671b: add al, 0; add al, ch; sbb eax, 0x8900002c; ret; 
0x000c31ea: add al, 0; add al, ch; scasb al, byte ptr es:[edi]; push ebp; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00163361: add al, 0; add bh, bh; je 0x16338b; or al, 0x55; call edi; 
0x000a3de9: add al, 0; add bl, ch; ret 0x9066; 
0x00166d2b: add al, 0; add byte ptr [eax - 0x73], dl; add dword ptr [esp], 0; add byte ptr [eax - 0x73], dl; sub dword ptr [ecx + eax*4], -0xe; call dword ptr [eax - 0x18]; 
0x000ebaf6: add al, 0; add byte ptr [eax - 0x73], dl; and dword ptr [eax], 0xffffff9f; stc; call dword ptr [eax - 0x18]; 
0x001641f9: add al, 0; add byte ptr [eax - 0x73], dl; sbb dword ptr [eax + 0x500000a2], -0x73; cmp esp, 0x55; bnd call dword ptr [eax - 0x18]; 
0x00062a8b: add al, 0; add byte ptr [eax - 0x73], dl; xchg byte ptr [ebp + edi*2 - 7], al; call dword ptr [eax - 0x18]; 
0x0004a2c3: add al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + esi*2 - 7], ebx; call dword ptr [eax - 0x18]; 
0x0004a1ea: add al, 0; add byte ptr [eax - 0x73], dl; xchg eax, ebx; jbe 0x4a1ec; call dword ptr [eax - 0x18]; 
0x0004d457: add al, 0; add byte ptr [eax - 0x73], dl; xchg eax, ebx; jbe 0x4d459; call dword ptr [eax - 0x18]; 
0x00051390: add al, 0; add byte ptr [eax - 0x73], dl; xchg eax, ebx; jbe 0x51392; call dword ptr [eax - 0x18]; 
0x00059d5b: add al, 0; add byte ptr [eax - 0x73], dl; xchg eax, ebx; jbe 0x59d5d; call dword ptr [eax - 0x18]; 
0x00150d81: add al, 0; add byte ptr [eax - 0x73], dl; xor dword ptr [edi + ebp*4], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000a0f00: add al, 0; add byte ptr [eax], al; add byte ptr [ebp + 0x39b774d2], al; ret 0xb374; 
0x000909f0: add al, 0; add byte ptr [eax], al; add byte ptr [ecx - 0x3fcef3b0], cl; pop ebx; ret; 
0x00187caf: add al, 0; add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x21eb; 
0x00055d68: add al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x00115640: add al, 0; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x001898f5: add al, 0; add byte ptr [eax], al; add esp, 0xc; ret; 
0x000a0017: add al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00023002: add al, 0; add byte ptr [eax], al; jmp dword ptr [ebx + 8]; 
0x00121948: add al, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001abb8e: add al, 0; add byte ptr [eax], al; pop edi; ret; 
0x000d9a21: add al, 0; add byte ptr [eax], al; ret; 
0x0016e7e6: add al, 0; add byte ptr [ebp - 0x69d6a7d], cl; call dword ptr [eax - 0x18]; 
0x00125d13: add al, 0; add byte ptr [ebp - 0x6b53f80], cl; jmp dword ptr [ebp - 0x75]; 
0x0007890e: add al, 0; add byte ptr [ebp - 0x6ccf87a], cl; call dword ptr [eax - 0x73]; 
0x00176472: add al, 0; add byte ptr [ebp - 0x74d7dbb4], cl; push eax; add al, 0x51; push eax; call dword ptr [edx + 8]; 
0x000a6659: add al, 0; add byte ptr [ebx + 0x39242444], cl; ret; 
0x001479d1: add al, 0; add byte ptr [ebx + 0x3934246c], cl; ret 0x470f; 
0x0017760b: add al, 0; add byte ptr [ebx + 0x458b0cec], al; cmp al, 0x57; call dword ptr [eax + 0x10]; 
0x00023468: add al, 0; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0005ab61: add al, 0; add byte ptr [ebx + 0x5e], bl; ret; 
0x0010d52b: add al, 0; add byte ptr [ebx - 0x1477b], cl; jmp dword ptr [ebp - 0x75]; 
0x000a4077: add al, 0; add byte ptr [ebx - 0x14f3db94], cl; jnp 0x599550ce; add al, 0xf6; ret; 
0x000587df: add al, 0; add byte ptr [ebx - 0x36677b], al; jmp eax; 
0x0011e657: add al, 0; add byte ptr [ebx - 0x47dfdba4], cl; mov bh, 0; add byte ptr [eax], al; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00183580: add al, 0; add byte ptr [ebx - 0x4c72f714], al; mov ah, byte ptr [esi - 7]; call dword ptr [esi + 0x57]; 
0x00126f27: add al, 0; add byte ptr [ebx - 0x7c72f714], al; push ebp; push ecx; stc; call dword ptr [eax + 0x55]; 
0x00050be5: add al, 0; add byte ptr [ebx - 0x7cdfdb84], cl; jmp dword ptr [eax]; 
0x00135310: add al, 0; add byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x000f1967: add al, 0; add byte ptr [ecx - 0x46f7b], cl; dec dword ptr [ebx + 0x458b084d]; adc byte ptr [ecx - 0x46b73], cl; dec dword ptr [ecx - 0x4737b]; jmp dword ptr [ebp - 0x75]; 
0x0012bbea: add al, 0; add byte ptr [ecx - 0x4937b], cl; call dword ptr [eax - 0x18]; 
0x0015a040: add al, 0; add byte ptr [ecx - 0x74dbdbbc], cl; test byte ptr [eax + edx*4], ah; add al, 0; add byte ptr [ecx - 0x76cbdbbc], cl; ret; 
0x0015a04b: add al, 0; add byte ptr [ecx - 0x76cbdbbc], cl; ret; 
0x0013b80f: add al, 0; add byte ptr [ecx], al; call eax; 
0x0007114a: add al, 0; add byte ptr [ecx], al; ret; 
0x001479a3: add al, 0; add byte ptr [ecx], bh; ret 0x1988; 
0x00179ef4: add al, 0; add byte ptr [ecx], bh; ret 0x4e0f; 
0x00066a35: add al, 0; add byte ptr [ecx], bh; ret; 
0x000a9b07: add al, 0; add byte ptr [ecx], ch; fdivr dword ptr [ecx]; fmul dword ptr [edi]; inc edx; ret; 
0x0013e9ef: add al, 0; add byte ptr [ecx], ch; ret 0xc031; 
0x00049aa0: add al, 0; add byte ptr [ecx], dh; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000b994b: add al, 0; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x001376ec: add al, 0; add byte ptr [edx], al; call eax; 
0x00083475: add al, 0; add byte ptr [edx], ch; push edx; push eax; push esi; call dword ptr [ebx + 0x40]; 
0x00089685: add al, 0; add byte ptr [edx], ch; push edx; push eax; push esi; call dword ptr [ecx + 0x40]; 
0x000f137b: add al, 0; add byte ptr [esi - 0x70], ah; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5b4]; call dword ptr [eax + 0x14]; 
0x000f85fb: add al, 0; add byte ptr [esi - 0x70], ah; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5d0]; push dword ptr [ebp - 0x5c4]; call dword ptr [eax + 0x14]; 
0x0010d4ea: add al, 0; add dh, dh; ret 0xf20; 
0x0010d4f3: add al, 0; add dh, dh; ret 0xf80; 
0x0014e80e: add al, 0; add dh, dh; ret; 
0x0013f5f7: add al, 0; add eax, 0xff81b; mov eax, dword ptr [eax + 0xc4]; add eax, dword ptr gs:[0]; ret; 
0x00193249: add al, 0; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00194c43: add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194ca8: add al, 0; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0003d507: add al, 0; je 0x3d520; lea ecx, [eax + 1]; mov dword ptr [edx + 0x1f4], ecx; ret; 
0x000abee6: add al, 0; mov dword ptr [edx], eax; lea eax, [edx + 4]; pop ebx; pop esi; ret; 
0x000abe26: add al, 0; mov dword ptr [edx], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x000efa5a: add al, 0; nop; nop; mov eax, 0xca; call dword ptr gs:[0x10]; 
0x000efa5a: add al, 0; nop; nop; mov eax, 0xca; call dword ptr gs:[0x10]; ret; 
0x000ecc21: add al, 0; or byte ptr [edi], 0xa3; ret 0x830f; 
0x000797f5: add al, 0x11; add byte ptr [ecx + 0x1c561cc6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x00190498: add al, 0x11; add esp, 4; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x00157a16: add al, 0x11; add esp, 4; pop ebx; pop esi; ret; 
0x00061350: add al, 0x11; mov eax, 0xffffffff; pop ebx; pop esi; pop edi; ret; 
0x0009f838: add al, 0x11; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0003c9c0: add al, 0x11; mov eax, 0xffffffff; pop ebx; ret; 
0x00024f6f: add al, 0x11; mov eax, 0xffffffff; ret; 
0x0008e94c: add al, 0x1b; add byte ptr [ebx - 0x7cfbdbbc], cl; cmp byte ptr [ecx], al; je 0x8e960; ret; 
0x000a03d6: add al, 0x1b; mov ebx, dword ptr [eax]; mov ecx, dword ptr [esp + 0x64]; mov esi, dword ptr [esp + 4]; mov eax, 0x199; call dword ptr gs:[0x10]; 
0x00054e74: add al, 0x24; add eax, 0xd; add esp, 4; jmp eax; 
0x0005516a: add al, 0x24; add esp, 0xc; ret; 
0x0003c233: add al, 0x24; add esp, 4; ret; 
0x0003bf93: add al, 0x24; add esp, 8; ret; 
0x00188ad2: add al, 0x24; call 0x231a0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0017814e: add al, 0x24; call dword ptr [edx + 0x10]; 
0x0015a0ab: add al, 0x24; call eax; 
0x000a075e: add al, 0x24; call esi; 
0x0005519d: add al, 0x24; fld dword ptr [esp]; add esp, 4; ret; 
0x00033a87: add al, 0x24; mov dword ptr [eax + esi*4], ecx; mov eax, dword ptr [ebx + esi*4 - 0x814]; test eax, eax; je 0x33a99; call eax; 
0x0003c19a: add al, 0x24; mov dword ptr [edx], eax; add esp, 4; ret; 
0x00131f05: add al, 0x24; mov eax, dword ptr [esp + 0x38]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000535f1: add al, 0x24; ret; 
0x000795b8: add al, 0x29; fidiv word ptr [ebx + eax*2 - 0x75]; pop ebp; or byte ptr [ecx], bh; ret; 
0x00149d3c: add al, 0x29; fidivr dword ptr [ecx]; ret 0x8e0f; 
0x0005e014: add al, 0x29; fmul dword ptr [ebx - 0x8b63]; call dword ptr [eax - 0x75]; 
0x000792a8: add al, 0x29; fnsave dword ptr [ebx + eax*2 - 0x75]; pop edi; or byte ptr [ecx], bh; ret; 
0x00088e17: add al, 0x29; ret 0x5052; 
0x00174c06: add al, 0x29; ret 0xd285; 
0x001878c4: add al, 0x29; ret 0xea39; 
0x00082dac: add al, 0x29; ret 0xfac1; 
0x00031516: add al, 0x29; ret; 
0x000f1f43: add al, 0x29; ror byte ptr [ecx - 0x49f7b], 1; call dword ptr [eax + 0x6a]; 
0x001370b3: add al, 0x2b; inc ebx; add al, 0x5b; pop esi; pop edi; ret; 
0x00035120: add al, 0x2b; inc ebx; add al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00187749: add al, 0x2b; inc ebx; add al, 0x83; ret; 
0x00189433: add al, 0x2b; inc edi; add al, 0x8d; push 0x24448909; and al, 0x89; ret; 
0x00178ebe: add al, 0x30; add byte ptr [eax + 1], bh; pop ebx; pop esi; pop edi; ret; 
0x0007fb59: add al, 0x31; pop esi; pop edi; pop ebp; ret; 
0x00042004: add al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x0008c9f7: add al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x001723b2: add al, 0x31; ret 0xd889; 
0x00156587: add al, 0x31; rol byte ptr [ebx + 0x108704c0], cl; cmp edx, 1; jg 0x156598; ret; 
0x000a9522: add al, 0x31; rol byte ptr [ebx + 0x77740fa], 0x8b; test byte ptr [ecx - 0xd14], dl; ret; 
0x000a94f2: add al, 0x31; rol byte ptr [ebx + 0x77740fa], 0x8b; test byte ptr [ecx - 0xe34], dl; ret; 
0x00133b87: add al, 0x31; ror byte ptr [ebx + 0x3980044a], 0; je 0x133b98; ret; 
0x000d9a67: add al, 0x31; ror byte ptr [ebx + 0x75c9850a], 0x22; ret; 
0x000decda: add al, 0x31; sar byte ptr [0xa3d70b], cl; setb dl; add edx, 0x16d; mov eax, edx; ret; 
0x0010d5a2: add al, 0x31; sar byte ptr [eax + 0x1b4], cl; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x0002326e: add al, 0x31; sar byte ptr [ebx + 1], cl; mov esi, 8; mov dword ptr [ebp + 0x137c], 1; call dword ptr gs:[0x10]; 
0x0014983c: add al, 0x37; add byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x000aba9e: add al, 0x39; fdiv dword ptr [ebp - 0x13]; mov eax, edx; pop ebx; pop esi; ret; 
0x000aba5a: add al, 0x39; fdiv dword ptr [ebp - 0xf]; mov eax, edx; pop ebx; ret; 
0x000dc4ca: add al, 0x39; ret 0x45c7; 
0x0005ffd8: add al, 0x39; ret 0x4d0f; 
0x00094757: add al, 0x39; ret 0x6f72; 
0x001b33b5: add al, 0x39; ret 0x774; 
0x00028f13: add al, 0x39; ret 0x840f; 
0x001b0dc8: add al, 0x39; ret 0x850f; 
0x000d37b9: add al, 0x39; ret 0x8f0f; 
0x00028e56: add al, 0x39; ret 0x9173; 
0x0018b289: add al, 0x39; ret 0x9174; 
0x00187692: add al, 0x39; ret 0xc919; 
0x000c950c: add al, 0x39; ret 0xee72; 
0x001006b4: add al, 0x39; ret 0xf775; 
0x000485c8: add al, 0x39; ret; 
0x0008d329: add al, 0x39; retf 0x2273; movzx eax, byte ptr [edx]; pop ebx; pop esi; ret; 
0x000c4d85: add al, 0x39; retf 0x474; test edx, edx; jne 0xc4d80; ret; 
0x00055b58: add al, 0x39; sal dword ptr [ebp - 0xd], 0x8b; push ebp; or al, 0xf7; ret 0; 
0x000fba57: add al, 0x3b; push ebx; add al, 0x74; xor dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x000fa8c0: add al, 0x3c; aas; jne 0xfa8d9; mov eax, 1; ret; 
0x0015ebe4: add al, 0x3c; jg 0x15ebf7; inc esp; ret 0x8489; 
0x00141782: add al, 0x3e; pop ebx; pop esi; pop edi; ret; 
0x000fdfd4: add al, 0x42; add dword ptr [esi + ecx - 0x77], esi; ret; 
0x00125d17: add al, 0x4a; stc; jmp dword ptr [ebp - 0x75]; 
0x00034504: add al, 0x50; and eax, 0x1000; ret; 
0x000344d4: add al, 0x50; and eax, 0x100; ret; 
0x000344a4: add al, 0x50; and eax, 0x2000; ret; 
0x000343e4: add al, 0x50; and eax, 0x200; ret; 
0x00034444: add al, 0x50; and eax, 0x4000; ret; 
0x00034354: add al, 0x50; and eax, 0x400; ret; 
0x00034414: add al, 0x50; and eax, 0x8000; ret; 
0x000343b4: add al, 0x50; and eax, 0x800; ret; 
0x000345b4: add al, 0x50; and eax, 1; ret; 
0x00034384: add al, 0x50; and eax, 2; ret; 
0x00034474: add al, 0x50; and eax, 4; ret; 
0x00034324: add al, 0x50; and eax, 8; ret; 
0x0016f1d5: add al, 0x50; call dword ptr [ecx + 0x10]; 
0x0016f37e: add al, 0x50; call dword ptr [edx + 0x10]; 
0x001781dc: add al, 0x50; call dword ptr [edx + 0x14]; 
0x00156bc0: add al, 0x50; call edi; 
0x0017c293: add al, 0x50; push dword ptr [esp + 0x1c]; call 0x17c100; add esp, 0x1c; ret; 
0x0008051d: add al, 0x50; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x72920; add esp, 0x1c; ret; 
0x00024e21: add al, 0x50; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call esi; 
0x0008a142: add al, 0x50; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x0017c07c: add al, 0x50; push ecx; push esi; call dword ptr [edx + 0xc]; 
0x0017c0b5: add al, 0x50; push ecx; push esi; call dword ptr [edx + 8]; 
0x000834dc: add al, 0x50; push edx; push esi; call ecx; 
0x0012c569: add al, 0x51; push 3; push ebx; call edx; 
0x0017647b: add al, 0x51; push eax; call dword ptr [edx + 8]; 
0x00089775: add al, 0x51; push eax; push esi; call edx; 
0x00179065: add al, 0x51; push edi; call dword ptr [eax + 8]; 
0x0017c7bb: add al, 0x51; push edx; call dword ptr [eax + 0x24]; 
0x0017bd0b: add al, 0x51; push edx; call dword ptr [eax + 4]; 
0x00083ec0: add al, 0x52; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x0008a3aa: add al, 0x52; push dword ptr [esp + 0x3c]; push ebp; call dword ptr [esi + 0x20]; 
0x0017145d: add al, 0x52; push ebx; call dword ptr [eax + 4]; 
0x0017149c: add al, 0x52; push ebx; call dword ptr [eax]; 
0x0016f610: add al, 0x53; call dword ptr [eax + 0x10]; 
0x0016f7d3: add al, 0x53; call dword ptr [eax]; 
0x0007e516: add al, 0x53; push dword ptr [ebp - 0x1c]; push esi; call dword ptr [eax + 0x2c]; 
0x0007c0e7: add al, 0x53; push dword ptr [esp + 0x1c]; push dword ptr [esi + 0x98]; call eax; 
0x00079487: add al, 0x53; push edi; push eax; call dword ptr [ebp + 0x1c]; 
0x0017c153: add al, 0x53; push esi; call dword ptr [eax + 4]; 
0x00042223: add al, 0x53; xor edx, edx; lea ecx, [eax + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x00087b8e: add al, 0x55; push edi; push ebx; call dword ptr [esi + 0x3c]; 
0x00038dc4: add al, 0x56; or byte ptr [ecx + edx - 0x7d], dh; ljmp 0xfa83:0x1c18330; or dword ptr [edi], ecx; xchg esi, eax; ret 0xb60f; 
0x0007de14: add al, 0x56; push dword ptr [ebp + 8]; push edx; call dword ptr [ebx + 0x1c]; 
0x00087960: add al, 0x56; push dword ptr [esp + 0x38]; push ebp; call dword ptr [eax + 0x1c]; 
0x0007f9f1: add al, 0x56; push dword ptr [esp + 0x38]; push edi; call dword ptr [eax + 0x1c]; 
0x00024ee2: add al, 0x56; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x00087ae0: add al, 0x56; push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x001754d5: add al, 0x56; push ebx; call dword ptr [eax + 0x24]; 
0x0007d572: add al, 0x56; push ecx; push ebx; call dword ptr [ebp + 0x1c]; 
0x0007fd38: add al, 0x56; push edx; push ebx; call dword ptr [ebp + 0x1c]; 
0x00179073: add al, 0x57; call dword ptr [eax + 0x10]; 
0x0012c511: add al, 0x57; push 0; push ebx; call esi; 
0x0012c525: add al, 0x57; push 1; push ebx; call esi; 
0x0012c538: add al, 0x57; push 2; push ebx; call esi; 
0x0007f8fa: add al, 0x57; push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x0007c447: add al, 0x57; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x0016fb28: add al, 0x5a; push edi; push ebx; call dword ptr [eax + 0x14]; 
0x001261a0: add al, 0x5b; mov eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x00082bd8: add al, 0x5b; pop esi; jmp eax; 
0x0014a93c: add al, 0x5b; pop esi; mov eax, edx; pop edi; pop ebp; ret; 
0x0018b97b: add al, 0x5b; pop esi; pop edi; movzx eax, byte ptr [eax]; ret; 
0x00039fbf: add al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x0005b501: add al, 0x5b; pop esi; pop edi; ret; 
0x00026043: add al, 0x5b; pop esi; ret; 
0x0002505a: add al, 0x5b; pop esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0003c9ab: add al, 0x5b; ret; 
0x001a5b3b: add al, 0x5d; pop ebx; ret; 
0x001a5b42: add al, 0x5e; pop edi; pop ebp; pop ebx; xor eax, eax; ret; 
0x0009087b: add al, 0x5e; pop edi; ret; 
0x0019b3e0: add al, 0x5f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001994da: add al, 0x5f; call 0x189c1d; add ebx, 0x425cf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019748a: add al, 0x5f; call 0x189c1d; add ebx, 0x4439f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019548a: add al, 0x5f; call 0x189c1d; add ebx, 0x4611f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00137150: add al, 0x5f; or byte ptr [ebx + ebp*8 + 0x5b], dh; mov eax, ecx; pop esi; pop edi; ret; 
0x0009739c: add al, 0x5f; pop ebp; ret; 
0x000b77e3: add al, 0x5f; pop ebx; ret; 
0x000b99a9: add al, 0x5f; pop esi; pop ebx; ret; 
0x000b5abc: add al, 0x5f; ret; 
0x001702ea: add al, 0x64; stc; call dword ptr [eax - 0x73]; 
0x001219fa: add al, 0x65; call dword ptr [0x10]; pop ebp; pop edi; pop ebx; ret; 
0x0008e764: add al, 0x65; mov edx, dword ptr [0x78]; mov dword ptr [eax + 0xc], edx; mov dword ptr gs:[0x78], eax; ret; 
0x000dfa6e: add al, 0x66; cmp esi, 0x840f0400; mov edi, 0xf600001d; ret; 
0x0010ce07: add al, 0x66; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x000b5ac7: add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; pop edi; ret; 
0x000b5c07: add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; ret; 
0x000bfe8a: add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000b16f7: add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edi; pop edi; ret; 
0x000b1827: add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x000ba389: add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x000ba4e9: add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000b8d49: add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000b8ea9: add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x0013f628: add al, 0x66; rol eax, 8; ret; 
0x0007d4f2: add al, 0x6a; adc byte ptr [ebp + 0x56], dl; call dword ptr [eax + 0x1c]; 
0x0008c74b: add al, 0x6a; add byte ptr [edx], ch; push esi; call dword ptr [ebp + 0x2c]; 
0x00143662: add al, 0x6a; add dword ptr [ebx - 0x72ebdbbc], ecx; sbb ah, 0x2c; stc; call dword ptr [eax + 0x55]; 
0x000ef9ec: add al, 0x6a; add eax, 0x4c818d50; je 0xef9ee; call dword ptr [eax - 0x18]; 
0x001711a4: add al, 0x6a; add eax, 0x4c838d50; je 0x1711a6; call dword ptr [eax - 0x18]; 
0x0006063e: add al, 0x6a; add eax, 0x4c838d50; je 0x60640; call dword ptr [eax - 0x18]; 
0x00060aac: add al, 0x6a; add eax, 0x4c838d50; je 0x60aae; call dword ptr [eax - 0x18]; 
0x000ac5f2: add al, 0x6a; add eax, 0x4c838d50; je 0xac5f4; call dword ptr [eax - 0x18]; 
0x00139b82: add al, 0x6a; add eax, 0x55f3978d; stc; call dword ptr [edx + 0x50]; 
0x0013a475: add al, 0x6a; add eax, 0x5629808d; stc; call dword ptr [eax - 0x75]; 
0x001392e8: add al, 0x6a; add eax, 0x564a808d; stc; call dword ptr [eax - 0x75]; 
0x0013bad4: add al, 0x6a; add eax, 0x6e4c868d; stc; call dword ptr [eax - 0x75]; 
0x0013bbdc: add al, 0x6a; add eax, 0x6e4c878d; stc; call dword ptr [eax - 0x75]; 
0x000eff96: add al, 0x6a; add eax, 0x9f88838d; stc; call dword ptr [eax - 0x73]; 
0x001398d0: add al, 0x6a; add eax, 0xa85c808d; stc; call dword ptr [eax - 0x75]; 
0x0013a528: add al, 0x6a; add eax, 0xa894808d; stc; call dword ptr [eax + 0x6a]; 
0x0010af70: add al, 0x6a; add eax, 0xcc03848d; cli; clc; call dword ptr [eax - 0x73]; 
0x0017b847: add al, 0x6a; call dword ptr [ebp + 0x56]; 
0x0017b847: add al, 0x6a; call dword ptr [ebp + 0x56]; call edi; 
0x0017d43f: add al, 0x6a; call dword ptr [ebp + 0x57]; 
0x00027558: add al, 0x70; stc; call dword ptr [eax - 0x73]; 
0x0007f373: add al, 0x73; or cl, byte ptr [ebp + 0x889044a]; mov eax, dword ptr [edx]; ret; 
0x001b2c49: add al, 0x74; adc al, 0x89; fimul dword ptr [ecx - 0x7c0c7607]; ret; 
0x000297e2: add al, 0x74; adc eax, 0x8301c083; ret 0x8901; 
0x00066c3f: add al, 0x74; and dword ptr [ebx - 0x5af7b], ecx; dec dword ptr [ebx + 0x40f63440]; jmp dword ptr [eax]; 
0x0009e2ce: add al, 0x74; fmul dword ptr [ebp - 0x676ab79]; call dword ptr [eax - 0x73]; 
0x000fb68d: add al, 0x74; push ss; mov ecx, dword ptr [esp + 0xc]; mov eax, 0xdb; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000402fb: add al, 0x74; ret 0xffb8; 
0x00028c02: add al, 0x74; sbb byte ptr [ebx - 0x7cebdbb4], cl; rol byte ptr [ecx], 0x83; ret 0x8901; 
0x00029202: add al, 0x74; sbb byte ptr [ebx - 0x7cfbdba4], cl; rol byte ptr [ecx], 0x83; ret 0x8901; 
0x000a2170: add al, 0x74; sub eax, 0x8d04ec83; test dword ptr [eax + 0x42], ecx; stc; call dword ptr [eax + 0x53]; 
0x0015355e: add al, 0x74; xchg byte ptr [ebx - 0x7d7253ab], cl; pop esp; mov cl, 0xf9; call dword ptr [eax - 0x73]; 
0x000fba5a: add al, 0x74; xor dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x000d468d: add al, 0x75; daa; lea ebx, [eax + 4]; mov eax, ebx; pop ebx; ret; 
0x001a9b33: add al, 0x75; dec esi; add eax, 0xb; ret; 
0x0013be19: add al, 0x75; hlt; mov eax, dword ptr [eax + 0x18]; ret; 
0x00181d39: add al, 0x75; test byte ptr [ebx - 0x74c7dba4], cl; inc esi; or byte ptr [ecx], al; ret; 
0x001a788b: add al, 0x76; ret; 
0x0003eb7e: add al, 0x76; stc; call dword ptr [edx - 0x73]; 
0x00117a55: add al, 0x77; adc byte ptr [ebx + 0x66082454], cl; mov dword ptr [edx + 0x3e], eax; xor eax, eax; ret; 
0x001194f5: add al, 0x77; adc byte ptr [ebx + 0x66082454], cl; mov dword ptr [edx + 0x42], eax; xor eax, eax; ret; 
0x00034659: add al, 0x7f; setbe al; ret; 
0x000792d4: add al, 0x7f; stc; call dword ptr [eax - 0x73]; 
0x00133b8c: add al, 0x80; cmp dword ptr [eax], eax; je 0x133b98; ret; 
0x0009109a: add al, 0x80; int1; add edi, 0x89744; add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; call dword ptr gs:[0x10]; 
0x000a0c02: add al, 0x80; int1; call dword ptr [edx + 0x51]; 
0x000db114: add al, 0x81; les ebp, ptr [ecx + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000875c7: add al, 0x83; and bh, cl; ret; 
0x000e0475: add al, 0x83; call 0xf1740ac; xchg dword ptr [edi - 0x7c00000a], ebx; ret; 
0x000e0c86: add al, 0x83; call 0xf1748bd; xchg dword ptr [esi - 0x7c000012], ecx; ret; 
0x0008e952: add al, 0x83; cmp byte ptr [ecx], al; je 0x8e960; ret; 
0x0009cff0: add al, 0x83; cmp dword ptr [edx], eax; je 0x9cfb2; pop ebx; pop esi; ret; 
0x0016eeef: add al, 0x83; in al, dx; or al, 0x50; call dword ptr [ecx + 0xc]; 
0x0016faf2: add al, 0x83; in al, dx; or al, 0x53; call dword ptr [eax + 0x10]; 
0x0005c51a: add al, 0x83; in al, dx; or al, 0x8d; pop ecx; dec byte ptr [ebx - 0x8f73]; call dword ptr [ebx - 0x75]; 
0x0016d375: add al, 0x83; in al, dx; or byte ptr [ebp - 0x69d907d], cl; call dword ptr [eax + 0x57]; 
0x00170904: add al, 0x83; in eax, 0xfc; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x0017cdd7: add al, 0x83; inc eax; adc al, 4; mov eax, 1; ret; 
0x00095903: add al, 0x83; inc edx; add al, 1; add esp, 0xc; ret; 
0x00088590: add al, 0x83; jp 0x885cc; jmp dword ptr [ebp - 0x75]; 
0x00035123: add al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0017b9b2: add al, 0x83; les ebx, ptr [eax]; pop ebx; jmp eax; 
0x0002520b: add al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0014b42a: add al, 0x83; les ecx, ptr [eax]; lea edx, [eax + ecx]; pop ebx; mov eax, edx; ret; 
0x0002fddd: add al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x001b6a97: add al, 0x83; les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x000a751f: add al, 0x83; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret 4; 
0x0003f065: add al, 0x83; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0008bfec: add al, 0x83; les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00079b89: add al, 0x83; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x00079a29: add al, 0x83; les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x0016f72f: add al, 0x83; les edx, ptr [ebx + edx*2]; call dword ptr [eax + 0x10]; 
0x0019decd: add al, 0x83; ljmp 0xf702:0x89068b04; ret 0xf; 
0x0019adcd: add al, 0x83; ljmp 0xf702:0x89078b04; ret 0xf; 
0x000c7a96: add al, 0x83; mov byte ptr [ebx + eax*4], 0xc6; add al, 1; ret; 
0x000c29ec: add al, 0x83; out dx, al; add al, 0x83; out dx, al; add al, 0xf7; ret 0; 
0x000c29ef: add al, 0x83; out dx, al; add al, 0xf7; ret 0; 
0x00090803: add al, 0x83; pushal; or bl, bh; xor eax, eax; ret; 
0x00175a34: add al, 0x83; rcr byte ptr [edi + edi*8], 0xb0; nop; add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; 
0x00186ed6: add al, 0x83; ret 0x105; 
0x00041ccc: add al, 0x83; ret 0x3904; 
0x001ae003: add al, 0x83; ret 0x3908; 
0x00141d64: add al, 0x83; ret 0x8108; 
0x0002f116: add al, 0x83; ret 0x8301; 
0x0005c602: add al, 0x83; ret 0x8304; 
0x000d9afa: add al, 0x83; ret 0x8310; 
0x000c26c3: add al, 0x83; ret 0x8404; 
0x000546aa: add al, 0x83; ret 0x8501; 
0x000c6e22: add al, 0x83; ret 0x8504; 
0x0013a795: add al, 0x83; ret 0x8518; 
0x00047723: add al, 0x83; ret 0x8901; 
0x00053c24: add al, 0x83; ret 0x8904; 
0x000c2451: add al, 0x83; ret 0x8b04; 
0x000541cd: add al, 0x83; ret 0x8d04; 
0x000e6151: add al, 0x83; ret 0x930; 
0x001b34f4: add al, 0x83; ret 0xc104; 
0x001b0c8c: add al, 0x83; ret 0xd104; 
0x001ada91: add al, 0x83; ret 0xd304; 
0x00100102: add al, 0x83; ret 0xe804; 
0x00030f93: add al, 0x83; ret; 
0x000c4d82: add al, 0x83; rol byte ptr [ecx + edi], 0xca; je 0xc4d8e; test edx, edx; jne 0xc4d80; ret; 
0x00029208: add al, 0x83; rol byte ptr [ecx], 0x83; ret 0x8901; 
0x0002decf: add al, 0x83; rol byte ptr [edx], 0x39; ret 0x820f; 
0x000af777: add al, 0x83; rol dword ptr [ecx], 0xeb; adc eax, 0x8300768d; ret 0x8b20; 
0x000ffbaf: add al, 0x83; ror byte ptr [eax], 0x39; ret 0xf475; 
0x001519a4: add al, 0x83; ror byte ptr [eax], 0x83; ret 0x8908; 
0x001b4035: add al, 0x83; ror dword ptr [eax], 0x39; sal dword ptr [edx - 0xf], 0xe9; ret 0x11; 
0x0016eac8: add al, 0x83; shr byte ptr [eax], 0xff; jo 0x16eae3; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x000d9a95: add al, 0x85; leave; jne 0xd9a78; add eax, 1; ret; 
0x00026d32: add al, 0x85; ror byte ptr [edi], 0x44; ret; 
0x00043933: add al, 0x85; ror byte ptr [edi], 0x85; ret; 
0x000a3784: add al, 0x85; ror byte ptr [edi], cl; test byte ptr [ebx - 0x72fffffd], ch; pop edx; or dh, dh; ret; 
0x0009805b: add al, 0x85; sal byte ptr [ebp + 0x10], cl; and dword ptr [eax], 0x7fffffff; xor eax, eax; ret; 
0x0012d00f: add al, 0x85; sal byte ptr [ebp + 4], cl; ret; 
0x0012d033: add al, 0x85; sal byte ptr [ebp + 8], cl; ret; 
0x00152b22: add al, 0x85; sal byte ptr [ebp + eax + 0x39], 0x50; or byte ptr [ebp - 0xc], dh; ret; 
0x0014c034: add al, 0x85; sal byte ptr [ebp - 0x19], 0x5b; pop esi; pop edi; ret; 
0x000d9b89: add al, 0x85; sal byte ptr [ebp - 0xe], cl; mov eax, ecx; pop ebx; ret; 
0x000c4d89: add al, 0x85; sal byte ptr [ebp - 0xe], cl; ret; 
0x00042d07: add al, 0x85; sal byte ptr [ecx + ecx + 0xf], 0xbd; rol byte ptr [ebx - 0x3f7ce010], 1; ret; 
0x001283b3: add al, 0x85; sal byte ptr [edx + eax - 0x77], 0x10; ret; 
0x00145637: add al, 0x85; sal byte ptr [esp + ecx - 0x17], 0x4f; idiv bh; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; ret; 
0x00099fc2: add al, 0x85; sar byte ptr [eax + 9], 0x89; xor ah, 0x3a; add byte ptr [eax], al; xor eax, eax; ret; 
0x000e7867: add al, 0x85; sar byte ptr [ecx + 0x74], cl; mov eax, 0x193; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000fd141: add al, 0x85; test byte ptr [edi], -0x7c; mov edx, 0x89000000; ret; 
0x0015658c: add al, 0x87; adc byte ptr [ebx + 0x47f01fa], al; ret; 
0x000c27af: add al, 0x88; adc dword ptr fs:[ebx], eax; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000b16e6: add al, 0x88; inc edx; add al, 0x89; clc; pop edi; ret; 
0x000b5ab6: add al, 0x88; inc edx; add al, 0x8d; inc edx; add al, 0x5f; ret; 
0x0005ba40: add al, 0x88; or byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000551db: add al, 0x89; adc al, 0x24; mov dword ptr [esp + 4], eax; fld xword ptr [esp]; add esp, 0x1c; ret; 
0x00072977: add al, 0x89; adc ecx, dword ptr [ecx + 0x5f5e5b38]; ret; 
0x0017814c: add al, 0x89; add al, 0x24; call dword ptr [edx + 0x10]; 
0x0008f3b2: add al, 0x89; add al, bh; and dword ptr [ecx + ecx], 0; add byte ptr [eax], al; pop ebx; ret; 
0x000abef7: add al, 0x89; add cl, byte ptr [ebp + 0x5e5b0542]; ret; 
0x000cd660: add al, 0x89; add ecx, dword ptr [ecx + 0x5f5e5bf0]; ret; 
0x000bfe6c: add al, 0x89; clc; pop ebx; pop edi; ret; 
0x000b16e9: add al, 0x89; clc; pop edi; ret; 
0x0011c121: add al, 0x89; dec eax; add al, 0x89; push eax; or byte ptr [ebp - 0x123cf36d], cl; call dword ptr [edx - 0x73]; 
0x0013ed74: add al, 0x89; dec edi; or byte ptr [ebx + 0x5e], bl; pop edi; ret 4; 
0x0017c702: add al, 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x20]; 
0x0017c6de: add al, 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x24]; 
0x001713ee: add al, 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x00171412: add al, 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x00170df9: add al, 0x89; fcomp dword ptr [ebx + 0x5e]; jmp eax; 
0x0014189e: add al, 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x0013576f: add al, 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x0008e63c: add al, 0x89; fcomp dword ptr [ebx + 0x5e]; ret; 
0x00097db2: add al, 0x89; fmul dword ptr [ecx - 0x16a1a436]; cmp dl, 0xff; jmp dword ptr [esi - 0x70]; 
0x001715c8: add al, 0x89; inc ebx; adc byte ptr [ebx + 0x1b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0010c7f6: add al, 0x89; inc ebx; add al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00082ca5: add al, 0x89; inc ecx; adc byte ptr [ecx - 0x9ec74c6], cl; ret 0x7502; 
0x000b8c47: add al, 0x89; inc edx; add al, 0x89; clc; pop edi; ret; 
0x000b8e86: add al, 0x89; inc edx; add al, 0x8a; inc ecx; or byte ptr [eax - 0x2f76f7be], cl; ret; 
0x000b8ee6: add al, 0x89; inc edx; add al, 0x8b; inc ecx; or byte ptr [ecx - 0x2f76f7be], cl; ret; 
0x000ba4b6: add al, 0x89; inc edx; add al, 0x8d; inc edx; pop es; ret; 
0x00059f08: add al, 0x89; inc edx; or al, 0x83; les edx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret 4; 
0x000790b5: add al, 0x89; inc esi; or byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00088bee: add al, 0x89; inc esi; or byte ptr [ecx + 0x4c483f0], cl; pop ebx; pop esi; ret; 
0x00129754: add al, 0x89; inc esp; and al, 0xc; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x0012a084: add al, 0x89; inc esp; and al, 0xc; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000e7bb2: add al, 0x89; inc esp; and al, 8; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x000b99a4: add al, 0x89; js 0x5e6a9e03; pop ebx; ret; 
0x00131efb: add al, 0x89; loope 0x131e88; ret 0x448b; 
0x0010ce65: add al, 0x89; nop; or al, 1; add byte ptr [eax], al; xor eax, eax; ret; 
0x0010ce3d: add al, 0x89; nop; or byte ptr [ecx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x000c0aaa: add al, 0x89; or byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000bd664: add al, 0x89; or byte ptr [ebx + 0x5e082444], cl; ret; 
0x000811fa: add al, 0x89; or byte ptr [ebx + 0x5f5e5b02], cl; ret; 
0x000b99b5: add al, 0x89; pcmpgtd mm1, qword ptr [ecx + 0x5e5f0457]; pop ebx; ret; 
0x0008004e: add al, 0x89; pop eax; adc byte ptr [ecx + 0x5b0a89c8], cl; ret; 
0x00080aa3: add al, 0x89; pop eax; or byte ptr [ecx + 0x10892048], cl; pop ebx; ret; 
0x0011c124: add al, 0x89; push eax; or byte ptr [ebp - 0x123cf36d], cl; call dword ptr [edx - 0x73]; 
0x00171644: add al, 0x89; push ebx; adc bl, ch; ret; 
0x00136ded: add al, 0x89; push ebx; add al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0017544f: add al, 0x89; push edi; push esp; push 8; push ebx; call dword ptr [eax + 0x18]; 
0x0008e79c: add al, 0x89; push esp; and al, 4; jmp dword ptr [eax]; 
0x000abdec: add al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x001558ee: add al, 0x89; rcr byte ptr [ebx + 0x5f], 1; ret; 
0x0017bec1: add al, 0x89; ret 0x18b; 
0x00131a00: add al, 0x89; ret 0x448b; 
0x0002989f: add al, 0x89; ret 0x4c89; 
0x000704c7: add al, 0x89; ret 0x6b8b; 
0x00111229: add al, 0x89; ret 0x7c8b; 
0x0013ad42: add al, 0x89; ret 0x8589; 
0x00060f9a: add al, 0x89; ret 0xca29; 
0x00060f24: add al, 0x89; ret 0xda29; 
0x0012c7bc: add al, 0x89; ret 0xe083; 
0x0009e323: add al, 0x89; ret 0xe281; 
0x0009d14a: add al, 0x89; ret 0xe283; 
0x00127315: add al, 0x89; ret 0xeac1; 
0x001acdd7: add al, 0x89; ret 0xead1; 
0x000a32bc: add al, 0x89; ret 0xf089; 
0x0003c0cf: add al, 0x89; ret 0xff25; 
0x0003fa2b: add al, 0x89; ret; 
0x000b393b: add al, 0x89; rol byte ptr [ebx + 0x4a8d06eb], 1; push es; jne 0xb3801; pop ebx; ret; 
0x0003dc47: add al, 0x89; sal bh, 1; fmul dword ptr [edi]; dec eax; ret 0x56c3; 
0x000406b7: add al, 0x89; sal bh, 1; fmul dword ptr [edi]; dec eax; ret 0xf3c3; 
0x000b8e89: add al, 0x8a; inc ecx; or byte ptr [eax - 0x2f76f7be], cl; ret; 
0x000b8d29: add al, 0x8a; inc ecx; or byte ptr [eax - 0x776f7be], cl; pop edi; ret; 
0x0003d21d: add al, 0x8a; setne al; movzx eax, al; ret; 
0x00092a7c: add al, 0x8b; adc byte ptr [eax + 0xf1], bh; call dword ptr gs:[0x10]; 
0x000a0b41: add al, 0x8b; adc dl, byte ptr [eax + 0x34c9089]; add byte ptr [eax], al; mov dword ptr [eax + 0x378], 1; ret; 
0x000a0b91: add al, 0x8b; adc dl, byte ptr [eax + 0x3509089]; add byte ptr [eax], al; mov dword ptr [eax + 0x378], 1; ret; 
0x000a0bc1: add al, 0x8b; adc dl, byte ptr [eax + 0x3549089]; add byte ptr [eax], al; mov dword ptr [eax + 0x378], 1; ret; 
0x000a08b1: add al, 0x8b; adc dl, byte ptr [eax + 0x3589089]; add byte ptr [eax], al; ret; 
0x000a0891: add al, 0x8b; adc dl, byte ptr [eax + 0x35c9089]; add byte ptr [eax], al; ret; 
0x000a0b11: add al, 0x8b; adc dl, byte ptr [eax + 0x3709089]; add byte ptr [eax], al; mov dword ptr [eax + 0x378], 1; ret; 
0x000a0941: add al, 0x8b; adc dl, byte ptr [eax + 0x3949089]; add byte ptr [eax], al; ret; 
0x000a0b71: add al, 0x8b; adc dl, byte ptr [eax + 0x3c349089]; add byte ptr [eax], al; ret; 
0x00068690: add al, 0x8b; adc ecx, dword ptr [ecx - 0x5db73]; jmp dword ptr [esi - 0x77]; 
0x0008e563: add al, 0x8b; adc edx, dword ptr [esi + 0x50]; push ecx; call edx; 
0x0018979b: add al, 0x8b; add al, 0x90; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x00086887: add al, 0x8b; add byte ptr [0x200], ah; ret; 
0x000a08d2: add al, 0x8b; add byte ptr [0x3fc], bh; jbe 0xa08e0; ret; 
0x00086837: add al, 0x8b; add byte ptr [0x804], ah; ret; 
0x000a0912: add al, 0x8b; add byte ptr [0xffff], bh; jbe 0xa0920; ret; 
0x000a0ad2: add al, 0x8b; add byte ptr [ebx + 0x67650f8], al; ret; 
0x0009aa17: add al, 0x8b; add byte ptr [ebx - 0x2ef7dbac], cl; call 0xc03aacad; ret; 
0x00034601: add al, 0x8b; add byte ptr [ebx - 0x7b74d3c0], cl; nop; add byte ptr [edx], al; add byte ptr [eax], al; ret; 
0x00034631: add al, 0x8b; add byte ptr [ebx - 0x7b74dbc0], cl; nop; add byte ptr [edx], al; add byte ptr [eax], al; ret; 
0x00080d89: add al, 0x8b; add byte ptr [ecx + 0x4c4830a], cl; pop ebx; pop esi; ret; 
0x000bfe52: add al, 0x8b; add dword ptr [ecx + 0x5bf88902], ecx; pop edi; ret; 
0x000bcfa2: add al, 0x8b; add dword ptr [ecx + 0x5ff88902], ecx; ret; 
0x0010a811: add al, 0x8b; cmp byte ptr [eax - 0x75000000], 0x10; mov dword ptr [eax], ecx; mov eax, edx; ret; 
0x00080a6f: add al, 0x8b; dec eax; or byte ptr [ecx + 0x8508910], cl; mov dword ptr [eax + 0x20], ecx; ret; 
0x00031409: add al, 0x8b; dec esp; ret; 
0x000347eb: add al, 0x8b; inc eax; cmp al, 0x8b; add al, 0x90; ret; 
0x001897b7: add al, 0x8b; inc eax; dec esp; ret; 
0x001227d7: add al, 0x8b; inc eax; or byte ptr [0x100f], ah; ret; 
0x0013c022: add al, 0x8b; inc eax; or byte ptr [ecx - 0x373edbcc], cl; or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x00189857: add al, 0x8b; inc eax; pop eax; ret; 
0x001897e7: add al, 0x8b; inc eax; pop esp; ret; 
0x001897d7: add al, 0x8b; inc eax; push eax; ret; 
0x00189867: add al, 0x8b; inc eax; push esp; ret; 
0x0017a8e3: add al, 0x8b; inc eax; xor byte ptr [ebx + 0x448908c0], al; and al, 4; jmp edx; 
0x0005baf8: add al, 0x8b; inc ebp; or byte ptr [ecx], bh; ret; 
0x0008e23a: add al, 0x8b; inc ebx; or bh, bh; je 0x8e265; xor byte ptr [edx + 0x51], dl; call eax; 
0x0010d752: add al, 0x8b; inc ebx; or byte ptr [ecx], bh; ret 0x840f; 
0x000b8ee9: add al, 0x8b; inc ecx; or byte ptr [ecx - 0x2f76f7be], cl; ret; 
0x000b8d89: add al, 0x8b; inc ecx; or byte ptr [ecx - 0x776f7be], cl; pop edi; ret; 
0x000ba509: add al, 0x8b; inc ecx; pop es; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000b8ec9: add al, 0x8b; inc ecx; pop es; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x001710ba: add al, 0x8b; inc edi; or byte ptr [ebp - 1], dl; jbe 0x1710ce; push edi; call dword ptr [eax + 0x10]; 
0x0006f45b: add al, 0x8b; inc edi; or byte ptr [ecx], bh; ret 0x840f; 
0x0008d367: add al, 0x8b; inc edx; or byte ptr [ebx - 0x37c6ebb6], cl; cmovb eax, ecx; sub eax, dword ptr [edx + 0xc]; ret; 
0x0013184d: add al, 0x8b; inc esp; and al, 0x24; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0013144c: add al, 0x8b; inc esp; and al, 0x28; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000c0ace: add al, 0x8b; inc esp; and al, 0xc; pop ebx; pop esi; ret; 
0x0003c0ee: add al, 0x8b; inc esp; and al, 8; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0009041a: add al, 0x8b; inc esp; and al, 8; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x000bd67b: add al, 0x8b; inc esp; and al, 8; pop esi; ret; 
0x00034041: add al, 0x8b; inc esp; nop; inc eax; ret; 
0x00143cc8: add al, 0x8b; je 0x143cf0; adc byte ptr [ebp - 0x6cfb26a], cl; call dword ptr [edx - 0x46]; 
0x0005bc1b: add al, 0x8b; je 0x5bc43; or al, 0x56; push edx; push eax; call dword ptr [ebp + 0x1c]; 
0x000e6e78: add al, 0x8b; je 0xe6ea0; cmp byte ptr [ecx], ch; ret 0xc889; 
0x0003a326: add al, 0x8b; jl 0x3a34e; adc al, 0x8b; push ebx; or byte ptr [ecx - 0x50f0fbb9], cl; ret 0x7c8b; 
0x0008327f: add al, 0x8b; jl 0x832a7; or byte ptr [ebx + 0x290c246c], cl; ret 0xfac1; 
0x0013bf7f: add al, 0x8b; jns 0x13bf8b; mov ebp, dword ptr [ecx + 0xc]; nop; jmp edx; 
0x00106ac9: add al, 0x8b; mov ah, 0x97; sub al, 0xf9; clc; dec dword ptr [ecx + 0x3efe01d0]; jmp esi; 
0x001a31e7: add al, 0x8b; mov word ptr [ebx - 0x86474], cs; mov eax, dword ptr [ebx + eax*4 - 0x86474]; sub eax, ecx; pop ebx; ret; 
0x0014e8d7: add al, 0x8b; pop eax; or byte ptr [ebp + 0x1e850fed], al; add al, byte ptr [eax]; add dh, dh; ret; 
0x0014e805: add al, 0x8b; pop eax; or byte ptr [ebp - 0x777af013], al; add al, 0; add dh, dh; ret; 
0x0014eb7a: add al, 0x8b; pop eax; or dh, dh; ret; 
0x001752ea: add al, 0x8b; pop edx; and al, 0x83; ret 0x8b18; 
0x00070cde: add al, 0x8b; pop esp; xchg ebp, eax; add byte ptr [ecx], al; ret; 
0x000d8449: add al, 0x8b; popfd; ror cl, 0xff; call dword ptr [esi + 0x6a]; 
0x000a0a42: add al, 0x8b; push edx; or al, 0x83; ret; 
0x000a0f42: add al, 0x8b; push edx; or byte ptr [ecx], al; lds edi, ptr [ecx]; ret; 
0x0017c079: add al, 0x8b; push esi; add al, 0x50; push ecx; push esi; call dword ptr [edx + 0xc]; 
0x0017c0b2: add al, 0x8b; push esi; add al, 0x50; push ecx; push esi; call dword ptr [edx + 8]; 
0x0008a0c8: add al, 0x8b; push esi; or byte ptr [ecx], ch; ret 0xfa39; 
0x0019044d: add al, 0x8b; push esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0016fb48: add al, 0x8b; push esp; and al, 0x14; push edx; push ebx; call dword ptr [eax + 0x14]; 
0x0010b44a: add al, 0x8b; push esp; and al, 0x18; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x0017cdf7: add al, 0x8b; push esp; and al, 0xc; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x00114617: add al, 0x8b; push esp; and al, 8; mov dword ptr [eax + 0x110], edx; xor eax, eax; ret; 
0x001897c7: add al, 0x8b; push esp; and al, 8; mov dword ptr [eax + 0x4c], edx; ret; 
0x0017d2cf: add al, 0x8b; push esp; and al, 8; mov dword ptr [eax + 0xc], edx; ret; 
0x000906f7: add al, 0x8b; push esp; and al, 8; mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x0010ce17: add al, 0x8b; push esp; and al, 8; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x00125170: add al, 0x8b; push esp; and al, 8; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x0008c967: add al, 0x8b; push esp; and al, 8; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x00189777: add al, 0x8b; push esp; and al, 8; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x000311c7: add al, 0x8b; push esp; and al, 8; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x00027fdc: add al, 0x8b; test dword ptr [eax + esi*2 - 7], eax; dec dword ptr [ecx - 0x48f0f7bd]; test dword ptr [eax + 0x70], ecx; stc; jmp dword ptr [esi - 0x77]; 
0x00173bdf: add al, 0x8b; xchg edx, eax; mov word ptr [eax], es; add byte ptr [eax], al; mov dword ptr [eax + 8], edx; ret; 
0x00152fc7: add al, 0x8b; xor ecx, dword ptr [ecx - 0x476dbe4]; call 0x231a0; mov dword ptr [esp], ebp; call esi; 
0x0009b3c2: add al, 0x8d; cmp dword ptr [ecx + eax*8], -0x1b; call dword ptr [eax - 0x73]; 
0x000a3c6e: add al, 0x8d; dec eax; add dword ptr [ecx - 0x72c3dbb4], ecx; inc esp; ret; 
0x0008c92a: add al, 0x8d; dec eax; xor byte ptr [ebx - 0x3f7acfc0], cl; jne 0x8c948; ret; 
0x000546a3: add al, 0x8d; dec edi; add dword ptr [ecx - 0x7cfb69b4], ecx; ret 0x8501; 
0x0017c7e5: add al, 0x8d; dec esp; and al, 0x10; push ecx; push edx; call dword ptr [eax + 0x20]; 
0x0017b975: add al, 0x8d; dec esp; and al, 0x10; push ecx; push edx; call dword ptr [eax]; 
0x000e7bae: add al, 0x8d; dec esp; and al, 4; mov dword ptr [esp + 8], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x00054196: add al, 0x8d; inc edi; add al, 0xf; xchg edx, eax; ret; 
0x000b5ab9: add al, 0x8d; inc edx; add al, 0x5f; ret; 
0x000abe9c: add al, 0x8d; inc edx; pop es; pop ebx; pop esi; ret; 
0x000ba26a: add al, 0x8d; inc edx; pop es; pop edi; ret; 
0x000ba4b9: add al, 0x8d; inc edx; pop es; ret; 
0x00043018: add al, 0x8d; inc edx; push dword ptr [ecx]; sar byte ptr [ecx], 1; ret 0x9e0f; 
0x00141fd3: add al, 0x8d; inc esp; add cl, byte ptr [eax]; pop ebx; ret; 
0x0010d0e7: add al, 0x8d; mov al, 0xac; in eax, 0xec; call dword ptr [esi + 0x6a]; 
0x001713f9: add al, 0x8d; mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x0013f6af: add al, 0x8d; mov ds, word ptr [edi]; pop eax; stc; dec dword ptr [ebp - 0x6a7d57a]; call dword ptr [ecx - 0x77]; 
0x000a2251: add al, 0x8d; or dword ptr [eax + 0x42], 0xfffffff9; call dword ptr [eax + 0x56]; 
0x00189436: add al, 0x8d; push 0x24448909; and al, 0x89; ret; 
0x00043037: add al, 0x8d; push eax; push dword ptr [ecx]; sar byte ptr [ecx], 1; ret 0x920f; 
0x0017c55b: add al, 0x8d; push esp; and al, 0x10; push edx; push ebx; call dword ptr [eax + 0x20]; 
0x001754e7: add al, 0x8d; push esp; and al, 0x10; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x0017bb85: add al, 0x8d; push esp; and al, 0x10; push edx; push ebx; call dword ptr [eax + 4]; 
0x0017bb1a: add al, 0x8d; push esp; and al, 0x10; push edx; push ebx; call dword ptr [eax]; 
0x0017be55: add al, 0x8d; push esp; and al, 0x10; push edx; push ecx; call dword ptr [eax + 4]; 
0x0017be8d: add al, 0x8d; push esp; and al, 0x10; push edx; push ecx; call dword ptr [eax]; 
0x0017c199: add al, 0x8d; push esp; and al, 0x20; push edx; push esi; call dword ptr [eax]; 
0x0017c545: add al, 0x8d; push esp; and al, 0xc; push edx; push ebx; call dword ptr [eax + 0x20]; 
0x0017bb05: add al, 0x8d; push esp; and al, 0xc; push edx; push ebx; call dword ptr [eax]; 
0x0017bed9: add al, 0x8d; push esp; and al, 0xc; push edx; push ecx; call dword ptr [eax + 4]; 
0x000a2175: add al, 0x8d; test dword ptr [eax + 0x42], ecx; stc; call dword ptr [eax + 0x53]; 
0x001425c2: add al, 0x8d; test dword ptr [eax + 0x6afff958], esp; add eax, 0x4c858d50; je 0x1425ca; call dword ptr [eax - 0x18]; 
0x00143bdf: add al, 0x8d; test dword ptr [ebp + 0x30], ecx; stc; call dword ptr [eax - 0x77]; 
0x000a7a0a: add al, 0x8d; test dword ptr [ebp + 0x6afff944], ecx; add eax, 0x4c858d50; je 0xa7a12; call dword ptr [eax - 0x18]; 
0x0016f62a: add al, 0x8d; xchg byte ptr [edx + 0x6afff963], bh; add eax, 0x4c868d50; je 0x16f632; call dword ptr [eax - 0x18]; 
0x00153095: add al, 0x8d; xchg dword ptr [ecx + eax*2 - 0xf], ebp; call dword ptr [ebx + 0x50]; 
0x000a1a39: add al, 0x8d; xchg dword ptr [edx], ebx; inc edx; stc; call dword ptr [eax + 0x53]; 
0x00092b1f: add al, 0x8d; xchg eax, ebx; test cl, bh; call dword ptr [eax + 0x68]; 
0x000aa15d: add al, 0x8d; xchg edx, eax; mov word ptr [ebp + 0x450ffff6], gs; ret 0x66c3; 
0x000a944d: add al, 0x8d; xchg edx, eax; or al, 0xbd; idiv bh; cmovne eax, edx; ret; 
0x0018977d: add al, 0x90; mov eax, dword ptr [eax]; ret; 
0x0018979d: add al, 0x90; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x000c72fd: add al, 0x90; pop edi; pop ebp; ret; 
0x00034547: add al, 0x90; ret; 
0x0005be4d: add al, 0x91; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000658a5: add al, 0x97; mov edi, ecx; jmp eax; 
0x000c4975: add al, 0x98; pop ebx; pop esi; ret; 
0x0003ef9b: add al, 0x99; idiv dword ptr [esp + 0xc]; mov dword ptr [ecx], eax; mov eax, ecx; mov dword ptr [ecx + 4], edx; ret 4; 
0x0003d169: add al, 0x9a; xor eax, eax; pop ebx; ret; 
0x00110bbe: add al, 0xa2; stc; call dword ptr [eax + 0x68]; 
0x001107bc: add al, 0xa2; stc; call dword ptr [eax - 0x73]; 
0x0011ee67: add al, 0xa3; stc; call dword ptr [eax - 0x73]; 
0x00099493: add al, 0xa8; add dword ptr [ebp - 0x2e], esi; mov eax, 0x10; pop ebx; ret; 
0x00094dbf: add al, 0xa8; add dword ptr [esp + ebx - 0x7d], esi; rol dword ptr [ecx], 0x83; ret 0x8108; 
0x001927f8: add al, 0xb5; cli; jmp dword ptr [esi - 0x70]; 
0x0016ed72: add al, 0xb8; adc byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x000a04ef: add al, 0xb8; add al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0018703e: add al, 0xb8; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x430f; 
0x0005b852: add al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0017cddb: add al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x000fb5a2: add al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; test ecx, ecx; js 0xfb5b0; ret; 
0x001214d5: add al, 0xb8; cmp al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001214d5: add al, 0xb8; cmp al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0010c319: add al, 0xb8; cmp dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012fa55: add al, 0xb8; fadd dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012fa55: add al, 0xb8; fadd dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00130a79: add al, 0xb8; fld dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00115318: add al, 0xb8; fld qword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00121d07: add al, 0xb8; fld qword ptr [eax]; add byte ptr [eax], al; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x000efa99: add al, 0xb8; int 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012b815: add al, 0xb8; jae 0x12b819; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00130bb5: add al, 0xb8; je 0x130bb9; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00130d19: add al, 0xb8; jge 0x130d1e; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00130d45: add al, 0xb8; jle 0x130d4a; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001305b5: add al, 0xb8; jno 0x1305b9; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012b389: add al, 0xb8; jns 0x12b38d; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010e3e5: add al, 0xb8; jp 0x10e3e9; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00090ad7: add al, 0xb8; lock add byte ptr [eax], al; add byte ptr [ecx], dh; idiv byte ptr [edx + 0x7fffffff]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00099674: add al, 0xb8; lock add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00099579: add al, 0xb8; lock add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0012f3e5: add al, 0xb8; mov byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012f3e5: add al, 0xb8; mov byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00130a19: add al, 0xb8; mov dl, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00114685: add al, 0xb8; or al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e7886: add al, 0xb8; or dword ptr [ecx], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001157b9: add al, 0xb8; pop dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000a69d2: add al, 0xb8; push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x000907bb: add al, 0xb8; push ss; add byte ptr [eax], al; add byte ptr [ebx + 0xa7602fa], al; ret; 
0x0009f996: add al, 0xb8; sbb byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ea145: add al, 0xb8; sbb eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00114a85: add al, 0xb8; sub dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f0a45: add al, 0xb8; test byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00114ed5: add al, 0xb8; test dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001305d9: add al, 0xb8; xchg byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00123785: add al, 0xb8; xor eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001217ef: add al, 0xb; dec ebx; add byte ptr [eax], al; add bl, ch; ret; 
0x00091e2e: add al, 0xba; add dword ptr [eax], eax; add byte ptr [eax], al; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x001321fa: add al, 0xbb; adc byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00131fca: add al, 0xbb; adc dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00153229: add al, 0xbd; sldt word ptr [eax]; add byte ptr [ecx - 0x761c761f], cl; ret 0x25; 
0x0010d20c: add al, 0xbe; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00054e71: add al, 0xc0; add eax, dword ptr [esp]; add eax, 0xd; add esp, 4; jmp eax; 
0x000816b2: add al, 0xc1; cli; add ch, bl; ljmp 0x5bff:0xffffffb8; ret; 
0x000648b5: add al, 0xc6; add byte ptr [0xfffb62e9], ah; jmp dword ptr [esi - 0x70]; 
0x000abe47: add al, 0xc6; inc edx; push es; add byte ptr [ecx + 0x5bd08902], cl; pop esi; ret; 
0x00071863: add al, 0xc7; inc esp; and al, 0x1c; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x00071873: add al, 0xc7; inc esp; and al, 0x24; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x00071893: add al, 0xc7; inc esp; and al, 0x28; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x000718a3: add al, 0xc7; inc esp; and al, 0x30; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x00071913: add al, 0xc7; inc esp; and al, 0x34; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x000718b3: add al, 0xc7; inc esp; and al, 0x3c; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x00070b61: add al, 0xc7; inc esp; and al, 0x48; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x00127ee8: add al, 0xd0; call 0x88145f72; inc esi; or byte ptr [ebx - 0x7bf0fe01], al; ret 0xfff5; 
0x0003b991: add al, 0xd9; loope 0x3b98b; les eax, ptr [edx]; je 0x3b99b; fchs; ret; 
0x0003bd31: add al, 0xd9; loope 0x3bd2b; les eax, ptr [edx]; je 0x3bd3b; fchs; ret; 
0x0003c22e: add al, 0xd9; sbb al, 0x24; fld dword ptr [esp]; add esp, 4; ret; 
0x0003bc67: add al, 0xd9; std; fstp st(1); ret; 
0x000551e2: add al, 0xdb; sub al, 0x24; add esp, 0x1c; ret; 
0x00055168: add al, 0xdd; add al, 0x24; add esp, 0xc; ret; 
0x00175298: add al, 0xdf; ljmp 0x5e5b:0x10c483ff; pop edi; ret; 
0x0009cf76: add al, 0xe8; mov eax, dword ptr [0x81000ecc]; ret; 
0x00148d5d: add al, 0xe8; mov ebp, 0x89fffffd; ret 0xffb8; 
0x000ed4d7: add al, 0xe8; ret; 
0x000e9f7d: add al, 0xe9; fnsave dword ptr [eax]; cld; jmp dword ptr [esi - 0x70]; 
0x000e888d: add al, 0xe9; jge 0xe88ab; cld; jmp dword ptr [esi - 0x70]; 
0x000e885d: add al, 0xe9; lodsd eax, dword ptr [esi]; sbb bh, ah; jmp dword ptr [esi - 0x70]; 
0x000e9fad: add al, 0xe9; lodsd eax, dword ptr [esi]; xor ah, bh; jmp dword ptr [esi - 0x70]; 
0x0009534b: add al, 0xe9; mov al, byte ptr [0xf7fffffd]; ret 0; 
0x00042181: add al, 0xe9; mov ecx, 0x2effffe1; lea esi, [esi]; nop; xor eax, eax; ret; 
0x0017513f: add al, 0xe9; pop ebx; idiv edi; jmp dword ptr [esi - 0x70]; 
0x0010858b: add al, 0xe9; ret 0xfffe; 
0x000eeae8: add al, 0xe9; ret; 
0x00104887: add al, 0xe9; sub eax, 0x31fffff7; fucomi st(3); ret 0xc901; 
0x000f3733: add al, 0xe9; xlatb; imul edi, ebx, -1; lea esi, [esi]; xor eax, eax; ret; 
0x000a87f8: add al, 0xe; cmp eax, 0x430ff839; shr byte ptr [ecx], 1; ret 0xf001; 
0x0013351b: add al, 0xe; dec ebx; add byte ptr [eax], al; add bl, ch; ret; 
0x00023ece: add al, 0xeb; ret 0x2ae8; 
0x00023fd8: add al, 0xeb; ret; 
0x00094f3e: add al, 0xeb; xchg byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x00153b96: add al, 0xee; jmp dword ptr [esi - 0x70]; 
0x0009a593: add al, 0xf0; dec dword ptr [eax]; jne 0x9a5a0; xor eax, eax; ret; 
0x0010481c: add al, 0xf6; ret 0x7401; 
0x000a4070: add al, 0xf6; ret; 
0x000942c9: add al, 0xf7; fcomp dword ptr [ebx + 0x5e]; ret; 
0x000c29f2: add al, 0xf7; ret 0; 
0x0015ded0: add al, 0xf7; ret 0xfffd; 
0x00103363: add al, 0xf7; ret; 
0x0011ced9: add al, 0xf9; dec dword ptr [edi]; inc ebp; ret 0x4489; 
0x0019ad6e: add al, 0xf; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0012554b: add al, 0xf; dec edi; ret; 
0x000289dd: add al, 0xf; inc ebp; ret 0x4489; 
0x000ac443: add al, 0xf; inc esp; ret 0x66c3; 
0x0010ccc7: add al, 0xf; mov bh, 0x10; mov eax, dword ptr [esp + 8]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x0003e79e: add al, 0xf; mov bh, 0x83; inc esi; stc; jmp dword ptr [esi - 0x77]; 
0x00034501: add al, 0xf; mov bh, 4; push eax; and eax, 0x1000; ret; 
0x000344d1: add al, 0xf; mov bh, 4; push eax; and eax, 0x100; ret; 
0x000344a1: add al, 0xf; mov bh, 4; push eax; and eax, 0x2000; ret; 
0x000343e1: add al, 0xf; mov bh, 4; push eax; and eax, 0x200; ret; 
0x00034441: add al, 0xf; mov bh, 4; push eax; and eax, 0x4000; ret; 
0x00034351: add al, 0xf; mov bh, 4; push eax; and eax, 0x400; ret; 
0x00034411: add al, 0xf; mov bh, 4; push eax; and eax, 0x8000; ret; 
0x000343b1: add al, 0xf; mov bh, 4; push eax; and eax, 0x800; ret; 
0x000345b1: add al, 0xf; mov bh, 4; push eax; and eax, 1; ret; 
0x00034381: add al, 0xf; mov bh, 4; push eax; and eax, 2; ret; 
0x00034471: add al, 0xf; mov bh, 4; push eax; and eax, 4; ret; 
0x00034321: add al, 0xf; mov bh, 4; push eax; and eax, 8; ret; 
0x0008b4ea: add al, 0xf; mov dh, 0; add esp, 4; pop ebx; pop esi; ret; 
0x0008b325: add al, 0xf; mov dh, 0; pop ebx; pop esi; pop edi; ret; 
0x00086847: add al, 0xf; mov dh, 0; shr al, 2; and eax, 1; xor eax, 1; ret; 
0x00086867: add al, 0xf; mov dh, 0; shr al, 3; and eax, 1; xor eax, 1; ret; 
0x000875d7: add al, 0xf; mov dh, 0; shr al, 4; and eax, 1; ret; 
0x000875f7: add al, 0xf; mov dh, 0; shr al, 5; and eax, 1; ret; 
0x0008bd25: add al, 0xf; mov dh, 0x40; inc dword ptr [ebx - 0x3b7c10dd]; add al, 0x5b; pop esi; ret; 
0x00136d70: add al, 0xf; mov dh, 0xc0; pop ebx; pop esi; neg eax; ret; 
0x001720b3: add al, 0xf; mov dh, 0xc0; pop ebx; pop esi; ret; 
0x00087665: add al, 0xf; mov dh, 2; ret; 
0x000dacbf: add al, 0xf; movsb byte ptr es:[edi], byte ptr [esi]; ret; 
0x001a5fc7: add al, 0xf; movzx ecx, byte ptr [esi + ecx]; sub eax, ecx; pop esi; pop edi; ret; 
0x0004123a: add al, 0xf; scasd eax, dword ptr es:[edi]; ret 0x5750; 
0x0003a330: add al, 0xf; scasd eax, dword ptr es:[edi]; ret 0x7c8b; 
0x000410ea: add al, 0xf; scasd eax, dword ptr es:[edi]; ret 0x8b50; 
0x000417ed: add al, 0xf; scasd eax, dword ptr es:[edi]; ret; 
0x001b2f64: add al, 0xf; test byte ptr [0x66000005], bl; cmp eax, 0x840f0800; ret; 
0x0015df84: add al, 0xf; test byte ptr [ebp - 0x7d000000], cl; ret 0x8014; 
0x000dfa73: add al, 0xf; test byte ptr [edi - 0x9ffffe3], bh; ret; 
0x001ab064: add al, 0xf; test dword ptr [ebp - 0x58000000], esi; add cl, byte ptr [edi]; test dword ptr [ebp - 0x7d000000], ebx; ret 0xf00; 
0x001ab90b: add al, 0xf; test dword ptr [ebx - 0x7cfffffd], ebx; ror byte ptr [ebx], 0x5f; ret; 
0x000d9665: add al, 0xf; test dword ptr [ecx + eax], esi; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x000b319b: add al, 0xf; test dword ptr [esi + 6], ebx; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000bab1c: add al, 0xf; test ebp, edi; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0002ed53: add al, 0xf; xchg dword ptr [eax + 0x9000000], esp; ret; 
0x00054053: add al, 0xf; xchg edx, eax; ret 0x789; 
0x00054199: add al, 0xf; xchg edx, eax; ret; 
0x0015835e: add al, 0xf; xchg esp, eax; ret 0x448b; 
0x0005ae1e: add al, 0xf; xchg esp, eax; ret 0x48b; 
0x0009c1d1: add al, 0xf; xchg esp, eax; ror byte ptr [edi], 0xb6; rol byte ptr [ebx - 0x3b7cfd18], 0xc; ret; 
0x0017ed6a: add al, 0xfc; add cl, ch; ret 0xfffc; 
0x0017141a: add al, 0xff; and byte ptr [ebp - 0x3fceff8a], cl; ret; 
0x0008e7a0: add al, 0xff; and byte ptr [esi], ch; lea esi, [esi]; ret; 
0x0019979e: add al, 0xff; inc dword ptr [ecx + 0x4230fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0017146f: add al, 0xff; je 0x171497; sbb al, 0x53; call dword ptr [eax + 4]; 
0x001714bd: add al, 0xff; je 0x1714e5; sbb al, 0x53; call dword ptr [eax]; 
0x0004109d: add al, 0xff; je 0x410c5; or byte ptr [esi + 0x57], dl; mov eax, dword ptr [esp + 0x10]; call eax; 
0x00041152: add al, 0xff; je 0x4117a; or byte ptr [esi + 0x57], dl; mov eax, dword ptr [esp + 0x10]; call eax; 
0x000411ca: add al, 0xff; je 0x411f2; or byte ptr [esi + 0x57], dl; mov eax, dword ptr [esp + 0x10]; call eax; 
0x00041282: add al, 0xff; je 0x412aa; or bh, bh; push dword ptr ss:[edi]; mov eax, dword ptr [esp + 0x10]; call eax; 
0x0007c141: add al, 0xff; je 0x7c169; xor byte ptr [ebp + 0x5110244c], cl; push dword ptr [edx + 0x98]; call eax; 
0x0014d80e: add al, 0xff; jmp dword ptr [esi - 0x70]; 
0x0007e750: add al, 0xff; jne 0x7e768; push dword ptr [ebp + 0xc]; push esi; call dword ptr [ebx + 0x2c]; 
0x00187136: add al, 0xff; push dword ptr ss:[ecx]; mov dword ptr [esp + 0x20], ecx; push dword ptr [esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x0017c70a: add al, 0xff; pushal; and byte ptr [esi - 0x70], ah; xor eax, eax; ret; 
0x00186b15: add al, 0xff; xchg edx, eax; add byte ptr [ebx], 0; add byte ptr [ecx + 0x28c48303], cl; pop ebx; ret; 
0x0016560d: add al, 0xff; xor byte ptr [ebp - 0x69ec77a], cl; call dword ptr [eax + 0x6a]; 
0x00124720: add al, 0xff; xor byte ptr [ebp - 0x6a0aa7d], cl; call dword ptr [eax + 0x6a]; 
0x00124588: add al, 0xff; xor byte ptr [ebp - 0x6a6a47d], cl; call dword ptr [eax + 0x6a]; 
0x0018b0a3: add al, 0xff; xor byte ptr [esi - 0x18], dl; aam 0x31; out dx, eax; jmp dword ptr [ecx]; 
0x00188209: add al, 0xff; xor edi, edi; jne 0x18820f; push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x001871b1: add al, 0xff; xor edi, edi; push dword ptr ss:[esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x000e9006: add al, 1; add al, byte ptr [eax]; add byte ptr [eax], al; xor eax, eax; add esp, 0xc; ret; 
0x000a047e: add al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000db3f2: add al, 1; add byte ptr [eax], al; mov dword ptr [esp + 0x30], eax; push eax; mov eax, dword ptr [esp + 0x64]; call eax; 
0x00179382: add al, 1; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x000d9698: add al, 1; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x000db587: add al, 1; add byte ptr [eax], al; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x30]; mov eax, dword ptr [esp + 0x64]; call eax; 
0x000c2ff9: add al, 1; add byte ptr [ecx + 0x75], cl; stc; pop esi; ret; 
0x00095906: add al, 1; add esp, 0xc; ret; 
0x0005abf2: add al, 1; add esp, 4; pop ebx; pop esi; ret; 
0x0012bf39: add al, 1; fcom dword ptr [eax - 0x73]; xchg dl, ah; push ebx; stc; call dword ptr [eax + 0x57]; 
0x000a01d7: add al, 1; fisttp dword ptr [ebx + 0x106b81b]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000a024b: add al, 1; fisttp dword ptr [ebx + 0x198b81b]; add byte ptr [eax], al; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0003457f: add al, 1; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0003453f: add al, 1; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x2c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0012390e: add al, 1; or al, 0; add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; ret; 
0x0002586e: add al, 1; or dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xffffffff; add esp, 0xc; ret; 
0x00084776: add al, 1; or dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xffffffff; ret; 
0x00117a76: add al, 1; push ss; add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x0003d0c5: add al, 1; push ss; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x00171700: add al, 1; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000a9c96: add al, 1; ret 0x78e9; 
0x001717e7: add al, 1; ret 0xc129; 
0x000c7a9c: add al, 1; ret; 
0x001acdfa: add al, 1; shl byte ptr [0xf0f0f0f], 1; imul eax, eax, 0x1010101; shr eax, 0x18; ret; 
0x000e8fae: add al, 2; add al, byte ptr [eax]; add byte ptr [eax], al; xor eax, eax; add esp, 0xc; ret; 
0x00125216: add al, 2; add al, byte ptr [eax]; add byte ptr [eax], al; xor eax, eax; pop ebx; ret; 
0x0003d26c: add al, 2; add byte ptr es:[eax], al; add byte ptr [eax - 1], bh; ret; 
0x0003b971: add al, 2; and al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x0003c03f: add al, 2; and al, byte ptr [eax]; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x00032bac: add al, 2; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x54]; ret; 
0x0003403c: add al, 2; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0003462c: add al, 2; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x000345fc: add al, 2; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x2c]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x000344fc: add al, 2; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x000344cc: add al, 2; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x0003449c: add al, 2; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x000343dc: add al, 2; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x0003443c: add al, 2; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x0003434c: add al, 2; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x0003440c: add al, 2; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x000343ac: add al, 2; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x000345ac: add al, 2; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x0003437c: add al, 2; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x0003446c: add al, 2; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x0003431c: add al, 2; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x0009b9ae: add al, 2; or eax, dword ptr [eax]; add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; ret; 
0x000eb1a6: add al, 2; push ss; add byte ptr [eax], al; add bl, ch; ret; 
0x0003d17e: add al, 2; push ss; add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; ret; 
0x0003c6de: add al, 2; push ss; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x00126cd6: add al, 2; push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0007c2dd: add al, 2; push ss; add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x000a5b3e: add al, 2; push ss; add byte ptr [eax], al; add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0014b10c: add al, 2; ret; 
0x00086be4: add al, 3; inc ecx; adc byte ptr [ebx], dl; push ecx; adc al, 0xeb; ret; 
0x0008683b: add al, 8; add byte ptr [eax], al; ret; 
0x0004069f: add al, 8; add byte ptr [ebx + 0x5e], bl; ret; 
0x0019a417: add al, 8; pop edi; call 0x189c1d; add ebx, 0x41691; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198317: add al, 8; pop edi; call 0x189c1d; add ebx, 0x43511; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196317: add al, 8; pop edi; call 0x189c1d; add ebx, 0x45291; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0006437c: add al, 9; ret 0xb70f; 
0x0003fa0a: add al, 9; ror byte ptr [ebx + 0x9082454], 1; ret 0xd389; 
0x0008684a: add al, al; call 0x1e8eb53; xor eax, 1; ret; 
0x0008686a: add al, al; call 0x1e8eb74; xor eax, 1; ret; 
0x000875da: add al, al; call 0x1e8f8e5; ret; 
0x000875fa: add al, al; call 0x1e8f906; ret; 
0x001420cc: add al, al; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x001423db: add al, al; shr edx, 0x10; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x0008f3b4: add al, bh; and dword ptr [ecx + ecx], 0; add byte ptr [eax], al; pop ebx; ret; 
0x000fd7ea: add al, bh; jmp dword ptr [esi + 0xb]; 
0x000b991a: add al, byte ptr [0x5e5f0000]; pop ebx; ret; 
0x001479d0: add al, byte ptr [eax + eax]; add byte ptr [ebx + 0x3934246c], cl; ret 0x470f; 
0x001479a2: add al, byte ptr [eax + eax]; add byte ptr [ecx], bh; ret 0x1988; 
0x000eb3ce: add al, byte ptr [eax - 0x6bf0a206]; ret 0xb60f; 
0x001a9d2f: add al, byte ptr [eax]; add byte ptr [eax + 0x76850f04], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf04; 
0x001a9d1e: add al, byte ptr [eax]; add byte ptr [eax + 0x77850f02], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf02; 
0x0009399e: add al, byte ptr [eax]; add byte ptr [eax + 0x9b], bh; call dword ptr gs:[0x10]; 
0x00092acc: add al, byte ptr [eax]; add byte ptr [eax + 0x9c], bh; call dword ptr gs:[0x10]; 
0x001a9cc7: add al, byte ptr [eax]; add byte ptr [eax - 0x17af0f0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x000b7958: add al, byte ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x001a9cd8: add al, byte ptr [eax]; add byte ptr [eax - 0x27af0e0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x001a9ce9: add al, byte ptr [eax]; add byte ptr [eax - 0x37af0c0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf40; 
0x000d2cc1: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; adc eax, -0x66; stc; call dword ptr [eax - 0x18]; 
0x00156283: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; add byte ptr [edx], 0x5e; stc; call dword ptr [eax - 0x18]; 
0x000de8dd: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; add dword ptr [edx + 0x46], -7; call dword ptr [eax - 0x18]; 
0x000d2ca2: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; add eax, -0x63; stc; call dword ptr [eax - 0x18]; 
0x0002881b: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; and edx, 0x2a; stc; call dword ptr [eax - 0x18]; 
0x0005df64: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; cmp esp, 0x7a; stc; call dword ptr [eax - 0x18]; 
0x0005df8e: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; or byte ptr [ebp + 0x31], 0xf9; call dword ptr [eax - 0x18]; 
0x000de8be: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; sub dword ptr [eax], -0x62; stc; call dword ptr [eax - 0x18]; 
0x000a1768: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg ah, bh; inc ecx; stc; call dword ptr [eax - 0x18]; 
0x0002c525: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], ch; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x0005df3f: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [ebx + edi*2], ah; stc; call dword ptr [eax - 0x18]; 
0x0011bc5b: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [ecx], dl; dec edx; stc; call dword ptr [eax - 0x18]; 
0x0014f713: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [edi + ebp*4], dh; stc; call dword ptr [eax - 0x18]; 
0x000a27eb: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [edi + ecx*4 - 7], al; call dword ptr [eax - 0x18]; 
0x000a1e5f: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [edi], ch; inc edx; stc; call dword ptr [eax - 0x18]; 
0x000a280e: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [esi + ecx*4 - 7], bh; call dword ptr [eax - 0x18]; 
0x0005dfb3: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [esi], dh; xor ecx, edi; call dword ptr [eax - 0x18]; 
0x00029b09: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dl, ah; sub bh, cl; call dword ptr [eax - 0x18]; 
0x0011bc2b: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dl, bh; dec ecx; stc; call dword ptr [eax - 0x18]; 
0x0004a230: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + 0x2f], esi; stc; call dword ptr [eax - 0x18]; 
0x00028f2f: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg edx, esp; sub bh, cl; call dword ptr [eax - 0x18]; 
0x00152026: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xor byte ptr [eax], 0xb0; stc; call dword ptr [eax - 0x18]; 
0x000de89f: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xor dword ptr [ebx], 0x46; stc; call dword ptr [eax - 0x18]; 
0x0014c2ce: add al, byte ptr [eax]; add byte ptr [eax], al; add bl, ch; ret 0x148d; 
0x0018ab8d: add al, byte ptr [eax]; add byte ptr [eax], al; add bl, ch; ret 0x748d; 
0x0008f884: add al, byte ptr [eax]; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x8087], cl; add byte ptr [eax - 0x768c8af0], ch; ret 0xca83; 
0x00084440: add al, byte ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00177296: add al, byte ptr [eax]; add byte ptr [eax], al; add eax, 0x38; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x001768c6: add al, byte ptr [eax]; add byte ptr [eax], al; add eax, 0x4c; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x00173c09: add al, byte ptr [eax]; add byte ptr [eax], al; add eax, 0xac; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x00174816: add al, byte ptr [eax]; add byte ptr [eax], al; add eax, 8; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x00189901: add al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0xc; ret; 
0x00042896: add al, byte ptr [eax]; add byte ptr [eax], al; bsr ecx, ecx; shl eax, cl; ret; 
0x000982af: add al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000794fe: add al, byte ptr [eax]; add byte ptr [eax], al; mov dword ptr [eax + 0x18], edx; ret; 
0x0004222b: add al, byte ptr [eax]; add byte ptr [eax], al; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x00133f9a: add al, byte ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [ebp - 0x510]; mov dword ptr [ebp - 0x4e8], eax; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x00132fbb: add al, byte ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x000938a3: add al, byte ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 8]; xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x00092d16: add al, byte ptr [eax]; add byte ptr [eax], al; mov esi, 8; add ecx, 0x474; call dword ptr gs:[0x10]; 
0x00042866: add al, byte ptr [eax]; add byte ptr [eax], al; movzx ecx, cl; bsr ecx, ecx; shl eax, cl; ret; 
0x00042947: add al, byte ptr [eax]; add byte ptr [eax], al; movzx ecx, cx; bsr ecx, ecx; shl eax, cl; ret; 
0x00170b87: add al, byte ptr [eax]; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x000d9a01: add al, byte ptr [eax]; add byte ptr [eax], al; ret; 
0x00125e97: add al, byte ptr [eax]; add byte ptr [eax], al; test eax, eax; cmove eax, edx; add esp, 0xc; ret; 
0x000e8fb0: add al, byte ptr [eax]; add byte ptr [eax], al; xor eax, eax; add esp, 0xc; ret; 
0x00125218: add al, byte ptr [eax]; add byte ptr [eax], al; xor eax, eax; pop ebx; ret; 
0x0010d203: add al, byte ptr [eax]; add byte ptr [eax], al; xor edx, edx; mov ecx, dword ptr [esp + 4]; mov esi, 8; call dword ptr gs:[0x10]; 
0x0010d607: add al, byte ptr [eax]; add byte ptr [eax], al; xor edx, edx; mov esi, 8; mov ecx, dword ptr [ebp - 0x144]; call dword ptr gs:[0x10]; 
0x0008f224: add al, byte ptr [eax]; add byte ptr [eax], al; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008f293: add al, byte ptr [eax]; add byte ptr [eax], al; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00092ac6: add al, byte ptr [eax]; add byte ptr [ebp + 0x22096], cl; add byte ptr [eax + 0x9c], bh; call dword ptr gs:[0x10]; 
0x0010d83e: add al, byte ptr [eax]; add byte ptr [ebp + 0x30840fc0], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x1477b], cl; jmp dword ptr [ebp - 0x75]; 
0x0013a5fb: add al, byte ptr [eax]; add byte ptr [ebp + 0x30], dh; pop ebx; pop esi; pop edi; ret; 
0x0009c133: add al, byte ptr [eax]; add byte ptr [ebp - 0x1a2d237d], cl; jmp dword ptr [ebp - 0x5d]; 
0x0009c13f: add al, byte ptr [eax]; add byte ptr [ebp - 0x1a2e637d], cl; call dword ptr [ecx + 0x50]; 
0x00075073: add al, byte ptr [eax]; add byte ptr [ebp - 0x4cb7b], cl; call dword ptr [ecx - 1]; 
0x000605f2: add al, byte ptr [eax]; add byte ptr [ebp - 0x69c6a7d], cl; call dword ptr [eax + 0x68]; 
0x00151fd6: add al, byte ptr [eax]; add byte ptr [ebp - 0x6a3827e], cl; call dword ptr [eax - 0x73]; 
0x0009d5b4: add al, byte ptr [eax]; add byte ptr [ebp - 0x6bf007f], cl; call dword ptr [eax - 0x73]; 
0x0014fc08: add al, byte ptr [eax]; add byte ptr [ebx + 0x1c895], cl; add bh, dh; ret 0; 
0x0014f693: add al, byte ptr [eax]; add byte ptr [ebx + 0x396604ec], al; ret 0x470f; 
0x00087cd2: add al, byte ptr [eax]; add byte ptr [ebx + 0x448d08ec], al; and al, 0x38; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x00095343: add al, byte ptr [eax]; add byte ptr [ebx + 0x458901c0], al; add al, 0xe9; mov al, byte ptr [0xf7fffffd]; ret 0; 
0x000d2b1a: add al, byte ptr [eax]; add byte ptr [ebx + 0x48db055], cl; test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xa8b; 
0x0005e5a6: add al, byte ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0003dbd8: add al, byte ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0007b429: add al, byte ptr [eax]; add byte ptr [ebx + 0x6a08ec], al; push esi; call dword ptr [ebx + 8]; 
0x0009befb: add al, byte ptr [eax]; add byte ptr [ebx - 0x2776fb3c], al; pop ebx; pop esi; ret; 
0x000d6451: add al, byte ptr [eax]; add byte ptr [ebx - 0x362f43], al; call dword ptr [eax]; 
0x0010ddf5: add al, byte ptr [eax]; add byte ptr [ebx - 0x38f6c7c], cl; clc; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x00060736: add al, byte ptr [eax]; add byte ptr [ebx - 0x46ab746c], cl; clc; inc dword ptr [ecx]; fidivr dword ptr [esi]; jmp edx; 
0x00077f03: add al, byte ptr [eax]; add byte ptr [ebx - 0x51773], cl; call ecx; 
0x0002d5f7: add al, byte ptr [eax]; add byte ptr [ebx - 0x72bbdb84], cl; xchg dword ptr [edx + ebp*2 - 7], ebp; call dword ptr [eax - 0x73]; 
0x0002a7b2: add al, byte ptr [eax]; add byte ptr [ebx - 0x72c7db84], cl; xchg esp, ebp; push -7; call dword ptr [eax - 0x73]; 
0x0015fd59: add al, byte ptr [eax]; add byte ptr [ebx - 0x72efdb8c], cl; xchg byte ptr [ebp + esi*4 - 7], cl; call dword ptr [eax - 0x73]; 
0x0012d256: add al, byte ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; cmc; push ebx; stc; call dword ptr [eax + 0x56]; 
0x000dd380: add al, byte ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; sub ecx, edi; call dword ptr [eax + 0x56]; 
0x0015cc81: add al, byte ptr [eax]; add byte ptr [ebx - 0x7cebdb8c], cl; ret 0x8301; 
0x00092d33: add al, byte ptr [eax]; add byte ptr [ebx - 0x7e74f314], al; sub byte ptr [edx], al; add byte ptr [eax], al; push edx; call eax; 
0x0008277f: add al, byte ptr [eax]; add byte ptr [ebx - 0x95f714], al; push dword ptr [ebx]; call dword ptr [edi + 0xc]; 
0x0008dd8c: add al, byte ptr [eax]; add byte ptr [ecx + 0x4c48310], cl; pop ebx; pop esi; ret; 
0x000348f2: add al, byte ptr [eax]; add byte ptr [ecx + 0x5e5b1814], cl; ret; 
0x00135590: add al, byte ptr [eax]; add byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x0010d2a3: add al, byte ptr [eax]; add byte ptr [ecx + 0xac2484], cl; add byte ptr [eax], al; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x000c5831: add al, byte ptr [eax]; add byte ptr [ecx - 0x76a7dbac], cl; ret 0x448b; 
0x000490ae: add al, byte ptr [eax]; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x20e9; 
0x0004838e: add al, byte ptr [eax]; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x8d2e; 
0x0008fa1d: add al, byte ptr [eax]; add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; call dword ptr gs:[0x10]; 
0x0008f922: add al, byte ptr [eax]; add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x0013b8c3: add al, byte ptr [eax]; add byte ptr [ecx], al; call edx; 
0x000c1343: add al, byte ptr [eax]; add byte ptr [ecx], al; clc; add eax, ecx; pop edi; ret; 
0x000fedb3: add al, byte ptr [eax]; add byte ptr [ecx], al; ret; 
0x00096ca5: add al, byte ptr [eax]; add byte ptr [ecx], bh; ret 0x4f0f; 
0x0008be1e: add al, byte ptr [eax]; add byte ptr [ecx], bh; ret; 
0x000b3507: add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x00104e5d: add al, byte ptr [eax]; add byte ptr [edi], cl; dec esi; ret 0x4489; 
0x000980ea: add al, byte ptr [eax]; add byte ptr [edi], cl; inc esp; ret 0x118b; 
0x0014fb06: add al, byte ptr [eax]; add byte ptr [edi], cl; lahf; ret 0xd009; 
0x0018806b: add al, byte ptr [eax]; add byte ptr [edi], cl; mov bh, 0x50; adc byte ptr [esi - 9], ah; ret 0x7f8; 
0x00104e26: add al, byte ptr [eax]; add byte ptr [edi], cl; sahf; ret 0xd201; 
0x0005173d: add al, byte ptr [eax]; add byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; aad 1; ret 0xd889; 
0x00137912: add al, byte ptr [eax]; add byte ptr [edx], al; call dword ptr [ebp + 0x14]; 
0x0018be97: add al, byte ptr [eax]; add byte ptr [edx], ch; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x30]; push esi; call dword ptr [ebx + 0x40]; 
0x0014f0c9: add al, byte ptr [eax]; add byte ptr [esi - 0x18], dl; push cs; ret; 
0x0004d017: add al, byte ptr [eax]; add cl, bl; xchg dword ptr [eax], edx; ret 0xfff9; 
0x0007abd4: add al, byte ptr [eax]; add dh, dh; ret 0xf04; 
0x0005ceec: add al, byte ptr [eax]; add dh, dh; ret 0xf10; 
0x000a55f6: add al, byte ptr [eax]; add dh, dh; ret; 
0x000f15e0: add al, byte ptr [eax]; add dh, dh; test dword ptr [edx + edi*8 - 1], eax; call dword ptr [eax]; 
0x000a0c0c: add al, byte ptr [eax]; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000611f9: add al, byte ptr [eax]; add esp, 0x10; mov eax, dword ptr [esp + 0xc]; add esp, 0x18; pop ebx; ret; 
0x0015a0a5: add al, byte ptr [eax]; add esp, 0x10; mov eax, dword ptr [esp]; call eax; 
0x0015a23a: add al, byte ptr [eax]; add esp, 0x10; mov eax, ebx; call eax; 
0x0005aa89: add al, byte ptr [eax]; add esp, 0x1c; ret; 
0x00061450: add al, byte ptr [eax]; add esp, 0x2c; ret; 
0x00141f9f: add al, byte ptr [eax]; jne 0x141fa9; movzx eax, byte ptr [edx + 1]; shr eax, 1; ret; 
0x001635ca: add al, byte ptr [eax]; mov dword ptr [esp], ebp; call ebx; 
0x00163234: add al, byte ptr [eax]; mov dword ptr [esp], ebp; call edi; 
0x0016341b: add al, byte ptr [eax]; mov dword ptr [esp], ebp; call esi; 
0x001628d6: add al, byte ptr [eax]; mov dword ptr [esp], esi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x000abdd1: add al, byte ptr [eax]; mov eax, edx; pop ebx; pop esi; ret; 
0x00114ecd: add al, byte ptr [eax]; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x00141dd3: add al, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x000abe07: add al, byte ptr [eax]; pop ebx; pop esi; ret; 
0x00085a56: add al, byte ptr [eax]; pop ebx; ret; 
0x00099f08: add al, byte ptr [ebp + 0x39b475ff]; ret 0xd174; 
0x00149ab3: add al, byte ptr [ebp - 0x76c28b37]; ret; 
0x001749ef: add al, byte ptr [ebp - 0x7ce58b40]; in al, dx; or al, 0x83; ret 0x5208; 
0x0007fb21: add al, byte ptr [ebp - 0x7cf48740]; ret 0x8304; 
0x00090441: add al, byte ptr [ebx + 0x28901e0]; xor eax, eax; ret; 
0x0008b588: add al, byte ptr [ebx + 0x5a8d08ec]; add dword ptr [eax + 0x56], edx; call dword ptr [ebp + 0xc]; 
0x0014163e: add al, byte ptr [ebx + 0x5e5b04c4]; pop edi; pop ebp; ret; 
0x0008ddc3: add al, byte ptr [ebx + 0x5e5b04c4]; ret; 
0x00134a36: add al, byte ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x0007fafa: add al, byte ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0009197c: add al, byte ptr [ebx + 0xe7403f8]; pop ebx; pop esi; pop edi; ret; 
0x00090503: add al, byte ptr [ebx - 0x3fcee73c]; pop ebx; ret; 
0x00140201: add al, byte ptr [ebx - 0x68f0f008]; ret; 
0x0018679b: add al, byte ptr [ebx]; inc ebx; add al, 0x89; ret; 
0x000decc5: add al, byte ptr [ecx - 0x70a3d707]; add dh, byte ptr [esi + 0xa]; mov eax, edx; ret; 
0x00038961: add al, byte ptr [ecx - 0xccc1e]; inc dword ptr [ecx]; ret 0xd089; 
0x000af733: add al, byte ptr [ecx]; jne 0xaf720; pop ebx; pop esi; pop edi; ret; 
0x000480bd: add al, byte ptr [ecx]; ret 0x448b; 
0x0002f8db: add al, byte ptr [ecx]; ret 0x9539; 
0x000e3b5b: add al, byte ptr [ecx]; ret 0xd329; 
0x000e60e2: add al, byte ptr [ecx]; ret 0xd729; 
0x000d64e3: add al, byte ptr [ecx]; ret 0xd889; 
0x000ced02: add al, byte ptr [ecx]; ret; 
0x0005b876: add al, byte ptr [edi]; add byte ptr [eax], al; add byte ptr [ebx - 0x3fcefb3c], al; pop ebx; pop esi; ret; 
0x000d9994: add al, byte ptr [edx + edx*8 - 0x2e77e88c]; and cl, 0xf; je 0xd99c0; ret; 
0x001a9d2e: add al, byte ptr ds:[eax]; add byte ptr [eax + 0x76850f04], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf04; 
0x0007b428: add al, byte ptr fs:[eax]; add byte ptr [ebx + 0x6a08ec], al; push esi; call dword ptr [ebx + 8]; 
0x00124dbf: add al, ch; cmp ebx, dword ptr [eax + 0x5c8bfff6]; and al, 0x20; mov edx, eax; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x000fb607: add al, ch; das; stc; dec dword ptr [ecx + 0x1db8c2]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00160a4f: add al, ch; dec ebx; daa; in al, dx; jmp dword ptr [ebp - 0x75]; 
0x00142f8f: add al, ch; fcmovnu st(0), st(2); cli; jmp dword ptr [esi - 0x3f]; 
0x0013e27f: add al, ch; imul esp, ebp, -1; jmp dword ptr [esi - 0x70]; 
0x00172f49: add al, ch; int1; ret 0xfff7; 
0x00154928: add al, ch; jb 0x154914; in al, dx; jmp dword ptr [ebp - 0x5f]; 
0x00132fa9: add al, ch; jle 0x133019; add eax, 0x65c58100; mov esi, 0x31570010; call dword ptr [esi + 0x53]; 
0x0014cb9b: add al, ch; jmp dword ptr [ebp - 0x13]; 
0x000e7560: add al, ch; ljmp 0x10c4:0x83000000; mov eax, 1; add esp, 0xc; ret; 
0x0002e210: add al, ch; ljmp 0x247c:0x8b0010fa; cmp byte ptr [ebp - 0x695d379], cl; call dword ptr [eax + 0x68]; 
0x000ba97f: add al, ch; lodsb al, byte ptr [esi]; or al, 0; add ecx, 0x11249b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00128ce7: add al, ch; mov ebx, 0x83ffefa4; les ebx, ptr [eax]; pop ebx; ret; 
0x0012486f: add al, ch; mov ebx, dword ptr [ebp + 0x5c8bfff6]; and al, 0x20; mov edx, eax; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x00193358: add al, ch; mov edi, 0x81ffff68; ret; 
0x0016305b: add al, ch; mov esp, 0x8100026b; ret; 
0x0006115b: add al, ch; mov esp, 0x8100128a; ret; 
0x000c091f: add al, ch; or al, 0x93; or al, 0; add ecx, 0x10c6cf; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0003a2ee: add al, ch; or al, 0xe8; push cs; add byte ptr [ebx + 0x478920c4], al; adc al, 0x89; ret; 
0x00132ab9: add al, ch; outsb dx, byte ptr [esi]; jno 0x132ac3; add byte ptr [ecx + 0x10c355c5], al; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x31]; 
0x001336c9: add al, ch; pop esi; add eax, 0x45c58100; mov bh, 0x10; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x0012c14c: add al, ch; push ds; dec ecx; cld; call dword ptr [eax - 0x73]; 
0x00186e3a: add al, ch; push eax; ret 0xffe9; 
0x00126468: add al, ch; push edx; ret; 
0x0009d834: add al, ch; push es; ret; 
0x00139078: add al, ch; ret 0xf063; 
0x00150008: add al, ch; ret 0xfe19; 
0x000385d8: add al, ch; ret 0xfeab; 
0x000608c7: add al, ch; ret; 
0x0017671d: add al, ch; sbb eax, 0x8900002c; ret; 
0x000c31ec: add al, ch; scasb al, byte ptr es:[edi]; push ebp; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00193a57: add al, ch; shl byte ptr [ecx - 1], 0xff; add ebx, 0x47953; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0003d64f: add al, ch; stosd dword ptr es:[edi], eax; syscall; 
0x0013e94f: add al, ch; wait; fdivp st(7); jmp dword ptr [esi - 0x70]; 
0x0007fb1e: add al, cl; stc; add al, byte ptr [ebp - 0x7cf48740]; ret 0x8304; 
0x0008ec5d: add al, dh; cmpxchg dword ptr [ecx], edx; setne al; movzx eax, al; pop ebx; ret; 
0x000a569d: add al, dh; dec dword ptr [edi]; inc esp; ret 0x568d; 
0x000a5ce4: add al, dh; dec dword ptr [edi]; inc esp; ret 0xf821; 
0x000a119a: add al, dh; dec dword ptr [edi]; inc esp; ret 0xff31; 
0x000a5332: add al, dh; dec dword ptr [edi]; inc esp; shl dword ptr [ecx], 1; ret 0x1a8b; 
0x000abec5: add al, dh; inc edx; add al, byte ptr [eax]; pop ebx; pop esi; ret; 
0x00133539: add ax, 0x8100; ret; 
0x000a0787: add bh, al; adc ah, 0x3b; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0009f4ad: add bh, al; adc al, 0x3b; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0008756d: add bh, al; adc byte ptr [edx + ebx], 0; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x00084774: add bh, al; add al, 1; or dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xffffffff; ret; 
0x00117a74: add bh, al; add al, 1; push ss; add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x0003d0c3: add bh, al; add al, 1; push ss; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x0003d26a: add bh, al; add al, 2; add byte ptr es:[eax], al; add byte ptr [eax - 1], bh; ret; 
0x000eb1a4: add bh, al; add al, 2; push ss; add byte ptr [eax], al; add bl, ch; ret; 
0x0003c6dc: add bh, al; add al, 2; push ss; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x00126cd4: add bh, al; add al, 2; push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0018ab8b: add bh, al; add al, byte ptr [eax]; add byte ptr [eax], al; add bl, ch; ret 0x748d; 
0x0008443e: add bh, al; add al, byte ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00170707: add bh, al; add byte ptr [eax + eax], cl; add byte ptr [eax], al; pop ebx; ret; 
0x000a4bff: add bh, al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000799f6: add bh, al; add dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x00184201: add bh, al; add ebp, dword ptr [edi]; jbe 0x18418c; in al, dx; add al, 0x83; ret; 
0x0008ce31: add bh, al; cmp byte ptr [edx + ebx], 0; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x001575b1: add bh, al; cmp dword ptr [eax + 0x5e], 0; add byte ptr [eax], al; call esi; 
0x001574a1: add bh, al; cmp dword ptr [eax], 0x7f; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x00157529: add bh, al; cmp eax, 0x6e; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x001452bf: add bh, al; inc ebx; sbb al, 0; add byte ptr [eax], al; add byte ptr [ebp + 0x44c74004], cl; ret 8; 
0x00055d65: add bh, al; inc ecx; add al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000a0efd: add bh, al; inc edi; add al, 0; add byte ptr [eax], al; add byte ptr [ebp + 0x39b774d2], al; ret 0xb374; 
0x0012e834: add bh, al; inc edx; add al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0011563d: add bh, al; inc edx; add al, 0; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x00059332: add bh, al; inc esi; add al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0015bf8f: add bh, al; inc esi; or al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0016bef2: add bh, al; inc esi; sbb byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0008ca9e: add bh, al; inc esi; sub byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0008af16: add bh, al; inc esi; sub byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x00070afb: add bh, al; inc esp; and al, 0x14; add byte ptr [eax], al; add byte ptr [eax], al; jmp edx; 
0x00070e7b: add bh, al; inc esp; and al, 0x14; add dword ptr [eax], eax; add byte ptr [eax], al; jmp edx; 
0x000704f8: add bh, al; inc esp; and al, 0x20; add dword ptr [eax], eax; add byte ptr [eax], al; jmp edx; 
0x000642f7: add bh, al; inc esp; and al, 0x24; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x000701f2: add bh, al; inc esp; and al, 0x30; add byte ptr [eax], al; add byte ptr [eax], al; jmp ebx; 
0x000706bb: add bh, al; inc esp; and al, 0x3c; add byte ptr [eax], al; add byte ptr [eax], al; jmp edx; 
0x0009f5d4: add bh, al; inc esp; and al, 0x44; add al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f1c17: add bh, al; test dword ptr [ebx + edi*8 - 1], ebp; jmp dword ptr [eax]; 
0x0008cdad: add bh, al; xor byte ptr [edx + ebx], 0; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x000c2192: add bh, bh; add byte ptr [ecx + eax + 0x40], dh; pop edi; pop esi; ret; 
0x000c1fee: add bh, bh; add byte ptr [ecx + eax + 0x40], dh; pop edi; ret; 
0x00199bbe: add bh, bh; inc dword ptr [ecx + 0x41eefc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00199b25: add bh, bh; inc dword ptr [ecx + 0x41f88c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001999c5: add bh, bh; inc dword ptr [ecx + 0x420e8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0003ef55: add bh, bh; jae 0x3ef5d; call eax; 
0x0010e428: add bh, bh; je 0x10e450; sbb byte ptr [edx - 1], ch; call 0x10e970; add esp, 0x1c; ret; 
0x0011bbde: add bh, bh; je 0x11bc06; xor bh, bh; jbe 0x11bbf2; call dword ptr [esi + 0x24]; 
0x0011cd0e: add bh, bh; je 0x11cd36; xor bh, bh; jbe 0x11cd22; call dword ptr [esi + 0x24]; 
0x0011de7e: add bh, bh; je 0x11dea6; xor bh, bh; jbe 0x11de92; call dword ptr [esi + 0x24]; 
0x00154f60: add bh, bh; je 0x154f88; adc al, 0x55; call edi; 
0x0015f7af: add bh, bh; je 0x15f7d7; push dword ptr fs:[esp + 0x50]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x00163363: add bh, bh; je 0x16338b; or al, 0x55; call edi; 
0x00179d98: add bh, bh; je 0x179dc0; sbb al, 0x53; call eax; 
0x0018820e: add bh, bh; je 0x188236; or al, 0x8b; inc esp; and al, 0x14; call eax; 
0x0003dffa: add bh, bh; je 0x3e022; sbb al, 0xe8; lodsb al, byte ptr [esi]; test dword ptr [eax], 0x1cc48300; ret; 
0x0008557c: add bh, bh; je 0x855a4; sbb al, 0xe8; lcall 0x1cc4, 0x83ffff90; ret; 
0x000df53d: add bh, bh; je 0xdf565; adc al, 0xe8; cdq; ret; 
0x0003adc0: add bh, bh; jg 0x3ad45; ljmp 0xd089:0x7fff0000; shr eax, 0x1f; ret; 
0x00164bf1: add bh, bh; jmp dword ptr [ebp - 0x75]; 
0x001775b3: add bh, bh; jne 0x177607; push edi; call dword ptr [eax + 0x14]; 
0x00083ffc: add bh, bh; jne 0x83fd4; push edx; push ebx; push esi; call eax; 
0x000a713b: add bh, bh; mov ah, 0x24; hlt; add byte ptr [eax], al; add byte ptr [ebp - 0x6666780], cl; call dword ptr [eax + 0x68]; 
0x001931fe: add bh, bh; nop; jl 0x193206; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0009afa8: add bh, bh; pop esi; pop edi; pop ebp; ret; 
0x000333bd: add bh, bh; xor al, 2; push dword ptr [esp + 0x1c]; call 0x333d0; add esp, 0x1c; ret; 
0x000ab57d: add bh, bh; xor al, 2; push dword ptr [esp + 0x1c]; call 0xab590; add esp, 0x1c; ret; 
0x0005b0a0: add bh, bh; xor al, ch; sbb byte ptr [eax + eax + 0x1cc48300], dh; ret; 
0x00124231: add bh, bh; xor byte ptr [ebp - 0x6a6a47d], cl; call dword ptr [eax - 1]; 
0x000605b4: add bh, byte ptr [eax + 1]; ret; 
0x0007361c: add bh, byte ptr [ecx]; fnstenv [ecx + ebx - 0x7d]; in al, dx; or byte ptr [ebx - 0x4ff63], cl; call dword ptr [edx + 0x50]; 
0x00141c85: add bh, byte ptr [ecx]; rcr dword ptr [ecx], 0xd2; mov eax, edx; pop ebx; pop esi; ret; 
0x0002ded2: add bh, byte ptr [ecx]; ret 0x820f; 
0x00030e9d: add bh, byte ptr [ecx]; ret 0xf072; 
0x0006d705: add bh, byte ptr [ecx]; ret; 
0x0010e2c9: add bh, byte ptr [ecx]; ror byte ptr [edi], 1; dec edi; ret 0xbce9; 
0x00184651: add bh, byte ptr [edi + 0xc]; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00112027: add bh, cl; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x000a5696: add bh, dh; fadd dword ptr [ebp + 0xbad2]; lock dec dword ptr [edi]; inc esp; ret 0x568d; 
0x000a5cdd: add bh, dh; fadd dword ptr [ebp + 0xbad2]; lock dec dword ptr [edi]; inc esp; ret 0xf821; 
0x000a1193: add bh, dh; fadd dword ptr [ebp + 0xbad2]; lock dec dword ptr [edi]; inc esp; ret 0xff31; 
0x000e7ca2: add bh, dh; fadd dword ptr [ebx + 0x440fdafb]; ret 0x548b; 
0x000a532b: add bh, dh; fiadd dword ptr [ebp + 0xb9c9]; lock dec dword ptr [edi]; inc esp; shl dword ptr [ecx], 1; ret 0x1a8b; 
0x000c8b6b: add bh, dh; in eax, 0x89; rol byte ptr [ebx - 0x173e031e], 1; add al, byte ptr [ecx]; ret 0x448b; 
0x000c3fe0: add bh, dh; jmp dword ptr [esi - 0x70]; 
0x0009a39a: add bh, dh; mov dword ptr [ecx], 0x74000000; aad 0x89; ret 0xe083; 
0x000d64d9: add bh, dh; out 0x89, eax; rol byte ptr [ebx - 0x173e031e], 1; add al, byte ptr [ecx]; ret 0xd889; 
0x00096dcf: add bh, dh; ret 0; 
0x000c1be5: add bh, dh; ret 0x3f; 
0x001932f8: add bh, dh; ret 0xf; 
0x000c2621: add bh, dh; ret 3; 
0x001b27c3: add bh, dh; ret; 
0x000e75ff: add bh, dh; ror dword ptr [ebp + 0x2dd1c], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f0a6b: add bl, al; nop; nop; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x000f0a7b: add bl, al; nop; nop; mov eax, 0x40; call dword ptr gs:[0x10]; 
0x000efa7b: add bl, al; nop; nop; mov eax, 0xc8; call dword ptr gs:[0x10]; 
0x000efa6b: add bl, al; nop; nop; mov eax, 0xc9; call dword ptr gs:[0x10]; 
0x0004e3ff: add bl, bl; lodsd eax, dword ptr [esi]; mov ecx, es; stc; jmp dword ptr [ebp - 0x75]; 
0x000abd28: add bl, byte ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x000811fe: add bl, byte ptr [ebx + 0x5e]; pop edi; ret; 
0x0008d330: add bl, byte ptr [ebx + 0x5e]; ret; 
0x000b998b: add bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x0019b2c0: add bl, byte ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x000fd59a: add bl, byte ptr [edx + esi*8 - 1]; add esp, 0x14; pop ebx; pop esi; ret; 
0x0007fb95: add bl, byte ptr [esi + 0x5f]; pop ebp; ret; 
0x0008136e: add bl, byte ptr [esi + 0x5f]; ret; 
0x001acbc7: add bl, byte ptr [esi - 0x7d]; ret 0x8308; 
0x00156289: add bl, byte ptr [esi - 7]; call dword ptr [eax - 0x18]; 
0x00156289: add bl, byte ptr [esi - 7]; call dword ptr [eax - 0x18]; fstp st(5); in eax, dx; jmp dword ptr [esi - 0x70]; 
0x0002ab23: add bl, ch; fisttp dword ptr [ebx - 0x72c7db84]; xchg dword ptr [edx + esi*2 - 7], esp; call dword ptr [eax - 0x73]; 
0x0016f9b4: add bl, ch; fucomi st(0); inc esp; jecxz 0x16f9b7; jmp dword ptr [esi - 0x70]; 
0x00184146: add bl, ch; fucomi st(0); mov dl, 0x9b; sti; jmp dword ptr [esi - 0x70]; 
0x000ea115: add bl, ch; or dword ptr [esi], ebp; lea esi, [esi]; hlt; mov eax, edx; call dword ptr gs:[0x10]; 
0x0014c2d2: add bl, ch; ret 0x148d; 
0x0018ab91: add bl, ch; ret 0x748d; 
0x00079196: add bl, ch; ret 0x9066; 
0x000e515c: add bl, ch; ret; 
0x00171a23: add bl, ch; shr eax, 0xd5; ret 0xfffc; 
0x000a6b49: add bl, ch; xchg esi, eax; lea esi, [esi]; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax + 0x90]; call dword ptr [eax]; 
0x000433a7: add bl, dh; bsf ecx, ecx; pop ebx; lea eax, [ecx + 0x20]; ret; 
0x000b5a5f: add bl, dh; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000b169f: add bl, dh; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000b192f: add bl, dh; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000bd78f: add bl, dh; movq mm0, qword ptr [esi]; movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0e4f: add bl, dh; movq qword ptr [eax + 0x10], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd98c: add bl, dh; movq qword ptr [eax + 0x10], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0def: add bl, dh; movq qword ptr [eax + 0xd], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd92c: add bl, dh; movq qword ptr [eax + 0xd], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0e0f: add bl, dh; movq qword ptr [eax + 0xe], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd94c: add bl, dh; movq qword ptr [eax + 0xe], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0e2f: add bl, dh; movq qword ptr [eax + 0xf], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd96c: add bl, dh; movq qword ptr [eax + 0xf], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b9ddf: add bl, dh; movq qword ptr [edi - 1], mm0; pop edi; pop esi; pop ebx; ret; 
0x000b9def: add bl, dh; movq qword ptr [edi], mm0; pop edi; pop esi; pop ebx; ret; 
0x001168da: add bl, dl; call 0x29134964; ret; 
0x0011838a: add bl, dl; call 0x29136414; ret; 
0x00119e2a: add bl, dl; call 0x29137eb4; ret; 
0x00134738: add byte ptr [0x10a6db], al; mov eax, dword ptr [eax + 0x108]; mov eax, dword ptr [eax + 0x20]; ret; 
0x000a0b68: add byte ptr [0x19e2ab], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x3c34], edx; ret; 
0x000a08a8: add byte ptr [0x19e56b], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x358], edx; ret; 
0x00095998: add byte ptr [0x1a947b], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x2a4], edx; ret; 
0x00094818: add byte ptr [0x1aa5fb], al; mov eax, dword ptr [eax + 0x3af4]; ret; 
0x0008e928: add byte ptr [0x1b04eb], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x29c], edx; ret; 
0x0008e908: add byte ptr [0x1b050b], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x298], edx; ret; 
0x0008e8e8: add byte ptr [0x1b052b], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x294], edx; ret; 
0x0008e8c8: add byte ptr [0x1b054b], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x290], edx; ret; 
0x0008cc98: add byte ptr [0x1b217b], al; mov eax, dword ptr [eax + 0xe6c]; ret; 
0x001aa54f: add byte ptr [0x1ff], ah; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x00086889: add byte ptr [0x200], ah; ret; 
0x0003d4c8: add byte ptr [0x20194b], al; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x0003d4a8: add byte ptr [0x20196b], al; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x00034888: add byte ptr [0x20a58b], al; mov eax, dword ptr [eax + 0x94]; add eax, dword ptr gs:[0]; ret; 
0x00034868: add byte ptr [0x20a5ab], al; mov eax, dword ptr [eax + 0x1d0]; add eax, dword ptr gs:[0]; ret; 
0x00034848: add byte ptr [0x20a5cb], al; mov eax, dword ptr [eax + 0x9c]; add eax, dword ptr gs:[0]; ret; 
0x0002f548: add byte ptr [0x20f8cb], al; mov eax, dword ptr [eax + 0x10e0]; ret; 
0x000260c8: add byte ptr [0x218d4b], al; mov eax, dword ptr [eax + 0x10bc]; ret; 
0x000260a8: add byte ptr [0x218d6b], al; mov eax, dword ptr [eax + 0x10b8]; ret; 
0x00025558: add byte ptr [0x2198bb], al; mov eax, dword ptr [eax + 0xa4]; add eax, dword ptr gs:[0]; ret; 
0x00024fd8: add byte ptr [0x219e3b], al; lea eax, [eax - 0x690b4]; ret; 
0x00024fb8: add byte ptr [0x219e5b], al; lea eax, [eax - 0x690ac]; ret; 
0x000a08d4: add byte ptr [0x3fc], bh; jbe 0xa08e0; ret; 
0x00086839: add byte ptr [0x804], ah; ret; 
0x00173c0c: add byte ptr [0xac], al; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x00097f6d: add byte ptr [0xf000dff], ah; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0014b0f8: add byte ptr [0xf3d1b], al; mov edx, dword ptr gs:[0]; mov eax, dword ptr [eax + 0x1c8]; mov eax, dword ptr [edx + eax]; ret; 
0x0017cffc: add byte ptr [0xff3fffc], cl; push ds; sti; xor eax, eax; ret; 
0x0013f5f8: add byte ptr [0xff81b], al; mov eax, dword ptr [eax + 0xc4]; add eax, dword ptr gs:[0]; ret; 
0x001aa46a: add byte ptr [0xff], ah; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x001aa4a1: add byte ptr [0xfff], ah; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x000648b7: add byte ptr [0xfffb62e9], ah; jmp dword ptr [esi - 0x70]; 
0x001aa4da: add byte ptr [0xffff], ah; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x000a0914: add byte ptr [0xffff], bh; jbe 0xa0920; ret; 
0x0012879d: add byte ptr [0xfffff000], ah; or eax, edx; ret; 
0x0010c118: add byte ptr [0xfffff000], bh; ja 0x10c128; pop ebx; pop esi; ret; 
0x001132d6: add byte ptr [0xfffff000], bh; ja 0x1132e8; pop ebx; pop esi; ret; 
0x00114653: add byte ptr [0xfffff000], bh; ja 0x114660; pop ebx; ret; 
0x001146c3: add byte ptr [0xfffff000], bh; ja 0x1146d0; pop ebx; ret; 
0x0011474d: add byte ptr [0xfffff000], bh; ja 0x1147a0; add esp, 0x14; pop ebx; pop esi; ret; 
0x001149d1: add byte ptr [0xfffff000], bh; ja 0x114a20; add esp, 0x14; pop ebx; pop esi; ret; 
0x00114ac3: add byte ptr [0xfffff000], bh; ja 0x114ad0; pop ebx; ret; 
0x00116059: add byte ptr [0xfffff000], bh; ja 0x116068; pop ebx; pop esi; ret; 
0x0011f0e3: add byte ptr [0xfffff000], bh; ja 0x11f0f0; pop ebx; ret; 
0x0011f603: add byte ptr [0xfffff000], bh; ja 0x11f610; pop ebx; ret; 
0x0011fce1: add byte ptr [0xfffff000], bh; ja 0x11fcf0; pop ebx; ret; 
0x00120868: add byte ptr [0xfffff000], bh; ja 0x120878; pop ebx; pop esi; ret; 
0x001208ef: add byte ptr [0xfffff000], bh; ja 0x120900; pop ebx; ret; 
0x0012094d: add byte ptr [0xfffff000], bh; ja 0x120960; pop ebx; pop esi; pop edi; ret; 
0x001209ad: add byte ptr [0xfffff000], bh; ja 0x1209c0; pop ebx; pop esi; pop edi; ret; 
0x00120c09: add byte ptr [0xfffff000], bh; ja 0x120c18; pop ebx; pop esi; ret; 
0x00121003: add byte ptr [0xfffff000], bh; ja 0x121010; pop ebx; ret; 
0x0012150f: add byte ptr [0xfffff000], bh; ja 0x121520; pop ebx; ret; 
0x00121a2f: add byte ptr [0xfffff000], bh; ja 0x121a40; pop ebx; ret; 
0x00121f7f: add byte ptr [0xfffff000], bh; ja 0x121fa0; pop ebx; pop esi; pop edi; ret; 
0x00121ffc: add byte ptr [0xfffff000], bh; ja 0x122020; pop ebx; pop esi; pop edi; ret; 
0x0012207e: add byte ptr [0xfffff000], bh; ja 0x1220a0; pop ebx; pop esi; pop edi; ret; 
0x001220fb: add byte ptr [0xfffff000], bh; ja 0x122120; pop ebx; pop esi; pop edi; ret; 
0x001221c8: add byte ptr [0xfffff000], bh; ja 0x1221d8; pop ebx; pop esi; ret; 
0x00122568: add byte ptr [0xfffff000], bh; ja 0x122578; pop ebx; pop esi; ret; 
0x00122fb3: add byte ptr [0xfffff000], bh; ja 0x122fc0; pop ebx; ret; 
0x00123003: add byte ptr [0xfffff000], bh; ja 0x123010; pop ebx; ret; 
0x00123119: add byte ptr [0xfffff000], bh; ja 0x123128; pop ebx; pop esi; pop edi; ret; 
0x00123179: add byte ptr [0xfffff000], bh; ja 0x123188; pop ebx; pop esi; pop edi; ret; 
0x0012485d: add byte ptr [0xfffff000], bh; ja 0x1248b0; add esp, 0x14; pop ebx; pop esi; ret; 
0x00124dad: add byte ptr [0xfffff000], bh; ja 0x124e00; add esp, 0x14; pop ebx; pop esi; ret; 
0x00124e63: add byte ptr [0xfffff000], bh; ja 0x124e70; pop ebx; ret; 
0x00124eb8: add byte ptr [0xfffff000], bh; ja 0x124ec8; pop ebx; pop esi; ret; 
0x001283e8: add byte ptr [0xfffff000], bh; ja 0x1283f8; pop ebx; pop esi; ret; 
0x0012ad3a: add byte ptr [0xfffff000], bh; ja 0x12ad48; pop ebx; pop esi; ret; 
0x0012c473: add byte ptr [0xfffff000], bh; ja 0x12c480; pop ebx; ret; 
0x0012c4c8: add byte ptr [0xfffff000], bh; ja 0x12c4d8; pop ebx; pop esi; ret; 
0x0012e86f: add byte ptr [0xfffff000], bh; ja 0x12e880; pop ebx; ret; 
0x0012ef13: add byte ptr [0xfffff000], bh; ja 0x12ef20; pop ebx; ret; 
0x0012f08a: add byte ptr [0xfffff000], bh; ja 0x12f098; ret; 
0x0012f193: add byte ptr [0xfffff000], bh; ja 0x12f1a0; pop ebx; ret; 
0x0012f482: add byte ptr [0xfffff000], bh; ja 0x12f4a8; pop ebx; pop esi; pop edi; ret; 
0x0012f73d: add byte ptr [0xfffff000], bh; ja 0x12f750; pop ebx; pop esi; pop edi; ret; 
0x0012fa1d: add byte ptr [0xfffff000], bh; ja 0x12fa30; pop ebx; pop esi; pop edi; ret; 
0x0012fb6e: add byte ptr [0xfffff000], bh; ja 0x12fb80; pop ebx; pop esi; pop edi; ret; 
0x00130293: add byte ptr [0xfffff000], bh; ja 0x1302a0; pop ebx; ret; 
0x00130553: add byte ptr [0xfffff000], bh; ja 0x130560; pop ebx; ret; 
0x001904d9: add byte ptr [0xfffff000], bh; ja 0x1904e8; pop ebx; pop esi; ret; 
0x0003c9a4: add byte ptr [0xfffff000], bh; ja 0x3c9b0; pop ebx; ret; 
0x0003ca02: add byte ptr [0xfffff000], bh; ja 0x3ca50; add esp, 0x14; pop ebx; pop esi; ret; 
0x000612d3: add byte ptr [0xfffff000], bh; ja 0x612e0; pop ebx; ret; 
0x0006132d: add byte ptr [0xfffff000], bh; ja 0x61340; pop ebx; pop esi; pop edi; ret; 
0x0008f82c: add byte ptr [0xfffff000], bh; ja 0x8f840; pop ebx; pop esi; pop edi; ret; 
0x00098173: add byte ptr [0xfffff000], bh; ja 0x98180; pop ebx; pop esi; pop edi; ret; 
0x0009f18f: add byte ptr [0xfffff000], bh; ja 0x9f1a0; pop ebx; ret; 
0x0009f818: add byte ptr [0xfffff000], bh; ja 0x9f828; pop ebx; pop esi; ret; 
0x000a01e7: add byte ptr [0xfffff000], bh; ja 0xa01f8; pop ebx; ret; 
0x000dbe11: add byte ptr [0xfffff000], bh; ja 0xdbe20; pop ebx; ret; 
0x000e8c02: add byte ptr [0xfffff000], bh; ja 0xe8c10; pop ebx; pop esi; ret; 
0x000fb5f8: add byte ptr [0xfffff000], bh; ja 0xfb640; add esp, 0x18; pop ebx; ret; 
0x0010c1bb: add byte ptr [0xfffff001], bh; jae 0x24f50; ret; 
0x001420df: add byte ptr [0xffffff], ah; ret; 
0x0017937e: add byte ptr [eax + 0x104838b], dl; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x0009a6ef: add byte ptr [eax + 0x10], bh; add esp, 0xc; ret; 
0x000e7ce8: add byte ptr [eax + 0x10b], bh; mov ecx, dword ptr [esp + 0x54]; mov edx, edi; call dword ptr gs:[0x10]; 
0x001acd8e: add byte ptr [eax + 0x1120f66], dl; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000b36ee: add byte ptr [eax + 0x1130f66], dl; pop ebx; ret; 
0x0009f4f7: add byte ptr [eax + 0x119], bh; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0012e387: add byte ptr [eax + 0x11c], bh; mov ebx, 3; mov ecx, 0x7fffffff; mov esi, 5; call dword ptr gs:[0x10]; 
0x0012f07e: add byte ptr [eax + 0x123], bh; call dword ptr gs:[0x10]; 
0x0012f07e: add byte ptr [eax + 0x123], bh; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x12f098; ret; 
0x00114fd5: add byte ptr [eax + 0x132], bh; call dword ptr gs:[0x10]; 
0x00114dd6: add byte ptr [eax + 0x133], bh; call dword ptr gs:[0x10]; 
0x000e770e: add byte ptr [eax + 0x14244c8d], dl; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x000909ff: add byte ptr [eax + 0x16], bh; pop ebx; ret; 
0x000928ff: add byte ptr [eax + 0x16], bh; ret; 
0x000bcf5f: add byte ptr [eax + 0x18a017a], cl; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x000bcf9f: add byte ptr [eax + 0x18b047a], cl; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x000e79e5: add byte ptr [eax + 0x194], bh; call dword ptr gs:[0x10]; 
0x000e7c85: add byte ptr [eax + 0x197], bh; mov ecx, dword ptr [esp + 0x54]; mov edx, edi; mov esi, ebp; call dword ptr gs:[0x10]; 
0x0016f9ae: add byte ptr [eax + 0x1b8], dl; add bl, ch; fucomi st(0); inc esp; jecxz 0x16f9b7; jmp dword ptr [esi - 0x70]; 
0x00114f66: add byte ptr [eax + 0x1c4], bh; mov esi, dword ptr [esp + 0xbc]; call dword ptr gs:[0x10]; 
0x000afdb0: add byte ptr [eax + 0x1e8850f], 0; add byte ptr [ebx - 0x7cd174c6], cl; ret 0x8304; 
0x000fb14c: add byte ptr [eax + 0x20], bh; cmp dword ptr [ecx + edx], 0x26; je 0xfb13f; mov eax, 0xffffffff; ret; 
0x000c0a3f: add byte ptr [eax + 0x24448b38], cl; or al, 0x5b; pop esi; ret; 
0x001b05fe: add byte ptr [eax + 0x2444b60f], dl; and byte ptr [ebx - 0x7693dbac], cl; ret; 
0x000b5bae: add byte ptr [eax + 0x288018a], dl; lea eax, [edx]; ret; 
0x000ba43e: add byte ptr [eax + 0x288018a], dl; mov eax, edx; ret; 
0x00136b67: add byte ptr [eax + 0x29], dl; ret 0x838d; 
0x0012519e: add byte ptr [eax + 0x35c808b], dl; add byte ptr [eax], al; mov edx, dword ptr [esp + 8]; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x00122a3e: add byte ptr [eax + 0x36], bh; call dword ptr gs:[0x10]; 
0x000a091f: add byte ptr [eax + 0x3908289], dl; add byte ptr [eax], al; ret; 
0x000907ce: add byte ptr [eax + 0x40084983], dl; xor eax, eax; mov dword ptr [ecx + 4], edx; ret; 
0x000fb227: add byte ptr [eax + 0x40], bh; ret; 
0x000c0c2d: add byte ptr [eax + 0x448b1070], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000bd7a7: add byte ptr [eax + 0x448b1070], cl; and al, 8; pop esi; ret; 
0x00175a3d: add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; 
0x00175a3d: add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x0015ff5a: add byte ptr [eax + 0x56], dl; mov ecx, dword ptr [esp + 0x3c]; call ecx; 
0x001701ad: add byte ptr [eax + 0x5a], bl; push dword ptr [esp + 0x48]; push esi; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x00170c15: add byte ptr [eax + 0x5a], bl; push dword ptr [esp + 8]; push esi; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x18]; 
0x001702ab: add byte ptr [eax + 0x5a], bl; push edi; push esi; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x000b9cff: add byte ptr [eax + 0x5b5e5f17], cl; ret; 
0x0004322e: add byte ptr [eax + 0x5bc2bd0f], dl; xor eax, 0x1f; ret; 
0x00114ece: add byte ptr [eax + 0x5c8bda89], dl; and al, 4; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x000b9d2e: add byte ptr [eax + 0x5e5f1789], dl; pop ebx; ret; 
0x000907f3: add byte ptr [eax + 0x5f], bh; cmovne eax, edx; ret; 
0x000b9d1e: add byte ptr [eax + 0x5fff5789], dl; pop esi; pop ebx; ret; 
0x000b5bbe: add byte ptr [eax + 0x66018b66], dl; mov dword ptr [edx], eax; lea eax, [edx + 1]; ret; 
0x000b17de: add byte ptr [eax + 0x66018b66], dl; mov dword ptr [edx], eax; mov eax, edx; ret; 
0x000dec3f: add byte ptr [eax + 0x68], bh; mov edx, esi; call dword ptr gs:[0x10]; 
0x001289ba: add byte ptr [eax + 0x6a0000], al; push dword ptr [esp + 0x1c]; call 0x616b0; add esp, 0x1c; ret; 
0x0008b15e: add byte ptr [eax + 0x6a08ec83], dl; call dword ptr [esi - 0x18]; 
0x001304df: add byte ptr [eax + 0x6a], bh; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0012f11f: add byte ptr [eax + 0x6b], bh; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0012eea6: add byte ptr [eax + 0x6c], bh; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0010e702: add byte ptr [eax + 0x72], bh; mov ebx, dword ptr [esp + 0x80]; call dword ptr gs:[0x10]; 
0x0010e6a6: add byte ptr [eax + 0x72], bh; mov ecx, ebp; mov esi, edi; mov edx, dword ptr [esp + 0x88]; call dword ptr gs:[0x10]; 
0x00132b83: add byte ptr [eax + 0x75], bh; mov ebx, 0xe; mov esi, edi; mov edx, 0x100; call dword ptr gs:[0x10]; 
0x00132bcf: add byte ptr [eax + 0x75], bh; xor esi, esi; mov edx, ebx; mov ebx, 0xe; call dword ptr gs:[0x10]; 
0x0013379e: add byte ptr [eax + 0x75], bh; xor esi, esi; or dh, 1; mov ebx, 0x18; call dword ptr gs:[0x10]; 
0x0019ad7e: add byte ptr [eax + 0x7608f983], dl; fcomi st(7); ret 1; 
0x001a9d31: add byte ptr [eax + 0x76850f04], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf04; 
0x001a9d20: add byte ptr [eax + 0x77850f02], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf02; 
0x001a9d0f: add byte ptr [eax + 0x78850f01], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf01; 
0x0005bb05: add byte ptr [eax + 0x7a], 0xf9; call dword ptr [eax - 0x73]; 
0x00040269: add byte ptr [eax + 0x7e], bh; call dword ptr gs:[0x10]; 
0x00134047: add byte ptr [eax + 0x92], bh; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; call dword ptr gs:[0x10]; 
0x000939a0: add byte ptr [eax + 0x9b], bh; call dword ptr gs:[0x10]; 
0x00092ace: add byte ptr [eax + 0x9c], bh; call dword ptr gs:[0x10]; 
0x0003c7eb: add byte ptr [eax + 0xae], bh; mov esi, 8; lea edx, [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x0003c88e: add byte ptr [eax + 0xae], bh; mov esi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0010d2ac: add byte ptr [eax + 0xaf], bh; call dword ptr gs:[0x10]; 
0x0009db23: add byte ptr [eax + 0xaf], bh; mov dword ptr [esp + 0x28], ecx; mov edx, ecx; mov ecx, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0010d01e: add byte ptr [eax + 0xaf], bh; mov dword ptr [esp + 0xb8], 0; call dword ptr gs:[0x10]; 
0x0009a433: add byte ptr [eax + 0xaf], bh; mov esi, 8; call dword ptr gs:[0x10]; 
0x001abc35: add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x00094f47: add byte ptr [eax + 0xe0], bh; call dword ptr gs:[0x10]; 
0x001abbc8: add byte ptr [eax + 0xf00067a], al; test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x001abc2b: add byte ptr [eax + 0xf000b7a], al; test byte ptr [eax + eax], bh; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x00095535: add byte ptr [eax + 0xf0], bh; mov ebx, ebp; xor edx, edx; mov ecx, 7; xor esi, esi; call dword ptr gs:[0x10]; 
0x000962e6: add byte ptr [eax + 0xf0], bh; mov ebx, edi; xor edx, edx; mov ecx, 7; xor esi, esi; call dword ptr gs:[0x10]; 
0x0009dff6: add byte ptr [eax + 0xf0], bh; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0008fa4d: add byte ptr [eax + 0xf0], bh; mov ecx, 0x81; xor esi, esi; mov edx, 1; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x0009744b: add byte ptr [eax + 0xf0], bh; mov ecx, 8; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x0009846c: add byte ptr [eax + 0xf0], bh; mov edx, 0x7fffffff; setne cl; shl ecx, 7; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00091807: add byte ptr [eax + 0xf0], bh; mov edx, 1; xor esi, esi; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x00095373: add byte ptr [eax + 0xf0], bh; xor ecx, ecx; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008f814: add byte ptr [eax + 0xf0], bh; xor esi, esi; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00097c8e: add byte ptr [eax + 0xf0b8], dl; add byte ptr [ecx + 1], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0014b8ae: add byte ptr [eax + 0xf2cfa80], dl; xchg ebp, eax; ret; 
0x000bd00f: add byte ptr [eax + 0xf66087a], cl; adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x00095b7e: add byte ptr [eax + 0xf], al; test byte ptr [eax - 0x77000000], bh; ret 0xe281; 
0x000d99af: add byte ptr [eax + 0xfe580f5], cl; je 0xd99d0; add eax, 2; ret; 
0x0009c317: add byte ptr [eax + 1], bh; add esp, 0xc; ret; 
0x000fb2ac: add byte ptr [eax + 1], bh; cmp dword ptr [ecx + edx], 0x26; je 0xfb2c2; mov eax, 0xffffffff; ret; 
0x0019f3af: add byte ptr [eax + 1], bh; ja 0x19f3b9; neg eax; ret; 
0x001a5fef: add byte ptr [eax + 1], bh; ja 0x1a5ff9; neg eax; ret; 
0x000d97cf: add byte ptr [eax + 1], bh; jg 0xd97d9; neg eax; ret; 
0x00178ec0: add byte ptr [eax + 1], bh; pop ebx; pop esi; pop edi; ret; 
0x000a6dd7: add byte ptr [eax + 1], bh; ret; 
0x0004291f: add byte ptr [eax + 1], bh; xor edx, edx; pop ebx; ret; 
0x001898ff: add byte ptr [eax + 2], bh; add esp, 0xc; ret; 
0x00094857: add byte ptr [eax + 3], bh; ret; 
0x001abb8c: add byte ptr [eax + 4], bh; pop edi; ret; 
0x0014044f: add byte ptr [eax + 6], bh; call dword ptr gs:[0x10]; 
0x001abbe5: add byte ptr [eax + 8], bh; pop edi; ret; 
0x001ac45f: add byte ptr [eax + eax*8 + 0x1a80c74], al; jne 0x1ac480; lea eax, [ecx + 4]; ret; 
0x00163360: add byte ptr [eax + eax], al; add bh, bh; je 0x16338b; or al, 0x55; call edi; 
0x00166d2a: add byte ptr [eax + eax], al; add byte ptr [eax - 0x73], dl; add dword ptr [esp], 0; add byte ptr [eax - 0x73], dl; sub dword ptr [ecx + eax*4], -0xe; call dword ptr [eax - 0x18]; 
0x001641f8: add byte ptr [eax + eax], al; add byte ptr [eax - 0x73], dl; sbb dword ptr [eax + 0x500000a2], -0x73; cmp esp, 0x55; bnd call dword ptr [eax - 0x18]; 
0x0013530f: add byte ptr [eax + eax], al; add byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x0012bbe9: add byte ptr [eax + eax], al; add byte ptr [ecx - 0x4937b], cl; call dword ptr [eax - 0x18]; 
0x00179ef3: add byte ptr [eax + eax], al; add byte ptr [ecx], bh; ret 0x4e0f; 
0x0013e9ee: add byte ptr [eax + eax], al; add byte ptr [ecx], ch; ret 0xc031; 
0x0019bc91: add byte ptr [eax + eax], al; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019bebc: add byte ptr [eax + eax], al; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00141b1e: add byte ptr [eax + eax], cl; add byte ptr [eax], al; mov dword ptr [eax + 4], 0x29; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00170709: add byte ptr [eax + eax], cl; add byte ptr [eax], al; pop ebx; ret; 
0x00121fe5: add byte ptr [eax + ebp - 0x75], dh; dec esp; and al, 0x10; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x001220e5: add byte ptr [eax + ebp - 0x75], dh; dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00156ffd: add byte ptr [eax - 0x12b7b], cl; call dword ptr [edx - 0x18]; 
0x001af652: add byte ptr [eax - 0x16d7dbbc], cl; dec esi; idiv edi; inc dword ptr [ebx - 0x71f0e008]; mov eax, dword ptr [0x89000008]; ret; 
0x001a9cc9: add byte ptr [eax - 0x17af0f0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x00126b76: add byte ptr [eax - 0x18], dl; adc eax, dword ptr [ecx]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0002fd0f: add byte ptr [eax - 0x18], dl; lcall 0x10c4, 0x83000f99; add esp, 8; pop ebx; ret; 
0x00157710: add byte ptr [eax - 0x18], dl; mov ecx, 0x83fff37b; les edx, ptr [eax]; add esp, 8; pop ebx; ret; 
0x0011e501: add byte ptr [eax - 0x18], dl; push 0x83000031; les edx, ptr [eax]; add esp, 0xc; ret; 
0x000e7f87: add byte ptr [eax - 0x18], dl; ret 0xff1b; 
0x00060d26: add byte ptr [eax - 0x18], dl; ret; 
0x000d6add: add byte ptr [eax - 0x1c], ch; sbb al, byte ptr [eax]; add byte ptr [ebx - 0x363f63], cl; dec dword ptr [ecx - 0x361f73]; call dword ptr [eax + 0x52]; 
0x00058cca: add byte ptr [eax - 0x1c], ch; sbb al, byte ptr [eax]; add byte ptr [ebx - 0x364763], cl; call dword ptr [eax - 1]; 
0x00058328: add byte ptr [eax - 0x1c], ch; sbb al, byte ptr [eax]; add byte ptr [ebx - 0x364763], cl; dec dword ptr [ecx - 0x362773]; call dword ptr [eax - 1]; 
0x0013e75e: add byte ptr [eax - 0x1f7418], dl; jmp dword ptr [esi - 0x70]; 
0x0013562f: add byte ptr [eax - 0x27770000], al; pop ebx; pop esi; pop edi; ret; 
0x000b7582: add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x001a9cda: add byte ptr [eax - 0x27af0e0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x001a9ceb: add byte ptr [eax - 0x37af0c0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf40; 
0x001238b8: add byte ptr [eax - 0x37fea1a5], al; adc edx, 0; ret; 
0x00097d74: add byte ptr [eax - 0x3b7c3fcf], dl; add al, 0x5b; pop esi; ret; 
0x000c665e: add byte ptr [eax - 0x3f7cf775], dl; add al, 0x83; ret 0x8b04; 
0x001006ae: add byte ptr [eax - 0x3f7cf7fd], dl; add al, 0x39; ret 0xf775; 
0x001a62ce: add byte ptr [eax - 0x3fcea0a2], dl; pop ebp; ret; 
0x001aa0ce: add byte ptr [eax - 0x3fcea1a5], dl; pop edi; ret; 
0x001ac359: add byte ptr [eax - 0x417af0f1], ch; add byte ptr [eax], al; add dh, dh; ret 0xf0f; 
0x000a69ce: add byte ptr [eax - 0x47fb3b7d], dl; push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0014cdc9: add byte ptr [eax - 0x48], al; add byte ptr [edi], cl; inc esp; ret; 
0x0002f53e: add byte ptr [eax - 0x4e1f00d], dl; call 0x189c25; add eax, 0x20f8cb; mov eax, dword ptr [eax + 0x10e0]; ret; 
0x0008b48e: add byte ptr [eax - 0x4e1f00d], dl; mov eax, 0xffffffff; ret; 
0x0008ccbe: add byte ptr [eax - 0x4e1f00d], dl; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x0016ed1e: add byte ptr [eax - 0x4e1f00d], dl; ret; 
0x0009283e: add byte ptr [eax - 0x4e1f00d], dl; xor eax, eax; ret; 
0x000de227: add byte ptr [eax - 0x54], ch; ret 0xf0; 
0x0014e3ff: add byte ptr [eax - 0x6bf0d106], al; ret 0xc083; 
0x000c158e: add byte ptr [eax - 0x723f43f1], dl; inc esp; cmp byte ptr [eax], dl; pop edi; ret; 
0x0012c00e: add byte ptr [eax - 0x72f3137d], dl; test dword ptr [ebx + edi*8 - 1], edi; dec dword ptr [ecx - 0x4b37b]; call dword ptr [eax - 0x73]; 
0x00123a2e: add byte ptr [eax - 0x72f3137d], dl; xchg byte ptr [esi], ah; inc esi; stc; call dword ptr [eax - 0x18]; 
0x00124ace: add byte ptr [eax - 0x72f7137d], dl; xchg esi, eax; mov dword ptr [edx - 7], ecx; call dword ptr [edx - 0x77]; 
0x000c4929: add byte ptr [eax - 0x73], dl; adc byte ptr [ecx], 0x45; stc; call dword ptr [eax - 0x18]; 
0x0002fdf4: add byte ptr [eax - 0x73], dl; adc byte ptr [edi + 0x2b], 0xf9; call dword ptr [eax - 0x18]; 
0x00031d21: add byte ptr [eax - 0x73], dl; adc byte ptr [esp + ebp], 0xf9; call dword ptr [eax - 0x18]; 
0x00158e09: add byte ptr [eax - 0x73], dl; adc dword ptr [eax + 0x500000a0], -0x73; sub dword ptr [esi + ecx*2], -0xf; call dword ptr [eax - 0x73]; 
0x00032528: add byte ptr [eax - 0x73], dl; adc dword ptr [ecx + 0x2c], -7; call dword ptr [eax - 0x18]; 
0x000d2cc3: add byte ptr [eax - 0x73], dl; adc eax, -0x66; stc; call dword ptr [eax - 0x18]; 
0x000a35f7: add byte ptr [eax - 0x73], dl; adc eax, -0x6f; stc; call dword ptr [eax - 0x18]; 
0x000a6041: add byte ptr [eax - 0x73], dl; adc esp, 0x43; stc; call dword ptr [eax - 0x18]; 
0x00151f2b: add byte ptr [eax - 0x73], dl; add byte ptr [eax], 0xb0; stc; call dword ptr [eax - 0x18]; 
0x00156285: add byte ptr [eax - 0x73], dl; add byte ptr [edx], 0x5e; stc; call dword ptr [eax - 0x18]; 
0x0014dd63: add byte ptr [eax - 0x73], dl; add dword ptr [ebp + 0x5c], 0xe850fff9; jmp dword ptr [edx - 0x12]; 
0x000de8df: add byte ptr [eax - 0x73], dl; add dword ptr [edx + 0x46], -7; call dword ptr [eax - 0x18]; 
0x00166d2d: add byte ptr [eax - 0x73], dl; add dword ptr [esp], 0; add byte ptr [eax - 0x73], dl; sub dword ptr [ecx + eax*4], -0xe; call dword ptr [eax - 0x18]; 
0x000d2ca4: add byte ptr [eax - 0x73], dl; add eax, -0x63; stc; call dword ptr [eax - 0x18]; 
0x000a6060: add byte ptr [eax - 0x73], dl; add eax, -0x69; stc; call dword ptr [eax - 0x18]; 
0x0005dfda: add byte ptr [eax - 0x73], dl; add eax, 0x7a; stc; call dword ptr [eax - 0x18]; 
0x0014bf1b: add byte ptr [eax - 0x73], dl; add esp, 0x5b; stc; call dword ptr [eax - 0x18]; 
0x000c4906: add byte ptr [eax - 0x73], dl; and al, 0x44; stc; call dword ptr [eax - 0x18]; 
0x000c48e3: add byte ptr [eax - 0x73], dl; and byte ptr [ebx + ebx*4], 0xf9; call dword ptr [eax - 0x18]; 
0x0005ad2f: add byte ptr [eax - 0x73], dl; and byte ptr [edi + 0x30], 0xf9; call dword ptr [eax - 0x18]; 
0x000ebaf8: add byte ptr [eax - 0x73], dl; and dword ptr [eax], 0xffffff9f; stc; call dword ptr [eax - 0x18]; 
0x000ed830: add byte ptr [eax - 0x73], dl; and dword ptr [eax], 0xffffff9f; stc; call dword ptr [eax - 0x18]; xor ch, byte ptr [eax - 0xc]; jmp dword ptr [esi - 0x70]; 
0x0015d08b: add byte ptr [eax - 0x73], dl; and dword ptr [edi + 0x5f], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0002881d: add byte ptr [eax - 0x73], dl; and edx, 0x2a; stc; call dword ptr [eax - 0x18]; 
0x00031d46: add byte ptr [eax - 0x73], dl; cmp bh, 0x2b; stc; call dword ptr [eax - 0x18]; 
0x0015cf08: add byte ptr [eax - 0x73], dl; cmp dword ptr [eax - 0x4c], -7; call dword ptr [eax - 0x18]; 
0x00161742: add byte ptr [eax - 0x73], dl; cmp dword ptr [ebx + ebp], -0xe; call dword ptr [eax - 0x18]; 
0x00158d54: add byte ptr [eax - 0x73], dl; cmp dword ptr [ecx], -0xf; call dword ptr [eax - 0x18]; 
0x000819b8: add byte ptr [eax - 0x73], dl; cmp dword ptr [edx + 0x3e], -7; call dword ptr [eax - 0x18]; 
0x0008d000: add byte ptr [eax - 0x73], dl; cmp dword ptr [edx + 0x3e], -7; call dword ptr [eax - 0x18]; bound esi, qword ptr [eax - 6]; jmp dword ptr [esi - 0x70]; 
0x0017f0b4: add byte ptr [eax - 0x73], dl; cmp eax, 0x62; stc; call dword ptr [eax + 0x6a]; 
0x00164202: add byte ptr [eax - 0x73], dl; cmp esp, 0x55; bnd call dword ptr [eax - 0x18]; 
0x0005df66: add byte ptr [eax - 0x73], dl; cmp esp, 0x7a; stc; call dword ptr [eax - 0x18]; 
0x0017057c: add byte ptr [eax - 0x73], dl; inc ebx; or al, 0x83; ret; 
0x0005df90: add byte ptr [eax - 0x73], dl; or byte ptr [ebp + 0x31], 0xf9; call dword ptr [eax - 0x18]; 
0x00157303: add byte ptr [eax - 0x73], dl; or byte ptr [ecx + 0x5e], 0xf9; call dword ptr [eax - 0x18]; 
0x00158e02: add byte ptr [eax - 0x73], dl; or dword ptr [eax + 0x500000a0], 0xffffff8d; adc dword ptr [eax + 0x500000a0], -0x73; sub dword ptr [esi + ecx*2], -0xf; call dword ptr [eax - 0x73]; 
0x001642c7: add byte ptr [eax - 0x73], dl; or dword ptr [eax + edx*2], 0xfffffff1; call dword ptr [eax - 0x73]; 
0x00152f07: add byte ptr [eax - 0x73], dl; or dword ptr [ecx + esi*4], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0014757e: add byte ptr [eax - 0x73], dl; or dword ptr [ecx], 0x5a; stc; call dword ptr [eax - 0x18]; 
0x00161800: add byte ptr [eax - 0x73], dl; or dword ptr [edx], 0; add byte ptr [eax - 0x73], dl; or esp, 0x4e; int1; call dword ptr [eax - 0x73]; 
0x0015cfa1: add byte ptr [eax - 0x73], dl; or eax, 0xffffffb4; stc; call dword ptr [eax - 0x18]; 
0x00161807: add byte ptr [eax - 0x73], dl; or esp, 0x4e; int1; call dword ptr [eax - 0x73]; 
0x001641fb: add byte ptr [eax - 0x73], dl; sbb dword ptr [eax + 0x500000a2], -0x73; cmp esp, 0x55; bnd call dword ptr [eax - 0x18]; 
0x00167130: add byte ptr [eax - 0x73], dl; sbb dword ptr [eax - 0x5c], 0; add byte ptr [eax - 0x73], dl; sub esp, 0x51; int1; call dword ptr [eax - 0x73]; 
0x00178b40: add byte ptr [eax - 0x73], dl; sbb dword ptr [ecx + 0x65], -7; call dword ptr [eax + 0x6a]; 
0x000de8c0: add byte ptr [eax - 0x73], dl; sub dword ptr [eax], -0x62; stc; call dword ptr [eax - 0x18]; 
0x000a35d3: add byte ptr [eax - 0x73], dl; sub dword ptr [eax], -0x6f; stc; call dword ptr [eax - 0x18]; 
0x00157ef9: add byte ptr [eax - 0x73], dl; sub dword ptr [eax], 0; add byte ptr [eax - 0x73], dl; sub esp, 0x4c; int1; call dword ptr [eax - 0x73]; 
0x00168060: add byte ptr [eax - 0x73], dl; sub dword ptr [ebx + edx*2], -0xf; call dword ptr [eax - 0x73]; 
0x0005e073: add byte ptr [eax - 0x73], dl; sub dword ptr [ecx + 0x31], -7; call dword ptr [eax - 0x18]; 
0x00166d34: add byte ptr [eax - 0x73], dl; sub dword ptr [ecx + eax*4], -0xe; call dword ptr [eax - 0x18]; 
0x00152ad0: add byte ptr [eax - 0x73], dl; sub dword ptr [ecx], 0x5d; stc; call dword ptr [eax - 0x18]; 
0x0006094f: add byte ptr [eax - 0x73], dl; sub dword ptr [edi + 0x53], -7; call dword ptr [eax + 0x6a]; 
0x00157e44: add byte ptr [eax - 0x73], dl; sub dword ptr [edx + edx*4], -0xf; call dword ptr [eax - 0x18]; 
0x000a550a: add byte ptr [eax - 0x73], dl; sub dword ptr [esi + 0x43], -7; call dword ptr [eax - 0x18]; 
0x00158e10: add byte ptr [eax - 0x73], dl; sub dword ptr [esi + ecx*2], -0xf; call dword ptr [eax - 0x73]; 
0x0013f247: add byte ptr [eax - 0x73], dl; sub ecx, 0x57; stc; call dword ptr [eax + 0x6a]; 
0x00157f00: add byte ptr [eax - 0x73], dl; sub esp, 0x4c; int1; call dword ptr [eax - 0x73]; 
0x00167137: add byte ptr [eax - 0x73], dl; sub esp, 0x51; int1; call dword ptr [eax - 0x73]; 
0x00096f56: add byte ptr [eax - 0x73], dl; test dword ptr [ebp + eax*4 - 7], ecx; call dword ptr [eax - 0x18]; 
0x00097140: add byte ptr [eax - 0x73], dl; test dword ptr [edx + 0x40], esi; stc; call dword ptr [eax - 0x18]; 
0x000a176a: add byte ptr [eax - 0x73], dl; xchg ah, bh; inc ecx; stc; call dword ptr [eax - 0x18]; 
0x000958c1: add byte ptr [eax - 0x73], dl; xchg ah, dl; test ecx, edi; call dword ptr [eax - 0x18]; 
0x0002b7d6: add byte ptr [eax - 0x73], dl; xchg byte ptr [eax + 0x71], dh; stc; call dword ptr [eax - 0x18]; 
0x00059c0b: add byte ptr [eax - 0x73], dl; xchg byte ptr [eax + esi], ch; stc; call dword ptr [eax - 0x18]; 
0x000a48ab: add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], bh; inc ebx; stc; call dword ptr [eax - 0x18]; 
0x0002c527: add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], ch; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x00141ac6: add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], cl; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x18]; 
0x000d8487: add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], dl; js 0xd8487; call dword ptr [eax - 0x18]; 
0x000e2a76: add byte ptr [eax - 0x73], dl; xchg byte ptr [ebp + 0x46], dh; stc; call dword ptr [eax - 0x18]; 
0x00095646: add byte ptr [eax - 0x73], dl; xchg byte ptr [ebp + eax*4 - 7], cl; call dword ptr [eax - 0x18]; 
0x00062a8d: add byte ptr [eax - 0x73], dl; xchg byte ptr [ebp + edi*2 - 7], al; call dword ptr [eax - 0x18]; 
0x00027567: add byte ptr [eax - 0x73], dl; xchg byte ptr [ebx + 0x29], bl; stc; call dword ptr [eax - 0x18]; 
0x0005df41: add byte ptr [eax - 0x73], dl; xchg byte ptr [ebx + edi*2], ah; stc; call dword ptr [eax - 0x18]; 
0x00059bc1: add byte ptr [eax - 0x73], dl; xchg byte ptr [ebx], al; xor cl, bh; call dword ptr [eax - 0x18]; 
0x00112309: add byte ptr [eax - 0x73], dl; xchg byte ptr [ecx + 0x49], al; stc; call dword ptr [eax - 0x18]; 
0x0017d6e3: add byte ptr [eax - 0x73], dl; xchg byte ptr [ecx + 0x63], ch; stc; call dword ptr [eax + 0x6a]; 
0x001815fd: add byte ptr [eax - 0x73], dl; xchg byte ptr [ecx + 0x66], ah; stc; call dword ptr [eax - 0x18]; 
0x0005e04e: add byte ptr [eax - 0x73], dl; xchg byte ptr [ecx + esi - 7], bh; call dword ptr [eax - 0x18]; 
0x0011bc5d: add byte ptr [eax - 0x73], dl; xchg byte ptr [ecx], dl; dec edx; stc; call dword ptr [eax - 0x18]; 
0x000a28df: add byte ptr [eax - 0x73], dl; xchg byte ptr [edi + 0x42], dl; stc; call dword ptr [eax - 0x18]; 
0x0014f715: add byte ptr [eax - 0x73], dl; xchg byte ptr [edi + ebp*4], dh; stc; call dword ptr [eax - 0x18]; 
0x000a27ed: add byte ptr [eax - 0x73], dl; xchg byte ptr [edi + ecx*4 - 7], al; call dword ptr [eax - 0x18]; 
0x000a1e61: add byte ptr [eax - 0x73], dl; xchg byte ptr [edi], ch; inc edx; stc; call dword ptr [eax - 0x18]; 
0x0009561e: add byte ptr [eax - 0x73], dl; xchg byte ptr [edx + 0x40], dh; stc; call dword ptr [eax - 0x18]; 
0x00029b3e: add byte ptr [eax - 0x73], dl; xchg byte ptr [edx], al; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x000270c5: add byte ptr [eax - 0x73], dl; xchg byte ptr [edx], bl; sub ecx, edi; call dword ptr [eax - 0x18]; 
0x00027597: add byte ptr [eax - 0x73], dl; xchg byte ptr [esi + 0x29], cl; stc; call dword ptr [eax - 0x18]; 
0x000a2810: add byte ptr [eax - 0x73], dl; xchg byte ptr [esi + ecx*4 - 7], bh; call dword ptr [eax - 0x18]; 
0x00059b9c: add byte ptr [eax - 0x73], dl; xchg byte ptr [esi + esi*2 - 7], ch; call dword ptr [eax - 0x18]; 
0x0005dfb5: add byte ptr [eax - 0x73], dl; xchg byte ptr [esi], dh; xor ecx, edi; call dword ptr [eax - 0x18]; 
0x0002c494: add byte ptr [eax - 0x73], dl; xchg dh, cl; sub bh, cl; call dword ptr [eax - 0x18]; 
0x00029b0b: add byte ptr [eax - 0x73], dl; xchg dl, ah; sub bh, cl; call dword ptr [eax - 0x18]; 
0x0011bc2d: add byte ptr [eax - 0x73], dl; xchg dl, bh; dec ecx; stc; call dword ptr [eax - 0x18]; 
0x00059cc9: add byte ptr [eax - 0x73], dl; xchg dl, dl; das; stc; call dword ptr [eax - 0x18]; 
0x00088a87: add byte ptr [eax - 0x73], dl; xchg dl, dl; stc; call dword ptr [eax - 0x18]; 
0x0009e6ee: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + 0x41], ecx; stc; call dword ptr [eax - 0x18]; 
0x0002ab81: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + 0x71], ecx; stc; call dword ptr [eax - 0x18]; 
0x0002abea: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + 0x71], esi; stc; call dword ptr [eax - 0x18]; 
0x000a62cd: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + ebx*4 - 7], edx; call dword ptr [eax - 0x18]; 
0x0004a1a6: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + esi], ebp; stc; call dword ptr [eax - 0x18]; 
0x00138e94: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax - 0x59], esi; stc; call dword ptr [eax - 0x18]; 
0x000a4a5f: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax - 0x6b], eax; stc; call dword ptr [eax - 0x18]; 
0x0009cddd: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax - 0x78], esp; stc; call dword ptr [eax - 0x18]; 
0x000a62f0: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ebx; cwde; stc; call dword ptr [eax - 0x18]; 
0x0002ab5e: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ebx; jno 0x2ab5e; call dword ptr [eax - 0x18]; 
0x0002b75f: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ebx; jno 0x2b75f; call dword ptr [eax - 0x18]; 
0x0002cdfe: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ebx; jno 0x2cdfe; call dword ptr [eax - 0x18]; 
0x0002da4e: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ebx; jno 0x2da4e; call dword ptr [eax - 0x18]; 
0x0002e1e0: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ebx; jno 0x2e1e0; call dword ptr [eax - 0x18]; 
0x0002edb4: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ebx; jno 0x2edb4; call dword ptr [eax - 0x18]; 
0x00160095: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ebx; mov ch, 0xf9; call dword ptr [eax - 0x18]; 
0x001860ce: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], edi; stc; call dword ptr [eax - 0x18]; 
0x00049fc9: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], edx; js 0x49fc9; call dword ptr [eax - 0x18]; 
0x0004d3ab: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], edx; js 0x4d3ab; call dword ptr [eax - 0x18]; 
0x0005113f: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], edx; js 0x5113f; call dword ptr [eax - 0x18]; 
0x00059a6d: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], edx; js 0x59a6d; call dword ptr [eax - 0x18]; 
0x000ca2ce: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], edx; js 0xca2ce; call dword ptr [eax - 0x18]; 
0x000d0c62: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], edx; js 0xd0c62; call dword ptr [eax - 0x18]; 
0x001107cb: add byte ptr [eax - 0x73], dl; xchg dword ptr [ebp + 0x49], ecx; stc; call dword ptr [eax - 0x18]; 
0x0004a232: add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + 0x2f], esi; stc; call dword ptr [eax - 0x18]; 
0x000c69b6: add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + ebx*4], esp; stc; call dword ptr [eax - 0x18]; 
0x0004a2a2: add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx], eax; xor cl, bh; call dword ptr [eax - 0x18]; 
0x0004d49f: add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx], eax; xor cl, bh; call dword ptr [eax - 0x18]; ret; 
0x0016ba68: add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx], ebx; arpl cx, di; call dword ptr [eax - 0x18]; 
0x00111da0: add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx + 0x49], eax; stc; call dword ptr [eax - 0x18]; 
0x00111da0: add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx + 0x49], eax; stc; call dword ptr [eax - 0x18]; ret 0xf222; 
0x00111ed1: add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx + ecx*2 - 7], edi; call dword ptr [eax - 0x18]; 
0x0009ec1c: add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx + ecx*4], esi; stc; call dword ptr [eax - 0x18]; 
0x0004a255: add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx], ebx; xor cl, bh; call dword ptr [eax - 0x18]; 
0x00094018: add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx], ecx; inc eax; stc; call dword ptr [eax - 0x18]; 
0x0004a2c5: add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + esi*2 - 7], ebx; call dword ptr [eax - 0x18]; 
0x000275bb: add byte ptr [eax - 0x73], dl; xchg dword ptr [edi], edi; sub ecx, edi; call dword ptr [eax - 0x18]; 
0x00069a03: add byte ptr [eax - 0x73], dl; xchg dword ptr [edx], ebx; xor edi, ecx; call dword ptr [eax - 0x18]; 
0x0015268f: add byte ptr [eax - 0x73], dl; xchg dword ptr [edx], ecx; pop ebp; stc; call dword ptr [eax - 0x18]; 
0x001860ff: add byte ptr [eax - 0x73], dl; xchg dword ptr [edx], esp; stc; call dword ptr [eax - 0x18]; 
0x000a51b1: add byte ptr [eax - 0x73], dl; xchg dword ptr [esi + edx*4 - 7], edx; call dword ptr [eax - 0x18]; 
0x0004a30b: add byte ptr [eax - 0x73], dl; xchg dword ptr [esi + esi*2 - 7], ebp; call dword ptr [eax - 0x18]; 
0x00180770: add byte ptr [eax - 0x73], dl; xchg dword ptr [esi], edi; arpl cx, di; call dword ptr [eax + 0x6a]; 
0x00180c01: add byte ptr [eax - 0x73], dl; xchg dword ptr [esi], edi; arpl cx, di; push dword ptr [ecx]; call dword ptr [eax + 0x6a]; 
0x0002ab3b: add byte ptr [eax - 0x73], dl; xchg eax, ebp; jo 0x2ab3b; call dword ptr [eax - 0x18]; 
0x0002b888: add byte ptr [eax - 0x73], dl; xchg eax, ebp; jo 0x2b888; call dword ptr [eax - 0x18]; 
0x0002ce5e: add byte ptr [eax - 0x73], dl; xchg eax, ebp; jo 0x2ce5e; call dword ptr [eax - 0x18]; 
0x0002da86: add byte ptr [eax - 0x73], dl; xchg eax, ebp; jo 0x2da86; call dword ptr [eax - 0x18]; 
0x0002e240: add byte ptr [eax - 0x73], dl; xchg eax, ebp; jo 0x2e240; call dword ptr [eax - 0x18]; 
0x0002edec: add byte ptr [eax - 0x73], dl; xchg eax, ebp; jo 0x2edec; call dword ptr [eax - 0x18]; 
0x0004a1ec: add byte ptr [eax - 0x73], dl; xchg eax, ebx; jbe 0x4a1ec; call dword ptr [eax - 0x18]; 
0x0004d459: add byte ptr [eax - 0x73], dl; xchg eax, ebx; jbe 0x4d459; call dword ptr [eax - 0x18]; 
0x00051392: add byte ptr [eax - 0x73], dl; xchg eax, ebx; jbe 0x51392; call dword ptr [eax - 0x18]; 
0x00059d5d: add byte ptr [eax - 0x73], dl; xchg eax, ebx; jbe 0x59d5d; call dword ptr [eax - 0x18]; 
0x0004a351: add byte ptr [eax - 0x73], dl; xchg eax, ecx; ja 0x4a351; call dword ptr [eax - 0x18]; 
0x0004d60c: add byte ptr [eax - 0x73], dl; xchg eax, ecx; ja 0x4d60c; call dword ptr [eax - 0x18]; 
0x00051218: add byte ptr [eax - 0x73], dl; xchg eax, ecx; ja 0x51218; call dword ptr [eax - 0x18]; 
0x00059cee: add byte ptr [eax - 0x73], dl; xchg eax, ecx; ja 0x59cee; call dword ptr [eax - 0x18]; 
0x000ca450: add byte ptr [eax - 0x73], dl; xchg eax, ecx; ja 0xca450; call dword ptr [eax - 0x18]; 
0x000d0ee4: add byte ptr [eax - 0x73], dl; xchg eax, ecx; ja 0xd0ee4; call dword ptr [eax - 0x18]; 
0x0016ba19: add byte ptr [eax - 0x73], dl; xchg eax, ecx; mov ch, 0xf9; call dword ptr [eax - 0x18]; 
0x00138f20: add byte ptr [eax - 0x73], dl; xchg eax, edx; cmpsd dword ptr [esi], dword ptr es:[edi]; stc; call dword ptr [eax - 0x18]; 
0x000a4ec4: add byte ptr [eax - 0x73], dl; xchg eax, esi; xchg ebp, eax; stc; call dword ptr [eax - 0x18]; 
0x00152670: add byte ptr [eax - 0x73], dl; xchg ebx, edi; pop esp; stc; call dword ptr [eax - 0x18]; 
0x001860ab: add byte ptr [eax - 0x73], dl; xchg ebx, esi; stc; call dword ptr [eax - 0x18]; 
0x00155f30: add byte ptr [eax - 0x73], dl; xchg ecx, edi; aas; stc; call dword ptr [eax - 0x18]; 
0x0009403a: add byte ptr [eax - 0x73], dl; xchg edi, ebx; aas; stc; call dword ptr [eax - 0x18]; 
0x00155f53: add byte ptr [eax - 0x73], dl; xchg edx, edi; pop ebp; stc; call dword ptr [eax - 0x18]; 
0x0004a32e: add byte ptr [eax - 0x73], dl; xchg edx, edx; das; stc; call dword ptr [eax - 0x18]; 
0x0015f723: add byte ptr [eax - 0x73], dl; xchg edx, esp; pop edi; stc; call dword ptr [eax - 0x18]; 
0x00028f31: add byte ptr [eax - 0x73], dl; xchg edx, esp; sub bh, cl; call dword ptr [eax - 0x18]; 
0x0004a1c9: add byte ptr [eax - 0x73], dl; xchg esi, ebp; das; stc; call dword ptr [eax - 0x18]; 
0x0002a0b1: add byte ptr [eax - 0x73], dl; xchg esi, ecx; sub bh, cl; call dword ptr [eax - 0x18]; 
0x000a428e: add byte ptr [eax - 0x73], dl; xchg esi, esi; inc edx; stc; call dword ptr [eax - 0x18]; 
0x00093fb2: add byte ptr [eax - 0x73], dl; xchg esp, eax; aas; stc; call dword ptr [eax - 0x18]; 
0x000a44f1: add byte ptr [eax - 0x73], dl; xchg esp, eax; inc edx; stc; call dword ptr [eax - 0x18]; 
0x00138e71: add byte ptr [eax - 0x73], dl; xchg esp, ecx; push ebp; stc; call dword ptr [eax - 0x18]; 
0x000310ac: add byte ptr [eax - 0x73], dl; xchg esp, ecx; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x00093f90: add byte ptr [eax - 0x73], dl; xchg esp, edx; dec eax; stc; call dword ptr [eax - 0x18]; 
0x00152028: add byte ptr [eax - 0x73], dl; xor byte ptr [eax], 0xb0; stc; call dword ptr [eax - 0x18]; 
0x00031d9a: add byte ptr [eax - 0x73], dl; xor cl, 0x2b; stc; call dword ptr [eax - 0x18]; 
0x000de8a1: add byte ptr [eax - 0x73], dl; xor dword ptr [ebx], 0x46; stc; call dword ptr [eax - 0x18]; 
0x00150d83: add byte ptr [eax - 0x73], dl; xor dword ptr [edi + ebp*4], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000963af: add byte ptr [eax - 0x73], dl; xor dword ptr [edx + 0x40], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0015ceaa: add byte ptr [eax - 0x73], dl; xor dword ptr [esp + esi*4], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0015ced9: add byte ptr [eax - 0x73], dl; xor eax, 0xffffffb3; stc; call dword ptr [eax - 0x18]; 
0x0015cf6e: add byte ptr [eax - 0x73], dl; xor eax, 0xffffffb4; stc; call dword ptr [eax - 0x18]; 
0x00115b61: add byte ptr [eax - 0x749af732], al; sub eax, 0x14; mov dword ptr [esp + 0x18c], ebp; mov ebp, dword ptr [esp + 0x1b8]; call dword ptr gs:[0x10]; 
0x000db35a: add byte ptr [eax - 0x74bbdbac], cl; wait; movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ecx - 0x76cbdba4], cl; ret; 
0x0007c4ce: add byte ptr [eax - 0x74f7137d], dl; pop ebp; in al, 0x6a; call dword ptr [esi - 0x18]; 
0x00056e67: add byte ptr [eax - 0x75], dl; add cl, byte ptr [ecx - 0x365f6b]; dec dword ptr [ebp + 0x7ff48384]; clc; call dword ptr [eax + 0x51]; 
0x00137d23: add byte ptr [eax - 0x75], dl; inc ebp; mov esp, 0x5585808d; stc; call dword ptr [eax - 1]; 
0x0015f697: add byte ptr [eax - 0x75], dl; je 0x15f6c0; sbb al, 0x8d; xchg byte ptr [edi + 0x5f], ah; stc; call dword ptr [eax - 0x18]; 
0x000efefe: add byte ptr [eax - 0x7663ba75], dl; jecxz 0xefe89; rcr byte ptr [ebx], 0x89; ret 0x25; 
0x0008f890: add byte ptr [eax - 0x768c8af0], ch; ret 0xca83; 
0x000b36ce: add byte ptr [eax - 0x7699ee77], dl; push ecx; add al, 0x5b; ret; 
0x0008f7f5: add byte ptr [eax - 0x76c58bc0], ch; ret 0xe283; 
0x0018a25e: add byte ptr [eax - 0x76f3137d], dl; ret; 
0x0009c104: add byte ptr [eax - 0x78], 0xf9; call dword ptr [eax - 0x18]; 
0x00157898: add byte ptr [eax - 0x7af000c1], al; ret 0; 
0x000afdae: add byte ptr [eax - 0x7af07f80], 0xe8; add dword ptr [eax], eax; add byte ptr [ebx - 0x7cd174c6], cl; ret 0x8304; 
0x00188bbc: add byte ptr [eax - 0x7af0cf06], al; ret; 
0x00065b04: add byte ptr [eax - 0x7bf08006], al; ret 1; 
0x001109a3: add byte ptr [eax - 0x7bf0ffc2], al; ret 0xb; 
0x000983cf: add byte ptr [eax - 0x7c308bfc], ch; in al, dx; or al, 0x31; rol byte ptr [eax + 0xf00197d], cl; xchg ebp, eax; ret 0xe2c1; 
0x00042974: add byte ptr [eax - 0x7c3642f1], al; int1; pop ds; shr eax, cl; ret; 
0x0017b43e: add byte ptr [eax - 0x7ccd49f1], dl; ret 0x8301; 
0x0014bd3e: add byte ptr [eax - 0x7cdf387d], dl; ret 0x3901; 
0x000c3c03: add byte ptr [eax - 0x7cf9063f], al; ret 0xc680; 
0x0009a5ec: add byte ptr [eax - 0x7d000000], 0xe0; cmp dword ptr [ebx + 0x17408f8], eax; ret; 
0x00031ad0: add byte ptr [eax - 0x7f72fff8], al; push esp; jae 0x31ad2; call dword ptr [eax - 0x18]; 
0x0013d09e: add byte ptr [eax - 0x8b418], dl; jmp dword ptr [esi - 0x70]; 
0x0005c681: add byte ptr [eax - 0xcb43], al; jmp dword ptr [esi - 0x75]; 
0x0013d51e: add byte ptr [eax - 0xd3418], dl; jmp dword ptr [esi - 0x70]; 
0x00025873: add byte ptr [eax - 1], bh; add esp, 0xc; ret; 
0x000eb18a: add byte ptr [eax - 1], bh; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0009aefb: add byte ptr [eax - 1], bh; pop ebx; pop esi; pop edi; ret; 
0x0003c743: add byte ptr [eax - 1], bh; pop ebx; pop esi; ret; 
0x0003d183: add byte ptr [eax - 1], bh; pop ebx; ret; 
0x0003c6e3: add byte ptr [eax - 1], bh; ret; 
0x00025db3: add byte ptr [eax - 1], dl; jae 0x25dbc; call edi; 
0x0002adda: add byte ptr [eax - 1], dl; je 0x2ae03; pushal; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0002ba57: add byte ptr [eax - 1], dl; je 0x2ba80; insb byte ptr es:[edi], dx; push dword ptr [esp + 0x6c]; call edi; 
0x0002d09f: add byte ptr [eax - 1], dl; je 0x2d0c8; push dword ptr fs:[esp + 0x64]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x0002e47b: add byte ptr [eax - 1], dl; je 0x2e4a4; push dword ptr fs:[esp + 0x64]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x001b27c0: add byte ptr [eax], 0; add bh, dh; ret; 
0x0010e6a3: add byte ptr [eax], 0; add byte ptr [eax + 0x72], bh; mov ecx, ebp; mov esi, edi; mov edx, dword ptr [esp + 0x88]; call dword ptr gs:[0x10]; 
0x000c6daa: add byte ptr [eax], 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + ebx*4], esp; stc; call dword ptr [eax - 0x18]; 
0x0008f88d: add byte ptr [eax], 0; add byte ptr [eax - 0x768c8af0], ch; ret 0xca83; 
0x0008f7f2: add byte ptr [eax], 0; add byte ptr [eax - 0x76c58bc0], ch; ret 0xe283; 
0x0002d09c: add byte ptr [eax], 0; add byte ptr [eax - 1], dl; je 0x2d0c8; push dword ptr fs:[esp + 0x64]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x0002e478: add byte ptr [eax], 0; add byte ptr [eax - 1], dl; je 0x2e4a4; push dword ptr fs:[esp + 0x64]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x00094164: add byte ptr [eax], 0; add byte ptr [eax], dl; jne 0x94178; xor eax, eax; add esp, 0xc; ret; 
0x0015e7cd: add byte ptr [eax], 0; add byte ptr [ebp + 0x2d880fd2], al; or byte ptr [eax], al; add byte ptr [esi - 0x3f], ah; ret 0xf08; 
0x00099da8: add byte ptr [eax], 0; add byte ptr [ebx + 0x8080], cl; add byte ptr [esp + eax*2 - 0x75], dh; je 0x99ddb; adc al, 0x89; ret 0xe283; 
0x00099ea8: add byte ptr [eax], 0; add byte ptr [ebx + 0x8080], cl; add byte ptr [esp + ecx*2 - 0x75], dh; je 0x99edb; adc al, 0x89; ret 0xe283; 
0x0008b9a3: add byte ptr [eax], 0; add byte ptr [ebx - 0x3f7acbc0], cl; jne 0x8b9a0; ret; 
0x0010f14c: add byte ptr [eax], 0; add byte ptr [ebx - 0x72c7dba4], cl; xor dword ptr [ecx + ecx*2], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x001b440a: add byte ptr [eax], 0; add byte ptr [ecx + 0x100000e1], al; add byte ptr [ecx - 0x9f7dbbc], cl; ret 0xf07; 
0x00141d6c: add byte ptr [eax], 0; add byte ptr [edi], cl; inc edx; ret 0x2ec3; 
0x0008f21f: add byte ptr [eax], 0; add byte ptr [edx + 2], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x00099dae: add byte ptr [eax], 0; add byte ptr [esp + eax*2 - 0x75], dh; je 0x99ddb; adc al, 0x89; ret 0xe283; 
0x00099eae: add byte ptr [eax], 0; add byte ptr [esp + ecx*2 - 0x75], dh; je 0x99edb; adc al, 0x89; ret 0xe283; 
0x001b323a: add byte ptr [eax], 0; add cl, ch; ret; 
0x000958a7: add byte ptr [eax], 0; add cl, ch; sbb eax, 0x8dffffff; xchg al, cl; xchg cl, bh; call dword ptr [eax - 0x73]; 
0x001b2d0c: add byte ptr [eax], 0; add dh, dh; ret 0x7407; 
0x00100e51: add byte ptr [eax], 0; add dh, dh; ret 0x7540; 
0x00100fad: add byte ptr [eax], 0; add dh, dh; ret 0xf40; 
0x00135630: add byte ptr [eax], 0; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x001289bb: add byte ptr [eax], 0; push 0; push dword ptr [esp + 0x1c]; call 0x616b0; add esp, 0x1c; ret; 
0x00034418: add byte ptr [eax], 0; ret; 
0x0005ad2c: add byte ptr [eax], 0x41; add byte ptr [eax - 0x73], dl; and byte ptr [edi + 0x30], 0xf9; call dword ptr [eax - 0x18]; 
0x00151f2e: add byte ptr [eax], 0xb0; stc; call dword ptr [eax - 0x18]; 
0x0004a886: add byte ptr [eax], 0xf; xchg ebp, eax; ret 0xea83; 
0x000344a7: add byte ptr [eax], ah; add byte ptr [eax], al; ret; 
0x00094166: add byte ptr [eax], al; adc byte ptr [ebp + 0xd], dh; xor eax, eax; add esp, 0xc; ret; 
0x000ea11d: add byte ptr [eax], al; add ah, dh; mov eax, edx; call dword ptr gs:[0x10]; 
0x000aa15b: add byte ptr [eax], al; add al, 0x8d; xchg edx, eax; mov word ptr [ebp + 0x450ffff6], gs; ret 0x66c3; 
0x001420ca: add byte ptr [eax], al; add al, al; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x001423d9: add byte ptr [eax], al; add al, al; shr edx, 0x10; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x0014fb04: add byte ptr [eax], al; add al, byte ptr [eax]; add byte ptr [edi], cl; lahf; ret 0xd009; 
0x00172f47: add byte ptr [eax], al; add al, ch; int1; ret 0xfff7; 
0x00132fa7: add byte ptr [eax], al; add al, ch; jle 0x133019; add eax, 0x65c58100; mov esi, 0x31570010; call dword ptr [esi + 0x53]; 
0x0014cb99: add byte ptr [eax], al; add al, ch; jmp dword ptr [ebp - 0x13]; 
0x00193356: add byte ptr [eax], al; add al, ch; mov edi, 0x81ffff68; ret; 
0x00163059: add byte ptr [eax], al; add al, ch; mov esp, 0x8100026b; ret; 
0x00061159: add byte ptr [eax], al; add al, ch; mov esp, 0x8100128a; ret; 
0x00150006: add byte ptr [eax], al; add al, ch; ret 0xfe19; 
0x00089ad5: add byte ptr [eax], al; add al, ch; ret; 
0x0008756b: add byte ptr [eax], al; add bh, al; adc byte ptr [edx + ebx], 0; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0003d268: add byte ptr [eax], al; add bh, al; add al, 2; add byte ptr es:[eax], al; add byte ptr [eax - 1], bh; ret; 
0x0018ab89: add byte ptr [eax], al; add bh, al; add al, byte ptr [eax]; add byte ptr [eax], al; add bl, ch; ret 0x748d; 
0x000a4bfd: add byte ptr [eax], al; add bh, al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000799f4: add byte ptr [eax], al; add bh, al; add dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0008ce2f: add byte ptr [eax], al; add bh, al; cmp byte ptr [edx + ebx], 0; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x001575af: add byte ptr [eax], al; add bh, al; cmp dword ptr [eax + 0x5e], 0; add byte ptr [eax], al; call esi; 
0x000f1c15: add byte ptr [eax], al; add bh, al; test dword ptr [ebx + edi*8 - 1], ebp; jmp dword ptr [eax]; 
0x0008cdab: add byte ptr [eax], al; add bh, al; xor byte ptr [edx + ebx], 0; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x00179d96: add byte ptr [eax], al; add bh, bh; je 0x179dc0; sbb al, 0x53; call eax; 
0x000df53b: add byte ptr [eax], al; add bh, bh; je 0xdf565; adc al, 0xe8; cdq; ret; 
0x001775b1: add byte ptr [eax], al; add bh, bh; jne 0x177607; push edi; call dword ptr [eax + 0x14]; 
0x0012422f: add byte ptr [eax], al; add bh, bh; xor byte ptr [ebp - 0x6a6a47d], cl; call dword ptr [eax - 1]; 
0x000a5694: add byte ptr [eax], al; add bh, dh; fadd dword ptr [ebp + 0xbad2]; lock dec dword ptr [edi]; inc esp; ret 0x568d; 
0x000a5cdb: add byte ptr [eax], al; add bh, dh; fadd dword ptr [ebp + 0xbad2]; lock dec dword ptr [edi]; inc esp; ret 0xf821; 
0x000a1191: add byte ptr [eax], al; add bh, dh; fadd dword ptr [ebp + 0xbad2]; lock dec dword ptr [edi]; inc esp; ret 0xff31; 
0x000e7ca0: add byte ptr [eax], al; add bh, dh; fadd dword ptr [ebx + 0x440fdafb]; ret 0x548b; 
0x001b0679: add byte ptr [eax], al; add bh, dh; ret 0; 
0x000c1be3: add byte ptr [eax], al; add bh, dh; ret 0x3f; 
0x001b27c1: add byte ptr [eax], al; add bh, dh; ret; 
0x000f0a69: add byte ptr [eax], al; add bl, al; nop; nop; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x000f0a79: add byte ptr [eax], al; add bl, al; nop; nop; mov eax, 0x40; call dword ptr gs:[0x10]; 
0x000efa79: add byte ptr [eax], al; add bl, al; nop; nop; mov eax, 0xc8; call dword ptr gs:[0x10]; 
0x000efa69: add byte ptr [eax], al; add bl, al; nop; nop; mov eax, 0xc9; call dword ptr gs:[0x10]; 
0x0004e3fd: add byte ptr [eax], al; add bl, bl; lodsd eax, dword ptr [esi]; mov ecx, es; stc; jmp dword ptr [ebp - 0x75]; 
0x0016f9b2: add byte ptr [eax], al; add bl, ch; fucomi st(0); inc esp; jecxz 0x16f9b7; jmp dword ptr [esi - 0x70]; 
0x00184144: add byte ptr [eax], al; add bl, ch; fucomi st(0); mov dl, 0x9b; sti; jmp dword ptr [esi - 0x70]; 
0x0014c2d0: add byte ptr [eax], al; add bl, ch; ret 0x148d; 
0x0018ab8f: add byte ptr [eax], al; add bl, ch; ret 0x748d; 
0x00079194: add byte ptr [eax], al; add bl, ch; ret 0x9066; 
0x000e515a: add byte ptr [eax], al; add bl, ch; ret; 
0x00171a21: add byte ptr [eax], al; add bl, ch; shr eax, 0xd5; ret 0xfffc; 
0x001acdbd: add byte ptr [eax], al; add bl, dh; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x001168d8: add byte ptr [eax], al; add bl, dl; call 0x29134964; ret; 
0x00118388: add byte ptr [eax], al; add bl, dl; call 0x29136414; ret; 
0x00119e28: add byte ptr [eax], al; add bl, dl; call 0x29137eb4; ret; 
0x00173c0a: add byte ptr [eax], al; add byte ptr [0xac], al; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x001aa468: add byte ptr [eax], al; add byte ptr [0xff], ah; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x001aa49f: add byte ptr [eax], al; add byte ptr [0xfff], ah; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x001aa4d8: add byte ptr [eax], al; add byte ptr [0xffff], ah; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x0010c116: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x10c128; pop ebx; pop esi; ret; 
0x001132d4: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x1132e8; pop ebx; pop esi; ret; 
0x00114651: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x114660; pop ebx; ret; 
0x001146c1: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x1146d0; pop ebx; ret; 
0x00114ac1: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x114ad0; pop ebx; ret; 
0x00116057: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x116068; pop ebx; pop esi; ret; 
0x0011f0e1: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x11f0f0; pop ebx; ret; 
0x0011f601: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x11f610; pop ebx; ret; 
0x0011fcdf: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x11fcf0; pop ebx; ret; 
0x00120866: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x120878; pop ebx; pop esi; ret; 
0x001208ed: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x120900; pop ebx; ret; 
0x00120c07: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x120c18; pop ebx; pop esi; ret; 
0x00121001: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x121010; pop ebx; ret; 
0x0012150d: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x121520; pop ebx; ret; 
0x00121a2d: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x121a40; pop ebx; ret; 
0x001221c6: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x1221d8; pop ebx; pop esi; ret; 
0x00122566: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x122578; pop ebx; pop esi; ret; 
0x00122fb1: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x122fc0; pop ebx; ret; 
0x00123001: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x123010; pop ebx; ret; 
0x00124e61: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x124e70; pop ebx; ret; 
0x00124eb6: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x124ec8; pop ebx; pop esi; ret; 
0x001283e6: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x1283f8; pop ebx; pop esi; ret; 
0x0012ad38: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x12ad48; pop ebx; pop esi; ret; 
0x0012c471: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x12c480; pop ebx; ret; 
0x0012c4c6: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x12c4d8; pop ebx; pop esi; ret; 
0x0012e86d: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x12e880; pop ebx; ret; 
0x0012ef11: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x12ef20; pop ebx; ret; 
0x0012f088: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x12f098; ret; 
0x0012f191: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x12f1a0; pop ebx; ret; 
0x00130291: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x1302a0; pop ebx; ret; 
0x00130551: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x130560; pop ebx; ret; 
0x001904d7: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x1904e8; pop ebx; pop esi; ret; 
0x0003c9a2: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x3c9b0; pop ebx; ret; 
0x000612d1: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x612e0; pop ebx; ret; 
0x0009f18d: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x9f1a0; pop ebx; ret; 
0x0009f816: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x9f828; pop ebx; pop esi; ret; 
0x000a01e5: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0xa01f8; pop ebx; ret; 
0x000dbe0f: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0xdbe20; pop ebx; ret; 
0x000e8c00: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0xe8c10; pop ebx; pop esi; ret; 
0x000fb5f6: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0xfb640; add esp, 0x18; pop ebx; ret; 
0x0010c1b9: add byte ptr [eax], al; add byte ptr [0xfffff001], bh; jae 0x24f50; ret; 
0x001420dd: add byte ptr [eax], al; add byte ptr [0xffffff], ah; ret; 
0x000e7ce6: add byte ptr [eax], al; add byte ptr [eax + 0x10b], bh; mov ecx, dword ptr [esp + 0x54]; mov edx, edi; call dword ptr gs:[0x10]; 
0x001acd8c: add byte ptr [eax], al; add byte ptr [eax + 0x1120f66], dl; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000b36ec: add byte ptr [eax], al; add byte ptr [eax + 0x1130f66], dl; pop ebx; ret; 
0x0009f4f5: add byte ptr [eax], al; add byte ptr [eax + 0x119], bh; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00114fd3: add byte ptr [eax], al; add byte ptr [eax + 0x132], bh; call dword ptr gs:[0x10]; 
0x00114dd4: add byte ptr [eax], al; add byte ptr [eax + 0x133], bh; call dword ptr gs:[0x10]; 
0x000e770c: add byte ptr [eax], al; add byte ptr [eax + 0x14244c8d], dl; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x0018c455: add byte ptr [eax], al; add byte ptr [eax + 0x16], bh; pop ebx; ret; 
0x00098045: add byte ptr [eax], al; add byte ptr [eax + 0x16], bh; ret; 
0x000e79e3: add byte ptr [eax], al; add byte ptr [eax + 0x194], bh; call dword ptr gs:[0x10]; 
0x000e7c83: add byte ptr [eax], al; add byte ptr [eax + 0x197], bh; mov ecx, dword ptr [esp + 0x54]; mov edx, edi; mov esi, ebp; call dword ptr gs:[0x10]; 
0x00114f64: add byte ptr [eax], al; add byte ptr [eax + 0x1c4], bh; mov esi, dword ptr [esp + 0xbc]; call dword ptr gs:[0x10]; 
0x000fb14a: add byte ptr [eax], al; add byte ptr [eax + 0x20], bh; cmp dword ptr [ecx + edx], 0x26; je 0xfb13f; mov eax, 0xffffffff; ret; 
0x000c0a3d: add byte ptr [eax], al; add byte ptr [eax + 0x24448b38], cl; or al, 0x5b; pop esi; ret; 
0x001b05fc: add byte ptr [eax], al; add byte ptr [eax + 0x2444b60f], dl; and byte ptr [ebx - 0x7693dbac], cl; ret; 
0x000b5bac: add byte ptr [eax], al; add byte ptr [eax + 0x288018a], dl; lea eax, [edx]; ret; 
0x000ba43c: add byte ptr [eax], al; add byte ptr [eax + 0x288018a], dl; mov eax, edx; ret; 
0x00136b65: add byte ptr [eax], al; add byte ptr [eax + 0x29], dl; ret 0x838d; 
0x000907cc: add byte ptr [eax], al; add byte ptr [eax + 0x40084983], dl; xor eax, eax; mov dword ptr [ecx + 4], edx; ret; 
0x0004322c: add byte ptr [eax], al; add byte ptr [eax + 0x5bc2bd0f], dl; xor eax, 0x1f; ret; 
0x000907f1: add byte ptr [eax], al; add byte ptr [eax + 0x5f], bh; cmovne eax, edx; ret; 
0x000b5bbc: add byte ptr [eax], al; add byte ptr [eax + 0x66018b66], dl; mov dword ptr [edx], eax; lea eax, [edx + 1]; ret; 
0x000b17dc: add byte ptr [eax], al; add byte ptr [eax + 0x66018b66], dl; mov dword ptr [edx], eax; mov eax, edx; ret; 
0x0008b15c: add byte ptr [eax], al; add byte ptr [eax + 0x6a08ec83], dl; call dword ptr [esi - 0x18]; 
0x001304dd: add byte ptr [eax], al; add byte ptr [eax + 0x6a], bh; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0012f11d: add byte ptr [eax], al; add byte ptr [eax + 0x6b], bh; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0012eea4: add byte ptr [eax], al; add byte ptr [eax + 0x6c], bh; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0010e700: add byte ptr [eax], al; add byte ptr [eax + 0x72], bh; mov ebx, dword ptr [esp + 0x80]; call dword ptr gs:[0x10]; 
0x0010e6a4: add byte ptr [eax], al; add byte ptr [eax + 0x72], bh; mov ecx, ebp; mov esi, edi; mov edx, dword ptr [esp + 0x88]; call dword ptr gs:[0x10]; 
0x00132b81: add byte ptr [eax], al; add byte ptr [eax + 0x75], bh; mov ebx, 0xe; mov esi, edi; mov edx, 0x100; call dword ptr gs:[0x10]; 
0x00132bcd: add byte ptr [eax], al; add byte ptr [eax + 0x75], bh; xor esi, esi; mov edx, ebx; mov ebx, 0xe; call dword ptr gs:[0x10]; 
0x0013379c: add byte ptr [eax], al; add byte ptr [eax + 0x75], bh; xor esi, esi; or dh, 1; mov ebx, 0x18; call dword ptr gs:[0x10]; 
0x0019ad7c: add byte ptr [eax], al; add byte ptr [eax + 0x7608f983], dl; fcomi st(7); ret 1; 
0x001a9d0d: add byte ptr [eax], al; add byte ptr [eax + 0x78850f01], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf01; 
0x00040267: add byte ptr [eax], al; add byte ptr [eax + 0x7e], bh; call dword ptr gs:[0x10]; 
0x00134045: add byte ptr [eax], al; add byte ptr [eax + 0x92], bh; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; call dword ptr gs:[0x10]; 
0x0010d2aa: add byte ptr [eax], al; add byte ptr [eax + 0xaf], bh; call dword ptr gs:[0x10]; 
0x0009db21: add byte ptr [eax], al; add byte ptr [eax + 0xaf], bh; mov dword ptr [esp + 0x28], ecx; mov edx, ecx; mov ecx, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0010d01c: add byte ptr [eax], al; add byte ptr [eax + 0xaf], bh; mov dword ptr [esp + 0xb8], 0; call dword ptr gs:[0x10]; 
0x0009a431: add byte ptr [eax], al; add byte ptr [eax + 0xaf], bh; mov esi, 8; call dword ptr gs:[0x10]; 
0x001abc33: add byte ptr [eax], al; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x00094f45: add byte ptr [eax], al; add byte ptr [eax + 0xe0], bh; call dword ptr gs:[0x10]; 
0x001abbc6: add byte ptr [eax], al; add byte ptr [eax + 0xf00067a], al; test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x001abc29: add byte ptr [eax], al; add byte ptr [eax + 0xf000b7a], al; test byte ptr [eax + eax], bh; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x0009dff4: add byte ptr [eax], al; add byte ptr [eax + 0xf0], bh; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0008f812: add byte ptr [eax], al; add byte ptr [eax + 0xf0], bh; xor esi, esi; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00097c8c: add byte ptr [eax], al; add byte ptr [eax + 0xf0b8], dl; add byte ptr [ecx + 1], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0014b8ac: add byte ptr [eax], al; add byte ptr [eax + 0xf2cfa80], dl; xchg ebp, eax; ret; 
0x00095b7c: add byte ptr [eax], al; add byte ptr [eax + 0xf], al; test byte ptr [eax - 0x77000000], bh; ret 0xe281; 
0x000d99ad: add byte ptr [eax], al; add byte ptr [eax + 0xfe580f5], cl; je 0xd99d0; add eax, 2; ret; 
0x0009c315: add byte ptr [eax], al; add byte ptr [eax + 1], bh; add esp, 0xc; ret; 
0x000fb2aa: add byte ptr [eax], al; add byte ptr [eax + 1], bh; cmp dword ptr [ecx + edx], 0x26; je 0xfb2c2; mov eax, 0xffffffff; ret; 
0x000a6dd5: add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x001abb8a: add byte ptr [eax], al; add byte ptr [eax + 4], bh; pop edi; ret; 
0x001abbe3: add byte ptr [eax], al; add byte ptr [eax + 8], bh; pop edi; ret; 
0x000d6adb: add byte ptr [eax], al; add byte ptr [eax - 0x1c], ch; sbb al, byte ptr [eax]; add byte ptr [ebx - 0x363f63], cl; dec dword ptr [ecx - 0x361f73]; call dword ptr [eax + 0x52]; 
0x00058cc8: add byte ptr [eax], al; add byte ptr [eax - 0x1c], ch; sbb al, byte ptr [eax]; add byte ptr [ebx - 0x364763], cl; call dword ptr [eax - 1]; 
0x00058326: add byte ptr [eax], al; add byte ptr [eax - 0x1c], ch; sbb al, byte ptr [eax]; add byte ptr [ebx - 0x364763], cl; dec dword ptr [ecx - 0x362773]; call dword ptr [eax - 1]; 
0x0013e75c: add byte ptr [eax], al; add byte ptr [eax - 0x1f7418], dl; jmp dword ptr [esi - 0x70]; 
0x001238b6: add byte ptr [eax], al; add byte ptr [eax - 0x37fea1a5], al; adc edx, 0; ret; 
0x000c665c: add byte ptr [eax], al; add byte ptr [eax - 0x3f7cf775], dl; add al, 0x83; ret 0x8b04; 
0x001006ac: add byte ptr [eax], al; add byte ptr [eax - 0x3f7cf7fd], dl; add al, 0x39; ret 0xf775; 
0x001ac357: add byte ptr [eax], al; add byte ptr [eax - 0x417af0f1], ch; add byte ptr [eax], al; add dh, dh; ret 0xf0f; 
0x0014cdc7: add byte ptr [eax], al; add byte ptr [eax - 0x48], al; add byte ptr [edi], cl; inc esp; ret; 
0x0008b48c: add byte ptr [eax], al; add byte ptr [eax - 0x4e1f00d], dl; mov eax, 0xffffffff; ret; 
0x0008ccbc: add byte ptr [eax], al; add byte ptr [eax - 0x4e1f00d], dl; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x0016ed1c: add byte ptr [eax], al; add byte ptr [eax - 0x4e1f00d], dl; ret; 
0x0017ce2c: add byte ptr [eax], al; add byte ptr [eax - 0x4e1f00d], dl; xor eax, eax; ret; 
0x000c158c: add byte ptr [eax], al; add byte ptr [eax - 0x723f43f1], dl; inc esp; cmp byte ptr [eax], dl; pop edi; ret; 
0x0012c00c: add byte ptr [eax], al; add byte ptr [eax - 0x72f3137d], dl; test dword ptr [ebx + edi*8 - 1], edi; dec dword ptr [ecx - 0x4b37b]; call dword ptr [eax - 0x73]; 
0x00123a2c: add byte ptr [eax], al; add byte ptr [eax - 0x72f3137d], dl; xchg byte ptr [esi], ah; inc esi; stc; call dword ptr [eax - 0x18]; 
0x00124acc: add byte ptr [eax], al; add byte ptr [eax - 0x72f7137d], dl; xchg esi, eax; mov dword ptr [edx - 7], ecx; call dword ptr [edx - 0x77]; 
0x000c4927: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; adc byte ptr [ecx], 0x45; stc; call dword ptr [eax - 0x18]; 
0x0002fdf2: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; adc byte ptr [edi + 0x2b], 0xf9; call dword ptr [eax - 0x18]; 
0x00032526: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; adc dword ptr [ecx + 0x2c], -7; call dword ptr [eax - 0x18]; 
0x0014dd61: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; add dword ptr [ebp + 0x5c], 0xe850fff9; jmp dword ptr [edx - 0x12]; 
0x000c4904: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; and al, 0x44; stc; call dword ptr [eax - 0x18]; 
0x000c48e1: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; and byte ptr [ebx + ebx*4], 0xf9; call dword ptr [eax - 0x18]; 
0x000819b6: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; cmp dword ptr [edx + 0x3e], -7; call dword ptr [eax - 0x18]; 
0x0008cffe: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; cmp dword ptr [edx + 0x3e], -7; call dword ptr [eax - 0x18]; bound esi, qword ptr [eax - 6]; jmp dword ptr [esi - 0x70]; 
0x000958bf: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg ah, dl; test ecx, edi; call dword ptr [eax - 0x18]; 
0x00141ac4: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], cl; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x18]; 
0x00112307: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg byte ptr [ecx + 0x49], al; stc; call dword ptr [eax - 0x18]; 
0x001815fb: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg byte ptr [ecx + 0x66], ah; stc; call dword ptr [eax - 0x18]; 
0x000270c3: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg byte ptr [edx], bl; sub ecx, edi; call dword ptr [eax - 0x18]; 
0x0009e6ec: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + 0x41], ecx; stc; call dword ptr [eax - 0x18]; 
0x0009cddb: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax - 0x78], esp; stc; call dword ptr [eax - 0x18]; 
0x000c69b4: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + ebx*4], esp; stc; call dword ptr [eax - 0x18]; 
0x00111d9e: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx + 0x49], eax; stc; call dword ptr [eax - 0x18]; 
0x00111d9e: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx + 0x49], eax; stc; call dword ptr [eax - 0x18]; ret 0xf222; 
0x0009ec1a: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx + ecx*4], esi; stc; call dword ptr [eax - 0x18]; 
0x0015268d: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [edx], ecx; pop ebp; stc; call dword ptr [eax - 0x18]; 
0x0015266e: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg ebx, edi; pop esp; stc; call dword ptr [eax - 0x18]; 
0x001860a9: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg ebx, esi; stc; call dword ptr [eax - 0x18]; 
0x00155f2e: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg ecx, edi; aas; stc; call dword ptr [eax - 0x18]; 
0x00093fb0: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg esp, eax; aas; stc; call dword ptr [eax - 0x18]; 
0x0007c4cc: add byte ptr [eax], al; add byte ptr [eax - 0x74f7137d], dl; pop ebp; in al, 0x6a; call dword ptr [esi - 0x18]; 
0x00056e65: add byte ptr [eax], al; add byte ptr [eax - 0x75], dl; add cl, byte ptr [ecx - 0x365f6b]; dec dword ptr [ebp + 0x7ff48384]; clc; call dword ptr [eax + 0x51]; 
0x000efefc: add byte ptr [eax], al; add byte ptr [eax - 0x7663ba75], dl; jecxz 0xefe89; rcr byte ptr [ebx], 0x89; ret 0x25; 
0x0008f88e: add byte ptr [eax], al; add byte ptr [eax - 0x768c8af0], ch; ret 0xca83; 
0x000b36cc: add byte ptr [eax], al; add byte ptr [eax - 0x7699ee77], dl; push ecx; add al, 0x5b; ret; 
0x0008f7f3: add byte ptr [eax], al; add byte ptr [eax - 0x76c58bc0], ch; ret 0xe283; 
0x0018a25c: add byte ptr [eax], al; add byte ptr [eax - 0x76f3137d], dl; ret; 
0x00157896: add byte ptr [eax], al; add byte ptr [eax - 0x7af000c1], al; ret 0; 
0x00188bba: add byte ptr [eax], al; add byte ptr [eax - 0x7af0cf06], al; ret; 
0x001109a1: add byte ptr [eax], al; add byte ptr [eax - 0x7bf0ffc2], al; ret 0xb; 
0x00042972: add byte ptr [eax], al; add byte ptr [eax - 0x7c3642f1], al; int1; pop ds; shr eax, cl; ret; 
0x0017b43c: add byte ptr [eax], al; add byte ptr [eax - 0x7ccd49f1], dl; ret 0x8301; 
0x0014bd3c: add byte ptr [eax], al; add byte ptr [eax - 0x7cdf387d], dl; ret 0x3901; 
0x000c3c01: add byte ptr [eax], al; add byte ptr [eax - 0x7cf9063f], al; ret 0xc680; 
0x0013d09c: add byte ptr [eax], al; add byte ptr [eax - 0x8b418], dl; jmp dword ptr [esi - 0x70]; 
0x0013d51c: add byte ptr [eax], al; add byte ptr [eax - 0xd3418], dl; jmp dword ptr [esi - 0x70]; 
0x00025871: add byte ptr [eax], al; add byte ptr [eax - 1], bh; add esp, 0xc; ret; 
0x0009aef9: add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; pop esi; pop edi; ret; 
0x0003c741: add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; pop esi; ret; 
0x0003d181: add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; ret; 
0x0003c6e1: add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x0002ba55: add byte ptr [eax], al; add byte ptr [eax - 1], dl; je 0x2ba80; insb byte ptr es:[edi], dx; push dword ptr [esp + 0x6c]; call edi; 
0x0002d09d: add byte ptr [eax], al; add byte ptr [eax - 1], dl; je 0x2d0c8; push dword ptr fs:[esp + 0x64]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x0002e479: add byte ptr [eax], al; add byte ptr [eax - 1], dl; je 0x2e4a4; push dword ptr fs:[esp + 0x64]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x0010f14a: add byte ptr [eax], al; add byte ptr [eax], 0; add byte ptr [ebx - 0x72c7dba4], cl; xor dword ptr [ecx + ecx*2], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0004a884: add byte ptr [eax], al; add byte ptr [eax], 0xf; xchg ebp, eax; ret 0xea83; 
0x00192ba9: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x00080749: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp - 0x6ff7d], cl; call dword ptr [eax - 0x73]; 
0x000c948f: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add cl, ch; ret; 
0x000300a9: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x0008a4fe: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0010d029: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0015741e: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x0002300a: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; jmp dword ptr [ebx + 0xc]; 
0x00156a36: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0xf8], ecx; mov dword ptr [eax + 0xfc], edx; ret; 
0x0007d5e8: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [edx + 0x1a40], 0; ret; 
0x000a4c34: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0008f3b9: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; ret; 
0x00170e8b: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; push 0; push esi; call dword ptr [eax + 0x14]; 
0x0007d5f2: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0008074b: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp - 0x6ff7d], cl; call dword ptr [eax - 0x73]; 
0x0015213c: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000dd25d: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x00157785: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000a4c35: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00156269: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5f5e04c4], al; ret; 
0x0008f886: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x8087], cl; add byte ptr [eax - 0x768c8af0], ch; ret 0xca83; 
0x0002f73f: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0x17a9f314], al; ret; 
0x000a1844: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx + 0x98486], cl; add byte ptr [ebp - 0x19e2937a], cl; call dword ptr [eax + 0x57]; 
0x000a4c01: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000dac9d: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx], bl; fimul dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0008cdd5: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edi + 0x1a7482], al; add byte ptr [ebx + 0xb7f01f8], al; ret; 
0x000dc4cf: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edi], cl; inc ebx; ret 0xe883; 
0x00170e8c: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edx], ch; push esi; call dword ptr [eax + 0x14]; 
0x000c9491: add byte ptr [eax], al; add byte ptr [eax], al; add cl, ch; ret; 
0x001abc7c: add byte ptr [eax], al; add byte ptr [eax], al; add eax, 1; pop edi; ret; 
0x001ab17c: add byte ptr [eax], al; add byte ptr [eax], al; add edx, 0xa; jl 0x1ab1d0; lea eax, [ecx + 0xa]; ret; 
0x001ab18c: add byte ptr [eax], al; add byte ptr [eax], al; add edx, 0xb; jl 0x1ab1d0; lea eax, [ecx + 0xb]; ret; 
0x001ab19c: add byte ptr [eax], al; add byte ptr [eax], al; add edx, 0xd; jl 0x1ab1d0; lea eax, [ecx + 0xd]; ret; 
0x001ab1ac: add byte ptr [eax], al; add byte ptr [eax], al; add edx, 0xe; jl 0x1ab1d0; lea eax, [ecx + 0xe]; ret; 
0x001ab1bc: add byte ptr [eax], al; add byte ptr [eax], al; add edx, 0xf; jl 0x1ab1d0; lea eax, [ecx + 0xf]; ret; 
0x001ab10c: add byte ptr [eax], al; add byte ptr [eax], al; add edx, 1; jl 0x1ab1d0; lea eax, [ecx + 1]; ret; 
0x001ab15c: add byte ptr [eax], al; add byte ptr [eax], al; add edx, 7; jl 0x1ab1d0; lea eax, [ecx + 7]; ret; 
0x001ab16c: add byte ptr [eax], al; add byte ptr [eax], al; add edx, 9; jl 0x1ab1d0; lea eax, [ecx + 9]; ret; 
0x0009812e: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000799f9: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x14; pop ebx; pop esi; ret; 
0x000300ab: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x0002608c: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 4; pop ebx; pop esi; ret; 
0x00156254: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 4; pop esi; pop edi; ret; 
0x000971ec: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 8; mov eax, 0x16; pop ebx; ret; 
0x0005bcfc: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 8; mov eax, 0xffffffff; pop ebx; ret; 
0x0008a500: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x00061f64: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 8; xor eax, eax; pop ebx; ret; 
0x001420dc: add byte ptr [eax], al; add byte ptr [eax], al; and eax, 0xffffff; ret; 
0x000c157c: add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; add eax, edi; pop edi; ret; 
0x000c1ccc: add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; add eax, edx; ret; 
0x000c159c: add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edi + 0x20]; pop edi; ret; 
0x000c156c: add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edi - 0x10]; pop edi; ret; 
0x000c1cec: add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edx + 0x20]; ret; 
0x000c184c: add byte ptr [eax], al; add byte ptr [eax], al; bsr eax, eax; lea eax, [eax + ecx + 0x20]; ret; 
0x000c185c: add byte ptr [eax], al; add byte ptr [eax], al; bsr eax, eax; lea eax, [eax + ecx + 0x30]; ret; 
0x00196c4c: add byte ptr [eax], al; add byte ptr [eax], al; call 0x189c1d; add ebx, 0x44d9b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194c4c: add byte ptr [eax], al; add byte ptr [eax], al; call 0x189c1d; add ebx, 0x46b1b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00090b90: add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00157420: add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x00099b7b: add byte ptr [eax], al; add byte ptr [eax], al; cmova eax, edx; ret; 
0x0008ff22: add byte ptr [eax], al; add byte ptr [eax], al; cmove eax, edx; ret; 
0x0009d6cf: add byte ptr [eax], al; add byte ptr [eax], al; cmovne eax, edx; ret; 
0x0009806c: add byte ptr [eax], al; add byte ptr [eax], al; cmp edx, 1; je 0x98080; mov eax, 0x16; ret; 
0x0008cc4c: add byte ptr [eax], al; add byte ptr [eax], al; endbr32; mov eax, 0xffffffff; ret; 
0x0017b8bc: add byte ptr [eax], al; add byte ptr [eax], al; endbr32; mov eax, 1; ret; 
0x0018984c: add byte ptr [eax], al; add byte ptr [eax], al; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x0008cc7c: add byte ptr [eax], al; add byte ptr [eax], al; endbr32; ret; 
0x0008bbac: add byte ptr [eax], al; add byte ptr [eax], al; endbr32; xor eax, eax; ret; 
0x000ea11c: add byte ptr [eax], al; add byte ptr [eax], al; hlt; mov eax, edx; call dword ptr gs:[0x10]; 
0x0002300c: add byte ptr [eax], al; add byte ptr [eax], al; jmp dword ptr [ebx + 0xc]; 
0x000642fc: add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x000701f7: add byte ptr [eax], al; add byte ptr [eax], al; jmp ebx; 
0x000644f5: add byte ptr [eax], al; add byte ptr [eax], al; jmp edx; 
0x001a67f3: add byte ptr [eax], al; add byte ptr [eax], al; jne 0x1a6f70; pop ebx; ret; 
0x001a662c: add byte ptr [eax], al; add byte ptr [eax], al; jne 0x1a6f86; pop ebx; ret; 
0x001a7f6b: add byte ptr [eax], al; add byte ptr [eax], al; jne 0x1a81b0; pop ebx; ret; 
0x001a9625: add byte ptr [eax], al; add byte ptr [eax], al; jne 0x1a9850; pop ebx; ret; 
0x001a96e2: add byte ptr [eax], al; add byte ptr [eax], al; jne 0x1a9870; pop ebx; ret; 
0x001ac44c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [ecx + 8]; ret; 
0x001ac6cc: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi - 8]; pop edi; ret; 
0x000a029c: add byte ptr [eax], al; add byte ptr [eax], al; lea ecx, [esp + 0xc]; mov eax, 0x105; call dword ptr gs:[0x10]; 
0x0012fe14: add byte ptr [eax], al; add byte ptr [eax], al; lea ecx, [esp + 0xc]; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x0010bf3c: add byte ptr [eax], al; add byte ptr [eax], al; lea ecx, [esp + 4]; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x001abc75: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; add eax, 1; pop edi; ret; 
0x000d99c8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; add eax, 3; ret; 
0x000a69e9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; endbr32; mov eax, 0xffffffff; ret; 
0x0016eaf9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; endbr32; mov eax, 1; ret; 
0x0008ecf9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; endbr32; ret; 
0x0008bba5: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; endbr32; xor eax, eax; ret; 
0x001aaf28: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xa]; ret; 
0x001aaf38: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xb]; ret; 
0x001aaf48: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xd]; ret; 
0x001aaf58: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xe]; ret; 
0x001aaf68: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xf]; ret; 
0x001aaec8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 2]; ret; 
0x001aaed8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 3]; ret; 
0x001aaee8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 5]; ret; 
0x001aaef8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 6]; ret; 
0x001aaf08: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 7]; ret; 
0x001ac446: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 8]; ret; 
0x001aaf18: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 9]; ret; 
0x001a9f19: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xa]; pop edi; ret; 
0x001a9f29: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xb]; pop edi; ret; 
0x001a9f39: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xc]; pop edi; ret; 
0x001a9f49: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xd]; pop edi; ret; 
0x001a9f59: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xe]; pop edi; ret; 
0x001a9e98: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 1]; pop edi; ret; 
0x001a9ea9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 2]; pop edi; ret; 
0x001a9eb9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 3]; pop edi; ret; 
0x001a9ec9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 4]; pop edi; ret; 
0x001a9ed9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 5]; pop edi; ret; 
0x001a9ee9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 6]; pop edi; ret; 
0x001a9ef9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 8]; pop edi; ret; 
0x001a9f09: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 9]; pop edi; ret; 
0x001aa379: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xa]; pop edi; ret; 
0x001aa369: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xb]; pop edi; ret; 
0x001aa359: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xd]; pop edi; ret; 
0x001aa349: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xe]; pop edi; ret; 
0x001aa3e9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 1]; pop edi; ret; 
0x001aa3d9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 2]; pop edi; ret; 
0x001aa3c9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 3]; pop edi; ret; 
0x001ac6d9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 4]; pop edi; ret; 
0x001aa3b9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 5]; pop edi; ret; 
0x001aa3a9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 6]; pop edi; ret; 
0x001aa399: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 7]; pop edi; ret; 
0x001aa389: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 9]; pop edi; ret; 
0x001a9e88: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi]; pop edi; ret; 
0x001ab588: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xa]; ret; 
0x001ab598: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xc]; ret; 
0x001ab5a8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xd]; ret; 
0x001ab5b8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xe]; ret; 
0x001ab528: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 2]; ret; 
0x001ab538: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 4]; ret; 
0x001ab548: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 5]; ret; 
0x001ab558: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 6]; ret; 
0x001ab568: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 8]; ret; 
0x001ab578: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 9]; ret; 
0x000b3676: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov byte ptr [ecx], dl; pop ebx; ret; 
0x001ac419: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, ecx; ret; 
0x000b3688: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov word ptr [ecx], dx; pop ebx; ret; 
0x001a9f69: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; pop edi; ret; 
0x000d99d8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; ret; 
0x001a9b57: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; add eax, 1; ret; 
0x001ac487: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; lea eax, [ecx + 8]; ret; 
0x001ab517: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; lea eax, [edx + 1]; ret; 
0x000d99e7: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; mov eax, 1; ret; 
0x00092ed7: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x000b3667: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; pop ebx; ret; 
0x000c1307: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; xor eax, eax; ret; 
0x000bd61c: add byte ptr [eax], al; add byte ptr [eax], al; mov byte ptr [eax], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b367c: add byte ptr [eax], al; add byte ptr [eax], al; mov byte ptr [ecx], dl; pop ebx; ret; 
0x000905c8: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 8], 0x10; xor eax, eax; ret; 
0x000794f7: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0x14], 2; mov dword ptr [eax + 0x18], edx; ret; 
0x0008ce2e: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0x1a7c], 0; ret; 
0x000909f1: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0xc], edx; xor eax, eax; pop ebx; ret; 
0x00156a38: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0xf8], ecx; mov dword ptr [eax + 0xfc], edx; ret; 
0x0008ba50: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; ret; 
0x0010b465: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x00099aca: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 4], 0; xor eax, eax; ret; 
0x00151052: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 8], 0; add esp, 0x18; pop ebx; ret; 
0x0010b45e: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x0008ba57: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 8], 0; ret; 
0x000905cf: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 8], 0x10; xor eax, eax; ret; 
0x00170741: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x0017916c: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + edx], ecx; ret; 
0x0003d0aa: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x00170684: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax], 0x10; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x0017071c: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax], 0xa; pop ebx; ret; 
0x0017072c: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax], 8; pop ebx; ret; 
0x0005aded: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax], edx; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x0018527c: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [ebx + 0xc], 0; pop ebx; ret; 
0x0009cf5c: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [ecx + 0x10], eax; mov dword ptr [edx + 0x3ba8], ecx; ret; 
0x000b36dc: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [ecx], edx; mov dword ptr [ecx + 3], edx; pop ebx; ret; 
0x000b36ac: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [ecx], edx; pop ebx; ret; 
0x0007d5ea: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [edx + 0x1a40], 0; ret; 
0x0008756a: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [edx + 0x1a54], 0; ret; 
0x0008cdaa: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [edx + 0x1a74], 0; ret; 
0x00189d09: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [edx + eax], 0x16; xor eax, eax; ret; 
0x0005acd0: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [edx], 0; ret; 
0x0018c454: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x16; pop ebx; ret; 
0x00098044: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x16; ret; 
0x001304dc: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x6a; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0012f11c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x6b; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00040266: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x00134044: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; call dword ptr gs:[0x10]; 
0x00094f44: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x00192baa: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0xffffffff; ret; 
0x0009c314: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 1; add esp, 0xc; ret; 
0x000a6dd4: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 1; ret; 
0x0014b101: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1c8]; mov eax, dword ptr [edx + eax]; ret; 
0x0010bb3c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 4]; test eax, eax; je 0x10ba8f; call eax; 
0x0010bbf4: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 4]; test eax, eax; je 0x10bae2; call eax; 
0x0010bb9c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 8]; test eax, eax; je 0x10ba8f; call eax; 
0x0016ef08: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [ebx + 0x10]; push 0; push esi; call dword ptr [eax + 0x14]; 
0x001acd7c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; ret; 
0x0017b8f4: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x001abb2c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x001ac47c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, ecx; ret; 
0x000c01dc: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edi; pop ebx; pop edi; ret; 
0x001aaa4c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edi; pop edi; ret; 
0x000b430c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edx; pop ebx; ret; 
0x0012ee9c: add byte ptr [eax], al; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x84]; mov eax, 0x6c; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00090b84: add byte ptr [eax], al; add byte ptr [eax], al; mov ecx, dword ptr [edi + 0xc]; xor cl, 0x81; mov dword ptr [edi], 0; call dword ptr gs:[0x10]; 
0x0009d625: add byte ptr [eax], al; add byte ptr [eax], al; mov ecx, dword ptr [edx + 0x3bac]; mov dword ptr [edx + 0x3bac], eax; mov dword ptr [eax + 0xc], ecx; ret; 
0x0012f5f1: add byte ptr [eax], al; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x64]; mov ebx, dword ptr [esp + 0x60]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000644eb: add byte ptr [eax], al; add byte ptr [eax], al; mov edi, ecx; mov dword ptr [esp + 0x10], 0; jmp edx; 
0x000910a2: add byte ptr [eax], al; add byte ptr [eax], al; mov edx, 0x7fffffff; call dword ptr gs:[0x10]; 
0x001acdbc: add byte ptr [eax], al; add byte ptr [eax], al; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000b371c: add byte ptr [eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x000b372c: add byte ptr [eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x000b370c: add byte ptr [eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000b373c: add byte ptr [eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x001423ec: add byte ptr [eax], al; add byte ptr [eax], al; movzx eax, dl; ret; 
0x0019f30c: add byte ptr [eax], al; add byte ptr [eax], al; movzx ecx, byte ptr [eax + 1]; movzx eax, byte ptr [edx + 1]; sub eax, ecx; ret; 
0x000c1cda: add byte ptr [eax], al; add byte ptr [eax], al; nop; bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x000c183a: add byte ptr [eax], al; add byte ptr [eax], al; nop; bsr eax, eax; lea eax, [eax + ecx + 0x10]; ret; 
0x0008b48b: add byte ptr [eax], al; add byte ptr [eax], al; nop; endbr32; mov eax, 0xffffffff; ret; 
0x0016eaea: add byte ptr [eax], al; add byte ptr [eax], al; nop; endbr32; ret; 
0x0017ce2b: add byte ptr [eax], al; add byte ptr [eax], al; nop; endbr32; xor eax, eax; ret; 
0x000e770b: add byte ptr [eax], al; add byte ptr [eax], al; nop; lea ecx, [esp + 0x14]; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x0009af3a: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov dword ptr [eax + 4], edx; ret; 
0x0007188a: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x28], 1; jmp eax; 
0x000906db: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 0x16; ret; 
0x00086a3a: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000d99fa: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 2; ret; 
0x0009418a: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 3; add esp, 0xc; ret; 
0x000d9a0a: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 3; ret; 
0x000d9a1a: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 4; ret; 
0x000d9a2a: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 5; ret; 
0x000d9a3a: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 6; ret; 
0x000d9a4a: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 7; ret; 
0x0015722b: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov ecx, 1; mov eax, ecx; ret; 
0x000b36eb: add byte ptr [eax], al; add byte ptr [eax], al; nop; movlpd qword ptr [ecx], xmm0; pop ebx; ret; 
0x001a7e6a: add byte ptr [eax], al; add byte ptr [eax], al; nop; pop ebx; xor eax, eax; ret; 
0x00042aba: add byte ptr [eax], al; add byte ptr [eax], al; nop; xor eax, eax; pop ebx; ret; 
0x0004218b: add byte ptr [eax], al; add byte ptr [eax], al; nop; xor eax, eax; ret; 
0x00081123: add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x000a4c36: add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0008f3bb: add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; ret; 
0x001a64ac: add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; xor eax, eax; ret; 
0x0004089d: add byte ptr [eax], al; add byte ptr [eax], al; pop ecx; add ecx, 0xa; mov dword ptr [edx], ecx; ret; 
0x0011fe44: add byte ptr [eax], al; add byte ptr [eax], al; pop edi; cmova eax, edx; ret; 
0x000b945c: add byte ptr [eax], al; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00115641: add byte ptr [eax], al; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x000bd99c: add byte ptr [eax], al; add byte ptr [eax], al; pop esi; ret; 
0x001ac60c: add byte ptr [eax], al; add byte ptr [eax], al; pop esi; xor eax, eax; pop edi; ret; 
0x0017a9bd: add byte ptr [eax], al; add byte ptr [eax], al; push 0; push edi; call dword ptr [eax + 0x14]; 
0x00170e8d: add byte ptr [eax], al; add byte ptr [eax], al; push 0; push esi; call dword ptr [eax + 0x14]; 
0x001775b0: add byte ptr [eax], al; add byte ptr [eax], al; push dword ptr [ebp + 0x50]; push edi; call dword ptr [eax + 0x14]; 
0x00025567: add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0008bdb4: add byte ptr [eax], al; add byte ptr [eax], al; sub ebx, edx; lea eax, [ebx - 1]; pop ebx; ret; 
0x0008c9a4: add byte ptr [eax], al; add byte ptr [eax], al; sub edx, dword ptr [eax + 8]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x0016facc: add byte ptr [eax], al; add byte ptr [eax], al; sub esp, 0xc; mov eax, dword ptr [ebx + 4]; push ebx; call dword ptr [eax + 0x10]; 
0x0017834c: add byte ptr [eax], al; add byte ptr [eax], al; sub esp, 0xc; push eax; call dword ptr [edx + 0x10]; 
0x000a6d44: add byte ptr [eax], al; add byte ptr [eax], al; sub esp, 0xc; push esi; call eax; 
0x000a6dfc: add byte ptr [eax], al; add byte ptr [eax], al; sub esp, 8; push eax; push dword ptr [ebx + 0x24]; call edx; 
0x0008cdd6: add byte ptr [eax], al; add byte ptr [eax], al; xchg dword ptr [edx + 0x1a74], eax; cmp eax, 1; jg 0x8cdf0; ret; 
0x000e822c: add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; add esp, 0xc; ret; 
0x00042d64: add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; pop ebx; ret; 
0x001a72ec: add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; pop edi; pop ebx; ret; 
0x000c198c: add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x0003d0b0: add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x0013706c: add byte ptr [eax], al; add byte ptr [eax], al; xor edx, edx; pop ebx; mov eax, edx; ret; 
0x0019b09d: add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x00094165: add byte ptr [eax], al; add byte ptr [eax], dl; jne 0x94178; xor eax, eax; add esp, 0xc; ret; 
0x0005ada9: add byte ptr [eax], al; add byte ptr [ebp + 0x11], dh; add esp, 0x1c; ret; 
0x001a6f5a: add byte ptr [eax], al; add byte ptr [ebp + 0x11], dh; pop ebx; ret; 
0x001840b2: add byte ptr [eax], al; add byte ptr [ebp + 0x12], dh; add esp, 0x18; pop ebx; ret; 
0x000efa40: add byte ptr [eax], al; add byte ptr [ebp + 0x12], dh; add esp, 0x1c; ret; 
0x001785bf: add byte ptr [eax], al; add byte ptr [ebp + 0x13], dh; add esp, 0x28; pop ebx; ret; 
0x0005f676: add byte ptr [eax], al; add byte ptr [ebp + 0x13], dh; add esp, 0x78; pop ebx; ret; 
0x00087513: add byte ptr [eax], al; add byte ptr [ebp + 0x14], dh; add esp, 0x28; pop ebx; ret; 
0x00178511: add byte ptr [eax], al; add byte ptr [ebp + 0x16], dh; add esp, 0x74; pop ebx; pop edi; ret; 
0x0003cd9c: add byte ptr [eax], al; add byte ptr [ebp + 0x16], dh; add esp, 0x98; pop ebx; ret; 
0x0009a69d: add byte ptr [eax], al; add byte ptr [ebp + 0x17], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x00085953: add byte ptr [eax], al; add byte ptr [ebp + 0x17], dh; add esp, 0x824; pop ebx; pop esi; ret; 
0x0018412c: add byte ptr [eax], al; add byte ptr [ebp + 0x18], dh; add esp, 0x18; pop ebx; ret; 
0x0011f5b1: add byte ptr [eax], al; add byte ptr [ebp + 0x18], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x000f0d79: add byte ptr [eax], al; add byte ptr [ebp + 0x18], dh; add esp, 0x78; pop ebx; ret; 
0x000d97ca: add byte ptr [eax], al; add byte ptr [ebp + 0x1b80076], cl; add byte ptr [eax], al; add byte ptr [edi + 2], bh; neg eax; ret; 
0x000dc058: add byte ptr [eax], al; add byte ptr [ebp + 0x1b], dh; add esp, 0x38; pop ebx; ret; 
0x00120a6e: add byte ptr [eax], al; add byte ptr [ebp + 0x1b], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x00125e2e: add byte ptr [eax], al; add byte ptr [ebp + 0x1c], dh; add esp, 0x1018; pop ebx; ret; 
0x0017be7a: add byte ptr [eax], al; add byte ptr [ebp + 0x1c], dh; add esp, 0x18; pop ebx; ret; 
0x000a0836: add byte ptr [eax], al; add byte ptr [ebp + 0x1c], dh; add esp, 0xb4; pop ebx; pop esi; ret; 
0x001927d5: add byte ptr [eax], al; add byte ptr [ebp + 0x1d], dh; add esp, 0x18; pop ebx; ret; 
0x00090fc9: add byte ptr [eax], al; add byte ptr [ebp + 0x1d], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x0009c4d5: add byte ptr [eax], al; add byte ptr [ebp + 0x1d], dh; add esp, 0x2c; ret; 
0x0005ab59: add byte ptr [eax], al; add byte ptr [ebp + 0x1d], dh; add esp, 0x434; pop ebx; pop esi; ret; 
0x00131506: add byte ptr [eax], al; add byte ptr [ebp + 0x1e], dh; add esp, 0x18; pop ebx; ret; 
0x0009c9a1: add byte ptr [eax], al; add byte ptr [ebp + 0x21], dh; add esp, 0x18; pop ebx; ret; 
0x000dea03: add byte ptr [eax], al; add byte ptr [ebp + 0x21], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x0009c741: add byte ptr [eax], al; add byte ptr [ebp + 0x21], dh; add esp, 0x2c; ret; 
0x00123533: add byte ptr [eax], al; add byte ptr [ebp + 0x23], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x00131871: add byte ptr [eax], al; add byte ptr [ebp + 0x23], dh; add esp, 0x18; pop ebx; ret; 
0x001313e1: add byte ptr [eax], al; add byte ptr [ebp + 0x23], dh; add esp, 0x28; pop ebx; ret; 
0x00123291: add byte ptr [eax], al; add byte ptr [ebp + 0x23], dh; add esp, 0x54; pop ebx; pop esi; ret; 
0x001b12cd: add byte ptr [eax], al; add byte ptr [ebp + 0x24548bdb], al; and byte ptr [edi], cl; xchg ebp, eax; ret; 
0x001abc76: add byte ptr [eax], al; add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; add eax, 1; pop edi; ret; 
0x0017b8b6: add byte ptr [eax], al; add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; endbr32; mov eax, 1; ret; 
0x0008bba6: add byte ptr [eax], al; add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; endbr32; xor eax, eax; ret; 
0x001a7e96: add byte ptr [eax], al; add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; xor eax, eax; ret; 
0x000621c1: add byte ptr [eax], al; add byte ptr [ebp + 0x290578c9], al; fisttp qword ptr [edi]; xchg ebp, eax; ret 0x448b; 
0x0014ae5f: add byte ptr [eax], al; add byte ptr [ebp + 0x29], dh; add esp, 0x11c; ret; 
0x000c5e0e: add byte ptr [eax], al; add byte ptr [ebp + 0x29], dh; add esp, 0x18; pop ebx; ret; 
0x000de96b: add byte ptr [eax], al; add byte ptr [ebp + 0x29], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x0003da56: add byte ptr [eax], al; add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x3da69; add esp, 0x9c; ret; 
0x001a9840: add byte ptr [eax], al; add byte ptr [ebp + 0x2b], dh; pop ebx; ret; 
0x0015e7ce: add byte ptr [eax], al; add byte ptr [ebp + 0x2d880fd2], al; or byte ptr [eax], al; add byte ptr [esi - 0x3f], ah; ret 0xf08; 
0x0017a109: add byte ptr [eax], al; add byte ptr [ebp + 0x2e], dh; add esp, 0x1c; ret; 
0x0018275f: add byte ptr [eax], al; add byte ptr [ebp + 0x30], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x001719ef: add byte ptr [eax], al; add byte ptr [ebp + 0x32], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016fa11: add byte ptr [eax], al; add byte ptr [ebp + 0x33], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0017befe: add byte ptr [eax], al; add byte ptr [ebp + 0x34], dh; add esp, 0x18; pop ebx; ret; 
0x0009b6ba: add byte ptr [eax], al; add byte ptr [ebp + 0x34], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x0003cf41: add byte ptr [eax], al; add byte ptr [ebp + 0x36], dh; add esp, 0x28; pop ebx; ret; 
0x0009c5db: add byte ptr [eax], al; add byte ptr [ebp + 0x37], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x001824d8: add byte ptr [eax], al; add byte ptr [ebp + 0x37], dh; add esp, 0x18; pop ebx; ret; 
0x00149586: add byte ptr [eax], al; add byte ptr [ebp + 0x396374ed], al; ret; 
0x00041b6e: add byte ptr [eax], al; add byte ptr [ebp + 0x39], dh; add esp, 0x18; pop ebx; ret; 
0x000a0f02: add byte ptr [eax], al; add byte ptr [ebp + 0x39b774d2], al; ret 0xb374; 
0x0011575d: add byte ptr [eax], al; add byte ptr [ebp + 0x3a], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x0017bd1c: add byte ptr [eax], al; add byte ptr [ebp + 0x3b], dh; add esp, 0x18; pop ebx; ret; 
0x0017bf92: add byte ptr [eax], al; add byte ptr [ebp + 0x3d], dh; add esp, 0x18; pop ebx; ret; 
0x001a816e: add byte ptr [eax], al; add byte ptr [ebp + 0x3d], dh; pop ebx; ret; 
0x000ded0a: add byte ptr [eax], al; add byte ptr [ebp + 0x3e8c8a], cl; add byte ptr [ebp - 0x1646036e], cl; call dword ptr [ecx + 0x52]; 
0x0014ac5f: add byte ptr [eax], al; add byte ptr [ebp + 0x40], dh; add esp, 0x118; pop ebx; ret; 
0x000dbcd4: add byte ptr [eax], al; add byte ptr [ebp + 0x40], dh; add esp, 0x28; pop ebx; ret; 
0x001158f6: add byte ptr [eax], al; add byte ptr [ebp + 0x40], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x001145a3: add byte ptr [eax], al; add byte ptr [ebp + 0x41], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0008e17e: add byte ptr [eax], al; add byte ptr [ebp + 0x42], dh; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x0003cc77: add byte ptr [eax], al; add byte ptr [ebp + 0x42], dh; add esp, 0x94; pop ebx; pop edi; ret; 
0x0014b384: add byte ptr [eax], al; add byte ptr [ebp + 0x43], dh; add esp, 0x1c; ret; 
0x00186763: add byte ptr [eax], al; add byte ptr [ebp + 0x44], dh; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x001452c4: add byte ptr [eax], al; add byte ptr [ebp + 0x44c74004], cl; ret 8; 
0x00100a9a: add byte ptr [eax], al; add byte ptr [ebp + 0x458b0076], cl; add al, 0x83; ret; 
0x0007d7ea: add byte ptr [eax], al; add byte ptr [ebp + 0x458b0076], cl; cmp byte ptr [ecx], bh; ret; 
0x001a6f26: add byte ptr [eax], al; add byte ptr [ebp + 0x45], dh; pop ebx; ret; 
0x001a9eca: add byte ptr [eax], al; add byte ptr [ebp + 0x478d0076], cl; add al, 0x5f; ret; 
0x001ac6da: add byte ptr [eax], al; add byte ptr [ebp + 0x478d0076], cl; cld; pop edi; ret; 
0x001aa3aa: add byte ptr [eax], al; add byte ptr [ebp + 0x478d0076], cl; cli; pop edi; ret; 
0x001aa36a: add byte ptr [eax], al; add byte ptr [ebp + 0x478d0076], cl; cmc; pop edi; ret; 
0x001a9f3a: add byte ptr [eax], al; add byte ptr [ebp + 0x478d0076], cl; or al, 0x5f; ret; 
0x001aa34a: add byte ptr [eax], al; add byte ptr [ebp + 0x478d0076], cl; pop edi; ret; 
0x001a9f5a: add byte ptr [eax], al; add byte ptr [ebp + 0x478d0076], cl; push cs; pop edi; ret; 
0x001a9eea: add byte ptr [eax], al; add byte ptr [ebp + 0x478d0076], cl; push es; pop edi; ret; 
0x001aa39a: add byte ptr [eax], al; add byte ptr [ebp + 0x478d0076], cl; stc; pop edi; ret; 
0x001aa3ca: add byte ptr [eax], al; add byte ptr [ebp + 0x478d0076], cl; std; pop edi; ret; 
0x001aa3ba: add byte ptr [eax], al; add byte ptr [ebp + 0x478d0076], cl; sti; pop edi; ret; 
0x0014adbf: add byte ptr [eax], al; add byte ptr [ebp + 0x47], dh; add esp, 0x118; pop ebx; ret; 
0x0008e010: add byte ptr [eax], al; add byte ptr [ebp + 0x48], dh; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x0010c2bb: add byte ptr [eax], al; add byte ptr [ebp + 0x49], dh; add esp, 0x28; pop ebx; ret; 
0x0005c5fa: add byte ptr [eax], al; add byte ptr [ebp + 0x4a8b0076], cl; add al, 0x83; ret 0x8304; 
0x0009b75b: add byte ptr [eax], al; add byte ptr [ebp + 0x4b], dh; add esp, 0x124; pop ebx; pop esi; ret; 
0x0009c247: add byte ptr [eax], al; add byte ptr [ebp + 0x4b], dh; add esp, 0x38; pop ebx; ret; 
0x0010c218: add byte ptr [eax], al; add byte ptr [ebp + 0x4c], dh; add esp, 0x28; pop ebx; ret; 
0x0009cb20: add byte ptr [eax], al; add byte ptr [ebp + 0x4d], dh; add esp, 0x124; pop ebx; pop esi; ret; 
0x001781d3: add byte ptr [eax], al; add byte ptr [ebp + 0x5128244c], cl; push 4; push eax; call dword ptr [edx + 0x14]; 
0x0013f7eb: add byte ptr [eax], al; add byte ptr [ebp + 0x52102454], cl; push edi; call eax; 
0x0013f8c8: add byte ptr [eax], al; add byte ptr [ebp + 0x52102454], cl; push esi; call eax; 
0x0010c3b0: add byte ptr [eax], al; add byte ptr [ebp + 0x54], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x0011429c: add byte ptr [eax], al; add byte ptr [ebp + 0x56], dh; add esp, 0x34; pop ebx; pop esi; ret; 
0x0018bd75: add byte ptr [eax], al; add byte ptr [ebp + 0x57], dl; push esi; call dword ptr [ebx + 0x40]; 
0x000ea0a8: add byte ptr [eax], al; add byte ptr [ebp + 0x58896c58], cl; insb byte ptr es:[edi], dx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x0011eefe: add byte ptr [eax], al; add byte ptr [ebp + 0x58], dh; add esp, 0xe4; pop ebx; pop esi; ret; 
0x00121ceb: add byte ptr [eax], al; add byte ptr [ebp + 0x59], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0014acff: add byte ptr [eax], al; add byte ptr [ebp + 0x5c], dh; add esp, 0x118; pop ebx; ret; 
0x000dbd89: add byte ptr [eax], al; add byte ptr [ebp + 0x5d], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x001219ff: add byte ptr [eax], al; add byte ptr [ebp + 0x5f], bl; pop ebx; ret; 
0x0017b955: add byte ptr [eax], al; add byte ptr [ebp + 0x5f], dh; add esp, 0x18; pop ebx; ret; 
0x000b3689: add byte ptr [eax], al; add byte ptr [ebp + 0x66002674], cl; mov dword ptr [ecx], edx; pop ebx; ret; 
0x0013f8ec: add byte ptr [eax], al; add byte ptr [ebp + 0x69], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0017c629: add byte ptr [eax], al; add byte ptr [ebp + 0x6e], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x001752da: add byte ptr [eax], al; add byte ptr [ebp + 0x77], dh; add esp, 0x18; pop ebx; ret; 
0x000dc4c2: add byte ptr [eax], al; add byte ptr [ebp + 0x7d890875], cl; add al, 0x39; ret 0x45c7; 
0x0017c52d: add byte ptr [eax], al; add byte ptr [ebp + 0x7d], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x00080f86: add byte ptr [eax], al; add byte ptr [ebp + 0x84b8], cl; add byte ptr [ebp - 0x9fa8b37], al; ret 0x7408; 
0x0003c7f3: add byte ptr [eax], al; add byte ptr [ebp + 0xa02494], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0013d586: add byte ptr [eax], al; add byte ptr [ebp + 0xa], dh; add esp, 0x2c; ret; 
0x000e8825: add byte ptr [eax], al; add byte ptr [ebp + 0xa], dh; add esp, 0xe8; mov eax, edx; pop ebx; ret; 
0x001b0bf7: add byte ptr [eax], al; add byte ptr [ebp + 0xb6], cl; add bh, dh; ret 0; 
0x001a9d07: add byte ptr [eax], al; add byte ptr [ebp + 0xb6], cl; add byte ptr [eax + 0x78850f01], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf01; 
0x000a0f97: add byte ptr [eax], al; add byte ptr [ebp + 0xb6], cl; add byte ptr [ebx - 0x173ef797], cl; or al, 0x83; ret 0x8901; 
0x00122ca7: add byte ptr [eax], al; add byte ptr [ebp + 0xb], dh; add esp, 0x1c; ret; 
0x0008ff1c: add byte ptr [eax], al; add byte ptr [ebp + 0xbad2], al; add byte ptr [eax], al; cmove eax, edx; ret; 
0x000436fa: add byte ptr [eax], al; add byte ptr [ebp + 0xc8d0076], cl; mov dh, 0x83; ret 0x8d01; 
0x00148ce3: add byte ptr [eax], al; add byte ptr [ebp + 0xc], dh; add esp, 0x18; pop ebx; ret; 
0x001235fd: add byte ptr [eax], al; add byte ptr [ebp + 0xd], dh; add esp, 0x54; pop ebx; pop esi; ret; 
0x001160d4: add byte ptr [eax], al; add byte ptr [ebp + 0xe], dh; add esp, 0x54; pop ebx; pop esi; ret; 
0x00120ce4: add byte ptr [eax], al; add byte ptr [ebp + 0xe], dh; add esp, 0x64; pop ebx; pop esi; ret; 
0x00115ed4: add byte ptr [eax], al; add byte ptr [ebp + 0xe], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x000431ca: add byte ptr [eax], al; add byte ptr [ebp + 0xf0674d2], al; mov ebp, 0x1ff083c2; ret; 
0x00096c9a: add byte ptr [eax], al; add byte ptr [ebp + 0xf0a0054], cl; mov edi, 0x2ac85; add byte ptr [ecx], bh; ret 0x4f0f; 
0x00178493: add byte ptr [eax], al; add byte ptr [ebp + 0xf], dh; add esp, 0x1c; ret; 
0x000da68b: add byte ptr [eax], al; add byte ptr [ebp + 0xf], dh; add esp, 0x28; pop ebx; ret; 
0x000a69ea: add byte ptr [eax], al; add byte ptr [ebp + 0xff30076], cl; push ds; sti; mov eax, 0xffffffff; ret; 
0x0016eafa: add byte ptr [eax], al; add byte ptr [ebp + 0xff30076], cl; push ds; sti; mov eax, 1; ret; 
0x0008ecfa: add byte ptr [eax], al; add byte ptr [ebp + 0xff30076], cl; push ds; sti; ret; 
0x0008ccaa: add byte ptr [eax], al; add byte ptr [ebp + 0xff30076], cl; push ds; sti; xor eax, eax; ret; 
0x00025561: add byte ptr [eax], al; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x0002553e: add byte ptr [eax], al; add byte ptr [ebp + 4], dh; add esp, 0x1c; ret; 
0x000409db: add byte ptr [eax], al; add byte ptr [ebp + 4], dh; add esp, 0x2c; ret; 
0x0012d1e6: add byte ptr [eax], al; add byte ptr [ebp + 4], dh; add esp, 0x3c; ret; 
0x001798c9: add byte ptr [eax], al; add byte ptr [ebp + 4], dh; add esp, 0x4c; ret; 
0x00132899: add byte ptr [eax], al; add byte ptr [ebp + 4], dh; add esp, 0x7c; ret; 
0x0003c2e9: add byte ptr [eax], al; add byte ptr [ebp + 5], dh; add esp, 0x18; pop ebx; ret; 
0x0009725a: add byte ptr [eax], al; add byte ptr [ebp + 5], dh; add esp, 0x28; pop ebx; ret; 
0x000a038f: add byte ptr [eax], al; add byte ptr [ebp + 5], dh; add esp, 0x38; pop ebx; ret; 
0x000da7bb: add byte ptr [eax], al; add byte ptr [ebp + 5], dh; add esp, 0x48; pop ebx; ret; 
0x00061644: add byte ptr [eax], al; add byte ptr [ebp + 5], dh; add esp, 0x78; pop ebx; ret; 
0x0008ea15: add byte ptr [eax], al; add byte ptr [ebp + 6], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0003d7f9: add byte ptr [eax], al; add byte ptr [ebp + 6], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x00124ff9: add byte ptr [eax], al; add byte ptr [ebp + 6], dh; add esp, 0x34; pop ebx; pop esi; ret; 
0x0017cff0: add byte ptr [eax], al; add byte ptr [ebp + 6], dh; add esp, 0x54; pop ebx; pop esi; ret; 
0x000deec9: add byte ptr [eax], al; add byte ptr [ebp + 7], dh; add esp, 0x28; xor eax, eax; pop ebx; ret; 
0x0003da5d: add byte ptr [eax], al; add byte ptr [ebp + 7], dh; add esp, 0x9c; ret; 
0x0017d0a3: add byte ptr [eax], al; add byte ptr [ebp + 7], dh; movzx eax, al; add esp, 0x1c; ret; 
0x0011f05f: add byte ptr [eax], al; add byte ptr [ebp + 7], dh; movzx eax, al; add esp, 0x4c; ret; 
0x0014ef57: add byte ptr [eax], al; add byte ptr [ebp + 7], dh; movzx eax, ax; add esp, 0x2c; ret; 
0x000615bd: add byte ptr [eax], al; add byte ptr [ebp + 8], dh; add esp, 0x1018; pop ebx; ret; 
0x0003d354: add byte ptr [eax], al; add byte ptr [ebp + 8], dh; add esp, 0x128; pop ebx; ret; 
0x001243f2: add byte ptr [eax], al; add byte ptr [ebp + 8], dh; add esp, 0x418; pop ebx; ret; 
0x000e866b: add byte ptr [eax], al; add byte ptr [ebp + 8], dh; add esp, 0xe8; pop ebx; ret; 
0x0003ad7a: add byte ptr [eax], al; add byte ptr [ebp + 8], dh; mov eax, edx; add esp, 0x1c; ret 4; 
0x0003cb8a: add byte ptr [eax], al; add byte ptr [ebp + 9], dh; add esp, 0x114; pop ebx; pop edi; ret; 
0x0003c634: add byte ptr [eax], al; add byte ptr [ebp + 9], dh; add esp, 0x124; pop ebx; pop esi; ret; 
0x0005576f: add byte ptr [eax], al; add byte ptr [ebp + 9], dh; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000a6514: add byte ptr [eax], al; add byte ptr [ebp + 9], dh; add esp, 0x38; mov eax, ebx; pop ebx; ret 4; 
0x0003cd1e: add byte ptr [eax], al; add byte ptr [ebp + 9], dh; add esp, 0x94; pop ebx; pop edi; ret; 
0x001a81a2: add byte ptr [eax], al; add byte ptr [ebp + 9], dh; pop ebx; ret; 
0x0009a39e: add byte ptr [eax], al; add byte ptr [ebp + edx*8 - 0x77], dh; ret 0xe083; 
0x0015a954: add byte ptr [eax], al; add byte ptr [ebp - 0x23687240], al; sub al, 0xf9; dec dword ptr [edi]; inc esp; ret 0xec83; 
0x00024b20: add byte ptr [eax], al; add byte ptr [ebp - 0x33], dh; ret; 
0x000d84c0: add byte ptr [eax], al; add byte ptr [ebp - 0x35f373], cl; call dword ptr [eax - 0x73]; 
0x001ac41a: add byte ptr [eax], al; add byte ptr [ebp - 0x3776ff8a], cl; ret; 
0x00085a4e: add byte ptr [eax], al; add byte ptr [ebp - 0x39fc8b37], al; add al, byte ptr [eax]; pop ebx; ret; 
0x001368d9: add byte ptr [eax], al; add byte ptr [ebp - 0x39ffd98c], cl; inc edx; jmp dword ptr [eax]; 
0x00125e98: add byte ptr [eax], al; add byte ptr [ebp - 0x3dbbf040], al; add esp, 0xc; ret; 
0x001a9f6a: add byte ptr [eax], al; add byte ptr [ebp - 0x3fceff8a], cl; pop edi; ret; 
0x001543fa: add byte ptr [eax], al; add byte ptr [ebp - 0x41f0ff8a], cl; ret 0xe883; 
0x0012ee67: add byte ptr [eax], al; add byte ptr [ebp - 0x47f3dbb4], cl; lds eax, ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000291fa: add byte ptr [eax], al; add byte ptr [ebp - 0x57cff8a], cl; add al, 0x74; sbb byte ptr [ebx - 0x7cfbdba4], cl; rol byte ptr [ecx], 0x83; ret 0x8901; 
0x000a7649: add byte ptr [eax], al; add byte ptr [ebp - 0x6662380], cl; call dword ptr [eax + 0x68]; 
0x000a7140: add byte ptr [eax], al; add byte ptr [ebp - 0x6666780], cl; call dword ptr [eax + 0x68]; 
0x00151564: add byte ptr [eax], al; add byte ptr [ebp - 0x6a3827d], cl; call dword ptr [eax - 0x73]; 
0x001513c3: add byte ptr [eax], al; add byte ptr [ebp - 0x6a4117d], cl; call dword ptr [eax - 0x73]; 
0x000606fd: add byte ptr [eax], al; add byte ptr [ebp - 0x6a6a47d], cl; call dword ptr [ebp + 0x50]; 
0x00034169: add byte ptr [eax], al; add byte ptr [ebp - 0x6a9f27d], cl; call dword ptr [esi - 1]; 
0x0011eeb1: add byte ptr [eax], al; add byte ptr [ebp - 0x6b5da7a], cl; call dword ptr [eax - 0x18]; 
0x00039e1c: add byte ptr [eax], al; add byte ptr [ebp - 0x6b9ff55], cl; inc dword ptr [ebx - 0x7c72f314]; shr dword ptr [esi], 1; stc; call dword ptr [eax - 0x18]; 
0x0009ebb1: add byte ptr [eax], al; add byte ptr [ebp - 0x6be9e79], cl; call dword ptr [eax - 0x73]; 
0x000965e4: add byte ptr [eax], al; add byte ptr [ebp - 0x6bfa27a], cl; call dword ptr [eax - 0x73]; 
0x000957ca: add byte ptr [eax], al; add byte ptr [ebp - 0x6bfaa7a], cl; call dword ptr [eax - 0x73]; 
0x0011719d: add byte ptr [eax], al; add byte ptr [ebp - 0x6f7bf00a], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x7ce7dbbc], cl; ret; 
0x0008074d: add byte ptr [eax], al; add byte ptr [ebp - 0x6ff7d], cl; call dword ptr [eax - 0x73]; 
0x001aaf09: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc ecx; pop es; ret; 
0x001aaf59: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc ecx; push cs; ret; 
0x001aaef9: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc ecx; push es; ret; 
0x001ab5b9: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc edx; push cs; ret; 
0x001ab559: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc edx; push es; ret; 
0x001a9e89: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; pop es; pop edi; ret; 
0x0010c43a: add byte ptr [eax], al; add byte ptr [ebp - 0x74d08a40], al; pop esp; and al, 0x30; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x0010c38a: add byte ptr [eax], al; add byte ptr [ebp - 0x74d08a40], al; pop esp; and al, 0x30; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x0010c502: add byte ptr [eax], al; add byte ptr [ebp - 0x74d08a40], al; pop esp; and al, 0x30; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x0010c1f2: add byte ptr [eax], al; add byte ptr [ebp - 0x74d08a40], al; pop esp; and al, 0x30; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x0012b715: add byte ptr [eax], al; add byte ptr [ebp - 0x74d38a40], al; pop esp; and al, 0x30; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x0012b675: add byte ptr [eax], al; add byte ptr [ebp - 0x74d38a40], al; pop esp; and al, 0x30; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x0010c295: add byte ptr [eax], al; add byte ptr [ebp - 0x74d38a40], al; pop esp; and al, 0x30; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x00124d97: add byte ptr [eax], al; add byte ptr [ebp - 0x74dd8a40], al; pop esp; and al, 0x20; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00124847: add byte ptr [eax], al; add byte ptr [ebp - 0x74dd8a40], al; pop esp; and al, 0x20; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x00114737: add byte ptr [eax], al; add byte ptr [ebp - 0x74dd8a40], al; pop esp; and al, 0x20; mov eax, 6; call dword ptr gs:[0x10]; 
0x00103e89: add byte ptr [eax], al; add byte ptr [ebp - 0x74ffd98c], cl; or cl, byte ptr [ecx]; or byte ptr [ebx - 0x3d7cfb40], al; add al, 0x39; ret; 
0x00083228: add byte ptr [eax], al; add byte ptr [ebp - 0x75371], cl; dec dword ptr [ecx - 0x7e30d621]; call dword ptr [ebx + 0xf000005]; 
0x00189d03: add byte ptr [eax], al; add byte ptr [ebp - 0x75], ah; adc eax, 0; mov dword ptr [edx + eax], 0x16; xor eax, eax; ret; 
0x0009a4f2: add byte ptr [eax], al; add byte ptr [ebp - 0x76e3db8c], cl; ret; 
0x000e761e: add byte ptr [eax], al; add byte ptr [ebp - 0x76e48b40], al; ret 0xf75b; 
0x000c6ef9: add byte ptr [eax], al; add byte ptr [ebp - 0x76ffd98c], cl; ret 0xc189; 
0x000ac779: add byte ptr [eax], al; add byte ptr [ebp - 0x76ffd98c], cl; ret; 
0x0004735a: add byte ptr [eax], al; add byte ptr [ebp - 0x7a22ff8a], cl; je 0x47326; stc; jmp dword ptr [ebp - 0x75]; 
0x000c78da: add byte ptr [eax], al; add byte ptr [ebp - 0x7a22ff8a], cl; je 0xc78a6; stc; jmp dword ptr [ebp - 0x75]; 
0x0009e2c5: add byte ptr [eax], al; add byte ptr [ebp - 0x7c228b40], al; clc; add al, 0x74; fmul dword ptr [ebp - 0x676ab79]; call dword ptr [eax - 0x73]; 
0x000b3abd: add byte ptr [eax], al; add byte ptr [ebp - 0x7cc78a40], al; ret; 
0x00130f00: add byte ptr [eax], al; add byte ptr [ebp - 0x7ce18b2e], al; in al, dx; or byte ptr [ebp - 0x659d779], cl; call dword ptr [eax + 0x55]; 
0x00061be5: add byte ptr [eax], al; add byte ptr [ebp - 0x7cefdb8c], cl; in al, dx; or byte ptr [ebp - 0x6cf986d], cl; call dword ptr [esi + 0x52]; 
0x001111e9: add byte ptr [eax], al; add byte ptr [ebp - 0x7cffd98c], cl; in al, dx; or al, 0x83; ret; 
0x00124bc9: add byte ptr [eax], al; add byte ptr [ebp - 0x7cffd98c], cl; in al, dx; or byte ptr [ebp - 0x6a03f7d], cl; call dword ptr [eax - 0x73]; 
0x000a3db9: add byte ptr [eax], al; add byte ptr [ebp - 0x7cffd98c], cl; ret 0x108; 
0x000aadb9: add byte ptr [eax], al; add byte ptr [ebp - 0x7cffd98c], cl; ret 0x3901; 
0x00047b39: add byte ptr [eax], al; add byte ptr [ebp - 0x7cffd98c], cl; ret 0xf01; 
0x0002bdb9: add byte ptr [eax], al; add byte ptr [ebp - 0x7cffd98c], cl; ret; 
0x000ffa79: add byte ptr [eax], al; add byte ptr [ebp - 0x7cffd98c], cl; rol byte ptr [ecx], 0x39; ret; 
0x001a5ab9: add byte ptr [eax], al; add byte ptr [ebp - 0x7cffd98c], cl; ror byte ptr [eax], 0x83; ret 0x8308; 
0x0019b1a9: add byte ptr [eax], al; add byte ptr [ebp - 0x7effd98c], cl; ret; 
0x00080f8c: add byte ptr [eax], al; add byte ptr [ebp - 0x9fa8b37], al; ret 0x7408; 
0x001a9af9: add byte ptr [eax], al; add byte ptr [ebp - 0x9ffd98c], cl; ret 0x7510; 
0x0017a2a5: add byte ptr [eax], al; add byte ptr [ebp - 0xc49e37d], cl; call dword ptr [eax - 0x73]; 
0x001748e5: add byte ptr [eax], al; add byte ptr [ebp - 0xca3737d], cl; call dword ptr [eax - 0x73]; 
0x0015d4a2: add byte ptr [eax], al; add byte ptr [ebp - 0xe2f5379], cl; call dword ptr [eax + 0x6a]; 
0x0015d9e6: add byte ptr [eax], al; add byte ptr [ebp - 0xe2f537a], cl; call dword ptr [eax + 0x6a]; 
0x0010c1b2: add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff001; jae 0x24f50; ret; 
0x001214d8: add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; mov ebx, edx; ret; 
0x0014038d: add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; pop ebx; ret; 
0x0009c2a6: add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x00150479: add byte ptr [eax], al; add byte ptr [ebx + 0x1008b11], cl; ret 0x5052; 
0x000704b0: add byte ptr [eax], al; add byte ptr [ebx + 0x100955c], cl; ret; 
0x0009b121: add byte ptr [eax], al; add byte ptr [ebx + 0x10408300], cl; add dword ptr [ebx + 0x458d1470], ecx; inc dword ptr [ebx - 0x69f00208]; ret; 
0x0007fcad: add byte ptr [eax], al; add byte ptr [ebx + 0x106a04ec], al; push ebp; push esi; call dword ptr [eax + 0x1c]; 
0x00125240: add byte ptr [eax], al; add byte ptr [ebx + 0x10880], cl; add byte ptr [ebx - 0x3f7adfc0], cl; cmove eax, edx; ret; 
0x00116982: add byte ptr [eax], al; add byte ptr [ebx + 0x10c2444], cl; ret 0xfa81; 
0x00185d07: add byte ptr [eax], al; add byte ptr [ebx + 0x1102454], cl; ret 0xcdb8; 
0x00109345: add byte ptr [eax], al; add byte ptr [ebx + 0x1182454], cl; ret 0x44c7; 
0x000ea07c: add byte ptr [eax], al; add byte ptr [ebx + 0x1200011], bh; lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x00034032: add byte ptr [eax], al; add byte ptr [ebx + 0x17080], cl; add byte ptr [ebx + 0x548b0204], cl; and al, 4; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x00032ba2: add byte ptr [eax], al; add byte ptr [ebx + 0x17080], cl; add byte ptr [ebx + 0x8b0204], cl; mov eax, dword ptr [eax + 0x54]; ret; 
0x0017940d: add byte ptr [eax], al; add byte ptr [ebx + 0x19083], cl; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x001926cd: add byte ptr [eax], al; add byte ptr [ebx + 0x19bb0cec], al; add byte ptr [eax], al; add byte ptr [edi - 0x18], dl; ret 0xf561; 
0x0017949d: add byte ptr [eax], al; add byte ptr [ebx + 0x1a083], cl; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x001aaaed: add byte ptr [eax], al; add byte ptr [ebx + 0x1b720eea], al; lea eax, [edi + 0xd]; pop edi; ret; 
0x001abb0d: add byte ptr [eax], al; add byte ptr [ebx + 0x1b720eef], al; lea eax, [eax + 0xd]; pop edi; ret; 
0x001ab1ad: add byte ptr [eax], al; add byte ptr [ebx + 0x1b7c0ec2], al; lea eax, [ecx + 0xe]; ret; 
0x0005b84d: add byte ptr [eax], al; add byte ptr [ebx + 0x1b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00115d58: add byte ptr [eax], al; add byte ptr [ebx + 0x1bc24b4], cl; add byte ptr [eax], al; lea edx, [esp + 0x2c]; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x0010d29c: add byte ptr [eax], al; add byte ptr [ebx + 0x23c2484], cl; add byte ptr [eax], al; mov dword ptr [esp + 0xac], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x000e4616: add byte ptr [eax], al; add byte ptr [ebx + 0x290c247c], cl; retf 0x490f; ret 0x1c8d; 
0x0006f1b7: add byte ptr [eax], al; add byte ptr [ebx + 0x2964247c], cl; ret; 
0x0012368d: add byte ptr [eax], al; add byte ptr [ebx + 0x29], bl; ret 0xc085; 
0x001aaadd: add byte ptr [eax], al; add byte ptr [ebx + 0x2b720dea], al; lea eax, [edi + 0xc]; pop edi; ret; 
0x001abafd: add byte ptr [eax], al; add byte ptr [ebx + 0x2b720def], al; lea eax, [eax + 0xc]; pop edi; ret; 
0x001ab19d: add byte ptr [eax], al; add byte ptr [ebx + 0x2b7c0dc2], al; lea eax, [ecx + 0xd]; ret; 
0x00093f24: add byte ptr [eax], al; add byte ptr [ebx + 0x3108244c], cl; sar byte ptr [eax + 0xaf], cl; mov esi, 8; call dword ptr gs:[0x10]; 
0x000938a4: add byte ptr [eax], al; add byte ptr [ebx + 0x3108244c], cl; sar byte ptr [esi + 8], cl; call dword ptr gs:[0x10]; 
0x001ae477: add byte ptr [eax], al; add byte ptr [ebx + 0x31102474], cl; fld xword ptr [ecx]; ret 0xe2c1; 
0x0015fc93: add byte ptr [eax], al; add byte ptr [ebx + 0x314c2444], cl; imul al; scasd eax, dword ptr es:[edi]; ret 0xffff; 
0x001304a2: add byte ptr [eax], al; add byte ptr [ebx + 0x367401ff], al; lea ecx, [esp + 0xc]; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x0012f0e2: add byte ptr [eax], al; add byte ptr [ebx + 0x367401ff], al; lea ecx, [esp + 0xc]; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x00139e0d: add byte ptr [eax], al; add byte ptr [ebx + 0x390c1e5c], cl; ret 0x820f; 
0x00051753: add byte ptr [eax], al; add byte ptr [ebx + 0x390c2444], cl; ret; 
0x0006f4c2: add byte ptr [eax], al; add byte ptr [ebx + 0x390c2454], cl; ret 0x840f; 
0x000710d6: add byte ptr [eax], al; add byte ptr [ebx + 0x39102444], cl; ret 0x8c0f; 
0x000527fb: add byte ptr [eax], al; add byte ptr [ebx + 0x39102444], cl; ret; 
0x0012553f: add byte ptr [eax], al; add byte ptr [ebx + 0x3940247c], cl; fmul dword ptr [ebx + 0xf046a09]; dec edi; ret; 
0x001aaacd: add byte ptr [eax], al; add byte ptr [ebx + 0x3b720bea], al; lea eax, [edi + 0xa]; pop edi; ret; 
0x001abaed: add byte ptr [eax], al; add byte ptr [ebx + 0x3b720bef], al; lea eax, [eax + 0xa]; pop edi; ret; 
0x001ab18d: add byte ptr [eax], al; add byte ptr [ebx + 0x3b7c0bc2], al; lea eax, [ecx + 0xb]; ret; 
0x001340cd: add byte ptr [eax], al; add byte ptr [ebx + 0x3f096], cl; add byte ptr [ecx - 0x33f7b], cl; inc edi; test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x000a388f: add byte ptr [eax], al; add byte ptr [ebx + 0x418d4451], cl; cmp byte ptr [ecx + 0x39102444], cl; ret 0x840f; 
0x0008779c: add byte ptr [eax], al; add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp + 0x396774c9], al; ret; 
0x0007f23c: add byte ptr [eax], al; add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp + 0x396f74c9], al; ret; 
0x00084982: add byte ptr [eax], al; add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp + 0x45840fc9], al; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x0007c3cb: add byte ptr [eax], al; add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp - 0x337bf037], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x00084c6c: add byte ptr [eax], al; add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; mov edi, 0x39000000; ret; 
0x0007de8b: add byte ptr [eax], al; add byte ptr [ebx + 0x428b4857], cl; or byte ptr [ebp + 0x393074c9], al; ret; 
0x001714b5: add byte ptr [eax], al; add byte ptr [ebx + 0x438b08ec], al; add al, 0xff; je 0x1714e5; sbb al, 0x53; call dword ptr [eax]; 
0x00179e5c: add byte ptr [eax], al; add byte ptr [ebx + 0x438b08ec], al; or bh, bh; je 0x179e8c; sbb al, 0x53; call dword ptr [eax + 0xc]; 
0x0016facd: add byte ptr [eax], al; add byte ptr [ebx + 0x438b0cec], al; add al, 0x53; call dword ptr [eax + 0x10]; 
0x000421bf: add byte ptr [eax], al; add byte ptr [ebx + 0x438d18c4], al; push es; pop ebx; ret; 
0x000a6653: add byte ptr [eax], al; add byte ptr [ebx + 0x4489b], cl; add byte ptr [ebx + 0x39242444], cl; ret; 
0x000d37b0: add byte ptr [eax], al; add byte ptr [ebx + 0x448b8614], cl; cmp dword ptr [ecx + edi], eax; ret 0x8f0f; 
0x00043c7e: add byte ptr [eax], al; add byte ptr [ebx + 0x450ffffa], al; ret 0x4489; 
0x0013a78d: add byte ptr [eax], al; add byte ptr [ebx + 0x4a8b01c0], al; add al, 0x83; ret 0x8518; 
0x001aaabd: add byte ptr [eax], al; add byte ptr [ebx + 0x4b720aea], al; lea eax, [edi + 9]; pop edi; ret; 
0x001abadd: add byte ptr [eax], al; add byte ptr [ebx + 0x4b720aef], al; lea eax, [eax + 9]; pop edi; ret; 
0x001ab17d: add byte ptr [eax], al; add byte ptr [ebx + 0x4b7c0ac2], al; lea eax, [ecx + 0xa]; ret; 
0x0017b8f5: add byte ptr [eax], al; add byte ptr [ebx + 0x4c890442], cl; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x00174817: add byte ptr [eax], al; add byte ptr [ebx + 0x4c8908c0], al; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x00177297: add byte ptr [eax], al; add byte ptr [ebx + 0x4c8938c0], al; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x001768c7: add byte ptr [eax], al; add byte ptr [ebx + 0x4c894cc0], al; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x00158355: add byte ptr [eax], al; add byte ptr [ebx + 0x4c8d01f8], al; add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x448b; 
0x00179a66: add byte ptr [eax], al; add byte ptr [ebx + 0x50510850], cl; call dword ptr [edx + 0xc]; 
0x00177c39: add byte ptr [eax], al; add byte ptr [ebx + 0x50], dl; call dword ptr [edx + 8]; 
0x000a0a3d: add byte ptr [eax], al; add byte ptr [ebx + 0x528b046a], cl; or al, 0x83; ret; 
0x0012fb14: add byte ptr [eax], al; add byte ptr [ebx + 0x53564d41], bh; call dword ptr gs:[0x10]; 
0x000344f8: add byte ptr [eax], al; add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x000344c8: add byte ptr [eax], al; add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x00034498: add byte ptr [eax], al; add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x000343d8: add byte ptr [eax], al; add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x00034438: add byte ptr [eax], al; add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x00034348: add byte ptr [eax], al; add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x00034408: add byte ptr [eax], al; add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x000343a8: add byte ptr [eax], al; add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x000345a8: add byte ptr [eax], al; add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x00034378: add byte ptr [eax], al; add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x00034468: add byte ptr [eax], al; add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x00034318: add byte ptr [eax], al; add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x0008a13d: add byte ptr [eax], al; add byte ptr [ebx + 0x555004ec], al; push esi; call dword ptr [ebx + 0x38]; 
0x0007c695: add byte ptr [eax], al; add byte ptr [ebx + 0x568901ea], al; add al, 0x39; ret; 
0x0008a0c3: add byte ptr [eax], al; add byte ptr [ebx + 0x568b0446], cl; or byte ptr [ecx], ch; ret 0xfa39; 
0x00179060: add byte ptr [eax], al; add byte ptr [ebx + 0x575104c1], al; call dword ptr [eax + 8]; 
0x00087b89: add byte ptr [eax], al; add byte ptr [ebx + 0x575504ec], al; push ebx; call dword ptr [esi + 0x3c]; 
0x001aaaad: add byte ptr [eax], al; add byte ptr [ebx + 0x5b7209ea], al; lea eax, [edi + 8]; pop edi; ret; 
0x001abacd: add byte ptr [eax], al; add byte ptr [ebx + 0x5b7209ef], al; lea eax, [eax + 8]; pop edi; ret; 
0x001ab16d: add byte ptr [eax], al; add byte ptr [ebx + 0x5b7c09c2], al; lea eax, [ecx + 9]; ret; 
0x0007ccc5: add byte ptr [eax], al; add byte ptr [ebx + 0x5d8b08ec], al; in al, 0x6a; call dword ptr [esi - 0x18]; 
0x0002608d: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00079b57: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x000799fa: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x000a0290: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b20c4], al; pop edi; ret; 
0x0011f1ce: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b24c4], al; ret; 
0x0016f57b: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b30c4], al; pop edi; ret; 
0x0016f6a7: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b34c4], al; ret; 
0x000d44a2: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x0010e7be: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b64c4], al; ret; 
0x001208bb: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; cmp eax, 0xfffff001; jae 0x24f50; ret; 
0x000d9844: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; mov eax, ecx; ret; 
0x00103032: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; mov eax, edi; pop edi; ret; 
0x00152baa: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; mov eax, edx; ret; 
0x0013c04d: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop ebp; ret; 
0x0002c030: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; jmp eax; 
0x001ad402: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 4; 
0x00024c2c: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0007cac6: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0005b855: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x001abb2d: add byte ptr [eax], al; add byte ptr [ebx + 0x5f0c2444], cl; ret; 
0x0013457d: add byte ptr [eax], al; add byte ptr [ebx + 0x5f5b14c4], al; ret; 
0x00156255: add byte ptr [eax], al; add byte ptr [ebx + 0x5f5e04c4], al; ret; 
0x0014764d: add byte ptr [eax], al; add byte ptr [ebx + 0x5f5e10c4], al; pop ebp; ret; 
0x0003cc7f: add byte ptr [eax], al; add byte ptr [ebx + 0x5f], bl; ret; 
0x000fb696: add byte ptr [eax], al; add byte ptr [ebx + 0x6508245c], cl; call dword ptr [0x10]; neg eax; pop ebx; ret; 
0x000430fa: add byte ptr [eax], al; add byte ptr [ebx + 0x674fff2], al; bsr eax, edx; xor eax, 0x1f; ret; 
0x0016ef09: add byte ptr [eax], al; add byte ptr [ebx + 0x6a1043], cl; push esi; call dword ptr [eax + 0x14]; 
0x001aaa9d: add byte ptr [eax], al; add byte ptr [ebx + 0x6b7207ea], al; lea eax, [edi + 6]; pop edi; ret; 
0x001ababd: add byte ptr [eax], al; add byte ptr [ebx + 0x6b7207ef], al; lea eax, [eax + 6]; pop edi; ret; 
0x001ab15d: add byte ptr [eax], al; add byte ptr [ebx + 0x6b7c07c2], al; lea eax, [ecx + 7]; ret; 
0x00148c14: add byte ptr [eax], al; add byte ptr [ebx + 0x7422373c], al; ret; 
0x000fb2af: add byte ptr [eax], al; add byte ptr [ebx + 0x7426113c], al; or bh, byte ptr [eax - 1]; ret; 
0x001376df: add byte ptr [eax], al; add byte ptr [ebx + 0x74ff04ec], al; and al, 0x1c; push 0; push 0x2000004; call eax; 
0x0016ee3e: add byte ptr [eax], al; add byte ptr [ebx + 0x74ff08ec], al; and al, 0x1c; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x000a0731: add byte ptr [eax], al; add byte ptr [ebx + 0x7c8b28ec], al; and al, 0x3c; lea ecx, [ebp - 0x722d4]; call dword ptr gs:[0x10]; 
0x0007bc01: add byte ptr [eax], al; add byte ptr [ebx + 0x7d8be045], cl; in al, 0x89; ret; 
0x0010e705: add byte ptr [eax], al; add byte ptr [ebx + 0x80249c], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00099da9: add byte ptr [eax], al; add byte ptr [ebx + 0x8080], cl; add byte ptr [esp + eax*2 - 0x75], dh; je 0x99ddb; adc al, 0x89; ret 0xe283; 
0x00099ea9: add byte ptr [eax], al; add byte ptr [ebx + 0x8080], cl; add byte ptr [esp + ecx*2 - 0x75], dh; je 0x99edb; adc al, 0x89; ret 0xe283; 
0x0008f888: add byte ptr [eax], al; add byte ptr [ebx + 0x8087], cl; add byte ptr [eax - 0x768c8af0], ch; ret 0xca83; 
0x0012ee9d: add byte ptr [eax], al; add byte ptr [ebx + 0x84249c], cl; add byte ptr [eax], al; mov eax, 0x6c; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0005af16: add byte ptr [eax], al; add byte ptr [ebx + 0x88901e9], al; mov eax, edx; add esp, 0xc; ret; 
0x0003457b: add byte ptr [eax], al; add byte ptr [ebx + 0x8b0104], cl; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0003453b: add byte ptr [eax], al; add byte ptr [ebx + 0x8b0104], cl; mov eax, dword ptr [eax + 0x2c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0012452d: add byte ptr [eax], al; add byte ptr [ebx + 0x8b10c4], al; test eax, eax; je 0x124580; call eax; 
0x00124671: add byte ptr [eax], al; add byte ptr [ebx + 0x8b10c4], al; test eax, eax; je 0x124718; call eax; 
0x0012ef7c: add byte ptr [eax], al; add byte ptr [ebx + 0xa024b4], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00122a5f: add byte ptr [eax], al; add byte ptr [ebx + 0xa4bd], cl; add byte ptr [ecx + 0x5401], bh; mov ebp, dword ptr [eax + edi]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000907be: add byte ptr [eax], al; add byte ptr [ebx + 0xa7602fa], al; ret; 
0x00114ca4: add byte ptr [eax], al; add byte ptr [ebx + 0xa82494], cl; add byte ptr [eax], al; mov esi, dword ptr [esp + 0xac]; call dword ptr gs:[0x10]; 
0x00114cab: add byte ptr [eax], al; add byte ptr [ebx + 0xac24b4], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001aaafd: add byte ptr [eax], al; add byte ptr [ebx + 0xb720fea], al; lea eax, [edi + 0xe]; pop edi; ret; 
0x001abb1d: add byte ptr [eax], al; add byte ptr [ebx + 0xb720fef], al; lea eax, [eax + 0xe]; pop edi; ret; 
0x0009806d: add byte ptr [eax], al; add byte ptr [ebx + 0xb7401fa], al; mov eax, 0x16; ret; 
0x001ab1bd: add byte ptr [eax], al; add byte ptr [ebx + 0xb7c0fc2], al; lea eax, [ecx + 0xf]; ret; 
0x00114fcc: add byte ptr [eax], al; add byte ptr [ebx + 0xb82494], cl; add byte ptr [eax], al; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x00114f5d: add byte ptr [eax], al; add byte ptr [ebx + 0xb82494], cl; add byte ptr [eax], al; mov eax, 0x1c4; mov esi, dword ptr [esp + 0xbc]; call dword ptr gs:[0x10]; 
0x001328da: add byte ptr [eax], al; add byte ptr [ebx + 0xb], bh; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x0012dc70: add byte ptr [eax], al; add byte ptr [ebx + 0xc0249c], cl; add byte ptr [eax], al; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000e760d: add byte ptr [eax], al; add byte ptr [ebx + 0xc75daf8], al; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x0014c168: add byte ptr [eax], al; add byte ptr [ebx + 0xc8b10c4], al; and al, 0x39; ror byte ptr [edi], 1; dec edi; ret 0x4189; 
0x00178139: add byte ptr [eax], al; add byte ptr [ebx + 0xcec8300], cl; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x00182cb1: add byte ptr [eax], al; add byte ptr [ebx + 0xdd4b3], cl; add byte ptr [ebx - 0x4472f714], al; test al, 0x66; stc; call dword ptr [edi + 0x56]; 
0x0018351d: add byte ptr [eax], al; add byte ptr [ebx + 0xdd4bb], cl; add byte ptr [ebx - 0x4c72f714], al; test al, 0x66; stc; call dword ptr [esi + 0x57]; 
0x00132b86: add byte ptr [eax], al; add byte ptr [ebx + 0xe], bh; mov esi, edi; mov edx, 0x100; call dword ptr gs:[0x10]; 
0x0010a693: add byte ptr [eax], al; add byte ptr [ebx + 0xf00903c], al; test dword ptr [ebx - 0x7c000006], esp; ret 0x8301; 
0x0005fcb5: add byte ptr [eax], al; add byte ptr [ebx + 0xf242454], cl; mov dh, 0x52; or al, 0xf6; ret 0xf01; 
0x000fb04f: add byte ptr [eax], al; add byte ptr [ebx + 0xf26033c], al; test dword ptr [eax + eax - 0x2f770000], edx; pop ebx; ret; 
0x0018b9b5: add byte ptr [eax], al; add byte ptr [ebx + 0xf], bl; mov dh, 2; pop esi; pop edi; ret; 
0x0009389f: add byte ptr [eax], al; add byte ptr [ebx + 2], bh; mov ecx, dword ptr [esp + 8]; xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x00092d12: add byte ptr [eax], al; add byte ptr [ebx + 2], bh; mov esi, 8; add ecx, 0x474; call dword ptr gs:[0x10]; 
0x0010d1ff: add byte ptr [eax], al; add byte ptr [ebx + 2], bh; xor edx, edx; mov ecx, dword ptr [esp + 4]; mov esi, 8; call dword ptr gs:[0x10]; 
0x0010d603: add byte ptr [eax], al; add byte ptr [ebx + 2], bh; xor edx, edx; mov esi, 8; mov ecx, dword ptr [ebp - 0x144]; call dword ptr gs:[0x10]; 
0x00192a0c: add byte ptr [eax], al; add byte ptr [ebx + 3], bh; call dword ptr gs:[0x10]; 
0x0013307e: add byte ptr [eax], al; add byte ptr [ebx + 3], bh; mov dword ptr [esp + 0x18], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000ea52d: add byte ptr [eax], al; add byte ptr [ebx - 0x1097f314], al; add byte ptr [eax], al; add al, ch; ret; 
0x00177dd6: add byte ptr [eax], al; add byte ptr [ebx - 0x137cc3ba], cl; or al, 0x55; call dword ptr [eax + 0x10]; 
0x0018b951: add byte ptr [eax], al; add byte ptr [ebx - 0x137cdfaa], cl; add al, 0x29; ret 0x5052; 
0x0016f080: add byte ptr [eax], al; add byte ptr [ebx - 0x137cefbd], cl; or al, 0x56; call dword ptr [eax + 0x10]; 
0x0010d60f: add byte ptr [eax], al; add byte ptr [ebx - 0x14373], cl; jmp dword ptr [ebp - 1]; 
0x001b2357: add byte ptr [eax], al; add byte ptr [ebx - 0x147c03bd], cl; add al, 0x89; ret 0xeac1; 
0x001b028a: add byte ptr [eax], al; add byte ptr [ebx - 0x167c03bf], cl; add al, 0x89; ret 0xeac1; 
0x000a0f9d: add byte ptr [eax], al; add byte ptr [ebx - 0x173ef797], cl; or al, 0x83; ret 0x8901; 
0x0002f741: add byte ptr [eax], al; add byte ptr [ebx - 0x17a9f314], al; ret; 
0x00086f5d: add byte ptr [eax], al; add byte ptr [ebx - 0x17aaf314], al; aas; ret 0xfff9; 
0x000ef5b5: add byte ptr [eax], al; add byte ptr [ebx - 0x17aaf314], al; call esi; 
0x000e8f41: add byte ptr [eax], al; add byte ptr [ebx - 0x17acf314], al; ret; 
0x000876ad: add byte ptr [eax], al; add byte ptr [ebx - 0x17afe714], al; out 0x3a, eax; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0011706d: add byte ptr [eax], al; add byte ptr [ebx - 0x17aff314], al; cmpsd dword ptr [esi], dword ptr es:[edi]; mov ebp, 0xc483fffa; adc byte ptr [ecx], bh; ret; 
0x00118b0d: add byte ptr [eax], al; add byte ptr [ebx - 0x17aff314], al; pop es; mov dword ptr [0xc483fffa], eax; adc byte ptr [ecx], bh; ret; 
0x00041959: add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; mov ebx, 0x81001482; ret; 
0x00123ce7: add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; sub eax, 0x8100065f; ret; 
0x000c30de: add byte ptr [eax], al; add byte ptr [ebx - 0x1c9b7d74], cl; clc; inc dword ptr [ecx]; sar dword ptr [esi], 1; jmp ecx; 
0x0012342c: add byte ptr [eax], al; add byte ptr [ebx - 0x2776e73c], al; pop ebx; ret; 
0x00094a39: add byte ptr [eax], al; add byte ptr [ebx - 0x2776fb3c], al; pop ebx; pop esi; ret; 
0x0017baed: add byte ptr [eax], al; add byte ptr [ebx - 0x2f76eb3c], al; pop ebx; pop esi; ret; 
0x001265cb: add byte ptr [eax], al; add byte ptr [ebx - 0x2f76f73c], al; pop ebx; ret; 
0x001558e9: add byte ptr [eax], al; add byte ptr [ebx - 0x2f76fb3c], al; pop ebx; pop edi; ret; 
0x00108949: add byte ptr [eax], al; add byte ptr [ebx - 0x317cf314], al; call dword ptr [edi - 0x18]; 
0x0005768d: add byte ptr [eax], al; add byte ptr [ebx - 0x362743], al; call dword ptr [eax]; 
0x000d7bad: add byte ptr [eax], al; add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x00058b9d: add byte ptr [eax], al; add byte ptr [ebx - 0x36277b], al; jmp eax; 
0x0005752d: add byte ptr [eax], al; add byte ptr [ebx - 0x364743], cl; dec dword ptr [ebp - 0x7d379]; call dword ptr [eax - 0x73]; 
0x000d7a40: add byte ptr [eax], al; add byte ptr [ebx - 0x364f63], cl; dec dword ptr [ebx - 0x36374b]; call dword ptr [edi - 1]; 
0x000d61b4: add byte ptr [eax], al; add byte ptr [ebx - 0x365773], cl; dec dword ptr [ecx - 0x36737b]; dec dword ptr [ebp + 0x4f0fff46]; ret 0x48d; 
0x00070730: add byte ptr [eax], al; add byte ptr [ebx - 0x37b36a64], cl; clc; inc dword ptr [ecx]; ret; 
0x00070ef0: add byte ptr [eax], al; add byte ptr [ebx - 0x38b36a64], cl; clc; inc dword ptr [ecx]; ret; 
0x0005351f: add byte ptr [eax], al; add byte ptr [ebx - 0x3b7ccbc0], cl; add al, 0x5b; pop esi; ret; 
0x00026133: add byte ptr [eax], al; add byte ptr [ebx - 0x3b7cef3c], al; add al, 0x5b; pop esi; ret; 
0x0008b9a4: add byte ptr [eax], al; add byte ptr [ebx - 0x3f7acbc0], cl; jne 0x8b9a0; ret; 
0x0008e81b: add byte ptr [eax], al; add byte ptr [ebx - 0x3f7adbc0], cl; jne 0x8e830; ret; 
0x0010bb9d: add byte ptr [eax], al; add byte ptr [ebx - 0x3f7af7c0], cl; je 0x10ba8f; call eax; 
0x0010bb3d: add byte ptr [eax], al; add byte ptr [ebx - 0x3f7afbc0], cl; je 0x10ba8f; call eax; 
0x0010bbf5: add byte ptr [eax], al; add byte ptr [ebx - 0x3f7afbc0], cl; je 0x10bae2; call eax; 
0x00061f65: add byte ptr [eax], al; add byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x00040a1c: add byte ptr [eax], al; add byte ptr [ebx - 0x3fcefb3c], al; pop ebx; pop esi; ret; 
0x0016c35e: add byte ptr [eax], al; add byte ptr [ebx - 0x41f0c7f4], cl; ret 0x44f6; 
0x00142758: add byte ptr [eax], al; add byte ptr [ebx - 0x41f0d0ec], cl; ret; 
0x0016d4ce: add byte ptr [eax], al; add byte ptr [ebx - 0x41f0e7f4], cl; ret 0x44f6; 
0x00182d10: add byte ptr [eax], al; add byte ptr [ebx - 0x4472f714], al; mov ah, byte ptr [esi - 7]; call dword ptr [edi + 0x56]; 
0x000f2b0d: add byte ptr [eax], al; add byte ptr [ebx - 0x46f63], cl; call dword ptr [esi + 0x51]; 
0x000f285b: add byte ptr [eax], al; add byte ptr [ebx - 0x46f63], cl; call dword ptr [esi - 1]; 
0x0003c992: add byte ptr [eax], al; add byte ptr [ebx - 0x46f7dba4], cl; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0006066f: add byte ptr [eax], al; add byte ptr [ebx - 0x4713746c], cl; clc; inc dword ptr [ecx]; fidivr dword ptr [esi]; jmp edx; 
0x0010fea5: add byte ptr [eax], al; add byte ptr [ebx - 0x4737b], cl; inc dword ptr [ebx - 0x7f72f314]; mov bh, 0x47; stc; call dword ptr [eax - 0x18]; 
0x00061945: add byte ptr [eax], al; add byte ptr [ebx - 0x47afdb8c], cl; call dword ptr [ebx - 0x59]; 
0x00099eed: add byte ptr [eax], al; add byte ptr [ebx - 0x48], bl; push ss; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x00142dd5: add byte ptr [eax], al; add byte ptr [ebx - 0x48f0fb14], al; ret; 
0x00133edd: add byte ptr [eax], al; add byte ptr [ebx - 0x4ff63], cl; dec dword ptr [ebx - 0x50773]; jmp dword ptr [ebp - 1]; 
0x00075498: add byte ptr [eax], al; add byte ptr [ebx - 0x4ff7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000730fd: add byte ptr [eax], al; add byte ptr [ebx - 0x53b73], cl; jmp dword ptr [ebp - 0x5f]; 
0x00182cd2: add byte ptr [eax], al; add byte ptr [ebx - 0x5472f714], al; mov dh, 0x66; stc; call dword ptr [ebp + 0x56]; 
0x00069780: add byte ptr [eax], al; add byte ptr [ebx - 0x58f63], cl; call dword ptr [ecx + 0x50]; 
0x00069a15: add byte ptr [eax], al; add byte ptr [ebx - 0x58f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000f150a: add byte ptr [eax], al; add byte ptr [ebx - 0x5b37b], cl; inc dword ptr [ebp - 0x74bc8b40]; test dword ptr [edx + edi*8 - 1], edx; jmp dword ptr [ebp - 0x75]; 
0x000f878a: add byte ptr [eax], al; add byte ptr [ebx - 0x5c37b], cl; inc dword ptr [ebp - 0x74bc8b40]; test dword ptr [edx + edi*8 - 1], eax; jmp dword ptr [ebp - 0x75]; 
0x00098f6f: add byte ptr [eax], al; add byte ptr [ebx - 0x5e9ae3a9], cl; push 0x39000000; ret 0x6974; 
0x00098359: add byte ptr [eax], al; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x00183f12: add byte ptr [eax], al; add byte ptr [ebx - 0x6972f714], al; cdq; stc; call dword ptr [edx - 0x77]; 
0x0015e624: add byte ptr [eax], al; add byte ptr [ebx - 0x6bf0fd08], al; ret; 
0x000496eb: add byte ptr [eax], al; add byte ptr [ebx - 0x6bf0fe05], al; ret 0xc639; 
0x000c996e: add byte ptr [eax], al; add byte ptr [ebx - 0x6bf0fe06], al; ret 0xc339; 
0x00182ced: add byte ptr [eax], al; add byte ptr [ebx - 0x6c72f714], al; cdq; stc; call dword ptr [edx - 0x77]; 
0x0002fec4: add byte ptr [eax], al; add byte ptr [ebx - 0x6c72f714], al; jle 0x2fef9; stc; call dword ptr [edx + 0x50]; 
0x0007bf50: add byte ptr [eax], al; add byte ptr [ebx - 0x6e76a7b8], cl; mov byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x00179ea5: add byte ptr [eax], al; add byte ptr [ebx - 0x72acf714], al; push esp; and al, 0x38; push edx; call dword ptr [eax + 0xc]; 
0x0010f14d: add byte ptr [eax], al; add byte ptr [ebx - 0x72c7dba4], cl; xor dword ptr [ecx + ecx*2], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000a1442: add byte ptr [eax], al; add byte ptr [ebx - 0x72e3dba4], cl; push ebx; or dh, dh; ret 0xf0f; 
0x00028e4d: add byte ptr [eax], al; add byte ptr [ebx - 0x72f7dbac], cl; inc ebx; add al, 0x39; ret 0x9173; 
0x0005469d: add byte ptr [eax], al; add byte ptr [ebx - 0x72fb6984], cl; dec edi; add dword ptr [ecx - 0x7cfb69b4], ecx; ret 0x8501; 
0x00048fe3: add byte ptr [eax], al; add byte ptr [ebx - 0x7374dbfc], cl; and al, 0x9c; add byte ptr [eax], al; add byte ptr [ebx - 0x7ca7dba4], cl; ret 0xf7ff; 
0x001ab10d: add byte ptr [eax], al; add byte ptr [ebx - 0x73f0fe3e], al; mov bh, 0; add byte ptr [eax], al; lea eax, [ecx + 1]; ret; 
0x0012f5f2: add byte ptr [eax], al; add byte ptr [ebx - 0x749bdbb4], cl; pop esp; and al, 0x60; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x0002c3a6: add byte ptr [eax], al; add byte ptr [ebx - 0x74dfdb8c], cl; jl 0x2c3d4; and al, 0x89; ret 0xf229; 
0x000d0084: add byte ptr [eax], al; add byte ptr [ebx - 0x74dfdbbc], cl; mov word ptr [esp + ebx*4], fs; add byte ptr [eax], al; add byte ptr [ebx - 0x7c9fdb8c], cl; ret 0xf7ff; 
0x000c9624: add byte ptr [eax], al; add byte ptr [ebx - 0x74dfdbbc], cl; mov word ptr [esp + ebx*4], fs; add byte ptr [eax], al; add byte ptr [ebx - 0x7cabdba4], cl; ret 0xf7ff; 
0x00132ace: add byte ptr [eax], al; add byte ptr [ebx - 0x74ebdbb4], cl; push esp; and al, 0x18; call dword ptr gs:[0x10]; 
0x0019297c: add byte ptr [eax], al; add byte ptr [ebx - 0x74ebdbb4], cl; push esp; and al, 0x18; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00132fbc: add byte ptr [eax], al; add byte ptr [ebx - 0x74ebdbb4], cl; push esp; and al, 0x18; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0012ef02: add byte ptr [eax], al; add byte ptr [ebx - 0x74efdbb4], cl; pop esp; and al, 0xc; call dword ptr gs:[0x10]; 
0x000612c2: add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x00131b69: add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; push esp; and al, 0x10; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00050094: add byte ptr [eax], al; add byte ptr [ebx - 0x74f7dbbc], cl; mov word ptr [esp + ebp*4], fs; add byte ptr [eax], al; add byte ptr [ebx - 0x7c9bdb8c], cl; ret 0xf7ff; 
0x00105ae0: add byte ptr [eax], al; add byte ptr [ebx - 0x76cbdbbc], cl; ret; 
0x001b4fc6: add byte ptr [eax], al; add byte ptr [ebx - 0x76d3dbbc], cl; test byte ptr [eax + ecx*4], ah; add byte ptr [eax], al; add byte ptr [ebx - 0x76f7dbbc], cl; ret 0x8489; 
0x00140bd6: add byte ptr [eax], al; add byte ptr [ebx - 0x76e3db84], cl; ret; 
0x0008edf8: add byte ptr [eax], al; add byte ptr [ebx - 0x76e7dbac], cl; ret; 
0x00099df5: add byte ptr [eax], al; add byte ptr [ebx - 0x76ebdb84], cl; ret 0xca83; 
0x00145af4: add byte ptr [eax], al; add byte ptr [ebx - 0x76ebdbbc], cl; ret 0xc085; 
0x00151cdd: add byte ptr [eax], al; add byte ptr [ebx - 0x76efdb94], cl; ret 0x7e8d; 
0x001b4fd1: add byte ptr [eax], al; add byte ptr [ebx - 0x76f7dbbc], cl; ret 0x8489; 
0x000b15ed: add byte ptr [eax], al; add byte ptr [ebx - 0x76fd76ff], cl; clc; pop edi; ret; 
0x0017cbd0: add byte ptr [eax], al; add byte ptr [ebx - 0x77], bl; rcr byte ptr [esi + 0x5f], 1; ret; 
0x000fd79b: add byte ptr [eax], al; add byte ptr [ebx - 0x77], dl; ret; 
0x000402f3: add byte ptr [eax], al; add byte ptr [ebx - 0x77cc7fc], cl; add al, 0x74; ret 0xffb8; 
0x000308dd: add byte ptr [eax], al; add byte ptr [ebx - 0x7872f314], al; mov bl, 0x2b; stc; call dword ptr [eax - 0x18]; 
0x0002ed4e: add byte ptr [eax], al; add byte ptr [ebx - 0x78f0fb05], al; mov al, byte ptr [0x9000000]; ret; 
0x0012bf95: add byte ptr [eax], al; add byte ptr [ebx - 0x7972fb14], al; mov ah, 0xa4; stc; call dword ptr [edi - 0x7f]; 
0x0016f625: add byte ptr [eax], al; add byte ptr [ebx - 0x7972fb14], al; mov edx, 0x6afff963; add eax, 0x4c868d50; je 0x16f632; call dword ptr [eax - 0x18]; 
0x00169b93: add byte ptr [eax], al; add byte ptr [ebx - 0x7a72f314], al; jl 0x169bff; stc; call dword ptr [eax - 0x18]; 
0x00142515: add byte ptr [eax], al; add byte ptr [ebx - 0x7a72f714], al; sub ecx, edi; call dword ptr [eax + 0x53]; 
0x00157a58: add byte ptr [eax], al; add byte ptr [ebx - 0x7ad7dbac], cl; ror byte ptr [edi], cl; xchg ebp, eax; ret 0xd789; 
0x0017d019: add byte ptr [eax], al; add byte ptr [ebx - 0x7ae7dbac], cl; sal byte ptr [ebp + 0xc], cl; add esp, 0xc; ret; 
0x00157d64: add byte ptr [eax], al; add byte ptr [ebx - 0x7aefdbac], cl; sal byte ptr [eax + ebx - 0x7d], cl; in al, dx; or byte ptr [ebp - 0x6bbcf7f], cl; call dword ptr [eax + 0x52]; 
0x0004a981: add byte ptr [eax], al; add byte ptr [ebx - 0x7af3dbac], cl; sal byte ptr [esp + edi - 0x27], cl; test dword ptr [eax], edx; ret 0xfff9; 
0x0004a838: add byte ptr [eax], al; add byte ptr [ebx - 0x7af3dbbc], cl; sal byte ptr [ebp + 0x2d], 0xd9; test dword ptr [eax], eax; ret 0xfff9; 
0x001abbd0: add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x000a67f4: add byte ptr [eax], al; add byte ptr [ebx - 0x7c0f20], al; or ecx, dword ptr [edi]; inc esi; ret 0x8388; 
0x000ea7c8: add byte ptr [eax], al; add byte ptr [ebx - 0x7c3976e6], cl; ret 0x8304; 
0x000ea8e8: add byte ptr [eax], al; add byte ptr [ebx - 0x7c3e76c6], cl; ret 0x8304; 
0x001765fd: add byte ptr [eax], al; add byte ptr [ebx - 0x7c72f314], al; cdq; dec ecx; stc; call dword ptr [edi + 0x56]; 
0x0011c14d: add byte ptr [eax], al; add byte ptr [ebx - 0x7c72f314], al; inc esi; stc; call dword ptr [eax - 0x18]; 
0x000dcddd: add byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; out dx, eax; inc ebp; stc; call dword ptr [eax + 0x56]; 
0x0002fee2: add byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; test byte ptr [ebx], ch; stc; call dword ptr [eax - 1]; 
0x000a224c: add byte ptr [eax], al; add byte ptr [ebx - 0x7c72fb14], al; dec eax; inc edx; stc; call dword ptr [eax + 0x56]; 
0x0005009f: add byte ptr [eax], al; add byte ptr [ebx - 0x7c9bdb8c], cl; ret 0xf7ff; 
0x000d008f: add byte ptr [eax], al; add byte ptr [ebx - 0x7c9fdb8c], cl; ret 0xf7ff; 
0x00048fed: add byte ptr [eax], al; add byte ptr [ebx - 0x7ca7dba4], cl; ret 0xf7ff; 
0x000c962f: add byte ptr [eax], al; add byte ptr [ebx - 0x7cabdba4], cl; ret 0xf7ff; 
0x0010f41d: add byte ptr [eax], al; add byte ptr [ebx - 0x7cdfdbbc], cl; ret; 
0x001adc2f: add byte ptr [eax], al; add byte ptr [ebx - 0x7ce7dba4], cl; ret; 
0x00169724: add byte ptr [eax], al; add byte ptr [ebx - 0x7cefdbac], cl; ret 0x8902; 
0x0011132d: add byte ptr [eax], al; add byte ptr [ebx - 0x7cf7dbbc], cl; ret; 
0x0004aafd: add byte ptr [eax], al; add byte ptr [ebx - 0x7cfb78a4], cl; ret; 
0x0005c440: add byte ptr [eax], al; add byte ptr [ebx - 0x8b63], cl; dec dword ptr [edi]; dec esi; ret 0xec83; 
0x0005c17d: add byte ptr [eax], al; add byte ptr [ebx - 0x9343], cl; dec dword ptr [edi]; mov dh, 0x57; or al, 0xf6; ret 0x7401; 
0x0017e80f: add byte ptr [eax], al; add byte ptr [ebx - 0x9f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x0007c442: add byte ptr [eax], al; add byte ptr [ebx - 0xa8fb14], al; jne 0x7c454; push esi; call dword ptr [ebx + 0x1c]; 
0x0007e83a: add byte ptr [eax], al; add byte ptr [ebx - 0xa9f314], al; push ebx; xor al, 0x89; ret 0xc483; 
0x000a6c70: add byte ptr [eax], al; add byte ptr [ebx - 0xa9f714], al; jae 0xa6c9e; call eax; 
0x0007e511: add byte ptr [eax], al; add byte ptr [ebx - 0xacfb14], al; jne 0x7e4ff; push esi; call dword ptr [eax + 0x2c]; 
0x0007e5a2: add byte ptr [eax], al; add byte ptr [ebx - 0xacfb14], al; jne 0x7e590; push esi; call dword ptr [eax + 0x2c]; 
0x000a6dfd: add byte ptr [eax], al; add byte ptr [ebx - 0xaff714], al; jae 0xa6e2b; call edx; 
0x0014547d: add byte ptr [eax], al; add byte ptr [ebx - 0xbb7b], cl; dec dword ptr [ebx - 0xaf6b]; dec dword ptr [ebx - 0x9363]; dec dword ptr [ebp + 0x48d4004]; ret; 
0x000ac503: add byte ptr [eax], al; add byte ptr [ebx - 0xf76fb3c], al; pop ebx; pop esi; ret; 
0x0012b3e8: add byte ptr [eax], al; add byte ptr [ebx - 1], bh; mov edx, 0xffffffff; call dword ptr gs:[0x10]; 
0x001765c4: add byte ptr [eax], al; add byte ptr [ebx], bh; lodsb al, byte ptr [esi]; ret; 
0x0008c9a5: add byte ptr [eax], al; add byte ptr [ebx], ch; push eax; or byte ptr [ebx - 0x2fd6f7bf], cl; ret; 
0x001b440b: add byte ptr [eax], al; add byte ptr [ecx + 0x100000e1], al; add byte ptr [ecx - 0x9f7dbbc], cl; ret 0xf07; 
0x00132b8b: add byte ptr [eax], al; add byte ptr [ecx + 0x100bafe], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00125dfc: add byte ptr [eax], al; add byte ptr [ecx + 0x100c249c], cl; add byte ptr [eax], al; xor ebx, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00121d0a: add byte ptr [eax], al; add byte ptr [ecx + 0x10], bh; call dword ptr gs:[0x10]; 
0x000e8c63: add byte ptr [eax], al; add byte ptr [ecx + 0x13c248c], cl; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x164]; call dword ptr gs:[0x10]; 
0x00115b69: add byte ptr [eax], al; add byte ptr [ecx + 0x18c24ac], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x1b8]; call dword ptr gs:[0x10]; 
0x000a226f: add byte ptr [eax], al; add byte ptr [ecx + 0x1c829f2], cl; lds ebp, ptr [ecx]; ret 0x4589; 
0x000fb134: add byte ptr [eax], al; add byte ptr [ecx + 0x23683efa], al; xchg ecx, eax; jne 0xfb1a0; ret; 
0x00065160: add byte ptr [eax], al; add byte ptr [ecx + 0x2444c7cf], cl; inc esp; add byte ptr [eax], al; add byte ptr [eax], al; jmp edx; 
0x0010e5b7: add byte ptr [eax], al; add byte ptr [ecx + 0x24948be9], cl; mov byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0017b5e7: add byte ptr [eax], al; add byte ptr [ecx + 0x31382444], cl; rcl byte ptr [edi - 0x18], 0x2a; js 0x17b5e9; call ecx; 
0x0017b507: add byte ptr [eax], al; add byte ptr [ecx + 0x31382444], cl; rcl byte ptr [edi - 0x18], 0xa; jns 0x17b509; call ecx; 
0x0013fed1: add byte ptr [eax], al; add byte ptr [ecx + 0x313c2444], cl; shr al, 0xc1; sbb edi, edi; inc dword ptr [ebp - 0x768f8740]; ret; 
0x00123998: add byte ptr [eax], al; add byte ptr [ecx + 0x316c2444], cl; shr al, 0x9a; mov eax, 0xf883fffc; push dword ptr [ebp + esi*2 - 0x77]; ret; 
0x000b36dd: add byte ptr [eax], al; add byte ptr [ecx + 0x3518911], cl; pop ebx; ret; 
0x00122d40: add byte ptr [eax], al; add byte ptr [ecx + 0x36b8c7], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000625a4: add byte ptr [eax], al; add byte ptr [ecx + 0x391c246c], cl; ret; 
0x0006e264: add byte ptr [eax], al; add byte ptr [ecx + 0x3920246c], cl; ret; 
0x0012ae95: add byte ptr [eax], al; add byte ptr [ecx + 0x39d8f7f0], cl; ret; 
0x000908fa: add byte ptr [eax], al; add byte ptr [ecx + 0x3ffffa], al; add byte ptr [edi + 0xb], dh; ret; 
0x000698e6: add byte ptr [eax], al; add byte ptr [ecx + 0x40f63b14], cl; jmp dword ptr [eax]; 
0x00108a6f: add byte ptr [eax], al; add byte ptr [ecx + 0x43b60fc6], cl; add al, 0x89; ret 0xe283; 
0x0005adee: add byte ptr [eax], al; add byte ptr [ecx + 0x4508910], cl; xor eax, eax; ret; 
0x000278ff: add byte ptr [eax], al; add byte ptr [ecx + 0x458bc445], cl; aam 0x89; ret; 
0x00122a65: add byte ptr [eax], al; add byte ptr [ecx + 0x5401], bh; mov ebp, dword ptr [eax + edi]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00122d05: add byte ptr [eax], al; add byte ptr [ecx + 0x5409], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000a1593: add byte ptr [eax], al; add byte ptr [ecx + 0x5a89405e], cl; or al, 0x89; ret 0xca83; 
0x0007c0a0: add byte ptr [eax], al; add byte ptr [ecx + 0x5b082454], cl; jmp eax; 
0x000baa9d: add byte ptr [eax], al; add byte ptr [ecx + 0x5b5e5ff8], cl; ret; 
0x0007c2e0: add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x0012e7a6: add byte ptr [eax], al; add byte ptr [ecx + 0x7c891a3c], cl; sbb al, byte ptr [ebx + eax*4]; ret; 
0x0012e38f: add byte ptr [eax], al; add byte ptr [ecx + 0x7fffffff], bh; mov esi, 5; call dword ptr gs:[0x10]; 
0x00098201: add byte ptr [eax], al; add byte ptr [ecx + 0x80], bh; call dword ptr gs:[0x10]; 
0x0008f21b: add byte ptr [eax], al; add byte ptr [ecx + 0x80], bh; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008e6d1: add byte ptr [eax], al; add byte ptr [ecx + 0x80], bh; xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x0008fa21: add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; call dword ptr gs:[0x10]; 
0x00186de3: add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00092f04: add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; mov ebx, edi; call dword ptr gs:[0x10]; 
0x0009829e: add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; xor esi, esi; mov edx, 0x7fffffff; mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x0008fa50: add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; xor esi, esi; mov edx, 1; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x00095d2b: add byte ptr [eax], al; add byte ptr [ecx + 0x87], bh; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x000a1846: add byte ptr [eax], al; add byte ptr [ecx + 0x98486], cl; add byte ptr [ebp - 0x19e2937a], cl; call dword ptr [eax + 0x57]; 
0x0003b5cb: add byte ptr [eax], al; add byte ptr [ecx + 0xa024bc], al; add byte ptr [eax], al; push eax; ret; 
0x001782c9: add byte ptr [eax], al; add byte ptr [ecx + 0xa0c4], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0010d015: add byte ptr [eax], al; add byte ptr [ecx + 0xac2484], cl; add byte ptr [eax], al; mov eax, 0xaf; mov dword ptr [esp + 0xb8], 0; call dword ptr gs:[0x10]; 
0x0003ca1b: add byte ptr [eax], al; add byte ptr [ecx + 0xb3b8c2], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ea0a3: add byte ptr [eax], al; add byte ptr [ecx + 0xc], bh; lea ebx, [eax + 0x6c]; mov dword ptr [eax + 0x6c], ebx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x00097c92: add byte ptr [eax], al; add byte ptr [ecx + 1], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0018c4cc: add byte ptr [eax], al; add byte ptr [ecx + 1], bh; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x00097787: add byte ptr [eax], al; add byte ptr [ecx + 7], bh; xor esi, esi; mov dword ptr [ebx + 4], edx; xor edx, edx; call dword ptr gs:[0x10]; 
0x0003c9f4: add byte ptr [eax], al; add byte ptr [ecx + 8], bh; call dword ptr gs:[0x10]; 
0x0009744e: add byte ptr [eax], al; add byte ptr [ecx + 8], bh; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x00054382: add byte ptr [eax], al; add byte ptr [ecx + eax*2 - 0x7d], dh; ret; 
0x00175f83: add byte ptr [eax], al; add byte ptr [ecx - 0x13b7b], cl; call dword ptr [eax - 0x18]; 
0x0016265b: add byte ptr [eax], al; add byte ptr [ecx - 0x16f7dbbc], cl; ret; 
0x0009fce5: add byte ptr [eax], al; add byte ptr [ecx - 0x16ffe2bc], cl; ret; 
0x00095a62: add byte ptr [eax], al; add byte ptr [ecx - 0x2dcef7b0], cl; mov eax, edx; ret; 
0x0009834c: add byte ptr [eax], al; add byte ptr [ecx - 0x3600f785], al; lcall 0, 0xc4870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x00059664: add byte ptr [eax], al; add byte ptr [ecx - 0x361f73], cl; dec dword ptr [ebx - 0x364763]; call dword ptr [eax + 0x6a]; 
0x00058d9a: add byte ptr [eax], al; add byte ptr [ecx - 0x361f73], cl; dec dword ptr [ebx - 0x364763]; call dword ptr [eax - 0x73]; 
0x000d77d5: add byte ptr [eax], al; add byte ptr [ecx - 0x362f4b], cl; dec dword ptr [edi]; mov ebp, 0x89d189f0; ret; 
0x000d821a: add byte ptr [eax], al; add byte ptr [ecx - 0x362f73], cl; dec dword ptr [ebx - 0x363f63]; call dword ptr [eax + 0x6a]; 
0x0017cafb: add byte ptr [eax], al; add byte ptr [ecx - 0x3776f3b0], cl; pop ebx; ret; 
0x0017cabb: add byte ptr [eax], al; add byte ptr [ecx - 0x3776f3b0], cl; ret; 
0x00157a12: add byte ptr [eax], al; add byte ptr [ecx - 0x3b7ceefc], cl; add al, 0x5b; pop esi; ret; 
0x0005ac03: add byte ptr [eax], al; add byte ptr [ecx - 0x3b7cf7a6], cl; add al, 0x5b; pop esi; ret; 
0x00099483: add byte ptr [eax], al; add byte ptr [ecx - 0x3fcee3be], cl; pop ebx; ret; 
0x000909f2: add byte ptr [eax], al; add byte ptr [ecx - 0x3fcef3b0], cl; pop ebx; ret; 
0x0003d8a2: add byte ptr [eax], al; add byte ptr [ecx - 0x47dfdbbc], cl; mov dl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001329d9: add byte ptr [eax], al; add byte ptr [ecx - 0x47e7dbbc], cl; jne 0x1329e3; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00133083: add byte ptr [eax], al; add byte ptr [ecx - 0x47e7dbbc], cl; jne 0x13308d; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000751cf: add byte ptr [eax], al; add byte ptr [ecx - 0x4f773], cl; call dword ptr [eax + 0x53]; 
0x000ccfdd: add byte ptr [eax], al; add byte ptr [ecx - 0x547bf033], cl; add dword ptr [eax], eax; add byte ptr [ecx + 0x39efd3d7], cl; ret; 
0x0006a75f: add byte ptr [eax], al; add byte ptr [ecx - 0x59373], cl; call dword ptr [ebx - 0x75]; 
0x0008e732: add byte ptr [eax], al; add byte ptr [ecx - 0x5c9adfb0], cl; jl 0x8e73c; add byte ptr [eax], al; ret; 
0x0008e769: add byte ptr [eax], al; add byte ptr [ecx - 0x5c9af3b0], cl; js 0x8e773; add byte ptr [eax], al; ret; 
0x0002f57c: add byte ptr [eax], al; add byte ptr [ecx - 0x7287dbbc], cl; add dword ptr [ecx + 0x2b], -7; call dword ptr [eax - 0x18]; 
0x0016b754: add byte ptr [eax], al; add byte ptr [ecx - 0x72a7dbbc], cl; xor ebx, 0x62; stc; call dword ptr [eax - 0x18]; 
0x0004f46c: add byte ptr [eax], al; add byte ptr [ecx - 0x72afdbbc], cl; test byte ptr [esp + ecx*4], ah; sbb eax, dword ptr [eax]; add byte ptr [ecx - 0x76c7dbbc], cl; ret 0x448b; 
0x00050160: add byte ptr [eax], al; add byte ptr [ecx - 0x72afdbbc], cl; test byte ptr [esp + ecx*4], ah; sbb eax, dword ptr [eax]; add byte ptr [ecx - 0x76c7dbbc], cl; ret 0x45e9; 
0x0002ceee: add byte ptr [eax], al; add byte ptr [ecx - 0x72c7dbbc], cl; inc edi; and byte ptr [ecx - 0x9c3dbbc], cl; ret 0x7501; 
0x00027bc4: add byte ptr [eax], al; add byte ptr [ecx - 0x72cbdbac], cl; xchg edi, eax; sub ecx, edi; call dword ptr [edx + 0x50]; 
0x0002ac7e: add byte ptr [eax], al; add byte ptr [ecx - 0x72cbdbbc], cl; inc ebp; and byte ptr [ecx - 0x9c7dbbc], cl; ret 0x7501; 
0x000490a3: add byte ptr [eax], al; add byte ptr [ecx - 0x72d3dbbc], cl; test byte ptr [eax + eax*4], ah; add al, byte ptr [eax]; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x20e9; 
0x00048383: add byte ptr [eax], al; add byte ptr [ecx - 0x72d3dbbc], cl; test byte ptr [eax + eax*4], ah; add al, byte ptr [eax]; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x8d2e; 
0x0004c5b4: add byte ptr [eax], al; add byte ptr [ecx - 0x72d3dbbc], cl; test byte ptr [esp + esi*8], ah; add byte ptr [eax], al; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x6de9; 
0x0004b8df: add byte ptr [eax], al; add byte ptr [ecx - 0x72d3dbbc], cl; test byte ptr [esp + esi*8], ah; add byte ptr [eax], al; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x8d2e; 
0x0002a14e: add byte ptr [eax], al; add byte ptr [ecx - 0x72d7dbbc], cl; inc edi; and byte ptr [ecx - 0x9d3dbbc], cl; ret 0x7501; 
0x0003f539: add byte ptr [eax], al; add byte ptr [ecx - 0x72d7dbbc], cl; or dword ptr [edi + ebp], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0005e18f: add byte ptr [eax], al; add byte ptr [ecx - 0x7483dbb4], cl; mov word ptr [esp + ebp*4], fs; add byte ptr [eax], al; add dh, dh; ret; 
0x0012dd88: add byte ptr [eax], al; add byte ptr [ecx - 0x7497dbbc], cl; and byte ptr [eax - 0x77000000], 0x44; and al, 0x6c; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x0008e728: add byte ptr [eax], al; add byte ptr [ecx - 0x749ae3b0], cl; adc eax, 0x78; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x0012fecf: add byte ptr [eax], al; add byte ptr [ecx - 0x74c3db8c], cl; je 0x12fefd; mov ebx, dword ptr fs:[esp + 0x60]; lea ecx, [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0009cf5d: add byte ptr [eax], al; add byte ptr [ecx - 0x7576efbf], cl; test al, 0x3b; add byte ptr [eax], al; ret; 
0x0008e645: add byte ptr [eax], al; add byte ptr [ecx - 0x7611142d], cl; ret 0xcceb; 
0x0015322c: add byte ptr [eax], al; add byte ptr [ecx - 0x761c761f], cl; ret 0x25; 
0x000e8ed5: add byte ptr [eax], al; add byte ptr [ecx - 0x7693dba4], cl; ret; 
0x00123569: add byte ptr [eax], al; add byte ptr [ecx - 0x76b3dba4], cl; ret; 
0x000a82ba: add byte ptr [eax], al; add byte ptr [ecx - 0x76c3dbbc], cl; ret 0x448b; 
0x0008a566: add byte ptr [eax], al; add byte ptr [ecx - 0x76c7dba4], cl; ret; 
0x000db362: add byte ptr [eax], al; add byte ptr [ecx - 0x76cbdba4], cl; ret; 
0x000723c6: add byte ptr [eax], al; add byte ptr [ecx - 0x76cfdbbc], cl; ret 0x44c7; 
0x000cf7ef: add byte ptr [eax], al; add byte ptr [ecx - 0x76cfdbbc], cl; ret 0x8d2e; 
0x000d0180: add byte ptr [eax], al; add byte ptr [ecx - 0x76cfdbbc], cl; ret 0xb0e9; 
0x000a245a: add byte ptr [eax], al; add byte ptr [ecx - 0x76d3dba4], cl; ret; 
0x0016f456: add byte ptr [eax], al; add byte ptr [ecx - 0x76d7dba4], cl; ret; 
0x0009db26: add byte ptr [eax], al; add byte ptr [ecx - 0x76d7dbb4], cl; retf 0x4c8b; and al, 0x1c; call dword ptr gs:[0x10]; 
0x000c85a7: add byte ptr [eax], al; add byte ptr [ecx - 0x76d7dbbc], cl; ret 0x448b; 
0x000cc911: add byte ptr [eax], al; add byte ptr [ecx - 0x76d7dbbc], cl; ret 0x7ce9; 
0x000cbf4d: add byte ptr [eax], al; add byte ptr [ecx - 0x76d7dbbc], cl; ret 0x8d2e; 
0x000c9714: add byte ptr [eax], al; add byte ptr [ecx - 0x76d7dbbc], cl; ret 0xcce9; 
0x0009b875: add byte ptr [eax], al; add byte ptr [ecx - 0x76dfdba4], cl; ret; 
0x0004c5bf: add byte ptr [eax], al; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x6de9; 
0x0004b8ea: add byte ptr [eax], al; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x8d2e; 
0x00175ad6: add byte ptr [eax], al; add byte ptr [ecx - 0x76e3dba4], cl; ret; 
0x000a13e5: add byte ptr [eax], al; add byte ptr [ecx - 0x76efdb94], cl; ret; 
0x000416de: add byte ptr [eax], al; add byte ptr [ecx - 0x76efdbb4], cl; ret; 
0x000943e8: add byte ptr [eax], al; add byte ptr [ecx - 0x76f3dbbc], cl; ret 0xc889; 
0x000cc556: add byte ptr [eax], al; add byte ptr [ecx - 0x76f7dbac], cl; ret 0xf129; 
0x00173c0f: add byte ptr [eax], al; add byte ptr [ecx - 0x76f7dbb4], cl; inc esp; and al, 4; jmp edx; 
0x00131ef5: add byte ptr [eax], al; add byte ptr [ecx - 0x76fbdb8c], cl; loope 0x131e88; ret 0x448b; 
0x00133bd1: add byte ptr [eax], al; add byte ptr [ecx - 0x78721bbb], cl; clc; push esp; stc; call dword ptr [eax - 0x18]; 
0x001698bd: add byte ptr [eax], al; add byte ptr [ecx - 0x7c2e7623], cl; ret; 
0x000298ad: add byte ptr [eax], al; add byte ptr [ecx - 0x7c3c76f5], cl; ret 0x3904; 
0x00144589: add byte ptr [eax], al; add byte ptr [ecx - 0x7c721bbb], cl; mov bh, 0x47; stc; call dword ptr [eax - 0x18]; 
0x000dfdbd: add byte ptr [eax], al; add byte ptr [ecx - 0x7cc7dbbc], cl; inc esp; and al, 0x24; add dword ptr [ebx - 0x7cdbdbbc], ecx; ret; 
0x001895f8: add byte ptr [eax], al; add byte ptr [ecx - 0x7cef79a4], cl; rol byte ptr [ecx], 0x83; ret 0x8308; 
0x00172f59: add byte ptr [eax], al; add byte ptr [ecx - 0x7cf3dbbc], cl; in al, dx; or byte ptr [ebp - 0x69c6a7d], cl; call dword ptr [eax - 1]; 
0x0016eee9: add byte ptr [eax], al; add byte ptr [ecx - 0x7cfbdbac], cl; in al, dx; or al, 0x50; call dword ptr [ecx + 0xc]; 
0x00089675: add byte ptr [eax], al; add byte ptr [ecx - 0x7e20d631], cl; call dword ptr [ebx + 0xf000005]; 
0x000cea4a: add byte ptr [eax], al; add byte ptr [ecx - 0x7ecbdbac], cl; ret 0; 
0x000c7faa: add byte ptr [eax], al; add byte ptr [ecx - 0x7ed3dbac], cl; ret 0; 
0x0004089e: add byte ptr [eax], al; add byte ptr [ecx - 0x7f], bl; ror dword ptr [edx], 0; add byte ptr [eax], al; mov dword ptr [edx], ecx; ret; 
0x00144f44: add byte ptr [eax], al; add byte ptr [ecx - 0x837b], cl; call dword ptr [eax + 0x6a]; 
0x0010db94: add byte ptr [eax], al; add byte ptr [ecx - 0x8b7b], cl; jmp dword ptr [ebp - 0x75]; 
0x00097059: add byte ptr [eax], al; add byte ptr [ecx - 0x9cefba9], cl; xor edx, edx; call dword ptr gs:[0x10]; 
0x00181044: add byte ptr [eax], al; add byte ptr [ecx - 0xb37b], cl; dec dword ptr [ecx - 0xbf6b]; dec dword ptr [ecx - 0xaf4b]; jmp dword ptr [ebp - 0x75]; 
0x000d47e5: add byte ptr [eax], al; add byte ptr [ecx - 0xf76f7b0], cl; pop ebx; pop esi; ret; 
0x0003ef4f: add byte ptr [eax], al; add byte ptr [ecx - 0xffc2ac], cl; jae 0x3ef5d; call eax; 
0x000c2be9: add byte ptr [eax], al; add byte ptr [ecx - 1], bh; cmovb eax, ecx; ret; 
0x000c2e26: add byte ptr [eax], al; add byte ptr [ecx], ah; ret 0x2474; 
0x00090875: add byte ptr [eax], al; add byte ptr [ecx], al; add esp, 4; pop esi; pop edi; ret; 
0x000c0ff1: add byte ptr [eax], al; add byte ptr [ecx], al; clc; add eax, ecx; pop edi; ret; 
0x00140cda: add byte ptr [eax], al; add byte ptr [ecx], al; fdivr dword ptr [ecx]; ror byte ptr [edi], 1; inc edx; ret 0xe883; 
0x000a19ba: add byte ptr [eax], al; add byte ptr [ecx], al; fidivr dword ptr [ecx]; ret 0xa72; 
0x00187cb1: add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x21eb; 
0x00101e46: add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x4489; 
0x0006348b: add byte ptr [eax], al; add byte ptr [ecx], al; ret; 
0x000ccd01: add byte ptr [eax], al; add byte ptr [ecx], al; ror byte ptr [ebx + 0x29642454], 1; ret; 
0x000c9b7f: add byte ptr [eax], al; add byte ptr [ecx], al; ror byte ptr [ebx + 0x296c2454], 1; ret; 
0x001b4388: add byte ptr [eax], al; add byte ptr [ecx], al; sal dh, cl; ret 0x7406; 
0x0015df7f: add byte ptr [eax], al; add byte ptr [ecx], bh; inc edx; add al, 0xf; test byte ptr [ebp - 0x7d000000], cl; ret 0x8014; 
0x0011bd59: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x1772; 
0x00027b38: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x420f; 
0x0004d365: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x430f; 
0x000dc6a3: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x470f; 
0x00123d8b: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x4e0f; 
0x000996d4: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x6574; 
0x00098f78: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x6974; 
0x000985eb: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x7e74; 
0x0014594b: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x820f; 
0x00098362: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x840f; 
0x00097a97: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x850f; 
0x0015331b: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0xa875; 
0x000a9716: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0xc072; 
0x000a97d3: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0xc372; 
0x0003e5cc: add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x00134b18: add byte ptr [eax], al; add byte ptr [ecx], bh; retf 0x472; cmp ecx, edx; sbb eax, eax; ret; 
0x001563ad: add byte ptr [eax], al; add byte ptr [ecx], bh; retf 0xec75; add esp, 8; pop ebx; ret; 
0x0010e1a8: add byte ptr [eax], al; add byte ptr [ecx], bh; ror byte ptr [edi], 1; dec esp; ret 0xdae9; 
0x0004a0c2: add byte ptr [eax], al; add byte ptr [ecx], bh; ror byte ptr [edi], 1; inc ebx; shr byte ptr [ecx], 1; ret 0x8d52; 
0x0014130a: add byte ptr [eax], al; add byte ptr [ecx], bh; ror byte ptr [edi], 1; inc edx; ret 0x578d; 
0x0015c3cc: add byte ptr [eax], al; add byte ptr [ecx], bh; ror byte ptr [edi], 1; inc edx; ret 0xe883; 
0x000dac9f: add byte ptr [eax], al; add byte ptr [ecx], bl; fimul dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000fd080: add byte ptr [eax], al; add byte ptr [ecx], ch; aad 0x89; fnstcw word ptr [ecx]; ret; 
0x00100d91: add byte ptr [eax], al; add byte ptr [ecx], ch; fadd dword ptr [ecx]; ret 0x86eb; 
0x0005979f: add byte ptr [eax], al; add byte ptr [ecx], ch; fmul dword ptr [ecx - 0x362f7b]; inc dword ptr [ebx - 0x70f0e008]; ret 1; 
0x000d3d13: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x328b; 
0x000570b9: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x3b8; 
0x000e2f9e: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x448b; 
0x000e65f3: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x468b; 
0x000e3ed5: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x478b; 
0x000a31eb: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x48d; 
0x0004d1fc: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5152; 
0x000e497b: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x748d; 
0x000d2b24: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xa8b; 
0x000e1988: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xbe0f; 
0x00049fee: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xcb29; 
0x0002f367: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xd089; 
0x000dc231: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xd129; 
0x000ad437: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xd301; 
0x000ae415: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xd601; 
0x000aa717: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xd701; 
0x000252a3: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xe3d3; 
0x000e6f19: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xf089; 
0x000df5f4: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xf889; 
0x00030406: add byte ptr [eax], al; add byte ptr [ecx], ch; ret; 
0x000e32bb: add byte ptr [eax], al; add byte ptr [ecx], ch; retf 0x490f; ret 0xc101; 
0x001b03f5: add byte ptr [eax], al; add byte ptr [ecx], cl; ret 0xbc89; 
0x0002ed57: add byte ptr [eax], al; add byte ptr [ecx], cl; ret; 
0x0009987b: add byte ptr [eax], al; add byte ptr [ecx], dh; fild dword ptr [eax + 0xf00197f]; xchg ebp, eax; ret; 
0x0008f817: add byte ptr [eax], al; add byte ptr [ecx], dh; idiv byte ptr [ecx + 0x81]; mov edx, 1; call dword ptr gs:[0x10]; 
0x000982a3: add byte ptr [eax], al; add byte ptr [ecx], dh; idiv byte ptr [edx + 0x7fffffff]; mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x00090ada: add byte ptr [eax], al; add byte ptr [ecx], dh; idiv byte ptr [edx + 0x7fffffff]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008fa55: add byte ptr [eax], al; add byte ptr [ecx], dh; idiv byte ptr [edx + 1]; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x0018c4d1: add byte ptr [eax], al; add byte ptr [ecx], dh; idiv byte ptr [edx + 1]; call dword ptr gs:[0x10]; 
0x00091311: add byte ptr [eax], al; add byte ptr [ecx], dh; idiv byte ptr [edx + 1]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00095376: add byte ptr [eax], al; add byte ptr [ecx], dh; leave; xor esi, esi; call dword ptr gs:[0x10]; 
0x000a5b41: add byte ptr [eax], al; add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00094b64: add byte ptr [eax], al; add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], cl; mov eax, edx; ret; 
0x000a5c18: add byte ptr [eax], al; add byte ptr [ecx], dh; rcr byte ptr [edx + 0x5b], 0x5e; ret; 
0x0013a725: add byte ptr [eax], al; add byte ptr [ecx], dh; rol byte ptr [ebp - 0x74698a0a], cl; xor dword ptr [ecx + eax], 0; add byte ptr [ebx - 0x17701500], cl; ret; 
0x0004a87d: add byte ptr [eax], al; add byte ptr [ecx], dh; rol byte ptr [ecx - 0x7fffff19], cl; add byte ptr [edi], cl; xchg ebp, eax; ret 0xea83; 
0x0010d204: add byte ptr [eax], al; add byte ptr [ecx], dh; ror byte ptr [ebx - 0x41fbdbb4], cl; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00094bc7: add byte ptr [eax], al; add byte ptr [ecx], dh; sal al, cl; cmpxchg dword ptr [esp + 4], edx; ret; 
0x00090473: add byte ptr [eax], al; add byte ptr [ecx], dh; sal bl, 0xa5; pop esi; pop edi; ret; 
0x0010d608: add byte ptr [eax], al; add byte ptr [ecx], dh; sar byte ptr [esi + 8], cl; mov ecx, dword ptr [ebp - 0x144]; call dword ptr gs:[0x10]; 
0x001337a1: add byte ptr [eax], al; add byte ptr [ecx], dh; test byte ptr [eax + 0x18bb01ce], 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00097a09: add byte ptr [eax], al; add byte ptr [ecx], dh; test byte ptr [ecx + 0x80e1], 0; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008cdd7: add byte ptr [eax], al; add byte ptr [edi + 0x1a7482], al; add byte ptr [ebx + 0xb7f01f8], al; ret; 
0x0003f326: add byte ptr [eax], al; add byte ptr [edi + 0x1fa8317], al; jg 0x3f3f0; call eax; 
0x000250f1: add byte ptr [eax], al; add byte ptr [edi + 0x5d], bl; jmp eax; 
0x00157334: add byte ptr [eax], al; add byte ptr [edi + 0x5d], bl; ret; 
0x000b945d: add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000d96b4: add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x0011fe45: add byte ptr [eax], al; add byte ptr [edi + 0xf], bl; inc edi; ret 0x66c3; 
0x000d97d2: add byte ptr [eax], al; add byte ptr [edi + 2], bh; neg eax; ret; 
0x001a32a2: add byte ptr [eax], al; add byte ptr [edi + 2], dh; neg eax; add esp, 4; pop ebx; ret; 
0x001a0bf2: add byte ptr [eax], al; add byte ptr [edi + 2], dh; neg eax; pop ebp; ret; 
0x001a7302: add byte ptr [eax], al; add byte ptr [edi + 2], dh; neg eax; pop edi; pop ebx; ret; 
0x0019f3b2: add byte ptr [eax], al; add byte ptr [edi + 2], dh; neg eax; ret; 
0x001a7e88: add byte ptr [eax], al; add byte ptr [edi + 3], bh; neg eax; ret; 
0x001a81b3: add byte ptr [eax], al; add byte ptr [edi + 8], bh; neg eax; ret; 
0x000d97a2: add byte ptr [eax], al; add byte ptr [edi + 9], bh; neg eax; pop edi; pop esi; ret; 
0x001926d5: add byte ptr [eax], al; add byte ptr [edi - 0x18], dl; ret 0xf561; 
0x000a6994: add byte ptr [eax], al; add byte ptr [edi - 0x7d], dh; in al, dx; or byte ptr [ebp - 0x6bb997a], cl; call dword ptr [ebx + 0x50]; 
0x00064d83: add byte ptr [eax], al; add byte ptr [edi], cl; dec ecx; ret 0x4489; 
0x000e4a25: add byte ptr [eax], al; add byte ptr [edi], cl; dec ecx; ret 0xc8d; 
0x000570ea: add byte ptr [eax], al; add byte ptr [edi], cl; dec edi; ret 0xdb31; 
0x0014740e: add byte ptr [eax], al; add byte ptr [edi], cl; dec edi; ret; 
0x0009d7cf: add byte ptr [eax], al; add byte ptr [edi], cl; dec esi; ret 0x8389; 
0x0003e5d8: add byte ptr [eax], al; add byte ptr [edi], cl; dec esi; ret; 
0x00104bb9: add byte ptr [eax], al; add byte ptr [edi], cl; dec esp; ret; 
0x0012887c: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; fadd dword ptr [ebx - 0x2776e73c]; pop ebx; ret; 
0x0009d6d0: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0x2ec3; 
0x000907f6: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0x8dc3; 
0x000dc4d1: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebx; ret 0xe883; 
0x00099b7c: add byte ptr [eax], al; add byte ptr [edi], cl; inc edi; ret 0x2ec3; 
0x00094f35: add byte ptr [eax], al; add byte ptr [edi], cl; inc edi; ret 0x4489; 
0x000a0af3: add byte ptr [eax], al; add byte ptr [edi], cl; inc edi; ret 0x8188; 
0x0009a450: add byte ptr [eax], al; add byte ptr [edi], cl; inc edi; ret 0x948b; 
0x00141d6d: add byte ptr [eax], al; add byte ptr [edi], cl; inc edx; ret 0x2ec3; 
0x000da4e0: add byte ptr [eax], al; add byte ptr [edi], cl; inc edx; ret 0xc501; 
0x00043276: add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0x66c3; 
0x000a86c6: add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0x8dc3; 
0x000313ff: add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0xf289; 
0x00181fb9: add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret; 
0x00042948: add byte ptr [eax], al; add byte ptr [edi], cl; mov bh, 0xc9; bsr ecx, ecx; shl eax, cl; ret; 
0x0010abe2: add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0x45; sbb al, 0x89; ret 0xeac0; 
0x001417d5: add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0x5a; add dword ptr [ebp - 0x76fde7bc], ecx; ret; 
0x001423ed: add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0xc2; ret; 
0x00042867: add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0xc9; bsr ecx, ecx; shl eax, cl; ret; 
0x000c11a4: add byte ptr [eax], al; add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x000c157d: add byte ptr [eax], al; add byte ptr [edi], cl; mov esp, 0x5ff801c0; ret; 
0x000bd58d: add byte ptr [eax], al; add byte ptr [edi], cl; mov esp, 0x83ce01d2; ret 0x2910; 
0x000428fa: add byte ptr [eax], al; add byte ptr [edi], cl; movsd dword ptr es:[edi], dword ptr [esi]; ret 0xe0d3; 
0x000c4ee9: add byte ptr [eax], al; add byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; ret 0x948b; 
0x0018775a: add byte ptr [eax], al; add byte ptr [edi], cl; test byte ptr [ebp - 0x77000000], cl; ret 0xe283; 
0x0010d2ca: add byte ptr [eax], al; add byte ptr [edi], cl; test byte ptr [ebp - 0x7d000000], ah; jmp dword ptr [esi]; 
0x00187711: add byte ptr [eax], al; add byte ptr [edi], cl; test byte ptr [esi - 0x77000000], dh; ret 0xe283; 
0x001a6d2d: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [eax + 2], edx; add byte ptr [eax], al; pop ebx; ret; 
0x001a662d: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [eax + 9], edx; add byte ptr [eax], al; pop ebx; ret; 
0x001a80ea: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000000], edi; ret; 
0x001a6dd8: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000001], esp; ret; 
0x001a6bf8: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000003], eax; ret; 
0x001a66c8: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000008], esi; ret; 
0x001a6a22: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebp + 5], eax; add byte ptr [eax], al; pop ebx; ret; 
0x00110d85: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebp - 0x74fffff1], esp; jl 0x110db5; or byte ptr [ebp - 0x65dfb79], cl; call dword ptr [eax + 0x68]; 
0x0015fd53: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebp - 0x74fffffe], esp; je 0x15fd83; adc byte ptr [ebp - 0x64ab37a], cl; call dword ptr [eax - 0x73]; 
0x001a67f4: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebx + 7], esi; add byte ptr [eax], al; pop ebx; ret; 
0x001a68fc: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ecx + 0x5b000006], eax; ret; 
0x001a805e: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ecx + 1], ecx; add byte ptr [eax], al; pop ebx; ret; 
0x0016f6a1: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ecx - 0x7d000000], ebx; les esi, ptr [ebx + ebx*2]; pop esi; ret; 
0x001a6871: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [edi + eax], ecx; add byte ptr [eax], al; pop ebx; ret; 
0x0011f1c8: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [edx - 0x7d000000], ebp; les esp, ptr [ebx + ebx*2]; pop esi; ret; 
0x0010e4a4: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [esi - 0x7d000000], esp; les ebp, ptr [eax + 0x5b]; ret; 
0x0004169f: add byte ptr [eax], al; add byte ptr [edi], cl; test eax, ebx; add byte ptr [eax], al; add dh, dh; ret 0xf03; 
0x0010df21: add byte ptr [eax], al; add byte ptr [edi], cl; test ebp, esi; add eax, dword ptr [eax]; add byte ptr [ebp - 0x65e477d], cl; call dword ptr [eax - 0x73]; 
0x0010e7b8: add byte ptr [eax], al; add byte ptr [edi], cl; test edx, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b64c4], al; ret; 
0x001a6fdd: add byte ptr [eax], al; add byte ptr [edi], cl; test edx, ebx; lodsd eax, dword ptr [esi]; int1; call dword ptr [ebx - 0x18]; 
0x0008ba00: add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ret 0x40c7; 
0x00067b2d: add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ret; 
0x00055af8: add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ror byte ptr [edi], 0x95; ret; 
0x00045213: add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0x44c7; 
0x00045fd9: add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0x7c83; 
0x0007b486: add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0xd008; 
0x0007b470: add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0xd009; 
0x001a7ccf: add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret; 
0x000fb1a8: add byte ptr [eax], al; add byte ptr [edx + 0x40], bh; cmove eax, edx; ret; 
0x0016ee77: add byte ptr [eax], al; add byte ptr [edx + 0x59], bl; push 0; push esi; call dword ptr [eax + 0x14]; 
0x000910a3: add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; call dword ptr gs:[0x10]; 
0x0009846f: add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; setne cl; shl ecx, 7; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00099677: add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009683a: add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00098861: add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009192e: add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008f81e: add byte ptr [eax], al; add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x00186de8: add byte ptr [eax], al; add byte ptr [edx + 1], bh; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00092f09: add byte ptr [eax], al; add byte ptr [edx + 1], bh; mov ebx, edi; call dword ptr gs:[0x10]; 
0x00152ba5: add byte ptr [eax], al; add byte ptr [edx + 1], bh; pop ebx; pop esi; mov eax, edx; ret; 
0x0008f2dc: add byte ptr [eax], al; add byte ptr [edx + 1], bh; push ebx; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00091c09: add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00097a04: add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00091345: add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x0009180a: add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x00091673: add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00098837: add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008f220: add byte ptr [eax], al; add byte ptr [edx + 2], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008f28f: add byte ptr [eax], al; add byte ptr [edx + 2], bh; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0013401f: add byte ptr [eax], al; add byte ptr [edx + 8], bh; call dword ptr gs:[0x10]; 
0x0008df9d: add byte ptr [eax], al; add byte ptr [edx - 0x77], dl; ret; 
0x000c2630: add byte ptr [eax], al; add byte ptr [edx - 9], al; ret 3; 
0x0017a9be: add byte ptr [eax], al; add byte ptr [edx], ch; push edi; call dword ptr [eax + 0x14]; 
0x00089b9d: add byte ptr [eax], al; add byte ptr [edx], ch; push edi; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x00170e8e: add byte ptr [eax], al; add byte ptr [edx], ch; push esi; call dword ptr [eax + 0x14]; 
0x00053c5a: add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x000b371d: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x000b372d: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x000b370d: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000b373d: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x001a7b8d: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; cmp ah, byte ptr [ebx - 0x35]; add cl, byte ptr [edi]; xchg esp, eax; ret; 
0x001932ed: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; outsb dx, byte ptr [esi]; shl byte ptr [esi + 0xf], 0x70; rol byte ptr [eax], 0xf7; ret 0xf; 
0x000c148f: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x000c1768: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000c178d: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ror dword ptr [edi], 0xbd; rol byte ptr [ecx], 0xc8; ret; 
0x00092d17: add byte ptr [eax], al; add byte ptr [esi + 8], bh; add ecx, 0x474; call dword ptr gs:[0x10]; 
0x00093f2f: add byte ptr [eax], al; add byte ptr [esi + 8], bh; call dword ptr gs:[0x10]; 
0x0003c7ee: add byte ptr [eax], al; add byte ptr [esi + 8], bh; lea edx, [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x00023273: add byte ptr [eax], al; add byte ptr [esi + 8], bh; mov dword ptr [ebp + 0x137c], 1; call dword ptr gs:[0x10]; 
0x0003d60f: add byte ptr [eax], al; add byte ptr [esi + 8], bh; mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x0003c891: add byte ptr [eax], al; add byte ptr [esi + 8], bh; mov edx, ebp; call dword ptr gs:[0x10]; 
0x000c1cdb: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x000c183b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; bsr eax, eax; lea eax, [eax + ecx + 0x10]; ret; 
0x001897ab: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x0016eaeb: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; endbr32; ret; 
0x000b17cb: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x0009af3b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov dword ptr [eax + 4], edx; ret; 
0x0007188b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x28], 1; jmp eax; 
0x00090c4b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, 0x16; ret; 
0x00086a3b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000d99fb: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, 2; ret; 
0x0009418b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, 3; add esp, 0xc; ret; 
0x000d9a0b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, 3; ret; 
0x000d9a1b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, 4; ret; 
0x000d9a2b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, 5; ret; 
0x000d9a3b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, 6; ret; 
0x000d9a4b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, 7; ret; 
0x0017c6fb: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x20]; 
0x0017140b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0009090b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x14], edx; xor eax, eax; ret; 
0x000e763b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov edx, dword ptr [esp + 0xc]; mov dword ptr [edx], ebx; pop ebx; ret; 
0x000b5d0b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b36fb: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; movlpd qword ptr [ecx], xmm0; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x001a7e6b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; pop ebx; xor eax, eax; ret; 
0x000e9abb: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; sub esp, 0xc; mov eax, dword ptr [ebp - 0x2c]; push esi; call eax; 
0x00042abb: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; xor eax, eax; pop ebx; ret; 
0x000a237b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; xor eax, eax; ret; 
0x000760f8: add byte ptr [eax], al; add byte ptr [esi - 0x77], ah; xor cl, ch; ret; 
0x0009cf6d: add byte ptr [eax], al; add byte ptr [esi - 0x77], dl; rcl dword ptr [ebx - 0x75], 0x40; add al, 0xe8; mov eax, dword ptr [0x81000ecc]; ret; 
0x001405a5: add byte ptr [eax], al; add byte ptr [esi - 0x7d], ah; sti; adc al, 0xf; xchg esp, eax; ret; 
0x001a9b58: add byte ptr [eax], al; add byte ptr [esi], ch; lea esi, [esi]; add eax, 1; ret; 
0x001ac488: add byte ptr [eax], al; add byte ptr [esi], ch; lea esi, [esi]; lea eax, [ecx + 8]; ret; 
0x001ab518: add byte ptr [eax], al; add byte ptr [esi], ch; lea esi, [esi]; lea eax, [edx + 1]; ret; 
0x000d99e8: add byte ptr [eax], al; add byte ptr [esi], ch; lea esi, [esi]; mov eax, 1; ret; 
0x00092ed8: add byte ptr [eax], al; add byte ptr [esi], ch; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x000b3668: add byte ptr [eax], al; add byte ptr [esi], ch; lea esi, [esi]; pop ebx; ret; 
0x000c1308: add byte ptr [eax], al; add byte ptr [esi], ch; lea esi, [esi]; xor eax, eax; ret; 
0x00099daf: add byte ptr [eax], al; add byte ptr [esp + eax*2 - 0x75], dh; je 0x99ddb; adc al, 0x89; ret 0xe283; 
0x00099eaf: add byte ptr [eax], al; add byte ptr [esp + ecx*2 - 0x75], dh; je 0x99edb; adc al, 0x89; ret 0xe283; 
0x0004742d: add byte ptr [eax], al; add ch, bl; test dword ptr [edx + eax*8 - 7], esi; jmp dword ptr [ebp - 0x75]; 
0x0008e969: add byte ptr [eax], al; add cl, al; call 0x1e96c7d; mov dword ptr [edx + 0x1ac8], eax; ret; 
0x000a4057: add byte ptr [eax], al; add cl, al; call 0xfda7972; inc edi; ret 0xc083; 
0x000a4171: add byte ptr [eax], al; add cl, al; call 0xfda7a8c; inc edi; ret 0xc083; 
0x000a6297: add byte ptr [eax], al; add cl, al; call 0xfda9bb2; inc edi; ret 0x508d; 
0x0007c22a: add byte ptr [eax], al; add cl, al; ret 0x6509; 
0x00024afc: add byte ptr [eax], al; add cl, al; ret 0x8909; 
0x0012d3b0: add byte ptr [eax], al; add cl, al; ret 0xf009; 
0x0004a92e: add byte ptr [eax], al; add cl, bl; test dword ptr [edx + eax*8], edx; stc; jmp dword ptr [ebp - 0x75]; 
0x000a310a: add byte ptr [eax], al; add cl, byte ptr [edi]; inc esp; ret 0x938b; 
0x000e7376: add byte ptr [eax], al; add cl, ch; and edi, 0xffffffff; call dword ptr [ebx + 0x57]; 
0x0010d2b6: add byte ptr [eax], al; add cl, ch; cmp ch, 0xff; jmp dword ptr [esi - 0x70]; 
0x000d0116: add byte ptr [eax], al; add cl, ch; cmp cl, 0xff; call dword ptr [eax + 0x6a]; 
0x0004d4fe: add byte ptr [eax], al; add cl, ch; lcall 0x247c, 0x8bffffe6; sbb byte ptr [ebp - 0x687a779], cl; call dword ptr [eax - 0x73]; 
0x00050122: add byte ptr [eax], al; add cl, ch; push es; idiv bh; call dword ptr [eax + 0x6a]; 
0x00049f11: add byte ptr [eax], al; add cl, ch; ret 0xffdf; 
0x0018dd26: add byte ptr [eax], al; add cl, ch; ret 0xfff1; 
0x00039a33: add byte ptr [eax], al; add cl, ch; ret 0xfff8; 
0x0010672e: add byte ptr [eax], al; add cl, ch; ret 0xfffa; 
0x0009be38: add byte ptr [eax], al; add cl, ch; ret 0xfffd; 
0x0004c398: add byte ptr [eax], al; add cl, ch; ret; 
0x000958a8: add byte ptr [eax], al; add cl, ch; sbb eax, 0x8dffffff; xchg al, cl; xchg cl, bh; call dword ptr [eax - 0x73]; 
0x00043799: add byte ptr [eax], al; add cl, dl; call 0x21061825; ret 0xb60f; 
0x000fdfd0: add byte ptr [eax], al; add dh, dh; add al, 0x42; add dword ptr [esi + ecx - 0x77], esi; ret; 
0x001aae86: add byte ptr [eax], al; add dh, dh; les eax, ptr [edx]; jne 0x1aaf20; lea eax, [ecx + 8]; ret; 
0x001aaeaf: add byte ptr [eax], al; add dh, dh; les esp, ptr [eax]; jne 0x1aaf50; lea eax, [ecx + 0xc]; ret; 
0x001b2d0d: add byte ptr [eax], al; add dh, dh; ret 0x7407; 
0x0007be2d: add byte ptr [eax], al; add dh, dh; ret 0x7420; 
0x001a92eb: add byte ptr [eax], al; add dh, dh; ret 0x7501; 
0x00031ff3: add byte ptr [eax], al; add dh, dh; ret 0x7503; 
0x000bb92d: add byte ptr [eax], al; add dh, dh; ret 0x7510; 
0x00100e52: add byte ptr [eax], al; add dh, dh; ret 0x7540; 
0x0005e622: add byte ptr [eax], al; add dh, dh; ret 0xf01; 
0x0009b0b1: add byte ptr [eax], al; add dh, dh; ret 0xf02; 
0x000416a5: add byte ptr [eax], al; add dh, dh; ret 0xf03; 
0x001ab9cc: add byte ptr [eax], al; add dh, dh; ret 0xf04; 
0x00150964: add byte ptr [eax], al; add dh, dh; ret 0xf08; 
0x001ac35f: add byte ptr [eax], al; add dh, dh; ret 0xf0f; 
0x001ab8cd: add byte ptr [eax], al; add dh, dh; ret 0xf10; 
0x001ab9f6: add byte ptr [eax], al; add dh, dh; ret 0xf20; 
0x00100fae: add byte ptr [eax], al; add dh, dh; ret 0xf40; 
0x0005e19a: add byte ptr [eax], al; add dh, dh; ret; 
0x0002327f: add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0008fa1e: add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0008f923: add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov edx, 1; call dword ptr gs:[0x10]; 
0x000a0b1f: add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x000a948b: add byte ptr [eax], al; add dword ptr [ebp - 0xab5736e], ecx; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0013d6bb: add byte ptr [eax], al; add dword ptr [ebp - 0xab5836e], ecx; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0008cd36: add byte ptr [eax], al; add dword ptr [ebx + 0x1a78], 1; add esp, 4; pop ebx; pop esi; ret; 
0x0008cd3c: add byte ptr [eax], al; add dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x00090876: add byte ptr [eax], al; add dword ptr [ebx + 0x5f5e04c4], eax; ret; 
0x00155a64: add byte ptr [eax], al; add dword ptr [ebx - 0x72efdb84], ecx; xchg dword ptr [edi + 0x29], esp; stc; call dword ptr [eax + 0x53]; 
0x000c30a1: add byte ptr [eax], al; add dword ptr [edi + eax - 0x7d], esi; mov byte ptr [eax + 0x100003c], dl; xor eax, eax; pop ebx; ret; 
0x00177298: add byte ptr [eax], al; add eax, 0x38; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x001768c8: add byte ptr [eax], al; add eax, 0x4c; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x00173c0b: add byte ptr [eax], al; add eax, 0xac; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x001ab910: add byte ptr [eax], al; add eax, 0xb; pop edi; ret; 
0x001ab939: add byte ptr [eax], al; add eax, 0xf; pop edi; ret; 
0x001abc7e: add byte ptr [eax], al; add eax, 1; pop edi; ret; 
0x001ab8c3: add byte ptr [eax], al; add eax, 3; pop edi; ret; 
0x001ab8e9: add byte ptr [eax], al; add eax, 7; pop edi; ret; 
0x00174818: add byte ptr [eax], al; add eax, 8; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x001342dd: add byte ptr [eax], al; add eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x00025562: add byte ptr [eax], al; add eax, dword ptr gs:[0]; ret; 
0x000c0ff2: add byte ptr [eax], al; add eax, edi; add eax, ecx; pop edi; ret; 
0x0008fa5d: add byte ptr [eax], al; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x00092d1d: add byte ptr [eax], al; add ecx, 0x474; call dword ptr gs:[0x10]; 
0x00179061: add byte ptr [eax], al; add ecx, 4; push ecx; push edi; call dword ptr [eax + 8]; 
0x001aafac: add byte ptr [eax], al; add edx, 0; jl 0x1ab1d0; mov eax, ecx; ret; 
0x001ab17e: add byte ptr [eax], al; add edx, 0xa; jl 0x1ab1d0; lea eax, [ecx + 0xa]; ret; 
0x001ab18e: add byte ptr [eax], al; add edx, 0xb; jl 0x1ab1d0; lea eax, [ecx + 0xb]; ret; 
0x001ab0f9: add byte ptr [eax], al; add edx, 0xc; jl 0x1ab1d0; lea eax, [ecx + 0xc]; ret; 
0x001ab19e: add byte ptr [eax], al; add edx, 0xd; jl 0x1ab1d0; lea eax, [ecx + 0xd]; ret; 
0x001ab1ae: add byte ptr [eax], al; add edx, 0xe; jl 0x1ab1d0; lea eax, [ecx + 0xe]; ret; 
0x001ab1be: add byte ptr [eax], al; add edx, 0xf; jl 0x1ab1d0; lea eax, [ecx + 0xf]; ret; 
0x001ab10e: add byte ptr [eax], al; add edx, 1; jl 0x1ab1d0; lea eax, [ecx + 1]; ret; 
0x00148ab7: add byte ptr [eax], al; add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x001ab096: add byte ptr [eax], al; add edx, 4; jl 0x1ab1d0; lea eax, [ecx + 4]; ret; 
0x001ab15e: add byte ptr [eax], al; add edx, 7; jl 0x1ab1d0; lea eax, [ecx + 7]; ret; 
0x001ab0cf: add byte ptr [eax], al; add edx, 8; jl 0x1ab1d0; lea eax, [ecx + 8]; ret; 
0x001ab16e: add byte ptr [eax], al; add edx, 9; jl 0x1ab1d0; lea eax, [ecx + 9]; ret; 
0x0004084b: add byte ptr [eax], al; add esp, 0x10; add esp, 0xc; ret; 
0x00026134: add byte ptr [eax], al; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x00098130: add byte ptr [eax], al; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000e7474: add byte ptr [eax], al; add esp, 0x10; mov eax, 1; add esp, 0xc; ret; 
0x0012452e: add byte ptr [eax], al; add esp, 0x10; mov eax, dword ptr [eax]; test eax, eax; je 0x124580; call eax; 
0x00124672: add byte ptr [eax], al; add esp, 0x10; mov eax, dword ptr [eax]; test eax, eax; je 0x124718; call eax; 
0x00025852: add byte ptr [eax], al; add esp, 0x10; neg eax; sbb eax, eax; add esp, 0xc; ret; 
0x00079b58: add byte ptr [eax], al; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0014764e: add byte ptr [eax], al; add esp, 0x10; pop esi; pop edi; pop ebp; ret; 
0x000c496f: add byte ptr [eax], al; add esp, 0x14; lea eax, [eax + ebx*4]; pop ebx; pop esi; ret; 
0x0017baee: add byte ptr [eax], al; add esp, 0x14; mov eax, edx; pop ebx; pop esi; ret; 
0x0013457e: add byte ptr [eax], al; add esp, 0x14; pop ebx; pop edi; ret; 
0x000799fb: add byte ptr [eax], al; add esp, 0x14; pop ebx; pop esi; ret; 
0x000421c0: add byte ptr [eax], al; add esp, 0x18; lea eax, [ebx + 6]; pop ebx; ret; 
0x0012342d: add byte ptr [eax], al; add esp, 0x18; mov eax, ebx; pop ebx; ret; 
0x000300ad: add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x000333c8: add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00090f4a: add byte ptr [eax], al; add esp, 0x20; add esp, 0xc; ret; 
0x001627cb: add byte ptr [eax], al; add esp, 0x20; add esp, 8; pop ebx; ret; 
0x00083bbf: add byte ptr [eax], al; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0011f1cf: add byte ptr [eax], al; add esp, 0x24; pop ebx; pop esi; ret; 
0x00123cd2: add byte ptr [eax], al; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x00034e9c: add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0016f57c: add byte ptr [eax], al; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0016f6a8: add byte ptr [eax], al; add esp, 0x34; pop ebx; pop esi; ret; 
0x000c3255: add byte ptr [eax], al; add esp, 0x40; pop ebx; pop esi; pop edi; ret; 
0x0010e7bf: add byte ptr [eax], al; add esp, 0x64; pop ebx; pop esi; ret; 
0x0010e4ab: add byte ptr [eax], al; add esp, 0x68; pop ebx; ret; 
0x00090d47: add byte ptr [eax], al; add esp, 0x94; pop ebx; pop esi; ret; 
0x001782ca: add byte ptr [eax], al; add esp, 0xa0; pop ebx; pop esi; pop edi; ret; 
0x001397ae: add byte ptr [eax], al; add esp, 0xc; push eax; push dword ptr [ebp - 0x4c]; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x00139cab: add byte ptr [eax], al; add esp, 0xc; push eax; push dword ptr [ebp - 0x5c]; push ebx; call dword ptr [esi + 0x14]; 
0x0013843f: add byte ptr [eax], al; add esp, 0xc; push eax; push edi; push 0x2000003; call dword ptr [ebx + 0x14]; 
0x00138213: add byte ptr [eax], al; add esp, 0xc; push eax; push esi; push 0x2000006; call dword ptr [ebx + 0x14]; 
0x0005b73a: add byte ptr [eax], al; add esp, 0xc; ret; 
0x00054e79: add byte ptr [eax], al; add esp, 4; jmp eax; 
0x0009b642: add byte ptr [eax], al; add esp, 4; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0005b84e: add byte ptr [eax], al; add esp, 4; mov eax, 1; pop ebx; pop esi; ret; 
0x00094a3a: add byte ptr [eax], al; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x001558ea: add byte ptr [eax], al; add esp, 4; mov eax, edx; pop ebx; pop edi; ret; 
0x000ac504: add byte ptr [eax], al; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x0002608e: add byte ptr [eax], al; add esp, 4; pop ebx; pop esi; ret; 
0x00156256: add byte ptr [eax], al; add esp, 4; pop esi; pop edi; ret; 
0x00040a1d: add byte ptr [eax], al; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x000971ee: add byte ptr [eax], al; add esp, 8; mov eax, 0x16; pop ebx; ret; 
0x0005bcfe: add byte ptr [eax], al; add esp, 8; mov eax, 0xffffffff; pop ebx; ret; 
0x001265cc: add byte ptr [eax], al; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0003c043: add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x00061f66: add byte ptr [eax], al; add esp, 8; xor eax, eax; pop ebx; ret; 
0x00134787: add byte ptr [eax], al; add word ptr [eax + ebx*2], 1; pop ebx; ret; 
0x0009a5ef: add byte ptr [eax], al; and eax, 0x39; cmp eax, 8; je 0x9a5fa; ret; 
0x001aa438: add byte ptr [eax], al; and eax, 0xf; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x001aa469: add byte ptr [eax], al; and eax, 0xff; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x001aa4a0: add byte ptr [eax], al; and eax, 0xfff; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x001aa4d9: add byte ptr [eax], al; and eax, 0xffff; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x0012879c: add byte ptr [eax], al; and eax, 0xfffff000; or eax, edx; ret; 
0x001420de: add byte ptr [eax], al; and eax, 0xffffff; ret; 
0x001aa4ee: add byte ptr [eax], al; and eax, 1; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x0003482d: add byte ptr [eax], al; and eax, dword ptr [esp + 8]; ret; 
0x000c157e: add byte ptr [eax], al; bsf eax, eax; add eax, edi; pop edi; ret; 
0x000c1cce: add byte ptr [eax], al; bsf eax, eax; add eax, edx; ret; 
0x000c159e: add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edi + 0x20]; pop edi; ret; 
0x000c156e: add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edi - 0x10]; pop edi; ret; 
0x000c1cee: add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edx + 0x20]; ret; 
0x000c08ae: add byte ptr [eax], al; bsf edx, edx; call 0x189c31; add ecx, 0x10c73c; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bd5ae: add byte ptr [eax], al; bsf edx, edx; call 0x189c31; add ecx, 0x10f9bc; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c1123: add byte ptr [eax], al; bsr eax, eax; add eax, edi; pop edi; ret; 
0x000c184e: add byte ptr [eax], al; bsr eax, eax; lea eax, [eax + ecx + 0x20]; ret; 
0x000c185e: add byte ptr [eax], al; bsr eax, eax; lea eax, [eax + ecx + 0x30]; ret; 
0x00042898: add byte ptr [eax], al; bsr ecx, ecx; shl eax, cl; ret; 
0x0009ba45: add byte ptr [eax], al; call 0x10beb0; mov dword ptr [ebx + 0x2b4], eax; add esp, 0x18; pop ebx; ret; 
0x0016f3c6: add byte ptr [eax], al; call 0x125360; mov dword ptr [ebx + 0xa62c], eax; add esp, 8; pop ebx; ret; 
0x00030070: add byte ptr [eax], al; call 0x12d020; add esp, 0x1c; ret; 
0x000427d5: add byte ptr [eax], al; call 0x12d050; mov dword ptr [ebx + 0x1894], 0; add esp, 0x18; pop ebx; ret; 
0x00196c4e: add byte ptr [eax], al; call 0x189c1d; add ebx, 0x44d9b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194c4e: add byte ptr [eax], al; call 0x189c1d; add ebx, 0x46b1b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193a56: add byte ptr [eax], al; call 0x189c1d; add ebx, 0x47953; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x000c091e: add byte ptr [eax], al; call 0x189c31; add ecx, 0x10c6cf; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba97e: add byte ptr [eax], al; call 0x189c31; add ecx, 0x11249b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000a796f: add byte ptr [eax], al; call 0x231a0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000c31eb: add byte ptr [eax], al; call 0x231a0; add esp, 0x14; pop ebx; pop esi; ret; 
0x000385e3: add byte ptr [eax], al; call 0x231a0; add esp, 0x18; pop ebx; ret; 
0x00128ce6: add byte ptr [eax], al; call 0x231a8; add esp, 0x18; pop ebx; ret; 
0x00162766: add byte ptr [eax], al; call 0x231a8; mov dword ptr [ebx + 0xa220], eax; add esp, 0x18; pop ebx; ret; 
0x00053630: add byte ptr [eax], al; call 0x535f0; jmp eax; 
0x0009f33b: add byte ptr [eax], al; call 0x9f2a0; mov dword ptr [esp], esi; call ebx; 
0x0016ffa1: add byte ptr [eax], al; call dword ptr [eax + 0x10]; 
0x001931fd: add byte ptr [eax], al; call dword ptr [eax + 0x37c]; add esp, 0x1c; ret; 
0x000a6b58: add byte ptr [eax], al; call dword ptr [eax]; 
0x00023283: add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012f082: add byte ptr [eax], al; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x12f098; ret; 
0x0003c99c: add byte ptr [eax], al; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x3c9b0; pop ebx; ret; 
0x000a01df: add byte ptr [eax], al; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xa01f8; pop ebx; ret; 
0x0010c1b3: add byte ptr [eax], al; call dword ptr gs:[0x10]; cmp eax, 0xfffff001; jae 0x24f50; ret; 
0x0003c95d: add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; cmp eax, 0xfffff001; jae 0x24f50; ret; 
0x001214d9: add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x000eab60: add byte ptr [eax], al; call dword ptr gs:[0x10]; pop ebx; cmp eax, 0xfffff001; jae 0x24f50; ret; 
0x0014038e: add byte ptr [eax], al; call dword ptr gs:[0x10]; pop ebx; ret; 
0x0009c2a7: add byte ptr [eax], al; call dword ptr gs:[0x10]; ret; 
0x0003f332: add byte ptr [eax], al; call eax; 
0x00189def: add byte ptr [eax], al; call eax; cdq; add esp, 0x10; add esp, 0xc; ret; 
0x0010b8c0: add byte ptr [eax], al; call ecx; 
0x00157422: add byte ptr [eax], al; call esi; 
0x000a0af4: add byte ptr [eax], al; cmova eax, edx; mov byte ptr [ecx + 0x3c38], al; ret; 
0x00099b7d: add byte ptr [eax], al; cmova eax, edx; ret; 
0x000e8a47: add byte ptr [eax], al; cmovae eax, esi; mov edi, eax; mov eax, 0xdc; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00141d6e: add byte ptr [eax], al; cmovb eax, edx; ret; 
0x0009a5c2: add byte ptr [eax], al; cmove eax, ecx; ret; 
0x00043277: add byte ptr [eax], al; cmove eax, edx; ret; 
0x000907f7: add byte ptr [eax], al; cmovne eax, edx; ret; 
0x0007902f: add byte ptr [eax], al; cmovne eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0012887d: add byte ptr [eax], al; cmovne ebx, eax; add esp, 0x18; mov eax, ebx; pop ebx; ret; 
0x0014cdc8: add byte ptr [eax], al; cmp byte ptr [eax + 0xffffff], 0xf; inc esp; ret; 
0x000b7581: add byte ptr [eax], al; cmp byte ptr [eax], 1; sbb eax, -1; pop edi; pop ebx; ret; 
0x001abc2a: add byte ptr [eax], al; cmp byte ptr [edx + 0xb], 0; je 0x1abcb2; mov eax, 0xc; pop edi; ret; 
0x001a66c2: add byte ptr [eax], al; cmp ch, bh; mov eax, 0; jne 0x1a6f86; pop ebx; ret; 
0x001a9798: add byte ptr [eax], al; cmp ch, bh; mov eax, 0; jne 0x1a9870; pop ebx; ret; 
0x000fb050: add byte ptr [eax], al; cmp dword ptr [ebx + eax], 0x26; jne 0xfb0f0; mov eax, edx; pop ebx; ret; 
0x00024b1b: add byte ptr [eax], al; cmp dword ptr [ecx + 0x94], edx; jne 0x24af2; ret; 
0x000fb150: add byte ptr [eax], al; cmp dword ptr [ecx + edx], 0x26; je 0xfb13f; mov eax, 0xffffffff; ret; 
0x000fb2b0: add byte ptr [eax], al; cmp dword ptr [ecx + edx], 0x26; je 0xfb2c2; mov eax, 0xffffffff; ret; 
0x000fb5bb: add byte ptr [eax], al; cmp dword ptr [ecx + edx], 0x26; je 0xfb5ac; mov eax, 0xffffffff; ret; 
0x000e760e: add byte ptr [eax], al; cmp eax, -0x26; jne 0xe7621; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x0010c117: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x10c128; pop ebx; pop esi; ret; 
0x001132d5: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x1132e8; pop ebx; pop esi; ret; 
0x00114652: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x114660; pop ebx; ret; 
0x001146c2: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x1146d0; pop ebx; ret; 
0x00114ac2: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x114ad0; pop ebx; ret; 
0x00116058: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x116068; pop ebx; pop esi; ret; 
0x0011f0e2: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x11f0f0; pop ebx; ret; 
0x0011f602: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x11f610; pop ebx; ret; 
0x0011fce0: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x11fcf0; pop ebx; ret; 
0x00120867: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x120878; pop ebx; pop esi; ret; 
0x001208ee: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x120900; pop ebx; ret; 
0x00120c08: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x120c18; pop ebx; pop esi; ret; 
0x00121002: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x121010; pop ebx; ret; 
0x0012150e: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x121520; pop ebx; ret; 
0x00121a2e: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x121a40; pop ebx; ret; 
0x001221c7: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x1221d8; pop ebx; pop esi; ret; 
0x00122567: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x122578; pop ebx; pop esi; ret; 
0x00122fb2: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x122fc0; pop ebx; ret; 
0x00123002: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x123010; pop ebx; ret; 
0x00124e62: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x124e70; pop ebx; ret; 
0x00124eb7: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x124ec8; pop ebx; pop esi; ret; 
0x001283e7: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x1283f8; pop ebx; pop esi; ret; 
0x0012ad39: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x12ad48; pop ebx; pop esi; ret; 
0x0012c472: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x12c480; pop ebx; ret; 
0x0012c4c7: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x12c4d8; pop ebx; pop esi; ret; 
0x0012e86e: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x12e880; pop ebx; ret; 
0x0012ef12: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x12ef20; pop ebx; ret; 
0x0012f089: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x12f098; ret; 
0x0012f192: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x12f1a0; pop ebx; ret; 
0x00130292: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x1302a0; pop ebx; ret; 
0x00130552: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x130560; pop ebx; ret; 
0x001904d8: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x1904e8; pop ebx; pop esi; ret; 
0x0003c9a3: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x3c9b0; pop ebx; ret; 
0x000612d2: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x612e0; pop ebx; ret; 
0x0009f18e: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x9f1a0; pop ebx; ret; 
0x0009f817: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x9f828; pop ebx; pop esi; ret; 
0x000a01e6: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xa01f8; pop ebx; ret; 
0x000dbe10: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xdbe20; pop ebx; ret; 
0x000e8c01: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xe8c10; pop ebx; pop esi; ret; 
0x000fb5f7: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xfb640; add esp, 0x18; pop ebx; ret; 
0x0010c1ba: add byte ptr [eax], al; cmp eax, 0xfffff001; jae 0x24f50; ret; 
0x0010b966: add byte ptr [eax], al; cmp eax, 1; jg 0x10b9a8; call dword ptr [esi]; 
0x0012ba36: add byte ptr [eax], al; cmp eax, 1; jg 0x12ba48; add esp, 8; pop ebx; ret; 
0x001576dc: add byte ptr [eax], al; cmp eax, 1; jg 0x157708; add esp, 8; pop ebx; ret; 
0x0018254f: add byte ptr [eax], al; cmp eax, 1; jg 0x182578; add esp, 8; pop ebx; ret; 
0x001826cf: add byte ptr [eax], al; cmp eax, 1; jg 0x1826f8; add esp, 8; pop ebx; ret; 
0x0008cdde: add byte ptr [eax], al; cmp eax, 1; jg 0x8cdf0; ret; 
0x000dd015: add byte ptr [eax], al; cmp eax, 1; jg 0xdd040; add esp, 8; pop ebx; ret; 
0x0012d59a: add byte ptr [eax], al; cmp ecx, 1; jg 0x12d5d0; add esp, 8; pop ebx; ret; 
0x00092e6d: add byte ptr [eax], al; cmp ecx, eax; cmovb ecx, eax; mov eax, 0x182; xor edx, edx; call dword ptr gs:[0x10]; 
0x0012f0e3: add byte ptr [eax], al; cmp edi, 1; je 0x12f120; lea ecx, [esp + 0xc]; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x001304a3: add byte ptr [eax], al; cmp edi, 1; je 0x1304e0; lea ecx, [esp + 0xc]; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x000908fb: add byte ptr [eax], al; cmp edx, 0x3fff; ja 0x90910; ret; 
0x000fb135: add byte ptr [eax], al; cmp edx, 0x9123683e; jne 0xfb1a0; ret; 
0x0009806e: add byte ptr [eax], al; cmp edx, 1; je 0x98080; mov eax, 0x16; ret; 
0x000611b0: add byte ptr [eax], al; cmp edx, 1; jg 0x611e8; add esp, 0x18; pop ebx; ret; 
0x000907bf: add byte ptr [eax], al; cmp edx, 2; jbe 0x907d0; ret; 
0x00134b19: add byte ptr [eax], al; cmp edx, ecx; jb 0x134b23; cmp ecx, edx; sbb eax, eax; ret; 
0x001870d5: add byte ptr [eax], al; cmp edx, ecx; jb 0x1870df; cmp ecx, edx; sbb eax, eax; ret; 
0x001563ae: add byte ptr [eax], al; cmp edx, ecx; jne 0x1563a0; add esp, 8; pop ebx; ret; 
0x0015740d: add byte ptr [eax], al; das; je 0x157476; mov byte ptr [ebx + 0x8f88], 0; mov dword ptr [ebx + 0x8f78], 0; call esi; 
0x0015762d: add byte ptr [eax], al; das; je 0x157696; mov byte ptr [ebx + 0x4e88], 0; mov dword ptr [ebx + 0x4e78], 0; call esi; 
0x00024fae: add byte ptr [eax], al; endbr32; call 0x189c25; add eax, 0x219e5b; lea eax, [eax - 0x690ac]; ret; 
0x0008cc4e: add byte ptr [eax], al; endbr32; mov eax, 0xffffffff; ret; 
0x0017b8be: add byte ptr [eax], al; endbr32; mov eax, 1; ret; 
0x00192b9e: add byte ptr [eax], al; endbr32; mov eax, dword ptr [esp + 0x10]; mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x0018984e: add byte ptr [eax], al; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x0008cc7e: add byte ptr [eax], al; endbr32; ret; 
0x0008bbae: add byte ptr [eax], al; endbr32; xor eax, eax; ret; 
0x000ea11e: add byte ptr [eax], al; hlt; mov eax, edx; call dword ptr gs:[0x10]; 
0x000c1fed: add byte ptr [eax], al; inc dword ptr [eax]; je 0xc1ff4; inc eax; pop edi; ret; 
0x000980a8: add byte ptr [eax], al; inc eax; xor eax, eax; ret; 
0x0003c753: add byte ptr [eax], al; int 0x80; 
0x0010e404: add byte ptr [eax], al; int 0x80; push ecx; cmp eax, 0xfffff001; jae 0x24f50; ret; 
0x0013c8d9: add byte ptr [eax], al; ja 0x13c8e4; sar eax, 5; add esp, 0xc; ret; 
0x0018a11c: add byte ptr [eax], al; ja 0x18a320; sub esp, 8; push 0; push esi; call dword ptr [ebx + 8]; 
0x0018b752: add byte ptr [eax], al; ja 0x18b838; sub esp, 0xc; push esi; call dword ptr [ebx + 0x44]; 
0x0018b8ab: add byte ptr [eax], al; ja 0x18b8c0; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x0019f3b3: add byte ptr [eax], al; ja 0x19f3b9; neg eax; ret; 
0x001a0bf3: add byte ptr [eax], al; ja 0x1a0bf9; neg eax; pop ebp; ret; 
0x001a32a3: add byte ptr [eax], al; ja 0x1a32a9; neg eax; add esp, 4; pop ebx; ret; 
0x001a5ff3: add byte ptr [eax], al; ja 0x1a5ff9; neg eax; ret; 
0x001a62e3: add byte ptr [eax], al; ja 0x1a62e9; neg eax; pop ebp; ret; 
0x001a64a3: add byte ptr [eax], al; ja 0x1a64a9; neg eax; ret; 
0x001a6f8a: add byte ptr [eax], al; ja 0x1a6f90; neg eax; ret; 
0x001a7303: add byte ptr [eax], al; ja 0x1a7309; neg eax; pop edi; pop ebx; ret; 
0x001a81fb: add byte ptr [eax], al; ja 0x1a8201; neg eax; ret; 
0x001a9874: add byte ptr [eax], al; ja 0x1a987a; neg eax; ret; 
0x0018997e: add byte ptr [eax], al; ja 0x24a42; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0007b424: add byte ptr [eax], al; ja 0x7b690; sub esp, 8; push 0; push esi; call dword ptr [ebx + 8]; 
0x0007b9b1: add byte ptr [eax], al; ja 0x7bab0; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x0007e835: add byte ptr [eax], al; ja 0x7e8d1; sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x00080d6f: add byte ptr [eax], al; ja 0x80da8; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x00081511: add byte ptr [eax], al; ja 0x81540; sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x000849ca: add byte ptr [eax], al; ja 0x84bf0; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x0008628e: add byte ptr [eax], al; ja 0x86480; mov eax, dword ptr [ebp - 0x3c]; sub esp, 0xc; push esi; call dword ptr [eax + 0x30]; 
0x000876f3: add byte ptr [eax], al; ja 0x87720; sub esp, 0xc; push ebx; call dword ptr [esi + 0x30]; 
0x00088266: add byte ptr [eax], al; ja 0x88390; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x000883fc: add byte ptr [eax], al; ja 0x88440; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x00088f36: add byte ptr [eax], al; ja 0x88fa0; sub esp, 8; push -1; push dword ptr [ecx]; call dword ptr [eax + 0xc]; 
0x0008b425: add byte ptr [eax], al; ja 0x8b480; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x0008b4cf: add byte ptr [eax], al; ja 0x8b4f8; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x0008b7c7: add byte ptr [eax], al; ja 0x8b878; sub esp, 0xc; push esi; call dword ptr [ebp + 0x30]; 
0x0008bcb4: add byte ptr [eax], al; ja 0x8bcf0; sub esp, 8; push esi; push ebx; call dword ptr [edi + 0x18]; 
0x00090901: add byte ptr [eax], al; ja 0x90910; ret; 
0x0013477f: add byte ptr [eax], al; jae 0x13478e; mov eax, dword ptr [ecx + 0x4794]; add word ptr [eax + ebx*2], 1; pop ebx; ret; 
0x000a08d8: add byte ptr [eax], al; jbe 0xa08e0; ret; 
0x000a0918: add byte ptr [eax], al; jbe 0xa0920; ret; 
0x000fb2cc: add byte ptr [eax], al; je 0xfb2c2; xor eax, eax; cmp edx, 0xadf5; setne al; ret; 
0x001a7e89: add byte ptr [eax], al; jg 0x1a7e90; neg eax; ret; 
0x001a81b4: add byte ptr [eax], al; jg 0x1a81c0; neg eax; ret; 
0x001ac2b4: add byte ptr [eax], al; jg 0x1ac2c0; neg eax; ret; 
0x000d97a3: add byte ptr [eax], al; jg 0xd97b0; neg eax; pop edi; pop esi; ret; 
0x000d97d3: add byte ptr [eax], al; jg 0xd97d9; neg eax; ret; 
0x0002300e: add byte ptr [eax], al; jmp dword ptr [ebx + 0xc]; 
0x00023004: add byte ptr [eax], al; jmp dword ptr [ebx + 8]; 
0x00025065: add byte ptr [eax], al; jmp eax; 
0x000701f9: add byte ptr [eax], al; jmp ebx; 
0x000644a7: add byte ptr [eax], al; jmp edx; 
0x0010c219: add byte ptr [eax], al; jne 0x10c269; add esp, 0x28; pop ebx; ret; 
0x0010c2bc: add byte ptr [eax], al; jne 0x10c309; add esp, 0x28; pop ebx; ret; 
0x0010c3b1: add byte ptr [eax], al; jne 0x10c409; add esp, 0x24; pop ebx; pop esi; ret; 
0x0010c461: add byte ptr [eax], al; jne 0x10c4b9; add esp, 0x24; pop ebx; pop esi; ret; 
0x0010c529: add byte ptr [eax], al; jne 0x10c579; add esp, 0x28; pop ebx; ret; 
0x0010e4a5: add byte ptr [eax], al; jne 0x10e553; add esp, 0x68; pop ebx; ret; 
0x0010e7b9: add byte ptr [eax], al; jne 0x10e883; add esp, 0x64; pop ebx; pop esi; ret; 
0x0011354a: add byte ptr [eax], al; jne 0x113566; add esp, 0x78; pop ebx; ret; 
0x0011429d: add byte ptr [eax], al; jne 0x1142f7; add esp, 0x34; pop ebx; pop esi; ret; 
0x001145a4: add byte ptr [eax], al; jne 0x1145e9; add esp, 0x14; pop ebx; pop esi; ret; 
0x0011575e: add byte ptr [eax], al; jne 0x11579c; add esp, 0x74; pop ebx; pop esi; ret; 
0x001158f7: add byte ptr [eax], al; jne 0x11593b; add esp, 0x74; pop ebx; pop esi; ret; 
0x00115ed5: add byte ptr [eax], al; jne 0x115ee7; add esp, 0x74; pop ebx; pop esi; ret; 
0x001160d5: add byte ptr [eax], al; jne 0x1160e7; add esp, 0x54; pop ebx; pop esi; ret; 
0x0011eeff: add byte ptr [eax], al; jne 0x11ef5b; add esp, 0xe4; pop ebx; pop esi; ret; 
0x0011f060: add byte ptr [eax], al; jne 0x11f06b; movzx eax, al; add esp, 0x4c; ret; 
0x0011f1c9: add byte ptr [eax], al; jne 0x11f27b; add esp, 0x24; pop ebx; pop esi; ret; 
0x0011f309: add byte ptr [eax], al; jne 0x11f3bb; add esp, 0x24; pop ebx; pop esi; ret; 
0x0011f5b2: add byte ptr [eax], al; jne 0x11f5ce; add esp, 0x74; pop ebx; pop esi; ret; 
0x0012075c: add byte ptr [eax], al; jne 0x120766; add esp, 0x24; pop ebx; pop esi; ret; 
0x00120a6f: add byte ptr [eax], al; jne 0x120a8e; add esp, 0x74; pop ebx; pop esi; ret; 
0x00120c85: add byte ptr [eax], al; jne 0x120c97; add esp, 0x54; pop ebx; pop esi; ret; 
0x00120ce5: add byte ptr [eax], al; jne 0x120cf7; add esp, 0x64; pop ebx; pop esi; ret; 
0x001215d4: add byte ptr [eax], al; jne 0x1215dd; add esp, 0x38; pop ebx; ret; 
0x00121654: add byte ptr [eax], al; jne 0x12165d; add esp, 0x38; pop ebx; ret; 
0x00121cec: add byte ptr [eax], al; jne 0x121d49; add esp, 0x14; pop ebx; pop esi; ret; 
0x00121d9c: add byte ptr [eax], al; jne 0x121df9; add esp, 0x14; pop ebx; pop esi; ret; 
0x00122ca8: add byte ptr [eax], al; jne 0x122cb7; add esp, 0x1c; ret; 
0x00123292: add byte ptr [eax], al; jne 0x1232b9; add esp, 0x54; pop ebx; pop esi; ret; 
0x0012338a: add byte ptr [eax], al; jne 0x1233b1; add esp, 0x54; pop ebx; pop esi; ret; 
0x00123427: add byte ptr [eax], al; jne 0x1234bc; add esp, 0x18; mov eax, ebx; pop ebx; ret; 
0x00123534: add byte ptr [eax], al; jne 0x12355b; add esp, 0x14; pop ebx; pop esi; ret; 
0x001235fe: add byte ptr [eax], al; jne 0x12360f; add esp, 0x54; pop ebx; pop esi; ret; 
0x001243f3: add byte ptr [eax], al; jne 0x1243ff; add esp, 0x418; pop ebx; ret; 
0x00124f69: add byte ptr [eax], al; jne 0x124f72; add esp, 0x38; pop ebx; ret; 
0x00124ffa: add byte ptr [eax], al; jne 0x125004; add esp, 0x34; pop ebx; pop esi; ret; 
0x0012508d: add byte ptr [eax], al; jne 0x125097; add esp, 0x34; pop ebx; pop esi; ret; 
0x00125398: add byte ptr [eax], al; jne 0x1253a0; add esp, 0x1c; ret; 
0x00125e2f: add byte ptr [eax], al; jne 0x125e4f; add esp, 0x1018; pop ebx; ret; 
0x00126b1b: add byte ptr [eax], al; jne 0x126b23; add esp, 0x1c; ret; 
0x001286ae: add byte ptr [eax], al; jne 0x1286b8; add esp, 0x34; pop ebx; pop esi; ret; 
0x0012b5f4: add byte ptr [eax], al; jne 0x12b61b; add esp, 0x14; pop ebx; pop esi; ret; 
0x0012b69c: add byte ptr [eax], al; jne 0x12b6e9; add esp, 0x28; pop ebx; ret; 
0x0012b73c: add byte ptr [eax], al; jne 0x12b789; add esp, 0x28; pop ebx; ret; 
0x0012d1e7: add byte ptr [eax], al; jne 0x12d1ef; add esp, 0x3c; ret; 
0x0012d67e: add byte ptr [eax], al; jne 0x12d686; add esp, 0x1c; ret; 
0x0012d78b: add byte ptr [eax], al; jne 0x12d795; add esp, 0x34; pop ebx; pop esi; ret; 
0x001313e2: add byte ptr [eax], al; jne 0x131409; add esp, 0x28; pop ebx; ret; 
0x00131507: add byte ptr [eax], al; jne 0x131529; add esp, 0x18; pop ebx; ret; 
0x00131587: add byte ptr [eax], al; jne 0x1315a9; add esp, 0x18; pop ebx; ret; 
0x00131872: add byte ptr [eax], al; jne 0x131899; add esp, 0x18; pop ebx; ret; 
0x00132582: add byte ptr [eax], al; jne 0x1325a9; add esp, 0x18; pop ebx; ret; 
0x00132699: add byte ptr [eax], al; jne 0x1326a1; add esp, 0x1c; ret; 
0x00132707: add byte ptr [eax], al; jne 0x132729; add esp, 0x18; pop ebx; ret; 
0x00132792: add byte ptr [eax], al; jne 0x1327b9; add esp, 0x28; pop ebx; ret; 
0x0013289a: add byte ptr [eax], al; jne 0x1328a2; add esp, 0x7c; ret; 
0x0013a5fc: add byte ptr [eax], al; jne 0x13a630; pop ebx; pop esi; pop edi; ret; 
0x0013d587: add byte ptr [eax], al; jne 0x13d595; add esp, 0x2c; ret; 
0x0013e7c7: add byte ptr [eax], al; jne 0x13e7d5; add esp, 0x2c; ret; 
0x0013f8ed: add byte ptr [eax], al; jne 0x13f95a; add esp, 0x14; pop ebx; pop esi; ret; 
0x00148ce4: add byte ptr [eax], al; jne 0x148cf4; add esp, 0x18; pop ebx; ret; 
0x00148d2c: add byte ptr [eax], al; jne 0x148d34; add esp, 0x1c; ret; 
0x00148d7b: add byte ptr [eax], al; jne 0x148d83; add esp, 0x1c; ret; 
0x0014ac60: add byte ptr [eax], al; jne 0x14aca4; add esp, 0x118; pop ebx; ret; 
0x0014ad00: add byte ptr [eax], al; jne 0x14ad60; add esp, 0x118; pop ebx; ret; 
0x0014adc0: add byte ptr [eax], al; jne 0x14ae0b; add esp, 0x118; pop ebx; ret; 
0x0014ae60: add byte ptr [eax], al; jne 0x14ae8d; add esp, 0x11c; ret; 
0x0014b385: add byte ptr [eax], al; jne 0x14b3cc; add esp, 0x1c; ret; 
0x0014ef58: add byte ptr [eax], al; jne 0x14ef63; movzx eax, ax; add esp, 0x2c; ret; 
0x00153648: add byte ptr [eax], al; jne 0x153651; add esp, 0x28; pop ebx; ret; 
0x001570b6: add byte ptr [eax], al; jne 0x1570be; add esp, 0x1c; ret; 
0x0016f42d: add byte ptr [eax], al; jne 0x16f436; add esp, 0x28; pop ebx; ret; 
0x0016f6a2: add byte ptr [eax], al; jne 0x16f743; add esp, 0x34; pop ebx; pop esi; ret; 
0x0016fa12: add byte ptr [eax], al; jne 0x16fa49; add esp, 0x14; pop ebx; pop esi; ret; 
0x001719f0: add byte ptr [eax], al; jne 0x171a26; add esp, 0x14; pop ebx; pop esi; ret; 
0x001752db: add byte ptr [eax], al; jne 0x175356; add esp, 0x18; pop ebx; ret; 
0x00178494: add byte ptr [eax], al; jne 0x1784a7; add esp, 0x1c; ret; 
0x00178512: add byte ptr [eax], al; jne 0x17852c; add esp, 0x74; pop ebx; pop edi; ret; 
0x001785c0: add byte ptr [eax], al; jne 0x1785d7; add esp, 0x28; pop ebx; ret; 
0x00178660: add byte ptr [eax], al; jne 0x178677; add esp, 0x28; pop ebx; ret; 
0x001789a4: add byte ptr [eax], al; jne 0x1789b7; add esp, 0x1c; ret; 
0x00178a27: add byte ptr [eax], al; jne 0x178a37; add esp, 0x18; pop ebx; ret; 
0x001798ca: add byte ptr [eax], al; jne 0x1798d2; add esp, 0x4c; ret; 
0x0017993a: add byte ptr [eax], al; jne 0x179942; add esp, 0x4c; ret; 
0x001799aa: add byte ptr [eax], al; jne 0x1799b2; add esp, 0x4c; ret; 
0x00179a1a: add byte ptr [eax], al; jne 0x179a22; add esp, 0x4c; ret; 
0x00179a7d: add byte ptr [eax], al; jne 0x179a85; add esp, 0x4c; ret; 
0x00179add: add byte ptr [eax], al; jne 0x179ae5; add esp, 0x4c; ret; 
0x00179b4a: add byte ptr [eax], al; jne 0x179b52; add esp, 0x4c; ret; 
0x00179bca: add byte ptr [eax], al; jne 0x179bd2; add esp, 0x4c; ret; 
0x00179fbf: add byte ptr [eax], al; jne 0x179fcc; add esp, 0x94; pop ebx; pop edi; ret; 
0x0017a0bb: add byte ptr [eax], al; jne 0x17a0c3; add esp, 0x1c; ret; 
0x0017a10a: add byte ptr [eax], al; jne 0x17a13c; add esp, 0x1c; ret; 
0x0017b8a4: add byte ptr [eax], al; jne 0x17b8ac; add esp, 0x2c; ret; 
0x0017b956: add byte ptr [eax], al; jne 0x17b9b9; add esp, 0x18; pop ebx; ret; 
0x0017ba46: add byte ptr [eax], al; jne 0x17baa9; add esp, 0x18; pop ebx; ret; 
0x0017bd1d: add byte ptr [eax], al; jne 0x17bd5c; add esp, 0x18; pop ebx; ret; 
0x0017bdbd: add byte ptr [eax], al; jne 0x17bdfc; add esp, 0x18; pop ebx; ret; 
0x0017be7b: add byte ptr [eax], al; jne 0x17be9b; add esp, 0x18; pop ebx; ret; 
0x0017beff: add byte ptr [eax], al; jne 0x17bf37; add esp, 0x18; pop ebx; ret; 
0x0017bf93: add byte ptr [eax], al; jne 0x17bfd4; add esp, 0x18; pop ebx; ret; 
0x0017c52e: add byte ptr [eax], al; jne 0x17c5af; add esp, 0x14; pop ebx; pop esi; ret; 
0x0017c62a: add byte ptr [eax], al; jne 0x17c69c; add esp, 0x14; pop ebx; pop esi; ret; 
0x0017c7cd: add byte ptr [eax], al; jne 0x17c80c; add esp, 0x18; pop ebx; ret; 
0x0017c86d: add byte ptr [eax], al; jne 0x17c8ac; add esp, 0x18; pop ebx; ret; 
0x0017c90d: add byte ptr [eax], al; jne 0x17c94c; add esp, 0x18; pop ebx; ret; 
0x0017c9ad: add byte ptr [eax], al; jne 0x17c9ec; add esp, 0x18; pop ebx; ret; 
0x0017cff1: add byte ptr [eax], al; jne 0x17cffb; add esp, 0x54; pop ebx; pop esi; ret; 
0x0017d0a4: add byte ptr [eax], al; jne 0x17d0af; movzx eax, al; add esp, 0x1c; ret; 
0x0017d104: add byte ptr [eax], al; jne 0x17d10f; movzx eax, al; add esp, 0x1c; ret; 
0x0017d16e: add byte ptr [eax], al; jne 0x17d177; add esp, 0x18; pop ebx; ret; 
0x0017d21e: add byte ptr [eax], al; jne 0x17d227; add esp, 0x18; pop ebx; ret; 
0x001824d9: add byte ptr [eax], al; jne 0x182514; add esp, 0x18; pop ebx; ret; 
0x00182760: add byte ptr [eax], al; jne 0x182794; add esp, 0x14; pop ebx; pop esi; ret; 
0x001827f0: add byte ptr [eax], al; jne 0x182824; add esp, 0x14; pop ebx; pop esi; ret; 
0x001840b3: add byte ptr [eax], al; jne 0x1840c9; add esp, 0x18; pop ebx; ret; 
0x0018412d: add byte ptr [eax], al; jne 0x184149; add esp, 0x18; pop ebx; ret; 
0x00186764: add byte ptr [eax], al; jne 0x1867ac; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x00186f2f: add byte ptr [eax], al; jne 0x186f38; add esp, 0x28; pop ebx; ret; 
0x00189833: add byte ptr [eax], al; jne 0x18983c; add esp, 0x18; pop ebx; ret; 
0x0018c6cb: add byte ptr [eax], al; jne 0x18c6d3; add esp, 0x1c; ret; 
0x001927d6: add byte ptr [eax], al; jne 0x1927f7; add esp, 0x18; pop ebx; ret; 
0x00192871: add byte ptr [eax], al; jne 0x19287b; add esp, 0x14; pop ebx; pop esi; ret; 
0x001928eb: add byte ptr [eax], al; jne 0x1928f5; add esp, 0x14; pop ebx; pop esi; ret; 
0x00192b4d: add byte ptr [eax], al; jne 0x192b55; add esp, 0x2c; ret; 
0x001a67f5: add byte ptr [eax], al; jne 0x1a6f70; pop ebx; ret; 
0x001a662e: add byte ptr [eax], al; jne 0x1a6f86; pop ebx; ret; 
0x001a7f6d: add byte ptr [eax], al; jne 0x1a81b0; pop ebx; ret; 
0x001a9627: add byte ptr [eax], al; jne 0x1a9850; pop ebx; ret; 
0x001a96e4: add byte ptr [eax], al; jne 0x1a9870; pop ebx; ret; 
0x001aa46e: add byte ptr [eax], al; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x00024b21: add byte ptr [eax], al; jne 0x24af2; ret; 
0x0002553f: add byte ptr [eax], al; jne 0x25547; add esp, 0x1c; ret; 
0x0003ad7b: add byte ptr [eax], al; jne 0x3ad87; mov eax, edx; add esp, 0x1c; ret 4; 
0x0003c2ea: add byte ptr [eax], al; jne 0x3c2f3; add esp, 0x18; pop ebx; ret; 
0x0003c635: add byte ptr [eax], al; jne 0x3c642; add esp, 0x124; pop ebx; pop esi; ret; 
0x0003cb8b: add byte ptr [eax], al; jne 0x3cb98; add esp, 0x114; pop ebx; pop edi; ret; 
0x0003cc0b: add byte ptr [eax], al; jne 0x3cc18; add esp, 0x114; pop ebx; pop edi; ret; 
0x0003cc78: add byte ptr [eax], al; jne 0x3ccbe; add esp, 0x94; pop ebx; pop edi; ret; 
0x0003cd1f: add byte ptr [eax], al; jne 0x3cd2c; add esp, 0x94; pop ebx; pop edi; ret; 
0x0003cd9d: add byte ptr [eax], al; jne 0x3cdb7; add esp, 0x98; pop ebx; ret; 
0x0003cf42: add byte ptr [eax], al; jne 0x3cf7c; add esp, 0x28; pop ebx; ret; 
0x0003d355: add byte ptr [eax], al; jne 0x3d361; add esp, 0x128; pop ebx; ret; 
0x0003d7fa: add byte ptr [eax], al; jne 0x3d804; add esp, 0x24; pop ebx; pop esi; ret; 
0x0003d955: add byte ptr [eax], al; jne 0x3d96f; add esp, 0x98; pop ebx; ret; 
0x0003d9d5: add byte ptr [eax], al; jne 0x3d9ef; add esp, 0x98; pop ebx; ret; 
0x0003da5e: add byte ptr [eax], al; jne 0x3da69; add esp, 0x9c; ret; 
0x0003df2c: add byte ptr [eax], al; jne 0x3df34; add esp, 0x1c; ret; 
0x0003efee: add byte ptr [eax], al; jne 0x3eff6; add esp, 0x1c; ret; 
0x0003f101: add byte ptr [eax], al; jne 0x3f109; add esp, 0x1c; ret; 
0x000405f1: add byte ptr [eax], al; jne 0x405f9; add esp, 0x1c; ret; 
0x0004081e: add byte ptr [eax], al; jne 0x40826; add esp, 0x1c; ret; 
0x000409dc: add byte ptr [eax], al; jne 0x409e4; add esp, 0x2c; ret; 
0x00040aee: add byte ptr [eax], al; jne 0x40af6; add esp, 0x1c; ret; 
0x00040b71: add byte ptr [eax], al; jne 0x40b79; add esp, 0x1c; ret; 
0x00041b6f: add byte ptr [eax], al; jne 0x41bac; add esp, 0x18; pop ebx; ret; 
0x0005349c: add byte ptr [eax], al; jne 0x534a4; add esp, 0x2c; ret; 
0x00055770: add byte ptr [eax], al; jne 0x5577d; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000557fe: add byte ptr [eax], al; jne 0x5580b; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x00059dc7: add byte ptr [eax], al; jne 0x59dd4; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x0005ab5a: add byte ptr [eax], al; jne 0x5ab7b; add esp, 0x434; pop ebx; pop esi; ret; 
0x0005adaa: add byte ptr [eax], al; jne 0x5adbf; add esp, 0x1c; ret; 
0x0005f677: add byte ptr [eax], al; jne 0x5f68e; add esp, 0x78; pop ebx; ret; 
0x000615be: add byte ptr [eax], al; jne 0x615ca; add esp, 0x1018; pop ebx; ret; 
0x00061645: add byte ptr [eax], al; jne 0x6164e; add esp, 0x78; pop ebx; ret; 
0x0007ebb9: add byte ptr [eax], al; jne 0x7ebc3; add esp, 0x24; pop ebx; pop esi; ret; 
0x00085954: add byte ptr [eax], al; jne 0x8596f; add esp, 0x824; pop ebx; pop esi; ret; 
0x00087514: add byte ptr [eax], al; jne 0x8752c; add esp, 0x28; pop ebx; ret; 
0x0008dea8: add byte ptr [eax], al; jne 0x8deb2; add esp, 0x24; pop ebx; pop esi; ret; 
0x0008e011: add byte ptr [eax], al; jne 0x8e05d; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x0008e17f: add byte ptr [eax], al; jne 0x8e1c5; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x0008ea16: add byte ptr [eax], al; jne 0x8ea20; add esp, 0x14; pop ebx; pop esi; ret; 
0x00090d41: add byte ptr [eax], al; jne 0x90e6c; add esp, 0x94; pop ebx; pop esi; ret; 
0x00090fca: add byte ptr [eax], al; jne 0x90feb; add esp, 0x24; pop ebx; pop esi; ret; 
0x0009276f: add byte ptr [eax], al; jne 0x92777; add esp, 0x2c; ret; 
0x00094b56: add byte ptr [eax], al; jne 0x94b60; mov eax, edx; pop ebx; pop esi; ret; 
0x00094e34: add byte ptr [eax], al; jne 0x94e40; xor eax, eax; pop ebx; ret; 
0x00095a31: add byte ptr [eax], al; jne 0x95a3b; add esp, 0x14; pop ebx; pop esi; ret; 
0x0009725b: add byte ptr [eax], al; jne 0x97264; add esp, 0x28; pop ebx; ret; 
0x000972eb: add byte ptr [eax], al; jne 0x972f3; add esp, 0x2c; ret; 
0x0009859f: add byte ptr [eax], al; jne 0x985a7; add esp, 0x2c; ret; 
0x00098a0f: add byte ptr [eax], al; jne 0x98a17; add esp, 0x2c; ret; 
0x00098f2b: add byte ptr [eax], al; jne 0x98f33; add esp, 0x2c; ret; 
0x0009937b: add byte ptr [eax], al; jne 0x99383; add esp, 0x2c; ret; 
0x0009a69e: add byte ptr [eax], al; jne 0x9a6b9; add esp, 0x24; pop ebx; pop esi; ret; 
0x0009b6bb: add byte ptr [eax], al; jne 0x9b6f3; add esp, 0x24; pop ebx; pop esi; ret; 
0x0009b75c: add byte ptr [eax], al; jne 0x9b7ab; add esp, 0x124; pop ebx; pop esi; ret; 
0x0009c248: add byte ptr [eax], al; jne 0x9c297; add esp, 0x38; pop ebx; ret; 
0x0009c4d6: add byte ptr [eax], al; jne 0x9c4f7; add esp, 0x2c; ret; 
0x0009c5dc: add byte ptr [eax], al; jne 0x9c617; add esp, 0x14; pop ebx; pop esi; ret; 
0x0009c742: add byte ptr [eax], al; jne 0x9c767; add esp, 0x2c; ret; 
0x0009c9a2: add byte ptr [eax], al; jne 0x9c9c7; add esp, 0x18; pop ebx; ret; 
0x0009cb21: add byte ptr [eax], al; jne 0x9cb72; add esp, 0x124; pop ebx; pop esi; ret; 
0x0009cbdc: add byte ptr [eax], al; jne 0x9cc2b; add esp, 0x124; pop ebx; pop esi; ret; 
0x0009e758: add byte ptr [eax], al; jne 0x9e761; add esp, 0x28; pop ebx; ret; 
0x0009fb02: add byte ptr [eax], al; jne 0x9fb0c; add esp, 0x24; pop ebx; pop esi; ret; 
0x0009fdd0: add byte ptr [eax], al; jne 0x9fdd9; add esp, 0x28; pop ebx; ret; 
0x000a0390: add byte ptr [eax], al; jne 0xa0399; add esp, 0x38; pop ebx; ret; 
0x000a0837: add byte ptr [eax], al; jne 0xa0857; add esp, 0xb4; pop ebx; pop esi; ret; 
0x000a6515: add byte ptr [eax], al; jne 0xa6522; add esp, 0x38; mov eax, ebx; pop ebx; ret 4; 
0x000c5e0f: add byte ptr [eax], al; jne 0xc5e3c; add esp, 0x18; pop ebx; ret; 
0x000d88f7: add byte ptr [eax], al; jne 0xd8904; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000d8980: add byte ptr [eax], al; jne 0xd898d; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000d8a0e: add byte ptr [eax], al; jne 0xd8a1b; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000da68c: add byte ptr [eax], al; jne 0xda69f; add esp, 0x28; pop ebx; ret; 
0x000da710: add byte ptr [eax], al; jne 0xda718; add esp, 0x1c; ret; 
0x000da75a: add byte ptr [eax], al; jne 0xda763; add esp, 0x38; pop ebx; ret; 
0x000da7bc: add byte ptr [eax], al; jne 0xda7c5; add esp, 0x48; pop ebx; ret; 
0x000dba60: add byte ptr [eax], al; jne 0xdba69; add esp, 0x28; pop ebx; ret; 
0x000dbcd5: add byte ptr [eax], al; jne 0xdbd19; add esp, 0x28; pop ebx; ret; 
0x000dbd8a: add byte ptr [eax], al; jne 0xdbdeb; add esp, 0x24; pop ebx; pop esi; ret; 
0x000dc059: add byte ptr [eax], al; jne 0xdc078; add esp, 0x38; pop ebx; ret; 
0x000de96c: add byte ptr [eax], al; jne 0xde999; add esp, 0x24; pop ebx; pop esi; ret; 
0x000dea04: add byte ptr [eax], al; jne 0xdea29; add esp, 0x24; pop ebx; pop esi; ret; 
0x000deeca: add byte ptr [eax], al; jne 0xdeed5; add esp, 0x28; xor eax, eax; pop ebx; ret; 
0x000e4f74: add byte ptr [eax], al; jne 0xe4f7c; add esp, 0x1c; ret; 
0x000e7434: add byte ptr [eax], al; jne 0xe743c; add esp, 0x1c; ret; 
0x000e75a8: add byte ptr [eax], al; jne 0xe75e2; add esp, 0x28; pop ebx; ret; 
0x000e77c6: add byte ptr [eax], al; jne 0xe77cf; add esp, 0x28; pop ebx; ret; 
0x000e866c: add byte ptr [eax], al; jne 0xe8678; add esp, 0xe8; pop ebx; ret; 
0x000e86de: add byte ptr [eax], al; jne 0xe86ea; add esp, 0xe8; pop ebx; ret; 
0x000e8782: add byte ptr [eax], al; jne 0xe878e; add esp, 0xe8; pop ebx; ret; 
0x000e8826: add byte ptr [eax], al; jne 0xe8834; add esp, 0xe8; mov eax, edx; pop ebx; ret; 
0x000efa41: add byte ptr [eax], al; jne 0xefa57; add esp, 0x1c; ret; 
0x000f0d7a: add byte ptr [eax], al; jne 0xf0d96; add esp, 0x78; pop ebx; ret; 
0x000f38ba: add byte ptr [eax], al; jne 0xf38d6; add esp, 0x78; pop ebx; ret; 
0x000f46ba: add byte ptr [eax], al; jne 0xf46d6; add esp, 0x78; pop ebx; ret; 
0x000f71ea: add byte ptr [eax], al; jne 0xf7206; add esp, 0x78; pop ebx; ret; 
0x000f7ffa: add byte ptr [eax], al; jne 0xf8016; add esp, 0x78; pop ebx; ret; 
0x00032b79: add byte ptr [eax], al; lea eax, [eax + 0x11cc]; ret; 
0x001aba49: add byte ptr [eax], al; lea eax, [eax + 0xb]; pop edi; ret; 
0x001aba72: add byte ptr [eax], al; lea eax, [eax + 0xf]; pop edi; ret; 
0x001aba87: add byte ptr [eax], al; lea eax, [eax + 1]; pop edi; ret; 
0x001aba97: add byte ptr [eax], al; lea eax, [eax + 2]; pop edi; ret; 
0x001ab9df: add byte ptr [eax], al; lea eax, [eax + 3]; pop edi; ret; 
0x001abaa7: add byte ptr [eax], al; lea eax, [eax + 4]; pop edi; ret; 
0x001aba12: add byte ptr [eax], al; lea eax, [eax + 7]; pop edi; ret; 
0x00054e6e: add byte ptr [eax], al; lea eax, [eax + eax*8]; add eax, dword ptr [esp]; add eax, 0xd; add esp, 4; jmp eax; 
0x001aaeb9: add byte ptr [eax], al; lea eax, [ecx + 0xc]; ret; 
0x001ab117: add byte ptr [eax], al; lea eax, [ecx + 1]; ret; 
0x001ab127: add byte ptr [eax], al; lea eax, [ecx + 2]; ret; 
0x001ab137: add byte ptr [eax], al; lea eax, [ecx + 3]; ret; 
0x001aae66: add byte ptr [eax], al; lea eax, [ecx + 4]; ret; 
0x001ab147: add byte ptr [eax], al; lea eax, [ecx + 5]; ret; 
0x001aae90: add byte ptr [eax], al; lea eax, [ecx + 8]; ret; 
0x001a9de4: add byte ptr [eax], al; lea eax, [edi + 0xb]; pop edi; ret; 
0x001a9d9e: add byte ptr [eax], al; lea eax, [edi + 0xf]; pop edi; ret; 
0x001aaa67: add byte ptr [eax], al; lea eax, [edi + 1]; pop edi; ret; 
0x001aaa77: add byte ptr [eax], al; lea eax, [edi + 2]; pop edi; ret; 
0x001a9d41: add byte ptr [eax], al; lea eax, [edi + 3]; pop edi; ret; 
0x001aaa87: add byte ptr [eax], al; lea eax, [edi + 4]; pop edi; ret; 
0x001a9cfb: add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x001aa2c1: add byte ptr [eax], al; lea eax, [edi - 0x10]; pop edi; ret; 
0x001aa2e6: add byte ptr [eax], al; lea eax, [edi - 0xc]; pop edi; ret; 
0x001aa339: add byte ptr [eax], al; lea eax, [edi - 4]; pop edi; ret; 
0x001aa310: add byte ptr [eax], al; lea eax, [edi - 8]; pop edi; ret; 
0x001ab4e0: add byte ptr [eax], al; lea eax, [edx + 0xb]; ret; 
0x001ab509: add byte ptr [eax], al; lea eax, [edx + 0xf]; ret; 
0x001ab493: add byte ptr [eax], al; lea eax, [edx + 3]; ret; 
0x001ab4b6: add byte ptr [eax], al; lea eax, [edx + 7]; ret; 
0x0015ff52: add byte ptr [eax], al; lea eax, [esp + 0x9a4]; push eax; push esi; mov ecx, dword ptr [esp + 0x3c]; call ecx; 
0x00186dee: add byte ptr [eax], al; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000ea0a9: add byte ptr [eax], al; lea ebx, [eax + 0x6c]; mov dword ptr [eax + 0x6c], ebx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x00092cb6: add byte ptr [eax], al; lea ebx, [eax + 0x6c]; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x00179162: add byte ptr [eax], al; lea ecx, [eax + 0xa78c]; mov eax, dword ptr gs:[0]; mov dword ptr [eax + edx], ecx; ret; 
0x000eb141: add byte ptr [eax], al; lea ecx, [ebp - 0x6d324]; mov edi, 0x1000; call dword ptr gs:[0x10]; 
0x00176473: add byte ptr [eax], al; lea ecx, [esp + 0x28]; mov edx, dword ptr [eax + 4]; push ecx; push eax; call dword ptr [edx + 8]; 
0x001781d4: add byte ptr [eax], al; lea ecx, [esp + 0x28]; push ecx; push 4; push eax; call dword ptr [edx + 0x14]; 
0x000a029e: add byte ptr [eax], al; lea ecx, [esp + 0xc]; mov eax, 0x105; call dword ptr gs:[0x10]; 
0x0012fe16: add byte ptr [eax], al; lea ecx, [esp + 0xc]; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x000e7b3e: add byte ptr [eax], al; lea ecx, [esp + 0xc]; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x0012ee68: add byte ptr [eax], al; lea ecx, [esp + 0xc]; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x0010bf3e: add byte ptr [eax], al; lea ecx, [esp + 4]; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x00092ac7: add byte ptr [eax], al; lea edx, [esi + 0x220]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0013f7ec: add byte ptr [eax], al; lea edx, [esp + 0x10]; push edx; push edi; call eax; 
0x0013f8c9: add byte ptr [eax], al; lea edx, [esp + 0x10]; push edx; push esi; call eax; 
0x0009feb5: add byte ptr [eax], al; lea edx, [esp + 0x18]; mov eax, 0x103; mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00115d60: add byte ptr [eax], al; lea edx, [esp + 0x2c]; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x0003c7f4: add byte ptr [eax], al; lea edx, [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x001abc77: add byte ptr [eax], al; lea esi, [esi]; add eax, 1; pop edi; ret; 
0x000d99ca: add byte ptr [eax], al; lea esi, [esi]; add eax, 3; ret; 
0x0008bc5a: add byte ptr [eax], al; lea esi, [esi]; endbr32; mov eax, 0xffffffff; mov edx, eax; ret; 
0x000a69eb: add byte ptr [eax], al; lea esi, [esi]; endbr32; mov eax, 0xffffffff; ret; 
0x0016eafb: add byte ptr [eax], al; lea esi, [esi]; endbr32; mov eax, 1; ret; 
0x0017ce0b: add byte ptr [eax], al; lea esi, [esi]; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x0008ecfb: add byte ptr [eax], al; lea esi, [esi]; endbr32; ret; 
0x0008bba7: add byte ptr [eax], al; lea esi, [esi]; endbr32; xor eax, eax; ret; 
0x001aaf2a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xa]; ret; 
0x001aaf3a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xb]; ret; 
0x001aaf4a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xd]; ret; 
0x001aaf5a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xe]; ret; 
0x001aaf6a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xf]; ret; 
0x001aaeca: add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 2]; ret; 
0x001aaeda: add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 3]; ret; 
0x001aaeea: add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 5]; ret; 
0x001aaefa: add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 6]; ret; 
0x001aaf0a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 7]; ret; 
0x001ac448: add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 8]; ret; 
0x001aaf1a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 9]; ret; 
0x001a9f1b: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xa]; pop edi; ret; 
0x001a9f2b: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xb]; pop edi; ret; 
0x001a9f3b: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xc]; pop edi; ret; 
0x001a9f4b: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xd]; pop edi; ret; 
0x001a9f5b: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xe]; pop edi; ret; 
0x001a9e9a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 1]; pop edi; ret; 
0x001a9eab: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 2]; pop edi; ret; 
0x001a9ebb: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 3]; pop edi; ret; 
0x001a9ecb: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 4]; pop edi; ret; 
0x001a9edb: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 5]; pop edi; ret; 
0x001a9eeb: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 6]; pop edi; ret; 
0x001a9efb: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 8]; pop edi; ret; 
0x001a9f0b: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 9]; pop edi; ret; 
0x001aa37b: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xa]; pop edi; ret; 
0x001aa36b: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xb]; pop edi; ret; 
0x001aa35b: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xd]; pop edi; ret; 
0x001aa34b: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xe]; pop edi; ret; 
0x001aa3eb: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 1]; pop edi; ret; 
0x001aa3db: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 2]; pop edi; ret; 
0x001aa3cb: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 3]; pop edi; ret; 
0x001ac6db: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 4]; pop edi; ret; 
0x001aa3bb: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 5]; pop edi; ret; 
0x001aa3ab: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 6]; pop edi; ret; 
0x001aa39b: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 7]; pop edi; ret; 
0x001aa38b: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 9]; pop edi; ret; 
0x001a9e8a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi]; pop edi; ret; 
0x001ab58a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xa]; ret; 
0x001ab59a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xc]; ret; 
0x001ab5aa: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xd]; ret; 
0x001ab5ba: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xe]; ret; 
0x001ab52a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 2]; ret; 
0x001ab53a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 4]; ret; 
0x001ab54a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 5]; ret; 
0x001ab55a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 6]; ret; 
0x001ab56a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 8]; ret; 
0x001ab57a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 9]; ret; 
0x000bd618: add byte ptr [eax], al; lea esi, [esi]; mov byte ptr [eax], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b3678: add byte ptr [eax], al; lea esi, [esi]; mov byte ptr [ecx], dl; pop ebx; ret; 
0x000b36ba: add byte ptr [eax], al; lea esi, [esi]; mov dword ptr [ecx], edx; mov byte ptr [ecx + 4], dl; pop ebx; ret; 
0x0019f3aa: add byte ptr [eax], al; lea esi, [esi]; mov eax, 1; ja 0x19f3b9; neg eax; ret; 
0x000d97cb: add byte ptr [eax], al; lea esi, [esi]; mov eax, 1; jg 0xd97d9; neg eax; ret; 
0x001acd78: add byte ptr [eax], al; lea esi, [esi]; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; ret; 
0x001ac41b: add byte ptr [eax], al; lea esi, [esi]; mov eax, ecx; ret; 
0x000b369b: add byte ptr [eax], al; lea esi, [esi]; mov word ptr [ecx], dx; mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x000b368a: add byte ptr [eax], al; lea esi, [esi]; mov word ptr [ecx], dx; pop ebx; ret; 
0x000b192b: add byte ptr [eax], al; lea esi, [esi]; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x00031112: add byte ptr [eax], al; lea esi, [esi]; pop ebx; ret; 
0x001ac608: add byte ptr [eax], al; lea esi, [esi]; pop esi; xor eax, eax; pop edi; ret; 
0x001a9f6b: add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; pop edi; ret; 
0x000d99da: add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; ret; 
0x001a9b59: add byte ptr [eax], al; lea esi, cs:[esi]; add eax, 1; ret; 
0x001ac489: add byte ptr [eax], al; lea esi, cs:[esi]; lea eax, [ecx + 8]; ret; 
0x001ab519: add byte ptr [eax], al; lea esi, cs:[esi]; lea eax, [edx + 1]; ret; 
0x001abcf0: add byte ptr [eax], al; lea esi, cs:[esi]; lea esi, [esi]; xor eax, eax; ret; 
0x001a5fe9: add byte ptr [eax], al; lea esi, cs:[esi]; mov eax, 1; ja 0x1a5ff9; neg eax; ret; 
0x000d99e9: add byte ptr [eax], al; lea esi, cs:[esi]; mov eax, 1; ret; 
0x00092ed9: add byte ptr [eax], al; lea esi, cs:[esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x000b3669: add byte ptr [eax], al; lea esi, cs:[esi]; pop ebx; ret; 
0x00179da9: add byte ptr [eax], al; lea esi, cs:[esi]; sub esp, 0xc; mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 4]; 
0x000d97b9: add byte ptr [eax], al; lea esi, cs:[esi]; xor eax, eax; pop edi; pop esi; ret; 
0x000c1309: add byte ptr [eax], al; lea esi, cs:[esi]; xor eax, eax; ret; 
0x0008ec5c: add byte ptr [eax], al; lock cmpxchg dword ptr [ecx], edx; setne al; movzx eax, al; pop ebx; ret; 
0x000a569c: add byte ptr [eax], al; lock dec dword ptr [edi]; inc esp; ret 0x568d; 
0x000a5ce3: add byte ptr [eax], al; lock dec dword ptr [edi]; inc esp; ret 0xf821; 
0x000a1199: add byte ptr [eax], al; lock dec dword ptr [edi]; inc esp; ret 0xff31; 
0x000a5331: add byte ptr [eax], al; lock dec dword ptr [edi]; inc esp; shl dword ptr [ecx], 1; ret 0x1a8b; 
0x000b5a7e: add byte ptr [eax], al; mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; pop edi; ret; 
0x000b16be: add byte ptr [eax], al; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x0004069c: add byte ptr [eax], al; mov byte ptr [eax + ecx], 0; pop ebx; pop esi; ret; 
0x000c0a3e: add byte ptr [eax], al; mov byte ptr [eax], bh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd61e: add byte ptr [eax], al; mov byte ptr [eax], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b367e: add byte ptr [eax], al; mov byte ptr [ecx], dl; pop ebx; ret; 
0x000a17aa: add byte ptr [eax], al; mov byte ptr [esi + 0x3c24], 1; lea ebx, [esi + 0x3c1c]; call dword ptr gs:[0x10]; 
0x00093571: add byte ptr [eax], al; mov byte ptr [esp + 0x47], 0; mov dword ptr [esp + 8], edx; call dword ptr gs:[0x10]; 
0x000d99ae: add byte ptr [eax], al; mov ch, dh; and ch, 0xf; je 0xd99d0; add eax, 2; ret; 
0x000905ca: add byte ptr [eax], al; mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 8], 0x10; xor eax, eax; ret; 
0x000794f9: add byte ptr [eax], al; mov dword ptr [eax + 0x14], 2; mov dword ptr [eax + 0x18], edx; ret; 
0x00079500: add byte ptr [eax], al; mov dword ptr [eax + 0x18], edx; ret; 
0x0008ce30: add byte ptr [eax], al; mov dword ptr [eax + 0x1a7c], 0; ret; 
0x0008e729: add byte ptr [eax], al; mov dword ptr [eax + 0x1c], edx; mov edx, dword ptr gs:[0x78]; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x0008e733: add byte ptr [eax], al; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x000a0b19: add byte ptr [eax], al; mov dword ptr [eax + 0x378], 1; ret; 
0x000a0786: add byte ptr [eax], al; mov dword ptr [eax + 0x3bd4], 0; ret; 
0x000905c3: add byte ptr [eax], al; mov dword ptr [eax + 0xc], 0; mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 8], 0x10; xor eax, eax; ret; 
0x0004220b: add byte ptr [eax], al; mov dword ptr [eax + 0xc], 0x1000b; xor eax, eax; ret; 
0x0009d633: add byte ptr [eax], al; mov dword ptr [eax + 0xc], ecx; ret; 
0x0008e76a: add byte ptr [eax], al; mov dword ptr [eax + 0xc], edx; mov dword ptr gs:[0x78], eax; ret; 
0x0017cafc: add byte ptr [eax], al; mov dword ptr [eax + 0xc], edx; mov eax, ecx; pop ebx; ret; 
0x0017cabc: add byte ptr [eax], al; mov dword ptr [eax + 0xc], edx; mov eax, ecx; ret; 
0x000909f3: add byte ptr [eax], al; mov dword ptr [eax + 0xc], edx; xor eax, eax; pop ebx; ret; 
0x00156a3a: add byte ptr [eax], al; mov dword ptr [eax + 0xf8], ecx; mov dword ptr [eax + 0xfc], edx; ret; 
0x00156a40: add byte ptr [eax], al; mov dword ptr [eax + 0xfc], edx; ret; 
0x0015104d: add byte ptr [eax], al; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; add esp, 0x18; pop ebx; ret; 
0x0008ba52: add byte ptr [eax], al; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; ret; 
0x0017073c: add byte ptr [eax], al; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x0010b467: add byte ptr [eax], al; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x00099acc: add byte ptr [eax], al; mov dword ptr [eax + 4], 0; xor eax, eax; ret; 
0x00141b21: add byte ptr [eax], al; mov dword ptr [eax + 4], 0x29; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00170674: add byte ptr [eax], al; mov dword ptr [eax + 4], 1; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x001706ca: add byte ptr [eax], al; mov dword ptr [eax + 4], ecx; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x0017068c: add byte ptr [eax], al; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x0017069f: add byte ptr [eax], al; mov dword ptr [eax + 4], edx; pop ebx; ret; 
0x00151054: add byte ptr [eax], al; mov dword ptr [eax + 8], 0; add esp, 0x18; pop ebx; ret; 
0x0010b460: add byte ptr [eax], al; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x0008ba59: add byte ptr [eax], al; mov dword ptr [eax + 8], 0; ret; 
0x000905d1: add byte ptr [eax], al; mov dword ptr [eax + 8], 0x10; xor eax, eax; ret; 
0x0005bb4c: add byte ptr [eax], al; mov dword ptr [eax + 8], ecx; mov dword ptr [eax + 4], edx; mov dword ptr [eax], edx; ret; 
0x0017067b: add byte ptr [eax], al; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x000d47e6: add byte ptr [eax], al; mov dword ptr [eax + 8], edx; mov eax, esi; pop ebx; pop esi; ret; 
0x00173be4: add byte ptr [eax], al; mov dword ptr [eax + 8], edx; ret; 
0x00095a63: add byte ptr [eax], al; mov dword ptr [eax + 8], edx; xor edx, edx; mov eax, edx; ret; 
0x000348f3: add byte ptr [eax], al; mov dword ptr [eax + ebx], edx; pop ebx; pop esi; ret; 
0x0017916e: add byte ptr [eax], al; mov dword ptr [eax + edx], ecx; ret; 
0x0003d0ac: add byte ptr [eax], al; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x00170686: add byte ptr [eax], al; mov dword ptr [eax], 0x10; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x0017071e: add byte ptr [eax], al; mov dword ptr [eax], 0xa; pop ebx; ret; 
0x0017072e: add byte ptr [eax], al; mov dword ptr [eax], 8; pop ebx; ret; 
0x0008dd8d: add byte ptr [eax], al; mov dword ptr [eax], edx; add esp, 4; pop ebx; pop esi; ret; 
0x0005adef: add byte ptr [eax], al; mov dword ptr [eax], edx; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x000959c8: add byte ptr [eax], al; mov dword ptr [eax], edx; ret; 
0x00023279: add byte ptr [eax], al; mov dword ptr [ebp + 0x137c], 1; call dword ptr gs:[0x10]; 
0x0003ef50: add byte ptr [eax], al; mov dword ptr [ebp + edi], edx; push dword ptr [ebx + 4]; call eax; 
0x00157638: add byte ptr [eax], al; mov dword ptr [ebx + 0x4e78], 0; call esi; 
0x001575b0: add byte ptr [eax], al; mov dword ptr [ebx + 0x5eb8], 0; call esi; 
0x00157528: add byte ptr [eax], al; mov dword ptr [ebx + 0x6ef8], 0; call esi; 
0x001574a0: add byte ptr [eax], al; mov dword ptr [ebx + 0x7f38], 0; call esi; 
0x00157418: add byte ptr [eax], al; mov dword ptr [ebx + 0x8f78], 0; call esi; 
0x0018527e: add byte ptr [eax], al; mov dword ptr [ebx + 0xc], 0; pop ebx; ret; 
0x00148ab0: add byte ptr [eax], al; mov dword ptr [ebx + 0xc], 1; add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x0018653e: add byte ptr [eax], al; mov dword ptr [ebx + 0xc], eax; add esp, 0x28; pop ebx; ret; 
0x0008dde0: add byte ptr [eax], al; mov dword ptr [ebx + 0xc], eax; add esp, 4; pop ebx; pop esi; ret; 
0x00186591: add byte ptr [eax], al; mov dword ptr [ebx + 8], eax; add esp, 0x28; pop ebx; ret; 
0x00186b1a: add byte ptr [eax], al; mov dword ptr [ebx], eax; add esp, 0x28; pop ebx; ret; 
0x0009cf5e: add byte ptr [eax], al; mov dword ptr [ecx + 0x10], eax; mov dword ptr [edx + 0x3ba8], ecx; ret; 
0x0017ca43: add byte ptr [eax], al; mov dword ptr [ecx + 0x14], edx; ret; 
0x00176992: add byte ptr [eax], al; mov dword ptr [ecx + 8], eax; mov dword ptr [ecx + 0xc], edx; mov eax, 1; pop ebx; ret; 
0x0003d0c2: add byte ptr [eax], al; mov dword ptr [ecx + eax], 0x16; mov eax, 0xffffffff; ret; 
0x00117a73: add byte ptr [eax], al; mov dword ptr [ecx + eax], 0x16; mov eax, 1; ret; 
0x00084773: add byte ptr [eax], al; mov dword ptr [ecx + eax], 9; mov eax, 0xffffffff; ret; 
0x00157a13: add byte ptr [eax], al; mov dword ptr [ecx + edx], eax; add esp, 4; pop ebx; pop esi; ret; 
0x00024f6c: add byte ptr [eax], al; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; ret; 
0x000799f5: add byte ptr [eax], al; mov dword ptr [ecx], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0012e1ce: add byte ptr [eax], al; mov dword ptr [ecx], ebx; int 0x80; 
0x000b36de: add byte ptr [eax], al; mov dword ptr [ecx], edx; mov dword ptr [ecx + 3], edx; pop ebx; ret; 
0x000b36ae: add byte ptr [eax], al; mov dword ptr [ecx], edx; pop ebx; ret; 
0x0009705a: add byte ptr [eax], al; mov dword ptr [edi + 4], edx; xor esi, esi; xor edx, edx; call dword ptr gs:[0x10]; 
0x0007d5ec: add byte ptr [eax], al; mov dword ptr [edx + 0x1a40], 0; ret; 
0x0008756c: add byte ptr [eax], al; mov dword ptr [edx + 0x1a54], 0; ret; 
0x0008cdac: add byte ptr [eax], al; mov dword ptr [edx + 0x1a74], 0; ret; 
0x00099484: add byte ptr [eax], al; mov dword ptr [edx + 0x1c], eax; xor eax, eax; pop ebx; ret; 
0x0009d62d: add byte ptr [eax], al; mov dword ptr [edx + 0x3bac], eax; mov dword ptr [eax + 0xc], ecx; ret; 
0x0011563c: add byte ptr [eax], al; mov dword ptr [edx + 4], 0; pop esi; pop edi; ret; 
0x0005ac04: add byte ptr [eax], al; mov dword ptr [edx + 8], ebx; add esp, 4; pop ebx; pop esi; ret; 
0x00126cd3: add byte ptr [eax], al; mov dword ptr [edx + eax], 0x16; add esp, 4; pop ebx; pop esi; ret; 
0x0013d18b: add byte ptr [eax], al; mov dword ptr [edx + eax], 0x16; add esp, 8; mov eax, 0xffffffff; pop ebx; ret; 
0x0003c6db: add byte ptr [eax], al; mov dword ptr [edx + eax], 0x16; mov eax, 0xffffffff; ret; 
0x00189d0b: add byte ptr [eax], al; mov dword ptr [edx + eax], 0x16; xor eax, eax; ret; 
0x0003d269: add byte ptr [eax], al; mov dword ptr [edx + eax], 0x26; mov eax, 0xffffffff; ret; 
0x0008443d: add byte ptr [eax], al; mov dword ptr [edx], 0; pop ebx; pop esi; pop edi; ret; 
0x0005acd2: add byte ptr [eax], al; mov dword ptr [edx], 0; ret; 
0x0009484e: add byte ptr [eax], al; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000f08a8: add byte ptr [eax], al; mov dword ptr [edx], ecx; add esp, 0x24; pop ebx; pop esi; ret; 
0x000408a6: add byte ptr [eax], al; mov dword ptr [edx], ecx; ret; 
0x0016bef1: add byte ptr [eax], al; mov dword ptr [esi + 0x18], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0008af15: add byte ptr [eax], al; mov dword ptr [esi + 0x28], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0008ca9d: add byte ptr [eax], al; mov dword ptr [esi + 0x28], 0; add esp, 4; pop ebx; pop esi; ret; 
0x0015bf8e: add byte ptr [eax], al; mov dword ptr [esi + 0xc], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016e6b6: add byte ptr [eax], al; mov dword ptr [esi + 0xc], eax; push esi; push dword ptr [esp + 0x14]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x00125dfd: add byte ptr [eax], al; mov dword ptr [esp + 0x100c], ebx; xor ebx, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000db582: add byte ptr [eax], al; mov dword ptr [esp + 0x104], edi; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x30]; mov eax, dword ptr [esp + 0x64]; call eax; 
0x00131a22: add byte ptr [eax], al; mov dword ptr [esp + 0x10], eax; mov eax, dword ptr [esp + 0x40]; mov dword ptr [esp + 0x14], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000e8c64: add byte ptr [eax], al; mov dword ptr [esp + 0x13c], ecx; mov ecx, dword ptr [esp + 0x164]; call dword ptr gs:[0x10]; 
0x00070afa: add byte ptr [eax], al; mov dword ptr [esp + 0x14], 0; jmp edx; 
0x00070e7a: add byte ptr [eax], al; mov dword ptr [esp + 0x14], 1; jmp edx; 
0x000e7a6c: add byte ptr [eax], al; mov dword ptr [esp + 0x14], edi; call dword ptr gs:[0x10]; 
0x00053304: add byte ptr [eax], al; mov dword ptr [esp + 0x14], esi; mov esi, dword ptr [esp + 0x28]; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x00131309: add byte ptr [eax], al; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001329da: add byte ptr [eax], al; mov dword ptr [esp + 0x18], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00115b6a: add byte ptr [eax], al; mov dword ptr [esp + 0x18c], ebp; mov ebp, dword ptr [esp + 0x1b8]; call dword ptr gs:[0x10]; 
0x000de90e: add byte ptr [eax], al; mov dword ptr [esp + 0x1c], edx; mov edx, dword ptr [esp + 0x34]; mov ebx, dword ptr [esp + 0x30]; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012fdbf: add byte ptr [eax], al; mov dword ptr [esp + 0x1c], edx; mov edx, dword ptr [esp + 0x34]; mov ebx, dword ptr [esp + 0x30]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000704f7: add byte ptr [eax], al; mov dword ptr [esp + 0x20], 1; jmp edx; 
0x0003d8a3: add byte ptr [eax], al; mov dword ptr [esp + 0x20], eax; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x000642f6: add byte ptr [eax], al; mov dword ptr [esp + 0x24], 0; jmp eax; 
0x0009db27: add byte ptr [eax], al; mov dword ptr [esp + 0x28], ecx; mov edx, ecx; mov ecx, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0009a526: add byte ptr [eax], al; mov dword ptr [esp + 0x2c], eax; mov eax, dword ptr [esp + 0xc8]; mov dword ptr [esp + 0x30], eax; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x000a000d: add byte ptr [eax], al; mov dword ptr [esp + 0x2c], edx; mov dword ptr [esp + 0x34], 4; call dword ptr gs:[0x10]; 
0x000701f1: add byte ptr [eax], al; mov dword ptr [esp + 0x30], 0; jmp ebx; 
0x0009a531: add byte ptr [eax], al; mov dword ptr [esp + 0x30], eax; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x000db3f4: add byte ptr [eax], al; mov dword ptr [esp + 0x30], eax; push eax; mov eax, dword ptr [esp + 0x64]; call eax; 
0x000706ba: add byte ptr [eax], al; mov dword ptr [esp + 0x3c], 0; jmp edx; 
0x0012fed0: add byte ptr [eax], al; mov dword ptr [esp + 0x3c], esi; mov esi, dword ptr [esp + 0x64]; mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0009f5d3: add byte ptr [eax], al; mov dword ptr [esp + 0x44], 2; call dword ptr gs:[0x10]; 
0x001231ce: add byte ptr [eax], al; mov dword ptr [esp + 0x4c], edx; mov edx, dword ptr [esp + 0x64]; mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x0012dd89: add byte ptr [eax], al; mov dword ptr [esp + 0x68], eax; mov eax, dword ptr [edx + 0xa0]; mov dword ptr [esp + 0x6c], eax; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x0012dd93: add byte ptr [eax], al; mov dword ptr [esp + 0x6c], eax; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x0010d2a4: add byte ptr [eax], al; mov dword ptr [esp + 0xac], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0010d016: add byte ptr [eax], al; mov dword ptr [esp + 0xac], eax; mov eax, 0xaf; mov dword ptr [esp + 0xb8], 0; call dword ptr gs:[0x10]; 
0x0010d022: add byte ptr [eax], al; mov dword ptr [esp + 0xb8], 0; call dword ptr gs:[0x10]; 
0x000a6c0c: add byte ptr [eax], al; mov dword ptr [esp + 0xc], eax; call dword ptr [edx]; 
0x0010beef: add byte ptr [eax], al; mov dword ptr [esp + 0xc], edx; mov edx, dword ptr [esp + 0x24]; mov ebx, dword ptr [esp + 0x20]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0013125e: add byte ptr [eax], al; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00070b5c: add byte ptr [eax], al; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x48], 1; jmp eax; 
0x0007c1a0: add byte ptr [eax], al; mov dword ptr [esp + 4], edx; jmp eax; 
0x0016eeea: add byte ptr [eax], al; mov dword ptr [esp + 4], edx; sub esp, 0xc; push eax; call dword ptr [ecx + 0xc]; 
0x00131fce: add byte ptr [eax], al; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00173c10: add byte ptr [eax], al; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x00094e93: add byte ptr [eax], al; mov dword ptr [esp + 8], edx; mov ebx, ebp; mov esi, 8; call dword ptr gs:[0x10]; 
0x0007c0a1: add byte ptr [eax], al; mov dword ptr [esp + 8], edx; pop ebx; jmp eax; 
0x000bd62e: add byte ptr [eax], al; mov dx, word ptr [esi]; mov word ptr [eax], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000e7ce7: add byte ptr [eax], al; mov eax, 0x10b; mov ecx, dword ptr [esp + 0x54]; mov edx, edi; call dword ptr gs:[0x10]; 
0x0009f4f6: add byte ptr [eax], al; mov eax, 0x119; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00114fd4: add byte ptr [eax], al; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x00114dd5: add byte ptr [eax], al; mov eax, 0x133; call dword ptr gs:[0x10]; 
0x0018c456: add byte ptr [eax], al; mov eax, 0x16; pop ebx; ret; 
0x00098046: add byte ptr [eax], al; mov eax, 0x16; ret; 
0x000e79e4: add byte ptr [eax], al; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000e7c84: add byte ptr [eax], al; mov eax, 0x197; mov ecx, dword ptr [esp + 0x54]; mov edx, edi; mov esi, ebp; call dword ptr gs:[0x10]; 
0x00114f65: add byte ptr [eax], al; mov eax, 0x1c4; mov esi, dword ptr [esp + 0xbc]; call dword ptr gs:[0x10]; 
0x000fb14b: add byte ptr [eax], al; mov eax, 0x20; cmp dword ptr [ecx + edx], 0x26; je 0xfb13f; mov eax, 0xffffffff; ret; 
0x00122a3d: add byte ptr [eax], al; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000907f2: add byte ptr [eax], al; mov eax, 0x5f; cmovne eax, edx; ret; 
0x001304de: add byte ptr [eax], al; mov eax, 0x6a; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0012f11e: add byte ptr [eax], al; mov eax, 0x6b; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0012eea5: add byte ptr [eax], al; mov eax, 0x6c; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0010e701: add byte ptr [eax], al; mov eax, 0x72; mov ebx, dword ptr [esp + 0x80]; call dword ptr gs:[0x10]; 
0x0010e6a5: add byte ptr [eax], al; mov eax, 0x72; mov ecx, ebp; mov esi, edi; mov edx, dword ptr [esp + 0x88]; call dword ptr gs:[0x10]; 
0x00132b82: add byte ptr [eax], al; mov eax, 0x75; mov ebx, 0xe; mov esi, edi; mov edx, 0x100; call dword ptr gs:[0x10]; 
0x00132bce: add byte ptr [eax], al; mov eax, 0x75; xor esi, esi; mov edx, ebx; mov ebx, 0xe; call dword ptr gs:[0x10]; 
0x0013379d: add byte ptr [eax], al; mov eax, 0x75; xor esi, esi; or dh, 1; mov ebx, 0x18; call dword ptr gs:[0x10]; 
0x00040268: add byte ptr [eax], al; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x00134046: add byte ptr [eax], al; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; call dword ptr gs:[0x10]; 
0x0009399f: add byte ptr [eax], al; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x00092acd: add byte ptr [eax], al; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0003c7ea: add byte ptr [eax], al; mov eax, 0xae; mov esi, 8; lea edx, [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x0003c88d: add byte ptr [eax], al; mov eax, 0xae; mov esi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0010d2ab: add byte ptr [eax], al; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0009db22: add byte ptr [eax], al; mov eax, 0xaf; mov dword ptr [esp + 0x28], ecx; mov edx, ecx; mov ecx, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0010d01d: add byte ptr [eax], al; mov eax, 0xaf; mov dword ptr [esp + 0xb8], 0; call dword ptr gs:[0x10]; 
0x0009a432: add byte ptr [eax], al; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x001abc34: add byte ptr [eax], al; mov eax, 0xc; pop edi; ret; 
0x00094f46: add byte ptr [eax], al; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x0009dff5: add byte ptr [eax], al; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0009744a: add byte ptr [eax], al; mov eax, 0xf0; mov ecx, 8; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x00095372: add byte ptr [eax], al; mov eax, 0xf0; xor ecx, ecx; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008f813: add byte ptr [eax], al; mov eax, 0xf0; xor esi, esi; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00025872: add byte ptr [eax], al; mov eax, 0xffffffff; add esp, 0xc; ret; 
0x0009aefa: add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; pop esi; pop edi; ret; 
0x0003c742: add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0003d182: add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; ret; 
0x0003c6e2: add byte ptr [eax], al; mov eax, 0xffffffff; ret; 
0x0009c316: add byte ptr [eax], al; mov eax, 1; add esp, 0xc; ret; 
0x000fb2ab: add byte ptr [eax], al; mov eax, 1; cmp dword ptr [ecx + edx], 0x26; je 0xfb2c2; mov eax, 0xffffffff; ret; 
0x000a6dd6: add byte ptr [eax], al; mov eax, 1; ret; 
0x001abb8b: add byte ptr [eax], al; mov eax, 4; pop edi; ret; 
0x001abbe4: add byte ptr [eax], al; mov eax, 8; pop edi; ret; 
0x00125241: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x108]; mov eax, dword ptr [eax + 0x20]; test eax, eax; cmove eax, edx; ret; 
0x00032ba3: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x170]; mov eax, dword ptr [edx + eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x54]; ret; 
0x00034033: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x170]; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0014b103: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1c8]; mov eax, dword ptr [edx + eax]; ret; 
0x000c3104: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1c8]; ret; 
0x000c3114: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1cc]; ret; 
0x000c3124: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1d0]; ret; 
0x000c3134: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1d4]; ret; 
0x000c3144: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1d8]; ret; 
0x000c3154: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1dc]; ret; 
0x000c3164: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1e0]; ret; 
0x000c3174: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1e4]; ret; 
0x000c3184: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1e8]; ret; 
0x000c3194: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1ec]; ret; 
0x000c31a4: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x000c30f4: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x00134742: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x20]; ret; 
0x00125247: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x20]; test eax, eax; cmove eax, edx; ret; 
0x00170ef5: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x2398]; sub esp, 8; push 0; push ebx; call dword ptr [eax + 0x14]; 
0x0008e81c: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x24]; test eax, eax; jne 0x8e830; ret; 
0x00053520: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x34]; add esp, 4; pop ebx; pop esi; ret; 
0x0008b9a5: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x34]; test eax, eax; jne 0x8b9a0; ret; 
0x00186917: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x3a0]; test eax, eax; je 0x186930; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x30]; 
0x0008e964: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x90]; shr eax, 0xb; and eax, 1; mov dword ptr [edx + 0x1ac8], eax; ret; 
0x00125763: add byte ptr [eax], al; mov eax, dword ptr [eax + 0xc]; test eax, eax; je 0x12576d; ret; 
0x0010bb3e: add byte ptr [eax], al; mov eax, dword ptr [eax + 4]; test eax, eax; je 0x10ba8f; call eax; 
0x0010bbf6: add byte ptr [eax], al; mov eax, dword ptr [eax + 4]; test eax, eax; je 0x10bae2; call eax; 
0x0010bb9e: add byte ptr [eax], al; mov eax, dword ptr [eax + 8]; test eax, eax; je 0x10ba8f; call eax; 
0x0017813a: add byte ptr [eax], al; mov eax, dword ptr [eax]; sub esp, 0xc; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x0017460c: add byte ptr [eax], al; mov eax, dword ptr [ebp + 0xb0]; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x00086294: add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x3c]; sub esp, 0xc; push esi; call dword ptr [eax + 0x30]; 
0x0016ef0a: add byte ptr [eax], al; mov eax, dword ptr [ebx + 0x10]; push 0; push esi; call dword ptr [eax + 0x14]; 
0x0016f081: add byte ptr [eax], al; mov eax, dword ptr [ebx + 0x10]; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x0017940e: add byte ptr [eax], al; mov eax, dword ptr [ebx + 0x190]; pop ebx; pop esi; pop edi; ret; 
0x0017949e: add byte ptr [eax], al; mov eax, dword ptr [ebx + 0x1a0]; pop ebx; pop esi; pop edi; ret; 
0x0003457c: add byte ptr [eax], al; mov eax, dword ptr [ecx + eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0003453c: add byte ptr [eax], al; mov eax, dword ptr [ecx + eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x2c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x000b59ae: add byte ptr [eax], al; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; lea eax, [edx + 3]; pop edi; ret; 
0x000b15ee: add byte ptr [eax], al; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x001acd7e: add byte ptr [eax], al; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; ret; 
0x00177083: add byte ptr [eax], al; mov eax, dword ptr [edi + 0x50]; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x0009a5e9: add byte ptr [eax], al; mov eax, dword ptr [edx + 0x80]; and eax, 0x39; cmp eax, 8; je 0x9a5fa; ret; 
0x0017b8f6: add byte ptr [eax], al; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x00032ba9: add byte ptr [eax], al; mov eax, dword ptr [edx + eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x54]; ret; 
0x00034039: add byte ptr [eax], al; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x000344f9: add byte ptr [eax], al; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x000344c9: add byte ptr [eax], al; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x00034499: add byte ptr [eax], al; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x000343d9: add byte ptr [eax], al; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x00034439: add byte ptr [eax], al; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x00034349: add byte ptr [eax], al; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x00034409: add byte ptr [eax], al; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x000343a9: add byte ptr [eax], al; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x000345a9: add byte ptr [eax], al; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x00034379: add byte ptr [eax], al; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x00034469: add byte ptr [eax], al; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x00034319: add byte ptr [eax], al; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x0014b109: add byte ptr [eax], al; mov eax, dword ptr [edx + eax]; ret; 
0x0008f9a6: add byte ptr [eax], al; mov eax, dword ptr [edx]; mov ebx, dword ptr [edx + 4]; mov ecx, dword ptr [edx + 8]; mov edx, dword ptr [edx + 0xc]; call dword ptr gs:[0x10]; 
0x00177dd7: add byte ptr [eax], al; mov eax, dword ptr [esi + 0x3c]; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x00134aea: add byte ptr [eax], al; mov eax, dword ptr [esp + 0x10]; mov eax, dword ptr [eax + 0x4c]; call 0x134990; add esp, 4; ret; 
0x0016ebad: add byte ptr [eax], al; mov eax, dword ptr [esp + 0x18]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0010d29d: add byte ptr [eax], al; mov eax, dword ptr [esp + 0x23c]; mov dword ptr [esp + 0xac], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x001abb2e: add byte ptr [eax], al; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x0010cd0c: add byte ptr [eax], al; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x00179168: add byte ptr [eax], al; mov eax, dword ptr gs:[0]; mov dword ptr [eax + edx], ecx; ret; 
0x00123ba2: add byte ptr [eax], al; mov eax, ebx; add esp, 4; pop ebx; pop esi; ret; 
0x00135311: add byte ptr [eax], al; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0003d527: add byte ptr [eax], al; mov eax, ecx; ret; 
0x000c01de: add byte ptr [eax], al; mov eax, edi; pop ebx; pop edi; ret; 
0x000baa9e: add byte ptr [eax], al; mov eax, edi; pop edi; pop esi; pop ebx; ret; 
0x001aaa4e: add byte ptr [eax], al; mov eax, edi; pop edi; ret; 
0x00182b8d: add byte ptr [eax], al; mov eax, edx; pop ebx; pop esi; pop edi; ret; 
0x00152b8c: add byte ptr [eax], al; mov eax, edx; pop ebx; pop esi; ret; 
0x000b430e: add byte ptr [eax], al; mov eax, edx; pop ebx; ret; 
0x001948af: add byte ptr [eax], al; mov eax, edx; pop edi; pop esi; pop ebx; ret; 
0x0008682b: add byte ptr [eax], al; mov eax, edx; ret; 
0x00061ceb: add byte ptr [eax], al; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00181f54: add byte ptr [eax], al; mov eax, esi; pop ebx; pop esi; ret; 
0x00122a6b: add byte ptr [eax], al; mov ebp, dword ptr [eax + edi]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00115b71: add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x1b8]; call dword ptr gs:[0x10]; 
0x000ea07d: add byte ptr [eax], al; mov ebx, 0x1200011; lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x0012fb15: add byte ptr [eax], al; mov ebx, 0x53564d41; call dword ptr gs:[0x10]; 
0x001328db: add byte ptr [eax], al; mov ebx, 0xb; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x00132b87: add byte ptr [eax], al; mov ebx, 0xe; mov esi, edi; mov edx, 0x100; call dword ptr gs:[0x10]; 
0x00121f72: add byte ptr [eax], al; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x0011f7a0: add byte ptr [eax], al; mov ebx, 0xffffff9c; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0011f8a6: add byte ptr [eax], al; mov ebx, 0xffffff9c; mov edx, edi; call dword ptr gs:[0x10]; 
0x0012b3e9: add byte ptr [eax], al; mov ebx, 0xffffffff; mov edx, 0xffffffff; call dword ptr gs:[0x10]; 
0x000938a0: add byte ptr [eax], al; mov ebx, 2; mov ecx, dword ptr [esp + 8]; xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x00092d13: add byte ptr [eax], al; mov ebx, 2; mov esi, 8; add ecx, 0x474; call dword ptr gs:[0x10]; 
0x0010d200: add byte ptr [eax], al; mov ebx, 2; xor edx, edx; mov ecx, dword ptr [esp + 4]; mov esi, 8; call dword ptr gs:[0x10]; 
0x0010d604: add byte ptr [eax], al; mov ebx, 2; xor edx, edx; mov esi, 8; mov ecx, dword ptr [ebp - 0x144]; call dword ptr gs:[0x10]; 
0x00192a0d: add byte ptr [eax], al; mov ebx, 3; call dword ptr gs:[0x10]; 
0x0013307f: add byte ptr [eax], al; mov ebx, 3; mov dword ptr [esp + 0x18], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0012e38b: add byte ptr [eax], al; mov ebx, 3; mov ecx, 0x7fffffff; mov esi, 5; call dword ptr gs:[0x10]; 
0x000704b1: add byte ptr [eax], al; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x00133ede: add byte ptr [eax], al; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; call dword ptr gs:[0x10]; 
0x00133e6d: add byte ptr [eax], al; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; mov edx, 0x40; call dword ptr gs:[0x10]; 
0x000a011e: add byte ptr [eax], al; mov ebx, dword ptr [ebp]; call dword ptr gs:[0x10]; 
0x0011f709: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0012f2a1: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0012f014: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x0011e658: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xb7; mov ecx, esi; call dword ptr gs:[0x10]; 
0x001300a0: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x60]; mov ecx, dword ptr [esp + 0x64]; lea esi, [esp + 0x2c]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x0010e706: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x80]; call dword ptr gs:[0x10]; 
0x0012ee9e: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x84]; mov eax, 0x6c; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0012dc71: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0xc0]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00092533: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0xc]; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00091e29: add byte ptr [eax], al; mov ebx, dword ptr [esp + 4]; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009f183: add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000fb697: add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; neg eax; pop ebx; ret; 
0x0003c993: add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; mov ecx, 8; call dword ptr gs:[0x10]; 
0x0011fcd3: add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x000921a1: add byte ptr [eax], al; mov ebx, dword ptr [esp]; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00125df6: add byte ptr [eax], al; mov ebx, dword ptr gs:[0x14]; mov dword ptr [esp + 0x100c], ebx; xor ebx, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00095539: add byte ptr [eax], al; mov ebx, ebp; xor edx, edx; mov ecx, 7; xor esi, esi; call dword ptr gs:[0x10]; 
0x00092f0f: add byte ptr [eax], al; mov ebx, edi; call dword ptr gs:[0x10]; 
0x000962ea: add byte ptr [eax], al; mov ebx, edi; xor edx, edx; mov ecx, 7; xor esi, esi; call dword ptr gs:[0x10]; 
0x0003c964: add byte ptr [eax], al; mov ebx, edx; cmp eax, 0xfffff001; jae 0x24f50; ret; 
0x001214e0: add byte ptr [eax], al; mov ebx, edx; ret; 
0x0009febe: add byte ptr [eax], al; mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00121d0b: add byte ptr [eax], al; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x00122a66: add byte ptr [eax], al; mov ecx, 0x5401; mov ebp, dword ptr [eax + edi]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00122d06: add byte ptr [eax], al; mov ecx, 0x5409; mov edx, 1; call dword ptr gs:[0x10]; 
0x0012e390: add byte ptr [eax], al; mov ecx, 0x7fffffff; mov esi, 5; call dword ptr gs:[0x10]; 
0x00098202: add byte ptr [eax], al; mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x0008f21c: add byte ptr [eax], al; mov ecx, 0x80; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008e6d2: add byte ptr [eax], al; mov ecx, 0x80; xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x0008fa22: add byte ptr [eax], al; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00186de4: add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00092f05: add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; mov ebx, edi; call dword ptr gs:[0x10]; 
0x0009829f: add byte ptr [eax], al; mov ecx, 0x81; xor esi, esi; mov edx, 0x7fffffff; mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x0008fa51: add byte ptr [eax], al; mov ecx, 0x81; xor esi, esi; mov edx, 1; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x00095d2c: add byte ptr [eax], al; mov ecx, 0x87; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x000ea0a4: add byte ptr [eax], al; mov ecx, 0xc; lea ebx, [eax + 0x6c]; mov dword ptr [eax + 0x6c], ebx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x0010d5a8: add byte ptr [eax], al; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x000c2bea: add byte ptr [eax], al; mov ecx, 0xffffffff; cmovb eax, ecx; ret; 
0x00097c93: add byte ptr [eax], al; mov ecx, 1; mov edx, 1; call dword ptr gs:[0x10]; 
0x0018c4cd: add byte ptr [eax], al; mov ecx, 1; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x00097788: add byte ptr [eax], al; mov ecx, 7; xor esi, esi; mov dword ptr [ebx + 4], edx; xor edx, edx; call dword ptr gs:[0x10]; 
0x0003c9f5: add byte ptr [eax], al; mov ecx, 8; call dword ptr gs:[0x10]; 
0x0009744f: add byte ptr [eax], al; mov ecx, 8; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x0007bf51: add byte ptr [eax], al; mov ecx, dword ptr [eax + 0x58]; mov dword ptr [ecx + 0x88], edx; ret; 
0x0010d610: add byte ptr [eax], al; mov ecx, dword ptr [ebp - 0x144]; call dword ptr gs:[0x10]; 
0x00133f9c: add byte ptr [eax], al; mov ecx, dword ptr [ebp - 0x510]; mov dword ptr [ebp - 0x4e8], eax; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x00090b86: add byte ptr [eax], al; mov ecx, dword ptr [edi + 0xc]; xor cl, 0x81; mov dword ptr [edi], 0; call dword ptr gs:[0x10]; 
0x0009d627: add byte ptr [eax], al; mov ecx, dword ptr [edx + 0x3bac]; mov dword ptr [edx + 0x3bac], eax; mov dword ptr [eax + 0xc], ecx; ret; 
0x0012ef03: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00132acf: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0019297d: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00132fbd: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x000e8c6b: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x164]; call dword ptr gs:[0x10]; 
0x00070aaf: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x4c]; mov dword ptr [esp + 4], ecx; jmp eax; 
0x0012052d: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x54]; mov eax, 0x19e; mov edi, 8; call dword ptr gs:[0x10]; 
0x000e7cec: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x54]; mov edx, edi; call dword ptr gs:[0x10]; 
0x000e7c89: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x54]; mov edx, edi; mov esi, ebp; call dword ptr gs:[0x10]; 
0x0012f5f3: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x64]; mov ebx, dword ptr [esp + 0x60]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x0011f401: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0008f067: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov eax, 0x1a6; xor edx, edx; call dword ptr gs:[0x10]; 
0x000612c3: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00131b6a: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x000dbe03: add byte ptr [eax], al; mov ecx, dword ptr [esp + 8]; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x00093f25: add byte ptr [eax], al; mov ecx, dword ptr [esp + 8]; xor edx, edx; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x000938a5: add byte ptr [eax], al; mov ecx, dword ptr [esp + 8]; xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x000e8c5d: add byte ptr [eax], al; mov ecx, dword ptr gs:[0x14]; mov dword ptr [esp + 0x13c], ecx; mov ecx, dword ptr [esp + 0x164]; call dword ptr gs:[0x10]; 
0x0010e5b8: add byte ptr [eax], al; mov ecx, ebp; mov edx, dword ptr [esp + 0x88]; call dword ptr gs:[0x10]; 
0x0003d59a: add byte ptr [eax], al; mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x0009fb7f: add byte ptr [eax], al; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x0009f8b9: add byte ptr [eax], al; mov ecx, ebp; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0010e6aa: add byte ptr [eax], al; mov ecx, ebp; mov esi, edi; mov edx, dword ptr [esp + 0x88]; call dword ptr gs:[0x10]; 
0x0009ddf2: add byte ptr [eax], al; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000a0253: add byte ptr [eax], al; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00131ae6: add byte ptr [eax], al; mov ecx, edx; mov edx, edi; mov edi, ebp; call dword ptr gs:[0x10]; 
0x0009f4fb: add byte ptr [eax], al; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0011546b: add byte ptr [eax], al; mov ecx, esi; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00115291: add byte ptr [eax], al; mov ecx, esi; mov edx, edi; call dword ptr gs:[0x10]; 
0x00120536: add byte ptr [eax], al; mov edi, 8; call dword ptr gs:[0x10]; 
0x00122a60: add byte ptr [eax], al; mov edi, dword ptr [ebp + 0xa4]; mov ecx, 0x5401; mov ebp, dword ptr [eax + edi]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00133681: add byte ptr [eax], al; mov edi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00064f94: add byte ptr [eax], al; mov edi, eax; jmp edx; 
0x00122d41: add byte ptr [eax], al; mov edi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00064621: add byte ptr [eax], al; mov edi, ecx; jmp edx; 
0x000644ed: add byte ptr [eax], al; mov edi, ecx; mov dword ptr [esp + 0x10], 0; jmp edx; 
0x0006449d: add byte ptr [eax], al; mov edi, ecx; mov dword ptr [esp + 0x10], 1; jmp edx; 
0x00065161: add byte ptr [eax], al; mov edi, ecx; mov dword ptr [esp + 0x44], 0; jmp edx; 
0x000fb191: add byte ptr [eax], al; mov edx, 0x20; cmovne eax, edx; ret; 
0x000fb1a9: add byte ptr [eax], al; mov edx, 0x40; cmove eax, edx; ret; 
0x000910a4: add byte ptr [eax], al; mov edx, 0x7fffffff; call dword ptr gs:[0x10]; 
0x00098470: add byte ptr [eax], al; mov edx, 0x7fffffff; setne cl; shl ecx, 7; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00099678: add byte ptr [eax], al; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009683b: add byte ptr [eax], al; mov edx, 0x7fffffff; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00098862: add byte ptr [eax], al; mov edx, 0x7fffffff; xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009192f: add byte ptr [eax], al; mov edx, 0x7fffffff; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008f81f: add byte ptr [eax], al; mov edx, 1; call dword ptr gs:[0x10]; 
0x00186de9: add byte ptr [eax], al; mov edx, 1; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00092f0a: add byte ptr [eax], al; mov edx, 1; mov ebx, edi; call dword ptr gs:[0x10]; 
0x00122d3c: add byte ptr [eax], al; mov edx, 1; mov edi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00152ba6: add byte ptr [eax], al; mov edx, 1; pop ebx; pop esi; mov eax, edx; ret; 
0x0008f2dd: add byte ptr [eax], al; mov edx, 1; push ebx; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00091c0a: add byte ptr [eax], al; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00097a05: add byte ptr [eax], al; mov edx, 1; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00091346: add byte ptr [eax], al; mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x0009180b: add byte ptr [eax], al; mov edx, 1; xor esi, esi; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x00091674: add byte ptr [eax], al; mov edx, 1; xor esi, esi; mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00098838: add byte ptr [eax], al; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008f221: add byte ptr [eax], al; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008f290: add byte ptr [eax], al; mov edx, 2; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00134020: add byte ptr [eax], al; mov edx, 8; call dword ptr gs:[0x10]; 
0x00179a67: add byte ptr [eax], al; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x0010a816: add byte ptr [eax], al; mov edx, dword ptr [eax]; mov dword ptr [eax], ecx; mov eax, edx; ret; 
0x000fb5b5: add byte ptr [eax], al; mov edx, dword ptr [edx + 0xa4]; cmp dword ptr [ecx + edx], 0x26; je 0xfb5ac; mov eax, 0xffffffff; ret; 
0x0012f09d: add byte ptr [eax], al; mov edx, dword ptr [edx + 0xa4]; neg eax; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; ret; 
0x0009830e: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x14]; call 0x981a0; xor eax, eax; add esp, 0xc; ret; 
0x0017d01a: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x18]; test edx, edx; jne 0x17d030; add esp, 0xc; ret; 
0x0017d18a: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x18]; test edx, edx; jne 0x17d1a0; add esp, 0xc; ret; 
0x0004040a: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x000fb6e4: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00120f54: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 0x40]; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0012971b: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0010e8bc: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00132a2c: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x48]; mov esi, dword ptr [esp + 0x50]; mov dword ptr [esp + 0x18], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00114ca5: add byte ptr [eax], al; mov edx, dword ptr [esp + 0xa8]; mov esi, dword ptr [esp + 0xac]; call dword ptr gs:[0x10]; 
0x00114fcd: add byte ptr [eax], al; mov edx, dword ptr [esp + 0xb8]; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x00114f5e: add byte ptr [eax], al; mov edx, dword ptr [esp + 0xb8]; mov eax, 0x1c4; mov esi, dword ptr [esp + 0xbc]; call dword ptr gs:[0x10]; 
0x001251a4: add byte ptr [eax], al; mov edx, dword ptr [esp + 8]; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x00189d04: add byte ptr [eax], al; mov edx, dword ptr gs:[0]; mov dword ptr [edx + eax], 0x16; xor eax, eax; ret; 
0x0003ca1c: add byte ptr [eax], al; mov edx, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x0003c897: add byte ptr [eax], al; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0011fb4a: add byte ptr [eax], al; mov edx, edi; call dword ptr gs:[0x10]; 
0x000dec43: add byte ptr [eax], al; mov edx, esi; call dword ptr gs:[0x10]; 
0x00092d18: add byte ptr [eax], al; mov esi, 8; add ecx, 0x474; call dword ptr gs:[0x10]; 
0x00093f30: add byte ptr [eax], al; mov esi, 8; call dword ptr gs:[0x10]; 
0x0003c7ef: add byte ptr [eax], al; mov esi, 8; lea edx, [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x00023274: add byte ptr [eax], al; mov esi, 8; mov dword ptr [ebp + 0x137c], 1; call dword ptr gs:[0x10]; 
0x0003d595: add byte ptr [eax], al; mov esi, 8; mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x0003c892: add byte ptr [eax], al; mov esi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00115d59: add byte ptr [eax], al; mov esi, dword ptr [esp + 0x1bc]; lea edx, [esp + 0x2c]; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x001328e0: add byte ptr [eax], al; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x0012ef7d: add byte ptr [eax], al; mov esi, dword ptr [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x00114cac: add byte ptr [eax], al; mov esi, dword ptr [esp + 0xac]; call dword ptr gs:[0x10]; 
0x00114f6a: add byte ptr [eax], al; mov esi, dword ptr [esp + 0xbc]; call dword ptr gs:[0x10]; 
0x0013000d: add byte ptr [eax], al; mov esi, edi; call dword ptr gs:[0x10]; 
0x00132b8c: add byte ptr [eax], al; mov esi, edi; mov edx, 0x100; call dword ptr gs:[0x10]; 
0x00095d31: add byte ptr [eax], al; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x00122e8b: add byte ptr [eax], al; mov word ptr [eax + 0x16], dx; ret; 
0x000abdf6: add byte ptr [eax], al; mov word ptr [edx], si; mov eax, edx; pop ebx; pop esi; ret; 
0x001acdbe: add byte ptr [eax], al; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000bd78e: add byte ptr [eax], al; movdqu xmm0, xmmword ptr [esi]; movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b9dee: add byte ptr [eax], al; movdqu xmmword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b371e: add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x000b372e: add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x000b370e: add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000b373e: add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x000b9d5e: add byte ptr [eax], al; movlpd qword ptr [edi - 1], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b9d6e: add byte ptr [eax], al; movlpd qword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b59de: add byte ptr [eax], al; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x000b161e: add byte ptr [eax], al; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x0008b14e: add byte ptr [eax], al; movzx eax, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x001423ee: add byte ptr [eax], al; movzx eax, dl; ret; 
0x001a0ad7: add byte ptr [eax], al; movzx ecx, byte ptr [eax + 1]; movzx eax, byte ptr [edx + 1]; sub eax, ecx; pop ebp; ret; 
0x0019f30e: add byte ptr [eax], al; movzx ecx, byte ptr [eax + 1]; movzx eax, byte ptr [edx + 1]; sub eax, ecx; ret; 
0x001a0af7: add byte ptr [eax], al; movzx ecx, byte ptr [eax + 2]; movzx eax, byte ptr [edx + 2]; sub eax, ecx; pop ebp; ret; 
0x001a0b17: add byte ptr [eax], al; movzx ecx, byte ptr [eax + 3]; movzx eax, byte ptr [edx + 3]; sub eax, ecx; pop ebp; ret; 
0x001a0b37: add byte ptr [eax], al; movzx ecx, byte ptr [eax + 4]; movzx eax, byte ptr [edx + 4]; sub eax, ecx; pop ebp; ret; 
0x001a0b57: add byte ptr [eax], al; movzx ecx, byte ptr [eax + 5]; movzx eax, byte ptr [edx + 5]; sub eax, ecx; pop ebp; ret; 
0x001a0ab7: add byte ptr [eax], al; movzx ecx, byte ptr [eax]; movzx eax, byte ptr [edx]; sub eax, ecx; pop ebp; ret; 
0x00042868: add byte ptr [eax], al; movzx ecx, cl; bsr ecx, ecx; shl eax, cl; ret; 
0x00042949: add byte ptr [eax], al; movzx ecx, cx; bsr ecx, ecx; shl eax, cl; ret; 
0x000718d2: add byte ptr [eax], al; movzx edx, byte ptr [edx + esi - 0x20]; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x0003c9bb: add byte ptr [eax], al; neg eax; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; pop ebx; ret; 
0x0012f0a3: add byte ptr [eax], al; neg eax; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; ret; 
0x00024f64: add byte ptr [eax], al; neg eax; mov edx, dword ptr [edx + 0xa4]; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; ret; 
0x000fb6a2: add byte ptr [eax], al; neg eax; pop ebx; ret; 
0x0008d865: add byte ptr [eax], al; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x000c158d: add byte ptr [eax], al; nop; bsf eax, eax; lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x000c1cdc: add byte ptr [eax], al; nop; bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x000c183c: add byte ptr [eax], al; nop; bsr eax, eax; lea eax, [eax + ecx + 0x10]; ret; 
0x0004322d: add byte ptr [eax], al; nop; bsr eax, edx; pop ebx; xor eax, 0x1f; ret; 
0x0008b48d: add byte ptr [eax], al; nop; endbr32; mov eax, 0xffffffff; ret; 
0x0008ccbd: add byte ptr [eax], al; nop; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x001897ac: add byte ptr [eax], al; nop; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x0016eaec: add byte ptr [eax], al; nop; endbr32; ret; 
0x0017ce2d: add byte ptr [eax], al; nop; endbr32; xor eax, eax; ret; 
0x000d46ad: add byte ptr [eax], al; nop; lea ebx, [eax + 0xc]; mov eax, ebx; pop ebx; ret; 
0x000d469d: add byte ptr [eax], al; nop; lea ebx, [eax + 8]; mov eax, ebx; pop ebx; ret; 
0x000e770d: add byte ptr [eax], al; nop; lea ecx, [esp + 0x14]; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x0003341d: add byte ptr [eax], al; nop; lea edx, [ecx - 0x6d324]; mov eax, edx; pop ebx; ret; 
0x000b5bad: add byte ptr [eax], al; nop; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; ret; 
0x000b17cc: add byte ptr [eax], al; nop; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x000b5bbd: add byte ptr [eax], al; nop; mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; ret; 
0x000b17dd: add byte ptr [eax], al; nop; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edx; ret; 
0x0009af3c: add byte ptr [eax], al; nop; mov dword ptr [eax + 4], edx; ret; 
0x000b36cd: add byte ptr [eax], al; nop; mov dword ptr [ecx], edx; mov word ptr [ecx + 4], dx; pop ebx; ret; 
0x0007188c: add byte ptr [eax], al; nop; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x28], 1; jmp eax; 
0x000906dd: add byte ptr [eax], al; nop; mov eax, 0x16; ret; 
0x00086a3c: add byte ptr [eax], al; nop; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x00097c8d: add byte ptr [eax], al; nop; mov eax, 0xf0; mov ecx, 1; mov edx, 1; call dword ptr gs:[0x10]; 
0x000d99fc: add byte ptr [eax], al; nop; mov eax, 2; ret; 
0x0009418c: add byte ptr [eax], al; nop; mov eax, 3; add esp, 0xc; ret; 
0x000d9a0c: add byte ptr [eax], al; nop; mov eax, 3; ret; 
0x000d9a1c: add byte ptr [eax], al; nop; mov eax, 4; ret; 
0x000d9a2c: add byte ptr [eax], al; nop; mov eax, 5; ret; 
0x000d9a3c: add byte ptr [eax], al; nop; mov eax, 6; ret; 
0x000d9a4c: add byte ptr [eax], al; nop; mov eax, 7; ret; 
0x0017c6fc: add byte ptr [eax], al; nop; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x20]; 
0x0017140c: add byte ptr [eax], al; nop; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0009090c: add byte ptr [eax], al; nop; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x14], edx; xor eax, eax; ret; 
0x0015722d: add byte ptr [eax], al; nop; mov ecx, 1; mov eax, ecx; ret; 
0x000e763c: add byte ptr [eax], al; nop; mov edx, dword ptr [esp + 0xc]; mov dword ptr [edx], ebx; pop ebx; ret; 
0x000b5d0c: add byte ptr [eax], al; nop; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b36fc: add byte ptr [eax], al; nop; movlpd qword ptr [ecx], xmm0; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x000b36ed: add byte ptr [eax], al; nop; movlpd qword ptr [ecx], xmm0; pop ebx; ret; 
0x001acd8d: add byte ptr [eax], al; nop; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000907cd: add byte ptr [eax], al; nop; or dword ptr [ecx + 8], 0x40; xor eax, eax; mov dword ptr [ecx + 4], edx; ret; 
0x001a7e6c: add byte ptr [eax], al; nop; pop ebx; xor eax, eax; ret; 
0x000e9abc: add byte ptr [eax], al; nop; sub esp, 0xc; mov eax, dword ptr [ebp - 0x2c]; push esi; call eax; 
0x000f137c: add byte ptr [eax], al; nop; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5b4]; call dword ptr [eax + 0x14]; 
0x000f85fc: add byte ptr [eax], al; nop; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5d0]; push dword ptr [ebp - 0x5c4]; call dword ptr [eax + 0x14]; 
0x00042abc: add byte ptr [eax], al; nop; xor eax, eax; pop ebx; ret; 
0x0004218d: add byte ptr [eax], al; nop; xor eax, eax; ret; 
0x000abc0d: add byte ptr [eax], al; nop; xor edx, edx; pop ebx; mov eax, edx; ret; 
0x000e75fe: add byte ptr [eax], al; not ebx; lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x000951bd: add byte ptr [eax], al; not ecx; and ecx, 0x80; call dword ptr gs:[0x10]; 
0x001423e3: add byte ptr [eax], al; or byte ptr [edi], 0x44; ret 0x8dc3; 
0x001420d1: add byte ptr [eax], al; or byte ptr [edi], 0x45; ret 0x2ec3; 
0x00115452: add byte ptr [eax], al; or byte ptr [edi], 0xa3; ret 0xdc73; 
0x00042973: add byte ptr [eax], al; or byte ptr [edi], 0xbd; leave; xor ecx, 0x1f; shr eax, cl; ret; 
0x000c2d59: add byte ptr [eax], al; or cl, cl; jne 0xc2d61; xor eax, eax; ret; 
0x00115b60: add byte ptr [eax], al; or dh, 8; mov ebp, dword ptr gs:[0x14]; mov dword ptr [esp + 0x18c], ebp; mov ebp, dword ptr [esp + 0x1b8]; call dword ptr gs:[0x10]; 
0x000605ae: add byte ptr [eax], al; or eax, 7; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x000918ad: add byte ptr [eax], al; or edx, 2; call dword ptr gs:[0x10]; 
0x000c14b6: add byte ptr [eax], al; pmovmskb eax, xmm1; bsf eax, eax; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000c178e: add byte ptr [eax], al; pmovmskb eax, xmm1; bsr eax, eax; add eax, ecx; ret; 
0x00121a00: add byte ptr [eax], al; pop ebp; pop edi; pop ebx; ret; 
0x000eab67: add byte ptr [eax], al; pop ebx; cmp eax, 0xfffff001; jae 0x24f50; ret; 
0x00040274: add byte ptr [eax], al; pop ebx; cmp eax, 0xfffff001; jae 0x24f50; xor eax, eax; ret; 
0x00099eee: add byte ptr [eax], al; pop ebx; mov eax, 0x16; pop esi; pop edi; ret; 
0x0008fea9: add byte ptr [eax], al; pop ebx; mov eax, 0xc; pop esi; pop edi; ret; 
0x00078f32: add byte ptr [eax], al; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x001a81ae: add byte ptr [eax], al; pop ebx; mov eax, 1; jg 0x1a81c0; neg eax; ret; 
0x0017cbd1: add byte ptr [eax], al; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x0005bf00: add byte ptr [eax], al; pop ebx; mov eax, esi; pop esi; pop edi; ret; 
0x0018b9b6: add byte ptr [eax], al; pop ebx; movzx eax, byte ptr [edx]; pop esi; pop edi; ret; 
0x0003cb93: add byte ptr [eax], al; pop ebx; pop edi; ret; 
0x001208bc: add byte ptr [eax], al; pop ebx; pop esi; cmp eax, 0xfffff001; jae 0x24f50; ret; 
0x000d9845: add byte ptr [eax], al; pop ebx; pop esi; mov eax, ecx; ret; 
0x00103033: add byte ptr [eax], al; pop ebx; pop esi; mov eax, edi; pop edi; ret; 
0x00152bab: add byte ptr [eax], al; pop ebx; pop esi; mov eax, edx; ret; 
0x0013c04e: add byte ptr [eax], al; pop ebx; pop esi; pop ebp; ret; 
0x0002c031: add byte ptr [eax], al; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x001ad403: add byte ptr [eax], al; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x00023469: add byte ptr [eax], al; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0003dbd9: add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x00024bd6: add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0003cda5: add byte ptr [eax], al; pop ebx; ret; 
0x00042ab0: add byte ptr [eax], al; pop ebx; sub eax, edx; ret; 
0x0012368e: add byte ptr [eax], al; pop ebx; sub edx, eax; test eax, eax; cmovns eax, edx; ret; 
0x0010b582: add byte ptr [eax], al; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x001a64ae: add byte ptr [eax], al; pop ebx; xor eax, eax; ret; 
0x0004089f: add byte ptr [eax], al; pop ecx; add ecx, 0xa; mov dword ptr [edx], ecx; ret; 
0x0011fe46: add byte ptr [eax], al; pop edi; cmova eax, edx; ret; 
0x000250f2: add byte ptr [eax], al; pop edi; pop ebp; jmp eax; 
0x00157335: add byte ptr [eax], al; pop edi; pop ebp; ret; 
0x000b31a0: add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000b945e: add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000d9653: add byte ptr [eax], al; pop edi; pop esi; ret; 
0x001abb90: add byte ptr [eax], al; pop edi; ret; 
0x0016ee78: add byte ptr [eax], al; pop edx; pop ecx; push 0; push esi; call dword ptr [eax + 0x14]; 
0x00053c5b: add byte ptr [eax], al; pop esi; pop edi; ret; 
0x000bd99e: add byte ptr [eax], al; pop esi; ret; 
0x000c2250: add byte ptr [eax], al; pop esi; xor eax, eax; pop ebx; ret; 
0x001ac60e: add byte ptr [eax], al; pop esi; xor eax, eax; pop edi; ret; 
0x001289bc: add byte ptr [eax], al; push 0; push dword ptr [esp + 0x1c]; call 0x616b0; add esp, 0x1c; ret; 
0x0018be98: add byte ptr [eax], al; push 0; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x30]; push esi; call dword ptr [ebx + 0x40]; 
0x0017a9bf: add byte ptr [eax], al; push 0; push edi; call dword ptr [eax + 0x14]; 
0x00089b9e: add byte ptr [eax], al; push 0; push edi; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x0008323f: add byte ptr [eax], al; push 0; push edx; push eax; push esi; call dword ptr [ebx + 0x40]; 
0x00089686: add byte ptr [eax], al; push 0; push edx; push eax; push esi; call dword ptr [ecx + 0x40]; 
0x00170e8f: add byte ptr [eax], al; push 0; push esi; call dword ptr [eax + 0x14]; 
0x0017b1ea: add byte ptr [eax], al; push 0x2260; push dword ptr [esp + 0x1c]; call 0x17af20; add esp, 0x1c; ret; 
0x000899d2: add byte ptr [eax], al; push 1; push 0; push 0; push esi; call dword ptr [eax + 0x40]; 
0x00083812: add byte ptr [eax], al; push 1; push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x000835c9: add byte ptr [eax], al; push 2; push 0; push 0; push esi; call dword ptr [edi + 0x40]; 
0x00078e2f: add byte ptr [eax], al; push dword ptr [eax]; call 0x66130; add esp, 0x1c; ret; 
0x0005afa0: add byte ptr [eax], al; push dword ptr [eax]; call 0x664c0; add esp, 0x1c; ret; 
0x0008049f: add byte ptr [eax], al; push dword ptr [eax]; call 0x72650; add esp, 0x1c; ret; 
0x00080500: add byte ptr [eax], al; push dword ptr [eax]; call 0x729a0; add esp, 0x1c; ret; 
0x0013be4a: add byte ptr [eax], al; push dword ptr [eax]; push dword ptr [esp + 0x1c]; call 0x13a5a0; add esp, 0x1c; ret; 
0x001775b2: add byte ptr [eax], al; push dword ptr [ebp + 0x50]; push edi; call dword ptr [eax + 0x14]; 
0x00173eae: add byte ptr [eax], al; push dword ptr [ebx + 0xa8]; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x000333bc: add byte ptr [eax], al; push dword ptr [edx + eax]; push dword ptr [esp + 0x1c]; call 0x333d0; add esp, 0x1c; ret; 
0x000ab57c: add byte ptr [eax], al; push dword ptr [edx + eax]; push dword ptr [esp + 0x1c]; call 0xab590; add esp, 0x1c; ret; 
0x0008338f: add byte ptr [eax], al; push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; push esi; call dword ptr [ebx + 0x40]; 
0x0016ef26: add byte ptr [eax], al; push dword ptr [esp + 0x10]; push esi; call dword ptr [eax + 0xc]; 
0x00122dee: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; call 0x1283c0; add esp, 0x1c; ret; 
0x0017b1ef: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; call 0x17af20; add esp, 0x1c; ret; 
0x0009037a: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; call 0x902a0; add esp, 0x18; pop ebx; ret; 
0x0009069e: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; call 0x905e0; add esp, 0x1c; ret; 
0x00099baa: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; call 0x99b50; add esp, 0x18; pop ebx; ret; 
0x0013d8a8: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x66130; add esp, 0x1c; ret; 
0x0013e988: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x72650; add esp, 0x1c; ret; 
0x0008555a: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x7e470; add esp, 0x1c; ret; 
0x000db589: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x30]; mov eax, dword ptr [esp + 0x64]; call eax; 
0x00179d97: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; push ebx; call eax; 
0x00173eb4: add byte ptr [eax], al; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x00173ed0: add byte ptr [eax], al; push dword ptr [esp + 0x30]; push esi; call dword ptr [eax + 4]; 
0x0015f7ae: add byte ptr [eax], al; push dword ptr [esp + 0x64]; push dword ptr [esp + 0x50]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x00089818: add byte ptr [eax], al; push dword ptr [esp + 0xbc]; push dword ptr [esp + 8]; push dword ptr [esp + 8]; push esi; call dword ptr [ebx + 0x40]; 
0x00163362: add byte ptr [eax], al; push dword ptr [esp + 0xc]; push ebp; call edi; 
0x0018bd6f: add byte ptr [eax], al; push dword ptr [esp + 0xcc]; push ebp; push edi; push esi; call dword ptr [ebx + 0x40]; 
0x0008981f: add byte ptr [eax], al; push dword ptr [esp + 8]; push dword ptr [esp + 8]; push esi; call dword ptr [ebx + 0x40]; 
0x00126b75: add byte ptr [eax], al; push eax; call 0x126c90; add esp, 0x1c; ret; 
0x0008cdf7: add byte ptr [eax], al; push eax; call 0x8f2d0; add esp, 0x1c; ret; 
0x0010b9af: add byte ptr [eax], al; push eax; call 0x8f2d0; call dword ptr [esi]; 
0x00099d75: add byte ptr [eax], al; push eax; call 0x901f0; add esp, 0x1c; ret; 
0x00156f87: add byte ptr [eax], al; push eax; call edx; 
0x00126b45: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x1c]; call 0x126ba0; add esp, 0x1c; ret; 
0x0013eeb5: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x1c]; call 0x13eed0; add esp, 0x1c; ret; 
0x0013f1f5: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x1c]; call 0x13f210; add esp, 0x1c; ret; 
0x000406d5: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x1c]; call 0x406f0; add esp, 0x1c; ret; 
0x00042805: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x1c]; call 0x42820; add esp, 0x1c; ret; 
0x0002add9: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0002d09e: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x64]; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x0002ba56: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x6c]; push dword ptr [esp + 0x6c]; call edi; 
0x00175a3c: add byte ptr [eax], al; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x00175a3c: add byte ptr [eax], al; push eax; push edx; call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x0015ff59: add byte ptr [eax], al; push eax; push esi; mov ecx, dword ptr [esp + 0x3c]; call ecx; 
0x0003b5d3: add byte ptr [eax], al; push eax; ret; 
0x0018bd76: add byte ptr [eax], al; push ebp; push edi; push esi; call dword ptr [ebx + 0x40]; 
0x00177c3a: add byte ptr [eax], al; push ebx; push eax; call dword ptr [edx + 8]; 
0x0008f2e2: add byte ptr [eax], al; push ebx; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00092d3d: add byte ptr [eax], al; push edx; call eax; 
0x0002823b: add byte ptr [eax], al; push edx; push eax; call 0x982f0; add esp, 0x1c; ret; 
0x001775cb: add byte ptr [eax], al; push edx; push edi; call dword ptr [eax + 4]; 
0x00170eb1: add byte ptr [eax], al; push esi; call dword ptr [eax + 0x10]; 
0x00080f6c: add byte ptr [eax], al; push esi; call dword ptr [eax + 0x34]; 
0x0013c018: add byte ptr [eax], al; push esi; call eax; 
0x00170270: add byte ptr [eax], al; push esi; mov edi, dword ptr [esp + 0x4c]; push edi; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x0010e2c3: add byte ptr [eax], al; pushal; add cl, al; call 0xfe11bcf; dec edi; ret 0xbce9; 
0x00024b06: add byte ptr [eax], al; ret; 
0x001420cb: add byte ptr [eax], al; rol byte ptr [ecx + 0xf9], 0x80; cmovne eax, edx; ret; 
0x001423da: add byte ptr [eax], al; rol cl, 0xea; adc byte ptr [ecx + 0xf9], al; or byte ptr [edi], 0x44; ret 0x8dc3; 
0x00024bcd: add byte ptr [eax], al; rol edx, 9; mov dword ptr [eax + 0x1a50], edx; pop ebx; pop esi; ret; 
0x00024afd: add byte ptr [eax], al; rol edx, 9; mov dword ptr [eax + 0x1a50], edx; ret; 
0x00156f7d: add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; push eax; call edx; 
0x00174a09: add byte ptr [eax], al; sbb eax, -1; add esp, 0xc; ret; 
0x000fb271: add byte ptr [eax], al; setne al; ret; 
0x00188e24: add byte ptr [eax], al; shl eax, 5; lea eax, [eax + edx + 0x5c]; ret; 
0x0008e96a: add byte ptr [eax], al; shr eax, 0xb; and eax, 1; mov dword ptr [edx + 0x1ac8], eax; ret; 
0x00184ddc: add byte ptr [eax], al; shr ecx, 2; rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x0010cda7: add byte ptr [eax], al; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x001243ec: add byte ptr [eax], al; sub eax, dword ptr gs:[0x14]; jne 0x1243ff; add esp, 0x418; pop ebx; ret; 
0x000c2ca9: add byte ptr [eax], al; sub eax, edx; ret; 
0x0008bdb6: add byte ptr [eax], al; sub ebx, edx; lea eax, [ebx - 1]; pop ebx; ret; 
0x00081606: add byte ptr [eax], al; sub ebx, edx; sar ebx, 2; lea eax, [ebx - 1]; pop ebx; ret; 
0x0005af17: add byte ptr [eax], al; sub ecx, 1; mov dword ptr [eax], ecx; mov eax, edx; add esp, 0xc; ret; 
0x0003badc: add byte ptr [eax], al; sub ecx, edx; shr eax, 0x1f; shr ecx, 0x10; or eax, ecx; ret; 
0x001aba69: add byte ptr [eax], al; sub edi, 0x10; jb 0x1abb30; lea eax, [eax + 0xf]; pop edi; ret; 
0x001abade: add byte ptr [eax], al; sub edi, 0xa; jb 0x1abb30; lea eax, [eax + 9]; pop edi; ret; 
0x001abaee: add byte ptr [eax], al; sub edi, 0xb; jb 0x1abb30; lea eax, [eax + 0xa]; pop edi; ret; 
0x001abafe: add byte ptr [eax], al; sub edi, 0xd; jb 0x1abb30; lea eax, [eax + 0xc]; pop edi; ret; 
0x001abb0e: add byte ptr [eax], al; sub edi, 0xe; jb 0x1abb30; lea eax, [eax + 0xd]; pop edi; ret; 
0x001abb1e: add byte ptr [eax], al; sub edi, 0xf; jb 0x1abb30; lea eax, [eax + 0xe]; pop edi; ret; 
0x001aba7e: add byte ptr [eax], al; sub edi, 2; jb 0x1abb30; lea eax, [eax + 1]; pop edi; ret; 
0x001ab9d6: add byte ptr [eax], al; sub edi, 4; jb 0x1abb30; lea eax, [eax + 3]; pop edi; ret; 
0x001ababe: add byte ptr [eax], al; sub edi, 7; jb 0x1abb30; lea eax, [eax + 6]; pop edi; ret; 
0x001aba09: add byte ptr [eax], al; sub edi, 8; jb 0x1abb30; lea eax, [eax + 7]; pop edi; ret; 
0x001abace: add byte ptr [eax], al; sub edi, 9; jb 0x1abb30; lea eax, [eax + 8]; pop edi; ret; 
0x001aaa39: add byte ptr [eax], al; sub edx, 0x10; jb 0x1aab10; lea eax, [edi + 0xf]; pop edi; ret; 
0x001aaabe: add byte ptr [eax], al; sub edx, 0xa; jb 0x1aab10; lea eax, [edi + 9]; pop edi; ret; 
0x001aaace: add byte ptr [eax], al; sub edx, 0xb; jb 0x1aab10; lea eax, [edi + 0xa]; pop edi; ret; 
0x001aaa10: add byte ptr [eax], al; sub edx, 0xc; jb 0x1aab10; lea eax, [edi + 0xb]; pop edi; ret; 
0x001aaade: add byte ptr [eax], al; sub edx, 0xd; jb 0x1aab10; lea eax, [edi + 0xc]; pop edi; ret; 
0x001aaaee: add byte ptr [eax], al; sub edx, 0xe; jb 0x1aab10; lea eax, [edi + 0xd]; pop edi; ret; 
0x001aaafe: add byte ptr [eax], al; sub edx, 0xf; jb 0x1aab10; lea eax, [edi + 0xe]; pop edi; ret; 
0x001aa9a5: add byte ptr [eax], al; sub edx, 4; jb 0x1aab10; lea eax, [edi + 3]; pop edi; ret; 
0x001aaa9e: add byte ptr [eax], al; sub edx, 7; jb 0x1aab10; lea eax, [edi + 6]; pop edi; ret; 
0x001aa9d6: add byte ptr [eax], al; sub edx, 8; jb 0x1aab10; lea eax, [edi + 7]; pop edi; ret; 
0x001aaaae: add byte ptr [eax], al; sub edx, 9; jb 0x1aab10; lea eax, [edi + 8]; pop edi; ret; 
0x0008c9a6: add byte ptr [eax], al; sub edx, dword ptr [eax + 8]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x00125e28: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x125e4f; add esp, 0x1018; pop ebx; ret; 
0x0014ac59: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x14aca4; add esp, 0x118; pop ebx; ret; 
0x0014acf9: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x14ad60; add esp, 0x118; pop ebx; ret; 
0x0014adb9: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x14ae0b; add esp, 0x118; pop ebx; ret; 
0x0014ae59: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x14ae8d; add esp, 0x11c; ret; 
0x0003cd96: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x3cdb7; add esp, 0x98; pop ebx; ret; 
0x0003d34e: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x3d361; add esp, 0x128; pop ebx; ret; 
0x0003d94e: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x3d96f; add esp, 0x98; pop ebx; ret; 
0x0003d9ce: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x3d9ef; add esp, 0x98; pop ebx; ret; 
0x0003da57: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x3da69; add esp, 0x9c; ret; 
0x000615b7: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x615ca; add esp, 0x1018; pop ebx; ret; 
0x000e8665: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0xe8678; add esp, 0xe8; pop ebx; ret; 
0x000e86d7: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0xe86ea; add esp, 0xe8; pop ebx; ret; 
0x000e877b: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0xe878e; add esp, 0xe8; pop ebx; ret; 
0x000876ae: add byte ptr [eax], al; sub esp, 0x18; push eax; call 0x8b1a0; add esp, 0x1c; ret; 
0x000a0732: add byte ptr [eax], al; sub esp, 0x28; mov edi, dword ptr [esp + 0x3c]; lea ecx, [ebp - 0x722d4]; call dword ptr gs:[0x10]; 
0x0017760c: add byte ptr [eax], al; sub esp, 0xc; mov eax, dword ptr [ebp + 0x3c]; push edi; call dword ptr [eax + 0x10]; 
0x0016ee58: add byte ptr [eax], al; sub esp, 0xc; mov eax, dword ptr [ebx + 0x10]; push esi; call dword ptr [eax + 0x10]; 
0x0016face: add byte ptr [eax], al; sub esp, 0xc; mov eax, dword ptr [ebx + 4]; push ebx; call dword ptr [eax + 0x10]; 
0x00092d34: add byte ptr [eax], al; sub esp, 0xc; mov eax, dword ptr [ecx + 0x228]; push edx; call eax; 
0x0008fe3a: add byte ptr [eax], al; sub esp, 0xc; push 0; call 0x8f3d0; add esp, 0x1c; ret; 
0x0017834e: add byte ptr [eax], al; sub esp, 0xc; push eax; call dword ptr [edx + 0x10]; 
0x0017108c: add byte ptr [eax], al; sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x0008826c: add byte ptr [eax], al; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x00174612: add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x0008b7cd: add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [ebp + 0x30]; 
0x0007b9b7: add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x0007e83b: add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x0018b758: add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [ebx + 0x44]; 
0x000a6d46: add byte ptr [eax], al; sub esp, 0xc; push esi; call eax; 
0x0008c747: add byte ptr [eax], al; sub esp, 4; push 0; push 0; push esi; call dword ptr [ebp + 0x2c]; 
0x0007fcae: add byte ptr [eax], al; sub esp, 4; push 0x10; push ebp; push esi; call dword ptr [eax + 0x1c]; 
0x0007e74c: add byte ptr [eax], al; sub esp, 4; push dword ptr [ebp + 0x14]; push dword ptr [ebp + 0xc]; push esi; call dword ptr [ebx + 0x2c]; 
0x001376e0: add byte ptr [eax], al; sub esp, 4; push dword ptr [esp + 0x1c]; push 0; push 0x2000004; call eax; 
0x0008a13e: add byte ptr [eax], al; sub esp, 4; push eax; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x00087b8a: add byte ptr [eax], al; sub esp, 4; push ebp; push edi; push ebx; call dword ptr [esi + 0x3c]; 
0x0007e512: add byte ptr [eax], al; sub esp, 4; push ebx; push dword ptr [ebp - 0x1c]; push esi; call dword ptr [eax + 0x2c]; 
0x0007c443: add byte ptr [eax], al; sub esp, 4; push edi; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x0007de10: add byte ptr [eax], al; sub esp, 4; push esi; push dword ptr [ebp + 8]; push edx; call dword ptr [ebx + 0x1c]; 
0x00087cd3: add byte ptr [eax], al; sub esp, 8; lea eax, [esp + 0x38]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x000830fe: add byte ptr [eax], al; sub esp, 8; lea eax, [esp + 0x40]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x0007b2a1: add byte ptr [eax], al; sub esp, 8; lea eax, [esp + 8]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x00087fdd: add byte ptr [eax], al; sub esp, 8; lea eax, [esp + 8]; push eax; push esi; call dword ptr [edi + 0x48]; 
0x0008950b: add byte ptr [eax], al; sub esp, 8; lea edx, [esp + 0x28]; push edx; push esi; call dword ptr [eax + 0x48]; 
0x0018bd26: add byte ptr [eax], al; sub esp, 8; lea edx, [esp + 0x38]; push edx; push esi; call dword ptr [eax + 0x48]; 
0x00176b3f: add byte ptr [eax], al; sub esp, 8; mov eax, dword ptr [ebx + 0x50]; push dword ptr [esp + 0x30]; push esi; call dword ptr [eax + 4]; 
0x00173ec7: add byte ptr [eax], al; sub esp, 8; mov eax, dword ptr [ebx + 0xb0]; push dword ptr [esp + 0x30]; push esi; call dword ptr [eax + 4]; 
0x00175489: add byte ptr [eax], al; sub esp, 8; mov eax, dword ptr [ebx + 4]; push 8; push ebx; call dword ptr [eax + 0x18]; 
0x001714b6: add byte ptr [eax], al; sub esp, 8; mov eax, dword ptr [ebx + 4]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax]; 
0x00179e5d: add byte ptr [eax], al; sub esp, 8; mov eax, dword ptr [ebx + 8]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax + 0xc]; 
0x00170807: add byte ptr [eax], al; sub esp, 8; mov eax, dword ptr [edi + 4]; push 0x20; push edi; call dword ptr [eax + 0x18]; 
0x00082780: add byte ptr [eax], al; sub esp, 8; push -1; push dword ptr [ebx]; call dword ptr [edi + 0xc]; 
0x00170efb: add byte ptr [eax], al; sub esp, 8; push 0; push ebx; call dword ptr [eax + 0x14]; 
0x0007b42a: add byte ptr [eax], al; sub esp, 8; push 0; push esi; call dword ptr [ebx + 8]; 
0x0016ee3f: add byte ptr [eax], al; sub esp, 8; push dword ptr [esp + 0x1c]; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x000a6dfe: add byte ptr [eax], al; sub esp, 8; push eax; push dword ptr [ebx + 0x24]; call edx; 
0x00179ea6: add byte ptr [eax], al; sub esp, 8; push ebx; lea edx, [esp + 0x38]; push edx; call dword ptr [eax + 0xc]; 
0x0003f25e: add byte ptr [eax], al; sub esp, 8; push ecx; push dword ptr [esp + 0x4c]; call eax; 
0x000a6c71: add byte ptr [eax], al; sub esp, 8; push esi; push dword ptr [ebx + 0x24]; call eax; 
0x001aa330: add byte ptr [eax], al; test ah, 0x20; jne 0x1aa3d0; lea eax, [edi - 4]; pop edi; ret; 
0x001aaeb0: add byte ptr [eax], al; test ah, 0x20; jne 0x1aaf50; lea eax, [ecx + 0xc]; ret; 
0x001a9e74: add byte ptr [eax], al; test ah, 0x40; jne 0x1a9f60; lea eax, [edi + 0xf]; pop edi; ret; 
0x001aa830: add byte ptr [eax], al; test ah, 0x40; jne 0x1aa970; lea eax, [edi + 0xf]; pop edi; ret; 
0x001ab500: add byte ptr [eax], al; test ah, 0x40; jne 0x1ab5c0; lea eax, [edx + 0xf]; ret; 
0x001aa307: add byte ptr [eax], al; test ah, 2; jne 0x1aa3a0; lea eax, [edi - 8]; pop edi; ret; 
0x001aae87: add byte ptr [eax], al; test ah, 2; jne 0x1aaf20; lea eax, [ecx + 8]; ret; 
0x001aa807: add byte ptr [eax], al; test ah, 4; jne 0x1aa940; lea eax, [edi + 0xb]; pop edi; ret; 
0x001ab4d7: add byte ptr [eax], al; test ah, 4; jne 0x1ab590; lea eax, [edx + 0xb]; ret; 
0x001aa2de: add byte ptr [eax], al; test al, 0x20; jne 0x1aa370; lea eax, [edi - 0xc]; pop edi; ret; 
0x001aae5e: add byte ptr [eax], al; test al, 0x20; jne 0x1aaef0; lea eax, [ecx + 4]; ret; 
0x001a9e22: add byte ptr [eax], al; test al, 0x40; jne 0x1a9ef0; lea eax, [edi + 7]; pop edi; ret; 
0x001aa7de: add byte ptr [eax], al; test al, 0x40; jne 0x1aa910; lea eax, [edi + 7]; pop edi; ret; 
0x001ab4ae: add byte ptr [eax], al; test al, 0x40; jne 0x1ab560; lea eax, [edx + 7]; ret; 
0x001ac5f3: add byte ptr [eax], al; test al, 0xf0; jne 0x1ac6b0; lea eax, [edi - 0x10]; pop edi; ret; 
0x001aa2b9: add byte ptr [eax], al; test al, 2; jne 0x1aa340; lea eax, [edi - 0x10]; pop edi; ret; 
0x001aacd9: add byte ptr [eax], al; test al, 2; jne 0x1aaec0; mov eax, ecx; ret; 
0x001aa7bb: add byte ptr [eax], al; test al, 4; jne 0x1aa8e0; lea eax, [edi + 3]; pop edi; ret; 
0x001ab48b: add byte ptr [eax], al; test al, 4; jne 0x1ab530; lea eax, [edx + 3]; ret; 
0x001ab907: add byte ptr [eax], al; test dh, 4; jne 0x1abcad; add eax, 0xb; pop edi; ret; 
0x001a9cf2: add byte ptr [eax], al; test dl, 0x40; jne 0x1a9f70; lea eax, [edi + 7]; pop edi; ret; 
0x001ab8e0: add byte ptr [eax], al; test dl, 0x40; jne 0x1abc99; add eax, 7; pop edi; ret; 
0x001ac360: add byte ptr [eax], al; test dl, 0xf; jne 0x1ac4a0; lea eax, [ecx + 4]; ret; 
0x001a9d38: add byte ptr [eax], al; test dl, 4; jne 0x1a9f70; lea eax, [edi + 3]; pop edi; ret; 
0x001ab8ba: add byte ptr [eax], al; test dl, 4; jne 0x1abc85; add eax, 3; pop edi; ret; 
0x00125e99: add byte ptr [eax], al; test eax, eax; cmove eax, edx; add esp, 0xc; ret; 
0x00151024: add byte ptr [eax], al; test eax, eax; je 0x151030; add esp, 0x18; pop ebx; ret; 
0x0016f3b7: add byte ptr [eax], al; test eax, eax; je 0x16f3c8; add esp, 8; pop ebx; ret; 
0x0018691d: add byte ptr [eax], al; test eax, eax; je 0x186930; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x30]; 
0x0007c196: add byte ptr [eax], al; test eax, eax; je 0x7c1b0; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 4], edx; jmp eax; 
0x0007d5fe: add byte ptr [eax], al; test eax, eax; je 0x7d610; sub eax, 1; mov dword ptr [edx + 0x1a44], eax; ret; 
0x0008757e: add byte ptr [eax], al; test eax, eax; je 0x87590; sub eax, 1; mov dword ptr [edx + 0x1a58], eax; ret; 
0x0008cdbe: add byte ptr [eax], al; test eax, eax; je 0x8cdd0; sub eax, 1; mov dword ptr [edx + 0x1a78], eax; ret; 
0x0010c1f3: add byte ptr [eax], al; test eax, eax; jne 0x10c228; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x0010c296: add byte ptr [eax], al; test eax, eax; jne 0x10c2c8; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x0010c38b: add byte ptr [eax], al; test eax, eax; jne 0x10c3c0; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x0010c43b: add byte ptr [eax], al; test eax, eax; jne 0x10c470; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x0010c503: add byte ptr [eax], al; test eax, eax; jne 0x10c538; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x00114738: add byte ptr [eax], al; test eax, eax; jne 0x114760; mov ebx, dword ptr [esp + 0x20]; mov eax, 6; call dword ptr gs:[0x10]; 
0x00124848: add byte ptr [eax], al; test eax, eax; jne 0x124870; mov ebx, dword ptr [esp + 0x20]; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x00124d98: add byte ptr [eax], al; test eax, eax; jne 0x124dc0; mov ebx, dword ptr [esp + 0x20]; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x0012b676: add byte ptr [eax], al; test eax, eax; jne 0x12b6a8; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x0012b716: add byte ptr [eax], al; test eax, eax; jne 0x12b748; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x00152b16: add byte ptr [eax], al; test eax, eax; jne 0x152b27; ret; 
0x0009d6b6: add byte ptr [eax], al; test eax, eax; jne 0x9d6c7; ret; 
0x000fb5e7: add byte ptr [eax], al; test eax, eax; jne 0xfb608; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x00172bf2: add byte ptr [eax], al; test eax, eax; setne al; add esp, 0x1c; movzx eax, al; ret; 
0x00085a4f: add byte ptr [eax], al; test ecx, ecx; je 0x85a58; mov byte ptr [edx], 0; pop ebx; ret; 
0x000a0bf3: add byte ptr [eax], al; test ecx, ecx; jne 0xa0c00; add esp, 8; pop ebx; ret; 
0x000fb5a6: add byte ptr [eax], al; test ecx, ecx; js 0xfb5b0; ret; 
0x00024b72: add byte ptr [eax], al; test edx, edx; je 0x24b79; ret; 
0x000431cb: add byte ptr [eax], al; test edx, edx; je 0x431d7; bsr eax, edx; xor eax, 0x1f; ret; 
0x000431eb: add byte ptr [eax], al; test edx, edx; je 0x431f7; bsr eax, edx; xor eax, 0x1f; ret; 
0x0008ff1d: add byte ptr [eax], al; test edx, edx; mov edx, 0; cmove eax, edx; ret; 
0x0003f327: add byte ptr [eax], al; xchg dword ptr [edi], edx; cmp edx, 1; jg 0x3f3f0; call eax; 
0x0008cdd8: add byte ptr [eax], al; xchg dword ptr [edx + 0x1a74], eax; cmp eax, 1; jg 0x8cdf0; ret; 
0x00098083: add byte ptr [eax], al; xor byte ptr [ecx], 0xc0; ret; 
0x00090a6c: add byte ptr [eax], al; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00091319: add byte ptr [eax], al; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0014efe6: add byte ptr [eax], al; xor eax, 1; pop ebx; ret; 
0x000e822e: add byte ptr [eax], al; xor eax, eax; add esp, 0xc; ret; 
0x0014a49e: add byte ptr [eax], al; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x000a5b42: add byte ptr [eax], al; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00042d66: add byte ptr [eax], al; xor eax, eax; pop ebx; ret; 
0x001a72ee: add byte ptr [eax], al; xor eax, eax; pop edi; pop ebx; ret; 
0x000d9632: add byte ptr [eax], al; xor eax, eax; pop edi; pop esi; ret; 
0x000c152e: add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x000a5c19: add byte ptr [eax], al; xor eax, eax; pop edx; pop ebx; pop esi; ret; 
0x00090474: add byte ptr [eax], al; xor eax, eax; rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x0003d0b2: add byte ptr [eax], al; xor eax, eax; ret; 
0x0004193d: add byte ptr [eax], al; xor eax, ebx; pop ebx; ret; 
0x00093d5c: add byte ptr [eax], al; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x00125e04: add byte ptr [eax], al; xor ebx, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00024db8: add byte ptr [eax], al; xor ebx, ebx; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x00092ecf: add byte ptr [eax], al; xor ebx, ebx; lea esi, cs:[esi]; lea esi, cs:[esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x00123084: add byte ptr [eax], al; xor ebx, ebx; mov dword ptr [esp + 0x18], edx; xor esi, esi; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0009a5b7: add byte ptr [eax], al; xor ecx, ecx; lock cmpxchg dword ptr [edx], ecx; mov eax, 0x10; cmove eax, ecx; ret; 
0x00095377: add byte ptr [eax], al; xor ecx, ecx; xor esi, esi; call dword ptr gs:[0x10]; 
0x000430fb: add byte ptr [eax], al; xor edx, 0xffffffff; je 0x43108; bsr eax, edx; xor eax, 0x1f; ret; 
0x0004311b: add byte ptr [eax], al; xor edx, 0xffffffff; je 0x43128; bsr eax, edx; xor eax, 0x1f; ret; 
0x0008f070: add byte ptr [eax], al; xor edx, edx; call dword ptr gs:[0x10]; 
0x00094bc8: add byte ptr [eax], al; xor edx, edx; lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x0010d205: add byte ptr [eax], al; xor edx, edx; mov ecx, dword ptr [esp + 4]; mov esi, 8; call dword ptr gs:[0x10]; 
0x0010d609: add byte ptr [eax], al; xor edx, edx; mov esi, 8; mov ecx, dword ptr [ebp - 0x144]; call dword ptr gs:[0x10]; 
0x0013706e: add byte ptr [eax], al; xor edx, edx; pop ebx; mov eax, edx; ret; 
0x00094b65: add byte ptr [eax], al; xor edx, edx; pop ebx; pop esi; mov eax, edx; ret; 
0x00042923: add byte ptr [eax], al; xor edx, edx; pop ebx; ret; 
0x000402c9: add byte ptr [eax], al; xor edx, edx; sub ecx, ebx; call dword ptr gs:[0x10]; 
0x00092f73: add byte ptr [eax], al; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x0003ddc6: add byte ptr [eax], al; xor edx, edx; xor esi, esi; xor edi, edi; call dword ptr gs:[0x10]; 
0x00097a0a: add byte ptr [eax], al; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008f226: add byte ptr [eax], al; xor esi, esi; call dword ptr gs:[0x10]; 
0x000915db: add byte ptr [eax], al; xor esi, esi; lea ebx, [edi + eax + 0x28]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0009778d: add byte ptr [eax], al; xor esi, esi; mov dword ptr [ebx + 4], edx; xor edx, edx; call dword ptr gs:[0x10]; 
0x0008e6d7: add byte ptr [eax], al; xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x00091810: add byte ptr [eax], al; xor esi, esi; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x00091679: add byte ptr [eax], al; xor esi, esi; mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008f818: add byte ptr [eax], al; xor esi, esi; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000982a4: add byte ptr [eax], al; xor esi, esi; mov edx, 0x7fffffff; mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x00090adb: add byte ptr [eax], al; xor esi, esi; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008fa56: add byte ptr [eax], al; xor esi, esi; mov edx, 1; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x0018c4d2: add byte ptr [eax], al; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x00091312: add byte ptr [eax], al; xor esi, esi; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00132bd3: add byte ptr [eax], al; xor esi, esi; mov edx, ebx; mov ebx, 0xe; call dword ptr gs:[0x10]; 
0x001337a2: add byte ptr [eax], al; xor esi, esi; or dh, 1; mov ebx, 0x18; call dword ptr gs:[0x10]; 
0x0008f295: add byte ptr [eax], al; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00091e32: add byte ptr [eax], al; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0019b09f: add byte ptr [eax], bh; ret 0x840f; 
0x0015c6f1: add byte ptr [eax], bh; sbb byte ptr [edx + ebp*8 - 0x7d], dh; ret 0x8b18; 
0x001a66c3: add byte ptr [eax], bh; std; mov eax, 0; jne 0x1a6f86; pop ebx; ret; 
0x001a9799: add byte ptr [eax], bh; std; mov eax, 0; jne 0x1a9870; pop ebx; ret; 
0x001641f6: add byte ptr [eax], ch; add al, 0; add byte ptr [eax - 0x73], dl; sbb dword ptr [eax + 0x500000a2], -0x73; cmp esp, 0x55; bnd call dword ptr [eax - 0x18]; 
0x0012e46f: add byte ptr [eax], ch; add byte ptr [ecx], al; add byte ptr [ebp - 0x6ab5662], cl; call dword ptr [ebx - 0x18]; 
0x000343b7: add byte ptr [eax], cl; add byte ptr [eax], al; ret; 
0x000c2d5a: add byte ptr [eax], cl; leave; jne 0xc2d61; xor eax, eax; ret; 
0x000eb14a: add byte ptr [eax], dl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00034507: add byte ptr [eax], dl; add byte ptr [eax], al; ret; 
0x001b4411: add byte ptr [eax], dl; add byte ptr [ecx - 0x9f7dbbc], cl; ret 0xf07; 
0x0004728c: add byte ptr [eax], dl; add byte ptr [edi], cl; xchg ebp, eax; ret 0xea81; 
0x00094167: add byte ptr [eax], dl; jne 0x94178; xor eax, eax; add esp, 0xc; ret; 
0x0005adab: add byte ptr [ebp + 0x11], dh; add esp, 0x1c; ret; 
0x001a6f5c: add byte ptr [ebp + 0x11], dh; pop ebx; ret; 
0x001840b4: add byte ptr [ebp + 0x12], dh; add esp, 0x18; pop ebx; ret; 
0x000efa42: add byte ptr [ebp + 0x12], dh; add esp, 0x1c; ret; 
0x0003dbd2: add byte ptr [ebp + 0x12], dh; add esp, 0x220; pop ebx; pop esi; pop edi; ret; 
0x00116142: add byte ptr [ebp + 0x12], dh; add esp, 0x60; pop ebx; pop esi; pop edi; ret; 
0x000d46f3: add byte ptr [ebp + 0x12], dh; lea eax, [edx - 0x93144]; and ch, 2; lea edx, [edx - 0x165354]; cmove eax, edx; ret; 
0x000a8b33: add byte ptr [ebp + 0x12], dh; lea eax, [edx - 0x96c44]; and ch, 2; lea edx, [edx - 0x17cc74]; cmove eax, edx; ret; 
0x000ac2f3: add byte ptr [ebp + 0x12], dh; lea eax, [edx - 0x9bb24]; and ch, 2; lea edx, [edx - 0x17cfd4]; cmove eax, edx; ret; 
0x000a9623: add byte ptr [ebp + 0x12], dh; lea eax, [edx - 0x9e034]; and ch, 2; lea edx, [edx - 0x17d0d4]; cmove eax, edx; ret; 
0x000aa2f3: add byte ptr [ebp + 0x12], dh; lea eax, [edx - 0xa0ec4]; and ch, 2; lea edx, [edx - 0x17c244]; cmove eax, edx; ret; 
0x001785c1: add byte ptr [ebp + 0x13], dh; add esp, 0x28; pop ebx; ret; 
0x0005f678: add byte ptr [ebp + 0x13], dh; add esp, 0x78; pop ebx; ret; 
0x00087515: add byte ptr [ebp + 0x14], dh; add esp, 0x28; pop ebx; ret; 
0x00172358: add byte ptr [ebp + 0x14], dh; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x000805f4: add byte ptr [ebp + 0x15], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00178513: add byte ptr [ebp + 0x16], dh; add esp, 0x74; pop ebx; pop edi; ret; 
0x0003cd9e: add byte ptr [ebp + 0x16], dh; add esp, 0x98; pop ebx; ret; 
0x0009a69f: add byte ptr [ebp + 0x17], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x00085955: add byte ptr [ebp + 0x17], dh; add esp, 0x824; pop ebx; pop esi; ret; 
0x0018412e: add byte ptr [ebp + 0x18], dh; add esp, 0x18; pop ebx; ret; 
0x0011f5b3: add byte ptr [ebp + 0x18], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x000f0d7b: add byte ptr [ebp + 0x18], dh; add esp, 0x78; pop ebx; ret; 
0x000b8cac: add byte ptr [ebp + 0x18a0076], cl; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x00085c27: add byte ptr [ebp + 0x1a], dh; add esp, 0xa0; pop ebx; pop esi; pop edi; ret; 
0x000d97cc: add byte ptr [ebp + 0x1b80076], cl; add byte ptr [eax], al; add byte ptr [edi + 2], bh; neg eax; ret; 
0x000dc05a: add byte ptr [ebp + 0x1b], dh; add esp, 0x38; pop ebx; ret; 
0x00120a70: add byte ptr [ebp + 0x1b], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x00125e30: add byte ptr [ebp + 0x1c], dh; add esp, 0x1018; pop ebx; ret; 
0x0017be7c: add byte ptr [ebp + 0x1c], dh; add esp, 0x18; pop ebx; ret; 
0x000a0838: add byte ptr [ebp + 0x1c], dh; add esp, 0xb4; pop ebx; pop esi; ret; 
0x001927d7: add byte ptr [ebp + 0x1d], dh; add esp, 0x18; pop ebx; ret; 
0x00090fcb: add byte ptr [ebp + 0x1d], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x0009c4d7: add byte ptr [ebp + 0x1d], dh; add esp, 0x2c; ret; 
0x0005ab5b: add byte ptr [ebp + 0x1d], dh; add esp, 0x434; pop ebx; pop esi; ret; 
0x00085b4c: add byte ptr [ebp + 0x1d], dh; add esp, 0xa0; pop ebx; pop esi; pop edi; ret; 
0x00131508: add byte ptr [ebp + 0x1e], dh; add esp, 0x18; pop ebx; ret; 
0x00178f40: add byte ptr [ebp + 0x20], dh; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x0017cd9d: add byte ptr [ebp + 0x21], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0009c9a3: add byte ptr [ebp + 0x21], dh; add esp, 0x18; pop ebx; ret; 
0x0014043f: add byte ptr [ebp + 0x21], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000dea05: add byte ptr [ebp + 0x21], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x0009c743: add byte ptr [ebp + 0x21], dh; add esp, 0x2c; ret; 
0x00092ac8: add byte ptr [ebp + 0x22096], cl; add byte ptr [eax + 0x9c], bh; call dword ptr gs:[0x10]; 
0x00092bd2: add byte ptr [ebp + 0x22], dh; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x00123535: add byte ptr [ebp + 0x23], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x00131873: add byte ptr [ebp + 0x23], dh; add esp, 0x18; pop ebx; ret; 
0x001313e3: add byte ptr [ebp + 0x23], dh; add esp, 0x28; pop ebx; ret; 
0x00123293: add byte ptr [ebp + 0x23], dh; add esp, 0x54; pop ebx; pop esi; ret; 
0x00078e75: add byte ptr [ebp + 0x23], dh; mov dword ptr [edx + 4], ecx; pop ebx; pop esi; pop edi; ret; 
0x00137937: add byte ptr [ebp + 0x244c89c0], al; or al, 0xf; xchg ebp, eax; ret 0x44c7; 
0x001b12cf: add byte ptr [ebp + 0x24548bdb], al; and byte ptr [edi], cl; xchg ebp, eax; ret; 
0x001b33ef: add byte ptr [ebp + 0x24548bdb], al; sbb byte ptr [edi], cl; xchg ebp, eax; ret; 
0x0013133a: add byte ptr [ebp + 0x24], dh; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x0011e5b4: add byte ptr [ebp + 0x24], dh; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x00122c41: add byte ptr [ebp + 0x25], dh; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x00131480: add byte ptr [ebp + 0x26], dh; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x001335a8: add byte ptr [ebp + 0x26], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x001156d6: add byte ptr [ebp + 0x26], dh; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x001abc78: add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; add eax, 1; pop edi; ret; 
0x0017b8b8: add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; endbr32; mov eax, 1; ret; 
0x0008bba8: add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; endbr32; xor eax, eax; ret; 
0x001a7e98: add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; xor eax, eax; ret; 
0x0012edff: add byte ptr [ebp + 0x27], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0013128f: add byte ptr [ebp + 0x27], dh; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x001866de: add byte ptr [ebp + 0x28], dh; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x000621c3: add byte ptr [ebp + 0x290578c9], al; fisttp qword ptr [edi]; xchg ebp, eax; ret 0x448b; 
0x0014ae61: add byte ptr [ebp + 0x29], dh; add esp, 0x11c; ret; 
0x000c5e10: add byte ptr [ebp + 0x29], dh; add esp, 0x18; pop ebx; ret; 
0x000de96d: add byte ptr [ebp + 0x29], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x0009a463: add byte ptr [ebp + 0x29], dh; add esp, 0x90; pop ebx; pop esi; pop edi; ret; 
0x0012f293: add byte ptr [ebp + 0x2a], dh; mov ecx, dword ptr [esp + 0x18]; mov edx, dword ptr [esp + 0x1c]; mov eax, 0xa3; mov ebx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00125e29: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x125e4f; add esp, 0x1018; pop ebx; ret; 
0x0014ac5a: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x14aca4; add esp, 0x118; pop ebx; ret; 
0x0014acfa: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x14ad60; add esp, 0x118; pop ebx; ret; 
0x0014adba: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x14ae0b; add esp, 0x118; pop ebx; ret; 
0x0014ae5a: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x14ae8d; add esp, 0x11c; ret; 
0x0003cd97: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x3cdb7; add esp, 0x98; pop ebx; ret; 
0x0003d34f: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x3d361; add esp, 0x128; pop ebx; ret; 
0x0003d94f: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x3d96f; add esp, 0x98; pop ebx; ret; 
0x0003d9cf: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x3d9ef; add esp, 0x98; pop ebx; ret; 
0x0003da58: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x3da69; add esp, 0x9c; ret; 
0x000615b8: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x615ca; add esp, 0x1018; pop ebx; ret; 
0x000e8666: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0xe8678; add esp, 0xe8; pop ebx; ret; 
0x000e86d8: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0xe86ea; add esp, 0xe8; pop ebx; ret; 
0x000e877c: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0xe878e; add esp, 0xe8; pop ebx; ret; 
0x001243ed: add byte ptr [ebp + 0x2b], ah; add eax, 0x14; jne 0x1243ff; add esp, 0x418; pop ebx; ret; 
0x001a9842: add byte ptr [ebp + 0x2b], dh; pop ebx; ret; 
0x0015e7d0: add byte ptr [ebp + 0x2d880fd2], al; or byte ptr [eax], al; add byte ptr [esi - 0x3f], ah; ret 0xf08; 
0x00171966: add byte ptr [ebp + 0x2d], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x001864bd: add byte ptr [ebp + 0x2e], dh; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x0017a10b: add byte ptr [ebp + 0x2e], dh; add esp, 0x1c; ret; 
0x0012456c: add byte ptr [ebp + 0x2f], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0010d840: add byte ptr [ebp + 0x30840fc0], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x1477b], cl; jmp dword ptr [ebp - 0x75]; 
0x0002f7cf: add byte ptr [ebp + 0x30], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00182761: add byte ptr [ebp + 0x30], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0013a5fd: add byte ptr [ebp + 0x30], dh; pop ebx; pop esi; pop edi; ret; 
0x00060fe7: add byte ptr [ebp + 0x314574c0], al; jmp dword ptr [esi - 0x70]; 
0x001719f1: add byte ptr [ebp + 0x32], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016fa13: add byte ptr [ebp + 0x33], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x000255e0: add byte ptr [ebp + 0x33], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000e7e3d: add byte ptr [ebp + 0x33], dh; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x00181f4d: add byte ptr [ebp + 0x33], dh; add esp, 0x514; mov eax, esi; pop ebx; pop esi; ret; 
0x000e8f1e: add byte ptr [ebp + 0x33], dh; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x0017bf00: add byte ptr [ebp + 0x34], dh; add esp, 0x18; pop ebx; ret; 
0x001230aa: add byte ptr [ebp + 0x34], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0009b6bc: add byte ptr [ebp + 0x34], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x0003cf43: add byte ptr [ebp + 0x36], dh; add esp, 0x28; pop ebx; ret; 
0x00063120: add byte ptr [ebp + 0x37840fdb], al; or eax, dword ptr [eax]; add byte ptr [edi], cl; mov esi, 0x89c68900; ret 0x44c7; 
0x0009c5dd: add byte ptr [ebp + 0x37], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x001824da: add byte ptr [ebp + 0x37], dh; add esp, 0x18; pop ebx; ret; 
0x0009a971: add byte ptr [ebp + 0x37], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0009415f: add byte ptr [ebp + 0x37], dh; test byte ptr [edx + 0x80], 0x10; jne 0x94178; xor eax, eax; add esp, 0xc; ret; 
0x000a1941: add byte ptr [ebp + 0x38], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00149588: add byte ptr [ebp + 0x396374ed], al; ret; 
0x00041b70: add byte ptr [ebp + 0x39], dh; add esp, 0x18; pop ebx; ret; 
0x000a0f04: add byte ptr [ebp + 0x39b774d2], al; ret 0xb374; 
0x0011575f: add byte ptr [ebp + 0x3a], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x0017bd1e: add byte ptr [ebp + 0x3b], dh; add esp, 0x18; pop ebx; ret; 
0x0008cd22: add byte ptr [ebp + 0x3b], dh; mov dword ptr [ebx + 0x1a7c], esi; add esp, 4; pop ebx; pop esi; ret; 
0x001210c5: add byte ptr [ebp + 0x3c], dh; add esp, 0x44; mov eax, edx; pop ebx; pop esi; ret; 
0x000c45ad: add byte ptr [ebp + 0x3ce892], cl; add byte ptr [edi], cl; inc esp; ret 0x8b65; 
0x00184cd5: add byte ptr [ebp + 0x3d], dh; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x0017bf94: add byte ptr [ebp + 0x3d], dh; add esp, 0x18; pop ebx; ret; 
0x0012530f: add byte ptr [ebp + 0x3d], dh; add esp, 0x190; pop ebx; pop esi; pop edi; ret; 
0x001a8170: add byte ptr [ebp + 0x3d], dh; pop ebx; ret; 
0x000ded0c: add byte ptr [ebp + 0x3e8c8a], cl; add byte ptr [ebp - 0x1646036e], cl; call dword ptr [ecx + 0x52]; 
0x00148ad2: add byte ptr [ebp + 0x3e], dh; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x000cd5bb: add byte ptr [ebp + 0x3f], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0014ac61: add byte ptr [ebp + 0x40], dh; add esp, 0x118; pop ebx; ret; 
0x000dbcd6: add byte ptr [ebp + 0x40], dh; add esp, 0x28; pop ebx; ret; 
0x001158f8: add byte ptr [ebp + 0x40], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x001145a5: add byte ptr [ebp + 0x41], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0008e180: add byte ptr [ebp + 0x42], dh; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x000fabff: add byte ptr [ebp + 0x42], dh; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0003cc79: add byte ptr [ebp + 0x42], dh; add esp, 0x94; pop ebx; pop edi; ret; 
0x00187746: add byte ptr [ebp + 0x432b0443], cl; add al, 0x83; ret; 
0x0014b386: add byte ptr [ebp + 0x43], dh; add esp, 0x1c; ret; 
0x00178721: add byte ptr [ebp + 0x43], dh; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x00142064: add byte ptr [ebp + 0x44], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00186765: add byte ptr [ebp + 0x44], dh; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x001452c6: add byte ptr [ebp + 0x44c74004], cl; ret 8; 
0x00100a9c: add byte ptr [ebp + 0x458b0076], cl; add al, 0x83; ret; 
0x0007d7ec: add byte ptr [ebp + 0x458b0076], cl; cmp byte ptr [ecx], bh; ret; 
0x00128b69: add byte ptr [ebp + 0x45], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x001a6f28: add byte ptr [ebp + 0x45], dh; pop ebx; ret; 
0x001a9ecc: add byte ptr [ebp + 0x478d0076], cl; add al, 0x5f; ret; 
0x001ac6dc: add byte ptr [ebp + 0x478d0076], cl; cld; pop edi; ret; 
0x001aa3ac: add byte ptr [ebp + 0x478d0076], cl; cli; pop edi; ret; 
0x001aa36c: add byte ptr [ebp + 0x478d0076], cl; cmc; pop edi; ret; 
0x001a9f3c: add byte ptr [ebp + 0x478d0076], cl; or al, 0x5f; ret; 
0x001aa34c: add byte ptr [ebp + 0x478d0076], cl; pop edi; ret; 
0x001a9f5c: add byte ptr [ebp + 0x478d0076], cl; push cs; pop edi; ret; 
0x001a9eec: add byte ptr [ebp + 0x478d0076], cl; push es; pop edi; ret; 
0x001aa39c: add byte ptr [ebp + 0x478d0076], cl; stc; pop edi; ret; 
0x001aa3cc: add byte ptr [ebp + 0x478d0076], cl; std; pop edi; ret; 
0x001aa3bc: add byte ptr [ebp + 0x478d0076], cl; sti; pop edi; ret; 
0x0014adc1: add byte ptr [ebp + 0x47], dh; add esp, 0x118; pop ebx; ret; 
0x00128c4e: add byte ptr [ebp + 0x48], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0008e012: add byte ptr [ebp + 0x48], dh; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x000d4381: add byte ptr [ebp + 0x48b0170], cl; xchg dword ptr [ebp - 0x76e68137], eax; pop ebp; aam 0x31; ror byte ptr [ecx - 0x7c0ffe35], cl; ret 0x8d01; 
0x0010c2bd: add byte ptr [ebp + 0x49], dh; add esp, 0x28; pop ebx; ret; 
0x0005c5fc: add byte ptr [ebp + 0x4a8b0076], cl; add al, 0x83; ret 0x8304; 
0x0009b75d: add byte ptr [ebp + 0x4b], dh; add esp, 0x124; pop ebx; pop esi; ret; 
0x0009c249: add byte ptr [ebp + 0x4b], dh; add esp, 0x38; pop ebx; ret; 
0x0004e9c4: add byte ptr [ebp + 0x4c850fff], al; adc al, 0; add byte ptr [ecx - 0x7209ce16], cl; dec ebx; rol byte ptr [eax - 0x79f0f607], 1; ret; 
0x0010c21a: add byte ptr [ebp + 0x4c], dh; add esp, 0x28; pop ebx; ret; 
0x0009cb22: add byte ptr [ebp + 0x4d], dh; add esp, 0x124; pop ebx; pop esi; ret; 
0x0012f10f: add byte ptr [ebp + 0x4e], dh; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x000ec258: add byte ptr [ebp + 0x4f850fc9], al; add eax, dword ptr [eax]; add byte ptr [ecx], bh; ret; 
0x000ca65b: add byte ptr [ebp + 0x4f], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0007eadb: add byte ptr [ebp + 0x50], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x001781d5: add byte ptr [ebp + 0x5128244c], cl; push 4; push eax; call dword ptr [edx + 0x14]; 
0x000c4ab3: add byte ptr [ebp + 0x5144244c], cl; push dword ptr [edi + 8]; call ebx; 
0x0013f7ed: add byte ptr [ebp + 0x52102454], cl; push edi; call eax; 
0x0013f8ca: add byte ptr [ebp + 0x52102454], cl; push esi; call eax; 
0x0010c3b2: add byte ptr [ebp + 0x54], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x000648af: add byte ptr [ebp + 0x55890150], cl; add al, 0xc6; add byte ptr [0xfffb62e9], ah; jmp dword ptr [esi - 0x70]; 
0x0011429e: add byte ptr [ebp + 0x56], dh; add esp, 0x34; pop ebx; pop esi; ret; 
0x0012ee8f: add byte ptr [ebp + 0x56], dh; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x0011efcb: add byte ptr [ebp + 0x57], dh; add esp, 0x1010; pop ebx; pop esi; pop edi; ret; 
0x0007e2f4: add byte ptr [ebp + 0x57], dl; push ebx; call dword ptr [esi + 0x24]; 
0x0018bd77: add byte ptr [ebp + 0x57], dl; push esi; call dword ptr [ebx + 0x40]; 
0x000ea0aa: add byte ptr [ebp + 0x58896c58], cl; insb byte ptr es:[edi], dx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x0011ef00: add byte ptr [ebp + 0x58], dh; add esp, 0xe4; pop ebx; pop esi; ret; 
0x00129fa5: add byte ptr [ebp + 0x59], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00121ced: add byte ptr [ebp + 0x59], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x000c128b: add byte ptr [ebp + 0x5b002674], cl; pop esi; pop edi; xor eax, eax; ret; 
0x00031113: add byte ptr [ebp + 0x5b002674], cl; ret; 
0x0013c047: add byte ptr [ebp + 0x5b8f865], cl; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop ebp; ret; 
0x0014ad01: add byte ptr [ebp + 0x5c], dh; add esp, 0x118; pop ebx; ret; 
0x000dbd8b: add byte ptr [ebp + 0x5d], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x0012e40f: add byte ptr [ebp + 0x5e0974c0], 0x5b; jl 0x24f50; ret; 
0x000fbaf7: add byte ptr [ebp + 0x5e5b0141], cl; ret; 
0x0002747f: add byte ptr [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret; 
0x00121a01: add byte ptr [ebp + 0x5f], bl; pop ebx; ret; 
0x0005339a: add byte ptr [ebp + 0x5f], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0017b957: add byte ptr [ebp + 0x5f], dh; add esp, 0x18; pop ebx; ret; 
0x000d0fbb: add byte ptr [ebp + 0x61], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000e8993: add byte ptr [ebp + 0x62], dh; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x000b368b: add byte ptr [ebp + 0x66002674], cl; mov dword ptr [ecx], edx; pop ebx; ret; 
0x0013f8ee: add byte ptr [ebp + 0x69], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0012b40f: add byte ptr [ebp + 0x6d], dh; add esp, 0x24; mov eax, edx; pop ebx; pop esi; ret; 
0x0017c62b: add byte ptr [ebp + 0x6e], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x001a64bb: add byte ptr [ebp + 0x72002674], cl; push cs; movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x001752dc: add byte ptr [ebp + 0x77], dh; add esp, 0x18; pop ebx; ret; 
0x00178b1e: add byte ptr [ebp + 0x79], dh; add esp, 0x110; pop ebx; pop esi; pop edi; ret; 
0x0010bf30: add byte ptr [ebp + 0x7c], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000dc4c4: add byte ptr [ebp + 0x7d890875], cl; add al, 0x39; ret 0x45c7; 
0x0017c52f: add byte ptr [ebp + 0x7d], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x00099da5: add byte ptr [ebp + 0x8088], cl; add byte ptr [ebx + 0x8080], cl; add byte ptr [esp + eax*2 - 0x75], dh; je 0x99ddb; adc al, 0x89; ret 0xe283; 
0x00099ea5: add byte ptr [ebp + 0x8088], cl; add byte ptr [ebx + 0x8080], cl; add byte ptr [esp + ecx*2 - 0x75], dh; je 0x99edb; adc al, 0x89; ret 0xe283; 
0x00080f88: add byte ptr [ebp + 0x84b8], cl; add byte ptr [ebp - 0x9fa8b37], al; ret 0x7408; 
0x000a55d5: add byte ptr [ebp + 0x94c87], cl; add byte ptr [ecx - 0x9efdbbc], cl; ret 0xf04; 
0x0015ff53: add byte ptr [ebp + 0x9a42484], cl; add byte ptr [eax], al; push eax; push esi; mov ecx, dword ptr [esp + 0x3c]; call ecx; 
0x0003c7f5: add byte ptr [ebp + 0xa02494], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00179163: add byte ptr [ebp + 0xa78c88], cl; add byte ptr [ebp - 0x5f], ah; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + edx], ecx; ret; 
0x000a4a8b: add byte ptr [ebp + 0xa], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0014aa29: add byte ptr [ebp + 0xa], dh; add esp, 0x110; pop ebx; pop esi; pop edi; ret; 
0x000a7604: add byte ptr [ebp + 0xa], dh; add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret 4; 
0x0013d588: add byte ptr [ebp + 0xa], dh; add esp, 0x2c; ret; 
0x0014a74a: add byte ptr [ebp + 0xa], dh; add esp, 0x810; pop ebx; pop esi; pop edi; ret; 
0x0009f2e0: add byte ptr [ebp + 0xa], dh; add esp, 0x90; pop ebx; pop esi; pop edi; ret; 
0x0012dc28: add byte ptr [ebp + 0xa], dh; add esp, 0xe0; pop ebx; pop esi; pop edi; ret; 
0x000e8827: add byte ptr [ebp + 0xa], dh; add esp, 0xe8; mov eax, edx; pop ebx; ret; 
0x00034e13: add byte ptr [ebp + 0xa], dh; mov eax, edx; add esp, 0xc; ret; 
0x001b0bf9: add byte ptr [ebp + 0xb6], cl; add bh, dh; ret 0; 
0x001a9d09: add byte ptr [ebp + 0xb6], cl; add byte ptr [eax + 0x78850f01], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf01; 
0x000a0f99: add byte ptr [ebp + 0xb6], cl; add byte ptr [ebx - 0x173ef797], cl; or al, 0x83; ret 0x8901; 
0x00122ca9: add byte ptr [ebp + 0xb], dh; add esp, 0x1c; ret; 
0x0008ff1e: add byte ptr [ebp + 0xbad2], al; add byte ptr [eax], al; cmove eax, edx; ret; 
0x000436fc: add byte ptr [ebp + 0xc8d0076], cl; mov dh, 0x83; ret 0x8d01; 
0x00148ce5: add byte ptr [ebp + 0xc], dh; add esp, 0x18; pop ebx; ret; 
0x001235ff: add byte ptr [ebp + 0xd], dh; add esp, 0x54; pop ebx; pop esi; ret; 
0x000408f0: add byte ptr [ebp + 0xd], dh; add esp, 4; pop ebx; pop esi; ret; 
0x0017892d: add byte ptr [ebp + 0xe], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x001160d6: add byte ptr [ebp + 0xe], dh; add esp, 0x54; pop ebx; pop esi; ret; 
0x00120ce6: add byte ptr [ebp + 0xe], dh; add esp, 0x64; pop ebx; pop esi; ret; 
0x00115ed6: add byte ptr [ebp + 0xe], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x000431cc: add byte ptr [ebp + 0xf0674d2], al; mov ebp, 0x1ff083c2; ret; 
0x00096c9c: add byte ptr [ebp + 0xf0a0054], cl; mov edi, 0x2ac85; add byte ptr [ecx], bh; ret 0x4f0f; 
0x00178495: add byte ptr [ebp + 0xf], dh; add esp, 0x1c; ret; 
0x000da68d: add byte ptr [ebp + 0xf], dh; add esp, 0x28; pop ebx; ret; 
0x000c7de6: add byte ptr [ebp + 0xff089ff], al; xchg ebp, eax; ret 0x6eb; 
0x000b192c: add byte ptr [ebp + 0xff30076], cl; outsd dx, dword ptr [esi]; add ebx, esi; movq qword ptr [edx], mm0; mov eax, edx; ret; 
0x0008cc2c: add byte ptr [ebp + 0xff30076], cl; push ds; sti; mov eax, 0xffffffff; mov edx, eax; ret; 
0x000a69ec: add byte ptr [ebp + 0xff30076], cl; push ds; sti; mov eax, 0xffffffff; ret; 
0x0016eafc: add byte ptr [ebp + 0xff30076], cl; push ds; sti; mov eax, 1; ret; 
0x0017ce0c: add byte ptr [ebp + 0xff30076], cl; push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x0008ecfc: add byte ptr [ebp + 0xff30076], cl; push ds; sti; ret; 
0x0008ccac: add byte ptr [ebp + 0xff30076], cl; push ds; sti; xor eax, eax; ret; 
0x00025563: add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x00025540: add byte ptr [ebp + 4], dh; add esp, 0x1c; ret; 
0x000409dd: add byte ptr [ebp + 4], dh; add esp, 0x2c; ret; 
0x0012d1e8: add byte ptr [ebp + 4], dh; add esp, 0x3c; ret; 
0x001798cb: add byte ptr [ebp + 4], dh; add esp, 0x4c; ret; 
0x0013289b: add byte ptr [ebp + 4], dh; add esp, 0x7c; ret; 
0x0003c2eb: add byte ptr [ebp + 5], dh; add esp, 0x18; pop ebx; ret; 
0x0009725c: add byte ptr [ebp + 5], dh; add esp, 0x28; pop ebx; ret; 
0x000a0391: add byte ptr [ebp + 5], dh; add esp, 0x38; pop ebx; ret; 
0x000da7bd: add byte ptr [ebp + 5], dh; add esp, 0x48; pop ebx; ret; 
0x00061646: add byte ptr [ebp + 5], dh; add esp, 0x78; pop ebx; ret; 
0x0008ea17: add byte ptr [ebp + 6], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0003d7fb: add byte ptr [ebp + 6], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x00124ffb: add byte ptr [ebp + 6], dh; add esp, 0x34; pop ebx; pop esi; ret; 
0x0017cff2: add byte ptr [ebp + 6], dh; add esp, 0x54; pop ebx; pop esi; ret; 
0x00094b57: add byte ptr [ebp + 6], dh; mov eax, edx; pop ebx; pop esi; ret; 
0x00141fa0: add byte ptr [ebp + 6], dh; movzx eax, byte ptr [edx + 1]; shr eax, 1; ret; 
0x0011feae: add byte ptr [ebp + 7], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00092830: add byte ptr [ebp + 7], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000deecb: add byte ptr [ebp + 7], dh; add esp, 0x28; xor eax, eax; pop ebx; ret; 
0x0012511f: add byte ptr [ebp + 7], dh; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0013180a: add byte ptr [ebp + 7], dh; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x0003da5f: add byte ptr [ebp + 7], dh; add esp, 0x9c; ret; 
0x0017d0a5: add byte ptr [ebp + 7], dh; movzx eax, al; add esp, 0x1c; ret; 
0x0011f061: add byte ptr [ebp + 7], dh; movzx eax, al; add esp, 0x4c; ret; 
0x0014ef59: add byte ptr [ebp + 7], dh; movzx eax, ax; add esp, 0x2c; ret; 
0x000615bf: add byte ptr [ebp + 8], dh; add esp, 0x1018; pop ebx; ret; 
0x0003d356: add byte ptr [ebp + 8], dh; add esp, 0x128; pop ebx; ret; 
0x001243f4: add byte ptr [ebp + 8], dh; add esp, 0x418; pop ebx; ret; 
0x00125f73: add byte ptr [ebp + 8], dh; add esp, 0x54; mov eax, ebx; pop ebx; pop esi; ret; 
0x000e866d: add byte ptr [ebp + 8], dh; add esp, 0xe8; pop ebx; ret; 
0x0003ad7c: add byte ptr [ebp + 8], dh; mov eax, edx; add esp, 0x1c; ret 4; 
0x00094e35: add byte ptr [ebp + 8], dh; xor eax, eax; pop ebx; ret; 
0x0003cb8c: add byte ptr [ebp + 9], dh; add esp, 0x114; pop ebx; pop edi; ret; 
0x0003c636: add byte ptr [ebp + 9], dh; add esp, 0x124; pop ebx; pop esi; ret; 
0x00055771: add byte ptr [ebp + 9], dh; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000a6516: add byte ptr [ebp + 9], dh; add esp, 0x38; mov eax, ebx; pop ebx; ret 4; 
0x0003cd20: add byte ptr [ebp + 9], dh; add esp, 0x94; pop ebx; pop edi; ret; 
0x001a81a4: add byte ptr [ebp + 9], dh; pop ebx; ret; 
0x0009a3a0: add byte ptr [ebp + edx*8 - 0x77], dh; ret 0xe083; 
0x00134ff5: add byte ptr [ebp - 0x10a35379], cl; dec dword ptr [edi]; inc ebp; ret 0xec83; 
0x0003aa1b: add byte ptr [ebp - 0x1116feba], cl; idiv edi; jmp dword ptr [esi - 0x70]; 
0x000ded12: add byte ptr [ebp - 0x1646036e], cl; call dword ptr [ecx + 0x52]; 
0x000a184e: add byte ptr [ebp - 0x19e2937a], cl; call dword ptr [eax + 0x57]; 
0x0009c135: add byte ptr [ebp - 0x1a2d237d], cl; jmp dword ptr [ebp - 0x5d]; 
0x0009c141: add byte ptr [ebp - 0x1a2e637d], cl; call dword ptr [ecx + 0x50]; 
0x0015a956: add byte ptr [ebp - 0x23687240], al; sub al, 0xf9; dec dword ptr [edi]; inc esp; ret 0xec83; 
0x00128dcc: add byte ptr [ebp - 0x268afea6], cl; mov eax, esi; pop ebx; pop esi; ret; 
0x00024b22: add byte ptr [ebp - 0x33], dh; ret; 
0x000d84c2: add byte ptr [ebp - 0x35f373], cl; call dword ptr [eax - 0x73]; 
0x001ac41c: add byte ptr [ebp - 0x3776ff8a], cl; ret; 
0x001ac4ff: add byte ptr [ebp - 0x37af037], al; add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x001532bf: add byte ptr [ebp - 0x387cfeba], cl; adc byte ptr [ecx], bh; ret 0x6674; 
0x00085a50: add byte ptr [ebp - 0x39fc8b37], al; add al, byte ptr [eax]; pop ebx; ret; 
0x001368db: add byte ptr [ebp - 0x39ffd98c], cl; inc edx; jmp dword ptr [eax]; 
0x00125e9a: add byte ptr [ebp - 0x3dbbf040], al; add esp, 0xc; ret; 
0x000c0f2d: add byte ptr [ebp - 0x3e7efff4], cl; inc ebx; rcl dword ptr [eax], 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00172bf3: add byte ptr [ebp - 0x3f6af040], al; add esp, 0x1c; movzx eax, al; ret; 
0x001a9f6c: add byte ptr [ebp - 0x3fceff8a], cl; pop edi; ret; 
0x001543fc: add byte ptr [ebp - 0x41f0ff8a], cl; ret 0xe883; 
0x000f1cdd: add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ebx - 0x46f63]; dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x000f561d: add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x0009a4eb: add byte ptr [ebp - 0x46dfdbac], cl; pop ds; add byte ptr [eax], al; add byte ptr [ebp - 0x76e3db8c], cl; ret; 
0x0012b4c1: add byte ptr [ebp - 0x47c58a40], al; rol byte ptr [eax], 1; add byte ptr [eax], al; mov ebx, 0xffffffff; mov edx, 0xffffffff; call dword ptr gs:[0x10]; 
0x0012b3e1: add byte ptr [ebp - 0x47c58a40], al; rol byte ptr [eax], cl; add byte ptr [eax], al; mov ebx, 0xffffffff; mov edx, 0xffffffff; call dword ptr gs:[0x10]; 
0x00115d61: add byte ptr [ebp - 0x47d3dbac], cl; sub al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0009feb6: add byte ptr [ebp - 0x47e7dbac], cl; add eax, dword ptr [ecx]; add byte ptr [eax], al; mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0012ee69: add byte ptr [ebp - 0x47f3dbb4], cl; lds eax, ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0019f3ab: add byte ptr [ebp - 0x47ffd98c], cl; add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x19f3b9; neg eax; ret; 
0x00073e8b: add byte ptr [ebp - 0x4cb7b], cl; call dword ptr [ecx - 1]; 
0x00164727: add byte ptr [ebp - 0x4f7af025], al; add byte ptr [eax], al; add byte ptr [ebx + 0x4c8d01f8], al; add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x448b; 
0x0015834f: add byte ptr [ebp - 0x577af025], al; add byte ptr [eax], al; add byte ptr [ebx + 0x4c8d01f8], al; add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x448b; 
0x000d77cf: add byte ptr [ebp - 0x577bf040], al; add byte ptr [eax], al; add byte ptr [ecx - 0x362f4b], cl; dec dword ptr [edi]; mov ebp, 0x89d189f0; ret; 
0x000291fc: add byte ptr [ebp - 0x57cff8a], cl; add al, 0x74; sbb byte ptr [ebx - 0x7cfbdba4], cl; rol byte ptr [ecx], 0x83; ret 0x8901; 
0x00179169: add byte ptr [ebp - 0x5f], ah; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + edx], ecx; ret; 
0x00157803: add byte ptr [ebp - 0x64c8f7a], cl; call dword ptr [eax - 0x73]; 
0x00130e83: add byte ptr [ebp - 0x65a0379], cl; call dword ptr [eax - 0x18]; 
0x0010df29: add byte ptr [ebp - 0x65e477d], cl; call dword ptr [eax - 0x73]; 
0x000c425a: add byte ptr [ebp - 0x6642f7b], cl; call dword ptr [eax - 0x73]; 
0x000c3fc6: add byte ptr [ebp - 0x6643b7e], cl; call dword ptr [eax - 0x73]; 
0x000a764b: add byte ptr [ebp - 0x6662380], cl; call dword ptr [eax + 0x68]; 
0x000a7142: add byte ptr [ebp - 0x6666780], cl; call dword ptr [eax + 0x68]; 
0x000a35e5: add byte ptr [ebp - 0x666e77d], cl; call dword ptr [eax - 0x73]; 
0x00083d23: add byte ptr [ebp - 0x67cb77a], cl; call dword ptr [eax - 0x73]; 
0x0005b930: add byte ptr [ebp - 0x686277a], cl; call dword ptr [eax - 0x73]; 
0x00031ad3: add byte ptr [ebp - 0x68cab80], cl; call dword ptr [eax - 0x18]; 
0x0003109a: add byte ptr [ebp - 0x68d0379], cl; call dword ptr [eax - 0x73]; 
0x000275a9: add byte ptr [ebp - 0x68ffb79], cl; call dword ptr [eax - 0x73]; 
0x00025e48: add byte ptr [ebp - 0x6901b7f], cl; call dword ptr [eax - 0x73]; 
0x00024f95: add byte ptr [ebp - 0x6989380], cl; call dword ptr [eax + 0x6a]; 
0x000605f4: add byte ptr [ebp - 0x69c6a7d], cl; call dword ptr [eax + 0x68]; 
0x0016e7e8: add byte ptr [ebp - 0x69d6a7d], cl; call dword ptr [eax - 0x18]; 
0x00151566: add byte ptr [ebp - 0x6a3827d], cl; call dword ptr [eax - 0x73]; 
0x00151fd8: add byte ptr [ebp - 0x6a3827e], cl; call dword ptr [eax - 0x73]; 
0x001513c5: add byte ptr [ebp - 0x6a4117d], cl; call dword ptr [eax - 0x73]; 
0x000606ff: add byte ptr [ebp - 0x6a6a47d], cl; call dword ptr [ebp + 0x50]; 
0x000248c7: add byte ptr [ebp - 0x6a9f27d], cl; call dword ptr [edi + 0x57]; 
0x0003416b: add byte ptr [ebp - 0x6a9f27d], cl; call dword ptr [esi - 1]; 
0x0012e474: add byte ptr [ebp - 0x6ab5662], cl; call dword ptr [ebx - 0x18]; 
0x001272ad: add byte ptr [ebp - 0x6ad017d], cl; call dword ptr [edx + 0x52]; 
0x00127293: add byte ptr [ebp - 0x6ad557d], cl; call dword ptr [ecx + 0x51]; 
0x001271f7: add byte ptr [ebp - 0x6aef47d], cl; call dword ptr [edx + 0x52]; 
0x001271dd: add byte ptr [ebp - 0x6af187d], cl; call dword ptr [ecx + 0x51]; 
0x00127141: add byte ptr [ebp - 0x6b0087d], cl; call dword ptr [edx + 0x52]; 
0x00127127: add byte ptr [ebp - 0x6b03e7d], cl; call dword ptr [ecx + 0x51]; 
0x00125d15: add byte ptr [ebp - 0x6b53f80], cl; jmp dword ptr [ebp - 0x75]; 
0x0011eeb3: add byte ptr [ebp - 0x6b5da7a], cl; call dword ptr [eax - 0x18]; 
0x00110bc7: add byte ptr [ebp - 0x6b6d579], cl; call dword ptr [eax - 0x73]; 
0x000f190b: add byte ptr [ebp - 0x6b87979], cl; call dword ptr [eax - 0x73]; 
0x00039e1e: add byte ptr [ebp - 0x6b9ff55], cl; inc dword ptr [ebx - 0x7c72f314]; shr dword ptr [esi], 1; stc; call dword ptr [eax - 0x18]; 
0x000a42b2: add byte ptr [ebp - 0x6be8479], cl; call dword ptr [eax - 0x73]; 
0x0009ebb3: add byte ptr [ebp - 0x6be9e79], cl; call dword ptr [eax - 0x73]; 
0x0009d5b6: add byte ptr [ebp - 0x6bf007f], cl; call dword ptr [eax - 0x73]; 
0x000965e6: add byte ptr [ebp - 0x6bfa27a], cl; call dword ptr [eax - 0x73]; 
0x000957cc: add byte ptr [ebp - 0x6bfaa7a], cl; call dword ptr [eax - 0x73]; 
0x00093c20: add byte ptr [ebp - 0x6c05b79], cl; call dword ptr [eax - 0x73]; 
0x00092b2b: add byte ptr [ebp - 0x6c09579], cl; call dword ptr [eax - 0x73]; 
0x00078910: add byte ptr [ebp - 0x6ccf87a], cl; call dword ptr [eax - 0x73]; 
0x0018aa1f: add byte ptr [ebp - 0x6cd5779], cl; call dword ptr [eax + 0x6a]; 
0x00047771: add byte ptr [ebp - 0x6cfc179], cl; call dword ptr [eax - 0x73]; 
0x0004e813: add byte ptr [ebp - 0x6cfcb79], cl; call dword ptr [eax - 0x73]; 
0x00028f4e: add byte ptr [ebp - 0x6d54579], cl; call dword ptr [eax - 0x73]; 
0x00029b7e: add byte ptr [ebp - 0x6d5457a], cl; call dword ptr [eax - 0x73]; 
0x000288a4: add byte ptr [ebp - 0x6d5457d], cl; call dword ptr [eax - 0x73]; 
0x0011719f: add byte ptr [ebp - 0x6f7bf00a], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x7ce7dbbc], cl; ret; 
0x0008074f: add byte ptr [ebp - 0x6ff7d], cl; call dword ptr [eax - 0x73]; 
0x001aaf0b: add byte ptr [ebp - 0x72ffd98c], cl; inc ecx; pop es; ret; 
0x001aaf5b: add byte ptr [ebp - 0x72ffd98c], cl; inc ecx; push cs; ret; 
0x001aaefb: add byte ptr [ebp - 0x72ffd98c], cl; inc ecx; push es; ret; 
0x001ab5bb: add byte ptr [ebp - 0x72ffd98c], cl; inc edx; push cs; ret; 
0x001ab55b: add byte ptr [ebp - 0x72ffd98c], cl; inc edx; push es; ret; 
0x001a9e8b: add byte ptr [ebp - 0x72ffd98c], cl; pop es; pop edi; ret; 
0x0010c43c: add byte ptr [ebp - 0x74d08a40], al; pop esp; and al, 0x30; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x0010c38c: add byte ptr [ebp - 0x74d08a40], al; pop esp; and al, 0x30; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x0010c504: add byte ptr [ebp - 0x74d08a40], al; pop esp; and al, 0x30; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x0010c1f4: add byte ptr [ebp - 0x74d08a40], al; pop esp; and al, 0x30; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x0012b717: add byte ptr [ebp - 0x74d38a40], al; pop esp; and al, 0x30; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x0012b677: add byte ptr [ebp - 0x74d38a40], al; pop esp; and al, 0x30; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x0010c297: add byte ptr [ebp - 0x74d38a40], al; pop esp; and al, 0x30; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x00176474: add byte ptr [ebp - 0x74d7dbb4], cl; push eax; add al, 0x51; push eax; call dword ptr [edx + 8]; 
0x00124d99: add byte ptr [ebp - 0x74dd8a40], al; pop esp; and al, 0x20; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00124849: add byte ptr [ebp - 0x74dd8a40], al; pop esp; and al, 0x20; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x0003c9e9: add byte ptr [ebp - 0x74dd8a40], al; pop esp; and al, 0x20; mov eax, 0xb3; mov ecx, 8; call dword ptr gs:[0x10]; 
0x00114739: add byte ptr [ebp - 0x74dd8a40], al; pop esp; and al, 0x20; mov eax, 6; call dword ptr gs:[0x10]; 
0x001149b9: add byte ptr [ebp - 0x74dd8a40], al; pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 8; call dword ptr gs:[0x10]; 
0x00103e8b: add byte ptr [ebp - 0x74ffd98c], cl; or cl, byte ptr [ecx]; or byte ptr [ebx - 0x3d7cfb40], al; add al, 0x39; ret; 
0x0008322a: add byte ptr [ebp - 0x75371], cl; dec dword ptr [ecx - 0x7e30d621]; call dword ptr [ebx + 0xf000005]; 
0x00189d05: add byte ptr [ebp - 0x75], ah; adc eax, 0; mov dword ptr [edx + eax], 0x16; xor eax, eax; ret; 
0x0014b0fd: add byte ptr [ebp - 0x75], ah; adc eax, 0; mov eax, dword ptr [eax + 0x1c8]; mov eax, dword ptr [edx + eax]; ret; 
0x000e8c5e: add byte ptr [ebp - 0x75], ah; or eax, 0x14; mov dword ptr [esp + 0x13c], ecx; mov ecx, dword ptr [esp + 0x164]; call dword ptr gs:[0x10]; 
0x00125df7: add byte ptr [ebp - 0x75], ah; sbb eax, 0x14; mov dword ptr [esp + 0x100c], ebx; xor ebx, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0009a4f4: add byte ptr [ebp - 0x76e3db8c], cl; ret; 
0x000e7620: add byte ptr [ebp - 0x76e48b40], al; ret 0xf75b; 
0x0008d840: add byte ptr [ebp - 0x76ec8b40], al; dec esp; and al, 0x10; mov eax, dword ptr [eax + 4]; add esp, 0xc; jmp eax; 
0x0018691e: add byte ptr [ebp - 0x76f28b40], al; push esp; and al, 4; jmp dword ptr [eax + 0x30]; 
0x000c6efb: add byte ptr [ebp - 0x76ffd98c], cl; ret 0xc189; 
0x000ac77b: add byte ptr [ebp - 0x76ffd98c], cl; ret; 
0x000a238f: add byte ptr [ebp - 0x77], dl; ret 0x5657; 
0x000b9cfb: add byte ptr [ebp - 0x77ffd98c], cl; pop ss; pop edi; pop esi; pop ebx; ret; 
0x0004735c: add byte ptr [ebp - 0x7a22ff8a], cl; je 0x47326; stc; jmp dword ptr [ebp - 0x75]; 
0x000c78dc: add byte ptr [ebp - 0x7a22ff8a], cl; je 0xc78a6; stc; jmp dword ptr [ebp - 0x75]; 
0x0008c426: add byte ptr [ebp - 0x7c1a8a0a], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0009e2c7: add byte ptr [ebp - 0x7c228b40], al; clc; add al, 0x74; fmul dword ptr [ebp - 0x676ab79]; call dword ptr [eax - 0x73]; 
0x001475a8: add byte ptr [ebp - 0x7cbb8b40], al; in al, dx; add al, 0x89; ret; 
0x0014eea8: add byte ptr [ebp - 0x7cbd8b40], al; in al, dx; or al, 0x89; ret; 
0x0014e2a8: add byte ptr [ebp - 0x7cc08b40], al; in al, dx; add al, 0x89; ret; 
0x000b3abf: add byte ptr [ebp - 0x7cc78a40], al; ret; 
0x000e7813: add byte ptr [ebp - 0x7ccf8b40], al; in al, dx; or byte ptr [esi + 0x53], dl; call eax; 
0x000361af: add byte ptr [ebp - 0x7cd58a40], al; ret; 
0x0013ac77: add byte ptr [ebp - 0x7cdb8b40], al; in al, dx; or byte ptr [ebx - 1], dl; jae 0x13acb3; call eax; 
0x00130f02: add byte ptr [ebp - 0x7ce18b2e], al; in al, dx; or byte ptr [ebp - 0x659d779], cl; call dword ptr [eax + 0x55]; 
0x0002718d: add byte ptr [ebp - 0x7cec8b40], al; in al, dx; or byte ptr [ebp - 0x218ef36d], cl; call dword ptr [edx + 0x50]; 
0x00061be7: add byte ptr [ebp - 0x7cefdb8c], cl; in al, dx; or byte ptr [ebp - 0x6cf986d], cl; call dword ptr [esi + 0x52]; 
0x0015205d: add byte ptr [ebp - 0x7cf18a40], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0014b415: add byte ptr [ebp - 0x7cf18b2e], al; les ecx, ptr [eax]; mov eax, edx; pop ebx; ret; 
0x0005acdf: add byte ptr [ebp - 0x7cf38b40], al; call 0x44835eb; ret; 
0x0016f3b8: add byte ptr [ebp - 0x7cf48b40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x000a0bf4: add byte ptr [ebp - 0x7cf88a37], al; les ecx, ptr [eax]; pop ebx; ret; 
0x00172d35: add byte ptr [ebp - 0x7cf98b2e], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00151025: add byte ptr [ebp - 0x7cf98b40], al; les ebx, ptr [eax]; pop ebx; ret; 
0x001111eb: add byte ptr [ebp - 0x7cffd98c], cl; in al, dx; or al, 0x83; ret; 
0x00124bcb: add byte ptr [ebp - 0x7cffd98c], cl; in al, dx; or byte ptr [ebp - 0x6a03f7d], cl; call dword ptr [eax - 0x73]; 
0x0016ee0b: add byte ptr [ebp - 0x7cffd98c], cl; in al, dx; or byte ptr [ebx + 0x74ff1043], cl; and al, 0x14; push esi; call dword ptr [eax + 4]; 
0x000a3dbb: add byte ptr [ebp - 0x7cffd98c], cl; ret 0x108; 
0x000aadbb: add byte ptr [ebp - 0x7cffd98c], cl; ret 0x3901; 
0x00047b3b: add byte ptr [ebp - 0x7cffd98c], cl; ret 0xf01; 
0x0002bdbb: add byte ptr [ebp - 0x7cffd98c], cl; ret; 
0x000ffa7b: add byte ptr [ebp - 0x7cffd98c], cl; rol byte ptr [ecx], 0x39; ret; 
0x001a5abb: add byte ptr [ebp - 0x7cffd98c], cl; ror byte ptr [eax], 0x83; ret 0x8308; 
0x0019b1ab: add byte ptr [ebp - 0x7effd98c], cl; ret; 
0x00104fd2: add byte ptr [ebp - 0x8d68b40], al; shr byte ptr [eax - 0x577bf0fa], 1; adc byte ptr [eax], al; add dh, dh; ret 0xf02; 
0x00080f8e: add byte ptr [ebp - 0x9fa8b37], al; ret 0x7408; 
0x001a9afb: add byte ptr [ebp - 0x9ffd98c], cl; ret 0x7510; 
0x000a9395: add byte ptr [ebp - 0xaa9a37e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x0013d605: add byte ptr [ebp - 0xaa9b37e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x000a93e5: add byte ptr [ebp - 0xaacc37e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x0013d655: add byte ptr [ebp - 0xaacd37e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x000a8b65: add byte ptr [ebp - 0xaafe37e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x0013d5b5: add byte ptr [ebp - 0xaaff37e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x0017a2a7: add byte ptr [ebp - 0xc49e37d], cl; call dword ptr [eax - 0x73]; 
0x001748e7: add byte ptr [ebp - 0xca3737d], cl; call dword ptr [eax - 0x73]; 
0x0015d4a4: add byte ptr [ebp - 0xe2f5379], cl; call dword ptr [eax + 0x6a]; 
0x0015d9e8: add byte ptr [ebp - 0xe2f537a], cl; call dword ptr [eax + 0x6a]; 
0x0012f083: add byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x12f098; ret; 
0x0003c99d: add byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x3c9b0; pop ebx; ret; 
0x000a01e0: add byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0xa01f8; pop ebx; ret; 
0x0010c1b4: add byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff001; jae 0x24f50; ret; 
0x0003c95e: add byte ptr [ebp - 1], ah; adc eax, 0x10; mov ebx, edx; cmp eax, 0xfffff001; jae 0x24f50; ret; 
0x001214da: add byte ptr [ebp - 1], ah; adc eax, 0x10; mov ebx, edx; ret; 
0x000eab61: add byte ptr [ebp - 1], ah; adc eax, 0x10; pop ebx; cmp eax, 0xfffff001; jae 0x24f50; ret; 
0x0014038f: add byte ptr [ebp - 1], ah; adc eax, 0x10; pop ebx; ret; 
0x0009c2a8: add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x0015047b: add byte ptr [ebx + 0x1008b11], cl; ret 0x5052; 
0x000704b2: add byte ptr [ebx + 0x100955c], cl; ret; 
0x0009b123: add byte ptr [ebx + 0x10408300], cl; add dword ptr [ebx + 0x458d1470], ecx; inc dword ptr [ebx - 0x69f00208]; ret; 
0x0007d4ef: add byte ptr [ebx + 0x106a04ec], al; push ebp; push esi; call dword ptr [eax + 0x1c]; 
0x00125242: add byte ptr [ebx + 0x10880], cl; add byte ptr [ebx - 0x3f7adfc0], cl; cmove eax, edx; ret; 
0x0012575e: add byte ptr [ebx + 0x10882], cl; add byte ptr [ebx - 0x3f7af3c0], cl; je 0x12576d; ret; 
0x0016ed6f: add byte ptr [ebx + 0x10b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00116984: add byte ptr [ebx + 0x10c2444], cl; ret 0xfa81; 
0x00185d09: add byte ptr [ebx + 0x1102454], cl; ret 0xcdb8; 
0x00196c99: add byte ptr [ebx + 0x11740fe7], al; call 0x189c1d; add ebx, 0x44d0c; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00194c99: add byte ptr [ebx + 0x11740fe7], al; call 0x189c1d; add ebx, 0x46a8c; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00109347: add byte ptr [ebx + 0x1182454], cl; ret 0x44c7; 
0x000ea07e: add byte ptr [ebx + 0x1200011], bh; lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x00081940: add byte ptr [ebx + 0x1282444], cl; ret 0xe852; 
0x00184fb8: add byte ptr [ebx + 0x1442474], cl; ret; 
0x000e8c6c: add byte ptr [ebx + 0x164248c], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00034034: add byte ptr [ebx + 0x17080], cl; add byte ptr [ebx + 0x548b0204], cl; and al, 4; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x00032ba4: add byte ptr [ebx + 0x17080], cl; add byte ptr [ebx + 0x8b0204], cl; mov eax, dword ptr [eax + 0x54]; ret; 
0x001792e7: add byte ptr [ebx + 0x17483], cl; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x001939a5: add byte ptr [ebx + 0x18], dh; call 0x189c1d; add ebx, 0x47a03; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00193325: add byte ptr [ebx + 0x18], dh; call 0x189c1d; add ebx, 0x47e03; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0017940f: add byte ptr [ebx + 0x19083], cl; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x001515d1: add byte ptr [ebx + 0x197f01f8], al; add esp, 4; pop ebx; pop esi; ret; 
0x001926cf: add byte ptr [ebx + 0x19bb0cec], al; add byte ptr [eax], al; add byte ptr [edi - 0x18], dl; ret 0xf561; 
0x0017949f: add byte ptr [ebx + 0x1a083], cl; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00060fe1: add byte ptr [ebx + 0x1a0c83], cl; add byte ptr [ebp + 0x314574c0], al; jmp dword ptr [esi - 0x70]; 
0x0008cd37: add byte ptr [ebx + 0x1a7883], al; add byte ptr [ecx], al; add esp, 4; pop ebx; pop esi; ret; 
0x001aaaef: add byte ptr [ebx + 0x1b720eea], al; lea eax, [edi + 0xd]; pop edi; ret; 
0x001abb0f: add byte ptr [ebx + 0x1b720eef], al; lea eax, [eax + 0xd]; pop edi; ret; 
0x001ab1af: add byte ptr [ebx + 0x1b7c0ec2], al; lea eax, [ecx + 0xe]; ret; 
0x0005b84f: add byte ptr [ebx + 0x1b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0007cac0: add byte ptr [ebx + 0x1b810c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00115b72: add byte ptr [ebx + 0x1b824ac], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00115d5a: add byte ptr [ebx + 0x1bc24b4], cl; add byte ptr [eax], al; lea edx, [esp + 0x2c]; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x0019ceae: add byte ptr [ebx + 0x1c740fe7], al; call 0x189c1d; add ebx, 0x3f2b7; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0019beae: add byte ptr [ebx + 0x1c740fe7], al; call 0x189c1d; add ebx, 0x400f7; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0019aece: add byte ptr [ebx + 0x1c740fe7], al; call 0x189c1d; add ebx, 0x40f17; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0014fc0a: add byte ptr [ebx + 0x1c895], cl; add bh, dh; ret 0; 
0x0003486d: add byte ptr [ebx + 0x1d080], cl; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x00198c8b: add byte ptr [ebx + 0x1f740fe7], al; call 0x189c1d; add ebx, 0x42f9a; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00187443: add byte ptr [ebx + 0x1f7f01f8], al; add esp, 4; pop ebx; pop esi; ret; 
0x0010bcc2: add byte ptr [ebx + 0x207f01f8], al; add esp, 4; pop ebx; pop esi; ret; 
0x00041ac2: add byte ptr [ebx + 0x207f01fa], al; add esp, 0x14; pop ebx; pop esi; ret; 
0x00188841: add byte ptr [ebx + 0x217f01f8], al; add esp, 4; pop ebx; pop esi; ret; 
0x00182550: add byte ptr [ebx + 0x227f01f8], al; add esp, 8; pop ebx; ret; 
0x00040180: add byte ptr [ebx + 0x227f01fa], al; add esp, 0x14; pop ebx; pop esi; ret; 
0x00170ef6: add byte ptr [ebx + 0x239880], cl; add byte ptr [ebx + 0x6a08ec], al; push ebx; call dword ptr [eax + 0x14]; 
0x0010d29e: add byte ptr [ebx + 0x23c2484], cl; add byte ptr [eax], al; mov dword ptr [esp + 0xac], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x000dd016: add byte ptr [ebx + 0x247f01f8], al; add esp, 8; pop ebx; ret; 
0x001576dd: add byte ptr [ebx + 0x257f01f8], al; add esp, 8; pop ebx; ret; 
0x0009287d: add byte ptr [ebx + 0x28901e0], al; xor eax, eax; ret; 
0x000605af: add byte ptr [ebx + 0x28907c8], al; mov eax, 1; ret; 
0x00149d38: add byte ptr [ebx + 0x29042454], cl; fidivr dword ptr [ecx]; ret 0x8e0f; 
0x000e4618: add byte ptr [ebx + 0x290c247c], cl; retf 0x490f; ret 0x1c8d; 
0x0006f1b9: add byte ptr [ebx + 0x2964247c], cl; ret; 
0x0012368f: add byte ptr [ebx + 0x29], bl; ret 0xc085; 
0x001aaadf: add byte ptr [ebx + 0x2b720dea], al; lea eax, [edi + 0xc]; pop edi; ret; 
0x001abaff: add byte ptr [ebx + 0x2b720def], al; lea eax, [eax + 0xc]; pop edi; ret; 
0x001ab19f: add byte ptr [ebx + 0x2b7c0dc2], al; lea eax, [ecx + 0xd]; ret; 
0x0012d59b: add byte ptr [ebx + 0x2f7f01f9], al; add esp, 8; pop ebx; ret; 
0x00093f26: add byte ptr [ebx + 0x3108244c], cl; sar byte ptr [eax + 0xaf], cl; mov esi, 8; call dword ptr gs:[0x10]; 
0x000938a6: add byte ptr [ebx + 0x3108244c], cl; sar byte ptr [esi + 8], cl; call dword ptr gs:[0x10]; 
0x0011fcd4: add byte ptr [ebx + 0x3108245c], cl; leave; call dword ptr gs:[0x10]; 
0x001ae479: add byte ptr [ebx + 0x31102474], cl; fld xword ptr [ecx]; ret 0xe2c1; 
0x0015fc95: add byte ptr [ebx + 0x314c2444], cl; imul al; scasd eax, dword ptr es:[edi]; ret 0xffff; 
0x000611b1: add byte ptr [ebx + 0x317f01fa], al; add esp, 0x18; pop ebx; ret; 
0x0004096e: add byte ptr [ebx + 0x34408b00], cl; add esp, 4; pop ebx; pop esi; ret; 
0x000f2b05: add byte ptr [ebx + 0x348d08ec], al; test dword ptr [eax], ecx; add byte ptr [eax], al; add byte ptr [ebx - 0x46f63], cl; call dword ptr [esi + 0x51]; 
0x001304a4: add byte ptr [ebx + 0x367401ff], al; lea ecx, [esp + 0xc]; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x0012f0e4: add byte ptr [ebx + 0x367401ff], al; lea ecx, [esp + 0xc]; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x0008f55b: add byte ptr [ebx + 0x377f01f8], al; pop ebx; pop esi; pop edi; ret; 
0x0008444f: add byte ptr [ebx + 0x389cfe0], al; pop ebx; pop esi; pop edi; ret; 
0x00139e0f: add byte ptr [ebx + 0x390c1e5c], cl; ret 0x820f; 
0x001365d7: add byte ptr [ebx + 0x390c2444], cl; ret 0x830f; 
0x00051755: add byte ptr [ebx + 0x390c2444], cl; ret; 
0x0006f4c4: add byte ptr [ebx + 0x390c2454], cl; ret 0x840f; 
0x000a42cf: add byte ptr [ebx + 0x390c246c], cl; fimul word ptr [ebp - 0x6af0d5fc]; ret; 
0x001395af: add byte ptr [ebx + 0x39101e5c], cl; ret 0x820f; 
0x000710d8: add byte ptr [ebx + 0x39102444], cl; ret 0x8c0f; 
0x000527fd: add byte ptr [ebx + 0x39102444], cl; ret; 
0x00173b90: add byte ptr [ebx + 0x3914244c], cl; ret 0x4e0f; 
0x000a665b: add byte ptr [ebx + 0x39242444], cl; ret; 
0x001479d3: add byte ptr [ebx + 0x3934246c], cl; ret 0x470f; 
0x00125541: add byte ptr [ebx + 0x3940247c], cl; fmul dword ptr [ebx + 0xf046a09]; dec edi; ret; 
0x0014f695: add byte ptr [ebx + 0x396604ec], al; ret 0x470f; 
0x00186918: add byte ptr [ebx + 0x3a080], cl; add byte ptr [ebp - 0x76f28b40], al; push esp; and al, 4; jmp dword ptr [eax + 0x30]; 
0x001aaacf: add byte ptr [ebx + 0x3b720bea], al; lea eax, [edi + 0xa]; pop edi; ret; 
0x001abaef: add byte ptr [ebx + 0x3b720bef], al; lea eax, [eax + 0xa]; pop edi; ret; 
0x001ab18f: add byte ptr [ebx + 0x3b7c0bc2], al; lea eax, [ecx + 0xb]; ret; 
0x0010b967: add byte ptr [ebx + 0x3b7f01f8], al; call dword ptr [esi]; 
0x001340cf: add byte ptr [ebx + 0x3f096], cl; add byte ptr [ecx - 0x33f7b], cl; inc edi; test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x00087bd7: add byte ptr [ebx + 0x408b0850], cl; adc byte ptr [ecx + 0x39082444], cl; ret 0x8c74; 
0x000a3891: add byte ptr [ebx + 0x418d4451], cl; cmp byte ptr [ecx + 0x39102444], cl; ret 0x840f; 
0x0008779e: add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp + 0x396774c9], al; ret; 
0x0007f23e: add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp + 0x396f74c9], al; ret; 
0x00084984: add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp + 0x45840fc9], al; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x0007c3cd: add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp - 0x337bf037], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x00084c6e: add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; mov edi, 0x39000000; ret; 
0x0007fdb3: add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; retf 0; add byte ptr [ecx], bh; ret; 
0x0007de8d: add byte ptr [ebx + 0x428b4857], cl; or byte ptr [ebp + 0x393074c9], al; ret; 
0x0010d74f: add byte ptr [ebx + 0x438b0453], cl; or byte ptr [ecx], bh; ret 0x840f; 
0x0016ee0f: add byte ptr [ebx + 0x438b08ec], al; adc bh, bh; je 0x16ee3d; adc al, 0x56; call dword ptr [eax + 4]; 
0x001754cf: add byte ptr [ebx + 0x438b08ec], al; add al, 0x56; push ebx; call dword ptr [eax + 0x24]; 
0x001714b7: add byte ptr [ebx + 0x438b08ec], al; add al, 0xff; je 0x1714e5; sbb al, 0x53; call dword ptr [eax]; 
0x00179c5f: add byte ptr [ebx + 0x438b08ec], al; or bh, bh; je 0x179c8d; adc al, 0x53; call dword ptr [eax]; 
0x00179e5e: add byte ptr [ebx + 0x438b08ec], al; or bh, bh; je 0x179e8c; sbb al, 0x53; call dword ptr [eax + 0xc]; 
0x00176b40: add byte ptr [ebx + 0x438b08ec], al; push eax; push dword ptr [esp + 0x30]; push esi; call dword ptr [eax + 4]; 
0x0016facf: add byte ptr [ebx + 0x438b0cec], al; add al, 0x53; call dword ptr [eax + 0x10]; 
0x000421c1: add byte ptr [ebx + 0x438d18c4], al; push es; pop ebx; ret; 
0x0008f35e: add byte ptr [ebx + 0x4408b08], cl; mov dword ptr [ecx + 4], eax; mov dword ptr [eax], ecx; mov dword ptr [edx + 0x924], 0; ret; 
0x00032d9f: add byte ptr [ebx + 0x440f06f8], al; ret 0xc89; 
0x000a6655: add byte ptr [ebx + 0x4489b], cl; add byte ptr [ebx + 0x39242444], cl; ret; 
0x0003ca3f: add byte ptr [ebx + 0x448b10c4], al; and al, 0xc; add esp, 0x14; pop ebx; pop esi; ret; 
0x000611fa: add byte ptr [ebx + 0x448b10c4], al; and al, 0xc; add esp, 0x18; pop ebx; ret; 
0x000d37b2: add byte ptr [ebx + 0x448b8614], cl; cmp dword ptr [ecx + edi], eax; ret 0x8f0f; 
0x00087cd4: add byte ptr [ebx + 0x448d08ec], al; and al, 0x38; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x000830ff: add byte ptr [ebx + 0x448d08ec], al; and al, 0x40; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x0007b2a2: add byte ptr [ebx + 0x448d08ec], al; and al, 8; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x00087fde: add byte ptr [ebx + 0x448d08ec], al; and al, 8; push eax; push esi; call dword ptr [edi + 0x48]; 
0x00043c80: add byte ptr [ebx + 0x450ffffa], al; ret 0x4489; 
0x00095345: add byte ptr [ebx + 0x458901c0], al; add al, 0xe9; mov al, byte ptr [0xf7fffffd]; ret 0; 
0x0017760d: add byte ptr [ebx + 0x458b0cec], al; cmp al, 0x57; call dword ptr [eax + 0x10]; 
0x0008f9a7: add byte ptr [ebx + 0x45a8b02], cl; mov ecx, dword ptr [edx + 8]; mov edx, dword ptr [edx + 0xc]; call dword ptr gs:[0x10]; 
0x000bd65f: add byte ptr [ebx + 0x470880e], cl; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0003a2f3: add byte ptr [ebx + 0x478920c4], al; adc al, 0x89; ret; 
0x00034582: add byte ptr [ebx + 0x48b2440], cl; nop; ret; 
0x00034542: add byte ptr [ebx + 0x48b2c40], cl; nop; ret; 
0x000fec5c: add byte ptr [ebx + 0x48b9f14], cl; and al, 0x29; ret 0x5689; 
0x000c4970: add byte ptr [ebx + 0x48d14c4], al; cwde; pop ebx; pop esi; ret; 
0x000d3d0b: add byte ptr [ebx + 0x48db055], cl; test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x328b; 
0x000d2b1c: add byte ptr [ebx + 0x48db055], cl; test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xa8b; 
0x0013a78f: add byte ptr [ebx + 0x4a8b01c0], al; add al, 0x83; ret 0x8518; 
0x001aaabf: add byte ptr [ebx + 0x4b720aea], al; lea eax, [edi + 9]; pop edi; ret; 
0x001abadf: add byte ptr [ebx + 0x4b720aef], al; lea eax, [eax + 9]; pop edi; ret; 
0x001ab17f: add byte ptr [ebx + 0x4b7c0ac2], al; lea eax, [ecx + 0xa]; ret; 
0x0017b8f7: add byte ptr [ebx + 0x4c890442], cl; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x00174819: add byte ptr [ebx + 0x4c8908c0], al; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x00177299: add byte ptr [ebx + 0x4c8938c0], al; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x001768c9: add byte ptr [ebx + 0x4c894cc0], al; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x00158357: add byte ptr [ebx + 0x4c8d01f8], al; add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x448b; 
0x000d96ef: add byte ptr [ebx + 0x4f391c4e], cl; sbb al, 0xf; test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x00179a68: add byte ptr [ebx + 0x50510850], cl; call dword ptr [edx + 0xc]; 
0x00173eed: add byte ptr [ebx + 0x50562050], cl; call dword ptr [edx + 4]; 
0x00177c3b: add byte ptr [ebx + 0x50], dl; call dword ptr [edx + 8]; 
0x001211c6: add byte ptr [ebx + 0x518d0cc4], al; call dword ptr [edx + 0x56]; 
0x000a0f3f: add byte ptr [ebx + 0x528b0442], cl; or byte ptr [ecx], al; lds edi, ptr [ecx]; ret; 
0x000a0a3f: add byte ptr [ebx + 0x528b046a], cl; or al, 0x83; ret; 
0x0012fb16: add byte ptr [ebx + 0x53564d41], bh; call dword ptr gs:[0x10]; 
0x0003403a: add byte ptr [ebx + 0x548b0204], cl; and al, 4; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0003462a: add byte ptr [ebx + 0x548b0204], cl; and al, 4; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x000345fa: add byte ptr [ebx + 0x548b0204], cl; and al, 4; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x2c]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x000344fa: add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x000344ca: add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x0003449a: add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x000343da: add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x0003443a: add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x0003434a: add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x0003440a: add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x000343aa: add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x000345aa: add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x0003437a: add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x0003446a: add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x0003431a: add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x0008fbbd: add byte ptr [ebx + 0x548b084e], cl; and al, 4; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000409cf: add byte ptr [ebx + 0x548b10c4], al; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x409e4; add esp, 0x2c; ret; 
0x0005348f: add byte ptr [ebx + 0x548b10c4], al; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x534a4; add esp, 0x2c; ret; 
0x00094f14: add byte ptr [ebx + 0x548b684f], cl; and al, 0xc; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000f0d87: add byte ptr [ebx + 0x548d08ec], al; and al, 0x14; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x0008950c: add byte ptr [ebx + 0x548d08ec], al; and al, 0x28; push edx; push esi; call dword ptr [eax + 0x48]; 
0x0018bd27: add byte ptr [ebx + 0x548d08ec], al; and al, 0x38; push edx; push esi; call dword ptr [eax + 0x48]; 
0x000f8007: add byte ptr [ebx + 0x548d08ec], al; and al, 8; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x0008a13f: add byte ptr [ebx + 0x555004ec], al; push esi; call dword ptr [ebx + 0x38]; 
0x00138214: add byte ptr [ebx + 0x56500cc4], al; push 0x2000006; call dword ptr [ebx + 0x14]; 
0x0007c697: add byte ptr [ebx + 0x568901ea], al; add al, 0x39; ret; 
0x0008a0c5: add byte ptr [ebx + 0x568b0446], cl; or byte ptr [ecx], ch; ret 0xfa39; 
0x00138440: add byte ptr [ebx + 0x57500cc4], al; push 0x2000003; call dword ptr [ebx + 0x14]; 
0x00179062: add byte ptr [ebx + 0x575104c1], al; call dword ptr [eax + 8]; 
0x00087b8b: add byte ptr [ebx + 0x575504ec], al; push ebx; call dword ptr [esi + 0x3c]; 
0x00162dc1: add byte ptr [ebx + 0x597f01f8], al; add esp, 4; pop ebx; pop esi; ret; 
0x00156bb1: add byte ptr [ebx + 0x597f01f8], al; pop ebx; pop esi; pop edi; ret; 
0x001752e7: add byte ptr [ebx + 0x5a8b0440], cl; and al, 0x83; ret 0x8b18; 
0x000c0b0a: add byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x0012d963: add byte ptr [ebx + 0x5b108916], cl; pop esi; pop edi; ret; 
0x001aaaaf: add byte ptr [ebx + 0x5b7209ea], al; lea eax, [edi + 8]; pop edi; ret; 
0x001abacf: add byte ptr [ebx + 0x5b7209ef], al; lea eax, [eax + 8]; pop edi; ret; 
0x001ab16f: add byte ptr [ebx + 0x5b7c09c2], al; lea eax, [ecx + 9]; ret; 
0x0007ccc7: add byte ptr [ebx + 0x5d8b08ec], al; in al, 0x6a; call dword ptr [esi - 0x18]; 
0x000bd6a7: add byte ptr [ebx + 0x5e082444], cl; ret; 
0x0014a94e: add byte ptr [ebx + 0x5e5b04c4], al; pop edi; pop ebp; ret; 
0x0002608f: add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0017b46f: add byte ptr [ebx + 0x5e5b08c4], al; pop edi; pop ebp; ret; 
0x00146175: add byte ptr [ebx + 0x5e5b0cc4], 0x5f; pop ebp; ret; 
0x0003ea59: add byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x00079b59: add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x000799fc: add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0008f49d: add byte ptr [ebx + 0x5e5b1cc4], 0x5f; pop ebp; ret; 
0x00030159: add byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x00083bc0: add byte ptr [ebx + 0x5e5b20c4], al; pop edi; ret; 
0x0011f1d0: add byte ptr [ebx + 0x5e5b24c4], al; ret; 
0x00023534: add byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x0016f57d: add byte ptr [ebx + 0x5e5b30c4], al; pop edi; ret; 
0x0016f6a9: add byte ptr [ebx + 0x5e5b34c4], al; ret; 
0x00026ea6: add byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret; 
0x000c3256: add byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x0004e21d: add byte ptr [ebx + 0x5e5b4cc4], al; pop edi; pop ebp; ret; 
0x000c3e40: add byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; ret; 
0x0010e7c0: add byte ptr [ebx + 0x5e5b64c4], al; ret; 
0x0002f097: add byte ptr [ebx + 0x5e5b6cc4], al; pop edi; pop ebp; ret; 
0x0007b31a: add byte ptr [ebx + 0x5e5b7cc4], al; pop edi; pop ebp; ret; 
0x00092a73: add byte ptr [ebx + 0x5e8b1845], cl; push 0x8b04488b; adc byte ptr [eax + 0xf1], bh; call dword ptr gs:[0x10]; 
0x001208bd: add byte ptr [ebx + 0x5e], bl; cmp eax, 0xfffff001; jae 0x24f50; ret; 
0x000d9846: add byte ptr [ebx + 0x5e], bl; mov eax, ecx; ret; 
0x00103034: add byte ptr [ebx + 0x5e], bl; mov eax, edi; pop edi; ret; 
0x00152bac: add byte ptr [ebx + 0x5e], bl; mov eax, edx; ret; 
0x0013c04f: add byte ptr [ebx + 0x5e], bl; pop ebp; ret; 
0x00115162: add byte ptr [ebx + 0x5e], bl; pop edi; cmp eax, 0xfffff001; jae 0x24f50; ret; 
0x0002c032: add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; jmp eax; 
0x001ad404: add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 4; 
0x0002346a: add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0003dbda: add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000c128f: add byte ptr [ebx + 0x5e], bl; pop edi; xor eax, eax; ret; 
0x00024bd7: add byte ptr [ebx + 0x5e], bl; ret; 
0x001abb2f: add byte ptr [ebx + 0x5f0c2444], cl; ret; 
0x0013457f: add byte ptr [ebx + 0x5f5b14c4], al; ret; 
0x00156257: add byte ptr [ebx + 0x5f5e04c4], al; ret; 
0x0014764f: add byte ptr [ebx + 0x5f5e10c4], al; pop ebp; ret; 
0x0003cb94: add byte ptr [ebx + 0x5f], bl; ret; 
0x000fb698: add byte ptr [ebx + 0x6508245c], cl; call dword ptr [0x10]; neg eax; pop ebx; ret; 
0x000b181f: add byte ptr [ebx + 0x66028901], cl; mov eax, dword ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x000430fc: add byte ptr [ebx + 0x674fff2], al; bsr eax, edx; xor eax, 0x1f; ret; 
0x000a0ad4: add byte ptr [ebx + 0x67650f8], al; ret; 
0x0009ac47: add byte ptr [ebx + 0x685504ec], al; ret 0xa00; 
0x0003e45d: add byte ptr [ebx + 0x688d04ec], al; call dword ptr [ebp + 0x56]; 
0x0008c748: add byte ptr [ebx + 0x6a04ec], al; push 0; push esi; call dword ptr [ebp + 0x2c]; 
0x00170efc: add byte ptr [ebx + 0x6a08ec], al; push ebx; call dword ptr [eax + 0x14]; 
0x0007b42b: add byte ptr [ebx + 0x6a08ec], al; push esi; call dword ptr [ebx + 8]; 
0x0008fe3b: add byte ptr [ebx + 0x6a0cec], al; call 0x8f3d0; add esp, 0x1c; ret; 
0x0016ef0b: add byte ptr [ebx + 0x6a1043], cl; push esi; call dword ptr [eax + 0x14]; 
0x001aaa9f: add byte ptr [ebx + 0x6b7207ea], al; lea eax, [edi + 6]; pop edi; ret; 
0x001ababf: add byte ptr [ebx + 0x6b7207ef], al; lea eax, [eax + 6]; pop edi; ret; 
0x001ab15f: add byte ptr [ebx + 0x6b7c07c2], al; lea eax, [ecx + 7]; ret; 
0x00148c16: add byte ptr [ebx + 0x7422373c], al; ret; 
0x0012e285: add byte ptr [ebx + 0x7426023c], al; sub bh, byte ptr [eax - 1]; add esp, 8; pop ebx; ret; 
0x000fb2b1: add byte ptr [ebx + 0x7426113c], al; or bh, byte ptr [eax - 1]; ret; 
0x001376e1: add byte ptr [ebx + 0x74ff04ec], al; and al, 0x1c; push 0; push 0x2000004; call eax; 
0x0016ee40: add byte ptr [ebx + 0x74ff08ec], al; and al, 0x1c; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0018a9cf: add byte ptr [ebx + 0x74ff14ec], al; and al, 0x1c; call 0x18a0c0; add esp, 0x18; pop ebx; ret; 
0x00042b3f: add byte ptr [ebx + 0x74ff14ec], al; and al, 0x1c; call 0x1acdd0; add esp, 0x18; pop ebx; ret; 
0x0010bd9f: add byte ptr [ebx + 0x74ff14ec], al; and al, 0x1c; call 0x231a0; add esp, 0x18; pop ebx; ret; 
0x0008524f: add byte ptr [ebx + 0x74ff14ec], al; and al, 0x1c; call 0x7b3c0; add esp, 0x18; pop ebx; ret; 
0x00128caf: add byte ptr [ebx + 0x74ff14ec], al; and al, 0x20; call 0x231a0; add esp, 0x18; pop ebx; ret; 
0x00188743: add byte ptr [ebx + 0x7514245c], cl; push es; pop ebx; ret; 
0x00035596: add byte ptr [ebx + 0x758b10c4], al; mov esp, 0x408dc189; add dword ptr [ecx + 0x418db445], ecx; sbb al, 0x89; ret 0x25; 
0x0007e74d: add byte ptr [ebx + 0x75ff04ec], al; adc al, 0xff; jne 0x7e763; push esi; call dword ptr [ebx + 0x2c]; 
0x001ab14f: add byte ptr [ebx + 0x7b7c06c2], al; lea eax, [ecx + 6]; ret; 
0x000c7eaa: add byte ptr [ebx + 0x7c8310c4], al; and al, 0x10; adc byte ptr [edi], cl; xchg esp, eax; ret 0xf883; 
0x000cb08a: add byte ptr [ebx + 0x7c8310c4], al; and al, 0x18; adc byte ptr [edi], cl; xchg esp, eax; ret 0xf883; 
0x000a0733: add byte ptr [ebx + 0x7c8b28ec], al; and al, 0x3c; lea ecx, [ebp - 0x722d4]; call dword ptr gs:[0x10]; 
0x0007bc03: add byte ptr [ebx + 0x7d8be045], cl; in al, 0x89; ret; 
0x000894a0: add byte ptr [ebx + 0x7e39087e], cl; or al, 0xf; test bl, dl; add eax, dword ptr [eax]; add byte ptr [ecx], bh; ret 0x820f; 
0x0010e707: add byte ptr [ebx + 0x80249c], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00099dab: add byte ptr [ebx + 0x8080], cl; add byte ptr [esp + eax*2 - 0x75], dh; je 0x99ddb; adc al, 0x89; ret 0xe283; 
0x00099eab: add byte ptr [ebx + 0x8080], cl; add byte ptr [esp + ecx*2 - 0x75], dh; je 0x99edb; adc al, 0x89; ret 0xe283; 
0x0008f88a: add byte ptr [ebx + 0x8087], cl; add byte ptr [eax - 0x768c8af0], ch; ret 0xca83; 
0x0012ee9f: add byte ptr [ebx + 0x84249c], cl; add byte ptr [eax], al; mov eax, 0x6c; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0005af18: add byte ptr [ebx + 0x88901e9], al; mov eax, edx; add esp, 0xc; ret; 
0x0003457d: add byte ptr [ebx + 0x8b0104], cl; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0003453d: add byte ptr [ebx + 0x8b0104], cl; mov eax, dword ptr [eax + 0x2c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00032baa: add byte ptr [ebx + 0x8b0204], cl; mov eax, dword ptr [eax + 0x54]; ret; 
0x0012452f: add byte ptr [ebx + 0x8b10c4], al; test eax, eax; je 0x124580; call eax; 
0x00124673: add byte ptr [ebx + 0x8b10c4], al; test eax, eax; je 0x124718; call eax; 
0x001775dc: add byte ptr [ebx + 0x8ec8306], cl; mov edx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [edx + 4]; 
0x0016ee28: add byte ptr [ebx + 0x8ec8307], cl; mov edx, dword ptr [eax + 0x20]; push esi; push eax; call dword ptr [edx + 4]; 
0x0008e965: add byte ptr [ebx + 0x9080], cl; add cl, al; call 0x1e96c7d; mov dword ptr [edx + 0x1ac8], eax; ret; 
0x0008867c: add byte ptr [ebx + 0x9202444], cl; ret; 
0x0003488d: add byte ptr [ebx + 0x9480], cl; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x0003484d: add byte ptr [ebx + 0x9c80], cl; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x0012ef7e: add byte ptr [ebx + 0xa024b4], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0002555d: add byte ptr [ebx + 0xa480], cl; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x00122a61: add byte ptr [ebx + 0xa4bd], cl; add byte ptr [ecx + 0x5401], bh; mov ebp, dword ptr [eax + edi]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000907c0: add byte ptr [ebx + 0xa7602fa], al; ret; 
0x00114ca6: add byte ptr [ebx + 0xa82494], cl; add byte ptr [eax], al; mov esi, dword ptr [esp + 0xac]; call dword ptr gs:[0x10]; 
0x00114cad: add byte ptr [ebx + 0xac24b4], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001aaaff: add byte ptr [ebx + 0xb720fea], al; lea eax, [edi + 0xe]; pop edi; ret; 
0x001abb1f: add byte ptr [ebx + 0xb720fef], al; lea eax, [eax + 0xe]; pop edi; ret; 
0x0009806f: add byte ptr [ebx + 0xb7401fa], al; mov eax, 0x16; ret; 
0x001ab1bf: add byte ptr [ebx + 0xb7c0fc2], al; lea eax, [ecx + 0xf]; ret; 
0x0012ba37: add byte ptr [ebx + 0xb7f01f8], al; add esp, 8; pop ebx; ret; 
0x0008cddf: add byte ptr [ebx + 0xb7f01f8], al; ret; 
0x00114fce: add byte ptr [ebx + 0xb82494], cl; add byte ptr [eax], al; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x00114f5f: add byte ptr [ebx + 0xb82494], cl; add byte ptr [eax], al; mov eax, 0x1c4; mov esi, dword ptr [esp + 0xbc]; call dword ptr gs:[0x10]; 
0x001328dc: add byte ptr [ebx + 0xb], bh; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x00134780: add byte ptr [ebx + 0xb], dh; mov eax, dword ptr [ecx + 0x4794]; add word ptr [eax + ebx*2], 1; pop ebx; ret; 
0x00114f6b: add byte ptr [ebx + 0xbc24b4], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012dc72: add byte ptr [ebx + 0xc0249c], cl; add byte ptr [eax], al; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0013f5fd: add byte ptr [ebx + 0xc480], cl; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x000e760f: add byte ptr [ebx + 0xc75daf8], al; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x0010ce5c: add byte ptr [ebx + 0xc7702fa], al; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x00033a85: add byte ptr [ebx + 0xc892404], cl; mov al, 0x8b; test byte ptr [ebx - 0x814], dh; test eax, eax; je 0x33a99; call eax; 
0x0014c16a: add byte ptr [ebx + 0xc8b10c4], al; and al, 0x39; ror byte ptr [edi], 1; dec edi; ret 0x4189; 
0x0017813b: add byte ptr [ebx + 0xcec8300], cl; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x0005ad26: add byte ptr [ebx + 0xd182444], cl; add byte ptr [eax], 0x41; add byte ptr [eax - 0x73], dl; and byte ptr [edi + 0x30], 0xf9; call dword ptr [eax - 0x18]; 
0x00182cb3: add byte ptr [ebx + 0xdd4b3], cl; add byte ptr [ebx - 0x4472f714], al; test al, 0x66; stc; call dword ptr [edi + 0x56]; 
0x0018351f: add byte ptr [ebx + 0xdd4bb], cl; add byte ptr [ebx - 0x4c72f714], al; test al, 0x66; stc; call dword ptr [esi + 0x57]; 
0x00132b88: add byte ptr [ebx + 0xe], bh; mov esi, edi; mov edx, 0x100; call dword ptr gs:[0x10]; 
0x0010a695: add byte ptr [ebx + 0xf00903c], al; test dword ptr [ebx - 0x7c000006], esp; ret 0x8301; 
0x00115c19: add byte ptr [ebx + 0xf14247c], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc10c; 
0x0005fcb7: add byte ptr [ebx + 0xf242454], cl; mov dh, 0x52; or al, 0xf6; ret 0xf01; 
0x000fb051: add byte ptr [ebx + 0xf26033c], al; test dword ptr [eax + eax - 0x2f770000], edx; pop ebx; ret; 
0x000657be: add byte ptr [ebx + 0xf44244c], cl; mov edi, 0xfc985d0; inc ebp; ret 0xc189; 
0x001a37c0: add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0018b9b7: add byte ptr [ebx + 0xf], bl; mov dh, 2; pop esi; pop edi; ret; 
0x0012422b: add byte ptr [ebx + 0xfcb3], cl; add bh, bh; xor byte ptr [ebp - 0x6a6a47d], cl; call dword ptr [eax - 1]; 
0x000938a1: add byte ptr [ebx + 2], bh; mov ecx, dword ptr [esp + 8]; xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x00092d14: add byte ptr [ebx + 2], bh; mov esi, 8; add ecx, 0x474; call dword ptr gs:[0x10]; 
0x0010d201: add byte ptr [ebx + 2], bh; xor edx, edx; mov ecx, dword ptr [esp + 4]; mov esi, 8; call dword ptr gs:[0x10]; 
0x0010d605: add byte ptr [ebx + 2], bh; xor edx, edx; mov esi, 8; mov ecx, dword ptr [ebp - 0x144]; call dword ptr gs:[0x10]; 
0x00192a0e: add byte ptr [ebx + 3], bh; call dword ptr gs:[0x10]; 
0x00133080: add byte ptr [ebx + 3], bh; mov dword ptr [esp + 0x18], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0012e38c: add byte ptr [ebx + 3], bh; mov ecx, 0x7fffffff; mov esi, 5; call dword ptr gs:[0x10]; 
0x00024408: add byte ptr [ebx + ebx - 0x7d], dh; in al, dx; or al, 0xff; jne 0x243dd; call dword ptr [ebp - 0x38]; 
0x000ea52f: add byte ptr [ebx - 0x1097f314], al; add byte ptr [eax], al; add al, ch; ret; 
0x00086295: add byte ptr [ebx - 0x137c3bbb], cl; or al, 0x56; call dword ptr [eax + 0x30]; 
0x00177084: add byte ptr [ebx - 0x137cafb9], cl; or al, 0x55; call dword ptr [eax + 0x10]; 
0x00177dd8: add byte ptr [ebx - 0x137cc3ba], cl; or al, 0x55; call dword ptr [eax + 0x10]; 
0x00088e11: add byte ptr [ebx - 0x137cdfaa], cl; add al, 0x29; ret 0x5052; 
0x0016f082: add byte ptr [ebx - 0x137cefbd], cl; or al, 0x56; call dword ptr [eax + 0x10]; 
0x0010d611: add byte ptr [ebx - 0x14373], cl; jmp dword ptr [ebp - 1]; 
0x0010d52d: add byte ptr [ebx - 0x1477b], cl; jmp dword ptr [ebp - 0x75]; 
0x001b2359: add byte ptr [ebx - 0x147c03bd], cl; add al, 0x89; ret 0xeac1; 
0x000a4079: add byte ptr [ebx - 0x14f3db94], cl; jnp 0x599550ce; add al, 0xf6; ret; 
0x001b028c: add byte ptr [ebx - 0x167c03bf], cl; add al, 0x89; ret 0xeac1; 
0x000a0f9f: add byte ptr [ebx - 0x173ef797], cl; or al, 0x83; ret 0x8901; 
0x0013a733: add byte ptr [ebx - 0x17701500], cl; ret; 
0x0003202f: add byte ptr [ebx - 0x17a9f314], al; adc edi, edi; jmp dword ptr [ebp - 0x75]; 
0x0002f743: add byte ptr [ebx - 0x17a9f314], al; ret; 
0x00086f5f: add byte ptr [ebx - 0x17aaf314], al; aas; ret 0xfff9; 
0x000ef5b7: add byte ptr [ebx - 0x17aaf314], al; call esi; 
0x00142ecf: add byte ptr [ebx - 0x17aaf314], al; inc edi; sbb ch, bh; jmp dword ptr [ebp - 0x5f]; 
0x000e8f43: add byte ptr [ebx - 0x17acf314], al; ret; 
0x00117c27: add byte ptr [ebx - 0x17adf314], al; outsd dx, dword ptr [esi]; mov ch, 0xf0; jmp dword ptr [ebp - 0x75]; 
0x000876af: add byte ptr [ebx - 0x17afe714], al; out 0x3a, eax; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0011706f: add byte ptr [ebx - 0x17aff314], al; cmpsd dword ptr [esi], dword ptr es:[edi]; mov ebp, 0xc483fffa; adc byte ptr [ecx], bh; ret; 
0x00118b0f: add byte ptr [ebx - 0x17aff314], al; pop es; mov dword ptr [0xc483fffa], eax; adc byte ptr [ecx], bh; ret; 
0x0004195b: add byte ptr [ebx - 0x18], dl; mov ebx, 0x81001482; ret; 
0x001842e9: add byte ptr [ebx - 0x18], dl; sub eax, 0x81000059; ret; 
0x00123ce9: add byte ptr [ebx - 0x18], dl; sub eax, 0x8100065f; ret; 
0x00037f3b: add byte ptr [ebx - 0x1c763], cl; inc dword ptr [ebx - 0x49f0ef3c]; lea edx, [esi + edi*8 - 1]; dec dword ptr [ecx - 0x1bf7b]; jmp dword ptr [ebp - 0x5f]; 
0x000c30e0: add byte ptr [ebx - 0x1c9b7d74], cl; clc; inc dword ptr [ecx]; sar dword ptr [esi], 1; jmp ecx; 
0x00031d2e: add byte ptr [ebx - 0x1d36b], cl; dec dword ptr [ebp - 0x68ccb7e]; call dword ptr [eax - 0x73]; 
0x000d33e4: add byte ptr [ebx - 0x1f3e4fab], cl; add ch, byte ptr [ecx]; ret 0x28b; 
0x0010dfd0: add byte ptr [ebx - 0x2476c7c], cl; clc; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x00024f8d: add byte ptr [ebx - 0x2497ef14], al; add dword ptr [eax], eax; add byte ptr [ebp - 0x6989380], cl; call dword ptr [eax + 0x6a]; 
0x0008ece5: add byte ptr [ebx - 0x2614ef3c], al; nop; nop; nop; endbr32; ret; 
0x00025853: add byte ptr [ebx - 0x2708ef3c], al; sbb eax, eax; add esp, 0xc; ret; 
0x001239e1: add byte ptr [ebx - 0x27768f3c], al; pop ebx; pop esi; pop edi; ret; 
0x00123cd3: add byte ptr [ebx - 0x2776d73c], al; pop ebx; ret; 
0x0012342e: add byte ptr [ebx - 0x2776e73c], al; pop ebx; ret; 
0x0015a23b: add byte ptr [ebx - 0x2776ef3c], al; call eax; 
0x000c5d3c: add byte ptr [ebx - 0x2776ef3c], al; pop ebx; pop esi; pop edi; ret; 
0x00128aa1: add byte ptr [ebx - 0x2776f73c], al; pop ebx; ret; 
0x00094a3b: add byte ptr [ebx - 0x2776fb3c], al; pop ebx; pop esi; ret; 
0x0008fcb7: add byte ptr [ebx - 0x2d7aefa9], cl; je 0x8fcf8; xor esi, esi; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00087d58: add byte ptr [ebx - 0x2d7c0040], al; jmp dword ptr [ecx]; 
0x0009aa19: add byte ptr [ebx - 0x2ef7dbac], cl; call 0xc03aacad; ret; 
0x0017baef: add byte ptr [ebx - 0x2f76eb3c], al; pop ebx; pop esi; ret; 
0x0013f7b1: add byte ptr [ebx - 0x2f76ef3c], al; pop ebx; pop esi; pop edi; ret; 
0x001265cd: add byte ptr [ebx - 0x2f76f73c], al; pop ebx; ret; 
0x001558eb: add byte ptr [ebx - 0x2f76fb3c], al; pop ebx; pop edi; ret; 
0x0010894b: add byte ptr [ebx - 0x317cf314], al; call dword ptr [edi - 0x18]; 
0x0005902f: add byte ptr [ebx - 0x35ff7b], al; jmp eax; 
0x00057e86: add byte ptr [ebx - 0x361f43], cl; dec dword ptr [ecx + 0x4c891f0c]; pop ds; add al, 0x83; ret; 
0x000d6d6e: add byte ptr [ebx - 0x361f7b], cl; dec dword ptr [ebx - 0x361b6b]; inc dword ptr [ebx - 0x2d7c0040]; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00058661: add byte ptr [ebx - 0x361f7b], cl; push dword ptr [ecx]; imul byte ptr [ecx]; ret; 
0x00056769: add byte ptr [ebx - 0x362743], al; call dword ptr [eax]; 
0x00058932: add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x00058b9f: add byte ptr [ebx - 0x36277b], al; jmp eax; 
0x000d57b7: add byte ptr [ebx - 0x362f43], al; call dword ptr [eax]; 
0x000d6ef1: add byte ptr [ebx - 0x362f43], cl; dec dword ptr [ecx + 0x4c891f0c]; pop ds; add al, 0x83; ret; 
0x0005792a: add byte ptr [ebx - 0x36377b], cl; dec dword ptr [ebx - 0x36336b]; dec dword ptr [ebx - 0x36774b]; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000d8879: add byte ptr [ebx - 0x363f4b], cl; dec dword ptr [ebp - 0x661f37a]; call dword ptr [eax - 0x73]; 
0x000d6ae2: add byte ptr [ebx - 0x363f63], cl; dec dword ptr [ecx - 0x361f73]; call dword ptr [eax + 0x52]; 
0x000d5b56: add byte ptr [ebx - 0x363f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x00059c67: add byte ptr [ebx - 0x364743], cl; dec dword ptr [ebp - 0x6877779]; call dword ptr [eax - 0x73]; 
0x0005752f: add byte ptr [ebx - 0x364743], cl; dec dword ptr [ebp - 0x7d379]; call dword ptr [eax - 0x73]; 
0x00058ccf: add byte ptr [ebx - 0x364763], cl; call dword ptr [eax - 1]; 
0x0005832d: add byte ptr [ebx - 0x364763], cl; dec dword ptr [ecx - 0x362773]; call dword ptr [eax - 1]; 
0x00057455: add byte ptr [ebx - 0x36477b], cl; jmp dword ptr [ebp - 0x75]; 
0x000d7a42: add byte ptr [ebx - 0x364f63], cl; dec dword ptr [ebx - 0x36374b]; call dword ptr [edi - 1]; 
0x000d61b6: add byte ptr [ebx - 0x365773], cl; dec dword ptr [ecx - 0x36737b]; dec dword ptr [ebp + 0x4f0fff46]; ret 0x48d; 
0x0005825e: add byte ptr [ebx - 0x365f7b], al; call dword ptr [eax]; 
0x000d627f: add byte ptr [ebx - 0x365f7b], cl; inc dword ptr [ebx - 0x362f43]; call dword ptr [eax]; 
0x000587e1: add byte ptr [ebx - 0x36677b], al; jmp eax; 
0x00115f4e: add byte ptr [ebx - 0x37769f3c], al; pop ebx; pop esi; pop edi; ret; 
0x00070732: add byte ptr [ebx - 0x37b36a64], cl; clc; inc dword ptr [ecx]; ret; 
0x00070ef2: add byte ptr [ebx - 0x38b36a64], cl; clc; inc dword ptr [ecx]; ret; 
0x0010ddf7: add byte ptr [ebx - 0x38f6c7c], cl; clc; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x000fd3c7: add byte ptr [ebx - 0x3b7cc3ba], cl; add al, 0x5b; pop esi; ret; 
0x00040970: add byte ptr [ebx - 0x3b7ccbc0], cl; add al, 0x5b; pop esi; ret; 
0x00026135: add byte ptr [ebx - 0x3b7cef3c], al; add al, 0x5b; pop esi; ret; 
0x00170f97: add byte ptr [ebx - 0x3b7cef3c], al; add al, 0x89; fcomp dword ptr [ebx + 0x5e]; ret; 
0x00042ccd: add byte ptr [ebx - 0x3d76e73c], al; mov eax, 0x10; pop ebx; sub eax, edx; ret; 
0x00042c3b: add byte ptr [ebx - 0x3d76e73c], al; mov eax, 0x20; pop ebx; sub eax, edx; ret; 
0x00042c9f: add byte ptr [ebx - 0x3d76e73c], al; mov eax, 0x40; pop ebx; sub eax, edx; ret; 
0x00042c0d: add byte ptr [ebx - 0x3d76e73c], al; mov eax, 8; pop ebx; sub eax, edx; ret; 
0x0005c5ff: add byte ptr [ebx - 0x3d7cfbb6], cl; add al, 0x83; ret; 
0x0009147f: add byte ptr [ebx - 0x3e2f76ed], cl; call 0x8938888d; clc; call dword ptr gs:[0x10]; 
0x0008b9a6: add byte ptr [ebx - 0x3f7acbc0], cl; jne 0x8b9a0; ret; 
0x0008e81d: add byte ptr [ebx - 0x3f7adbc0], cl; jne 0x8e830; ret; 
0x00125248: add byte ptr [ebx - 0x3f7adfc0], cl; cmove eax, edx; ret; 
0x0017a183: add byte ptr [ebx - 0x3f7aef3c], al; jne 0x17a170; add esp, 8; pop ebx; ret; 
0x0003c674: add byte ptr [ebx - 0x3f7aef3c], al; jne 0x3c688; add esp, 8; pop ebx; ret; 
0x0003c923: add byte ptr [ebx - 0x3f7aef3c], al; jne 0x3c930; add esp, 8; pop ebx; ret; 
0x001318c0: add byte ptr [ebx - 0x3f7aef3c], al; js 0x1318d0; add esp, 8; pop ebx; ret; 
0x00125764: add byte ptr [ebx - 0x3f7af3c0], cl; je 0x12576d; ret; 
0x0010bb9f: add byte ptr [ebx - 0x3f7af7c0], cl; je 0x10ba8f; call eax; 
0x0010bbdf: add byte ptr [ebx - 0x3f7af7c0], cl; je 0x10bae2; call eax; 
0x0010bb3f: add byte ptr [ebx - 0x3f7afbc0], cl; je 0x10ba8f; call eax; 
0x0010bbf7: add byte ptr [ebx - 0x3f7afbc0], cl; je 0x10bae2; call eax; 
0x00152b1f: add byte ptr [ebx - 0x3f7afbc0], cl; je 0x152b2c; cmp dword ptr [eax + 8], edx; jne 0x152b20; ret; 
0x00035dfb: add byte ptr [ebx - 0x3f7cef3c], al; sbb al, 0x89; loope 0x35d8e; ret; 
0x0004277e: add byte ptr [ebx - 0x3fceef3c], al; add esp, 4; pop ebx; pop esi; ret; 
0x00094279: add byte ptr [ebx - 0x3fceef3c], al; pop ebx; pop esi; pop edi; ret; 
0x00061f67: add byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x00040a1e: add byte ptr [ebx - 0x3fcefb3c], al; pop ebx; pop esi; ret; 
0x00060b88: add byte ptr [ebx - 0x3fe6fe08], al; add esp, 0x1c; ret; 
0x0016c360: add byte ptr [ebx - 0x41f0c7f4], cl; ret 0x44f6; 
0x0014275a: add byte ptr [ebx - 0x41f0d0ec], cl; ret; 
0x0016a71a: add byte ptr [ebx - 0x41f0d1f4], cl; ret 0x44f6; 
0x0016d4d0: add byte ptr [ebx - 0x41f0e7f4], cl; ret 0x44f6; 
0x000abb1f: add byte ptr [ebx - 0x41f0fe40], al; adc al, 1; cmp edx, ebx; je 0xabb20; pop ebx; ret; 
0x0019343f: add byte ptr [ebx - 0x42], dh; call 0x189c1d; add ebx, 0x47ce9; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00182d12: add byte ptr [ebx - 0x4472f714], al; mov ah, byte ptr [esi - 7]; call dword ptr [edi + 0x56]; 
0x00182cb9: add byte ptr [ebx - 0x4472f714], al; test al, 0x66; stc; call dword ptr [edi + 0x56]; 
0x000685fd: add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; dec dword ptr [ebx - 0x58b73]; inc dword ptr [ecx]; ret 0xd801; 
0x0006995f: add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0x9589; 
0x0006a02d: add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xd801; 
0x00069b69: add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xf001; 
0x00068375: add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xf801; 
0x00148887: add byte ptr [ebx - 0x44f73], cl; jmp dword ptr [ebp - 0x75]; 
0x00069cfb: add byte ptr [ebx - 0x45763], cl; inc dword ptr [ebp + 0x4e850fdb]; xor al, byte ptr [eax]; add byte ptr [ebx - 0x5ab4b], cl; dec dword ptr [ebx - 0x58f7b]; jmp dword ptr [ebp - 0x75]; 
0x00078992: add byte ptr [ebx - 0x45763], cl; inc dword ptr [ebx + 0x6e910c4]; fdiv st(7), st(0); dec dword ptr [ebx - 0x4ff4b]; dec dword ptr [ebp - 0x682177a]; call dword ptr [eax + 0x68]; 
0x00092534: add byte ptr [ebx - 0x45f3dba4], cl; add dword ptr [eax], eax; add byte ptr [eax], al; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00091e2a: add byte ptr [ebx - 0x45fbdba4], cl; add dword ptr [eax], eax; add byte ptr [eax], al; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00060738: add byte ptr [ebx - 0x46ab746c], cl; clc; inc dword ptr [ecx]; fidivr dword ptr [esi]; jmp edx; 
0x0003ca14: add byte ptr [ebx - 0x46dfdba4], cl; or byte ptr [eax], al; add byte ptr [eax], al; mov edx, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x000f2b0f: add byte ptr [ebx - 0x46f63], cl; call dword ptr [esi + 0x51]; 
0x000f285d: add byte ptr [ebx - 0x46f63], cl; call dword ptr [esi - 1]; 
0x000f2a6f: add byte ptr [ebx - 0x46f7b], cl; inc dword ptr [ebx - 0x7f72f314]; mov bh, 0x47; stc; call dword ptr [eax - 0x18]; 
0x0003c994: add byte ptr [ebx - 0x46f7dba4], cl; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00060671: add byte ptr [ebx - 0x4713746c], cl; clc; inc dword ptr [ecx]; fidivr dword ptr [esi]; jmp edx; 
0x0010fea7: add byte ptr [ebx - 0x4737b], cl; inc dword ptr [ebx - 0x7f72f314]; mov bh, 0x47; stc; call dword ptr [eax - 0x18]; 
0x0012052e: add byte ptr [ebx - 0x47abdbb4], cl; sahf; add dword ptr [eax], eax; add byte ptr [edi + 8], bh; call dword ptr gs:[0x10]; 
0x00061947: add byte ptr [ebx - 0x47afdb8c], cl; call dword ptr [ebx - 0x59]; 
0x0011e659: add byte ptr [ebx - 0x47dfdba4], cl; mov bh, 0; add byte ptr [eax], al; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000fb59e: add byte ptr [ebx - 0x47fbdbb4], cl; add dword ptr [eax], eax; add byte ptr [eax], al; test ecx, ecx; js 0xfb5b0; ret; 
0x001a81af: add byte ptr [ebx - 0x48], bl; add dword ptr [eax], eax; add byte ptr [eax], al; jg 0x1a81c0; neg eax; ret; 
0x001ac2af: add byte ptr [ebx - 0x48], bl; add dword ptr [eax], eax; add byte ptr [eax], al; jg 0x1ac2c0; neg eax; ret; 
0x0008feaa: add byte ptr [ebx - 0x48], bl; or al, 0; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x0010c96f: add byte ptr [ebx - 0x48], bl; or dword ptr [eax], eax; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x00099de7: add byte ptr [ebx - 0x48], bl; push ss; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x000612be: add byte ptr [ebx - 0x48], dl; add byte ptr es:[eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x0011463e: add byte ptr [ebx - 0x48], dl; and dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011fcce: add byte ptr [ebx - 0x48], dl; dec ebx; add dword ptr [eax], eax; add byte ptr [ebx + 0x3108245c], cl; leave; call dword ptr gs:[0x10]; 
0x0012e85e: add byte ptr [ebx - 0x48], dl; inc byte ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0012eefe: add byte ptr [ebx - 0x48], dl; lds eax, ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012f17e: add byte ptr [ebx - 0x48], dl; les eax, ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0003c98e: add byte ptr [ebx - 0x48], dl; mov al, 0; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; mov ecx, 8; call dword ptr gs:[0x10]; 
0x00122f9e: add byte ptr [ebx - 0x48], dl; mov edi, 0x8b000000; dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001214fe: add byte ptr [ebx - 0x48], dl; or al, byte ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011f0ce: add byte ptr [ebx - 0x48], dl; or dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0013053e: add byte ptr [ebx - 0x48], dl; ret; 
0x001146ae: add byte ptr [ebx - 0x48], dl; sldt word ptr [eax]; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x001208de: add byte ptr [ebx - 0x48], dl; sub byte ptr [eax], al; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001238de: add byte ptr [ebx - 0x48], dl; sub eax, 0x8b000000; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x0013027e: add byte ptr [ebx - 0x48], dl; xor al, 0; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00142dd7: add byte ptr [ebx - 0x48f0fb14], al; ret; 
0x000d5957: add byte ptr [ebx - 0x4a76ef3c], al; mov al, byte ptr [0x31ffffc9]; rol byte ptr [ebx - 0x362f43], cl; call dword ptr [eax]; 
0x00183582: add byte ptr [ebx - 0x4c72f714], al; mov ah, byte ptr [esi - 7]; call dword ptr [esi + 0x57]; 
0x00183525: add byte ptr [ebx - 0x4c72f714], al; test al, 0x66; stc; call dword ptr [esi + 0x57]; 
0x00133edf: add byte ptr [ebx - 0x4ff63], cl; dec dword ptr [ebx - 0x50773]; jmp dword ptr [ebp - 1]; 
0x00072a3b: add byte ptr [ebx - 0x4ff73], cl; jmp dword ptr [ebp - 0x75]; 
0x00073356: add byte ptr [ebx - 0x4ff7b], cl; jmp dword ptr [ebp - 0x75]; 
0x00073e1d: add byte ptr [ebx - 0x5137b], cl; inc dword ptr [ebx - 0x177cf714]; add dword ptr [ecx - 0x5037b], ecx; call dword ptr [esi - 1]; 
0x00077f05: add byte ptr [ebx - 0x51773], cl; call ecx; 
0x00075534: add byte ptr [ebx - 0x5177b], cl; call ecx; 
0x000730ff: add byte ptr [ebx - 0x53b73], cl; jmp dword ptr [ebp - 0x5f]; 
0x00182cd4: add byte ptr [ebx - 0x5472f714], al; mov dh, 0x66; stc; call dword ptr [ebp + 0x56]; 
0x001630ac: add byte ptr [ebx - 0x57cdf3c], al; add dword ptr [edi + 0x23], edi; add esp, 0x18; pop ebx; ret; 
0x00182657: add byte ptr [ebx - 0x57cef3c], al; add dword ptr [edi + 0x20], edi; add esp, 0x18; pop ebx; ret; 
0x0009432e: add byte ptr [ebx - 0x57cef3c], al; add dword ptr [edi + 0x21], edi; add esp, 0x18; pop ebx; ret; 
0x001825cb: add byte ptr [ebx - 0x57cef3c], al; add dword ptr [edi + 0x24], edi; add esp, 0x18; pop ebx; ret; 
0x0012f204: add byte ptr [ebx - 0x57cf4ec], cl; je 0x12f263; pop ebx; pop esi; ret; 
0x00069782: add byte ptr [ebx - 0x58f63], cl; call dword ptr [ecx + 0x50]; 
0x00069bfc: add byte ptr [ebx - 0x58f63], cl; inc dword ptr [ebx - 0x7c72f314]; cld; xor bh, cl; call dword ptr [eax - 0x18]; 
0x00066f2f: add byte ptr [ebx - 0x58f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x00067b5f: add byte ptr [ebx - 0x59743], al; call dword ptr [eax]; 
0x001140e7: add byte ptr [ebx - 0x5ab43], cl; dec dword ptr [ebp - 0x65dd779]; call dword ptr [eax + 0x68]; 
0x000f4457: add byte ptr [ebx - 0x5ab43], cl; dec dword ptr [ebp - 0x65f8379]; call dword ptr [eax + 0x68]; 
0x00069d09: add byte ptr [ebx - 0x5ab4b], cl; dec dword ptr [ebx - 0x58f7b]; jmp dword ptr [ebp - 0x75]; 
0x000f150c: add byte ptr [ebx - 0x5b37b], cl; inc dword ptr [ebp - 0x74bc8b40]; test dword ptr [edx + edi*8 - 1], edx; jmp dword ptr [ebp - 0x75]; 
0x000f8b97: add byte ptr [ebx - 0x5bb43], cl; dec dword ptr [ebp - 0x65f8379]; call dword ptr [eax + 0x68]; 
0x000f878c: add byte ptr [ebx - 0x5c37b], cl; inc dword ptr [ebp - 0x74bc8b40]; test dword ptr [edx + edi*8 - 1], eax; jmp dword ptr [ebp - 0x75]; 
0x000697a2: add byte ptr [ebx - 0x5cb7b], cl; call ecx; 
0x000fc11e: add byte ptr [ebx - 0x5cf0afa9], cl; ret 0x830f; 
0x0006b63f: add byte ptr [ebx - 0x5d343], cl; dec dword ptr [ecx + 0x29f829f0]; ret; 
0x00098f71: add byte ptr [ebx - 0x5e9ae3a9], cl; push 0x39000000; ret 0x6974; 
0x0009835b: add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x00121f73: add byte ptr [ebx - 0x64], bh; call dword ptr gs:[0x10]; 
0x0011f7a1: add byte ptr [ebx - 0x64], bh; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0011f8a7: add byte ptr [ebx - 0x64], bh; mov edx, edi; call dword ptr gs:[0x10]; 
0x00183f14: add byte ptr [ebx - 0x6972f714], al; cdq; stc; call dword ptr [edx - 0x77]; 
0x00111655: add byte ptr [ebx - 0x6af0fe05], al; ret; 
0x000ebfdf: add byte ptr [ebx - 0x6bf0a301], al; ret; 
0x0015e626: add byte ptr [ebx - 0x6bf0fd08], al; ret; 
0x0005079e: add byte ptr [ebx - 0x6bf0fe01], al; ret 0xeb39; 
0x000496ed: add byte ptr [ebx - 0x6bf0fe05], al; ret 0xc639; 
0x000c9970: add byte ptr [ebx - 0x6bf0fe06], al; ret 0xc339; 
0x00182cef: add byte ptr [ebx - 0x6c72f714], al; cdq; stc; call dword ptr [edx - 0x77]; 
0x0002fec6: add byte ptr [ebx - 0x6c72f714], al; jle 0x2fef9; stc; call dword ptr [edx + 0x50]; 
0x00162dcf: add byte ptr [ebx - 0x6c72f714], al; push ebx; pushal; stc; call dword ptr [edx + 0x50]; 
0x0007bf52: add byte ptr [ebx - 0x6e76a7b8], cl; mov byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x001510bb: add byte ptr [ebx - 0x6f72f314], al; lodsb al, byte ptr [esi]; mov al, 0xf9; call dword ptr [edx - 0x73]; 
0x001ad614: add byte ptr [ebx - 0x71f08b06], al; ret; 
0x00188a61: add byte ptr [ebx - 0x71f0fe08], al; ret; 
0x00179ea7: add byte ptr [ebx - 0x72acf714], al; push esp; and al, 0x38; push edx; call dword ptr [eax + 0xc]; 
0x0002c45b: add byte ptr [ebx - 0x72afdb84], cl; xchg dword ptr [edx + esi*2], esp; stc; call dword ptr [eax - 0x73]; 
0x000a095c: add byte ptr [ebx - 0x72afeb14], al; adc byte ptr [ecx + ebx*2], 0xf9; call dword ptr [eax - 0x18]; 
0x0002ed9e: add byte ptr [ebx - 0x72bbdb84], cl; xchg dword ptr [ecx + ebp*2 - 7], ebp; call dword ptr [eax - 0x73]; 
0x0002da5b: add byte ptr [ebx - 0x72bbdb84], cl; xchg dword ptr [edx + ebp*2 - 7], ebp; call dword ptr [eax + 0x68]; 
0x0002d5f9: add byte ptr [ebx - 0x72bbdb84], cl; xchg dword ptr [edx + ebp*2 - 7], ebp; call dword ptr [eax - 0x73]; 
0x0002d968: add byte ptr [ebx - 0x72bbdb84], cl; xchg esp, ebp; jno 0x2d96b; call dword ptr [eax - 0x73]; 
0x0002d98b: add byte ptr [ebx - 0x72bbdb84], cl; xchg esp, ebp; jno 0x2d98e; call dword ptr [eax - 0x73]; 
0x0002d9ae: add byte ptr [ebx - 0x72bbdb84], cl; xchg esp, ebp; jno 0x2d9b1; call dword ptr [eax - 0x73]; 
0x0002da15: add byte ptr [ebx - 0x72bbdb84], cl; xchg esp, ebp; jno 0x2da18; call dword ptr [eax - 0x73]; 
0x0002da38: add byte ptr [ebx - 0x72bbdb84], cl; xchg esp, ebp; jno 0x2da3b; call dword ptr [eax - 0x73]; 
0x0002b79d: add byte ptr [ebx - 0x72c3db84], cl; xchg dword ptr [eax + 0x72], ecx; stc; call dword ptr [eax - 0x73]; 
0x0002cdc5: add byte ptr [ebx - 0x72c3db84], cl; xchg dword ptr [eax], ecx; jb 0x2cdc8; call dword ptr [eax - 0x73]; 
0x0002cde8: add byte ptr [ebx - 0x72c3db84], cl; xchg dword ptr [eax], ecx; jb 0x2cdeb; call dword ptr [eax - 0x73]; 
0x0002a09b: add byte ptr [ebx - 0x72c3db84], cl; xchg dword ptr [ebx + ebp*2], ebp; stc; call dword ptr [eax - 0x73]; 
0x0002b7e3: add byte ptr [ebx - 0x72c3db84], cl; xchg esp, ecx; push -7; call dword ptr [eax + 0x68]; 
0x0002b107: add byte ptr [ebx - 0x72c3db84], cl; xchg esp, ecx; push -7; call dword ptr [eax - 0x73]; 
0x0002b7c0: add byte ptr [ebx - 0x72c3db8c], cl; xchg byte ptr [eax + 0x72], cl; stc; call dword ptr [eax - 0x73]; 
0x00029b6e: add byte ptr [ebx - 0x72c3db8c], cl; xchg byte ptr [ebx + ebp*2 - 7], ch; call dword ptr [eax + 0x68]; 
0x000299ee: add byte ptr [ebx - 0x72c3db8c], cl; xchg byte ptr [ebx + ebp*2 - 7], ch; call dword ptr [eax - 0x73]; 
0x000288df: add byte ptr [ebx - 0x72c3dba4], cl; or dword ptr [esp + ebp*2], 0xfffffff9; call dword ptr [eax + 0x68]; 
0x000288bc: add byte ptr [ebx - 0x72c3dba4], cl; or dword ptr [esp + ebp*2], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x000a11f9: add byte ptr [ebx - 0x72c3dbbc], cl; and ah, 0x8a; stc; call dword ptr [eax + 0x6a]; 
0x0002e184: add byte ptr [ebx - 0x72c7db84], cl; xchg dword ptr [edx + ebp*2], ebp; stc; call dword ptr [eax + 0x68]; 
0x0002e013: add byte ptr [ebx - 0x72c7db84], cl; xchg dword ptr [edx + ebp*2], ebp; stc; call dword ptr [eax - 0x73]; 
0x0002ab48: add byte ptr [ebx - 0x72c7db84], cl; xchg dword ptr [edx + esi*2 - 7], esp; call dword ptr [eax - 0x73]; 
0x0002aaf0: add byte ptr [ebx - 0x72c7db84], cl; xchg esp, ebp; push -7; call dword ptr [eax + 0x68]; 
0x0002a7b4: add byte ptr [ebx - 0x72c7db84], cl; xchg esp, ebp; push -7; call dword ptr [eax - 0x73]; 
0x0010f14f: add byte ptr [ebx - 0x72c7dba4], cl; xor dword ptr [ecx + ecx*2], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x001555f8: add byte ptr [ebx - 0x72c7dbac], cl; dec eax; add dword ptr [ecx - 0x38cfdbb4], ecx; inc esp; ret 4; 
0x000d0e88: add byte ptr [ebx - 0x72d3db84], cl; xchg dword ptr [ebp + ebx*4 - 7], esp; call dword ptr [eax - 0x73]; 
0x000513a6: add byte ptr [ebx - 0x72d7db84], cl; xchg dword ptr [eax + 0x78], esi; stc; call dword ptr [eax - 0x73]; 
0x000c6d57: add byte ptr [ebx - 0x72e3db84], cl; xchg dword ptr [eax], ebp; popfd; stc; call dword ptr [eax - 0x73]; 
0x000c69f3: add byte ptr [ebx - 0x72e3db84], cl; xchg dword ptr [eax], ebx; popfd; stc; call dword ptr [eax - 0x73]; 
0x000c454b: add byte ptr [ebx - 0x72e3db84], cl; xchg esp, ebx; wait; stc; call dword ptr [eax - 0x73]; 
0x000963fa: add byte ptr [ebx - 0x72e3dba4], cl; and esp, 0xffffff86; stc; call dword ptr [eax - 0x73]; 
0x000a1444: add byte ptr [ebx - 0x72e3dba4], cl; push ebx; or dh, dh; ret 0xf0f; 
0x000c48cd: add byte ptr [ebx - 0x72e3dbac], cl; sbb byte ptr [eax], 0x9c; stc; call dword ptr [eax - 0x73]; 
0x0004d4d6: add byte ptr [ebx - 0x72e7db84], cl; xchg dword ptr [eax + 0x78], ebx; stc; call dword ptr [eax - 0x73]; 
0x0004a269: add byte ptr [ebx - 0x72e7db84], cl; xchg dword ptr [eax + edi*2], esi; stc; call dword ptr [eax - 0x73]; 
0x0015f70d: add byte ptr [ebx - 0x72efdb84], cl; xchg dword ptr [ebp + esi*4 - 7], esi; call dword ptr [eax - 0x73]; 
0x0015fd5b: add byte ptr [ebx - 0x72efdb8c], cl; xchg byte ptr [ebp + esi*4 - 7], cl; call dword ptr [eax - 0x73]; 
0x0011722c: add byte ptr [ebx - 0x72efdbbc], cl; xor dl, 0x49; stc; call dword ptr [eax - 0x18]; 
0x00085e2a: add byte ptr [ebx - 0x72f7db84], cl; xchg dword ptr [ebx + eax*4 - 7], edx; call dword ptr [eax - 0x73]; 
0x00110bb7: add byte ptr [ebx - 0x72f7db84], cl; xchg dword ptr [edx], eax; stc; call dword ptr [eax + 0x68]; 
0x001107b5: add byte ptr [ebx - 0x72f7db84], cl; xchg dword ptr [edx], eax; stc; call dword ptr [eax - 0x73]; 
0x00028e4f: add byte ptr [ebx - 0x72f7dbac], cl; inc ebx; add al, 0x39; ret 0x9173; 
0x0005469f: add byte ptr [ebx - 0x72fb6984], cl; dec edi; add dword ptr [ecx - 0x7cfb69b4], ecx; ret 0x8501; 
0x00092b1b: add byte ptr [ebx - 0x72fbdb84], cl; xchg eax, ebx; test cl, bh; call dword ptr [eax + 0x68]; 
0x000b77dc: add byte ptr [ebx - 0x72fd76ff], cl; inc edx; add al, 0x5f; pop ebx; ret; 
0x00048fe5: add byte ptr [ebx - 0x7374dbfc], cl; and al, 0x9c; add byte ptr [eax], al; add byte ptr [ebx - 0x7ca7dba4], cl; ret 0xf7ff; 
0x001ab13f: add byte ptr [ebx - 0x73f0fa3e], al; xchg dword ptr [eax], eax; add byte ptr [eax], al; lea eax, [ecx + 5]; ret; 
0x001ab10f: add byte ptr [ebx - 0x73f0fe3e], al; mov bh, 0; add byte ptr [eax], al; lea eax, [ecx + 1]; ret; 
0x001aafad: add byte ptr [ebx - 0x73f0ff3e], al; sbb dword ptr [edx], eax; add byte ptr [eax], al; mov eax, ecx; ret; 
0x0018355f: add byte ptr [ebx - 0x7472f714], al; cdq; stc; call dword ptr [ecx - 0x77]; 
0x000a04e7: add byte ptr [ebx - 0x749bdbb4], cl; je 0xa0513; add al, 0xb8; add al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012f5f4: add byte ptr [ebx - 0x749bdbb4], cl; pop esp; and al, 0x60; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x001300a1: add byte ptr [ebx - 0x749fdba4], cl; dec esp; and al, 0x64; lea esi, [esp + 0x2c]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x000deb1f: add byte ptr [ebx - 0x749fdba4], cl; push esp; and al, 0xc; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x00132a2d: add byte ptr [ebx - 0x74b7dbac], cl; je 0x132a59; push eax; mov dword ptr [esp + 0x18], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00120f55: add byte ptr [ebx - 0x74c7dbac], cl; jl 0x120f81; inc eax; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0002c3a8: add byte ptr [ebx - 0x74dfdb8c], cl; jl 0x2c3d4; and al, 0x89; ret 0xf229; 
0x000d0086: add byte ptr [ebx - 0x74dfdbbc], cl; mov word ptr [esp + ebx*4], fs; add byte ptr [eax], al; add byte ptr [ebx - 0x7c9fdb8c], cl; ret 0xf7ff; 
0x000c9626: add byte ptr [ebx - 0x74dfdbbc], cl; mov word ptr [esp + ebx*4], fs; add byte ptr [eax], al; add byte ptr [ebx - 0x7cabdba4], cl; ret 0xf7ff; 
0x00132ad0: add byte ptr [ebx - 0x74ebdbb4], cl; push esp; and al, 0x18; call dword ptr gs:[0x10]; 
0x0019297e: add byte ptr [ebx - 0x74ebdbb4], cl; push esp; and al, 0x18; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00132fbe: add byte ptr [ebx - 0x74ebdbb4], cl; push esp; and al, 0x18; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0012ef04: add byte ptr [ebx - 0x74efdbb4], cl; pop esp; and al, 0xc; call dword ptr gs:[0x10]; 
0x00134aeb: add byte ptr [ebx - 0x74efdbbc], cl; inc eax; dec esp; call 0x134990; add esp, 4; ret; 
0x0015dec9: add byte ptr [ebx - 0x74f3db84], cl; push edi; add al, 0xf7; ret 0xfffd; 
0x000297bb: add byte ptr [ebx - 0x74f3db94], cl; inc ebp; add dh, dh; ret; 
0x000612c4: add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x00131b6b: add byte ptr [ebx - 0x74f3dbb4], cl; push esp; and al, 0x10; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00133b97: add byte ptr [ebx - 0x74f3dbbc], cl; adc cl, byte ptr [ecx + 0x1b810]; add byte ptr [eax], al; ret; 
0x00050096: add byte ptr [ebx - 0x74f7dbbc], cl; mov word ptr [esp + ebp*4], fs; add byte ptr [eax], al; add byte ptr [ebx - 0x7c9bdb8c], cl; ret 0xf7ff; 
0x000a08ad: add byte ptr [ebx - 0x74fbdbac], cl; adc dl, byte ptr [eax + 0x3589089]; add byte ptr [eax], al; ret; 
0x000a088d: add byte ptr [ebx - 0x74fbdbac], cl; adc dl, byte ptr [eax + 0x35c9089]; add byte ptr [eax], al; ret; 
0x000a093d: add byte ptr [ebx - 0x74fbdbac], cl; adc dl, byte ptr [eax + 0x3949089]; add byte ptr [eax], al; ret; 
0x000a0b6d: add byte ptr [ebx - 0x74fbdbac], cl; adc dl, byte ptr [eax + 0x3c349089]; add byte ptr [eax], al; ret; 
0x000a08ce: add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [0x3fc], bh; jbe 0xa08e0; ret; 
0x000a090e: add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [0xffff], bh; jbe 0xa0920; ret; 
0x000a0ace: add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [ebx + 0x67650f8], al; ret; 
0x0014e801: add byte ptr [ebx - 0x74fbdbbc], cl; pop eax; or byte ptr [ebp - 0x777af013], al; add al, 0; add dh, dh; ret; 
0x001132c6: add byte ptr [ebx - 0x75], dl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0009f804: add byte ptr [ebx - 0x75], dl; dec esp; and al, 0x10; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00116049: add byte ptr [ebx - 0x75], dl; push esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00169485: add byte ptr [ebx - 0x76a4e7ec], cl; rcr byte ptr [esi + 0x5f], 1; ret; 
0x000530bc: add byte ptr [ebx - 0x76a8eb3c], al; ret; 
0x000e7ced: add byte ptr [ebx - 0x76abdbb4], cl; cli; call dword ptr gs:[0x10]; 
0x000e7c8a: add byte ptr [ebx - 0x76abdbb4], cl; cli; mov esi, ebp; call dword ptr gs:[0x10]; 
0x000793c2: add byte ptr [ebx - 0x76aff33c], al; ret; 
0x00070ab0: add byte ptr [ebx - 0x76b3dbb4], cl; dec esp; and al, 4; jmp eax; 
0x00140180: add byte ptr [ebx - 0x76bbdbbc], cl; ret; 
0x00105ae2: add byte ptr [ebx - 0x76cbdbbc], cl; ret; 
0x001b4fc8: add byte ptr [ebx - 0x76d3dbbc], cl; test byte ptr [eax + ecx*4], ah; add byte ptr [eax], al; add byte ptr [ebx - 0x76f7dbbc], cl; ret 0x8489; 
0x000a9aba: add byte ptr [ebx - 0x76dfdbbc], cl; shr dword ptr [ecx], cl; ret; 
0x00140bd8: add byte ptr [ebx - 0x76e3db84], cl; ret; 
0x0002bc63: add byte ptr [ebx - 0x76e3db8c], cl; ret 0xb60f; 
0x0008edfa: add byte ptr [ebx - 0x76e7dbac], cl; ret; 
0x0016ebae: add byte ptr [ebx - 0x76e7dbbc], cl; xor al, 0x24; call dword ptr [eax + 0x10]; 
0x00099df7: add byte ptr [ebx - 0x76ebdb84], cl; ret 0xca83; 
0x00145af6: add byte ptr [ebx - 0x76ebdbbc], cl; ret 0xc085; 
0x00151cdf: add byte ptr [ebx - 0x76efdb94], cl; ret 0x7e8d; 
0x0004938d: add byte ptr [ebx - 0x76efdbb4], cl; ret 0x1b8; 
0x00094f5a: add byte ptr [ebx - 0x76f3dbac], cl; stc; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x001251a5: add byte ptr [ebx - 0x76f7dbac], cl; add bh, byte ptr [eax + 1]; ret; 
0x001b4fd3: add byte ptr [ebx - 0x76f7dbbc], cl; ret 0x8489; 
0x00093961: add byte ptr [ebx - 0x76fbdb8c], cl; ret; 
0x000b33ec: add byte ptr [ebx - 0x76fd76ff], cl; clc; pop edi; pop ebx; ret; 
0x000b15ef: add byte ptr [ebx - 0x76fd76ff], cl; clc; pop edi; ret; 
0x0009b3b3: add byte ptr [ebx - 0x776ef3c], al; pop ebx; pop esi; pop edi; ret; 
0x000ab989: add byte ptr [ebx - 0x77], bl; clc; pop esi; pop edi; pop ebp; ret; 
0x000907a7: add byte ptr [ebx - 0x77], bl; rcr byte ptr [esi + 0x5f], 1; pop ebp; ret; 
0x0017cbd2: add byte ptr [ebx - 0x77], bl; rcr byte ptr [esi + 0x5f], 1; ret; 
0x000797fd: add byte ptr [ebx - 0x77], dl; ret; 
0x000402f5: add byte ptr [ebx - 0x77cc7fc], cl; add al, 0x74; ret 0xffb8; 
0x00069732: add byte ptr [ebx - 0x77cef3c], al; dec byte ptr [edi]; test byte ptr [ecx - 0x7cfffffe], ah; ret; 
0x000741ec: add byte ptr [ebx - 0x77cef3c], al; dec dword ptr [edi]; test bh, al; sbb al, 0; add byte ptr [ecx], al; ret; 
0x00085858: add byte ptr [ebx - 0x77cef3c], al; push dword ptr [edi + ebx*8 - 0x7b]; sar byte ptr [eax + 0x33], 1; ret; 
0x001143cd: add byte ptr [ebx - 0x77cef3c], al; push dword ptr [edx + ebx*8 - 0x77]; ret 0xbc8d; 
0x0010f805: add byte ptr [ebx - 0x77cef3c], al; push dword ptr [edx + ebx*8 - 0x77]; ret 0xc085; 
0x000308df: add byte ptr [ebx - 0x7872f314], al; mov bl, 0x2b; stc; call dword ptr [eax - 0x18]; 
0x000307d9: add byte ptr [ebx - 0x7872f714], al; inc esp; je 0x307db; call dword ptr [eax + 0x56]; 
0x000a1a36: add byte ptr [ebx - 0x7872fb14], al; sbb al, byte ptr [edx - 7]; call dword ptr [eax + 0x53]; 
0x0002ed50: add byte ptr [ebx - 0x78f0fb05], al; mov al, byte ptr [0x9000000]; ret; 
0x0012bf97: add byte ptr [ebx - 0x7972fb14], al; mov ah, 0xa4; stc; call dword ptr [edi - 0x7f]; 
0x0016f627: add byte ptr [ebx - 0x7972fb14], al; mov edx, 0x6afff963; add eax, 0x4c868d50; je 0x16f632; call dword ptr [eax - 0x18]; 
0x001ab774: add byte ptr [ebx - 0x79f0bf11], al; ret 1; 
0x00169b95: add byte ptr [ebx - 0x7a72f314], al; jl 0x169bff; stc; call dword ptr [eax - 0x18]; 
0x00142517: add byte ptr [ebx - 0x7a72f714], al; sub ecx, edi; call dword ptr [eax + 0x53]; 
0x0004b510: add byte ptr [ebx - 0x7a9fdbbc], cl; ror byte ptr [edi], 0x85; ret 0xe; 
0x0002a8c6: add byte ptr [ebx - 0x7acfdbbc], cl; ror byte ptr [edi], 0x84; dec ebx; add dword ptr [eax], eax; add dh, dh; ret 0xf08; 
0x00157a5a: add byte ptr [ebx - 0x7ad7dbac], cl; ror byte ptr [edi], cl; xchg ebp, eax; ret 0xd789; 
0x00050bdb: add byte ptr [ebx - 0x7adfdbbc], cl; ror byte ptr [edi], 0x84; pop esi; add al, 0; add byte ptr [ebx - 0x7cdfdb84], cl; jmp dword ptr [eax]; 
0x0017d01b: add byte ptr [ebx - 0x7ae7dbac], cl; sal byte ptr [ebp + 0xc], cl; add esp, 0xc; ret; 
0x0004f333: add byte ptr [ebx - 0x7ae7dbbc], cl; ror byte ptr [edi], 0x84; ret; 
0x0010d1be: add byte ptr [ebx - 0x7aebdbac], cl; ror byte ptr [edi], cl; xchg ebp, eax; ret; 
0x00157d66: add byte ptr [ebx - 0x7aefdbac], cl; sal byte ptr [eax + ebx - 0x7d], cl; in al, dx; or byte ptr [ebp - 0x6bbcf7f], cl; call dword ptr [eax + 0x52]; 
0x0004a983: add byte ptr [ebx - 0x7af3dbac], cl; sal byte ptr [esp + edi - 0x27], cl; test dword ptr [eax], edx; ret 0xfff9; 
0x00043ab2: add byte ptr [ebx - 0x7af3dbbc], cl; sal byte ptr [eax + esi*2 - 0x75], 0x3c; and al, 0x8d; inc edi; inc byte ptr [ebx - 0x6bf00220]; ret 0xff83; 
0x0004a83a: add byte ptr [ebx - 0x7af3dbbc], cl; sal byte ptr [ebp + 0x2d], 0xd9; test dword ptr [eax], eax; ret 0xfff9; 
0x0004392f: add byte ptr [ebx - 0x7afbdbbc], cl; ror byte ptr [edi], 0x85; ret; 
0x00034603: add byte ptr [ebx - 0x7b74d3c0], cl; nop; add byte ptr [edx], al; add byte ptr [eax], al; ret; 
0x00034633: add byte ptr [ebx - 0x7b74dbc0], cl; nop; add byte ptr [edx], al; add byte ptr [eax], al; ret; 
0x000b0257: add byte ptr [ebx - 0x7bf0f108], al; call dword ptr [eax]; 
0x001a7684: add byte ptr [ebx - 0x7bf0fb03], al; ret; 
0x001abbd2: add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x0003e2c3: add byte ptr [ebx - 0x7bf0fe08], al; ret; 
0x001a7123: add byte ptr [ebx - 0x7bf0ff07], al; ret; 
0x000a67f6: add byte ptr [ebx - 0x7c0f20], al; or ecx, dword ptr [edi]; inc esi; ret 0x8388; 
0x000ea7ca: add byte ptr [ebx - 0x7c3976e6], cl; ret 0x8304; 
0x000ea8ea: add byte ptr [ebx - 0x7c3e76c6], cl; ret 0x8304; 
0x0016278f: add byte ptr [ebx - 0x7c72ef14], al; cmp al, 0x39; bnd call dword ptr [eax - 0x73]; 
0x0016ec0f: add byte ptr [ebx - 0x7c72ef14], al; or al, 0xfd; bnd call dword ptr [eax - 0x73]; 
0x000dd3e3: add byte ptr [ebx - 0x7c72f314], 6; inc esi; stc; call dword ptr [eax - 0x18]; 
0x0014b17f: add byte ptr [ebx - 0x7c72f314], al; adc ebx, dword ptr [ebx - 7]; call dword ptr [eax - 0x18]; 
0x001765ff: add byte ptr [ebx - 0x7c72f314], al; cdq; dec ecx; stc; call dword ptr [edi + 0x56]; 
0x0016bb45: add byte ptr [ebx - 0x7c72f314], al; cmp dword ptr [ebx - 7], esp; call dword ptr [eax - 0x18]; 
0x0011c14f: add byte ptr [ebx - 0x7c72f314], al; inc esi; stc; call dword ptr [eax - 0x18]; 
0x00156c9e: add byte ptr [ebx - 0x7c72f314], al; pop ds; pop esi; stc; call dword ptr [eax - 0x73]; 
0x0003eec7: add byte ptr [ebx - 0x7c72f314], al; sbb byte ptr [esi - 7], dh; call dword ptr [eax - 0x18]; 
0x000341db: add byte ptr [ebx - 0x7c72f33c], al; xor byte ptr [esi], ch; stc; call dword ptr [eax - 1]; 
0x000dd2f7: add byte ptr [ebx - 0x7c72f714], al; and al, 0x46; stc; call dword ptr [eax + 0x56]; 
0x0012d258: add byte ptr [ebx - 0x7c72f714], al; cmc; push ebx; stc; call dword ptr [eax + 0x56]; 
0x00127052: add byte ptr [ebx - 0x7c72f714], al; dec dword ptr [ebp - 7]; call dword ptr [eax + 0x55]; 
0x00126f95: add byte ptr [ebx - 0x7c72f714], al; dec edx; dec esp; stc; call dword ptr [eax + 0x55]; 
0x00127088: add byte ptr [ebx - 0x7c72f714], al; dec si; stc; call dword ptr [eax + 0x55]; 
0x00156c7e: add byte ptr [ebx - 0x7c72f714], al; les ebx, ptr [ebp - 7]; call dword ptr [eax - 1]; 
0x00127037: add byte ptr [ebx - 0x7c72f714], al; mov bl, 0x4d; stc; call dword ptr [eax + 0x55]; 
0x000dcddf: add byte ptr [ebx - 0x7c72f714], al; out dx, eax; inc ebp; stc; call dword ptr [eax + 0x56]; 
0x0012701c: add byte ptr [ebx - 0x7c72f714], al; outsd dx, dword ptr [esi]; dec ebp; stc; call dword ptr [eax + 0x55]; 
0x00126fe6: add byte ptr [ebx - 0x7c72f714], al; pop es; dec ebp; stc; call dword ptr [eax + 0x55]; 
0x00126f29: add byte ptr [ebx - 0x7c72f714], al; push ebp; push ecx; stc; call dword ptr [eax + 0x55]; 
0x00126f44: add byte ptr [ebx - 0x7c72f714], al; push ebx; dec ebx; stc; call dword ptr [eax + 0x55]; 
0x000dd382: add byte ptr [ebx - 0x7c72f714], al; sub ecx, edi; call dword ptr [eax + 0x56]; 
0x00126567: add byte ptr [ebx - 0x7c72f714], al; sub ecx, edi; call dword ptr [eax - 0x73]; 
0x0002fee4: add byte ptr [ebx - 0x7c72f714], al; test byte ptr [ebx], ch; stc; call dword ptr [eax - 1]; 
0x00126fb0: add byte ptr [ebx - 0x7c72f714], al; xchg ecx, eax; dec esp; stc; call dword ptr [eax + 0x55]; 
0x0012706d: add byte ptr [ebx - 0x7c72f714], al; xor dword ptr [esi - 7], ecx; call dword ptr [eax + 0x55]; 
0x000a224e: add byte ptr [ebx - 0x7c72fb14], al; dec eax; inc edx; stc; call dword ptr [eax + 0x56]; 
0x00178b2f: add byte ptr [ebx - 0x7c72fb14], al; je 0x178aef; stc; call dword ptr [esi - 1]; 
0x00178c59: add byte ptr [ebx - 0x7c72fb14], al; je 0x178c19; stc; call dword ptr [ebp + 0x57]; 
0x00173ec8: add byte ptr [ebx - 0x7c74f714], al; mov al, 0; add byte ptr [eax], al; push dword ptr [esp + 0x30]; push esi; call dword ptr [eax + 4]; 
0x000500a1: add byte ptr [ebx - 0x7c9bdb8c], cl; ret 0xf7ff; 
0x000d0091: add byte ptr [ebx - 0x7c9fdb8c], cl; ret 0xf7ff; 
0x00048fef: add byte ptr [ebx - 0x7ca7dba4], cl; ret 0xf7ff; 
0x000c9631: add byte ptr [ebx - 0x7cabdba4], cl; ret 0xf7ff; 
0x00131dc6: add byte ptr [ebx - 0x7cacfe3a], al; ret; 
0x000456d6: add byte ptr [ebx - 0x7cb3dbac], cl; ret 0x8901; 
0x000afdb7: add byte ptr [ebx - 0x7cd174c6], cl; ret 0x8304; 
0x00050be7: add byte ptr [ebx - 0x7cdfdb84], cl; jmp dword ptr [eax]; 
0x0010f41f: add byte ptr [ebx - 0x7cdfdbbc], cl; ret; 
0x0015ccb3: add byte ptr [ebx - 0x7ce3db8c], cl; ret 0x8301; 
0x00150147: add byte ptr [ebx - 0x7ce3dbac], cl; insb byte ptr es:[edi], dx; and al, 0x14; add dword ptr [ecx], ebp; ret 0x828d; 
0x001adc31: add byte ptr [ebx - 0x7ce7dba4], cl; ret; 
0x001171a7: add byte ptr [ebx - 0x7ce7dbbc], cl; ret; 
0x0015cc83: add byte ptr [ebx - 0x7cebdb8c], cl; ret 0x8301; 
0x00169726: add byte ptr [ebx - 0x7cefdbac], cl; ret 0x8902; 
0x0005f360: add byte ptr [ebx - 0x7cefdbbc], cl; rol byte ptr [ecx], 0x39; ror byte ptr [edi], 1; pushfd; ret 0xb60f; 
0x00102872: add byte ptr [ebx - 0x7cf3dbbc], cl; ret 0xc704; 
0x001045ff: add byte ptr [ebx - 0x7cf4dcf6], cl; ret 0x8304; 
0x0011132f: add byte ptr [ebx - 0x7cf7dbbc], cl; ret; 
0x00103e8f: add byte ptr [ebx - 0x7cf7f6f6], cl; rol byte ptr [ebx + eax*4], 0xc2; add al, 0x39; ret; 
0x0004aaff: add byte ptr [ebx - 0x7cfb78a4], cl; ret; 
0x0008e94e: add byte ptr [ebx - 0x7cfbdbbc], cl; cmp byte ptr [ecx], al; je 0x8e960; ret; 
0x000907ff: add byte ptr [ebx - 0x7cfbdbbc], cl; pushal; or bl, bh; xor eax, eax; ret; 
0x001aba0a: add byte ptr [ebx - 0x7df0f711], al; sbb al, 1; add byte ptr [eax], al; lea eax, [eax + 7]; pop edi; ret; 
0x00092d35: add byte ptr [ebx - 0x7e74f314], al; sub byte ptr [edx], al; add byte ptr [eax], al; push edx; call eax; 
0x000db36f: add byte ptr [ebx - 0x7ecfdba4], cl; ret; 
0x0009c0ff: add byte ptr [ebx - 0x7f72e714], al; inc eax; mov cl, bh; call dword ptr [eax - 0x18]; 
0x0013c7ff: add byte ptr [ebx - 0x7f72e714], al; jb 0x13c85e; stc; call dword ptr [eax - 0x18]; 
0x0016d08d: add byte ptr [ebx - 0x7f72eb14], al; arpl cx, di; call dword ptr [eax + 0x6a]; 
0x0016c66d: add byte ptr [ebx - 0x7f72eb14], al; inc edi; arpl cx, di; call dword ptr [eax + 0x6a]; 
0x00169a7d: add byte ptr [ebx - 0x7f72eb14], al; jl 0x169ae7; stc; call dword ptr [eax + 0x6a]; 
0x0016db1d: add byte ptr [ebx - 0x7f72eb14], al; jle 0x16db88; stc; call dword ptr [eax + 0x6a]; 
0x0016d70d: add byte ptr [ebx - 0x7f72eb14], al; jo 0x16d778; stc; call dword ptr [eax + 0x6a]; 
0x00169edd: add byte ptr [ebx - 0x7f72eb14], al; mov dword ptr [edx - 7], esp; call dword ptr [eax + 0x6a]; 
0x0016dded: add byte ptr [ebx - 0x7f72eb14], al; mov esp, dword ptr [ebx - 7]; call dword ptr [eax + 0x6a]; 
0x0016cced: add byte ptr [ebx - 0x7f72eb14], al; push ebp; arpl cx, di; call dword ptr [eax + 0x6a]; 
0x0016e36d: add byte ptr [ebx - 0x7f72eb14], al; xchg edi, eax; arpl cx, di; call dword ptr [eax + 0x6a]; 
0x00170f8a: add byte ptr [ebx - 0x7f], dl; ret; 
0x0005c442: add byte ptr [ebx - 0x8b63], cl; dec dword ptr [edi]; dec esi; ret 0xec83; 
0x0005df78: add byte ptr [ebx - 0x8b6b], cl; dec dword ptr [ebp - 0x684677e]; call dword ptr [eax - 0x73]; 
0x0005c17f: add byte ptr [ebx - 0x9343], cl; dec dword ptr [edi]; mov dh, 0x57; or al, 0xf6; ret 0x7401; 
0x00082781: add byte ptr [ebx - 0x95f714], al; push dword ptr [ebx]; call dword ptr [edi + 0xc]; 
0x0017e811: add byte ptr [ebx - 0x9f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000fb3b1: add byte ptr [ebx - 0xa1f7944], cl; clc; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x0007c444: add byte ptr [ebx - 0xa8fb14], al; jne 0x7c454; push esi; call dword ptr [ebx + 0x1c]; 
0x0007cb9b: add byte ptr [ebx - 0xa8fb14], al; jne 0x7cbab; push esi; call dword ptr [ebx + 0x1c]; 
0x0007e83c: add byte ptr [ebx - 0xa9f314], al; push ebx; xor al, 0x89; ret 0xc483; 
0x000a6c72: add byte ptr [ebx - 0xa9f714], al; jae 0xa6c9e; call eax; 
0x00024edf: add byte ptr [ebx - 0xa9fb14], al; je 0x24f0b; inc eax; push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x0007de11: add byte ptr [ebx - 0xa9fb14], al; jne 0x7de21; push edx; call dword ptr [ebx + 0x1c]; 
0x0007e513: add byte ptr [ebx - 0xacfb14], al; jne 0x7e4ff; push esi; call dword ptr [eax + 0x2c]; 
0x0007e5a4: add byte ptr [ebx - 0xacfb14], al; jne 0x7e590; push esi; call dword ptr [eax + 0x2c]; 
0x0003f25f: add byte ptr [ebx - 0xaef714], al; je 0x3f28b; dec esp; call eax; 
0x001397af: add byte ptr [ebx - 0xaff33c], al; jne 0x13976b; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x00139cac: add byte ptr [ebx - 0xaff33c], al; jne 0x139c58; push ebx; call dword ptr [esi + 0x14]; 
0x000a6dff: add byte ptr [ebx - 0xaff714], al; jae 0xa6e2b; call edx; 
0x0014547f: add byte ptr [ebx - 0xbb7b], cl; dec dword ptr [ebx - 0xaf6b]; dec dword ptr [ebx - 0x9363]; dec dword ptr [ebp + 0x48d4004]; ret; 
0x0009f523: add byte ptr [ebx - 0xf767f14], al; pop ebx; pop esi; pop edi; ret; 
0x0017f00d: add byte ptr [ebx - 0xf76cf3c], al; pop ebx; pop esi; pop edi; ret; 
0x00123d1f: add byte ptr [ebx - 0xf76db3c], al; pop ebx; pop esi; ret; 
0x000c4d1c: add byte ptr [ebx - 0xf76eb3c], al; pop ebx; pop esi; ret; 
0x0014d551: add byte ptr [ebx - 0xf76ef3c], al; pop ebx; pop esi; pop edi; ret; 
0x000ac505: add byte ptr [ebx - 0xf76fb3c], al; pop ebx; pop esi; ret; 
0x000eb73e: add byte ptr [ebx - 0xfd77c4c], cl; clc; inc dword ptr [ecx]; fidivr word ptr [esi]; jmp esi; 
0x0012b3ea: add byte ptr [ebx - 1], bh; mov edx, 0xffffffff; call dword ptr gs:[0x10]; 
0x0016296c: add byte ptr [ebx - 1], dl; inc dword ptr [ebx - 0x3f7aef3c]; je 0x162980; sub esp, 0xc; push esi; call eax; 
0x0010f7fb: add byte ptr [ebx - 1], dl; je 0x10f824; push 0x10f6ae8; add byte ptr [ebx - 0x77cef3c], al; push dword ptr [edx + ebx*8 - 0x77]; ret 0xc085; 
0x00029133: add byte ptr [ebx - 1], dl; je 0x2915c; pushal; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; call edi; 
0x00186b18: add byte ptr [ebx], 0; add byte ptr [ecx + 0x28c48303], cl; pop ebx; ret; 
0x0003482e: add byte ptr [ebx], ah; inc esp; and al, 8; ret; 
0x0013457b: add byte ptr [ebx], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5f5b14c4], al; ret; 
0x000b9241: add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b9368: add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000c21dc: add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; add esi, ecx; jmp ebx; 
0x0019324a: add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00194c44: add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00194ca9: add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x0008f543: add byte ptr [ebx], al; xchg byte ptr [eax], ah; or dword ptr [eax], eax; add byte ptr [ecx + 0x92086], cl; add byte ptr [ecx], bh; ret 0x5c72; 
0x001765c6: add byte ptr [ebx], bh; lodsb al, byte ptr [esi]; ret; 
0x0008c9a7: add byte ptr [ebx], ch; push eax; or byte ptr [ebx - 0x2fd6f7bf], cl; ret; 
0x001b440d: add byte ptr [ecx + 0x100000e1], al; add byte ptr [ecx - 0x9f7dbbc], cl; ret 0xf07; 
0x00132b8d: add byte ptr [ecx + 0x100bafe], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00125dfe: add byte ptr [ecx + 0x100c249c], cl; add byte ptr [eax], al; xor ebx, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000db583: add byte ptr [ecx + 0x10424bc], cl; add byte ptr [eax], al; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x30]; mov eax, dword ptr [esp + 0x64]; call eax; 
0x00085a13: add byte ptr [ecx + 0x10890848], cl; mov dword ptr [eax + 4], edx; pop ebx; pop esi; ret; 
0x00121d0c: add byte ptr [ecx + 0x10], bh; call dword ptr gs:[0x10]; 
0x000c2430: add byte ptr [ecx + 0x10acc7c3], al; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; add esi, ecx; jmp ebx; 
0x000c21d6: add byte ptr [ecx + 0x10af21c3], al; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; add esi, ecx; jmp ebx; 
0x001336ce: add byte ptr [ecx + 0x10b745c5], al; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x00132fae: add byte ptr [ecx + 0x10be65c5], al; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x000c0f30: add byte ptr [ecx + 0x10c143c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00132abe: add byte ptr [ecx + 0x10c355c5], al; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x31]; 
0x000c0a25: add byte ptr [ecx + 0x10c64ec1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000c0a00: add byte ptr [ecx + 0x10c673c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000c09e0: add byte ptr [ecx + 0x10c693c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000c09c3: add byte ptr [ecx + 0x10c6b0c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000c0924: add byte ptr [ecx + 0x10c6cfc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000c0996: add byte ptr [ecx + 0x10c6ddc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000c0906: add byte ptr [ecx + 0x10c6edc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000c097f: add byte ptr [ecx + 0x10c6f4c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000c0964: add byte ptr [ecx + 0x10c70fc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000c08e1: add byte ptr [ecx + 0x10c712c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000c0942: add byte ptr [ecx + 0x10c731c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000c08b7: add byte ptr [ecx + 0x10c73cc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000c089e: add byte ptr [ecx + 0x10c755c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000c087d: add byte ptr [ecx + 0x10c776c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000c0859: add byte ptr [ecx + 0x10c79ac1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000c083b: add byte ptr [ecx + 0x10c7b8c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000c07b8: add byte ptr [ecx + 0x10c83bc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00131ec9: add byte ptr [ecx + 0x10cf4ac5], al; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x00130538: add byte ptr [ecx + 0x10e8dbc2], al; add byte ptr [ebx - 0x48], dl; ret; 
0x000bd606: add byte ptr [ecx + 0x10f96dc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000bd5e1: add byte ptr [ecx + 0x10f992c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000bd5b7: add byte ptr [ecx + 0x10f9bcc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000bd59e: add byte ptr [ecx + 0x10f9d5c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000bd57d: add byte ptr [ecx + 0x10f9f6c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000bd559: add byte ptr [ecx + 0x10fa1ac1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000bd53b: add byte ptr [ecx + 0x10fa38c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000bd51f: add byte ptr [ecx + 0x10fa54c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0012f078: add byte ptr [ecx + 0x10fd9bc2], al; add byte ptr [eax + 0x123], bh; call dword ptr gs:[0x10]; 
0x0012e858: add byte ptr [ecx + 0x1105bbc2], al; add byte ptr [ebx - 0x48], dl; inc byte ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000bb690: add byte ptr [ecx + 0x11180fc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000bb5ab: add byte ptr [ecx + 0x111984c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000bb598: add byte ptr [ecx + 0x111997c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000bb57c: add byte ptr [ecx + 0x1119b3c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000baa85: add byte ptr [ecx + 0x11241ac1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000baa60: add byte ptr [ecx + 0x11243fc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000baa40: add byte ptr [ecx + 0x11245fc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000baa23: add byte ptr [ecx + 0x11247cc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000ba984: add byte ptr [ecx + 0x11249bc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000ba9f6: add byte ptr [ecx + 0x1124a9c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000ba9df: add byte ptr [ecx + 0x1124c0c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000ba9c4: add byte ptr [ecx + 0x1124dbc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000ba9a2: add byte ptr [ecx + 0x1124fdc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000ba8b0: add byte ptr [ecx + 0x11256fc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000ba890: add byte ptr [ecx + 0x11258fc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000ba86b: add byte ptr [ecx + 0x1125b4c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b9f90: add byte ptr [ecx + 0x112dafc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b9eab: add byte ptr [ecx + 0x112f24c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b9e98: add byte ptr [ecx + 0x112f37c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b9e7c: add byte ptr [ecx + 0x112f53c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b9445: add byte ptr [ecx + 0x1138fac1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b9420: add byte ptr [ecx + 0x11391fc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b9400: add byte ptr [ecx + 0x11393fc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b93e3: add byte ptr [ecx + 0x11395cc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b9344: add byte ptr [ecx + 0x11397bc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b93b6: add byte ptr [ecx + 0x113989c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b939f: add byte ptr [ecx + 0x1139a0c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b9384: add byte ptr [ecx + 0x1139bbc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b9362: add byte ptr [ecx + 0x1139ddc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b9280: add byte ptr [ecx + 0x113a3fc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b9260: add byte ptr [ecx + 0x113a5fc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b923b: add byte ptr [ecx + 0x113a84c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00124a6d: add byte ptr [ecx + 0x11a3a6c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x001238d8: add byte ptr [ecx + 0x11b53bc2], al; add byte ptr [ebx - 0x48], dl; sub eax, 0x8b000000; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x001844d1: add byte ptr [ecx + 0x11ccc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x001214f8: add byte ptr [ecx + 0x11d91bc2], al; add byte ptr [ebx - 0x48], dl; or al, byte ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00120bf3: add byte ptr [ecx + 0x11e220c6], al; add byte ptr [ebx - 0x75], dl; push esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x001208d8: add byte ptr [ecx + 0x11e53bc2], al; add byte ptr [ebx - 0x48], dl; sub byte ptr [eax], al; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00116043: add byte ptr [ecx + 0x128dd0c6], al; add byte ptr [ebx - 0x75], dl; push esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x001132c0: add byte ptr [ecx + 0x12bb53c6], al; add byte ptr [ebx - 0x75], dl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000e8c65: add byte ptr [ecx + 0x13c248c], cl; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x164]; call dword ptr gs:[0x10]; 
0x000fd2d4: add byte ptr [ecx + 0x141b3fc1], al; add byte ptr [ebp - 0x77], dl; ret 0x5657; 
0x000fac6a: add byte ptr [ecx + 0x1441a9c7], al; add byte ptr [ecx - 0x156343], cl; jmp dword ptr [ebp - 0x75]; 
0x00156c42: add byte ptr [ecx + 0x144ec], al; add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0004afa8: add byte ptr [ecx + 0x14cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00189654: add byte ptr [ecx + 0x15cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x001829a6: add byte ptr [ecx + 0x168ec], al; add byte ptr [ecx - 0x1636b], cl; dec dword ptr [ecx - 0x15f7b]; jmp dword ptr [ebp - 0x5f]; 
0x00145c5e: add byte ptr [ecx + 0x16cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00115b6b: add byte ptr [ecx + 0x18c24ac], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x1b8]; call dword ptr gs:[0x10]; 
0x000da93f: add byte ptr [ecx + 0x18e85052], bl; daa; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00115d3d: add byte ptr [ecx + 0x19cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000a1bd5: add byte ptr [ecx + 0x19d23ec6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x000a0ac8: add byte ptr [ecx + 0x19e34bc1], al; add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [ebx + 0x67650f8], al; ret; 
0x000a0956: add byte ptr [ecx + 0x19e4bdc2], al; add byte ptr [ebx - 0x72afeb14], al; adc byte ptr [ecx + ebx*2], 0xf9; call dword ptr [eax - 0x18]; 
0x000a08c8: add byte ptr [ecx + 0x19e54bc2], al; add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [0x3fc], bh; jbe 0xa08e0; ret; 
0x00131ae0: add byte ptr [ecx + 0x1a1b8cf], cl; add byte ptr [eax], al; mov ecx, edx; mov edx, edi; mov edi, ebp; call dword ptr gs:[0x10]; 
0x0008e948: add byte ptr [ecx + 0x1b04cbc2], al; add byte ptr [ebx - 0x7cfbdbbc], cl; cmp byte ptr [ecx], al; je 0x8e960; ret; 
0x00087b4b: add byte ptr [ecx + 0x1b72c8c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x000797f7: add byte ptr [ecx + 0x1c561cc6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x000a2271: add byte ptr [ecx + 0x1c829f2], cl; lds ebp, ptr [ecx]; ret 0x4589; 
0x00060fdb: add byte ptr [ecx + 0x1dde38c3], al; add byte ptr [ebx + 0x1a0c83], cl; add byte ptr [ebp + 0x314574c0], al; jmp dword ptr [esi - 0x70]; 
0x00033445: add byte ptr [ecx + 0x20b9cec5], al; add byte ptr [edi + 0x31], dl; call dword ptr [esi - 0x42]; 
0x000fb136: add byte ptr [ecx + 0x23683efa], al; xchg ecx, eax; jne 0xfb1a0; ret; 
0x00065162: add byte ptr [ecx + 0x2444c7cf], cl; inc esp; add byte ptr [eax], al; add byte ptr [eax], al; jmp edx; 
0x0009fb80: add byte ptr [ecx + 0x24748be9], cl; dec esp; call dword ptr gs:[0x10]; 
0x00086ad6: add byte ptr [ecx + 0x247c8beb], cl; or al, 0x8d; xchg ebx, esi; stc; call dword ptr [eax + 0x56]; 
0x0010e5b9: add byte ptr [ecx + 0x24948be9], cl; mov byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f08a9: add byte ptr [ecx + 0x24c4830a], cl; pop ebx; pop esi; ret; 
0x00035df3: add byte ptr [ecx + 0x24e82434], cl; ror byte ptr [eax], 1; add byte ptr [ebx - 0x3f7cef3c], al; sbb al, 0x89; loope 0x35d8e; ret; 
0x00186b1b: add byte ptr [ecx + 0x28c48303], cl; pop ebx; ret; 
0x0014f3f5: add byte ptr [ecx + 0x2bcc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00130e7b: add byte ptr [ecx + 0x31242444], cl; shr byte ptr [edx], 0x8d; xchg esp, edi; movsd dword ptr es:[edi], dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x0017b5e9: add byte ptr [ecx + 0x31382444], cl; rcl byte ptr [edi - 0x18], 0x2a; js 0x17b5e9; call ecx; 
0x0017b509: add byte ptr [ecx + 0x31382444], cl; rcl byte ptr [edi - 0x18], 0xa; jns 0x17b509; call ecx; 
0x0013fed3: add byte ptr [ecx + 0x313c2444], cl; shr al, 0xc1; sbb edi, edi; inc dword ptr [ebp - 0x768f8740]; ret; 
0x0012399a: add byte ptr [ecx + 0x316c2444], cl; shr al, 0x9a; mov eax, 0xf883fffc; push dword ptr [ebp + esi*2 - 0x77]; ret; 
0x000b36df: add byte ptr [ecx + 0x3518911], cl; pop ebx; ret; 
0x00122d42: add byte ptr [ecx + 0x36b8c7], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010441d: add byte ptr [ecx + 0x388cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000625a6: add byte ptr [ecx + 0x391c246c], cl; ret; 
0x0006e266: add byte ptr [ecx + 0x3920246c], cl; ret; 
0x0012ae97: add byte ptr [ecx + 0x39d8f7f0], cl; ret; 
0x000ccfe7: add byte ptr [ecx + 0x39efd3d7], cl; ret; 
0x000908fc: add byte ptr [ecx + 0x3ffffa], al; add byte ptr [edi + 0xb], dh; ret; 
0x000698e8: add byte ptr [ecx + 0x40f63b14], cl; jmp dword ptr [eax]; 
0x00108a71: add byte ptr [ecx + 0x43b60fc6], cl; add al, 0x89; ret 0xe283; 
0x000abee7: add byte ptr [ecx + 0x4428d02], cl; pop ebx; pop esi; ret; 
0x000c0b6d: add byte ptr [ecx + 0x448b0750], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000bd6fa: add byte ptr [ecx + 0x448b0750], cl; and al, 8; pop esi; ret; 
0x000c0b8d: add byte ptr [ecx + 0x448b0850], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000bd71a: add byte ptr [ecx + 0x448b0850], cl; and al, 8; pop esi; ret; 
0x000c0c6d: add byte ptr [ecx + 0x448b0f48], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000bd7ea: add byte ptr [ecx + 0x448b0f48], cl; and al, 8; pop esi; ret; 
0x000c0c8d: add byte ptr [ecx + 0x448b1048], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000bd80a: add byte ptr [ecx + 0x448b1048], cl; and al, 8; pop esi; ret; 
0x001628d7: add byte ptr [ecx + 0x448b2434], cl; and al, 0x2c; call eax; 
0x00041522: add byte ptr [ecx + 0x44cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0005adf0: add byte ptr [ecx + 0x4508910], cl; xor eax, eax; ret; 
0x000b36bf: add byte ptr [ecx + 0x4518811], cl; pop ebx; ret; 
0x00027901: add byte ptr [ecx + 0x458bc445], cl; aam 0x89; ret; 
0x00047a48: add byte ptr [ecx + 0x45cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0014e6d3: add byte ptr [ecx + 0x46cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000dcbe9: add byte ptr [ecx + 0x4708910], cl; pop ebx; pop esi; pop edi; ret; 
0x00070155: add byte ptr [ecx + 0x4acc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00080d8b: add byte ptr [ecx + 0x4c4830a], cl; pop ebx; pop esi; ret; 
0x0008dd8e: add byte ptr [ecx + 0x4c48310], cl; pop ebx; pop esi; ret; 
0x000df72d: add byte ptr [ecx + 0x4c48310], cl; xor eax, eax; pop ebx; pop esi; ret; 
0x00123ba3: add byte ptr [ecx + 0x4c483d8], cl; pop ebx; pop esi; ret; 
0x000641e3: add byte ptr [ecx + 0x4ccc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0013ed71: add byte ptr [ecx + 0x4f890457], cl; or byte ptr [ebx + 0x5e], bl; pop edi; ret 4; 
0x000db3f5: add byte ptr [ecx + 0x50302444], cl; mov eax, dword ptr [esp + 0x64]; call eax; 
0x00082f59: add byte ptr [ecx + 0x5052016a], bl; push ebx; call dword ptr [edi + 0x40]; 
0x00176993: add byte ptr [ecx + 0x51890841], cl; or al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; ret; 
0x0008d773: add byte ptr [ecx + 0x52], dl; call 0x184e00; add esp, 0x1c; ret; 
0x00122a67: add byte ptr [ecx + 0x5401], bh; mov ebp, dword ptr [eax + edi]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00122d07: add byte ptr [ecx + 0x5409], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000794ec: add byte ptr [ecx + 0x548b0850], cl; and al, 8; mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 0x14], 2; mov dword ptr [eax + 0x18], edx; ret; 
0x00179de1: add byte ptr [ecx + 0x56cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000b9d4f: add byte ptr [ecx + 0x57896617], cl; add al, 0x5f; pop esi; pop ebx; ret; 
0x000a1595: add byte ptr [ecx + 0x5a89405e], cl; or al, 0x89; ret 0xca83; 
0x0007c0a2: add byte ptr [ecx + 0x5b082454], cl; jmp eax; 
0x00081318: add byte ptr [ecx + 0x5b102474], cl; mov eax, dword ptr [edi + 0x10]; pop esi; pop edi; jmp eax; 
0x000811c8: add byte ptr [ecx + 0x5b102474], cl; mov eax, dword ptr [edi + 0x14]; pop esi; pop edi; jmp eax; 
0x001948b0: add byte ptr [ecx + 0x5b5e5fd0], cl; ret; 
0x000b9f9f: add byte ptr [ecx + 0x5b5e5ff8], cl; ret; 
0x000abe27: add byte ptr [ecx + 0x5bd08902], cl; pop esi; ret; 
0x000878f7: add byte ptr [ecx + 0x5bd889fb], cl; pop esi; pop edi; ret; 
0x001b5540: add byte ptr [ecx + 0x5c89111c], cl; adc dword ptr [ebx + eax*4], eax; ret 0x3908; 
0x00054f92: add byte ptr [ecx + 0x5e5b047b], cl; pop edi; pop ebp; ret; 
0x000348f4: add byte ptr [ecx + 0x5e5b1814], cl; ret; 
0x00054fc6: add byte ptr [ecx + 0x5f5e5b16], cl; pop ebp; ret; 
0x000a74b7: add byte ptr [ecx + 0x5f5e5bc8], cl; pop ebp; ret; 
0x0011634e: add byte ptr [ecx + 0x5f5e5bd0], cl; pop ebp; ret; 
0x00182b8e: add byte ptr [ecx + 0x5f5e5bd0], cl; ret; 
0x00066244: add byte ptr [ecx + 0x5f5e5bd8], cl; pop ebp; ret; 
0x00135312: add byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x000e8d78: add byte ptr [ecx + 0x5f5e5be8], cl; pop ebp; ret; 
0x00039598: add byte ptr [ecx + 0x5f5e5bf0], cl; pop ebp; ret; 
0x00061cec: add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x0005f783: add byte ptr [ecx + 0x5f5e5bf8], cl; pop ebp; ret; 
0x000abf0b: add byte ptr [ecx + 0x6428d02], cl; pop ebx; pop esi; ret; 
0x001adffc: add byte ptr [ecx + 0x6c89112c], cl; adc dword ptr [ebx + eax*4], eax; ret 0x3908; 
0x000bd82a: add byte ptr [ecx + 0x70881048], cl; adc al, 0x8b; inc esp; and al, 8; pop esi; ret; 
0x000c2ffb: add byte ptr [ecx + 0x75], cl; stc; pop esi; ret; 
0x000da8e2: add byte ptr [ecx + 0x75e85052], bl; daa; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00115627: add byte ptr [ecx + 0x7a892072], cl; and al, 0x89; inc edx; sub byte ptr [esi + 0x5f], bl; ret; 
0x00097054: add byte ptr [ecx + 0x7b9fb], cl; add byte ptr [eax], al; mov dword ptr [edi + 4], edx; xor esi, esi; xor edx, edx; call dword ptr gs:[0x10]; 
0x001b1350: add byte ptr [ecx + 0x7c89193c], cl; sbb dword ptr [ebx + eax*4], eax; ret; 
0x0012e7a8: add byte ptr [ecx + 0x7c891a3c], cl; sbb al, byte ptr [ebx + eax*4]; ret; 
0x0012e391: add byte ptr [ecx + 0x7fffffff], bh; mov esi, 5; call dword ptr gs:[0x10]; 
0x0008b99f: add byte ptr [ecx + 0x803c48], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x34]; test eax, eax; jne 0x8b9a0; ret; 
0x00098203: add byte ptr [ecx + 0x80], bh; call dword ptr gs:[0x10]; 
0x0008f21d: add byte ptr [ecx + 0x80], bh; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008e6d3: add byte ptr [ecx + 0x80], bh; xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x0008fa23: add byte ptr [ecx + 0x81], bh; call dword ptr gs:[0x10]; 
0x00186de5: add byte ptr [ecx + 0x81], bh; mov edx, 1; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00092f06: add byte ptr [ecx + 0x81], bh; mov edx, 1; mov ebx, edi; call dword ptr gs:[0x10]; 
0x0008f2d9: add byte ptr [ecx + 0x81], bh; mov edx, 1; push ebx; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000982a0: add byte ptr [ecx + 0x81], bh; xor esi, esi; mov edx, 0x7fffffff; mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x0008fa52: add byte ptr [ecx + 0x81], bh; xor esi, esi; mov edx, 1; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x00095d2d: add byte ptr [ecx + 0x87], bh; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x000edc83: add byte ptr [ecx + 0x89cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00161aef: add byte ptr [ecx + 0x8bcc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00062594: add byte ptr [ecx + 0x8fcc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0008f549: add byte ptr [ecx + 0x92086], cl; add byte ptr [ecx], bh; ret 0x5c72; 
0x00090d48: add byte ptr [ecx + 0x94c4], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x000a1848: add byte ptr [ecx + 0x98486], cl; add byte ptr [ebp - 0x19e2937a], cl; call dword ptr [eax + 0x57]; 
0x0008986a: add byte ptr [ecx + 0x9cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0003b5cd: add byte ptr [ecx + 0xa024bc], al; add byte ptr [eax], al; push eax; ret; 
0x001782cb: add byte ptr [ecx + 0xa0c4], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0015da7f: add byte ptr [ecx + 0xa178b7], cl; add byte ptr [ecx], bh; ret 0xe74; 
0x0010d2a5: add byte ptr [ecx + 0xac2484], cl; add byte ptr [eax], al; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0010d017: add byte ptr [ecx + 0xac2484], cl; add byte ptr [eax], al; mov eax, 0xaf; mov dword ptr [esp + 0xb8], 0; call dword ptr gs:[0x10]; 
0x0007d6cc: add byte ptr [ecx + 0xacc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0003ca1d: add byte ptr [ecx + 0xb3b8c2], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00179857: add byte ptr [ecx + 0xb4a9], cl; add bl, ch; ret; 
0x001829a0: add byte ptr [ecx + 0xbc473c3], al; add byte ptr [ecx + 0x168ec], al; add byte ptr [ecx - 0x1636b], cl; dec dword ptr [ecx - 0x15f7b]; jmp dword ptr [ebp - 0x5f]; 
0x00027f2b: add byte ptr [ecx + 0xbcc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000ea0a5: add byte ptr [ecx + 0xc], bh; lea ebx, [eax + 0x6c]; mov dword ptr [eax + 0x6c], ebx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x000435c7: add byte ptr [ecx + 0xccc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0016ec09: add byte ptr [ecx + 0xd020ac3], al; add byte ptr [ebx - 0x7c72ef14], al; or al, 0xfd; bnd call dword ptr [eax - 0x73]; 
0x00162789: add byte ptr [ecx + 0xdc68ac3], al; add byte ptr [ebx - 0x7c72ef14], al; cmp al, 0x39; bnd call dword ptr [eax - 0x73]; 
0x00156c3c: add byte ptr [ecx + 0xe81d7c3], al; add byte ptr [ecx + 0x144ec], al; add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00156b8d: add byte ptr [ecx + 0xe8286c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x00046cdc: add byte ptr [ecx + 0xecc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00150ea7: add byte ptr [ecx + 0xedf6cc6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x00078f57: add byte ptr [ecx + 0xf5e5bf0], cl; mov dh, 0xc0; pop edi; ret; 
0x00148b27: add byte ptr [ecx + 0xf62ecc6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x00036bd8: add byte ptr [ecx + 0xfcc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0009121b: add byte ptr [ecx + 0xfd231d0], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc11f; 
0x00097c94: add byte ptr [ecx + 1], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0018c4ce: add byte ptr [ecx + 1], bh; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x00097789: add byte ptr [ecx + 7], bh; xor esi, esi; mov dword ptr [ebx + 4], edx; xor edx, edx; call dword ptr gs:[0x10]; 
0x0009807f: add byte ptr [ecx + 8], al; xor byte ptr [ecx], 0xc0; ret; 
0x0003c9f6: add byte ptr [ecx + 8], bh; call dword ptr gs:[0x10]; 
0x00097450: add byte ptr [ecx + 8], bh; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x000c2194: add byte ptr [ecx + eax + 0x40], dh; pop edi; pop esi; ret; 
0x000c1ff0: add byte ptr [ecx + eax + 0x40], dh; pop edi; ret; 
0x000c2ed2: add byte ptr [ecx + eax + 0x40], dh; sub eax, dword ptr [esp + 4]; ret; 
0x00054384: add byte ptr [ecx + eax*2 - 0x7d], dh; ret; 
0x001b67d3: add byte ptr [ecx + ebp*8], cl; ret 0xffdc; 
0x0013b331: add byte ptr [ecx - 0x11b43], cl; dec dword ptr [ebp - 0x9763]; jmp dword ptr [esi - 0x70]; 
0x00175f69: add byte ptr [ecx - 0x12f7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00175f85: add byte ptr [ecx - 0x13b7b], cl; call dword ptr [eax - 0x18]; 
0x00156c48: add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000fac70: add byte ptr [ecx - 0x156343], cl; jmp dword ptr [ebp - 0x75]; 
0x001829ac: add byte ptr [ecx - 0x1636b], cl; dec dword ptr [ecx - 0x15f7b]; jmp dword ptr [ebp - 0x5f]; 
0x000cccbe: add byte ptr [ecx - 0x16cfdbbc], cl; pop esp; idiv edi; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000d0c43: add byte ptr [ecx - 0x16d7dbbc], cl; inc ebx; idiv bh; dec dword ptr [ebx - 0x72d3db84]; xchg dword ptr [ebp + ebx*4 - 7], esp; call dword ptr [eax - 0x73]; 
0x0016265d: add byte ptr [ecx - 0x16f7dbbc], cl; ret; 
0x0009fce7: add byte ptr [ecx - 0x16ffe2bc], cl; ret; 
0x0018aef2: add byte ptr [ecx - 0x17a9afae], bl; test byte ptr [ebx], dh; out dx, eax; jmp dword ptr [ecx]; 
0x001456dd: add byte ptr [ecx - 0x17dbdba4], cl; rcr edx, 0xed; dec dword ptr [ecx - 0x76d3dbbc]; ret; 
0x00150977: add byte ptr [ecx - 0x18], dl; ret 0xffa0; 
0x00095a64: add byte ptr [ecx - 0x2dcef7b0], cl; mov eax, edx; ret; 
0x0009f41a: add byte ptr [ecx - 0x337c723b], cl; add esp, esi; call dword ptr [eax + 0x56]; 
0x001340d5: add byte ptr [ecx - 0x33f7b], cl; inc edi; test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x0009834e: add byte ptr [ecx - 0x3600f785], al; lcall 0, 0xc4870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x00059666: add byte ptr [ecx - 0x361f73], cl; dec dword ptr [ebx - 0x364763]; call dword ptr [eax + 0x6a]; 
0x00058d9c: add byte ptr [ecx - 0x361f73], cl; dec dword ptr [ebx - 0x364763]; call dword ptr [eax - 0x73]; 
0x000d77d7: add byte ptr [ecx - 0x362f4b], cl; dec dword ptr [edi]; mov ebp, 0x89d189f0; ret; 
0x000d821c: add byte ptr [ecx - 0x362f73], cl; dec dword ptr [ebx - 0x363f63]; call dword ptr [eax + 0x6a]; 
0x0017cafd: add byte ptr [ecx - 0x3776f3b0], cl; pop ebx; ret; 
0x0017cabd: add byte ptr [ecx - 0x3776f3b0], cl; ret; 
0x000a000e: add byte ptr [ecx - 0x38d3dbac], cl; inc esp; and al, 0x34; add al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0007190f: add byte ptr [ecx - 0x38fbdbb4], cl; inc esp; and al, 0x34; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x00070b5d: add byte ptr [ecx - 0x38fbdbb4], cl; inc esp; and al, 0x48; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x00157a14: add byte ptr [ecx - 0x3b7ceefc], cl; add al, 0x5b; pop esi; ret; 
0x0008dde1: add byte ptr [ecx - 0x3b7cf3bd], cl; add al, 0x5b; pop esi; ret; 
0x0005ac05: add byte ptr [ecx - 0x3b7cf7a6], cl; add al, 0x5b; pop esi; ret; 
0x00099485: add byte ptr [ecx - 0x3fcee3be], cl; pop ebx; ret; 
0x000909f4: add byte ptr [ecx - 0x3fcef3b0], cl; pop ebx; ret; 
0x0014e0a7: add byte ptr [ecx - 0x44f7b], cl; call dword ptr [edi - 0x18]; 
0x000e7c99: add byte ptr [ecx - 0x4527763d], cl; dec ebx; add byte ptr [eax], al; add bh, dh; fadd dword ptr [ebx + 0x440fdafb]; ret 0x548b; 
0x000f1969: add byte ptr [ecx - 0x46f7b], cl; dec dword ptr [ebx + 0x458b084d]; adc byte ptr [ecx - 0x46b73], cl; dec dword ptr [ecx - 0x4737b]; jmp dword ptr [ebp - 0x75]; 
0x000da89f: add byte ptr [ecx - 0x4717afae], bl; daa; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0003d8a4: add byte ptr [ecx - 0x47dfdbbc], cl; mov dl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001329db: add byte ptr [ecx - 0x47e7dbbc], cl; jne 0x1329e3; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00133085: add byte ptr [ecx - 0x47e7dbbc], cl; jne 0x13308d; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012bbec: add byte ptr [ecx - 0x4937b], cl; call dword ptr [eax - 0x18]; 
0x001446be: add byte ptr [ecx - 0x4977b], cl; call dword ptr [eax - 1]; 
0x000751d1: add byte ptr [ecx - 0x4f773], cl; call dword ptr [eax + 0x53]; 
0x00133bc7: add byte ptr [ecx - 0x4fb7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000ccfdf: add byte ptr [ecx - 0x547bf033], cl; add dword ptr [eax], eax; add byte ptr [ecx + 0x39efd3d7], cl; ret; 
0x000665d1: add byte ptr [ecx - 0x56b7b], cl; dec dword ptr [ebp - 0x56b7b]; dec dword ptr [ecx - 0x5fb7b]; call dword ptr [eax - 0x18]; 
0x0006a761: add byte ptr [ecx - 0x59373], cl; call dword ptr [ebx - 0x75]; 
0x00066500: add byte ptr [ecx - 0x5a77b], cl; dec dword ptr [ecx - 0x5f363]; jmp dword ptr [ebp - 0x5f]; 
0x0008e734: add byte ptr [ecx - 0x5c9adfb0], cl; jl 0x8e73c; add byte ptr [eax], al; ret; 
0x0008e76b: add byte ptr [ecx - 0x5c9af3b0], cl; js 0x8e773; add byte ptr [eax], al; ret; 
0x0004e9cc: add byte ptr [ecx - 0x7209ce16], cl; dec ebx; rol byte ptr [eax - 0x79f0f607], 1; ret; 
0x0002f57e: add byte ptr [ecx - 0x7287dbbc], cl; add dword ptr [ecx + 0x2b], -7; call dword ptr [eax - 0x18]; 
0x0016b756: add byte ptr [ecx - 0x72a7dbbc], cl; xor ebx, 0x62; stc; call dword ptr [eax - 0x18]; 
0x0004f46e: add byte ptr [ecx - 0x72afdbbc], cl; test byte ptr [esp + ecx*4], ah; sbb eax, dword ptr [eax]; add byte ptr [ecx - 0x76c7dbbc], cl; ret 0x448b; 
0x00050162: add byte ptr [ecx - 0x72afdbbc], cl; test byte ptr [esp + ecx*4], ah; sbb eax, dword ptr [eax]; add byte ptr [ecx - 0x76c7dbbc], cl; ret 0x45e9; 
0x0011e041: add byte ptr [ecx - 0x72b7dbbc], cl; adc esp, 4; stc; dec dword ptr [edi]; inc ebp; ret 0x4489; 
0x0002cef0: add byte ptr [ecx - 0x72c7dbbc], cl; inc edi; and byte ptr [ecx - 0x9c3dbbc], cl; ret 0x7501; 
0x00027bc6: add byte ptr [ecx - 0x72cbdbac], cl; xchg edi, eax; sub ecx, edi; call dword ptr [edx + 0x50]; 
0x0002ac80: add byte ptr [ecx - 0x72cbdbbc], cl; inc ebp; and byte ptr [ecx - 0x9c7dbbc], cl; ret 0x7501; 
0x000490a5: add byte ptr [ecx - 0x72d3dbbc], cl; test byte ptr [eax + eax*4], ah; add al, byte ptr [eax]; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x20e9; 
0x00048385: add byte ptr [ecx - 0x72d3dbbc], cl; test byte ptr [eax + eax*4], ah; add al, byte ptr [eax]; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x8d2e; 
0x0004c5b6: add byte ptr [ecx - 0x72d3dbbc], cl; test byte ptr [esp + esi*8], ah; add byte ptr [eax], al; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x6de9; 
0x0004b8e1: add byte ptr [ecx - 0x72d3dbbc], cl; test byte ptr [esp + esi*8], ah; add byte ptr [eax], al; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x8d2e; 
0x0002a150: add byte ptr [ecx - 0x72d7dbbc], cl; inc edi; and byte ptr [ecx - 0x9d3dbbc], cl; ret 0x7501; 
0x0003f53b: add byte ptr [ecx - 0x72d7dbbc], cl; or dword ptr [edi + ebp], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000a230e: add byte ptr [ecx - 0x74167609], cl; push eax; or al, 0x8d; inc edx; jmp dword ptr [ecx]; 
0x000a1b15: add byte ptr [ecx - 0x74207612], cl; dec eax; or al, 0x8d; inc ecx; jmp dword ptr [ecx]; 
0x0005e191: add byte ptr [ecx - 0x7483dbb4], cl; mov word ptr [esp + ebp*4], fs; add byte ptr [eax], al; add dh, dh; ret; 
0x0012dd8a: add byte ptr [ecx - 0x7497dbbc], cl; and byte ptr [eax - 0x77000000], 0x44; and al, 0x6c; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x0008e72a: add byte ptr [ecx - 0x749ae3b0], cl; adc eax, 0x78; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x001231cf: add byte ptr [ecx - 0x74b3dbac], cl; push esp; and al, 0x64; mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x0013d9a6: add byte ptr [ecx - 0x74bbdb8c], cl; je 0x13d9d2; push 0x27838d50; inc eax; stc; call dword ptr [eax - 0x18]; 
0x0012fed1: add byte ptr [ecx - 0x74c3db8c], cl; je 0x12fefd; mov ebx, dword ptr fs:[esp + 0x60]; lea ecx, [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0002debd: add byte ptr [ecx - 0x74c3db94], cl; jl 0x2dee9; adc byte ptr [ecx - 0x76f3dbbc], cl; fmul dword ptr [ecx - 0x7cfbdbbc]; rol byte ptr [edx], 0x39; ret 0x820f; 
0x0015a042: add byte ptr [ecx - 0x74dbdbbc], cl; test byte ptr [eax + edx*4], ah; add al, 0; add byte ptr [ecx - 0x76cbdbbc], cl; ret; 
0x000de90f: add byte ptr [ecx - 0x74e3dbac], cl; push esp; and al, 0x34; mov ebx, dword ptr [esp + 0x30]; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012fdc0: add byte ptr [ecx - 0x74e3dbac], cl; push esp; and al, 0x34; mov ebx, dword ptr [esp + 0x30]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00082bce: add byte ptr [ecx - 0x74efdb8c], cl; inc eax; adc byte ptr [ebx + 0x5e5b04c4], al; jmp eax; 
0x00131a23: add byte ptr [ecx - 0x74efdbbc], cl; inc esp; and al, 0x40; mov dword ptr [esp + 0x14], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0010bef0: add byte ptr [ecx - 0x74f3dbac], cl; push esp; and al, 0x24; mov ebx, dword ptr [esp + 0x20]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0009cf5f: add byte ptr [ecx - 0x7576efbf], cl; test al, 0x3b; add byte ptr [eax], al; ret; 
0x00131ae7: add byte ptr [ecx - 0x7605762f], cl; out dx, eax; call dword ptr gs:[0x10]; 
0x0008e647: add byte ptr [ecx - 0x7611142d], cl; ret 0xcceb; 
0x0015322e: add byte ptr [ecx - 0x761c761f], cl; ret 0x25; 
0x0007fb07: add byte ptr [ecx - 0x76207622], cl; ret 0xcb89; 
0x000e8ed7: add byte ptr [ecx - 0x7693dba4], cl; ret; 
0x0002d43f: add byte ptr [ecx - 0x769fdbbc], cl; ret 0xa1e9; 
0x000c5833: add byte ptr [ecx - 0x76a7dbac], cl; ret 0x448b; 
0x0012356b: add byte ptr [ecx - 0x76b3dba4], cl; ret; 
0x00030278: add byte ptr [ecx - 0x76bbdbbc], cl; ret 0xc483; 
0x000a82bc: add byte ptr [ecx - 0x76c3dbbc], cl; ret 0x448b; 
0x0008a568: add byte ptr [ecx - 0x76c7dba4], cl; ret; 
0x0004f479: add byte ptr [ecx - 0x76c7dbbc], cl; ret 0x448b; 
0x0005016d: add byte ptr [ecx - 0x76c7dbbc], cl; ret 0x45e9; 
0x000db364: add byte ptr [ecx - 0x76cbdba4], cl; ret; 
0x0015a04d: add byte ptr [ecx - 0x76cbdbbc], cl; ret; 
0x000723c8: add byte ptr [ecx - 0x76cfdbbc], cl; ret 0x44c7; 
0x000cf7f1: add byte ptr [ecx - 0x76cfdbbc], cl; ret 0x8d2e; 
0x000d0182: add byte ptr [ecx - 0x76cfdbbc], cl; ret 0xb0e9; 
0x000a245c: add byte ptr [ecx - 0x76d3dba4], cl; ret; 
0x0016f458: add byte ptr [ecx - 0x76d7dba4], cl; ret; 
0x0009db28: add byte ptr [ecx - 0x76d7dbb4], cl; retf 0x4c8b; and al, 0x1c; call dword ptr gs:[0x10]; 
0x000c85a9: add byte ptr [ecx - 0x76d7dbbc], cl; ret 0x448b; 
0x000cc913: add byte ptr [ecx - 0x76d7dbbc], cl; ret 0x7ce9; 
0x000cbf4f: add byte ptr [ecx - 0x76d7dbbc], cl; ret 0x8d2e; 
0x00056013: add byte ptr [ecx - 0x76d7dbbc], cl; ret 0xc483; 
0x000c9716: add byte ptr [ecx - 0x76d7dbbc], cl; ret 0xcce9; 
0x0009b877: add byte ptr [ecx - 0x76dfdba4], cl; ret; 
0x000490b0: add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x20e9; 
0x0007138a: add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x448b; 
0x0004c5c1: add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x6de9; 
0x00048390: add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x8d2e; 
0x00175ad8: add byte ptr [ecx - 0x76e3dba4], cl; ret; 
0x0003026a: add byte ptr [ecx - 0x76e3dbbc], cl; lds ecx, ptr [ecx - 0x6817dbc4]; mov dl, 7; add byte ptr [ecx - 0x76bbdbbc], cl; ret 0xc483; 
0x000a501f: add byte ptr [ecx - 0x76e7743a], cl; ret 0xeec1; 
0x0003fdd2: add byte ptr [ecx - 0x76e7dbbc], cl; ret; 
0x000a13e7: add byte ptr [ecx - 0x76efdb94], cl; ret; 
0x000416e0: add byte ptr [ecx - 0x76efdbb4], cl; ret; 
0x000943ea: add byte ptr [ecx - 0x76f3dbbc], cl; ret 0xc889; 
0x000cc558: add byte ptr [ecx - 0x76f7dbac], cl; ret 0xf129; 
0x00173c11: add byte ptr [ecx - 0x76f7dbb4], cl; inc esp; and al, 4; jmp edx; 
0x00131ef7: add byte ptr [ecx - 0x76fbdb8c], cl; loope 0x131e88; ret 0x448b; 
0x00027bf2: add byte ptr [ecx - 0x76ff743b], cl; ret 0xce80; 
0x000958fb: add byte ptr [ecx - 0x77cf7b6], cl; and dword ptr [ebp + 4], esi; add dword ptr [edx + 4], 1; add esp, 0xc; ret; 
0x00133bd3: add byte ptr [ecx - 0x78721bbb], cl; clc; push esp; stc; call dword ptr [eax - 0x18]; 
0x00104a82: add byte ptr [ecx - 0x7aafdb84], cl; push dword ptr [esp + 0xf]; mov dh, 0x52; sbb al, 0xf6; ret 0xf08; 
0x001698bf: add byte ptr [ecx - 0x7c2e7623], cl; ret; 
0x000298af: add byte ptr [ecx - 0x7c3c76f5], cl; ret 0x3904; 
0x0014458b: add byte ptr [ecx - 0x7c721bbb], cl; mov bh, 0x47; stc; call dword ptr [eax - 0x18]; 
0x0014fc4d: add byte ptr [ecx - 0x7c8bdbbc], cl; ret; 
0x0007a6fc: add byte ptr [ecx - 0x7c968b38], cl; jmp dword ptr [eax]; 
0x00036fff: add byte ptr [ecx - 0x7cbbdb94], cl; ret; 
0x000dfdbf: add byte ptr [ecx - 0x7cc7dbbc], cl; inc esp; and al, 0x24; add dword ptr [ebx - 0x7cdbdbbc], ecx; ret; 
0x0006f4ac: add byte ptr [ecx - 0x7ccfdbac], cl; ret 0x8904; 
0x0009b1bf: add byte ptr [ecx - 0x7ce3dbac], cl; ret; 
0x001895fa: add byte ptr [ecx - 0x7cef79a4], cl; rol byte ptr [ecx], 0x83; ret 0x8308; 
0x00172f5b: add byte ptr [ecx - 0x7cf3dbbc], cl; in al, dx; or byte ptr [ebp - 0x69c6a7d], cl; call dword ptr [eax - 1]; 
0x0016eeeb: add byte ptr [ecx - 0x7cfbdbac], cl; in al, dx; or al, 0x50; call dword ptr [ecx + 0xc]; 
0x001b4031: add byte ptr [ecx - 0x7cfbf2a4], cl; ror dword ptr [eax], 0x39; sal dword ptr [edx - 0xf], 0xe9; ret 0x11; 
0x00089677: add byte ptr [ecx - 0x7e20d631], cl; call dword ptr [ebx + 0xf000005]; 
0x00177f0e: add byte ptr [ecx - 0x7e7c723b], cl; stc; call dword ptr [ecx + 0x6a]; 
0x000cea4c: add byte ptr [ecx - 0x7ecbdbac], cl; ret 0; 
0x000c7fac: add byte ptr [ecx - 0x7ed3dbac], cl; ret 0; 
0x000408a0: add byte ptr [ecx - 0x7f], bl; ror dword ptr [edx], 0; add byte ptr [eax], al; mov dword ptr [edx], ecx; ret; 
0x00144f46: add byte ptr [ecx - 0x837b], cl; call dword ptr [eax + 0x6a]; 
0x0010db96: add byte ptr [ecx - 0x8b7b], cl; jmp dword ptr [ebp - 0x75]; 
0x00035c80: add byte ptr [ecx - 0x8f7b], cl; call dword ptr [eax - 0x73]; 
0x0009705b: add byte ptr [ecx - 0x9cefba9], cl; xor edx, edx; call dword ptr gs:[0x10]; 
0x000a55db: add byte ptr [ecx - 0x9efdbbc], cl; ret 0xf04; 
0x001b4413: add byte ptr [ecx - 0x9f7dbbc], cl; ret 0xf07; 
0x0016e6b7: add byte ptr [ecx - 0xa9f3ba], cl; je 0x16e6e3; adc al, 0x8b; inc esp; and al, 0x14; call eax; 
0x00181046: add byte ptr [ecx - 0xb37b], cl; dec dword ptr [ecx - 0xbf6b]; dec dword ptr [ecx - 0xaf4b]; jmp dword ptr [ebp - 0x75]; 
0x000d47e7: add byte ptr [ecx - 0xf76f7b0], cl; pop ebx; pop esi; ret; 
0x0003ef51: add byte ptr [ecx - 0xffc2ac], cl; jae 0x3ef5d; call eax; 
0x0010d5a9: add byte ptr [ecx - 1], bh; call dword ptr gs:[0x10]; 
0x000c2beb: add byte ptr [ecx - 1], bh; cmovb eax, ecx; ret; 
0x0007f1ef: add byte ptr [ecx - 1], bh; pop ebx; pop esi; mov eax, ecx; pop edi; ret; 
0x000a944c: add byte ptr [ecx*4 - 0x942f36e], al; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000aa15c: add byte ptr [ecx*4 - 0x952736e], al; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0005ad23: add byte ptr [ecx], 0; add byte ptr [ebx + 0xd182444], cl; add byte ptr [eax], 0x41; add byte ptr [eax - 0x73], dl; and byte ptr [edi + 0x30], 0xf9; call dword ptr [eax - 0x18]; 
0x0016a717: add byte ptr [ecx], 0; add byte ptr [ebx - 0x41f0d1f4], cl; ret 0x44f6; 
0x0014b17c: add byte ptr [ecx], 0; add byte ptr [ebx - 0x7c72f314], al; adc ebx, dword ptr [ebx - 7]; call dword ptr [eax - 0x18]; 
0x001436e6: add byte ptr [ecx], 0x59; stc; call dword ptr [eax + 0x6a]; 
0x000c2e28: add byte ptr [ecx], ah; ret 0x2474; 
0x00031670: add byte ptr [ecx], ah; ret; 
0x0008cd53: add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0008fa1f: add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; call dword ptr gs:[0x10]; 
0x0008f924: add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x0003482b: add byte ptr [ecx], al; add byte ptr [eax], al; and eax, dword ptr [esp + 8]; ret; 
0x0012ec88: add byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012ec49: add byte ptr [ecx], al; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00122e89: add byte ptr [ecx], al; add byte ptr [eax], al; mov word ptr [eax + 0x16], dx; ret; 
0x000c2d57: add byte ptr [ecx], al; add byte ptr [eax], al; or cl, cl; jne 0xc2d61; xor eax, eax; ret; 
0x000605ac: add byte ptr [ecx], al; add byte ptr [eax], al; or eax, 7; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x000344d7: add byte ptr [ecx], al; add byte ptr [eax], al; ret; 
0x000c2ca7: add byte ptr [ecx], al; add byte ptr [eax], al; sub eax, edx; ret; 
0x0012e472: add byte ptr [ecx], al; add byte ptr [ebp - 0x6ab5662], cl; call dword ptr [ebx - 0x18]; 
0x0008cd3d: add byte ptr [ecx], al; add esp, 4; pop ebx; pop esi; ret; 
0x00090877: add byte ptr [ecx], al; add esp, 4; pop esi; pop edi; ret; 
0x0013b134: add byte ptr [ecx], al; call eax; 
0x0013b630: add byte ptr [ecx], al; call ecx; 
0x0013b36a: add byte ptr [ecx], al; call edx; 
0x000c0ff3: add byte ptr [ecx], al; clc; add eax, ecx; pop edi; ret; 
0x00140cdc: add byte ptr [ecx], al; fdivr dword ptr [ecx]; ror byte ptr [edi], 1; inc edx; ret 0xe883; 
0x000a19bc: add byte ptr [ecx], al; fidivr dword ptr [ecx]; ret 0xa72; 
0x000c30a2: add byte ptr [ecx], al; je 0xc30ad; or dword ptr [eax + 0x3c90], 1; xor eax, eax; pop ebx; ret; 
0x000a17b1: add byte ptr [ecx], al; lea ebx, [esi + 0x3c1c]; call dword ptr gs:[0x10]; 
0x000a948c: add byte ptr [ecx], al; lea edx, [edx - 0xab574]; cmovne eax, edx; ret; 
0x0013d6bc: add byte ptr [ecx], al; lea edx, [edx - 0xab584]; cmovne eax, edx; ret; 
0x00187cb3: add byte ptr [ecx], al; ret 0x21eb; 
0x00101e48: add byte ptr [ecx], al; ret 0x4489; 
0x0015047f: add byte ptr [ecx], al; ret 0x5052; 
0x0006348d: add byte ptr [ecx], al; ret; 
0x0004d1ee: add byte ptr [ecx], al; rol dword ptr [ebx - 0x7bf0e808], cl; imul eax, dword ptr [ecx], 0x17ba0000; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5152; 
0x000ccd03: add byte ptr [ecx], al; ror byte ptr [ebx + 0x29642454], 1; ret; 
0x000c9b81: add byte ptr [ecx], al; ror byte ptr [ebx + 0x296c2454], 1; ret; 
0x0003ba0f: add byte ptr [ecx], al; ror dword ptr [ecx - 0x74f3dbac], 0x44; and al, 0x10; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x001b438a: add byte ptr [ecx], al; sal dh, cl; ret 0x7406; 
0x000c30ab: add byte ptr [ecx], al; xor eax, eax; pop ebx; ret; 
0x0015df81: add byte ptr [ecx], bh; inc edx; add al, 0xf; test byte ptr [ebp - 0x7d000000], cl; ret 0x8014; 
0x00029317: add byte ptr [ecx], bh; lds ecx, ptr [edi]; test dword ptr [ebp - 0x74ffffff], ebx; jl 0x29347; sub byte ptr [ebp - 0x6945379], cl; call dword ptr [eax - 0x73]; 
0x0011bd5b: add byte ptr [ecx], bh; ret 0x1772; 
0x001479a5: add byte ptr [ecx], bh; ret 0x1988; 
0x00027b3a: add byte ptr [ecx], bh; ret 0x420f; 
0x0003a462: add byte ptr [ecx], bh; ret 0x430f; 
0x000dc6a5: add byte ptr [ecx], bh; ret 0x470f; 
0x00123d8d: add byte ptr [ecx], bh; ret 0x4e0f; 
0x00096ca7: add byte ptr [ecx], bh; ret 0x4f0f; 
0x00151337: add byte ptr [ecx], bh; ret 0x5473; 
0x0008f54f: add byte ptr [ecx], bh; ret 0x5c72; 
0x000996d6: add byte ptr [ecx], bh; ret 0x6574; 
0x00098f7a: add byte ptr [ecx], bh; ret 0x6974; 
0x000985ed: add byte ptr [ecx], bh; ret 0x7e74; 
0x000894ac: add byte ptr [ecx], bh; ret 0x820f; 
0x00098364: add byte ptr [ecx], bh; ret 0x840f; 
0x0006b5ea: add byte ptr [ecx], bh; ret 0x850f; 
0x0015331d: add byte ptr [ecx], bh; ret 0xa875; 
0x000a9718: add byte ptr [ecx], bh; ret 0xc072; 
0x000a97d5: add byte ptr [ecx], bh; ret 0xc372; 
0x000eee85: add byte ptr [ecx], bh; ret 0xd675; 
0x00141737: add byte ptr [ecx], bh; ret 0xe072; 
0x0015da85: add byte ptr [ecx], bh; ret 0xe74; 
0x000391e9: add byte ptr [ecx], bh; ret; 
0x00134b1a: add byte ptr [ecx], bh; retf 0x472; cmp ecx, edx; sbb eax, eax; ret; 
0x001563af: add byte ptr [ecx], bh; retf 0xec75; add esp, 8; pop ebx; ret; 
0x0010e1ab: add byte ptr [ecx], bh; ror byte ptr [edi], 1; dec esp; ret 0xdae9; 
0x0004a0c4: add byte ptr [ecx], bh; ror byte ptr [edi], 1; inc ebx; shr byte ptr [ecx], 1; ret 0x8d52; 
0x0014130c: add byte ptr [ecx], bh; ror byte ptr [edi], 1; inc edx; ret 0x578d; 
0x0007a6d4: add byte ptr [ecx], bh; ror byte ptr [edi], 1; inc edx; ret 0x789; 
0x0015c3ce: add byte ptr [ecx], bh; ror byte ptr [edi], 1; inc edx; ret 0xe883; 
0x001792db: add byte ptr [ecx], bh; sal byte ptr [eax + ecx + 0x5b], 1; pop esi; pop edi; ret; 
0x001413a7: add byte ptr [ecx], bh; sal dword ptr [esi + edi*2 - 0x7d], 1; rol byte ptr [ecx], 0x83; ret; 
0x00090ed7: add byte ptr [ecx], bh; salc; jae 0x90f18; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x00024b1c: add byte ptr [ecx], bh; xchg ecx, eax; xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebp - 0x33], dh; ret; 
0x000db527: add byte ptr [ecx], bl; fimul dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0x8902; 
0x000daca1: add byte ptr [ecx], bl; fimul dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000fd082: add byte ptr [ecx], ch; aad 0x89; fnstcw word ptr [ecx]; ret; 
0x00100d93: add byte ptr [ecx], ch; fadd dword ptr [ecx]; ret 0x86eb; 
0x000c595a: add byte ptr [ecx], ch; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x000a9b09: add byte ptr [ecx], ch; fdivr dword ptr [ecx]; fmul dword ptr [edi]; inc edx; ret; 
0x000597a1: add byte ptr [ecx], ch; fmul dword ptr [ecx - 0x362f7b]; inc dword ptr [ebx - 0x70f0e008]; ret 1; 
0x000d3d15: add byte ptr [ecx], ch; ret 0x328b; 
0x000570bb: add byte ptr [ecx], ch; ret 0x3b8; 
0x000e2fa0: add byte ptr [ecx], ch; ret 0x448b; 
0x000e65f5: add byte ptr [ecx], ch; ret 0x468b; 
0x000e3ed7: add byte ptr [ecx], ch; ret 0x478b; 
0x000a31ed: add byte ptr [ecx], ch; ret 0x48d; 
0x000ee529: add byte ptr [ecx], ch; ret 0x4be; 
0x0004d1fe: add byte ptr [ecx], ch; ret 0x5152; 
0x000e497d: add byte ptr [ecx], ch; ret 0x748d; 
0x000d2b26: add byte ptr [ecx], ch; ret 0xa8b; 
0x000e198a: add byte ptr [ecx], ch; ret 0xbe0f; 
0x0013e9f1: add byte ptr [ecx], ch; ret 0xc031; 
0x00074876: add byte ptr [ecx], ch; ret 0xca39; 
0x00049ff0: add byte ptr [ecx], ch; ret 0xcb29; 
0x0002f369: add byte ptr [ecx], ch; ret 0xd089; 
0x000dc233: add byte ptr [ecx], ch; ret 0xd129; 
0x0006b74c: add byte ptr [ecx], ch; ret 0xd189; 
0x000ad439: add byte ptr [ecx], ch; ret 0xd301; 
0x000ae417: add byte ptr [ecx], ch; ret 0xd601; 
0x000aa719: add byte ptr [ecx], ch; ret 0xd701; 
0x000a7e4b: add byte ptr [ecx], ch; ret 0xd801; 
0x000252a5: add byte ptr [ecx], ch; ret 0xe3d3; 
0x000e6f1b: add byte ptr [ecx], ch; ret 0xf089; 
0x000df5f6: add byte ptr [ecx], ch; ret 0xf889; 
0x000762be: add byte ptr [ecx], ch; ret 0xfa39; 
0x00029a9b: add byte ptr [ecx], ch; ret 0xfa83; 
0x00028eb6: add byte ptr [ecx], ch; ret; 
0x00065331: add byte ptr [ecx], ch; retf 0x490f; ret 0x4489; 
0x000e32bd: add byte ptr [ecx], ch; retf 0x490f; ret 0xc101; 
0x0003badd: add byte ptr [ecx], ch; rol ecx, 1; call 0x10ed7c05; or eax, ecx; ret; 
0x00031b97: add byte ptr [ecx], cl; ret 0x840f; 
0x00031b31: add byte ptr [ecx], cl; ret 0x850f; 
0x0004a482: add byte ptr [ecx], cl; ret 0x9d74; 
0x000ca6a2: add byte ptr [ecx], cl; ret 0x9e74; 
0x001b03f7: add byte ptr [ecx], cl; ret 0xbc89; 
0x0002ed59: add byte ptr [ecx], cl; ret; 
0x0007c28c: add byte ptr [ecx], cl; ror byte ptr [ecx + 0x14c48303], 1; pop ebx; pop esi; ret; 
0x0009987d: add byte ptr [ecx], dh; fild dword ptr [eax + 0xf00197f]; xchg ebp, eax; ret; 
0x000d4677: add byte ptr [ecx], dh; fild dword ptr [ebp - 0x760d8b37]; ret; 
0x00156791: add byte ptr [ecx], dh; fild dword ptr [ebx - 0x2776fb3c]; pop ebx; pop esi; ret; 
0x0012c9cf: add byte ptr [ecx], dh; fisttp dword ptr [ecx + 0x5f5e5bd8]; ret; 
0x00115b91: add byte ptr [ecx], dh; fisttp dword ptr [ecx - 0x763e7611]; ret 0xc031; 
0x00092ed0: add byte ptr [ecx], dh; fld xword ptr [esi]; lea esi, [esi]; lea esi, cs:[esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x0008356f: add byte ptr [ecx], dh; fstp xword ptr [ecx]; ror dword ptr [edi], 1; xchg esp, eax; ret; 
0x0008f819: add byte ptr [ecx], dh; idiv byte ptr [ecx + 0x81]; mov edx, 1; call dword ptr gs:[0x10]; 
0x000982a5: add byte ptr [ecx], dh; idiv byte ptr [edx + 0x7fffffff]; mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x00090adc: add byte ptr [ecx], dh; idiv byte ptr [edx + 0x7fffffff]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008fa57: add byte ptr [ecx], dh; idiv byte ptr [edx + 1]; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x0018c4d3: add byte ptr [ecx], dh; idiv byte ptr [edx + 1]; call dword ptr gs:[0x10]; 
0x00091313: add byte ptr [ecx], dh; idiv byte ptr [edx + 1]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009a5b8: add byte ptr [ecx], dh; leave; lock cmpxchg dword ptr [edx], ecx; mov eax, 0x10; cmove eax, ecx; ret; 
0x00042e3f: add byte ptr [ecx], dh; leave; pop ebx; mov eax, ecx; ret; 
0x00095378: add byte ptr [ecx], dh; leave; xor esi, esi; call dword ptr gs:[0x10]; 
0x0009de2c: add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x000a5b43: add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00094b66: add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], cl; mov eax, edx; ret; 
0x000a5c1a: add byte ptr [ecx], dh; rcr byte ptr [edx + 0x5b], 0x5e; ret; 
0x0013a727: add byte ptr [ecx], dh; rol byte ptr [ebp - 0x74698a0a], cl; xor dword ptr [ecx + eax], 0; add byte ptr [ebx - 0x17701500], cl; ret; 
0x00189daf: add byte ptr [ecx], dh; rol byte ptr [ebx - 0x6bf00008], cl; ret 0x1389; 
0x0015c887: add byte ptr [ecx], dh; rol byte ptr [ecx + 0xc0fefb], cl; add byte ptr [edi], cl; xchg ebp, eax; ret 0x548d; 
0x0004a87f: add byte ptr [ecx], dh; rol byte ptr [ecx - 0x7fffff19], cl; add byte ptr [edi], cl; xchg ebp, eax; ret 0xea83; 
0x0010b95f: add byte ptr [ecx], dh; rol byte ptr [edi + 0x3fac87], 0; cmp eax, 1; jg 0x10b9a8; call dword ptr [esi]; 
0x0010d206: add byte ptr [ecx], dh; ror byte ptr [ebx - 0x41fbdbb4], cl; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00049aa2: add byte ptr [ecx], dh; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00094bc9: add byte ptr [ecx], dh; sal al, cl; cmpxchg dword ptr [esp + 4], edx; ret; 
0x00090475: add byte ptr [ecx], dh; sal bl, 0xa5; pop esi; pop edi; ret; 
0x0003ddc7: add byte ptr [ecx], dh; sal byte ptr [ecx], cl; div byte ptr [ecx]; jmp dword ptr [ebp - 1]; 
0x000428f1: add byte ptr [ecx], dh; sal byte ptr [ecx], cl; fld xword ptr [ecx]; sar dword ptr [eax + 2], 0xf; movsd dword ptr es:[edi], dword ptr [esi]; ret 0xe0d3; 
0x0010d60a: add byte ptr [ecx], dh; sar byte ptr [esi + 8], cl; mov ecx, dword ptr [ebp - 0x144]; call dword ptr gs:[0x10]; 
0x001079fc: add byte ptr [ecx], dh; shr cl, 8; idiv bh; jmp dword ptr [ebp - 0x5f]; 
0x001337a3: add byte ptr [ecx], dh; test byte ptr [eax + 0x18bb01ce], 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00091094: add byte ptr [ecx], dh; test byte ptr [ebx - 0x7ffbdbb4], -0xf; add edi, 0x89744; add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; call dword ptr gs:[0x10]; 
0x00182c4f: add byte ptr [ecx], dh; test byte ptr [ebx - 0xf76fb3c], 0x5b; pop esi; ret; 
0x00097a0b: add byte ptr [ecx], dh; test byte ptr [ecx + 0x80e1], 0; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0018b8ac: add byte ptr [edi + 0x11], dh; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x0008a3a5: add byte ptr [edi + 0x16], dh; sub esp, 4; push edx; push dword ptr [esp + 0x3c]; push ebp; call dword ptr [esi + 0x20]; 
0x0008cdd9: add byte ptr [edi + 0x1a7482], al; add byte ptr [ebx + 0xb7f01f8], al; ret; 
0x0003f328: add byte ptr [edi + 0x1fa8317], al; jg 0x3f3f0; call eax; 
0x0007f9ec: add byte ptr [edi + 0x21], dh; sub esp, 4; push esi; push dword ptr [esp + 0x38]; push edi; call dword ptr [eax + 0x1c]; 
0x00089cca: add byte ptr [edi + 0x23], dh; push dword ptr [esp + 0x2c]; push ebp; push edi; push ebx; call dword ptr [esi + 0x40]; 
0x0008b4d0: add byte ptr [edi + 0x25], dh; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x000876f4: add byte ptr [edi + 0x29], dh; sub esp, 0xc; push ebx; call dword ptr [esi + 0x30]; 
0x0007d56d: add byte ptr [edi + 0x29], dh; sub esp, 4; push esi; push ecx; push ebx; call dword ptr [ebp + 0x1c]; 
0x0007fd33: add byte ptr [edi + 0x29], dh; sub esp, 4; push esi; push edx; push ebx; call dword ptr [ebp + 0x1c]; 
0x00081512: add byte ptr [edi + 0x2b], dh; sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x00132ac4: add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x31]; 
0x00131ecf: add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x00178f79: add byte ptr [edi + 0x31], dl; call dword ptr [esi - 0x18]; 
0x0003344b: add byte ptr [edi + 0x31], dl; call dword ptr [esi - 0x42]; 
0x00080d70: add byte ptr [edi + 0x35], dh; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x0008bcb5: add byte ptr [edi + 0x38], dh; sub esp, 8; push esi; push ebx; call dword ptr [edi + 0x18]; 
0x00079482: add byte ptr [edi + 0x3b], dh; sub esp, 4; push ebx; push edi; push eax; call dword ptr [ebp + 0x1c]; 
0x000883fd: add byte ptr [edi + 0x40], dh; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x00087adb: add byte ptr [edi + 0x42], dh; sub esp, 4; push esi; push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x00154b70: add byte ptr [edi + 0x53], dl; call edx; 
0x00089ba1: add byte ptr [edi + 0x56], dl; push ebx; call dword ptr [ebp + 0x40]; 
0x0008b426: add byte ptr [edi + 0x57], dh; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x0007f8f5: add byte ptr [edi + 0x58], dh; sub esp, 4; push edi; push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x000b31a1: add byte ptr [edi + 0x5b], bl; ret; 
0x000250f3: add byte ptr [edi + 0x5d], bl; jmp eax; 
0x00157336: add byte ptr [edi + 0x5d], bl; ret; 
0x000b945f: add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000d9654: add byte ptr [edi + 0x5e], bl; ret; 
0x0008795b: add byte ptr [edi + 0x62], dh; sub esp, 4; push esi; push dword ptr [esp + 0x38]; push ebp; call dword ptr [eax + 0x1c]; 
0x0016c672: add byte ptr [edi + 0x63], 0xf9; call dword ptr [eax + 0x6a]; 
0x0016c772: add byte ptr [edi + 0x63], 0xf9; call dword ptr [eax - 0x18]; 
0x00088f37: add byte ptr [edi + 0x66], dh; sub esp, 8; push -1; push dword ptr [ecx]; call dword ptr [eax + 0xc]; 
0x000884e3: add byte ptr [edi + 0x72], dh; push 2; push 0; push 0; push ebx; call dword ptr [esi + 0x40]; 
0x0007b8d9: add byte ptr [edi + 0x7c], dh; push 2; push 0; push 0; push ebp; call dword ptr [esi + 0x40]; 
0x00090902: add byte ptr [edi + 0xb], dh; ret; 
0x0011fe47: add byte ptr [edi + 0xf], bl; inc edi; ret 0x66c3; 
0x000d97d4: add byte ptr [edi + 2], bh; neg eax; ret; 
0x001a5b34: add byte ptr [edi + 2], dh; neg eax; add esp, 4; pop ebp; pop ebx; ret; 
0x001a32a4: add byte ptr [edi + 2], dh; neg eax; add esp, 4; pop ebx; ret; 
0x001a0bf4: add byte ptr [edi + 2], dh; neg eax; pop ebp; ret; 
0x001a7864: add byte ptr [edi + 2], dh; neg eax; pop edi; pop ebp; pop ebx; ret; 
0x001a7304: add byte ptr [edi + 2], dh; neg eax; pop edi; pop ebx; ret; 
0x0019f3b4: add byte ptr [edi + 2], dh; neg eax; ret; 
0x001a7e8a: add byte ptr [edi + 3], bh; neg eax; ret; 
0x0013c8da: add byte ptr [edi + 7], dh; sar eax, 5; add esp, 0xc; ret; 
0x00120537: add byte ptr [edi + 8], bh; call dword ptr gs:[0x10]; 
0x001a81b5: add byte ptr [edi + 8], bh; neg eax; ret; 
0x001ac1c4: add byte ptr [edi + 9], bh; neg eax; pop edi; pop esi; pop ebx; ret; 
0x000d97a4: add byte ptr [edi + 9], bh; neg eax; pop edi; pop esi; ret; 
0x001b2f63: add byte ptr [edi + ecx], al; test byte ptr [0x66000005], bl; cmp eax, 0x840f0800; ret; 
0x000dfa72: add byte ptr [edi + ecx], al; test byte ptr [edi - 0x9ffffe3], bh; ret; 
0x0015835d: add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x448b; 
0x000792d3: add byte ptr [edi + edi*2], 0xf9; call dword ptr [eax - 0x73]; 
0x001926d7: add byte ptr [edi - 0x18], dl; ret 0xf561; 
0x00175056: add byte ptr [edi - 0x18], dl; ret; 
0x001abaa4: add byte ptr [edi - 0x73000000], 0x40; add al, 0x5f; ret; 
0x001aaa84: add byte ptr [edi - 0x73000000], 0x47; add al, 0x5f; ret; 
0x00175d3a: add byte ptr [edi - 0x75], dl; inc esp; and al, 0x48; call dword ptr [eax + 0x14]; 
0x000a6996: add byte ptr [edi - 0x7d], dh; in al, dx; or byte ptr [ebp - 0x6bb997a], cl; call dword ptr [ebx + 0x50]; 
0x00178f76: add byte ptr [edi], ch; add byte ptr [edi + 0x31], dl; call dword ptr [esi - 0x18]; 
0x0005aaae: add byte ptr [edi], ch; jbe 0x5aa3d; ret 0x40c7; 
0x0015740e: add byte ptr [edi], ch; je 0x157476; mov byte ptr [ebx + 0x8f88], 0; mov dword ptr [ebx + 0x8f78], 0; call esi; 
0x0015762e: add byte ptr [edi], ch; je 0x157696; mov byte ptr [ebx + 0x4e88], 0; mov dword ptr [ebx + 0x4e78], 0; call esi; 
0x00064d85: add byte ptr [edi], cl; dec ecx; ret 0x4489; 
0x000e4a27: add byte ptr [edi], cl; dec ecx; ret 0xc8d; 
0x000570ec: add byte ptr [edi], cl; dec edi; ret 0xdb31; 
0x00147410: add byte ptr [edi], cl; dec edi; ret; 
0x0010df72: add byte ptr [edi], cl; dec esi; ret 0x15e9; 
0x00104e5f: add byte ptr [edi], cl; dec esi; ret 0x4489; 
0x0009d7d1: add byte ptr [edi], cl; dec esi; ret 0x8389; 
0x0003e5da: add byte ptr [edi], cl; dec esi; ret; 
0x00104bbb: add byte ptr [edi], cl; dec esp; ret; 
0x0012887e: add byte ptr [edi], cl; inc ebp; fadd dword ptr [ebx - 0x2776e73c]; pop ebx; ret; 
0x0009d6d2: add byte ptr [edi], cl; inc ebp; ret 0x2ec3; 
0x000907f8: add byte ptr [edi], cl; inc ebp; ret 0x8dc3; 
0x000dc4d3: add byte ptr [edi], cl; inc ebx; ret 0xe883; 
0x00099b7e: add byte ptr [edi], cl; inc edi; ret 0x2ec3; 
0x00094f37: add byte ptr [edi], cl; inc edi; ret 0x4489; 
0x000a0af5: add byte ptr [edi], cl; inc edi; ret 0x8188; 
0x0009a452: add byte ptr [edi], cl; inc edi; ret 0x948b; 
0x00141d6f: add byte ptr [edi], cl; inc edx; ret 0x2ec3; 
0x000da4e2: add byte ptr [edi], cl; inc edx; ret 0xc501; 
0x000980ec: add byte ptr [edi], cl; inc esp; ret 0x118b; 
0x000c34d9: add byte ptr [edi], cl; inc esp; ret 0x188b; 
0x000c33c9: add byte ptr [edi], cl; inc esp; ret 0x288b; 
0x000c400a: add byte ptr [edi], cl; inc esp; ret 0x4489; 
0x00043278: add byte ptr [edi], cl; inc esp; ret 0x66c3; 
0x000c45b3: add byte ptr [edi], cl; inc esp; ret 0x8b65; 
0x000a86c8: add byte ptr [edi], cl; inc esp; ret 0x8dc3; 
0x00031401: add byte ptr [edi], cl; inc esp; ret 0xf289; 
0x000c348e: add byte ptr [edi], cl; inc esp; ret 0xff50; 
0x0014cdcf: add byte ptr [edi], cl; inc esp; ret; 
0x00142e56: add byte ptr [edi], cl; inc esp; ror byte ptr [ebx - 0x76f3dbbc], 1; adc edi, dword ptr [ecx]; ret 0x6c74; 
0x0014fb08: add byte ptr [edi], cl; lahf; ret 0xd009; 
0x0018806d: add byte ptr [edi], cl; mov bh, 0x50; adc byte ptr [esi - 9], ah; ret 0x7f8; 
0x0004294a: add byte ptr [edi], cl; mov bh, 0xc9; bsr ecx, ecx; shl eax, cl; ret; 
0x0008b14f: add byte ptr [edi], cl; mov dh, 0; pop ebx; pop esi; pop edi; ret; 
0x0011338f: add byte ptr [edi], cl; mov dh, 0x10; test dl, dl; je 0x113364; pop ebx; ret; 
0x000f0bbf: add byte ptr [edi], cl; mov dh, 0x10; test dl, dl; je 0xf0b94; pop ebx; ret; 
0x000f36ff: add byte ptr [edi], cl; mov dh, 0x10; test dl, dl; je 0xf36d4; pop ebx; ret; 
0x000f44ff: add byte ptr [edi], cl; mov dh, 0x10; test dl, dl; je 0xf44d4; pop ebx; ret; 
0x000f702f: add byte ptr [edi], cl; mov dh, 0x10; test dl, dl; je 0xf7004; pop ebx; ret; 
0x000f7e3f: add byte ptr [edi], cl; mov dh, 0x10; test dl, dl; je 0xf7e14; pop ebx; ret; 
0x001a64c4: add byte ptr [edi], cl; mov dh, 0x12; sub eax, edx; ret; 
0x001089f7: add byte ptr [edi], cl; mov dh, 0x43; add al, 0x89; ret 0xe283; 
0x0010abe4: add byte ptr [edi], cl; mov dh, 0x45; sbb al, 0x89; ret 0xeac0; 
0x001a0b58: add byte ptr [edi], cl; mov dh, 0x48; add eax, 0x542b60f; sub eax, ecx; pop ebp; ret; 
0x0019f34f: add byte ptr [edi], cl; mov dh, 0x48; add eax, 0x542b60f; sub eax, ecx; ret; 
0x0019f35f: add byte ptr [edi], cl; mov dh, 0x48; push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x0015c877: add byte ptr [edi], cl; mov dh, 0x50; or dword ptr [ebx + 0x5e], ebx; and edx, 0xf; mov eax, edx; ret; 
0x000718d3: add byte ptr [edi], cl; mov dh, 0x54; xor ah, al; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x0005ee75: add byte ptr [edi], cl; mov dh, 0x57; or al, 0xf6; ret 0xf40; 
0x001417d7: add byte ptr [edi], cl; mov dh, 0x5a; add dword ptr [ebp - 0x76fde7bc], ecx; ret; 
0x0015e01f: add byte ptr [edi], cl; mov dh, 0x5a; or dh, dh; ret; 
0x001423ef: add byte ptr [edi], cl; mov dh, 0xc2; ret; 
0x00042869: add byte ptr [edi], cl; mov dh, 0xc9; bsr ecx, ecx; shl eax, cl; ret; 
0x001a0ab8: add byte ptr [edi], cl; mov dh, 8; movzx eax, byte ptr [edx]; sub eax, ecx; pop ebp; ret; 
0x0019f2ff: add byte ptr [edi], cl; mov dh, 8; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x00153a81: add byte ptr [edi], cl; mov dword ptr [0x8b9c72c2], eax; dec ebp; mov word ptr [ebp - 0x64e8b7f], cs; call dword ptr [eax - 0x73]; 
0x00097816: add byte ptr [edi], cl; mov dword ptr [0xe9ac73c2], eax; cmp dh, 0xff; dec dword ptr [ebp - 0x678e779]; call dword ptr [eax - 0x73]; 
0x00097f71: add byte ptr [edi], cl; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000c187f: add byte ptr [edi], cl; mov ebp, 0x30ea83c0; add edx, eax; jl 0xc18b0; lea eax, [ecx + eax + 0x10]; ret; 
0x000c186f: add byte ptr [edi], cl; mov ebp, 0x40ea83c0; add edx, eax; jl 0xc18b0; add eax, ecx; ret; 
0x000c1124: add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x00063128: add byte ptr [edi], cl; mov esi, 0x89c68900; ret 0x44c7; 
0x0006ef5b: add byte ptr [edi], cl; mov esi, 0x89c68900; ret; 
0x000c157f: add byte ptr [edi], cl; mov esp, 0x5ff801c0; ret; 
0x000c15af: add byte ptr [edi], cl; mov esp, 0x76c229c0; cmp dword ptr [ecx], eax; clc; pop edi; ret; 
0x000bd58f: add byte ptr [edi], cl; mov esp, 0x83ce01d2; ret 0x2910; 
0x000c08af: add byte ptr [edi], cl; mov esp, 0x9379e8d2; or al, 0; add ecx, 0x10c73c; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bd5af: add byte ptr [edi], cl; mov esp, 0xc679e8d2; or al, 0; add ecx, 0x10f9bc; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000488a7: add byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00115c7b: add byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc10c; 
0x000428fc: add byte ptr [edi], cl; movsd dword ptr es:[edi], dword ptr [esi]; ret 0xe0d3; 
0x00104e28: add byte ptr [edi], cl; sahf; ret 0xd201; 
0x000df7ab: add byte ptr [edi], cl; sahf; ret 0xd329; 
0x0005173f: add byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; aad 1; ret 0xd889; 
0x000c4eeb: add byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; ret 0x948b; 
0x000d2d84: add byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; ret; 
0x001a767e: add byte ptr [edi], cl; test ah, cl; add dword ptr [eax], eax; add byte ptr [ebx - 0x7bf0fb03], al; ret; 
0x001a622f: add byte ptr [edi], cl; test byte ptr [eax + eax - 0x127d0000], bl; or byte ptr [edi], cl; test byte ptr [ebx - 0x7d000000], dl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x001abc2f: add byte ptr [edi], cl; test byte ptr [eax + eax], bh; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x001abbdf: add byte ptr [edi], cl; test byte ptr [eax - 0x48000000], bh; or byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x0018775c: add byte ptr [edi], cl; test byte ptr [ebp - 0x77000000], cl; ret 0xe283; 
0x0010d2cc: add byte ptr [edi], cl; test byte ptr [ebp - 0x7d000000], ah; jmp dword ptr [esi]; 
0x000a2248: add byte ptr [edi], cl; test byte ptr [ecx - 0x7d000000], ch; in al, dx; add al, 0x8d; or dword ptr [eax + 0x42], 0xfffffff9; call dword ptr [eax + 0x56]; 
0x001a5f4a: add byte ptr [edi], cl; test byte ptr [edi - 0x7d000000], cl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x000b43c2: add byte ptr [edi], cl; test byte ptr [edi], al; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000965d4: add byte ptr [edi], cl; test byte ptr [edx - 0x72000002], bh; xchg byte ptr [eax], al; xchg ecx, edi; call dword ptr [eax + 0x68]; 
0x00187713: add byte ptr [edi], cl; test byte ptr [esi - 0x77000000], dh; ret 0xe283; 
0x001abb86: add byte ptr [edi], cl; test ch, bh; add byte ptr [eax], al; add byte ptr [eax + 4], bh; pop edi; ret; 
0x000b436c: add byte ptr [edi], cl; test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x001abbcc: add byte ptr [edi], cl; test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x0010e2ec: add byte ptr [edi], cl; test dword ptr [0xf7fffffd], edi; ret 0x67; 
0x001a6d2f: add byte ptr [edi], cl; test dword ptr [eax + 2], edx; add byte ptr [eax], al; pop ebx; ret; 
0x001a662f: add byte ptr [edi], cl; test dword ptr [eax + 9], edx; add byte ptr [eax], al; pop ebx; ret; 
0x00187335: add byte ptr [edi], cl; test dword ptr [eax + eax - 0x3b7d0000], ebp; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000a028c: add byte ptr [edi], cl; test dword ptr [eax + eax - 0x3b7d0000], ebx; and byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0012fe04: add byte ptr [edi], cl; test dword ptr [eax + eax - 0x3b7d0000], edx; and byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x001a80ec: add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000000], edi; ret; 
0x001a6dda: add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000001], esp; ret; 
0x001a6bfa: add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000003], eax; ret; 
0x001a66ca: add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000008], esi; ret; 
0x001a6a24: add byte ptr [edi], cl; test dword ptr [ebp + 5], eax; add byte ptr [eax], al; pop ebx; ret; 
0x00110d87: add byte ptr [edi], cl; test dword ptr [ebp - 0x74fffff1], esp; jl 0x110db5; or byte ptr [ebp - 0x65dfb79], cl; call dword ptr [eax + 0x68]; 
0x0015fd55: add byte ptr [edi], cl; test dword ptr [ebp - 0x74fffffe], esp; je 0x15fd83; adc byte ptr [ebp - 0x64ab37a], cl; call dword ptr [eax - 0x73]; 
0x0014c7d4: add byte ptr [edi], cl; test dword ptr [ebp - 0x7c000003], esp; ret; 
0x00123428: add byte ptr [edi], cl; test dword ptr [ebp - 0x7d000000], ecx; les ebx, ptr [eax]; mov eax, ebx; pop ebx; ret; 
0x001a67f6: add byte ptr [edi], cl; test dword ptr [ebx + 7], esi; add byte ptr [eax], al; pop ebx; ret; 
0x0010a699: add byte ptr [edi], cl; test dword ptr [ebx - 0x7c000006], esp; ret 0x8301; 
0x001782c5: add byte ptr [edi], cl; test dword ptr [ebx - 0x7f000000], ebx; les esp, ptr [eax + 0x5b000000]; pop esi; pop edi; ret; 
0x00090d42: add byte ptr [edi], cl; test dword ptr [ebx], esp; add dword ptr [eax], eax; add byte ptr [ecx + 0x94c4], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x001a68fe: add byte ptr [edi], cl; test dword ptr [ecx + 0x5b000006], eax; ret; 
0x001a8060: add byte ptr [edi], cl; test dword ptr [ecx + 1], ecx; add byte ptr [eax], al; pop ebx; ret; 
0x000c3b7a: add byte ptr [edi], cl; test dword ptr [ecx + eax], edx; add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x001a4a2e: add byte ptr [edi], cl; test dword ptr [ecx - 0x7cfffff2], ebp; std; adc byte ptr [ebp - 0x79f00f93], cl; call dword ptr [eax]; 
0x0016f6a3: add byte ptr [edi], cl; test dword ptr [ecx - 0x7d000000], ebx; les esi, ptr [ebx + ebx*2]; pop esi; ret; 
0x001a6873: add byte ptr [edi], cl; test dword ptr [edi + eax], ecx; add byte ptr [eax], al; pop ebx; ret; 
0x000e1fd8: add byte ptr [edi], cl; test dword ptr [edx - 0x7600000f], edx; ret 0xe283; 
0x0011f1ca: add byte ptr [edi], cl; test dword ptr [edx - 0x7d000000], ebp; les esp, ptr [ebx + ebx*2]; pop esi; ret; 
0x0017bae9: add byte ptr [edi], cl; test dword ptr [esi - 0x7d000000], ebp; les edx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0010e4a6: add byte ptr [edi], cl; test dword ptr [esi - 0x7d000000], esp; les ebp, ptr [eax + 0x5b]; ret; 
0x000416a1: add byte ptr [edi], cl; test eax, ebx; add byte ptr [eax], al; add dh, dh; ret 0xf03; 
0x0014fc04: add byte ptr [edi], cl; test ebp, eax; add al, byte ptr [eax]; add byte ptr [ebx + 0x1c895], cl; add bh, dh; ret 0; 
0x000d449e: add byte ptr [edi], cl; test ebp, edi; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x001a042a: add byte ptr [edi], cl; test ebp, edi; add eax, 0xfd830000; adc byte ptr [ebp - 0x79f00f93], cl; ret; 
0x0010df23: add byte ptr [edi], cl; test ebp, esi; add eax, dword ptr [eax]; add byte ptr [ebp - 0x65e477d], cl; call dword ptr [eax - 0x73]; 
0x0015f707: add byte ptr [edi], cl; test ebx, esi; or byte ptr [eax], al; add byte ptr [ebx - 0x72efdb84], cl; xchg dword ptr [ebp + esi*4 - 7], esi; call dword ptr [eax - 0x73]; 
0x0010e7ba: add byte ptr [edi], cl; test edx, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b64c4], al; ret; 
0x001a6fdf: add byte ptr [edi], cl; test edx, ebx; lodsd eax, dword ptr [esi]; int1; call dword ptr [ebx - 0x18]; 
0x00188bb6: add byte ptr [edi], cl; xchg ch, dl; add byte ptr [eax], al; add byte ptr [eax - 0x7af0cf06], al; ret; 
0x0007b29c: add byte ptr [edi], cl; xchg dword ptr [0x83000001], ecx; in al, dx; or byte ptr [ebp + 0x50082444], cl; push esi; call dword ptr [ebx + 0x48]; 
0x00089b99: add byte ptr [edi], cl; xchg dword ptr [eax + 0x6a000000], edi; add byte ptr [edi + 0x56], dl; push ebx; call dword ptr [ebp + 0x40]; 
0x0007e836: add byte ptr [edi], cl; xchg dword ptr [eax + eax - 0x137d0000], edx; or al, 0x56; call dword ptr [ebx + 0x34]; 
0x0007cb95: add byte ptr [edi], cl; xchg dword ptr [ecx + eax], edx; add byte ptr [ebx - 0xa8fb14], al; jne 0x7cbab; push esi; call dword ptr [ebx + 0x1c]; 
0x0008b7c8: add byte ptr [edi], cl; xchg dword ptr [ecx - 0x7d000000], ebp; in al, dx; or al, 0x56; call dword ptr [ebp + 0x30]; 
0x0007b425: add byte ptr [edi], cl; xchg dword ptr [edx + eax], esp; add byte ptr [ebx + 0x6a08ec], al; push esi; call dword ptr [ebx + 8]; 
0x0008a139: add byte ptr [edi], cl; xchg eax, edi; add byte ptr [eax], al; add byte ptr [ebx + 0x555004ec], al; push esi; call dword ptr [ebx + 0x38]; 
0x0008ba02: add byte ptr [edi], cl; xchg ebp, eax; ret 0x40c7; 
0x0015c88f: add byte ptr [edi], cl; xchg ebp, eax; ret 0x548d; 
0x000db1cc: add byte ptr [edi], cl; xchg ebp, eax; ret 0xc238; 
0x000fef34: add byte ptr [edi], cl; xchg ebp, eax; ret 0xd201; 
0x000983dc: add byte ptr [edi], cl; xchg ebp, eax; ret 0xe2c1; 
0x0004728e: add byte ptr [edi], cl; xchg ebp, eax; ret 0xea81; 
0x0004a887: add byte ptr [edi], cl; xchg ebp, eax; ret 0xea83; 
0x0005ce6c: add byte ptr [edi], cl; xchg ebp, eax; ret; 
0x000fd3b8: add byte ptr [edi], cl; xchg ebp, eax; rol byte ptr [ebx - 0x3ffefb3c], 0x5b; pop esi; ret; 
0x00055afa: add byte ptr [edi], cl; xchg ebp, eax; ror byte ptr [edi], 0x95; ret; 
0x0018b22a: add byte ptr [edi], cl; xchg edi, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x575504ec], al; push ebx; call dword ptr [esi + 0x3c]; 
0x000dece1: add byte ptr [edi], cl; xchg edx, eax; ret 0xc281; 
0x0008628f: add byte ptr [edi], cl; xchg edx, ebp; add dword ptr [eax], eax; add byte ptr [ebx - 0x137c3bbb], cl; or al, 0x56; call dword ptr [eax + 0x30]; 
0x000e165d: add byte ptr [edi], cl; xchg esi, eax; ret 0xc931; 
0x00045215: add byte ptr [edi], cl; xchg esp, eax; ret 0x44c7; 
0x00045fdb: add byte ptr [edi], cl; xchg esp, eax; ret 0x7c83; 
0x00083bfc: add byte ptr [edi], cl; xchg esp, eax; ret 0x9e3b; 
0x0007b488: add byte ptr [edi], cl; xchg esp, eax; ret 0xd008; 
0x0007b467: add byte ptr [edi], cl; xchg esp, eax; ret 0xd009; 
0x0003c5d0: add byte ptr [edi], cl; xchg esp, eax; ret 0xec83; 
0x00091889: add byte ptr [edi], cl; xchg esp, eax; ret; 
0x0018b385: add byte ptr [edi], cl; xchg esp, eax; sar byte ptr [ebx], 0x9e; push 0xf000001; xchg esp, eax; ret 0xd008; 
0x0018a11d: add byte ptr [edi], cl; xchg esp, edi; add dword ptr [eax], eax; add byte ptr [ebx + 0x6a08ec], al; push esi; call dword ptr [ebx + 8]; 
0x000dda67: add byte ptr [edi], cl; xor byte ptr [ebp - 1], 0xff; call dword ptr [edi - 0x75]; 
0x000fb192: add byte ptr [edx + 0x20], bh; cmovne eax, edx; ret; 
0x000fb1aa: add byte ptr [edx + 0x40], bh; cmove eax, edx; ret; 
0x0002823c: add byte ptr [edx + 0x50], dl; call 0x982f0; add esp, 0x1c; ret; 
0x00083242: add byte ptr [edx + 0x50], dl; push esi; call dword ptr [ebx + 0x40]; 
0x00089689: add byte ptr [edx + 0x50], dl; push esi; call dword ptr [ecx + 0x40]; 
0x001775cc: add byte ptr [edx + 0x57], dl; call dword ptr [eax + 4]; 
0x0016ee79: add byte ptr [edx + 0x59], bl; push 0; push esi; call dword ptr [eax + 0x14]; 
0x000c32a9: add byte ptr [edx + 0x59], bl; push ebx; push dword ptr [edi]; call esi; 
0x000b995f: add byte ptr [edx + 0x5f178816], cl; pop esi; pop ebx; ret; 
0x0012523d: add byte ptr [edx + 0x64], bh; mov eax, dword ptr [eax + 0x108]; mov eax, dword ptr [eax + 0x20]; test eax, eax; cmove eax, edx; ret; 
0x0016f7d0: add byte ptr [edx + 0x6a], dl; add al, 0x53; call dword ptr [eax]; 
0x000910a5: add byte ptr [edx + 0x7fffffff], bh; call dword ptr gs:[0x10]; 
0x00098471: add byte ptr [edx + 0x7fffffff], bh; setne cl; shl ecx, 7; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00099679: add byte ptr [edx + 0x7fffffff], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009683c: add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00098863: add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00091930: add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x001a64bf: add byte ptr [edx + 0xe], dh; movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x0018a664: add byte ptr [edx + 0xf], dh; xchg esp, eax; ret; 
0x0008f820: add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x00186dea: add byte ptr [edx + 1], bh; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00086827: add byte ptr [edx + 1], bh; mov eax, edx; ret; 
0x00092f0b: add byte ptr [edx + 1], bh; mov ebx, edi; call dword ptr gs:[0x10]; 
0x00122d3d: add byte ptr [edx + 1], bh; mov edi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00152ba7: add byte ptr [edx + 1], bh; pop ebx; pop esi; mov eax, edx; ret; 
0x0008f2de: add byte ptr [edx + 1], bh; push ebx; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00091c0b: add byte ptr [edx + 1], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00097a06: add byte ptr [edx + 1], bh; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00091347: add byte ptr [edx + 1], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x0009180c: add byte ptr [edx + 1], bh; xor esi, esi; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x00091675: add byte ptr [edx + 1], bh; xor esi, esi; mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00098839: add byte ptr [edx + 1], bh; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000899d3: add byte ptr [edx + 1], ch; push 0; push 0; push esi; call dword ptr [eax + 0x40]; 
0x00083813: add byte ptr [edx + 1], ch; push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x00085578: add byte ptr [edx + 1], ch; push 0; push dword ptr [esp + 0x1c]; call 0x7e620; add esp, 0x1c; ret; 
0x0009b4d8: add byte ptr [edx + 1], ch; push eax; call 0x8efe0; add esp, 0x2c; ret; 
0x0008f222: add byte ptr [edx + 2], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008f291: add byte ptr [edx + 2], bh; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x000835ca: add byte ptr [edx + 2], ch; push 0; push 0; push esi; call dword ptr [edi + 0x40]; 
0x00134021: add byte ptr [edx + 8], bh; call dword ptr gs:[0x10]; 
0x0007d608: add byte ptr [edx + ebx], 0; ret; 
0x00152191: add byte ptr [edx + ecx - 0x7d], dh; inc eax; or byte ptr [ecx], al; je 0x1521bd; add esp, 0xc; ret; 
0x000fb2cd: add byte ptr [edx + esi*8 + 0x31], dh; rol byte ptr [ecx + 0xadf5fa], 0; setne al; ret; 
0x0013c0df: add byte ptr [edx - 0x73], dl; xchg esi, eax; lodsb al, byte ptr [esi]; shr edi, 1; call dword ptr [edx - 0x3f]; 
0x000b16af: add byte ptr [edx - 0x76fd77ff], cl; clc; pop edi; ret; 
0x0008df9f: add byte ptr [edx - 0x77], dl; ret; 
0x001a5e24: add byte ptr [edx - 1], bh; cmovbe eax, edx; pop esi; pop ebp; pop ebx; ret; 
0x00152b97: add byte ptr [edx - 1], bh; mov eax, edx; pop ebx; pop esi; ret; 
0x000322e9: add byte ptr [edx - 3], 0xff; jmp dword ptr [esi - 0x70]; 
0x000c2632: add byte ptr [edx - 9], al; ret 3; 
0x0002c524: add byte ptr [edx], 0; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], ch; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x000490ad: add byte ptr [edx], 0; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x20e9; 
0x0004838d: add byte ptr [edx], 0; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x8d2e; 
0x000fae09: add byte ptr [edx], 0x48; stc; call dword ptr [eax + 0x53]; 
0x000fae66: add byte ptr [edx], 0x48; stc; call dword ptr [eax - 1]; 
0x00156288: add byte ptr [edx], 0x5e; stc; call dword ptr [eax - 0x18]; 
0x00156288: add byte ptr [edx], 0x5e; stc; call dword ptr [eax - 0x18]; fstp st(5); in eax, dx; jmp dword ptr [esi - 0x70]; 
0x00173c08: add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [0xac], al; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x0017a2a3: add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebp - 0xc49e37d], cl; call dword ptr [eax - 0x73]; 
0x001748e3: add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebp - 0xca3737d], cl; call dword ptr [eax - 0x73]; 
0x000348f1: add byte ptr [edx], al; add byte ptr [eax], al; mov dword ptr [eax + ebx], edx; pop ebx; pop esi; ret; 
0x000b35fc: add byte ptr [edx], al; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000343e7: add byte ptr [edx], al; add byte ptr [eax], al; ret; 
0x001374a4: add byte ptr [edx], al; call dword ptr [ebp + 0x14]; 
0x0013821d: add byte ptr [edx], al; call dword ptr [ebx + 0x14]; 
0x001376ee: add byte ptr [edx], al; call eax; 
0x001375a7: add byte ptr [edx], al; push eax; call dword ptr [ebp + 0x14]; 
0x0009c30e: add byte ptr [edx], al; ret; 
0x0010c348: add byte ptr [edx], ch; call 0x10c310; add esp, 0x1c; ret; 
0x000c4ab1: add byte ptr [edx], ch; lea ecx, [esp + 0x44]; push ecx; push dword ptr [edi + 8]; call ebx; 
0x000c4aaf: add byte ptr [edx], ch; push 0; lea ecx, [esp + 0x44]; push ecx; push dword ptr [edi + 8]; call ebx; 
0x00128998: add byte ptr [edx], ch; push 0; push dword ptr [esp + 0x1c]; call 0x616b0; add esp, 0x1c; ret; 
0x00025daf: add byte ptr [edx], ch; push 0; push eax; push dword ptr [ebx + 4]; call edi; 
0x0009b847: add byte ptr [edx], ch; push 1; push eax; call 0x8efe0; add esp, 0x2c; ret; 
0x00178d34: add byte ptr [edx], ch; push dword ptr [esp + 0x1c]; call 0x178ba0; add esp, 0x10; add esp, 0xc; ret; 
0x0012899a: add byte ptr [edx], ch; push dword ptr [esp + 0x1c]; call 0x616b0; add esp, 0x1c; ret; 
0x00034e8e: add byte ptr [edx], ch; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x35b80; add esp, 0x2c; ret; 
0x00094baa: add byte ptr [edx], ch; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x94be0; add esp, 0x2c; ret; 
0x0018be99: add byte ptr [edx], ch; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x30]; push esi; call dword ptr [ebx + 0x40]; 
0x00025db1: add byte ptr [edx], ch; push eax; push dword ptr [ebx + 4]; call edi; 
0x0007b8df: add byte ptr [edx], ch; push ebp; call dword ptr [esi + 0x40]; 
0x00088b64: add byte ptr [edx], ch; push ebx; call dword ptr [eax + 0x24]; 
0x0018b4ee: add byte ptr [edx], ch; push ebx; call dword ptr [edi + 0x24]; 
0x000884e9: add byte ptr [edx], ch; push ebx; call dword ptr [esi + 0x40]; 
0x0008d771: add byte ptr [edx], ch; push ecx; push edx; call 0x184e00; add esp, 0x1c; ret; 
0x0017a9c0: add byte ptr [edx], ch; push edi; call dword ptr [eax + 0x14]; 
0x00089b9f: add byte ptr [edx], ch; push edi; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x00083240: add byte ptr [edx], ch; push edx; push eax; push esi; call dword ptr [ebx + 0x40]; 
0x00089687: add byte ptr [edx], ch; push edx; push eax; push esi; call dword ptr [ecx + 0x40]; 
0x00170e90: add byte ptr [edx], ch; push esi; call dword ptr [eax + 0x14]; 
0x000899d7: add byte ptr [edx], ch; push esi; call dword ptr [eax + 0x40]; 
0x0008c74d: add byte ptr [edx], ch; push esi; call dword ptr [ebp + 0x2c]; 
0x00083817: add byte ptr [edx], ch; push esi; call dword ptr [ebx + 0x40]; 
0x000835ce: add byte ptr [edx], ch; push esi; call dword ptr [edi + 0x40]; 
0x0009815e: add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x75]; pop esp; and al, 0x10; mov dword ptr [ebx], 0; call dword ptr gs:[0x10]; 
0x0012fb59: add byte ptr [esi + 0x53], dl; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00123106: add byte ptr [esi + 0x53], dl; xor ebx, ebx; mov ecx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x001a0bff: add byte ptr [esi + 0x5f], bl; pop ebx; pop ebp; xor eax, eax; ret; 
0x00053c5c: add byte ptr [esi + 0x5f], bl; ret; 
0x00178e98: add byte ptr [esi + 0xd], bh; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x000b59df: add byte ptr [esi + 0xf], ah; adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x000b161f: add byte ptr [esi + 0xf], ah; adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000b183f: add byte ptr [esi + 0xf], ah; adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000b371f: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x000b372f: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x000b370f: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000b373f: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x000b374f: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000b375f: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000b376f: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x000b9d5f: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [edi - 1]; pop edi; pop esi; pop ebx; ret; 
0x000b9d6f: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [edi]; pop edi; pop esi; pop ebx; ret; 
0x000c0ccf: add byte ptr [esi + 0xf], ah; adc ebx, dword ptr [eax + 0xe]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd84c: add byte ptr [esi + 0xf], ah; adc ebx, dword ptr [eax + 0xe]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0cef: add byte ptr [esi + 0xf], ah; adc ebx, dword ptr [eax + 0xf]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd86c: add byte ptr [esi + 0xf], ah; adc ebx, dword ptr [eax + 0xf]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0baf: add byte ptr [esi + 0xf], ah; adc ecx, dword ptr [eax + 5]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd73c: add byte ptr [esi + 0xf], ah; adc ecx, dword ptr [eax + 5]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0bcf: add byte ptr [esi + 0xf], ah; adc ecx, dword ptr [eax + 6]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd75c: add byte ptr [esi + 0xf], ah; adc ecx, dword ptr [eax + 6]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0bef: add byte ptr [esi + 0xf], ah; adc ecx, dword ptr [eax + 7]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd77c: add byte ptr [esi + 0xf], ah; adc ecx, dword ptr [eax + 7]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bd8ac: add byte ptr [esi + 0xf], ah; adc edx, dword ptr [eax + 0x10]; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bd8ef: add byte ptr [esi + 0xf], ah; adc edx, dword ptr [eax + 0x10]; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bd90f: add byte ptr [esi + 0xf], ah; adc edx, dword ptr [eax + 0x10]; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0d0f: add byte ptr [esi + 0xf], ah; adc edx, dword ptr [eax + 0x10]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd88c: add byte ptr [esi + 0xf], ah; adc edx, dword ptr [eax + 0x10]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bd8d0: add byte ptr [esi + 0xf], ah; adc edx, dword ptr [eax + 0x10]; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x001a7b8f: add byte ptr [esi + 0xf], ah; cmp ah, byte ptr [ebx - 0x35]; add cl, byte ptr [edi]; xchg esp, eax; ret; 
0x000c181d: add byte ptr [esi + 0xf], ah; je 0xc186b; and byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x316575c0], 0xc0; ret; 
0x001932ef: add byte ptr [esi + 0xf], ah; outsb dx, byte ptr [esi]; shl byte ptr [esi + 0xf], 0x70; rol byte ptr [eax], 0xf7; ret 0xf; 
0x00196a3b: add byte ptr [esi + 0xf], ah; salc; add cl, byte ptr [ebx + 0x5b082444]; ret; 
0x000c1491: add byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x000c176a: add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000c178f: add byte ptr [esi + 0xf], ah; xlatb; ror dword ptr [edi], 0xbd; rol byte ptr [ecx], 0xc8; ret; 
0x000a08d9: add byte ptr [esi + 4], dh; ret; 
0x00092d19: add byte ptr [esi + 8], bh; add ecx, 0x474; call dword ptr gs:[0x10]; 
0x00093f31: add byte ptr [esi + 8], bh; call dword ptr gs:[0x10]; 
0x0003c7f0: add byte ptr [esi + 8], bh; lea edx, [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x0009356d: add byte ptr [esi + 8], bh; mov byte ptr [esp + 0x47], 0; mov dword ptr [esp + 8], edx; call dword ptr gs:[0x10]; 
0x00023275: add byte ptr [esi + 8], bh; mov dword ptr [ebp + 0x137c], 1; call dword ptr gs:[0x10]; 
0x0003d596: add byte ptr [esi + 8], bh; mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x0003c893: add byte ptr [esi + 8], bh; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0014abea: add byte ptr [esi + eax - 0x80], dh; js 0x14abf1; sub eax, 0x8beb0574; lea esi, [esi]; xor eax, eax; ret; 
0x000fb291: add byte ptr [esi + ebp + 0x31], dh; rol byte ptr [ecx - 0x52053106], 0x1b; setne al; ret; 
0x0014f0cb: add byte ptr [esi - 0x18], dl; push cs; ret; 
0x00147556: add byte ptr [esi - 0x18], dl; ret; 
0x00156b87: add byte ptr [esi - 0x18], dl; wait; xor byte ptr [ebx], al; add byte ptr [ecx + 0xe8286c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x0015e7d8: add byte ptr [esi - 0x3f], ah; ret 0xf08; 
0x0005abed: add byte ptr [esi - 0x70], ah; add dword ptr [edx + 4], 1; add esp, 4; pop ebx; pop esi; ret; 
0x0013e4dd: add byte ptr [esi - 0x70], ah; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x00170e4d: add byte ptr [esi - 0x70], ah; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x000c1cdd: add byte ptr [esi - 0x70], ah; bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x000c183d: add byte ptr [esi - 0x70], ah; bsr eax, eax; lea eax, [eax + ecx + 0x10]; ret; 
0x0002609d: add byte ptr [esi - 0x70], ah; endbr32; call 0x189c25; add eax, 0x218d6b; mov eax, dword ptr [eax + 0x10b8]; ret; 
0x001897ad: add byte ptr [esi - 0x70], ah; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x0016eaed: add byte ptr [esi - 0x70], ah; endbr32; ret; 
0x000ba2cd: add byte ptr [esi - 0x70], ah; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; pop edi; ret; 
0x000b17cd: add byte ptr [esi - 0x70], ah; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x0009af3d: add byte ptr [esi - 0x70], ah; mov dword ptr [eax + 4], edx; ret; 
0x0007188d: add byte ptr [esi - 0x70], ah; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x28], 1; jmp eax; 
0x00090c4d: add byte ptr [esi - 0x70], ah; mov eax, 0x16; ret; 
0x0010c4bd: add byte ptr [esi - 0x70], ah; mov eax, 0x42; call dword ptr gs:[0x10]; 
0x00086a3d: add byte ptr [esi - 0x70], ah; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x001a0bed: add byte ptr [esi - 0x70], ah; mov eax, 1; ja 0x1a0bf9; neg eax; pop ebp; ret; 
0x001a62dd: add byte ptr [esi - 0x70], ah; mov eax, 1; ja 0x1a62e9; neg eax; pop ebp; ret; 
0x000d99fd: add byte ptr [esi - 0x70], ah; mov eax, 2; ret; 
0x0009418d: add byte ptr [esi - 0x70], ah; mov eax, 3; add esp, 0xc; ret; 
0x000d9a0d: add byte ptr [esi - 0x70], ah; mov eax, 3; ret; 
0x000d9a1d: add byte ptr [esi - 0x70], ah; mov eax, 4; ret; 
0x000d9a2d: add byte ptr [esi - 0x70], ah; mov eax, 5; ret; 
0x000d9a3d: add byte ptr [esi - 0x70], ah; mov eax, 6; ret; 
0x000d9a4d: add byte ptr [esi - 0x70], ah; mov eax, 7; ret; 
0x0017c6fd: add byte ptr [esi - 0x70], ah; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x20]; 
0x0017140d: add byte ptr [esi - 0x70], ah; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0009090d: add byte ptr [esi - 0x70], ah; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x14], edx; xor eax, eax; ret; 
0x0005b72d: add byte ptr [esi - 0x70], ah; mov eax, edx; call 0x5b4d0; mov eax, 1; add esp, 0xc; ret; 
0x000790dd: add byte ptr [esi - 0x70], ah; mov eax, edx; call 0x78e40; mov eax, 1; add esp, 0xc; ret; 
0x0010d59d: add byte ptr [esi - 0x70], ah; mov ebx, dword ptr [ebx + 4]; xor edx, edx; mov eax, 0x1b4; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x00121cfd: add byte ptr [esi - 0x70], ah; mov ebx, dword ptr [esp + 0x20]; lea edx, [esp + 4]; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x0009133d: add byte ptr [esi - 0x70], ah; mov ebx, dword ptr [esp]; mov eax, 0xf0; mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x000e763d: add byte ptr [esi - 0x70], ah; mov edx, dword ptr [esp + 0xc]; mov dword ptr [edx], ebx; pop ebx; ret; 
0x0010c30d: add byte ptr [esi - 0x70], ah; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x000b9d0d: add byte ptr [esi - 0x70], ah; mov word ptr [edi], dx; pop edi; pop esi; pop ebx; ret; 
0x000b5d0d: add byte ptr [esi - 0x70], ah; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b36fd: add byte ptr [esi - 0x70], ah; movlpd qword ptr [ecx], xmm0; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x0009c29b: add byte ptr [esi - 0x70], ah; nop; endbr32; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0009c29b: add byte ptr [esi - 0x70], ah; nop; endbr32; mov eax, 0x9e; call dword ptr gs:[0x10]; ret; 
0x0003b8db: add byte ptr [esi - 0x70], ah; nop; endbr32; mov eax, dword ptr [esp + 0x10]; and eax, 0x80000000; ret; 
0x00098a1b: add byte ptr [esi - 0x70], ah; nop; endbr32; nop; xor eax, eax; ret; 
0x0009a57b: add byte ptr [esi - 0x70], ah; nop; endbr32; xor eax, eax; ret; 
0x000efa5b: add byte ptr [esi - 0x70], ah; nop; mov eax, 0xca; call dword ptr gs:[0x10]; 
0x000efa5b: add byte ptr [esi - 0x70], ah; nop; mov eax, 0xca; call dword ptr gs:[0x10]; ret; 
0x0012d82b: add byte ptr [esi - 0x70], ah; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x001a986d: add byte ptr [esi - 0x70], ah; pop ebx; mov eax, 1; ja 0x1a987a; neg eax; ret; 
0x001a7e6d: add byte ptr [esi - 0x70], ah; pop ebx; xor eax, eax; ret; 
0x000e9abd: add byte ptr [esi - 0x70], ah; sub esp, 0xc; mov eax, dword ptr [ebp - 0x2c]; push esi; call eax; 
0x000f137d: add byte ptr [esi - 0x70], ah; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5b4]; call dword ptr [eax + 0x14]; 
0x000f85fd: add byte ptr [esi - 0x70], ah; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5d0]; push dword ptr [ebp - 0x5c4]; call dword ptr [eax + 0x14]; 
0x00042abd: add byte ptr [esi - 0x70], ah; xor eax, eax; pop ebx; ret; 
0x000a237d: add byte ptr [esi - 0x70], ah; xor eax, eax; ret; 
0x000bd62f: add byte ptr [esi - 0x75], ah; push ss; mov word ptr [eax], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00170271: add byte ptr [esi - 0x75], dl; jl 0x17029a; dec esp; push edi; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x000c0c4e: add byte ptr [esi - 0x77], ah; dec eax; adc byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000bd7cb: add byte ptr [esi - 0x77], ah; dec eax; adc byte ptr [ebx + 0x5e082444], cl; ret; 
0x000c0b4e: add byte ptr [esi - 0x77], ah; push eax; or byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000bd6db: add byte ptr [esi - 0x77], ah; push eax; or byte ptr [ebx + 0x5e082444], cl; ret; 
0x00122e8c: add byte ptr [esi - 0x77], ah; push eax; push ss; ret; 
0x000760fa: add byte ptr [esi - 0x77], ah; xor cl, ch; ret; 
0x0009cf6f: add byte ptr [esi - 0x77], dl; rcl dword ptr [ebx - 0x75], 0x40; add al, 0xe8; mov eax, dword ptr [0x81000ecc]; ret; 
0x001ac567: add byte ptr [esi - 0x77], dl; ret 0x348d; 
0x001ac507: add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x0004a5c8: add byte ptr [esi - 0x7b], ah; ror byte ptr [edi], cl; xchg ebp, eax; ret 0xb60f; 
0x0015c7ca: add byte ptr [esi - 0x7d], ah; stc; add dh, byte ptr [edi + ecx - 0x77]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x001405a7: add byte ptr [esi - 0x7d], ah; sti; adc al, 0xf; xchg esp, eax; ret; 
0x001873b6: add byte ptr [esi - 0x7d], dl; ret; 
0x000dfa69: add byte ptr [esi - 0x7f], ah; out 4, al; add al, 0x66; cmp esi, 0x840f0400; mov edi, 0xf600001d; ret; 
0x0003064b: add byte ptr [esi - 7], al; call dword ptr [eax - 0x18]; 
0x00039f02: add byte ptr [esi - 7], al; dec dword ptr [edi]; inc ebp; call 0x2b6f6; jmp dword ptr [esi - 0x70]; 
0x00039e21: add byte ptr [esi - 7], al; inc dword ptr [ebx - 0x7c72f314]; shr dword ptr [esi], 1; stc; call dword ptr [eax - 0x18]; 
0x000b979a: add byte ptr [esi], 0; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00121a16: add byte ptr [esi], 0; add edx, 0x11d3fb; push ebx; mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001a9b5a: add byte ptr [esi], ch; lea esi, [esi]; add eax, 1; ret; 
0x001ac48a: add byte ptr [esi], ch; lea esi, [esi]; lea eax, [ecx + 8]; ret; 
0x001ab51a: add byte ptr [esi], ch; lea esi, [esi]; lea eax, [edx + 1]; ret; 
0x001abcf1: add byte ptr [esi], ch; lea esi, [esi]; lea esi, [esi]; xor eax, eax; ret; 
0x001a5fea: add byte ptr [esi], ch; lea esi, [esi]; mov eax, 1; ja 0x1a5ff9; neg eax; ret; 
0x000d99ea: add byte ptr [esi], ch; lea esi, [esi]; mov eax, 1; ret; 
0x00092eda: add byte ptr [esi], ch; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x000b366a: add byte ptr [esi], ch; lea esi, [esi]; pop ebx; ret; 
0x00179daa: add byte ptr [esi], ch; lea esi, [esi]; sub esp, 0xc; mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 4]; 
0x000d97ba: add byte ptr [esi], ch; lea esi, [esi]; xor eax, eax; pop edi; pop esi; ret; 
0x000c130a: add byte ptr [esi], ch; lea esi, [esi]; xor eax, eax; ret; 
0x001b2f5f: add byte ptr [esi], cl; cmp eax, 0x840f0400; sbb eax, 0x66000005; cmp eax, 0x840f0800; ret; 
0x00099db1: add byte ptr [esp + eax*2 - 0x75], dh; je 0x99ddb; adc al, 0x89; ret 0xe283; 
0x001abc67: add byte ptr [esp + ebx*2 - 0x48], dh; adc byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x00099eb1: add byte ptr [esp + ecx*2 - 0x75], dh; je 0x99edb; adc al, 0x89; ret 0xe283; 
0x000dd014: add byte ptr ds:[eax], al; cmp eax, 1; jg 0xdd040; add esp, 8; pop ebx; ret; 
0x000e1fd7: add byte ptr ds:[edi], cl; test dword ptr [edx - 0x7600000f], edx; ret 0xe283; 
0x0009a6ee: add byte ptr es:[eax + 0x10], bh; add esp, 0xc; ret; 
0x0012e386: add byte ptr es:[eax + 0x11c], bh; mov ebx, 3; mov ecx, 0x7fffffff; mov esi, 5; call dword ptr gs:[0x10]; 
0x000909fe: add byte ptr es:[eax + 0x16], bh; pop ebx; ret; 
0x000bcf9e: add byte ptr es:[eax + 0x18b047a], cl; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x000fb226: add byte ptr es:[eax + 0x40], bh; ret; 
0x000b9cfe: add byte ptr es:[eax + 0x5b5e5f17], cl; ret; 
0x000dec3e: add byte ptr es:[eax + 0x68], bh; mov edx, esi; call dword ptr gs:[0x10]; 
0x00091806: add byte ptr es:[eax + 0xf0], bh; mov edx, 1; xor esi, esi; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x0019f3ae: add byte ptr es:[eax + 1], bh; ja 0x19f3b9; neg eax; ret; 
0x001a5fee: add byte ptr es:[eax + 1], bh; ja 0x1a5ff9; neg eax; ret; 
0x000d99ee: add byte ptr es:[eax + 1], bh; ret; 
0x0004291e: add byte ptr es:[eax + 1], bh; xor edx, edx; pop ebx; ret; 
0x0014044e: add byte ptr es:[eax + 6], bh; call dword ptr gs:[0x10]; 
0x001ac45e: add byte ptr es:[eax + eax*8 + 0x1a80c74], al; jne 0x1ac480; lea eax, [ecx + 4]; ret; 
0x0006094e: add byte ptr es:[eax - 0x73], dl; sub dword ptr [edi + 0x53], -7; call dword ptr [eax + 0x6a]; 
0x0014d966: add byte ptr es:[eax - 1], bh; pop ebx; pop esi; ret; 
0x00082056: add byte ptr es:[eax - 1], bh; ret; 
0x001168d7: add byte ptr es:[eax], al; add bl, dl; call 0x29134964; ret; 
0x00118387: add byte ptr es:[eax], al; add bl, dl; call 0x29136414; ret; 
0x00119e27: add byte ptr es:[eax], al; add bl, dl; call 0x29137eb4; ret; 
0x0003d26e: add byte ptr es:[eax], al; add byte ptr [eax - 1], bh; ret; 
0x001abc7b: add byte ptr es:[eax], al; add byte ptr [eax], al; add eax, 1; pop edi; ret; 
0x001ab17b: add byte ptr es:[eax], al; add byte ptr [eax], al; add edx, 0xa; jl 0x1ab1d0; lea eax, [ecx + 0xa]; ret; 
0x001ab18b: add byte ptr es:[eax], al; add byte ptr [eax], al; add edx, 0xb; jl 0x1ab1d0; lea eax, [ecx + 0xb]; ret; 
0x001ab19b: add byte ptr es:[eax], al; add byte ptr [eax], al; add edx, 0xd; jl 0x1ab1d0; lea eax, [ecx + 0xd]; ret; 
0x001ab1ab: add byte ptr es:[eax], al; add byte ptr [eax], al; add edx, 0xe; jl 0x1ab1d0; lea eax, [ecx + 0xe]; ret; 
0x001ab1bb: add byte ptr es:[eax], al; add byte ptr [eax], al; add edx, 0xf; jl 0x1ab1d0; lea eax, [ecx + 0xf]; ret; 
0x001ab10b: add byte ptr es:[eax], al; add byte ptr [eax], al; add edx, 1; jl 0x1ab1d0; lea eax, [ecx + 1]; ret; 
0x001ab15b: add byte ptr es:[eax], al; add byte ptr [eax], al; add edx, 7; jl 0x1ab1d0; lea eax, [ecx + 7]; ret; 
0x001ab16b: add byte ptr es:[eax], al; add byte ptr [eax], al; add edx, 9; jl 0x1ab1d0; lea eax, [ecx + 9]; ret; 
0x0002608b: add byte ptr es:[eax], al; add byte ptr [eax], al; add esp, 4; pop ebx; pop esi; ret; 
0x000971eb: add byte ptr es:[eax], al; add byte ptr [eax], al; add esp, 8; mov eax, 0x16; pop ebx; ret; 
0x0005bcfb: add byte ptr es:[eax], al; add byte ptr [eax], al; add esp, 8; mov eax, 0xffffffff; pop ebx; ret; 
0x0010cc5b: add byte ptr es:[eax], al; add byte ptr [eax], al; add esp, 8; xor eax, eax; pop ebx; ret; 
0x001420db: add byte ptr es:[eax], al; add byte ptr [eax], al; and eax, 0xffffff; ret; 
0x000c157b: add byte ptr es:[eax], al; add byte ptr [eax], al; bsf eax, eax; add eax, edi; pop edi; ret; 
0x000c1ccb: add byte ptr es:[eax], al; add byte ptr [eax], al; bsf eax, eax; add eax, edx; ret; 
0x000c159b: add byte ptr es:[eax], al; add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edi + 0x20]; pop edi; ret; 
0x000c1ceb: add byte ptr es:[eax], al; add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edx + 0x20]; ret; 
0x000c184b: add byte ptr es:[eax], al; add byte ptr [eax], al; bsr eax, eax; lea eax, [eax + ecx + 0x20]; ret; 
0x000c185b: add byte ptr es:[eax], al; add byte ptr [eax], al; bsr eax, eax; lea eax, [eax + ecx + 0x30]; ret; 
0x0009806b: add byte ptr es:[eax], al; add byte ptr [eax], al; cmp edx, 1; je 0x98080; mov eax, 0x16; ret; 
0x00192b8b: add byte ptr es:[eax], al; add byte ptr [eax], al; endbr32; mov eax, 0xffffffff; ret; 
0x0017b8bb: add byte ptr es:[eax], al; add byte ptr [eax], al; endbr32; mov eax, 1; ret; 
0x0018984b: add byte ptr es:[eax], al; add byte ptr [eax], al; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x0008bbab: add byte ptr es:[eax], al; add byte ptr [eax], al; endbr32; xor eax, eax; ret; 
0x000ea11b: add byte ptr es:[eax], al; add byte ptr [eax], al; hlt; mov eax, edx; call dword ptr gs:[0x10]; 
0x001abc74: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; add eax, 1; pop edi; ret; 
0x000d99c7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; add eax, 3; ret; 
0x000a69e8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; endbr32; mov eax, 0xffffffff; ret; 
0x0016eaf8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; endbr32; mov eax, 1; ret; 
0x0008ecf8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; endbr32; ret; 
0x0008bba4: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; endbr32; xor eax, eax; ret; 
0x001aaf27: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xa]; ret; 
0x001aaf37: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xb]; ret; 
0x001aaf47: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xd]; ret; 
0x001aaf57: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xe]; ret; 
0x001aaf67: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xf]; ret; 
0x001aaec7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 2]; ret; 
0x001aaed7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 3]; ret; 
0x001aaee7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 5]; ret; 
0x001aaef7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 6]; ret; 
0x001aaf07: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 7]; ret; 
0x001ac445: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 8]; ret; 
0x001aaf17: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 9]; ret; 
0x001a9f18: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xa]; pop edi; ret; 
0x001a9f28: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xb]; pop edi; ret; 
0x001a9f38: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xc]; pop edi; ret; 
0x001a9f48: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xd]; pop edi; ret; 
0x001a9f58: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xe]; pop edi; ret; 
0x001a9e97: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 1]; pop edi; ret; 
0x001a9ea8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 2]; pop edi; ret; 
0x001a9eb8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 3]; pop edi; ret; 
0x001a9ec8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 4]; pop edi; ret; 
0x001a9ed8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 5]; pop edi; ret; 
0x001a9ee8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 6]; pop edi; ret; 
0x001a9ef8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 8]; pop edi; ret; 
0x001a9f08: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 9]; pop edi; ret; 
0x001aa378: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xa]; pop edi; ret; 
0x001aa368: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xb]; pop edi; ret; 
0x001aa358: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xd]; pop edi; ret; 
0x001aa348: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xe]; pop edi; ret; 
0x001aa3e8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 1]; pop edi; ret; 
0x001aa3d8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 2]; pop edi; ret; 
0x001aa3c8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 3]; pop edi; ret; 
0x001ac6d8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 4]; pop edi; ret; 
0x001aa3b8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 5]; pop edi; ret; 
0x001aa3a8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 6]; pop edi; ret; 
0x001aa398: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 7]; pop edi; ret; 
0x001aa388: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 9]; pop edi; ret; 
0x001a9e87: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi]; pop edi; ret; 
0x001ab587: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xa]; ret; 
0x001ab597: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xc]; ret; 
0x001ab5a7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xd]; ret; 
0x001ab5b7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xe]; ret; 
0x001ab527: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 2]; ret; 
0x001ab537: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 4]; ret; 
0x001ab547: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 5]; ret; 
0x001ab557: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 6]; ret; 
0x001ab567: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 8]; ret; 
0x001ab577: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 9]; ret; 
0x000b3675: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov byte ptr [ecx], dl; pop ebx; ret; 
0x001ac418: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, ecx; ret; 
0x000b3687: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov word ptr [ecx], dx; pop ebx; ret; 
0x001a9f68: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; pop edi; ret; 
0x000d99d7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; ret; 
0x001a9b56: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; add eax, 1; ret; 
0x001ac486: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; lea eax, [ecx + 8]; ret; 
0x001ab516: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; lea eax, [edx + 1]; ret; 
0x000d99e6: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; mov eax, 1; ret; 
0x00092ed6: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x000b3666: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; pop ebx; ret; 
0x000c1306: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; xor eax, eax; ret; 
0x0017071b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov dword ptr [eax], 0xa; pop ebx; ret; 
0x0017072b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov dword ptr [eax], 8; pop ebx; ret; 
0x0018527b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov dword ptr [ebx + 0xc], 0; pop ebx; ret; 
0x000b36db: add byte ptr es:[eax], al; add byte ptr [eax], al; mov dword ptr [ecx], edx; mov dword ptr [ecx + 3], edx; pop ebx; ret; 
0x000b36ab: add byte ptr es:[eax], al; add byte ptr [eax], al; mov dword ptr [ecx], edx; pop ebx; ret; 
0x000980bb: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, 0x16; ret; 
0x001304db: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, 0x6a; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0012f11b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, 0x6b; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00134043: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; call dword ptr gs:[0x10]; 
0x00094f43: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x0009c313: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, 1; add esp, 0xc; ret; 
0x0010bb3b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 4]; test eax, eax; je 0x10ba8f; call eax; 
0x0017b8f3: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x001ac47b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, ecx; ret; 
0x000c01db: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, edi; pop ebx; pop edi; ret; 
0x001aaa4b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, edi; pop edi; ret; 
0x000b430b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, edx; pop ebx; ret; 
0x0012ee9b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x84]; mov eax, 0x6c; mov ecx, esi; call dword ptr gs:[0x10]; 
0x001acdbb: add byte ptr es:[eax], al; add byte ptr [eax], al; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000b372b: add byte ptr es:[eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x000b370b: add byte ptr es:[eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000b373b: add byte ptr es:[eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x0019f30b: add byte ptr es:[eax], al; add byte ptr [eax], al; movzx ecx, byte ptr [eax + 1]; movzx eax, byte ptr [edx + 1]; sub eax, ecx; ret; 
0x000c1cd9: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x000c1839: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; bsr eax, eax; lea eax, [eax + ecx + 0x10]; ret; 
0x0008b48a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; endbr32; mov eax, 0xffffffff; ret; 
0x0016eae9: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; endbr32; ret; 
0x0017ce2a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; endbr32; xor eax, eax; ret; 
0x000e770a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; lea ecx, [esp + 0x14]; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x0009af39: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov dword ptr [eax + 4], edx; ret; 
0x00071889: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x28], 1; jmp eax; 
0x000906da: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, 0x16; ret; 
0x00086a39: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000d99f9: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, 2; ret; 
0x00094189: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, 3; add esp, 0xc; ret; 
0x000d9a09: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, 3; ret; 
0x000d9a19: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, 4; ret; 
0x000d9a29: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, 5; ret; 
0x000d9a39: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, 6; ret; 
0x000d9a49: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, 7; ret; 
0x0015722a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov ecx, 1; mov eax, ecx; ret; 
0x000b36ea: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; movlpd qword ptr [ecx], xmm0; pop ebx; ret; 
0x001a7e69: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; pop ebx; xor eax, eax; ret; 
0x00042ab9: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; xor eax, eax; pop ebx; ret; 
0x0004218a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; xor eax, eax; ret; 
0x0008f253: add byte ptr es:[eax], al; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x000b945b: add byte ptr es:[eax], al; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000bd99b: add byte ptr es:[eax], al; add byte ptr [eax], al; pop esi; ret; 
0x0008c953: add byte ptr es:[eax], al; add byte ptr [eax], al; ret; 
0x0008c9a3: add byte ptr es:[eax], al; add byte ptr [eax], al; sub edx, dword ptr [eax + 8]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x0017834b: add byte ptr es:[eax], al; add byte ptr [eax], al; sub esp, 0xc; push eax; call dword ptr [edx + 0x10]; 
0x000a6dfb: add byte ptr es:[eax], al; add byte ptr [eax], al; sub esp, 8; push eax; push dword ptr [ebx + 0x24]; call edx; 
0x000e822b: add byte ptr es:[eax], al; add byte ptr [eax], al; xor eax, eax; add esp, 0xc; ret; 
0x00185213: add byte ptr es:[eax], al; add byte ptr [eax], al; xor eax, eax; pop ebx; ret; 
0x001a72eb: add byte ptr es:[eax], al; add byte ptr [eax], al; xor eax, eax; pop edi; pop ebx; ret; 
0x000c198b: add byte ptr es:[eax], al; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x0007c1ab: add byte ptr es:[eax], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x0013706b: add byte ptr es:[eax], al; add byte ptr [eax], al; xor edx, edx; pop ebx; mov eax, edx; ret; 
0x000612c1: add byte ptr es:[eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x001397ad: add byte ptr es:[eax], al; add esp, 0xc; push eax; push dword ptr [ebp - 0x4c]; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x0013c046: add byte ptr es:[ebp + 0x5b8f865], cl; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop ebp; ret; 
0x001ac4fe: add byte ptr es:[ebp - 0x37af037], al; add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x000d77ce: add byte ptr es:[ebp - 0x577bf040], al; add byte ptr [eax], al; add byte ptr [ecx - 0x362f4b], cl; dec dword ptr [edi]; mov ebp, 0x89d189f0; ret; 
0x000a238e: add byte ptr es:[ebp - 0x77], dl; ret 0x5657; 
0x000361ae: add byte ptr es:[ebp - 0x7cd58a40], al; ret; 
0x0005acde: add byte ptr es:[ebp - 0x7cf38b40], al; call 0x44835eb; ret; 
0x0007d4ee: add byte ptr es:[ebx + 0x106a04ec], al; push ebp; push esi; call dword ptr [eax + 0x1c]; 
0x0016ed6e: add byte ptr es:[ebx + 0x10b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x001792e6: add byte ptr es:[ebx + 0x17483], cl; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00157de6: add byte ptr es:[ebx + 0x1b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00087bd6: add byte ptr es:[ebx + 0x408b0850], cl; adc byte ptr [ecx + 0x39082444], cl; ret 0x8c74; 
0x0010d74e: add byte ptr es:[ebx + 0x438b0453], cl; or byte ptr [ecx], bh; ret 0x840f; 
0x0016ee0e: add byte ptr es:[ebx + 0x438b08ec], al; adc bh, bh; je 0x16ee3d; adc al, 0x56; call dword ptr [eax + 4]; 
0x001754ce: add byte ptr es:[ebx + 0x438b08ec], al; add al, 0x56; push ebx; call dword ptr [eax + 0x24]; 
0x00179c5e: add byte ptr es:[ebx + 0x438b08ec], al; or bh, bh; je 0x179c8d; adc al, 0x53; call dword ptr [eax]; 
0x00032d9e: add byte ptr es:[ebx + 0x440f06f8], al; ret 0xc89; 
0x000d96ee: add byte ptr es:[ebx + 0x4f391c4e], cl; sbb al, 0xf; test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x000a0f3e: add byte ptr es:[ebx + 0x528b0442], cl; or byte ptr [ecx], al; lds edi, ptr [ecx]; ret; 
0x000f0d86: add byte ptr es:[ebx + 0x548d08ec], al; and al, 0x14; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x000f8006: add byte ptr es:[ebx + 0x548d08ec], al; and al, 8; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x001752e6: add byte ptr es:[ebx + 0x5a8b0440], cl; and al, 0x83; ret 0x8b18; 
0x0017b3e6: add byte ptr es:[ebx + 0x5e5b04c4], al; pop edi; pop ebp; ret; 
0x000a870e: add byte ptr es:[ebx + 0x5e5b04c4], al; ret; 
0x0008f2c6: add byte ptr es:[ebx + 0x5e], bl; pop edi; ret; 
0x000c128e: add byte ptr es:[ebx + 0x5e], bl; pop edi; xor eax, eax; ret; 
0x000c0f3e: add byte ptr es:[ebx + 0x5e], bl; ret; 
0x0009ac46: add byte ptr es:[ebx + 0x685504ec], al; ret 0xa00; 
0x00142ece: add byte ptr es:[ebx - 0x17aaf314], al; inc edi; sbb ch, bh; jmp dword ptr [ebp - 0x5f]; 
0x000d57b6: add byte ptr es:[ebx - 0x362f43], al; call dword ptr [eax]; 
0x000d627e: add byte ptr es:[ebx - 0x365f7b], cl; inc dword ptr [ebx - 0x362f43]; call dword ptr [eax]; 
0x000fd3c6: add byte ptr es:[ebx - 0x3b7cc3ba], cl; add al, 0x5b; pop esi; ret; 
0x0010bbde: add byte ptr es:[ebx - 0x3f7af7c0], cl; je 0x10bae2; call eax; 
0x00148886: add byte ptr es:[ebx - 0x44f73], cl; jmp dword ptr [ebp - 0x75]; 
0x000f2a6e: add byte ptr es:[ebx - 0x46f7b], cl; inc dword ptr [ebx - 0x7f72f314]; mov bh, 0x47; stc; call dword ptr [eax - 0x18]; 
0x001ac2ae: add byte ptr es:[ebx - 0x48], bl; add dword ptr [eax], eax; add byte ptr [eax], al; jg 0x1ac2c0; neg eax; ret; 
0x0010c96e: add byte ptr es:[ebx - 0x48], bl; or dword ptr [eax], eax; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x00099de6: add byte ptr es:[ebx - 0x48], bl; push ss; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x00067b5e: add byte ptr es:[ebx - 0x59743], al; call dword ptr [eax]; 
0x00133b96: add byte ptr es:[ebx - 0x74f3dbbc], cl; adc cl, byte ptr [ecx + 0x1b810]; add byte ptr [eax], al; ret; 
0x00126566: add byte ptr es:[ebx - 0x7c72f714], al; sub ecx, edi; call dword ptr [eax - 0x73]; 
0x00178b2e: add byte ptr es:[ebx - 0x7c72fb14], al; je 0x178aef; stc; call dword ptr [esi - 1]; 
0x00150146: add byte ptr es:[ebx - 0x7ce3dbac], cl; insb byte ptr es:[edi], dx; and al, 0x14; add dword ptr [ecx], ebp; ret 0x828d; 
0x001045fe: add byte ptr es:[ebx - 0x7cf4dcf6], cl; ret 0x8304; 
0x00103e8e: add byte ptr es:[ebx - 0x7cf7f6f6], cl; rol byte ptr [ebx + eax*4], 0xc2; add al, 0x39; ret; 
0x00024ede: add byte ptr es:[ebx - 0xa9fb14], al; je 0x24f0b; inc eax; push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x000b36be: add byte ptr es:[ecx + 0x4518811], cl; pop ebx; ret; 
0x000b9f9e: add byte ptr es:[ecx + 0x5b5e5ff8], cl; ret; 
0x000878f6: add byte ptr es:[ecx + 0x5bd889fb], cl; pop esi; pop edi; ret; 
0x0008b99e: add byte ptr es:[ecx + 0x803c48], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x34]; test eax, eax; jne 0x8b9a0; ret; 
0x00179856: add byte ptr es:[ecx + 0xb4a9], cl; add bl, ch; ret; 
0x0009807e: add byte ptr es:[ecx + 8], al; xor byte ptr [ecx], 0xc0; ret; 
0x0007190e: add byte ptr es:[ecx - 0x38fbdbb4], cl; inc esp; and al, 0x34; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x0007fb06: add byte ptr es:[ecx - 0x76207622], cl; ret 0xcb89; 
0x0002d43e: add byte ptr es:[ecx - 0x769fdbbc], cl; ret 0xa1e9; 
0x000a501e: add byte ptr es:[ecx - 0x76e7743a], cl; ret 0xeec1; 
0x00036ffe: add byte ptr es:[ecx - 0x7cbbdb94], cl; ret; 
0x0007f1ee: add byte ptr es:[ecx - 1], bh; pop ebx; pop esi; mov eax, ecx; pop edi; ret; 
0x00090ed6: add byte ptr es:[ecx], bh; salc; jae 0x90f18; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x001742de: add byte ptr es:[ecx], ch; ret; 
0x000d4676: add byte ptr es:[ecx], dh; fild dword ptr [ebp - 0x760d8b37]; ret; 
0x001a7e0e: add byte ptr es:[ecx], dh; fisttp dword ptr [ecx + 0x5f5e5bd8]; ret; 
0x0008356e: add byte ptr es:[ecx], dh; fstp xword ptr [ecx]; ror dword ptr [edi], 1; xchg esp, eax; ret; 
0x00042e3e: add byte ptr es:[ecx], dh; leave; pop ebx; mov eax, ecx; ret; 
0x0014a6b6: add byte ptr es:[ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x00189dae: add byte ptr es:[ecx], dh; rol byte ptr [ebx - 0x6bf00008], cl; ret 0x1389; 
0x0015c886: add byte ptr es:[ecx], dh; rol byte ptr [ecx + 0xc0fefb], cl; add byte ptr [edi], cl; xchg ebp, eax; ret 0x548d; 
0x00182c4e: add byte ptr es:[ecx], dh; test byte ptr [ebx - 0xf76fb3c], 0x5b; pop esi; ret; 
0x000b9cee: add byte ptr es:[edi + 0x5e], bl; pop ebx; ret; 
0x000d97ae: add byte ptr es:[edi + 0x5e], bl; ret; 
0x0011338e: add byte ptr es:[edi], cl; mov dh, 0x10; test dl, dl; je 0x113364; pop ebx; ret; 
0x000f0bbe: add byte ptr es:[edi], cl; mov dh, 0x10; test dl, dl; je 0xf0b94; pop ebx; ret; 
0x000f36fe: add byte ptr es:[edi], cl; mov dh, 0x10; test dl, dl; je 0xf36d4; pop ebx; ret; 
0x000f44fe: add byte ptr es:[edi], cl; mov dh, 0x10; test dl, dl; je 0xf44d4; pop ebx; ret; 
0x000f702e: add byte ptr es:[edi], cl; mov dh, 0x10; test dl, dl; je 0xf7004; pop ebx; ret; 
0x000f7e3e: add byte ptr es:[edi], cl; mov dh, 0x10; test dl, dl; je 0xf7e14; pop ebx; ret; 
0x0019f34e: add byte ptr es:[edi], cl; mov dh, 0x48; add eax, 0x542b60f; sub eax, ecx; ret; 
0x0019f35e: add byte ptr es:[edi], cl; mov dh, 0x48; push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x0019f2fe: add byte ptr es:[edi], cl; mov dh, 8; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x0014c7d3: add byte ptr es:[edi], cl; test dword ptr [ebp - 0x7c000003], esp; ret; 
0x000fcfe6: add byte ptr es:[edi], cl; xchg esp, eax; ret; 
0x001a64be: add byte ptr es:[edx + 0xe], dh; movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x000b16ae: add byte ptr es:[edx - 0x76fd77ff], cl; clc; pop edi; ret; 
0x00152b96: add byte ptr es:[edx - 1], bh; mov eax, edx; pop ebx; pop esi; ret; 
0x001a0bfe: add byte ptr es:[esi + 0x5f], bl; pop ebx; pop ebp; xor eax, eax; ret; 
0x000b374e: add byte ptr es:[esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000b375e: add byte ptr es:[esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000b376e: add byte ptr es:[esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x0012523f: add byte ptr fs:[eax], al; add byte ptr [ebx + 0x10880], cl; add byte ptr [ebx - 0x3f7adfc0], cl; cmove eax, edx; ret; 
0x00122d04: add byte ptr ss:[eax], al; add byte ptr [ecx + 0x5409], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0004eb3c: add byte ptr ss:[eax], al; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0015a087: add ch, 0x5e; stc; call dword ptr [eax + 0x55]; 
0x00152d03: add ch, al; out 0x76, eax; hlt; dec dword ptr [ebp - 0xec5b37d]; call dword ptr [esi + 0x50]; 
0x0016a259: add ch, al; push ecx; ret; 
0x0017b0e8: add ch, al; ret 0xfb75; 
0x000770f6: add ch, bl; fdivr dword ptr [ecx]; ror byte ptr [edi], 1; test dword ptr [edi], ebp; ret 0xffff; 
0x000816b5: add ch, bl; ljmp 0x5bff:0xffffffb8; ret; 
0x000d22bc: add ch, bl; ret 0x8390; 
0x0004735f: add ch, bl; test dword ptr [edx + eax*8 - 7], esi; jmp dword ptr [ebp - 0x75]; 
0x00170f85: add ch, byte ptr [eax + 0x60]; and al, byte ptr [eax]; add byte ptr [ebx - 0x7f], dl; ret; 
0x00029b42: add ch, byte ptr [ebx]; stc; call dword ptr [eax - 0x18]; 
0x000d33ea: add ch, byte ptr [ecx]; ret 0x28b; 
0x000df838: add ch, byte ptr [ecx]; ret 0x48d; 
0x00055d08: add ch, byte ptr [ecx]; ret 0xc031; 
0x0007b8dd: add ch, byte ptr [edx]; push 0; push ebp; call dword ptr [esi + 0x40]; 
0x0018b4ec: add ch, byte ptr [edx]; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x000884e7: add ch, byte ptr [edx]; push 0; push ebx; call dword ptr [esi + 0x40]; 
0x000835cc: add ch, byte ptr [edx]; push 0; push esi; call dword ptr [edi + 0x40]; 
0x00046e30: add ch, byte ptr [edx]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x477a0; add esp, 0x1c; ret; 
0x0004a500: add ch, byte ptr [edx]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x4ad00; add esp, 0x1c; ret; 
0x00152f6a: add ch, ch; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x000d4748: add ch, cl; ret 0xfedd; 
0x00076820: add ch, cl; ret 0xffd6; 
0x00153d76: add ch, dh; jmp dword ptr [esi - 0x70]; 
0x0010ccaa: add cl, 0xe9; add dh, bl; movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x0008e96b: add cl, al; call 0x1e96c7d; mov dword ptr [edx + 0x1ac8], eax; ret; 
0x000a4059: add cl, al; call 0xfda7972; inc edi; ret 0xc083; 
0x000a4173: add cl, al; call 0xfda7a8c; inc edi; ret 0xc083; 
0x000a6299: add cl, al; call 0xfda9bb2; inc edi; ret 0x508d; 
0x0010e2c6: add cl, al; call 0xfe11bcf; dec edi; ret 0xbce9; 
0x0003895e: add cl, al; cli; add al, byte ptr [ecx - 0xccc1e]; inc dword ptr [ecx]; ret 0xd089; 
0x0007c22c: add cl, al; ret 0x6509; 
0x00024afe: add cl, al; ret 0x8909; 
0x0012d3b2: add cl, al; ret 0xf009; 
0x00156bda: add cl, al; ror byte ptr [ecx], 0x89; inc esp; xchg ebx, eax; add al, 0x83; ret 0x8301; 
0x0004a930: add cl, bl; test dword ptr [edx + eax*8], edx; stc; jmp dword ptr [ebp - 0x75]; 
0x0004ce86: add cl, bl; xchg dword ptr [eax], ebx; ret 0xfff9; 
0x0004d019: add cl, bl; xchg dword ptr [eax], edx; ret 0xfff9; 
0x000c2bbc: add cl, byte ptr [eax + 0x24448b27]; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000c0a7b: add cl, byte ptr [eax + 0x448b0270]; and al, 0xc; pop ebx; pop esi; ret; 
0x00193a8d: add cl, byte ptr [eax + 0x448b5f07]; and al, 8; pop ebx; ret; 
0x0017b3a8: add cl, byte ptr [eax + 0x48bff42]; and al, 0x39; ret 0x3574; 
0x00149a14: add cl, byte ptr [eax + 0x48bff57]; and al, 0x39; ret; 
0x000b185a: add cl, byte ptr [eax - 0x2f76f7be]; ret; 
0x000b17f8: add cl, byte ptr [eax - 0x2f76fdbe]; ret; 
0x000c0173: add cl, byte ptr [eax - 0x776f786]; pop ebx; pop edi; ret; 
0x000b171a: add cl, byte ptr [eax - 0x776f7be]; pop edi; ret; 
0x000bfe3b: add cl, byte ptr [eax - 0x776fdbe]; pop ebx; pop edi; ret; 
0x000b16d8: add cl, byte ptr [eax - 0x776fdbe]; pop edi; ret; 
0x000fae0a: add cl, byte ptr [eax - 7]; call dword ptr [eax + 0x53]; 
0x000fae67: add cl, byte ptr [eax - 7]; call dword ptr [eax - 1]; 
0x00141fd6: add cl, byte ptr [eax]; pop ebx; ret; 
0x000c27ab: add cl, byte ptr [eax]; sal byte ptr [esp + eax - 0x78], 0x64; adc dword ptr [ebx], eax; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000b77e0: add cl, byte ptr [ebp + 0x5b5f0442]; ret; 
0x000b7812: add cl, byte ptr [ebp + 0x5b5f0842]; ret; 
0x000abed5: add cl, byte ptr [ebp + 0x5e5b0342]; ret; 
0x000abee9: add cl, byte ptr [ebp + 0x5e5b0442]; ret; 
0x000abef9: add cl, byte ptr [ebp + 0x5e5b0542]; ret; 
0x000abf0d: add cl, byte ptr [ebp + 0x5e5b0642]; ret; 
0x00088e62: add cl, byte ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x000bb02b: add cl, byte ptr [ebp + 0x5e5f0347]; pop ebx; ret; 
0x0005362a: add cl, byte ptr [ebp + 0x6c084]; add byte ptr [eax], al; call 0x535f0; jmp eax; 
0x000d46fe: add cl, byte ptr [ebp - 0x1653536e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000a95b3: add cl, byte ptr [ebp - 0x17bea36e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000a9573: add cl, byte ptr [ebp - 0x17bf336e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000aa2fe: add cl, byte ptr [ebp - 0x17c2436e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000ab4d3: add cl, byte ptr [ebp - 0x17c2d36e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000aa123: add cl, byte ptr [ebp - 0x17c8036e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000a8b3e: add cl, byte ptr [ebp - 0x17cc736e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000ac2be: add cl, byte ptr [ebp - 0x17cf636e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000ac2fe: add cl, byte ptr [ebp - 0x17cfd36e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000a95ee: add cl, byte ptr [ebp - 0x17d0536e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000a962e: add cl, byte ptr [ebp - 0x17d0d36e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000ac343: add cl, byte ptr [ebp - 0x17dec36e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000ac3c3: add cl, byte ptr [ebp - 0x18ed836e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000ac37e: add cl, byte ptr [ebp - 0x18f1136e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x00184042: add cl, byte ptr [ebp - 0x6993b80]; call dword ptr [eax - 0x18]; 
0x0014b4a4: add cl, byte ptr [ebp - 0x6d2f87d]; call dword ptr [eax + 0x51]; 
0x000b38ba: add cl, byte ptr [ebp - 0x7af0fdb6]; cmp eax, 0x5bffffff; ret; 
0x00169648: add cl, byte ptr [ebx + 0x29eb8900]; ret; 
0x000bd06a: add cl, byte ptr [ebx + 0x42890741]; pop es; mov eax, edi; pop edi; ret; 
0x00032bad: add cl, byte ptr [ebx + 0x54408b00]; ret; 
0x00196a3f: add cl, byte ptr [ebx + 0x5b082444]; ret; 
0x000c0a7e: add cl, byte ptr [ebx + 0x5b0c2444]; pop esi; ret; 
0x000bd648: add cl, byte ptr [ebx + 0x5e082444]; ret; 
0x0009c4cc: add cl, byte ptr [ebx + 0x651c2454]; sub edx, dword ptr [0x14]; jne 0x9c4f7; add esp, 0x2c; ret; 
0x0009c738: add cl, byte ptr [ebx + 0x651c2454]; sub edx, dword ptr [0x14]; jne 0x9c767; add esp, 0x2c; ret; 
0x000344fd: add cl, byte ptr [ebx + 0xf042454]; mov bh, 4; push eax; and eax, 0x1000; ret; 
0x000344cd: add cl, byte ptr [ebx + 0xf042454]; mov bh, 4; push eax; and eax, 0x100; ret; 
0x0003449d: add cl, byte ptr [ebx + 0xf042454]; mov bh, 4; push eax; and eax, 0x2000; ret; 
0x000343dd: add cl, byte ptr [ebx + 0xf042454]; mov bh, 4; push eax; and eax, 0x200; ret; 
0x0003443d: add cl, byte ptr [ebx + 0xf042454]; mov bh, 4; push eax; and eax, 0x4000; ret; 
0x0003434d: add cl, byte ptr [ebx + 0xf042454]; mov bh, 4; push eax; and eax, 0x400; ret; 
0x0003440d: add cl, byte ptr [ebx + 0xf042454]; mov bh, 4; push eax; and eax, 0x8000; ret; 
0x000343ad: add cl, byte ptr [ebx + 0xf042454]; mov bh, 4; push eax; and eax, 0x800; ret; 
0x000345ad: add cl, byte ptr [ebx + 0xf042454]; mov bh, 4; push eax; and eax, 1; ret; 
0x0003437d: add cl, byte ptr [ebx + 0xf042454]; mov bh, 4; push eax; and eax, 2; ret; 
0x0003446d: add cl, byte ptr [ebx + 0xf042454]; mov bh, 4; push eax; and eax, 4; ret; 
0x0003431d: add cl, byte ptr [ebx + 0xf042454]; mov bh, 4; push eax; and eax, 8; ret; 
0x00081c75: add cl, byte ptr [ebx - 0x2f76a4f0]; pop esi; pop edi; ret; 
0x000d6bce: add cl, byte ptr [ebx - 0x363f63]; call dword ptr [eax + 0x6a]; 
0x0005841e: add cl, byte ptr [ebx - 0x364763]; call dword ptr [eax + 0x6a]; 
0x0006bc45: add cl, byte ptr [ebx - 0x5e76b]; inc dword ptr [ecx]; ret 0x858b; 
0x001a3165: add cl, byte ptr [ebx - 0x64737474]; idiv edi; mov eax, dword ptr [ebx + eax*4 - 0x86474]; sub eax, ecx; pop ebx; ret; 
0x001989ef: add cl, byte ptr [ebx - 0x74f7dbbc]; dec esp; and al, 0x10; add eax, ecx; pop ebx; ret; 
0x000345fd: add cl, byte ptr [ebx - 0x74fbdbac]; add byte ptr [ebx - 0x7b74d3c0], cl; nop; add byte ptr [edx], al; add byte ptr [eax], al; ret; 
0x0003462d: add cl, byte ptr [ebx - 0x74fbdbac]; add byte ptr [ebx - 0x7b74dbc0], cl; nop; add byte ptr [edx], al; add byte ptr [eax], al; ret; 
0x0003403d: add cl, byte ptr [ebx - 0x74fbdbac]; inc esp; nop; inc eax; ret; 
0x0010d342: add cl, byte ptr [ebx - 0x7aebdbbc]; dec dword ptr [edi]; xchg esp, eax; ret; 
0x0017e6e8: add cl, byte ptr [ebx - 0x877b]; jmp dword ptr [ebp - 0x75]; 
0x0005c568: add cl, byte ptr [ebx - 0x8b63]; call dword ptr [eax - 1]; 
0x0009b9af: add cl, byte ptr [ebx]; add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; ret; 
0x000b3aa7: add cl, byte ptr [ecx + 0x10eb83d0]; lea ecx, [edx + 0x10]; jne 0xb3801; pop ebx; ret; 
0x000b3893: add cl, byte ptr [ecx + 0x1eb83d0]; lea ecx, [edx + 1]; jne 0xb3801; pop ebx; ret; 
0x000c9430: add cl, byte ptr [ecx + 0x29d001f8]; ret; 
0x000b38b5: add cl, byte ptr [ecx + 0x2eb83d0]; lea ecx, [edx + 2]; jne 0xb3801; pop ebx; ret; 
0x00149100: add cl, byte ptr [ecx + 0x39f329cb]; ret; 
0x000b38db: add cl, byte ptr [ecx + 0x3eb83d0]; lea ecx, [edx + 3]; jne 0xb3801; pop ebx; ret; 
0x000b784a: add cl, byte ptr [ecx + 0x428d0842]; or al, 0x5f; pop ebx; ret; 
0x0008431b: add cl, byte ptr [ecx + 0x4c48301]; xor eax, eax; pop ebx; pop esi; ret; 
0x000b38f3: add cl, byte ptr [ecx + 0x4eb83d0]; lea ecx, [edx + 4]; jne 0xb3801; pop ebx; ret; 
0x0013544f: add cl, byte ptr [ecx + 0x5f5e5bd8]; ret; 
0x000b3977: add cl, byte ptr [ecx + 0x8eb83d0]; lea ecx, [edx + 8]; jne 0xb3801; pop ebx; ret; 
0x00156cbd: add cl, byte ptr [ecx - 0x1337b]; call dword ptr [eax - 0x18]; 
0x001525c9: add cl, byte ptr [ecx - 0x2776efb5]; pop ebx; pop esi; pop edi; ret; 
0x000b43d3: add cl, byte ptr [ecx - 0x2f76f7be]; pop ebx; ret; 
0x000b18ba: add cl, byte ptr [ecx - 0x2f76f7be]; ret; 
0x000b189a: add cl, byte ptr [ecx - 0x2f76f8be]; ret; 
0x000d5fa8: add cl, byte ptr [ecx - 0x363b6b]; call dword ptr [eax - 0x75]; 
0x00056eef: add cl, byte ptr [ecx - 0x364f6b]; dec dword ptr [ebp + 0x7ff48384]; clc; call dword ptr [eax - 1]; 
0x00056e6a: add cl, byte ptr [ecx - 0x365f6b]; dec dword ptr [ebp + 0x7ff48384]; clc; call dword ptr [eax + 0x51]; 
0x00056ee6: add cl, byte ptr [ecx - 0x365f73]; call dword ptr [eax - 0x75]; 
0x000f23f7: add cl, byte ptr [ecx - 0x47f7b]; call dword ptr [edx - 0x77]; 
0x000b345a: add cl, byte ptr [ecx - 0x776f7be]; pop edi; pop ebx; ret; 
0x000b166a: add cl, byte ptr [ecx - 0x776f7be]; pop edi; ret; 
0x000b175a: add cl, byte ptr [ecx - 0x776f8be]; pop edi; ret; 
0x00040623: add cl, byte ptr [ecx - 0x7c3fcef0]; les ecx, ptr [eax]; pop ebx; ret; 
0x001aca7a: add cl, byte ptr [ecx - 0x7ca1f78e]; ret 0x830c; 
0x0005c3fc: add cl, byte ptr [ecx - 0x8f6b]; dec dword ptr [ecx - 0x876b]; call dword ptr [eax - 1]; 
0x00064368: add cl, byte ptr [ecx]; ret 0xb70f; 
0x000a487b: add cl, byte ptr [ecx]; ret; 
0x000c5bd3: add cl, byte ptr [edi]; inc esp; ret 0x66c3; 
0x000a310c: add cl, byte ptr [edi]; inc esp; ret 0x938b; 
0x000a0d14: add cl, byte ptr [edi]; inc esp; ret 0xec83; 
0x00196b17: add cl, byte ptr [edi]; mov bh, 8; mov word ptr [edx], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000e0cac: add cl, byte ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret; 
0x00082f35: add cl, byte ptr [edi]; scasd eax, dword ptr es:[edi]; ret 0xbe0f; 
0x0010ba88: add cl, byte ptr [edi]; test byte ptr [ecx - 0x7d000000], dh; ret; 
0x000303c5: add cl, byte ptr [edi]; test byte ptr [edi - 0x7cffffff], dh; rol byte ptr [ecx], 0x83; ret; 
0x000b38bd: add cl, byte ptr [edi]; test dword ptr [0x5bffffff], edi; ret; 
0x001ab06c: add cl, byte ptr [edi]; test dword ptr [ebp - 0x7d000000], ebx; ret 0xf00; 
0x001aa2bc: add cl, byte ptr [edi]; test dword ptr [ebp], edi; add byte ptr [eax], al; lea eax, [edi - 0x10]; pop edi; ret; 
0x001aae3c: add cl, byte ptr [edi]; test dword ptr [ebp], edi; add byte ptr [eax], al; mov eax, ecx; ret; 
0x000b34dd: add cl, byte ptr [edi]; test dword ptr [ebx + eax], ebx; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x00104fe3: add cl, byte ptr [edi]; test dword ptr [ebx - 0x9fffff1], esi; ret 0xf04; 
0x000baade: add cl, byte ptr [edi]; test dword ptr [ebx], edi; or al, byte ptr [eax]; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x001ab9c8: add cl, byte ptr [edi]; test dword ptr [ecx - 0xa000000], esi; ret 0xf04; 
0x001ab0ca: add cl, byte ptr [edi]; test dword ptr [edi - 0x7d000000], ebx; ret 0xf08; 
0x001aa30b: add cl, byte ptr [edi]; test dword ptr [esi - 0x73000000], ecx; inc edi; clc; pop edi; ret; 
0x0018cdc7: add cl, byte ptr [edi]; test esi, eax; adc eax, dword ptr [eax]; add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x000f8f37: add cl, byte ptr [edi]; test esi, edx; adc eax, dword ptr [eax]; add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x000f5617: add cl, byte ptr [edi]; test esi, esi; adc eax, dword ptr [eax]; add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x001ab8b5: add cl, byte ptr [edi]; test esp, eax; add eax, dword ptr [eax]; add dh, dh; ret 0xf04; 
0x001116e6: add cl, byte ptr [edi]; xchg ebp, eax; ret; 
0x000304a9: add cl, byte ptr [edi]; xchg esi, eax; ret; 
0x0017bad6: add cl, byte ptr [edi]; xchg esp, eax; ret 0xf883; 
0x0015e629: add cl, byte ptr [edi]; xchg esp, eax; ret; 
0x00137217: add cl, byte ptr [edx]; pop ebx; pop esi; pop edi; ret; 
0x000e7378: add cl, ch; and edi, 0xffffffff; call dword ptr [ebx + 0x57]; 
0x0010d2b8: add cl, ch; cmp ch, 0xff; jmp dword ptr [esi - 0x70]; 
0x000d0118: add cl, ch; cmp cl, 0xff; call dword ptr [eax + 0x6a]; 
0x0007c384: add cl, ch; imul edi, edi, -1; jmp dword ptr [esi - 0x70]; 
0x0004d500: add cl, ch; lcall 0x247c, 0x8bffffe6; sbb byte ptr [ebp - 0x687a779], cl; call dword ptr [eax - 0x73]; 
0x00050124: add cl, ch; push es; idiv bh; call dword ptr [eax + 0x6a]; 
0x00049f13: add cl, ch; ret 0xffdf; 
0x0018dd28: add cl, ch; ret 0xfff1; 
0x00039a35: add cl, ch; ret 0xfff8; 
0x000f16e3: add cl, ch; ret 0xfff9; 
0x00106730: add cl, ch; ret 0xfffa; 
0x0017ed6c: add cl, ch; ret 0xfffc; 
0x0009be3a: add cl, ch; ret 0xfffd; 
0x0004c39a: add cl, ch; ret; 
0x000958aa: add cl, ch; sbb eax, 0x8dffffff; xchg al, cl; xchg cl, bh; call dword ptr [eax - 0x73]; 
0x0004379b: add cl, dl; call 0x21061825; ret 0xb60f; 
0x0009285d: add cl, dl; clc; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0004069d: add dh, al; add al, 8; add byte ptr [ebx + 0x5e], bl; ret; 
0x00145df7: add dh, al; add eax, dword ptr [eax]; add esp, 8; pop ebx; ret; 
0x00024bb8: add dh, al; inc edx; inc esi; mov eax, 0x744c7139; sbb dword ptr [ebp - 0x1b797370], ecx; jmp dword ptr [ebp + 0x33]; 
0x001368df: add dh, al; inc edx; jmp dword ptr [eax]; 
0x0006532c: add dh, al; inc esp; and al, 0x4c; add byte ptr [ecx], ch; retf 0x490f; ret 0x4489; 
0x0015d086: add dh, al; inc esp; and al, 0x57; add byte ptr [eax - 0x73], dl; and dword ptr [edi + 0x5f], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0006473f: add dh, al; inc esp; and al, 0x58; add byte ptr [edi], cl; xchg esp, eax; ret 0x44c7; 
0x001a5b36: add dh, bh; fadd dword ptr [ebx + 0x5b5d04c4]; ret; 
0x001a7306: add dh, bh; fcomp dword ptr [edi + 0x5b]; ret; 
0x001a7866: add dh, bh; fcomp dword ptr [edi + 0x5d]; pop ebx; ret; 
0x0008f8dd: add dh, bh; jne 0x8f881; mov edx, 0xfffffffe; xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x0019add4: add dh, bh; ret 0xf; 
0x0019ad9a: add dh, bh; ret 2; 
0x0010ccad: add dh, bl; movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x0010cc25: add dh, bl; stosd dword ptr es:[edi], eax; pop edi; ret; 
0x0006f4c0: add dh, byte ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx + 0x390c2454], cl; ret 0x840f; 
0x000c1cbc: add dh, byte ptr [eax]; ret; 
0x001325f9: add dh, byte ptr [ebp + 0x34]; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x001a9b2e: add dh, byte ptr [ebp + 0x4f]; test dh, 4; jne 0x1a9b84; add eax, 0xb; ret; 
0x00080f62: add dh, byte ptr [ebp + 0x63]; sub esp, 0xc; mov eax, dword ptr [eax + 0x88]; push esi; call dword ptr [eax + 0x34]; 
0x001a9ae8: add dh, byte ptr [ebp + 0x75]; test dl, 4; jne 0x1a9b64; add eax, 3; ret; 
0x00157213: add dh, byte ptr [ebp + 0xa]; mov eax, ecx; ret; 
0x000919f8: add dh, byte ptr [ebp + eax + 0x5b]; pop esi; pop edi; ret; 
0x0014ef90: add dh, byte ptr [ebp + eax + 0x5b]; ret; 
0x000913c7: add dh, byte ptr [ebp - 0x77]; ret 0xe283; 
0x00091b47: add dh, byte ptr [ebx - 0x77]; ret 0xe283; 
0x000fbb83: add dh, byte ptr [ecx]; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x0014ef8a: add dh, byte ptr [ecx]; shl byte ptr [esi + 0x39], 0x5a; add dh, byte ptr [ebp + eax + 0x5b]; ret; 
0x00099aea: add dh, byte ptr [edi + 0x13]; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0010ce5f: add dh, byte ptr [edi + 0xc]; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x0015c7ce: add dh, byte ptr [edi + ecx - 0x77]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x00193a8b: add dh, byte ptr [edx + eax - 0x78]; pop es; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00081f0b: add dh, byte ptr [edx + ebx*4 - 0x17]; ret; 
0x00129f85: add dh, byte ptr [esi + 0x28]; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x000deccb: add dh, byte ptr [esi + 0xa]; mov eax, edx; ret; 
0x000907c3: add dh, byte ptr [esi + 0xa]; ret; 
0x0009cff3: add dh, byte ptr [esp + edi*4 + 0x5b]; pop esi; ret; 
0x0009187a: add dh, byte ptr [esp - 0x77]; ret 0xe283; 
0x00153ff6: add dh, ch; jmp dword ptr [esi - 0x70]; 
0x000fdfd2: add dh, dh; add al, 0x42; add dword ptr [esi + ecx - 0x77], esi; ret; 
0x001ac46f: add dh, dh; les eax, ptr [ecx]; jne 0x1ac490; lea eax, [ecx + 0xc]; ret; 
0x001aa308: add dh, dh; les eax, ptr [edx]; jne 0x1aa3a0; lea eax, [edi - 8]; pop edi; ret; 
0x001aae88: add dh, dh; les eax, ptr [edx]; jne 0x1aaf20; lea eax, [ecx + 8]; ret; 
0x001aa331: add dh, dh; les esp, ptr [eax]; jne 0x1aa3d0; lea eax, [edi - 4]; pop edi; ret; 
0x001aaeb1: add dh, dh; les esp, ptr [eax]; jne 0x1aaf50; lea eax, [ecx + 0xc]; ret; 
0x0007ca97: add dh, dh; pop es; add dword ptr [edi], ecx; inc ebp; ret 0xec83; 
0x001b2d0f: add dh, dh; ret 0x7407; 
0x0007be2f: add dh, dh; ret 0x7420; 
0x001a92ed: add dh, dh; ret 0x7501; 
0x00031ff5: add dh, dh; ret 0x7503; 
0x000bb92f: add dh, dh; ret 0x7510; 
0x0013cb3f: add dh, dh; ret 0x7520; 
0x00100e54: add dh, dh; ret 0x7540; 
0x0005e624: add dh, dh; ret 0xf01; 
0x0009b0b3: add dh, dh; ret 0xf02; 
0x00032535: add dh, dh; ret 0xf03; 
0x0007abd6: add dh, dh; ret 0xf04; 
0x0002a8d2: add dh, dh; ret 0xf08; 
0x001ac361: add dh, dh; ret 0xf0f; 
0x0005ceee: add dh, dh; ret 0xf10; 
0x0010d4ec: add dh, dh; ret 0xf20; 
0x0005c25c: add dh, dh; ret 0xf40; 
0x0005e790: add dh, dh; ret 0xf50; 
0x0010d4f5: add dh, dh; ret 0xf80; 
0x000297c2: add dh, dh; ret; 
0x000f15e2: add dh, dh; test dword ptr [edx + edi*8 - 1], eax; call dword ptr [eax]; 
0x0015f2fe: add dl, 0x5f; stc; call dword ptr [eax - 1]; 
0x00193e29: add dl, 0x89; cli; jmp dword ptr [esi - 0x70]; 
0x0019ce29: add dl, 0xf9; stc; jmp dword ptr [esi - 0x70]; 
0x00093fdf: add dl, bh; dec dword ptr [ebx - 0x7872dbc4]; clc; test cl, bh; call dword ptr [eax + 0x68]; 
0x00093fbd: add dl, bh; dec dword ptr [ebx - 0x7872dbc4]; clc; test cl, bh; call dword ptr [eax - 0x73]; 
0x00091517: add dl, byte ptr [eax + 0x5f5bc031]; ret; 
0x00122a3b: add dl, byte ptr [eax + eax]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0010bd1f: add dl, byte ptr [eax - 0x18]; xor byte ptr [ecx + esi*8 - 1], 0x83; les ebx, ptr [eax]; pop ebx; ret; 
0x0016f729: add dl, byte ptr [ebx - 1]; adc byte ptr [ebx - 0x3b7cfbbd], cl; adc al, 0x53; call dword ptr [eax + 0x10]; 
0x000eb1a7: add dl, byte ptr [esi]; add byte ptr [eax], al; add bl, ch; ret; 
0x0003c73f: add dl, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; pop esi; ret; 
0x0003d17f: add dl, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; ret; 
0x0003c6df: add dl, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x00126cd7: add dl, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0007c2de: add dl, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x000a5b3f: add dl, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0014abef: add dword ptr [0x8beb0574], ebp; lea esi, [esi]; xor eax, eax; ret; 
0x00097813: add dword ptr [0xa30f0000], 0xe9ac73c2; cmp dh, 0xff; dec dword ptr [ebp - 0x678e779]; call dword ptr [eax - 0x73]; 
0x001b346d: add dword ptr [bx + si], eax; add byte ptr [ecx + 0x7c89193c], cl; sbb dword ptr [ebx + eax*4], eax; ret; 
0x0009f6da: add dword ptr [eax + 0x115], edi; call dword ptr gs:[0x10]; 
0x0009fdfb: add dword ptr [eax + 0x116], edi; call dword ptr gs:[0x10]; 
0x0017cdd8: add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x0017cdfc: add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x000c2ed4: add dword ptr [eax + 0x2b], eax; inc esp; and al, 4; ret; 
0x000fdbe1: add dword ptr [eax + 0x3f], -7; call dword ptr [eax + 0x55]; 
0x0005af4e: add dword ptr [eax + 0x50fff930], 0xfd9117e8; jmp dword ptr [esi - 0x70]; 
0x0012727d: add dword ptr [eax + 0x52], -7; call dword ptr [eax + 0x55]; 
0x0008b58e: add dword ptr [eax + 0x56], edx; call dword ptr [ebp + 0xc]; 
0x000c334b: add dword ptr [eax + 0x56], edx; lea eax, [esp + 0x40]; push eax; push dword ptr [edi]; call ebx; 
0x000bfe14: add dword ptr [eax + 0x5bf88902], ecx; pop edi; ret; 
0x000c2f62: add dword ptr [eax + 0x5bf88927], ecx; pop esi; pop edi; ret; 
0x000c294b: add dword ptr [eax + 0x5d], eax; pop ebx; pop esi; pop edi; ret; 
0x000b5a71: add dword ptr [eax + 0x5f028d02], ecx; ret; 
0x000c2196: add dword ptr [eax + 0x5f], eax; pop esi; ret; 
0x000aa2cb: add dword ptr [eax + 0x5f], eax; ret; 
0x000b16b1: add dword ptr [eax + 0x5ff88902], ecx; ret; 
0x0009947d: add dword ptr [eax + 0x65], esi; mov eax, dword ptr [0x68]; mov dword ptr [edx + 0x1c], eax; xor eax, eax; pop ebx; ret; 
0x0018c4c9: add dword ptr [eax + 0xf0], edi; mov ecx, 1; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x00174a05: add dword ptr [eax + 1], edi; sbb eax, -1; add esp, 0xc; ret; 
0x0005173b: add dword ptr [eax + 2], 0; add byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; aad 1; ret 0xd889; 
0x00042894: add dword ptr [eax + 2], edi; bsr ecx, ecx; shl eax, cl; ret; 
0x00042864: add dword ptr [eax + 2], edi; movzx ecx, cl; bsr ecx, ecx; shl eax, cl; ret; 
0x00042945: add dword ptr [eax + 2], edi; movzx ecx, cx; bsr ecx, ecx; shl eax, cl; ret; 
0x00141577: add dword ptr [eax + 2], edi; ret; 
0x00152194: add dword ptr [eax + 8], 1; je 0x1521bd; add esp, 0xc; ret; 
0x000fa8df: add dword ptr [eax + eax*8 - 0x3fce328b], eax; ret; 
0x001418ed: add dword ptr [eax + eax], -0x7f; ret; 
0x0019be72: add dword ptr [eax + eax], eax; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000ecc20: add dword ptr [eax + eax], eax; or byte ptr [edi], 0xa3; ret 0x830f; 
0x0012390f: add dword ptr [eax + eax], ecx; add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; ret; 
0x00122a69: add dword ptr [eax + eax], edx; mov ebp, dword ptr [eax + edi]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000a8f75: add dword ptr [eax + ebp*8 - 0x7d], esi; ret 0x8b01; 
0x0013478a: add dword ptr [eax + ebx*2], 1; pop ebx; ret; 
0x000c5f02: add dword ptr [eax - 0x6bf0d005], eax; ret; 
0x0009a7c9: add dword ptr [eax - 0x73], edx; test dword ptr [edx + edi*4 - 0x1b], ebp; call dword ptr [eax - 0x73]; 
0x0014cf50: add dword ptr [eax - 0x7bf0c406], eax; ret 1; 
0x000d2c56: add dword ptr [eax], -0x62; stc; call dword ptr [eax - 0x73]; 
0x000c69b3: add dword ptr [eax], 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + ebx*4], esp; stc; call dword ptr [eax - 0x18]; 
0x0006348a: add dword ptr [eax], 0; add byte ptr [ecx], al; ret; 
0x00039f01: add dword ptr [eax], 0x46; stc; dec dword ptr [edi]; inc ebp; call 0x2b6f6; jmp dword ptr [esi - 0x70]; 
0x00115451: add dword ptr [eax], 0xa30f8000; ret 0xdc73; 
0x000982a2: add dword ptr [eax], 0xf6310000; mov edx, 0x7fffffff; mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x0008fa54: add dword ptr [eax], 0xf6310000; mov edx, 1; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x00124085: add dword ptr [eax], eax; add ah, bl; mov al, 0x94; ret 0xfff9; 
0x00139076: add dword ptr [eax], eax; add al, ch; ret 0xf063; 
0x0015f7ad: add dword ptr [eax], eax; add bh, bh; je 0x15f7d7; push dword ptr fs:[esp + 0x50]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x0005b09e: add dword ptr [eax], eax; add bh, bh; xor al, ch; sbb byte ptr [eax + eax + 0x1cc48300], dh; ret; 
0x0014fc0e: add dword ptr [eax], eax; add bh, dh; ret 0; 
0x000c261f: add dword ptr [eax], eax; add bh, dh; ret 3; 
0x000e75fd: add dword ptr [eax], eax; add bh, dh; ror dword ptr [ebp + 0x2dd1c], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0002ab21: add dword ptr [eax], eax; add bl, ch; fisttp dword ptr [ebx - 0x72c7db84]; xchg dword ptr [edx + esi*2 - 7], esp; call dword ptr [eax - 0x73]; 
0x00175a3b: add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; 
0x00175a3b: add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x0003c7e9: add dword ptr [eax], eax; add byte ptr [eax + 0xae], bh; mov esi, 8; lea edx, [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x0003c88c: add dword ptr [eax], eax; add byte ptr [eax + 0xae], bh; mov esi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00095371: add dword ptr [eax], eax; add byte ptr [eax + 0xf0], bh; xor ecx, ecx; xor esi, esi; call dword ptr gs:[0x10]; 
0x000b7a4e: add dword ptr [eax], eax; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x00031d1f: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; adc byte ptr [esp + ebp], 0xf9; call dword ptr [eax - 0x18]; 
0x00151f29: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; add byte ptr [eax], 0xb0; stc; call dword ptr [eax - 0x18]; 
0x0005dfd8: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; add eax, 0x7a; stc; call dword ptr [eax - 0x18]; 
0x0014bf19: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; add esp, 0x5b; stc; call dword ptr [eax - 0x18]; 
0x00031d44: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; cmp bh, 0x2b; stc; call dword ptr [eax - 0x18]; 
0x00157301: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; or byte ptr [ecx + 0x5e], 0xf9; call dword ptr [eax - 0x18]; 
0x00152f05: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; or dword ptr [ecx + esi*4], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0014757c: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; or dword ptr [ecx], 0x5a; stc; call dword ptr [eax - 0x18]; 
0x00178b3e: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; sbb dword ptr [ecx + 0x65], -7; call dword ptr [eax + 0x6a]; 
0x00152ace: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; sub dword ptr [ecx], 0x5d; stc; call dword ptr [eax - 0x18]; 
0x00096f54: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; test dword ptr [ebp + eax*4 - 7], ecx; call dword ptr [eax - 0x18]; 
0x0009713e: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; test dword ptr [edx + 0x40], esi; stc; call dword ptr [eax - 0x18]; 
0x0002b7d4: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax + 0x71], dh; stc; call dword ptr [eax - 0x18]; 
0x00095644: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [ebp + eax*4 - 7], cl; call dword ptr [eax - 0x18]; 
0x00027565: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [ebx + 0x29], bl; stc; call dword ptr [eax - 0x18]; 
0x0009561c: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [edx + 0x40], dh; stc; call dword ptr [eax - 0x18]; 
0x00029b3c: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [edx], al; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x00027595: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [esi + 0x29], cl; stc; call dword ptr [eax - 0x18]; 
0x0002c492: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dh, cl; sub bh, cl; call dword ptr [eax - 0x18]; 
0x00088a85: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dl, dl; stc; call dword ptr [eax - 0x18]; 
0x0002ab7f: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + 0x71], ecx; stc; call dword ptr [eax - 0x18]; 
0x0002abe8: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + 0x71], esi; stc; call dword ptr [eax - 0x18]; 
0x00138e92: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax - 0x59], esi; stc; call dword ptr [eax - 0x18]; 
0x0002ab5c: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ebx; jno 0x2ab5e; call dword ptr [eax - 0x18]; 
0x0002b75d: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ebx; jno 0x2b75f; call dword ptr [eax - 0x18]; 
0x0002cdfc: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ebx; jno 0x2cdfe; call dword ptr [eax - 0x18]; 
0x0002da4c: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ebx; jno 0x2da4e; call dword ptr [eax - 0x18]; 
0x0002e1de: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ebx; jno 0x2e1e0; call dword ptr [eax - 0x18]; 
0x0002edb2: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ebx; jno 0x2edb4; call dword ptr [eax - 0x18]; 
0x0016ba66: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx], ebx; arpl cx, di; call dword ptr [eax - 0x18]; 
0x00094016: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx], ecx; inc eax; stc; call dword ptr [eax - 0x18]; 
0x000275b9: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [edi], edi; sub ecx, edi; call dword ptr [eax - 0x18]; 
0x0002ab39: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg eax, ebp; jo 0x2ab3b; call dword ptr [eax - 0x18]; 
0x0002b886: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg eax, ebp; jo 0x2b888; call dword ptr [eax - 0x18]; 
0x0002ce5c: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg eax, ebp; jo 0x2ce5e; call dword ptr [eax - 0x18]; 
0x0002da84: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg eax, ebp; jo 0x2da86; call dword ptr [eax - 0x18]; 
0x0002e23e: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg eax, ebp; jo 0x2e240; call dword ptr [eax - 0x18]; 
0x0002edea: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg eax, ebp; jo 0x2edec; call dword ptr [eax - 0x18]; 
0x0016ba17: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg eax, ecx; mov ch, 0xf9; call dword ptr [eax - 0x18]; 
0x00094038: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg edi, ebx; aas; stc; call dword ptr [eax - 0x18]; 
0x00155f51: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg edx, edi; pop ebp; stc; call dword ptr [eax - 0x18]; 
0x0002a0af: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg esi, ecx; sub bh, cl; call dword ptr [eax - 0x18]; 
0x000310aa: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg esp, ecx; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x00093f8e: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg esp, edx; dec eax; stc; call dword ptr [eax - 0x18]; 
0x00031d98: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xor cl, 0x2b; stc; call dword ptr [eax - 0x18]; 
0x000963ad: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xor dword ptr [edx + 0x40], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00115b5f: add dword ptr [eax], eax; add byte ptr [eax - 0x749af732], al; sub eax, 0x14; mov dword ptr [esp + 0x18c], ebp; mov ebp, dword ptr [esp + 0x1b8]; call dword ptr gs:[0x10]; 
0x00065b02: add dword ptr [eax], eax; add byte ptr [eax - 0x7bf08006], al; ret 1; 
0x0014fb02: add dword ptr [eax], eax; add byte ptr [eax], al; add al, byte ptr [eax]; add byte ptr [edi], cl; lahf; ret 0xd009; 
0x000799f8: add dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0008fa5b: add dword ptr [eax], eax; add byte ptr [eax], al; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x00148ab5: add dword ptr [eax], eax; add byte ptr [eax], al; add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x0005b738: add dword ptr [eax], eax; add byte ptr [eax], al; add esp, 0xc; ret; 
0x0008cd54: add dword ptr [eax], eax; add byte ptr [eax], al; add esp, 4; pop ebx; pop esi; ret; 
0x001265ca: add dword ptr [eax], eax; add byte ptr [eax], al; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00124b94: add dword ptr [eax], eax; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0009f339: add dword ptr [eax], eax; add byte ptr [eax], al; call 0x9f2a0; mov dword ptr [esp], esi; call ebx; 
0x00023281: add dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000fb2ae: add dword ptr [eax], eax; add byte ptr [eax], al; cmp dword ptr [ecx + edx], 0x26; je 0xfb2c2; mov eax, 0xffffffff; ret; 
0x0019f3b1: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x19f3b9; neg eax; ret; 
0x001a0bf1: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x1a0bf9; neg eax; pop ebp; ret; 
0x001a5ff1: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x1a5ff9; neg eax; ret; 
0x001a62e1: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x1a62e9; neg eax; pop ebp; ret; 
0x001a64a1: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x1a64a9; neg eax; ret; 
0x001a6f88: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x1a6f90; neg eax; ret; 
0x001a81f9: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x1a8201; neg eax; ret; 
0x001a9872: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x1a987a; neg eax; ret; 
0x001a7e87: add dword ptr [eax], eax; add byte ptr [eax], al; jg 0x1a7e90; neg eax; ret; 
0x001a81b2: add dword ptr [eax], eax; add byte ptr [eax], al; jg 0x1a81c0; neg eax; ret; 
0x001ac2b2: add dword ptr [eax], eax; add byte ptr [eax], al; jg 0x1ac2c0; neg eax; ret; 
0x000d97d1: add dword ptr [eax], eax; add byte ptr [eax], al; jg 0xd97d9; neg eax; ret; 
0x00070b66: add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x000644a5: add dword ptr [eax], eax; add byte ptr [eax], al; jmp edx; 
0x00186dec: add dword ptr [eax], eax; add byte ptr [eax], al; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0017cafa: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0xc], edx; mov eax, ecx; pop ebx; ret; 
0x0017caba: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0xc], edx; mov eax, ecx; ret; 
0x00170679: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x0017ca41: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [ecx + 0x14], edx; ret; 
0x0009dff3: add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00157231: add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, ecx; ret; 
0x00086829: add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, edx; ret; 
0x000704af: add dword ptr [eax], eax; add byte ptr [eax], al; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x00092f0d: add dword ptr [eax], eax; add byte ptr [eax], al; mov ebx, edi; call dword ptr gs:[0x10]; 
0x0008fa20: add dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x000c2be8: add dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, 0xffffffff; cmovb eax, ecx; ret; 
0x00122d3f: add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0006461f: add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; jmp edx; 
0x0006449b: add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; mov dword ptr [esp + 0x10], 1; jmp edx; 
0x0006515f: add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; mov dword ptr [esp + 0x44], 0; jmp edx; 
0x0008f925: add dword ptr [eax], eax; add byte ptr [eax], al; mov edx, 1; call dword ptr gs:[0x10]; 
0x00179a65: add dword ptr [eax], eax; add byte ptr [eax], al; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x00023272: add dword ptr [eax], eax; add byte ptr [eax], al; mov esi, 8; mov dword ptr [ebp + 0x137c], 1; call dword ptr gs:[0x10]; 
0x000d9843: add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; pop esi; mov eax, ecx; ret; 
0x00152ba9: add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; pop esi; mov eax, edx; ret; 
0x0007cac5: add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x0005b854: add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0012933b: add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; ret; 
0x00053c59: add dword ptr [eax], eax; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x0017ad36: add dword ptr [eax], eax; add byte ptr [eax], al; push 0; push edi; call dword ptr [eax + 0x14]; 
0x0008f2e0: add dword ptr [eax], eax; add byte ptr [eax], al; push ebx; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000605b6: add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x00174a07: add dword ptr [eax], eax; add byte ptr [eax], al; sbb eax, -1; add esp, 0xc; ret; 
0x000a0730: add dword ptr [eax], eax; add byte ptr [eax], al; sub esp, 0x28; mov edi, dword ptr [esp + 0x3c]; lea ecx, [ebp - 0x722d4]; call dword ptr gs:[0x10]; 
0x000fb5a4: add dword ptr [eax], eax; add byte ptr [eax], al; test ecx, ecx; js 0xfb5b0; ret; 
0x00091317: add dword ptr [eax], eax; add byte ptr [eax], al; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0014efe4: add dword ptr [eax], eax; add byte ptr [eax], al; xor eax, 1; pop ebx; ret; 
0x0009a5d6: add dword ptr [eax], eax; add byte ptr [eax], al; xor eax, eax; ret; 
0x00024db6: add dword ptr [eax], eax; add byte ptr [eax], al; xor ebx, ebx; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x00042921: add dword ptr [eax], eax; add byte ptr [eax], al; xor edx, edx; pop ebx; ret; 
0x00097a08: add dword ptr [eax], eax; add byte ptr [eax], al; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00091349: add dword ptr [eax], eax; add byte ptr [eax], al; xor esi, esi; call dword ptr gs:[0x10]; 
0x000915d9: add dword ptr [eax], eax; add byte ptr [eax], al; xor esi, esi; lea ebx, [edi + eax + 0x28]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0009180e: add dword ptr [eax], eax; add byte ptr [eax], al; xor esi, esi; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x00091677: add dword ptr [eax], eax; add byte ptr [eax], al; xor esi, esi; mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0018c4d0: add dword ptr [eax], eax; add byte ptr [eax], al; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x00091e30: add dword ptr [eax], eax; add byte ptr [eax], al; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000c2d58: add dword ptr [eax], eax; add byte ptr [eax], cl; leave; jne 0xc2d61; xor eax, eax; ret; 
0x0014ae58: add dword ptr [eax], eax; add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x14ae8d; add esp, 0x11c; ret; 
0x000c45ab: add dword ptr [eax], eax; add byte ptr [ebp + 0x3ce892], cl; add byte ptr [edi], cl; inc esp; ret 0x8b65; 
0x00034871: add dword ptr [eax], eax; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x00115d5f: add dword ptr [eax], eax; add byte ptr [ebp - 0x47d3dbac], cl; sub al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00157801: add dword ptr [eax], eax; add byte ptr [ebp - 0x64c8f7a], cl; call dword ptr [eax - 0x73]; 
0x00024f93: add dword ptr [eax], eax; add byte ptr [ebp - 0x6989380], cl; call dword ptr [eax + 0x6a]; 
0x00093c1e: add dword ptr [eax], eax; add byte ptr [ebp - 0x6c05b79], cl; call dword ptr [eax - 0x73]; 
0x00092b29: add dword ptr [eax], eax; add byte ptr [ebp - 0x6c09579], cl; call dword ptr [eax - 0x73]; 
0x0004776f: add dword ptr [eax], eax; add byte ptr [ebp - 0x6cfc179], cl; call dword ptr [eax - 0x73]; 
0x0004e811: add dword ptr [eax], eax; add byte ptr [ebp - 0x6cfcb79], cl; call dword ptr [eax - 0x73]; 
0x00028f4c: add dword ptr [eax], eax; add byte ptr [ebp - 0x6d54579], cl; call dword ptr [eax - 0x73]; 
0x00029b7c: add dword ptr [eax], eax; add byte ptr [ebp - 0x6d5457a], cl; call dword ptr [eax - 0x73]; 
0x000288a2: add dword ptr [eax], eax; add byte ptr [ebp - 0x6d5457d], cl; call dword ptr [eax - 0x73]; 
0x000e8c5c: add dword ptr [eax], eax; add byte ptr [ebp - 0x75], ah; or eax, 0x14; mov dword ptr [esp + 0x13c], ecx; mov ecx, dword ptr [esp + 0x164]; call dword ptr gs:[0x10]; 
0x000a9393: add dword ptr [eax], eax; add byte ptr [ebp - 0xaa9a37e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x0013d603: add dword ptr [eax], eax; add byte ptr [ebp - 0xaa9b37e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x000a93e3: add dword ptr [eax], eax; add byte ptr [ebp - 0xaacc37e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x0013d653: add dword ptr [eax], eax; add byte ptr [ebp - 0xaacd37e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x000a8b63: add dword ptr [eax], eax; add byte ptr [ebp - 0xaafe37e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x0013d5b3: add dword ptr [eax], eax; add byte ptr [ebp - 0xaaff37e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x0012f081: add dword ptr [eax], eax; add byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x12f098; ret; 
0x00184fb6: add dword ptr [eax], eax; add byte ptr [ebx + 0x1442474], cl; ret; 
0x000e8c6a: add dword ptr [eax], eax; add byte ptr [ebx + 0x164248c], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00115b70: add dword ptr [eax], eax; add byte ptr [ebx + 0x1b824ac], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000605ad: add dword ptr [eax], eax; add byte ptr [ebx + 0x28907c8], al; mov eax, 1; ret; 
0x00149d36: add dword ptr [eax], eax; add byte ptr [ebx + 0x29042454], cl; fidivr dword ptr [ecx]; ret 0x8e0f; 
0x0011fcd2: add dword ptr [eax], eax; add byte ptr [ebx + 0x3108245c], cl; leave; call dword ptr gs:[0x10]; 
0x000f2b03: add dword ptr [eax], eax; add byte ptr [ebx + 0x348d08ec], al; test dword ptr [eax], ecx; add byte ptr [eax], al; add byte ptr [ebx - 0x46f63], cl; call dword ptr [esi + 0x51]; 
0x001365d5: add dword ptr [eax], eax; add byte ptr [ebx + 0x390c2444], cl; ret 0x830f; 
0x00186916: add dword ptr [eax], eax; add byte ptr [ebx + 0x3a080], cl; add byte ptr [ebp - 0x76f28b40], al; push esp; and al, 4; jmp dword ptr [eax + 0x30]; 
0x00176b3e: add dword ptr [eax], eax; add byte ptr [ebx + 0x438b08ec], al; push eax; push dword ptr [esp + 0x30]; push esi; call dword ptr [eax + 4]; 
0x0007b2a0: add dword ptr [eax], eax; add byte ptr [ebx + 0x448d08ec], al; and al, 8; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x00087fdc: add dword ptr [eax], eax; add byte ptr [ebx + 0x448d08ec], al; and al, 8; push eax; push esi; call dword ptr [edi + 0x48]; 
0x000fec5a: add dword ptr [eax], eax; add byte ptr [ebx + 0x48b9f14], cl; and al, 0x29; ret 0x5689; 
0x000d3d09: add dword ptr [eax], eax; add byte ptr [ebx + 0x48db055], cl; test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x328b; 
0x0015929d: add dword ptr [eax], eax; add byte ptr [ebx + 0x4c8d01f8], al; add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x448b; 
0x001211c4: add dword ptr [eax], eax; add byte ptr [ebx + 0x518d0cc4], al; call dword ptr [edx + 0x56]; 
0x00034038: add dword ptr [eax], eax; add byte ptr [ebx + 0x548b0204], cl; and al, 4; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x000c3b7e: add dword ptr [eax], eax; add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x00083bbe: add dword ptr [eax], eax; add byte ptr [ebx + 0x5e5b20c4], al; pop edi; ret; 
0x000c3254: add dword ptr [eax], eax; add byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x0003c87d: add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00125315: add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0003c63c: add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; ret; 
0x0003cb92: add dword ptr [eax], eax; add byte ptr [ebx + 0x5f], bl; ret; 
0x0008c746: add dword ptr [eax], eax; add byte ptr [ebx + 0x6a04ec], al; push 0; push esi; call dword ptr [ebp + 0x2c]; 
0x0018a121: add dword ptr [eax], eax; add byte ptr [ebx + 0x6a08ec], al; push esi; call dword ptr [ebx + 8]; 
0x0007e74b: add dword ptr [eax], eax; add byte ptr [ebx + 0x75ff04ec], al; adc al, 0xff; jne 0x7e763; push esi; call dword ptr [ebx + 0x2c]; 
0x00032ba8: add dword ptr [eax], eax; add byte ptr [ebx + 0x8b0204], cl; mov eax, dword ptr [eax + 0x54]; ret; 
0x0008e963: add dword ptr [eax], eax; add byte ptr [ebx + 0x9080], cl; add cl, al; call 0x1e96c7d; mov dword ptr [edx + 0x1ac8], eax; ret; 
0x0008867a: add dword ptr [eax], eax; add byte ptr [ebx + 0x9202444], cl; ret; 
0x00114f69: add dword ptr [eax], eax; add byte ptr [ebx + 0xbc24b4], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0005ad24: add dword ptr [eax], eax; add byte ptr [ebx + 0xd182444], cl; add byte ptr [eax], 0x41; add byte ptr [eax - 0x73], dl; and byte ptr [edi + 0x30], 0xf9; call dword ptr [eax - 0x18]; 
0x00115c17: add dword ptr [eax], eax; add byte ptr [ebx + 0xf14247c], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc10c; 
0x00124229: add dword ptr [eax], eax; add byte ptr [ebx + 0xfcb3], cl; add bh, bh; xor byte ptr [ebp - 0x6a6a47d], cl; call dword ptr [eax - 1]; 
0x0012e38a: add dword ptr [eax], eax; add byte ptr [ebx + 3], bh; mov ecx, 0x7fffffff; mov esi, 5; call dword ptr gs:[0x10]; 
0x00086293: add dword ptr [eax], eax; add byte ptr [ebx - 0x137c3bbb], cl; or al, 0x56; call dword ptr [eax + 0x30]; 
0x00177082: add dword ptr [eax], eax; add byte ptr [ebx - 0x137cafb9], cl; or al, 0x55; call dword ptr [eax + 0x10]; 
0x00088e0f: add dword ptr [eax], eax; add byte ptr [ebx - 0x137cdfaa], cl; add al, 0x29; ret 0x5052; 
0x0010d846: add dword ptr [eax], eax; add byte ptr [ebx - 0x1477b], cl; jmp dword ptr [ebp - 0x75]; 
0x0013a731: add dword ptr [eax], eax; add byte ptr [ebx - 0x17701500], cl; ret; 
0x000d33e2: add dword ptr [eax], eax; add byte ptr [ebx - 0x1f3e4fab], cl; add ch, byte ptr [ecx]; ret 0x28b; 
0x0005865f: add dword ptr [eax], eax; add byte ptr [ebx - 0x361f7b], cl; push dword ptr [ecx]; imul byte ptr [ecx]; ret; 
0x00056767: add dword ptr [eax], eax; add byte ptr [ebx - 0x362743], al; call dword ptr [eax]; 
0x00058930: add dword ptr [eax], eax; add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x00125246: add dword ptr [eax], eax; add byte ptr [ebx - 0x3f7adfc0], cl; cmove eax, edx; ret; 
0x00125762: add dword ptr [eax], eax; add byte ptr [ebx - 0x3f7af3c0], cl; je 0x12576d; ret; 
0x0016a718: add dword ptr [eax], eax; add byte ptr [ebx - 0x41f0d1f4], cl; ret 0x44f6; 
0x0012052c: add dword ptr [eax], eax; add byte ptr [ebx - 0x47abdbb4], cl; sahf; add dword ptr [eax], eax; add byte ptr [edi + 8], bh; call dword ptr gs:[0x10]; 
0x000fc11c: add dword ptr [eax], eax; add byte ptr [ebx - 0x5cf0afa9], cl; ret 0x830f; 
0x00098cec: add dword ptr [eax], eax; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x00121f71: add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; call dword ptr gs:[0x10]; 
0x0011f79f: add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0011f8a5: add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; mov edx, edi; call dword ptr gs:[0x10]; 
0x00111653: add dword ptr [eax], eax; add byte ptr [ebx - 0x6af0fe05], al; ret; 
0x0002b105: add dword ptr [eax], eax; add byte ptr [ebx - 0x72c3db84], cl; xchg esp, ecx; push -7; call dword ptr [eax - 0x73]; 
0x000299ec: add dword ptr [eax], eax; add byte ptr [ebx - 0x72c3db8c], cl; xchg byte ptr [ebx + ebp*2 - 7], ch; call dword ptr [eax - 0x73]; 
0x000a11f7: add dword ptr [eax], eax; add byte ptr [ebx - 0x72c3dbbc], cl; and ah, 0x8a; stc; call dword ptr [eax + 0x6a]; 
0x0002e011: add dword ptr [eax], eax; add byte ptr [ebx - 0x72c7db84], cl; xchg dword ptr [edx + ebp*2], ebp; stc; call dword ptr [eax - 0x73]; 
0x001555f6: add dword ptr [eax], eax; add byte ptr [ebx - 0x72c7dbac], cl; dec eax; add dword ptr [ecx - 0x38cfdbb4], ecx; inc esp; ret 4; 
0x001aafab: add dword ptr [eax], eax; add byte ptr [ebx - 0x73f0ff3e], al; sbb dword ptr [edx], eax; add byte ptr [eax], al; mov eax, ecx; ret; 
0x000e7ceb: add dword ptr [eax], eax; add byte ptr [ebx - 0x76abdbb4], cl; cli; call dword ptr gs:[0x10]; 
0x000e7c88: add dword ptr [eax], eax; add byte ptr [ebx - 0x76abdbb4], cl; cli; mov esi, ebp; call dword ptr gs:[0x10]; 
0x0014017e: add dword ptr [eax], eax; add byte ptr [ebx - 0x76bbdbbc], cl; ret; 
0x000a9ab8: add dword ptr [eax], eax; add byte ptr [ebx - 0x76dfdbbc], cl; shr dword ptr [ecx], cl; ret; 
0x000307d7: add dword ptr [eax], eax; add byte ptr [ebx - 0x7872f714], al; inc esp; je 0x307db; call dword ptr [eax + 0x56]; 
0x000a1a34: add dword ptr [eax], eax; add byte ptr [ebx - 0x7872fb14], al; sbb al, byte ptr [edx - 7]; call dword ptr [eax + 0x53]; 
0x001ab772: add dword ptr [eax], eax; add byte ptr [ebx - 0x79f0bf11], al; ret 1; 
0x0010d1bc: add dword ptr [eax], eax; add byte ptr [ebx - 0x7aebdbac], cl; ror byte ptr [edi], cl; xchg ebp, eax; ret; 
0x001a7682: add dword ptr [eax], eax; add byte ptr [ebx - 0x7bf0fb03], al; ret; 
0x001a7121: add dword ptr [eax], eax; add byte ptr [ebx - 0x7bf0ff07], al; ret; 
0x0014b17d: add dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f314], al; adc ebx, dword ptr [ebx - 7]; call dword ptr [eax - 0x18]; 
0x00156c9c: add dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f314], al; pop ds; pop esi; stc; call dword ptr [eax - 0x73]; 
0x00156c7c: add dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f714], al; les ebx, ptr [ebp - 7]; call dword ptr [eax - 1]; 
0x000afdb5: add dword ptr [eax], eax; add byte ptr [ebx - 0x7cd174c6], cl; ret 0x8304; 
0x0015ccb1: add dword ptr [eax], eax; add byte ptr [ebx - 0x7ce3db8c], cl; ret 0x8301; 
0x001171a5: add dword ptr [eax], eax; add byte ptr [ebx - 0x7ce7dbbc], cl; ret; 
0x0005f35e: add dword ptr [eax], eax; add byte ptr [ebx - 0x7cefdbbc], cl; rol byte ptr [ecx], 0x39; ror byte ptr [edi], 1; pushfd; ret 0xb60f; 
0x000fb3af: add dword ptr [eax], eax; add byte ptr [ebx - 0xa1f7944], cl; clc; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x0007cb99: add dword ptr [eax], eax; add byte ptr [ebx - 0xa8fb14], al; jne 0x7cbab; push esi; call dword ptr [ebx + 0x1c]; 
0x0007de0f: add dword ptr [eax], eax; add byte ptr [ebx - 0xa9fb14], al; jne 0x7de21; push edx; call dword ptr [ebx + 0x1c]; 
0x0003f25d: add dword ptr [eax], eax; add byte ptr [ebx - 0xaef714], al; je 0x3f28b; dec esp; call eax; 
0x0003482c: add dword ptr [eax], eax; add byte ptr [ebx], ah; inc esp; and al, 8; ret; 
0x0009fb7e: add dword ptr [eax], eax; add byte ptr [ecx + 0x24748be9], cl; dec esp; call dword ptr gs:[0x10]; 
0x000ccfe5: add dword ptr [eax], eax; add byte ptr [ecx + 0x39efd3d7], cl; ret; 
0x000db3f3: add dword ptr [eax], eax; add byte ptr [ecx + 0x50302444], cl; mov eax, dword ptr [esp + 0x64]; call eax; 
0x00182b8c: add dword ptr [eax], eax; add byte ptr [ecx + 0x5f5e5bd0], cl; ret; 
0x001358b0: add dword ptr [eax], eax; add byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x001b134e: add dword ptr [eax], eax; add byte ptr [ecx + 0x7c89193c], cl; sbb dword ptr [ebx + eax*4], eax; ret; 
0x00090d46: add dword ptr [eax], eax; add byte ptr [ecx + 0x94c4], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00175f67: add dword ptr [eax], eax; add byte ptr [ecx - 0x12f7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00156c46: add dword ptr [eax], eax; add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x001829aa: add dword ptr [eax], eax; add byte ptr [ecx - 0x1636b], cl; dec dword ptr [ecx - 0x15f7b]; jmp dword ptr [ebp - 0x5f]; 
0x0008dddf: add dword ptr [eax], eax; add byte ptr [ecx - 0x3b7cf3bd], cl; add al, 0x5b; pop esi; ret; 
0x000665cf: add dword ptr [eax], eax; add byte ptr [ecx - 0x56b7b], cl; dec dword ptr [ebp - 0x56b7b]; dec dword ptr [ecx - 0x5fb7b]; call dword ptr [eax - 0x18]; 
0x000a230c: add dword ptr [eax], eax; add byte ptr [ecx - 0x74167609], cl; push eax; or al, 0x8d; inc edx; jmp dword ptr [ecx]; 
0x000a1b13: add dword ptr [eax], eax; add byte ptr [ecx - 0x74207612], cl; dec eax; or al, 0x8d; inc ecx; jmp dword ptr [ecx]; 
0x00131ae5: add dword ptr [eax], eax; add byte ptr [ecx - 0x7605762f], cl; out dx, eax; call dword ptr gs:[0x10]; 
0x0003fdd0: add dword ptr [eax], eax; add byte ptr [ecx - 0x76e7dbbc], cl; ret; 
0x00027bf0: add dword ptr [eax], eax; add byte ptr [ecx - 0x76ff743b], cl; ret 0xce80; 
0x00104a80: add dword ptr [eax], eax; add byte ptr [ecx - 0x7aafdb84], cl; push dword ptr [esp + 0xf]; mov dh, 0x52; sbb al, 0xf6; ret 0xf08; 
0x0010d5a7: add dword ptr [eax], eax; add byte ptr [ecx - 1], bh; call dword ptr gs:[0x10]; 
0x000a944a: add dword ptr [eax], eax; add byte ptr [ecx*4 - 0x942f36e], al; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000aa15a: add dword ptr [eax], eax; add byte ptr [ecx*4 - 0x952736e], al; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0013b725: add dword ptr [eax], eax; add byte ptr [ecx], al; call eax; 
0x000a948a: add dword ptr [eax], eax; add byte ptr [ecx], al; lea edx, [edx - 0xab574]; cmovne eax, edx; ret; 
0x0013d6ba: add dword ptr [eax], eax; add byte ptr [ecx], al; lea edx, [edx - 0xab584]; cmovne eax, edx; ret; 
0x0003a460: add dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x430f; 
0x001555ee: add dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x840f; 
0x0007c89e: add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x000db525: add dword ptr [eax], eax; add byte ptr [ecx], bl; fimul dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0x8902; 
0x00115b8f: add dword ptr [eax], eax; add byte ptr [ecx], dh; fisttp dword ptr [ecx - 0x763e7611]; ret 0xc031; 
0x0003ddc5: add dword ptr [eax], eax; add byte ptr [ecx], dh; sal byte ptr [ecx], cl; div byte ptr [ecx]; jmp dword ptr [ebp - 1]; 
0x000b362d: add dword ptr [eax], eax; add byte ptr [edi + 0x5b], bl; ret; 
0x000d9652: add dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; ret; 
0x00120535: add dword ptr [eax], eax; add byte ptr [edi + 8], bh; call dword ptr gs:[0x10]; 
0x001089f5: add dword ptr [eax], eax; add byte ptr [edi], cl; mov dh, 0x43; add al, 0x89; ret 0xe283; 
0x000c1122: add dword ptr [eax], eax; add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x00115c79: add dword ptr [eax], eax; add byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc10c; 
0x000527e5: add dword ptr [eax], eax; add byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; aad 1; ret 0xd889; 
0x00188bb4: add dword ptr [eax], eax; add byte ptr [edi], cl; xchg ch, dl; add byte ptr [eax], al; add byte ptr [eax - 0x7af0cf06], al; ret; 
0x000db1ca: add dword ptr [eax], eax; add byte ptr [edi], cl; xchg ebp, eax; ret 0xc238; 
0x00083bfa: add dword ptr [eax], eax; add byte ptr [edi], cl; xchg esp, eax; ret 0x9e3b; 
0x0018b38c: add dword ptr [eax], eax; add byte ptr [edi], cl; xchg esp, eax; ret 0xd008; 
0x0007b465: add dword ptr [eax], eax; add byte ptr [edi], cl; xchg esp, eax; ret 0xd009; 
0x001775ca: add dword ptr [eax], eax; add byte ptr [edx + 0x57], dl; call dword ptr [eax + 4]; 
0x000899d1: add dword ptr [eax], eax; add byte ptr [edx + 1], ch; push 0; push 0; push esi; call dword ptr [eax + 0x40]; 
0x00083811: add dword ptr [eax], eax; add byte ptr [edx + 1], ch; push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x00089916: add dword ptr [eax], eax; add byte ptr [edx + 2], ch; push 0; push 0; push esi; call dword ptr [edi + 0x40]; 
0x001374a2: add dword ptr [eax], eax; add byte ptr [edx], al; call dword ptr [ebp + 0x14]; 
0x001375a5: add dword ptr [eax], eax; add byte ptr [edx], al; push eax; call dword ptr [ebp + 0x14]; 
0x001aac8c: add dword ptr [eax], eax; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x0003d594: add dword ptr [eax], eax; add byte ptr [esi + 8], bh; mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x00122e8a: add dword ptr [eax], eax; add byte ptr [esi - 0x77], ah; push eax; push ss; ret; 
0x001ac565: add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0x348d; 
0x001ac505: add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x0004a5c6: add dword ptr [eax], eax; add byte ptr [esi - 0x7b], ah; ror byte ptr [edi], cl; xchg ebp, eax; ret 0xb60f; 
0x0007abc6: add dword ptr [eax], eax; add dh, dh; ret 0xf01; 
0x001a9d26: add dword ptr [eax], eax; add dh, dh; ret 0xf02; 
0x00041615: add dword ptr [eax], eax; add dh, dh; ret 0xf03; 
0x001a9d37: add dword ptr [eax], eax; add dh, dh; ret 0xf04; 
0x0002a8d0: add dword ptr [eax], eax; add dh, dh; ret 0xf08; 
0x001a9ccf: add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x001a9ce0: add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x001a9cf1: add dword ptr [eax], eax; add dh, dh; ret 0xf40; 
0x0005e78e: add dword ptr [eax], eax; add dh, dh; ret 0xf50; 
0x000a468f: add dword ptr [eax], eax; add dh, dh; ret; 
0x000c4d1b: add dword ptr [eax], eax; add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret; 
0x000a8532: add dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x0003e042: add dword ptr [eax], eax; add esp, 0x1c; ret; 
0x00123d1e: add dword ptr [eax], eax; add esp, 0x24; mov eax, esi; pop ebx; pop esi; ret; 
0x0006147e: add dword ptr [eax], eax; add esp, 0x2c; ret; 
0x00060b87: add dword ptr [eax], eax; cmp eax, 1; sbb eax, eax; add esp, 0x1c; ret; 
0x000c2ffa: add dword ptr [eax], eax; dec ecx; jne 0xc2ff8; pop esi; ret; 
0x0008f5f6: add dword ptr [eax], eax; inc eax; add byte ptr [eax], al; ret; 
0x0012b61e: add dword ptr [eax], eax; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x00042212: add dword ptr [eax], eax; xor eax, eax; ret; 
0x000a8f71: add dword ptr [eax], edi; inc esp; adc eax, 0x83e87401; ret 0x8b01; 
0x000ab9f5: add dword ptr [eax], edi; ret; 
0x000c188c: add dword ptr [eax], edx; ret; 
0x000c18ac: add dword ptr [eax], esi; ret; 
0x00084755: add dword ptr [eax], esp; je 0x84768; mov eax, dword ptr [eax + 0x38]; test eax, eax; js 0x84768; ret; 
0x000c189c: add dword ptr [eax], esp; ret; 
0x000acbf0: add dword ptr [ebp + 0x100054c], ecx; ret; 
0x0008c995: add dword ptr [ebp + 0x10], esi; sub edx, dword ptr [eax + 0xc]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x001ac465: add dword ptr [ebp + 0x18], esi; lea eax, [ecx + 4]; ret; 
0x001ac472: add dword ptr [ebp + 0x1b], esi; lea eax, [ecx + 0xc]; ret; 
0x000980a2: add dword ptr [ebp + 0x1b], esi; or dword ptr [eax], 0x40000000; xor eax, eax; ret; 
0x000fb1a4: add dword ptr [ebp + 0x20b8], esp; add byte ptr [edx + 0x40], bh; cmove eax, edx; ret; 
0x001acd32: add dword ptr [ebp + 0x2b], esi; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x001577c2: add dword ptr [ebp + 0x2b], esi; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x001acd1a: add dword ptr [ebp + 0x33], esi; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x0016960e: add dword ptr [ebp + 0x34890177], ecx; and al, 0x84; ror byte ptr [edi], 0x95; ret 0x3a3c; 
0x000c7c6d: add dword ptr [ebp + 0x390775d2], eax; ret; 
0x000475ad: add dword ptr [ebp + 0x390775db], eax; sal dword ptr [ebp - 0x16], 0x83; ret 0x8b01; 
0x00099e00: add dword ptr [ebp + 0x39bc75ff], eax; ret 0xd574; 
0x0009a428: add dword ptr [ebp + 0x45], esi; mov ecx, esi; mov ebx, dword ptr [esp + 0xa0]; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x00149e45: add dword ptr [ebp + 0x508dbf70], ecx; and byte ptr [ebx + 0x420f1afe], al; ret 0xb60f; 
0x0014dd66: add dword ptr [ebp + 0x5c], 0xe850fff9; jmp dword ptr [edx - 0x12]; 
0x000df7a5: add dword ptr [ebp + 0x76c98], ecx; add byte ptr [edi], cl; sahf; ret 0xd329; 
0x0015835a: add dword ptr [ebp + 0xf04004c], ecx; xchg esp, eax; ret 0x448b; 
0x000993d5: add dword ptr [ebp + 8], esi; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00041025: add dword ptr [ebp + eax - 0x18], esi; ret; 
0x0009a738: add dword ptr [ebp + ecx - 0x10], esi; sub dword ptr [ebx + 0xc], 1; pop ebx; pop esi; pop edi; ret; 
0x000ad265: add dword ptr [ebp - 0x13], esi; or byte ptr [ebx], dl; mov eax, esi; pop ebx; pop esi; ret; 
0x00053c54: add dword ptr [ebp - 0x17], esi; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x000af734: add dword ptr [ebp - 0x17], esi; pop ebx; pop esi; pop edi; ret; 
0x0016fd57: add dword ptr [ebp - 0x18], edx; ret 0xfc25; 
0x0009b882: add dword ptr [ebp - 0x1a35e379], ecx; call dword ptr [ebx + 0x50]; 
0x000a7c47: add dword ptr [ebp - 0x1a], esi; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00128dcf: add dword ptr [ebp - 0x27], esi; mov eax, esi; pop ebx; pop esi; ret; 
0x000a6e27: add dword ptr [ebp - 0x2a], esi; sub esp, 0xc; push eax; call edx; 
0x00099495: add dword ptr [ebp - 0x2e], esi; mov eax, 0x10; pop ebx; ret; 
0x000a55cd: add dword ptr [ebp - 0x357bf040], eax; add eax, dword ptr [eax]; add byte ptr [ebp + 0x94c87], cl; add byte ptr [ecx - 0x9efdbbc], cl; ret 0xf04; 
0x00042eb0: add dword ptr [ebp - 0x3dbaf040], eax; ret; 
0x0006c7c4: add dword ptr [ebp - 0x4c], -1; dec dword ptr [ebx - 0x5d343]; dec dword ptr [ecx + 0x29f829f0]; ret; 
0x00054050: add dword ptr [ebp - 0x6df0fbb1], ecx; ret 0x789; 
0x0012c7b5: add dword ptr [ebp - 0x74e98740], eax; inc esi; add al, 0x89; ret 0xe083; 
0x001418b3: add dword ptr [ebp - 0x76fdd7bc], ecx; ret; 
0x001417db: add dword ptr [ebp - 0x76fde7bc], ecx; ret; 
0x000b9474: add dword ptr [ebp - 0x7af0fe81], ecx; mov byte ptr [0x5f000009], al; pop esi; pop ebx; ret; 
0x000b34b8: add dword ptr [ebp - 0x7af0feb6], ecx; add eax, dword ptr ds:[eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x0013a7d3: add dword ptr [ebp - 0x7c138a40], eax; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0012444c: add dword ptr [ebp - 0x7c908a0a], eax; in al, dx; or byte ptr [ebp - 0x6d1a67d], cl; call dword ptr [eax + 0x6a]; 
0x000a93bb: add dword ptr [ebp - 0xa1fe36e], ecx; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x0013d62b: add dword ptr [ebp - 0xa1ff36e], ecx; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x000a940b: add dword ptr [ebp - 0xa2fd36e], ecx; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x0013d67b: add dword ptr [ebp - 0xa2fe36e], ecx; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x000a8b8b: add dword ptr [ebp - 0xa3fb36e], ecx; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x0013d5db: add dword ptr [ebp - 0xa3fc36e], ecx; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x000a948d: add dword ptr [ebp - 0xab5736e], ecx; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0013d6bd: add dword ptr [ebp - 0xab5836e], ecx; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x001337a8: add dword ptr [ebx + 0x18], edi; call dword ptr gs:[0x10]; 
0x0008cd38: add dword ptr [ebx + 0x1a78], 1; add esp, 4; pop ebx; pop esi; ret; 
0x00034580: add dword ptr [ebx + 0x24408b00], ecx; mov eax, dword ptr [eax + edx*4]; ret; 
0x000ac192: add dword ptr [ebx + 0x2930244c], ecx; ret; 
0x00034540: add dword ptr [ebx + 0x2c408b00], ecx; mov eax, dword ptr [eax + edx*4]; ret; 
0x001871ae: add dword ptr [ebx + 0x33ff04ec], 0x74ff36ff; and al, 0x10; mov eax, dword ptr [esp + 0x18]; call eax; 
0x000c026f: add dword ptr [ebx + 0x3888ffd8], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x00150b79: add dword ptr [ebx + 0x3948244c], ecx; ret 0x830f; 
0x00150128: add dword ptr [ebx + 0x3948245c], ecx; ret; 
0x00150da1: add dword ptr [ebx + 0x3948245c], ecx; sal dword ptr [ebx + 0x3f], 0x39; ret; 
0x0004463b: add dword ptr [ebx + 0x394c2444], ecx; ret 0x8d0f; 
0x0009b129: add dword ptr [ebx + 0x458d1470], ecx; inc dword ptr [ebx - 0x69f00208]; ret; 
0x000a7e45: add dword ptr [ebx + 0x4d2b0cc4], eax; add byte ptr [ecx], ch; ret 0xd801; 
0x0017410c: add dword ptr [ebx + 0x50572048], ecx; call dword ptr [ecx + 8]; 
0x000b7585: add dword ptr [ebx + 0x5b5fffd8], eax; ret; 
0x0005abf3: add dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x00134a5a: add dword ptr [ebx + 0x5e5b0cc4], eax; pop edi; pop ebp; ret; 
0x00084500: add dword ptr [ebx + 0x5e5b10c4], eax; pop edi; ret; 
0x0009a73f: add dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x000abeb5: add dword ptr [ebx + 0x5e], ebx; ret; 
0x00090878: add dword ptr [ebx + 0x5f5e04c4], eax; ret; 
0x00147f11: add dword ptr [ebx + 0x74ff0cec], 0x24; and al, ch; ret 0xa6; 
0x0004057e: add dword ptr [ebx + 0xf382454], ecx; inc ebp; ret; 
0x000b5c73: add dword ptr [ebx + 0xf660741], ecx; adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000b1893: add dword ptr [ebx + 0xf660741], ecx; adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000b5c93: add dword ptr [ebx + 0xf660841], ecx; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000b18b3: add dword ptr [ebx + 0xf660841], ecx; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x00148abb: add dword ptr [ebx + 2], edi; call dword ptr gs:[0x10]; 
0x001373c8: add dword ptr [ebx - 0x2b], esi; add esp, 4; pop ebx; pop esi; ret; 
0x000928f2: add dword ptr [ebx - 0x2ff60120], eax; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x000597da: add dword ptr [ebx - 0x362743], eax; call dword ptr [eax]; 
0x001715ac: add dword ptr [ebx - 0x39d6f3bd], ecx; push esi; push eax; push dword ptr [ebx]; call dword ptr [ebx + 8]; 
0x000fa8dc: add dword ptr [ebx - 0x3f7bfe3e], eax; jne 0xfa8b1; xor eax, eax; ret; 
0x0008519b: add dword ptr [ebx - 0x3fcef73c], eax; pop ebx; ret; 
0x0008431d: add dword ptr [ebx - 0x3fcefb3c], eax; pop ebx; pop esi; ret; 
0x00073da7: add dword ptr [ebx - 0x4ef43], eax; call dword ptr [eax]; 
0x000788eb: add dword ptr [ebx - 0x5037b], ecx; dec dword ptr [ecx - 0x52b6b]; inc dword ptr [ecx]; ret; 
0x0006be02: add dword ptr [ebx - 0x5e77b], ecx; dec dword ptr [ecx - 0x59773]; call dword ptr [edx + 0x52]; 
0x001a3187: add dword ptr [ebx - 0x64737474], ecx; idiv edi; mov eax, dword ptr [ebx + eax*4 - 0x86474]; sub eax, ecx; pop ebx; ret; 
0x00038dce: add dword ptr [ebx - 0x69f0f606], eax; ret 0xb60f; 
0x0015dbb0: add dword ptr [ebx - 0x6bf09f02], eax; ret 0x4489; 
0x000a6671: add dword ptr [ebx - 0x72cbdba4], ecx; sbb dword ptr [esi], 0x44; stc; call dword ptr [eax - 0x18]; 
0x00143664: add dword ptr [ebx - 0x72ebdbbc], ecx; sbb ah, 0x2c; stc; call dword ptr [eax + 0x55]; 
0x00155a66: add dword ptr [ebx - 0x72efdb84], ecx; xchg dword ptr [edi + 0x29], esp; stc; call dword ptr [eax + 0x53]; 
0x001441ae: add dword ptr [ebx - 0x72f7dbbc], ecx; sbb ah, 0x2c; stc; call dword ptr [eax + 0x56]; 
0x000a2c2b: add dword ptr [ebx - 0x74f7dbbc], ecx; je 0xa2c57; or al, 0x89; pop edi; or al, 0x89; ret; 
0x000f04e4: add dword ptr [ebx - 0x76ebdbbc], ecx; push ebx; adc al, 0x8d; or byte ptr [ebp + 0x30], 0xf9; call dword ptr [eax - 0x77]; 
0x00145944: add dword ptr [ebx - 0x79f0f008], eax; xchg edx, eax; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x820f; 
0x00037531: add dword ptr [ebx - 0x7ccfdbbc], ecx; ret; 
0x000dfdc8: add dword ptr [ebx - 0x7cdbdbbc], ecx; ret; 
0x00026b24: add dword ptr [ebx - 0x7d], edx; ret; 
0x00053e77: add dword ptr [ebx - 0xa], esi; mov eax, edx; pop ebx; pop esi; ret; 
0x001184a3: add dword ptr [ebx - 0xd7cc7a5], ecx; add dword ptr [ecx], eax; ror byte ptr [ecx + 0x290c245c], cl; ror dword ptr [ecx + 0xf18245c], cl; xchg ebp, eax; ret; 
0x0004d56b: add dword ptr [ebx - 2], ebp; dec dword ptr [ebx - 0x72e7db84]; xchg dword ptr [eax + 0x78], ebx; stc; call dword ptr [eax - 0x73]; 
0x0011ee66: add dword ptr [ebx], -7; call dword ptr [eax - 0x73]; 
0x0018c4c7: add dword ptr [ebx], 1; mov eax, 0xf0; mov ecx, 1; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x000fe135: add dword ptr [ebx], esi; stc; call dword ptr [edx + 0x52]; 
0x000803fc: add dword ptr [ecx + 0x19881472], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x001367a6: add dword ptr [ecx + 0x244c8bda], ecx; sbb al, 0x29; ret 0xca39; 
0x000417e4: add dword ptr [ecx + 0x245489e8], ecx; adc al, 0x83; in al, dx; add al, 0xf; scasd eax, dword ptr es:[edi]; ret; 
0x0002f584: add dword ptr [ecx + 0x2b], -7; call dword ptr [eax - 0x18]; 
0x0014c2ca: add dword ptr [ecx + 0x2c706], ecx; add byte ptr [eax], al; add bl, ch; ret 0x148d; 
0x0015720c: add dword ptr [ecx + 0x31], esi; leave; cmp eax, 2; jne 0x157220; mov eax, ecx; ret; 
0x000b5ae1: add dword ptr [ecx + 0x3418b02], ecx; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; pop edi; ret; 
0x000b5c11: add dword ptr [ecx + 0x3418b02], ecx; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; ret; 
0x000b1701: add dword ptr [ecx + 0x3418b02], ecx; mov dword ptr [edx + 3], eax; mov eax, edi; pop edi; ret; 
0x000b1831: add dword ptr [ecx + 0x3418b02], ecx; mov dword ptr [edx + 3], eax; mov eax, edx; ret; 
0x000b8981: add dword ptr [ecx + 0x3428d02], ecx; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b59b1: add dword ptr [ecx + 0x3428d02], ecx; pop edi; ret; 
0x000b5be1: add dword ptr [ecx + 0x3428d02], ecx; ret; 
0x000b5c01: add dword ptr [ecx + 0x418b6602], ecx; add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; ret; 
0x000b1821: add dword ptr [ecx + 0x418b6602], ecx; add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x000355a1: add dword ptr [ecx + 0x418db445], ecx; sbb al, 0x89; ret 0x25; 
0x000b5bf1: add dword ptr [ecx + 0x4418a02], ecx; mov byte ptr [edx + 4], al; lea eax, [edx + 4]; ret; 
0x000b1811: add dword ptr [ecx + 0x4418a02], ecx; mov byte ptr [edx + 4], al; mov eax, edx; ret; 
0x000b8e71: add dword ptr [ecx + 0x4418b02], ecx; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x000b77de: add dword ptr [ecx + 0x4428d02], ecx; pop edi; pop ebx; ret; 
0x000f0b0a: add dword ptr [ecx + 0x44], -0xd; inc ebx; mov eax, 0xc7; call dword ptr gs:[0x10]; 
0x0003efa2: add dword ptr [ecx + 0x45189c8], ecx; ret 4; 
0x000ac4ef: add dword ptr [ecx + 0x4c48303], ecx; mov eax, esi; pop ebx; pop esi; ret; 
0x00066496: add dword ptr [ecx + 0x5b088813], ecx; pop esi; pop edi; ret; 
0x000b44a1: add dword ptr [ecx + 0x5bd08902], ecx; ret; 
0x000bfe54: add dword ptr [ecx + 0x5bf88902], ecx; pop edi; ret; 
0x00084486: add dword ptr [ecx + 0x5e5b044a], ecx; pop edi; ret; 
0x001353af: add dword ptr [ecx + 0x5f5e5bd8], ecx; ret; 
0x000b33ee: add dword ptr [ecx + 0x5ff88902], ecx; pop ebx; ret; 
0x000b15f1: add dword ptr [ecx + 0x5ff88902], ecx; ret; 
0x00168204: add dword ptr [ecx + 0x62], -7; call dword ptr [eax - 0x18]; 
0x000af3be: add dword ptr [ecx + 0x75ff851e], ecx; mov al, 0x83; ret 0x8301; 
0x000648b2: add dword ptr [ecx + 0xc60455], ecx; and eax, 0xfffb62e9; jmp dword ptr [esi - 0x70]; 
0x00100e08: add dword ptr [ecx + 0xf082454], ecx; sahf; ret 0x5420; 
0x000981fc: add dword ptr [ecx + eax*2 - 0x48], esi; lock add byte ptr [eax], al; add byte ptr [ecx + 0x80], bh; call dword ptr gs:[0x10]; 
0x00179381: add dword ptr [ecx + eax], 0; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00144ca4: add dword ptr [ecx + ecx - 0x7d], esi; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000fba90: add dword ptr [ecx - 0x13], edi; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x0008762b: add dword ptr [ecx - 0x2776eb90], ecx; mov byte ptr [edx], cl; pop ebx; pop esi; ret; 
0x001555ff: add dword ptr [ecx - 0x38cfdbb4], ecx; inc esp; ret 4; 
0x00079a26: add dword ptr [ecx - 0x3b7cfbaf], ecx; adc al, 0x5b; pop esi; ret; 
0x000a84f8: add dword ptr [ecx - 0x3dbaf028], ecx; add esp, 0x18; pop ebx; ret; 
0x00153170: add dword ptr [ecx - 0x45548acd], ecx; add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0009dfed: add dword ptr [ecx - 0x45618acd], ecx; add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x001795d5: add dword ptr [ecx - 0x46f076fd], ecx; ret; 
0x000f1bb6: add dword ptr [ecx - 0x4837b], ecx; inc dword ptr [ecx]; ret; 
0x0012bb14: add dword ptr [ecx - 0x48b7b], ecx; dec dword ptr [edi]; test dword ptr [edi - 0x7cfffffe], esi; in al, dx; or byte ptr [ebp - 0x46b7b], cl; call dword ptr [eax + 0x6a]; 
0x0008bce1: add dword ptr [ecx - 0x49f0fbbd], ecx; ret 0xe0eb; 
0x0007897e: add dword ptr [ecx - 0x4ef73], ecx; call dword ptr [edx + 0x52]; 
0x00075a17: add dword ptr [ecx - 0x4f74b], ecx; call dword ptr [esi - 1]; 
0x00077f8f: add dword ptr [ecx - 0x4fb73], ecx; call dword ptr [eax + 0x50]; 
0x00073e29: add dword ptr [ecx - 0x5037b], ecx; call dword ptr [esi - 1]; 
0x00078cb1: add dword ptr [ecx - 0x51373], ecx; call dword ptr [eax + 0x50]; 
0x000735bd: add dword ptr [ecx - 0x53f63], ecx; dec dword ptr [ecx - 0x4f74b]; call dword ptr [esi - 1]; 
0x000747cb: add dword ptr [ecx - 0x54743], ecx; dec dword ptr [ecx - 0x4f74b]; call dword ptr [esi - 1]; 
0x000c627a: add dword ptr [ecx - 0x6ff0f7bf], ecx; ret 0x4b8b; 
0x000a3c71: add dword ptr [ecx - 0x72c3dbb4], ecx; inc esp; ret; 
0x0014cf49: add dword ptr [ecx - 0x72e3dbbc], ecx; inc ebx; add dword ptr [eax - 0x7bf0c406], eax; ret 1; 
0x00043790: add dword ptr [ecx - 0x74d3dbbc], ecx; test byte ptr [esp + esi*8], ah; add byte ptr [eax], al; add cl, dl; call 0x21061825; ret 0xb60f; 
0x0008e7e5: add dword ptr [ecx - 0x769adbbe], ecx; adc eax, 0x7c; pop ebx; ret; 
0x0008f15d: add dword ptr [ecx - 0x769af7be], ecx; adc eax, 0x78; pop ebx; ret; 
0x000392c6: add dword ptr [ecx - 0x76e7dbbc], ecx; ret; 
0x0010085a: add dword ptr [ecx - 0x7aefdba4], ecx; sar byte ptr [eax + 0x2d], 0x8b; push esi; or byte ptr [ecx], bh; ret 0x267e; 
0x0002af9a: add dword ptr [ecx - 0x7cb7dba4], ecx; ret; 
0x0002d297: add dword ptr [ecx - 0x7cdfdba4], ecx; ret; 
0x0002a46a: add dword ptr [ecx - 0x7ce3dba4], ecx; ret; 
0x000546a6: add dword ptr [ecx - 0x7cfb69b4], ecx; ret 0x8501; 
0x0005de31: add dword ptr [ecx - 0xc36b], ecx; dec dword ptr [ebx - 0xb76b]; jmp dword ptr [esi - 0x7d]; 
0x001436e7: add dword ptr [ecx - 7], ebx; call dword ptr [eax + 0x6a]; 
0x00164a42: add dword ptr [ecx - 7], esp; call dword ptr [eax - 0x18]; 
0x00164be3: add dword ptr [ecx - 7], esp; call dword ptr [eax - 0x73]; 
0x000fe134: add dword ptr [ecx], 0x33; stc; call dword ptr [edx + 0x52]; 
0x000886a0: add dword ptr [ecx], 0x3f; stc; call dword ptr [eax - 0x75]; 
0x00164a41: add dword ptr [ecx], 0x61; stc; call dword ptr [eax - 0x18]; 
0x00164be2: add dword ptr [ecx], 0x61; stc; call dword ptr [eax - 0x73]; 
0x0002ab7e: add dword ptr [ecx], 0x8d500000; xchg dword ptr [eax + 0x71], ecx; stc; call dword ptr [eax - 0x18]; 
0x0014cd5a: add dword ptr [ecx], 0xa30f0800; ret 0x820f; 
0x00155c93: add dword ptr [ecx], 0xa30f0800; ret 0x830f; 
0x001156ac: add dword ptr [ecx], 0xa30f0800; ret 0x920f; 
0x001aac8b: add dword ptr [ecx], 0xf660000; xlatb; ret; 
0x0012ad88: add dword ptr [ecx], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001ace04: add dword ptr [ecx], eax; add dword ptr [ecx], eax; shr eax, 0x18; ret; 
0x0008c994: add dword ptr [ecx], eax; jne 0x8c9a8; sub edx, dword ptr [eax + 0xc]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x000681ab: add dword ptr [ecx], eax; ret 0x9589; 
0x0006a9d4: add dword ptr [ecx], eax; ret; 
0x000928c7: add dword ptr [ecx], eax; rol byte ptr [ebx - 0x2ff60220], cl; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x001169f9: add dword ptr [ecx], eax; ror byte ptr [ecx + 0x290c245c], cl; ror dword ptr [ecx + 0xf18245c], cl; xchg ebp, eax; ret; 
0x000781e6: add dword ptr [ecx], eax; shr cl, 1; push edx; ret 0xffff; 
0x001ace06: add dword ptr [ecx], eax; shr eax, 0x18; ret; 
0x0005d3cb: add dword ptr [ecx], ebp; fdivr dword ptr [ecx]; ret 0xee7c; 
0x00149165: add dword ptr [ecx], ebp; ret 0x5439; 
0x00150150: add dword ptr [ecx], ebp; ret 0x828d; 
0x0006ecf1: add dword ptr [ecx], ebp; ret; 
0x0016ebab: add dword ptr [ecx], ebx; add byte ptr [eax], al; mov eax, dword ptr [esp + 0x18]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0009ceb9: add dword ptr [ecx], ebx; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0002586f: add dword ptr [ecx], ecx; add byte ptr [eax], al; add byte ptr [eax - 1], bh; add esp, 0xc; ret; 
0x00084777: add dword ptr [ecx], ecx; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x0012cdbd: add dword ptr [ecx], ecx; ret 0x1789; 
0x0012ce34: add dword ptr [ecx], ecx; ret 0x78b; 
0x001040f1: add dword ptr [ecx], ecx; ret 0xf983; 
0x0003dc2b: add dword ptr [ecx], ecx; ret; 
0x001238f7: add dword ptr [ecx], edi; fdiv dword ptr [edx + 4]; xor eax, eax; pop ebx; ret; 
0x000abb26: add dword ptr [ecx], edi; fidiv dword ptr [ebp + esi*8 + 0x5b]; ret; 
0x0005a1bd: add dword ptr [ecx], edi; ret 0x1e74; 
0x00109877: add dword ptr [ecx], edi; ret 0x2a7e; 
0x0005d015: add dword ptr [ecx], edi; ret 0x574; 
0x0009da06: add dword ptr [ecx], edi; ret 0x830f; 
0x000a97eb: add dword ptr [ecx], edi; ret 0x872; 
0x001098a1: add dword ptr [ecx], edi; ret 0xda75; 
0x0012571c: add dword ptr [ecx], edi; ret 0xe075; 
0x00106270: add dword ptr [ecx], edi; ret 0xe675; 
0x00123f32: add dword ptr [ecx], edi; ret 0xe975; 
0x000af555: add dword ptr [ecx], edi; ret 0xec72; 
0x000af642: add dword ptr [ecx], edi; ret 0xef72; 
0x000fec8c: add dword ptr [ecx], edi; ret 0xef7f; 
0x00036ad2: add dword ptr [ecx], edi; ret; 
0x0005f367: add dword ptr [ecx], edi; ror byte ptr [edi], 1; pushfd; ret 0xb60f; 
0x000ed319: add dword ptr [ecx], esi; call dword ptr [ebx - 0x18]; 
0x000aeb09: add dword ptr [ecx], esi; sar byte ptr [eax], cl; pop ecx; add eax, 0x4d8b1075; aam 0x83; ret 0xf01; 
0x000437a0: add dword ptr [ecx], esp; ret 0xb60f; 
0x00099b1a: add dword ptr [edi + 0x13], esi; mov edx, dword ptr [esp + 4]; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x00090c3a: add dword ptr [edi + 0x13], esi; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000e9ec6: add dword ptr [edi + 0x17], edi; pop ebx; pop esi; pop edi; ret; 
0x001515d4: add dword ptr [edi + 0x19], edi; add esp, 4; pop ebx; pop esi; ret; 
0x000e95d0: add dword ptr [edi + 0x1d], edi; add esp, 4; pop ebx; pop esi; ret; 
0x000e90ef: add dword ptr [edi + 0x1e], edi; add esp, 0x14; pop ebx; pop esi; ret; 
0x00041996: add dword ptr [edi + 0x1f], edi; add esp, 4; pop ebx; pop esi; ret; 
0x00041ac5: add dword ptr [edi + 0x20], edi; add esp, 0x14; pop ebx; pop esi; ret; 
0x0018265d: add dword ptr [edi + 0x20], edi; add esp, 0x18; pop ebx; ret; 
0x0010bcc5: add dword ptr [edi + 0x20], edi; add esp, 4; pop ebx; pop esi; ret; 
0x00094334: add dword ptr [edi + 0x21], edi; add esp, 0x18; pop ebx; ret; 
0x00188844: add dword ptr [edi + 0x21], edi; add esp, 4; pop ebx; pop esi; ret; 
0x00040183: add dword ptr [edi + 0x22], edi; add esp, 0x14; pop ebx; pop esi; ret; 
0x0015611b: add dword ptr [edi + 0x22], edi; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x00182553: add dword ptr [edi + 0x22], edi; add esp, 8; pop ebx; ret; 
0x001630b2: add dword ptr [edi + 0x23], edi; add esp, 0x18; pop ebx; ret; 
0x001825d1: add dword ptr [edi + 0x24], edi; add esp, 0x18; pop ebx; ret; 
0x00042749: add dword ptr [edi + 0x24], edi; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x000dd019: add dword ptr [edi + 0x24], edi; add esp, 8; pop ebx; ret; 
0x0012c411: add dword ptr [edi + 0x24], edi; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x001576e0: add dword ptr [edi + 0x25], edi; add esp, 8; pop ebx; ret; 
0x000e9f16: add dword ptr [edi + 0x27], edi; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x0012c520: add dword ptr [edi + 0x2d], esi; sub esp, 4; push edi; push 1; push ebx; call esi; 
0x0012d59e: add dword ptr [edi + 0x2f], edi; add esp, 8; pop ebx; ret; 
0x000611b4: add dword ptr [edi + 0x31], edi; add esp, 0x18; pop ebx; ret; 
0x0008f55e: add dword ptr [edi + 0x37], edi; pop ebx; pop esi; pop edi; ret; 
0x000610a3: add dword ptr [edi + 0x3a], edi; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x0010b96a: add dword ptr [edi + 0x3b], edi; call dword ptr [esi]; 
0x0012c34c: add dword ptr [edi + 0x51], edi; lea esp, [ebp - 8]; pop ebx; pop esi; pop ebp; ret; 
0x00162dc4: add dword ptr [edi + 0x59], edi; add esp, 4; pop ebx; pop esi; ret; 
0x00156bb4: add dword ptr [edi + 0x59], edi; pop ebx; pop esi; pop edi; ret; 
0x000fbe7b: add dword ptr [edi + 0x5d], ebx; neg eax; ret; 
0x000bb006: add dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x0010b61a: add dword ptr [edi + 0x5e], edi; pop ebx; mov eax, 0xc; pop esi; pop edi; ret; 
0x0003ed52: add dword ptr [edi + 0x74], edi; sub esp, 8; push 0; push edx; call eax; 
0x0012ba3a: add dword ptr [edi + 0xb], edi; add esp, 8; pop ebx; ret; 
0x0008cde2: add dword ptr [edi + 0xb], edi; ret; 
0x00040c39: add dword ptr [edi + 0xc], edi; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0003eb3e: add dword ptr [edi + 0xf], edi; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x0019b230: add dword ptr [edi + 3], ebx; sbb al, 0x8b; jmp ebx; 
0x00156591: add dword ptr [edi + 4], edi; ret; 
0x0010ce01: add dword ptr [edi + 9], esi; mov eax, dword ptr [esp + 4]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x000c30a3: add dword ptr [edi + eax - 0x7d], esi; mov byte ptr [eax + 0x100003c], dl; xor eax, eax; pop ebx; ret; 
0x000906be: add dword ptr [edi + ecx - 0x7b], esi; sal byte ptr [ebp + 0x1b], cl; and dword ptr [eax + 8], 0xfffffffe; xor eax, eax; ret; 
0x00177c08: add dword ptr [edi + edx - 0x75], esi; push es; sub esp, 0xc; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x000a84d0: add dword ptr [edi - 0x23], esi; pop ebx; pop esi; pop edi; ret; 
0x0014b4a6: add dword ptr [edi], 0x2d; stc; call dword ptr [eax + 0x51]; 
0x000608bf: add dword ptr [edi], 0x32; stc; call dword ptr [ebp + 0x50]; 
0x0008d9ae: add dword ptr [edi], 0x3f; stc; call dword ptr [ecx + 0x52]; 
0x000fdceb: add dword ptr [edi], 0x48; stc; call dword ptr [eax + 0x55]; 
0x00126feb: add dword ptr [edi], 0x4d; stc; call dword ptr [eax + 0x55]; 
0x0007ca9a: add dword ptr [edi], ecx; inc ebp; ret 0xec83; 
0x00196baf: add dword ptr [edi], ecx; mov dh, 0; mov byte ptr [edx], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00196a87: add dword ptr [edi], ecx; mov dh, 8; mov byte ptr [edx], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000abb22: add dword ptr [edi], ecx; mov esi, 0xda390114; je 0xabb20; pop ebx; ret; 
0x00143168: add dword ptr [edi], ecx; test byte ptr [ecx - 0x7cfffffe], dl; in al, dx; or al, 0x31; call dword ptr [ebp + 1]; 
0x00175ff8: add dword ptr [edi], ecx; test byte ptr [ecx - 0x7d000000], ah; rcr byte ptr [ebx], 0x89; loope 0x175f8e; ret 0x25; 
0x0007566a: add dword ptr [edi], ecx; test byte ptr [edi - 0x76000024], bh; ret; 
0x000a6c6c: add dword ptr [edi], ecx; test ch, dl; add byte ptr [eax], al; add byte ptr [ebx - 0xa9f714], al; jae 0xa6c9e; call eax; 
0x000fd491: add dword ptr [edi], ecx; test dword ptr [eax - 0xa000000], ecx; ret 0x7420; 
0x001ab8ac: add dword ptr [edi], ecx; test dword ptr [ebx - 0xa000000], ecx; ret 0xf02; 
0x0015a0b3: add dword ptr [edi], ecx; test dword ptr [ecx + eax - 0x137d0000], ecx; or byte ptr [ebx - 0x72dfdbbc], cl; or dh, 0x5e; stc; call dword ptr [eax + 0x55]; 
0x00098ba7: add dword ptr [edi], ecx; test dword ptr [ecx - 0x77000000], ecx; ret 0xf283; 
0x000b9477: add dword ptr [edi], ecx; test dword ptr [edx + 0x5f000009], esp; pop esi; pop ebx; ret; 
0x00098da7: add dword ptr [edi], ecx; test dword ptr [edx - 0x77000000], esp; ret 0xf283; 
0x000b34bb: add dword ptr [edi], ecx; test dword ptr [esi], edi; add eax, dword ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x000f15dc: add dword ptr [edi], ecx; test ebx, ebx; add al, byte ptr [eax]; add dh, dh; test dword ptr [edx + edi*8 - 1], eax; call dword ptr [eax]; 
0x00111658: add dword ptr [edi], ecx; xchg ebp, eax; ret; 
0x0012e5d2: add dword ptr [edi], ecx; xchg edi, eax; ret 0xf883; 
0x001415ba: add dword ptr [edi], ecx; xchg esi, eax; ret 0xd008; 
0x00045868: add dword ptr [edi], ecx; xchg esp, eax; ret 0x7c83; 
0x000d7569: add dword ptr [edi], ecx; xchg esp, eax; ret 0xc139; 
0x000c9973: add dword ptr [edi], ecx; xchg esp, eax; ret 0xc339; 
0x000496f0: add dword ptr [edi], ecx; xchg esp, eax; ret 0xc639; 
0x000507a1: add dword ptr [edi], ecx; xchg esp, eax; ret 0xeb39; 
0x0017d048: add dword ptr [edi], ecx; xchg esp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x000886a1: add dword ptr [edi], edi; stc; call dword ptr [eax - 0x75]; 
0x000907ee: add dword ptr [edx + 0x16], edi; mov eax, 0x5f; cmovne eax, edx; ret; 
0x000de8e2: add dword ptr [edx + 0x46], -7; call dword ptr [eax - 0x18]; 
0x00082f5c: add dword ptr [edx + 0x50], edx; push ebx; call dword ptr [edi + 0x40]; 
0x0018bbe2: add dword ptr [edx + 0x50], edx; push esi; call dword ptr [edi + 0x40]; 
0x000b5c33: add dword ptr [edx + 0xf660841], ecx; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000b1853: add dword ptr [edx + 0xf660841], ecx; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x00095904: add dword ptr [edx + 4], 1; add esp, 0xc; ret; 
0x0005abf0: add dword ptr [edx + 4], 1; add esp, 4; pop ebx; pop esi; ret; 
0x000a86c1: add dword ptr [edx + edx*8 + 0xba], eax; add byte ptr [edi], cl; inc esp; ret 0x8dc3; 
0x000af7d4: add dword ptr [edx + esi*8 - 0x7d], esi; ret 0x8904; 
0x000c0a52: add dword ptr [edx - 0x74cf77ca], ecx; inc esp; and al, 0xc; pop ebx; pop esi; ret; 
0x000bfe12: add dword ptr [edx - 0x76fd77ff], ecx; clc; pop ebx; pop edi; ret; 
0x000bcf62: add dword ptr [edx - 0x76fd77ff], ecx; clc; pop edi; ret; 
0x001672e9: add dword ptr [edx], 0x62; stc; call dword ptr [eax - 0x18]; 
0x001672e9: add dword ptr [edx], 0x62; stc; call dword ptr [eax - 0x18]; dec esp; fsin; jmp dword ptr [ebp - 0x75]; 
0x00088b62: add dword ptr [edx], ebp; push 0; push ebx; call dword ptr [eax + 0x24]; 
0x0018b60e: add dword ptr [edx], ebp; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x000899d5: add dword ptr [edx], ebp; push 0; push esi; call dword ptr [eax + 0x40]; 
0x00083815: add dword ptr [edx], ebp; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x0008557a: add dword ptr [edx], ebp; push dword ptr [esp + 0x1c]; call 0x7e620; add esp, 0x1c; ret; 
0x00032b77: add dword ptr [edx], edx; add byte ptr [eax], al; lea eax, [eax + 0x11cc]; ret; 
0x0017cebc: add dword ptr [esi + 0x14], edi; pop ebx; pop esi; pop edi; ret; 
0x0012c9af: add dword ptr [esi + 0x1e], esi; sub esp, 8; and ebx, 0xfffffffe; push dword ptr [ebx]; push esi; call edi; 
0x0010b693: add dword ptr [esi + 0x48], -7; call dword ptr [eax - 0x18]; 
0x00157b1d: add dword ptr [esi + 0x5f], ebx; pop ebp; ret; 
0x0004288f: add dword ptr [esi + 0xd], esi; sub ecx, 1; mov eax, 2; bsr ecx, ecx; shl eax, cl; ret; 
0x000b5cb3: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000b18d3: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000b5cd3: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000b18f3: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000b5cf3: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000b1913: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000b3743: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [ecx + 5]; pop ebx; ret; 
0x000b3753: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [ecx + 6]; pop ebx; ret; 
0x000b3763: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [ecx + 7]; pop ebx; ret; 
0x000b3773: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [ecx + 8]; pop ebx; ret; 
0x000b59e3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; lea eax, [edx + 7]; pop edi; ret; 
0x000b5c23: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; lea eax, [edx + 7]; ret; 
0x000b780e: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; lea eax, [edx + 8]; pop edi; pop ebx; ret; 
0x001acda3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000bfda4: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; mov eax, edi; pop ebx; pop edi; ret; 
0x000b341e: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; mov eax, edi; pop edi; pop ebx; ret; 
0x000b1623: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; mov eax, edi; pop edi; ret; 
0x000b4448: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; mov eax, edx; pop ebx; ret; 
0x000b1843: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; mov eax, edx; ret; 
0x000ba543: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000b8f03: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000ba563: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b8f23: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000ba583: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b8f43: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000ba5a3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b8f63: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x00099e47: add dword ptr [esi + ebx - 0x75], esi; jl 0x99e71; adc al, 0x89; ret 0xc389; 
0x000fdfd6: add dword ptr [esi + ecx - 0x77], esi; ret; 
0x001ac64b: add dword ptr [esi + edx*4 + 0x5e], esi; lea eax, [edi - 0x10]; pop edi; ret; 
0x001304a7: add dword ptr [esi + esi - 0x73], esi; dec esp; and al, 0xc; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x0012f0e7: add dword ptr [esi + esi - 0x73], esi; dec esp; and al, 0xc; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x0007f096: add dword ptr [esi - 0x18], edx; ret; 
0x0014d6dc: add dword ptr [esi - 0x3f], esp; ret 0x6608; 
0x00099f52: add dword ptr [esi - 0x77], esi; ret; 
0x000dd3e8: add dword ptr [esi], 0x46; stc; call dword ptr [eax - 0x18]; 
0x0003eac3: add dword ptr [esi], 0x5e; stc; call dword ptr [eax - 0x18]; 
0x0017905e: add dword ptr [esi], ecx; add byte ptr [eax], al; add byte ptr [ebx + 0x575104c1], al; call dword ptr [eax + 8]; 
0x00117a77: add dword ptr [esi], edx; add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x0003d0c6: add dword ptr [esi], edx; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x00094dc1: add dword ptr [esp + ebx - 0x7d], esi; rol dword ptr [ecx], 0x83; ret 0x8108; 
0x00166d30: add dword ptr [esp], 0; add byte ptr [eax - 0x73], dl; sub dword ptr [ecx + eax*4], -0xe; call dword ptr [eax - 0x18]; 
0x0012b61d: add dword ptr es:[eax], eax; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x0005b09d: add dword ptr fs:[eax], eax; add bh, bh; xor al, ch; sbb byte ptr [eax + eax + 0x1cc48300], dh; ret; 
0x000abf41: add dword ptr gs:[eax], eax; add esp, 0x18; pop ebx; ret; 
0x0014757b: add dword ptr ss:[eax], eax; add byte ptr [eax - 0x73], dl; or dword ptr [ecx], 0x5a; stc; call dword ptr [eax - 0x18]; 
0x0014017d: add dword ptr ss:[eax], eax; add byte ptr [ebx - 0x76bbdbbc], cl; ret; 
0x000d2ca7: add eax, -0x63; stc; call dword ptr [eax - 0x18]; 
0x000a6063: add eax, -0x69; stc; call dword ptr [eax - 0x18]; 
0x000a6063: add eax, -0x69; stc; call dword ptr [eax - 0x18]; add ah, al; clc; jmp dword ptr [esi - 0x70]; 
0x00025566: add eax, 0; ret; 
0x000c0873: add eax, 0x10; bsf edx, edx; call 0x189c31; add ecx, 0x10c776; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bd573: add eax, 0x10; bsf edx, edx; call 0x189c31; add ecx, 0x10f9f6; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bd5da: add eax, 0x10; call 0x189c31; add ecx, 0x10f992; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b0068: add eax, 0x10; pop edi; pop esi; ret; 
0x00134739: add eax, 0x10a6db; mov eax, dword ptr [eax + 0x108]; mov eax, dword ptr [eax + 0x20]; ret; 
0x0003ca3e: add eax, 0x10c48300; mov eax, dword ptr [esp + 0xc]; add esp, 0x14; pop ebx; pop esi; ret; 
0x0003c673: add eax, 0x10c48300; test eax, eax; jne 0x3c688; add esp, 8; pop ebx; ret; 
0x0003c922: add eax, 0x10c48300; test eax, eax; jne 0x3c930; add esp, 8; pop ebx; ret; 
0x0018b8aa: add eax, 0x11770000; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x000c0bab: add eax, 0x130f66; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd738: add eax, 0x130f66; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x001243f0: add eax, 0x14; jne 0x1243ff; add esp, 0x418; pop ebx; ret; 
0x001570b3: add eax, 0x14; jne 0x1570be; add esp, 0x1c; ret; 
0x00179937: add eax, 0x14; jne 0x179942; add esp, 0x4c; ret; 
0x001799a7: add eax, 0x14; jne 0x1799b2; add esp, 0x4c; ret; 
0x00179a17: add eax, 0x14; jne 0x179a22; add esp, 0x4c; ret; 
0x00179a7a: add eax, 0x14; jne 0x179a85; add esp, 0x4c; ret; 
0x00179ada: add eax, 0x14; jne 0x179ae5; add esp, 0x4c; ret; 
0x00179b47: add eax, 0x14; jne 0x179b52; add esp, 0x4c; ret; 
0x00179bc7: add eax, 0x14; jne 0x179bd2; add esp, 0x4c; ret; 
0x0017a0b8: add eax, 0x14; jne 0x17a0c3; add esp, 0x1c; ret; 
0x0017a107: add eax, 0x14; jne 0x17a13c; add esp, 0x1c; ret; 
0x0017b8a1: add eax, 0x14; jne 0x17b8ac; add esp, 0x2c; ret; 
0x0003ad78: add eax, 0x14; jne 0x3ad87; mov eax, edx; add esp, 0x1c; ret 4; 
0x0003c2e7: add eax, 0x14; jne 0x3c2f3; add esp, 0x18; pop ebx; ret; 
0x0003efeb: add eax, 0x14; jne 0x3eff6; add esp, 0x1c; ret; 
0x0003f0fe: add eax, 0x14; jne 0x3f109; add esp, 0x1c; ret; 
0x0005f674: add eax, 0x14; jne 0x5f68e; add esp, 0x78; pop ebx; ret; 
0x00087511: add eax, 0x14; jne 0x8752c; add esp, 0x28; pop ebx; ret; 
0x000aa2c7: add eax, 0x174d138; inc eax; pop edi; ret; 
0x00034ed8: add eax, 0x182474ff; push 0; call 0x34e80; add esp, 0x1c; ret; 
0x0013bfe6: add eax, 0x18; call eax; 
0x00025062: add eax, 0x18; jmp eax; 
0x0013f7e9: add eax, 0x18; lea edx, [esp + 0x10]; push edx; push edi; call eax; 
0x0013f8c6: add eax, 0x18; lea edx, [esp + 0x10]; push edx; push esi; call eax; 
0x0003ef4d: add eax, 0x18; mov dword ptr [ebp + edi], edx; push dword ptr [ebx + 4]; call eax; 
0x000250ef: add eax, 0x18; pop edi; pop ebp; jmp eax; 
0x00157332: add eax, 0x18; pop edi; pop ebp; ret; 
0x0016c158: add eax, 0x18; push eax; call 0x16bf00; add esp, 0x2c; ret; 
0x00156f84: add eax, 0x18; push eax; call edx; 
0x0013c015: add eax, 0x18; push esi; call eax; 
0x0003f324: add eax, 0x18; xchg dword ptr [edi], edx; cmp edx, 1; jg 0x3f3f0; call eax; 
0x000a0b69: add eax, 0x19e2ab; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x3c34], edx; ret; 
0x000a08a9: add eax, 0x19e56b; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x358], edx; ret; 
0x00095999: add eax, 0x1a947b; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x2a4], edx; ret; 
0x00094819: add eax, 0x1aa5fb; mov eax, dword ptr [eax + 0x3af4]; ret; 
0x0008e929: add eax, 0x1b04eb; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x29c], edx; ret; 
0x0008e909: add eax, 0x1b050b; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x298], edx; ret; 
0x0008e8e9: add eax, 0x1b052b; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x294], edx; ret; 
0x0008e8c9: add eax, 0x1b054b; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x290], edx; ret; 
0x0008cc99: add eax, 0x1b217b; mov eax, dword ptr [eax + 0xe6c]; ret; 
0x0012eef7: add eax, 0x1bc28100; call dword ptr [eax]; 
0x00034eb8: add eax, 0x1c2474ff; push dword ptr [esp + 0x1c]; call 0x34e80; add esp, 0x1c; ret; 
0x00175a35: add eax, 0x1c; push dword ptr [eax + 0x190]; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x001375a4: add eax, 0x2000001; push eax; call dword ptr [ebp + 0x14]; 
0x0003d4c9: add eax, 0x20194b; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x0003d4a9: add eax, 0x20196b; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x000c08ff: add eax, 0x20; call 0x189c31; add ecx, 0x10c6ed; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bd5ff: add eax, 0x20; call 0x189c31; add ecx, 0x10f96d; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b0075: add eax, 0x20; pop edi; pop esi; ret; 
0x000432f7: add eax, 0x20; ret; 
0x00034889: add eax, 0x20a58b; mov eax, dword ptr [eax + 0x94]; add eax, dword ptr gs:[0]; ret; 
0x00034869: add eax, 0x20a5ab; mov eax, dword ptr [eax + 0x1d0]; add eax, dword ptr gs:[0]; ret; 
0x00034849: add eax, 0x20a5cb; mov eax, dword ptr [eax + 0x9c]; add eax, dword ptr gs:[0]; ret; 
0x0002f549: add eax, 0x20f8cb; mov eax, dword ptr [eax + 0x10e0]; ret; 
0x000b5b58: add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000b5cb8: add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000b1778: add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000b18d8: add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000260c9: add eax, 0x218d4b; mov eax, dword ptr [eax + 0x10bc]; ret; 
0x000260a9: add eax, 0x218d6b; mov eax, dword ptr [eax + 0x10b8]; ret; 
0x00025559: add eax, 0x2198bb; mov eax, dword ptr [eax + 0xa4]; add eax, dword ptr gs:[0]; ret; 
0x00024fd9: add eax, 0x219e3b; lea eax, [eax - 0x690b4]; ret; 
0x00024fb9: add eax, 0x219e5b; lea eax, [eax - 0x690ac]; ret; 
0x000a8a4c: add eax, 0x21; ret; 
0x000eb5b2: add eax, 0x244c8b00; or byte ptr [ebp - 0x6609f7f], cl; call dword ptr [eax - 0x73]; 
0x00094f59: add eax, 0x24548b00; or al, 0x89; stc; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0003ca13: add eax, 0x245c8b00; and byte ptr [ecx + 8], bh; mov edx, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x0008b4ce: add eax, 0x25770000; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x00123940: add eax, 0x26; mov edx, dword ptr [edx + 0xa4]; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; ret; 
0x0016eac9: add eax, 0x28; push dword ptr [eax + 0x14]; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x000c9093: add eax, 0x291ff083; ret 0x1489; 
0x00049309: add eax, 0x291ff083; ret 0x5489; 
0x00058364: add eax, 0x291ff083; ret 0x9589; 
0x0004c849: add eax, 0x291ff083; ret; 
0x000876f2: add eax, 0x29770000; sub esp, 0xc; push ebx; call dword ptr [esi + 0x30]; 
0x00081510: add eax, 0x2b770000; sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x00023533: add eax, 0x2cc48300; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000b3521: add eax, 0x2d8850f; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000a8707: add eax, 0x2efffff7; lea esi, [esi]; add esp, 4; pop ebx; pop esi; ret; 
0x000577e8: add eax, 0x2f87868d; stc; call dword ptr [eax + 0x57]; 
0x0011bab5: add eax, 0x302474ff; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x000c07b1: add eax, 0x30; call 0x189c31; add ecx, 0x10c83b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bd518: add eax, 0x30; call 0x189c31; add ecx, 0x10fa54; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b0082: add eax, 0x30; pop edi; pop esi; ret; 
0x00080d6e: add eax, 0x35770000; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x0008bcb3: add eax, 0x38770000; sub esp, 8; push esi; push ebx; call dword ptr [edi + 0x18]; 
0x000b7664: add eax, 0x38800000; add dword ptr [ebx + 0x5b5fffd8], eax; ret; 
0x0017729a: add eax, 0x38; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x000883fb: add eax, 0x40770000; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x00139b77: add eax, 0x408b078b; sbb byte ptr [ebx - 0x137c5383], cl; add al, 0x6a; add eax, 0x55f3978d; stc; call dword ptr [edx + 0x50]; 
0x000ba3ec: add eax, 0x42130f66; add eax, 0x5f0c428d; ret; 
0x000bff5f: add eax, 0x42130f66; add eax, 0x5f5bf889; ret; 
0x000a6a74: add eax, 0x447c838d; stc; call dword ptr [eax - 0x73]; 
0x00161d95: add eax, 0x44; stc; call dword ptr [eax - 1]; 
0x001336cd: add eax, 0x45c58100; mov bh, 0x10; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x000ef9ee: add eax, 0x4c818d50; je 0xef9ee; call dword ptr [eax - 0x18]; 
0x000f009f: add eax, 0x4c818d50; je 0xf009f; call dword ptr [eax - 0x18]; 
0x000f016a: add eax, 0x4c818d50; je 0xf016a; call dword ptr [eax - 0x18]; 
0x001489e9: add eax, 0x4c828d50; je 0x1489e9; call dword ptr [eax - 0x18]; 
0x00176402: add eax, 0x4c828d50; je 0x176402; call dword ptr [eax - 0x18]; 
0x001449fa: add eax, 0x4c838d50; je 0x1449fa; call dword ptr [eax - 0x18]; 
0x0014b522: add eax, 0x4c838d50; je 0x14b522; call dword ptr [eax - 0x18]; 
0x001710da: add eax, 0x4c838d50; je 0x1710da; call dword ptr [eax - 0x18]; 
0x001711a6: add eax, 0x4c838d50; je 0x1711a6; call dword ptr [eax - 0x18]; 
0x001712f3: add eax, 0x4c838d50; je 0x1712f3; call dword ptr [eax - 0x18]; 
0x00171352: add eax, 0x4c838d50; je 0x171352; call dword ptr [eax - 0x18]; 
0x00171389: add eax, 0x4c838d50; je 0x171389; call dword ptr [eax - 0x18]; 
0x00171bd7: add eax, 0x4c838d50; je 0x171bd7; call dword ptr [eax - 0x18]; 
0x0017478a: add eax, 0x4c838d50; je 0x17478a; call dword ptr [eax - 0x18]; 
0x00174958: add eax, 0x4c838d50; je 0x174958; call dword ptr [eax - 0x18]; 
0x00175070: add eax, 0x4c838d50; je 0x175070; call dword ptr [eax - 0x18]; 
0x001750dc: add eax, 0x4c838d50; je 0x1750dc; call dword ptr [eax - 0x18]; 
0x00175f0b: add eax, 0x4c838d50; je 0x175f0b; call dword ptr [eax - 0x18]; 
0x001764f6: add eax, 0x4c838d50; je 0x1764f6; call dword ptr [eax - 0x18]; 
0x0017720b: add eax, 0x4c838d50; je 0x17720b; call dword ptr [eax - 0x18]; 
0x00177f19: add eax, 0x4c838d50; je 0x177f19; call dword ptr [eax - 0x18]; 
0x0017a318: add eax, 0x4c838d50; je 0x17a318; call dword ptr [eax - 0x18]; 
0x0017a7ed: add eax, 0x4c838d50; je 0x17a7ed; call dword ptr [eax - 0x18]; 
0x0017a831: add eax, 0x4c838d50; je 0x17a831; call dword ptr [eax - 0x18]; 
0x0017a87a: add eax, 0x4c838d50; je 0x17a87a; call dword ptr [eax - 0x18]; 
0x0017b130: add eax, 0x4c838d50; je 0x17b130; call dword ptr [eax - 0x18]; 
0x0017b183: add eax, 0x4c838d50; je 0x17b183; call dword ptr [eax - 0x18]; 
0x0017b1c2: add eax, 0x4c838d50; je 0x17b1c2; call dword ptr [eax - 0x18]; 
0x0017b231: add eax, 0x4c838d50; je 0x17b231; call dword ptr [eax - 0x18]; 
0x0017cce9: add eax, 0x4c838d50; je 0x17cce9; call dword ptr [eax - 0x18]; 
0x00060640: add eax, 0x4c838d50; je 0x60640; call dword ptr [eax - 0x18]; 
0x0006069b: add eax, 0x4c838d50; je 0x6069b; call dword ptr [eax - 0x18]; 
0x00060aae: add eax, 0x4c838d50; je 0x60aae; call dword ptr [eax - 0x18]; 
0x0008e110: add eax, 0x4c838d50; je 0x8e110; call dword ptr [eax - 0x18]; 
0x000ac5f4: add eax, 0x4c838d50; je 0xac5f4; call dword ptr [eax - 0x18]; 
0x001424d3: add eax, 0x4c858d50; je 0x1424d3; call dword ptr [eax - 0x18]; 
0x0014258a: add eax, 0x4c858d50; je 0x14258a; call dword ptr [eax - 0x18]; 
0x001425ca: add eax, 0x4c858d50; je 0x1425ca; call dword ptr [eax - 0x18]; 
0x0014b930: add eax, 0x4c858d50; je 0x14b930; call dword ptr [eax - 0x18]; 
0x0014ba2b: add eax, 0x4c858d50; je 0x14ba2b; call dword ptr [eax - 0x18]; 
0x0016f81a: add eax, 0x4c858d50; je 0x16f81a; call dword ptr [eax - 0x18]; 
0x00175b60: add eax, 0x4c858d50; je 0x175b60; call dword ptr [eax - 0x18]; 
0x0017c466: add eax, 0x4c858d50; je 0x17c466; call dword ptr [eax - 0x18]; 
0x000a7a12: add eax, 0x4c858d50; je 0xa7a12; call dword ptr [eax - 0x18]; 
0x0016f632: add eax, 0x4c868d50; je 0x16f632; call dword ptr [eax - 0x18]; 
0x0017abc0: add eax, 0x4c868d50; je 0x17abc0; call dword ptr [eax - 0x18]; 
0x000342d7: add eax, 0x4c868d50; je 0x342d7; call dword ptr [eax - 0x18]; 
0x0016f11c: add eax, 0x4c878d50; je 0x16f11c; call dword ptr [eax - 0x18]; 
0x000f0004: add eax, 0x4c878d50; je 0xf0004; call dword ptr [eax - 0x18]; 
0x001768ca: add eax, 0x4c; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x000aeb0e: add eax, 0x4d8b1075; aam 0x83; ret 0xf01; 
0x0010bd1c: add eax, 0x5002e0c1; call 0x231a8; add esp, 0x18; pop ebx; ret; 
0x001a0b5c: add eax, 0x542b60f; sub eax, ecx; pop ebp; ret; 
0x0019f353: add eax, 0x542b60f; sub eax, ecx; ret; 
0x0008e8cb: add eax, 0x548b001b; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x290], edx; ret; 
0x0008e8eb: add eax, 0x548b001b; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x294], edx; ret; 
0x0008e90b: add eax, 0x548b001b; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x298], edx; ret; 
0x00132abd: add eax, 0x55c58100; ret; 
0x00139b84: add eax, 0x55f3978d; stc; call dword ptr [edx + 0x50]; 
0x0013a477: add eax, 0x5629808d; stc; call dword ptr [eax - 0x75]; 
0x001392ea: add eax, 0x564a808d; stc; call dword ptr [eax - 0x75]; 
0x0013bc53: add eax, 0x566f808d; stc; call dword ptr [eax - 0x75]; 
0x0008b424: add eax, 0x57770000; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x0013c04c: add eax, 0x5b000000; pop esi; pop ebp; ret; 
0x0010ecd1: add eax, 0x5b000000; pop esi; pop edi; pop ebp; ret; 
0x0003c92a: add eax, 0x5b08c483; ret; 
0x0003c2ed: add eax, 0x5b18c483; ret; 
0x0009725e: add eax, 0x5b28c483; ret; 
0x000a0393: add eax, 0x5b38c483; ret; 
0x000da7bf: add eax, 0x5b48c483; ret; 
0x000b3239: add eax, 0x5b5f0000; ret; 
0x00061648: add eax, 0x5b78c483; ret; 
0x00188e28: add eax, 0x5c10448d; ret; 
0x000c224e: add eax, 0x5e000002; xor eax, eax; pop ebx; ret; 
0x00179de5: add eax, 0x5e5b0000; pop edi; pop ebp; ret; 
0x0009a8ca: add eax, 0x5e5bc031; ret; 
0x00135c2a: add eax, 0x5e5bd089; ret; 
0x000b9833: add eax, 0x5e5f0000; pop ebx; ret; 
0x000b5b61: add eax, 0x5f0c428d; ret; 
0x000bb151: add eax, 0x5f0d478d; pop esi; pop ebx; ret; 
0x000bff64: add eax, 0x5f5bf889; ret; 
0x00124a14: add eax, 0x5f; stc; call dword ptr [eax - 0x73]; 
0x0013c00f: add eax, 0x6509c8c1; xor eax, dword ptr [0x18]; push esi; call eax; 
0x00132fad: add eax, 0x65c58100; mov esi, 0x31570010; call dword ptr [esi + 0x53]; 
0x00088f35: add eax, 0x66770000; sub esp, 8; push -1; push dword ptr [ecx]; call dword ptr [eax + 0xc]; 
0x00094f13: add eax, 0x684f8b00; mov edx, dword ptr [esp + 0xc]; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0013bad6: add eax, 0x6e4c868d; stc; call dword ptr [eax - 0x75]; 
0x0013bbde: add eax, 0x6e4c878d; stc; call dword ptr [eax - 0x75]; 
0x000b9a68: add eax, 0x7130f66; movlpd qword ptr [edi + 5], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000ac5ba: add eax, 0x744cab8d; stc; call dword ptr [eax + 0x55]; 
0x0010e39b: add eax, 0x74f2f883; rdtsc; rol byte ptr [ebx + 0xf5bfff8], cl; inc esp; ret 0x2ec3; 
0x000761ce: add eax, 0x74f33990; or al, 0x83; ret; 
0x00034e10: add eax, 0x75003880; or cl, byte ptr [ecx + 0xcc483d0]; ret; 
0x00111411: add eax, 0x75003f80; sbb eax, 0x8b056a50; jl 0x111441; adc byte ptr [ebp - 0x6b68079], cl; call dword ptr [eax - 0x73]; 
0x00152b26: add eax, 0x75085039; hlt; ret; 
0x00098512: add eax, 0x754bf883; mov al, byte ptr [0x8900558b]; ret; 
0x0005dfdd: add eax, 0x7a; stc; call dword ptr [eax - 0x18]; 
0x00198114: add eax, 0x81ffff1b; ret; 
0x00196114: add eax, 0x81ffff3b; ret; 
0x000bd741: add eax, 0x824448b; pop esi; ret; 
0x00074f27: add eax, 0x83000001; ret 0x8904; 
0x0008462d: add eax, 0x8301e083; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x00185a27: add eax, 0x83fffffe; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x00123757: add eax, 0x83ffffff; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0007b423: add eax, 0x870f0000; add al, byte ptr fs:[eax]; add byte ptr [ebx + 0x6a08ec], al; push esi; call dword ptr [ebx + 8]; 
0x00088265: add eax, 0x870f0000; and al, byte ptr [ecx]; add byte ptr [eax], al; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x0018a11b: add eax, 0x870f0000; cld; add dword ptr [eax], eax; add byte ptr [ebx + 0x6a08ec], al; push esi; call dword ptr [ebx + 8]; 
0x0018b751: add eax, 0x870f0000; fiadd word ptr [eax]; add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [ebx + 0x44]; 
0x0008628d: add eax, 0x870f0000; ljmp 0xc445:0x8b000001; sub esp, 0xc; push esi; call dword ptr [eax + 0x30]; 
0x0018b94b: add eax, 0x870f0000; movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx - 0x137cdfaa], cl; add al, 0x29; ret 0x5052; 
0x0007b9b0: add eax, 0x870f0000; test dword ptr [eax], 0xec830000; or al, 0x56; call dword ptr [ebx + 0x30]; 
0x0008b7c6: add eax, 0x870f0000; test eax, 0x83000000; in al, dx; or al, 0x56; call dword ptr [ebp + 0x30]; 
0x001abaa2: add eax, 0x87820f; add byte ptr [eax], al; lea eax, [eax + 4]; pop edi; ret; 
0x001aaa82: add eax, 0x87820f; add byte ptr [eax], al; lea eax, [edi + 4]; pop edi; ret; 
0x001ab142: add eax, 0x878c0f; add byte ptr [eax], al; lea eax, [ecx + 5]; ret; 
0x000f1909: add eax, 0x878d0000; xchg byte ptr [edi - 7], al; call dword ptr [eax - 0x73]; 
0x0013125c: add eax, 0x89000000; inc esp; and al, 4; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000ec148: add eax, 0x8901e683; ret 0xe283; 
0x00179ac5: add eax, 0x8b000000; push eax; or byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x0006995c: add eax, 0x8b000011; test dword ptr [eax - 0x74000005], edi; xchg ebp, eax; mov esp, 0x1fffffb; ret 0x9589; 
0x0019b470: add eax, 0x8b1c035f; jmp ebx; 
0x000d57b0: add eax, 0x8d2e0000; je 0xd57dd; add byte ptr [ebx - 0x362f43], al; call dword ptr [eax]; 
0x000d8485: add eax, 0x8d500000; xchg byte ptr [eax], dl; js 0xd8487; call dword ptr [eax - 0x18]; 
0x00059bbf: add eax, 0x8d500000; xchg byte ptr [ebx], al; xor cl, bh; call dword ptr [eax - 0x18]; 
0x00059cc7: add eax, 0x8d500000; xchg dl, dl; das; stc; call dword ptr [eax - 0x18]; 
0x00049fc7: add eax, 0x8d500000; xchg dword ptr [eax], edx; js 0x49fc9; call dword ptr [eax - 0x18]; 
0x0004d3a9: add eax, 0x8d500000; xchg dword ptr [eax], edx; js 0x4d3ab; call dword ptr [eax - 0x18]; 
0x0005113d: add eax, 0x8d500000; xchg dword ptr [eax], edx; js 0x5113f; call dword ptr [eax - 0x18]; 
0x00059a6b: add eax, 0x8d500000; xchg dword ptr [eax], edx; js 0x59a6d; call dword ptr [eax - 0x18]; 
0x000ca2cc: add eax, 0x8d500000; xchg dword ptr [eax], edx; js 0xca2ce; call dword ptr [eax - 0x18]; 
0x000d0c60: add eax, 0x8d500000; xchg dword ptr [eax], edx; js 0xd0c62; call dword ptr [eax - 0x18]; 
0x001107c9: add eax, 0x8d500000; xchg dword ptr [ebp + 0x49], ecx; stc; call dword ptr [eax - 0x18]; 
0x0004a2a0: add eax, 0x8d500000; xchg dword ptr [ebx], eax; xor cl, bh; call dword ptr [eax - 0x18]; 
0x0004d49d: add eax, 0x8d500000; xchg dword ptr [ebx], eax; xor cl, bh; call dword ptr [eax - 0x18]; ret; 
0x0004a34f: add eax, 0x8d500000; xchg eax, ecx; ja 0x4a351; call dword ptr [eax - 0x18]; 
0x0004d60a: add eax, 0x8d500000; xchg eax, ecx; ja 0x4d60c; call dword ptr [eax - 0x18]; 
0x00051216: add eax, 0x8d500000; xchg eax, ecx; ja 0x51218; call dword ptr [eax - 0x18]; 
0x00059cec: add eax, 0x8d500000; xchg eax, ecx; ja 0x59cee; call dword ptr [eax - 0x18]; 
0x000ca44e: add eax, 0x8d500000; xchg eax, ecx; ja 0xca450; call dword ptr [eax - 0x18]; 
0x000d0ee2: add eax, 0x8d500000; xchg eax, ecx; ja 0xd0ee4; call dword ptr [eax - 0x18]; 
0x0004a32c: add eax, 0x8d500000; xchg edx, edx; das; stc; call dword ptr [eax - 0x18]; 
0x0004a1c7: add eax, 0x8d500000; xchg esi, ebp; das; stc; call dword ptr [eax - 0x18]; 
0x00179401: add eax, 0x90; pop esi; pop edi; ret; 
0x000b94fc: add eax, 0x91d850f; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00179491: add eax, 0x94; pop esi; pop edi; ret; 
0x000621c7: add eax, 0x950fdd29; ret 0x448b; 
0x0012f077: add eax, 0x9bc28100; std; adc byte ptr [eax], al; mov eax, 0x123; call dword ptr gs:[0x10]; 
0x000bab3f: add eax, 0x9da850f; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000fffb9: add eax, 0x9dfe283; ret 0x5388; 
0x000eff98: add eax, 0x9f88838d; stc; call dword ptr [eax - 0x73]; 
0x000f00d6: add eax, 0x9fa8818d; stc; call dword ptr [eax - 0x73]; 
0x00095659: add eax, 0xa30f0000; ret 0x830f; 
0x00097814: add eax, 0xa30f0000; ret 0xac73; 
0x00134737: add eax, 0xa6db0500; adc byte ptr [eax], al; mov eax, dword ptr [eax + 0x108]; mov eax, dword ptr [eax + 0x20]; ret; 
0x00139ac0: add eax, 0xa834968d; stc; call dword ptr [edx + 0x50]; 
0x001398d2: add eax, 0xa85c808d; stc; call dword ptr [eax - 0x75]; 
0x0013a52a: add eax, 0xa894808d; stc; call dword ptr [eax + 0x6a]; 
0x001abcad: add eax, 0xa; pop edi; ret; 
0x001a9b84: add eax, 0xa; ret; 
0x00176621: add eax, 0xac03848d; and edi, ecx; call dword ptr [eax + 0x52]; 
0x00173c0d: add eax, 0xac; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x0012e85c: add eax, 0xb8530011; inc byte ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001ab912: add eax, 0xb; pop edi; ret; 
0x001a9b36: add eax, 0xb; ret; 
0x0012e857: add eax, 0xbbc28100; add eax, 0xb8530011; inc byte ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000d685d: add eax, 0xc0d0878d; stc; call dword ptr [eax + 0x53]; 
0x001a55ce: add eax, 0xc1830000; adc byte ptr [esi + 0xf], ah; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000c0bb4: add eax, 0xc24448b; pop ebx; pop esi; ret; 
0x0019963e: add eax, 0xc381ffff; outsd dx, dword ptr [esi]; and al, 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00199705: add eax, 0xc381ffff; test al, 0x23; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0007edc0: add eax, 0xc4830001; adc bl, ch; ret; 
0x000decc0: add eax, 0xc9c1c189; add al, byte ptr [ecx - 0x70a3d707]; add dh, byte ptr [esi + 0xa]; mov eax, edx; ret; 
0x001abcb7: add eax, 0xc; pop edi; ret; 
0x00141aee: add eax, 0xc; ret; 
0x0010af72: add eax, 0xcc03848d; cli; clc; call dword ptr [eax - 0x73]; 
0x00054e76: add eax, 0xd; add esp, 4; jmp eax; 
0x001abcbc: add eax, 0xd; pop edi; ret; 
0x001a9b90: add eax, 0xd; ret; 
0x0012ee38: add eax, 0xdac78100; call dword ptr [eax]; 
0x00130537: add eax, 0xdbc28100; call 0xb8660551; ret; 
0x000ac379: add eax, 0xe580fff6; add cl, byte ptr [ebp - 0x18f1136e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000b3c77: add eax, 0xe9fffff6; inc eax; idiv edi; jmp dword ptr [esi + 0xf]; 
0x001abcc1: add eax, 0xe; pop edi; ret; 
0x001a9b94: add eax, 0xe; ret; 
0x0008950a: add eax, 0xec830000; or byte ptr [ebp + 0x52282454], cl; push esi; call dword ptr [eax + 0x48]; 
0x00126fe4: add eax, 0xec830000; or byte ptr [ebp - 0x6b2f87d], cl; call dword ptr [eax + 0x55]; 
0x00126f93: add eax, 0xec830000; or byte ptr [ebp - 0x6b3b57d], cl; call dword ptr [eax + 0x55]; 
0x00126f5d: add eax, 0xec830000; or byte ptr [ebp - 0x6b4427d], cl; call dword ptr [eax + 0x55]; 
0x0006078a: add eax, 0xeee85051; inc esi; std; call dword ptr [eax - 0x73]; 
0x000b351e: add eax, 0xf054a8d; test eax, ebx; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x000b94f9: add eax, 0xf057f8d; test dword ptr [0x5f000009], ebx; pop esi; pop ebx; ret; 
0x000bab3c: add eax, 0xf057f8d; test edx, ebx; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00181f53: add eax, 0xf0890000; pop ebx; pop esi; ret; 
0x0014b0f9: add eax, 0xf3d1b; mov edx, dword ptr gs:[0]; mov eax, dword ptr [eax + 0x1c8]; mov eax, dword ptr [edx + eax]; ret; 
0x001ab93b: add eax, 0xf; pop edi; ret; 
0x001a9b4f: add eax, 0xf; ret; 
0x001a042e: add eax, 0xfd830000; adc byte ptr [ebp - 0x79f00f93], cl; ret; 
0x0013f5f9: add eax, 0xff81b; mov eax, dword ptr [eax + 0xc4]; add eax, dword ptr gs:[0]; ret; 
0x00027182: add eax, 0xffee58e8; dec dword ptr [ebx + 0x10c083]; add byte ptr [ebp - 0x7cec8b40], al; in al, dx; or byte ptr [ebp - 0x218ef36d], cl; call dword ptr [edx + 0x50]; 
0x000ff433: add eax, 0xfffe17e9; jmp dword ptr [esi - 9]; 
0x001425ba: add eax, 0xffff14e9; inc dword ptr [ebx - 0x7a72fb14]; mov al, byte ptr [0x6afff958]; add eax, 0x4c858d50; je 0x1425ca; call dword ptr [eax - 0x18]; 
0x0017b307: add eax, 0xffff25e9; jmp dword ptr [esi - 0x70]; 
0x00156540: add eax, 0xfffffebb; jmp dword ptr [ebp - 0x5f]; 
0x000a08f3: add eax, 1; mov dword ptr [edx + 0x388], eax; ret; 
0x000abb20: add eax, 1; movsx edx, byte ptr [ecx + eax]; cmp edx, ebx; je 0xabb20; pop ebx; ret; 
0x00042d5d: add eax, 1; pop ebx; ret; 
0x001abc80: add eax, 1; pop edi; ret; 
0x00042a40: add eax, 1; ret; 
0x000a86bf: add eax, 1; test dl, dl; mov edx, 0; cmove eax, edx; ret; 
0x0009c2f7: add eax, 2; add esp, 0xc; ret; 
0x000abd26: add eax, 2; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001abc85: add eax, 2; pop edi; ret; 
0x000d99b7: add eax, 2; ret; 
0x001ab8c5: add eax, 3; pop edi; ret; 
0x000d99d0: add eax, 3; ret; 
0x000c4d83: add eax, 4; cmp edx, ecx; je 0xc4d8e; test edx, edx; jne 0xc4d80; ret; 
0x001269b3: add eax, 4; mov dword ptr [ebx + 0x45a0], eax; add esp, 8; mov eax, edx; pop ebx; ret; 
0x001abc8f: add eax, 4; pop edi; ret; 
0x0017c291: add eax, 4; push eax; push dword ptr [esp + 0x1c]; call 0x17c100; add esp, 0x1c; ret; 
0x001a9b6c: add eax, 4; ret; 
0x000d9b87: add eax, 4; test edx, edx; jne 0xd9b80; mov eax, ecx; pop ebx; ret; 
0x0015658a: add eax, 4; xchg dword ptr [eax], edx; cmp edx, 1; jg 0x156598; ret; 
0x001abc94: add eax, 5; pop edi; ret; 
0x001a9b70: add eax, 5; ret; 
0x001abc99: add eax, 6; pop edi; ret; 
0x001a9b74: add eax, 6; ret; 
0x001ab8eb: add eax, 7; pop edi; ret; 
0x001a9b0f: add eax, 7; ret; 
0x001747f7: add eax, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0017481a: add eax, 8; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x001abca3: add eax, 8; pop edi; ret; 
0x0015bf35: add eax, 8; push eax; call 0xc21a0; add esp, 0x1c; ret; 
0x001a9b7c: add eax, 8; ret; 
0x00141ae8: add eax, 9; and eax, 0xfffffff8; add eax, 0xc; ret; 
0x001abca8: add eax, 9; pop edi; ret; 
0x001a9b80: add eax, 9; ret; 
0x00025565: add eax, dword ptr [0]; ret; 
0x00176973: add eax, dword ptr [eax + edx*4 - 0x6d910]; notrack jmp eax; lea esi, [esi]; xor eax, eax; pop ebx; ret; 
0x0009d832: add eax, dword ptr [eax]; add al, ch; push es; ret; 
0x00097449: add eax, dword ptr [eax]; add byte ptr [eax + 0xf0], bh; mov ecx, 8; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x000b78af: add eax, dword ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x0005e071: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; sub dword ptr [ecx + 0x31], -7; call dword ptr [eax - 0x18]; 
0x000a5508: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; sub dword ptr [esi + 0x43], -7; call dword ptr [eax - 0x18]; 
0x000e2a74: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [ebp + 0x46], dh; stc; call dword ptr [eax - 0x18]; 
0x0005e04c: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [ecx + esi - 7], bh; call dword ptr [eax - 0x18]; 
0x00059b9a: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [esi + esi*2 - 7], ch; call dword ptr [eax - 0x18]; 
0x001860cc: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], edi; stc; call dword ptr [eax - 0x18]; 
0x001860fd: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [edx], esp; stc; call dword ptr [eax - 0x18]; 
0x0004a309: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [esi + esi*2 - 7], ebp; call dword ptr [eax - 0x18]; 
0x00138f1e: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg eax, edx; cmpsd dword ptr [esi], dword ptr es:[edi]; stc; call dword ptr [eax - 0x18]; 
0x00138e6f: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg esp, ecx; push ebp; stc; call dword ptr [eax - 0x18]; 
0x0017a416: add eax, dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0013457c: add eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 0x14; pop ebx; pop edi; ret; 
0x00094191: add eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 0xc; ret; 
0x001342df: add eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x001207cc: add eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e762e: add eax, dword ptr [eax]; add byte ptr [eax], al; cmovne eax, edx; ret; 
0x00133082: add eax, dword ptr [eax]; add byte ptr [eax], al; mov dword ptr [esp + 0x18], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0012e38e: add eax, dword ptr [eax]; add byte ptr [eax], al; mov ecx, 0x7fffffff; mov esi, 5; call dword ptr gs:[0x10]; 
0x00120798: add eax, dword ptr [eax]; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00094859: add eax, dword ptr [eax]; add byte ptr [eax], al; ret; 
0x000a55d3: add eax, dword ptr [eax]; add byte ptr [ebp + 0x94c87], cl; add byte ptr [ecx - 0x9efdbbc], cl; ret 0xf04; 
0x0010df27: add eax, dword ptr [eax]; add byte ptr [ebp - 0x65e477d], cl; call dword ptr [eax - 0x73]; 
0x00093fee: add eax, dword ptr [eax]; add byte ptr [ebp - 0x6c09579], cl; call dword ptr [eax - 0x73]; 
0x0018691c: add eax, dword ptr [eax]; add byte ptr [ebp - 0x76f28b40], al; push esp; and al, 4; jmp dword ptr [eax + 0x30]; 
0x0018bd25: add eax, dword ptr [eax]; add byte ptr [ebx + 0x548d08ec], al; and al, 0x38; push edx; push esi; call dword ptr [eax + 0x48]; 
0x0005314d: add eax, dword ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000657bc: add eax, dword ptr [eax]; add byte ptr [ebx + 0xf44244c], cl; mov edi, 0xfc985d0; inc ebp; ret 0xc189; 
0x001a581e: add eax, dword ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0010dfce: add eax, dword ptr [eax]; add byte ptr [ebx - 0x2476c7c], cl; clc; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x00123cd1: add eax, dword ptr [eax]; add byte ptr [ebx - 0x2776d73c], al; pop ebx; ret; 
0x0006831a: add eax, dword ptr [eax]; add byte ptr [ebx - 0x58f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x0018355d: add eax, dword ptr [eax]; add byte ptr [ebx - 0x7472f714], al; cdq; stc; call dword ptr [ecx - 0x77]; 
0x000297b9: add eax, dword ptr [eax]; add byte ptr [ebx - 0x74f3db94], cl; inc ebp; add dh, dh; ret; 
0x001251a3: add eax, dword ptr [eax]; add byte ptr [ebx - 0x76f7dbac], cl; add bh, byte ptr [eax + 1]; ret; 
0x0009395f: add eax, dword ptr [eax]; add byte ptr [ebx - 0x76fbdb8c], cl; ret; 
0x0016bb43: add eax, dword ptr [eax]; add byte ptr [ebx - 0x7c72f314], al; cmp dword ptr [ebx - 7], esp; call dword ptr [eax - 0x18]; 
0x000dd2f5: add eax, dword ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; and al, 0x46; stc; call dword ptr [eax + 0x56]; 
0x00126f42: add eax, dword ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; push ebx; dec ebx; stc; call dword ptr [eax + 0x55]; 
0x00102870: add eax, dword ptr [eax]; add byte ptr [ebx - 0x7cf3dbbc], cl; ret 0xc704; 
0x000eb73c: add eax, dword ptr [eax]; add byte ptr [ebx - 0xfd77c4c], cl; clc; inc dword ptr [ecx]; fidivr word ptr [esi]; jmp esi; 
0x00186b19: add eax, dword ptr [eax]; add byte ptr [ecx + 0x28c48303], cl; pop ebx; ret; 
0x001948ae: add eax, dword ptr [eax]; add byte ptr [ecx + 0x5b5e5fd0], cl; ret; 
0x001846f4: add eax, dword ptr [eax]; add byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x001340d3: add eax, dword ptr [eax]; add byte ptr [ecx - 0x33f7b], cl; inc edi; test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x0013b132: add eax, dword ptr [eax]; add byte ptr [ecx], al; call eax; 
0x0006f441: add eax, dword ptr [eax]; add byte ptr [ecx], al; ret; 
0x000894aa: add eax, dword ptr [eax]; add byte ptr [ecx], bh; ret 0x820f; 
0x000ec25e: add eax, dword ptr [eax]; add byte ptr [ecx], bh; ret; 
0x0004cfb3: add eax, dword ptr [eax]; add byte ptr [ecx], dh; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000b34bf: add eax, dword ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x0013c8d8: add eax, dword ptr [eax]; add byte ptr [edi + 7], dh; sar eax, 5; add esp, 0xc; ret; 
0x00142e54: add eax, dword ptr [eax]; add byte ptr [edi], cl; inc esp; ror byte ptr [ebx - 0x76f3dbbc], 1; adc edi, dword ptr [ecx]; ret 0x6c74; 
0x0005ee73: add eax, dword ptr [eax]; add byte ptr [edi], cl; mov dh, 0x57; or al, 0xf6; ret 0xf40; 
0x000835c8: add eax, dword ptr [eax]; add byte ptr [edx + 2], ch; push 0; push 0; push esi; call dword ptr [edi + 0x40]; 
0x00138447: add eax, dword ptr [eax]; add byte ptr [edx], al; call dword ptr [ebx + 0x14]; 
0x0008970e: add eax, dword ptr [eax]; add byte ptr [edx], ch; push edx; push eax; push esi; call dword ptr [ebx + 0x40]; 
0x000a08d7: add eax, dword ptr [eax]; add byte ptr [esi + 4], dh; ret; 
0x0004ce84: add eax, dword ptr [eax]; add cl, bl; xchg dword ptr [eax], ebx; ret 0xfff9; 
0x0010d4fc: add eax, dword ptr [eax]; add dh, dh; ret 0xf02; 
0x001ab8b9: add eax, dword ptr [eax]; add dh, dh; ret 0xf04; 
0x001ab8d6: add eax, dword ptr [eax]; add dh, dh; ret 0xf20; 
0x001ab8df: add eax, dword ptr [eax]; add dh, dh; ret 0xf40; 
0x0014b0f7: add eax, dword ptr [eax]; add eax, 0xf3d1b; mov edx, dword ptr gs:[0]; mov eax, dword ptr [eax + 0x1c8]; mov eax, dword ptr [edx + eax]; ret; 
0x0019bf6c: add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019cebd: add eax, dword ptr [eax]; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0008dd6f: add eax, dword ptr [eax]; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x00128aa0: add eax, dword ptr [eax]; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x00145df9: add eax, dword ptr [eax]; add esp, 8; pop ebx; ret; 
0x001abb85: add eax, dword ptr [eax]; je 0x1abc8a; mov eax, 4; pop edi; ret; 
0x0010c4bc: add eax, dword ptr [eax]; nop; mov eax, 0x42; call dword ptr gs:[0x10]; 
0x0017bacd: add eax, dword ptr [ebp + 0x317e74c0]; rol byte ptr [ebx - 0x6bf0fd08], cl; ret 0xf883; 
0x00157a52: add eax, dword ptr [ebp - 0x747bf040]; add byte ptr [eax], al; add byte ptr [ebx - 0x7ad7dbac], cl; ror byte ptr [edi], cl; xchg ebp, eax; ret 0xd789; 
0x0016f374: add eax, dword ptr [ebp - 0x7cf28b40]; in al, dx; or al, 0x8b; push eax; add al, 0x50; call dword ptr [edx + 0x10]; 
0x00141571: add eax, dword ptr [ebx + 0x428801e8]; add dword ptr [eax + 2], edi; ret; 
0x001708fe: add eax, dword ptr [ebx + 0x478b08ec]; add al, 0x83; in eax, 0xfc; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x000919f5: add eax, dword ptr [ebx + 0x57402fa]; pop ebx; pop esi; pop edi; ret; 
0x0018c416: add eax, dword ptr [ebx + 0x5e5b04c4]; jmp eax; 
0x0007c290: add eax, dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000a15a6: add eax, dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x00081524: add eax, dword ptr [ebx + 0x5e5bef26]; pop edi; ret; 
0x0009191a: add eax, dword ptr [ebx + 0x87403f8]; pop ebx; pop esi; pop edi; ret; 
0x00178a7a: add eax, dword ptr [ebx - 0x137cef3c]; or al, 0x8b; push eax; add al, 0x50; call dword ptr [edx + 0x10]; 
0x00132823: add eax, dword ptr [ebx - 0x27fe031d]; pop ebx; pop esi; ret; 
0x0003ef44: add eax, dword ptr [ebx - 0x373ef314]; or dword ptr [ebp + 0x33], esp; add eax, 0x18; mov dword ptr [ebp + edi], edx; push dword ptr [ebx + 4]; call eax; 
0x0008157e: add eax, dword ptr [ebx - 0x3b7c10dd]; add al, 0x5b; pop esi; ret; 
0x0007c0fb: add eax, dword ptr [ebx - 0x3b7cdff2]; add al, 0x5b; pop esi; ret; 
0x001782f9: add eax, dword ptr [ebx - 0x4614ef3c]; nop; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x00098da4: add eax, dword ptr [ebx - 0x7af0fe06]; mov byte ptr [0x89000000], al; ret 0xf283; 
0x000ac4f1: add eax, dword ptr [ebx - 0xf76fb3c]; pop ebx; pop esi; ret; 
0x0006511a: add eax, dword ptr [ecx + edx*4 - 0x73f14]; jmp eax; 
0x00177081: add eax, dword ptr [ecx]; add byte ptr [eax], al; mov eax, dword ptr [edi + 0x50]; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x0009febc: add eax, dword ptr [ecx]; add byte ptr [eax], al; mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0018c4c8: add eax, dword ptr [ecx]; mov eax, 0xf0; mov ecx, 1; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x000a6c54: add eax, dword ptr [ecx]; ret 0x38b; 
0x00096cde: add eax, dword ptr [ecx]; ret 0x8966; 
0x0006be3f: add eax, dword ptr [ecx]; ret 0xa3e9; 
0x000e3b48: add eax, dword ptr [ecx]; rol byte ptr [ecx], 1; ret; 
0x000658a4: add eax, dword ptr [edi + edx*4]; mov edi, ecx; jmp eax; 
0x000eb5cd: add eax, dword ptr [edi - 7]; call dword ptr [eax - 0x18]; 
0x000e8223: add eax, dword ptr [edx]; add esp, 0xc; ret; 
0x00064891: add eax, dword ptr [esi + edx*4 - 0x73e94]; jmp eax; 
0x0006602c: add eax, dword ptr [esi + edx*4 - 0x74014]; jmp eax; 
0x000815fc: add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00054e73: add eax, dword ptr [esp]; add eax, 0xd; add esp, 4; jmp eax; 
0x000535f0: add eax, dword ptr [esp]; ret; 
0x000b34be: add eax, dword ptr ds:[eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x00025564: add eax, dword ptr gs:[0]; ret; 
0x0013be9e: add eax, eax; call 0x1f441ab; pop ebx; ret; 
0x000fd3bf: add eax, eax; pop ebx; pop esi; ret; 
0x00156b30: add eax, ebx; cmp edx, ecx; jne 0x156b00; pop ebx; pop esi; ret; 
0x0017ca7e: add eax, ebx; mov dword ptr [edx + 0xc], eax; mov eax, ebx; pop ebx; ret; 
0x00132827: add eax, ebx; pop ebx; pop esi; ret; 
0x00041713: add eax, ebx; push eax; mov eax, dword ptr [esp + 0x28]; call eax; 
0x001238bc: add eax, ecx; adc edx, 0; ret; 
0x000c09bb: add eax, ecx; add esi, ecx; call 0x189c31; add ecx, 0x10c6b0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x001ace6d: add eax, ecx; and eax, 0xf0f0f0f; add eax, edx; imul eax, eax, 0x1010101; shr eax, 0x18; ret; 
0x001a7f19: add eax, ecx; call 0x189c1d; add ebx, 0x34454; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001a7e54: add eax, ecx; call 0x189c1d; add ebx, 0x34519; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001a6549: add eax, ecx; call 0x189c1d; add ebx, 0x35d20; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001a643a: add eax, ecx; call 0x189c1d; add ebx, 0x35e2f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019ce65: add eax, ecx; call 0x189c1d; add ebx, 0x3f244; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019be58: add eax, ecx; call 0x189c1d; add ebx, 0x40091; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019ae78: add eax, ecx; call 0x189c1d; add ebx, 0x40eb1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198f59: add eax, ecx; call 0x189c1d; add ebx, 0x42c10; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198e54: add eax, ecx; call 0x189c1d; add ebx, 0x42c55; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198c45: add eax, ecx; call 0x189c1d; add ebx, 0x42e64; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196f49: add eax, ecx; call 0x189c1d; add ebx, 0x449a0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196e44: add eax, ecx; call 0x189c1d; add ebx, 0x449e5; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196c38: add eax, ecx; call 0x189c1d; add ebx, 0x44bf1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194f49: add eax, ecx; call 0x189c1d; add ebx, 0x46720; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194e44: add eax, ecx; call 0x189c1d; add ebx, 0x46765; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194c38: add eax, ecx; call 0x189c1d; add ebx, 0x46971; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0007ca94: add eax, ecx; ljmp 0x450f:0x107f602; ret 0xec83; 
0x001a7cdf: add eax, ecx; pop ebx; pop esi; ret; 
0x00194454: add eax, ecx; pop ebx; ret; 
0x000c0ff6: add eax, ecx; pop edi; ret; 
0x000c12e0: add eax, ecx; ret; 
0x0019cc54: add eax, ecx; sfence; call 0x189c1d; add ebx, 0x3f292; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019bc84: add eax, ecx; sfence; call 0x189c1d; add ebx, 0x400a2; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019aaae: add eax, ecx; sfence; call 0x189c1d; add ebx, 0x40ff8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019894e: add eax, ecx; sfence; call 0x189c1d; add ebx, 0x42ed8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001969ae: add eax, ecx; sfence; call 0x189c1d; add ebx, 0x44bf8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000c0ff4: add eax, edi; add eax, ecx; pop edi; ret; 
0x00144f3f: add eax, edi; inc ebp; fadd qword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx - 0x837b], cl; call dword ptr [eax + 0x6a]; 
0x00198d4d: add eax, edi; pop edi; call 0x189c1d; add ebx, 0x42e1b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196d3d: add eax, edi; pop edi; call 0x189c1d; add ebx, 0x44bab; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194d3d: add eax, edi; pop edi; call 0x189c1d; add ebx, 0x4692b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000c1097: add eax, edi; pop edi; ret; 
0x00041800: add eax, edi; push eax; mov eax, dword ptr [esp + 0x28]; call eax; 
0x000c1276: add eax, edi; sub eax, 0x10; pop edi; ret; 
0x000c1974: add eax, edi; xor ch, ch; add eax, ecx; pop edi; ret; 
0x000b0066: add eax, edx; add eax, 0x10; pop edi; pop esi; ret; 
0x000b0073: add eax, edx; add eax, 0x20; pop edi; pop esi; ret; 
0x000b0080: add eax, edx; add eax, 0x30; pop edi; pop esi; ret; 
0x000c1b6d: add eax, edx; add eax, ecx; ret; 
0x001acdfb: add eax, edx; and eax, 0xf0f0f0f; imul eax, eax, 0x1010101; shr eax, 0x18; ret; 
0x001ace74: add eax, edx; imul eax, eax, 0x1010101; shr eax, 0x18; ret; 
0x00171701: add eax, edx; pop ebx; pop esi; ret; 
0x000b005c: add eax, edx; pop edi; pop esi; ret; 
0x000c1cd3: add eax, edx; ret; 
0x00085a54: add eax, esi; add al, byte ptr [eax]; pop ebx; ret; 
0x00128a9e: add eax, esi; add eax, dword ptr [eax]; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x0013dd60: add eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000c1237: add eax, esi; pop ebx; pop esi; sub eax, 0x10; pop edi; ret; 
0x00178c56: add eax, esi; push es; add byte ptr [ebx - 0x7c72fb14], al; je 0x178c19; stc; call dword ptr [ebp + 0x57]; 
0x00158e1a: add ebp, 0x5e; stc; call dword ptr [eax - 0x18]; 
0x00158fad: add ebp, 0x5e; stc; call dword ptr [eax - 0x73]; 
0x000af862: add ebp, dword ptr [ecx]; ret 0x1489; 
0x000c1a62: add ebp, dword ptr [ecx]; ret 0x4a8d; 
0x0013eaea: add ebp, dword ptr [ecx]; ret 0x8166; 
0x000c1aa7: add ebp, dword ptr [ecx]; ret 0xc031; 
0x000ae6a6: add ebp, dword ptr [ecx]; ret 0xd101; 
0x000ad622: add ebp, dword ptr [ecx]; ret 0xd601; 
0x00107d2d: add ebp, dword ptr [ecx]; ret 0xda01; 
0x00107c0f: add ebp, dword ptr [ecx]; ret 0xea01; 
0x000a1498: add ebp, dword ptr [ecx]; ret; 
0x00025f7d: add ebp, dword ptr [edi + 8]; mov dword ptr [esp], ebp; call esi; 
0x00184203: add ebp, dword ptr [edi]; jbe 0x18418c; in al, dx; add al, 0x83; ret; 
0x00088b60: add ebp, dword ptr [edx + 1]; push 0; push 0; push ebx; call dword ptr [eax + 0x24]; 
0x0018b60c: add ebp, dword ptr [edx + 1]; push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x0018b4ea: add ebp, dword ptr [edx + 2]; push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x0006fa27: add ebp, ecx; ret; 
0x0008ecc2: add ebp, edx; xor eax, eax; add esp, 0xc; ret; 
0x00153cd6: add ebp, esi; jmp dword ptr [esi - 0x70]; 
0x0010b14f: add ebx, -5; clc; call dword ptr [ecx + 0x6a]; 
0x000bb5a4: add ebx, 0x10; call 0x189c31; add ecx, 0x111984; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9ea4: add ebx, 0x10; call 0x189c31; add ecx, 0x112f24; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008fa5f: add ebx, 0x10; call dword ptr gs:[0x10]; 
0x000c2431: add ebx, 0x10acc7; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; add esi, ecx; jmp ebx; 
0x000c21d7: add ebx, 0x10af21; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; add esi, ecx; jmp ebx; 
0x001a7f20: add ebx, 0x34454; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001a7e5b: add ebx, 0x34519; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001a6550: add ebx, 0x35d20; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001a6441: add ebx, 0x35e2f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019de72: add ebx, 0x3e33e; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019dc6e: add ebx, 0x3e442; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019d179: add ebx, 0x3ef37; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019d06f: add ebx, 0x3f041; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019cf68: add ebx, 0x3f148; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019ce6c: add ebx, 0x3f244; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019cc5e: add ebx, 0x3f292; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019ceb9: add ebx, 0x3f2b7; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0019c179: add ebx, 0x3fd77; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019c06f: add ebx, 0x3fe81; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019bf68: add ebx, 0x3ff88; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019be5f: add ebx, 0x40091; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019bc8e: add ebx, 0x400a2; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019beb9: add ebx, 0x400f7; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0019be6f: add ebx, 0x40181; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b199: add ebx, 0x40b97; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b08f: add ebx, 0x40ca1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019af88: add ebx, 0x40da8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019ae7f: add ebx, 0x40eb1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019ad6c: add ebx, 0x40f04; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019aed9: add ebx, 0x40f17; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0019ae8f: add ebx, 0x40fa1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019aab8: add ebx, 0x40ff8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019a41f: add ebx, 0x41691; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019a401: add ebx, 0x416af; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019a368: add ebx, 0x41748; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019a2a1: add ebx, 0x4180f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019a208: add ebx, 0x418a8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019a141: add ebx, 0x4196f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019a0a8: add ebx, 0x41a08; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199fe1: add ebx, 0x41acf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199f48: add ebx, 0x41b68; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199e81: add ebx, 0x41c2f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199de8: add ebx, 0x41cc8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199d21: add ebx, 0x41d8f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199c88: add ebx, 0x41e28; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199bc1: add ebx, 0x41eef; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199b28: add ebx, 0x41f88; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199a61: add ebx, 0x4204f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001999c8: add ebx, 0x420e8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199901: add ebx, 0x421af; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199868: add ebx, 0x42248; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001997a1: add ebx, 0x4230f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199708: add ebx, 0x423a8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199641: add ebx, 0x4246f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001995a8: add ebx, 0x42508; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001994e1: add ebx, 0x425cf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199448: add ebx, 0x42668; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199381: add ebx, 0x4272f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001992e8: add ebx, 0x427c8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199221: add ebx, 0x4288f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199188: add ebx, 0x42928; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001990c1: add ebx, 0x429ef; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199028: add ebx, 0x42a88; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198f60: add ebx, 0x42c10; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198e5b: add ebx, 0x42c55; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198d55: add ebx, 0x42e1b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198c4c: add ebx, 0x42e64; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198958: add ebx, 0x42ed8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198c96: add ebx, 0x42f9a; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0019831f: add ebx, 0x43511; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198301: add ebx, 0x4352f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198268: add ebx, 0x435c8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001981b1: add ebx, 0x4367f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198118: add ebx, 0x43718; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198061: add ebx, 0x437cf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197fc8: add ebx, 0x43868; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197f11: add ebx, 0x4391f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197e78: add ebx, 0x439b8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197dc1: add ebx, 0x43a6f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197d28: add ebx, 0x43b08; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197c71: add ebx, 0x43bbf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197bd8: add ebx, 0x43c58; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197b21: add ebx, 0x43d0f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197a88: add ebx, 0x43da8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001979d1: add ebx, 0x43e5f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197938: add ebx, 0x43ef8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197881: add ebx, 0x43faf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001977e8: add ebx, 0x44048; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197731: add ebx, 0x440ff; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197698: add ebx, 0x44198; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001975e1: add ebx, 0x4424f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197548: add ebx, 0x442e8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197491: add ebx, 0x4439f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001973f8: add ebx, 0x44438; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197341: add ebx, 0x444ef; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001972a8: add ebx, 0x44588; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001971f1: add ebx, 0x4463f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197158: add ebx, 0x446d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001970a1: add ebx, 0x4478f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197008: add ebx, 0x44828; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196f50: add ebx, 0x449a0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196e4b: add ebx, 0x449e5; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196d45: add ebx, 0x44bab; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196c3f: add ebx, 0x44bf1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001969b8: add ebx, 0x44bf8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196ca4: add ebx, 0x44d0c; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00196c55: add ebx, 0x44d9b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019631f: add ebx, 0x45291; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196301: add ebx, 0x452af; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196268: add ebx, 0x45348; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001961b1: add ebx, 0x453ff; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196118: add ebx, 0x45498; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196061: add ebx, 0x4554f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195fc8: add ebx, 0x455e8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195f11: add ebx, 0x4569f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195e78: add ebx, 0x45738; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195dc1: add ebx, 0x457ef; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195d28: add ebx, 0x45888; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195c71: add ebx, 0x4593f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195bd8: add ebx, 0x459d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195b21: add ebx, 0x45a8f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195a88: add ebx, 0x45b28; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001959d1: add ebx, 0x45bdf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195938: add ebx, 0x45c78; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195881: add ebx, 0x45d2f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001957e8: add ebx, 0x45dc8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195731: add ebx, 0x45e7f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195698: add ebx, 0x45f18; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001955e1: add ebx, 0x45fcf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195548: add ebx, 0x46068; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195491: add ebx, 0x4611f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001953f8: add ebx, 0x461b8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195341: add ebx, 0x4626f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001952a8: add ebx, 0x46308; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001951f1: add ebx, 0x463bf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195158: add ebx, 0x46458; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001950a1: add ebx, 0x4650f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195008: add ebx, 0x465a8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194f50: add ebx, 0x46720; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194e4b: add ebx, 0x46765; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194d45: add ebx, 0x4692b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194c3f: add ebx, 0x46971; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194ca4: add ebx, 0x46a8c; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00194c55: add ebx, 0x46b1b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193a5d: add ebx, 0x47953; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x001939ad: add ebx, 0x47a03; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x001938c5: add ebx, 0x47a6b; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00193503: add ebx, 0x47c2d; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00193447: add ebx, 0x47ce9; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x001933eb: add ebx, 0x47d45; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0019332d: add ebx, 0x47e03; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00193245: add ebx, 0x47e6b; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0009f6d8: add ebx, 1; mov eax, 0x115; call dword ptr gs:[0x10]; 
0x0009fdf9: add ebx, 1; mov eax, 0x116; call dword ptr gs:[0x10]; 
0x0008f6a7: add ebx, 8; add esi, 8; push eax; call ecx; 
0x00084454: add ebx, dword ptr [ebx + 0x5e]; pop edi; ret; 
0x000abed8: add ebx, dword ptr [ebx + 0x5e]; ret; 
0x000c21dd: add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; add esi, ecx; jmp ebx; 
0x0019324b: add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00194c45: add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194caa: add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x000b99c9: add ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x0019b350: add ebx, dword ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x0019533a: add ebx, dword ptr [edi - 0x18]; fmul qword ptr [eax - 1]; inc dword ptr [ecx + 0x4626fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000c2b35: add ebx, dword ptr [esi + 0x5f]; ret; 
0x000704b7: add ebx, eax; jmp ebx; 
0x000912b8: add ebx, eax; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0012e1e0: add ebx, eax; mov ebp, esi; call ebx; 
0x0012e1e0: add ebx, eax; mov ebp, esi; call ebx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x000af77a: add ebx, ebp; adc eax, 0x8300768d; ret 0x8b20; 
0x0015bda8: add ebx, ebp; ret; 
0x000a01d8: add ebx, ebx; mov ebx, dword ptr [ebx]; mov eax, 0x106; call dword ptr gs:[0x10]; 
0x000a024c: add ebx, ebx; mov ebx, dword ptr [ebx]; mov eax, 0x198; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000b5a63: add ebx, esi; movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000b5d13: add ebx, esi; movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; ret; 
0x000b16a3: add ebx, esi; movq qword ptr [edx], mm0; mov eax, edi; pop edi; ret; 
0x000b1933: add ebx, esi; movq qword ptr [edx], mm0; mov eax, edx; ret; 
0x000c0f31: add ecx, 0x10c143; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c0a26: add ecx, 0x10c64e; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c0a01: add ecx, 0x10c673; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c09e1: add ecx, 0x10c693; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c09c4: add ecx, 0x10c6b0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c0925: add ecx, 0x10c6cf; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c0997: add ecx, 0x10c6dd; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c0907: add ecx, 0x10c6ed; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c0980: add ecx, 0x10c6f4; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c0965: add ecx, 0x10c70f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c08e2: add ecx, 0x10c712; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c0943: add ecx, 0x10c731; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c08b8: add ecx, 0x10c73c; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c089f: add ecx, 0x10c755; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c087e: add ecx, 0x10c776; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c085a: add ecx, 0x10c79a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c083c: add ecx, 0x10c7b8; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c07b9: add ecx, 0x10c83b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bd607: add ecx, 0x10f96d; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bd5e2: add ecx, 0x10f992; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bd5b8: add ecx, 0x10f9bc; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bd59f: add ecx, 0x10f9d5; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bd57e: add ecx, 0x10f9f6; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bd55a: add ecx, 0x10fa1a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bd53c: add ecx, 0x10fa38; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bd520: add ecx, 0x10fa54; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bb691: add ecx, 0x11180f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb5ac: add ecx, 0x111984; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb599: add ecx, 0x111997; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb57d: add ecx, 0x1119b3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000baa86: add ecx, 0x11241a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000baa61: add ecx, 0x11243f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000baa41: add ecx, 0x11245f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000baa24: add ecx, 0x11247c; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba985: add ecx, 0x11249b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba9f7: add ecx, 0x1124a9; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba9e0: add ecx, 0x1124c0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba9c5: add ecx, 0x1124db; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba9a3: add ecx, 0x1124fd; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba8b1: add ecx, 0x11256f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba891: add ecx, 0x11258f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba86c: add ecx, 0x1125b4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b9f91: add ecx, 0x112daf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9eac: add ecx, 0x112f24; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9e99: add ecx, 0x112f37; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9e7d: add ecx, 0x112f53; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9446: add ecx, 0x1138fa; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9421: add ecx, 0x11391f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9401: add ecx, 0x11393f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b93e4: add ecx, 0x11395c; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9345: add ecx, 0x11397b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b93b7: add ecx, 0x113989; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b93a0: add ecx, 0x1139a0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9385: add ecx, 0x1139bb; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9363: add ecx, 0x1139dd; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9281: add ecx, 0x113a3f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b9261: add ecx, 0x113a5f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b923c: add ecx, 0x113a84; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0010cda3: add ecx, 0x150; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x00184dd8: add ecx, 0x180; shr ecx, 2; rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x000a0ac9: add ecx, 0x19e34b; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0x50; jbe 0xa0ae0; ret; 
0x00092d1f: add ecx, 0x474; call dword ptr gs:[0x10]; 
0x0010cc20: add ecx, 0x4c; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x00127129: add ecx, 0x4f; stc; call dword ptr [ecx + 0x51]; 
0x000408a2: add ecx, 0xa; mov dword ptr [edx], ecx; ret; 
0x00042e24: add ecx, 1; pop ebx; mov eax, ecx; ret; 
0x00179063: add ecx, 4; push ecx; push edi; call dword ptr [eax + 8]; 
0x000570e4: add ecx, dword ptr [ebp + 0x2baff46]; add byte ptr [eax], al; add byte ptr [edi], cl; dec edi; ret 0xdb31; 
0x000bb099: add ecx, dword ptr [ebp + 0x5e5f0747]; pop ebx; ret; 
0x000c2b32: add ecx, dword ptr [ebp + 0x5f5e0346]; ret; 
0x000d63ea: add ecx, dword ptr [ebp - 0x63f7380]; call dword ptr [eax + 0x56]; 
0x000d682c: add ecx, dword ptr [ebp - 0x63f8380]; call dword ptr [eax + 0x56]; 
0x000b3500: add ecx, dword ptr [ebp - 0x7af0fcb6]; test byte ptr [edx], 0; add byte ptr [edi + 0x5b], bl; ret; 
0x0017826f: add ecx, dword ptr [ebx + 0x20508b00]; push eax; call dword ptr [edx + 0x10]; 
0x000c0aec: add ecx, dword ptr [ebx + 0x5b0c2444]; pop esi; ret; 
0x000bd699: add ecx, dword ptr [ebx + 0x5e082444]; ret; 
0x000c27b3: add ecx, dword ptr [ebx + 0x5f082444]; ret; 
0x0010d575: add ecx, dword ptr [ebx - 0x3b37d74]; clc; inc dword ptr [ecx]; sar dword ptr [esi], 1; jmp ecx; 
0x001a31c7: add ecx, dword ptr [ebx - 0x64737474]; idiv edi; mov eax, dword ptr [ebx + eax*4 - 0x86474]; sub eax, ecx; pop ebx; ret; 
0x000c0ae7: add ecx, dword ptr [ecx + 0x3508908]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd694: add ecx, dword ptr [ecx + 0x3508908]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b99c4: add ecx, dword ptr [ecx + 0x357890f]; pop edi; pop esi; pop ebx; ret; 
0x000b5ae6: add ecx, dword ptr [ecx + 0x428d0342]; push es; pop edi; ret; 
0x000b5c16: add ecx, dword ptr [ecx + 0x428d0342]; push es; ret; 
0x0005beca: add ecx, dword ptr [ecx + 0x5f5e5bf0]; ret; 
0x000b3959: add ecx, dword ptr [ecx + 0x7eb83d0]; lea ecx, [edx + 7]; jne 0xb3801; pop ebx; ret; 
0x00128389: add ecx, dword ptr [ecx + 0xa890451]; mov dword ptr [edx + 4], eax; ret; 
0x000b9369: add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9242: add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00087079: add ecx, dword ptr [ecx - 0x2dcefbad]; mov eax, edx; pop ebx; ret; 
0x000b1836: add ecx, dword ptr [ecx - 0x2f76fcbe]; ret; 
0x001283b0: add ecx, dword ptr [ecx - 0x3f7afbbe]; je 0x1283ba; mov dword ptr [eax], edx; ret; 
0x0017be2d: add ecx, dword ptr [ecx - 0x76f7dbbc]; ret 0x18b; 
0x0017bebd: add ecx, dword ptr [ecx - 0x76fbdbbc]; ret 0x18b; 
0x000bfea9: add ecx, dword ptr [ecx - 0x776fcbe]; pop ebx; pop edi; ret; 
0x000b1706: add ecx, dword ptr [ecx - 0x776fcbe]; pop edi; ret; 
0x000e0471: add ecx, dword ptr [ecx - 0x7cfbdb94]; call 0xf1740ac; xchg dword ptr [edi - 0x7c00000a], ebx; ret; 
0x000e0c82: add ecx, dword ptr [ecx - 0x7cfbdb94]; call 0xf1748bd; xchg dword ptr [esi - 0x7c000012], ecx; ret; 
0x000e02f5: add ecx, dword ptr [ecx - 0x7cfbdb94]; ret; 
0x000bac19: add ecx, dword ptr [ecx]; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00125afc: add ecx, dword ptr [edi]; dec eax; ret 0xf8c1; 
0x000290ae: add ecx, dword ptr [edi]; dec ecx; ret 0xec83; 
0x000292a9: add ecx, dword ptr [edi]; dec ecx; ret; 
0x0008e549: add ecx, dword ptr [edi]; inc esp; ret 0x978b; 
0x000593fd: add ecx, dword ptr [edi]; mov es, word ptr [eax - 0x77000000]; ret 0xb58b; 
0x0013fd88: add ecx, dword ptr [edi]; test byte ptr [eax - 0x7d000000], cl; ret 0x8303; 
0x000bab01: add ecx, dword ptr [edi]; test dword ptr [eax], ebx; or al, byte ptr [eax]; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00091a74: add ecx, dword ptr [edi]; test dword ptr [ebp - 0x77000000], ebp; ret 0xca83; 
0x0010893e: add ecx, dword ptr [edi]; test dword ptr [esi - 0x74000008], ecx; mov esp, 0x9024; add byte ptr [ebx - 0x317cf314], al; call dword ptr [edi - 0x18]; 
0x000b3503: add ecx, dword ptr [edi]; test esi, esi; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x000995d4: add ecx, dword ptr [edi]; xchg ebp, eax; ret 0xc231; 
0x0014598d: add ecx, dword ptr [edi]; xchg ebp, eax; ret; 
0x0014591b: add ecx, dword ptr [edi]; xchg esp, eax; ret; 
0x00024e73: add ecx, dword ptr [esi]; push eax; mov dword ptr [esp + 0xc], eax; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call ecx; 
0x000a08ef: add ecx, eax; call 0x1ca8bfa; mov dword ptr [edx + 0x388], eax; ret; 
0x00070798: add ecx, eax; jmp ecx; 
0x0003ba10: add ecx, eax; mov dword ptr [esp + 0xc], edx; mov eax, dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0003c0e9: add ecx, eax; mov dword ptr [esp + 4], edx; mov eax, dword ptr [esp + 8]; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0003bdc1: add ecx, eax; mov dword ptr [esp + 8], edx; mov eax, dword ptr [esp + 0xc]; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00071992: add ecx, eax; mov edx, ecx; mov ecx, dword ptr [esp + 0x4c]; mov dword ptr [esp + 4], ecx; jmp edx; 
0x0003aa1e: add ecx, ebp; out dx, al; idiv edi; jmp dword ptr [esi - 0x70]; 
0x000a35bc: add ecx, ebp; push 0x8dffffff; sbb dword ptr [eax], -0x67; stc; call dword ptr [eax - 0x73]; 
0x00079f97: add ecx, ebp; ret; 
0x001113f0: add ecx, edi; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x000c30e8: add ecx, edx; notrack jmp ecx; lea esi, [esi]; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x000a6e97: add ecx, edx; test eax, eax; jne 0xa6e90; mov eax, ecx; ret; 
0x0010af75: add ecx, esp; cli; clc; call dword ptr [eax - 0x73]; 
0x001319f9: add ecx, esp; cmc; dec dword ptr [ebp - 0x76fbdbb4]; ret 0x448b; 
0x000bb575: add edi, 0x10; call 0x189c31; add ecx, 0x1119b3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9e75: add edi, 0x10; call 0x189c31; add ecx, 0x112f53; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009109d: add edi, 0x89744; add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; call dword ptr gs:[0x10]; 
0x000650b6: add edi, dword ptr [eax + edx*4 - 0x73f94]; mov edx, edi; mov edi, ecx; jmp edx; 
0x00064bf6: add edi, dword ptr [eax + edx*4 - 0x74094]; mov edx, edi; mov edi, ecx; jmp edx; 
0x00064eea: add edi, dword ptr [eax + edx*4]; mov edx, edi; mov byte ptr [esp + 0x5e], 0x20; mov edi, ecx; mov dword ptr [esp + 0x1c], 1; jmp edx; 
0x00064ba5: add edi, dword ptr [eax + edx*4]; mov edx, edi; mov edi, ecx; jmp edx; 
0x00065945: add edi, dword ptr [ecx + edx*4 - 0x73e94]; mov edx, edi; mov edi, eax; jmp edx; 
0x0010323f: add edi, dword ptr [ecx]; ret 0x420f; 
0x000a2b84: add edi, dword ptr [ecx]; ret; 
0x001939af: add edi, dword ptr [edx + 4]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0019332f: add edi, dword ptr [esi + 4]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00171ccc: add edi, eax; sub edx, eax; push edx; push edi; push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x00083d3d: add edi, ebx; dec dword ptr [ebp - 0x67cb77a]; call dword ptr [eax - 0x73]; 
0x0004173e: add edi, ebx; push edi; push edx; mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 0x24], edx; call eax; 
0x0019b739: add edi, ecx; add edx, edi; lea eax, [edi + eax + 0xa]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b7c9: add edi, ecx; add edx, edi; lea eax, [edi + eax + 0xb]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b859: add edi, ecx; add edx, edi; lea eax, [edi + eax + 0xc]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b8e9: add edi, ecx; add edx, edi; lea eax, [edi + eax + 0xd]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b979: add edi, ecx; add edx, edi; lea eax, [edi + eax + 0xe]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019ba09: add edi, ecx; add edx, edi; lea eax, [edi + eax + 0xf]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b229: add edi, ecx; add edx, edi; lea eax, [edi + eax + 1]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b2b9: add edi, ecx; add edx, edi; lea eax, [edi + eax + 2]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b349: add edi, ecx; add edx, edi; lea eax, [edi + eax + 3]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b3d9: add edi, ecx; add edx, edi; lea eax, [edi + eax + 4]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b469: add edi, ecx; add edx, edi; lea eax, [edi + eax + 5]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b4f9: add edi, ecx; add edx, edi; lea eax, [edi + eax + 6]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b589: add edi, ecx; add edx, edi; lea eax, [edi + eax + 7]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b619: add edi, ecx; add edx, edi; lea eax, [edi + eax + 8]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b6a9: add edi, ecx; add edx, edi; lea eax, [edi + eax + 9]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000baa1b: add edi, ecx; add esi, ecx; call 0x189c31; add ecx, 0x11247c; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b93db: add edi, ecx; add esi, ecx; call 0x189c31; add ecx, 0x11395c; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00199a5e: add edi, edi; inc dword ptr [ecx + 0x4204fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001998fe: add edi, edi; inc dword ptr [ecx + 0x421afc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00199865: add edi, edi; inc dword ptr [ecx + 0x42248c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0016fa3c: add edi, edi; jae 0x16fa48; push esi; call dword ptr [ebx + 0xc]; 
0x0011b839: add edi, edi; je 0x11b861; xor bh, bh; ja 0x11b84d; call dword ptr [edi + 0x24]; 
0x0011c969: add edi, edi; je 0x11c991; xor bh, bh; ja 0x11c97d; call dword ptr [edi + 0x24]; 
0x0011dad9: add edi, edi; je 0x11db01; xor bh, bh; ja 0x11daed; call dword ptr [edi + 0x24]; 
0x0008e165: add edi, edi; je 0x8e18d; xor bh, bh; je 0x8e191; cmp al, 0x51; call eax; 
0x0003ce8a: add edi, esi; ret 0; 
0x001aafae: add edx, 0; jl 0x1ab1d0; mov eax, ecx; ret; 
0x000bd595: add edx, 0x10; sub edx, ecx; call 0x189c31; add ecx, 0x10f9d5; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba8a7: add edx, 0x10; sub edx, ecx; call 0x189c31; add ecx, 0x11256f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00130279: add edx, 0x10eb9b; push ebx; mov eax, 0x34; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0012f079: add edx, 0x10fd9b; mov eax, 0x123; call dword ptr gs:[0x10]; 
0x0012e859: add edx, 0x1105bb; push ebx; mov eax, 0xfe; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001238d9: add edx, 0x11b53b; push ebx; mov eax, 0x2d; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00121a19: add edx, 0x11d3fb; push ebx; mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001214f9: add edx, 0x11d91b; push ebx; mov eax, 0xa; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001208d9: add edx, 0x11e53b; push ebx; mov eax, 0x28; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000dbdf9: add edx, 0x16301b; push ebx; mov eax, 0x4f; mov ecx, dword ptr [esp + 8]; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x000dece5: add edx, 0x16d; mov eax, edx; ret; 
0x000a08c9: add edx, 0x19e54b; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0x3fc; jbe 0xa08e0; ret; 
0x0008e949: add edx, 0x1b04cb; mov eax, dword ptr [esp + 4]; cmp dword ptr [eax], 1; je 0x8e960; ret; 
0x000348ef: add edx, 0x200; mov dword ptr [eax + ebx], edx; pop ebx; pop esi; ret; 
0x001449f3: add edx, 0x65; stc; call dword ptr [esi + 0x6a]; 
0x001ab180: add edx, 0xa; jl 0x1ab1d0; lea eax, [ecx + 0xa]; ret; 
0x001ab190: add edx, 0xb; jl 0x1ab1d0; lea eax, [ecx + 0xb]; ret; 
0x001ab0fb: add edx, 0xc; jl 0x1ab1d0; lea eax, [ecx + 0xc]; ret; 
0x001ab1a0: add edx, 0xd; jl 0x1ab1d0; lea eax, [ecx + 0xd]; ret; 
0x001ab1b0: add edx, 0xe; jl 0x1ab1d0; lea eax, [ecx + 0xe]; ret; 
0x001ab1c0: add edx, 0xf; jl 0x1ab1d0; lea eax, [ecx + 0xf]; ret; 
0x001ab110: add edx, 1; jl 0x1ab1d0; lea eax, [ecx + 1]; ret; 
0x00148ab9: add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x000fa8dd: add edx, 1; test al, al; jne 0xfa8b1; xor eax, eax; ret; 
0x00042eae: add edx, 1; test eax, eax; cmovne eax, edx; ret; 
0x001ab120: add edx, 2; jl 0x1ab1d0; lea eax, [ecx + 2]; ret; 
0x001ab130: add edx, 3; jl 0x1ab1d0; lea eax, [ecx + 3]; ret; 
0x001ab098: add edx, 4; jl 0x1ab1d0; lea eax, [ecx + 4]; ret; 
0x000d9b62: add edx, 4; test eax, eax; jne 0xd9b5c; xor edx, edx; mov eax, edx; ret; 
0x001ab140: add edx, 5; jl 0x1ab1d0; lea eax, [ecx + 5]; ret; 
0x001ab150: add edx, 6; jl 0x1ab1d0; lea eax, [ecx + 6]; ret; 
0x001ab160: add edx, 7; jl 0x1ab1d0; lea eax, [ecx + 7]; ret; 
0x00141d65: add edx, 8; cmp dword ptr [esp + 8], 0x80; cmovb eax, edx; ret; 
0x001ab0d1: add edx, 8; jl 0x1ab1d0; lea eax, [ecx + 8]; ret; 
0x001ab170: add edx, 9; jl 0x1ab1d0; lea eax, [ecx + 9]; ret; 
0x0012e221: add edx, dword ptr [eax + 0x28]; push edx; push dword ptr [esp + 0x30]; call 0x12e180; add esp, 0x2c; ret; 
0x00185271: add edx, dword ptr [eax + 8]; mov dword ptr [ebx + 0xc], edx; pop ebx; ret; 
0x000c1876: add edx, eax; jl 0xc18b0; add eax, ecx; ret; 
0x000c1886: add edx, eax; jl 0xc18b0; lea eax, [ecx + eax + 0x10]; ret; 
0x000c1896: add edx, eax; jl 0xc18b0; lea eax, [ecx + eax + 0x20]; ret; 
0x000c18a6: add edx, eax; jl 0xc18b0; lea eax, [ecx + eax + 0x30]; ret; 
0x001556f2: add edx, ebx; out 0x21, eax; ret; 
0x001a7f17: add edx, ecx; add eax, ecx; call 0x189c1d; add ebx, 0x34454; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001a7e52: add edx, ecx; add eax, ecx; call 0x189c1d; add ebx, 0x34519; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001a6547: add edx, ecx; add eax, ecx; call 0x189c1d; add ebx, 0x35d20; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001a6438: add edx, ecx; add eax, ecx; call 0x189c1d; add ebx, 0x35e2f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019ce63: add edx, ecx; add eax, ecx; call 0x189c1d; add ebx, 0x3f244; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019be56: add edx, ecx; add eax, ecx; call 0x189c1d; add ebx, 0x40091; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019ae76: add edx, ecx; add eax, ecx; call 0x189c1d; add ebx, 0x40eb1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198f57: add edx, ecx; add eax, ecx; call 0x189c1d; add ebx, 0x42c10; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198e52: add edx, ecx; add eax, ecx; call 0x189c1d; add ebx, 0x42c55; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198c43: add edx, ecx; add eax, ecx; call 0x189c1d; add ebx, 0x42e64; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196f47: add edx, ecx; add eax, ecx; call 0x189c1d; add ebx, 0x449a0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196e42: add edx, ecx; add eax, ecx; call 0x189c1d; add ebx, 0x449e5; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196c36: add edx, ecx; add eax, ecx; call 0x189c1d; add ebx, 0x44bf1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194f47: add edx, ecx; add eax, ecx; call 0x189c1d; add ebx, 0x46720; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194e42: add edx, ecx; add eax, ecx; call 0x189c1d; add ebx, 0x46765; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194c36: add edx, ecx; add eax, ecx; call 0x189c1d; add ebx, 0x46971; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000c21e0: add edx, ecx; add esi, ecx; jmp ebx; 
0x0019324e: add edx, ecx; jmp ebx; 
0x0019b73b: add edx, edi; lea eax, [edi + eax + 0xa]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b7cb: add edx, edi; lea eax, [edi + eax + 0xb]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b85b: add edx, edi; lea eax, [edi + eax + 0xc]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b8eb: add edx, edi; lea eax, [edi + eax + 0xd]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b97b: add edx, edi; lea eax, [edi + eax + 0xe]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019ba0b: add edx, edi; lea eax, [edi + eax + 0xf]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b22b: add edx, edi; lea eax, [edi + eax + 1]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b2bb: add edx, edi; lea eax, [edi + eax + 2]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b34b: add edx, edi; lea eax, [edi + eax + 3]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b3db: add edx, edi; lea eax, [edi + eax + 4]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b46b: add edx, edi; lea eax, [edi + eax + 5]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b4fb: add edx, edi; lea eax, [edi + eax + 6]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b58b: add edx, edi; lea eax, [edi + eax + 7]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b61b: add edx, edi; lea eax, [edi + eax + 8]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b6ab: add edx, edi; lea eax, [edi + eax + 9]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000928c8: add edx, edx; and eax, 0xfffffffd; or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x000bd5d7: add esi, 0x10; add eax, 0x10; call 0x189c31; add ecx, 0x10f992; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0012ad24: add esi, 0x1140f0; push ebx; mov ebx, 0xfee1dead; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x001221af: add esi, 0x11cc65; push ebx; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00120bf4: add esi, 0x11e220; push ebx; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00116044: add esi, 0x128dd0; push ebx; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x001132c1: add esi, 0x12bb53; push ebx; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0010c0ff: add esi, 0x132d15; push ebx; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000c08fc: add esi, 0x20; add eax, 0x20; call 0x189c31; add ecx, 0x10c6ed; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bd5fc: add esi, 0x20; add eax, 0x20; call 0x189c31; add ecx, 0x10f96d; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c07ae: add esi, 0x30; add eax, 0x30; call 0x189c31; add ecx, 0x10c83b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bd515: add esi, 0x30; add eax, 0x30; call 0x189c31; add ecx, 0x10fa54; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00126fd0: add esi, 0x4c; stc; call dword ptr [eax + 0x55]; 
0x001904c4: add esi, 0xae950; push ebx; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00175573: add esi, 0xc; mov eax, dword ptr [ebx + 4]; push esi; push ebx; call dword ptr [eax + 0x24]; 
0x0016fb16: add esi, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x0008f6aa: add esi, 8; push eax; call ecx; 
0x0009191d: add esi, dword ptr [eax + ecx + 0x5b]; pop esi; pop edi; ret; 
0x0002fd7d: add esi, dword ptr [eax + ecx - 0x7d]; les ecx, ptr [eax]; pop ebx; ret; 
0x000ffa28: add esi, dword ptr [eax + esi - 0xa]; ret 0x7404; 
0x0004a2a6: add esi, dword ptr [eax]; stc; call dword ptr [eax - 0x18]; 
0x0004d4a3: add esi, dword ptr [eax]; stc; call dword ptr [eax - 0x18]; ret; 
0x000c2ff5: add esi, dword ptr [edi + eax - 0x3a]; add al, 1; add byte ptr [ecx + 0x75], cl; stc; pop esi; ret; 
0x00091486: add esi, dword ptr [edi + ebp - 0x77]; clc; call dword ptr gs:[0x10]; 
0x000ffd4e: add esi, dword ptr [edi + ebx - 0x7d]; les ecx, ptr [eax]; xor eax, eax; pop ebx; ret; 
0x000983b1: add esi, dword ptr [edi + edi*4 - 0x77]; ret 0xca83; 
0x00170b83: add esi, dword ptr [esi + 0xa]; mov eax, 2; pop ebx; pop esi; ret; 
0x0009197f: add esi, dword ptr [esi + ecx + 0x5b]; pop esi; pop edi; ret; 
0x000a87f6: add esi, eax; add al, 0xe; cmp eax, 0x430ff839; shr byte ptr [ecx], 1; ret 0xf001; 
0x00153eb6: add esi, ebp; jmp dword ptr [esi - 0x70]; 
0x0012f41b: add esi, ebp; lea ecx, [ebx + ebx]; pop ebx; shr eax, cl; and eax, 3; ret; 
0x000bd550: add esi, ecx; bsf edx, edx; call 0x189c31; add ecx, 0x10fa1a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bd532: add esi, ecx; bsf edx, edx; call 0x189c31; add ecx, 0x10fa38; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba862: add esi, ecx; bsf edx, edx; call 0x189c31; add ecx, 0x1125b4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c09fa: add esi, ecx; call 0x189c31; add ecx, 0x10c673; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c09da: add esi, ecx; call 0x189c31; add ecx, 0x10c693; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c09bd: add esi, ecx; call 0x189c31; add ecx, 0x10c6b0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000baa5a: add esi, ecx; call 0x189c31; add ecx, 0x11243f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000baa3a: add esi, ecx; call 0x189c31; add ecx, 0x11245f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000baa1d: add esi, ecx; call 0x189c31; add ecx, 0x11247c; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b941a: add esi, ecx; call 0x189c31; add ecx, 0x11391f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b93fa: add esi, ecx; call 0x189c31; add ecx, 0x11393f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b93dd: add esi, ecx; call 0x189c31; add ecx, 0x11395c; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c21e2: add esi, ecx; jmp ebx; 
0x0004182b: add esi, edi; push esi; push edx; mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 0x24], edx; call eax; 
0x0010d444: add esi, esi; ret 0x7404; 
0x0015c97e: add esi, esi; ret 0xf01; 
0x000ea21f: add esi, esi; ret 0xf02; 
0x00103383: add esi, esi; ret; 
0x000c2ca5: add esp, 0x100; sub eax, edx; ret; 
0x0011efce: add esp, 0x1010; pop ebx; pop esi; pop edi; ret; 
0x000615c2: add esp, 0x1018; pop ebx; ret; 
0x0013dd5d: add esp, 0x10; add eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000a1c01: add esp, 0x10; add esp, 0x14; pop ebx; pop esi; ret; 
0x0004084d: add esp, 0x10; add esp, 0xc; ret; 
0x0018666f: add esp, 0x10; add esp, 4; mov eax, 1; pop ebx; pop esi; ret; 
0x00170f98: add esp, 0x10; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x001475e6: add esp, 0x10; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x00026136: add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x00090228: add esp, 0x10; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00129334: add esp, 0x10; add esp, 8; mov eax, 1; pop ebx; ret; 
0x000271a2: add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00098289: add esp, 0x10; call eax; 
0x000a2363: add esp, 0x10; cmp eax, -1; je 0xa2370; add esp, 0xc; ret; 
0x00174a00: add esp, 0x10; cmp eax, 1; mov eax, 1; sbb eax, -1; add esp, 0xc; ret; 
0x0017d043: add esp, 0x10; cmp eax, 1; sete al; add esp, 0xc; movzx eax, al; ret; 
0x0016898f: add esp, 0x10; cmp edx, 1; jg 0x1689b8; add esp, 0x18; pop ebx; ret; 
0x001825cc: add esp, 0x10; cmp edx, 1; jg 0x1825f8; add esp, 0x18; pop ebx; ret; 
0x00182658: add esp, 0x10; cmp edx, 1; jg 0x182680; add esp, 0x18; pop ebx; ret; 
0x00182930: add esp, 0x10; cmp edx, 1; jg 0x182958; add esp, 0x18; pop ebx; ret; 
0x0009432f: add esp, 0x10; cmp edx, 1; jg 0x94358; add esp, 0x18; pop ebx; ret; 
0x0014177e: add esp, 0x10; lea eax, [esi + edi]; pop ebx; pop esi; pop edi; ret; 
0x0012c3af: add esp, 0x10; lea esp, [ebp - 8]; pop ebx; pop esi; pop ebp; ret; 
0x0014ab6e: add esp, 0x10; mov dword ptr [eax + 8], 0; add esp, 4; pop ebx; pop esi; ret; 
0x000e7476: add esp, 0x10; mov eax, 1; add esp, 0xc; ret; 
0x00124b90: add esp, 0x10; mov eax, 1; add esp, 8; pop ebx; ret; 
0x0007cac1: add esp, 0x10; mov eax, 1; pop ebx; pop esi; pop edi; ret; 
0x00124530: add esp, 0x10; mov eax, dword ptr [eax]; test eax, eax; je 0x124580; call eax; 
0x00124674: add esp, 0x10; mov eax, dword ptr [eax]; test eax, eax; je 0x124718; call eax; 
0x00136e5d: add esp, 0x10; mov eax, dword ptr [ebx + 8]; mov dword ptr [ebx + 8], edx; add esp, 8; pop ebx; ret; 
0x0017b898: add esp, 0x10; mov eax, dword ptr [esp + 0x1c]; sub eax, dword ptr gs:[0x14]; jne 0x17b8ac; add esp, 0x2c; ret; 
0x0017992e: add esp, 0x10; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x179942; add esp, 0x4c; ret; 
0x0017999e: add esp, 0x10; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x1799b2; add esp, 0x4c; ret; 
0x00179a0e: add esp, 0x10; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x179a22; add esp, 0x4c; ret; 
0x00179a71: add esp, 0x10; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x179a85; add esp, 0x4c; ret; 
0x00179ad1: add esp, 0x10; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x179ae5; add esp, 0x4c; ret; 
0x00179b3e: add esp, 0x10; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x179b52; add esp, 0x4c; ret; 
0x00179bbe: add esp, 0x10; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x179bd2; add esp, 0x4c; ret; 
0x0003ca40: add esp, 0x10; mov eax, dword ptr [esp + 0xc]; add esp, 0x14; pop ebx; pop esi; ret; 
0x000611fb: add esp, 0x10; mov eax, dword ptr [esp + 0xc]; add esp, 0x18; pop ebx; ret; 
0x0017a0af: add esp, 0x10; mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x17a0c3; add esp, 0x1c; ret; 
0x0003efe2: add esp, 0x10; mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x3eff6; add esp, 0x1c; ret; 
0x0003f0f5: add esp, 0x10; mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x3f109; add esp, 0x1c; ret; 
0x0015a0a7: add esp, 0x10; mov eax, dword ptr [esp]; call eax; 
0x0015a23c: add esp, 0x10; mov eax, ebx; call eax; 
0x000c5d3d: add esp, 0x10; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x001876a4: add esp, 0x10; mov eax, ecx; pop ebx; pop esi; pop edi; ret; 
0x0009b3b4: add esp, 0x10; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x0013f7b2: add esp, 0x10; mov eax, edx; pop ebx; pop esi; pop edi; ret; 
0x000e9f49: add esp, 0x10; mov eax, esi; add esp, 4; pop ebx; pop esi; ret; 
0x0014d552: add esp, 0x10; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00025533: add esp, 0x10; mov ecx, dword ptr [esp + 0xc]; sub ecx, dword ptr gs:[0x14]; jne 0x25547; add esp, 0x1c; ret; 
0x001265c6: add esp, 0x10; mov edx, 1; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0013d57b: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x13d595; add esp, 0x2c; ret; 
0x0013e7bb: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x13e7d5; add esp, 0x2c; ret; 
0x00192b41: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x192b55; add esp, 0x2c; ret; 
0x000409d0: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x409e4; add esp, 0x2c; ret; 
0x00053490: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x534a4; add esp, 0x2c; ret; 
0x00092763: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x92777; add esp, 0x2c; ret; 
0x000972df: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x972f3; add esp, 0x2c; ret; 
0x00098593: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x985a7; add esp, 0x2c; ret; 
0x00098a03: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x98a17; add esp, 0x2c; ret; 
0x00098f1f: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x98f33; add esp, 0x2c; ret; 
0x0009936f: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x99383; add esp, 0x2c; ret; 
0x001798be: add esp, 0x10; mov edx, dword ptr [esp + 0x3c]; sub edx, dword ptr gs:[0x14]; jne 0x1798d2; add esp, 0x4c; ret; 
0x0012d672: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x12d686; add esp, 0x1c; ret; 
0x0018c6bf: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x18c6d3; add esp, 0x1c; ret; 
0x000405e5: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x405f9; add esp, 0x1c; ret; 
0x00040812: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x40826; add esp, 0x1c; ret; 
0x00040ae2: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x40af6; add esp, 0x1c; ret; 
0x00040b65: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x40b79; add esp, 0x1c; ret; 
0x000da704: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xda718; add esp, 0x1c; ret; 
0x000e4f68: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xe4f7c; add esp, 0x1c; ret; 
0x000e7428: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xe743c; add esp, 0x1c; ret; 
0x000253cb: add esp, 0x10; neg eax; pop ebx; adc edx, 0; neg edx; ret; 
0x00025854: add esp, 0x10; neg eax; sbb eax, eax; add esp, 0xc; ret; 
0x00060e66: add esp, 0x10; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0002f7d2: add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00122945: add esp, 0x10; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x00147650: add esp, 0x10; pop esi; pop edi; pop ebp; ret; 
0x00163359: add esp, 0x10; push dword ptr [esp]; push 0x400; push dword ptr [esp + 0xc]; push ebp; call edi; 
0x0015a129: add esp, 0x10; push dword ptr [esp]; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x10]; call edi; 
0x0014c36e: add esp, 0x10; sub eax, 1; add esp, 4; pop ebx; pop esi; ret; 
0x0017906b: add esp, 0x10; sub esp, 0xc; mov eax, dword ptr [edi + 4]; push edi; call dword ptr [eax + 0x10]; 
0x00178a7b: add esp, 0x10; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x001708b8: add esp, 0x10; sub esp, 8; mov eax, dword ptr [edi + 4]; push 8; push edi; call dword ptr [eax + 0x18]; 
0x0013d400: add esp, 0x10; test eax, eax; je 0x13d410; add esp, 8; pop ebx; ret; 
0x00162970: add esp, 0x10; test eax, eax; je 0x162980; sub esp, 0xc; push esi; call eax; 
0x00162d00: add esp, 0x10; test eax, eax; je 0x162d10; sub esp, 0xc; push esi; call eax; 
0x001702c0: add esp, 0x10; test eax, eax; je 0x1702d0; sub esp, 0xc; push esi; call eax; 
0x00171083: add esp, 0x10; test eax, eax; je 0x17118b; sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x00042116: add esp, 0x10; test eax, eax; je 0x42128; add esp, 8; pop ebx; ret; 
0x00128d5c: add esp, 0x10; test eax, eax; jne 0x128d1c; add esp, 0xc; ret; 
0x0017a184: add esp, 0x10; test eax, eax; jne 0x17a170; add esp, 8; pop ebx; ret; 
0x0003c675: add esp, 0x10; test eax, eax; jne 0x3c688; add esp, 8; pop ebx; ret; 
0x0003c924: add esp, 0x10; test eax, eax; jne 0x3c930; add esp, 8; pop ebx; ret; 
0x000fab64: add esp, 0x10; test eax, eax; jne 0xfab70; add esp, 8; pop ebx; ret; 
0x001318c1: add esp, 0x10; test eax, eax; js 0x1318d0; add esp, 8; pop ebx; ret; 
0x00157d7f: add esp, 0x10; test eax, eax; sete al; add esp, 0xc; ret; 
0x000a6d50: add esp, 0x10; test ebp, ebp; jne 0xa6c89; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax + 0x90]; call dword ptr [eax]; 
0x00189d9f: add esp, 0x10; test ebx, ebx; jne 0x189db0; add esp, 8; pop ebx; ret; 
0x0003a02f: add esp, 0x10; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x000ffd7b: add esp, 0x10; xor eax, eax; add esp, 8; pop ebx; ret; 
0x0009427a: add esp, 0x10; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0014aa2c: add esp, 0x110; pop ebx; pop esi; pop edi; ret; 
0x0003cb8f: add esp, 0x114; pop ebx; pop edi; ret; 
0x0014ac64: add esp, 0x118; pop ebx; ret; 
0x0014ae64: add esp, 0x11c; ret; 
0x001844d2: add esp, 0x11cc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0003c639: add esp, 0x124; pop ebx; pop esi; ret; 
0x0003d359: add esp, 0x128; pop ebx; ret; 
0x000c4971: add esp, 0x14; lea eax, [eax + ebx*4]; pop ebx; pop esi; ret; 
0x00131292: add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x00059f0c: add esp, 0x14; mov eax, edx; pop ebx; pop esi; ret 4; 
0x001237db: add esp, 0x14; mov eax, edx; pop ebx; pop esi; ret; 
0x000a7607: add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret 4; 
0x0009ce4e: add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret; 
0x00134580: add esp, 0x14; pop ebx; pop edi; ret; 
0x000afe1b: add esp, 0x14; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0002fe46: add esp, 0x14; pop ebx; pop esi; ret; 
0x0016f730: add esp, 0x14; push ebx; call dword ptr [eax + 0x10]; 
0x00086c38: add esp, 0x14; xor eax, eax; pop ebx; pop esi; ret; 
0x0004afa9: add esp, 0x14c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000e8b89: add esp, 0x15c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000db115: add esp, 0x16c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0016ec26: add esp, 0x18; lea eax, [ebx + 0xa5ec]; pop ebx; ret; 
0x000421c2: add esp, 0x18; lea eax, [ebx + 6]; pop ebx; ret; 
0x0012342f: add esp, 0x18; mov eax, ebx; pop ebx; ret; 
0x00042cce: add esp, 0x18; mov edx, eax; mov eax, 0x10; pop ebx; sub eax, edx; ret; 
0x00042c3c: add esp, 0x18; mov edx, eax; mov eax, 0x20; pop ebx; sub eax, edx; ret; 
0x00042ca0: add esp, 0x18; mov edx, eax; mov eax, 0x40; pop ebx; sub eax, edx; ret; 
0x00042c0e: add esp, 0x18; mov edx, eax; mov eax, 8; pop ebx; sub eax, edx; ret; 
0x0017b9b3: add esp, 0x18; pop ebx; jmp eax; 
0x000a97f8: add esp, 0x18; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0003bf1f: add esp, 0x18; pop ebx; pop esi; pop edi; ret; 
0x0002450e: add esp, 0x18; pop ebx; ret; 
0x0008feee: add esp, 0x18; xor eax, eax; pop ebx; ret; 
0x00182b89: add esp, 0x190; mov eax, edx; pop ebx; pop esi; pop edi; ret; 
0x00125312: add esp, 0x190; pop ebx; pop esi; pop edi; ret; 
0x00115d3e: add esp, 0x19c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0018491f: add esp, 0x1bc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0003adba: add esp, 0x1c; and edx, 0x7fff0000; sub edx, 0x7fff0000; mov eax, edx; shr eax, 0x1f; ret; 
0x0012ed4c: add esp, 0x1c; movzx eax, al; neg eax; ret; 
0x00172bf9: add esp, 0x1c; movzx eax, al; ret; 
0x0017d269: add esp, 0x1c; not eax; shr eax, 0x1f; ret; 
0x0007e06e: add esp, 0x1c; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x0002520c: add esp, 0x1c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0003ad81: add esp, 0x1c; ret 4; 
0x0002452a: add esp, 0x1c; ret; 
0x00190642: add esp, 0x1c; sar eax, 0x1f; ret; 
0x0010546c: add esp, 0x1ec; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00090f4c: add esp, 0x20; add esp, 0xc; ret; 
0x001627cd: add esp, 0x20; add esp, 8; pop ebx; ret; 
0x001630ad: add esp, 0x20; cmp edx, 1; jg 0x1630d8; add esp, 0x18; pop ebx; ret; 
0x0013ec77: add esp, 0x20; mov eax, ebx; pop ebx; pop esi; pop edi; ret 4; 
0x0008e258: add esp, 0x20; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000dbb70: add esp, 0x20; mov eax, ecx; pop ebx; pop esi; pop edi; ret; 
0x00061ec9: add esp, 0x20; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x0007c33e: add esp, 0x20; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00126b0f: add esp, 0x20; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x126b23; add esp, 0x1c; ret; 
0x0014b379: add esp, 0x20; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x14b3cc; add esp, 0x1c; ret; 
0x000255e3: add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x001b6e35: add esp, 0x20; ret; 
0x0003dbd5: add esp, 0x220; pop ebx; pop esi; pop edi; ret; 
0x0013133d: add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x0012b412: add esp, 0x24; mov eax, edx; pop ebx; pop esi; ret; 
0x00123d20: add esp, 0x24; mov eax, esi; pop ebx; pop esi; ret; 
0x0008de67: add esp, 0x24; pop ebx; pop esi; jmp eax; 
0x000dc132: add esp, 0x24; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0003d7fe: add esp, 0x24; pop ebx; pop esi; ret; 
0x00055774: add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x0008e015: add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x00192c1c: add esp, 0x28; or eax, edx; pop ebx; movzx eax, al; neg eax; ret; 
0x0003cf46: add esp, 0x28; pop ebx; ret; 
0x000deece: add esp, 0x28; xor eax, eax; pop ebx; ret; 
0x0014f3f6: add esp, 0x2bc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0012ed8d: add esp, 0x2c; movzx eax, al; neg eax; ret; 
0x0010b4ac: add esp, 0x2c; movzx eax, al; ret; 
0x0008d8b5: add esp, 0x2c; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x00023535: add esp, 0x2c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00034e9e: add esp, 0x2c; ret; 
0x001868e4: add esp, 0x30; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0017f00e: add esp, 0x30; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0018681b: add esp, 0x30; pop ebx; pop esi; pop edi; jmp eax; 
0x00092bd5: add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0013f25a: add esp, 0x34; mov eax, esi; pop ebx; pop esi; ret; 
0x000407ca: add esp, 0x34; pop ebx; pop esi; ret 4; 
0x001142a1: add esp, 0x34; pop ebx; pop esi; ret; 
0x0010f04d: add esp, 0x35c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0010441e: add esp, 0x388c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000a6519: add esp, 0x38; mov eax, ebx; pop ebx; ret 4; 
0x00149be0: add esp, 0x38; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0009c24c: add esp, 0x38; pop ebx; ret; 
0x001b6d4c: add esp, 0x3c; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x00026ea7: add esp, 0x3c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0012d1eb: add esp, 0x3c; ret; 
0x0003bbf1: add esp, 0x40; pop ebx; pop esi; pop edi; fsubp st(1); ret; 
0x0003bb7f: add esp, 0x40; pop ebx; pop esi; pop edi; ret; 
0x001243f7: add esp, 0x418; pop ebx; ret; 
0x0005ab5e: add esp, 0x434; pop ebx; pop esi; ret; 
0x001210c8: add esp, 0x44; mov eax, edx; pop ebx; pop esi; ret; 
0x00041523: add esp, 0x44c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00047a49: add esp, 0x45c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0014e6d4: add esp, 0x46c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000da7c0: add esp, 0x48; pop ebx; ret; 
0x00070156: add esp, 0x4ac; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0003b1fd: add esp, 0x4c; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x0003f975: add esp, 0x4c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0011f067: add esp, 0x4c; ret; 
0x000641e4: add esp, 0x4cc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001271c7: add esp, 0x50; stc; call dword ptr [eax + 0x55]; 
0x00181f50: add esp, 0x514; mov eax, esi; pop ebx; pop esi; ret; 
0x00125f76: add esp, 0x54; mov eax, ebx; pop ebx; pop esi; ret; 
0x001160d9: add esp, 0x54; pop ebx; pop esi; ret; 
0x00179de2: add esp, 0x56c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0014bf1e: add esp, 0x5b; stc; call dword ptr [eax - 0x18]; 
0x000287bf: add esp, 0x5c; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x0003afa6: add esp, 0x5c; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x00029e3b: add esp, 0x5c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00156c83: add esp, 0x5d; stc; call dword ptr [eax - 1]; 
0x00115f4f: add esp, 0x60; mov eax, ecx; pop ebx; pop esi; pop edi; ret; 
0x00116145: add esp, 0x60; pop ebx; pop esi; pop edi; ret; 
0x0010e7c1: add esp, 0x64; pop ebx; pop esi; ret; 
0x0010e4ad: add esp, 0x68; pop ebx; ret; 
0x0002a75c: add esp, 0x6c; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x0002f098: add esp, 0x6c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001239e2: add esp, 0x70; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000e8996: add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x00178516: add esp, 0x74; pop ebx; pop edi; ret; 
0x00115762: add esp, 0x74; pop ebx; pop esi; ret; 
0x0005f67b: add esp, 0x78; pop ebx; ret; 
0x0002b216: add esp, 0x7c; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x0002b075: add esp, 0x7c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0013289e: add esp, 0x7c; ret; 
0x0014a74d: add esp, 0x810; pop ebx; pop esi; pop edi; ret; 
0x00085958: add esp, 0x824; pop ebx; pop esi; ret; 
0x000ef1b2: add esp, 0x85c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000edc84: add esp, 0x89c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00161af0: add esp, 0x8bc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00062595: add esp, 0x8fc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0009a466: add esp, 0x90; pop ebx; pop esi; pop edi; ret; 
0x0003cc7c: add esp, 0x94; pop ebx; pop edi; ret; 
0x00090d49: add esp, 0x94; pop ebx; pop esi; ret; 
0x0003cda1: add esp, 0x98; pop ebx; ret; 
0x0003cb0a: add esp, 0x9c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0003da62: add esp, 0x9c; ret; 
0x00085b4f: add esp, 0xa0; pop ebx; pop esi; pop edi; ret; 
0x0015dfe8: add esp, 0xa9c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001ad3ff: add esp, 0xac; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x00033881: add esp, 0xac; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000a083b: add esp, 0xb4; pop ebx; pop esi; ret; 
0x001b2906: add esp, 0xbc; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x00027f2c: add esp, 0xbc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001467f7: add esp, 0xc5c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0008d764: add esp, 0xc; jmp eax; 
0x00171075: add esp, 0xc; mov eax, dword ptr [edi + 8]; push ebp; push dword ptr [esi + 0xc]; push edi; call dword ptr [eax + 8]; 
0x00034e2f: add esp, 0xc; mov eax, edx; ret; 
0x0009c306: add esp, 0xc; movzx eax, al; lea eax, [eax + eax + 2]; ret; 
0x00053448: add esp, 0xc; movzx eax, al; ret; 
0x00080dfc: add esp, 0xc; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x000a7520: add esp, 0xc; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x0002711c: add esp, 0xc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0016ef1f: add esp, 0xc; push dword ptr [ebx + 0x229c]; push dword ptr [esp + 0x10]; push esi; call dword ptr [eax + 0xc]; 
0x0013790b: add esp, 0xc; push eax; push 0; push 0x2000002; call dword ptr [ebp + 0x14]; 
0x001397b0: add esp, 0xc; push eax; push dword ptr [ebp - 0x4c]; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x00139cad: add esp, 0xc; push eax; push dword ptr [ebp - 0x5c]; push ebx; call dword ptr [esi + 0x14]; 
0x00137a04: add esp, 0xc; push eax; push dword ptr [esp + 0xc]; push 0x2000001; call dword ptr [ebp + 0x14]; 
0x0013749c: add esp, 0xc; push eax; push ebx; push 0x2000001; call dword ptr [ebp + 0x14]; 
0x00138441: add esp, 0xc; push eax; push edi; push 0x2000003; call dword ptr [ebx + 0x14]; 
0x00138215: add esp, 0xc; push eax; push esi; push 0x2000006; call dword ptr [ebx + 0x14]; 
0x0005f72f: add esp, 0xc; push ebx; push edi; push esi; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0002585b: add esp, 0xc; ret; 
0x000a86a5: add esp, 0xc; test eax, eax; jne 0xa86b3; ret; 
0x000435c8: add esp, 0xcc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0012dc2b: add esp, 0xe0; pop ebx; pop esi; pop edi; ret; 
0x0011ef03: add esp, 0xe4; pop ebx; pop esi; ret; 
0x000e882a: add esp, 0xe8; mov eax, edx; pop ebx; ret; 
0x000e8670: add esp, 0xe8; pop ebx; ret; 
0x00046cdd: add esp, 0xec; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00036bd9: add esp, 0xfc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000fd3bc: add esp, 4; add eax, eax; pop ebx; pop esi; ret; 
0x001716fe: add esp, 4; add eax, edx; pop ebx; pop esi; ret; 
0x00054e7b: add esp, 4; jmp eax; 
0x0016ed70: add esp, 4; mov eax, 0x10; pop ebx; pop esi; ret; 
0x000a69d0: add esp, 4; mov eax, 0x16; pop ebx; pop esi; ret; 
0x00080d98: add esp, 4; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0005b850: add esp, 4; mov eax, 1; pop ebx; pop esi; ret; 
0x00170df7: add esp, 4; mov eax, ebx; pop ebx; pop esi; jmp eax; 
0x0008e63a: add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x001558ec: add esp, 4; mov eax, edx; pop ebx; pop edi; ret; 
0x0013a83f: add esp, 4; mov eax, edx; pop ebx; pop esi; ret; 
0x000610a6: add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x00136d6e: add esp, 4; movzx eax, al; pop ebx; pop esi; neg eax; ret; 
0x001720b1: add esp, 4; movzx eax, al; pop ebx; pop esi; ret; 
0x000942c7: add esp, 4; neg eax; pop ebx; pop esi; ret; 
0x001a5b39: add esp, 4; pop ebp; pop ebx; ret; 
0x00082bd6: add esp, 4; pop ebx; pop esi; jmp eax; 
0x00039fbd: add esp, 4; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00026041: add esp, 4; pop ebx; pop esi; ret; 
0x00025058: add esp, 4; pop ebx; pop esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x001a32a9: add esp, 4; pop ebx; ret; 
0x00090879: add esp, 4; pop esi; pop edi; ret; 
0x0003c19e: add esp, 4; ret; 
0x000905a6: add esp, 4; xor eax, eax; pop ebx; pop edi; ret; 
0x00040a1f: add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0014b42b: add esp, 8; lea edx, [eax + ecx]; pop ebx; mov eax, edx; ret; 
0x000971f0: add esp, 8; mov eax, 0x16; pop ebx; ret; 
0x0005bd00: add esp, 8; mov eax, 0xffffffff; pop ebx; ret; 
0x00129337: add esp, 8; mov eax, 1; pop ebx; ret; 
0x00061f5b: add esp, 8; mov eax, ebx; pop ebx; ret; 
0x000535bd: add esp, 8; mov eax, edx; pop ebx; ret; 
0x00088ca4: add esp, 8; movzx eax, al; pop ebx; neg eax; ret; 
0x00170f1a: add esp, 8; movzx eax, al; pop ebx; ret; 
0x0010cc52: add esp, 8; or eax, edx; pop ebx; ret; 
0x0005a1d8: add esp, 8; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000271a5: add esp, 8; pop ebx; ret; 
0x0003bf95: add esp, 8; ret; 
0x0003c357: add esp, 8; xor eax, eax; pop ebx; ret; 
0x000fb054: add esp, dword ptr [esi]; jne 0xfb0f0; mov eax, edx; pop ebx; ret; 
0x0017dbcb: add esp, edi; jmp dword ptr [esi - 0x70]; 
0x0009f420: add esp, esi; call dword ptr [eax + 0x56]; 
0x00134789: add word ptr [eax + ebx*2], 1; pop ebx; ret; 
0x000abf73: add word ptr [eax], ax; add esp, 0x18; pop ebx; ret; 
0x000a11ff: and ah, 0x8a; stc; call dword ptr [eax + 0x6a]; 
0x000c3177: and ah, 1; add byte ptr [eax], al; ret; 
0x00186103: and ah, byte ptr [edi - 7]; call dword ptr [eax - 0x18]; 
0x0012553d: and al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x3940247c], cl; fmul dword ptr [ebx + 0xf046a09]; dec edi; ret; 
0x00081122: and al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0002ceec: and al, 0; add byte ptr [eax], al; add byte ptr [ecx - 0x72c7dbbc], cl; inc edi; and byte ptr [ecx - 0x9c3dbbc], cl; ret 0x7501; 
0x0002a14c: and al, 0; add byte ptr [eax], al; add byte ptr [ecx - 0x72d7dbbc], cl; inc edi; and byte ptr [ecx - 0x9d3dbbc], cl; ret 0x7501; 
0x000701bc: and al, 0; add byte ptr [eax], al; add byte ptr [ecx], al; ret; 
0x0012a7aa: and al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x4e0f; 
0x00043418: and al, 0; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0012b861: and al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012b861: and al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; cmp eax, 0xfffff001; jae 0x24f50; ret; 
0x00069b67: and al, 0; add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xf001; 
0x00147552: and al, 0; or al, byte ptr [eax]; add byte ptr [esi - 0x18], dl; ret; 
0x000c7eb0: and al, 0x10; adc byte ptr [edi], cl; xchg esp, eax; ret 0xf883; 
0x000644f3: and al, 0x10; add byte ptr [eax], al; add byte ptr [eax], al; jmp edx; 
0x0002f54f: and al, 0x10; add byte ptr [eax], al; ret; 
0x00139074: and al, 0x10; add dword ptr [eax], eax; add al, ch; ret 0xf063; 
0x000644a3: and al, 0x10; add dword ptr [eax], eax; add byte ptr [eax], al; jmp edx; 
0x00115c77: and al, 0x10; add dword ptr [eax], eax; add byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc10c; 
0x00194452: and al, 0x10; add eax, ecx; pop ebx; ret; 
0x0003bf1d: and al, 0x10; add esp, 0x18; pop ebx; pop esi; pop edi; ret; 
0x00170df5: and al, 0x10; add esp, 4; mov eax, ebx; pop ebx; pop esi; jmp eax; 
0x0016ed62: and al, 0x10; add esp, 4; pop ebx; pop esi; jmp eax; 
0x0013e493: and al, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x00090c6b: and al, 0x10; and byte ptr [eax + edx - 0x7d], dh; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0003b8e6: and al, 0x10; and eax, 0x80000000; ret; 
0x001351c9: and al, 0x10; call 0x1345a0; pop edx; pop ecx; pop eax; ret; 
0x0011f70d: and al, 0x10; call dword ptr gs:[0x10]; 
0x000410a6: and al, 0x10; call eax; 
0x0015a139: and al, 0x10; call edi; 
0x001235a8: and al, 0x10; cmp al, 1; ret 0x1389; 
0x0018873f: and al, 0x10; cmp dword ptr [eax], 0; mov ebx, dword ptr [esp + 0x14]; jne 0x188750; pop ebx; ret; 
0x0013c8d4: and al, 0x10; cmp eax, 0x3ff; ja 0x13c8e4; sar eax, 5; add esp, 0xc; ret; 
0x0010bde6: and al, 0x10; cmp esi, ecx; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x0003ba23: and al, 0x10; fld xword ptr [esp + 4]; fadd st(0); mov dword ptr [eax], ecx; ret; 
0x0003bc62: and al, 0x10; fld xword ptr [esp + 4]; fscale; fstp st(1); ret; 
0x0003ba18: and al, 0x10; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0017c7b3: and al, 0x10; lea ecx, [esp + 0x10]; mov eax, dword ptr [edx + 4]; push ecx; push edx; call dword ptr [eax + 0x24]; 
0x0017bd03: and al, 0x10; lea ecx, [esp + 0x10]; mov eax, dword ptr [edx + 4]; push ecx; push edx; call dword ptr [eax + 4]; 
0x00192ba6: and al, 0x10; mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x000a693e: and al, 0x10; mov dword ptr [eax], edx; xor eax, eax; add esp, 8; pop ebx; ret; 
0x001899f8: and al, 0x10; mov dword ptr [eax], esi; mov eax, edx; pop ebx; pop esi; ret; 
0x00098165: and al, 0x10; mov dword ptr [ebx], 0; call dword ptr gs:[0x10]; 
0x00131c1b: and al, 0x10; mov dword ptr [esp + 0x1c], eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00131bdd: and al, 0x10; mov dword ptr [esp + 0x1c], eax; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x00132452: and al, 0x10; mov dword ptr [esp + 0x24], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0007c097: and al, 0x10; mov dword ptr [esp + 0xc], ecx; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 8], edx; pop ebx; jmp eax; 
0x0008d7ba: and al, 0x10; mov dword ptr [esp + 0xc], ecx; pop ebx; mov eax, dword ptr [eax + 0x18]; pop esi; jmp eax; 
0x0012ad85: and al, 0x10; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x001220ee: and al, 0x10; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00121fea: and al, 0x10; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x00115155: and al, 0x10; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0011f125: and al, 0x10; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x00131b72: and al, 0x10; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00130c85: and al, 0x10; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x00130905: and al, 0x10; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x00130985: and al, 0x10; mov eax, 0x1ad; call dword ptr gs:[0x10]; 
0x00130725: and al, 0x10; mov eax, 0x1af; call dword ptr gs:[0x10]; 
0x0012e407: and al, 0x10; mov eax, 0x1b3; int 0x80; 
0x00130ae5: and al, 0x10; mov eax, 0x1b8; call dword ptr gs:[0x10]; 
0x00130945: and al, 0x10; mov eax, 0x1ba; call dword ptr gs:[0x10]; 
0x0012d6ae: and al, 0x10; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x00130815: and al, 0x10; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x00130b55: and al, 0x10; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0012f555: and al, 0x10; mov eax, 0xac; call dword ptr gs:[0x10]; 
0x0012b7a5: and al, 0x10; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x00128605: and al, 0x10; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x00124995: and al, 0x10; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x00082bd1: and al, 0x10; mov eax, dword ptr [eax + 0x10]; add esp, 4; pop ebx; pop esi; jmp eax; 
0x0008d75f: and al, 0x10; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x00134acb: and al, 0x10; mov eax, dword ptr [eax + 0x4c]; call 0x134990; add esp, 4; ret; 
0x0008d847: and al, 0x10; mov eax, dword ptr [eax + 4]; add esp, 0xc; jmp eax; 
0x0018c413: and al, 0x10; mov eax, dword ptr [ebx]; add esp, 4; pop ebx; pop esi; jmp eax; 
0x0017c7b7: and al, 0x10; mov eax, dword ptr [edx + 4]; push ecx; push edx; call dword ptr [eax + 0x24]; 
0x0017bd07: and al, 0x10; mov eax, dword ptr [edx + 4]; push ecx; push edx; call dword ptr [eax + 4]; 
0x00187141: and al, 0x10; mov eax, dword ptr [esp + 0x18]; call eax; 
0x00131a26: and al, 0x10; mov eax, dword ptr [esp + 0x40]; mov dword ptr [esp + 0x14], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00131964: and al, 0x10; mov ebx, 0xa; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00132074: and al, 0x10; mov ebx, 9; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00099b5f: and al, 0x10; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x001132ca: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000e8bec: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; cmp edx, eax; cmova edx, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x001208ac: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x00130aac: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x1a8; call dword ptr gs:[0x10]; 
0x00130b8c: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x00126a6c: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x0012842c: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x001248fc: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x001306ec: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x0008f314: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000951b6: and al, 0x10; mov ecx, dword ptr [eax]; mov eax, 0xf0; not ecx; and ecx, 0x80; call dword ptr gs:[0x10]; 
0x00130d73: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00130843: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x0011f633: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x00121543: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x00121033: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x00114af3: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x001309e3: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1ac; call dword ptr gs:[0x10]; 
0x00130753: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b0; call dword ptr gs:[0x10]; 
0x001307b3: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b1; call dword ptr gs:[0x10]; 
0x001147e3: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x00130a43: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b6; call dword ptr gs:[0x10]; 
0x001236c3: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x0012d973: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x001308c3: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x00130583: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x00129563: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x00130663: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x00130693: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x0010c183: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x001309b3: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000eab53: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x0011f093: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x00115113: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000f0ac3: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000f0a93: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x001146f3: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x00128833: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x00128753: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x00128453: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x00128483: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x00124923: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x0012316d: and al, 0x10; mov edx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000942ab: and al, 0x10; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x0009f808: and al, 0x10; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012310d: and al, 0x10; mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0012fb62: and al, 0x10; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0011fe22: and al, 0x10; mov esi, dword ptr [esp + 0x18]; mov edx, ecx; mov edi, dword ptr [esp + 0x1c]; sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x00061321: and al, 0x10; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0012206e: and al, 0x10; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00121f6a: and al, 0x10; or dh, 0x80; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x0017c0a1: and al, 0x10; pop ebx; mov eax, dword ptr [eax + 0xc]; pop esi; pop edi; jmp eax; 
0x0017c0da: and al, 0x10; pop ebx; mov eax, dword ptr [eax + 8]; pop esi; pop edi; jmp eax; 
0x0008131b: and al, 0x10; pop ebx; mov eax, dword ptr [edi + 0x10]; pop esi; pop edi; jmp eax; 
0x000811cb: and al, 0x10; pop ebx; mov eax, dword ptr [edi + 0x14]; pop esi; pop edi; jmp eax; 
0x000890bb: and al, 0x10; pop ebx; mov eax, dword ptr [esi + 0x10]; pop esi; pop edi; jmp eax; 
0x00170b9d: and al, 0x10; pop ebx; pop esi; jmp eax; 
0x000a809b: and al, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00083393: and al, 0x10; push dword ptr [esp + 0x10]; push esi; call dword ptr [ebx + 0x40]; 
0x00154f5c: and al, 0x10; push eax; push 0; push dword ptr [esp + 0x14]; push ebp; call edi; 
0x001782aa: and al, 0x10; push ecx; push 0xd; push eax; call dword ptr [edx + 0x14]; 
0x0007c148: and al, 0x10; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x0017c7e8: and al, 0x10; push ecx; push edx; call dword ptr [eax + 0x20]; 
0x0017b978: and al, 0x10; push ecx; push edx; call dword ptr [eax]; 
0x001775fa: and al, 0x10; push edi; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0017c55e: and al, 0x10; push edx; push ebx; call dword ptr [eax + 0x20]; 
0x001754ea: and al, 0x10; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x0017bb88: and al, 0x10; push edx; push ebx; call dword ptr [eax + 4]; 
0x0017bb1d: and al, 0x10; push edx; push ebx; call dword ptr [eax]; 
0x0017be58: and al, 0x10; push edx; push ecx; call dword ptr [eax + 4]; 
0x0017be90: and al, 0x10; push edx; push ecx; call dword ptr [eax]; 
0x0013f7f0: and al, 0x10; push edx; push edi; call eax; 
0x0013f8cd: and al, 0x10; push edx; push esi; call eax; 
0x0016ef2a: and al, 0x10; push esi; call dword ptr [eax + 0xc]; 
0x00083397: and al, 0x10; push esi; call dword ptr [ebx + 0x40]; 
0x00145e23: and al, 0x10; sub eax, ebx; add esp, 8; pop ebx; ret; 
0x0005b71b: and al, 0x10; test byte ptr [edx], 0x20; je 0x5b730; add esp, 0xc; ret; 
0x000790cb: and al, 0x10; test byte ptr [edx], 0x20; je 0x790e0; add esp, 0xc; ret; 
0x0012f1d7: and al, 0x10; test edx, edx; je 0x12f210; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x178; call dword ptr gs:[0x10]; 
0x000ba988: and al, 0x11; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000ba9a6: and al, 0x11; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00070afe: and al, 0x14; add byte ptr [eax], al; add byte ptr [eax], al; jmp edx; 
0x00070e7e: and al, 0x14; add dword ptr [eax], eax; add byte ptr [eax], al; jmp edx; 
0x00115b8d: and al, 0x14; add dword ptr [eax], eax; add byte ptr [ecx], dh; fisttp dword ptr [ecx - 0x763e7611]; ret 0xc031; 
0x0015014e: and al, 0x14; add dword ptr [ecx], ebp; ret 0x828d; 
0x00034e2d: and al, 0x14; add esp, 0xc; mov eax, edx; ret; 
0x00034e62: and al, 0x14; call 0x34900; mov edx, dword ptr [esp + 0x14]; add esp, 0xc; mov eax, edx; ret; 
0x00098312: and al, 0x14; call 0x981a0; xor eax, eax; add esp, 0xc; ret; 
0x000e7a70: and al, 0x14; call dword ptr gs:[0x10]; 
0x00024d93: and al, 0x14; call eax; 
0x00033d6d: and al, 0x14; call edx; 
0x000e7b33: and al, 0x14; cmp eax, 0x3b9ac9ff; ja 0xe7bd8; lea ecx, [esp + 0xc]; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000da7fd: and al, 0x14; fsubp st(1); fstp qword ptr [esp]; fld qword ptr [esp]; add esp, 0xc; ret; 
0x00188746: and al, 0x14; jne 0x188750; pop ebx; ret; 
0x0007933f: and al, 0x14; mov dword ptr [eax], edx; add esp, 4; pop ebx; pop esi; ret; 
0x0008d75b: and al, 0x14; mov dword ptr [esp + 0x10], edx; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x000e7a63: and al, 0x14; mov dword ptr [esp + 0x18], eax; mov eax, 0x108; mov dword ptr [esp + 0x14], edi; call dword ptr gs:[0x10]; 
0x000e7712: and al, 0x14; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x0003ddc1: and al, 0x14; mov eax, 0x135; xor edx, edx; xor esi, esi; xor edi, edi; call dword ptr gs:[0x10]; 
0x00131a2e: and al, 0x14; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0010e5b3: and al, 0x14; mov eax, 0x72; mov ecx, ebp; mov edx, dword ptr [esp + 0x88]; call dword ptr gs:[0x10]; 
0x0008f28b: and al, 0x14; mov eax, 0xf0; mov edx, 2; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x001704a1: and al, 0x14; mov eax, dword ptr [ebx + 0x14]; add esp, 4; pop ebx; pop esi; jmp eax; 
0x00136e39: and al, 0x14; mov eax, dword ptr [ebx + 8]; mov dword ptr [ebx + 8], edx; add esp, 8; pop ebx; ret; 
0x00024d8f: and al, 0x14; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0013276c: and al, 0x14; mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001322b5: and al, 0x14; mov eax, dword ptr [esp + 0x44]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00131304: and al, 0x14; mov ebx, 0x12; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000942af: and al, 0x14; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x00190450: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0012ad81: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x001220ea: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00115151: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0011f121: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x00130c81: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x00130901: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x00130981: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1ad; call dword ptr gs:[0x10]; 
0x00130721: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1af; call dword ptr gs:[0x10]; 
0x00130ae1: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1b8; call dword ptr gs:[0x10]; 
0x00130941: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1ba; call dword ptr gs:[0x10]; 
0x00130811: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x00130b51: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0012f551: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xac; call dword ptr gs:[0x10]; 
0x0012b7a1: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x00128601: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x00124991: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x0012fb5e: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0012206a: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0009f80c: and al, 0x14; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x001208a8: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x00130aa8: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x1a8; call dword ptr gs:[0x10]; 
0x00130b88: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x00126a68: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x00128428: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x001248f8: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x001306e8: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x00132ad3: and al, 0x14; mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0011f700: and al, 0x14; mov edx, dword ptr [esp + 0x18]; mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x00061319: and al, 0x14; mov edx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00192981: and al, 0x14; mov edx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00132fc1: and al, 0x14; mov edx, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0012f018: and al, 0x14; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x000eaba2: and al, 0x14; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x00053308: and al, 0x14; mov esi, dword ptr [esp + 0x28]; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x001717f0: and al, 0x14; push dword ptr [esi]; call dword ptr [esi + 0x20]; 
0x00024d8b: and al, 0x14; push dword ptr [esp + 0x14]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0016f288: and al, 0x14; push dword ptr [esp + 0x14]; push dword ptr [esp + 0x74]; push eax; call dword ptr [ecx]; 
0x0016f28c: and al, 0x14; push dword ptr [esp + 0x74]; push eax; call dword ptr [ecx]; 
0x0005f7d3: and al, 0x14; push eax; push edi; push ebx; mov eax, dword ptr [esp + 0x14]; call eax; 
0x00154f63: and al, 0x14; push ebp; call edi; 
0x00179c68: and al, 0x14; push ebx; call dword ptr [eax]; 
0x000f0d8d: and al, 0x14; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x0016fb4b: and al, 0x14; push edx; push ebx; call dword ptr [eax + 0x14]; 
0x0016ee18: and al, 0x14; push esi; call dword ptr [eax + 4]; 
0x000cb090: and al, 0x18; adc byte ptr [edi], cl; xchg esp, eax; ret 0xf883; 
0x001b0dc6: and al, 0x18; add al, 0x39; ret 0x850f; 
0x00095d37: and al, 0x18; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00115c15: and al, 0x18; add dword ptr [eax], eax; add byte ptr [ebx + 0xf14247c], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc10c; 
0x00065118: and al, 0x18; add eax, dword ptr [ecx + edx*4 - 0x73f14]; jmp eax; 
0x000658a2: and al, 0x18; add eax, dword ptr [edi + edx*4]; mov edi, ecx; jmp eax; 
0x0006488f: and al, 0x18; add eax, dword ptr [esi + edx*4 - 0x73e94]; jmp eax; 
0x0006602a: and al, 0x18; add eax, dword ptr [esi + edx*4 - 0x74014]; jmp eax; 
0x00065943: and al, 0x18; add edi, dword ptr [ecx + edx*4 - 0x73e94]; mov edx, edi; mov edi, eax; jmp edx; 
0x00175b21: and al, 0x18; call dword ptr [eax + 0x10]; 
0x00186f9d: and al, 0x18; call dword ptr [eax + 0x37c]; add esp, 0x1c; ret; 
0x0018b2b0: and al, 0x18; call dword ptr [eax + 0x40]; 
0x0012fb66: and al, 0x18; call dword ptr gs:[0x10]; 
0x00114413: and al, 0x18; call eax; 
0x00094241: and al, 0x18; cmp edi, ecx; mov ebx, dword ptr [eax + 0x68]; cmovbe ecx, edi; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x0012f470: and al, 0x18; cmp esi, -1; je 0x12f490; mov eax, 0x17c; call dword ptr gs:[0x10]; 
0x000da7dd: and al, 0x18; fsubp st(1); fstp qword ptr [esp]; fld qword ptr [esp]; add esp, 0xc; ret; 
0x0013ac5f: and al, 0x18; je 0x13ac70; add esp, 8; pop ebx; ret; 
0x00184013: and al, 0x18; lea eax, [eax - 0x6993c]; push eax; call 0x11f760; add esp, 0x1c; ret; 
0x000db3ed: and al, 0x18; lea eax, [esp + 0x104]; mov dword ptr [esp + 0x30], eax; push eax; mov eax, dword ptr [esp + 0x64]; call eax; 
0x0013244e: and al, 0x18; lea eax, [esp + 0x10]; mov dword ptr [esp + 0x24], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00064f88: and al, 0x18; lea ecx, [ebx - 0x20]; cmp cl, 0x5a; jbe 0x65934; mov edi, eax; jmp edx; 
0x0010b44d: and al, 0x18; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x000abed2: and al, 0x18; mov dword ptr [edx], eax; lea eax, [edx + 3]; pop ebx; pop esi; ret; 
0x000abe12: and al, 0x18; mov dword ptr [edx], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x00040bb2: and al, 0x18; mov dword ptr [edx], eax; xor eax, eax; add esp, 8; pop ebx; ret; 
0x0016ebb1: and al, 0x18; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0009feb9: and al, 0x18; mov eax, 0x103; mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000e7a67: and al, 0x18; mov eax, 0x108; mov dword ptr [esp + 0x14], edi; call dword ptr gs:[0x10]; 
0x0011f704: and al, 0x18; mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0013130d: and al, 0x18; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001329de: and al, 0x18; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00095d27: and al, 0x18; mov eax, 0xf0; mov ecx, 0x87; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x0005af9a: and al, 0x18; mov eax, dword ptr [eax + 0x164]; push dword ptr [eax]; call 0x664c0; add esp, 0x1c; ret; 
0x000804fa: and al, 0x18; mov eax, dword ptr [eax + 0x164]; push dword ptr [eax]; call 0x729a0; add esp, 0x1c; ret; 
0x00078e29: and al, 0x18; mov eax, dword ptr [eax + 0xbc]; push dword ptr [eax]; call 0x66130; add esp, 0x1c; ret; 
0x00080499: and al, 0x18; mov eax, dword ptr [eax + 0xbc]; push dword ptr [eax]; call 0x72650; add esp, 0x1c; ret; 
0x0012b8ba: and al, 0x18; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0010bde2: and al, 0x18; mov ebx, dword ptr [esp + 0x10]; cmp esi, ecx; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x0006131d: and al, 0x18; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0012e401: and al, 0x18; mov ebx, ecx; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x1b3; int 0x80; 
0x0012ad7d: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x0011514d: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0011f11d: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x00130c7d: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x001308fd: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x0013097d: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1ad; call dword ptr gs:[0x10]; 
0x0013071d: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1af; call dword ptr gs:[0x10]; 
0x00130add: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1b8; call dword ptr gs:[0x10]; 
0x0013093d: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1ba; call dword ptr gs:[0x10]; 
0x0013080d: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x00130b4d: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0012f54d: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xac; call dword ptr gs:[0x10]; 
0x0012b79d: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x001285fd: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x0012498d: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x0009de02: and al, 0x18; mov edi, dword ptr [ebp]; mov dword ptr [esp], ebp; call 0x231a0; mov dword ptr [esp], esi; call edi; 
0x00192985: and al, 0x18; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0012e1c5: and al, 0x18; mov edi, dword ptr [esp + 0x28]; mov eax, 0x78; mov dword ptr [ecx], ebx; int 0x80; 
0x001208a4: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x00130aa4: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x1a8; call dword ptr gs:[0x10]; 
0x00130b84: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x00126a64: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x00128424: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x001248f4: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x001306e4: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x0012f00b: and al, 0x18; mov edx, dword ptr [esp + 0x1c]; mov eax, 0x12c; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x0012f298: and al, 0x18; mov edx, dword ptr [esp + 0x1c]; mov eax, 0xa3; mov ebx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000eab9a: and al, 0x18; mov edx, dword ptr [esp + 0x1c]; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x0011fe26: and al, 0x18; mov edx, ecx; mov edi, dword ptr [esp + 0x1c]; sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x00132fc5: and al, 0x18; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00064a22: and al, 0x18; or cl, byte ptr [ecx + 0xf542454]; xchg esp, eax; ret 0x748b; 
0x00064cfc: and al, 0x18; or cl, byte ptr [edi]; xchg esp, eax; ret 0xc629; 
0x0011f082: and al, 0x18; push -0x64; call 0x114f20; add esp, 0x1c; ret; 
0x0011f53e: and al, 0x18; push -0x64; call 0x115940; add esp, 0x18; pop ebx; ret; 
0x0011f562: and al, 0x18; push -0x64; call 0x115b20; add esp, 0x1c; ret; 
0x0010e451: and al, 0x18; push -1; call 0x10e560; add esp, 0x1c; ret; 
0x0010e42b: and al, 0x18; push -1; call 0x10e970; add esp, 0x1c; ret; 
0x0012d9f9: and al, 0x18; push 0; call 0x12dc40; add esp, 0x1c; ret; 
0x00034edb: and al, 0x18; push 0; call 0x34e80; add esp, 0x1c; ret; 
0x000c3ad8: and al, 0x18; push 0; call 0xc4020; add esp, 0x1c; ret; 
0x0012889b: and al, 0x18; push 0; push dword ptr [esp + 0x1c]; call 0x616b0; add esp, 0x1c; ret; 
0x00090699: and al, 0x18; push 0x80; push dword ptr [esp + 0x1c]; call 0x905e0; add esp, 0x1c; ret; 
0x000da81f: and al, 0x18; push dword ptr [eax + 4]; push dword ptr [eax]; call 0xdd060; add esp, 0x1c; ret; 
0x0011f07e: and al, 0x18; push dword ptr [esp + 0x18]; push -0x64; call 0x114f20; add esp, 0x1c; ret; 
0x0011f55e: and al, 0x18; push dword ptr [esp + 0x18]; push -0x64; call 0x115b20; add esp, 0x1c; ret; 
0x0010e44d: and al, 0x18; push dword ptr [esp + 0x18]; push -1; call 0x10e560; add esp, 0x1c; ret; 
0x000c3ad4: and al, 0x18; push dword ptr [esp + 0x18]; push 0; call 0xc4020; add esp, 0x1c; ret; 
0x000a8529: and al, 0x18; push dword ptr [esp + 0x20]; call 0xc2510; add esp, 0x18; pop ebx; ret; 
0x0003f0ad: and al, 0x18; push eax; push eax; call 0x3f110; add esp, 0x1c; ret; 
0x00079743: and al, 0x18; push eax; push edi; push ebx; mov eax, dword ptr [esp + 0x14]; call eax; 
0x00154b6c: and al, 0x18; push ebp; push 0; push edi; push ebx; call edx; 
0x000e76e2: and al, 0x18; push ebx; call eax; 
0x000a0751: and al, 0x18; push edi; call 0x231a0; mov eax, dword ptr [esp + 0x1c]; mov dword ptr [esp], eax; call esi; 
0x0002fdd6: and al, 0x18; sub eax, 1; mov dword ptr [ecx + 4], eax; add esp, 8; pop ebx; ret; 
0x0018b6bc: and al, 0x18; test ebx, ebx; jne 0x18b6d0; add esp, 8; pop ebx; ret; 
0x00088c7c: and al, 0x18; test ebx, ebx; jne 0x88c90; add esp, 8; pop ebx; ret; 
0x0017d01e: and al, 0x18; test edx, edx; jne 0x17d030; add esp, 0xc; ret; 
0x0017d18e: and al, 0x18; test edx, edx; jne 0x17d1a0; add esp, 0xc; ret; 
0x000935e9: and al, 0x18; xor edx, edx; mov edi, eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0012308a: and al, 0x18; xor esi, esi; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000dae76: and al, 0x19; fimul dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0x8902; 
0x00071866: and al, 0x1c; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x00064ef8: and al, 0x1c; add dword ptr [eax], eax; add byte ptr [eax], al; jmp edx; 
0x00070c88: and al, 0x1c; add dword ptr [eax], eax; add byte ptr [eax], al; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x0015bf33: and al, 0x1c; add eax, 8; push eax; call 0xc21a0; add esp, 0x1c; ret; 
0x0009c851: and al, 0x1c; call 0x10b4c0; add esp, 0x1c; ret; 
0x0010e983: and al, 0x1c; call 0x10e770; add esp, 0x1c; ret; 
0x0019063b: and al, 0x1c; call 0x115180; add esp, 0x1c; sar eax, 0x1f; ret; 
0x00115401: and al, 0x1c; call 0x115410; add esp, 0x1c; ret; 
0x0011f675: and al, 0x1c; call 0x11f6b0; add esp, 0x1c; ret; 
0x00061699: and al, 0x1c; call 0x11f760; add esp, 0x1c; ret; 
0x00114a72: and al, 0x1c; call 0x11f860; add esp, 0x1c; ret; 
0x0012435b: and al, 0x1c; call 0x124200; add esp, 0x18; pop ebx; ret; 
0x00024507: and al, 0x1c; call 0x124280; add esp, 0x18; pop ebx; ret; 
0x00126b4a: and al, 0x1c; call 0x126ba0; add esp, 0x1c; ret; 
0x00122e44: and al, 0x1c; call 0x1283c0; add esp, 0x10; add esp, 0xc; ret; 
0x00122cd3: and al, 0x1c; call 0x1283c0; add esp, 0x1c; ret; 
0x0012c1e4: and al, 0x1c; call 0x12ba60; add esp, 0x1c; ret; 
0x0013025b: and al, 0x1c; call 0x130270; add esp, 0x1c; ret; 
0x00132f93: and al, 0x1c; call 0x133530; add esp, 0x1c; ret; 
0x0013be50: and al, 0x1c; call 0x13a5a0; add esp, 0x1c; ret; 
0x0013a760: and al, 0x1c; call 0x13a650; add esp, 0x18; pop ebx; ret; 
0x0013eeba: and al, 0x1c; call 0x13eed0; add esp, 0x1c; ret; 
0x0013f1fa: and al, 0x1c; call 0x13f210; add esp, 0x1c; ret; 
0x00143a2b: and al, 0x1c; call 0x142d60; add esp, 0x1c; ret; 
0x0014ab1b: and al, 0x1c; call 0x14aa40; add esp, 0x1c; ret; 
0x00192bd5: and al, 0x1c; call 0x158040; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00192c45: and al, 0x1c; call 0x158f50; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00192f05: and al, 0x1c; call 0x164b80; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00192f75: and al, 0x1c; call 0x1658b0; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x001930a5: and al, 0x1c; call 0x166f40; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x001930d5: and al, 0x1c; call 0x167280; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00193185: and al, 0x1c; call 0x1681a0; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00178d58: and al, 0x1c; call 0x178aa0; add esp, 0x10; add esp, 0xc; ret; 
0x00178d39: and al, 0x1c; call 0x178ba0; add esp, 0x10; add esp, 0xc; ret; 
0x0017b1f3: and al, 0x1c; call 0x17af20; add esp, 0x1c; ret; 
0x0017050f: and al, 0x1c; call 0x17c030; add esp, 0x1c; ret; 
0x0017c297: and al, 0x1c; call 0x17c100; add esp, 0x1c; ret; 
0x0018a9d5: and al, 0x1c; call 0x18a0c0; add esp, 0x18; pop ebx; ret; 
0x00042b45: and al, 0x1c; call 0x1acdd0; add esp, 0x18; pop ebx; ret; 
0x00042ba9: and al, 0x1c; call 0x1ace10; add esp, 0x18; pop ebx; ret; 
0x0002fcc2: and al, 0x1c; call 0x231a0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0010bda5: and al, 0x1c; call 0x231a0; add esp, 0x18; pop ebx; ret; 
0x00024523: and al, 0x1c; call 0x244ec; add esp, 0x1c; ret; 
0x000333c3: and al, 0x1c; call 0x333d0; add esp, 0x1c; ret; 
0x00034ebf: and al, 0x1c; call 0x34e80; add esp, 0x1c; ret; 
0x0003d81f: and al, 0x1c; call 0x3d7a0; add esp, 0x1c; ret; 
0x0003e95b: and al, 0x1c; call 0x3e0c0; add esp, 0x1c; ret; 
0x0003e990: and al, 0x1c; call 0x3ead0; add esp, 0x1c; ret; 
0x00189d3b: and al, 0x1c; call 0x3ebb0; add esp, 0x1c; ret; 
0x000406da: and al, 0x1c; call 0x406f0; add esp, 0x1c; ret; 
0x0004280a: and al, 0x1c; call 0x42820; add esp, 0x1c; ret; 
0x0003dfdb: and al, 0x1c; call 0x46e10; add esp, 0x1c; ret; 
0x00046dfb: and al, 0x1c; call 0x477a0; add esp, 0x1c; ret; 
0x0004a4cb: and al, 0x1c; call 0x4ad00; add esp, 0x1c; ret; 
0x0003dffd: and al, 0x1c; call 0x4d7b0; add esp, 0x1c; ret; 
0x0004dedb: and al, 0x1c; call 0x4e840; add esp, 0x1c; ret; 
0x0003e03d: and al, 0x1c; call 0x51570; add esp, 0x1c; ret; 
0x001288f3: and al, 0x1c; call 0x616b0; add esp, 0x10; add esp, 0xc; ret; 
0x001288a1: and al, 0x1c; call 0x616b0; add esp, 0x1c; ret; 
0x0005ac34: and al, 0x1c; call 0x66130; add esp, 0x1c; ret; 
0x0005ac55: and al, 0x1c; call 0x66440; add esp, 0x1c; ret; 
0x0005af74: and al, 0x1c; call 0x664c0; add esp, 0x1c; ret; 
0x0006dc63: and al, 0x1c; call 0x72650; add esp, 0x1c; ret; 
0x00080525: and al, 0x1c; call 0x72920; add esp, 0x1c; ret; 
0x00072933: and al, 0x1c; call 0x729a0; add esp, 0x1c; ret; 
0x00079aa4: and al, 0x1c; call 0x79960; add esp, 0x1c; ret; 
0x00085255: and al, 0x1c; call 0x7b3c0; add esp, 0x18; pop ebx; ret; 
0x0007c05f: and al, 0x1c; call 0x7bf70; add esp, 0x1c; ret; 
0x0005ad63: and al, 0x1c; call 0x7cd30; add esp, 0x1c; ret; 
0x00085562: and al, 0x1c; call 0x7e470; add esp, 0x1c; ret; 
0x0008557f: and al, 0x1c; call 0x7e620; add esp, 0x1c; ret; 
0x000857df: and al, 0x1c; call 0x85680; add esp, 0x18; pop ebx; ret; 
0x0005aa84: and al, 0x1c; call 0x85680; add esp, 0x1c; ret; 
0x0008599f: and al, 0x1c; call 0x858b0; add esp, 0x18; pop ebx; ret; 
0x0005ab94: and al, 0x1c; call 0x858b0; add esp, 0x1c; ret; 
0x00085e6f: and al, 0x1c; call 0x85ce0; add esp, 0x18; pop ebx; ret; 
0x0013d700: and al, 0x1c; call 0x85ce0; add esp, 0x1c; ret; 
0x0008d0dc: and al, 0x1c; call 0x8d010; add esp, 0x18; pop ebx; ret; 
0x0009037e: and al, 0x1c; call 0x902a0; add esp, 0x18; pop ebx; ret; 
0x000906a2: and al, 0x1c; call 0x905e0; add esp, 0x1c; ret; 
0x00097e6b: and al, 0x1c; call 0x97d20; add esp, 0x1c; ret; 
0x00099bae: and al, 0x1c; call 0x99b50; add esp, 0x18; pop ebx; ret; 
0x0009e03b: and al, 0x1c; call 0x9d7e0; cmp eax, 1; sbb eax, eax; add esp, 0x1c; ret; 
0x0009f771: and al, 0x1c; call 0x9f6b0; add esp, 0x18; pop ebx; ret; 
0x0009f1cf: and al, 0x1c; call 0x9f7f0; add esp, 0x1c; ret; 
0x000aa337: and al, 0x1c; call 0xaa360; add esp, 0x1c; ret; 
0x000ab583: and al, 0x1c; call 0xab590; add esp, 0x1c; ret; 
0x000acfbe: and al, 0x1c; call 0xacfd0; add esp, 0x1c; ret; 
0x000ad1fb: and al, 0x1c; call 0xad2c0; add esp, 0x1c; ret; 
0x000ac05d: and al, 0x1c; call 0xb0090; add esp, 0x18; pop ebx; ret; 
0x0013de73: and al, 0x1c; call 0xc2490; add esp, 0x14; pop ebx; pop esi; ret; 
0x000abf3d: and al, 0x1c; call 0xc2490; add esp, 0x18; pop ebx; ret; 
0x000d4771: and al, 0x1c; call 0xc2580; add esp, 0x18; pop ebx; ret; 
0x000a855b: and al, 0x1c; call 0xc25c0; add esp, 0x18; pop ebx; ret; 
0x000ac089: and al, 0x1c; call 0xc2610; add esp, 0x18; pop ebx; ret; 
0x000abfd9: and al, 0x1c; call 0xc2b40; add esp, 0x18; pop ebx; ret; 
0x0013e3f7: and al, 0x1c; call 0xc4980; add esp, 0x18; pop ebx; ret; 
0x000c4c13: and al, 0x1c; call 0xc49f0; add esp, 0x1c; ret; 
0x000c4de7: and al, 0x1c; call 0xc4e00; add esp, 0x1c; ret; 
0x0013e6b7: and al, 0x1c; call 0xc66c0; add esp, 0x18; pop ebx; ret; 
0x000c738b: and al, 0x1c; call 0xc7ce0; add esp, 0x1c; ret; 
0x000ca6eb: and al, 0x1c; call 0xcaec0; add esp, 0x1c; ret; 
0x000cde4b: and al, 0x1c; call 0xce760; add esp, 0x1c; ret; 
0x000d29db: and al, 0x1c; call 0xd2a00; add esp, 0x1c; ret; 
0x000d9bc8: and al, 0x1c; call 0xd4710; add esp, 0x14; pop ebx; pop esi; ret; 
0x000db8cb: and al, 0x1c; call 0xda950; add esp, 0x18; pop ebx; ret; 
0x000eab3f: and al, 0x1c; call 0xeab50; add esp, 0x1c; ret; 
0x000eabff: and al, 0x1c; call 0xeb090; add esp, 0x1c; ret; 
0x00061325: and al, 0x1c; call dword ptr gs:[0x10]; 
0x00171459: and al, 0x1c; lea edx, [ecx + 4]; push edx; push ebx; call dword ptr [eax + 4]; 
0x00171498: and al, 0x1c; lea edx, [ecx + 4]; push edx; push ebx; call dword ptr [eax]; 
0x000abde8: and al, 0x1c; mov dword ptr [edx + 4], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x000e9ff4: and al, 0x1c; mov dword ptr [edx], esi; add esp, 4; pop ebx; pop esi; ret; 
0x000a075b: and al, 0x1c; mov dword ptr [esp], eax; call esi; 
0x0012f00f: and al, 0x1c; mov eax, 0x12c; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x00131c1f: and al, 0x1c; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00131be1: and al, 0x1c; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x0012f29c: and al, 0x1c; mov eax, 0xa3; mov ebx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0009dded: and al, 0x1c; mov eax, 0xaf; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000dad3f: and al, 0x1c; mov eax, dword ptr [esp + 0x64]; call eax; 
0x000eab9e: and al, 0x1c; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x0012b8b6: and al, 0x1c; mov ebx, dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000de912: and al, 0x1c; mov edx, dword ptr [esp + 0x34]; mov ebx, dword ptr [esp + 0x30]; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012fdc3: and al, 0x1c; mov edx, dword ptr [esp + 0x34]; mov ebx, dword ptr [esp + 0x30]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00061381: and al, 0x1c; mov esi, dword ptr [esp + 0x20]; test edi, edi; je 0x613b0; mov eax, 0x161; call dword ptr gs:[0x10]; 
0x0010bfe4: and al, 0x1c; mov esi, dword ptr [esp + 0x44]; mov ebx, dword ptr [esp + 0x40]; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000e7674: and al, 0x1c; mov esi, dword ptr [esp + 0x44]; mov ebx, dword ptr [esp + 0x40]; mov ecx, esi; call dword ptr gs:[0x10]; 
0x001376e7: and al, 0x1c; push 0; push 0x2000004; call eax; 
0x00089d71: and al, 0x1c; push dword ptr [eax + 0x38]; call 0x11f490; add esp, 0x18; pop ebx; ret; 
0x0013d8ac: and al, 0x1c; push dword ptr [eax]; call 0x66130; add esp, 0x1c; ret; 
0x0013e36c: and al, 0x1c; push dword ptr [eax]; call 0x72650; add esp, 0x1c; ret; 
0x00187157: and al, 0x1c; push dword ptr [ecx]; mov dword ptr [esp + 0x20], ecx; push dword ptr [esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x001548ab: and al, 0x1c; push dword ptr [edi]; push eax; push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0007c0eb: and al, 0x1c; push dword ptr [esi + 0x98]; call eax; 
0x0009c84d: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x10b4c0; add esp, 0x1c; ret; 
0x0010e97f: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x10e770; add esp, 0x1c; ret; 
0x00124357: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x124200; add esp, 0x18; pop ebx; ret; 
0x00024503: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x124280; add esp, 0x18; pop ebx; ret; 
0x0012c1e0: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x12ba60; add esp, 0x1c; ret; 
0x00132f8f: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x133530; add esp, 0x1c; ret; 
0x0013a75c: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x13a650; add esp, 0x18; pop ebx; ret; 
0x0017050b: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x17c030; add esp, 0x1c; ret; 
0x00042ba5: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x1ace10; add esp, 0x18; pop ebx; ret; 
0x00034ebb: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x34e80; add esp, 0x1c; ret; 
0x0003d81b: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x3d7a0; add esp, 0x1c; ret; 
0x0003ebce: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x3ead0; add esp, 0x1c; ret; 
0x00046df7: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x477a0; add esp, 0x1c; ret; 
0x0004a4c7: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x4ad00; add esp, 0x1c; ret; 
0x0004ded7: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x4e840; add esp, 0x1c; ret; 
0x0005ac30: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x66130; add esp, 0x1c; ret; 
0x0005af70: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x664c0; add esp, 0x1c; ret; 
0x00080440: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x72650; add esp, 0x1c; ret; 
0x00080521: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x72920; add esp, 0x1c; ret; 
0x0007292f: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x729a0; add esp, 0x1c; ret; 
0x00079aa0: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x79960; add esp, 0x1c; ret; 
0x0007c05b: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x7bf70; add esp, 0x1c; ret; 
0x0005ad5f: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x7cd30; add esp, 0x1c; ret; 
0x0008555e: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x7e470; add esp, 0x1c; ret; 
0x000857db: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x85680; add esp, 0x18; pop ebx; ret; 
0x0008599b: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x858b0; add esp, 0x18; pop ebx; ret; 
0x0005ab90: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x858b0; add esp, 0x1c; ret; 
0x00085e6b: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x85ce0; add esp, 0x18; pop ebx; ret; 
0x000ad1f7: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xad2c0; add esp, 0x1c; ret; 
0x000d472d: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xc2490; add esp, 0x18; pop ebx; ret; 
0x000d476d: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xc2580; add esp, 0x18; pop ebx; ret; 
0x000c4c0f: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xc49f0; add esp, 0x1c; ret; 
0x0013e6b3: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xc66c0; add esp, 0x18; pop ebx; ret; 
0x000c7387: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xc7ce0; add esp, 0x1c; ret; 
0x000cd52f: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xcaec0; add esp, 0x1c; ret; 
0x000cde47: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xce760; add esp, 0x1c; ret; 
0x000d29d7: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xd2a00; add esp, 0x1c; ret; 
0x000eabfb: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xeb090; add esp, 0x1c; ret; 
0x000dad3b: and al, 0x1c; push dword ptr [esp + 0x1c]; mov eax, dword ptr [esp + 0x64]; call eax; 
0x0013e218: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x66130; add esp, 0x1c; ret; 
0x0013e368: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x72650; add esp, 0x1c; ret; 
0x0009c849: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x10b4c0; add esp, 0x1c; ret; 
0x0010e97b: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x10e770; add esp, 0x1c; ret; 
0x0012c1fb: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x12ba60; add esp, 0x1c; ret; 
0x00132f8b: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x133530; add esp, 0x1c; ret; 
0x0003ebca: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x3ead0; add esp, 0x1c; ret; 
0x00046df3: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x477a0; add esp, 0x1c; ret; 
0x0004a4c3: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x4ad00; add esp, 0x1c; ret; 
0x0004ded3: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x4e840; add esp, 0x1c; ret; 
0x0005b06b: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x664c0; add esp, 0x1c; ret; 
0x0007292b: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x729a0; add esp, 0x1c; ret; 
0x000ad1f3: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xad2c0; add esp, 0x1c; ret; 
0x000c4c0b: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc49f0; add esp, 0x1c; ret; 
0x000c7383: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc7ce0; add esp, 0x1c; ret; 
0x000cde43: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xce760; add esp, 0x1c; ret; 
0x000d29d3: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xd2a00; add esp, 0x1c; ret; 
0x000db58d: and al, 0x1c; push dword ptr [esp + 0x30]; mov eax, dword ptr [esp + 0x64]; call eax; 
0x00042b16: and al, 0x1c; push eax; call 0x1acdd0; add esp, 0x18; pop ebx; ret; 
0x00179e67: and al, 0x1c; push ebx; call dword ptr [eax + 0xc]; 
0x00171472: and al, 0x1c; push ebx; call dword ptr [eax + 4]; 
0x001714c0: and al, 0x1c; push ebx; call dword ptr [eax]; 
0x00179d9b: and al, 0x1c; push ebx; call eax; 
0x000e76dd: and al, 0x1c; push ecx; mov dword ptr [esp + 0x18], ecx; push ebx; call eax; 
0x0016ee46: and al, 0x1c; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0011fe2c: and al, 0x1c; sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x0017b89d: and al, 0x1c; sub eax, dword ptr gs:[0x14]; jne 0x17b8ac; add esp, 0x2c; ret; 
0x0008750d: and al, 0x1c; sub eax, dword ptr gs:[0x14]; jne 0x8752c; add esp, 0x28; pop ebx; ret; 
0x000dba59: and al, 0x1c; sub ecx, dword ptr gs:[0x14]; jne 0xdba69; add esp, 0x28; pop ebx; ret; 
0x0010c212: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x10c269; add esp, 0x28; pop ebx; ret; 
0x0010c2b5: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x10c309; add esp, 0x28; pop ebx; ret; 
0x0010c522: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x10c579; add esp, 0x28; pop ebx; ret; 
0x0012b695: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x12b6e9; add esp, 0x28; pop ebx; ret; 
0x0012b735: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x12b789; add esp, 0x28; pop ebx; ret; 
0x001313db: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x131409; add esp, 0x28; pop ebx; ret; 
0x0013278b: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x1327b9; add esp, 0x28; pop ebx; ret; 
0x0013d580: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x13d595; add esp, 0x2c; ret; 
0x0013e7c0: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x13e7d5; add esp, 0x2c; ret; 
0x0014ef51: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x14ef63; movzx eax, ax; add esp, 0x2c; ret; 
0x00153641: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x153651; add esp, 0x28; pop ebx; ret; 
0x0016f426: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x16f436; add esp, 0x28; pop ebx; ret; 
0x001785b9: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x1785d7; add esp, 0x28; pop ebx; ret; 
0x00178659: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x178677; add esp, 0x28; pop ebx; ret; 
0x00186f28: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x186f38; add esp, 0x28; pop ebx; ret; 
0x00192b46: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x192b55; add esp, 0x2c; ret; 
0x0003cf3b: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x3cf7c; add esp, 0x28; pop ebx; ret; 
0x000409d5: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x409e4; add esp, 0x2c; ret; 
0x00053495: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x534a4; add esp, 0x2c; ret; 
0x00092768: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x92777; add esp, 0x2c; ret; 
0x00097254: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x97264; add esp, 0x28; pop ebx; ret; 
0x000972e4: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x972f3; add esp, 0x2c; ret; 
0x00098598: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x985a7; add esp, 0x2c; ret; 
0x00098a08: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x98a17; add esp, 0x2c; ret; 
0x00098f24: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x98f33; add esp, 0x2c; ret; 
0x00099374: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x99383; add esp, 0x2c; ret; 
0x0009c4cf: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x9c4f7; add esp, 0x2c; ret; 
0x0009c73b: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x9c767; add esp, 0x2c; ret; 
0x0009e751: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x9e761; add esp, 0x28; pop ebx; ret; 
0x0009fdc9: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x9fdd9; add esp, 0x28; pop ebx; ret; 
0x000da685: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0xda69f; add esp, 0x28; pop ebx; ret; 
0x000dbcce: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0xdbd19; add esp, 0x28; pop ebx; ret; 
0x000e75a1: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0xe75e2; add esp, 0x28; pop ebx; ret; 
0x000e77bf: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0xe77cf; add esp, 0x28; pop ebx; ret; 
0x000a17a3: and al, 0x1c; xor eax, eax; mov eax, 0x163; mov byte ptr [esi + 0x3c24], 1; lea ebx, [esi + 0x3c1c]; call dword ptr gs:[0x10]; 
0x000704fb: and al, 0x20; add dword ptr [eax], eax; add byte ptr [eax], al; jmp edx; 
0x000650b4: and al, 0x20; add edi, dword ptr [eax + edx*4 - 0x73f94]; mov edx, edi; mov edi, ecx; jmp edx; 
0x00064bf4: and al, 0x20; add edi, dword ptr [eax + edx*4 - 0x74094]; mov edx, edi; mov edi, ecx; jmp edx; 
0x00189969: and al, 0x20; call 0x1897e0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x001899a5: and al, 0x20; call 0x189850; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0018994d: and al, 0x20; call 0x189860; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00128cb5: and al, 0x20; call 0x231a0; add esp, 0x18; pop ebx; ret; 
0x00042144: and al, 0x20; call 0x42060; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000a852d: and al, 0x20; call 0xc2510; add esp, 0x18; pop ebx; ret; 
0x0012f01c: and al, 0x20; call dword ptr gs:[0x10]; 
0x0016ee4b: and al, 0x20; call eax; 
0x00121d02: and al, 0x20; lea edx, [esp + 4]; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x0013244a: and al, 0x20; mov dword ptr [esp + 0x18], eax; lea eax, [esp + 0x10]; mov dword ptr [esp + 0x24], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000db727: and al, 0x20; mov dword ptr [esp + 0x24], ebx; push ebp; push dword ptr [esp + 0x30]; mov eax, dword ptr [esp + 0x64]; call eax; 
0x00122d01: and al, 0x20; mov eax, 0x36; mov ecx, 0x5409; mov edx, 1; call dword ptr gs:[0x10]; 
0x00124da0: and al, 0x20; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00124850: and al, 0x20; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x0003d8a7: and al, 0x20; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x0003c9f0: and al, 0x20; mov eax, 0xb3; mov ecx, 8; call dword ptr gs:[0x10]; 
0x0011e65c: and al, 0x20; mov eax, 0xb7; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00121cce: and al, 0x20; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00114740: and al, 0x20; mov eax, 6; call dword ptr gs:[0x10]; 
0x0017b9ae: and al, 0x20; mov eax, dword ptr [eax + 4]; add esp, 0x18; pop ebx; jmp eax; 
0x00176b26: and al, 0x20; mov eax, dword ptr [ebx + 0x50]; push dword ptr [ebx + 0x48]; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x00173ea8: and al, 0x20; mov eax, dword ptr [ebx + 0xb0]; push dword ptr [ebx + 0xa8]; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x0006488b: and al, 0x20; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [esi + edx*4 - 0x73e94]; jmp eax; 
0x0012e1c1: and al, 0x20; mov ebx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x28]; mov eax, 0x78; mov dword ptr [ecx], ebx; int 0x80; 
0x00122d37: and al, 0x20; mov ecx, 0x5409; mov edx, 1; mov edi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0003ca17: and al, 0x20; mov ecx, 8; mov edx, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x0012b8b2: and al, 0x20; mov ecx, dword ptr [esp + 0x1c]; mov ebx, dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0012f331: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x156; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00040401: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x163; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001295b1: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x90; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0012ac61: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x91; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0012d871: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x92; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011fd61: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0xa8; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00120791: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 3; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00121941: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 4; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001149c0: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 8; call dword ptr gs:[0x10]; 
0x0012f35f: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x0004042f: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x001295df: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x0012ac8f: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x0012d89f: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0011fd8f: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x001207bf: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 3; call dword ptr gs:[0x10]; 
0x0012196f: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 4; call dword ptr gs:[0x10]; 
0x001149e7: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov edx, eax; mov eax, 8; call dword ptr gs:[0x10]; 
0x0010befb: and al, 0x20; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000eaba6: and al, 0x20; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x00124dc7: and al, 0x20; mov edx, eax; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00124877: and al, 0x20; mov edx, eax; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x00114767: and al, 0x20; mov edx, eax; mov eax, 6; call dword ptr gs:[0x10]; 
0x0006510f: and al, 0x20; movzx edx, byte ptr [edx + eax - 0x20]; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [ecx + edx*4 - 0x73f14]; jmp eax; 
0x00066021: and al, 0x20; movzx edx, byte ptr [edx + eax - 0x20]; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [esi + edx*4 - 0x74014]; jmp eax; 
0x0018713d: and al, 0x20; push dword ptr [esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x0012c22c: and al, 0x20; push dword ptr [esp + 0x1c]; call 0x12ba60; add esp, 0x1c; ret; 
0x0013ce7c: and al, 0x20; push dword ptr [esp + 0x1c]; call 0x66130; add esp, 0x1c; ret; 
0x0013d0cc: and al, 0x20; push dword ptr [esp + 0x1c]; call 0x72650; add esp, 0x1c; ret; 
0x0013bfac: and al, 0x20; push dword ptr [esp + 0x1c]; call 0x85680; add esp, 0x1c; ret; 
0x0013c86c: and al, 0x20; push dword ptr [esp + 0x1c]; call 0x858b0; add esp, 0x1c; ret; 
0x0013d6fc: and al, 0x20; push dword ptr [esp + 0x1c]; call 0x85ce0; add esp, 0x1c; ret; 
0x001781eb: and al, 0x20; push ecx; push 6; push eax; call dword ptr [edx + 0x14]; 
0x00189de8: and al, 0x20; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x0017873a: and al, 0x20; push edx; push eax; call edi; 
0x0017c19c: and al, 0x20; push edx; push esi; call dword ptr [eax]; 
0x00136fef: and al, 0x20; push esi; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x000a00e8: and al, 0x20; test ebx, ebx; js 0xa0118; mov eax, 0x107; call dword ptr gs:[0x10]; 
0x00061385: and al, 0x20; test edi, edi; je 0x613b0; mov eax, 0x161; call dword ptr gs:[0x10]; 
0x000642fa: and al, 0x24; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x00071876: and al, 0x24; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x000657f2: and al, 0x24; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; jmp edx; 
0x000dfdc6: and al, 0x24; add dword ptr [ebx - 0x7cdbdbbc], ecx; ret; 
0x00179ac3: and al, 0x24; add eax, 0x8b000000; push eax; or byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x000eb0a3: and al, 0x24; call 0xead50; mov eax, 0xffffffff; add esp, 0x1c; ret; 
0x000eabaa: and al, 0x24; call dword ptr gs:[0x10]; 
0x00041748: and al, 0x24; call eax; 
0x00141800: and al, 0x24; mov dword ptr [ecx], edx; pop ebx; pop esi; pop edi; ret; 
0x00090500: and al, 0x24; mov dword ptr [edx], eax; add esp, 0x18; xor eax, eax; pop ebx; ret; 
0x0013236c: and al, 0x24; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001316b4: and al, 0x24; mov dword ptr [esp + 0x38], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00131850: and al, 0x24; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012f335: and al, 0x24; mov eax, 0x156; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00040405: and al, 0x24; mov eax, 0x163; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00132456: and al, 0x24; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001295b5: and al, 0x24; mov eax, 0x90; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0012ac65: and al, 0x24; mov eax, 0x91; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0012d875: and al, 0x24; mov eax, 0x92; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011fd65: and al, 0x24; mov eax, 0xa8; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00120795: and al, 0x24; mov eax, 3; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00121945: and al, 0x24; mov eax, 4; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001149c4: and al, 0x24; mov eax, 8; call dword ptr gs:[0x10]; 
0x001548b2: and al, 0x24; mov eax, dword ptr [esp + 0x24]; call eax; 
0x00122a33: and al, 0x24; mov eax, dword ptr [esp + 0x74]; lea ecx, [eax + 0x5402]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0010bef7: and al, 0x24; mov ebx, dword ptr [esp + 0x20]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0012f363: and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x00040433: and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x001295e3: and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x0012ac93: and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x0012d8a3: and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0011fd93: and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x001207c3: and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 3; call dword ptr gs:[0x10]; 
0x00121973: and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 4; call dword ptr gs:[0x10]; 
0x001149eb: and al, 0x24; mov edx, eax; mov eax, 8; call dword ptr gs:[0x10]; 
0x000db72b: and al, 0x24; push ebp; push dword ptr [esp + 0x30]; mov eax, dword ptr [esp + 0x64]; call eax; 
0x0008e4e9: and al, 0x24; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0017403b: and al, 0x24; sub esp, 0xc; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x0014c7d2: and al, 0x26; add byte ptr [edi], cl; test dword ptr [ebp - 0x7c000003], esp; ret; 
0x00071896: and al, 0x28; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x000709ed: and al, 0x28; add dword ptr [eax], eax; add byte ptr [eax], al; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x0006587a: and al, 0x28; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; jmp edx; 
0x00137909: and al, 0x28; add esp, 0xc; push eax; push 0; push 0x2000002; call dword ptr [ebp + 0x14]; 
0x00137a02: and al, 0x28; add esp, 0xc; push eax; push dword ptr [esp + 0xc]; push 0x2000001; call dword ptr [ebp + 0x14]; 
0x0013749a: and al, 0x28; add esp, 0xc; push eax; push ebx; push 0x2000001; call dword ptr [ebp + 0x14]; 
0x00170c1f: and al, 0x28; call dword ptr [eax + 0x18]; 
0x0004040e: and al, 0x28; call dword ptr gs:[0x10]; 
0x00041718: and al, 0x28; call eax; 
0x00121cc5: and al, 0x28; cmp ecx, 9; je 0x121d00; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00041744: and al, 0x28; mov dword ptr [esp + 0x24], edx; call eax; 
0x001321f5: and al, 0x28; mov dword ptr [esp + 4], ebx; mov ebx, 0x10; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00131fc5: and al, 0x28; mov dword ptr [esp + 4], ebx; mov ebx, 0x11; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0013144f: and al, 0x28; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012f369: and al, 0x28; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x00040439: and al, 0x28; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x00132370: and al, 0x28; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012e1c9: and al, 0x28; mov eax, 0x78; mov dword ptr [ecx], ebx; int 0x80; 
0x001295e9: and al, 0x28; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x0012ac99: and al, 0x28; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x0012d8a9: and al, 0x28; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0011fd99: and al, 0x28; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x00115229: and al, 0x28; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x001207c9: and al, 0x28; mov eax, 3; call dword ptr gs:[0x10]; 
0x00121979: and al, 0x28; mov eax, 4; call dword ptr gs:[0x10]; 
0x0006197c: and al, 0x28; mov eax, dword ptr [esp + 0x34]; call eax; 
0x0005330c: and al, 0x28; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x00176477: and al, 0x28; mov edx, dword ptr [eax + 4]; push ecx; push eax; call dword ptr [edx + 8]; 
0x00179924: and al, 0x28; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x000eb09f: and al, 0x28; mov edx, dword ptr [esp + 0x24]; call 0xead50; mov eax, 0xffffffff; add esp, 0x1c; ret; 
0x0012d1dc: and al, 0x28; mov edx, dword ptr [esp + 0x2c]; sub edx, dword ptr gs:[0x14]; jne 0x12d1ef; add esp, 0x3c; ret; 
0x0009db2b: and al, 0x28; mov edx, ecx; mov ecx, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0011f6c5: and al, 0x28; push -0x64; call 0x11f6e0; add esp, 0x2c; ret; 
0x00061473: and al, 0x28; push -1; push dword ptr [esp + 0x2c]; call 0x7ea40; add esp, 0x2c; ret; 
0x00036513: and al, 0x28; push 0; call 0x364a0; add esp, 0x2c; ret; 
0x0011f6c1: and al, 0x28; push dword ptr [esp + 0x28]; push -0x64; call 0x11f6e0; add esp, 0x2c; ret; 
0x0003650f: and al, 0x28; push dword ptr [esp + 0x28]; push 0; call 0x364a0; add esp, 0x2c; ret; 
0x000d454b: and al, 0x28; push eax; lea eax, [esp + 0x34]; push eax; push dword ptr [esi + 8]; call ebx; 
0x001781d8: and al, 0x28; push ecx; push 4; push eax; call dword ptr [edx + 0x14]; 
0x00089512: and al, 0x28; push edx; push esi; call dword ptr [eax + 0x48]; 
0x00173eb8: and al, 0x28; push esi; call dword ptr [eax + 0xc]; 
0x000debed: and al, 0x28; test esi, esi; je 0xdec40; lea edx, [esp + 0x2c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000fec62: and al, 0x29; ret 0x5689; 
0x0018ab4f: and al, 0x29; ret; 
0x00178b3c: and al, 0x2c; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; sbb dword ptr [ecx + 0x65], -7; call dword ptr [eax + 0x6a]; 
0x0006461d: and al, 0x2c; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; jmp edx; 
0x0007158a: and al, 0x2c; and byte ptr [ecx + edx + 1], dh; ret; 
0x0010c79f: and al, 0x2c; call 0x10dae0; add esp, 0x2c; ret; 
0x0011f699: and al, 0x2c; call 0x11f6e0; add esp, 0x2c; ret; 
0x001245d7: and al, 0x2c; call 0x1244e0; add esp, 0x28; pop ebx; ret; 
0x0012476f: and al, 0x2c; call 0x1245f0; add esp, 0x28; pop ebx; ret; 
0x0013915b: and al, 0x2c; call 0x138f30; add esp, 0x28; pop ebx; ret; 
0x00143a11: and al, 0x2c; call 0x142f10; add esp, 0x2c; ret; 
0x00143b37: and al, 0x2c; call 0x143a40; add esp, 0x2c; ret; 
0x001442df: and al, 0x2c; call 0x143d10; add esp, 0x2c; ret; 
0x00192ddd: and al, 0x2c; call 0x161950; neg eax; sbb eax, eax; add esp, 0x2c; ret; 
0x001627c6: and al, 0x2c; call 0x163050; add esp, 0x20; add esp, 8; pop ebx; ret; 
0x00192e9d: and al, 0x2c; call 0x164410; neg eax; sbb eax, eax; add esp, 0x2c; ret; 
0x00179139: and al, 0x2c; call 0x178f70; add esp, 0x2c; ret; 
0x00188941: and al, 0x2c; call 0x1887e0; add esp, 0x28; pop ebx; ret; 
0x00034e97: and al, 0x2c; call 0x35b80; add esp, 0x2c; ret; 
0x000364e7: and al, 0x2c; call 0x364a0; add esp, 0x2c; ret; 
0x00041897: and al, 0x2c; call 0x41450; add esp, 0x2c; ret; 
0x00043415: and al, 0x2c; call 0x43440; add esp, 0x2c; ret; 
0x0004d761: and al, 0x2c; call 0x4d800; add esp, 0x2c; ret; 
0x00051521: and al, 0x2c; call 0x515c0; add esp, 0x2c; ret; 
0x00051f01: and al, 0x2c; call 0x51fa0; add esp, 0x2c; ret; 
0x000525e1: and al, 0x2c; call 0x52680; add esp, 0x2c; ret; 
0x0007d25b: and al, 0x2c; call 0x7d080; add esp, 0x2c; ret; 
0x00061479: and al, 0x2c; call 0x7ea40; add esp, 0x2c; ret; 
0x0007fbf7: and al, 0x2c; call 0x7fa20; add esp, 0x28; pop ebx; ret; 
0x00080643: and al, 0x2c; call 0x80560; add esp, 0x28; pop ebx; ret; 
0x0008046b: and al, 0x2c; call 0x80560; add esp, 0x2c; ret; 
0x0006144b: and al, 0x2c; call 0x85aa0; add esp, 0x2c; ret; 
0x0008bb4f: and al, 0x2c; call 0x8ba70; add esp, 0x28; pop ebx; ret; 
0x00090f45: and al, 0x2c; call 0x94be0; add esp, 0x20; add esp, 0xc; ret; 
0x00094bb3: and al, 0x2c; call 0x94be0; add esp, 0x2c; ret; 
0x0009f7a7: and al, 0x2c; call 0x9faa0; add esp, 0x2c; ret; 
0x0009f7d7: and al, 0x2c; call 0x9fd70; add esp, 0x2c; ret; 
0x000c45cc: and al, 0x2c; call 0xc45e0; add esp, 0x2c; ret; 
0x000cd6e1: and al, 0x2c; call 0xcd770; add esp, 0x2c; ret; 
0x000d1061: and al, 0x2c; call 0xd10f0; add esp, 0x2c; ret; 
0x000d1971: and al, 0x2c; call 0xd1a00; add esp, 0x2c; ret; 
0x000d2081: and al, 0x2c; call 0xd2110; add esp, 0x2c; ret; 
0x000df76d: and al, 0x2c; call 0xdf870; add esp, 0x2c; ret; 
0x000e2b5f: and al, 0x2c; call 0xe4f30; add esp, 0x2c; ret; 
0x000e2b9f: and al, 0x2c; call 0xe73f0; add esp, 0x2c; ret; 
0x000f09ad: and al, 0x2c; call 0xf01d0; add esp, 0x28; pop ebx; ret; 
0x000f08e5: and al, 0x2c; call 0xf0830; add esp, 0x28; pop ebx; ret; 
0x001628dd: and al, 0x2c; call eax; 
0x00129f7e: and al, 0x2c; lea eax, [ebx - 1]; cmp eax, 2; jbe 0x129fb0; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x000a0011: and al, 0x2c; mov dword ptr [esp + 0x34], 4; call dword ptr gs:[0x10]; 
0x000a047b: and al, 0x2c; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x00115d64: and al, 0x2c; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x001300ac: and al, 0x2c; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x000deab6: and al, 0x2c; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0009db61: and al, 0x2c; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x001315fc: and al, 0x2c; mov eax, dword ptr [esp + 0x68]; mov dword ptr [esp + 0x30], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0009a52a: and al, 0x2c; mov eax, dword ptr [esp + 0xc8]; mov dword ptr [esp + 0x30], eax; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x0003dc91: and al, 0x2c; mov edi, edx; xor edx, edx; mov ecx, edi; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x00122ba8: and al, 0x2c; mov esi, dword ptr [esp + 0x44]; mov ebx, dword ptr [esp + 0x40]; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x001303ca: and al, 0x2c; push -0x64; call 0x11f6e0; add esp, 0x20; add esp, 0xc; ret; 
0x000c4112: and al, 0x2c; push dword ptr [edi]; mov eax, dword ptr [esp + 0x38]; call eax; 
0x0010db6b: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x10dae0; add esp, 0x2c; ret; 
0x0011f695: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x11f6e0; add esp, 0x2c; ret; 
0x001245d3: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x1244e0; add esp, 0x28; pop ebx; ret; 
0x0012476b: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x1245f0; add esp, 0x28; pop ebx; ret; 
0x00139157: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x138f30; add esp, 0x28; pop ebx; ret; 
0x00143b33: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x143a40; add esp, 0x2c; ret; 
0x001442db: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x143d10; add esp, 0x2c; ret; 
0x00179135: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x178f70; add esp, 0x2c; ret; 
0x00034e93: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x35b80; add esp, 0x2c; ret; 
0x000364e3: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x364a0; add esp, 0x2c; ret; 
0x00041893: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x41450; add esp, 0x2c; ret; 
0x000466cb: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x43440; add esp, 0x2c; ret; 
0x0004d75d: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x4d800; add esp, 0x2c; ret; 
0x0005151d: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x515c0; add esp, 0x2c; ret; 
0x00051efd: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x51fa0; add esp, 0x2c; ret; 
0x000525dd: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x52680; add esp, 0x2c; ret; 
0x0007d257: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x7d080; add esp, 0x2c; ret; 
0x0007fbf3: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x7fa20; add esp, 0x28; pop ebx; ret; 
0x0008063f: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x80560; add esp, 0x28; pop ebx; ret; 
0x00080467: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x80560; add esp, 0x2c; ret; 
0x0008bb4b: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x8ba70; add esp, 0x28; pop ebx; ret; 
0x00090f41: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x94be0; add esp, 0x20; add esp, 0xc; ret; 
0x00094baf: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x94be0; add esp, 0x2c; ret; 
0x0009f7a3: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x9faa0; add esp, 0x2c; ret; 
0x0009f7d3: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x9fd70; add esp, 0x2c; ret; 
0x000c45c8: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xc45e0; add esp, 0x2c; ret; 
0x000cd71b: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xcd770; add esp, 0x2c; ret; 
0x000d109b: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xd10f0; add esp, 0x2c; ret; 
0x000d19ab: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xd1a00; add esp, 0x2c; ret; 
0x000d20bb: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xd2110; add esp, 0x2c; ret; 
0x000df769: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xdf870; add esp, 0x2c; ret; 
0x000e2b5b: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xe4f30; add esp, 0x2c; ret; 
0x000f09a9: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xf01d0; add esp, 0x28; pop ebx; ret; 
0x000f08e1: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xf0830; add esp, 0x28; pop ebx; ret; 
0x0010db67: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x10dae0; add esp, 0x2c; ret; 
0x00143b2f: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x143a40; add esp, 0x2c; ret; 
0x001442d7: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x143d10; add esp, 0x2c; ret; 
0x00179131: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x178f70; add esp, 0x2c; ret; 
0x000364b3: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x35b80; add esp, 0x2c; ret; 
0x000364df: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x364a0; add esp, 0x2c; ret; 
0x0004188f: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x41450; add esp, 0x2c; ret; 
0x000466c7: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x43440; add esp, 0x2c; ret; 
0x0004d759: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x4d800; add esp, 0x2c; ret; 
0x00051519: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x515c0; add esp, 0x2c; ret; 
0x00051ef9: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x51fa0; add esp, 0x2c; ret; 
0x000525d9: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x52680; add esp, 0x2c; ret; 
0x0007d253: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x7d080; add esp, 0x2c; ret; 
0x00080463: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x80560; add esp, 0x2c; ret; 
0x0009f79f: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x9faa0; add esp, 0x2c; ret; 
0x0009f7cf: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x9fd70; add esp, 0x2c; ret; 
0x000c45c4: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xc45e0; add esp, 0x2c; ret; 
0x000cd717: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xcd770; add esp, 0x2c; ret; 
0x000d1097: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xd10f0; add esp, 0x2c; ret; 
0x000d19a7: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xd1a00; add esp, 0x2c; ret; 
0x000d20b7: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xd2110; add esp, 0x2c; ret; 
0x000df765: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xdf870; add esp, 0x2c; ret; 
0x000e2b57: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xe4f30; add esp, 0x2c; ret; 
0x000c6939: and al, 0x2c; push dword ptr [esp + 0x38]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x000c4489: and al, 0x2c; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x0008dff6: and al, 0x2c; push dword ptr [esp + 0x3c]; push ecx; push dword ptr [esp + 0x3c]; call eax; 
0x00143a0c: and al, 0x2c; push eax; push dword ptr [esp + 0x2c]; call 0x142f10; add esp, 0x2c; ret; 
0x00089ccf: and al, 0x2c; push ebp; push edi; push ebx; call dword ptr [esi + 0x40]; 
0x00179043: and al, 0x2c; push ebp; push esi; push 3; push edi; call dword ptr [eax]; 
0x0009a6dd: and al, 0x2c; push edx; call 0x94be0; add esp, 0x20; add esp, 0xc; ret; 
0x0008e341: and al, 0x2c; push edx; push ecx; push edi; call eax; 
0x001215cd: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0x1215dd; add esp, 0x38; pop ebx; ret; 
0x0012164d: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0x12165d; add esp, 0x38; pop ebx; ret; 
0x00124f62: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0x124f72; add esp, 0x38; pop ebx; ret; 
0x0012d1e0: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0x12d1ef; add esp, 0x3c; ret; 
0x0009c241: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0x9c297; add esp, 0x38; pop ebx; ret; 
0x000a0389: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0xa0399; add esp, 0x38; pop ebx; ret; 
0x000da753: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0xda763; add esp, 0x38; pop ebx; ret; 
0x000dc052: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0xdc078; add esp, 0x38; pop ebx; ret; 
0x000b9eae: and al, 0x2f; adc dword ptr [eax], eax; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00176719: and al, 0x30; add al, 0; add al, ch; sbb eax, 0x8900002c; ret; 
0x000701f5: and al, 0x30; add byte ptr [eax], al; add byte ptr [eax], al; jmp ebx; 
0x000718a6: and al, 0x30; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x000704ad: and al, 0x30; add dword ptr [eax], eax; add byte ptr [eax], al; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x0003bb7d: and al, 0x30; add esp, 0x40; pop ebx; pop esi; pop edi; ret; 
0x0012e227: and al, 0x30; call 0x12e180; add esp, 0x2c; ret; 
0x0015a43c: and al, 0x30; lea eax, [esp + 0x48]; push eax; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x40]; call esi; 
0x0007c144: and al, 0x30; lea ecx, [esp + 0x10]; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x000de91a: and al, 0x30; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00131f02: and al, 0x30; mov dword ptr [esp], eax; mov eax, dword ptr [esp + 0x38]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0011f79b: and al, 0x30; mov eax, 0x127; mov ebx, 0xffffff9c; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0011f8a1: and al, 0x30; mov eax, 0x127; mov ebx, 0xffffff9c; mov edx, edi; call dword ptr gs:[0x10]; 
0x0009a535: and al, 0x30; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x00131604: and al, 0x30; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012b71e: and al, 0x30; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x0012b67e: and al, 0x30; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x0010c29e: and al, 0x30; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x0010c443: and al, 0x30; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x0010c393: and al, 0x30; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x0010c50b: and al, 0x30; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x0010c1fb: and al, 0x30; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x00115466: and al, 0x30; mov eax, 0xdd; mov ecx, esi; mov edx, ebp; call dword ptr gs:[0x10]; 
0x000db591: and al, 0x30; mov eax, dword ptr [esp + 0x64]; call eax; 
0x00129a37: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x0012a367: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000fb707: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000fb8c7: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x0012ec42: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x100; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0010e8b3: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x11c; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0011fa3b: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x127; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0011fb41: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x127; mov edx, edi; call dword ptr gs:[0x10]; 
0x0012fce2: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x13b; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x001302e2: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x13c; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00129a0a: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14d; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00129712: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14d; mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0012a33a: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14e; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0012a042: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14e; mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x00132102: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x159; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000fb6db: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb4; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000fb89b: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb5; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0011fa77: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0011fb77: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0012fdcb: and al, 0x30; mov ecx, edx; call dword ptr gs:[0x10]; 
0x001154a7: and al, 0x30; mov ecx, esi; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0011f4c2: and al, 0x30; mov edi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00192a00: and al, 0x30; mov edx, dword ptr [esp + 0x34]; lea edi, [esp + 8]; mov eax, 0x75; mov ebx, 3; call dword ptr gs:[0x10]; 
0x00133611: and al, 0x30; mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x0011f7dc: and al, 0x30; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0011f8dc: and al, 0x30; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00064882: and al, 0x30; movzx edx, byte ptr [esi + eax - 0x20]; mov esi, dword ptr [esp + 0x20]; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [esi + edx*4 - 0x73e94]; jmp eax; 
0x00025d51: and al, 0x30; push dword ptr [ebx + 4]; call edi; 
0x0011b83c: and al, 0x30; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x0011bbe1: and al, 0x30; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x0015c55f: and al, 0x30; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x3c]; call esi; 
0x0018be9e: and al, 0x30; push dword ptr [esp + 0x30]; push esi; call dword ptr [ebx + 0x40]; 
0x000c46f8: and al, 0x30; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x0015c563: and al, 0x30; push dword ptr [esp + 0x3c]; call esi; 
0x0008e168: and al, 0x30; push dword ptr [esp + 0x3c]; push ecx; call eax; 
0x000db3f8: and al, 0x30; push eax; mov eax, dword ptr [esp + 0x64]; call eax; 
0x0013dcea: and al, 0x30; push edx; push dword ptr [esp + 0x2c]; call 0x7ea40; add esp, 0x2c; ret; 
0x0008e240: and al, 0x30; push edx; push ecx; call eax; 
0x00173ed4: and al, 0x30; push esi; call dword ptr [eax + 4]; 
0x0018bea2: and al, 0x30; push esi; call dword ptr [ebx + 0x40]; 
0x0005b799: and al, 0x31; ret; 
0x00130e7f: and al, 0x31; shr byte ptr [edx], 0x8d; xchg esp, edi; movsd dword ptr es:[edi], dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x000a0015: and al, 0x34; add al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00071916: and al, 0x34; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x00070d6d: and al, 0x34; add dword ptr [eax], eax; add byte ptr [eax], al; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x000db523: and al, 0x34; add dword ptr [eax], eax; add byte ptr [ecx], bl; fimul dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0x8902; 
0x0015dbae: and al, 0x34; add dword ptr [ebx - 0x6bf09f02], eax; ret 0x4489; 
0x001328e8: and al, 0x34; call dword ptr gs:[0x10]; 
0x0002f152: and al, 0x34; call eax; 
0x0008d17d: and al, 0x34; dec dword ptr [edi]; xchg esp, eax; ret; 
0x001316b0: and al, 0x34; lea eax, [esp + 0x24]; mov dword ptr [esp + 0x38], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00192a04: and al, 0x34; lea edi, [esp + 8]; mov eax, 0x75; mov ebx, 3; call dword ptr gs:[0x10]; 
0x00131743: and al, 0x34; mov dword ptr [esp + 0x38], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00132918: and al, 0x34; mov dword ptr [esp + 8], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00129a3b: and al, 0x34; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x0012a36b: and al, 0x34; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000fb70b: and al, 0x34; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000fb8cb: and al, 0x34; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x0012ec46: and al, 0x34; mov eax, 0x100; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0010e8b7: and al, 0x34; mov eax, 0x11c; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0011fa3f: and al, 0x34; mov eax, 0x127; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0011fb45: and al, 0x34; mov eax, 0x127; mov edx, edi; call dword ptr gs:[0x10]; 
0x0012fce6: and al, 0x34; mov eax, 0x13b; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x001302e6: and al, 0x34; mov eax, 0x13c; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00129a0e: and al, 0x34; mov eax, 0x14d; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00129716: and al, 0x34; mov eax, 0x14d; mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0012a33e: and al, 0x34; mov eax, 0x14e; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0012a046: and al, 0x34; mov eax, 0x14e; mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x00132106: and al, 0x34; mov eax, 0x159; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000fb6df: and al, 0x34; mov eax, 0xb4; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000fb89f: and al, 0x34; mov eax, 0xb5; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000de916: and al, 0x34; mov ebx, dword ptr [esp + 0x30]; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012fdc7: and al, 0x34; mov ebx, dword ptr [esp + 0x30]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0011f4ba: and al, 0x34; mov ecx, dword ptr [esp + 0x38]; mov ebx, dword ptr [esp + 0x30]; mov edi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0012ec7b: and al, 0x34; mov edi, eax; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x0012fd1b: and al, 0x34; mov edi, eax; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x0013031b: and al, 0x34; mov edi, eax; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x0013213b: and al, 0x34; mov edi, eax; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x001798b4: and al, 0x34; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x0011fa7b: and al, 0x34; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0011fb7b: and al, 0x34; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000c4819: and al, 0x34; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x0015a445: and al, 0x34; push dword ptr [esp + 0x40]; call esi; 
0x000c6ccd: and al, 0x34; push dword ptr [esp + 0x40]; push ebp; call esi; 
0x00083de5: and al, 0x34; push eax; call ebx; 
0x000d4550: and al, 0x34; push eax; push dword ptr [esi + 8]; call ebx; 
0x000c43d0: and al, 0x34; push eax; push ebp; call esi; 
0x0013e098: and al, 0x34; push edx; push dword ptr [esp + 0x2c]; call 0x80560; add esp, 0x2c; ret; 
0x0013dc98: and al, 0x34; push edx; push dword ptr [esp + 0x2c]; call 0x85aa0; add esp, 0x2c; ret; 
0x0016fc5e: and al, 0x34; push esi; push ecx; push 5; push ebx; call dword ptr [eax]; 
0x000e6e76: and al, 0x38; add al, 0x8b; je 0xe6ea0; cmp byte ptr [ecx], ch; ret 0xc889; 
0x000658d2: and al, 0x38; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; jmp edx; 
0x000fb6e8: and al, 0x38; call dword ptr gs:[0x10]; 
0x000c4118: and al, 0x38; call eax; 
0x00132768: and al, 0x38; mov dword ptr [esp + 0x14], eax; mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001313c0: and al, 0x38; mov dword ptr [esp + 0xc], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00131f09: and al, 0x38; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00129a43: and al, 0x38; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x0012a373: and al, 0x38; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x001316b8: and al, 0x38; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001328d6: and al, 0x38; mov eax, 0x75; mov ebx, 0xb; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x000fb713: and al, 0x38; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000fb8d3: and al, 0x38; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x0008de62: and al, 0x38; mov eax, dword ptr [eax + 0x1c]; add esp, 0x24; pop ebx; pop esi; jmp eax; 
0x0011f4be: and al, 0x38; mov ebx, dword ptr [esp + 0x30]; mov edi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00121785: and al, 0x38; mov ebx, dword ptr [esp + 0x60]; mov esi, dword ptr [esp + 0x6c]; mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00133615: and al, 0x38; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x00120f58: and al, 0x38; mov edi, dword ptr [esp + 0x40]; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0012971f: and al, 0x38; mov edi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0012974f: and al, 0x38; mov edi, dword ptr [esp + 4]; mov dword ptr [esp + 0xc], eax; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x0012a07f: and al, 0x38; mov edi, dword ptr [esp + 4]; mov dword ptr [esp + 0xc], eax; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x0009db5b: and al, 0x38; mov edx, ebp; mov dword ptr [esp + 0x2c], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0010e8c0: and al, 0x38; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0010e8f1: and al, 0x38; mov esi, dword ptr [esp + 0x3c]; mov dword ptr [esp + 8], eax; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x0012ec81: and al, 0x38; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x0012fd21: and al, 0x38; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x00130321: and al, 0x38; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x00132141: and al, 0x38; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x0008b8d2: and al, 0x38; push 0; push ebp; push edi; push ebx; call dword ptr [esi + 0x24]; 
0x0016b6bd: and al, 0x38; push 2; push dword ptr [esp + 0x3c]; call 0x16b4f0; add esp, 0x3c; ret; 
0x000c693d: and al, 0x38; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x00087cda: and al, 0x38; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x00087964: and al, 0x38; push ebp; call dword ptr [eax + 0x1c]; 
0x000c4491: and al, 0x38; push ebp; call esi; 
0x0007f9f5: and al, 0x38; push edi; call dword ptr [eax + 0x1c]; 
0x00179eae: and al, 0x38; push edx; call dword ptr [eax + 0xc]; 
0x000c410d: and al, 0x38; push edx; push dword ptr [esp + 0x2c]; push dword ptr [edi]; mov eax, dword ptr [esp + 0x38]; call eax; 
0x0018bd2d: and al, 0x38; push edx; push esi; call dword ptr [eax + 0x48]; 
0x00173f06: and al, 0x38; push esi; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x000d9722: and al, 0x39; dec edi; and al, 0x75; js 0xd9788; pop esi; ret; 
0x0017b3ae: and al, 0x39; ret 0x3574; 
0x0002a6a8: and al, 0x39; ret; 
0x0014c170: and al, 0x39; ror byte ptr [edi], 1; dec edi; ret 0x4189; 
0x000fee77: and al, 0x39; ror byte ptr [edi], 1; dec edi; ret 0x568b; 
0x0013be12: and al, 0x39; sal byte ptr [ebx + 9], 1; cmp dword ptr [eax + 4], ecx; jne 0x13be10; mov eax, dword ptr [eax + 0x18]; ret; 
0x000a216e: and al, 0x3a; add al, 0x74; sub eax, 0x8d04ec83; test dword ptr [eax + 0x42], ecx; stc; call dword ptr [eax + 0x53]; 
0x0010d2a1: and al, 0x3c; add al, byte ptr [eax]; add byte ptr [ecx + 0xac2484], cl; add byte ptr [eax], al; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x000706be: and al, 0x3c; add byte ptr [eax], al; add byte ptr [eax], al; jmp edx; 
0x000644e9: and al, 0x3c; add byte ptr [eax], al; add byte ptr [eax], al; mov edi, ecx; mov dword ptr [esp + 0x10], 0; jmp edx; 
0x000a6992: and al, 0x3c; add byte ptr [eax], al; add byte ptr [edi - 0x7d], dh; in al, dx; or byte ptr [ebp - 0x6bb997a], cl; call dword ptr [ebx + 0x50]; 
0x000718b6: and al, 0x3c; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x00065802: and al, 0x3c; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; jmp edx; 
0x00064499: and al, 0x3c; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; mov dword ptr [esp + 0x10], 1; jmp edx; 
0x000e8c68: and al, 0x3c; add dword ptr [eax], eax; add byte ptr [ebx + 0x164248c], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000a11f5: and al, 0x3c; add dword ptr [eax], eax; add byte ptr [ebx - 0x72c3dbbc], cl; and ah, 0x8a; stc; call dword ptr [eax + 0x6a]; 
0x00147f77: and al, 0x3c; call 0x147820; add esp, 0x3c; ret; 
0x0016b6c3: and al, 0x3c; call 0x16b4f0; add esp, 0x3c; ret; 
0x00177f97: and al, 0x3c; call 0x177ca0; add esp, 0x3c; ret; 
0x0010e8c4: and al, 0x3c; call dword ptr gs:[0x10]; 
0x0008dfff: and al, 0x3c; call eax; 
0x0015ff5f: and al, 0x3c; call ecx; 
0x0002f28a: and al, 0x3c; call edi; 
0x0015c567: and al, 0x3c; call esi; 
0x000a0739: and al, 0x3c; lea ecx, [ebp - 0x722d4]; call dword ptr gs:[0x10]; 
0x00132770: and al, 0x3c; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0010e8f5: and al, 0x3c; mov dword ptr [esp + 8], eax; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x0012ec85: and al, 0x3c; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x0012fd25: and al, 0x3c; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x00130325: and al, 0x3c; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x00132145: and al, 0x3c; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x0002f14e: and al, 0x3c; mov eax, dword ptr [esp + 0x34]; call eax; 
0x00120f60: and al, 0x3c; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x001328e4: and al, 0x3c; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x0012fed4: and al, 0x3c; mov esi, dword ptr [esp + 0x64]; mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00061978: and al, 0x3c; push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x34]; call eax; 
0x000c448d: and al, 0x3c; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x00147f73: and al, 0x3c; push dword ptr [esp + 0x3c]; call 0x147820; add esp, 0x3c; ret; 
0x0016b6f1: and al, 0x3c; push dword ptr [esp + 0x3c]; call 0x16b4f0; add esp, 0x3c; ret; 
0x00177f93: and al, 0x3c; push dword ptr [esp + 0x3c]; call 0x177ca0; add esp, 0x3c; ret; 
0x0002f286: and al, 0x3c; push dword ptr [esp + 0x3c]; call edi; 
0x0002f14a: and al, 0x3c; push dword ptr [esp + 0x3c]; mov eax, dword ptr [esp + 0x34]; call eax; 
0x00147f6f: and al, 0x3c; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x147820; add esp, 0x3c; ret; 
0x0016b6ed: and al, 0x3c; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x16b4f0; add esp, 0x3c; ret; 
0x00177f8f: and al, 0x3c; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x177ca0; add esp, 0x3c; ret; 
0x0008a3ae: and al, 0x3c; push ebp; call dword ptr [esi + 0x20]; 
0x001783be: and al, 0x3c; push ebp; push edi; push esi; push eax; call dword ptr [edx]; 
0x0008e16c: and al, 0x3c; push ecx; call eax; 
0x000c4b46: and al, 0x3c; push ecx; lea ecx, [esp + 0x44]; push ecx; push dword ptr [edi + 8]; call ebx; 
0x0008dffa: and al, 0x3c; push ecx; push dword ptr [esp + 0x3c]; call eax; 
0x00179933: and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x179942; add esp, 0x4c; ret; 
0x001799a3: and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x1799b2; add esp, 0x4c; ret; 
0x00179a13: and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x179a22; add esp, 0x4c; ret; 
0x00179a76: and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x179a85; add esp, 0x4c; ret; 
0x00179ad6: and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x179ae5; add esp, 0x4c; ret; 
0x00179b43: and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x179b52; add esp, 0x4c; ret; 
0x00179bc3: and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x179bd2; add esp, 0x4c; ret; 
0x0011f059: and al, 0x3c; sub edx, dword ptr gs:[0x14]; jne 0x11f06b; movzx eax, al; add esp, 0x4c; ret; 
0x001798c3: and al, 0x3c; sub edx, dword ptr gs:[0x14]; jne 0x1798d2; add esp, 0x4c; ret; 
0x000da7b5: and al, 0x3c; sub edx, dword ptr gs:[0x14]; jne 0xda7c5; add esp, 0x48; pop ebx; ret; 
0x0006586a: and al, 0x40; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; jmp edx; 
0x00024eea: and al, 0x40; call dword ptr [ebp]; 
0x00024e80: and al, 0x40; call ecx; 
0x00024e29: and al, 0x40; call esi; 
0x000e79d7: and al, 0x40; cmp dword ptr [ecx + 8], 0x3b9ac9ff; ja 0xe7a90; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x0010bfec: and al, 0x40; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00122bb0: and al, 0x40; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x00158cf8: and al, 0x40; mov dword ptr [edx], ebx; add esp, 0x28; pop ebx; ret; 
0x00131a2a: and al, 0x40; mov dword ptr [esp + 0x14], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001322b1: and al, 0x40; mov dword ptr [esp + 0x14], eax; mov eax, dword ptr [esp + 0x44]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00070cd9: and al, 0x40; mov dword ptr [esp + 4], ecx; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x0008fd64: and al, 0x40; mov eax, dword ptr [edi]; mov ebx, dword ptr [edi + 4]; mov ecx, dword ptr [edi + 8]; mov edx, dword ptr [edi + 0xc]; call dword ptr gs:[0x10]; 
0x000e767c: and al, 0x40; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0009fbfb: and al, 0x40; mov edx, dword ptr [esp + 0x48]; mov eax, 0x117; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x0009f933: and al, 0x40; mov edx, dword ptr [esp + 0x48]; mov eax, 0x118; mov ecx, ebp; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0009fb76: and al, 0x40; mov edx, dword ptr [esp + 0x48]; mov eax, 0x1a2; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x0009f8b0: and al, 0x40; mov edx, dword ptr [esp + 0x48]; mov eax, 0x1a3; mov ecx, ebp; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x00120f5c: and al, 0x40; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000c3de1: and al, 0x40; push dword ptr [eax]; call edi; 
0x00136feb: and al, 0x40; push dword ptr [esp + 0x20]; push esi; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x00024ee6: and al, 0x40; push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x00024e7c: and al, 0x40; push dword ptr [esp + 0x40]; call ecx; 
0x00024e25: and al, 0x40; push dword ptr [esp + 0x40]; call esi; 
0x000c3350: and al, 0x40; push eax; push dword ptr [edi]; call ebx; 
0x00083105: and al, 0x40; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x000c6cd1: and al, 0x40; push ebp; call esi; 
0x0016ef78: and al, 0x40; push ebp; push eax; call dword ptr [ecx + 8]; 
0x0009f5d7: and al, 0x44; add al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000605f0: and al, 0x44; add al, byte ptr [eax]; add byte ptr [ebp - 0x69c6a7d], cl; call dword ptr [eax + 0x68]; 
0x00065167: and al, 0x44; add byte ptr [eax], al; add byte ptr [eax], al; jmp edx; 
0x00065832: and al, 0x44; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; jmp edx; 
0x0015f7ba: and al, 0x44; call eax; 
0x00081ac3: and al, 0x44; dec dword ptr [edi]; xchg esp, eax; ret; 
0x000e6a17: and al, 0x44; dec edi; add byte ptr [eax], al; add cl, ch; ret 0xfffd; 
0x000e7373: and al, 0x44; inc ebp; add byte ptr [eax], al; add cl, ch; and edi, 0xffffffff; call dword ptr [ebx + 0x57]; 
0x001322b9: and al, 0x44; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012fb10: and al, 0x44; mov eax, 0xac; mov ebx, 0x53564d41; call dword ptr gs:[0x10]; 
0x000e79d3: and al, 0x44; mov ebx, dword ptr [esp + 0x40]; cmp dword ptr [ecx + 8], 0x3b9ac9ff; ja 0xe7a90; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x0010bfe8: and al, 0x44; mov ebx, dword ptr [esp + 0x40]; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00122bac: and al, 0x44; mov ebx, dword ptr [esp + 0x40]; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x000e7678: and al, 0x44; mov ebx, dword ptr [esp + 0x40]; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000c4ab6: and al, 0x44; push ecx; push dword ptr [edi + 8]; call ebx; 
0x000c3fd8: and al, 0x44; stc; call dword ptr [eax - 0x18]; 
0x0009356b: and al, 0x46; add byte ptr [esi + 8], bh; mov byte ptr [esp + 0x47], 0; mov dword ptr [esp + 8], edx; call dword ptr gs:[0x10]; 
0x000dd2fd: and al, 0x46; stc; call dword ptr [eax + 0x56]; 
0x00070b64: and al, 0x48; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x0006515d: and al, 0x48; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; mov dword ptr [esp + 0x44], 0; jmp edx; 
0x00150b77: and al, 0x48; add dword ptr [ebx + 0x3948244c], ecx; ret 0x830f; 
0x00150126: and al, 0x48; add dword ptr [ebx + 0x3948245c], ecx; ret; 
0x00150d9f: and al, 0x48; add dword ptr [ebx + 0x3948245c], ecx; sal dword ptr [ebx + 0x3f], 0x39; ret; 
0x00175e98: and al, 0x48; call dword ptr [eax + 0x10]; 
0x00175d3e: and al, 0x48; call dword ptr [eax + 0x14]; 
0x000285ee: and al, 0x48; call eax; 
0x0009fbff: and al, 0x48; mov eax, 0x117; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x0009f937: and al, 0x48; mov eax, 0x118; mov ecx, ebp; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0009fb7a: and al, 0x48; mov eax, 0x1a2; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x0009f8b4: and al, 0x48; mov eax, 0x1a3; mov ecx, ebp; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0016ff4c: and al, 0x48; mov eax, dword ptr [esi + 0x20]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0009fc53: and al, 0x48; mov ecx, ebp; mov dword ptr [esp + 0xc], eax; mov esi, dword ptr [esp + 0x4c]; mov eax, 0x117; call dword ptr gs:[0x10]; 
0x0009fc9b: and al, 0x48; mov ecx, ebp; mov dword ptr [esp + 0xc], eax; mov esi, dword ptr [esp + 0x4c]; mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x0009f98b: and al, 0x48; mov ecx, ebp; mov dword ptr [esp + 0xc], eax; mov esi, dword ptr [esp + 4]; mov eax, 0x118; call dword ptr gs:[0x10]; 
0x0009f9cb: and al, 0x48; mov ecx, ebp; mov dword ptr [esp + 0xc], eax; mov esi, dword ptr [esp + 4]; mov eax, 0x1a3; call dword ptr gs:[0x10]; 
0x00132a30: and al, 0x48; mov esi, dword ptr [esp + 0x50]; mov dword ptr [esp + 0x18], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x001329d1: and al, 0x48; mov esi, dword ptr [esp + 0x50]; mov ebx, 0xc; mov dword ptr [esp + 0x18], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0007e2f1: and al, 0x48; push 0; push ebp; push edi; push ebx; call dword ptr [esi + 0x24]; 
0x0015a135: and al, 0x48; push dword ptr [esp + 0x10]; call edi; 
0x0015a131: and al, 0x48; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x10]; call edi; 
0x0015a440: and al, 0x48; push eax; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x40]; call esi; 
0x001701b2: and al, 0x48; push esi; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0006532f: and al, 0x4c; add byte ptr [ecx], ch; retf 0x490f; ret 0x4489; 
0x001775c8: and al, 0x4c; add dword ptr [eax], eax; add byte ptr [edx + 0x57], dl; call dword ptr [eax + 4]; 
0x00044639: and al, 0x4c; add dword ptr [ebx + 0x394c2444], ecx; ret 0x8d0f; 
0x00064ba3: and al, 0x4c; add edi, dword ptr [eax + edx*4]; mov edx, edi; mov edi, ecx; jmp edx; 
0x0009fb85: and al, 0x4c; call dword ptr gs:[0x10]; 
0x00029d6c: and al, 0x4c; call eax; 
0x00070ab3: and al, 0x4c; mov dword ptr [esp + 4], ecx; jmp eax; 
0x00071998: and al, 0x4c; mov dword ptr [esp + 4], ecx; jmp edx; 
0x0009fc5d: and al, 0x4c; mov eax, 0x117; call dword ptr gs:[0x10]; 
0x0009fca5: and al, 0x4c; mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x001231d2: and al, 0x4c; mov edx, dword ptr [esp + 0x64]; mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x001229b9: and al, 0x4c; mov esi, dword ptr [esp + 0x78]; mov ebx, dword ptr [esp + 0x70]; lea edx, [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00170275: and al, 0x4c; push edi; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x00081f09: and al, 0x50; add dh, byte ptr [edx + ebx*4 - 0x17]; ret; 
0x0003c7e7: and al, 0x50; add dword ptr [eax], eax; add byte ptr [eax + 0xae], bh; mov esi, 8; lea edx, [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x0003c88a: and al, 0x50; add dword ptr [eax], eax; add byte ptr [eax + 0xae], bh; mov esi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0003752f: and al, 0x50; add dword ptr [ebx - 0x7ccfdbbc], ecx; ret; 
0x0006eef1: and al, 0x50; and byte ptr [edi], cl; test byte ptr [edi], ch; or dword ptr [eax], eax; add byte ptr [ecx], al; ret; 
0x0006f43b: and al, 0x50; and byte ptr [edi], cl; test ch, ah; add eax, dword ptr [eax]; add byte ptr [ecx], al; ret; 
0x00132a34: and al, 0x50; mov dword ptr [esp + 0x18], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0011528c: and al, 0x50; mov eax, 0xdd; mov ecx, esi; mov edx, edi; call dword ptr gs:[0x10]; 
0x0015f7b6: and al, 0x50; mov eax, dword ptr [esp + 0x44]; call eax; 
0x001329d5: and al, 0x50; mov ebx, 0xc; mov dword ptr [esp + 0x18], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00133432: and al, 0x50; mov ecx, dword ptr [esp + 8]; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x0011530f: and al, 0x50; mov ecx, esi; mov edx, edi; mov dword ptr [esp + 4], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0003e459: and al, 0x50; or byte ptr [eax], al; add byte ptr [ebx + 0x688d04ec], al; call dword ptr [ebp + 0x56]; 
0x0008e4ea: and al, 0x51; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0002c8be: and al, 0x54; call eax; 
0x0002a2e7: and al, 0x54; call esi; 
0x00120606: and al, 0x54; mov dword ptr [esp + 8], eax; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x001205ac: and al, 0x54; mov eax, 0x135; mov edi, 8; call dword ptr gs:[0x10]; 
0x00120531: and al, 0x54; mov eax, 0x19e; mov edi, 8; call dword ptr gs:[0x10]; 
0x00120648: and al, 0x54; mov edx, dword ptr [esp + 0xc]; mov dword ptr [esp + 8], eax; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x000e7cf0: and al, 0x54; mov edx, edi; call dword ptr gs:[0x10]; 
0x000e7d8f: and al, 0x54; mov edx, edi; mov dword ptr [esp + 0xc], eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x000e7d59: and al, 0x54; mov edx, edi; mov dword ptr [esp + 0xc], eax; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000e7c8d: and al, 0x54; mov edx, edi; mov esi, ebp; call dword ptr gs:[0x10]; 
0x0002a2e3: and al, 0x54; push dword ptr [esp + 0x54]; call esi; 
0x00029d64: and al, 0x54; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x000c3ddc: and al, 0x54; push ecx; mov eax, dword ptr [esp + 0x40]; push dword ptr [eax]; call edi; 
0x000db72c: and al, 0x55; push dword ptr [esp + 0x30]; mov eax, dword ptr [esp + 0x64]; call eax; 
0x0015d089: and al, 0x57; add byte ptr [eax - 0x73], dl; and dword ptr [edi + 0x5f], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00064742: and al, 0x58; add byte ptr [edi], cl; xchg esp, eax; ret 0x44c7; 
0x0002dc9e: and al, 0x58; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0002dc9a: and al, 0x58; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x00162ecb: and al, 0x58; push dword ptr [esp + 0x58]; push esi; call edi; 
0x000285e6: and al, 0x58; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00025d4c: and al, 0x58; push ebp; push dword ptr [esp + 0x30]; push dword ptr [ebx + 4]; call edi; 
0x00162ecf: and al, 0x58; push esi; call edi; 
0x0008de69: and al, 0x5b; pop esi; jmp eax; 
0x000dc134: and al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x0003d800: and al, 0x5b; pop esi; ret; 
0x0017027a: and al, 0x5c; call eax; 
0x001798b0: and al, 0x5c; mov dword ptr [esp + 0x34], edx; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x00029d68: and al, 0x5c; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0002c8ba: and al, 0x5c; mov eax, dword ptr [esp + 0x54]; call eax; 
0x00115f18: and al, 0x5c; mov esi, dword ptr [esp + 0x74]; mov ebx, dword ptr [esp + 0x70]; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x000285e2: and al, 0x5c; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0002c8b6: and al, 0x5c; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x0002913b: and al, 0x5c; push dword ptr [esp + 0x64]; call edi; 
0x00156306: and al, 0x5c; push ebx; push ebp; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0010e49e: and al, 0x5c; sub edx, dword ptr gs:[0x14]; jne 0x10e553; add esp, 0x68; pop ebx; ret; 
0x0012fedc: and al, 0x60; lea ecx, [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x001231da: and al, 0x60; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x000deab2: and al, 0x60; lea edx, [esp + 0x2c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x00132368: and al, 0x60; mov dword ptr [esp + 0x24], esi; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00179bb0: and al, 0x60; mov dword ptr [esp + 0x34], edx; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x0012f5fb: and al, 0x60; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x00174109: and al, 0x60; mov eax, dword ptr [ecx]; mov ecx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [ecx + 8]; 
0x000285ea: and al, 0x60; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0002ade2: and al, 0x60; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x001300a4: and al, 0x60; mov ecx, dword ptr [esp + 0x64]; lea esi, [esp + 0x2c]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x00130132: and al, 0x60; mov ecx, dword ptr [esp + 0x64]; mov eax, 0x145; mov esi, edi; call dword ptr gs:[0x10]; 
0x00130004: and al, 0x60; mov ecx, dword ptr [esp + 0x64]; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x000deb22: and al, 0x60; mov edx, dword ptr [esp + 0xc]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x00121789: and al, 0x60; mov esi, dword ptr [esp + 0x6c]; mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x001216c3: and al, 0x60; mov esi, dword ptr [esp + 0x6c]; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00029137: and al, 0x60; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; call edi; 
0x0002adde: and al, 0x60; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x000dad43: and al, 0x64; call eax; 
0x0002913f: and al, 0x64; call edi; 
0x000a0477: and al, 0x64; lea esi, [esp + 0x2c]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x001300a8: and al, 0x64; lea esi, [esp + 0x2c]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x001315f8: and al, 0x64; mov dword ptr [esp + 0x2c], eax; mov eax, dword ptr [esp + 0x68]; mov dword ptr [esp + 0x30], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000c6bb6: and al, 0x64; mov dword ptr [esp + 0x34], ecx; push eax; push ebp; call esi; 
0x000c43cc: and al, 0x64; mov dword ptr [esp + 0x34], edx; push eax; push ebp; call esi; 
0x00130136: and al, 0x64; mov eax, 0x145; mov esi, edi; call dword ptr gs:[0x10]; 
0x00130008: and al, 0x64; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x0002d0a7: and al, 0x64; mov eax, dword ptr [esp + 0x54]; call eax; 
0x0012fed8: and al, 0x64; mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x001231d6: and al, 0x64; mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x0012f5f7: and al, 0x64; mov ebx, dword ptr [esp + 0x60]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000a04ea: and al, 0x64; mov esi, dword ptr [esp + 4]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x000a03dc: and al, 0x64; mov esi, dword ptr [esp + 4]; mov eax, 0x199; call dword ptr gs:[0x10]; 
0x0015f7b2: and al, 0x64; push dword ptr [esp + 0x50]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x0002d0a3: and al, 0x64; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x0008e7e8: and al, 0x65; mov dword ptr [0x7c], edx; pop ebx; ret; 
0x0016335e: and al, 0x68; add byte ptr [eax + eax], al; add bh, bh; je 0x16338b; or al, 0x55; call edi; 
0x00131600: and al, 0x68; mov dword ptr [esp + 0x30], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012dd8d: and al, 0x68; mov eax, dword ptr [edx + 0xa0]; mov dword ptr [esp + 0x6c], eax; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x0002ba5f: and al, 0x6c; call edi; 
0x0012178d: and al, 0x6c; mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0012dd97: and al, 0x6c; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x001216c7: and al, 0x6c; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00140975: and al, 0x6c; mov eax, 6; call dword ptr gs:[0x10]; 
0x0002ba5b: and al, 0x6c; push dword ptr [esp + 0x6c]; call edi; 
0x00029d5f: and al, 0x6c; push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0002dc95: and al, 0x6c; push eax; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0002c8b1: and al, 0x6c; push eax; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x0005f670: and al, 0x6c; sub eax, dword ptr gs:[0x14]; jne 0x5f68e; add esp, 0x78; pop ebx; ret; 
0x00113543: and al, 0x6c; sub edx, dword ptr gs:[0x14]; jne 0x113566; add esp, 0x78; pop ebx; ret; 
0x00132893: and al, 0x6c; sub edx, dword ptr gs:[0x14]; jne 0x1328a2; add esp, 0x7c; ret; 
0x0006163e: and al, 0x6c; sub edx, dword ptr gs:[0x14]; jne 0x6164e; add esp, 0x78; pop ebx; ret; 
0x000f0d73: and al, 0x6c; sub edx, dword ptr gs:[0x14]; jne 0xf0d96; add esp, 0x78; pop ebx; ret; 
0x000f38b3: and al, 0x6c; sub edx, dword ptr gs:[0x14]; jne 0xf38d6; add esp, 0x78; pop ebx; ret; 
0x000f46b3: and al, 0x6c; sub edx, dword ptr gs:[0x14]; jne 0xf46d6; add esp, 0x78; pop ebx; ret; 
0x000f71e3: and al, 0x6c; sub edx, dword ptr gs:[0x14]; jne 0xf7206; add esp, 0x78; pop ebx; ret; 
0x000f7ff3: and al, 0x6c; sub edx, dword ptr gs:[0x14]; jne 0xf8016; add esp, 0x78; pop ebx; ret; 
0x001229c1: and al, 0x70; lea edx, [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00115f20: and al, 0x70; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x0002a2de: and al, 0x70; push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x54]; call esi; 
0x0002c43f: and al, 0x72; stc; call dword ptr [eax - 0x73]; 
0x00122a37: and al, 0x74; lea ecx, [eax + 0x5402]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00115f1c: and al, 0x74; mov ebx, dword ptr [esp + 0x70]; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x0016f290: and al, 0x74; push eax; call dword ptr [ecx]; 
0x0003dc30: and al, 0x75; fmul qword ptr [ecx + 0x5f5e5bd8]; ret; 
0x000d9725: and al, 0x75; js 0xd9788; pop esi; ret; 
0x001229bd: and al, 0x78; mov ebx, dword ptr [esp + 0x70]; lea edx, [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0002f281: and al, 0x78; push eax; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call edi; 
0x0013cd65: and al, 0x79; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0005df45: and al, 0x7b; stc; call dword ptr [eax - 0x18]; 
0x000d03bc: and al, 0x7c; sbb eax, dword ptr [eax]; add byte ptr [ebx - 0x6bf0fe01], al; ret 0xeb39; 
0x000490ac: and al, 0x80; add al, byte ptr [eax]; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x20e9; 
0x0004838c: and al, 0x80; add al, byte ptr [eax]; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x8d2e; 
0x001b27bf: and al, 0x80; add byte ptr [eax], al; add bh, dh; ret; 
0x0015e7cc: and al, 0x80; add byte ptr [eax], al; add byte ptr [ebp + 0x2d880fd2], al; or byte ptr [eax], al; add byte ptr [esi - 0x3f], ah; ret 0xf08; 
0x001b4409: and al, 0x80; add byte ptr [eax], al; add byte ptr [ecx + 0x100000e1], al; add byte ptr [ecx - 0x9f7dbbc], cl; ret 0xf07; 
0x001b3239: and al, 0x80; add byte ptr [eax], al; add cl, ch; ret; 
0x001b2d0b: and al, 0x80; add byte ptr [eax], al; add dh, dh; ret 0x7407; 
0x00033880: and al, 0x81; les ebp, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x001467f6: and al, 0x81; les ebx, ptr [esp + ecx]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00063489: and al, 0x83; add byte ptr [eax], al; add byte ptr [ecx], al; ret; 
0x00143bdc: and al, 0x83; in al, dx; add al, 0x8d; test dword ptr [ebp + 0x30], ecx; stc; call dword ptr [eax - 0x77]; 
0x0016ef72: and al, 0x83; in al, dx; or byte ptr [ebp + 0x5540246c], cl; push eax; call dword ptr [ecx + 8]; 
0x00173ee8: and al, 0x83; in al, dx; or byte ptr [ebx + 0x20508b00], cl; push esi; push eax; call dword ptr [edx + 4]; 
0x0016ef8e: and al, 0x83; in al, dx; or byte ptr [ebx + 0x50552048], cl; call dword ptr [ecx + 8]; 
0x0013ac7b: and al, 0x83; in al, dx; or byte ptr [ebx - 1], dl; jae 0x13acb3; call eax; 
0x000d0825: and al, 0x83; jmp dword ptr [eax]; 
0x000e830d: and al, 0x83; jmp dword ptr [ebx + 0x77]; 
0x00039fe2: and al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0002a75b: and al, 0x83; les ebp, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; jmp eax; 
0x00055bd0: and al, 0x83; les ebp, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x0008b8db: and al, 0x83; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x001825d3: and al, 0x83; les ebx, ptr [eax]; pop ebx; ret; 
0x0002cbc9: and al, 0x83; les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; jmp eax; 
0x0007e06d: and al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; jmp eax; 
0x0007a01a: and al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000dd01b: and al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0003bf94: and al, 0x83; les ecx, ptr [eax]; ret; 
0x0003f974: and al, 0x83; les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x0013efa9: and al, 0x83; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00138c68: and al, 0x83; les ecx, ptr [ecx + ecx*4]; ret; 
0x0002d5bd: and al, 0x83; les edi, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; jmp eax; 
0x0007e2fa: and al, 0x83; les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000dcfa7: and al, 0x83; les edx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0011e5b6: and al, 0x83; les esi, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0013133c: and al, 0x83; les esp, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x00149a9b: and al, 0x83; ret 0x8830; 
0x001752ed: and al, 0x83; ret 0x8b18; 
0x0014a0c2: and al, 0x83; ret 0x8d01; 
0x000d2955: and al, 0x83; ret; 
0x000819a9: and al, 0x83; stc; call dword ptr [eax - 0x73]; 
0x0012eea2: and al, 0x84; add byte ptr [eax], al; add byte ptr [eax + 0x6c], bh; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0012ee65: and al, 0x84; add byte ptr [eax], al; add byte ptr [ebp - 0x47f3dbb4], cl; lds eax, ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001513c1: and al, 0x84; add byte ptr [eax], al; add byte ptr [ebp - 0x6a4117d], cl; call dword ptr [eax - 0x73]; 
0x0013307c: and al, 0x84; add byte ptr [eax], al; add byte ptr [ebx + 3], bh; mov dword ptr [esp + 0x18], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x001adc2d: and al, 0x84; add byte ptr [eax], al; add byte ptr [ebx - 0x7ce7dba4], cl; ret; 
0x00169614: and al, 0x84; ror byte ptr [edi], 0x95; ret 0x3a3c; 
0x001b3633: and al, 0x85; sal byte ptr [ebp - 0x70], 0x89; ret 0xc589; 
0x0016e7e4: and al, 0x88; add al, 0; add byte ptr [ebp - 0x69d6a7d], cl; call dword ptr [eax - 0x18]; 
0x0010e6fe: and al, 0x88; add byte ptr [eax], al; add byte ptr [eax + 0x72], bh; mov ebx, dword ptr [esp + 0x80]; call dword ptr gs:[0x10]; 
0x00150477: and al, 0x88; add byte ptr [eax], al; add byte ptr [ebx + 0x1008b11], cl; ret 0x5052; 
0x001b4fcf: and al, 0x88; add byte ptr [eax], al; add byte ptr [ebx - 0x76f7dbbc], cl; ret 0x8489; 
0x001211c2: and al, 0x88; add dword ptr [eax], eax; add byte ptr [ebx + 0x518d0cc4], al; call dword ptr [edx + 0x56]; 
0x00141801: and al, 0x89; adc dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x00090501: and al, 0x89; add al, byte ptr [ebx - 0x3fcee73c]; pop ebx; ret; 
0x0013f651: and al, 0x89; call 0x231a0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0013ef91: and al, 0x89; call 0x8324f420; ret 0x8d01; 
0x0012c413: and al, 0x89; clc; pop ebx; pop esi; pop edi; ret; 
0x0013133f: and al, 0x89; fcomp dword ptr [ebx + 0x5e]; ret; 
0x0015f947: and al, 0x89; fisubr dword ptr [ecx]; ret 0xca39; 
0x0011562d: and al, 0x89; inc edx; sub byte ptr [esi + 0x5f], bl; ret; 
0x0013236d: and al, 0x89; inc esp; and al, 0x28; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001316b5: and al, 0x89; inc esp; and al, 0x38; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000551de: and al, 0x89; inc esp; and al, 4; fld xword ptr [esp]; add esp, 0x1c; ret; 
0x00131851: and al, 0x89; inc esp; and al, 8; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00103f28: and al, 0x89; jl 0x103f50; adc al, 0xeb; or dword ptr [eax + 0x2cd1d201], edx; and al, 0x83; ret; 
0x00033a88: and al, 0x89; or al, 0xb0; mov eax, dword ptr [ebx + esi*4 - 0x814]; test eax, eax; je 0x33a99; call eax; 
0x0008ae36: and al, 0x89; push eax; add al, 0x5b; ret; 
0x0012b414: and al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0005a201: and al, 0x89; ret 0x13eb; 
0x0017349f: and al, 0x89; ret 0x1beb; 
0x0009d06b: and al, 0x89; ret 0x4c89; 
0x001149ec: and al, 0x89; ret 0x8b8; 
0x000953bf: and al, 0x89; ret 0xd5e9; 
0x00091113: and al, 0x89; ret 0xe183; 
0x0009187c: and al, 0x89; ret 0xe283; 
0x0002c3b0: and al, 0x89; ret 0xf229; 
0x0003562f: and al, 0x89; ret; 
0x00152fcc: and al, 0x89; sti; call 0x231a0; mov dword ptr [esp], ebp; call esi; 
0x00034585: and al, 0x8b; add al, 0x90; ret; 
0x000fd2e3: and al, 0x8b; inc eax; xor byte ptr [ecx], bh; ret; 
0x0010a87a: and al, 0x8b; inc ebp; sub al, 0x39; sal byte ptr [esi + ecx - 0x77], 1; ret 0xf189; 
0x0010a88f: and al, 0x8b; inc ebp; xor byte ptr [ecx], bh; sal byte ptr [ebx + ecx - 0x77], 1; ret 0xf189; 
0x001548b3: and al, 0x8b; inc esp; and al, 0x24; call eax; 
0x001628da: and al, 0x8b; inc esp; and al, 0x2c; call eax; 
0x00131f06: and al, 0x8b; inc esp; and al, 0x38; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00122a34: and al, 0x8b; inc esp; and al, 0x74; lea ecx, [eax + 0x5402]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00048fe8: and al, 0x8b; mov word ptr [esp + ebx*4], fs; add byte ptr [eax], al; add byte ptr [ebx - 0x7ca7dba4], cl; ret 0xf7ff; 
0x0010bef8: and al, 0x8b; pop esp; and al, 0x20; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0017991e: and al, 0x8b; push eax; sub byte ptr [ecx - 0x74d7dbac], cl; push eax; or byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x00034636: and al, 0x8b; test byte ptr [eax + 0x200], dl; ret; 
0x0015a046: and al, 0x8b; test byte ptr [eax + edx*4], ah; add al, 0; add byte ptr [ecx - 0x76cbdbbc], cl; ret; 
0x001b0677: and al, 0x8c; add byte ptr [eax], al; add bh, dh; ret 0; 
0x001aed57: and al, 0x8c; add byte ptr [eax], al; add byte ptr [ecx - 0x16f7dbbc], cl; ret; 
0x00055af6: and al, 0x8c; add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ror byte ptr [edi], 0x95; ret; 
0x00115b6e: and al, 0x8c; add dword ptr [eax], eax; add byte ptr [ebx + 0x1b824ac], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0005079a: and al, 0x8c; sbb eax, dword ptr [eax]; add byte ptr [ebx - 0x6bf0fe01], al; ret 0xeb39; 
0x0004f475: and al, 0x8c; sbb eax, dword ptr [eax]; add byte ptr [ecx - 0x76c7dbbc], cl; ret 0x448b; 
0x00050169: and al, 0x8c; sbb eax, dword ptr [eax]; add byte ptr [ecx - 0x76c7dbbc], cl; ret 0x45e9; 
0x000e04d7: and al, 0x8d; and byte ptr [edx + 0x46], 0xf9; call dword ptr [eax + 0x53]; 
0x0013d999: and al, 0x8d; and dword ptr [edi + 0x29], 0xfffffff9; jmp dword ptr [ebp - 0x75]; 
0x001490de: and al, 0x8d; cmp dword ptr [edx], 0x40; stc; call dword ptr [eax + 0x56]; 
0x00043abd: and al, 0x8d; inc edi; inc byte ptr [ebx - 0x6bf00220]; ret 0xff83; 
0x0017c6e9: and al, 0x8d; mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x000e0440: and al, 0x8d; sbb byte ptr [ecx + 0x46], 0xf9; call dword ptr [eax + 0x53]; 
0x000629ed: and al, 0x8d; sub byte ptr [eax + 0x7d], 0xf9; call dword ptr [eax - 0x18]; 
0x000a62bb: and al, 0x8d; xchg dword ptr [eax - 0x68], edi; stc; call dword ptr [eax - 0x73]; 
0x00093c14: and al, 0x8d; xchg eax, ebp; test cl, bh; call dword ptr [eax + 0x68]; 
0x00093f7e: and al, 0x8d; xchg eax, ebp; test cl, bh; call dword ptr [eax - 0x73]; 
0x00093fe4: and al, 0x8d; xchg eax, edi; test cl, bh; call dword ptr [eax + 0x68]; 
0x00093fc2: and al, 0x8d; xchg eax, edi; test cl, bh; call dword ptr [eax - 0x73]; 
0x0015a049: and al, 0x90; add al, 0; add byte ptr [ecx - 0x76cbdbbc], cl; ret; 
0x0009f4f3: and al, 0x90; add byte ptr [eax], al; add byte ptr [eax + 0x119], bh; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00108947: and al, 0x90; add byte ptr [eax], al; add byte ptr [ebx - 0x317cf314], al; call dword ptr [edi - 0x18]; 
0x000625a2: and al, 0x90; add byte ptr [eax], al; add byte ptr [ecx + 0x391c246c], cl; ret; 
0x0012ef7a: and al, 0x94; add byte ptr [eax], al; add byte ptr [ebx + 0xa024b4], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0014cde5: and al, 0x94; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x001b03f3: and al, 0x94; add byte ptr [eax], al; add byte ptr [ecx], cl; ret 0xbc89; 
0x0006e262: and al, 0x98; add byte ptr [eax], al; add byte ptr [ecx + 0x3920246c], cl; ret; 
0x000cea48: and al, 0x98; add byte ptr [eax], al; add byte ptr [ecx - 0x7ecbdbac], cl; ret 0; 
0x000c7fa8: and al, 0x98; add byte ptr [eax], al; add byte ptr [ecx - 0x7ed3dbac], cl; ret 0; 
0x000a42a9: and al, 0x99; stc; call dword ptr [eax + 0x68]; 
0x000a427f: and al, 0x99; stc; call dword ptr [eax - 0x73]; 
0x000c3e6f: and al, 0x9b; stc; call dword ptr [eax - 0x18]; 
0x000d008d: and al, 0x9c; add byte ptr [eax], al; add byte ptr [ebx - 0x7c9fdb8c], cl; ret 0xf7ff; 
0x00048feb: and al, 0x9c; add byte ptr [eax], al; add byte ptr [ebx - 0x7ca7dba4], cl; ret 0xf7ff; 
0x000c962d: and al, 0x9c; add byte ptr [eax], al; add byte ptr [ebx - 0x7cabdba4], cl; ret 0xf7ff; 
0x001b4386: and al, 0x9c; add byte ptr [eax], al; add byte ptr [ecx], al; sal dh, cl; ret 0x7406; 
0x000db48e: and al, 0x9c; add byte ptr [eax], al; add byte ptr [ecx], ch; ret; 
0x0010672c: and al, 0x9c; add byte ptr [eax], al; add cl, ch; ret 0xfffa; 
0x0009a42f: and al, 0xa0; add byte ptr [eax], al; add byte ptr [eax + 0xaf], bh; mov esi, 8; call dword ptr gs:[0x10]; 
0x00179d94: and al, 0xa4; add byte ptr [eax], al; add bh, bh; je 0x179dc0; sbb al, 0x53; call eax; 
0x000cfeed: and al, 0xa4; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add cl, ch; ret; 
0x0015ff56: and al, 0xa4; or dword ptr [eax], eax; add byte ptr [eax + 0x56], dl; mov ecx, dword ptr [esp + 0x3c]; call ecx; 
0x0014cb97: and al, 0xa8; add byte ptr [eax], al; add al, ch; jmp dword ptr [ebp - 0x13]; 
0x00114dd2: and al, 0xa8; add byte ptr [eax], al; add byte ptr [eax + 0x133], bh; call dword ptr gs:[0x10]; 
0x00114ca9: and al, 0xa8; add byte ptr [eax], al; add byte ptr [ebx + 0xac24b4], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00105ade: and al, 0xa8; add byte ptr [eax], al; add byte ptr [ebx - 0x76cbdbbc], cl; ret; 
0x000d0114: and al, 0xa8; add byte ptr [eax], al; add cl, ch; cmp cl, 0xff; call dword ptr [eax + 0x6a]; 
0x0004d4fc: and al, 0xa8; add byte ptr [eax], al; add cl, ch; lcall 0x247c, 0x8bffffe6; sbb byte ptr [ebp - 0x687a779], cl; call dword ptr [eax - 0x73]; 
0x0010d2a8: and al, 0xac; add byte ptr [eax], al; add byte ptr [eax + 0xaf], bh; call dword ptr gs:[0x10]; 
0x0010d01a: and al, 0xac; add byte ptr [eax], al; add byte ptr [eax + 0xaf], bh; mov dword ptr [esp + 0xb8], 0; call dword ptr gs:[0x10]; 
0x000c948d: and al, 0xac; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add cl, ch; ret; 
0x0005009d: and al, 0xac; add byte ptr [eax], al; add byte ptr [ebx - 0x7c9bdb8c], cl; ret 0xf7ff; 
0x0009b0af: and al, 0xac; add byte ptr [eax], al; add dh, dh; ret 0xf02; 
0x0005e198: and al, 0xac; add byte ptr [eax], al; add dh, dh; ret; 
0x00114fca: and al, 0xb0; add byte ptr [eax], al; add byte ptr [ebx + 0xb82494], cl; add byte ptr [eax], al; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x00153fdf: and al, 0xb2; stc; call dword ptr [eax - 0x73]; 
0x000496e9: and al, 0xb4; add byte ptr [eax], al; add byte ptr [ebx - 0x6bf0fe05], al; ret 0xc639; 
0x000c996c: and al, 0xb4; add byte ptr [eax], al; add byte ptr [ebx - 0x6bf0fe06], al; ret 0xc339; 
0x0009e0ef: and al, 0xb4; add byte ptr [eax], al; add byte ptr [ecx - 0x47dfdbbc], cl; mov dl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00121946: and al, 0xb8; add al, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00114fd1: and al, 0xb8; add byte ptr [eax], al; add byte ptr [eax + 0x132], bh; call dword ptr gs:[0x10]; 
0x00114f62: and al, 0xb8; add byte ptr [eax], al; add byte ptr [eax + 0x1c4], bh; mov esi, dword ptr [esp + 0xbc]; call dword ptr gs:[0x10]; 
0x0003d8a0: and al, 0xb8; add byte ptr [eax], al; add byte ptr [ecx - 0x47dfdbbc], cl; mov dl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00050120: and al, 0xb8; add byte ptr [eax], al; add cl, ch; push es; idiv bh; call dword ptr [eax + 0x6a]; 
0x00120796: and al, 0xb8; add eax, dword ptr [eax]; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00040406: and al, 0xb8; arpl word ptr [ecx], ax; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0009130e: and al, 0xb8; lock add byte ptr [eax], al; add byte ptr [ecx], dh; idiv byte ptr [edx + 1]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00091342: and al, 0xb8; lock add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x001149c5: and al, 0xb8; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011fd66: and al, 0xb8; test al, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x000921a5: and al, 0xba; add dword ptr [eax], eax; add byte ptr [eax], al; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00115d5d: and al, 0xbc; add dword ptr [eax], eax; add byte ptr [ebp - 0x47d3dbac], cl; sub al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010f219: and al, 0xc0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x840f; 
0x001244ad: and al, 0xc1; stc; call dword ptr [eax - 0x18]; 
0x0012dc6e: and al, 0xc4; add byte ptr [eax], al; add byte ptr [ebx + 0xc0249c], cl; add byte ptr [eax], al; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000d4746: and al, 0xc; add ch, cl; ret 0xfedd; 
0x0017cdfa: and al, 0xc; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x001375a2: and al, 0xc; add eax, 0x2000001; push eax; call dword ptr [ebp + 0x14]; 
0x00040460: and al, 0xc; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x001476a3: and al, 0xc; add esp, 0x10; pop esi; pop edi; pop ebp; ret; 
0x0003ca45: and al, 0xc; add esp, 0x14; pop ebx; pop esi; ret; 
0x00061200: and al, 0xc; add esp, 0x18; pop ebx; ret; 
0x0007c161: and al, 0xc; add esp, 0x1c; ret; 
0x000a869e: and al, 0xc; call 0xa8580; add esp, 0xc; test eax, eax; jne 0xa86b3; ret; 
0x000a6c10: and al, 0xc; call dword ptr [edx]; 
0x0008f2e9: and al, 0xc; call dword ptr gs:[0x10]; 
0x0012ef0b: and al, 0xc; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x12ef20; pop ebx; ret; 
0x0012f18b: and al, 0xc; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x12f1a0; pop ebx; ret; 
0x0013054b: and al, 0xc; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x130560; pop ebx; ret; 
0x0008f2e9: and al, 0xc; call dword ptr gs:[0x10]; pop ebx; pop esi; ret; 
0x0010e6f7: and al, 0xc; cmove esi, ebx; mov edx, dword ptr [esp + 0x88]; mov eax, 0x72; mov ebx, dword ptr [esp + 0x80]; call dword ptr gs:[0x10]; 
0x0004308d: and al, 0xc; cmp ecx, eax; sbb ebx, edx; pop ebx; setb al; ret; 
0x000e8bf0: and al, 0xc; cmp edx, eax; cmova edx, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x0003c197: and al, 0xc; fld dword ptr [esp]; mov dword ptr [edx], eax; add esp, 4; ret; 
0x0003bdc9: and al, 0xc; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0003c1d6: and al, 0xc; fstp dword ptr [esp]; fld dword ptr [esp]; mov dword ptr [edx], eax; add esp, 4; ret; 
0x0017c511: and al, 0xc; lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x0017bb61: and al, 0xc; lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 4]; 
0x00094df6: and al, 0xc; mov dword ptr [eax], ecx; xor eax, eax; pop ebx; pop esi; ret; 
0x001897a1: and al, 0xc; mov dword ptr [eax], edx; ret; 
0x000904b8: and al, 0xc; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0003ef9f: and al, 0xc; mov dword ptr [ecx], eax; mov eax, ecx; mov dword ptr [ecx + 4], edx; ret 4; 
0x000e7642: and al, 0xc; mov dword ptr [edx], ebx; pop ebx; ret; 
0x0012064c: and al, 0xc; mov dword ptr [esp + 8], eax; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x000a02a2: and al, 0xc; mov eax, 0x105; call dword ptr gs:[0x10]; 
0x000e7d95: and al, 0xc; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x001208b0: and al, 0xc; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x0012fe1a: and al, 0xc; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x00129757: and al, 0xc; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x0012a087: and al, 0xc; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x0012f1df: and al, 0xc; mov eax, 0x178; call dword ptr gs:[0x10]; 
0x000e7b42: and al, 0xc; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000e7d5f: and al, 0xc; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x0008f06b: and al, 0xc; mov eax, 0x1a6; xor edx, edx; call dword ptr gs:[0x10]; 
0x00130ab0: and al, 0xc; mov eax, 0x1a8; call dword ptr gs:[0x10]; 
0x001313c4: and al, 0xc; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000deb26: and al, 0xc; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x00130b90: and al, 0xc; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x0011f3fc: and al, 0xc; mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012f212: and al, 0xc; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x001304ac: and al, 0xc; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x0012f0ec: and al, 0xc; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x0012ee6c: and al, 0xc; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x000fb692: and al, 0xc; mov eax, 0xdb; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00126a70: and al, 0xc; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x00128430: and al, 0xc; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x00124900: and al, 0xc; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x00098833: and al, 0xc; mov eax, 0xf0; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008f0c2: and al, 0xc; mov eax, 0xf0; xor edx, edx; call dword ptr gs:[0x10]; 
0x001306f0: and al, 0xc; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x000a6b52: and al, 0xc; mov eax, dword ptr [eax + 0x90]; call dword ptr [eax]; 
0x00170b92: and al, 0xc; mov eax, dword ptr [ebx + ecx*4 - 0x138]; mov dword ptr [esp + 0x10], edx; pop ebx; pop esi; jmp eax; 
0x0003ba14: and al, 0xc; mov eax, dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00188211: and al, 0xc; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0013759e: and al, 0xc; mov eax, dword ptr [esp + 0xc]; add eax, 0x2000001; push eax; call dword ptr [ebp + 0x14]; 
0x000612c7: and al, 0xc; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00130d77: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00130847: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x0011f637: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x00121547: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x00121037: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x00114af7: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x001309e7: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x1ac; call dword ptr gs:[0x10]; 
0x00130757: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b0; call dword ptr gs:[0x10]; 
0x001307b7: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b1; call dword ptr gs:[0x10]; 
0x001147e7: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x00130a47: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b6; call dword ptr gs:[0x10]; 
0x001236c7: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x0012d977: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x001308c7: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x00130587: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x00129567: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x00130667: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x00130697: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x0010c187: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x001309b7: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000eab57: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x0011f097: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x00115117: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000f0ac7: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000f0a97: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x001146f7: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x00128837: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x00128757: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x00128457: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x00128487: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x00124927: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x00094f1a: and al, 0xc; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00070fef: and al, 0xc; mov ecx, dword ptr [ebx + edx*4 - 0x736b4]; add ecx, eax; jmp ecx; 
0x0007078f: and al, 0xc; mov ecx, dword ptr [ebx + edx*4 - 0x73734]; add ecx, eax; jmp ecx; 
0x00072141: and al, 0xc; mov ecx, dword ptr [ebx + edx*4 - 0x73834]; add ecx, eax; jmp ecx; 
0x00120602: and al, 0xc; mov ecx, dword ptr [esp + 0x54]; mov dword ptr [esp + 8], eax; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x00094f5d: and al, 0xc; mov ecx, edi; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00092537: and al, 0xc; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0007c09b: and al, 0xc; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 8], edx; pop ebx; jmp eax; 
0x00133b9a: and al, 0xc; mov edx, dword ptr [edx]; mov dword ptr [eax], edx; mov eax, 1; ret; 
0x0009af2a: and al, 0xc; mov edx, dword ptr [edx]; mov ecx, dword ptr [eax]; cmp dword ptr [edx + 0x14], ecx; je 0x9af40; ret; 
0x00131c17: and al, 0xc; mov edx, dword ptr [esp + 0x10]; mov dword ptr [esp + 0x1c], eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00131bd9: and al, 0xc; mov edx, dword ptr [esp + 0x10]; mov dword ptr [esp + 0x1c], eax; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x00131b6e: and al, 0xc; mov edx, dword ptr [esp + 0x10]; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00099b5b: and al, 0xc; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x0010bef3: and al, 0xc; mov edx, dword ptr [esp + 0x24]; mov ebx, dword ptr [esp + 0x20]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0003d6a2: and al, 0xc; mov edx, edi; mov eax, 0x1a5; call dword ptr gs:[0x10]; 
0x0003d662: and al, 0xc; mov edx, edi; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x0009fc59: and al, 0xc; mov esi, dword ptr [esp + 0x4c]; mov eax, 0x117; call dword ptr gs:[0x10]; 
0x0009fca1: and al, 0xc; mov esi, dword ptr [esp + 0x4c]; mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x0009f991: and al, 0xc; mov esi, dword ptr [esp + 4]; mov eax, 0x118; call dword ptr gs:[0x10]; 
0x0009f9d1: and al, 0xc; mov esi, dword ptr [esp + 4]; mov eax, 0x1a3; call dword ptr gs:[0x10]; 
0x0003b9a2: and al, 0xc; or eax, 0xffff8000; inc eax; shr eax, 0x1f; ret; 
0x0008d7be: and al, 0xc; pop ebx; mov eax, dword ptr [eax + 0x18]; pop esi; jmp eax; 
0x000c0a44: and al, 0xc; pop ebx; pop esi; ret; 
0x001ab9a4: and al, 0xc; pop edi; ret; 
0x00137a0a: and al, 0xc; push 0x2000001; call dword ptr [ebp + 0x14]; 
0x00024e78: and al, 0xc; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call ecx; 
0x00162ec7: and al, 0xc; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; push esi; call edi; 
0x00163366: and al, 0xc; push ebp; call edi; 
0x0017c548: and al, 0xc; push edx; push ebx; call dword ptr [eax + 0x20]; 
0x0017c515: and al, 0xc; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x0017bb65: and al, 0xc; push edx; push ebx; call dword ptr [eax + 4]; 
0x0017bb08: and al, 0xc; push edx; push ebx; call dword ptr [eax]; 
0x000e7857: and al, 0xc; push edx; push ebx; call eax; 
0x0017bedc: and al, 0xc; push edx; push ecx; call dword ptr [eax + 4]; 
0x0005bc1e: and al, 0xc; push esi; push edx; push eax; call dword ptr [ebp + 0x1c]; 
0x001570af: and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x1570be; add esp, 0x1c; ret; 
0x0017a0b4: and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x17a0c3; add esp, 0x1c; ret; 
0x0017a103: and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x17a13c; add esp, 0x1c; ret; 
0x0003ad74: and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x3ad87; mov eax, edx; add esp, 0x1c; ret 4; 
0x0003c2e3: and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x3c2f3; add esp, 0x18; pop ebx; ret; 
0x0003efe7: and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x3eff6; add esp, 0x1c; ret; 
0x0003f0fa: and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x3f109; add esp, 0x1c; ret; 
0x00025538: and al, 0xc; sub ecx, dword ptr gs:[0x14]; jne 0x25547; add esp, 0x1c; ret; 
0x00122ca1: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x122cb7; add esp, 0x1c; ret; 
0x00125391: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1253a0; add esp, 0x1c; ret; 
0x00126b14: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x126b23; add esp, 0x1c; ret; 
0x0012d677: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x12d686; add esp, 0x1c; ret; 
0x00131500: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x131529; add esp, 0x18; pop ebx; ret; 
0x00131580: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1315a9; add esp, 0x18; pop ebx; ret; 
0x0013186b: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x131899; add esp, 0x18; pop ebx; ret; 
0x0013257b: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1325a9; add esp, 0x18; pop ebx; ret; 
0x00132692: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1326a1; add esp, 0x1c; ret; 
0x00132700: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x132729; add esp, 0x18; pop ebx; ret; 
0x00148cdd: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x148cf4; add esp, 0x18; pop ebx; ret; 
0x00148d25: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x148d34; add esp, 0x1c; ret; 
0x00148d74: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x148d83; add esp, 0x1c; ret; 
0x0014b37e: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x14b3cc; add esp, 0x1c; ret; 
0x001752d4: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x175356; add esp, 0x18; pop ebx; ret; 
0x0017848d: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1784a7; add esp, 0x1c; ret; 
0x0017899d: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1789b7; add esp, 0x1c; ret; 
0x00178a20: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x178a37; add esp, 0x18; pop ebx; ret; 
0x0017b94f: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x17b9b9; add esp, 0x18; pop ebx; ret; 
0x0017ba3f: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x17baa9; add esp, 0x18; pop ebx; ret; 
0x0017bd16: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x17bd5c; add esp, 0x18; pop ebx; ret; 
0x0017bdb6: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x17bdfc; add esp, 0x18; pop ebx; ret; 
0x0017be74: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x17be9b; add esp, 0x18; pop ebx; ret; 
0x0017bef8: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x17bf37; add esp, 0x18; pop ebx; ret; 
0x0017bf8c: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x17bfd4; add esp, 0x18; pop ebx; ret; 
0x0017c7c6: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x17c80c; add esp, 0x18; pop ebx; ret; 
0x0017c866: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x17c8ac; add esp, 0x18; pop ebx; ret; 
0x0017c906: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x17c94c; add esp, 0x18; pop ebx; ret; 
0x0017c9a6: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x17c9ec; add esp, 0x18; pop ebx; ret; 
0x0017d09d: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x17d0af; movzx eax, al; add esp, 0x1c; ret; 
0x0017d0fd: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x17d10f; movzx eax, al; add esp, 0x1c; ret; 
0x0017d167: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x17d177; add esp, 0x18; pop ebx; ret; 
0x0017d217: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x17d227; add esp, 0x18; pop ebx; ret; 
0x001824d2: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x182514; add esp, 0x18; pop ebx; ret; 
0x001840ac: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1840c9; add esp, 0x18; pop ebx; ret; 
0x00184126: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x184149; add esp, 0x18; pop ebx; ret; 
0x0018982c: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x18983c; add esp, 0x18; pop ebx; ret; 
0x0018c6c4: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x18c6d3; add esp, 0x1c; ret; 
0x001927cf: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1927f7; add esp, 0x18; pop ebx; ret; 
0x0003df25: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x3df34; add esp, 0x1c; ret; 
0x000405ea: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x405f9; add esp, 0x1c; ret; 
0x00040817: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x40826; add esp, 0x1c; ret; 
0x00040ae7: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x40af6; add esp, 0x1c; ret; 
0x00040b6a: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x40b79; add esp, 0x1c; ret; 
0x00041b68: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x41bac; add esp, 0x18; pop ebx; ret; 
0x0005ada3: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x5adbf; add esp, 0x1c; ret; 
0x0009c99b: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x9c9c7; add esp, 0x18; pop ebx; ret; 
0x000c5e08: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xc5e3c; add esp, 0x18; pop ebx; ret; 
0x000da709: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xda718; add esp, 0x1c; ret; 
0x000e4f6d: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xe4f7c; add esp, 0x1c; ret; 
0x000e742d: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xe743c; add esp, 0x1c; ret; 
0x000efa3a: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xefa57; add esp, 0x1c; ret; 
0x0008a243: and al, 0xc; sub esp, 4; push eax; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x0017c14c: and al, 0xc; sub esp, 8; mov eax, dword ptr [esi + 4]; push ebx; push esi; call dword ptr [eax + 4]; 
0x0012d02e: and al, 0xc; test eax, eax; je 0x12d038; test edx, edx; jne 0x12d040; ret; 
0x0008f318: and al, 0xc; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008f318: and al, 0xc; xor cl, 0x81; call dword ptr gs:[0x10]; pop ebx; pop esi; ret; 
0x0008f0bc: and al, 0xc; xor esi, esi; mov ecx, dword ptr [esp + 0xc]; mov eax, 0xf0; xor edx, edx; call dword ptr gs:[0x10]; 
0x0018bd73: and al, 0xcc; add byte ptr [eax], al; add byte ptr [ebp + 0x57], dl; push esi; call dword ptr [ebx + 0x40]; 
0x00150004: and al, 0xd4; add byte ptr [eax], al; add al, ch; ret 0xfe19; 
0x0003c231: and al, 0xd9; add al, 0x24; add esp, 4; ret; 
0x0003c1da: and al, 0xd9; add al, 0x24; mov dword ptr [edx], eax; add esp, 4; ret; 
0x000da7e3: and al, 0xdd; add al, 0x24; add esp, 0xc; ret; 
0x0003bf91: and al, 0xdd; add al, 0x24; add esp, 8; ret; 
0x00080747: and al, 0xe0; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp - 0x6ff7d], cl; call dword ptr [eax - 0x73]; 
0x00177c37: and al, 0xe0; add byte ptr [eax], al; add byte ptr [ebx + 0x50], dl; call dword ptr [edx + 8]; 
0x0005e620: and al, 0xe0; add byte ptr [eax], al; add dh, dh; ret 0xf01; 
0x000a7647: and al, 0xe4; add byte ptr [eax], al; add byte ptr [ebp - 0x6662380], cl; call dword ptr [eax + 0x68]; 
0x000fd886: and al, 0xe8; adc al, 0x59; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00175296: and al, 0xe8; add al, 0xdf; ljmp 0x5e5b:0x10c483ff; pop edi; ret; 
0x000fd598: and al, 0xe8; add bl, byte ptr [edx + esi*8 - 1]; add esp, 0x14; pop ebx; pop esi; ret; 
0x0011eeaf: and al, 0xe8; add byte ptr [eax], al; add byte ptr [ebp - 0x6b5da7a], cl; call dword ptr [eax - 0x18]; 
0x0017a978: and al, 0xe8; and cl, byte ptr [eax - 0x3b7c0016]; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00171575: and al, 0xe8; and eax, 0x83ffeb1c; les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x00173c79: and al, 0xe8; and ebp, esi; ljmp 0x5e5b:0x10c483ff; pop edi; ret; 
0x00036e58: and al, 0xe8; dec edx; ret; 
0x00177453: and al, 0xe8; inc edi; mov ebp, 0xc483ffea; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000e85e4: and al, 0xe8; mov dh, 0xab; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x000a7664: and al, 0xe8; out 0xf4, al; std; jmp dword ptr [esi - 0x70]; 
0x001456e1: and al, 0xe8; rcr edx, 0xed; dec dword ptr [ecx - 0x76d3dbbc]; ret; 
0x00039af8: and al, 0xe8; ret 0xfff5; 
0x000df1d7: and al, 0xe8; ret; 
0x00186c8f: and al, 0xe8; stosd dword ptr es:[edi], eax; ret; 
0x00030273: and al, 0xe8; xchg edi, eax; mov dl, 7; add byte ptr [ecx - 0x76bbdbbc], cl; ret 0xc483; 
0x0010ab52: and al, 0xe9; ret; 
0x00081ec2: and al, 0xeb; mov esp, 0x3900768d; ret; 
0x0014f0c7: and al, 0xec; add al, byte ptr [eax]; add byte ptr [esi - 0x18], dl; push cs; ret; 
0x000a713e: and al, 0xf4; add byte ptr [eax], al; add byte ptr [ebp - 0x6666780], cl; call dword ptr [eax + 0x68]; 
0x0004c5bd: and al, 0xf4; add byte ptr [eax], al; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x6de9; 
0x0004b8e8: and al, 0xf4; add byte ptr [eax], al; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x8d2e; 
0x0016ab2e: and al, 0xf4; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x840f; 
0x00043797: and al, 0xf4; add byte ptr [eax], al; add cl, dl; call 0x21061825; ret 0xb60f; 
0x00104bb7: and al, 0xf8; add byte ptr [eax], al; add byte ptr [edi], cl; dec esp; ret; 
0x0005fcbb: and al, 0xf; mov dh, 0x52; or al, 0xf6; ret 0xf01; 
0x00104a8a: and al, 0xf; mov dh, 0x52; sbb al, 0xf6; ret 0xf08; 
0x0004faac: and al, 0xf; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0015cc19: and al, 0xf; test byte ptr [eax - 0x7d000000], al; ret 0x8301; 
0x00188067: and al, 0xf; test dword ptr [esi + 0xf000002], ecx; mov bh, 0x50; adc byte ptr [esi - 9], ah; ret 0x7f8; 
0x0003f870: and al, 0xf; xchg ebp, eax; ret 0xca21; 
0x000a46d9: and al, 0xf; xchg ebp, eax; ret 0xe383; 
0x00145284: and al, 0xf; xchg ebp, eax; ret 0xe8c0; 
0x001737bf: and al, 0xf; xchg edx, eax; ret 0xd689; 
0x000ec7cf: and al, 0xf; xchg esp, eax; ret 0xd309; 
0x000f7e76: and al, 0xfb; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; xor eax, eax; ret; 
0x001977e5: and al, 0xff; inc dword ptr [ecx + 0x44048c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019772e: and al, 0xff; inc dword ptr [ecx + 0x440ffc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0015a12e: and al, 0xff; je 0x15a156; dec eax; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x10]; call edi; 
0x00180663: and al, 0xff; je 0x18068b; jo 0x180692; ret; 
0x0009f344: and al, 0xff; rol dword ptr [ebx - 0x3fceeb3c], cl; pop ebx; pop esi; ret; 
0x00070eee: and al, 1; add byte ptr [eax], al; add byte ptr [ebx - 0x38b36a64], cl; clc; inc dword ptr [ecx]; ret; 
0x00045fd7: and al, 1; add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0x7c83; 
0x0013084e: and al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0003c63b: and al, 1; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x000c3167: and al, 1; add byte ptr [eax], al; ret; 
0x0008acee: and al, 1; ret 0x5689; 
0x00045211: and al, 2; add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0x44c7; 
0x00092ac5: and al, 2; add byte ptr [eax], al; lea edx, [esi + 0x220]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x000b35d8: and al, 2; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x00091516: and al, 2; nop; xor eax, eax; pop ebx; pop edi; ret; 
0x000a0d28: and al, 2; or dword ptr [eax], eax; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00104e5b: and al, 4; add al, byte ptr [eax]; add byte ptr [edi], cl; dec esi; ret 0x4489; 
0x00104e24: and al, 4; add al, byte ptr [eax]; add byte ptr [edi], cl; sahf; ret 0xd201; 
0x00199644: and al, 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0007a6fa: and al, 4; add byte ptr [ecx - 0x7c968b38], cl; jmp dword ptr [eax]; 
0x0017cdd6: and al, 4; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x000db3f1: and al, 4; add dword ptr [eax], eax; add byte ptr [ecx + 0x50302444], cl; mov eax, dword ptr [esp + 0x64]; call eax; 
0x00045866: and al, 4; add dword ptr [edi], ecx; xchg esp, eax; ret 0x7c83; 
0x00141ae6: and al, 4; add eax, 9; and eax, 0xfffffff8; add eax, 0xc; ret; 
0x00090802: and al, 4; and dword ptr [eax + 8], 0xfffffffb; xor eax, eax; ret; 
0x000875c6: and al, 4; and dword ptr [eax], 0xffffffcf; ret; 
0x00034646: and al, 4; and eax, 0x7f; ret; 
0x0013f616: and al, 4; bswap eax; ret; 
0x0009f8bf: and al, 4; call dword ptr gs:[0x10]; 
0x0008e951: and al, 4; cmp dword ptr [eax], 1; je 0x8e960; ret; 
0x0003b990: and al, 4; fabs; test ah, 2; je 0x3b99b; fchs; ret; 
0x0003bd30: and al, 4; fabs; test ah, 2; je 0x3bd3b; fchs; ret; 
0x0003ba27: and al, 4; fadd st(0); mov dword ptr [eax], ecx; ret; 
0x00055167: and al, 4; fld qword ptr [esp]; add esp, 0xc; ret; 
0x000551e1: and al, 4; fld xword ptr [esp]; add esp, 0x1c; ret; 
0x0003bc66: and al, 4; fscale; fstp st(1); ret; 
0x0003bc76: and al, 4; fxam; fnstsw ax; fstp st(0); and eax, 0x200; ret; 
0x0017c709: and al, 4; jmp dword ptr [eax + 0x20]; 
0x0017c6e5: and al, 4; jmp dword ptr [eax + 0x24]; 
0x00186925: and al, 4; jmp dword ptr [eax + 0x30]; 
0x001713f5: and al, 4; jmp dword ptr [eax + 4]; 
0x0008e79f: and al, 4; jmp dword ptr [eax]; 
0x00070ab7: and al, 4; jmp eax; 
0x0007199c: and al, 4; jmp edx; 
0x00043017: and al, 4; lea eax, [edx - 1]; xor eax, edx; cmp edx, eax; setle al; ret; 
0x000e7bad: and al, 4; lea ecx, [esp + 4]; mov dword ptr [esp + 8], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x00043036: and al, 4; lea edx, [eax - 1]; xor eax, edx; cmp edx, eax; setb al; ret; 
0x0009a592: and al, 4; lock dec dword ptr [eax]; jne 0x9a5a0; xor eax, eax; ret; 
0x0010ce3c: and al, 4; mov dword ptr [eax + 0x108], edx; xor eax, eax; ret; 
0x0010ce64: and al, 4; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x00090912: and al, 4; mov dword ptr [eax + 0x14], edx; xor eax, eax; ret; 
0x00099ac6: and al, 4; mov dword ptr [eax], 0; mov dword ptr [eax + 4], 0; xor eax, eax; ret; 
0x0009d621: and al, 4; mov dword ptr [eax], 0; mov ecx, dword ptr [edx + 0x3bac]; mov dword ptr [edx + 0x3bac], eax; mov dword ptr [eax + 0xc], ecx; ret; 
0x00090c16: and al, 4; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x0009a5d2: and al, 4; mov dword ptr [eax], 1; xor eax, eax; ret; 
0x0003ba1c: and al, 4; mov dword ptr [eax], ecx; ret; 
0x00099b1f: and al, 4; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x00090c3f: and al, 4; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00071862: and al, 4; mov dword ptr [esp + 0x1c], 1; jmp eax; 
0x00071872: and al, 4; mov dword ptr [esp + 0x24], 1; jmp eax; 
0x00071892: and al, 4; mov dword ptr [esp + 0x28], 1; jmp eax; 
0x000718a2: and al, 4; mov dword ptr [esp + 0x30], 1; jmp eax; 
0x00071912: and al, 4; mov dword ptr [esp + 0x34], 1; jmp eax; 
0x000718b2: and al, 4; mov dword ptr [esp + 0x3c], 1; jmp eax; 
0x00070b60: and al, 4; mov dword ptr [esp + 0x48], 1; jmp eax; 
0x00129753: and al, 4; mov dword ptr [esp + 0xc], eax; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x0012a083: and al, 4; mov dword ptr [esp + 0xc], eax; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000e7bb1: and al, 4; mov dword ptr [esp + 8], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x000a04ee: and al, 4; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x000e7885: and al, 4; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x0009f995: and al, 4; mov eax, 0x118; call dword ptr gs:[0x10]; 
0x00130898: and al, 4; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x00130bd4: and al, 4; mov eax, 0x136; call dword ptr gs:[0x10]; 
0x00130c18: and al, 4; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x0012ed08: and al, 4; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x001306c4: and al, 4; mov eax, 0x149; call dword ptr gs:[0x10]; 
0x0011fd18: and al, 4; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x00130874: and al, 4; mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x00130c48: and al, 4; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x0012b884: and al, 4; mov eax, 0x158; call dword ptr gs:[0x10]; 
0x00130cb8: and al, 4; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x00130ce8: and al, 4; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x000907ba: and al, 4; mov eax, 0x16; cmp edx, 2; jbe 0x907d0; ret; 
0x00130d18: and al, 4; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x00130d44: and al, 4; mov eax, 0x17e; call dword ptr gs:[0x10]; 
0x000a03e0: and al, 4; mov eax, 0x199; call dword ptr gs:[0x10]; 
0x0009f9d5: and al, 4; mov eax, 0x1a3; call dword ptr gs:[0x10]; 
0x00130788: and al, 4; mov eax, 0x1ae; call dword ptr gs:[0x10]; 
0x00130a18: and al, 4; mov eax, 0x1b2; call dword ptr gs:[0x10]; 
0x000ea144: and al, 4; mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x00130b18: and al, 4; mov eax, 0x1c0; call dword ptr gs:[0x10]; 
0x0003c958: and al, 4; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x00114a84: and al, 4; mov eax, 0x29; call dword ptr gs:[0x10]; 
0x00123784: and al, 4; mov eax, 0x33; call dword ptr gs:[0x10]; 
0x0010c318: and al, 4; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x001214d4: and al, 4; mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x001214d4: and al, 4; mov eax, 0x3c; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00123964: and al, 4; mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x0012b628: and al, 4; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x00130bf4: and al, 4; mov eax, 0x56; call dword ptr gs:[0x10]; 
0x0012b838: and al, 4; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x001296b8: and al, 4; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x00114ef8: and al, 4; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x00131262: and al, 4; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012d9a4: and al, 4; mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x0012d834: and al, 4; mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x001305b4: and al, 4; mov eax, 0x71; call dword ptr gs:[0x10]; 
0x0012b814: and al, 4; mov eax, 0x73; call dword ptr gs:[0x10]; 
0x00130bb4: and al, 4; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x0012b388: and al, 4; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x0010e3e4: and al, 4; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x0003c136: and al, 4; mov eax, 0x7f800000; and edx, 0x7fffffff; sub eax, edx; shr eax, 0x1f; ret; 
0x001307e4: and al, 4; mov eax, 0x82; call dword ptr gs:[0x10]; 
0x000f0a44: and al, 4; mov eax, 0x84; call dword ptr gs:[0x10]; 
0x00114ed4: and al, 4; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x001305d8: and al, 4; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x0012f3e4: and al, 4; mov eax, 0x88; call dword ptr gs:[0x10]; 
0x0012f3e4: and al, 4; mov eax, 0x88; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x001157b8: and al, 4; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x000f0af4: and al, 4; mov eax, 0x93; call dword ptr gs:[0x10]; 
0x00128ab8: and al, 4; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x00129668: and al, 4; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x00128ae4: and al, 4; mov eax, 0x98; call dword ptr gs:[0x10]; 
0x0010c158: and al, 4; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x0010be48: and al, 4; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x0010be74: and al, 4; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x0010be94: and al, 4; mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x0010beb4: and al, 4; mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x0010bf42: and al, 4; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x0012d9c8: and al, 4; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x00130608: and al, 4; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x00130638: and al, 4; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x0003cf98: and al, 4; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x00114684: and al, 4; mov eax, 0xc; call dword ptr gs:[0x10]; 
0x000efa98: and al, 4; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x0012fa74: and al, 4; mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x0012fa54: and al, 4; mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x0012fa54: and al, 4; mov eax, 0xd8; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00130a78: and al, 4; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x00115317: and al, 4; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00121d06: and al, 4; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x0012adb8: and al, 4; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x001284b8: and al, 4; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x00124958: and al, 4; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x00099673: and al, 4; mov eax, 0xf0; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00099578: and al, 4; mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00090ad6: and al, 4; mov eax, 0xf0; xor esi, esi; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000fb5a1: and al, 4; mov eax, 1; test ecx, ecx; js 0xfb5b0; ret; 
0x00152856: and al, 4; mov eax, dword ptr [eax + 0x10]; ret; 
0x0017ce16: and al, 4; mov eax, dword ptr [eax + 0x14]; ret; 
0x0017a8e2: and al, 4; mov eax, dword ptr [eax + 0x30]; add eax, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0008ccc6: and al, 4; mov eax, dword ptr [eax + 0x34]; ret; 
0x000347ca: and al, 4; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0009d6b0: and al, 4; mov eax, dword ptr [eax + 0x3ba4]; test eax, eax; jne 0x9d6c7; ret; 
0x000347ea: and al, 4; mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x001897b6: and al, 4; mov eax, dword ptr [eax + 0x4c]; ret; 
0x00152b10: and al, 4; mov eax, dword ptr [eax + 0x4e48]; test eax, eax; jne 0x152b27; ret; 
0x001897d6: and al, 4; mov eax, dword ptr [eax + 0x50]; ret; 
0x00189866: and al, 4; mov eax, dword ptr [eax + 0x54]; ret; 
0x00189856: and al, 4; mov eax, dword ptr [eax + 0x58]; ret; 
0x001897e6: and al, 4; mov eax, dword ptr [eax + 0x5c]; ret; 
0x0009e076: and al, 4; mov eax, dword ptr [eax + 0x64]; ret; 
0x0010a810: and al, 4; mov eax, dword ptr [eax + 0xb8]; mov edx, dword ptr [eax]; mov dword ptr [eax], ecx; mov eax, edx; ret; 
0x001227d6: and al, 4; mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x00034040: and al, 4; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0018979a: and al, 4; mov eax, dword ptr [eax + edx*4]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x00086886: and al, 4; mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x00086836: and al, 4; mov eax, dword ptr [eax]; and eax, 0x804; ret; 
0x000a08d1: and al, 4; mov eax, dword ptr [eax]; cmp eax, 0x3fc; jbe 0xa08e0; ret; 
0x000a0ad1: and al, 4; mov eax, dword ptr [eax]; cmp eax, 0x50; jbe 0xa0ae0; ret; 
0x000a0911: and al, 4; mov eax, dword ptr [eax]; cmp eax, 0xffff; jbe 0xa0920; ret; 
0x00034630: and al, 4; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00034600: and al, 4; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x2c]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x000e8906: and al, 4; mov eax, dword ptr [eax]; ret; 
0x0017ca16: and al, 4; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x0013184c: and al, 4; mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0013144b: and al, 4; mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0003c0ed: and al, 4; mov eax, dword ptr [esp + 8]; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0003dc46: and al, 4; mov eax, edx; neg eax; cmovs eax, edx; ret; 
0x001321f9: and al, 4; mov ebx, 0x10; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00131fc9: and al, 4; mov ebx, 0x11; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00070cdd: and al, 4; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x0008fbc3: and al, 4; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0003c072: and al, 4; mov ecx, 0xff7fffff; sub ecx, eax; xor eax, ecx; shr eax, 0x1f; ret; 
0x0003d69c: and al, 4; mov ecx, ebp; mov dword ptr [esp + 0xc], eax; mov edx, edi; mov eax, 0x1a5; call dword ptr gs:[0x10]; 
0x0003d65c: and al, 4; mov ecx, ebp; mov dword ptr [esp + 0xc], eax; mov edx, edi; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x0018c567: and al, 4; mov edi, eax; mov eax, ebp; mov edx, ecx; mov esi, ecx; call dword ptr gs:[0x10]; 
0x000a89f7: and al, 4; mov edx, 0xffffffff; cmove eax, edx; add eax, 1; ret; 
0x00091e2d: and al, 4; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000904c6: and al, 4; mov edx, dword ptr [eax + 0x10]; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x000903f6: and al, 4; mov edx, dword ptr [eax]; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x000959c0: and al, 4; mov edx, dword ptr [edx]; lea eax, [eax + 0x2a0]; mov dword ptr [eax], edx; ret; 
0x0008e8d0: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x290], edx; ret; 
0x0008e8f0: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x294], edx; ret; 
0x0008e910: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x298], edx; ret; 
0x0008e930: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x29c], edx; ret; 
0x000959a0: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x2a4], edx; ret; 
0x00095980: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x2ac], edx; ret; 
0x000a0b40: and al, 4; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x34c], edx; mov dword ptr [eax + 0x378], 1; ret; 
0x000a0b90: and al, 4; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x350], edx; mov dword ptr [eax + 0x378], 1; ret; 
0x000a0bc0: and al, 4; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x354], edx; mov dword ptr [eax + 0x378], 1; ret; 
0x000a08b0: and al, 4; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x358], edx; ret; 
0x000a0890: and al, 4; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x35c], edx; ret; 
0x000a0b10: and al, 4; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x370], edx; mov dword ptr [eax + 0x378], 1; ret; 
0x000a0940: and al, 4; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x394], edx; ret; 
0x000a0b70: and al, 4; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x3c34], edx; ret; 
0x0017cdf6: and al, 4; mov edx, dword ptr [esp + 0xc]; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x00114616: and al, 4; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x110], edx; xor eax, eax; ret; 
0x001897c6: and al, 4; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x000906f6: and al, 4; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x0010ce16: and al, 4; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x0008c966: and al, 4; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x00189776: and al, 4; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x000311c6: and al, 4; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x0010d20b: and al, 4; mov esi, 8; call dword ptr gs:[0x10]; 
0x0010ce06: and al, 4; mov word ptr [eax], dx; xor eax, eax; ret; 
0x00086846: and al, 4; movzx eax, byte ptr [eax]; shr al, 2; and eax, 1; xor eax, 1; ret; 
0x00086866: and al, 4; movzx eax, byte ptr [eax]; shr al, 3; and eax, 1; xor eax, 1; ret; 
0x000875d6: and al, 4; movzx eax, byte ptr [eax]; shr al, 4; and eax, 1; ret; 
0x000875f6: and al, 4; movzx eax, byte ptr [eax]; shr al, 5; and eax, 1; ret; 
0x00034500: and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x000344d0: and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x000344a0: and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x000343e0: and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x00034440: and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x00034350: and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x00034410: and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x000343b0: and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x000345b0: and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x00034380: and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x00034470: and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x00034320: and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x0010ccc6: and al, 4; movzx edx, word ptr [eax]; mov eax, dword ptr [esp + 8]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x0008ccd6: and al, 4; ret; 
0x0013f627: and al, 4; rol ax, 8; ret; 
0x00189c5c: and al, 4; sar eax, 5; and edx, dword ptr [ecx + eax*4]; setne al; movzx eax, al; ret; 
0x0008e5f6: and al, 4; setae al; ret; 
0x000941ba: and al, 4; sete al; movzx eax, al; ret; 
0x0016eeee: and al, 4; sub esp, 0xc; push eax; call dword ptr [ecx + 0xc]; 
0x0008a866: and al, 4; test byte ptr [eax], 0x80; jne 0x8a870; ret; 
0x00042a37: and al, 4; test eax, eax; je 0x42a43; bsr eax, eax; add eax, 1; ret; 
0x00042a56: and al, 4; test eax, eax; je 0x42a62; bsr eax, eax; add eax, 1; ret; 
0x00042a76: and al, 4; test eax, eax; je 0x42a82; bsr eax, eax; add eax, 1; ret; 
0x00042ae7: and al, 4; test eax, eax; je 0x42af3; bsr eax, eax; add eax, 1; ret; 
0x00099fc1: and al, 4; test eax, eax; js 0x99fd0; mov dword ptr [edx + 0x3af4], eax; xor eax, eax; ret; 
0x0009805a: and al, 4; test edx, edx; jne 0x98070; and dword ptr [eax], 0x7fffffff; xor eax, eax; ret; 
0x000e7866: and al, 4; test edx, edx; jns 0xe78e0; mov eax, 0x193; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00091099: and al, 4; xor cl, 0x81; mov dword ptr [edi + edx*4 + 8], 0; mov edx, 0x7fffffff; call dword ptr gs:[0x10]; 
0x000a94f1: and al, 4; xor eax, eax; cmp edx, 0x40; ja 0xa9501; mov eax, dword ptr [ecx + edx*4 - 0xe34]; ret; 
0x000a9521: and al, 4; xor eax, eax; cmp edx, 0x40; ja 0xa9531; mov eax, dword ptr [ecx + edx*4 - 0xd14]; ret; 
0x00133b86: and al, 4; xor eax, eax; mov ecx, dword ptr [edx + 4]; cmp byte ptr [ecx], 0; je 0x133b98; ret; 
0x000d9a66: and al, 4; xor eax, eax; mov ecx, dword ptr [edx]; test ecx, ecx; jne 0xd9a92; ret; 
0x0002326d: and al, 4; xor edx, edx; mov ebx, 1; mov esi, 8; mov dword ptr [ebp + 0x137c], 1; call dword ptr gs:[0x10]; 
0x00179ac4: and al, 5; add byte ptr [eax], al; add byte ptr [ebx + 0x50510850], cl; call dword ptr [edx + 0xc]; 
0x000ad13c: and al, 7; xor byte ptr [edi], cl; xchg esp, eax; ret; 
0x0004eef1: and al, 8; adc byte ptr [ebx - 0x6af068cc], cl; ret 0xd789; 
0x0004ea5d: and al, 8; adc byte ptr [edi], cl; xchg esp, eax; ret 0xc8b; 
0x00141d6a: and al, 8; add byte ptr [eax], 0; add byte ptr [edi], cl; inc edx; ret 0x2ec3; 
0x0008595a: and al, 8; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0010ba86: and al, 8; add cl, byte ptr [edi]; test byte ptr [ecx - 0x7d000000], dh; ret; 
0x0003c3c5: and al, 8; call 0x3c340; pop ecx; pop edx; ret; 
0x000612cb: and al, 8; call dword ptr gs:[0x10]; 
0x0011464b: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x114660; pop ebx; ret; 
0x001146bb: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x1146d0; pop ebx; ret; 
0x00114abb: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x114ad0; pop ebx; ret; 
0x0011f0db: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x11f0f0; pop ebx; ret; 
0x0011f5fb: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x11f610; pop ebx; ret; 
0x001208e7: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x120900; pop ebx; ret; 
0x00120ffb: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x121010; pop ebx; ret; 
0x00121507: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x121520; pop ebx; ret; 
0x00121a27: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x121a40; pop ebx; ret; 
0x00122fab: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x122fc0; pop ebx; ret; 
0x00122ffb: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x123010; pop ebx; ret; 
0x00124e5b: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x124e70; pop ebx; ret; 
0x0012c46b: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x12c480; pop ebx; ret; 
0x0012e867: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x12e880; pop ebx; ret; 
0x0013028b: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x1302a0; pop ebx; ret; 
0x000612cb: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x612e0; pop ebx; ret; 
0x0009f187: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x9f1a0; pop ebx; ret; 
0x000fb69b: and al, 8; call dword ptr gs:[0x10]; neg eax; pop ebx; ret; 
0x00186d32: and al, 8; call eax; 
0x000c2563: and al, 8; cld; pop edi; ret; 
0x0009fdf2: and al, 8; cmp byte ptr [ebx], 0x2f; jne 0x9fe40; add ebx, 1; mov eax, 0x116; call dword ptr gs:[0x10]; 
0x000941b6: and al, 8; cmp dword ptr [esp + 4], eax; sete al; movzx eax, al; ret; 
0x00070b53: and al, 8; cmp edx, 0x5a; jbe 0x718c0; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x48], 1; jmp eax; 
0x0003c0f1: and al, 8; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x000794f2: and al, 8; mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 0x14], 2; mov dword ptr [eax + 0x18], edx; ret; 
0x0011461a: and al, 8; mov dword ptr [eax + 0x110], edx; xor eax, eax; ret; 
0x001897ca: and al, 8; mov dword ptr [eax + 0x4c], edx; ret; 
0x0017d2d2: and al, 8; mov dword ptr [eax + 0xc], edx; ret; 
0x000906fa: and al, 8; mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x0010ce1a: and al, 8; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x000903bd: and al, 8; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0014096e: and al, 8; mov dword ptr [edx + ebp], ecx; mov ebx, dword ptr [esp + 0x6c]; mov eax, 6; call dword ptr gs:[0x10]; 
0x00125173: and al, 8; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x00173c14: and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0017c705: and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x20]; 
0x0017c6e1: and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x24]; 
0x001713f1: and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x00171415: and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x000e7bb5: and al, 8; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x00130d7b: and al, 8; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0010e8f9: and al, 8; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x0013084b: and al, 8; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x0011f7e2: and al, 8; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0011f63b: and al, 8; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x0012154b: and al, 8; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x0012103b: and al, 8; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x0012060a: and al, 8; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x001145b2: and al, 8; mov eax, 0x13e; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00114afb: and al, 8; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x000908f6: and al, 8; mov eax, 0x16; cmp edx, 0x3fff; ja 0x90910; ret; 
0x00120650: and al, 8; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x00133436: and al, 8; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x00129fb2: and al, 8; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x001309eb: and al, 8; mov eax, 0x1ac; call dword ptr gs:[0x10]; 
0x0013075b: and al, 8; mov eax, 0x1b0; call dword ptr gs:[0x10]; 
0x001307bb: and al, 8; mov eax, 0x1b1; call dword ptr gs:[0x10]; 
0x001147eb: and al, 8; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x00130a4b: and al, 8; mov eax, 0x1b6; call dword ptr gs:[0x10]; 
0x001236cb: and al, 8; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x0012d97b: and al, 8; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x00131453: and al, 8; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001308cb: and al, 8; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x0013291c: and al, 8; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00192a08: and al, 8; mov eax, 0x75; mov ebx, 3; call dword ptr gs:[0x10]; 
0x0013058b: and al, 8; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x0012956b: and al, 8; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x0013066b: and al, 8; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x0013069b: and al, 8; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x0010c18b: and al, 8; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x001309bb: and al, 8; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000eab5b: and al, 8; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x0011f09b: and al, 8; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x0011511b: and al, 8; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000f0acb: and al, 8; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000f0a9b: and al, 8; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x001146fb: and al, 8; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x0012883b: and al, 8; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x0012875b: and al, 8; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x001154af: and al, 8; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0012845b: and al, 8; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x0012848b: and al, 8; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x0012492b: and al, 8; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x000998fd: and al, 8; mov eax, 0xf0; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009039a: and al, 8; mov eax, dword ptr [eax + 8]; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0008c96a: and al, 8; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x0018977a: and al, 8; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x00097f6a: and al, 8; mov eax, dword ptr [eax]; and eax, 0xf000dff; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0009287a: and al, 8; mov eax, dword ptr [eax]; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00097f2a: and al, 8; mov eax, dword ptr [eax]; shr eax, 0x1f; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000311ca: and al, 8; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x001313bc: and al, 8; mov eax, dword ptr [esp + 0x38]; mov dword ptr [esp + 0xc], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0003bdc5: and al, 8; mov eax, dword ptr [esp + 0xc]; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0017a8de: and al, 8; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x30]; add eax, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x00189796: and al, 8; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + edx*4]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x00131259: and al, 8; mov ebx, 5; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00140387: and al, 8; mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; 
0x00140387: and al, 8; mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; pop ebx; ret; 
0x00130894: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x00130c14: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x0012ed04: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x0011fd14: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x00130c44: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x00130cb4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x00130ce4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x00130d14: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x00130784: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x1ae; call dword ptr gs:[0x10]; 
0x00130a14: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x1b2; call dword ptr gs:[0x10]; 
0x00130b14: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x1c0; call dword ptr gs:[0x10]; 
0x0003c954: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x0010c314: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x0012b624: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x0012b834: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x001296b4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x00114ef4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x0012b384: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x001305d4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x001157b4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x00128ab4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x00129664: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x0010c154: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x0010be44: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x0012d9c4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x00130604: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x00130634: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x0003cf94: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000efa94: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x00130a74: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x0012adb4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x001284b4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x00124954: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x00094e97: and al, 8; mov ebx, ebp; mov esi, 8; call dword ptr gs:[0x10]; 
0x0003bd42: and al, 8; mov ecx, 0xffefffff; sub ecx, eax; xor eax, ecx; shr eax, 0x1f; ret; 
0x0003c997: and al, 8; mov ecx, 8; call dword ptr gs:[0x10]; 
0x000967c1: and al, 8; mov ecx, dword ptr [eax]; mov eax, 0xf0; not ecx; and ecx, 0x80; call dword ptr gs:[0x10]; 
0x0018876a: and al, 8; mov ecx, dword ptr [eax]; test ecx, ecx; jne 0x188778; ret; 
0x001989a8: and al, 8; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x0013360d: and al, 8; mov ecx, dword ptr [esp + 0x30]; mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x00099b57: and al, 8; mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x000907b6: and al, 8; mov ecx, dword ptr [esp + 4]; mov eax, 0x16; cmp edx, 2; jbe 0x907d0; ret; 
0x000912af: and al, 8; mov edx, 0x7fffffff; xor esi, esi; add ebx, eax; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000915d6: and al, 8; mov edx, 1; xor esi, esi; lea ebx, [edi + eax + 0x28]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000c4d6a: and al, 8; mov edx, dword ptr [eax]; cmp ecx, edx; jne 0xc4d8a; ret; 
0x00129a3f: and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x0012a36f: and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000fb70f: and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000fb8cf: and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x0007c15d: and al, 8; mov edx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x00122c9d: and al, 8; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x122cb7; add esp, 0x1c; ret; 
0x0013268e: and al, 8; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x1326a1; add esp, 0x1c; ret; 
0x0003df21: and al, 8; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x3df34; add esp, 0x1c; ret; 
0x0005ad9f: and al, 8; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x5adbf; add esp, 0x1c; ret; 
0x000347c6: and al, 8; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x000347e6: and al, 8; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0003c4fd: and al, 8; mov esp, ecx; jmp edx; 
0x0010cccd: and al, 8; mov word ptr [eax], dx; xor eax, eax; ret; 
0x00117a5a: and al, 8; mov word ptr [edx + 0x3e], ax; xor eax, eax; ret; 
0x001194fa: and al, 8; mov word ptr [edx + 0x42], ax; xor eax, eax; ret; 
0x001287ba: and al, 8; movzx ecx, al; shrd eax, edx, 0xc; xor al, al; or eax, ecx; ret; 
0x00094845: and al, 8; not eax; lea eax, [eax*8 + 6]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000908da: and al, 8; or dword ptr [eax + 8], 8; mov dword ptr [eax + 0x10], edx; xor eax, eax; ret; 
0x0007c0a5: and al, 8; pop ebx; jmp eax; 
0x000815fe: and al, 8; pop ebx; ret; 
0x000c2539: and al, 8; pop edi; ret; 
0x000bd624: and al, 8; pop esi; ret; 
0x00041285: and al, 8; push dword ptr [esi]; push dword ptr [edi]; mov eax, dword ptr [esp + 0x10]; call eax; 
0x00089823: and al, 8; push dword ptr [esp + 8]; push esi; call dword ptr [ebx + 0x40]; 
0x0007b2a8: and al, 8; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x00087fe4: and al, 8; push eax; push esi; call dword ptr [edi + 0x48]; 
0x000f800d: and al, 8; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x00089827: and al, 8; push esi; call dword ptr [ebx + 0x40]; 
0x00170c1a: and al, 8; push esi; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x18]; 
0x000410a0: and al, 8; push esi; push edi; mov eax, dword ptr [esp + 0x10]; call eax; 
0x00034831: and al, 8; ret; 
0x00141d60: and al, 8; shl edx, 4; add edx, 8; cmp dword ptr [esp + 8], 0x80; cmovb eax, edx; ret; 
0x00095ab4: and al, 8; shr eax, 0x13; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0009aa1c: and al, 8; shr eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0016fa36: and al, 8; sub esp, 8; mov dword ptr [ebx], eax; push dword ptr [ebx + 8]; push esi; call dword ptr [ebx + 0xc]; 
0x00028386: and al, 8; test dl, dl; movzx eax, dl; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x0012d00a: and al, 8; test eax, eax; je 0x12d014; test edx, edx; jne 0x12d018; ret; 
0x0012d6a6: and al, 8; test eax, eax; jne 0x12d6f0; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x0008e794: and al, 8; test edx, edx; je 0x8e7a8; mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x000dbe07: and al, 8; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x0011fcd7: and al, 8; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x000e75f7: and al, 8; xor ecx, ecx; mov eax, 0x196; not ebx; lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x000908bd: and al, 8; xor ecx, ecx; or dword ptr [edx + 8], 8; mov dword ptr [edx + 0x10], eax; mov eax, ecx; ret; 
0x00093f29: and al, 8; xor edx, edx; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x000938a9: and al, 8; xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x0008f3b7: and al, 9; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; ret; 
0x0008f36b: and al, 9; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0019986b: and al, byte ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0003b973: and al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x000aa33a: and al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0003c041: and al, byte ptr [eax]; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x00171174: and al, byte ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00170f88: and al, byte ptr [eax]; add byte ptr [ebx - 0x7f], dl; ret; 
0x0011164d: and al, byte ptr [ebp + 0x1840fdb]; add dword ptr [eax], eax; add byte ptr [ebx - 0x6af0fe05], al; ret; 
0x0018674d: and al, byte ptr [ebx + 0x505208ec]; call dword ptr [ebx + 0x28]; 
0x00040185: and al, byte ptr [ebx + 0x5e5b14c4]; ret; 
0x00092bd4: and al, byte ptr [ebx + 0x5e5b30c4]; pop edi; ret; 
0x0019addc: and al, byte ptr [ebx - 0x167cfb11]; add al, 0x83; ljmp 0xf702:0x89078b04; ret 0xf; 
0x0019dedc: and al, byte ptr [ebx - 0x167cfb12]; add al, 0x83; ljmp 0xf702:0x89068b04; ret 0xf; 
0x0015611d: and al, byte ptr [ebx - 0xf76fb3c]; pop ebx; pop esi; ret; 
0x0008826a: and al, byte ptr [ecx]; add byte ptr [eax], al; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x00042145: and al, ch; adc eax, 0x83ffffff; les edx, ptr [eax]; add esp, 8; pop ebx; ret; 
0x001371c7: and al, ch; cmp edx, -1; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x001179d6: and al, ch; inc esp; int 0xff; jmp dword ptr [ebp - 0x5f]; 
0x00119476: and al, ch; movsb byte ptr es:[edi], byte ptr [esi]; mov dl, 0xff; jmp dword ptr [ebp - 0x5f]; 
0x00147f18: and al, ch; ret 0xa6; 
0x000bd601: and al, ch; sub al, dh; or al, 0; add ecx, 0x10f96d; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0017baab: and bh, ah; jmp dword ptr [esi - 0x70]; 
0x00107e16: and bh, al; add byte ptr [eax], al; add byte ptr [eax], al; add cl, ch; ret; 
0x00197bd5: and bh, bh; inc dword ptr [ecx + 0x43c58c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00197b1e: and bh, bh; inc dword ptr [ecx + 0x43d0fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001979ce: and bh, bh; inc dword ptr [ecx + 0x43e5fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00197935: and bh, bh; inc dword ptr [ecx + 0x43ef8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00045434: and bh, bh; je 0x4545c; adc al, ch; ret 0x165; 
0x0011b246: and bh, bh; xor al, 8; push edx; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x001898f3: and bh, byte ptr [eax + 4]; add esp, 0xc; ret; 
0x0016ba78: and bh, ch; jmp dword ptr [esi - 0x70]; 
0x000875c9: and bh, cl; ret; 
0x000ffbaa: and bh, dh; adc bh, dh; push eax; add al, 0x83; ror byte ptr [eax], 0x39; ret 0xf475; 
0x0013e05a: and bh, dh; dec dword ptr [ebp - 0x7417ff8a]; out 0xff, eax; jmp dword ptr [esi - 0x70]; 
0x0015ba3e: and bh, dh; jmp dword ptr [esi - 0x70]; 
0x0014b3c9: and bl, ch; mov al, 0xe8; das; sub edi, edi; jmp dword ptr [esi - 0x70]; 
0x0003a69e: and byte ptr [eax + 0x3544b60f], dl; dec dword ptr [eax - 0x49f0f5fc]; inc esp; xor eax, 0xfc08400; xchg ebp, eax; ret; 
0x00122d02: and byte ptr [eax + 0x36], bh; mov ecx, 0x5409; mov edx, 1; call dword ptr gs:[0x10]; 
0x000247cd: and byte ptr [eax + 0x59], 0xf9; call dword ptr [eax - 1]; 
0x00124da1: and byte ptr [eax + 0x76], bh; call dword ptr gs:[0x10]; 
0x00124851: and byte ptr [eax + 0x94], bh; call dword ptr gs:[0x10]; 
0x0003d8a8: and byte ptr [eax + 0xb2], bh; call dword ptr gs:[0x10]; 
0x0003c9f1: and byte ptr [eax + 0xb3], bh; mov ecx, 8; call dword ptr gs:[0x10]; 
0x0011e65d: and byte ptr [eax + 0xb7], bh; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00121ccf: and byte ptr [eax + 0xdd], bh; call dword ptr gs:[0x10]; 
0x00114741: and byte ptr [eax + 6], bh; call dword ptr gs:[0x10]; 
0x0002555f: and byte ptr [eax + eax + 0x3650000], 5; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x001999cb: and byte ptr [eax + eax], al; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00090c6d: and byte ptr [eax + edx - 0x7d], dh; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000d884c: and byte ptr [eax - 0x7274000b], bh; ror cl, 0xff; dec dword ptr [ebp - 0x661f37f]; call dword ptr [eax - 0x73]; 
0x0005b54c: and byte ptr [eax - 0x73], dl; xchg byte ptr [eax], ch; jns 0x5b54c; call dword ptr [eax - 0x18]; 
0x00078ec5: and byte ptr [eax - 0x73], dl; xchg byte ptr [esi + edi*2 - 7], dh; call dword ptr [eax - 0x18]; 
0x000959c5: and byte ptr [eax - 0x76fffffe], 0x10; ret; 
0x0012dd90: and byte ptr [eax - 0x77000000], 0x44; and al, 0x6c; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x0018691a: and byte ptr [eax - 0x7afffffd], 0xc0; je 0x186930; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x30]; 
0x0004ebcb: and byte ptr [eax - 0x7bf0cf05], al; ret; 
0x001572f3: and byte ptr [eax], 0xb3; stc; call dword ptr [eax - 0x73]; 
0x000ded08: and byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp + 0x3e8c8a], cl; add byte ptr [ebp - 0x1646036e], cl; call dword ptr [ecx + 0x52]; 
0x00043293: and byte ptr [eax], al; add byte ptr [eax], al; cmove eax, edx; ret; 
0x000fb194: and byte ptr [eax], al; add byte ptr [eax], al; cmovne eax, edx; ret; 
0x000fb14e: and byte ptr [eax], al; add byte ptr [eax], al; cmp dword ptr [ecx + edx], 0x26; je 0xfb13f; mov eax, 0xffffffff; ret; 
0x000fb1a7: and byte ptr [eax], al; add byte ptr [eax], al; mov edx, 0x40; cmove eax, edx; ret; 
0x00042c42: and byte ptr [eax], al; add byte ptr [eax], al; pop ebx; sub eax, edx; ret; 
0x0014b315: and byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00135810: and byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x001456db: and byte ptr [eax], al; add byte ptr [ecx - 0x17dbdba4], cl; rcr edx, 0xed; dec dword ptr [ecx - 0x76d3dbbc]; ret; 
0x00104319: and byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x430f; 
0x0010df70: and byte ptr [eax], al; add byte ptr [edi], cl; dec esi; ret 0x15e9; 
0x0002f54c: and byte ptr [eax], al; mov eax, dword ptr [eax + 0x10e0]; ret; 
0x0003486c: and byte ptr [eax], al; mov eax, dword ptr [eax + 0x1d0]; add eax, dword ptr gs:[0]; ret; 
0x0003d4cc: and byte ptr [eax], al; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x0003d4ac: and byte ptr [eax], al; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x0003488c: and byte ptr [eax], al; mov eax, dword ptr [eax + 0x94]; add eax, dword ptr gs:[0]; ret; 
0x0003484c: and byte ptr [eax], al; mov eax, dword ptr [eax + 0x9c]; add eax, dword ptr gs:[0]; ret; 
0x0003c98d: and byte ptr [eax], al; push ebx; mov eax, 0xb0; mov ebx, dword ptr [esp + 8]; mov ecx, 8; call dword ptr gs:[0x10]; 
0x00087b49: and byte ptr [eax], dl; add byte ptr [ecx + 0x1b72c8c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x001a9b47: and byte ptr [ebp + 0x46], dh; test dh, 0x40; jne 0x1a9b94; add eax, 0xf; ret; 
0x0005e788: and byte ptr [ebp + 0x4f850fc9], al; add dword ptr [eax], eax; add dh, dh; ret 0xf50; 
0x0016ef94: and byte ptr [ebp + 0x50], dl; call dword ptr [ecx + 8]; 
0x00050bdf: and byte ptr [ebp + 0x5e840fc0], al; add al, 0; add byte ptr [ebx - 0x7cdfdb84], cl; jmp dword ptr [eax]; 
0x001a9b07: and byte ptr [ebp + 0x66], dh; test dl, 0x40; jne 0x1a9b74; add eax, 7; ret; 
0x000483c2: and byte ptr [ebp + 0x7ff48384], cl; clc; call dword ptr [eax + 0x52]; 
0x00177c34: and byte ptr [ebp + 0xe0249c], cl; add byte ptr [eax], al; push ebx; push eax; call dword ptr [edx + 8]; 
0x000ac08c: and byte ptr [ebp + 1], 0; add esp, 0x18; pop ebx; ret; 
0x001a6552: and byte ptr [ebp + 3], bl; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014c6c8: and byte ptr [ebp + esi*8 + 0x3c], dh; or dword ptr [ecx + esi*8 - 0x7c], esi; ror byte ptr [eax + 0xf10244c], 0x94; ret 0xa3c; 
0x0014c898: and byte ptr [ebp + esi*8 + 0x3c], dh; or dword ptr [ecx + esi*8 - 0x7d], esi; in al, dx; or byte ptr [ebp - 0x6d1a87b], cl; call dword ptr [eax + 0x53]; 
0x00148d59: and byte ptr [ebp - 0x17fbdbac], cl; mov ebp, 0x89fffffd; ret 0xffb8; 
0x000297b3: and byte ptr [ebp - 0x297af013], al; add eax, dword ptr [eax]; add byte ptr [ebx - 0x74f3db94], cl; inc ebp; add dh, dh; ret; 
0x0012524b: and byte ptr [ebp - 0x3dbbf040], al; ret; 
0x0017141c: and byte ptr [ebp - 0x3fceff8a], cl; ret; 
0x00121d03: and byte ptr [ebp - 0x47fbdbac], cl; fld qword ptr [eax]; add byte ptr [eax], al; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x0008e737: and byte ptr [ebp - 0x5d], ah; jl 0x8e73c; add byte ptr [eax], al; ret; 
0x0015a666: and byte ptr [ebp - 0x64c5380], cl; call dword ptr [eax - 0x18]; 
0x00138e82: and byte ptr [ebp - 0x656eb79], cl; call dword ptr [eax - 0x73]; 
0x00138e5f: and byte ptr [ebp - 0x656f779], cl; call dword ptr [eax - 0x73]; 
0x000a274c: and byte ptr [ebp - 0x6708380], cl; call dword ptr [eax - 0x18]; 
0x00024980: and byte ptr [ebp - 0x69c1180], cl; call dword ptr [eax - 0x18]; 
0x0015a0c0: and byte ptr [ebp - 0x6a13180], cl; call dword ptr [eax + 0x55]; 
0x0015a085: and byte ptr [ebp - 0x6a13a80], cl; call dword ptr [eax + 0x55]; 
0x001479e3: and byte ptr [ebp - 0x6a5c07d], cl; call dword ptr [eax + 0x51]; 
0x00136aaa: and byte ptr [ebp - 0x6aa9980], cl; call dword ptr [eax - 1]; 
0x0015a627: and byte ptr [ebp - 0x6cad87d], cl; call dword ptr [eax - 0x18]; 
0x00048961: and byte ptr [ebp - 0x6d07880], cl; call dword ptr [eax + 0x56]; 
0x00026142: and byte ptr [ebp - 0x720d8b2e], al; nop; in al, dx; outsd dx, dword ptr [esi]; stc; call dword ptr [edx - 0x73]; 
0x000270af: and byte ptr [ebp - 0x72178b40], al; xchg ah, ch; outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x000a0470: and byte ptr [ebp - 0x748c8b40], al; dec esp; and al, 0x64; lea esi, [esp + 0x2c]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x0016f7af: and byte ptr [ebp - 0x76c88b40], al; ret; 
0x000bafe7: and byte ptr [ebp - 0x7af0df81], cl; das; add eax, 0x5e5f0000; pop ebx; ret; 
0x000b9944: and byte ptr [ebp - 0x7af0df81], cl; rol byte ptr [eax + eax], cl; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0016eee3: and byte ptr [ebp - 0x7b7bf02e], al; add byte ptr [eax], al; add byte ptr [ecx - 0x7cfbdbac], cl; in al, dx; or al, 0x50; call dword ptr [ecx + 0xc]; 
0x0014a238: and byte ptr [ebp - 0x7cc48740], al; in al, dx; add al, 0x89; ret; 
0x0016f7d9: and byte ptr [ebp - 0x7ccd8a40], al; in al, dx; or al, 0x8b; inc ebx; add al, 0x53; call dword ptr [eax + 0x10]; 
0x0016f606: and byte ptr [ebp - 0x7ce28a40], al; in al, dx; or al, 0x8b; inc ebx; add al, 0x53; call dword ptr [eax + 0x10]; 
0x000a900b: and byte ptr [ebp - 0x7cffd98c], cl; ret 0x3901; 
0x000d1ded: and byte ptr [ebp - 0x7d368], cl; call dword ptr [ebx - 1]; 
0x000d1c86: and byte ptr [ebp - 0x7d380], cl; call dword ptr [eax - 1]; 
0x00167f25: and byte ptr [ebp - 0xd5d4380], cl; call dword ptr [eax - 1]; 
0x00165525: and byte ptr [ebp - 0xd9b8380], cl; call dword ptr [eax - 1]; 
0x0015f490: and byte ptr [ebp - 0xe25737a], cl; call dword ptr [eax + 0x6a]; 
0x0015ec61: and byte ptr [ebp - 0xe257380], cl; call dword ptr [eax + 0x6a]; 
0x0015ade5: and byte ptr [ebp - 0xe33b380], cl; call dword ptr [eax - 1]; 
0x00158cd5: and byte ptr [ebp - 0xe649380], cl; call dword ptr [eax - 1]; 
0x00037ea5: and byte ptr [ebp - 7], dh; jmp dword ptr [esi - 0x77]; 
0x0013e3fa: and byte ptr [ebp - 8], 0xff; add esp, 0x18; pop ebx; ret; 
0x00126465: and byte ptr [ebp], al; add al, ch; push edx; ret; 
0x000621bb: and byte ptr [ebx + 0x1ba10c4], al; add byte ptr [eax], al; add byte ptr [ebp + 0x290578c9], al; fisttp qword ptr [edi]; xchg ebp, eax; ret 0x448b; 
0x001630af: and byte ptr [ebx + 0x237f01fa], al; add esp, 0x18; pop ebx; ret; 
0x000a6af6: and byte ptr [ebx + 0x28], 0xfe; mov dword ptr [ebx + 0x18], ebp; mov dword ptr [ebx + 0x20], esi; mov dword ptr [ebx], eax; push eax; call ecx; 
0x00054abe: and byte ptr [ebx + 0x290c2454], cl; ret; 
0x000c08fe: and byte ptr [ebx + 0x2ae820c0], al; xchg ebx, eax; or al, 0; add ecx, 0x10c6ed; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0006488c: and byte ptr [ebx + 0x3182444], cl; test byte ptr [esi - 0x73e94], dl; jmp eax; 
0x00149e4b: and byte ptr [ebx + 0x420f1afe], al; ret 0xb60f; 
0x000892d8: and byte ptr [ebx + 0x538b1443], cl; adc byte ptr [ecx], bh; ret 0x2773; 
0x0018bbb8: and byte ptr [ebx + 0x568b1446], cl; adc byte ptr [ecx], bh; ret 0x4d72; 
0x0007c0fe: and byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0005a1d7: and byte ptr [ebx + 0x5e5b08c4], al; pop edi; pop ebp; ret; 
0x0008b6ab: and byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; jmp eax; 
0x000420cf: and byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x00041ac7: and byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0008a42b: and byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; jmp eax; 
0x00060b49: and byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x00083ef6: and byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x0005390c: and byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret; 
0x000a0602: and byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; ret; 
0x000fd32b: and byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000255e5: and byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00126b11: and byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x126b23; add esp, 0x1c; ret; 
0x0014b37b: and byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x14b3cc; add esp, 0x1c; ret; 
0x00176b27: and byte ptr [ebx + 0x73ff5043], cl; dec eax; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x0017bacb: and byte ptr [ebx + 0x74c08503], cl; jle 0x17bb04; rol byte ptr [ebx - 0x6bf0fd08], cl; ret 0xf883; 
0x0017bbcb: and byte ptr [ebx + 0x74c08503], cl; jle 0x17bc04; rol byte ptr [ebx - 0x6bf0fd08], cl; ret 0xf883; 
0x0004faa8: and byte ptr [ebx + 0xf242454], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000c3e6e: and byte ptr [ebx + ebx*4], 0xf9; call dword ptr [eax - 0x18]; 
0x0014b602: and byte ptr [ebx + ebx*8 - 0x77], dh; fisubr dword ptr [ecx]; ret 0x7e8b; 
0x0003ea32: and byte ptr [ebx + esi - 0x77], dh; ret 0xc083; 
0x0013b60b: and byte ptr [ebx - 0x137ce3ad], cl; add al, 0x83; ret; 
0x0013b10f: and byte ptr [ebx - 0x137ce785], cl; add al, 0x83; ret; 
0x001127cc: and byte ptr [ebx - 0x178bdbbc], cl; dec edx; ret; 
0x0013de57: and byte ptr [ebx - 0x18], dl; ret 0xf84f; 
0x00178f42: and byte ptr [ebx - 0x2776db3c], al; pop ebx; pop esi; ret; 
0x001373c5: and byte ptr [ebx - 0x2a8cfe12], al; add esp, 4; pop ebx; pop esi; ret; 
0x000afa3c: and byte ptr [ebx - 0x398af716], al; mov dword ptr [eax + 0x1c], esi; pop ebx; pop esi; ret; 
0x00088e14: and byte ptr [ebx - 0x3dd6fb14], al; push edx; push eax; push esi; call dword ptr [edi + 0x38]; 
0x00121942: and byte ptr [ebx - 0x47dbdbb4], cl; add al, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00120792: and byte ptr [ebx - 0x47dbdbb4], cl; add eax, dword ptr [eax]; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00040402: and byte ptr [ebx - 0x47dbdbb4], cl; arpl word ptr [ecx], ax; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001149c1: and byte ptr [ebx - 0x47dbdbb4], cl; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011fd62: and byte ptr [ebx - 0x47dbdbb4], cl; test al, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011e721: and byte ptr [ebx - 0x72cbdbbc], cl; and byte ptr [esi], 0x46; stc; call dword ptr [eax - 0x18]; 
0x0010db02: and byte ptr [ebx - 0x72e7dbac], cl; test al, 0xac; ret 0xffea; 
0x0012b8b3: and byte ptr [ebx - 0x74e3dbb4], cl; pop esp; and al, 0x18; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0012e1c2: and byte ptr [ebx - 0x74e7dba4], cl; jl 0x12e1ee; sub byte ptr [eax + 0x78], bh; mov dword ptr [ecx], ebx; int 0x80; 
0x00028100: and byte ptr [ebx - 0x74efdbbc], cl; adc dword ptr [ecx], eax; ret 0xc083; 
0x001b0604: and byte ptr [ebx - 0x7693dbac], cl; ret; 
0x0002c3ac: and byte ptr [ebx - 0x76dbdb84], cl; ret 0xf229; 
0x001149e8: and byte ptr [ebx - 0x76dbdbb4], cl; ret 0x8b8; 
0x0009f6ef: and byte ptr [ebx - 0x77], bl; rcr byte ptr [esi + 0x5f], 1; ret; 
0x000564f1: and byte ptr [ebx - 0x7a76f314], al; ror cl, 0xff; call dword ptr [eax - 0x18]; 
0x0012c7b1: and byte ptr [ebx - 0x7afefbb3], al; sar byte ptr [eax + 0x16], 0x8b; inc esi; add al, 0x89; ret 0xe083; 
0x000e8309: and byte ptr [ebx - 0x7cdbdb8c], cl; jmp dword ptr [ebx + 0x77]; 
0x001af993: and byte ptr [ebx - 0x7ce7dbb4], cl; ret; 
0x0013654e: and byte ptr [ebx - 0xf76fb3c], al; pop ebx; pop esi; ret; 
0x0016d092: and byte ptr [ebx - 7], 0xff; push eax; push 6; call 0x1565b0; add esp, 0x1c; ret; 
0x0010d628: and byte ptr [ecx + 0x1876fff0], cl; push dword ptr [esi + 8]; call dword ptr [eax + 0xc]; 
0x000a31d0: and byte ptr [ecx + 0x1ea29fa], cl; ret 0x9389; 
0x0011562a: and byte ptr [ecx + 0x4289247a], cl; sub byte ptr [esi + 0x5f], bl; ret; 
0x00080a6c: and byte ptr [ecx + 0x488b0448], cl; or byte ptr [ecx + 0x8508910], cl; mov dword ptr [eax + 0x20], ecx; ret; 
0x00122d38: and byte ptr [ecx + 0x5409], bh; mov edx, 1; mov edi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000db728: and byte ptr [ecx + 0x5524245c], cl; push dword ptr [esp + 0x30]; mov eax, dword ptr [esp + 0x64]; call eax; 
0x000dbb72: and byte ptr [ecx + 0x5f5e5bc8], cl; ret; 
0x0013ec79: and byte ptr [ecx + 0x5f5e5bd8], cl; ret 4; 
0x0008e25a: and byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x0007c340: and byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x00061ecb: and byte ptr [ecx + 0x5f5e5bf8], cl; ret; 
0x001781ec: and byte ptr [ecx + 0x6a], dl; push es; push eax; call dword ptr [edx + 0x14]; 
0x00114768: and byte ptr [ecx + 0x6b8c2], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00124dc8: and byte ptr [ecx + 0x76b8c2], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00124878: and byte ptr [ecx + 0x94b8c2], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00085153: and byte ptr [ecx + 0xa486], cl; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x000842c3: and byte ptr [ecx + 0xa496], cl; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x000a994b: and byte ptr [ecx + 0xfd839d6], cl; xchg edx, eax; ret; 
0x000ac8ee: and byte ptr [ecx + 0xfe839d1], cl; xchg edx, eax; ret; 
0x0003ca18: and byte ptr [ecx + 8], bh; mov edx, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x0005af9d: and byte ptr [ecx + eax], 0; push dword ptr [eax]; call 0x664c0; add esp, 0x1c; ret; 
0x000804fd: and byte ptr [ecx + eax], 0; push dword ptr [eax]; call 0x729a0; add esp, 0x1c; ret; 
0x0007158c: and byte ptr [ecx + edx + 1], dh; ret; 
0x001486d6: and byte ptr [ecx - 0x4477b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0013244b: and byte ptr [ecx - 0x72e7dbbc], cl; inc esp; and al, 0x10; mov dword ptr [esp + 0x24], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00122a30: and byte ptr [ecx - 0x74dbdbbc], cl; inc esp; and al, 0x74; lea ecx, [eax + 0x5402]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00102302: and byte ptr [ecx - 0x76f7760e], cl; fsubr st(0); mov byte ptr [0x89ffff97], al; ret 0xea83; 
0x001388ef: and byte ptr [ecx - 0x7cfe7639], cl; ret 0x8901; 
0x0002cef7: and byte ptr [ecx - 0x9c3dbbc], cl; ret 0x7501; 
0x0002ac87: and byte ptr [ecx - 0x9c7dbbc], cl; ret 0x7501; 
0x0002a157: and byte ptr [ecx - 0x9d3dbbc], cl; ret 0x7501; 
0x00179a64: and byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [ebx + 0x50510850], cl; call dword ptr [edx + 0xc]; 
0x000ea082: and byte ptr [ecx], al; lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x000c1895: and byte ptr [ecx], al; ret 0x167c; 
0x00091239: and byte ptr [ecx], al; ret 0xc889; 
0x000624cb: and byte ptr [ecx], al; ret; 
0x00140cd0: and byte ptr [ecx], al; ror byte ptr [edi], 1; inc edx; ret 0xd329; 
0x000d970d: and byte ptr [ecx], bh; dec edi; and byte ptr [edi], cl; test dword ptr [ecx + 0x5f000000], ecx; pop esi; ret; 
0x0016afb0: and byte ptr [ecx], bh; ret 0x1074; 
0x00031a72: and byte ptr [ecx], bh; ret 0x4c0f; 
0x0005e87d: and byte ptr [ecx], bh; ret 0x830f; 
0x001886ac: and byte ptr [ecx], bh; ret 0xa773; 
0x0006e26a: and byte ptr [ecx], bh; ret; 
0x00054bdc: and byte ptr [ecx], ch; ret; 
0x000834d7: and byte ptr [ecx], ch; rol byte ptr [ebx + 0x525004ec], 1; push esi; call ecx; 
0x00089770: and byte ptr [ecx], ch; rol dword ptr [ebx + 0x505104ec], 0x56; call edx; 
0x0004df1c: and byte ptr [ecx], cl; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00088680: and byte ptr [ecx], cl; ret; 
0x000eed04: and byte ptr [ecx], dh; fisttp dword ptr [ecx - 0x7cf81432]; ret; 
0x0005ae19: and byte ptr [ecx], dh; rol byte ptr [ebx - 0x6bf0fb08], cl; ret 0x48b; 
0x0005ad32: and byte ptr [edi + 0x30], 0xf9; call dword ptr [eax - 0x18]; 
0x0017410f: and byte ptr [edi + 0x50], dl; call dword ptr [ecx + 8]; 
0x001775e4: and byte ptr [edi + 0x50], dl; call dword ptr [edx + 4]; 
0x000b9ce7: and byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b0077: and byte ptr [edi + 0x5e], bl; ret; 
0x00194f52: and byte ptr [edi + 4], ah; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000ed834: and byte ptr [edi - 0x17af0007], bl; xor ch, byte ptr [eax - 0xc]; jmp dword ptr [esi - 0x70]; 
0x0019a201: and byte ptr [edi - 0x18], bl; adc eax, 0x81fffefa; ret; 
0x00199701: and byte ptr [edi - 0x18], bl; adc eax, 0x81ffff05; ret; 
0x00197001: and byte ptr [edi - 0x18], bl; adc eax, 0x81ffff2c; ret; 
0x00195001: and byte ptr [edi - 0x18], bl; adc eax, 0x81ffff4c; ret; 
0x00198111: and byte ptr [edi - 0x18], bl; add eax, 0x81ffff1b; ret; 
0x00196111: and byte ptr [edi - 0x18], bl; add eax, 0x81ffff3b; ret; 
0x001973f1: and byte ptr [edi - 0x18], bl; and eax, 0x81ffff28; ret; 
0x001953f1: and byte ptr [edi - 0x18], bl; and eax, 0x81ffff48; ret; 
0x00195151: and byte ptr [edi - 0x18], bl; lds ecx, ptr [edx - 1]; inc dword ptr [ecx + 0x46458c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00197e71: and byte ptr [edi - 0x18], bl; movsd dword ptr es:[edi], dword ptr [esi]; sbb eax, 0xc381ffff; mov eax, 0x3000439; sbb al, 0x8b; jmp ebx; 
0x00195691: and byte ptr [edi - 0x18], bl; test dword ptr [ebp - 1], eax; inc dword ptr [ecx + 0x45f18c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00199de1: and byte ptr [edi - 0x18], bl; xor eax, 0x81fffefe; ret; 
0x001992e1: and byte ptr [edi - 0x18], bl; xor eax, 0x81ffff09; ret; 
0x001977e1: and byte ptr [edi - 0x18], bl; xor eax, 0x81ffff24; ret; 
0x001957e1: and byte ptr [edi - 0x18], bl; xor eax, 0x81ffff44; ret; 
0x0014b57a: and byte ptr [edi], 0xff; jmp dword ptr [esi - 0x70]; 
0x00042904: and byte ptr [edi], cl; inc ebp; ror byte ptr [edi], 1; inc ebp; ret; 
0x00065110: and byte ptr [edi], cl; mov dh, 0x54; add ah, al; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [ecx + edx*4 - 0x73f14]; jmp eax; 
0x00066022: and byte ptr [edi], cl; mov dh, 0x54; add ah, al; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [esi + edx*4 - 0x74014]; jmp eax; 
0x000c15d2: and byte ptr [edi], cl; mov esp, 0x76c229c0; push ss; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x000a7492: and byte ptr [edi], cl; nop; ret 0xdb31; 
0x0006eef3: and byte ptr [edi], cl; test byte ptr [edi], ch; or dword ptr [eax], eax; add byte ptr [ecx], al; ret; 
0x0006f43d: and byte ptr [edi], cl; test ch, ah; add eax, dword ptr [eax]; add byte ptr [ecx], al; ret; 
0x001a9e1d: and byte ptr [edi], cl; test dword ptr [eax + eax + 0x40a80000], edi; jne 0x1a9ef0; lea eax, [edi + 7]; pop edi; ret; 
0x001ab4a9: and byte ptr [edi], cl; test dword ptr [eax - 0x58000000], esp; inc eax; jne 0x1ab560; lea eax, [edx + 7]; ret; 
0x001aa2e1: and byte ptr [edi], cl; test dword ptr [eax - 0x73000000], ecx; inc edi; hlt; pop edi; ret; 
0x001ab091: and byte ptr [edi], cl; test dword ptr [eax - 0x7d000000], ebp; ret 0xf04; 
0x001aa334: and byte ptr [edi], cl; test dword ptr [ebp - 0x73000000], edx; inc edi; cld; pop edi; ret; 
0x001ab0f4: and byte ptr [edi], cl; test dword ptr [ebp - 0x7d000000], esp; ret 0xf0c; 
0x00093994: and byte ptr [edi], cl; test dword ptr [ebx - 0x72000005], ebx; lea esp, [eax]; add al, byte ptr [eax]; add byte ptr [eax + 0x9b], bh; call dword ptr gs:[0x10]; 
0x0010d4ef: and byte ptr [edi], cl; test dword ptr [ebx], edx; add al, 0; add dh, dh; ret 0xf80; 
0x000d9710: and byte ptr [edi], cl; test dword ptr [ecx + 0x5f000000], ecx; pop esi; ret; 
0x000bafea: and byte ptr [edi], cl; test dword ptr [edi], ebp; add eax, 0x5e5f0000; pop ebx; ret; 
0x001ab8db: and byte ptr [edi], cl; test dword ptr [edx - 0x9fffffd], esi; ret 0xf40; 
0x001ab9fb: and byte ptr [edi], cl; test dword ptr [esi - 0xa000000], ebp; ret 0xf40; 
0x001a9cdc: and byte ptr [edi], cl; test ebp, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x000b9947: and byte ptr [edi], cl; test edx, edx; add al, 0; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x001b18af: and byte ptr [edi], cl; xchg ebp, eax; ret 0xb60f; 
0x001b12d5: and byte ptr [edi], cl; xchg ebp, eax; ret; 
0x000534dc: and byte ptr [edi], dl; pop es; add byte ptr [ebx - 0x3b7cef3c], al; add al, 0x5b; pop esi; ret; 
0x0010b458: and byte ptr [edx + 0x1c], 0xf9; mov dword ptr [eax], 0; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x000e04d9: and byte ptr [edx + 0x46], 0xf9; call dword ptr [eax + 0x53]; 
0x0017873b: and byte ptr [edx + 0x50], dl; call edi; 
0x0017c19d: and byte ptr [edx + 0x56], dl; call dword ptr [eax]; 
0x0009399d: and byte ptr [edx], al; add byte ptr [eax], al; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x00092acb: and byte ptr [edx], al; add byte ptr [eax], al; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0003dbd7: and byte ptr [edx], al; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x000c4814: and byte ptr [edx], ch; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x000c46f2: and byte ptr [edx], ch; push edi; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x0016ee30: and byte ptr [esi + 0x50], dl; call dword ptr [edx + 4]; 
0x00136ff0: and byte ptr [esi + 0x53], dl; mov eax, dword ptr [esp + 0x28]; call eax; 
0x00136aac: and byte ptr [esi + 0x55], 0xf9; call dword ptr [eax - 1]; 
0x001a651c: and byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3e73; 
0x000c1822: and byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x316575c0], 0xc0; ret; 
0x001aad82: and byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x71850fc0], 2; add byte ptr [eax], al; xor eax, eax; ret; 
0x0015ce67: and byte ptr [esi + eax - 0x7b], dh; ret; 
0x0010ec47: and byte ptr [esi + ebp - 0x7d], dh; ret; 
0x000a6d7f: and byte ptr [esi + ecx - 0x7d], dh; in al, dx; or byte ptr [ecx - 1], dl; jae 0xa6dad; call eax; 
0x00071787: and byte ptr [esi - 0x18], dl; ret 0x7a; 
0x0017c70d: and byte ptr [esi - 0x70], ah; xor eax, eax; ret; 
0x0011e727: and byte ptr [esi], 0x46; stc; call dword ptr [eax - 0x18]; 
0x0008e7a2: and byte ptr [esi], ch; lea esi, [esi]; ret; 
0x001aba46: and ch, 0; add byte ptr [eax], al; lea eax, [eax + 0xb]; pop edi; ret; 
0x000d99b2: and ch, 0xf; je 0xd99d0; add eax, 2; ret; 
0x000d46fc: and ch, 2; lea edx, [edx - 0x165354]; cmove eax, edx; ret; 
0x000aa2fc: and ch, 2; lea edx, [edx - 0x17c244]; cmove eax, edx; ret; 
0x000a8b3c: and ch, 2; lea edx, [edx - 0x17cc74]; cmove eax, edx; ret; 
0x000ac2bc: and ch, 2; lea edx, [edx - 0x17cf64]; cmove eax, edx; ret; 
0x000ac2fc: and ch, 2; lea edx, [edx - 0x17cfd4]; cmove eax, edx; ret; 
0x000a95ec: and ch, 2; lea edx, [edx - 0x17d054]; cmove eax, edx; ret; 
0x000a962c: and ch, 2; lea edx, [edx - 0x17d0d4]; cmove eax, edx; ret; 
0x000ac37c: and ch, 2; lea edx, [edx - 0x18f114]; cmove eax, edx; ret; 
0x0012d54a: and ch, byte ptr [ebx - 0x10]; dec dword ptr [ebp - 0x65a4f7d]; call dword ptr [eax - 0x73]; 
0x000fb12d: and ch, dh; bnd jge 0xfb160; mov eax, 0xff; cmp edx, 0x9123683e; jne 0xfb1a0; ret; 
0x00129331: and ch, dh; inc dword ptr [ebx - 0x3b7cef3c]; or byte ptr [eax + 1], bh; pop ebx; ret; 
0x000fad5a: and cl, 0x47; stc; call dword ptr [ebx + 0x50]; 
0x000d999b: and cl, 0xf; je 0xd99c0; ret; 
0x0004a68d: and cl, bl; test dword ptr [edx + eax*8], edx; stc; jmp dword ptr [ebp - 0x75]; 
0x0017a97a: and cl, byte ptr [eax - 0x3b7c0016]; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0013ece5: and cl, byte ptr [ebp - 0x655e37e]; call dword ptr [eax - 0x73]; 
0x0010ea08: and cl, byte ptr [ebx - 0x143976f1]; mov ecx, 0xa1e8838d; stc; call dword ptr [eax - 0x73]; 
0x00124d9d: and cl, byte ptr [ebx - 0x47dfdba4]; jbe 0x124da5; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0003c9ed: and cl, byte ptr [ebx - 0x47dfdba4]; mov bl, 0; add byte ptr [eax], al; mov ecx, 8; call dword ptr gs:[0x10]; 
0x001149bd: and cl, byte ptr [ebx - 0x74dfdba4]; dec esp; and al, 0x24; mov eax, 8; call dword ptr gs:[0x10]; 
0x000829ee: and cl, byte ptr [ebx - 0x7d7247ab]; xor al, 0x83; stc; call dword ptr [eax - 0x73]; 
0x0008d32d: and cl, byte ptr [edi]; mov dh, 2; pop ebx; pop esi; ret; 
0x000cb1c9: and cl, ch; ret 3; 
0x0011455e: and dh, 0x49; stc; call dword ptr [eax - 0x18]; 
0x00151fe9: and dh, ch; dec dword ptr [ebx - 0x72f3dbac]; sub byte ptr [eax - 0x50], 0xf9; call dword ptr [eax + 0x68]; 
0x00114e23: and dh, dh; ret 0x7549; 
0x0005ffef: and dh, dh; ret 0xf50; 
0x00120bf6: and dl, ah; adc dword ptr [eax], eax; push ebx; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x001794a1: and dword ptr [eax + 0x5b000001], 0x5e; pop edi; ret; 
0x00090804: and dword ptr [eax + 8], 0xfffffffb; xor eax, eax; ret; 
0x000906c5: and dword ptr [eax + 8], 0xfffffffe; xor eax, eax; ret; 
0x00199904: and dword ptr [eax + eax], eax; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0005b530: and dword ptr [eax - 0x73], edx; xchg byte ptr [eax + 0x79], ah; stc; call dword ptr [eax - 0x18]; 
0x0013ecab: and dword ptr [eax - 0x73], edx; xchg esi, eax; push edi; stc; call dword ptr [eax - 0x18]; 
0x00185ab1: and dword ptr [eax - 0x7cffff56], 0xffffffec; or al, 0x8d; sbb esp, -0x46; stc; call dword ptr [eax - 0x18]; 
0x00135ade: and dword ptr [eax], 0x5b1cc483; pop esi; pop edi; pop ebp; ret; 
0x00033411: and dword ptr [eax], 0x5b; mov eax, edx; ret; 
0x00098060: and dword ptr [eax], 0x7fffffff; xor eax, eax; ret; 
0x000980b0: and dword ptr [eax], 0xbfffffff; xor eax, eax; ret; 
0x000ebafb: and dword ptr [eax], 0xffffff9f; stc; call dword ptr [eax - 0x18]; 
0x000ed833: and dword ptr [eax], 0xffffff9f; stc; call dword ptr [eax - 0x18]; xor ch, byte ptr [eax - 0xc]; jmp dword ptr [esi - 0x70]; 
0x0016276e: and dword ptr [eax], 0xffffffa2; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x0012d4d3: and dword ptr [eax], 0xffffffa5; stc; call dword ptr [eax - 0x18]; 
0x000875c8: and dword ptr [eax], 0xffffffcf; ret; 
0x00114641: and dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001a3a0e: and dword ptr [eax], eax; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00139caa: and dword ptr [eax], eax; add byte ptr [ebx - 0xaff33c], al; jne 0x139c58; push ebx; call dword ptr [esi + 0x14]; 
0x00024fbc: and dword ptr [eax], eax; lea eax, [eax - 0x690ac]; ret; 
0x00024fdc: and dword ptr [eax], eax; lea eax, [eax - 0x690b4]; ret; 
0x000260ac: and dword ptr [eax], eax; mov eax, dword ptr [eax + 0x10b8]; ret; 
0x000260cc: and dword ptr [eax], eax; mov eax, dword ptr [eax + 0x10bc]; ret; 
0x0002555c: and dword ptr [eax], eax; mov eax, dword ptr [eax + 0xa4]; add eax, dword ptr gs:[0]; ret; 
0x00024b6c: and dword ptr [eax], eax; mov edx, dword ptr [eax + 0x118]; test edx, edx; je 0x24b79; ret; 
0x000607c7: and dword ptr [ebp + 0x32], 0xfffffff9; call dword ptr [ecx + 0x50]; 
0x000fcfe3: and dword ptr [ebp + 0xf002674], ecx; xchg esp, eax; ret; 
0x00095901: and dword ptr [ebp + 4], esi; add dword ptr [edx + 4], 1; add esp, 0xc; ret; 
0x00040008: and dword ptr [ebp - 0x6d3237b], ecx; dec dword ptr [ecx - 0x76fbdbbc]; ret; 
0x0008f31c: and dword ptr [ebp - 1], 0x1015; add byte ptr [ebx + 0x5e], bl; ret; 
0x00188846: and dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x0017cd9f: and dword ptr [ebx + 0x5e5b10c4], eax; pop edi; ret; 
0x00082163: and dword ptr [ebx + 0x5e5b1cc4], eax; pop edi; pop ebp; ret; 
0x00140441: and dword ptr [ebx + 0x5e5b20c4], eax; pop edi; ret; 
0x000dea07: and dword ptr [ebx + 0x5e5b24c4], eax; ret; 
0x0009cf26: and dword ptr [ebx + 0x5e], ebx; mov dword ptr [ecx + 0x10], eax; mov dword ptr [edx + 0x3ba8], ecx; ret; 
0x000819a8: and dword ptr [ebx + eax*4], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x0002f4f0: and dword ptr [ebx - 0x17acf314], eax; jbe 0x2f572; adc eax, 0x24348900; call ebx; 
0x0013ec76: and dword ptr [ebx - 0x2776df3c], eax; pop ebx; pop esi; pop edi; ret 4; 
0x00066c41: and dword ptr [ebx - 0x5af7b], ecx; dec dword ptr [ebx + 0x40f63440]; jmp dword ptr [eax]; 
0x0008157f: and dword ptr [ebx], 0xffffffef; add esp, 4; pop ebx; pop esi; ret; 
0x00091929: and dword ptr [ebx], 0xfffffffe; mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00165914: and dword ptr [ecx + 0x61], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x001244ac: and dword ptr [ecx + eax*8], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0008f3b6: and dword ptr [ecx + ecx], 0; add byte ptr [eax], al; pop ebx; ret; 
0x0017b7ad: and dword ptr [ecx + edi*8 - 1], 0x4c878d50; je 0x17b7b0; call dword ptr [eax - 0x18]; ret 0xeb96; 
0x0017c461: and dword ptr [ecx + edi*8 - 1], 0x8d50056a; test dword ptr [esp + esi*2 - 7], ecx; call dword ptr [eax - 0x18]; 
0x0005df4b: and dword ptr [ecx - 3], esp; dec dword ptr [ebx - 0x8b63]; dec dword ptr [ebp - 0x684677d]; call dword ptr [eax - 0x73]; 
0x0015720e: and dword ptr [ecx], esi; leave; cmp eax, 2; jne 0x157220; mov eax, ecx; ret; 
0x000c21d9: and dword ptr [edi + 0x1c030010], ebp; mov eax, dword ptr [ecx]; retf 0xce01; jmp ebx; 
0x000dd387: and dword ptr [edi + 0x29], 0xfffffff9; call dword ptr [eax + 0x56]; 
0x001262b7: and dword ptr [edi + 0x29], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x0013d99b: and dword ptr [edi + 0x29], 0xfffffff9; jmp dword ptr [ebp - 0x75]; 
0x0015d08e: and dword ptr [edi + 0x5f], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00156c68: and dword ptr [edi], 0x35; stc; call dword ptr [eax + 0x52]; 
0x0015a629: and dword ptr [edi], 0x35; stc; call dword ptr [eax - 0x18]; 
0x0013d9b1: and dword ptr [edi], 0x40; stc; call dword ptr [eax - 0x18]; 
0x0004011d: and dword ptr [edi], ebp; stc; dec dword ptr [ecx - 0x76ebdbac]; ret; 
0x00042aa6: and dword ptr [edi], ecx; mov ebp, 0x1ff283d1; mov eax, 0x40; pop ebx; sub eax, edx; ret; 
0x00178c67: and dword ptr [edx + 0x65], 0xfffffff9; call dword ptr [eax + 0x6a]; 
0x00090837: and dword ptr [edx + 0xc], 0xfffffffe; add esp, 8; pop ebx; ret; 
0x00090830: and dword ptr [edx + 8], 0x7fffffff; and dword ptr [edx + 0xc], 0xfffffffe; add esp, 8; pop ebx; ret; 
0x00189cc0: and dword ptr [edx + eax*4], ebx; xor eax, eax; pop ebx; ret; 
0x0003d1c8: and dword ptr [edx + ebx*4], eax; xor eax, eax; pop ebx; ret; 
0x00153fde: and dword ptr [edx + esi*4], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x001a962b: and dword ptr [edx], eax; add byte ptr [eax], al; pop ebx; ret; 
0x0012708d: and dword ptr [esi + 0x4e], 0xfffffff9; call dword ptr [eax + 0x55]; 
0x000dd2fc: and dword ptr [esi + eax*2], 0xfffffff9; call dword ptr [eax + 0x56]; 
0x00060934: and dword ptr [esi], 0x32; stc; call dword ptr [ebp + 0x50]; 
0x0011c154: and dword ptr [esi], 0x46; stc; call dword ptr [eax - 0x18]; 
0x0003e7a1: and dword ptr [esi], 0x46; stc; jmp dword ptr [esi - 0x77]; 
0x00147ca2: and dword ptr [esi], 0x5a; stc; call dword ptr [eax + 0x68]; 
0x00081525: and dword ptr [esi], 0xffffffef; pop ebx; pop esi; pop edi; ret; 
0x0008f979: and dword ptr [esp + ecx - 0x7d], esi; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x00034506: and eax, 0x1000; ret; 
0x000605ab: and eax, 0x100; or eax, 7; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x000344d6: and eax, 0x100; ret; 
0x001227db: and eax, 0x100f; ret; 
0x001aa520: and eax, 0x1f; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x001aa550: and eax, 0x1ff; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x001aa580: and eax, 0x1fff; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x000344a6: and eax, 0x2000; ret; 
0x000343e6: and eax, 0x200; ret; 
0x0008e856: and eax, 0x39; cmp eax, 8; je 0x8e863; add esp, 8; pop ebx; ret; 
0x0008f1be: and eax, 0x39; cmp eax, 8; je 0x8f1cb; add esp, 8; pop ebx; ret; 
0x0009a5f1: and eax, 0x39; cmp eax, 8; je 0x9a5fa; ret; 
0x001b2f5e: and eax, 0x3d660c00; add byte ptr [edi + ecx], al; test byte ptr [0x66000005], bl; cmp eax, 0x840f0800; ret; 
0x001aa530: and eax, 0x3f; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x001aa560: and eax, 0x3ff; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x001aa590: and eax, 0x3fff; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x00034446: and eax, 0x4000; ret; 
0x00034356: and eax, 0x400; ret; 
0x0008b4d2: and eax, 0x530cec83; call dword ptr [esi + 0x10]; 
0x001576e2: and eax, 0x5b08c483; ret; 
0x00122c43: and eax, 0x5b30c483; pop esi; pop edi; ret; 
0x00166fa9: and eax, 0x61; stc; call dword ptr [eax - 0x18]; 
0x0003002b: and eax, 0x72; stc; call dword ptr [eax - 0x73]; 
0x001aa540: and eax, 0x7f; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x00034648: and eax, 0x7f; ret; 
0x001aa570: and eax, 0x7ff; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x001aa5a0: and eax, 0x7fff; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x001238b5: and eax, 0x80000000; pop ebx; pop esi; add eax, ecx; adc edx, 0; ret; 
0x0003b8e8: and eax, 0x80000000; ret; 
0x00034416: and eax, 0x8000; ret; 
0x000343b6: and eax, 0x800; ret; 
0x0008683a: and eax, 0x804; ret; 
0x001973f4: and eax, 0x81ffff28; ret; 
0x001953f4: and eax, 0x81ffff48; ret; 
0x00070337: and eax, 0x8300054a; les ecx, ptr [ecx + ecx*4]; ret; 
0x000d2952: and eax, 0x83240401; ret; 
0x00171577: and eax, 0x83ffeb1c; les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x000ffd77: and eax, 0x83fff234; les edx, ptr [eax]; xor eax, eax; add esp, 8; pop ebx; ret; 
0x00148375: and eax, 0x89000001; ret 0xe283; 
0x000ba86f: and eax, 0xc030011; xchg ecx, eax; jmp ecx; 
0x00046fe3: and eax, 0xc27485dd; stc; jmp dword ptr [ebp - 0x75]; 
0x00197695: and eax, 0xc381ffff; cwde; inc ecx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0017ed7d: and eax, 0xc4830000; adc byte ptr [ecx], bh; ret; 
0x00062011: and eax, 0xcb878d50; xor bh, cl; call dword ptr [eax - 0x18]; 
0x00098036: and eax, 0xcfffffff; or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x0010f695: and eax, 0xe8831f8b; add dword ptr [ecx], eax; ret; 
0x000b8147: and eax, 0xe9fffff5; pushal; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000b3c57: and eax, 0xe9fffff6; pushal; idiv edi; jmp dword ptr [esi + 0xf]; 
0x00097f6e: and eax, 0xf000dff; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x001ace6f: and eax, 0xf0f0f0f; add eax, edx; imul eax, eax, 0x1010101; shr eax, 0x18; ret; 
0x001acdfd: and eax, 0xf0f0f0f; imul eax, eax, 0x1010101; shr eax, 0x18; ret; 
0x001aa43a: and eax, 0xf; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x001aa46b: and eax, 0xff; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x001aa4a2: and eax, 0xfff; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x000648b8: and eax, 0xfffb62e9; jmp dword ptr [esi - 0x70]; 
0x001aa4db: and eax, 0xffff; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x00122840: and eax, 0xffffeff0; or eax, edx; mov dword ptr [ecx + 8], eax; xor eax, eax; pop ebx; ret; 
0x0012879e: and eax, 0xfffff000; or eax, edx; ret; 
0x00142108: and eax, 0xffffff; or eax, edx; bswap eax; mov dword ptr [ecx], eax; mov eax, ecx; ret 4; 
0x001420e0: and eax, 0xffffff; ret; 
0x00084450: and eax, 0xffffffcf; mov dword ptr [ebx], eax; pop ebx; pop esi; pop edi; ret; 
0x0012393d: and eax, 0xfffffff0; add eax, 0x26; mov edx, dword ptr [edx + 0xa4]; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; ret; 
0x000a08ea: and eax, 0xfffffff0; sub eax, 1; shr eax, 4; add eax, 1; mov dword ptr [edx + 0x388], eax; ret; 
0x00141aeb: and eax, 0xfffffff8; add eax, 0xc; ret; 
0x0017079c: and eax, 0xfffffffc; lea eax, [eax + edx + 0x28]; push eax; push edi; call dword ptr [ecx + 0x18]; 
0x00170894: and eax, 0xfffffffc; push eax; push edi; call dword ptr [edx + 0x18]; 
0x00091b6d: and eax, 0xfffffffc; xor esi, esi; mov edx, eax; mov eax, 0xf0; or edx, 2; call dword ptr gs:[0x10]; 
0x000913ef: and eax, 0xfffffffc; xor esi, esi; mov edx, eax; mov eax, ebp; or edx, 2; call dword ptr gs:[0x10]; 
0x000928ca: and eax, 0xfffffffd; or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x000928f3: and eax, 0xfffffffe; or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x000844fe: and eax, 1; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000a6354: and eax, 1; cmovne eax, ecx; pop ebx; ret; 
0x001ac649: and eax, 1; je 0x1ac5e4; pop esi; lea eax, [edi - 0x10]; pop edi; ret; 
0x001ac70d: and eax, 1; je 0x1ac6f0; lea eax, [edi - 0x10]; pop edi; ret; 
0x001aa4f0: and eax, 1; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x0008e96f: and eax, 1; mov dword ptr [edx + 0x1ac8], eax; ret; 
0x0008e7e3: and eax, 1; mov dword ptr [edx + 0x24], eax; mov dword ptr gs:[0x7c], edx; pop ebx; ret; 
0x0008f15b: and eax, 1; mov dword ptr [edx + 8], eax; mov dword ptr gs:[0x78], edx; pop ebx; ret; 
0x0009039f: and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0013bea2: and eax, 1; pop ebx; ret; 
0x000fbe79: and eax, 1; pop edi; pop ebp; neg eax; ret; 
0x000345b6: and eax, 1; ret; 
0x0008684e: and eax, 1; xor eax, 1; ret; 
0x00034386: and eax, 2; ret; 
0x00053715: and eax, 2; sub eax, 1; ret; 
0x001aa500: and eax, 3; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x00097f11: and eax, 3; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0012f423: and eax, 3; ret; 
0x00034476: and eax, 4; ret; 
0x001aa510: and eax, 7; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x00034326: and eax, 8; ret; 
0x0019970b: and eax, dword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00170e8a: and eax, dword ptr [eax]; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edx], ch; push esi; call dword ptr [eax + 0x14]; 
0x00187744: and eax, dword ptr [eax]; add byte ptr [ebp + 0x432b0443], cl; add al, 0x83; ret; 
0x00170ef4: and eax, dword ptr [eax]; add byte ptr [ebx + 0x239880], cl; add byte ptr [ebx + 0x6a08ec], al; push ebx; call dword ptr [eax + 0x14]; 
0x00170efa: and eax, dword ptr [eax]; add byte ptr [ebx + 0x6a08ec], al; push ebx; call dword ptr [eax + 0x14]; 
0x001a37be: and eax, dword ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00031d2c: and eax, dword ptr [eax]; add byte ptr [ebx - 0x1d36b], cl; dec dword ptr [ebp - 0x68ccb7e]; call dword ptr [eax - 0x73]; 
0x00123537: and eax, dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00123295: and eax, dword ptr [ebx + 0x5e5b54c4]; ret; 
0x00090d45: and eax, dword ptr [ecx]; add byte ptr [eax], al; add esp, 0x94; pop ebx; pop esi; ret; 
0x0012f080: and eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012f080: and eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x12f098; ret; 
0x0003d21c: and eax, dword ptr [edx + ecx*4]; setne al; movzx eax, al; ret; 
0x0003482f: and eax, dword ptr [esp + 8]; ret; 
0x000ac347: and eax, ebp; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000aa154: and eax, ebp; push esi; sbb dword ptr [ecx + eax - 0x72fc0000], 0xf6ad8c92; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0003ba82: and eax, ecx; ret; 
0x000c119f: and eax, edx; je 0xc1280; bsr eax, eax; add eax, edi; pop edi; ret; 
0x0003b010: and eax, edx; ret; 
0x001ab1f6: and eax, edx; test eax, eax; jne 0x1aae20; xor eax, eax; ret; 
0x000a604b: and eax, esp; clc; dec dword ptr [ebp - 0x6677f7d]; call dword ptr [eax - 0x73]; 
0x00170905: and ebp, 0xfffffffc; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x000c6327: and ebp, dword ptr [edx]; stc; jmp dword ptr [ebp - 0x75]; 
0x00081580: and ebp, edi; add esp, 4; pop ebx; pop esi; ret; 
0x00173c7b: and ebp, esi; ljmp 0x5e5b:0x10c483ff; pop edi; ret; 
0x00093992: and ebx, 0x20; jne 0x93536; lea ecx, [ebp + 0x220]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x00041939: and ebx, 0x3ff; xor eax, ebx; pop ebx; ret; 
0x0013530d: and ebx, 0x400; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00132824: and ebx, 0xfffffffc; add eax, ebx; pop ebx; pop esi; ret; 
0x0012c9b5: and ebx, 0xfffffffe; push dword ptr [ebx]; push esi; call edi; 
0x000a93b9: and ebx, 1; lea edx, [edx - 0xa1fe4]; cmovne eax, edx; pop ebx; ret; 
0x0013d629: and ebx, 1; lea edx, [edx - 0xa1ff4]; cmovne eax, edx; pop ebx; ret; 
0x000a9409: and ebx, 1; lea edx, [edx - 0xa2fd4]; cmovne eax, edx; pop ebx; ret; 
0x0013d679: and ebx, 1; lea edx, [edx - 0xa2fe4]; cmovne eax, edx; pop ebx; ret; 
0x000a8b89: and ebx, 1; lea edx, [edx - 0xa3fb4]; cmovne eax, edx; pop ebx; ret; 
0x0013d5d9: and ebx, 1; lea edx, [edx - 0xa3fc4]; cmovne eax, edx; pop ebx; ret; 
0x001353ad: and ebx, 1; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0013544d: and ebx, 2; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0013576d: and ebx, 4; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0013526d: and ebx, 8; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x001ac19c: and ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x00031457: and ebx, edi; call dword ptr [eax + 0x6a]; 
0x00190473: and ebx, esi; inc dword ptr [ebx - 0x3fceef3c]; add esp, 4; pop ebx; pop esi; ret; 
0x000951c1: and ecx, 0x80; call dword ptr gs:[0x10]; 
0x00096844: and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x001420c8: and ecx, 0xc0000000; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x001423d7: and ecx, 0xc0000000; shr edx, 0x10; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x001228a7: and ecx, 0xffffeff0; or edx, ecx; mov dword ptr [eax + 8], edx; xor eax, eax; pop ebx; ret; 
0x001555a0: and ecx, dword ptr [ebx + 0x39302444]; ret 0x840f; 
0x00037fca: and ecx, dword ptr [ebx - 0x1cb43]; dec dword ptr [ebp - 0x20703379]; call dword ptr [eax + 0x6a]; 
0x0005b4fe: and ecx, dword ptr [ecx + 0x5e5b044a]; pop edi; ret; 
0x0014b5e8: and ecx, dword ptr [edi]; xchg ebp, eax; ret 0xd184; 
0x0014b8b8: and ecx, dword ptr [edi]; xchg ebp, eax; ret 0xd384; 
0x001271df: and edi, 0x50; stc; call dword ptr [ecx + 0x51]; 
0x00194c9a: and edi, 0xf; je 0x194cb0; call 0x189c1d; add ebx, 0x46a8c; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00196c9a: and edi, 0xf; je 0x196cb0; call 0x189c1d; add ebx, 0x44d0c; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00198c8c: and edi, 0xf; je 0x198cb0; call 0x189c1d; add ebx, 0x42f9a; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0019aecf: and edi, 0xf; je 0x19aef0; call 0x189c1d; add ebx, 0x40f17; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0019beaf: and edi, 0xf; je 0x19bed0; call 0x189c1d; add ebx, 0x400f7; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0019ceaf: and edi, 0xf; je 0x19ced0; call 0x189c1d; add ebx, 0x3f2b7; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x000e737a: and edi, 0xffffffff; call dword ptr [ebx + 0x57]; 
0x000d8749: and edi, dword ptr [ecx - 0x4a74000b]; ror cl, 0xff; dec dword ptr [ebp - 0x661f37a]; call dword ptr [eax - 0x73]; 
0x00141c46: and edi, dword ptr [ecx]; ret 0x4572; 
0x000c64dc: and edi, dword ptr [ecx]; ret; 
0x00176626: and edi, ecx; call dword ptr [eax + 0x52]; 
0x00197a85: and edi, edi; inc dword ptr [ecx + 0x43da8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019787e: and edi, edi; inc dword ptr [ecx + 0x43fafc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00089ccc: and edi, edi; je 0x89cf4; sub al, 0x55; push edi; push ebx; call dword ptr [esi + 0x40]; 
0x0009192a: and edi, esi; mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0017b9bb: and edi, esp; jmp dword ptr [esi - 0x70]; 
0x00028820: and edx, 0x2a; stc; call dword ptr [eax - 0x18]; 
0x0016448b: and edx, 0x60; stc; call dword ptr [eax - 0x18]; 
0x0003adbd: and edx, 0x7fff0000; sub edx, 0x7fff0000; mov eax, edx; shr eax, 0x1f; ret; 
0x0003c13d: and edx, 0x7fffffff; sub eax, edx; shr eax, 0x1f; ret; 
0x0015c87e: and edx, 0xf; mov eax, edx; ret; 
0x00128798: and edx, 0xfff; and eax, 0xfffff000; or eax, edx; ret; 
0x0008bccc: and edx, 0xffffffef; mov dword ptr [ebx], edx; pop ebx; pop esi; pop edi; ret; 
0x000a0aeb: and edx, 0xfffffff0; cmp eax, 0xb; mov eax, 8; cmova eax, edx; mov byte ptr [ecx + 0x3c38], al; ret; 
0x00170799: and edx, 0xfffffffc; and eax, 0xfffffffc; lea eax, [eax + edx + 0x28]; push eax; push edi; call dword ptr [ecx + 0x18]; 
0x000982fd: and edx, 2; je 0x98310; xor eax, eax; add esp, 0xc; ret; 
0x000795f0: and edx, dword ptr [eax - 0x73]; xor byte ptr [ecx + edi*2 - 0x17af0007], 0x72; stosb byte ptr es:[edi], al; sti; jmp dword ptr [esi - 0x70]; 
0x00189c61: and edx, dword ptr [ecx + eax*4]; setne al; movzx eax, al; ret; 
0x000c18d6: and edx, ecx; test edx, edx; je 0xc18b0; bsr ecx, edx; add eax, ecx; ret; 
0x000dfa6b: and esi, 0x81660404; inc byte ptr [eax]; add al, 0xf; test byte ptr [edi - 0x9ffffe3], bh; ret; 
0x00030508: and esi, dword ptr [ecx]; div dh; ret; 
0x0003040c: and esi, dword ptr [ecx]; push esi; ret; 
0x00046e84: and esi, eax; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00046e98: and esi, eax; mov eax, esi; pop esi; pop edi; ret; 
0x00046ea5: and esi, ecx; mov eax, esi; pop esi; pop edi; ret; 
0x0010d97b: and esi, edi; inc dword ptr [ebx - 0x357c0035]; dec dword ptr [ecx + 0xd2b8c1]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00176593: and esp, 0x64; stc; call dword ptr [edi + 0x56]; 
0x000961ef: and esp, 0xffffff86; stc; call dword ptr [eax - 0x73]; 
0x0012e41f: and esp, 0xfffffff0; sub esp, 0xc; push esi; call edx; 
0x0013fd83: and esp, dword ptr [esi - 0x7d]; jns 0x13fd8a; add ecx, dword ptr [edi]; test byte ptr [eax - 0x7d000000], cl; ret 0x8303; 
0x0006102b: and esp, edi; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0013907b: arpl ax, si; jmp dword ptr [esi - 0x70]; 
0x001a7b93: arpl bx, cx; add cl, byte ptr [edi]; xchg esp, eax; ret; 
0x000605f8: arpl cx, di; call dword ptr [eax + 0x68]; 
0x0016c674: arpl cx, di; call dword ptr [eax + 0x6a]; 
0x0016e374: arpl cx, di; call dword ptr [eax + 0x6a]; pop es; call 0x1565b0; add esp, 0x1c; ret; 
0x0016d094: arpl cx, di; call dword ptr [eax + 0x6a]; push es; call 0x1565b0; add esp, 0x1c; ret; 
0x00024965: arpl cx, di; call dword ptr [eax - 0x18]; 
0x00172f66: arpl cx, di; call dword ptr [eax - 1]; 
0x0016cd48: arpl cx, di; jmp dword ptr [ebp - 0x75]; 
0x00180c06: arpl cx, di; push dword ptr [ecx]; call dword ptr [eax + 0x6a]; 
0x001938c2: arpl di, di; inc dword ptr [ecx + 0x47a6bc3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x001951f4: arpl word ptr [eax + eax], ax; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00131ec6: arpl word ptr [ebp + 5], di; add byte ptr [ecx + 0x10cf4ac5], al; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x0011f8bc: arpl word ptr [ebx + 0x5e5b1cc4], ax; pop edi; pop ebp; ret; 
0x00080f64: arpl word ptr [ebx - 0x7f74f314], ax; mov byte ptr [eax], al; add byte ptr [eax], al; push esi; call dword ptr [eax + 0x34]; 
0x0006b639: arpl word ptr [ecx + 0x768dffff], si; add byte ptr [ebx - 0x5d343], cl; dec dword ptr [ecx + 0x29f829f0]; ret; 
0x00110bd1: arpl word ptr [ecx - 7], cx; call dword ptr [eax - 0x18]; 
0x0003dc9a: arpl word ptr [ecx], ax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000a17a8: arpl word ptr [ecx], ax; add byte ptr [eax], al; mov byte ptr [esi + 0x3c24], 1; lea ebx, [esi + 0x3c1c]; call dword ptr gs:[0x10]; 
0x00040408: arpl word ptr [ecx], ax; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x000402c7: arpl word ptr [ecx], ax; add byte ptr [eax], al; xor edx, edx; sub ecx, ebx; call dword ptr gs:[0x10]; 
0x0014958c: arpl word ptr [ecx], di; ret; 
0x000d973c: arpl word ptr [edi + 0x5e], bx; ret; 
0x00161748: bnd call dword ptr [eax - 0x18]; 
0x00162797: bnd call dword ptr [eax - 0x73]; 
0x0016552a: bnd call dword ptr [eax - 1]; 
0x001a0df4: bnd call dword ptr [ebx - 0x18]; 
0x0010e39e: bnd je 0x10e3b0; xor edx, edx; cmp eax, -1; pop ebx; cmove eax, edx; ret; 
0x0009d67d: bnd je 0x9d693; xor eax, eax; pop ebx; ret; 
0x000abb5c: bnd je 0xabb50; pop ebx; pop esi; ret; 
0x000fb12f: bnd jge 0xfb160; mov eax, 0xff; cmp edx, 0x9123683e; jne 0xfb1a0; ret; 
0x00156779: bnd jmp dword ptr [ebp - 0x75]; 
0x0010e374: bnd jmp dword ptr [esi - 0x70]; 
0x0018670a: bnd jne 0x186708; jmp dword ptr [esi - 0x70]; 
0x000b98ba: bound eax, qword ptr [0x5e5f0000]; pop ebx; ret; 
0x001abc63: bound eax, qword ptr [eax + 0x74000f7a]; pop esp; mov eax, 0x10; pop edi; ret; 
0x00195344: bound eax, qword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0011fa55: bound eax, qword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0005147c: bound eax, qword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x00162956: bound eax, qword ptr [ebx + 0x5e5b3cc4]; pop edi; pop ebp; ret; 
0x000e8995: bound eax, qword ptr [ebx + 0x5e5b70c4]; pop edi; ret; 
0x001aafaa: bound eax, qword ptr [ecx]; add byte ptr [eax], al; add edx, 0; jl 0x1ab1d0; mov eax, ecx; ret; 
0x000e04da: bound eax, qword ptr [esi - 7]; call dword ptr [eax + 0x53]; 
0x0008e11a: bound ebp, qword ptr [ebp - 6]; call dword ptr [eax + 0x6a]; 
0x0014f684: bound ebp, qword ptr [ecx]; ret 0x8966; 
0x0004777b: bound ebp, qword ptr [edi]; stc; call dword ptr [eax - 0x18]; 
0x000c7cbc: bound ebp, qword ptr [edi]; stc; call dword ptr [eax - 0x18]; stosb byte ptr es:[edi], al; ret; 
0x0010b459: bound ebx, qword ptr [ecx + edi*8]; mov dword ptr [eax], 0; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x00070b5a: bound ecx, qword ptr [0x4c890000]; and al, 4; mov dword ptr [esp + 0x48], 1; jmp eax; 
0x00148b2b: bound ecx, qword ptr [edi]; add byte ptr [ebx - 0x77], dl; ret; 
0x00090838: bound ecx, qword ptr [esi + edi*8]; add esp, 8; pop ebx; ret; 
0x00097e45: bound edx, qword ptr [eax - 0x73]; xchg byte ptr [edi + eax*4], dh; stc; call dword ptr [eax - 0x18]; 
0x0008d00a: bound esi, qword ptr [eax - 6]; jmp dword ptr [esi - 0x70]; 
0x00178c68: bound esp, qword ptr [ebp - 7]; call dword ptr [eax + 0x6a]; 
0x000a89f4: bsf eax, dword ptr [esp + 4]; mov edx, 0xffffffff; cmove eax, edx; add eax, 1; ret; 
0x000c1580: bsf eax, eax; add eax, edi; pop edi; ret; 
0x000c1b6a: bsf eax, eax; add eax, edx; add eax, ecx; ret; 
0x000c1cd0: bsf eax, eax; add eax, edx; ret; 
0x000c1590: bsf eax, eax; lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x000c15a0: bsf eax, eax; lea eax, [eax + edi + 0x20]; pop edi; ret; 
0x000c1570: bsf eax, eax; lea eax, [eax + edi - 0x10]; pop edi; ret; 
0x000c1ce0: bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x000c1cf0: bsf eax, eax; lea eax, [eax + edx + 0x20]; ret; 
0x000c1cc0: bsf eax, eax; lea eax, [eax + edx - 0x10]; ret; 
0x000c14bc: bsf eax, eax; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000c1cb7: bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x00042e92: bsf eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x000a8a2c: bsf eax, eax; mov edx, 0xffffffff; pop ebx; cmove eax, edx; add eax, 1; ret; 
0x000c15b0: bsf eax, eax; sub edx, eax; jbe 0xc15f0; add eax, edi; pop edi; ret; 
0x000c15c3: bsf eax, eax; sub edx, eax; jbe 0xc15f0; lea eax, [edi + eax + 0x10]; pop edi; ret; 
0x000c15d3: bsf eax, eax; sub edx, eax; jbe 0xc15f0; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x000c15e3: bsf eax, eax; sub edx, eax; jbe 0xc15f0; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x0004326f: bsf eax, eax; test dl, dl; mov edx, 8; cmove eax, edx; ret; 
0x0004330f: bsf eax, eax; test dx, dx; mov edx, 0x10; cmove eax, edx; ret; 
0x000432df: bsf eax, ecx; test ecx, ecx; je 0x432f0; pop ebx; ret; 
0x000a8a40: bsf eax, edx; mov edx, 0xffffffff; pop ebx; cmove eax, edx; add eax, 0x21; ret; 
0x0004328d: bsf eax, edx; test edx, edx; mov edx, 0x20; cmove eax, edx; ret; 
0x000c1b21: bsf ecx, ecx; add eax, ecx; ret; 
0x000433a9: bsf ecx, ecx; pop ebx; lea eax, [ecx + 0x20]; ret; 
0x000c12d9: bsf ecx, ecx; sub edx, ecx; jbe 0xc1310; add eax, ecx; ret; 
0x00042eab: bsf edx, eax; add edx, 1; test eax, eax; cmovne eax, edx; ret; 
0x000b0063: bsf edx, edx; add eax, edx; add eax, 0x10; pop edi; pop esi; ret; 
0x000b0070: bsf edx, edx; add eax, edx; add eax, 0x20; pop edi; pop esi; ret; 
0x000b007d: bsf edx, edx; add eax, edx; add eax, 0x30; pop edi; pop esi; ret; 
0x000b0059: bsf edx, edx; add eax, edx; pop edi; pop esi; ret; 
0x000c08b0: bsf edx, edx; call 0x189c31; add ecx, 0x10c73c; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c0876: bsf edx, edx; call 0x189c31; add ecx, 0x10c776; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bd5b0: bsf edx, edx; call 0x189c31; add ecx, 0x10f9bc; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bd576: bsf edx, edx; call 0x189c31; add ecx, 0x10f9f6; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bd552: bsf edx, edx; call 0x189c31; add ecx, 0x10fa1a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bd534: bsf edx, edx; call 0x189c31; add ecx, 0x10fa38; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba889: bsf edx, edx; call 0x189c31; add ecx, 0x11258f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba864: bsf edx, edx; call 0x189c31; add ecx, 0x1125b4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00042a3d: bsr eax, eax; add eax, 1; ret; 
0x000c1794: bsr eax, eax; add eax, ecx; ret; 
0x000c1125: bsr eax, eax; add eax, edi; pop edi; ret; 
0x000c1273: bsr eax, eax; add eax, edi; sub eax, 0x10; pop edi; ret; 
0x000c1840: bsr eax, eax; lea eax, [eax + ecx + 0x10]; ret; 
0x000c1850: bsr eax, eax; lea eax, [eax + ecx + 0x20]; ret; 
0x000c1860: bsr eax, eax; lea eax, [eax + ecx + 0x30]; ret; 
0x000c18a0: bsr eax, eax; sub edx, 0x10; add edx, eax; jl 0xc18b0; lea eax, [ecx + eax + 0x30]; ret; 
0x000c1890: bsr eax, eax; sub edx, 0x20; add edx, eax; jl 0xc18b0; lea eax, [ecx + eax + 0x20]; ret; 
0x000c1880: bsr eax, eax; sub edx, 0x30; add edx, eax; jl 0xc18b0; lea eax, [ecx + eax + 0x10]; ret; 
0x000c1870: bsr eax, eax; sub edx, 0x40; add edx, eax; jl 0xc18b0; add eax, ecx; ret; 
0x00042d0c: bsr eax, eax; xor eax, 0x1f; add eax, 1; ret; 
0x00042dd1: bsr eax, eax; xor eax, 0x1f; lea edx, [eax + 1]; mov eax, edx; ret; 
0x00043187: bsr eax, eax; xor eax, 0x1f; lea edx, [eax - 0x10]; mov eax, edx; ret; 
0x00042cf1: bsr eax, eax; xor eax, 0x1f; lea edx, [eax - 0x17]; mov eax, edx; ret; 
0x000430d7: bsr eax, eax; xor eax, 0x1f; lea edx, [eax - 0x18]; mov eax, edx; ret; 
0x00042d92: bsr eax, eax; xor eax, 0x1f; lea edx, [eax - 0xf]; mov eax, edx; ret; 
0x00043230: bsr eax, edx; pop ebx; xor eax, 0x1f; ret; 
0x00042d57: bsr eax, edx; xor eax, 0x1f; add eax, 1; pop ebx; ret; 
0x00043102: bsr eax, edx; xor eax, 0x1f; ret; 
0x0004321c: bsr ebx, ebx; xor ebx, 0x1f; lea eax, [ebx + 0x20]; pop ebx; ret; 
0x0004298c: bsr ecx, eax; mov eax, 0x80000000; xor ecx, 0x1f; shr eax, cl; ret; 
0x0004286d: bsr ecx, ecx; shl eax, cl; ret; 
0x00043150: bsr ecx, ecx; xor ecx, 0x1f; lea eax, [ecx + 0x20]; pop ebx; ret; 
0x00042976: bsr ecx, ecx; xor ecx, 0x1f; shr eax, cl; ret; 
0x000c18dc: bsr ecx, edx; add eax, ecx; ret; 
0x00042e1e: bsr ecx, edx; xor ecx, 0x1f; add ecx, 1; pop ebx; mov eax, ecx; ret; 
0x000c1934: bsr edi, edi; add eax, edi; pop edi; ret; 
0x000c1971: bsr edi, edi; add eax, edi; xor ch, ch; add eax, ecx; pop edi; ret; 
0x000c1980: bsr edi, edi; lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x00042aa7: bsr edx, ecx; xor edx, 0x1f; mov eax, 0x40; pop ebx; sub eax, edx; ret; 
0x0014210f: bswap eax; mov dword ptr [ecx], eax; mov eax, ecx; ret 4; 
0x001772fd: bswap eax; mov dword ptr [edx + 0xc], eax; mov eax, 1; pop ebx; ret; 
0x0013f618: bswap eax; ret; 
0x00171613: bswap edx; mov dword ptr [eax], edx; mov eax, 1; add esp, 8; pop ebx; ret; 
0x00135b54: bt eax, ebx; setb dl; mov eax, edx; pop ebx; pop esi; ret; 
0x000589d1: call 0x1005899f; xchg ebp, eax; ret 0xb60f; 
0x000d7690: call 0x100d765e; xchg ebp, eax; ret 0x9d8b; 
0x00146a08: call 0x109ff6; jmp dword ptr [esi - 0x70]; 
0x0010b4a2: call 0x10b1e0; test eax, eax; sete al; add esp, 0x2c; movzx eax, al; ret; 
0x0009c853: call 0x10b4c0; add esp, 0x1c; ret; 
0x0009ba47: call 0x10beb0; mov dword ptr [ebx + 0x2b4], eax; add esp, 0x18; pop ebx; ret; 
0x0010c34b: call 0x10c310; add esp, 0x1c; ret; 
0x0010c7a1: call 0x10dae0; add esp, 0x2c; ret; 
0x0010e455: call 0x10e560; add esp, 0x1c; ret; 
0x0010e985: call 0x10e770; add esp, 0x1c; ret; 
0x0010e42f: call 0x10e970; add esp, 0x1c; ret; 
0x0003bae1: call 0x10ed7c05; or eax, ecx; ret; 
0x000e3b45: call 0x1121ecd; rol byte ptr [ecx], 1; ret; 
0x0016ff45: call 0x114720; mov esi, dword ptr [esp + 0x48]; mov eax, dword ptr [esi + 0x20]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0011f086: call 0x114f20; add esp, 0x1c; ret; 
0x0019063d: call 0x115180; add esp, 0x1c; sar eax, 0x1f; ret; 
0x00115403: call 0x115410; add esp, 0x1c; ret; 
0x0011580c: call 0x115940; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0011f542: call 0x115940; add esp, 0x18; pop ebx; ret; 
0x0011586b: call 0x115b20; add esp, 0x10; add esp, 0xc; ret; 
0x0011f566: call 0x115b20; add esp, 0x1c; ret; 
0x00089d76: call 0x11f490; add esp, 0x18; pop ebx; ret; 
0x0011f677: call 0x11f6b0; add esp, 0x1c; ret; 
0x001303ce: call 0x11f6e0; add esp, 0x20; add esp, 0xc; ret; 
0x0011f69b: call 0x11f6e0; add esp, 0x2c; ret; 
0x0005ad38: call 0x11f760; add esp, 0x1c; ret; 
0x00114a74: call 0x11f860; add esp, 0x1c; ret; 
0x0011e503: call 0x121670; add esp, 0x10; add esp, 0xc; ret; 
0x00024f9f: call 0x121920; add esp, 0x1c; ret; 
0x00123756: call 0x123660; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00128d57: call 0x1237a0; add esp, 0x10; test eax, eax; jne 0x128d1c; add esp, 0xc; ret; 
0x00123ccf: call 0x124010; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x0012435d: call 0x124200; add esp, 0x18; pop ebx; ret; 
0x00024509: call 0x124280; add esp, 0x18; pop ebx; ret; 
0x001245d9: call 0x1244e0; add esp, 0x28; pop ebx; ret; 
0x00124771: call 0x1245f0; add esp, 0x28; pop ebx; ret; 
0x0016f3c8: call 0x125360; mov dword ptr [ebx + 0xa62c], eax; add esp, 8; pop ebx; ret; 
0x00125e77: call 0x125bb0; test eax, eax; je 0x125e88; add esp, 0xc; ret; 
0x00125ec7: call 0x125bb0; test eax, eax; je 0x125ed8; add esp, 0xc; ret; 
0x00125e91: call 0x125de0; mov edx, 2; test eax, eax; cmove eax, edx; add esp, 0xc; ret; 
0x00126a43: call 0x126680; mov dword ptr [ebx + 0x45a0], eax; add esp, 8; pop ebx; ret; 
0x00126b4c: call 0x126ba0; add esp, 0x1c; ret; 
0x00126b78: call 0x126c90; add esp, 0x1c; ret; 
0x00122e29: call 0x1283c0; add esp, 0x10; add esp, 0xc; ret; 
0x00122cd5: call 0x1283c0; add esp, 0x1c; ret; 
0x00128d2a: call 0x129470; add esp, 0x10; add esp, 0xc; ret; 
0x0002fd11: call 0x1296b0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000a0c7b: call 0x1296b0; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0012a703: call 0x12aa30; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x000a235e: call 0x12ae10; add esp, 0x10; cmp eax, -1; je 0xa2370; add esp, 0xc; ret; 
0x0012c1e6: call 0x12ba60; add esp, 0x1c; ret; 
0x00030072: call 0x12d020; add esp, 0x1c; ret; 
0x000427d7: call 0x12d050; mov dword ptr [ebx + 0x1894], 0; add esp, 0x18; pop ebx; ret; 
0x0012d9fd: call 0x12dc40; add esp, 0x1c; ret; 
0x0012e229: call 0x12e180; add esp, 0x2c; ret; 
0x0013025d: call 0x130270; add esp, 0x1c; ret; 
0x000a0d27: call 0x130f50; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00132f95: call 0x133530; add esp, 0x1c; ret; 
0x001351aa: call 0x1345a0; pop edx; pop ecx; pop eax; ret; 
0x00134ad0: call 0x134990; add esp, 4; ret; 
0x0013719e: call 0x136c50; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x0013915d: call 0x138f30; add esp, 0x28; pop ebx; ret; 
0x0013be52: call 0x13a5a0; add esp, 0x1c; ret; 
0x0013a762: call 0x13a650; add esp, 0x18; pop ebx; ret; 
0x00139ca8: call 0x13bdf0; add esp, 0xc; push eax; push dword ptr [ebp - 0x5c]; push ebx; call dword ptr [esi + 0x14]; 
0x0013843c: call 0x13bdf0; add esp, 0xc; push eax; push edi; push 0x2000003; call dword ptr [ebx + 0x14]; 
0x0013e3b5: call 0x13c7f0; lea esi, [esi]; add esp, 8; pop ebx; ret; 
0x0012a74f: call 0x13dcc0; add esp, 0x24; mov eax, esi; pop ebx; pop esi; ret; 
0x0013f255: call 0x13dcc0; add esp, 0x34; mov eax, esi; pop ebx; pop esi; ret; 
0x00170d8b: call 0x13dd00; endbr32; mov eax, 2; ret; 
0x0017cffb: call 0x13dd00; endbr32; xor eax, eax; ret; 
0x0012b61b: call 0x13dd00; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x0016ebea: call 0x13dd00; nop; endbr32; ret; 
0x0009283a: call 0x13dd00; nop; endbr32; xor eax, eax; ret; 
0x0010c4b9: call 0x13dd00; nop; mov eax, 0x42; call dword ptr gs:[0x10]; 
0x00114eca: call 0x13dd00; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x0009c297: call 0x13dd00; nop; nop; endbr32; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x00175247: call 0x13dd00; nop; nop; endbr32; ret; 
0x000efa57: call 0x13dd00; nop; nop; mov eax, 0xca; call dword ptr gs:[0x10]; 
0x000efa57: call 0x13dd00; nop; nop; mov eax, 0xca; call dword ptr gs:[0x10]; ret; 
0x001686a6: call 0x13dd00; nop; nop; nop; endbr32; ret; 
0x0013eebc: call 0x13eed0; add esp, 0x1c; ret; 
0x0013f1fc: call 0x13f210; add esp, 0x1c; ret; 
0x00141502: call 0x140470; cmp eax, -0xb; je 0x141500; add esp, 8; pop ebx; ret; 
0x00143a2d: call 0x142d60; add esp, 0x1c; ret; 
0x00143a13: call 0x142f10; add esp, 0x2c; ret; 
0x00143b39: call 0x143a40; add esp, 0x2c; ret; 
0x001442e1: call 0x143d10; add esp, 0x2c; ret; 
0x00147f79: call 0x147820; add esp, 0x3c; ret; 
0x00148d1e: call 0x148b20; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x148d34; add esp, 0x1c; ret; 
0x0014ab1d: call 0x14aa40; add esp, 0x1c; ret; 
0x0014d297: call 0x14d180; add esp, 0x14; pop ebx; pop esi; ret; 
0x00169a8a: call 0x1565b0; add esp, 0x1c; ret; 
0x00169aa9: call 0x156690; add esp, 0x1c; ret; 
0x00141573: call 0x1569d79; mov eax, 2; ret; 
0x00192bd7: call 0x158040; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00192c47: call 0x158f50; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00192ddf: call 0x161950; neg eax; sbb eax, eax; add esp, 0x2c; ret; 
0x001627c8: call 0x163050; add esp, 0x20; add esp, 8; pop ebx; ret; 
0x00192e9f: call 0x164410; neg eax; sbb eax, eax; add esp, 0x2c; ret; 
0x00192f07: call 0x164b80; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00192f77: call 0x1658b0; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x001930a7: call 0x166f40; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x001930d7: call 0x167280; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00193187: call 0x1681a0; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x0016b6c5: call 0x16b4f0; add esp, 0x3c; ret; 
0x0016c15c: call 0x16bf00; add esp, 0x2c; ret; 
0x0016ebaa: call 0x1704b0; mov eax, dword ptr [esp + 0x18]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x001749d1: call 0x171e60; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x00177f99: call 0x177ca0; add esp, 0x3c; ret; 
0x00178d5a: call 0x178aa0; add esp, 0x10; add esp, 0xc; ret; 
0x00178d3b: call 0x178ba0; add esp, 0x10; add esp, 0xc; ret; 
0x0017913b: call 0x178f70; add esp, 0x2c; ret; 
0x0017b1f5: call 0x17af20; add esp, 0x1c; ret; 
0x00170511: call 0x17c030; add esp, 0x1c; ret; 
0x001704e6: call 0x17c100; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x0017c299: call 0x17c100; add esp, 0x1c; ret; 
0x0017c4b1: call 0x17c340; test eax, eax; setne al; add esp, 0x1c; movzx eax, al; ret; 
0x0008d776: call 0x184e00; add esp, 0x1c; ret; 
0x00185a26: call 0x185830; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0008e2e7: call 0x186e80; mov dword ptr [ebx + 0x10], eax; add esp, 0x18; pop ebx; ret; 
0x0008e1e4: call 0x186f40; mov dword ptr [ebx + 0xc], eax; add esp, 0x18; pop ebx; ret; 
0x00025f78: call 0x186f70; add ebp, dword ptr [edi + 8]; mov dword ptr [esp], ebp; call esi; 
0x0015a0a2: call 0x186f70; add esp, 0x10; mov eax, dword ptr [esp]; call eax; 
0x0015a237: call 0x186f70; add esp, 0x10; mov eax, ebx; call eax; 
0x001635c7: call 0x186f70; mov dword ptr [esp], ebp; call ebx; 
0x00163231: call 0x186f70; mov dword ptr [esp], ebp; call edi; 
0x00163418: call 0x186f70; mov dword ptr [esp], ebp; call esi; 
0x0002707b: call 0x186f70; mov dword ptr [esp], ebx; call edi; 
0x00026118: call 0x186f70; mov dword ptr [esp], ebx; call esi; 
0x0002628b: call 0x186f70; mov dword ptr [esp], ebx; mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x00026935: call 0x186f70; mov dword ptr [esp], ebx; mov edx, dword ptr [ebp - 0x44]; call edx; 
0x0002f4f5: call 0x186f70; mov dword ptr [esp], esi; call ebx; 
0x001628d3: call 0x186f70; mov dword ptr [esp], esi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x000c32a5: call 0x186f70; pop edx; pop ecx; push ebx; push dword ptr [edi]; call esi; 
0x00188943: call 0x1887e0; add esp, 0x28; pop ebx; ret; 
0x0018996b: call 0x1897e0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x001899a7: call 0x189850; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0018994f: call 0x189860; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x001a7f1b: call 0x189c1d; add ebx, 0x34454; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001a7e56: call 0x189c1d; add ebx, 0x34519; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001a654b: call 0x189c1d; add ebx, 0x35d20; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001a643c: call 0x189c1d; add ebx, 0x35e2f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019de6d: call 0x189c1d; add ebx, 0x3e33e; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019d174: call 0x189c1d; add ebx, 0x3ef37; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019d06a: call 0x189c1d; add ebx, 0x3f041; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019cf63: call 0x189c1d; add ebx, 0x3f148; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019ce67: call 0x189c1d; add ebx, 0x3f244; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019cc59: call 0x189c1d; add ebx, 0x3f292; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019ceb4: call 0x189c1d; add ebx, 0x3f2b7; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0019c174: call 0x189c1d; add ebx, 0x3fd77; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019c06a: call 0x189c1d; add ebx, 0x3fe81; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019bf63: call 0x189c1d; add ebx, 0x3ff88; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019be5a: call 0x189c1d; add ebx, 0x40091; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019bc89: call 0x189c1d; add ebx, 0x400a2; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019beb4: call 0x189c1d; add ebx, 0x400f7; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0019be6a: call 0x189c1d; add ebx, 0x40181; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b194: call 0x189c1d; add ebx, 0x40b97; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b08a: call 0x189c1d; add ebx, 0x40ca1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019af83: call 0x189c1d; add ebx, 0x40da8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019ae7a: call 0x189c1d; add ebx, 0x40eb1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019ad67: call 0x189c1d; add ebx, 0x40f04; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019aed4: call 0x189c1d; add ebx, 0x40f17; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0019ae8a: call 0x189c1d; add ebx, 0x40fa1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019aab3: call 0x189c1d; add ebx, 0x40ff8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019a41a: call 0x189c1d; add ebx, 0x41691; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019a3fc: call 0x189c1d; add ebx, 0x416af; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019a363: call 0x189c1d; add ebx, 0x41748; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019a29c: call 0x189c1d; add ebx, 0x4180f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019a203: call 0x189c1d; add ebx, 0x418a8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019a13c: call 0x189c1d; add ebx, 0x4196f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019a0a3: call 0x189c1d; add ebx, 0x41a08; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199fdc: call 0x189c1d; add ebx, 0x41acf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199f43: call 0x189c1d; add ebx, 0x41b68; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199e7c: call 0x189c1d; add ebx, 0x41c2f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199de3: call 0x189c1d; add ebx, 0x41cc8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199d1c: call 0x189c1d; add ebx, 0x41d8f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199c83: call 0x189c1d; add ebx, 0x41e28; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199bbc: call 0x189c1d; add ebx, 0x41eef; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199b23: call 0x189c1d; add ebx, 0x41f88; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199a5c: call 0x189c1d; add ebx, 0x4204f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001999c3: call 0x189c1d; add ebx, 0x420e8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001998fc: call 0x189c1d; add ebx, 0x421af; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199863: call 0x189c1d; add ebx, 0x42248; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019979c: call 0x189c1d; add ebx, 0x4230f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199703: call 0x189c1d; add ebx, 0x423a8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019963c: call 0x189c1d; add ebx, 0x4246f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001995a3: call 0x189c1d; add ebx, 0x42508; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001994dc: call 0x189c1d; add ebx, 0x425cf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199443: call 0x189c1d; add ebx, 0x42668; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019937c: call 0x189c1d; add ebx, 0x4272f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001992e3: call 0x189c1d; add ebx, 0x427c8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019921c: call 0x189c1d; add ebx, 0x4288f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199183: call 0x189c1d; add ebx, 0x42928; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001990bc: call 0x189c1d; add ebx, 0x429ef; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199023: call 0x189c1d; add ebx, 0x42a88; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198f5b: call 0x189c1d; add ebx, 0x42c10; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198e56: call 0x189c1d; add ebx, 0x42c55; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198d50: call 0x189c1d; add ebx, 0x42e1b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198c47: call 0x189c1d; add ebx, 0x42e64; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198953: call 0x189c1d; add ebx, 0x42ed8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198c91: call 0x189c1d; add ebx, 0x42f9a; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0019831a: call 0x189c1d; add ebx, 0x43511; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001982fc: call 0x189c1d; add ebx, 0x4352f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198263: call 0x189c1d; add ebx, 0x435c8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001981ac: call 0x189c1d; add ebx, 0x4367f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198113: call 0x189c1d; add ebx, 0x43718; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019805c: call 0x189c1d; add ebx, 0x437cf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197fc3: call 0x189c1d; add ebx, 0x43868; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197f0c: call 0x189c1d; add ebx, 0x4391f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197e73: call 0x189c1d; add ebx, 0x439b8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197dbc: call 0x189c1d; add ebx, 0x43a6f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197d23: call 0x189c1d; add ebx, 0x43b08; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197c6c: call 0x189c1d; add ebx, 0x43bbf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197bd3: call 0x189c1d; add ebx, 0x43c58; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197b1c: call 0x189c1d; add ebx, 0x43d0f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197a83: call 0x189c1d; add ebx, 0x43da8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001979cc: call 0x189c1d; add ebx, 0x43e5f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197933: call 0x189c1d; add ebx, 0x43ef8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019787c: call 0x189c1d; add ebx, 0x43faf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001977e3: call 0x189c1d; add ebx, 0x44048; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019772c: call 0x189c1d; add ebx, 0x440ff; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197693: call 0x189c1d; add ebx, 0x44198; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001975dc: call 0x189c1d; add ebx, 0x4424f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197543: call 0x189c1d; add ebx, 0x442e8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019748c: call 0x189c1d; add ebx, 0x4439f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001973f3: call 0x189c1d; add ebx, 0x44438; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019733c: call 0x189c1d; add ebx, 0x444ef; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001972a3: call 0x189c1d; add ebx, 0x44588; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001971ec: call 0x189c1d; add ebx, 0x4463f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197153: call 0x189c1d; add ebx, 0x446d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019709c: call 0x189c1d; add ebx, 0x4478f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197003: call 0x189c1d; add ebx, 0x44828; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196f4b: call 0x189c1d; add ebx, 0x449a0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196e46: call 0x189c1d; add ebx, 0x449e5; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196d40: call 0x189c1d; add ebx, 0x44bab; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196c3a: call 0x189c1d; add ebx, 0x44bf1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001969b3: call 0x189c1d; add ebx, 0x44bf8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196c9f: call 0x189c1d; add ebx, 0x44d0c; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00196c50: call 0x189c1d; add ebx, 0x44d9b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019631a: call 0x189c1d; add ebx, 0x45291; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001962fc: call 0x189c1d; add ebx, 0x452af; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196263: call 0x189c1d; add ebx, 0x45348; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001961ac: call 0x189c1d; add ebx, 0x453ff; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196113: call 0x189c1d; add ebx, 0x45498; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019605c: call 0x189c1d; add ebx, 0x4554f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195fc3: call 0x189c1d; add ebx, 0x455e8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195f0c: call 0x189c1d; add ebx, 0x4569f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195e73: call 0x189c1d; add ebx, 0x45738; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195dbc: call 0x189c1d; add ebx, 0x457ef; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195d23: call 0x189c1d; add ebx, 0x45888; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195c6c: call 0x189c1d; add ebx, 0x4593f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195bd3: call 0x189c1d; add ebx, 0x459d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195b1c: call 0x189c1d; add ebx, 0x45a8f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195a83: call 0x189c1d; add ebx, 0x45b28; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001959cc: call 0x189c1d; add ebx, 0x45bdf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195933: call 0x189c1d; add ebx, 0x45c78; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019587c: call 0x189c1d; add ebx, 0x45d2f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001957e3: call 0x189c1d; add ebx, 0x45dc8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019572c: call 0x189c1d; add ebx, 0x45e7f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195693: call 0x189c1d; add ebx, 0x45f18; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001955dc: call 0x189c1d; add ebx, 0x45fcf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195543: call 0x189c1d; add ebx, 0x46068; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019548c: call 0x189c1d; add ebx, 0x4611f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001953f3: call 0x189c1d; add ebx, 0x461b8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019533c: call 0x189c1d; add ebx, 0x4626f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001952a3: call 0x189c1d; add ebx, 0x46308; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001951ec: call 0x189c1d; add ebx, 0x463bf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195153: call 0x189c1d; add ebx, 0x46458; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019509c: call 0x189c1d; add ebx, 0x4650f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195003: call 0x189c1d; add ebx, 0x465a8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194f4b: call 0x189c1d; add ebx, 0x46720; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194e46: call 0x189c1d; add ebx, 0x46765; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194d40: call 0x189c1d; add ebx, 0x4692b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194c3a: call 0x189c1d; add ebx, 0x46971; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194c9f: call 0x189c1d; add ebx, 0x46a8c; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00194c50: call 0x189c1d; add ebx, 0x46b1b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193a58: call 0x189c1d; add ebx, 0x47953; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x001939a8: call 0x189c1d; add ebx, 0x47a03; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x001934fe: call 0x189c1d; add ebx, 0x47c2d; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00193442: call 0x189c1d; add ebx, 0x47ce9; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00193328: call 0x189c1d; add ebx, 0x47e03; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00193240: call 0x189c1d; add ebx, 0x47e6b; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0012f074: call 0x189c21; add edx, 0x10fd9b; mov eax, 0x123; call dword ptr gs:[0x10]; 
0x00121a14: call 0x189c21; add edx, 0x11d3fb; push ebx; mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00095994: call 0x189c25; add eax, 0x1a947b; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x2a4], edx; ret; 
0x00094814: call 0x189c25; add eax, 0x1aa5fb; mov eax, dword ptr [eax + 0x3af4]; ret; 
0x0008e904: call 0x189c25; add eax, 0x1b050b; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x298], edx; ret; 
0x0008e8e4: call 0x189c25; add eax, 0x1b052b; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x294], edx; ret; 
0x0008cc94: call 0x189c25; add eax, 0x1b217b; mov eax, dword ptr [eax + 0xe6c]; ret; 
0x0003d4c4: call 0x189c25; add eax, 0x20194b; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x0003d4a4: call 0x189c25; add eax, 0x20196b; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x00034844: call 0x189c25; add eax, 0x20a5cb; mov eax, dword ptr [eax + 0x9c]; add eax, dword ptr gs:[0]; ret; 
0x0002f544: call 0x189c25; add eax, 0x20f8cb; mov eax, dword ptr [eax + 0x10e0]; ret; 
0x000260c4: call 0x189c25; add eax, 0x218d4b; mov eax, dword ptr [eax + 0x10bc]; ret; 
0x000260a4: call 0x189c25; add eax, 0x218d6b; mov eax, dword ptr [eax + 0x10b8]; ret; 
0x00025554: call 0x189c25; add eax, 0x2198bb; mov eax, dword ptr [eax + 0xa4]; add eax, dword ptr gs:[0]; ret; 
0x00024fd4: call 0x189c25; add eax, 0x219e3b; lea eax, [eax - 0x690b4]; ret; 
0x00024fb4: call 0x189c25; add eax, 0x219e5b; lea eax, [eax - 0x690ac]; ret; 
0x0013f5f4: call 0x189c25; add eax, 0xff81b; mov eax, dword ptr [eax + 0xc4]; add eax, dword ptr gs:[0]; ret; 
0x001904bf: call 0x189c29; add esi, 0xae950; push ebx; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000c0f2c: call 0x189c31; add ecx, 0x10c143; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c0a21: call 0x189c31; add ecx, 0x10c64e; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c09fc: call 0x189c31; add ecx, 0x10c673; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c09dc: call 0x189c31; add ecx, 0x10c693; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c09bf: call 0x189c31; add ecx, 0x10c6b0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c0920: call 0x189c31; add ecx, 0x10c6cf; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c0992: call 0x189c31; add ecx, 0x10c6dd; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c0902: call 0x189c31; add ecx, 0x10c6ed; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c097b: call 0x189c31; add ecx, 0x10c6f4; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c0960: call 0x189c31; add ecx, 0x10c70f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c08dd: call 0x189c31; add ecx, 0x10c712; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c093e: call 0x189c31; add ecx, 0x10c731; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c08b3: call 0x189c31; add ecx, 0x10c73c; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c089a: call 0x189c31; add ecx, 0x10c755; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c0879: call 0x189c31; add ecx, 0x10c776; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c0855: call 0x189c31; add ecx, 0x10c79a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c0837: call 0x189c31; add ecx, 0x10c7b8; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c07b4: call 0x189c31; add ecx, 0x10c83b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bd602: call 0x189c31; add ecx, 0x10f96d; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bd5dd: call 0x189c31; add ecx, 0x10f992; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bd5b3: call 0x189c31; add ecx, 0x10f9bc; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bd59a: call 0x189c31; add ecx, 0x10f9d5; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bd579: call 0x189c31; add ecx, 0x10f9f6; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bd555: call 0x189c31; add ecx, 0x10fa1a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bd537: call 0x189c31; add ecx, 0x10fa38; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bd51b: call 0x189c31; add ecx, 0x10fa54; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bb68c: call 0x189c31; add ecx, 0x11180f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb5a7: call 0x189c31; add ecx, 0x111984; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb594: call 0x189c31; add ecx, 0x111997; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb578: call 0x189c31; add ecx, 0x1119b3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000baa81: call 0x189c31; add ecx, 0x11241a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000baa5c: call 0x189c31; add ecx, 0x11243f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000baa3c: call 0x189c31; add ecx, 0x11245f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000baa1f: call 0x189c31; add ecx, 0x11247c; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba980: call 0x189c31; add ecx, 0x11249b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba9f2: call 0x189c31; add ecx, 0x1124a9; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba9db: call 0x189c31; add ecx, 0x1124c0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba9c0: call 0x189c31; add ecx, 0x1124db; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba99e: call 0x189c31; add ecx, 0x1124fd; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba8ac: call 0x189c31; add ecx, 0x11256f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba88c: call 0x189c31; add ecx, 0x11258f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba867: call 0x189c31; add ecx, 0x1125b4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b9f8c: call 0x189c31; add ecx, 0x112daf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9ea7: call 0x189c31; add ecx, 0x112f24; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9e94: call 0x189c31; add ecx, 0x112f37; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9e78: call 0x189c31; add ecx, 0x112f53; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9441: call 0x189c31; add ecx, 0x1138fa; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b941c: call 0x189c31; add ecx, 0x11391f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b93fc: call 0x189c31; add ecx, 0x11393f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b93df: call 0x189c31; add ecx, 0x11395c; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9340: call 0x189c31; add ecx, 0x11397b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b93b2: call 0x189c31; add ecx, 0x113989; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b939b: call 0x189c31; add ecx, 0x1139a0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9380: call 0x189c31; add ecx, 0x1139bb; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b935e: call 0x189c31; add ecx, 0x1139dd; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b927c: call 0x189c31; add ecx, 0x113a3f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b925c: call 0x189c31; add ecx, 0x113a5f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b9237: call 0x189c31; add ecx, 0x113a84; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0018a9d7: call 0x18a0c0; add esp, 0x18; pop ebx; ret; 
0x00042b19: call 0x1acdd0; add esp, 0x18; pop ebx; ret; 
0x00042bab: call 0x1ace10; add esp, 0x18; pop ebx; ret; 
0x000a08f1: call 0x1ca8bfa; mov dword ptr [edx + 0x388], eax; ret; 
0x000417fc: call 0x1cac710; clc; push eax; mov eax, dword ptr [esp + 0x28]; call eax; 
0x000844fc: call 0x1e8c805; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0008462c: call 0x1e8c936; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0008684c: call 0x1e8eb53; xor eax, 1; ret; 
0x0008686c: call 0x1e8eb74; xor eax, 1; ret; 
0x000875dc: call 0x1e8f8e5; ret; 
0x000875fc: call 0x1e8f906; ret; 
0x0008e96d: call 0x1e96c7d; mov dword ptr [edx + 0x1ac8], eax; ret; 
0x0013bea0: call 0x1f441ab; pop ebx; ret; 
0x00141570: call 0x1fc9878; mov byte ptr [edx + 1], al; mov eax, 2; ret; 
0x0004379d: call 0x21061825; ret 0xb60f; 
0x000a6ec5: call 0x23010; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0008dd3b: call 0x23100; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x000ab545: call 0x23110; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00039101: call 0x231a0; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x0002827d: call 0x231a0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00061029: call 0x231a0; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000ffd76: call 0x231a0; add esp, 0x10; xor eax, eax; add esp, 8; pop ebx; ret; 
0x0002fe41: call 0x231a0; add esp, 0x14; pop ebx; pop esi; ret; 
0x00086c33: call 0x231a0; add esp, 0x14; xor eax, eax; pop ebx; pop esi; ret; 
0x000385e5: call 0x231a0; add esp, 0x18; pop ebx; ret; 
0x0008fee9: call 0x231a0; add esp, 0x18; xor eax, eax; pop ebx; ret; 
0x00152fcf: call 0x231a0; mov dword ptr [esp], ebp; call esi; 
0x0009de0a: call 0x231a0; mov dword ptr [esp], esi; call edi; 
0x000a0754: call 0x231a0; mov eax, dword ptr [esp + 0x1c]; mov dword ptr [esp], eax; call esi; 
0x0010bd21: call 0x231a8; add esp, 0x18; pop ebx; ret; 
0x00162768: call 0x231a8; mov dword ptr [ebx + 0xa220], eax; add esp, 0x18; pop ebx; ret; 
0x00024525: call 0x244ec; add esp, 0x1c; ret; 
0x001168dc: call 0x29134964; ret; 
0x0011838c: call 0x29136414; ret; 
0x00119e2c: call 0x29137eb4; ret; 
0x00039f08: call 0x2b6f6; jmp dword ptr [esi - 0x70]; 
0x0010bd1b: call 0x2f17e25; push eax; call 0x231a8; add esp, 0x18; pop ebx; ret; 
0x00195fca: call 0x3196424; sbb al, 0x8b; jmp ebx; 
0x0019754a: call 0x3197991; sbb al, 0x8b; jmp ebx; 
0x001999ca: call 0x3199def; sbb al, 0x8b; jmp ebx; 
0x000333c5: call 0x333d0; add esp, 0x1c; ret; 
0x00034e26: call 0x34900; mov edx, dword ptr [esp + 0x14]; add esp, 0xc; mov eax, edx; ret; 
0x001489f2: call 0x34e80; add esp, 0x10; add esp, 0xc; ret; 
0x0017640b: call 0x34e80; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000ef9f7: call 0x34e80; add esp, 0x14; pop ebx; pop esi; ret; 
0x00034ec1: call 0x34e80; add esp, 0x1c; ret; 
0x00034e99: call 0x35b80; add esp, 0x2c; ret; 
0x000364e9: call 0x364a0; add esp, 0x2c; ret; 
0x0003c3c7: call 0x3c340; pop ecx; pop edx; ret; 
0x0003d289: call 0x3cb20; add esp, 0x1c; ret; 
0x0009dde6: call 0x3d090; mov edx, dword ptr [esp + 0x1c]; mov eax, 0xaf; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0003d821: call 0x3d7a0; add esp, 0x1c; ret; 
0x0003e95d: call 0x3e0c0; add esp, 0x1c; ret; 
0x0003e992: call 0x3ead0; add esp, 0x1c; ret; 
0x00189d3d: call 0x3ebb0; add esp, 0x1c; ret; 
0x00073723: call 0x3f072ff3; jmp eax; 
0x0003f0b1: call 0x3f110; add esp, 0x1c; ret; 
0x0009197b: call 0x4019c82; je 0x91990; pop ebx; pop esi; pop edi; ret; 
0x00040b18: call 0x40600; add esp, 0x10; add esp, 0xc; ret; 
0x000406dc: call 0x406f0; add esp, 0x1c; ret; 
0x0004089c: call 0x408a1; pop ecx; add ecx, 0xa; mov dword ptr [edx], ecx; ret; 
0x001965a3: call 0x4097759b; clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00198593: call 0x4097958b; clc; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x0019a6a3: call 0x4097b69b; clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00040848: call 0x40b80; add esp, 0x10; add esp, 0xc; ret; 
0x00041899: call 0x41450; add esp, 0x2c; ret; 
0x00042146: call 0x42060; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000421bd: call 0x421d0; add esp, 0x18; lea eax, [ebx + 6]; pop ebx; ret; 
0x0004257e: call 0x42280; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x0004280c: call 0x42820; add esp, 0x1c; ret; 
0x001936c2: call 0x42ef462d; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00193c52: call 0x42ef4bbd; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00043417: call 0x43440; add esp, 0x2c; ret; 
0x001519fc: call 0x4424e386; ret 0x148b; 
0x0002fdd9: call 0x44486df; add esp, 8; pop ebx; ret; 
0x0005ace5: call 0x44835eb; ret; 
0x0003dfdd: call 0x46e10; add esp, 0x1c; ret; 
0x00046dfd: call 0x477a0; add esp, 0x1c; ret; 
0x0003a637: call 0x4a7f4; add byte ptr [ecx], bh; ret 0x430f; 
0x0004a4cd: call 0x4ad00; add esp, 0x1c; ret; 
0x0003dfff: call 0x4d7b0; add esp, 0x1c; ret; 
0x0004d763: call 0x4d800; add esp, 0x2c; ret; 
0x0014c372: call 0x4d94678; pop ebx; pop esi; ret; 
0x0004dedd: call 0x4e840; add esp, 0x1c; ret; 
0x000a08ee: call 0x4f2c9f4; add eax, 1; mov dword ptr [edx + 0x388], eax; ret; 
0x0003e03f: call 0x51570; add esp, 0x1c; ret; 
0x00051523: call 0x515c0; add esp, 0x2c; ret; 
0x00051f03: call 0x51fa0; add esp, 0x2c; ret; 
0x000525e3: call 0x52680; add esp, 0x2c; ret; 
0x0005343e: call 0x52f50; test eax, eax; sete al; add esp, 0xc; movzx eax, al; ret; 
0x00053632: call 0x535f0; jmp eax; 
0x000acbef: call 0x55758f5; add byte ptr [ecx], al; ret; 
0x000e8672: call 0x5b0e8677; ret; 
0x000e86e4: call 0x5b0e86e9; ret; 
0x000e8788: call 0x5b0e878d; ret; 
0x000a865a: call 0x5b0f4ae2; pop esi; pop edi; pop ebp; ret; 
0x00162ce7: call 0x5b1af16f; pop esi; ret; 
0x000a4789: call 0x5b270c11; pop esi; pop edi; pop ebp; ret; 
0x00038b86: call 0x5b30500e; pop esi; pop edi; pop ebp; ret; 
0x0015512f: call 0x5b3215b7; pop esi; pop edi; pop ebp; ret; 
0x001571df: call 0x5b323667; pop esi; pop edi; pop ebp; ret; 
0x0005b732: call 0x5b4d0; mov eax, 1; add esp, 0xc; ret; 
0x00054e27: call 0x5b5d55b5; pop esi; pop edi; ret; 
0x0005bcc5: call 0x5bb30; add esp, 0x18; pop ebx; ret; 
0x00029776: call 0x5d61f5d6; ret; 
0x00034f42: call 0x5d62ada2; ret; 
0x000365d3: call 0x5d62c433; ret; 
0x00038b48: call 0x5d62e9a8; ret; 
0x0003b766: call 0x5d6315c6; ret 4; 
0x0003dfa4: call 0x5d633e04; ret; 
0x0005a4f5: call 0x5d650355; ret; 
0x0007c028: call 0x5d671e88; ret; 
0x0007fa06: call 0x5d675866; ret; 
0x00091d9a: call 0x5d687bfa; ret; 
0x00092125: call 0x5d687f85; ret; 
0x000924b1: call 0x5d688311; ret; 
0x0009864e: call 0x5d68e4ae; ret; 
0x00098fdb: call 0x5d68ee3b; ret; 
0x00099738: call 0x5d68f598; ret; 
0x000a1a6e: call 0x5d6978ce; ret; 
0x000a1af0: call 0x5d697950; ret; 
0x000a4703: call 0x5d69a563; ret; 
0x000a6455: call 0x5d69c2b5; ret 4; 
0x000ad11f: call 0x5d6a2f7f; ret; 
0x000c5cc8: call 0x5d6bbb28; ret; 
0x000d1a63: call 0x5d6c78c3; ret; 
0x000e7996: call 0x5d6dd7f6; ret; 
0x000e7ef4: call 0x5d6ddd54; ret; 
0x000e8d7a: call 0x5d6debda; ret; 
0x000eb7e1: call 0x5d6e1641; ret; 
0x000ed511: call 0x5d6e3371; ret; 
0x000ef488: call 0x5d6e52e8; ret; 
0x000f0398: call 0x5d6e61f8; ret; 
0x00102c28: call 0x5d6f8a88; ret; 
0x0010aa08: call 0x5d700868; ret; 
0x0010eb9d: call 0x5d7049fd; ret; 
0x0010ed71: call 0x5d704bd1; ret; 
0x0010ee8f: call 0x5d704cef; ret; 
0x00131630: call 0x5d727490; ret; 
0x0013239c: call 0x5d7281fc; ret; 
0x0013f550: call 0x5d7353b0; ret; 
0x00142dc7: call 0x5d738c27; ret; 
0x00143210: call 0x5d739070; ret; 
0x00146acf: call 0x5d73c92f; ret; 
0x00147144: call 0x5d73cfa4; ret; 
0x001516ad: call 0x5d74750d; ret; 
0x001550c2: call 0x5d74af22; ret; 
0x001571c6: call 0x5d74d026; ret; 
0x0016a3c2: call 0x5d760222; ret; 
0x0016b991: call 0x5d7617f1; ret; 
0x0016d202: call 0x5d763062; ret; 
0x0016dc92: call 0x5d763af2; ret; 
0x0016df62: call 0x5d763dc2; ret; 
0x0016f0de: call 0x5d764f3e; ret; 
0x0017f21d: call 0x5d77507d; ret; 
0x0017f8a7: call 0x5d775707; ret; 
0x00189ffc: call 0x5d77fe5c; ret; 
0x0018c35b: call 0x5d7821bb; ret; 
0x001a7ba6: call 0x5d79da06; ret; 
0x00169497: call 0x5ee71df7; pop edi; ret; 
0x000536d6: call 0x5f639436; ret; 
0x000542e3: call 0x5f63a043; ret; 
0x00054f16: call 0x5f63ac76; ret; 
0x00142445: call 0x61430; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x001288f5: call 0x616b0; add esp, 0x10; add esp, 0xc; ret; 
0x001288a3: call 0x616b0; add esp, 0x1c; ret; 
0x000c14b4: call 0x660c14b9; pmovmskb eax, mm1; bsf eax, eax; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x0005ac36: call 0x66130; add esp, 0x1c; ret; 
0x0005ac57: call 0x66440; add esp, 0x1c; ret; 
0x0005af76: call 0x664c0; add esp, 0x1c; ret; 
0x00062a85: call 0x690623bc; cmc; add al, 0; add byte ptr [eax - 0x73], dl; xchg byte ptr [ebp + edi*2 - 7], al; call dword ptr [eax - 0x18]; 
0x0006e86d: call 0x6906e1a4; cmc; add al, 0; add byte ptr [eax - 0x73], dl; xchg byte ptr [ebp + edi*2 - 7], al; call dword ptr [eax - 0x18]; 
0x000270b3: call 0x6feef745; stc; call dword ptr [eax - 0x73]; 
0x0006dc65: call 0x72650; add esp, 0x1c; ret; 
0x00080527: call 0x72920; add esp, 0x1c; ret; 
0x00072935: call 0x729a0; add esp, 0x1c; ret; 
0x000d9993: call 0x74e01d9a; pop ss; mov cl, dl; and cl, 0xf; je 0xd99c0; ret; 
0x00091bfe: call 0x758eb; dec dword ptr [ebx - 0xf47efb1]; add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000790e2: call 0x78e40; mov eax, 1; add esp, 0xc; ret; 
0x00079aa6: call 0x79960; add esp, 0x1c; ret; 
0x0017669d: call 0x79a90; add esp, 0x18; pop ebx; ret; 
0x0012932f: call 0x7b3c0; add esp, 0x10; add esp, 8; mov eax, 1; pop ebx; ret; 
0x00085257: call 0x7b3c0; add esp, 0x18; pop ebx; ret; 
0x0007c061: call 0x7bf70; add esp, 0x1c; ret; 
0x00060b84: call 0x7cb00; cmp eax, 1; sbb eax, eax; add esp, 0x1c; ret; 
0x0005ad65: call 0x7cd30; add esp, 0x1c; ret; 
0x0007d25d: call 0x7d080; add esp, 0x2c; ret; 
0x00085564: call 0x7e470; add esp, 0x1c; ret; 
0x00085581: call 0x7e620; add esp, 0x1c; ret; 
0x0006147b: call 0x7ea40; add esp, 0x2c; ret; 
0x0007fbf9: call 0x7fa20; add esp, 0x28; pop ebx; ret; 
0x00080645: call 0x80560; add esp, 0x28; pop ebx; ret; 
0x0008046d: call 0x80560; add esp, 0x2c; ret; 
0x00024b35: call 0x8102618a; ret 0xa2db; 
0x00025835: call 0x81026e7d; ret 0x95db; 
0x00033e35: call 0x81035397; ret 0xafdb; 
0x00039135: call 0x8103a644; ret 0x5cdb; 
0x000aa135: call 0x810aaf34; ret 0x4cdb; 
0x000fae81: call 0x810faf06; ret; 
0x000fb235: call 0x810fbb23; ret 0x3bdb; 
0x00114635: call 0x81114d8f; ret 0xa7db; 
0x00130535: call 0x81130ad0; ret 0xe8db; 
0x00131535: call 0x81131ac0; ret 0xd8db; 
0x00132535: call 0x81132ab0; ret 0xc8db; 
0x00132735: call 0x81132cae; ret 0xc6db; 
0x0014b335: call 0x8114b722; ret 0x3adb; 
0x0007f544: call 0x81150; add esp, 0x1c; ret; 
0x000843bd: call 0x82060; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0013ef93: call 0x8324f420; ret 0x8d01; 
0x00135ea9: call 0x83ee8fde; clc; or dword ptr [edi], ecx; xchg esi, eax; ret; 
0x000ffd64: call 0x840ffd40; les ecx, ptr [eax]; xor eax, eax; pop ebx; ret; 
0x00169937: call 0x8416993a; ret; 
0x0017d264: call 0x84c40; add esp, 0x1c; not eax; shr eax, 0x1f; ret; 
0x00124b8b: call 0x85420; add esp, 0x10; mov eax, 1; add esp, 8; pop ebx; ret; 
0x000857e1: call 0x85680; add esp, 0x18; pop ebx; ret; 
0x0005aa86: call 0x85680; add esp, 0x1c; ret; 
0x000859a1: call 0x858b0; add esp, 0x18; pop ebx; ret; 
0x0005ab96: call 0x858b0; add esp, 0x1c; ret; 
0x0006144d: call 0x85aa0; add esp, 0x2c; ret; 
0x00085e71: call 0x85ce0; add esp, 0x18; pop ebx; ret; 
0x0013d702: call 0x85ce0; add esp, 0x1c; ret; 
0x0008f2be: call 0x86b50; lea esi, cs:[esi]; pop ebx; pop esi; pop edi; ret; 
0x00127eea: call 0x88145f72; inc esi; or byte ptr [ebx - 0x7bf0fe01], al; ret 0xfff5; 
0x000891ae: call 0x88c70; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0014694c: call 0x891659d4; ret 0xe283; 
0x001ae5a9: call 0x891fa831; ret; 
0x00091485: call 0x8938888d; clc; call dword ptr gs:[0x10]; 
0x0007353f: call 0x8a07353e; ret; 
0x00074294: call 0x8a074293; sbb byte ptr [ebx - 0x5037b], cl; inc dword ptr [ecx]; ret; 
0x000780c9: call 0x8a0780c8; sbb byte ptr [ebx - 0x4fb7b], cl; inc dword ptr [ecx]; ret; 
0x00029484: call 0x8b029534; jl 0x294af; sub byte ptr [ebp - 0x6945379], cl; call dword ptr [eax + 0x68]; 
0x000876b4: call 0x8b1a0; add esp, 0x1c; ret; 
0x0008bb51: call 0x8ba70; add esp, 0x28; pop ebx; ret; 
0x0008d0de: call 0x8d010; add esp, 0x18; pop ebx; ret; 
0x0008d11e: call 0x8d010; or dword ptr [esi], 8; add esp, 0x14; pop ebx; pop esi; ret; 
0x0010cc50: call 0x8d54f74; or eax, edx; pop ebx; ret; 
0x00085227: call 0x8d6d0; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0008d862: call 0x8daa0; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x000788b6: call 0x8e0788b5; push eax; adc byte ptr [ebx - 0x4ff63], cl; call dword ptr [edx - 0x77]; 
0x0003ca10: call 0x8e600; mov ebx, dword ptr [esp + 0x20]; mov ecx, 8; mov edx, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x00124dc0: call 0x8e600; mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00124870: call 0x8e600; mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x000fb608: call 0x8e600; mov edx, eax; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x00098281: call 0x8e750; mov eax, dword ptr [ebp - 0x3c]; add esp, 0x10; call eax; 
0x000964d2: call 0x8ea30; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0009a70c: call 0x8efe0; add esp, 0x28; pop ebx; ret; 
0x0009b4dc: call 0x8efe0; add esp, 0x2c; ret; 
0x0010bcf2: call 0x8f2d0; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x000dd04a: call 0x8f2d0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00094366: call 0x8f2d0; add esp, 0x10; mov eax, dword ptr [esp + 0xc]; add esp, 0x18; pop ebx; ret; 
0x00156c1a: call 0x8f2d0; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0008cdfa: call 0x8f2d0; add esp, 0x1c; ret; 
0x0010b9b2: call 0x8f2d0; call dword ptr [esi]; 
0x0008fe41: call 0x8f3d0; add esp, 0x1c; ret; 
0x00099d78: call 0x901f0; add esp, 0x1c; ret; 
0x00090380: call 0x902a0; add esp, 0x18; pop ebx; ret; 
0x000906a4: call 0x905e0; add esp, 0x1c; ret; 
0x00091bff: call 0x91a40; mov ecx, dword ptr [edi + 0x10]; mov eax, 0xf0; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000935e2: call 0x92910; mov ecx, dword ptr [esp + 0x18]; xor edx, edx; mov edi, eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0009db54: call 0x93070; mov ecx, dword ptr [esp + 0x38]; mov edx, ebp; mov dword ptr [esp + 0x2c], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0009f331: call 0x94140; xor edx, edx; mov eax, 1; call 0x9f2a0; mov dword ptr [esp], esi; call ebx; 
0x00090f47: call 0x94be0; add esp, 0x20; add esp, 0xc; ret; 
0x00094bb5: call 0x94be0; add esp, 0x2c; ret; 
0x000971db: call 0x968e0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00097290: call 0x968e0; add esp, 0x18; pop ebx; ret; 
0x00097e6d: call 0x97d20; add esp, 0x1c; ret; 
0x00152842: call 0x97e60; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x0009ce49: call 0x97e60; add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret; 
0x00098314: call 0x981a0; xor eax, eax; add esp, 0xc; ret; 
0x0002823f: call 0x982f0; add esp, 0x1c; ret; 
0x00099bb0: call 0x99b50; add esp, 0x18; pop ebx; ret; 
0x000a9445: call 0x9c8c8b49; add dword ptr [eax], eax; add byte ptr [ecx*4 - 0x942f36e], al; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000aa155: call 0x9c8c9859; add dword ptr [eax], eax; add byte ptr [ecx*4 - 0x952736e], al; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0009e03d: call 0x9d7e0; cmp eax, 1; sbb eax, eax; add esp, 0x1c; ret; 
0x0009f33d: call 0x9f2a0; mov dword ptr [esp], esi; call ebx; 
0x0009f773: call 0x9f6b0; add esp, 0x18; pop ebx; ret; 
0x0009f1d1: call 0x9f7f0; add esp, 0x1c; ret; 
0x0009f7a9: call 0x9faa0; add esp, 0x2c; ret; 
0x0009f7d9: call 0x9fd70; add esp, 0x2c; ret; 
0x000a1bfc: call 0xa1990; add esp, 0x10; add esp, 0x14; pop ebx; pop esi; ret; 
0x000a4054: call 0xa4313; add cl, al; call 0xfda7972; inc edi; ret 0xc083; 
0x000a416e: call 0xa442d; add cl, al; call 0xfda7a8c; inc edi; ret 0xc083; 
0x0015f161: call 0xa815f169; or byte ptr [edi], 0x84; ret; 
0x000a86a0: call 0xa8580; add esp, 0xc; test eax, eax; jne 0xa86b3; ret; 
0x000aa339: call 0xaa360; add esp, 0x1c; ret; 
0x000ab585: call 0xab590; add esp, 0x1c; ret; 
0x000acfc0: call 0xacfd0; add esp, 0x1c; ret; 
0x000ad1fd: call 0xad2c0; add esp, 0x1c; ret; 
0x000ac02f: call 0xb0090; add esp, 0x18; pop ebx; ret; 
0x00062936: call 0xb615efc4; inc ebp; or eax, 0x8901e683; ret; 
0x0013053c: call 0xb8660551; ret; 
0x0009aa1f: call 0xc03aacad; ret; 
0x00037e04: call 0xc1d40; add esp, 0x1c; ret; 
0x0015bf39: call 0xc21a0; add esp, 0x1c; ret; 
0x0013de75: call 0xc2490; add esp, 0x14; pop ebx; pop esi; ret; 
0x000abf3f: call 0xc2490; add esp, 0x18; pop ebx; ret; 
0x000a8b43: call 0xc24e9b47; ret; 
0x000a9578: call 0xc24ea57c; ret; 
0x000a95b8: call 0xc24ea5bc; ret; 
0x000a95f3: call 0xc24ea5f7; ret; 
0x000a9633: call 0xc24ea637; ret; 
0x000aa128: call 0xc24eb12c; ret; 
0x000aa303: call 0xc24eb307; ret; 
0x000ab4d8: call 0xc24ec4dc; ret; 
0x000ac2c3: call 0xc24ed2c7; ret; 
0x000ac303: call 0xc24ed307; ret; 
0x000ac348: call 0xc24ed34c; ret; 
0x000a852f: call 0xc2510; add esp, 0x18; pop ebx; ret; 
0x000d4773: call 0xc2580; add esp, 0x18; pop ebx; ret; 
0x000a0c09: call 0xc25c0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000a855d: call 0xc25c0; add esp, 0x18; pop ebx; ret; 
0x000ac08b: call 0xc2610; add esp, 0x18; pop ebx; ret; 
0x000abfdb: call 0xc2b40; add esp, 0x18; pop ebx; ret; 
0x000c3adc: call 0xc4020; add esp, 0x1c; ret; 
0x000c45ce: call 0xc45e0; add esp, 0x2c; ret; 
0x0013e3f9: call 0xc4980; add esp, 0x18; pop ebx; ret; 
0x000c4c15: call 0xc49f0; add esp, 0x1c; ret; 
0x000534db: call 0xc4c00; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x000c349b: call 0xc4c00; add esp, 0x18; pop ebx; ret; 
0x000c4de9: call 0xc4e00; add esp, 0x1c; ret; 
0x0013e6b9: call 0xc66c0; add esp, 0x18; pop ebx; ret; 
0x000c738d: call 0xc7ce0; add esp, 0x1c; ret; 
0x0005a1fc: call 0xc8f7773; and al, 0x89; ret 0x13eb; 
0x000ca6ed: call 0xcaec0; add esp, 0x1c; ret; 
0x0009c1d9: call 0xcce44e0; ret; 
0x000cd6e3: call 0xcd770; add esp, 0x2c; ret; 
0x000cde4d: call 0xce760; add esp, 0x1c; ret; 
0x0018c56c: call 0xcea28ffa; call dword ptr gs:[0x10]; 
0x000d1063: call 0xd10f0; add esp, 0x2c; ret; 
0x000d1973: call 0xd1a00; add esp, 0x2c; ret; 
0x000d2083: call 0xd2110; add esp, 0x2c; ret; 
0x000d29dd: call 0xd2a00; add esp, 0x1c; ret; 
0x000d9bca: call 0xd4710; add esp, 0x14; pop ebx; pop esi; ret; 
0x000db8cd: call 0xda950; add esp, 0x18; pop ebx; ret; 
0x000ded1c: call 0xda950; add esp, 0x1c; ret; 
0x000dcdff: call 0xdcb80; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000da826: call 0xdd060; add esp, 0x1c; ret; 
0x000df76f: call 0xdf870; add esp, 0x2c; ret; 
0x000e2b61: call 0xe4f30; add esp, 0x2c; ret; 
0x000e2ba1: call 0xe73f0; add esp, 0x2c; ret; 
0x000e7561: call 0xe7650; add esp, 0x10; mov eax, 1; add esp, 0xc; ret; 
0x000e7471: call 0xe77e0; add esp, 0x10; mov eax, 1; add esp, 0xc; ret; 
0x000fdbc0: call 0xea2ae; inc dword ptr [ebx - 0x7c72f714]; adc ecx, dword ptr [eax - 7]; call dword ptr [eax + 0x55]; 
0x000eab41: call 0xeab50; add esp, 0x1c; ret; 
0x000eb0a5: call 0xead50; mov eax, 0xffffffff; add esp, 0x1c; ret; 
0x000eac01: call 0xeb090; add esp, 0x1c; ret; 
0x00178730: call 0xefa70; sub esp, 8; lea edx, [esp + 0x20]; push edx; push eax; call edi; 
0x0010d979: call 0xefa80; or ebx, 0xffffffff; or edx, 0xffffffff; mov ecx, eax; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x000f09af: call 0xf01d0; add esp, 0x28; pop ebx; ret; 
0x0007b46f: call 0xf07b474; xchg esp, eax; ret 0xd009; 
0x000f08e7: call 0xf0830; add esp, 0x28; pop ebx; ret; 
0x00094f10: call 0xf0a70; mov ecx, dword ptr [edi + 0x68]; mov edx, dword ptr [esp + 0xc]; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000c45b0: call 0xf0c45f1; inc esp; ret 0x8b65; 
0x000e0477: call 0xf1740ac; xchg dword ptr [edi - 0x7c00000a], ebx; ret; 
0x000e0c88: call 0xf1748bd; xchg dword ptr [esi - 0x7c000012], ecx; ret; 
0x0018a15c: call 0xf18a161; xchg esp, eax; ret 0xd009; 
0x001423d5: call 0xf5a4e2; add byte ptr [eax], al; rol cl, 0xea; adc byte ptr [ecx + 0xf9], al; or byte ptr [edi], 0x44; ret 0x8dc3; 
0x00091190: call 0xf63a2809; mov eax, ebp; call dword ptr gs:[0x10]; 
0x000916f0: call 0xf63a3069; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0013d822: call 0xfb790; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00103042: call 0xfc410; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x00103050: call 0xfd2d0; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x000ffd63: call 0xfd550; add esp, 8; xor eax, eax; pop ebx; ret; 
0x000a405b: call 0xfda7972; inc edi; ret 0xc083; 
0x000a4175: call 0xfda7a8c; inc edi; ret 0xc083; 
0x000a629b: call 0xfda9bb2; inc edi; ret 0x508d; 
0x0010e2c8: call 0xfe11bcf; dec edi; ret 0xbce9; 
0x000e760a: call dword ptr [0x10]; cmp eax, -0x26; jne 0xe7621; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x0011464e: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x114660; pop ebx; ret; 
0x001146be: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x1146d0; pop ebx; ret; 
0x00114abe: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x114ad0; pop ebx; ret; 
0x0011f0de: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x11f0f0; pop ebx; ret; 
0x0011f5fe: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x11f610; pop ebx; ret; 
0x0011fcdc: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x11fcf0; pop ebx; ret; 
0x001208ea: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x120900; pop ebx; ret; 
0x00120ffe: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x121010; pop ebx; ret; 
0x0012150a: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x121520; pop ebx; ret; 
0x00121a2a: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x121a40; pop ebx; ret; 
0x00122fae: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x122fc0; pop ebx; ret; 
0x00122ffe: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x123010; pop ebx; ret; 
0x00124e5e: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x124e70; pop ebx; ret; 
0x0012c46e: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x12c480; pop ebx; ret; 
0x0012e86a: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x12e880; pop ebx; ret; 
0x0012ef0e: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x12ef20; pop ebx; ret; 
0x0012f085: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x12f098; ret; 
0x0012f18e: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x12f1a0; pop ebx; ret; 
0x0013028e: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x1302a0; pop ebx; ret; 
0x0013054e: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x130560; pop ebx; ret; 
0x0003c99f: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x3c9b0; pop ebx; ret; 
0x000612ce: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x612e0; pop ebx; ret; 
0x0009f18a: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x9f1a0; pop ebx; ret; 
0x000a01e2: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0xa01f8; pop ebx; ret; 
0x000dbe0c: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0xdbe20; pop ebx; ret; 
0x0010c1b6: call dword ptr [0x10]; cmp eax, 0xfffff001; jae 0x24f50; ret; 
0x0003c960: call dword ptr [0x10]; mov ebx, edx; cmp eax, 0xfffff001; jae 0x24f50; ret; 
0x001214dc: call dword ptr [0x10]; mov ebx, edx; ret; 
0x000fb69e: call dword ptr [0x10]; neg eax; pop ebx; ret; 
0x001219fc: call dword ptr [0x10]; pop ebp; pop edi; pop ebx; ret; 
0x000eab63: call dword ptr [0x10]; pop ebx; cmp eax, 0xfffff001; jae 0x24f50; ret; 
0x0008f2ec: call dword ptr [0x10]; pop ebx; pop esi; ret; 
0x00140391: call dword ptr [0x10]; pop ebx; ret; 
0x0009c2aa: call dword ptr [0x10]; ret; 
0x0003bc5e: call dword ptr [eax + 0x102444db]; fld xword ptr [esp + 4]; fscale; fstp st(1); ret; 
0x000f179c: call dword ptr [eax + 0x10]; 
0x000f138f: call dword ptr [eax + 0x14]; 
0x000f16f8: call dword ptr [eax + 0x18]; 
0x0007d4f7: call dword ptr [eax + 0x1c]; 
0x000f4419: call dword ptr [eax + 0x20]; 
0x00088b68: call dword ptr [eax + 0x24]; 
0x0007e51c: call dword ptr [eax + 0x2c]; 
0x0008629d: call dword ptr [eax + 0x30]; 
0x0004a13b: call dword ptr [eax + 0x31]; 
0x00080f6f: call dword ptr [eax + 0x34]; 
0x00186f9f: call dword ptr [eax + 0x37c]; add esp, 0x1c; ret; 
0x000899db: call dword ptr [eax + 0x40]; 
0x00089516: call dword ptr [eax + 0x48]; 
0x00024f09: call dword ptr [eax + 0x50]; 
0x00056e77: call dword ptr [eax + 0x51]; 
0x000234dc: call dword ptr [eax + 0x52]; 
0x00039bdd: call dword ptr [eax + 0x53]; 
0x000ac5c0: call dword ptr [eax + 0x55]; 
0x000301d4: call dword ptr [eax + 0x56]; 
0x0009827e: call dword ptr [eax + 0x56]; call 0x8e750; mov eax, dword ptr [ebp - 0x3c]; add esp, 0x10; call eax; 
0x000577ee: call dword ptr [eax + 0x57]; 
0x0002889e: call dword ptr [eax + 0x68]; 
0x00023343: call dword ptr [eax + 0x6a]; 
0x0016a256: call dword ptr [eax + 0x6a]; add ch, al; push ecx; ret; 
0x0016e376: call dword ptr [eax + 0x6a]; pop es; call 0x1565b0; add esp, 0x1c; ret; 
0x0016d096: call dword ptr [eax + 0x6a]; push es; call 0x1565b0; add esp, 0x1c; ret; 
0x000a67e3: call dword ptr [eax + 0x77]; 
0x00186d2e: call dword ptr [eax + 0x8244c89]; call eax; 
0x000fd2ce: call dword ptr [eax + 0x8c95ce8]; add byte ptr [ecx + 0x141b3fc1], al; add byte ptr [ebp - 0x77], dl; ret 0x5657; 
0x00081094: call dword ptr [eax + 0xc]; 
0x0016ee1b: call dword ptr [eax + 4]; 
0x00171080: call dword ptr [eax + 8]; 
0x00106e3a: call dword ptr [eax - 0x17]; 
0x00024829: call dword ptr [eax - 0x18]; 
0x00153c32: call dword ptr [eax - 0x18]; aaa; add al, 0xee; jmp dword ptr [esi - 0x70]; 
0x000a6067: call dword ptr [eax - 0x18]; add ah, al; clc; jmp dword ptr [esi - 0x70]; 
0x0008d007: call dword ptr [eax - 0x18]; bound esi, qword ptr [eax - 6]; jmp dword ptr [esi - 0x70]; 
0x0010e36f: call dword ptr [eax - 0x18]; cli; pop esp; bnd jmp dword ptr [esi - 0x70]; 
0x0009be2f: call dword ptr [eax - 0x18]; cmp al, byte ptr [edx + 0xcbbfff9]; add byte ptr [eax], al; add cl, ch; ret 0xfffd; 
0x001531a2: call dword ptr [eax - 0x18]; cmpsd dword ptr [esi], dword ptr es:[edi]; cmp ebx, esi; jmp dword ptr [esi - 0x70]; 
0x0007923a: call dword ptr [eax - 0x18]; das; scasb al, byte ptr es:[edi]; sti; jmp dword ptr [esi - 0x70]; 
0x0018c500: call dword ptr [eax - 0x18]; dec ecx; cmpsb byte ptr [esi], byte ptr es:[edi]; out dx, eax; jmp dword ptr [esi - 0x70]; 
0x00164bed: call dword ptr [eax - 0x18]; dec esp; add bh, bh; jmp dword ptr [ebp - 0x75]; 
0x001672ed: call dword ptr [eax - 0x18]; dec esp; fsin; jmp dword ptr [ebp - 0x75]; 
0x00167217: call dword ptr [eax - 0x18]; fdivr st(6); jmp dword ptr [ebp - 0x75]; 
0x0015628c: call dword ptr [eax - 0x18]; fstp st(5); in eax, dx; jmp dword ptr [esi - 0x70]; 
0x00154272: call dword ptr [eax - 0x18]; idiv ebp; in eax, dx; jmp dword ptr [esi - 0x70]; 
0x00112454: call dword ptr [eax - 0x18]; in eax, 0xde; dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x000f7d7c: call dword ptr [eax - 0x18]; in eax, dx; ret 0xfff3; 
0x00138f27: call dword ptr [eax - 0x18]; inc edx; mov cl, 0xef; jmp dword ptr [esi - 0x70]; 
0x00153ff2: call dword ptr [eax - 0x18]; ja 0x153ff7; out dx, al; jmp dword ptr [esi - 0x70]; 
0x000795f7: call dword ptr [eax - 0x18]; jb 0x795a6; sti; jmp dword ptr [esi - 0x70]; 
0x0014dd6a: call dword ptr [eax - 0x18]; jmp dword ptr [edx - 0x12]; 
0x00153eb2: call dword ptr [eax - 0x18]; mov bh, 1; out dx, al; jmp dword ptr [esi - 0x70]; 
0x000963b6: call dword ptr [eax - 0x18]; mov bl, 0xdc; stc; inc dword ptr [ebx - 0x7e45f440]; add eax, 0xa30f0000; ret 0x830f; 
0x000f6df4: call dword ptr [eax - 0x18]; movsd dword ptr es:[edi], dword ptr [esi]; ret; 
0x0014b44a: call dword ptr [eax - 0x18]; pop ds; mov esi, gs; jmp dword ptr [esi - 0x70]; 
0x00095962: call dword ptr [eax - 0x18]; pop es; out 0xf9, eax; jmp dword ptr [esi - 0x70]; 
0x00153f52: call dword ptr [eax - 0x18]; pop ss; add esi, ebp; jmp dword ptr [esi - 0x70]; 
0x0005af52: call dword ptr [eax - 0x18]; pop ss; xchg ecx, eax; std; jmp dword ptr [esi - 0x70]; 
0x00153e12: call dword ptr [eax - 0x18]; push edi; add ch, dh; jmp dword ptr [esi - 0x70]; 
0x00154312: call dword ptr [eax - 0x18]; push edi; std; in eax, dx; jmp dword ptr [esi - 0x70]; 
0x00096417: call dword ptr [eax - 0x18]; push edx; fdiv st(1), st(0); jmp dword ptr [esi - 0x70]; 
0x00090e89: call dword ptr [eax - 0x18]; rcr byte ptr [edi + edi*8 - 1], 0x89; ret 0x5ae9; 
0x0017b7b7: call dword ptr [eax - 0x18]; ret 0xeb96; 
0x00111da7: call dword ptr [eax - 0x18]; ret 0xf222; 
0x00165847: call dword ptr [eax - 0x18]; ret 0xfef2; 
0x0004d4a6: call dword ptr [eax - 0x18]; ret; 
0x0009564d: call dword ptr [eax - 0x18]; sbb al, 0xea; stc; inc dword ptr [ebx - 0x7e45f440]; add eax, 0xa30f0000; ret 0x830f; 
0x000c7cbf: call dword ptr [eax - 0x18]; stosb byte ptr es:[edi], al; ret; 
0x000ef9f5: call dword ptr [eax - 0x18]; test byte ptr [esp + esi*8 - 1], dl; add esp, 0x14; pop ebx; pop esi; ret; 
0x000966ce: call dword ptr [eax - 0x18]; wait; fyl2xp1; jmp dword ptr [esi - 0x70]; 
0x000ec5d2: call dword ptr [eax - 0x18]; xchg dword ptr [ebx - 0x3b7cfffc], edx; adc byte ptr [ecx], bh; ret; 
0x000c6dd4: call dword ptr [eax - 0x18]; xchg ebp, eax; sal dh, cl; jmp dword ptr [esi - 0x70]; 
0x00092fd2: call dword ptr [eax - 0x18]; xchg edi, eax; adc dl, bh; inc dword ptr [ebx - 0x17a9f314]; push cs; ret 0xffff; 
0x00153cd2: call dword ptr [eax - 0x18]; xchg edi, eax; add ebp, esi; jmp dword ptr [esi - 0x70]; 
0x00153b92: call dword ptr [eax - 0x18]; xlatb; add al, 0xee; jmp dword ptr [esi - 0x70]; 
0x000ed837: call dword ptr [eax - 0x18]; xor ch, byte ptr [eax - 0xc]; jmp dword ptr [esi - 0x70]; 
0x001266d6: call dword ptr [eax - 0x39]; 
0x000583d7: call dword ptr [eax - 0x48]; 
0x0016ebee: call dword ptr [eax - 0x4e1f00d]; ret; 
0x0011e42e: call dword ptr [eax - 0x72f3137d]; and dword ptr [esi], 0x46; stc; call dword ptr [eax - 0x18]; 
0x000fe09e: call dword ptr [eax - 0x72f7137d]; xor dword ptr [ecx], 0x48; stc; call dword ptr [eax + 0x55]; 
0x00025738: call dword ptr [eax - 0x73]; 
0x00165840: call dword ptr [eax - 0x73]; sbb dword ptr [eax + 0x61], -7; call dword ptr [eax - 0x18]; ret 0xfef2; 
0x000c7cb8: call dword ptr [eax - 0x73]; xchg dword ptr [edx + 0x2f], esp; stc; call dword ptr [eax - 0x18]; stosb byte ptr es:[edi], al; ret; 
0x0017b7b0: call dword ptr [eax - 0x73]; xchg dword ptr [esp + esi*2 - 7], ecx; call dword ptr [eax - 0x18]; ret 0xeb96; 
0x00167210: call dword ptr [eax - 0x73]; xor edi, 0x61; stc; call dword ptr [eax - 0x18]; fdivr st(6); jmp dword ptr [ebp - 0x75]; 
0x00037df6: call dword ptr [eax - 0x75]; 
0x0007b5ce: call dword ptr [eax - 0x76f3137d]; ret; 
0x0005946f: call dword ptr [eax - 0x77]; 
0x00140b1e: call dword ptr [eax - 0x7c028473]; call dword ptr [ecx]; 
0x000c60ce: call dword ptr [eax - 0x7c3fb275]; ret; 
0x0004d3e5: call dword ptr [eax - 0x7d]; 
0x000247d1: call dword ptr [eax - 1]; 
0x000fdacd: call dword ptr [eax - 4]; 
0x0005676f: call dword ptr [eax]; 
0x0016f72b: call dword ptr [eax]; mov eax, dword ptr [ebx + 4]; add esp, 0x14; push ebx; call dword ptr [eax + 0x10]; 
0x0016fc65: call dword ptr [eax]; mov esi, eax; mov eax, dword ptr [ebx + 4]; add esp, 0x14; push ebx; call dword ptr [eax + 0x10]; 
0x001374a6: call dword ptr [ebp + 0x14]; 
0x0005bc23: call dword ptr [ebp + 0x1c]; 
0x0008c751: call dword ptr [ebp + 0x2c]; 
0x0008b7d3: call dword ptr [ebp + 0x30]; 
0x00089ba5: call dword ptr [ebp + 0x40]; 
0x000606a8: call dword ptr [ebp + 0x50]; 
0x000e1d49: call dword ptr [ebp + 0x55]; 
0x0003e463: call dword ptr [ebp + 0x56]; 
0x0017b849: call dword ptr [ebp + 0x56]; call edi; 
0x000233eb: call dword ptr [ebp + 0x57]; 
0x0016b08b: call dword ptr [ebp + 0x6a]; 
0x00089f90: call dword ptr [ebp + 0xc]; 
0x00143173: call dword ptr [ebp + 1]; 
0x00033b66: call dword ptr [ebp - 0x18]; 
0x00024411: call dword ptr [ebp - 0x38]; 
0x00163e43: call dword ptr [ebp - 0x73]; 
0x00033c3c: call dword ptr [ebp - 0x75]; 
0x000a6600: call dword ptr [ebp - 1]; 
0x00024eec: call dword ptr [ebp]; 
0x0013821f: call dword ptr [ebx + 0x14]; 
0x0007c44d: call dword ptr [ebx + 0x1c]; 
0x00171cd4: call dword ptr [ebx + 0x20]; 
0x001866cc: call dword ptr [ebx + 0x24]; 
0x00186753: call dword ptr [ebx + 0x28]; 
0x0007e758: call dword ptr [ebx + 0x2c]; 
0x0007b9bd: call dword ptr [ebx + 0x30]; 
0x0007e841: call dword ptr [ebx + 0x34]; 
0x00082575: call dword ptr [ebx + 0x38]; 
0x00083246: call dword ptr [ebx + 0x40]; 
0x0018b75e: call dword ptr [ebx + 0x44]; 
0x0007b2ac: call dword ptr [ebx + 0x48]; 
0x0003f9de: call dword ptr [ebx + 0x50]; 
0x00058773: call dword ptr [ebx + 0x51]; 
0x000e4e70: call dword ptr [ebx + 0x52]; 
0x000e1c94: call dword ptr [ebx + 0x53]; 
0x00058a5a: call dword ptr [ebx + 0x56]; 
0x000e737d: call dword ptr [ebx + 0x57]; 
0x0004893a: call dword ptr [ebx + 0x6a]; 
0x0016fa41: call dword ptr [ebx + 0xc]; 
0x00083236: call dword ptr [ebx + 0xf000005]; 
0x001961b3: call dword ptr [ebx + 4]; 
0x001961b3: call dword ptr [ebx + 4]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0007b432: call dword ptr [ebx + 8]; 
0x0005777c: call dword ptr [ebx - 0x18]; 
0x0008d0f9: call dword ptr [ebx - 0x18]; sbb eax, 0x81000fcb; ret; 
0x0006194d: call dword ptr [ebx - 0x59]; 
0x000d60f2: call dword ptr [ebx - 0x73]; 
0x00031707: call dword ptr [ebx - 0x75]; 
0x000664d9: call dword ptr [ebx - 0x7f]; 
0x0006cfb1: call dword ptr [ebx - 1]; 
0x00056dc1: call dword ptr [ebx]; 
0x00098129: call dword ptr [ebx]; mov dword ptr [ebx + 8], 0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0016f1d7: call dword ptr [ecx + 0x10]; 
0x001707a5: call dword ptr [ecx + 0x18]; 
0x000f0d91: call dword ptr [ecx + 0x20]; 
0x0008968d: call dword ptr [ecx + 0x40]; 
0x000607cb: call dword ptr [ecx + 0x50]; 
0x00024f26: call dword ptr [ecx + 0x51]; 
0x0017415c: call dword ptr [ecx + 0x51]; push dword ptr [esp + 0x40]; push ebp; call esi; 
0x00067c9b: call dword ptr [ecx + 0x52]; 
0x000ded18: call dword ptr [ecx + 0x52]; push eax; call 0xda950; add esp, 0x1c; ret; 
0x000a19fa: call dword ptr [ecx + 0x6a]; 
0x0016ead1: call dword ptr [ecx + 0xc]; 
0x0016ead1: call dword ptr [ecx + 0xc]; add esp, 0x10; add esp, 0xc; ret; 
0x00175a40: call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x0005868b: call dword ptr [ecx + 0xf]; 
0x0016ef7c: call dword ptr [ecx + 8]; 
0x0015aa34: call dword ptr [ecx - 0x17]; 
0x0003163d: call dword ptr [ecx - 0x18]; 
0x00078a93: call dword ptr [ecx - 0x75]; 
0x000f21e1: call dword ptr [ecx - 0x77]; 
0x000f3121: call dword ptr [ecx - 0x7d]; 
0x0006ca52: call dword ptr [ecx - 1]; 
0x00032b51: call dword ptr [ecx]; 
0x0008151a: call dword ptr [edi + 0x18]; 
0x0011b841: call dword ptr [edi + 0x24]; 
0x0008b42d: call dword ptr [edi + 0x34]; 
0x00088e1d: call dword ptr [edi + 0x38]; 
0x00082f60: call dword ptr [edi + 0x40]; 
0x00088272: call dword ptr [edi + 0x44]; 
0x00087fe8: call dword ptr [edi + 0x48]; 
0x00058a46: call dword ptr [edi + 0x50]; 
0x00145d18: call dword ptr [edi + 0x52]; 
0x00058d01: call dword ptr [edi + 0x53]; 
0x00033104: call dword ptr [edi + 0x56]; 
0x000248cd: call dword ptr [edi + 0x57]; 
0x00084282: call dword ptr [edi + 0x68]; 
0x0004cd32: call dword ptr [edi + 0x6a]; 
0x00082789: call dword ptr [edi + 0xc]; 
0x00058451: call dword ptr [edi - 0x17]; 
0x00036341: call dword ptr [edi - 0x18]; 
0x00056ede: call dword ptr [edi - 0x75]; 
0x000317de: call dword ptr [edi - 0x77]; 
0x0012bfa0: call dword ptr [edi - 0x7f]; 
0x00028070: call dword ptr [edi - 1]; 
0x0016f380: call dword ptr [edx + 0x10]; 
0x001781de: call dword ptr [edx + 0x14]; 
0x00170899: call dword ptr [edx + 0x18]; 
0x0018658d: call dword ptr [edx + 0x380]; mov dword ptr [ebx + 8], eax; add esp, 0x28; pop ebx; ret; 
0x00186b16: call dword ptr [edx + 0x380]; mov dword ptr [ebx], eax; add esp, 0x28; pop ebx; ret; 
0x0002719a: call dword ptr [edx + 0x50]; 
0x0003189c: call dword ptr [edx + 0x51]; 
0x00034200: call dword ptr [edx + 0x52]; 
0x000e7367: call dword ptr [edx + 0x53]; 
0x000327dc: call dword ptr [edx + 0x56]; 
0x000d7c47: call dword ptr [edx + 0x57]; 
0x001258de: call dword ptr [edx + 0x6a]; 
0x00174046: call dword ptr [edx + 0xc]; 
0x0016ee33: call dword ptr [edx + 4]; 
0x0017647e: call dword ptr [edx + 8]; 
0x0003182c: call dword ptr [edx - 0x18]; 
0x0013c0e6: call dword ptr [edx - 0x3f]; 
0x00143cd2: call dword ptr [edx - 0x46]; 
0x0002614c: call dword ptr [edx - 0x73]; 
0x0005844a: call dword ptr [edx - 0x75]; 
0x000317f8: call dword ptr [edx - 0x77]; 
0x0003006a: call dword ptr [edx - 1]; 
0x000a6c12: call dword ptr [edx]; 
0x00080d77: call dword ptr [esi + 0x10]; 
0x00139cb5: call dword ptr [esi + 0x14]; 
0x000815b2: call dword ptr [esi + 0x18]; 
0x0008a3b1: call dword ptr [esi + 0x20]; 
0x0007e2f8: call dword ptr [esi + 0x24]; 
0x000876fb: call dword ptr [esi + 0x30]; 
0x00132ac7: call dword ptr [esi + 0x31]; 
0x00087b92: call dword ptr [esi + 0x3c]; 
0x0007b8e3: call dword ptr [esi + 0x40]; 
0x0002ff78: call dword ptr [esi + 0x50]; 
0x000e4e1b: call dword ptr [esi + 0x51]; 
0x00061bf4: call dword ptr [esi + 0x52]; 
0x00023443: call dword ptr [esi + 0x53]; 
0x00058e68: call dword ptr [esi + 0x56]; 
0x00074742: call dword ptr [esi + 0x57]; 
0x000577ba: call dword ptr [esi + 0x6a]; 
0x0008ae82: call dword ptr [esi + 0xc]; 
0x000eae0f: call dword ptr [esi + 0xf]; 
0x001711b3: call dword ptr [esi - 0x17]; 
0x0003170e: call dword ptr [esi - 0x18]; 
0x0003344e: call dword ptr [esi - 0x42]; 
0x0016fc5a: call dword ptr [esi - 0x73]; 
0x0006c8db: call dword ptr [esi - 0x75]; 
0x000a889b: call dword ptr [esi - 0x77]; 
0x000f11d1: call dword ptr [esi - 0x7d]; 
0x00034171: call dword ptr [esi - 1]; 
0x000b014d: call dword ptr [esi]; 
0x00023285: call dword ptr gs:[0x10]; 
0x0011464d: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x114660; pop ebx; ret; 
0x001146bd: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x1146d0; pop ebx; ret; 
0x00114abd: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x114ad0; pop ebx; ret; 
0x0011f0dd: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x11f0f0; pop ebx; ret; 
0x0011f5fd: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x11f610; pop ebx; ret; 
0x0011fcdb: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x11fcf0; pop ebx; ret; 
0x001208e9: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x120900; pop ebx; ret; 
0x00120ffd: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x121010; pop ebx; ret; 
0x00121509: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x121520; pop ebx; ret; 
0x00121a29: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x121a40; pop ebx; ret; 
0x00122fad: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x122fc0; pop ebx; ret; 
0x00122ffd: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x123010; pop ebx; ret; 
0x00124e5d: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x124e70; pop ebx; ret; 
0x0012c46d: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x12c480; pop ebx; ret; 
0x0012e869: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x12e880; pop ebx; ret; 
0x0012ef0d: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x12ef20; pop ebx; ret; 
0x0012f084: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x12f098; ret; 
0x0012f18d: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x12f1a0; pop ebx; ret; 
0x0013028d: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x1302a0; pop ebx; ret; 
0x0013054d: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x130560; pop ebx; ret; 
0x0003c99e: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x3c9b0; pop ebx; ret; 
0x000612cd: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x612e0; pop ebx; ret; 
0x0009f189: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x9f1a0; pop ebx; ret; 
0x000a01e1: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xa01f8; pop ebx; ret; 
0x000dbe0b: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xdbe20; pop ebx; ret; 
0x0010c1b5: call dword ptr gs:[0x10]; cmp eax, 0xfffff001; jae 0x24f50; ret; 
0x0003c95f: call dword ptr gs:[0x10]; mov ebx, edx; cmp eax, 0xfffff001; jae 0x24f50; ret; 
0x001214db: call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x000fb69d: call dword ptr gs:[0x10]; neg eax; pop ebx; ret; 
0x001219fb: call dword ptr gs:[0x10]; pop ebp; pop edi; pop ebx; ret; 
0x000eab62: call dword ptr gs:[0x10]; pop ebx; cmp eax, 0xfffff001; jae 0x24f50; ret; 
0x0008f2eb: call dword ptr gs:[0x10]; pop ebx; pop esi; ret; 
0x00140390: call dword ptr gs:[0x10]; pop ebx; ret; 
0x0009c2a9: call dword ptr gs:[0x10]; ret; 
0x00024d95: call eax; 
0x00189df1: call eax; cdq; add esp, 0x10; add esp, 0xc; ret; 
0x000a6e3f: call ebp; idiv edi; pop ebx; pop esi; pop edi; ret; 
0x0002aebb: call ebx; 
0x0009f345: call ebx; add esp, 0x14; xor eax, eax; pop ebx; pop esi; ret; 
0x0012e1e4: call ebx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x00109fa3: call ebx; ret 0x5721; 
0x00024e82: call ecx; 
0x00025d56: call edi; 
0x00026940: call edx; 
0x0012c56e: call edx; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0012e426: call edx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x00024e2b: call esi; 
0x0012c53d: call esi; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x001652bd: call esp; 
0x00088a1a: call ptr [eax - 1]; je 0x88a43; sbb byte ptr [ebx - 0x17ebdba4], cl; ja 0x889ce; stc; jmp dword ptr [ebp - 0x75]; 
0x000df1d2: call ptr [eax - 1]; je 0xdf1fb; and al, 0xe8; ret; 
0x0007f1f4: call ptr [ebx + 0x5e]; mov eax, ecx; pop edi; ret; 
0x0002f3d3: call ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x00061356: call ptr [ebx + 0x5e]; pop edi; ret; 
0x0003c748: call ptr [ebx + 0x5e]; ret; 
0x0010e3a5: call ptr [ebx + 0xf]; inc esp; ret 0x2ec3; 
0x000a8a33: call ptr [ebx + 0xf]; inc esp; ret 0xc083; 
0x0008136b: call ptr [ebx - 0x75]; add bl, byte ptr [esi + 0x5f]; ret; 
0x0007cc2f: call ptr [ebx - 0x77]; clc; pop esi; pop edi; pop ebp; ret; 
0x000ea0de: call ptr [ebx - 0x77]; rcr byte ptr [esi + 0x5f], 1; pop ebp; ret; 
0x0007e12b: call ptr [ebx - 0x77]; ret 0x5f5e; 
0x0017edc8: call ptr [ebx - 7]; call dword ptr [eax - 0x18]; 
0x0003c3cb: call ptr [ecx + 0x5a]; ret; 
0x000b7588: call ptr [edi + 0x5b]; ret; 
0x000b9d22: call ptr [edi + 0x5e]; pop ebx; ret; 
0x000ebfe1: call ptr [edi + ecx - 0x6c]; ret; 
0x00167cfd: call ptr [edi - 3]; jmp dword ptr [esi - 0x70]; 
0x001aa581: call ptr [edi]; add byte ptr [eax], al; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x001351ae: call ptr [edx + 0x59]; pop eax; ret; 
0x00039af3: call ptr [edx - 1]; je 0x39b1c; and al, 0xe8; ret 0xfff5; 
0x000c246f: call ptr [esi + 0x5b]; ret; 
0x0009afa9: call ptr [esi + 0x5f]; pop ebp; ret; 
0x0005b5be: call ptr [esi + 0x5f]; ret; 
0x0016f6a6: cdq; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b34c4], al; ret; 
0x00189df3: cdq; add esp, 0x10; add esp, 0xc; ret; 
0x00138c62: cdq; clc; dec dword ptr [ebx - 0x7cdbdbb4]; les ecx, ptr [ecx + ecx*4]; ret; 
0x0013a6cb: cdq; dec ecx; stc; call dword ptr [eax + 0x57]; 
0x0011143f: cdq; dec ecx; stc; call dword ptr [eax + 0x6a]; 
0x00176605: cdq; dec ecx; stc; call dword ptr [edi + 0x56]; 
0x0003ef9c: cdq; idiv dword ptr [esp + 0xc]; mov dword ptr [ecx], eax; mov eax, ecx; mov dword ptr [ecx + 4], edx; ret 4; 
0x000b936b: cdq; jmp ecx; 
0x000779b3: cdq; mov dl, 0xff; dec dword ptr [ebx - 0x4ff7b]; jmp dword ptr [ebp - 0x75]; 
0x00127133: cdq; mov edx, 0xc483fff9; adc byte ptr [ebp + 0x74840fc0], al; or eax, dword ptr [eax]; add byte ptr [ebp - 0x6b0087d], cl; call dword ptr [edx + 0x52]; 
0x000b9583: cdq; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00082f5a: cdq; push 1; push edx; push eax; push ebx; call dword ptr [edi + 0x40]; 
0x0018bbe0: cdq; push 1; push edx; push eax; push esi; call dword ptr [edi + 0x40]; 
0x000da843: cdq; push edx; push eax; call 0xdd060; add esp, 0x1c; ret; 
0x00087c08: cdq; push edx; push eax; push ebx; call dword ptr [esi + 0x40]; 
0x0018b2aa: cdq; push edx; push eax; push ebx; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x40]; 
0x000a8b6d: cdq; pushfd; add dword ptr [eax], eax; add dh, dh; ret; 
0x000df543: cdq; ret; 
0x000a42aa: cdq; stc; call dword ptr [eax + 0x68]; 
0x000a175c: cdq; stc; call dword ptr [eax - 0x73]; 
0x00183565: cdq; stc; call dword ptr [ecx - 0x77]; 
0x000a0cd2: cdq; stc; call dword ptr [edx - 0x73]; 
0x00182cf5: cdq; stc; call dword ptr [edx - 0x77]; 
0x000301fa: cdq; sub edi, ecx; call dword ptr [eax + 0x56]; 
0x0012ed83: cdq; sub edi, edi; inc dword ptr [ebx - 0x6af0f708]; rol byte ptr [ebx - 0x49f0d33c], 0xc0; neg eax; ret; 
0x00165663: cdq; xchg ch, bh; jmp dword ptr [esi - 0x70]; 
0x0011aa03: cdq; xchg eax, esi; jmp dword ptr [ebp - 0x5f]; 
0x0019793a: clc; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00066c3e: clc; add al, 0x74; and dword ptr [ebx - 0x5af7b], ecx; dec dword ptr [ebx + 0x40f63440]; jmp dword ptr [eax]; 
0x0009e2cd: clc; add al, 0x74; fmul dword ptr [ebp - 0x676ab79]; call dword ptr [eax - 0x73]; 
0x000402fa: clc; add al, 0x74; ret 0xffb8; 
0x0015355d: clc; add al, 0x74; xchg byte ptr [ebx - 0x7d7253ab], cl; pop esp; mov cl, 0xf9; call dword ptr [eax - 0x73]; 
0x00117a54: clc; add al, 0x77; adc byte ptr [ebx + 0x66082454], cl; mov dword ptr [edx + 0x3e], eax; xor eax, eax; ret; 
0x001194f4: clc; add al, 0x77; adc byte ptr [ebx + 0x66082454], cl; mov dword ptr [edx + 0x42], eax; xor eax, eax; ret; 
0x0005ae1d: clc; add al, 0xf; xchg esp, eax; ret 0x48b; 
0x0009c1d0: clc; add al, 0xf; xchg esp, eax; ror byte ptr [edi], 0xb6; rol byte ptr [ebx - 0x3b7cfd18], 0xc; ret; 
0x00090440: clc; add al, byte ptr [ebx + 0x28901e0]; xor eax, eax; ret; 
0x0007faf9: clc; add al, byte ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0007fb94: clc; add bl, byte ptr [esi + 0x5f]; pop ebp; ret; 
0x001815fa: clc; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg byte ptr [ecx + 0x66], ah; stc; call dword ptr [eax - 0x18]; 
0x0008a13c: clc; add byte ptr [eax], al; add byte ptr [ebx + 0x555004ec], al; push esi; call dword ptr [ebx + 0x38]; 
0x00104bb8: clc; add byte ptr [eax], al; add byte ptr [edi], cl; dec esp; ret; 
0x0008431a: clc; add cl, byte ptr [ecx + 0x4c48301]; xor eax, eax; pop ebx; pop esi; ret; 
0x000a0d13: clc; add cl, byte ptr [edi]; inc esp; ret 0xec83; 
0x00082f34: clc; add cl, byte ptr [edi]; scasd eax, dword ptr es:[edi]; ret 0xbe0f; 
0x000303c4: clc; add cl, byte ptr [edi]; test byte ptr [edi - 0x7cffffff], dh; rol byte ptr [ecx], 0x83; ret; 
0x0017bad5: clc; add cl, byte ptr [edi]; xchg esp, eax; ret 0xf883; 
0x0015e628: clc; add cl, byte ptr [edi]; xchg esp, eax; ret; 
0x00157212: clc; add dh, byte ptr [ebp + 0xa]; mov eax, ecx; ret; 
0x00099ae9: clc; add dh, byte ptr [edi + 0x13]; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00129f84: clc; add dh, byte ptr [esi + 0x28]; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x00174a04: clc; add dword ptr [eax + 1], edi; sbb eax, -1; add esp, 0xc; ret; 
0x000527e4: clc; add dword ptr [eax], eax; add byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; aad 1; ret 0xd889; 
0x00158359: clc; add dword ptr [ebp + 0xf04004c], ecx; xchg esp, eax; ret 0x448b; 
0x0009ceb8: clc; add dword ptr [ecx], ebx; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00099b19: clc; add dword ptr [edi + 0x13], esi; mov edx, dword ptr [esp + 4]; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x00090c39: clc; add dword ptr [edi + 0x13], esi; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000e9ec5: clc; add dword ptr [edi + 0x17], edi; pop ebx; pop esi; pop edi; ret; 
0x001515d3: clc; add dword ptr [edi + 0x19], edi; add esp, 4; pop ebx; pop esi; ret; 
0x000e95cf: clc; add dword ptr [edi + 0x1d], edi; add esp, 4; pop ebx; pop esi; ret; 
0x00041995: clc; add dword ptr [edi + 0x1f], edi; add esp, 4; pop ebx; pop esi; ret; 
0x0010bcc4: clc; add dword ptr [edi + 0x20], edi; add esp, 4; pop ebx; pop esi; ret; 
0x00188843: clc; add dword ptr [edi + 0x21], edi; add esp, 4; pop ebx; pop esi; ret; 
0x00182552: clc; add dword ptr [edi + 0x22], edi; add esp, 8; pop ebx; ret; 
0x000dd018: clc; add dword ptr [edi + 0x24], edi; add esp, 8; pop ebx; ret; 
0x001576df: clc; add dword ptr [edi + 0x25], edi; add esp, 8; pop ebx; ret; 
0x0008f55d: clc; add dword ptr [edi + 0x37], edi; pop ebx; pop esi; pop edi; ret; 
0x0010b969: clc; add dword ptr [edi + 0x3b], edi; call dword ptr [esi]; 
0x00162dc3: clc; add dword ptr [edi + 0x59], edi; add esp, 4; pop ebx; pop esi; ret; 
0x00156bb3: clc; add dword ptr [edi + 0x59], edi; pop ebx; pop esi; pop edi; ret; 
0x0012ba39: clc; add dword ptr [edi + 0xb], edi; add esp, 8; pop ebx; ret; 
0x0008cde1: clc; add dword ptr [edi + 0xb], edi; ret; 
0x00075669: clc; add dword ptr [edi], ecx; test byte ptr [edi - 0x76000024], bh; ret; 
0x0017d047: clc; add dword ptr [edi], ecx; xchg esp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x000907ed: clc; add dword ptr [edx + 0x16], edi; mov eax, 0x5f; cmovne eax, edx; ret; 
0x00141aed: clc; add eax, 0xc; ret; 
0x000a6c53: clc; add eax, dword ptr [ecx]; ret 0x38b; 
0x00096cdd: clc; add eax, dword ptr [ecx]; ret 0x8966; 
0x000c0ff5: clc; add eax, ecx; pop edi; ret; 
0x000c1a61: clc; add ebp, dword ptr [ecx]; ret 0x4a8d; 
0x000c1aa6: clc; add ebp, dword ptr [ecx]; ret 0xc031; 
0x0009191c: clc; add esi, dword ptr [eax + ecx + 0x5b]; pop esi; pop edi; ret; 
0x0002fd7c: clc; add esi, dword ptr [eax + ecx - 0x7d]; les ecx, ptr [eax]; pop ebx; ret; 
0x000ffd4d: clc; add esi, dword ptr [edi + ebx - 0x7d]; les ecx, ptr [eax]; xor eax, eax; pop ebx; ret; 
0x0009197e: clc; add esi, dword ptr [esi + ecx + 0x5b]; pop esi; pop edi; ret; 
0x000ec7ce: clc; and al, 0xf; xchg esp, eax; ret 0xd309; 
0x0002f54b: clc; and byte ptr [eax], al; mov eax, dword ptr [eax + 0x10e0]; ret; 
0x0003ea31: clc; and byte ptr [ebx + esi - 0x77], dh; ret 0xc083; 
0x00095900: clc; and dword ptr [ebp + 4], esi; add dword ptr [edx + 4], 1; add esp, 0xc; ret; 
0x0008e7e2: clc; and eax, 1; mov dword ptr [edx + 0x24], eax; mov dword ptr gs:[0x7c], edx; pop ebx; ret; 
0x0008f15a: clc; and eax, 1; mov dword ptr [edx + 8], eax; mov dword ptr gs:[0x78], edx; pop ebx; ret; 
0x000903e0: clc; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000b0058: clc; bsf edx, edx; add eax, edx; pop edi; pop esi; ret; 
0x0019cc58: clc; call 0x189c1d; add ebx, 0x3f292; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019bc88: clc; call 0x189c1d; add ebx, 0x400a2; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019aab2: clc; call 0x189c1d; add ebx, 0x40ff8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198952: clc; call 0x189c1d; add ebx, 0x42ed8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001969b2: clc; call 0x189c1d; add ebx, 0x44bf8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001934fd: clc; call 0x189c1d; add ebx, 0x47c2d; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00056e76: clc; call dword ptr [eax + 0x51]; 
0x000483c8: clc; call dword ptr [eax + 0x52]; 
0x000c8637: clc; call dword ptr [eax + 0x55]; 
0x0005d4da: clc; call dword ptr [eax + 0x56]; 
0x0010af78: clc; call dword ptr [eax - 0x73]; 
0x00048424: clc; call dword ptr [eax - 1]; 
0x0010b152: clc; call dword ptr [ecx + 0x6a]; 
0x0005d631: clc; call dword ptr [edx + 0x51]; 
0x000ac5c6: clc; call dword ptr [esi + 0x50]; 
0x000c95a1: clc; call dword ptr [esi + 0x53]; 
0x0009148a: clc; call dword ptr gs:[0x10]; 
0x0010e3a4: clc; call ptr [ebx + 0xf]; inc esp; ret 0x2ec3; 
0x00141508: clc; cmc; je 0x141500; add esp, 8; pop ebx; ret; 
0x00069737: clc; dec byte ptr [edi]; test byte ptr [ecx - 0x7cfffffe], ah; ret; 
0x0009b2b6: clc; dec dword ptr [ebp - 0x3b7c00bb]; adc byte ptr [ebx - 0x69f00208], al; ret; 
0x000ad558: clc; dec dword ptr [ebp - 0x664e770]; call dword ptr [edx - 0x73]; 
0x000a5a77: clc; dec dword ptr [ebp - 0x6673f79]; call dword ptr [eax - 0x73]; 
0x000a604d: clc; dec dword ptr [ebp - 0x6677f7d]; call dword ptr [eax - 0x73]; 
0x0013c294: clc; dec dword ptr [ebx - 0x3b7c3bab]; adc byte ptr [ebp - 0x7ce4e884], cl; ret; 
0x000a62d9: clc; dec dword ptr [ebx - 0x72dbdb84]; xchg dword ptr [eax - 0x68], edi; stc; call dword ptr [eax - 0x73]; 
0x000a0757: clc; dec dword ptr [ebx - 0x76e3dbbc]; add al, 0x24; call esi; 
0x000c9113: clc; dec dword ptr [ebx - 0x76efdbb4]; ret 0x1b8; 
0x00138c63: clc; dec dword ptr [ebx - 0x7cdbdbb4]; les ecx, ptr [ecx + ecx*4]; ret; 
0x00106acf: clc; dec dword ptr [ecx + 0x3efe01d0]; jmp esi; 
0x0006bb74: clc; dec dword ptr [ecx - 0x76658a3a]; test dword ptr [edx + edi*8 - 1], ebp; dec dword ptr [ebx - 0x59b43]; jmp dword ptr [ebp - 0x5f]; 
0x000af34b: clc; dec dword ptr [edi]; inc esp; ret; 
0x0010ace1: clc; dec dword ptr [edi]; mov dh, 0x45; sbb al, 0x89; ret 0xeac0; 
0x000741f1: clc; dec dword ptr [edi]; test bh, al; sbb al, 0; add byte ptr [ecx], al; ret; 
0x0004cfae: clc; dec dword ptr [edi]; test byte ptr [0x31000003], bl; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00130e94: clc; dec dword ptr [edi]; test byte ptr [eax + eax - 0x137d0000], al; add al, 0x89; ret; 
0x00189db3: clc; dec dword ptr [edi]; xchg esp, eax; ret 0x1389; 
0x0016999c: clc; dec dword ptr [edi]; xchg esp, eax; ret 0xd1e9; 
0x0007cbab: clc; dec dword ptr [edi]; xchg esp, eax; ret; 
0x001969ba: clc; dec ebx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000e787f: clc; fidiv dword ptr [ebp + 0x3d]; lea ecx, [esp + 4]; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x000e7611: clc; fidiv dword ptr [ebp + 0xc]; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x0004170f: clc; imul eax, ebp; add eax, ebx; push eax; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0014177c: clc; inc dword ptr [ebx + 0x48d10c4]; pop ebx; pop esi; pop edi; ret; 
0x0013de78: clc; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0009dd8b: clc; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0010bcf5: clc; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x000a6a86: clc; inc dword ptr [ebx - 0x72aff33c]; adc dword ptr [ecx + ebx*2], -7; call dword ptr [eax + 0x6a]; 
0x001243d0: clc; inc dword ptr [ebx - 0x72aff33c]; or dword ptr [ebx], 0x56; stc; call dword ptr [eax + 0x6a]; 
0x00190640: clc; inc dword ptr [ebx - 0x73ee33c]; pop ds; ret; 
0x00189f6f: clc; inc dword ptr [ebx - 0x77cef3c]; push dword ptr [esp + edi*4 - 0x77]; ret 0xe283; 
0x000a18da: clc; inc dword ptr [ebx - 0x7972f33c]; in al, dx; sbb ah, dh; call dword ptr [eax + 0x57]; 
0x000a1892: clc; inc dword ptr [ebx - 0x7972f33c]; in al, dx; sbb al, 0xe6; call dword ptr [eax + 0x57]; 
0x000a18a4: clc; inc dword ptr [ebx - 0x7972f33c]; insb byte ptr es:[edi], dx; sbb ah, dh; call dword ptr [eax + 0x57]; 
0x000a18c8: clc; inc dword ptr [ebx - 0x7972f33c]; lodsb al, byte ptr [esi]; sbb ah, dh; call dword ptr [eax + 0x57]; 
0x000a18fe: clc; inc dword ptr [ebx - 0x7972f33c]; lodsb al, byte ptr [esi]; sbb al, 0xe6; call dword ptr [eax + 0x57]; 
0x0013dd5b: clc; inc dword ptr [ebx - 0xffeef3c]; pop ebx; pop esi; pop edi; ret; 
0x000a6797: clc; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x00060677: clc; inc dword ptr [ecx]; fidivr dword ptr [esi]; jmp edx; 
0x0004353b: clc; inc dword ptr [ecx]; fidivr word ptr [esi]; jmp esi; 
0x000dfc13: clc; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x000706aa: clc; inc dword ptr [ecx]; ret; 
0x00071990: clc; inc dword ptr [ecx]; ror dword ptr [ecx + 0x244c8bca], 0x4c; mov dword ptr [esp + 4], ecx; jmp edx; 
0x000c30e6: clc; inc dword ptr [ecx]; sar dword ptr [esi], 1; jmp ecx; 
0x000a8089: clc; jae 0xa80a1; pop ebx; pop esi; pop edi; ret; 
0x000a6a84: clc; jecxz 0xa6a7f; inc dword ptr [ebx - 0x72aff33c]; adc dword ptr [ecx + ebx*2], -7; call dword ptr [eax + 0x6a]; 
0x0015b2a4: clc; jle 0x15b293; jmp dword ptr [ebp - 0x75]; 
0x00161189: clc; jmp dword ptr [ebp - 0x5f]; 
0x00135a6f: clc; jmp dword ptr [ebp - 0x75]; 
0x000a073f: clc; jmp dword ptr [ebp - 1]; 
0x000fd7eb: clc; jmp dword ptr [esi + 0xb]; 
0x000a606c: clc; jmp dword ptr [esi - 0x70]; 
0x001ac19a: clc; jne 0x1ac1c0; pop edi; pop esi; pop ebx; ret; 
0x000e762b: clc; ljmp 0xf00:0x3b8; inc ebp; ret 0x2ec3; 
0x00193271: clc; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00103022: clc; mov dword ptr [esi + 0x20], ecx; pop ebx; pop esi; pop edi; ret; 
0x0013c04a: clc; mov eax, 5; pop ebx; pop esi; pop ebp; ret; 
0x001936c7: clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001983a1: clc; mov eax, edx; pop ebx; ret; 
0x0019ba5b: clc; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019ca3b: clc; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, edx; pop ebx; ret; 
0x0019639c: clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019839c: clc; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x0009c2ef: clc; or al, 0xf; xchg esp, eax; ror byte ptr [edi], 0xb6; rol byte ptr [ebx - 0x3b7cfd40], 0xc; ret; 
0x000b9524: clc; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0008e85a: clc; or byte ptr [ebp + eax - 0x7d], dh; les ecx, ptr [eax]; pop ebx; ret; 
0x0012ed88: clc; or byte ptr [edi], cl; xchg ebp, eax; rol byte ptr [ebx - 0x49f0d33c], 0xc0; neg eax; ret; 
0x0012ed47: clc; or byte ptr [edi], cl; xchg ebp, eax; rol byte ptr [ebx - 0x49f0e33c], 0xc0; neg eax; ret; 
0x00099ede: clc; or dh, byte ptr [edx + ecx*2 + 0x5b]; xor eax, eax; pop esi; pop edi; ret; 
0x00135eae: clc; or dword ptr [edi], ecx; xchg esi, eax; ret; 
0x000a0aef: clc; or edi, dword ptr [eax + 8]; cmova eax, edx; mov byte ptr [ecx + 0x3c38], al; ret; 
0x0015752c: clc; outsb dx, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x0011f3f8: clc; pop ds; mov dword ptr [esp + 0xc], eax; mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0003c120: clc; pop ds; not eax; and eax, edx; ret; 
0x0003be0b: clc; pop ds; not eax; sar edx, 0x1e; and eax, edx; ret; 
0x00190646: clc; pop ds; ret; 
0x0003ba7c: clc; pop ds; sub ecx, edx; not eax; and eax, ecx; ret; 
0x000bfdaa: clc; pop ebx; pop edi; ret; 
0x0012c351: clc; pop ebx; pop esi; pop ebp; ret; 
0x0002f8ac: clc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00061ecd: clc; pop ebx; pop esi; pop edi; ret; 
0x00198d4e: clc; pop edi; call 0x189c1d; add ebx, 0x42e1b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196d3e: clc; pop edi; call 0x189c1d; add ebx, 0x44bab; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194d3e: clc; pop edi; call 0x189c1d; add ebx, 0x4692b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0003360d: clc; pop edi; pop ebp; ret; 
0x000b33f2: clc; pop edi; pop ebx; ret; 
0x000b9fa1: clc; pop edi; pop esi; pop ebx; ret; 
0x000b15f5: clc; pop edi; ret; 
0x00033640: clc; pop esi; pop edi; pop ebp; ret; 
0x0015a69b: clc; pop esi; stc; call dword ptr [eax - 0x18]; 
0x00097f4f: clc; push ds; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0018240c: clc; push dword ptr [eax + edx - 0x7d]; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00143344: clc; push dword ptr [eax - 0x77]; ret; 
0x001239a7: clc; push dword ptr [ebp + esi*2 - 0x77]; ret; 
0x00184c97: clc; push dword ptr [ebx + esi*2 - 0x18]; mov al, byte ptr [0x89fff6a5]; ret; 
0x0008585d: clc; push dword ptr [edi + ebx*8 - 0x7b]; sar byte ptr [eax + 0x33], 1; ret; 
0x0018b61d: clc; push dword ptr [edi + ecx - 0x77]; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x001143d2: clc; push dword ptr [edx + ebx*8 - 0x77]; ret 0xbc8d; 
0x0010f80a: clc; push dword ptr [edx + ebx*8 - 0x77]; ret 0xc085; 
0x00189f75: clc; push dword ptr [esp + edi*4 - 0x77]; ret 0xe283; 
0x000a0ad6: clc; push eax; jbe 0xa0ae0; ret; 
0x00041801: clc; push eax; mov eax, dword ptr [esp + 0x28]; call eax; 
0x00133bd9: clc; push esp; stc; call dword ptr [eax - 0x18]; 
0x0018c934: clc; ret 0xfff5; 
0x0013f5fb: clc; str word ptr [ebx + 0xc480]; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x000c1277: clc; sub eax, 0x10; pop edi; ret; 
0x0009c071: clc; sub esp, 0xc; mov edi, dword ptr [edi + 0xc]; push dword ptr [eax + 4]; call dword ptr [eax]; 
0x00093fe7: clc; test cl, bh; call dword ptr [eax + 0x68]; 
0x00093fc5: clc; test cl, bh; call dword ptr [eax - 0x73]; 
0x0005ceda: clc; xor byte ptr [eax + ecx - 0x7b], dh; dec dword ptr [edi]; pop dword ptr [edi - 0x9fffff8]; ret 0xf40; 
0x000c1975: clc; xor ch, ch; add eax, ecx; pop edi; ret; 
0x0009096a: clc; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0013c03d: clc; xor eax, eax; pop ebx; pop esi; pop ebp; ret; 
0x000aa126: cld; aaa; call 0xc24eb12c; ret; 
0x000d2c70: cld; adc esi, esi; dec dword ptr [ebp - 0x661ff7d]; call dword ptr [eax - 0x73]; 
0x0012422e: cld; add byte ptr [eax], al; add bh, bh; xor byte ptr [ebp - 0x6a6a47d], cl; call dword ptr [eax - 1]; 
0x00036bdb: cld; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000f16e2: cld; add cl, ch; ret 0xfff9; 
0x0017ed6b: cld; add cl, ch; ret 0xfffc; 
0x0018a120: cld; add dword ptr [eax], eax; add byte ptr [ebx + 0x6a08ec], al; push esi; call dword ptr [ebx + 8]; 
0x001ac504: cld; add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x001a9cf0: cld; add dword ptr [eax], eax; add dh, dh; ret 0xf40; 
0x000fb1a3: cld; add dword ptr [ebp + 0x20b8], esp; add byte ptr [edx + 0x40], bh; cmove eax, edx; ret; 
0x000a08d6: cld; add eax, dword ptr [eax]; add byte ptr [esi + 4], dh; ret; 
0x00132826: cld; add eax, ebx; pop ebx; pop esi; ret; 
0x00197b1d: cld; and bh, bh; inc dword ptr [ecx + 0x43d0fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0017079b: cld; and eax, 0xfffffffc; lea eax, [eax + edx + 0x28]; push eax; push edi; call dword ptr [ecx + 0x18]; 
0x0016ebed: cld; call dword ptr [eax - 0x4e1f00d]; ret; 
0x0012c150: cld; call dword ptr [eax - 0x73]; 
0x000f94c5: cld; call dword ptr [edi - 1]; 
0x0010ddfc: cld; clc; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x0010d57a: cld; clc; inc dword ptr [ecx]; sar dword ptr [esi], 1; jmp ecx; 
0x001a7f66: cld; cmp ecx, dword ptr [edx - 4]; mov eax, 0; jne 0x1a81b0; pop ebx; ret; 
0x001a67ef: cld; cmp ecx, ebx; mov eax, 0; jne 0x1a6f70; pop ebx; ret; 
0x001a9621: cld; cmp ecx, ebx; mov eax, 0; jne 0x1a9850; pop ebx; ret; 
0x001350b7: cld; cmpsb byte ptr [esi], byte ptr es:[edi]; stc; call dword ptr [eax - 0x18]; 
0x000a28d0: cld; cwde; stc; call dword ptr [eax - 0x73]; 
0x001750d2: cld; dec dword ptr [ebp - 0x69b7e7d]; call dword ptr [edi + 0x6a]; 
0x000fed2d: cld; dec dword ptr [ebx - 0x76efdbb4]; ret 0x448b; 
0x00109c78: cld; dec dword ptr [ecx]; retf 0x5489; ret; 
0x0006102c: cld; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000a176e: cld; inc ecx; stc; call dword ptr [eax - 0x18]; 
0x0003109d: cld; jb 0x31099; call dword ptr [eax - 0x73]; 
0x00078e91: cld; jge 0x78e8d; call dword ptr [eax - 0x18]; 
0x000556f7: cld; jmp dword ptr [esi - 0x70]; 
0x0012730c: cld; jne 0x127305; dec dword ptr [ebx + 0x56897440]; add al, 0x89; ret 0xeac1; 
0x001ac1b5: cld; jne 0x1ac1c0; pop edi; pop esi; pop ebx; ret; 
0x001ac2a7: cld; jne 0x1ac2b0; pop ebx; ret; 
0x0005df6a: cld; jp 0x5df66; call dword ptr [eax - 0x18]; 
0x0017079e: cld; lea eax, [eax + edx + 0x28]; push eax; push edi; call dword ptr [ecx + 0x18]; 
0x001521a0: cld; mov al, 0xf9; call dword ptr [eax - 0x73]; 
0x0009d736: cld; mov cl, bh; call dword ptr [eax - 0x73]; 
0x00194129: cld; mov dword ptr [edx + ecx - 4], ebx; mov eax, edx; pop ebx; ret; 
0x00196364: cld; mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00198364: cld; mov dword ptr [edx - 4], ecx; mov eax, edx; pop ebx; ret; 
0x001963b5: cld; mov dword ptr [edx - 5], ecx; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001983b5: cld; mov dword ptr [edx - 5], ecx; mov dword ptr [edx - 4], eax; mov eax, edx; pop ebx; ret; 
0x001a7f69: cld; mov eax, 0; jne 0x1a81b0; pop ebx; ret; 
0x00193274: cld; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019444d: cld; mov eax, edx; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x0019412d: cld; mov eax, edx; pop ebx; ret; 
0x000ded15: cld; mov ecx, 0x5251ffe9; push eax; call 0xda950; add esp, 0x1c; ret; 
0x0017cab8: cld; mov ecx, 1; mov dword ptr [eax + 0xc], edx; mov eax, ecx; ret; 
0x0012d560: cld; movsb byte ptr es:[edi], byte ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x00130e86: cld; movsd dword ptr es:[edi], dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x000b9f8e: cld; or al, 0; add ecx, 0x112daf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00062597: cld; or byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0019921d: cld; or edi, edi; inc dword ptr [ecx + 0x4288fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000c2565: cld; pop edi; ret; 
0x00170896: cld; push eax; push edi; call dword ptr [edx + 0x18]; 
0x00164206: cld; push ebp; bnd call dword ptr [eax - 0x18]; 
0x00170907: cld; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x0008d825: cld; ret; 
0x0009f17c: cld; sbb dword ptr [eax], eax; push ebx; mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00084209: cld; stc; jmp dword ptr [esi - 0x70]; 
0x000687f4: cld; xor bh, cl; call dword ptr [eax - 0x18]; 
0x001ac2a2: cld; xor eax, eax; cmp ecx, dword ptr [edx - 4]; jne 0x1ac2b0; pop ebx; ret; 
0x00091b6f: cld; xor esi, esi; mov edx, eax; mov eax, 0xf0; or edx, 2; call dword ptr gs:[0x10]; 
0x000913f1: cld; xor esi, esi; mov edx, eax; mov eax, ebp; or edx, 2; call dword ptr gs:[0x10]; 
0x000bd523: cli; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00041c4f: cli; adc byte ptr [ecx], ch; ret 0xc269; 
0x0014fe3e: cli; adc ch, byte ptr [ecx]; ret 0xd101; 
0x001b2c48: cli; add al, 0x74; adc al, 0x89; fimul dword ptr [ecx - 0x7c0c7607]; ret; 
0x000297e1: cli; add al, 0x74; adc eax, 0x8301c083; ret 0x8901; 
0x00028c01: cli; add al, 0x74; sbb byte ptr [ebx - 0x7cebdbb4], cl; rol byte ptr [ecx], 0x83; ret 0x8901; 
0x00029201: cli; add al, 0x74; sbb byte ptr [ebx - 0x7cfbdba4], cl; rol byte ptr [ecx], 0x83; ret 0x8901; 
0x00038960: cli; add al, byte ptr [ecx - 0xccc1e]; inc dword ptr [ecx]; ret 0xd089; 
0x0003b5ca: cli; add byte ptr [eax], al; add byte ptr [ecx + 0xa024bc], al; add byte ptr [eax], al; push eax; ret; 
0x000816b4: cli; add ch, bl; ljmp 0x5bff:0xffffffb8; ret; 
0x000df837: cli; add ch, byte ptr [ecx]; ret 0x48d; 
0x000919f7: cli; add dh, byte ptr [ebp + eax + 0x5b]; pop esi; pop edi; ret; 
0x000913c6: cli; add dh, byte ptr [ebp - 0x77]; ret 0xe283; 
0x00091b46: cli; add dh, byte ptr [ebx - 0x77]; ret 0xe283; 
0x0010ce5e: cli; add dh, byte ptr [edi + 0xc]; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x000907c2: cli; add dh, byte ptr [esi + 0xa]; ret; 
0x00091879: cli; add dh, byte ptr [esp - 0x77]; ret 0xe283; 
0x000980a1: cli; add dword ptr [ebp + 0x1b], esi; or dword ptr [eax], 0x40000000; xor eax, eax; ret; 
0x00100e07: cli; add dword ptr [ecx + 0xf082454], ecx; sahf; ret 0x5420; 
0x000e90ee: cli; add dword ptr [edi + 0x1e], edi; add esp, 0x14; pop ebx; pop esi; ret; 
0x00041ac4: cli; add dword ptr [edi + 0x20], edi; add esp, 0x14; pop ebx; pop esi; ret; 
0x0018265c: cli; add dword ptr [edi + 0x20], edi; add esp, 0x18; pop ebx; ret; 
0x00094333: cli; add dword ptr [edi + 0x21], edi; add esp, 0x18; pop ebx; ret; 
0x00040182: cli; add dword ptr [edi + 0x22], edi; add esp, 0x14; pop ebx; pop esi; ret; 
0x001630b1: cli; add dword ptr [edi + 0x23], edi; add esp, 0x18; pop ebx; ret; 
0x001825d0: cli; add dword ptr [edi + 0x24], edi; add esp, 0x18; pop ebx; ret; 
0x000611b3: cli; add dword ptr [edi + 0x31], edi; add esp, 0x18; pop ebx; ret; 
0x00156590: cli; add dword ptr [edi + 4], edi; ret; 
0x000906bd: cli; add dword ptr [edi + ecx - 0x7b], esi; sal byte ptr [ebp + 0x1b], cl; and dword ptr [eax + 8], 0xfffffffe; xor eax, eax; ret; 
0x000a84cf: cli; add dword ptr [edi - 0x23], esi; pop ebx; pop esi; pop edi; ret; 
0x00098ba6: cli; add dword ptr [edi], ecx; test dword ptr [ecx - 0x77000000], ecx; ret 0xf283; 
0x00098da6: cli; add dword ptr [edi], ecx; test dword ptr [edx - 0x77000000], esp; ret 0xf283; 
0x0012e5d1: cli; add dword ptr [edi], ecx; xchg edi, eax; ret 0xf883; 
0x000c9972: cli; add dword ptr [edi], ecx; xchg esp, eax; ret 0xc339; 
0x0015ce66: cli; and byte ptr [esi + eax - 0x7b], dh; ret; 
0x0014b5e7: cli; and ecx, dword ptr [edi]; xchg ebp, eax; ret 0xd184; 
0x0014b8b7: cli; and ecx, dword ptr [edi]; xchg ebp, eax; ret 0xd384; 
0x0008e11c: cli; call dword ptr [eax + 0x6a]; 
0x0003d59f: cli; call dword ptr gs:[0x10]; 
0x0010af77: cli; clc; call dword ptr [eax - 0x73]; 
0x000fb2d3: cli; cmc; lodsd eax, dword ptr [esi]; add byte ptr [eax], al; setne al; ret; 
0x000b9448: cli; cmp byte ptr [ecx], dl; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0015bba1: cli; cmp cl, byte ptr [edi]; xchg esp, eax; ret 0xc084; 
0x000a86bb: cli; cmp eax, 0xc083f175; add dword ptr [edx + edx*8 + 0xba], eax; add byte ptr [edi], cl; inc esp; ret 0x8dc3; 
0x00092b3d: cli; dec dword ptr [ebx - 0x72fbdb84]; xchg eax, ebx; test cl, bh; call dword ptr [eax + 0x68]; 
0x000e7d8b: cli; dec dword ptr [ebx - 0x76abdbb4]; cli; mov dword ptr [esp + 0xc], eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x00093fe0: cli; dec dword ptr [ebx - 0x7872dbc4]; clc; test cl, bh; call dword ptr [eax + 0x68]; 
0x00093fbe: cli; dec dword ptr [ebx - 0x7872dbc4]; clc; test cl, bh; call dword ptr [eax - 0x73]; 
0x00043c82: cli; dec dword ptr [edi]; inc ebp; ret 0x4489; 
0x001555e9: cli; dec dword ptr [edi]; test byte ptr [edx + 0x39000001], bh; ret 0x840f; 
0x0011bc31: cli; dec ecx; stc; call dword ptr [eax - 0x18]; 
0x00092fd7: cli; inc dword ptr [ebx - 0x17a9f314]; push cs; ret 0xffff; 
0x000e9f47: cli; inc dword ptr [ebx - 0xf76ef3c]; add esp, 4; pop ebx; pop esi; ret; 
0x000a94f6: cli; inc eax; ja 0xa9501; mov eax, dword ptr [ecx + edx*4 - 0xe34]; ret; 
0x000a9526: cli; inc eax; ja 0xa9531; mov eax, dword ptr [ecx + edx*4 - 0xd14]; ret; 
0x000fb1d4: cli; jae 0xfb220; push edx; mov edx, 0x20; cmovne eax, edx; ret; 
0x0012f209: cli; je 0x12f263; pop ebx; pop esi; ret; 
0x00071c2e: cli; jg 0x71c40; xchg esp, eax; ret 0xca08; 
0x0017322f: cli; jmp dword ptr [ebp - 0x75]; 
0x001169ac: cli; jmp dword ptr [esi + 3]; 
0x00142f93: cli; jmp dword ptr [esi - 0x3f]; 
0x0007b6da: cli; jmp dword ptr [esi - 0x70]; 
0x0019b73c: cli; lea eax, [edi + eax + 0xa]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b7cc: cli; lea eax, [edi + eax + 0xb]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b85c: cli; lea eax, [edi + eax + 0xc]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b8ec: cli; lea eax, [edi + eax + 0xd]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b97c: cli; lea eax, [edi + eax + 0xe]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019ba0c: cli; lea eax, [edi + eax + 0xf]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b22c: cli; lea eax, [edi + eax + 1]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b2bc: cli; lea eax, [edi + eax + 2]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b34c: cli; lea eax, [edi + eax + 3]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b3dc: cli; lea eax, [edi + eax + 4]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b46c: cli; lea eax, [edi + eax + 5]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b4fc: cli; lea eax, [edi + eax + 6]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b58c: cli; lea eax, [edi + eax + 7]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b61c: cli; lea eax, [edi + eax + 8]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b6ac: cli; lea eax, [edi + eax + 9]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00064eee: cli; mov byte ptr [esp + 0x5e], 0x20; mov edi, ecx; mov dword ptr [esp + 0x1c], 1; jmp edx; 
0x000e7d92: cli; mov dword ptr [esp + 0xc], eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x000e7d5c: cli; mov dword ptr [esp + 0xc], eax; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x00115314: cli; mov dword ptr [esp + 4], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0011f8df: cli; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0003d6a5: cli; mov eax, 0x1a5; call dword ptr gs:[0x10]; 
0x0003d665: cli; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x0006594d: cli; mov edi, eax; jmp edx; 
0x00131aeb: cli; mov edi, ebp; call dword ptr gs:[0x10]; 
0x00064ba9: cli; mov edi, ecx; jmp edx; 
0x000e7c90: cli; mov esi, ebp; call dword ptr gs:[0x10]; 
0x001932b4: cli; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00196497: cli; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00198487: cli; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, edx; pop ebx; ret; 
0x0015dedb: cli; or cl, byte ptr [edi]; xchg ebp, eax; ret 0xd120; 
0x00099dda: cli; or dh, byte ptr [esi + ecx*2 + 0x5b]; xor eax, eax; pop esi; pop edi; ret; 
0x0008e636: cli; or dh, byte ptr [esi + edx - 0x7d]; les eax, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x0013f069: cli; or dword ptr [edi], ecx; inc esi; ret 0xbe0f; 
0x00038dd0: cli; or dword ptr [edi], ecx; xchg esi, eax; ret 0xb60f; 
0x001354e6: cli; or dword ptr [edi], ecx; xchg esi, eax; ret; 
0x0011fe2f: cli; pop ds; call dword ptr gs:[0x10]; 
0x00155f57: cli; pop ebp; stc; call dword ptr [eax - 0x18]; 
0x00089bfe: cli; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001aa3b2: cli; pop edi; ret; 
0x00070b56: cli; pop edx; jbe 0x718c0; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x48], 1; jmp eax; 
0x00089c38: cli; pop esi; pop edi; pop ebp; ret; 
0x0010e372: cli; pop esp; bnd jmp dword ptr [esi - 0x70]; 
0x000fb138: cli; push 0x61759123; ret; 
0x0003be10: cli; push ds; and eax, edx; ret; 
0x0018b970: cli; push dword ptr [ebp + eax + 1]; ret 0x5689; 
0x0016ab28: cli; push dword ptr [ebx - 0x75]; test byte ptr [esp + esi*8], ah; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x840f; 
0x000fb215: cli; ror byte ptr [ebx], 1; ror byte ptr [ebx], 1; mov edx, 0x20; cmovne eax, edx; ret; 
0x0014b8b1: cli; sub al, 0xf; xchg ebp, eax; ret; 
0x00030148: cli; sub al, 0xf; xchg esp, eax; ret 0xca08; 
0x00025e3f: cli; sub cl, bh; call dword ptr [eax - 0x18]; 
0x000ad0fc: cli; xor byte ptr [edi], cl; xchg esp, eax; ret; 
0x00062a8a: cmc; add al, 0; add byte ptr [eax - 0x73], dl; xchg byte ptr [ebp + edi*2 - 7], al; call dword ptr [eax - 0x18]; 
0x000b7957: cmc; add al, byte ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x00199b24: cmc; add bh, bh; inc dword ptr [ecx + 0x41f88c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00142757: cmc; add byte ptr [eax], al; add byte ptr [ebx - 0x41f0d0ec], cl; ret; 
0x000c1767: cmc; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x00151f28: cmc; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; add byte ptr [eax], 0xb0; stc; call dword ptr [eax - 0x18]; 
0x0005dfd7: cmc; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; add eax, 0x7a; stc; call dword ptr [eax - 0x18]; 
0x0010df26: cmc; add eax, dword ptr [eax]; add byte ptr [ebp - 0x65e477d], cl; call dword ptr [eax - 0x73]; 
0x000d99b1: cmc; and ch, 0xf; je 0xd99d0; add eax, 2; ret; 
0x000fb12e: cmc; bnd jge 0xfb160; mov eax, 0xff; cmp edx, 0x9123683e; jne 0xfb1a0; ret; 
0x0012e1e3: cmc; call ebx; 
0x0012e1e3: cmc; call ebx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x000fb3b6: cmc; clc; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x000fb1a2: cmc; cld; add dword ptr [ebp + 0x20b8], esp; add byte ptr [edx + 0x40], bh; cmove eax, edx; ret; 
0x000abb5a: cmc; cmp edx, esi; je 0xabb50; pop ebx; pop esi; ret; 
0x000de8ad: cmc; dec dword ptr [ebp - 0x661977d]; call dword ptr [eax - 0x73]; 
0x001312e6: cmc; dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x001319fb: cmc; dec dword ptr [ebp - 0x76fbdbb4]; ret 0x448b; 
0x000a8b6a: cmc; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x000d8692: cmc; dec dword ptr [ebx - 0x363f4b]; dec dword ptr [ebp - 0x661f37a]; call dword ptr [eax - 0x73]; 
0x000d8701: cmc; dec dword ptr [ebx - 0x363f4b]; dec dword ptr [ebp - 0x687cb7a]; call dword ptr [eax - 0x73]; 
0x000d86b7: cmc; dec dword ptr [ebx - 0x363f73]; dec dword ptr [ebp - 0x661f37f]; call dword ptr [eax - 0x73]; 
0x000d53e6: cmc; dec dword ptr [ebx - 0x72ebdb84]; xchg dword ptr [eax + edi*2], esi; stc; call dword ptr [eax + 0x68]; 
0x000a9492: cmc; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a8b90: cmc; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x001738d7: cmc; hlt; dec dword ptr [ebp + 0x34890170]; and al, 0xe8; ret; 
0x000aa2fa: cmc; inc dword ptr [eax - 0x6d72fd1b]; mov esp, 0xfffe83d; inc esp; ret 0x66c3; 
0x001265c4: cmc; inc dword ptr [ebx + 0x1ba10c4]; add byte ptr [eax], al; add byte ptr [ebx - 0x2f76f73c], al; pop ebx; ret; 
0x00171073: cmc; inc dword ptr [ebx + 0x478b0cc4]; or byte ptr [ebp - 1], dl; jbe 0x17108b; push edi; call dword ptr [eax + 8]; 
0x000c5c6c: cmc; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000c31f0: cmc; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x001708b6: cmc; inc dword ptr [ebx - 0x137cef3c]; or byte ptr [ebx + 0x86a0447], cl; push edi; call dword ptr [eax + 0x18]; 
0x00129332: cmc; inc dword ptr [ebx - 0x3b7cef3c]; or byte ptr [eax + 1], bh; pop ebx; ret; 
0x00141509: cmc; je 0x141500; add esp, 8; pop ebx; ret; 
0x001242f5: cmc; jmp dword ptr [ebp - 0x5f]; 
0x000de8eb: cmc; jmp dword ptr [esi - 0x70]; 
0x00173c7c: cmc; ljmp 0x5e5b:0x10c483ff; pop edi; ret; 
0x000fb2d4: cmc; lodsd eax, dword ptr [esi]; add byte ptr [eax], al; setne al; ret; 
0x00193777: cmc; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000b9238: cmc; or dword ptr [0x84c18100], ecx; cmp dl, byte ptr [ecx]; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00199024: cmc; or edi, edi; inc dword ptr [ecx + 0x42a88c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000abb2a: cmc; pop ebx; ret; 
0x001aa372: cmc; pop edi; ret; 
0x0012d25e: cmc; push ebx; stc; call dword ptr [eax + 0x56]; 
0x0013d6b5: cmc; push esi; sbb dword ptr [ecx + eax - 0x72ff0000], 0xf54a7c92; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a9485: cmc; push esi; sbb dword ptr [ecx + eax - 0x72ff0000], 0xf54a8c92; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x00084939: cmc; stc; jmp dword ptr [esi - 0x70]; 
0x0005aa87: cmc; stosd dword ptr es:[edi], eax; add al, byte ptr [eax]; add esp, 0x1c; ret; 
0x001a9377: cmc; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x0003d687: cmc; syscall; 
0x000c0838: cmc; xchg ebx, eax; or al, 0; add ecx, 0x10c7b8; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000a0af6: cmova eax, edx; mov byte ptr [ecx + 0x3c38], al; ret; 
0x00099b7f: cmova eax, edx; ret; 
0x000e8bf4: cmova edx, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x000e8a49: cmovae eax, esi; mov edi, eax; mov eax, 0xdc; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000c2bf1: cmovb eax, ecx; ret; 
0x0008d370: cmovb eax, ecx; sub eax, dword ptr [edx + 0xc]; ret; 
0x00081cb3: cmovb eax, ecx; sub eax, dword ptr [edx + 8]; sar eax, 2; ret; 
0x00141d70: cmovb eax, edx; ret; 
0x00092e71: cmovb ecx, eax; mov eax, 0x182; xor edx, edx; call dword ptr gs:[0x10]; 
0x001a5e2a: cmovbe eax, edx; pop esi; pop ebp; pop ebx; ret; 
0x00094248: cmovbe ecx, edi; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x0010bdea: cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x0008e5ef: cmovbe edx, eax; xor eax, eax; cmp edx, dword ptr [esp + 4]; setae al; ret; 
0x00083f37: cmove eax, ecx; ret; 
0x000a8a49: cmove eax, edx; add eax, 0x21; ret; 
0x000a89fe: cmove eax, edx; add eax, 1; ret; 
0x00125e9d: cmove eax, edx; add esp, 0xc; ret; 
0x00043279: cmove eax, edx; ret; 
0x0008695d: cmove eax, esi; mov dword ptr [ecx], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x0016bafd: cmove ecx, eax; pop ebx; pop esi; mov eax, ecx; ret; 
0x00033e97: cmove ecx, eax; pop edi; pop ebp; mov eax, ecx; ret; 
0x00137061: cmove edx, eax; mov eax, edx; pop ebx; ret; 
0x00032b72: cmove edx, ecx; mov byte ptr [eax + 0x1201], dl; lea eax, [eax + 0x11cc]; ret; 
0x00041a2c: cmove esi, eax; mov eax, esi; pop esi; pop edi; ret; 
0x00041a67: cmove esi, eax; pop ebx; mov eax, esi; pop esi; pop edi; ret; 
0x0010e6f9: cmove esi, ebx; mov edx, dword ptr [esp + 0x88]; mov eax, 0x72; mov ebx, dword ptr [esp + 0x80]; call dword ptr gs:[0x10]; 
0x00080a47: cmovg eax, ecx; test edx, edx; jne 0x80a40; ret; 
0x0008abc7: cmovg eax, ecx; test edx, edx; jne 0x8abc0; ret; 
0x000c66b2: cmovg eax, edx; pop edi; ret; 
0x000c6693: cmovg eax, edx; ret; 
0x000a6357: cmovne eax, ecx; pop ebx; ret; 
0x000c1d32: cmovne eax, edx; add esp, 0x14; pop ebx; pop esi; ret; 
0x000a84fb: cmovne eax, edx; add esp, 0x18; pop ebx; ret; 
0x00080af5: cmovne eax, edx; mov dword ptr [esi + 0x3c], eax; add esp, 4; pop ebx; pop esi; ret; 
0x0008b3b1: cmovne eax, edx; mov dword ptr [esi], eax; add esp, 4; pop ebx; pop esi; ret; 
0x000a8b92: cmovne eax, edx; pop ebx; ret; 
0x00042eb3: cmovne eax, edx; ret; 
0x0005b698: cmovne eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0012887f: cmovne ebx, eax; add esp, 0x18; mov eax, ebx; pop ebx; ret; 
0x00158cf3: cmovne ebx, edx; mov edx, dword ptr [esp + 0x40]; mov dword ptr [edx], ebx; add esp, 0x28; pop ebx; ret; 
0x000fd4b4: cmovne esi, eax; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00123695: cmovns eax, edx; ret; 
0x0004077b: cmovs eax, ecx; pop ebx; ret; 
0x0004092e: cmovs eax, edx; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x00136ede: cmovs eax, edx; add esp, 8; pop ebx; ret; 
0x00028392: cmovs eax, edx; ret; 
0x00040778: cmovs edx, ebx; cmovs eax, ecx; pop ebx; ret; 
0x0011e42b: cmp ah, 0xff; call dword ptr [eax - 0x72f3137d]; and dword ptr [esi], 0x46; stc; call dword ptr [eax - 0x18]; 
0x001a7b92: cmp ah, byte ptr [ebx - 0x35]; add cl, byte ptr [edi]; xchg esp, eax; ret; 
0x000a4c33: cmp al, 0; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x001214d7: cmp al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001214d7: cmp al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x000a0bf2: cmp al, 0; add byte ptr [ebp - 0x7cf88a37], al; les ecx, ptr [eax]; pop ebx; ret; 
0x000a17af: cmp al, 0; add byte ptr [ecx], al; lea ebx, [esi + 0x3c1c]; call dword ptr gs:[0x10]; 
0x000c30a9: cmp al, 0; add byte ptr [ecx], al; xor eax, eax; pop ebx; ret; 
0x000c34d7: cmp al, 0; add byte ptr [edi], cl; inc esp; ret 0x188b; 
0x000c33c7: cmp al, 0; add byte ptr [edi], cl; inc esp; ret 0x288b; 
0x000c4008: cmp al, 0; add byte ptr [edi], cl; inc esp; ret 0x4489; 
0x000c45b1: cmp al, 0; add byte ptr [edi], cl; inc esp; ret 0x8b65; 
0x000c348c: cmp al, 0; add byte ptr [edi], cl; inc esp; ret 0xff50; 
0x000fb153: cmp al, 0x11; je 0xfb13f; mov eax, 0xffffffff; ret; 
0x000fb2b3: cmp al, 0x11; je 0xfb2c2; mov eax, 0xffffffff; ret; 
0x000fb5be: cmp al, 0x11; je 0xfb5ac; mov eax, 0xffffffff; ret; 
0x000f1785: cmp al, 0x1a; mov dword ptr [ebp - 0x5b0], edx; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5b4]; call dword ptr [eax + 0x10]; 
0x000f8a05: cmp al, 0x1a; mov dword ptr [ebp - 0x5c0], edx; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5d0]; push dword ptr [ebp - 0x5c4]; call dword ptr [eax + 0x10]; 
0x000ac346: cmp al, 0x21; call 0xc24ed34c; ret; 
0x00047de0: cmp al, 0x24; adc byte ptr [ebx - 0x6af068cc], cl; ret 0xd789; 
0x0004796c: cmp al, 0x24; adc byte ptr [edi], cl; xchg esp, eax; ret 0xc8b; 
0x00189c1a: cmp al, 0x24; ret; 
0x00100d0b: cmp al, 0x29; fimul dword ptr [ecx - 0x769fdbbc]; ret; 
0x0013c64d: cmp al, 0x29; ret 0x4489; 
0x000fa8bd: cmp al, 0x2a; je 0xfa8c5; cmp al, 0x3f; jne 0xfa8d9; mov eax, 1; ret; 
0x00161746: cmp al, 0x2b; bnd call dword ptr [eax - 0x18]; 
0x00081952: cmp al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x0013fed7: cmp al, 0x31; shr al, 0xc1; sbb edi, edi; inc dword ptr [ebp - 0x768f8740]; ret; 
0x00162795: cmp al, 0x39; bnd call dword ptr [eax - 0x73]; 
0x000d9792: cmp al, 0x39; dec edi; cmp al, 0x75; or byte ptr [edi + 0x5e], bl; ret; 
0x0014230b: cmp al, 0x39; ret; 
0x000fa8c1: cmp al, 0x3f; jne 0xfa8d9; mov eax, 1; ret; 
0x0008e16d: cmp al, 0x51; call eax; 
0x000c4b47: cmp al, 0x51; lea ecx, [esp + 0x44]; push ecx; push dword ptr [edi + 8]; call ebx; 
0x0008dffb: cmp al, 0x51; push dword ptr [esp + 0x3c]; call eax; 
0x00083ddd: cmp al, 0x52; lea edx, [esi + 0x28]; push edx; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x00083ebc: cmp al, 0x52; lea edx, [esi + 4]; push edx; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x000a93e8: cmp al, 0x53; cmc; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x0008a3af: cmp al, 0x55; call dword ptr [esi + 0x20]; 
0x001783bf: cmp al, 0x55; push edi; push esi; push eax; call dword ptr [edx]; 
0x00177613: cmp al, 0x57; call dword ptr [eax + 0x10]; 
0x000c72f9: cmp al, 0x5b; pop esi; lea eax, [eax + edx*4]; pop edi; pop ebp; ret; 
0x000d1bdb: cmp al, 0x5b; pop esi; mov eax, ebp; pop edi; pop ebp; ret; 
0x001b6d4e: cmp al, 0x5b; pop esi; pop edi; pop ebp; ret 4; 
0x00026ea9: cmp al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x00125222: cmp al, 0x5b; ret; 
0x00179934: cmp al, 0x65; sub eax, dword ptr [0x14]; jne 0x179942; add esp, 0x4c; ret; 
0x001799a4: cmp al, 0x65; sub eax, dword ptr [0x14]; jne 0x1799b2; add esp, 0x4c; ret; 
0x00179a14: cmp al, 0x65; sub eax, dword ptr [0x14]; jne 0x179a22; add esp, 0x4c; ret; 
0x00179a77: cmp al, 0x65; sub eax, dword ptr [0x14]; jne 0x179a85; add esp, 0x4c; ret; 
0x00179ad7: cmp al, 0x65; sub eax, dword ptr [0x14]; jne 0x179ae5; add esp, 0x4c; ret; 
0x00179b44: cmp al, 0x65; sub eax, dword ptr [0x14]; jne 0x179b52; add esp, 0x4c; ret; 
0x00179bc4: cmp al, 0x65; sub eax, dword ptr [0x14]; jne 0x179bd2; add esp, 0x4c; ret; 
0x0011f05a: cmp al, 0x65; sub edx, dword ptr [0x14]; jne 0x11f06b; movzx eax, al; add esp, 0x4c; ret; 
0x001798c4: cmp al, 0x65; sub edx, dword ptr [0x14]; jne 0x1798d2; add esp, 0x4c; ret; 
0x000da7b6: cmp al, 0x65; sub edx, dword ptr [0x14]; jne 0xda7c5; add esp, 0x48; pop ebx; ret; 
0x00094755: cmp al, 0x72; add al, 0x39; ret 0x6f72; 
0x000d9795: cmp al, 0x75; or byte ptr [edi + 0x5e], bl; ret; 
0x0008b9a2: cmp al, 0x80; add byte ptr [eax], al; add byte ptr [ebx - 0x3f7acbc0], cl; jne 0x8b9a0; ret; 
0x000e8b88: cmp al, 0x81; les ebx, ptr [ecx + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0014bb1d: cmp al, 0x81; les ecx, ptr [ecx + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000fbfd3: cmp al, 0x82; mov eax, 1; pop ebx; pop esi; pop edi; ret; 
0x00177ddb: cmp al, 0x83; in al, dx; or al, 0x55; call dword ptr [eax + 0x10]; 
0x00090edb: cmp al, 0x83; in al, dx; or al, 0xff; jae 0x90ee6; call dword ptr [ebx]; 
0x00130ee8: cmp al, 0x83; in al, dx; or byte ptr [ebp - 0x659bf79], cl; call dword ptr [eax + 0x55]; 
0x000d135b: cmp al, 0x83; in al, dx; or byte ptr [ebx - 0x72d7dbbc], cl; sub byte ptr [eax + edi*8], 0xff; call dword ptr [eax - 1]; 
0x00080afa: cmp al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x001210c7: cmp al, 0x83; les eax, ptr [ecx + ecx*4 - 0x30]; pop ebx; pop esi; ret; 
0x00080fa3: cmp al, 0x83; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00107929: cmp al, 0x85; ror byte ptr [edi], 0x84; ret; 
0x0005a4f3: cmp al, 0x89; call 0x5d650355; ret; 
0x000d1a61: cmp al, 0x89; call 0x5d6c78c3; ret; 
0x000e7ef2: cmp al, 0x89; call 0x5d6ddd54; ret; 
0x0013239a: cmp al, 0x89; call 0x5d7281fc; ret; 
0x00142dc5: cmp al, 0x89; call 0x5d738c27; ret; 
0x00052175: cmp al, 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x00122414: cmp al, 0x89; inc edx; xor al, 0x5b; pop esi; pop edi; ret; 
0x00132771: cmp al, 0x89; inc esp; and al, 0x18; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0010e8f6: cmp al, 0x89; inc esp; and al, 8; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x00094c91: cmp al, 0x89; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x000a82c0: cmp al, 0x89; ret 0x448b; 
0x001852a2: cmp al, 0x89; ret 0x489; 
0x0012671f: cmp al, 0x89; ret 0xfdb8; 
0x00026bf5: cmp al, 0x89; ret; 
0x000347ee: cmp al, 0x8b; add al, 0x90; ret; 
0x0007a6d2: cmp al, 0x8b; add byte ptr [ecx], bh; ror byte ptr [edi], 1; inc edx; ret 0x789; 
0x00080f7f: cmp al, 0x8b; dec eax; sbb byte ptr [ebp + 0x88a8], cl; add byte ptr [ebp + 0x84b8], cl; add byte ptr [ebp - 0x9fa8b37], al; ret 0x7408; 
0x0004226d: cmp al, 0x8b; inc eax; inc eax; ret; 
0x0002f14f: cmp al, 0x8b; inc esp; and al, 0x34; call eax; 
0x0012fed5: cmp al, 0x8b; je 0x12fefd; mov ebx, dword ptr fs:[esp + 0x60]; lea ecx, [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00142233: cmp al, 0x8b; jl 0x14225b; sbb al, 0x39; ret; 
0x0002dec1: cmp al, 0x8b; jl 0x2dee9; adc byte ptr [ecx - 0x76f3dbbc], cl; fmul dword ptr [ecx - 0x7cfbdbbc]; rol byte ptr [edx], 0x39; ret 0x820f; 
0x0012518a: cmp al, 0x8b; push esp; and al, 8; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x000a11fd: cmp al, 0x8d; and ah, 0x8a; stc; call dword ptr [eax + 0x6a]; 
0x000a3c75: cmp al, 0x8d; inc esp; ret; 
0x00028898: cmp al, 0x8d; or dword ptr [esp + ebp*2], 0xfffffff9; call dword ptr [eax + 0x68]; 
0x000287da: cmp al, 0x8d; or dword ptr [esp + ebp*2], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x0002b830: cmp al, 0x8d; xchg ah, cl; push -7; call dword ptr [eax - 0x73]; 
0x0002b77e: cmp al, 0x8d; xchg byte ptr [eax + 0x72], cl; stc; call dword ptr [eax - 0x73]; 
0x00029b72: cmp al, 0x8d; xchg byte ptr [ebx + ebp*2 - 7], ch; call dword ptr [eax + 0x68]; 
0x000299f2: cmp al, 0x8d; xchg byte ptr [ebx + ebp*2 - 7], ch; call dword ptr [eax - 0x73]; 
0x0002b74d: cmp al, 0x8d; xchg dword ptr [eax + 0x72], ecx; stc; call dword ptr [eax - 0x73]; 
0x0002cdc9: cmp al, 0x8d; xchg dword ptr [eax], ecx; jb 0x2cdc8; call dword ptr [eax - 0x73]; 
0x0002cdec: cmp al, 0x8d; xchg dword ptr [eax], ecx; jb 0x2cdeb; call dword ptr [eax - 0x73]; 
0x0002ce4c: cmp al, 0x8d; xchg dword ptr [eax], ecx; jb 0x2ce4b; call dword ptr [eax - 0x73]; 
0x0002a025: cmp al, 0x8d; xchg dword ptr [ebx + ebp*2], ebp; stc; call dword ptr [eax - 0x73]; 
0x001775c5: cmp al, 0x8d; xchg esp, eax; and al, 0x4c; add dword ptr [eax], eax; add byte ptr [edx + 0x57], dl; call dword ptr [eax + 4]; 
0x0002b7e7: cmp al, 0x8d; xchg esp, ecx; push -7; call dword ptr [eax + 0x68]; 
0x0002b10b: cmp al, 0x8d; xchg esp, ecx; push -7; call dword ptr [eax - 0x73]; 
0x0010a697: cmp al, 0x90; add byte ptr [edi], cl; test dword ptr [ebx - 0x7c000006], esp; ret 0x8301; 
0x00064eeb: cmp al, 0x90; mov edx, edi; mov byte ptr [esp + 0x5e], 0x20; mov edi, ecx; mov dword ptr [esp + 0x1c], 1; jmp edx; 
0x00064ba6: cmp al, 0x90; mov edx, edi; mov edi, ecx; jmp edx; 
0x00158d58: cmp al, 0xa1; int1; call dword ptr [eax - 0x18]; 
0x001922da: cmp al, 0xa2; stc; call dword ptr [eax - 0x73]; 
0x0015407f: cmp al, 0xb2; stc; call dword ptr [eax - 0x73]; 
0x0008e8e5: cmp al, 0xb3; sldt word ptr [0x1b052b]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x294], edx; ret; 
0x00157816: cmp al, 0xb3; stc; call dword ptr [eax - 0x18]; 
0x00171be8: cmp al, 0xb7; stc; call dword ptr [eax - 0x73]; 
0x0012ec86: cmp al, 0xb8; add byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00130326: cmp al, 0xb8; cmp al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012fd26: cmp al, 0xb8; cmp eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0018b1ff: cmp al, 0xb; add byte ptr [ebx - 0x77], dl; ret; 
0x0013d5de: cmp al, 0xc0; cmc; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x000c08ba: cmp al, 0xc7; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c32a7: cmp al, 0xc; add byte ptr [edx + 0x59], bl; push ebx; push dword ptr [edi]; call esi; 
0x00061693: cmp al, 0xc; ret 0xff50; 
0x0004a98b: cmp al, 0xd9; test dword ptr [eax], edx; ret 0xfff9; 
0x000ab5b8: cmp al, 0xe8; ret 0xfce1; 
0x001167e7: cmp al, 0xe8; ret; 
0x00135a6b: cmp al, 0xe8; scasd eax, dword ptr es:[edi]; sar eax, cl; jmp dword ptr [ebp - 0x75]; 
0x001711b1: cmp al, 0xec; call dword ptr [esi - 0x17]; 
0x000aa2f8: cmp al, 0xf1; cmc; inc dword ptr [eax - 0x6d72fd1b]; mov esp, 0xfffe83d; inc esp; ret 0x66c3; 
0x0002cefb: cmp al, 0xf6; ret 0x7501; 
0x000db33b: cmp al, 0xf; xchg esp, eax; ret 0xd338; 
0x0013e6bb: cmp al, 0xff; add esp, 0x18; pop ebx; ret; 
0x00092ea4: cmp al, 0xff; inc dword ptr [ebx - 0x17acf314]; inc eax; ret; 
0x00195fc5: cmp al, 0xff; inc dword ptr [ecx + 0x455e8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0002f14b: cmp al, 0xff; je 0x2f173; cmp al, 0x8b; inc esp; and al, 0x34; call eax; 
0x0007072e: cmp al, 1; add byte ptr [eax], al; add byte ptr [ebx - 0x37b36a64], cl; clc; inc dword ptr [ecx]; ret; 
0x00130328: cmp al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e8c69: cmp al, 1; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x164]; call dword ptr gs:[0x10]; 
0x001302e9: cmp al, 1; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x001235aa: cmp al, 1; ret 0x1389; 
0x000aad91: cmp al, 1; ret; 
0x0010d2a2: cmp al, 2; add byte ptr [eax], al; mov dword ptr [esp + 0xac], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0012e287: cmp al, 2; je 0x12e2b6; mov eax, 0xffffffff; add esp, 8; pop ebx; ret; 
0x00123cd0: cmp al, 3; add byte ptr [eax], al; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x000fb053: cmp al, 3; jne 0xfb0f0; mov eax, edx; pop ebx; ret; 
0x00197bdb: cmp al, 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001898dc: cmp al, 4; jne 0x24a3d; mov eax, 8; add esp, 0xc; ret; 
0x0010e430: cmp al, 5; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00126f92: cmp al, byte ptr [0xec830000]; or byte ptr [ebp - 0x6b3b57d], cl; call dword ptr [eax + 0x55]; 
0x00197dc4: cmp al, byte ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001490e1: cmp al, byte ptr [eax - 7]; call dword ptr [eax + 0x56]; 
0x000408ef: cmp al, byte ptr [eax]; jne 0x40900; add esp, 4; pop ebx; pop esi; ret; 
0x00192a2e: cmp al, byte ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x00115761: cmp al, byte ptr [ebx + 0x5e5b74c4]; ret; 
0x00061cbd: cmp al, byte ptr [ebx - 0x7972f714]; lodsd eax, dword ptr [esi]; xor bh, cl; call dword ptr [eax + 0x53]; 
0x000610a5: cmp al, byte ptr [ebx - 0xf76fb3c]; pop ebx; pop esi; ret; 
0x0017460a: cmp al, byte ptr [ecx]; add byte ptr [eax], al; mov eax, dword ptr [ebp + 0xb0]; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x0009be32: cmp al, byte ptr [edx + 0xcbbfff9]; add byte ptr [eax], al; add cl, ch; ret 0xfffd; 
0x000c22bd: cmp al, byte ptr [edx - 1]; jne 0xc246b; pop esi; xor eax, eax; pop ebx; ret; 
0x001a6771: cmp al, byte ptr [edx - 1]; mov eax, 0; jne 0x1a6f86; pop ebx; ret; 
0x001a983b: cmp al, byte ptr [edx - 1]; mov eax, 0; jne 0x1a9870; pop ebx; ret; 
0x000a216f: cmp al, byte ptr [esp + esi*2]; sub eax, 0x8d04ec83; test dword ptr [eax + 0x42], ecx; stc; call dword ptr [eax + 0x53]; 
0x00089d75: cmp al, ch; adc eax, 0x83000957; les ebx, ptr [eax]; pop ebx; ret; 
0x0016b8c7: cmp al, ch; ret; 
0x001312e2: cmp al, ch; sbb bl, dl; cmc; dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x000c1575: cmp al, dh; pop edi; ret; 
0x00031d49: cmp bh, 0x2b; stc; call dword ptr [eax - 0x18]; 
0x0003b9a6: cmp bh, 0xff; inc eax; shr eax, 0x1f; ret; 
0x0003df7a: cmp bh, 0xff; jmp dword ptr [ecx]; 
0x0010b80b: cmp bh, al; jmp dword ptr [esi - 0x70]; 
0x0010a875: cmp bh, bh; dec dword ptr [ebx + 0x458b2455]; sub al, 0x39; sal byte ptr [esi + ecx - 0x77], 1; ret 0xf189; 
0x0010a88a: cmp bh, bh; dec dword ptr [ebx + 0x458b2455]; xor byte ptr [ecx], bh; sal byte ptr [ebx + ecx - 0x77], 1; ret 0xf189; 
0x0019631c: cmp bh, bh; inc dword ptr [ecx + 0x45291c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001961ae: cmp bh, bh; inc dword ptr [ecx + 0x453ffc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014a281: cmp bh, bh; jmp dword ptr [esi - 0x70]; 
0x0012b4c5: cmp bh, byte ptr [eax + 0xd0]; mov ebx, 0xffffffff; mov edx, 0xffffffff; call dword ptr gs:[0x10]; 
0x0012b3e5: cmp bh, byte ptr [eax + 0xd2]; mov ebx, 0xffffffff; mov edx, 0xffffffff; call dword ptr gs:[0x10]; 
0x0008f746: cmp bh, cl; jmp dword ptr [ebp - 0x39]; 
0x000803c9: cmp bh, dl; jmp dword ptr [esi - 0x70]; 
0x0012bb55: cmp bl, 0xff; call dword ptr [eax - 0x18]; 
0x000f1d5c: cmp bl, 0xff; call dword ptr [edi - 1]; 
0x000f23fa: cmp bl, 0xff; call dword ptr [edx - 0x77]; 
0x0012bb42: cmp bl, 0xff; dec dword ptr [ebp - 0x45b7b]; dec dword ptr [ecx - 0x47b6b]; call dword ptr [eax - 0x73]; 
0x000f25ef: cmp bl, 0xff; dec dword ptr [ebx - 0x4776b]; call dword ptr [edi - 1]; 
0x000f321d: cmp bl, 0xff; dec dword ptr [ecx - 0x49b7b]; dec dword ptr [ebx - 0x49773]; inc dword ptr [ecx]; rol byte ptr [ecx], 1; ret; 
0x000f1f62: cmp bl, 0xff; inc dword ptr [ecx]; ret; 
0x0007f1e6: cmp bl, byte ptr [ebx + 0x5e]; pop edi; ret; 
0x0015b0c5: cmp bl, byte ptr [edi - 7]; call dword ptr [eax - 0x18]; 
0x0012283f: cmp byte ptr [0xffffeff0], ah; or eax, edx; mov dword ptr [ecx + 8], eax; xor eax, eax; pop ebx; ret; 
0x00129a44: cmp byte ptr [eax + 0x14d], bh; call dword ptr gs:[0x10]; 
0x0012a374: cmp byte ptr [eax + 0x14e], bh; call dword ptr gs:[0x10]; 
0x00035f24: cmp byte ptr [eax + 0x29], 0xf9; call dword ptr [eax - 0x73]; 
0x00122a6f: cmp byte ptr [eax + 0x36], bh; call dword ptr gs:[0x10]; 
0x00087cdb: cmp byte ptr [eax + 0x56], dl; call dword ptr [ebx + 0x48]; 
0x001316b9: cmp byte ptr [eax + 0x66], bh; call dword ptr gs:[0x10]; 
0x001328d7: cmp byte ptr [eax + 0x75], bh; mov ebx, 0xb; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x00133e69: cmp byte ptr [eax + 0x92], bh; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; mov edx, 0x40; call dword ptr gs:[0x10]; 
0x000fb714: cmp byte ptr [eax + 0xb4], bh; call dword ptr gs:[0x10]; 
0x000fb8d4: cmp byte ptr [eax + 0xb5], bh; call dword ptr gs:[0x10]; 
0x0014cdca: cmp byte ptr [eax + 0xffffff], 0xf; inc esp; ret; 
0x000fbfd4: cmp byte ptr [eax + 1], 0x5b; pop esi; pop edi; ret; 
0x001aba6f: cmp byte ptr [eax + eax + 0x408d0000], 0xf; pop edi; ret; 
0x000a3de8: cmp byte ptr [eax + eax], al; add bl, ch; ret 0x9066; 
0x00197fcb: cmp byte ptr [eax + eax], al; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000fb59c: cmp byte ptr [eax + eax], dl; mov ecx, dword ptr [esp + 4]; mov eax, 1; test ecx, ecx; js 0xfb5b0; ret; 
0x000f9907: cmp byte ptr [eax + edx*4], 0xeb; call dword ptr [eax + 0x6a]; 
0x000530b6: cmp byte ptr [eax - 0x18], dl; ret; 
0x00143911: cmp byte ptr [eax - 0x72000655], 0xb2; dec esp; je 0x143914; call dword ptr [eax + 0x56]; 
0x0010a813: cmp byte ptr [eax - 0x75000000], 0x10; mov dword ptr [eax], ecx; mov eax, edx; ret; 
0x000fdd48: cmp byte ptr [eax - 7], cl; call dword ptr [eax + 0x55]; 
0x000272b5: cmp byte ptr [eax - 7], dh; jmp dword ptr [esi - 0x77]; 
0x00034e11: cmp byte ptr [eax], 0; jne 0x34e20; mov eax, edx; add esp, 0xc; ret; 
0x00034e51: cmp byte ptr [eax], 0; jne 0x34e60; mov eax, edx; add esp, 0xc; ret; 
0x000b7cf2: cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b7583: cmp byte ptr [eax], 1; sbb eax, -1; pop edi; pop ebx; ret; 
0x000c15a5: cmp byte ptr [eax], ah; pop edi; ret; 
0x001775af: cmp byte ptr [eax], al; add byte ptr [eax], al; add bh, bh; jne 0x177607; push edi; call dword ptr [eax + 0x14]; 
0x0011bd57: cmp byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x1772; 
0x00104421: cmp byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00034e12: cmp byte ptr [eax], al; jne 0x34e20; mov eax, edx; add esp, 0xc; ret; 
0x00034e52: cmp byte ptr [eax], al; jne 0x34e60; mov eax, edx; add esp, 0xc; ret; 
0x00188742: cmp byte ptr [eax], al; mov ebx, dword ptr [esp + 0x14]; jne 0x188750; pop ebx; ret; 
0x001a7aee: cmp byte ptr [eax], al; ret 0xf66; 
0x000c1595: cmp byte ptr [eax], dl; pop edi; ret; 
0x000d978a: cmp byte ptr [ebp + 0x13], dh; pop edi; pop esi; ret; 
0x00151fda: cmp byte ptr [ebp + 0x5c], 0xf9; call dword ptr [eax - 0x73]; 
0x000926fb: cmp byte ptr [ebp - 0x67c4380], cl; call dword ptr [eax - 0x18]; 
0x0002ab29: cmp byte ptr [ebp - 0x68d9b79], cl; call dword ptr [eax - 0x73]; 
0x0002aaf4: cmp byte ptr [ebp - 0x6951379], cl; call dword ptr [eax + 0x68]; 
0x0002a7b8: cmp byte ptr [ebp - 0x6951379], cl; call dword ptr [eax - 0x73]; 
0x0002e188: cmp byte ptr [ebp - 0x695d379], cl; call dword ptr [eax + 0x68]; 
0x0002e017: cmp byte ptr [ebp - 0x695d379], cl; call dword ptr [eax - 0x73]; 
0x0002e1ab: cmp byte ptr [ebp - 0x6961379], cl; call dword ptr [eax - 0x73]; 
0x00169ad4: cmp byte ptr [ebp - 0x69d8380], cl; jmp dword ptr [ebp - 0x75]; 
0x00163e3d: cmp byte ptr [ebp - 0x69f4052], cl; call dword ptr [ebp - 0x73]; 
0x0010f153: cmp byte ptr [ebp - 0x6b6cb7d], cl; call dword ptr [eax - 0x18]; 
0x000c6324: cmp byte ptr [ebp - 0x6d5dc48], cl; jmp dword ptr [ebp - 0x75]; 
0x001634d5: cmp byte ptr [ebp - 0x76db8b40], al; ret; 
0x000af5fe: cmp byte ptr [ebp - 0x7c588a01], al; ret 0xeb01; 
0x0004b10b: cmp byte ptr [ebx + 0x108247c], cl; ret 0xd389; 
0x00047bab: cmp byte ptr [ebx + 0x10c247c], cl; ret 0xd389; 
0x0014fbb5: cmp byte ptr [ebx + 0x29482454], cl; ret 0x4c8b; 
0x0015a157: cmp byte ptr [ebx + 0x39082444], cl; ret 0xc074; 
0x0002dcf3: cmp byte ptr [ebx + 0x390c2444], cl; ret 0x840f; 
0x000a3ee8: cmp byte ptr [ebx + 0x39102444], cl; ret 0x840f; 
0x0002cd73: cmp byte ptr [ebx + 0x39102444], cl; ret 0x850f; 
0x0004226a: cmp byte ptr [ebx + 0x408b3c48], cl; inc eax; ret; 
0x000e76d7: cmp byte ptr [ebx + 0x4c8d08ec], al; and al, 0x1c; push ecx; mov dword ptr [esp + 0x18], ecx; push ebx; call eax; 
0x0008bcb7: cmp byte ptr [ebx + 0x535608ec], al; call dword ptr [edi + 0x18]; 
0x000c0a41: cmp byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000a89ad: cmp byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x0008146a: cmp byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x000a1943: cmp byte ptr [ebx + 0x5e5b20c4], al; pop edi; ret; 
0x00169d7f: cmp byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x0003bbf0: cmp byte ptr [ebx + 0x5e5b40c4], al; pop edi; fsubp st(1); ret; 
0x0003bc22: cmp byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x000619b7: cmp byte ptr [ebx + 0x5e5b7cc4], al; pop edi; pop ebp; ret; 
0x00149be2: cmp byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0007297b: cmp byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000e6e77: cmp byte ptr [ebx + ecx*4], al; je 0xe6ea0; cmp byte ptr [ecx], ch; ret 0xc889; 
0x000a93e7: cmp byte ptr [ebx + edx*2], 0xf5; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x000a8b37: cmp byte ptr [ebx + edx*4 - 0x1a7f000a], 2; lea edx, [edx - 0x17cc74]; cmove eax, edx; ret; 
0x0008de63: cmp byte ptr [ebx - 0x3b7ce3c0], cl; and al, 0x5b; pop esi; jmp eax; 
0x0012ec82: cmp byte ptr [ebx - 0x47c3db8c], cl; add byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00130322: cmp byte ptr [ebx - 0x47c3db8c], cl; cmp al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012fd22: cmp byte ptr [ebx - 0x47c3db8c], cl; cmp eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00074839: cmp byte ptr [ebx - 0x52b7b], cl; inc dword ptr [ecx]; fdivr dword ptr [ecx]; ret 0x830f; 
0x00121786: cmp byte ptr [ebx - 0x749fdba4], cl; je 0x1217b2; insb byte ptr es:[edi], dx; mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0010e8f2: cmp byte ptr [ebx - 0x76c3db8c], cl; inc esp; and al, 8; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x0012671b: cmp byte ptr [ebx - 0x76c3dbb4], cl; ret 0xfdb8; 
0x000638b4: cmp byte ptr [ebx - 0x76dbdbac], cl; ret; 
0x000ec4cf: cmp byte ptr [ebx - 0x76ebdba4], cl; ret 0x2db9; 
0x00129750: cmp byte ptr [ebx - 0x76fbdb84], cl; inc esp; and al, 0xc; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x0012a080: cmp byte ptr [ebx - 0x76fbdb84], cl; inc esp; and al, 0xc; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000a48af: cmp byte ptr [ebx - 7], al; call dword ptr [eax - 0x18]; 
0x00145de9: cmp byte ptr [ebx], 0x2e; je 0x145df8; add esp, 8; pop ebx; ret; 
0x0009fdf4: cmp byte ptr [ebx], 0x2f; jne 0x9fe40; add ebx, 1; mov eax, 0x116; call dword ptr gs:[0x10]; 
0x0015a306: cmp byte ptr [ecx + 0x24448b18], cl; sbb al, 0x89; sub byte ptr [ebx - 0x74ebdbbc], cl; or cl, ch; ret 0xfffe; 
0x000a3897: cmp byte ptr [ecx + 0x39102444], cl; ret 0x840f; 
0x00122411: cmp byte ptr [ecx + 0x42893c7a], cl; xor al, 0x5b; pop esi; pop edi; ret; 
0x0006aff1: cmp byte ptr [ecx + 0xf], 0x85; call dword ptr [ebx]; 
0x000aa2f7: cmp byte ptr [ecx + esi*8], 0xf5; inc dword ptr [eax - 0x6d72fd1b]; mov esp, 0xfffe83d; inc esp; ret 0x66c3; 
0x000e182f: cmp byte ptr [ecx - 0x16bfdbbc], cl; xchg edi, eax; in al, 0xff; push esi; ret; 
0x00066b89: cmp byte ptr [ecx - 0x5b77b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000698c2: cmp byte ptr [ecx - 0x5cf7b], cl; dec dword ptr [ebx - 0x5af7b]; dec dword ptr [ebx - 0x5cf6b]; dec dword ptr [ebx + 0x40f63440]; jmp dword ptr [eax]; 
0x00132769: cmp byte ptr [ecx - 0x74ebdbbc], cl; inc esp; and al, 0x3c; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000cf243: cmp byte ptr [ecx - 0x76227612], cl; ret; 
0x0017729c: cmp byte ptr [ecx - 0x76f7dbb4], cl; inc esp; and al, 4; jmp edx; 
0x000ffc95: cmp byte ptr [ecx - 0x7d17a818], cl; ret; 
0x00165612: cmp byte ptr [ecx - 7], ah; call dword ptr [eax + 0x6a]; 
0x0016bafa: cmp byte ptr [ecx], 0; cmove ecx, eax; pop ebx; pop esi; mov eax, ecx; ret; 
0x00133b8d: cmp byte ptr [ecx], 0; je 0x133b98; ret; 
0x0008e954: cmp byte ptr [ecx], al; je 0x8e960; ret; 
0x000b7cf3: cmp byte ptr [ecx], al; sbb eax, -1; pop ebx; ret; 
0x000b7584: cmp byte ptr [ecx], al; sbb eax, -1; pop edi; pop ebx; ret; 
0x000d9787: cmp byte ptr [ecx], bh; dec edi; cmp byte ptr [ebp + 0x13], dh; pop edi; pop esi; ret; 
0x0007d7f2: cmp byte ptr [ecx], bh; ret; 
0x000e6e7c: cmp byte ptr [ecx], ch; ret 0xc889; 
0x000e31d8: cmp byte ptr [ecx], ch; sar byte ptr [ecx], 1; ret; 
0x0017b5ed: cmp byte ptr [ecx], dh; rcl byte ptr [edi - 0x18], 0x2a; js 0x17b5e9; call ecx; 
0x0017b50d: cmp byte ptr [ecx], dh; rcl byte ptr [edi - 0x18], 0xa; jns 0x17b509; call ecx; 
0x000b9449: cmp byte ptr [ecx], dl; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x001ac187: cmp byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00195e7a: cmp byte ptr [edi + 4], dl; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001860d2: cmp byte ptr [edi - 7], ah; call dword ptr [eax - 0x18]; 
0x0003570f: cmp byte ptr [edi], 0x2e; stc; call dword ptr [eax - 0x18]; 
0x000322e7: cmp byte ptr [edi], cl; add byte ptr [edx - 3], 0xff; jmp dword ptr [esi - 0x70]; 
0x00025463: cmp byte ptr [edi], cl; dec ecx; ret 0xc789; 
0x00040582: cmp byte ptr [edi], cl; inc ebp; ret; 
0x000d08e9: cmp byte ptr [edi], cl; xchg edx, eax; ret 0x7439; 
0x001a6538: cmp byte ptr [edi], dl; ret 0x2c73; 
0x001a6ef9: cmp byte ptr [edi], dl; ret 0x3273; 
0x001a6523: cmp byte ptr [edi], dl; ret 0x3e73; 
0x001a6edf: cmp byte ptr [edi], dl; ret 0x4c73; 
0x001a650e: cmp byte ptr [edi], dl; ret 0x5073; 
0x001a64f9: cmp byte ptr [edi], dl; ret 0x6273; 
0x001a6ec5: cmp byte ptr [edi], dl; ret 0x6673; 
0x001a5e94: cmp byte ptr [edi], dl; ret 0x830f; 
0x0018bd2e: cmp byte ptr [edx + 0x56], dl; call dword ptr [eax + 0x48]; 
0x001abc2c: cmp byte ptr [edx + 0xb], 0; je 0x1abcb2; mov eax, 0xc; pop edi; ret; 
0x001abc64: cmp byte ptr [edx + 0xf], 0; je 0x1abcc6; mov eax, 0x10; pop edi; ret; 
0x001a0d94: cmp byte ptr [edx + 0xf], cl; jne 0x1a0bf0; pop ebp; xor eax, eax; ret; 
0x00141f9d: cmp byte ptr [edx + 2], 0; jne 0x141fa9; movzx eax, byte ptr [edx + 1]; shr eax, 1; ret; 
0x0016b6be: cmp byte ptr [edx + 2], ch; push dword ptr [esp + 0x3c]; call 0x16b4f0; add esp, 0x3c; ret; 
0x0008ce33: cmp byte ptr [edx + ebx], 0; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x000c410e: cmp byte ptr [edx - 1], dl; je 0xc4137; sub al, 0xff; aaa; mov eax, dword ptr [esp + 0x38]; call eax; 
0x00169a82: cmp byte ptr [edx - 7], 0xff; push eax; push 0; call 0x1565b0; add esp, 0x1c; ret; 
0x00168134: cmp byte ptr [edx - 7], ah; call dword ptr [eax - 0x18]; 
0x000408ee: cmp byte ptr [edx], 0; jne 0x40900; add esp, 4; pop ebx; pop esi; ret; 
0x00177295: cmp byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebx + 0x4c8938c0], al; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0008b8d3: cmp byte ptr [edx], ch; push ebp; push edi; push ebx; call dword ptr [esi + 0x24]; 
0x0016db22: cmp byte ptr [esi + 0x63], 0xf9; call dword ptr [eax + 0x6a]; 
0x0016dc22: cmp byte ptr [esi + 0x63], 0xf9; call dword ptr [eax - 0x18]; 
0x0016db76: cmp byte ptr [esi + 0x63], 0xf9; jmp dword ptr [ebp - 0x75]; 
0x000d46f7: cmp byte ptr [esi + ecx*8 - 0x1a7f000a], 2; lea edx, [edx - 0x165354]; cmove eax, edx; ret; 
0x00173f07: cmp byte ptr [esi - 0x75], dl; inc esp; and al, 0x3c; call eax; 
0x00078ee5: cmp byte ptr [esi - 7], bh; call dword ptr [eax - 0x18]; 
0x0010b8b7: cmp byte ptr [esp + 0x17], 0; jne 0x10b960; call ecx; 
0x001973fa: cmp byte ptr [esp + eax], al; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0010d2ba: cmp ch, 0xff; jmp dword ptr [esi - 0x70]; 
0x0003230a: cmp ch, 0xff; push esi; ret 0xf03; 
0x001a66c4: cmp ch, bh; mov eax, 0; jne 0x1a6f86; pop ebx; ret; 
0x001a979a: cmp ch, bh; mov eax, 0; jne 0x1a9870; pop ebx; ret; 
0x00137d92: cmp ch, byte ptr [esi - 0x3b7c0008]; adc byte ptr [ebp - 0x7ce48b40], al; ret; 
0x000c2ed0: cmp cl, 0; je 0xc2ed6; inc eax; sub eax, dword ptr [esp + 4]; ret; 
0x00064f8d: cmp cl, 0x5a; jbe 0x65934; mov edi, eax; jmp edx; 
0x000d011a: cmp cl, 0xff; call dword ptr [eax + 0x6a]; 
0x000d5b53: cmp cl, byte ptr [eax + eax]; add byte ptr [ebx - 0x363f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x0004a267: cmp cl, byte ptr [edi]; add byte ptr [ebx - 0x72e7db84], cl; xchg dword ptr [eax + edi*2], esi; stc; call dword ptr [eax - 0x73]; 
0x0017cdc2: cmp cl, byte ptr [edi]; cld; jmp dword ptr [esi - 0x70]; 
0x0015bba2: cmp cl, byte ptr [edi]; xchg esp, eax; ret 0xc084; 
0x0003049e: cmp cl, byte ptr [edi]; xchg esp, eax; ret; 
0x001a6628: cmp cl, byte ptr [edx - 1]; mov eax, 0; jne 0x1a6f86; pop ebx; ret; 
0x001a96de: cmp cl, byte ptr [edx - 1]; mov eax, 0; jne 0x1a9870; pop ebx; ret; 
0x001a81f4: cmp cl, byte ptr [edx]; je 0x1a8210; mov eax, 1; ja 0x1a8201; neg eax; ret; 
0x000c21b5: cmp cl, byte ptr [edx]; jne 0xc21bd; xor eax, eax; pop ebx; ret; 
0x0006c72c: cmp cl, ch; ret 0xffe1; 
0x001713c2: cmp cl, cl; cld; jmp dword ptr [esi - 0x70]; 
0x000aa2c8: cmp cl, dl; je 0xaa2cd; inc eax; pop edi; ret; 
0x0015c7cb: cmp cx, 2; je 0x15c7e0; mov eax, edx; pop ebx; pop esi; ret; 
0x001a6f83: cmp cx, bx; pop ebx; mov eax, 1; ja 0x1a6f90; neg eax; ret; 
0x0016e37c: cmp dh, 0xff; add esp, 0x1c; ret; 
0x00174159: cmp dh, 0xff; call dword ptr [ecx + 0x51]; 
0x00174159: cmp dh, 0xff; call dword ptr [ecx + 0x51]; push dword ptr [esp + 0x40]; push ebp; call esi; 
0x0009781d: cmp dh, 0xff; dec dword ptr [ebp - 0x678e779]; call dword ptr [eax - 0x73]; 
0x000e0354: cmp dh, ah; clc; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x00060fde: cmp dh, bl; sbb eax, 0xc838b00; sbb al, byte ptr [eax]; add byte ptr [ebp + 0x314574c0], al; jmp dword ptr [esi - 0x70]; 
0x00152d0c: cmp dh, cl; call dword ptr [esi + 0x50]; 
0x000c2b2f: cmp dh, cl; jne 0xc2b36; lea eax, [esi + 3]; pop esi; pop edi; ret; 
0x0002ac8b: cmp dh, dh; ret 0x7501; 
0x001a92f7: cmp dh, dh; ret 0x7504; 
0x000ba9f3: cmp dh, dl; or al, 0; add ecx, 0x1124a9; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0012945b: cmp dl, 0x2c; jne 0x12941e; pop ebx; pop esi; pop edi; ret; 
0x00032b6f: cmp dl, 0xff; cmove edx, ecx; mov byte ptr [eax + 0x1201], dl; lea eax, [eax + 0x11cc]; ret; 
0x00097dba: cmp dl, 0xff; jmp dword ptr [esi - 0x70]; 
0x000bd53e: cmp dl, bh; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0010c7a2: cmp dl, byte ptr [ebx]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000b923f: cmp dl, byte ptr [ecx]; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0008cd39: cmp dword ptr [eax + 0x1a], 0; add byte ptr [ecx], al; add esp, 4; pop ebx; pop esi; ret; 
0x000dd40b: cmp dword ptr [eax + 0x29], -7; call dword ptr [eax + 0x6a]; 
0x001575b3: cmp dword ptr [eax + 0x5e], 0; add byte ptr [eax], al; call esi; 
0x0017a328: cmp dword ptr [eax + 0x65], -7; call dword ptr [eax - 0x73]; 
0x0013be17: cmp dword ptr [eax + 4], ecx; jne 0x13be10; mov eax, dword ptr [eax + 0x18]; ret; 
0x00152b27: cmp dword ptr [eax + 8], edx; jne 0x152b20; ret; 
0x001770b3: cmp dword ptr [eax + eax*4], -0xd; call dword ptr [eax + 0x57]; 
0x00197e7b: cmp dword ptr [eax + eax], eax; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000a62ca: cmp dword ptr [eax + eax], edx; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + ebx*4 - 7], edx; call dword ptr [eax - 0x18]; 
0x0015cf0b: cmp dword ptr [eax - 0x4c], -7; call dword ptr [eax - 0x18]; 
0x000ef6db: cmp dword ptr [eax - 0x61], -7; call dword ptr [eax - 0x73]; 
0x000a54fa: cmp dword ptr [eax - 0x67], -7; call dword ptr [eax - 0x73]; 
0x0013f6d3: cmp dword ptr [eax - 7], ebx; call dword ptr [ecx + 0x50]; 
0x0017c25c: cmp dword ptr [eax], -0x46; stc; call dword ptr [eax - 0x73]; 
0x000a122c: cmp dword ptr [eax], -0x74; stc; call dword ptr [eax + 0x6a]; 
0x00188741: cmp dword ptr [eax], 0; mov ebx, dword ptr [esp + 0x14]; jne 0x188750; pop ebx; ret; 
0x000fdd47: cmp dword ptr [eax], 0x48; stc; call dword ptr [eax + 0x55]; 
0x00168133: cmp dword ptr [eax], 0x62; stc; call dword ptr [eax - 0x18]; 
0x001711bb: cmp dword ptr [eax], 0x64; stc; call dword ptr [edx + 0x6a]; 
0x001574a3: cmp dword ptr [eax], 0x7f; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x0008e953: cmp dword ptr [eax], 1; je 0x8e960; ret; 
0x0010c31b: cmp dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0013843e: cmp dword ptr [eax], eax; add byte ptr [ebx + 0x57500cc4], al; push 0x2000003; call dword ptr [ebx + 0x14]; 
0x0016bafb: cmp dword ptr [eax], eax; cmove ecx, eax; pop ebx; pop esi; mov eax, ecx; ret; 
0x00133b8e: cmp dword ptr [eax], eax; je 0x133b98; ret; 
0x00179666: cmp dword ptr [eax], esi; je 0x179670; add esp, 4; pop ebx; pop esi; ret; 
0x00127193: cmp dword ptr [ebp + 0x50], -7; call dword ptr [eax + 0x55]; 
0x00151568: cmp dword ptr [ebp + 0x5c], -7; call dword ptr [eax - 0x73]; 
0x00024405: cmp dword ptr [ebp - 0x30], 0; je 0x24426; sub esp, 0xc; push dword ptr [ebp - 0x34]; call dword ptr [ebp - 0x38]; 
0x000c6270: cmp dword ptr [ebp - 0x74f38b01], eax; inc ecx; or byte ptr [ebx + 0x418901c0], al; or byte ptr [edi], cl; nop; ret 0x4b8b; 
0x0009a5f3: cmp dword ptr [ebx + 0x17408f8], eax; ret; 
0x0008e858: cmp dword ptr [ebx + 0x57408f8], eax; add esp, 8; pop ebx; ret; 
0x000a8829: cmp dword ptr [ebx + 0x5e5b2cc4], eax; pop edi; pop ebp; ret; 
0x0013ff31: cmp dword ptr [ebx + 0x5e5b4cc4], eax; pop edi; pop ebp; ret; 
0x000fb052: cmp dword ptr [ebx + eax], 0x26; jne 0xfb0f0; mov eax, edx; pop ebx; ret; 
0x00161745: cmp dword ptr [ebx + ebp], -0xe; call dword ptr [eax - 0x18]; 
0x0016bb4b: cmp dword ptr [ebx - 7], esp; call dword ptr [eax - 0x18]; 
0x00179274: cmp dword ptr [ebx], -0xd; call dword ptr [eax - 0x73]; 
0x001270f7: cmp dword ptr [ebx], 0x4f; stc; call dword ptr [eax + 0x55]; 
0x0015bed4: cmp dword ptr [ecx + 0x10], edx; jb 0x15bee1; setne al; movzx eax, al; neg eax; ret; 
0x00024b1d: cmp dword ptr [ecx + 0x94], edx; jne 0x24af2; ret; 
0x0014eff9: cmp dword ptr [ecx + 4], eax; sete al; pop ebx; movzx eax, al; ret; 
0x000e79d9: cmp dword ptr [ecx + 8], 0x3b9ac9ff; ja 0xe7a90; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x0009b3c4: cmp dword ptr [ecx + eax*8], -0x1b; call dword ptr [eax - 0x73]; 
0x0003c8e5: cmp dword ptr [ecx + ebx*8], -0x21; dec dword ptr [edi]; inc esp; ret 0xe3e9; 
0x00162794: cmp dword ptr [ecx + edi], -0xe; call dword ptr [eax - 0x73]; 
0x000d37b8: cmp dword ptr [ecx + edi], eax; ret 0x8f0f; 
0x000fb152: cmp dword ptr [ecx + edx], 0x26; je 0xfb13f; mov eax, 0xffffffff; ret; 
0x000fb2b2: cmp dword ptr [ecx + edx], 0x26; je 0xfb2c2; mov eax, 0xffffffff; ret; 
0x000fb5bd: cmp dword ptr [ecx + edx], 0x26; je 0xfb5ac; mov eax, 0xffffffff; ret; 
0x000504c0: cmp dword ptr [ecx - 0x7697db94], ecx; fisttp qword ptr [ecx - 0x76307608]; ret; 
0x0004c936: cmp dword ptr [ecx - 0x76a7db94], ecx; fisttp qword ptr [ecx - 0x76307608]; ret; 
0x000493f2: cmp dword ptr [ecx - 0x76afdb94], ecx; fisttp qword ptr [ecx - 0x76307608]; ret; 
0x00158d57: cmp dword ptr [ecx], -0xf; call dword ptr [eax - 0x18]; 
0x0016bb4a: cmp dword ptr [ecx], 0x63; stc; call dword ptr [eax - 0x18]; 
0x0014dd5a: cmp dword ptr [ecx], 0x68fff95c; salc; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; add dword ptr [ebp + 0x5c], 0xe850fff9; jmp dword ptr [edx - 0x12]; 
0x0009cff1: cmp dword ptr [ecx], 2; je 0x9cfb2; pop ebx; pop esi; ret; 
0x0003e993: cmp dword ptr [ecx], eax; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000c15b6: cmp dword ptr [ecx], eax; clc; pop edi; ret; 
0x000b9348: cmp dword ptr [ecx], edx; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b9366: cmp dword ptr [ecx], edx; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0008fcbe: cmp dword ptr [ecx], esi; idiv byte ptr [eax + 0xf0]; call dword ptr gs:[0x10]; 
0x000d96ae: cmp dword ptr [edi + 0x10], ecx; jne 0xd97a0; pop edi; pop esi; ret; 
0x000d96c3: cmp dword ptr [edi + 0x14], ecx; jne 0xd97a0; pop edi; pop esi; ret; 
0x000d96d8: cmp dword ptr [edi + 0x18], ecx; jne 0xd97a0; pop edi; pop esi; ret; 
0x000d96f3: cmp dword ptr [edi + 0x1c], ecx; jne 0xd97a0; pop edi; pop esi; ret; 
0x000d970e: cmp dword ptr [edi + 0x20], ecx; jne 0xd97a0; pop edi; pop esi; ret; 
0x000d9723: cmp dword ptr [edi + 0x24], ecx; jne 0xd97a0; pop edi; pop esi; ret; 
0x000d9738: cmp dword ptr [edi + 0x28], ecx; jne 0xd97a0; pop edi; pop esi; ret; 
0x000d9743: cmp dword ptr [edi + 0x2c], ecx; jne 0xd97a0; pop edi; pop esi; ret; 
0x000d975e: cmp dword ptr [edi + 0x30], ecx; jne 0xd97a0; pop edi; pop esi; ret; 
0x000d9773: cmp dword ptr [edi + 0x34], ecx; jne 0xd97a0; pop edi; pop esi; ret; 
0x000d9788: cmp dword ptr [edi + 0x38], ecx; jne 0xd97a0; pop edi; pop esi; ret; 
0x000d9793: cmp dword ptr [edi + 0x3c], ecx; jne 0xd97a0; pop edi; pop esi; ret; 
0x000d962b: cmp dword ptr [edi + 0xc], ecx; jne 0xd97a0; xor eax, eax; pop edi; pop esi; ret; 
0x000d9678: cmp dword ptr [edi + 8], ecx; jne 0xd97a0; pop edi; pop esi; ret; 
0x00171be7: cmp dword ptr [edi + esi*4], -7; call dword ptr [eax - 0x73]; 
0x001720f3: cmp dword ptr [edi - 0x3b7d0000], ebx; adc byte ptr [ebp - 0x7c248b40], al; in al, dx; add al, 0x83; ret; 
0x001479e5: cmp dword ptr [edi], 0x5a; stc; call dword ptr [eax + 0x51]; 
0x000d964d: cmp dword ptr [edi], ecx; jne 0xd97a0; pop edi; pop esi; ret; 
0x0014efb2: cmp dword ptr [edx + 0x14], eax; sete al; pop ebx; movzx eax, al; ret; 
0x0009af30: cmp dword ptr [edx + 0x14], ecx; je 0x9af40; ret; 
0x00083f34: cmp dword ptr [edx + 0x24], ecx; cmove eax, ecx; ret; 
0x000819bb: cmp dword ptr [edx + 0x3e], -7; call dword ptr [eax - 0x18]; 
0x0008d003: cmp dword ptr [edx + 0x3e], -7; call dword ptr [eax - 0x18]; bound esi, qword ptr [eax - 6]; jmp dword ptr [esi - 0x70]; 
0x00153b8e: cmp dword ptr [edx + 0x5d], -7; call dword ptr [eax - 0x18]; 
0x00153c2e: cmp dword ptr [edx + 0x5d], -7; call dword ptr [eax - 0x18]; aaa; add al, 0xee; jmp dword ptr [esi - 0x70]; 
0x0015426e: cmp dword ptr [edx + 0x5d], -7; call dword ptr [eax - 0x18]; idiv ebp; in eax, dx; jmp dword ptr [esi - 0x70]; 
0x00153fee: cmp dword ptr [edx + 0x5d], -7; call dword ptr [eax - 0x18]; ja 0x153ff7; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00153eae: cmp dword ptr [edx + 0x5d], -7; call dword ptr [eax - 0x18]; mov bh, 1; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00153f4e: cmp dword ptr [edx + 0x5d], -7; call dword ptr [eax - 0x18]; pop ss; add esi, ebp; jmp dword ptr [esi - 0x70]; 
0x00153e0e: cmp dword ptr [edx + 0x5d], -7; call dword ptr [eax - 0x18]; push edi; add ch, dh; jmp dword ptr [esi - 0x70]; 
0x00153cce: cmp dword ptr [edx + 0x5d], -7; call dword ptr [eax - 0x18]; xchg edi, eax; add ebp, esi; jmp dword ptr [esi - 0x70]; 
0x00153b8e: cmp dword ptr [edx + 0x5d], -7; call dword ptr [eax - 0x18]; xlatb; add al, 0xee; jmp dword ptr [esi - 0x70]; 
0x0014ef8e: cmp dword ptr [edx + 2], ebx; je 0x14ef98; pop ebx; ret; 
0x0012e286: cmp dword ptr [edx + eax], 0x26; je 0x12e2b6; mov eax, 0xffffffff; add esp, 8; pop ebx; ret; 
0x0015407e: cmp dword ptr [edx + esi*4], -7; call dword ptr [eax - 0x73]; 
0x001490e0: cmp dword ptr [edx], 0x40; stc; call dword ptr [eax + 0x56]; 
0x0015b0c4: cmp dword ptr [edx], 0x5f; stc; call dword ptr [eax - 0x18]; 
0x0008d863: cmp dword ptr [edx], eax; add byte ptr [eax], al; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x0009cff2: cmp dword ptr [edx], eax; je 0x9cfb2; pop ebx; pop esi; ret; 
0x0009d67a: cmp dword ptr [edx], ecx; jl 0x9d670; je 0x9d693; xor eax, eax; pop ebx; ret; 
0x0009d6ca: cmp dword ptr [edx], ecx; jl 0x9d6c0; mov edx, 0; cmovne eax, edx; ret; 
0x00124a1b: cmp dword ptr [esi + 0x4a], -7; call dword ptr [eax - 0x18]; 
0x001ab436: cmp dword ptr [esi + 0xf], esp; xlatb; ret 0x498d; 
0x001748f0: cmp dword ptr [esi + ebx*2], -0xd; call dword ptr [eax - 0x73]; 
0x000fbae2: cmp dword ptr [esi + ecx*4], ebx; je 0xfbaf8; pop ebx; pop esi; ret; 
0x00086f13: cmp dword ptr [esi + edi*2], -0x1c; call dword ptr [eax - 0x73]; 
0x001796d0: cmp dword ptr [esi], eax; jg 0x1796c0; add esp, 4; pop ebx; pop esi; ret; 
0x000e7459: cmp dword ptr [esp + 0x14], 1; je 0xe7468; add esp, 0xc; ret; 
0x000e7549: cmp dword ptr [esp + 0x14], 1; je 0xe7558; add esp, 0xc; ret; 
0x0003d504: cmp dword ptr [esp + 4], 0; je 0x3d520; lea ecx, [eax + 1]; mov dword ptr [edx + 0x1f4], ecx; ret; 
0x00034656: cmp dword ptr [esp + 4], 0x7f; setbe al; ret; 
0x000941b8: cmp dword ptr [esp + 4], eax; sete al; movzx eax, al; ret; 
0x00141d68: cmp dword ptr [esp + 8], 0x80; cmovb eax, edx; ret; 
0x000873bd: cmp dword ptr [esp + eax*4], -0x1c; call dword ptr [eax - 1]; 
0x000e762a: cmp eax, -0x16; mov eax, 3; cmovne eax, edx; ret; 
0x000e7610: cmp eax, -0x26; jne 0xe7621; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x000e787e: cmp eax, -0x26; jne 0xe78c0; lea ecx, [esp + 4]; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x00141507: cmp eax, -0xb; je 0x141500; add esp, 8; pop ebx; ret; 
0x000b3b29: cmp eax, -1; inc dword ptr [ebp + 0x2b850fc0]; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0018240b: cmp eax, -1; je 0x182420; add esp, 4; pop ebx; pop esi; ret; 
0x000a2366: cmp eax, -1; je 0xa2370; add esp, 0xc; ret; 
0x0010e3a3: cmp eax, -1; pop ebx; cmove eax, edx; ret; 
0x00189db2: cmp eax, -1; sete dl; mov dword ptr [ebx], edx; add esp, 8; pop ebx; ret; 
0x00126648: cmp eax, -1; setne al; movzx eax, al; add esp, 8; pop ebx; ret; 
0x00125311: cmp eax, 0x190c481; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x000958ff: cmp eax, 0x21; jne 0x95908; add dword ptr [edx + 4], 1; add esp, 0xc; ret; 
0x000e7b35: cmp eax, 0x3b9ac9ff; ja 0xe7bd8; lea ecx, [esp + 0xc]; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000a08d5: cmp eax, 0x3fc; jbe 0xa08e0; ret; 
0x0013c8d6: cmp eax, 0x3ff; ja 0x13c8e4; sar eax, 5; add esp, 0xc; ret; 
0x000e7882: cmp eax, 0x4244c8d; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x000a87fa: cmp eax, 0x430ff839; shr byte ptr [ecx], 1; ret 0xf001; 
0x000aa302: cmp eax, 0x440fffe8; ret 0x66c3; 
0x0003ef54: cmp eax, 0x473ff00; call eax; 
0x00024e1e: cmp eax, 0x5004ec83; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call esi; 
0x000a0ad5: cmp eax, 0x50; jbe 0xa0ae0; ret; 
0x00175b1a: cmp eax, 0x560cec83; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x0018b8a8: cmp eax, 0x593; ja 0x18b8c0; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x0007b421: cmp eax, 0x593; ja 0x7b690; sub esp, 8; push 0; push esi; call dword ptr [ebx + 8]; 
0x0007b9ae: cmp eax, 0x593; ja 0x7bab0; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x0007e832: cmp eax, 0x593; ja 0x7e8d1; sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x00080d6c: cmp eax, 0x593; ja 0x80da8; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x0008150e: cmp eax, 0x593; ja 0x81540; sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x000849c7: cmp eax, 0x593; ja 0x84bf0; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x0008628b: cmp eax, 0x593; ja 0x86480; mov eax, dword ptr [ebp - 0x3c]; sub esp, 0xc; push esi; call dword ptr [eax + 0x30]; 
0x000876f0: cmp eax, 0x593; ja 0x87720; sub esp, 0xc; push ebx; call dword ptr [esi + 0x30]; 
0x000883f9: cmp eax, 0x593; ja 0x88440; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x0008b422: cmp eax, 0x593; ja 0x8b480; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x0008b4cc: cmp eax, 0x593; ja 0x8b4f8; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x0008bcb1: cmp eax, 0x593; ja 0x8bcf0; sub esp, 8; push esi; push ebx; call dword ptr [edi + 0x18]; 
0x0017bf96: cmp eax, 0x5b18c483; ret; 
0x000b38c0: cmp eax, 0x5bffffff; ret; 
0x0017f0b7: cmp eax, 0x62; stc; call dword ptr [eax + 0x6a]; 
0x00060aa9: cmp eax, 0x6a04ec83; add eax, 0x4c838d50; je 0x60aae; call dword ptr [eax - 0x18]; 
0x000f0099: cmp eax, 0x6afff99f; add eax, 0x4c818d50; je 0xf009f; call dword ptr [eax - 0x18]; 
0x0015752b: cmp eax, 0x6e; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x001600dc: cmp eax, 0x8100029b; ret; 
0x0014bfdc: cmp eax, 0x810003dc; ret; 
0x00136cdc: cmp eax, 0x8100052f; ret; 
0x0008afdc: cmp eax, 0x81000fec; ret; 
0x0018b8dc: cmp eax, 0x81ffffe3; ret; 
0x0018268f: cmp eax, 0x83fff0cc; les edx, ptr [eax]; mov eax, dword ptr [esp + 0xc]; add esp, 0x18; pop ebx; ret; 
0x001b2f62: cmp eax, 0x840f0400; sbb eax, 0x66000005; cmp eax, 0x840f0800; ret; 
0x001b2f6c: cmp eax, 0x840f0800; ret; 
0x00047021: cmp eax, 0x850f0c00; movsb byte ptr es:[edi], byte ptr [esi]; ret; 
0x00184cd7: cmp eax, 0x8914c483; fcomp dword ptr [ebx + 0x5e]; ret; 
0x0014b0fb: cmp eax, 0x8b65000f; adc eax, 0; mov eax, dword ptr [eax + 0x1c8]; mov eax, dword ptr [edx + eax]; ret; 
0x0004a16a: cmp eax, 0x8bfffff4; jl 0x4a195; sbb byte ptr [ebp - 0x687bf79], cl; call dword ptr [eax - 0x73]; 
0x000decdd: cmp eax, 0xa3d70b; setb dl; add edx, 0x16d; mov eax, edx; ret; 
0x000791e7: cmp eax, 0xb804c483; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x000a0aee: cmp eax, 0xb; mov eax, 8; cmova eax, edx; mov byte ptr [ecx + 0x3c38], al; ret; 
0x000a86bc: cmp eax, 0xc083f175; add dword ptr [edx + edx*8 + 0xba], eax; add byte ptr [edi], cl; inc esp; ret 0x8dc3; 
0x000c1cb2: cmp eax, 0xc1d70f66; bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x00195e75: cmp eax, 0xc381ffff; cmp byte ptr [edi + 4], dl; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00195f0e: cmp eax, 0xc381ffff; lahf; push esi; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000878de: cmp eax, 0xc4830000; adc byte ptr [ecx], bh; ret; 
0x0009c2ee: cmp eax, 0xc; sete al; movzx eax, al; add eax, 2; add esp, 0xc; ret; 
0x0004c3e6: cmp eax, 0xd9fffff1; xchg dword ptr [eax], ebx; ret 0xfff9; 
0x0010e2ef: cmp eax, 0xf7fffffd; ret 0x67; 
0x000a0915: cmp eax, 0xffff; jbe 0xa0920; ret; 
0x0010c119: cmp eax, 0xfffff000; ja 0x10c128; pop ebx; pop esi; ret; 
0x001132d7: cmp eax, 0xfffff000; ja 0x1132e8; pop ebx; pop esi; ret; 
0x00114654: cmp eax, 0xfffff000; ja 0x114660; pop ebx; ret; 
0x001146c4: cmp eax, 0xfffff000; ja 0x1146d0; pop ebx; ret; 
0x0011474e: cmp eax, 0xfffff000; ja 0x1147a0; add esp, 0x14; pop ebx; pop esi; ret; 
0x001149d2: cmp eax, 0xfffff000; ja 0x114a20; add esp, 0x14; pop ebx; pop esi; ret; 
0x00114ac4: cmp eax, 0xfffff000; ja 0x114ad0; pop ebx; ret; 
0x0011605a: cmp eax, 0xfffff000; ja 0x116068; pop ebx; pop esi; ret; 
0x0011f0e4: cmp eax, 0xfffff000; ja 0x11f0f0; pop ebx; ret; 
0x0011f604: cmp eax, 0xfffff000; ja 0x11f610; pop ebx; ret; 
0x0011fce2: cmp eax, 0xfffff000; ja 0x11fcf0; pop ebx; ret; 
0x00120869: cmp eax, 0xfffff000; ja 0x120878; pop ebx; pop esi; ret; 
0x001208f0: cmp eax, 0xfffff000; ja 0x120900; pop ebx; ret; 
0x0012094e: cmp eax, 0xfffff000; ja 0x120960; pop ebx; pop esi; pop edi; ret; 
0x001209ae: cmp eax, 0xfffff000; ja 0x1209c0; pop ebx; pop esi; pop edi; ret; 
0x00120c0a: cmp eax, 0xfffff000; ja 0x120c18; pop ebx; pop esi; ret; 
0x00121004: cmp eax, 0xfffff000; ja 0x121010; pop ebx; ret; 
0x00121510: cmp eax, 0xfffff000; ja 0x121520; pop ebx; ret; 
0x00121a30: cmp eax, 0xfffff000; ja 0x121a40; pop ebx; ret; 
0x00121f80: cmp eax, 0xfffff000; ja 0x121fa0; pop ebx; pop esi; pop edi; ret; 
0x00121ffd: cmp eax, 0xfffff000; ja 0x122020; pop ebx; pop esi; pop edi; ret; 
0x0012207f: cmp eax, 0xfffff000; ja 0x1220a0; pop ebx; pop esi; pop edi; ret; 
0x001220fc: cmp eax, 0xfffff000; ja 0x122120; pop ebx; pop esi; pop edi; ret; 
0x001221c9: cmp eax, 0xfffff000; ja 0x1221d8; pop ebx; pop esi; ret; 
0x00122569: cmp eax, 0xfffff000; ja 0x122578; pop ebx; pop esi; ret; 
0x00122fb4: cmp eax, 0xfffff000; ja 0x122fc0; pop ebx; ret; 
0x00123004: cmp eax, 0xfffff000; ja 0x123010; pop ebx; ret; 
0x0012311a: cmp eax, 0xfffff000; ja 0x123128; pop ebx; pop esi; pop edi; ret; 
0x0012317a: cmp eax, 0xfffff000; ja 0x123188; pop ebx; pop esi; pop edi; ret; 
0x0012485e: cmp eax, 0xfffff000; ja 0x1248b0; add esp, 0x14; pop ebx; pop esi; ret; 
0x00124dae: cmp eax, 0xfffff000; ja 0x124e00; add esp, 0x14; pop ebx; pop esi; ret; 
0x00124e64: cmp eax, 0xfffff000; ja 0x124e70; pop ebx; ret; 
0x00124eb9: cmp eax, 0xfffff000; ja 0x124ec8; pop ebx; pop esi; ret; 
0x001283e9: cmp eax, 0xfffff000; ja 0x1283f8; pop ebx; pop esi; ret; 
0x0012ad3b: cmp eax, 0xfffff000; ja 0x12ad48; pop ebx; pop esi; ret; 
0x0012c474: cmp eax, 0xfffff000; ja 0x12c480; pop ebx; ret; 
0x0012c4c9: cmp eax, 0xfffff000; ja 0x12c4d8; pop ebx; pop esi; ret; 
0x0012d6be: cmp eax, 0xfffff000; ja 0x12d6d0; mov eax, ecx; pop ebx; ret; 
0x0012e870: cmp eax, 0xfffff000; ja 0x12e880; pop ebx; ret; 
0x0012ef14: cmp eax, 0xfffff000; ja 0x12ef20; pop ebx; ret; 
0x0012f08b: cmp eax, 0xfffff000; ja 0x12f098; ret; 
0x0012f194: cmp eax, 0xfffff000; ja 0x12f1a0; pop ebx; ret; 
0x0012f483: cmp eax, 0xfffff000; ja 0x12f4a8; pop ebx; pop esi; pop edi; ret; 
0x0012f73e: cmp eax, 0xfffff000; ja 0x12f750; pop ebx; pop esi; pop edi; ret; 
0x0012fa1e: cmp eax, 0xfffff000; ja 0x12fa30; pop ebx; pop esi; pop edi; ret; 
0x0012fb6f: cmp eax, 0xfffff000; ja 0x12fb80; pop ebx; pop esi; pop edi; ret; 
0x00130294: cmp eax, 0xfffff000; ja 0x1302a0; pop ebx; ret; 
0x00130554: cmp eax, 0xfffff000; ja 0x130560; pop ebx; ret; 
0x001904da: cmp eax, 0xfffff000; ja 0x1904e8; pop ebx; pop esi; ret; 
0x0003c9a5: cmp eax, 0xfffff000; ja 0x3c9b0; pop ebx; ret; 
0x0003ca03: cmp eax, 0xfffff000; ja 0x3ca50; add esp, 0x14; pop ebx; pop esi; ret; 
0x000612d4: cmp eax, 0xfffff000; ja 0x612e0; pop ebx; ret; 
0x0006132e: cmp eax, 0xfffff000; ja 0x61340; pop ebx; pop esi; pop edi; ret; 
0x0008f82d: cmp eax, 0xfffff000; ja 0x8f840; pop ebx; pop esi; pop edi; ret; 
0x00098174: cmp eax, 0xfffff000; ja 0x98180; pop ebx; pop esi; pop edi; ret; 
0x0009f190: cmp eax, 0xfffff000; ja 0x9f1a0; pop ebx; ret; 
0x0009f819: cmp eax, 0xfffff000; ja 0x9f828; pop ebx; pop esi; ret; 
0x0009fe0a: cmp eax, 0xfffff000; ja 0x9fe18; mov eax, ecx; pop ebx; ret; 
0x000a01e8: cmp eax, 0xfffff000; ja 0xa01f8; pop ebx; ret; 
0x000dbe12: cmp eax, 0xfffff000; ja 0xdbe20; pop ebx; ret; 
0x000e8c03: cmp eax, 0xfffff000; ja 0xe8c10; pop ebx; pop esi; ret; 
0x000fb5f9: cmp eax, 0xfffff000; ja 0xfb640; add esp, 0x18; pop ebx; ret; 
0x00099b75: cmp eax, 0xfffff000; mov eax, 0; cmova eax, edx; ret; 
0x0011fe3e: cmp eax, 0xfffff000; mov eax, 0; pop edi; cmova eax, edx; ret; 
0x0003c968: cmp eax, 0xfffff001; jae 0x24f50; ret; 
0x00040277: cmp eax, 0xfffff001; jae 0x24f50; xor eax, eax; ret; 
0x00090c38: cmp eax, 1; ja 0x90c50; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00099b18: cmp eax, 1; ja 0x99b30; mov edx, dword ptr [esp + 4]; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x0017b8e2: cmp eax, 1; je 0x17b910; cmp eax, 2; sete al; movzx eax, al; ret; 
0x0017b9d2: cmp eax, 1; je 0x17ba00; cmp eax, 2; sete al; movzx eax, al; ret; 
0x0017bff2: cmp eax, 1; je 0x17c020; cmp eax, 2; sete al; movzx eax, al; ret; 
0x0010b968: cmp eax, 1; jg 0x10b9a8; call dword ptr [esi]; 
0x0010bcc3: cmp eax, 1; jg 0x10bce8; add esp, 4; pop ebx; pop esi; ret; 
0x0012ba38: cmp eax, 1; jg 0x12ba48; add esp, 8; pop ebx; ret; 
0x001515d2: cmp eax, 1; jg 0x1515f0; add esp, 4; pop ebx; pop esi; ret; 
0x00156bb2: cmp eax, 1; jg 0x156c10; pop ebx; pop esi; pop edi; ret; 
0x001576de: cmp eax, 1; jg 0x157708; add esp, 8; pop ebx; ret; 
0x00162dc2: cmp eax, 1; jg 0x162e20; add esp, 4; pop ebx; pop esi; ret; 
0x00182551: cmp eax, 1; jg 0x182578; add esp, 8; pop ebx; ret; 
0x001826d1: cmp eax, 1; jg 0x1826f8; add esp, 8; pop ebx; ret; 
0x00187444: cmp eax, 1; jg 0x187468; add esp, 4; pop ebx; pop esi; ret; 
0x00188842: cmp eax, 1; jg 0x188868; add esp, 4; pop ebx; pop esi; ret; 
0x001888e2: cmp eax, 1; jg 0x188908; add esp, 4; pop ebx; pop esi; ret; 
0x00041994: cmp eax, 1; jg 0x419b8; add esp, 4; pop ebx; pop esi; ret; 
0x0008cde0: cmp eax, 1; jg 0x8cdf0; ret; 
0x0008f55c: cmp eax, 1; jg 0x8f598; pop ebx; pop esi; pop edi; ret; 
0x000dd017: cmp eax, 1; jg 0xdd040; add esp, 8; pop ebx; ret; 
0x000e95ce: cmp eax, 1; jg 0xe95f0; add esp, 4; pop ebx; pop esi; ret; 
0x000e9ec4: cmp eax, 1; jg 0xe9ee0; pop ebx; pop esi; pop edi; ret; 
0x00174a03: cmp eax, 1; mov eax, 1; sbb eax, -1; add esp, 0xc; ret; 
0x000907ec: cmp eax, 1; mov edx, 0x16; mov eax, 0x5f; cmovne eax, edx; ret; 
0x00060b89: cmp eax, 1; sbb eax, eax; add esp, 0x1c; ret; 
0x0009ceb7: cmp eax, 1; sbb eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0017d046: cmp eax, 1; sete al; add esp, 0xc; movzx eax, al; ret; 
0x00099ae8: cmp eax, 2; ja 0x99b00; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00129f83: cmp eax, 2; jbe 0x129fb0; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x00157211: cmp eax, 2; jne 0x157220; mov eax, ecx; ret; 
0x0017b8e7: cmp eax, 2; sete al; movzx eax, al; ret; 
0x0002fd7b: cmp eax, 3; je 0x2fd88; add esp, 8; pop ebx; ret; 
0x0009191b: cmp eax, 3; je 0x91928; pop ebx; pop esi; pop edi; ret; 
0x0009197d: cmp eax, 3; je 0x91990; pop ebx; pop esi; pop edi; ret; 
0x000ffd4c: cmp eax, 3; je 0xffd70; add esp, 8; xor eax, eax; pop ebx; ret; 
0x00117a53: cmp eax, 4; ja 0x117a68; mov edx, dword ptr [esp + 8]; mov word ptr [edx + 0x3e], ax; xor eax, eax; ret; 
0x001194f3: cmp eax, 4; ja 0x119508; mov edx, dword ptr [esp + 8]; mov word ptr [edx + 0x42], ax; xor eax, eax; ret; 
0x0011af93: cmp eax, 4; ja 0x11afa8; mov edx, dword ptr [esp + 8]; mov word ptr [edx + 0x42], ax; xor eax, eax; ret; 
0x0009c1cf: cmp eax, 4; sete al; movzx eax, al; sub eax, 2; add esp, 0xc; ret; 
0x0008e859: cmp eax, 8; je 0x8e863; add esp, 8; pop ebx; ret; 
0x0008f1c1: cmp eax, 8; je 0x8f1cb; add esp, 8; pop ebx; ret; 
0x0009a5f4: cmp eax, 8; je 0x9a5fa; ret; 
0x0012ed46: cmp eax, 8; setne al; add esp, 0x1c; movzx eax, al; neg eax; ret; 
0x0012ed87: cmp eax, 8; setne al; add esp, 0x2c; movzx eax, al; neg eax; ret; 
0x00197c74: cmp eax, dword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00138212: cmp eax, dword ptr [eax]; add byte ptr [ebx + 0x56500cc4], al; push 0x2000006; call dword ptr [ebx + 0x14]; 
0x00079484: cmp eax, dword ptr [ebx + 0x575304ec]; push eax; call dword ptr [ebp + 0x1c]; 
0x00027634: cmp eax, dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0012fd28: cmp eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012fce9: cmp eax, dword ptr [ecx]; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x001a7f71: cmp eax, dword ptr [edx]; add byte ptr [eax], al; pop ebx; ret; 
0x001ac174: cmp eax, dword ptr [esi - 0x10]; jne 0x1ac1c0; pop edi; pop esi; pop ebx; ret; 
0x001238f8: cmp eax, ebx; jb 0x123900; xor eax, eax; pop ebx; ret; 
0x00172bd0: cmp eax, ebx; jne 0x172bc0; pop ebx; ret; 
0x000aba5b: cmp eax, ebx; jne 0xaba50; mov eax, edx; pop ebx; ret; 
0x000aba9f: cmp eax, ebx; jne 0xaba90; mov eax, edx; pop ebx; pop esi; ret; 
0x0008d36e: cmp eax, ecx; cmovb eax, ecx; sub eax, dword ptr [edx + 0xc]; ret; 
0x00081cb1: cmp eax, ecx; cmovb eax, ecx; sub eax, dword ptr [edx + 8]; sar eax, 2; ret; 
0x00080a45: cmp eax, ecx; cmovg eax, ecx; test edx, edx; jne 0x80a40; ret; 
0x0008abc5: cmp eax, ecx; cmovg eax, ecx; test edx, edx; jne 0x8abc0; ret; 
0x000c1090: cmp eax, ecx; ja 0xc10a0; sub edi, 0x10; add eax, edi; pop edi; ret; 
0x000abbff: cmp eax, ecx; jne 0xabbf0; mov eax, edx; pop ebx; ret; 
0x000c224a: cmp eax, ecx; jne 0xc2457; pop esi; xor eax, eax; pop ebx; ret; 
0x000c233d: cmp eax, ecx; jne 0xc246b; pop esi; xor eax, eax; pop ebx; ret; 
0x000c2469: cmp eax, ecx; sbb eax, eax; sbb eax, -1; pop esi; pop ebx; ret; 
0x0003be3a: cmp eax, ecx; sbb edx, ebx; pop ebx; mov eax, edx; shr eax, 0x1f; ret; 
0x000a8088: cmp eax, edi; jae 0xa80a1; pop ebx; pop esi; pop edi; ret; 
0x0013be13: cmp eax, edx; jae 0x13be20; cmp dword ptr [eax + 4], ecx; jne 0x13be10; mov eax, dword ptr [eax + 0x18]; ret; 
0x001792dc: cmp eax, edx; je 0x1792e8; pop ebx; pop esi; pop edi; ret; 
0x0008c948: cmp eax, edx; jne 0x8c940; mov eax, dword ptr [eax]; mov dword ptr [ecx], eax; ret; 
0x00054fbc: cmp ebp, dword ptr [ecx]; ret 0x6b89; 
0x0009fdf5: cmp ebp, dword ptr [edi]; jne 0x9fe40; add ebx, 1; mov eax, 0x116; call dword ptr gs:[0x10]; 
0x00145dea: cmp ebp, dword ptr [esi]; je 0x145df8; add esp, 8; pop ebx; ret; 
0x0013f656: cmp ebp, esi; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0010e36b: cmp ebx, 0x48; stc; call dword ptr [eax - 0x18]; 
0x0014598a: cmp ebx, 0x950f0308; ret; 
0x000fd385: cmp ebx, 0xa; je 0xfd3b3; add esp, 4; pop ebx; pop esi; ret; 
0x00124dc1: cmp ebx, dword ptr [eax + 0x5c8bfff6]; and al, 0x20; mov edx, eax; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x0012f2b4: cmp ebx, dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x001531a6: cmp ebx, esi; jmp dword ptr [esi - 0x70]; 
0x000decc6: cmp ecx, 0x28f5c28; jbe 0xdecd8; mov eax, edx; ret; 
0x00070aa8: cmp ecx, 0x5a; jbe 0x71983; mov ecx, dword ptr [esp + 0x4c]; mov dword ptr [esp + 4], ecx; jmp eax; 
0x001423e0: cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x001420ce: cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x0012d59c: cmp ecx, 1; jg 0x12d5d0; add esp, 8; pop ebx; ret; 
0x0003ed50: cmp ecx, 1; jg 0x3edc9; sub esp, 8; push 0; push edx; call eax; 
0x0015c7cc: cmp ecx, 2; je 0x15c7e0; mov eax, edx; pop ebx; pop esi; ret; 
0x00170b81: cmp ecx, 3; jbe 0x170b90; mov eax, 2; pop ebx; pop esi; ret; 
0x000d47d7: cmp ecx, 3; je 0xd47e8; mov eax, esi; pop ebx; pop esi; ret; 
0x00121cc7: cmp ecx, 9; je 0x121d00; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00121d77: cmp ecx, 9; je 0x121db0; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0008cd24: cmp ecx, dword ptr [ecx + 0x1a7cb3]; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00169eda: cmp ecx, dword ptr [edi + 0xd]; add byte ptr [ebx - 0x7f72eb14], al; mov dword ptr [edx - 7], esp; call dword ptr [eax + 0x6a]; 
0x001270f8: cmp ecx, dword ptr [edi - 7]; call dword ptr [eax + 0x55]; 
0x000e7b39: cmp ecx, dword ptr [edi]; xchg dword ptr [eax - 0x73000000], ebx; dec esp; and al, 0xc; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x00098ce8: cmp ecx, dword ptr [edi]; xchg dword ptr [ecx], edi; add dword ptr [eax], eax; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x00098f6b: cmp ecx, dword ptr [edi]; xchg esi, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x5e9ae3a9], cl; push 0x39000000; ret 0x6974; 
0x00098355: cmp ecx, dword ptr [edi]; xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x001ac2a5: cmp ecx, dword ptr [edx - 4]; jne 0x1ac2b0; pop ebx; ret; 
0x001a7f67: cmp ecx, dword ptr [edx - 4]; mov eax, 0; jne 0x1a81b0; pop ebx; ret; 
0x000baae1: cmp ecx, dword ptr [edx]; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x001a7e82: cmp ecx, dword ptr [edx]; je 0x1a7ea0; mov eax, 1; jg 0x1a7e90; neg eax; ret; 
0x000c07bb: cmp ecx, eax; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00092e6f: cmp ecx, eax; cmovb ecx, eax; mov eax, 0x182; xor edx, edx; call dword ptr gs:[0x10]; 
0x000a8bda: cmp ecx, eax; jne 0xa8bd0; mov eax, edx; pop ebx; ret; 
0x0004308f: cmp ecx, eax; sbb ebx, edx; pop ebx; setb al; ret; 
0x00141c86: cmp ecx, eax; sbb edx, edx; mov eax, edx; pop ebx; pop esi; ret; 
0x001a67f0: cmp ecx, ebx; mov eax, 0; jne 0x1a6f70; pop ebx; ret; 
0x001a9622: cmp ecx, ebx; mov eax, 0; jne 0x1a9850; pop ebx; ret; 
0x001a6f84: cmp ecx, ebx; pop ebx; mov eax, 1; ja 0x1a6f90; neg eax; ret; 
0x000c66ae: cmp ecx, ebx; pop ebx; pop esi; cmovg eax, edx; pop edi; ret; 
0x000c6690: cmp ecx, edi; pop edi; cmovg eax, edx; ret; 
0x000815f8: cmp ecx, edx; jb 0x815f0; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0008bda8: cmp ecx, edx; jb 0x8bda0; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001251fa: cmp ecx, edx; jne 0x1251f0; mov eax, dword ptr [eax + 4]; pop ebx; ret; 
0x000c4d6e: cmp ecx, edx; jne 0xc4d8a; ret; 
0x00134b1f: cmp ecx, edx; sbb eax, eax; ret; 
0x0015bf0d: cmp ecx, edx; setne al; ret; 
0x00127057: cmp edi, 0x4d; stc; call dword ptr [eax + 0x55]; 
0x000fec82: cmp edi, 0x8bffffff; push esi; sbb al, 0x83; rol byte ptr [ecx], 0x39; ret 0xef7f; 
0x0012f0e5: cmp edi, 1; je 0x12f120; lea ecx, [esp + 0xc]; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x001304a5: cmp edi, 1; je 0x1304e0; lea ecx, [esp + 0xc]; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x00094243: cmp edi, ecx; mov ebx, dword ptr [eax + 0x68]; cmovbe ecx, edi; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x001962fe: cmp edi, edi; inc dword ptr [ecx + 0x452afc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00196265: cmp edi, edi; inc dword ptr [ecx + 0x45348c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00196115: cmp edi, edi; inc dword ptr [ecx + 0x45498c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019605e: cmp edi, edi; inc dword ptr [ecx + 0x4554fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00090a62: cmp edi, edx; jae 0x90a30; mov ecx, dword ptr [ebx + 0xc]; mov eax, 0xf0; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x000801e9: cmp edi, edx; jmp dword ptr [esi - 0x70]; 
0x0019ad18: cmp edi, esi; ret 3; 
0x001371c9: cmp edx, -1; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x000e8a43: cmp edx, 0x10d; cmovae eax, esi; mov edi, eax; mov eax, 0xdc; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000fb296: cmp edx, 0x1badface; setne al; ret; 
0x000fb26d: cmp edx, 0x1cd1; setne al; ret; 
0x0012f208: cmp edx, 0x26; je 0x12f263; pop ebx; pop esi; ret; 
0x000fb208: cmp edx, 0x27e0eb; je 0xfb13f; cmp edx, 0xbd00bd0; mov edx, 0x20; cmovne eax, edx; ret; 
0x000908fd: cmp edx, 0x3fff; ja 0x90910; ret; 
0x000a94f5: cmp edx, 0x40; ja 0xa9501; mov eax, dword ptr [ecx + edx*4 - 0xe34]; ret; 
0x000a9525: cmp edx, 0x40; ja 0xa9531; mov eax, dword ptr [ecx + edx*4 - 0xd14]; ret; 
0x000fb1d3: cmp edx, 0x52654973; mov edx, 0x20; cmovne eax, edx; ret; 
0x00070b55: cmp edx, 0x5a; jbe 0x718c0; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x48], 1; jmp eax; 
0x000fb137: cmp edx, 0x9123683e; jne 0xfb1a0; ret; 
0x000fb2d2: cmp edx, 0xadf5; setne al; ret; 
0x000fb214: cmp edx, 0xbd00bd0; mov edx, 0x20; cmovne eax, edx; ret; 
0x000a84ce: cmp edx, 1; ja 0xa84b0; pop ebx; pop esi; pop edi; ret; 
0x00098070: cmp edx, 1; je 0x98080; mov eax, 0x16; ret; 
0x0015658f: cmp edx, 1; jg 0x156598; ret; 
0x001630b0: cmp edx, 1; jg 0x1630d8; add esp, 0x18; pop ebx; ret; 
0x00168992: cmp edx, 1; jg 0x1689b8; add esp, 0x18; pop ebx; ret; 
0x001825cf: cmp edx, 1; jg 0x1825f8; add esp, 0x18; pop ebx; ret; 
0x0018265b: cmp edx, 1; jg 0x182680; add esp, 0x18; pop ebx; ret; 
0x00182881: cmp edx, 1; jg 0x1828a8; add esp, 0x14; pop ebx; pop esi; ret; 
0x00182933: cmp edx, 1; jg 0x182958; add esp, 0x18; pop ebx; ret; 
0x0003f257: cmp edx, 1; jg 0x3f3c8; sub esp, 8; push ecx; push dword ptr [esp + 0x4c]; call eax; 
0x0003f32b: cmp edx, 1; jg 0x3f3f0; call eax; 
0x00040181: cmp edx, 1; jg 0x401a8; add esp, 0x14; pop ebx; pop esi; ret; 
0x00041ac3: cmp edx, 1; jg 0x41ae8; add esp, 0x14; pop ebx; pop esi; ret; 
0x000611b2: cmp edx, 1; jg 0x611e8; add esp, 0x18; pop ebx; ret; 
0x00094332: cmp edx, 1; jg 0x94358; add esp, 0x18; pop ebx; ret; 
0x000e90ed: cmp edx, 1; jg 0xe9110; add esp, 0x14; pop ebx; pop esi; ret; 
0x000980a0: cmp edx, 1; jne 0x980c0; or dword ptr [eax], 0x40000000; xor eax, eax; ret; 
0x0010ce5d: cmp edx, 2; ja 0x10ce6e; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x000907c1: cmp edx, 2; jbe 0x907d0; ret; 
0x000919f6: cmp edx, 2; je 0x91a00; pop ebx; pop esi; pop edi; ret; 
0x0007f371: cmp edx, dword ptr [eax + 4]; jae 0x7f380; lea ecx, [edx + 4]; mov dword ptr [eax], ecx; mov eax, dword ptr [edx]; ret; 
0x0007f52f: cmp edx, dword ptr [eax + 4]; jae 0x7f540; lea ecx, [edx + 4]; mov dword ptr [eax], ecx; mov eax, dword ptr [edx]; ret; 
0x0008765b: cmp edx, dword ptr [eax + 8]; jae 0x87670; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x00087699: cmp edx, dword ptr [eax + 8]; jae 0x876b0; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x000fba58: cmp edx, dword ptr [ebx + 4]; je 0xfba8e; pop ebx; pop esi; pop edi; ret; 
0x000260c6: cmp edx, dword ptr [esi]; add byte ptr [0x218d4b], al; mov eax, dword ptr [eax + 0x10bc]; ret; 
0x000260a6: cmp edx, dword ptr [esi]; add byte ptr [0x218d6b], al; mov eax, dword ptr [eax + 0x10b8]; ret; 
0x0008e5f4: cmp edx, dword ptr [esp + 4]; setae al; ret; 
0x000e8bf2: cmp edx, eax; cmova edx, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x0004303d: cmp edx, eax; setb al; ret; 
0x0004301e: cmp edx, eax; setle al; ret; 
0x00090b12: cmp edx, ebp; jae 0x90b43; mov ecx, dword ptr [edi + 0xc]; mov eax, 0xf0; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x000b9f84: cmp edx, ebx; jb 0xb9340; call 0x189c31; add ecx, 0x112daf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9397: cmp edx, ebx; jb 0xb9340; call 0x189c31; add ecx, 0x1139a0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b937c: cmp edx, ebx; jb 0xb9340; call 0x189c31; add ecx, 0x1139bb; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b935a: cmp edx, ebx; jb 0xb9340; call 0x189c31; add ecx, 0x1139dd; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb684: cmp edx, ebx; jb 0xba980; call 0x189c31; add ecx, 0x11180f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba9ee: cmp edx, ebx; jb 0xba980; call 0x189c31; add ecx, 0x1124a9; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba9d7: cmp edx, ebx; jb 0xba980; call 0x189c31; add ecx, 0x1124c0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba9bc: cmp edx, ebx; jb 0xba980; call 0x189c31; add ecx, 0x1124db; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba99a: cmp edx, ebx; jb 0xba980; call 0x189c31; add ecx, 0x1124fd; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c0f24: cmp edx, ebx; jb 0xc0920; call 0x189c31; add ecx, 0x10c143; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c098e: cmp edx, ebx; jb 0xc0920; call 0x189c31; add ecx, 0x10c6dd; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c0977: cmp edx, ebx; jb 0xc0920; call 0x189c31; add ecx, 0x10c6f4; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c095c: cmp edx, ebx; jb 0xc0920; call 0x189c31; add ecx, 0x10c70f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c093a: cmp edx, ebx; jb 0xc0920; call 0x189c31; add ecx, 0x10c731; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000abb27: cmp edx, ebx; je 0xabb20; pop ebx; ret; 
0x0008d32a: cmp edx, ecx; jae 0x8d350; movzx eax, byte ptr [edx]; pop ebx; pop esi; ret; 
0x00134b1b: cmp edx, ecx; jb 0x134b23; cmp ecx, edx; sbb eax, eax; ret; 
0x0015bf07: cmp edx, ecx; jb 0x15bf12; xor eax, eax; cmp ecx, edx; setne al; ret; 
0x001870d7: cmp edx, ecx; jb 0x1870df; cmp ecx, edx; sbb eax, eax; ret; 
0x000c4d86: cmp edx, ecx; je 0xc4d8e; test edx, edx; jne 0xc4d80; ret; 
0x001563b0: cmp edx, ecx; jne 0x1563a0; add esp, 8; pop ebx; ret; 
0x00156b32: cmp edx, ecx; jne 0x156b00; pop ebx; pop esi; ret; 
0x00162796: cmp edx, esi; call dword ptr [eax - 0x73]; 
0x000abb5b: cmp edx, esi; je 0xabb50; pop ebx; pop esi; ret; 
0x0012f472: cmp esi, -1; je 0x12f490; mov eax, 0x17c; call dword ptr gs:[0x10]; 
0x0007ccea: cmp esi, -1; jmp dword ptr [esi - 0x70]; 
0x001272af: cmp esi, 0x52; stc; call dword ptr [edx + 0x52]; 
0x000dfa70: cmp esi, 0x840f0400; mov edi, 0xf600001d; ret; 
0x001238db: cmp esi, dword ptr [ebp - 0x47acffef]; sub eax, 0x8b000000; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x00178731: cmp esi, dword ptr [ebx - 9]; inc dword ptr [ebx + 0x548d08ec]; and al, 0x20; push edx; push eax; call edi; 
0x0010bde8: cmp esi, ecx; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x00090ed8: cmp esi, edx; jae 0x90f18; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x000698eb: cmp esi, esi; inc eax; jmp dword ptr [eax]; 
0x0002d752: cmp esi, esi; ret 0xf08; 
0x0012d55f: cmp esp, -0x5c; stc; call dword ptr [eax - 0x18]; 
0x000687f3: cmp esp, 0x32; stc; call dword ptr [eax - 0x18]; 
0x00164205: cmp esp, 0x55; bnd call dword ptr [eax - 0x18]; 
0x0005df69: cmp esp, 0x7a; stc; call dword ptr [eax - 0x18]; 
0x000d773b: cmp esp, 0xa40fffff; ret 0xc102; 
0x000c1c94: cmp esp, dword ptr [esi + 0xf]; xlatb; ret 0xc085; 
0x0018058d: cmp esp, dword ptr [esi - 7]; call dword ptr [eax - 0x18]; 
0x001208db: cmp esp, ebp; adc dword ptr [eax], eax; push ebx; mov eax, 0x28; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0014ef8d: cmp word ptr [edx + 2], bx; je 0x14ef98; pop ebx; ret; 
0x0013473b: cmpsb byte ptr [esi], byte ptr es:[edi]; adc byte ptr [eax], al; mov eax, dword ptr [eax + 0x108]; mov eax, dword ptr [eax + 0x20]; ret; 
0x0002f546: cmpsb byte ptr [esi], byte ptr es:[edi]; adc eax, 0xf8cb0500; and byte ptr [eax], al; mov eax, dword ptr [eax + 0x10e0]; ret; 
0x0013f5f6: cmpsb byte ptr [esi], byte ptr es:[edi]; add al, 0; add eax, 0xff81b; mov eax, dword ptr [eax + 0xc4]; add eax, dword ptr gs:[0]; ret; 
0x001a9cc6: cmpsb byte ptr [esi], byte ptr es:[edi]; add al, byte ptr [eax]; add byte ptr [eax - 0x17af0f0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x000c262f: cmpsb byte ptr [esi], byte ptr es:[edi]; add byte ptr [eax], al; add byte ptr [edx - 9], al; ret 3; 
0x0016f3d0: cmpsb byte ptr [esi], byte ptr es:[edi]; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x000e02ef: cmpsb byte ptr [esi], byte ptr es:[edi]; idiv bh; dec dword ptr [edi]; mov esi, 0x246c8903; add al, 0x83; ret; 
0x0017b5fe: cmpsb byte ptr [esi], byte ptr es:[edi]; jnp 0x17b5eb; dec dword ptr [ecx - 0x763e7606]; ret; 
0x00192b56: cmpsb byte ptr [esi], byte ptr es:[edi]; mov cl, 0xfa; jmp dword ptr [esi - 0x70]; 
0x00124a70: cmpsb byte ptr [esi], byte ptr es:[edi]; mov dword ptr [0x89530011], eax; ret; 
0x0018c504: cmpsb byte ptr [esi], byte ptr es:[edi]; out dx, eax; jmp dword ptr [esi - 0x70]; 
0x00130ed4: cmpsb byte ptr [esi], byte ptr es:[edi]; stc; call dword ptr [eax + 0x55]; 
0x001350b8: cmpsb byte ptr [esi], byte ptr es:[edi]; stc; call dword ptr [eax - 0x18]; 
0x00163633: cmpsb byte ptr [esi], byte ptr es:[edi]; std; call dword ptr [eax + 0x50]; 
0x00151563: cmpsd dword ptr [esi], dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [ebp - 0x6a3827d], cl; call dword ptr [eax - 0x73]; 
0x00034168: cmpsd dword ptr [esi], dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [ebp - 0x6a9f27d], cl; call dword ptr [esi - 1]; 
0x000965e3: cmpsd dword ptr [esi], dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [ebp - 0x6bfa27a], cl; call dword ptr [eax - 0x73]; 
0x000957c9: cmpsd dword ptr [esi], dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [ebp - 0x6bfaa7a], cl; call dword ptr [eax - 0x73]; 
0x00177dd5: cmpsd dword ptr [esi], dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [ebx - 0x137cc3ba], cl; or al, 0x55; call dword ptr [eax + 0x10]; 
0x000ecfad: cmpsd dword ptr [esi], dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x448b; 
0x001ab9f5: cmpsd dword ptr [esi], dword ptr es:[edi]; add byte ptr [eax], al; add dh, dh; ret 0xf20; 
0x00179167: cmpsd dword ptr [esi], dword ptr es:[edi]; add byte ptr [eax], al; mov eax, dword ptr gs:[0]; mov dword ptr [eax + edx], ecx; ret; 
0x001531a5: cmpsd dword ptr [esi], dword ptr es:[edi]; cmp ebx, esi; jmp dword ptr [esi - 0x70]; 
0x00184d65: cmpsd dword ptr [esi], dword ptr es:[edi]; fcos; jmp dword ptr [esi - 0x70]; 
0x0013e185: cmpsd dword ptr [esi], dword ptr es:[edi]; jg 0x13e17a; jmp dword ptr [esi - 0x70]; 
0x00178a93: cmpsd dword ptr [esi], dword ptr es:[edi]; ljmp 0xc483:0x10c483ff; add al, 0x5b; pop esi; ret; 
0x0005b385: cmpsd dword ptr [esi], dword ptr es:[edi]; lodsd eax, dword ptr [esi]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00117075: cmpsd dword ptr [esi], dword ptr es:[edi]; mov ebp, 0xc483fffa; adc byte ptr [ecx], bh; ret; 
0x00138e99: cmpsd dword ptr [esi], dword ptr es:[edi]; stc; call dword ptr [eax - 0x18]; 
0x00138f25: cmpsd dword ptr [esi], dword ptr es:[edi]; stc; call dword ptr [eax - 0x18]; inc edx; mov cl, 0xef; jmp dword ptr [esi - 0x70]; 
0x001350a8: cmpsd dword ptr [esi], dword ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x00088a26: cmpsd dword ptr [esi], dword ptr es:[edi]; stc; jmp dword ptr [ebp - 0x75]; 
0x000f7065: cmpsd dword ptr [esi], dword ptr es:[edi]; xor bh, bl; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; xor eax, eax; ret; 
0x001350a7: cmpsd dword ptr fs:[esi], dword ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x0009b94d: cmpxchg dword ptr [ebx], edx; jne 0x9b960; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0009a8c6: cmpxchg dword ptr [ebx], esi; jne 0x9a8d0; xor eax, eax; pop ebx; pop esi; ret; 
0x0008ec5f: cmpxchg dword ptr [ecx], edx; setne al; movzx eax, al; pop ebx; ret; 
0x0009b990: cmpxchg dword ptr [edx], ecx; jne 0x9b986; xor eax, eax; pop ebx; ret; 
0x0009b9de: cmpxchg dword ptr [edx], ecx; jne 0x9b9f0; xor eax, eax; pop ebx; ret; 
0x0009a5bc: cmpxchg dword ptr [edx], ecx; mov eax, 0x10; cmove eax, ecx; ret; 
0x00094bcd: cmpxchg dword ptr [esp + 4], edx; ret; 
0x000b3564: cwde; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x0006e263: cwde; add byte ptr [eax], al; add byte ptr [ecx + 0x3920246c], cl; ret; 
0x0007c09f: cwde; add byte ptr [eax], al; add byte ptr [ecx + 0x5b082454], cl; jmp eax; 
0x000cea49: cwde; add byte ptr [eax], al; add byte ptr [ecx - 0x7ecbdbac], cl; ret 0; 
0x000c7fa9: cwde; add byte ptr [eax], al; add byte ptr [ecx - 0x7ed3dbac], cl; ret 0; 
0x0007b485: cwde; add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0xd008; 
0x001ac564: cwde; add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0x348d; 
0x0002555b: cwde; and dword ptr [eax], eax; mov eax, dword ptr [eax + 0xa4]; add eax, dword ptr gs:[0]; ret; 
0x00170ef9: cwde; and eax, dword ptr [eax]; add byte ptr [ebx + 0x6a08ec], al; push ebx; call dword ptr [eax + 0x14]; 
0x00073722: cwde; call 0x3f072ff3; jmp eax; 
0x00032b50: cwde; call dword ptr [ecx]; 
0x000a7145: cwde; cdq; stc; call dword ptr [eax + 0x68]; 
0x001923ca: cwde; clc; jmp dword ptr [esi - 0x70]; 
0x00155968: cwde; fcomp dword ptr [ebp - 7]; call dword ptr [ebx - 0x73]; 
0x00124dc2: cwde; idiv bh; mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00059c64: cwde; inc eax; push cs; add byte ptr [ebx - 0x364743], cl; dec dword ptr [ebp - 0x6877779]; call dword ptr [eax - 0x73]; 
0x0019769a: cwde; inc ecx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001628d4: cwde; inc esi; add al, byte ptr [eax]; mov dword ptr [esp], esi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x000ed46f: cwde; int1; clc; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x0005df0d: cwde; jnp 0x5df09; call dword ptr [eax - 0x73]; 
0x0005df32: cwde; jnp 0x5df2e; call dword ptr [eax - 0x73]; 
0x0005df57: cwde; jnp 0x5df53; call dword ptr [eax - 0x73]; 
0x0005df81: cwde; jnp 0x5df7d; call dword ptr [eax - 0x73]; 
0x0005dfa6: cwde; jnp 0x5dfa2; call dword ptr [eax - 0x73]; 
0x0005dfcb: cwde; jnp 0x5dfc7; call dword ptr [eax - 0x73]; 
0x0005e03f: cwde; jnp 0x5e03b; call dword ptr [eax - 0x73]; 
0x0005e064: cwde; jnp 0x5e060; call dword ptr [eax - 0x73]; 
0x001516f6: cwde; mov al, 0xf9; call dword ptr [eax - 0x73]; 
0x001641ff: cwde; mov byte ptr [0x8d500000], al; cmp esp, 0x55; bnd call dword ptr [eax - 0x18]; 
0x0010e2e9: cwde; mov edi, 0x850f001f; cmp eax, 0xf7fffffd; ret 0x67; 
0x000bb595: cwde; out 0xc, al; add byte ptr [ecx + 0x111997c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000c4976: cwde; pop ebx; pop esi; ret; 
0x0004d5d4: cwde; push -2; dec dword ptr [ebp - 0x687a779]; call dword ptr [eax - 0x73]; 
0x0019611a: cwde; push esp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013a1d4: cwde; ret; 
0x000a56b7: cwde; stc; call dword ptr [eax + 0x68]; 
0x000a62d2: cwde; stc; call dword ptr [eax - 0x18]; 
0x000a0c9e: cwde; stc; call dword ptr [eax - 0x73]; 
0x000b9e95: cwde; std; or al, 0; add ecx, 0x112f37; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x001992eb: daa; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0002d5f6: daa; add al, byte ptr [eax]; add byte ptr [ebx - 0x72bbdb84], cl; xchg dword ptr [edx + ebp*2 - 7], ebp; call dword ptr [eax - 0x73]; 
0x0011f5f1: daa; add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x000da875: daa; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00121f70: daa; add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; call dword ptr gs:[0x10]; 
0x0011f79e: daa; add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0011f8a4: daa; add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; mov edx, edi; call dword ptr gs:[0x10]; 
0x000eb5b1: daa; add eax, 0x244c8b00; or byte ptr [ebp - 0x6609f7f], cl; call dword ptr [eax - 0x73]; 
0x000b7925: daa; add eax, dword ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x0012ee01: daa; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00131291: daa; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x000e9f18: daa; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x00160a52: daa; in al, dx; jmp dword ptr [ebp - 0x75]; 
0x000945c6: daa; inc eax; stc; call dword ptr [eax - 0x18]; 
0x000d468f: daa; lea ebx, [eax + 4]; mov eax, ebx; pop ebx; ret; 
0x000c2bbe: daa; mov eax, dword ptr [esp + 0x10]; pop ebx; pop esi; pop edi; ret; 
0x000c2f64: daa; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x000fb6d8: daa; mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb4; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000fb898: daa; mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb5; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000a35d0: daa; or al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; sub dword ptr [eax], -0x6f; stc; call dword ptr [eax - 0x18]; 
0x00114173: daa; pop ebx; mov eax, ecx; pop esi; pop edi; ret; 
0x0016da02: daa; ret 1; 
0x001788f3: daa; stc; call dword ptr [edi + 0x52]; 
0x000b9e80: das; adc dword ptr [eax], eax; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00198c99: das; add al, 0; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x000bafed: das; add eax, 0x5e5f0000; pop ebx; ret; 
0x0012456e: das; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0012d5a0: das; add esp, 8; pop ebx; ret; 
0x001a3a0d: das; and dword ptr [eax], eax; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000a95f2: das; call 0xc24ea5f7; ret; 
0x000a9632: das; call 0xc24ea637; ret; 
0x00199383: das; daa; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000e7383: das; idiv edi; call dword ptr [eax + 0x55]; 
0x000a1e65: das; inc edx; stc; call dword ptr [eax - 0x18]; 
0x00184204: das; jbe 0x18418c; in al, dx; add al, 0x83; ret; 
0x0005aaaf: das; jbe 0x5aa3d; ret 0x40c7; 
0x0015740f: das; je 0x157476; mov byte ptr [ebx + 0x8f88], 0; mov dword ptr [ebx + 0x8f78], 0; call esi; 
0x0015762f: das; je 0x157696; mov byte ptr [ebx + 0x4e88], 0; mov dword ptr [ebx + 0x4e78], 0; call esi; 
0x000fb268: das; je 0xfb2c2; xor eax, eax; cmp edx, 0x1cd1; setne al; ret; 
0x000535ba: das; jne 0x535b0; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0009fdf6: das; jne 0x9fe40; add ebx, 1; mov eax, 0x116; call dword ptr gs:[0x10]; 
0x00091488: das; mov eax, edi; call dword ptr gs:[0x10]; 
0x0010c440: das; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x0010c390: das; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x0010c508: das; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x0010c1f8: das; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x0006eef6: das; or dword ptr [eax], eax; add byte ptr [ecx], al; ret; 
0x00195883: das; pop ebp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001a6443: das; pop esi; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000770fd: das; ret 0xffff; 
0x00199e83: das; sbb al, 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0007923d: das; scasb al, byte ptr es:[edi]; sti; jmp dword ptr [esi - 0x70]; 
0x00048965: das; stc; call dword ptr [eax + 0x56]; 
0x000577ec: das; stc; call dword ptr [eax + 0x57]; 
0x0003f543: das; stc; call dword ptr [eax - 0x18]; 
0x000c7cbd: das; stc; call dword ptr [eax - 0x18]; stosb byte ptr es:[edi], al; ret; 
0x0003f9dc: das; stc; call dword ptr [ebx + 0x50]; 
0x00048938: das; stc; call dword ptr [ebx + 0x6a]; 
0x000577b8: das; stc; call dword ptr [esi + 0x6a]; 
0x000fb60a: das; stc; dec dword ptr [ecx + 0x1db8c2]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000600e3: das; stc; dec dword ptr [ecx - 0x197cdbc4]; and dh, dh; ret 0xf50; 
0x0004011e: das; stc; dec dword ptr [ecx - 0x76ebdbac]; ret; 
0x0014b3cd: das; sub edi, edi; jmp dword ptr [esi - 0x70]; 
0x001a036b: dec byte ptr [ebp - 0x7af00487]; ret 6; 
0x001a4b1b: dec byte ptr [ebp - 0x7af00587]; ret; 
0x0019eadb: dec byte ptr [ebp - 0x7af00687]; ret 7; 
0x001a221b: dec byte ptr [ebp - 0x7af00687]; ret; 
0x0019f86b: dec byte ptr [ebp - 0x7af00c87]; ret 0x11; 
0x0019e2db: dec byte ptr [ebp - 0x7af00d87]; ret 0xf; 
0x001a131b: dec byte ptr [ebp - 0x7af00d87]; ret; 
0x001932b8: dec byte ptr [ebx + 0x5b082444]; ret; 
0x0010e6af: dec byte ptr [ebx + 0x882494]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00104883: dec byte ptr [ebx - 0x16fbdb84]; sub eax, 0x31fffff7; fucomi st(3); ret 0xc901; 
0x0012ce2e: dec byte ptr [ebx - 0x1d7cfbaa]; add dword ptr [ecx], ecx; ret 0x78b; 
0x0005c520: dec byte ptr [ebx - 0x8f73]; call dword ptr [ebx - 0x75]; 
0x00032908: dec byte ptr [ebx - 0x9b43]; jmp dword ptr [esi - 0x77]; 
0x00068067: dec byte ptr [ecx + 0x72d938f3]; ret 0xf089; 
0x000d6cde: dec byte ptr [ecx - 0x364b6b]; call ebx; 
0x0018c44e: dec byte ptr [ecx - 0x49720010]; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x16; pop ebx; ret; 
0x00069738: dec byte ptr [edi]; test byte ptr [ecx - 0x7cfffffe], ah; ret; 
0x00097f6f: dec dword ptr [0x2890f00]; xor eax, eax; ret; 
0x000c0ea2: dec dword ptr [eax + 0x448b4078]; and al, 0xc; pop ebx; pop esi; ret; 
0x0019640b: dec dword ptr [eax + 0x448bff4a]; and al, 8; pop ebx; ret; 
0x000c0272: dec dword ptr [eax + 0x5bf88938]; pop edi; ret; 
0x001983fb: dec dword ptr [eax - 0x2f7600b6]; pop ebx; ret; 
0x0003a6a4: dec dword ptr [eax - 0x49f0f5fc]; inc esp; xor eax, 0xfc08400; xchg ebp, eax; ret; 
0x0005bf49: dec dword ptr [eax - 0xad73]; dec dword ptr [ecx - 0x8b63]; dec dword ptr [ecx - 0xbf6b]; dec dword ptr [ecx - 0x934b]; jmp dword ptr [ebp - 0x75]; 
0x0009a595: dec dword ptr [eax]; jne 0x9a5a0; xor eax, eax; ret; 
0x0010ab4c: dec dword ptr [ebp + 0x148b0076]; and al, 0xe9; ret; 
0x00141304: dec dword ptr [ebp + 0x1cba0076]; add byte ptr [eax], al; add byte ptr [ecx], bh; ror byte ptr [edi], 1; inc edx; ret 0x578d; 
0x0009399a: dec dword ptr [ebp + 0x2208d]; add byte ptr [eax + 0x9b], bh; call dword ptr gs:[0x10]; 
0x00145640: dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; ret; 
0x000f0bf8: dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; xor eax, eax; ret; 
0x001738d9: dec dword ptr [ebp + 0x34890170]; and al, 0xe8; ret; 
0x00142307: dec dword ptr [ebp + 0x393c2444]; ret; 
0x00145491: dec dword ptr [ebp + 0x48d4004]; ret; 
0x000d61c2: dec dword ptr [ebp + 0x4f0fff46]; ret 0x48d; 
0x00056625: dec dword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret 4; 
0x00038003: dec dword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x000c1982: dec dword ptr [ebp + 0x5f103844]; ret; 
0x0005d4d4: dec dword ptr [ebp + 0x7ff48284]; clc; call dword ptr [eax + 0x56]; 
0x00056e70: dec dword ptr [ebp + 0x7ff48384]; clc; call dword ptr [eax + 0x51]; 
0x00056ef5: dec dword ptr [ebp + 0x7ff48384]; clc; call dword ptr [eax - 1]; 
0x00089ad1: dec dword ptr [ebp + 0xb6]; add al, ch; ret; 
0x0018c451: dec dword ptr [ebp + 0xb6]; add byte ptr [eax + 0x16], bh; pop ebx; ret; 
0x001b12c9: dec dword ptr [ebp + 0xb6]; add byte ptr [ebp + 0x24548bdb], al; and byte ptr [edi], cl; xchg ebp, eax; ret; 
0x00061be1: dec dword ptr [ebp + 0xb6]; add byte ptr [ebp - 0x7cefdb8c], cl; in al, dx; or byte ptr [ebp - 0x6cf986d], cl; call dword ptr [esi + 0x52]; 
0x00057689: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x362743], al; call dword ptr [eax]; 
0x0010bbf1: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x3f7afbc0], cl; je 0x10bae2; call eax; 
0x00124c39: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x0012bf91: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x7972fb14], al; mov ah, 0xa4; stc; call dword ptr [edi - 0x7f]; 
0x0011c149: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x7c72f314], al; inc esi; stc; call dword ptr [eax - 0x18]; 
0x0007b541: dec dword ptr [ebp + 0xb6]; add byte ptr [ecx], bh; ret; 
0x0008df99: dec dword ptr [ebp + 0xb6]; add byte ptr [edx - 0x77], dl; ret; 
0x00134d81: dec dword ptr [ebp - 0x10a31380]; call dword ptr [eax + 0x6a]; 
0x00191405: dec dword ptr [ebp - 0x12ba7380]; call dword ptr [eax + 0x6a]; 
0x0008d62c: dec dword ptr [ebp - 0x137cff8a]; or al, 0x89; ret 0xe989; 
0x0011d2c4: dec dword ptr [ebp - 0x137cff8a]; or al, 0x8d; and dword ptr [esi], 0x46; stc; call dword ptr [eax - 0x18]; 
0x0013b84c: dec dword ptr [ebp - 0x137cff8a]; or byte ptr [ebp - 0xcb43], cl; call dword ptr [edi + 0x6a]; 
0x000f9905: dec dword ptr [ebp - 0x146fc380]; call dword ptr [eax + 0x6a]; 
0x0018f485: dec dword ptr [ebp - 0x147dd380]; call dword ptr [eax + 0x6a]; 
0x000f6005: dec dword ptr [ebp - 0x14a90380]; call dword ptr [eax + 0x6a]; 
0x0018d785: dec dword ptr [ebp - 0x14b70380]; call dword ptr [eax + 0x6a]; 
0x00182a80: dec dword ptr [ebp - 0x14b7b]; call dword ptr [eax + 0x6a]; 
0x000f26c5: dec dword ptr [ebp - 0x14e24380]; call dword ptr [eax + 0x6a]; 
0x000c5d99: dec dword ptr [ebp - 0x1655b380]; push esi; inc ecx; jnp 0xc5da8; cmove eax, edx; ret; 
0x000c4da9: dec dword ptr [ebp - 0x16631380]; push esi; inc ecx; jnp 0xc4db8; cmove eax, edx; ret; 
0x00037fd0: dec dword ptr [ebp - 0x20703379]; call dword ptr [eax + 0x6a]; 
0x00031453: dec dword ptr [ebp - 0x20dc5379]; call dword ptr [eax + 0x6a]; 
0x000d68f8: dec dword ptr [ebp - 0x35e34b]; dec dword ptr [ebx - 0x36576b]; call dword ptr [eax - 0x73]; 
0x00059477: dec dword ptr [ebp - 0x35f343]; dec dword ptr [ecx - 0x361f43]; call ebx; 
0x00058c0d: dec dword ptr [ebp - 0x35f363]; call dword ptr [edx - 0x77]; 
0x000d768d: dec dword ptr [ebp - 0x36177b]; dec dword ptr [edi]; xchg ebp, eax; ret 0x9d8b; 
0x000589ce: dec dword ptr [ebp - 0x36177b]; dec dword ptr [edi]; xchg ebp, eax; ret 0xb60f; 
0x0009b2b7: dec dword ptr [ebp - 0x3b7c00bb]; adc byte ptr [ebx - 0x69f00208], al; ret; 
0x0010b95c: dec dword ptr [ebp - 0x3fceff8a]; xchg dword ptr [edi + 0x3fac], eax; cmp eax, 1; jg 0x10b9a8; call dword ptr [esi]; 
0x00148765: dec dword ptr [ebp - 0x41c6b]; call dword ptr [eax - 0x77]; 
0x0012bb78: dec dword ptr [ebp - 0x42c63]; call dword ptr [eax - 0x73]; 
0x0006817f: dec dword ptr [ebp - 0x4477b]; call dword ptr [eax - 0x18]; 
0x0012bb45: dec dword ptr [ebp - 0x45b7b]; dec dword ptr [ecx - 0x47b6b]; call dword ptr [eax - 0x73]; 
0x00078482: dec dword ptr [ebp - 0x4877b]; dec dword ptr [ecx - 0x5377b]; call dword ptr [eax + 0x50]; 
0x00072a81: dec dword ptr [ebp - 0x4c77b]; dec dword ptr [ecx - 0x4c343]; dec dword ptr [ecx - 0x52f7b]; call dword ptr [eax - 0x18]; 
0x000775ae: dec dword ptr [ebp - 0x4cb6b]; call dword ptr [edx + 0x50]; 
0x0007534f: dec dword ptr [ebp - 0x4cb7b]; call dword ptr [ecx - 1]; 
0x000665d7: dec dword ptr [ebp - 0x56b7b]; dec dword ptr [ecx - 0x5fb7b]; call dword ptr [eax - 0x18]; 
0x0006b5a7: dec dword ptr [ebp - 0x56f7b]; call dword ptr [eax + 0x52]; 
0x0013e94c: dec dword ptr [ebp - 0x6417ff8a]; fdivp st(7); jmp dword ptr [esi - 0x70]; 
0x00185811: dec dword ptr [ebp - 0x644c77a]; call dword ptr [eax - 0x73]; 
0x00181ada: dec dword ptr [ebp - 0x645437a]; call dword ptr [eax - 0x73]; 
0x0017b17a: dec dword ptr [ebp - 0x646a77d]; call dword ptr [edx + 0x6a]; 
0x0017a7e4: dec dword ptr [ebp - 0x6475b7d]; call dword ptr [edx + 0x6a]; 
0x00175067: dec dword ptr [ebp - 0x648737d]; call dword ptr [edx + 0x6a]; 
0x0017511a: dec dword ptr [ebp - 0x648a37d]; call dword ptr [ebp + 0x6a]; 
0x0016b2cb: dec dword ptr [ebp - 0x649ef79]; call dword ptr [eax - 0x73]; 
0x00152ef5: dec dword ptr [ebp - 0x64ebb7d]; call dword ptr [eax - 0x73]; 
0x00152abe: dec dword ptr [ebp - 0x64ecb7d]; call dword ptr [eax - 0x73]; 
0x001521bc: dec dword ptr [ebp - 0x64f037f]; call dword ptr [eax - 0x73]; 
0x0015232d: dec dword ptr [ebp - 0x64f0f7f]; call dword ptr [eax - 0x73]; 
0x0015267d: dec dword ptr [ebp - 0x64f2779]; call dword ptr [eax - 0x73]; 
0x0015155a: dec dword ptr [ebp - 0x64f437d]; call dword ptr [eax + 0x68]; 
0x0013ec9c: dec dword ptr [ebp - 0x655cb79]; call dword ptr [eax - 0x73]; 
0x001350a4: dec dword ptr [ebp - 0x6589b7a]; call dword ptr [eax - 0x73]; 
0x0012d4a5: dec dword ptr [ebp - 0x65a4f7d]; call dword ptr [eax - 0x73]; 
0x001922d7: dec dword ptr [ebp - 0x65dc379]; call dword ptr [eax - 0x73]; 
0x001140c3: dec dword ptr [ebp - 0x65dd779]; call dword ptr [eax + 0x68]; 
0x000fa7d7: dec dword ptr [ebp - 0x65f3779]; call dword ptr [eax - 0x73]; 
0x00190357: dec dword ptr [ebp - 0x65f4f79]; call dword ptr [eax - 0x73]; 
0x000f6ee3: dec dword ptr [ebp - 0x65f5b79]; call dword ptr [eax - 0x73]; 
0x0018e657: dec dword ptr [ebp - 0x65f6f79]; call dword ptr [eax - 0x73]; 
0x000f3599: dec dword ptr [ebp - 0x65f7779]; call dword ptr [eax - 0x73]; 
0x000f18ff: dec dword ptr [ebp - 0x65f8379]; call dword ptr [eax + 0x68]; 
0x000ef6d9: dec dword ptr [ebp - 0x660877d]; call dword ptr [eax - 0x73]; 
0x000ebae6: dec dword ptr [ebp - 0x660ab7d]; call dword ptr [eax - 0x73]; 
0x000ed81e: dec dword ptr [ebp - 0x660b77d]; call dword ptr [eax - 0x73]; 
0x000ddf06: dec dword ptr [ebp - 0x661837d]; call dword ptr [eax - 0x73]; 
0x000de88f: dec dword ptr [ebp - 0x661977d]; call dword ptr [eax - 0x73]; 
0x000d8475: dec dword ptr [ebp - 0x661f37a]; call dword ptr [eax - 0x73]; 
0x000d8674: dec dword ptr [ebp - 0x661f37f]; call dword ptr [eax - 0x73]; 
0x000d2c73: dec dword ptr [ebp - 0x661ff7d]; call dword ptr [eax - 0x73]; 
0x000ca552: dec dword ptr [ebp - 0x662cb7f]; call dword ptr [eax - 0x73]; 
0x000c5b1b: dec dword ptr [ebp - 0x6635770]; call dword ptr [edx - 0x73]; 
0x000c4b75: dec dword ptr [ebp - 0x663d77a]; call dword ptr [eax - 0x73]; 
0x000c4239: dec dword ptr [ebp - 0x6642f7b]; call dword ptr [eax - 0x73]; 
0x000ad559: dec dword ptr [ebp - 0x664e770]; call dword ptr [edx - 0x73]; 
0x000ab41e: dec dword ptr [ebp - 0x6657b70]; call dword ptr [edx - 0x73]; 
0x000a4e0d: dec dword ptr [ebp - 0x6669779]; call dword ptr [eax - 0x73]; 
0x000a1758: dec dword ptr [ebp - 0x666a77a]; call dword ptr [eax - 0x73]; 
0x000a1e4f: dec dword ptr [ebp - 0x666cf7a]; call dword ptr [eax - 0x73]; 
0x000a42a6: dec dword ptr [ebp - 0x666db79]; call dword ptr [eax + 0x68]; 
0x000a44df: dec dword ptr [ebp - 0x666db79]; call dword ptr [eax - 0x73]; 
0x000a35c1: dec dword ptr [ebp - 0x666e77d]; call dword ptr [eax - 0x73]; 
0x000a0c9a: dec dword ptr [ebp - 0x6671f7f]; call dword ptr [eax - 0x73]; 
0x000a56b3: dec dword ptr [ebp - 0x6672f79]; call dword ptr [eax + 0x68]; 
0x000a5a59: dec dword ptr [ebp - 0x6673f79]; call dword ptr [eax - 0x73]; 
0x000a602f: dec dword ptr [ebp - 0x6677f7d]; call dword ptr [eax - 0x73]; 
0x0009d733: dec dword ptr [ebp - 0x6770379]; call dword ptr [eax - 0x73]; 
0x00097e36: dec dword ptr [ebp - 0x678a77a]; call dword ptr [eax - 0x73]; 
0x000976fd: dec dword ptr [ebp - 0x678e779]; call dword ptr [eax - 0x73]; 
0x000965da: dec dword ptr [ebp - 0x678ff7a]; call dword ptr [eax + 0x68]; 
0x00096603: dec dword ptr [ebp - 0x678ff7a]; call dword ptr [eax + 0x6a]; 
0x000966b5: dec dword ptr [ebp - 0x678ff7a]; call dword ptr [eax - 0x73]; 
0x000957c0: dec dword ptr [ebp - 0x679377a]; call dword ptr [eax + 0x68]; 
0x000957ff: dec dword ptr [ebp - 0x679377a]; call dword ptr [eax + 0x6a]; 
0x000958af: dec dword ptr [ebp - 0x679377a]; call dword ptr [eax - 0x73]; 
0x00083d3f: dec dword ptr [ebp - 0x67cb77a]; call dword ptr [eax - 0x73]; 
0x00078904: dec dword ptr [ebp - 0x682177a]; call dword ptr [eax + 0x68]; 
0x000699f1: dec dword ptr [ebp - 0x6822b79]; call dword ptr [eax - 0x73]; 
0x0005f4e8: dec dword ptr [ebp - 0x6842f7d]; call dword ptr [eax - 0x73]; 
0x0005df2f: dec dword ptr [ebp - 0x684677a]; call dword ptr [eax - 0x73]; 
0x0005df54: dec dword ptr [ebp - 0x684677d]; call dword ptr [eax - 0x73]; 
0x0005df0a: dec dword ptr [ebp - 0x684677e]; call dword ptr [eax - 0x73]; 
0x0005b521: dec dword ptr [ebp - 0x6866b7a]; call dword ptr [eax - 0x73]; 
0x00059a5b: dec dword ptr [ebp - 0x6877779]; call dword ptr [eax - 0x73]; 
0x00059b8a: dec dword ptr [ebp - 0x687777a]; call dword ptr [eax - 0x73]; 
0x0004d5d7: dec dword ptr [ebp - 0x687a779]; call dword ptr [eax - 0x73]; 
0x00059b40: dec dword ptr [ebp - 0x687cb7a]; call dword ptr [eax - 0x73]; 
0x00143915: dec dword ptr [ebp - 0x68bb34e]; call dword ptr [eax + 0x56]; 
0x0014389a: dec dword ptr [ebp - 0x68bb36d]; call dword ptr [eax - 0x77]; 
0x00032516: dec dword ptr [ebp - 0x68c8b7d]; call dword ptr [eax - 0x73]; 
0x00031d0f: dec dword ptr [ebp - 0x68ccb7e]; call dword ptr [eax - 0x73]; 
0x00030029: dec dword ptr [ebp - 0x68d1f7d]; call dword ptr [eax - 0x73]; 
0x00096e70: dec dword ptr [ebp - 0x692537b]; call dword ptr [eax - 0x73]; 
0x0009592a: dec dword ptr [ebp - 0x692937f]; call dword ptr [eax - 0x73]; 
0x00078e9a: dec dword ptr [ebp - 0x692b37a]; call dword ptr [eax - 0x73]; 
0x001449f1: dec dword ptr [ebp - 0x69a3d7d]; call dword ptr [esi + 0x6a]; 
0x001750d3: dec dword ptr [ebp - 0x69b7e7d]; call dword ptr [edi + 0x6a]; 
0x001711b9: dec dword ptr [ebp - 0x69bc77d]; call dword ptr [edx + 0x6a]; 
0x0013f6b5: dec dword ptr [ebp - 0x6a7d57a]; call dword ptr [ecx - 0x77]; 
0x00137347: dec dword ptr [ebp - 0x6aa8379]; call dword ptr [ebp - 1]; 
0x001341ca: dec dword ptr [ebp - 0x6aaee7d]; call dword ptr [eax + 0x57]; 
0x0010dbc1: dec dword ptr [ebp - 0x6b77b7a]; call dword ptr [eax - 0x18]; 
0x00106b3e: dec dword ptr [ebp - 0x6b7e671]; call dword ptr [eax - 0x77]; 
0x000fad58: dec dword ptr [ebp - 0x6b81e80]; call dword ptr [ebx + 0x50]; 
0x000fad1d: dec dword ptr [ebp - 0x6b84380]; call dword ptr [eax + 0x6a]; 
0x00106e34: dec dword ptr [ebp - 0x6c0bf71]; call dword ptr [eax - 0x17]; 
0x000fe132: dec dword ptr [ebp - 0x6ccfe7d]; call dword ptr [edx + 0x52]; 
0x00060a32: dec dword ptr [ebp - 0x6cdcb7d]; call dword ptr [esi + 0x6a]; 
0x00060a19: dec dword ptr [ebp - 0x6cde47d]; call dword ptr [esi + 0x6a]; 
0x00048934: dec dword ptr [ebp - 0x6d07c80]; call dword ptr [ebx + 0x6a]; 
0x000577b4: dec dword ptr [ebp - 0x6d07c80]; call dword ptr [esi + 0x6a]; 
0x0004011a: dec dword ptr [ebp - 0x6d0de6b]; dec dword ptr [ecx - 0x76ebdbac]; ret; 
0x00040114: dec dword ptr [ebp - 0x6d3237b]; dec dword ptr [ebp - 0x6d0de6b]; dec dword ptr [ecx - 0x76ebdbac]; ret; 
0x0003ff9b: dec dword ptr [ebp - 0x6d3237b]; dec dword ptr [ecx - 0x76d3dbbc]; ret 0x4489; 
0x0003fbe5: dec dword ptr [ebp - 0x6d3237b]; dec dword ptr [ecx - 0x76f7dbbc]; ret 0xc5e9; 
0x0010b14d: dec dword ptr [ebp - 0x7043c7d]; call dword ptr [ecx + 0x6a]; 
0x0013e05c: dec dword ptr [ebp - 0x7417ff8a]; out 0xff, eax; jmp dword ptr [esi - 0x70]; 
0x00109206: dec dword ptr [ebp - 0x74ffe2b4]; pop ecx; add al, 0xf7; ret; 
0x001312e7: dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x001319fc: dec dword ptr [ebp - 0x76fbdbb4]; ret 0x448b; 
0x000e4643: dec dword ptr [ebp - 0x76ffd98c]; ret 0x56e9; 
0x00074afb: dec dword ptr [ebp - 0x76ffd98c]; ret; 
0x000353b3: dec dword ptr [ebp - 0x76ffd98c]; ror byte ptr [ecx - 0x7439760e], 1; inc ebp; les edi, ptr [ecx]; ret 0x830f; 
0x000577ae: dec dword ptr [ebp - 0x7d350]; dec dword ptr [ebp - 0x6d07c80]; call dword ptr [esi + 0x6a]; 
0x00057535: dec dword ptr [ebp - 0x7d379]; call dword ptr [eax - 0x73]; 
0x00096dcb: dec dword ptr [ebp - 0x8ffd98c]; ret 0; 
0x000c6aa9: dec dword ptr [ebp - 0x9296380]; push esi; inc ecx; jnp 0xc6ab8; cmove eax, edx; ret; 
0x000c4d49: dec dword ptr [ebp - 0x92b4380]; push esi; inc ecx; jnp 0xc4d58; cmove eax, edx; ret; 
0x00181265: dec dword ptr [ebp - 0x937b]; call dword ptr [ecx + 0x6a]; 
0x000ac439: dec dword ptr [ebp - 0x9383380]; push esi; inc ecx; jnp 0xac448; cmove eax, edx; ret; 
0x000ac639: dec dword ptr [ebp - 0x9711380]; push esi; inc ecx; jbe 0xac654; cmove eax, edx; ret; 
0x000ac469: dec dword ptr [ebp - 0x9721380]; push esi; inc ecx; jbe 0xac484; cmove eax, edx; ret; 
0x000ab4f9: dec dword ptr [ebp - 0x9739380]; push esi; inc ecx; jbe 0xab514; cmove eax, edx; ret; 
0x0013b337: dec dword ptr [ebp - 0x9763]; jmp dword ptr [esi - 0x70]; 
0x00181d88: dec dword ptr [ebp - 0x9fffaa4]; ret; 
0x00135007: dec dword ptr [ebp - 0xa77b]; call dword ptr [ebx + 0x50]; 
0x00181a6f: dec dword ptr [ebp - 0xa77b]; dec dword ptr [ecx - 0xe36b]; call dword ptr [eax + 0x6a]; 
0x000330f8: dec dword ptr [ebp - 0xc743]; dec dword ptr [ebp - 0xcb4b]; call dword ptr [edi + 0x56]; 
0x000330fe: dec dword ptr [ebp - 0xcb4b]; call dword ptr [edi + 0x56]; 
0x00179039: dec dword ptr [ebp - 0xcf5b34a]; call dword ptr [ebp - 0x73]; 
0x00152d08: dec dword ptr [ebp - 0xec5b37d]; call dword ptr [esi + 0x50]; 
0x00127058: dec dword ptr [ebp - 7]; call dword ptr [eax + 0x55]; 
0x000a2308: dec dword ptr [ebx + 0x10883]; add byte ptr [ecx - 0x74167609], cl; push eax; or al, 0x8d; inc edx; jmp dword ptr [ecx]; 
0x00027187: dec dword ptr [ebx + 0x10c083]; add byte ptr [ebp - 0x7cec8b40], al; in al, dx; or byte ptr [ebp - 0x218ef36d], cl; call dword ptr [edx + 0x50]; 
0x001093e0: dec dword ptr [ebx + 0x1182454]; ret 0x7c80; 
0x000665cb: dec dword ptr [ebx + 0x15880]; add byte ptr [ecx - 0x56b7b], cl; dec dword ptr [ebp - 0x56b7b]; dec dword ptr [ecx - 0x5fb7b]; call dword ptr [eax - 0x18]; 
0x001113eb: dec dword ptr [ebx + 0x160b384]; stc; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x000a8b6b: dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x000935e6: dec dword ptr [ebx + 0x3118244c]; ror byte ptr [ecx + 0xafb8c7], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0018a65b: dec dword ptr [ebx + 0x311c2444]; fild dword ptr [eax + 0xf72007d]; xchg esp, eax; ret; 
0x00123e52: dec dword ptr [ebx + 0x314c2444]; ror byte ptr [ebx + 0xfc08500], cl; dec eax; ret 0xc483; 
0x0012a872: dec dword ptr [ebx + 0x31502444]; ror byte ptr [ebx + 0xfc08500], cl; dec eax; ret 0xc483; 
0x00028f0f: dec dword ptr [ebx + 0x39042444]; ret 0x840f; 
0x00107100: dec dword ptr [ebx + 0x39082444]; ret; 
0x0002c23f: dec dword ptr [ebx + 0x390c2444]; ret 0x1a73; 
0x0016afac: dec dword ptr [ebx + 0x39202444]; ret 0x1074; 
0x0015c354: dec dword ptr [ebx + 0x392c244c]; ret; 
0x0016b12f: dec dword ptr [ebx + 0x39302444]; ret 0x1074; 
0x001b6986: dec dword ptr [ebx + 0x39402444]; ret 0x850f; 
0x0014c9ac: dec dword ptr [ebx + 0x39702444]; ret 0x840f; 
0x00069d96: dec dword ptr [ebx + 0x39c12907]; fnstenv [ebp - 0x7d]; in al, dx; or byte ptr [ecx - 0x58b6b], cl; dec dword ptr [ebx - 0x58f63]; call dword ptr [ecx + 0x50]; 
0x0006afeb: dec dword ptr [ebx + 0x3c833853]; cmp byte ptr [ecx + 0xf], 0x85; call dword ptr [ebx]; 
0x00066c47: dec dword ptr [ebx + 0x40f63440]; jmp dword ptr [eax]; 
0x0005dcbd: dec dword ptr [ebx + 0x4589b055]; mov eax, 0xfff87ee9; call dword ptr [eax + 0x52]; 
0x000f196f: dec dword ptr [ebx + 0x458b084d]; adc byte ptr [ecx - 0x46b73], cl; dec dword ptr [ecx - 0x4737b]; jmp dword ptr [ebp - 0x75]; 
0x0010a877: dec dword ptr [ebx + 0x458b2455]; sub al, 0x39; sal byte ptr [esi + ecx - 0x77], 1; ret 0xf189; 
0x0010a88c: dec dword ptr [ebx + 0x458b2455]; xor byte ptr [ecx], bh; sal byte ptr [ebx + ecx - 0x77], 1; ret 0xf189; 
0x0006f458: dec dword ptr [ebx + 0x478b0457]; or byte ptr [ecx], bh; ret 0x840f; 
0x0013b608: dec dword ptr [ebx + 0x538b2043]; sbb al, 0x83; in al, dx; add al, 0x83; ret; 
0x0012730f: dec dword ptr [ebx + 0x56897440]; add al, 0x89; ret 0xeac1; 
0x00193297: dec dword ptr [ebx + 0x5b082444]; ret; 
0x00148d22: dec dword ptr [ebx + 0x650c2454]; sub edx, dword ptr [0x14]; jne 0x148d34; add esp, 0x1c; ret; 
0x00100e4e: dec dword ptr [ebx + 0x8093]; add dh, dh; ret 0x7540; 
0x00100faa: dec dword ptr [ebx + 0x8093]; add dh, dh; ret 0xf40; 
0x0009fce1: dec dword ptr [ebx + 0xa49e]; add byte ptr [ecx - 0x16ffe2bc], cl; ret; 
0x0009a54b: dec dword ptr [ebx + 0xf0c2444]; inc edi; ret 0x948b; 
0x00047dd7: dec dword ptr [ebx + 0xf10247c]; mov esi, 0x243c83d3; adc byte ptr [ebx - 0x6af068cc], cl; ret 0xd789; 
0x00189391: dec dword ptr [ebx - 0x137c37bb]; or al, 0x8d; or byte ptr [edi + 0x67], 0xf9; call dword ptr [eax - 0x18]; 
0x0013a46f: dec dword ptr [ebx - 0x137c53bb]; add al, 0x6a; add eax, 0x5629808d; stc; call dword ptr [eax - 0x75]; 
0x001398ca: dec dword ptr [ebx - 0x137c53bb]; add al, 0x6a; add eax, 0xa85c808d; stc; call dword ptr [eax - 0x75]; 
0x0013a522: dec dword ptr [ebx - 0x137c53bb]; add al, 0x6a; add eax, 0xa894808d; stc; call dword ptr [eax + 0x6a]; 
0x00035704: dec dword ptr [ebx - 0x137c67bb]; or al, 0x89; push ebp; mov esp, 0x2e3f808d; stc; call dword ptr [eax - 0x18]; 
0x000ec5ca: dec dword ptr [ebx - 0x137cffbb]; or al, 0x31; call dword ptr [eax - 0x18]; 
0x000ec5ca: dec dword ptr [ebx - 0x137cffbb]; or al, 0x31; call dword ptr [eax - 0x18]; xchg dword ptr [ebx - 0x3b7cfffc], edx; adc byte ptr [ecx], bh; ret; 
0x0010da68: dec dword ptr [ebx - 0x1474b]; jmp dword ptr [ebp - 0x75]; 
0x0010d95a: dec dword ptr [ebx - 0x1477b]; jmp dword ptr [ebp - 0x75]; 
0x0016ae8d: dec dword ptr [ebx - 0x14ebdb8c]; adc cl, byte ptr [ebp - 0x74ffd98c]; inc ebx; add al, 0x83; ret; 
0x000fae5b: dec dword ptr [ebx - 0x15637b]; inc dword ptr [ebx - 0x7f72f714]; add cl, byte ptr [eax - 7]; call dword ptr [eax - 1]; 
0x00108587: dec dword ptr [ebx - 0x16fbdb94]; ret 0xfffe; 
0x00107b84: dec dword ptr [ebx - 0x17d3dbbc]; ret 0xff59; 
0x000d755a: dec dword ptr [ebx - 0x1aff7b]; dec dword ptr [ebx - 0x35e373]; inc dword ptr [ebx - 0x6bf0fe05]; ret 0xc139; 
0x00031d09: dec dword ptr [ebx - 0x1d36b]; dec dword ptr [ebp - 0x68ccb7e]; call dword ptr [eax - 0x73]; 
0x00038381: dec dword ptr [ebx - 0x1f77b]; dec dword ptr [ecx - 0x1f743]; dec dword ptr [ecx - 0x76267631]; ret; 
0x000cbb7f: dec dword ptr [ebx - 0x27b7dbbc]; mov byte ptr [eax], al; ret 0xfff9; 
0x0004ce8c: dec dword ptr [ebx - 0x27e7dbbc]; mov byte ptr [eax], al; ret 0xfff9; 
0x0017ec31: dec dword ptr [ebx - 0x2abb7700]; les ecx, ptr [ebx - 0xb77b]; dec dword ptr [ecx + 0x1c8d544]; ret; 
0x000d7560: dec dword ptr [ebx - 0x35e373]; inc dword ptr [ebx - 0x6bf0fe05]; ret 0xc139; 
0x00059056: dec dword ptr [ebx - 0x35eb7b]; inc dword ptr [ebx - 0x36277b]; jmp dword ptr [eax]; 
0x000d6d74: dec dword ptr [ebx - 0x361b6b]; inc dword ptr [ebx - 0x2d7c0040]; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00056947: dec dword ptr [ebx - 0x361f4b]; inc dword ptr [ecx]; ret 0xd389; 
0x000d6c3a: dec dword ptr [ebx - 0x362743]; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000d5e97: dec dword ptr [ebx - 0x362b63]; call dword ptr [ebx]; 
0x00056941: dec dword ptr [ebx - 0x362f43]; dec dword ptr [ebx - 0x361f4b]; inc dword ptr [ecx]; ret 0xd389; 
0x000589c8: dec dword ptr [ebx - 0x362f73]; dec dword ptr [ebp - 0x36177b]; dec dword ptr [edi]; xchg ebp, eax; ret 0xb60f; 
0x00057930: dec dword ptr [ebx - 0x36336b]; dec dword ptr [ebx - 0x36774b]; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000d7a48: dec dword ptr [ebx - 0x36374b]; call dword ptr [edi - 1]; 
0x000d603b: dec dword ptr [ebx - 0x363773]; call dword ptr [eax - 0x73]; 
0x00058a54: dec dword ptr [ebx - 0x36377b]; call dword ptr [ebx + 0x56]; 
0x000d71be: dec dword ptr [ebx - 0x36377b]; call dword ptr [esi + 0x57]; 
0x000d59ae: dec dword ptr [ebx - 0x36377b]; inc dword ptr [ebx - 0x362f43]; call dword ptr [eax]; 
0x000d846f: dec dword ptr [ebx - 0x363f4b]; dec dword ptr [ebp - 0x661f37a]; call dword ptr [eax - 0x73]; 
0x000d8702: dec dword ptr [ebx - 0x363f4b]; dec dword ptr [ebp - 0x687cb7a]; call dword ptr [eax - 0x73]; 
0x000d8222: dec dword ptr [ebx - 0x363f63]; call dword ptr [eax + 0x6a]; 
0x000d866e: dec dword ptr [ebx - 0x363f73]; dec dword ptr [ebp - 0x661f37f]; call dword ptr [eax - 0x73]; 
0x000d6823: dec dword ptr [ebx - 0x363f7b]; call dword ptr [edi + 0x6a]; 
0x000d7db8: dec dword ptr [ebx - 0x363f7b]; jmp dword ptr [ebp - 0x75]; 
0x00059a55: dec dword ptr [ebx - 0x364743]; dec dword ptr [ebp - 0x6877779]; call dword ptr [eax - 0x73]; 
0x00059b84: dec dword ptr [ebx - 0x36474b]; dec dword ptr [ebp - 0x687777a]; call dword ptr [eax - 0x73]; 
0x00059b3a: dec dword ptr [ebx - 0x36474b]; dec dword ptr [ebp - 0x687cb7a]; call dword ptr [eax - 0x73]; 
0x0005966c: dec dword ptr [ebx - 0x364763]; call dword ptr [eax + 0x6a]; 
0x00058da2: dec dword ptr [ebx - 0x364763]; call dword ptr [eax - 0x73]; 
0x000d7409: dec dword ptr [ebx - 0x364773]; dec dword ptr [edi]; xchg ebp, eax; ret 0xb60f; 
0x000577a8: dec dword ptr [ebx - 0x36477b]; dec dword ptr [ebp - 0x7d350]; dec dword ptr [ebp - 0x6d07c80]; call dword ptr [esi + 0x6a]; 
0x000591c5: dec dword ptr [ebx - 0x36477b]; jmp dword ptr [ebp - 0x75]; 
0x00056dbb: dec dword ptr [ebx - 0x364b43]; call dword ptr [ebx]; 
0x000d60ec: dec dword ptr [ebx - 0x364f4b]; call dword ptr [ebx - 0x73]; 
0x00058a4e: dec dword ptr [ebx - 0x364f4b]; dec dword ptr [ebx - 0x36377b]; call dword ptr [ebx + 0x56]; 
0x0005770d: dec dword ptr [ebx - 0x364f63]; inc dword ptr [ebx - 0x362743]; call dword ptr [eax]; 
0x00056935: dec dword ptr [ebx - 0x364f6b]; dec dword ptr [ebx - 0x36737b]; dec dword ptr [ebx - 0x362f43]; dec dword ptr [ebx - 0x361f4b]; inc dword ptr [ecx]; ret 0xd389; 
0x000d68fe: dec dword ptr [ebx - 0x36576b]; call dword ptr [eax - 0x73]; 
0x000d7687: dec dword ptr [ebx - 0x365773]; dec dword ptr [ebp - 0x36177b]; dec dword ptr [edi]; xchg ebp, eax; ret 0x9d8b; 
0x00058751: dec dword ptr [ebx - 0x365b63]; dec dword ptr [edi]; xchg ebp, eax; ret 0xb60f; 
0x00056c14: dec dword ptr [ebx - 0x366f63]; dec dword ptr [ebx - 0x36936b]; inc dword ptr [ecx]; ret; 
0x0005693b: dec dword ptr [ebx - 0x36737b]; dec dword ptr [ebx - 0x362f43]; dec dword ptr [ebx - 0x361f4b]; inc dword ptr [ecx]; ret 0xd389; 
0x00057936: dec dword ptr [ebx - 0x36774b]; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00056c1a: dec dword ptr [ebx - 0x36936b]; inc dword ptr [ecx]; ret; 
0x00056c0e: dec dword ptr [ebx - 0x36977b]; dec dword ptr [ebx - 0x366f63]; dec dword ptr [ebx - 0x36936b]; inc dword ptr [ecx]; ret; 
0x000d5b4a: dec dword ptr [ebx - 0x369b43]; dec dword ptr [edi]; test byte ptr [edx], bh; or al, 0; add byte ptr [ebx - 0x363f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x001610af: dec dword ptr [ebx - 0x38dfdbbc]; add byte ptr [eax], al; add byte ptr [eax], al; add cl, ch; ret; 
0x0013c295: dec dword ptr [ebx - 0x3b7c3bab]; adc byte ptr [ebp - 0x7ce4e884], cl; ret; 
0x001398b5: dec dword ptr [ebx - 0x3b7cf78b]; adc byte ptr [ecx], cl; ret; 
0x0008ca38: dec dword ptr [ebx - 0x3b7cf7b9]; adc bl, ch; ret; 
0x0012c641: dec dword ptr [ebx - 0x3f7af7bd]; jne 0x12c668; sub esp, 0xc; push dword ptr [ebx]; call esi; 
0x000fee06: dec dword ptr [ebx - 0x3f7ce3a2]; add dword ptr [ecx], edi; ret; 
0x000fec86: dec dword ptr [ebx - 0x3f7ce3aa]; add dword ptr [ecx], edi; ret 0xef7f; 
0x00068603: dec dword ptr [ebx - 0x4436b]; dec dword ptr [ebx - 0x58b73]; inc dword ptr [ecx]; ret 0xd801; 
0x00069965: dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0x9589; 
0x0006a033: dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xd801; 
0x00069b6f: dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xf001; 
0x0006837b: dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xf801; 
0x0006ab31: dec dword ptr [ebx - 0x4477b]; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xf801; 
0x00148986: dec dword ptr [ebx - 0x44f43]; jmp dword ptr [ebp - 0x5f]; 
0x00068308: dec dword ptr [ebx - 0x45763]; dec dword ptr [ebx - 0x59773]; inc dword ptr [ebp - 0x7b7af025]; add eax, dword ptr [eax]; add byte ptr [ebx - 0x58f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x0010feda: dec dword ptr [ebx - 0x45f73]; call dword ptr [eax + 0x53]; 
0x0010ff2c: dec dword ptr [ebx - 0x45f73]; call dword ptr [eax - 0x77]; 
0x001922d1: dec dword ptr [ebx - 0x46f43]; dec dword ptr [ebp - 0x65dc379]; call dword ptr [eax - 0x73]; 
0x000fa7d1: dec dword ptr [ebx - 0x46f43]; dec dword ptr [ebp - 0x65f3779]; call dword ptr [eax - 0x73]; 
0x00190351: dec dword ptr [ebx - 0x46f43]; dec dword ptr [ebp - 0x65f4f79]; call dword ptr [eax - 0x73]; 
0x0018e651: dec dword ptr [ebx - 0x46f43]; dec dword ptr [ebp - 0x65f6f79]; call dword ptr [eax - 0x73]; 
0x000f31ae: dec dword ptr [ebx - 0x46f63]; call dword ptr [eax - 0x18]; 
0x000f6dee: dec dword ptr [ebx - 0x46f63]; call dword ptr [eax - 0x18]; movsd dword ptr es:[edi], dword ptr [esi]; ret; 
0x000f6a4b: dec dword ptr [ebx - 0x46f63]; call dword ptr [eax - 0x7d]; 
0x000f311b: dec dword ptr [ebx - 0x46f63]; call dword ptr [ecx - 0x7d]; 
0x000f1ce3: dec dword ptr [ebx - 0x46f63]; dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x001913f9: dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x12ba7380]; call dword ptr [eax + 0x6a]; 
0x000f98f9: dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x146fc380]; call dword ptr [eax + 0x6a]; 
0x0018f479: dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x147dd380]; call dword ptr [eax + 0x6a]; 
0x000f5ff9: dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x14a90380]; call dword ptr [eax + 0x6a]; 
0x0018d779: dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x14b70380]; call dword ptr [eax + 0x6a]; 
0x000f26b9: dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x14e24380]; call dword ptr [eax + 0x6a]; 
0x000f303b: dec dword ptr [ebx - 0x46f7b]; jmp dword ptr [ebp - 0x75]; 
0x000f2d7b: dec dword ptr [ebx - 0x4736b]; call dword ptr [edx - 1]; 
0x000f25f2: dec dword ptr [ebx - 0x4776b]; call dword ptr [edi - 1]; 
0x000f1f5f: dec dword ptr [ebx - 0x47f7b]; inc dword ptr [ecx]; ret; 
0x00099670: dec dword ptr [ebx - 0x47fbdbb4]; lock add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x001913ff: dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x12ba7380]; call dword ptr [eax + 0x6a]; 
0x000f98ff: dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x146fc380]; call dword ptr [eax + 0x6a]; 
0x0018f47f: dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x147dd380]; call dword ptr [eax + 0x6a]; 
0x000f5fff: dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x14a90380]; call dword ptr [eax + 0x6a]; 
0x0018d77f: dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x14b70380]; call dword ptr [eax + 0x6a]; 
0x000f26bf: dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x14e24380]; call dword ptr [eax + 0x6a]; 
0x000f3226: dec dword ptr [ebx - 0x49773]; inc dword ptr [ecx]; rol byte ptr [ecx], 1; ret; 
0x000f3115: dec dword ptr [ebx - 0x49f73]; dec dword ptr [ebx - 0x46f63]; call dword ptr [ecx - 0x7d]; 
0x000f6a45: dec dword ptr [ebx - 0x49f7b]; dec dword ptr [ebx - 0x46f63]; call dword ptr [eax - 0x7d]; 
0x000731b4: dec dword ptr [ebx - 0x4eb43]; call dword ptr [esi - 0x18]; 
0x00072a75: dec dword ptr [ebx - 0x4eb43]; dec dword ptr [ecx - 0x4c77b]; dec dword ptr [ebp - 0x4c77b]; dec dword ptr [ecx - 0x4c343]; dec dword ptr [ecx - 0x52f7b]; call dword ptr [eax - 0x18]; 
0x000781de: dec dword ptr [ebx - 0x4f76b]; dec dword ptr [ecx - 0x162ffeff]; push edx; ret 0xffff; 
0x00075661: dec dword ptr [ebx - 0x4fb7b]; inc dword ptr [ebx - 0x7bf0fe08]; mov edi, 0x89ffffdc; ret; 
0x000788fe: dec dword ptr [ebx - 0x4ff4b]; dec dword ptr [ebp - 0x682177a]; call dword ptr [eax + 0x68]; 
0x00074277: dec dword ptr [ebx - 0x4ff63]; call dword ptr [eax + 0x52]; 
0x0007837f: dec dword ptr [ebx - 0x4ff63]; inc dword ptr [ebx - 0x7c72f314]; cld; xor bh, cl; call dword ptr [eax - 0x18]; 
0x00075757: dec dword ptr [ebx - 0x4ff7b]; jmp dword ptr [ebp - 0x75]; 
0x000731a8: dec dword ptr [ebx - 0x50363]; dec dword ptr [ecx - 0x4f343]; dec dword ptr [ebx - 0x4eb43]; call dword ptr [esi - 0x18]; 
0x000788ab: dec dword ptr [ebx - 0x5037b]; call dword ptr [ecx + 0x51]; 
0x00133ee5: dec dword ptr [ebx - 0x50773]; jmp dword ptr [ebp - 1]; 
0x000754cf: dec dword ptr [ebx - 0x51f73]; jmp dword ptr [ebp - 0x5f]; 
0x0007775f: dec dword ptr [ebx - 0x52b73]; call dword ptr [ecx + 0x50]; 
0x00068609: dec dword ptr [ebx - 0x58b73]; inc dword ptr [ecx]; ret 0xd801; 
0x000699eb: dec dword ptr [ebx - 0x58f43]; dec dword ptr [ebp - 0x6822b79]; call dword ptr [eax - 0x73]; 
0x00069da7: dec dword ptr [ebx - 0x58f63]; call dword ptr [ecx + 0x50]; 
0x00068b24: dec dword ptr [ebx - 0x58f63]; call dword ptr [edi - 0x18]; 
0x0006795d: dec dword ptr [ebx - 0x58f7b]; jmp dword ptr [ebp - 0x75]; 
0x0006830e: dec dword ptr [ebx - 0x59773]; inc dword ptr [ebp - 0x7b7af025]; add eax, dword ptr [eax]; add byte ptr [ebx - 0x58f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x0006bb7f: dec dword ptr [ebx - 0x59b43]; jmp dword ptr [ebp - 0x5f]; 
0x001140bd: dec dword ptr [ebx - 0x5ab43]; dec dword ptr [ebp - 0x65dd779]; call dword ptr [eax + 0x68]; 
0x000f442d: dec dword ptr [ebx - 0x5ab43]; dec dword ptr [ebp - 0x65f8379]; call dword ptr [eax + 0x68]; 
0x0006c800: dec dword ptr [ebx - 0x5ab4b]; call dword ptr [eax + 0x50]; 
0x0006a843: dec dword ptr [ebx - 0x5ab4b]; dec dword ptr [ebx - 0x58f7b]; jmp dword ptr [ebp - 0x75]; 
0x0006792b: dec dword ptr [ebx - 0x5ab4b]; jmp dword ptr [ebp - 0x5f]; 
0x000f1273: dec dword ptr [ebx - 0x5ab63]; call dword ptr [edi - 0x77]; 
0x000f14a2: dec dword ptr [ebx - 0x5ab7b]; jmp dword ptr [ebp - 0x75]; 
0x000698c8: dec dword ptr [ebx - 0x5af7b]; dec dword ptr [ebx - 0x5cf6b]; dec dword ptr [ebx + 0x40f63440]; jmp dword ptr [eax]; 
0x000f8b6d: dec dword ptr [ebx - 0x5bb43]; dec dword ptr [ebp - 0x65f8379]; call dword ptr [eax + 0x68]; 
0x000f84f3: dec dword ptr [ebx - 0x5bb63]; call dword ptr [edi - 0x77]; 
0x000f8722: dec dword ptr [ebx - 0x5bb7b]; jmp dword ptr [ebp - 0x75]; 
0x000698ce: dec dword ptr [ebx - 0x5cf6b]; dec dword ptr [ebx + 0x40f63440]; jmp dword ptr [eax]; 
0x0006c7c8: dec dword ptr [ebx - 0x5d343]; dec dword ptr [ecx + 0x29f829f0]; ret; 
0x001a5961: dec dword ptr [ebx - 0x64737c7c]; idiv edi; sub eax, ecx; pop ebp; pop ebx; ret; 
0x001a3154: dec dword ptr [ebx - 0x64737c7c]; idiv edi; sub eax, ecx; pop ebx; ret; 
0x00056806: dec dword ptr [ebx - 0x6bf06ff4]; ret 0xf980; 
0x0002ecd3: dec dword ptr [ebx - 0x72bbdb84]; xchg dword ptr [ecx + ebp*2 - 7], ebp; call dword ptr [eax - 0x73]; 
0x0002d945: dec dword ptr [ebx - 0x72bbdb84]; xchg dword ptr [edx + ebp*2 - 7], ebp; call dword ptr [eax + 0x68]; 
0x0002d820: dec dword ptr [ebx - 0x72bbdb84]; xchg dword ptr [edx + ebp*2 - 7], ebp; call dword ptr [eax - 0x73]; 
0x0002da70: dec dword ptr [ebx - 0x72bbdb84]; xchg esp, ebp; jno 0x2da73; call dword ptr [eax - 0x73]; 
0x0002b749: dec dword ptr [ebx - 0x72c3db84]; xchg dword ptr [eax + 0x72], ecx; stc; call dword ptr [eax - 0x73]; 
0x0002ce48: dec dword ptr [ebx - 0x72c3db84]; xchg dword ptr [eax], ecx; jb 0x2ce4b; call dword ptr [eax - 0x73]; 
0x0002b234: dec dword ptr [ebx - 0x72c3db84]; xchg esp, ecx; push -7; call dword ptr [eax - 0x73]; 
0x0002b82c: dec dword ptr [ebx - 0x72c3db8c]; xchg ah, cl; push -7; call dword ptr [eax - 0x73]; 
0x0002b77a: dec dword ptr [ebx - 0x72c3db8c]; xchg byte ptr [eax + 0x72], cl; stc; call dword ptr [eax - 0x73]; 
0x00029af5: dec dword ptr [ebx - 0x72c3db8c]; xchg byte ptr [ebx + ebp*2 - 7], ch; call dword ptr [eax - 0x73]; 
0x00028894: dec dword ptr [ebx - 0x72c3dba4]; or dword ptr [esp + ebp*2], 0xfffffff9; call dword ptr [eax + 0x68]; 
0x0002e161: dec dword ptr [ebx - 0x72c7db84]; xchg dword ptr [edx + ebp*2], ebp; stc; call dword ptr [eax - 0x73]; 
0x0002aa44: dec dword ptr [ebx - 0x72c7db84]; xchg esp, ebp; push -7; call dword ptr [eax - 0x73]; 
0x000d0c4c: dec dword ptr [ebx - 0x72d3db84]; xchg dword ptr [ebp + ebx*4 - 7], esp; call dword ptr [eax - 0x73]; 
0x00051129: dec dword ptr [ebx - 0x72d7db84]; xchg dword ptr [eax + 0x78], esi; stc; call dword ptr [eax - 0x73]; 
0x000511bc: dec dword ptr [ebx - 0x72d7db84]; xchg dword ptr [eax + edi*2], esi; stc; call dword ptr [eax - 0x73]; 
0x00186072: dec dword ptr [ebx - 0x72d7db84]; xchg dword ptr [ebx + edi*4], ebx; stc; call dword ptr [eax - 0x73]; 
0x00186095: dec dword ptr [ebx - 0x72d7db84]; xchg dword ptr [edi + ebp*2], ebp; stc; call dword ptr [eax - 0x73]; 
0x0016ba52: dec dword ptr [ebx - 0x72d7db84]; xchg esp, esi; mov ch, 0xf9; call dword ptr [eax - 0x73]; 
0x0011ee60: dec dword ptr [ebx - 0x72d7dba4]; add dword ptr [ebx], -7; call dword ptr [eax - 0x73]; 
0x000a62b7: dec dword ptr [ebx - 0x72dbdb84]; xchg dword ptr [eax - 0x68], edi; stc; call dword ptr [eax - 0x73]; 
0x00138e7e: dec dword ptr [ebx - 0x72dfdb84]; xchg dword ptr [ecx + ebp*4], edx; stc; call dword ptr [eax - 0x73]; 
0x000c6d77: dec dword ptr [ebx - 0x72e3db84]; xchg dword ptr [eax], ebp; popfd; stc; call dword ptr [eax - 0x73]; 
0x000c69a0: dec dword ptr [ebx - 0x72e3db84]; xchg dword ptr [eax], ebx; popfd; stc; call dword ptr [eax - 0x73]; 
0x000c44f8: dec dword ptr [ebx - 0x72e3db84]; xchg esp, ebx; wait; stc; call dword ptr [eax - 0x73]; 
0x000961e9: dec dword ptr [ebx - 0x72e3dba4]; and esp, 0xffffff86; stc; call dword ptr [eax - 0x73]; 
0x000c484c: dec dword ptr [ebx - 0x72e3dbac]; sbb byte ptr [eax], 0x9c; stc; call dword ptr [eax - 0x73]; 
0x00049fb3: dec dword ptr [ebx - 0x72e7db84]; xchg dword ptr [eax + 0x78], eax; stc; call dword ptr [eax - 0x73]; 
0x0004d395: dec dword ptr [ebx - 0x72e7db84]; xchg dword ptr [eax + 0x78], ebx; stc; call dword ptr [eax - 0x73]; 
0x0004d54b: dec dword ptr [ebx - 0x72e7db84]; xchg dword ptr [eax + edi*2], esi; stc; call dword ptr [eax - 0x73]; 
0x00188582: dec dword ptr [ebx - 0x72ebdb84]; inc edx; dec dword ptr [ecx - 0x762e7635]; ret 0x6c8b; 
0x00047784: dec dword ptr [ebx - 0x72ebdb84]; xchg dword ptr [eax + edi*2], esi; stc; call dword ptr [eax + 0x68]; 
0x000a28c9: dec dword ptr [ebx - 0x72ebdb8c]; xchg ah, bh; cwde; stc; call dword ptr [eax - 0x73]; 
0x000a27b4: dec dword ptr [ebx - 0x72ebdb8c]; xchg al, dh; cwde; stc; call dword ptr [eax - 0x73]; 
0x0009e206: dec dword ptr [ebx - 0x72f3db84]; xchg dword ptr [eax - 0x77], ebp; stc; call dword ptr [eax - 0x73]; 
0x001414cb: dec dword ptr [ebx - 0x72f3db8c]; xchg ah, dh; stosb byte ptr es:[edi], al; stc; call dword ptr [eax - 0x73]; 
0x0013ee7e: dec dword ptr [ebx - 0x72f3db8c]; xchg byte ptr [eax], cl; stosb byte ptr es:[edi], al; stc; call dword ptr [eax - 0x73]; 
0x00151fc8: dec dword ptr [ebx - 0x72f3dbac]; sub byte ptr [eax - 0x50], 0xf9; call dword ptr [eax + 0x68]; 
0x00151e8f: dec dword ptr [ebx - 0x72f3dbac]; sub byte ptr [eax - 0x50], 0xf9; call dword ptr [eax - 0x73]; 
0x00155f3d: dec dword ptr [ebx - 0x72f7db84]; xchg dword ptr [eax], ecx; mov bl, 0xf9; call dword ptr [eax - 0x73]; 
0x00111ebb: dec dword ptr [ebx - 0x72f7db84]; xchg dword ptr [edx], eax; stc; call dword ptr [eax - 0x73]; 
0x0014f6ff: dec dword ptr [ebx - 0x72f7db8c]; xchg byte ptr [edi + ebp*4 - 7], bl; call dword ptr [eax - 0x73]; 
0x00092b3e: dec dword ptr [ebx - 0x72fbdb84]; xchg eax, ebx; test cl, bh; call dword ptr [eax + 0x68]; 
0x00120645: dec dword ptr [ebx - 0x74abdbb4]; push esp; and al, 0xc; mov dword ptr [esp + 8], eax; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x001149e4: dec dword ptr [ebx - 0x74dfdba4]; dec esp; and al, 0x24; mov edx, eax; mov eax, 8; call dword ptr gs:[0x10]; 
0x0002cd69: dec dword ptr [ebx - 0x74e7dbbc]; jl 0x2cd95; or al, 0x89; cmp byte ptr [ebx + 0x39102444], cl; ret 0x850f; 
0x001205ff: dec dword ptr [ebx - 0x74f3dbac]; dec esp; and al, 0x54; mov dword ptr [esp + 8], eax; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x00131c14: dec dword ptr [ebx - 0x74f3dbb4]; push esp; and al, 0x10; mov dword ptr [esp + 0x1c], eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00107266: dec dword ptr [ebx - 0x74f3dbbc]; adc bh, dh; ret 0x30f; 
0x001afec3: dec dword ptr [ebx - 0x74f7dbbc]; je 0x1afeef; js 0x1aff06; ret; 
0x0014e8d3: dec dword ptr [ebx - 0x74fbdbbc]; pop eax; or byte ptr [ebp + 0x1e850fed], al; add al, byte ptr [eax]; add dh, dh; ret; 
0x0014eb76: dec dword ptr [ebx - 0x74fbdbbc]; pop eax; or dh, dh; ret; 
0x000e7d8c: dec dword ptr [ebx - 0x76abdbb4]; cli; mov dword ptr [esp + 0xc], eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x0011f8d9: dec dword ptr [ebx - 0x76cfdbb4]; cli; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00114764: dec dword ptr [ebx - 0x76dfdba4]; ret 0x6b8; 
0x00124dc4: dec dword ptr [ebx - 0x76dfdba4]; ret 0x76b8; 
0x00124874: dec dword ptr [ebx - 0x76dfdba4]; ret 0x94b8; 
0x000a0758: dec dword ptr [ebx - 0x76e3dbbc]; add al, 0x24; call esi; 
0x00081f5f: dec dword ptr [ebx - 0x76e3dbbc]; ret 0x4489; 
0x001168cb: dec dword ptr [ebx - 0x76e7dba4]; rol dword ptr [ebp - 0x47ef8125], 0x26; add byte ptr [eax], al; add bl, dl; call 0x29134964; ret; 
0x0011837b: dec dword ptr [ebx - 0x76e7dba4]; rol dword ptr [ebp - 0x47ef8125], 0x26; add byte ptr [eax], al; add bl, dl; call 0x29136414; ret; 
0x00119e1b: dec dword ptr [ebx - 0x76e7dba4]; rol dword ptr [ebp - 0x47ef8125], 0x26; add byte ptr [eax], al; add bl, dl; call 0x29137eb4; ret; 
0x00103e43: dec dword ptr [ebx - 0x76ebdbb4]; ret; 
0x00146b0b: dec dword ptr [ebx - 0x76ebdbbc]; ret 0x689; 
0x0003de92: dec dword ptr [ebx - 0x76efdb8c]; ret 0xdaf7; 
0x000c9114: dec dword ptr [ebx - 0x76efdbb4]; ret 0x1b8; 
0x000fed2e: dec dword ptr [ebx - 0x76efdbb4]; ret 0x448b; 
0x00034fb3: dec dword ptr [ebx - 0x76f3dbb4]; ret; 
0x00178029: dec dword ptr [ebx - 0x76f7db8c]; ret; 
0x00188cbf: dec dword ptr [ebx - 0x76f7dbb4]; ret 0xd2e9; 
0x0014b73e: dec dword ptr [ebx - 0x76fbdb8c]; ret; 
0x0005ced5: dec dword ptr [ebx - 0x77cefc0]; xor byte ptr [eax + ecx - 0x7b], dh; dec dword ptr [edi]; pop dword ptr [edi - 0x9fffff8]; ret 0xf40; 
0x0009ebc6: dec dword ptr [ebx - 0x78727783]; mov ah, 0x89; stc; call dword ptr [eax + 0x68]; 
0x0009ec07: dec dword ptr [ebx - 0x78727783]; mov ah, 0x89; stc; call dword ptr [eax - 0x73]; 
0x00093fe1: dec dword ptr [ebx - 0x7872dbc4]; clc; test cl, bh; call dword ptr [eax + 0x68]; 
0x00093fbf: dec dword ptr [ebx - 0x7872dbc4]; clc; test cl, bh; call dword ptr [eax - 0x73]; 
0x00027552: dec dword ptr [ebx - 0x79722b8b]; add al, 0x70; stc; call dword ptr [eax - 0x73]; 
0x001486ca: dec dword ptr [ebx - 0x7a76e3bb]; mov esp, 0x8bfffffb; inc ebp; and byte ptr [ecx - 0x4477b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0006fa19: dec dword ptr [ebx - 0x7a97dbac]; ror byte ptr [edi], cl; test dword ptr [ebx - 0x76ffffff], ebp; add ebp, ecx; ret; 
0x0004bdd9: dec dword ptr [ebx - 0x7ab7dbbc]; ror byte ptr [edi], 0x84; ret; 
0x001b362f: dec dword ptr [ebx - 0x7adbdbbc]; sal byte ptr [ebp - 0x70], 0x89; ret 0xc589; 
0x000452d6: dec dword ptr [ebx - 0x7adfdbbc]; ror byte ptr [edi], 0x94; ret 0x3c83; 
0x00146927: dec dword ptr [ebx - 0x7ae7dbbc]; ror byte ptr [ebx + 0xf102444], 0x95; ret 0xc085; 
0x000cf2b4: dec dword ptr [ebx - 0x7aefdbbc]; ror byte ptr [edi], 0x84; ret 0x14; 
0x0012e3f0: dec dword ptr [ebx - 0x7af3dbac]; ror byte ptr [edi], cl; test byte ptr [ebx + 0x6b], dl; out dx, eax; call dword ptr [ebx + 0x56]; 
0x0015cf26: dec dword ptr [ebx - 0x7c72dbe4]; mov ch, 0xf9; call dword ptr [eax - 0x73]; 
0x00149e9f: dec dword ptr [ebx - 0x7cd7dbac]; ret 0x3b04; 
0x00138c64: dec dword ptr [ebx - 0x7cdbdbb4]; les ecx, ptr [ecx + ecx*4]; ret; 
0x00161183: dec dword ptr [ebx - 0x7cdfdb84]; clc; jmp dword ptr [ebp - 0x5f]; 
0x000acbe9: dec dword ptr [ebx - 0x7cefdba4]; call 0x55758f5; add byte ptr [ecx], al; ret; 
0x000de625: dec dword ptr [ebx - 0x7cf3dbac]; ret 0x3909; 
0x00086b19: dec dword ptr [ebx - 0x7cf3dbb4]; in al, dx; or al, 0x83; ret; 
0x0015bda1: dec dword ptr [ebx - 0x7cf3dbbc]; mov byte ptr [ecx], 0xeb; ret; 
0x000f0760: dec dword ptr [ebx - 0x7cf3dbbc]; ret 0x8902; 
0x0013c4bb: dec dword ptr [ebx - 0x7d7247ab]; test al, 0xa9; stc; call dword ptr [eax - 0x73]; 
0x0017edbc: dec dword ptr [ebx - 0x8743]; inc dword ptr [ebx - 0x7872f314]; call ptr [ebx - 7]; call dword ptr [eax - 0x18]; 
0x0005dcdc: dec dword ptr [ebx - 0x874b]; call dword ptr [esi + 0x50]; 
0x0005df29: dec dword ptr [ebx - 0x8b4b]; dec dword ptr [ebp - 0x684677a]; call dword ptr [eax - 0x73]; 
0x0005df4e: dec dword ptr [ebx - 0x8b63]; dec dword ptr [ebp - 0x684677d]; call dword ptr [eax - 0x73]; 
0x0005df04: dec dword ptr [ebx - 0x8b6b]; dec dword ptr [ebp - 0x684677e]; call dword ptr [eax - 0x73]; 
0x0005d81b: dec dword ptr [ebx - 0x8b7b]; jmp dword ptr [ebp - 0x75]; 
0x0017ec2b: dec dword ptr [ebx - 0x8f63]; dec dword ptr [ebx - 0x2abb7700]; les ecx, ptr [ebx - 0xb77b]; dec dword ptr [ecx + 0x1c8d544]; ret; 
0x0014548b: dec dword ptr [ebx - 0x9363]; dec dword ptr [ebp + 0x48d4004]; ret; 
0x00032701: dec dword ptr [ebx - 0x974b]; call dword ptr [edx - 0x18]; 
0x0013b53c: dec dword ptr [ebx - 0x9b43]; dec dword ptr [ecx - 0x11b73]; push esi; ret 0xf02; 
0x0005dcb7: dec dword ptr [ebx - 0x9b7b]; dec dword ptr [ebx + 0x4589b055]; mov eax, 0xfff87ee9; call dword ptr [eax + 0x52]; 
0x00145485: dec dword ptr [ebx - 0xaf6b]; dec dword ptr [ebx - 0x9363]; dec dword ptr [ebp + 0x48d4004]; ret; 
0x0005de37: dec dword ptr [ebx - 0xb76b]; jmp dword ptr [esi - 0x7d]; 
0x0013509e: dec dword ptr [ebx - 0xbb4b]; dec dword ptr [ebp - 0x6589b7a]; call dword ptr [eax - 0x73]; 
0x00135174: dec dword ptr [ebx - 0xbb7b]; dec dword ptr [ebp - 0x10a31380]; call dword ptr [eax + 0x6a]; 
0x00181ad4: dec dword ptr [ebx - 0xef4b]; dec dword ptr [ebp - 0x645437a]; call dword ptr [eax - 0x73]; 
0x00091c03: dec dword ptr [ebx - 0xf47efb1]; add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000fd883: dec dword ptr [ecx + 0x14e82434]; pop ecx; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0017ec3d: dec dword ptr [ecx + 0x1c8d544]; ret; 
0x000fb60c: dec dword ptr [ecx + 0x1db8c2]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e7d54: dec dword ptr [ecx + 0x244c8bee]; push esp; mov edx, edi; mov dword ptr [esp + 0xc], eax; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x0018bd11: dec dword ptr [ecx + 0x245489d1]; adc al, 0x89; ret 0xca29; 
0x00105722: dec dword ptr [ecx + 0x24548bd9]; sbb byte ptr [esi - 0x7f], ah; loope 0x10572c; add esi, esi; ret; 
0x00171572: dec dword ptr [ecx + 0x25e82434]; sbb al, 0xeb; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0006b645: dec dword ptr [ecx + 0x29f829f0]; ret; 
0x00127a2c: dec dword ptr [ecx + 0x2c938d16]; jo 0x127a2a; dec dword ptr [ebx + 0x56897440]; add al, 0x89; ret 0xeac1; 
0x000fd595: dec dword ptr [ecx + 0x2e82434]; pop esp; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00134e2b: dec dword ptr [ecx + 0x31d389c1]; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret; 
0x00106ad0: dec dword ptr [ecx + 0x3efe01d0]; jmp esi; 
0x0017cc5d: dec dword ptr [ecx + 0x48891450]; add al, 0x5b; ret; 
0x00057e8c: dec dword ptr [ecx + 0x4c891f0c]; pop ds; add al, 0x83; ret; 
0x0017d2cc: dec dword ptr [ecx + 0x548b0450]; and al, 8; mov dword ptr [eax + 0xc], edx; ret; 
0x00170b9a: dec dword ptr [ecx + 0x5b102454]; pop esi; jmp eax; 
0x0007e6da: dec dword ptr [ecx + 0x5f5e5bd8]; pop ebp; ret; 
0x0005beed: dec dword ptr [ecx + 0x5f5e5bf0]; ret; 
0x00103046: dec dword ptr [ecx + 0x5f5e5bf8]; ret; 
0x0010e2bf: dec dword ptr [ecx + 0xbad0]; pushal; add cl, al; call 0xfe11bcf; dec edi; ret 0xbce9; 
0x0010d827: dec dword ptr [ecx + 0xd0b8c1]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010d983: dec dword ptr [ecx + 0xd2b8c1]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00076912: dec dword ptr [ecx + 0xfc085c6]; test dword ptr [ebx], esi; ret; 
0x00076951: dec dword ptr [ecx + 0xfc085c6]; test esp, esi; ret 0xffff; 
0x0013b542: dec dword ptr [ecx - 0x11b73]; push esi; ret 0xf02; 
0x0013b9d9: dec dword ptr [ecx - 0x11f73]; call dword ptr [ecx - 1]; 
0x00156f3d: dec dword ptr [ecx - 0x12b6b]; call dword ptr [eax - 0x18]; 
0x00155f1c: dec dword ptr [ecx - 0x137f7239]; mov dl, 0xf9; call dword ptr [eax - 0x73]; 
0x0003fe98: dec dword ptr [ecx - 0x14d3dbbc]; mov ebx, 0x2cdc858d; stc; dec dword ptr [ecx - 0x76d3dbbc]; ret 0x4489; 
0x001829b2: dec dword ptr [ecx - 0x15f7b]; jmp dword ptr [ebp - 0x5f]; 
0x000781e4: dec dword ptr [ecx - 0x162ffeff]; push edx; ret 0xffff; 
0x001aef5b: dec dword ptr [ecx - 0x16e3db84]; ret; 
0x00096dc2: dec dword ptr [ecx - 0x16e3dba4]; sub eax, 0x8dfffffe; je 0x96df5; add bh, dh; ret 0; 
0x000a7661: dec dword ptr [ecx - 0x1917dbe4]; hlt; std; jmp dword ptr [esi - 0x70]; 
0x000600e5: dec dword ptr [ecx - 0x197cdbc4]; and dh, dh; ret 0xf50; 
0x00037f4b: dec dword ptr [ecx - 0x1bf7b]; jmp dword ptr [ebp - 0x5f]; 
0x0003144d: dec dword ptr [ecx - 0x1cb4b]; dec dword ptr [ebp - 0x20dc5379]; call dword ptr [eax + 0x6a]; 
0x00031203: dec dword ptr [ecx - 0x1d34b]; jmp dword ptr [ebp - 0x75]; 
0x00031482: dec dword ptr [ecx - 0x1d77b]; jmp dword ptr [ecx]; 
0x0003147c: dec dword ptr [ecx - 0x1eb6b]; dec dword ptr [ecx - 0x1d77b]; jmp dword ptr [ecx]; 
0x00038387: dec dword ptr [ecx - 0x1f743]; dec dword ptr [ecx - 0x76267631]; ret; 
0x00033d63: dec dword ptr [ecx - 0x2d7a3f88]; je 0x33d75; mov dword ptr [esp + 0x14], eax; call edx; 
0x000d69ae: dec dword ptr [ecx - 0x361b6b]; jmp dword ptr [ebx]; 
0x0005947d: dec dword ptr [ecx - 0x361f43]; call ebx; 
0x000583ef: dec dword ptr [ecx - 0x361f4b]; call dword ptr [eax - 0x18]; 
0x00059ab2: dec dword ptr [ecx - 0x361f63]; call dword ptr [eax - 0x75]; 
0x000d76b6: dec dword ptr [ecx - 0x361f6b]; call dword ptr [eax - 0x75]; 
0x000d6ae8: dec dword ptr [ecx - 0x361f73]; call dword ptr [eax + 0x52]; 
0x000d6b99: dec dword ptr [ecx - 0x361f73]; dec dword ptr [ecx - 0x362f4b]; call dword ptr [eax - 0x18]; 
0x00058333: dec dword ptr [ecx - 0x362773]; call dword ptr [eax - 1]; 
0x000583e9: dec dword ptr [ecx - 0x362773]; dec dword ptr [ecx - 0x361f4b]; call dword ptr [eax - 0x18]; 
0x000d6b9f: dec dword ptr [ecx - 0x362f4b]; call dword ptr [eax - 0x18]; 
0x00058a89: dec dword ptr [ecx - 0x362f6b]; call dword ptr [eax - 0x75]; 
0x000d84d2: dec dword ptr [ecx - 0x362f73]; call dword ptr [eax - 0x18]; 
0x000d7845: dec dword ptr [ecx - 0x363b63]; inc dword ptr [ebx - 0x36277b]; jmp dword ptr [eax]; 
0x00058b61: dec dword ptr [ecx - 0x364373]; inc dword ptr [ebx - 0x36277b]; jmp dword ptr [eax]; 
0x000d60e6: dec dword ptr [ecx - 0x36734b]; dec dword ptr [ebx - 0x364f4b]; call dword ptr [ebx - 0x73]; 
0x000d61bc: dec dword ptr [ecx - 0x36737b]; dec dword ptr [ebp + 0x4f0fff46]; ret 0x48d; 
0x00127307: dec dword ptr [ecx - 0x36c72ea]; jne 0x127305; dec dword ptr [ebx + 0x56897440]; add al, 0x89; ret 0xeac1; 
0x000f197b: dec dword ptr [ecx - 0x4737b]; jmp dword ptr [ebp - 0x75]; 
0x0012bb4b: dec dword ptr [ecx - 0x47b6b]; call dword ptr [eax - 0x73]; 
0x0012bb3f: dec dword ptr [ecx - 0x47f7b]; dec dword ptr [ebp - 0x45b7b]; dec dword ptr [ecx - 0x47b6b]; call dword ptr [eax - 0x73]; 
0x000272ae: dec dword ptr [ecx - 0x48f0e6b0]; xchg edi, eax; cmp byte ptr [eax - 7], dh; jmp dword ptr [esi - 0x77]; 
0x00037e9e: dec dword ptr [ecx - 0x48f0f7b0]; xchg ebx, eax; and byte ptr [ebp - 7], dh; jmp dword ptr [esi - 0x77]; 
0x00027fe2: dec dword ptr [ecx - 0x48f0f7bd]; test dword ptr [eax + 0x70], ecx; stc; jmp dword ptr [esi - 0x77]; 
0x000f1ce9: dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x000f3220: dec dword ptr [ecx - 0x49b7b]; dec dword ptr [ebx - 0x49773]; inc dword ptr [ecx]; rol byte ptr [ecx], 1; ret; 
0x0012bbd1: dec dword ptr [ecx - 0x4b37b]; call dword ptr [eax - 0x73]; 
0x00134099: dec dword ptr [ecx - 0x4b37b]; call ecx; 
0x00072a87: dec dword ptr [ecx - 0x4c343]; dec dword ptr [ecx - 0x52f7b]; call dword ptr [eax - 0x18]; 
0x00072a7b: dec dword ptr [ecx - 0x4c77b]; dec dword ptr [ebp - 0x4c77b]; dec dword ptr [ecx - 0x4c343]; dec dword ptr [ecx - 0x52f7b]; call dword ptr [eax - 0x18]; 
0x000729c9: dec dword ptr [ecx - 0x4eb4b]; dec dword ptr [ecx - 0x4ff63]; dec dword ptr [ecx - 0x53373]; jmp dword ptr [ebp - 0x5f]; 
0x0007737e: dec dword ptr [ecx - 0x4ef6b]; call dword ptr [eax - 0x18]; 
0x000731ae: dec dword ptr [ecx - 0x4f343]; dec dword ptr [ebx - 0x4eb43]; call dword ptr [esi - 0x18]; 
0x000735c3: dec dword ptr [ecx - 0x4f74b]; call dword ptr [esi - 1]; 
0x000781bd: dec dword ptr [ecx - 0x4f76b]; call dword ptr [eax - 0x75]; 
0x000729cf: dec dword ptr [ecx - 0x4ff63]; dec dword ptr [ecx - 0x53373]; jmp dword ptr [ebp - 0x5f]; 
0x00077759: dec dword ptr [ecx - 0x51f73]; dec dword ptr [ebx - 0x52b73]; call dword ptr [ecx + 0x50]; 
0x000788f1: dec dword ptr [ecx - 0x52b6b]; inc dword ptr [ecx]; ret; 
0x00072a8d: dec dword ptr [ecx - 0x52f7b]; call dword ptr [eax - 0x18]; 
0x000729d5: dec dword ptr [ecx - 0x53373]; jmp dword ptr [ebp - 0x5f]; 
0x00078488: dec dword ptr [ecx - 0x5377b]; call dword ptr [eax + 0x50]; 
0x000665c5: dec dword ptr [ecx - 0x56743]; dec dword ptr [ebx + 0x15880]; add byte ptr [ecx - 0x56b7b], cl; dec dword ptr [ebp - 0x56b7b]; dec dword ptr [ecx - 0x5fb7b]; call dword ptr [eax - 0x18]; 
0x000e15f6: dec dword ptr [ecx - 0x572f0828]; sbb byte ptr [edi], cl; test byte ptr [ebp - 0x9fffffb], dh; ret; 
0x000685e6: dec dword ptr [ecx - 0x58b73]; call dword ptr [eax - 0x18]; 
0x0006dabe: dec dword ptr [ecx - 0x58b73]; call dword ptr [edx + 0x52]; 
0x0006a41b: dec dword ptr [ecx - 0x58b7b]; dec dword ptr [ebp - 0x4477b]; call dword ptr [eax - 0x18]; 
0x0006cc50: dec dword ptr [ecx - 0x5936b]; call dword ptr [eax - 0x75]; 
0x0006bb57: dec dword ptr [ecx - 0x5936b]; call dword ptr [edi - 0x18]; 
0x00068c2d: dec dword ptr [ecx - 0x59373]; call dword ptr [eax - 0x18]; 
0x00069942: dec dword ptr [ecx - 0x5976b]; call dword ptr [eax - 0x18]; 
0x0006be08: dec dword ptr [ecx - 0x59773]; call dword ptr [edx + 0x52]; 
0x00068c27: dec dword ptr [ecx - 0x59b6b]; dec dword ptr [ecx - 0x59373]; call dword ptr [eax - 0x18]; 
0x0006993c: dec dword ptr [ecx - 0x59b73]; dec dword ptr [ecx - 0x5976b]; call dword ptr [eax - 0x18]; 
0x00068179: dec dword ptr [ecx - 0x59b7b]; dec dword ptr [ebp - 0x4477b]; call dword ptr [eax - 0x18]; 
0x00068b1e: dec dword ptr [ecx - 0x5b373]; dec dword ptr [ebx - 0x58f63]; call dword ptr [edi - 0x18]; 
0x000f0ddb: dec dword ptr [ecx - 0x5bf7b]; jmp dword ptr [ebp - 0x5f]; 
0x000f805b: dec dword ptr [ecx - 0x5cf7b]; jmp dword ptr [ebp - 0x5f]; 
0x0006d092: dec dword ptr [ecx - 0x5ef73]; call dword ptr [edi - 0x18]; 
0x00066506: dec dword ptr [ecx - 0x5f363]; jmp dword ptr [ebp - 0x5f]; 
0x000665dd: dec dword ptr [ecx - 0x5fb7b]; call dword ptr [eax - 0x18]; 
0x0007bf4a: dec dword ptr [ecx - 0x6b77762f]; add byte ptr [eax], al; add byte ptr [ebx - 0x6e76a7b8], cl; mov byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0003c8df: dec dword ptr [ecx - 0x72e7dbbc]; cmp dword ptr [ecx + ebx*8], -0x21; dec dword ptr [edi]; inc esp; ret 0xe3e9; 
0x000361a7: dec dword ptr [ecx - 0x72ec142d]; je 0x361d5; add byte ptr [ebp - 0x7cd58a40], al; ret; 
0x00127b18: dec dword ptr [ecx - 0x736c72ea]; xchg dh, dh; dec dword ptr [ebx + 0x56897440]; add al, 0x89; ret 0xeac1; 
0x0010487f: dec dword ptr [ecx - 0x7401760f]; jl 0x1048ab; add al, 0xe9; sub eax, 0x31fffff7; fucomi st(3); ret 0xc901; 
0x000adec1: dec dword ptr [ecx - 0x76217609]; ret; 
0x0003838d: dec dword ptr [ecx - 0x76267631]; ret; 
0x00188589: dec dword ptr [ecx - 0x762e7635]; ret 0x6c8b; 
0x0017b521: dec dword ptr [ecx - 0x763e7606]; ret; 
0x0006bb75: dec dword ptr [ecx - 0x76658a3a]; test dword ptr [edx + edi*8 - 1], ebp; dec dword ptr [ebx - 0x59b43]; jmp dword ptr [ebp - 0x5f]; 
0x00112840: dec dword ptr [ecx - 0x768bdbbc]; ret; 
0x0014da69: dec dword ptr [ecx - 0x7693dbbc]; ret; 
0x000c5b3a: dec dword ptr [ecx - 0x769fdbac]; ret 0x52e9; 
0x00037265: dec dword ptr [ecx - 0x76a3dbbc]; ret 0xc483; 
0x000c5a42: dec dword ptr [ecx - 0x76a7dbac]; ret 0x1ce9; 
0x00051c3e: dec dword ptr [ecx - 0x76b3db84]; ret; 
0x0003fe45: dec dword ptr [ecx - 0x76d3dbbc]; ret 0x4489; 
0x0003fb30: dec dword ptr [ecx - 0x76d3dbbc]; ret 0xc189; 
0x001456e6: dec dword ptr [ecx - 0x76d3dbbc]; ret; 
0x0011245a: dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x001523c8: dec dword ptr [ecx - 0x76e7dbbc]; ret; 
0x00040120: dec dword ptr [ecx - 0x76ebdbac]; ret; 
0x00137485: dec dword ptr [ecx - 0x76ebdbbc]; ret; 
0x00123069: dec dword ptr [ecx - 0x76efdba4]; ret 0xf983; 
0x0003fbeb: dec dword ptr [ecx - 0x76f7dbbc]; ret 0xc5e9; 
0x0003fa27: dec dword ptr [ecx - 0x76fbdbbc]; ret; 
0x000945c0: dec dword ptr [ecx - 0x7872af05]; daa; inc eax; stc; call dword ptr [eax - 0x18]; 
0x000d75dc: dec dword ptr [ecx - 0x7a2e763d]; dec dword ptr [edi]; test dh, cl; add dword ptr [eax], eax; add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x00156ee9: dec dword ptr [ecx - 0x7c037607]; rcr byte ptr [edx], 0x89; ret 0x25; 
0x000600dd: dec dword ptr [ecx - 0x7c54722a]; das; stc; dec dword ptr [ecx - 0x197cdbc4]; and dh, dh; ret 0xf50; 
0x00083230: dec dword ptr [ecx - 0x7e30d621]; call dword ptr [ebx + 0xf000005]; 
0x0013b9d3: dec dword ptr [ecx - 0x836b]; dec dword ptr [ecx - 0x11f73]; call dword ptr [ecx - 1]; 
0x0005c402: dec dword ptr [ecx - 0x876b]; call dword ptr [eax - 1]; 
0x00144d52: dec dword ptr [ecx - 0x8b63]; dec dword ptr [ecx - 0x9b7b]; dec dword ptr [ecx - 0xa373]; jmp dword ptr [ebp - 0x5f]; 
0x0005bf4f: dec dword ptr [ecx - 0x8b63]; dec dword ptr [ecx - 0xbf6b]; dec dword ptr [ecx - 0x934b]; jmp dword ptr [ebp - 0x75]; 
0x0005dd38: dec dword ptr [ecx - 0x8f6b]; call dword ptr [eax - 1]; 
0x000325b9: dec dword ptr [ecx - 0x8f7b]; call dword ptr [eax + 0x56]; 
0x0005bf5b: dec dword ptr [ecx - 0x934b]; jmp dword ptr [ebp - 0x75]; 
0x000327d6: dec dword ptr [ecx - 0x9773]; call dword ptr [edx + 0x56]; 
0x00035c73: dec dword ptr [ecx - 0x977b]; call dword ptr [eax - 0x73]; 
0x00144d58: dec dword ptr [ecx - 0x9b7b]; dec dword ptr [ecx - 0xa373]; jmp dword ptr [ebp - 0x5f]; 
0x00144d5e: dec dword ptr [ecx - 0xa373]; jmp dword ptr [ebp - 0x5f]; 
0x00181052: dec dword ptr [ecx - 0xaf4b]; jmp dword ptr [ebp - 0x75]; 
0x001761e8: dec dword ptr [ecx - 0xb37b]; call dword ptr [eax + 0x56]; 
0x0005bf55: dec dword ptr [ecx - 0xbf6b]; dec dword ptr [ecx - 0x934b]; jmp dword ptr [ebp - 0x75]; 
0x0018104c: dec dword ptr [ecx - 0xbf6b]; dec dword ptr [ecx - 0xaf4b]; jmp dword ptr [ebp - 0x75]; 
0x0005c672: dec dword ptr [ecx - 0xcb6b]; inc dword ptr [eax - 0x7bf09a06]; push cs; or dword ptr [eax], eax; add byte ptr [eax - 0xcb43], al; jmp dword ptr [esi - 0x75]; 
0x00181a75: dec dword ptr [ecx - 0xe36b]; call dword ptr [eax + 0x6a]; 
0x00181a69: dec dword ptr [ecx - 0xe77b]; dec dword ptr [ebp - 0xa77b]; dec dword ptr [ecx - 0xe36b]; call dword ptr [eax + 0x6a]; 
0x0018163c: dec dword ptr [ecx - 0xeb43]; jmp dword ptr [ebp - 0x5f]; 
0x00181636: dec dword ptr [ecx - 0xef4b]; dec dword ptr [ecx - 0xeb43]; jmp dword ptr [ebp - 0x5f]; 
0x00109c79: dec dword ptr [ecx]; retf 0x5489; ret; 
0x00122844: dec dword ptr [ecx]; ror byte ptr [ecx - 0x3fcef7bf], 1; pop ebx; ret; 
0x000686a6: dec dword ptr [edi]; adc byte ptr [ebx - 0x74ffffd1], 0x85; mov eax, 0x39fffffb; ret; 
0x0010e3f8: dec dword ptr [edi]; adc dword ptr [ecx + 0x6b], -0xf; inc ebx; pop ecx; mov eax, 0xbe; int 0x80; 
0x0012879a: dec dword ptr [edi]; add byte ptr [eax], al; and eax, 0xfffff000; or eax, edx; ret; 
0x001aa4a3: dec dword ptr [edi]; add byte ptr [eax], al; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x0004a480: dec dword ptr [edi]; add byte ptr [ecx], cl; ret 0x9d74; 
0x000ca6a0: dec dword ptr [edi]; add byte ptr [ecx], cl; ret 0x9e74; 
0x0006c7c2: dec dword ptr [edi]; add dword ptr [ebp - 0x4c], -1; dec dword ptr [ebx - 0x5d343]; dec dword ptr [ecx + 0x29f829f0]; ret; 
0x000f0b08: dec dword ptr [edi]; add dword ptr [ecx + 0x44], -0xd; inc ebx; mov eax, 0xc7; call dword ptr gs:[0x10]; 
0x00028391: dec dword ptr [edi]; dec eax; ret 0x2ec3; 
0x000d61c5: dec dword ptr [edi]; dec edi; ret 0x48d; 
0x0006888e: dec dword ptr [edi]; dec edi; ret 0x8589; 
0x0005c448: dec dword ptr [edi]; dec esi; ret 0xec83; 
0x00039f05: dec dword ptr [edi]; inc ebp; call 0x2b6f6; jmp dword ptr [esi - 0x70]; 
0x0002b98b: dec dword ptr [edi]; inc ebp; ret 0x4489; 
0x000a8b03: dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a8b91: dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x0012f5b2: dec dword ptr [edi]; inc ebp; ret 0xd231; 
0x00134ffb: dec dword ptr [edi]; inc ebp; ret 0xec83; 
0x001a5e29: dec dword ptr [edi]; inc esi; ret 0x5d5e; 
0x000fdbbd: dec dword ptr [edi]; inc esp; call 0xea2ae; inc dword ptr [ebx - 0x7c72f714]; adc ecx, dword ptr [eax - 7]; call dword ptr [eax + 0x55]; 
0x000a569f: dec dword ptr [edi]; inc esp; ret 0x568d; 
0x000a8b44: dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000a89fd: dec dword ptr [edi]; inc esp; ret 0xc083; 
0x0003c8e9: dec dword ptr [edi]; inc esp; ret 0xe3e9; 
0x0015a95e: dec dword ptr [edi]; inc esp; ret 0xec83; 
0x000a5ce6: dec dword ptr [edi]; inc esp; ret 0xf821; 
0x000a119c: dec dword ptr [edi]; inc esp; ret 0xff31; 
0x000af34c: dec dword ptr [edi]; inc esp; ret; 
0x000a5334: dec dword ptr [edi]; inc esp; shl dword ptr [ecx], 1; ret 0x1a8b; 
0x001280d6: dec dword ptr [edi]; mov dh, 0x42; jnp 0x128069; xchg ebx, eax; ret; 
0x0010ace2: dec dword ptr [edi]; mov dh, 0x45; sbb al, 0x89; ret 0xeac0; 
0x0016960a: dec dword ptr [edi]; mov dh, 0x47; add dword ptr [ebp + 0x34890177], ecx; and al, 0x84; ror byte ptr [edi], 0x95; ret 0x3a3c; 
0x0005c185: dec dword ptr [edi]; mov dh, 0x57; or al, 0xf6; ret 0x7401; 
0x000d77dd: dec dword ptr [edi]; mov ebp, 0x89d189f0; ret; 
0x000e02f2: dec dword ptr [edi]; mov esi, 0x246c8903; add al, 0x83; ret; 
0x00048ebe: dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0005cedf: dec dword ptr [edi]; pop dword ptr [edi - 0x9fffff8]; ret 0xf40; 
0x0007bbfd: dec dword ptr [edi]; test ah, cl; add byte ptr [eax], al; add byte ptr [ebx + 0x7d8be045], cl; in al, 0x89; ret; 
0x000741f2: dec dword ptr [edi]; test bh, al; sbb al, 0; add byte ptr [ecx], al; ret; 
0x0004cfaf: dec dword ptr [edi]; test byte ptr [0x31000003], bl; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00130e95: dec dword ptr [edi]; test byte ptr [eax + eax - 0x137d0000], al; add al, 0x89; ret; 
0x000c263e: dec dword ptr [edi]; test byte ptr [eax + eax - 0x8be0000], dl; ret 3; 
0x0010f210: dec dword ptr [edi]; test byte ptr [eax - 0x75000000], bl; test byte ptr [eax + eax*8], ah; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x840f; 
0x001555ea: dec dword ptr [edi]; test byte ptr [edx + 0x39000001], bh; ret 0x840f; 
0x000c261b: dec dword ptr [edi]; test byte ptr [edx - 0x8ffffff], dl; ret 3; 
0x000d5b50: dec dword ptr [edi]; test byte ptr [edx], bh; or al, 0; add byte ptr [ebx - 0x363f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000d75e2: dec dword ptr [edi]; test dh, cl; add dword ptr [eax], eax; add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x000fdfcc: dec dword ptr [edi]; test dword ptr [eax + eax + 0x4f60000], ebx; inc edx; add dword ptr [esi + ecx - 0x77], esi; ret; 
0x000c22bf: dec dword ptr [edi]; test dword ptr [ebp + 0x5e000001], esp; xor eax, eax; pop ebx; ret; 
0x0012bb1a: dec dword ptr [edi]; test dword ptr [edi - 0x7cfffffe], esi; in al, dx; or byte ptr [ebp - 0x46b7b], cl; call dword ptr [eax + 0x6a]; 
0x000c23ca: dec dword ptr [edi]; test dword ptr [edx + 0x5e000000], ebx; xor eax, eax; pop ebx; ret; 
0x0004e9c6: dec dword ptr [edi]; test dword ptr [esp + edx], ecx; add byte ptr [ecx - 0x7209ce16], cl; dec ebx; rol byte ptr [eax - 0x79f0f607], 1; ret; 
0x000a6e3c: dec dword ptr [edi]; test edi, edi; aad 0xf7; call ptr [ebx + 0x5e]; pop edi; ret; 
0x000d7693: dec dword ptr [edi]; xchg ebp, eax; ret 0x9d8b; 
0x00058757: dec dword ptr [edi]; xchg ebp, eax; ret 0xb60f; 
0x00104e37: dec dword ptr [edi]; xchg ebp, eax; ret 0xc209; 
0x0005527f: dec dword ptr [edi]; xchg ebp, eax; ret 0xd689; 
0x00068467: dec dword ptr [edi]; xchg ebp, eax; ret; 
0x00067a72: dec dword ptr [edi]; xchg ebp, eax; rol byte ptr [ebx - 0x59343], 0xff; xor byte ptr [edi], cl; xchg esp, eax; ret; 
0x00189db4: dec dword ptr [edi]; xchg esp, eax; ret 0x1389; 
0x00031f59: dec dword ptr [edi]; xchg esp, eax; ret 0x4c89; 
0x001003b4: dec dword ptr [edi]; xchg esp, eax; ret 0x87eb; 
0x0016999d: dec dword ptr [edi]; xchg esp, eax; ret 0xd1e9; 
0x0007cbac: dec dword ptr [edi]; xchg esp, eax; ret; 
0x00123647: dec dword ptr [edi]; xchg esp, eax; ror byte ptr [edi], 0xb6; sal bh, 0xd8; add esp, 0xc; ret; 
0x00130d58: dec dword ptr [edi]; xor ecx, 0x41; out dx, eax; inc ebx; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x000f0a58: dec dword ptr [edi]; xor ecx, 0x44; inc ebx; mov eax, 0x41; call dword ptr gs:[0x10]; 
0x00171536: dec eax; adc al, 0x72; ret 0x4889; 
0x000c0cb2: dec eax; adc byte ptr [eax + 0x448b1470], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000bd82c: dec eax; adc byte ptr [eax + 0x448b1470], cl; and al, 8; pop esi; ret; 
0x000c0c51: dec eax; adc byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000bd7ce: dec eax; adc byte ptr [ebx + 0x5e082444], cl; ret; 
0x000a6658: dec eax; add al, 0; add byte ptr [ebx + 0x39242444], cl; ret; 
0x0019700b: dec eax; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0016f1d4: dec eax; add al, 0x50; call dword ptr [ecx + 0x10]; 
0x0017068f: dec eax; add al, 0x5b; ret; 
0x0013be18: dec eax; add al, 0x75; hlt; mov eax, dword ptr [eax + 0x18]; ret; 
0x0011c123: dec eax; add al, 0x89; push eax; or byte ptr [ebp - 0x123cf36d], cl; call dword ptr [edx - 0x73]; 
0x00092a7b: dec eax; add al, 0x8b; adc byte ptr [eax + 0xf1], bh; call dword ptr gs:[0x10]; 
0x00080d88: dec eax; add al, 0x8b; add byte ptr [ecx + 0x4c4830a], cl; pop ebx; pop esi; ret; 
0x00080a6e: dec eax; add al, 0x8b; dec eax; or byte ptr [ecx + 0x8508910], cl; mov dword ptr [eax + 0x20], ecx; ret; 
0x00087664: dec eax; add al, 0xf; mov dh, 2; ret; 
0x000e2ba3: dec eax; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x00070b65: dec eax; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x0006515e: dec eax; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; mov dword ptr [esp + 0x44], 0; jmp edx; 
0x00150b78: dec eax; add dword ptr [ebx + 0x3948244c], ecx; ret 0x830f; 
0x00150127: dec eax; add dword ptr [ebx + 0x3948245c], ecx; ret; 
0x00150da0: dec eax; add dword ptr [ebx + 0x3948245c], ecx; sal dword ptr [ebx + 0x3f], 0x39; ret; 
0x001555fe: dec eax; add dword ptr [ecx - 0x38cfdbb4], ecx; inc esp; ret 4; 
0x000a3c70: dec eax; add dword ptr [ecx - 0x72c3dbb4], ecx; inc esp; ret; 
0x001a0b5b: dec eax; add eax, 0x542b60f; sub eax, ecx; pop ebp; ret; 
0x0019f352: dec eax; add eax, 0x542b60f; sub eax, ecx; ret; 
0x000bd740: dec eax; add eax, 0x824448b; pop esi; ret; 
0x000c0bb3: dec eax; add eax, 0xc24448b; pop ebx; pop esi; ret; 
0x00128c50: dec eax; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0008e014: dec eax; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x0008ae35: dec eax; and al, 0x89; push eax; add al, 0x5b; ret; 
0x0019986a: dec eax; and al, byte ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0016ef93: dec eax; and byte ptr [ebp + 0x50], dl; call dword ptr [ecx + 8]; 
0x0017410e: dec eax; and byte ptr [edi + 0x50], dl; call dword ptr [ecx + 8]; 
0x00175e99: dec eax; call dword ptr [eax + 0x10]; 
0x00175d3f: dec eax; call dword ptr [eax + 0x14]; 
0x000285ef: dec eax; call eax; 
0x000a0cd1: dec eax; cdq; stc; call dword ptr [edx - 0x73]; 
0x00196363: dec eax; cld; mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00198363: dec eax; cld; mov dword ptr [edx - 4], ecx; mov eax, edx; pop ebx; ret; 
0x0007f351: dec eax; cli; jmp dword ptr [esi - 0x70]; 
0x0008b9a1: dec eax; cmp al, 0x80; add byte ptr [eax], al; add byte ptr [ebx - 0x3f7acbc0], cl; jne 0x8b9a0; ret; 
0x0004226c: dec eax; cmp al, 0x8b; inc eax; inc eax; ret; 
0x000da914: dec eax; daa; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0019640a: dec eax; dec dword ptr [eax + 0x448bff4a]; and al, 8; pop ebx; ret; 
0x001983fa: dec eax; dec dword ptr [eax - 0x2f7600b6]; pop ebx; ret; 
0x00152b14: dec eax; dec esi; add byte ptr [eax], al; test eax, eax; jne 0x152b27; ret; 
0x000abd16: dec eax; inc dword ptr [ebx + 0x5e5b08c4]; pop edi; pop ebp; ret; 
0x001977ea: dec eax; inc eax; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0007f730: dec eax; inc ebp; cli; jmp dword ptr [esi - 0x70]; 
0x0009e6f2: dec eax; inc ecx; stc; call dword ptr [eax - 0x18]; 
0x000ef6ec: dec eax; inc edi; stc; call dword ptr [eax - 0x18]; 
0x000a2178: dec eax; inc edx; stc; call dword ptr [eax + 0x53]; 
0x000a2254: dec eax; inc edx; stc; call dword ptr [eax + 0x56]; 
0x00042228: dec eax; insb byte ptr es:[edi], dx; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0019cf6a: dec eax; int1; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0002b750: dec eax; jb 0x2b74c; call dword ptr [eax - 0x73]; 
0x0002b781: dec eax; jb 0x2b77d; call dword ptr [eax - 0x73]; 
0x0002b7a4: dec eax; jb 0x2b7a0; call dword ptr [eax - 0x73]; 
0x0002b7c7: dec eax; jb 0x2b7c3; call dword ptr [eax - 0x73]; 
0x0002b856: dec eax; jb 0x2b852; call dword ptr [eax - 0x73]; 
0x0002b879: dec eax; jb 0x2b875; call dword ptr [eax - 0x73]; 
0x000a5825: dec eax; jmp dword ptr [ecx]; 
0x0002ab85: dec eax; jno 0x2ab81; call dword ptr [eax - 0x18]; 
0x0002b869: dec eax; jno 0x2b865; call dword ptr [eax - 0x18]; 
0x0002c475: dec eax; jno 0x2c471; call dword ptr [eax - 0x18]; 
0x0002cddf: dec eax; jno 0x2cddb; call dword ptr [eax - 0x18]; 
0x0002da2f: dec eax; jno 0x2da2b; call dword ptr [eax - 0x18]; 
0x0002e1c1: dec eax; jno 0x2e1bd; call dword ptr [eax - 0x18]; 
0x0002eced: dec eax; jno 0x2ece9; call dword ptr [eax - 0x18]; 
0x000c0c6f: dec eax; jnp 0x5b1830ba; pop esi; ret; 
0x000bd7ec: dec eax; jnp 0x5e13fc37; ret; 
0x00027fe9: dec eax; jo 0x27fe5; jmp dword ptr [esi - 0x77]; 
0x000ed821: dec eax; lahf; stc; call dword ptr [eax - 0x73]; 
0x0005abdc: dec eax; mov dword ptr [eax + 8], ebx; add esp, 4; pop ebx; pop esi; ret; 
0x0005ac88: dec eax; mov dword ptr [eax + 8], ecx; xor eax, eax; pop ebx; pop esi; ret; 
0x0009fc00: dec eax; mov eax, 0x117; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x0009f938: dec eax; mov eax, 0x118; mov ecx, ebp; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0009fb7b: dec eax; mov eax, 0x1a2; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x0009f8b5: dec eax; mov eax, 0x1a3; mov ecx, ebp; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0016ff4d: dec eax; mov eax, dword ptr [esi + 0x20]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x000d8724: dec eax; mov ecx, 0x8d8bfff5; ror cl, 0xff; dec dword ptr [ebp - 0x661f37f]; call dword ptr [eax - 0x73]; 
0x001205a9: dec eax; mov ecx, dword ptr [esp + 0x54]; mov eax, 0x135; mov edi, 8; call dword ptr gs:[0x10]; 
0x0009fc54: dec eax; mov ecx, ebp; mov dword ptr [esp + 0xc], eax; mov esi, dword ptr [esp + 0x4c]; mov eax, 0x117; call dword ptr gs:[0x10]; 
0x0009fc9c: dec eax; mov ecx, ebp; mov dword ptr [esp + 0xc], eax; mov esi, dword ptr [esp + 0x4c]; mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x0009f98c: dec eax; mov ecx, ebp; mov dword ptr [esp + 0xc], eax; mov esi, dword ptr [esp + 4]; mov eax, 0x118; call dword ptr gs:[0x10]; 
0x0009f9cc: dec eax; mov ecx, ebp; mov dword ptr [esp + 0xc], eax; mov esi, dword ptr [esp + 4]; mov eax, 0x1a3; call dword ptr gs:[0x10]; 
0x00132a31: dec eax; mov esi, dword ptr [esp + 0x50]; mov dword ptr [esp + 0x18], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x001329d2: dec eax; mov esi, dword ptr [esp + 0x50]; mov ebx, 0xc; mov dword ptr [esp + 0x18], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0012d4b8: dec eax; movsd dword ptr es:[edi], dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x000c6629: dec eax; or al, 0x83; rcl byte ptr [eax], 0x83; ret 0x8b10; 
0x000a1b1b: dec eax; or al, 0x8d; inc ecx; jmp dword ptr [ecx]; 
0x000908dd: dec eax; or byte ptr [eax], cl; mov dword ptr [eax + 0x10], edx; xor eax, eax; ret; 
0x0005bb4f: dec eax; or byte ptr [ecx + 0x10890450], cl; ret; 
0x00085a15: dec eax; or byte ptr [ecx + 0x4508910], cl; pop ebx; pop esi; ret; 
0x00080a9f: dec eax; or byte ptr [ecx + 0x58890450], cl; or byte ptr [ecx + 0x10892048], cl; pop ebx; ret; 
0x00080a71: dec eax; or byte ptr [ecx + 0x8508910], cl; mov dword ptr [eax + 0x20], ecx; ret; 
0x000906d1: dec eax; or byte ptr [ecx], al; xor eax, eax; ret; 
0x0007bf54: dec eax; pop eax; mov dword ptr [ecx + 0x88], edx; ret; 
0x000da7c2: dec eax; pop ebx; ret; 
0x00143897: dec eax; pop ecx; stc; dec dword ptr [ebp - 0x68bb36d]; call dword ptr [eax - 0x77]; 
0x000c0bf3: dec eax; pop es; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd780: dec eax; pop es; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x001a0a9f: dec eax; pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; pop ebp; ret; 
0x0019f2f2: dec eax; pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x0019a36a: dec eax; pop ss; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000c0d99: dec eax; pop ss; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd8f6: dec eax; pop ss; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0007e2f2: dec eax; push 0; push ebp; push edi; push ebx; call dword ptr [esi + 0x24]; 
0x0015a136: dec eax; push dword ptr [esp + 0x10]; call edi; 
0x00176b2d: dec eax; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x0015a132: dec eax; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x10]; call edi; 
0x0015a441: dec eax; push eax; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x40]; call esi; 
0x0019626a: dec eax; push ebx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000c0bd3: dec eax; push es; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd760: dec eax; push es; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x001a0b7b: dec eax; push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; pop ebp; ret; 
0x0019f362: dec eax; push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x001701b3: dec eax; push esi; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x000e2bce: dec eax; ret 0x15; 
0x00028393: dec eax; ret 0x2ec3; 
0x000e2caa: dec eax; ret 0x3c8d; 
0x00137653: dec eax; ret 0x4639; 
0x0003dc4d: dec eax; ret 0x56c3; 
0x00041abb: dec eax; ret 0x9387; 
0x000dc23e: dec eax; ret 0xb70f; 
0x0002ff59: dec eax; ret 0xc083; 
0x0004092f: dec eax; ret 0xc483; 
0x0013738c: dec eax; ret 0xc629; 
0x000dac02: dec eax; ret 0xef29; 
0x000406bd: dec eax; ret 0xf3c3; 
0x00125afe: dec eax; ret 0xf8c1; 
0x001a6d43: dec eax; ret 0xff3; 
0x0008d0d3: dec eax; ret 0xff50; 
0x0012409b: dec eax; ret 0xfff9; 
0x001a6ca3: dec eax; ret; 
0x00080f81: dec eax; sbb byte ptr [ebp + 0x88a8], cl; add byte ptr [ebp + 0x84b8], cl; add byte ptr [ebp - 0x9fa8b37], al; ret 0x7408; 
0x000c0d6b: dec eax; sbb byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000bd8d8: dec eax; sbb byte ptr [ebx + 0x5e082444], cl; ret; 
0x00171e9c: dec eax; sbb byte ptr [ecx + 0x1b81058], cl; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x001518f8: dec eax; sbb byte ptr [ecx - 0x7cff6abc], cl; ret 0x3b01; 
0x0014b75d: dec eax; scasb al, byte ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x000fae0b: dec eax; stc; call dword ptr [eax + 0x53]; 
0x000fdac7: dec eax; stc; call dword ptr [eax + 0x55]; 
0x00085e42: dec eax; stc; call dword ptr [eax - 0x18]; 
0x0010e36d: dec eax; stc; call dword ptr [eax - 0x18]; cli; pop esp; bnd jmp dword ptr [esi - 0x70]; 
0x00106b42: dec eax; stc; call dword ptr [eax - 0x77]; 
0x000fae68: dec eax; stc; call dword ptr [eax - 1]; 
0x00109793: dec eax; stc; call dword ptr [edx - 1]; 
0x00106b3c: dec eax; stc; dec dword ptr [ebp - 0x6b7e671]; call dword ptr [eax - 0x77]; 
0x0006064b: dec eax; std; call dword ptr [eax - 0x73]; 
0x0017b1b4: dec eax; sub edi, esp; call dword ptr [eax - 0x73]; 
0x0008c92c: dec eax; xor byte ptr [ebx - 0x3f7acfc0], cl; jne 0x8c948; ret; 
0x000aeb12: dec ebp; aam 0x83; ret 0xf01; 
0x00196c58: dec ebp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196ca7: dec ebp; add al, 0; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x000a7e4a: dec ebp; add byte ptr [ecx], ch; ret 0xd801; 
0x000fef33: dec ebp; add byte ptr [edi], cl; xchg ebp, eax; ret 0xd201; 
0x000fd3b7: dec ebp; add byte ptr [edi], cl; xchg ebp, eax; rol byte ptr [ebx - 0x3ffefb3c], 0x5b; pop esi; ret; 
0x0004a34e: dec ebp; add eax, 0x8d500000; xchg eax, ecx; ja 0x4a351; call dword ptr [eax - 0x18]; 
0x0004d609: dec ebp; add eax, 0x8d500000; xchg eax, ecx; ja 0x4d60c; call dword ptr [eax - 0x18]; 
0x00051215: dec ebp; add eax, 0x8d500000; xchg eax, ecx; ja 0x51218; call dword ptr [eax - 0x18]; 
0x00059ceb: dec ebp; add eax, 0x8d500000; xchg eax, ecx; ja 0x59cee; call dword ptr [eax - 0x18]; 
0x000ca44d: dec ebp; add eax, 0x8d500000; xchg eax, ecx; ja 0xca450; call dword ptr [eax - 0x18]; 
0x000d0ee1: dec ebp; add eax, 0x8d500000; xchg eax, ecx; ja 0xd0ee4; call dword ptr [eax - 0x18]; 
0x001948ad: dec ebp; add eax, dword ptr [eax]; add byte ptr [ecx + 0x5b5e5fd0], cl; ret; 
0x0009cb24: dec ebp; add esp, 0x124; pop ebx; pop esi; ret; 
0x001107cf: dec ebp; dec ecx; stc; call dword ptr [eax - 0x18]; 
0x000debf2: dec ebp; lea edx, [esp + 0x2c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0013b3cc: dec ebp; mov byte ptr [ecx - 0x836b], cl; call dword ptr [esi + 0x6a]; 
0x0013b35c: dec ebp; mov byte ptr [ecx - 0x837b], cl; call dword ptr [ebx + 0x6a]; 
0x0009cfd2: dec ebp; mov dword ptr [esi + 0x10], edx; pop ebx; pop esi; ret; 
0x0005404d: dec ebp; mov eax, 0x4f8d0103; add al, 0xf; xchg edx, eax; ret 0x789; 
0x0005d43f: dec ebp; mov eax, 0x8910c483; ret 0x458b; 
0x00153a88: dec ebp; mov word ptr [ebp - 0x64e8b7f], cs; call dword ptr [eax - 0x73]; 
0x0013b9cc: dec ebp; mov word ptr [ebp - 0x9773], cs; dec dword ptr [ecx - 0x836b]; dec dword ptr [ecx - 0x11f73]; call dword ptr [ecx - 1]; 
0x000b93e0: dec ebp; or byte ptr [0x5cc18100], cl; cmp dword ptr [ecx], edx; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00133c97: dec ebp; out dx, eax; call dword ptr [eax - 0x18]; 
0x0012fb19: dec ebp; push esi; push ebx; call dword ptr gs:[0x10]; 
0x0005ffdc: dec ebp; ret 0xb60f; 
0x00031a81: dec ebp; ret 0xc389; 
0x000a6c62: dec ebp; ret 0xc689; 
0x00031a1d: dec ebp; ret 0xec83; 
0x00126fed: dec ebp; stc; call dword ptr [eax + 0x55]; 
0x0018aaaf: dec ebp; xor bh, bl; jmp dword ptr [esi - 0x70]; 
0x00060795: dec ebp; xor bh, cl; call dword ptr [eax + 0x6a]; 
0x000f04ee: dec ebp; xor cl, bh; call dword ptr [eax - 0x77]; 
0x00143ccf: dec ebp; xor cl, bh; call dword ptr [edx - 0x46]; 
0x0005df94: dec ebp; xor ecx, edi; call dword ptr [eax - 0x18]; 
0x000a133a: dec ebx; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x001525cb: dec ebx; adc byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x0010d4e9: dec ebx; add al, 0; add dh, dh; ret 0xf20; 
0x001969bb: dec ebx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0006868f: dec ebx; add al, 0x8b; adc ecx, dword ptr [ecx - 0x5db73]; jmp dword ptr [esi - 0x77]; 
0x000e7c9f: dec ebx; add byte ptr [eax], al; add bh, dh; fadd dword ptr [ebx + 0x440fdafb]; ret 0x548b; 
0x001217f1: dec ebx; add byte ptr [eax], al; add bl, ch; ret; 
0x0011fcd1: dec ebx; add dword ptr [eax], eax; add byte ptr [ebx + 0x3108245c], cl; leave; call dword ptr gs:[0x10]; 
0x000d9651: dec ebx; add dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; ret; 
0x0002a8cf: dec ebx; add dword ptr [eax], eax; add dh, dh; ret 0xf08; 
0x0008e8ca: dec ebx; add eax, 0x548b001b; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x290], edx; ret; 
0x0009b75f: dec ebx; add esp, 0x124; pop ebx; pop esi; ret; 
0x00114754: dec ebx; add esp, 0x14; pop ebx; pop esi; ret; 
0x0009c24b: dec ebx; add esp, 0x38; pop ebx; ret; 
0x0019063f: dec ebx; clc; inc dword ptr [ebx - 0x73ee33c]; pop ds; ret; 
0x00160a51: dec ebx; daa; in al, dx; jmp dword ptr [ebp - 0x75]; 
0x00123d11: dec ebx; dec edx; stc; call dword ptr [eax + 0x6a]; 
0x000b3b11: dec ebx; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0013d1a1: dec ebx; idiv bh; jmp dword ptr [esi - 0x70]; 
0x0013d0a1: dec ebx; idiv edi; jmp dword ptr [esi - 0x70]; 
0x000af9f8: dec ebx; in al, 0x83; ret 0x8301; 
0x000a08cb: dec ebx; in eax, 0x19; add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [0x3fc], bh; jbe 0xa08e0; ret; 
0x000a0acb: dec ebx; jecxz 0xa0ae7; add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [ebx + 0x67650f8], al; ret; 
0x001abae4: dec ebx; lea eax, [eax + 9]; pop edi; ret; 
0x001ab184: dec ebx; lea eax, [ecx + 0xa]; ret; 
0x001aaac4: dec ebx; lea eax, [edi + 9]; pop edi; ret; 
0x00090967: dec ebx; or al, 0x89; clc; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0004e9d2: dec ebx; rol byte ptr [eax - 0x79f0f607], 1; ret; 
0x0015197f: dec ebx; sbb byte ptr [ebx + 0x478910c4], al; adc al, 0x89; ret 0xc985; 
0x00126f4b: dec ebx; stc; call dword ptr [eax + 0x55]; 
0x001aa669: dec ecx; adc byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x001aa681: dec ecx; adc byte ptr [esi + 0xf], ah; xlatb; ret; 
0x00196e4e: dec ecx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0006dc67: dec ecx; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000b5b57: dec ecx; add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000b5cb7: dec ecx; add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000b1777: dec ecx; add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000b18d7: dec ecx; add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x0010c2bf: dec ecx; add esp, 0x28; pop ebx; ret; 
0x000c1821: dec ecx; and byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x316575c0], 0xc0; ret; 
0x0012c14f: dec ecx; cld; call dword ptr [eax - 0x73]; 
0x0007f199: dec ecx; cli; jmp dword ptr [esi - 0x70]; 
0x0018c503: dec ecx; cmpsb byte ptr [esi], byte ptr es:[edi]; out dx, eax; jmp dword ptr [esi - 0x70]; 
0x000708a4: dec ecx; fistp qword ptr [ecx]; ret 0x8d0f; 
0x000b0a87: dec ecx; imul byte ptr [ecx]; ret 0x280f; 
0x000b247b: dec ecx; imul byte ptr [ecx]; ret 0xc301; 
0x000b0bb7: dec ecx; imul dword ptr [ecx]; ret 0x280f; 
0x000b25db: dec ecx; imul dword ptr [ecx]; ret 0xc301; 
0x000e4e18: dec ecx; in al, 0xff; call dword ptr [esi + 0x51]; 
0x00052f06: dec ecx; insb byte ptr es:[edi], dx; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x000c2ffc: dec ecx; jne 0xc2ff8; pop esi; ret; 
0x000e79dc: dec ecx; lcall 0, 0xaa870f3b; add byte ptr [eax + 0x194], bh; call dword ptr gs:[0x10]; 
0x00098352: dec ecx; lcall 0, 0xc4870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x00098f68: dec ecx; lcall 0, 0xc6870f3b; add byte ptr [ebx - 0x5e9ae3a9], cl; push 0x39000000; ret 0x6974; 
0x00098ce5: dec ecx; lcall 1, 0x39870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x0005a5f3: dec ecx; or byte ptr [ecx], bh; retf 0x820f; mov edx, 0x89000000; aad 0x89; ret 0xe889; 
0x000b5cf7: dec ecx; pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000b1917: dec ecx; pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x00157307: dec ecx; pop esi; stc; call dword ptr [eax - 0x18]; 
0x000fb1d6: dec ecx; push edx; mov edx, 0x20; cmovne eax, edx; ret; 
0x000b5cd7: dec ecx; push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000b18f7: dec ecx; push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000e3cc5: dec ecx; ret 0x1c8d; 
0x00064d87: dec ecx; ret 0x4489; 
0x000657dd: dec ecx; ret 0x4c89; 
0x000e38aa: dec ecx; ret 0x5c89; 
0x0006313e: dec ecx; ret 0x7489; 
0x00123696: dec ecx; ret 0x8dc3; 
0x000e32c1: dec ecx; ret 0xc101; 
0x000e5dc8: dec ecx; ret 0xc483; 
0x00025465: dec ecx; ret 0xc789; 
0x000e4a29: dec ecx; ret 0xc8d; 
0x000675f8: dec ecx; ret 0xe883; 
0x000290b0: dec ecx; ret 0xec83; 
0x000292ab: dec ecx; ret; 
0x0013a6cc: dec ecx; stc; call dword ptr [eax + 0x57]; 
0x00111440: dec ecx; stc; call dword ptr [eax + 0x6a]; 
0x0010f157: dec ecx; stc; call dword ptr [eax - 0x18]; 
0x00112452: dec ecx; stc; call dword ptr [eax - 0x18]; in eax, 0xde; dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x00111da5: dec ecx; stc; call dword ptr [eax - 0x18]; ret 0xf222; 
0x00110bcb: dec ecx; stc; call dword ptr [eax - 0x73]; 
0x00176606: dec ecx; stc; call dword ptr [edi + 0x56]; 
0x00128e76: dec ecx; stc; jmp dword ptr [ebp - 0x75]; 
0x00084c2f: dec ecx; stc; jmp dword ptr [esi - 0x70]; 
0x0018f043: dec ecx; xor al, 0xf3; call dword ptr [edi - 1]; 
0x000d96c4: dec edi; adc al, 0xf; test esp, edx; add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x000b9b5f: dec edi; adc byte ptr [eax + 0x5e5f1457], cl; pop ebx; ret; 
0x00091c05: dec edi; adc byte ptr [eax + 0xf0], bh; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000bb1bc: dec edi; adc byte ptr [ebp + 0x5e5f1147], cl; pop ebx; ret; 
0x000bb1de: dec edi; adc byte ptr [ebp + 0x5e5f1247], cl; pop ebx; ret; 
0x000bb21c: dec edi; adc byte ptr [ebp + 0x5e5f1447], cl; pop ebx; ret; 
0x000b9adc: dec edi; adc byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000d96af: dec edi; adc byte ptr [edi], cl; test ecx, ebp; add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x000c155c: dec edi; adc byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x315a75c0], 0xc0; pop edi; ret; 
0x001a47ed: dec edi; adc eax, dword ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00049a9f: dec edi; add al, 0; add byte ptr [ecx], dh; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00054052: dec edi; add al, 0xf; xchg edx, eax; ret 0x789; 
0x001a9d1d: dec edi; add al, byte ptr [eax]; add byte ptr [eax + 0x77850f02], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf02; 
0x000e6a19: dec edi; add byte ptr [eax], al; add cl, ch; ret 0xfffd; 
0x0008c745: dec edi; add dword ptr [eax], eax; add byte ptr [ebx + 0x6a04ec], al; push 0; push esi; call dword ptr [ebp + 0x2c]; 
0x0005e78d: dec edi; add dword ptr [eax], eax; add dh, dh; ret 0xf50; 
0x000546a5: dec edi; add dword ptr [ecx - 0x7cfb69b4], ecx; ret 0x8501; 
0x000bb150: dec edi; add eax, 0x5f0d478d; pop esi; pop ebx; ret; 
0x000ec25d: dec edi; add eax, dword ptr [eax]; add byte ptr [ecx], bh; ret; 
0x0014e1a8: dec edi; add esi, esi; ret; 
0x000ca65d: dec edi; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000d9724: dec edi; and al, 0x75; js 0xd9788; pop esi; ret; 
0x00199a63: dec edi; and byte ptr [eax + eax], al; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000b9ce6: dec edi; and byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000d970f: dec edi; and byte ptr [edi], cl; test dword ptr [ecx + 0x5f000000], ecx; pop esi; ret; 
0x000d9794: dec edi; cmp al, 0x75; or byte ptr [edi + 0x5e], bl; ret; 
0x000d9789: dec edi; cmp byte ptr [ebp + 0x13], dh; pop edi; pop esi; ret; 
0x00152ec2: dec edi; hlt; jmp dword ptr [ebp - 0x75]; 
0x0014563d: dec edi; idiv bh; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; ret; 
0x001975e3: dec edi; inc edx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000bb1fc: dec edi; jge 0x5e6ac54a; pop ebx; ret; 
0x000b9b1c: dec edi; maxps xmm3, xmmword ptr [esi + 0x5b]; ret; 
0x0013ed76: dec edi; or byte ptr [ebx + 0x5e], bl; pop edi; ret 4; 
0x000d9679: dec edi; or byte ptr [edi], cl; test dword ptr [edi], ebx; add dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; ret; 
0x00098039: dec edi; or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x000b9ab0: dec edi; pop es; pop edi; pop esi; pop ebx; ret; 
0x000b9c26: dec edi; pop ss; pop edi; pop esi; pop ebx; ret; 
0x0016577b: dec edi; popal; stc; call dword ptr [eax - 0x18]; 
0x0016590e: dec edi; popal; stc; call dword ptr [eax - 0x73]; 
0x00094f16: dec edi; push 0xc24548b; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00196063: dec edi; push ebp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000b9a90: dec edi; push es; pop edi; pop esi; pop ebx; ret; 
0x000c6694: dec edi; ret 0x2ec3; 
0x0014c174: dec edi; ret 0x4189; 
0x000d61c7: dec edi; ret 0x48d; 
0x000fee7b: dec edi; ret 0x568b; 
0x00068890: dec edi; ret 0x8589; 
0x00173a41: dec edi; ret 0x8966; 
0x00123d0c: dec edi; ret 0x8d50; 
0x0010e2cd: dec edi; ret 0xbce9; 
0x000c66b3: dec edi; ret 0xc35f; 
0x000570ee: dec edi; ret 0xdb31; 
0x0006d017: dec edi; ret 0xff31; 
0x000ffccd: dec edi; ret; 
0x00109848: dec edi; ror byte ptr [ebx + 0x39642444], 1; ret 0x8e0f; 
0x000e7fcd: dec edi; sbb al, 0x89; dec esi; sbb al, 0x39; ret 0x8d0f; 
0x000d96f4: dec edi; sbb al, 0xf; test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x000bb2c6: dec edi; sbb byte ptr [ebp + 0x5e5f1947], cl; pop ebx; ret; 
0x000bb2e8: dec edi; sbb byte ptr [ebp + 0x5e5f1a47], cl; pop ebx; ret; 
0x000bb336: dec edi; sbb byte ptr [ebp + 0x5e5f1c47], cl; pop ebx; ret; 
0x000e7fc3: dec edi; sbb byte ptr [ecx - 0x76efdbb4], cl; dec esi; sbb byte ptr [ebx + 0x4e891c4f], cl; sbb al, 0x39; ret 0x8d0f; 
0x000b9be6: dec edi; sbb byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000d96d9: dec edi; sbb byte ptr [edi], cl; test dword ptr [edi + 0x5f000000], edi; pop esi; ret; 
0x001270f9: dec edi; stc; call dword ptr [eax + 0x55]; 
0x0018939a: dec edi; stc; call dword ptr [eax - 0x18]; 
0x0012712b: dec edi; stc; call dword ptr [ecx + 0x51]; 
0x00127145: dec edi; stc; call dword ptr [edx + 0x52]; 
0x0009f0a4: dec edi; stc; dec dword ptr [ebx - 0x78727783]; mov ah, 0x89; stc; call dword ptr [eax + 0x68]; 
0x00188df7: dec edi; sti; jmp dword ptr [esi - 0x70]; 
0x000d9744: dec edi; sub al, 0x75; pop eax; pop edi; pop esi; ret; 
0x000d9739: dec edi; sub byte ptr [ebp + 0x63], dh; pop edi; pop esi; ret; 
0x001a9b30: dec edi; test dh, 4; jne 0x1a9b84; add eax, 0xb; ret; 
0x000c08de: dec edi; xchg ebx, eax; or al, 0; add ecx, 0x10c712; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000d9774: dec edi; xor al, 0x75; sub byte ptr [edi + 0x5e], bl; ret; 
0x000d975f: dec edi; xor byte ptr [ebp + 0x3d], dh; pop edi; pop esi; ret; 
0x000c14aa: dec edi; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x0018a6d4: dec edi; xor cl, bh; call dword ptr [eax - 0x18]; 
0x000530ab: dec edi; xor cl, bh; call dword ptr [edi + 0x6a]; 
0x0003c3fe: dec edx; adc al, 0x89; push 0xc; mov dword ptr [edx + 0x18], eax; ret; 
0x0017ca7c: dec edx; adc al, 1; fmul dword ptr [ecx - 0x2776f3be]; pop ebx; ret; 
0x00040736: dec edx; adc byte ptr [ecx + 0x5e5b145a], cl; pop edi; ret; 
0x000b326e: dec edx; adc byte ptr [edi], cl; test dword ptr [edx + 0x5f000005], ecx; pop ebx; ret; 
0x000b765f: dec edx; adc byte ptr [edi], cl; test ecx, ebp; add eax, 0x38800000; add dword ptr [ebx + 0x5b5fffd8], eax; ret; 
0x0005b500: dec edx; add al, 0x5b; pop esi; pop edi; ret; 
0x00133b8b: dec edx; add al, 0x80; cmp dword ptr [eax], eax; je 0x133b98; ret; 
0x000ee57e: dec edx; add al, 0x83; ret 0x8301; 
0x0005c601: dec edx; add al, 0x83; ret 0x8304; 
0x0013a794: dec edx; add al, 0x83; ret 0x8518; 
0x001b623c: dec edx; add al, 0x83; ret 0xc104; 
0x000811f9: dec edx; add al, 0x89; or byte ptr [ebx + 0x5f5e5b02], cl; ret; 
0x001216b2: dec edx; add al, 0x89; ret; 
0x000b38bc: dec edx; add cl, byte ptr [edi]; test dword ptr [0x5bffffff], edi; ret; 
0x001795d4: dec edx; add dword ptr [ecx - 0x46f076fd], ecx; ret; 
0x000b34ba: dec edx; add dword ptr [edi], ecx; test dword ptr [esi], edi; add eax, dword ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x000b3520: dec edx; add eax, 0x2d8850f; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000b5b60: dec edx; add eax, 0x5f0c428d; ret; 
0x000b3502: dec edx; add ecx, dword ptr [edi]; test esi, esi; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x000abf72: dec edx; add word ptr [eax], ax; add esp, 0x18; pop ebx; ret; 
0x001ac2a6: dec edx; cld; jne 0x1ac2b0; pop ebx; ret; 
0x001a7f68: dec edx; cld; mov eax, 0; jne 0x1a81b0; pop ebx; ret; 
0x00196366: dec edx; cld; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00198366: dec edx; cld; mov eax, edx; pop ebx; ret; 
0x0017cab7: dec edx; cld; mov ecx, 1; mov dword ptr [eax + 0xc], edx; mov eax, ecx; ret; 
0x000a9491: dec edx; cmc; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0019649e: dec edx; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0019640d: dec edx; dec dword ptr [ebx + 0x5b082444]; ret; 
0x000e2ba2: dec edx; dec eax; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x00126f9b: dec edx; dec esp; stc; call dword ptr [eax + 0x55]; 
0x000fb28f: dec edx; inc ecx; add byte ptr [esi + ebp + 0x31], dh; rol byte ptr [ecx - 0x52053106], 0x1b; setne al; ret; 
0x0011f6fd: dec edx; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0005ad3a: dec edx; or al, 0; add esp, 0x1c; ret; 
0x000b3234: dec edx; or al, 0xf; test esp, eax; add eax, 0x5b5f0000; ret; 
0x00057452: dec edx; or al, byte ptr [eax]; add byte ptr [ebx - 0x36477b], cl; jmp dword ptr [ebp - 0x75]; 
0x000c01cf: dec edx; or byte ptr [eax - 0x776ef86], cl; pop ebx; pop edi; ret; 
0x000908c2: dec edx; or byte ptr [eax], cl; mov dword ptr [edx + 0x10], eax; mov eax, ecx; ret; 
0x000b788b: dec edx; or byte ptr [ebp + 0x5b5f1042], cl; ret; 
0x000e820d: dec edx; or byte ptr [ebp - 0x17f48a37], al; push 0x89fffffc; ret 0xc085; 
0x000958fd: dec edx; or byte ptr [ebx + 0x47521f8], al; add dword ptr [edx + 4], 1; add esp, 0xc; ret; 
0x001b6d4a: dec edx; or byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret 4; 
0x000b3584: dec edx; or dword ptr [edi], ecx; test dword ptr [edx + eax], esi; add byte ptr [edi + 0x5b], bl; ret; 
0x000b35f8: dec edx; or eax, 0x200850f; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000b39e4: dec edx; or ecx, dword ptr [edi]; test dword ptr [0x5bfffffe], edx; ret; 
0x00099ee1: dec edx; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x000b3560: dec edx; pop es; jne 0xb3800; pop edi; pop ebx; ret; 
0x000b3960: dec edx; pop es; jne 0xb3801; pop ebx; ret; 
0x000b5ba0: dec edx; pop es; lea eax, [edx + 0xe]; pop edi; ret; 
0x000b5d00: dec edx; pop es; lea eax, [edx + 0xe]; ret; 
0x000b17c0: dec edx; pop es; mov eax, edi; pop edi; ret; 
0x000b4383: dec edx; pop es; mov eax, edx; pop ebx; ret; 
0x000b1920: dec edx; pop es; mov eax, edx; ret; 
0x000b3628: dec edx; push cs; jne 0xb3800; pop edi; pop ebx; ret; 
0x000b3a58: dec edx; push cs; jne 0xb3801; pop ebx; ret; 
0x00034a9f: dec edx; push es; add byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret; 
0x000b3542: dec edx; push es; jne 0xb3800; pop edi; pop ebx; ret; 
0x000b3942: dec edx; push es; jne 0xb3801; pop ebx; ret; 
0x000b5b80: dec edx; push es; lea eax, [edx + 0xd]; pop edi; ret; 
0x000b5ce0: dec edx; push es; lea eax, [edx + 0xd]; ret; 
0x000b17a0: dec edx; push es; mov eax, edi; pop edi; ret; 
0x000b1900: dec edx; push es; mov eax, edx; ret; 
0x001392ed: dec edx; push esi; stc; call dword ptr [eax - 0x75]; 
0x00042bcc: dec edx; ret 0x1f; 
0x00036e5a: dec edx; ret; 
0x0005675f: dec edx; rol byte ptr [eax - 0x79f0f607], 1; xchg esi, eax; add dword ptr [eax], eax; add byte ptr [ebx - 0x362743], al; call dword ptr [eax]; 
0x00124b30: dec edx; stc; call dword ptr [eax + 0x50]; 
0x001925ef: dec edx; stc; call dword ptr [eax + 0x53]; 
0x00123d12: dec edx; stc; call dword ptr [eax + 0x6a]; 
0x0011bc62: dec edx; stc; call dword ptr [eax - 0x18]; 
0x001266d4: dec edx; stc; call dword ptr [eax - 0x39]; 
0x001257c2: dec edx; stc; call dword ptr [eax - 0x73]; 
0x00123da9: dec edx; stc; call dword ptr [eax - 1]; 
0x00124ad6: dec edx; stc; call dword ptr [edx - 0x77]; 
0x00125d19: dec edx; stc; jmp dword ptr [ebp - 0x75]; 
0x00196532: dec edx; std; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00198522: dec edx; std; mov byte ptr [edx - 1], al; mov eax, edx; pop ebx; ret; 
0x001963b7: dec edx; sti; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001983b7: dec edx; sti; mov dword ptr [edx - 4], eax; mov eax, edx; pop ebx; ret; 
0x0012c535: dec edx; sub esp, 4; push edi; push 2; push ebx; call esi; 
0x000c1ca9: dec edx; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x0016bd87: dec esi; adc al, 0x39; ror byte ptr [edi], 1; dec esp; ret 0xec83; 
0x00109c65: dec esi; adc al, 0x8b; push esp; ret; 
0x0009cf55: dec esi; adc byte ptr [ebx + 0x5e], bl; ret; 
0x00127ee7: dec esi; add al, 0xd0; call 0x88145f72; inc esi; or byte ptr [ebx - 0x7bf0fe01], al; ret 0xfff5; 
0x0015763d: dec esi; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x00152b8b: dec esi; add byte ptr [eax], al; mov eax, edx; pop ebx; pop esi; ret; 
0x00152b15: dec esi; add byte ptr [eax], al; test eax, eax; jne 0x152b27; ret; 
0x0002e010: dec esi; add dword ptr [eax], eax; add byte ptr [ebx - 0x72c7db84], cl; xchg dword ptr [edx + ebp*2], ebp; stc; call dword ptr [eax - 0x73]; 
0x000bd737: dec esi; add eax, 0x130f66; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x001a9b35: dec esi; add eax, 0xb; ret; 
0x0012f111: dec esi; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x00103024: dec esi; and byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0008976f: dec esi; and byte ptr [ecx], ch; rol dword ptr [ebx + 0x505104ec], 0x56; call edx; 
0x000d9791: dec esi; cmp al, 0x39; dec edi; cmp al, 0x75; or byte ptr [edi + 0x5e], bl; ret; 
0x001af658: dec esi; idiv edi; inc dword ptr [ebx - 0x71f0e008]; mov eax, dword ptr [0x89000008]; ret; 
0x0006144e: dec esi; inc esi; add al, byte ptr [eax]; add esp, 0x2c; ret; 
0x00158e15: dec esi; int1; call dword ptr [eax - 0x73]; 
0x0005b51e: dec esi; mov edi, ebp; dec dword ptr [ebp - 0x6866b7a]; call dword ptr [eax - 0x73]; 
0x00083727: dec esi; or al, 0x89; ret 0x48d; 
0x0015f942: dec esi; or byte ptr [ebx - 0x76dbdbb4], cl; fisubr dword ptr [ecx]; ret 0xca39; 
0x0008fbbf: dec esi; or byte ptr [ebx - 0x76fbdbac], cl; ret; 
0x00138be3: dec esi; or byte ptr [ecx - 0x76e3dbbc], cl; ret; 
0x00099ddd: dec esi; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x000fb2e4: dec esi; push esp; inc esi; push ebx; setne al; ret; 
0x0010df74: dec esi; ret 0x15e9; 
0x000fc43f: dec esi; ret 0x4489; 
0x0009d7ba: dec esi; ret 0x578b; 
0x0009d7d3: dec esi; ret 0x8389; 
0x00173b98: dec esi; ret 0x8966; 
0x00123ef4: dec esi; ret 0x9ae9; 
0x0012a913: dec esi; ret 0x9ce9; 
0x00123d91: dec esi; ret 0xc931; 
0x00111921: dec esi; ret 0xe883; 
0x0005c44a: dec esi; ret 0xec83; 
0x000391ed: dec esi; ret; 
0x000d96f1: dec esi; sbb al, 0x39; dec edi; sbb al, 0xf; test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x000e7fd0: dec esi; sbb al, 0x39; ret 0x8d0f; 
0x000e7fca: dec esi; sbb byte ptr [ebx + 0x4e891c4f], cl; sbb al, 0x39; ret 0x8d0f; 
0x000df865: dec esi; sbb byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x00127074: dec esi; stc; call dword ptr [eax + 0x55]; 
0x0002759b: dec esi; sub ecx, edi; call dword ptr [eax - 0x18]; 
0x000d9771: dec esi; xor al, 0x39; dec edi; xor al, 0x75; sub byte ptr [edi + 0x5e], bl; ret; 
0x00069d06: dec esi; xor al, byte ptr [eax]; add byte ptr [ebx - 0x5ab4b], cl; dec dword ptr [ebx - 0x58f7b]; jmp dword ptr [ebp - 0x75]; 
0x0004e9c9: dec esp; adc al, 0; add byte ptr [ecx - 0x7209ce16], cl; dec ebx; rol byte ptr [eax - 0x79f0f607], 1; ret; 
0x000f16e0: dec esp; adc al, 0xfc; add cl, ch; ret 0xfff9; 
0x00041525: dec esp; add al, 0; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0017ed69: dec esp; add al, 0xfc; add cl, ch; ret 0xfffc; 
0x0009c132: dec esp; add al, byte ptr [eax]; add byte ptr [ebp - 0x1a2d237d], cl; jmp dword ptr [ebp - 0x5d]; 
0x00164bf0: dec esp; add bh, bh; jmp dword ptr [ebp - 0x75]; 
0x00122ff1: dec esp; add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x00065330: dec esp; add byte ptr [ecx], ch; retf 0x490f; ret 0x4489; 
0x0015835c: dec esp; add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x448b; 
0x0004afab: dec esp; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x001775c9: dec esp; add dword ptr [eax], eax; add byte ptr [edx + 0x57], dl; call dword ptr [eax + 4]; 
0x0004463a: dec esp; add dword ptr [ebx + 0x394c2444], ecx; ret 0x8d0f; 
0x000abf40: dec esp; add dword ptr gs:[eax], eax; add esp, 0x18; pop ebx; ret; 
0x00064ba4: dec esp; add edi, dword ptr [eax + edx*4]; mov edx, edi; mov edi, ecx; jmp edx; 
0x000c62a8: dec esp; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0010c21c: dec esp; add esp, 0x28; pop ebx; ret; 
0x00194451: dec esp; and al, 0x10; add eax, ecx; pop ebx; ret; 
0x00121fe9: dec esp; and al, 0x10; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x0012e406: dec esp; and al, 0x10; mov eax, 0x1b3; int 0x80; 
0x0012d6ad: dec esp; and al, 0x10; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x0008d846: dec esp; and al, 0x10; mov eax, dword ptr [eax + 4]; add esp, 0xc; jmp eax; 
0x0017c7b6: dec esp; and al, 0x10; mov eax, dword ptr [edx + 4]; push ecx; push edx; call dword ptr [eax + 0x24]; 
0x0017bd06: dec esp; and al, 0x10; mov eax, dword ptr [edx + 4]; push ecx; push edx; call dword ptr [eax + 4]; 
0x001132c9: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x001208ab: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x00130aab: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x1a8; call dword ptr gs:[0x10]; 
0x00130b8b: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x00126a6b: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x0012842b: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x001248fb: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x001306eb: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x0008f313: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0012316c: dec esp; and al, 0x10; mov edx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0009f807: dec esp; and al, 0x10; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012310c: dec esp; and al, 0x10; mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00121f69: dec esp; and al, 0x10; or dh, 0x80; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x001782a9: dec esp; and al, 0x10; push ecx; push 0xd; push eax; call dword ptr [edx + 0x14]; 
0x0007c147: dec esp; and al, 0x10; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x0017c7e7: dec esp; and al, 0x10; push ecx; push edx; call dword ptr [eax + 0x20]; 
0x0017b977: dec esp; and al, 0x10; push ecx; push edx; call dword ptr [eax]; 
0x0008d75a: dec esp; and al, 0x14; mov dword ptr [esp + 0x10], edx; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x000e7a62: dec esp; and al, 0x14; mov dword ptr [esp + 0x18], eax; mov eax, 0x108; mov dword ptr [esp + 0x14], edi; call dword ptr gs:[0x10]; 
0x000e7711: dec esp; and al, 0x14; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x0012ad80: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x001220e9: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00115150: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0011f120: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x00130c80: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x00130900: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x00130980: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1ad; call dword ptr gs:[0x10]; 
0x00130720: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1af; call dword ptr gs:[0x10]; 
0x00130ae0: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1b8; call dword ptr gs:[0x10]; 
0x00130940: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1ba; call dword ptr gs:[0x10]; 
0x00130810: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x00130b50: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0012f550: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xac; call dword ptr gs:[0x10]; 
0x0012b7a0: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x00128600: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x00124990: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x0012fb5d: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00122069: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00132ad2: dec esp; and al, 0x14; mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0011f6ff: dec esp; and al, 0x14; mov edx, dword ptr [esp + 0x18]; mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x00061318: dec esp; and al, 0x14; mov edx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00192980: dec esp; and al, 0x14; mov edx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00132fc0: dec esp; and al, 0x14; mov edx, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0012f297: dec esp; and al, 0x18; mov edx, dword ptr [esp + 0x1c]; mov eax, 0xa3; mov ebx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000e76e1: dec esp; and al, 0x18; push ebx; call eax; 
0x000935e8: dec esp; and al, 0x18; xor edx, edx; mov edi, eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0009db30: dec esp; and al, 0x1c; call dword ptr gs:[0x10]; 
0x00171458: dec esp; and al, 0x1c; lea edx, [ecx + 4]; push edx; push ebx; call dword ptr [eax + 4]; 
0x00171497: dec esp; and al, 0x1c; lea edx, [ecx + 4]; push edx; push ebx; call dword ptr [eax]; 
0x0012b8b5: dec esp; and al, 0x1c; mov ebx, dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000e76dc: dec esp; and al, 0x1c; push ecx; mov dword ptr [esp + 0x18], ecx; push ebx; call eax; 
0x0006510e: dec esp; and al, 0x20; movzx edx, byte ptr [edx + eax - 0x20]; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [ecx + edx*4 - 0x73f14]; jmp eax; 
0x0018713c: dec esp; and al, 0x20; push dword ptr [esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x001781ea: dec esp; and al, 0x20; push ecx; push 6; push eax; call dword ptr [edx + 0x14]; 
0x0012f334: dec esp; and al, 0x24; mov eax, 0x156; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00040404: dec esp; and al, 0x24; mov eax, 0x163; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001295b4: dec esp; and al, 0x24; mov eax, 0x90; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0012ac64: dec esp; and al, 0x24; mov eax, 0x91; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0012d874: dec esp; and al, 0x24; mov eax, 0x92; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011fd64: dec esp; and al, 0x24; mov eax, 0xa8; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00120794: dec esp; and al, 0x24; mov eax, 3; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00121944: dec esp; and al, 0x24; mov eax, 4; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001149c3: dec esp; and al, 0x24; mov eax, 8; call dword ptr gs:[0x10]; 
0x0012f362: dec esp; and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x00040432: dec esp; and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x001295e2: dec esp; and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x0012ac92: dec esp; and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x0012d8a2: dec esp; and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0011fd92: dec esp; and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x001207c2: dec esp; and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 3; call dword ptr gs:[0x10]; 
0x00121972: dec esp; and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 4; call dword ptr gs:[0x10]; 
0x001149ea: dec esp; and al, 0x24; mov edx, eax; mov eax, 8; call dword ptr gs:[0x10]; 
0x00176476: dec esp; and al, 0x28; mov edx, dword ptr [eax + 4]; push ecx; push eax; call dword ptr [edx + 8]; 
0x0009db2a: dec esp; and al, 0x28; mov edx, ecx; mov ecx, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x001781d7: dec esp; and al, 0x28; push ecx; push 4; push eax; call dword ptr [edx + 0x14]; 
0x0011f79a: dec esp; and al, 0x30; mov eax, 0x127; mov ebx, 0xffffff9c; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0011f8a0: dec esp; and al, 0x30; mov eax, 0x127; mov ebx, 0xffffff9c; mov edx, edi; call dword ptr gs:[0x10]; 
0x00133610: dec esp; and al, 0x30; mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x0011f7db: dec esp; and al, 0x30; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0011f8db: dec esp; and al, 0x30; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00129a3a: dec esp; and al, 0x34; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x0012a36a: dec esp; and al, 0x34; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000fb70a: dec esp; and al, 0x34; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000fb8ca: dec esp; and al, 0x34; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x0012ec45: dec esp; and al, 0x34; mov eax, 0x100; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0010e8b6: dec esp; and al, 0x34; mov eax, 0x11c; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0011fa3e: dec esp; and al, 0x34; mov eax, 0x127; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0011fb44: dec esp; and al, 0x34; mov eax, 0x127; mov edx, edi; call dword ptr gs:[0x10]; 
0x0012fce5: dec esp; and al, 0x34; mov eax, 0x13b; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x001302e5: dec esp; and al, 0x34; mov eax, 0x13c; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00129a0d: dec esp; and al, 0x34; mov eax, 0x14d; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00129715: dec esp; and al, 0x34; mov eax, 0x14d; mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0012a33d: dec esp; and al, 0x34; mov eax, 0x14e; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0012a045: dec esp; and al, 0x34; mov eax, 0x14e; mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x00132105: dec esp; and al, 0x34; mov eax, 0x159; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000fb6de: dec esp; and al, 0x34; mov eax, 0xb4; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000fb89e: dec esp; and al, 0x34; mov eax, 0xb5; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0011fa7a: dec esp; and al, 0x34; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0011fb7a: dec esp; and al, 0x34; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000c6bb9: dec esp; and al, 0x34; push eax; push ebp; call esi; 
0x0011f4bd: dec esp; and al, 0x38; mov ebx, dword ptr [esp + 0x30]; mov edi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0009db5a: dec esp; and al, 0x38; mov edx, ebp; mov dword ptr [esp + 0x2c], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0015ff5e: dec esp; and al, 0x3c; call ecx; 
0x000c4ab5: dec esp; and al, 0x44; push ecx; push dword ptr [edi + 8]; call ebx; 
0x00070ab2: dec esp; and al, 0x4c; mov dword ptr [esp + 4], ecx; jmp eax; 
0x00071997: dec esp; and al, 0x4c; mov dword ptr [esp + 4], ecx; jmp edx; 
0x00120605: dec esp; and al, 0x54; mov dword ptr [esp + 8], eax; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x001205ab: dec esp; and al, 0x54; mov eax, 0x135; mov edi, 8; call dword ptr gs:[0x10]; 
0x00120530: dec esp; and al, 0x54; mov eax, 0x19e; mov edi, 8; call dword ptr gs:[0x10]; 
0x00120647: dec esp; and al, 0x54; mov edx, dword ptr [esp + 0xc]; mov dword ptr [esp + 8], eax; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x000e7cef: dec esp; and al, 0x54; mov edx, edi; call dword ptr gs:[0x10]; 
0x000e7d8e: dec esp; and al, 0x54; mov edx, edi; mov dword ptr [esp + 0xc], eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x000e7d58: dec esp; and al, 0x54; mov edx, edi; mov dword ptr [esp + 0xc], eax; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000e7c8c: dec esp; and al, 0x54; mov edx, edi; mov esi, ebp; call dword ptr gs:[0x10]; 
0x000c3ddb: dec esp; and al, 0x54; push ecx; mov eax, dword ptr [esp + 0x40]; push dword ptr [eax]; call edi; 
0x000a0476: dec esp; and al, 0x64; lea esi, [esp + 0x2c]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x001300a7: dec esp; and al, 0x64; lea esi, [esp + 0x2c]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x00130135: dec esp; and al, 0x64; mov eax, 0x145; mov esi, edi; call dword ptr gs:[0x10]; 
0x00130007: dec esp; and al, 0x64; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x0012f5f6: dec esp; and al, 0x64; mov ebx, dword ptr [esp + 0x60]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000a04e9: dec esp; and al, 0x64; mov esi, dword ptr [esp + 4]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x000a03db: dec esp; and al, 0x64; mov esi, dword ptr [esp + 4]; mov eax, 0x199; call dword ptr gs:[0x10]; 
0x000de91d: dec esp; and al, 0xc; call dword ptr gs:[0x10]; 
0x000a02a1: dec esp; and al, 0xc; mov eax, 0x105; call dword ptr gs:[0x10]; 
0x0012fe19: dec esp; and al, 0xc; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x000e7b41: dec esp; and al, 0xc; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x0008f06a: dec esp; and al, 0xc; mov eax, 0x1a6; xor edx, edx; call dword ptr gs:[0x10]; 
0x001304ab: dec esp; and al, 0xc; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x0012f0eb: dec esp; and al, 0xc; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x0012ee6b: dec esp; and al, 0xc; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x000fb691: dec esp; and al, 0xc; mov eax, 0xdb; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0008f0c1: dec esp; and al, 0xc; mov eax, 0xf0; xor edx, edx; call dword ptr gs:[0x10]; 
0x000612c6: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00130d76: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00130846: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x0011f636: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x00121546: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x00121036: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x00114af6: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x001309e6: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x1ac; call dword ptr gs:[0x10]; 
0x00130756: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b0; call dword ptr gs:[0x10]; 
0x001307b6: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b1; call dword ptr gs:[0x10]; 
0x001147e6: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x00130a46: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b6; call dword ptr gs:[0x10]; 
0x001236c6: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x0012d976: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x001308c6: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x00130586: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x00129566: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x00130666: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x00130696: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x0010c186: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x001309b6: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000eab56: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x0011f096: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x00115116: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000f0ac6: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000f0a96: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x001146f6: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x00128836: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x00128756: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x00128456: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x00128486: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x00124926: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x0007c09a: dec esp; and al, 0xc; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 8], edx; pop ebx; jmp eax; 
0x00131c16: dec esp; and al, 0xc; mov edx, dword ptr [esp + 0x10]; mov dword ptr [esp + 0x1c], eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00131bd8: dec esp; and al, 0xc; mov edx, dword ptr [esp + 0x10]; mov dword ptr [esp + 0x1c], eax; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x00131b6d: dec esp; and al, 0xc; mov edx, dword ptr [esp + 0x10]; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00099b5a: dec esp; and al, 0xc; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x0008d7bd: dec esp; and al, 0xc; pop ebx; mov eax, dword ptr [eax + 0x18]; pop esi; jmp eax; 
0x00025537: dec esp; and al, 0xc; sub ecx, dword ptr gs:[0x14]; jne 0x25547; add esp, 0x1c; ret; 
0x001231dd: dec esp; and al, 4; call dword ptr gs:[0x10]; 
0x00070ab6: dec esp; and al, 4; jmp eax; 
0x0007199b: dec esp; and al, 4; jmp edx; 
0x000e7bac: dec esp; and al, 4; lea ecx, [esp + 4]; mov dword ptr [esp + 8], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x00071861: dec esp; and al, 4; mov dword ptr [esp + 0x1c], 1; jmp eax; 
0x00071871: dec esp; and al, 4; mov dword ptr [esp + 0x24], 1; jmp eax; 
0x00071891: dec esp; and al, 4; mov dword ptr [esp + 0x28], 1; jmp eax; 
0x000718a1: dec esp; and al, 4; mov dword ptr [esp + 0x30], 1; jmp eax; 
0x00071911: dec esp; and al, 4; mov dword ptr [esp + 0x34], 1; jmp eax; 
0x000718b1: dec esp; and al, 4; mov dword ptr [esp + 0x3c], 1; jmp eax; 
0x00070b5f: dec esp; and al, 4; mov dword ptr [esp + 0x48], 1; jmp eax; 
0x000e7bb0: dec esp; and al, 4; mov dword ptr [esp + 8], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x000e7884: dec esp; and al, 4; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x000907b9: dec esp; and al, 4; mov eax, 0x16; cmp edx, 2; jbe 0x907d0; ret; 
0x0010bf41: dec esp; and al, 4; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x00099672: dec esp; and al, 4; mov eax, 0xf0; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000fb5a0: dec esp; and al, 4; mov eax, 1; test ecx, ecx; js 0xfb5b0; ret; 
0x0009d6af: dec esp; and al, 4; mov eax, dword ptr [eax + 0x3ba4]; test eax, eax; jne 0x9d6c7; ret; 
0x00070cdc: dec esp; and al, 4; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x0010d20a: dec esp; and al, 4; mov esi, 8; call dword ptr gs:[0x10]; 
0x00091098: dec esp; and al, 4; xor cl, 0x81; mov dword ptr [edi + edx*4 + 8], 0; mov edx, 0x7fffffff; call dword ptr gs:[0x10]; 
0x00186d31: dec esp; and al, 8; call eax; 
0x00173c13: dec esp; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0017c704: dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x20]; 
0x0017c6e0: dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x24]; 
0x001713f0: dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x00171414: dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x00133435: dec esp; and al, 8; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x00130893: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x00130c13: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x0012ed03: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x0011fd13: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x00130c43: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x00130cb3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x00130ce3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x00130d13: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x00130783: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x1ae; call dword ptr gs:[0x10]; 
0x00130a13: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x1b2; call dword ptr gs:[0x10]; 
0x00130b13: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x1c0; call dword ptr gs:[0x10]; 
0x0003c953: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x0010c313: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x0012b623: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x0012b833: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x001296b3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x00114ef3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x0012b383: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x001305d3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x001157b3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x00128ab3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x00129663: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x0010c153: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x0010be43: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x0012d9c3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x00130603: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x00130633: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x0003cf93: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000efa93: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x00130a73: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x0012adb3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x001284b3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x00124953: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x000c4d69: dec esp; and al, 8; mov edx, dword ptr [eax]; cmp ecx, edx; jne 0xc4d8a; ret; 
0x000dbe06: dec esp; and al, 8; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x00093f28: dec esp; and al, 8; xor edx, edx; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x000938a8: dec esp; and al, 8; xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x001979cd: dec esp; and bh, bh; inc dword ptr [ecx + 0x43e5fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00156778: dec esp; bnd jmp dword ptr [ebp - 0x75]; 
0x00134acf: dec esp; call 0x134990; add esp, 4; ret; 
0x0009fb86: dec esp; call dword ptr gs:[0x10]; 
0x00029d6d: dec esp; call eax; 
0x0010d579: dec esp; cld; clc; inc dword ptr [ecx]; sar dword ptr [esi], 1; jmp ecx; 
0x0007ee79: dec esp; cli; jmp dword ptr [esi - 0x70]; 
0x00152d0b: dec esp; cmp dh, cl; call dword ptr [esi + 0x50]; 
0x000eb5b0: dec esp; daa; add eax, 0x244c8b00; or byte ptr [ebp - 0x6609f7f], cl; call dword ptr [eax - 0x73]; 
0x00024fd5: dec esp; dec esp; push ss; add byte ptr [0x219e3b], al; lea eax, [eax - 0x690b4]; ret; 
0x001672f0: dec esp; fsin; jmp dword ptr [ebp - 0x75]; 
0x00078e81: dec esp; insd dword ptr es:[edi], dx; stc; call dword ptr [eax - 0x73]; 
0x00157f05: dec esp; int1; call dword ptr [eax - 0x73]; 
0x0010af7d: dec esp; je 0x10af79; call dword ptr [eax - 0x18]; 
0x0010b109: dec esp; je 0x10b105; call dword ptr [eax - 0x18]; 
0x00111427: dec esp; je 0x111423; call dword ptr [eax - 0x18]; 
0x001424d7: dec esp; je 0x1424d3; call dword ptr [eax - 0x18]; 
0x0014258e: dec esp; je 0x14258a; call dword ptr [eax - 0x18]; 
0x001425ce: dec esp; je 0x1425ca; call dword ptr [eax - 0x18]; 
0x0014339e: dec esp; je 0x14339a; call dword ptr [eax - 0x18]; 
0x00143612: dec esp; je 0x14360e; call dword ptr [eax - 0x18]; 
0x0014378c: dec esp; je 0x143788; call dword ptr [eax - 0x18]; 
0x0014389d: dec esp; je 0x143899; call dword ptr [eax - 0x77]; 
0x00143918: dec esp; je 0x143914; call dword ptr [eax + 0x56]; 
0x0014397b: dec esp; je 0x143977; call dword ptr [eax - 0x18]; 
0x001439be: dec esp; je 0x1439ba; call dword ptr [eax - 0x18]; 
0x001449fe: dec esp; je 0x1449fa; call dword ptr [eax - 0x18]; 
0x001489ed: dec esp; je 0x1489e9; call dword ptr [eax - 0x18]; 
0x00148a10: dec esp; je 0x148a0c; call dword ptr [eax - 0x18]; 
0x0014b526: dec esp; je 0x14b522; call dword ptr [eax - 0x18]; 
0x0014b6e6: dec esp; je 0x14b6e2; call dword ptr [eax - 0x18]; 
0x0014b764: dec esp; je 0x14b760; call dword ptr [eax - 0x18]; 
0x0014b934: dec esp; je 0x14b930; call dword ptr [eax - 0x18]; 
0x0014ba2f: dec esp; je 0x14ba2b; call dword ptr [eax - 0x18]; 
0x0016f120: dec esp; je 0x16f11c; call dword ptr [eax - 0x18]; 
0x0016f636: dec esp; je 0x16f632; call dword ptr [eax - 0x18]; 
0x0016f81e: dec esp; je 0x16f81a; call dword ptr [eax - 0x18]; 
0x001710de: dec esp; je 0x1710da; call dword ptr [eax - 0x18]; 
0x001711aa: dec esp; je 0x1711a6; call dword ptr [eax - 0x18]; 
0x001712f7: dec esp; je 0x1712f3; call dword ptr [eax - 0x18]; 
0x00171356: dec esp; je 0x171352; call dword ptr [eax - 0x18]; 
0x0017138d: dec esp; je 0x171389; call dword ptr [eax - 0x18]; 
0x00171bdb: dec esp; je 0x171bd7; call dword ptr [eax - 0x18]; 
0x0017478e: dec esp; je 0x17478a; call dword ptr [eax - 0x18]; 
0x0017495c: dec esp; je 0x174958; call dword ptr [eax - 0x18]; 
0x00175074: dec esp; je 0x175070; call dword ptr [eax - 0x18]; 
0x001750e0: dec esp; je 0x1750dc; call dword ptr [eax - 0x18]; 
0x00175b64: dec esp; je 0x175b60; call dword ptr [eax - 0x18]; 
0x00175f0f: dec esp; je 0x175f0b; call dword ptr [eax - 0x18]; 
0x00176406: dec esp; je 0x176402; call dword ptr [eax - 0x18]; 
0x001764fa: dec esp; je 0x1764f6; call dword ptr [eax - 0x18]; 
0x0017720f: dec esp; je 0x17720b; call dword ptr [eax - 0x18]; 
0x00177f1d: dec esp; je 0x177f19; call dword ptr [eax - 0x18]; 
0x0017a31c: dec esp; je 0x17a318; call dword ptr [eax - 0x18]; 
0x0017a7f1: dec esp; je 0x17a7ed; call dword ptr [eax - 0x18]; 
0x0017a835: dec esp; je 0x17a831; call dword ptr [eax - 0x18]; 
0x0017a87e: dec esp; je 0x17a87a; call dword ptr [eax - 0x18]; 
0x0017abc4: dec esp; je 0x17abc0; call dword ptr [eax - 0x18]; 
0x0017b134: dec esp; je 0x17b130; call dword ptr [eax - 0x18]; 
0x0017b187: dec esp; je 0x17b183; call dword ptr [eax - 0x18]; 
0x0017b1c6: dec esp; je 0x17b1c2; call dword ptr [eax - 0x18]; 
0x0017b235: dec esp; je 0x17b231; call dword ptr [eax - 0x18]; 
0x0017b7b4: dec esp; je 0x17b7b0; call dword ptr [eax - 0x18]; 
0x0017b7b4: dec esp; je 0x17b7b0; call dword ptr [eax - 0x18]; ret 0xeb96; 
0x0017c250: dec esp; je 0x17c24c; call dword ptr [eax - 0x18]; 
0x0017c46a: dec esp; je 0x17c466; call dword ptr [eax - 0x18]; 
0x0017cced: dec esp; je 0x17cce9; call dword ptr [eax - 0x18]; 
0x0017d3a9: dec esp; je 0x17d3a5; call dword ptr [eax - 0x18]; 
0x000342db: dec esp; je 0x342d7; call dword ptr [eax - 0x18]; 
0x00060644: dec esp; je 0x60640; call dword ptr [eax - 0x18]; 
0x0006069f: dec esp; je 0x6069b; call dword ptr [eax - 0x18]; 
0x00060ab2: dec esp; je 0x60aae; call dword ptr [eax - 0x18]; 
0x0008e114: dec esp; je 0x8e110; call dword ptr [eax - 0x18]; 
0x000a6a7e: dec esp; je 0xa6a7a; call dword ptr [eax - 0x18]; 
0x000a7a16: dec esp; je 0xa7a12; call dword ptr [eax - 0x18]; 
0x000ab5e3: dec esp; je 0xab5df; call dword ptr [eax - 0x18]; 
0x000ac5bd: dec esp; je 0xac5b9; call dword ptr [eax + 0x55]; 
0x000ac5f8: dec esp; je 0xac5f4; call dword ptr [eax - 0x18]; 
0x000ef9f2: dec esp; je 0xef9ee; call dword ptr [eax - 0x18]; 
0x000effa2: dec esp; je 0xeff9e; call dword ptr [eax - 0x18]; 
0x000f0008: dec esp; je 0xf0004; call dword ptr [eax - 0x18]; 
0x000f00a3: dec esp; je 0xf009f; call dword ptr [eax - 0x18]; 
0x000f00e0: dec esp; je 0xf00dc; call dword ptr [eax - 0x18]; 
0x000f016e: dec esp; je 0xf016a; call dword ptr [eax - 0x18]; 
0x000f06f8: dec esp; je 0xf06f4; call dword ptr [eax - 0x18]; 
0x000f07c5: dec esp; je 0xf07c1; call dword ptr [eax - 0x18]; 
0x000f0808: dec esp; je 0xf0804; call dword ptr [eax - 0x18]; 
0x000795e4: dec esp; jg 0x795e0; call dword ptr [eax - 0x73]; 
0x000282f4: dec esp; jo 0x282f0; call dword ptr [eax - 0x18]; 
0x0017479b: dec esp; mov bh, 0xf9; call dword ptr [eax - 0x73]; 
0x0015fd62: dec esp; mov ch, 0xf9; call dword ptr [eax - 0x73]; 
0x00070ab4: dec esp; mov dword ptr [esp + 4], ecx; jmp eax; 
0x00071999: dec esp; mov dword ptr [esp + 4], ecx; jmp edx; 
0x001768cc: dec esp; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x0009fc5e: dec esp; mov eax, 0x117; call dword ptr gs:[0x10]; 
0x0009fca6: dec esp; mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x001231d3: dec esp; mov edx, dword ptr [esp + 0x64]; mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x001229ba: dec esp; mov esi, dword ptr [esp + 0x78]; mov ebx, dword ptr [esp + 0x70]; lea edx, [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0013f84b: dec esp; or al, dh; call dword ptr [eax - 0x73]; 
0x00141c3d: dec esp; or byte ptr [ebx + eax*4], cl; ror byte ptr [esi], 0x85; sal byte ptr [ebx + 0x39], cl; ret 0x4572; 
0x00141ce2: dec esp; or byte ptr [ebx + eax*4], cl; ror byte ptr [esi], 0x85; sal byte ptr [esi + esi + 0x39], cl; ret 0x1f72; 
0x0017903c: dec esp; or dh, bl; call dword ptr [ebp - 0x73]; 
0x0016f5fa: dec esp; or dh, bl; call dword ptr [edx + 0x6a]; 
0x0016f8e7: dec esp; or dh, bl; jmp dword ptr [ebp - 0x75]; 
0x000a42cc: dec esp; or dword ptr [eax], eax; add byte ptr [ebx + 0x390c246c], cl; fimul word ptr [ebp - 0x6af0d5fc]; ret; 
0x000a55d8: dec esp; or dword ptr [eax], eax; add byte ptr [ecx - 0x9efdbbc], cl; ret 0xf04; 
0x000a1eaf: dec esp; or dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x0013bad9: dec esp; outsb dx, byte ptr [esi]; stc; call dword ptr [eax - 0x75]; 
0x00057e91: dec esp; pop ds; add al, 0x83; ret; 
0x0003b1ff: dec esp; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x0003f977: dec esp; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000cd2d4: dec esp; popfd; stc; call dword ptr [eax - 0x73]; 
0x00165774: dec esp; push ecx; int1; call dword ptr [eax - 0x73]; 
0x00170276: dec esp; push edi; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x0017691f: dec esp; push edx; call eax; 
0x0013d608: dec esp; push esi; cmc; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x00024fd6: dec esp; push ss; add byte ptr [0x219e3b], al; lea eax, [eax - 0x690b4]; ret; 
0x00024fb6: dec esp; push ss; add byte ptr [0x219e5b], al; lea eax, [eax - 0x690ac]; ret; 
0x001512c1: dec esp; ret 0x3904; 
0x0010e1af: dec esp; ret 0xdae9; 
0x0016bd8c: dec esp; ret 0xec83; 
0x0015ae68: dec esp; ret 0xfff1; 
0x00062c08: dec esp; ret 0xfff8; 
0x001256fd: dec esp; ret 0xfff9; 
0x0003140b: dec esp; ret; 
0x00031a76: dec esp; ror byte ptr [ebx + 0x41031841], 1; adc al, 0x39; ret 0x4d0f; 
0x000a8b8e: dec esp; sal ch, 0xff; cmovne eax, edx; pop ebx; ret; 
0x0010cc22: dec esp; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x00126f15: dec esp; stc; call dword ptr [eax + 0x55]; 
0x0009564a: dec esp; test ecx, edi; call dword ptr [eax - 0x18]; 
0x00096414: dec esp; test ecx, edi; call dword ptr [eax - 0x18]; push edx; fdiv st(1), st(0); jmp dword ptr [esi - 0x70]; 
0x000546a8: dec esp; xchg esi, eax; add al, 0x83; ret 0x8501; 
0x0012708e: dec si; stc; call dword ptr [eax + 0x55]; 
0x00169495: div byte ptr [eax + ebp*8 + 0x5b]; mov eax, edx; pop esi; pop edi; ret; 
0x000debf0: div byte ptr [ebp + ecx*2 - 0x73]; push esp; and al, 0x2c; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0009cfd0: div byte ptr [ebp + ecx*2 - 0x77]; push esi; adc byte ptr [ebx + 0x5e], bl; ret; 
0x00024e1c: div byte ptr [ebp + edi - 0x7d]; in al, dx; add al, 0x50; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call esi; 
0x0008c428: div byte ptr [ebp - 0x1b]; add esp, 4; pop ebx; pop esi; ret; 
0x0004020d: div byte ptr [ebp - 0x1c]; add esp, 4; pop ebx; pop esi; ret; 
0x0002603e: div byte ptr [ebp - 0x1d]; add esp, 4; pop ebx; pop esi; ret; 
0x0016010c: div byte ptr [ebp - 0x1f]; pop ebx; pop esi; pop edi; ret; 
0x00178c54: div byte ptr [ebx + eax - 0x3a]; push es; add byte ptr [ebx - 0x7c72fb14], al; je 0x178c19; stc; call dword ptr [ebp + 0x57]; 
0x00026111: div byte ptr [ebx + edx - 0x7d]; in al, dx; or al, 0x56; call 0x186f70; mov dword ptr [esp], ebx; call esi; 
0x0003ddcb: div byte ptr [ecx]; jmp dword ptr [ebp - 1]; 
0x0009f6d0: div byte ptr [ecx]; sal dh, cl; rol dword ptr [eax + 0x75], 0x28; add ebx, 1; mov eax, 0x115; call dword ptr gs:[0x10]; 
0x0003050a: div dh; ret; 
0x00037da5: div dword ptr [ebx - 0x3b7c0002]; sbb al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x0013d080: div ebx; pop ebx; pop esi; pop edi; ret; 
0x000c48ee: div esi; dec dword ptr [ebx - 0x72e3dbac]; sbb byte ptr [eax], 0x9c; stc; call dword ptr [eax - 0x73]; 
0x000c4934: div esi; jmp dword ptr [esi - 0x70]; 
0x0012f070: endbr32; call 0x189c21; add edx, 0x10fd9b; mov eax, 0x123; call dword ptr gs:[0x10]; 
0x00094810: endbr32; call 0x189c25; add eax, 0x1aa5fb; mov eax, dword ptr [eax + 0x3af4]; ret; 
0x0008cc90: endbr32; call 0x189c25; add eax, 0x1b217b; mov eax, dword ptr [eax + 0xe6c]; ret; 
0x0003d4c0: endbr32; call 0x189c25; add eax, 0x20194b; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x0003d4a0: endbr32; call 0x189c25; add eax, 0x20196b; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x0002f540: endbr32; call 0x189c25; add eax, 0x20f8cb; mov eax, dword ptr [eax + 0x10e0]; ret; 
0x000260c0: endbr32; call 0x189c25; add eax, 0x218d4b; mov eax, dword ptr [eax + 0x10bc]; ret; 
0x000260a0: endbr32; call 0x189c25; add eax, 0x218d6b; mov eax, dword ptr [eax + 0x10b8]; ret; 
0x00024fd0: endbr32; call 0x189c25; add eax, 0x219e3b; lea eax, [eax - 0x690b4]; ret; 
0x00024fb0: endbr32; call 0x189c25; add eax, 0x219e5b; lea eax, [eax - 0x690ac]; ret; 
0x0009c2a0: endbr32; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0009c2a0: endbr32; mov eax, 0x9e; call dword ptr gs:[0x10]; ret; 
0x0008bc60: endbr32; mov eax, 0xffffffff; mov edx, eax; ret; 
0x0008b490: endbr32; mov eax, 0xffffffff; ret; 
0x0016eb00: endbr32; mov eax, 1; ret; 
0x00170d90: endbr32; mov eax, 2; ret; 
0x0008e740: endbr32; mov eax, dword ptr [eax + 0x1c]; mov dword ptr gs:[0x7c], eax; ret; 
0x0003b8e0: endbr32; mov eax, dword ptr [esp + 0x10]; and eax, 0x80000000; ret; 
0x00192ba0: endbr32; mov eax, dword ptr [esp + 0x10]; mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x0017cdd0: endbr32; mov eax, dword ptr [esp + 4]; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x000875c0: endbr32; mov eax, dword ptr [esp + 4]; and dword ptr [eax], 0xffffffcf; ret; 
0x00034640: endbr32; mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x0013f610: endbr32; mov eax, dword ptr [esp + 4]; bswap eax; ret; 
0x00090c10: endbr32; mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x00152850: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x10]; ret; 
0x0017ce10: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x0008ccc0: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x001897b0: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x001897d0: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x50]; ret; 
0x00189860: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x54]; ret; 
0x00189850: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x001897e0: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x0009e070: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x64]; ret; 
0x001227d0: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x00086880: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x00086830: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x804; ret; 
0x000e8900: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; ret; 
0x001897c0: endbr32; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x0008ccd0: endbr32; mov eax, dword ptr [esp + 4]; ret; 
0x0008a860: endbr32; mov eax, dword ptr [esp + 4]; test byte ptr [eax], 0x80; jne 0x8a870; ret; 
0x00099b40: endbr32; mov eax, dword ptr gs:[8]; ret; 
0x00094bc0: endbr32; mov eax, dword ptr gs:[8]; xor edx, edx; lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x0017ca10: endbr32; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x0013f620: endbr32; movzx eax, word ptr [esp + 4]; rol ax, 8; ret; 
0x00098a20: endbr32; nop; xor eax, eax; ret; 
0x0010e380: endbr32; push ebx; mov eax, 0x2b; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00024d10: endbr32; ret; 
0x00034650: endbr32; xor eax, eax; cmp dword ptr [esp + 4], 0x7f; setbe al; ret; 
0x0008bbb0: endbr32; xor eax, eax; ret; 
0x0003b992: fabs; test ah, 2; je 0x3b99b; fchs; ret; 
0x0003bd32: fabs; test ah, 2; je 0x3bd3b; fchs; ret; 
0x00059bbe: fadd dword ptr [0x8d500000]; xchg byte ptr [ebx], al; xor cl, bh; call dword ptr [eax - 0x18]; 
0x0004a29f: fadd dword ptr [0x8d500000]; xchg dword ptr [ebx], eax; xor cl, bh; call dword ptr [eax - 0x18]; 
0x0004d49c: fadd dword ptr [0x8d500000]; xchg dword ptr [ebx], eax; xor cl, bh; call dword ptr [eax - 0x18]; ret; 
0x0012fa57: fadd dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012fa57: fadd dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0011c27e: fadd dword ptr [eax]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0011b15f: fadd dword ptr [eax]; pop ebx; pop esi; ret; 
0x000a5698: fadd dword ptr [ebp + 0xbad2]; lock dec dword ptr [edi]; inc esp; ret 0x568d; 
0x000a5cdf: fadd dword ptr [ebp + 0xbad2]; lock dec dword ptr [edi]; inc esp; ret 0xf821; 
0x000a1195: fadd dword ptr [ebp + 0xbad2]; lock dec dword ptr [edi]; inc esp; ret 0xff31; 
0x000df71a: fadd dword ptr [ebp - 0x7cf68a2e]; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000e7ca4: fadd dword ptr [ebx + 0x440fdafb]; ret 0x548b; 
0x001a5b38: fadd dword ptr [ebx + 0x5b5d04c4]; ret; 
0x000c6a7c: fadd dword ptr [ebx + 0x5e5b04c4]; ret; 
0x00088507: fadd dword ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x000385ae: fadd dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x00081b2b: fadd dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x00128881: fadd dword ptr [ebx - 0x2776e73c]; pop ebx; ret; 
0x000c3148: fadd dword ptr [ecx]; add byte ptr [eax], al; ret; 
0x00100d95: fadd dword ptr [ecx]; ret 0x86eb; 
0x00140e20: fadd dword ptr [ecx]; ror byte ptr [edi], 1; inc edx; ret 0xd129; 
0x00054e03: fadd dword ptr [edx + 0x74]; sub byte ptr [eax - 0xa], dl; ret 0x7501; 
0x000b3524: fadd dword ptr [edx]; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0019715a: fadd dword ptr [esi + 4]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019963d: fadd qword ptr [0xc381ffff]; outsd dx, dword ptr [esi]; and al, 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00144f42: fadd qword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx - 0x837b], cl; call dword ptr [eax + 0x6a]; 
0x000e8bf8: fadd qword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e8a4f: fadd qword ptr [eax]; add byte ptr [eax], al; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0008338d: fadd qword ptr [eax]; add byte ptr [eax], al; push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; push esi; call dword ptr [ebx + 0x40]; 
0x0018224b: fadd qword ptr [ebp + 0xfc789c0]; sahf; ret 0xf883; 
0x000de463: fadd qword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x000c3158: fadd qword ptr [ecx]; add byte ptr [eax], al; ret; 
0x000ac2f8: fadd qword ptr [esi + esi*8 - 1]; and ch, 2; lea edx, [edx - 0x17cfd4]; cmove eax, edx; ret; 
0x0003b928: fadd st(0); add esp, 0x18; pop ebx; ret; 
0x0003bff3: fadd st(0); add esp, 8; pop ebx; ret; 
0x0003ba29: fadd st(0); mov dword ptr [eax], ecx; ret; 
0x001892de: fadd st(7), st(0); inc esp; ret; 
0x0003c069: fchs; fcmove st(0), st(1); fstp st(1); ret; 
0x0003b999: fchs; ret; 
0x0003c06b: fcmove st(0), st(1); fstp st(1); ret; 
0x00142f91: fcmovnu st(0), st(2); cli; jmp dword ptr [esi - 0x3f]; 
0x00186092: fcmovu st(0), st(7); ljmp 0x8d28:0x247c8bff; xchg dword ptr [edi + ebp*2], ebp; stc; call dword ptr [eax - 0x73]; 
0x0012be20: fcom dword ptr [eax - 0x73]; xchg byte ptr [ecx], cl; aas; stc; call dword ptr [eax + 0x6a]; 
0x0012bf3b: fcom dword ptr [eax - 0x73]; xchg dl, ah; push ebx; stc; call dword ptr [eax + 0x57]; 
0x00041714: fcom dword ptr [eax - 0x75]; inc esp; and al, 0x28; call eax; 
0x0008f990: fcom qword ptr [eax]; push es; add byte ptr [ecx], bh; ret; 
0x00034845: fcom qword ptr [ebx + 0x15]; add byte ptr [0x20a5cb], al; mov eax, dword ptr [eax + 0x9c]; add eax, dword ptr gs:[0]; ret; 
0x0019ad84: fcomi st(7); ret 1; 
0x00155969: fcomp dword ptr [ebp - 7]; call dword ptr [ebx - 0x73]; 
0x00170dfb: fcomp dword ptr [ebx + 0x5e]; jmp eax; 
0x000384ee: fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x0013ec7b: fcomp dword ptr [ebx + 0x5e]; pop edi; ret 4; 
0x00033fbb: fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x0008e63e: fcomp dword ptr [ebx + 0x5e]; ret; 
0x0003b07b: fcomp dword ptr [ebx + 0x5e]; shr eax, 0x1f; pop edi; ret; 
0x000253cf: fcomp dword ptr [ebx - 0x7d]; rol byte ptr [eax], cl; neg edx; ret; 
0x001708b4: fcomp dword ptr [ebx]; cmc; inc dword ptr [ebx - 0x137cef3c]; or byte ptr [ebx + 0x86a0447], cl; push edi; call dword ptr [eax + 0x18]; 
0x00195bda: fcomp dword ptr [ecx + 4]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00178488: fcomp dword ptr [ecx]; ror byte ptr [ebx + 0x650c2454], 0x2b; adc eax, 0x14; jne 0x1784a7; add esp, 0x1c; ret; 
0x001a7308: fcomp dword ptr [edi + 0x5b]; ret; 
0x001a7868: fcomp dword ptr [edi + 0x5d]; pop ebx; ret; 
0x0004db42: fcomp dword ptr [edi + 0x5d]; xor eax, 0x7fffffff; ret; 
0x001ac1c8: fcomp dword ptr [edi + 0x5e]; pop ebx; ret; 
0x000d97a8: fcomp dword ptr [edi + 0x5e]; ret; 
0x00053694: fcomp dword ptr [esi + 0x5f]; ret; 
0x00184d56: fcos; jmp dword ptr [esi - 0x70]; 
0x000c5bcd: fdecstp; push esi; inc ecx; jne 0xc5bd6; cmove eax, edx; ret; 
0x0015c740: fdiv dword ptr [ebp + edx*8 - 0x7d]; ret 0xeb18; 
0x000abaa0: fdiv dword ptr [ebp - 0x13]; mov eax, edx; pop ebx; pop esi; ret; 
0x00172bd1: fdiv dword ptr [ebp - 0x14]; pop ebx; ret; 
0x000aba5c: fdiv dword ptr [ebp - 0xf]; mov eax, edx; pop ebx; ret; 
0x00053c2c: fdiv dword ptr [ebp - 0xf]; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x001238f9: fdiv dword ptr [edx + 4]; xor eax, eax; pop ebx; ret; 
0x001b6e2d: fdiv dword ptr [edx - 0x63da4]; fstp st(0); add esp, 0x20; ret; 
0x0004a1f0: fdiv dword ptr [esi - 7]; call dword ptr [eax - 0x18]; 
0x000963ba: fdiv st(1), st(0); inc dword ptr [ebx - 0x7e45f440]; add eax, 0xa30f0000; ret 0x830f; 
0x0009641b: fdiv st(1), st(0); jmp dword ptr [esi - 0x70]; 
0x000556f6: fdiv st(4), st(0); jmp dword ptr [esi - 0x70]; 
0x00056444: fdiv st(5), st(0); dec dword ptr [ebx - 0x72ebdb84]; xchg dword ptr [eax + edi*2], esi; stc; call dword ptr [eax + 0x68]; 
0x0019bf65: fdiv st(6), st(0); inc dword ptr [ecx + 0x3ff88c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00166edb: fdiv st(6), st(0); jmp dword ptr [ebp - 0x75]; 
0x0007899e: fdiv st(7), st(0); dec dword ptr [ebx - 0x4ff4b]; dec dword ptr [ebp - 0x682177a]; call dword ptr [eax + 0x68]; 
0x000768a9: fdiv st(7), st(0); dec dword ptr [ebx - 0x4ff7b]; jmp dword ptr [ebp - 0x75]; 
0x000843bf: fdiv st(7), st(0); inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0014333d: fdivp st(6); inc dword ptr [ebx - 0x77cef3c]; push dword ptr [eax - 0x77]; ret; 
0x000754cd: fdivp st(7); dec dword ptr [ebx - 0x51f73]; jmp dword ptr [ebp - 0x5f]; 
0x0006c7fe: fdivp st(7); dec dword ptr [ebx - 0x5ab4b]; call dword ptr [eax + 0x50]; 
0x0013e912: fdivp st(7); jmp dword ptr [esi - 0x70]; 
0x0005b933: fdivr dword ptr [ecx - 7]; call dword ptr [eax - 0x73]; 
0x000a9b0b: fdivr dword ptr [ecx]; fmul dword ptr [edi]; inc edx; ret; 
0x000c66ad: fdivr dword ptr [ecx]; fstp dword ptr [ebx + 0x5e]; cmovg eax, edx; pop edi; ret; 
0x00074841: fdivr dword ptr [ecx]; ret 0x830f; 
0x00073ada: fdivr dword ptr [ecx]; ret 0x8f0f; 
0x000fed3f: fdivr dword ptr [ecx]; ret 0x972; 
0x0005d3cd: fdivr dword ptr [ecx]; ret 0xee7c; 
0x0012ae9b: fdivr dword ptr [ecx]; ret; 
0x00156b31: fdivr dword ptr [ecx]; retf 0xca75; pop ebx; pop esi; ret; 
0x00140cde: fdivr dword ptr [ecx]; ror byte ptr [edi], 1; inc edx; ret 0xe883; 
0x000770f8: fdivr dword ptr [ecx]; ror byte ptr [edi], 1; test dword ptr [edi], ebp; ret 0xffff; 
0x000c668f: fdivr dword ptr [ecx]; stc; pop edi; cmovg eax, edx; ret; 
0x0012dc4d: fdivr dword ptr [edi - 0x397efffb]; ret; 
0x0009800c: fdivr dword ptr [esi - 0x35]; pop ebx; mov eax, 0x16; pop esi; pop edi; ret; 
0x000a679a: fdivr dword ptr [esi]; jmp eax; 
0x000d8690: fdivr qword ptr [ecx - 0x4a74000b]; ror cl, 0xff; dec dword ptr [ebp - 0x661f37a]; call dword ptr [eax - 0x73]; 
0x0013b83f: fdivr qword ptr [ecx]; ret; 
0x0018c700: fdivr st(1), st(0); jmp dword ptr [esi - 0x70]; 
0x00167149: fdivr st(6); jmp dword ptr [ebp - 0x75]; 
0x00174a0c: fdivr st(7); add esp, 0xc; ret; 
0x0006ad08: fdivr st(7); dec dword ptr [ebx - 0x58f7b]; jmp dword ptr [ebp - 0x75]; 
0x00077536: fdivr st(7); jmp dword ptr [ebp - 0x5f]; 
0x000418d2: fdivr st(7); jmp dword ptr [esi - 0x70]; 
0x000c0271: fdivr st(7); mov byte ptr [eax], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000b7cf6: fdivr st(7); pop ebx; ret; 
0x000b7587: fdivr st(7); pop edi; pop ebx; ret; 
0x000c246e: fdivr st(7); pop esi; pop ebx; ret; 
0x00112458: fdivrp st(2); dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x000c0999: ffree st(6); adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0003c921: fiadd dword ptr [0x10c48300]; test eax, eax; jne 0x3c930; add esp, 8; pop ebx; ret; 
0x000e1b8b: fiadd dword ptr [eax + 0x440f2df9]; ret 0x10e9; 
0x0012883e: fiadd dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000a532d: fiadd dword ptr [ebp + 0xb9c9]; lock dec dword ptr [edi]; inc esp; shl dword ptr [ecx], 1; ret 0x1a8b; 
0x0009cd24: fiadd dword ptr [ebp - 0x76e28b40]; ret; 
0x000e7629: fiadd dword ptr [ebx + 0x3b8eaf8]; add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0x2ec3; 
0x00040772: fiadd dword ptr [ebx - 0x2508ff2e]; cmovs edx, ebx; cmovs eax, ecx; pop ebx; ret; 
0x000b2c34: fiadd dword ptr [ebx - 0x79f0ef15]; ret 0x10; 
0x000b26b4: fiadd dword ptr [ebx - 0x79f0ef15]; ret 0x15; 
0x000b2134: fiadd dword ptr [ebx - 0x79f0ef15]; ret 0x1a; 
0x0004173d: fiadd dword ptr [ecx]; fist word ptr [edi + 0x52]; mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 0x24], edx; call eax; 
0x001a92e3: fiadd dword ptr [ecx]; mov byte ptr [edx + edx*8 + 0xa2840f], 0; add dh, dh; ret 0x7501; 
0x000c2ca1: fiadd word ptr [eax + 0x40]; inc eax; add esp, 0x100; sub eax, edx; ret; 
0x0018b756: fiadd word ptr [eax]; add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [ebx + 0x44]; 
0x000548dd: fiadd word ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x000569b8: fiadd word ptr [ebx - 0x362743]; call dword ptr [eax]; 
0x00051b24: ficomp dword ptr [ebx + 0x5e]; xor edx, 0x7fffffff; pop edi; pop ebp; ret; 
0x00060fdf: ficomp word ptr [0xc838b00]; sbb al, byte ptr [eax]; add byte ptr [ebp + 0x314574c0], al; jmp dword ptr [esi - 0x70]; 
0x000e7880: fidiv dword ptr [ebp + 0x3d]; lea ecx, [esp + 4]; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x000e7612: fidiv dword ptr [ebp + 0xc]; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x000abb58: fidiv dword ptr [ebp + esi*8 + 0x39]; bnd je 0xabb50; pop ebx; pop esi; ret; 
0x000abb28: fidiv dword ptr [ebp + esi*8 + 0x5b]; ret; 
0x000c093b: fidiv dword ptr [edx - 0x1e]; call 0x189c31; add ecx, 0x10c731; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba99b: fidiv dword ptr [edx - 0x1e]; call 0x189c31; add ecx, 0x1124fd; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b935b: fidiv dword ptr [edx - 0x1e]; call 0x189c31; add ecx, 0x1139dd; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c095d: fidiv dword ptr [edx - 0x40]; call 0x189c31; add ecx, 0x10c70f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba9bd: fidiv dword ptr [edx - 0x40]; call 0x189c31; add ecx, 0x1124db; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b937d: fidiv dword ptr [edx - 0x40]; call 0x189c31; add ecx, 0x1139bb; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c0978: fidiv dword ptr [edx - 0x5b]; call 0x189c31; add ecx, 0x10c6f4; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba9d8: fidiv dword ptr [edx - 0x5b]; call 0x189c31; add ecx, 0x1124c0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9398: fidiv dword ptr [edx - 0x5b]; call 0x189c31; add ecx, 0x1139a0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c098f: fidiv dword ptr [edx - 0x72]; call 0x189c31; add ecx, 0x10c6dd; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba9ef: fidiv dword ptr [edx - 0x72]; call 0x189c31; add ecx, 0x1124a9; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000795ba: fidiv word ptr [ebx + eax*2 - 0x75]; pop ebp; or byte ptr [ecx], bh; ret; 
0x0018b642: fidiv word ptr [ecx]; fisttp dword ptr [ecx + 0x5f5e5bd8]; ret; 
0x00099b74: fidivr dword ptr [0xfffff000]; mov eax, 0; cmova eax, edx; ret; 
0x0011fe3d: fidivr dword ptr [0xfffff000]; mov eax, 0; pop edi; cmova eax, edx; ret; 
0x00132bd8: fidivr dword ptr [ebx + 0xe]; call dword ptr gs:[0x10]; 
0x000372d6: fidivr dword ptr [ecx]; ret 0x430f; 
0x0012e7e5: fidivr dword ptr [ecx]; ret 0x820f; 
0x00149d3e: fidivr dword ptr [ecx]; ret 0x8e0f; 
0x000a19be: fidivr dword ptr [ecx]; ret 0xa72; 
0x0006067a: fidivr dword ptr [esi]; jmp edx; 
0x00067b97: fidivr word ptr [ecx]; ret 0x840f; 
0x00040579: fidivr word ptr [ecx]; retf 0x5a8d; add dword ptr [ebx + 0xf382454], ecx; inc ebp; ret; 
0x0004353e: fidivr word ptr [esi]; jmp esi; 
0x0009987f: fild dword ptr [eax + 0xf00197f]; xchg ebp, eax; ret; 
0x0018a661: fild dword ptr [eax + 0xf72007d]; xchg esp, eax; ret; 
0x000ad0fa: fild dword ptr [eax - 0x6bf0cf06]; ret; 
0x0012875e: fild dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000fb695: fild dword ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001143cb: fild dword ptr [eax]; add byte ptr [ebx - 0x77cef3c], al; push dword ptr [edx + ebx*8 - 0x77]; ret 0xbc8d; 
0x00112f49: fild dword ptr [ebp - 0x14f48a2e]; jo 0x112ed4; ret; 
0x000d4679: fild dword ptr [ebp - 0x760d8b37]; ret; 
0x00031eb4: fild dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0004796a: fild dword ptr [ebx + 0xf10243c]; xchg esp, eax; ret 0xc8b; 
0x0011a9fd: fild dword ptr [ebx - 0x17a9f314]; cdq; xchg eax, esi; jmp dword ptr [ebp - 0x5f]; 
0x00156793: fild dword ptr [ebx - 0x2776fb3c]; pop ebx; pop esi; ret; 
0x001354e4: fild dword ptr [ebx - 0x69f0f606]; ret; 
0x00135eac: fild dword ptr [ebx - 0x69f0f608]; ret; 
0x00125d0f: fild dword ptr [ecx + 0x42cec]; add byte ptr [ebp - 0x6b53f80], cl; jmp dword ptr [ebp - 0x75]; 
0x000eb204: fild dword ptr [esi - 7]; call dword ptr [eax - 0x18]; 
0x0003bc60: fild dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; fscale; fstp st(1); ret; 
0x00085860: fild word ptr [ebp + 0x13378c0]; ret; 
0x000ec7c6: fild word ptr [ebx - 0x6bf0bf06]; ret; 
0x0014a3dd: fild word ptr [ecx]; ret; 
0x000a42bc: fild word ptr [edx - 7]; call dword ptr [eax - 0x18]; 
0x000bae3d: fild word ptr [esi]; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000b9542: fimul dword ptr [eax]; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000304a3: fimul dword ptr [ebp - 0x47f2ba8]; add cl, byte ptr [edi]; xchg esi, eax; ret; 
0x0008f9a1: fimul dword ptr [ebx + 0x1acc97]; add byte ptr [ebx + 0x45a8b02], cl; mov ecx, dword ptr [edx + 8]; mov edx, dword ptr [edx + 0xc]; call dword ptr gs:[0x10]; 
0x001367a8: fimul dword ptr [ebx + 0x291c244c]; ret 0xca39; 
0x000f6edd: fimul dword ptr [ebx - 0x46f43]; dec dword ptr [ebp - 0x65f5b79]; call dword ptr [eax - 0x73]; 
0x001214d1: fimul dword ptr [ebx - 0x47fbdba4]; cmp al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001214d1: fimul dword ptr [ebx - 0x47fbdba4]; cmp al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0012fa51: fimul dword ptr [ebx - 0x47fbdba4]; fadd dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012fa51: fimul dword ptr [ebx - 0x47fbdba4]; fadd dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0012b811: fimul dword ptr [ebx - 0x47fbdba4]; jae 0x12b819; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00130bb1: fimul dword ptr [ebx - 0x47fbdba4]; je 0x130bb9; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00130d41: fimul dword ptr [ebx - 0x47fbdba4]; jle 0x130d4a; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001305b1: fimul dword ptr [ebx - 0x47fbdba4]; jno 0x1305b9; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010e3e1: fimul dword ptr [ebx - 0x47fbdba4]; jp 0x10e3e9; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012f3e1: fimul dword ptr [ebx - 0x47fbdba4]; mov byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012f3e1: fimul dword ptr [ebx - 0x47fbdba4]; mov byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00114681: fimul dword ptr [ebx - 0x47fbdba4]; or al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ea141: fimul dword ptr [ebx - 0x47fbdba4]; sbb eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00114a81: fimul dword ptr [ebx - 0x47fbdba4]; sub dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f0a41: fimul dword ptr [ebx - 0x47fbdba4]; test byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00114ed1: fimul dword ptr [ebx - 0x47fbdba4]; test dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00123781: fimul dword ptr [ebx - 0x47fbdba4]; xor eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00130891: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x00130c11: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x0012ed01: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x0011fd11: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x00130c41: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x00130cb1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x00130ce1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x00130d11: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x00130781: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x1ae; call dword ptr gs:[0x10]; 
0x00130a11: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x1b2; call dword ptr gs:[0x10]; 
0x00130b11: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x1c0; call dword ptr gs:[0x10]; 
0x0003c951: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x0010c311: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x0012b621: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x0012b831: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x001296b1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x00114ef1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x0012b381: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x001305d1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x001157b1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x00128ab1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x00129661: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x0010c151: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x0010be41: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x0012d9c1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x00130601: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x00130631: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x0003cf91: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000efa91: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x00130a71: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x0012adb1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x001284b1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x00124951: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x000cc08d: fimul dword ptr [ebx - 0x76efdbbc]; ret; 
0x00099f7a: fimul dword ptr [ecx + 0x247c8bc3]; adc al, 0x89; ret 0xfbd1; 
0x00100d0d: fimul dword ptr [ecx - 0x769fdbbc]; ret; 
0x000daa02: fimul dword ptr [ecx - 0x76a7dbbc]; ret; 
0x0003b858: fimul dword ptr [ecx - 0x76b3dbac]; ret; 
0x001b2c4d: fimul dword ptr [ecx - 0x7c0c7607]; ret; 
0x000bab42: fimul dword ptr [ecx]; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0014a83a: fimul dword ptr [ecx]; ret 0x448b; 
0x000e3cc3: fimul dword ptr [edi]; dec ecx; ret 0x1c8d; 
0x000657db: fimul dword ptr [edi]; dec ecx; ret 0x4c89; 
0x0006313c: fimul dword ptr [edi]; dec ecx; ret 0x7489; 
0x000e7ca7: fimul dword ptr [edi]; inc esp; ret 0x548b; 
0x000dae78: fimul dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0x8902; 
0x000daca3: fimul dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000b9f85: fimul dword ptr [edi]; xor byte ptr [ebx + esi*8 - 0x5f170001], 0xfc; or al, 0; add ecx, 0x112daf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000a42d5: fimul word ptr [ebp - 0x6af0d5fc]; ret; 
0x0007d16d: fimul word ptr [ecx + 0x247c2bcf]; xor al, 0x85; sar byte ptr [eax + 0xb], 0x83; ret 0x8301; 
0x0005a3e1: fimul word ptr [ecx + 0x5f5e5bd8]; pop ebp; ret; 
0x00194c3b: fimul word ptr [edi - 1]; inc dword ptr [ecx + 0x46971c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00169343: fimul word ptr [edi]; inc esp; ret 0x4789; 
0x000d7a3c: fimul word ptr [edi]; test edi, esp; add byte ptr [eax], al; add byte ptr [ebx - 0x364f63], cl; dec dword ptr [ebx - 0x36374b]; call dword ptr [edi - 1]; 
0x0014020d: fimul word ptr [edi]; xchg ebx, eax; ret; 
0x00187cf0: fimul word ptr [edi]; xchg edx, eax; ret; 
0x0004173f: fist word ptr [edi + 0x52]; mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 0x24], edx; call eax; 
0x000612bc: fistp dword ptr [0x26b85300]; add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x000402e8: fistp dword ptr [ebx + 0x31]; rcr byte ptr [esi + 0x5f], 0x5d; ret; 
0x0009219d: fistp qword ptr [eax + 0xf0]; mov ebx, dword ptr [esp]; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000801e8: fistp qword ptr [ebx]; cli; jmp dword ptr [esi - 0x70]; 
0x000708a5: fistp qword ptr [ecx]; ret 0x8d0f; 
0x0009403e: fistp qword ptr [edi]; stc; call dword ptr [eax - 0x18]; 
0x001959d3: fistp word ptr [ebx + 4]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000292a6: fisttp dword ptr [ebp + 0x490f0343]; ret; 
0x000ffb84: fisttp dword ptr [ebp + 0x490f1f43]; ret; 
0x000d9b11: fisttp dword ptr [ebp - 0x7600e4a4]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x000a01d9: fisttp dword ptr [ebx + 0x106b81b]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000a024d: fisttp dword ptr [ebx + 0x198b81b]; add byte ptr [eax], al; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000289da: fisttp dword ptr [ebx + 0x450f0471]; ret 0x4489; 
0x001b33f1: fisttp dword ptr [ebx + 0xf182454]; xchg ebp, eax; ret; 
0x001b12d1: fisttp dword ptr [ebx + 0xf202454]; xchg ebp, eax; ret; 
0x0013588c: fisttp dword ptr [ebx - 0x5cf0f5ec]; ret 0x920f; 
0x00135250: fisttp dword ptr [ebx - 0x5cf0f7fc]; ror byte ptr [edi], 1; xchg edx, eax; ret; 
0x0002ab25: fisttp dword ptr [ebx - 0x72c7db84]; xchg dword ptr [edx + esi*2 - 7], esp; call dword ptr [eax - 0x73]; 
0x0012316a: fisttp dword ptr [ebx - 0x74efdbb4]; push esp; and al, 0x14; call dword ptr gs:[0x10]; 
0x0003563b: fisttp dword ptr [ebx - 0x7af057ab]; ret; 
0x0002df01: fisttp dword ptr [ecx + 0x39f7891f]; ret 0xc275; 
0x000403d4: fisttp dword ptr [ecx + 0x5f5e5bd8]; pop ebp; ret; 
0x000c4c71: fisttp dword ptr [ecx + 0x5f5e5bd8]; ret; 
0x0013bf26: fisttp dword ptr [ecx + 0xbab8e1]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00115b93: fisttp dword ptr [ecx - 0x763e7611]; ret 0xc031; 
0x00028164: fisttp dword ptr [ecx - 0x7c2dce28]; ret; 
0x000eed06: fisttp dword ptr [ecx - 0x7cf81432]; ret; 
0x00055cef: fisttp dword ptr [edi]; dec ecx; ret; 
0x00029c97: fisttp dword ptr [edi]; inc ebp; ret 0x4489; 
0x0013fa19: fisttp dword ptr [edi]; inc ebp; ret 0x548b; 
0x000e50fa: fisttp dword ptr [edi]; inc ebp; ret; 
0x00150960: fisttp dword ptr [edi]; test ah, al; add byte ptr [eax], al; add dh, dh; ret 0xf08; 
0x00169b8f: fisttp dword ptr [edi]; test byte ptr [ecx - 0x7d000000], dl; in al, dx; or al, 0x8d; test dword ptr [edx - 7], edi; call dword ptr [eax - 0x18]; 
0x0011164f: fisttp dword ptr [edi]; test byte ptr [ecx], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x6af0fe05], al; ret; 
0x00063122: fisttp dword ptr [edi]; test byte ptr [edi], dh; or eax, dword ptr [eax]; add byte ptr [edi], cl; mov esi, 0x89c68900; ret 0x44c7; 
0x00142754: fisttp dword ptr [edi]; test ch, dh; add byte ptr [eax], al; add byte ptr [ebx - 0x41f0d0ec], cl; ret; 
0x00158351: fisttp dword ptr [edi]; test dword ptr [eax - 0x7d000000], ebp; clc; add dword ptr [ebp + 0xf04004c], ecx; xchg esp, eax; ret 0x448b; 
0x001638f1: fisttp dword ptr [edi]; test dword ptr [eax - 0x7d000000], edi; clc; add dword ptr [ebp + 0xf04004c], ecx; xchg esp, eax; ret 0x448b; 
0x00163e91: fisttp dword ptr [edi]; test dword ptr [eax - 0x7d000000], esi; clc; add dword ptr [ebp + 0xf04004c], ecx; xchg esp, eax; ret 0x448b; 
0x000909d7: fisttp dword ptr [edi]; xchg ebp, eax; ret 0xe2c1; 
0x00192c18: fisttp dword ptr [edi]; xchg esp, eax; ret 0xc483; 
0x000396d9: fisttp dword ptr [edi]; xchg esp, eax; ret; 
0x0017163e: fisttp qword ptr [ebx + 0x508d1043]; add al, 0x89; push ebx; adc bl, ch; ret; 
0x001417ea: fisttp qword ptr [ebx - 0x7ce3dba4]; ret 0x8802; 
0x0010bd72: fisttp qword ptr [ecx + 0x5f5e5bf0]; ret; 
0x000493f8: fisttp qword ptr [ecx - 0x76307608]; ret; 
0x000621c9: fisttp qword ptr [edi]; xchg ebp, eax; ret 0x448b; 
0x001510b9: fisttp qword ptr [esi]; add byte ptr [ebx - 0x6f72f314], al; lodsb al, byte ptr [esi]; mov al, 0xf9; call dword ptr [edx - 0x73]; 
0x000a1b19: fisttp word ptr [ebx + 0x418d0c48]; jmp dword ptr [ecx]; 
0x0005a080: fisttp word ptr [ebx + 0xf282444]; mov esi, 0x8b1b244c; je 0x5a0b1; sbb al, 0x89; ret 0xc801; 
0x000c1da0: fisttp word ptr [ecx + 0x5f5e5bf0]; ret; 
0x00140be9: fisttp word ptr [ecx - 0x76c7dba4]; ret; 
0x000fffbc: fisttp word ptr [ecx]; ret 0x5388; 
0x00150eab: fisttp word ptr [esi]; add byte ptr [ebx - 0x77], dl; ret; 
0x0019364d: fisub dword ptr [esi + 0xf]; jg 0x193694; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x00193bdd: fisub dword ptr [esi + 0xf]; jg 0x193c24; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x001a68ac: fisub dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0009a9fa: fisub dword ptr [esi - 0x70]; nop; nop; endbr32; xor eax, eax; ret; 
0x00029b8e: fisub word ptr [eax + eax + 0x24748b00]; cmp al, 0x8d; xchg byte ptr [ebx + ebp*2 - 7], ch; call dword ptr [eax + 0x68]; 
0x001a666c: fisub word ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0006a25b: fisubr dword ptr [ebx]; xchg ebp, eax; mov eax, 0x39fffffb; ret 0x840f; 
0x0006d1a7: fisubr dword ptr [ebx]; xchg ebp, eax; mov eax, 0x39fffffb; ret 0x850f; 
0x00136abd: fisubr dword ptr [ecx]; lds ebp, ptr [ecx]; ret 0x6c01; 
0x00136885: fisubr dword ptr [ecx]; ret 0x6c6; 
0x0014b606: fisubr dword ptr [ecx]; ret 0x7e8b; 
0x0015f949: fisubr dword ptr [ecx]; ret 0xca39; 
0x00067c1d: fisubr dword ptr [ecx]; ret 0xfa83; 
0x0004d58e: fisubr word ptr [edx - 2]; dec dword ptr [ebx - 0x72e7db84]; xchg dword ptr [eax + 0x78], ebx; stc; call dword ptr [eax - 0x73]; 
0x000c11a3: fld dword ptr [eax]; add byte ptr [eax], al; bsr eax, eax; add eax, edi; pop edi; ret; 
0x00130a7b: fld dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000a6e3a: fld dword ptr [ebp - 0x7af001]; aad 0xf7; call ptr [ebx + 0x5e]; pop edi; ret; 
0x0003c22b: fld dword ptr [ebx + 0x1cd904ec]; and al, 0xd9; add al, 0x24; add esp, 4; ret; 
0x0003bf8b: fld dword ptr [ebx + 0x1cdd08ec]; and al, 0xdd; add al, 0x24; add esp, 8; ret; 
0x000a7e42: fld dword ptr [ebx - 0x3b7cfe40]; or al, 0x2b; dec ebp; add byte ptr [ecx], ch; ret 0xd801; 
0x001a7f16: fld dword ptr [ecx]; retf 0xc801; call 0x189c1d; add ebx, 0x34454; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001a6546: fld dword ptr [ecx]; retf 0xc801; call 0x189c1d; add ebx, 0x35d20; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0003c0f3: fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0003c232: fld dword ptr [esp]; add esp, 4; ret; 
0x0003c199: fld dword ptr [esp]; mov dword ptr [edx], eax; add esp, 4; ret; 
0x0006977e: fld qword ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx - 0x58f63], cl; call dword ptr [ecx + 0x50]; 
0x00101e44: fld qword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x4489; 
0x0011522c: fld qword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00121d09: fld qword ptr [eax]; add byte ptr [eax], al; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x00115469: fld qword ptr [eax]; add byte ptr [eax], al; mov ecx, esi; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0011528f: fld qword ptr [eax]; add byte ptr [eax], al; mov ecx, esi; mov edx, edi; call dword ptr gs:[0x10]; 
0x001aacdf: fld qword ptr [ecx]; add byte ptr [eax], al; mov eax, ecx; ret; 
0x0003bdcb: fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00055169: fld qword ptr [esp]; add esp, 0xc; ret; 
0x0003bf92: fld qword ptr [esp]; add esp, 8; ret; 
0x0003c064: fld st(0); test ah, 2; fchs; fcmove st(0), st(1); fstp st(1); ret; 
0x0018403a: fld xword ptr [ebp - 0x137cfff5]; adc al, 0x6a; add cl, byte ptr [ebp - 0x6993b80]; call dword ptr [eax - 0x18]; 
0x001ae47f: fld xword ptr [ecx]; ret 0xe2c1; 
0x000428f5: fld xword ptr [ecx]; sar dword ptr [eax + 2], 0xf; movsd dword ptr es:[edi], dword ptr [esi]; ret 0xe0d3; 
0x00092ed2: fld xword ptr [esi]; lea esi, [esi]; lea esi, cs:[esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x0003ba25: fld xword ptr [esp + 4]; fadd st(0); mov dword ptr [eax], ecx; ret; 
0x0003bc64: fld xword ptr [esp + 4]; fscale; fstp st(1); ret; 
0x0003ba1a: fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x000551e3: fld xword ptr [esp]; add esp, 0x1c; ret; 
0x001b6e2b: fld1; fdiv dword ptr [edx - 0x63da4]; fstp st(0); add esp, 0x20; ret; 
0x00088c99: fld1; mov eax, dword ptr [0x39ffffee]; ret; 
0x000c4c5e: fldcw word ptr [ecx]; ret; 
0x001238b4: fldenv [0x80000000]; pop ebx; pop esi; add eax, ecx; adc edx, 0; ret; 
0x000c14a6: fldenv [esi + 0xf]; je 0xc14fa; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000c1ca5: fldenv [esi + 0xf]; je 0xc1cf4; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x001a693c: fldenv [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x000c13aa: fldenv [esi + 0xf]; xlatb; ret; 
0x001ac599: fldenv [esi + 0xf]; xlatb; retf 0xf66; xlatb; ret; 
0x0008ecea: fldenv [esi - 0x70]; nop; nop; endbr32; ret; 
0x000b034c: fmul dword ptr [ebp + 0xf664049]; xlatb; ret; 
0x00104bb1: fmul dword ptr [ebp - 0x4376fea9]; and al, 0xf8; add byte ptr [eax], al; add byte ptr [edi], cl; dec esp; ret; 
0x0009e2d0: fmul dword ptr [ebp - 0x676ab79]; call dword ptr [eax - 0x73]; 
0x00140ccc: fmul dword ptr [ebx + 0x120245c]; ror byte ptr [edi], 1; inc edx; ret 0xd329; 
0x00125547: fmul dword ptr [ebx + 0xf046a09]; dec edi; ret; 
0x00038167: fmul dword ptr [ebx - 0x1cb63]; call dword ptr [esi + 0x50]; 
0x0010eea1: fmul dword ptr [ebx - 0x7cfbdbac]; ret; 
0x0005e016: fmul dword ptr [ebx - 0x8b63]; call dword ptr [eax - 0x75]; 
0x00097ff7: fmul dword ptr [ecx + 0x5bc03107]; pop esi; pop edi; ret; 
0x00097db4: fmul dword ptr [ecx - 0x16a1a436]; cmp dl, 0xff; jmp dword ptr [esi - 0x70]; 
0x0017ca7f: fmul dword ptr [ecx - 0x2776f3be]; pop ebx; ret; 
0x000597a3: fmul dword ptr [ecx - 0x362f7b]; inc dword ptr [ebx - 0x70f0e008]; ret 1; 
0x001af2e4: fmul dword ptr [ecx - 0x76dfdbbc]; ret; 
0x000dfb61: fmul dword ptr [ecx - 0x7cb3dba4]; ret; 
0x0002decb: fmul dword ptr [ecx - 0x7cfbdbbc]; rol byte ptr [edx], 0x39; ret 0x820f; 
0x0003dc4b: fmul dword ptr [edi]; dec eax; ret 0x56c3; 
0x000406bb: fmul dword ptr [edi]; dec eax; ret 0xf3c3; 
0x000a84fa: fmul dword ptr [edi]; inc ebp; ret 0xc483; 
0x0011fea0: fmul dword ptr [edi]; inc edi; ret 0x548b; 
0x000a9b0d: fmul dword ptr [edi]; inc edx; ret; 
0x0010cc4b: fmul dword ptr [edi]; lahf; ret 0xe8c1; 
0x00135b56: fmul dword ptr [edi]; xchg edx, eax; ret 0xd089; 
0x000a994f: fmul dword ptr [edi]; xchg edx, eax; ret; 
0x00194d41: fmul dword ptr [esi - 1]; inc dword ptr [ecx + 0x4692bc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019533d: fmul qword ptr [eax - 1]; inc dword ptr [ecx + 0x4626fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00027989: fmul qword ptr [ebp - 0x218f137d]; call dword ptr [eax - 0x73]; 
0x000fc343: fmul qword ptr [ebx - 0x5cf0afaf]; ret 0xd473; 
0x0003dc32: fmul qword ptr [ecx + 0x5f5e5bd8]; ret; 
0x000e9f7f: fnsave dword ptr [eax]; cld; jmp dword ptr [esi - 0x70]; 
0x000792aa: fnsave dword ptr [ebx + eax*2 - 0x75]; pop edi; or byte ptr [ecx], bh; ret; 
0x000d8793: fnstcw word ptr [eax - 0x7274000b]; ror cl, 0xff; dec dword ptr [ebp - 0x661f37f]; call dword ptr [eax - 0x73]; 
0x001a67f1: fnstcw word ptr [eax]; jne 0x1a6f70; pop ebx; ret; 
0x001a9623: fnstcw word ptr [eax]; jne 0x1a9850; pop ebx; ret; 
0x000aefb3: fnstcw word ptr [ecx]; ret 0xe372; 
0x000adab9: fnstcw word ptr [ecx]; ret 0xe672; 
0x000fd086: fnstcw word ptr [ecx]; ret; 
0x0003b923: fnstcw word ptr [edx + 0xa]; jne 0x3b930; fadd st(0); add esp, 0x18; pop ebx; ret; 
0x0003bcc2: fnstcw word ptr [edx + 0xb]; jne 0x3bcd0; fadd st(0); add esp, 0x18; pop ebx; ret; 
0x0003bfee: fnstcw word ptr [edx + 0xf]; jne 0x3c000; fadd st(0); add esp, 8; pop ebx; ret; 
0x00031fdf: fnstcw word ptr [esi]; jmp ecx; 
0x0010bcf3: fnstenv [0xc483fff8]; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00069d9c: fnstenv [ebp - 0x7d]; in al, dx; or byte ptr [ecx - 0x58b6b], cl; dec dword ptr [ebx - 0x58f63]; call dword ptr [ecx + 0x50]; 
0x0007361e: fnstenv [ecx + ebx - 0x7d]; in al, dx; or byte ptr [ebx - 0x4ff63], cl; call dword ptr [edx + 0x50]; 
0x0003bc7a: fnstsw ax; fstp st(0); and eax, 0x200; ret; 
0x001141a2: fnstsw word ptr [ecx - 1]; pop ebx; pop esi; mov eax, ecx; pop edi; ret; 
0x000b9365: fnstsw word ptr [ecx]; adc dword ptr [eax], eax; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00170361: frndint; jmp dword ptr [esi - 0x70]; 
0x001a670c: frstor dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0003bc68: fscale; fstp st(1); ret; 
0x001672f1: fsin; jmp dword ptr [ebp - 0x75]; 
0x001214fc: fst dword ptr [ecx]; add byte ptr [ebx - 0x48], dl; or al, byte ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000c66af: fstp dword ptr [ebx + 0x5e]; cmovg eax, edx; pop edi; ret; 
0x0008d2ce: fstp dword ptr [ebx + 0x5e]; mov eax, ecx; pop edi; pop ebp; ret; 
0x001a6f85: fstp dword ptr [ebx - 0x48]; add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x1a6f90; neg eax; ret; 
0x0003c22f: fstp dword ptr [esp]; fld dword ptr [esp]; add esp, 4; ret; 
0x0003c1d8: fstp dword ptr [esp]; fld dword ptr [esp]; mov dword ptr [edx], eax; add esp, 4; ret; 
0x0003f175: fstp qword ptr [eax]; xor eax, eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x000a84d2: fstp qword ptr [ebx + 0x5e]; pop edi; ret; 
0x000abc62: fstp qword ptr [ebx - 0x77]; rcr byte ptr [esi + 0x5f], 1; pop ebp; ret; 
0x000da7e1: fstp qword ptr [esp]; fld qword ptr [esp]; add esp, 0xc; ret; 
0x0003bf8f: fstp qword ptr [esp]; fld qword ptr [esp]; add esp, 8; ret; 
0x001b6e33: fstp st(0); add esp, 0x20; ret; 
0x0003bc7c: fstp st(0); and eax, 0x200; ret; 
0x0003bc6a: fstp st(1); ret; 
0x0003c22a: fstp st(1); sub esp, 4; fstp dword ptr [esp]; fld dword ptr [esp]; add esp, 4; ret; 
0x0003bf8a: fstp st(1); sub esp, 8; fstp qword ptr [esp]; fld qword ptr [esp]; add esp, 8; ret; 
0x0015628f: fstp st(5); in eax, dx; jmp dword ptr [esi - 0x70]; 
0x000a00eb: fstp xword ptr [eax + 0x2a]; mov eax, 0x107; call dword ptr gs:[0x10]; 
0x000eb13b: fstp xword ptr [eax + 0x5a]; mov eax, 0x166; lea ecx, [ebp - 0x6d324]; mov edi, 0x1000; call dword ptr gs:[0x10]; 
0x0003bc21: fstp xword ptr [eax]; add esp, 0x40; pop ebx; pop esi; pop edi; ret; 
0x000a01d5: fstp xword ptr [ecx + 4]; add ebx, ebx; mov ebx, dword ptr [ebx]; mov eax, 0x106; call dword ptr gs:[0x10]; 
0x000a0249: fstp xword ptr [ecx + 4]; add ebx, ebx; mov ebx, dword ptr [ebx]; mov eax, 0x198; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00083571: fstp xword ptr [ecx]; ror dword ptr [edi], 1; xchg esp, eax; ret; 
0x0003c8dd: fstpnce st(7), st(0); dec dword ptr [ecx - 0x72e7dbbc]; cmp dword ptr [ecx + ebx*8], -0x21; dec dword ptr [edi]; inc esp; ret 0xe3e9; 
0x0003c8e7: fstpnce st(7), st(0); dec dword ptr [edi]; inc esp; ret 0xe3e9; 
0x000861f5: fstpnce st(7), st(0); stc; jmp dword ptr [esi - 0x70]; 
0x0003bc7d: fsub dword ptr [0x200]; ret; 
0x001643a4: fsub dword ptr [eax - 7]; call dword ptr [eax - 0x18]; 
0x000a2699: fsub dword ptr [ecx]; ror byte ptr [ecx - 0x744a8b3d], 1; push esi; or byte ptr [ecx], ch; ret 0xfa83; 
0x001a69dc: fsub dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x000b8b5c: fsub dword ptr [esi + 0xf]; xlatb; ret; 
0x0002f545: fsub qword ptr [esi - 0x34faffeb]; clc; and byte ptr [eax], al; mov eax, dword ptr [eax + 0x10e0]; ret; 
0x0012f06d: fsub qword ptr [esi - 0x70]; endbr32; call 0x189c21; add edx, 0x10fd9b; mov eax, 0x123; call dword ptr gs:[0x10]; 
0x001a37c7: fsub st(1), st(0); ret; 
0x00177216: fsub st(3), st(0); call dword ptr [eax - 0x73]; 
0x0014d80b: fsubp st(0); out dx, eax; add al, 0xff; jmp dword ptr [esi - 0x70]; 
0x0003bbc7: fsubp st(1); add esp, 0x40; pop ebx; pop esi; pop edi; ret; 
0x000da7df: fsubp st(1); fstp qword ptr [esp]; fld qword ptr [esp]; add esp, 0xc; ret; 
0x0003bbf7: fsubp st(1); ret; 
0x00193241: fsubr dword ptr [ecx - 1]; inc dword ptr [ecx + 0x47e6bc3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0007b9ab: fsubr dword ptr [ecx]; sar byte ptr [0x593], 1; ja 0x7bab0; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x0007e82f: fsubr dword ptr [ecx]; sar byte ptr [0x593], 1; ja 0x7e8d1; sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x000849c4: fsubr dword ptr [ecx]; sar byte ptr [0x593], 1; ja 0x84bf0; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x0019895a: fsubr dword ptr [esi]; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014366b: fsubr qword ptr [ecx + edi*8]; call dword ptr [eax + 0x55]; 
0x00115067: fsubr qword ptr [ecx + edi*8]; call dword ptr [eax + 0x56]; 
0x0010ef65: fsubr qword ptr [ecx + edi*8]; call dword ptr [eax - 0x18]; 
0x0013c491: fsubr qword ptr [ecx + edi*8]; call dword ptr [eax - 0x73]; 
0x00106e31: fsubr qword ptr [ecx + edi*8]; dec dword ptr [ebp - 0x6c0bf71]; call dword ptr [eax - 0x17]; 
0x00040117: fsubr qword ptr [ecx + edi*8]; dec dword ptr [ebp - 0x6d0de6b]; dec dword ptr [ecx - 0x76ebdbac]; ret; 
0x0003fe95: fsubr qword ptr [ecx + edi*8]; dec dword ptr [ecx - 0x14d3dbbc]; mov ebx, 0x2cdc858d; stc; dec dword ptr [ecx - 0x76d3dbbc]; ret 0x4489; 
0x0003fe42: fsubr qword ptr [ecx + edi*8]; dec dword ptr [ecx - 0x76d3dbbc]; ret 0x4489; 
0x0003fb2d: fsubr qword ptr [ecx + edi*8]; dec dword ptr [ecx - 0x76d3dbbc]; ret 0xc189; 
0x0003fbe8: fsubr qword ptr [ecx + edi*8]; dec dword ptr [ecx - 0x76f7dbbc]; ret 0xc5e9; 
0x0003fa24: fsubr qword ptr [ecx + edi*8]; dec dword ptr [ecx - 0x76fbdbbc]; ret; 
0x0015a95b: fsubr qword ptr [ecx + edi*8]; dec dword ptr [edi]; inc esp; ret 0xec83; 
0x0008d9a5: fsubr qword ptr [ecx + edi*8]; inc dword ptr [ebx - 0x72aff314]; add dword ptr [edi], 0x3f; stc; call dword ptr [ecx + 0x52]; 
0x0008d931: fsubr qword ptr [ecx + edi*8]; inc dword ptr [ebx - 0x72aff314]; or dword ptr [esi], 0x3f; stc; call dword ptr [ecx + 0x52]; 
0x00083ffa: fsubr qword ptr [edx]; push dword ptr [ebp - 0x2c]; push edx; push ebx; push esi; call eax; 
0x000d0e83: fsubr st(0); ja 0xd0e55; push es; add byte ptr [ebx - 0x72d3db84], cl; xchg dword ptr [ebp + ebx*4 - 7], esp; call dword ptr [eax - 0x73]; 
0x00102308: fsubr st(0); mov byte ptr [0x89ffff97], al; ret 0xea83; 
0x000f93f8: fsubr st(0); ret 0xffe9; 
0x0004d4d1: fsubr st(0); sub dword ptr [eax], ecx; str word ptr [ebx - 0x72e7db84]; xchg dword ptr [eax + 0x78], ebx; stc; call dword ptr [eax - 0x73]; 
0x0017590b: fsubr st(2); inc dword ptr [ebx - 0x137cef3c]; or al, 0x31; call dword ptr [esi - 0x18]; 
0x0016f9b6: fucomi st(0); inc esp; jecxz 0x16f9b7; jmp dword ptr [esi - 0x70]; 
0x00184148: fucomi st(0); mov dl, 0x9b; sti; jmp dword ptr [esi - 0x70]; 
0x0010488e: fucomi st(3); ret 0xc901; 
0x00156290: fucomp st(5); jmp dword ptr [esi - 0x70]; 
0x001860b6: fucompi st(2); dec dword ptr [ebx - 0x72d7db84]; xchg dword ptr [ebx + edi*4], ebx; stc; call dword ptr [eax - 0x73]; 
0x00186093: fucompi st(2); dec dword ptr [ebx - 0x72d7db84]; xchg dword ptr [edi + ebp*2], ebp; stc; call dword ptr [eax - 0x73]; 
0x00175299: fucompi st(2); inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0003bc78: fxam; fnstsw ax; fstp st(0); and eax, 0x200; ret; 
0x000966d2: fyl2xp1; jmp dword ptr [esi - 0x70]; 
0x000a4a5c: hlt; adc eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax - 0x6b], eax; stc; call dword ptr [eax - 0x18]; 
0x000a713f: hlt; add byte ptr [eax], al; add byte ptr [ebp - 0x6666780], cl; call dword ptr [eax + 0x68]; 
0x0012452c: hlt; add byte ptr [eax], al; add byte ptr [ebx + 0x8b10c4], al; test eax, eax; je 0x124580; call eax; 
0x00124670: hlt; add byte ptr [eax], al; add byte ptr [ebx + 0x8b10c4], al; test eax, eax; je 0x124718; call eax; 
0x0004c5be: hlt; add byte ptr [eax], al; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x6de9; 
0x0004b8e9: hlt; add byte ptr [eax], al; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x8d2e; 
0x0016ab2f: hlt; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x840f; 
0x00043798: hlt; add byte ptr [eax], al; add cl, dl; call 0x21061825; ret 0xb60f; 
0x00144ca3: hlt; add dword ptr [ecx + ecx - 0x7d], esi; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000815fb: hlt; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0014150b: hlt; add esp, 8; pop ebx; ret; 
0x00188dc8: hlt; call dword ptr [eax - 0x18]; 
0x00186d82: hlt; call dword ptr [eax - 0x73]; 
0x0017b514: hlt; call ecx; 
0x000df1d1: hlt; call ptr [eax - 1]; je 0xdf1fb; and al, 0xe8; ret; 
0x001738d8: hlt; dec dword ptr [ebp + 0x34890170]; and al, 0xe8; ret; 
0x00152d07: hlt; dec dword ptr [ebp - 0xec5b37d]; call dword ptr [esi + 0x50]; 
0x000ef9fa: hlt; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00152845: hlt; inc dword ptr [ebx - 0x2776eb3c]; pop ebx; pop esi; ret; 
0x000dd814: hlt; inc dword ptr [ebx - 0x7c76ef3c]; push 0x8900003e; ret 0xc085; 
0x000e4e6d: hlt; jecxz 0xe4e6f; call dword ptr [ebx + 0x52]; 
0x000483c6: hlt; jg 0x483c1; call dword ptr [eax + 0x52]; 
0x00048422: hlt; jg 0x4841d; call dword ptr [eax - 1]; 
0x0004b924: hlt; jg 0x4b91f; call dword ptr [eax + 0x52]; 
0x0004b97d: hlt; jg 0x4b978; call dword ptr [eax - 1]; 
0x0004f4a8: hlt; jg 0x4f4a3; call dword ptr [eax + 0x52]; 
0x0004f509: hlt; jg 0x4f504; call dword ptr [eax - 1]; 
0x00056e74: hlt; jg 0x56e6f; call dword ptr [eax + 0x51]; 
0x00056ef9: hlt; jg 0x56ef4; call dword ptr [eax - 1]; 
0x0005d4d8: hlt; jg 0x5d4d3; call dword ptr [eax + 0x56]; 
0x0005d62f: hlt; jg 0x5d62a; call dword ptr [edx + 0x51]; 
0x000c85d8: hlt; jg 0xc85d3; call dword ptr [eax + 0x52]; 
0x000c8635: hlt; jg 0xc8630; call dword ptr [eax + 0x55]; 
0x000cbf85: hlt; jg 0xcbf80; call dword ptr [eax + 0x52]; 
0x000cbfe2: hlt; jg 0xcbfdd; call dword ptr [eax + 0x55]; 
0x000cf828: hlt; jg 0xcf823; call dword ptr [eax + 0x52]; 
0x000cf885: hlt; jg 0xcf880; call dword ptr [eax + 0x55]; 
0x000d5f40: hlt; jg 0xd5f3b; call dword ptr [eax + 0x52]; 
0x000d5fb5: hlt; jg 0xd5fb0; call dword ptr [eax - 1]; 
0x00152ec3: hlt; jmp dword ptr [ebp - 0x75]; 
0x000ed83c: hlt; jmp dword ptr [esi - 0x70]; 
0x001ac185: hlt; jne 0x1ac1c0; pop edi; pop esi; pop ebx; ret; 
0x0003eab4: hlt; jne 0x3eab0; call dword ptr [eax - 0x73]; 
0x00043539: hlt; jp 0x43534; inc dword ptr [ecx]; fidivr word ptr [esi]; jmp esi; 
0x0005b56c: hlt; js 0x5b568; call dword ptr [eax - 0x18]; 
0x0016ba0a: hlt; mov ch, 0xf9; call dword ptr [eax - 0x73]; 
0x00153e9f: hlt; mov cl, 0xf9; call dword ptr [eax - 0x73]; 
0x001937b7: hlt; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019326e: hlt; mov dword ptr [edx - 8], eax; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0013be1b: hlt; mov eax, dword ptr [eax + 0x18]; ret; 
0x0008c94b: hlt; mov eax, dword ptr [eax]; mov dword ptr [ecx], eax; ret; 
0x000ea120: hlt; mov eax, edx; call dword ptr gs:[0x10]; 
0x00126fd8: hlt; mov ebx, 0xc483fff9; adc byte ptr [ebp - 0x367bf040], al; add eax, 0xec830000; or byte ptr [ebp - 0x6b2f87d], cl; call dword ptr [eax + 0x55]; 
0x00196361: hlt; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00198361: hlt; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, edx; pop ebx; ret; 
0x00056628: hlt; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x00025a3b: hlt; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001aa2ea: hlt; pop edi; ret; 
0x00186dc8: hlt; ret 0xffe9; 
0x00125c58: hlt; ret 0xfff2; 
0x00076958: hlt; ret 0xffff; 
0x000fd825: hlt; ret; 
0x000a7667: hlt; std; jmp dword ptr [esi - 0x70]; 
0x001414d2: hlt; stosb byte ptr es:[edi], al; stc; call dword ptr [eax - 0x73]; 
0x001a9367: hlt; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x000c2be3: hlt; xor eax, eax; ret; 
0x0012ba55: idiv bh; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00124b8e: idiv bh; add esp, 0x10; mov eax, 1; add esp, 8; pop ebx; ret; 
0x00157d7d: idiv bh; add esp, 0x10; test eax, eax; sete al; add esp, 0xc; ret; 
0x0015bf3c: idiv bh; add esp, 0x1c; ret; 
0x000d46fa: idiv bh; and ch, 2; lea edx, [edx - 0x165354]; cmove eax, edx; ret; 
0x000a8b3a: idiv bh; and ch, 2; lea edx, [edx - 0x17cc74]; cmove eax, edx; ret; 
0x000ac2ba: idiv bh; and ch, 2; lea edx, [edx - 0x17cf64]; cmove eax, edx; ret; 
0x000ac2fa: idiv bh; and ch, 2; lea edx, [edx - 0x17cfd4]; cmove eax, edx; ret; 
0x000a95ea: idiv bh; and ch, 2; lea edx, [edx - 0x17d054]; cmove eax, edx; ret; 
0x000a962a: idiv bh; and ch, 2; lea edx, [edx - 0x17d0d4]; cmove eax, edx; ret; 
0x000ac37a: idiv bh; and ch, 2; lea edx, [edx - 0x18f114]; cmove eax, edx; ret; 
0x00050127: idiv bh; call dword ptr [eax + 0x6a]; 
0x000ccd65: idiv bh; call dword ptr [edi + 0x6a]; 
0x000a8b02: idiv bh; cmovne eax, edx; ret; 
0x0014563e: idiv bh; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; ret; 
0x0005f4e6: idiv bh; dec dword ptr [ebp - 0x6842f7d]; call dword ptr [eax - 0x73]; 
0x000d0c4a: idiv bh; dec dword ptr [ebx - 0x72d3db84]; xchg dword ptr [ebp + ebx*4 - 7], esp; call dword ptr [eax - 0x73]; 
0x0004d41e: idiv bh; dec dword ptr [ebx - 0x72e7db84]; xchg dword ptr [eax + 0x78], ebx; stc; call dword ptr [eax - 0x73]; 
0x0017cc5b: idiv bh; dec dword ptr [ecx + 0x48891450]; add al, 0x5b; ret; 
0x0017d2ca: idiv bh; dec dword ptr [ecx + 0x548b0450]; and al, 8; mov dword ptr [eax + 0xc], edx; ret; 
0x001280d4: idiv bh; dec dword ptr [edi]; mov dh, 0x42; jnp 0x128069; xchg ebx, eax; ret; 
0x000e02f0: idiv bh; dec dword ptr [edi]; mov esi, 0x246c8903; add al, 0x83; ret; 
0x000b43bc: idiv bh; inc dword ptr [eax + 0xf000a79]; test byte ptr [edi], al; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000b4366: idiv bh; inc dword ptr [eax + 0xf000d79]; test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00107a01: idiv bh; jmp dword ptr [ebp - 0x5f]; 
0x000b3b12: idiv bh; jmp dword ptr [esi + 0xf]; 
0x0007a796: idiv bh; jmp dword ptr [esi - 0x70]; 
0x00124dc3: idiv bh; mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00124873: idiv bh; mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x00120644: idiv bh; mov ecx, dword ptr [esp + 0x54]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [esp + 8], eax; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x001205fe: idiv bh; mov edx, dword ptr [esp + 0xc]; mov ecx, dword ptr [esp + 0x54]; mov dword ptr [esp + 8], eax; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x000c5bce: idiv bh; test byte ptr [ecx + 0x75], 2; cmove eax, edx; ret; 
0x000ab4fe: idiv bh; test byte ptr [ecx + 0x76], 0x10; cmove eax, edx; ret; 
0x000ac43e: idiv bh; test byte ptr [ecx + 0x7b], 4; cmove eax, edx; ret; 
0x0008fcc0: idiv byte ptr [eax + 0xf0]; call dword ptr gs:[0x10]; 
0x0008f81b: idiv byte ptr [ecx + 0x81]; mov edx, 1; call dword ptr gs:[0x10]; 
0x000982a7: idiv byte ptr [edx + 0x7fffffff]; mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x00090ade: idiv byte ptr [edx + 0x7fffffff]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008fa59: idiv byte ptr [edx + 1]; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x0018c4d5: idiv byte ptr [edx + 1]; call dword ptr gs:[0x10]; 
0x00091315: idiv byte ptr [edx + 1]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000bd580: idiv cl; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000f98f6: idiv di; dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x146fc380]; call dword ptr [eax + 0x6a]; 
0x0002df05: idiv dword ptr [ecx]; ret 0xc275; 
0x0013e1e5: idiv dword ptr [edx - 0xc]; jmp dword ptr [esi - 0x70]; 
0x000dfc16: idiv dword ptr [esi]; jmp edi; 
0x0003ef9d: idiv dword ptr [esp + 0xc]; mov dword ptr [ecx], eax; mov eax, ecx; mov dword ptr [ecx + 4], edx; ret 4; 
0x00154275: idiv ebp; in eax, dx; jmp dword ptr [esi - 0x70]; 
0x000a6ec8: idiv edi; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000ab548: idiv edi; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00190534: idiv edi; add esp, 0x2c; ret; 
0x000e7384: idiv edi; call dword ptr [eax + 0x55]; 
0x001b12c7: idiv edi; dec dword ptr [ebp + 0xb6]; add byte ptr [ebp + 0x24548bdb], al; and byte ptr [edi], cl; xchg ebp, eax; ret; 
0x001922cf: idiv edi; dec dword ptr [ebx - 0x46f43]; dec dword ptr [ebp - 0x65dc379]; call dword ptr [eax - 0x73]; 
0x000fa7cf: idiv edi; dec dword ptr [ebx - 0x46f43]; dec dword ptr [ebp - 0x65f3779]; call dword ptr [eax - 0x73]; 
0x0019034f: idiv edi; dec dword ptr [ebx - 0x46f43]; dec dword ptr [ebp - 0x65f4f79]; call dword ptr [eax - 0x73]; 
0x0018e64f: idiv edi; dec dword ptr [ebx - 0x46f43]; dec dword ptr [ebp - 0x65f6f79]; call dword ptr [eax - 0x73]; 
0x001913f7: idiv edi; dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x12ba7380]; call dword ptr [eax + 0x6a]; 
0x000f98f7: idiv edi; dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x146fc380]; call dword ptr [eax + 0x6a]; 
0x0018f477: idiv edi; dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x147dd380]; call dword ptr [eax + 0x6a]; 
0x000f5ff7: idiv edi; dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x14a90380]; call dword ptr [eax + 0x6a]; 
0x0018d777: idiv edi; dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x14b70380]; call dword ptr [eax + 0x6a]; 
0x000f26b7: idiv edi; dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x14e24380]; call dword ptr [eax + 0x6a]; 
0x00033d61: idiv edi; dec dword ptr [ecx - 0x2d7a3f88]; je 0x33d75; mov dword ptr [esp + 0x14], eax; call edx; 
0x000cccc5: idiv edi; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0009e03f: idiv edi; inc dword ptr [ebx - 0x3fe6fe08]; add esp, 0x1c; ret; 
0x001af659: idiv edi; inc dword ptr [ebx - 0x71f0e008]; mov eax, dword ptr [0x89000008]; ret; 
0x0014c3c9: idiv edi; inc dword ptr [ebx - 0x7a72f714]; sub ecx, edi; call dword ptr [eax - 0x73]; 
0x000b3c1d: idiv edi; jmp dword ptr [esi + 0xf]; 
0x0003aa21: idiv edi; jmp dword ptr [esi - 0x70]; 
0x001a5960: idiv edi; mov eax, dword ptr [ebx + eax*4 - 0x86474]; sub eax, ecx; pop ebp; pop ebx; ret; 
0x001a3153: idiv edi; mov eax, dword ptr [ebx + eax*4 - 0x86474]; sub eax, ecx; pop ebx; ret; 
0x001149e3: idiv edi; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov edx, eax; mov eax, 8; call dword ptr gs:[0x10]; 
0x00114763: idiv edi; mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 6; call dword ptr gs:[0x10]; 
0x000a6e41: idiv edi; pop ebx; pop esi; pop edi; ret; 
0x0010488a: idiv edi; push dword ptr [ecx]; fucomi st(3); ret 0xc901; 
0x001a5967: idiv edi; sub eax, ecx; pop ebp; pop ebx; ret; 
0x001a315a: idiv edi; sub eax, ecx; pop ebx; ret; 
0x001a72d9: idiv edi; sub eax, ecx; pop esi; pop edi; pop ebx; ret; 
0x00178733: idiv edi; sub esp, 8; lea edx, [esp + 0x20]; push edx; push eax; call edi; 
0x0019a41c: idiv esi; inc dword ptr [ecx + 0x41691c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0015fc9b: imul al; scasd eax, dword ptr es:[edi]; ret 0xffff; 
0x001780d5: imul bl; mov ebx, 0xfc5c23e8; jmp dword ptr [esi - 0x70]; 
0x0013a486: imul byte ptr [ecx + 0x489ffef]; and al, 0x89; ret; 
0x001a9387: imul byte ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x000b0a88: imul byte ptr [ecx]; ret 0x280f; 
0x000b247c: imul byte ptr [ecx]; ret 0xc301; 
0x00058669: imul byte ptr [ecx]; ret; 
0x00151576: imul byte ptr [edx]; out dx, al; dec dword ptr [ebp - 0x64f437d]; call dword ptr [eax + 0x68]; 
0x000b4302: imul cl; mov eax, 0x2efffff0; lea esi, [esi]; mov eax, edx; pop ebx; ret; 
0x001a9318: imul dword ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x000b0bb8: imul dword ptr [ecx]; ret 0x280f; 
0x000b25dc: imul dword ptr [ecx]; ret 0xc301; 
0x00194c58: imul eax, dword ptr [eax + eax], 3; sbb al, 0x8b; jmp ebx; 
0x001548d9: imul eax, dword ptr [ebx + 0x5e5b2cc4], 0x5f; pop ebp; ret; 
0x00152fc6: imul eax, dword ptr [ebx + ecx*4], 0x33; mov dword ptr [esp], ebx; mov ebx, edi; call 0x231a0; mov dword ptr [esp], ebp; call esi; 
0x000798e9: imul eax, dword ptr [ecx + 0x44cc4], 0x5f5e5b00; pop ebp; ret; 
0x000abfdd: imul eax, dword ptr [ecx], 0; add esp, 0x18; pop ebx; ret; 
0x0004d1f6: imul eax, dword ptr [ecx], 0x17ba0000; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5152; 
0x000a1a33: imul eax, dword ptr [ecx], 0xec830000; add al, 0x8d; xchg dword ptr [edx], ebx; inc edx; stc; call dword ptr [eax + 0x53]; 
0x000b96b3: imul eax, dword ptr [edi], 0x5e5f0000; pop ebx; ret; 
0x001308e1: imul eax, dword ptr [esi - 0x11], -1; ret; 
0x000e821e: imul eax, dword ptr [esp + 0x10], 0x34; add eax, dword ptr [edx]; add esp, 0xc; ret; 
0x001ace02: imul eax, eax, 0x1010101; shr eax, 0x18; ret; 
0x00041710: imul eax, ebp; add eax, ebx; push eax; mov eax, dword ptr [esp + 0x28]; call eax; 
0x00155861: imul eax, ecx, 0xb6db6db7; pop edi; pop ebp; ret; 
0x000417fd: imul eax, esi; add eax, edi; push eax; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0013de81: imul ebp, ecx, -1; jmp dword ptr [esi - 0x70]; 
0x0012c657: imul ebp, edi, -1; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0012e419: imul ebp, edi, -1; ret; 
0x00141503: imul ebp, edi, 0xf883ffff; cmc; je 0x141500; add esp, 8; pop ebx; ret; 
0x000a6afb: imul ebx, dword ptr [eax], -0x77; jae 0xa6b20; mov dword ptr [ebx], eax; push eax; call ecx; 
0x0013e881: imul ebx, edi, -1; jmp dword ptr [esi - 0x70]; 
0x0013d823: imul ebx, edi, 0xc483fffb; and byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000c30c6: imul ecx, dword ptr [eax + eax], -0x7f; ret 0xbd4b; 
0x000a0fa1: imul ecx, dword ptr [eax], 0x830ce8c1; ret 0x8901; 
0x0009a73d: imul ecx, dword ptr [ecx + eax], 0x5b; pop esi; pop edi; ret; 
0x0003c671: imul ecx, dword ptr [ecx - 0x3b7cfffb], 0x10; test eax, eax; jne 0x3c688; add esp, 8; pop ebx; ret; 
0x001938c7: imul edi, dword ptr [edx + 4], 0; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00193247: imul edi, dword ptr [esi + 4], 0; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x000f3736: imul edi, ebx, -1; lea esi, [esi]; xor eax, eax; ret; 
0x0007c386: imul edi, edi, -1; jmp dword ptr [esi - 0x70]; 
0x0005d9fd: imul edi, edi, 0x538dffff; call dword ptr [edi - 0x77]; 
0x00193242: imul edi, edi, 0x6bc381ff; jle 0x19324e; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00176354: imul edi, esi, 0xec83ffff; or byte ptr [ebp - 0x9b7b], cl; call dword ptr [eax + 0x6a]; 
0x0010e3fc: imul esi, ecx, -1; ret; 
0x0013e281: imul esp, ebp, -1; jmp dword ptr [esi - 0x70]; 
0x000a08aa: imul esp, ebp, 0x19; add byte ptr [ebx - 0x74fbdbac], cl; adc dl, byte ptr [eax + 0x3589089]; add byte ptr [eax], al; ret; 
0x00124998: in al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011ef05: in al, 0; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0003006e: in al, 0x10; add byte ptr [eax], al; call 0x12d020; add esp, 0x1c; ret; 
0x000a095a: in al, 0x19; add byte ptr [ebx - 0x72afeb14], al; adc byte ptr [ecx + ebx*2], 0xf9; call dword ptr [eax - 0x18]; 
0x000a093b: in al, 0x19; add byte ptr [ebx - 0x74fbdbac], cl; adc dl, byte ptr [eax + 0x3949089]; add byte ptr [eax], al; ret; 
0x00038f3b: in al, 0x39; ret; 
0x000cfff8: in al, 0x3d; clc; call dword ptr [esi + 0x53]; 
0x0016eba7: in al, 0x50; push esi; call 0x1704b0; mov eax, dword ptr [esp + 0x18]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x000e9ee8: in al, 0x53; cli; jmp dword ptr [esi - 0x70]; 
0x0007e51a: in al, 0x56; call dword ptr [eax + 0x2c]; 
0x00176594: in al, 0x64; stc; call dword ptr [edi + 0x56]; 
0x0007c4d5: in al, 0x6a; call dword ptr [esi - 0x18]; 
0x00025e2f: in al, 0x6f; stc; call dword ptr [eax - 0x73]; 
0x0004020f: in al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000af9f9: in al, 0x83; ret 0x8301; 
0x000961f0: in al, 0x86; stc; call dword ptr [eax - 0x73]; 
0x0007bc09: in al, 0x89; ret; 
0x000a1200: in al, 0x8a; stc; call dword ptr [eax + 0x6a]; 
0x0009a393: in al, 0x8b; mov esp, 0x1aecc3; add bh, dh; mov dword ptr [ecx], 0x74000000; aad 0x89; ret 0xe083; 
0x00176167: in al, 0x8b; pop ebp; adc al, 0x8d; xchg ebp, eax; stc; call dword ptr [eax + 0x53]; 
0x00133bd6: in al, 0x8d; xchg eax, edi; push esp; stc; call dword ptr [eax - 0x18]; 
0x0005ac58: in al, 0xb7; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000556f5: in al, 0xdc; cld; jmp dword ptr [esi - 0x70]; 
0x0012e420: in al, 0xf0; sub esp, 0xc; push esi; call edx; 
0x000c5b81: in al, 0xf6; dec dword ptr [ebp - 0x6635770]; call dword ptr [edx - 0x73]; 
0x000c5ba0: in al, 0xf6; jmp dword ptr [esi - 0x70]; 
0x000dfc12: in al, 0xf8; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x00183847: in al, 0xf9; jmp dword ptr [ebp - 0x75]; 
0x001aacb9: in al, 0xf; test dword ptr [eax - 0x77ffffff], esi; ret 0xe280; 
0x001aade4: in al, 0xf; test dword ptr [ebp - 0x78000000], eax; ret 0xe280; 
0x0016f853: in al, 0xfc; jmp dword ptr [esi - 0x70]; 
0x000e4e19: in al, 0xff; call dword ptr [esi + 0x51]; 
0x000f6f33: in al, 0xff; inc dword ptr [ebx - 0x17a9f314]; popal; ret 0xfff2; 
0x0013e332: in al, 0xff; jmp dword ptr [esi - 0x70]; 
0x000e1836: in al, 0xff; push esi; ret; 
0x00024af6: in al, 0xff; xor edx, dword ptr gs:[0x18]; rol edx, 9; mov dword ptr [eax + 0x1a50], edx; ret; 
0x000c3178: in al, 1; add byte ptr [eax], al; ret; 
0x0019dc71: in al, 3; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0010c345: in al, dx; adc al, 0x6a; add byte ptr [edx], ch; call 0x10c310; add esp, 0x1c; ret; 
0x0018403f: in al, dx; adc al, 0x6a; add cl, byte ptr [ebp - 0x6993b80]; call dword ptr [eax - 0x18]; 
0x0016a24f: in al, dx; adc al, 0x8d; adc byte ptr [ebp + 0x50fff962], 0x6a; add ch, al; push ecx; ret; 
0x0016ccef: in al, dx; adc al, 0x8d; adc byte ptr [ebp + 0x63], 0xf9; call dword ptr [eax + 0x6a]; 
0x0016c66f: in al, dx; adc al, 0x8d; add byte ptr [edi + 0x63], 0xf9; call dword ptr [eax + 0x6a]; 
0x0016db1f: in al, dx; adc al, 0x8d; cmp byte ptr [esi + 0x63], 0xf9; call dword ptr [eax + 0x6a]; 
0x0016b30f: in al, dx; adc al, 0x8d; xor bl, 0x62; stc; call dword ptr [eax + 0x6a]; 
0x0016d70f: in al, dx; adc al, 0x8d; xor byte ptr [eax + 0x63], 0xf9; call dword ptr [eax + 0x6a]; 
0x0018400f: in al, dx; adc al, 0xff; je 0x184038; sbb byte ptr [ebp - 0x6993b80], cl; call dword ptr [eax - 0x18]; 
0x000385d1: in al, dx; adc al, 0xff; mov bl, 0xd8; adc al, byte ptr [eax]; add al, ch; ret 0xfeab; 
0x0003c5cd: in al, dx; adc al, byte ptr [eax]; add byte ptr [edi], cl; xchg esp, eax; ret 0xec83; 
0x00024f8f: in al, dx; adc byte ptr [eax - 0x25], ch; add dword ptr [eax], eax; add byte ptr [ebp - 0x6989380], cl; call dword ptr [eax + 0x6a]; 
0x00030091: in al, dx; adc byte ptr [ebp - 0x20f0037d], cl; call dword ptr [eax - 1]; 
0x00037def: in al, dx; adc byte ptr [ebp - 0x7d380], cl; call dword ptr [eax - 0x75]; 
0x0016ec11: in al, dx; adc byte ptr [ebp - 0xd02f37d], cl; call dword ptr [eax - 0x73]; 
0x00162791: in al, dx; adc byte ptr [ebp - 0xdc6c37d], cl; call dword ptr [eax - 0x73]; 
0x00088e16: in al, dx; add al, 0x29; ret 0x5052; 
0x00082dab: in al, dx; add al, 0x29; ret 0xfac1; 
0x0011ed81: in al, dx; add al, 0x29; ret; 
0x000f1f42: in al, dx; add al, 0x29; ror byte ptr [ecx - 0x49f7b], 1; call dword ptr [eax + 0x6a]; 
0x00024e20: in al, dx; add al, 0x50; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call esi; 
0x0008a141: in al, dx; add al, 0x50; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x000834db: in al, dx; add al, 0x50; push edx; push esi; call ecx; 
0x0012c568: in al, dx; add al, 0x51; push 3; push ebx; call edx; 
0x00089774: in al, dx; add al, 0x51; push eax; push esi; call edx; 
0x0008a3a9: in al, dx; add al, 0x52; push dword ptr [esp + 0x3c]; push ebp; call dword ptr [esi + 0x20]; 
0x0007e515: in al, dx; add al, 0x53; push dword ptr [ebp - 0x1c]; push esi; call dword ptr [eax + 0x2c]; 
0x0007c0e6: in al, dx; add al, 0x53; push dword ptr [esp + 0x1c]; push dword ptr [esi + 0x98]; call eax; 
0x00079486: in al, dx; add al, 0x53; push edi; push eax; call dword ptr [ebp + 0x1c]; 
0x00087b8d: in al, dx; add al, 0x55; push edi; push ebx; call dword ptr [esi + 0x3c]; 
0x0007de13: in al, dx; add al, 0x56; push dword ptr [ebp + 8]; push edx; call dword ptr [ebx + 0x1c]; 
0x0008795f: in al, dx; add al, 0x56; push dword ptr [esp + 0x38]; push ebp; call dword ptr [eax + 0x1c]; 
0x0007f9f0: in al, dx; add al, 0x56; push dword ptr [esp + 0x38]; push edi; call dword ptr [eax + 0x1c]; 
0x00024ee1: in al, dx; add al, 0x56; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x00087adf: in al, dx; add al, 0x56; push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x0007d571: in al, dx; add al, 0x56; push ecx; push ebx; call dword ptr [ebp + 0x1c]; 
0x0007fd37: in al, dx; add al, 0x56; push edx; push ebx; call dword ptr [ebp + 0x1c]; 
0x0012c510: in al, dx; add al, 0x57; push 0; push ebx; call esi; 
0x0012c524: in al, dx; add al, 0x57; push 1; push ebx; call esi; 
0x0012c537: in al, dx; add al, 0x57; push 2; push ebx; call esi; 
0x0007f8f9: in al, dx; add al, 0x57; push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x0007c446: in al, dx; add al, 0x57; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x0007d4f1: in al, dx; add al, 0x6a; adc byte ptr [ebp + 0x56], dl; call dword ptr [eax + 0x1c]; 
0x0008c74a: in al, dx; add al, 0x6a; add byte ptr [edx], ch; push esi; call dword ptr [ebp + 0x2c]; 
0x00143661: in al, dx; add al, 0x6a; add dword ptr [ebx - 0x72ebdbbc], ecx; sbb ah, 0x2c; stc; call dword ptr [eax + 0x55]; 
0x000ef9eb: in al, dx; add al, 0x6a; add eax, 0x4c818d50; je 0xef9ee; call dword ptr [eax - 0x18]; 
0x0006063d: in al, dx; add al, 0x6a; add eax, 0x4c838d50; je 0x60640; call dword ptr [eax - 0x18]; 
0x00060aab: in al, dx; add al, 0x6a; add eax, 0x4c838d50; je 0x60aae; call dword ptr [eax - 0x18]; 
0x000ac5f1: in al, dx; add al, 0x6a; add eax, 0x4c838d50; je 0xac5f4; call dword ptr [eax - 0x18]; 
0x00139b81: in al, dx; add al, 0x6a; add eax, 0x55f3978d; stc; call dword ptr [edx + 0x50]; 
0x0013a474: in al, dx; add al, 0x6a; add eax, 0x5629808d; stc; call dword ptr [eax - 0x75]; 
0x001392e7: in al, dx; add al, 0x6a; add eax, 0x564a808d; stc; call dword ptr [eax - 0x75]; 
0x0013bad3: in al, dx; add al, 0x6a; add eax, 0x6e4c868d; stc; call dword ptr [eax - 0x75]; 
0x0013bbdb: in al, dx; add al, 0x6a; add eax, 0x6e4c878d; stc; call dword ptr [eax - 0x75]; 
0x000eff95: in al, dx; add al, 0x6a; add eax, 0x9f88838d; stc; call dword ptr [eax - 0x73]; 
0x001398cf: in al, dx; add al, 0x6a; add eax, 0xa85c808d; stc; call dword ptr [eax - 0x75]; 
0x0013a527: in al, dx; add al, 0x6a; add eax, 0xa894808d; stc; call dword ptr [eax + 0x6a]; 
0x0010af6f: in al, dx; add al, 0x6a; add eax, 0xcc03848d; cli; clc; call dword ptr [eax - 0x73]; 
0x0017b846: in al, dx; add al, 0x6a; call dword ptr [ebp + 0x56]; 
0x0017b846: in al, dx; add al, 0x6a; call dword ptr [ebp + 0x56]; call edi; 
0x0017d43e: in al, dx; add al, 0x6a; call dword ptr [ebp + 0x57]; 
0x000a0c01: in al, dx; add al, 0x80; int1; call dword ptr [edx + 0x51]; 
0x0013b114: in al, dx; add al, 0x83; ret; 
0x001253f8: in al, dx; add al, 0x89; ret; 
0x0008e562: in al, dx; add al, 0x8b; adc edx, dword ptr [esi + 0x50]; push ecx; call edx; 
0x00143cc7: in al, dx; add al, 0x8b; je 0x143cf0; adc byte ptr [ebp - 0x6cfb26a], cl; call dword ptr [edx - 0x46]; 
0x000d8448: in al, dx; add al, 0x8b; popfd; ror cl, 0xff; call dword ptr [esi + 0x6a]; 
0x0019044c: in al, dx; add al, 0x8b; push esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0009b3c1: in al, dx; add al, 0x8d; cmp dword ptr [ecx + eax*8], -0x1b; call dword ptr [eax - 0x73]; 
0x000a2250: in al, dx; add al, 0x8d; or dword ptr [eax + 0x42], 0xfffffff9; call dword ptr [eax + 0x56]; 
0x000a2174: in al, dx; add al, 0x8d; test dword ptr [eax + 0x42], ecx; stc; call dword ptr [eax + 0x53]; 
0x001425c1: in al, dx; add al, 0x8d; test dword ptr [eax + 0x6afff958], esp; add eax, 0x4c858d50; je 0x1425ca; call dword ptr [eax - 0x18]; 
0x00143bde: in al, dx; add al, 0x8d; test dword ptr [ebp + 0x30], ecx; stc; call dword ptr [eax - 0x77]; 
0x000a7a09: in al, dx; add al, 0x8d; test dword ptr [ebp + 0x6afff944], ecx; add eax, 0x4c858d50; je 0xa7a12; call dword ptr [eax - 0x18]; 
0x0016f629: in al, dx; add al, 0x8d; xchg byte ptr [edx + 0x6afff963], bh; add eax, 0x4c868d50; je 0x16f632; call dword ptr [eax - 0x18]; 
0x000a1a38: in al, dx; add al, 0x8d; xchg dword ptr [edx], ebx; inc edx; stc; call dword ptr [eax + 0x53]; 
0x0003c22d: in al, dx; add al, 0xd9; sbb al, 0x24; fld dword ptr [esp]; add esp, 4; ret; 
0x00041239: in al, dx; add al, 0xf; scasd eax, dword ptr es:[edi]; ret 0x5750; 
0x000410e9: in al, dx; add al, 0xf; scasd eax, dword ptr es:[edi]; ret 0x8b50; 
0x000417ec: in al, dx; add al, 0xf; scasd eax, dword ptr es:[edi]; ret; 
0x0004109c: in al, dx; add al, 0xff; je 0x410c5; or byte ptr [esi + 0x57], dl; mov eax, dword ptr [esp + 0x10]; call eax; 
0x00041151: in al, dx; add al, 0xff; je 0x4117a; or byte ptr [esi + 0x57], dl; mov eax, dword ptr [esp + 0x10]; call eax; 
0x000411c9: in al, dx; add al, 0xff; je 0x411f2; or byte ptr [esi + 0x57], dl; mov eax, dword ptr [esp + 0x10]; call eax; 
0x0007c140: in al, dx; add al, 0xff; je 0x7c169; xor byte ptr [ebp + 0x5110244c], cl; push dword ptr [edx + 0x98]; call eax; 
0x0007e74f: in al, dx; add al, 0xff; jne 0x7e768; push dword ptr [ebp + 0xc]; push esi; call dword ptr [ebx + 0x2c]; 
0x0012471f: in al, dx; add al, 0xff; xor byte ptr [ebp - 0x6a0aa7d], cl; call dword ptr [eax + 0x6a]; 
0x00124587: in al, dx; add al, 0xff; xor byte ptr [ebp - 0x6a6a47d], cl; call dword ptr [eax + 0x6a]; 
0x001871b0: in al, dx; add al, 0xff; xor edi, edi; push dword ptr ss:[esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x001717e6: in al, dx; add al, 1; ret 0xc129; 
0x001b0980: in al, dx; add al, byte ptr [eax]; add byte ptr [ecx], bh; ret; 
0x0014f0c8: in al, dx; add al, byte ptr [eax]; add byte ptr [esi - 0x18], dl; push cs; ret; 
0x001860a8: in al, dx; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg ebx, esi; stc; call dword ptr [eax - 0x18]; 
0x00046cdf: in al, dx; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0010546e: in al, dx; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0013a7d7: in al, dx; add esp, 4; pop ebx; pop esi; ret; 
0x001563b3: in al, dx; add esp, 8; pop ebx; ret; 
0x0019772d: in al, dx; and al, 0xff; inc dword ptr [ecx + 0x440ffc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00148b2a: in al, dx; bound ecx, qword ptr [edi]; add byte ptr [ebx - 0x77], dl; ret; 
0x00171be3: in al, dx; call dword ptr [eax - 0x73]; 
0x001710e6: in al, dx; call dword ptr [ebp + 0x50]; 
0x0016b2b9: in al, dx; call dword ptr [edx + 0x52]; 
0x0010d0ec: in al, dx; call dword ptr [esi + 0x6a]; 
0x001711b2: in al, dx; call dword ptr [esi - 0x17]; 
0x000d53e5: in al, dx; cmc; dec dword ptr [ebx - 0x72ebdb84]; xchg dword ptr [eax + edi*2], esi; stc; call dword ptr [eax + 0x68]; 
0x001852a1: in al, dx; cmp al, 0x89; ret 0x489; 
0x00169ad3: in al, dx; cmp byte ptr [ebp - 0x69d8380], cl; jmp dword ptr [ebp - 0x75]; 
0x000c6323: in al, dx; cmp byte ptr [ebp - 0x6d5dc48], cl; jmp dword ptr [ebp - 0x75]; 
0x0016ba51: in al, dx; dec dword ptr [ebx - 0x72d7db84]; xchg esp, esi; mov ch, 0xf9; call dword ptr [eax - 0x73]; 
0x00157f04: in al, dx; dec esp; int1; call dword ptr [eax - 0x73]; 
0x0017d2c9: in al, dx; idiv bh; dec dword ptr [ecx + 0x548b0450]; and al, 8; mov dword ptr [eax + 0xc], edx; ret; 
0x00033d60: in al, dx; idiv edi; dec dword ptr [ecx - 0x2d7a3f88]; je 0x33d75; mov dword ptr [esp + 0x14], eax; call edx; 
0x000c5b80: in al, dx; in al, 0xf6; dec dword ptr [ebp - 0x6635770]; call dword ptr [edx - 0x73]; 
0x00175f65: in al, dx; inc esp; add dword ptr [eax], eax; add byte ptr [ecx - 0x12f7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00156c44: in al, dx; inc esp; add dword ptr [eax], eax; add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00079227: in al, dx; jle 0x79223; call dword ptr [eax - 0x73]; 
0x0015492c: in al, dx; jmp dword ptr [ebp - 0x5f]; 
0x00158286: in al, dx; jmp dword ptr [ebp - 0x75]; 
0x0002d96f: in al, dx; jno 0x2d96b; call dword ptr [eax - 0x73]; 
0x0002d992: in al, dx; jno 0x2d98e; call dword ptr [eax - 0x73]; 
0x0002d9b5: in al, dx; jno 0x2d9b1; call dword ptr [eax - 0x73]; 
0x0002da1c: in al, dx; jno 0x2da18; call dword ptr [eax - 0x73]; 
0x0002da3f: in al, dx; jno 0x2da3b; call dword ptr [eax - 0x73]; 
0x0002da77: in al, dx; jno 0x2da73; call dword ptr [eax - 0x73]; 
0x0002798c: in al, dx; jo 0x2796d; call dword ptr [eax - 0x73]; 
0x00027b61: in al, dx; jo 0x27b42; call dword ptr [eax - 0x73]; 
0x00155f21: in al, dx; mov dl, 0xf9; call dword ptr [eax - 0x73]; 
0x001935f2: in al, dx; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001968c3: in al, dx; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00198863: in al, dx; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, edx; pop ebx; ret; 
0x0016ec2b: in al, dx; movsd dword ptr es:[edi], dword ptr [esi]; add byte ptr [eax], al; pop ebx; ret; 
0x000685dd: in al, dx; or al, 0x29; ret; 
0x000ec5cf: in al, dx; or al, 0x31; call dword ptr [eax - 0x18]; 
0x000ec5cf: in al, dx; or al, 0x31; call dword ptr [eax - 0x18]; xchg dword ptr [ebx - 0x3b7cfffc], edx; adc byte ptr [ecx], bh; ret; 
0x00143170: in al, dx; or al, 0x31; call dword ptr [ebp + 1]; 
0x0007b90c: in al, dx; or al, 0x31; call dword ptr [ebp - 0x18]; 
0x0008823b: in al, dx; or al, 0x31; call dword ptr [ebx - 0x18]; 
0x000e921f: in al, dx; or al, 0x31; call dword ptr [esi - 0x18]; 
0x0013bf23: in al, dx; or al, 0x31; fisttp dword ptr [ecx + 0xbab8e1]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000983d5: in al, dx; or al, 0x31; rol byte ptr [eax + 0xf00197d], cl; xchg ebp, eax; ret 0xe2c1; 
0x00098b6c: in al, dx; or al, 0x31; rol byte ptr [eax + 0xf00197f], cl; xchg ebp, eax; ret 0xe2c1; 
0x0016322e: in al, dx; or al, 0x50; call 0x186f70; mov dword ptr [esp], ebp; call edi; 
0x00163415: in al, dx; or al, 0x50; call 0x186f70; mov dword ptr [esp], ebp; call esi; 
0x0016eef1: in al, dx; or al, 0x50; call dword ptr [ecx + 0xc]; 
0x00178351: in al, dx; or al, 0x50; call dword ptr [edx + 0x10]; 
0x000a6e2b: in al, dx; or al, 0x50; call edx; 
0x00026288: in al, dx; or al, 0x51; call 0x186f70; mov dword ptr [esp], ebx; mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x00026932: in al, dx; or al, 0x52; call 0x186f70; mov dword ptr [esp], ebx; mov edx, dword ptr [ebp - 0x44]; call edx; 
0x0015a234: in al, dx; or al, 0x53; call 0x186f70; add esp, 0x10; mov eax, ebx; call eax; 
0x001635c4: in al, dx; or al, 0x53; call 0x186f70; mov dword ptr [esp], ebp; call ebx; 
0x0002f4f2: in al, dx; or al, 0x53; call 0x186f70; mov dword ptr [esp], esi; call ebx; 
0x0016faf4: in al, dx; or al, 0x53; call dword ptr [eax + 0x10]; 
0x0008826f: in al, dx; or al, 0x53; call dword ptr [edi + 0x44]; 
0x00080d74: in al, dx; or al, 0x53; call dword ptr [esi + 0x10]; 
0x000876f8: in al, dx; or al, 0x53; call dword ptr [esi + 0x30]; 
0x00177089: in al, dx; or al, 0x55; call dword ptr [eax + 0x10]; 
0x0017108f: in al, dx; or al, 0x55; call dword ptr [esi]; 
0x001770a0: in al, dx; or al, 0x55; call eax; 
0x00175e93: in al, dx; or al, 0x55; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x10]; 
0x00025f75: in al, dx; or al, 0x56; call 0x186f70; add ebp, dword ptr [edi + 8]; mov dword ptr [esp], ebp; call esi; 
0x00026115: in al, dx; or al, 0x56; call 0x186f70; mov dword ptr [esp], ebx; call esi; 
0x0016f087: in al, dx; or al, 0x56; call dword ptr [eax + 0x10]; 
0x0008629a: in al, dx; or al, 0x56; call dword ptr [eax + 0x30]; 
0x0008b7d0: in al, dx; or al, 0x56; call dword ptr [ebp + 0x30]; 
0x0007b9ba: in al, dx; or al, 0x56; call dword ptr [ebx + 0x30]; 
0x0007e83e: in al, dx; or al, 0x56; call dword ptr [ebx + 0x34]; 
0x0018b75b: in al, dx; or al, 0x56; call dword ptr [ebx + 0x44]; 
0x0008b42a: in al, dx; or al, 0x56; call dword ptr [edi + 0x34]; 
0x0018b8b0: in al, dx; or al, 0x56; call dword ptr [edi + 0x44]; 
0x000a6d49: in al, dx; or al, 0x56; call eax; 
0x0012e423: in al, dx; or al, 0x56; call edx; 
0x0012e423: in al, dx; or al, 0x56; call edx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x00175b1c: in al, dx; or al, 0x56; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x00027078: in al, dx; or al, 0x57; call 0x186f70; mov dword ptr [esp], ebx; call edi; 
0x0016ffbc: in al, dx; or al, 0x57; call eax; 
0x0016ff99: in al, dx; or al, 0x57; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x000ea531: in al, dx; or al, 0x68; out dx, eax; add byte ptr [eax], al; add al, ch; ret; 
0x000a6a71: in al, dx; or al, 0x6a; add eax, 0x447c838d; stc; call dword ptr [eax - 0x73]; 
0x0010894d: in al, dx; or al, 0x83; into; call dword ptr [edi - 0x18]; 
0x00083707: in al, dx; or al, 0x83; ret 0x2b2c; 
0x001749f5: in al, dx; or al, 0x83; ret 0x5208; 
0x00037030: in al, dx; or al, 0x83; ret; 
0x00068172: in al, dx; or al, 0x89; lea ebp, [edx + edi*8 - 1]; dec dword ptr [ecx - 0x59b7b]; dec dword ptr [ebp - 0x4477b]; call dword ptr [eax - 0x18]; 
0x0006a86a: in al, dx; or al, 0x89; lea esi, [edx + edi*8 - 1]; call dword ptr [edi - 0x18]; 
0x000691f7: in al, dx; or al, 0x89; lea esi, [edx + edi*8 - 1]; call dword ptr [edx - 0x18]; 
0x00069f96: in al, dx; or al, 0x89; lea esp, [edx + edi*8 - 1]; call dword ptr [ebx - 0x18]; 
0x00035709: in al, dx; or al, 0x89; push ebp; mov esp, 0x2e3f808d; stc; call dword ptr [eax - 0x18]; 
0x0010c621: in al, dx; or al, 0x89; ret 0x438d; 
0x0008d631: in al, dx; or al, 0x89; ret 0xe989; 
0x0006c07e: in al, dx; or al, 0x89; ret; 
0x000326fa: in al, dx; or al, 0x89; test dword ptr [edi + edi*8 - 1], esi; dec dword ptr [ebx - 0x974b]; call dword ptr [edx - 0x18]; 
0x00151334: in al, dx; or al, 0x8b; add byte ptr [ecx], bh; ret 0x5473; 
0x0016f1d1: in al, dx; or al, 0x8b; dec eax; add al, 0x50; call dword ptr [ecx + 0x10]; 
0x000e9ac1: in al, dx; or al, 0x8b; inc ebp; aam 0x56; call eax; 
0x0017760f: in al, dx; or al, 0x8b; inc ebp; cmp al, 0x57; call dword ptr [eax + 0x10]; 
0x0016f60c: in al, dx; or al, 0x8b; inc ebx; add al, 0x53; call dword ptr [eax + 0x10]; 
0x0017a9de: in al, dx; or al, 0x8b; inc ebx; or al, 0x57; call dword ptr [eax + 0x10]; 
0x0017906f: in al, dx; or al, 0x8b; inc edi; add al, 0x57; call dword ptr [eax + 0x10]; 
0x0009c073: in al, dx; or al, 0x8b; jg 0x9c084; push dword ptr [eax + 4]; call dword ptr [eax]; 
0x000e8304: in al, dx; or al, 0x8b; jl 0xe832d; and byte ptr [ebx - 0x7cdbdb8c], cl; jmp dword ptr [ebx + 0x77]; 
0x000e97b9: in al, dx; or al, 0x8b; jne 0xe9792; mov eax, dword ptr [ebp - 0x3c]; push edi; call eax; 
0x000e9cc9: in al, dx; or al, 0x8b; jne 0xe9ca2; mov eax, dword ptr [ebp - 0x3c]; push edi; call eax; 
0x0016f37a: in al, dx; or al, 0x8b; push eax; add al, 0x50; call dword ptr [edx + 0x10]; 
0x00092d37: in al, dx; or al, 0x8b; sub dword ptr [eax], 0x52000002; call eax; 
0x0007b7c0: in al, dx; or al, 0x8d; adc dword ptr [eax - 6], -1; call dword ptr [eax - 0x73]; 
0x0011f99d: in al, dx; or al, 0x8d; adc dword ptr [eax], -0x5d; stc; call dword ptr [eax - 0x18]; 
0x00094210: in al, dx; or al, 0x8d; adc dword ptr [eax], -0x7b; stc; call dword ptr [eax - 0x18]; 
0x0014b181: in al, dx; or al, 0x8d; adc dword ptr [ebx], 0x5b; stc; call dword ptr [eax - 0x18]; 
0x00060d1f: in al, dx; or al, 0x8d; adc dword ptr [edx + ebx], 0; add byte ptr [eax - 0x18], dl; ret; 
0x00039e26: in al, dx; or al, 0x8d; adc ecx, 0x2e; stc; call dword ptr [eax - 0x18]; 
0x0010b690: in al, dx; or al, 0x8d; add dword ptr [esi + 0x48], -7; call dword ptr [eax - 0x18]; 
0x000dd3e5: in al, dx; or al, 0x8d; add dword ptr [esi], 0x46; stc; call dword ptr [eax - 0x18]; 
0x0011c151: in al, dx; or al, 0x8d; and dword ptr [esi], 0x46; stc; call dword ptr [eax - 0x18]; 
0x0016bb47: in al, dx; or al, 0x8d; cmp dword ptr [ecx], 0x63; stc; call dword ptr [eax - 0x18]; 
0x00069c04: in al, dx; or al, 0x8d; cmp esp, 0x32; stc; call dword ptr [eax - 0x18]; 
0x00156bbc: in al, dx; or al, 0x8d; inc ebx; add al, 0x50; call edi; 
0x001510bd: in al, dx; or al, 0x8d; nop; lodsb al, byte ptr [esi]; mov al, 0xf9; call dword ptr [edx - 0x73]; 
0x00189396: in al, dx; or al, 0x8d; or byte ptr [edi + 0x67], 0xf9; call dword ptr [eax - 0x18]; 
0x0011f9ed: in al, dx; or al, 0x8d; or dword ptr [eax - 0x5d], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0008425e: in al, dx; or al, 0x8d; or dword ptr [eax - 4], 0xffffffff; call dword ptr [eax - 0x73]; 
0x0009f77e: in al, dx; or al, 0x8d; or eax, 0xffffff89; stc; call dword ptr [eax - 0x18]; 
0x0005c51c: in al, dx; or al, 0x8d; pop ecx; dec byte ptr [ebx - 0x8f73]; call dword ptr [ebx - 0x75]; 
0x0014ba86: in al, dx; or al, 0x8d; popfd; je 0x14bae7; stc; call dword ptr [ebx - 0x18]; 
0x0014ba5a: in al, dx; or al, 0x8d; popfd; pop ebx; stc; call dword ptr [ebx - 0x18]; 
0x0017691b: in al, dx; or al, 0x8d; push ebx; dec esp; push edx; call eax; 
0x00035d45: in al, dx; or al, 0x8d; sbb byte ptr [ebx + 0x2e], 0xf9; call dword ptr [eax - 0x18]; 
0x0003eec9: in al, dx; or al, 0x8d; sbb dword ptr [eax], 0x76; stc; call dword ptr [eax - 0x18]; 
0x00156ca0: in al, dx; or al, 0x8d; sbb dword ptr [edi], 0x5e; stc; call dword ptr [eax - 0x73]; 
0x00185ab7: in al, dx; or al, 0x8d; sbb esp, -0x46; stc; call dword ptr [eax - 0x18]; 
0x0010ef61: in al, dx; or al, 0x8d; sbb esp, 0x2c; stc; call dword ptr [eax - 0x18]; 
0x000eadf1: in al, dx; or al, 0x8d; sub dword ptr [ecx + 0x2c], -7; call dword ptr [eax - 0x18]; 
0x000eb861: in al, dx; or al, 0x8d; sub ecx, 0x46; stc; call dword ptr [eax - 0x18]; 
0x00028069: in al, dx; or al, 0x8d; test dword ptr [eax + 0x29], edi; stc; call dword ptr [edi - 1]; 
0x00069935: in al, dx; or al, 0x8d; test dword ptr [eax - 0x76000005], edi; lea esp, [edx + edi*8 - 1]; dec dword ptr [ecx - 0x5976b]; call dword ptr [eax - 0x18]; 
0x0012c011: in al, dx; or al, 0x8d; test dword ptr [ebx + edi*8 - 1], edi; dec dword ptr [ecx - 0x4b37b]; call dword ptr [eax - 0x73]; 
0x0002515e: in al, dx; or al, 0x8d; test dword ptr [edi + ebp*2 - 7], ebx; call dword ptr [eax - 0x18]; 
0x00169b97: in al, dx; or al, 0x8d; test dword ptr [edx - 7], edi; call dword ptr [eax - 0x18]; 
0x0002506a: in al, dx; or al, 0x8d; xchg byte ptr [edi + ebp*2 - 7], bl; call dword ptr [eax - 0x18]; 
0x00123a31: in al, dx; or al, 0x8d; xchg byte ptr [esi], ah; inc esi; stc; call dword ptr [eax - 0x18]; 
0x00092e99: in al, dx; or al, 0x8d; xchg dword ptr [eax - 0x7c], edx; stc; call dword ptr [eax - 0x18]; 
0x0015319b: in al, dx; or al, 0x8d; xchg dword ptr [ebx + eax*4 - 0x17af0007], edi; cmpsd dword ptr [esi], dword ptr es:[edi]; cmp ebx, esi; jmp dword ptr [esi - 0x70]; 
0x000eb311: in al, dx; or al, 0x8d; xchg ecx, ebp; inc esi; stc; call dword ptr [eax - 0x18]; 
0x0017edc4: in al, dx; or al, 0x8d; xchg edi, edi; pop ebx; stc; call dword ptr [eax - 0x18]; 
0x0012576e: in al, dx; or al, 0x8d; xor byte ptr [esp], 0xf9; call dword ptr [eax - 0x73]; 
0x0008751e: in al, dx; or al, 0x8d; xor dword ptr [eax - 0x7d], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00090edd: in al, dx; or al, 0xff; jae 0x90ee6; call dword ptr [ebx]; 
0x00098124: in al, dx; or al, 0xff; jae 0x9812d; call dword ptr [ebx]; 
0x00147f13: in al, dx; or al, 0xff; je 0x147f3c; and al, ch; ret 0xa6; 
0x0003d680: in al, dx; or al, 0xff; je 0x3d6a9; sbb al, ch; cmc; syscall; 
0x0002440c: in al, dx; or al, 0xff; jne 0x243dd; call dword ptr [ebp - 0x38]; 
0x0017a2a0: in al, dx; or bh, al; add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebp - 0xc49e37d], cl; call dword ptr [eax - 0x73]; 
0x001748e0: in al, dx; or bh, al; add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebp - 0xca3737d], cl; call dword ptr [eax - 0x73]; 
0x0017905b: in al, dx; or bh, al; add dword ptr [esi], ecx; add byte ptr [eax], al; add byte ptr [ebx + 0x575104c1], al; call dword ptr [eax + 8]; 
0x00131dc1: in al, dx; or bh, bh; je 0x131d7b; add byte ptr [ebx - 0x7cacfe3a], al; ret; 
0x0016ee42: in al, dx; or bh, bh; je 0x16ee6b; sbb al, 0x56; mov eax, dword ptr [esp + 0x20]; call eax; 
0x000b9341: in al, dx; or byte ptr [0x7bc18100], cl; cmp dword ptr [ecx], edx; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x001244a8: in al, dx; or byte ptr [eax - 0x73], dl; and dword ptr [ecx + eax*8], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000a6e01: in al, dx; or byte ptr [eax - 1], dl; jae 0xa6e2b; call edx; 
0x00175050: in al, dx; or byte ptr [eax], ch; adc byte ptr [eax], al; add byte ptr [edi - 0x18], dl; ret; 
0x001446b7: in al, dx; or byte ptr [ebp + 0x48ac83], cl; add byte ptr [ecx - 0x4977b], cl; call dword ptr [eax - 1]; 
0x0007b2a4: in al, dx; or byte ptr [ebp + 0x50082444], cl; push esi; call dword ptr [ebx + 0x48]; 
0x00087fe0: in al, dx; or byte ptr [ebp + 0x50082444], cl; push esi; call dword ptr [edi + 0x48]; 
0x00087cd6: in al, dx; or byte ptr [ebp + 0x50382444], cl; push esi; call dword ptr [ebx + 0x48]; 
0x00083101: in al, dx; or byte ptr [ebp + 0x50402444], cl; push esi; call dword ptr [ebx + 0x48]; 
0x000e76d9: in al, dx; or byte ptr [ebp + 0x511c244c], cl; mov dword ptr [esp + 0x18], ecx; push ebx; call eax; 
0x0011440d: in al, dx; or byte ptr [ebp + 0x51], dl; mov eax, dword ptr [esp + 0x18]; call eax; 
0x000f8009: in al, dx; or byte ptr [ebp + 0x52082454], cl; push eax; call dword ptr [ecx + 0x20]; 
0x000e7853: in al, dx; or byte ptr [ebp + 0x520c2454], cl; push ebx; call eax; 
0x000f0d89: in al, dx; or byte ptr [ebp + 0x52142454], cl; push eax; call dword ptr [ecx + 0x20]; 
0x00178736: in al, dx; or byte ptr [ebp + 0x52202454], cl; push eax; call edi; 
0x0008950e: in al, dx; or byte ptr [ebp + 0x52282454], cl; push esi; call dword ptr [eax + 0x48]; 
0x0018bd29: in al, dx; or byte ptr [ebp + 0x52382454], cl; push esi; call dword ptr [eax + 0x48]; 
0x0016ef74: in al, dx; or byte ptr [ebp + 0x5540246c], cl; push eax; call dword ptr [ecx + 8]; 
0x0008b58a: in al, dx; or byte ptr [ebp + 0x5650015a], cl; call dword ptr [ebp + 0xc]; 
0x000fae1d: in al, dx; or byte ptr [ebp - 0x14c77b], cl; call dword ptr [eax - 1]; 
0x000fac88: in al, dx; or byte ptr [ebp - 0x15336b], cl; call dword ptr [edx + 0x50]; 
0x000facc1: in al, dx; or byte ptr [ebp - 0x15337b], cl; call dword ptr [eax + 0x52]; 
0x0009f531: in al, dx; or byte ptr [ebp - 0x19fac379], cl; call dword ptr [eax - 0x73]; 
0x00031af3: in al, dx; or byte ptr [ebp - 0x1af7b], cl; call dword ptr [eax - 1]; 
0x000873a5: in al, dx; or byte ptr [ebp - 0x1b7d537d], cl; call dword ptr [eax - 0x73]; 
0x00027193: in al, dx; or byte ptr [ebp - 0x218ef36d], cl; call dword ptr [edx + 0x50]; 
0x000d68f1: in al, dx; or byte ptr [ebp - 0x35ff7b], cl; dec dword ptr [ebp - 0x35e34b]; dec dword ptr [ebx - 0x36576b]; call dword ptr [eax - 0x73]; 
0x000d6034: in al, dx; or byte ptr [ebp - 0x35ff7b], cl; dec dword ptr [ebx - 0x363773]; call dword ptr [eax - 0x73]; 
0x00058c06: in al, dx; or byte ptr [ebp - 0x361773], cl; dec dword ptr [ebp - 0x35f363]; call dword ptr [edx - 0x77]; 
0x0014e0ef: in al, dx; or byte ptr [ebp - 0x41c6b], cl; call dword ptr [edi + 0x52]; 
0x0012bb22: in al, dx; or byte ptr [ebp - 0x46b7b], cl; call dword ptr [eax + 0x6a]; 
0x000f18c9: in al, dx; or byte ptr [ebp - 0x59f7b], cl; call dword ptr [eax - 0x75]; 
0x000f8b49: in al, dx; or byte ptr [ebp - 0x5ab7b], cl; call dword ptr [eax - 0x75]; 
0x00183e19: in al, dx; or byte ptr [ebp - 0x6453345], cl; call dword ptr [edi + 0x56]; 
0x00130ecf: in al, dx; or byte ptr [ebp - 0x659a779], cl; call dword ptr [eax + 0x55]; 
0x00130eea: in al, dx; or byte ptr [ebp - 0x659bf79], cl; call dword ptr [eax + 0x55]; 
0x00130f08: in al, dx; or byte ptr [ebp - 0x659d779], cl; call dword ptr [eax + 0x55]; 
0x00038671: in al, dx; or byte ptr [ebp - 0x68af76d], cl; call dword ptr [edx - 0x77]; 
0x000307db: in al, dx; or byte ptr [ebp - 0x68bbb79], cl; call dword ptr [eax + 0x56]; 
0x0003352a: in al, dx; or byte ptr [ebp - 0x68bbb7b], cl; call dword ptr [eax + 0x56]; 
0x00182cd6: in al, dx; or byte ptr [ebp - 0x6994955], cl; call dword ptr [ebp + 0x56]; 
0x001844ac: in al, dx; or byte ptr [ebp - 0x699497d], cl; call dword ptr [ebp + 0x50]; 
0x00182cbb: in al, dx; or byte ptr [ebp - 0x6995745], cl; call dword ptr [edi + 0x56]; 
0x00183527: in al, dx; or byte ptr [ebp - 0x699574d], cl; call dword ptr [esi + 0x57]; 
0x00183f16: in al, dx; or byte ptr [ebp - 0x699666a], cl; call dword ptr [edx - 0x77]; 
0x00182cf1: in al, dx; or byte ptr [ebp - 0x699666d], cl; call dword ptr [edx - 0x77]; 
0x00183561: in al, dx; or byte ptr [ebp - 0x6996675], cl; call dword ptr [ecx - 0x77]; 
0x00182d14: in al, dx; or byte ptr [ebp - 0x6997545], cl; call dword ptr [edi + 0x56]; 
0x00183f35: in al, dx; or byte ptr [ebp - 0x699754a], cl; call dword ptr [esi + 0x53]; 
0x00183584: in al, dx; or byte ptr [ebp - 0x699754d], cl; call dword ptr [esi + 0x57]; 
0x00172f61: in al, dx; or byte ptr [ebp - 0x69c6a7d], cl; call dword ptr [eax - 1]; 
0x0016c97b: in al, dx; or byte ptr [ebp - 0x69d907d], cl; call dword ptr [eax + 0x51]; 
0x0016d377: in al, dx; or byte ptr [ebp - 0x69d907d], cl; call dword ptr [eax + 0x57]; 
0x0016c1d7: in al, dx; or byte ptr [ebp - 0x69d9080], cl; call dword ptr [eax + 0x57]; 
0x00162e78: in al, dx; or byte ptr [ebp - 0x69f706f], cl; call dword ptr [edx + 0x50]; 
0x00162961: in al, dx; or byte ptr [ebp - 0x69fac6d], cl; call dword ptr [edx + 0x50]; 
0x000fad51: in al, dx; or byte ptr [ebp - 0x6a03f68], cl; dec dword ptr [ebp - 0x6b81e80]; call dword ptr [ebx + 0x50]; 
0x00124a11: in al, dx; or byte ptr [ebp - 0x6a03f7d], cl; call dword ptr [eax - 0x73]; 
0x00156c80: in al, dx; or byte ptr [ebp - 0x6a23b7d], cl; call dword ptr [eax - 1]; 
0x0012d25a: in al, dx; or byte ptr [ebp - 0x6ac0a7d], cl; call dword ptr [eax + 0x56]; 
0x00126f2b: in al, dx; or byte ptr [ebp - 0x6aeaa7d], cl; call dword ptr [eax + 0x55]; 
0x001270c0: in al, dx; or byte ptr [ebp - 0x6b1337d], cl; call dword ptr [eax + 0x55]; 
0x001270a5: in al, dx; or byte ptr [ebp - 0x6b1657d], cl; call dword ptr [eax + 0x55]; 
0x0012708a: in al, dx; or byte ptr [ebp - 0x6b1997d], cl; call dword ptr [eax + 0x55]; 
0x0012706f: in al, dx; or byte ptr [ebp - 0x6b1ce7d], cl; call dword ptr [eax + 0x55]; 
0x00127054: in al, dx; or byte ptr [ebp - 0x6b2007d], cl; call dword ptr [eax + 0x55]; 
0x00127039: in al, dx; or byte ptr [ebp - 0x6b24c7d], cl; call dword ptr [eax + 0x55]; 
0x0012701e: in al, dx; or byte ptr [ebp - 0x6b2907d], cl; call dword ptr [eax + 0x55]; 
0x00127003: in al, dx; or byte ptr [ebp - 0x6b2c27d], cl; call dword ptr [eax + 0x55]; 
0x00126fe8: in al, dx; or byte ptr [ebp - 0x6b2f87d], cl; call dword ptr [eax + 0x55]; 
0x00126fcd: in al, dx; or byte ptr [ebp - 0x6b3397d], cl; call dword ptr [eax + 0x55]; 
0x00126fb2: in al, dx; or byte ptr [ebp - 0x6b36e7d], cl; call dword ptr [eax + 0x55]; 
0x00126f97: in al, dx; or byte ptr [ebp - 0x6b3b57d], cl; call dword ptr [eax + 0x55]; 
0x00126f7c: in al, dx; or byte ptr [ebp - 0x6b3ee7d], cl; call dword ptr [eax + 0x55]; 
0x00126f61: in al, dx; or byte ptr [ebp - 0x6b4427d], cl; call dword ptr [eax + 0x55]; 
0x00126f46: in al, dx; or byte ptr [ebp - 0x6b4ac7d], cl; call dword ptr [eax + 0x55]; 
0x00124b0f: in al, dx; or byte ptr [ebp - 0x6b56d6a], cl; call dword ptr [edx - 0x77]; 
0x00124af0: in al, dx; or byte ptr [ebp - 0x6b5706a], cl; call dword ptr [edx - 0x77]; 
0x00124ad1: in al, dx; or byte ptr [ebp - 0x6b5766a], cl; call dword ptr [edx - 0x77]; 
0x000fdd44: in al, dx; or byte ptr [ebp - 0x6b7c77d], cl; call dword ptr [eax + 0x55]; 
0x000fe0a1: in al, dx; or byte ptr [ebp - 0x6b7ce7d], cl; call dword ptr [eax + 0x55]; 
0x000fdf9c: in al, dx; or byte ptr [ebp - 0x6b7d47d], cl; call dword ptr [eax + 0x55]; 
0x000fde70: in al, dx; or byte ptr [ebp - 0x6b7da7d], cl; call dword ptr [eax + 0x55]; 
0x000fdad9: in al, dx; or byte ptr [ebp - 0x6b7e07d], cl; call dword ptr [eax + 0x55]; 
0x000fdba0: in al, dx; or byte ptr [ebp - 0x6b7ec7d], cl; call dword ptr [eax + 0x55]; 
0x000fdf39: in al, dx; or byte ptr [ebp - 0x6b7f27d], cl; call dword ptr [eax + 0x55]; 
0x000fdce8: in al, dx; or byte ptr [ebp - 0x6b7f87d], cl; call dword ptr [eax + 0x55]; 
0x000fae06: in al, dx; or byte ptr [ebp - 0x6b7fd80], cl; call dword ptr [eax + 0x53]; 
0x000fae63: in al, dx; or byte ptr [ebp - 0x6b7fd80], cl; call dword ptr [eax - 1]; 
0x000dd2f9: in al, dx; or byte ptr [ebp - 0x6b9db7d], cl; call dword ptr [eax + 0x56]; 
0x000dcde1: in al, dx; or byte ptr [ebp - 0x6ba107d], cl; call dword ptr [eax + 0x56]; 
0x000a699a: in al, dx; or byte ptr [ebp - 0x6bb997a], cl; call dword ptr [ebx + 0x50]; 
0x00157d70: in al, dx; or byte ptr [ebp - 0x6bbcf7f], cl; call dword ptr [eax + 0x52]; 
0x0015d36f: in al, dx; or byte ptr [ebp - 0x6bec979], cl; call dword ptr [eax + 0x53]; 
0x000fdbde: in al, dx; or byte ptr [ebp - 0x6c0bf7d], cl; call dword ptr [eax + 0x55]; 
0x00061cbf: in al, dx; or byte ptr [ebp - 0x6cd527a], cl; call dword ptr [eax + 0x53]; 
0x00061bed: in al, dx; or byte ptr [ebp - 0x6cf986d], cl; call dword ptr [esi + 0x52]; 
0x00039bd6: in al, dx; or byte ptr [ebp - 0x6d1407b], cl; call dword ptr [eax + 0x53]; 
0x001259c2: in al, dx; or byte ptr [ebp - 0x6d1a67a], cl; call dword ptr [eax - 1]; 
0x00124452: in al, dx; or byte ptr [ebp - 0x6d1a67d], cl; call dword ptr [eax + 0x6a]; 
0x0014c85e: in al, dx; or byte ptr [ebp - 0x6d1a87b], cl; call dword ptr [eax + 0x52]; 
0x0014c8a0: in al, dx; or byte ptr [ebp - 0x6d1a87b], cl; call dword ptr [eax + 0x53]; 
0x0002fee6: in al, dx; or byte ptr [ebp - 0x6d47b7d], cl; call dword ptr [eax - 1]; 
0x0002fec8: in al, dx; or byte ptr [ebp - 0x6d4816d], cl; call dword ptr [edx + 0x50]; 
0x00142519: in al, dx; or byte ptr [ebp - 0x6d6987b], cl; call dword ptr [eax + 0x53]; 
0x0014c3cd: in al, dx; or byte ptr [ebp - 0x6d6987b], cl; call dword ptr [eax - 0x73]; 
0x000dd384: in al, dx; or byte ptr [ebp - 0x6d6987d], cl; call dword ptr [eax + 0x56]; 
0x001262b4: in al, dx; or byte ptr [ebp - 0x6d6987d], cl; call dword ptr [eax - 0x73]; 
0x000d5834: in al, dx; or byte ptr [ebp - 0x7d348], cl; call dword ptr [edi + 0x53]; 
0x0004a446: in al, dx; or byte ptr [ebp - 0x7d379], cl; call dword ptr [eax + 0x6a]; 
0x000d8abb: in al, dx; or byte ptr [ebp - 0x7d37b], cl; call dword ptr [eax + 0x6a]; 
0x0014202b: in al, dx; or byte ptr [ebp - 0x7d37d], cl; call dword ptr [eax + 0x6a]; 
0x00176180: in al, dx; or byte ptr [ebp - 0x8b63], cl; call dword ptr [esi + 0x53]; 
0x001761e1: in al, dx; or byte ptr [ebp - 0x8b7b], cl; dec dword ptr [ecx - 0xb37b]; call dword ptr [eax + 0x56]; 
0x00176359: in al, dx; or byte ptr [ebp - 0x9b7b], cl; call dword ptr [eax + 0x6a]; 
0x00181205: in al, dx; or byte ptr [ebp - 0xa37b], cl; call dword ptr [eax + 0x6a]; 
0x00181a14: in al, dx; or byte ptr [ebp - 0xa77b], cl; call dword ptr [eax - 1]; 
0x0016ecba: in al, dx; or byte ptr [ebp - 0xc34f379], cl; call dword ptr [eax - 0x73]; 
0x00179271: in al, dx; or byte ptr [ebp - 0xc5cc37d], cl; call dword ptr [eax - 0x73]; 
0x001770a9: in al, dx; or byte ptr [ebp - 0xc80437d], cl; call dword ptr [eax - 0x73]; 
0x0017463b: in al, dx; or byte ptr [ebp - 0xcab637d], cl; call dword ptr [eax - 0x73]; 
0x0013b5a0: in al, dx; or byte ptr [ebp - 0xcb43], cl; call dword ptr [edi + 0x6a]; 
0x00173eea: in al, dx; or byte ptr [ebx + 0x20508b00], cl; push esi; push eax; call dword ptr [edx + 4]; 
0x0017080a: in al, dx; or byte ptr [ebx + 0x206a0447], cl; push edi; call dword ptr [eax + 0x18]; 
0x0012c9b3: in al, dx; or byte ptr [ebx + 0x33fffee3], al; push esi; call edi; 
0x00175571: in al, dx; or byte ptr [ebx + 0x438b0cc6], al; add al, 0x56; push ebx; call dword ptr [eax + 0x24]; 
0x0016ef90: in al, dx; or byte ptr [ebx + 0x50552048], cl; call dword ptr [ecx + 8]; 
0x0016ee2c: in al, dx; or byte ptr [ebx + 0x50562050], cl; call dword ptr [edx + 4]; 
0x001775e0: in al, dx; or byte ptr [ebx + 0x50572050], cl; call dword ptr [edx + 4]; 
0x001754d1: in al, dx; or byte ptr [ebx + 0x53560443], cl; call dword ptr [eax + 0x24]; 
0x0017c14f: in al, dx; or byte ptr [ebx + 0x56530446], cl; call dword ptr [eax + 4]; 
0x00081516: in al, dx; or byte ptr [ebx + 0x56], dl; call dword ptr [edi + 0x18]; 
0x0013c009: in al, dx; or byte ptr [ebx + 0x56a1c40], cl; ror eax, 9; xor eax, dword ptr gs:[0x18]; push esi; call eax; 
0x0017146b: in al, dx; or byte ptr [ebx + 0x74ff0443], cl; and al, 0x1c; push ebx; call dword ptr [eax + 4]; 
0x001714b9: in al, dx; or byte ptr [ebx + 0x74ff0443], cl; and al, 0x1c; push ebx; call dword ptr [eax]; 
0x00179c61: in al, dx; or byte ptr [ebx + 0x74ff0843], cl; and al, 0x14; push ebx; call dword ptr [eax]; 
0x00179e60: in al, dx; or byte ptr [ebx + 0x74ff0843], cl; and al, 0x1c; push ebx; call dword ptr [eax + 0xc]; 
0x0016ee11: in al, dx; or byte ptr [ebx + 0x74ff1043], cl; and al, 0x14; push esi; call dword ptr [eax + 4]; 
0x00176b42: in al, dx; or byte ptr [ebx + 0x74ff5043], cl; and al, 0x30; push esi; call dword ptr [eax + 4]; 
0x0017548c: in al, dx; or byte ptr [ebx + 0x86a0443], cl; push ebx; call dword ptr [eax + 0x18]; 
0x001708bc: in al, dx; or byte ptr [ebx + 0x86a0447], cl; push edi; call dword ptr [eax + 0x18]; 
0x00170900: in al, dx; or byte ptr [ebx - 0x1a7cfbb9], cl; cld; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x0017088f: in al, dx; or byte ptr [ebx - 0x1f7cfba9], cl; cld; push eax; push edi; call dword ptr [edx + 0x18]; 
0x00073622: in al, dx; or byte ptr [ebx - 0x4ff63], cl; call dword ptr [edx + 0x50]; 
0x00077752: in al, dx; or byte ptr [ebx - 0x4ff63], cl; dec dword ptr [ecx - 0x51f73]; dec dword ptr [ebx - 0x52b73]; call dword ptr [ecx + 0x50]; 
0x000736c5: in al, dx; or byte ptr [ebx - 0x5576b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0006bbd5: in al, dx; or byte ptr [ebx - 0x58f63], cl; call dword ptr [edx + 0x50]; 
0x0006a99d: in al, dx; or byte ptr [ebx - 0x58f63], cl; call dword ptr [esi + 0x50]; 
0x0006753e: in al, dx; or byte ptr [ebx - 0x5ab4b], cl; call dword ptr [eax - 1]; 
0x000673c0: in al, dx; or byte ptr [ebx - 0x5b773], cl; jmp dword ptr [ebp - 0x5f]; 
0x000d135d: in al, dx; or byte ptr [ebx - 0x72d7dbbc], cl; sub byte ptr [eax + edi*8], 0xff; call dword ptr [eax - 1]; 
0x0015a0bb: in al, dx; or byte ptr [ebx - 0x72dfdbbc], cl; or dh, 0x5e; stc; call dword ptr [eax + 0x55]; 
0x000d1c81: in al, dx; or byte ptr [ebx - 0x72dfdbbc], cl; sub byte ptr [eax + edi*8], 0xff; call dword ptr [eax - 1]; 
0x001628b1: in al, dx; or byte ptr [ebx - 0x72e3dbbc], cl; adc byte ptr [ebx + 0x60], 0xf9; call dword ptr [eax + 0x55]; 
0x000cda11: in al, dx; or byte ptr [ebx - 0x72e3dbbc], cl; sub byte ptr [eax + edi*8], 0xff; call dword ptr [eax - 1]; 
0x0015f2f7: in al, dx; or byte ptr [ebx - 0x72e7dbbc], cl; add dl, 0x5f; stc; call dword ptr [eax - 1]; 
0x001925e6: in al, dx; or byte ptr [ebx - 0x72e7dbbc], cl; xor byte ptr [esi], 0x4a; stc; call dword ptr [eax + 0x53]; 
0x0015d354: in al, dx; or byte ptr [ebx - 0x72ebdb84], cl; xchg dword ptr [ebx + 0x5f], edi; stc; call dword ptr [eax + 0x55]; 
0x00059e7a: in al, dx; or byte ptr [ebx - 0x72ebdbbc], cl; sub byte ptr [eax + edi*8], 0xff; call dword ptr [eax + 0x6a]; 
0x0015d8a9: in al, dx; or byte ptr [ebx - 0x72ebdbbc], cl; xor byte ptr [ebp + 0x5f], 0xf9; call dword ptr [eax + 0x55]; 
0x001431bc: in al, dx; or byte ptr [ebx - 0x72ebdbbc], cl; xor byte ptr [esi], 0x59; stc; call dword ptr [eax + 0x6a]; 
0x001632b5: in al, dx; or byte ptr [ebx - 0x72efdbbc], cl; adc byte ptr [ebx + 0x60], 0xf9; call dword ptr [eax - 1]; 
0x00155961: in al, dx; or byte ptr [ebx - 0x72efdbbc], cl; cwde; fcomp dword ptr [ebp - 7]; call dword ptr [ebx - 0x73]; 
0x00088699: in al, dx; or byte ptr [ebx - 0x72f3dba4], cl; add dword ptr [ecx], 0x3f; stc; call dword ptr [eax - 0x75]; 
0x00148414: in al, dx; or byte ptr [ebx - 0x72f3dbbc], cl; adc byte ptr [ecx + 0x5a], 0xf9; call dword ptr [eax + 0x53]; 
0x00179ea9: in al, dx; or byte ptr [ebx - 0x73], dl; push esp; and al, 0x38; push edx; call dword ptr [eax + 0xc]; 
0x000faf67: in al, dx; or byte ptr [ebx - 0x73], dl; sub dh, 0x47; stc; call dword ptr [eax - 0x18]; 
0x0017fa91: in al, dx; or byte ptr [ebx - 0x7ccbdbac], cl; ret 0x5204; 
0x000f019c: in al, dx; or byte ptr [ebx - 0x7f72378b], cl; pop ecx; stc; call dword ptr [eax - 0x75]; 
0x0008d0c6: in al, dx; or byte ptr [ebx - 0xe7dbbc], cl; je 0x8d0f3; sbb al, 0x85; ror byte ptr [edi], 0x48; ret 0xff50; 
0x0013ac7d: in al, dx; or byte ptr [ebx - 1], dl; jae 0x13acb3; call eax; 
0x0015a07e: in al, dx; or byte ptr [ecx + 0x24448bc7], cl; and byte ptr [ebp - 0x6a13a80], cl; call dword ptr [eax + 0x55]; 
0x0012ca73: in al, dx; or byte ptr [ecx + 0x30ffd055], cl; mov eax, dword ptr [ebp - 0x3c]; push dword ptr [ebp - 0x38]; call eax; 
0x0016fa39: in al, dx; or byte ptr [ecx + 0x873ff03], cl; push esi; call dword ptr [ebx + 0xc]; 
0x00136c0a: in al, dx; or byte ptr [ecx - 0x17adaa05], cl; sti; ret; 
0x000382e4: in al, dx; or byte ptr [ecx - 0x1cf6b], cl; call dword ptr [eax - 1]; 
0x00069da0: in al, dx; or byte ptr [ecx - 0x58b6b], cl; dec dword ptr [ebx - 0x58f63]; call dword ptr [ecx + 0x50]; 
0x0006b954: in al, dx; or byte ptr [ecx - 0x58b73], cl; call dword ptr [eax - 1]; 
0x0006ac83: in al, dx; or byte ptr [ecx - 0x5eb63], cl; call dword ptr [eax - 1]; 
0x000330ac: in al, dx; or byte ptr [ecx - 0xe76b], cl; call dword ptr [eax + 0x56]; 
0x00181a62: in al, dx; or byte ptr [ecx - 0xeb73], cl; dec dword ptr [ecx - 0xe77b]; dec dword ptr [ebp - 0xa77b]; dec dword ptr [ecx - 0xe36b]; call dword ptr [eax + 0x6a]; 
0x000a6d83: in al, dx; or byte ptr [ecx - 1], dl; jae 0xa6dad; call eax; 
0x0003f261: in al, dx; or byte ptr [ecx - 1], dl; je 0x3f28b; dec esp; call eax; 
0x0003a469: in al, dx; or byte ptr [ecx], al; ret 0x8952; 
0x0011b5d1: in al, dx; or byte ptr [ecx], al; ret; 
0x00038262: in al, dx; or byte ptr [ecx], al; ror byte ptr [ecx - 0x1f37b], 1; call dword ptr [eax - 1]; 
0x000751c7: in al, dx; or byte ptr [ecx], al; ror dword ptr [ebp + 0x8d04], 0; add byte ptr [ecx - 0x4f773], cl; call dword ptr [eax + 0x53]; 
0x000a82c8: in al, dx; or byte ptr [ecx], ch; ret 0x348d; 
0x0007426e: in al, dx; or byte ptr [ecx], ch; ror dword ptr [ecx - 0x50363], cl; dec dword ptr [ebx - 0x4ff63]; call dword ptr [eax + 0x52]; 
0x001866c8: in al, dx; or byte ptr [edx + 0x50], dl; call dword ptr [ebx + 0x24]; 
0x0018674f: in al, dx; or byte ptr [edx + 0x50], dl; call dword ptr [ebx + 0x28]; 
0x00082783: in al, dx; or byte ptr [edx - 1], ch; push dword ptr [ebx]; call dword ptr [edi + 0xc]; 
0x00088f3b: in al, dx; or byte ptr [edx - 1], ch; push dword ptr [ecx]; call dword ptr [eax + 0xc]; 
0x00170efe: in al, dx; or byte ptr [edx], ch; push ebx; call dword ptr [eax + 0x14]; 
0x0003ed56: in al, dx; or byte ptr [edx], ch; push edx; call eax; 
0x0007b42d: in al, dx; or byte ptr [edx], ch; push esi; call dword ptr [ebx + 8]; 
0x0008bcb9: in al, dx; or byte ptr [esi + 0x53], dl; call dword ptr [edi + 0x18]; 
0x000e7819: in al, dx; or byte ptr [esi + 0x53], dl; call eax; 
0x00145fad: in al, dx; or byte ptr [esi - 0x3f], ah; ret 0xf08; 
0x000a6c74: in al, dx; or byte ptr [esi - 1], dl; jae 0xa6c9e; call eax; 
0x0003bf8d: in al, dx; or ch, bl; sbb al, 0x24; fld qword ptr [esp]; add esp, 8; ret; 
0x000270b6: in al, dx; outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x00026149: in al, dx; outsd dx, dword ptr [esi]; stc; call dword ptr [edx - 0x73]; 
0x00172bd3: in al, dx; pop ebx; ret; 
0x00134d84: in al, dx; pop esp; out dx, eax; call dword ptr [eax + 0x6a]; 
0x00167142: in al, dx; popal; stc; call dword ptr [eax - 0x18]; 
0x001672e3: in al, dx; popal; stc; call dword ptr [eax - 0x73]; 
0x0002aaf7: in al, dx; push -7; call dword ptr [eax + 0x68]; 
0x0002a7bb: in al, dx; push -7; call dword ptr [eax - 0x73]; 
0x000ac381: in al, dx; push cs; out 0xff, eax; cmove eax, edx; ret; 
0x0016713b: in al, dx; push ecx; int1; call dword ptr [eax - 0x73]; 
0x00114271: in al, dx; push edx; in eax, dx; call dword ptr [eax + 0x56]; 
0x00182b2a: in al, dx; ret 0xb; 
0x000c6e60: in al, dx; ret 0xfff5; 
0x00181042: in al, dx; rol byte ptr [eax], 0; add byte ptr [ecx - 0xb37b], cl; dec dword ptr [ecx - 0xbf6b]; dec dword ptr [ecx - 0xaf4b]; jmp dword ptr [ebp - 0x75]; 
0x00175ab0: in al, dx; salc; ljmp 0x5e5b:0x10c483ff; pop edi; ret; 
0x0006511d: in al, dx; sar al, 0xff; jmp eax; 
0x000a18e1: in al, dx; sbb ah, dh; call dword ptr [eax + 0x57]; 
0x0013d1f6: in al, dx; sbb al, 0x8b; inc ebp; or al, 0x85; ror byte ptr [edi], 0x84; ret; 
0x0015116e: in al, dx; sbb al, 0x8b; push edx; or byte ptr [ecx], bh; ret 0x460f; 
0x000a1899: in al, dx; sbb al, 0xe6; call dword ptr [eax + 0x57]; 
0x0009a397: in al, dx; sbb al, byte ptr [eax]; add bh, dh; mov dword ptr [ecx], 0x74000000; aad 0x89; ret 0xe083; 
0x00094e32: in al, dx; sbb al, byte ptr [eax]; add byte ptr [ebp + 8], dh; xor eax, eax; pop ebx; ret; 
0x000876b1: in al, dx; sbb byte ptr [eax - 0x18], dl; out 0x3a, eax; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0009c101: in al, dx; sbb byte ptr [ebp - 0x677bf80], cl; call dword ptr [eax - 0x18]; 
0x0003dc5d: in al, dx; sbb byte ptr [ebp - 0x68a4380], cl; call dword ptr [eax - 0x18]; 
0x0013dd11: in al, dx; sbb byte ptr [ebp - 0x6a85c80], cl; call dword ptr [eax - 0x18]; 
0x0013c801: in al, dx; sbb byte ptr [ebp - 0x6a88d80], cl; call dword ptr [eax - 0x18]; 
0x0016de15: in al, dx; sbb byte ptr [edx + 0xa], ch; call 0x156690; add esp, 0x1c; ret; 
0x00169f05: in al, dx; sbb byte ptr [edx + 1], ch; call 0x156690; add esp, 0x1c; ret; 
0x0016a275: in al, dx; sbb byte ptr [edx + 2], ch; call 0x156690; add esp, 0x1c; ret; 
0x0016b335: in al, dx; sbb byte ptr [edx + 3], ch; call 0x156690; add esp, 0x1c; ret; 
0x0016c695: in al, dx; sbb byte ptr [edx + 4], ch; call 0x156690; add esp, 0x1c; ret; 
0x0016cd15: in al, dx; sbb byte ptr [edx + 5], ch; call 0x156690; add esp, 0x1c; ret; 
0x0016d0b5: in al, dx; sbb byte ptr [edx + 6], ch; call 0x156690; add esp, 0x1c; ret; 
0x0016e395: in al, dx; sbb byte ptr [edx + 7], ch; call 0x156690; add esp, 0x1c; ret; 
0x0016d735: in al, dx; sbb byte ptr [edx + 8], ch; call 0x156690; add esp, 0x1c; ret; 
0x0016db45: in al, dx; sbb byte ptr [edx + 9], ch; call 0x156690; add esp, 0x1c; ret; 
0x00169aa5: in al, dx; sbb byte ptr [edx], ch; call 0x156690; add esp, 0x1c; ret; 
0x0003d285: in al, dx; sbb byte ptr [edx], ch; call 0x3cb20; add esp, 0x1c; ret; 
0x00085419: in al, dx; stc; jmp dword ptr [esi - 0x70]; 
0x0017f0e9: in al, dx; sti; jmp dword ptr [esi - 0x70]; 
0x0016f8e3: in al, dx; sub al, 0x8d; test al, 0x4c; or dh, bl; jmp dword ptr [ebp - 0x75]; 
0x0016e3c3: in al, dx; sub byte ptr [ebp - 0x69c6880], cl; jmp dword ptr [ebp - 0x75]; 
0x0016de43: in al, dx; sub byte ptr [ebp - 0x69c7480], cl; jmp dword ptr [ebp - 0x75]; 
0x0016db73: in al, dx; sub byte ptr [ebp - 0x69c8180], cl; jmp dword ptr [ebp - 0x75]; 
0x0016d763: in al, dx; sub byte ptr [ebp - 0x69c8f80], cl; jmp dword ptr [ebp - 0x75]; 
0x0016d0e3: in al, dx; sub byte ptr [ebp - 0x69c9b80], cl; jmp dword ptr [ebp - 0x75]; 
0x0016cd43: in al, dx; sub byte ptr [ebp - 0x69caa80], cl; jmp dword ptr [ebp - 0x75]; 
0x0016a2a3: in al, dx; sub byte ptr [ebp - 0x69d6a80], cl; jmp dword ptr [ebp - 0x75]; 
0x00169f33: in al, dx; sub byte ptr [ebp - 0x69d7680], cl; jmp dword ptr [ebp - 0x75]; 
0x000c4863: in al, dx; wait; stc; call dword ptr [eax - 0x18]; 
0x000256bd: in al, dx; xor edi, 0x3ecf01ff; jmp edi; 
0x00126a73: in eax, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001aba47: in eax, 0; add byte ptr [eax], al; lea eax, [eax + 0xb]; pop edi; ret; 
0x001208dc: in eax, 0x11; add byte ptr [ebx - 0x48], dl; sub byte ptr [eax], al; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000a08ab: in eax, 0x19; add byte ptr [ebx - 0x74fbdbac], cl; adc dl, byte ptr [eax + 0x3589089]; add byte ptr [eax], al; ret; 
0x000a088b: in eax, 0x19; add byte ptr [ebx - 0x74fbdbac], cl; adc dl, byte ptr [eax + 0x35c9089]; add byte ptr [eax], al; ret; 
0x000a08cc: in eax, 0x19; add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [0x3fc], bh; jbe 0xa08e0; ret; 
0x000a090c: in eax, 0x19; add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [0xffff], bh; jbe 0xa0920; ret; 
0x00098c62: in eax, 0x31; rol byte ptr [eax + 0xf00197f], cl; xchg ebp, eax; ret 0xe2c1; 
0x00196e4d: in eax, 0x49; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000abbba: in eax, 0x5b; mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x00185824: in eax, 0x66; stc; call dword ptr [eax - 0x18]; 
0x0008c42a: in eax, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0017a18a: in eax, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x000a13d9: in eax, 0x83; les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000b3846: in eax, 0x83; ret; 
0x000c6a7a: in eax, 0x89; fadd dword ptr [ebx + 0x5e5b04c4]; ret; 
0x000c5c1a: in eax, 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x0003a41a: in eax, 0x89; int 0x80; 
0x0018845a: in eax, 0x89; ret; 
0x000c8b6d: in eax, 0x89; rol byte ptr [ebx - 0x173e031e], 1; add al, byte ptr [ecx]; ret 0x448b; 
0x0010ebb3: in eax, 0x8d; sbb dword ptr [edx], -7; call dword ptr [eax - 0x73]; 
0x0018a537: in eax, 0xa1; clc; jmp dword ptr [ebp - 0x75]; 
0x001630e7: in eax, 0xc1; inc dword ptr [ebx + 0x448b10c4]; and al, 0xc; add esp, 0x18; pop ebx; ret; 
0x000bb68e: in eax, 0xc; add byte ptr [ecx + 0x11180fc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00112457: in eax, 0xde; dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x00186455: in eax, 0xe9; jmp dword ptr [esi - 0x70]; 
0x0010d0eb: in eax, 0xec; call dword ptr [esi + 0x6a]; 
0x000c5b62: in eax, 0xf6; dec dword ptr [ebp - 0x6635770]; call dword ptr [edx - 0x73]; 
0x000c5b38: in eax, 0xf6; dec dword ptr [ecx - 0x769fdbac]; ret 0x52e9; 
0x000a5a76: in eax, 0xf8; dec dword ptr [ebp - 0x6673f79]; call dword ptr [eax - 0x73]; 
0x000d99b3: in eax, 0xf; je 0xd99d0; add eax, 2; ret; 
0x0016f745: in eax, 0xfc; jmp dword ptr [esi - 0x70]; 
0x00170906: in eax, 0xfc; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x000ffa26: in eax, 0xff; add esi, dword ptr [eax + esi - 0xa]; ret 0x7404; 
0x000d755e: in eax, 0xff; dec dword ptr [ebx - 0x35e373]; inc dword ptr [ebx - 0x6bf0fe05]; ret 0xc139; 
0x00075755: in eax, 0xff; dec dword ptr [ebx - 0x4ff7b]; jmp dword ptr [ebp - 0x75]; 
0x00058a87: in eax, 0xff; dec dword ptr [ecx - 0x362f6b]; call dword ptr [eax - 0x75]; 
0x000d60e4: in eax, 0xff; dec dword ptr [ecx - 0x36734b]; dec dword ptr [ebx - 0x364f4b]; call dword ptr [ebx - 0x73]; 
0x0013e282: in eax, 0xff; jmp dword ptr [esi - 0x70]; 
0x000d46fd: in eax, 2; lea edx, [edx - 0x165354]; cmove eax, edx; ret; 
0x000aa2fd: in eax, 2; lea edx, [edx - 0x17c244]; cmove eax, edx; ret; 
0x000a8b3d: in eax, 2; lea edx, [edx - 0x17cc74]; cmove eax, edx; ret; 
0x000ac2bd: in eax, 2; lea edx, [edx - 0x17cf64]; cmove eax, edx; ret; 
0x000ac2fd: in eax, 2; lea edx, [edx - 0x17cfd4]; cmove eax, edx; ret; 
0x000a95ed: in eax, 2; lea edx, [edx - 0x17d054]; cmove eax, edx; ret; 
0x000a962d: in eax, 2; lea edx, [edx - 0x17d0d4]; cmove eax, edx; ret; 
0x000ac37d: in eax, 2; lea edx, [edx - 0x18f114]; cmove eax, edx; ret; 
0x001a75c2: in eax, dx; adc byte ptr [edi], cl; xchg byte ptr [edi - 0x7cfffffe], al; ret 0x8310; 
0x001a613b: in eax, dx; adc byte ptr [edi], cl; xchg byte ptr [edi - 0x7cffffff], cl; ret 0x8310; 
0x000e6150: in eax, dx; add al, 0x83; ret 0x930; 
0x000c1977: in eax, dx; add eax, ecx; pop edi; ret; 
0x0012e41e: in eax, dx; and esp, 0xfffffff0; sub esp, 0xc; push esi; call edx; 
0x00114273: in eax, dx; call dword ptr [eax + 0x56]; 
0x0019140a: in eax, dx; call dword ptr [eax + 0x6a]; 
0x0011c12c: in eax, dx; call dword ptr [edx - 0x73]; 
0x00084938: in eax, dx; cmc; stc; jmp dword ptr [esi - 0x70]; 
0x00155f3c: in eax, dx; dec dword ptr [ebx - 0x72f7db84]; xchg dword ptr [eax], ecx; mov bl, 0xf9; call dword ptr [eax - 0x73]; 
0x001456e5: in eax, dx; dec dword ptr [ecx - 0x76d3dbbc]; ret; 
0x001523c7: in eax, dx; dec dword ptr [ecx - 0x76e7dbbc]; ret; 
0x00152f6b: in eax, dx; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x00189d9d: in eax, dx; inc dword ptr [ebx - 0x247aef3c]; jne 0x189db0; add esp, 8; pop ebx; ret; 
0x0014bddd: in eax, dx; jmp dword ptr [ebp - 0x5f]; 
0x00154097: in eax, dx; jmp dword ptr [esi - 0x70]; 
0x000a6d54: in eax, dx; jne 0xa6c89; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax + 0x90]; call dword ptr [eax]; 
0x000abaa2: in eax, dx; mov eax, edx; pop ebx; pop esi; ret; 
0x000abc02: in eax, dx; mov eax, edx; pop ebx; ret; 
0x001935c2: in eax, dx; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000ad267: in eax, dx; or byte ptr [ebx], dl; mov eax, esi; pop ebx; pop esi; ret; 
0x001a6237: in eax, dx; or byte ptr [edi], cl; test byte ptr [ebx - 0x7d000000], dl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x000fba92: in eax, dx; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x000f7d7f: in eax, dx; ret 0xfff3; 
0x0006972f: in eax, dx; test al, 5; add byte ptr [ebx - 0x77cef3c], al; dec byte ptr [edi]; test byte ptr [ecx - 0x7cfffffe], ah; ret; 
0x000dfa71: inc byte ptr [eax]; add al, 0xf; test byte ptr [edi - 0x9ffffe3], bh; ret; 
0x0012e861: inc byte ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000d7494: inc byte ptr [ebx - 0x36477b]; jmp eax; 
0x00043ac0: inc byte ptr [ebx - 0x6bf00220]; ret 0xff83; 
0x0019c072: inc byte ptr [ebx]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000f06f1: inc di; stc; call dword ptr [eax - 0x73]; 
0x00141f9c: inc dword ptr [eax + 0x7500027a]; push es; movzx eax, byte ptr [edx + 1]; shr eax, 1; ret; 
0x000b43be: inc dword ptr [eax + 0xf000a79]; test byte ptr [edi], al; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000b4368: inc dword ptr [eax + 0xf000d79]; test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0013b597: inc dword ptr [eax + 0xf]; test byte ptr [ecx - 0x7cfffffe], dh; in al, dx; or byte ptr [ebp - 0xcb43], cl; call dword ptr [edi + 0x6a]; 
0x00197733: inc dword ptr [eax + 4]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000ac37b: inc dword ptr [eax - 0x6d72fd1b]; in al, dx; push cs; out 0xff, eax; cmove eax, edx; ret; 
0x000a95eb: inc dword ptr [eax - 0x6d72fd1b]; lodsb al, byte ptr [esi]; das; call 0xc24ea5f7; ret; 
0x000aa2fb: inc dword ptr [eax - 0x6d72fd1b]; mov esp, 0xfffe83d; inc esp; ret 0x66c3; 
0x000ac2bb: inc dword ptr [eax - 0x6d72fd1b]; pushfd; xor al, ch; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000a962b: inc dword ptr [eax - 0x6d72fd1b]; sub al, 0x2f; call 0xc24ea637; ret; 
0x000ac2fb: inc dword ptr [eax - 0x6d72fd1b]; sub al, 0x30; call 0xc24ed307; ret; 
0x00056b22: inc dword ptr [eax - 0x7af09a07]; push eax; sbb al, byte ptr [eax]; add byte ptr [ebx - 0x362743], al; call dword ptr [eax]; 
0x0005c678: inc dword ptr [eax - 0x7bf09a06]; push cs; or dword ptr [eax], eax; add byte ptr [eax - 0xcb43], al; jmp dword ptr [esi - 0x75]; 
0x0005d8e1: inc dword ptr [eax - 0xcb43]; jmp dword ptr [edi + 0xf]; 
0x0009d5b9: inc dword ptr [eax - 7]; call dword ptr [eax - 0x73]; 
0x00075496: inc dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx - 0x4ff7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000760f6: inc dword ptr [eax]; add byte ptr [eax], al; add byte ptr [esi - 0x77], ah; xor cl, ch; ret; 
0x00075c83: inc dword ptr [eax]; add byte ptr [eax], al; add cl, ch; ret; 
0x001306f3: inc dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000fb133: inc dword ptr [eax]; add byte ptr [eax], al; cmp edx, 0x9123683e; jne 0xfb1a0; ret; 
0x001aa46c: inc dword ptr [eax]; add byte ptr [eax], al; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x0003badb: inc dword ptr [eax]; add byte ptr [ecx], ch; rol ecx, 1; call 0x10ed7c05; or eax, ecx; ret; 
0x001a4a2c: inc dword ptr [eax]; add byte ptr [edi], cl; test dword ptr [ecx - 0x7cfffff2], ebp; std; adc byte ptr [ebp - 0x79f00f93], cl; call dword ptr [eax]; 
0x001a0428: inc dword ptr [eax]; add byte ptr [edi], cl; test ebp, edi; add eax, 0xfd830000; adc byte ptr [ebp - 0x79f00f93], cl; ret; 
0x000a0917: inc dword ptr [eax]; add byte ptr [esi + 4], dh; ret; 
0x000fd7e9: inc dword ptr [eax]; clc; jmp dword ptr [esi + 0xb]; 
0x00109c76: inc dword ptr [eax]; cld; dec dword ptr [ecx]; retf 0x5489; ret; 
0x000c1fef: inc dword ptr [eax]; je 0xc1ff4; inc eax; pop edi; ret; 
0x000c2193: inc dword ptr [eax]; je 0xc2198; inc eax; pop edi; pop esi; ret; 
0x0014210b: inc dword ptr [eax]; or eax, edx; bswap eax; mov dword ptr [ecx], eax; mov eax, ecx; ret 4; 
0x001420e3: inc dword ptr [eax]; ret; 
0x000b3b2c: inc dword ptr [ebp + 0x2b850fc0]; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000eed00: inc dword ptr [ebp + 0x312074c9]; fisttp dword ptr [ecx - 0x7cf81432]; ret; 
0x000b3b0c: inc dword ptr [ebp + 0x4b850fc0]; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00069d01: inc dword ptr [ebp + 0x4e850fdb]; xor al, byte ptr [eax]; add byte ptr [ebx - 0x5ab4b], cl; dec dword ptr [ebx - 0x58f7b]; jmp dword ptr [ebp - 0x75]; 
0x000a20b3: inc dword ptr [ebp + 0x5b1874c0]; pop esi; pop edi; ret; 
0x001b3468: inc dword ptr [ebp + 0x67850fd2]; add dword ptr [eax], eax; add byte ptr [ecx + 0x7c89193c], cl; sbb dword ptr [ebx + eax*4], eax; ret; 
0x000587d9: inc dword ptr [ebp + 0x6d850ff6]; add al, 0; add byte ptr [ebx - 0x36677b], al; jmp eax; 
0x000b3b4c: inc dword ptr [ebp + 0xb850fc0]; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00077efd: inc dword ptr [ebp - 0x177bf040]; add al, byte ptr [eax]; add byte ptr [ebx - 0x51773], cl; call ecx; 
0x0007506d: inc dword ptr [ebp - 0x257bf040]; add al, byte ptr [eax]; add byte ptr [ebp - 0x4cb7b], cl; call dword ptr [ecx - 1]; 
0x00077c1b: inc dword ptr [ebp - 0x2b7bf040]; mov esp, 0x852bffff; mov eax, 0x83fffffb; in al, dx; or al, 0x89; ret; 
0x0005aaa8: inc dword ptr [ebp - 0x38ec8b40]; add byte ptr [edi], ch; jbe 0x5aa3d; ret 0x40c7; 
0x0017c4b5: inc dword ptr [ebp - 0x3f6af040]; add esp, 0x1c; movzx eax, al; ret; 
0x0010b4a6: inc dword ptr [ebp - 0x3f6bf040]; add esp, 0x2c; movzx eax, al; ret; 
0x00053442: inc dword ptr [ebp - 0x3f6bf040]; add esp, 0xc; movzx eax, al; ret; 
0x001859a2: inc dword ptr [ebp - 0x5a7af040]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x001b1348: inc dword ptr [ebp - 0x637af02e]; add dword ptr [eax], eax; add byte ptr [ecx + 0x7c89193c], cl; sbb dword ptr [ebx + eax*4], eax; ret; 
0x0017163a: inc dword ptr [ebp - 0x74228b40]; inc ebx; adc byte ptr [ebp + 0x53890450], cl; adc bl, ch; ret; 
0x000f8792: inc dword ptr [ebp - 0x74bc8b40]; test dword ptr [edx + edi*8 - 1], eax; jmp dword ptr [ebp - 0x75]; 
0x000f1512: inc dword ptr [ebp - 0x74bc8b40]; test dword ptr [edx + edi*8 - 1], edx; jmp dword ptr [ebp - 0x75]; 
0x00188456: inc dword ptr [ebp - 0x761a8b40]; ret; 
0x0013fede: inc dword ptr [ebp - 0x768f8740]; ret; 
0x00068314: inc dword ptr [ebp - 0x7b7af025]; add eax, dword ptr [eax]; add byte ptr [ebx - 0x58f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x00060637: inc dword ptr [ebp - 0x7cbb8b40]; in al, dx; add al, 0x6a; add eax, 0x4c838d50; je 0x60640; call dword ptr [eax - 0x18]; 
0x00060aa5: inc dword ptr [ebp - 0x7cc28b40]; in al, dx; add al, 0x6a; add eax, 0x4c838d50; je 0x60aae; call dword ptr [eax - 0x18]; 
0x001265c5: inc dword ptr [ebx + 0x1ba10c4]; add byte ptr [eax], al; add byte ptr [ebx - 0x2f76f73c], al; pop ebx; ret; 
0x00129f82: inc dword ptr [ebx + 0x287602f8]; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x000d61ae: inc dword ptr [ebx + 0x2ba03fe]; add byte ptr [eax], al; add byte ptr [ebx - 0x365773], cl; dec dword ptr [ecx - 0x36737b]; dec dword ptr [ebp + 0x4f0fff46]; ret 0x48d; 
0x000af349: inc dword ptr [ebx + 0x440ffff8]; ret; 
0x000e911c: inc dword ptr [ebx + 0x448b10c4]; and al, 0xc; add esp, 0x14; pop ebx; pop esi; ret; 
0x0009436a: inc dword ptr [ebx + 0x448b10c4]; and al, 0xc; add esp, 0x18; pop ebx; ret; 
0x0017a0ae: inc dword ptr [ebx + 0x448b10c4]; and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x17a0c3; add esp, 0x1c; ret; 
0x00027983: inc dword ptr [ebx + 0x45890cc4]; fmul qword ptr [ebp - 0x218f137d]; call dword ptr [eax - 0x73]; 
0x0009d144: inc dword ptr [ebx + 0x468b10c4]; add al, 0x89; ret 0xe283; 
0x0010a025: inc dword ptr [ebx + 0x478910c4]; sbb al, 0x89; ret 0xc085; 
0x00171074: inc dword ptr [ebx + 0x478b0cc4]; or byte ptr [ebp - 1], dl; jbe 0x17108b; push edi; call dword ptr [eax + 8]; 
0x000d8212: inc dword ptr [ebx + 0x48d04ec]; mov ch, 4; add byte ptr [eax], al; add byte ptr [ecx - 0x362f73], cl; dec dword ptr [ebx - 0x363f63]; call dword ptr [eax + 0x6a]; 
0x0014177d: inc dword ptr [ebx + 0x48d10c4]; pop ebx; pop esi; pop edi; ret; 
0x00122e81: inc dword ptr [ebx + 0x508930ca]; or byte ptr [edx + 0x100], bh; mov word ptr [eax + 0x16], dx; ret; 
0x0013d57a: inc dword ptr [ebx + 0x548b10c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x13d595; add esp, 0x2c; ret; 
0x0013e7ba: inc dword ptr [ebx + 0x548b10c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x13e7d5; add esp, 0x2c; ret; 
0x00192b40: inc dword ptr [ebx + 0x548b10c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x192b55; add esp, 0x2c; ret; 
0x00092762: inc dword ptr [ebx + 0x548b10c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x92777; add esp, 0x2c; ret; 
0x000972de: inc dword ptr [ebx + 0x548b10c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x972f3; add esp, 0x2c; ret; 
0x00098592: inc dword ptr [ebx + 0x548b10c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x985a7; add esp, 0x2c; ret; 
0x00098a02: inc dword ptr [ebx + 0x548b10c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x98a17; add esp, 0x2c; ret; 
0x00098f1e: inc dword ptr [ebx + 0x548b10c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x98f33; add esp, 0x2c; ret; 
0x0009936e: inc dword ptr [ebx + 0x548b10c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x99383; add esp, 0x2c; ret; 
0x0012d671: inc dword ptr [ebx + 0x548b10c4]; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x12d686; add esp, 0x1c; ret; 
0x0018c6be: inc dword ptr [ebx + 0x548b10c4]; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x18c6d3; add esp, 0x1c; ret; 
0x000da703: inc dword ptr [ebx + 0x548b10c4]; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xda718; add esp, 0x1c; ret; 
0x000e4f67: inc dword ptr [ebx + 0x548b10c4]; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xe4f7c; add esp, 0x1c; ret; 
0x000e7427: inc dword ptr [ebx + 0x548b10c4]; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xe743c; add esp, 0x1c; ret; 
0x0014b378: inc dword ptr [ebx + 0x548b20c4]; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x14b3cc; add esp, 0x1c; ret; 
0x00178734: inc dword ptr [ebx + 0x548d08ec]; and al, 0x20; push edx; push eax; call edi; 
0x0005f72e: inc dword ptr [ebx + 0x57530cc4]; push esi; mov eax, dword ptr [esp + 0x14]; call eax; 
0x000779ec: inc dword ptr [ebx + 0x5be9ffce]; mov dl, 0xff; dec dword ptr [ebx - 0x4ff7b]; jmp dword ptr [ebp - 0x75]; 
0x0018b379: inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x000abce5: inc dword ptr [ebx + 0x5e5b08c4]; pop edi; pop ebp; ret; 
0x0005bdbf: inc dword ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x0006102d: inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x001858fc: inc dword ptr [ebx + 0x5e5b14c4]; pop edi; pop ebp; ret; 
0x0002fe45: inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0017c30d: inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; jmp eax; 
0x00025dff: inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0013d826: inc dword ptr [ebx + 0x5e5b20c4]; pop edi; ret; 
0x00025fce: inc dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x00149bdf: inc dword ptr [ebx + 0x5e5b38c4]; pop edi; pop ebp; ret; 
0x00169973: inc dword ptr [ebx + 0x5e5b3cc4]; pop edi; pop ebp; ret; 
0x0012c3ae: inc dword ptr [ebx + 0x658d10c4]; clc; pop ebx; pop esi; pop ebp; ret; 
0x00071781: inc dword ptr [ebx + 0x6a5504ec]; and byte ptr [esi - 0x18], dl; ret 0x7a; 
0x00078998: inc dword ptr [ebx + 0x6e910c4]; fdiv st(7), st(0); dec dword ptr [ebx - 0x4ff4b]; dec dword ptr [ebp - 0x682177a]; call dword ptr [eax + 0x68]; 
0x000411c7: inc dword ptr [ebx + 0x74ff04ec]; and al, 8; push esi; push edi; mov eax, dword ptr [esp + 0x10]; call eax; 
0x0015653a: inc dword ptr [ebx + 0x750b383c]; add eax, 0xfffffebb; jmp dword ptr [ebp - 0x5f]; 
0x000effda: inc dword ptr [ebx + 0x78310c4]; add dword ptr [ecx], eax; ret; 
0x0017590d: inc dword ptr [ebx - 0x137cef3c]; or al, 0x31; call dword ptr [esi - 0x18]; 
0x0014ba81: inc dword ptr [ebx - 0x137cef3c]; or al, 0x8d; popfd; je 0x14bae7; stc; call dword ptr [ebx - 0x18]; 
0x0014ba55: inc dword ptr [ebx - 0x137cef3c]; or al, 0x8d; popfd; pop ebx; stc; call dword ptr [ebx - 0x18]; 
0x001844a7: inc dword ptr [ebx - 0x137cef3c]; or byte ptr [ebp - 0x699497d], cl; call dword ptr [ebp + 0x50]; 
0x001708b7: inc dword ptr [ebx - 0x137cef3c]; or byte ptr [ebx + 0x86a0447], cl; push edi; call dword ptr [eax + 0x18]; 
0x00073e23: inc dword ptr [ebx - 0x177cf714]; add dword ptr [ecx - 0x5037b], ecx; call dword ptr [esi - 1]; 
0x0015b29e: inc dword ptr [ebx - 0x17a8f314]; clc; jle 0x15b293; jmp dword ptr [ebp - 0x75]; 
0x000f6f35: inc dword ptr [ebx - 0x17a9f314]; popal; ret 0xfff2; 
0x00092fd8: inc dword ptr [ebx - 0x17a9f314]; push cs; ret 0xffff; 
0x0003f6d3: inc dword ptr [ebx - 0x17a9f314]; ret; 
0x000a7158: inc dword ptr [ebx - 0x17aceb3c]; out dx, al; stc; std; jmp dword ptr [esi - 0x70]; 
0x00092ea6: inc dword ptr [ebx - 0x17acf314]; inc eax; ret; 
0x0016998e: inc dword ptr [ebx - 0x17aef314]; or byte ptr [eax], bl; inc dword ptr [ebx - 0x77cef3c]; dec dword ptr [edi]; xchg esp, eax; ret 0xd1e9; 
0x001436d3: inc dword ptr [ebx - 0x17aff314]; ret; 
0x000a84cd: inc dword ptr [ebx - 0x2288fe06]; pop ebx; pop esi; pop edi; ret; 
0x00189d9e: inc dword ptr [ebx - 0x247aef3c]; jne 0x189db0; add esp, 8; pop ebx; ret; 
0x000253ca: inc dword ptr [ebx - 0x2708ef3c]; pop ebx; adc edx, 0; neg edx; ret; 
0x00142449: inc dword ptr [ebx - 0x2776d73c]; pop ebx; ret; 
0x00152846: inc dword ptr [ebx - 0x2776eb3c]; pop ebx; pop esi; ret; 
0x000da3a9: inc dword ptr [ebx - 0x287cfe3a]; add byte ptr [ecx], bh; ret; 
0x0005876d: inc dword ptr [ebx - 0x2c7c003f]; call dword ptr [ebx + 0x51]; 
0x000d6d7a: inc dword ptr [ebx - 0x2d7c0040]; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0017d268: inc dword ptr [ebx - 0x2f08e33c]; shr eax, 0x1f; ret; 
0x0010d97d: inc dword ptr [ebx - 0x357c0035]; dec dword ptr [ecx + 0xd2b8c1]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000567f9: inc dword ptr [ebx - 0x362743]; call dword ptr [eax]; 
0x00058685: inc dword ptr [ebx - 0x362743]; call dword ptr [ecx + 0xf]; 
0x0005885f: inc dword ptr [ebx - 0x36277b]; jmp dword ptr [eax]; 
0x000d59b4: inc dword ptr [ebx - 0x362f43]; call dword ptr [eax]; 
0x0008bd29: inc dword ptr [ebx - 0x3b7c10dd]; add al, 0x5b; pop esi; ret; 
0x000a1c00: inc dword ptr [ebx - 0x3b7cef3c]; adc al, 0x5b; pop esi; ret; 
0x00039105: inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x00129333: inc dword ptr [ebx - 0x3b7cef3c]; or byte ptr [eax + 1], bh; pop ebx; ret; 
0x0008d122: inc dword ptr [ebx - 0x3b7cf7f2]; adc al, 0x5b; pop esi; ret; 
0x0010d980: inc dword ptr [ebx - 0x3e760036]; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x0013d3ff: inc dword ptr [ebx - 0x3f7aef3c]; je 0x13d410; add esp, 8; pop ebx; ret; 
0x0016296f: inc dword ptr [ebx - 0x3f7aef3c]; je 0x162980; sub esp, 0xc; push esi; call eax; 
0x00162cff: inc dword ptr [ebx - 0x3f7aef3c]; je 0x162d10; sub esp, 0xc; push esi; call eax; 
0x00042115: inc dword ptr [ebx - 0x3f7aef3c]; je 0x42128; add esp, 8; pop ebx; ret; 
0x00128d5b: inc dword ptr [ebx - 0x3f7aef3c]; jne 0x128d1c; add esp, 0xc; ret; 
0x000fab63: inc dword ptr [ebx - 0x3f7aef3c]; jne 0xfab70; add esp, 8; pop ebx; ret; 
0x00157d7e: inc dword ptr [ebx - 0x3f7aef3c]; sete al; add esp, 0xc; ret; 
0x000a86a4: inc dword ptr [ebx - 0x3f7af33c]; jne 0xa86b3; ret; 
0x0008feed: inc dword ptr [ebx - 0x3fcee73c]; pop ebx; ret; 
0x00086c37: inc dword ptr [ebx - 0x3fceeb3c]; pop ebx; pop esi; ret; 
0x0003a02e: inc dword ptr [ebx - 0x3fceef3c]; add esp, 4; pop ebx; pop esi; ret; 
0x000ffd7a: inc dword ptr [ebx - 0x3fceef3c]; add esp, 8; pop ebx; ret; 
0x0010be0c: inc dword ptr [ebx - 0x3fceef3c]; pop ebx; pop esi; pop edi; ret; 
0x000ffd67: inc dword ptr [ebx - 0x3fcef73c]; pop ebx; ret; 
0x0009e041: inc dword ptr [ebx - 0x3fe6fe08]; add esp, 0x1c; ret; 
0x00037f41: inc dword ptr [ebx - 0x49f0ef3c]; lea edx, [esi + edi*8 - 1]; dec dword ptr [ecx - 0x1bf7b]; jmp dword ptr [ebp - 0x5f]; 
0x0013906e: inc dword ptr [ebx - 0x4b00f314]; and al, 0x10; add dword ptr [eax], eax; add al, ch; ret 0xf063; 
0x00074a02: inc dword ptr [ebx - 0x4ef43]; call dword ptr [eax]; 
0x00078c54: inc dword ptr [ebx - 0x51b73]; inc dword ptr [ecx + ecx*4]; ret; 
0x000c926e: inc dword ptr [ebx - 0x5bf0002e]; ret 0xc102; 
0x00057884: inc dword ptr [ebx - 0x5bf0ff26]; ret 0xc102; 
0x000d8446: inc dword ptr [ebx - 0x6274fb14]; ror cl, 0xff; call dword ptr [esi + 0x6a]; 
0x0009b03d: inc dword ptr [ebx - 0x69f00208]; ret; 
0x0012ed86: inc dword ptr [ebx - 0x6af0f708]; rol byte ptr [ebx - 0x49f0d33c], 0xc0; neg eax; ret; 
0x0012ed45: inc dword ptr [ebx - 0x6af0f708]; rol byte ptr [ebx - 0x49f0e33c], 0xc0; neg eax; ret; 
0x000d7566: inc dword ptr [ebx - 0x6bf0fe05]; ret 0xc139; 
0x0013d5d8: inc dword ptr [ebx - 0x6d72fe1d]; cmp al, 0xc0; cmc; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x000a8b88: inc dword ptr [ebx - 0x6d72fe1d]; dec esp; sal ch, 0xff; cmovne eax, edx; pop ebx; ret; 
0x0013d628: inc dword ptr [ebx - 0x6d72fe1d]; or al, 0xe0; cmc; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x0013d678: inc dword ptr [ebx - 0x6d72fe1d]; sbb al, 0xd0; cmc; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x000a93b8: inc dword ptr [ebx - 0x6d72fe1d]; sbb al, 0xe0; cmc; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x000a9408: inc dword ptr [ebx - 0x6d72fe1d]; sub al, 0xd0; cmc; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x0013bbf3: inc dword ptr [ebx - 0x7072ef3c]; mov ebp, 0x89fff945; ret 0x68b; 
0x000597a9: inc dword ptr [ebx - 0x70f0e008]; ret 1; 
0x001af65b: inc dword ptr [ebx - 0x71f0e008]; mov eax, dword ptr [0x89000008]; ret; 
0x000d5f97: inc dword ptr [ebx - 0x7274f314]; ror cl, 0xff; call dword ptr [ebx - 0x75]; 
0x000faf65: inc dword ptr [ebx - 0x72acf714]; sub dh, 0x47; stc; call dword ptr [eax - 0x18]; 
0x0013baeb: inc dword ptr [ebx - 0x72afef3c]; xchg byte ptr [esi + 0x56], bl; stc; call dword ptr [ebx + 0x50]; 
0x00175f18: inc dword ptr [ebx - 0x72afef3c]; xor eax, 0xffffffb7; stc; call dword ptr [eax - 0x73]; 
0x0008d9a8: inc dword ptr [ebx - 0x72aff314]; add dword ptr [edi], 0x3f; stc; call dword ptr [ecx + 0x52]; 
0x0008d934: inc dword ptr [ebx - 0x72aff314]; or dword ptr [esi], 0x3f; stc; call dword ptr [ecx + 0x52]; 
0x000a6a87: inc dword ptr [ebx - 0x72aff33c]; adc dword ptr [ecx + ebx*2], -7; call dword ptr [eax + 0x6a]; 
0x001390d8: inc dword ptr [ebx - 0x72aff33c]; or dword ptr [ebx], 0x56; stc; call dword ptr [eax + 0x56]; 
0x001243d1: inc dword ptr [ebx - 0x72aff33c]; or dword ptr [ebx], 0x56; stc; call dword ptr [eax + 0x6a]; 
0x0017abcd: inc dword ptr [ebx - 0x72aff33c]; xchg byte ptr [ecx + ebx*2], dl; stc; call dword ptr [eax + 0x6a]; 
0x00134234: inc dword ptr [ebx - 0x72aff33c]; xchg dword ptr [edi], edx; push ebp; stc; call dword ptr [eax + 0x6a]; 
0x00190641: inc dword ptr [ebx - 0x73ee33c]; pop ds; ret; 
0x00175e91: inc dword ptr [ebx - 0x74aaf314]; inc esp; and al, 0x48; call dword ptr [eax + 0x10]; 
0x0012c446: inc dword ptr [ebx - 0x776ef3c]; pop ebx; pop esi; pop edi; ret; 
0x00184c92: inc dword ptr [ebx - 0x77cdf3c]; push dword ptr [ebx + esi*2 - 0x18]; mov al, byte ptr [0x89fff6a5]; ret; 
0x001749ff: inc dword ptr [ebx - 0x77cef3c]; add dword ptr [eax + 1], edi; sbb eax, -1; add esp, 0xc; ret; 
0x0017d042: inc dword ptr [ebx - 0x77cef3c]; add dword ptr [edi], ecx; xchg esp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x00130e8f: inc dword ptr [ebx - 0x77cef3c]; dec dword ptr [edi]; test byte ptr [eax + eax - 0x137d0000], al; add al, 0x89; ret; 
0x00169997: inc dword ptr [ebx - 0x77cef3c]; dec dword ptr [edi]; xchg esp, eax; ret 0xd1e9; 
0x0014333f: inc dword ptr [ebx - 0x77cef3c]; push dword ptr [eax - 0x77]; ret; 
0x00189f70: inc dword ptr [ebx - 0x77cef3c]; push dword ptr [esp + edi*4 - 0x77]; ret 0xe283; 
0x0017edc2: inc dword ptr [ebx - 0x7872f314]; call ptr [ebx - 7]; call dword ptr [eax - 0x18]; 
0x00092e97: inc dword ptr [ebx - 0x7872f314]; push eax; test cl, bh; call dword ptr [eax - 0x18]; 
0x000fedac: inc dword ptr [ebx - 0x78f00306]; push cs; add al, byte ptr [eax]; add byte ptr [ecx], al; ret; 
0x000a18db: inc dword ptr [ebx - 0x7972f33c]; in al, dx; sbb ah, dh; call dword ptr [eax + 0x57]; 
0x000a1893: inc dword ptr [ebx - 0x7972f33c]; in al, dx; sbb al, 0xe6; call dword ptr [eax + 0x57]; 
0x000a18a5: inc dword ptr [ebx - 0x7972f33c]; insb byte ptr es:[edi], dx; sbb ah, dh; call dword ptr [eax + 0x57]; 
0x000a18c9: inc dword ptr [ebx - 0x7972f33c]; lodsb al, byte ptr [esi]; sbb ah, dh; call dword ptr [eax + 0x57]; 
0x000a18ff: inc dword ptr [ebx - 0x7972f33c]; lodsb al, byte ptr [esi]; sbb al, 0xe6; call dword ptr [eax + 0x57]; 
0x001259c0: inc dword ptr [ebx - 0x7972f714]; pop ecx; stc; call dword ptr [eax - 1]; 
0x00069933: inc dword ptr [ebx - 0x7a72f314]; mov eax, 0x89fffffb; lea esp, [edx + edi*8 - 1]; dec dword ptr [ecx - 0x5976b]; call dword ptr [eax - 0x18]; 
0x0014c3cb: inc dword ptr [ebx - 0x7a72f714]; sub ecx, edi; call dword ptr [eax - 0x73]; 
0x001425bf: inc dword ptr [ebx - 0x7a72fb14]; mov al, byte ptr [0x6afff958]; add eax, 0x4c858d50; je 0x1425ca; call dword ptr [eax - 0x18]; 
0x0007260f: inc dword ptr [ebx - 0x7af0ef06]; jmp esi; 
0x00072a24: inc dword ptr [ebx - 0x7af0fb1a]; ret; 
0x00075667: inc dword ptr [ebx - 0x7bf0fe08]; mov edi, 0x89ffffdc; ret; 
0x0016ec25: inc dword ptr [ebx - 0x7c72e73c]; in al, dx; movsd dword ptr es:[edi], dword ptr [esi]; add byte ptr [eax], al; pop ebx; ret; 
0x00069c02: inc dword ptr [ebx - 0x7c72f314]; cld; xor bh, cl; call dword ptr [eax - 0x18]; 
0x00039e24: inc dword ptr [ebx - 0x7c72f314]; shr dword ptr [esi], 1; stc; call dword ptr [eax - 0x18]; 
0x000fdbc5: inc dword ptr [ebx - 0x7c72f714]; adc ecx, dword ptr [eax - 7]; call dword ptr [eax + 0x55]; 
0x000dd6b3: inc dword ptr [ebx - 0x7c72f714]; and al, 0x46; stc; call dword ptr [eax + 0x56]; 
0x000fdd42: inc dword ptr [ebx - 0x7c72f714]; cmp byte ptr [eax - 7], cl; call dword ptr [eax + 0x55]; 
0x000fdce6: inc dword ptr [ebx - 0x7c72f714]; pop es; dec eax; stc; call dword ptr [eax + 0x55]; 
0x000fdf9a: inc dword ptr [ebx - 0x7c72f714]; sub ecx, dword ptr [eax - 7]; call dword ptr [eax + 0x55]; 
0x000dd815: inc dword ptr [ebx - 0x7c76ef3c]; push 0x8900003e; ret 0xc085; 
0x00095653: inc dword ptr [ebx - 0x7e45f440]; add eax, 0xa30f0000; ret 0x830f; 
0x0009780e: inc dword ptr [ebx - 0x7e45f440]; add eax, 0xa30f0000; ret 0xac73; 
0x000f2a75: inc dword ptr [ebx - 0x7f72f314]; mov bh, 0x47; stc; call dword ptr [eax - 0x18]; 
0x000fae04: inc dword ptr [ebx - 0x7f72f714]; add cl, byte ptr [eax - 7]; call dword ptr [eax + 0x53]; 
0x000fae61: inc dword ptr [ebx - 0x7f72f714]; add cl, byte ptr [eax - 7]; call dword ptr [eax - 1]; 
0x00091b6c: inc dword ptr [ebx - 0x9ce0320]; mov edx, eax; mov eax, 0xf0; or edx, 2; call dword ptr gs:[0x10]; 
0x000913ee: inc dword ptr [ebx - 0x9ce0320]; mov edx, eax; mov eax, ebp; or edx, 2; call dword ptr gs:[0x10]; 
0x00141506: inc dword ptr [ebx - 0xb8b0a08]; add esp, 8; pop ebx; ret; 
0x00187754: inc dword ptr [ebx - 0xc2ef3c]; add byte ptr [eax], al; add byte ptr [edi], cl; test byte ptr [ebp - 0x77000000], cl; ret 0xe283; 
0x0013f259: inc dword ptr [ebx - 0xf76cb3c]; pop ebx; pop esi; ret; 
0x0007c33d: inc dword ptr [ebx - 0xf76df3c]; pop ebx; pop esi; pop edi; ret; 
0x0009ce4d: inc dword ptr [ebx - 0xf76eb3c]; pop ebx; pop esi; ret; 
0x000e9f48: inc dword ptr [ebx - 0xf76ef3c]; add esp, 4; pop ebx; pop esi; ret; 
0x0013dd5c: inc dword ptr [ebx - 0xffeef3c]; pop ebx; pop esi; pop edi; ret; 
0x0013c8d7: inc dword ptr [ebx]; add byte ptr [eax], al; ja 0x13c8e4; sar eax, 5; add esp, 0xc; ret; 
0x001aa561: inc dword ptr [ebx]; add byte ptr [eax], al; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x0004193b: inc dword ptr [ebx]; add byte ptr [eax], al; xor eax, ebx; pop ebx; ret; 
0x0019bf6b: inc dword ptr [ebx]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001a7f1f: inc dword ptr [ecx + 0x34454c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001a7e5a: inc dword ptr [ecx + 0x34519c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001a654f: inc dword ptr [ecx + 0x35d20c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001a6440: inc dword ptr [ecx + 0x35e2fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019de71: inc dword ptr [ecx + 0x3e33ec3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019dc6d: inc dword ptr [ecx + 0x3e442c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019d178: inc dword ptr [ecx + 0x3ef37c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019d06e: inc dword ptr [ecx + 0x3f041c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019cf67: inc dword ptr [ecx + 0x3f148c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019ce6b: inc dword ptr [ecx + 0x3f244c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019cc5d: inc dword ptr [ecx + 0x3f292c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019ceb8: inc dword ptr [ecx + 0x3f2b7c3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x0019c178: inc dword ptr [ecx + 0x3fd77c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019c06e: inc dword ptr [ecx + 0x3fe81c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019bf67: inc dword ptr [ecx + 0x3ff88c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019be5e: inc dword ptr [ecx + 0x40091c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019bc8d: inc dword ptr [ecx + 0x400a2c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019beb8: inc dword ptr [ecx + 0x400f7c3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x0019be6e: inc dword ptr [ecx + 0x40181c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019b198: inc dword ptr [ecx + 0x40b97c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019b08e: inc dword ptr [ecx + 0x40ca1c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019af87: inc dword ptr [ecx + 0x40da8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019ae7e: inc dword ptr [ecx + 0x40eb1c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019ad6b: inc dword ptr [ecx + 0x40f04c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019aed8: inc dword ptr [ecx + 0x40f17c3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x0019ae8e: inc dword ptr [ecx + 0x40fa1c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019aab7: inc dword ptr [ecx + 0x40ff8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019a41e: inc dword ptr [ecx + 0x41691c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019a400: inc dword ptr [ecx + 0x416afc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019a367: inc dword ptr [ecx + 0x41748c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019a2a0: inc dword ptr [ecx + 0x4180fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019a207: inc dword ptr [ecx + 0x418a8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019a140: inc dword ptr [ecx + 0x4196fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019a0a7: inc dword ptr [ecx + 0x41a08c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00199fe0: inc dword ptr [ecx + 0x41acfc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00199f47: inc dword ptr [ecx + 0x41b68c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00199e80: inc dword ptr [ecx + 0x41c2fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00199de7: inc dword ptr [ecx + 0x41cc8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00199d20: inc dword ptr [ecx + 0x41d8fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00199c87: inc dword ptr [ecx + 0x41e28c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00199bc0: inc dword ptr [ecx + 0x41eefc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00199b27: inc dword ptr [ecx + 0x41f88c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00199a60: inc dword ptr [ecx + 0x4204fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001999c7: inc dword ptr [ecx + 0x420e8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00199900: inc dword ptr [ecx + 0x421afc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00199867: inc dword ptr [ecx + 0x42248c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001997a0: inc dword ptr [ecx + 0x4230fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00199707: inc dword ptr [ecx + 0x423a8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00199640: inc dword ptr [ecx + 0x4246fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001995a7: inc dword ptr [ecx + 0x42508c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001994e0: inc dword ptr [ecx + 0x425cfc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00199447: inc dword ptr [ecx + 0x42668c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00199380: inc dword ptr [ecx + 0x4272fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001992e7: inc dword ptr [ecx + 0x427c8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00199220: inc dword ptr [ecx + 0x4288fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00199187: inc dword ptr [ecx + 0x42928c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001990c0: inc dword ptr [ecx + 0x429efc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00199027: inc dword ptr [ecx + 0x42a88c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00198f5f: inc dword ptr [ecx + 0x42c10c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00198e5a: inc dword ptr [ecx + 0x42c55c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00198d54: inc dword ptr [ecx + 0x42e1bc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00198c4b: inc dword ptr [ecx + 0x42e64c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00198957: inc dword ptr [ecx + 0x42ed8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00198c95: inc dword ptr [ecx + 0x42f9ac3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x0019831e: inc dword ptr [ecx + 0x43511c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00198300: inc dword ptr [ecx + 0x4352fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00198267: inc dword ptr [ecx + 0x435c8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001981b0: inc dword ptr [ecx + 0x4367fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00198117: inc dword ptr [ecx + 0x43718c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00198060: inc dword ptr [ecx + 0x437cfc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00197fc7: inc dword ptr [ecx + 0x43868c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00197f10: inc dword ptr [ecx + 0x4391fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00197e77: inc dword ptr [ecx + 0x439b8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00197dc0: inc dword ptr [ecx + 0x43a6fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00197d27: inc dword ptr [ecx + 0x43b08c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00197c70: inc dword ptr [ecx + 0x43bbfc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00197bd7: inc dword ptr [ecx + 0x43c58c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00197b20: inc dword ptr [ecx + 0x43d0fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00197a87: inc dword ptr [ecx + 0x43da8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001979d0: inc dword ptr [ecx + 0x43e5fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00197937: inc dword ptr [ecx + 0x43ef8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00197880: inc dword ptr [ecx + 0x43fafc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001977e7: inc dword ptr [ecx + 0x44048c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00197730: inc dword ptr [ecx + 0x440ffc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00197697: inc dword ptr [ecx + 0x44198c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001975e0: inc dword ptr [ecx + 0x4424fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00197547: inc dword ptr [ecx + 0x442e8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00197490: inc dword ptr [ecx + 0x4439fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001973f7: inc dword ptr [ecx + 0x44438c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00197340: inc dword ptr [ecx + 0x444efc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001972a7: inc dword ptr [ecx + 0x44588c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001971f0: inc dword ptr [ecx + 0x4463fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00197157: inc dword ptr [ecx + 0x446d8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001970a0: inc dword ptr [ecx + 0x4478fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00197007: inc dword ptr [ecx + 0x44828c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00196f4f: inc dword ptr [ecx + 0x449a0c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00196e4a: inc dword ptr [ecx + 0x449e5c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00196d44: inc dword ptr [ecx + 0x44babc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00196c3e: inc dword ptr [ecx + 0x44bf1c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001969b7: inc dword ptr [ecx + 0x44bf8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00196ca3: inc dword ptr [ecx + 0x44d0cc3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x00196c54: inc dword ptr [ecx + 0x44d9bc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019631e: inc dword ptr [ecx + 0x45291c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00196300: inc dword ptr [ecx + 0x452afc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00196267: inc dword ptr [ecx + 0x45348c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001961b0: inc dword ptr [ecx + 0x453ffc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00196117: inc dword ptr [ecx + 0x45498c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00196060: inc dword ptr [ecx + 0x4554fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00195fc7: inc dword ptr [ecx + 0x455e8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00195f10: inc dword ptr [ecx + 0x4569fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00195e77: inc dword ptr [ecx + 0x45738c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00195dc0: inc dword ptr [ecx + 0x457efc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00195d27: inc dword ptr [ecx + 0x45888c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00195c70: inc dword ptr [ecx + 0x4593fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00195bd7: inc dword ptr [ecx + 0x459d8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00195b20: inc dword ptr [ecx + 0x45a8fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00195a87: inc dword ptr [ecx + 0x45b28c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001959d0: inc dword ptr [ecx + 0x45bdfc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00195937: inc dword ptr [ecx + 0x45c78c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00195880: inc dword ptr [ecx + 0x45d2fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001957e7: inc dword ptr [ecx + 0x45dc8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00195730: inc dword ptr [ecx + 0x45e7fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00195697: inc dword ptr [ecx + 0x45f18c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001955e0: inc dword ptr [ecx + 0x45fcfc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00195547: inc dword ptr [ecx + 0x46068c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00195490: inc dword ptr [ecx + 0x4611fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001953f7: inc dword ptr [ecx + 0x461b8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00195340: inc dword ptr [ecx + 0x4626fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001952a7: inc dword ptr [ecx + 0x46308c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001951f0: inc dword ptr [ecx + 0x463bfc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00195157: inc dword ptr [ecx + 0x46458c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001950a0: inc dword ptr [ecx + 0x4650fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00195007: inc dword ptr [ecx + 0x465a8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00194f4f: inc dword ptr [ecx + 0x46720c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00194e4a: inc dword ptr [ecx + 0x46765c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00194d44: inc dword ptr [ecx + 0x4692bc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00194c3e: inc dword ptr [ecx + 0x46971c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00194ca3: inc dword ptr [ecx + 0x46a8cc3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x00194c54: inc dword ptr [ecx + 0x46b1bc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00193a5c: inc dword ptr [ecx + 0x47953c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x001939ac: inc dword ptr [ecx + 0x47a03c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x001938c4: inc dword ptr [ecx + 0x47a6bc3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00193502: inc dword ptr [ecx + 0x47c2dc3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00193446: inc dword ptr [ecx + 0x47ce9c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x001933ea: inc dword ptr [ecx + 0x47d45c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0019332c: inc dword ptr [ecx + 0x47e03c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00193244: inc dword ptr [ecx + 0x47e6bc3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x000fb1d2: inc dword ptr [ecx + 0x654973fa]; push edx; mov edx, 0x20; cmovne eax, edx; ret; 
0x001904c3: inc dword ptr [ecx + 0xae950c6]; add byte ptr [ebx - 0x75], dl; push esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0018b1fb: inc dword ptr [ecx + 0xb3c18c6]; add byte ptr [ebx - 0x77], dl; ret; 
0x00078c5a: inc dword ptr [ecx + ecx*4]; ret; 
0x000fb213: inc dword ptr [ecx - 0x2ff42f06]; or edi, dword ptr [edx + 0x20]; cmovne eax, edx; ret; 
0x0018dd24: inc dword ptr [ecx]; add byte ptr [eax], al; add cl, ch; ret 0xfff1; 
0x001aa551: inc dword ptr [ecx]; add byte ptr [eax], al; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x000c1936: inc dword ptr [ecx]; clc; pop edi; ret; 
0x000c1973: inc dword ptr [ecx]; clc; xor ch, ch; add eax, ecx; pop edi; ret; 
0x0012be1e: inc dword ptr [ecx]; fcom dword ptr [eax - 0x73]; xchg byte ptr [ecx], cl; aas; stc; call dword ptr [eax + 0x6a]; 
0x0007483f: inc dword ptr [ecx]; fdivr dword ptr [ecx]; ret 0x830f; 
0x000a6798: inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x00060678: inc dword ptr [ecx]; fidivr dword ptr [esi]; jmp edx; 
0x0004353c: inc dword ptr [ecx]; fidivr word ptr [esi]; jmp esi; 
0x00038165: inc dword ptr [ecx]; fmul dword ptr [ebx - 0x1cb63]; call dword ptr [esi + 0x50]; 
0x00031fdd: inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x000dfc14: inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x00108da8: inc dword ptr [ecx]; inc edi; sub byte ptr [edi], cl; mov dh, 0x46; add al, 0x89; ret 0xe283; 
0x0010ce00: inc dword ptr [ecx]; ja 0x10ce0d; mov eax, dword ptr [esp + 4]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x0012f0e6: inc dword ptr [ecx]; je 0x12f120; lea ecx, [esp + 0xc]; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x001304a6: inc dword ptr [ecx]; je 0x1304e0; lea ecx, [esp + 0xc]; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x00036e92: inc dword ptr [ecx]; lds ebp, ptr [ecx]; ret; 
0x0005c42a: inc dword ptr [ecx]; ret 0x5589; 
0x0006bc4b: inc dword ptr [ecx]; ret 0x858b; 
0x0006996b: inc dword ptr [ecx]; ret 0x9589; 
0x00057b66: inc dword ptr [ecx]; ret 0xbe0f; 
0x00038967: inc dword ptr [ecx]; ret 0xd089; 
0x0005694d: inc dword ptr [ecx]; ret 0xd389; 
0x0006860f: inc dword ptr [ecx]; ret 0xd801; 
0x00069b75: inc dword ptr [ecx]; ret 0xf001; 
0x00068381: inc dword ptr [ecx]; ret 0xf801; 
0x00031369: inc dword ptr [ecx]; ret; 
0x000f322c: inc dword ptr [ecx]; rol byte ptr [ecx], 1; ret; 
0x00038379: inc dword ptr [ecx]; ror byte ptr [ecx - 0x1cf7b], 1; dec dword ptr [ebx - 0x1f77b]; dec dword ptr [ecx - 0x1f743]; dec dword ptr [ecx - 0x76267631]; ret; 
0x00071991: inc dword ptr [ecx]; ror dword ptr [ecx + 0x244c8bca], 0x4c; mov dword ptr [esp + 4], ecx; jmp edx; 
0x000c30e7: inc dword ptr [ecx]; sar dword ptr [esi], 1; jmp ecx; 
0x001aa571: inc dword ptr [edi]; add byte ptr [eax], al; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x000fdbe2: inc eax; aas; stc; call dword ptr [eax + 0x55]; 
0x00106e37: inc eax; aas; stc; call dword ptr [eax - 0x17]; 
0x0017cdd9: inc eax; adc al, 4; mov eax, 1; ret; 
0x0005adeb: inc eax; adc byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx + 0x4508910], cl; xor eax, eax; ret; 
0x0008b9fd: inc eax; adc byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ret 0x40c7; 
0x001ab99c: inc eax; adc byte ptr [ebp - 0x74f18a2e], al; inc esp; and al, 0xc; pop edi; ret; 
0x00082bd4: inc eax; adc byte ptr [ebx + 0x5e5b04c4], al; jmp eax; 
0x0008d8b3: inc eax; adc byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; jmp eax; 
0x0018b284: inc eax; adc byte ptr [ecx + 0x39042444], cl; ret 0x9174; 
0x00087bdc: inc eax; adc byte ptr [ecx + 0x39082444], cl; ret 0x8c74; 
0x001ab76d: inc eax; adc byte ptr [edi], cl; test dword ptr [eax], ebp; add dword ptr [eax], eax; add byte ptr [ebx - 0x79f0bf11], al; ret 1; 
0x0012ad27: inc eax; adc dword ptr [eax], eax; push ebx; mov ebx, 0xfee1dead; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000909ef: inc eax; add al, 0; add byte ptr [eax], al; add byte ptr [ecx - 0x3fcef3b0], cl; pop ebx; ret; 
0x00197734: inc eax; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0015ebe3: inc eax; add al, 0x3c; jg 0x15ebf7; inc esp; ret 0x8489; 
0x001251ff: inc eax; add al, 0x5b; ret; 
0x001abaaa: inc eax; add al, 0x5f; ret; 
0x0017b9b1: inc eax; add al, 0x83; les ebx, ptr [eax]; pop ebx; jmp eax; 
0x00026d31: inc eax; add al, 0x85; ror byte ptr [edi], 0x44; ret; 
0x00152b21: inc eax; add al, 0x85; sal byte ptr [ebp + eax + 0x39], 0x50; or byte ptr [ebp - 0xc], dh; ret; 
0x001752e9: inc eax; add al, 0x8b; pop edx; and al, 0x83; ret 0x8b18; 
0x0009cf75: inc eax; add al, 0xe8; mov eax, dword ptr [0x81000ecc]; ret; 
0x000a27ea: inc eax; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [edi + ecx*4 - 7], al; call dword ptr [eax - 0x18]; 
0x0005173c: inc eax; add al, byte ptr [eax]; add byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; aad 1; ret 0xd889; 
0x000f0a81: inc eax; add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x000fb1ac: inc eax; add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0x8dc3; 
0x000ac031: inc eax; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x00062037: inc eax; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00034448: inc eax; add byte ptr [eax], al; ret; 
0x0006586b: inc eax; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; jmp edx; 
0x000355a0: inc eax; add dword ptr [ecx + 0x418db445], ecx; sbb al, 0x89; ret 0x25; 
0x000c1875: inc eax; add edx, eax; jl 0xc18b0; add eax, ecx; ret; 
0x000c2ca4: inc eax; add esp, 0x100; sub eax, edx; ret; 
0x0014ac63: inc eax; add esp, 0x118; pop ebx; ret; 
0x000fb5ff: inc eax; add esp, 0x18; pop ebx; ret; 
0x000dbcd8: inc eax; add esp, 0x28; pop ebx; ret; 
0x001158fa: inc eax; add esp, 0x74; pop ebx; pop esi; ret; 
0x00081121: inc eax; and al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00034584: inc eax; and al, 0x8b; add al, 0x90; ret; 
0x00034635: inc eax; and al, 0x8b; test byte ptr [eax + 0x200], dl; ret; 
0x000ded07: inc eax; and byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp + 0x3e8c8a], cl; add byte ptr [ebp - 0x1646036e], cl; call dword ptr [ecx + 0x52]; 
0x0012524a: inc eax; and byte ptr [ebp - 0x3dbbf040], al; ret; 
0x000564f0: inc eax; and byte ptr [ebx - 0x7a76f314], al; ror cl, 0xff; call dword ptr [eax - 0x18]; 
0x000a9577: inc eax; call 0xc24ea57c; ret; 
0x00024eeb: inc eax; call dword ptr [ebp]; 
0x00024e81: inc eax; call ecx; 
0x00024e2a: inc eax; call esi; 
0x0019639b: inc eax; clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019839b: inc eax; clc; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x00137060: inc eax; cmove edx, eax; mov eax, edx; pop ebx; ret; 
0x00125221: inc eax; cmp al, 0x5b; ret; 
0x000347ed: inc eax; cmp al, 0x8b; add al, 0x90; ret; 
0x000c2ecf: inc eax; cmp cl, 0; je 0xc2ed6; inc eax; sub eax, dword ptr [esp + 4]; ret; 
0x000e79d8: inc eax; cmp dword ptr [ecx + 8], 0x3b9ac9ff; ja 0xe7a90; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x00130eee: inc eax; cmpsb byte ptr [esi], byte ptr es:[edi]; stc; call dword ptr [eax + 0x55]; 
0x00109792: inc eax; dec eax; stc; call dword ptr [edx - 1]; 
0x00134ace: inc eax; dec esp; call 0x134990; add esp, 4; ret; 
0x001897b9: inc eax; dec esp; ret; 
0x000b3c7c: inc eax; idiv edi; jmp dword ptr [esi + 0xf]; 
0x0008bd28: inc eax; inc dword ptr [ebx - 0x3b7c10dd]; add al, 0x5b; pop esi; ret; 
0x000c2ca3: inc eax; inc eax; add esp, 0x100; sub eax, edx; ret; 
0x000c2ca2: inc eax; inc eax; inc eax; add esp, 0x100; sub eax, edx; ret; 
0x0004226f: inc eax; inc eax; ret; 
0x000a94f7: inc eax; ja 0xa9501; mov eax, dword ptr [ecx + edx*4 - 0xe34]; ret; 
0x000a9527: inc eax; ja 0xa9531; mov eax, dword ptr [ecx + edx*4 - 0xd14]; ret; 
0x00127311: inc eax; je 0x12729d; push esi; add al, 0x89; ret 0xeac1; 
0x00127867: inc eax; je 0x1277f3; push esi; add al, 0x89; ret 0xeac1; 
0x001278dc: inc eax; je 0x127868; push esi; add al, 0x89; ret 0xeac1; 
0x00127a36: inc eax; je 0x1279c2; push esi; add al, 0x89; ret 0xeac1; 
0x00127b22: inc eax; je 0x127aae; push esi; add al, 0x89; ret 0xeac1; 
0x00127b97: inc eax; je 0x127b23; push esi; add al, 0x89; ret 0xeac1; 
0x00127d42: inc eax; je 0x127cce; push esi; add al, 0x89; ret 0xeac1; 
0x00128137: inc eax; je 0x1280c3; push esi; add al, 0x89; ret 0xeac1; 
0x00156252: inc eax; jl 0x156255; add byte ptr [eax], al; add byte ptr [ebx + 0x5f5e04c4], al; ret; 
0x00066c4c: inc eax; jmp dword ptr [eax]; 
0x0019652e: inc eax; jmp dword ptr [esi - 0x77]; 
0x0019f2ed: inc eax; jne 0x19f360; movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x001a9b0c: inc eax; jne 0x1a9b74; add eax, 7; ret; 
0x001a9b4c: inc eax; jne 0x1a9b94; add eax, 0xf; ret; 
0x001a9e25: inc eax; jne 0x1a9ef0; lea eax, [edi + 7]; pop edi; ret; 
0x001a9e78: inc eax; jne 0x1a9f60; lea eax, [edi + 0xf]; pop edi; ret; 
0x001a9d99: inc eax; jne 0x1a9f70; lea eax, [edi + 0xf]; pop edi; ret; 
0x001a9cf6: inc eax; jne 0x1a9f70; lea eax, [edi + 7]; pop edi; ret; 
0x001aa7e1: inc eax; jne 0x1aa910; lea eax, [edi + 7]; pop edi; ret; 
0x001aa834: inc eax; jne 0x1aa970; lea eax, [edi + 0xf]; pop edi; ret; 
0x001aae59: inc eax; jne 0x1aaf00; test al, 0x20; jne 0x1aaef0; lea eax, [ecx + 4]; ret; 
0x001ab4b1: inc eax; jne 0x1ab560; lea eax, [edx + 7]; ret; 
0x001ab504: inc eax; jne 0x1ab5c0; lea eax, [edx + 0xf]; ret; 
0x001ab8e4: inc eax; jne 0x1abc99; add eax, 7; pop edi; ret; 
0x001ab934: inc eax; jne 0x1abcc1; add eax, 0xf; pop edi; ret; 
0x00093d52: inc eax; jne 0x93536; mov eax, 0x9d; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x0009f6d5: inc eax; jne 0x9f700; add ebx, 1; mov eax, 0x115; call dword ptr gs:[0x10]; 
0x0005bb06: inc eax; jp 0x5bb02; call dword ptr [eax - 0x73]; 
0x00049fba: inc eax; js 0x49fb6; call dword ptr [eax - 0x73]; 
0x0004a174: inc eax; js 0x4a170; call dword ptr [eax - 0x73]; 
0x0004a197: inc eax; js 0x4a193; call dword ptr [eax - 0x73]; 
0x0004a1ba: inc eax; js 0x4a1b6; call dword ptr [eax - 0x73]; 
0x0004a1dd: inc eax; js 0x4a1d9; call dword ptr [eax - 0x73]; 
0x0004a200: inc eax; js 0x4a1fc; call dword ptr [eax - 0x73]; 
0x0004a223: inc eax; js 0x4a21f; call dword ptr [eax - 0x73]; 
0x0004a246: inc eax; js 0x4a242; call dword ptr [eax - 0x73]; 
0x0004a293: inc eax; js 0x4a28f; call dword ptr [eax - 0x73]; 
0x0004a2b6: inc eax; js 0x4a2b2; call dword ptr [eax - 0x73]; 
0x0004a2d9: inc eax; js 0x4a2d5; call dword ptr [eax - 0x73]; 
0x0004a2fc: inc eax; js 0x4a2f8; call dword ptr [eax - 0x73]; 
0x0004a31f: inc eax; js 0x4a31b; call dword ptr [eax - 0x73]; 
0x0004a342: inc eax; js 0x4a33e; call dword ptr [eax - 0x73]; 
0x0004a365: inc eax; js 0x4a361; call dword ptr [eax - 0x73]; 
0x0010bfed: inc eax; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00122bb1: inc eax; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x0009c105: inc eax; mov cl, bh; call dword ptr [eax - 0x18]; 
0x00158cf9: inc eax; mov dword ptr [edx], ebx; add esp, 0x28; pop ebx; ret; 
0x00131a2b: inc eax; mov dword ptr [esp + 0x14], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001322b2: inc eax; mov dword ptr [esp + 0x14], eax; mov eax, dword ptr [esp + 0x44]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00070cda: inc eax; mov dword ptr [esp + 4], ecx; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x0008fd65: inc eax; mov eax, dword ptr [edi]; mov ebx, dword ptr [edi + 4]; mov ecx, dword ptr [edi + 8]; mov edx, dword ptr [edi + 0xc]; call dword ptr gs:[0x10]; 
0x000c0ea5: inc eax; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000e767d: inc eax; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0009fbfc: inc eax; mov edx, dword ptr [esp + 0x48]; mov eax, 0x117; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x0009f934: inc eax; mov edx, dword ptr [esp + 0x48]; mov eax, 0x118; mov ecx, ebp; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0009fb77: inc eax; mov edx, dword ptr [esp + 0x48]; mov eax, 0x1a2; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x0009f8b1: inc eax; mov edx, dword ptr [esp + 0x48]; mov eax, 0x1a3; mov ecx, ebp; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x00120f5d: inc eax; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0014f019: inc eax; or al, 0x39; inc ebx; or al, 0x75; ret; 
0x0013bfde: inc eax; or al, 0x56; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0017c0a5: inc eax; or al, 0x5e; pop edi; jmp eax; 
0x001abb06: inc eax; or al, 0x5f; ret; 
0x00082da8: inc eax; or al, 0x83; in al, dx; add al, 0x29; ret 0xfac1; 
0x0009d698: inc eax; or al, 0x85; sal byte ptr [ebp - 0xe], 0x5b; ret; 
0x001227d9: inc eax; or byte ptr [0x100f], ah; ret; 
0x0014ab72: inc eax; or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0005aabd: inc eax; or byte ptr [eax], al; mov eax, edx; ret; 
0x0009039d: inc eax; or byte ptr [ebx + 0x28901e0], al; xor eax, eax; ret; 
0x0013c024: inc eax; or byte ptr [ecx - 0x373edbcc], cl; or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x00152195: inc eax; or byte ptr [ecx], al; je 0x1521bd; add esp, 0xc; ret; 
0x0017c0de: inc eax; or byte ptr [esi + 0x5f], bl; jmp eax; 
0x0009043d: inc eax; or cl, al; clc; add al, byte ptr [ebx + 0x28901e0]; xor eax, eax; ret; 
0x000b94dc: inc eax; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00189859: inc eax; pop eax; ret; 
0x000c294c: inc eax; pop ebp; pop ebx; pop esi; pop edi; ret; 
0x0003bbf3: inc eax; pop ebx; pop esi; pop edi; fsubp st(1); ret; 
0x0003bb81: inc eax; pop ebx; pop esi; pop edi; ret; 
0x00121f33: inc eax; pop ebx; pop esi; ret; 
0x000bb603: inc eax; pop edi; pop esi; pop ebx; ret; 
0x000c2197: inc eax; pop edi; pop esi; ret; 
0x000aa2cc: inc eax; pop edi; ret; 
0x001aba15: inc eax; pop es; pop edi; ret; 
0x001897e9: inc eax; pop esp; ret; 
0x00059c65: inc eax; push cs; add byte ptr [ebx - 0x364743], cl; dec dword ptr [ebp - 0x6877779]; call dword ptr [eax - 0x73]; 
0x001abb26: inc eax; push cs; pop edi; ret; 
0x000c3de2: inc eax; push dword ptr [eax]; call edi; 
0x00136fec: inc eax; push dword ptr [esp + 0x20]; push esi; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x00024ee7: inc eax; push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x00024e7d: inc eax; push dword ptr [esp + 0x40]; call ecx; 
0x00024e26: inc eax; push dword ptr [esp + 0x40]; call esi; 
0x000c3351: inc eax; push eax; push dword ptr [edi]; call ebx; 
0x00083106: inc eax; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x001897d9: inc eax; push eax; ret; 
0x000c6cd2: inc eax; push ebp; call esi; 
0x0016ef79: inc eax; push ebp; push eax; call dword ptr [ecx + 8]; 
0x0012727e: inc eax; push edx; stc; call dword ptr [eax + 0x55]; 
0x001056f8: inc eax; push es; adc byte ptr [ebx - 0x75], dh; pop eax; add al, 0xf7; ret; 
0x001abac6: inc eax; push es; pop edi; ret; 
0x00032bb1: inc eax; push esp; ret; 
0x00034045: inc eax; ret; 
0x000a360c: inc eax; sar edi, cl; dec dword ptr [ebp - 0x666e77d]; call dword ptr [eax - 0x73]; 
0x0008e745: inc eax; sbb al, 0x65; mov dword ptr [0x7c], eax; ret; 
0x0013c00c: inc eax; sbb al, 0x6a; add eax, 0x6509c8c1; xor eax, dword ptr [0x18]; push esi; call eax; 
0x0008de65: inc eax; sbb al, 0x83; les esp, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x0015e3c1: inc eax; sbb al, 0x83; ret 0x8501; 
0x00177099: inc eax; sbb al, 0x85; sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x55; call eax; 
0x0016ebc7: inc eax; sbb al, 0x85; sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x56; call eax; 
0x0016ffb5: inc eax; sbb al, 0x85; sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x57; call eax; 
0x000a18fc: inc eax; sbb al, bh; inc dword ptr [ebx - 0x7972f33c]; lodsb al, byte ptr [esi]; sbb al, 0xe6; call dword ptr [eax + 0x57]; 
0x000e8e65: inc eax; sbb byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0014bfed: inc eax; sbb byte ptr [ebp + 0x5b0d75c0], al; pop esi; pop edi; ret; 
0x00138b23: inc eax; sbb byte ptr [ebp - 0x7c088a40], al; ret 0x8b18; 
0x00139b7b: inc eax; sbb byte ptr [ebx - 0x137c5383], cl; add al, 0x6a; add eax, 0x55f3978d; stc; call dword ptr [edx + 0x50]; 
0x0003b9a9: inc eax; shr eax, 0x1f; ret; 
0x001490e2: inc eax; stc; call dword ptr [eax + 0x56]; 
0x000948b8: inc eax; stc; call dword ptr [eax + 0x6a]; 
0x0009401d: inc eax; stc; call dword ptr [eax - 0x18]; 
0x000957d0: inc eax; stc; call dword ptr [eax - 0x73]; 
0x001747f5: inc eax; sub al, 0x83; ror byte ptr [eax], 0x89; inc esp; and al, 4; jmp edx; 
0x00034544: inc eax; sub al, 0x8b; add al, 0x90; ret; 
0x00034605: inc eax; sub al, 0x8b; test byte ptr [eax + 0x200], dl; ret; 
0x000c2ed5: inc eax; sub eax, dword ptr [esp + 4]; ret; 
0x000883ff: inc eax; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x000c1fea: inc eax; test ecx, 0xff0000; je 0xc1ff4; inc eax; pop edi; ret; 
0x000a4a63: inc eax; xchg ebp, eax; stc; call dword ptr [eax - 0x18]; 
0x00040972: inc eax; xor al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00066c49: inc eax; xor al, 0xf6; inc eax; jmp dword ptr [eax]; 
0x000347ad: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x1000; ret; 
0x0003478d: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x100; ret; 
0x0003476d: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x2000; ret; 
0x000346ed: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x200; ret; 
0x0003472d: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x4000; ret; 
0x0003468d: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x400; ret; 
0x0003470d: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x8000; ret; 
0x000346cd: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x800; ret; 
0x000345cd: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 1; ret; 
0x000346ad: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 2; ret; 
0x0003474d: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 4; ret; 
0x0003466d: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 8; ret; 
0x0017a8e5: inc eax; xor byte ptr [ebx + 0x448908c0], al; and al, 4; jmp edx; 
0x000fd2e5: inc eax; xor byte ptr [ecx], bh; ret; 
0x000907d3: inc eax; xor eax, eax; mov dword ptr [ecx + 4], edx; ret; 
0x000980aa: inc eax; xor eax, eax; ret; 
0x000e9ac4: inc ebp; aam 0x56; call eax; 
0x000af551: inc ebp; aam 0x83; ret 0x3901; 
0x000aef82: inc ebp; aam 0x83; ret 0xf01; 
0x00027906: inc ebp; aam 0x89; ret; 
0x000d3142: inc ebp; aam 1; ret 0x1689; 
0x000d2f08: inc ebp; aam 1; ret 0x5389; 
0x000f1974: inc ebp; adc byte ptr [ecx - 0x46b73], cl; dec dword ptr [ecx - 0x4737b]; jmp dword ptr [ebp - 0x75]; 
0x0012ba8f: inc ebp; adc byte ptr [ecx - 0x49b7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00032be5: inc ebp; adc byte ptr [ecx - 0xe37b], cl; jmp dword ptr [ebp - 0x5f]; 
0x001972ab: inc ebp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000795b7: inc ebp; add al, 0x29; fidiv word ptr [ebx + eax*2 - 0x75]; pop ebp; or byte ptr [ecx], bh; ret; 
0x00100aa1: inc ebp; add al, 0x83; ret; 
0x0009534a: inc ebp; add al, 0xe9; mov al, byte ptr [0xf7fffffd]; ret 0; 
0x000eb3cd: inc ebp; add al, byte ptr [eax - 0x6bf0a206]; ret 0xb60f; 
0x000eb45c: inc ebp; add bl, byte ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x000dc4ce: inc ebp; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edi], cl; inc ebx; ret 0xe883; 
0x000e7375: inc ebp; add byte ptr [eax], al; add cl, ch; and edi, 0xffffffff; call dword ptr [ebx + 0x57]; 
0x001269b9: inc ebp; add byte ptr [eax], al; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00126a4b: inc ebp; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x00126b74: inc ebp; add byte ptr [eax], al; push eax; call 0x126c90; add esp, 0x1c; ret; 
0x000ec257: inc ebp; add byte ptr [ebp + 0x4f850fc9], al; add eax, dword ptr [eax]; add byte ptr [ecx], bh; ret; 
0x000a74b6: inc ebp; add byte ptr [ecx + 0x5f5e5bc8], cl; pop ebp; ret; 
0x00056012: inc ebp; add byte ptr [ecx - 0x76d7dbbc], cl; ret 0xc483; 
0x000297c1: inc ebp; add dh, dh; ret; 
0x0008498f: inc ebp; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x001a9b4e: inc ebp; add eax, 0xf; ret; 
0x001a7e5e: inc ebp; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00128b6b: inc ebp; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00197bd4: inc ebp; and bh, bh; inc dword ptr [ecx + 0x43c58c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001486d5: inc ebp; and byte ptr [ecx - 0x4477b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0002ac86: inc ebp; and byte ptr [ecx - 0x9c7dbbc], cl; ret 0x7501; 
0x00146a07: inc ebp; call 0x109ff6; jmp dword ptr [esi - 0x70]; 
0x00039f07: inc ebp; call 0x2b6f6; jmp dword ptr [esi - 0x70]; 
0x0010ace0: inc ebp; clc; dec dword ptr [edi]; mov dh, 0x45; sbb al, 0x89; ret 0xeac0; 
0x0007f731: inc ebp; cli; jmp dword ptr [esi - 0x70]; 
0x00177612: inc ebp; cmp al, 0x57; call dword ptr [eax + 0x10]; 
0x0007d7f1: inc ebp; cmp byte ptr [ecx], bh; ret; 
0x00156777: inc ebp; dec esp; bnd jmp dword ptr [ebp - 0x75]; 
0x00128880: inc ebp; fadd dword ptr [ebx - 0x2776e73c]; pop ebx; ret; 
0x00144f41: inc ebp; fadd qword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx - 0x837b], cl; call dword ptr [eax + 0x6a]; 
0x001892dd: inc ebp; fadd st(7), st(0); inc esp; ret; 
0x00027988: inc ebp; fmul qword ptr [ebp - 0x218f137d]; call dword ptr [eax - 0x73]; 
0x00133bd5: inc ebp; in al, 0x8d; xchg eax, edi; push esp; stc; call dword ptr [eax - 0x18]; 
0x00191409: inc ebp; in eax, dx; call dword ptr [eax + 0x6a]; 
0x0009b03c: inc ebp; inc dword ptr [ebx - 0x69f00208]; ret; 
0x001933ed: inc ebp; jge 0x1933f4; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x000936ff: inc ebp; jmp dword ptr [ecx]; 
0x000af26f: inc ebp; les eax, ptr [ecx]; ret; 
0x000353bf: inc ebp; les edi, ptr [ecx]; ret 0x830f; 
0x0008632a: inc ebp; les edi, ptr [ecx]; ret 0x850f; 
0x0009e47d: inc ebp; mov ah, 0x89; ret 0x458b; 
0x000355a3: inc ebp; mov ah, 0x8d; inc ecx; sbb al, 0x89; ret 0x25; 
0x0006c7c5: inc ebp; mov ah, 0xff; dec dword ptr [ebx - 0x5d343]; dec dword ptr [ecx + 0x29f829f0]; ret; 
0x000278fc: inc ebp; mov ah, 3; add byte ptr [eax], al; add byte ptr [ecx + 0x458bc445], cl; aam 0x89; ret; 
0x00035371: inc ebp; mov al, 0x39; ret 0x820f; 
0x00035d42: inc ebp; mov al, 0x83; in al, dx; or al, 0x8d; sbb byte ptr [ebx + 0x2e], 0xf9; call dword ptr [eax - 0x18]; 
0x00035f21: inc ebp; mov al, 0x8d; cmp byte ptr [eax + 0x29], 0xf9; call dword ptr [eax - 0x73]; 
0x001336d1: inc ebp; mov bh, 0x10; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x000d2da8: inc ebp; mov byte ptr [edi], cl; mov dh, 0x14; or dh, dh; ret 0xf04; 
0x000d8827: inc ebp; mov eax, 0xb58bfff5; ror cl, 0xff; dec dword ptr [ebp - 0x661f37a]; call dword ptr [eax - 0x73]; 
0x0005dcc2: inc ebp; mov eax, 0xfff87ee9; call dword ptr [eax + 0x52]; 
0x0009a42a: inc ebp; mov ecx, esi; mov ebx, dword ptr [esp + 0xa0]; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x0008256e: inc ebp; mov esp, 0x5250d029; push edi; call dword ptr [ebx + 0x38]; 
0x00137d26: inc ebp; mov esp, 0x5585808d; stc; call dword ptr [eax - 1]; 
0x00137ce6: inc ebp; mov esp, 0x55a4808d; stc; call dword ptr [eax - 1]; 
0x000eae64: inc ebp; mov esp, 0x83c0458b; ror byte ptr [edi], 0x89; ret 0x25; 
0x000d2eaa: inc ebp; mov esp, 0xc0830a8b; add al, 0x83; ret 0x8904; 
0x00126f87: inc ebp; mov esp, 0xc483fff9; adc byte ptr [ebp + 0x3a840fc0], al; add eax, 0xec830000; or byte ptr [ebp - 0x6b3b57d], cl; call dword ptr [eax + 0x55]; 
0x0013bb72: inc ebp; mov word ptr [ecx - 0x11f73], cs; call dword ptr [ecx - 1]; 
0x001863c6: inc ebp; movsb byte ptr es:[edi], byte ptr [esi]; push dword ptr [ebp - 0x60]; push 0x28; push edi; call eax; 
0x0013d1f9: inc ebp; or al, 0x85; ror byte ptr [edi], 0x84; ret; 
0x000f0dd4: inc ebp; or al, 0x89; lea eax, [edx + edi*8 - 1]; dec dword ptr [ecx - 0x5bf7b]; jmp dword ptr [ebp - 0x5f]; 
0x00117bd1: inc ebp; or byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x000eb345: inc ebp; or byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0005bafa: inc ebp; or byte ptr [ecx], bh; ret; 
0x0006293b: inc ebp; or eax, 0x8901e683; ret; 
0x0018cdc5: inc ebp; or eax, 0xc6850f02; adc eax, dword ptr [eax]; add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x000f8f35: inc ebp; or eax, 0xd6850f02; adc eax, dword ptr [eax]; add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x000f5615: inc ebp; or eax, 0xf6850f02; adc eax, dword ptr [eax]; add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x00095927: inc ebp; out 0xf9, eax; dec dword ptr [ebp - 0x692937f]; call dword ptr [eax - 0x73]; 
0x001a6f2a: inc ebp; pop ebx; ret; 
0x0014dd67: inc ebp; pop esp; stc; call dword ptr [eax - 0x18]; 
0x0014dd67: inc ebp; pop esp; stc; call dword ptr [eax - 0x18]; jmp dword ptr [edx - 0x12]; 
0x00032bd1: inc ebp; ret 0x20; 
0x0009d6d4: inc ebp; ret 0x2ec3; 
0x000289df: inc ebp; ret 0x4489; 
0x00080af6: inc ebp; ret 0x4689; 
0x0013fa1b: inc ebp; ret 0x548b; 
0x00042eb4: inc ebp; ret 0x66c3; 
0x0008b3b2: inc ebp; ret 0x689; 
0x000907fa: inc ebp; ret 0x8dc3; 
0x000657c9: inc ebp; ret 0xc189; 
0x000a8b93: inc ebp; ret 0xc35b; 
0x000a84fc: inc ebp; ret 0xc483; 
0x0012f5b4: inc ebp; ret 0xd231; 
0x0007ca9c: inc ebp; ret 0xec83; 
0x00040584: inc ebp; ret; 
0x00025a37: inc ebp; ror byte ptr [ebp + 0x5e5bf465], 0x5f; pop ebp; ret; 
0x00042906: inc ebp; ror byte ptr [edi], 1; inc ebp; ret; 
0x0010abe7: inc ebp; sbb al, 0x89; ret 0xeac0; 
0x001486cc: inc ebp; sbb al, 0x89; test dword ptr [ebx + edi*8 + 0x458bffff], edi; and byte ptr [ecx - 0x4477b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00092a75: inc ebp; sbb byte ptr [ebx + 0x488b685e], cl; add al, 0x8b; adc byte ptr [eax + 0xf1], bh; call dword ptr gs:[0x10]; 
0x0017e462: inc ebp; sbb byte ptr [ecx - 0x9f7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000aef60: inc ebp; shr cl, 1; ret 0xffeb; 
0x000dc677: inc ebp; stc; call dword ptr [eax + 0x53]; 
0x000dcde6: inc ebp; stc; call dword ptr [eax + 0x56]; 
0x000c4583: inc ebp; stc; call dword ptr [eax - 0x18]; 
0x000c6dd2: inc ebp; stc; call dword ptr [eax - 0x18]; xchg ebp, eax; sal dh, cl; jmp dword ptr [esi - 0x70]; 
0x000effd7: inc ebp; std; inc dword ptr [ebx + 0x78310c4]; add dword ptr [ecx], eax; ret; 
0x0010a87c: inc ebp; sub al, 0x39; sal byte ptr [esi + ecx - 0x77], 1; ret 0xf189; 
0x0011440b: inc ebp; sub esp, 8; push ebp; push ecx; mov eax, dword ptr [esp + 0x18]; call eax; 
0x000981fa: inc ebp; test al, 1; je 0x98240; mov eax, 0xf0; mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x0010a891: inc ebp; xor byte ptr [ecx], bh; sal byte ptr [ebx + ecx - 0x77], 1; ret 0xf189; 
0x000a1590: inc ebx; adc al, 0; add byte ptr [eax], al; add byte ptr [ecx + 0x5a89405e], cl; or al, 0x89; ret 0xca83; 
0x00085196: inc ebx; adc al, 0x29; ror byte ptr [ecx + 0x8c48301], 1; xor eax, eax; pop ebx; ret; 
0x00136ed8: inc ebx; adc al, 0x31; rol byte ptr [ebp - 0x3db7f040], cl; add esp, 8; pop ebx; ret; 
0x001704a4: inc ebx; adc al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x000868d6: inc ebx; adc al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x000977f3: inc ebx; adc al, 0x83; ret; 
0x000892da: inc ebx; adc al, 0x8b; push ebx; adc byte ptr [ecx], bh; ret 0x2773; 
0x0016ee14: inc ebx; adc bh, bh; je 0x16ee3d; adc al, 0x56; call dword ptr [eax + 4]; 
0x00171640: inc ebx; adc byte ptr [ebp + 0x53890450], cl; adc bl, ch; ret; 
0x001715ca: inc ebx; adc byte ptr [ebx + 0x1b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00039fbb: inc ebx; adc byte ptr [ebx + 0x5e5b04c4], al; pop edi; pop ebp; ret; 
0x0005b5d5: inc ebx; adc byte ptr [ecx + 0xf5e5bf0], cl; mov dh, 0xc0; pop edi; ret; 
0x0016ef0d: inc ebx; adc byte ptr [edx], ch; push esi; call dword ptr [eax + 0x14]; 
0x00197494: inc ebx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00187748: inc ebx; add al, 0x2b; inc ebx; add al, 0x83; ret; 
0x0010c7f8: inc ebx; add al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00028e55: inc ebx; add al, 0x39; ret 0x9173; 
0x00156bbf: inc ebx; add al, 0x50; call edi; 
0x0016f60f: inc ebx; add al, 0x53; call dword ptr [eax + 0x10]; 
0x001754d4: inc ebx; add al, 0x56; push ebx; call dword ptr [eax + 0x24]; 
0x0016fb27: inc ebx; add al, 0x5a; push edi; push ebx; call dword ptr [eax + 0x14]; 
0x000a6e5c: inc ebx; add al, 0x5b; pop esi; pop edi; ret; 
0x0016faf1: inc ebx; add al, 0x83; in al, dx; or al, 0x53; call dword ptr [eax + 0x10]; 
0x00035122: inc ebx; add al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0016f72e: inc ebx; add al, 0x83; les edx, ptr [ebx + edx*2]; call dword ptr [eax + 0x10]; 
0x00030f92: inc ebx; add al, 0x83; ret; 
0x001089fa: inc ebx; add al, 0x89; ret 0xe283; 
0x0018679d: inc ebx; add al, 0x89; ret; 
0x00153094: inc ebx; add al, 0x8d; xchg dword ptr [ecx + eax*2 - 0xf], ebp; call dword ptr [ebx + 0x50]; 
0x0017146e: inc ebx; add al, 0xff; je 0x171497; sbb al, 0x53; call dword ptr [eax + 4]; 
0x001714bc: inc ebx; add al, 0xff; je 0x1714e5; sbb al, 0x53; call dword ptr [eax]; 
0x00141dd2: inc ebx; add al, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0014cf4f: inc ebx; add dword ptr [eax - 0x7bf0c406], eax; ret 1; 
0x00088a84: inc ebx; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dl, dl; stc; call dword ptr [eax - 0x18]; 
0x00092b28: inc ebx; add dword ptr [eax], eax; add byte ptr [ebp - 0x6c09579], cl; call dword ptr [eax - 0x73]; 
0x000292a8: inc ebx; add ecx, dword ptr [edi]; dec ecx; ret; 
0x0014b388: inc ebx; add esp, 0x1c; ret; 
0x00178723: inc ebx; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0008ea9c: inc ebx; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x000270ae: inc ebx; and byte ptr [ebp - 0x72178b40], al; xchg ah, ch; outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x0013b60a: inc ebx; and byte ptr [ebx - 0x137ce3ad], cl; add al, 0x83; ret; 
0x000a6d7e: inc ebx; and byte ptr [esi + ecx - 0x7d], dh; in al, dx; or byte ptr [ecx - 1], dl; jae 0xa6dad; call eax; 
0x00139ca9: inc ebx; and dword ptr [eax], eax; add byte ptr [ebx - 0xaff33c], al; jne 0x139c58; push ebx; call dword ptr [esi + 0x14]; 
0x0007f979: inc ebx; cli; jmp dword ptr [esi - 0x70]; 
0x000d0c49: inc ebx; idiv bh; dec dword ptr [ebx - 0x72d3db84]; xchg dword ptr [ebp + ebx*4 - 7], esp; call dword ptr [eax - 0x73]; 
0x00129f81: inc ebx; inc dword ptr [ebx + 0x287602f8]; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x000f0a5e: inc ebx; mov eax, 0x41; call dword ptr gs:[0x10]; 
0x000f0b0e: inc ebx; mov eax, 0xc7; call dword ptr gs:[0x10]; 
0x00130d5e: inc ebx; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x00130bce: inc ebx; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x136; call dword ptr gs:[0x10]; 
0x00130bee: inc ebx; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x56; call dword ptr gs:[0x10]; 
0x0010be8e: inc ebx; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x0010beae: inc ebx; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x0013088e: inc ebx; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x00130c0e: inc ebx; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x0012b82e: inc ebx; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x00114eee: inc ebx; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x001305ce: inc ebx; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x0012d9be: inc ebx; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x0016ef06: inc ebx; or al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x6a1043], cl; push esi; call dword ptr [eax + 0x14]; 
0x0017a9e1: inc ebx; or al, 0x57; call dword ptr [eax + 0x10]; 
0x0008f5ee: inc ebx; or al, 0x5b; pop esi; sub ecx, edx; lea eax, [ecx + eax + 0x4000]; ret; 
0x0014f01c: inc ebx; or al, 0x75; ret; 
0x0008dde3: inc ebx; or al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00186541: inc ebx; or al, 0x83; les ebp, ptr [eax]; pop ebx; ret; 
0x0008e1ea: inc ebx; or al, 0x83; les ebx, ptr [eax]; pop ebx; ret; 
0x0017057f: inc ebx; or al, 0x83; ret; 
0x0009cd21: inc ebx; or al, 0x89; fiadd dword ptr [ebp - 0x76e28b40]; ret; 
0x0008927f: inc ebx; or al, 0x89; ret 0x532b; 
0x00095687: inc ebx; or al, 0x89; ret 0xe281; 
0x00179c64: inc ebx; or bh, bh; je 0x179c8d; adc al, 0x53; call dword ptr [eax]; 
0x00179e63: inc ebx; or bh, bh; je 0x179e8c; sbb al, 0x53; call dword ptr [eax + 0xc]; 
0x0008e23c: inc ebx; or bh, bh; je 0x8e265; xor byte ptr [edx + 0x51], dl; call eax; 
0x000956c6: inc ebx; or byte ptr [eax + 0x5e5bc031], dl; pop edi; ret; 
0x00148aab: inc ebx; or byte ptr [eax + 0x92], bh; mov dword ptr [ebx + 0xc], 1; add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x0017a9bb: inc ebx; or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edx], ch; push edi; call dword ptr [eax + 0x14]; 
0x0009811d: inc ebx; or byte ptr [ebp - 0x7ced8b40], al; in al, dx; or al, 0xff; jae 0x9812d; call dword ptr [ebx]; 
0x0008dd09: inc ebx; or byte ptr [ebx + 0x10891851], cl; add esp, 4; pop ebx; pop esi; ret; 
0x000868d0: inc ebx; or byte ptr [ebx + 0x43891043], cl; adc al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0008e4f3: inc ebx; or byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret; 
0x00085c76: inc ebx; or byte ptr [ecx + 0x4538913], cl; add esp, 4; pop ebx; pop esi; ret; 
0x0008dd21: inc ebx; or byte ptr [ecx + 0x4c48308], cl; pop ebx; pop esi; ret; 
0x0010d754: inc ebx; or byte ptr [ecx], bh; ret 0x840f; 
0x00173a3c: inc ebx; or byte ptr [ecx], bh; ror byte ptr [edi], 1; dec edi; ret 0x8966; 
0x00027fe4: inc ebx; or byte ptr [edi], cl; mov bh, 0x85; dec eax; jo 0x27fe5; jmp dword ptr [esi - 0x77]; 
0x0010e3fe: inc ebx; pop ecx; mov eax, 0xbe; int 0x80; 
0x0018b374: inc ebx; push 0xffffffff; add esp, 4; pop ebx; pop esi; ret; 
0x00176b29: inc ebx; push eax; push dword ptr [ebx + 0x48]; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x00176b45: inc ebx; push eax; push dword ptr [esp + 0x30]; push esi; call dword ptr [eax + 4]; 
0x000421c6: inc ebx; push es; pop ebx; ret; 
0x000c0f33: inc ebx; rcl dword ptr [eax], 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008cba8: inc ebx; ret 0x4489; 
0x000eace6: inc ebx; ret 0xc383; 
0x001479ab: inc ebx; ret 0xc589; 
0x000372da: inc ebx; ret 0xcb29; 
0x0004d36b: inc ebx; ret 0xd029; 
0x000dc4d5: inc ebx; ret 0xe883; 
0x0003a466: inc ebx; ret 0xec83; 
0x00187047: inc ebx; ret 0xfa83; 
0x0003766e: inc ebx; ret; 
0x00140e19: inc ebx; ror byte ptr [ebx + 0x29302444], 1; fadd dword ptr [ecx]; ror byte ptr [edi], 1; inc edx; ret 0xd129; 
0x00140cc5: inc ebx; ror byte ptr [ebx + 0x29302444], 1; fmul dword ptr [ebx + 0x120245c]; ror byte ptr [edi], 1; inc edx; ret 0xd329; 
0x001452c1: inc ebx; sbb al, 0; add byte ptr [eax], al; add byte ptr [ebp + 0x44c74004], cl; ret 8; 
0x000af7b8: inc ebx; sbb al, 0x83; ret; 
0x0003c355: inc ebx; sbb byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x0008aeae: inc ebx; sbb byte ptr [ecx - 0x3fceefbd], cl; add esp, 4; pop ebx; pop esi; ret; 
0x00098aba: inc ebx; sbb dword ptr [ecx], esi; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x0004a0c8: inc ebx; shr byte ptr [ecx], 1; ret 0x8d52; 
0x00134c36: inc ebx; shr byte ptr [ecx], 1; ret 0xe801; 
0x000a87fe: inc ebx; shr byte ptr [ecx], 1; ret 0xf001; 
0x000a48b0: inc ebx; stc; call dword ptr [eax - 0x18]; 
0x000a6e25: inc ebx; sub byte ptr [ecx], al; jne 0xa6e00; sub esp, 0xc; push eax; call edx; 
0x0002835e: inc ebx; xor byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x0008164f: inc ebx; xor byte ptr [ecx + 0x30738906], cl; add esp, 4; pop ebx; pop esi; ret; 
0x0008eb7c: inc ebx; xor eax, eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x0012e41b: inc ebx; xor ebp, ebp; and esp, 0xfffffff0; sub esp, 0xc; push esi; call edx; 
0x0008f9d2: inc ecx; adc al, 0x39; ret 0x1074; 
0x00031a7c: inc ecx; adc al, 0x39; ret 0x4d0f; 
0x00086be6: inc ecx; adc byte ptr [ebx], dl; push ecx; adc al, 0xeb; ret; 
0x00087076: inc ecx; adc byte ptr [ecx + 0x4538903], cl; xor edx, edx; mov eax, edx; pop ebx; ret; 
0x0009cf52: inc ecx; adc byte ptr [ecx + 0x5e5b104e], cl; ret; 
0x00082ca7: inc ecx; adc byte ptr [ecx - 0x9ec74c6], cl; ret 0x7502; 
0x00055d67: inc ecx; add al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0019769b: inc ecx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000b5ac6: inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; pop edi; ret; 
0x000b5c06: inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; ret; 
0x000b16f6: inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edi; pop edi; ret; 
0x000b1826: inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x0002fddc: inc ecx; add al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0005ad2e: inc ecx; add byte ptr [eax - 0x73], dl; and byte ptr [edi + 0x30], 0xf9; call dword ptr [eax - 0x18]; 
0x000f0a61: inc ecx; add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x000fb290: inc ecx; add byte ptr [esi + ebp + 0x31], dh; rol byte ptr [ecx - 0x52053106], 0x1b; setne al; ret; 
0x000b17f7: inc ecx; add cl, byte ptr [eax - 0x2f76fdbe]; ret; 
0x000bfe3a: inc ecx; add cl, byte ptr [eax - 0x776fdbe]; pop ebx; pop edi; ret; 
0x000b16d7: inc ecx; add cl, byte ptr [eax - 0x776fdbe]; pop edi; ret; 
0x000fbaf9: inc ecx; add dword ptr [ebx + 0x5e], ebx; ret; 
0x000ba3eb: inc ecx; add eax, 0x42130f66; add eax, 0x5f0c428d; ret; 
0x000bff5e: inc ecx; add eax, 0x42130f66; add eax, 0x5f5bf889; ret; 
0x000b5ae5: inc ecx; add ecx, dword ptr [ecx + 0x428d0342]; push es; pop edi; ret; 
0x000b5c15: inc ecx; add ecx, dword ptr [ecx + 0x428d0342]; push es; ret; 
0x000b1835: inc ecx; add ecx, dword ptr [ecx - 0x2f76fcbe]; ret; 
0x000bfea8: inc ecx; add ecx, dword ptr [ecx - 0x776fcbe]; pop ebx; pop edi; ret; 
0x000b1705: inc ecx; add ecx, dword ptr [ecx - 0x776fcbe]; pop edi; ret; 
0x000a87f5: inc ecx; add esi, eax; add al, 0xe; cmp eax, 0x430ff839; shr byte ptr [ecx], 1; ret 0xf001; 
0x001145a7: inc ecx; add esp, 0x14; pop ebx; pop esi; ret; 
0x00031a71: inc ecx; and byte ptr [ecx], bh; ret 0x4c0f; 
0x00031d2b: inc ecx; and eax, dword ptr [eax]; add byte ptr [ebx - 0x1d36b], cl; dec dword ptr [ebp - 0x68ccb7e]; call dword ptr [eax - 0x73]; 
0x000a95b7: inc ecx; call 0xc24ea5bc; ret; 
0x000a3896: inc ecx; cmp byte ptr [ecx + 0x39102444], cl; ret 0x840f; 
0x0003147b: inc ecx; dec dword ptr [ecx - 0x1eb6b]; dec dword ptr [ecx - 0x1d77b]; jmp dword ptr [ecx]; 
0x0012fb18: inc ecx; dec ebp; push esi; push ebx; call dword ptr gs:[0x10]; 
0x00111da4: inc ecx; dec ecx; stc; call dword ptr [eax - 0x18]; 
0x00111da4: inc ecx; dec ecx; stc; call dword ptr [eax - 0x18]; ret 0xf222; 
0x000c2bde: inc ecx; inc edx; test al, al; jne 0xc2bd8; xor eax, eax; ret; 
0x000f0b0b: inc ecx; inc esp; inc ebx; mov eax, 0xc7; call dword ptr gs:[0x10]; 
0x00153099: inc ecx; int1; call dword ptr [ebx + 0x50]; 
0x000ab501: inc ecx; jbe 0xab514; cmove eax, edx; ret; 
0x000ac471: inc ecx; jbe 0xac484; cmove eax, edx; ret; 
0x000ac641: inc ecx; jbe 0xac654; cmove eax, edx; ret; 
0x000a1b1e: inc ecx; jmp dword ptr [ecx]; 
0x000b0e89: inc ecx; jmp dword ptr [esi + 0xf]; 
0x000a9571: inc ecx; jne 0xa9576; lea edx, [edx - 0x17bf34]; cmove eax, edx; ret; 
0x000a95b1: inc ecx; jne 0xa95b6; lea edx, [edx - 0x17bea4]; cmove eax, edx; ret; 
0x000aa121: inc ecx; jne 0xaa126; lea edx, [edx - 0x17c804]; cmove eax, edx; ret; 
0x000ab4d1: inc ecx; jne 0xab4d6; lea edx, [edx - 0x17c2d4]; cmove eax, edx; ret; 
0x000ac341: inc ecx; jne 0xac346; lea edx, [edx - 0x17dec4]; cmove eax, edx; ret; 
0x000ac3c1: inc ecx; jne 0xac3c6; lea edx, [edx - 0x18ed84]; cmove eax, edx; ret; 
0x000c5bd1: inc ecx; jne 0xc5bd6; cmove eax, edx; ret; 
0x000ac441: inc ecx; jnp 0xac448; cmove eax, edx; ret; 
0x000c4d51: inc ecx; jnp 0xc4d58; cmove eax, edx; ret; 
0x000c4db1: inc ecx; jnp 0xc4db8; cmove eax, edx; ret; 
0x000c5da1: inc ecx; jnp 0xc5da8; cmove eax, edx; ret; 
0x000c6ab1: inc ecx; jnp 0xc6ab8; cmove eax, edx; ret; 
0x0014c1c1: inc ecx; js 0x14c1af; ret 0x768d; 
0x0019d071: inc ecx; lock add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000981fe: inc ecx; mov eax, 0xf0; mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x00060fd8: inc ecx; mov word ptr [edx], ss; add byte ptr [ecx + 0x1dde38c3], al; add byte ptr [ebx + 0x1a0c83], cl; add byte ptr [ebp + 0x314574c0], al; jmp dword ptr [esi - 0x70]; 
0x00086819: inc ecx; or al, 0x31; rol byte ptr [ebp - 0x3d6af040], cl; mov eax, edx; ret; 
0x0017ca3e: inc ecx; or al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [ecx + 0x14], edx; ret; 
0x000b8e8b: inc ecx; or byte ptr [eax - 0x2f76f7be], cl; ret; 
0x000bfedc: inc ecx; or byte ptr [eax - 0x776f7be], cl; pop ebx; pop edi; ret; 
0x000b8d2b: inc ecx; or byte ptr [eax - 0x776f7be], cl; pop edi; ret; 
0x000c6276: inc ecx; or byte ptr [ebx + 0x418901c0], al; or byte ptr [edi], cl; nop; ret 0x4b8b; 
0x000b8eeb: inc ecx; or byte ptr [ecx - 0x2f76f7be], cl; ret; 
0x000bff3c: inc ecx; or byte ptr [ecx - 0x776f7be], cl; pop ebx; pop edi; ret; 
0x000b8d8b: inc ecx; or byte ptr [ecx - 0x776f7be], cl; pop edi; ret; 
0x000c627c: inc ecx; or byte ptr [edi], cl; nop; ret 0x4b8b; 
0x000ba2ba: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; lea eax, [edx + 0xf]; pop edi; ret; 
0x000ba5ab: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; lea eax, [edx + 0xf]; ret; 
0x000b8c9a: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; mov eax, edi; pop edi; ret; 
0x000b8f6b: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; mov eax, edx; ret; 
0x000b5c35: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000b1855: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000b5c95: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000b18b5: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000b5c56: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000b1876: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x00130d5c: inc ecx; out dx, eax; inc ebx; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x00128d2b: inc ecx; pop es; add byte ptr [eax], al; add esp, 0x10; add esp, 0xc; ret; 
0x000ba3ab: inc ecx; pop es; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x000ba50b: inc ecx; pop es; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000b8d6b: inc ecx; pop es; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000b8ecb: inc ecx; pop es; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000ba42b: inc ecx; pop es; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000ba58b: inc ecx; pop es; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b8deb: inc ecx; pop es; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000b8f4b: inc ecx; pop es; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000b5c75: inc ecx; pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000b1895: inc ecx; pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000b3767: inc ecx; pop es; pop ebx; ret; 
0x001aaf11: inc ecx; pop es; ret; 
0x001aaf61: inc ecx; push cs; ret; 
0x000ba40b: inc ecx; push es; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000ba56b: inc ecx; push es; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b8dcb: inc ecx; push es; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000b8f2b: inc ecx; push es; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000b3757: inc ecx; push es; pop ebx; ret; 
0x001aaf01: inc ecx; push es; ret; 
0x000355a6: inc ecx; sbb al, 0x89; ret 0x25; 
0x00031a79: inc ecx; sbb byte ptr [ebx], al; inc ecx; adc al, 0x39; ret 0x4d0f; 
0x0015d374: inc ecx; stc; call dword ptr [eax + 0x53]; 
0x0009d5c1: inc ecx; stc; call dword ptr [eax - 0x18]; 
0x0009ebb7: inc ecx; stc; call dword ptr [eax - 0x73]; 
0x00169b6b: inc ecx; std; jmp dword ptr [esi - 0x70]; 
0x0002f585: inc ecx; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x001366db: inc edi; adc al, 0x29; ret 0x478b; 
0x00096cd0: inc edi; adc al, 0x29; ret; 
0x0008fd88: inc edi; adc al, 0x39; ret 0x1074; 
0x0011b835: inc edi; adc al, 0x50; push 1; push dword ptr [esp + 0x30]; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x0011bab1: inc edi; adc al, 0x50; push 5; push dword ptr [esp + 0x30]; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x000811cf: inc edi; adc al, 0x5e; pop edi; jmp eax; 
0x000bb21f: inc edi; adc al, 0x5f; pop esi; pop ebx; ret; 
0x00151985: inc edi; adc al, 0x89; ret 0xc985; 
0x0003a2f8: inc edi; adc al, 0x89; ret; 
0x000bb1e1: inc edi; adc bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x000bb1a9: inc edi; adc byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0008131f: inc edi; adc byte ptr [esi + 0x5f], bl; jmp eax; 
0x000bb1bf: inc edi; adc dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x000bb1ff: inc edi; adc ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x000a0eff: inc edi; add al, 0; add byte ptr [eax], al; add byte ptr [ebp + 0x39b774d2], al; ret 0xb374; 
0x001970a4: inc edi; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000792a7: inc edi; add al, 0x29; fnsave dword ptr [ebx + eax*2 - 0x75]; pop edi; or byte ptr [ecx], bh; ret; 
0x0005ffd7: inc edi; add al, 0x39; ret 0x4d0f; 
0x00179072: inc edi; add al, 0x57; call dword ptr [eax + 0x10]; 
0x000bb045: inc edi; add al, 0x5f; pop esi; pop ebx; ret; 
0x001a9ed1: inc edi; add al, 0x5f; ret; 
0x00170903: inc edi; add al, 0x83; in eax, 0xfc; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x00189435: inc edi; add al, 0x8d; push 0x24448909; and al, 0x89; ret; 
0x001217ed: inc edi; add al, 0xb; dec ebx; add byte ptr [eax], al; add bl, ch; ret; 
0x00133519: inc edi; add al, 0xe; dec ebx; add byte ptr [eax], al; add bl, ch; ret; 
0x0003a32f: inc edi; add al, 0xf; scasd eax, dword ptr es:[edi]; ret 0x7c8b; 
0x00054198: inc edi; add al, 0xf; xchg edx, eax; ret; 
0x00151fd5: inc edi; add al, byte ptr [eax]; add byte ptr [ebp - 0x6a3827e], cl; call dword ptr [eax - 0x73]; 
0x000bb017: inc edi; add bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x0017d30f: inc edi; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x00134786: inc edi; add byte ptr [eax], al; add word ptr [eax + ebx*2], 1; pop ebx; ret; 
0x0016960d: inc edi; add dword ptr [ebp + 0x34890177], ecx; and al, 0x84; ror byte ptr [edi], 0x95; ret 0x3a3c; 
0x000bb005: inc edi; add dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x0009fdf8: inc edi; add ebx, 1; mov eax, 0x116; call dword ptr gs:[0x10]; 
0x000bb02d: inc edi; add ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x0014adc3: inc edi; add esp, 0x118; pop ebx; ret; 
0x001149d8: inc edi; add esp, 0x14; pop ebx; pop esi; ret; 
0x0002cef6: inc edi; and byte ptr [ecx - 0x9c3dbbc], cl; ret 0x7501; 
0x0002a156: inc edi; and byte ptr [ecx - 0x9d3dbbc], cl; ret 0x7501; 
0x000bb3b3: inc edi; and byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0016c673: inc edi; arpl cx, di; call dword ptr [eax + 0x6a]; 
0x0016c773: inc edi; arpl cx, di; call dword ptr [eax - 0x18]; 
0x00124538: inc edi; call eax; 
0x000b9d63: inc edi; call ptr [edi + 0x5e]; pop ebx; ret; 
0x001aa313: inc edi; clc; pop edi; ret; 
0x001aa33c: inc edi; cld; pop edi; ret; 
0x0007f509: inc edi; cli; jmp dword ptr [esi - 0x70]; 
0x001aa3b1: inc edi; cli; pop edi; ret; 
0x001aa371: inc edi; cmc; pop edi; ret; 
0x0013f655: inc edi; cmp ebp, esi; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00184d55: inc edi; fcos; jmp dword ptr [esi - 0x70]; 
0x001aa2e9: inc edi; hlt; pop edi; ret; 
0x00043abf: inc edi; inc byte ptr [ebx - 0x6bf00220]; ret 0xff83; 
0x000bb602: inc edi; inc eax; pop edi; pop esi; pop ebx; ret; 
0x0010b01a: inc edi; inc esi; adc al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x001aa341: inc edi; int1; pop edi; ret; 
0x000bb193: inc edi; maxps xmm3, xmmword ptr [esi + 0x5b]; ret; 
0x00119985: inc edi; mov ch, 0xff; jmp dword ptr [ebp - 0x75]; 
0x00177455: inc edi; mov ebp, 0xc483ffea; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00127285: inc edi; mov ecx, 0xc483fff9; adc byte ptr [ebp - 0x387bf040], al; or al, 0; add byte ptr [ebp - 0x6ad557d], cl; call dword ptr [ecx + 0x51]; 
0x000bb12f: inc edi; or al, 0x5f; pop esi; pop ebx; ret; 
0x001a9f41: inc edi; or al, 0x5f; ret; 
0x00115225: inc edi; or al, 0x89; inc esp; and al, 0x28; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000f5a76: inc edi; or al, 0xe9; ret; 
0x000bb0f1: inc edi; or bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x00171079: inc edi; or byte ptr [ebp - 1], dl; jbe 0x17108b; push edi; call dword ptr [eax + 8]; 
0x001710bc: inc edi; or byte ptr [ebp - 1], dl; jbe 0x1710ce; push edi; call dword ptr [eax + 0x10]; 
0x00126e6e: inc edi; or byte ptr [ebx - 0x7cb3dbac], cl; ret; 
0x000f239d: inc edi; or byte ptr [ecx], bh; ret 0x830f; 
0x0006f45d: inc edi; or byte ptr [ecx], bh; ret 0x840f; 
0x0010cbe7: inc edi; or byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x000bb0b9: inc edi; or byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000bb0cf: inc edi; or dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x000bb10f: inc edi; or ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x000bb393: inc edi; pop ds; pop edi; pop esi; pop ebx; ret; 
0x001ac178: inc edi; pop edi; pop esi; pop ebx; ret; 
0x001aa351: inc edi; pop edi; ret; 
0x000bb09b: inc edi; pop es; pop edi; pop esi; pop ebx; ret; 
0x001a9cfe: inc edi; pop es; pop edi; ret; 
0x000bb283: inc edi; pop ss; pop edi; pop esi; pop ebx; ret; 
0x000bb173: inc edi; push cs; pop edi; pop esi; pop ebx; ret; 
0x001a9f61: inc edi; push cs; pop edi; ret; 
0x000bb373: inc edi; push ds; pop edi; pop esi; pop ebx; ret; 
0x00177086: inc edi; push eax; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x000b9dd7: inc edi; push es; pop edi; pop esi; pop ebx; ret; 
0x001a9ef1: inc edi; push es; pop edi; ret; 
0x000bb263: inc edi; push ss; pop edi; pop esi; pop ebx; ret; 
0x001479db: inc edi; rcl byte ptr [edx + 0x6a]; or dword ptr [ebx - 0x72dfdba4], ecx; cmp dword ptr [edi], 0x5a; stc; call dword ptr [eax + 0x51]; 
0x00099b80: inc edi; ret 0x2ec3; 
0x00094f39: inc edi; ret 0x4489; 
0x000a62a0: inc edi; ret 0x508d; 
0x000afcc2: inc edi; ret 0x5350; 
0x0011fea2: inc edi; ret 0x548b; 
0x0011fe4a: inc edi; ret 0x66c3; 
0x00094f7b: inc edi; ret 0x72e9; 
0x000a0af7: inc edi; ret 0x8188; 
0x0009a454: inc edi; ret 0x948b; 
0x000a4060: inc edi; ret 0xc083; 
0x00152bcf: inc edi; ret 0xe; 
0x000e8bf5: inc edi; sar byte ptr [eax + 0xdc], 1; call dword ptr gs:[0x10]; 
0x000bb339: inc edi; sbb al, 0x5f; pop esi; pop ebx; ret; 
0x0013a382: inc edi; sbb al, 0x89; ret 0x572b; 
0x0010a02a: inc edi; sbb al, 0x89; ret 0xc085; 
0x0013a02e: inc edi; sbb al, 0x89; ret 0xc985; 
0x000bb2eb: inc edi; sbb bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x001395a6: inc edi; sbb byte ptr [ebp + 0x60840fc9], al; or byte ptr [eax], al; add byte ptr [ebx + 0x39101e5c], cl; ret 0x820f; 
0x00136aba: inc edi; sbb byte ptr [ecx + 0x29c529da], cl; ret 0x6c01; 
0x000bb2a3: inc edi; sbb byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00027513: inc edi; sbb byte ptr [edi], cl; mov bh, 0x81; cmp byte ptr [eax - 7], dh; jmp dword ptr [esi - 0x77]; 
0x00142ed5: inc edi; sbb ch, bh; jmp dword ptr [ebp - 0x5f]; 
0x000bb2c9: inc edi; sbb dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x000bb319: inc edi; sbb ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x000fad21: inc edi; stc; call dword ptr [eax + 0x6a]; 
0x000eb5ce: inc edi; stc; call dword ptr [eax - 0x18]; 
0x000f7d7a: inc edi; stc; call dword ptr [eax - 0x18]; in eax, dx; ret 0xfff3; 
0x000f06f2: inc edi; stc; call dword ptr [eax - 0x73]; 
0x000fad5c: inc edi; stc; call dword ptr [ebx + 0x50]; 
0x001aa3a1: inc edi; stc; pop edi; ret; 
0x000606a6: inc edi; std; call dword ptr [ebp + 0x50]; 
0x001aa3d1: inc edi; std; pop edi; ret; 
0x001aa3c1: inc edi; sti; pop edi; ret; 
0x000a0755: inc edi; sub bh, al; dec dword ptr [ebx - 0x76e3dbbc]; add al, 0x24; call esi; 
0x00108daa: inc edi; sub byte ptr [edi], cl; mov dh, 0x46; add al, 0x89; ret 0xe283; 
0x001340db: inc edi; test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x001a9313: inc edi; test dword ptr [edi], 0x29f756b6; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x000b788e: inc edx; adc byte ptr [edi + 0x5b], bl; ret; 
0x0012e836: inc edx; add al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0011563f: inc edx; add al, 0; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x0019754b: inc edx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0017c7ba: inc edx; add al, 0x51; push edx; call dword ptr [eax + 0x24]; 
0x0017bd0a: inc edx; add al, 0x51; push edx; call dword ptr [eax + 4]; 
0x000abeeb: inc edx; add al, 0x5b; pop esi; ret; 
0x000b77e2: inc edx; add al, 0x5f; pop ebx; ret; 
0x000b5abb: inc edx; add al, 0x5f; ret; 
0x000ba4e8: inc edx; add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000b8ea8: inc edx; add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x00071ae0: inc edx; add al, 0x83; ret 0x8304; 
0x000c6e21: inc edx; add al, 0x83; ret 0x8504; 
0x001283b2: inc edx; add al, 0x85; sal byte ptr [edx + eax - 0x77], 0x10; ret; 
0x000bfe6b: inc edx; add al, 0x89; clc; pop ebx; pop edi; ret; 
0x000b16e8: inc edx; add al, 0x89; clc; pop edi; ret; 
0x0017c701: inc edx; add al, 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x20]; 
0x0017c6dd: inc edx; add al, 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x24]; 
0x001713ed: inc edx; add al, 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x00171411: inc edx; add al, 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x00082ca4: inc edx; add al, 0x89; inc ecx; adc byte ptr [ecx - 0x9ec74c6], cl; ret 0x7502; 
0x000abdeb: inc edx; add al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000b8e88: inc edx; add al, 0x8a; inc ecx; or byte ptr [eax - 0x2f76f7be], cl; ret; 
0x000b8d28: inc edx; add al, 0x8a; inc ecx; or byte ptr [eax - 0x776f7be], cl; pop edi; ret; 
0x000b8ee8: inc edx; add al, 0x8b; inc ecx; or byte ptr [ecx - 0x2f76f7be], cl; ret; 
0x000b8d88: inc edx; add al, 0x8b; inc ecx; or byte ptr [ecx - 0x776f7be], cl; pop edi; ret; 
0x000a0f41: inc edx; add al, 0x8b; push edx; or byte ptr [ecx], al; lds edi, ptr [ecx]; ret; 
0x0008c929: inc edx; add al, 0x8d; dec eax; xor byte ptr [ebx - 0x3f7acfc0], cl; jne 0x8c948; ret; 
0x000b5ab8: inc edx; add al, 0x8d; inc edx; add al, 0x5f; ret; 
0x000ba269: inc edx; add al, 0x8d; inc edx; pop es; pop edi; ret; 
0x000ba4b8: inc edx; add al, 0x8d; inc edx; pop es; ret; 
0x0015df83: inc edx; add al, 0xf; test byte ptr [ebp - 0x7d000000], cl; ret 0x8014; 
0x00095905: inc edx; add al, 1; add esp, 0xc; ret; 
0x0005abf1: inc edx; add al, 1; add esp, 4; pop ebx; pop esi; ret; 
0x000abe06: inc edx; add al, byte ptr [eax]; pop ebx; pop esi; ret; 
0x000b38da: inc edx; add cl, byte ptr [ecx + 0x3eb83d0]; lea ecx, [edx + 3]; jne 0xb3801; pop ebx; ret; 
0x00141576: inc edx; add dword ptr [eax + 2], edi; ret; 
0x000abeb4: inc edx; add dword ptr [ebx + 0x5e], ebx; ret; 
0x000fa8db: inc edx; add dword ptr [ebx - 0x3f7bfe3e], eax; jne 0xfa8b1; xor eax, eax; ret; 
0x000fdfd5: inc edx; add dword ptr [esi + ecx - 0x77], esi; ret; 
0x000ba3f0: inc edx; add eax, 0x5f0c428d; ret; 
0x000bff63: inc edx; add eax, 0x5f5bf889; ret; 
0x000abed7: inc edx; add ebx, dword ptr [ebx + 0x5e]; ret; 
0x000b3958: inc edx; add ecx, dword ptr [ecx + 0x7eb83d0]; lea ecx, [edx + 7]; jne 0xb3801; pop ebx; ret; 
0x000290ad: inc edx; add ecx, dword ptr [edi]; dec ecx; ret 0xec83; 
0x0008e182: inc edx; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x000fac01: inc edx; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0003cc7b: inc edx; add esp, 0x94; pop ebx; pop edi; ret; 
0x0008e7e7: inc edx; and al, 0x65; mov dword ptr [0x7c], edx; pop ebx; ret; 
0x0017b9ba: inc edx; and edi, esp; jmp dword ptr [esi - 0x70]; 
0x001936c1: inc edx; call 0x42ef462d; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00193c51: inc edx; call 0x42ef4bbd; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00137d55: inc edx; call dword ptr [esi + 0x53]; 
0x00193270: inc edx; clc; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001936c6: inc edx; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001983a0: inc edx; clc; mov eax, edx; pop ebx; ret; 
0x00193273: inc edx; cld; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001983ba: inc edx; cld; mov eax, edx; pop ebx; ret; 
0x001932b3: inc edx; cli; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001932b7: inc edx; dec byte ptr [ebx + 0x5b082444]; ret; 
0x00193296: inc edx; dec dword ptr [ebx + 0x5b082444]; ret; 
0x00188588: inc edx; dec dword ptr [ecx - 0x762e7635]; ret 0x6c8b; 
0x000c22be: inc edx; dec dword ptr [edi]; test dword ptr [ebp + 0x5e000001], esp; xor eax, eax; pop ebx; ret; 
0x000c23c9: inc edx; dec dword ptr [edi]; test dword ptr [edx + 0x5e000000], ebx; xor eax, eax; pop ebx; ret; 
0x0019364c: inc edx; fisub dword ptr [esi + 0xf]; jg 0x193694; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x00193bdc: inc edx; fisub dword ptr [esi + 0xf]; jg 0x193c24; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x001937b6: inc edx; hlt; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019dc70: inc edx; in al, 3; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001935f1: inc edx; in al, dx; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001194fe: inc edx; inc edx; xor eax, eax; ret; 
0x00024bba: inc edx; inc esi; mov eax, 0x744c7139; sbb dword ptr [ebp - 0x1b797370], ecx; jmp dword ptr [ebp + 0x33]; 
0x000de8e3: inc edx; inc esi; stc; call dword ptr [eax - 0x18]; 
0x001368e1: inc edx; jmp dword ptr [eax]; 
0x000a2317: inc edx; jmp dword ptr [ecx]; 
0x001280d9: inc edx; jnp 0x128069; xchg ebx, eax; ret; 
0x00193432: inc edx; jo 0x1933b6; ret 0x80; 
0x00193499: inc edx; jo 0x19341d; ret 0x80; 
0x001934eb: inc edx; jo 0x19346f; ret 0x80; 
0x001ac66d: inc edx; lea eax, [edi - 0x10]; pop edi; ret; 
0x00193651: inc edx; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x00138f2a: inc edx; mov cl, 0xef; jmp dword ptr [esi - 0x70]; 
0x001937f6: inc edx; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00193836: inc edx; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00196396: inc edx; movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00198396: inc edx; movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x00193736: inc edx; mul byte ptr [esi - 0x77]; inc edx; dec byte ptr [ebx + 0x5b082444]; ret; 
0x000b784f: inc edx; or al, 0x5f; pop ebx; ret; 
0x000b5b63: inc edx; or al, 0x5f; ret; 
0x00059f0a: inc edx; or al, 0x83; les edx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret 4; 
0x00177300: inc edx; or al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; ret; 
0x00122801: inc edx; or byte ptr [0x100f], ah; ret; 
0x00185d04: inc edx; or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x1102454], cl; ret 0xcdb8; 
0x0007de92: inc edx; or byte ptr [ebp + 0x393074c9], al; ret; 
0x000877a3: inc edx; or byte ptr [ebp + 0x396774c9], al; ret; 
0x0007f243: inc edx; or byte ptr [ebp + 0x396f74c9], al; ret; 
0x00084989: inc edx; or byte ptr [ebp + 0x45840fc9], al; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x000b784c: inc edx; or byte ptr [ebp + 0x5b5f0c42], cl; ret; 
0x0007c3d2: inc edx; or byte ptr [ebp - 0x337bf037], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0008f15f: inc edx; or byte ptr [ebp - 0x77], ah; adc eax, 0x78; pop ebx; ret; 
0x00084c73: inc edx; or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; mov edi, 0x39000000; ret; 
0x0007fdb8: inc edx; or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; retf 0; add byte ptr [ecx], bh; ret; 
0x0008d369: inc edx; or byte ptr [ebx - 0x37c6ebb6], cl; cmovb eax, ecx; sub eax, dword ptr [edx + 0xc]; ret; 
0x000b399c: inc edx; or byte ptr [ecx + 0x9eb83d0], cl; lea ecx, [edx + 9]; jne 0xb3801; pop ebx; ret; 
0x000b39be: inc edx; or byte ptr [ecx + 0xaeb83d0], cl; lea ecx, [edx + 0xa]; jne 0xb3801; pop ebx; ret; 
0x000b39fc: inc edx; or byte ptr [ecx + 0xceb83d0], cl; lea ecx, [edx + 0xc]; jne 0xb3801; pop ebx; ret; 
0x000b7814: inc edx; or byte ptr [edi + 0x5b], bl; ret; 
0x0007173b: inc edx; or byte ptr [edi], cl; test byte ptr [ebx], ch; or eax, dword ptr [eax]; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x448b; 
0x00193591: inc edx; out dx, al; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00193561: inc edx; out dx, eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000b892e: inc edx; pop es; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b5b3c: inc edx; pop es; lea eax, [edx + 0xa]; pop edi; ret; 
0x000b5c7c: inc edx; pop es; lea eax, [edx + 0xa]; ret; 
0x000ba430: inc edx; pop es; lea eax, [edx + 0xe]; pop edi; ret; 
0x000ba590: inc edx; pop es; lea eax, [edx + 0xe]; ret; 
0x000bff1f: inc edx; pop es; mov eax, edi; pop ebx; pop edi; ret; 
0x000b175c: inc edx; pop es; mov eax, edi; pop edi; ret; 
0x000b189c: inc edx; pop es; mov eax, edx; ret; 
0x000abe9e: inc edx; pop es; pop ebx; pop esi; ret; 
0x000b59e9: inc edx; pop es; pop edi; ret; 
0x000b5c29: inc edx; pop es; ret; 
0x001a0aa3: inc edx; pop es; sub eax, ecx; pop ebp; ret; 
0x0019f2f6: inc edx; pop es; sub eax, ecx; ret; 
0x000b8856: inc edx; push cs; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b5ba3: inc edx; push cs; pop edi; ret; 
0x000b5d03: inc edx; push cs; ret; 
0x0004301a: inc edx; push dword ptr [ecx]; sar byte ptr [ecx], 1; ret 0x9e0f; 
0x000abe49: inc edx; push es; add byte ptr [ecx + 0x5bd08902], cl; pop esi; ret; 
0x000abf09: inc edx; push es; add byte ptr [ecx + 0x6428d02], cl; pop ebx; pop esi; ret; 
0x000ba410: inc edx; push es; lea eax, [edx + 0xd]; pop edi; ret; 
0x000ba570: inc edx; push es; lea eax, [edx + 0xd]; ret; 
0x000bff83: inc edx; push es; mov eax, edi; pop ebx; pop edi; ret; 
0x000b8dd0: inc edx; push es; mov eax, edi; pop edi; ret; 
0x000b8f30: inc edx; push es; mov eax, edx; ret; 
0x000abf0f: inc edx; push es; pop ebx; pop esi; ret; 
0x000b5aeb: inc edx; push es; pop edi; ret; 
0x000b5c1b: inc edx; push es; ret; 
0x001a0b7f: inc edx; push es; sub eax, ecx; pop ebp; ret; 
0x0019f366: inc edx; push es; sub eax, ecx; ret; 
0x00141d71: inc edx; ret 0x2ec3; 
0x000e0ec9: inc edx; ret 0x4c80; 
0x00141310: inc edx; ret 0x578d; 
0x0007a6d8: inc edx; ret 0x789; 
0x00149e50: inc edx; ret 0xb60f; 
0x000375e9: inc edx; ret 0xc189; 
0x00035265: inc edx; ret 0xc389; 
0x000da4e4: inc edx; ret 0xc501; 
0x00140e24: inc edx; ret 0xd129; 
0x00140cd4: inc edx; ret 0xd329; 
0x000c717f: inc edx; ret 0xd9f7; 
0x00140ce2: inc edx; ret 0xe883; 
0x000a7fba: inc edx; ret 0xea89; 
0x00193827: inc edx; ret 0xf66; 
0x0014ca5a: inc edx; ret 0xffff; 
0x000a9b0f: inc edx; ret; 
0x0005e003: inc edx; ror byte ptr [ecx + 0x29fa89d1], 1; ret 0x448d; 
0x000fd2ed: inc edx; sbb al, 0x39; ret; 
0x0010c4ba: inc edx; sbb byte ptr [ebx], al; add byte ptr [esi - 0x70], ah; mov eax, 0x42; call dword ptr gs:[0x10]; 
0x00095996: inc edx; sldt word ptr [0x1a947b]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x2a4], edx; ret; 
0x000a1a3d: inc edx; stc; call dword ptr [eax + 0x53]; 
0x000a2255: inc edx; stc; call dword ptr [eax + 0x56]; 
0x000a1e66: inc edx; stc; call dword ptr [eax - 0x18]; 
0x001932d7: inc edx; std; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00193293: inc edx; sti; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000fdce0: inc edx; sub al, 0xe9; mov ebx, 0x83fffffd; in al, dx; or byte ptr [ebp - 0x6b7f87d], cl; call dword ptr [eax + 0x55]; 
0x0011562f: inc edx; sub byte ptr [esi + 0x5f], bl; ret; 
0x00087add: inc edx; sub esp, 4; push esi; push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x000c2bdf: inc edx; test al, al; jne 0xc2bd8; xor eax, eax; ret; 
0x001932b0: inc edx; test byte ptr [ecx - 0x769905be], 0x42; dec byte ptr [ebx + 0x5b082444]; ret; 
0x00196450: inc edx; test dword ptr [edi], 0x88ff48b6; dec edx; dec dword ptr [ebx + 0x5b082444]; ret; 
0x00122416: inc edx; xor al, 0x5b; pop esi; pop edi; ret; 
0x00117a5e: inc edx; xor eax, eax; ret; 
0x0010b01c: inc esi; adc al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0011bbda: inc esi; adc al, 0x50; push 2; push dword ptr [esp + 0x30]; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x0018bbba: inc esi; adc al, 0x8b; push esi; adc byte ptr [ecx], bh; ret 0x4d72; 
0x0005b6ff: inc esi; adc byte ptr [ecx + 0x5e5b1856], cl; pop edi; ret; 
0x0017f40f: inc esi; adc byte ptr [ecx], al; ret; 
0x000890bf: inc esi; adc byte ptr [esi + 0x5f], bl; jmp eax; 
0x00059334: inc esi; add al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0019715b: inc esi; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0008c9f6: inc esi; add al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0017c152: inc esi; add al, 0x53; push esi; call dword ptr [eax + 4]; 
0x0018b97a: inc esi; add al, 0x5b; pop esi; pop edi; movzx eax, byte ptr [eax]; ret; 
0x00181d38: inc esi; add al, 0x75; test byte ptr [ebx - 0x74c7dba4], cl; inc esi; or byte ptr [ecx], al; ret; 
0x000c7a95: inc esi; add al, 0x83; mov byte ptr [ebx + eax*4], 0xc6; add al, 1; ret; 
0x000790b4: inc esi; add al, 0x89; inc esi; or byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0012c7bb: inc esi; add al, 0x89; ret 0xe083; 
0x0009d149: inc esi; add al, 0x89; ret 0xe283; 
0x0008a0c7: inc esi; add al, 0x8b; push esi; or byte ptr [ecx], ch; ret 0xfa39; 
0x0008277e: inc esi; add al, byte ptr [eax]; add byte ptr [ebx - 0x95f714], al; push dword ptr [ebx]; call dword ptr [edi + 0xc]; 
0x0006144f: inc esi; add al, byte ptr [eax]; add esp, 0x2c; ret; 
0x001628d5: inc esi; add al, byte ptr [eax]; mov dword ptr [esp], esi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x00149ab2: inc esi; add al, byte ptr [ebp - 0x76c28b37]; ret; 
0x00124809: inc esi; add byte ptr [eax], al; add esp, 0x18; mov eax, ebx; pop ebx; ret; 
0x0012e3b4: inc esi; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x000664ff: inc esi; add byte ptr [ecx - 0x5a77b], cl; dec dword ptr [ecx - 0x5f363]; jmp dword ptr [ebp - 0x5f]; 
0x0009356c: inc esi; add byte ptr [esi + 8], bh; mov byte ptr [esp + 0x47], 0; mov dword ptr [esp + 8], edx; call dword ptr gs:[0x10]; 
0x001367a5: inc esi; add dword ptr [ecx + 0x244c8bda], ecx; sbb al, 0x29; ret 0xca39; 
0x000c2b34: inc esi; add ebx, dword ptr [esi + 0x5f]; ret; 
0x0003aa1d: inc esi; add ecx, ebp; out dx, al; idiv edi; jmp dword ptr [esi - 0x70]; 
0x0003ca09: inc esi; add esp, 0x14; pop ebx; pop esi; ret; 
0x0018ab4e: inc esi; and al, 0x29; ret; 
0x0011b245: inc esi; and bh, bh; xor al, 8; push edx; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x0008b6aa: inc esi; and byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; jmp eax; 
0x0008a42a: inc esi; and byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; jmp eax; 
0x0013654d: inc esi; and byte ptr [ebx - 0xf76fb3c], al; pop ebx; pop esi; ret; 
0x000834d6: inc esi; and byte ptr [ecx], ch; rol byte ptr [ebx + 0x525004ec], 1; push esi; call ecx; 
0x0013de77: inc esi; clc; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x001738d6: inc esi; cmc; hlt; dec dword ptr [ebp + 0x34890170]; and al, 0xe8; ret; 
0x00177dda: inc esi; cmp al, 0x83; in al, dx; or al, 0x55; call dword ptr [eax + 0x10]; 
0x00080af9: inc esi; cmp al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000d61c4: inc esi; dec dword ptr [edi]; dec edi; ret 0x48d; 
0x0010b694: inc esi; dec eax; stc; call dword ptr [eax - 0x18]; 
0x000f5ff6: inc esi; idiv edi; dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x14a90380]; call dword ptr [eax + 0x6a]; 
0x000f26b6: inc esi; idiv edi; dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x14e24380]; call dword ptr [eax + 0x6a]; 
0x001870b6: inc esi; insb byte ptr es:[edi], dx; sti; jmp dword ptr [esi - 0x70]; 
0x0010bdeb: inc esi; into; call dword ptr gs:[0x10]; 
0x00094249: inc esi; iretd; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x00024bbb: inc esi; mov eax, 0x744c7139; sbb dword ptr [ebp - 0x1b797370], ecx; jmp dword ptr [ebp + 0x33]; 
0x0015bf91: inc esi; or al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0015060f: inc esi; or al, 0x39; ret; 
0x0016e6b9: inc esi; or al, 0x56; push dword ptr [esp + 0x14]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x001716fc: inc esi; or al, 0x83; les eax, ptr [ecx + eax]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0005b6fc: inc esi; or al, 0x89; inc esi; adc byte ptr [ecx + 0x5e5b1856], cl; pop edi; ret; 
0x0008c9f3: inc esi; or al, 0x89; inc esi; add al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x001061dd: inc esi; or al, 0x8b; je 0x106206; sub al, 0x83; ret; 
0x00083508: inc esi; or al, 1; ret 0xc101; 
0x000855fa: inc esi; or byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x0008e0ed: inc esi; or byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret; 
0x000790b7: inc esi; or byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000fec34: inc esi; or byte ptr [ebx - 0x14f7dbac], cl; jge 0x831012b5; ret; 
0x00127eef: inc esi; or byte ptr [ebx - 0x7bf0fe01], al; ret 0xfff5; 
0x00088bf0: inc esi; or byte ptr [ecx + 0x4c483f0], cl; pop ebx; pop esi; ret; 
0x000407c3: inc esi; or byte ptr [ecx + 0xc5689f0], cl; add esp, 0x34; pop ebx; pop esi; ret 4; 
0x0017ad34: inc esi; or byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [edx], ch; push edi; call dword ptr [eax + 0x14]; 
0x00181d41: inc esi; or byte ptr [ecx], al; ret; 
0x00066f2c: inc esi; or dword ptr [eax], eax; add byte ptr [ebx - 0x58f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000fb1f8: inc esi; pop eax; mov edx, 0x20; cmovne eax, edx; ret; 
0x0005df26: inc esi; popal; std; dec dword ptr [ebx - 0x8b4b]; dec dword ptr [ebp - 0x684677a]; call dword ptr [eax - 0x73]; 
0x0007c415: inc esi; push 0x850fc085; ret 0; 
0x000fb2e6: inc esi; push ebx; setne al; ret; 
0x00025556: inc esi; push ss; add byte ptr [0x2198bb], al; mov eax, dword ptr [eax + 0xa4]; add eax, dword ptr gs:[0]; ret; 
0x00140fb8: inc esi; ret 0x4489; 
0x001a5e2b: inc esi; ret 0x5d5e; 
0x000a67fe: inc esi; ret 0x8388; 
0x0013f06c: inc esi; ret 0xbe0f; 
0x0008e5f0: inc esi; sal byte ptr [ecx], 1; sar byte ptr [ebx], 0x54; and al, 4; setae al; ret; 
0x000a6ec6: inc esi; sal edi, 0xff; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00136bd9: inc esi; sbb al, 0x29; rcl byte ptr [eax - 0x73]; xchg dword ptr [ebp + edx*2 - 7], ebp; call dword ptr [eax - 1]; 
0x00137859: inc esi; sbb al, 0x89; ret; 
0x0018bfbe: inc esi; sbb al, 1; ret 0x4689; 
0x0016bef4: inc esi; sbb byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x000e94aa: inc esi; sbb byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x000e0444: inc esi; stc; call dword ptr [eax + 0x53]; 
0x000dd2fe: inc esi; stc; call dword ptr [eax + 0x56]; 
0x0003064c: inc esi; stc; call dword ptr [eax - 0x18]; 
0x00039f03: inc esi; stc; dec dword ptr [edi]; inc ebp; call 0x2b6f6; jmp dword ptr [esi - 0x70]; 
0x00039e22: inc esi; stc; inc dword ptr [ebx - 0x7c72f314]; shr dword ptr [esi], 1; stc; call dword ptr [eax - 0x18]; 
0x0003e7a3: inc esi; stc; jmp dword ptr [esi - 0x77]; 
0x0006078f: inc esi; std; call dword ptr [eax - 0x73]; 
0x0018ab4b: inc esi; sub al, 0x2b; inc esi; and al, 0x29; ret; 
0x0008caa0: inc esi; sub byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0008af18: inc esi; sub byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x001a9b49: inc esi; test dh, 0x40; jne 0x1a9b94; add eax, 0xf; ret; 
0x000c1cc4: inc esp; adc al, dh; ret; 
0x000c1cf4: inc esp; adc byte ptr [eax], ah; ret; 
0x001707a0: inc esp; adc byte ptr [eax], ch; push eax; push edi; call dword ptr [ecx + 0x18]; 
0x000c1ce4: inc esp; adc byte ptr [eax], dl; ret; 
0x000a8f73: inc esp; adc eax, 0x83e87401; ret 0x8b01; 
0x00197344: inc esp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0009f5d8: inc esp; add al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000605f1: inc esp; add al, byte ptr [eax]; add byte ptr [ebp - 0x69c6a7d], cl; call dword ptr [eax + 0x68]; 
0x0009afa7: inc esp; add bh, bh; pop esi; pop edi; pop ebp; ret; 
0x00065168: inc esp; add byte ptr [eax], al; add byte ptr [eax], al; jmp edx; 
0x001249ed: inc esp; add byte ptr [eax], al; add esp, 4; pop ebx; pop esi; ret; 
0x00124d66: inc esp; add byte ptr [eax], al; call 0x231a0; add esp, 0x18; pop ebx; ret; 
0x0009c30d: inc esp; add byte ptr [edx], al; ret; 
0x00141fd5: inc esp; add cl, byte ptr [eax]; pop ebx; ret; 
0x000c1cbb: inc esp; add dh, byte ptr [eax]; ret; 
0x00065833: inc esp; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; jmp edx; 
0x00175f66: inc esp; add dword ptr [eax], eax; add byte ptr [ecx - 0x12f7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00156c45: inc esp; add dword ptr [eax], eax; add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000c188b: inc esp; add dword ptr [eax], edx; ret; 
0x000c18ab: inc esp; add dword ptr [eax], esi; ret; 
0x000c189b: inc esp; add dword ptr [eax], esp; ret; 
0x0019ce6e: inc esp; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00142066: inc esp; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00186767: inc esp; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x000644f2: inc esp; and al, 0x10; add byte ptr [eax], al; add byte ptr [eax], al; jmp edx; 
0x000644a2: inc esp; and al, 0x10; add dword ptr [eax], eax; add byte ptr [eax], al; jmp edx; 
0x0013e492: inc esp; and al, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x0003b8e5: inc esp; and al, 0x10; and eax, 0x80000000; ret; 
0x000410a5: inc esp; and al, 0x10; call eax; 
0x0003ba22: inc esp; and al, 0x10; fld xword ptr [esp + 4]; fadd st(0); mov dword ptr [eax], ecx; ret; 
0x0003bc61: inc esp; and al, 0x10; fld xword ptr [esp + 4]; fscale; fstp st(1); ret; 
0x0003ba17: inc esp; and al, 0x10; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00192ba5: inc esp; and al, 0x10; mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x00132451: inc esp; and al, 0x10; mov dword ptr [esp + 0x24], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00134aca: inc esp; and al, 0x10; mov eax, dword ptr [eax + 0x4c]; call 0x134990; add esp, 4; ret; 
0x00131a25: inc esp; and al, 0x10; mov eax, dword ptr [esp + 0x40]; mov dword ptr [esp + 0x14], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000942aa: inc esp; and al, 0x10; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x000a809a: inc esp; and al, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00145e22: inc esp; and al, 0x10; sub eax, ebx; add esp, 8; pop ebx; ret; 
0x00070afd: inc esp; and al, 0x14; add byte ptr [eax], al; add byte ptr [eax], al; jmp edx; 
0x00070e7d: inc esp; and al, 0x14; add dword ptr [eax], eax; add byte ptr [eax], al; jmp edx; 
0x0012b8bd: inc esp; and al, 0x14; call dword ptr gs:[0x10]; 
0x00024d92: inc esp; and al, 0x14; call eax; 
0x00033d6c: inc esp; and al, 0x14; call edx; 
0x00131a2d: inc esp; and al, 0x14; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0013276b: inc esp; and al, 0x14; mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001322b4: inc esp; and al, 0x14; mov eax, dword ptr [esp + 0x44]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00095d36: inc esp; and al, 0x18; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00065117: inc esp; and al, 0x18; add eax, dword ptr [ecx + edx*4 - 0x73f14]; jmp eax; 
0x000658a1: inc esp; and al, 0x18; add eax, dword ptr [edi + edx*4]; mov edi, ecx; jmp eax; 
0x0006488e: inc esp; and al, 0x18; add eax, dword ptr [esi + edx*4 - 0x73e94]; jmp eax; 
0x00066029: inc esp; and al, 0x18; add eax, dword ptr [esi + edx*4 - 0x74014]; jmp eax; 
0x00175b20: inc esp; and al, 0x18; call dword ptr [eax + 0x10]; 
0x0018b2af: inc esp; and al, 0x18; call dword ptr [eax + 0x40]; 
0x00114412: inc esp; and al, 0x18; call eax; 
0x0013244d: inc esp; and al, 0x18; lea eax, [esp + 0x10]; mov dword ptr [esp + 0x24], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0016ebb0: inc esp; and al, 0x18; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x000e7a66: inc esp; and al, 0x18; mov eax, 0x108; mov dword ptr [esp + 0x14], edi; call dword ptr gs:[0x10]; 
0x0013130c: inc esp; and al, 0x18; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001329dd: inc esp; and al, 0x18; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00071865: inc esp; and al, 0x1c; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x00064ef7: inc esp; and al, 0x1c; add dword ptr [eax], eax; add byte ptr [eax], al; jmp edx; 
0x000a075a: inc esp; and al, 0x1c; mov dword ptr [esp], eax; call esi; 
0x00131c1e: inc esp; and al, 0x1c; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00131be0: inc esp; and al, 0x1c; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x0017b89c: inc esp; and al, 0x1c; sub eax, dword ptr gs:[0x14]; jne 0x17b8ac; add esp, 0x2c; ret; 
0x000704fa: inc esp; and al, 0x20; add dword ptr [eax], eax; add byte ptr [eax], al; jmp edx; 
0x000650b3: inc esp; and al, 0x20; add edi, dword ptr [eax + edx*4 - 0x73f94]; mov edx, edi; mov edi, ecx; jmp edx; 
0x00064bf3: inc esp; and al, 0x20; add edi, dword ptr [eax + edx*4 - 0x74094]; mov edx, edi; mov edi, ecx; jmp edx; 
0x0016ee4a: inc esp; and al, 0x20; call eax; 
0x0003d8a6: inc esp; and al, 0x20; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x000642f9: inc esp; and al, 0x24; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x00071875: inc esp; and al, 0x24; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x000657f1: inc esp; and al, 0x24; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; jmp edx; 
0x000dfdc5: inc esp; and al, 0x24; add dword ptr [ebx - 0x7cdbdbbc], ecx; ret; 
0x00179ac2: inc esp; and al, 0x24; add eax, 0x8b000000; push eax; or byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x0008df84: inc esp; and al, 0x24; call eax; 
0x001316b3: inc esp; and al, 0x24; mov dword ptr [esp + 0x38], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0013184f: inc esp; and al, 0x24; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00132455: inc esp; and al, 0x24; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00122a32: inc esp; and al, 0x24; mov eax, dword ptr [esp + 0x74]; lea ecx, [eax + 0x5402]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00071895: inc esp; and al, 0x28; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x00065879: inc esp; and al, 0x28; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; jmp edx; 
0x00170c1e: inc esp; and al, 0x28; call dword ptr [eax + 0x18]; 
0x00041717: inc esp; and al, 0x28; call eax; 
0x00041743: inc esp; and al, 0x28; mov dword ptr [esp + 0x24], edx; call eax; 
0x0013144e: inc esp; and al, 0x28; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0013236f: inc esp; and al, 0x28; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00115228: inc esp; and al, 0x28; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0006461c: inc esp; and al, 0x2c; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; jmp edx; 
0x001628dc: inc esp; and al, 0x2c; call eax; 
0x0009db60: inc esp; and al, 0x2c; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x001315fb: inc esp; and al, 0x2c; mov eax, dword ptr [esp + 0x68]; mov dword ptr [esp + 0x30], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0009a529: inc esp; and al, 0x2c; mov eax, dword ptr [esp + 0xc8]; mov dword ptr [esp + 0x30], eax; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x000701f4: inc esp; and al, 0x30; add byte ptr [eax], al; add byte ptr [eax], al; jmp ebx; 
0x000718a5: inc esp; and al, 0x30; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x0009a534: inc esp; and al, 0x30; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x00131603: inc esp; and al, 0x30; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000db3f7: inc esp; and al, 0x30; push eax; mov eax, dword ptr [esp + 0x64]; call eax; 
0x000a0014: inc esp; and al, 0x34; add al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00071915: inc esp; and al, 0x34; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x0015dbad: inc esp; and al, 0x34; add dword ptr [ebx - 0x6bf09f02], eax; ret 0x4489; 
0x0002f151: inc esp; and al, 0x34; call eax; 
0x001316af: inc esp; and al, 0x34; lea eax, [esp + 0x24]; mov dword ptr [esp + 0x38], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00083de4: inc esp; and al, 0x34; push eax; call ebx; 
0x000d454f: inc esp; and al, 0x34; push eax; push dword ptr [esi + 8]; call ebx; 
0x000658d1: inc esp; and al, 0x38; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; jmp edx; 
0x000c4117: inc esp; and al, 0x38; call eax; 
0x001313bf: inc esp; and al, 0x38; mov dword ptr [esp + 0xc], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00131f08: inc esp; and al, 0x38; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001316b7: inc esp; and al, 0x38; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00087cd9: inc esp; and al, 0x38; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x000706bd: inc esp; and al, 0x3c; add byte ptr [eax], al; add byte ptr [eax], al; jmp edx; 
0x000718b5: inc esp; and al, 0x3c; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x00065801: inc esp; and al, 0x3c; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; jmp edx; 
0x00173f0a: inc esp; and al, 0x3c; call eax; 
0x0013276f: inc esp; and al, 0x3c; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00179932: inc esp; and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x179942; add esp, 0x4c; ret; 
0x001799a2: inc esp; and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x1799b2; add esp, 0x4c; ret; 
0x00179a12: inc esp; and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x179a22; add esp, 0x4c; ret; 
0x00179a75: inc esp; and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x179a85; add esp, 0x4c; ret; 
0x00179ad5: inc esp; and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x179ae5; add esp, 0x4c; ret; 
0x00179b42: inc esp; and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x179b52; add esp, 0x4c; ret; 
0x00179bc2: inc esp; and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x179bd2; add esp, 0x4c; ret; 
0x00065869: inc esp; and al, 0x40; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; jmp edx; 
0x00131a29: inc esp; and al, 0x40; mov dword ptr [esp + 0x14], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000c3de0: inc esp; and al, 0x40; push dword ptr [eax]; call edi; 
0x000c334f: inc esp; and al, 0x40; push eax; push dword ptr [edi]; call ebx; 
0x00083104: inc esp; and al, 0x40; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x0009f5d6: inc esp; and al, 0x44; add al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00065166: inc esp; and al, 0x44; add byte ptr [eax], al; add byte ptr [eax], al; jmp edx; 
0x00065831: inc esp; and al, 0x44; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; jmp edx; 
0x0015f7b9: inc esp; and al, 0x44; call eax; 
0x000e6a16: inc esp; and al, 0x44; dec edi; add byte ptr [eax], al; add cl, ch; ret 0xfffd; 
0x001322b8: inc esp; and al, 0x44; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0009356a: inc esp; and al, 0x46; add byte ptr [esi + 8], bh; mov byte ptr [esp + 0x47], 0; mov dword ptr [esp + 8], edx; call dword ptr gs:[0x10]; 
0x00070b63: inc esp; and al, 0x48; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x00150b76: inc esp; and al, 0x48; add dword ptr [ebx + 0x3948244c], ecx; ret 0x830f; 
0x00150125: inc esp; and al, 0x48; add dword ptr [ebx + 0x3948245c], ecx; ret; 
0x00150d9e: inc esp; and al, 0x48; add dword ptr [ebx + 0x3948245c], ecx; sal dword ptr [ebx + 0x3f], 0x39; ret; 
0x00175e97: inc esp; and al, 0x48; call dword ptr [eax + 0x10]; 
0x00175d3d: inc esp; and al, 0x48; call dword ptr [eax + 0x14]; 
0x000285ed: inc esp; and al, 0x48; call eax; 
0x0015a43f: inc esp; and al, 0x48; push eax; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x40]; call esi; 
0x0006532e: inc esp; and al, 0x4c; add byte ptr [ecx], ch; retf 0x490f; ret 0x4489; 
0x00044638: inc esp; and al, 0x4c; add dword ptr [ebx + 0x394c2444], ecx; ret 0x8d0f; 
0x00064ba2: inc esp; and al, 0x4c; add edi, dword ptr [eax + edx*4]; mov edx, edi; mov edi, ecx; jmp edx; 
0x00029d6b: inc esp; and al, 0x4c; call eax; 
0x00081f08: inc esp; and al, 0x50; add dh, byte ptr [edx + ebx*4 - 0x17]; ret; 
0x0003752e: inc esp; and al, 0x50; add dword ptr [ebx - 0x7ccfdbbc], ecx; ret; 
0x0002c8bd: inc esp; and al, 0x54; call eax; 
0x0015d088: inc esp; and al, 0x57; add byte ptr [eax - 0x73], dl; and dword ptr [edi + 0x5f], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00064741: inc esp; and al, 0x58; add byte ptr [edi], cl; xchg esp, eax; ret 0x44c7; 
0x00170279: inc esp; and al, 0x5c; call eax; 
0x00132367: inc esp; and al, 0x60; mov dword ptr [esp + 0x24], esi; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000dad42: inc esp; and al, 0x64; call eax; 
0x000c6bb5: inc esp; and al, 0x64; mov dword ptr [esp + 0x34], ecx; push eax; push ebp; call esi; 
0x000c43cb: inc esp; and al, 0x64; mov dword ptr [esp + 0x34], edx; push eax; push ebp; call esi; 
0x001315ff: inc esp; and al, 0x68; mov dword ptr [esp + 0x30], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012dd8c: inc esp; and al, 0x68; mov eax, dword ptr [edx + 0xa0]; mov dword ptr [esp + 0x6c], eax; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x0012dd96: inc esp; and al, 0x6c; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x0002a2dd: inc esp; and al, 0x70; push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x54]; call esi; 
0x00122a36: inc esp; and al, 0x74; lea ecx, [eax + 0x5402]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0002f280: inc esp; and al, 0x78; push eax; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call edi; 
0x001375a1: inc esp; and al, 0xc; add eax, 0x2000001; push eax; call dword ptr [ebp + 0x14]; 
0x0003ca44: inc esp; and al, 0xc; add esp, 0x14; pop ebx; pop esi; ret; 
0x000611ff: inc esp; and al, 0xc; add esp, 0x18; pop ebx; ret; 
0x000a6c0f: inc esp; and al, 0xc; call dword ptr [edx]; 
0x0003bdc8: inc esp; and al, 0xc; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x000904b7: inc esp; and al, 0xc; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x000e7d94: inc esp; and al, 0xc; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x00129756: inc esp; and al, 0xc; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x0012a086: inc esp; and al, 0xc; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000e7d5e: inc esp; and al, 0xc; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x001313c3: inc esp; and al, 0xc; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0011f3fb: inc esp; and al, 0xc; mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000a6b51: inc esp; and al, 0xc; mov eax, dword ptr [eax + 0x90]; call dword ptr [eax]; 
0x00133b99: inc esp; and al, 0xc; mov edx, dword ptr [edx]; mov dword ptr [eax], edx; mov eax, 1; ret; 
0x0003d6a1: inc esp; and al, 0xc; mov edx, edi; mov eax, 0x1a5; call dword ptr gs:[0x10]; 
0x0003d661: inc esp; and al, 0xc; mov edx, edi; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x0009fc58: inc esp; and al, 0xc; mov esi, dword ptr [esp + 0x4c]; mov eax, 0x117; call dword ptr gs:[0x10]; 
0x0009fca0: inc esp; and al, 0xc; mov esi, dword ptr [esp + 0x4c]; mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x0009f990: inc esp; and al, 0xc; mov esi, dword ptr [esp + 4]; mov eax, 0x118; call dword ptr gs:[0x10]; 
0x0009f9d0: inc esp; and al, 0xc; mov esi, dword ptr [esp + 4]; mov eax, 0x1a3; call dword ptr gs:[0x10]; 
0x0003b9a1: inc esp; and al, 0xc; or eax, 0xffff8000; inc eax; shr eax, 0x1f; ret; 
0x000c0a43: inc esp; and al, 0xc; pop ebx; pop esi; ret; 
0x001ab9a3: inc esp; and al, 0xc; pop edi; ret; 
0x00024e77: inc esp; and al, 0xc; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call ecx; 
0x001570ae: inc esp; and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x1570be; add esp, 0x1c; ret; 
0x0017a0b3: inc esp; and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x17a0c3; add esp, 0x1c; ret; 
0x0017a102: inc esp; and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x17a13c; add esp, 0x1c; ret; 
0x0003efe6: inc esp; and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x3eff6; add esp, 0x1c; ret; 
0x0003f0f9: inc esp; and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x3f109; add esp, 0x1c; ret; 
0x0017cdd5: inc esp; and al, 4; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x00141ae5: inc esp; and al, 4; add eax, 9; and eax, 0xfffffff8; add eax, 0xc; ret; 
0x00090801: inc esp; and al, 4; and dword ptr [eax + 8], 0xfffffffb; xor eax, eax; ret; 
0x000875c5: inc esp; and al, 4; and dword ptr [eax], 0xffffffcf; ret; 
0x00034645: inc esp; and al, 4; and eax, 0x7f; ret; 
0x0013f615: inc esp; and al, 4; bswap eax; ret; 
0x0008e950: inc esp; and al, 4; cmp dword ptr [eax], 1; je 0x8e960; ret; 
0x00055166: inc esp; and al, 4; fld qword ptr [esp]; add esp, 0xc; ret; 
0x000551e0: inc esp; and al, 4; fld xword ptr [esp]; add esp, 0x1c; ret; 
0x00173c17: inc esp; and al, 4; jmp edx; 
0x0009a591: inc esp; and al, 4; lock dec dword ptr [eax]; jne 0x9a5a0; xor eax, eax; ret; 
0x0010ce3b: inc esp; and al, 4; mov dword ptr [eax + 0x108], edx; xor eax, eax; ret; 
0x0010ce63: inc esp; and al, 4; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x00090911: inc esp; and al, 4; mov dword ptr [eax + 0x14], edx; xor eax, eax; ret; 
0x00099ac5: inc esp; and al, 4; mov dword ptr [eax], 0; mov dword ptr [eax + 4], 0; xor eax, eax; ret; 
0x00090c15: inc esp; and al, 4; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x0009a5d1: inc esp; and al, 4; mov dword ptr [eax], 1; xor eax, eax; ret; 
0x0003bdcc: inc esp; and al, 4; mov dword ptr [eax], ecx; ret; 
0x00131261: inc esp; and al, 4; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00115316: inc esp; and al, 4; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00152855: inc esp; and al, 4; mov eax, dword ptr [eax + 0x10]; ret; 
0x0017ce15: inc esp; and al, 4; mov eax, dword ptr [eax + 0x14]; ret; 
0x0017a8e1: inc esp; and al, 4; mov eax, dword ptr [eax + 0x30]; add eax, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0008ccc5: inc esp; and al, 4; mov eax, dword ptr [eax + 0x34]; ret; 
0x001897b5: inc esp; and al, 4; mov eax, dword ptr [eax + 0x4c]; ret; 
0x001897d5: inc esp; and al, 4; mov eax, dword ptr [eax + 0x50]; ret; 
0x00189865: inc esp; and al, 4; mov eax, dword ptr [eax + 0x54]; ret; 
0x00189855: inc esp; and al, 4; mov eax, dword ptr [eax + 0x58]; ret; 
0x001897e5: inc esp; and al, 4; mov eax, dword ptr [eax + 0x5c]; ret; 
0x0009e075: inc esp; and al, 4; mov eax, dword ptr [eax + 0x64]; ret; 
0x001227d5: inc esp; and al, 4; mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x00189799: inc esp; and al, 4; mov eax, dword ptr [eax + edx*4]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x00086885: inc esp; and al, 4; mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x00086835: inc esp; and al, 4; mov eax, dword ptr [eax]; and eax, 0x804; ret; 
0x000a08d0: inc esp; and al, 4; mov eax, dword ptr [eax]; cmp eax, 0x3fc; jbe 0xa08e0; ret; 
0x000a0ad0: inc esp; and al, 4; mov eax, dword ptr [eax]; cmp eax, 0x50; jbe 0xa0ae0; ret; 
0x000a0910: inc esp; and al, 4; mov eax, dword ptr [eax]; cmp eax, 0xffff; jbe 0xa0920; ret; 
0x000e8905: inc esp; and al, 4; mov eax, dword ptr [eax]; ret; 
0x0013184b: inc esp; and al, 4; mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0013144a: inc esp; and al, 4; mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000a89f6: inc esp; and al, 4; mov edx, 0xffffffff; cmove eax, edx; add eax, 1; ret; 
0x0017cdf5: inc esp; and al, 4; mov edx, dword ptr [esp + 0xc]; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x00114615: inc esp; and al, 4; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x110], edx; xor eax, eax; ret; 
0x001897c5: inc esp; and al, 4; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x000906f5: inc esp; and al, 4; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x0010ce15: inc esp; and al, 4; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x0008c965: inc esp; and al, 4; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x00189775: inc esp; and al, 4; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x000311c5: inc esp; and al, 4; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x0010ce05: inc esp; and al, 4; mov word ptr [eax], dx; xor eax, eax; ret; 
0x000875d5: inc esp; and al, 4; movzx eax, byte ptr [eax]; shr al, 4; and eax, 1; ret; 
0x000875f5: inc esp; and al, 4; movzx eax, byte ptr [eax]; shr al, 5; and eax, 1; ret; 
0x0008ccd5: inc esp; and al, 4; ret; 
0x0013f626: inc esp; and al, 4; rol ax, 8; ret; 
0x000941b9: inc esp; and al, 4; sete al; movzx eax, al; ret; 
0x0008a865: inc esp; and al, 4; test byte ptr [eax], 0x80; jne 0x8a870; ret; 
0x000c2562: inc esp; and al, 8; cld; pop edi; ret; 
0x000941b5: inc esp; and al, 8; cmp dword ptr [esp + 4], eax; sete al; movzx eax, al; ret; 
0x0003c0f0: inc esp; and al, 8; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x000903bc: inc esp; and al, 8; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x000e7bb4: inc esp; and al, 8; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x0010e8f8: inc esp; and al, 8; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x0011f7e1: inc esp; and al, 8; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00120609: inc esp; and al, 8; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x0012064f: inc esp; and al, 8; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x00131452: inc esp; and al, 8; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0013291b: inc esp; and al, 8; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x001154ae: inc esp; and al, 8; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x001313bb: inc esp; and al, 8; mov eax, dword ptr [esp + 0x38]; mov dword ptr [esp + 0xc], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00140386: inc esp; and al, 8; mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; 
0x001989a7: inc esp; and al, 8; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x00129a3e: inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x0012a36e: inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000fb70e: inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000fb8ce: inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x0007c15c: inc esp; and al, 8; mov edx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x000347c5: inc esp; and al, 8; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x000347e5: inc esp; and al, 8; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0003c4fc: inc esp; and al, 8; mov esp, ecx; jmp edx; 
0x0010cccc: inc esp; and al, 8; mov word ptr [eax], dx; xor eax, eax; ret; 
0x000815fd: inc esp; and al, 8; pop ebx; ret; 
0x000c2538: inc esp; and al, 8; pop edi; ret; 
0x000bd623: inc esp; and al, 8; pop esi; ret; 
0x0007b2a7: inc esp; and al, 8; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x00087fe3: inc esp; and al, 8; push eax; push esi; call dword ptr [edi + 0x48]; 
0x00034830: inc esp; and al, 8; ret; 
0x00135add: inc esp; and dword ptr [eax], 0x5b1cc483; pop esi; pop edi; pop ebp; ret; 
0x000fdbbf: inc esp; call 0xea2ae; inc dword ptr [ebx - 0x7c72f714]; adc ecx, dword ptr [eax - 7]; call dword ptr [eax + 0x55]; 
0x0015f7bb: inc esp; call eax; 
0x000c1574: inc esp; cmp al, dh; pop edi; ret; 
0x000c15a4: inc esp; cmp byte ptr [eax], ah; pop edi; ret; 
0x000c1594: inc esp; cmp byte ptr [eax], dl; pop edi; ret; 
0x000d37b7: inc esp; cmp dword ptr [ecx + edi], eax; ret 0x8f0f; 
0x00081ac4: inc esp; dec dword ptr [edi]; xchg esp, eax; ret; 
0x000e6a18: inc esp; dec edi; add byte ptr [eax], al; add cl, ch; ret 0xfffd; 
0x000ac2b9: inc esp; idiv bh; and ch, 2; lea edx, [edx - 0x17cf64]; cmove eax, edx; ret; 
0x000ac2f9: inc esp; idiv bh; and ch, 2; lea edx, [edx - 0x17cfd4]; cmove eax, edx; ret; 
0x000e7374: inc esp; inc ebp; add byte ptr [eax], al; add cl, ch; and edi, 0xffffffff; call dword ptr [ebx + 0x57]; 
0x000f0a5c: inc esp; inc ebx; mov eax, 0x41; call dword ptr gs:[0x10]; 
0x000f0b0c: inc esp; inc ebx; mov eax, 0xc7; call dword ptr gs:[0x10]; 
0x001179d8: inc esp; int 0xff; jmp dword ptr [ebp - 0x5f]; 
0x000307df: inc esp; je 0x307db; call dword ptr [eax + 0x56]; 
0x0003352e: inc esp; je 0x3352a; call dword ptr [eax + 0x56]; 
0x0016f9b8: inc esp; jecxz 0x16f9b7; jmp dword ptr [esi - 0x70]; 
0x00062a91: inc esp; jge 0x62a8d; call dword ptr [eax - 0x18]; 
0x0006e879: inc esp; jge 0x6e875; call dword ptr [eax - 0x18]; 
0x00027fdf: inc esp; jo 0x27fdb; dec dword ptr [ecx - 0x48f0f7bd]; test dword ptr [eax + 0x70], ecx; stc; jmp dword ptr [esi - 0x77]; 
0x00152ef8: inc esp; mov cl, 0xf9; call dword ptr [eax - 0x73]; 
0x001322ba: inc esp; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012fb11: inc esp; mov eax, 0xac; mov ebx, 0x53564d41; call dword ptr gs:[0x10]; 
0x001210ca: inc esp; mov eax, edx; pop ebx; pop esi; ret; 
0x000e79d4: inc esp; mov ebx, dword ptr [esp + 0x40]; cmp dword ptr [ecx + 8], 0x3b9ac9ff; ja 0xe7a90; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x0010bfe9: inc esp; mov ebx, dword ptr [esp + 0x40]; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00122bad: inc esp; mov ebx, dword ptr [esp + 0x40]; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x000e7679: inc esp; mov ebx, dword ptr [esp + 0x40]; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0012d6ab: inc esp; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x0010e6fa: inc esp; mov edx, dword ptr [esp + 0x88]; mov eax, 0x72; mov ebx, dword ptr [esp + 0x80]; call dword ptr gs:[0x10]; 
0x00034043: inc esp; nop; inc eax; ret; 
0x000c1854: inc esp; or byte ptr [eax], ah; ret; 
0x000c1864: inc esp; or byte ptr [eax], dh; ret; 
0x000c1844: inc esp; or byte ptr [eax], dl; ret; 
0x000a30fb: inc esp; pop es; adc byte ptr [ebx - 0x76efdb84], cl; ret 0xfa29; 
0x0019b3de: inc esp; pop es; add al, 0x5f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b2be: inc esp; pop es; add bl, byte ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x0019b22e: inc esp; pop es; add dword ptr [edi + 3], ebx; sbb al, 0x8b; jmp ebx; 
0x0019b46e: inc esp; pop es; add eax, 0x8b1c035f; jmp ebx; 
0x0019b34e: inc esp; pop es; add ebx, dword ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x0019ba0e: inc esp; pop es; maxps xmm0, xmmword ptr [ebx]; sbb al, 0x8b; jmp ebx; 
0x0019b85e: inc esp; pop es; or al, 0x5f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b73e: inc esp; pop es; or bl, byte ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x0019b61e: inc esp; pop es; or byte ptr [edi + 3], bl; sbb al, 0x8b; jmp ebx; 
0x00199a58: inc esp; pop es; or byte ptr [edi - 0x18], bl; mov esp, 0x81ffff01; ret; 
0x0019b6ae: inc esp; pop es; or dword ptr [edi + 3], ebx; sbb al, 0x8b; jmp ebx; 
0x0019b8ee: inc esp; pop es; or eax, 0x8b1c035f; jmp ebx; 
0x0019b7ce: inc esp; pop es; or ebx, dword ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x0019b58e: inc esp; pop es; pop es; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b97e: inc esp; pop es; push cs; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b4fe: inc esp; pop es; push es; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013be9c: inc esp; push eax; add eax, eax; call 0x1f441ab; pop ebx; ret; 
0x0012717a: inc esp; push eax; stc; call dword ptr [eax + 0x55]; 
0x000c4ab7: inc esp; push ecx; push dword ptr [edi + 8]; call ebx; 
0x00061fcf: inc esp; push es; aad 0x83; ret 0x101; 
0x00187088: inc esp; push es; jmp dword ptr [ecx]; 
0x0013bc05: inc esp; rcl dword ptr [eax - 0x73], 0x87; push si; stc; call dword ptr [eax - 1]; 
0x000e1b90: inc esp; ret 0x10e9; 
0x000980ee: inc esp; ret 0x118b; 
0x00151a00: inc esp; ret 0x148b; 
0x001895a4: inc esp; ret 0x178b; 
0x000c34db: inc esp; ret 0x188b; 
0x000c33cb: inc esp; ret 0x288b; 
0x0010e3a8: inc esp; ret 0x2ec3; 
0x000c400c: inc esp; ret 0x4489; 
0x001653bd: inc esp; ret 0x4789; 
0x000fabd9: inc esp; ret 0x4c89; 
0x000e7ca9: inc esp; ret 0x548b; 
0x000a56a1: inc esp; ret 0x568d; 
0x0004327a: inc esp; ret 0x66c3; 
0x00100abd: inc esp; ret 0x804; 
0x0015ebe8: inc esp; ret 0x8489; 
0x000c45b5: inc esp; ret 0x8b65; 
0x000a86ca: inc esp; ret 0x8dc3; 
0x000a310e: inc esp; ret 0x938b; 
0x0008e54b: inc esp; ret 0x978b; 
0x0010d873: inc esp; ret 0xb58b; 
0x000a89ff: inc esp; ret 0xc083; 
0x00125e9e: inc esp; ret 0xc483; 
0x00032da4: inc esp; ret 0xc89; 
0x0003c8eb: inc esp; ret 0xe3e9; 
0x000a0d16: inc esp; ret 0xec83; 
0x00031403: inc esp; ret 0xf289; 
0x000a5ce8: inc esp; ret 0xf821; 
0x00064b83: inc esp; ret 0xfa89; 
0x000a119e: inc esp; ret 0xff31; 
0x000c3490: inc esp; ret 0xff50; 
0x00095c38: inc esp; ret 0xfff9; 
0x00155605: inc esp; ret 4; 
0x001452cb: inc esp; ret 8; 
0x00026d36: inc esp; ret; 
0x00142e58: inc esp; ror byte ptr [ebx - 0x76f3dbbc], 1; adc edi, dword ptr [ecx]; ret 0x6c74; 
0x000a5336: inc esp; shl dword ptr [ecx], 1; ret 0x1a8b; 
0x00157d75: inc esp; stc; call dword ptr [eax + 0x52]; 
0x000a7a27: inc esp; stc; call dword ptr [eax + 0x57]; 
0x00143d99: inc esp; stc; call dword ptr [eax + 0x6a]; 
0x000a6679: inc esp; stc; call dword ptr [eax - 0x18]; 
0x000a6a78: inc esp; stc; call dword ptr [eax - 0x73]; 
0x00161d97: inc esp; stc; call dword ptr [eax - 1]; 
0x000a699f: inc esp; stc; call dword ptr [ebx + 0x50]; 
0x0014360b: inc esp; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x00095940: inc esp; xchg cl, bh; call dword ptr [eax - 0x18]; 
0x00156bdf: inc esp; xchg ebx, eax; add al, 0x83; ret 0x8301; 
0x0009109f: inc esp; xchg edi, eax; or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; call dword ptr gs:[0x10]; 
0x0003a6aa: inc esp; xor eax, 0xfc08400; xchg ebp, eax; ret; 
0x000a699e: inc sp; stc; call dword ptr [ebx + 0x50]; 
0x001ae001: insb byte ptr es:[edi], dx; adc dword ptr [ebx + eax*4], eax; ret 0x3908; 
0x00192ea0: insb byte ptr es:[edi], dx; adc eax, 0xd8f7fffd; sbb eax, eax; add esp, 0x2c; ret; 
0x0014e6d6: insb byte ptr es:[edi], dx; add al, 0; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00066a34: insb byte ptr es:[edi], dx; add al, 0; add byte ptr [ecx], bh; ret; 
0x000db117: insb byte ptr es:[edi], dx; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00179de4: insb byte ptr es:[edi], dx; add eax, 0x5e5b0000; pop edi; pop ebp; ret; 
0x00132fac: insb byte ptr es:[edi], dx; add eax, 0x65c58100; mov esi, 0x31570010; call dword ptr [esi + 0x53]; 
0x0015014d: insb byte ptr es:[edi], dx; and al, 0x14; add dword ptr [ecx], ebp; ret 0x828d; 
0x001b0dc5: insb byte ptr es:[edi], dx; and al, 0x18; add al, 0x39; ret 0x850f; 
0x000e6e75: insb byte ptr es:[edi], dx; and al, 0x38; add al, 0x8b; je 0xe6ea0; cmp byte ptr [ecx], ch; ret 0xc889; 
0x00070cd8: insb byte ptr es:[edi], dx; and al, 0x40; mov dword ptr [esp + 4], ecx; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x0016ef77: insb byte ptr es:[edi], dx; and al, 0x40; push ebp; push eax; call dword ptr [ecx + 8]; 
0x0003ba26: insb byte ptr es:[edi], dx; and al, 4; fadd st(0); mov dword ptr [eax], ecx; ret; 
0x0003bc65: insb byte ptr es:[edi], dx; and al, 4; fscale; fstp st(1); ret; 
0x0003ba1b: insb byte ptr es:[edi], dx; and al, 4; mov dword ptr [eax], ecx; ret; 
0x0002ba60: insb byte ptr es:[edi], dx; call edi; 
0x001961ad: insb byte ptr es:[edi], dx; cmp bh, bh; inc dword ptr [ecx + 0x453ffc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00133c96: insb byte ptr es:[edi], dx; dec ebp; out dx, eax; call dword ptr [eax - 0x18]; 
0x00024fb5: insb byte ptr es:[edi], dx; dec esp; push ss; add byte ptr [0x219e5b], al; lea eax, [eax - 0x690ac]; ret; 
0x00150eaa: insb byte ptr es:[edi], dx; fisttp word ptr [esi]; add byte ptr [ebx - 0x77], dl; ret; 
0x00153098: insb byte ptr es:[edi], dx; inc ecx; int1; call dword ptr [ebx + 0x50]; 
0x0009590e: insb byte ptr es:[edi], dx; insd dword ptr es:[edi], dx; stc; call dword ptr [eax - 0x73]; 
0x00075ee0: insb byte ptr es:[edi], dx; int 0xff; dec dword ptr [ebx - 0x51f73]; jmp dword ptr [ebp - 0x5f]; 
0x0004a30f: insb byte ptr es:[edi], dx; jbe 0x4a30b; call dword ptr [eax - 0x18]; 
0x0004d43a: insb byte ptr es:[edi], dx; jbe 0x4d436; call dword ptr [eax - 0x18]; 
0x0005123f: insb byte ptr es:[edi], dx; jbe 0x5123b; call dword ptr [eax - 0x18]; 
0x00059ba0: insb byte ptr es:[edi], dx; jbe 0x59b9c; call dword ptr [eax - 0x18]; 
0x000ca3eb: insb byte ptr es:[edi], dx; jbe 0xca3e7; call dword ptr [eax - 0x18]; 
0x000cd4ac: insb byte ptr es:[edi], dx; jbe 0xcd4a8; call dword ptr [eax - 0x18]; 
0x000d0d83: insb byte ptr es:[edi], dx; jbe 0xd0d7f; call dword ptr [eax - 0x18]; 
0x000d878d: insb byte ptr es:[edi], dx; jbe 0xd8789; call dword ptr [eax - 0x18]; 
0x00086f0d: insb byte ptr es:[edi], dx; jge 0x86ef4; call dword ptr [eax - 0x73]; 
0x00052f04: insb byte ptr es:[edi], dx; lea ecx, [ecx + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x00158d51: insb byte ptr es:[edi], dx; mov al, byte ptr [0x8d500000]; cmp dword ptr [ecx], -0xf; call dword ptr [eax - 0x18]; 
0x000ac4b0: insb byte ptr es:[edi], dx; mov cl, 0xf6; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x001541bf: insb byte ptr es:[edi], dx; mov dl, 0xf9; call dword ptr [eax - 0x73]; 
0x000ea0ad: insb byte ptr es:[edi], dx; mov dword ptr [eax + 0x6c], ebx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x00092cba: insb byte ptr es:[edi], dx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x0012178e: insb byte ptr es:[edi], dx; mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0012dd98: insb byte ptr es:[edi], dx; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x001216c8: insb byte ptr es:[edi], dx; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00140976: insb byte ptr es:[edi], dx; mov eax, 6; call dword ptr gs:[0x10]; 
0x00042229: insb byte ptr es:[edi], dx; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x00064bf9: insb byte ptr es:[edi], dx; mov edi, 0xfa89fff8; mov edi, ecx; jmp edx; 
0x0012d50c: insb byte ptr es:[edi], dx; movsd dword ptr es:[edi], dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x0008e59a: insb byte ptr es:[edi], dx; mul ah; call dword ptr [eax - 0x18]; 
0x000ba9c1: insb byte ptr es:[edi], dx; or al, 0; add ecx, 0x1124db; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00155d1e: insb byte ptr es:[edi], dx; or bh, cl; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x0012704f: insb byte ptr es:[edi], dx; or byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; dec dword ptr [ebp - 7]; call dword ptr [eax + 0x55]; 
0x00164978: insb byte ptr es:[edi], dx; pop ebp; bnd call dword ptr [eax - 0x18]; 
0x0002a75e: insb byte ptr es:[edi], dx; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x0002f09a: insb byte ptr es:[edi], dx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0002d94c: insb byte ptr es:[edi], dx; push -7; call dword ptr [eax + 0x68]; 
0x0002d600: insb byte ptr es:[edi], dx; push -7; call dword ptr [eax - 0x73]; 
0x0008cca0: insb byte ptr es:[edi], dx; push cs; add byte ptr [eax], al; ret; 
0x0002ba5c: insb byte ptr es:[edi], dx; push dword ptr [esp + 0x6c]; call edi; 
0x00029d60: insb byte ptr es:[edi], dx; push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0002dc96: insb byte ptr es:[edi], dx; push eax; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0002c8b2: insb byte ptr es:[edi], dx; push eax; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x00136be0: insb byte ptr es:[edi], dx; push ebp; stc; call dword ptr [eax - 1]; 
0x00136b6d: insb byte ptr es:[edi], dx; push ebp; stc; call dword ptr [edx + 0x50]; 
0x00166dfb: insb byte ptr es:[edi], dx; push esp; int1; call dword ptr [eax - 0x73]; 
0x00064289: insb byte ptr es:[edi], dx; ret 0xfff8; 
0x000472be: insb byte ptr es:[edi], dx; ret 0xfff9; 
0x000650b9: insb byte ptr es:[edi], dx; sar al, 0xff; mov edx, edi; mov edi, ecx; jmp edx; 
0x00064894: insb byte ptr es:[edi], dx; sar eax, 0xff; jmp eax; 
0x00065948: insb byte ptr es:[edi], dx; sar eax, 0xff; mov edx, edi; mov edi, eax; jmp edx; 
0x000a18ab: insb byte ptr es:[edi], dx; sbb ah, dh; call dword ptr [eax + 0x57]; 
0x001981ad: insb byte ptr es:[edi], dx; sbb bh, bh; inc dword ptr [ecx + 0x4367fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0002889c: insb byte ptr es:[edi], dx; stc; call dword ptr [eax + 0x68]; 
0x00024f98: insb byte ptr es:[edi], dx; stc; call dword ptr [eax + 0x6a]; 
0x000287de: insb byte ptr es:[edi], dx; stc; call dword ptr [eax - 0x73]; 
0x001870b7: insb byte ptr es:[edi], dx; sti; jmp dword ptr [esi - 0x70]; 
0x000ac280: insb byte ptr es:[edi], dx; stosb byte ptr es:[edi], al; idiv bh; cmovne eax, edx; ret; 
0x0005f671: insb byte ptr es:[edi], dx; sub eax, dword ptr gs:[0x14]; jne 0x5f68e; add esp, 0x78; pop ebx; ret; 
0x00113544: insb byte ptr es:[edi], dx; sub edx, dword ptr gs:[0x14]; jne 0x113566; add esp, 0x78; pop ebx; ret; 
0x00132894: insb byte ptr es:[edi], dx; sub edx, dword ptr gs:[0x14]; jne 0x1328a2; add esp, 0x7c; ret; 
0x0006163f: insb byte ptr es:[edi], dx; sub edx, dword ptr gs:[0x14]; jne 0x6164e; add esp, 0x78; pop ebx; ret; 
0x000f0d74: insb byte ptr es:[edi], dx; sub edx, dword ptr gs:[0x14]; jne 0xf0d96; add esp, 0x78; pop ebx; ret; 
0x000f38b4: insb byte ptr es:[edi], dx; sub edx, dword ptr gs:[0x14]; jne 0xf38d6; add esp, 0x78; pop ebx; ret; 
0x000f46b4: insb byte ptr es:[edi], dx; sub edx, dword ptr gs:[0x14]; jne 0xf46d6; add esp, 0x78; pop ebx; ret; 
0x000f71e4: insb byte ptr es:[edi], dx; sub edx, dword ptr gs:[0x14]; jne 0xf7206; add esp, 0x78; pop ebx; ret; 
0x000f7ff4: insb byte ptr es:[edi], dx; sub edx, dword ptr gs:[0x14]; jne 0xf8016; add esp, 0x78; pop ebx; ret; 
0x00167078: insb byte ptr es:[edi], dx; test dl, dh; call dword ptr [eax - 0x18]; 
0x00158cd8: insb byte ptr es:[edi], dx; wait; int1; call dword ptr [eax - 1]; 
0x00031fda: insb byte ptr es:[edi], dx; xchg bh, dh; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x00040262: insb byte ptr es:[edi], dx; xor ecx, ecx; mov ebx, 0; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x000587de: insd dword ptr es:[edi], dx; add al, 0; add byte ptr [ebx - 0x36677b], al; jmp eax; 
0x0012b411: insd dword ptr es:[edi], dx; add esp, 0x24; mov eax, edx; pop ebx; pop esi; ret; 
0x0008e11b: insd dword ptr es:[edi], dx; cli; call dword ptr [eax + 0x6a]; 
0x0007ca66: insd dword ptr es:[edi], dx; cli; jmp dword ptr [esi - 0x70]; 
0x000c1302: insd dword ptr es:[edi], dx; lea esi, cs:[esi]; lea esi, cs:[esi]; xor eax, eax; ret; 
0x000d86ff: insd dword ptr es:[edi], dx; mov ecx, 0xb58bfff5; ror cl, 0xff; dec dword ptr [ebp - 0x687cb7a]; call dword ptr [eax - 0x73]; 
0x0012e1dc: insd dword ptr es:[edi], dx; out dx, eax; push dword ptr [ecx + eax - 0x3d]; mov ebp, esi; call ebx; 
0x000bd609: insd dword ptr es:[edi], dx; stc; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00078e82: insd dword ptr es:[edi], dx; stc; call dword ptr [eax - 0x73]; 
0x000c09c0: insd dword ptr es:[edi], dx; xchg edx, eax; or al, 0; add ecx, 0x10c6b0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000efa9b: int 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000df1cf: int 0x3f; hlt; call ptr [eax - 1]; je 0xdf1fb; and al, 0xe8; ret; 
0x000f0bc6: int 0x5b; ret; 
0x0003a41c: int 0x80; 
0x0010e406: int 0x80; push ecx; cmp eax, 0xfffff001; jae 0x24f50; ret; 
0x0003898f: int 0x83; in al, dx; or al, 0x83; ret; 
0x00152722: int 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000299e8: int 0xf; test dword ptr [edi], eax; add dword ptr [eax], eax; add byte ptr [ebx - 0x72c3db8c], cl; xchg byte ptr [ebx + ebp*2 - 7], ch; call dword ptr [eax - 0x73]; 
0x0019ce69: int 0xfe; inc dword ptr [ecx + 0x3f244c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019ceb6: int 0xfe; inc dword ptr [ecx + 0x3f2b7c3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x00075ee1: int 0xff; dec dword ptr [ebx - 0x51f73]; jmp dword ptr [ebp - 0x5f]; 
0x001179d9: int 0xff; jmp dword ptr [ebp - 0x5f]; 
0x0015a239: int 2; add byte ptr [ebx - 0x2776ef3c], al; call eax; 
0x000de8bd: int1; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; sub dword ptr [eax], -0x62; stc; call dword ptr [eax - 0x18]; 
0x000a86be: int1; add eax, 1; test dl, dl; mov edx, 0; cmove eax, edx; ret; 
0x0019cf6b: int1; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0009109c: int1; add edi, 0x89744; add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; call dword ptr gs:[0x10]; 
0x0008f31b: int1; and dword ptr [ebp - 1], 0x1015; add byte ptr [ebx + 0x5e], bl; ret; 
0x0015d4a9: int1; call dword ptr [eax + 0x6a]; 
0x00157e4a: int1; call dword ptr [eax - 0x18]; 
0x00157f06: int1; call dword ptr [eax - 0x73]; 
0x0016583f: int1; call dword ptr [eax - 0x73]; sbb dword ptr [eax + 0x61], -7; call dword ptr [eax - 0x18]; ret 0xfef2; 
0x00158cda: int1; call dword ptr [eax - 1]; 
0x0015309a: int1; call dword ptr [ebx + 0x50]; 
0x001a3304: int1; call dword ptr [ebx - 0x18]; 
0x000a0c04: int1; call dword ptr [edx + 0x51]; 
0x0015e466: int1; call dword ptr [edx + 0x6a]; 
0x00152d0d: int1; call dword ptr [esi + 0x50]; 
0x0009f4fe: int1; call dword ptr gs:[0x10]; 
0x000ed470: int1; clc; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x0016ebec: int1; cld; call dword ptr [eax - 0x4e1f00d]; ret; 
0x000aa2f9: int1; cmc; inc dword ptr [eax - 0x6d72fd1b]; mov esp, 0xfffe83d; inc esp; ret 0x66c3; 
0x00107b83: int1; dec dword ptr [ebx - 0x17d3dbbc]; ret 0xff59; 
0x00196c41: int1; dec ebx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0011bb23: int1; dec ecx; stc; call dword ptr [eax - 0x18]; 
0x0010a024: int1; inc dword ptr [ebx + 0x478910c4]; sbb al, 0x89; ret 0xc085; 
0x00142448: int1; inc dword ptr [ebx - 0x2776d73c]; pop ebx; ret; 
0x0010cba3: int1; inc dword ptr [ebx - 0x3fceef3c]; pop ebx; pop esi; pop edi; ret; 
0x0010be8d: int1; inc ebx; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x0010bead: int1; inc ebx; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x0010e3fd: int1; inc ebx; pop ecx; mov eax, 0xbe; int 0x80; 
0x00130d5b: int1; inc ecx; out dx, eax; inc ebx; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x000f0a5b: int1; inc esp; inc ebx; mov eax, 0x41; call dword ptr gs:[0x10]; 
0x0018c701: int1; jmp dword ptr [esi - 0x70]; 
0x00138e7b: int1; mov cl, 0xef; dec dword ptr [ebx - 0x72dfdb84]; xchg dword ptr [ecx + ebp*4], edx; stc; call dword ptr [eax - 0x73]; 
0x000402c5: int1; mov eax, 0x163; xor edx, edx; sub ecx, ebx; call dword ptr gs:[0x10]; 
0x000aba5e: int1; mov eax, edx; pop ebx; ret; 
0x00042d9a: int1; mov eax, edx; ret; 
0x0009a42c: int1; mov ebx, dword ptr [esp + 0xa0]; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x0018526e: int1; mov edx, dword ptr [ecx]; add edx, dword ptr [eax + 8]; mov dword ptr [ebx + 0xc], edx; pop ebx; ret; 
0x0015c80e: int1; mov edx, dword ptr [edx + 8]; pop ebx; pop esi; mov eax, edx; ret; 
0x0011546e: int1; mov edx, ebp; call dword ptr gs:[0x10]; 
0x001154aa: int1; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00115294: int1; mov edx, edi; call dword ptr gs:[0x10]; 
0x00115312: int1; mov edx, edi; mov dword ptr [esp + 4], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000baa83: int1; or al, 0; add ecx, 0x11241a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000baa5e: int1; or al, 0; add ecx, 0x11243f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000baa3e: int1; or al, 0; add ecx, 0x11245f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00042e22: int1; pop ds; add ecx, 1; pop ebx; mov eax, ecx; ret; 
0x00043154: int1; pop ds; lea eax, [ecx + 0x20]; pop ebx; ret; 
0x0004297a: int1; pop ds; shr eax, cl; ret; 
0x000abb5e: int1; pop ebx; pop esi; ret; 
0x00053c2e: int1; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x001aa342: int1; pop edi; ret; 
0x00127264: int1; push ecx; stc; call dword ptr [eax + 0x55]; 
0x000fed2b: int1; push edx; cld; dec dword ptr [ebx - 0x76efdbb4]; ret 0x448b; 
0x00172f4b: int1; ret 0xfff7; 
0x00084ef9: int1; stc; jmp dword ptr [esi - 0x70]; 
0x001a9337: int1; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x00031d9e: int1; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x00097cc1: int1; xchg dword ptr [eax + 0xf0], edi; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x0009b994: int1; xor eax, eax; pop ebx; ret; 
0x000a6dce: int1; xor eax, eax; ret; 
0x0015a0a4: into; add al, byte ptr [eax]; add esp, 0x10; mov eax, dword ptr [esp]; call eax; 
0x00032525: into; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; adc dword ptr [ecx + 0x2c], -7; call dword ptr [eax - 0x18]; 
0x000d75e5: into; add dword ptr [eax], eax; add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x001337a7: into; add dword ptr [ebx + 0x18], edi; call dword ptr gs:[0x10]; 
0x000bd551: into; bsf edx, edx; call 0x189c31; add ecx, 0x10fa1a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bd533: into; bsf edx, edx; call 0x189c31; add ecx, 0x10fa38; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba863: into; bsf edx, edx; call 0x189c31; add ecx, 0x1125b4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c09fb: into; call 0x189c31; add ecx, 0x10c673; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c09db: into; call 0x189c31; add ecx, 0x10c693; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c09be: into; call 0x189c31; add ecx, 0x10c6b0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000baa5b: into; call 0x189c31; add ecx, 0x11243f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000baa3b: into; call 0x189c31; add ecx, 0x11245f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000baa1e: into; call 0x189c31; add ecx, 0x11247c; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b941b: into; call 0x189c31; add ecx, 0x11391f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b93fb: into; call 0x189c31; add ecx, 0x11393f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b93de: into; call 0x189c31; add ecx, 0x11395c; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00108950: into; call dword ptr [edi - 0x18]; 
0x0010bdec: into; call dword ptr gs:[0x10]; 
0x0010bde9: into; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x000d46f9: into; idiv bh; and ch, 2; lea edx, [edx - 0x165354]; cmove eax, edx; ret; 
0x000c21e3: into; jmp ebx; 
0x000c2b30: into; jne 0xc2b36; lea eax, [esi + 3]; pop esi; pop edi; ret; 
0x00138e9e: into; mov cl, 0xef; dec dword ptr [ebx - 0x72dfdb84]; xchg dword ptr [ecx + ebp*4], edx; stc; call dword ptr [eax - 0x73]; 
0x00046ea6: into; mov eax, esi; pop esi; pop edi; ret; 
0x0008e6ce: into; mov ebp, 0xf0; mov ecx, 0x80; xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x00033448: into; mov ecx, 0x31570020; call dword ptr [esi - 0x42]; 
0x000b935f: into; or byte ptr [0xddc18100], cl; cmp dword ptr [ecx], edx; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00115b63: into; or byte ptr [ebp - 0x75], ah; sub eax, 0x14; mov dword ptr [esp + 0x18c], ebp; mov ebp, dword ptr [esp + 0x1b8]; call dword ptr gs:[0x10]; 
0x000ca6ee: into; pop es; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0015a0c3: into; pop esi; stc; call dword ptr [eax + 0x55]; 
0x00158ee4: into; pop esi; stc; call dword ptr [eax - 0x18]; 
0x000d0e86: into; push es; add byte ptr [ebx - 0x72d3db84], cl; xchg dword ptr [ebp + ebx*4 - 7], esp; call dword ptr [eax - 0x73]; 
0x001642d2: into; pushal; stc; call dword ptr [eax - 0x18]; 
0x00164485: into; pushal; stc; call dword ptr [eax - 0x73]; 
0x0012d857: into; ret; 
0x000288ae: into; sub bh, cl; call dword ptr [eax - 0x18]; 
0x00024f14: into; sub cl, bh; call dword ptr [eax - 1]; 
0x00198063: iretd; aaa; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000b7a7d: iretd; add dword ptr [eax], eax; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x0019b73a: iretd; add edx, edi; lea eax, [edi + eax + 0xa]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b7ca: iretd; add edx, edi; lea eax, [edi + eax + 0xb]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b85a: iretd; add edx, edi; lea eax, [edi + eax + 0xc]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b8ea: iretd; add edx, edi; lea eax, [edi + eax + 0xd]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b97a: iretd; add edx, edi; lea eax, [edi + eax + 0xe]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019ba0a: iretd; add edx, edi; lea eax, [edi + eax + 0xf]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b22a: iretd; add edx, edi; lea eax, [edi + eax + 1]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b2ba: iretd; add edx, edi; lea eax, [edi + eax + 2]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b34a: iretd; add edx, edi; lea eax, [edi + eax + 3]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b3da: iretd; add edx, edi; lea eax, [edi + eax + 4]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b46a: iretd; add edx, edi; lea eax, [edi + eax + 5]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b4fa: iretd; add edx, edi; lea eax, [edi + eax + 6]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b58a: iretd; add edx, edi; lea eax, [edi + eax + 7]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b61a: iretd; add edx, edi; lea eax, [edi + eax + 8]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b6aa: iretd; add edx, edi; lea eax, [edi + eax + 9]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000baa1c: iretd; add esi, ecx; call 0x189c31; add ecx, 0x11247c; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b93dc: iretd; add esi, ecx; call 0x189c31; add ecx, 0x11395c; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00179037: iretd; dec dword ptr [ebp - 0xcf5b34a]; call dword ptr [ebp - 0x73]; 
0x000658a8: iretd; jmp eax; 
0x00064624: iretd; jmp edx; 
0x00084452: iretd; mov dword ptr [ebx], eax; pop ebx; pop esi; pop edi; ret; 
0x000644f0: iretd; mov dword ptr [esp + 0x10], 0; jmp edx; 
0x000644a0: iretd; mov dword ptr [esp + 0x10], 1; jmp edx; 
0x00064ef5: iretd; mov dword ptr [esp + 0x1c], 1; jmp edx; 
0x00065164: iretd; mov dword ptr [esp + 0x44], 0; jmp edx; 
0x00131ae2: iretd; mov eax, 0x1a1; mov ecx, edx; mov edx, edi; mov edi, ebp; call dword ptr gs:[0x10]; 
0x0009424a: iretd; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x00094244: iretd; mov ebx, dword ptr [eax + 0x68]; cmovbe ecx, edi; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x0009803a: iretd; or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x00036810: iretd; pop ebx; pop esi; pop edi; ret; 
0x001955e3: iretd; pop edi; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000875ca: iretd; ret; 
0x00199fe3: iretd; sbb al, byte ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0008cc96: iretd; sldt word ptr [0x1b217b]; mov eax, dword ptr [eax + 0xe6c]; ret; 
0x0010c11e: ja 0x10c128; pop ebx; pop esi; ret; 
0x0010ce02: ja 0x10ce0d; mov eax, dword ptr [esp + 4]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x0010ce60: ja 0x10ce6e; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x001132dc: ja 0x1132e8; pop ebx; pop esi; ret; 
0x00114659: ja 0x114660; pop ebx; ret; 
0x001146c9: ja 0x1146d0; pop ebx; ret; 
0x00114753: ja 0x1147a0; add esp, 0x14; pop ebx; pop esi; ret; 
0x001149d7: ja 0x114a20; add esp, 0x14; pop ebx; pop esi; ret; 
0x00114ac9: ja 0x114ad0; pop ebx; ret; 
0x0011605f: ja 0x116068; pop ebx; pop esi; ret; 
0x00117a56: ja 0x117a68; mov edx, dword ptr [esp + 8]; mov word ptr [edx + 0x3e], ax; xor eax, eax; ret; 
0x001194f6: ja 0x119508; mov edx, dword ptr [esp + 8]; mov word ptr [edx + 0x42], ax; xor eax, eax; ret; 
0x0011af96: ja 0x11afa8; mov edx, dword ptr [esp + 8]; mov word ptr [edx + 0x42], ax; xor eax, eax; ret; 
0x0011b83f: ja 0x11b84d; call dword ptr [edi + 0x24]; 
0x0011babb: ja 0x11bac9; call dword ptr [edi + 0x24]; 
0x0011c96f: ja 0x11c97d; call dword ptr [edi + 0x24]; 
0x0011cbeb: ja 0x11cbf9; call dword ptr [edi + 0x24]; 
0x0011dadf: ja 0x11daed; call dword ptr [edi + 0x24]; 
0x0011dd5b: ja 0x11dd69; call dword ptr [edi + 0x24]; 
0x0011f0e9: ja 0x11f0f0; pop ebx; ret; 
0x0011f609: ja 0x11f610; pop ebx; ret; 
0x0011f71d: ja 0x11f728; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x0011fce7: ja 0x11fcf0; pop ebx; ret; 
0x0011fd7c: ja 0x11fdd0; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x001207ac: ja 0x120800; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0012086e: ja 0x120878; pop ebx; pop esi; ret; 
0x001208f5: ja 0x120900; pop ebx; ret; 
0x00120953: ja 0x120960; pop ebx; pop esi; pop edi; ret; 
0x001209b3: ja 0x1209c0; pop ebx; pop esi; pop edi; ret; 
0x00120c0f: ja 0x120c18; pop ebx; pop esi; ret; 
0x00121009: ja 0x121010; pop ebx; ret; 
0x00121515: ja 0x121520; pop ebx; ret; 
0x0012195c: ja 0x1219b0; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00121a35: ja 0x121a40; pop ebx; ret; 
0x00121f85: ja 0x121fa0; pop ebx; pop esi; pop edi; ret; 
0x00122002: ja 0x122020; pop ebx; pop esi; pop edi; ret; 
0x00122084: ja 0x1220a0; pop ebx; pop esi; pop edi; ret; 
0x00122101: ja 0x122120; pop ebx; pop esi; pop edi; ret; 
0x00122178: ja 0x122180; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001221ce: ja 0x1221d8; pop ebx; pop esi; ret; 
0x0012256e: ja 0x122578; pop ebx; pop esi; ret; 
0x00122d1e: ja 0x122d78; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00122fb9: ja 0x122fc0; pop ebx; ret; 
0x00123009: ja 0x123010; pop ebx; ret; 
0x0012311f: ja 0x123128; pop ebx; pop esi; pop edi; ret; 
0x0012317f: ja 0x123188; pop ebx; pop esi; pop edi; ret; 
0x00124863: ja 0x1248b0; add esp, 0x14; pop ebx; pop esi; ret; 
0x00124db3: ja 0x124e00; add esp, 0x14; pop ebx; pop esi; ret; 
0x00124e69: ja 0x124e70; pop ebx; ret; 
0x00124ebe: ja 0x124ec8; pop ebx; pop esi; ret; 
0x001283ee: ja 0x1283f8; pop ebx; pop esi; ret; 
0x001295cc: ja 0x129620; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0012ac7c: ja 0x12acd0; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0012ad40: ja 0x12ad48; pop ebx; pop esi; ret; 
0x0012c479: ja 0x12c480; pop ebx; ret; 
0x0012c4ce: ja 0x12c4d8; pop ebx; pop esi; ret; 
0x0012c521: ja 0x12c550; sub esp, 4; push edi; push 1; push ebx; call esi; 
0x0012c5b1: ja 0x12c5e0; sub esp, 4; push edi; push 1; push ebx; call esi; 
0x0012d6c3: ja 0x12d6d0; mov eax, ecx; pop ebx; ret; 
0x0012d88c: ja 0x12d8e0; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0012e875: ja 0x12e880; pop ebx; ret; 
0x0012ef19: ja 0x12ef20; pop ebx; ret; 
0x0012f02c: ja 0x12f038; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x0012f090: ja 0x12f098; ret; 
0x0012f199: ja 0x12f1a0; pop ebx; ret; 
0x0012f2b3: ja 0x12f2f0; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0012f34c: ja 0x12f3a0; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0012f488: ja 0x12f4a8; pop ebx; pop esi; pop edi; ret; 
0x0012f743: ja 0x12f750; pop ebx; pop esi; pop edi; ret; 
0x0012fa23: ja 0x12fa30; pop ebx; pop esi; pop edi; ret; 
0x0012fb74: ja 0x12fb80; pop ebx; pop esi; pop edi; ret; 
0x00130299: ja 0x1302a0; pop ebx; ret; 
0x00130559: ja 0x130560; pop ebx; ret; 
0x00132ae5: ja 0x132af0; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00132fd7: ja 0x132fe0; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00133693: ja 0x1336a0; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001336f7: ja 0x133700; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0013c8db: ja 0x13c8e4; sar eax, 5; add esp, 0xc; ret; 
0x0013e156: ja 0x13e14c; jmp dword ptr [esi - 0x70]; 
0x00147e8c: ja 0x147e17; ret 0x4439; 
0x00153ff5: ja 0x153ff7; out dx, al; jmp dword ptr [esi - 0x70]; 
0x001752de: ja 0x175263; les ebx, ptr [eax]; pop ebx; ret; 
0x0017d685: ja 0x17d68d; cld; jmp dword ptr [esi - 0x70]; 
0x00188e1c: ja 0x188e2d; mov eax, edx; mov edx, dword ptr [ecx + 0x108]; shl eax, 5; lea eax, [eax + edx + 0x5c]; ret; 
0x0018a11e: ja 0x18a320; sub esp, 8; push 0; push esi; call dword ptr [ebx + 8]; 
0x0018b22b: ja 0x18b2f8; sub esp, 4; push ebp; push edi; push ebx; call dword ptr [esi + 0x3c]; 
0x0018b754: ja 0x18b838; sub esp, 0xc; push esi; call dword ptr [ebx + 0x44]; 
0x0018b8ad: ja 0x18b8c0; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x0018c4e7: ja 0x18c4f0; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x001904df: ja 0x1904e8; pop ebx; pop esi; ret; 
0x00192997: ja 0x1929a0; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00192aa7: ja 0x192ab0; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0019c17b: ja 0x19c17a; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019f3b5: ja 0x19f3b9; neg eax; ret; 
0x001a0bf5: ja 0x1a0bf9; neg eax; pop ebp; ret; 
0x001a32a5: ja 0x1a32a9; neg eax; add esp, 4; pop ebx; ret; 
0x001a5b35: ja 0x1a5b39; neg eax; add esp, 4; pop ebp; pop ebx; ret; 
0x001a5ff5: ja 0x1a5ff9; neg eax; ret; 
0x001a62e5: ja 0x1a62e9; neg eax; pop ebp; ret; 
0x001a64a5: ja 0x1a64a9; neg eax; ret; 
0x001a6f8c: ja 0x1a6f90; neg eax; ret; 
0x001a7305: ja 0x1a7309; neg eax; pop edi; pop ebx; ret; 
0x001a7865: ja 0x1a7869; neg eax; pop edi; pop ebp; pop ebx; ret; 
0x001a81fd: ja 0x1a8201; neg eax; ret; 
0x001a9876: ja 0x1a987a; neg eax; ret; 
0x00189980: ja 0x24a42; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0003c75a: ja 0x3c75c; add byte ptr [eax], al; int 0x80; 
0x0003c9aa: ja 0x3c9b0; pop ebx; ret; 
0x0003ca08: ja 0x3ca50; add esp, 0x14; pop ebx; pop esi; ret; 
0x0004041c: ja 0x40470; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0004a2ca: ja 0x4a2c5; call dword ptr [eax - 0x18]; 
0x0004a356: ja 0x4a351; call dword ptr [eax - 0x18]; 
0x0004d5cf: ja 0x4d5ca; call dword ptr [eax - 0x18]; 
0x0004d611: ja 0x4d60c; call dword ptr [eax - 0x18]; 
0x0005121d: ja 0x51218; call dword ptr [eax - 0x18]; 
0x00051286: ja 0x51281; call dword ptr [eax - 0x18]; 
0x00059cf3: ja 0x59cee; call dword ptr [eax - 0x18]; 
0x00059d18: ja 0x59d13; call dword ptr [eax - 0x18]; 
0x00060b85: ja 0x60b46; add dword ptr [eax], eax; cmp eax, 1; sbb eax, eax; add esp, 0x1c; ret; 
0x000612d9: ja 0x612e0; pop ebx; ret; 
0x00061333: ja 0x61340; pop ebx; pop esi; pop edi; ret; 
0x00079483: ja 0x794c0; sub esp, 4; push ebx; push edi; push eax; call dword ptr [ebp + 0x1c]; 
0x0007b29d: ja 0x7b3b0; sub esp, 8; lea eax, [esp + 8]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x0007b426: ja 0x7b690; sub esp, 8; push 0; push esi; call dword ptr [ebx + 8]; 
0x0007b8da: ja 0x7b958; push 2; push 0; push 0; push ebp; call dword ptr [esi + 0x40]; 
0x0007b9b3: ja 0x7bab0; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x0007bf19: ja 0x7bf15; jmp dword ptr [esi - 0x70]; 
0x0007c43f: ja 0x7c530; sub esp, 4; push edi; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x0007cb96: ja 0x7ccf0; sub esp, 4; push edi; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x0007d56e: ja 0x7d599; sub esp, 4; push esi; push ecx; push ebx; call dword ptr [ebp + 0x1c]; 
0x0007e837: ja 0x7e8d1; sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x0007f8f6: ja 0x7f950; sub esp, 4; push edi; push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x0007f9ed: ja 0x7fa10; sub esp, 4; push esi; push dword ptr [esp + 0x38]; push edi; call dword ptr [eax + 0x1c]; 
0x0007fd34: ja 0x7fd5f; sub esp, 4; push esi; push edx; push ebx; call dword ptr [ebp + 0x1c]; 
0x00080d71: ja 0x80da8; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x00081513: ja 0x81540; sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x0008277c: ja 0x829c8; sub esp, 8; push -1; push dword ptr [ebx]; call dword ptr [edi + 0xc]; 
0x000849cc: ja 0x84bf0; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x00086290: ja 0x86480; mov eax, dword ptr [ebp - 0x3c]; sub esp, 0xc; push esi; call dword ptr [eax + 0x30]; 
0x000876f5: ja 0x87720; sub esp, 0xc; push ebx; call dword ptr [esi + 0x30]; 
0x0008795c: ja 0x879c0; sub esp, 4; push esi; push dword ptr [esp + 0x38]; push ebp; call dword ptr [eax + 0x1c]; 
0x00087adc: ja 0x87b20; sub esp, 4; push esi; push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x00088268: ja 0x88390; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x000883fe: ja 0x88440; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x000884e4: ja 0x88558; push 2; push 0; push 0; push ebx; call dword ptr [esi + 0x40]; 
0x00088a25: ja 0x889ce; stc; jmp dword ptr [ebp - 0x75]; 
0x00088f38: ja 0x88fa0; sub esp, 8; push -1; push dword ptr [ecx]; call dword ptr [eax + 0xc]; 
0x00089b9a: ja 0x89c58; push 0; push edi; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x00089ccb: ja 0x89cf0; push dword ptr [esp + 0x2c]; push ebp; push edi; push ebx; call dword ptr [esi + 0x40]; 
0x0008a13a: ja 0x8a238; sub esp, 4; push eax; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x0008a3a6: ja 0x8a3be; sub esp, 4; push edx; push dword ptr [esp + 0x3c]; push ebp; call dword ptr [esi + 0x20]; 
0x0008b427: ja 0x8b480; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x0008b4d1: ja 0x8b4f8; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x0008b7c9: ja 0x8b878; sub esp, 0xc; push esi; call dword ptr [ebp + 0x30]; 
0x0008bcb6: ja 0x8bcf0; sub esp, 8; push esi; push ebx; call dword ptr [edi + 0x18]; 
0x0008c7a9: ja 0x8c8b6; sub esp, 4; push 0; push 0; push esi; call dword ptr [ebp + 0x2c]; 
0x0008f832: ja 0x8f840; pop ebx; pop esi; pop edi; ret; 
0x00090903: ja 0x90910; ret; 
0x00090c3b: ja 0x90c50; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00098179: ja 0x98180; pop ebx; pop esi; pop edi; ret; 
0x00099aeb: ja 0x99b00; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00099b1b: ja 0x99b30; mov edx, dword ptr [esp + 4]; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x0009f195: ja 0x9f1a0; pop ebx; ret; 
0x0009f6ee: ja 0x9f710; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x0009f81e: ja 0x9f828; pop ebx; pop esi; ret; 
0x0009fe0f: ja 0x9fe18; mov eax, ecx; pop ebx; ret; 
0x000a01ed: ja 0xa01f8; pop ebx; ret; 
0x000a84d1: ja 0xa84b0; pop ebx; pop esi; pop edi; ret; 
0x000a94f8: ja 0xa9501; mov eax, dword ptr [ecx + edx*4 - 0xe34]; ret; 
0x000a9528: ja 0xa9531; mov eax, dword ptr [ecx + edx*4 - 0xd14]; ret; 
0x000c1092: ja 0xc10a0; sub edi, 0x10; add eax, edi; pop edi; ret; 
0x000c4aba: ja 0xc4ac4; call ebx; 
0x000c4b4f: ja 0xc4b59; call ebx; 
0x000ca455: ja 0xca450; call dword ptr [eax - 0x18]; 
0x000ca54a: ja 0xca545; call dword ptr [eax - 0x18]; 
0x000cd444: ja 0xcd43f; call dword ptr [eax - 0x18]; 
0x000cd516: ja 0xcd511; call dword ptr [eax - 0x18]; 
0x000d0d5a: ja 0xd0d55; call dword ptr [eax - 0x18]; 
0x000d0e85: ja 0xd0e55; push es; add byte ptr [ebx - 0x72d3db84], cl; xchg dword ptr [ebp + ebx*4 - 7], esp; call dword ptr [eax - 0x73]; 
0x000d0ee9: ja 0xd0ee4; call dword ptr [eax - 0x18]; 
0x000d86fa: ja 0xd86f5; call dword ptr [eax - 0x18]; 
0x000d87b3: ja 0xd87ae; call dword ptr [eax - 0x18]; 
0x000dbe17: ja 0xdbe20; pop ebx; ret; 
0x000e79e0: ja 0xe7a90; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000e7b3a: ja 0xe7bd8; lea ecx, [esp + 0xc]; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000e8c08: ja 0xe8c10; pop ebx; pop esi; ret; 
0x000eabb8: ja 0xeabc0; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000fb5fe: ja 0xfb640; add esp, 0x18; pop ebx; ret; 
0x0012b817: jae 0x12b819; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00134781: jae 0x13478e; mov eax, dword ptr [ecx + 0x4794]; add word ptr [eax + ebx*2], 1; pop ebx; ret; 
0x001373c9: jae 0x1373a0; add esp, 4; pop ebx; pop esi; ret; 
0x0013ac81: jae 0x13acb3; call eax; 
0x0013be15: jae 0x13be20; cmp dword ptr [eax + 4], ecx; jne 0x13be10; mov eax, dword ptr [eax + 0x18]; ret; 
0x0013d3d3: jae 0x13d3c3; jmp dword ptr [esi - 0x70]; 
0x00141d0d: jae 0x141d22; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x00141fcd: jae 0x141fd8; mov eax, ebx; shl eax, 4; lea eax, [edx + eax + 8]; pop ebx; ret; 
0x0014bddc: jae 0x14bdcb; jmp dword ptr [ebp - 0x5f]; 
0x0015c559: jae 0x15c55f; push dword ptr [ebx]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x3c]; call esi; 
0x00165289: jae 0x165215; std; jmp dword ptr [esi - 0x70]; 
0x0016fa3e: jae 0x16fa48; push esi; call dword ptr [ebx + 0xc]; 
0x00176b2c: jae 0x176b76; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x00178732: jae 0x17872b; inc dword ptr [ebx + 0x548d08ec]; and al, 0x20; push edx; push eax; call edi; 
0x0017ceba: jae 0x17cec8; add dword ptr [esi + 0x14], edi; pop ebx; pop esi; pop edi; ret; 
0x00184c9a: jae 0x184c84; mov al, byte ptr [0x89fff6a5]; ret; 
0x00185208: jae 0x1851f0; mov eax, 1; pop ebx; ret; 
0x0018658b: jae 0x186591; call dword ptr [edx + 0x380]; mov dword ptr [ebx + 8], eax; add esp, 0x28; pop ebx; ret; 
0x001865dd: jae 0x1865e3; call dword ptr [edx + 0x380]; mov dword ptr [ebx + 8], eax; add esp, 0x28; pop ebx; ret; 
0x00186b14: jae 0x186b1a; call dword ptr [edx + 0x380]; mov dword ptr [ebx], eax; add esp, 0x28; pop ebx; ret; 
0x00193326: jae 0x193340; call 0x189c1d; add ebx, 0x47e03; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00193440: jae 0x193400; call 0x189c1d; add ebx, 0x47ce9; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x001939a6: jae 0x1939c0; call 0x189c1d; add ebx, 0x47a03; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x001a67f9: jae 0x1a6802; add byte ptr [eax], al; pop ebx; ret; 
0x001a9cf9: jae 0x1a9cfd; add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x0003c96d: jae 0x24f50; ret; 
0x0004027c: jae 0x24f50; xor eax, eax; ret; 
0x00025d54: jae 0x25d5a; call edi; 
0x00025db6: jae 0x25dbc; call edi; 
0x00031ad7: jae 0x31ad2; call dword ptr [eax - 0x18]; 
0x00031d13: jae 0x31d0e; call dword ptr [eax - 0x73]; 
0x00031d38: jae 0x31d33; call dword ptr [eax - 0x73]; 
0x00031d8c: jae 0x31d87; call dword ptr [eax - 0x73]; 
0x00031ec0: jae 0x31ebb; call dword ptr [eax - 0x73]; 
0x0003251a: jae 0x32515; call dword ptr [eax - 0x73]; 
0x0003340d: jae 0x33426; mov edx, dword ptr [ebx + eax*4 + 0x20]; pop ebx; mov eax, edx; ret; 
0x0003ef57: jae 0x3ef5d; call eax; 
0x000402c2: jae 0x402e9; mov ecx, esi; mov eax, 0x163; xor edx, edx; sub ecx, ebx; call dword ptr gs:[0x10]; 
0x0004a236: jae 0x4a267; stc; call dword ptr [eax - 0x18]; 
0x0004d4f0: jae 0x4d521; stc; call dword ptr [eax - 0x18]; 
0x000513c0: jae 0x513f1; stc; call dword ptr [eax - 0x18]; 
0x00053e78: jae 0x53e70; mov eax, edx; pop ebx; pop esi; ret; 
0x00059c83: jae 0x59cb4; stc; call dword ptr [eax - 0x18]; 
0x00053c88: jae 0x5e604952; pop edi; pop ebp; ret; 
0x00053d88: jae 0x5e604a52; pop edi; pop ebp; ret; 
0x0008b3f0: jae 0x5e63c0ba; pop edi; pop ebp; ret; 
0x00103158: jae 0x5e6b5e22; pop edi; pop ebp; ret; 
0x00141f6d: jae 0x5e6f6c37; pop edi; pop ebp; ret; 
0x00151348: jae 0x5e702012; pop edi; pop ebp; ret; 
0x0003ed4f: jae 0x7482ef4e; sub esp, 8; push 0; push edx; call eax; 
0x0007f374: jae 0x7f380; lea ecx, [edx + 4]; mov dword ptr [eax], ecx; mov eax, dword ptr [edx]; ret; 
0x0007f532: jae 0x7f540; lea ecx, [edx + 4]; mov dword ptr [eax], ecx; mov eax, dword ptr [edx]; ret; 
0x00081366: jae 0x812e0; pop ebx; mov eax, dword ptr [edx]; pop esi; pop edi; ret; 
0x00081654: jae 0x81686; add esp, 4; pop ebx; pop esi; ret; 
0x0008425c: jae 0x841e1; in al, dx; or al, 0x8d; or dword ptr [eax - 4], 0xffffffff; call dword ptr [eax - 0x73]; 
0x00085db2: jae 0x85d37; les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x0008765e: jae 0x87670; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x0008769c: jae 0x876b0; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x0008901c: jae 0x89028; movzx eax, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0008c8ef: jae 0x8c921; add esp, 4; pop ebx; pop esi; ret; 
0x0008d32c: jae 0x8d350; movzx eax, byte ptr [edx]; pop ebx; pop esi; ret; 
0x0008f894: jae 0x8f81f; ret 0xca83; 
0x00090a64: jae 0x90a30; mov ecx, dword ptr [ebx + 0xc]; mov eax, 0xf0; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00090b14: jae 0x90b43; mov ecx, dword ptr [edi + 0xc]; mov eax, 0xf0; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00090ee0: jae 0x90ee6; call dword ptr [ebx]; 
0x00090eda: jae 0x90f18; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x00098127: jae 0x9812d; call dword ptr [ebx]; 
0x000a0474: jae 0xa0401; dec esp; and al, 0x64; lea esi, [esp + 0x2c]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x000a6afe: jae 0xa6b20; mov dword ptr [ebx], eax; push eax; call ecx; 
0x000a6c78: jae 0xa6c9e; call eax; 
0x000a6d87: jae 0xa6dad; call eax; 
0x000a6dc6: jae 0xa6dd8; mov eax, dword ptr [eax + 4]; test eax, eax; jne 0xa6dc0; xor eax, eax; ret; 
0x000a6e05: jae 0xa6e2b; call edx; 
0x000a808a: jae 0xa80a1; pop ebx; pop esi; pop edi; ret; 
0x000bada9: jae 0xbadb2; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x001720d8: jae 0xc04825a2; pop ebx; pop esi; ret; 
0x000c0a03: jae 0xc09cb; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c2598: jae 0xc259c; movsw word ptr es:[edi], word ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; xchg edi, eax; mov esi, edx; ret; 
0x000c69f1: jae 0xc69fa; add byte ptr [ebx - 0x72e3db84], cl; xchg dword ptr [eax], ebx; popfd; stc; call dword ptr [eax - 0x73]; 
0x000fb1d5: jae 0xfb220; push edx; mov edx, 0x20; cmovne eax, edx; ret; 
0x0010e5b6: jb 0x10e5b8; add byte ptr [eax], al; mov ecx, ebp; mov edx, dword ptr [esp + 0x88]; call dword ptr gs:[0x10]; 
0x0010e6a8: jb 0x10e6aa; add byte ptr [eax], al; mov ecx, ebp; mov esi, edi; mov edx, dword ptr [esp + 0x88]; call dword ptr gs:[0x10]; 
0x0010e704: jb 0x10e706; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x80]; call dword ptr gs:[0x10]; 
0x00115629: jb 0x11564b; mov dword ptr [edx + 0x24], edi; mov dword ptr [edx + 0x28], eax; pop esi; pop edi; ret; 
0x001169aa: jb 0x116970; cli; jmp dword ptr [esi + 3]; 
0x001238fa: jb 0x123900; xor eax, eax; pop ebx; ret; 
0x00127d3e: jb 0x127d36; dec dword ptr [ebx + 0x56897440]; add al, 0x89; ret 0xeac1; 
0x00134b1d: jb 0x134b23; cmp ecx, edx; sbb eax, eax; ret; 
0x0013c805: jb 0x13c85e; stc; call dword ptr [eax - 0x18]; 
0x0015492a: jb 0x154914; in al, dx; jmp dword ptr [ebp - 0x5f]; 
0x0015bed7: jb 0x15bee1; setne al; movzx eax, al; neg eax; ret; 
0x0015bf09: jb 0x15bf12; xor eax, eax; cmp ecx, edx; setne al; ret; 
0x00171538: jb 0x1714fc; mov dword ptr [eax + 0x10], ecx; mov eax, edx; pop ebx; pop esi; ret; 
0x00178822: jb 0x17881b; inc dword ptr [ebx + 0x548d08ec]; and al, 0x20; push edx; push eax; call edi; 
0x0017ca39: jb 0x17ca50; sub edx, eax; mov dword ptr [ecx + 0xc], eax; mov eax, 1; mov dword ptr [ecx + 0x14], edx; ret; 
0x0018299e: jb 0x1829a0; add byte ptr [ecx + 0xbc473c3], al; add byte ptr [ecx + 0x168ec], al; add byte ptr [ecx - 0x1636b], cl; dec dword ptr [ecx - 0x15f7b]; jmp dword ptr [ebp - 0x5f]; 
0x001870d9: jb 0x1870df; cmp ecx, edx; sbb eax, eax; ret; 
0x0018a665: jb 0x18a676; xchg esp, eax; ret; 
0x001a64c0: jb 0x1a64d0; movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x001aaad3: jb 0x1aab10; lea eax, [edi + 0xa]; pop edi; ret; 
0x001aaa15: jb 0x1aab10; lea eax, [edi + 0xb]; pop edi; ret; 
0x001aaae3: jb 0x1aab10; lea eax, [edi + 0xc]; pop edi; ret; 
0x001aaaf3: jb 0x1aab10; lea eax, [edi + 0xd]; pop edi; ret; 
0x001aab03: jb 0x1aab10; lea eax, [edi + 0xe]; pop edi; ret; 
0x001aaa3e: jb 0x1aab10; lea eax, [edi + 0xf]; pop edi; ret; 
0x001aaa63: jb 0x1aab10; lea eax, [edi + 1]; pop edi; ret; 
0x001aaa73: jb 0x1aab10; lea eax, [edi + 2]; pop edi; ret; 
0x001aa9aa: jb 0x1aab10; lea eax, [edi + 3]; pop edi; ret; 
0x001aaa83: jb 0x1aab10; lea eax, [edi + 4]; pop edi; ret; 
0x001aaa93: jb 0x1aab10; lea eax, [edi + 5]; pop edi; ret; 
0x001aaaa3: jb 0x1aab10; lea eax, [edi + 6]; pop edi; ret; 
0x001aa9db: jb 0x1aab10; lea eax, [edi + 7]; pop edi; ret; 
0x001aaab3: jb 0x1aab10; lea eax, [edi + 8]; pop edi; ret; 
0x001aaac3: jb 0x1aab10; lea eax, [edi + 9]; pop edi; ret; 
0x001abaf3: jb 0x1abb30; lea eax, [eax + 0xa]; pop edi; ret; 
0x001aba45: jb 0x1abb30; lea eax, [eax + 0xb]; pop edi; ret; 
0x001abb03: jb 0x1abb30; lea eax, [eax + 0xc]; pop edi; ret; 
0x001abb13: jb 0x1abb30; lea eax, [eax + 0xd]; pop edi; ret; 
0x001abb23: jb 0x1abb30; lea eax, [eax + 0xe]; pop edi; ret; 
0x001aba6e: jb 0x1abb30; lea eax, [eax + 0xf]; pop edi; ret; 
0x001aba83: jb 0x1abb30; lea eax, [eax + 1]; pop edi; ret; 
0x001aba93: jb 0x1abb30; lea eax, [eax + 2]; pop edi; ret; 
0x001ab9db: jb 0x1abb30; lea eax, [eax + 3]; pop edi; ret; 
0x001abaa3: jb 0x1abb30; lea eax, [eax + 4]; pop edi; ret; 
0x001abab3: jb 0x1abb30; lea eax, [eax + 5]; pop edi; ret; 
0x001abac3: jb 0x1abb30; lea eax, [eax + 6]; pop edi; ret; 
0x001aba0e: jb 0x1abb30; lea eax, [eax + 7]; pop edi; ret; 
0x001abad3: jb 0x1abb30; lea eax, [eax + 8]; pop edi; ret; 
0x001abae3: jb 0x1abb30; lea eax, [eax + 9]; pop edi; ret; 
0x00029b30: jb 0x29b2b; call dword ptr [eax - 0x73]; 
0x0002ab2d: jb 0x2ab28; call dword ptr [eax - 0x73]; 
0x0002ab50: jb 0x2ab4b; call dword ptr [eax - 0x73]; 
0x0002ab73: jb 0x2ab6e; call dword ptr [eax - 0x73]; 
0x0002ab96: jb 0x2ab91; call dword ptr [eax - 0x73]; 
0x0002abb9: jb 0x2abb4; call dword ptr [eax - 0x73]; 
0x0002abdc: jb 0x2abd7; call dword ptr [eax - 0x73]; 
0x0002b751: jb 0x2b74c; call dword ptr [eax - 0x73]; 
0x0002b782: jb 0x2b77d; call dword ptr [eax - 0x73]; 
0x0002b7a5: jb 0x2b7a0; call dword ptr [eax - 0x73]; 
0x0002b7c8: jb 0x2b7c3; call dword ptr [eax - 0x73]; 
0x0002b857: jb 0x2b852; call dword ptr [eax - 0x73]; 
0x0002b87a: jb 0x2b875; call dword ptr [eax - 0x73]; 
0x0002c440: jb 0x2c43b; call dword ptr [eax - 0x73]; 
0x0002c463: jb 0x2c45e; call dword ptr [eax - 0x73]; 
0x0002cdc3: jb 0x2cdc5; add byte ptr [ebx - 0x72c3db84], cl; xchg dword ptr [eax], ecx; jb 0x2cdc8; call dword ptr [eax - 0x73]; 
0x0002cdcd: jb 0x2cdc8; call dword ptr [eax - 0x73]; 
0x0002cde6: jb 0x2cde8; add byte ptr [ebx - 0x72c3db84], cl; xchg dword ptr [eax], ecx; jb 0x2cdeb; call dword ptr [eax - 0x73]; 
0x0002cdf0: jb 0x2cdeb; call dword ptr [eax - 0x73]; 
0x0002ce50: jb 0x2ce4b; call dword ptr [eax - 0x73]; 
0x0002fde6: jb 0x2fde1; call dword ptr [eax - 0x73]; 
0x0003002d: jb 0x30028; call dword ptr [eax - 0x73]; 
0x0003109e: jb 0x31099; call dword ptr [eax - 0x73]; 
0x0006102a: jb 0x6104d; cld; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000795fa: jb 0x795a6; sti; jmp dword ptr [esi - 0x70]; 
0x000803fe: jb 0x80414; mov byte ptr [ecx], bl; add esp, 4; pop ebx; pop esi; ret; 
0x000815fa: jb 0x815f0; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00087b4f: jb 0x87b6c; add byte ptr [ebx - 0x77], dl; ret; 
0x000884e5: jb 0x88551; add ch, byte ptr [edx]; push 0; push ebx; call dword ptr [esi + 0x40]; 
0x0008bdaa: jb 0x8bda0; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00095622: jb 0x95664; stc; call dword ptr [eax - 0x18]; 
0x000963b3: jb 0x963f5; stc; call dword ptr [eax - 0x18]; 
0x00097144: jb 0x97186; stc; call dword ptr [eax - 0x18]; 
0x000b9f86: jb 0xb9340; call 0x189c31; add ecx, 0x112daf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9399: jb 0xb9340; call 0x189c31; add ecx, 0x1139a0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b937e: jb 0xb9340; call 0x189c31; add ecx, 0x1139bb; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b935c: jb 0xb9340; call 0x189c31; add ecx, 0x1139dd; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9ef6: jb 0xb93d8; movdqu xmmword ptr [edi + 0x30], xmm7; pop edi; pop esi; pop ebx; ret; 
0x000bb686: jb 0xba980; call 0x189c31; add ecx, 0x11180f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba9f0: jb 0xba980; call 0x189c31; add ecx, 0x1124a9; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba9d9: jb 0xba980; call 0x189c31; add ecx, 0x1124c0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba9be: jb 0xba980; call 0x189c31; add ecx, 0x1124db; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba99c: jb 0xba980; call 0x189c31; add ecx, 0x1124fd; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c0f26: jb 0xc0920; call 0x189c31; add ecx, 0x10c143; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c0990: jb 0xc0920; call 0x189c31; add ecx, 0x10c6dd; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c0979: jb 0xc0920; call 0x189c31; add ecx, 0x10c6f4; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c095e: jb 0xc0920; call 0x189c31; add ecx, 0x10c70f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c093c: jb 0xc0920; call 0x189c31; add ecx, 0x10c731; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c63b6: jb 0xc633b; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000fb2cb: jb 0xfb2cd; add byte ptr [edx + esi*8 + 0x31], dh; rol byte ptr [ecx + 0xadf5fa], 0; setne al; ret; 
0x0010b95e: jbe 0x10b960; xor eax, eax; xchg dword ptr [edi + 0x3fac], eax; cmp eax, 1; jg 0x10b9a8; call dword ptr [esi]; 
0x0010d62f: jbe 0x10d639; call dword ptr [eax + 0xc]; 
0x0010d62c: jbe 0x10d646; push dword ptr [esi + 8]; call dword ptr [eax + 0xc]; 
0x0010d627: jbe 0x10d649; mov eax, esi; push dword ptr [esi + 0x18]; push dword ptr [esi + 8]; call dword ptr [eax + 0xc]; 
0x0011b24c: jbe 0x11b25a; call dword ptr [esi + 0x24]; 
0x0011bbe4: jbe 0x11bbf2; call dword ptr [esi + 0x24]; 
0x0011c36f: jbe 0x11c37d; call dword ptr [esi + 0x24]; 
0x0011cd14: jbe 0x11cd22; call dword ptr [esi + 0x24]; 
0x0011d4df: jbe 0x11d4ed; call dword ptr [esi + 0x24]; 
0x0011de84: jbe 0x11de92; call dword ptr [esi + 0x24]; 
0x00124da3: jbe 0x124da5; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00124dcc: jbe 0x124dce; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012517e: jbe 0x125180; xor eax, eax; ret; 
0x00125226: jbe 0x125228; mov eax, dword ptr [eax + 0x35c]; pop ebx; ret; 
0x00129f86: jbe 0x129fb0; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x0012c50d: jbe 0x12c560; sub esp, 4; push edi; push 0; push ebx; call esi; 
0x0012c59d: jbe 0x12c5f0; sub esp, 4; push edi; push 0; push ebx; call esi; 
0x0012c9b0: jbe 0x12c9d0; sub esp, 8; and ebx, 0xfffffffe; push dword ptr [ebx]; push esi; call edi; 
0x0012d066: jbe 0x12d068; ret; 
0x0012d4f6: jbe 0x12d563; lock dec dword ptr [ebp - 0x65a4f7d]; call dword ptr [eax - 0x73]; 
0x0013400f: jbe 0x133fd0; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; mov eax, 0x92; mov edx, 8; call dword ptr gs:[0x10]; 
0x0013bf20: jbe 0x13bf74; sub esp, 0xc; xor ebx, ebx; mov ecx, esp; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x0013d019: jbe 0x13d009; jmp dword ptr [esi - 0x70]; 
0x0013de36: jbe 0x13de38; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x001417c6: jbe 0x1417c8; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x0014abf6: jbe 0x14abf8; xor eax, eax; ret; 
0x001510fe: jbe 0x151100; xor eax, eax; ret; 
0x0015167d: jbe 0x151602; ret 0x8901; 
0x00152d06: jbe 0x152cfc; dec dword ptr [ebp - 0xec5b37d]; call dword ptr [esi + 0x50]; 
0x0015c727: jbe 0x15c6ac; les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0016eafe: jbe 0x16eb00; endbr32; mov eax, 1; ret; 
0x0016ecfe: jbe 0x16ed00; endbr32; ret; 
0x0016ed0e: jbe 0x16ed10; endbr32; xor eax, eax; ret; 
0x0016faff: jbe 0x16fb11; push ebx; call dword ptr [esi + 0x14]; 
0x00170b84: jbe 0x170b90; mov eax, 2; pop ebx; pop esi; ret; 
0x00170ec6: jbe 0x170ec8; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0017107d: jbe 0x17108b; push edi; call dword ptr [eax + 8]; 
0x001710c0: jbe 0x1710ce; push edi; call dword ptr [eax + 0x10]; 
0x0017141e: jbe 0x171420; xor eax, eax; ret; 
0x00173086: jbe 0x173034; cld; jmp dword ptr [esi - 0x70]; 
0x0017697e: jbe 0x176980; xor eax, eax; pop ebx; ret; 
0x0017ca0e: jbe 0x17ca10; endbr32; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x0017ce0e: jbe 0x17ce10; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x00184207: jbe 0x18418c; in al, dx; add al, 0x83; ret; 
0x00184586: jbe 0x18451f; sti; jmp dword ptr [esi - 0x70]; 
0x00184816: jbe 0x184818; add esp, 8; xor eax, eax; pop ebx; ret; 
0x001898ee: jbe 0x1898f0; test al, al; jne 0x189916; mov eax, 4; add esp, 0xc; ret; 
0x001898fe: jbe 0x189900; mov eax, 2; add esp, 0xc; ret; 
0x001a0b13: jbe 0x1a0c03; movzx ecx, byte ptr [eax + 3]; movzx eax, byte ptr [edx + 3]; sub eax, ecx; pop ebp; ret; 
0x001a0b33: jbe 0x1a0c03; movzx ecx, byte ptr [eax + 4]; movzx eax, byte ptr [edx + 4]; sub eax, ecx; pop ebp; ret; 
0x001a9eae: jbe 0x1a9eb0; lea eax, [edi + 2]; pop edi; ret; 
0x001a9ebe: jbe 0x1a9ec0; lea eax, [edi + 3]; pop edi; ret; 
0x001a9ece: jbe 0x1a9ed0; lea eax, [edi + 4]; pop edi; ret; 
0x001a9ede: jbe 0x1a9ee0; lea eax, [edi + 5]; pop edi; ret; 
0x001a9eee: jbe 0x1a9ef0; lea eax, [edi + 6]; pop edi; ret; 
0x001a9efe: jbe 0x1a9f00; lea eax, [edi + 8]; pop edi; ret; 
0x001a9f0e: jbe 0x1a9f10; lea eax, [edi + 9]; pop edi; ret; 
0x001a9f1e: jbe 0x1a9f20; lea eax, [edi + 0xa]; pop edi; ret; 
0x001a9f2e: jbe 0x1a9f30; lea eax, [edi + 0xb]; pop edi; ret; 
0x001a9f3e: jbe 0x1a9f40; lea eax, [edi + 0xc]; pop edi; ret; 
0x001a9f4e: jbe 0x1a9f50; lea eax, [edi + 0xd]; pop edi; ret; 
0x001a9f5e: jbe 0x1a9f60; lea eax, [edi + 0xe]; pop edi; ret; 
0x001a9f6e: jbe 0x1a9f70; xor eax, eax; pop edi; ret; 
0x001aa34e: jbe 0x1aa350; lea eax, [edi - 0xe]; pop edi; ret; 
0x001aa35e: jbe 0x1aa360; lea eax, [edi - 0xd]; pop edi; ret; 
0x001aa36e: jbe 0x1aa370; lea eax, [edi - 0xb]; pop edi; ret; 
0x001aa37e: jbe 0x1aa380; lea eax, [edi - 0xa]; pop edi; ret; 
0x001aa38e: jbe 0x1aa390; lea eax, [edi - 9]; pop edi; ret; 
0x001aa39e: jbe 0x1aa3a0; lea eax, [edi - 7]; pop edi; ret; 
0x001aa3ae: jbe 0x1aa3b0; lea eax, [edi - 6]; pop edi; ret; 
0x001aa3be: jbe 0x1aa3c0; lea eax, [edi - 5]; pop edi; ret; 
0x001aa3ce: jbe 0x1aa3d0; lea eax, [edi - 3]; pop edi; ret; 
0x001aa3de: jbe 0x1aa3e0; lea eax, [edi - 2]; pop edi; ret; 
0x001aa3ee: jbe 0x1aa3f0; lea eax, [edi - 1]; pop edi; ret; 
0x001aa3fe: jbe 0x1aa400; xor eax, eax; pop edi; ret; 
0x001aa4fe: jbe 0x1aa500; and eax, 3; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x001aa50e: jbe 0x1aa510; and eax, 7; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x001aa51e: jbe 0x1aa520; and eax, 0x1f; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x001aa52e: jbe 0x1aa530; and eax, 0x3f; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x001aa53e: jbe 0x1aa540; and eax, 0x7f; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x001aa54e: jbe 0x1aa550; and eax, 0x1ff; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x001aa8de: jbe 0x1aa8e0; lea eax, [edi + 2]; pop edi; ret; 
0x001aa8ee: jbe 0x1aa8f0; lea eax, [edi + 4]; pop edi; ret; 
0x001aa8fe: jbe 0x1aa900; lea eax, [edi + 5]; pop edi; ret; 
0x001aa90e: jbe 0x1aa910; lea eax, [edi + 6]; pop edi; ret; 
0x001aa91e: jbe 0x1aa920; lea eax, [edi + 8]; pop edi; ret; 
0x001aa92e: jbe 0x1aa930; lea eax, [edi + 9]; pop edi; ret; 
0x001aa93e: jbe 0x1aa940; lea eax, [edi + 0xa]; pop edi; ret; 
0x001aa94e: jbe 0x1aa950; lea eax, [edi + 0xc]; pop edi; ret; 
0x001aa95e: jbe 0x1aa960; lea eax, [edi + 0xd]; pop edi; ret; 
0x001aa96e: jbe 0x1aa970; lea eax, [edi + 0xe]; pop edi; ret; 
0x001ab11e: jbe 0x1ab120; add edx, 2; jl 0x1ab1d0; lea eax, [ecx + 2]; ret; 
0x001ab12e: jbe 0x1ab130; add edx, 3; jl 0x1ab1d0; lea eax, [ecx + 3]; ret; 
0x001ab13e: jbe 0x1ab140; add edx, 5; jl 0x1ab1d0; lea eax, [ecx + 5]; ret; 
0x001ab14e: jbe 0x1ab150; add edx, 6; jl 0x1ab1d0; lea eax, [ecx + 6]; ret; 
0x001ac1ce: jbe 0x1ac1d0; pop edi; pop esi; pop ebx; ret; 
0x001ac41e: jbe 0x1ac420; mov eax, ecx; ret; 
0x001ac6be: jbe 0x1ac6c0; test ah, 0xf0; jne 0x1ac6e0; lea eax, [edi - 8]; pop edi; ret; 
0x001ac6de: jbe 0x1ac6e0; lea eax, [edi - 4]; pop edi; ret; 
0x001ac6ee: jbe 0x1ac6f0; xor eax, eax; pop edi; ret; 
0x00024fce: jbe 0x24fd0; endbr32; call 0x189c25; add eax, 0x219e3b; lea eax, [eax - 0x690b4]; ret; 
0x000260be: jbe 0x260c0; endbr32; call 0x189c25; add eax, 0x218d4b; mov eax, dword ptr [eax + 0x10bc]; ret; 
0x0002f4f6: jbe 0x2f572; adc eax, 0x24348900; call ebx; 
0x000305f1: jbe 0x305f7; call 0x231a0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0003d4be: jbe 0x3d4c0; endbr32; call 0x189c25; add eax, 0x20194b; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x0003d516: jbe 0x3d518; mov eax, 0xffffffff; ret; 
0x0003def6: jbe 0x3def8; ret; 
0x0003eb7f: jbe 0x3eb7a; call dword ptr [edx - 0x73]; 
0x0003eece: jbe 0x3eec9; call dword ptr [eax - 0x18]; 
0x00040c7f: jbe 0x40c7a; call dword ptr [eax - 0x73]; 
0x00042890: jbe 0x4289f; sub ecx, 1; mov eax, 2; bsr ecx, ecx; shl eax, cl; ret; 
0x000428b0: jbe 0x428bf; sub ecx, 1; mov eax, 2; bsr ecx, ecx; shl eax, cl; ret; 
0x0004a1f1: jbe 0x4a1ec; call dword ptr [eax - 0x18]; 
0x0004a310: jbe 0x4a30b; call dword ptr [eax - 0x18]; 
0x0004a379: jbe 0x4a374; call dword ptr [eax - 0x18]; 
0x0004d43b: jbe 0x4d436; call dword ptr [eax - 0x18]; 
0x0004d45e: jbe 0x4d459; call dword ptr [eax - 0x18]; 
0x0004d589: jbe 0x4d584; call dword ptr [eax - 0x18]; 
0x00051240: jbe 0x5123b; call dword ptr [eax - 0x18]; 
0x00051351: jbe 0x5134c; call dword ptr [eax - 0x18]; 
0x00051397: jbe 0x51392; call dword ptr [eax - 0x18]; 
0x00059ba1: jbe 0x59b9c; call dword ptr [eax - 0x18]; 
0x00059c5a: jbe 0x59c55; call dword ptr [eax - 0x18]; 
0x00059d62: jbe 0x59d5d; call dword ptr [eax - 0x18]; 
0x0005aab2: jbe 0x5aa3d; ret 0x40c7; 
0x00064f90: jbe 0x65934; mov edi, eax; jmp edx; 
0x00070b58: jbe 0x718c0; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x48], 1; jmp eax; 
0x00070aab: jbe 0x71983; mov ecx, dword ptr [esp + 0x4c]; mov dword ptr [esp + 4], ecx; jmp eax; 
0x00082bde: jbe 0x82be0; add esp, 4; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x00086826: jbe 0x86828; mov edx, 1; mov eax, edx; ret; 
0x0008a85e: jbe 0x8a860; endbr32; mov eax, dword ptr [esp + 4]; test byte ptr [eax], 0x80; jne 0x8a870; ret; 
0x0008cc2e: jbe 0x8cc30; endbr32; mov eax, 0xffffffff; mov edx, eax; ret; 
0x0008cc8e: jbe 0x8cc90; endbr32; call 0x189c25; add eax, 0x1b217b; mov eax, dword ptr [eax + 0xe6c]; ret; 
0x0008ccae: jbe 0x8ccb0; endbr32; xor eax, eax; ret; 
0x0008ecfe: jbe 0x8ed00; endbr32; ret; 
0x000907c4: jbe 0x907d0; ret; 
0x000907fe: jbe 0x90800; mov eax, dword ptr [esp + 4]; and dword ptr [eax + 8], 0xfffffffb; xor eax, eax; ret; 
0x000928fe: jbe 0x92900; mov eax, 0x16; ret; 
0x0009425c: jbe 0x94268; pop ebx; neg eax; pop esi; pop edi; ret; 
0x000942c5: jbe 0x942d0; add esp, 4; neg eax; pop ebx; pop esi; ret; 
0x00094856: jbe 0x94858; mov eax, 3; ret; 
0x000a0116: jbe 0xa0118; lea ebp, [ebx + ebx]; mov eax, 0x107; mov ebx, dword ptr [ebp]; call dword ptr gs:[0x10]; 
0x000a04e6: jbe 0xa04e8; mov ecx, dword ptr [esp + 0x64]; mov esi, dword ptr [esp + 4]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x000a08da: jbe 0xa08e0; ret; 
0x000a091e: jbe 0xa0920; nop; mov dword ptr [edx + 0x390], eax; ret; 
0x000a091a: jbe 0xa0920; ret; 
0x000a0ad8: jbe 0xa0ae0; ret; 
0x000a18c6: jbe 0xa18e0; clc; inc dword ptr [ebx - 0x7972f33c]; lodsb al, byte ptr [esi]; sbb ah, dh; call dword ptr [eax + 0x57]; 
0x000a4c3e: jbe 0xa4c40; ret; 
0x000a69ee: jbe 0xa69f0; endbr32; mov eax, 0xffffffff; ret; 
0x000a6a2e: jbe 0xa6a30; endbr32; ret; 
0x000a6a3e: jbe 0xa6a40; endbr32; ret; 
0x000ab502: jbe 0xab514; cmove eax, edx; ret; 
0x000ac472: jbe 0xac484; cmove eax, edx; ret; 
0x000ac642: jbe 0xac654; cmove eax, edx; ret; 
0x000b183e: jbe 0xb1840; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000b192e: jbe 0xb1930; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000b369e: jbe 0xb36a0; mov word ptr [ecx], dx; mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x000b5a6e: jbe 0xb5a70; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; pop edi; ret; 
0x000b7aee: jbe 0xb7af0; mov word ptr [ecx], dx; mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x000b8cae: jbe 0xb8cb0; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x000b9dde: jbe 0xb9de0; movdqu xmmword ptr [edi - 1], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000bb4ce: jbe 0xbb4d0; movdqu xmmword ptr [edi - 1], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000c0880: jbe 0xc0849; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c0a7a: jbe 0xc0a7e; mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000c127e: jbe 0xc1280; xor eax, eax; pop edi; ret; 
0x000c12de: jbe 0xc1310; add eax, ecx; ret; 
0x000c15b5: jbe 0xc15f0; add eax, edi; pop edi; ret; 
0x000c15c8: jbe 0xc15f0; lea eax, [edi + eax + 0x10]; pop edi; ret; 
0x000c15d8: jbe 0xc15f0; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x000c15e8: jbe 0xc15f0; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000c30ee: jbe 0xc30f0; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x000c30fe: jbe 0xc3100; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1c8]; ret; 
0x000c310e: jbe 0xc3110; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1cc]; ret; 
0x000c311e: jbe 0xc3120; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1d0]; ret; 
0x000c312e: jbe 0xc3130; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1d4]; ret; 
0x000c313e: jbe 0xc3140; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1d8]; ret; 
0x000c314e: jbe 0xc3150; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1dc]; ret; 
0x000c315e: jbe 0xc3160; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1e0]; ret; 
0x000c316e: jbe 0xc3170; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1e4]; ret; 
0x000c317e: jbe 0xc3180; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1e8]; ret; 
0x000c318e: jbe 0xc3190; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1ec]; ret; 
0x000c319e: jbe 0xc31a0; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x000c31ae: jbe 0xc31b0; mov eax, 0xffffffff; ret; 
0x000ca3ec: jbe 0xca3e7; call dword ptr [eax - 0x18]; 
0x000ca432: jbe 0xca42d; call dword ptr [eax - 0x18]; 
0x000ca49b: jbe 0xca496; call dword ptr [eax - 0x18]; 
0x000cc779: jbe 0xcc773; call dword ptr [esi + 0x53]; 
0x000cd3b8: jbe 0xcd3b3; call dword ptr [eax - 0x18]; 
0x000cd3fe: jbe 0xcd3f9; call dword ptr [eax - 0x18]; 
0x000cd4ad: jbe 0xcd4a8; call dword ptr [eax - 0x18]; 
0x000d0d84: jbe 0xd0d7f; call dword ptr [eax - 0x18]; 
0x000d0dca: jbe 0xd0dc5; call dword ptr [eax - 0x18]; 
0x000d0ec6: jbe 0xd0ec1; call dword ptr [eax - 0x18]; 
0x000d4554: jbe 0xd455e; call ebx; 
0x000d8744: jbe 0xd873f; call dword ptr [eax - 0x18]; 
0x000d878e: jbe 0xd8789; call dword ptr [eax - 0x18]; 
0x000d87fd: jbe 0xd87f8; call dword ptr [eax - 0x18]; 
0x000d97ce: jbe 0xd97d0; mov eax, 1; jg 0xd97d9; neg eax; ret; 
0x000deb1e: jbe 0xdeb20; mov ebx, dword ptr [esp + 0x60]; mov edx, dword ptr [esp + 0xc]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000deccc: jbe 0xdecd8; mov eax, edx; ret; 
0x000fb606: jbe 0xfb608; call 0x8e600; mov edx, eax; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x000fbaf6: jbe 0xfbaf8; lea eax, [ecx + 1]; pop ebx; pop esi; ret; 
0x00103e8d: je 0x103eb5; add byte ptr [ebx - 0x7cf7f6f6], cl; rol byte ptr [ebx + eax*4], 0xc2; add al, 0x39; ret; 
0x001045fd: je 0x104625; add byte ptr [ebx - 0x7cf4dcf6], cl; ret 0x8304; 
0x00105ea8: je 0x105e6c; or al, 0x83; rol byte ptr [ecx], 0x39; ret; 
0x00105ea4: je 0x105e98; or al, 0x89; je 0x105e6c; or al, 0x83; rol byte ptr [ecx], 0x39; ret; 
0x001061e0: je 0x106206; sub al, 0x83; ret; 
0x0010acdb: je 0x10ad01; adc al, ch; or eax, 0xffff845; mov dh, 0x45; sbb al, 0x89; ret 0xeac0; 
0x0010af7e: je 0x10af79; call dword ptr [eax - 0x18]; 
0x0010b10a: je 0x10b105; call dword ptr [eax - 0x18]; 
0x0010b8b5: je 0x10b8d0; cmp byte ptr [esp + 0x17], 0; jne 0x10b960; call ecx; 
0x0010bb45: je 0x10ba8f; call eax; 
0x0010bbe5: je 0x10bae2; call eax; 
0x0010bbdd: je 0x10bc05; add byte ptr [ebx - 0x3f7af7c0], cl; je 0x10bae2; call eax; 
0x0010bfe7: je 0x10c00d; inc esp; mov ebx, dword ptr [esp + 0x40]; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0010c79e: je 0x10c7c4; sub al, 0xe8; cmp dl, byte ptr [ebx]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0010d74d: je 0x10d775; add byte ptr [ebx + 0x438b0453], cl; or byte ptr [ecx], bh; ret 0x840f; 
0x0010db00: je 0x10db26; and byte ptr [ebx - 0x72e7dbac], cl; test al, 0xac; ret 0xffea; 
0x0010e39f: je 0x10e3b0; xor edx, edx; cmp eax, -1; pop ebx; cmove eax, edx; ret; 
0x0010e42a: je 0x10e450; sbb byte ptr [edx - 1], ch; call 0x10e970; add esp, 0x1c; ret; 
0x0010e450: je 0x10e476; sbb byte ptr [edx - 1], ch; call 0x10e560; add esp, 0x1c; ret; 
0x0010e8f4: je 0x10e91a; cmp al, 0x89; inc esp; and al, 8; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x0010ebd6: je 0x10ebfc; sbb al, ch; ret 0xf145; 
0x0010f7fe: je 0x10f824; push 0x10f6ae8; add byte ptr [ebx - 0x77cef3c], al; push dword ptr [edx + ebx*8 - 0x77]; ret 0xc085; 
0x00111428: je 0x111423; call dword ptr [eax - 0x18]; 
0x001127d0: je 0x1127ba; dec edx; ret; 
0x00112844: je 0x1127cf; ret; 
0x00112f43: je 0x112ed0; jl 0x112f6b; sbb al, 0x31; fild dword ptr [ebp - 0x14f48a2e]; jo 0x112ed4; ret; 
0x00113395: je 0x113364; pop ebx; ret; 
0x001133d5: je 0x1133fd; add byte ptr [eax + 1], bh; ret; 
0x00113555: je 0x11357d; add byte ptr [ebx + 0x548d08ec], al; and al, 0x14; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x00113d8d: je 0x113da6; sub esp, 8; push eax; push dword ptr [ebp - 0x5dc]; call esi; 
0x0011440a: je 0x114451; sub esp, 8; push ebp; push ecx; mov eax, dword ptr [esp + 0x18]; call eax; 
0x0011454f: je 0x1144f3; stc; call dword ptr [eax - 0x73]; 
0x00114a71: je 0x114a97; sbb al, 0xe8; out 0xad, eax; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00115400: je 0x115426; sbb al, 0xe8; or byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x001155d2: je 0x1155e8; mov dword ptr [edx], 0xffffffff; mov dword ptr [edx + 4], 0xffffffff; pop esi; pop edi; ret; 
0x00115764: je 0x1157c1; pop esi; ret; 
0x001158fd: je 0x11595a; pop esi; ret; 
0x00115f1d: je 0x115eaa; pop esp; and al, 0x70; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x00115edb: je 0x115f38; pop esi; ret; 
0x00115f17: je 0x115f3d; pop esp; mov esi, dword ptr [esp + 0x74]; mov ebx, dword ptr [esp + 0x70]; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x00115f1b: je 0x115f41; je 0x115eaa; pop esp; and al, 0x70; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x0011b83b: je 0x11b861; xor bh, bh; ja 0x11b84d; call dword ptr [edi + 0x24]; 
0x0011bab7: je 0x11badd; xor bh, bh; ja 0x11bac9; call dword ptr [edi + 0x24]; 
0x0011bbe0: je 0x11bc06; xor bh, bh; jbe 0x11bbf2; call dword ptr [esi + 0x24]; 
0x0011bc19: je 0x11bc3f; or byte ptr [ebp - 0x65d537a], cl; call dword ptr [eax - 0x73]; 
0x0011bc49: je 0x11bc6f; or byte ptr [ebp - 0x65d537a], cl; call dword ptr [eax - 0x73]; 
0x0011c96b: je 0x11c991; xor bh, bh; ja 0x11c97d; call dword ptr [edi + 0x24]; 
0x0011cbe7: je 0x11cc0d; xor bh, bh; ja 0x11cbf9; call dword ptr [edi + 0x24]; 
0x0011cd10: je 0x11cd36; xor bh, bh; jbe 0x11cd22; call dword ptr [esi + 0x24]; 
0x0011cd49: je 0x11cd6f; or byte ptr [ebp - 0x65d537a], cl; call dword ptr [eax - 0x73]; 
0x0011cd79: je 0x11cd9f; or byte ptr [ebp - 0x65d537a], cl; call dword ptr [eax - 0x73]; 
0x0011dadb: je 0x11db01; xor bh, bh; ja 0x11daed; call dword ptr [edi + 0x24]; 
0x0011dd57: je 0x11dd7d; xor bh, bh; ja 0x11dd69; call dword ptr [edi + 0x24]; 
0x0011de80: je 0x11dea6; xor bh, bh; jbe 0x11de92; call dword ptr [esi + 0x24]; 
0x0011deb9: je 0x11dedf; or byte ptr [ebp - 0x65d537a], cl; call dword ptr [eax - 0x73]; 
0x0011dee9: je 0x11df0f; or byte ptr [ebp - 0x65d537a], cl; call dword ptr [eax - 0x73]; 
0x0011e71f: je 0x11e745; and byte ptr [ebx - 0x72cbdbbc], cl; and byte ptr [esi], 0x46; stc; call dword ptr [eax - 0x18]; 
0x0011e654: je 0x11ead8; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xb7; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0011f081: je 0x11f0a7; sbb byte ptr [edx - 0x64], ch; call 0x114f20; add esp, 0x1c; ret; 
0x0011f1b5: je 0x11f1db; cmp al, 0xe8; ret; 
0x0011f53d: je 0x11f563; sbb byte ptr [edx - 0x64], ch; call 0x115940; add esp, 0x18; pop ebx; ret; 
0x0011f561: je 0x11f587; sbb byte ptr [edx - 0x64], ch; call 0x115b20; add esp, 0x1c; ret; 
0x0011f5b8: je 0x11f615; pop esi; ret; 
0x0011f674: je 0x11f69a; sbb al, 0xe8; xor al, 0; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0011f6c4: je 0x11f6ea; sub byte ptr [edx - 0x64], ch; call 0x11f6e0; add esp, 0x2c; ret; 
0x0011fe25: je 0x11fe4b; sbb byte ptr [ecx + 0x247c8bca], cl; sbb al, 0xc1; cli; pop ds; call dword ptr gs:[0x10]; 
0x001209fa: je 0x120a20; sbb byte ptr [edx - 0x64], ch; call 0x115940; add esp, 0x18; pop ebx; ret; 
0x00120a1e: je 0x120a44; sbb byte ptr [edx - 0x64], ch; call 0x115b20; add esp, 0x1c; ret; 
0x00120acd: je 0x120a5a; pop esp; and al, 0x70; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x00120a75: je 0x120ad2; pop esi; ret; 
0x00120ac7: je 0x120aed; pop esp; mov esi, dword ptr [esp + 0x74]; mov ebx, dword ptr [esp + 0x70]; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x00120acb: je 0x120af1; je 0x120a5a; pop esp; and al, 0x70; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x001216c6: je 0x1216ec; insb byte ptr es:[edi], dx; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x001216bf: je 0x121720; mov ebx, dword ptr [esp + 0x60]; mov esi, dword ptr [esp + 0x6c]; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0012178c: je 0x1217b2; insb byte ptr es:[edi], dx; mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00121cca: je 0x121d00; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00121d7a: je 0x121db0; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00121f66: je 0x121f90; mov ecx, dword ptr [esp + 0x10]; or dh, 0x80; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x00121fe6: je 0x122010; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x00122066: je 0x122090; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x001220e6: je 0x122110; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00122a38: je 0x1229c7; mov byte ptr [edx], al; push esp; add byte ptr [eax], al; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x001229b8: je 0x1229de; dec esp; mov esi, dword ptr [esp + 0x78]; mov ebx, dword ptr [esp + 0x70]; lea edx, [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001229bc: je 0x1229e2; js 0x12294b; pop esp; and al, 0x70; lea edx, [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00122bab: je 0x122bd1; inc esp; mov ebx, dword ptr [esp + 0x40]; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x00122cd2: je 0x122cf8; sbb al, 0xe8; out 0x56, al; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00122dd1: je 0x122df7; sbb al, 0xe8; out 0x55, eax; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x001235a7: je 0x1235cd; adc byte ptr [ecx + eax], bh; ret 0x1389; 
0x00123d06: je 0x123d2c; sbb byte ptr [ecx], bh; ror byte ptr [edi], 1; dec edi; ret 0x8d50; 
0x00124537: je 0x124580; call eax; 
0x0012467b: je 0x124718; call eax; 
0x001251f8: je 0x125208; cmp ecx, edx; jne 0x1251f0; mov eax, dword ptr [eax + 4]; pop ebx; ret; 
0x0012576a: je 0x12576d; ret; 
0x00125b8c: je 0x125b30; stc; call dword ptr [eax - 0x73]; 
0x00125e7e: je 0x125e88; add esp, 0xc; ret; 
0x00125ece: je 0x125ed8; add esp, 0xc; ret; 
0x00126565: je 0x12658d; add byte ptr [ebx - 0x7c72f714], al; sub ecx, edi; call dword ptr [eax - 0x73]; 
0x00126bc2: je 0x126bd0; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x00126f0b: je 0x126f31; sub al, 0x8b; jl 0x126f35; xor byte ptr [ebp - 0x6b3367d], cl; call dword ptr [eax + 0x55]; 
0x00127312: je 0x12729d; push esi; add al, 0x89; ret 0xeac1; 
0x00127868: je 0x1277f3; push esi; add al, 0x89; ret 0xeac1; 
0x001278dd: je 0x127868; push esi; add al, 0x89; ret 0xeac1; 
0x00127a37: je 0x1279c2; push esi; add al, 0x89; ret 0xeac1; 
0x00127b23: je 0x127aae; push esi; add al, 0x89; ret 0xeac1; 
0x00127b98: je 0x127b23; push esi; add al, 0x89; ret 0xeac1; 
0x00127d43: je 0x127cce; push esi; add al, 0x89; ret 0xeac1; 
0x00128138: je 0x1280c3; push esi; add al, 0x89; ret 0xeac1; 
0x00128388: je 0x12838d; mov dword ptr [ecx + 4], edx; mov dword ptr [edx], ecx; mov dword ptr [edx + 4], eax; ret; 
0x001283af: je 0x1283b4; mov dword ptr [edx + 4], eax; test eax, eax; je 0x1283ba; mov dword ptr [eax], edx; ret; 
0x001283b6: je 0x1283ba; mov dword ptr [eax], edx; ret; 
0x0012889a: je 0x1288c0; sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; call 0x616b0; add esp, 0x1c; ret; 
0x001289f0: je 0x128a16; sbb al, 0xe8; mov eax, 0x83fff38c; les edx, ptr [eax]; add esp, 0xc; ret; 
0x0012937c: je 0x129390; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x00129f7d: je 0x129fa3; sub al, 0x8d; inc ebx; inc dword ptr [ebx + 0x287602f8]; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x00129fb1: je 0x129fd7; or byte ptr [eax + 0x1a], bh; call dword ptr gs:[0x10]; 
0x0012a73c: je 0x12a762; sbb byte ptr [edi], cl; dec edi; ret 0x8d50; 
0x0012aa53: je 0x12aa79; xor cl, bl; ror byte ptr [edi], 0x9e; ret 0xff85; 
0x0012d00e: je 0x12d014; test edx, edx; jne 0x12d018; ret; 
0x0012d032: je 0x12d038; test edx, edx; jne 0x12d040; ret; 
0x0012d9f8: je 0x12da1e; sbb byte ptr [edx], ch; call 0x12dc40; add esp, 0x1c; ret; 
0x0012e1df: je 0x12e1e2; ret; 
0x0012e28a: je 0x12e2b6; mov eax, 0xffffffff; add esp, 8; pop ebx; ret; 
0x0012e37a: je 0x12e388; pop ebx; setg al; pop esi; pop edi; ret; 
0x0012e385: je 0x12e3ad; add byte ptr [eax + 0x11c], bh; mov ebx, 3; mov ecx, 0x7fffffff; mov esi, 5; call dword ptr gs:[0x10]; 
0x0012e3af: je 0x12e3c0; mov dword ptr [edi + 0x46cc], ecx; pop ebx; pop esi; pop edi; ret; 
0x0012e412: je 0x12e41d; pop esi; pop ebx; jl 0x24f50; ret; 
0x0012e400: je 0x12e426; sbb byte ptr [ecx + 0x244c8bcb], cl; adc byte ptr [eax + 0x1b3], bh; int 0x80; 
0x0012ec84: je 0x12ecaa; cmp al, 0xb8; add byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012f0e8: je 0x12f120; lea ecx, [esp + 0xc]; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x0012f1db: je 0x12f210; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x178; call dword ptr gs:[0x10]; 
0x0012f20b: je 0x12f263; pop ebx; pop esi; ret; 
0x0012f475: je 0x12f490; mov eax, 0x17c; call dword ptr gs:[0x10]; 
0x0012fb0c: je 0x12fb28; mov esi, dword ptr [esp + 0x44]; mov eax, 0xac; mov ebx, 0x53564d41; call dword ptr gs:[0x10]; 
0x0012fb0f: je 0x12fb35; inc esp; mov eax, 0xac; mov ebx, 0x53564d41; call dword ptr gs:[0x10]; 
0x0012fd24: je 0x12fd4a; cmp al, 0xb8; cmp eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012fed3: je 0x12fef9; cmp al, 0x8b; je 0x12fefd; mov ebx, dword ptr fs:[esp + 0x60]; lea ecx, [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0012fed7: je 0x12fefd; mov ebx, dword ptr fs:[esp + 0x60]; lea ecx, [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00130000: je 0x130068; mov ebx, dword ptr [esp + 0x60]; mov ecx, dword ptr [esp + 0x64]; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x00130324: je 0x13034a; cmp al, 0xb8; cmp al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001304a8: je 0x1304e0; lea ecx, [esp + 0xc]; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x00130bb7: je 0x130bb9; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00131742: je 0x131768; xor al, 0x89; inc esp; and al, 0x38; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00131cb6: je 0x131cdc; sub al, ch; ret 0xf5c9; 
0x00131dc4: je 0x131d7b; add byte ptr [ebx - 0x7cacfe3a], al; ret; 
0x00131ef9: je 0x131f1f; add al, 0x89; loope 0x131e88; ret 0x448b; 
0x0013236b: je 0x132391; and al, 0x89; inc esp; and al, 0x28; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001324c2: je 0x1324e8; and al, 0x89; inc esp; and al, 0x28; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001329d4: je 0x1329fa; push eax; mov ebx, 0xc; mov dword ptr [esp + 0x18], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00132a33: je 0x132a59; push eax; mov dword ptr [esp + 0x18], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0013342e: je 0x133490; mov ebx, dword ptr [esp + 0x50]; mov ecx, dword ptr [esp + 8]; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x0013360c: je 0x133632; or byte ptr [ebx - 0x74cfdbb4], cl; push esp; and al, 0x38; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x00133b90: je 0x133b98; ret; 
0x00133b95: je 0x133bbd; add byte ptr [ebx - 0x74f3dbbc], cl; adc cl, byte ptr [ecx + 0x1b810]; add byte ptr [eax], al; ret; 
0x00133ed6: je 0x133ef3; lea edx, [ecx + ecx]; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; call dword ptr gs:[0x10]; 
0x00135a69: je 0x135a8f; cmp al, 0xe8; scasd eax, dword ptr es:[edi]; sar eax, cl; jmp dword ptr [ebp - 0x75]; 
0x001366d7: je 0x1366fd; or al, 0x89; inc edi; adc al, 0x29; ret 0x478b; 
0x001368dd: je 0x136905; add dh, al; inc edx; jmp dword ptr [eax]; 
0x00136cd8: je 0x136cfe; adc al, ch; cmp eax, 0x8100052f; ret; 
0x00136fee: je 0x137014; and byte ptr [esi + 0x53], dl; mov eax, dword ptr [esp + 0x28]; call eax; 
0x00137153: je 0x137140; pop ebx; mov eax, ecx; pop esi; pop edi; ret; 
0x00137a09: je 0x137a2f; or al, 0x68; add dword ptr [eax], eax; add byte ptr [edx], al; call dword ptr [ebp + 0x14]; 
0x00137a3e: je 0x137a48; xor eax, eax; pop ebx; ret; 
0x0013ac61: je 0x13ac70; add esp, 8; pop ebx; ret; 
0x0013ac7a: je 0x13aca0; sub esp, 8; push ebx; push dword ptr [ebx + 0x30]; call eax; 
0x0013bed3: je 0x13bee8; ret; 
0x0013c045: je 0x13c06d; add byte ptr [ebp + 0x5b8f865], cl; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop ebp; ret; 
0x0013c9dd: je 0x13ca05; add dh, dh; ret 0x7420; 
0x0013d405: je 0x13d410; add esp, 8; pop ebx; ret; 
0x0013d6af: je 0x13d6c7; lea eax, [edx - 0xabc04]; test byte ptr [ecx + 0x19c], 1; lea edx, [edx - 0xab584]; cmovne eax, edx; ret; 
0x0013d9ac: je 0x13d9d2; push 0x27838d50; inc eax; stc; call dword ptr [eax - 0x18]; 
0x0013dc97: je 0x13dcbd; xor al, 0x52; push dword ptr [esp + 0x2c]; call 0x85aa0; add esp, 0x2c; ret; 
0x0013e097: je 0x13e0bd; xor al, 0x52; push dword ptr [esp + 0x2c]; call 0x80560; add esp, 0x2c; ret; 
0x0013e27d: je 0x13e2a5; add al, ch; imul esp, ebp, -1; jmp dword ptr [esi - 0x70]; 
0x0013e3f6: je 0x13e41c; sbb al, 0xe8; and byte ptr [ebp - 8], 0xff; add esp, 0x18; pop ebx; ret; 
0x0013ee80: je 0x13eea6; or al, 0x8d; xchg byte ptr [eax], cl; stosb byte ptr es:[edi], al; stc; call dword ptr [eax - 0x73]; 
0x0014044d: je 0x140475; add byte ptr [eax + 6], bh; call dword ptr gs:[0x10]; 
0x001414cd: je 0x1414f3; or al, 0x8d; xchg ah, dh; stosb byte ptr es:[edi], al; stc; call dword ptr [eax - 0x73]; 
0x0014150a: je 0x141500; add esp, 8; pop ebx; ret; 
0x001416e9: je 0x1416f8; test eax, eax; jne 0x141700; mov eax, ebx; pop ebx; ret; 
0x00141758: je 0x14177e; adc al, 0xe8; mov ebp, 0x81000484; ret; 
0x001418c9: je 0x1418ef; sub al, 0x83; ret 0x8902; 
0x001418e8: je 0x14190e; adc al, 0xe8; sub eax, 0x81000483; ret; 
0x001424d8: je 0x1424d3; call dword ptr [eax - 0x18]; 
0x0014258f: je 0x14258a; call dword ptr [eax - 0x18]; 
0x001425cf: je 0x1425ca; call dword ptr [eax - 0x18]; 
0x00142ecd: je 0x142ef5; add byte ptr [ebx - 0x17aaf314], al; inc edi; sbb ch, bh; jmp dword ptr [ebp - 0x5f]; 
0x0014339f: je 0x14339a; call dword ptr [eax - 0x18]; 
0x00143613: je 0x14360e; call dword ptr [eax - 0x18]; 
0x0014378d: je 0x143788; call dword ptr [eax - 0x18]; 
0x00143780: je 0x1437a6; adc al, 0x8d; xchg byte ptr [ebx + ebp*4 - 7], ah; call dword ptr [eax - 0x73]; 
0x0014389e: je 0x143899; call dword ptr [eax - 0x77]; 
0x00143919: je 0x143914; call dword ptr [eax + 0x56]; 
0x0014397c: je 0x143977; call dword ptr [eax - 0x18]; 
0x001439bf: je 0x1439ba; call dword ptr [eax - 0x18]; 
0x00143cca: je 0x143cf0; adc byte ptr [ebp - 0x6cfb26a], cl; call dword ptr [edx - 0x46]; 
0x001449ff: je 0x1449fa; call dword ptr [eax - 0x18]; 
0x00144ca5: je 0x144cb0; add esp, 4; pop ebx; pop esi; ret; 
0x00145dec: je 0x145df8; add esp, 8; pop ebx; ret; 
0x00145df5: je 0x145e1d; add dh, al; add eax, dword ptr [eax]; add esp, 8; pop ebx; ret; 
0x00147f16: je 0x147f3c; and al, ch; ret 0xa6; 
0x00148885: je 0x1488ad; add byte ptr [ebx - 0x44f73], cl; jmp dword ptr [ebp - 0x75]; 
0x001489ee: je 0x1489e9; call dword ptr [eax - 0x18]; 
0x00148a11: je 0x148a0c; call dword ptr [eax - 0x18]; 
0x0014a6b5: je 0x14a6dd; add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x0014b418: je 0x14b428; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0014b49e: je 0x14b4c4; adc byte ptr [ecx - 0x72fd9532], cl; add dword ptr [edi], 0x2d; stc; call dword ptr [eax + 0x51]; 
0x0014b527: je 0x14b522; call dword ptr [eax - 0x18]; 
0x0014b6e7: je 0x14b6e2; call dword ptr [eax - 0x18]; 
0x0014b6da: je 0x14b700; or al, 0x8d; xchg byte ptr [eax], dl; scasb al, byte ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x0014b765: je 0x14b760; call dword ptr [eax - 0x18]; 
0x0014b740: je 0x14b766; add al, 0x89; ret; 
0x0014b758: je 0x14b77e; or al, 0x8d; xchg byte ptr [eax - 0x52], cl; stc; call dword ptr [eax - 0x73]; 
0x0014b935: je 0x14b930; call dword ptr [eax - 0x18]; 
0x0014ba30: je 0x14ba2b; call dword ptr [eax - 0x18]; 
0x0014ba8a: je 0x14bae7; stc; call dword ptr [ebx - 0x18]; 
0x0014d8a6: je 0x14d8cc; sbb al, 0xf; mov bh, 0x50; add ah, byte ptr [esi - 0x3f]; ret 0xf08; 
0x0014d965: je 0x14d98d; add byte ptr [eax - 1], bh; pop ebx; pop esi; ret; 
0x0014ef91: je 0x14ef98; pop ebx; ret; 
0x0014efe1: je 0x14f008; mov eax, 1; xor eax, 1; pop ebx; ret; 
0x0014f701: je 0x14f727; or byte ptr [ebp - 0x650a37a], cl; call dword ptr [eax - 0x73]; 
0x0014fc51: je 0x14fbd6; ret; 
0x00150145: je 0x15016d; add byte ptr [ebx - 0x7ce3dbac], cl; insb byte ptr es:[edi], dx; and al, 0x14; add dword ptr [ecx], ebp; ret 0x828d; 
0x00151028: je 0x151030; add esp, 0x18; pop ebx; ret; 
0x001510f4: je 0x151108; xor ecx, ecx; mov eax, ecx; pop ebx; pop esi; ret; 
0x00151d67: je 0x151d8d; add al, 0x83; ret; 
0x00152192: je 0x15219e; add dword ptr [eax + 8], 1; je 0x1521bd; add esp, 0xc; ret; 
0x00152198: je 0x1521bd; add esp, 0xc; ret; 
0x00152b25: je 0x152b2c; cmp dword ptr [eax + 8], edx; jne 0x152b20; ret; 
0x00152b95: je 0x152bbd; add byte ptr [edx - 1], bh; mov eax, edx; pop ebx; pop esi; ret; 
0x00152ebd: je 0x152ee3; adc al, ch; wait; dec edi; hlt; jmp dword ptr [ebp - 0x75]; 
0x00153a8c: je 0x153a3f; stc; call dword ptr [eax - 0x73]; 
0x001548b1: je 0x1548d7; and al, 0x8b; inc esp; and al, 0x24; call eax; 
0x00154f62: je 0x154f88; adc al, 0x55; call edi; 
0x0015720d: je 0x157230; xor ecx, ecx; cmp eax, 2; jne 0x157220; mov eax, ecx; ret; 
0x00157411: je 0x157476; mov byte ptr [ebx + 0x8f88], 0; mov dword ptr [ebx + 0x8f78], 0; call esi; 
0x00157631: je 0x157696; mov byte ptr [ebx + 0x4e88], 0; mov dword ptr [ebx + 0x4e78], 0; call esi; 
0x00157dd9: je 0x157dc0; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00157de5: je 0x157e0d; add byte ptr [ebx + 0x1b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00157f0b: je 0x157f6b; stc; call dword ptr [eax - 0x18]; 
0x0015809e: je 0x1580fe; stc; call dword ptr [eax - 0x73]; 
0x0015a130: je 0x15a156; dec eax; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x10]; call edi; 
0x0015a134: je 0x15a15a; dec eax; push dword ptr [esp + 0x10]; call edi; 
0x0015a43b: je 0x15a461; xor byte ptr [ebp + 0x50482444], cl; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x40]; call esi; 
0x0015a444: je 0x15a46a; xor al, 0xff; je 0x15a46e; inc eax; call esi; 
0x0015a448: je 0x15a46e; inc eax; call esi; 
0x0015c7cf: je 0x15c7e0; mov eax, edx; pop ebx; pop esi; ret; 
0x0015c885: je 0x15c8ad; add byte ptr [ecx], dh; rol byte ptr [ecx + 0xc0fefb], cl; add byte ptr [edi], cl; xchg ebp, eax; ret 0x548d; 
0x0015cc85: je 0x15ccab; adc al, 0x83; ret 0x8301; 
0x0015ccb5: je 0x15ccdb; sbb al, 0x83; ret 0x8301; 
0x0015f48e: je 0x15f4b4; and byte ptr [ebp - 0xe25737a], cl; call dword ptr [eax + 0x6a]; 
0x0015f69a: je 0x15f6c0; sbb al, 0x8d; xchg byte ptr [edi + 0x5f], ah; stc; call dword ptr [eax - 0x18]; 
0x0015f714: je 0x15f6cb; stc; call dword ptr [eax - 0x73]; 
0x0015f735: je 0x15f75b; sbb byte ptr [ebp - 0x6a05f7a], cl; call dword ptr [eax - 1]; 
0x0015f7ac: je 0x15f7af; add byte ptr [eax], al; push dword ptr [esp + 0x64]; push dword ptr [esp + 0x50]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x0015f7b1: je 0x15f7d7; push dword ptr fs:[esp + 0x50]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x0015f7b5: je 0x15f7db; push eax; mov eax, dword ptr [esp + 0x44]; call eax; 
0x0015fd5d: je 0x15fd83; adc byte ptr [ebp - 0x64ab37a], cl; call dword ptr [eax - 0x73]; 
0x00160086: je 0x16003d; stc; call dword ptr [eax - 0x73]; 
0x001600d8: je 0x1600fe; adc al, ch; cmp eax, 0x8100029b; ret; 
0x00162787: je 0x16278b; add byte ptr [ecx + 0xdc68ac3], al; add byte ptr [ebx - 0x7c72ef14], al; cmp al, 0x39; bnd call dword ptr [eax - 0x73]; 
0x00162975: je 0x162980; sub esp, 0xc; push esi; call eax; 
0x00162d05: je 0x162d10; sub esp, 0xc; push esi; call eax; 
0x00162eca: je 0x162ef0; pop eax; push dword ptr [esp + 0x58]; push esi; call edi; 
0x00162ece: je 0x162ef4; pop eax; push esi; call edi; 
0x0016322b: je 0x16323e; sub esp, 0xc; push eax; call 0x186f70; mov dword ptr [esp], ebp; call edi; 
0x00163365: je 0x16338b; or al, 0x55; call edi; 
0x00163412: je 0x163425; sub esp, 0xc; push eax; call 0x186f70; mov dword ptr [esp], ebp; call esi; 
0x001635c1: je 0x1635d4; sub esp, 0xc; push ebx; call 0x186f70; mov dword ptr [esp], ebp; call ebx; 
0x00163656: je 0x163669; sub esp, 0xc; push ebx; call 0x186f70; mov dword ptr [esp], ebp; call ebx; 
0x00163e3b: je 0x163e61; cmp byte ptr [ebp - 0x69f4052], cl; call dword ptr [ebp - 0x73]; 
0x001668c8: je 0x1668c7; jmp dword ptr [esi - 0x70]; 
0x00169496: je 0x169480; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x0016ae8f: je 0x16aeb5; adc al, 0xeb; adc cl, byte ptr [ebp - 0x74ffd98c]; inc ebx; add al, 0x83; ret; 
0x0016b3e2: je 0x16b408; and al, 0x89; ret; 
0x0016b6bc: je 0x16b6e2; cmp byte ptr [edx + 2], ch; push dword ptr [esp + 0x3c]; call 0x16b4f0; add esp, 0x3c; ret; 
0x0016e6bd: je 0x16e6e3; adc al, 0x8b; inc esp; and al, 0x14; call eax; 
0x0016ebcb: je 0x16ebd6; sub esp, 0xc; push esi; call eax; 
0x0016ed6d: je 0x16ed95; add byte ptr [ebx + 0x10b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0016ee0d: je 0x16ee35; add byte ptr [ebx + 0x438b08ec], al; adc bh, bh; je 0x16ee3d; adc al, 0x56; call dword ptr [eax + 4]; 
0x0016ee17: je 0x16ee3d; adc al, 0x56; call dword ptr [eax + 4]; 
0x0016ee45: je 0x16ee6b; sbb al, 0x56; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0016ee54: je 0x16ef3b; sub esp, 0xc; mov eax, dword ptr [ebx + 0x10]; push esi; call dword ptr [eax + 0x10]; 
0x0016eee6: je 0x16ef70; mov dword ptr [esp + 4], edx; sub esp, 0xc; push eax; call dword ptr [ecx + 0xc]; 
0x0016f09e: je 0x16f0a9; sub esp, 0xc; push esi; call eax; 
0x0016f07d: je 0x16f114; mov eax, dword ptr [ebx + 0x10]; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x0016f121: je 0x16f11c; call dword ptr [eax - 0x18]; 
0x0016f1ce: je 0x16f1e3; sub esp, 0xc; mov ecx, dword ptr [eax + 4]; push eax; call dword ptr [ecx + 0x10]; 
0x0016f28b: je 0x16f2b1; adc al, 0xff; je 0x16f2b5; je 0x16f2e3; call dword ptr [ecx]; 
0x0016f28f: je 0x16f2b5; je 0x16f2e3; call dword ptr [ecx]; 
0x0016f291: je 0x16f2e3; call dword ptr [ecx]; 
0x0016f377: je 0x16f386; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x0016f3bb: je 0x16f3c8; add esp, 8; pop ebx; ret; 
0x0016f637: je 0x16f632; call dword ptr [eax - 0x18]; 
0x0016f81f: je 0x16f81a; call dword ptr [eax - 0x18]; 
0x0016faee: je 0x16fa7c; mov eax, dword ptr [ebx + 4]; sub esp, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x0016fb0a: je 0x16fa7c; sub esp, 0xc; mov eax, dword ptr [ebx + 4]; add esi, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x0016fc5d: je 0x16fc83; xor al, 0x56; push ecx; push 5; push ebx; call dword ptr [eax]; 
0x0016ff96: je 0x16ff3c; sub esp, 0xc; push edi; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x0016ff4b: je 0x16ff71; dec eax; mov eax, dword ptr [esi + 0x20]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0016ffb9: je 0x16ffc4; sub esp, 0xc; push edi; call eax; 
0x001701ca: je 0x17008e; sub esp, 0xc; push esi; call eax; 
0x001701b1: je 0x1701d7; dec eax; push esi; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x001702c5: je 0x1702d0; sub esp, 0xc; push esi; call eax; 
0x001702e5: je 0x17030b; sbb al, 0x8d; xchg byte ptr [esp], al; stc; call dword ptr [eax - 0x73]; 
0x00170485: je 0x1704ad; add byte ptr [ebx + 0x1b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x001705c3: je 0x1705d0; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0017066e: je 0x170698; mov dword ptr [eax], 0x10; mov dword ptr [eax + 4], 1; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x00170705: je 0x17072d; add bh, al; add byte ptr [eax + eax], cl; add byte ptr [eax], al; pop ebx; ret; 
0x00170c19: je 0x170c3f; or byte ptr [esi - 0x75], dl; inc esp; and al, 0x28; call dword ptr [eax + 0x18]; 
0x00170c51: je 0x170c5c; sub esp, 0xc; push esi; call eax; 
0x00170ea8: je 0x170ec8; sub esp, 0xc; mov eax, dword ptr [ebx + 0x2398]; push esi; call dword ptr [eax + 0x10]; 
0x001710df: je 0x1710da; call dword ptr [eax - 0x18]; 
0x00171088: je 0x17118b; sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x001711ab: je 0x1711a6; call dword ptr [eax - 0x18]; 
0x001712f8: je 0x1712f3; call dword ptr [eax - 0x18]; 
0x00171357: je 0x171352; call dword ptr [eax - 0x18]; 
0x0017138e: je 0x171389; call dword ptr [eax - 0x18]; 
0x001713b5: je 0x17141b; stc; call dword ptr [edx + 0x6a]; 
0x00171471: je 0x171497; sbb al, 0x53; call dword ptr [eax + 4]; 
0x00171468: je 0x1714a8; sub esp, 8; mov eax, dword ptr [ebx + 4]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax + 4]; 
0x001714bf: je 0x1714e5; sbb al, 0x53; call dword ptr [eax]; 
0x001714fa: je 0x171508; xor edx, edx; mov eax, edx; pop ebx; pop esi; ret; 
0x00171bdc: je 0x171bd7; call dword ptr [eax - 0x18]; 
0x00172d38: je 0x172d40; add esp, 4; pop ebx; pop esi; ret; 
0x00172e08: je 0x172e10; add esp, 4; pop ebx; pop esi; ret; 
0x00172ec8: je 0x172ed0; add esp, 4; pop ebx; pop esi; ret; 
0x00173c5b: je 0x173c6c; sub esp, 0xc; lea edx, [ebx + 0xac]; push edx; call eax; 
0x00173f05: je 0x173f2b; cmp byte ptr [esi - 0x75], dl; inc esp; and al, 0x3c; call eax; 
0x00174160: je 0x174186; inc eax; push ebp; call esi; 
0x001742dd: je 0x174305; add byte ptr [ecx], ch; ret; 
0x0017462f: je 0x17463a; sub esp, 0xc; push esi; call eax; 
0x00174608: je 0x174748; mov eax, dword ptr [ebp + 0xb0]; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x0017478f: je 0x17478a; call dword ptr [eax - 0x18]; 
0x0017486c: je 0x17487a; sub esp, 0xc; lea edx, [edi + 8]; push edx; call eax; 
0x0017495d: je 0x174958; call dword ptr [eax - 0x18]; 
0x00175075: je 0x175070; call dword ptr [eax - 0x18]; 
0x001750e1: je 0x1750dc; call dword ptr [eax - 0x18]; 
0x001752e5: je 0x17530d; add byte ptr [ebx + 0x5a8b0440], cl; and al, 0x83; ret 0x8b18; 
0x001754cd: je 0x1754f5; add byte ptr [ebx + 0x438b08ec], al; add al, 0x56; push ebx; call dword ptr [eax + 0x24]; 
0x00175a58: je 0x175a7e; adc al, ch; mov ebp, 0x81000141; ret; 
0x00175b38: je 0x175b43; sub esp, 0xc; push esi; call eax; 
0x00175b19: je 0x175b58; sub esp, 0xc; push esi; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x00175b65: je 0x175b60; call dword ptr [eax - 0x18]; 
0x00175cf3: je 0x175cfe; sub esp, 0xc; push edi; call eax; 
0x00175f10: je 0x175f0b; call dword ptr [eax - 0x18]; 
0x00176407: je 0x176402; call dword ptr [eax - 0x18]; 
0x001764fb: je 0x1764f6; call dword ptr [eax - 0x18]; 
0x00176b7a: je 0x176ba0; cmp byte ptr [esi - 0x75], dl; inc esp; and al, 0x3c; call eax; 
0x00176da8: je 0x176dce; inc eax; push ebp; call esi; 
0x0017709d: je 0x1770a8; sub esp, 0xc; push ebp; call eax; 
0x0017707f: je 0x177188; mov eax, dword ptr [edi + 0x50]; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x00177210: je 0x17720b; call dword ptr [eax - 0x18]; 
0x00177438: je 0x177446; sub esp, 0xc; lea edx, [ebx + 0x38]; push edx; call eax; 
0x001775f9: je 0x17761f; adc byte ptr [edi - 0x75], dl; inc esp; and al, 0x28; call eax; 
0x00177608: je 0x177aa0; sub esp, 0xc; mov eax, dword ptr [ebp + 0x3c]; push edi; call dword ptr [eax + 0x10]; 
0x00177c09: je 0x177c22; mov eax, dword ptr [esi]; sub esp, 0xc; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x00177dd3: je 0x177e80; mov eax, dword ptr [esi + 0x3c]; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x00177f1e: je 0x177f19; call dword ptr [eax - 0x18]; 
0x001783bd: je 0x1783e3; cmp al, 0x55; push edi; push esi; push eax; call dword ptr [edx]; 
0x00178518: je 0x178575; pop edi; ret; 
0x00178a6d: je 0x178a7e; sub esp, 0xc; mov eax, dword ptr [edx + 0x20]; push edx; call dword ptr [eax + 0x10]; 
0x00178b35: je 0x178aef; stc; call dword ptr [esi - 1]; 
0x00178b2d: je 0x178b55; add byte ptr [ebx - 0x7c72fb14], al; je 0x178aef; stc; call dword ptr [esi - 1]; 
0x00178c5f: je 0x178c19; stc; call dword ptr [ebp + 0x57]; 
0x00178e58: je 0x178e7e; sbb al, ch; mov ebp, 0x8100010d; ret; 
0x00179264: je 0x179270; pop ebx; pop esi; pop edi; ret; 
0x001792de: je 0x1792e8; pop ebx; pop esi; pop edi; ret; 
0x001792ea: je 0x1792ed; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x001792e5: je 0x17930d; add byte ptr [ebx + 0x17483], cl; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0017936e: je 0x179380; pop ebx; sub eax, -0x80; pop esi; pop edi; ret; 
0x001793fe: je 0x179410; pop ebx; add eax, 0x90; pop esi; pop edi; ret; 
0x0017948e: je 0x1794a0; pop ebx; add eax, 0x94; pop esi; pop edi; ret; 
0x00179668: je 0x179670; add esp, 4; pop ebx; pop esi; ret; 
0x00179855: je 0x17987d; add byte ptr [ecx + 0xb4a9], cl; add bl, ch; ret; 
0x00179c5d: je 0x179c85; add byte ptr [ebx + 0x438b08ec], al; or bh, bh; je 0x179c8d; adc al, 0x53; call dword ptr [eax]; 
0x00179c67: je 0x179c8d; adc al, 0x53; call dword ptr [eax]; 
0x00179d9a: je 0x179dc0; sbb al, 0x53; call eax; 
0x00179e66: je 0x179e8c; sbb al, 0x53; call dword ptr [eax + 0xc]; 
0x0017a0ff: je 0x17a118; mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x17a13c; add esp, 0x1c; ret; 
0x0017a1f8: je 0x17a21e; adc al, ch; sbb eax, 0x810000fa; ret; 
0x0017a22c: je 0x17a23a; sub esp, 0xc; lea edx, [edi + 8]; push edx; call eax; 
0x0017a31d: je 0x17a318; call dword ptr [eax - 0x18]; 
0x0017a7f2: je 0x17a7ed; call dword ptr [eax - 0x18]; 
0x0017a836: je 0x17a831; call dword ptr [eax - 0x18]; 
0x0017a87f: je 0x17a87a; call dword ptr [eax - 0x18]; 
0x0017a955: je 0x17a963; sub esp, 0xc; lea edx, [edi + 8]; push edx; call eax; 
0x0017a9db: je 0x17aa13; sub esp, 0xc; mov eax, dword ptr [ebx + 0xc]; push edi; call dword ptr [eax + 0x10]; 
0x0017abc5: je 0x17abc0; call dword ptr [eax - 0x18]; 
0x0017b135: je 0x17b130; call dword ptr [eax - 0x18]; 
0x0017b188: je 0x17b183; call dword ptr [eax - 0x18]; 
0x0017b1c7: je 0x17b1c2; call dword ptr [eax - 0x18]; 
0x0017b236: je 0x17b231; call dword ptr [eax - 0x18]; 
0x0017b3e5: je 0x17b40d; add byte ptr [ebx + 0x5e5b04c4], al; pop edi; pop ebp; ret; 
0x0017b7b5: je 0x17b7b0; call dword ptr [eax - 0x18]; 
0x0017b7b5: je 0x17b7b0; call dword ptr [eax - 0x18]; ret 0xeb96; 
0x0017b843: je 0x17b860; sub esp, 4; push -1; push ebp; push esi; call edi; 
0x0017b8e5: je 0x17b910; cmp eax, 2; sete al; movzx eax, al; ret; 
0x0017b9d5: je 0x17ba00; cmp eax, 2; sete al; movzx eax, al; ret; 
0x0017bff5: je 0x17c020; cmp eax, 2; sete al; movzx eax, al; ret; 
0x0017c0a0: je 0x17c0c6; adc byte ptr [ebx - 0x75], bl; inc eax; or al, 0x5e; pop edi; jmp eax; 
0x0017c0d9: je 0x17c0ff; adc byte ptr [ebx - 0x75], bl; inc eax; or byte ptr [esi + 0x5f], bl; jmp eax; 
0x0017c251: je 0x17c24c; call dword ptr [eax - 0x18]; 
0x0017c46b: je 0x17c466; call dword ptr [eax - 0x18]; 
0x0017cc8b: je 0x17ccb1; xor byte ptr [ebx + 0x74ed852f], cl; sbb al, 0x83; in al, dx; add al, 0x6a; call dword ptr [ebp + 0x56]; 
0x0017ccee: je 0x17cce9; call dword ptr [eax - 0x18]; 
0x0017d3aa: je 0x17d3a5; call dword ptr [eax - 0x18]; 
0x0017d39d: je 0x17d3c3; adc byte ptr [ebp - 0x69a487a], cl; call dword ptr [eax - 0x73]; 
0x0017dba6: je 0x17dbcc; xor byte ptr [ecx], ch; ret 0x5356; 
0x0017e3a6: je 0x17e3cc; xor byte ptr [ecx], ch; ret 0x5356; 
0x00180665: je 0x18068b; jo 0x180692; ret; 
0x0018240e: je 0x182420; add esp, 4; pop ebx; pop esi; ret; 
0x00182c4d: je 0x182c75; add byte ptr [ecx], dh; test byte ptr [ebx - 0xf76fb3c], 0x5b; pop esi; ret; 
0x00184012: je 0x184038; sbb byte ptr [ebp - 0x6993b80], cl; call dword ptr [eax - 0x18]; 
0x0018664c: je 0x186640; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x001866c5: je 0x1866f0; sub esp, 8; push edx; push eax; call dword ptr [ebx + 0x24]; 
0x0018674c: je 0x186770; sub esp, 8; push edx; push eax; call dword ptr [ebx + 0x28]; 
0x00186921: je 0x186930; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x30]; 
0x00186cba: je 0x186ce0; adc al, ch; scasb al, byte ptr es:[edi]; ret; 
0x00186dc0: je 0x186de6; adc al, 0xff; je 0x186dea; adc al, 0xe8; hlt; ret 0xffe9; 
0x00186dc4: je 0x186dea; adc al, 0xe8; hlt; ret 0xffe9; 
0x00186e4a: je 0x186e70; adc al, ch; push ds; ret 0xffe9; 
0x00188210: je 0x188236; or al, 0x8b; inc esp; and al, 0x14; call eax; 
0x0018855f: je 0x188585; or al, 0x8b; inc esp; and al, 0x14; call eax; 
0x001898da: je 0x1898f4; cmp al, 4; jne 0x24a3d; mov eax, 8; add esp, 0xc; ret; 
0x00189dad: je 0x189dd5; add byte ptr [ecx], dh; rol byte ptr [ebx - 0x6bf00008], cl; ret 0x1389; 
0x00189de1: je 0x189dfb; sub esp, 4; push dword ptr [esp + 0x20]; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x00189e45: je 0x189e53; lea edx, [ebx - 0x214]; mov dword ptr [eax + 0x94], edx; add esp, 8; pop ebx; ret; 
0x00189ec5: je 0x189ed0; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x0018a755: je 0x18a760; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x0018b371: je 0x18b380; mov dword ptr [ebx + 0x68], 0xffffffff; add esp, 4; pop ebx; pop esi; ret; 
0x0018b3f7: je 0x18b410; mov dword ptr [ebx + 0x68], 0xffffffff; add esp, 4; pop ebx; pop esi; ret; 
0x0018b61f: je 0x18b630; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0018b858: je 0x18b87e; adc al, ch; mov ebp, 0x81ffffe3; ret; 
0x0018b8d8: je 0x18b8fe; adc al, ch; cmp eax, 0x81ffffe3; ret; 
0x0018bbb6: je 0x18bbdc; and byte ptr [ebx + 0x568b1446], cl; adc byte ptr [ecx], bh; ret 0x4d72; 
0x0018db1d: je 0x18db45; add byte ptr [ebx - 0x46f7b], cl; inc dword ptr [ebx - 0x7f72f314]; mov bh, 0x47; stc; call dword ptr [eax - 0x18]; 
0x0018f81d: je 0x18f845; add byte ptr [ebx - 0x46f7b], cl; inc dword ptr [ebx - 0x7f72f314]; mov bh, 0x47; stc; call dword ptr [eax - 0x18]; 
0x0019055e: je 0x190584; sub al, 0xe8; jp 0x190539; idiv edi; add esp, 0x2c; ret; 
0x0019179d: je 0x1917c5; add byte ptr [ebx - 0x46f7b], cl; inc dword ptr [ebx - 0x7f72f314]; mov bh, 0x47; stc; call dword ptr [eax - 0x18]; 
0x00193a8c: je 0x193a90; mov byte ptr [edi], al; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00194c9d: je 0x194cb0; call 0x189c1d; add ebx, 0x46a8c; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00196c9d: je 0x196cb0; call 0x189c1d; add ebx, 0x44d0c; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00198c8f: je 0x198cb0; call 0x189c1d; add ebx, 0x42f9a; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0019adbd: je 0x19ade5; add bh, dh; ret 0xf; 
0x0019aed2: je 0x19aef0; call 0x189c1d; add ebx, 0x40f17; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0019beb2: je 0x19bed0; call 0x189c1d; add ebx, 0x400f7; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0019ceb2: je 0x19ced0; call 0x189c1d; add ebx, 0x3f2b7; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0019debd: je 0x19dee5; add bh, dh; ret 0xf; 
0x0019f2fd: je 0x19f325; add byte ptr [edi], cl; mov dh, 8; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x0019f34d: je 0x19f375; add byte ptr [edi], cl; mov dh, 0x48; add eax, 0x542b60f; sub eax, ecx; ret; 
0x0019f3ad: je 0x19f3d5; add byte ptr [eax + 1], bh; ja 0x19f3b9; neg eax; ret; 
0x001a0bfd: je 0x1a0c25; add byte ptr [esi + 0x5f], bl; pop ebx; pop ebp; xor eax, eax; ret; 
0x001a5fed: je 0x1a6015; add byte ptr [eax + 1], bh; ja 0x1a5ff9; neg eax; ret; 
0x001a649d: je 0x1a64b0; pop ebx; mov eax, 1; ja 0x1a64a9; neg eax; ret; 
0x001a64bd: je 0x1a64e5; add byte ptr [edx + 0xe], dh; movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x001a7cdd: je 0x1a7cc0; add eax, ecx; pop ebx; pop esi; ret; 
0x001a7e0d: je 0x1a7e35; add byte ptr [ecx], dh; fisttp dword ptr [ecx + 0x5f5e5bd8]; ret; 
0x001a7e84: je 0x1a7ea0; mov eax, 1; jg 0x1a7e90; neg eax; ret; 
0x001a81f6: je 0x1a8210; mov eax, 1; ja 0x1a8201; neg eax; ret; 
0x001a9afd: je 0x1a9b25; add dh, dh; ret 0x7510; 
0x001aad42: je 0x1aad4d; pmovmskb eax, xmm1; test eax, eax; jne 0x1aaf80; xor eax, eax; ret; 
0x001ab252: je 0x1ab2b0; bsr edi, edi; add eax, edi; pop edi; ret; 
0x001abb87: je 0x1abc8a; mov eax, 4; pop edi; ret; 
0x001abbe0: je 0x1abc9e; mov eax, 8; pop edi; ret; 
0x001abc30: je 0x1abcb2; mov eax, 0xc; pop edi; ret; 
0x001abc62: je 0x1abcc6; cmp byte ptr [edx + 0xf], 0; je 0x1abcc6; mov eax, 0x10; pop edi; ret; 
0x001abc68: je 0x1abcc6; mov eax, 0x10; pop edi; ret; 
0x001ac462: je 0x1ac470; test al, 1; jne 0x1ac480; lea eax, [ecx + 4]; ret; 
0x001ac45d: je 0x1ac485; add byte ptr [eax + eax*8 + 0x1a80c74], al; jne 0x1ac480; lea eax, [ecx + 4]; ret; 
0x001ac4fb: je 0x1ac48a; je 0x1ac525; add byte ptr [ebp - 0x37af037], al; add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x001ac46d: je 0x1ac495; add dh, dh; les eax, ptr [ecx]; jne 0x1ac490; lea eax, [ecx + 0xc]; ret; 
0x001ac4fd: je 0x1ac525; add byte ptr [ebp - 0x37af037], al; add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x001ac64c: je 0x1ac5e4; pop esi; lea eax, [edi - 0x10]; pop edi; ret; 
0x001ac710: je 0x1ac6f0; lea eax, [edi - 0x10]; pop edi; ret; 
0x001ac723: je 0x1ac6f0; test al, 0xf0; jne 0x1ac6b0; lea eax, [edi - 0x10]; pop edi; ret; 
0x001ac70b: je 0x1ac720; and eax, 1; je 0x1ac6f0; lea eax, [edi - 0x10]; pop edi; ret; 
0x001ae47b: je 0x1ae4a1; adc byte ptr [ecx], dh; fld xword ptr [ecx]; ret 0xe2c1; 
0x001afec9: je 0x1afeef; js 0x1aff06; ret; 
0x001b0fe7: je 0x1b1022; ret 0x840f; 
0x001b1843: je 0x1b1869; adc byte ptr [edi], cl; xchg ebp, eax; ret 0xc209; 
0x001b30f1: je 0x1b3117; js 0x1b312e; ret 0x840f; 
0x001b6e29: je 0x1b6e35; fld1; fdiv dword ptr [edx - 0x63da4]; fstp st(0); add esp, 0x20; ret; 
0x00024409: je 0x24426; sub esp, 0xc; push dword ptr [ebp - 0x34]; call dword ptr [ebp - 0x38]; 
0x00024522: je 0x24548; sbb al, 0xe8; ret 0xffff; 
0x00175e8c: je 0x249a9; sub esp, 0xc; push ebp; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x10]; 
0x00024af0: je 0x24b09; lea edx, [eax - 0x1b7974]; xor edx, dword ptr gs:[0x18]; rol edx, 9; mov dword ptr [eax + 0x1a50], edx; ret; 
0x00024b76: je 0x24b79; ret; 
0x00024d8e: je 0x24db4; adc al, 0x8b; inc esp; and al, 0x14; call eax; 
0x00024db3: je 0x24dcb; mov edx, 1; xor ebx, ebx; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x00024e24: je 0x24e4a; inc eax; push dword ptr [esp + 0x40]; call esi; 
0x00024e28: je 0x24e4e; inc eax; call esi; 
0x00024e1d: je 0x24e5c; sub esp, 4; push eax; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call esi; 
0x00024e7b: je 0x24ea1; inc eax; push dword ptr [esp + 0x40]; call ecx; 
0x00024e7f: je 0x24ea5; inc eax; call ecx; 
0x00024edd: je 0x24f05; add byte ptr [ebx - 0xa9fb14], al; je 0x24f0b; inc eax; push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x00024ee5: je 0x24f0b; inc eax; push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x00024ee9: je 0x24f0f; inc eax; call dword ptr [ebp]; 
0x00025d4b: je 0x25d71; pop eax; push ebp; push dword ptr [esp + 0x30]; push dword ptr [ebx + 4]; call edi; 
0x00025d50: je 0x25d76; xor bh, bh; jae 0x25d5a; call edi; 
0x00026112: je 0x26127; sub esp, 0xc; push esi; call 0x186f70; mov dword ptr [esp], ebx; call esi; 
0x00027075: je 0x2708a; sub esp, 0xc; push edi; call 0x186f70; mov dword ptr [esp], ebx; call edi; 
0x000282e4: je 0x28356; stc; call dword ptr [eax - 0x73]; 
0x000285e1: je 0x28607; pop esp; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x000285e5: je 0x2860b; pop eax; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x000285e9: je 0x2860f; pushal; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00029136: je 0x2915c; pushal; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; call edi; 
0x0002913a: je 0x29160; pop esp; push dword ptr [esp + 0x64]; call edi; 
0x000296c5: je 0x296eb; pop esp; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x000296c9: je 0x296ef; pop eax; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x000296cd: je 0x296f3; pushal; mov eax, dword ptr [esp + 0x48]; call eax; 
0x000299f0: je 0x29a16; cmp al, 0x8d; xchg byte ptr [ebx + ebp*2 - 7], ch; call dword ptr [eax - 0x73]; 
0x00029af7: je 0x29b1d; cmp al, 0x8d; xchg byte ptr [ebx + ebp*2 - 7], ch; call dword ptr [eax - 0x73]; 
0x00029b4d: je 0x29b73; cmp al, 0x8d; xchg byte ptr [ebx + ebp*2 - 7], ch; call dword ptr [eax - 0x73]; 
0x00029b70: je 0x29b96; cmp al, 0x8d; xchg byte ptr [ebx + ebp*2 - 7], ch; call dword ptr [eax + 0x68]; 
0x00029b93: je 0x29bb9; cmp al, 0x8d; xchg byte ptr [ebx + ebp*2 - 7], ch; call dword ptr [eax + 0x68]; 
0x00029d63: je 0x29d89; push esp; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x00029d67: je 0x29d8d; pop esp; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0002a2e2: je 0x2a308; push esp; push dword ptr [esp + 0x54]; call esi; 
0x0002a2e6: je 0x2a30c; push esp; call esi; 
0x0002addd: je 0x2ae03; pushal; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0002ade1: je 0x2ae07; pushal; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0002b77c: je 0x2b7a2; cmp al, 0x8d; xchg byte ptr [eax + 0x72], cl; stc; call dword ptr [eax - 0x73]; 
0x0002b7c2: je 0x2b7e8; cmp al, 0x8d; xchg byte ptr [eax + 0x72], cl; stc; call dword ptr [eax - 0x73]; 
0x0002b82e: je 0x2b854; cmp al, 0x8d; xchg ah, cl; push -7; call dword ptr [eax - 0x73]; 
0x0002ba5a: je 0x2ba80; insb byte ptr es:[edi], dx; push dword ptr [esp + 0x6c]; call edi; 
0x0002ba5e: je 0x2ba84; insb byte ptr es:[edi], dx; call edi; 
0x0002bc59: je 0x2bc7f; sub byte ptr [ebp - 0x2e7af00a], al; or byte ptr [eax], al; add byte ptr [ebx - 0x76e3db8c], cl; ret 0xb60f; 
0x0002bc65: je 0x2bc8b; sbb al, 0x89; ret 0xb60f; 
0x0002c3aa: je 0x2c3d0; and byte ptr [ebx - 0x76dbdb84], cl; ret 0xf229; 
0x0002c8b5: je 0x2c8db; pop esp; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x0002c8b9: je 0x2c8df; pop esp; mov eax, dword ptr [esp + 0x54]; call eax; 
0x0002d0a2: je 0x2d0c8; push dword ptr fs:[esp + 0x64]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x0002d0a6: je 0x2d0cc; mov eax, dword ptr fs:[esp + 0x54]; call eax; 
0x0002d43d: je 0x2d465; add byte ptr [ecx - 0x769fdbbc], cl; ret 0xa1e9; 
0x0002dc99: je 0x2dcbf; pop eax; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0002dc9d: je 0x2dcc3; pop eax; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0002e47e: je 0x2e4a4; push dword ptr fs:[esp + 0x64]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x0002e482: je 0x2e4a8; mov eax, dword ptr fs:[esp + 0x54]; call eax; 
0x0002f14d: je 0x2f173; cmp al, 0x8b; inc esp; and al, 0x34; call eax; 
0x0002f4ef: je 0x2f512; sub esp, 0xc; push ebx; call 0x186f70; mov dword ptr [esp], esi; call ebx; 
0x0002fd7e: je 0x2fd88; add esp, 8; pop ebx; ret; 
0x0002fd79: je 0x2fd88; cmp eax, 3; je 0x2fd88; add esp, 8; pop ebx; ret; 
0x000307e0: je 0x307db; call dword ptr [eax + 0x56]; 
0x00032519: je 0x3258e; stc; call dword ptr [eax - 0x73]; 
0x00032d9d: je 0x32dc5; add byte ptr [ebx + 0x440f06f8], al; ret 0xc89; 
0x0003352f: je 0x3352a; call dword ptr [eax + 0x56]; 
0x000337b9: je 0x337bd; call edx; 
0x00033a95: je 0x33a99; call eax; 
0x00033d69: je 0x33d75; mov dword ptr [esp + 0x14], eax; call edx; 
0x000340bc: je 0x340b7; call dword ptr [esi + 0x50]; 
0x000342dc: je 0x342d7; call dword ptr [eax - 0x18]; 
0x00034e0f: je 0x34e16; cmp byte ptr [eax], 0; jne 0x34e20; mov eax, edx; add esp, 0xc; ret; 
0x00034e4f: je 0x34e56; cmp byte ptr [eax], 0; jne 0x34e60; mov eax, edx; add esp, 0xc; ret; 
0x00034eda: je 0x34f00; sbb byte ptr [edx], ch; call 0x34e80; add esp, 0x1c; ret; 
0x000361ad: je 0x361d5; add byte ptr [ebp - 0x7cd58a40], al; ret; 
0x00036512: je 0x36538; sub byte ptr [edx], ch; call 0x364a0; add esp, 0x2c; ret; 
0x00036e56: je 0x36e7c; and al, 0xe8; dec edx; ret; 
0x00036ffd: je 0x37025; add byte ptr [ecx - 0x7cbbdb94], cl; ret; 
0x00039af6: je 0x39b1c; and al, 0xe8; ret 0xfff5; 
0x0003b997: je 0x3b99b; fchs; ret; 
0x0003bd37: je 0x3bd3b; fchs; ret; 
0x0003d0a5: je 0x3d0b7; mov dword ptr [eax + 4], 0; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x0003d509: je 0x3d520; lea ecx, [eax + 1]; mov dword ptr [edx + 0x1f4], ecx; ret; 
0x0003d64d: je 0x3d675; add al, ch; stosd dword ptr es:[edi], eax; syscall; 
0x0003d683: je 0x3d6a9; sbb al, ch; cmc; syscall; 
0x0003dffc: je 0x3e022; sbb al, 0xe8; lodsb al, byte ptr [esi]; test dword ptr [eax], 0x1cc48300; ret; 
0x0003e03c: je 0x3e062; sbb al, 0xe8; sub al, 0x35; add dword ptr [eax], eax; add esp, 0x1c; ret; 
0x0003e98f: je 0x3e9b5; sbb al, 0xe8; cmp dword ptr [ecx], eax; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0003ed54: je 0x3ecd9; in al, dx; or byte ptr [edx], ch; push edx; call eax; 
0x0003f0ac: je 0x3f0d2; sbb byte ptr [eax + 0x50], dl; call 0x3f110; add esp, 0x1c; ret; 
0x0003f265: je 0x3f28b; dec esp; call eax; 
0x0003f9d5: je 0x3f9fb; xor byte ptr [eax - 0x73], dl; test dword ptr [edx], ebp; das; stc; call dword ptr [ebx + 0x50]; 
0x0004109f: je 0x410c5; or byte ptr [esi + 0x57], dl; mov eax, dword ptr [esp + 0x10]; call eax; 
0x00041154: je 0x4117a; or byte ptr [esi + 0x57], dl; mov eax, dword ptr [esp + 0x10]; call eax; 
0x000411cc: je 0x411f2; or byte ptr [esi + 0x57], dl; mov eax, dword ptr [esp + 0x10]; call eax; 
0x00041284: je 0x412aa; or bh, bh; push dword ptr ss:[edi]; mov eax, dword ptr [esp + 0x10]; call eax; 
0x0004211b: je 0x42128; add esp, 8; pop ebx; ret; 
0x0004291d: je 0x42945; add byte ptr [eax + 1], bh; xor edx, edx; pop ebx; ret; 
0x0004298a: je 0x42999; bsr ecx, eax; mov eax, 0x80000000; xor ecx, 0x1f; shr eax, cl; ret; 
0x000429aa: je 0x429b9; bsr ecx, eax; mov eax, 0x80000000; xor ecx, 0x1f; shr eax, cl; ret; 
0x000429eb: je 0x429f1; mov eax, edx; xor edx, edx; ret; 
0x00042a3b: je 0x42a43; bsr eax, eax; add eax, 1; ret; 
0x00042a5a: je 0x42a62; bsr eax, eax; add eax, 1; ret; 
0x00042a7a: je 0x42a82; bsr eax, eax; add eax, 1; ret; 
0x00042aeb: je 0x42af3; bsr eax, eax; add eax, 1; ret; 
0x00042d0a: je 0x42d15; bsr eax, eax; xor eax, 0x1f; add eax, 1; ret; 
0x00042d2a: je 0x42d35; bsr eax, eax; xor eax, 0x1f; add eax, 1; ret; 
0x00042d55: je 0x42d70; bsr eax, edx; xor eax, 0x1f; add eax, 1; pop ebx; ret; 
0x00042e3d: je 0x42e65; add byte ptr [ecx], dh; leave; pop ebx; mov eax, ecx; ret; 
0x00042e8c: je 0x42e98; movzx eax, al; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x00042efb: je 0x42f10; add ecx, 1; pop ebx; mov eax, ecx; ret; 
0x00042f05: je 0x42f2d; add byte ptr [ecx], dh; leave; pop ebx; mov eax, ecx; ret; 
0x00042f2d: je 0x42f39; movzx eax, ax; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x00042f6d: je 0x42f78; not eax; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x00042f8d: je 0x42f98; not eax; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x00042fc2: je 0x42fd0; add ecx, 1; pop ebx; mov eax, ecx; ret; 
0x00042fdd: je 0x43005; add byte ptr [ecx], dh; leave; pop ebx; mov eax, ecx; ret; 
0x000430d5: je 0x430e0; bsr eax, eax; xor eax, 0x1f; lea edx, [eax - 0x18]; mov eax, edx; ret; 
0x00043100: je 0x43108; bsr eax, edx; xor eax, 0x1f; ret; 
0x00043120: je 0x43128; bsr eax, edx; xor eax, 0x1f; ret; 
0x00043185: je 0x43190; bsr eax, eax; xor eax, 0x1f; lea edx, [eax - 0x10]; mov eax, edx; ret; 
0x000431b0: je 0x431bb; bsr eax, eax; xor eax, 0x1f; lea edx, [eax - 0x18]; mov eax, edx; ret; 
0x000431cf: je 0x431d7; bsr eax, edx; xor eax, 0x1f; ret; 
0x000431ef: je 0x431f7; bsr eax, edx; xor eax, 0x1f; ret; 
0x00043250: je 0x4325b; bsr eax, eax; xor eax, 0x1f; lea edx, [eax - 0x10]; mov eax, edx; ret; 
0x000432e4: je 0x432f0; pop ebx; ret; 
0x000433a0: je 0x433a8; pop ebx; ret; 
0x000433a5: je 0x433cd; add bl, dh; bsf ecx, ecx; pop ebx; lea eax, [ecx + 0x20]; ret; 
0x00043414: je 0x4343a; sub al, 0xe8; and al, 0; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x00045436: je 0x4545c; adc al, ch; ret 0x165; 
0x00046fe6: je 0x46faa; stc; jmp dword ptr [ebp - 0x75]; 
0x00047362: je 0x47326; stc; jmp dword ptr [ebp - 0x75]; 
0x00047432: je 0x473f6; stc; jmp dword ptr [ebp - 0x75]; 
0x0004972d: je 0x49753; or al, 0x89; ret; 
0x0004b745: je 0x4b748; ret; 
0x0004d7de: je 0x4d804; sub al, 0xe8; sbb al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0004df18: je 0x4df3e; sbb al, 0xe8; and byte ptr [ecx], cl; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0005159e: je 0x515c4; sub al, 0xe8; sbb al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x00051f7e: je 0x51fa4; sub al, 0xe8; sbb al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0005265e: je 0x52684; sub al, 0xe8; sbb al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x00055d75: je 0x55d90; add al, 0x83; ret; 
0x00059cf8: je 0x59c9d; std; dec dword ptr [ebx - 0x364743]; dec dword ptr [ebp - 0x6877779]; call dword ptr [eax - 0x73]; 
0x0005a08b: je 0x5a0b1; sbb al, 0x89; ret 0xc801; 
0x0005aab9: je 0x5ab2f; jns 0x5aa83; inc eax; or byte ptr [eax], al; mov eax, edx; ret; 
0x0005aaba: je 0x5ab35; mov byte ptr [eax + 8], 0; mov eax, edx; ret; 
0x0005ac54: je 0x5ac7a; sbb al, 0xe8; in al, 0xb7; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0005ace2: je 0x5acf0; sub eax, 1; mov dword ptr [edx + 4], eax; ret; 
0x0005acdd: je 0x5ad05; add byte ptr [ebp - 0x7cf38b40], al; call 0x44835eb; ret; 
0x0005b098: je 0x5b0be; sbb byte ptr [ebx + 0x16480], cl; add bh, bh; xor al, ch; sbb byte ptr [eax + eax + 0x1cc48300], dh; ret; 
0x0005b720: je 0x5b730; add esp, 0xc; ret; 
0x0005bc1d: je 0x5bc43; or al, 0x56; push edx; push eax; call dword ptr [ebp + 0x1c]; 
0x0005df20: je 0x5df9d; stc; call dword ptr [eax - 0x18]; 
0x00060645: je 0x60640; call dword ptr [eax - 0x18]; 
0x000606a0: je 0x6069b; call dword ptr [eax - 0x18]; 
0x0006094d: je 0x60975; add byte ptr [eax - 0x73], dl; sub dword ptr [edi + 0x53], -7; call dword ptr [eax + 0x6a]; 
0x00060ab3: je 0x60aae; call dword ptr [eax - 0x18]; 
0x00061389: je 0x613b0; mov eax, 0x161; call dword ptr gs:[0x10]; 
0x00061472: je 0x61498; sub byte ptr [edx - 1], ch; push dword ptr [esp + 0x2c]; call 0x7ea40; add esp, 0x2c; ret; 
0x00061be9: je 0x61c0f; adc byte ptr [ebx - 0x6c72f714], al; xor cl, bh; call dword ptr [esi + 0x52]; 
0x00062032: je 0x62058; sbb al, 0xe8; test byte ptr [eax], 0; add esp, 0x1c; ret; 
0x00062a79: je 0x62a9f; sbb byte ptr [ebp - 0x682477a], cl; call dword ptr [eax - 0x73]; 
0x00064047: je 0x6406d; sub al, 1; ret; 
0x0006488a: je 0x648b0; and byte ptr [ebx + 0x3182444], cl; test byte ptr [esi - 0x73e94], dl; jmp eax; 
0x00067b5d: je 0x67b85; add byte ptr [ebx - 0x59743], al; call dword ptr [eax]; 
0x0006dc62: je 0x6dc88; sbb al, 0xe8; out 0x49, al; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0006e861: je 0x6e887; sbb byte ptr [ebp - 0x682477a], cl; call dword ptr [eax - 0x73]; 
0x00078ec9: je 0x78f49; stc; call dword ptr [eax - 0x18]; 
0x000790d0: je 0x790e0; add esp, 0xc; ret; 
0x000791e6: je 0x79225; add esp, 4; mov eax, 1; pop ebx; pop esi; ret; 
0x0007c0e3: je 0x7c0fc; sub esp, 4; push ebx; push dword ptr [esp + 0x1c]; push dword ptr [esi + 0x98]; call eax; 
0x0007c143: je 0x7c169; xor byte ptr [ebp + 0x5110244c], cl; push dword ptr [edx + 0x98]; call eax; 
0x0007c159: je 0x7c170; mov eax, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x0007c19a: je 0x7c1b0; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 4], edx; jmp eax; 
0x0007d4ed: je 0x7d515; add byte ptr [ebx + 0x106a04ec], al; push ebp; push esi; call dword ptr [eax + 0x1c]; 
0x0007d602: je 0x7d610; sub eax, 1; mov dword ptr [edx + 0x1a44], eax; ret; 
0x0007daf8: je 0x7db00; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x0007f63d: je 0x7f665; add dh, dh; ret 0x7420; 
0x0007fb05: je 0x7fb2d; add byte ptr [ecx - 0x76207622], cl; ret 0xcb89; 
0x000810e8: je 0x8110e; adc al, ch; sub eax, 0x8100108b; ret; 
0x00081158: je 0x8117e; adc al, ch; mov ebp, 0x8100108a; ret; 
0x000811ca: je 0x811f0; adc byte ptr [ebx - 0x75], bl; inc edi; adc al, 0x5e; pop edi; jmp eax; 
0x0008131a: je 0x81340; adc byte ptr [ebx - 0x75], bl; inc edi; adc byte ptr [esi + 0x5f], bl; jmp eax; 
0x00081523: je 0x81528; and dword ptr [esi], 0xffffffef; pop ebx; pop esi; pop edi; ret; 
0x0008157d: je 0x81582; and dword ptr [ebx], 0xffffffef; add esp, 4; pop ebx; pop esi; ret; 
0x000815f6: je 0x81608; cmp ecx, edx; jb 0x815f0; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00082055: je 0x8207d; add byte ptr [eax - 1], bh; ret; 
0x00082bd0: je 0x82bf6; adc byte ptr [ebx - 0x3b7cefc0], cl; add al, 0x5b; pop esi; jmp eax; 
0x0008356d: je 0x83595; add byte ptr [ecx], dh; fstp xword ptr [ecx]; ror dword ptr [edi], 1; xchg esp, eax; ret; 
0x00083f3d: je 0x83f65; add byte ptr [eax - 1], bh; ret; 
0x00084358: je 0x8437e; adc al, ch; mov ebp, 0x81001058; ret; 
0x00084757: je 0x84768; mov eax, dword ptr [eax + 0x38]; test eax, eax; js 0x84768; ret; 
0x00084d68: je 0x84d5c; stc; jmp dword ptr [esi - 0x70]; 
0x0008557e: je 0x855a4; sbb al, 0xe8; lcall 0x1cc4, 0x83ffff90; ret; 
0x000857de: je 0x85804; sbb al, 0xe8; lcall 0x18c4, 0x83fffffe; pop ebx; ret; 
0x00085a53: je 0x85a58; mov byte ptr [edx], 0; pop ebx; ret; 
0x00087582: je 0x87590; sub eax, 1; mov dword ptr [edx + 0x1a58], eax; ret; 
0x000878f5: je 0x8791d; add byte ptr [ecx + 0x5bd889fb], cl; pop esi; pop edi; ret; 
0x00087bd5: je 0x87bfd; add byte ptr [ebx + 0x408b0850], cl; adc byte ptr [ecx + 0x39082444], cl; ret 0x8c74; 
0x00088a1d: je 0x88a43; sbb byte ptr [ebx - 0x17ebdba4], cl; ja 0x889ce; stc; jmp dword ptr [ebp - 0x75]; 
0x00088c08: je 0x88c2e; adc al, ch; or eax, 0x81001010; ret; 
0x00088c47: je 0x88c50; pop ebx; pop esi; pop edi; ret; 
0x000890f6: je 0x8911c; adc al, 0x8b; adc esi, esi; ret 0xf08; 
0x00089cce: je 0x89cf4; sub al, 0x55; push edi; push ebx; call dword ptr [esi + 0x40]; 
0x0008a3ad: je 0x8a3d3; cmp al, 0x55; call dword ptr [esi + 0x20]; 
0x0008a476: je 0x8a4f0; sub eax, 1; mov dword ptr [ebx + 0x1a78], eax; add esp, 8; pop ebx; ret; 
0x0008afd8: je 0x8affe; adc al, ch; cmp eax, 0x81000fec; ret; 
0x0008b070: je 0x8b096; adc byte ptr [ebx - 0x75], bl; inc edi; adc byte ptr [esi + 0x5f], bl; jmp eax; 
0x0008b240: je 0x8b266; adc byte ptr [ebx - 0x75], bl; inc edi; adc al, 0x5e; pop edi; jmp eax; 
0x0008b8d1: je 0x8b8f7; cmp byte ptr [edx], ch; push ebp; push edi; push ebx; call dword ptr [esi + 0x24]; 
0x0008ba4c: je 0x8ba62; mov dword ptr [eax], 0; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; ret; 
0x0008bda6: je 0x8bdb8; cmp ecx, edx; jb 0x8bda0; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0008c946: je 0x8c958; cmp eax, edx; jne 0x8c940; mov eax, dword ptr [eax]; mov dword ptr [ecx], eax; ret; 
0x0008cdb0: je 0x8cdcc; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0008cdc2: je 0x8cdd0; sub eax, 1; mov dword ptr [edx + 0x1a78], eax; ret; 
0x0008cddc: je 0x8cdf8; add byte ptr [eax], al; cmp eax, 1; jg 0x8cdf0; ret; 
0x0008cdf5: je 0x8ce11; add byte ptr [eax], al; push eax; call 0x8f2d0; add esp, 0x1c; ret; 
0x0008d0cd: je 0x8d0f3; sbb al, 0x85; ror byte ptr [edi], 0x48; ret 0xff50; 
0x0008d0db: je 0x8d101; sbb al, 0xe8; sub eax, 0x83ffffff; les ebx, ptr [eax]; pop ebx; ret; 
0x0008d6c5: je 0x8d6ed; add byte ptr [eax - 1], bh; ret; 
0x0008d757: je 0x8d770; mov dword ptr [esp + 0x14], ecx; mov dword ptr [esp + 0x10], edx; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x0008d843: je 0x8d858; mov dword ptr [esp + 0x10], ecx; mov eax, dword ptr [eax + 4]; add esp, 0xc; jmp eax; 
0x0008dff5: je 0x8e01b; sub al, 0xff; je 0x8e01f; cmp al, 0x51; push dword ptr [esp + 0x3c]; call eax; 
0x0008dff9: je 0x8e01f; cmp al, 0x51; push dword ptr [esp + 0x3c]; call eax; 
0x0008e115: je 0x8e110; call dword ptr [eax - 0x18]; 
0x0008e167: je 0x8e18d; xor bh, bh; je 0x8e191; cmp al, 0x51; call eax; 
0x0008e16b: je 0x8e191; cmp al, 0x51; call eax; 
0x0008e23f: je 0x8e265; xor byte ptr [edx + 0x51], dl; call eax; 
0x0008e340: je 0x8e366; sub al, 0x52; push ecx; push edi; call eax; 
0x0008e4e8: je 0x8e50e; and al, 0x51; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0008e638: je 0x8e650; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x0008e798: je 0x8e7a8; mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0008e85c: je 0x8e863; add esp, 8; pop ebx; ret; 
0x0008e89d: je 0x8e8b0; mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0008e956: je 0x8e960; ret; 
0x0008f063: je 0x8f110; mov ecx, dword ptr [esp + 0xc]; mov eax, 0x1a6; xor edx, edx; call dword ptr gs:[0x10]; 
0x0008f1c4: je 0x8f1cb; add esp, 8; pop ebx; ret; 
0x0008f2c5: je 0x8f2ed; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0008f6a2: je 0x8f680; sub esp, 0xc; add ebx, 8; add esi, 8; push eax; call ecx; 
0x0008f97a: je 0x8f988; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0008fcbd: je 0x8fcf8; xor esi, esi; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0009025d: je 0x90270; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x000906bf: je 0x906d0; test edx, edx; jne 0x906e0; and dword ptr [eax + 8], 0xfffffffe; xor eax, eax; ret; 
0x000907ea: je 0x90800; cmp eax, 1; mov edx, 0x16; mov eax, 0x5f; cmovne eax, edx; ret; 
0x00090964: je 0x90998; mov ecx, dword ptr [ebx + 0xc]; mov eax, edi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x000909fd: je 0x90a25; add byte ptr [eax + 0x16], bh; pop ebx; ret; 
0x00090c6e: je 0x90c80; add esp, 4; pop ebx; pop esi; ret; 
0x00091191: je 0x911a9; xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x00091487: je 0x914b8; mov eax, edi; call dword ptr gs:[0x10]; 
0x000916f1: je 0x9170c; xor esi, esi; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00091805: je 0x9182d; add byte ptr [eax + 0xf0], bh; mov edx, 1; xor esi, esi; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x0009191e: je 0x91928; pop ebx; pop esi; pop edi; ret; 
0x00091980: je 0x91990; pop ebx; pop esi; pop edi; ret; 
0x000919f9: je 0x91a00; pop ebx; pop esi; pop edi; ret; 
0x00092abe: je 0x92b1c; mov ebx, dword ptr [esi + 0x68]; mov ecx, dword ptr [esi + 0x224]; lea edx, [esi + 0x220]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x00092d21: je 0x92d27; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00092f6b: je 0x92f93; mov ecx, dword ptr [ebp - 0x58]; mov eax, 0xf0; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x00093d4b: je 0x93536; test al, 0x40; jne 0x93536; mov eax, 0x9d; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x00093963: je 0x93989; add al, 0x89; ret; 
0x00094e3d: je 0x94e65; add byte ptr [eax + 0x16], bh; pop ebx; ret; 
0x00096dcd: je 0x96df5; add bh, dh; ret 0; 
0x00098073: je 0x98080; mov eax, 0x16; ret; 
0x0009807d: je 0x980a5; add byte ptr [ecx + 8], al; xor byte ptr [ecx], 0xc0; ret; 
0x0009809e: je 0x980b0; cmp edx, 1; jne 0x980c0; or dword ptr [eax], 0x40000000; xor eax, eax; ret; 
0x00098121: je 0x98135; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x000981fd: je 0x98240; mov eax, 0xf0; mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x00098300: je 0x98310; xor eax, eax; add esp, 0xc; ret; 
0x00099492: je 0x99498; test al, 1; jne 0x9946a; mov eax, 0x10; pop ebx; ret; 
0x0009947e: je 0x994a0; mov eax, dword ptr gs:[0x68]; mov dword ptr [edx + 0x1c], eax; xor eax, eax; pop ebx; ret; 
0x0009966b: je 0x995e8; mov ecx, dword ptr [esp + 4]; mov eax, 0xf0; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00099db5: je 0x99ddb; adc al, 0x89; ret 0xe283; 
0x00099de5: je 0x99e0d; add byte ptr [ebx - 0x48], bl; push ss; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x00099ddc: je 0x99e2c; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x00099eb5: je 0x99edb; adc al, 0x89; ret 0xe283; 
0x00099ee0: je 0x99f2c; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0009a4f6: je 0x9a51c; sbb al, 0x89; ret; 
0x0009a5f7: je 0x9a5fa; ret; 
0x0009a6dc: je 0x9a702; sub al, 0x52; call 0x94be0; add esp, 0x20; add esp, 0xc; ret; 
0x0009a6ed: je 0x9a715; add byte ptr [eax + 0x10], bh; add esp, 0xc; ret; 
0x0009a76b: je 0x9a740; mov ecx, dword ptr [ebx + 4]; mov eax, 0xf0; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009a739: je 0x9a748; lock sub dword ptr [ebx + 0xc], 1; pop ebx; pop esi; pop edi; ret; 
0x0009a9d1: je 0x9a9e0; xor eax, eax; add esp, 8; pop ebx; ret; 
0x0009ac45: je 0x9ac6d; add byte ptr [ebx + 0x685504ec], al; ret 0xa00; 
0x0009aec2: je 0x9aee1; xor cl, 0x81; mov eax, 0xf0; mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x0009af33: je 0x9af40; ret; 
0x0009b48b: je 0x9b460; mov ecx, dword ptr [ebx + 4]; mov eax, 0xf0; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009b459: je 0x9b468; lock sub dword ptr [ebx + 0xc], 1; pop ebx; pop esi; pop edi; ret; 
0x0009b7fb: je 0x9b7d0; mov ecx, dword ptr [ebx + 4]; mov eax, 0xf0; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009b7c9: je 0x9b7d8; lock sub dword ptr [ebx + 0xc], 1; pop ebx; pop esi; pop edi; ret; 
0x0009cff4: je 0x9cfb2; pop ebx; pop esi; ret; 
0x0009cfd1: je 0x9d020; mov dword ptr [esi + 0x10], edx; pop ebx; pop esi; ret; 
0x0009d695: je 0x9d682; mov eax, dword ptr [eax + 0xc]; test eax, eax; jne 0x9d690; pop ebx; ret; 
0x0009d67e: je 0x9d693; xor eax, eax; pop ebx; ret; 
0x0009f1ce: je 0x9f1f4; sbb al, 0xe8; sbb al, byte ptr [esi]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0009f4ef: je 0x9f530; mov ebx, dword ptr [esp + 0x90]; mov eax, 0x119; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0009f994: je 0x9f9ba; add al, 0xb8; sbb byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0009fb84: je 0x9fbaa; dec esp; call dword ptr gs:[0x10]; 
0x0009fc09: je 0x9fc2f; dec esp; call dword ptr gs:[0x10]; 
0x0009fc5c: je 0x9fc82; dec esp; mov eax, 0x117; call dword ptr gs:[0x10]; 
0x0009fca4: je 0x9fcca; dec esp; mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x000a047a: je 0xa04a0; sub al, 0xb8; add al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000a0473: je 0xa04e8; mov ecx, dword ptr [esp + 0x64]; lea esi, [esp + 0x2c]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x000a04ed: je 0xa0513; add al, 0xb8; add al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000a0f3d: je 0xa0f65; add byte ptr [ebx + 0x528b0442], cl; or byte ptr [ecx], al; lds edi, ptr [ecx]; ret; 
0x000a20b6: je 0xa20d0; pop ebx; pop esi; pop edi; ret; 
0x000a2369: je 0xa2370; add esp, 0xc; ret; 
0x000a238d: je 0xa23b5; add byte ptr [ebp - 0x77], dl; ret 0x5657; 
0x000a27b6: je 0xa27dc; adc al, 0x8d; xchg al, dh; cwde; stc; call dword ptr [eax - 0x73]; 
0x000a27d9: je 0xa27ff; adc al, 0x8d; xchg al, dh; cwde; stc; call dword ptr [eax - 0x73]; 
0x000a27fc: je 0xa2822; adc al, 0x8d; xchg al, dh; cwde; stc; call dword ptr [eax - 0x73]; 
0x000a281f: je 0xa2845; adc al, 0x8d; xchg al, dh; cwde; stc; call dword ptr [eax - 0x73]; 
0x000a2842: je 0xa2868; adc al, 0x8d; xchg al, dh; cwde; stc; call dword ptr [eax - 0x73]; 
0x000a28cb: je 0xa28f1; adc al, 0x8d; xchg ah, bh; cwde; stc; call dword ptr [eax - 0x73]; 
0x000a2c31: je 0xa2c57; or al, 0x89; pop edi; or al, 0x89; ret; 
0x000a42c7: je 0xa42ed; or byte ptr [ebp + 0x94c9f], cl; add byte ptr [ebx + 0x390c246c], cl; fimul word ptr [ebp - 0x6af0d5fc]; ret; 
0x000a4897: je 0xa48bd; or byte ptr [ebp - 0x6674f7a], cl; call dword ptr [eax - 0x73]; 
0x000a48ba: je 0xa48e0; or byte ptr [ebp - 0x6674f7a], cl; call dword ptr [eax - 0x73]; 
0x000a501d: je 0xa5045; add byte ptr [ecx - 0x76e7743a], cl; ret 0xeec1; 
0x000a6a7f: je 0xa6a7a; call dword ptr [eax - 0x18]; 
0x000a6c6d: je 0xa6d48; sub esp, 8; push esi; push dword ptr [ebx + 0x24]; call eax; 
0x000a6d80: je 0xa6d90; sub esp, 8; push ecx; push dword ptr [ebx + 0x24]; call eax; 
0x000a7a17: je 0xa7a12; call dword ptr [eax - 0x18]; 
0x000a8058: je 0xa807e; sbb al, ch; mov ebp, 0x81000e1b; ret; 
0x000a870d: je 0xa8735; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000a947f: je 0xa9497; lea eax, [edx - 0xabbf4]; test byte ptr [ecx + 0x19c], 1; lea edx, [edx - 0xab574]; cmovne eax, edx; ret; 
0x000a9c08: je 0xa9c2e; or byte ptr [ecx], al; ret 0xfe83; 
0x000aa2c6: je 0xaa2cd; cmp cl, dl; je 0xaa2cd; inc eax; pop edi; ret; 
0x000aa2ca: je 0xaa2cd; inc eax; pop edi; ret; 
0x000aa336: je 0xaa35c; sbb al, 0xe8; and al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000ab5b6: je 0xab5dc; cmp al, 0xe8; ret 0xfce1; 
0x000ab5e4: je 0xab5df; call dword ptr [eax - 0x18]; 
0x000aba59: je 0xaba5f; cmp eax, ebx; jne 0xaba50; mov eax, edx; pop ebx; ret; 
0x000abb29: je 0xabb20; pop ebx; ret; 
0x000abb59: je 0xabb50; cmp edx, esi; je 0xabb50; pop ebx; pop esi; ret; 
0x000abb5d: je 0xabb50; pop ebx; pop esi; ret; 
0x000abbfd: je 0xabc10; cmp eax, ecx; jne 0xabbf0; mov eax, edx; pop ebx; ret; 
0x000ac088: je 0xac0ae; sbb al, 0xe8; and byte ptr [ebp + 1], 0; add esp, 0x18; pop ebx; ret; 
0x000ac5be: je 0xac5b9; call dword ptr [eax + 0x55]; 
0x000ac5f9: je 0xac5f4; call dword ptr [eax - 0x18]; 
0x000aca1d: je 0xaca43; sbb al, 0x83; rol byte ptr [ecx], 0x83; ret; 
0x000acfbd: je 0xacfe3; sbb al, 0xe8; or eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000b16ad: je 0xb16d5; add byte ptr [edx - 0x76fd77ff], cl; clc; pop edi; ret; 
0x000b3588: je 0xb358c; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000b36bd: je 0xb36e5; add byte ptr [ecx + 0x4518811], cl; pop ebx; ret; 
0x000b374d: je 0xb3775; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000b375d: je 0xb3785; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000b376d: je 0xb3795; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x000b449a: je 0xb38d0; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; pop ebx; ret; 
0x000b443f: je 0xb3950; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; pop ebx; ret; 
0x000b7b0d: je 0xb7b35; add byte ptr [ecx + 0x4518811], cl; pop ebx; ret; 
0x000b7b9d: je 0xb7bc5; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000b7bad: je 0xb7bd5; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000b7bbd: je 0xb7be5; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x000b95a8: je 0xb95b2; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000b9ced: je 0xb9d15; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b9cfd: je 0xb9d25; add byte ptr [eax + 0x5b5e5f17], cl; ret; 
0x000b9f9d: je 0xb9fc5; add byte ptr [ecx + 0x5b5e5ff8], cl; ret; 
0x000bb3dd: je 0xbb405; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000bb3ed: je 0xbb415; add byte ptr [eax + 0x5b5e5f17], cl; ret; 
0x000bb69d: je 0xbb6c5; add byte ptr [ecx + 0x5b5e5ff8], cl; ret; 
0x000bcf9d: je 0xbcfc5; add byte ptr [eax + 0x18b047a], cl; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x000c0f3d: je 0xc0f65; add byte ptr [ebx + 0x5e], bl; ret; 
0x000c111f: je 0xc1280; bsr eax, eax; add eax, edi; pop edi; ret; 
0x000c128d: je 0xc12b5; add byte ptr [ebx + 0x5e], bl; pop edi; xor eax, eax; ret; 
0x000c12d7: je 0xc12f0; bsf ecx, ecx; sub edx, ecx; jbe 0xc1310; add eax, ecx; ret; 
0x000c14a9: je 0xc14fa; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000c155b: je 0xc15ac; adc byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x315a75c0], 0xc0; pop edi; ret; 
0x000c17f2: je 0xc17fd; pmovmskb eax, xmm1; test eax, eax; jne 0xc1870; xor eax, eax; ret; 
0x000c1820: je 0xc186b; and byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x316575c0], 0xc0; ret; 
0x000c18da: je 0xc18b0; bsr ecx, edx; add eax, ecx; ret; 
0x000c1932: je 0xc1990; bsr edi, edi; add eax, edi; pop edi; ret; 
0x000c1b1f: je 0xc1b30; bsf ecx, ecx; add eax, ecx; ret; 
0x000c1b68: je 0xc1b80; bsf eax, eax; add eax, edx; add eax, ecx; ret; 
0x000c1ca8: je 0xc1cf4; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000c1d9f: je 0xc1d80; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000c1e1f: je 0xc1e00; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000c1ff1: je 0xc1ff4; inc eax; pop edi; ret; 
0x000c2195: je 0xc2198; inc eax; pop edi; pop esi; ret; 
0x000c2543: je 0xc2553; call ecx; 
0x000c27ae: je 0xc27b4; mov byte ptr [ecx + edx + 3], ah; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000c2ed3: je 0xc2ed6; inc eax; sub eax, dword ptr [esp + 4]; ret; 
0x000c2ff6: je 0xc2fff; mov byte ptr [ecx + eax], 0; dec ecx; jne 0xc2ff8; pop esi; ret; 
0x000c30a4: je 0xc30ad; or dword ptr [eax + 0x3c90], 1; xor eax, eax; pop ebx; ret; 
0x000c3ad7: je 0xc3afd; sbb byte ptr [edx], ch; call 0xc4020; add esp, 0x1c; ret; 
0x000c4111: je 0xc4137; sub al, 0xff; aaa; mov eax, dword ptr [esp + 0x38]; call eax; 
0x000c428f: je 0xc429a; mov edx, dword ptr [edx]; xor eax, eax; test edx, edx; sete al; ret; 
0x000c4d88: je 0xc4d8e; test edx, edx; jne 0xc4d80; ret; 
0x000c4de6: je 0xc4e0c; sbb al, 0xe8; adc al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000c5c19: je 0xc5c00; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000c5d08: je 0xc5d2e; adc al, 0xe8; or eax, 0x81000c3f; ret; 
0x000c6a79: je 0xc6a60; mov eax, ebx; add esp, 4; pop ebx; pop esi; ret; 
0x000c6ccc: je 0xc6cf2; xor al, 0xff; je 0xc6cf6; inc eax; push ebp; call esi; 
0x000c6cd0: je 0xc6cf6; inc eax; push ebp; call esi; 
0x000c73c8: je 0xc73ee; sbb al, 0xe8; adc byte ptr [ecx], cl; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000c7566: je 0xc752a; stc; jmp dword ptr [ebp - 0x75]; 
0x000c78e2: je 0xc78a6; stc; jmp dword ptr [ebp - 0x75]; 
0x000c79b2: je 0xc7976; stc; jmp dword ptr [ebp - 0x75]; 
0x000c8c51: je 0xc8c77; xor byte ptr [ecx - 0x76227612], cl; ret; 
0x000cb9c1: je 0xcb9e7; xor byte ptr [ecx - 0x76227612], cl; ret; 
0x000cd6e0: je 0xcd706; sub al, 0xe8; mov byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000cd75e: je 0xcd784; sub al, 0xe8; or al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000cde88: je 0xcdeae; sbb al, 0xe8; ror byte ptr [eax], 1; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000cf241: je 0xcf267; cmp byte ptr [ecx - 0x76227612], cl; ret; 
0x000d1060: je 0xd1086; sub al, 0xe8; mov byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000d10de: je 0xd1104; sub al, 0xe8; or al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000d1970: je 0xd1996; sub al, 0xe8; mov byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000d19ee: je 0xd1a14; sub al, 0xe8; or al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000d2080: je 0xd20a6; sub al, 0xe8; mov byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000d20fe: je 0xd2124; sub al, 0xe8; or al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000d4614: je 0xd461c; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000d4675: je 0xd469d; add byte ptr [ecx], dh; fild dword ptr [ebp - 0x760d8b37]; ret; 
0x000d47da: je 0xd47e8; mov eax, esi; pop ebx; pop esi; ret; 
0x000d4d55: je 0xd4d70; add al, 0x83; ret; 
0x000d57b5: je 0xd57dd; add byte ptr [ebx - 0x362f43], al; call dword ptr [eax]; 
0x000d627d: je 0xd62a5; add byte ptr [ebx - 0x365f7b], cl; inc dword ptr [ebx - 0x362f43]; call dword ptr [eax]; 
0x000d96ed: je 0xd9715; add byte ptr [ebx + 0x4f391c4e], cl; sbb al, 0xf; test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x000d97ad: je 0xd97d5; add byte ptr [edi + 0x5e], bl; ret; 
0x000d9997: je 0xd99b0; mov cl, dl; and cl, 0xf; je 0xd99c0; ret; 
0x000d999e: je 0xd99c0; ret; 
0x000d99b5: je 0xd99d0; add eax, 2; ret; 
0x000d99ed: je 0xd9a15; add byte ptr [eax + 1], bh; ret; 
0x000d9a90: je 0xd9ab0; mov ecx, dword ptr [edx + eax*4 + 4]; test ecx, ecx; jne 0xd9a78; add eax, 1; ret; 
0x000dad3e: je 0xdad64; sbb al, 0x8b; inc esp; and al, 0x64; call eax; 
0x000db255: je 0xdb27b; sbb al, 0x8b; inc esp; and al, 0x64; call eax; 
0x000db868: je 0xdb88e; sbb al, 0x8b; inc esp; and al, 0x64; call eax; 
0x000deaae: je 0xdeb20; mov ebx, dword ptr [esp + 0x60]; lea edx, [esp + 0x2c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000debf1: je 0xdec40; lea edx, [esp + 0x2c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000dec3d: je 0xdec65; add byte ptr [eax + 0x68], bh; mov edx, esi; call dword ptr gs:[0x10]; 
0x000df1d5: je 0xdf1fb; and al, 0xe8; ret; 
0x000df53f: je 0xdf565; adc al, 0xe8; cdq; ret; 
0x000e043a: je 0xe0460; sub byte ptr [ebx - 0x72dbdbbc], cl; sbb byte ptr [ecx + 0x46], 0xf9; call dword ptr [eax + 0x53]; 
0x000e04d1: je 0xe04f7; sub byte ptr [ebx - 0x72dbdbbc], cl; and byte ptr [edx + 0x46], 0xf9; call dword ptr [eax + 0x53]; 
0x000e0ec5: je 0xe0eeb; adc al, 0xf; inc edx; ret 0x4c80; 
0x000e182d: je 0xe1853; cmp byte ptr [ecx - 0x16bfdbbc], cl; xchg edi, eax; in al, 0xff; push esi; ret; 
0x000e1c6c: je 0xe1c92; jns 0xe1bf9; ret 0x448b; 
0x000e1d21: je 0xe1d47; jns 0xe1cae; ret 0x448b; 
0x000e1da2: je 0xe1dc8; jns 0xe1d2f; ret 0x448b; 
0x000e5d1f: je 0xe5d45; xor byte ptr [ecx], ch; ret; 
0x000e6e7a: je 0xe6ea0; cmp byte ptr [ecx], ch; ret 0xc889; 
0x000e745e: je 0xe7468; add esp, 0xc; ret; 
0x000e754e: je 0xe7558; add esp, 0xc; ret; 
0x000e7677: je 0xe769d; inc esp; mov ebx, dword ptr [esp + 0x40]; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000e787c: je 0xe782a; cmp eax, -0x26; jne 0xe78c0; lea ecx, [esp + 4]; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x000e7816: je 0xe7848; sub esp, 8; push esi; push ebx; call eax; 
0x000e7850: je 0xe786c; sub esp, 8; lea edx, [esp + 0xc]; push edx; push ebx; call eax; 
0x000e821c: je 0xe8230; imul eax, dword ptr [esp + 0x10], 0x34; add eax, dword ptr [edx]; add esp, 0xc; ret; 
0x000e830b: je 0xe8331; and al, 0x83; jmp dword ptr [ebx + 0x77]; 
0x000e8de8: je 0xe8e0e; adc al, ch; sub eax, 0x81000a0e; ret; 
0x000e97b6: je 0xe9740; sub esp, 0xc; mov esi, dword ptr [ebp - 0x2c]; mov eax, dword ptr [ebp - 0x3c]; push edi; call eax; 
0x000e9cc6: je 0xe9c50; sub esp, 0xc; mov esi, dword ptr [ebp - 0x2c]; mov eax, dword ptr [ebp - 0x3c]; push edi; call eax; 
0x000eab3e: je 0xeab64; sbb al, 0xe8; or al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000ef9f3: je 0xef9ee; call dword ptr [eax - 0x18]; 
0x000effa3: je 0xeff9e; call dword ptr [eax - 0x18]; 
0x000f0009: je 0xf0004; call dword ptr [eax - 0x18]; 
0x000f00a4: je 0xf009f; call dword ptr [eax - 0x18]; 
0x000f00e1: je 0xf00dc; call dword ptr [eax - 0x18]; 
0x000f016f: je 0xf016a; call dword ptr [eax - 0x18]; 
0x000f06f9: je 0xf06f4; call dword ptr [eax - 0x18]; 
0x000f07c6: je 0xf07c1; call dword ptr [eax - 0x18]; 
0x000f0809: je 0xf0804; call dword ptr [eax - 0x18]; 
0x000f0bc5: je 0xf0b94; pop ebx; ret; 
0x000f0c05: je 0xf0c2d; add byte ptr [eax + 1], bh; ret; 
0x000f0d85: je 0xf0dad; add byte ptr [ebx + 0x548d08ec], al; and al, 0x14; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x000f15bd: je 0xf15d6; sub esp, 8; push eax; push dword ptr [ebp - 0x5dc]; call esi; 
0x000f2a6d: je 0xf2a95; add byte ptr [ebx - 0x46f7b], cl; inc dword ptr [ebx - 0x7f72f314]; mov bh, 0x47; stc; call dword ptr [eax - 0x18]; 
0x000f3705: je 0xf36d4; pop ebx; ret; 
0x000f3745: je 0xf376d; add byte ptr [eax + 1], bh; ret; 
0x000f38c5: je 0xf38ed; add byte ptr [ebx + 0x548d08ec], al; and al, 0x14; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x000f40fd: je 0xf4116; sub esp, 8; push eax; push dword ptr [ebp - 0x5dc]; call esi; 
0x000f4505: je 0xf44d4; pop ebx; ret; 
0x000f4545: je 0xf456d; add byte ptr [eax + 1], bh; ret; 
0x000f46c5: je 0xf46ed; add byte ptr [ebx + 0x548d08ec], al; and al, 0x14; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x000f4efd: je 0xf4f16; sub esp, 8; push eax; push dword ptr [ebp - 0x5dc]; call esi; 
0x000f639d: je 0xf63c5; add byte ptr [ebx - 0x46f7b], cl; inc dword ptr [ebx - 0x7f72f314]; mov bh, 0x47; stc; call dword ptr [eax - 0x18]; 
0x000f7035: je 0xf7004; pop ebx; ret; 
0x000f7075: je 0xf709d; add byte ptr [eax + 1], bh; ret; 
0x000f71f5: je 0xf721d; add byte ptr [ebx + 0x548d08ec], al; and al, 0x14; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x000f7a2d: je 0xf7a46; sub esp, 8; push eax; push dword ptr [ebp - 0x5dc]; call esi; 
0x000f7e45: je 0xf7e14; pop ebx; ret; 
0x000f7e85: je 0xf7ead; add byte ptr [eax + 1], bh; ret; 
0x000f8005: je 0xf802d; add byte ptr [ebx + 0x548d08ec], al; and al, 8; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x000f883d: je 0xf8856; sub esp, 8; push eax; push dword ptr [ebp - 0x5ec]; call esi; 
0x000f9c9d: je 0xf9cc5; add byte ptr [ebx - 0x46f7b], cl; inc dword ptr [ebx - 0x7f72f314]; mov bh, 0x47; stc; call dword ptr [eax - 0x18]; 
0x000fa8bf: je 0xfa8c5; cmp al, 0x3f; jne 0xfa8d9; mov eax, 1; ret; 
0x000fb1cd: je 0xfb13f; cmp edx, 0x52654973; mov edx, 0x20; cmovne eax, edx; ret; 
0x000fb20e: je 0xfb13f; cmp edx, 0xbd00bd0; mov edx, 0x20; cmovne eax, edx; ret; 
0x000fb156: je 0xfb13f; mov eax, 0xffffffff; ret; 
0x000fb225: je 0xfb24d; add byte ptr [eax + 0x40], bh; ret; 
0x000fb2b6: je 0xfb2c2; mov eax, 0xffffffff; ret; 
0x000fb292: je 0xfb2c2; xor eax, eax; cmp edx, 0x1badface; setne al; ret; 
0x000fb269: je 0xfb2c2; xor eax, eax; cmp edx, 0x1cd1; setne al; ret; 
0x000fb2ce: je 0xfb2c2; xor eax, eax; cmp edx, 0xadf5; setne al; ret; 
0x000fb5c1: je 0xfb5ac; mov eax, 0xffffffff; ret; 
0x000fb68e: je 0xfb6a6; mov ecx, dword ptr [esp + 0xc]; mov eax, 0xdb; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000fba5b: je 0xfba8e; pop ebx; pop esi; pop edi; ret; 
0x000fbae5: je 0xfbaf8; pop ebx; pop esi; ret; 
0x000fcfe5: je 0xfd00d; add byte ptr [edi], cl; xchg esp, eax; ret; 
0x000fd388: je 0xfd3b3; add esp, 4; pop ebx; pop esi; ret; 
0x000fd3c5: je 0xfd3ed; add byte ptr [ebx - 0x3b7cc3ba], cl; add al, 0x5b; pop esi; ret; 
0x000fd4f6: je 0xfd45b; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000ffd4f: je 0xffd70; add esp, 8; xor eax, eax; pop ebx; ret; 
0x001056fc: jecxz 0x105689; pop eax; add al, 0xf7; ret; 
0x001266d3: jecxz 0x12671f; stc; call dword ptr [eax - 0x39]; 
0x00128608: jecxz 0x12860a; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012c9b6: jecxz 0x12c9b6; push dword ptr [ebx]; push esi; call edi; 
0x0012cafe: jecxz 0x12cb29; ret; 
0x0012cc09: jecxz 0x12cc34; ret; 
0x00132825: jecxz 0x132823; add eax, ebx; pop ebx; pop esi; ret; 
0x0013526e: jecxz 0x135278; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0013530e: jecxz 0x135310; add al, 0; add byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x001353ae: jecxz 0x1353b1; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0013544e: jecxz 0x135452; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0013576e: jecxz 0x135774; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00135cb0: jecxz 0x135cba; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00135d30: jecxz 0x135d32; add al, 0; add byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x00135db0: jecxz 0x135db3; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00135e30: jecxz 0x135e34; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x001360b0: jecxz 0x1360b6; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0013d5da: jecxz 0x13d5dd; lea edx, [edx - 0xa3fc4]; cmovne eax, edx; pop ebx; ret; 
0x0013d62a: jecxz 0x13d62d; lea edx, [edx - 0xa1ff4]; cmovne eax, edx; pop ebx; ret; 
0x0013d67a: jecxz 0x13d67d; lea edx, [edx - 0xa2fe4]; cmovne eax, edx; pop ebx; ret; 
0x0013e40a: jecxz 0x13e40b; jmp dword ptr [esi - 0x70]; 
0x00153232: jecxz 0x1531bd; ret 0x25; 
0x00164dc5: jecxz 0x164db2; jmp dword ptr [ebp - 0x75]; 
0x0016f9b9: jecxz 0x16f9b7; jmp dword ptr [esi - 0x70]; 
0x0017b854: jecxz 0x17b7d9; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0017d43c: jecxz 0x17d3c1; in al, dx; add al, 0x6a; call dword ptr [ebp + 0x57]; 
0x0017e88a: jecxz 0x17e8b5; ret; 
0x00198d5f: jecxz 0x198d49; mov eax, 0x81ffff0e; ret; 
0x0019b099: jecxz 0x19b028; mov dh, 0; add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x0019c079: jecxz 0x19c008; mov dh, 0; add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x0019d079: jecxz 0x19d008; mov dh, 0; add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x0019de75: jecxz 0x19de7a; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001a699f: jecxz 0x1a69a6; add byte ptr [eax], al; pop ebx; ret; 
0x001ab029: jecxz 0x1ab02b; add byte ptr [eax], al; add edx, 0; jl 0x1ab1d0; mov eax, ecx; ret; 
0x001ab41e: jecxz 0x1ab3a3; ret 0x6640; 
0x001aef59: jecxz 0x1aef5a; dec dword ptr [ecx - 0x16e3db84]; ret; 
0x00026040: jecxz 0x25fc5; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00053e30: jecxz 0x53dbb; pop ds; pop ebx; pop esi; pop edi; ret; 
0x00059c89: jecxz 0x59c2e; std; dec dword ptr [ebx - 0x36474b]; dec dword ptr [ebp - 0x687777a]; call dword ptr [eax - 0x73]; 
0x00071d6b: jecxz 0x71d6c; jmp dword ptr [esi - 0x70]; 
0x0007489a: jecxz 0x7489b; jmp dword ptr [ebp - 0x5f]; 
0x0008ca36: jecxz 0x8ca37; dec dword ptr [ebx - 0x3b7cf7b9]; adc bl, ch; ret; 
0x00093993: jecxz 0x939b5; jne 0x93536; lea ecx, [ebp + 0x220]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x000a0acc: jecxz 0xa0ae7; add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [ebx + 0x67650f8], al; ret; 
0x000a6a85: jecxz 0xa6a7f; inc dword ptr [ebx - 0x72aff33c]; adc dword ptr [ecx + ebx*2], -7; call dword ptr [eax + 0x6a]; 
0x000a8b8a: jecxz 0xa8b8d; lea edx, [edx - 0xa3fb4]; cmovne eax, edx; pop ebx; ret; 
0x000a93ba: jecxz 0xa93bd; lea edx, [edx - 0xa1fe4]; cmovne eax, edx; pop ebx; ret; 
0x000a940a: jecxz 0xa940d; lea edx, [edx - 0xa2fd4]; cmovne eax, edx; pop ebx; ret; 
0x000b9739: jecxz 0xb9741; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000c243f: jecxz 0xc23c4; ret 0x8304; 
0x000c30e5: jecxz 0xc30df; inc dword ptr [ecx]; sar dword ptr [esi], 1; jmp ecx; 
0x000c7ea8: jecxz 0xc7eb0; add byte ptr [ebx + 0x7c8310c4], al; and al, 0x10; adc byte ptr [edi], cl; xchg esp, eax; ret 0xf883; 
0x000e15f4: jecxz 0xe15f5; dec dword ptr [ecx - 0x572f0828]; sbb byte ptr [edi], cl; test byte ptr [ebp - 0x9fffffb], dh; ret; 
0x000e3b53: jecxz 0xe3ade; rol byte ptr [ebx - 0x173e031e], 1; add al, byte ptr [ecx]; ret 0xd329; 
0x000e4e22: jecxz 0xe4e23; call dword ptr [edx + 0x51]; 
0x000e4e6e: jecxz 0xe4e6f; call dword ptr [ebx + 0x52]; 
0x000e4ec7: jecxz 0xe4ec8; call dword ptr [eax + 0x57]; 
0x000e7365: jecxz 0xe7366; call dword ptr [edx + 0x53]; 
0x000eff04: jecxz 0xefe89; rcr byte ptr [ebx], 0x89; ret 0x25; 
0x0010b57e: jg 0x10b630; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0010b61b: jg 0x10b67b; pop ebx; mov eax, 0xc; pop esi; pop edi; ret; 
0x0010b96b: jg 0x10b9a8; call dword ptr [esi]; 
0x0010bcc6: jg 0x10bce8; add esp, 4; pop ebx; pop esi; ret; 
0x00111420: jg 0x11146b; stc; call dword ptr [eax - 0x73]; 
0x001219f9: jg 0x1219ff; call dword ptr gs:[0x10]; 
0x001219f9: jg 0x1219ff; call dword ptr gs:[0x10]; pop ebp; pop edi; pop ebx; ret; 
0x00122e7f: jg 0x122e80; inc dword ptr [ebx + 0x508930ca]; or byte ptr [edx + 0x100], bh; mov word ptr [eax + 0x16], dx; ret; 
0x0012ba3b: jg 0x12ba48; add esp, 8; pop ebx; ret; 
0x0012c34d: jg 0x12c3a0; lea esp, [ebp - 8]; pop ebx; pop esi; pop ebp; ret; 
0x0012c412: jg 0x12c438; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x0012d59f: jg 0x12d5d0; add esp, 8; pop ebx; ret; 
0x0013066e: jg 0x130670; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0013e186: jg 0x13e17a; jmp dword ptr [esi - 0x70]; 
0x0013ee42: jg 0x13ee53; dec eax; ret 0xc483; 
0x0013ee67: jg 0x13eec4; pop esi; pop edi; pop ebp; ret; 
0x001515d5: jg 0x1515f0; add esp, 4; pop ebx; pop esi; ret; 
0x0015611c: jg 0x156140; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x00156592: jg 0x156598; ret; 
0x00156bb5: jg 0x156c10; pop ebx; pop esi; pop edi; ret; 
0x001576e1: jg 0x157708; add esp, 8; pop ebx; ret; 
0x0015ebe6: jg 0x15ebf7; inc esp; ret 0x8489; 
0x00162dc5: jg 0x162e20; add esp, 4; pop ebx; pop esi; ret; 
0x001630b3: jg 0x1630d8; add esp, 0x18; pop ebx; ret; 
0x00168995: jg 0x1689b8; add esp, 0x18; pop ebx; ret; 
0x00172bc8: jg 0x172bd9; mov dh, 0x14; adc dword ptr [eax - 0x27c600b0], ecx; jne 0x172bc0; pop ebx; ret; 
0x00173b8e: jg 0x173b90; add byte ptr [ebx + 0x3914244c], cl; ret 0x4e0f; 
0x00176efc: jg 0x176e81; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x001770ae: jg 0x1770a3; call dword ptr [eax - 0x73]; 
0x001796d2: jg 0x1796c0; add esp, 4; pop ebx; pop esi; ret; 
0x00182554: jg 0x182578; add esp, 8; pop ebx; ret; 
0x001825d2: jg 0x1825f8; add esp, 0x18; pop ebx; ret; 
0x0018265e: jg 0x182680; add esp, 0x18; pop ebx; ret; 
0x001826d4: jg 0x1826f8; add esp, 8; pop ebx; ret; 
0x00182884: jg 0x1828a8; add esp, 0x14; pop ebx; pop esi; ret; 
0x00182936: jg 0x182958; add esp, 0x18; pop ebx; ret; 
0x00184652: jg 0x184660; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00187447: jg 0x187468; add esp, 4; pop ebx; pop esi; ret; 
0x00188845: jg 0x188868; add esp, 4; pop ebx; pop esi; ret; 
0x001888e5: jg 0x188908; add esp, 4; pop ebx; pop esi; ret; 
0x00193498: jg 0x1934dc; jo 0x19341d; ret 0x80; 
0x00193560: jg 0x1935a4; out dx, eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00193590: jg 0x1935d4; out dx, al; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001935f0: jg 0x193634; in al, dx; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019364b: jg 0x19368f; fisub dword ptr [esi + 0xf]; jg 0x193694; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x00193650: jg 0x193694; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x001936c0: jg 0x193704; call 0x42ef462d; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001937e6: jg 0x19382a; ret; 
0x00193826: jg 0x19386a; ret 0xf66; 
0x00193af0: jg 0x193b34; out dx, eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00193b20: jg 0x193b64; out dx, al; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00193b80: jg 0x193bc4; in al, dx; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00193bdb: jg 0x193c1f; fisub dword ptr [esi + 0xf]; jg 0x193c24; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x00193be0: jg 0x193c24; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x00193c50: jg 0x193c94; call 0x42ef4bbd; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00193d76: jg 0x193dba; ret; 
0x00193db6: jg 0x193dfa; ret 0xf66; 
0x00195733: jg 0x195793; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001981b3: jg 0x1981eb; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001a7e8b: jg 0x1a7e90; neg eax; ret; 
0x001a81b6: jg 0x1a81c0; neg eax; ret; 
0x001ac1c5: jg 0x1ac1d0; neg eax; pop edi; pop esi; pop ebx; ret; 
0x001ac2b6: jg 0x1ac2c0; neg eax; ret; 
0x001acd3b: jg 0x1acd3f; mov eax, edi; pop edi; ret; 
0x001acdc6: jg 0x1acdca; mov eax, edx; ret; 
0x0003adc2: jg 0x3ad45; ljmp 0xd089:0x7fff0000; shr eax, 0x1f; ret; 
0x0003c077: jg 0x3c078; sub ecx, eax; xor eax, ecx; shr eax, 0x1f; ret; 
0x0003eb3f: jg 0x3eb50; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x0003ed53: jg 0x3edc9; sub esp, 8; push 0; push edx; call eax; 
0x0003f25a: jg 0x3f3c8; sub esp, 8; push ecx; push dword ptr [esp + 0x4c]; call eax; 
0x0003f32e: jg 0x3f3f0; call eax; 
0x00040184: jg 0x401a8; add esp, 0x14; pop ebx; pop esi; ret; 
0x00040c3a: jg 0x40c48; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00041997: jg 0x419b8; add esp, 4; pop ebx; pop esi; ret; 
0x00041ac6: jg 0x41ae8; add esp, 0x14; pop ebx; pop esi; ret; 
0x0004274a: jg 0x42770; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x000483c7: jg 0x483c1; call dword ptr [eax + 0x52]; 
0x00048423: jg 0x4841d; call dword ptr [eax - 1]; 
0x0004b925: jg 0x4b91f; call dword ptr [eax + 0x52]; 
0x0004b97e: jg 0x4b978; call dword ptr [eax - 1]; 
0x0004f4a9: jg 0x4f4a3; call dword ptr [eax + 0x52]; 
0x0004f50a: jg 0x4f504; call dword ptr [eax - 1]; 
0x00051b2c: jg 0x51b8d; pop ebp; ret; 
0x00056e75: jg 0x56e6f; call dword ptr [eax + 0x51]; 
0x00056efa: jg 0x56ef4; call dword ptr [eax - 1]; 
0x0005d4d9: jg 0x5d4d3; call dword ptr [eax + 0x56]; 
0x0005d630: jg 0x5d62a; call dword ptr [edx + 0x51]; 
0x000610a4: jg 0x610e0; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x000611b5: jg 0x611e8; add esp, 0x18; pop ebx; ret; 
0x00071c2f: jg 0x71c40; xchg esp, eax; ret 0xca08; 
0x00073ad6: jg 0x73ad9; shr byte ptr [ecx], cl; fdivr dword ptr [ecx]; ret 0x8f0f; 
0x000792d5: jg 0x792d0; call dword ptr [eax - 0x73]; 
0x0007934c: jg 0x79347; call dword ptr [eax - 0x73]; 
0x0007940e: jg 0x79409; call dword ptr [eax - 0x73]; 
0x000795e5: jg 0x795e0; call dword ptr [eax - 0x73]; 
0x00086f1c: jg 0x86f02; call dword ptr [eax - 1]; 
0x0008cde3: jg 0x8cdf0; ret; 
0x0008f55f: jg 0x8f598; pop ebx; pop esi; pop edi; ret; 
0x00090836: jg 0x907bb; bound ecx, qword ptr [esi + edi*8]; add esp, 8; pop ebx; ret; 
0x000911f9: jg 0x91184; ret 0x78b; 
0x000912b5: jg 0x912e8; test byte ptr [ecx], 0xc3; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00091769: jg 0x916f4; ret; 
0x00094335: jg 0x94358; add esp, 0x18; pop ebx; ret; 
0x00094a36: jg 0x94af8; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x00096841: jg 0x96874; test byte ptr [ecx + 0x80e1], 0; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00098476: jg 0x98487; xchg ebp, eax; rol ecx, 0xe1; pop es; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00098b71: jg 0x98b8c; add byte ptr [edi], cl; xchg ebp, eax; ret 0xe2c1; 
0x00098bd9: jg 0x98bea; xchg ebp, eax; rol ecx, 0xe1; pop es; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00098c66: jg 0x98c81; add byte ptr [edi], cl; xchg ebp, eax; ret 0xe2c1; 
0x00098dda: jg 0x98deb; xchg ebp, eax; rol ecx, 0xe1; pop es; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000993fc: jg 0x9940d; xchg ebp, eax; rol ecx, 0xe1; pop es; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00099881: jg 0x9989c; add byte ptr [edi], cl; xchg ebp, eax; ret; 
0x0009beae: jg 0x9bf48; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x0009c076: jg 0x9c084; push dword ptr [eax + 4]; call dword ptr [eax]; 
0x000afddd: jg 0xafd60; ret 0x7f7f; 
0x000afddb: jg 0xafe5c; jg 0xafd60; ret 0x7f7f; 
0x000b16a6: jg 0xb16aa; mov eax, edi; pop edi; ret; 
0x000b1936: jg 0xb193a; mov eax, edx; ret; 
0x000b5a66: jg 0xb5a6a; lea eax, [edx + 0xf]; pop edi; ret; 
0x000b5d16: jg 0xb5d1a; lea eax, [edx + 0xf]; ret; 
0x000b9476: jg 0xb9479; jne 0xb9e20; pop edi; pop esi; pop ebx; ret; 
0x000b94fb: jg 0xb9502; jne 0xb9e20; pop edi; pop esi; pop ebx; ret; 
0x000b9520: jg 0xb9528; jne 0xb9e20; pop edi; pop esi; pop ebx; ret; 
0x000b953e: jg 0xb9547; jne 0xb9e20; pop edi; pop esi; pop ebx; ret; 
0x000b955c: jg 0xb9566; jne 0xb9e20; pop edi; pop esi; pop ebx; ret; 
0x000b957f: jg 0xb958a; jne 0xb9e20; pop edi; pop esi; pop ebx; ret; 
0x000b95a4: jg 0xb95b0; jne 0xb9e20; pop edi; pop esi; pop ebx; ret; 
0x000b95e2: jg 0xb95f0; jne 0xb9e20; pop edi; pop esi; pop ebx; ret; 
0x000b9606: jg 0xb9615; jne 0xb9e20; pop edi; pop esi; pop ebx; ret; 
0x000b9666: jg 0xb9677; jne 0xb9e20; pop edi; pop esi; pop ebx; ret; 
0x000b968c: jg 0xb969e; jne 0xb9e20; pop edi; pop esi; pop ebx; ret; 
0x000b9766: jg 0xb977e; jne 0xb9e20; pop edi; pop esi; pop ebx; ret; 
0x000b9796: jg 0xb97af; jne 0xb9e20; pop edi; pop esi; pop ebx; ret; 
0x000b982e: jg 0xb984a; jne 0xb9e20; pop edi; pop esi; pop ebx; ret; 
0x000b985c: jg 0xb9879; jne 0xb9e20; pop edi; pop esi; pop ebx; ret; 
0x000b988c: jg 0xb98aa; jne 0xb9e20; pop edi; pop esi; pop ebx; ret; 
0x000b98b6: jg 0xb98d5; jne 0xb9e20; pop edi; pop esi; pop ebx; ret; 
0x000b98e6: jg 0xb9906; jne 0xb9e20; pop edi; pop esi; pop ebx; ret; 
0x000b9916: jg 0xb9937; jne 0xb9e20; pop edi; pop esi; pop ebx; ret; 
0x000b9946: jg 0xb9968; jne 0xb9e20; pop edi; pop esi; pop ebx; ret; 
0x000b9ac6: jg 0xb9acf; pop edi; pop esi; pop ebx; ret; 
0x000b9ad9: jg 0xb9ae2; mov byte ptr [edi + 0x10], cl; pop edi; pop esi; pop ebx; ret; 
0x000b9afa: jg 0xb9b03; mov word ptr [edi + 0x10], cx; pop edi; pop esi; pop ebx; ret; 
0x000b9b19: jg 0xb9b22; mov dword ptr [edi + 0xf], ecx; pop edi; pop esi; pop ebx; ret; 
0x000b9b39: jg 0xb9b42; mov dword ptr [edi + 0x10], ecx; pop edi; pop esi; pop ebx; ret; 
0x000b9b7b: jg 0xb9b84; movlpd qword ptr [edi + 0xe], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000b9b9b: jg 0xb9ba4; movlpd qword ptr [edi + 0xf], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000b9bbb: jg 0xb9bc4; movlpd qword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b9c5b: jg 0xb9c64; movdqu xmmword ptr [edi + 0xd], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b9c7b: jg 0xb9c84; movdqu xmmword ptr [edi + 0xe], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b9c9b: jg 0xb9ca4; movdqu xmmword ptr [edi + 0xf], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b9cbb: jg 0xb9cc4; movdqu xmmword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b9c7f: jg 0xb9cd8; push cs; pop edi; pop esi; pop ebx; ret; 
0x000b9c9f: jg 0xb9cf8; maxps xmm3, xmmword ptr [esi + 0x5b]; ret; 
0x000b9cbf: jg 0xb9d18; adc byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b9ce2: jg 0xb9d3b; adc byte ptr [eax + 0x5e5f204f], cl; pop ebx; ret; 
0x000b9df2: jg 0xb9dfb; pop edi; pop esi; pop ebx; ret; 
0x000b9de2: jg 0xb9e2b; call ptr [edi + 0x5e]; pop ebx; ret; 
0x000b9e73: jg 0xb9e7c; add edi, 0x10; call 0x189c31; add ecx, 0x112f53; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9eff: jg 0xb9f31; pop edi; pop esi; pop ebx; ret; 
0x000b9efe: jg 0xb9f7f; xor byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000baadd: jg 0xbaae1; jne 0xbb520; pop edi; pop esi; pop ebx; ret; 
0x000bab00: jg 0xbab05; jne 0xbb520; pop edi; pop esi; pop ebx; ret; 
0x000bab1b: jg 0xbab21; jne 0xbb520; pop edi; pop esi; pop ebx; ret; 
0x000bab3e: jg 0xbab45; jne 0xbb520; pop edi; pop esi; pop ebx; ret; 
0x000bab63: jg 0xbab6b; jne 0xbb520; pop edi; pop esi; pop ebx; ret; 
0x000bab81: jg 0xbab8a; jne 0xbb520; pop edi; pop esi; pop ebx; ret; 
0x000babe7: jg 0xbabf3; jne 0xbb520; pop edi; pop esi; pop ebx; ret; 
0x000bac15: jg 0xbac22; jne 0xbb520; pop edi; pop esi; pop ebx; ret; 
0x000bac45: jg 0xbac53; jne 0xbb520; pop edi; pop esi; pop ebx; ret; 
0x000bac79: jg 0xbac88; jne 0xbb520; pop edi; pop esi; pop ebx; ret; 
0x000baca9: jg 0xbacb9; jne 0xbb520; pop edi; pop esi; pop ebx; ret; 
0x000bacd9: jg 0xbacea; jne 0xbb520; pop edi; pop esi; pop ebx; ret; 
0x000bacff: jg 0xbad11; jne 0xbb520; pop edi; pop esi; pop ebx; ret; 
0x000bad75: jg 0xbad8a; jne 0xbb520; pop edi; pop esi; pop ebx; ret; 
0x000bae9c: jg 0xbaeb7; jne 0xbb520; pop edi; pop esi; pop ebx; ret; 
0x000baf2f: jg 0xbaf4d; jne 0xbb520; pop edi; pop esi; pop ebx; ret; 
0x000baf59: jg 0xbaf78; jne 0xbb520; pop edi; pop esi; pop ebx; ret; 
0x000baf89: jg 0xbafa9; jne 0xbb520; pop edi; pop esi; pop ebx; ret; 
0x000bafb9: jg 0xbafda; jne 0xbb520; pop edi; pop esi; pop ebx; ret; 
0x000bafe9: jg 0xbb00b; jne 0xbb520; pop edi; pop esi; pop ebx; ret; 
0x000bb1a6: jg 0xbb1af; lea eax, [edi + 0x10]; pop edi; pop esi; pop ebx; ret; 
0x000bb34f: jg 0xbb3a8; or eax, 0x5f1d478d; pop esi; pop ebx; ret; 
0x000bb38f: jg 0xbb3e8; jge 0x5e6ad2de; pop ebx; ret; 
0x000bb3af: jg 0xbb408; adc byte ptr [ebp + 0x5e5f2047], cl; pop ebx; ret; 
0x000bb3d2: jg 0xbb42b; adc byte ptr [eax + 0x5e5f204f], cl; pop ebx; ret; 
0x000bb4e2: jg 0xbb4eb; pop edi; pop esi; pop ebx; ret; 
0x000bb4d2: jg 0xbb51b; call ptr [edi + 0x5e]; pop ebx; ret; 
0x000bb573: jg 0xbb57c; add edi, 0x10; call 0x189c31; add ecx, 0x1119b3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb5ff: jg 0xbb631; lea eax, [edi + 0x40]; pop edi; pop esi; pop ebx; ret; 
0x000bb5fe: jg 0xbb67f; xor byte ptr [ebp + 0x5e5f4047], cl; pop ebx; ret; 
0x000bd796: jg 0xbd798; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bd7a6: jg 0xbd7a8; mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bd7ca: jg 0xbd7cc; mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bd7e9: jg 0xbd7eb; mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bd809: jg 0xbd80b; mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bd829: jg 0xbd82b; mov dword ptr [eax + 0x10], ecx; mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bd84b: jg 0xbd84d; movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bd86b: jg 0xbd86d; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bd88b: jg 0xbd88d; movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bd8ab: jg 0xbd8ad; movlpd qword ptr [eax + 0x10], xmm2; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bd8cf: jg 0xbd8d1; movlpd qword ptr [eax + 0x10], xmm2; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bd8ee: jg 0xbd8f0; movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bd90e: jg 0xbd910; movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bd92b: jg 0xbd92d; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bd94b: jg 0xbd94d; movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bd96b: jg 0xbd96d; movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bd92f: jg 0xbd981; or eax, 0x824448b; pop esi; ret; 
0x000bd98b: jg 0xbd98d; movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bd94f: jg 0xbd9a1; push cs; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bd96f: jg 0xbd9c1; jnp 0x5e13fdbb; ret; 
0x000bd98f: jg 0xbd9e1; adc byte ptr [ebx + 0x5e082444], cl; ret; 
0x000c0c09: jg 0xc0c0b; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000c0c2c: jg 0xc0c2e; mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000c0c4d: jg 0xc0c4f; mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000c0c6c: jg 0xc0c6e; mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000c0c8c: jg 0xc0c8e; mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000c0cce: jg 0xc0cd0; movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000c0cee: jg 0xc0cf0; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000c0d0e: jg 0xc0d10; movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000c0dee: jg 0xc0df0; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000c0e0e: jg 0xc0e10; movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000c0e2e: jg 0xc0e30; movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000c0df2: jg 0xc0e44; or eax, 0xc24448b; pop ebx; pop esi; ret; 
0x000c0e4e: jg 0xc0e50; movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000c0e12: jg 0xc0e64; push cs; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000c0e32: jg 0xc0e84; jnp 0x5b18327e; pop esi; ret; 
0x000c0e52: jg 0xc0ea4; adc byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000c85d9: jg 0xc85d3; call dword ptr [eax + 0x52]; 
0x000c8636: jg 0xc8630; call dword ptr [eax + 0x55]; 
0x000cbf86: jg 0xcbf80; call dword ptr [eax + 0x52]; 
0x000cbfe3: jg 0xcbfdd; call dword ptr [eax + 0x55]; 
0x000cf829: jg 0xcf823; call dword ptr [eax + 0x52]; 
0x000cf886: jg 0xcf880; call dword ptr [eax + 0x55]; 
0x000d1664: jg 0xd16c5; pop ebp; ret; 
0x000d5f41: jg 0xd5f3b; call dword ptr [eax + 0x52]; 
0x000d5fb6: jg 0xd5fb0; call dword ptr [eax - 1]; 
0x000d97a5: jg 0xd97b0; neg eax; pop edi; pop esi; ret; 
0x000d97d5: jg 0xd97d9; neg eax; ret; 
0x000dd01a: jg 0xdd040; add esp, 8; pop ebx; ret; 
0x000e4705: jg 0xe46f0; jmp esi; 
0x000e6d0e: jg 0xe6cf9; ret; 
0x000e90f0: jg 0xe9110; add esp, 0x14; pop ebx; pop esi; ret; 
0x000e95d1: jg 0xe95f0; add esp, 4; pop ebx; pop esi; ret; 
0x000e9ec7: jg 0xe9ee0; pop ebx; pop esi; pop edi; ret; 
0x000e9f17: jg 0xe9f40; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x00127194: jge 0x1271e6; stc; call dword ptr [eax + 0x55]; 
0x0012956e: jge 0x129570; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012e4ea: jge 0x12e46f; ret 0x3113; 
0x00130d1b: jge 0x130d1e; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00131ec7: jge 0x131ece; add byte ptr [ecx + 0x10cf4ac5], al; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x0013b622: jge 0x13b5a8; mov dword ptr [ebp - 0x84], eax; push esi; push 0; push 0x1000006; call ecx; 
0x00148412: jge 0x148397; in al, dx; or byte ptr [ebx - 0x72f3dbbc], cl; adc byte ptr [ecx + 0x5a], 0xf9; call dword ptr [eax + 0x53]; 
0x00151569: jge 0x1515c7; stc; call dword ptr [eax - 0x73]; 
0x00151fdb: jge 0x152039; stc; call dword ptr [eax - 0x73]; 
0x00155f1a: jge 0x155f1a; dec dword ptr [ecx - 0x137f7239]; mov dl, 0xf9; call dword ptr [eax - 0x73]; 
0x00175f4b: jge 0x175f49; jmp dword ptr [esi - 0x70]; 
0x00178c91: jge 0x178c14; les ebp, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x0017c531: jge 0x17c4b6; les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x0018a663: jge 0x18a665; jb 0x18a676; xchg esp, eax; ret; 
0x001933ee: jge 0x1933f4; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x001aa2bf: jge 0x1aa2c1; add byte ptr [eax], al; lea eax, [edi - 0x10]; pop edi; ret; 
0x001aae3f: jge 0x1aae41; add byte ptr [eax], al; mov eax, ecx; ret; 
0x00024406: jge 0x243d8; add byte ptr [ebx + ebx - 0x7d], dh; in al, dx; or al, 0xff; jne 0x243dd; call dword ptr [ebp - 0x38]; 
0x000bb1fd: jge 0x5e6ac54a; pop ebx; ret; 
0x000bb281: jge 0x5e6ac9ce; pop ebx; ret; 
0x000bb391: jge 0x5e6ad2de; pop ebx; ret; 
0x00062006: jge 0x62001; call dword ptr [eax - 0x73]; 
0x000629f1: jge 0x629ec; call dword ptr [eax - 0x18]; 
0x00062a7f: jge 0x62a7a; call dword ptr [eax - 0x73]; 
0x00062a92: jge 0x62a8d; call dword ptr [eax - 0x18]; 
0x00062ebf: jge 0x62eba; call dword ptr [eax - 0x18]; 
0x0006611b: jge 0x66116; call dword ptr [eax - 0x18]; 
0x000699f5: jge 0x699f0; call dword ptr [eax - 0x73]; 
0x0006e7b6: jge 0x6e7b1; call dword ptr [eax - 0x18]; 
0x0006e867: jge 0x6e862; call dword ptr [eax - 0x73]; 
0x0006e87a: jge 0x6e875; call dword ptr [eax - 0x18]; 
0x0006eb8d: jge 0x6eb88; call dword ptr [eax - 0x18]; 
0x00072637: jge 0x72632; call dword ptr [eax - 0x18]; 
0x00078908: jge 0x78903; call dword ptr [eax + 0x68]; 
0x000789aa: jge 0x789a5; call dword ptr [eax + 0x68]; 
0x00078e92: jge 0x78e8d; call dword ptr [eax - 0x18]; 
0x000fec3b: jge 0x831012b5; ret; 
0x000b3656: jge 0x851a45a6; mov al, byte ptr [0x5f000001]; pop ebx; ret; 
0x000bacd7: jge 0x851abc5c; aas; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00086f0e: jge 0x86ef4; call dword ptr [eax - 0x73]; 
0x000983da: jge 0x983f5; add byte ptr [edi], cl; xchg ebp, eax; ret 0xe2c1; 
0x00098d6a: jge 0x98d85; add byte ptr [edi], cl; xchg ebp, eax; ret 0xe2c1; 
0x0009cf25: jge 0x9cf48; pop ebx; pop esi; mov dword ptr [ecx + 0x10], eax; mov dword ptr [edx + 0x3ba8], ecx; ret; 
0x0009de05: jge 0x9de07; mov dword ptr [esp], ebp; call 0x231a0; mov dword ptr [esp], esi; call edi; 
0x000e888f: jge 0xe88ab; cld; jmp dword ptr [esi - 0x70]; 
0x000fb130: jge 0xfb160; mov eax, 0xff; cmp edx, 0x9123683e; jne 0xfb1a0; ret; 
0x00100d05: jl 0x100d2b; or byte ptr [ecx + 0x293c244c], cl; fimul dword ptr [ecx - 0x769fdbbc]; ret; 
0x00100dd3: jl 0x100df9; or byte ptr [ecx], bh; ret; 
0x00102fb3: jl 0x102f3e; clc; pop ebx; pop esi; pop edi; ret; 
0x001035d5: jl 0x103560; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x00103f2a: jl 0x103f50; adc al, 0xeb; or dword ptr [eax + 0x2cd1d201], edx; and al, 0x83; ret; 
0x00104885: jl 0x1048ab; add al, 0xe9; sub eax, 0x31fffff7; fucomi st(3); ret 0xc901; 
0x00105720: jl 0x105721; dec dword ptr [ecx + 0x24548bd9]; sbb byte ptr [esi - 0x7f], ah; loope 0x10572c; add esi, esi; ret; 
0x00106e2c: jl 0x106e52; xor al, 0x8d; xchg esp, ebx; sub al, 0xf9; dec dword ptr [ebp - 0x6c0bf71]; call dword ptr [eax - 0x17]; 
0x00107c6e: jl 0x107c94; or al, 0x89; ret 0xf889; 
0x00109660: jl 0x1095eb; ret 0xe8c0; 
0x0010bf32: jl 0x10beb7; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x001107b7: jl 0x1107dd; or byte ptr [ebp - 0x65dfb79], cl; call dword ptr [eax - 0x73]; 
0x00110bb9: jl 0x110bdf; or byte ptr [ebp - 0x65dfb79], cl; call dword ptr [eax + 0x68]; 
0x00110d8f: jl 0x110db5; or byte ptr [ebp - 0x65dfb79], cl; call dword ptr [eax + 0x68]; 
0x0011141b: jl 0x111441; adc byte ptr [ebp - 0x6b68079], cl; call dword ptr [eax - 0x73]; 
0x00111cff: jl 0x111d25; or byte ptr [ebp - 0x65e1779], cl; call dword ptr [eax - 0x73]; 
0x00111d8c: jl 0x111db2; or byte ptr [ebp - 0x65def79], cl; call dword ptr [eax - 0x73]; 
0x00111ebd: jl 0x111ee3; or byte ptr [ebp - 0x65dfb79], cl; call dword ptr [eax - 0x73]; 
0x00111ed5: jl 0x111f20; stc; call dword ptr [eax - 0x18]; 
0x00112f45: jl 0x112f6b; sbb al, 0x31; fild dword ptr [ebp - 0x14f48a2e]; jo 0x112ed4; ret; 
0x00115c1b: jl 0x115c41; adc al, 0xf; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc10c; 
0x001165f9: jl 0x116656; pop esi; pop edi; pop ebp; ret; 
0x0011fe2b: jl 0x11fe51; sbb al, 0xc1; cli; pop ds; call dword ptr gs:[0x10]; 
0x00120f5b: jl 0x120f81; inc eax; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x001264f8: jl 0x12651e; adc al, ch; sbb eax, 0x81000637; ret; 
0x00126f0f: jl 0x126f35; xor byte ptr [ebp - 0x6b3367d], cl; call dword ptr [eax + 0x55]; 
0x00129752: jl 0x129778; add al, 0x89; inc esp; and al, 0xc; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x0012a082: jl 0x12a0a8; add al, 0x89; inc esp; and al, 0xc; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x0012a870: jl 0x12a86b; dec dword ptr [ebx + 0x31502444]; ror byte ptr [ebx + 0xfc08500], cl; dec eax; ret 0xc483; 
0x0012e1c8: jl 0x12e1ee; sub byte ptr [eax + 0x78], bh; mov dword ptr [ecx], ebx; int 0x80; 
0x0012e7ad: jl 0x12e7c9; add al, 0x83; ret; 
0x0012efa7: jl 0x12f004; pop esi; pop edi; pop ebp; ret; 
0x0012f478: jl 0x12f47b; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001319f5: jl 0x131a1b; xor al, 0xe8; add ecx, esp; cmc; dec dword ptr [ebp - 0x76fbdbb4]; ret 0x448b; 
0x00132917: jl 0x13293d; xor al, 0x89; inc esp; and al, 8; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00132bba: jl 0x132c17; pop esi; pop edi; pop ebp; ret; 
0x0013734a: jl 0x1373a1; stc; call dword ptr [ebp - 1]; 
0x00138e5d: jl 0x138e83; and byte ptr [ebp - 0x656f779], cl; call dword ptr [eax - 0x73]; 
0x00138e80: jl 0x138ea6; and byte ptr [ebp - 0x656eb79], cl; call dword ptr [eax - 0x73]; 
0x00138ea3: jl 0x138ec9; and byte ptr [ebp - 0x656eb79], cl; call dword ptr [eax - 0x73]; 
0x00138ec6: jl 0x138eec; and byte ptr [ebp - 0x656eb79], cl; call dword ptr [eax - 0x73]; 
0x00138ee9: jl 0x138f0f; and byte ptr [ebp - 0x656eb79], cl; call dword ptr [eax - 0x73]; 
0x00138f0c: jl 0x138f32; and byte ptr [ebp - 0x656f779], cl; call dword ptr [eax - 0x73]; 
0x0013d6c0: jl 0x13d70c; cmc; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0013f426: jl 0x13f3d2; stc; call dword ptr [eax - 0x73]; 
0x00140bda: jl 0x140c00; sbb al, 0x89; ret; 
0x001418c5: jl 0x1418eb; sub byte ptr [ebx - 0x7cd3db8c], cl; ret 0x8902; 
0x00141d69: jl 0x141d8f; or byte ptr [eax + 0xf000000], al; inc edx; ret 0x2ec3; 
0x00142235: jl 0x14225b; sbb al, 0x39; ret; 
0x00142509: jl 0x142494; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x00143392: jl 0x1433b8; adc al, 0x8d; xchg esp, ebx; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x00143606: jl 0x14362c; adc al, 0x8d; xchg dword ptr [ebx + ebp*4 - 7], eax; call dword ptr [eax - 0x73]; 
0x001439b2: jl 0x1439d8; adc al, 0x8d; xchg dword ptr [eax], ebx; pop ecx; stc; call dword ptr [eax - 0x73]; 
0x0014bfd8: jl 0x14bffe; adc al, ch; cmp eax, 0x810003dc; ret; 
0x0014c7d1: jl 0x14c7f7; add byte ptr es:[edi], cl; test dword ptr [ebp - 0x7c000003], esp; ret; 
0x0014f30e: jl 0x14f334; adc byte ptr [esi - 0x3f], ah; ret 0x908; 
0x00155a68: jl 0x155a8e; adc byte ptr [ebp - 0x6d69879], cl; call dword ptr [eax + 0x53]; 
0x00155f3f: jl 0x155f65; or byte ptr [ebp - 0x64cf779], cl; call dword ptr [eax - 0x73]; 
0x00156253: jl 0x156255; add byte ptr [eax], al; add byte ptr [ebx + 0x5f5e04c4], al; ret; 
0x0015a686: jl 0x15a6ac; adc al, 0x8d; xchg eax, ebx; mov bl, 0xf9; call dword ptr [eax - 0x73]; 
0x0015d357: jl 0x15d37d; adc al, 0x8d; xchg dword ptr [ebx + 0x5f], edi; stc; call dword ptr [eax + 0x55]; 
0x0015dba6: jl 0x15dbcc; xor byte ptr [ecx + 0x44830c78], cl; and al, 0x34; add dword ptr [ebx - 0x6bf09f02], eax; ret 0x4489; 
0x0015decb: jl 0x15def1; or al, 0x8b; push edi; add al, 0xf7; ret 0xfffd; 
0x0015e45f: jl 0x15e485; adc byte ptr [ebp - 0xe2ef369], cl; call dword ptr [edx + 0x6a]; 
0x0015f70f: jl 0x15f735; adc byte ptr [ebp - 0x64a8b79], cl; call dword ptr [eax - 0x73]; 
0x00160081: jl 0x1600a7; adc byte ptr [ebp - 0x64a8b79], cl; call dword ptr [eax - 0x73]; 
0x00165528: jl 0x16558e; bnd call dword ptr [eax - 1]; 
0x00169a83: jl 0x169ae7; stc; call dword ptr [eax + 0x6a]; 
0x00169ad7: jl 0x169b3b; stc; jmp dword ptr [ebp - 0x75]; 
0x00169b9b: jl 0x169bff; stc; call dword ptr [eax - 0x18]; 
0x0016ba05: jl 0x16ba2b; sub byte ptr [ebp - 0x64a0b79], cl; call dword ptr [eax - 0x73]; 
0x0016ba31: jl 0x16ba57; sub byte ptr [ebp - 0x64a0b79], cl; call dword ptr [eax - 0x73]; 
0x0016ba54: jl 0x16ba7a; sub byte ptr [ebp - 0x64a0b79], cl; call dword ptr [eax - 0x73]; 
0x00170274: jl 0x17029a; dec esp; push edi; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x0017349d: jl 0x1734c3; and al, 0x89; ret 0x1beb; 
0x0017b51f: jl 0x17b50b; dec dword ptr [ecx - 0x763e7606]; ret; 
0x0017b7a8: jl 0x17b7ce; adc byte ptr [ebp - 0x69b7e79], cl; call dword ptr [eax - 0x73]; 
0x0017b7a8: jl 0x17b7ce; adc byte ptr [ebp - 0x69b7e79], cl; call dword ptr [eax - 0x73]; xchg dword ptr [esp + esi*2 - 7], ecx; call dword ptr [eax - 0x18]; ret 0xeb96; 
0x0017d7a7: jl 0x17d732; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x0017e2e2: jl 0x17e308; sub byte ptr [ebp - 0x6457779], cl; call dword ptr [eax - 0x73]; 
0x0017f62c: jl 0x17f652; adc al, 0x8d; xchg edi, edi; pop ebx; stc; call dword ptr [eax - 0x18]; 
0x00186074: jl 0x18609a; sub byte ptr [ebp - 0x644e379], cl; call dword ptr [eax - 0x73]; 
0x00186097: jl 0x1860bd; sub byte ptr [ebp - 0x690d379], cl; call dword ptr [eax - 0x73]; 
0x001860ba: jl 0x1860e0; sub byte ptr [ebp - 0x644e379], cl; call dword ptr [eax - 0x73]; 
0x001860eb: jl 0x186111; sub byte ptr [ebp - 0x644e379], cl; call dword ptr [eax - 0x73]; 
0x00186d81: jl 0x186d77; call dword ptr [eax - 0x73]; 
0x00186fa1: jl 0x186fa6; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00188584: jl 0x1885aa; adc al, 0x8d; inc edx; dec dword ptr [ecx - 0x762e7635]; ret 0x6c8b; 
0x00192a07: jl 0x192a2d; or byte ptr [eax + 0x75], bh; mov ebx, 3; call dword ptr gs:[0x10]; 
0x00193201: jl 0x193206; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0019344a: jl 0x193450; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00193506: jl 0x19350c; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x001ab183: jl 0x1ab1d0; lea eax, [ecx + 0xa]; ret; 
0x001ab193: jl 0x1ab1d0; lea eax, [ecx + 0xb]; ret; 
0x001ab0fe: jl 0x1ab1d0; lea eax, [ecx + 0xc]; ret; 
0x001ab1a3: jl 0x1ab1d0; lea eax, [ecx + 0xd]; ret; 
0x001ab1b3: jl 0x1ab1d0; lea eax, [ecx + 0xe]; ret; 
0x001ab1c3: jl 0x1ab1d0; lea eax, [ecx + 0xf]; ret; 
0x001ab113: jl 0x1ab1d0; lea eax, [ecx + 1]; ret; 
0x001ab123: jl 0x1ab1d0; lea eax, [ecx + 2]; ret; 
0x001ab133: jl 0x1ab1d0; lea eax, [ecx + 3]; ret; 
0x001ab09b: jl 0x1ab1d0; lea eax, [ecx + 4]; ret; 
0x001ab143: jl 0x1ab1d0; lea eax, [ecx + 5]; ret; 
0x001ab153: jl 0x1ab1d0; lea eax, [ecx + 6]; ret; 
0x001ab163: jl 0x1ab1d0; lea eax, [ecx + 7]; ret; 
0x001ab0d4: jl 0x1ab1d0; lea eax, [ecx + 8]; ret; 
0x001ab173: jl 0x1ab1d0; lea eax, [ecx + 9]; ret; 
0x001aafb1: jl 0x1ab1d0; mov eax, ecx; ret; 
0x001abc32: jl 0x1abc34; add byte ptr [eax], al; mov eax, 0xc; pop edi; ret; 
0x001aef5d: jl 0x1aef83; sbb al, 0xe9; ret; 
0x001b1355: jl 0x1b1370; add al, 0x83; ret; 
0x001b19dc: jl 0x1b1a02; sbb byte ptr [edi], cl; xchg ebp, eax; ret 0xc208; 
0x001b3475: jl 0x1b3490; add al, 0x83; ret; 
0x0002327d: jl 0x23292; add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012e1d9: jl 0x24f50; je 0x12e1e2; ret; 
0x0012e416: jl 0x24f50; ret; 
0x000260a5: jl 0x260e2; push ss; add byte ptr [0x218d6b], al; mov eax, dword ptr [eax + 0x10b8]; ret; 
0x00029321: jl 0x29347; sub byte ptr [ebp - 0x6945379], cl; call dword ptr [eax - 0x73]; 
0x00029466: jl 0x2948c; sub byte ptr [ebp - 0x6945379], cl; call dword ptr [eax - 0x73]; 
0x00029489: jl 0x294af; sub byte ptr [ebp - 0x6945379], cl; call dword ptr [eax + 0x68]; 
0x000294ac: jl 0x294d2; sub byte ptr [ebp - 0x6945379], cl; call dword ptr [eax + 0x68]; 
0x000294be: jl 0x294e4; sub byte ptr [ebp - 0x6945379], cl; call dword ptr [eax - 0x73]; 
0x0002a023: jl 0x2a049; cmp al, 0x8d; xchg dword ptr [ebx + ebp*2], ebp; stc; call dword ptr [eax - 0x73]; 
0x0002a07a: jl 0x2a0a0; cmp al, 0x8d; xchg dword ptr [ebx + ebp*2], ebp; stc; call dword ptr [eax - 0x73]; 
0x0002a09d: jl 0x2a0c3; cmp al, 0x8d; xchg dword ptr [ebx + ebp*2], ebp; stc; call dword ptr [eax - 0x73]; 
0x0002a7b6: jl 0x2a7dc; cmp byte ptr [ebp - 0x6951379], cl; call dword ptr [eax - 0x73]; 
0x0002aa46: jl 0x2aa6c; cmp byte ptr [ebp - 0x6951379], cl; call dword ptr [eax - 0x73]; 
0x0002aacf: jl 0x2aaf5; cmp byte ptr [ebp - 0x6951379], cl; call dword ptr [eax - 0x73]; 
0x0002aaf2: jl 0x2ab18; cmp byte ptr [ebp - 0x6951379], cl; call dword ptr [eax + 0x68]; 
0x0002ab15: jl 0x2ab3b; cmp byte ptr [ebp - 0x6951379], cl; call dword ptr [eax + 0x68]; 
0x0002ab27: jl 0x2ab4d; cmp byte ptr [ebp - 0x68d9b79], cl; call dword ptr [eax - 0x73]; 
0x0002ab4a: jl 0x2ab70; cmp byte ptr [ebp - 0x68d9b79], cl; call dword ptr [eax - 0x73]; 
0x0002ab6d: jl 0x2ab93; cmp byte ptr [ebp - 0x68d9b79], cl; call dword ptr [eax - 0x73]; 
0x0002ab90: jl 0x2abb6; cmp byte ptr [ebp - 0x68d9b79], cl; call dword ptr [eax - 0x73]; 
0x0002abb3: jl 0x2abd9; cmp byte ptr [ebp - 0x68d9b79], cl; call dword ptr [eax - 0x73]; 
0x0002abd6: jl 0x2abfc; cmp byte ptr [ebp - 0x68d9b79], cl; call dword ptr [eax - 0x73]; 
0x0002b077: jl 0x2b0d4; pop esi; pop edi; pop ebp; ret; 
0x0002b109: jl 0x2b12f; cmp al, 0x8d; xchg esp, ecx; push -7; call dword ptr [eax - 0x73]; 
0x0002b220: jl 0x2b246; adc al, 0x89; ret; 
0x0002b236: jl 0x2b25c; cmp al, 0x8d; xchg esp, ecx; push -7; call dword ptr [eax - 0x73]; 
0x0002b218: jl 0x2b275; pop esi; pop edi; pop ebp; jmp eax; 
0x0002b74b: jl 0x2b771; cmp al, 0x8d; xchg dword ptr [eax + 0x72], ecx; stc; call dword ptr [eax - 0x73]; 
0x0002b79f: jl 0x2b7c5; cmp al, 0x8d; xchg dword ptr [eax + 0x72], ecx; stc; call dword ptr [eax - 0x73]; 
0x0002b7e5: jl 0x2b80b; cmp al, 0x8d; xchg esp, ecx; push -7; call dword ptr [eax + 0x68]; 
0x0002b808: jl 0x2b82e; cmp al, 0x8d; xchg esp, ecx; push -7; call dword ptr [eax + 0x68]; 
0x0002b851: jl 0x2b877; cmp al, 0x8d; xchg dword ptr [eax + 0x72], ecx; stc; call dword ptr [eax - 0x73]; 
0x0002b874: jl 0x2b89a; cmp al, 0x8d; xchg dword ptr [eax + 0x72], ecx; stc; call dword ptr [eax - 0x73]; 
0x0002c3ae: jl 0x2c3d4; and al, 0x89; ret 0xf229; 
0x0002c459: jl 0x2c45b; add byte ptr [ebx - 0x72afdb84], cl; xchg dword ptr [edx + esi*2], esp; stc; call dword ptr [eax - 0x73]; 
0x0002cd6f: jl 0x2cd95; or al, 0x89; cmp byte ptr [ebx + 0x39102444], cl; ret 0x850f; 
0x0002cdc7: jl 0x2cded; cmp al, 0x8d; xchg dword ptr [eax], ecx; jb 0x2cdc8; call dword ptr [eax - 0x73]; 
0x0002cdea: jl 0x2ce10; cmp al, 0x8d; xchg dword ptr [eax], ecx; jb 0x2cdeb; call dword ptr [eax - 0x73]; 
0x0002ce4a: jl 0x2ce70; cmp al, 0x8d; xchg dword ptr [eax], ecx; jb 0x2ce4b; call dword ptr [eax - 0x73]; 
0x0002d02d: jl 0x2d08a; pop esi; pop edi; pop ebp; ret; 
0x0002d5c0: jl 0x2d61d; pop esi; pop edi; pop ebp; jmp eax; 
0x0002dec3: jl 0x2dee9; adc byte ptr [ecx - 0x76f3dbbc], cl; fmul dword ptr [ecx - 0x7cfbdbbc]; rol byte ptr [edx], 0x39; ret 0x820f; 
0x0002e015: jl 0x2e03b; cmp byte ptr [ebp - 0x695d379], cl; call dword ptr [eax - 0x73]; 
0x0002e163: jl 0x2e189; cmp byte ptr [ebp - 0x695d379], cl; call dword ptr [eax - 0x73]; 
0x0002e186: jl 0x2e1ac; cmp byte ptr [ebp - 0x695d379], cl; call dword ptr [eax + 0x68]; 
0x0002e1a9: jl 0x2e1cf; cmp byte ptr [ebp - 0x6961379], cl; call dword ptr [eax - 0x73]; 
0x0002e1cc: jl 0x2e1f2; cmp byte ptr [ebp - 0x6961379], cl; call dword ptr [eax - 0x73]; 
0x0002e1ef: jl 0x2e215; cmp byte ptr [ebp - 0x695d379], cl; call dword ptr [eax - 0x73]; 
0x0002e217: jl 0x2e23d; cmp byte ptr [ebp - 0x695d379], cl; call dword ptr [eax + 0x68]; 
0x0002e22c: jl 0x2e252; cmp byte ptr [ebp - 0x6961379], cl; call dword ptr [eax - 0x73]; 
0x0002e40d: jl 0x2e46a; pop esi; pop edi; pop ebp; ret; 
0x0002e993: jl 0x2e9f0; pop esi; pop edi; pop ebp; jmp eax; 
0x00034657: jl 0x3467d; add al, 0x7f; setbe al; ret; 
0x00038989: jl 0x389af; sbb byte ptr [ecx - 0x7c327611], cl; in al, dx; or al, 0x83; ret; 
0x0003a328: jl 0x3a34e; adc al, 0x8b; push ebx; or byte ptr [ecx - 0x50f0fbb9], cl; ret 0x7c8b; 
0x0003d4a5: jl 0x3d46e; adc al, 0; add eax, 0x20196b; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x0003d505: jl 0x3d52b; add al, 0; je 0x3d520; lea ecx, [eax + 1]; mov dword ptr [edx + 0x1f4], ecx; ret; 
0x0003ef9e: jl 0x3efc4; or al, 0x89; add dword ptr [ecx + 0x45189c8], ecx; ret 4; 
0x0004074e: jl 0x40774; or al, 0x89; add dword ptr [ecx + 0x45189c8], ecx; ret 4; 
0x00047763: jl 0x47789; adc al, 0x8d; xchg dword ptr [eax + edi*2], esi; stc; call dword ptr [eax + 0x68]; 
0x00047786: jl 0x477ac; adc al, 0x8d; xchg dword ptr [eax + edi*2], esi; stc; call dword ptr [eax + 0x68]; 
0x00047bad: jl 0x47bd3; or al, 1; ret 0xd389; 
0x00047dd9: jl 0x47dff; adc byte ptr [edi], cl; mov esi, 0x243c83d3; adc byte ptr [ebx - 0x6af068cc], cl; ret 0xd789; 
0x00048009: jl 0x4802f; sbb byte ptr [ebp - 0x7d379], cl; call dword ptr [eax - 0x73]; 
0x00049fb5: jl 0x49fdb; sbb byte ptr [ebp - 0x687bf79], cl; call dword ptr [eax - 0x73]; 
0x0004a16f: jl 0x4a195; sbb byte ptr [ebp - 0x687bf79], cl; call dword ptr [eax - 0x73]; 
0x0004a192: jl 0x4a1b8; sbb byte ptr [ebp - 0x687bf79], cl; call dword ptr [eax - 0x73]; 
0x0004a1b5: jl 0x4a1db; sbb byte ptr [ebp - 0x687bf79], cl; call dword ptr [eax - 0x73]; 
0x0004a1d8: jl 0x4a1fe; sbb byte ptr [ebp - 0x687bf79], cl; call dword ptr [eax - 0x73]; 
0x0004a1fb: jl 0x4a221; sbb byte ptr [ebp - 0x687bf79], cl; call dword ptr [eax - 0x73]; 
0x0004a21e: jl 0x4a244; sbb byte ptr [ebp - 0x687bf79], cl; call dword ptr [eax - 0x73]; 
0x0004a241: jl 0x4a267; sbb byte ptr [ebp - 0x687bf79], cl; call dword ptr [eax - 0x73]; 
0x0004a26b: jl 0x4a291; sbb byte ptr [ebp - 0x687cb79], cl; call dword ptr [eax - 0x73]; 
0x0004a28e: jl 0x4a2b4; sbb byte ptr [ebp - 0x687bf79], cl; call dword ptr [eax - 0x73]; 
0x0004a2b1: jl 0x4a2d7; sbb byte ptr [ebp - 0x687bf79], cl; call dword ptr [eax - 0x73]; 
0x0004a2d4: jl 0x4a2fa; sbb byte ptr [ebp - 0x687bf79], cl; call dword ptr [eax - 0x73]; 
0x0004a2f7: jl 0x4a31d; sbb byte ptr [ebp - 0x687bf79], cl; call dword ptr [eax - 0x73]; 
0x0004a31a: jl 0x4a340; sbb byte ptr [ebp - 0x687bf79], cl; call dword ptr [eax - 0x73]; 
0x0004a33d: jl 0x4a363; sbb byte ptr [ebp - 0x687bf79], cl; call dword ptr [eax - 0x73]; 
0x0004a360: jl 0x4a386; sbb byte ptr [ebp - 0x687bf79], cl; call dword ptr [eax - 0x73]; 
0x0004acc3: jl 0x4ace9; adc al, 0x8d; xchg dword ptr [eax + edi*2], esi; stc; call dword ptr [eax + 0x68]; 
0x0004ace6: jl 0x4ad0c; adc al, 0x8d; xchg dword ptr [eax + edi*2], esi; stc; call dword ptr [eax + 0x68]; 
0x0004b10d: jl 0x4b133; or byte ptr [ecx], al; ret 0xd389; 
0x0004b339: jl 0x4b35f; adc byte ptr [edi], cl; mov esi, 0x243c83d3; adc byte ptr [ebx - 0x6af068cc], cl; ret 0xd789; 
0x0004b579: jl 0x4b59f; sbb byte ptr [ebp - 0x7d379], cl; call dword ptr [eax - 0x73]; 
0x0004d397: jl 0x4d3bd; sbb byte ptr [ebp - 0x687a779], cl; call dword ptr [eax - 0x73]; 
0x0004d422: jl 0x4d448; sbb byte ptr [ebp - 0x687a779], cl; call dword ptr [eax - 0x73]; 
0x0004d445: jl 0x4d46b; sbb byte ptr [ebp - 0x687a779], cl; call dword ptr [eax - 0x73]; 
0x0004d468: jl 0x4d48e; sbb byte ptr [ebp - 0x687a779], cl; call dword ptr [eax - 0x73]; 
0x0004d48b: jl 0x4d4b1; sbb byte ptr [ebp - 0x687a779], cl; call dword ptr [eax - 0x73]; 
0x0004d4ae: jl 0x4d4d4; sbb byte ptr [ebp - 0x687a779], cl; call dword ptr [eax - 0x73]; 
0x0004d4d8: jl 0x4d4fe; sbb byte ptr [ebp - 0x687a779], cl; call dword ptr [eax - 0x73]; 
0x0004d507: jl 0x4d52d; sbb byte ptr [ebp - 0x687a779], cl; call dword ptr [eax - 0x73]; 
0x0004d52a: jl 0x4d550; sbb byte ptr [ebp - 0x687a779], cl; call dword ptr [eax - 0x73]; 
0x0004d54d: jl 0x4d573; sbb byte ptr [ebp - 0x687cb79], cl; call dword ptr [eax - 0x73]; 
0x0004d570: jl 0x4d596; sbb byte ptr [ebp - 0x687a779], cl; call dword ptr [eax - 0x73]; 
0x0004d593: jl 0x4d5b9; sbb byte ptr [ebp - 0x687a779], cl; call dword ptr [eax - 0x73]; 
0x0004d5b6: jl 0x4d5dc; sbb byte ptr [ebp - 0x687a779], cl; call dword ptr [eax - 0x73]; 
0x0004d5f8: jl 0x4d61e; sbb byte ptr [ebp - 0x687a779], cl; call dword ptr [eax - 0x73]; 
0x0004e805: jl 0x4e82b; adc al, 0x8d; xchg dword ptr [eax + edi*2], esi; stc; call dword ptr [eax + 0x68]; 
0x0004e828: jl 0x4e84e; adc al, 0x8d; xchg dword ptr [eax + edi*2], esi; stc; call dword ptr [eax + 0x68]; 
0x0004ebc9: jl 0x4ebef; and byte ptr [eax - 0x7bf0cf05], al; ret; 
0x0004ec9d: jl 0x4ecc3; sbb byte ptr [ecx], al; ret 0xd389; 
0x0004f0f9: jl 0x4f11f; sub byte ptr [ebp - 0x7d379], cl; call dword ptr [eax - 0x73]; 
0x0004f2c6: jl 0x4f2c9; ret; 
0x0005112b: jl 0x51151; sub byte ptr [ebp - 0x6878f79], cl; call dword ptr [eax - 0x73]; 
0x000511be: jl 0x511e4; sub byte ptr [ebp - 0x687cb79], cl; call dword ptr [eax - 0x73]; 
0x000511e1: jl 0x51207; sub byte ptr [ebp - 0x6878f79], cl; call dword ptr [eax - 0x73]; 
0x00051204: jl 0x5122a; sub byte ptr [ebp - 0x6878f79], cl; call dword ptr [eax - 0x73]; 
0x00051227: jl 0x5124d; sub byte ptr [ebp - 0x6878f79], cl; call dword ptr [eax - 0x73]; 
0x0005124a: jl 0x51270; sub byte ptr [ebp - 0x6878f79], cl; call dword ptr [eax - 0x73]; 
0x0005126d: jl 0x51293; sub byte ptr [ebp - 0x6878f79], cl; call dword ptr [eax - 0x73]; 
0x00051290: jl 0x512b6; sub byte ptr [ebp - 0x6878f79], cl; call dword ptr [eax - 0x73]; 
0x000512b3: jl 0x512d9; sub byte ptr [ebp - 0x6878f79], cl; call dword ptr [eax - 0x73]; 
0x000512f2: jl 0x51318; sub byte ptr [ebp - 0x6878f79], cl; call dword ptr [eax - 0x73]; 
0x00051315: jl 0x5133b; sub byte ptr [ebp - 0x6878f79], cl; call dword ptr [eax - 0x73]; 
0x00051338: jl 0x5135e; sub byte ptr [ebp - 0x6878f79], cl; call dword ptr [eax - 0x73]; 
0x0005135b: jl 0x51381; sub byte ptr [ebp - 0x6878f79], cl; call dword ptr [eax - 0x73]; 
0x0005137e: jl 0x513a4; sub byte ptr [ebp - 0x6878f79], cl; call dword ptr [eax - 0x73]; 
0x000513a8: jl 0x513ce; sub byte ptr [ebp - 0x6878f79], cl; call dword ptr [eax - 0x73]; 
0x000546a1: jl 0x54639; add al, 0x8d; dec edi; add dword ptr [ecx - 0x7cfb69b4], ecx; ret 0x8501; 
0x00056425: jl 0x5644b; adc al, 0x8d; xchg dword ptr [eax + edi*2], esi; stc; call dword ptr [eax + 0x68]; 
0x00056448: jl 0x5646e; adc al, 0x8d; xchg dword ptr [eax + edi*2], esi; stc; call dword ptr [eax + 0x68]; 
0x00059bf0: jl 0x59b96; std; dec dword ptr [ebx - 0x36474b]; dec dword ptr [ebp - 0x687777a]; call dword ptr [eax - 0x73]; 
0x0005e052: jl 0x5e085; stc; call dword ptr [eax - 0x18]; 
0x0005e195: jl 0x5e122; mov word ptr [esp + ebp*4], fs; add byte ptr [eax], al; add dh, dh; ret; 
0x0005e4c8: jl 0x5e525; pop esi; pop edi; pop ebp; ret; 
0x000619ba: jl 0x61a17; pop esi; pop edi; pop ebp; ret; 
0x0007b31d: jl 0x7b37a; pop esi; pop edi; pop ebp; ret; 
0x0007b8db: jl 0x7b947; add ch, byte ptr [edx]; push 0; push ebp; call dword ptr [esi + 0x40]; 
0x0007d171: jl 0x7d197; xor al, 0x85; sar byte ptr [eax + 0xb], 0x83; ret 0x8301; 
0x0007d47f: jl 0x7d4a5; or byte ptr [ebp - 0x67cef71], cl; jmp dword ptr [ebp - 0x75]; 
0x00081ac2: jl 0x81ae8; inc esp; dec dword ptr [edi]; xchg esp, eax; ret; 
0x00083281: jl 0x832a7; or byte ptr [ebx + 0x290c246c], cl; ret 0xfac1; 
0x00085e2c: jl 0x85e52; or byte ptr [ebp - 0x67cab79], cl; call dword ptr [eax - 0x73]; 
0x00086ada: jl 0x86b00; or al, 0x8d; xchg ebx, esi; stc; call dword ptr [eax + 0x56]; 
0x00088035: jl 0x88092; pop esi; pop edi; pop ebp; ret; 
0x0008cd27: jl 0x8cd43; add byte ptr [eax], al; add esp, 4; pop ebx; pop esi; ret; 
0x0008ce34: jl 0x8ce50; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0008e73a: jl 0x8e73c; add byte ptr [eax], al; ret; 
0x0008e749: jl 0x8e74b; add byte ptr [eax], al; ret; 
0x0008e7ec: jl 0x8e7ee; add byte ptr [eax], al; pop ebx; ret; 
0x0008e81a: jl 0x8e81c; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x24]; test eax, eax; jne 0x8e830; ret; 
0x0008f0a4: jl 0x8f029; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0008fe58: jl 0x8fe7e; adc al, ch; mov ebp, 0x81000f9d; ret; 
0x00091d98: jl 0x91d23; call 0x5d687bfa; ret; 
0x000924af: jl 0x9243a; call 0x5d688311; ret; 
0x00092b1d: jl 0x92b43; add al, 0x8d; xchg eax, ebx; test cl, bh; call dword ptr [eax + 0x68]; 
0x00092b40: jl 0x92b66; add al, 0x8d; xchg eax, ebx; test cl, bh; call dword ptr [eax + 0x68]; 
0x00093ffa: jl 0x9403b; stc; call dword ptr [eax - 0x18]; 
0x00099df9: jl 0x99e1f; adc al, 0x89; ret 0xca83; 
0x00099e4b: jl 0x99e71; adc al, 0x89; ret 0xc389; 
0x00099e69: jl 0x99e8f; adc al, 0x89; ret; 
0x00099f01: jl 0x99f27; adc al, 0x89; ret 0xca83; 
0x00099f58: jl 0x99f7e; adc al, 0x89; ret 0xfbd1; 
0x00099f7e: jl 0x99fa4; adc al, 0x89; ret 0xfbd1; 
0x0009d67c: jl 0x9d670; je 0x9d693; xor eax, eax; pop ebx; ret; 
0x0009d6cc: jl 0x9d6c0; mov edx, 0; cmovne eax, edx; ret; 
0x0009e208: jl 0x9e22e; or al, 0x8d; xchg dword ptr [eax - 0x77], ebp; stc; call dword ptr [eax - 0x73]; 
0x000a04dc: jl 0xa0461; les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x000a274f: jl 0xa26e0; stc; call dword ptr [eax - 0x18]; 
0x000a2814: jl 0xa27a4; stc; call dword ptr [eax - 0x18]; 
0x000a358e: jl 0xa35b4; sub al, 0x89; ret 0xcaeb; 
0x000a62b9: jl 0xa62df; and al, 0x8d; xchg dword ptr [eax - 0x68], edi; stc; call dword ptr [eax - 0x73]; 
0x000a62dc: jl 0xa6302; and al, 0x8d; xchg dword ptr [eax - 0x68], edi; stc; call dword ptr [eax - 0x73]; 
0x000a6a77: jl 0xa6abd; stc; call dword ptr [eax - 0x73]; 
0x000a97e3: jl 0xa9809; adc al, 0x83; ret 0x8301; 
0x000aad89: jl 0xaadaf; sbb byte ptr [ecx], dh; ror byte ptr [ecx + 0x13c244c], cl; ret; 
0x000abb81: jl 0xabba7; sbb byte ptr [edi], cl; mov esi, 0xfc53906; xchg esp, eax; ret 0xc739; 
0x000ac3c6: jl 0xac3da; out 0xff, eax; cmove eax, edx; ret; 
0x000aca15: jl 0xaca3b; sub byte ptr [ebx - 0x76d3dbac], cl; je 0xaca43; sbb al, 0x83; rol byte ptr [ecx], 0x83; ret; 
0x000ad13b: jl 0xad161; pop es; xor byte ptr [edi], cl; xchg esp, eax; ret; 
0x000baa26: jl 0xbaa4c; adc dword ptr [eax], eax; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000baea0: jl 0xbaea8; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000c1878: jl 0xc18b0; add eax, ecx; ret; 
0x000c1888: jl 0xc18b0; lea eax, [ecx + eax + 0x10]; ret; 
0x000c1898: jl 0xc18b0; lea eax, [ecx + eax + 0x20]; ret; 
0x000c18a8: jl 0xc18b0; lea eax, [ecx + eax + 0x30]; ret; 
0x000c44fa: jl 0xc4520; sbb al, 0x8d; xchg esp, ebx; wait; stc; call dword ptr [eax - 0x73]; 
0x000c454d: jl 0xc4573; sbb al, 0x8d; xchg esp, ebx; wait; stc; call dword ptr [eax - 0x73]; 
0x000c456d: jl 0xc4593; sbb al, 0x8d; xchg esp, ebx; wait; stc; call dword ptr [eax - 0x73]; 
0x000c69a2: jl 0xc69c8; sbb al, 0x8d; xchg dword ptr [eax], ebx; popfd; stc; call dword ptr [eax - 0x73]; 
0x000c69f5: jl 0xc6a1b; sbb al, 0x8d; xchg dword ptr [eax], ebx; popfd; stc; call dword ptr [eax - 0x73]; 
0x000c6a15: jl 0xc6a3b; sbb al, 0x8d; xchg dword ptr [eax], ebx; popfd; stc; call dword ptr [eax - 0x73]; 
0x000c6d59: jl 0xc6d7f; sbb al, 0x8d; xchg dword ptr [eax], ebp; popfd; stc; call dword ptr [eax - 0x73]; 
0x000c6d79: jl 0xc6d9f; sbb al, 0x8d; xchg dword ptr [eax], ebp; popfd; stc; call dword ptr [eax - 0x73]; 
0x000c6d99: jl 0xc6dbf; sbb al, 0x8d; xchg dword ptr [eax], ebp; popfd; stc; call dword ptr [eax - 0x73]; 
0x000c6dbc: jl 0xc6de2; sbb al, 0x8d; xchg dword ptr [eax], ebp; popfd; stc; call dword ptr [eax - 0x73]; 
0x000c6dd1: jl 0xc6e18; stc; call dword ptr [eax - 0x18]; 
0x000c6dd1: jl 0xc6e18; stc; call dword ptr [eax - 0x18]; xchg ebp, eax; sal dh, cl; jmp dword ptr [esi - 0x70]; 
0x000c7ca4: jl 0xc7cca; adc al, 0x8d; xchg dword ptr [eax + edi*2], esi; stc; call dword ptr [eax + 0x68]; 
0x000c7cc7: jl 0xc7ced; adc al, 0x8d; xchg dword ptr [eax + edi*2], esi; stc; call dword ptr [eax + 0x68]; 
0x000c8e36: jl 0xc8df8; stc; call dword ptr [eax + 0x56]; 
0x000c9f27: jl 0xc9f4d; xor byte ptr [edi], cl; xchg edx, eax; ret 0x7439; 
0x000cae84: jl 0xcaeaa; adc al, 0x8d; xchg dword ptr [eax + edi*2], esi; stc; call dword ptr [eax + 0x68]; 
0x000caea7: jl 0xcaecd; adc al, 0x8d; xchg dword ptr [eax + edi*2], esi; stc; call dword ptr [eax + 0x68]; 
0x000cb1c7: jl 0xcb1ed; and cl, ch; ret 3; 
0x000cbba6: jl 0xcbb68; stc; call dword ptr [eax + 0x56]; 
0x000cc52b: jl 0xcc551; or byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000ce726: jl 0xce74c; adc al, 0x8d; xchg dword ptr [eax + edi*2], esi; stc; call dword ptr [eax + 0x68]; 
0x000ce749: jl 0xce76f; adc al, 0x8d; xchg dword ptr [eax + edi*2], esi; stc; call dword ptr [eax + 0x68]; 
0x000cf41d: jl 0xcf3df; stc; call dword ptr [eax + 0x56]; 
0x000d08e7: jl 0xd090d; cmp byte ptr [edi], cl; xchg edx, eax; ret 0x7439; 
0x000d0c4e: jl 0xd0c74; sub al, 0x8d; xchg dword ptr [ebp + ebx*4 - 7], esp; call dword ptr [eax - 0x73]; 
0x000d0d02: jl 0xd0d28; sub al, 0x8d; xchg dword ptr [ebp + ebx*4 - 7], esp; call dword ptr [eax - 0x73]; 
0x000d0d6b: jl 0xd0d91; sub al, 0x8d; xchg dword ptr [ebp + ebx*4 - 7], esp; call dword ptr [eax - 0x73]; 
0x000d0df7: jl 0xd0e1d; sub al, 0x8d; xchg dword ptr [ebp + ebx*4 - 7], esp; call dword ptr [eax - 0x73]; 
0x000d0e3d: jl 0xd0e63; sub al, 0x8d; xchg dword ptr [ebp + ebx*4 - 7], esp; call dword ptr [eax - 0x73]; 
0x000d0e8a: jl 0xd0eb0; sub al, 0x8d; xchg dword ptr [ebp + ebx*4 - 7], esp; call dword ptr [eax - 0x73]; 
0x000d0ed0: jl 0xd0ef6; sub al, 0x8d; xchg dword ptr [ebp + ebx*4 - 7], esp; call dword ptr [eax - 0x73]; 
0x000d2c89: jl 0xd2c28; stc; call dword ptr [eax - 0x18]; 
0x000d53c6: jl 0xd53ec; adc al, 0x8d; xchg dword ptr [eax + edi*2], esi; stc; call dword ptr [eax + 0x68]; 
0x000d53e9: jl 0xd540f; adc al, 0x8d; xchg dword ptr [eax + edi*2], esi; stc; call dword ptr [eax + 0x68]; 
0x000d682f: jl 0xd67f1; stc; call dword ptr [eax + 0x56]; 
0x000d9840: jl 0xd984c; mov ecx, 1; pop ebx; pop esi; mov eax, ecx; ret; 
0x000dca44: jl 0xdca7b; add byte ptr [edi], cl; xchg ebp, eax; ret; 
0x000ddf09: jl 0xddea9; stc; call dword ptr [eax - 0x73]; 
0x000e461a: jl 0xe4640; or al, 0x29; retf 0x490f; ret 0x1c8d; 
0x000e745a: jl 0xe7480; adc al, 1; je 0xe7468; add esp, 0xc; ret; 
0x000e754a: jl 0xe7570; adc al, 1; je 0xe7558; add esp, 0xc; ret; 
0x000e80ff: jl 0xe8125; add al, 0x83; ret 0x8301; 
0x000e81a8: jl 0xe81ce; add al, 0x83; ret 0x8301; 
0x000e8307: jl 0xe832d; and byte ptr [ebx - 0x7cdbdb8c], cl; jmp dword ptr [ebx + 0x77]; 
0x000ea243: jl 0xea1ce; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x000f06ec: jl 0xf0712; adc al, 0x8d; xchg dword ptr [esi + 0x47], esp; stc; call dword ptr [eax - 0x73]; 
0x000f07b9: jl 0xf07df; adc al, 0x8d; xchg dword ptr [eax - 0x60], edx; stc; call dword ptr [eax - 0x73]; 
0x000f07fc: jl 0xf0822; adc al, 0x8d; xchg dword ptr [eax - 0x60], edx; stc; call dword ptr [eax - 0x73]; 
0x000f1902: jl 0xf18a4; stc; call dword ptr [eax + 0x68]; 
0x000f1938: jl 0xf18da; stc; call dword ptr [eax + 0x68]; 
0x000f4436: jl 0xf43d8; stc; call dword ptr [eax + 0x68]; 
0x000f4460: jl 0xf4402; stc; call dword ptr [eax + 0x68]; 
0x000f5242: jl 0xf51e4; stc; call dword ptr [eax + 0x68]; 
0x000f5278: jl 0xf521a; stc; call dword ptr [eax + 0x68]; 
0x000f7d66: jl 0xf7d08; stc; call dword ptr [eax + 0x68]; 
0x000f7d90: jl 0xf7d32; stc; call dword ptr [eax + 0x68]; 
0x000f8b76: jl 0xf8b18; stc; call dword ptr [eax + 0x68]; 
0x000f8ba0: jl 0xf8b42; stc; call dword ptr [eax + 0x68]; 
0x000fe857: jl 0xfe87d; or al, 0xe9; ret 0xfffb; 
0x0010bb91: jle 0x10bb16; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0011e656: jle 0x11e65c; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xb7; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00124a1c: jle 0x124a68; stc; call dword ptr [eax - 0x18]; 
0x00124bdc: jle 0x124c28; stc; call dword ptr [eax - 0x18]; 
0x00130d47: jle 0x130d4a; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00132fab: jle 0x133019; add eax, 0x65c58100; mov esi, 0x31570010; call dword ptr [esi + 0x53]; 
0x001413ab: jle 0x141330; rol byte ptr [ecx], 0x83; ret; 
0x00145de7: jle 0x145dee; cmp byte ptr [ebx], 0x2e; je 0x145df8; add esp, 8; pop ebx; ret; 
0x0015b2a5: jle 0x15b293; jmp dword ptr [ebp - 0x75]; 
0x00165e4e: jle 0x165e4d; jmp dword ptr [esi - 0x70]; 
0x0016db23: jle 0x16db88; stc; call dword ptr [eax + 0x6a]; 
0x0016db77: jle 0x16dbdc; stc; jmp dword ptr [ebp - 0x75]; 
0x0016dc23: jle 0x16dc88; stc; call dword ptr [eax - 0x18]; 
0x001751c8: jle 0x17514d; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00178e99: jle 0x178ea8; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0017bad1: jle 0x17bb04; rol byte ptr [ebx - 0x6bf0fd08], cl; ret 0xf883; 
0x0017bbd1: jle 0x17bc04; rol byte ptr [ebx - 0x6bf0fd08], cl; ret 0xf883; 
0x0017cebd: jle 0x17ced3; pop ebx; pop esi; pop edi; ret; 
0x00193248: jle 0x19324e; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00193330: jle 0x193336; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0019639a: jle 0x1963dc; clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001965a6: jle 0x1965e8; clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00196a3a: jle 0x196a3c; movq qword ptr [edx], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019839a: jle 0x1983dc; clc; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x00198596: jle 0x1985d8; clc; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x0019a49a: jle 0x19a4dc; clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019a6a6: jle 0x19a6e8; clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019ab3a: jle 0x19ab3c; movq qword ptr [edx], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00023532: jle 0x23539; add byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x0002fecc: jle 0x2fef9; stc; call dword ptr [edx + 0x50]; 
0x0004026b: jle 0x4026d; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00042230: jle 0x42232; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00052f0e: jle 0x52f10; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0005bee8: jle 0x5be15; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00078eae: jle 0x78ea9; call dword ptr [eax - 0x18]; 
0x00078eca: jle 0x78ec5; call dword ptr [eax - 0x18]; 
0x00078ee6: jle 0x78ee1; call dword ptr [eax - 0x18]; 
0x00079228: jle 0x79223; call dword ptr [eax - 0x73]; 
0x0007b6d9: jle 0x7b6d5; jmp dword ptr [esi - 0x70]; 
0x0007c0fa: jle 0x7c0ff; or dword ptr [esi], 0x20; add esp, 4; pop ebx; pop esi; ret; 
0x00085e28: jle 0x85e35; add byte ptr [ebx - 0x72f7db84], cl; xchg dword ptr [ebx + eax*4 - 7], edx; call dword ptr [eax - 0x73]; 
0x000867dd: jle 0x867f0; mov edx, dword ptr [edx + 0x58]; mov eax, dword ptr [edx + 0x1c]; sub eax, dword ptr [edx + 0x18]; sar eax, 2; ret; 
0x0008690d: jle 0x86920; mov edx, dword ptr [edx + 0x58]; mov eax, dword ptr [edx + 0x10]; sub eax, dword ptr [edx + 0xc]; sar eax, 2; ret; 
0x00086f15: jle 0x86efb; call dword ptr [eax - 0x73]; 
0x0009800d: jle 0x97fda; pop ebx; mov eax, 0x16; pop esi; pop edi; ret; 
0x00098f66: jle 0x98f70; dec ecx; lcall 0, 0xc6870f3b; add byte ptr [ebx - 0x5e9ae3a9], cl; push 0x39000000; ret 0x6974; 
0x0009b2b5: jle 0x9b2af; dec dword ptr [ebp - 0x3b7c00bb]; adc byte ptr [ebx - 0x69f00208], al; ret; 
0x000b949e: jle 0xb94a9; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000df7a3: jle 0xdf7b5; add dword ptr [ebp + 0x76c98], ecx; add byte ptr [edi], cl; sahf; ret 0xd329; 
0x000fd3b6: jle 0xfd405; add byte ptr [edi], cl; xchg ebp, eax; rol byte ptr [ebx - 0x3ffefb3c], 0x5b; pop esi; ret; 
0x000fef32: jle 0xfef81; add byte ptr [edi], cl; xchg ebp, eax; ret 0xd201; 
0x0017c70b: jmp dword ptr [eax + 0x20]; 
0x0017c6e7: jmp dword ptr [eax + 0x24]; 
0x00186927: jmp dword ptr [eax + 0x30]; 
0x001713f7: jmp dword ptr [eax + 4]; 
0x0002ee9b: jmp dword ptr [eax]; 
0x00024af7: jmp dword ptr [ebp + 0x33]; 
0x0014cb9d: jmp dword ptr [ebp - 0x13]; 
0x0008f748: jmp dword ptr [ebp - 0x39]; 
0x0006aab7: jmp dword ptr [ebp - 0x3a]; 
0x0009c13b: jmp dword ptr [ebp - 0x5d]; 
0x0002f021: jmp dword ptr [ebp - 0x5f]; 
0x00031209: jmp dword ptr [ebp - 0x75]; 
0x000a1fe4: jmp dword ptr [ebp - 0x7d]; 
0x0003ddcd: jmp dword ptr [ebp - 1]; 
0x00076445: jmp dword ptr [ebp]; 
0x000e830f: jmp dword ptr [ebx + 0x77]; 
0x00023010: jmp dword ptr [ebx + 0xc]; 
0x00023006: jmp dword ptr [ebx + 8]; 
0x00171b23: jmp dword ptr [ebx - 0x41]; 
0x000d69b4: jmp dword ptr [ebx]; 
0x0002478c: jmp dword ptr [ecx]; 
0x00133c40: jmp dword ptr [edi + 0x6d]; 
0x0005d8e7: jmp dword ptr [edi + 0xf]; 
0x0014dd6d: jmp dword ptr [edx - 0x12]; 
0x00045c2f: jmp dword ptr [edx]; 
0x0005de2d: jmp dword ptr [esi + 0x25]; 
0x0005f1a4: jmp dword ptr [esi + 0x3d]; 
0x000fd7ec: jmp dword ptr [esi + 0xb]; 
0x000b04af: jmp dword ptr [esi + 0xf]; 
0x001169ad: jmp dword ptr [esi + 3]; 
0x00059750: jmp dword ptr [esi + 6]; 
0x001414bf: jmp dword ptr [esi - 0x39]; 
0x00142f94: jmp dword ptr [esi - 0x3f]; 
0x00024a4b: jmp dword ptr [esi - 0x70]; 
0x0005c687: jmp dword ptr [esi - 0x75]; 
0x000272b8: jmp dword ptr [esi - 0x77]; 
0x00161d0a: jmp dword ptr [esi - 0x7b]; 
0x0005de3d: jmp dword ptr [esi - 0x7d]; 
0x000e1737: jmp dword ptr [esi - 0x7f]; 
0x000f1153: jmp dword ptr [esi - 9]; 
0x0010d2d4: jmp dword ptr [esi]; 
0x00025067: jmp eax; 
0x000701fb: jmp ebx; 
0x00031fe1: jmp ecx; 
0x000256c4: jmp edi; 
0x00039399: jmp edx; 
0x00036ba2: jmp esi; 
0x00102fb2: jne 0x103030; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x0010b8bc: jne 0x10b960; call ecx; 
0x0010bbd5: jne 0x10bad9; lea esi, cs:[esi]; mov eax, dword ptr [eax + 8]; test eax, eax; je 0x10bae2; call eax; 
0x0010bd71: jne 0x10bd50; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0010bf31: jne 0x10bfaf; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0010c1f7: jne 0x10c228; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x0010c21b: jne 0x10c269; add esp, 0x28; pop ebx; ret; 
0x0010c29a: jne 0x10c2c8; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x0010c2be: jne 0x10c309; add esp, 0x28; pop ebx; ret; 
0x0010c38f: jne 0x10c3c0; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x0010c3b3: jne 0x10c409; add esp, 0x24; pop ebx; pop esi; ret; 
0x0010c43f: jne 0x10c470; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x0010c463: jne 0x10c4b9; add esp, 0x24; pop ebx; pop esi; ret; 
0x0010c507: jne 0x10c538; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x0010c52b: jne 0x10c579; add esp, 0x28; pop ebx; ret; 
0x0010e4a7: jne 0x10e553; add esp, 0x68; pop ebx; ret; 
0x0010e7bb: jne 0x10e883; add esp, 0x64; pop ebx; pop esi; ret; 
0x00113362: jne 0x113343; xor eax, eax; pop ebx; ret; 
0x0011354c: jne 0x113566; add esp, 0x78; pop ebx; ret; 
0x00114172: jne 0x11419b; pop ebx; mov eax, ecx; pop esi; pop edi; ret; 
0x0011429f: jne 0x1142f7; add esp, 0x34; pop ebx; pop esi; ret; 
0x001145a6: jne 0x1145e9; add esp, 0x14; pop ebx; pop esi; ret; 
0x0011473c: jne 0x114760; mov ebx, dword ptr [esp + 0x20]; mov eax, 6; call dword ptr gs:[0x10]; 
0x00114840: jne 0x114850; add esp, 4; pop ebx; pop esi; ret; 
0x001149bc: jne 0x1149e0; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 8; call dword ptr gs:[0x10]; 
0x001156d7: jne 0x1156ff; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x00115760: jne 0x11579c; add esp, 0x74; pop ebx; pop esi; ret; 
0x001158f9: jne 0x11593b; add esp, 0x74; pop ebx; pop esi; ret; 
0x00115ed7: jne 0x115ee7; add esp, 0x74; pop ebx; pop esi; ret; 
0x001160d7: jne 0x1160e7; add esp, 0x54; pop ebx; pop esi; ret; 
0x00116143: jne 0x116157; add esp, 0x60; pop ebx; pop esi; pop edi; ret; 
0x0011e5b5: jne 0x11e5db; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0011ef01: jne 0x11ef5b; add esp, 0xe4; pop ebx; pop esi; ret; 
0x0011efcc: jne 0x11f025; add esp, 0x1010; pop ebx; pop esi; pop edi; ret; 
0x0011f062: jne 0x11f06b; movzx eax, al; add esp, 0x4c; ret; 
0x0011f1cb: jne 0x11f27b; add esp, 0x24; pop ebx; pop esi; ret; 
0x0011f30b: jne 0x11f3bb; add esp, 0x24; pop ebx; pop esi; ret; 
0x0011f5b4: jne 0x11f5ce; add esp, 0x74; pop ebx; pop esi; ret; 
0x0011f6fc: jne 0x11f748; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0011f797: jne 0x11f7d0; mov ecx, dword ptr [esp + 0x30]; mov eax, 0x127; mov ebx, 0xffffff9c; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0011f89d: jne 0x11f8d0; mov ecx, dword ptr [esp + 0x30]; mov eax, 0x127; mov ebx, 0xffffff9c; mov edx, edi; call dword ptr gs:[0x10]; 
0x0011fa37: jne 0x11fa70; mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x127; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0011fb3d: jne 0x11fb70; mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x127; mov edx, edi; call dword ptr gs:[0x10]; 
0x0011fd5d: jne 0x11fd88; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0xa8; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011feaf: jne 0x11feb8; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x001205a8: jne 0x1205f2; mov ecx, dword ptr [esp + 0x54]; mov eax, 0x135; mov edi, 8; call dword ptr gs:[0x10]; 
0x0012075e: jne 0x120766; add esp, 0x24; pop ebx; pop esi; ret; 
0x0012078d: jne 0x1207b8; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 3; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00120a71: jne 0x120a8e; add esp, 0x74; pop ebx; pop esi; ret; 
0x00120c87: jne 0x120c97; add esp, 0x54; pop ebx; pop esi; ret; 
0x00120ce7: jne 0x120cf7; add esp, 0x64; pop ebx; pop esi; ret; 
0x001210c6: jne 0x121104; add esp, 0x44; mov eax, edx; pop ebx; pop esi; ret; 
0x001215d6: jne 0x1215dd; add esp, 0x38; pop ebx; ret; 
0x00121656: jne 0x12165d; add esp, 0x38; pop ebx; ret; 
0x001218e9: jne 0x12190d; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0012193d: jne 0x121968; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 4; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00121cee: jne 0x121d49; add esp, 0x14; pop ebx; pop esi; ret; 
0x00121d9e: jne 0x121df9; add esp, 0x14; pop ebx; pop esi; ret; 
0x00122c42: jne 0x122c69; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x00122caa: jne 0x122cb7; add esp, 0x1c; ret; 
0x00122cfd: jne 0x122d30; mov ebx, dword ptr [esp + 0x20]; mov eax, 0x36; mov ecx, 0x5409; mov edx, 1; call dword ptr gs:[0x10]; 
0x00122e47: jne 0x122e9e; add byte ptr [eax], al; add esp, 0x10; add esp, 0xc; ret; 
0x001230ab: jne 0x1230e1; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00123294: jne 0x1232b9; add esp, 0x54; pop ebx; pop esi; ret; 
0x0012338c: jne 0x1233b1; add esp, 0x54; pop ebx; pop esi; ret; 
0x00123429: jne 0x1234bc; add esp, 0x18; mov eax, ebx; pop ebx; ret; 
0x00123536: jne 0x12355b; add esp, 0x14; pop ebx; pop esi; ret; 
0x00123600: jne 0x12360f; add esp, 0x54; pop ebx; pop esi; ret; 
0x001237d9: jne 0x1237e3; add esp, 0x14; mov eax, edx; pop ebx; pop esi; ret; 
0x001239aa: jne 0x123935; ret; 
0x001243f5: jne 0x1243ff; add esp, 0x418; pop ebx; ret; 
0x0012456d: jne 0x12459e; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0012484c: jne 0x124870; mov ebx, dword ptr [esp + 0x20]; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x00124c97: jne 0x124c70; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x00124cf8: jne 0x124cd0; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x00124d9c: jne 0x124dc0; mov ebx, dword ptr [esp + 0x20]; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00124f6b: jne 0x124f72; add esp, 0x38; pop ebx; ret; 
0x00124ffc: jne 0x125004; add esp, 0x34; pop ebx; pop esi; ret; 
0x0012508f: jne 0x125097; add esp, 0x34; pop ebx; pop esi; ret; 
0x00125120: jne 0x125129; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x001251fc: jne 0x1251f0; mov eax, dword ptr [eax + 4]; pop ebx; ret; 
0x00125310: jne 0x12534f; add esp, 0x190; pop ebx; pop esi; pop edi; ret; 
0x0012539a: jne 0x1253a0; add esp, 0x1c; ret; 
0x00125e31: jne 0x125e4f; add esp, 0x1018; pop ebx; ret; 
0x00125f74: jne 0x125f7e; add esp, 0x54; mov eax, ebx; pop ebx; pop esi; ret; 
0x00126004: jne 0x12600e; add esp, 0x54; mov eax, ebx; pop ebx; pop esi; ret; 
0x00126b1d: jne 0x126b23; add esp, 0x1c; ret; 
0x0012730d: jne 0x127305; dec dword ptr [ebx + 0x56897440]; add al, 0x89; ret 0xeac1; 
0x001286b0: jne 0x1286b8; add esp, 0x34; pop ebx; pop esi; ret; 
0x00128741: jne 0x12874a; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x00128b6a: jne 0x128bb1; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00128c4f: jne 0x128c99; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00128d61: jne 0x128d1c; add esp, 0xc; ret; 
0x00128dd0: jne 0x128dab; mov eax, esi; pop ebx; pop esi; ret; 
0x0012945e: jne 0x12941e; pop ebx; pop esi; pop edi; ret; 
0x001295ad: jne 0x1295d8; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x90; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00129a06: jne 0x129a30; mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14d; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00129fa6: jne 0x12a001; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0012a336: jne 0x12a360; mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14e; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0012ac5d: jne 0x12ac88; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x91; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0012b3e4: jne 0x12b420; mov eax, 0xd2; mov ebx, 0xffffffff; mov edx, 0xffffffff; call dword ptr gs:[0x10]; 
0x0012b410: jne 0x12b47f; add esp, 0x24; mov eax, edx; pop ebx; pop esi; ret; 
0x0012b4c4: jne 0x12b500; mov eax, 0xd0; mov ebx, 0xffffffff; mov edx, 0xffffffff; call dword ptr gs:[0x10]; 
0x0012b4f0: jne 0x12b55f; add esp, 0x24; mov eax, edx; pop ebx; pop esi; ret; 
0x0012b5f6: jne 0x12b61b; add esp, 0x14; pop ebx; pop esi; ret; 
0x0012b67a: jne 0x12b6a8; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x0012b69e: jne 0x12b6e9; add esp, 0x28; pop ebx; ret; 
0x0012b71a: jne 0x12b748; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x0012b73e: jne 0x12b789; add esp, 0x28; pop ebx; ret; 
0x0012c565: jne 0x12c50f; sub esp, 4; push ecx; push 3; push ebx; call edx; 
0x0012c534: jne 0x12c580; sub esp, 4; push edi; push 2; push ebx; call esi; 
0x0012c5f5: jne 0x12c59f; sub esp, 4; push ecx; push 3; push ebx; call edx; 
0x0012c5c4: jne 0x12c610; sub esp, 4; push edi; push 2; push ebx; call esi; 
0x0012c647: jne 0x12c668; sub esp, 0xc; push dword ptr [ebx]; call esi; 
0x0012c9c2: jne 0x12c9a0; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0012ca7e: jne 0x12ca48; call eax; 
0x0012d012: jne 0x12d018; ret; 
0x0012d036: jne 0x12d040; ret; 
0x0012d1e9: jne 0x12d1ef; add esp, 0x3c; ret; 
0x0012d680: jne 0x12d686; add esp, 0x1c; ret; 
0x0012d6aa: jne 0x12d6f0; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x0012d78d: jne 0x12d795; add esp, 0x34; pop ebx; pop esi; ret; 
0x0012d81e: jne 0x12d827; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0012d86d: jne 0x12d898; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x92; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0012dc29: jne 0x12dc35; add esp, 0xe0; pop ebx; pop esi; pop edi; ret; 
0x0012e160: jne 0x12e16c; add esp, 0xe0; pop ebx; pop esi; pop edi; ret; 
0x0012ee00: jne 0x12ee29; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0012ee90: jne 0x12eee8; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x0012f110: jne 0x12f160; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x0012f294: jne 0x12f2c0; mov ecx, dword ptr [esp + 0x18]; mov edx, dword ptr [esp + 0x1c]; mov eax, 0xa3; mov ebx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0012f32d: jne 0x12f358; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x156; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0012f7d0: jne 0x12f7f9; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0012f860: jne 0x12f889; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0012fe05: jne 0x12fe9f; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x001304d0: jne 0x130520; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x00130e4d: jne 0x130e56; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00131290: jne 0x1312b9; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x0013133b: jne 0x131361; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x001313e4: jne 0x131409; add esp, 0x28; pop ebx; ret; 
0x00131481: jne 0x1314a9; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x00131509: jne 0x131529; add esp, 0x18; pop ebx; ret; 
0x00131589: jne 0x1315a9; add esp, 0x18; pop ebx; ret; 
0x0013180b: jne 0x131814; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x00131874: jne 0x131899; add esp, 0x18; pop ebx; ret; 
0x0013199b: jne 0x1319c1; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x00132000: jne 0x132029; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x001320ab: jne 0x1320d1; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x00132230: jne 0x132259; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x001322eb: jne 0x132311; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x00132584: jne 0x1325a9; add esp, 0x18; pop ebx; ret; 
0x001325fa: jne 0x132630; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0013269b: jne 0x1326a1; add esp, 0x1c; ret; 
0x00132709: jne 0x132729; add esp, 0x18; pop ebx; ret; 
0x00132794: jne 0x1327b9; add esp, 0x28; pop ebx; ret; 
0x0013289c: jne 0x1328a2; add esp, 0x7c; ret; 
0x001328d9: jne 0x1328db; add byte ptr [eax], al; mov ebx, 0xb; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x0013291f: jne 0x132921; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001329e1: jne 0x1329e3; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00132a3b: jne 0x132a3d; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00132b85: jne 0x132b87; add byte ptr [eax], al; mov ebx, 0xe; mov esi, edi; mov edx, 0x100; call dword ptr gs:[0x10]; 
0x00132bd1: jne 0x132bd3; add byte ptr [eax], al; xor esi, esi; mov edx, ebx; mov ebx, 0xe; call dword ptr gs:[0x10]; 
0x0013308b: jne 0x13308d; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001335a9: jne 0x1335d1; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x001337a0: jne 0x1337a2; add byte ptr [eax], al; xor esi, esi; or dh, 1; mov ebx, 0x18; call dword ptr gs:[0x10]; 
0x00133e68: jne 0x133ea2; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; mov edx, 0x40; call dword ptr gs:[0x10]; 
0x001359ba: jne 0x1359c8; mov eax, edx; pop ebx; pop esi; ret; 
0x00135a35: jne 0x135a40; mov eax, edx; pop ebx; pop esi; ret; 
0x00135c29: jne 0x135c30; mov eax, edx; pop ebx; pop esi; ret; 
0x0013627e: jne 0x136288; mov eax, edx; pop ebx; pop esi; ret; 
0x001362de: jne 0x1362e8; mov eax, edx; pop ebx; pop esi; ret; 
0x001364c9: jne 0x1364d0; mov eax, edx; pop ebx; pop esi; ret; 
0x00136d4c: jne 0x136d58; add esp, 4; pop ebx; pop esi; ret; 
0x00137ac3: jne 0x137aaf; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x001397b5: jne 0x13976b; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x00139cb2: jne 0x139c58; push ebx; call dword ptr [esi + 0x14]; 
0x0013a5fe: jne 0x13a630; pop ebx; pop esi; pop edi; ret; 
0x0013a7d6: jne 0x13a7c4; add esp, 4; pop ebx; pop esi; ret; 
0x0013b8ba: jne 0x13b840; mov dword ptr [ebp - 0x74], eax; push ebx; push 0; push 0x1000002; call edx; 
0x0013be1a: jne 0x13be10; mov eax, dword ptr [eax + 0x18]; ret; 
0x0013beed: jne 0x13bed5; mov edx, dword ptr [edx + 0x14]; xor eax, eax; test edx, edx; sete al; ret; 
0x0013becd: jne 0x13bee0; mov ecx, dword ptr [edx]; test ecx, ecx; je 0x13bee8; ret; 
0x0013d050: jne 0x13d060; pop ebx; pop esi; pop edi; ret; 
0x0013d589: jne 0x13d595; add esp, 0x2c; ret; 
0x0013e126: jne 0x13e11c; jmp dword ptr [esi - 0x70]; 
0x0013e3b3: jne 0x13e3a0; call 0x13c7f0; lea esi, [esi]; add esp, 8; pop ebx; ret; 
0x0013e48f: jne 0x13e480; mov eax, dword ptr [esp + 0x10]; add esp, 4; pop ebx; pop esi; ret; 
0x0013e624: jne 0x13e5de; mov eax, dword ptr [esp + 0x10]; pop ebx; pop esi; pop edi; ret; 
0x0013e7c9: jne 0x13e7d5; add esp, 0x2c; ret; 
0x0013f8ef: jne 0x13f95a; add esp, 0x14; pop ebx; pop esi; ret; 
0x00140440: jne 0x140463; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0014156d: jne 0x141580; shr eax, 3; sub eax, 1; mov byte ptr [edx + 1], al; mov eax, 2; ret; 
0x001416ed: jne 0x141700; mov eax, ebx; pop ebx; ret; 
0x00141b8a: jne 0x141bc0; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00141fa1: jne 0x141fa9; movzx eax, byte ptr [edx + 1]; shr eax, 1; ret; 
0x00142065: jne 0x1420ab; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00148ad3: jne 0x148b13; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x00148ce6: jne 0x148cf4; add esp, 0x18; pop ebx; ret; 
0x00148d2e: jne 0x148d34; add esp, 0x1c; ret; 
0x00148d7d: jne 0x148d83; add esp, 0x1c; ret; 
0x0014a74b: jne 0x14a757; add esp, 0x810; pop ebx; pop esi; pop edi; ret; 
0x0014aa2a: jne 0x14aa36; add esp, 0x110; pop ebx; pop esi; pop edi; ret; 
0x0014abbe: jne 0x14ab88; mov eax, 1; pop ebx; ret; 
0x0014ac62: jne 0x14aca4; add esp, 0x118; pop ebx; ret; 
0x0014ad02: jne 0x14ad60; add esp, 0x118; pop ebx; ret; 
0x0014adc2: jne 0x14ae0b; add esp, 0x118; pop ebx; ret; 
0x0014ae62: jne 0x14ae8d; add esp, 0x11c; ret; 
0x0014b387: jne 0x14b3cc; add esp, 0x1c; ret; 
0x0014bff1: jne 0x14c000; pop ebx; pop esi; pop edi; ret; 
0x0014c037: jne 0x14c020; pop ebx; pop esi; pop edi; ret; 
0x0014ef5a: jne 0x14ef63; movzx eax, ax; add esp, 0x2c; ret; 
0x00152060: jne 0x152070; add esp, 4; pop ebx; pop esi; ret; 
0x00152b2a: jne 0x152b20; ret; 
0x00152b1a: jne 0x152b27; ret; 
0x00153173: jne 0x153120; mov edx, 1; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0015364a: jne 0x153651; add esp, 0x28; pop ebx; ret; 
0x001563b2: jne 0x1563a0; add esp, 8; pop ebx; ret; 
0x00156b34: jne 0x156b00; pop ebx; pop esi; ret; 
0x001570b8: jne 0x1570be; add esp, 0x1c; ret; 
0x00157214: jne 0x157220; mov eax, ecx; ret; 
0x001577c3: jne 0x1577f0; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x0015c80d: jne 0x15c800; mov edx, dword ptr [edx + 8]; pop ebx; pop esi; mov eax, edx; ret; 
0x0015d8b1: jne 0x15d912; stc; call dword ptr [eax + 0x55]; 
0x0016010d: jne 0x1600f0; pop ebx; pop esi; pop edi; ret; 
0x00162ce6: jne 0x162cd0; add esp, 4; pop ebx; pop esi; ret; 
0x00165087: jne 0x165015; std; jmp dword ptr [esi - 0x70]; 
0x0016ebe1: jne 0x16ebea; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0016ec69: jne 0x16ec78; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0016f42f: jne 0x16f436; add esp, 0x28; pop ebx; ret; 
0x0016f609: jne 0x16f628; sub esp, 0xc; mov eax, dword ptr [ebx + 4]; push ebx; call dword ptr [eax + 0x10]; 
0x0016f6a4: jne 0x16f743; add esp, 0x34; pop ebx; pop esi; ret; 
0x0016f7dc: jne 0x16f810; sub esp, 0xc; mov eax, dword ptr [ebx + 4]; push ebx; call dword ptr [eax + 0x10]; 
0x0016f87d: jne 0x16f890; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0016fa14: jne 0x16fa49; add esp, 0x14; pop ebx; pop esi; ret; 
0x001703c2: jne 0x1703d0; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0017040d: jne 0x170420; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x001704cd: jne 0x1704d8; add esp, 4; pop ebx; pop esi; ret; 
0x00170549: jne 0x170558; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x001706b5: jne 0x1706d8; mov dword ptr [eax], 0; pop ebx; ret; 
0x00170803: jne 0x170940; sub esp, 8; mov eax, dword ptr [edi + 4]; push 0x20; push edi; call dword ptr [eax + 0x18]; 
0x001714a6: jne 0x1714b8; xor edx, edx; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00171967: jne 0x171996; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x001719f2: jne 0x171a26; add esp, 0x14; pop ebx; pop esi; ret; 
0x001720d7: jne 0x1720e8; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00172359: jne 0x17236f; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x00172bd2: jne 0x172bc0; pop ebx; ret; 
0x00172ce6: jne 0x172cf0; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00172d89: jne 0x172d98; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0017449c: jne 0x174421; les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x001752dd: jne 0x175356; add esp, 0x18; pop ebx; ret; 
0x001775b5: jne 0x177607; push edi; call dword ptr [eax + 0x14]; 
0x001782c6: jne 0x178367; add esp, 0xa0; pop ebx; pop esi; pop edi; ret; 
0x00178496: jne 0x1784a7; add esp, 0x1c; ret; 
0x00178514: jne 0x17852c; add esp, 0x74; pop ebx; pop edi; ret; 
0x001785c2: jne 0x1785d7; add esp, 0x28; pop ebx; ret; 
0x00178662: jne 0x178677; add esp, 0x28; pop ebx; ret; 
0x00178722: jne 0x178767; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x00178812: jne 0x178857; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0017892e: jne 0x17893e; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00178999: jne 0x1789b0; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x1789b7; add esp, 0x1c; ret; 
0x001789a6: jne 0x1789b7; add esp, 0x1c; ret; 
0x00178a29: jne 0x178a37; add esp, 0x18; pop ebx; ret; 
0x00178b1f: jne 0x178b9a; add esp, 0x110; pop ebx; pop esi; pop edi; ret; 
0x00178f41: jne 0x178f63; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x001798cc: jne 0x1798d2; add esp, 0x4c; ret; 
0x0017993c: jne 0x179942; add esp, 0x4c; ret; 
0x001799ac: jne 0x1799b2; add esp, 0x4c; ret; 
0x00179a1c: jne 0x179a22; add esp, 0x4c; ret; 
0x00179a7f: jne 0x179a85; add esp, 0x4c; ret; 
0x00179adf: jne 0x179ae5; add esp, 0x4c; ret; 
0x00179b4c: jne 0x179b52; add esp, 0x4c; ret; 
0x00179bcc: jne 0x179bd2; add esp, 0x4c; ret; 
0x00179fc1: jne 0x179fcc; add esp, 0x94; pop ebx; pop edi; ret; 
0x0017a0bd: jne 0x17a0c3; add esp, 0x1c; ret; 
0x0017a10c: jne 0x17a13c; add esp, 0x1c; ret; 
0x0017a189: jne 0x17a170; add esp, 8; pop ebx; ret; 
0x0017a413: jne 0x17a420; mov dword ptr [ebx], 0; pop ebx; pop esi; pop edi; ret; 
0x0017b8a6: jne 0x17b8ac; add esp, 0x2c; ret; 
0x0017b958: jne 0x17b9b9; add esp, 0x18; pop ebx; ret; 
0x0017ba48: jne 0x17baa9; add esp, 0x18; pop ebx; ret; 
0x0017baea: jne 0x17bb9e; add esp, 0x14; mov eax, edx; pop ebx; pop esi; ret; 
0x0017bbea: jne 0x17bc9e; add esp, 0x14; mov eax, edx; pop ebx; pop esi; ret; 
0x0017bd1f: jne 0x17bd5c; add esp, 0x18; pop ebx; ret; 
0x0017bdbf: jne 0x17bdfc; add esp, 0x18; pop ebx; ret; 
0x0017be7d: jne 0x17be9b; add esp, 0x18; pop ebx; ret; 
0x0017bf01: jne 0x17bf37; add esp, 0x18; pop ebx; ret; 
0x0017bf95: jne 0x17bfd4; add esp, 0x18; pop ebx; ret; 
0x0017c530: jne 0x17c5af; add esp, 0x14; pop ebx; pop esi; ret; 
0x0017c62c: jne 0x17c69c; add esp, 0x14; pop ebx; pop esi; ret; 
0x0017c7cf: jne 0x17c80c; add esp, 0x18; pop ebx; ret; 
0x0017c86f: jne 0x17c8ac; add esp, 0x18; pop ebx; ret; 
0x0017c90f: jne 0x17c94c; add esp, 0x18; pop ebx; ret; 
0x0017c9af: jne 0x17c9ec; add esp, 0x18; pop ebx; ret; 
0x0017cd9e: jne 0x17cdc1; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0017cff3: jne 0x17cffb; add esp, 0x54; pop ebx; pop esi; ret; 
0x0017d022: jne 0x17d030; add esp, 0xc; ret; 
0x0017d0a6: jne 0x17d0af; movzx eax, al; add esp, 0x1c; ret; 
0x0017d106: jne 0x17d10f; movzx eax, al; add esp, 0x1c; ret; 
0x0017d170: jne 0x17d177; add esp, 0x18; pop ebx; ret; 
0x0017d192: jne 0x17d1a0; add esp, 0xc; ret; 
0x0017d220: jne 0x17d227; add esp, 0x18; pop ebx; ret; 
0x0017dbc0: jne 0x17dbc9; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0017e3c0: jne 0x17e3c9; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0017f687: jne 0x17f66f; sti; jmp dword ptr [esi - 0x70]; 
0x00181f4e: jne 0x181f83; add esp, 0x514; mov eax, esi; pop ebx; pop esi; ret; 
0x001824db: jne 0x182514; add esp, 0x18; pop ebx; ret; 
0x00182762: jne 0x182794; add esp, 0x14; pop ebx; pop esi; ret; 
0x001827f2: jne 0x182824; add esp, 0x14; pop ebx; pop esi; ret; 
0x001840b5: jne 0x1840c9; add esp, 0x18; pop ebx; ret; 
0x0018412f: jne 0x184149; add esp, 0x18; pop ebx; ret; 
0x00184cd6: jne 0x184d15; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x0018526d: jne 0x185260; mov edx, dword ptr [ecx]; add edx, dword ptr [eax + 8]; mov dword ptr [ebx + 0xc], edx; pop ebx; ret; 
0x001859a5: jne 0x185a50; pop ebx; pop esi; pop edi; ret; 
0x001863c9: jne 0x18636b; push 0x28; push edi; call eax; 
0x001864be: jne 0x1864ee; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x0018670b: jne 0x186708; jmp dword ptr [esi - 0x70]; 
0x001866df: jne 0x186709; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x00186766: jne 0x1867ac; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x00186f31: jne 0x186f38; add esp, 0x28; pop ebx; ret; 
0x00187336: jne 0x1873e8; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0018820d: jne 0x18820f; push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x00188748: jne 0x188750; pop ebx; ret; 
0x00188770: jne 0x188778; ret; 
0x001887ac: jne 0x1887b8; add esp, 4; pop ebx; pop esi; ret; 
0x00188abb: jne 0x188ac8; add esp, 8; pop ebx; ret; 
0x00189835: jne 0x18983c; add esp, 0x18; pop ebx; ret; 
0x001898f2: jne 0x189916; mov eax, 4; add esp, 0xc; ret; 
0x00189da4: jne 0x189db0; add esp, 8; pop ebx; ret; 
0x0018b6c0: jne 0x18b6d0; add esp, 8; pop ebx; ret; 
0x0018c6cd: jne 0x18c6d3; add esp, 0x1c; ret; 
0x0019245f: jne 0x192468; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x001927d8: jne 0x1927f7; add esp, 0x18; pop ebx; ret; 
0x00192873: jne 0x19287b; add esp, 0x14; pop ebx; pop esi; ret; 
0x001928ed: jne 0x1928f5; add esp, 0x14; pop ebx; pop esi; ret; 
0x00192a0b: jne 0x192a0d; add byte ptr [eax], al; mov ebx, 3; call dword ptr gs:[0x10]; 
0x00192b4f: jne 0x192b55; add esp, 0x2c; ret; 
0x0019f2ee: jne 0x19f360; movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x001a0d97: jne 0x1a0bf0; pop ebp; xor eax, eax; ret; 
0x001a5e0c: jne 0x1a5e20; pop esi; pop ebp; pop ebx; xor eax, eax; ret; 
0x001a67f7: jne 0x1a6f70; pop ebx; ret; 
0x001a6630: jne 0x1a6f86; pop ebx; ret; 
0x001a7f6f: jne 0x1a81b0; pop ebx; ret; 
0x001a9629: jne 0x1a9850; pop ebx; ret; 
0x001a96e6: jne 0x1a9870; pop ebx; ret; 
0x001a9aea: jne 0x1a9ae2; ret 0x7504; 
0x001a9ae9: jne 0x1a9b60; test dl, 4; jne 0x1a9b64; add eax, 3; ret; 
0x001a9aee: jne 0x1a9b64; add eax, 3; ret; 
0x001a9b08: jne 0x1a9b70; test dl, 0x40; jne 0x1a9b74; add eax, 7; ret; 
0x001a9b0d: jne 0x1a9b74; add eax, 7; ret; 
0x001a9b2f: jne 0x1a9b80; test dh, 4; jne 0x1a9b84; add eax, 0xb; ret; 
0x001a9b34: jne 0x1a9b84; add eax, 0xb; ret; 
0x001a9b48: jne 0x1a9b90; test dh, 0x40; jne 0x1a9b94; add eax, 0xf; ret; 
0x001a9b4d: jne 0x1a9b94; add eax, 0xf; ret; 
0x001a9e1e: jne 0x1a9ee0; test al, 0x40; jne 0x1a9ef0; lea eax, [edi + 7]; pop edi; ret; 
0x001a9e26: jne 0x1a9ef0; lea eax, [edi + 7]; pop edi; ret; 
0x001a9cee: jne 0x1a9ef0; test dl, 0x40; jne 0x1a9f70; lea eax, [edi + 7]; pop edi; ret; 
0x001a9e79: jne 0x1a9f60; lea eax, [edi + 0xf]; pop edi; ret; 
0x001a9de0: jne 0x1a9f70; lea eax, [edi + 0xb]; pop edi; ret; 
0x001a9d9a: jne 0x1a9f70; lea eax, [edi + 0xf]; pop edi; ret; 
0x001a9d3d: jne 0x1a9f70; lea eax, [edi + 3]; pop edi; ret; 
0x001a9cf7: jne 0x1a9f70; lea eax, [edi + 7]; pop edi; ret; 
0x001aa43d: jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x001aa2bd: jne 0x1aa340; lea eax, [edi - 0x10]; pop edi; ret; 
0x001aa2e2: jne 0x1aa370; lea eax, [edi - 0xc]; pop edi; ret; 
0x001aa30c: jne 0x1aa3a0; lea eax, [edi - 8]; pop edi; ret; 
0x001aa335: jne 0x1aa3d0; lea eax, [edi - 4]; pop edi; ret; 
0x001aa434: jne 0x1aa510; and eax, 0xf; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x001aa7bf: jne 0x1aa8e0; lea eax, [edi + 3]; pop edi; ret; 
0x001aa7e2: jne 0x1aa910; lea eax, [edi + 7]; pop edi; ret; 
0x001aa803: jne 0x1aa930; test ah, 4; jne 0x1aa940; lea eax, [edi + 0xb]; pop edi; ret; 
0x001aa80c: jne 0x1aa940; lea eax, [edi + 0xb]; pop edi; ret; 
0x001aa82c: jne 0x1aa960; test ah, 0x40; jne 0x1aa970; lea eax, [edi + 0xf]; pop edi; ret; 
0x001aa835: jne 0x1aa970; lea eax, [edi + 0xf]; pop edi; ret; 
0x001aa8b2: jne 0x1aa980; xor eax, eax; pop edi; ret; 
0x001aa9a1: jne 0x1aaa70; sub edx, 4; jb 0x1aab10; lea eax, [edi + 3]; pop edi; ret; 
0x001aa9d2: jne 0x1aaaa0; sub edx, 8; jb 0x1aab10; lea eax, [edi + 7]; pop edi; ret; 
0x001aaa0c: jne 0x1aaad0; sub edx, 0xc; jb 0x1aab10; lea eax, [edi + 0xb]; pop edi; ret; 
0x001ab1fa: jne 0x1aae20; xor eax, eax; ret; 
0x001aacdd: jne 0x1aaec0; mov eax, ecx; ret; 
0x001aacd5: jne 0x1aaed0; test al, 2; jne 0x1aaec0; mov eax, ecx; ret; 
0x001aae62: jne 0x1aaef0; lea eax, [ecx + 4]; ret; 
0x001aae5a: jne 0x1aaf00; test al, 0x20; jne 0x1aaef0; lea eax, [ecx + 4]; ret; 
0x001aae8c: jne 0x1aaf20; lea eax, [ecx + 8]; ret; 
0x001aaeb5: jne 0x1aaf50; lea eax, [ecx + 0xc]; ret; 
0x001aad4a: jne 0x1aaf80; xor eax, eax; ret; 
0x001aad89: jne 0x1ab000; xor eax, eax; ret; 
0x001aafa8: jne 0x1ab110; add edx, 0; jl 0x1ab1d0; mov eax, ecx; ret; 
0x001ab092: jne 0x1ab140; add edx, 4; jl 0x1ab1d0; lea eax, [ecx + 4]; ret; 
0x001ab0cb: jne 0x1ab170; add edx, 8; jl 0x1ab1d0; lea eax, [ecx + 8]; ret; 
0x001ab0f5: jne 0x1ab1a0; add edx, 0xc; jl 0x1ab1d0; lea eax, [ecx + 0xc]; ret; 
0x001ab487: jne 0x1ab520; test al, 4; jne 0x1ab530; lea eax, [edx + 3]; ret; 
0x001ab48f: jne 0x1ab530; lea eax, [edx + 3]; ret; 
0x001ab4aa: jne 0x1ab550; test al, 0x40; jne 0x1ab560; lea eax, [edx + 7]; ret; 
0x001ab4b2: jne 0x1ab560; lea eax, [edx + 7]; ret; 
0x001ab4d3: jne 0x1ab580; test ah, 4; jne 0x1ab590; lea eax, [edx + 0xb]; ret; 
0x001ab4dc: jne 0x1ab590; lea eax, [edx + 0xb]; ret; 
0x001ab4fc: jne 0x1ab5b0; test ah, 0x40; jne 0x1ab5c0; lea eax, [edx + 0xf]; ret; 
0x001ab505: jne 0x1ab5c0; lea eax, [edx + 0xf]; ret; 
0x001ab9a0: jne 0x1ab9b0; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x001ab9d2: jne 0x1aba90; sub edi, 4; jb 0x1abb30; lea eax, [eax + 3]; pop edi; ret; 
0x001ab8bf: jne 0x1abc85; add eax, 3; pop edi; ret; 
0x001ab8e5: jne 0x1abc99; add eax, 7; pop edi; ret; 
0x001ab903: jne 0x1abca8; test dh, 4; jne 0x1abcad; add eax, 0xb; pop edi; ret; 
0x001ab90c: jne 0x1abcad; add eax, 0xb; pop edi; ret; 
0x001ab935: jne 0x1abcc1; add eax, 0xf; pop edi; ret; 
0x001ac177: jne 0x1ac1c0; pop edi; pop esi; pop ebx; ret; 
0x001ac2a8: jne 0x1ac2b0; pop ebx; ret; 
0x001ac35c: jne 0x1ac420; test dl, 0xf; jne 0x1ac4a0; lea eax, [ecx + 4]; ret; 
0x001ac437: jne 0x1ac450; test dh, 0xf; jne 0x1ac4a0; lea eax, [ecx + 0xc]; ret; 
0x001ac466: jne 0x1ac480; lea eax, [ecx + 4]; ret; 
0x001ac473: jne 0x1ac490; lea eax, [ecx + 0xc]; ret; 
0x001ac43c: jne 0x1ac4a0; lea eax, [ecx + 0xc]; ret; 
0x001ac365: jne 0x1ac4a0; lea eax, [ecx + 4]; ret; 
0x001ac5f7: jne 0x1ac6b0; lea eax, [edi - 0x10]; pop edi; ret; 
0x001ac5ef: jne 0x1ac6c0; test al, 0xf0; jne 0x1ac6b0; lea eax, [edi - 0x10]; pop edi; ret; 
0x001ac693: jne 0x1ac6d0; test al, 0xf0; jne 0x1ac6b0; lea eax, [edi - 0x10]; pop edi; ret; 
0x001ac6c3: jne 0x1ac6e0; lea eax, [edi - 8]; pop edi; ret; 
0x001acd1b: jne 0x1acd50; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x001acd33: jne 0x1acd60; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x0002440f: jne 0x243dd; call dword ptr [ebp - 0x38]; 
0x000a6e3d: jne 0x24442; pop ebx; pop esi; pop edi; ret; 
0x001898de: jne 0x24a3d; mov eax, 8; add esp, 0xc; ret; 
0x00024b23: jne 0x24af2; ret; 
0x00024b5b: jne 0x24b50; ret; 
0x00025541: jne 0x25547; add esp, 0x1c; ret; 
0x000255e1: jne 0x25616; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0002603f: jne 0x26024; add esp, 4; pop ebx; pop esi; ret; 
0x0002f7d0: jne 0x2f802; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00033fb8: jne 0x33fc0; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00034e14: jne 0x34e20; mov eax, edx; add esp, 0xc; ret; 
0x00034e54: jne 0x34e60; mov eax, edx; add esp, 0xc; ret; 
0x0003680f: jne 0x367e0; pop ebx; pop esi; pop edi; ret; 
0x00037e9c: jne 0x37e97; dec dword ptr [ecx - 0x48f0f7b0]; xchg ebx, eax; and byte ptr [ebp - 7], dh; jmp dword ptr [esi - 0x77]; 
0x00037ea6: jne 0x37ea1; jmp dword ptr [esi - 0x77]; 
0x00038676: jne 0x38671; call dword ptr [edx - 0x77]; 
0x00039d61: jne 0x39d40; ret; 
0x0003ad7d: jne 0x3ad87; mov eax, edx; add esp, 0x1c; ret 4; 
0x0003b926: jne 0x3b930; fadd st(0); add esp, 0x18; pop ebx; ret; 
0x0003bcc5: jne 0x3bcd0; fadd st(0); add esp, 0x18; pop ebx; ret; 
0x0003bff1: jne 0x3c000; fadd st(0); add esp, 8; pop ebx; ret; 
0x0003c2ec: jne 0x3c2f3; add esp, 0x18; pop ebx; ret; 
0x0003c352: jne 0x3c360; mov dword ptr [ebx + 0x18], eax; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0003c637: jne 0x3c642; add esp, 0x124; pop ebx; pop esi; ret; 
0x0003c67a: jne 0x3c688; add esp, 8; pop ebx; ret; 
0x0003c929: jne 0x3c930; add esp, 8; pop ebx; ret; 
0x0003c9ec: jne 0x3ca10; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xb3; mov ecx, 8; call dword ptr gs:[0x10]; 
0x0003cb8d: jne 0x3cb98; add esp, 0x114; pop ebx; pop edi; ret; 
0x0003cc0d: jne 0x3cc18; add esp, 0x114; pop ebx; pop edi; ret; 
0x0003cc7a: jne 0x3ccbe; add esp, 0x94; pop ebx; pop edi; ret; 
0x0003cd21: jne 0x3cd2c; add esp, 0x94; pop ebx; pop edi; ret; 
0x0003cd9f: jne 0x3cdb7; add esp, 0x98; pop ebx; ret; 
0x0003cf44: jne 0x3cf7c; add esp, 0x28; pop ebx; ret; 
0x0003d357: jne 0x3d361; add esp, 0x128; pop ebx; ret; 
0x0003d38c: jne 0x3d390; mov edx, dword ptr [eax]; xor eax, eax; test edx, edx; sete al; ret; 
0x0003d7fc: jne 0x3d804; add esp, 0x24; pop ebx; pop esi; ret; 
0x0003d957: jne 0x3d96f; add esp, 0x98; pop ebx; ret; 
0x0003d9d7: jne 0x3d9ef; add esp, 0x98; pop ebx; ret; 
0x0003da60: jne 0x3da69; add esp, 0x9c; ret; 
0x0003dbd3: jne 0x3dbe7; add esp, 0x220; pop ebx; pop esi; pop edi; ret; 
0x0003dc31: jne 0x3dc0f; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0003dc62: jne 0x3dc5d; call dword ptr [eax - 0x18]; 
0x0003df2e: jne 0x3df34; add esp, 0x1c; ret; 
0x0003eab5: jne 0x3eab0; call dword ptr [eax - 0x73]; 
0x0003eff0: jne 0x3eff6; add esp, 0x1c; ret; 
0x0003f103: jne 0x3f109; add esp, 0x1c; ret; 
0x0004020e: jne 0x401f4; add esp, 4; pop ebx; pop esi; ret; 
0x000403fd: jne 0x40428; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x163; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x000405f3: jne 0x405f9; add esp, 0x1c; ret; 
0x00040820: jne 0x40826; add esp, 0x1c; ret; 
0x000408f1: jne 0x40900; add esp, 4; pop ebx; pop esi; ret; 
0x000409de: jne 0x409e4; add esp, 0x2c; ret; 
0x00040af0: jne 0x40af6; add esp, 0x1c; ret; 
0x00040b73: jne 0x40b79; add esp, 0x1c; ret; 
0x00041b71: jne 0x41bac; add esp, 0x18; pop ebx; ret; 
0x0004314e: jne 0x43160; bsr ecx, ecx; xor ecx, 0x1f; lea eax, [ecx + 0x20]; pop ebx; ret; 
0x0004321a: jne 0x43230; bsr ebx, ebx; xor ebx, 0x1f; lea eax, [ebx + 0x20]; pop ebx; ret; 
0x0005339b: jne 0x533fc; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0005349e: jne 0x534a4; add esp, 0x2c; ret; 
0x000535bb: jne 0x535b0; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0005368f: jne 0x53640; sbb eax, eax; neg eax; pop esi; pop edi; ret; 
0x0005377e: jne 0x53770; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x00053c2d: jne 0x53c20; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x00053c55: jne 0x53c40; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x00053d2d: jne 0x53d20; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x00053d55: jne 0x53d40; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x00054ecf: jne 0x54e80; sbb eax, eax; neg eax; pop esi; pop edi; ret; 
0x00055772: jne 0x5577d; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x00055800: jne 0x5580b; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x00059dc9: jne 0x59dd4; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x0005ab5c: jne 0x5ab7b; add esp, 0x434; pop ebx; pop esi; ret; 
0x0005acc7: jne 0x5ace0; test eax, eax; jne 0x5ace4; mov dword ptr [edx + 8], 0; mov dword ptr [edx], 0; ret; 
0x0005accb: jne 0x5ace4; mov dword ptr [edx + 8], 0; mov dword ptr [edx], 0; ret; 
0x0005adac: jne 0x5adbf; add esp, 0x1c; ret; 
0x0005b4fd: jne 0x5b522; mov dword ptr [edx + 4], ecx; pop ebx; pop esi; pop edi; ret; 
0x0005f679: jne 0x5f68e; add esp, 0x78; pop ebx; ret; 
0x000615c0: jne 0x615ca; add esp, 0x1018; pop ebx; ret; 
0x00061647: jne 0x6164e; add esp, 0x78; pop ebx; ret; 
0x00061f59: jne 0x61f68; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x00078e76: jne 0x78e9b; mov dword ptr [edx + 4], ecx; pop ebx; pop esi; pop edi; ret; 
0x0007c44a: jne 0x7c454; push esi; call dword ptr [ebx + 0x1c]; 
0x0007cba1: jne 0x7cbab; push esi; call dword ptr [ebx + 0x1c]; 
0x0007d5de: jne 0x7d600; test eax, eax; jne 0x7d604; mov dword ptr [edx + 0x1a48], 0; mov dword ptr [edx + 0x1a40], 0; ret; 
0x0007d5e2: jne 0x7d604; mov dword ptr [edx + 0x1a48], 0; mov dword ptr [edx + 0x1a40], 0; ret; 
0x0007de17: jne 0x7de21; push edx; call dword ptr [ebx + 0x1c]; 
0x0007e519: jne 0x7e4ff; push esi; call dword ptr [eax + 0x2c]; 
0x0007e5aa: jne 0x7e590; push esi; call dword ptr [eax + 0x2c]; 
0x0007e755: jne 0x7e763; push esi; call dword ptr [ebx + 0x2c]; 
0x0007e752: jne 0x7e768; push dword ptr [ebp + 0xc]; push esi; call dword ptr [ebx + 0x2c]; 
0x0007eadc: jne 0x7eb2e; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0007ebbb: jne 0x7ebc3; add esp, 0x24; pop ebx; pop esi; ret; 
0x0007f8fd: jne 0x7f907; push esi; call dword ptr [eax + 0x1c]; 
0x000805f5: jne 0x8060c; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00080a4c: jne 0x80a40; ret; 
0x00080f63: jne 0x80fc8; sub esp, 0xc; mov eax, dword ptr [eax + 0x88]; push esi; call dword ptr [eax + 0x34]; 
0x000811e7: jne 0x81179; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x00081337: jne 0x812c9; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x000906c0: jne 0x83247c98; pushal; or dh, bh; xor eax, eax; ret; 
0x00083f2f: jne 0x83f40; mov ecx, dword ptr [edx + 0x28]; cmp dword ptr [edx + 0x24], ecx; cmove eax, ecx; ret; 
0x00083ffe: jne 0x83fd4; push edx; push ebx; push esi; call eax; 
0x00085956: jne 0x8596f; add esp, 0x824; pop ebx; pop esi; ret; 
0x00085b4d: jne 0x85b6c; add esp, 0xa0; pop ebx; pop esi; pop edi; ret; 
0x00085c28: jne 0x85c44; add esp, 0xa0; pop ebx; pop esi; pop edi; ret; 
0x00087516: jne 0x8752c; add esp, 0x28; pop ebx; ret; 
0x000878c6: jne 0x878d0; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00088c80: jne 0x88c90; add esp, 8; pop ebx; ret; 
0x0008a86b: jne 0x8a870; ret; 
0x0008abcc: jne 0x8abc0; ret; 
0x0008b9ac: jne 0x8b9a0; ret; 
0x0008bc1a: jne 0x8bc48; add esp, 4; pop ebx; pop esi; ret; 
0x0008c429: jne 0x8c410; add esp, 4; pop ebx; pop esi; ret; 
0x0008c94a: jne 0x8c940; mov eax, dword ptr [eax]; mov dword ptr [ecx], eax; ret; 
0x0008c933: jne 0x8c948; ret; 
0x0008c996: jne 0x8c9a8; sub edx, dword ptr [eax + 0xc]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x0008cd23: jne 0x8cd60; mov dword ptr [ebx + 0x1a7c], esi; add esp, 4; pop ebx; pop esi; ret; 
0x0008deaa: jne 0x8deb2; add esp, 0x24; pop ebx; pop esi; ret; 
0x0008e013: jne 0x8e05d; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x0008e181: jne 0x8e1c5; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x0008e6cd: jne 0x8e69d; mov ebp, 0xf0; mov ecx, 0x80; xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x0008e823: jne 0x8e830; ret; 
0x0008ea18: jne 0x8ea20; add esp, 0x14; pop ebx; pop esi; ret; 
0x0008ea9b: jne 0x8eae0; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0008eb7b: jne 0x8ebc0; xor eax, eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x0008ecbf: jne 0x8ecd0; xend; xor eax, eax; add esp, 0xc; ret; 
0x0008f8df: jne 0x8f881; mov edx, 0xfffffffe; xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x000906c3: jne 0x906e0; and dword ptr [eax + 8], 0xfffffffe; xor eax, eax; ret; 
0x00090d43: jne 0x90e6c; add esp, 0x94; pop ebx; pop esi; ret; 
0x00090fcc: jne 0x90feb; add esp, 0x24; pop ebx; pop esi; ret; 
0x00092771: jne 0x92777; add esp, 0x2c; ret; 
0x00092831: jne 0x9283a; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00092bd3: jne 0x92bf7; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x00093995: jne 0x93536; lea ecx, [ebp + 0x220]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x00093d53: jne 0x93536; mov eax, 0x9d; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x00094169: jne 0x94178; xor eax, eax; add esp, 0xc; ret; 
0x00094160: jne 0x94199; test byte ptr [edx + 0x80], 0x10; jne 0x94178; xor eax, eax; add esp, 0xc; ret; 
0x00094b58: jne 0x94b60; mov eax, edx; pop ebx; pop esi; ret; 
0x00094e36: jne 0x94e40; xor eax, eax; pop ebx; ret; 
0x00095902: jne 0x95908; add dword ptr [edx + 4], 1; add esp, 0xc; ret; 
0x00095a33: jne 0x95a3b; add esp, 0x14; pop ebx; pop esi; ret; 
0x00095a5c: jne 0x95a6a; mov edx, dword ptr gs:[0x68]; mov dword ptr [eax + 8], edx; xor edx, edx; mov eax, edx; ret; 
0x0009725d: jne 0x97264; add esp, 0x28; pop ebx; ret; 
0x000972ed: jne 0x972f3; add esp, 0x2c; ret; 
0x0009805e: jne 0x98070; and dword ptr [eax], 0x7fffffff; xor eax, eax; ret; 
0x000980a3: jne 0x980c0; or dword ptr [eax], 0x40000000; xor eax, eax; ret; 
0x000981f9: jne 0x98240; test al, 1; je 0x98240; mov eax, 0xf0; mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x000985a1: jne 0x985a7; add esp, 0x2c; ret; 
0x00098a11: jne 0x98a17; add esp, 0x2c; ret; 
0x00098f2d: jne 0x98f33; add esp, 0x2c; ret; 
0x0009937d: jne 0x99383; add esp, 0x2c; ret; 
0x000993d6: jne 0x993e0; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00099496: jne 0x9946a; mov eax, 0x10; pop ebx; ret; 
0x0009a429: jne 0x9a470; mov ecx, esi; mov ebx, dword ptr [esp + 0xa0]; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x0009a464: jne 0x9a48f; add esp, 0x90; pop ebx; pop esi; pop edi; ret; 
0x0009a597: jne 0x9a5a0; xor eax, eax; ret; 
0x0009a6a0: jne 0x9a6b9; add esp, 0x24; pop ebx; pop esi; ret; 
0x0009a8c9: jne 0x9a8d0; xor eax, eax; pop ebx; pop esi; ret; 
0x0009a972: jne 0x9a9ab; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0009b608: jne 0x9b618; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0009b6bd: jne 0x9b6f3; add esp, 0x24; pop ebx; pop esi; ret; 
0x0009b75e: jne 0x9b7ab; add esp, 0x124; pop ebx; pop esi; ret; 
0x0009b950: jne 0x9b960; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0009b993: jne 0x9b986; xor eax, eax; pop ebx; ret; 
0x0009b9e1: jne 0x9b9f0; xor eax, eax; pop ebx; ret; 
0x0009c24a: jne 0x9c297; add esp, 0x38; pop ebx; ret; 
0x0009c4d8: jne 0x9c4f7; add esp, 0x2c; ret; 
0x0009c5de: jne 0x9c617; add esp, 0x14; pop ebx; pop esi; ret; 
0x0009c744: jne 0x9c767; add esp, 0x2c; ret; 
0x0009c9a4: jne 0x9c9c7; add esp, 0x18; pop ebx; ret; 
0x0009cb23: jne 0x9cb72; add esp, 0x124; pop ebx; pop esi; ret; 
0x0009cbde: jne 0x9cc2b; add esp, 0x124; pop ebx; pop esi; ret; 
0x0009cf4f: jne 0x9cf40; mov dword ptr [ecx + 0x10], eax; mov dword ptr [esi + 0x10], ecx; pop ebx; pop esi; ret; 
0x0009d69c: jne 0x9d690; pop ebx; ret; 
0x0009d6ba: jne 0x9d6c7; ret; 
0x0009dff0: jne 0x9df90; mov edx, 1; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0009e75a: jne 0x9e761; add esp, 0x28; pop ebx; ret; 
0x0009f2e1: jne 0x9f2ed; add esp, 0x90; pop ebx; pop esi; pop edi; ret; 
0x0009f6d6: jne 0x9f700; add ebx, 1; mov eax, 0x115; call dword ptr gs:[0x10]; 
0x0009fb04: jne 0x9fb0c; add esp, 0x24; pop ebx; pop esi; ret; 
0x0009fdd2: jne 0x9fdd9; add esp, 0x28; pop ebx; ret; 
0x0009fdf7: jne 0x9fe40; add ebx, 1; mov eax, 0x116; call dword ptr gs:[0x10]; 
0x000a028d: jne 0xa032f; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000a0392: jne 0xa0399; add esp, 0x38; pop ebx; ret; 
0x000a0839: jne 0xa0857; add esp, 0xb4; pop ebx; pop esi; ret; 
0x000a0bf7: jne 0xa0c00; add esp, 8; pop ebx; ret; 
0x000a1942: jne 0xa197c; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000a4a8c: jne 0xa4a98; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000a6517: jne 0xa6522; add esp, 0x38; mov eax, ebx; pop ebx; ret 4; 
0x000a6d55: jne 0xa6c89; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax + 0x90]; call dword ptr [eax]; 
0x000a6dcd: jne 0xa6dc0; xor eax, eax; ret; 
0x000a6e28: jne 0xa6e00; sub esp, 0xc; push eax; call edx; 
0x000a6e9b: jne 0xa6e90; mov eax, ecx; ret; 
0x000a7605: jne 0xa7611; add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret 4; 
0x000a7c48: jne 0xa7c30; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000a84a5: jne 0xa84b7; pop ebx; pop esi; pop edi; ret; 
0x000a86bd: jne 0xa86b0; add eax, 1; test dl, dl; mov edx, 0; cmove eax, edx; ret; 
0x000a86aa: jne 0xa86b3; ret; 
0x000a8b34: jne 0xa8b48; lea eax, [edx - 0x96c44]; and ch, 2; lea edx, [edx - 0x17cc74]; cmove eax, edx; ret; 
0x000a8bdc: jne 0xa8bd0; mov eax, edx; pop ebx; ret; 
0x000a9572: jne 0xa9576; lea edx, [edx - 0x17bf34]; cmove eax, edx; ret; 
0x000a95b2: jne 0xa95b6; lea edx, [edx - 0x17bea4]; cmove eax, edx; ret; 
0x000a9624: jne 0xa9638; lea eax, [edx - 0x9e034]; and ch, 2; lea edx, [edx - 0x17d0d4]; cmove eax, edx; ret; 
0x000aa122: jne 0xaa126; lea edx, [edx - 0x17c804]; cmove eax, edx; ret; 
0x000aa2f4: jne 0xaa308; lea eax, [edx - 0xa0ec4]; and ch, 2; lea edx, [edx - 0x17c244]; cmove eax, edx; ret; 
0x000ab4d2: jne 0xab4d6; lea edx, [edx - 0x17c2d4]; cmove eax, edx; ret; 
0x000aba5d: jne 0xaba50; mov eax, edx; pop ebx; ret; 
0x000abaa1: jne 0xaba90; mov eax, edx; pop ebx; pop esi; ret; 
0x000abc01: jne 0xabbf0; mov eax, edx; pop ebx; ret; 
0x000ac2f4: jne 0xac308; lea eax, [edx - 0x9bb24]; and ch, 2; lea edx, [edx - 0x17cfd4]; cmove eax, edx; ret; 
0x000ac342: jne 0xac346; lea edx, [edx - 0x17dec4]; cmove eax, edx; ret; 
0x000ac3c2: jne 0xac3c6; lea edx, [edx - 0x18ed84]; cmove eax, edx; ret; 
0x000ad266: jne 0xad255; or byte ptr [ebx], dl; mov eax, esi; pop ebx; pop esi; ret; 
0x000af735: jne 0xaf720; pop ebx; pop esi; pop edi; ret; 
0x000af7c7: jne 0xaf780; mov dword ptr [eax], esi; pop ebx; pop esi; pop edi; ret; 
0x000afa40: jne 0xafa08; mov dword ptr [eax + 0x1c], esi; pop ebx; pop esi; ret; 
0x000b319c: jne 0xb3800; pop edi; pop ebx; ret; 
0x000b389c: jne 0xb3801; pop ebx; ret; 
0x000b7661: jne 0xb7c50; cmp byte ptr [eax], 1; sbb eax, -1; pop edi; pop ebx; ret; 
0x000b7cec: jne 0xb7c51; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b7e11: jne 0xb7c51; pop ebx; ret; 
0x000b943b: jne 0xb93ab; call 0x189c31; add ecx, 0x1138fa; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9478: jne 0xb9e20; pop edi; pop esi; pop ebx; ret; 
0x000baa7b: jne 0xba9eb; call 0x189c31; add ecx, 0x11241a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000baaba: jne 0xbb520; pop edi; pop esi; pop ebx; ret; 
0x000bb91a: jne 0xbb912; ret 0x7504; 
0x000bdc1a: jne 0xbdc12; ret 0x7504; 
0x000c0a1b: jne 0xc098b; call 0x189c31; add ecx, 0x10c64e; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c14b2: jne 0xc15a0; pmovmskb eax, xmm1; bsf eax, eax; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000c1564: jne 0xc15c0; xor eax, eax; pop edi; ret; 
0x000c152a: jne 0xc15e0; xor eax, eax; pop edi; ret; 
0x000c178a: jne 0xc1840; pmovmskb eax, xmm1; bsr eax, eax; add eax, ecx; ret; 
0x000c17fa: jne 0xc1870; xor eax, eax; ret; 
0x000c1829: jne 0xc1890; xor eax, eax; ret; 
0x000c1cb1: jne 0xc1cf0; pmovmskb eax, xmm1; bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x000c21b7: jne 0xc21bd; xor eax, eax; pop ebx; ret; 
0x000c224c: jne 0xc2457; pop esi; xor eax, eax; pop ebx; ret; 
0x000c22c0: jne 0xc246b; pop esi; xor eax, eax; pop ebx; ret; 
0x000c2b31: jne 0xc2b36; lea eax, [esi + 3]; pop esi; pop edi; ret; 
0x000c2be2: jne 0xc2bd8; xor eax, eax; ret; 
0x000c2d5d: jne 0xc2d61; xor eax, eax; ret; 
0x000c2ffd: jne 0xc2ff8; pop esi; ret; 
0x000c3b7b: jne 0xc3cd5; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000c4d8c: jne 0xc4d80; ret; 
0x000c4d70: jne 0xc4d8a; ret; 
0x000c5bd2: jne 0xc5bd6; cmove eax, edx; ret; 
0x000c5e11: jne 0xc5e3c; add esp, 0x18; pop ebx; ret; 
0x000c62a7: jne 0xc62f5; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000c6675: jne 0xc6660; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x000ca65c: jne 0xca6ad; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000cd5bc: jne 0xcd5fd; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000d0fbc: jne 0xd101f; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000d449f: jne 0xd45a2; add esp, 0x40; pop ebx; pop esi; pop edi; ret; 
0x000d468e: jne 0xd46b7; lea ebx, [eax + 4]; mov eax, ebx; pop ebx; ret; 
0x000d46f4: jne 0xd4708; lea eax, [edx - 0x93144]; and ch, 2; lea edx, [edx - 0x165354]; cmove eax, edx; ret; 
0x000d88f9: jne 0xd8904; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000d8982: jne 0xd898d; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000d8a10: jne 0xd8a1b; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000d964f: jne 0xd97a0; pop edi; pop esi; ret; 
0x000d962e: jne 0xd97a0; xor eax, eax; pop edi; pop esi; ret; 
0x000d982f: jne 0xd9820; mov eax, ecx; pop ebx; pop esi; ret; 
0x000d9a98: jne 0xd9a78; add eax, 1; ret; 
0x000d9a6e: jne 0xd9a92; ret; 
0x000d9b67: jne 0xd9b5c; xor edx, edx; mov eax, edx; ret; 
0x000d9b8c: jne 0xd9b80; mov eax, ecx; pop ebx; ret; 
0x000da68e: jne 0xda69f; add esp, 0x28; pop ebx; ret; 
0x000da712: jne 0xda718; add esp, 0x1c; ret; 
0x000da75c: jne 0xda763; add esp, 0x38; pop ebx; ret; 
0x000da7be: jne 0xda7c5; add esp, 0x48; pop ebx; ret; 
0x000da8e7: jne 0xda910; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000dba62: jne 0xdba69; add esp, 0x28; pop ebx; ret; 
0x000dbcd7: jne 0xdbd19; add esp, 0x28; pop ebx; ret; 
0x000dbd8c: jne 0xdbdeb; add esp, 0x24; pop ebx; pop esi; ret; 
0x000dc05b: jne 0xdc078; add esp, 0x38; pop ebx; ret; 
0x000de96e: jne 0xde999; add esp, 0x24; pop ebx; pop esi; ret; 
0x000dea06: jne 0xdea29; add esp, 0x24; pop ebx; pop esi; ret; 
0x000deecc: jne 0xdeed5; add esp, 0x28; xor eax, eax; pop ebx; ret; 
0x000df71d: jne 0xdf728; add esp, 4; pop ebx; pop esi; ret; 
0x000e2a7a: jne 0xe2ac2; stc; call dword ptr [eax - 0x18]; 
0x000e4f76: jne 0xe4f7c; add esp, 0x1c; ret; 
0x000e7436: jne 0xe743c; add esp, 0x1c; ret; 
0x000e75aa: jne 0xe75e2; add esp, 0x28; pop ebx; ret; 
0x000e7613: jne 0xe7621; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x000e77c8: jne 0xe77cf; add esp, 0x28; pop ebx; ret; 
0x000e7881: jne 0xe78c0; lea ecx, [esp + 4]; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x000e7837: jne 0xe78fb; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000e7ce3: jne 0xe7d88; mov eax, 0x10b; mov ecx, dword ptr [esp + 0x54]; mov edx, edi; call dword ptr gs:[0x10]; 
0x000e7e3e: jne 0xe7e73; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x000e866e: jne 0xe8678; add esp, 0xe8; pop ebx; ret; 
0x000e86e0: jne 0xe86ea; add esp, 0xe8; pop ebx; ret; 
0x000e8784: jne 0xe878e; add esp, 0xe8; pop ebx; ret; 
0x000e8828: jne 0xe8834; add esp, 0xe8; mov eax, edx; pop ebx; ret; 
0x000e8994: jne 0xe89f8; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x000e8f1f: jne 0xe8f54; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x000e97bc: jne 0xe9792; mov eax, dword ptr [ebp - 0x3c]; push edi; call eax; 
0x000e9ccc: jne 0xe9ca2; mov eax, dword ptr [ebp - 0x3c]; push edi; call eax; 
0x000efa43: jne 0xefa57; add esp, 0x1c; ret; 
0x000f0b92: jne 0xf0b73; xor eax, eax; pop ebx; ret; 
0x000f0d7c: jne 0xf0d96; add esp, 0x78; pop ebx; ret; 
0x000f36d2: jne 0xf36b3; xor eax, eax; pop ebx; ret; 
0x000f38bc: jne 0xf38d6; add esp, 0x78; pop ebx; ret; 
0x000f44d2: jne 0xf44b3; xor eax, eax; pop ebx; ret; 
0x000f46bc: jne 0xf46d6; add esp, 0x78; pop ebx; ret; 
0x000f7002: jne 0xf6fe3; xor eax, eax; pop ebx; ret; 
0x000f71ec: jne 0xf7206; add esp, 0x78; pop ebx; ret; 
0x000f7e12: jne 0xf7df3; xor eax, eax; pop ebx; ret; 
0x000f7ffc: jne 0xf8016; add esp, 0x78; pop ebx; ret; 
0x000fa8e2: jne 0xfa8b1; xor eax, eax; ret; 
0x000fa8c3: jne 0xfa8d9; mov eax, 1; ret; 
0x000fab69: jne 0xfab70; add esp, 8; pop ebx; ret; 
0x000fac00: jne 0xfac44; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x000fb056: jne 0xfb0f0; mov eax, edx; pop ebx; ret; 
0x000fb13d: jne 0xfb1a0; ret; 
0x000fb5eb: jne 0xfb608; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x000fb6d7: jne 0xfb700; mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb4; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000fb7b6: jne 0xfb7e0; mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb4; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000fb897: jne 0xfb8c0; mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb5; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000fb976: jne 0xfb9a0; mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb5; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0012e1db: jno 0x12e24a; out dx, eax; push dword ptr [ecx + eax - 0x3d]; mov ebp, esi; call ebx; 
0x001305b7: jno 0x1305b9; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00132abc: jno 0x132ac3; add byte ptr [ecx + 0x10c355c5], al; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x31]; 
0x0013bf7e: jno 0x13bf84; mov edi, dword ptr [ecx + 8]; mov ebp, dword ptr [ecx + 0xc]; nop; jmp edx; 
0x0017cca6: jno 0x17cc2b; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00194c41: jno 0x194cac; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001aad8b: jno 0x1aad8f; add byte ptr [eax], al; xor eax, eax; ret; 
0x00027198: jno 0x27178; call dword ptr [edx + 0x50]; 
0x0002ab63: jno 0x2ab5e; call dword ptr [eax - 0x18]; 
0x0002ab86: jno 0x2ab81; call dword ptr [eax - 0x18]; 
0x0002aba9: jno 0x2aba4; call dword ptr [eax - 0x18]; 
0x0002abcc: jno 0x2abc7; call dword ptr [eax - 0x18]; 
0x0002abef: jno 0x2abea; call dword ptr [eax - 0x18]; 
0x0002b764: jno 0x2b75f; call dword ptr [eax - 0x18]; 
0x0002b795: jno 0x2b790; call dword ptr [eax - 0x18]; 
0x0002b7b8: jno 0x2b7b3; call dword ptr [eax - 0x18]; 
0x0002b7db: jno 0x2b7d6; call dword ptr [eax - 0x18]; 
0x0002b86a: jno 0x2b865; call dword ptr [eax - 0x18]; 
0x0002c453: jno 0x2c44e; call dword ptr [eax - 0x18]; 
0x0002c476: jno 0x2c471; call dword ptr [eax - 0x18]; 
0x0002cde0: jno 0x2cddb; call dword ptr [eax - 0x18]; 
0x0002ce03: jno 0x2cdfe; call dword ptr [eax - 0x18]; 
0x0002d970: jno 0x2d96b; call dword ptr [eax - 0x73]; 
0x0002d983: jno 0x2d97e; call dword ptr [eax - 0x18]; 
0x0002d993: jno 0x2d98e; call dword ptr [eax - 0x73]; 
0x0002d9a6: jno 0x2d9a1; call dword ptr [eax - 0x18]; 
0x0002d9b6: jno 0x2d9b1; call dword ptr [eax - 0x73]; 
0x0002d9c9: jno 0x2d9c4; call dword ptr [eax - 0x18]; 
0x0002da1d: jno 0x2da18; call dword ptr [eax - 0x73]; 
0x0002da30: jno 0x2da2b; call dword ptr [eax - 0x18]; 
0x0002da40: jno 0x2da3b; call dword ptr [eax - 0x73]; 
0x0002da53: jno 0x2da4e; call dword ptr [eax - 0x18]; 
0x0002da78: jno 0x2da73; call dword ptr [eax - 0x73]; 
0x0002e1c2: jno 0x2e1bd; call dword ptr [eax - 0x18]; 
0x0002e1e5: jno 0x2e1e0; call dword ptr [eax - 0x18]; 
0x0002ecee: jno 0x2ece9; call dword ptr [eax - 0x18]; 
0x0002edb9: jno 0x2edb4; call dword ptr [eax - 0x18]; 
0x0002ee14: jno 0x2ee0f; call dword ptr [eax - 0x18]; 
0x0002ee37: jno 0x2ee32; call dword ptr [eax - 0x18]; 
0x0002ee5a: jno 0x2ee55; call dword ptr [eax - 0x18]; 
0x0007c559: jno 0x7c555; jmp dword ptr [esi - 0x70]; 
0x000d7edc: jno 0xd7e67; ret; 
0x001280da: jnp 0x128069; xchg ebx, eax; ret; 
0x0013058e: jnp 0x130590; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0013cabe: jnp 0x13caae; jmp dword ptr [esi - 0x70]; 
0x00146127: jnp 0x146128; jmp dword ptr [esi - 0x70]; 
0x0015d35c: jnp 0x15d3bd; stc; call dword ptr [eax + 0x55]; 
0x001629af: jnp 0x162a11; stc; call dword ptr [eax - 0x18]; 
0x00176132: jnp 0x176130; jmp dword ptr [esi - 0x70]; 
0x0017b5ff: jnp 0x17b5eb; dec dword ptr [ecx - 0x763e7606]; ret; 
0x0018a3c3: jnp 0x18a3fd; jmp dword ptr [ebp - 0x75]; 
0x00194c1b: jnp 0x194c17; jmp dword ptr [esi - 0x70]; 
0x001ab154: jnp 0x1ab0e3; inc ecx; push es; ret; 
0x00054f94: jnp 0x54f9a; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000a407f: jnp 0x599550ce; add al, 0xf6; ret; 
0x000c0c70: jnp 0x5b1830ba; pop esi; ret; 
0x000c0cf4: jnp 0x5b18313e; pop esi; ret; 
0x000c0e34: jnp 0x5b18327e; pop esi; ret; 
0x0005df0e: jnp 0x5df09; call dword ptr [eax - 0x73]; 
0x0005df21: jnp 0x5df1c; call dword ptr [eax - 0x18]; 
0x0005df33: jnp 0x5df2e; call dword ptr [eax - 0x73]; 
0x0005df46: jnp 0x5df41; call dword ptr [eax - 0x18]; 
0x0005df58: jnp 0x5df53; call dword ptr [eax - 0x73]; 
0x0005df82: jnp 0x5df7d; call dword ptr [eax - 0x73]; 
0x0005dfa7: jnp 0x5dfa2; call dword ptr [eax - 0x73]; 
0x0005dfcc: jnp 0x5dfc7; call dword ptr [eax - 0x73]; 
0x0005e040: jnp 0x5e03b; call dword ptr [eax - 0x73]; 
0x0005e065: jnp 0x5e060; call dword ptr [eax - 0x73]; 
0x000bd7ed: jnp 0x5e13fc37; ret; 
0x000bd871: jnp 0x5e13fcbb; ret; 
0x000bd971: jnp 0x5e13fdbb; ret; 
0x0005f4ec: jnp 0x5f4e7; call dword ptr [eax - 0x73]; 
0x0008cc9a: jnp 0x8ccbd; sbb eax, dword ptr [eax]; mov eax, dword ptr [eax + 0xe6c]; ret; 
0x00092b35: jnp 0x92b76; stc; call dword ptr [eax - 0x18]; 
0x0009599a: jnp 0x95930; sbb al, byte ptr [eax]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x2a4], edx; ret; 
0x000965d2: jnp 0x965dc; add byte ptr [edi], cl; test byte ptr [edx - 0x72000002], bh; xchg byte ptr [eax], al; xchg ecx, edi; call dword ptr [eax + 0x68]; 
0x00098350: jnp 0x9835a; dec ecx; lcall 0, 0xc4870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x00098ce3: jnp 0x98ced; dec ecx; lcall 1, 0x39870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x000a42b5: jnp 0xa42f8; stc; call dword ptr [eax - 0x73]; 
0x000a56c2: jnp 0xa5705; stc; call dword ptr [eax - 0x73]; 
0x000ab547: jnp 0xab540; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000ac442: jnp 0xac448; cmove eax, edx; ret; 
0x000b9347: jnp 0xb9382; adc dword ptr [eax], eax; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00084758: jnp 0xc08d7f9e; js 0x84768; ret; 
0x000c4d52: jnp 0xc4d58; cmove eax, edx; ret; 
0x000c4db2: jnp 0xc4db8; cmove eax, edx; ret; 
0x000c5da2: jnp 0xc5da8; cmove eax, edx; ret; 
0x000c6ab2: jnp 0xc6ab8; cmove eax, edx; ret; 
0x000928f0: jnp 0xfee9abf7; or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x00128a9d: jns 0x128aa2; mov byte ptr [ebx], 0; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x0012b38b: jns 0x12b38d; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012ba53: jns 0x12ba8d; idiv bh; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0013bf81: jns 0x13bf8b; mov ebp, dword ptr [ecx + 0xc]; nop; jmp edx; 
0x0013cd66: jns 0x13cd56; jmp dword ptr [esi - 0x70]; 
0x0013fd86: jns 0x13fd8a; add ecx, dword ptr [edi]; test byte ptr [eax - 0x7d000000], cl; ret 0x8303; 
0x00156342: jns 0x156342; jmp dword ptr [esi - 0x70]; 
0x001662fe: jns 0x1662fd; jmp dword ptr [esi - 0x70]; 
0x001763a8: jns 0x1763a6; jmp dword ptr [esi - 0x70]; 
0x00178b20: jns 0x178aa3; les edx, ptr [eax]; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0017a3bd: jns 0x17a3be; inc dword ptr [ebx - 0x77cef3c]; add dword ptr [eax + 1], edi; sbb eax, -1; add esp, 0xc; ret; 
0x0017b513: jns 0x17b509; call ecx; 
0x0017d266: jns 0x17d258; inc dword ptr [ebx - 0x2f08e33c]; shr eax, 0x1f; ret; 
0x00193a60: jns 0x193a66; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x000bb096: jns 0x4798b3f3; pop es; pop edi; pop esi; pop ebx; ret; 
0x0012e3b0: jns 0x59b045; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0005aabb: jns 0x5aa83; inc eax; or byte ptr [eax], al; mov eax, edx; ret; 
0x0005b509: jns 0x5b504; call dword ptr [eax - 0x73]; 
0x0005b525: jns 0x5b520; call dword ptr [eax - 0x73]; 
0x0005b535: jns 0x5b530; call dword ptr [eax - 0x18]; 
0x0005b541: jns 0x5b53c; call dword ptr [eax - 0x73]; 
0x0005b551: jns 0x5b54c; call dword ptr [eax - 0x18]; 
0x0005b55d: jns 0x5b558; call dword ptr [eax - 0x73]; 
0x0005b934: jns 0x5b92f; call dword ptr [eax - 0x73]; 
0x0005b944: jns 0x5b93f; call dword ptr [eax - 0x18]; 
0x0005b9d8: jns 0x5b9d3; call dword ptr [eax - 0x73]; 
0x0005b9e8: jns 0x5b9e3; call dword ptr [eax - 0x18]; 
0x0005bb17: jns 0x5bb12; call dword ptr [eax - 0x18]; 
0x0005bdb7: jns 0x5bdb2; call dword ptr [eax - 0x18]; 
0x000b99c6: jns 0x5e6a9d23; pop ebx; ret; 
0x000fbef5: jns 0x5f6e1ad3; pop ebp; ret; 
0x0018b620: jns 0x5f7711fe; ret; 
0x000664fe: jns 0x66546; add byte ptr [ecx - 0x5a77b], cl; dec dword ptr [ecx - 0x5f363]; jmp dword ptr [ebp - 0x5f]; 
0x00055d70: jns 0x748e76aa; sbb dword ptr [ebx + eax*4], eax; ret; 
0x000d4d50: jns 0x7496668a; sbb dword ptr [ebx + eax*4], eax; ret; 
0x0015c880: jns 0x74a38c56; add byte ptr es:[ecx], dh; rol byte ptr [ecx + 0xc0fefb], cl; add byte ptr [edi], cl; xchg ebp, eax; ret 0x548d; 
0x00079238: jns 0x79233; call dword ptr [eax - 0x18]; 
0x00079238: jns 0x79233; call dword ptr [eax - 0x18]; das; scasb al, byte ptr es:[edi]; sti; jmp dword ptr [esi - 0x70]; 
0x000792e5: jns 0x792e0; call dword ptr [eax - 0x18]; 
0x0007941e: jns 0x79419; call dword ptr [eax - 0x18]; 
0x000795f5: jns 0x795f0; call dword ptr [eax - 0x18]; 
0x000795f5: jns 0x795f0; call dword ptr [eax - 0x18]; jb 0x795a6; sti; jmp dword ptr [esi - 0x70]; 
0x00082da6: jns 0x82d33; inc eax; or al, 0x83; in al, dx; add al, 0x29; ret 0xfac1; 
0x0008932e: jns 0x892c9; push 1; push edx; push eax; push ebx; call dword ptr [edi + 0x40]; 
0x0010ea0a: jns 0x8dcad5d6; sub eax, -0x5f; stc; call dword ptr [eax - 0x73]; 
0x0009536e: jns 0x95514; mov eax, 0xf0; xor ecx, ecx; xor esi, esi; call dword ptr gs:[0x10]; 
0x0009611c: jns 0x9611f; add byte ptr [eax], al; mov eax, 0xf0; xor ecx, ecx; xor esi, esi; call dword ptr gs:[0x10]; 
0x0009611a: jns 0x96299; mov eax, 0xf0; xor ecx, ecx; xor esi, esi; call dword ptr gs:[0x10]; 
0x000963f8: jns 0x96404; add byte ptr [ebx - 0x72e3dba4], cl; and esp, 0xffffff86; stc; call dword ptr [eax - 0x73]; 
0x000a01d6: jns 0xa01dc; add ebx, ebx; mov ebx, dword ptr [ebx]; mov eax, 0x106; call dword ptr gs:[0x10]; 
0x000a024a: jns 0xa0250; add ebx, ebx; mov ebx, dword ptr [ebx]; mov eax, 0x198; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000b436a: jns 0xb4379; add byte ptr [edi], cl; test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000b43c0: jns 0xb43cc; add byte ptr [edi], cl; test byte ptr [edi], al; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000b883a: jns 0xb8849; add byte ptr [edi], cl; test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000baba3: jns 0xbabae; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000bd5b4: jns 0xbd57c; or al, 0; add ecx, 0x10f9bc; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c08b4: jns 0xc0849; or al, 0; add ecx, 0x10c73c; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000deb14: jns 0xdea99; les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x000e1c6e: jns 0xe1bf9; ret 0x448b; 
0x000e1d23: jns 0xe1cae; ret 0x448b; 
0x000e1da4: jns 0xe1d2f; ret 0x448b; 
0x000e786a: jns 0xe78e0; mov eax, 0x193; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000e79da: jns 0xe79e4; dec ecx; lcall 0, 0xaa870f3b; add byte ptr [eax + 0x194], bh; call dword ptr gs:[0x10]; 
0x000fba91: jns 0xfba80; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x0010ddfb: jo 0x10ddf9; clc; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x00112f4f: jo 0x112ed4; ret; 
0x001156db: jo 0x115738; pop esi; pop edi; ret; 
0x00115f21: jo 0x115eb0; push esp; and al, 8; call dword ptr gs:[0x10]; 
0x00120ad1: jo 0x120a60; push esp; and al, 8; call dword ptr gs:[0x10]; 
0x001229c2: jo 0x122951; push esp; and al, 0x28; call dword ptr gs:[0x10]; 
0x001239e4: jo 0x12396f; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x00127a32: jo 0x127a2a; dec dword ptr [ebx + 0x56897440]; add al, 0x89; ret 0xeac1; 
0x0012ee94: jo 0x12eef1; pop esi; pop edi; ret; 
0x0012f114: jo 0x12f171; pop esi; pop edi; ret; 
0x001304d4: jo 0x130531; pop esi; pop edi; ret; 
0x0013180f: jo 0x13186c; pop esi; pop edi; ret; 
0x00138e98: jo 0x138e41; stc; call dword ptr [eax - 0x18]; 
0x0013fee2: jo 0x13fe6d; ret; 
0x0014c4e9: jo 0x14c524; ret 0x840f; 
0x0014c7b4: jo 0x14c7ef; ret; 
0x0014c9b0: jo 0x14c9eb; ret 0x840f; 
0x0014cee4: jo 0x14cf1f; ret 0x840f; 
0x00157806: jo 0x1577bb; stc; call dword ptr [eax - 0x73]; 
0x00166ce8: jo 0x166ce7; jmp dword ptr [esi - 0x70]; 
0x0016d713: jo 0x16d778; stc; call dword ptr [eax + 0x6a]; 
0x0016d767: jo 0x16d7cc; stc; jmp dword ptr [ebp - 0x75]; 
0x0016d813: jo 0x16d878; stc; call dword ptr [eax - 0x18]; 
0x0016eacd: jo 0x16eae3; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x0017151f: jo 0x17154d; mov dword ptr [eax + 0x34], ebx; mov eax, edx; pop ebx; pop esi; ret; 
0x001788f2: jo 0x17891b; stc; call dword ptr [edi + 0x52]; 
0x0017d262: jo 0x17d270; call 0x84c40; add esp, 0x1c; not eax; shr eax, 0x1f; ret; 
0x00180667: jo 0x180692; ret; 
0x001932f6: jo 0x1932b8; add bh, dh; ret 0xf; 
0x00193433: jo 0x1933b6; ret 0x80; 
0x0019349a: jo 0x19341d; ret 0x80; 
0x001934ec: jo 0x19346f; ret 0x80; 
0x00193976: jo 0x193938; add bh, dh; ret 0xf; 
0x0019f2ef: jo 0x19f300; mov dh, 0x48; pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x001ad8ce: jo 0x1ad859; ret; 
0x000272ac: jo 0x272a7; dec dword ptr [ecx - 0x48f0e6b0]; xchg edi, eax; cmp byte ptr [eax - 7], dh; jmp dword ptr [esi - 0x77]; 
0x000272b6: jo 0x272b1; jmp dword ptr [esi - 0x77]; 
0x00027519: jo 0x27514; jmp dword ptr [esi - 0x77]; 
0x00027559: jo 0x27554; call dword ptr [eax - 0x73]; 
0x00027589: jo 0x27584; call dword ptr [eax - 0x73]; 
0x000275ad: jo 0x275a8; call dword ptr [eax - 0x73]; 
0x0002798d: jo 0x2796d; call dword ptr [eax - 0x73]; 
0x00027b62: jo 0x27b42; call dword ptr [eax - 0x73]; 
0x00027fe0: jo 0x27fdb; dec dword ptr [ecx - 0x48f0f7bd]; test dword ptr [eax + 0x70], ecx; stc; jmp dword ptr [esi - 0x77]; 
0x00027fea: jo 0x27fe5; jmp dword ptr [esi - 0x77]; 
0x000282e5: jo 0x282e0; call dword ptr [eax - 0x73]; 
0x000282f5: jo 0x282f0; call dword ptr [eax - 0x18]; 
0x000287f1: jo 0x287ec; call dword ptr [eax - 0x18]; 
0x000288d7: jo 0x288d2; call dword ptr [eax - 0x18]; 
0x00028e0e: jo 0x28e09; call dword ptr [eax - 0x18]; 
0x00028f8e: jo 0x28f89; call dword ptr [eax - 0x18]; 
0x0002933a: jo 0x29335; call dword ptr [eax - 0x18]; 
0x0002947f: jo 0x2947a; call dword ptr [eax - 0x18]; 
0x00029a09: jo 0x29a04; call dword ptr [eax - 0x18]; 
0x00029b66: jo 0x29b61; call dword ptr [eax - 0x18]; 
0x0002a093: jo 0x2a08e; call dword ptr [eax - 0x18]; 
0x0002a2df: jo 0x2a331; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x54]; call esi; 
0x0002aa5f: jo 0x2aa5a; call dword ptr [eax - 0x18]; 
0x0002aae8: jo 0x2aae3; call dword ptr [eax - 0x18]; 
0x0002ab40: jo 0x2ab3b; call dword ptr [eax - 0x18]; 
0x0002abee: jo 0x2ac61; stc; call dword ptr [eax - 0x18]; 
0x0002b122: jo 0x2b11d; call dword ptr [eax - 0x18]; 
0x0002b847: jo 0x2b842; call dword ptr [eax - 0x18]; 
0x0002b7da: jo 0x2b84d; stc; call dword ptr [eax - 0x18]; 
0x0002b88d: jo 0x2b888; call dword ptr [eax - 0x18]; 
0x0002c308: jo 0x2c303; call dword ptr [eax - 0x18]; 
0x0002c452: jo 0x2c4c5; stc; call dword ptr [eax - 0x18]; 
0x0002cd9a: jo 0x2cd95; call dword ptr [eax - 0x18]; 
0x0002ce26: jo 0x2ce21; call dword ptr [eax - 0x18]; 
0x0002ce63: jo 0x2ce5e; call dword ptr [eax - 0x18]; 
0x0002d83b: jo 0x2d836; call dword ptr [eax - 0x18]; 
0x0002da0d: jo 0x2da08; call dword ptr [eax - 0x18]; 
0x0002d9c8: jo 0x2da3b; stc; call dword ptr [eax - 0x18]; 
0x0002da8b: jo 0x2da86; call dword ptr [eax - 0x18]; 
0x0002e17c: jo 0x2e177; call dword ptr [eax - 0x18]; 
0x0002e208: jo 0x2e203; call dword ptr [eax - 0x18]; 
0x0002e245: jo 0x2e240; call dword ptr [eax - 0x18]; 
0x0002ec0f: jo 0x2ec0a; call dword ptr [eax - 0x18]; 
0x0002ed96: jo 0x2ed91; call dword ptr [eax - 0x18]; 
0x0002edf1: jo 0x2edec; call dword ptr [eax - 0x18]; 
0x0002ee59: jo 0x2eecc; stc; call dword ptr [eax - 0x18]; 
0x00032ba7: jo 0x32baa; add byte ptr [eax], al; mov eax, dword ptr [edx + eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x54]; ret; 
0x00034037: jo 0x3403a; add byte ptr [eax], al; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0003fa21: jo 0x3f9b0; test esp, ebx; sub al, 0xf9; dec dword ptr [ecx - 0x76fbdbbc]; ret; 
0x00051130: jo 0x511aa; stc; call dword ptr [eax - 0x73]; 
0x000511e6: jo 0x51260; stc; call dword ptr [eax - 0x73]; 
0x00051209: jo 0x51283; stc; call dword ptr [eax - 0x73]; 
0x0005122c: jo 0x512a6; stc; call dword ptr [eax - 0x73]; 
0x0005124f: jo 0x512c9; stc; call dword ptr [eax - 0x73]; 
0x00051272: jo 0x512ec; stc; call dword ptr [eax - 0x73]; 
0x00051295: jo 0x5130f; stc; call dword ptr [eax - 0x73]; 
0x000512b8: jo 0x51332; stc; call dword ptr [eax - 0x73]; 
0x000512f7: jo 0x51371; stc; call dword ptr [eax - 0x73]; 
0x0005131a: jo 0x51394; stc; call dword ptr [eax - 0x73]; 
0x0005133d: jo 0x513b7; stc; call dword ptr [eax - 0x73]; 
0x00051360: jo 0x513da; stc; call dword ptr [eax - 0x73]; 
0x00051383: jo 0x513fd; stc; call dword ptr [eax - 0x73]; 
0x000513ad: jo 0x51427; stc; call dword ptr [eax - 0x73]; 
0x0007c6c1: jo 0x7c6bd; jmp dword ptr [esi - 0x70]; 
0x00186bab: jo 0x842772ab; ret; 
0x00087522: jo 0x874a7; stc; call dword ptr [eax - 0x18]; 
0x0008762d: jo 0x87643; mov eax, ebx; mov byte ptr [edx], cl; pop ebx; pop esi; ret; 
0x0008774d: jo 0x87763; mov eax, ebx; mov byte ptr [edx], cl; pop ebx; pop esi; ret; 
0x00089d74: jo 0x89dae; call 0x11f490; add esp, 0x18; pop ebx; ret; 
0x0008d00b: jo 0x8d007; jmp dword ptr [esi - 0x70]; 
0x0009c079: jo 0x9c07f; call dword ptr [eax]; 
0x0009e6df: jo 0x9e66a; stc; call dword ptr [eax - 0x73]; 
0x000a0b17: jo 0xa0b1c; add byte ptr [eax], al; mov dword ptr [eax + 0x378], 1; ret; 
0x000afa43: jo 0xafa61; pop ebx; pop esi; ret; 
0x000bd647: jo 0xbd64b; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bd663: jo 0xbd669; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bd6b5: jo 0xbd6bf; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bd7a9: jo 0xbd7bb; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bd82f: jo 0xbd845; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bd8b3: jo 0xbd8cd; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0a7d: jo 0xc0a81; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000c0aa9: jo 0xc0aaf; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000c0b2b: jo 0xc0b35; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000c0c2f: jo 0xc0c41; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000c0cb5: jo 0xc0ccb; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000c0d39: jo 0xc0d53; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000da822: jo 0xda828; push dword ptr [eax]; call 0xdd060; add esp, 0x1c; ret; 
0x000da86f: jo 0xda875; push dword ptr [eax]; call 0xdd060; add esp, 0x1c; ret; 
0x000dcbed: jo 0xdcbf3; pop ebx; pop esi; pop edi; ret; 
0x000deaaf: jo 0xdea3c; pop esp; and al, 0x60; lea edx, [esp + 0x2c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000e8998: jo 0xe89f5; pop esi; pop edi; ret; 
0x000e8f23: jo 0xe8f80; pop esi; pop edi; ret; 
0x0010e3e7: jp 0x10e3e9; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011562c: jp 0x115652; mov dword ptr [edx + 0x28], eax; pop esi; pop edi; ret; 
0x00122413: jp 0x122451; mov dword ptr [edx + 0x34], eax; pop ebx; pop esi; pop edi; ret; 
0x00128deb: jp 0x128df0; xor al, 0x75; mov al, 0x83; ret 0xeb03; 
0x0013e1e6: jp 0x13e1dc; jmp dword ptr [esi - 0x70]; 
0x00141f9e: jp 0x141fa2; add byte ptr [ebp + 6], dh; movzx eax, byte ptr [edx + 1]; shr eax, 1; ret; 
0x00153b8f: jp 0x153bee; stc; call dword ptr [eax - 0x18]; 
0x00153b8f: jp 0x153bee; stc; call dword ptr [eax - 0x18]; xlatb; add al, 0xee; jmp dword ptr [esi - 0x70]; 
0x00153c2f: jp 0x153c8e; stc; call dword ptr [eax - 0x18]; 
0x00153c2f: jp 0x153c8e; stc; call dword ptr [eax - 0x18]; aaa; add al, 0xee; jmp dword ptr [esi - 0x70]; 
0x00153ccf: jp 0x153d2e; stc; call dword ptr [eax - 0x18]; 
0x00153ccf: jp 0x153d2e; stc; call dword ptr [eax - 0x18]; xchg edi, eax; add ebp, esi; jmp dword ptr [esi - 0x70]; 
0x00153d6f: jp 0x153dce; stc; call dword ptr [eax - 0x18]; 
0x00153e0f: jp 0x153e6e; stc; call dword ptr [eax - 0x18]; 
0x00153e0f: jp 0x153e6e; stc; call dword ptr [eax - 0x18]; push edi; add ch, dh; jmp dword ptr [esi - 0x70]; 
0x00153eaf: jp 0x153f0e; stc; call dword ptr [eax - 0x18]; 
0x00153eaf: jp 0x153f0e; stc; call dword ptr [eax - 0x18]; mov bh, 1; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00153f4f: jp 0x153fae; stc; call dword ptr [eax - 0x18]; 
0x00153f4f: jp 0x153fae; stc; call dword ptr [eax - 0x18]; pop ss; add esi, ebp; jmp dword ptr [esi - 0x70]; 
0x00153fef: jp 0x15404e; stc; call dword ptr [eax - 0x18]; 
0x00153fef: jp 0x15404e; stc; call dword ptr [eax - 0x18]; ja 0x153ff7; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0015408f: jp 0x1540ee; stc; call dword ptr [eax - 0x18]; 
0x0015412f: jp 0x15418e; stc; call dword ptr [eax - 0x18]; 
0x001541cf: jp 0x15422e; stc; call dword ptr [eax - 0x18]; 
0x0015426f: jp 0x1542ce; stc; call dword ptr [eax - 0x18]; 
0x0015426f: jp 0x1542ce; stc; call dword ptr [eax - 0x18]; idiv ebp; in eax, dx; jmp dword ptr [esi - 0x70]; 
0x0015430f: jp 0x15436e; stc; call dword ptr [eax - 0x18]; 
0x0017a393: jp 0x17a394; inc dword ptr [ebx - 0x2776eb3c]; pop ebx; pop esi; ret; 
0x00190562: jp 0x190539; idiv edi; add esp, 0x2c; ret; 
0x001938c8: jp 0x1938ce; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x001939b0: jp 0x1939b6; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x001abbca: jp 0x1abbd2; add byte ptr [edi], cl; test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x001abc2d: jp 0x1abc3a; add byte ptr [edi], cl; test byte ptr [eax + eax], bh; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x001abc65: jp 0x1abc76; add byte ptr [esp + ebx*2 - 0x48], dh; adc byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x0003b924: jp 0x3b930; jne 0x3b930; fadd st(0); add esp, 0x18; pop ebx; ret; 
0x0003bcc3: jp 0x3bcd0; jne 0x3bcd0; fadd st(0); add esp, 0x18; pop ebx; ret; 
0x0003bfef: jp 0x3c000; jne 0x3c000; fadd st(0); add esp, 8; pop ebx; ret; 
0x0004353a: jp 0x43534; inc dword ptr [ecx]; fidivr word ptr [esi]; jmp esi; 
0x0005ba4a: jp 0x5ba45; call dword ptr [eax - 0x73]; 
0x0005ba5a: jp 0x5ba55; call dword ptr [eax - 0x18]; 
0x0005bb07: jp 0x5bb02; call dword ptr [eax - 0x73]; 
0x0005bc65: jp 0x5bc60; call dword ptr [eax - 0x73]; 
0x0005bc75: jp 0x5bc70; call dword ptr [eax - 0x18]; 
0x0005bda7: jp 0x5bda2; call dword ptr [eax - 0x73]; 
0x0005df6b: jp 0x5df66; call dword ptr [eax - 0x18]; 
0x0005dfdf: jp 0x5dfda; call dword ptr [eax - 0x18]; 
0x0007935c: jp 0x79357; call dword ptr [eax - 0x18]; 
0x0007bad9: jp 0x7bad5; jmp dword ptr [esi - 0x70]; 
0x000819bc: jp 0x819fc; stc; call dword ptr [eax - 0x18]; 
0x00086538: jp 0x86539; jmp dword ptr [ecx]; 
0x00088592: jp 0x885cc; jmp dword ptr [ebp - 0x75]; 
0x0008d004: jp 0x8d044; stc; call dword ptr [eax - 0x18]; 
0x0008d004: jp 0x8d044; stc; call dword ptr [eax - 0x18]; bound esi, qword ptr [eax - 6]; jmp dword ptr [esi - 0x70]; 
0x000b93b3: jp 0xb93bd; or eax, 0x89c18100; cmp dword ptr [ecx], edx; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000bcf61: jp 0xbcf64; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x000bcf71: jp 0xbcf75; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x000bcfa1: jp 0xbcfa7; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x000bd011: jp 0xbd01b; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000c0175: jp 0xc017f; mov eax, edi; pop ebx; pop edi; ret; 
0x000c01d2: jp 0xc01e4; mov eax, edi; pop ebx; pop edi; ret; 
0x00109844: js 0x10987f; ret 0x4f0f; 
0x00113550: js 0x1135ad; ret; 
0x001227fe: js 0x122808; mov eax, dword ptr [edx + 8]; and eax, 0x100f; ret; 
0x001229be: js 0x12294b; pop esp; and al, 0x70; lea edx, [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0012384c: js 0x123858; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0012e1cc: js 0x12e1ce; add byte ptr [eax], al; mov dword ptr [ecx], ebx; int 0x80; 
0x0012f1e2: js 0x12f1e5; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001318c6: js 0x1318d0; add esp, 8; pop ebx; ret; 
0x00132284: js 0x132249; cmc; dec dword ptr [ebp - 0x76fbdbb4]; ret 0x448b; 
0x0013cabd: js 0x13cb3a; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00145e1f: js 0x145e2c; mov eax, dword ptr [esp + 0x10]; sub eax, ebx; add esp, 8; pop ebx; ret; 
0x0014abee: js 0x14abf1; sub eax, 0x8beb0574; lea esi, [esi]; xor eax, eax; ret; 
0x0014c1c2: js 0x14c1af; ret 0x768d; 
0x00156766: js 0x156770; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x0015741c: js 0x1573ad; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x0015763c: js 0x15768c; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x0015cf0c: js 0x15cec2; stc; call dword ptr [eax - 0x18]; 
0x001664a5: js 0x1664a4; jmp dword ptr [esi - 0x70]; 
0x001795a7: js 0x17952c; ret 0x8901; 
0x0017a329: js 0x17a390; stc; call dword ptr [eax - 0x73]; 
0x0017b5f3: js 0x17b5e9; call ecx; 
0x0018c485: js 0x18c490; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0019593a: js 0x195998; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001afecb: js 0x1aff06; ret; 
0x001b30f3: js 0x1b312e; ret 0x840f; 
0x0002806d: js 0x28098; stc; call dword ptr [edi - 1]; 
0x0002f282: js 0x2f2d4; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call edi; 
0x0002f582: js 0x2f511; add dword ptr [ecx + 0x2b], -7; call dword ptr [eax - 0x18]; 
0x000330a6: js 0x330bc; push dword ptr [ecx + ebx - 0x7d]; in al, dx; or byte ptr [ecx - 0xe76b], cl; call dword ptr [eax + 0x56]; 
0x00033d65: js 0x33d27; test edx, edx; je 0x33d75; mov dword ptr [esp + 0x14], eax; call edx; 
0x00035f25: js 0x35f50; stc; call dword ptr [eax - 0x73]; 
0x0003c4f5: js 0x3c4ff; mov ebp, dword ptr [eax + 0xc]; nop; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x0003c545: js 0x3c54f; mov ebp, dword ptr [eax + 0xc]; nop; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x00047769: js 0x47764; call dword ptr [eax + 0x68]; 
0x0004778c: js 0x47787; call dword ptr [eax + 0x68]; 
0x000bb028: js 0x4798b285; add ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x00049fbb: js 0x49fb6; call dword ptr [eax - 0x73]; 
0x00049fce: js 0x49fc9; call dword ptr [eax - 0x18]; 
0x0004a175: js 0x4a170; call dword ptr [eax - 0x73]; 
0x0004a198: js 0x4a193; call dword ptr [eax - 0x73]; 
0x0004a1bb: js 0x4a1b6; call dword ptr [eax - 0x73]; 
0x0004a1de: js 0x4a1d9; call dword ptr [eax - 0x73]; 
0x0004a201: js 0x4a1fc; call dword ptr [eax - 0x73]; 
0x0004a224: js 0x4a21f; call dword ptr [eax - 0x73]; 
0x0004a247: js 0x4a242; call dword ptr [eax - 0x73]; 
0x0004a271: js 0x4a26c; call dword ptr [eax - 0x73]; 
0x0004a294: js 0x4a28f; call dword ptr [eax - 0x73]; 
0x0004a2b7: js 0x4a2b2; call dword ptr [eax - 0x73]; 
0x0004a2da: js 0x4a2d5; call dword ptr [eax - 0x73]; 
0x0004a2fd: js 0x4a2f8; call dword ptr [eax - 0x73]; 
0x0004a320: js 0x4a31b; call dword ptr [eax - 0x73]; 
0x0004a343: js 0x4a33e; call dword ptr [eax - 0x73]; 
0x0004a366: js 0x4a361; call dword ptr [eax - 0x73]; 
0x0004acc9: js 0x4acc4; call dword ptr [eax + 0x68]; 
0x0004acec: js 0x4ace7; call dword ptr [eax + 0x68]; 
0x0004d39d: js 0x4d398; call dword ptr [eax - 0x73]; 
0x0004d3b0: js 0x4d3ab; call dword ptr [eax - 0x18]; 
0x0004d428: js 0x4d423; call dword ptr [eax - 0x73]; 
0x0004d44b: js 0x4d446; call dword ptr [eax - 0x73]; 
0x0004d46e: js 0x4d469; call dword ptr [eax - 0x73]; 
0x0004d491: js 0x4d48c; call dword ptr [eax - 0x73]; 
0x0004d4b4: js 0x4d4af; call dword ptr [eax - 0x73]; 
0x0004d4de: js 0x4d4d9; call dword ptr [eax - 0x73]; 
0x0004d50d: js 0x4d508; call dword ptr [eax - 0x73]; 
0x0004d530: js 0x4d52b; call dword ptr [eax - 0x73]; 
0x0004d553: js 0x4d54e; call dword ptr [eax - 0x73]; 
0x0004d576: js 0x4d571; call dword ptr [eax - 0x73]; 
0x0004d599: js 0x4d594; call dword ptr [eax - 0x73]; 
0x0004d5bc: js 0x4d5b7; call dword ptr [eax - 0x73]; 
0x0004d5db: js 0x4d5d6; call dword ptr [eax - 0x73]; 
0x0004d5fe: js 0x4d5f9; call dword ptr [eax - 0x73]; 
0x0004e80b: js 0x4e806; call dword ptr [eax + 0x68]; 
0x0004e82e: js 0x4e829; call dword ptr [eax + 0x68]; 
0x00051131: js 0x5112c; call dword ptr [eax - 0x73]; 
0x00051144: js 0x5113f; call dword ptr [eax - 0x18]; 
0x000511c4: js 0x511bf; call dword ptr [eax - 0x73]; 
0x000511e7: js 0x511e2; call dword ptr [eax - 0x73]; 
0x0005120a: js 0x51205; call dword ptr [eax - 0x73]; 
0x0005122d: js 0x51228; call dword ptr [eax - 0x73]; 
0x00051250: js 0x5124b; call dword ptr [eax - 0x73]; 
0x00051273: js 0x5126e; call dword ptr [eax - 0x73]; 
0x00051296: js 0x51291; call dword ptr [eax - 0x73]; 
0x000512b9: js 0x512b4; call dword ptr [eax - 0x73]; 
0x000512f8: js 0x512f3; call dword ptr [eax - 0x73]; 
0x0005131b: js 0x51316; call dword ptr [eax - 0x73]; 
0x0005133e: js 0x51339; call dword ptr [eax - 0x73]; 
0x00051361: js 0x5135c; call dword ptr [eax - 0x73]; 
0x00051384: js 0x5137f; call dword ptr [eax - 0x73]; 
0x000513ae: js 0x513a9; call dword ptr [eax - 0x73]; 
0x0005642b: js 0x56426; call dword ptr [eax + 0x68]; 
0x0005644e: js 0x56449; call dword ptr [eax + 0x68]; 
0x00059a5f: js 0x59a5a; call dword ptr [eax - 0x73]; 
0x00059a72: js 0x59a6d; call dword ptr [eax - 0x18]; 
0x00059b44: js 0x59b3f; call dword ptr [eax - 0x73]; 
0x00059b69: js 0x59b64; call dword ptr [eax - 0x73]; 
0x00059b8e: js 0x59b89; call dword ptr [eax - 0x73]; 
0x00059bb3: js 0x59bae; call dword ptr [eax - 0x73]; 
0x00059bd8: js 0x59bd3; call dword ptr [eax - 0x73]; 
0x00059bfd: js 0x59bf8; call dword ptr [eax - 0x73]; 
0x00059c22: js 0x59c1d; call dword ptr [eax - 0x73]; 
0x00059c47: js 0x59c42; call dword ptr [eax - 0x73]; 
0x00059c71: js 0x59c6c; call dword ptr [eax - 0x73]; 
0x00059c96: js 0x59c91; call dword ptr [eax - 0x73]; 
0x00059cbb: js 0x59cb6; call dword ptr [eax - 0x73]; 
0x00059ce0: js 0x59cdb; call dword ptr [eax - 0x73]; 
0x00059d05: js 0x59d00; call dword ptr [eax - 0x73]; 
0x00059d2a: js 0x59d25; call dword ptr [eax - 0x73]; 
0x00059d4f: js 0x59d4a; call dword ptr [eax - 0x73]; 
0x0005af40: js 0x5af3b; call dword ptr [eax - 0x73]; 
0x0005b519: js 0x5b514; call dword ptr [eax - 0x18]; 
0x0005b56d: js 0x5b568; call dword ptr [eax - 0x18]; 
0x000b9988: js 0x5e6a9be5; pop ebx; ret; 
0x000b99a6: js 0x5e6a9e03; pop ebx; ret; 
0x0005f67d: js 0x5f6da; ret; 
0x0006164b: js 0x616a8; ret; 
0x0006ec1e: js 0x6ec49; ret; 
0x0007bd39: js 0x7bd35; jmp dword ptr [esi - 0x70]; 
0x0008475e: js 0x84768; ret; 
0x0008a47d: js 0x8a499; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0008cd3a: js 0x8cd56; add byte ptr [eax], al; add dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x0008cdc9: js 0x8cde5; add byte ptr [eax], al; ret; 
0x0008e731: js 0x8e733; add byte ptr [eax], al; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x0008e768: js 0x8e76a; add byte ptr [eax], al; mov dword ptr [eax + 0xc], edx; mov dword ptr gs:[0x78], eax; ret; 
0x0008e771: js 0x8e773; add byte ptr [eax], al; ret; 
0x0008f164: js 0x8f166; add byte ptr [eax], al; pop ebx; ret; 
0x0008f507: js 0x8f492; ret 0xca83; 
0x00095921: js 0x958a9; stc; call dword ptr [eax - 0x18]; 
0x00099fc5: js 0x99fd0; mov dword ptr [edx + 0x3af4], eax; xor eax, eax; ret; 
0x0009be2c: js 0x9bdb5; stc; call dword ptr [eax - 0x18]; 
0x0009c93f: js 0x9c940; jmp dword ptr [esi - 0x70]; 
0x000a00ec: js 0xa0118; mov eax, 0x107; call dword ptr gs:[0x10]; 
0x000a0b1d: js 0xa0b22; add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x000a0b4d: js 0xa0b52; add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x000a0b9d: js 0xa0ba2; add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x000a0bcd: js 0xa0bd2; add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x000a54fb: js 0xa5496; stc; call dword ptr [eax - 0x73]; 
0x000a62be: js 0xa6258; stc; call dword ptr [eax - 0x73]; 
0x000a62e1: js 0xa627b; stc; call dword ptr [eax - 0x73]; 
0x000c07b5: js 0xc074b; or al, 0; add ecx, 0x10c83b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c0ea4: js 0xc0ee6; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000c7caa: js 0xc7ca5; call dword ptr [eax + 0x68]; 
0x000c7ccd: js 0xc7cc8; call dword ptr [eax + 0x68]; 
0x000ca2d3: js 0xca2ce; call dword ptr [eax - 0x18]; 
0x000ca4ab: js 0xca4a6; call dword ptr [eax - 0x73]; 
0x000cae8a: js 0xcae85; call dword ptr [eax + 0x68]; 
0x000caead: js 0xcaea8; call dword ptr [eax + 0x68]; 
0x000cd2e8: js 0xcd2e3; call dword ptr [eax - 0x18]; 
0x000cd3c8: js 0xcd3c3; call dword ptr [eax - 0x73]; 
0x000ce72c: js 0xce727; call dword ptr [eax + 0x68]; 
0x000ce74f: js 0xce74a; call dword ptr [eax + 0x68]; 
0x000ce948: js 0xce950; add byte ptr [ebx + 0x7c8310c4], al; and al, 0x18; adc byte ptr [edi], cl; xchg esp, eax; ret 0xf883; 
0x000d0c67: js 0xd0c62; call dword ptr [eax - 0x18]; 
0x000d0d94: js 0xd0d8f; call dword ptr [eax - 0x73]; 
0x000d53cc: js 0xd53c7; call dword ptr [eax + 0x68]; 
0x000d53ef: js 0xd53ea; call dword ptr [eax + 0x68]; 
0x000d848c: js 0xd8487; call dword ptr [eax - 0x18]; 
0x000d870c: js 0xd8707; call dword ptr [eax - 0x73]; 
0x000d9727: js 0xd9788; pop esi; ret; 
0x000dd40c: js 0xdd437; stc; call dword ptr [eax + 0x6a]; 
0x000ea088: js 0xea08a; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ea085: js 0xea0ef; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x000eb13c: js 0xeb198; mov eax, 0x166; lea ecx, [ebp - 0x6d324]; mov edi, 0x1000; call dword ptr gs:[0x10]; 
0x000ef6dc: js 0xef67d; stc; call dword ptr [eax - 0x73]; 
0x000f0d80: js 0xf0ddd; ret; 
0x000f38c0: js 0xf391d; ret; 
0x000f46c0: js 0xf471d; ret; 
0x000f71f0: js 0xf724d; ret; 
0x000f8000: js 0xf805d; ret; 
0x000fb5aa: js 0xfb5b0; ret; 
0x000fdad7: js 0xfda5c; in al, dx; or byte ptr [ebp - 0x6b7e07d], cl; call dword ptr [eax + 0x55]; 
0x001a459d: lahf; adc eax, 0xc1830000; adc byte ptr [esi + 0xf], ah; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000e7ce5: lahf; add byte ptr [eax], al; add byte ptr [eax + 0x10b], bh; mov ecx, dword ptr [esp + 0x54]; mov edx, edi; call dword ptr gs:[0x10]; 
0x00156f7c: lahf; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; push eax; call edx; 
0x000b7aad: lahf; add dword ptr [eax], eax; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x000a8531: lahf; add dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x0010c4b8: lahf; call 0x13dd00; nop; mov eax, 0x42; call dword ptr gs:[0x10]; 
0x000a42cb: lahf; dec esp; or dword ptr [eax], eax; add byte ptr [ebx + 0x390c246c], cl; fimul word ptr [ebp - 0x6af0d5fc]; ret; 
0x00197493: lahf; inc ebx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000bac7d: lahf; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00037e06: lahf; or byte ptr [eax], al; add esp, 0x1c; ret; 
0x00195f13: lahf; push esi; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014fb0a: lahf; ret 0xd009; 
0x0010cc4d: lahf; ret 0xe8c1; 
0x0005e8ee: lahf; ret; 
0x000ebafd: lahf; stc; call dword ptr [eax - 0x18]; 
0x000ed835: lahf; stc; call dword ptr [eax - 0x18]; xor ch, byte ptr [eax - 0xc]; jmp dword ptr [esi - 0x70]; 
0x000eb5bb: lahf; stc; call dword ptr [eax - 0x73]; 
0x00163dc5: lahf; std; jmp dword ptr [esi - 0x70]; 
0x00183da8: lahf; sti; jmp dword ptr [esi - 0x70]; 
0x000c5830: lar eax, word ptr [eax]; add byte ptr [ecx - 0x76a7dbac], cl; ret 0x448b; 
0x000e79de: lcall 0, 0xaa870f3b; add byte ptr [eax + 0x194], bh; call dword ptr gs:[0x10]; 
0x00098354: lcall 0, 0xc4870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x00098f6a: lcall 0, 0xc6870f3b; add byte ptr [ebx - 0x5e9ae3a9], cl; push 0x39000000; ret 0x6974; 
0x0002fd12: lcall 0x10c4, 0x83000f99; add esp, 8; pop ebx; ret; 
0x00039102: lcall 0x10c4, 0x83fffea0; add esp, 4; pop ebx; pop esi; ret; 
0x000857e2: lcall 0x18c4, 0x83fffffe; pop ebx; ret; 
0x00085582: lcall 0x1cc4, 0x83ffff90; ret; 
0x001512f9: lcall 0x1cc4, 0x83fffffe; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0004d502: lcall 0x247c, 0x8bffffe6; sbb byte ptr [ebp - 0x687a779], cl; call dword ptr [eax - 0x73]; 
0x000348e7: lcall 0x518b, 0x94; sub al, 0x81; ret 0x200; 
0x000c085c: lcall 0x910c, 0x30010c7; jmp ecx; 
0x000c4258: lcall 0x9bd0, 0x858d0007; stc; call dword ptr [eax - 0x73]; 
0x00198c98: lcall 0xbb1c, 0x300042f; jmp ebx; 
0x000c23cd: lcall 0xc031, 0x5e000000; pop ebx; ret; 
0x00098ce7: lcall 1, 0x39870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x001b2355: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx - 0x147c03bd], cl; add al, 0x89; ret 0xeac1; 
0x001b0288: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx - 0x167c03bf], cl; add al, 0x89; ret 0xeac1; 
0x001765c2: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx], bh; lodsb al, byte ptr [esi]; ret; 
0x000e2f9c: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x448b; 
0x000e65f1: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x468b; 
0x000e3ed3: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x478b; 
0x000e4979: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x748d; 
0x000e1986: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xbe0f; 
0x000dc22f: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xd129; 
0x000e6f17: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xf089; 
0x000df5f2: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xf889; 
0x000dc278: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret; 
0x0012ee6f: lds eax, ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012ef01: lds eax, ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0003ef7a: lds eax, ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x000a6d4f: lds eax, ptr [ebx - 0x127aef3c]; jne 0xa6c89; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax + 0x90]; call dword ptr [eax]; 
0x0017d824: lds eax, ptr [ebx - 0x7bf00008]; ret 1; 
0x001a7fe7: lds eax, ptr [ecx]; add byte ptr [eax], al; pop ebx; ret; 
0x00041712: lds eax, ptr [ecx]; fcom dword ptr [eax - 0x75]; inc esp; and al, 0x28; call eax; 
0x001456d8: lds ebp, ptr [eax]; and byte ptr [eax], al; add byte ptr [ecx - 0x17dbdba4], cl; rcr edx, 0xed; dec dword ptr [ecx - 0x76d3dbbc]; ret; 
0x000a2277: lds ebp, ptr [ecx]; ret 0x4589; 
0x00136abf: lds ebp, ptr [ecx]; ret 0x6c01; 
0x00036e94: lds ebp, ptr [ecx]; ret; 
0x0016fafb: lds ebx, ptr [eax + 0x5a]; push dword ptr [esi + 0x10]; push ebx; call dword ptr [esi + 0x14]; 
0x0003dfb9: lds ebx, ptr [ebx + 0x5e]; mov eax, ebp; pop edi; pop ebp; ret; 
0x0015a088: lds ebx, ptr [esi - 7]; call dword ptr [eax + 0x55]; 
0x00158e1b: lds ebx, ptr [esi - 7]; call dword ptr [eax - 0x18]; 
0x00158fae: lds ebx, ptr [esi - 7]; call dword ptr [eax - 0x73]; 
0x0009f41c: lds ecx, ptr [ebp - 0x19fc337d]; call dword ptr [eax + 0x56]; 
0x0010e359: lds ecx, ptr [ebp - 0x65e737d]; call dword ptr [eax - 0x73]; 
0x00177f10: lds ecx, ptr [ebp - 0x69b7e7d]; call dword ptr [ecx + 0x6a]; 
0x00060932: lds ecx, ptr [ebp - 0x6cdd97d]; call dword ptr [ebp + 0x50]; 
0x00030270: lds ecx, ptr [ecx - 0x6817dbc4]; mov dl, 7; add byte ptr [ecx - 0x76bbdbbc], cl; ret 0xc483; 
0x00029319: lds ecx, ptr [edi]; test dword ptr [ebp - 0x74ffffff], ebx; jl 0x29347; sub byte ptr [ebp - 0x6945379], cl; call dword ptr [eax - 0x73]; 
0x000abb88: lds ecx, ptr [edi]; xchg esp, eax; ret 0xc739; 
0x00195154: lds ecx, ptr [edx - 1]; inc dword ptr [ecx + 0x46458c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000a0f47: lds edi, ptr [ecx]; ret; 
0x0013d018: lds esi, ptr [esi - 0x12]; jmp dword ptr [esi - 0x70]; 
0x001ab99b: lea eax, [eax + 0x10]; test edx, edx; jne 0x1ab9b0; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x00032b7b: lea eax, [eax + 0x11cc]; ret; 
0x000959c4: lea eax, [eax + 0x2a0]; mov dword ptr [eax], edx; ret; 
0x00099d71: lea eax, [eax + 0x3b2c]; push eax; call 0x901f0; add esp, 0x1c; ret; 
0x00126b71: lea eax, [eax + 0x45b0]; push eax; call 0x126c90; add esp, 0x1c; ret; 
0x001abaf5: lea eax, [eax + 0xa]; pop edi; ret; 
0x001aba4b: lea eax, [eax + 0xb]; pop edi; ret; 
0x001abb05: lea eax, [eax + 0xc]; pop edi; ret; 
0x001abb15: lea eax, [eax + 0xd]; pop edi; ret; 
0x001abb25: lea eax, [eax + 0xe]; pop edi; ret; 
0x001aba74: lea eax, [eax + 0xf]; pop edi; ret; 
0x001aba89: lea eax, [eax + 1]; pop edi; ret; 
0x001aba99: lea eax, [eax + 2]; pop edi; ret; 
0x001ab9e1: lea eax, [eax + 3]; pop edi; ret; 
0x001abaa9: lea eax, [eax + 4]; pop edi; ret; 
0x001abab5: lea eax, [eax + 5]; pop edi; ret; 
0x001abac5: lea eax, [eax + 6]; pop edi; ret; 
0x001aba14: lea eax, [eax + 7]; pop edi; ret; 
0x001abad5: lea eax, [eax + 8]; pop edi; ret; 
0x001abae5: lea eax, [eax + 9]; pop edi; ret; 
0x0009c30c: lea eax, [eax + eax + 2]; ret; 
0x0009afa6: lea eax, [eax + eax - 1]; pop esi; pop edi; pop ebp; ret; 
0x0005362b: lea eax, [eax + eax*8 + 6]; call 0x535f0; jmp eax; 
0x00054e70: lea eax, [eax + eax*8]; add eax, dword ptr [esp]; add eax, 0xd; add esp, 4; jmp eax; 
0x000c4974: lea eax, [eax + ebx*4]; pop ebx; pop esi; ret; 
0x000c1843: lea eax, [eax + ecx + 0x10]; ret; 
0x000c1853: lea eax, [eax + ecx + 0x20]; ret; 
0x000c1863: lea eax, [eax + ecx + 0x30]; ret; 
0x0019a416: lea eax, [eax + ecx]; pop edi; call 0x189c1d; add ebx, 0x41691; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198316: lea eax, [eax + ecx]; pop edi; call 0x189c1d; add ebx, 0x43511; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196316: lea eax, [eax + ecx]; pop edi; call 0x189c1d; add ebx, 0x45291; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000c1593: lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x000c15a3: lea eax, [eax + edi + 0x20]; pop edi; ret; 
0x000c1573: lea eax, [eax + edi - 0x10]; pop edi; ret; 
0x000c1ce3: lea eax, [eax + edx + 0x10]; ret; 
0x000c1cf3: lea eax, [eax + edx + 0x20]; ret; 
0x0017079f: lea eax, [eax + edx + 0x28]; push eax; push edi; call dword ptr [ecx + 0x18]; 
0x00188e29: lea eax, [eax + edx + 0x5c]; ret; 
0x000c1cc3: lea eax, [eax + edx - 0x10]; ret; 
0x000c72fc: lea eax, [eax + edx*4]; pop edi; pop ebp; ret; 
0x000c5d9a: lea eax, [eax - 0x1655b4]; test byte ptr [ecx + 0x7b], 4; cmove eax, edx; ret; 
0x000c4daa: lea eax, [eax - 0x166314]; test byte ptr [ecx + 0x7b], 4; cmove eax, edx; ret; 
0x00125ec1: lea eax, [eax - 0x65b70]; call 0x125bb0; test eax, eax; je 0x125ed8; add esp, 0xc; ret; 
0x00125e71: lea eax, [eax - 0x65b90]; call 0x125bb0; test eax, eax; je 0x125e88; add esp, 0xc; ret; 
0x00024fbe: lea eax, [eax - 0x690ac]; ret; 
0x00024fde: lea eax, [eax - 0x690b4]; ret; 
0x00024f96: lea eax, [eax - 0x69894]; push eax; push 1; call 0x121920; add esp, 0x1c; ret; 
0x00184015: lea eax, [eax - 0x6993c]; push eax; call 0x11f760; add esp, 0x1c; ret; 
0x0016ddf1: lea eax, [eax - 0x69c75]; push eax; push 0xa; call 0x1565b0; add esp, 0x1c; ret; 
0x0016db21: lea eax, [eax - 0x69c82]; push eax; push 9; call 0x1565b0; add esp, 0x1c; ret; 
0x0016d711: lea eax, [eax - 0x69c90]; push eax; push 8; call 0x1565b0; add esp, 0x1c; ret; 
0x0016d091: lea eax, [eax - 0x69c9c]; push eax; push 6; call 0x1565b0; add esp, 0x1c; ret; 
0x0016ccf1: lea eax, [eax - 0x69cab]; push eax; push 5; call 0x1565b0; add esp, 0x1c; ret; 
0x0016c671: lea eax, [eax - 0x69cb9]; push eax; push 4; call 0x1565b0; add esp, 0x1c; ret; 
0x0016b311: lea eax, [eax - 0x69d0d]; push eax; push 3; call 0x1565b0; add esp, 0x1c; ret; 
0x00169ee1: lea eax, [eax - 0x69d77]; push eax; push 1; call 0x1565b0; add esp, 0x1c; ret; 
0x00169a81: lea eax, [eax - 0x69d84]; push eax; push 0; call 0x1565b0; add esp, 0x1c; ret; 
0x000c6aaa: lea eax, [eax - 0x92964]; test byte ptr [ecx + 0x7b], 4; cmove eax, edx; ret; 
0x000c4d4a: lea eax, [eax - 0x92b44]; test byte ptr [ecx + 0x7b], 4; cmove eax, edx; ret; 
0x000ac43a: lea eax, [eax - 0x93834]; test byte ptr [ecx + 0x7b], 4; cmove eax, edx; ret; 
0x000ac63a: lea eax, [eax - 0x97114]; test byte ptr [ecx + 0x76], 0x10; cmove eax, edx; ret; 
0x000ac46a: lea eax, [eax - 0x97214]; test byte ptr [ecx + 0x76], 0x10; cmove eax, edx; ret; 
0x000ab4fa: lea eax, [eax - 0x97394]; test byte ptr [ecx + 0x76], 0x10; cmove eax, edx; ret; 
0x00094849: lea eax, [eax*8 + 6]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000d84be: lea eax, [eax]; add byte ptr [eax], al; add byte ptr [ebp - 0x35f373], cl; call dword ptr [eax - 0x73]; 
0x000751cd: lea eax, [eax]; add byte ptr [eax], al; add byte ptr [ecx - 0x4f773], cl; call dword ptr [eax + 0x53]; 
0x0006a75d: lea eax, [eax]; add byte ptr [eax], al; add byte ptr [ecx - 0x59373], cl; call dword ptr [ebx - 0x75]; 
0x0012342b: lea eax, [eax]; add byte ptr [eax], al; add esp, 0x18; mov eax, ebx; pop ebx; ret; 
0x0004a84a: lea eax, [eax]; ret 0xfff9; 
0x000eb45b: lea eax, [ebp + 2]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000eb344: lea eax, [ebp + 8]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00043222: lea eax, [ebx + 0x20]; pop ebx; ret; 
0x0016ec29: lea eax, [ebx + 0xa5ec]; pop ebx; ret; 
0x00156bbe: lea eax, [ebx + 4]; push eax; call edi; 
0x000421c5: lea eax, [ebx + 6]; pop ebx; ret; 
0x000a03d5: lea eax, [ebx + ebx]; mov ebx, dword ptr [eax]; mov ecx, dword ptr [esp + 0x64]; mov esi, dword ptr [esp + 4]; mov eax, 0x199; call dword ptr gs:[0x10]; 
0x00129f80: lea eax, [ebx - 1]; cmp eax, 2; jbe 0x129fb0; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x0008160d: lea eax, [ebx - 1]; pop ebx; ret; 
0x00150ea5: lea eax, [ebx]; add byte ptr [ecx + 0xedf6cc6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x00043156: lea eax, [ecx + 0x20]; pop ebx; ret; 
0x000433ad: lea eax, [ecx + 0x20]; ret; 
0x001aaf30: lea eax, [ecx + 0xa]; ret; 
0x001aaf40: lea eax, [ecx + 0xb]; ret; 
0x001aaebb: lea eax, [ecx + 0xc]; ret; 
0x001aaf50: lea eax, [ecx + 0xd]; ret; 
0x001aaf60: lea eax, [ecx + 0xe]; ret; 
0x001aaf70: lea eax, [ecx + 0xf]; ret; 
0x000fbaf8: lea eax, [ecx + 1]; pop ebx; pop esi; ret; 
0x001aaec0: lea eax, [ecx + 1]; ret; 
0x001aaed0: lea eax, [ecx + 2]; ret; 
0x001aaee0: lea eax, [ecx + 3]; ret; 
0x001aae68: lea eax, [ecx + 4]; ret; 
0x001aaef0: lea eax, [ecx + 5]; ret; 
0x001aaf00: lea eax, [ecx + 6]; ret; 
0x001aaf10: lea eax, [ecx + 7]; ret; 
0x001aae92: lea eax, [ecx + 8]; ret; 
0x001aaf20: lea eax, [ecx + 9]; ret; 
0x000c188a: lea eax, [ecx + eax + 0x10]; ret; 
0x000c189a: lea eax, [ecx + eax + 0x20]; ret; 
0x000c18aa: lea eax, [ecx + eax + 0x30]; ret; 
0x0008f5f4: lea eax, [ecx + eax + 0x4000]; ret; 
0x0007fb58: lea eax, [ecx + esi]; pop esi; pop edi; pop ebp; ret; 
0x0003d520: lea eax, [ecx - 1]; mov dword ptr [edx + 0x1f0], eax; mov eax, ecx; ret; 
0x000bb1a8: lea eax, [edi + 0x10]; pop edi; pop esi; pop ebx; ret; 
0x000bb1be: lea eax, [edi + 0x11]; pop edi; pop esi; pop ebx; ret; 
0x000bb1e0: lea eax, [edi + 0x12]; pop edi; pop esi; pop ebx; ret; 
0x000bb1fe: lea eax, [edi + 0x13]; pop edi; pop esi; pop ebx; ret; 
0x000bb21e: lea eax, [edi + 0x14]; pop edi; pop esi; pop ebx; ret; 
0x0011b834: lea eax, [edi + 0x14]; push eax; push 1; push dword ptr [esp + 0x30]; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x0011bab0: lea eax, [edi + 0x14]; push eax; push 5; push dword ptr [esp + 0x30]; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x000bb244: lea eax, [edi + 0x15]; pop edi; pop esi; pop ebx; ret; 
0x000bb262: lea eax, [edi + 0x16]; pop edi; pop esi; pop ebx; ret; 
0x000bb282: lea eax, [edi + 0x17]; pop edi; pop esi; pop ebx; ret; 
0x000bb2a2: lea eax, [edi + 0x18]; pop edi; pop esi; pop ebx; ret; 
0x000bb2c8: lea eax, [edi + 0x19]; pop edi; pop esi; pop ebx; ret; 
0x000bb2ea: lea eax, [edi + 0x1a]; pop edi; pop esi; pop ebx; ret; 
0x000bb318: lea eax, [edi + 0x1b]; pop edi; pop esi; pop ebx; ret; 
0x000bb338: lea eax, [edi + 0x1c]; pop edi; pop esi; pop ebx; ret; 
0x000bb352: lea eax, [edi + 0x1d]; pop edi; pop esi; pop ebx; ret; 
0x000bb372: lea eax, [edi + 0x1e]; pop edi; pop esi; pop ebx; ret; 
0x000bb392: lea eax, [edi + 0x1f]; pop edi; pop esi; pop ebx; ret; 
0x000bb3b2: lea eax, [edi + 0x20]; pop edi; pop esi; pop ebx; ret; 
0x0010b9ab: lea eax, [edi + 0x3fac]; push eax; call 0x8f2d0; call dword ptr [esi]; 
0x000bb601: lea eax, [edi + 0x40]; pop edi; pop esi; pop ebx; ret; 
0x000bb0f0: lea eax, [edi + 0xa]; pop edi; pop esi; pop ebx; ret; 
0x001a9f20: lea eax, [edi + 0xa]; pop edi; ret; 
0x000bb10e: lea eax, [edi + 0xb]; pop edi; pop esi; pop ebx; ret; 
0x001a9de6: lea eax, [edi + 0xb]; pop edi; ret; 
0x000bb12e: lea eax, [edi + 0xc]; pop edi; pop esi; pop ebx; ret; 
0x001a9f40: lea eax, [edi + 0xc]; pop edi; ret; 
0x000bb152: lea eax, [edi + 0xd]; pop edi; pop esi; pop ebx; ret; 
0x001a9f50: lea eax, [edi + 0xd]; pop edi; ret; 
0x000bb172: lea eax, [edi + 0xe]; pop edi; pop esi; pop ebx; ret; 
0x001a9f60: lea eax, [edi + 0xe]; pop edi; ret; 
0x000bb192: lea eax, [edi + 0xf]; pop edi; pop esi; pop ebx; ret; 
0x001a9da0: lea eax, [edi + 0xf]; pop edi; ret; 
0x000bb004: lea eax, [edi + 1]; pop edi; pop esi; pop ebx; ret; 
0x001a9ea0: lea eax, [edi + 1]; pop edi; ret; 
0x000bb016: lea eax, [edi + 2]; pop edi; pop esi; pop ebx; ret; 
0x001a9eb0: lea eax, [edi + 2]; pop edi; ret; 
0x000bb02c: lea eax, [edi + 3]; pop edi; pop esi; pop ebx; ret; 
0x001a9d43: lea eax, [edi + 3]; pop edi; ret; 
0x000bb044: lea eax, [edi + 4]; pop edi; pop esi; pop ebx; ret; 
0x001a9ed0: lea eax, [edi + 4]; pop edi; ret; 
0x000bb05a: lea eax, [edi + 5]; pop edi; pop esi; pop ebx; ret; 
0x001a9ee0: lea eax, [edi + 5]; pop edi; ret; 
0x000bb07c: lea eax, [edi + 6]; pop edi; pop esi; pop ebx; ret; 
0x001a9ef0: lea eax, [edi + 6]; pop edi; ret; 
0x000bb09a: lea eax, [edi + 7]; pop edi; pop esi; pop ebx; ret; 
0x001a9cfd: lea eax, [edi + 7]; pop edi; ret; 
0x000bb0b8: lea eax, [edi + 8]; pop edi; pop esi; pop ebx; ret; 
0x001a9f00: lea eax, [edi + 8]; pop edi; ret; 
0x000bb0ce: lea eax, [edi + 9]; pop edi; pop esi; pop ebx; ret; 
0x001a9f10: lea eax, [edi + 9]; pop edi; ret; 
0x000c15ca: lea eax, [edi + eax + 0x10]; pop edi; ret; 
0x000c15da: lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x000c14bf: lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x0019b73d: lea eax, [edi + eax + 0xa]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199d17: lea eax, [edi + eax + 0xa]; pop edi; call 0x189c1d; add ebx, 0x41d8f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197c67: lea eax, [edi + eax + 0xa]; pop edi; call 0x189c1d; add ebx, 0x43bbf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195c67: lea eax, [edi + eax + 0xa]; pop edi; call 0x189c1d; add ebx, 0x4593f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b7cd: lea eax, [edi + eax + 0xb]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199e77: lea eax, [edi + eax + 0xb]; pop edi; call 0x189c1d; add ebx, 0x41c2f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197db7: lea eax, [edi + eax + 0xb]; pop edi; call 0x189c1d; add ebx, 0x43a6f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195db7: lea eax, [edi + eax + 0xb]; pop edi; call 0x189c1d; add ebx, 0x457ef; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b85d: lea eax, [edi + eax + 0xc]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b8ed: lea eax, [edi + eax + 0xd]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019a137: lea eax, [edi + eax + 0xd]; pop edi; call 0x189c1d; add ebx, 0x4196f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198057: lea eax, [edi + eax + 0xd]; pop edi; call 0x189c1d; add ebx, 0x437cf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196057: lea eax, [edi + eax + 0xd]; pop edi; call 0x189c1d; add ebx, 0x4554f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b97d: lea eax, [edi + eax + 0xe]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019ba0d: lea eax, [edi + eax + 0xf]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019a3f7: lea eax, [edi + eax + 0xf]; pop edi; call 0x189c1d; add ebx, 0x416af; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001982f7: lea eax, [edi + eax + 0xf]; pop edi; call 0x189c1d; add ebx, 0x4352f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001962f7: lea eax, [edi + eax + 0xf]; pop edi; call 0x189c1d; add ebx, 0x452af; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b22d: lea eax, [edi + eax + 1]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197097: lea eax, [edi + eax + 1]; pop edi; call 0x189c1d; add ebx, 0x4478f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195097: lea eax, [edi + eax + 1]; pop edi; call 0x189c1d; add ebx, 0x4650f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b2bd: lea eax, [edi + eax + 2]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001971e7: lea eax, [edi + eax + 2]; pop edi; call 0x189c1d; add ebx, 0x4463f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001951e7: lea eax, [edi + eax + 2]; pop edi; call 0x189c1d; add ebx, 0x463bf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b34d: lea eax, [edi + eax + 3]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197337: lea eax, [edi + eax + 3]; pop edi; call 0x189c1d; add ebx, 0x444ef; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b3dd: lea eax, [edi + eax + 4]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b46d: lea eax, [edi + eax + 5]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199637: lea eax, [edi + eax + 5]; pop edi; call 0x189c1d; add ebx, 0x4246f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001975d7: lea eax, [edi + eax + 5]; pop edi; call 0x189c1d; add ebx, 0x4424f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001955d7: lea eax, [edi + eax + 5]; pop edi; call 0x189c1d; add ebx, 0x45fcf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b4fd: lea eax, [edi + eax + 6]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b58d: lea eax, [edi + eax + 7]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b61d: lea eax, [edi + eax + 8]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199a57: lea eax, [edi + eax + 8]; pop edi; call 0x189c1d; add ebx, 0x4204f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001959c7: lea eax, [edi + eax + 8]; pop edi; call 0x189c1d; add ebx, 0x45bdf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b6ad: lea eax, [edi + eax + 9]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195b17: lea eax, [edi + eax + 9]; pop edi; call 0x189c1d; add ebx, 0x45a8f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001aa2c3: lea eax, [edi - 0x10]; pop edi; ret; 
0x001aa380: lea eax, [edi - 0xa]; pop edi; ret; 
0x001aa370: lea eax, [edi - 0xb]; pop edi; ret; 
0x001aa2e8: lea eax, [edi - 0xc]; pop edi; ret; 
0x001aa360: lea eax, [edi - 0xd]; pop edi; ret; 
0x001aa350: lea eax, [edi - 0xe]; pop edi; ret; 
0x001aa340: lea eax, [edi - 0xf]; pop edi; ret; 
0x001aa3f0: lea eax, [edi - 1]; pop edi; ret; 
0x001aa3e0: lea eax, [edi - 2]; pop edi; ret; 
0x001aa3d0: lea eax, [edi - 3]; pop edi; ret; 
0x001aa33b: lea eax, [edi - 4]; pop edi; ret; 
0x001aa3c0: lea eax, [edi - 5]; pop edi; ret; 
0x001aa3b0: lea eax, [edi - 6]; pop edi; ret; 
0x001aa3a0: lea eax, [edi - 7]; pop edi; ret; 
0x001aa312: lea eax, [edi - 8]; pop edi; ret; 
0x001aa390: lea eax, [edi - 9]; pop edi; ret; 
0x001a9e90: lea eax, [edi]; pop edi; ret; 
0x000b788d: lea eax, [edx + 0x10]; pop edi; pop ebx; ret; 
0x0008cdf3: lea eax, [edx + 0x1a74]; push eax; call 0x8f2d0; add esp, 0x1c; ret; 
0x000b5b3e: lea eax, [edx + 0xa]; pop edi; ret; 
0x000b5c7e: lea eax, [edx + 0xa]; ret; 
0x000b88a7: lea eax, [edx + 0xb]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b5a2e: lea eax, [edx + 0xb]; pop edi; ret; 
0x000b5c9e: lea eax, [edx + 0xb]; ret; 
0x000b784e: lea eax, [edx + 0xc]; pop edi; pop ebx; ret; 
0x000b5b62: lea eax, [edx + 0xc]; pop edi; ret; 
0x000b5cc2: lea eax, [edx + 0xc]; ret; 
0x000b5b82: lea eax, [edx + 0xd]; pop edi; ret; 
0x000b5ce2: lea eax, [edx + 0xd]; ret; 
0x000b8855: lea eax, [edx + 0xe]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b5ba2: lea eax, [edx + 0xe]; pop edi; ret; 
0x000b5d02: lea eax, [edx + 0xe]; ret; 
0x000b5a68: lea eax, [edx + 0xf]; pop edi; ret; 
0x000b5d18: lea eax, [edx + 0xf]; ret; 
0x000abeb3: lea eax, [edx + 1]; pop ebx; pop esi; ret; 
0x000b5a86: lea eax, [edx + 1]; pop edi; ret; 
0x000b5bc6: lea eax, [edx + 1]; ret; 
0x000b5a9c: lea eax, [edx + 2]; pop edi; ret; 
0x000b5bdc: lea eax, [edx + 2]; ret; 
0x000b8984: lea eax, [edx + 3]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000abed6: lea eax, [edx + 3]; pop ebx; pop esi; ret; 
0x000b59b4: lea eax, [edx + 3]; pop edi; ret; 
0x000b5be4: lea eax, [edx + 3]; ret; 
0x000abeea: lea eax, [edx + 4]; pop ebx; pop esi; ret; 
0x000b77e1: lea eax, [edx + 4]; pop edi; pop ebx; ret; 
0x000b5aba: lea eax, [edx + 4]; pop edi; ret; 
0x000b5bfa: lea eax, [edx + 4]; ret; 
0x000abefa: lea eax, [edx + 5]; pop ebx; pop esi; ret; 
0x000b5acc: lea eax, [edx + 5]; pop edi; ret; 
0x000b5c0c: lea eax, [edx + 5]; ret; 
0x000abf0e: lea eax, [edx + 6]; pop ebx; pop esi; ret; 
0x000b5aea: lea eax, [edx + 6]; pop edi; ret; 
0x000b5c1a: lea eax, [edx + 6]; ret; 
0x000b892d: lea eax, [edx + 7]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000abe9d: lea eax, [edx + 7]; pop ebx; pop esi; ret; 
0x000b59e8: lea eax, [edx + 7]; pop edi; ret; 
0x000b5c28: lea eax, [edx + 7]; ret; 
0x000b7813: lea eax, [edx + 8]; pop edi; pop ebx; ret; 
0x000b5afe: lea eax, [edx + 8]; pop edi; ret; 
0x000b5c3e: lea eax, [edx + 8]; ret; 
0x000b5b20: lea eax, [edx + 9]; pop edi; ret; 
0x000b5c60: lea eax, [edx + 9]; ret; 
0x000c1cba: lea eax, [edx + eax + 0x30]; ret; 
0x00141fd4: lea eax, [edx + eax + 8]; pop ebx; ret; 
0x000f0dd7: lea eax, [edx + edi*8 - 1]; dec dword ptr [ecx - 0x5bf7b]; jmp dword ptr [ebp - 0x5f]; 
0x000ac33a: lea eax, [edx - 0x181464]; test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x17dec4]; cmove eax, edx; ret; 
0x000aa11a: lea eax, [edx - 0x183764]; test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x17c804]; cmove eax, edx; ret; 
0x001489eb: lea eax, [edx - 0x68bb4]; push eax; call 0x34e80; add esp, 0x10; add esp, 0xc; ret; 
0x0005ad31: lea eax, [edx - 0x6cf99]; push eax; call 0x11f760; add esp, 0x1c; ret; 
0x000d46f6: lea eax, [edx - 0x93144]; and ch, 2; lea edx, [edx - 0x165354]; cmove eax, edx; ret; 
0x000a8b36: lea eax, [edx - 0x96c44]; and ch, 2; lea edx, [edx - 0x17cc74]; cmove eax, edx; ret; 
0x000ac2f6: lea eax, [edx - 0x9bb24]; and ch, 2; lea edx, [edx - 0x17cfd4]; cmove eax, edx; ret; 
0x000a9626: lea eax, [edx - 0x9e034]; and ch, 2; lea edx, [edx - 0x17d0d4]; cmove eax, edx; ret; 
0x000ac376: lea eax, [edx - 0x9fa54]; and ch, 2; lea edx, [edx - 0x18f114]; cmove eax, edx; ret; 
0x000aa2f6: lea eax, [edx - 0xa0ec4]; and ch, 2; lea edx, [edx - 0x17c244]; cmove eax, edx; ret; 
0x000a93b3: lea eax, [edx - 0xa6214]; and ebx, 1; lea edx, [edx - 0xa1fe4]; cmovne eax, edx; pop ebx; ret; 
0x0013d623: lea eax, [edx - 0xa6224]; and ebx, 1; lea edx, [edx - 0xa1ff4]; cmovne eax, edx; pop ebx; ret; 
0x000a9403: lea eax, [edx - 0xa81f4]; and ebx, 1; lea edx, [edx - 0xa2fd4]; cmovne eax, edx; pop ebx; ret; 
0x0013d673: lea eax, [edx - 0xa8204]; and ebx, 1; lea edx, [edx - 0xa2fe4]; cmovne eax, edx; pop ebx; ret; 
0x0013d5d3: lea eax, [edx - 0xaa204]; and ebx, 1; lea edx, [edx - 0xa3fc4]; cmovne eax, edx; pop ebx; ret; 
0x000a9481: lea eax, [edx - 0xabbf4]; test byte ptr [ecx + 0x19c], 1; lea edx, [edx - 0xab574]; cmovne eax, edx; ret; 
0x0013d6b1: lea eax, [edx - 0xabc04]; test byte ptr [ecx + 0x19c], 1; lea edx, [edx - 0xab584]; cmovne eax, edx; ret; 
0x00043019: lea eax, [edx - 1]; xor eax, edx; cmp edx, eax; setle al; ret; 
0x000b5a74: lea eax, [edx]; pop edi; ret; 
0x000b5bb4: lea eax, [edx]; ret; 
0x0011bbd9: lea eax, [esi + 0x14]; push eax; push 2; push dword ptr [esp + 0x30]; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x0007ac8c: lea eax, [esi + 0x28]; push eax; push 1; push esi; call edx; 
0x000c2b33: lea eax, [esi + 3]; pop esi; pop edi; ret; 
0x00141781: lea eax, [esi + edi]; pop ebx; pop esi; pop edi; ret; 
0x000db3ef: lea eax, [esp + 0x104]; mov dword ptr [esp + 0x30], eax; push eax; mov eax, dword ptr [esp + 0x64]; call eax; 
0x00132450: lea eax, [esp + 0x10]; mov dword ptr [esp + 0x24], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001316b2: lea eax, [esp + 0x24]; mov dword ptr [esp + 0x38], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000d454e: lea eax, [esp + 0x34]; push eax; push dword ptr [esi + 8]; call ebx; 
0x00087cd8: lea eax, [esp + 0x38]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x000c334e: lea eax, [esp + 0x40]; push eax; push dword ptr [edi]; call ebx; 
0x00083103: lea eax, [esp + 0x40]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x0015a43e: lea eax, [esp + 0x48]; push eax; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x40]; call esi; 
0x000c6bb4: lea eax, [esp + 0x64]; mov dword ptr [esp + 0x34], ecx; push eax; push ebp; call esi; 
0x000c43ca: lea eax, [esp + 0x64]; mov dword ptr [esp + 0x34], edx; push eax; push ebp; call esi; 
0x0002a2dc: lea eax, [esp + 0x70]; push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x54]; call esi; 
0x0002f27f: lea eax, [esp + 0x78]; push eax; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call edi; 
0x0015ff54: lea eax, [esp + 0x9a4]; push eax; push esi; mov ecx, dword ptr [esp + 0x3c]; call ecx; 
0x0007b2a6: lea eax, [esp + 8]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x00087fe2: lea eax, [esp + 8]; push eax; push esi; call dword ptr [edi + 0x48]; 
0x000c1889: lea eax, es:[ecx + eax + 0x10]; ret; 
0x000c15c9: lea eax, es:[edi + eax + 0x10]; pop edi; ret; 
0x00078796: lea ebp, [eax - 0x76000005]; ret 0xc889; 
0x000d6163: lea ebp, [eax - 0x76000037]; ret 0x8589; 
0x000d61b8: lea ebp, [eax - 0x76000037]; test dword ptr [ecx + ecx*8 + 0x468dffff], ecx; dec dword ptr [edi]; dec edi; ret 0x48d; 
0x000a0118: lea ebp, [ebx + ebx]; mov eax, 0x107; mov ebx, dword ptr [ebp]; call dword ptr gs:[0x10]; 
0x0017e8d5: lea ebp, [edi + edi*8 - 1]; call dword ptr [eax - 0x18]; 
0x00068c2f: lea ebp, [edx + edi*8 - 1]; call dword ptr [eax - 0x18]; 
0x0006a763: lea ebp, [edx + edi*8 - 1]; call dword ptr [ebx - 0x75]; 
0x00068175: lea ebp, [edx + edi*8 - 1]; dec dword ptr [ecx - 0x59b7b]; dec dword ptr [ebp - 0x4477b]; call dword ptr [eax - 0x18]; 
0x0006c0a3: lea ebp, [edx + edi*8 - 1]; inc dword ptr [ecx]; ret 0xd801; 
0x0016ef76: lea ebp, [esp + 0x40]; push ebp; push eax; call dword ptr [ecx + 8]; 
0x00186df0: lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000ea0ab: lea ebx, [eax + 0x6c]; mov dword ptr [eax + 0x6c], ebx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x00092cb8: lea ebx, [eax + 0x6c]; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x000d46b0: lea ebx, [eax + 0xc]; mov eax, ebx; pop ebx; ret; 
0x000d4690: lea ebx, [eax + 4]; mov eax, ebx; pop ebx; ret; 
0x000d46a0: lea ebx, [eax + 8]; mov eax, ebx; pop ebx; ret; 
0x000d9b12: lea ebx, [ebx + ebx - 1]; mov eax, ebx; pop ebx; pop esi; ret; 
0x000e7602: lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x000915df: lea ebx, [edi + eax + 0x28]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00144d60: lea ebx, [edi + edi*8 - 1]; jmp dword ptr [ebp - 0x5f]; 
0x00128dcd: lea ebx, [edx + 1]; jne 0x128dab; mov eax, esi; pop ebx; pop esi; ret; 
0x0008b58c: lea ebx, [edx + 1]; push eax; push esi; call dword ptr [ebp + 0xc]; 
0x0008004c: lea ebx, [edx + 4]; mov dword ptr [eax + 0x10], ebx; mov eax, ecx; mov dword ptr [edx], ecx; pop ebx; ret; 
0x000a17b3: lea ebx, [esi + 0x3c1c]; call dword ptr gs:[0x10]; 
0x00177c35: lea ebx, [esp + 0xe0]; push ebx; push eax; call dword ptr [edx + 8]; 
0x001145b0: lea ebx, [esp + 8]; mov eax, 0x13e; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0008c92b: lea ecx, [eax + 0x30]; mov eax, dword ptr [eax + 0x30]; test eax, eax; jne 0x8c948; ret; 
0x00122a39: lea ecx, [eax + 0x5402]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00042227: lea ecx, [eax + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0005bb48: lea ecx, [eax + 0x9c]; mov dword ptr [eax + 8], ecx; mov dword ptr [eax + 4], edx; mov dword ptr [eax], edx; ret; 
0x00179164: lea ecx, [eax + 0xa78c]; mov eax, dword ptr gs:[0]; mov dword ptr [eax + edx], ecx; ret; 
0x0003d50b: lea ecx, [eax + 1]; mov dword ptr [edx + 0x1f4], ecx; ret; 
0x000c0f2e: lea ecx, [eax + eax]; add ecx, 0x10c143; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009b98c: lea ecx, [eax - 2]; lock cmpxchg dword ptr [edx], ecx; jne 0x9b986; xor eax, eax; pop ebx; ret; 
0x0009399b: lea ecx, [ebp + 0x220]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x000eb143: lea ecx, [ebp - 0x6d324]; mov edi, 0x1000; call dword ptr gs:[0x10]; 
0x000a073b: lea ecx, [ebp - 0x722d4]; call dword ptr gs:[0x10]; 
0x0012f41d: lea ecx, [ebx + ebx]; pop ebx; shr eax, cl; and eax, 3; ret; 
0x00064f8a: lea ecx, [ebx - 0x20]; cmp cl, 0x5a; jbe 0x65934; mov edi, eax; jmp edx; 
0x00094e8a: lea ecx, [ebx - 0x72504]; mov eax, 0xaf; mov dword ptr [esp + 8], edx; mov ebx, ebp; mov esi, 8; call dword ptr gs:[0x10]; 
0x00052f05: lea ecx, [ecx + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0017cc58: lea ecx, [ecx - 0x954]; mov dword ptr [eax + 0x14], edx; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x000b326d: lea ecx, [edx + 0x10]; jne 0xb3800; pop edi; pop ebx; ret; 
0x000b3aad: lea ecx, [edx + 0x10]; jne 0xb3801; pop ebx; ret; 
0x000b7f7e: lea ecx, [edx + 0x10]; jne 0xb7c51; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b39c5: lea ecx, [edx + 0xa]; jne 0xb3801; pop ebx; ret; 
0x000b7e66: lea ecx, [edx + 0xa]; jne 0xb7c51; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b39e3: lea ecx, [edx + 0xb]; jne 0xb3801; pop ebx; ret; 
0x000b7e94: lea ecx, [edx + 0xb]; jne 0xb7c51; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b3233: lea ecx, [edx + 0xc]; jne 0xb3800; pop edi; pop ebx; ret; 
0x000b3a03: lea ecx, [edx + 0xc]; jne 0xb3801; pop ebx; ret; 
0x000b7ec4: lea ecx, [edx + 0xc]; jne 0xb7c51; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b35f7: lea ecx, [edx + 0xd]; jne 0xb3800; pop edi; pop ebx; ret; 
0x000b3a27: lea ecx, [edx + 0xd]; jne 0xb3801; pop ebx; ret; 
0x000b7ef8: lea ecx, [edx + 0xd]; jne 0xb7c51; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b3627: lea ecx, [edx + 0xe]; jne 0xb3800; pop edi; pop ebx; ret; 
0x000b3a57: lea ecx, [edx + 0xe]; jne 0xb3801; pop ebx; ret; 
0x000b3657: lea ecx, [edx + 0xf]; jne 0xb3800; pop edi; pop ebx; ret; 
0x000b3a87: lea ecx, [edx + 0xf]; jne 0xb3801; pop ebx; ret; 
0x000b7f58: lea ecx, [edx + 0xf]; jne 0xb7c51; pop ebx; ret; 
0x000b34b9: lea ecx, [edx + 1]; jne 0xb3800; pop edi; pop ebx; ret; 
0x000b3899: lea ecx, [edx + 1]; jne 0xb3801; pop ebx; ret; 
0x000b7ce9: lea ecx, [edx + 1]; jne 0xb7c51; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x00087660: lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x000b38bb: lea ecx, [edx + 2]; jne 0xb3801; pop ebx; ret; 
0x000b7d0c: lea ecx, [edx + 2]; jne 0xb7c51; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b3501: lea ecx, [edx + 3]; jne 0xb3800; pop edi; pop ebx; ret; 
0x000b38e1: lea ecx, [edx + 3]; jne 0xb3801; pop ebx; ret; 
0x000b7d32: lea ecx, [edx + 3]; jne 0xb7c51; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000c1a65: lea ecx, [edx + 3]; mov eax, ecx; ret; 
0x000b38f9: lea ecx, [edx + 4]; jne 0xb3801; pop ebx; ret; 
0x000b7d5a: lea ecx, [edx + 4]; jne 0xb7c51; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x0007f376: lea ecx, [edx + 4]; mov dword ptr [eax], ecx; mov eax, dword ptr [edx]; ret; 
0x000b351f: lea ecx, [edx + 5]; jne 0xb3800; pop edi; pop ebx; ret; 
0x000b391f: lea ecx, [edx + 5]; jne 0xb3801; pop ebx; ret; 
0x000b7d80: lea ecx, [edx + 5]; jne 0xb7c51; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b3541: lea ecx, [edx + 6]; jne 0xb3800; pop edi; pop ebx; ret; 
0x000b3941: lea ecx, [edx + 6]; jne 0xb3801; pop ebx; ret; 
0x000b355f: lea ecx, [edx + 7]; jne 0xb3800; pop edi; pop ebx; ret; 
0x000b395f: lea ecx, [edx + 7]; jne 0xb3801; pop ebx; ret; 
0x000b397d: lea ecx, [edx + 8]; jne 0xb3801; pop ebx; ret; 
0x000b7e0e: lea ecx, [edx + 8]; jne 0xb7c51; pop ebx; ret; 
0x000b3583: lea ecx, [edx + 9]; jne 0xb3800; pop edi; pop ebx; ret; 
0x000b39a3: lea ecx, [edx + 9]; jne 0xb3801; pop ebx; ret; 
0x000b7e34: lea ecx, [edx + 9]; jne 0xb7c51; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x00068b20: lea ecx, [edx + edi*8 - 1]; dec dword ptr [ebx - 0x58f63]; call dword ptr [edi - 0x18]; 
0x0017c7b5: lea ecx, [esp + 0x10]; mov eax, dword ptr [edx + 4]; push ecx; push edx; call dword ptr [eax + 0x24]; 
0x0017bd05: lea ecx, [esp + 0x10]; mov eax, dword ptr [edx + 4]; push ecx; push edx; call dword ptr [eax + 4]; 
0x001782a8: lea ecx, [esp + 0x10]; push ecx; push 0xd; push eax; call dword ptr [edx + 0x14]; 
0x0007c146: lea ecx, [esp + 0x10]; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x0017c7e6: lea ecx, [esp + 0x10]; push ecx; push edx; call dword ptr [eax + 0x20]; 
0x0017b976: lea ecx, [esp + 0x10]; push ecx; push edx; call dword ptr [eax]; 
0x000e7a61: lea ecx, [esp + 0x14]; mov dword ptr [esp + 0x18], eax; mov eax, 0x108; mov dword ptr [esp + 0x14], edi; call dword ptr gs:[0x10]; 
0x000e7710: lea ecx, [esp + 0x14]; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x0012fede: lea ecx, [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x000e76db: lea ecx, [esp + 0x1c]; push ecx; mov dword ptr [esp + 0x18], ecx; push ebx; call eax; 
0x001781e9: lea ecx, [esp + 0x20]; push ecx; push 6; push eax; call dword ptr [edx + 0x14]; 
0x00176475: lea ecx, [esp + 0x28]; mov edx, dword ptr [eax + 4]; push ecx; push eax; call dword ptr [edx + 8]; 
0x001781d6: lea ecx, [esp + 0x28]; push ecx; push 4; push eax; call dword ptr [edx + 0x14]; 
0x000c4ab4: lea ecx, [esp + 0x44]; push ecx; push dword ptr [edi + 8]; call ebx; 
0x000c3dda: lea ecx, [esp + 0x54]; push ecx; mov eax, dword ptr [esp + 0x40]; push dword ptr [eax]; call edi; 
0x000de91c: lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000a02a0: lea ecx, [esp + 0xc]; mov eax, 0x105; call dword ptr gs:[0x10]; 
0x0012fe18: lea ecx, [esp + 0xc]; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x000e7b40: lea ecx, [esp + 0xc]; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x001304aa: lea ecx, [esp + 0xc]; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x0012f0ea: lea ecx, [esp + 0xc]; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x0012ee6a: lea ecx, [esp + 0xc]; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x001231dc: lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x000e7baf: lea ecx, [esp + 4]; mov dword ptr [esp + 8], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x000e7883: lea ecx, [esp + 4]; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x0010bf40: lea ecx, [esp + 4]; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x001304a9: lea ecx, ss:[esp + 0xc]; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x0012f0e9: lea ecx, ss:[esp + 0xc]; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x000ea084: lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x000d740b: lea edi, [eax + 0xfffffc9]; xchg ebp, eax; ret 0xb60f; 
0x000d772f: lea edi, [eax - 0x76000037]; popfd; mov esp, 0xe9ffffc9; cmp esp, 0xa40fffff; ret 0xc102; 
0x000b968b: lea edi, [edi + 0x10]; jne 0xb9e20; pop edi; pop esi; pop ebx; ret; 
0x000bacfe: lea edi, [edi + 0x10]; jne 0xbb520; pop edi; pop esi; pop ebx; ret; 
0x000bad74: lea edi, [edi + 0x13]; jne 0xbb520; pop edi; pop esi; pop ebx; ret; 
0x000b9765: lea edi, [edi + 0x16]; jne 0xb9e20; pop edi; pop esi; pop ebx; ret; 
0x000b9795: lea edi, [edi + 0x17]; jne 0xb9e20; pop edi; pop esi; pop ebx; ret; 
0x000bae9b: lea edi, [edi + 0x19]; jne 0xbb520; pop edi; pop esi; pop ebx; ret; 
0x000b982d: lea edi, [edi + 0x1a]; jne 0xb9e20; pop edi; pop esi; pop ebx; ret; 
0x000b985b: lea edi, [edi + 0x1b]; jne 0xb9e20; pop edi; pop esi; pop ebx; ret; 
0x000b988b: lea edi, [edi + 0x1c]; jne 0xb9e20; pop edi; pop esi; pop ebx; ret; 
0x000baf2e: lea edi, [edi + 0x1c]; jne 0xbb520; pop edi; pop esi; pop ebx; ret; 
0x000b98b5: lea edi, [edi + 0x1d]; jne 0xb9e20; pop edi; pop esi; pop ebx; ret; 
0x000baf58: lea edi, [edi + 0x1d]; jne 0xbb520; pop edi; pop esi; pop ebx; ret; 
0x000b98e5: lea edi, [edi + 0x1e]; jne 0xb9e20; pop edi; pop esi; pop ebx; ret; 
0x000baf88: lea edi, [edi + 0x1e]; jne 0xbb520; pop edi; pop esi; pop ebx; ret; 
0x000b9915: lea edi, [edi + 0x1f]; jne 0xb9e20; pop edi; pop esi; pop ebx; ret; 
0x000bafb8: lea edi, [edi + 0x1f]; jne 0xbb520; pop edi; pop esi; pop ebx; ret; 
0x000b9945: lea edi, [edi + 0x20]; jne 0xb9e20; pop edi; pop esi; pop ebx; ret; 
0x000bafe8: lea edi, [edi + 0x20]; jne 0xbb520; pop edi; pop esi; pop ebx; ret; 
0x000b95a3: lea edi, [edi + 0xa]; jne 0xb9e20; pop edi; pop esi; pop ebx; ret; 
0x000babe6: lea edi, [edi + 0xa]; jne 0xbb520; pop edi; pop esi; pop ebx; ret; 
0x000bac14: lea edi, [edi + 0xb]; jne 0xbb520; pop edi; pop esi; pop ebx; ret; 
0x000b95e1: lea edi, [edi + 0xc]; jne 0xb9e20; pop edi; pop esi; pop ebx; ret; 
0x000bac44: lea edi, [edi + 0xc]; jne 0xbb520; pop edi; pop esi; pop ebx; ret; 
0x000b9605: lea edi, [edi + 0xd]; jne 0xb9e20; pop edi; pop esi; pop ebx; ret; 
0x000bac78: lea edi, [edi + 0xd]; jne 0xbb520; pop edi; pop esi; pop ebx; ret; 
0x000baca8: lea edi, [edi + 0xe]; jne 0xbb520; pop edi; pop esi; pop ebx; ret; 
0x000b9665: lea edi, [edi + 0xf]; jne 0xb9e20; pop edi; pop esi; pop ebx; ret; 
0x000bacd8: lea edi, [edi + 0xf]; jne 0xbb520; pop edi; pop esi; pop ebx; ret; 
0x000b9475: lea edi, [edi + 1]; jne 0xb9e20; pop edi; pop esi; pop ebx; ret; 
0x000baadc: lea edi, [edi + 2]; jne 0xbb520; pop edi; pop esi; pop ebx; ret; 
0x000baaff: lea edi, [edi + 3]; jne 0xbb520; pop edi; pop esi; pop ebx; ret; 
0x000bab1a: lea edi, [edi + 4]; jne 0xbb520; pop edi; pop esi; pop ebx; ret; 
0x000b94fa: lea edi, [edi + 5]; jne 0xb9e20; pop edi; pop esi; pop ebx; ret; 
0x000bab3d: lea edi, [edi + 5]; jne 0xbb520; pop edi; pop esi; pop ebx; ret; 
0x000b951f: lea edi, [edi + 6]; jne 0xb9e20; pop edi; pop esi; pop ebx; ret; 
0x000bab62: lea edi, [edi + 6]; jne 0xbb520; pop edi; pop esi; pop ebx; ret; 
0x000b953d: lea edi, [edi + 7]; jne 0xb9e20; pop edi; pop esi; pop ebx; ret; 
0x000bab80: lea edi, [edi + 7]; jne 0xbb520; pop edi; pop esi; pop ebx; ret; 
0x000b955b: lea edi, [edi + 8]; jne 0xb9e20; pop edi; pop esi; pop ebx; ret; 
0x000b957e: lea edi, [edi + 9]; jne 0xb9e20; pop edi; pop esi; pop ebx; ret; 
0x00192a06: lea edi, [esp + 8]; mov eax, 0x75; mov ebx, 3; call dword ptr gs:[0x10]; 
0x0005bb45: lea edx, [eax + 0x1c]; lea ecx, [eax + 0x9c]; mov dword ptr [eax + 8], ecx; mov dword ptr [eax + 4], edx; mov dword ptr [eax], edx; ret; 
0x00024b53: lea edx, [eax + 0x34]; mov eax, dword ptr [eax + 0x34]; test eax, eax; jne 0x24b50; ret; 
0x00052f02: lea edx, [eax + 0x6c]; lea ecx, [ecx + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x00040260: lea edx, [eax + 0x6c]; xor ecx, ecx; mov ebx, 0; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x000a84f6: lea edx, [eax + 1]; mov eax, ebx; cmovne eax, edx; add esp, 0x18; pop ebx; ret; 
0x00042dd7: lea edx, [eax + 1]; mov eax, edx; ret; 
0x0014b42e: lea edx, [eax + ecx]; pop ebx; mov eax, edx; ret; 
0x0004318d: lea edx, [eax - 0x10]; mov eax, edx; ret; 
0x000c6aa4: lea edx, [eax - 0x1652a4]; lea eax, [eax - 0x92964]; test byte ptr [ecx + 0x7b], 4; cmove eax, edx; ret; 
0x000c4d44: lea edx, [eax - 0x1652c4]; lea eax, [eax - 0x92b44]; test byte ptr [ecx + 0x7b], 4; cmove eax, edx; ret; 
0x000c5d94: lea edx, [eax - 0x1653b4]; lea eax, [eax - 0x1655b4]; test byte ptr [ecx + 0x7b], 4; cmove eax, edx; ret; 
0x000c4da4: lea edx, [eax - 0x165614]; lea eax, [eax - 0x166314]; test byte ptr [ecx + 0x7b], 4; cmove eax, edx; ret; 
0x00042cf7: lea edx, [eax - 0x17]; mov eax, edx; ret; 
0x000ac634: lea edx, [eax - 0x17c0a4]; lea eax, [eax - 0x97114]; test byte ptr [ecx + 0x76], 0x10; cmove eax, edx; ret; 
0x000ac464: lea edx, [eax - 0x17c164]; lea eax, [eax - 0x97214]; test byte ptr [ecx + 0x76], 0x10; cmove eax, edx; ret; 
0x000ab4f4: lea edx, [eax - 0x17c214]; lea eax, [eax - 0x97394]; test byte ptr [ecx + 0x76], 0x10; cmove eax, edx; ret; 
0x000ac434: lea edx, [eax - 0x17d104]; lea eax, [eax - 0x93834]; test byte ptr [ecx + 0x7b], 4; cmove eax, edx; ret; 
0x000430dd: lea edx, [eax - 0x18]; mov eax, edx; ret; 
0x00024af2: lea edx, [eax - 0x1b7974]; xor edx, dword ptr gs:[0x18]; rol edx, 9; mov dword ptr [eax + 0x1a50], edx; ret; 
0x00042d98: lea edx, [eax - 0xf]; mov eax, edx; ret; 
0x00043038: lea edx, [eax - 1]; xor eax, edx; cmp edx, eax; setb al; ret; 
0x0007a2c5: lea edx, [ebx + 0x28]; push edx; push 1; push ebx; call eax; 
0x0017743d: lea edx, [ebx + 0x38]; push edx; call eax; 
0x0017691d: lea edx, [ebx + 0x4c]; push edx; call eax; 
0x00162dea: lea edx, [ebx + 0xa22c]; push edx; call eax; 
0x00173c60: lea edx, [ebx + 0xac]; push edx; call eax; 
0x00189e47: lea edx, [ebx - 0x214]; mov dword ptr [eax + 0x94], edx; add esp, 8; pop ebx; ret; 
0x0012a745: lea edx, [ebx - 7]; call dword ptr [eax + 0x6a]; 
0x0017145b: lea edx, [ecx + 4]; push edx; push ebx; call dword ptr [eax + 4]; 
0x0017149a: lea edx, [ecx + 4]; push edx; push ebx; call dword ptr [eax]; 
0x00133ed8: lea edx, [ecx + ecx]; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; call dword ptr gs:[0x10]; 
0x00033420: lea edx, [ecx - 0x6d324]; mov eax, edx; pop ebx; ret; 
0x00174871: lea edx, [edi + 8]; push edx; call eax; 
0x000d46ff: lea edx, [edx - 0x165354]; cmove eax, edx; ret; 
0x000a95b4: lea edx, [edx - 0x17bea4]; cmove eax, edx; ret; 
0x000a9574: lea edx, [edx - 0x17bf34]; cmove eax, edx; ret; 
0x000aa2ff: lea edx, [edx - 0x17c244]; cmove eax, edx; ret; 
0x000ab4d4: lea edx, [edx - 0x17c2d4]; cmove eax, edx; ret; 
0x000aa124: lea edx, [edx - 0x17c804]; cmove eax, edx; ret; 
0x000a8b3f: lea edx, [edx - 0x17cc74]; cmove eax, edx; ret; 
0x000ac2bf: lea edx, [edx - 0x17cf64]; cmove eax, edx; ret; 
0x000ac2ff: lea edx, [edx - 0x17cfd4]; cmove eax, edx; ret; 
0x000a95ef: lea edx, [edx - 0x17d054]; cmove eax, edx; ret; 
0x000a962f: lea edx, [edx - 0x17d0d4]; cmove eax, edx; ret; 
0x000ac344: lea edx, [edx - 0x17dec4]; cmove eax, edx; ret; 
0x000ac3c4: lea edx, [edx - 0x18ed84]; cmove eax, edx; ret; 
0x000ac37f: lea edx, [edx - 0x18f114]; cmove eax, edx; ret; 
0x0007bf45: lea edx, [edx - 0x508]; mov ecx, edx; mov dword ptr [eax + 0x94], ecx; mov ecx, dword ptr [eax + 0x58]; mov dword ptr [ecx + 0x88], edx; ret; 
0x000a94ce: lea edx, [edx - 0x93b54]; cmovne eax, edx; ret; 
0x000a944e: lea edx, [edx - 0x942f4]; cmovne eax, edx; ret; 
0x000a8afe: lea edx, [edx - 0x94864]; cmovne eax, edx; ret; 
0x000ac4ae: lea edx, [edx - 0x94e94]; cmovne eax, edx; ret; 
0x000aa15e: lea edx, [edx - 0x95274]; cmovne eax, edx; ret; 
0x000ac27e: lea edx, [edx - 0x95594]; cmovne eax, edx; ret; 
0x000a93bc: lea edx, [edx - 0xa1fe4]; cmovne eax, edx; pop ebx; ret; 
0x0013d62c: lea edx, [edx - 0xa1ff4]; cmovne eax, edx; pop ebx; ret; 
0x000a940c: lea edx, [edx - 0xa2fd4]; cmovne eax, edx; pop ebx; ret; 
0x0013d67c: lea edx, [edx - 0xa2fe4]; cmovne eax, edx; pop ebx; ret; 
0x000a8b8c: lea edx, [edx - 0xa3fb4]; cmovne eax, edx; pop ebx; ret; 
0x0013d5dc: lea edx, [edx - 0xa3fc4]; cmovne eax, edx; pop ebx; ret; 
0x000a948e: lea edx, [edx - 0xab574]; cmovne eax, edx; ret; 
0x0013d6be: lea edx, [edx - 0xab584]; cmovne eax, edx; ret; 
0x00116047: lea edx, [edx]; add byte ptr [ebx - 0x75], dl; push esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00092ac9: lea edx, [esi + 0x220]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x00083ddf: lea edx, [esi + 0x28]; push edx; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x00083ebe: lea edx, [esi + 4]; push edx; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x00037f47: lea edx, [esi + edi*8 - 1]; dec dword ptr [ecx - 0x1bf7b]; jmp dword ptr [ebp - 0x5f]; 
0x0013c0e1: lea edx, [esi - 0x102e54]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0016f5f8: lea edx, [esi - 0xcf5b4]; push edx; push 1; push ebx; call dword ptr [eax]; 
0x0016f721: lea edx, [esi - 0xcf5b4]; push edx; push 2; push ebx; call dword ptr [eax]; 
0x0017c55c: lea edx, [esp + 0x10]; push edx; push ebx; call dword ptr [eax + 0x20]; 
0x001754e8: lea edx, [esp + 0x10]; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x0017bb86: lea edx, [esp + 0x10]; push edx; push ebx; call dword ptr [eax + 4]; 
0x0017bb1b: lea edx, [esp + 0x10]; push edx; push ebx; call dword ptr [eax]; 
0x0017be56: lea edx, [esp + 0x10]; push edx; push ecx; call dword ptr [eax + 4]; 
0x0017be8e: lea edx, [esp + 0x10]; push edx; push ecx; call dword ptr [eax]; 
0x0013f7ee: lea edx, [esp + 0x10]; push edx; push edi; call eax; 
0x0013f8cb: lea edx, [esp + 0x10]; push edx; push esi; call eax; 
0x000f0d8b: lea edx, [esp + 0x14]; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x001775c6: lea edx, [esp + 0x14c]; push edx; push edi; call dword ptr [eax + 4]; 
0x0009feb7: lea edx, [esp + 0x18]; mov eax, 0x103; mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00178738: lea edx, [esp + 0x20]; push edx; push eax; call edi; 
0x0017c19a: lea edx, [esp + 0x20]; push edx; push esi; call dword ptr [eax]; 
0x001229c3: lea edx, [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00089510: lea edx, [esp + 0x28]; push edx; push esi; call dword ptr [eax + 0x48]; 
0x00115d62: lea edx, [esp + 0x2c]; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x000deab4: lea edx, [esp + 0x2c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x00179eac: lea edx, [esp + 0x38]; push edx; call dword ptr [eax + 0xc]; 
0x0018bd2b: lea edx, [esp + 0x38]; push edx; push esi; call dword ptr [eax + 0x48]; 
0x0003c7f6: lea edx, [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x0012308e: lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0017c546: lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 0x20]; 
0x0017c513: lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x0017bb63: lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 4]; 
0x0017bb06: lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax]; 
0x000e7855: lea edx, [esp + 0xc]; push edx; push ebx; call eax; 
0x0017beda: lea edx, [esp + 0xc]; push edx; push ecx; call dword ptr [eax + 4]; 
0x00121d04: lea edx, [esp + 4]; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x00115f22: lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x000f800b: lea edx, [esp + 8]; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x00024b52: lea edx, fs:[eax + 0x34]; mov eax, dword ptr [eax + 0x34]; test eax, eax; jne 0x24b50; ret; 
0x0013b538: lea esi, [edi + edi*8 - 1]; dec dword ptr [ebx - 0x9b43]; dec dword ptr [ecx - 0x11b73]; push esi; ret 0xf02; 
0x000685e8: lea esi, [edx + edi*8 - 1]; call dword ptr [eax - 0x18]; 
0x0006b957: lea esi, [edx + edi*8 - 1]; call dword ptr [eax - 1]; 
0x0006a86d: lea esi, [edx + edi*8 - 1]; call dword ptr [edi - 0x18]; 
0x0006dac0: lea esi, [edx + edi*8 - 1]; call dword ptr [edx + 0x52]; 
0x000691fa: lea esi, [edx + edi*8 - 1]; call dword ptr [edx - 0x18]; 
0x0006860b: lea esi, [edx + edi*8 - 1]; inc dword ptr [ecx]; ret 0xd801; 
0x001abc79: lea esi, [esi]; add eax, 1; pop edi; ret; 
0x000d99bc: lea esi, [esi]; add eax, 1; ret; 
0x000d99cc: lea esi, [esi]; add eax, 3; ret; 
0x001ab11d: lea esi, [esi]; add edx, 2; jl 0x1ab1d0; lea eax, [ecx + 2]; ret; 
0x001ab12d: lea esi, [esi]; add edx, 3; jl 0x1ab1d0; lea eax, [ecx + 3]; ret; 
0x001ab13d: lea esi, [esi]; add edx, 5; jl 0x1ab1d0; lea eax, [ecx + 5]; ret; 
0x001ab14d: lea esi, [esi]; add edx, 6; jl 0x1ab1d0; lea eax, [ecx + 6]; ret; 
0x0016ed6c: lea esi, [esi]; add esp, 4; mov eax, 0x10; pop ebx; pop esi; ret; 
0x00080d94: lea esi, [esi]; add esp, 4; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x00157de4: lea esi, [esi]; add esp, 4; mov eax, 1; pop ebx; pop esi; ret; 
0x0013de35: lea esi, [esi]; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x000a870c: lea esi, [esi]; add esp, 4; pop ebx; pop esi; ret; 
0x00170ec5: lea esi, [esi]; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0013e3ba: lea esi, [esi]; add esp, 8; pop ebx; ret; 
0x00061f62: lea esi, [esi]; add esp, 8; xor eax, eax; pop ebx; ret; 
0x001aa51d: lea esi, [esi]; and eax, 0x1f; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x001aa54d: lea esi, [esi]; and eax, 0x1ff; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x001aa52d: lea esi, [esi]; and eax, 0x3f; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x001aa53d: lea esi, [esi]; and eax, 0x7f; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x001420d9: lea esi, [esi]; and eax, 0xffffff; ret; 
0x001aa4fd: lea esi, [esi]; and eax, 3; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x001aa50d: lea esi, [esi]; and eax, 7; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x000c1cc9: lea esi, [esi]; bsf eax, eax; add eax, edx; ret; 
0x000c156a: lea esi, [esi]; bsf eax, eax; lea eax, [eax + edi - 0x10]; pop edi; ret; 
0x000c1ce9: lea esi, [esi]; bsf eax, eax; lea eax, [eax + edx + 0x20]; ret; 
0x000c1849: lea esi, [esi]; bsr eax, eax; lea eax, [eax + ecx + 0x20]; ret; 
0x000c1859: lea esi, [esi]; bsr eax, eax; lea eax, [eax + ecx + 0x30]; ret; 
0x000c197c: lea esi, [esi]; bsr edi, edi; lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x00196c4a: lea esi, [esi]; call 0x189c1d; add ebx, 0x44d9b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194c4a: lea esi, [esi]; call 0x189c1d; add ebx, 0x46b1b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000fb605: lea esi, [esi]; call 0x8e600; mov edx, eax; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x0008cc8d: lea esi, [esi]; endbr32; call 0x189c25; add eax, 0x1b217b; mov eax, dword ptr [eax + 0xe6c]; ret; 
0x0003d4bd: lea esi, [esi]; endbr32; call 0x189c25; add eax, 0x20194b; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x000260bd: lea esi, [esi]; endbr32; call 0x189c25; add eax, 0x218d4b; mov eax, dword ptr [eax + 0x10bc]; ret; 
0x00024fcd: lea esi, [esi]; endbr32; call 0x189c25; add eax, 0x219e3b; lea eax, [eax - 0x690b4]; ret; 
0x0008bc5c: lea esi, [esi]; endbr32; mov eax, 0xffffffff; mov edx, eax; ret; 
0x0008cc3c: lea esi, [esi]; endbr32; mov eax, 0xffffffff; ret; 
0x0016eafd: lea esi, [esi]; endbr32; mov eax, 1; ret; 
0x0017cefc: lea esi, [esi]; endbr32; mov eax, dword ptr [esp + 4]; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x0017ce0d: lea esi, [esi]; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x0018985c: lea esi, [esi]; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x54]; ret; 
0x001897dc: lea esi, [esi]; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x001897bc: lea esi, [esi]; endbr32; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x0008cccc: lea esi, [esi]; endbr32; mov eax, dword ptr [esp + 4]; ret; 
0x0008a85d: lea esi, [esi]; endbr32; mov eax, dword ptr [esp + 4]; test byte ptr [eax], 0x80; jne 0x8a870; ret; 
0x0017ca0d: lea esi, [esi]; endbr32; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x0008cc7a: lea esi, [esi]; endbr32; ret; 
0x0003464c: lea esi, [esi]; endbr32; xor eax, eax; cmp dword ptr [esp + 4], 0x7f; setbe al; ret; 
0x0008bba9: lea esi, [esi]; endbr32; xor eax, eax; ret; 
0x000ea119: lea esi, [esi]; hlt; mov eax, edx; call dword ptr gs:[0x10]; 
0x001a64bc: lea esi, [esi]; jb 0x1a64d0; movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x001aaf2c: lea esi, [esi]; lea eax, [ecx + 0xa]; ret; 
0x001aaf3c: lea esi, [esi]; lea eax, [ecx + 0xb]; ret; 
0x001aaf4c: lea esi, [esi]; lea eax, [ecx + 0xd]; ret; 
0x001aaf5c: lea esi, [esi]; lea eax, [ecx + 0xe]; ret; 
0x001aaf6c: lea esi, [esi]; lea eax, [ecx + 0xf]; ret; 
0x000fbaf5: lea esi, [esi]; lea eax, [ecx + 1]; pop ebx; pop esi; ret; 
0x001aaecc: lea esi, [esi]; lea eax, [ecx + 2]; ret; 
0x001aaedc: lea esi, [esi]; lea eax, [ecx + 3]; ret; 
0x001aaeec: lea esi, [esi]; lea eax, [ecx + 5]; ret; 
0x001aaefc: lea esi, [esi]; lea eax, [ecx + 6]; ret; 
0x001aaf0c: lea esi, [esi]; lea eax, [ecx + 7]; ret; 
0x001ac44a: lea esi, [esi]; lea eax, [ecx + 8]; ret; 
0x001aaf1c: lea esi, [esi]; lea eax, [ecx + 9]; ret; 
0x001a9f1d: lea esi, [esi]; lea eax, [edi + 0xa]; pop edi; ret; 
0x001a9f2d: lea esi, [esi]; lea eax, [edi + 0xb]; pop edi; ret; 
0x001a9f3d: lea esi, [esi]; lea eax, [edi + 0xc]; pop edi; ret; 
0x001a9f4d: lea esi, [esi]; lea eax, [edi + 0xd]; pop edi; ret; 
0x001a9f5d: lea esi, [esi]; lea eax, [edi + 0xe]; pop edi; ret; 
0x001a9e9c: lea esi, [esi]; lea eax, [edi + 1]; pop edi; ret; 
0x001a9ead: lea esi, [esi]; lea eax, [edi + 2]; pop edi; ret; 
0x001a9ebd: lea esi, [esi]; lea eax, [edi + 3]; pop edi; ret; 
0x001a9ecd: lea esi, [esi]; lea eax, [edi + 4]; pop edi; ret; 
0x001a9edd: lea esi, [esi]; lea eax, [edi + 5]; pop edi; ret; 
0x001a9eed: lea esi, [esi]; lea eax, [edi + 6]; pop edi; ret; 
0x001a9efd: lea esi, [esi]; lea eax, [edi + 8]; pop edi; ret; 
0x001a9f0d: lea esi, [esi]; lea eax, [edi + 9]; pop edi; ret; 
0x001aa37d: lea esi, [esi]; lea eax, [edi - 0xa]; pop edi; ret; 
0x001aa36d: lea esi, [esi]; lea eax, [edi - 0xb]; pop edi; ret; 
0x001aa35d: lea esi, [esi]; lea eax, [edi - 0xd]; pop edi; ret; 
0x001aa34d: lea esi, [esi]; lea eax, [edi - 0xe]; pop edi; ret; 
0x001aa3ed: lea esi, [esi]; lea eax, [edi - 1]; pop edi; ret; 
0x001aa3dd: lea esi, [esi]; lea eax, [edi - 2]; pop edi; ret; 
0x001aa3cd: lea esi, [esi]; lea eax, [edi - 3]; pop edi; ret; 
0x001ac6dd: lea esi, [esi]; lea eax, [edi - 4]; pop edi; ret; 
0x001aa3bd: lea esi, [esi]; lea eax, [edi - 5]; pop edi; ret; 
0x001aa3ad: lea esi, [esi]; lea eax, [edi - 6]; pop edi; ret; 
0x001aa39d: lea esi, [esi]; lea eax, [edi - 7]; pop edi; ret; 
0x001ac6ca: lea esi, [esi]; lea eax, [edi - 8]; pop edi; ret; 
0x001aa38d: lea esi, [esi]; lea eax, [edi - 9]; pop edi; ret; 
0x001a9e8c: lea esi, [esi]; lea eax, [edi]; pop edi; ret; 
0x001ab58c: lea esi, [esi]; lea eax, [edx + 0xa]; ret; 
0x001ab59c: lea esi, [esi]; lea eax, [edx + 0xc]; ret; 
0x001ab5ac: lea esi, [esi]; lea eax, [edx + 0xd]; ret; 
0x001ab5bc: lea esi, [esi]; lea eax, [edx + 0xe]; ret; 
0x001ab51c: lea esi, [esi]; lea eax, [edx + 1]; ret; 
0x001ab52c: lea esi, [esi]; lea eax, [edx + 2]; ret; 
0x001ab53c: lea esi, [esi]; lea eax, [edx + 4]; ret; 
0x001ab54c: lea esi, [esi]; lea eax, [edx + 5]; ret; 
0x001ab55c: lea esi, [esi]; lea eax, [edx + 6]; ret; 
0x001ab56c: lea esi, [esi]; lea eax, [edx + 8]; ret; 
0x001ab57c: lea esi, [esi]; lea eax, [edx + 9]; ret; 
0x000a0115: lea esi, [esi]; lea ebp, [ebx + ebx]; mov eax, 0x107; mov ebx, dword ptr [ebp]; call dword ptr gs:[0x10]; 
0x000a029a: lea esi, [esi]; lea ecx, [esp + 0xc]; mov eax, 0x105; call dword ptr gs:[0x10]; 
0x0012fe12: lea esi, [esi]; lea ecx, [esp + 0xc]; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x0010bf3a: lea esi, [esi]; lea ecx, [esp + 4]; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x000d99c5: lea esi, [esi]; lea esi, [esi]; add eax, 3; ret; 
0x0008ecf6: lea esi, [esi]; lea esi, [esi]; endbr32; ret; 
0x001aaf25: lea esi, [esi]; lea esi, [esi]; lea eax, [ecx + 0xa]; ret; 
0x001aaf35: lea esi, [esi]; lea esi, [esi]; lea eax, [ecx + 0xb]; ret; 
0x001aaf45: lea esi, [esi]; lea esi, [esi]; lea eax, [ecx + 0xd]; ret; 
0x001aaf55: lea esi, [esi]; lea esi, [esi]; lea eax, [ecx + 0xe]; ret; 
0x001aaf65: lea esi, [esi]; lea esi, [esi]; lea eax, [ecx + 0xf]; ret; 
0x001aaec5: lea esi, [esi]; lea esi, [esi]; lea eax, [ecx + 2]; ret; 
0x001aaed5: lea esi, [esi]; lea esi, [esi]; lea eax, [ecx + 3]; ret; 
0x001aaee5: lea esi, [esi]; lea esi, [esi]; lea eax, [ecx + 5]; ret; 
0x001aaef5: lea esi, [esi]; lea esi, [esi]; lea eax, [ecx + 6]; ret; 
0x001aaf05: lea esi, [esi]; lea esi, [esi]; lea eax, [ecx + 7]; ret; 
0x001ac443: lea esi, [esi]; lea esi, [esi]; lea eax, [ecx + 8]; ret; 
0x001aaf15: lea esi, [esi]; lea esi, [esi]; lea eax, [ecx + 9]; ret; 
0x001ab585: lea esi, [esi]; lea esi, [esi]; lea eax, [edx + 0xa]; ret; 
0x001ab595: lea esi, [esi]; lea esi, [esi]; lea eax, [edx + 0xc]; ret; 
0x001ab5a5: lea esi, [esi]; lea esi, [esi]; lea eax, [edx + 0xd]; ret; 
0x001ab5b5: lea esi, [esi]; lea esi, [esi]; lea eax, [edx + 0xe]; ret; 
0x001ab525: lea esi, [esi]; lea esi, [esi]; lea eax, [edx + 2]; ret; 
0x001ab535: lea esi, [esi]; lea esi, [esi]; lea eax, [edx + 4]; ret; 
0x001ab545: lea esi, [esi]; lea esi, [esi]; lea eax, [edx + 5]; ret; 
0x001ab555: lea esi, [esi]; lea esi, [esi]; lea eax, [edx + 6]; ret; 
0x001ab565: lea esi, [esi]; lea esi, [esi]; lea eax, [edx + 8]; ret; 
0x001ab575: lea esi, [esi]; lea esi, [esi]; lea eax, [edx + 9]; ret; 
0x001ac416: lea esi, [esi]; lea esi, [esi]; mov eax, ecx; ret; 
0x000d99d5: lea esi, [esi]; lea esi, [esi]; xor eax, eax; ret; 
0x001a9b54: lea esi, [esi]; lea esi, cs:[esi]; add eax, 1; ret; 
0x001ac484: lea esi, [esi]; lea esi, cs:[esi]; lea eax, [ecx + 8]; ret; 
0x001ab514: lea esi, [esi]; lea esi, cs:[esi]; lea eax, [edx + 1]; ret; 
0x000d99e4: lea esi, [esi]; lea esi, cs:[esi]; mov eax, 1; ret; 
0x00092ed4: lea esi, [esi]; lea esi, cs:[esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x000b3664: lea esi, [esi]; lea esi, cs:[esi]; pop ebx; ret; 
0x000c1304: lea esi, [esi]; lea esi, cs:[esi]; xor eax, eax; ret; 
0x000b5a6d: lea esi, [esi]; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; pop edi; ret; 
0x000b16ac: lea esi, [esi]; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x000bd61a: lea esi, [esi]; mov byte ptr [eax], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00145df4: lea esi, [esi]; mov byte ptr [ebx], 0; add esp, 8; pop ebx; ret; 
0x000b367a: lea esi, [esi]; mov byte ptr [ecx], dl; pop ebx; ret; 
0x000b9cfc: lea esi, [esi]; mov byte ptr [edi], dl; pop edi; pop esi; pop ebx; ret; 
0x00170682: lea esi, [esi]; mov dword ptr [eax], 0x10; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x00170719: lea esi, [esi]; mov dword ptr [eax], 0xa; pop ebx; ret; 
0x00170704: lea esi, [esi]; mov dword ptr [eax], 0xc; pop ebx; ret; 
0x00170729: lea esi, [esi]; mov dword ptr [eax], 8; pop ebx; ret; 
0x00185279: lea esi, [esi]; mov dword ptr [ebx + 0xc], 0; pop ebx; ret; 
0x0009cf5a: lea esi, [esi]; mov dword ptr [ecx + 0x10], eax; mov dword ptr [edx + 0x3ba8], ecx; ret; 
0x000b36bc: lea esi, [esi]; mov dword ptr [ecx], edx; mov byte ptr [ecx + 4], dl; pop ebx; ret; 
0x000b36a9: lea esi, [esi]; mov dword ptr [ecx], edx; pop ebx; ret; 
0x0009a6ec: lea esi, [esi]; mov eax, 0x10; add esp, 0xc; ret; 
0x0012e384: lea esi, [esi]; mov eax, 0x11c; mov ebx, 3; mov ecx, 0x7fffffff; mov esi, 5; call dword ptr gs:[0x10]; 
0x000909fc: lea esi, [esi]; mov eax, 0x16; pop ebx; ret; 
0x000928fd: lea esi, [esi]; mov eax, 0x16; ret; 
0x000fb224: lea esi, [esi]; mov eax, 0x40; ret; 
0x000dec3c: lea esi, [esi]; mov eax, 0x68; mov edx, esi; call dword ptr gs:[0x10]; 
0x001304d9: lea esi, [esi]; mov eax, 0x6a; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0012f119: lea esi, [esi]; mov eax, 0x6b; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00094f41: lea esi, [esi]; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x00091804: lea esi, [esi]; mov eax, 0xf0; mov edx, 1; xor esi, esi; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x0014d964: lea esi, [esi]; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0003d515: lea esi, [esi]; mov eax, 0xffffffff; ret; 
0x0009c311: lea esi, [esi]; mov eax, 1; add esp, 0xc; ret; 
0x0019f3ac: lea esi, [esi]; mov eax, 1; ja 0x19f3b9; neg eax; ret; 
0x001a5fec: lea esi, [esi]; mov eax, 1; ja 0x1a5ff9; neg eax; ret; 
0x000d97cd: lea esi, [esi]; mov eax, 1; jg 0xd97d9; neg eax; ret; 
0x000a6dd2: lea esi, [esi]; mov eax, 1; ret; 
0x0004291c: lea esi, [esi]; mov eax, 1; xor edx, edx; pop ebx; ret; 
0x001898fd: lea esi, [esi]; mov eax, 2; add esp, 0xc; ret; 
0x00094855: lea esi, [esi]; mov eax, 3; ret; 
0x0014044c: lea esi, [esi]; mov eax, 6; call dword ptr gs:[0x10]; 
0x00125225: lea esi, [esi]; mov eax, dword ptr [eax + 0x35c]; pop ebx; ret; 
0x0010bbf2: lea esi, [esi]; mov eax, dword ptr [eax + 4]; test eax, eax; je 0x10bae2; call eax; 
0x0010bb9a: lea esi, [esi]; mov eax, dword ptr [eax + 8]; test eax, eax; je 0x10ba8f; call eax; 
0x0010bbdc: lea esi, [esi]; mov eax, dword ptr [eax + 8]; test eax, eax; je 0x10bae2; call eax; 
0x001792e4: lea esi, [esi]; mov eax, dword ptr [ebx + 0x174]; pop ebx; pop esi; pop edi; ret; 
0x001acd7a: lea esi, [esi]; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; ret; 
0x000c30fd: lea esi, [esi]; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1c8]; ret; 
0x000c310d: lea esi, [esi]; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1cc]; ret; 
0x000c311d: lea esi, [esi]; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1d0]; ret; 
0x000c312d: lea esi, [esi]; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1d4]; ret; 
0x000c313d: lea esi, [esi]; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1d8]; ret; 
0x000c314d: lea esi, [esi]; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1dc]; ret; 
0x000c315d: lea esi, [esi]; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1e0]; ret; 
0x000c316d: lea esi, [esi]; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1e4]; ret; 
0x000c317d: lea esi, [esi]; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1e8]; ret; 
0x000c318d: lea esi, [esi]; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1ec]; ret; 
0x000c319d: lea esi, [esi]; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x000c30ed: lea esi, [esi]; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x0008691c: lea esi, [esi]; mov eax, dword ptr [edx + 0x14]; sub eax, dword ptr [edx + 0x10]; ret; 
0x000867ec: lea esi, [esi]; mov eax, dword ptr [edx + 0x20]; sub eax, dword ptr [edx + 0x1c]; ret; 
0x000fd3c4: lea esi, [esi]; mov eax, dword ptr [esi + 0x3c]; add esp, 4; pop ebx; pop esi; ret; 
0x000a6b4c: lea esi, [esi]; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax + 0x90]; call dword ptr [eax]; 
0x00133b94: lea esi, [esi]; mov eax, dword ptr [esp + 0xc]; mov edx, dword ptr [edx]; mov dword ptr [eax], edx; mov eax, 1; ret; 
0x001abb2a: lea esi, [esi]; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x000907fd: lea esi, [esi]; mov eax, dword ptr [esp + 4]; and dword ptr [eax + 8], 0xfffffffb; xor eax, eax; ret; 
0x001416f4: lea esi, [esi]; mov eax, ebx; mov byte ptr [ecx + edx], 0; pop ebx; ret; 
0x001ac41d: lea esi, [esi]; mov eax, ecx; ret; 
0x000b9f9c: lea esi, [esi]; mov eax, edi; pop edi; pop esi; pop ebx; ret; 
0x001aa8bc: lea esi, [esi]; mov eax, edi; pop edi; ret; 
0x00024dbc: lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x000b4309: lea esi, [esi]; mov eax, edx; pop ebx; ret; 
0x000deb1d: lea esi, [esi]; mov ebx, dword ptr [esp + 0x60]; mov edx, dword ptr [esp + 0xc]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000a04e5: lea esi, [esi]; mov ecx, dword ptr [esp + 0x64]; mov esi, dword ptr [esp + 4]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x000658dc: lea esi, [esi]; mov edi, ecx; jmp edx; 
0x00152b94: lea esi, [esi]; mov edx, 0xffffffff; mov eax, edx; pop ebx; pop esi; ret; 
0x00086825: lea esi, [esi]; mov edx, 1; mov eax, edx; ret; 
0x000a6c04: lea esi, [esi]; mov edx, dword ptr [edi + 0x90]; mov dword ptr [esp + 0xc], eax; call dword ptr [edx]; 
0x00170694: lea esi, [esi]; mov edx, dword ptr [edx + 0x10]; mov dword ptr [eax], 7; mov dword ptr [eax + 4], edx; pop ebx; ret; 
0x000b369d: lea esi, [esi]; mov word ptr [ecx], dx; mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x000b368c: lea esi, [esi]; mov word ptr [ecx], dx; pop ebx; ret; 
0x000b192d: lea esi, [esi]; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000b9ddd: lea esi, [esi]; movdqu xmmword ptr [edi - 1], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b374c: lea esi, [esi]; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000b375c: lea esi, [esi]; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000b376c: lea esi, [esi]; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x000b183d: lea esi, [esi]; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x001423ea: lea esi, [esi]; movzx eax, dl; ret; 
0x0019f31c: lea esi, [esi]; movzx ecx, byte ptr [eax + 2]; movzx eax, byte ptr [edx + 2]; sub eax, ecx; ret; 
0x0019f32c: lea esi, [esi]; movzx ecx, byte ptr [eax + 3]; movzx eax, byte ptr [edx + 3]; sub eax, ecx; ret; 
0x0019f33c: lea esi, [esi]; movzx ecx, byte ptr [eax + 4]; movzx eax, byte ptr [edx + 4]; sub eax, ecx; ret; 
0x0019f34c: lea esi, [esi]; movzx ecx, byte ptr [eax + 5]; movzx eax, byte ptr [edx + 5]; sub eax, ecx; ret; 
0x0019f2fc: lea esi, [esi]; movzx ecx, byte ptr [eax]; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x0016eae7: lea esi, [esi]; nop; endbr32; ret; 
0x0009af37: lea esi, [esi]; nop; mov dword ptr [eax + 4], edx; ret; 
0x000a091d: lea esi, [esi]; nop; mov dword ptr [edx + 0x390], eax; ret; 
0x000906d8: lea esi, [esi]; nop; mov eax, 0x16; ret; 
0x00086a37: lea esi, [esi]; nop; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000d99f7: lea esi, [esi]; nop; mov eax, 2; ret; 
0x000d9a07: lea esi, [esi]; nop; mov eax, 3; ret; 
0x000d9a17: lea esi, [esi]; nop; mov eax, 4; ret; 
0x000d9a27: lea esi, [esi]; nop; mov eax, 5; ret; 
0x000d9a37: lea esi, [esi]; nop; mov eax, 6; ret; 
0x000d9a47: lea esi, [esi]; nop; mov eax, 7; ret; 
0x00042188: lea esi, [esi]; nop; xor eax, eax; ret; 
0x000906cc: lea esi, [esi]; or dword ptr [eax + 8], 1; xor eax, eax; ret; 
0x0009807c: lea esi, [esi]; or dword ptr [eax], 0x80000000; xor eax, eax; ret; 
0x00099de4: lea esi, [esi]; pop ebx; mov eax, 0x16; pop esi; pop edi; ret; 
0x001417c5: lea esi, [esi]; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x0008f2c4: lea esi, [esi]; pop ebx; pop esi; pop edi; ret; 
0x000c128c: lea esi, [esi]; pop ebx; pop esi; pop edi; xor eax, eax; ret; 
0x000c0f3c: lea esi, [esi]; pop ebx; pop esi; ret; 
0x00031114: lea esi, [esi]; pop ebx; ret; 
0x000fba9c: lea esi, [esi]; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x001a64aa: lea esi, [esi]; pop ebx; xor eax, eax; ret; 
0x000b9cec: lea esi, [esi]; pop edi; pop esi; pop ebx; ret; 
0x000d97ac: lea esi, [esi]; pop edi; pop esi; ret; 
0x000bd999: lea esi, [esi]; pop esi; ret; 
0x001ac60a: lea esi, [esi]; pop esi; xor eax, eax; pop edi; ret; 
0x00039d64: lea esi, [esi]; ret; 
0x0008bdb2: lea esi, [esi]; sub ebx, edx; lea eax, [ebx - 1]; pop ebx; ret; 
0x001aaa5c: lea esi, [esi]; sub edx, 2; jb 0x1aab10; lea eax, [edi + 1]; pop edi; ret; 
0x0007f53c: lea esi, [esi]; sub esp, 0x18; push ecx; call 0x81150; add esp, 0x1c; ret; 
0x00179ebc: lea esi, [esi]; sub esp, 0xc; mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 0x14]; 
0x00179dac: lea esi, [esi]; sub esp, 0xc; mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 4]; 
0x00178349: lea esi, [esi]; sub esp, 0xc; push eax; call dword ptr [edx + 0x10]; 
0x000a6d42: lea esi, [esi]; sub esp, 0xc; push esi; call eax; 
0x0007d4ec: lea esi, [esi]; sub esp, 4; push 0x10; push ebp; push esi; call dword ptr [eax + 0x1c]; 
0x00024edc: lea esi, [esi]; sub esp, 4; push esi; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x000f0d84: lea esi, [esi]; sub esp, 8; lea edx, [esp + 0x14]; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x000f8004: lea esi, [esi]; sub esp, 8; lea edx, [esp + 8]; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x0016ee0c: lea esi, [esi]; sub esp, 8; mov eax, dword ptr [ebx + 0x10]; push dword ptr [esp + 0x14]; push esi; call dword ptr [eax + 4]; 
0x001754cc: lea esi, [esi]; sub esp, 8; mov eax, dword ptr [ebx + 4]; push esi; push ebx; call dword ptr [eax + 0x24]; 
0x00179c5c: lea esi, [esi]; sub esp, 8; mov eax, dword ptr [ebx + 8]; push dword ptr [esp + 0x14]; push ebx; call dword ptr [eax]; 
0x001ac6bd: lea esi, [esi]; test ah, 0xf0; jne 0x1ac6e0; lea eax, [edi - 8]; pop edi; ret; 
0x001ac46c: lea esi, [esi]; test ah, 1; jne 0x1ac490; lea eax, [ecx + 0xc]; ret; 
0x001898ed: lea esi, [esi]; test al, al; jne 0x189916; mov eax, 4; add esp, 0xc; ret; 
0x0005acdc: lea esi, [esi]; test eax, eax; je 0x5acf0; sub eax, 1; mov dword ptr [edx + 4], eax; ret; 
0x000433a4: lea esi, [esi]; tzcnt ecx, ecx; pop ebx; lea eax, [ecx + 0x20]; ret; 
0x000e8229: lea esi, [esi]; xor eax, eax; add esp, 0xc; ret; 
0x0005371c: lea esi, [esi]; xor eax, eax; pop ebx; pop esi; ret; 
0x00042d62: lea esi, [esi]; xor eax, eax; pop ebx; ret; 
0x000d97bc: lea esi, [esi]; xor eax, eax; pop edi; pop esi; ret; 
0x000c109c: lea esi, [esi]; xor eax, eax; pop edi; ret; 
0x000797e4: lea esi, [esi]; xor eax, eax; ret; 
0x0010b95d: lea esi, [esi]; xor eax, eax; xchg dword ptr [edi + 0x3fac], eax; cmp eax, 1; jg 0x10b9a8; call dword ptr [esi]; 
0x00042e3c: lea esi, [esi]; xor ecx, ecx; pop ebx; mov eax, ecx; ret; 
0x000a0479: lea esi, [esp + 0x2c]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x001300aa: lea esi, [esp + 0x2c]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x0016fc5c: lea esi, [esp + 0x34]; push esi; push ecx; push 5; push ebx; call dword ptr [eax]; 
0x00129fb0: lea esi, [esp + 8]; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x0013360b: lea esi, [esp + 8]; mov ecx, dword ptr [esp + 0x30]; mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x000d99bb: lea esi, cs:[esi]; add eax, 1; ret; 
0x0016ed6b: lea esi, cs:[esi]; add esp, 4; mov eax, 0x10; pop ebx; pop esi; ret; 
0x00157de3: lea esi, cs:[esi]; add esp, 4; mov eax, 1; pop ebx; pop esi; ret; 
0x000a870b: lea esi, cs:[esi]; add esp, 4; pop ebx; pop esi; ret; 
0x001420d8: lea esi, cs:[esi]; and eax, 0xffffff; ret; 
0x000c1cc8: lea esi, cs:[esi]; bsf eax, eax; add eax, edx; ret; 
0x000c1ce8: lea esi, cs:[esi]; bsf eax, eax; lea eax, [eax + edx + 0x20]; ret; 
0x000c1848: lea esi, cs:[esi]; bsr eax, eax; lea eax, [eax + ecx + 0x20]; ret; 
0x000c1858: lea esi, cs:[esi]; bsr eax, eax; lea eax, [eax + ecx + 0x30]; ret; 
0x00192b88: lea esi, cs:[esi]; endbr32; mov eax, 0xffffffff; ret; 
0x0017cefb: lea esi, cs:[esi]; endbr32; mov eax, dword ptr [esp + 4]; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x000ea118: lea esi, cs:[esi]; hlt; mov eax, edx; call dword ptr gs:[0x10]; 
0x001ac48b: lea esi, cs:[esi]; lea eax, [ecx + 8]; ret; 
0x001ab51b: lea esi, cs:[esi]; lea eax, [edx + 1]; ret; 
0x0012ff2b: lea esi, cs:[esi]; lea ecx, [esp + 0xc]; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x0010c03b: lea esi, cs:[esi]; lea ecx, [esp + 4]; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x000d99c4: lea esi, cs:[esi]; lea esi, [esi]; add eax, 3; ret; 
0x0008ecf5: lea esi, cs:[esi]; lea esi, [esi]; endbr32; ret; 
0x001aaf24: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [ecx + 0xa]; ret; 
0x001aaf34: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [ecx + 0xb]; ret; 
0x001aaf44: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [ecx + 0xd]; ret; 
0x001aaf54: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [ecx + 0xe]; ret; 
0x001aaf64: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [ecx + 0xf]; ret; 
0x001aaec4: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [ecx + 2]; ret; 
0x001aaed4: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [ecx + 3]; ret; 
0x001aaee4: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [ecx + 5]; ret; 
0x001aaef4: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [ecx + 6]; ret; 
0x001aaf04: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [ecx + 7]; ret; 
0x001ac442: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [ecx + 8]; ret; 
0x001aaf14: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [ecx + 9]; ret; 
0x001ab584: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [edx + 0xa]; ret; 
0x001ab594: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [edx + 0xc]; ret; 
0x001ab5a4: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [edx + 0xd]; ret; 
0x001ab5b4: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [edx + 0xe]; ret; 
0x001ab524: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [edx + 2]; ret; 
0x001ab534: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [edx + 4]; ret; 
0x001ab544: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [edx + 5]; ret; 
0x001ab554: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [edx + 6]; ret; 
0x001ab564: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [edx + 8]; ret; 
0x001ab574: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [edx + 9]; ret; 
0x001ac415: lea esi, cs:[esi]; lea esi, [esi]; mov eax, ecx; ret; 
0x000d99d4: lea esi, cs:[esi]; lea esi, [esi]; xor eax, eax; ret; 
0x001a9b53: lea esi, cs:[esi]; lea esi, cs:[esi]; add eax, 1; ret; 
0x001ac483: lea esi, cs:[esi]; lea esi, cs:[esi]; lea eax, [ecx + 8]; ret; 
0x001ab513: lea esi, cs:[esi]; lea esi, cs:[esi]; lea eax, [edx + 1]; ret; 
0x000d99e3: lea esi, cs:[esi]; lea esi, cs:[esi]; mov eax, 1; ret; 
0x00092ed3: lea esi, cs:[esi]; lea esi, cs:[esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x000b3663: lea esi, cs:[esi]; lea esi, cs:[esi]; pop ebx; ret; 
0x000c1303: lea esi, cs:[esi]; lea esi, cs:[esi]; xor eax, eax; ret; 
0x00145df3: lea esi, cs:[esi]; mov byte ptr [ebx], 0; add esp, 8; pop ebx; ret; 
0x00170718: lea esi, cs:[esi]; mov dword ptr [eax], 0xa; pop ebx; ret; 
0x00170728: lea esi, cs:[esi]; mov dword ptr [eax], 8; pop ebx; ret; 
0x000b36a8: lea esi, cs:[esi]; mov dword ptr [ecx], edx; pop ebx; ret; 
0x0012e383: lea esi, cs:[esi]; mov eax, 0x11c; mov ebx, 3; mov ecx, 0x7fffffff; mov esi, 5; call dword ptr gs:[0x10]; 
0x000fb223: lea esi, cs:[esi]; mov eax, 0x40; ret; 
0x0014d963: lea esi, cs:[esi]; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x00082053: lea esi, cs:[esi]; mov eax, 0xffffffff; ret; 
0x001a5feb: lea esi, cs:[esi]; mov eax, 1; ja 0x1a5ff9; neg eax; ret; 
0x000d99eb: lea esi, cs:[esi]; mov eax, 1; ret; 
0x0004291b: lea esi, cs:[esi]; mov eax, 1; xor edx, edx; pop ebx; ret; 
0x0014044b: lea esi, cs:[esi]; mov eax, 6; call dword ptr gs:[0x10]; 
0x0010bbdb: lea esi, cs:[esi]; mov eax, dword ptr [eax + 8]; test eax, eax; je 0x10bae2; call eax; 
0x00133b93: lea esi, cs:[esi]; mov eax, dword ptr [esp + 0xc]; mov edx, dword ptr [edx]; mov dword ptr [eax], edx; mov eax, 1; ret; 
0x001416f3: lea esi, cs:[esi]; mov eax, ebx; mov byte ptr [ecx + edx], 0; pop ebx; ret; 
0x00092edb: lea esi, cs:[esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x000b4308: lea esi, cs:[esi]; mov eax, edx; pop ebx; ret; 
0x00152b93: lea esi, cs:[esi]; mov edx, 0xffffffff; mov eax, edx; pop ebx; pop esi; ret; 
0x00170693: lea esi, cs:[esi]; mov edx, dword ptr [edx + 0x10]; mov dword ptr [eax], 7; mov dword ptr [eax + 4], edx; pop ebx; ret; 
0x000b374b: lea esi, cs:[esi]; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000b375b: lea esi, cs:[esi]; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000b376b: lea esi, cs:[esi]; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x0019f31b: lea esi, cs:[esi]; movzx ecx, byte ptr [eax + 2]; movzx eax, byte ptr [edx + 2]; sub eax, ecx; ret; 
0x0019f32b: lea esi, cs:[esi]; movzx ecx, byte ptr [eax + 3]; movzx eax, byte ptr [edx + 3]; sub eax, ecx; ret; 
0x0019f33b: lea esi, cs:[esi]; movzx ecx, byte ptr [eax + 4]; movzx eax, byte ptr [edx + 4]; sub eax, ecx; ret; 
0x0019f34b: lea esi, cs:[esi]; movzx ecx, byte ptr [eax + 5]; movzx eax, byte ptr [edx + 5]; sub eax, ecx; ret; 
0x0019f2fb: lea esi, cs:[esi]; movzx ecx, byte ptr [eax]; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x0016eae6: lea esi, cs:[esi]; nop; endbr32; ret; 
0x0009af36: lea esi, cs:[esi]; nop; mov dword ptr [eax + 4], edx; ret; 
0x000906d7: lea esi, cs:[esi]; nop; mov eax, 0x16; ret; 
0x00086a36: lea esi, cs:[esi]; nop; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000d99f6: lea esi, cs:[esi]; nop; mov eax, 2; ret; 
0x000d9a06: lea esi, cs:[esi]; nop; mov eax, 3; ret; 
0x000d9a16: lea esi, cs:[esi]; nop; mov eax, 4; ret; 
0x000d9a26: lea esi, cs:[esi]; nop; mov eax, 5; ret; 
0x000d9a36: lea esi, cs:[esi]; nop; mov eax, 6; ret; 
0x000d9a46: lea esi, cs:[esi]; nop; mov eax, 7; ret; 
0x00042187: lea esi, cs:[esi]; nop; xor eax, eax; ret; 
0x0009807b: lea esi, cs:[esi]; or dword ptr [eax], 0x80000000; xor eax, eax; ret; 
0x0008f2c3: lea esi, cs:[esi]; pop ebx; pop esi; pop edi; ret; 
0x000b366b: lea esi, cs:[esi]; pop ebx; ret; 
0x000bd998: lea esi, cs:[esi]; pop esi; ret; 
0x0008e7a3: lea esi, cs:[esi]; ret; 
0x00179dab: lea esi, cs:[esi]; sub esp, 0xc; mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 4]; 
0x00178348: lea esi, cs:[esi]; sub esp, 0xc; push eax; call dword ptr [edx + 0x10]; 
0x0007d4eb: lea esi, cs:[esi]; sub esp, 4; push 0x10; push ebp; push esi; call dword ptr [eax + 0x1c]; 
0x00024edb: lea esi, cs:[esi]; sub esp, 4; push esi; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x000f0d83: lea esi, cs:[esi]; sub esp, 8; lea edx, [esp + 0x14]; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x000f8003: lea esi, cs:[esi]; sub esp, 8; lea edx, [esp + 8]; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x001754cb: lea esi, cs:[esi]; sub esp, 8; mov eax, dword ptr [ebx + 4]; push esi; push ebx; call dword ptr [eax + 0x24]; 
0x00179c5b: lea esi, cs:[esi]; sub esp, 8; mov eax, dword ptr [ebx + 8]; push dword ptr [esp + 0x14]; push ebx; call dword ptr [eax]; 
0x0005acdb: lea esi, cs:[esi]; test eax, eax; je 0x5acf0; sub eax, 1; mov dword ptr [edx + 4], eax; ret; 
0x0016eadb: lea esi, cs:[esi]; xor eax, eax; add esp, 0xc; ret; 
0x000d97bb: lea esi, cs:[esi]; xor eax, eax; pop edi; pop esi; ret; 
0x000c109b: lea esi, cs:[esi]; xor eax, eax; pop edi; ret; 
0x000797e3: lea esi, cs:[esi]; xor eax, eax; ret; 
0x00042e3b: lea esi, cs:[esi]; xor ecx, ecx; pop ebx; mov eax, ecx; ret; 
0x000a0478: lea esi, fs:[esp + 0x2c]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x001300a9: lea esi, fs:[esp + 0x2c]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x0009399c: lea esp, [eax]; add al, byte ptr [eax]; add byte ptr [eax + 0x9b], bh; call dword ptr gs:[0x10]; 
0x00056626: lea esp, [ebp - 0xc]; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x00025a39: lea esp, [ebp - 0xc]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0013c048: lea esp, [ebp - 8]; mov eax, 5; pop ebx; pop esi; pop ebp; ret; 
0x0012c34f: lea esp, [ebp - 8]; pop ebx; pop esi; pop ebp; ret; 
0x0013c03b: lea esp, [ebp - 8]; xor eax, eax; pop ebx; pop esi; pop ebp; ret; 
0x00069f99: lea esp, [edx + edi*8 - 1]; call dword ptr [ebx - 0x18]; 
0x0006993e: lea esp, [edx + edi*8 - 1]; dec dword ptr [ecx - 0x5976b]; call dword ptr [eax - 0x18]; 
0x00190fc3: leave; adc al, 0xf3; call dword ptr [edi - 1]; 
0x000decc4: leave; add al, byte ptr [ecx - 0x70a3d707]; add dh, byte ptr [esi + 0xa]; mov eax, edx; ret; 
0x000efa71: leave; add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x0002fec3: leave; add byte ptr [eax], al; add byte ptr [ebx - 0x6c72f714], al; jle 0x2fef9; stc; call dword ptr [edx + 0x50]; 
0x00169723: leave; add byte ptr [eax], al; add byte ptr [ebx - 0x7cefdbac], cl; ret 0x8902; 
0x00126fe3: leave; add eax, 0xec830000; or byte ptr [ebp - 0x6b2f87d], cl; call dword ptr [eax + 0x55]; 
0x000c1b23: leave; add eax, ecx; ret; 
0x0003ce89: leave; add edi, esi; ret 0; 
0x0004286c: leave; bsr ecx, ecx; shl eax, cl; ret; 
0x00034e25: leave; call 0x34900; mov edx, dword ptr [esp + 0x14]; add esp, 0xc; mov eax, edx; ret; 
0x0011fcda: leave; call dword ptr gs:[0x10]; 
0x0011fcda: leave; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x11fcf0; pop ebx; ret; 
0x0007198f: leave; clc; inc dword ptr [ecx]; ror dword ptr [ecx + 0x244c8bca], 0x4c; mov dword ptr [esp + 4], ecx; jmp edx; 
0x001713c3: leave; cld; jmp dword ptr [esi - 0x70]; 
0x00157210: leave; cmp eax, 2; jne 0x157220; mov eax, ecx; ret; 
0x0010e343: leave; dec eax; stc; call dword ptr [eax - 0x18]; 
0x00126f14: leave; dec esp; stc; call dword ptr [eax + 0x55]; 
0x0003c06c: leave; fstp st(1); ret; 
0x0015a0a3: leave; into; add al, byte ptr [eax]; add esp, 0x10; mov eax, dword ptr [esp]; call eax; 
0x0010b8b4: leave; je 0x10b8d0; cmp byte ptr [esp + 0x17], 0; jne 0x10b960; call ecx; 
0x00128387: leave; je 0x12838d; mov dword ptr [ecx + 4], edx; mov dword ptr [edx], ecx; mov dword ptr [edx + 4], eax; ret; 
0x00137a3d: leave; je 0x137a48; xor eax, eax; pop ebx; ret; 
0x0013bed2: leave; je 0x13bee8; ret; 
0x000432e3: leave; je 0x432f0; pop ebx; ret; 
0x00085a52: leave; je 0x85a58; mov byte ptr [edx], 0; pop ebx; ret; 
0x000c1b1e: leave; je 0xc1b30; bsf ecx, ecx; add eax, ecx; ret; 
0x00113361: leave; jne 0x113343; xor eax, eax; pop ebx; ret; 
0x001359b9: leave; jne 0x1359c8; mov eax, edx; pop ebx; pop esi; ret; 
0x00135a34: leave; jne 0x135a40; mov eax, edx; pop ebx; pop esi; ret; 
0x00135c28: leave; jne 0x135c30; mov eax, edx; pop ebx; pop esi; ret; 
0x0013627d: leave; jne 0x136288; mov eax, edx; pop ebx; pop esi; ret; 
0x001362dd: leave; jne 0x1362e8; mov eax, edx; pop ebx; pop esi; ret; 
0x001364c8: leave; jne 0x1364d0; mov eax, edx; pop ebx; pop esi; ret; 
0x001706b4: leave; jne 0x1706d8; mov dword ptr [eax], 0; pop ebx; ret; 
0x0018876f: leave; jne 0x188778; ret; 
0x000a0bf6: leave; jne 0xa0c00; add esp, 8; pop ebx; ret; 
0x000c2d5c: leave; jne 0xc2d61; xor eax, eax; ret; 
0x000d9a97: leave; jne 0xd9a78; add eax, 1; ret; 
0x000d9a6d: leave; jne 0xd9a92; ret; 
0x000f0b91: leave; jne 0xf0b73; xor eax, eax; pop ebx; ret; 
0x000f36d1: leave; jne 0xf36b3; xor eax, eax; pop ebx; ret; 
0x000f44d1: leave; jne 0xf44b3; xor eax, eax; pop ebx; ret; 
0x000f7001: leave; jne 0xf6fe3; xor eax, eax; pop ebx; ret; 
0x000f7e11: leave; jne 0xf7df3; xor eax, eax; pop ebx; ret; 
0x001227fd: leave; js 0x122808; mov eax, dword ptr [edx + 8]; and eax, 0x100f; ret; 
0x000fb5a9: leave; js 0xfb5b0; ret; 
0x000e79dd: leave; lcall 0, 0xaa870f3b; add byte ptr [eax + 0x194], bh; call dword ptr gs:[0x10]; 
0x00098353: leave; lcall 0, 0xc4870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x00098f69: leave; lcall 0, 0xc6870f3b; add byte ptr [ebx - 0x5e9ae3a9], cl; push 0x39000000; ret 0x6974; 
0x00098ce6: leave; lcall 1, 0x39870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x00178027: leave; ljmp 0x8908:0x24748bff; ret; 
0x0009a5ba: leave; lock cmpxchg dword ptr [edx], ecx; mov eax, 0x10; cmove eax, ecx; ret; 
0x00182968: leave; lock inc dword ptr [ebx + 0x448b10c4]; and al, 0xc; add esp, 0x18; pop ebx; ret; 
0x000c0074: leave; mov byte ptr [eax], cl; mov eax, edi; pop ebx; pop edi; ret; 
0x000e75fa: leave; mov eax, 0x196; not ebx; lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x00042970: leave; mov eax, 0x80000000; bsr ecx, ecx; xor ecx, 0x1f; shr eax, cl; ret; 
0x001510f7: leave; mov eax, ecx; pop ebx; pop esi; ret; 
0x00040264: leave; mov ebx, 0; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x000908c0: leave; or dword ptr [edx + 8], 8; mov dword ptr [edx + 0x10], eax; mov eax, ecx; ret; 
0x000433ab: leave; pop ebx; lea eax, [ecx + 0x20]; ret; 
0x00042e41: leave; pop ebx; mov eax, ecx; ret; 
0x000513a4: leave; push cs; add byte ptr [ebx - 0x72d7db84], cl; xchg dword ptr [eax + 0x78], esi; stc; call dword ptr [eax - 0x73]; 
0x0004286f: leave; shl eax, cl; ret; 
0x000c12db: leave; sub edx, ecx; jbe 0xc1310; add eax, ecx; ret; 
0x00043152: leave; xor ecx, 0x1f; lea eax, [ecx + 0x20]; pop ebx; ret; 
0x00042978: leave; xor ecx, 0x1f; shr eax, cl; ret; 
0x0009537a: leave; xor esi, esi; call dword ptr gs:[0x10]; 
0x000b3238: les eax, ptr [0x5b5f0000]; ret; 
0x0003bbf2: les eax, ptr [eax + 0x5b]; pop esi; pop edi; fsubp st(1); ret; 
0x0003bb80: les eax, ptr [eax + 0x5b]; pop esi; pop edi; ret; 
0x0016ed71: les eax, ptr [eax + edi*4]; adc byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0005b851: les eax, ptr [eax + edi*4]; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x000a69d1: les eax, ptr [eax + edi*4]; push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0013f600: les eax, ptr [eax]; add byte ptr [eax], al; add eax, dword ptr gs:[0]; ret; 
0x0012f0ef: les eax, ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001a9e28: les eax, ptr [eax]; add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x0012dc6f: les eax, ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0xc0]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0012f181: les eax, ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000c1bdd: les eax, ptr [ebp - 0x257af040]; add byte ptr [eax], al; add bh, dh; ret 0x3f; 
0x001aac86: les eax, ptr [ebp - 0x7e7af040]; add dword ptr [eax], eax; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000c1762: les eax, ptr [ebp - 0xa7af040]; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x0014bfab: les eax, ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0012619f: les eax, ptr [ebx + ebx*2]; mov eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x00082bd7: les eax, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x0014a93b: les eax, ptr [ebx + ebx*2]; pop esi; mov eax, edx; pop edi; pop ebp; ret; 
0x00039fbe: les eax, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00026042: les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00025059: les eax, ptr [ebx + ebx*2]; pop esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x001a32aa: les eax, ptr [ebx + ebx*2]; ret; 
0x001716ff: les eax, ptr [ecx + eax]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x001210c9: les eax, ptr [ecx + ecx*4 - 0x30]; pop ebx; pop esi; ret; 
0x00170df8: les eax, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; jmp eax; 
0x0014189d: les eax, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x0008e63b: les eax, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x00097db1: les eax, ptr [ecx + ecx*4]; fmul dword ptr [ecx - 0x16a1a436]; cmp dl, 0xff; jmp dword ptr [esi - 0x70]; 
0x0013a840: les eax, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x001558ed: les eax, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5f], 1; ret; 
0x0005aeb3: les eax, ptr [ecx + esi]; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x00114f68: les eax, ptr [ecx]; add byte ptr [eax], al; mov esi, dword ptr [esp + 0xbc]; call dword ptr gs:[0x10]; 
0x001ac471: les eax, ptr [ecx]; jne 0x1ac490; lea eax, [ecx + 0xc]; ret; 
0x000d3206: les eax, ptr [ecx]; ret 0x148d; 
0x000af270: les eax, ptr [ecx]; ret; 
0x00136d6f: les eax, ptr [edi + ecx]; mov dh, 0xc0; pop ebx; pop esi; neg eax; ret; 
0x001720b2: les eax, ptr [edi + ecx]; mov dh, 0xc0; pop ebx; pop esi; ret; 
0x000942c8: les eax, ptr [edi + esi*8]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x000a44f5: les eax, ptr [edx - 7]; call dword ptr [eax - 0x18]; 
0x0003c067: les eax, ptr [edx]; fchs; fcmove st(0), st(1); fstp st(1); ret; 
0x0003b995: les eax, ptr [edx]; je 0x3b99b; fchs; ret; 
0x0003bd35: les eax, ptr [edx]; je 0x3bd3b; fchs; ret; 
0x001aa30a: les eax, ptr [edx]; jne 0x1aa3a0; lea eax, [edi - 8]; pop edi; ret; 
0x001aae8a: les eax, ptr [edx]; jne 0x1aaf20; lea eax, [ecx + 8]; ret; 
0x001ab0c9: les eax, ptr [edx]; jne 0x1ab170; add edx, 8; jl 0x1ab1d0; lea eax, [ecx + 8]; ret; 
0x001ab4d1: les eax, ptr [edx]; jne 0x1ab580; test ah, 4; jne 0x1ab590; lea eax, [edx + 0xb]; ret; 
0x001a5b41: les eax, ptr [esi + ebx*2]; pop edi; pop ebp; pop ebx; xor eax, eax; ret; 
0x0009087a: les eax, ptr [esi + ebx*2]; pop edi; ret; 
0x0010e4ae: les ebp, ptr [eax + 0x5b]; ret; 
0x001ad400: les ebp, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret 4; 
0x00033882: les ebp, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x00055775: les ebp, ptr [eax]; mov eax, ebx; pop ebx; ret 4; 
0x0008e016: les ebp, ptr [eax]; mov eax, ebx; pop ebx; ret; 
0x00192c1d: les ebp, ptr [eax]; or eax, edx; pop ebx; movzx eax, al; neg eax; ret; 
0x0003cf47: les ebp, ptr [eax]; pop ebx; ret; 
0x000deecf: les ebp, ptr [eax]; xor eax, eax; pop ebx; ret; 
0x00179de3: les ebp, ptr [ebp + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0002a75d: les ebp, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; jmp eax; 
0x0002f099: les ebp, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x0008d8b6: les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; jmp eax; 
0x00023536: les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000db116: les ebp, ptr [ecx + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00038b45: les ebp, ptr [ecx + ecx*4]; call 0x5d62e9a8; ret; 
0x000e7993: les ebp, ptr [ecx + ecx*4]; call 0x5d6dd7f6; ret; 
0x000f0395: les ebp, ptr [ecx + ecx*4]; call 0x5d6e61f8; ret; 
0x0010aa05: les ebp, ptr [ecx + ecx*4]; call 0x5d700868; ret; 
0x0010ed6e: les ebp, ptr [ecx + ecx*4]; call 0x5d704bd1; ret; 
0x0010ee8c: les ebp, ptr [ecx + ecx*4]; call 0x5d704cef; ret; 
0x0003d5e7: les ebp, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x000dbacf: les ebp, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x00086d81: les ebp, ptr [ecx + esi]; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x0012ed8e: les ebp, ptr [edi + ecx]; mov dh, 0xc0; neg eax; ret; 
0x0010b4ad: les ebp, ptr [edi + ecx]; mov dh, 0xc0; ret; 
0x00070157: les ebp, ptr [esp + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x0014e6d5: les ebp, ptr [esp + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0003cda2: les ebx, ptr [eax + 0x5b000000]; ret; 
0x0003cb0b: les ebx, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x000edc85: les ebx, ptr [eax + ecx + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x000ef1b3: les ebx, ptr [eax + ecx]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0016ec27: les ebx, ptr [eax]; lea eax, [ebx + 0xa5ec]; pop ebx; ret; 
0x000421c3: les ebx, ptr [eax]; lea eax, [ebx + 6]; pop ebx; ret; 
0x00123430: les ebx, ptr [eax]; mov eax, ebx; pop ebx; ret; 
0x00042ccf: les ebx, ptr [eax]; mov edx, eax; mov eax, 0x10; pop ebx; sub eax, edx; ret; 
0x00042c3d: les ebx, ptr [eax]; mov edx, eax; mov eax, 0x20; pop ebx; sub eax, edx; ret; 
0x00042ca1: les ebx, ptr [eax]; mov edx, eax; mov eax, 0x40; pop ebx; sub eax, edx; ret; 
0x00042c0f: les ebx, ptr [eax]; mov edx, eax; mov eax, 8; pop ebx; sub eax, edx; ret; 
0x0017b9b4: les ebx, ptr [eax]; pop ebx; jmp eax; 
0x000a97f9: les ebx, ptr [eax]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0003bf20: les ebx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0002450f: les ebx, ptr [eax]; pop ebx; ret; 
0x0008feef: les ebx, ptr [eax]; xor eax, eax; pop ebx; ret; 
0x00156c84: les ebx, ptr [ebp - 7]; call dword ptr [eax - 1]; 
0x0010f04e: les ebx, ptr [ebx + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000287c0: les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; jmp eax; 
0x0003afa7: les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret 4; 
0x00029e3c: les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x0009afa3: les ebx, ptr [ebx + ebx*2]; lea eax, [eax + eax - 1]; pop esi; pop edi; pop ebp; ret; 
0x0007fb55: les ebx, ptr [ebx + ebx*2]; lea eax, [ecx + esi]; pop esi; pop edi; pop ebp; ret; 
0x00030738: les ebx, ptr [ebx + ebx*2]; mov eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x00178433: les ebx, ptr [ebx + ebx*2]; mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x000386bf: les ebx, ptr [ebx + ebx*2]; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x00033608: les ebx, ptr [ebx + ebx*2]; pop esi; mov eax, edi; pop edi; pop ebp; ret; 
0x0007e06f: les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; jmp eax; 
0x0002520d: les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0008a22a: les ebx, ptr [ebx + ebx*2]; pop esi; sub eax, edi; pop edi; pop ebp; ret; 
0x0007fb90: les ebx, ptr [ebx + ebx*2]; sar eax, 2; pop esi; pop edi; pop ebp; ret; 
0x0014bf1f: les ebx, ptr [ebx - 7]; call dword ptr [eax - 0x18]; 
0x00115d3f: les ebx, ptr [ecx + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x00190643: les ebx, ptr [ecx + eax*8]; clc; pop ds; ret; 
0x0014ae65: les ebx, ptr [ecx + eax]; add byte ptr [eax], al; ret; 
0x000e8b8a: les ebx, ptr [ecx + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00034f3f: les ebx, ptr [ecx + ecx*4]; call 0x5d62ada2; ret; 
0x0003dfa1: les ebx, ptr [ecx + ecx*4]; call 0x5d633e04; ret; 
0x0007fa03: les ebx, ptr [ecx + ecx*4]; call 0x5d675866; ret; 
0x0009864b: les ebx, ptr [ecx + ecx*4]; call 0x5d68e4ae; ret; 
0x00098fd8: les ebx, ptr [ecx + ecx*4]; call 0x5d68ee3b; ret; 
0x00099735: les ebx, ptr [ecx + ecx*4]; call 0x5d68f598; ret; 
0x000a1a6b: les ebx, ptr [ecx + ecx*4]; call 0x5d6978ce; ret; 
0x000a1aed: les ebx, ptr [ecx + ecx*4]; call 0x5d697950; ret; 
0x000a4700: les ebx, ptr [ecx + ecx*4]; call 0x5d69a563; ret; 
0x0010eb9a: les ebx, ptr [ecx + ecx*4]; call 0x5d7049fd; ret; 
0x001550bf: les ebx, ptr [ecx + ecx*4]; call 0x5d74af22; ret; 
0x001571c3: les ebx, ptr [ecx + ecx*4]; call 0x5d74d026; ret; 
0x0016a3bf: les ebx, ptr [ecx + ecx*4]; call 0x5d760222; ret; 
0x0016d1ff: les ebx, ptr [ecx + ecx*4]; call 0x5d763062; ret; 
0x0016dc8f: les ebx, ptr [ecx + ecx*4]; call 0x5d763af2; ret; 
0x0016df5f: les ebx, ptr [ecx + ecx*4]; call 0x5d763dc2; ret; 
0x0018c358: les ebx, ptr [ecx + ecx*4]; call 0x5d7821bb; ret; 
0x000384eb: les ebx, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x00038e59: les ebx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x0002523c: les ebx, ptr [ecx + esi]; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x0012ed4d: les ebx, ptr [edi + ecx]; mov dh, 0xc0; neg eax; ret; 
0x00172bfa: les ebx, ptr [edi + ecx]; mov dh, 0xc0; ret; 
0x0015dfe9: les ebx, ptr [edx + ecx + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x00047a4a: les ebx, ptr [esp + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x001467f8: les ebx, ptr [esp + ecx]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000da7c1: les ecx, ptr [eax + 0x5b]; ret; 
0x0010441f: les ecx, ptr [eax + edi + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x0010ecce: les ecx, ptr [eax + edi*4]; add eax, 0x5b000000; pop esi; pop edi; pop ebp; ret; 
0x0013790c: les ecx, ptr [eax + edx*2]; push 0; push 0x2000002; call dword ptr [ebp + 0x14]; 
0x001397b1: les ecx, ptr [eax + edx*2]; push dword ptr [ebp - 0x4c]; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x00139cae: les ecx, ptr [eax + edx*2]; push dword ptr [ebp - 0x5c]; push ebx; call dword ptr [esi + 0x14]; 
0x00137a05: les ecx, ptr [eax + edx*2]; push dword ptr [esp + 0xc]; push 0x2000001; call dword ptr [ebp + 0x14]; 
0x0013749d: les ecx, ptr [eax + edx*2]; push ebx; push 0x2000001; call dword ptr [ebp + 0x14]; 
0x00138442: les ecx, ptr [eax + edx*2]; push edi; push 0x2000003; call dword ptr [ebx + 0x14]; 
0x00138216: les ecx, ptr [eax + edx*2]; push esi; push 0x2000006; call dword ptr [ebx + 0x14]; 
0x0014b42c: les ecx, ptr [eax]; lea edx, [eax + ecx]; pop ebx; mov eax, edx; ret; 
0x000971f1: les ecx, ptr [eax]; mov eax, 0x16; pop ebx; ret; 
0x0005bd01: les ecx, ptr [eax]; mov eax, 0xffffffff; pop ebx; ret; 
0x00129338: les ecx, ptr [eax]; mov eax, 1; pop ebx; ret; 
0x00061f5c: les ecx, ptr [eax]; mov eax, ebx; pop ebx; ret; 
0x000535be: les ecx, ptr [eax]; mov eax, edx; pop ebx; ret; 
0x00088ca5: les ecx, ptr [eax]; movzx eax, al; pop ebx; neg eax; ret; 
0x00170f1b: les ecx, ptr [eax]; movzx eax, al; pop ebx; ret; 
0x0010cc53: les ecx, ptr [eax]; or eax, edx; pop ebx; ret; 
0x0005a1d9: les ecx, ptr [eax]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000271a6: les ecx, ptr [eax]; pop ebx; ret; 
0x0003bf96: les ecx, ptr [eax]; ret; 
0x0003c358: les ecx, ptr [eax]; xor eax, eax; pop ebx; ret; 
0x0009cdcb: les ecx, ptr [ebp - 0x6776f79]; call dword ptr [eax - 0x73]; 
0x000278f7: les ecx, ptr [ebx + 0x45c7c84d]; mov ah, 3; add byte ptr [eax], al; add byte ptr [ecx + 0x458bc445], cl; aam 0x89; ret; 
0x000362cd: les ecx, ptr [ebx + eax*4]; ret 0x5201; 
0x000a7e47: les ecx, ptr [ebx + ebp]; dec ebp; add byte ptr [ecx], ch; ret 0xd801; 
0x0003b1fe: les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret 4; 
0x0003f976: les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x000ad037: les ecx, ptr [ebx + ebx*2]; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x00157b18: les ecx, ptr [ebx + ebx*2]; or eax, 1; pop esi; pop edi; pop ebp; ret; 
0x0014a861: les ecx, ptr [ebx + ebx*2]; pop esi; mov eax, ecx; pop edi; pop ebp; ret; 
0x00080dfd: les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; jmp eax; 
0x000a7521: les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret 4; 
0x0002711d: les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00171076: les ecx, ptr [ebx + ecx*4]; inc edi; or byte ptr [ebp - 1], dl; jbe 0x17108b; push edi; call dword ptr [eax + 8]; 
0x0005f730: les ecx, ptr [ebx + edx*2]; push edi; push esi; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0017ebeb: les ecx, ptr [ebx - 0x8f7b]; inc dword ptr [ecx]; ret; 
0x0017ec37: les ecx, ptr [ebx - 0xb77b]; dec dword ptr [ecx + 0x1c8d544]; ret; 
0x001829a4: les ecx, ptr [ebx]; add byte ptr [ecx + 0x168ec], al; add byte ptr [ecx - 0x1636b], cl; dec dword ptr [ecx - 0x15f7b]; jmp dword ptr [ebp - 0x5f]; 
0x0004afaa: les ecx, ptr [ecx + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0013d1ce: les ecx, ptr [ecx + ebp*8]; mov ebx, 0xe8fffe83; push ss; idiv bh; jmp dword ptr [esi - 0x70]; 
0x00177a1c: les ecx, ptr [ecx + ebp*8]; ret 0xfffc; 
0x0013d12e: les ecx, ptr [ecx + ebp*8]; sub eax, dword ptr [ecx - 0x49170002]; idiv bh; jmp dword ptr [esi - 0x70]; 
0x0013e946: les ecx, ptr [ecx + ebp*8]; xor ebx, dword ptr [esi - 7]; dec dword ptr [ebp - 0x6417ff8a]; fdivp st(7); jmp dword ptr [esi - 0x70]; 
0x000c4ccb: les ecx, ptr [ecx + ebp]; ret; 
0x001519f9: les ecx, ptr [ecx + ecx*4]; call 0x4424e386; ret 0x148b; 
0x0007c025: les ecx, ptr [ecx + ecx*4]; call 0x5d671e88; ret; 
0x000c5cc5: les ecx, ptr [ecx + ecx*4]; call 0x5d6bbb28; ret; 
0x001516aa: les ecx, ptr [ecx + ecx*4]; call 0x5d74750d; ret; 
0x00189ff9: les ecx, ptr [ecx + ecx*4]; call 0x5d77fe5c; ret; 
0x000403c0: les ecx, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x00027985: les ecx, ptr [ecx + ecx*4]; inc ebp; fmul qword ptr [ebp - 0x218f137d]; call dword ptr [eax - 0x73]; 
0x00087a28: les ecx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x000afcb4: les ecx, ptr [ecx + ecx*4]; ret 0x468d; 
0x00069c81: les ecx, ptr [ecx + ecx*4]; ret 0xc031; 
0x000342cc: les ecx, ptr [ecx + ecx*4]; ret; 
0x000270f9: les ecx, ptr [ecx + esi]; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x000eb459: les ecx, ptr [ecx*4 + 0x5e5b0245]; pop edi; pop ebp; ret; 
0x000eb342: les ecx, ptr [ecx*4 + 0x5e5b0845]; pop edi; pop ebp; ret; 
0x000a185f: les ecx, ptr [ecx*4 - 0x19e2b37a]; call dword ptr [eax + 0x57]; 
0x000a1895: les ecx, ptr [ecx*4 - 0x19e3137a]; call dword ptr [eax + 0x57]; 
0x000a1901: les ecx, ptr [ecx*4 - 0x19e3537a]; call dword ptr [eax + 0x57]; 
0x000a18ef: les ecx, ptr [ecx*4 - 0x19e4e37a]; call dword ptr [eax + 0x57]; 
0x000a18dd: les ecx, ptr [ecx*4 - 0x19e5137a]; call dword ptr [eax + 0x57]; 
0x000a18cb: les ecx, ptr [ecx*4 - 0x19e5537a]; call dword ptr [eax + 0x57]; 
0x000a18b9: les ecx, ptr [ecx*4 - 0x19e5737a]; call dword ptr [eax + 0x57]; 
0x000a18a7: les ecx, ptr [ecx*4 - 0x19e5937a]; call dword ptr [eax + 0x57]; 
0x000341dd: les ecx, ptr [ecx*4 - 0x6d1cf7d]; call dword ptr [eax - 1]; 
0x0009c307: les ecx, ptr [edi + ecx]; mov dh, 0xc0; lea eax, [eax + eax + 2]; ret; 
0x00053449: les ecx, ptr [edi + ecx]; mov dh, 0xc0; ret; 
0x001ac435: les ecx, ptr [edi]; jne 0x1ac450; test dh, 0xf; jne 0x1ac4a0; lea eax, [ecx + 0xc]; ret; 
0x0017675b: les ecx, ptr [edx*2 - 0x7972afad]; sub dword ptr [ebp - 7], esp; call dword ptr [edi + 0x50]; 
0x00041524: les ecx, ptr [esp + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0005f67c: les edi, ptr [eax + 0x5b]; ret; 
0x001b2907: les edi, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret 4; 
0x00027f2d: les edi, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x00161af1: les edi, ptr [eax + ecx + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x000a651a: les edi, ptr [eax]; mov eax, ebx; pop ebx; ret 4; 
0x00149be1: les edi, ptr [eax]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0009c24d: les edi, ptr [eax]; pop ebx; ret; 
0x0002b217: les edi, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; jmp eax; 
0x0002b076: les edi, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x000c72f8: les edi, ptr [ebx + ebx*2]; pop esi; lea eax, [eax + edx*4]; pop edi; pop ebp; ret; 
0x000d1bda: les edi, ptr [ebx + ebx*2]; pop esi; mov eax, ebp; pop edi; pop ebp; ret; 
0x001b6d4d: les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret 4; 
0x00026ea8: les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00184920: les edi, ptr [ecx + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x00091d97: les edi, ptr [ecx + ecx*4 - 0x18]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00142508: les edi, ptr [ecx + ecx*4 - 0x28]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000ea242: les edi, ptr [ecx + ecx*4 - 0x30]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0002f6ad: les edi, ptr [ecx + ecx*4 - 0x38]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0005a4f2: les edi, ptr [ecx + ecx*4]; call 0x5d650355; ret; 
0x000d1a60: les edi, ptr [ecx + ecx*4]; call 0x5d6c78c3; ret; 
0x000e7ef1: les edi, ptr [ecx + ecx*4]; call 0x5d6ddd54; ret; 
0x00132399: les edi, ptr [ecx + ecx*4]; call 0x5d7281fc; ret; 
0x00142dc4: les edi, ptr [ecx + ecx*4]; call 0x5d738c27; ret; 
0x00052174: les edi, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x00094c90: les edi, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x00081951: les edi, ptr [ecx + esi]; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x000353c0: les edi, ptr [ecx]; ret 0x830f; 
0x0008632b: les edi, ptr [ecx]; ret 0x850f; 
0x00093fb6: les edi, ptr [edi]; stc; call dword ptr [eax - 0x18]; 
0x0014f3f7: les edi, ptr [edx + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x0009a467: les edx, ptr [eax + 0x5b000000]; pop esi; pop edi; ret; 
0x00125313: les edx, ptr [eax + 0x5b000001]; pop esi; pop edi; ret; 
0x00090d4a: les edx, ptr [eax + eax + 0x5e5b0000]; ret; 
0x0003cc7d: les edx, ptr [eax + eax + 0x5f5b0000]; ret; 
0x00182b8a: les edx, ptr [eax - 0x76ffffff]; rcr byte ptr [ebx + 0x5e], 1; pop edi; ret; 
0x00181f51: les edx, ptr [eax - 0xf770000]; pop ebx; pop esi; ret; 
0x001271c8: les edx, ptr [eax - 7]; call dword ptr [eax + 0x55]; 
0x0011efcf: les edx, ptr [eax]; adc byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0014aa2d: les edx, ptr [eax]; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0013dd5e: les edx, ptr [eax]; add eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000a1c02: les edx, ptr [eax]; add esp, 0x14; pop ebx; pop esi; ret; 
0x0004084e: les edx, ptr [eax]; add esp, 0xc; ret; 
0x00186670: les edx, ptr [eax]; add esp, 4; mov eax, 1; pop ebx; pop esi; ret; 
0x00170f99: les edx, ptr [eax]; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x001475e7: les edx, ptr [eax]; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x00026137: les edx, ptr [eax]; add esp, 4; pop ebx; pop esi; ret; 
0x00090229: les edx, ptr [eax]; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00129335: les edx, ptr [eax]; add esp, 8; mov eax, 1; pop ebx; ret; 
0x000271a3: les edx, ptr [eax]; add esp, 8; pop ebx; ret; 
0x0009828a: les edx, ptr [eax]; call eax; 
0x000a2364: les edx, ptr [eax]; cmp eax, -1; je 0xa2370; add esp, 0xc; ret; 
0x00174a01: les edx, ptr [eax]; cmp eax, 1; mov eax, 1; sbb eax, -1; add esp, 0xc; ret; 
0x0017d044: les edx, ptr [eax]; cmp eax, 1; sete al; add esp, 0xc; movzx eax, al; ret; 
0x00168990: les edx, ptr [eax]; cmp edx, 1; jg 0x1689b8; add esp, 0x18; pop ebx; ret; 
0x001825cd: les edx, ptr [eax]; cmp edx, 1; jg 0x1825f8; add esp, 0x18; pop ebx; ret; 
0x00182659: les edx, ptr [eax]; cmp edx, 1; jg 0x182680; add esp, 0x18; pop ebx; ret; 
0x00182931: les edx, ptr [eax]; cmp edx, 1; jg 0x182958; add esp, 0x18; pop ebx; ret; 
0x00094330: les edx, ptr [eax]; cmp edx, 1; jg 0x94358; add esp, 0x18; pop ebx; ret; 
0x0014177f: les edx, ptr [eax]; lea eax, [esi + edi]; pop ebx; pop esi; pop edi; ret; 
0x0012c3b0: les edx, ptr [eax]; lea esp, [ebp - 8]; pop ebx; pop esi; pop ebp; ret; 
0x0014ab6f: les edx, ptr [eax]; mov dword ptr [eax + 8], 0; add esp, 4; pop ebx; pop esi; ret; 
0x000e7477: les edx, ptr [eax]; mov eax, 1; add esp, 0xc; ret; 
0x00124b91: les edx, ptr [eax]; mov eax, 1; add esp, 8; pop ebx; ret; 
0x0007cac2: les edx, ptr [eax]; mov eax, 1; pop ebx; pop esi; pop edi; ret; 
0x00124531: les edx, ptr [eax]; mov eax, dword ptr [eax]; test eax, eax; je 0x124580; call eax; 
0x00124675: les edx, ptr [eax]; mov eax, dword ptr [eax]; test eax, eax; je 0x124718; call eax; 
0x00136e5e: les edx, ptr [eax]; mov eax, dword ptr [ebx + 8]; mov dword ptr [ebx + 8], edx; add esp, 8; pop ebx; ret; 
0x0017b899: les edx, ptr [eax]; mov eax, dword ptr [esp + 0x1c]; sub eax, dword ptr gs:[0x14]; jne 0x17b8ac; add esp, 0x2c; ret; 
0x0017992f: les edx, ptr [eax]; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x179942; add esp, 0x4c; ret; 
0x0017999f: les edx, ptr [eax]; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x1799b2; add esp, 0x4c; ret; 
0x00179a0f: les edx, ptr [eax]; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x179a22; add esp, 0x4c; ret; 
0x00179a72: les edx, ptr [eax]; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x179a85; add esp, 0x4c; ret; 
0x00179ad2: les edx, ptr [eax]; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x179ae5; add esp, 0x4c; ret; 
0x00179b3f: les edx, ptr [eax]; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x179b52; add esp, 0x4c; ret; 
0x00179bbf: les edx, ptr [eax]; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x179bd2; add esp, 0x4c; ret; 
0x0003ca41: les edx, ptr [eax]; mov eax, dword ptr [esp + 0xc]; add esp, 0x14; pop ebx; pop esi; ret; 
0x000611fc: les edx, ptr [eax]; mov eax, dword ptr [esp + 0xc]; add esp, 0x18; pop ebx; ret; 
0x0017a0b0: les edx, ptr [eax]; mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x17a0c3; add esp, 0x1c; ret; 
0x0003efe3: les edx, ptr [eax]; mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x3eff6; add esp, 0x1c; ret; 
0x0003f0f6: les edx, ptr [eax]; mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x3f109; add esp, 0x1c; ret; 
0x0015a0a8: les edx, ptr [eax]; mov eax, dword ptr [esp]; call eax; 
0x0015a23d: les edx, ptr [eax]; mov eax, ebx; call eax; 
0x000c5d3e: les edx, ptr [eax]; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x001876a5: les edx, ptr [eax]; mov eax, ecx; pop ebx; pop esi; pop edi; ret; 
0x0009b3b5: les edx, ptr [eax]; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x0013f7b3: les edx, ptr [eax]; mov eax, edx; pop ebx; pop esi; pop edi; ret; 
0x000e9f4a: les edx, ptr [eax]; mov eax, esi; add esp, 4; pop ebx; pop esi; ret; 
0x0014d553: les edx, ptr [eax]; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00025534: les edx, ptr [eax]; mov ecx, dword ptr [esp + 0xc]; sub ecx, dword ptr gs:[0x14]; jne 0x25547; add esp, 0x1c; ret; 
0x001265c7: les edx, ptr [eax]; mov edx, 1; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0013d57c: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x13d595; add esp, 0x2c; ret; 
0x0013e7bc: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x13e7d5; add esp, 0x2c; ret; 
0x00192b42: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x192b55; add esp, 0x2c; ret; 
0x000409d1: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x409e4; add esp, 0x2c; ret; 
0x00053491: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x534a4; add esp, 0x2c; ret; 
0x00092764: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x92777; add esp, 0x2c; ret; 
0x000972e0: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x972f3; add esp, 0x2c; ret; 
0x00098594: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x985a7; add esp, 0x2c; ret; 
0x00098a04: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x98a17; add esp, 0x2c; ret; 
0x00098f20: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x98f33; add esp, 0x2c; ret; 
0x00099370: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x99383; add esp, 0x2c; ret; 
0x001798bf: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x3c]; sub edx, dword ptr gs:[0x14]; jne 0x1798d2; add esp, 0x4c; ret; 
0x0012d673: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x12d686; add esp, 0x1c; ret; 
0x0018c6c0: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x18c6d3; add esp, 0x1c; ret; 
0x000405e6: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x405f9; add esp, 0x1c; ret; 
0x00040813: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x40826; add esp, 0x1c; ret; 
0x00040ae3: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x40af6; add esp, 0x1c; ret; 
0x00040b66: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x40b79; add esp, 0x1c; ret; 
0x000da705: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xda718; add esp, 0x1c; ret; 
0x000e4f69: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xe4f7c; add esp, 0x1c; ret; 
0x000e7429: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xe743c; add esp, 0x1c; ret; 
0x000253cc: les edx, ptr [eax]; neg eax; pop ebx; adc edx, 0; neg edx; ret; 
0x00025855: les edx, ptr [eax]; neg eax; sbb eax, eax; add esp, 0xc; ret; 
0x0014a74e: les edx, ptr [eax]; or byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00060e67: les edx, ptr [eax]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0002f7d3: les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x00122946: les edx, ptr [eax]; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x00147651: les edx, ptr [eax]; pop esi; pop edi; pop ebp; ret; 
0x0016335a: les edx, ptr [eax]; push dword ptr [esp]; push 0x400; push dword ptr [esp + 0xc]; push ebp; call edi; 
0x0015a12a: les edx, ptr [eax]; push dword ptr [esp]; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x10]; call edi; 
0x0014c36f: les edx, ptr [eax]; sub eax, 1; add esp, 4; pop ebx; pop esi; ret; 
0x0017906c: les edx, ptr [eax]; sub esp, 0xc; mov eax, dword ptr [edi + 4]; push edi; call dword ptr [eax + 0x10]; 
0x00178a7c: les edx, ptr [eax]; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x001708b9: les edx, ptr [eax]; sub esp, 8; mov eax, dword ptr [edi + 4]; push 8; push edi; call dword ptr [eax + 0x18]; 
0x0013d401: les edx, ptr [eax]; test eax, eax; je 0x13d410; add esp, 8; pop ebx; ret; 
0x00162971: les edx, ptr [eax]; test eax, eax; je 0x162980; sub esp, 0xc; push esi; call eax; 
0x00162d01: les edx, ptr [eax]; test eax, eax; je 0x162d10; sub esp, 0xc; push esi; call eax; 
0x001702c1: les edx, ptr [eax]; test eax, eax; je 0x1702d0; sub esp, 0xc; push esi; call eax; 
0x00171084: les edx, ptr [eax]; test eax, eax; je 0x17118b; sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x00042117: les edx, ptr [eax]; test eax, eax; je 0x42128; add esp, 8; pop ebx; ret; 
0x00128d5d: les edx, ptr [eax]; test eax, eax; jne 0x128d1c; add esp, 0xc; ret; 
0x0017a185: les edx, ptr [eax]; test eax, eax; jne 0x17a170; add esp, 8; pop ebx; ret; 
0x0003c676: les edx, ptr [eax]; test eax, eax; jne 0x3c688; add esp, 8; pop ebx; ret; 
0x0003c925: les edx, ptr [eax]; test eax, eax; jne 0x3c930; add esp, 8; pop ebx; ret; 
0x000fab65: les edx, ptr [eax]; test eax, eax; jne 0xfab70; add esp, 8; pop ebx; ret; 
0x001318c2: les edx, ptr [eax]; test eax, eax; js 0x1318d0; add esp, 8; pop ebx; ret; 
0x00157d80: les edx, ptr [eax]; test eax, eax; sete al; add esp, 0xc; ret; 
0x000a6d51: les edx, ptr [eax]; test ebp, ebp; jne 0xa6c89; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax + 0x90]; call dword ptr [eax]; 
0x00189da0: les edx, ptr [eax]; test ebx, ebx; jne 0x189db0; add esp, 8; pop ebx; ret; 
0x0003a030: les edx, ptr [eax]; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x000ffd7c: les edx, ptr [eax]; xor eax, eax; add esp, 8; pop ebx; ret; 
0x0009427b: les edx, ptr [eax]; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x001160da: les edx, ptr [ebx + ebx*2 + 0x5e]; ret; 
0x00134581: les edx, ptr [ebx + ebx*2]; pop edi; ret; 
0x000afe1c: les edx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0002fe47: les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x0016f731: les edx, ptr [ebx + edx*2]; call dword ptr [eax + 0x10]; 
0x0003cb90: les edx, ptr [ecx + eax]; add byte ptr [eax], al; pop ebx; pop edi; ret; 
0x00125f77: les edx, ptr [ecx + ecx*4 - 0x28]; pop ebx; pop esi; ret; 
0x000ad11c: les edx, ptr [ecx + ecx*4]; call 0x5d6a2f7f; ret; 
0x00131293: les edx, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x00059f0d: les edx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret 4; 
0x001237dc: les edx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0013c28f: les edx, ptr [ecx - 0x18]; mov ch, byte ptr [ebx - 8]; dec dword ptr [ebx - 0x3b7c3bab]; adc byte ptr [ebp - 0x7ce4e884], cl; ret; 
0x000c4972: les edx, ptr [ecx*4 + 0x5e5b9804]; ret; 
0x0016b3df: les edx, ptr [edi + edi*8]; je 0x16b408; and al, 0x89; ret; 
0x000e8997: les esi, ptr [eax + 0x5b]; pop esi; pop edi; ret; 
0x000a083c: les esi, ptr [eax + eax + 0x5e5b0000]; ret; 
0x001239e3: les esi, ptr [eax - 0x77]; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x001868e5: les esi, ptr [eax]; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0017f00f: les esi, ptr [eax]; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0018681c: les esi, ptr [eax]; pop ebx; pop esi; pop edi; jmp eax; 
0x00092bd6: les esi, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x00115763: les esi, ptr [ebx + ebx*2 + 0x5e]; ret; 
0x00178517: les esi, ptr [ebx + ebx*2 + 0x5f]; ret; 
0x000407cb: les esi, ptr [ebx + ebx*2]; pop esi; ret 4; 
0x001142a2: les esi, ptr [ebx + ebx*2]; pop esi; ret; 
0x0005ab5f: les esi, ptr [esp + eax]; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x00085b50: les esp, ptr [eax + 0x5b000000]; pop esi; pop edi; ret; 
0x00116146: les esp, ptr [eax + 0x5b]; pop esi; pop edi; ret; 
0x00085959: les esp, ptr [eax + ecx]; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0003dbd6: les esp, ptr [eax]; add al, byte ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00090f4d: les esp, ptr [eax]; add esp, 0xc; ret; 
0x001627ce: les esp, ptr [eax]; add esp, 8; pop ebx; ret; 
0x001630ae: les esp, ptr [eax]; cmp edx, 1; jg 0x1630d8; add esp, 0x18; pop ebx; ret; 
0x001aa333: les esp, ptr [eax]; jne 0x1aa3d0; lea eax, [edi - 4]; pop edi; ret; 
0x001aaeb3: les esp, ptr [eax]; jne 0x1aaf50; lea eax, [ecx + 0xc]; ret; 
0x001ab0f3: les esp, ptr [eax]; jne 0x1ab1a0; add edx, 0xc; jl 0x1ab1d0; lea eax, [ecx + 0xc]; ret; 
0x001ab4fa: les esp, ptr [eax]; jne 0x1ab5b0; test ah, 0x40; jne 0x1ab5c0; lea eax, [edx + 0xf]; ret; 
0x0013ec78: les esp, ptr [eax]; mov eax, ebx; pop ebx; pop esi; pop edi; ret 4; 
0x0008e259: les esp, ptr [eax]; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000dbb71: les esp, ptr [eax]; mov eax, ecx; pop ebx; pop esi; pop edi; ret; 
0x00061eca: les esp, ptr [eax]; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x0007c33f: les esp, ptr [eax]; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00126b10: les esp, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x126b23; add esp, 0x1c; ret; 
0x0014b37a: les esp, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x14b3cc; add esp, 0x1c; ret; 
0x000255e4: les esp, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x001b6e36: les esp, ptr [eax]; ret; 
0x0010e7c2: les esp, ptr [ebx + ebx*2 + 0x5e]; ret; 
0x0008de68: les esp, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x000dc133: les esp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0003d7ff: les esp, ptr [ebx + ebx*2]; pop esi; ret; 
0x0003c63a: les esp, ptr [ecx + eax]; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0013133e: les esp, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x0012b413: les esp, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x00184017: les esp, ptr [esi - 7]; call dword ptr [eax - 0x18]; 
0x001423de: ljmp 0:0xf98110; or byte ptr [edi], 0x44; ret 0x8dc3; 
0x000e7562: ljmp 0x10c4:0x83000000; mov eax, 1; add esp, 0xc; ret; 
0x00039d58: ljmp 0x11b6:0xfd03118; test dl, dl; jne 0x39d40; ret; 
0x0010d1b5: ljmp 0x184:0xfefe183; add dword ptr [eax], eax; add byte ptr [ebx - 0x7aebdbac], cl; ror byte ptr [edi], cl; xchg ebp, eax; ret; 
0x000fba8f: ljmp 0x1b8:0x5bed7901; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x000afa3e: ljmp 0x1c70:0x89c67508; pop ebx; pop esi; ret; 
0x00051752: ljmp 0x2444:0x8b000000; or al, 0x39; ret; 
0x0002e212: ljmp 0x247c:0x8b0010fa; cmp byte ptr [ebp - 0x695d379], cl; call dword ptr [eax + 0x68]; 
0x00082050: ljmp 0x2674:0x8d2effff; add byte ptr [eax - 1], bh; ret; 
0x00193652: ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0007ca96: ljmp 0x450f:0x107f602; ret 0xec83; 
0x000fad1b: ljmp 0x47bc:0x808dffff; stc; call dword ptr [eax + 0x6a]; 
0x001aaa91: ljmp 0x547:0x8d7b7206; pop edi; ret; 
0x000b9832: ljmp 0x5b5e:0x5f000005; ret; 
0x00137ac4: ljmp 0x5bf0:0x8904c483; pop esi; ret; 
0x000816b7: ljmp 0x5bff:0xffffffb8; ret; 
0x000ab8c4: ljmp 0x5d5f:0x5e5b1789; ret; 
0x00173c7d: ljmp 0x5e5b:0x10c483ff; pop edi; ret; 
0x001815e4: ljmp 0x5e5b:0x14c483ff; ret; 
0x0017d3c9: ljmp 0x5e5b:0x2cc483ff; pop edi; pop ebp; ret; 
0x00193a8a: ljmp 0x5f07:0x88027402; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001aaaa1: ljmp 0x647:0x8d6b7207; pop edi; ret; 
0x0017640d: ljmp 0x8310:0xc483ffeb; les ecx, ptr [eax]; pop ebx; ret; 
0x000de8dc: ljmp 0x838d:0x50000002; inc edx; inc esi; stc; call dword ptr [eax - 0x18]; 
0x001aaab1: ljmp 0x847:0x8d5b7209; pop edi; ret; 
0x001ae5a7: ljmp 0x8904:0xc283e8d1; ret; 
0x00178028: ljmp 0x8908:0x24748bff; ret; 
0x0017b520: ljmp 0x89c1:0x89fa89ff; ret; 
0x00175e90: ljmp 0x8b55:0xcec83ff; inc esp; and al, 0x48; call dword ptr [eax + 0x10]; 
0x000c18a4: ljmp 0x8d06:0x7cc20110; inc esp; add dword ptr [eax], esi; ret; 
0x000fae02: ljmp 0x8d08:0xec83ffff; add byte ptr [edx], 0x48; stc; call dword ptr [eax + 0x53]; 
0x000fae5f: ljmp 0x8d08:0xec83ffff; add byte ptr [edx], 0x48; stc; call dword ptr [eax - 1]; 
0x000c1894: ljmp 0x8d16:0x7cc20120; inc esp; add dword ptr [eax], esp; ret; 
0x000c1884: ljmp 0x8d26:0x7cc20130; inc esp; add dword ptr [eax], edx; ret; 
0x001860b7: ljmp 0x8d28:0x247c8bff; xchg dword ptr [ebx + edi*4], ebx; stc; call dword ptr [eax - 0x73]; 
0x00186094: ljmp 0x8d28:0x247c8bff; xchg dword ptr [edi + ebp*2], ebp; stc; call dword ptr [eax - 0x73]; 
0x001aaac1: ljmp 0x947:0x8d4b720a; pop edi; ret; 
0x001aaad1: ljmp 0xa47:0x8d3b720b; pop edi; ret; 
0x0019b196: ljmp 0xb97:0xc381fffe; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000c15c1: ljmp 0xc229:0xc0bc0f10; jbe 0xc15f0; lea eax, [edi + eax + 0x10]; pop edi; ret; 
0x000c15d1: ljmp 0xc229:0xc0bc0f20; jbe 0xc15f0; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x000c15e1: ljmp 0xc229:0xc0bc0f30; jbe 0xc15f0; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x00086292: ljmp 0xc445:0x8b000001; sub esp, 0xc; push esi; call dword ptr [eax + 0x30]; 
0x001aaae1: ljmp 0xc47:0x8d2b720d; pop edi; ret; 
0x00178a94: ljmp 0xc483:0x10c483ff; add al, 0x5b; pop esi; ret; 
0x00079a25: ljmp 0xc483:0x4518901; adc al, 0x5b; pop esi; ret; 
0x0003adc4: ljmp 0xd089:0x7fff0000; shr eax, 0x1f; ret; 
0x001aaaf1: ljmp 0xd47:0x8d1b720e; pop edi; ret; 
0x001420c3: ljmp 0xe181:0xc0b70f18; add byte ptr [eax], al; add al, al; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x001aab01: ljmp 0xe47:0x8d0b720f; pop edi; ret; 
0x0017590c: ljmp 0xec83:0x10c483ff; or al, 0x31; call dword ptr [esi - 0x18]; 
0x000e762c: ljmp 0xf00:0x3b8; inc ebp; ret 0x2ec3; 
0x001a68ca: ljmp 0xf66:0xd1ef0f66; cmp byte ptr [edi], dl; ret 0x830f; 
0x0019decf: ljmp 0xf702:0x89068b04; ret 0xf; 
0x0019adcf: ljmp 0xf702:0x89078b04; ret 0xf; 
0x00038dca: ljmp 0xfa83:0x1c18330; or dword ptr [edi], ecx; xchg esi, eax; ret 0xb60f; 
0x00148b2c: lldt word ptr [ebx - 0x77]; ret; 
0x00098200: lock add byte ptr [eax], al; add byte ptr [ecx + 0x80], bh; call dword ptr gs:[0x10]; 
0x0008f21a: lock add byte ptr [eax], al; add byte ptr [ecx + 0x80], bh; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008e6d0: lock add byte ptr [eax], al; add byte ptr [ecx + 0x80], bh; xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x0009dff8: lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; call dword ptr gs:[0x10]; 
0x00092f03: lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; mov ebx, edi; call dword ptr gs:[0x10]; 
0x0009829d: lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; xor esi, esi; mov edx, 0x7fffffff; mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x0008fa4f: lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; xor esi, esi; mov edx, 1; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x00095d2a: lock add byte ptr [eax], al; add byte ptr [ecx + 0x87], bh; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x00097c91: lock add byte ptr [eax], al; add byte ptr [ecx + 1], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0018c4cb: lock add byte ptr [eax], al; add byte ptr [ecx + 1], bh; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x00097786: lock add byte ptr [eax], al; add byte ptr [ecx + 7], bh; xor esi, esi; mov dword ptr [ebx + 4], edx; xor edx, edx; call dword ptr gs:[0x10]; 
0x0009744d: lock add byte ptr [eax], al; add byte ptr [ecx + 8], bh; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008f816: lock add byte ptr [eax], al; add byte ptr [ecx], dh; idiv byte ptr [ecx + 0x81]; mov edx, 1; call dword ptr gs:[0x10]; 
0x00090ad9: lock add byte ptr [eax], al; add byte ptr [ecx], dh; idiv byte ptr [edx + 0x7fffffff]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00091310: lock add byte ptr [eax], al; add byte ptr [ecx], dh; idiv byte ptr [edx + 1]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00095375: lock add byte ptr [eax], al; add byte ptr [ecx], dh; leave; xor esi, esi; call dword ptr gs:[0x10]; 
0x0009846e: lock add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; setne cl; shl ecx, 7; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00099676: lock add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00096839: lock add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00098860: lock add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009192d: lock add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00091c08: lock add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00097a03: lock add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00091344: lock add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x00091809: lock add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x00091672: lock add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00098836: lock add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008f28e: lock add byte ptr [eax], al; add byte ptr [edx + 2], bh; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00073da6: lock add dword ptr [ebx - 0x4ef43], eax; call dword ptr [eax]; 
0x0018c4c6: lock add dword ptr [ebx], 1; mov eax, 0xf0; mov ecx, 1; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x001340d2: lock add eax, dword ptr [eax]; add byte ptr [ecx - 0x33f7b], cl; inc edi; test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x0019d072: lock add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00091928: lock and dword ptr [ebx], 0xfffffffe; mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009b94c: lock cmpxchg dword ptr [ebx], edx; jne 0x9b960; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0009a8c5: lock cmpxchg dword ptr [ebx], esi; jne 0x9a8d0; xor eax, eax; pop ebx; pop esi; ret; 
0x0008ec5e: lock cmpxchg dword ptr [ecx], edx; setne al; movzx eax, al; pop ebx; ret; 
0x0009b98f: lock cmpxchg dword ptr [edx], ecx; jne 0x9b986; xor eax, eax; pop ebx; ret; 
0x0009b9dd: lock cmpxchg dword ptr [edx], ecx; jne 0x9b9f0; xor eax, eax; pop ebx; ret; 
0x0009a5bb: lock cmpxchg dword ptr [edx], ecx; mov eax, 0x10; cmove eax, ecx; ret; 
0x00094bcc: lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x0009a594: lock dec dword ptr [eax]; jne 0x9a5a0; xor eax, eax; ret; 
0x0018c450: lock dec dword ptr [ebp + 0xb6]; add byte ptr [eax + 0x16], bh; pop ebx; ret; 
0x0012d4c0: lock dec dword ptr [ebp - 0x65a4f7d]; call dword ptr [eax - 0x73]; 
0x000a569e: lock dec dword ptr [edi]; inc esp; ret 0x568d; 
0x000a5ce5: lock dec dword ptr [edi]; inc esp; ret 0xf821; 
0x000a119b: lock dec dword ptr [edi]; inc esp; ret 0xff31; 
0x000a5333: lock dec dword ptr [edi]; inc esp; shl dword ptr [ecx], 1; ret 0x1a8b; 
0x00182609: lock inc dword ptr [ebx + 0x448b10c4]; and al, 0xc; add esp, 0x18; pop ebx; ret; 
0x0017d267: lock inc dword ptr [ebx - 0x2f08e33c]; shr eax, 0x1f; ret; 
0x00144ca0: lock sub dword ptr [eax - 0xc], 1; je 0x144cb0; add esp, 4; pop ebx; pop esi; ret; 
0x0009a73b: lock sub dword ptr [ebx + 0xc], 1; pop ebx; pop esi; pop edi; ret; 
0x0010b964: lodsb al, byte ptr [esi]; aas; add byte ptr [eax], al; cmp eax, 1; jg 0x10b9a8; call dword ptr [esi]; 
0x0010b9ad: lodsb al, byte ptr [esi]; aas; add byte ptr [eax], al; push eax; call 0x8f2d0; call dword ptr [esi]; 
0x000c2434: lodsb al, byte ptr [esi]; adc byte ptr [eax], al; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; add esi, ecx; jmp ebx; 
0x000ebaf5: lodsb al, byte ptr [esi]; add al, 0; add byte ptr [eax - 0x73], dl; and dword ptr [eax], 0xffffff9f; stc; call dword ptr [eax - 0x18]; 
0x00070158: lodsb al, byte ptr [esi]; add al, 0; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00096ca4: lodsb al, byte ptr [esi]; add al, byte ptr [eax]; add byte ptr [ecx], bh; ret 0x4f0f; 
0x0010d2a9: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [eax + 0xaf], bh; call dword ptr gs:[0x10]; 
0x0010d01b: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [eax + 0xaf], bh; mov dword ptr [esp + 0xb8], 0; call dword ptr gs:[0x10]; 
0x000958be: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg ah, dl; test ecx, edi; call dword ptr [eax - 0x18]; 
0x000c948e: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add cl, ch; ret; 
0x00149585: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebp + 0x396374ed], al; ret; 
0x0012fb13: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx + 0x53564d41], bh; call dword ptr gs:[0x10]; 
0x00187338: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x001ad401: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 4; 
0x00033883: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0005009e: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx - 0x7c9bdb8c], cl; ret 0xf7ff; 
0x000ccfdc: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ecx - 0x547bf033], cl; add dword ptr [eax], eax; add byte ptr [ecx + 0x39efd3d7], cl; ret; 
0x00173c0e: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ecx - 0x76f7dbb4], cl; inc esp; and al, 4; jmp edx; 
0x0009b0b0: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add dh, dh; ret 0xf02; 
0x0005e199: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add dh, dh; ret; 
0x00124228: lodsb al, byte ptr [esi]; add dword ptr [eax], eax; add byte ptr [ebx + 0xfcb3], cl; add bh, bh; xor byte ptr [ebp - 0x6a6a47d], cl; call dword ptr [eax - 1]; 
0x000ac378: lodsb al, byte ptr [esi]; add eax, 0xe580fff6; add cl, byte ptr [ebp - 0x18f1136e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000d03bb: lodsb al, byte ptr [esi]; and al, 0x7c; sbb eax, dword ptr [eax]; add byte ptr [ebx - 0x6bf0fe01], al; ret 0xeb39; 
0x00115b6d: lodsb al, byte ptr [esi]; and al, 0x8c; add dword ptr [eax], eax; add byte ptr [ebx + 0x1b824ac], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00050799: lodsb al, byte ptr [esi]; and al, 0x8c; sbb eax, dword ptr [eax]; add byte ptr [ebx - 0x6bf0fe01], al; ret 0xeb39; 
0x001b03f2: lodsb al, byte ptr [esi]; and al, 0x94; add byte ptr [eax], al; add byte ptr [ecx], cl; ret 0xbc89; 
0x00031456: lodsb al, byte ptr [esi]; and ebx, edi; call dword ptr [eax + 0x6a]; 
0x00176625: lodsb al, byte ptr [esi]; and edi, ecx; call dword ptr [eax + 0x52]; 
0x00173087: lodsb al, byte ptr [esi]; cld; jmp dword ptr [esi - 0x70]; 
0x000e787d: lodsb al, byte ptr [esi]; cmp eax, -0x26; jne 0xe78c0; lea ecx, [esp + 4]; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x000a95f1: lodsb al, byte ptr [esi]; das; call 0xc24ea5f7; ret; 
0x0004a283: lodsb al, byte ptr [esi]; das; stc; call dword ptr [eax - 0x18]; 
0x0017cc5a: lodsb al, byte ptr [esi]; idiv bh; dec dword ptr [ecx + 0x48891450]; add al, 0x5b; ret; 
0x0010d0ea: lodsb al, byte ptr [esi]; in eax, 0xec; call dword ptr [esi + 0x6a]; 
0x00096e73: lodsb al, byte ptr [esi]; insd dword ptr es:[edi], dx; stc; call dword ptr [eax - 0x73]; 
0x001510c1: lodsb al, byte ptr [esi]; mov al, 0xf9; call dword ptr [edx - 0x73]; 
0x0015a669: lodsb al, byte ptr [esi]; mov bl, 0xf9; call dword ptr [eax - 0x18]; 
0x000ba981: lodsb al, byte ptr [esi]; or al, 0; add ecx, 0x11249b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b9381: lodsb al, byte ptr [esi]; or byte ptr [0xbbc18100], cl; cmp dword ptr [ecx], edx; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0016fc57: lodsb al, byte ptr [esi]; or esi, ebx; call dword ptr [esi - 0x73]; 
0x00134ff8: lodsb al, byte ptr [esi]; pop esp; out dx, eax; dec dword ptr [edi]; inc ebp; ret 0xec83; 
0x0002bf6a: lodsb al, byte ptr [esi]; push -7; call dword ptr [eax - 0x73]; 
0x00164a3b: lodsb al, byte ptr [esi]; push eax; int1; call dword ptr [eax - 0x73]; 
0x000de229: lodsb al, byte ptr [esi]; ret 0xf0; 
0x0010db09: lodsb al, byte ptr [esi]; ret 0xffea; 
0x001765c8: lodsb al, byte ptr [esi]; ret; 
0x001287c0: lodsb al, byte ptr [esi]; ror byte ptr [eax + esi], 1; ror byte ptr [ecx], 0xc8; ret; 
0x0015d4a7: lodsb al, byte ptr [esi]; sal cl, 1; call dword ptr [eax + 0x6a]; 
0x000a18cf: lodsb al, byte ptr [esi]; sbb ah, dh; call dword ptr [eax + 0x57]; 
0x000a1905: lodsb al, byte ptr [esi]; sbb al, 0xe6; call dword ptr [eax + 0x57]; 
0x000a1890: lodsb al, byte ptr [esi]; sbb al, bh; inc dword ptr [ebx - 0x7972f33c]; in al, dx; sbb al, 0xe6; call dword ptr [eax + 0x57]; 
0x0013c0e3: lodsb al, byte ptr [esi]; shr edi, 1; call dword ptr [edx - 0x3f]; 
0x00145d16: lodsb al, byte ptr [esi]; stc; call dword ptr [edi + 0x52]; 
0x0003e000: lodsb al, byte ptr [esi]; test dword ptr [eax], 0x1cc48300; ret; 
0x0005ab98: lodsd eax, dword ptr [esi]; add al, byte ptr [eax]; add esp, 0x1c; ret; 
0x0005b386: lodsd eax, dword ptr [esi]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000fb2d5: lodsd eax, dword ptr [esi]; add byte ptr [eax], al; setne al; ret; 
0x0003064a: lodsd eax, dword ptr [esi]; add byte ptr [esi - 7], al; call dword ptr [eax - 0x18]; 
0x000d731e: lodsd eax, dword ptr [esi]; add dword ptr [eax], eax; add byte ptr [ebx - 0x361f7b], cl; push dword ptr [ecx]; imul byte ptr [ecx]; ret; 
0x0012eef6: lodsd eax, dword ptr [esi]; add eax, 0x1bc28100; call dword ptr [eax]; 
0x0012ee37: lodsd eax, dword ptr [esi]; add eax, 0xdac78100; call dword ptr [eax]; 
0x00054e02: lodsd eax, dword ptr [esi]; fadd dword ptr [edx + 0x74]; sub byte ptr [eax - 0xa], dl; ret 0x7501; 
0x000aa161: lodsd eax, dword ptr [esi]; idiv bh; cmovne eax, edx; ret; 
0x001a6fe3: lodsd eax, dword ptr [esi]; int1; call dword ptr [ebx - 0x18]; 
0x0004e0ca: lodsd eax, dword ptr [esi]; mov ecx, es; stc; jmp dword ptr [ebp - 0x75]; 
0x0005dfbf: lodsd eax, dword ptr [esi]; pushal; std; dec dword ptr [ebx - 0x8b63]; dec dword ptr [ebp - 0x684677d]; call dword ptr [eax - 0x73]; 
0x00054e1e: lodsd eax, dword ptr [esi]; ret; 
0x000e885f: lodsd eax, dword ptr [esi]; sbb bh, ah; jmp dword ptr [esi - 0x70]; 
0x00148dd7: lodsd eax, dword ptr [esi]; stc; call dword ptr [eax + 0x6a]; 
0x00147570: lodsd eax, dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x000792eb: lodsd eax, dword ptr [esi]; sti; jmp dword ptr [esi - 0x70]; 
0x000e9faf: lodsd eax, dword ptr [esi]; xor ah, bh; jmp dword ptr [esi - 0x70]; 
0x00061cc3: lodsd eax, dword ptr [esi]; xor bh, cl; call dword ptr [eax + 0x53]; 
0x0010572b: loope 0x10572c; add esi, esi; ret; 
0x00113b08: loope 0x113a93; ret; 
0x0012aa5e: loope 0x12aa6f; xchg ebp, eax; ret; 
0x0012ad2e: loope 0x12ad2e; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00131249: loope 0x1311d4; ret 0x448b; 
0x0013143b: loope 0x1313c6; ret 0x448b; 
0x00131efd: loope 0x131e88; ret 0x448b; 
0x00131fb9: loope 0x131f44; ret 0x448b; 
0x001321e9: loope 0x132174; ret 0x448b; 
0x0013e6ca: loope 0x13e6cb; jmp dword ptr [esi - 0x70]; 
0x0013ee95: loope 0x13eeee; stc; call dword ptr [eax - 0x18]; 
0x001420c9: loope 0x1420cb; add byte ptr [eax], al; rol byte ptr [ecx + 0xf9], 0x80; cmovne eax, edx; ret; 
0x001423d8: loope 0x1423da; add byte ptr [eax], al; rol cl, 0xea; adc byte ptr [ecx + 0xf9], al; or byte ptr [edi], 0x44; ret 0x8dc3; 
0x001445b8: loope 0x144543; ret 0x25; 
0x0014b429: loope 0x14b42f; add esp, 8; lea edx, [eax + ecx]; pop ebx; mov eax, edx; ret; 
0x00153230: loope 0x1531bb; jecxz 0x1531bd; ret 0x25; 
0x00155f3b: loope 0x155f2a; dec dword ptr [ebx - 0x72f7db84]; xchg dword ptr [eax], ecx; mov bl, 0xf9; call dword ptr [eax - 0x73]; 
0x0016010e: loope 0x16016b; pop esi; pop edi; ret; 
0x0016ee56: loope 0x16ee58; add byte ptr [eax], al; sub esp, 0xc; mov eax, dword ptr [ebx + 0x10]; push esi; call dword ptr [eax + 0x10]; 
0x00176003: loope 0x175f8e; ret 0x25; 
0x0017fc64: loope 0x17fbe9; rcr byte ptr [ebx], 0x89; ret 0x25; 
0x00180b30: loope 0x180abb; ret; 
0x0018cb81: loope 0x18cb0c; ret 0x25; 
0x0018ccda: loope 0x18cc5f; rcr byte ptr [ebx], 0x89; ret 0x25; 
0x0018e881: loope 0x18e80c; ret 0x25; 
0x0018e9da: loope 0x18e95f; rcr byte ptr [ebx], 0x89; ret 0x25; 
0x00190801: loope 0x19078c; ret 0x25; 
0x0019095a: loope 0x1908df; rcr byte ptr [ebx], 0x89; ret 0x25; 
0x0019de84: loope 0x19de7d; ret 1; 
0x001a9e7b: loope 0x1a9e7d; add byte ptr [eax], al; lea eax, [edi + 0xf]; pop edi; ret; 
0x001b440f: loope 0x1b4411; add byte ptr [eax], dl; add byte ptr [ecx - 0x9f7dbbc], cl; ret 0xf07; 
0x00030adc: loope 0x30a67; ret 0x25; 
0x00030d6c: loope 0x30cf7; ret 0x25; 
0x00035e03: loope 0x35d8e; ret; 
0x0003b993: loope 0x3b98b; les eax, ptr [edx]; je 0x3b99b; fchs; ret; 
0x0003bd33: loope 0x3bd2b; les eax, ptr [edx]; je 0x3bd3b; fchs; ret; 
0x00085fe9: loope 0x85fe4; jmp dword ptr [esi - 0x70]; 
0x0009847b: loope 0x98484; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00098bde: loope 0x98be7; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00098ddf: loope 0x98de8; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00099401: loope 0x9940a; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009e7e5: loope 0x9e770; ret 0x25; 
0x0009ecc5: loope 0x9ec50; ret 0x25; 
0x000abaee: loope 0xabb4b; mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x000b934f: loope 0xb92d4; ret; 
0x000b9e87: loope 0xb9e0c; ret; 
0x000b9ea3: loope 0xb9e28; ret; 
0x000b9f9b: loope 0xb9f2a; je 0xb9fc5; add byte ptr [ecx + 0x5b5e5ff8], cl; ret; 
0x000ba98f: loope 0xba914; ret; 
0x000bb587: loope 0xbb50c; ret; 
0x000bb5a3: loope 0xbb528; ret; 
0x000bb69b: loope 0xbb62a; je 0xbb6c5; add byte ptr [ecx + 0x5b5e5ff8], cl; ret; 
0x000c092f: loope 0xc08b4; ret; 
0x000c0f3b: loope 0xc0eca; je 0xc0f65; add byte ptr [ebx + 0x5e], bl; ret; 
0x000c1bd6: loope 0xc1b5b; ret 0x6640; 
0x000c30ec: loope 0xc307b; jbe 0xc30f0; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x000d999c: loope 0xd99ad; je 0xd99c0; ret; 
0x000eae62: loope 0xeaded; inc ebp; mov esp, 0x83c0458b; ror byte ptr [edi], 0x89; ret 0x25; 
0x000f1338: loope 0xf12c3; ret; 
0x000f1a91: loope 0xf1a1c; ret 0x25; 
0x000f1bea: loope 0xf1b6f; rcr byte ptr [ebx], 0x89; ret 0x25; 
0x000f3e78: loope 0xf3e03; ret; 
0x000f4c78: loope 0xf4c03; ret; 
0x000f53d1: loope 0xf535c; ret 0x25; 
0x000f552a: loope 0xf54af; rcr byte ptr [ebx], 0x89; ret 0x25; 
0x000f77a8: loope 0xf7733; ret; 
0x000f85b8: loope 0xf8543; ret; 
0x000f8cf1: loope 0xf8c7c; ret 0x25; 
0x000f8e4a: loope 0xf8dcf; rcr byte ptr [ebx], 0x89; ret 0x25; 
0x000faaa7: loope 0xfaa32; ret 0x25; 
0x000fad5b: loope 0xfada4; stc; call dword ptr [ebx + 0x50]; 
0x0019ba10: maxps xmm0, xmmword ptr [ebx]; sbb al, 0x8b; jmp ebx; 
0x000b9b1d: maxps xmm3, xmmword ptr [esi + 0x5b]; ret; 
0x000fb716: mov ah, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0009e0f0: mov ah, 0; add byte ptr [eax], al; mov dword ptr [esp + 0x20], eax; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x000fb6e2: mov ah, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000a083d: mov ah, 0; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x000a713d: mov ah, 0x24; hlt; add byte ptr [eax], al; add byte ptr [ebp - 0x6666780], cl; call dword ptr [eax + 0x68]; 
0x0014f0c6: mov ah, 0x24; in al, dx; add al, byte ptr [eax]; add byte ptr [esi - 0x18], dl; push cs; ret; 
0x0014b045: mov ah, 0x24; mov al, byte ptr [0x89000001]; ret; 
0x00115d5c: mov ah, 0x24; mov esp, 0x8d000001; push esp; and al, 0x2c; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x0003e458: mov ah, 0x24; push eax; or byte ptr [eax], al; add byte ptr [ebx + 0x688d04ec], al; call dword ptr [ebp + 0x56]; 
0x000ba86e: mov ah, 0x25; adc dword ptr [eax], eax; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x001abc7a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; add eax, 1; pop edi; ret; 
0x001420da: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; and eax, 0xffffff; ret; 
0x000c1cca: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; add eax, edx; ret; 
0x000c1cea: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edx + 0x20]; ret; 
0x000c184a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; bsr eax, eax; lea eax, [eax + ecx + 0x20]; ret; 
0x000c185a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; bsr eax, eax; lea eax, [eax + ecx + 0x30]; ret; 
0x00192b8a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; endbr32; mov eax, 0xffffffff; ret; 
0x0017b8ba: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; endbr32; mov eax, 1; ret; 
0x0008bbaa: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; endbr32; xor eax, eax; ret; 
0x000ea11a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; hlt; mov eax, edx; call dword ptr gs:[0x10]; 
0x000d99c6: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; add eax, 3; ret; 
0x0008ecf7: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; endbr32; ret; 
0x001aaf26: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xa]; ret; 
0x001aaf36: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xb]; ret; 
0x001aaf46: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xd]; ret; 
0x001aaf56: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xe]; ret; 
0x001aaf66: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xf]; ret; 
0x001aaec6: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 2]; ret; 
0x001aaed6: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 3]; ret; 
0x001aaee6: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 5]; ret; 
0x001aaef6: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 6]; ret; 
0x001aaf06: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 7]; ret; 
0x001ac444: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 8]; ret; 
0x001aaf16: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 9]; ret; 
0x001ab586: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xa]; ret; 
0x001ab596: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xc]; ret; 
0x001ab5a6: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xd]; ret; 
0x001ab5b6: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xe]; ret; 
0x001ab526: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 2]; ret; 
0x001ab536: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 4]; ret; 
0x001ab546: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 5]; ret; 
0x001ab556: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 6]; ret; 
0x001ab566: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 8]; ret; 
0x001ab576: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 9]; ret; 
0x001ac417: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, ecx; ret; 
0x000d99d6: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; ret; 
0x001a9b55: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; add eax, 1; ret; 
0x001ac485: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; lea eax, [ecx + 8]; ret; 
0x001ab515: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; lea eax, [edx + 1]; ret; 
0x000d99e5: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; mov eax, 1; ret; 
0x00092ed5: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x000b3665: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; pop ebx; ret; 
0x000c1305: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; xor eax, eax; ret; 
0x0017071a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax], 0xa; pop ebx; ret; 
0x0017072a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax], 8; pop ebx; ret; 
0x0018527a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [ebx + 0xc], 0; pop ebx; ret; 
0x000b36aa: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [ecx], edx; pop ebx; ret; 
0x000980ba: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x16; ret; 
0x001304da: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x6a; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0012f11a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x6b; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00094f42: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x0009c312: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 1; add esp, 0xc; ret; 
0x001ac47a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, ecx; ret; 
0x001aaa4a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edi; pop edi; ret; 
0x000b430a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edx; pop ebx; ret; 
0x0016eae8: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; endbr32; ret; 
0x0009af38: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; mov dword ptr [eax + 4], edx; ret; 
0x000906d9: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 0x16; ret; 
0x00086a38: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000d99f8: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 2; ret; 
0x000d9a08: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 3; ret; 
0x000d9a18: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 4; ret; 
0x000d9a28: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 5; ret; 
0x000d9a38: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 6; ret; 
0x000d9a48: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 7; ret; 
0x00042189: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; xor eax, eax; ret; 
0x000bd99a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; pop esi; ret; 
0x0008c952: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0017834a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; sub esp, 0xc; push eax; call dword ptr [edx + 0x10]; 
0x000e822a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; add esp, 0xc; ret; 
0x00185212: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; pop ebx; ret; 
0x000c198a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x0007c1aa: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x00024f31: mov ah, 0x28; stc; call dword ptr [eax - 1]; 
0x00099f0c: mov ah, 0x39; ret 0xd174; 
0x00092fcf: mov ah, 0x3f; stc; call dword ptr [eax - 0x18]; 
0x000a3625: mov ah, 0x42; stc; call dword ptr [eax - 0x18]; 
0x0005b943: mov ah, 0x79; stc; call dword ptr [eax - 0x18]; 
0x000795f4: mov ah, 0x79; stc; call dword ptr [eax - 0x18]; jb 0x795a6; sti; jmp dword ptr [esi - 0x70]; 
0x000eff93: mov ah, 0x83; in al, dx; add al, 0x6a; add eax, 0x9f88838d; stc; call dword ptr [eax - 0x73]; 
0x000eb85f: mov ah, 0x83; in al, dx; or al, 0x8d; sub ecx, 0x46; stc; call dword ptr [eax - 0x18]; 
0x000f019a: mov ah, 0x83; in al, dx; or byte ptr [ebx - 0x7f72378b], cl; pop ecx; stc; call dword ptr [eax - 0x75]; 
0x000eb740: mov ah, 0x83; sub al, dh; clc; inc dword ptr [ecx]; fidivr word ptr [esi]; jmp esi; 
0x001628ab: mov ah, 0x85; sal byte ptr [ebp - 0x50], 0x83; in al, dx; or byte ptr [ebx - 0x72e3dbbc], cl; adc byte ptr [ebx + 0x60], 0xf9; call dword ptr [eax + 0x55]; 
0x0009e47e: mov ah, 0x89; ret 0x458b; 
0x0009ebaa: mov ah, 0x89; stc; call dword ptr [eax + 0x68]; 
0x0009ec0d: mov ah, 0x89; stc; call dword ptr [eax - 0x73]; 
0x00175248: mov ah, 0x8a; cld; jmp dword ptr [esi - 0x70]; 
0x000355a4: mov ah, 0x8d; inc ecx; sbb al, 0x89; ret 0x25; 
0x00043537: mov ah, 0x93; hlt; jp 0x43534; inc dword ptr [ecx]; fidivr word ptr [esi]; jmp esi; 
0x000a44cb: mov ah, 0x94; stc; call dword ptr [eax - 0x18]; 
0x00106acb: mov ah, 0x97; sub al, 0xf9; clc; dec dword ptr [ecx + 0x3efe01d0]; jmp esi; 
0x000c62fa: mov ah, 0x9c; stc; call dword ptr [eax - 0x18]; 
0x0012bf9d: mov ah, 0xa4; stc; call dword ptr [edi - 0x7f]; 
0x0009283c: mov ah, 0xa; add byte ptr [eax - 0x4e1f00d], dl; xor eax, eax; ret; 
0x00153cbf: mov ah, 0xb1; stc; call dword ptr [eax - 0x73]; 
0x000d87b8: mov ah, 0xb8; cmc; dec dword ptr [ebx - 0x363f4b]; dec dword ptr [ebp - 0x661f37a]; call dword ptr [eax - 0x73]; 
0x00092cb2: mov ah, 0xb9; or al, 0; add byte ptr [eax], al; lea ebx, [eax + 0x6c]; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x000bb579: mov ah, 0xe6; or al, 0; add ecx, 0x1119b3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000eb5ae: mov ah, 0xe8; dec esp; daa; add eax, 0x244c8b00; or byte ptr [ebp - 0x6609f7f], cl; call dword ptr [eax - 0x73]; 
0x0010b69b: mov ah, 0xf7; jmp dword ptr [esi - 0x70]; 
0x0015ceaf: mov ah, 0xf9; call dword ptr [eax - 0x18]; 
0x001928f7: mov ah, 0xfa; jmp dword ptr [esi - 0x70]; 
0x00182826: mov ah, 0xfb; jmp dword ptr [esi - 0x70]; 
0x000b9e79: mov ah, 0xfd; or al, 0; add ecx, 0x112f53; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0006c7c6: mov ah, 0xff; dec dword ptr [ebx - 0x5d343]; dec dword ptr [ecx + 0x29f829f0]; ret; 
0x001147ee: mov ah, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010d5a6: mov ah, 1; add byte ptr [eax], al; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x0009ba4e: mov ah, 2; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x000278fd: mov ah, 3; add byte ptr [eax], al; add byte ptr [ecx + 0x458bc445], cl; aam 0x89; ret; 
0x00182d18: mov ah, byte ptr [esi - 7]; call dword ptr [edi + 0x56]; 
0x00183f39: mov ah, byte ptr [esi - 7]; call dword ptr [esi + 0x53]; 
0x00183588: mov ah, byte ptr [esi - 7]; call dword ptr [esi + 0x57]; 
0x000d53e4: mov ah, ch; cmc; dec dword ptr [ebx - 0x72ebdb84]; xchg dword ptr [eax + edi*2], esi; stc; call dword ptr [eax + 0x68]; 
0x0010d2c8: mov al, 0; add byte ptr [eax], al; add byte ptr [edi], cl; test byte ptr [ebp - 0x7d000000], ah; jmp dword ptr [esi]; 
0x0003c991: mov al, 0; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; mov ecx, 8; call dword ptr gs:[0x10]; 
0x00114fcb: mov al, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0xb8]; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x00114f5c: mov al, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0xb8]; mov eax, 0x1c4; mov esi, dword ptr [esp + 0xbc]; call dword ptr gs:[0x10]; 
0x000c178c: mov al, 0; add byte ptr [eax], al; pmovmskb eax, xmm1; bsr eax, eax; add eax, ecx; ret; 
0x00173eac: mov al, 0; add byte ptr [eax], al; push dword ptr [ebx + 0xa8]; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x00173ece: mov al, 0; add byte ptr [eax], al; push dword ptr [esp + 0x30]; push esi; call dword ptr [eax + 4]; 
0x00174610: mov al, 0; add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x000c152c: mov al, 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x00093fbc: mov al, 0; cli; dec dword ptr [ebx - 0x7872dbc4]; clc; test cl, bh; call dword ptr [eax - 0x73]; 
0x00035372: mov al, 0x39; ret 0x820f; 
0x00124d65: mov al, 0x44; add byte ptr [eax], al; call 0x231a0; add esp, 0x18; pop ebx; ret; 
0x00126b73: mov al, 0x45; add byte ptr [eax], al; push eax; call 0x126c90; add esp, 0x1c; ret; 
0x00145eb0: mov al, 0x54; ret 0xfff9; 
0x000288d6: mov al, 0x70; stc; call dword ptr [eax - 0x18]; 
0x00078ead: mov al, 0x7e; stc; call dword ptr [eax - 0x18]; 
0x00035d43: mov al, 0x83; in al, dx; or al, 0x8d; sbb byte ptr [ebx + 0x2e], 0xf9; call dword ptr [eax - 0x18]; 
0x001628af: mov al, 0x83; in al, dx; or byte ptr [ebx - 0x72e3dbbc], cl; adc byte ptr [ebx + 0x60], 0xf9; call dword ptr [eax + 0x55]; 
0x000330a4: mov al, 0x83; js 0x330bc; push dword ptr [ecx + ebx - 0x7d]; in al, dx; or byte ptr [ecx - 0xe76b], cl; call dword ptr [eax + 0x56]; 
0x000af3c4: mov al, 0x83; ret 0x8301; 
0x00128def: mov al, 0x83; ret 0xeb03; 
0x0005dcc0: mov al, 0x89; inc ebp; mov eax, 0xfff87ee9; call dword ptr [eax + 0x52]; 
0x000d2f06: mov al, 0x8b; inc ebp; aam 1; ret 0x5389; 
0x00033a8b: mov al, 0x8b; test byte ptr [ebx - 0x814], dh; test eax, eax; je 0x33a99; call eax; 
0x00035f22: mov al, 0x8d; cmp byte ptr [eax + 0x29], 0xf9; call dword ptr [eax - 0x73]; 
0x0013a2c7: mov al, 0x8d; mov bl, 0x1c; push esi; stc; call dword ptr [eax + 0x50]; 
0x00175a39: mov al, 0x90; add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; 
0x00175a39: mov al, 0x90; add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x00124089: mov al, 0x94; ret 0xfff9; 
0x000a5135: mov al, 0x96; stc; call dword ptr [eax - 0x18]; 
0x000a489c: mov al, 0x98; stc; call dword ptr [eax - 0x73]; 
0x0019035a: mov al, 0xa0; stc; call dword ptr [eax - 0x73]; 
0x0012d4a8: mov al, 0xa5; stc; call dword ptr [eax - 0x73]; 
0x001414e5: mov al, 0xaa; stc; call dword ptr [eax - 0x18]; 
0x0010d0e9: mov al, 0xac; in eax, 0xec; call dword ptr [esi + 0x6a]; 
0x00156276: mov al, 0xb2; stc; call dword ptr [eax - 0x73]; 
0x000c09c6: mov al, 0xc6; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0014b3cb: mov al, 0xe8; das; sub edi, edi; jmp dword ptr [esi - 0x70]; 
0x00189983: mov al, 0xe9; inc dword ptr [ebx - 0x3fcef73c]; pop ebx; ret; 
0x001a7bde: mov al, 0xf1; jmp dword ptr [esi - 0x70]; 
0x000a7fdd: mov al, 0xf7; call dword ptr [ebp - 1]; 
0x0015155e: mov al, 0xf9; call dword ptr [eax + 0x68]; 
0x00151f30: mov al, 0xf9; call dword ptr [eax - 0x18]; 
0x001516f7: mov al, 0xf9; call dword ptr [eax - 0x73]; 
0x001510c2: mov al, 0xf9; call dword ptr [edx - 0x73]; 
0x0010dff4: mov al, 0xfe; clc; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x0009ce4b: mov al, 0xff; inc dword ptr [ebx - 0xf76eb3c]; pop ebx; pop esi; ret; 
0x0013075e: mov al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0016ec07: mov al, 1; add byte ptr [ecx + 0xd020ac3], al; add byte ptr [ebx - 0x7c72ef14], al; or al, 0xfd; bnd call dword ptr [eax - 0x73]; 
0x0011586c: mov al, 2; add byte ptr [eax], al; add esp, 0x10; add esp, 0xc; ret; 
0x000b927d: mov al, 9; or eax, 0x3fc18100; cmp dl, byte ptr [ecx]; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000ac5c5: mov al, bh; call dword ptr [esi + 0x50]; 
0x001395a1: mov al, byte ptr [0x2bac5d8b]; inc edi; sbb byte ptr [ebp + 0x60840fc9], al; or byte ptr [eax], al; add byte ptr [ebx + 0x39101e5c], cl; ret 0x820f; 
0x00196f52: mov al, byte ptr [0x3000449]; sbb al, 0x8b; jmp ebx; 
0x000b93a2: mov al, byte ptr [0x3001139]; or al, 0x99; jmp ecx; 
0x000d595d: mov al, byte ptr [0x31ffffc9]; rol byte ptr [ebx - 0x362f43], cl; call dword ptr [eax]; 
0x000ff2f5: mov al, byte ptr [0x3efff8f8]; jmp eax; 
0x00110d73: mov al, byte ptr [0x3efff900]; jmp eax; 
0x0003b5d1: mov al, byte ptr [0x50000000]; ret; 
0x00085b51: mov al, byte ptr [0x5b000000]; pop esi; pop edi; ret; 
0x001794a2: mov al, byte ptr [0x5b000001]; pop esi; pop edi; ret; 
0x000b3272: mov al, byte ptr [0x5b5f0000]; ret; 
0x000b365c: mov al, byte ptr [0x5f000001]; pop ebx; ret; 
0x001425c5: mov al, byte ptr [0x6afff958]; add eax, 0x4c858d50; je 0x1425ca; call dword ptr [eax - 0x18]; 
0x000cb193: mov al, byte ptr [0x81000000]; ret 0; 
0x0017cc79: mov al, byte ptr [0x810000cf]; ret; 
0x00158779: mov al, byte ptr [0x81000314]; ret; 
0x0013ff79: mov al, byte ptr [0x8100049c]; ret; 
0x0013f279: mov al, byte ptr [0x810004a9]; ret; 
0x0013cd79: mov al, byte ptr [0x810004ce]; ret; 
0x00136579: mov al, byte ptr [0x81000536]; ret; 
0x000e8379: mov al, byte ptr [0x81000a18]; ret; 
0x000bb68d: mov al, byte ptr [0x81000ce5]; ror dword ptr [edi], 0x18; adc dword ptr [eax], eax; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba88d: mov al, byte ptr [0x81000cf3]; ror dword ptr [edi + 0x3001125], 0xc; xchg ecx, eax; jmp ecx; 
0x000b9f8d: mov al, byte ptr [0x81000cfc]; shr dword ptr [edi + 0x300112d], 0xc; cdq; jmp ecx; 
0x000a7279: mov al, byte ptr [0x81000e29]; ret; 
0x000a7179: mov al, byte ptr [0x81000e2a]; ret; 
0x000a6f79: mov al, byte ptr [0x81000e2c]; ret; 
0x000a6379: mov al, byte ptr [0x81000e38]; ret; 
0x0008e079: mov al, byte ptr [0x81000fbb]; ret; 
0x0008ba79: mov al, byte ptr [0x81000fe1]; ret; 
0x0007bf79: mov al, byte ptr [0x810010dc]; ret; 
0x0003f479: mov al, byte ptr [0x810014a7]; ret; 
0x00039d79: mov al, byte ptr [0x810014fe]; ret; 
0x00038d79: mov al, byte ptr [0x8100150e]; ret; 
0x00034079: mov al, byte ptr [0x8100155b]; ret; 
0x00026d79: mov al, byte ptr [0x8100162e]; ret; 
0x00025e79: mov al, byte ptr [0x8100163d]; ret; 
0x00023479: mov al, byte ptr [0x81001667]; ret; 
0x001269b8: mov al, byte ptr [0x83000045]; les ecx, ptr [eax]; mov eax, edx; pop ebx; ret; 
0x00126a4a: mov al, byte ptr [0x83000045]; les ecx, ptr [eax]; pop ebx; ret; 
0x00185ab2: mov al, byte ptr [0x830000aa]; in al, dx; or al, 0x8d; sbb esp, -0x46; stc; call dword ptr [eax - 0x18]; 
0x0006605c: mov al, byte ptr [0x83000d7c]; ret 0xe901; 
0x0008cfee: mov al, byte ptr [0x8324838d]; stc; call dword ptr [eax - 0x73]; 
0x000a37c4: mov al, byte ptr [0x85000003]; ror byte ptr [edi], 0x84; push 0x89000003; ret 0x588d; 
0x0018691b: mov al, byte ptr [0x85000003]; sal byte ptr [ebp + ecx - 0x77], 0x54; and al, 4; jmp dword ptr [eax + 0x30]; 
0x0012dd91: mov al, byte ptr [0x89000000]; inc esp; and al, 0x6c; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x0014b047: mov al, byte ptr [0x89000001]; ret; 
0x00098517: mov al, byte ptr [0x8900558b]; ret; 
0x00184c9c: mov al, byte ptr [0x89fff6a5]; ret; 
0x000d520c: mov al, byte ptr [0x89fff7f0]; ret 0x448b; 
0x000593b5: mov al, byte ptr [0x89ffffc9]; ret; 
0x001271da: mov al, byte ptr [0x8d000010]; and edi, 0x50; stc; call dword ptr [ecx + 0x51]; 
0x00124b0d: mov al, byte ptr [0x8d08ec83]; xchg esi, eax; xchg edx, eax; dec edx; stc; call dword ptr [edx - 0x77]; 
0x00158e07: mov al, byte ptr [0x8d500000]; adc dword ptr [eax + 0x500000a0], -0x73; sub dword ptr [esi + ecx*2], -0xf; call dword ptr [eax - 0x73]; 
0x00158d52: mov al, byte ptr [0x8d500000]; cmp dword ptr [ecx], -0xf; call dword ptr [eax - 0x18]; 
0x00157ef7: mov al, byte ptr [0x8d500000]; sub dword ptr [eax], 0; add byte ptr [eax - 0x73], dl; sub esp, 0x4c; int1; call dword ptr [eax - 0x73]; 
0x00157e42: mov al, byte ptr [0x8d500000]; sub dword ptr [edx + edx*4], -0xf; call dword ptr [eax - 0x18]; 
0x00158e0e: mov al, byte ptr [0x8d500000]; sub dword ptr [esi + ecx*2], -0xf; call dword ptr [eax - 0x73]; 
0x00157efe: mov al, byte ptr [0x8d500000]; sub esp, 0x4c; int1; call dword ptr [eax - 0x73]; 
0x0016b2c8: mov al, byte ptr [0x8dfffff8]; xchg dword ptr [eax], edx; mov dh, 0xf9; call dword ptr [eax - 0x73]; 
0x0002ed56: mov al, byte ptr [0x9000000]; ret; 
0x000a4eb2: mov al, byte ptr [0x9968878d]; stc; call dword ptr [eax - 0x73]; 
0x001ab4ac: mov al, byte ptr [0xa8000000]; inc eax; jne 0x1ab560; lea eax, [edx + 7]; ret; 
0x0009a430: mov al, byte ptr [0xb8000000]; scasd eax, dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [esi + 8], bh; call dword ptr gs:[0x10]; 
0x00095370: mov al, byte ptr [0xb8000001]; lock add byte ptr [eax], al; add byte ptr [ecx], dh; leave; xor esi, esi; call dword ptr gs:[0x10]; 
0x00039103: mov al, byte ptr [0xc483fffe]; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000c33c6: mov al, byte ptr [0xf00003c]; inc esp; ret 0x288b; 
0x0009534d: mov al, byte ptr [0xf7fffffd]; ret 0; 
0x000b5a96: mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; pop edi; ret; 
0x000b5bd6: mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; ret; 
0x000bfe39: mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edi; pop ebx; pop edi; ret; 
0x000b16d6: mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edi; pop edi; ret; 
0x000b17f6: mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x000b5bf4: mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; lea eax, [edx + 4]; ret; 
0x000b1814: mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; mov eax, edx; ret; 
0x000ba36a: mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x000ba4ca: mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000bfedb: mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edi; pop ebx; pop edi; ret; 
0x000b8d2a: mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000b8e8a: mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000b5c34: mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000b1854: mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x001a9de2: mov al, byte ptr [ecx]; add byte ptr [eax], al; lea eax, [edi + 0xb]; pop edi; ret; 
0x000b5a70: mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; pop edi; ret; 
0x000b5bb0: mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; ret; 
0x000bfe13: mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edi; pop ebx; pop edi; ret; 
0x000b16b0: mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x000b17d0: mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x000b5ac4: mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, [edx + 5]; pop edi; ret; 
0x000b5c04: mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, [edx + 5]; ret; 
0x000b16f4: mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edi; pop edi; ret; 
0x000b1824: mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x000ba38a: mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x000ba4ea: mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000bfefb: mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop ebx; pop edi; ret; 
0x000b8d4a: mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000b8eaa: mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000b5c54: mov ax, word ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000b1874: mov ax, word ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000b5a80: mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; pop edi; ret; 
0x000b5bc0: mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; ret; 
0x000b5bd0: mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; ret; 
0x000b17f0: mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x000bfe23: mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop ebx; pop edi; ret; 
0x000b16c0: mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x000b17e0: mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edx; ret; 
0x001ab115: mov bh, 0; add byte ptr [eax], al; lea eax, [ecx + 1]; ret; 
0x0011e65f: mov bh, 0; add byte ptr [eax], al; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000288dd: mov bh, 0; add byte ptr [ebx - 0x72c3dba4], cl; or dword ptr [esp + ebp*2], 0xfffffff9; call dword ptr [eax + 0x68]; 
0x001336d2: mov bh, 0x10; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x0010ccc9: mov bh, 0x10; mov eax, dword ptr [esp + 8]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x0004a187: mov bh, 0x2f; stc; call dword ptr [eax - 0x18]; 
0x000a0f08: mov bh, 0x39; ret 0xb374; 
0x0013f625: mov bh, 0x44; and al, 4; rol ax, 8; ret; 
0x000f2a7b: mov bh, 0x47; stc; call dword ptr [eax - 0x18]; 
0x001132a2: mov bh, 0x49; stc; call dword ptr [eax - 0x18]; 
0x0018806f: mov bh, 0x50; adc byte ptr [esi - 9], ah; ret 0x7f8; 
0x0014d8aa: mov bh, 0x50; add ah, byte ptr [esi - 0x3f]; ret 0xf08; 
0x000dc241: mov bh, 0x56; or al, 0x29; ret 0x428d; 
0x00145977: mov bh, 0x59; adc cl, byte ptr [ebp - 0x2ff4d]; jmp dword ptr [esi - 0x7d]; 
0x0014ef88: mov bh, 0x59; add dh, byte ptr [ecx]; shl byte ptr [esi + 0x39], 0x5a; add dh, byte ptr [ebp + eax + 0x5b]; ret; 
0x0017d3a2: mov bh, 0x65; stc; call dword ptr [eax - 0x73]; 
0x00027516: mov bh, 0x81; cmp byte ptr [eax - 7], dh; jmp dword ptr [esi - 0x77]; 
0x0003e7a0: mov bh, 0x83; inc esi; stc; jmp dword ptr [esi - 0x77]; 
0x00034828: mov bh, 0x84; push eax; add byte ptr [ecx], al; add byte ptr [eax], al; and eax, dword ptr [esp + 8]; ret; 
0x00027fe7: mov bh, 0x85; dec eax; jo 0x27fe5; jmp dword ptr [esi - 0x77]; 
0x000af7c8: mov bh, 0x89; xor byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00037ea3: mov bh, 0x93; and byte ptr [ebp - 7], dh; jmp dword ptr [esi - 0x77]; 
0x000272b3: mov bh, 0x97; cmp byte ptr [eax - 7], dh; jmp dword ptr [esi - 0x77]; 
0x000d86b5: mov bh, 0xb9; cmc; dec dword ptr [ebx - 0x363f73]; dec dword ptr [ebp - 0x661f37f]; call dword ptr [eax - 0x73]; 
0x0014ef5d: mov bh, 0xc0; add esp, 0x2c; ret; 
0x001420c6: mov bh, 0xc0; and ecx, 0xc0000000; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x00042d90: mov bh, 0xc0; bsr eax, eax; xor eax, 0x1f; lea edx, [eax - 0xf]; mov eax, edx; ret; 
0x00042f30: mov bh, 0xc0; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x0004330c: mov bh, 0xc2; tzcnt eax, eax; test dx, dx; mov edx, 0x10; cmove eax, edx; ret; 
0x0004294c: mov bh, 0xc9; bsr ecx, ecx; shl eax, cl; ret; 
0x00042a20: mov bh, 0xc9; mov eax, 0x80000000; bsr ecx, ecx; xor ecx, 0x1f; shr eax, cl; ret; 
0x001860b5: mov bh, 0xdf; ljmp 0x8d28:0x247c8bff; xchg dword ptr [ebx + edi*4], ebx; stc; call dword ptr [eax - 0x73]; 
0x0019cebb: mov bh, 0xf2; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x000a8b01: mov bh, 0xf6; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x00171be9: mov bh, 0xf9; call dword ptr [eax - 0x73]; 
0x0017511e: mov bh, 0xf9; call dword ptr [ebp + 0x6a]; 
0x0017506b: mov bh, 0xf9; call dword ptr [edx + 0x6a]; 
0x0010b95a: mov bh, 0xf9; dec dword ptr [ebp - 0x3fceff8a]; xchg dword ptr [edi + 0x3fac], eax; cmp eax, 1; jg 0x10b9a8; call dword ptr [esi]; 
0x00192516: mov bh, 0xfa; jmp dword ptr [esi - 0x70]; 
0x00182516: mov bh, 0xfb; jmp dword ptr [esi - 0x70]; 
0x00027981: mov bh, 0xff; inc dword ptr [ebx + 0x45890cc4]; fmul qword ptr [ebp - 0x218f137d]; call dword ptr [eax - 0x73]; 
0x00153eb5: mov bh, 1; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00034503: mov bh, 4; push eax; and eax, 0x1000; ret; 
0x000344d3: mov bh, 4; push eax; and eax, 0x100; ret; 
0x000344a3: mov bh, 4; push eax; and eax, 0x2000; ret; 
0x000343e3: mov bh, 4; push eax; and eax, 0x200; ret; 
0x00034443: mov bh, 4; push eax; and eax, 0x4000; ret; 
0x00034353: mov bh, 4; push eax; and eax, 0x400; ret; 
0x00034413: mov bh, 4; push eax; and eax, 0x8000; ret; 
0x000343b3: mov bh, 4; push eax; and eax, 0x800; ret; 
0x000345b3: mov bh, 4; push eax; and eax, 1; ret; 
0x00034383: mov bh, 4; push eax; and eax, 2; ret; 
0x00034473: mov bh, 4; push eax; and eax, 4; ret; 
0x00034323: mov bh, 4; push eax; and eax, 8; ret; 
0x00196b19: mov bh, 8; mov word ptr [edx], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00175249: mov bh, ah; jmp dword ptr [esi - 0x70]; 
0x0019bf6a: mov bh, bh; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000fcb57: mov bh, byte ptr [ecx]; ret; 
0x00092ba8: mov bh, byte ptr [edi]; stc; call dword ptr [edx + 0x50]; 
0x0016528a: mov bh, ch; jmp dword ptr [esi - 0x70]; 
0x000a1201: mov bh, cl; call dword ptr [eax + 0x6a]; 
0x0003ca21: mov bl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001ac5f9: mov bl, 0; add byte ptr [eax], al; lea eax, [edi - 0x10]; pop edi; ret; 
0x0003c9f3: mov bl, 0; add byte ptr [eax], al; mov ecx, 8; call dword ptr gs:[0x10]; 
0x000bb57f: mov bl, 0x19; adc dword ptr [eax], eax; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0013a2c9: mov bl, 0x1c; push esi; stc; call dword ptr [eax + 0x50]; 
0x001521b9: mov bl, 0x1e; out dx, al; dec dword ptr [ebp - 0x64f037f]; call dword ptr [eax - 0x73]; 
0x000308e5: mov bl, 0x2b; stc; call dword ptr [eax - 0x18]; 
0x0012703d: mov bl, 0x4d; stc; call dword ptr [eax + 0x55]; 
0x001113ee: mov bl, 0x60; add ecx, edi; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x0008cd26: mov bl, 0x7c; sbb al, byte ptr [eax]; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00183587: mov bl, 0x8a; stc; call dword ptr [esi + 0x57]; 
0x0003d64b: mov bl, 0x8d; je 0x3d675; add al, ch; stosd dword ptr es:[edi], eax; syscall; 
0x000c087a: mov bl, 0x93; or al, 0; add ecx, 0x10c776; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0018352a: mov bl, 0xa8; stc; call dword ptr [esi + 0x57]; 
0x00160a4b: mov bl, 0xb4; mov eax, dword ptr [0x4be80000]; daa; in al, dx; jmp dword ptr [ebp - 0x75]; 
0x000bd57a: mov bl, 0xc6; or al, 0; add ecx, 0x10f9f6; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00182cb5: mov bl, 0xd4; or eax, 0xec830000; or byte ptr [ebp - 0x6995745], cl; call dword ptr [edi + 0x56]; 
0x000385d4: mov bl, 0xd8; adc al, byte ptr [eax]; add al, ch; ret 0xfeab; 
0x000963b9: mov bl, 0xdc; stc; inc dword ptr [ebx - 0x7e45f440]; add eax, 0xa30f0000; ret 0x830f; 
0x00157817: mov bl, 0xf9; call dword ptr [eax - 0x18]; 
0x00155f45: mov bl, 0xf9; call dword ptr [eax - 0x73]; 
0x0008e906: mov bl, 0xf; add byte ptr [0x1b050b], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x298], edx; ret; 
0x0008e8e6: mov bl, 0xf; add byte ptr [0x1b052b], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x294], edx; ret; 
0x0008e8c6: mov bl, 0xf; add byte ptr [0x1b054b], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x290], edx; ret; 
0x0012422d: mov bl, 0xfc; add byte ptr [eax], al; add bh, bh; xor byte ptr [ebp - 0x6a6a47d], cl; call dword ptr [eax - 1]; 
0x00037da6: mov bl, 0xfe; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x00058a4c: mov bl, 0xff; dec dword ptr [ebx - 0x364f4b]; dec dword ptr [ebx - 0x36377b]; call dword ptr [ebx + 0x56]; 
0x0012e40a: mov bl, 1; add byte ptr [eax], al; int 0x80; 
0x0015d794: mov bl, byte ptr [edi - 7]; call dword ptr [eax + 0x55]; 
0x00130001: mov bx, word ptr [esp + 0x60]; mov ecx, dword ptr [esp + 0x64]; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x0019bc90: mov byte ptr [0x3000400], al; sbb al, 0x8b; jmp ebx; 
0x001079f9: mov byte ptr [0x31000009], al; shr cl, 8; idiv bh; jmp dword ptr [ebp - 0x5f]; 
0x00138bdf: mov byte ptr [0x4e8bfff8], al; or byte ptr [ecx - 0x76e3dbbc], cl; ret; 
0x0015be9b: mov byte ptr [0x5b0cc483], al; pop esi; pop edi; pop ebp; ret; 
0x000b947a: mov byte ptr [0x5f000009], al; pop esi; pop ebx; ret; 
0x001641f4: mov byte ptr [0x680000], al; add al, 0; add byte ptr [eax - 0x73], dl; sbb dword ptr [eax + 0x500000a2], -0x73; cmp esp, 0x55; bnd call dword ptr [eax - 0x18]; 
0x00155877: mov byte ptr [0x81000343], al; ret; 
0x0011b177: mov byte ptr [0x810006ea], al; ret; 
0x0010a777: mov byte ptr [0x810007f4], al; ret; 
0x0008f777: mov byte ptr [0x81000fa4], al; ret; 
0x0008b377: mov byte ptr [0x81000fe8], al; ret; 
0x00055877: mov byte ptr [0x81001343], al; ret; 
0x000c5c6a: mov byte ptr [0x83fff5d4], al; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x00098daa: mov byte ptr [0x89000000], al; ret 0xf283; 
0x0010230a: mov byte ptr [0x89ffff97], al; ret 0xea83; 
0x001020fa: mov byte ptr [0x89ffff9d], al; ret 0xf883; 
0x000a6652: mov byte ptr [0x8b000000], al; wait; dec eax; add al, 0; add byte ptr [ebx + 0x39242444], cl; ret; 
0x0015dec6: mov byte ptr [0x8b000016], al; jl 0x15def1; or al, 0x8b; push edi; add al, 0xf7; ret 0xfffd; 
0x0005d43a: mov byte ptr [0x8bffff69], al; dec ebp; mov eax, 0x8910c483; ret 0x458b; 
0x00164200: mov byte ptr [0x8d500000], al; cmp esp, 0x55; bnd call dword ptr [eax - 0x18]; 
0x001642c5: mov byte ptr [0x8d500000], al; or dword ptr [eax + edx*2], 0xfffffff1; call dword ptr [eax - 0x73]; 
0x001617fe: mov byte ptr [0x8d500000], al; or dword ptr [edx], 0; add byte ptr [eax - 0x73], dl; or esp, 0x4e; int1; call dword ptr [eax - 0x73]; 
0x00161805: mov byte ptr [0x8d500000], al; or esp, 0x4e; int1; call dword ptr [eax - 0x73]; 
0x000de8ca: mov byte ptr [0x8dfff557], al; sub dword ptr [eax - 0x62], -7; call dword ptr [eax - 0x73]; 
0x00024b6b: mov byte ptr [0x908b0021], al; sbb byte ptr [ecx], al; add byte ptr [eax], al; test edx, edx; je 0x24b79; ret; 
0x0006f269: mov byte ptr [0xc4830000], al; adc cl, ch; ret 0xfffa; 
0x001a92ea: mov byte ptr [0xf6000000], al; ret 0x7501; 
0x00103052: mov byte ptr [0xf889ffff], al; pop ebx; pop esi; pop edi; ret; 
0x000c30a7: mov byte ptr [eax + 0x100003c], dl; xor eax, eax; pop ebx; ret; 
0x000c0c2e: mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd7a8: mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00032b75: mov byte ptr [eax + 0x1201], dl; lea eax, [eax + 0x11cc]; ret; 
0x000c0cb4: mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd82e: mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0d38: mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd8b2: mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0ea3: mov byte ptr [eax + 0x40], bh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x001a9b4b: mov byte ptr [eax + 0x75], 0x45; add eax, 0xf; ret; 
0x001a9d98: mov byte ptr [eax + 0xf], 0x85; rol byte ptr [ecx], 1; add byte ptr [eax], al; lea eax, [edi + 0xf]; pop edi; ret; 
0x001ab933: mov byte ptr [eax + 0xf], 0x85; xchg byte ptr [ebx], al; add byte ptr [eax], al; add eax, 0xf; pop edi; ret; 
0x000c0a7c: mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd646: mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00195d2a: mov byte ptr [eax + 4], bl; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000c0aa8: mov byte ptr [eax + 4], dh; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd662: mov byte ptr [eax + 4], dh; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0005aabc: mov byte ptr [eax + 8], 0; mov eax, edx; ret; 
0x000c0b2a: mov byte ptr [eax + 8], dh; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd6b4: mov byte ptr [eax + 8], dh; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0005bb49: mov byte ptr [eax + eax + 0x48890000], bl; or byte ptr [ecx + 0x10890450], cl; ret; 
0x0007bf4e: mov byte ptr [eax + eax + 0x488b0000], dl; pop eax; mov dword ptr [ecx + 0x88], edx; ret; 
0x0013d5f6: mov byte ptr [eax + eax], 0x81; ret 0x181b; 
0x0013d5a6: mov byte ptr [eax + eax], 0x81; ret 0x186b; 
0x0016e7e5: mov byte ptr [eax + eax], al; add byte ptr [ebp - 0x69d6a7d], cl; call dword ptr [eax - 0x18]; 
0x0014e80d: mov byte ptr [eax + eax], al; add dh, dh; ret; 
0x0004069e: mov byte ptr [eax + ecx], 0; pop ebx; pop esi; ret; 
0x00178ebd: mov byte ptr [eax + esi], 0; mov eax, 1; pop ebx; pop esi; pop edi; ret; 
0x00158e06: mov byte ptr [eax - 0x72b00000], ah; adc dword ptr [eax + 0x500000a0], -0x73; sub dword ptr [esi + ecx*2], -0xf; call dword ptr [eax - 0x73]; 
0x00172bcd: mov byte ptr [eax - 1], dl; cmp eax, ebx; jne 0x172bc0; pop ebx; ret; 
0x000955ff: mov byte ptr [eax - 7], al; call dword ptr [eax - 0x18]; 
0x00059a5e: mov byte ptr [eax - 7], bh; call dword ptr [eax - 0x73]; 
0x0014c033: mov byte ptr [eax*4 + 0x5be775c0], 0x5e; pop edi; ret; 
0x00098f6e: mov byte ptr [eax], 0; add byte ptr [ebx - 0x5e9ae3a9], cl; push 0x39000000; ret 0x6974; 
0x001abbcf: mov byte ptr [eax], 0; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x0012480a: mov byte ptr [eax], 0; add esp, 0x18; mov eax, ebx; pop ebx; ret; 
0x000ab920: mov byte ptr [eax], 0; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x00123ba1: mov byte ptr [eax], 0; mov eax, ebx; add esp, 4; pop ebx; pop esi; ret; 
0x00090874: mov byte ptr [eax], al; add byte ptr [eax], al; add dword ptr [ebx + 0x5f5e04c4], eax; ret; 
0x000cd6e4: mov byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0010e5bf: mov byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012f3e7: mov byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x001aae64: mov byte ptr [eax], al; add byte ptr [eax], al; lea eax, [ecx + 4]; ret; 
0x001aa2e4: mov byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi - 0xc]; pop edi; ret; 
0x0010e6ff: mov byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x72; mov ebx, dword ptr [esp + 0x80]; call dword ptr gs:[0x10]; 
0x00088c64: mov byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x00080f6a: mov byte ptr [eax], al; add byte ptr [eax], al; push esi; call dword ptr [eax + 0x34]; 
0x0007bf58: mov byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0002b79b: mov byte ptr [eax], al; add byte ptr [ebx - 0x72c3db84], cl; xchg dword ptr [eax + 0x72], ecx; stc; call dword ptr [eax - 0x73]; 
0x0002b7e1: mov byte ptr [eax], al; add byte ptr [ebx - 0x72c3db84], cl; xchg esp, ecx; push -7; call dword ptr [eax + 0x68]; 
0x0002b7be: mov byte ptr [eax], al; add byte ptr [ebx - 0x72c3db8c], cl; xchg byte ptr [eax + 0x72], cl; stc; call dword ptr [eax - 0x73]; 
0x0004c354: mov byte ptr [eax], al; ret 0xfff9; 
0x000c0a40: mov byte ptr [eax], bh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000c0273: mov byte ptr [eax], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000c0075: mov byte ptr [eax], cl; mov eax, edi; pop ebx; pop edi; ret; 
0x0005ba41: mov byte ptr [eax], cl; pop ebx; pop esi; pop edi; ret; 
0x000c0a55: mov byte ptr [eax], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd620: mov byte ptr [eax], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x001972aa: mov byte ptr [ebp + 4], al; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0009eba7: mov byte ptr [ebp - 0x6764b79], cl; call dword ptr [eax + 0x68]; 
0x0009ec0a: mov byte ptr [ebp - 0x6764b79], cl; call dword ptr [eax - 0x73]; 
0x00088693: mov byte ptr [ebp - 0x7c6f8b40], 0xec; or byte ptr [ebx - 0x72f3dba4], cl; add dword ptr [ecx], 0x3f; stc; call dword ptr [eax - 0x75]; 
0x00157633: mov byte ptr [ebx + 0x4e88], 0; mov dword ptr [ebx + 0x4e78], 0; call esi; 
0x0017a069: mov byte ptr [ebx + 0x5e5b1cc4], 0x5f; pop ebp; ret; 
0x001575ab: mov byte ptr [ebx + 0x5ec8], 0; mov dword ptr [ebx + 0x5eb8], 0; call esi; 
0x00157413: mov byte ptr [ebx + 0x8f88], 0; mov dword ptr [ebx + 0x8f78], 0; call esi; 
0x000c1c89: mov byte ptr [ebx + 0xf6640ea], 0xd7; rol byte ptr [ebp + 0x663b75c0], 0xf; xlatb; ret 0xc085; 
0x00141dd1: mov byte ptr [ebx + 2], 0; pop ebx; pop esi; pop edi; ret; 
0x000c7a98: mov byte ptr [ebx + eax*4], 0xc6; add al, 1; ret; 
0x00127044: mov byte ptr [ebx - 0x3b7c0007], bh; adc byte ptr [ebp + 0x6c840fc0], al; or byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; dec dword ptr [ebp - 7]; call dword ptr [eax + 0x55]; 
0x00182c0a: mov byte ptr [ebx - 0xf76fb3c], 0x5b; pop esi; ret; 
0x00128a9f: mov byte ptr [ebx], 0; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x00145df8: mov byte ptr [ebx], 0; add esp, 8; pop ebx; ret; 
0x000a08f8: mov byte ptr [ebx], al; add byte ptr [eax], al; ret; 
0x000db1c8: mov byte ptr [ebx], dh; add dword ptr [eax], eax; add byte ptr [edi], cl; xchg ebp, eax; ret 0xc238; 
0x000a0af9: mov byte ptr [ecx + 0x3c38], al; ret; 
0x000b36a3: mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x000b36c2: mov byte ptr [ecx + 4], dl; pop ebx; ret; 
0x000b3704: mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x000c2ff8: mov byte ptr [ecx + eax], 0; dec ecx; jne 0xc2ff8; pop esi; ret; 
0x000c27b0: mov byte ptr [ecx + edx + 3], ah; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x001416fa: mov byte ptr [ecx + edx], 0; pop ebx; ret; 
0x0013b3cd: mov byte ptr [ecx - 0x836b], cl; call dword ptr [esi + 0x6a]; 
0x0013b35d: mov byte ptr [ecx - 0x837b], cl; call dword ptr [ebx + 0x6a]; 
0x0002c381: mov byte ptr [ecx], 0x83; ret 0x3901; 
0x000a7dc3: mov byte ptr [ecx], 0x83; ret 0x8401; 
0x000f2041: mov byte ptr [ecx], 0x83; ret 0x8801; 
0x00047ab5: mov byte ptr [ecx], 0x83; ret 0xe901; 
0x00031956: mov byte ptr [ecx], 0x83; ret; 
0x000da3ab: mov byte ptr [ecx], 0x83; xlatb; add byte ptr [ecx], bh; ret; 
0x00139225: mov byte ptr [ecx], 0x89; ret 0xb70f; 
0x00066d70: mov byte ptr [ecx], 0x89; ret; 
0x0015bda7: mov byte ptr [ecx], 0xeb; ret; 
0x000417ff: mov byte ptr [ecx], 0xf8; push eax; mov eax, dword ptr [esp + 0x28]; call eax; 
0x000681aa: mov byte ptr [ecx], 1; ret 0x9589; 
0x0017e90e: mov byte ptr [ecx], al; ret 0x858b; 
0x00080400: mov byte ptr [ecx], bl; add esp, 4; pop ebx; pop esi; ret; 
0x000b3680: mov byte ptr [ecx], dl; pop ebx; ret; 
0x000bb1bb: mov byte ptr [edi + 0x10], cl; lea eax, [edi + 0x11]; pop edi; pop esi; pop ebx; ret; 
0x000b9adb: mov byte ptr [edi + 0x10], cl; pop edi; pop esi; pop ebx; ret; 
0x000bb241: mov byte ptr [edi + 0x14], dl; lea eax, [edi + 0x15]; pop edi; pop esi; pop ebx; ret; 
0x000b9b61: mov byte ptr [edi + 0x14], dl; pop edi; pop esi; pop ebx; ret; 
0x000bb2c5: mov byte ptr [edi + 0x18], cl; lea eax, [edi + 0x19]; pop edi; pop esi; pop ebx; ret; 
0x000b9be5: mov byte ptr [edi + 0x18], cl; pop edi; pop esi; pop ebx; ret; 
0x000b9ce5: mov byte ptr [edi + 0x20], cl; pop edi; pop esi; pop ebx; ret; 
0x000bb029: mov byte ptr [edi + 2], dl; lea eax, [edi + 3]; pop edi; pop esi; pop ebx; ret; 
0x000b9989: mov byte ptr [edi + 2], dl; pop edi; pop esi; pop ebx; ret; 
0x000bb057: mov byte ptr [edi + 4], dl; lea eax, [edi + 5]; pop edi; pop esi; pop ebx; ret; 
0x000b99a7: mov byte ptr [edi + 4], dl; pop edi; pop esi; pop ebx; ret; 
0x000bb0cb: mov byte ptr [edi + 8], dl; lea eax, [edi + 9]; pop edi; pop esi; pop ebx; ret; 
0x000b99eb: mov byte ptr [edi + 8], dl; pop edi; pop esi; pop ebx; ret; 
0x001a9dde: mov byte ptr [edi + ecx], 0x85; mov al, byte ptr [ecx]; add byte ptr [eax], al; lea eax, [edi + 0xb]; pop edi; ret; 
0x00172f45: mov byte ptr [edi - 0x18000000], cl; int1; ret 0xfff7; 
0x00179165: mov byte ptr [edi - 0x5e9b0000], cl; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + edx], ecx; ret; 
0x000c2bbd: mov byte ptr [edi], ah; mov eax, dword ptr [esp + 0x10]; pop ebx; pop esi; pop edi; ret; 
0x000c2f63: mov byte ptr [edi], ah; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x00193a8e: mov byte ptr [edi], al; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019bcc9: mov byte ptr [edi], al; pop esi; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00199b2a: mov byte ptr [edi], bl; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000d2da9: mov byte ptr [edi], cl; mov dh, 0x14; or dh, dh; ret 0xf04; 
0x000bb002: mov byte ptr [edi], dl; lea eax, [edi + 1]; pop edi; pop esi; pop ebx; ret; 
0x000b9962: mov byte ptr [edi], dl; pop edi; pop esi; pop ebx; ret; 
0x000c01d1: mov byte ptr [edx + 0x10], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x00090872: mov byte ptr [edx + 0x88], 1; add esp, 4; pop esi; pop edi; ret; 
0x00141575: mov byte ptr [edx + 1], al; mov eax, 2; ret; 
0x000bcf60: mov byte ptr [edx + 1], bh; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x000abe05: mov byte ptr [edx + 2], 0; pop ebx; pop esi; ret; 
0x000b5a99: mov byte ptr [edx + 2], al; lea eax, [edx + 2]; pop edi; ret; 
0x000b5bd9: mov byte ptr [edx + 2], al; lea eax, [edx + 2]; ret; 
0x000bfe3c: mov byte ptr [edx + 2], al; mov eax, edi; pop ebx; pop edi; ret; 
0x000b16d9: mov byte ptr [edx + 2], al; mov eax, edi; pop edi; ret; 
0x000b17f9: mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x000bcf70: mov byte ptr [edx + 2], bh; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x000b5ab7: mov byte ptr [edx + 4], al; lea eax, [edx + 4]; pop edi; ret; 
0x000b5bf7: mov byte ptr [edx + 4], al; lea eax, [edx + 4]; ret; 
0x000bfe6a: mov byte ptr [edx + 4], al; mov eax, edi; pop ebx; pop edi; ret; 
0x000b16e7: mov byte ptr [edx + 4], al; mov eax, edi; pop edi; ret; 
0x000b1817: mov byte ptr [edx + 4], al; mov eax, edx; ret; 
0x000bcfa0: mov byte ptr [edx + 4], bh; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x000abf08: mov byte ptr [edx + 6], 0; mov dword ptr [edx], eax; lea eax, [edx + 6]; pop ebx; pop esi; ret; 
0x000abe48: mov byte ptr [edx + 6], 0; mov dword ptr [edx], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x000b5afb: mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x000b5c3b: mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000bfede: mov byte ptr [edx + 8], al; mov eax, edi; pop ebx; pop edi; ret; 
0x000b171b: mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000b185b: mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000c0174: mov byte ptr [edx + 8], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000bd010: mov byte ptr [edx + 8], bh; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x001a92e5: mov byte ptr [edx + edx*8 + 0xa2840f], 0; add dh, dh; ret 0x7501; 
0x00193295: mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00198524: mov byte ptr [edx - 1], al; mov eax, edx; pop ebx; ret; 
0x0019640c: mov byte ptr [edx - 1], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001983fc: mov byte ptr [edx - 1], cl; mov eax, edx; pop ebx; ret; 
0x0005bc64: mov byte ptr [edx - 7], bh; call dword ptr [eax - 0x73]; 
0x000abdd0: mov byte ptr [edx], 0; mov eax, edx; pop ebx; pop esi; ret; 
0x00085a55: mov byte ptr [edx], 0; pop ebx; ret; 
0x0013722a: mov byte ptr [edx], 0x20; pop ebx; pop esi; pop edi; ret; 
0x001a9b2d: mov byte ptr [edx], 0x75; dec edi; test dh, 4; jne 0x1a9b84; add eax, 0xb; ret; 
0x00137216: mov byte ptr [edx], 0xa; pop ebx; pop esi; pop edi; ret; 
0x000b5a72: mov byte ptr [edx], al; lea eax, [edx]; pop edi; ret; 
0x000b5bb2: mov byte ptr [edx], al; lea eax, [edx]; ret; 
0x00198b83: mov byte ptr [edx], al; mov eax, dword ptr [esp + 8]; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x00196bb3: mov byte ptr [edx], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000bfe15: mov byte ptr [edx], al; mov eax, edi; pop ebx; pop edi; ret; 
0x000b16b2: mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x000b17d2: mov byte ptr [edx], al; mov eax, edx; ret; 
0x00122a3a: mov byte ptr [edx], al; push esp; add byte ptr [eax], al; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0019902a: mov byte ptr [edx], ch; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198a3b: mov byte ptr [edx], cl; mov eax, dword ptr [esp + 8]; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x00196a8b: mov byte ptr [edx], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00087631: mov byte ptr [edx], cl; pop ebx; pop esi; ret; 
0x000a17ac: mov byte ptr [esi + 0x3c24], 1; lea ebx, [esi + 0x3c1c]; call dword ptr gs:[0x10]; 
0x00156b8f: mov byte ptr [esi + 0x53000e82], 0x89; ret; 
0x00157635: mov byte ptr [esi], cl; add byte ptr [eax], al; mov dword ptr [ebx + 0x4e78], 0; call esi; 
0x0014017c: mov byte ptr [esi], dh; add dword ptr [eax], eax; add byte ptr [ebx - 0x76bbdbbc], cl; ret; 
0x00093569: mov byte ptr [esp + 0x46], 0; mov esi, 8; mov byte ptr [esp + 0x47], 0; mov dword ptr [esp + 8], edx; call dword ptr gs:[0x10]; 
0x00093573: mov byte ptr [esp + 0x47], 0; mov dword ptr [esp + 8], edx; call dword ptr gs:[0x10]; 
0x00064eef: mov byte ptr [esp + 0x5e], 0x20; mov edi, ecx; mov dword ptr [esp + 0x1c], 1; jmp edx; 
0x00138bde: mov byte ptr ds:[0x4e8bfff8], al; or byte ptr [ecx - 0x76e3dbbc], cl; ret; 
0x000c0a54: mov byte ptr ss:[eax], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000570b7: mov ch, 0; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x3b8; 
0x000fb8d6: mov ch, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001ab507: mov ch, 0; add byte ptr [eax], al; lea eax, [edx + 0xf]; ret; 
0x000fb8a2: mov ch, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000d60e2: mov ch, 0; in eax, 0xff; dec dword ptr [ecx - 0x36734b]; dec dword ptr [ebx - 0x364f4b]; call dword ptr [ebx - 0x73]; 
0x001238dc: mov ch, 0x11; add byte ptr [ebx - 0x48], dl; sub eax, 0x8b000000; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x000a3de7: mov ch, 0x38; add al, 0; add bl, ch; ret 0x9066; 
0x000a269f: mov ch, 0x8b; push esi; or byte ptr [ecx], ch; ret 0xfa83; 
0x0016b2b7: mov ch, 0x8d; in al, dx; call dword ptr [edx + 0x52]; 
0x0016fc56: mov ch, 0xac; or esi, ebx; call dword ptr [esi - 0x73]; 
0x00117c2e: mov ch, 0xf0; jmp dword ptr [ebp - 0x75]; 
0x0016009a: mov ch, 0xf9; call dword ptr [eax - 0x18]; 
0x0015ce9c: mov ch, 0xf9; call dword ptr [eax - 0x73]; 
0x0019276a: mov ch, 0xfa; jmp dword ptr [esi - 0x70]; 
0x00182796: mov ch, 0xfb; jmp dword ptr [esi - 0x70]; 
0x001527fb: mov ch, 0xfe; jmp dword ptr [esi - 0x70]; 
0x0006b59e: mov ch, 0xff; call dword ptr [eax - 0x73]; 
0x00119986: mov ch, 0xff; jmp dword ptr [ebp - 0x75]; 
0x00059662: mov ch, 4; add byte ptr [eax], al; add byte ptr [ecx - 0x361f73], cl; dec dword ptr [ebx - 0x364763]; call dword ptr [eax + 0x6a]; 
0x000d8218: mov ch, 4; add byte ptr [eax], al; add byte ptr [ecx - 0x362f73], cl; dec dword ptr [ebx - 0x363f63]; call dword ptr [eax + 0x6a]; 
0x001a66cd: mov ch, 8; add byte ptr [eax], al; pop ebx; ret; 
0x000bab67: mov ch, 9; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0017c471: mov ch, bl; call dword ptr [eax - 0x73]; 
0x0013c292: mov ch, byte ptr [ebx - 8]; dec dword ptr [ebx - 0x3b7c3bab]; adc byte ptr [ebp - 0x7ce4e884], cl; ret; 
0x000d99b0: mov ch, dh; and ch, 0xf; je 0xd99d0; add eax, 2; ret; 
0x0003d667: mov cl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0003d60e: mov cl, 0; add byte ptr [eax], al; mov esi, 8; mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x0008ec60: mov cl, 0x11; setne al; movzx eax, al; pop ebx; ret; 
0x0009b94e: mov cl, 0x13; jne 0x9b960; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0007b463: mov cl, 0x2c; add dword ptr [eax], eax; add byte ptr [edi], cl; xchg esp, eax; ret 0xd009; 
0x0009a8c7: mov cl, 0x33; jne 0x9a8d0; xor eax, eax; pop ebx; pop esi; ret; 
0x00094bce: mov cl, 0x54; and al, 4; ret; 
0x00091887: mov cl, 0x55; add byte ptr [edi], cl; xchg esp, eax; ret; 
0x0002485c: mov cl, 0x59; stc; call dword ptr [eax - 0x18]; 
0x0015f3ce: mov cl, 0x5f; stc; call dword ptr [eax - 1]; 
0x0007b479: mov cl, 0x68; add dword ptr [eax], eax; add byte ptr [edi], cl; xchg esp, eax; ret 0xd009; 
0x00156c1b: mov cl, 0x86; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000c097c: mov cl, 0x92; or al, 0; add ecx, 0x10c6f4; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0007b484: mov cl, 0x98; add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0xd008; 
0x00092b19: mov cl, 0xa; add byte ptr [ebx - 0x72fbdb84], cl; xchg eax, ebx; test cl, bh; call dword ptr [eax + 0x68]; 
0x0009b991: mov cl, 0xa; jne 0x9b986; xor eax, eax; pop ebx; ret; 
0x0009b9df: mov cl, 0xa; jne 0x9b9f0; xor eax, eax; pop ebx; ret; 
0x0009a5bd: mov cl, 0xa; mov eax, 0x10; cmove eax, ecx; ret; 
0x001479ce: mov cl, 0xb8; add al, byte ptr [eax + eax]; add byte ptr [ebx + 0x3934246c], cl; ret 0x470f; 
0x0007b46e: mov cl, 0xe8; add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0xd009; 
0x0019ae81: mov cl, 0xe; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00098b4d: mov cl, 0xee; add esi, dword ptr [edi + edi*4 - 0x77]; ret 0xca83; 
0x00138e7c: mov cl, 0xef; dec dword ptr [ebx - 0x72dfdb84]; xchg dword ptr [ecx + ebp*4], edx; stc; call dword ptr [eax - 0x73]; 
0x00138f2b: mov cl, 0xef; jmp dword ptr [esi - 0x70]; 
0x000ac4b1: mov cl, 0xf6; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x00152f0c: mov cl, 0xf9; call dword ptr [eax - 0x18]; 
0x00152ac2: mov cl, 0xf9; call dword ptr [eax - 0x73]; 
0x00192b57: mov cl, 0xfa; jmp dword ptr [esi - 0x70]; 
0x00078e98: mov cl, 0xfb; dec dword ptr [ebp - 0x692b37a]; call dword ptr [eax - 0x73]; 
0x00172b93: mov cl, 0xfc; jmp dword ptr [esi - 0x70]; 
0x0006c62f: mov cl, 0xff; dec dword ptr [ebx - 0x58f7b]; jmp dword ptr [ebp - 0x75]; 
0x0006b5fb: mov cl, 0xff; jmp dword ptr [esi - 0x70]; 
0x001307be: mov cl, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000cb088: mov cl, 6; add byte ptr [ebx + 0x7c8310c4], al; and al, 0x18; adc byte ptr [edi], cl; xchg esp, eax; ret 0xf883; 
0x0009d5ae: mov cl, bh; call dword ptr [eax + 0x68]; 
0x0009c106: mov cl, bh; call dword ptr [eax - 0x18]; 
0x0009bdf8: mov cl, bh; call dword ptr [eax - 0x73]; 
0x00088c63: mov cl, byte ptr [eax + 0x5b000000]; pop esi; pop edi; ret; 
0x000a0c7d: mov cl, byte ptr [eax]; add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x000a9391: mov cl, byte ptr [eax]; add dword ptr [eax], eax; add byte ptr [ebp - 0xaa9a37e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x0013d601: mov cl, byte ptr [eax]; add dword ptr [eax], eax; add byte ptr [ebp - 0xaa9b37e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x000a93e1: mov cl, byte ptr [eax]; add dword ptr [eax], eax; add byte ptr [ebp - 0xaacc37e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x0013d651: mov cl, byte ptr [eax]; add dword ptr [eax], eax; add byte ptr [ebp - 0xaacd37e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x000a8b61: mov cl, byte ptr [eax]; add dword ptr [eax], eax; add byte ptr [ebp - 0xaafe37e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x0013d5b1: mov cl, byte ptr [eax]; add dword ptr [eax], eax; add byte ptr [ebp - 0xaaff37e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x000ed9be: mov cl, byte ptr [ebx - 0x76c7db84]; ret 0xf3e9; 
0x000d9999: mov cl, dl; and cl, 0xf; je 0xd99c0; ret; 
0x0002ed4c: mov cs, esp; add byte ptr [eax], al; add byte ptr [ebx - 0x78f0fb05], al; mov al, byte ptr [0x9000000]; ret; 
0x000d5f91: mov cs, word ptr [ebx - 0x364763]; inc dword ptr [ebx - 0x7274f314]; ror cl, 0xff; call dword ptr [ebx - 0x75]; 
0x001040eb: mov cs, word ptr [ecx - 0x3e7c71fc]; add dword ptr [ecx], ecx; ret 0xf983; 
0x000bd640: mov cx, word ptr [esi]; mov word ptr [eax], cx; mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00089ad3: mov dh, 0; add byte ptr [eax], al; add al, ch; ret; 
0x000f1c13: mov dh, 0; add byte ptr [eax], al; add bh, al; test dword ptr [ebx + edi*8 - 1], ebp; jmp dword ptr [eax]; 
0x001b0bfb: mov dh, 0; add byte ptr [eax], al; add bh, dh; ret 0; 
0x0018c453: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 0x16], bh; pop ebx; ret; 
0x00098043: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 0x16], bh; ret; 
0x00136b63: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 0x29], dl; ret 0x838d; 
0x001a9d0b: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 0x78850f01], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf01; 
0x000a6dd3: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x0019b09b: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x001b12cb: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebp + 0x24548bdb], al; and byte ptr [edi], cl; xchg ebp, eax; ret; 
0x00061be3: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebp - 0x7cefdb8c], cl; in al, dx; or byte ptr [ebp - 0x6cf986d], cl; call dword ptr [esi + 0x52]; 
0x00109343: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x1182454], cl; ret 0x44c7; 
0x001abb2b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5f0c2444], cl; ret; 
0x000a0f9b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x173ef797], cl; or al, 0x83; ret 0x8901; 
0x00086f5b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x17aaf314], al; aas; ret 0xfff9; 
0x0005768b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x362743], al; call dword ptr [eax]; 
0x0010bb9b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x3f7af7c0], cl; je 0x10ba8f; call eax; 
0x0010bbf3: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x3f7afbc0], cl; je 0x10bae2; call eax; 
0x00061f63: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x0012bf93: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x7972fb14], al; mov ah, 0xa4; stc; call dword ptr [edi - 0x7f]; 
0x0011c14b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x7c72f314], al; inc esi; stc; call dword ptr [eax - 0x18]; 
0x0009cf5b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ecx - 0x7576efbf], cl; test al, 0x3b; add byte ptr [eax], al; ret; 
0x0008e643: mov dh, 0; add byte ptr [eax], al; add byte ptr [ecx - 0x7611142d], cl; ret 0xcceb; 
0x000a13e3: mov dh, 0; add byte ptr [eax], al; add byte ptr [ecx - 0x76efdb94], cl; ret; 
0x0007b543: mov dh, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x001423eb: mov dh, 0; add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0xc2; ret; 
0x0008df9b: mov dh, 0; add byte ptr [eax], al; add byte ptr [edx - 0x77], dl; ret; 
0x001ab8cb: mov dh, 0; add byte ptr [eax], al; add dh, dh; ret 0xf10; 
0x001aae06: mov dh, 0; add byte ptr [eax], al; mov eax, ecx; ret; 
0x0008b4ec: mov dh, 0; add esp, 4; pop ebx; pop esi; ret; 
0x00196bb1: mov dh, 0; mov byte ptr [edx], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001a64c3: mov dh, 0; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x0008901f: mov dh, 0; pop ebx; pop esi; pop edi; ret; 
0x0018b980: mov dh, 0; ret; 
0x00086849: mov dh, 0; shr al, 2; and eax, 1; xor eax, 1; ret; 
0x00086869: mov dh, 0; shr al, 3; and eax, 1; xor eax, 1; ret; 
0x000875d9: mov dh, 0; shr al, 4; and eax, 1; ret; 
0x000875f9: mov dh, 0; shr al, 5; and eax, 1; ret; 
0x00113391: mov dh, 0x10; test dl, dl; je 0x113364; pop ebx; ret; 
0x000f0bc1: mov dh, 0x10; test dl, dl; je 0xf0b94; pop ebx; ret; 
0x000f3701: mov dh, 0x10; test dl, dl; je 0xf36d4; pop ebx; ret; 
0x000f4501: mov dh, 0x10; test dl, dl; je 0xf44d4; pop ebx; ret; 
0x000f7031: mov dh, 0x10; test dl, dl; je 0xf7004; pop ebx; ret; 
0x000f7e41: mov dh, 0x10; test dl, dl; je 0xf7e14; pop ebx; ret; 
0x00039d5d: mov dh, 0x11; test dl, dl; jne 0x39d40; ret; 
0x001a64c6: mov dh, 0x12; sub eax, edx; ret; 
0x00172bca: mov dh, 0x14; adc dword ptr [eax - 0x27c600b0], ecx; jne 0x172bc0; pop ebx; ret; 
0x000d2dab: mov dh, 0x14; or dh, dh; ret 0xf04; 
0x0014abba: mov dh, 0x18; test ebx, ebx; jne 0x14ab88; mov eax, 1; pop ebx; ret; 
0x000af5fc: mov dh, 0x3c; cmp byte ptr [ebp - 0x7c588a01], al; ret 0xeb01; 
0x0008bd27: mov dh, 0x40; inc dword ptr [ebx - 0x3b7c10dd]; add al, 0x5b; pop esi; ret; 
0x0019652d: mov dh, 0x40; jmp dword ptr [esi - 0x77]; 
0x000fa8da: mov dh, 0x42; add dword ptr [ebx - 0x3f7bfe3e], eax; jne 0xfa8b1; xor eax, eax; ret; 
0x001280d8: mov dh, 0x42; jnp 0x128069; xchg ebx, eax; ret; 
0x001a0aa2: mov dh, 0x42; pop es; sub eax, ecx; pop ebp; ret; 
0x0019f2f5: mov dh, 0x42; pop es; sub eax, ecx; ret; 
0x001a0b7e: mov dh, 0x42; push es; sub eax, ecx; pop ebp; ret; 
0x0019f365: mov dh, 0x42; push es; sub eax, ecx; ret; 
0x001089f9: mov dh, 0x43; add al, 0x89; ret 0xe283; 
0x0013be9b: mov dh, 0x44; push eax; add eax, eax; call 0x1f441ab; pop ebx; ret; 
0x00061fce: mov dh, 0x44; push es; aad 0x83; ret 0x101; 
0x0003a6a9: mov dh, 0x44; xor eax, 0xfc08400; xchg ebp, eax; ret; 
0x0006293a: mov dh, 0x45; or eax, 0x8901e683; ret; 
0x0010abe6: mov dh, 0x45; sbb al, 0x89; ret 0xeac0; 
0x00108dad: mov dh, 0x46; add al, 0x89; ret 0xe283; 
0x0016960c: mov dh, 0x47; add dword ptr [ebp + 0x34890177], ecx; and al, 0x84; ror byte ptr [edi], 0x95; ret 0x3a3c; 
0x001a9312: mov dh, 0x47; test dword ptr [edi], 0x29f756b6; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x001a0b5a: mov dh, 0x48; add eax, 0x542b60f; sub eax, ecx; pop ebp; ret; 
0x0019f351: mov dh, 0x48; add eax, 0x542b60f; sub eax, ecx; ret; 
0x00196409: mov dh, 0x48; dec dword ptr [eax + 0x448bff4a]; and al, 8; pop ebx; ret; 
0x001983f9: mov dh, 0x48; dec dword ptr [eax - 0x2f7600b6]; pop ebx; ret; 
0x001a0a9e: mov dh, 0x48; pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; pop ebp; ret; 
0x0019f2f1: mov dh, 0x48; pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x001a0b7a: mov dh, 0x48; push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; pop ebp; ret; 
0x0019f361: mov dh, 0x48; push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x0017903b: mov dh, 0x4c; or dh, bl; call dword ptr [ebp - 0x73]; 
0x0015c879: mov dh, 0x50; or dword ptr [ebx + 0x5e], ebx; and edx, 0xf; mov eax, edx; ret; 
0x0005e7e1: mov dh, 0x51; or al, 0xf6; ret 0xf01; 
0x0005fcbd: mov dh, 0x52; or al, 0xf6; ret 0xf01; 
0x00104a8c: mov dh, 0x52; sbb al, 0xf6; ret 0xf08; 
0x0014cf47: mov dh, 0x53; add dword ptr [ecx - 0x72e3dbbc], ecx; inc ebx; add dword ptr [eax - 0x7bf0c406], eax; ret 1; 
0x000a6d12: mov dh, 0x53; sub dh, dh; ret 0x7502; 
0x00065112: mov dh, 0x54; add ah, al; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [ecx + edx*4 - 0x73f14]; jmp eax; 
0x0006589c: mov dh, 0x54; add ah, al; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [edi + edx*4]; mov edi, ecx; jmp eax; 
0x00066024: mov dh, 0x54; add ah, al; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [esi + edx*4 - 0x74014]; jmp eax; 
0x000718d5: mov dh, 0x54; xor ah, al; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x00070789: mov dh, 0x54; xor ah, al; mov ebx, dword ptr [esp + 0xc]; mov ecx, dword ptr [ebx + edx*4 - 0x73734]; add ecx, eax; jmp ecx; 
0x00070fe9: mov dh, 0x54; xor esp, eax; mov ebx, dword ptr [esp + 0xc]; mov ecx, dword ptr [ebx + edx*4 - 0x736b4]; add ecx, eax; jmp ecx; 
0x0007213b: mov dh, 0x54; xor esp, eax; mov ebx, dword ptr [esp + 0xc]; mov ecx, dword ptr [ebx + edx*4 - 0x73834]; add ecx, eax; jmp ecx; 
0x00140fb2: mov dh, 0x55; adc dword ptr [ecx], edi; ret 0x460f; 
0x001a9385: mov dh, 0x56; imul byte ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x001a9316: mov dh, 0x56; imul dword ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x001a9345: mov dh, 0x56; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x00079f95: mov dh, 0x57; add ecx, ebp; ret; 
0x0005c187: mov dh, 0x57; or al, 0xf6; ret 0x7401; 
0x0005ee77: mov dh, 0x57; or al, 0xf6; ret 0xf40; 
0x001417d9: mov dh, 0x5a; add dword ptr [ebp - 0x76fde7bc], ecx; ret; 
0x0015e021: mov dh, 0x5a; or dh, dh; ret; 
0x0015c6ef: mov dh, 0x5d; add byte ptr [eax], bh; sbb byte ptr [edx + ebp*8 - 0x7d], dh; ret 0x8b18; 
0x00155866: mov dh, 0x5f; pop ebp; ret; 
0x001844b0: mov dh, 0x66; stc; call dword ptr [ebp + 0x50]; 
0x00182cda: mov dh, 0x66; stc; call dword ptr [ebp + 0x56]; 
0x001418b1: mov dh, 0x6a; add dword ptr [ebp - 0x76fdd7bc], ecx; ret; 
0x001788f1: mov dh, 0x70; daa; stc; call dword ptr [edi + 0x52]; 
0x00068065: mov dh, 0x72; dec byte ptr [ecx + 0x72d938f3]; ret 0xf089; 
0x0007bd38: mov dh, 0x78; cli; jmp dword ptr [esi - 0x70]; 
0x00128de9: mov dh, 0x80; jp 0x128df0; xor al, 0x75; mov al, 0x83; ret 0xeb03; 
0x000afcdd: mov dh, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00043702: mov dh, 0x83; ret 0x8d01; 
0x00062c05: mov dh, 0x84; push es; dec esp; ret 0xfff8; 
0x00065da6: mov dh, 0x89; ret; 
0x00183f38: mov dh, 0x8a; stc; call dword ptr [esi + 0x53]; 
0x00063487: mov dh, 0x94; and al, 0x83; add byte ptr [eax], al; add byte ptr [ecx], al; ret; 
0x000e85e6: mov dh, 0xab; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x0009c2f5: mov dh, 0xc0; add eax, 2; add esp, 0xc; ret; 
0x0017d0a9: mov dh, 0xc0; add esp, 0x1c; ret; 
0x0011f065: mov dh, 0xc0; add esp, 0x4c; ret; 
0x00172149: mov dh, 0xc0; add esp, 4; pop ebx; pop esi; ret; 
0x0012664f: mov dh, 0xc0; add esp, 8; pop ebx; ret; 
0x00042cef: mov dh, 0xc0; bsr eax, eax; xor eax, 0x1f; lea edx, [eax - 0x17]; mov eax, edx; ret; 
0x0009c30a: mov dh, 0xc0; lea eax, [eax + eax + 2]; ret; 
0x0003c379: mov dh, 0xc0; mov dword ptr [ebx + 0x18], eax; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0012364c: mov dh, 0xc0; neg eax; add esp, 0xc; ret; 
0x0012ed50: mov dh, 0xc0; neg eax; ret; 
0x00088ca8: mov dh, 0xc0; pop ebx; neg eax; ret; 
0x00136d72: mov dh, 0xc0; pop ebx; pop esi; neg eax; ret; 
0x0008914a: mov dh, 0xc0; pop ebx; pop esi; pop edi; ret; 
0x001720b5: mov dh, 0xc0; pop ebx; pop esi; ret; 
0x0008ec66: mov dh, 0xc0; pop ebx; ret; 
0x0005b5dc: mov dh, 0xc0; pop edi; ret; 
0x0003d223: mov dh, 0xc0; ret; 
0x0011b15a: mov dh, 0xc0; sbb ecx, edx; sbb eax, 0; pop ebx; pop esi; ret; 
0x0009c1d6: mov dh, 0xc0; sub eax, 2; add esp, 0xc; ret; 
0x00042e8f: mov dh, 0xc0; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x0002838b: mov dh, 0xc2; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x001423f1: mov dh, 0xc2; ret; 
0x0004326c: mov dh, 0xc2; tzcnt eax, eax; test dl, dl; mov edx, 8; cmove eax, edx; ret; 
0x001287bd: mov dh, 0xc8; shrd eax, edx, 0xc; xor al, al; or eax, ecx; ret; 
0x0004286b: mov dh, 0xc9; bsr ecx, ecx; shl eax, cl; ret; 
0x0004296f: mov dh, 0xc9; mov eax, 0x80000000; bsr ecx, ecx; xor ecx, 0x1f; shr eax, cl; ret; 
0x0010986f: mov dh, 0xc; or ecx, dword ptr [eax - 0x3f7cf8f4]; add dword ptr [ecx], edi; ret 0x2a7e; 
0x001a5fca: mov dh, 0xc; push cs; sub eax, ecx; pop esi; pop edi; ret; 
0x0006510b: mov dh, 0xd3; mov ecx, dword ptr [esp + 0x20]; movzx edx, byte ptr [edx + eax - 0x20]; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [ecx + edx*4 - 0x73f14]; jmp eax; 
0x000d9b10: mov dh, 0xdb; lea ebx, [ebx + ebx - 1]; mov eax, ebx; pop ebx; pop esi; ret; 
0x00114ec9: mov dh, 0xe8; xor dword ptr [esi - 0x766ffffe], ecx; fimul dword ptr [ebx - 0x47fbdba4]; test dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00107b82: mov dh, 0xf1; dec dword ptr [ebx - 0x17d3dbbc]; ret 0xff59; 
0x0017a2ab: mov dh, 0xf3; call dword ptr [eax - 0x73]; 
0x0016b237: mov dh, 0xf9; call dword ptr [eax - 0x73]; 
0x00130a4e: mov dh, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b3546: mov dh, 2; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x001a3164: mov dh, 2; mov ecx, dword ptr [ebx + ecx*4 - 0x86474]; mov eax, dword ptr [ebx + eax*4 - 0x86474]; sub eax, ecx; pop ebx; ret; 
0x0008d32f: mov dh, 2; pop ebx; pop esi; ret; 
0x0018b9ba: mov dh, 2; pop esi; pop edi; ret; 
0x00087667: mov dh, 2; ret; 
0x001a0abd: mov dh, 2; sub eax, ecx; pop ebp; ret; 
0x0019f304: mov dh, 2; sub eax, ecx; ret; 
0x0008b587: mov dh, 2; sub esp, 8; lea ebx, [edx + 1]; push eax; push esi; call dword ptr [ebp + 0xc]; 
0x000af54a: mov dh, 4; adc byte ptr [eax + 0x458b1104], cl; aam 0x83; ret 0x3901; 
0x000c21b3: mov dh, 8; cmp cl, byte ptr [edx]; jne 0xc21bd; xor eax, eax; pop ebx; ret; 
0x00196a89: mov dh, 8; mov byte ptr [edx], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001a0aba: mov dh, 8; movzx eax, byte ptr [edx]; sub eax, ecx; pop ebp; ret; 
0x0019f301: mov dh, 8; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x0011335e: mov dh, 8; test cl, cl; jne 0x113343; xor eax, eax; pop ebx; ret; 
0x000f0b8e: mov dh, 8; test cl, cl; jne 0xf0b73; xor eax, eax; pop ebx; ret; 
0x000f36ce: mov dh, 8; test cl, cl; jne 0xf36b3; xor eax, eax; pop ebx; ret; 
0x000f44ce: mov dh, 8; test cl, cl; jne 0xf44b3; xor eax, eax; pop ebx; ret; 
0x000f6ffe: mov dh, 8; test cl, cl; jne 0xf6fe3; xor eax, eax; pop ebx; ret; 
0x000f7e0e: mov dh, 8; test cl, cl; jne 0xf7df3; xor eax, eax; pop ebx; ret; 
0x000c0a79: mov dh, byte ptr [esi + 2]; mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000c0a53: mov dh, byte ptr [esi]; mov byte ptr [eax], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0003d8aa: mov dl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000a0c0a: mov dl, 0x19; add al, byte ptr [eax]; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0008feea: mov dl, 0x32; stc; inc dword ptr [ebx - 0x3fcee73c]; pop ebx; ret; 
0x001b6dfa: mov dl, 0x44; ret 0xfff9; 
0x00143917: mov dl, 0x4c; je 0x143914; call dword ptr [eax + 0x56]; 
0x001b6e2e: mov dl, 0x5c; ret 0xfff9; 
0x00175f4a: mov dl, 0x7d; cld; jmp dword ptr [esi - 0x70]; 
0x0016ecb8: mov dl, 0x83; in al, dx; or byte ptr [ebp - 0xc34f379], cl; call dword ptr [eax - 0x73]; 
0x0018414a: mov dl, 0x9b; sti; jmp dword ptr [esi - 0x70]; 
0x0016fa4a: mov dl, 0xe2; cld; jmp dword ptr [esi - 0x70]; 
0x00189f6e: mov dl, 0xf8; inc dword ptr [ebx - 0x77cef3c]; push dword ptr [esp + edi*4 - 0x77]; ret 0xe283; 
0x00153f40: mov dl, 0xf9; call dword ptr [eax - 0x73]; 
0x00156151: mov dl, 0xf9; call dword ptr [edx - 0x73]; 
0x0008e926: mov dl, 0xf; add byte ptr [0x1b04eb], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x29c], edx; ret; 
0x0008e946: mov dl, 0xf; add byte ptr [ecx + 0x1b04cbc2], al; add byte ptr [ebx - 0x7cfbdbbc], cl; cmp byte ptr [ecx], al; je 0x8e960; ret; 
0x00192a6b: mov dl, 0xfa; jmp dword ptr [esi - 0x70]; 
0x000779b4: mov dl, 0xff; dec dword ptr [ebx - 0x4ff7b]; jmp dword ptr [ebp - 0x75]; 
0x00119479: mov dl, 0xff; jmp dword ptr [ebp - 0x5f]; 
0x00130a1b: mov dl, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b976a: mov dl, 6; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000b966a: mov dl, 7; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00030276: mov dl, 7; add byte ptr [ecx - 0x76bbdbbc], cl; ret 0xc483; 
0x00030268: mov dl, 7; add byte ptr [ecx - 0x76e3dbbc], cl; lds ecx, ptr [ecx - 0x6817dbc4]; mov dl, 7; add byte ptr [ecx - 0x76bbdbbc], cl; ret 0xc483; 
0x0019be3a: mov dl, 9; cli; jmp dword ptr [esi - 0x70]; 
0x000b9960: mov dl, byte ptr [esi]; mov byte ptr [edi], dl; pop edi; pop esi; pop ebx; ret; 
0x0017a97b: mov dl, ch; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x001997a3: mov dr0, esp; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00143974: mov ds, word ptr [ecx - 7]; call dword ptr [eax - 0x73]; 
0x0013f6b1: mov ds, word ptr [edi]; pop eax; stc; dec dword ptr [ebp - 0x6a7d57a]; call dword ptr [ecx - 0x77]; 
0x0003c672: mov dword ptr [0x10c48300], eax; test eax, eax; jne 0x3c688; add esp, 8; pop ebx; ret; 
0x000bad79: mov dword ptr [0x5f000007], eax; pop esi; pop ebx; ret; 
0x0008e770: mov dword ptr [0x78], eax; ret; 
0x0008f162: mov dword ptr [0x78], edx; pop ebx; ret; 
0x0008e739: mov dword ptr [0x7c], eax; ret; 
0x0008e818: mov dword ptr [0x7c], edx; mov eax, dword ptr [eax + 0x24]; test eax, eax; jne 0x8e830; ret; 
0x0008e7ea: mov dword ptr [0x7c], edx; pop ebx; ret; 
0x00176676: mov dword ptr [0x81000135], eax; ret; 
0x00156176: mov dword ptr [0x8100033a], eax; ret; 
0x00124376: mov dword ptr [0x81000658], eax; ret; 
0x0010b176: mov dword ptr [0x810007ea], eax; ret; 
0x000c3476: mov dword ptr [0x81000c67], eax; ret; 
0x000ac076: mov dword ptr [0x81000ddb], eax; ret; 
0x00097276: mov dword ptr [0x81000f29], eax; ret; 
0x0010a69c: mov dword ptr [0x83fffffa], eax; ret 0x8301; 
0x000b3b09: mov dword ptr [0x85fffff8], eax; ror byte ptr [edi], 0x85; dec ebx; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00124a71: mov dword ptr [0x89530011], eax; ret; 
0x0012f29f: mov dword ptr [0x8b000000], eax; pop esp; and al, 0x14; call dword ptr gs:[0x10]; 
0x00153a83: mov dword ptr [0x8b9c72c2], eax; dec ebp; mov word ptr [ebp - 0x64e8b7f], cs; call dword ptr [eax - 0x73]; 
0x000511b9: mov dword ptr [0x8bfffff4], eax; jl 0x511e4; sub byte ptr [ebp - 0x687cb79], cl; call dword ptr [eax - 0x73]; 
0x00060d1d: mov dword ptr [0x8d0cec83], eax; adc dword ptr [edx + ebx], 0; add byte ptr [eax - 0x18], dl; ret; 
0x000976fa: mov dword ptr [0x8dfffffd], eax; xchg dword ptr [eax], ebx; xchg ecx, edi; call dword ptr [eax - 0x73]; 
0x000dece0: mov dword ptr [0xc2920f00], eax; add edx, 0x16d; mov eax, edx; ret; 
0x00135b55: mov dword ptr [0xc2920fd8], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x00118b16: mov dword ptr [0xc483fffa], eax; adc byte ptr [ecx], bh; ret; 
0x00038df2: mov dword ptr [0xc483fffe], eax; adc byte ptr [ecx + 0xfc085c1], cl; test byte ptr [ebp - 0x77000000], ch; ret 0xab8b; 
0x00097818: mov dword ptr [0xe9ac73c2], eax; cmp dh, 0xff; dec dword ptr [ebp - 0x678e779]; call dword ptr [eax - 0x73]; 
0x00023007: mov dword ptr [8], eax; add byte ptr [eax], al; add byte ptr [eax], al; jmp dword ptr [ebx + 0xc]; 
0x0010ce3e: mov dword ptr [eax + 0x108], edx; xor eax, eax; ret; 
0x000794f4: mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 0x14], 2; mov dword ptr [eax + 0x18], edx; ret; 
0x000905cc: mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 8], 0x10; xor eax, eax; ret; 
0x0005adea: mov dword ptr [eax + 0x10], 0; mov dword ptr [eax], edx; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x00171e9e: mov dword ptr [eax + 0x10], ebx; mov eax, 1; pop ebx; pop esi; ret; 
0x0008004f: mov dword ptr [eax + 0x10], ebx; mov eax, ecx; mov dword ptr [edx], ecx; pop ebx; ret; 
0x000c0cb1: mov dword ptr [eax + 0x10], ecx; mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd82b: mov dword ptr [eax + 0x10], ecx; mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0c50: mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd7cd: mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0017153a: mov dword ptr [eax + 0x10], ecx; mov eax, edx; pop ebx; pop esi; ret; 
0x000868b9: mov dword ptr [eax + 0x10], edx; add esp, 8; pop ebx; ret; 
0x000908e0: mov dword ptr [eax + 0x10], edx; xor eax, eax; ret; 
0x0010ce66: mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x0011461c: mov dword ptr [eax + 0x110], edx; xor eax, eax; ret; 
0x000794fb: mov dword ptr [eax + 0x14], 2; mov dword ptr [eax + 0x18], edx; ret; 
0x00042206: mov dword ptr [eax + 0x14], 5; mov dword ptr [eax + 0xc], 0x1000b; xor eax, eax; ret; 
0x0017cc5e: mov dword ptr [eax + 0x14], edx; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x00090914: mov dword ptr [eax + 0x14], edx; xor eax, eax; ret; 
0x0008762c: mov dword ptr [eax + 0x14], esi; mov eax, ebx; mov byte ptr [edx], cl; pop ebx; pop esi; ret; 
0x00122e8e: mov dword ptr [eax + 0x16], edx; ret; 
0x000c0d98: mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd8f5: mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000e8e64: mov dword ptr [eax + 0x18], 0; pop ebx; pop esi; pop edi; ret; 
0x00171e9b: mov dword ptr [eax + 0x18], ecx; mov dword ptr [eax + 0x10], ebx; mov eax, 1; pop ebx; pop esi; ret; 
0x000c0d6a: mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd8d7: mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0005bcc1: mov dword ptr [eax + 0x18], edx; push eax; call 0x5bb30; add esp, 0x18; pop ebx; ret; 
0x00079502: mov dword ptr [eax + 0x18], edx; ret; 
0x00024bd2: mov dword ptr [eax + 0x1a50], edx; pop ebx; pop esi; ret; 
0x00024b02: mov dword ptr [eax + 0x1a50], edx; ret; 
0x0008ce32: mov dword ptr [eax + 0x1a7c], 0; ret; 
0x00121e76: mov dword ptr [eax + 0x1c], ebx; xor edx, 0x20; mov dword ptr [eax + 0x30], ecx; mov dword ptr [eax + 0x28], edx; pop ebx; ret; 
0x0008e72b: mov dword ptr [eax + 0x1c], edx; mov edx, dword ptr gs:[0x78]; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x000afa42: mov dword ptr [eax + 0x1c], esi; pop ebx; pop esi; ret; 
0x00080aa7: mov dword ptr [eax + 0x20], ecx; mov dword ptr [eax], edx; pop ebx; ret; 
0x00080a78: mov dword ptr [eax + 0x20], ecx; ret; 
0x0008e735: mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x00081120: mov dword ptr [eax + 0x24], 0; pop ebx; pop esi; pop edi; ret; 
0x0008ae00: mov dword ptr [eax + 0x24], ecx; mov dword ptr [eax + 0xc], edx; mov dword ptr [eax + 4], edx; ret; 
0x0008ae34: mov dword ptr [eax + 0x24], ecx; mov dword ptr [eax + 4], edx; pop ebx; ret; 
0x00121e7f: mov dword ptr [eax + 0x28], edx; pop ebx; ret; 
0x0008e8d4: mov dword ptr [eax + 0x290], edx; ret; 
0x0008e8f4: mov dword ptr [eax + 0x294], edx; ret; 
0x0008e914: mov dword ptr [eax + 0x298], edx; ret; 
0x0008e934: mov dword ptr [eax + 0x29c], edx; ret; 
0x000959a4: mov dword ptr [eax + 0x2a4], edx; ret; 
0x00095984: mov dword ptr [eax + 0x2ac], edx; ret; 
0x0008adfa: mov dword ptr [eax + 0x2c], edx; mov edx, dword ptr [eax + 0x24]; mov dword ptr [eax + 0x24], ecx; mov dword ptr [eax + 0xc], edx; mov dword ptr [eax + 4], edx; ret; 
0x0017151e: mov dword ptr [eax + 0x2c], esi; mov dword ptr [eax + 0x34], ebx; mov eax, edx; pop ebx; pop esi; ret; 
0x00121e7c: mov dword ptr [eax + 0x30], ecx; mov dword ptr [eax + 0x28], edx; pop ebx; ret; 
0x00171521: mov dword ptr [eax + 0x34], ebx; mov eax, edx; pop ebx; pop esi; ret; 
0x000a0b45: mov dword ptr [eax + 0x34c], edx; mov dword ptr [eax + 0x378], 1; ret; 
0x000a0b95: mov dword ptr [eax + 0x350], edx; mov dword ptr [eax + 0x378], 1; ret; 
0x000a0bc5: mov dword ptr [eax + 0x354], edx; mov dword ptr [eax + 0x378], 1; ret; 
0x000a08b5: mov dword ptr [eax + 0x358], edx; ret; 
0x000a0895: mov dword ptr [eax + 0x35c], edx; ret; 
0x000a0b15: mov dword ptr [eax + 0x370], edx; mov dword ptr [eax + 0x378], 1; ret; 
0x000a0b1b: mov dword ptr [eax + 0x378], 1; ret; 
0x000a0945: mov dword ptr [eax + 0x394], edx; ret; 
0x0009f4ae: mov dword ptr [eax + 0x3bd0], 0; ret; 
0x000a0788: mov dword ptr [eax + 0x3bd4], 0; ret; 
0x000a0b75: mov dword ptr [eax + 0x3c34], edx; ret; 
0x00121f31: mov dword ptr [eax + 0x40], edx; pop ebx; pop esi; ret; 
0x001897cc: mov dword ptr [eax + 0x4c], edx; ret; 
0x00024b50: mov dword ptr [eax + 0x64], edx; lea edx, [eax + 0x34]; mov eax, dword ptr [eax + 0x34]; test eax, eax; jne 0x24b50; ret; 
0x000ea0ae: mov dword ptr [eax + 0x6c], ebx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x00156251: mov dword ptr [eax + 0x7c], 0; add esp, 4; pop esi; pop edi; ret; 
0x0007bf4d: mov dword ptr [eax + 0x94], ecx; mov ecx, dword ptr [eax + 0x58]; mov dword ptr [ecx + 0x88], edx; ret; 
0x00189e4d: mov dword ptr [eax + 0x94], edx; add esp, 8; pop ebx; ret; 
0x000905c5: mov dword ptr [eax + 0xc], 0; mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 8], 0x10; xor eax, eax; ret; 
0x0004220d: mov dword ptr [eax + 0xc], 0x1000b; xor eax, eax; ret; 
0x0009d635: mov dword ptr [eax + 0xc], ecx; ret; 
0x00085cb0: mov dword ptr [eax + 0xc], edx; add esp, 4; pop ebx; pop esi; ret; 
0x0008ae03: mov dword ptr [eax + 0xc], edx; mov dword ptr [eax + 4], edx; ret; 
0x0008e76c: mov dword ptr [eax + 0xc], edx; mov dword ptr gs:[0x78], eax; ret; 
0x0017cafe: mov dword ptr [eax + 0xc], edx; mov eax, ecx; pop ebx; ret; 
0x0017cabe: mov dword ptr [eax + 0xc], edx; mov eax, ecx; ret; 
0x0009d71a: mov dword ptr [eax + 0xc], edx; pop ebx; pop esi; pop edi; ret; 
0x0017d2d4: mov dword ptr [eax + 0xc], edx; ret; 
0x00141e24: mov dword ptr [eax + 0xc], edx; xor eax, eax; pop ebx; pop esi; ret; 
0x000909f5: mov dword ptr [eax + 0xc], edx; xor eax, eax; pop ebx; ret; 
0x000906fc: mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x00156a3c: mov dword ptr [eax + 0xf8], ecx; mov dword ptr [eax + 0xfc], edx; ret; 
0x000c0c6e: mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd7eb: mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00156a42: mov dword ptr [eax + 0xfc], edx; ret; 
0x000c0aea: mov dword ptr [eax + 3], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd697: mov dword ptr [eax + 3], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000909ee: mov dword ptr [eax + 4], 0; mov dword ptr [eax + 0xc], edx; xor eax, eax; pop ebx; ret; 
0x0015104f: mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; add esp, 0x18; pop ebx; ret; 
0x0008ba54: mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; ret; 
0x0017073e: mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x0003d0a7: mov dword ptr [eax + 4], 0; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x0010b469: mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x00099ace: mov dword ptr [eax + 4], 0; xor eax, eax; ret; 
0x00141b23: mov dword ptr [eax + 4], 0x29; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00170676: mov dword ptr [eax + 4], 1; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x001706cc: mov dword ptr [eax + 4], ecx; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x00080a6d: mov dword ptr [eax + 4], ecx; mov ecx, dword ptr [eax + 8]; mov dword ptr [eax], edx; mov dword ptr [eax + 8], edx; mov dword ptr [eax + 0x20], ecx; ret; 
0x00176897: mov dword ptr [eax + 4], ecx; mov edx, dword ptr [edx + 0x2c]; mov dword ptr [eax + 8], edx; ret; 
0x00177267: mov dword ptr [eax + 4], ecx; mov edx, dword ptr [edx + 0x34]; mov dword ptr [eax + 8], edx; ret; 
0x00087663: mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x0017068e: mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x00080aa1: mov dword ptr [eax + 4], edx; mov dword ptr [eax + 8], ebx; mov dword ptr [eax + 0x20], ecx; mov dword ptr [eax], edx; pop ebx; ret; 
0x0005bb51: mov dword ptr [eax + 4], edx; mov dword ptr [eax], edx; ret; 
0x000bd679: mov dword ptr [eax + 4], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000868b3: mov dword ptr [eax + 4], edx; mov edx, dword ptr [eax + 0xc]; mov dword ptr [eax + 0x10], edx; add esp, 8; pop ebx; ret; 
0x0017d2cd: mov dword ptr [eax + 4], edx; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0xc], edx; ret; 
0x0008e762: mov dword ptr [eax + 4], edx; mov edx, dword ptr gs:[0x78]; mov dword ptr [eax + 0xc], edx; mov dword ptr gs:[0x78], eax; ret; 
0x00085a19: mov dword ptr [eax + 4], edx; pop ebx; pop esi; ret; 
0x0008ae37: mov dword ptr [eax + 4], edx; pop ebx; ret; 
0x0008ae06: mov dword ptr [eax + 4], edx; ret; 
0x0005adf3: mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x000dcbec: mov dword ptr [eax + 4], esi; pop ebx; pop esi; pop edi; ret; 
0x000c0b6e: mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd6fb: mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00151056: mov dword ptr [eax + 8], 0; add esp, 0x18; pop ebx; ret; 
0x0014ab71: mov dword ptr [eax + 8], 0; add esp, 4; pop ebx; pop esi; ret; 
0x0010b462: mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x0008ba5b: mov dword ptr [eax + 8], 0; ret; 
0x000905d3: mov dword ptr [eax + 8], 0x10; xor eax, eax; ret; 
0x0005abdd: mov dword ptr [eax + 8], ebx; add esp, 4; pop ebx; pop esi; ret; 
0x00080aa4: mov dword ptr [eax + 8], ebx; mov dword ptr [eax + 0x20], ecx; mov dword ptr [eax], edx; pop ebx; ret; 
0x0005bb4e: mov dword ptr [eax + 8], ecx; mov dword ptr [eax + 4], edx; mov dword ptr [eax], edx; ret; 
0x00085a14: mov dword ptr [eax + 8], ecx; mov dword ptr [eax], edx; mov dword ptr [eax + 4], edx; pop ebx; pop esi; ret; 
0x0017067d: mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x0005ac89: mov dword ptr [eax + 8], ecx; xor eax, eax; pop ebx; pop esi; ret; 
0x00080a75: mov dword ptr [eax + 8], edx; mov dword ptr [eax + 0x20], ecx; ret; 
0x000c0b50: mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd6dd: mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000d47e8: mov dword ptr [eax + 8], edx; mov eax, esi; pop ebx; pop esi; ret; 
0x00122e85: mov dword ptr [eax + 8], edx; mov edx, 0x100; mov word ptr [eax + 0x16], dx; ret; 
0x000794ed: mov dword ptr [eax + 8], edx; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 0x14], 2; mov dword ptr [eax + 0x18], edx; ret; 
0x0010b44f: mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x00173be6: mov dword ptr [eax + 8], edx; ret; 
0x001228af: mov dword ptr [eax + 8], edx; xor eax, eax; pop ebx; ret; 
0x00095a65: mov dword ptr [eax + 8], edx; xor edx, edx; mov eax, edx; ret; 
0x000348f5: mov dword ptr [eax + ebx], edx; pop ebx; pop esi; ret; 
0x00179170: mov dword ptr [eax + edx], ecx; ret; 
0x00033a89: mov dword ptr [eax + esi*4], ecx; mov eax, dword ptr [ebx + esi*4 - 0x814]; test eax, eax; je 0x33a99; call eax; 
0x00033d64: mov dword ptr [eax - 0x40], edi; test edx, edx; je 0x33d75; mov dword ptr [esp + 0x14], eax; call edx; 
0x0009536f: mov dword ptr [eax - 0x47ffffff], esp; lock add byte ptr [eax], al; add byte ptr [ecx], dh; leave; xor esi, esi; call dword ptr gs:[0x10]; 
0x0017d310: mov dword ptr [eax], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0008ba4e: mov dword ptr [eax], 0; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; ret; 
0x00099ac8: mov dword ptr [eax], 0; mov dword ptr [eax + 4], 0; xor eax, eax; ret; 
0x0010b45c: mov dword ptr [eax], 0; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x00192ba8: mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x0009d623: mov dword ptr [eax], 0; mov ecx, dword ptr [edx + 0x3bac]; mov dword ptr [edx + 0x3bac], eax; mov dword ptr [eax + 0xc], ecx; ret; 
0x001706b7: mov dword ptr [eax], 0; pop ebx; ret; 
0x0003d0ae: mov dword ptr [eax], 0; xor eax, eax; ret; 
0x00170738: mov dword ptr [eax], 0x10; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x00170670: mov dword ptr [eax], 0x10; mov dword ptr [eax + 4], 1; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x00170688: mov dword ptr [eax], 0x10; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x00170720: mov dword ptr [eax], 0xa; pop ebx; ret; 
0x00170710: mov dword ptr [eax], 0xb; pop ebx; ret; 
0x00141b1d: mov dword ptr [eax], 0xc; mov dword ptr [eax + 4], 0x29; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00170708: mov dword ptr [eax], 0xc; pop ebx; ret; 
0x0018b22d: mov dword ptr [eax], 0xec830000; add al, 0x55; push edi; push ebx; call dword ptr [esi + 0x3c]; 
0x000f0b11: mov dword ptr [eax], 0xff650000; adc eax, 0x10; ret; 
0x0009a5d4: mov dword ptr [eax], 1; xor eax, eax; ret; 
0x001706c6: mov dword ptr [eax], 6; mov dword ptr [eax + 4], ecx; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x0017069b: mov dword ptr [eax], 7; mov dword ptr [eax + 4], edx; pop ebx; ret; 
0x00170730: mov dword ptr [eax], 8; pop ebx; ret; 
0x001706f6: mov dword ptr [eax], 9; mov dword ptr [eax + 4], ecx; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x000d9713: mov dword ptr [eax], eax; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x0017cc56: mov dword ptr [eax], ebx; lea ecx, [ecx - 0x954]; mov dword ptr [eax + 0x14], edx; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x0008dd23: mov dword ptr [eax], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x000bd644: mov dword ptr [eax], ecx; mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0ae8: mov dword ptr [eax], ecx; mov dword ptr [eax + 3], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd695: mov dword ptr [eax], ecx; mov dword ptr [eax + 3], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0008f367: mov dword ptr [eax], ecx; mov dword ptr [edx + 0x924], 0; ret; 
0x000811fb: mov dword ptr [eax], ecx; mov eax, dword ptr [edx]; pop ebx; pop esi; pop edi; ret; 
0x0007f379: mov dword ptr [eax], ecx; mov eax, dword ptr [edx]; ret; 
0x000c0aab: mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd665: mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0005af1c: mov dword ptr [eax], ecx; mov eax, edx; add esp, 0xc; ret; 
0x0010a81a: mov dword ptr [eax], ecx; mov eax, edx; ret; 
0x00176892: mov dword ptr [eax], ecx; mov ecx, dword ptr [edx + 0x28]; mov dword ptr [eax + 4], ecx; mov edx, dword ptr [edx + 0x2c]; mov dword ptr [eax + 8], edx; ret; 
0x00177262: mov dword ptr [eax], ecx; mov ecx, dword ptr [edx + 0x30]; mov dword ptr [eax + 4], ecx; mov edx, dword ptr [edx + 0x34]; mov dword ptr [eax + 8], edx; ret; 
0x0003ba1e: mov dword ptr [eax], ecx; ret; 
0x00094df8: mov dword ptr [eax], ecx; xor eax, eax; pop ebx; pop esi; ret; 
0x0007297a: mov dword ptr [eax], edi; pop ebx; pop esi; pop edi; ret; 
0x00079341: mov dword ptr [eax], edx; add esp, 4; pop ebx; pop esi; ret; 
0x000df72e: mov dword ptr [eax], edx; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00042204: mov dword ptr [eax], edx; mov dword ptr [eax + 0x14], 5; mov dword ptr [eax + 0xc], 0x1000b; xor eax, eax; ret; 
0x00085a17: mov dword ptr [eax], edx; mov dword ptr [eax + 4], edx; pop ebx; pop esi; ret; 
0x0005adf1: mov dword ptr [eax], edx; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x000dcbea: mov dword ptr [eax], edx; mov dword ptr [eax + 4], esi; pop ebx; pop esi; pop edi; ret; 
0x00080a73: mov dword ptr [eax], edx; mov dword ptr [eax + 8], edx; mov dword ptr [eax + 0x20], ecx; ret; 
0x00171615: mov dword ptr [eax], edx; mov eax, 1; add esp, 8; pop ebx; ret; 
0x00133b9e: mov dword ptr [eax], edx; mov eax, 1; ret; 
0x000c0a67: mov dword ptr [eax], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd634: mov dword ptr [eax], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00033f54: mov dword ptr [eax], edx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0012d966: mov dword ptr [eax], edx; pop ebx; pop esi; pop edi; ret; 
0x00080aaa: mov dword ptr [eax], edx; pop ebx; ret; 
0x0005bb54: mov dword ptr [eax], edx; ret; 
0x00040624: mov dword ptr [eax], edx; xor eax, eax; add esp, 8; pop ebx; ret; 
0x000816f2: mov dword ptr [eax], edx; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x000903bf: mov dword ptr [eax], edx; xor eax, eax; ret; 
0x001899fa: mov dword ptr [eax], esi; mov eax, edx; pop ebx; pop esi; ret; 
0x000af7c9: mov dword ptr [eax], esi; pop ebx; pop esi; pop edi; ret; 
0x0002327b: mov dword ptr [ebp + 0x137c], 1; call dword ptr gs:[0x10]; 
0x0003ef52: mov dword ptr [ebp + edi], edx; push dword ptr [ebx + 4]; call eax; 
0x0013bb74: mov dword ptr [ebp - 0x120], ecx; push ecx; push dword ptr [ebp - 0xc0]; push dword ptr [ebp - 0x11c]; call edx; 
0x0013b9da: mov dword ptr [ebp - 0x120], ecx; push ecx; push dword ptr [ebp - 0xc0]; push ebx; call eax; 
0x0012ca75: mov dword ptr [ebp - 0x30], edx; push dword ptr [eax]; mov eax, dword ptr [ebp - 0x3c]; push dword ptr [ebp - 0x38]; call eax; 
0x0008256d: mov dword ptr [ebp - 0x44], eax; sub eax, edx; push eax; push edx; push edi; call dword ptr [ebx + 0x38]; 
0x00133fa4: mov dword ptr [ebp - 0x4e8], eax; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x00134158: mov dword ptr [ebp - 0x510], ecx; call dword ptr gs:[0x10]; 
0x000f1787: mov dword ptr [ebp - 0x5b0], edx; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5b4]; call dword ptr [eax + 0x10]; 
0x000f8a07: mov dword ptr [ebp - 0x5c0], edx; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5d0]; push dword ptr [ebp - 0x5c4]; call dword ptr [eax + 0x10]; 
0x0013bb71: mov dword ptr [ebp - 0x74], eax; mov dword ptr [ebp - 0x120], ecx; push ecx; push dword ptr [ebp - 0xc0]; push dword ptr [ebp - 0x11c]; call edx; 
0x0013b8bc: mov dword ptr [ebp - 0x74], eax; push ebx; push 0; push 0x1000002; call edx; 
0x0013b35b: mov dword ptr [ebp - 0x78], ecx; mov dword ptr [ebp - 0x84], eax; push ebx; push 0; push 0x1000005; call edx; 
0x0013b802: mov dword ptr [ebp - 0x78], ecx; mov dword ptr [ebp - 0x84], edx; push esi; push 0; push 0x1000004; call eax; 
0x0013b3cb: mov dword ptr [ebp - 0x78], ecx; mov dword ptr [ebp - 0x84], edx; push esi; push 0; push 0x1000007; call eax; 
0x0013b71e: mov dword ptr [ebp - 0x78], ecx; push ebx; push 0; push 0x1000001; call eax; 
0x0013b12b: mov dword ptr [ebp - 0x78], ecx; push esi; push 0; push 0x1000003; call eax; 
0x0013b2ee: mov dword ptr [ebp - 0x78], ecx; push esi; push dword ptr [ebp - 0x11c]; push 0; call eax; 
0x001632ab: mov dword ptr [ebp - 0x7b7af040], 0x83000000; in al, dx; or byte ptr [ebx - 0x72efdbbc], cl; adc byte ptr [ebx + 0x60], 0xf9; call dword ptr [eax - 1]; 
0x0013b621: mov dword ptr [ebp - 0x7c], edi; mov dword ptr [ebp - 0x84], eax; push esi; push 0; push 0x1000006; call ecx; 
0x0013b8b9: mov dword ptr [ebp - 0x7c], esi; mov dword ptr [ebp - 0x74], eax; push ebx; push 0; push 0x1000002; call edx; 
0x0013b35e: mov dword ptr [ebp - 0x84], eax; push ebx; push 0; push 0x1000005; call edx; 
0x0013b624: mov dword ptr [ebp - 0x84], eax; push esi; push 0; push 0x1000006; call ecx; 
0x0013b9d4: mov dword ptr [ebp - 0x84], edx; mov dword ptr [ebp - 0x120], ecx; push ecx; push dword ptr [ebp - 0xc0]; push ebx; call eax; 
0x0013b718: mov dword ptr [ebp - 0x84], edx; mov dword ptr [ebp - 0x78], ecx; push ebx; push 0; push 0x1000001; call eax; 
0x0013b125: mov dword ptr [ebp - 0x84], edx; mov dword ptr [ebp - 0x78], ecx; push esi; push 0; push 0x1000003; call eax; 
0x0013b2e8: mov dword ptr [ebp - 0x84], edx; mov dword ptr [ebp - 0x78], ecx; push esi; push dword ptr [ebp - 0x11c]; push 0; call eax; 
0x0013b805: mov dword ptr [ebp - 0x84], edx; push esi; push 0; push 0x1000004; call eax; 
0x0013b3ce: mov dword ptr [ebp - 0x84], edx; push esi; push 0; push 0x1000007; call eax; 
0x0008e2ec: mov dword ptr [ebx + 0x10], eax; add esp, 0x18; pop ebx; ret; 
0x001715c9: mov dword ptr [ebx + 0x10], eax; add esp, 4; mov eax, 1; pop ebx; pop esi; ret; 
0x0005b5b6: mov dword ptr [ebx + 0x10], eax; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x0008aeb0: mov dword ptr [ebx + 0x10], eax; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x000a1339: mov dword ptr [ebx + 0x10], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x001525ca: mov dword ptr [ebx + 0x10], ecx; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000a6e58: mov dword ptr [ebx + 0x10], edx; mov dword ptr [ebx + 4], eax; pop ebx; pop esi; pop edi; ret; 
0x000868d5: mov dword ptr [ebx + 0x14], eax; add esp, 8; pop ebx; ret; 
0x000427dc: mov dword ptr [ebx + 0x1894], 0; add esp, 0x18; pop ebx; ret; 
0x0003c354: mov dword ptr [ebx + 0x18], eax; add esp, 8; xor eax, eax; pop ebx; ret; 
0x000a6afa: mov dword ptr [ebx + 0x18], ebp; mov dword ptr [ebx + 0x20], esi; mov dword ptr [ebx], eax; push eax; call ecx; 
0x0005b695: mov dword ptr [ebx + 0x18], edx; cmovne eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0008a47b: mov dword ptr [ebx + 0x1a78], eax; add esp, 8; pop ebx; ret; 
0x0008cd25: mov dword ptr [ebx + 0x1a7c], esi; add esp, 4; pop ebx; pop esi; ret; 
0x000a6afd: mov dword ptr [ebx + 0x20], esi; mov dword ptr [ebx], eax; push eax; call ecx; 
0x0009ba4c: mov dword ptr [ebx + 0x2b4], eax; add esp, 0x18; pop ebx; ret; 
0x00081653: mov dword ptr [ebx + 0x30], esi; add esp, 4; pop ebx; pop esi; ret; 
0x001269b6: mov dword ptr [ebx + 0x45a0], eax; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00126a48: mov dword ptr [ebx + 0x45a0], eax; add esp, 8; pop ebx; ret; 
0x0015763a: mov dword ptr [ebx + 0x4e78], 0; call esi; 
0x00089351: mov dword ptr [ebx + 0x50], 0xffffffff; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x001222fa: mov dword ptr [ebx + 0x50], edx; pop ebx; pop esi; pop edi; ret; 
0x001575b2: mov dword ptr [ebx + 0x5eb8], 0; call esi; 
0x0018b373: mov dword ptr [ebx + 0x68], 0xffffffff; add esp, 4; pop ebx; pop esi; ret; 
0x0015752a: mov dword ptr [ebx + 0x6ef8], 0; call esi; 
0x001574a2: mov dword ptr [ebx + 0x7f38], 0; call esi; 
0x0015741a: mov dword ptr [ebx + 0x8f78], 0; call esi; 
0x00157409: mov dword ptr [ebx + 0x8f84], 0x6374652f; mov byte ptr [ebx + 0x8f88], 0; mov dword ptr [ebx + 0x8f78], 0; call esi; 
0x0016276d: mov dword ptr [ebx + 0xa220], eax; add esp, 0x18; pop ebx; ret; 
0x00078f2e: mov dword ptr [ebx + 0xa4], eax; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x0016f3cd: mov dword ptr [ebx + 0xa62c], eax; add esp, 8; pop ebx; ret; 
0x0007902b: mov dword ptr [ebx + 0xac], edx; cmovne eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0016ef05: mov dword ptr [ebx + 0xc], 0; mov eax, dword ptr [ebx + 0x10]; push 0; push esi; call dword ptr [eax + 0x14]; 
0x00185280: mov dword ptr [ebx + 0xc], 0; pop ebx; ret; 
0x00148ab2: mov dword ptr [ebx + 0xc], 1; add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x0008e1e9: mov dword ptr [ebx + 0xc], eax; add esp, 0x18; pop ebx; ret; 
0x00186540: mov dword ptr [ebx + 0xc], eax; add esp, 0x28; pop ebx; ret; 
0x0008dde2: mov dword ptr [ebx + 0xc], eax; add esp, 4; pop ebx; pop esi; ret; 
0x000905a3: mov dword ptr [ebx + 0xc], eax; add esp, 4; xor eax, eax; pop ebx; pop edi; ret; 
0x0010e3c7: mov dword ptr [ebx + 0xc], eax; mov eax, 0xfffffff2; pop ebx; ret; 
0x00136e8e: mov dword ptr [ebx + 0xc], edx; add esp, 8; pop ebx; ret; 
0x00173ce8: mov dword ptr [ebx + 0xc], edx; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x00185274: mov dword ptr [ebx + 0xc], edx; pop ebx; ret; 
0x000a6e5b: mov dword ptr [ebx + 4], eax; pop ebx; pop esi; pop edi; ret; 
0x0010c871: mov dword ptr [ebx + 4], eax; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x0010c9cc: mov dword ptr [ebx + 4], eax; xor eax, eax; add esp, 8; pop ebx; ret; 
0x0010c7f7: mov dword ptr [ebx + 4], eax; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00054f93: mov dword ptr [ebx + 4], edi; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00085c7a: mov dword ptr [ebx + 4], edx; add esp, 4; pop ebx; pop esi; ret; 
0x00136dee: mov dword ptr [ebx + 4], edx; add esp, 8; pop ebx; ret; 
0x0005ba3e: mov dword ptr [ebx + 4], edx; mov byte ptr [eax], cl; pop ebx; pop esi; pop edi; ret; 
0x00086bc3: mov dword ptr [ebx + 4], edx; pop ebx; pop esi; ret; 
0x00097791: mov dword ptr [ebx + 4], edx; xor edx, edx; call dword ptr gs:[0x10]; 
0x0008707a: mov dword ptr [ebx + 4], edx; xor edx, edx; mov eax, edx; pop ebx; ret; 
0x0009812b: mov dword ptr [ebx + 8], 0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0017a9ba: mov dword ptr [ebx + 8], 0; push 0; push edi; call dword ptr [eax + 0x14]; 
0x00186593: mov dword ptr [ebx + 8], eax; add esp, 0x28; pop ebx; ret; 
0x00148aaa: mov dword ptr [ebx + 8], eax; mov eax, 0x92; mov dword ptr [ebx + 0xc], 1; add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x000868cf: mov dword ptr [ebx + 8], eax; mov eax, dword ptr [ebx + 0x10]; mov dword ptr [ebx + 0x14], eax; add esp, 8; pop ebx; ret; 
0x0010e3c1: mov dword ptr [ebx + 8], eax; mov eax, dword ptr [ebx + 0xc]; mov dword ptr [ebx + 0xc], eax; mov eax, 0xfffffff2; pop ebx; ret; 
0x0017826b: mov dword ptr [ebx + 8], eax; mov eax, dword ptr [ebx]; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x00136e3e: mov dword ptr [ebx + 8], edx; add esp, 8; pop ebx; ret; 
0x00085cad: mov dword ptr [ebx + 8], edx; mov dword ptr [eax + 0xc], edx; add esp, 4; pop ebx; pop esi; ret; 
0x00098167: mov dword ptr [ebx], 0; call dword ptr gs:[0x10]; 
0x0017a415: mov dword ptr [ebx], 0; pop ebx; pop esi; pop edi; ret; 
0x000982ad: mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x0007c28f: mov dword ptr [ebx], eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x00186b1c: mov dword ptr [ebx], eax; add esp, 0x28; pop ebx; ret; 
0x000ac4f0: mov dword ptr [ebx], eax; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x00087078: mov dword ptr [ebx], eax; mov dword ptr [ebx + 4], edx; xor edx, edx; mov eax, edx; pop ebx; ret; 
0x0005bec9: mov dword ptr [ebx], eax; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00084453: mov dword ptr [ebx], eax; pop ebx; pop esi; pop edi; ret; 
0x0016fa3b: mov dword ptr [ebx], eax; push dword ptr [ebx + 8]; push esi; call dword ptr [ebx + 0xc]; 
0x000a6b00: mov dword ptr [ebx], eax; push eax; call ecx; 
0x00086bbf: mov dword ptr [ebx], eax; xor eax, eax; mov dword ptr [ebx + 4], edx; pop ebx; pop esi; ret; 
0x000810c7: mov dword ptr [ebx], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x0017caf7: mov dword ptr [ebx], ecx; mov ecx, 1; mov dword ptr [eax + 0xc], edx; mov eax, ecx; pop ebx; ret; 
0x00189db8: mov dword ptr [ebx], edx; add esp, 8; pop ebx; ret; 
0x00066497: mov dword ptr [ebx], edx; mov byte ptr [eax], cl; pop ebx; pop esi; pop edi; ret; 
0x00072978: mov dword ptr [ebx], edx; mov dword ptr [eax], edi; pop ebx; pop esi; pop edi; ret; 
0x00085c78: mov dword ptr [ebx], edx; mov dword ptr [ebx + 4], edx; add esp, 4; pop ebx; pop esi; ret; 
0x0008bccf: mov dword ptr [ebx], edx; pop ebx; pop esi; pop edi; ret; 
0x00153171: mov dword ptr [ebx], esi; jne 0x153120; mov edx, 1; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0009dfee: mov dword ptr [ebx], esi; jne 0x9df90; mov edx, 1; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0009cf29: mov dword ptr [ecx + 0x10], eax; mov dword ptr [edx + 0x3ba8], ecx; ret; 
0x0009cf51: mov dword ptr [ecx + 0x10], eax; mov dword ptr [esi + 0x10], ecx; pop ebx; pop esi; ret; 
0x000a1336: mov dword ptr [ecx + 0x14], ebx; mov dword ptr [ebx + 0x10], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x0017ca45: mov dword ptr [ecx + 0x14], edx; ret; 
0x0008fa1a: mov dword ptr [ecx + 0x214], 1; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0007bf56: mov dword ptr [ecx + 0x88], edx; ret; 
0x0008f3b5: mov dword ptr [ecx + 0x924], 0; pop ebx; ret; 
0x0014d6e2: mov dword ptr [ecx + 0xa], edx; pop ebx; pop esi; pop edi; ret; 
0x0017ca3d: mov dword ptr [ecx + 0xc], eax; mov eax, 1; mov dword ptr [ecx + 0x14], edx; ret; 
0x00176997: mov dword ptr [ecx + 0xc], edx; mov eax, 1; pop ebx; ret; 
0x0009611b: mov dword ptr [ecx + 1], edi; add byte ptr [eax], al; mov eax, 0xf0; xor ecx, ecx; xor esi, esi; call dword ptr gs:[0x10]; 
0x000b36e2: mov dword ptr [ecx + 3], edx; pop ebx; ret; 
0x0002fddb: mov dword ptr [ecx + 4], eax; add esp, 8; pop ebx; ret; 
0x0008f364: mov dword ptr [ecx + 4], eax; mov dword ptr [eax], ecx; mov dword ptr [edx + 0x924], 0; ret; 
0x00079a27: mov dword ptr [ecx + 4], edx; add esp, 0x14; pop ebx; pop esi; ret; 
0x0012838a: mov dword ptr [ecx + 4], edx; mov dword ptr [edx], ecx; mov dword ptr [edx + 4], eax; ret; 
0x000b36d3: mov dword ptr [ecx + 4], edx; pop ebx; ret; 
0x0003efa5: mov dword ptr [ecx + 4], edx; ret 4; 
0x000907d6: mov dword ptr [ecx + 4], edx; ret; 
0x000b3724: mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x00176994: mov dword ptr [ecx + 8], eax; mov dword ptr [ecx + 0xc], edx; mov eax, 1; pop ebx; ret; 
0x00090737: mov dword ptr [ecx + 8], eax; xor eax, eax; pop ebx; ret; 
0x000b3715: mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x0003d0c4: mov dword ptr [ecx + eax], 0x16; mov eax, 0xffffffff; ret; 
0x00117a75: mov dword ptr [ecx + eax], 0x16; mov eax, 1; ret; 
0x0012390d: mov dword ptr [ecx + eax], 0xc; mov eax, 0xffffffff; pop ebx; ret; 
0x000e9005: mov dword ptr [ecx + eax], 2; xor eax, eax; add esp, 0xc; ret; 
0x0002586d: mov dword ptr [ecx + eax], 9; mov eax, 0xffffffff; add esp, 0xc; ret; 
0x00084775: mov dword ptr [ecx + eax], 9; mov eax, 0xffffffff; ret; 
0x0005be4c: mov dword ptr [ecx + edx*4], eax; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00190497: mov dword ptr [ecx + edx], eax; add esp, 4; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x00157a15: mov dword ptr [ecx + edx], eax; add esp, 4; pop ebx; pop esi; ret; 
0x0006134f: mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; pop ebx; pop esi; pop edi; ret; 
0x0009f837: mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0003c9bf: mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; pop ebx; ret; 
0x00024f6e: mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; ret; 
0x000799f7: mov dword ptr [ecx], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0009a39c: mov dword ptr [ecx], 0x74000000; aad 0x89; ret 0xe083; 
0x0017905d: mov dword ptr [ecx], 0xe; add ecx, 4; push ecx; push edi; call dword ptr [eax + 8]; 
0x000c2f61: mov dword ptr [ecx], 0xf8892788; pop ebx; pop esi; pop edi; ret; 
0x0008431c: mov dword ptr [ecx], eax; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0008519a: mov dword ptr [ecx], eax; add esp, 8; xor eax, eax; pop ebx; ret; 
0x001238f6: mov dword ptr [ecx], eax; cmp eax, ebx; jb 0x123900; xor eax, eax; pop ebx; ret; 
0x000904b4: mov dword ptr [ecx], eax; mov eax, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0003efa1: mov dword ptr [ecx], eax; mov eax, ecx; mov dword ptr [ecx + 4], edx; ret 4; 
0x00142111: mov dword ptr [ecx], eax; mov eax, ecx; ret 4; 
0x00086960: mov dword ptr [ecx], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x000980fc: mov dword ptr [ecx], eax; mov eax, edx; ret; 
0x0008c94e: mov dword ptr [ecx], eax; ret; 
0x000928cf: mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x0012e1d0: mov dword ptr [ecx], ebx; int 0x80; 
0x000d33e0: mov dword ptr [ecx], ecx; add dword ptr [eax], eax; add byte ptr [ebx - 0x1f3e4fab], cl; add ch, byte ptr [ecx]; ret 0x28b; 
0x000b93b9: mov dword ptr [ecx], edi; adc dword ptr [eax], eax; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b36a1: mov dword ptr [ecx], edx; mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x000b36c0: mov dword ptr [ecx], edx; mov byte ptr [ecx + 4], dl; pop ebx; ret; 
0x000b36e0: mov dword ptr [ecx], edx; mov dword ptr [ecx + 3], edx; pop ebx; ret; 
0x000b36d0: mov dword ptr [ecx], edx; mov word ptr [ecx + 4], dx; pop ebx; ret; 
0x00141802: mov dword ptr [ecx], edx; pop ebx; pop esi; pop edi; ret; 
0x000b3691: mov dword ptr [ecx], edx; pop ebx; ret; 
0x00041934: mov dword ptr [ecx], edx; shr ebx, 0x10; and ebx, 0x3ff; xor eax, ebx; pop ebx; ret; 
0x00080226: mov dword ptr [ecx], esi; add esp, 4; pop ebx; pop esi; ret; 
0x00090b81: mov dword ptr [edi + 0x10], 0; mov ecx, dword ptr [edi + 0xc]; xor cl, 0x81; mov dword ptr [edi], 0; call dword ptr gs:[0x10]; 
0x000bb1dd: mov dword ptr [edi + 0x10], ecx; lea eax, [edi + 0x12]; pop edi; pop esi; pop ebx; ret; 
0x000bb21b: mov dword ptr [edi + 0x10], ecx; lea eax, [edi + 0x14]; pop edi; pop esi; pop ebx; ret; 
0x000b9b5e: mov dword ptr [edi + 0x10], ecx; mov byte ptr [edi + 0x14], dl; pop edi; pop esi; pop ebx; ret; 
0x000b9afd: mov dword ptr [edi + 0x10], ecx; pop edi; pop esi; pop ebx; ret; 
0x000b9c25: mov dword ptr [edi + 0x17], ecx; pop edi; pop esi; pop ebx; ret; 
0x000bb2e7: mov dword ptr [edi + 0x18], ecx; lea eax, [edi + 0x1a]; pop edi; pop esi; pop ebx; ret; 
0x000bb335: mov dword ptr [edi + 0x18], ecx; lea eax, [edi + 0x1c]; pop edi; pop esi; pop ebx; ret; 
0x000b9c07: mov dword ptr [edi + 0x18], ecx; pop edi; pop esi; pop ebx; ret; 
0x0008f91f: mov dword ptr [edi + 0x214], 1; mov edx, 1; call dword ptr gs:[0x10]; 
0x0012e3b1: mov dword ptr [edi + 0x46cc], ecx; pop ebx; pop esi; pop edi; ret; 
0x00175450: mov dword ptr [edi + 0x54], edx; push 8; push ebx; call dword ptr [eax + 0x18]; 
0x000bb1fb: mov dword ptr [edi + 0xf], ecx; lea eax, [edi + 0x13]; pop edi; pop esi; pop ebx; ret; 
0x000b9b1b: mov dword ptr [edi + 0xf], ecx; pop edi; pop esi; pop ebx; ret; 
0x000bb097: mov dword ptr [edi + 3], edx; lea eax, [edi + 7]; pop edi; pop esi; pop ebx; ret; 
0x000b99c7: mov dword ptr [edi + 3], edx; pop edi; pop esi; pop ebx; ret; 
0x0013ed72: mov dword ptr [edi + 4], edx; mov dword ptr [edi + 8], ecx; pop ebx; pop esi; pop edi; ret 4; 
0x000b99b9: mov dword ptr [edi + 4], edx; pop edi; pop esi; pop ebx; ret; 
0x0009705c: mov dword ptr [edi + 4], edx; xor esi, esi; xor edx, edx; call dword ptr gs:[0x10]; 
0x000b9a2b: mov dword ptr [edi + 7], edx; pop edi; pop esi; pop ebx; ret; 
0x0010cbe6: mov dword ptr [edi + 8], eax; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0013ed75: mov dword ptr [edi + 8], ecx; pop ebx; pop esi; pop edi; ret 4; 
0x000bb0ed: mov dword ptr [edi + 8], edx; lea eax, [edi + 0xa]; pop edi; pop esi; pop ebx; ret; 
0x000bb12b: mov dword ptr [edi + 8], edx; lea eax, [edi + 0xc]; pop edi; pop esi; pop ebx; ret; 
0x000b9a0d: mov dword ptr [edi + 8], edx; pop edi; pop esi; pop ebx; ret; 
0x0009109e: mov dword ptr [edi + edx*4 + 8], 0; mov edx, 0x7fffffff; call dword ptr gs:[0x10]; 
0x000b9d20: mov dword ptr [edi - 1], edx; pop edi; pop esi; pop ebx; ret; 
0x00090b8e: mov dword ptr [edi], 0; call dword ptr gs:[0x10]; 
0x00053e28: mov dword ptr [edi], eax; pop eax; pop ebx; pop esi; pop edi; ret; 
0x00097ff8: mov dword ptr [edi], eax; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00053e31: mov dword ptr [edi], ebx; pop ebx; pop esi; pop edi; ret; 
0x000b9987: mov dword ptr [edi], ecx; mov byte ptr [edi + 2], dl; pop edi; pop esi; pop ebx; ret; 
0x000b99a5: mov dword ptr [edi], ecx; mov byte ptr [edi + 4], dl; pop edi; pop esi; pop ebx; ret; 
0x000b99c5: mov dword ptr [edi], ecx; mov dword ptr [edi + 3], edx; pop edi; pop esi; pop ebx; ret; 
0x000b99b6: mov dword ptr [edi], ecx; mov word ptr [edi + 4], dx; pop edi; pop esi; pop ebx; ret; 
0x000bb014: mov dword ptr [edi], edx; lea eax, [edi + 2]; pop edi; pop esi; pop ebx; ret; 
0x000bb042: mov dword ptr [edi], edx; lea eax, [edi + 4]; pop edi; pop esi; pop ebx; ret; 
0x000b9d40: mov dword ptr [edi], edx; mov byte ptr [edi + 4], dl; pop edi; pop esi; pop ebx; ret; 
0x000b9d50: mov dword ptr [edi], edx; mov word ptr [edi + 4], dx; pop edi; pop esi; pop ebx; ret; 
0x0003d404: mov dword ptr [edi], edx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000b9974: mov dword ptr [edi], edx; pop edi; pop esi; pop ebx; ret; 
0x000908c5: mov dword ptr [edx + 0x10], eax; mov eax, ecx; ret; 
0x00080223: mov dword ptr [edx + 0x10], ebx; mov dword ptr [ecx], esi; add esp, 4; pop ebx; pop esi; ret; 
0x00040735: mov dword ptr [edx + 0x10], ecx; mov dword ptr [edx + 0x14], ebx; pop ebx; pop esi; pop edi; ret; 
0x00040738: mov dword ptr [edx + 0x14], ebx; pop ebx; pop esi; pop edi; ret; 
0x0017ca7b: mov dword ptr [edx + 0x14], ecx; add eax, ebx; mov dword ptr [edx + 0xc], eax; mov eax, ebx; pop ebx; ret; 
0x0003c3fd: mov dword ptr [edx + 0x14], ecx; mov dword ptr [edx + 0xc], ebp; mov dword ptr [edx + 0x18], eax; ret; 
0x000803fd: mov dword ptr [edx + 0x14], esi; mov byte ptr [ecx], bl; add esp, 4; pop ebx; pop esi; ret; 
0x0003c403: mov dword ptr [edx + 0x18], eax; ret; 
0x0007d5ee: mov dword ptr [edx + 0x1a40], 0; ret; 
0x0007d607: mov dword ptr [edx + 0x1a44], eax; ret; 
0x0007d5e4: mov dword ptr [edx + 0x1a48], 0; mov dword ptr [edx + 0x1a40], 0; ret; 
0x0008756e: mov dword ptr [edx + 0x1a54], 0; ret; 
0x00087587: mov dword ptr [edx + 0x1a58], eax; ret; 
0x0008cdae: mov dword ptr [edx + 0x1a74], 0; ret; 
0x0008cdc7: mov dword ptr [edx + 0x1a78], eax; ret; 
0x0008e972: mov dword ptr [edx + 0x1ac8], eax; ret; 
0x00099486: mov dword ptr [edx + 0x1c], eax; xor eax, eax; pop ebx; ret; 
0x0003d523: mov dword ptr [edx + 0x1f0], eax; mov eax, ecx; ret; 
0x0003d50e: mov dword ptr [edx + 0x1f4], ecx; ret; 
0x000fd329: mov dword ptr [edx + 0x20], ebx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00115628: mov dword ptr [edx + 0x20], esi; mov dword ptr [edx + 0x24], edi; mov dword ptr [edx + 0x28], eax; pop esi; pop edi; ret; 
0x0008e7e6: mov dword ptr [edx + 0x24], eax; mov dword ptr gs:[0x7c], edx; pop ebx; ret; 
0x0011562b: mov dword ptr [edx + 0x24], edi; mov dword ptr [edx + 0x28], eax; pop esi; pop edi; ret; 
0x0011562e: mov dword ptr [edx + 0x28], eax; pop esi; pop edi; ret; 
0x00122415: mov dword ptr [edx + 0x34], eax; pop ebx; pop esi; pop edi; ret; 
0x000a08f6: mov dword ptr [edx + 0x388], eax; ret; 
0x000a0921: mov dword ptr [edx + 0x390], eax; ret; 
0x00099fc7: mov dword ptr [edx + 0x3af4], eax; xor eax, eax; ret; 
0x0009cf2c: mov dword ptr [edx + 0x3ba8], ecx; ret; 
0x0009d62f: mov dword ptr [edx + 0x3bac], eax; mov dword ptr [eax + 0xc], ecx; ret; 
0x00122412: mov dword ptr [edx + 0x3c], edi; mov dword ptr [edx + 0x34], eax; pop ebx; pop esi; pop edi; ret; 
0x00117a5d: mov dword ptr [edx + 0x3e], eax; xor eax, eax; ret; 
0x001194fd: mov dword ptr [edx + 0x42], eax; xor eax, eax; ret; 
0x00088c62: mov dword ptr [edx + 0x88], ecx; pop ebx; pop esi; pop edi; ret; 
0x0008f369: mov dword ptr [edx + 0x924], 0; ret; 
0x00059f09: mov dword ptr [edx + 0xc], eax; add esp, 0x14; mov eax, edx; pop ebx; pop esi; ret 4; 
0x001772ff: mov dword ptr [edx + 0xc], eax; mov eax, 1; pop ebx; ret; 
0x0017ca80: mov dword ptr [edx + 0xc], eax; mov eax, ebx; pop ebx; ret; 
0x0003c400: mov dword ptr [edx + 0xc], ebp; mov dword ptr [edx + 0x18], eax; ret; 
0x000b5ae7: mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; pop edi; ret; 
0x000b5c17: mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; ret; 
0x000bfeaa: mov dword ptr [edx + 3], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000b1707: mov dword ptr [edx + 3], eax; mov eax, edi; pop edi; ret; 
0x000b1837: mov dword ptr [edx + 3], eax; mov eax, edx; ret; 
0x0011563e: mov dword ptr [edx + 4], 0; pop esi; pop edi; ret; 
0x001155da: mov dword ptr [edx + 4], 0xffffffff; pop esi; pop edi; ret; 
0x000b5ac9: mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; pop edi; ret; 
0x000b5c09: mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; ret; 
0x000ba268: mov dword ptr [edx + 4], eax; lea eax, [edx + 7]; pop edi; ret; 
0x000ba4b7: mov dword ptr [edx + 4], eax; lea eax, [edx + 7]; ret; 
0x000ba367: mov dword ptr [edx + 4], eax; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x000ba4c7: mov dword ptr [edx + 4], eax; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000b8d27: mov dword ptr [edx + 4], eax; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000b8e87: mov dword ptr [edx + 4], eax; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000ba4e7: mov dword ptr [edx + 4], eax; mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000b8ea7: mov dword ptr [edx + 4], eax; mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000ba3c7: mov dword ptr [edx + 4], eax; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x000ba527: mov dword ptr [edx + 4], eax; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000b8d87: mov dword ptr [edx + 4], eax; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x000b8ee7: mov dword ptr [edx + 4], eax; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000bfe8c: mov dword ptr [edx + 4], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000b16f9: mov dword ptr [edx + 4], eax; mov eax, edi; pop edi; ret; 
0x000abdea: mov dword ptr [edx + 4], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x000b1829: mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x0005ace7: mov dword ptr [edx + 4], eax; ret; 
0x001283b1: mov dword ptr [edx + 4], eax; test eax, eax; je 0x1283ba; mov dword ptr [eax], edx; ret; 
0x00099b21: mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x000abef5: mov dword ptr [edx + 4], ebx; mov dword ptr [edx], eax; lea eax, [edx + 5]; pop ebx; pop esi; ret; 
0x000abe35: mov dword ptr [edx + 4], ebx; mov dword ptr [edx], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x0010c9c9: mov dword ptr [edx + 4], ecx; mov dword ptr [ebx + 4], eax; xor eax, eax; add esp, 8; pop ebx; ret; 
0x0019bd19: mov dword ptr [edx + 4], ecx; mov ecx, dword ptr [eax]; mov dword ptr [edx], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0005b4ff: mov dword ptr [edx + 4], ecx; pop ebx; pop esi; pop edi; ret; 
0x000b5b3b: mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x000b5c7b: mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000bff1e: mov dword ptr [edx + 7], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000b175b: mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000b189b: mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x0005accd: mov dword ptr [edx + 8], 0; mov dword ptr [edx], 0; ret; 
0x000b88a4: mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b5a2b: mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x000b5c9b: mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000b784b: mov dword ptr [edx + 8], eax; lea eax, [edx + 0xc]; pop edi; pop ebx; ret; 
0x000b5b1d: mov dword ptr [edx + 8], eax; lea eax, [edx + 9]; pop edi; ret; 
0x000b5c5d: mov dword ptr [edx + 8], eax; lea eax, [edx + 9]; ret; 
0x0008f15e: mov dword ptr [edx + 8], eax; mov dword ptr gs:[0x78], edx; pop ebx; ret; 
0x000bff00: mov dword ptr [edx + 8], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000b345b: mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; pop ebx; ret; 
0x000b166b: mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x000b43d4: mov dword ptr [edx + 8], eax; mov eax, edx; pop ebx; ret; 
0x000b187d: mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x0005ac06: mov dword ptr [edx + 8], ebx; add esp, 4; pop ebx; pop esi; ret; 
0x000958fc: mov dword ptr [edx + 8], ecx; cmp eax, 0x21; jne 0x95908; add dword ptr [edx + 4], 1; add esp, 0xc; ret; 
0x000fbfd2: mov dword ptr [edx + eax*4], edi; mov eax, 1; pop ebx; pop esi; pop edi; ret; 
0x0009b63d: mov dword ptr [edx + eax], 0x16; add esp, 4; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x00126cd5: mov dword ptr [edx + eax], 0x16; add esp, 4; pop ebx; pop esi; ret; 
0x0013d18d: mov dword ptr [edx + eax], 0x16; add esp, 8; mov eax, 0xffffffff; pop ebx; ret; 
0x0003d17d: mov dword ptr [edx + eax], 0x16; mov eax, 0xffffffff; pop ebx; ret; 
0x0003c6dd: mov dword ptr [edx + eax], 0x16; mov eax, 0xffffffff; ret; 
0x0007c2dc: mov dword ptr [edx + eax], 0x16; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000a5b3d: mov dword ptr [edx + eax], 0x16; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00189d0d: mov dword ptr [edx + eax], 0x16; xor eax, eax; ret; 
0x0003b970: mov dword ptr [edx + eax], 0x22; add esp, 0x18; pop ebx; ret; 
0x0003c03e: mov dword ptr [edx + eax], 0x22; add esp, 8; pop ebx; ret; 
0x0003d26b: mov dword ptr [edx + eax], 0x26; mov eax, 0xffffffff; ret; 
0x0009b9ad: mov dword ptr [edx + eax], 0xb; mov eax, 0xffffffff; pop ebx; ret; 
0x000e8fad: mov dword ptr [edx + eax], 2; xor eax, eax; add esp, 0xc; ret; 
0x00125215: mov dword ptr [edx + eax], 2; xor eax, eax; pop ebx; ret; 
0x00140970: mov dword ptr [edx + ebp], ecx; mov ebx, dword ptr [esp + 0x6c]; mov eax, 6; call dword ptr gs:[0x10]; 
0x0019412a: mov dword ptr [edx + ecx - 4], ebx; mov eax, edx; pop ebx; ret; 
0x001932af: mov dword ptr [edx - 0xa], eax; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001932b6: mov dword ptr [edx - 2], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019649d: mov dword ptr [edx - 2], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019848d: mov dword ptr [edx - 2], ecx; mov eax, edx; pop ebx; ret; 
0x001932d6: mov dword ptr [edx - 3], eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00196531: mov dword ptr [edx - 3], ecx; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00198521: mov dword ptr [edx - 3], ecx; mov byte ptr [edx - 1], al; mov eax, edx; pop ebx; ret; 
0x00193272: mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001983b9: mov dword ptr [edx - 4], eax; mov eax, edx; pop ebx; ret; 
0x00196365: mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00198365: mov dword ptr [edx - 4], ecx; mov eax, edx; pop ebx; ret; 
0x0017cab6: mov dword ptr [edx - 4], ecx; mov ecx, 1; mov dword ptr [eax + 0xc], edx; mov eax, ecx; ret; 
0x00193292: mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001963b6: mov dword ptr [edx - 5], ecx; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001983b6: mov dword ptr [edx - 5], ecx; mov dword ptr [edx - 4], eax; mov eax, edx; pop ebx; ret; 
0x001932b2: mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00124ad5: mov dword ptr [edx - 7], ecx; call dword ptr [edx - 0x77]; 
0x00169ee3: mov dword ptr [edx - 7], esp; call dword ptr [eax + 0x6a]; 
0x00169f37: mov dword ptr [edx - 7], esp; jmp dword ptr [ebp - 0x75]; 
0x0019326f: mov dword ptr [edx - 8], eax; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019328f: mov dword ptr [edx - 9], eax; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0008443f: mov dword ptr [edx], 0; pop ebx; pop esi; pop edi; ret; 
0x0005acd4: mov dword ptr [edx], 0; ret; 
0x000b7985: mov dword ptr [edx], 0x38800000; add dword ptr [ebx + 0x5b5fffd8], eax; ret; 
0x001155d4: mov dword ptr [edx], 0xffffffff; mov dword ptr [edx + 4], 0xffffffff; pop esi; pop edi; ret; 
0x00090502: mov dword ptr [edx], eax; add esp, 0x18; xor eax, eax; pop ebx; ret; 
0x0008ddc2: mov dword ptr [edx], eax; add esp, 4; pop ebx; pop esi; ret; 
0x0003c19c: mov dword ptr [edx], eax; add esp, 4; ret; 
0x000b5a84: mov dword ptr [edx], eax; lea eax, [edx + 1]; pop edi; ret; 
0x000b5bc4: mov dword ptr [edx], eax; lea eax, [edx + 1]; ret; 
0x000b8982: mov dword ptr [edx], eax; lea eax, [edx + 3]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000abed4: mov dword ptr [edx], eax; lea eax, [edx + 3]; pop ebx; pop esi; ret; 
0x000b59b2: mov dword ptr [edx], eax; lea eax, [edx + 3]; pop edi; ret; 
0x000b5be2: mov dword ptr [edx], eax; lea eax, [edx + 3]; ret; 
0x000abee8: mov dword ptr [edx], eax; lea eax, [edx + 4]; pop ebx; pop esi; ret; 
0x000b77df: mov dword ptr [edx], eax; lea eax, [edx + 4]; pop edi; pop ebx; ret; 
0x000abef8: mov dword ptr [edx], eax; lea eax, [edx + 5]; pop ebx; pop esi; ret; 
0x000abf0c: mov dword ptr [edx], eax; lea eax, [edx + 6]; pop ebx; pop esi; ret; 
0x000b5a94: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; pop edi; ret; 
0x000b5bd4: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; ret; 
0x000b16d4: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edi; pop edi; ret; 
0x000b17f4: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x000b5bf2: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; lea eax, [edx + 4]; ret; 
0x000b1812: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; mov eax, edx; ret; 
0x000b5c02: mov dword ptr [edx], eax; mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, [edx + 5]; ret; 
0x000b1822: mov dword ptr [edx], eax; mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x0008f3b3: mov dword ptr [edx], eax; mov dword ptr [ecx + 0x924], 0; pop ebx; ret; 
0x000605b3: mov dword ptr [edx], eax; mov eax, 1; ret; 
0x000b5ae2: mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; pop edi; ret; 
0x000b5c12: mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; ret; 
0x000b1702: mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edi; pop edi; ret; 
0x000b1832: mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edx; ret; 
0x000b8e72: mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 4]; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x000bfe27: mov dword ptr [edx], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000b33ef: mov dword ptr [edx], eax; mov eax, edi; pop edi; pop ebx; ret; 
0x000b15f2: mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x000abe14: mov dword ptr [edx], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x000b44a2: mov dword ptr [edx], eax; mov eax, edx; pop ebx; ret; 
0x000b17e4: mov dword ptr [edx], eax; mov eax, edx; ret; 
0x00040bb4: mov dword ptr [edx], eax; xor eax, eax; add esp, 8; pop ebx; ret; 
0x000903a2: mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00158cfa: mov dword ptr [edx], ebx; add esp, 0x28; pop ebx; ret; 
0x00194124: mov dword ptr [edx], ebx; mov ebx, dword ptr [eax + ecx - 4]; mov dword ptr [edx + ecx - 4], ebx; mov eax, edx; pop ebx; ret; 
0x000e7644: mov dword ptr [edx], ebx; pop ebx; ret; 
0x000d3adf: mov dword ptr [edx], ecx; add dword ptr [eax], eax; add byte ptr [ebx - 0x1f3e4fab], cl; add ch, byte ptr [ecx]; ret 0x28b; 
0x000f08aa: mov dword ptr [edx], ecx; add esp, 0x24; pop ebx; pop esi; ret; 
0x00080d8c: mov dword ptr [edx], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x0012838d: mov dword ptr [edx], ecx; mov dword ptr [edx + 4], eax; ret; 
0x001989a4: mov dword ptr [edx], ecx; mov eax, dword ptr [esp + 8]; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x00196a04: mov dword ptr [edx], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00080054: mov dword ptr [edx], ecx; pop ebx; ret; 
0x000408a8: mov dword ptr [edx], ecx; ret; 
0x0007f1e5: mov dword ptr [edx], edi; pop ebx; pop esi; pop edi; ret; 
0x000e9ff6: mov dword ptr [edx], esi; add esp, 4; pop ebx; pop esi; ret; 
0x000abeb1: mov dword ptr [edx], esi; lea eax, [edx + 1]; pop ebx; pop esi; ret; 
0x000abe01: mov dword ptr [edx], esi; mov eax, edx; mov byte ptr [edx + 2], 0; pop ebx; pop esi; ret; 
0x000abdf9: mov dword ptr [edx], esi; mov eax, edx; pop ebx; pop esi; ret; 
0x0005b6fe: mov dword ptr [esi + 0x10], eax; mov dword ptr [esi + 0x18], edx; pop ebx; pop esi; pop edi; ret; 
0x0017ceea: mov dword ptr [esi + 0x10], eax; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0009cf54: mov dword ptr [esi + 0x10], ecx; pop ebx; pop esi; ret; 
0x0009cfd3: mov dword ptr [esi + 0x10], edx; pop ebx; pop esi; ret; 
0x0010b01b: mov dword ptr [esi + 0x14], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0011619a: mov dword ptr [esi + 0x14], eax; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0016bef3: mov dword ptr [esi + 0x18], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0005b701: mov dword ptr [esi + 0x18], edx; pop ebx; pop esi; pop edi; ret; 
0x0013654c: mov dword ptr [esi + 0x20], eax; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x00103023: mov dword ptr [esi + 0x20], ecx; pop ebx; pop esi; pop edi; ret; 
0x0008af17: mov dword ptr [esi + 0x28], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0008ca9f: mov dword ptr [esi + 0x28], 0; add esp, 4; pop ebx; pop esi; ret; 
0x00080af8: mov dword ptr [esi + 0x3c], eax; add esp, 4; pop ebx; pop esi; ret; 
0x00085154: mov dword ptr [esi + 0xa4], eax; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000842c4: mov dword ptr [esi + 0xa4], edx; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0015bf90: mov dword ptr [esi + 0xc], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016e6b8: mov dword ptr [esi + 0xc], eax; push esi; push dword ptr [esp + 0x14]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x000407c7: mov dword ptr [esi + 0xc], edx; add esp, 0x34; pop ebx; pop esi; ret 4; 
0x000790b3: mov dword ptr [esi + 4], eax; mov dword ptr [esi + 8], eax; pop ebx; pop esi; pop edi; ret; 
0x0008c9f5: mov dword ptr [esi + 4], eax; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0012386e: mov dword ptr [esi + 4], ebx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0017ad33: mov dword ptr [esi + 8], 1; push 0; push edi; call dword ptr [eax + 0x14]; 
0x00088bef: mov dword ptr [esi + 8], eax; mov eax, esi; add esp, 4; pop ebx; pop esi; ret; 
0x000790b6: mov dword ptr [esi + 8], eax; pop ebx; pop esi; pop edi; ret; 
0x0017cc59: mov dword ptr [esi + esi*8 + 0x5089ffff], ebp; adc al, 0x89; dec eax; add al, 0x5b; ret; 
0x0008b3b4: mov dword ptr [esi], eax; add esp, 4; pop ebx; pop esi; ret; 
0x00081651: mov dword ptr [esi], eax; mov dword ptr [ebx + 0x30], esi; add esp, 4; pop ebx; pop esi; ret; 
0x0018b997: mov dword ptr [esi], edx; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x00054fc7: mov dword ptr [esi], edx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00125dff: mov dword ptr [esp + 0x100c], ebx; xor ebx, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000db584: mov dword ptr [esp + 0x104], edi; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x30]; mov eax, dword ptr [esp + 0x64]; call eax; 
0x000644f1: mov dword ptr [esp + 0x10], 0; jmp edx; 
0x000644a1: mov dword ptr [esp + 0x10], 1; jmp edx; 
0x00131a24: mov dword ptr [esp + 0x10], eax; mov eax, dword ptr [esp + 0x40]; mov dword ptr [esp + 0x14], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00131962: mov dword ptr [esp + 0x10], ebx; mov ebx, 0xa; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00132072: mov dword ptr [esp + 0x10], ebx; mov ebx, 9; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0008d845: mov dword ptr [esp + 0x10], ecx; mov eax, dword ptr [eax + 4]; add esp, 0xc; jmp eax; 
0x0016ed60: mov dword ptr [esp + 0x10], edx; add esp, 4; pop ebx; pop esi; jmp eax; 
0x0008d75d: mov dword ptr [esp + 0x10], edx; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x00170b9b: mov dword ptr [esp + 0x10], edx; pop ebx; pop esi; jmp eax; 
0x00082bcf: mov dword ptr [esp + 0x10], esi; mov eax, dword ptr [eax + 0x10]; add esp, 4; pop ebx; pop esi; jmp eax; 
0x0017c09f: mov dword ptr [esp + 0x10], esi; pop ebx; mov eax, dword ptr [eax + 0xc]; pop esi; pop edi; jmp eax; 
0x0017c0d8: mov dword ptr [esp + 0x10], esi; pop ebx; mov eax, dword ptr [eax + 8]; pop esi; pop edi; jmp eax; 
0x00081319: mov dword ptr [esp + 0x10], esi; pop ebx; mov eax, dword ptr [edi + 0x10]; pop esi; pop edi; jmp eax; 
0x000811c9: mov dword ptr [esp + 0x10], esi; pop ebx; mov eax, dword ptr [edi + 0x14]; pop esi; pop edi; jmp eax; 
0x000e8c66: mov dword ptr [esp + 0x13c], ecx; mov ecx, dword ptr [esp + 0x164]; call dword ptr gs:[0x10]; 
0x00070afc: mov dword ptr [esp + 0x14], 0; jmp edx; 
0x00070e7c: mov dword ptr [esp + 0x14], 1; jmp edx; 
0x00033d6b: mov dword ptr [esp + 0x14], eax; call edx; 
0x00131a2c: mov dword ptr [esp + 0x14], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0013276a: mov dword ptr [esp + 0x14], eax; mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001322b3: mov dword ptr [esp + 0x14], eax; mov eax, dword ptr [esp + 0x44]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00131302: mov dword ptr [esp + 0x14], ebx; mov ebx, 0x12; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0008d759: mov dword ptr [esp + 0x14], ecx; mov dword ptr [esp + 0x10], edx; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x000e7a6e: mov dword ptr [esp + 0x14], edi; call dword ptr gs:[0x10]; 
0x001717ee: mov dword ptr [esp + 0x14], edx; push dword ptr [esi]; call dword ptr [esi + 0x20]; 
0x00053306: mov dword ptr [esp + 0x14], esi; mov esi, dword ptr [esp + 0x28]; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x00095d35: mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x0013244c: mov dword ptr [esp + 0x18], eax; lea eax, [esp + 0x10]; mov dword ptr [esp + 0x24], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000e7a65: mov dword ptr [esp + 0x18], eax; mov eax, 0x108; mov dword ptr [esp + 0x14], edi; call dword ptr gs:[0x10]; 
0x0013130b: mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001329dc: mov dword ptr [esp + 0x18], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000e76e0: mov dword ptr [esp + 0x18], ecx; push ebx; call eax; 
0x00123088: mov dword ptr [esp + 0x18], edx; xor esi, esi; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00115b6c: mov dword ptr [esp + 0x18c], ebp; mov ebp, dword ptr [esp + 0x1b8]; call dword ptr gs:[0x10]; 
0x00071864: mov dword ptr [esp + 0x1c], 1; jmp eax; 
0x00064ef6: mov dword ptr [esp + 0x1c], 1; jmp edx; 
0x00131c1d: mov dword ptr [esp + 0x1c], eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00131bdf: mov dword ptr [esp + 0x1c], eax; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x000de910: mov dword ptr [esp + 0x1c], edx; mov edx, dword ptr [esp + 0x34]; mov ebx, dword ptr [esp + 0x30]; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012fdc1: mov dword ptr [esp + 0x1c], edx; mov edx, dword ptr [esp + 0x34]; mov ebx, dword ptr [esp + 0x30]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000704f9: mov dword ptr [esp + 0x20], 1; jmp edx; 
0x0003d8a5: mov dword ptr [esp + 0x20], eax; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x0018713b: mov dword ptr [esp + 0x20], ecx; push dword ptr [esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x0017b9ac: mov dword ptr [esp + 0x20], edx; mov eax, dword ptr [eax + 4]; add esp, 0x18; pop ebx; jmp eax; 
0x000642f8: mov dword ptr [esp + 0x24], 0; jmp eax; 
0x00071874: mov dword ptr [esp + 0x24], 1; jmp eax; 
0x000657f0: mov dword ptr [esp + 0x24], 1; mov edi, ecx; jmp edx; 
0x00179ac1: mov dword ptr [esp + 0x24], 5; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x00132454: mov dword ptr [esp + 0x24], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00122a31: mov dword ptr [esp + 0x24], eax; mov eax, dword ptr [esp + 0x74]; lea ecx, [eax + 0x5402]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000db729: mov dword ptr [esp + 0x24], ebx; push ebp; push dword ptr [esp + 0x30]; mov eax, dword ptr [esp + 0x64]; call eax; 
0x00041746: mov dword ptr [esp + 0x24], edx; call eax; 
0x0013236a: mov dword ptr [esp + 0x24], esi; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00071894: mov dword ptr [esp + 0x28], 1; jmp eax; 
0x00065878: mov dword ptr [esp + 0x28], 1; mov edi, ecx; jmp edx; 
0x0013236e: mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00115227: mov dword ptr [esp + 0x28], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0009db29: mov dword ptr [esp + 0x28], ecx; mov edx, ecx; mov ecx, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00179922: mov dword ptr [esp + 0x28], edx; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x0006461b: mov dword ptr [esp + 0x2c], 1; mov edi, ecx; jmp edx; 
0x0009db5f: mov dword ptr [esp + 0x2c], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x001315fa: mov dword ptr [esp + 0x2c], eax; mov eax, dword ptr [esp + 0x68]; mov dword ptr [esp + 0x30], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0009a528: mov dword ptr [esp + 0x2c], eax; mov eax, dword ptr [esp + 0xc8]; mov dword ptr [esp + 0x30], eax; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x000a000f: mov dword ptr [esp + 0x2c], edx; mov dword ptr [esp + 0x34], 4; call dword ptr gs:[0x10]; 
0x000701f3: mov dword ptr [esp + 0x30], 0; jmp ebx; 
0x000718a4: mov dword ptr [esp + 0x30], 1; jmp eax; 
0x0009a533: mov dword ptr [esp + 0x30], eax; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x00131602: mov dword ptr [esp + 0x30], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000db3f6: mov dword ptr [esp + 0x30], eax; push eax; mov eax, dword ptr [esp + 0x64]; call eax; 
0x00071914: mov dword ptr [esp + 0x34], 1; jmp eax; 
0x000a0013: mov dword ptr [esp + 0x34], 4; call dword ptr gs:[0x10]; 
0x001316ae: mov dword ptr [esp + 0x34], eax; lea eax, [esp + 0x24]; mov dword ptr [esp + 0x38], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000c6bb8: mov dword ptr [esp + 0x34], ecx; push eax; push ebp; call esi; 
0x001798b2: mov dword ptr [esp + 0x34], edx; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x000c43ce: mov dword ptr [esp + 0x34], edx; push eax; push ebp; call esi; 
0x00131741: mov dword ptr [esp + 0x34], esi; mov dword ptr [esp + 0x38], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000658d0: mov dword ptr [esp + 0x38], 1; mov edi, ecx; jmp edx; 
0x001316b6: mov dword ptr [esp + 0x38], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000706bc: mov dword ptr [esp + 0x3c], 0; jmp edx; 
0x000718b4: mov dword ptr [esp + 0x3c], 1; jmp eax; 
0x00065800: mov dword ptr [esp + 0x3c], 1; mov edi, ecx; jmp edx; 
0x0012fed2: mov dword ptr [esp + 0x3c], esi; mov esi, dword ptr [esp + 0x64]; mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00065868: mov dword ptr [esp + 0x40], 1; mov edi, ecx; jmp edx; 
0x00065165: mov dword ptr [esp + 0x44], 0; jmp edx; 
0x00065830: mov dword ptr [esp + 0x44], 1; mov edi, ecx; jmp edx; 
0x0009f5d5: mov dword ptr [esp + 0x44], 2; call dword ptr gs:[0x10]; 
0x00070b62: mov dword ptr [esp + 0x48], 1; jmp eax; 
0x001231d0: mov dword ptr [esp + 0x4c], edx; mov edx, dword ptr [esp + 0x64]; mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x001229b7: mov dword ptr [esp + 0x4c], esi; mov esi, dword ptr [esp + 0x78]; mov ebx, dword ptr [esp + 0x70]; lea edx, [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00115f16: mov dword ptr [esp + 0x5c], esi; mov esi, dword ptr [esp + 0x74]; mov ebx, dword ptr [esp + 0x70]; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x0012dd8b: mov dword ptr [esp + 0x68], eax; mov eax, dword ptr [edx + 0xa0]; mov dword ptr [esp + 0x6c], eax; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x0012dd95: mov dword ptr [esp + 0x6c], eax; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x0010d2a6: mov dword ptr [esp + 0xac], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0010d018: mov dword ptr [esp + 0xac], eax; mov eax, 0xaf; mov dword ptr [esp + 0xb8], 0; call dword ptr gs:[0x10]; 
0x0010d024: mov dword ptr [esp + 0xb8], 0; call dword ptr gs:[0x10]; 
0x000a6c0e: mov dword ptr [esp + 0xc], eax; call dword ptr [edx]; 
0x000e7d93: mov dword ptr [esp + 0xc], eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x00129755: mov dword ptr [esp + 0xc], eax; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x0012a085: mov dword ptr [esp + 0xc], eax; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000e7d5d: mov dword ptr [esp + 0xc], eax; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x001313c2: mov dword ptr [esp + 0xc], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0011f3fa: mov dword ptr [esp + 0xc], eax; mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0003d6a0: mov dword ptr [esp + 0xc], eax; mov edx, edi; mov eax, 0x1a5; call dword ptr gs:[0x10]; 
0x0003d660: mov dword ptr [esp + 0xc], eax; mov edx, edi; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x0009fc57: mov dword ptr [esp + 0xc], eax; mov esi, dword ptr [esp + 0x4c]; mov eax, 0x117; call dword ptr gs:[0x10]; 
0x0009fc9f: mov dword ptr [esp + 0xc], eax; mov esi, dword ptr [esp + 0x4c]; mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x0009f98f: mov dword ptr [esp + 0xc], eax; mov esi, dword ptr [esp + 4]; mov eax, 0x118; call dword ptr gs:[0x10]; 
0x0009f9cf: mov dword ptr [esp + 0xc], eax; mov esi, dword ptr [esp + 4]; mov eax, 0x1a3; call dword ptr gs:[0x10]; 
0x00024e76: mov dword ptr [esp + 0xc], eax; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call ecx; 
0x0007c099: mov dword ptr [esp + 0xc], ecx; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 8], edx; pop ebx; jmp eax; 
0x0008d7bc: mov dword ptr [esp + 0xc], ecx; pop ebx; mov eax, dword ptr [eax + 0x18]; pop esi; jmp eax; 
0x0017c50f: mov dword ptr [esp + 0xc], edx; lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x0017bb5f: mov dword ptr [esp + 0xc], edx; lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 4]; 
0x0003ba12: mov dword ptr [esp + 0xc], edx; mov eax, dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0010bef1: mov dword ptr [esp + 0xc], edx; mov edx, dword ptr [esp + 0x24]; mov ebx, dword ptr [esp + 0x20]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00055165: mov dword ptr [esp + 4], eax; fld qword ptr [esp]; add esp, 0xc; ret; 
0x000551df: mov dword ptr [esp + 4], eax; fld xword ptr [esp]; add esp, 0x1c; ret; 
0x00173c16: mov dword ptr [esp + 4], eax; jmp edx; 
0x00131260: mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00115315: mov dword ptr [esp + 4], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0013184a: mov dword ptr [esp + 4], eax; mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00131449: mov dword ptr [esp + 4], eax; mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001321f7: mov dword ptr [esp + 4], ebx; mov ebx, 0x10; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00131fc7: mov dword ptr [esp + 4], ebx; mov ebx, 0x11; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00070ab5: mov dword ptr [esp + 4], ecx; jmp eax; 
0x0007199a: mov dword ptr [esp + 4], ecx; jmp edx; 
0x000e7bab: mov dword ptr [esp + 4], ecx; lea ecx, [esp + 4]; mov dword ptr [esp + 8], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x00071860: mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x1c], 1; jmp eax; 
0x00071870: mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x24], 1; jmp eax; 
0x00071890: mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x28], 1; jmp eax; 
0x000718a0: mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x30], 1; jmp eax; 
0x00071910: mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x34], 1; jmp eax; 
0x000718b0: mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x3c], 1; jmp eax; 
0x00070b5e: mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x48], 1; jmp eax; 
0x00070cdb: mov dword ptr [esp + 4], ecx; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x0017c707: mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x20]; 
0x0017c6e3: mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x24]; 
0x00186923: mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x30]; 
0x001713f3: mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x0008e79d: mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0007c1a2: mov dword ptr [esp + 4], edx; jmp eax; 
0x0003c0eb: mov dword ptr [esp + 4], edx; mov eax, dword ptr [esp + 8]; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0016eeec: mov dword ptr [esp + 4], edx; sub esp, 0xc; push eax; call dword ptr [ecx + 0xc]; 
0x000e7bb3: mov dword ptr [esp + 8], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x0010e8f7: mov dword ptr [esp + 8], eax; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x0011f7e0: mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00120608: mov dword ptr [esp + 8], eax; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x0012064e: mov dword ptr [esp + 8], eax; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x00131451: mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0013291a: mov dword ptr [esp + 8], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x001154ad: mov dword ptr [esp + 8], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x001313ba: mov dword ptr [esp + 8], eax; mov eax, dword ptr [esp + 0x38]; mov dword ptr [esp + 0xc], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00129a3d: mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x0012a36d: mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000fb70d: mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000fb8cd: mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x00131257: mov dword ptr [esp + 8], ebx; mov ebx, 5; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00186d30: mov dword ptr [esp + 8], ecx; call eax; 
0x00173c12: mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x0017c703: mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x20]; 
0x0017c6df: mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x24]; 
0x001713ef: mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x00171413: mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x00093578: mov dword ptr [esp + 8], edx; call dword ptr gs:[0x10]; 
0x0003bdc3: mov dword ptr [esp + 8], edx; mov eax, dword ptr [esp + 0xc]; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00094e95: mov dword ptr [esp + 8], edx; mov ebx, ebp; mov esi, 8; call dword ptr gs:[0x10]; 
0x0007c0a3: mov dword ptr [esp + 8], edx; pop ebx; jmp eax; 
0x00188ad1: mov dword ptr [esp], eax; call 0x231a0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0017814d: mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x000a075d: mov dword ptr [esp], eax; call esi; 
0x0005519c: mov dword ptr [esp], eax; fld dword ptr [esp]; add esp, 4; ret; 
0x00131f04: mov dword ptr [esp], eax; mov eax, dword ptr [esp + 0x38]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0009de07: mov dword ptr [esp], ebp; call 0x231a0; mov dword ptr [esp], esi; call edi; 
0x001635cc: mov dword ptr [esp], ebp; call ebx; 
0x00163236: mov dword ptr [esp], ebp; call edi; 
0x00025f80: mov dword ptr [esp], ebp; call esi; 
0x00027080: mov dword ptr [esp], ebx; call edi; 
0x0002611d: mov dword ptr [esp], ebx; call esi; 
0x00152fca: mov dword ptr [esp], ebx; mov ebx, edi; call 0x231a0; mov dword ptr [esp], ebp; call esi; 
0x00026290: mov dword ptr [esp], ebx; mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x0002693a: mov dword ptr [esp], ebx; mov edx, dword ptr [ebp - 0x44]; call edx; 
0x00061970: mov dword ptr [esp], ebx; sub esp, 8; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x34]; call eax; 
0x000551dc: mov dword ptr [esp], edx; mov dword ptr [esp + 4], eax; fld xword ptr [esp]; add esp, 0x1c; ret; 
0x0016ef70: mov dword ptr [esp], edx; sub esp, 8; lea ebp, [esp + 0x40]; push ebp; push eax; call dword ptr [ecx + 8]; 
0x0016ef8c: mov dword ptr [esp], edx; sub esp, 8; mov ecx, dword ptr [eax + 0x20]; push ebp; push eax; call dword ptr [ecx + 8]; 
0x000fd596: mov dword ptr [esp], esi; call 0x231a0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016ebb3: mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0002f4fa: mov dword ptr [esp], esi; call ebx; 
0x0009de0f: mov dword ptr [esp], esi; call edi; 
0x001628d8: mov dword ptr [esp], esi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x0013c026: mov dword ptr [esp], esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x001315f9: mov dword ptr fs:[esp + 0x2c], eax; mov eax, dword ptr [esp + 0x68]; mov dword ptr [esp + 0x30], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000c6bb7: mov dword ptr fs:[esp + 0x34], ecx; push eax; push ebp; call esi; 
0x000c43cd: mov dword ptr fs:[esp + 0x34], edx; push eax; push ebp; call esi; 
0x0008e76f: mov dword ptr gs:[0x78], eax; ret; 
0x0008f161: mov dword ptr gs:[0x78], edx; pop ebx; ret; 
0x0008e738: mov dword ptr gs:[0x7c], eax; ret; 
0x0008e817: mov dword ptr gs:[0x7c], edx; mov eax, dword ptr [eax + 0x24]; test eax, eax; jne 0x8e830; ret; 
0x0008e7e9: mov dword ptr gs:[0x7c], edx; pop ebx; ret; 
0x000c0a63: mov dx, word ptr [esi]; mov word ptr [eax], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd630: mov dx, word ptr [esi]; mov word ptr [eax], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b9970: mov dx, word ptr [esi]; mov word ptr [edi], dx; pop edi; pop esi; pop ebx; ret; 
0x00099b7a: mov eax, 0; cmova eax, edx; ret; 
0x001a67f2: mov eax, 0; jne 0x1a6f70; pop ebx; ret; 
0x001a662b: mov eax, 0; jne 0x1a6f86; pop ebx; ret; 
0x001a7f6a: mov eax, 0; jne 0x1a81b0; pop ebx; ret; 
0x001a9624: mov eax, 0; jne 0x1a9850; pop ebx; ret; 
0x001a96e1: mov eax, 0; jne 0x1a9870; pop ebx; ret; 
0x0011fe43: mov eax, 0; pop edi; cmova eax, edx; ret; 
0x0012ec87: mov eax, 0x100; call dword ptr gs:[0x10]; 
0x0012ec48: mov eax, 0x100; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0012ad87: mov eax, 0x101; call dword ptr gs:[0x10]; 
0x0013e625: mov eax, 0x1024448b; pop ebx; pop esi; pop edi; ret; 
0x0009febb: mov eax, 0x103; mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000a047d: mov eax, 0x104; call dword ptr gs:[0x10]; 
0x000a02a4: mov eax, 0x105; call dword ptr gs:[0x10]; 
0x000a01dc: mov eax, 0x106; call dword ptr gs:[0x10]; 
0x000a00ee: mov eax, 0x107; call dword ptr gs:[0x10]; 
0x000a011b: mov eax, 0x107; mov ebx, dword ptr [ebp]; call dword ptr gs:[0x10]; 
0x000e7bb7: mov eax, 0x108; call dword ptr gs:[0x10]; 
0x000e7a69: mov eax, 0x108; mov dword ptr [esp + 0x14], edi; call dword ptr gs:[0x10]; 
0x000e7887: mov eax, 0x109; call dword ptr gs:[0x10]; 
0x0009a6f0: mov eax, 0x10; add esp, 0xc; ret; 
0x0009a5bf: mov eax, 0x10; cmove eax, ecx; ret; 
0x0016ed73: mov eax, 0x10; pop ebx; pop esi; ret; 
0x00099498: mov eax, 0x10; pop ebx; ret; 
0x00042cd3: mov eax, 0x10; pop ebx; sub eax, edx; ret; 
0x001abc6a: mov eax, 0x10; pop edi; ret; 
0x000e7615: mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x000e7d97: mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x000e7ce9: mov eax, 0x10b; mov ecx, dword ptr [esp + 0x54]; mov edx, edi; call dword ptr gs:[0x10]; 
0x0008fbc7: mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0009f6db: mov eax, 0x115; call dword ptr gs:[0x10]; 
0x0009fdfc: mov eax, 0x116; call dword ptr gs:[0x10]; 
0x0009fc5f: mov eax, 0x117; call dword ptr gs:[0x10]; 
0x0009fc01: mov eax, 0x117; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x0009f997: mov eax, 0x118; call dword ptr gs:[0x10]; 
0x0009f939: mov eax, 0x118; mov ecx, ebp; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0009f4f8: mov eax, 0x119; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0010e8fb: mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x0012e388: mov eax, 0x11c; mov ebx, 3; mov ecx, 0x7fffffff; mov esi, 5; call dword ptr gs:[0x10]; 
0x0010e8b9: mov eax, 0x11c; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0012f07f: mov eax, 0x123; call dword ptr gs:[0x10]; 
0x0012f07f: mov eax, 0x123; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x12f098; ret; 
0x0013084d: mov eax, 0x124; call dword ptr gs:[0x10]; 
0x0013089a: mov eax, 0x125; call dword ptr gs:[0x10]; 
0x0011f7e4: mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00121f6f: mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x0011f79d: mov eax, 0x127; mov ebx, 0xffffff9c; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0011f8a3: mov eax, 0x127; mov ebx, 0xffffff9c; mov edx, edi; call dword ptr gs:[0x10]; 
0x0011fa41: mov eax, 0x127; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0011fb47: mov eax, 0x127; mov edx, edi; call dword ptr gs:[0x10]; 
0x0011f63d: mov eax, 0x128; call dword ptr gs:[0x10]; 
0x0011f706: mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x00115157: mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x00115d66: mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x0012f011: mov eax, 0x12c; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x0012154d: mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x0011f127: mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x0012103d: mov eax, 0x130; call dword ptr gs:[0x10]; 
0x001208b2: mov eax, 0x131; call dword ptr gs:[0x10]; 
0x00114fd6: mov eax, 0x132; call dword ptr gs:[0x10]; 
0x00114dd7: mov eax, 0x133; call dword ptr gs:[0x10]; 
0x0012060c: mov eax, 0x135; call dword ptr gs:[0x10]; 
0x001205ae: mov eax, 0x135; mov edi, 8; call dword ptr gs:[0x10]; 
0x0003ddc3: mov eax, 0x135; xor edx, edx; xor esi, esi; xor edi, edi; call dword ptr gs:[0x10]; 
0x00130bd6: mov eax, 0x136; call dword ptr gs:[0x10]; 
0x00092cbb: mov eax, 0x137; call dword ptr gs:[0x10]; 
0x0012fd27: mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x0012fce8: mov eax, 0x13b; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00130327: mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x001302e8: mov eax, 0x13c; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x001145b4: mov eax, 0x13e; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0012178f: mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00130c1a: mov eax, 0x142; call dword ptr gs:[0x10]; 
0x001300ae: mov eax, 0x145; call dword ptr gs:[0x10]; 
0x00130138: mov eax, 0x145; mov esi, edi; call dword ptr gs:[0x10]; 
0x0012fe1c: mov eax, 0x146; call dword ptr gs:[0x10]; 
0x0012ed0a: mov eax, 0x148; call dword ptr gs:[0x10]; 
0x001306c6: mov eax, 0x149; call dword ptr gs:[0x10]; 
0x000f0a70: mov eax, 0x14; call dword ptr gs:[0x10]; 
0x000f0a70: mov eax, 0x14; call dword ptr gs:[0x10]; ret; 
0x00114afd: mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x0011fd1a: mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x0011fcd0: mov eax, 0x14b; mov ebx, dword ptr [esp + 8]; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x00130876: mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x00129759: mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00129a10: mov eax, 0x14d; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00129718: mov eax, 0x14d; mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0012a089: mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x0012a340: mov eax, 0x14e; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0012a048: mov eax, 0x14e; mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0009a537: mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x00131b74: mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00130c4a: mov eax, 0x152; call dword ptr gs:[0x10]; 
0x0012f5fd: mov eax, 0x154; call dword ptr gs:[0x10]; 
0x00123081: mov eax, 0x154; xor ebx, ebx; mov dword ptr [esp + 0x18], edx; xor esi, esi; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00130c87: mov eax, 0x155; call dword ptr gs:[0x10]; 
0x0012f36b: mov eax, 0x156; call dword ptr gs:[0x10]; 
0x0012f337: mov eax, 0x156; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0012dd99: mov eax, 0x157; call dword ptr gs:[0x10]; 
0x0012b886: mov eax, 0x158; call dword ptr gs:[0x10]; 
0x00132147: mov eax, 0x159; call dword ptr gs:[0x10]; 
0x00132108: mov eax, 0x159; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00130907: mov eax, 0x15; call dword ptr gs:[0x10]; 
0x00130cba: mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x0006138b: mov eax, 0x161; call dword ptr gs:[0x10]; 
0x0003dc99: mov eax, 0x163; call dword ptr gs:[0x10]; 
0x000a17a7: mov eax, 0x163; mov byte ptr [esi + 0x3c24], 1; lea ebx, [esi + 0x3c1c]; call dword ptr gs:[0x10]; 
0x00040407: mov eax, 0x163; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x000402c6: mov eax, 0x163; xor edx, edx; sub ecx, ebx; call dword ptr gs:[0x10]; 
0x00130cea: mov eax, 0x164; call dword ptr gs:[0x10]; 
0x000eb13e: mov eax, 0x166; lea ecx, [ebp - 0x6d324]; mov edi, 0x1000; call dword ptr gs:[0x10]; 
0x000908f8: mov eax, 0x16; cmp edx, 0x3fff; ja 0x90910; ret; 
0x000907bc: mov eax, 0x16; cmp edx, 2; jbe 0x907d0; ret; 
0x000902ef: mov eax, 0x16; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000a69d3: mov eax, 0x16; pop ebx; pop esi; ret; 
0x00090a00: mov eax, 0x16; pop ebx; ret; 
0x00098010: mov eax, 0x16; pop esi; pop edi; ret; 
0x000906e0: mov eax, 0x16; ret; 
0x0008ff1a: mov eax, 0x16; test edx, edx; mov edx, 0; cmove eax, edx; ret; 
0x0012f1e1: mov eax, 0x178; call dword ptr gs:[0x10]; 
0x0012f477: mov eax, 0x17c; call dword ptr gs:[0x10]; 
0x00130d1a: mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x00130d46: mov eax, 0x17e; call dword ptr gs:[0x10]; 
0x00092e74: mov eax, 0x182; xor edx, edx; call dword ptr gs:[0x10]; 
0x000e786c: mov eax, 0x193; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000e79e6: mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000e75fb: mov eax, 0x196; not ebx; lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x000e7d61: mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000e7c86: mov eax, 0x197; mov ecx, dword ptr [esp + 0x54]; mov edx, edi; mov esi, ebp; call dword ptr gs:[0x10]; 
0x000a0250: mov eax, 0x198; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000a03e2: mov eax, 0x199; call dword ptr gs:[0x10]; 
0x0013000a: mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x001216c9: mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00120652: mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x00120533: mov eax, 0x19e; mov edi, 8; call dword ptr gs:[0x10]; 
0x00131be3: mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x00131ae3: mov eax, 0x1a1; mov ecx, edx; mov edx, edi; mov edi, ebp; call dword ptr gs:[0x10]; 
0x0009fca7: mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x0009fb7c: mov eax, 0x1a2; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x0009f9d7: mov eax, 0x1a3; call dword ptr gs:[0x10]; 
0x0009f8b6: mov eax, 0x1a3; mov ecx, ebp; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x00133438: mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x0003d6a6: mov eax, 0x1a5; call dword ptr gs:[0x10]; 
0x0003d592: mov eax, 0x1a5; mov esi, 8; mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x0008f06d: mov eax, 0x1a6; xor edx, edx; call dword ptr gs:[0x10]; 
0x00130ab2: mov eax, 0x1a8; call dword ptr gs:[0x10]; 
0x00129f88: mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x001309ed: mov eax, 0x1ac; call dword ptr gs:[0x10]; 
0x00130987: mov eax, 0x1ad; call dword ptr gs:[0x10]; 
0x0013078a: mov eax, 0x1ae; call dword ptr gs:[0x10]; 
0x00130727: mov eax, 0x1af; call dword ptr gs:[0x10]; 
0x0013075d: mov eax, 0x1b0; call dword ptr gs:[0x10]; 
0x001307bd: mov eax, 0x1b1; call dword ptr gs:[0x10]; 
0x00130a1a: mov eax, 0x1b2; call dword ptr gs:[0x10]; 
0x0012e409: mov eax, 0x1b3; int 0x80; 
0x001147ed: mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x0010d5a5: mov eax, 0x1b4; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x00130a4d: mov eax, 0x1b6; call dword ptr gs:[0x10]; 
0x00130ae7: mov eax, 0x1b8; call dword ptr gs:[0x10]; 
0x000ea146: mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x00130947: mov eax, 0x1ba; call dword ptr gs:[0x10]; 
0x00130b1a: mov eax, 0x1c0; call dword ptr gs:[0x10]; 
0x00114f67: mov eax, 0x1c4; mov esi, dword ptr [esp + 0xbc]; call dword ptr gs:[0x10]; 
0x000d3140: mov eax, 0x1d4458b; ret 0x1689; 
0x000fb5ed: mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x0010dfd4: mov eax, 0x1fff8fd; fdivr dword ptr [esi]; jmp eax; 
0x000fb14d: mov eax, 0x20; cmp dword ptr [ecx + edx], 0x26; je 0xfb13f; mov eax, 0xffffffff; ret; 
0x000fb1a6: mov eax, 0x20; mov edx, 0x40; cmove eax, edx; ret; 
0x00042c41: mov eax, 0x20; pop ebx; sub eax, edx; ret; 
0x00114640: mov eax, 0x21; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0012b860: mov eax, 0x24; call dword ptr gs:[0x10]; 
0x0012b860: mov eax, 0x24; call dword ptr gs:[0x10]; cmp eax, 0xfffff001; jae 0x24f50; ret; 
0x0003c95a: mov eax, 0x25; call dword ptr gs:[0x10]; 
0x000612c0: mov eax, 0x26; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011f5f0: mov eax, 0x27; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001208e0: mov eax, 0x28; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00114a86: mov eax, 0x29; call dword ptr gs:[0x10]; 
0x0003e501: mov eax, 0x29fffffc; ret; 
0x0010e385: mov eax, 0x2b; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001238e0: mov eax, 0x2d; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000b4304: mov eax, 0x2efffff0; lea esi, [esi]; mov eax, edx; pop ebx; ret; 
0x00197e7a: mov eax, 0x3000439; sbb al, 0x8b; jmp ebx; 
0x001953fa: mov eax, 0x3000461; sbb al, 0x8b; jmp ebx; 
0x000c083e: mov eax, 0x30010c7; or al, 0x91; jmp ecx; 
0x00123786: mov eax, 0x33; call dword ptr gs:[0x10]; 
0x00130280: mov eax, 0x34; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00122a3f: mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00122d03: mov eax, 0x36; mov ecx, 0x5409; mov edx, 1; call dword ptr gs:[0x10]; 
0x0010c31a: mov eax, 0x39; call dword ptr gs:[0x10]; 
0x0006a25e: mov eax, 0x39fffffb; ret 0x840f; 
0x0006d1aa: mov eax, 0x39fffffb; ret 0x850f; 
0x000686af: mov eax, 0x39fffffb; ret; 
0x001214d6: mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x001214d6: mov eax, 0x3c; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00123966: mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x0012d6b0: mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x00114ab0: mov eax, 0x3f; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f0a80: mov eax, 0x40; call dword ptr gs:[0x10]; 
0x000f0a80: mov eax, 0x40; call dword ptr gs:[0x10]; ret; 
0x00042aad: mov eax, 0x40; pop ebx; sub eax, edx; ret; 
0x000fb228: mov eax, 0x40; ret; 
0x000f0a60: mov eax, 0x41; call dword ptr gs:[0x10]; 
0x000f0a60: mov eax, 0x41; call dword ptr gs:[0x10]; ret; 
0x0010c4c0: mov eax, 0x42; call dword ptr gs:[0x10]; 
0x0012b62a: mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x00122ff0: mov eax, 0x4c; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0005404e: mov eax, 0x4f8d0103; add al, 0xf; xchg edx, eax; ret 0x789; 
0x000dbe00: mov eax, 0x4f; mov ecx, dword ptr [esp + 8]; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x00120ff0: mov eax, 0x53; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00130bf6: mov eax, 0x56; call dword ptr gs:[0x10]; 
0x0012b83a: mov eax, 0x57; call dword ptr gs:[0x10]; 
0x001296ba: mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x0012c460: mov eax, 0x5c; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00124e50: mov eax, 0x5d; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00114efa: mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x000907f4: mov eax, 0x5f; cmovne eax, edx; ret; 
0x00123670: mov eax, 0x60; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001236cd: mov eax, 0x61; call dword ptr gs:[0x10]; 
0x0012d97d: mov eax, 0x65; call dword ptr gs:[0x10]; 
0x00131264: mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001308cd: mov eax, 0x67; call dword ptr gs:[0x10]; 
0x000deab8: mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000dec40: mov eax, 0x68; mov edx, esi; call dword ptr gs:[0x10]; 
0x00089b9c: mov eax, 0x6a000000; add byte ptr [edi + 0x56], dl; push ebx; call dword ptr [ebp + 0x40]; 
0x001304e0: mov eax, 0x6a; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0012f120: mov eax, 0x6b; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0012eea7: mov eax, 0x6c; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0012d9a6: mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x0012d836: mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x001305b6: mov eax, 0x71; call dword ptr gs:[0x10]; 
0x0010e703: mov eax, 0x72; mov ebx, dword ptr [esp + 0x80]; call dword ptr gs:[0x10]; 
0x0010e5b5: mov eax, 0x72; mov ecx, ebp; mov edx, dword ptr [esp + 0x88]; call dword ptr gs:[0x10]; 
0x0010e6a7: mov eax, 0x72; mov ecx, ebp; mov esi, edi; mov edx, dword ptr [esp + 0x88]; call dword ptr gs:[0x10]; 
0x0012b816: mov eax, 0x73; call dword ptr gs:[0x10]; 
0x00024bbc: mov eax, 0x744c7139; sbb dword ptr [ebp - 0x1b797370], ecx; jmp dword ptr [ebp + 0x33]; 
0x00130bb6: mov eax, 0x74; call dword ptr gs:[0x10]; 
0x0013291e: mov eax, 0x75; call dword ptr gs:[0x10]; 
0x001328d8: mov eax, 0x75; mov ebx, 0xb; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x00132b84: mov eax, 0x75; mov ebx, 0xe; mov esi, edi; mov edx, 0x100; call dword ptr gs:[0x10]; 
0x00192a0a: mov eax, 0x75; mov ebx, 3; call dword ptr gs:[0x10]; 
0x00132bd0: mov eax, 0x75; xor esi, esi; mov edx, ebx; mov ebx, 0xe; call dword ptr gs:[0x10]; 
0x0013379f: mov eax, 0x75; xor esi, esi; or dh, 1; mov ebx, 0x18; call dword ptr gs:[0x10]; 
0x00124da2: mov eax, 0x76; call dword ptr gs:[0x10]; 
0x0003c759: mov eax, 0x77; int 0x80; 
0x000ea087: mov eax, 0x78; call dword ptr gs:[0x10]; 
0x0012e1cb: mov eax, 0x78; mov dword ptr [ecx], ebx; int 0x80; 
0x0012b38a: mov eax, 0x79; call dword ptr gs:[0x10]; 
0x0010e3e6: mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x0013058d: mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x0012956d: mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x0004026a: mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0003c138: mov eax, 0x7f800000; and edx, 0x7fffffff; sub eax, edx; shr eax, 0x1f; ret; 
0x0013066d: mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x0013ee63: mov eax, 0x7fffffff; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00042971: mov eax, 0x80000000; bsr ecx, ecx; xor ecx, 0x1f; shr eax, cl; ret; 
0x0004298f: mov eax, 0x80000000; xor ecx, 0x1f; shr eax, cl; ret; 
0x00130817: mov eax, 0x80; call dword ptr gs:[0x10]; 
0x00189a65: mov eax, 0x81000001; ret 0x53ab; 
0x00159765: mov eax, 0x81000304; ret 0x56ab; 
0x0013e965: mov eax, 0x810004b2; ret 0x4ab; 
0x00123665: mov eax, 0x81000665; ret 0xb7ab; 
0x00114365: mov eax, 0x81000758; ret 0xaaab; 
0x000d4465: mov eax, 0x81000b57; ret 0xa9ab; 
0x000a9465: mov eax, 0x81000e07; ret 0x59ab; 
0x0002fd65: mov eax, 0x8100159e; ret 0xf0ab; 
0x0013069d: mov eax, 0x81; call dword ptr gs:[0x10]; 
0x00198d61: mov eax, 0x81ffff0e; ret; 
0x001307e6: mov eax, 0x82; call dword ptr gs:[0x10]; 
0x001638f4: mov eax, 0x83000000; clc; add dword ptr [ebp + 0xf04004c], ecx; xchg esp, eax; ret 0x448b; 
0x0002f21a: mov eax, 0x83000000; ret; 
0x00170023: mov eax, 0x83000002; ret; 
0x000829f1: mov eax, 0x8334828d; stc; call dword ptr [eax - 0x73]; 
0x00130b92: mov eax, 0x83; call dword ptr gs:[0x10]; 
0x001289f4: mov eax, 0x83fff38c; les edx, ptr [eax]; add esp, 0xc; ret; 
0x000685d8: mov eax, 0x83fffffb; in al, dx; or al, 0x29; ret; 
0x0006c079: mov eax, 0x83fffffb; in al, dx; or al, 0x89; ret; 
0x000f0a46: mov eax, 0x84; call dword ptr gs:[0x10]; 
0x00114ed6: mov eax, 0x85; call dword ptr gs:[0x10]; 
0x001305da: mov eax, 0x86; call dword ptr gs:[0x10]; 
0x0012f3e6: mov eax, 0x88; call dword ptr gs:[0x10]; 
0x0012f3e6: mov eax, 0x88; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0003d8a1: mov eax, 0x89000000; inc esp; and al, 0x20; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x00095b82: mov eax, 0x89000000; ret 0xe281; 
0x0005d440: mov eax, 0x8910c483; ret 0x458b; 
0x0016c495: mov eax, 0x8910c483; ret; 
0x00131244: mov eax, 0x89fff5d3; loope 0x1311d4; ret 0x448b; 
0x0010f8b4: mov eax, 0x89fff978; ret 0x848b; 
0x000d7730: mov eax, 0x89ffffc9; popfd; mov esp, 0xe9ffffc9; cmp esp, 0xa40fffff; ret 0xc102; 
0x000685e3: mov eax, 0x89fffffb; lea esi, [edx + edi*8 - 1]; call dword ptr [eax - 0x18]; 
0x00069939: mov eax, 0x89fffffb; lea esp, [edx + edi*8 - 1]; dec dword ptr [ecx - 0x5976b]; call dword ptr [eax - 0x18]; 
0x0008a0c2: mov eax, 0x8b000000; inc esi; add al, 0x8b; push esi; or byte ptr [ecx], ch; ret 0xfa39; 
0x00069962: mov eax, 0x8bfffffb; xchg ebp, eax; mov esp, 0x1fffffb; ret 0x9589; 
0x0006a030: mov eax, 0x8bfffffb; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xd801; 
0x00069b6c: mov eax, 0x8bfffffb; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xf001; 
0x00068378: mov eax, 0x8bfffffb; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xf801; 
0x0006819f: mov eax, 0x8bfffffb; xchg ebp, eax; mov esp, 0x83fffffb; mov byte ptr [ecx], 1; ret 0x9589; 
0x00068600: mov eax, 0x8bfffffb; xchg ebp, eax; mov esp, 0x8bfffffb; lea esi, [edx + edi*8 - 1]; inc dword ptr [ecx]; ret 0xd801; 
0x0011f3fe: mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00028067: mov eax, 0x8d0cec83; test dword ptr [eax + 0x29], edi; stc; call dword ptr [edi - 1]; 
0x000d876f: mov eax, 0x8d8bfff5; ror cl, 0xff; dec dword ptr [ebp - 0x661f37f]; call dword ptr [eax - 0x73]; 
0x00143912: mov eax, 0x8dfff9ab; mov dl, 0x4c; je 0x143914; call dword ptr [eax + 0x56]; 
0x00059b3d: mov eax, 0x8dffffc9; xchg byte ptr [eax + edi*2], dh; stc; call dword ptr [eax - 0x73]; 
0x001157ba: mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x001295eb: mov eax, 0x90; call dword ptr gs:[0x10]; 
0x001295b7: mov eax, 0x90; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0012ac9b: mov eax, 0x91; call dword ptr gs:[0x10]; 
0x0012ac67: mov eax, 0x91; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00086a40: mov eax, 0x92; call dword ptr gs:[0x10]; 
0x00148aad: mov eax, 0x92; mov dword ptr [ebx + 0xc], 1; add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x00133edb: mov eax, 0x92; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; call dword ptr gs:[0x10]; 
0x00133e6a: mov eax, 0x92; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; mov edx, 0x40; call dword ptr gs:[0x10]; 
0x0013401d: mov eax, 0x92; mov edx, 8; call dword ptr gs:[0x10]; 
0x0012d877: mov eax, 0x92; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x000f0af6: mov eax, 0x93; call dword ptr gs:[0x10]; 
0x00124852: mov eax, 0x94; call dword ptr gs:[0x10]; 
0x00128aba: mov eax, 0x96; call dword ptr gs:[0x10]; 
0x0012966a: mov eax, 0x97; call dword ptr gs:[0x10]; 
0x00128ae6: mov eax, 0x98; call dword ptr gs:[0x10]; 
0x00129690: mov eax, 0x99; call dword ptr gs:[0x10]; 
0x0010c15a: mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x000939a1: mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x00106729: mov eax, 0x9c249c89; add byte ptr [eax], al; add cl, ch; ret 0xfffa; 
0x00092acf: mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0010be76: mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x00093d59: mov eax, 0x9d; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x0009c2a4: mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0009c2a4: mov eax, 0x9e; call dword ptr gs:[0x10]; ret; 
0x0010be96: mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x0010beb6: mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x0010bf44: mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x0012f29e: mov eax, 0xa3; mov ebx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0012d9ca: mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x00130b57: mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0011fd9b: mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x0011fd67: mov eax, 0xa8; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001309bd: mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x0013c4be: mov eax, 0xa9a8828d; stc; call dword ptr [eax - 0x73]; 
0x00121500: mov eax, 0xa; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0012f557: mov eax, 0xac; call dword ptr gs:[0x10]; 
0x0012fb12: mov eax, 0xac; mov ebx, 0x53564d41; call dword ptr gs:[0x10]; 
0x0003c750: mov eax, 0xad; int 0x80; 
0x0003c7ec: mov eax, 0xae; mov esi, 8; lea edx, [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x0003c88f: mov eax, 0xae; mov esi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00092dac: mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0009db24: mov eax, 0xaf; mov dword ptr [esp + 0x28], ecx; mov edx, ecx; mov ecx, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0010d01f: mov eax, 0xaf; mov dword ptr [esp + 0xb8], 0; call dword ptr gs:[0x10]; 
0x00094e90: mov eax, 0xaf; mov dword ptr [esp + 8], edx; mov ebx, ebp; mov esi, 8; call dword ptr gs:[0x10]; 
0x00092d10: mov eax, 0xaf; mov ebx, 2; mov esi, 8; add ecx, 0x474; call dword ptr gs:[0x10]; 
0x0009ddef: mov eax, 0xaf; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00093f2d: mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x0003c990: mov eax, 0xb0; mov ebx, dword ptr [esp + 8]; mov ecx, 8; call dword ptr gs:[0x10]; 
0x0003d666: mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x0003d60d: mov eax, 0xb1; mov esi, 8; mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x0003d8a9: mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x0003ca20: mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x0003c9f2: mov eax, 0xb3; mov ecx, 8; call dword ptr gs:[0x10]; 
0x000fb715: mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000fb6e1: mov eax, 0xb4; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000d87b9: mov eax, 0xb58bfff5; ror cl, 0xff; dec dword ptr [ebp - 0x661f37a]; call dword ptr [eax - 0x73]; 
0x000fb8d5: mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x000fb8a1: mov eax, 0xb5; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0011e65e: mov eax, 0xb7; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00114f63: mov eax, 0xb8000000; les eax, ptr [ecx]; add byte ptr [eax], al; mov esi, dword ptr [esp + 0xbc]; call dword ptr gs:[0x10]; 
0x001abbe2: mov eax, 0xb8000000; or byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x00114fd2: mov eax, 0xb8000000; xor al, byte ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0013060a: mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x0013063a: mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x000eab5d: mov eax, 0xb; call dword ptr gs:[0x10]; 
0x0003cf9a: mov eax, 0xba; call dword ptr gs:[0x10]; 
0x0010e401: mov eax, 0xbe; int 0x80; 
0x0010e401: mov eax, 0xbe; int 0x80; push ecx; cmp eax, 0xfffff001; jae 0x24f50; ret; 
0x00122fa0: mov eax, 0xbf; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000decbe: mov eax, 0xc189051e; ror ecx, 2; cmp ecx, 0x28f5c28; jbe 0xdecd8; mov eax, edx; ret; 
0x001304ae: mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x00130540: mov eax, 0xc3; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012f0ee: mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x0012f180: mov eax, 0xc4; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012ee6e: mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x0012ef00: mov eax, 0xc5; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0011f09d: mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x000f0b10: mov eax, 0xc7; call dword ptr gs:[0x10]; 
0x000f0b10: mov eax, 0xc7; call dword ptr gs:[0x10]; ret; 
0x000efa80: mov eax, 0xc8; call dword ptr gs:[0x10]; 
0x000efa80: mov eax, 0xc8; call dword ptr gs:[0x10]; ret; 
0x000efa70: mov eax, 0xc9; call dword ptr gs:[0x10]; 
0x000efa70: mov eax, 0xc9; call dword ptr gs:[0x10]; ret; 
0x00114686: mov eax, 0xc; call dword ptr gs:[0x10]; 
0x001abc36: mov eax, 0xc; pop edi; ret; 
0x0008feac: mov eax, 0xc; pop esi; pop edi; ret; 
0x000efa60: mov eax, 0xca; call dword ptr gs:[0x10]; 
0x000efa60: mov eax, 0xca; call dword ptr gs:[0x10]; ret; 
0x0012b720: mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x0012b680: mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x000efa9a: mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x0010c2a0: mov eax, 0xce; call dword ptr gs:[0x10]; 
0x0011511d: mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x0010c445: mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x0012b4c6: mov eax, 0xd0; mov ebx, 0xffffffff; mov edx, 0xffffffff; call dword ptr gs:[0x10]; 
0x000f0acd: mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x0010c395: mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x0012b3e6: mov eax, 0xd2; mov ebx, 0xffffffff; mov edx, 0xffffffff; call dword ptr gs:[0x10]; 
0x000f0a9d: mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x001146fd: mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x0010c50d: mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x0010c1fd: mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x0012fa76: mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x0012fa76: mov eax, 0xd7; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0012fa56: mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x0012fa56: mov eax, 0xd8; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00130a7a: mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x0012883d: mov eax, 0xda; call dword ptr gs:[0x10]; 
0x0012875d: mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x000fb694: mov eax, 0xdb; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000e8bf7: mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x000e8a4e: mov eax, 0xdc; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00101e41: mov eax, 0xdd048d; add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x4489; 
0x0011522b: mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00121d08: mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x00115468: mov eax, 0xdd; mov ecx, esi; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0011528e: mov eax, 0xdd; mov ecx, esi; mov edx, edi; call dword ptr gs:[0x10]; 
0x00094f48: mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x00130d60: mov eax, 0xe0; call dword ptr gs:[0x10]; ret; 
0x0012b7a7: mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x00128607: mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x00124997: mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x00126a72: mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x00128432: mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x00124902: mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x0012845d: mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x00050121: mov eax, 0xe9000000; push es; idiv bh; call dword ptr [eax + 0x6a]; 
0x0012848d: mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x0012492d: mov eax, 0xea; call dword ptr gs:[0x10]; 
0x0012adba: mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x001284ba: mov eax, 0xec; call dword ptr gs:[0x10]; 
0x0012495a: mov eax, 0xed; call dword ptr gs:[0x10]; 
0x000c3aca: mov eax, 0xf00003c; inc esp; ret 0xff50; 
0x0008fcc1: mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0009219e: mov eax, 0xf0; mov ebx, dword ptr [esp]; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00095536: mov eax, 0xf0; mov ebx, ebp; xor edx, edx; mov ecx, 7; xor esi, esi; call dword ptr gs:[0x10]; 
0x000962e7: mov eax, 0xf0; mov ebx, edi; xor edx, edx; mov ecx, 7; xor esi, esi; call dword ptr gs:[0x10]; 
0x000981ff: mov eax, 0xf0; mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x0008f219: mov eax, 0xf0; mov ecx, 0x80; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x0009dff7: mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00092f02: mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; mov ebx, edi; call dword ptr gs:[0x10]; 
0x0009829c: mov eax, 0xf0; mov ecx, 0x81; xor esi, esi; mov edx, 0x7fffffff; mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x0008fa4e: mov eax, 0xf0; mov ecx, 0x81; xor esi, esi; mov edx, 1; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x00095d29: mov eax, 0xf0; mov ecx, 0x87; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x00097c90: mov eax, 0xf0; mov ecx, 1; mov edx, 1; call dword ptr gs:[0x10]; 
0x0018c4ca: mov eax, 0xf0; mov ecx, 1; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x00097785: mov eax, 0xf0; mov ecx, 7; xor esi, esi; mov dword ptr [ebx + 4], edx; xor edx, edx; call dword ptr gs:[0x10]; 
0x0009744c: mov eax, 0xf0; mov ecx, 8; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x0009846d: mov eax, 0xf0; mov edx, 0x7fffffff; setne cl; shl ecx, 7; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00099675: mov eax, 0xf0; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00096838: mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009885f: mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009192c: mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00091c07: mov eax, 0xf0; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00097a02: mov eax, 0xf0; mov edx, 1; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00091343: mov eax, 0xf0; mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x00091808: mov eax, 0xf0; mov edx, 1; xor esi, esi; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x00091671: mov eax, 0xf0; mov edx, 1; xor esi, esi; mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00098835: mov eax, 0xf0; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008f28d: mov eax, 0xf0; mov edx, 2; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x000951ba: mov eax, 0xf0; not ecx; and ecx, 0x80; call dword ptr gs:[0x10]; 
0x000918aa: mov eax, 0xf0; or edx, 2; call dword ptr gs:[0x10]; 
0x00090a69: mov eax, 0xf0; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00095374: mov eax, 0xf0; xor ecx, ecx; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008f0c4: mov eax, 0xf0; xor edx, edx; call dword ptr gs:[0x10]; 
0x00092f70: mov eax, 0xf0; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008f815: mov eax, 0xf0; xor esi, esi; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00090ad8: mov eax, 0xf0; xor esi, esi; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009130f: mov eax, 0xf0; xor esi, esi; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009a770: mov eax, 0xf0; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00092a7f: mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x0009424b: mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x001239a3: mov eax, 0xf883fffc; push dword ptr [ebp + esi*2 - 0x77]; ret; 
0x001146b0: mov eax, 0xf; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0017c9eb: mov eax, 0xfc130fe8; jmp dword ptr [esi - 0x70]; 
0x0012e860: mov eax, 0xfe; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001306f2: mov eax, 0xff; call dword ptr gs:[0x10]; 
0x000fb132: mov eax, 0xff; cmp edx, 0x9123683e; jne 0xfb1a0; ret; 
0x0005dcc3: mov eax, 0xfff87ee9; call dword ptr [eax + 0x52]; 
0x000eaf9f: mov eax, 0xfffbabe8; jmp dword ptr [ebp - 0x75]; 
0x0016afa7: mov eax, 0xfffdb5e9; dec dword ptr [ebx + 0x39202444]; ret 0x1074; 
0x000d740c: mov eax, 0xfffffc9; xchg ebp, eax; ret 0xb60f; 
0x0010e3ca: mov eax, 0xfffffff2; pop ebx; ret; 
0x000eb0aa: mov eax, 0xffffffff; add esp, 0x1c; ret; 
0x00025874: mov eax, 0xffffffff; add esp, 0xc; ret; 
0x0012e28c: mov eax, 0xffffffff; add esp, 8; pop ebx; ret; 
0x00141f98: mov eax, 0xffffffff; cmp byte ptr [edx + 2], 0; jne 0x141fa9; movzx eax, byte ptr [edx + 1]; shr eax, 1; ret; 
0x0008bc64: mov eax, 0xffffffff; mov edx, eax; ret; 
0x0002f3cf: mov eax, 0xffffffff; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00061352: mov eax, 0xffffffff; pop ebx; pop esi; pop edi; ret; 
0x0003c744: mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0003c9c2: mov eax, 0xffffffff; pop ebx; ret; 
0x0005b5ba: mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x00024f71: mov eax, 0xffffffff; ret; 
0x0005b737: mov eax, 1; add esp, 0xc; ret; 
0x00124b93: mov eax, 1; add esp, 8; pop ebx; ret; 
0x0009f338: mov eax, 1; call 0x9f2a0; mov dword ptr [esp], esi; call ebx; 
0x0012e1e8: mov eax, 1; call dword ptr gs:[0x10]; 
0x000fb2ad: mov eax, 1; cmp dword ptr [ecx + edx], 0x26; je 0xfb2c2; mov eax, 0xffffffff; ret; 
0x0019f3b0: mov eax, 1; ja 0x19f3b9; neg eax; ret; 
0x001a0bf0: mov eax, 1; ja 0x1a0bf9; neg eax; pop ebp; ret; 
0x001a5ff0: mov eax, 1; ja 0x1a5ff9; neg eax; ret; 
0x001a62e0: mov eax, 1; ja 0x1a62e9; neg eax; pop ebp; ret; 
0x001a64a0: mov eax, 1; ja 0x1a64a9; neg eax; ret; 
0x001a6f87: mov eax, 1; ja 0x1a6f90; neg eax; ret; 
0x001a81f8: mov eax, 1; ja 0x1a8201; neg eax; ret; 
0x001a9871: mov eax, 1; ja 0x1a987a; neg eax; ret; 
0x001a7e86: mov eax, 1; jg 0x1a7e90; neg eax; ret; 
0x001a81b1: mov eax, 1; jg 0x1a81c0; neg eax; ret; 
0x001ac2b1: mov eax, 1; jg 0x1ac2c0; neg eax; ret; 
0x000d97d0: mov eax, 1; jg 0xd97d9; neg eax; ret; 
0x0017ca40: mov eax, 1; mov dword ptr [ecx + 0x14], edx; ret; 
0x000c2be7: mov eax, 1; mov ecx, 0xffffffff; cmovb eax, ecx; ret; 
0x0007cac4: mov eax, 1; pop ebx; pop esi; pop edi; ret; 
0x0005b853: mov eax, 1; pop ebx; pop esi; ret; 
0x0012933a: mov eax, 1; pop ebx; ret; 
0x00053c58: mov eax, 1; pop esi; pop edi; ret; 
0x000605b5: mov eax, 1; ret; 
0x00174a06: mov eax, 1; sbb eax, -1; add esp, 0xc; ret; 
0x000fb5a3: mov eax, 1; test ecx, ecx; js 0xfb5b0; ret; 
0x0014efe3: mov eax, 1; xor eax, 1; pop ebx; ret; 
0x00042920: mov eax, 1; xor edx, edx; pop ebx; ret; 
0x00189900: mov eax, 2; add esp, 0xc; ret; 
0x00042895: mov eax, 2; bsr ecx, ecx; shl eax, cl; ret; 
0x00042865: mov eax, 2; movzx ecx, cl; bsr ecx, ecx; shl eax, cl; ret; 
0x00042946: mov eax, 2; movzx ecx, cx; bsr ecx, ecx; shl eax, cl; ret; 
0x00170b86: mov eax, 2; pop ebx; pop esi; ret; 
0x000d9a00: mov eax, 2; ret; 
0x00094190: mov eax, 3; add esp, 0xc; ret; 
0x001207cb: mov eax, 3; call dword ptr gs:[0x10]; 
0x000e762d: mov eax, 3; cmovne eax, edx; ret; 
0x00120797: mov eax, 3; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00094858: mov eax, 3; ret; 
0x001898f4: mov eax, 4; add esp, 0xc; ret; 
0x0012197b: mov eax, 4; call dword ptr gs:[0x10]; 
0x00121947: mov eax, 4; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001abb8d: mov eax, 4; pop edi; ret; 
0x000d9a20: mov eax, 4; ret; 
0x0013c04b: mov eax, 5; pop ebx; pop esi; pop ebp; ret; 
0x0010ecd0: mov eax, 5; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000d9a30: mov eax, 5; ret; 
0x00114742: mov eax, 6; call dword ptr gs:[0x10]; 
0x0014038b: mov eax, 6; call dword ptr gs:[0x10]; pop ebx; ret; 
0x0009f180: mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000d9a40: mov eax, 6; ret; 
0x000d9a50: mov eax, 7; ret; 
0x001898e4: mov eax, 8; add esp, 0xc; ret; 
0x001149c6: mov eax, 8; call dword ptr gs:[0x10]; 
0x000a0af1: mov eax, 8; cmova eax, edx; mov byte ptr [ecx + 0x3c38], al; ret; 
0x00042c13: mov eax, 8; pop ebx; sub eax, edx; ret; 
0x001abbe6: mov eax, 8; pop edi; ret; 
0x0011f0d0: mov eax, 9; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0010c971: mov eax, 9; pop esi; pop edi; ret; 
0x0017916b: mov eax, dword ptr [0]; mov dword ptr [eax + edx], ecx; ret; 
0x0019b091: mov eax, dword ptr [0x300040c]; sbb al, 0x8b; jmp ebx; 
0x0019ae91: mov eax, dword ptr [0x300040f]; sbb al, 0x8b; jmp ebx; 
0x00088c9b: mov eax, dword ptr [0x39ffffee]; ret; 
0x00160a4d: mov eax, dword ptr [0x4be80000]; daa; in al, dx; jmp dword ptr [ebp - 0x75]; 
0x000b3a5c: mov eax, dword ptr [0x5bfffffd]; ret; 
0x00099481: mov eax, dword ptr [0x68]; mov dword ptr [edx + 0x1c], eax; xor eax, eax; pop ebx; ret; 
0x0012f778: mov eax, dword ptr [0x810005a4]; ret; 
0x000a4a78: mov eax, dword ptr [0x81000e51]; ret; 
0x0009cf78: mov eax, dword ptr [0x81000ecc]; ret; 
0x00175ffb: mov eax, dword ptr [0x83000000]; rcr byte ptr [ebx], 0x89; loope 0x175f8e; ret 0x25; 
0x000a8ed6: mov eax, dword ptr [0x83000001]; ret 0xe901; 
0x0006973b: mov eax, dword ptr [0x83000002]; ret; 
0x00162e2b: mov eax, dword ptr [0x83fff2c4]; les edx, ptr [eax]; add esp, 4; pop ebx; pop esi; ret; 
0x0007969b: mov eax, dword ptr [0x83fffff9]; les ecx, ptr [ebx + edx*2]; push edi; push esi; mov eax, dword ptr [esp + 0x14]; call eax; 
0x001af661: mov eax, dword ptr [0x89000008]; ret; 
0x000ebd75: mov eax, dword ptr [0x89001530]; ret; 
0x000d0ecb: mov eax, dword ptr [0x8bfff631]; jl 0xd0ef6; sub al, 0x8d; xchg dword ptr [ebp + ebx*4 - 7], esp; call dword ptr [eax - 0x73]; 
0x00161740: mov eax, dword ptr [0x8d500000]; cmp dword ptr [ebx + ebp], -0xe; call dword ptr [eax - 0x18]; 
0x00042ccb: mov eax, dword ptr [0xc4830016]; sbb byte ptr [ecx + 0x10b8c2], cl; add byte ptr [eax], al; pop ebx; sub eax, edx; ret; 
0x00042c39: mov eax, dword ptr [0xc4830016]; sbb byte ptr [ecx + 0x20b8c2], cl; add byte ptr [eax], al; pop ebx; sub eax, edx; ret; 
0x00042c9d: mov eax, dword ptr [0xc4830016]; sbb byte ptr [ecx + 0x40b8c2], cl; add byte ptr [eax], al; pop ebx; sub eax, edx; ret; 
0x00042c0b: mov eax, dword ptr [0xc4830016]; sbb byte ptr [ecx + 0x8b8c2], cl; add byte ptr [eax], al; pop ebx; sub eax, edx; ret; 
0x000fb5e4: mov eax, dword ptr [0xc]; test eax, eax; jne 0xfb608; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x000ea07a: mov eax, dword ptr [8]; mov ebx, 0x1200011; lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x00099b45: mov eax, dword ptr [8]; ret; 
0x00094bc5: mov eax, dword ptr [8]; xor edx, edx; lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x0013473e: mov eax, dword ptr [eax + 0x108]; mov eax, dword ptr [eax + 0x20]; ret; 
0x00125243: mov eax, dword ptr [eax + 0x108]; mov eax, dword ptr [eax + 0x20]; test eax, eax; cmove eax, edx; ret; 
0x00082bd3: mov eax, dword ptr [eax + 0x10]; add esp, 4; pop ebx; pop esi; jmp eax; 
0x00152858: mov eax, dword ptr [eax + 0x10]; ret; 
0x000260ae: mov eax, dword ptr [eax + 0x10b8]; ret; 
0x000260ce: mov eax, dword ptr [eax + 0x10bc]; ret; 
0x0002f54e: mov eax, dword ptr [eax + 0x10e0]; ret; 
0x0008d761: mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x0017ce18: mov eax, dword ptr [eax + 0x14]; ret; 
0x0005af9c: mov eax, dword ptr [eax + 0x164]; push dword ptr [eax]; call 0x664c0; add esp, 0x1c; ret; 
0x000804fc: mov eax, dword ptr [eax + 0x164]; push dword ptr [eax]; call 0x729a0; add esp, 0x1c; ret; 
0x00032ba5: mov eax, dword ptr [eax + 0x170]; mov eax, dword ptr [edx + eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x54]; ret; 
0x00034035: mov eax, dword ptr [eax + 0x170]; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0008d7c1: mov eax, dword ptr [eax + 0x18]; pop esi; jmp eax; 
0x0013be1c: mov eax, dword ptr [eax + 0x18]; ret; 
0x0014b105: mov eax, dword ptr [eax + 0x1c8]; mov eax, dword ptr [edx + eax]; ret; 
0x000c3106: mov eax, dword ptr [eax + 0x1c8]; ret; 
0x0008de64: mov eax, dword ptr [eax + 0x1c]; add esp, 0x24; pop ebx; pop esi; jmp eax; 
0x0008e744: mov eax, dword ptr [eax + 0x1c]; mov dword ptr gs:[0x7c], eax; ret; 
0x0013c00b: mov eax, dword ptr [eax + 0x1c]; push 5; ror eax, 9; xor eax, dword ptr gs:[0x18]; push esi; call eax; 
0x0016ebc6: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x16ebd6; sub esp, 0xc; push esi; call eax; 
0x0016f099: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x16f0a9; sub esp, 0xc; push esi; call eax; 
0x0016ffb4: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x16ffc4; sub esp, 0xc; push edi; call eax; 
0x00170c4c: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x170c5c; sub esp, 0xc; push esi; call eax; 
0x0017462a: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x17463a; sub esp, 0xc; push esi; call eax; 
0x00175b33: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x175b43; sub esp, 0xc; push esi; call eax; 
0x00175cee: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x175cfe; sub esp, 0xc; push edi; call eax; 
0x00177098: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x1770a8; sub esp, 0xc; push ebp; call eax; 
0x000c3116: mov eax, dword ptr [eax + 0x1cc]; ret; 
0x0003486e: mov eax, dword ptr [eax + 0x1d0]; add eax, dword ptr gs:[0]; ret; 
0x000c3126: mov eax, dword ptr [eax + 0x1d0]; ret; 
0x000c3136: mov eax, dword ptr [eax + 0x1d4]; ret; 
0x000c3146: mov eax, dword ptr [eax + 0x1d8]; ret; 
0x000c3156: mov eax, dword ptr [eax + 0x1dc]; ret; 
0x000c3166: mov eax, dword ptr [eax + 0x1e0]; ret; 
0x000c3176: mov eax, dword ptr [eax + 0x1e4]; ret; 
0x000c3186: mov eax, dword ptr [eax + 0x1e8]; ret; 
0x000c3196: mov eax, dword ptr [eax + 0x1ec]; ret; 
0x0003d4ce: mov eax, dword ptr [eax + 0x1f0]; ret; 
0x0003d4ae: mov eax, dword ptr [eax + 0x1f4]; ret; 
0x00134744: mov eax, dword ptr [eax + 0x20]; ret; 
0x00125249: mov eax, dword ptr [eax + 0x20]; test eax, eax; cmove eax, edx; ret; 
0x00170ef7: mov eax, dword ptr [eax + 0x2398]; sub esp, 8; push 0; push ebx; call dword ptr [eax + 0x14]; 
0x00034634: mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00034583: mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0008e81e: mov eax, dword ptr [eax + 0x24]; test eax, eax; jne 0x8e830; ret; 
0x001747f4: mov eax, dword ptr [eax + 0x2c]; add eax, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x00034604: mov eax, dword ptr [eax + 0x2c]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00034543: mov eax, dword ptr [eax + 0x2c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0017a8e4: mov eax, dword ptr [eax + 0x30]; add eax, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0008c92e: mov eax, dword ptr [eax + 0x30]; test eax, eax; jne 0x8c948; ret; 
0x00040971: mov eax, dword ptr [eax + 0x34]; add esp, 4; pop ebx; pop esi; ret; 
0x000347ac: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x0003478c: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x0003476c: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x000346ec: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x0003472c: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x0003468c: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x0003470c: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x000346cc: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x000345cc: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x000346ac: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x0003474c: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x0003466c: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x0008ccc8: mov eax, dword ptr [eax + 0x34]; ret; 
0x00024b56: mov eax, dword ptr [eax + 0x34]; test eax, eax; jne 0x24b50; ret; 
0x0008b9a7: mov eax, dword ptr [eax + 0x34]; test eax, eax; jne 0x8b9a0; ret; 
0x001251a0: mov eax, dword ptr [eax + 0x35c]; mov edx, dword ptr [esp + 8]; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x00125228: mov eax, dword ptr [eax + 0x35c]; pop ebx; ret; 
0x000347cc: mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00084759: mov eax, dword ptr [eax + 0x38]; test eax, eax; js 0x84768; ret; 
0x00186919: mov eax, dword ptr [eax + 0x3a0]; test eax, eax; je 0x186930; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x30]; 
0x0009481e: mov eax, dword ptr [eax + 0x3af4]; ret; 
0x0009d6b2: mov eax, dword ptr [eax + 0x3ba4]; test eax, eax; jne 0x9d6c7; ret; 
0x000347ec: mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00125220: mov eax, dword ptr [eax + 0x3c]; pop ebx; ret; 
0x0004226e: mov eax, dword ptr [eax + 0x40]; ret; 
0x00134acd: mov eax, dword ptr [eax + 0x4c]; call 0x134990; add esp, 4; ret; 
0x001897b8: mov eax, dword ptr [eax + 0x4c]; ret; 
0x00152b12: mov eax, dword ptr [eax + 0x4e48]; test eax, eax; jne 0x152b27; ret; 
0x001897d8: mov eax, dword ptr [eax + 0x50]; ret; 
0x00032bb0: mov eax, dword ptr [eax + 0x54]; ret; 
0x00189858: mov eax, dword ptr [eax + 0x58]; ret; 
0x001897e8: mov eax, dword ptr [eax + 0x5c]; ret; 
0x0009e078: mov eax, dword ptr [eax + 0x64]; ret; 
0x00080f68: mov eax, dword ptr [eax + 0x88]; push esi; call dword ptr [eax + 0x34]; 
0x000a6b54: mov eax, dword ptr [eax + 0x90]; call dword ptr [eax]; 
0x0008e966: mov eax, dword ptr [eax + 0x90]; shr eax, 0xb; and eax, 1; mov dword ptr [edx + 0x1ac8], eax; ret; 
0x0003488e: mov eax, dword ptr [eax + 0x94]; add eax, dword ptr gs:[0]; ret; 
0x0003484e: mov eax, dword ptr [eax + 0x9c]; add eax, dword ptr gs:[0]; ret; 
0x0002555e: mov eax, dword ptr [eax + 0xa4]; add eax, dword ptr gs:[0]; ret; 
0x0010a812: mov eax, dword ptr [eax + 0xb8]; mov edx, dword ptr [eax]; mov dword ptr [eax], ecx; mov eax, edx; ret; 
0x00078e2b: mov eax, dword ptr [eax + 0xbc]; push dword ptr [eax]; call 0x66130; add esp, 0x1c; ret; 
0x0008049b: mov eax, dword ptr [eax + 0xbc]; push dword ptr [eax]; call 0x72650; add esp, 0x1c; ret; 
0x0013f5fe: mov eax, dword ptr [eax + 0xc4]; add eax, dword ptr gs:[0]; ret; 
0x0017c0a4: mov eax, dword ptr [eax + 0xc]; pop esi; pop edi; jmp eax; 
0x0013bfdd: mov eax, dword ptr [eax + 0xc]; push esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00125765: mov eax, dword ptr [eax + 0xc]; test eax, eax; je 0x12576d; ret; 
0x0009d697: mov eax, dword ptr [eax + 0xc]; test eax, eax; jne 0x9d690; pop ebx; ret; 
0x0008cc9e: mov eax, dword ptr [eax + 0xe6c]; ret; 
0x000a6e94: mov eax, dword ptr [eax + 4]; add ecx, edx; test eax, eax; jne 0xa6e90; mov eax, ecx; ret; 
0x0017b9b0: mov eax, dword ptr [eax + 4]; add esp, 0x18; pop ebx; jmp eax; 
0x0008d849: mov eax, dword ptr [eax + 4]; add esp, 0xc; jmp eax; 
0x0008f361: mov eax, dword ptr [eax + 4]; mov dword ptr [ecx + 4], eax; mov dword ptr [eax], ecx; mov dword ptr [edx + 0x924], 0; ret; 
0x001251fe: mov eax, dword ptr [eax + 4]; pop ebx; ret; 
0x0010bb40: mov eax, dword ptr [eax + 4]; test eax, eax; je 0x10ba8f; call eax; 
0x0010bbf8: mov eax, dword ptr [eax + 4]; test eax, eax; je 0x10bae2; call eax; 
0x00152b20: mov eax, dword ptr [eax + 4]; test eax, eax; je 0x152b2c; cmp dword ptr [eax + 8], edx; jne 0x152b20; ret; 
0x000a6dc8: mov eax, dword ptr [eax + 4]; test eax, eax; jne 0xa6dc0; xor eax, eax; ret; 
0x001227d8: mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x0009039c: mov eax, dword ptr [eax + 8]; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0013c023: mov eax, dword ptr [eax + 8]; mov dword ptr [esp], esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0017c0dd: mov eax, dword ptr [eax + 8]; pop esi; pop edi; jmp eax; 
0x0009043c: mov eax, dword ptr [eax + 8]; sar eax, 2; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0008c96c: mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x0010bba0: mov eax, dword ptr [eax + 8]; test eax, eax; je 0x10ba8f; call eax; 
0x0010bbe0: mov eax, dword ptr [eax + 8]; test eax, eax; je 0x10bae2; call eax; 
0x00034607: mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00034042: mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0018977c: mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x0018979c: mov eax, dword ptr [eax + edx*4]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x00034546: mov eax, dword ptr [eax + edx*4]; ret; 
0x00086888: mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x00086838: mov eax, dword ptr [eax]; and eax, 0x804; ret; 
0x00097f6c: mov eax, dword ptr [eax]; and eax, 0xf000dff; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0009287c: mov eax, dword ptr [eax]; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000a08d3: mov eax, dword ptr [eax]; cmp eax, 0x3fc; jbe 0xa08e0; ret; 
0x000a0ad3: mov eax, dword ptr [eax]; cmp eax, 0x50; jbe 0xa0ae0; ret; 
0x000a0913: mov eax, dword ptr [eax]; cmp eax, 0xffff; jbe 0xa0920; ret; 
0x0008c94c: mov eax, dword ptr [eax]; mov dword ptr [ecx], eax; ret; 
0x00080d8a: mov eax, dword ptr [eax]; mov dword ptr [edx], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x00034632: mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00034581: mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00034602: mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x2c]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00034541: mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x2c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0004096f: mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x34]; add esp, 4; pop ebx; pop esi; ret; 
0x00032bae: mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x54]; ret; 
0x00178270: mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x00174040: mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x00173eec: mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push esi; push eax; call dword ptr [edx + 4]; 
0x00095ab0: mov eax, dword ptr [eax]; mov edx, dword ptr [esp + 8]; shr eax, 0x13; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0009aa18: mov eax, dword ptr [eax]; mov edx, dword ptr [esp + 8]; shr eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000e8908: mov eax, dword ptr [eax]; ret; 
0x00097f0c: mov eax, dword ptr [eax]; sar eax, 0x1c; and eax, 3; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0009285c: mov eax, dword ptr [eax]; sar eax, 1; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00097f2c: mov eax, dword ptr [eax]; shr eax, 0x1f; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000311cc: mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x0017813c: mov eax, dword ptr [eax]; sub esp, 0xc; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x00124533: mov eax, dword ptr [eax]; test eax, eax; je 0x124580; call eax; 
0x00124677: mov eax, dword ptr [eax]; test eax, eax; je 0x124718; call eax; 
0x00092a74: mov eax, dword ptr [ebp + 0x18]; mov ebx, dword ptr [esi + 0x68]; mov ecx, dword ptr [eax + 4]; mov edx, dword ptr [eax]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x00177611: mov eax, dword ptr [ebp + 0x3c]; push edi; call dword ptr [eax + 0x10]; 
0x0017460e: mov eax, dword ptr [ebp + 0xb0]; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x001351a7: mov eax, dword ptr [ebp + 4]; call 0x1345a0; pop edx; pop ecx; pop eax; ret; 
0x000e9ac3: mov eax, dword ptr [ebp - 0x2c]; push esi; call eax; 
0x00098286: mov eax, dword ptr [ebp - 0x3c]; add esp, 0x10; call eax; 
0x0012ca7a: mov eax, dword ptr [ebp - 0x3c]; push dword ptr [ebp - 0x38]; call eax; 
0x000e97be: mov eax, dword ptr [ebp - 0x3c]; push edi; call eax; 
0x00086296: mov eax, dword ptr [ebp - 0x3c]; sub esp, 0xc; push esi; call dword ptr [eax + 0x30]; 
0x000f1790: mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5b4]; call dword ptr [eax + 0x10]; 
0x000f1383: mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5b4]; call dword ptr [eax + 0x14]; 
0x000f16ec: mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5dc]; call dword ptr [eax + 0x18]; 
0x001863c5: mov eax, dword ptr [ebp - 0x5c]; push dword ptr [ebp - 0x60]; push 0x28; push edi; call eax; 
0x000f8a10: mov eax, dword ptr [ebp - 0x5d0]; push dword ptr [ebp - 0x5c4]; call dword ptr [eax + 0x10]; 
0x000f8603: mov eax, dword ptr [ebp - 0x5d0]; push dword ptr [ebp - 0x5c4]; call dword ptr [eax + 0x14]; 
0x000f896c: mov eax, dword ptr [ebp - 0x5d0]; push dword ptr [ebp - 0x5ec]; call dword ptr [eax + 0x18]; 
0x00179380: mov eax, dword ptr [ebx + 0x104]; pop ebx; pop esi; pop edi; ret; 
0x0016ef1c: mov eax, dword ptr [ebx + 0x10]; add esp, 0xc; push dword ptr [ebx + 0x229c]; push dword ptr [esp + 0x10]; push esi; call dword ptr [eax + 0xc]; 
0x000868d2: mov eax, dword ptr [ebx + 0x10]; mov dword ptr [ebx + 0x14], eax; add esp, 8; pop ebx; ret; 
0x0016ef0c: mov eax, dword ptr [ebx + 0x10]; push 0; push esi; call dword ptr [eax + 0x14]; 
0x0016ee13: mov eax, dword ptr [ebx + 0x10]; push dword ptr [esp + 0x14]; push esi; call dword ptr [eax + 4]; 
0x0016ee5d: mov eax, dword ptr [ebx + 0x10]; push esi; call dword ptr [eax + 0x10]; 
0x0016f083: mov eax, dword ptr [ebx + 0x10]; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x001704a3: mov eax, dword ptr [ebx + 0x14]; add esp, 4; pop ebx; pop esi; jmp eax; 
0x001792e8: mov eax, dword ptr [ebx + 0x174]; pop ebx; pop esi; pop edi; ret; 
0x00179410: mov eax, dword ptr [ebx + 0x190]; pop ebx; pop esi; pop edi; ret; 
0x001794a0: mov eax, dword ptr [ebx + 0x1a0]; pop ebx; pop esi; pop edi; ret; 
0x000a6d7d: mov eax, dword ptr [ebx + 0x20]; je 0xa6d90; sub esp, 8; push ecx; push dword ptr [ebx + 0x24]; call eax; 
0x00170ead: mov eax, dword ptr [ebx + 0x2398]; push esi; call dword ptr [eax + 0x10]; 
0x00176b28: mov eax, dword ptr [ebx + 0x50]; push dword ptr [ebx + 0x48]; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x00176b44: mov eax, dword ptr [ebx + 0x50]; push dword ptr [esp + 0x30]; push esi; call dword ptr [eax + 4]; 
0x00173eaa: mov eax, dword ptr [ebx + 0xb0]; push dword ptr [ebx + 0xa8]; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x00173ecc: mov eax, dword ptr [ebx + 0xb0]; push dword ptr [esp + 0x30]; push esi; call dword ptr [eax + 4]; 
0x0010e3c4: mov eax, dword ptr [ebx + 0xc]; mov dword ptr [ebx + 0xc], eax; mov eax, 0xfffffff2; pop ebx; ret; 
0x0008f5ed: mov eax, dword ptr [ebx + 0xc]; pop ebx; pop esi; sub ecx, edx; lea eax, [ecx + eax + 0x4000]; ret; 
0x0017a9e0: mov eax, dword ptr [ebx + 0xc]; push edi; call dword ptr [eax + 0x10]; 
0x001715ad: mov eax, dword ptr [ebx + 0xc]; sub esi, eax; push esi; push eax; push dword ptr [ebx]; call dword ptr [ebx + 8]; 
0x0016fb13: mov eax, dword ptr [ebx + 4]; add esi, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x0016f72d: mov eax, dword ptr [ebx + 4]; add esp, 0x14; push ebx; call dword ptr [eax + 0x10]; 
0x0016fb26: mov eax, dword ptr [ebx + 4]; pop edx; push edi; push ebx; call dword ptr [eax + 0x14]; 
0x0017548e: mov eax, dword ptr [ebx + 4]; push 8; push ebx; call dword ptr [eax + 0x18]; 
0x0017146d: mov eax, dword ptr [ebx + 4]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax + 4]; 
0x001714bb: mov eax, dword ptr [ebx + 4]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax]; 
0x0016f60e: mov eax, dword ptr [ebx + 4]; push ebx; call dword ptr [eax + 0x10]; 
0x001754d3: mov eax, dword ptr [ebx + 4]; push esi; push ebx; call dword ptr [eax + 0x24]; 
0x0016faf0: mov eax, dword ptr [ebx + 4]; sub esp, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x0008dd20: mov eax, dword ptr [ebx + 8]; mov dword ptr [eax], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x00136e3b: mov eax, dword ptr [ebx + 8]; mov dword ptr [ebx + 8], edx; add esp, 8; pop ebx; ret; 
0x00179c63: mov eax, dword ptr [ebx + 8]; push dword ptr [esp + 0x14]; push ebx; call dword ptr [eax]; 
0x00179e62: mov eax, dword ptr [ebx + 8]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax + 0xc]; 
0x0008e23b: mov eax, dword ptr [ebx + 8]; push dword ptr [esp + 0x30]; push edx; push ecx; call eax; 
0x00179ec3: mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 0x14]; 
0x00179db3: mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 4]; 
0x0009811c: mov eax, dword ptr [ebx + 8]; test eax, eax; je 0x98135; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x0012c642: mov eax, dword ptr [ebx + 8]; test eax, eax; jne 0x12c668; sub esp, 0xc; push dword ptr [ebx]; call esi; 
0x001a5962: mov eax, dword ptr [ebx + eax*4 - 0x86474]; sub eax, ecx; pop ebp; pop ebx; ret; 
0x001a3155: mov eax, dword ptr [ebx + eax*4 - 0x86474]; sub eax, ecx; pop ebx; ret; 
0x00170b94: mov eax, dword ptr [ebx + ecx*4 - 0x138]; mov dword ptr [esp + 0x10], edx; pop ebx; pop esi; jmp eax; 
0x00033a8c: mov eax, dword ptr [ebx + esi*4 - 0x814]; test eax, eax; je 0x33a99; call eax; 
0x00178a79: mov eax, dword ptr [ebx]; add esp, 0x10; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x0018c415: mov eax, dword ptr [ebx]; add esp, 4; pop ebx; pop esi; jmp eax; 
0x0017826e: mov eax, dword ptr [ebx]; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x00178148: mov eax, dword ptr [ebx]; mov edx, dword ptr [eax + 4]; mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x0008e164: mov eax, dword ptr [ebx]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x3c]; push ecx; call eax; 
0x00092d39: mov eax, dword ptr [ecx + 0x228]; push edx; call eax; 
0x00134783: mov eax, dword ptr [ecx + 0x4794]; add word ptr [eax + ebx*2], 1; pop ebx; ret; 
0x00086818: mov eax, dword ptr [ecx + 0xc]; xor edx, edx; test eax, eax; setne dl; mov eax, edx; ret; 
0x000b5ae4: mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; pop edi; ret; 
0x000b5c14: mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; ret; 
0x000bfea7: mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000b1704: mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edi; pop edi; ret; 
0x000b1834: mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edx; ret; 
0x0014efaf: mov eax, dword ptr [ecx + 4]; cmp dword ptr [edx + 0x14], eax; sete al; pop ebx; movzx eax, al; ret; 
0x000ba4c4: mov eax, dword ptr [ecx + 4]; mov dword ptr [edx + 4], eax; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000ba524: mov eax, dword ptr [ecx + 4]; mov dword ptr [edx + 4], eax; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000b8e74: mov eax, dword ptr [ecx + 4]; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x000b5ac5: mov eax, dword ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, [edx + 5]; pop edi; ret; 
0x000b5c05: mov eax, dword ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, [edx + 5]; ret; 
0x000b16f5: mov eax, dword ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edi; pop edi; ret; 
0x000b1825: mov eax, dword ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x000ba3aa: mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x000ba50a: mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000b8d6a: mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000b8eca: mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000b5c74: mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000b1894: mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000ba3ca: mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x000ba52a: mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000bff3b: mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000b8d8a: mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x000b8eea: mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000ba38b: mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x000ba4eb: mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000bfefc: mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop ebx; pop edi; ret; 
0x000b8d4b: mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000b8eab: mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000b5c94: mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000b18b4: mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000b5c55: mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000b1875: mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000816a2: mov eax, dword ptr [ecx + 8]; pop ebx; sub eax, edx; ret; 
0x0008c99b: mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x0003457e: mov eax, dword ptr [ecx + eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0003453e: mov eax, dword ptr [ecx + eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x2c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x000a952a: mov eax, dword ptr [ecx + edx*4 - 0xd14]; ret; 
0x000a94fa: mov eax, dword ptr [ecx + edx*4 - 0xe34]; ret; 
0x000928f1: mov eax, dword ptr [ecx]; and eax, 0xfffffffe; or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x000b59b0: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; lea eax, [edx + 3]; pop edi; ret; 
0x000b5be0: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; lea eax, [edx + 3]; ret; 
0x000b77dd: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; lea eax, [edx + 4]; pop edi; pop ebx; ret; 
0x000b5bf0: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; lea eax, [edx + 4]; ret; 
0x000b1810: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; mov eax, edx; ret; 
0x000b5c00: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, [edx + 5]; ret; 
0x000b1820: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x000b5c10: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; ret; 
0x000b1830: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edx; ret; 
0x000b8e70: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 4]; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x000bfe53: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000b33ed: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edi; pop edi; pop ebx; ret; 
0x000b15f0: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x000b44a0: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; pop ebx; ret; 
0x000b1800: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; ret; 
0x0017410b: mov eax, dword ptr [ecx]; mov ecx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [ecx + 8]; 
0x000b5a81: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; pop edi; ret; 
0x000b5bc1: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; ret; 
0x000b5bd1: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; ret; 
0x000b17f1: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x000bfe24: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop ebx; pop edi; ret; 
0x000b16c1: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x000b17e1: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; mov eax, edx; ret; 
0x000c21df: mov eax, dword ptr [ecx]; retf 0xce01; jmp ebx; 
0x0008131e: mov eax, dword ptr [edi + 0x10]; pop esi; pop edi; jmp eax; 
0x000811ce: mov eax, dword ptr [edi + 0x14]; pop esi; pop edi; jmp eax; 
0x00177085: mov eax, dword ptr [edi + 0x50]; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x00115224: mov eax, dword ptr [edi + 0xc]; mov dword ptr [esp + 0x28], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00170902: mov eax, dword ptr [edi + 4]; and ebp, 0xfffffffc; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x0017080c: mov eax, dword ptr [edi + 4]; push 0x20; push edi; call dword ptr [eax + 0x18]; 
0x001708be: mov eax, dword ptr [edi + 4]; push 8; push edi; call dword ptr [eax + 0x18]; 
0x00179071: mov eax, dword ptr [edi + 4]; push edi; call dword ptr [eax + 0x10]; 
0x001710bb: mov eax, dword ptr [edi + 8]; push ebp; push dword ptr [esi + 0xc]; push edi; call dword ptr [eax + 0x10]; 
0x00171078: mov eax, dword ptr [edi + 8]; push ebp; push dword ptr [esi + 0xc]; push edi; call dword ptr [eax + 8]; 
0x0008fd66: mov eax, dword ptr [edi]; mov ebx, dword ptr [edi + 4]; mov ecx, dword ptr [edi + 8]; mov edx, dword ptr [edi + 0xc]; call dword ptr gs:[0x10]; 
0x0016ee29: mov eax, dword ptr [edi]; sub esp, 8; mov edx, dword ptr [eax + 0x20]; push esi; push eax; call dword ptr [edx + 4]; 
0x000c3100: mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1c8]; ret; 
0x000c3110: mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1cc]; ret; 
0x000c3120: mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1d0]; ret; 
0x000c3130: mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1d4]; ret; 
0x000c3140: mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1d8]; ret; 
0x000c3150: mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1dc]; ret; 
0x000c3160: mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1e0]; ret; 
0x000c3170: mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1e4]; ret; 
0x000c3180: mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1e8]; ret; 
0x000c3190: mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1ec]; ret; 
0x000c31a0: mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x000c30f0: mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x0012575f: mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0xc]; test eax, eax; je 0x12576d; ret; 
0x00086912: mov eax, dword ptr [edx + 0x10]; sub eax, dword ptr [edx + 0xc]; sar eax, 2; ret; 
0x00086920: mov eax, dword ptr [edx + 0x14]; sub eax, dword ptr [edx + 0x10]; ret; 
0x000867e2: mov eax, dword ptr [edx + 0x1c]; sub eax, dword ptr [edx + 0x18]; sar eax, 2; ret; 
0x00178a72: mov eax, dword ptr [edx + 0x20]; push edx; call dword ptr [eax + 0x10]; 
0x000867f0: mov eax, dword ptr [edx + 0x20]; sub eax, dword ptr [edx + 0x1c]; ret; 
0x0009a5eb: mov eax, dword ptr [edx + 0x80]; and eax, 0x39; cmp eax, 8; je 0x9a5fa; ret; 
0x0012dd8f: mov eax, dword ptr [edx + 0xa0]; mov dword ptr [esp + 0x6c], eax; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x0013d8a4: mov eax, dword ptr [edx + 0xbc]; push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x66130; add esp, 0x1c; ret; 
0x0013e984: mov eax, dword ptr [edx + 0xbc]; push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x72650; add esp, 0x1c; ret; 
0x0017ca18: mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x0014eff6: mov eax, dword ptr [edx + 4]; cmp dword ptr [ecx + 4], eax; sete al; pop ebx; movzx eax, al; ret; 
0x0008c928: mov eax, dword ptr [edx + 4]; lea ecx, [eax + 0x30]; mov eax, dword ptr [eax + 0x30]; test eax, eax; jne 0x8c948; ret; 
0x0017c700: mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x20]; 
0x0017c6dc: mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x24]; 
0x001713ec: mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x00171410: mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0017c7b9: mov eax, dword ptr [edx + 4]; push ecx; push edx; call dword ptr [eax + 0x24]; 
0x0017bd09: mov eax, dword ptr [edx + 4]; push ecx; push edx; call dword ptr [eax + 4]; 
0x00122800: mov eax, dword ptr [edx + 8]; and eax, 0x100f; ret; 
0x0008d368: mov eax, dword ptr [edx + 8]; mov ecx, dword ptr [edx + 0x14]; cmp eax, ecx; cmovb eax, ecx; sub eax, dword ptr [edx + 0xc]; ret; 
0x000a634d: mov eax, dword ptr [edx + eax + 4]; sub ecx, 4; and eax, 1; cmovne eax, ecx; pop ebx; ret; 
0x00032bab: mov eax, dword ptr [edx + eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x54]; ret; 
0x0003403b: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0003462b: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x000345fb: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x2c]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x000344fb: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x000344cb: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x0003449b: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x000343db: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x0003443b: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x0003434b: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x0003440b: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x000343ab: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x000345ab: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x0003437b: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x0003446b: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x0003431b: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x0014b10b: mov eax, dword ptr [edx + eax]; ret; 
0x0008f9a8: mov eax, dword ptr [edx]; mov ebx, dword ptr [edx + 4]; mov ecx, dword ptr [edx + 8]; mov edx, dword ptr [edx + 0xc]; call dword ptr gs:[0x10]; 
0x000811fd: mov eax, dword ptr [edx]; pop ebx; pop esi; pop edi; ret; 
0x0008136d: mov eax, dword ptr [edx]; pop esi; pop edi; ret; 
0x0007f37b: mov eax, dword ptr [edx]; ret; 
0x000890be: mov eax, dword ptr [esi + 0x10]; pop esi; pop edi; jmp eax; 
0x0016ff4e: mov eax, dword ptr [esi + 0x20]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0011b244: mov eax, dword ptr [esi + 0x20]; push dword ptr [eax + ecx]; push edx; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x000fd3c8: mov eax, dword ptr [esi + 0x3c]; add esp, 4; pop ebx; pop esi; ret; 
0x00177dd9: mov eax, dword ptr [esi + 0x3c]; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x0018b979: mov eax, dword ptr [esi + 4]; pop ebx; pop esi; pop edi; movzx eax, byte ptr [eax]; ret; 
0x0017c151: mov eax, dword ptr [esi + 4]; push ebx; push esi; call dword ptr [eax + 4]; 
0x00177c0b: mov eax, dword ptr [esi]; sub esp, 0xc; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x001775dd: mov eax, dword ptr [esi]; sub esp, 8; mov edx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [edx + 4]; 
0x0013e491: mov eax, dword ptr [esp + 0x10]; add esp, 4; pop ebx; pop esi; ret; 
0x0003b8e4: mov eax, dword ptr [esp + 0x10]; and eax, 0x80000000; ret; 
0x000410a4: mov eax, dword ptr [esp + 0x10]; call eax; 
0x0003ba21: mov eax, dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; fadd st(0); mov dword ptr [eax], ecx; ret; 
0x0003ba16: mov eax, dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00192ba4: mov eax, dword ptr [esp + 0x10]; mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x00134ac9: mov eax, dword ptr [esp + 0x10]; mov eax, dword ptr [eax + 0x4c]; call 0x134990; add esp, 4; ret; 
0x000942a9: mov eax, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x000c2bbf: mov eax, dword ptr [esp + 0x10]; pop ebx; pop esi; pop edi; ret; 
0x00145e21: mov eax, dword ptr [esp + 0x10]; sub eax, ebx; add esp, 8; pop ebx; ret; 
0x0012b8bc: mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00024d91: mov eax, dword ptr [esp + 0x14]; call eax; 
0x00065116: mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [ecx + edx*4 - 0x73f14]; jmp eax; 
0x000658a0: mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [edi + edx*4]; mov edi, ecx; jmp eax; 
0x0006488d: mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [esi + edx*4 - 0x73e94]; jmp eax; 
0x00066028: mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [esi + edx*4 - 0x74014]; jmp eax; 
0x00175b1f: mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x0018b2ae: mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x40]; 
0x00114411: mov eax, dword ptr [esp + 0x18]; call eax; 
0x0016ebaf: mov eax, dword ptr [esp + 0x18]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x000a0759: mov eax, dword ptr [esp + 0x1c]; mov dword ptr [esp], eax; call esi; 
0x0017b89b: mov eax, dword ptr [esp + 0x1c]; sub eax, dword ptr gs:[0x14]; jne 0x17b8ac; add esp, 0x2c; ret; 
0x000650b2: mov eax, dword ptr [esp + 0x20]; add edi, dword ptr [eax + edx*4 - 0x73f94]; mov edx, edi; mov edi, ecx; jmp edx; 
0x00064bf2: mov eax, dword ptr [esp + 0x20]; add edi, dword ptr [eax + edx*4 - 0x74094]; mov edx, edi; mov edi, ecx; jmp edx; 
0x0016ee49: mov eax, dword ptr [esp + 0x20]; call eax; 
0x0010d29f: mov eax, dword ptr [esp + 0x23c]; mov dword ptr [esp + 0xac], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0008df83: mov eax, dword ptr [esp + 0x24]; call eax; 
0x0013184e: mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00170c1d: mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x18]; 
0x00041716: mov eax, dword ptr [esp + 0x28]; call eax; 
0x00041742: mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 0x24], edx; call eax; 
0x0013144d: mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001628db: mov eax, dword ptr [esp + 0x2c]; call eax; 
0x0002f150: mov eax, dword ptr [esp + 0x34]; call eax; 
0x00083de3: mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x000c4116: mov eax, dword ptr [esp + 0x38]; call eax; 
0x001313be: mov eax, dword ptr [esp + 0x38]; mov dword ptr [esp + 0xc], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00131f07: mov eax, dword ptr [esp + 0x38]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00173f09: mov eax, dword ptr [esp + 0x3c]; call eax; 
0x0013276e: mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00179931: mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x179942; add esp, 0x4c; ret; 
0x001799a1: mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x1799b2; add esp, 0x4c; ret; 
0x00179a11: mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x179a22; add esp, 0x4c; ret; 
0x00179a74: mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x179a85; add esp, 0x4c; ret; 
0x00179ad4: mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x179ae5; add esp, 0x4c; ret; 
0x00179b41: mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x179b52; add esp, 0x4c; ret; 
0x00179bc1: mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x179bd2; add esp, 0x4c; ret; 
0x00131a28: mov eax, dword ptr [esp + 0x40]; mov dword ptr [esp + 0x14], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000c3ddf: mov eax, dword ptr [esp + 0x40]; push dword ptr [eax]; call edi; 
0x0015f7b8: mov eax, dword ptr [esp + 0x44]; call eax; 
0x001322b7: mov eax, dword ptr [esp + 0x44]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00175e96: mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x10]; 
0x00175d3c: mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x14]; 
0x000285ec: mov eax, dword ptr [esp + 0x48]; call eax; 
0x00064ba1: mov eax, dword ptr [esp + 0x4c]; add edi, dword ptr [eax + edx*4]; mov edx, edi; mov edi, ecx; jmp edx; 
0x00029d6a: mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0002c8bc: mov eax, dword ptr [esp + 0x54]; call eax; 
0x00170278: mov eax, dword ptr [esp + 0x5c]; call eax; 
0x00132366: mov eax, dword ptr [esp + 0x60]; mov dword ptr [esp + 0x24], esi; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000dad41: mov eax, dword ptr [esp + 0x64]; call eax; 
0x001315fe: mov eax, dword ptr [esp + 0x68]; mov dword ptr [esp + 0x30], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00122a35: mov eax, dword ptr [esp + 0x74]; lea ecx, [eax + 0x5402]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0016ff9c: mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x0009e0ed: mov eax, dword ptr [esp + 0xb4]; mov dword ptr [esp + 0x20], eax; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x0003d89e: mov eax, dword ptr [esp + 0xb8]; mov dword ptr [esp + 0x20], eax; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x0009a52c: mov eax, dword ptr [esp + 0xc8]; mov dword ptr [esp + 0x30], eax; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x001375a0: mov eax, dword ptr [esp + 0xc]; add eax, 0x2000001; push eax; call dword ptr [ebp + 0x14]; 
0x0003ca43: mov eax, dword ptr [esp + 0xc]; add esp, 0x14; pop ebx; pop esi; ret; 
0x000611fe: mov eax, dword ptr [esp + 0xc]; add esp, 0x18; pop ebx; ret; 
0x0003bdc7: mov eax, dword ptr [esp + 0xc]; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x000904b6: mov eax, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x000a6b50: mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax + 0x90]; call dword ptr [eax]; 
0x00133b98: mov eax, dword ptr [esp + 0xc]; mov edx, dword ptr [edx]; mov dword ptr [eax], edx; mov eax, 1; ret; 
0x0003b9a0: mov eax, dword ptr [esp + 0xc]; or eax, 0xffff8000; inc eax; shr eax, 0x1f; ret; 
0x000c0a42: mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x001ab9a2: mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x001570ad: mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x1570be; add esp, 0x1c; ret; 
0x0017a0b2: mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x17a0c3; add esp, 0x1c; ret; 
0x0017a101: mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x17a13c; add esp, 0x1c; ret; 
0x0003efe5: mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x3eff6; add esp, 0x1c; ret; 
0x0003f0f8: mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x3f109; add esp, 0x1c; ret; 
0x0017cdd4: mov eax, dword ptr [esp + 4]; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x00141ae4: mov eax, dword ptr [esp + 4]; add eax, 9; and eax, 0xfffffff8; add eax, 0xc; ret; 
0x00090800: mov eax, dword ptr [esp + 4]; and dword ptr [eax + 8], 0xfffffffb; xor eax, eax; ret; 
0x000875c4: mov eax, dword ptr [esp + 4]; and dword ptr [eax], 0xffffffcf; ret; 
0x00034644: mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x0013f614: mov eax, dword ptr [esp + 4]; bswap eax; ret; 
0x0008e94f: mov eax, dword ptr [esp + 4]; cmp dword ptr [eax], 1; je 0x8e960; ret; 
0x0009a590: mov eax, dword ptr [esp + 4]; lock dec dword ptr [eax]; jne 0x9a5a0; xor eax, eax; ret; 
0x0010ce3a: mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x108], edx; xor eax, eax; ret; 
0x0010ce62: mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x00090910: mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x14], edx; xor eax, eax; ret; 
0x00099ac4: mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 0; mov dword ptr [eax + 4], 0; xor eax, eax; ret; 
0x00090c14: mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x0009a5d0: mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 1; xor eax, eax; ret; 
0x00152854: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x10]; ret; 
0x0017ce14: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x0017a8e0: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x30]; add eax, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0008ccc4: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x001897b4: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x001897d4: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x50]; ret; 
0x00189864: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x54]; ret; 
0x00189854: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x001897e4: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x0009e074: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x64]; ret; 
0x001227d4: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x00189798: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + edx*4]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x00086884: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x00086834: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x804; ret; 
0x000a08cf: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0x3fc; jbe 0xa08e0; ret; 
0x000a0acf: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0x50; jbe 0xa0ae0; ret; 
0x000a090f: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0xffff; jbe 0xa0920; ret; 
0x000e8904: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; ret; 
0x0017cdf4: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 0xc]; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x00114614: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x110], edx; xor eax, eax; ret; 
0x001897c4: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x000906f4: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x0010ce14: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x0008c964: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x00189774: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x000311c4: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x0010ce04: mov eax, dword ptr [esp + 4]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x000875d4: mov eax, dword ptr [esp + 4]; movzx eax, byte ptr [eax]; shr al, 4; and eax, 1; ret; 
0x000875f4: mov eax, dword ptr [esp + 4]; movzx eax, byte ptr [eax]; shr al, 5; and eax, 1; ret; 
0x0008ccd4: mov eax, dword ptr [esp + 4]; ret; 
0x0008a864: mov eax, dword ptr [esp + 4]; test byte ptr [eax], 0x80; jne 0x8a870; ret; 
0x000c2561: mov eax, dword ptr [esp + 8]; cld; pop edi; ret; 
0x000941b4: mov eax, dword ptr [esp + 8]; cmp dword ptr [esp + 4], eax; sete al; movzx eax, al; ret; 
0x0003c0ef: mov eax, dword ptr [esp + 8]; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x000903bb: mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x00140385: mov eax, dword ptr [esp + 8]; mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; 
0x001989a6: mov eax, dword ptr [esp + 8]; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x0007c15b: mov eax, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x000347c4: mov eax, dword ptr [esp + 8]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x000347e4: mov eax, dword ptr [esp + 8]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0003c4fb: mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x0010cccb: mov eax, dword ptr [esp + 8]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x00193275: mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000c2537: mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000bd622: mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0015a0aa: mov eax, dword ptr [esp]; call eax; 
0x00033a86: mov eax, dword ptr [esp]; mov dword ptr [eax + esi*4], ecx; mov eax, dword ptr [ebx + esi*4 - 0x814]; test eax, eax; je 0x33a99; call eax; 
0x00189c25: mov eax, dword ptr [esp]; ret; 
0x00042c68: mov eax, dword ptr fs:[0xc4830016]; sbb byte ptr [ecx + 0x20b8c2], cl; add byte ptr [eax], al; pop ebx; sub eax, edx; ret; 
0x0002d0a8: mov eax, dword ptr fs:[esp + 0x54]; call eax; 
0x0017916a: mov eax, dword ptr gs:[0]; mov dword ptr [eax + edx], ecx; ret; 
0x00099480: mov eax, dword ptr gs:[0x68]; mov dword ptr [edx + 0x1c], eax; xor eax, eax; pop ebx; ret; 
0x000fb5e3: mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0xfb608; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x000ea079: mov eax, dword ptr gs:[8]; mov ebx, 0x1200011; lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x00099b44: mov eax, dword ptr gs:[8]; ret; 
0x00094bc4: mov eax, dword ptr gs:[8]; xor edx, edx; lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x0008e6db: mov eax, ebp; call dword ptr gs:[0x10]; 
0x000417fb: mov eax, ebp; imul eax, esi; add eax, edi; push eax; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0018c56b: mov eax, ebp; mov edx, ecx; mov esi, ecx; call dword ptr gs:[0x10]; 
0x000913f6: mov eax, ebp; or edx, 2; call dword ptr gs:[0x10]; 
0x000536d5: mov eax, ebp; pop ebx; pop ebp; pop esi; pop edi; ret; 
0x0003b765: mov eax, ebp; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x00029775: mov eax, ebp; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0003dfbc: mov eax, ebp; pop edi; pop ebp; ret; 
0x00034fe6: mov eax, ebp; pop esi; pop edi; pop ebp; ret; 
0x000c6a7b: mov eax, ebx; add esp, 4; pop ebx; pop esi; ret; 
0x0015a23f: mov eax, ebx; call eax; 
0x000c1d30: mov eax, ebx; cmovne eax, edx; add esp, 0x14; pop ebx; pop esi; ret; 
0x000a84f9: mov eax, ebx; cmovne eax, edx; add esp, 0x18; pop ebx; ret; 
0x001416f8: mov eax, ebx; mov byte ptr [ecx + edx], 0; pop ebx; ret; 
0x0008762f: mov eax, ebx; mov byte ptr [edx], cl; pop ebx; pop esi; ret; 
0x00128795: mov eax, ebx; pop ebx; and edx, 0xfff; and eax, 0xfffff000; or eax, edx; ret; 
0x00170dfa: mov eax, ebx; pop ebx; pop esi; jmp eax; 
0x000384ed: mov eax, ebx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0013ec7a: mov eax, ebx; pop ebx; pop esi; pop edi; ret 4; 
0x00033fba: mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0008e63d: mov eax, ebx; pop ebx; pop esi; ret; 
0x0003b07a: mov eax, ebx; pop ebx; pop esi; shr eax, 0x1f; pop edi; ret; 
0x00055777: mov eax, ebx; pop ebx; ret 4; 
0x00061f5e: mov eax, ebx; pop ebx; ret; 
0x00141fcf: mov eax, ebx; shl eax, 4; lea eax, [edx + eax + 8]; pop ebx; ret; 
0x0003efa3: mov eax, ecx; mov dword ptr [ecx + 4], edx; ret 4; 
0x00080052: mov eax, ecx; mov dword ptr [edx], ecx; pop ebx; ret; 
0x0007f1e3: mov eax, ecx; mov dword ptr [edx], edi; pop ebx; pop esi; pop edi; ret; 
0x000291a9: mov eax, ecx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000dbb73: mov eax, ecx; pop ebx; pop esi; pop edi; ret; 
0x000d9831: mov eax, ecx; pop ebx; pop esi; ret; 
0x0009fe11: mov eax, ecx; pop ebx; ret; 
0x0008d2d1: mov eax, ecx; pop edi; pop ebp; ret; 
0x0007f1f7: mov eax, ecx; pop edi; ret; 
0x0003073b: mov eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x00114175: mov eax, ecx; pop esi; pop edi; ret; 
0x00142113: mov eax, ecx; ret 4; 
0x00033e9c: mov eax, ecx; ret; 
0x00091489: mov eax, edi; call dword ptr gs:[0x10]; 
0x0004170e: mov eax, edi; imul eax, ebp; add eax, ebx; push eax; mov eax, dword ptr [esp + 0x28]; call eax; 
0x00103021: mov eax, edi; mov dword ptr [esi + 0x20], ecx; pop ebx; pop esi; pop edi; ret; 
0x000bfda9: mov eax, edi; pop ebx; pop edi; ret; 
0x0002f8ab: mov eax, edi; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00061ecc: mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x0003360c: mov eax, edi; pop edi; pop ebp; ret; 
0x000b33f1: mov eax, edi; pop edi; pop ebx; ret; 
0x000b9fa0: mov eax, edi; pop edi; pop esi; pop ebx; ret; 
0x000b15f4: mov eax, edi; pop edi; ret; 
0x0003363f: mov eax, edi; pop esi; pop edi; pop ebp; ret; 
0x0009c070: mov eax, edi; sub esp, 0xc; mov edi, dword ptr [edi + 0xc]; push dword ptr [eax + 4]; call dword ptr [eax]; 
0x00090969: mov eax, edi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0003ad7f: mov eax, edx; add esp, 0x1c; ret 4; 
0x00034e16: mov eax, edx; add esp, 0xc; ret; 
0x0005b730: mov eax, edx; call 0x5b4d0; mov eax, 1; add esp, 0xc; ret; 
0x000790e0: mov eax, edx; call 0x78e40; mov eax, 1; add esp, 0xc; ret; 
0x00024dc0: mov eax, edx; call dword ptr gs:[0x10]; 
0x000abe03: mov eax, edx; mov byte ptr [edx + 2], 0; pop ebx; pop esi; ret; 
0x0019444e: mov eax, edx; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x00188e1e: mov eax, edx; mov edx, dword ptr [ecx + 0x108]; shl eax, 5; lea eax, [eax + edx + 0x5c]; ret; 
0x0003dc48: mov eax, edx; neg eax; cmovs eax, edx; ret; 
0x001558ef: mov eax, edx; pop ebx; pop edi; ret; 
0x000262d3: mov eax, edx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0013f7b5: mov eax, edx; pop ebx; pop esi; pop edi; ret; 
0x00059f0f: mov eax, edx; pop ebx; pop esi; ret 4; 
0x00053e7a: mov eax, edx; pop ebx; pop esi; ret; 
0x00033426: mov eax, edx; pop ebx; ret; 
0x000abc74: mov eax, edx; pop edi; pop ebp; ret; 
0x001948b1: mov eax, edx; pop edi; pop esi; pop ebx; ret; 
0x0003eaac: mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x00053781: mov eax, edx; pop esi; pop edi; ret; 
0x00033414: mov eax, edx; ret; 
0x0003adc9: mov eax, edx; shr eax, 0x1f; ret; 
0x0009118d: mov eax, edx; shr eax, 1; je 0x911a9; xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x000916ed: mov eax, edx; shr eax, 1; je 0x9170c; xor esi, esi; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00091482: mov eax, edx; shr eax, 3; je 0x914b8; mov eax, edi; call dword ptr gs:[0x10]; 
0x000b3aa8: mov eax, edx; sub ebx, 0x10; lea ecx, [edx + 0x10]; jne 0xb3801; pop ebx; ret; 
0x000b39c0: mov eax, edx; sub ebx, 0xa; lea ecx, [edx + 0xa]; jne 0xb3801; pop ebx; ret; 
0x000b39de: mov eax, edx; sub ebx, 0xb; lea ecx, [edx + 0xb]; jne 0xb3801; pop ebx; ret; 
0x000b39fe: mov eax, edx; sub ebx, 0xc; lea ecx, [edx + 0xc]; jne 0xb3801; pop ebx; ret; 
0x000b3a22: mov eax, edx; sub ebx, 0xd; lea ecx, [edx + 0xd]; jne 0xb3801; pop ebx; ret; 
0x000b3a52: mov eax, edx; sub ebx, 0xe; lea ecx, [edx + 0xe]; jne 0xb3801; pop ebx; ret; 
0x000b3a82: mov eax, edx; sub ebx, 0xf; lea ecx, [edx + 0xf]; jne 0xb3801; pop ebx; ret; 
0x000b3894: mov eax, edx; sub ebx, 1; lea ecx, [edx + 1]; jne 0xb3801; pop ebx; ret; 
0x000b38b6: mov eax, edx; sub ebx, 2; lea ecx, [edx + 2]; jne 0xb3801; pop ebx; ret; 
0x000b38dc: mov eax, edx; sub ebx, 3; lea ecx, [edx + 3]; jne 0xb3801; pop ebx; ret; 
0x000b38f4: mov eax, edx; sub ebx, 4; lea ecx, [edx + 4]; jne 0xb3801; pop ebx; ret; 
0x000b391a: mov eax, edx; sub ebx, 5; lea ecx, [edx + 5]; jne 0xb3801; pop ebx; ret; 
0x000b393c: mov eax, edx; sub ebx, 6; lea ecx, [edx + 6]; jne 0xb3801; pop ebx; ret; 
0x000b395a: mov eax, edx; sub ebx, 7; lea ecx, [edx + 7]; jne 0xb3801; pop ebx; ret; 
0x000b3978: mov eax, edx; sub ebx, 8; lea ecx, [edx + 8]; jne 0xb3801; pop ebx; ret; 
0x000b399e: mov eax, edx; sub ebx, 9; lea ecx, [edx + 9]; jne 0xb3801; pop ebx; ret; 
0x000429ed: mov eax, edx; xor edx, edx; ret; 
0x000c8ae5: mov eax, es; stc; call dword ptr [eax + 0x56]; 
0x00088bf2: mov eax, esi; add esp, 4; pop ebx; pop esi; ret; 
0x0018c44f: mov eax, esi; dec dword ptr [ebp + 0xb6]; add byte ptr [eax + 0x16], bh; pop ebx; ret; 
0x000407c5: mov eax, esi; mov dword ptr [esi + 0xc], edx; add esp, 0x34; pop ebx; pop esi; ret 4; 
0x00089147: mov eax, esi; movzx eax, al; pop ebx; pop esi; pop edi; ret; 
0x0005b5d7: mov eax, esi; pop ebx; pop esi; movzx eax, al; pop edi; ret; 
0x0003abbd: mov eax, esi; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x0002dd87: mov eax, esi; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00046e86: mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000a760a: mov eax, esi; pop ebx; pop esi; ret 4; 
0x000610a9: mov eax, esi; pop ebx; pop esi; ret; 
0x000386c2: mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x00041a2f: mov eax, esi; pop esi; pop edi; ret; 
0x0010d629: mov eax, esi; push dword ptr [esi + 0x18]; push dword ptr [esi + 8]; call dword ptr [eax + 0xc]; 
0x000c18a1: mov ebp, 0x10ea83c0; add edx, eax; jl 0xc18b0; lea eax, [ecx + eax + 0x30]; ret; 
0x00042a3e: mov ebp, 0x1c083c0; ret; 
0x00042d0d: mov ebp, 0x1ff083c0; add eax, 1; ret; 
0x00042dd2: mov ebp, 0x1ff083c0; lea edx, [eax + 1]; mov eax, edx; ret; 
0x00043188: mov ebp, 0x1ff083c0; lea edx, [eax - 0x10]; mov eax, edx; ret; 
0x00042cf2: mov ebp, 0x1ff083c0; lea edx, [eax - 0x17]; mov eax, edx; ret; 
0x000430d8: mov ebp, 0x1ff083c0; lea edx, [eax - 0x18]; mov eax, edx; ret; 
0x00042d93: mov ebp, 0x1ff083c0; lea edx, [eax - 0xf]; mov eax, edx; ret; 
0x000c1a5b: mov ebp, 0x1ff083c0; sar eax, 3; sub edx, eax; lea ecx, [edx + 3]; mov eax, ecx; ret; 
0x00042d58: mov ebp, 0x1ff083c2; add eax, 1; pop ebx; ret; 
0x00043103: mov ebp, 0x1ff083c2; ret; 
0x00043151: mov ebp, 0x1ff183c9; lea eax, [ecx + 0x20]; pop ebx; ret; 
0x00042977: mov ebp, 0x1ff183c9; shr eax, cl; ret; 
0x00042e1f: mov ebp, 0x1ff183ca; add ecx, 1; pop ebx; mov eax, ecx; ret; 
0x00042aa8: mov ebp, 0x1ff283d1; mov eax, 0x40; pop ebx; sub eax, edx; ret; 
0x0004321d: mov ebp, 0x1ff383db; lea eax, [ebx + 0x20]; pop ebx; ret; 
0x000c1891: mov ebp, 0x20ea83c0; add edx, eax; jl 0xc18b0; lea eax, [ecx + eax + 0x20]; ret; 
0x0014d95f: mov ebp, 0x2efffffe; lea esi, [esi]; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x000c1881: mov ebp, 0x30ea83c0; add edx, eax; jl 0xc18b0; lea eax, [ecx + eax + 0x10]; ret; 
0x000c1972: mov ebp, 0x30f801ff; in eax, dx; add eax, ecx; pop edi; ret; 
0x000c1871: mov ebp, 0x40ea83c0; add edx, eax; jl 0xc18b0; add eax, ecx; ret; 
0x000a9451: mov ebp, 0x450ffff6; ret 0x66c3; 
0x001a80ef: mov ebp, 0x5b000000; ret; 
0x000c1126: mov ebp, 0x5ff801c0; ret; 
0x000c1935: mov ebp, 0x5ff801ff; ret; 
0x00178e5c: mov ebp, 0x8100010d; ret; 
0x00175a5c: mov ebp, 0x81000141; ret; 
0x0014175c: mov ebp, 0x81000484; ret; 
0x000a805c: mov ebp, 0x81000e1b; ret; 
0x0008fe5c: mov ebp, 0x81000f9d; ret; 
0x0008435c: mov ebp, 0x81001058; ret; 
0x0008115c: mov ebp, 0x8100108a; ret; 
0x00198f5c: mov ebp, 0x81ffff0c; ret; 
0x0018b85c: mov ebp, 0x81ffffe3; ret; 
0x0003dc58: mov ebp, 0x83002011; in al, dx; sbb byte ptr [ebp - 0x68a4380], cl; call dword ptr [eax - 0x18]; 
0x000891af: mov ebp, 0x83fffffa; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x000d77df: mov ebp, 0x89d189f0; ret; 
0x0013bbf9: mov ebp, 0x89fff945; ret 0x68b; 
0x0011709f: mov ebp, 0x89fffff0; ret; 
0x00148d5f: mov ebp, 0x89fffffd; ret 0xffb8; 
0x0013b605: mov ebp, 0x8bfffffe; inc ebx; and byte ptr [ebx - 0x137ce3ad], cl; add al, 0x83; ret; 
0x00122a63: mov ebp, 0xa4; mov ecx, 0x5401; mov ebp, dword ptr [eax + edi]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000eea30: mov ebp, 0xbafffff5; add dword ptr [eax + eax], eax; or byte ptr [edi], 0xa3; ret 0x830f; 
0x0019de6f: mov ebp, 0xc381fffe; jecxz 0x19de7a; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00177456: mov ebp, 0xc483ffea; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00117076: mov ebp, 0xc483fffa; adc byte ptr [ecx], bh; ret; 
0x001089f4: mov ebp, 0xf000001; mov dh, 0x43; add al, 0x89; ret 0xe283; 
0x00043231: mov ebp, 0xf0835bc2; pop ds; ret; 
0x0008e6cf: mov ebp, 0xf0; mov ecx, 0x80; xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x001444c8: mov ebp, 0xffff32e9; jmp dword ptr [esi - 0x70]; 
0x000588a6: mov ebp, 0xffffc9b0; add dword ptr [edi], ecx; xchg esp, eax; ret 0xc639; 
0x000d5646: mov ebp, 0xffffc9d0; adc byte ptr [edi], cl; xchg esp, eax; ret 0xf883; 
0x000567fb: mov ebp, 0xffffc9d8; adc byte ptr [ecx - 0x361f43], cl; dec dword ptr [ebx - 0x6bf06ff4]; ret 0xf980; 
0x00068462: mov ebp, 0xfffffa6c; dec dword ptr [edi]; xchg ebp, eax; ret; 
0x00067a77: mov ebp, 0xfffffa6c; xor byte ptr [edi], cl; xchg esp, eax; ret; 
0x0005ce67: mov ebp, 0xffffff64; add byte ptr [edi], cl; xchg ebp, eax; ret; 
0x00115b66: mov ebp, dword ptr [0x14]; mov dword ptr [esp + 0x18c], ebp; mov ebp, dword ptr [esp + 0x1b8]; call dword ptr gs:[0x10]; 
0x0003c4f7: mov ebp, dword ptr [eax + 0xc]; nop; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x00122a6d: mov ebp, dword ptr [eax + edi]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0013bf83: mov ebp, dword ptr [ecx + 0xc]; nop; jmp edx; 
0x001219f5: mov ebp, dword ptr [edi + 8]; mov edi, dword ptr [edi + 4]; call dword ptr gs:[0x10]; 
0x00115b73: mov ebp, dword ptr [esp + 0x1b8]; call dword ptr gs:[0x10]; 
0x00070cd7: mov ebp, dword ptr [esp + 0x40]; mov dword ptr [esp + 4], ecx; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x00189c2d: mov ebp, dword ptr [esp]; ret; 
0x00115b65: mov ebp, dword ptr gs:[0x14]; mov dword ptr [esp + 0x18c], ebp; mov ebp, dword ptr [esp + 0x1b8]; call dword ptr gs:[0x10]; 
0x0016fafa: mov ebp, eax; pop eax; pop edx; push dword ptr [esi + 0x10]; push ebx; call dword ptr [esi + 0x14]; 
0x00086a32: mov ebp, ecx; mov esi, eax; lea esi, cs:[esi]; nop; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0012e1e2: mov ebp, esi; call ebx; 
0x0012e1e2: mov ebp, esi; call ebx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x0003c5cc: mov ebp, esp; adc al, byte ptr [eax]; add byte ptr [edi], cl; xchg esp, eax; ret 0xec83; 
0x00040265: mov ebx, 0; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x001321fb: mov ebx, 0x10; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00131fcb: mov ebx, 0x11; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000ea07f: mov ebx, 0x1200011; lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x00131306: mov ebx, 0x12; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0013367e: mov ebx, 0x16; mov edi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x001337a9: mov ebx, 0x18; call dword ptr gs:[0x10]; 
0x00192a8a: mov ebx, 0x18; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0003fe9e: mov ebx, 0x2cdc858d; stc; dec dword ptr [ecx - 0x76d3dbbc]; ret 0x4489; 
0x000b9387: mov ebx, 0x3001139; or al, 0x99; jmp ecx; 
0x00094f12: mov ebx, 0x4f8b0005; push 0xc24548b; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0012e85b: mov ebx, 0x53001105; mov eax, 0xfe; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0012fb17: mov ebx, 0x53564d41; call dword ptr gs:[0x10]; 
0x00094f58: mov ebx, 0x548b0005; and al, 0xc; mov ecx, edi; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0013eca6: mov ebx, 0x6afff957; and dword ptr [eax - 0x73], edx; xchg esi, eax; push edi; stc; call dword ptr [eax - 0x18]; 
0x0013ecef: mov ebx, 0x6afff957; xor dword ptr [eax - 0x73], edx; sub al, 0xa9; stc; call dword ptr [eax - 0x18]; 
0x0005b9d4: mov ebx, 0x79f0838d; stc; call dword ptr [eax - 0x73]; 
0x0014c7cc: mov ebx, 0x8000768d; jl 0x14c7f7; add byte ptr es:[edi], cl; test dword ptr [ebp - 0x7c000003], esp; ret; 
0x0017515e: mov ebx, 0x8100014a; ret; 
0x0015b15e: mov ebx, 0x810002ea; ret; 
0x0004195e: mov ebx, 0x81001482; ret; 
0x00128ce9: mov ebx, 0x83ffefa4; les ebx, ptr [eax]; pop ebx; ret; 
0x000fdce3: mov ebx, 0x83fffffd; in al, dx; or byte ptr [ebp - 0x6b7f87d], cl; call dword ptr [eax + 0x55]; 
0x000f71c1: mov ebx, 0x890001ec; ret 0xc483; 
0x00147435: mov ebx, 0x89fffffe; ret; 
0x0002555a: mov ebx, 0x8b002198; and byte ptr [eax + eax + 0x3650000], 5; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x001132c4: mov ebx, 0x8b530012; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0004d5b1: mov ebx, 0x8bfffe6a; jl 0x4d5dc; sbb byte ptr [ebp - 0x687a779], cl; call dword ptr [eax - 0x73]; 
0x0012d061: mov ebx, 0x8dfffff5; jbe 0x12d068; ret; 
0x00131966: mov ebx, 0xa; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001328dd: mov ebx, 0xb; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x00127045: mov ebx, 0xc483fff9; adc byte ptr [ebp + 0x6c840fc0], al; or byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; dec dword ptr [ebp - 7]; call dword ptr [eax + 0x55]; 
0x00126fd9: mov ebx, 0xc483fff9; adc byte ptr [ebp - 0x367bf040], al; add eax, 0xec830000; or byte ptr [ebp - 0x6b2f87d], cl; call dword ptr [eax + 0x55]; 
0x00127060: mov ebx, 0xc483fff9; adc byte ptr [ebp - 0x397bf040], al; or byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; xor dword ptr [esi - 7], ecx; call dword ptr [eax + 0x55]; 
0x001329d7: mov ebx, 0xc; mov dword ptr [esp + 0x18], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00132acc: mov ebx, 0xd; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0013d1d1: mov ebx, 0xe8fffe83; push ss; idiv bh; jmp dword ptr [esi - 0x70]; 
0x00132bd9: mov ebx, 0xe; call dword ptr gs:[0x10]; 
0x00132b89: mov ebx, 0xe; mov esi, edi; mov edx, 0x100; call dword ptr gs:[0x10]; 
0x001780d7: mov ebx, 0xfc5c23e8; jmp dword ptr [esi - 0x70]; 
0x0012ad2b: mov ebx, 0xfee1dead; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00144c86: mov ebx, 0xff9074e8; jmp dword ptr [esi - 0x70]; 
0x00032394: mov ebx, 0xfffc96e9; push esi; ret 0xf03; 
0x00121f74: mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x0011f7d5: mov ebx, 0xffffff9c; mov ecx, dword ptr [esp + 0x30]; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0011f8d5: mov ebx, 0xffffff9c; mov ecx, dword ptr [esp + 0x30]; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0011f7a2: mov ebx, 0xffffff9c; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0011f8a8: mov ebx, 0xffffff9c; mov edx, edi; call dword ptr gs:[0x10]; 
0x0012b3eb: mov ebx, 0xffffffff; mov edx, 0xffffffff; call dword ptr gs:[0x10]; 
0x00023271: mov ebx, 1; mov esi, 8; mov dword ptr [ebp + 0x137c], 1; call dword ptr gs:[0x10]; 
0x000a072f: mov ebx, 1; sub esp, 0x28; mov edi, dword ptr [esp + 0x3c]; lea ecx, [ebp - 0x722d4]; call dword ptr gs:[0x10]; 
0x00148abc: mov ebx, 2; call dword ptr gs:[0x10]; 
0x0004222a: mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x00132fba: mov ebx, 2; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x000938a2: mov ebx, 2; mov ecx, dword ptr [esp + 8]; xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x00092d15: mov ebx, 2; mov esi, 8; add ecx, 0x474; call dword ptr gs:[0x10]; 
0x0010d202: mov ebx, 2; xor edx, edx; mov ecx, dword ptr [esp + 4]; mov esi, 8; call dword ptr gs:[0x10]; 
0x0010d606: mov ebx, 2; xor edx, edx; mov esi, 8; mov ecx, dword ptr [ebp - 0x144]; call dword ptr gs:[0x10]; 
0x00192a0f: mov ebx, 3; call dword ptr gs:[0x10]; 
0x00133081: mov ebx, 3; mov dword ptr [esp + 0x18], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0012e38d: mov ebx, 3; mov ecx, 0x7fffffff; mov esi, 5; call dword ptr gs:[0x10]; 
0x0013125b: mov ebx, 5; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00132076: mov ebx, 9; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00125df9: mov ebx, dword ptr [0x14]; mov dword ptr [esp + 0x100c], ebx; xor ebx, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00042265: mov ebx, dword ptr [eax + 0x34]; mov edx, dword ptr [eax + 0x38]; mov ecx, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + 0x40]; ret; 
0x00094245: mov ebx, dword ptr [eax + 0x68]; cmovbe ecx, edi; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x00099b61: mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x000942b1: mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x00194126: mov ebx, dword ptr [eax + ecx - 4]; mov dword ptr [edx + ecx - 4], ebx; mov eax, edx; pop ebx; ret; 
0x00034013: mov ebx, dword ptr [eax + ecx]; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00140389: mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; 
0x00140389: mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; pop ebx; ret; 
0x000a03d8: mov ebx, dword ptr [eax]; mov ecx, dword ptr [esp + 0x64]; mov esi, dword ptr [esp + 4]; mov eax, 0x199; call dword ptr gs:[0x10]; 
0x00124871: mov ebx, dword ptr [ebp + 0x5c8bfff6]; and al, 0x20; mov edx, eax; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x000704b3: mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x00133ee0: mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; call dword ptr gs:[0x10]; 
0x00134011: mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; mov eax, 0x92; mov edx, 8; call dword ptr gs:[0x10]; 
0x00133e6f: mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; mov edx, 0x40; call dword ptr gs:[0x10]; 
0x00133f93: mov ebx, dword ptr [ebp - 0x500]; mov edx, 2; mov ecx, dword ptr [ebp - 0x510]; mov dword ptr [ebp - 0x4e8], eax; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000a0120: mov ebx, dword ptr [ebp]; call dword ptr gs:[0x10]; 
0x001242d7: mov ebx, dword ptr [ebx + 0x59]; stc; call dword ptr [ecx + 0x50]; 
0x0010d5a0: mov ebx, dword ptr [ebx + 4]; xor edx, edx; mov eax, 0x1b4; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x000a01da: mov ebx, dword ptr [ebx]; mov eax, 0x106; call dword ptr gs:[0x10]; 
0x000a024e: mov ebx, dword ptr [ebx]; mov eax, 0x198; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0013bf7b: mov ebx, dword ptr [ecx]; mov esi, dword ptr [ecx + 4]; mov edi, dword ptr [ecx + 8]; mov ebp, dword ptr [ecx + 0xc]; nop; jmp edx; 
0x0008fd68: mov ebx, dword ptr [edi + 4]; mov ecx, dword ptr [edi + 8]; mov edx, dword ptr [edi + 0xc]; call dword ptr gs:[0x10]; 
0x001219f3: mov ebx, dword ptr [edi]; mov ebp, dword ptr [edi + 8]; mov edi, dword ptr [edi + 4]; call dword ptr gs:[0x10]; 
0x001a6f53: mov ebx, dword ptr [edx + 0xc]; cmp ecx, ebx; mov eax, 0; jne 0x1a6f70; pop ebx; ret; 
0x0008f9aa: mov ebx, dword ptr [edx + 4]; mov ecx, dword ptr [edx + 8]; mov edx, dword ptr [edx + 0xc]; call dword ptr gs:[0x10]; 
0x00092a77: mov ebx, dword ptr [esi + 0x68]; mov ecx, dword ptr [eax + 4]; mov edx, dword ptr [eax]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x00092ac0: mov ebx, dword ptr [esi + 0x68]; mov ecx, dword ptr [esi + 0x224]; lea edx, [esi + 0x220]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0005330e: mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x00024f8a: mov ebx, dword ptr [esi - 0x137cffdf]; adc byte ptr [eax - 0x25], ch; add dword ptr [eax], eax; add byte ptr [ebp - 0x6989380], cl; call dword ptr [eax + 0x6a]; 
0x00140449: mov ebx, dword ptr [esi]; lea esi, cs:[esi]; mov eax, 6; call dword ptr gs:[0x10]; 
0x0011f70b: mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0010bde4: mov ebx, dword ptr [esp + 0x10]; cmp esi, ecx; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x00098163: mov ebx, dword ptr [esp + 0x10]; mov dword ptr [ebx], 0; call dword ptr gs:[0x10]; 
0x0012ad83: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x001220ec: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00115153: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0011f123: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x00130c83: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x00130903: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x00130983: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1ad; call dword ptr gs:[0x10]; 
0x00130723: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1af; call dword ptr gs:[0x10]; 
0x00130ae3: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1b8; call dword ptr gs:[0x10]; 
0x00130943: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1ba; call dword ptr gs:[0x10]; 
0x00130813: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x00130b53: mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0012f553: mov ebx, dword ptr [esp + 0x10]; mov eax, 0xac; call dword ptr gs:[0x10]; 
0x0012b7a3: mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x00128603: mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x00124993: mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x0012fb60: mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0006131f: mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0012206c: mov ebx, dword ptr [esp + 0x10]; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0012f2a3: mov ebx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00188744: mov ebx, dword ptr [esp + 0x14]; jne 0x188750; pop ebx; ret; 
0x0012f016: mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x000eaba0: mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x0013ac5d: mov ebx, dword ptr [esp + 0x18]; je 0x13ac70; add esp, 8; pop ebx; ret; 
0x0012b8b8: mov ebx, dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0012e1c3: mov ebx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x28]; mov eax, 0x78; mov dword ptr [ecx], ebx; int 0x80; 
0x00121d00: mov ebx, dword ptr [esp + 0x20]; lea edx, [esp + 4]; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x00122cff: mov ebx, dword ptr [esp + 0x20]; mov eax, 0x36; mov ecx, 0x5409; mov edx, 1; call dword ptr gs:[0x10]; 
0x00124d9e: mov ebx, dword ptr [esp + 0x20]; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x0012484e: mov ebx, dword ptr [esp + 0x20]; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x0003c9ee: mov ebx, dword ptr [esp + 0x20]; mov eax, 0xb3; mov ecx, 8; call dword ptr gs:[0x10]; 
0x0011e65a: mov ebx, dword ptr [esp + 0x20]; mov eax, 0xb7; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00121ccc: mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0011473e: mov ebx, dword ptr [esp + 0x20]; mov eax, 6; call dword ptr gs:[0x10]; 
0x0003ca15: mov ebx, dword ptr [esp + 0x20]; mov ecx, 8; mov edx, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x0012f32f: mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x156; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x000403ff: mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x163; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001295af: mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x90; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0012ac5f: mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x91; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0012d86f: mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x92; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011fd5f: mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0xa8; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0012078f: mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 3; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0012193f: mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 4; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001149be: mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 8; call dword ptr gs:[0x10]; 
0x001149e5: mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov edx, eax; mov eax, 8; call dword ptr gs:[0x10]; 
0x0010bef9: mov ebx, dword ptr [esp + 0x20]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00124dc5: mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00124875: mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x00114765: mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 6; call dword ptr gs:[0x10]; 
0x000a00e6: mov ebx, dword ptr [esp + 0x20]; test ebx, ebx; js 0xa0118; mov eax, 0x107; call dword ptr gs:[0x10]; 
0x000de918: mov ebx, dword ptr [esp + 0x30]; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012b71c: mov ebx, dword ptr [esp + 0x30]; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x0012b67c: mov ebx, dword ptr [esp + 0x30]; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x0010c29c: mov ebx, dword ptr [esp + 0x30]; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x0010c441: mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x0010c391: mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x0010c509: mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x0010c1f9: mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x00115464: mov ebx, dword ptr [esp + 0x30]; mov eax, 0xdd; mov ecx, esi; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0011fa39: mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x127; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0011fb3f: mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x127; mov edx, edi; call dword ptr gs:[0x10]; 
0x00129a08: mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14d; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0012a338: mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14e; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000fb6d9: mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb4; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000fb899: mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb5; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0012fdc9: mov ebx, dword ptr [esp + 0x30]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0011f4c0: mov ebx, dword ptr [esp + 0x30]; mov edi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000e79d5: mov ebx, dword ptr [esp + 0x40]; cmp dword ptr [ecx + 8], 0x3b9ac9ff; ja 0xe7a90; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x0010bfea: mov ebx, dword ptr [esp + 0x40]; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00122bae: mov ebx, dword ptr [esp + 0x40]; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x000e767a: mov ebx, dword ptr [esp + 0x40]; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0011528a: mov ebx, dword ptr [esp + 0x50]; mov eax, 0xdd; mov ecx, esi; mov edx, edi; call dword ptr gs:[0x10]; 
0x00133430: mov ebx, dword ptr [esp + 0x50]; mov ecx, dword ptr [esp + 8]; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x0012feda: mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x001231d8: mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x000deab0: mov ebx, dword ptr [esp + 0x60]; lea edx, [esp + 0x2c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0012f5f9: mov ebx, dword ptr [esp + 0x60]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x001300a2: mov ebx, dword ptr [esp + 0x60]; mov ecx, dword ptr [esp + 0x64]; lea esi, [esp + 0x2c]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x00130130: mov ebx, dword ptr [esp + 0x60]; mov ecx, dword ptr [esp + 0x64]; mov eax, 0x145; mov esi, edi; call dword ptr gs:[0x10]; 
0x00130002: mov ebx, dword ptr [esp + 0x60]; mov ecx, dword ptr [esp + 0x64]; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x000deb20: mov ebx, dword ptr [esp + 0x60]; mov edx, dword ptr [esp + 0xc]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x00121787: mov ebx, dword ptr [esp + 0x60]; mov esi, dword ptr [esp + 0x6c]; mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x001216c1: mov ebx, dword ptr [esp + 0x60]; mov esi, dword ptr [esp + 0x6c]; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00140973: mov ebx, dword ptr [esp + 0x6c]; mov eax, 6; call dword ptr gs:[0x10]; 
0x001229bf: mov ebx, dword ptr [esp + 0x70]; lea edx, [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00115f1e: mov ebx, dword ptr [esp + 0x70]; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x0010e708: mov ebx, dword ptr [esp + 0x80]; call dword ptr gs:[0x10]; 
0x0012eea0: mov ebx, dword ptr [esp + 0x84]; mov eax, 0x6c; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0009f4f1: mov ebx, dword ptr [esp + 0x90]; mov eax, 0x119; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0012ef78: mov ebx, dword ptr [esp + 0x94]; mov esi, dword ptr [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x0009a42d: mov ebx, dword ptr [esp + 0xa0]; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x0012dc73: mov ebx, dword ptr [esp + 0xc0]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0008f2e7: mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0008f2e7: mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; pop ebx; pop esi; ret; 
0x000e8bee: mov ebx, dword ptr [esp + 0xc]; cmp edx, eax; cmova edx, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x001208ae: mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x0012f1dd: mov ebx, dword ptr [esp + 0xc]; mov eax, 0x178; call dword ptr gs:[0x10]; 
0x00130aae: mov ebx, dword ptr [esp + 0xc]; mov eax, 0x1a8; call dword ptr gs:[0x10]; 
0x00130b8e: mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x0012f210: mov ebx, dword ptr [esp + 0xc]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x00126a6e: mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x0012842e: mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x001248fe: mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x001306ee: mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x00070fed: mov ebx, dword ptr [esp + 0xc]; mov ecx, dword ptr [ebx + edx*4 - 0x736b4]; add ecx, eax; jmp ecx; 
0x0007078d: mov ebx, dword ptr [esp + 0xc]; mov ecx, dword ptr [ebx + edx*4 - 0x73734]; add ecx, eax; jmp ecx; 
0x0007213f: mov ebx, dword ptr [esp + 0xc]; mov ecx, dword ptr [ebx + edx*4 - 0x73834]; add ecx, eax; jmp ecx; 
0x00092535: mov ebx, dword ptr [esp + 0xc]; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008f316: mov ebx, dword ptr [esp + 0xc]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00130896: mov ebx, dword ptr [esp + 4]; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x00130bd2: mov ebx, dword ptr [esp + 4]; mov eax, 0x136; call dword ptr gs:[0x10]; 
0x00130c16: mov ebx, dword ptr [esp + 4]; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x0012ed06: mov ebx, dword ptr [esp + 4]; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x001306c2: mov ebx, dword ptr [esp + 4]; mov eax, 0x149; call dword ptr gs:[0x10]; 
0x0011fd16: mov ebx, dword ptr [esp + 4]; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x00130872: mov ebx, dword ptr [esp + 4]; mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x00130c46: mov ebx, dword ptr [esp + 4]; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x0012b882: mov ebx, dword ptr [esp + 4]; mov eax, 0x158; call dword ptr gs:[0x10]; 
0x00130cb6: mov ebx, dword ptr [esp + 4]; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x00130ce6: mov ebx, dword ptr [esp + 4]; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x00130d16: mov ebx, dword ptr [esp + 4]; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x00130d42: mov ebx, dword ptr [esp + 4]; mov eax, 0x17e; call dword ptr gs:[0x10]; 
0x00130786: mov ebx, dword ptr [esp + 4]; mov eax, 0x1ae; call dword ptr gs:[0x10]; 
0x00130a16: mov ebx, dword ptr [esp + 4]; mov eax, 0x1b2; call dword ptr gs:[0x10]; 
0x000ea142: mov ebx, dword ptr [esp + 4]; mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x00130b16: mov ebx, dword ptr [esp + 4]; mov eax, 0x1c0; call dword ptr gs:[0x10]; 
0x0003c956: mov ebx, dword ptr [esp + 4]; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x00114a82: mov ebx, dword ptr [esp + 4]; mov eax, 0x29; call dword ptr gs:[0x10]; 
0x00123782: mov ebx, dword ptr [esp + 4]; mov eax, 0x33; call dword ptr gs:[0x10]; 
0x0010c316: mov ebx, dword ptr [esp + 4]; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x001214d2: mov ebx, dword ptr [esp + 4]; mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x001214d2: mov ebx, dword ptr [esp + 4]; mov eax, 0x3c; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00123962: mov ebx, dword ptr [esp + 4]; mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x0012b626: mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x00130bf2: mov ebx, dword ptr [esp + 4]; mov eax, 0x56; call dword ptr gs:[0x10]; 
0x0012b836: mov ebx, dword ptr [esp + 4]; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x001296b6: mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x00114ef6: mov ebx, dword ptr [esp + 4]; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x0012d9a2: mov ebx, dword ptr [esp + 4]; mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x0012d832: mov ebx, dword ptr [esp + 4]; mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x001305b2: mov ebx, dword ptr [esp + 4]; mov eax, 0x71; call dword ptr gs:[0x10]; 
0x0012b812: mov ebx, dword ptr [esp + 4]; mov eax, 0x73; call dword ptr gs:[0x10]; 
0x00130bb2: mov ebx, dword ptr [esp + 4]; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x0012b386: mov ebx, dword ptr [esp + 4]; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x0010e3e2: mov ebx, dword ptr [esp + 4]; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x001307e2: mov ebx, dword ptr [esp + 4]; mov eax, 0x82; call dword ptr gs:[0x10]; 
0x000f0a42: mov ebx, dword ptr [esp + 4]; mov eax, 0x84; call dword ptr gs:[0x10]; 
0x00114ed2: mov ebx, dword ptr [esp + 4]; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x001305d6: mov ebx, dword ptr [esp + 4]; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x0012f3e2: mov ebx, dword ptr [esp + 4]; mov eax, 0x88; call dword ptr gs:[0x10]; 
0x0012f3e2: mov ebx, dword ptr [esp + 4]; mov eax, 0x88; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x001157b6: mov ebx, dword ptr [esp + 4]; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x000f0af2: mov ebx, dword ptr [esp + 4]; mov eax, 0x93; call dword ptr gs:[0x10]; 
0x00128ab6: mov ebx, dword ptr [esp + 4]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x00129666: mov ebx, dword ptr [esp + 4]; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x00128ae2: mov ebx, dword ptr [esp + 4]; mov eax, 0x98; call dword ptr gs:[0x10]; 
0x0010c156: mov ebx, dword ptr [esp + 4]; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x0010be46: mov ebx, dword ptr [esp + 4]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x0010be72: mov ebx, dword ptr [esp + 4]; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x0010be92: mov ebx, dword ptr [esp + 4]; mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x0010beb2: mov ebx, dword ptr [esp + 4]; mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x0012d9c6: mov ebx, dword ptr [esp + 4]; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x00130606: mov ebx, dword ptr [esp + 4]; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x00130636: mov ebx, dword ptr [esp + 4]; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x0003cf96: mov ebx, dword ptr [esp + 4]; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x00114682: mov ebx, dword ptr [esp + 4]; mov eax, 0xc; call dword ptr gs:[0x10]; 
0x000efa96: mov ebx, dword ptr [esp + 4]; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x0012fa72: mov ebx, dword ptr [esp + 4]; mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x0012fa52: mov ebx, dword ptr [esp + 4]; mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x0012fa52: mov ebx, dword ptr [esp + 4]; mov eax, 0xd8; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00130a76: mov ebx, dword ptr [esp + 4]; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x0012adb6: mov ebx, dword ptr [esp + 4]; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x001284b6: mov ebx, dword ptr [esp + 4]; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x00124956: mov ebx, dword ptr [esp + 4]; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x00091e2b: mov ebx, dword ptr [esp + 4]; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000612c9: mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000fb699: mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; neg eax; pop ebx; ret; 
0x00130d79: mov ebx, dword ptr [esp + 8]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00130849: mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x0011f639: mov ebx, dword ptr [esp + 8]; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x00121549: mov ebx, dword ptr [esp + 8]; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x00121039: mov ebx, dword ptr [esp + 8]; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x00114af9: mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x001309e9: mov ebx, dword ptr [esp + 8]; mov eax, 0x1ac; call dword ptr gs:[0x10]; 
0x00130759: mov ebx, dword ptr [esp + 8]; mov eax, 0x1b0; call dword ptr gs:[0x10]; 
0x001307b9: mov ebx, dword ptr [esp + 8]; mov eax, 0x1b1; call dword ptr gs:[0x10]; 
0x001147e9: mov ebx, dword ptr [esp + 8]; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x00130a49: mov ebx, dword ptr [esp + 8]; mov eax, 0x1b6; call dword ptr gs:[0x10]; 
0x001236c9: mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x0012d979: mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x001308c9: mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x00130589: mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x00129569: mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x00130669: mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x00130699: mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x0010c189: mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x001309b9: mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000eab59: mov ebx, dword ptr [esp + 8]; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x0011f099: mov ebx, dword ptr [esp + 8]; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x00115119: mov ebx, dword ptr [esp + 8]; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000f0ac9: mov ebx, dword ptr [esp + 8]; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000f0a99: mov ebx, dword ptr [esp + 8]; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x001146f9: mov ebx, dword ptr [esp + 8]; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x00128839: mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x00128759: mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x00128459: mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x00128489: mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x00124929: mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x0003c995: mov ebx, dword ptr [esp + 8]; mov ecx, 8; call dword ptr gs:[0x10]; 
0x0011fcd5: mov ebx, dword ptr [esp + 8]; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x00091340: mov ebx, dword ptr [esp]; mov eax, 0xf0; mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x0009130c: mov ebx, dword ptr [esp]; mov eax, 0xf0; xor esi, esi; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000921a3: mov ebx, dword ptr [esp]; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00189c1d: mov ebx, dword ptr [esp]; ret; 
0x0012fed9: mov ebx, dword ptr fs:[esp + 0x60]; lea ecx, [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x001231d7: mov ebx, dword ptr fs:[esp + 0x60]; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x0012f5f8: mov ebx, dword ptr fs:[esp + 0x60]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x00125df8: mov ebx, dword ptr gs:[0x14]; mov dword ptr [esp + 0x100c], ebx; xor ebx, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0008fbc5: mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0012e1e6: mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x00091814: mov ebx, ebp; call dword ptr gs:[0x10]; 
0x000918a6: mov ebx, ebp; mov edx, eax; mov eax, 0xf0; or edx, 2; call dword ptr gs:[0x10]; 
0x00094e99: mov ebx, ebp; mov esi, 8; call dword ptr gs:[0x10]; 
0x0009167d: mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009553b: mov ebx, ebp; xor edx, edx; mov ecx, 7; xor esi, esi; call dword ptr gs:[0x10]; 
0x0012e403: mov ebx, ecx; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x1b3; int 0x80; 
0x00152fcd: mov ebx, edi; call 0x231a0; mov dword ptr [esp], ebp; call esi; 
0x00092f11: mov ebx, edi; call dword ptr gs:[0x10]; 
0x00090b7f: mov ebx, edi; mov dword ptr [edi + 0x10], 0; mov ecx, dword ptr [edi + 0xc]; xor cl, 0x81; mov dword ptr [edi], 0; call dword ptr gs:[0x10]; 
0x000878f8: mov ebx, edi; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00097055: mov ebx, edi; mov ecx, 7; mov dword ptr [edi + 4], edx; xor esi, esi; xor edx, edx; call dword ptr gs:[0x10]; 
0x0009886b: mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000962ec: mov ebx, edi; xor edx, edx; mov ecx, 7; xor esi, esi; call dword ptr gs:[0x10]; 
0x0003c966: mov ebx, edx; cmp eax, 0xfffff001; jae 0x24f50; ret; 
0x001214e2: mov ebx, edx; ret; 
0x0002fe3f: mov ebx, esi; call 0x231a0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0009fec0: mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0008d9a4: mov ebx, esp; sub al, 0xf9; inc dword ptr [ebx - 0x72aff314]; add dword ptr [edi], 0x3f; stc; call dword ptr [ecx + 0x52]; 
0x0008d930: mov ebx, esp; sub al, 0xf9; inc dword ptr [ebx - 0x72aff314]; or dword ptr [esi], 0x3f; stc; call dword ptr [ecx + 0x52]; 
0x0017c257: mov ebx, gs; call dword ptr [eax - 0x73]; 
0x00121d0d: mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x00042183: mov ecx, 0x2effffe1; lea esi, [esi]; nop; xor eax, eax; ret; 
0x00033449: mov ecx, 0x31570020; call dword ptr [esi - 0x42]; 
0x000ded16: mov ecx, 0x5251ffe9; push eax; call 0xda950; add esp, 0x1c; ret; 
0x00122a68: mov ecx, 0x5401; mov ebp, dword ptr [eax + edi]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00122d08: mov ecx, 0x5409; mov edx, 1; call dword ptr gs:[0x10]; 
0x00122d39: mov ecx, 0x5409; mov edx, 1; mov edi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0012e392: mov ecx, 0x7fffffff; mov esi, 5; call dword ptr gs:[0x10]; 
0x00098204: mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x0008f21e: mov ecx, 0x80; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008e6d4: mov ecx, 0x80; xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x00161960: mov ecx, 0x81000282; ret; 
0x00158f60: mov ecx, 0x8100030c; ret; 
0x0008fa24: mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0008f81c: mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00186de6: mov ecx, 0x81; mov edx, 1; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00092f07: mov ecx, 0x81; mov edx, 1; mov ebx, edi; call dword ptr gs:[0x10]; 
0x0008f2da: mov ecx, 0x81; mov edx, 1; push ebx; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000982a1: mov ecx, 0x81; xor esi, esi; mov edx, 0x7fffffff; mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x0008fa53: mov ecx, 0x81; xor esi, esi; mov edx, 1; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x00157713: mov ecx, 0x83fff37b; les edx, ptr [eax]; add esp, 8; pop ebx; ret; 
0x00095d2e: mov ecx, 0x87; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x000ebab3: mov ecx, 0x89fffbb6; ret 0x448b; 
0x000d86b6: mov ecx, 0x8d8bfff5; ror cl, 0xff; dec dword ptr [ebp - 0x661f37f]; call dword ptr [eax - 0x73]; 
0x00078eb3: mov ecx, 0x8dfffbb1; xchg byte ptr [ebp + ebp*2 - 7], cl; call dword ptr [eax - 0x73]; 
0x0010ea0e: mov ecx, 0xa1e8838d; stc; call dword ptr [eax - 0x73]; 
0x000d8691: mov ecx, 0xb58bfff5; ror cl, 0xff; dec dword ptr [ebp - 0x661f37a]; call dword ptr [eax - 0x73]; 
0x000d8700: mov ecx, 0xb58bfff5; ror cl, 0xff; dec dword ptr [ebp - 0x687cb7a]; call dword ptr [eax - 0x73]; 
0x001272a0: mov ecx, 0xc483fff9; adc byte ptr [ebp + 0x18840fc0], al; or al, 0; add byte ptr [ebp - 0x6ad017d], cl; call dword ptr [edx + 0x52]; 
0x001271ea: mov ecx, 0xc483fff9; adc byte ptr [ebp + 0x37840fc0], al; adc byte ptr [eax], al; add byte ptr [ebp - 0x6aef47d], cl; call dword ptr [edx + 0x52]; 
0x00127286: mov ecx, 0xc483fff9; adc byte ptr [ebp - 0x387bf040], al; or al, 0; add byte ptr [ebp - 0x6ad557d], cl; call dword ptr [ecx + 0x51]; 
0x001271d0: mov ecx, 0xc483fff9; adc byte ptr [ebp - 0x5f7bf040], al; adc byte ptr [eax], al; add byte ptr [ebp - 0x6af187d], cl; call dword ptr [ecx + 0x51]; 
0x000ea0a6: mov ecx, 0xc; lea ebx, [eax + 0x6c]; mov dword ptr [eax + 0x6c], ebx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x00092cb3: mov ecx, 0xc; lea ebx, [eax + 0x6c]; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x001782fe: mov ecx, 0xcec8390; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x00192a68: mov ecx, 0xfab292e8; jmp dword ptr [esi - 0x70]; 
0x0003c074: mov ecx, 0xff7fffff; sub ecx, eax; xor eax, ecx; shr eax, 0x1f; ret; 
0x0003bd44: mov ecx, 0xffefffff; sub ecx, eax; xor eax, ecx; shr eax, 0x1f; ret; 
0x0003bad9: mov ecx, 0xfffe; sub ecx, edx; shr eax, 0x1f; shr ecx, 0x10; or eax, ecx; ret; 
0x0010d5aa: mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x000c2bec: mov ecx, 0xffffffff; cmovb eax, ecx; ret; 
0x0007f1f0: mov ecx, 0xffffffff; pop ebx; pop esi; mov eax, ecx; pop edi; ret; 
0x0017caf9: mov ecx, 1; mov dword ptr [eax + 0xc], edx; mov eax, ecx; pop ebx; ret; 
0x0017cab9: mov ecx, 1; mov dword ptr [eax + 0xc], edx; mov eax, ecx; ret; 
0x00157230: mov ecx, 1; mov eax, ecx; ret; 
0x00097c95: mov ecx, 1; mov edx, 1; call dword ptr gs:[0x10]; 
0x000d9842: mov ecx, 1; pop ebx; pop esi; mov eax, ecx; ret; 
0x0018c4cf: mov ecx, 1; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x00097057: mov ecx, 7; mov dword ptr [edi + 4], edx; xor esi, esi; xor edx, edx; call dword ptr gs:[0x10]; 
0x0009553f: mov ecx, 7; xor esi, esi; call dword ptr gs:[0x10]; 
0x0009778a: mov ecx, 7; xor esi, esi; mov dword ptr [ebx + 4], edx; xor edx, edx; call dword ptr gs:[0x10]; 
0x0003c999: mov ecx, 8; call dword ptr gs:[0x10]; 
0x0003ca19: mov ecx, 8; mov edx, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x00097451: mov ecx, 8; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x000e8c60: mov ecx, dword ptr [0x14]; mov dword ptr [esp + 0x13c], ecx; mov ecx, dword ptr [esp + 0x164]; call dword ptr gs:[0x10]; 
0x0016ef92: mov ecx, dword ptr [eax + 0x20]; push ebp; push eax; call dword ptr [ecx + 8]; 
0x0017410d: mov ecx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [ecx + 8]; 
0x0004226b: mov ecx, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + 0x40]; ret; 
0x0007bf53: mov ecx, dword ptr [eax + 0x58]; mov dword ptr [ecx + 0x88], edx; ret; 
0x00092a7a: mov ecx, dword ptr [eax + 4]; mov edx, dword ptr [eax]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x0016f1d3: mov ecx, dword ptr [eax + 4]; push eax; call dword ptr [ecx + 0x10]; 
0x00080a70: mov ecx, dword ptr [eax + 8]; mov dword ptr [eax], edx; mov dword ptr [eax + 8], edx; mov dword ptr [eax + 0x20], ecx; ret; 
0x00137a39: mov ecx, dword ptr [eax + 8]; test ecx, ecx; je 0x137a48; xor eax, eax; pop ebx; ret; 
0x00196362: mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00198362: mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, edx; pop ebx; ret; 
0x0009af2e: mov ecx, dword ptr [eax]; cmp dword ptr [edx + 0x14], ecx; je 0x9af40; ret; 
0x00196a02: mov ecx, dword ptr [eax]; mov dword ptr [edx], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000951b8: mov ecx, dword ptr [eax]; mov eax, 0xf0; not ecx; and ecx, 0x80; call dword ptr gs:[0x10]; 
0x0008f35f: mov ecx, dword ptr [eax]; mov eax, dword ptr [eax + 4]; mov dword ptr [ecx + 4], eax; mov dword ptr [eax], ecx; mov dword ptr [edx + 0x924], 0; ret; 
0x0018876c: mov ecx, dword ptr [eax]; test ecx, ecx; jne 0x188778; ret; 
0x0010d612: mov ecx, dword ptr [ebp - 0x144]; call dword ptr gs:[0x10]; 
0x00026293: mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x0014abf4: mov ecx, dword ptr [ebp - 0x3fceff8a]; ret; 
0x00133ee6: mov ecx, dword ptr [ebp - 0x508]; call dword ptr gs:[0x10]; 
0x00134017: mov ecx, dword ptr [ebp - 0x508]; mov eax, 0x92; mov edx, 8; call dword ptr gs:[0x10]; 
0x00133e75: mov ecx, dword ptr [ebp - 0x508]; mov edx, 0x40; call dword ptr gs:[0x10]; 
0x00133f9e: mov ecx, dword ptr [ebp - 0x510]; mov dword ptr [ebp - 0x4e8], eax; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x00092f6d: mov ecx, dword ptr [ebp - 0x58]; mov eax, 0xf0; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x00090a66: mov ecx, dword ptr [ebx + 0xc]; mov eax, 0xf0; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00090966: mov ecx, dword ptr [ebx + 0xc]; mov eax, edi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0009a76d: mov ecx, dword ptr [ebx + 4]; mov eax, 0xf0; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x001a3150: mov ecx, dword ptr [ebx + ebx*4 - 0x7b740009]; or dword ptr [ebx + ebx*4 - 0x37d60009], 0x5b; ret; 
0x001a314e: mov ecx, dword ptr [ebx + ecx*4 - 0x86474]; mov eax, dword ptr [ebx + eax*4 - 0x86474]; sub eax, ecx; pop ebx; ret; 
0x00137059: mov ecx, dword ptr [ebx + ecx]; test byte ptr [ecx + edx*2 + 1], 0x40; cmove edx, eax; mov eax, edx; pop ebx; ret; 
0x00070ff1: mov ecx, dword ptr [ebx + edx*4 - 0x736b4]; add ecx, eax; jmp ecx; 
0x00070791: mov ecx, dword ptr [ebx + edx*4 - 0x73734]; add ecx, eax; jmp ecx; 
0x00072143: mov ecx, dword ptr [ebx + edx*4 - 0x73834]; add ecx, eax; jmp ecx; 
0x001418c3: mov ecx, dword ptr [ebx - 0x74d7db84]; je 0x1418ef; sub al, 0x83; ret 0x8902; 
0x00091c04: mov ecx, dword ptr [edi + 0x10]; mov eax, 0xf0; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00094f15: mov ecx, dword ptr [edi + 0x68]; mov edx, dword ptr [esp + 0xc]; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00090b16: mov ecx, dword ptr [edi + 0xc]; mov eax, 0xf0; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00090b88: mov ecx, dword ptr [edi + 0xc]; xor cl, 0x81; mov dword ptr [edi], 0; call dword ptr gs:[0x10]; 
0x0008fd6b: mov ecx, dword ptr [edi + 8]; mov edx, dword ptr [edi + 0xc]; call dword ptr gs:[0x10]; 
0x00127112: mov ecx, dword ptr [edi - 7]; call dword ptr [eax + 0x55]; 
0x00081cae: mov ecx, dword ptr [edx + 0x10]; cmp eax, ecx; cmovb eax, ecx; sub eax, dword ptr [edx + 8]; sar eax, 2; ret; 
0x0008d36b: mov ecx, dword ptr [edx + 0x14]; cmp eax, ecx; cmovb eax, ecx; sub eax, dword ptr [edx + 0xc]; ret; 
0x001706b0: mov ecx, dword ptr [edx + 0x18]; test ecx, ecx; jne 0x1706d8; mov dword ptr [eax], 0; pop ebx; ret; 
0x00083f31: mov ecx, dword ptr [edx + 0x28]; cmp dword ptr [edx + 0x24], ecx; cmove eax, ecx; ret; 
0x00176894: mov ecx, dword ptr [edx + 0x28]; mov dword ptr [eax + 4], ecx; mov edx, dword ptr [edx + 0x2c]; mov dword ptr [eax + 8], edx; ret; 
0x00177264: mov ecx, dword ptr [edx + 0x30]; mov dword ptr [eax + 4], ecx; mov edx, dword ptr [edx + 0x34]; mov dword ptr [eax + 8], edx; ret; 
0x0009d629: mov ecx, dword ptr [edx + 0x3bac]; mov dword ptr [edx + 0x3bac], eax; mov dword ptr [eax + 0xc], ecx; ret; 
0x00133b8a: mov ecx, dword ptr [edx + 4]; cmp byte ptr [ecx], 0; je 0x133b98; ret; 
0x0008f9ad: mov ecx, dword ptr [edx + 8]; mov edx, dword ptr [edx + 0xc]; call dword ptr gs:[0x10]; 
0x000d9a92: mov ecx, dword ptr [edx + eax*4 + 4]; test ecx, ecx; jne 0xd9a78; add eax, 1; ret; 
0x0013becf: mov ecx, dword ptr [edx]; test ecx, ecx; je 0x13bee8; ret; 
0x000d9a6a: mov ecx, dword ptr [edx]; test ecx, ecx; jne 0xd9a92; ret; 
0x001227fa: mov ecx, dword ptr [edx]; test ecx, ecx; js 0x122808; mov eax, dword ptr [edx + 8]; and eax, 0x100f; ret; 
0x000d96f0: mov ecx, dword ptr [esi + 0x1c]; cmp dword ptr [edi + 0x1c], ecx; jne 0xd97a0; pop edi; pop esi; ret; 
0x00092ac3: mov ecx, dword ptr [esi + 0x224]; lea edx, [esi + 0x220]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x000d9770: mov ecx, dword ptr [esi + 0x34]; cmp dword ptr [edi + 0x34], ecx; jne 0xd97a0; pop edi; pop esi; ret; 
0x000d9790: mov ecx, dword ptr [esi + 0x3c]; cmp dword ptr [edi + 0x3c], ecx; jne 0xd97a0; pop edi; pop esi; ret; 
0x0008fbbe: mov ecx, dword ptr [esi + 8]; mov edx, dword ptr [esp + 4]; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000d964b: mov ecx, dword ptr [esi]; cmp dword ptr [edi], ecx; jne 0xd97a0; pop edi; pop esi; ret; 
0x000bd660: mov ecx, dword ptr [esi]; mov byte ptr [eax + 4], dh; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bd641: mov ecx, dword ptr [esi]; mov word ptr [eax], cx; mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0010b8b1: mov ecx, dword ptr [esi]; test ecx, ecx; je 0x10b8d0; cmp byte ptr [esp + 0x17], 0; jne 0x10b960; call ecx; 
0x00194450: mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x00121fe8: mov ecx, dword ptr [esp + 0x10]; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x0012e405: mov ecx, dword ptr [esp + 0x10]; mov eax, 0x1b3; int 0x80; 
0x0012d6ac: mov ecx, dword ptr [esp + 0x10]; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x001132c8: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x001208aa: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x00130aaa: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x1a8; call dword ptr gs:[0x10]; 
0x00130b8a: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x00126a6a: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x0012842a: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x001248fa: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x001306ea: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x0008f312: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0012316b: mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0009f806: mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012310b: mov ecx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00121f68: mov ecx, dword ptr [esp + 0x10]; or dh, 0x80; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x0012ad7f: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x001220e8: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0011514f: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0011f11f: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x00130c7f: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x001308ff: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x0013097f: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1ad; call dword ptr gs:[0x10]; 
0x0013071f: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1af; call dword ptr gs:[0x10]; 
0x00130adf: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1b8; call dword ptr gs:[0x10]; 
0x0013093f: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1ba; call dword ptr gs:[0x10]; 
0x0013080f: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x00130b4f: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0012f54f: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xac; call dword ptr gs:[0x10]; 
0x0012b79f: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x001285ff: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x0012498f: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x0012fb5c: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00122068: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00132ad1: mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0011f6fe: mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x00061317: mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0019297f: mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00132fbf: mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x000e8c6d: mov ecx, dword ptr [esp + 0x164]; call dword ptr gs:[0x10]; 
0x0012f296: mov ecx, dword ptr [esp + 0x18]; mov edx, dword ptr [esp + 0x1c]; mov eax, 0xa3; mov ebx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000935e7: mov ecx, dword ptr [esp + 0x18]; xor edx, edx; mov edi, eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0009db2f: mov ecx, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00171457: mov ecx, dword ptr [esp + 0x1c]; lea edx, [ecx + 4]; push edx; push ebx; call dword ptr [eax + 4]; 
0x00171496: mov ecx, dword ptr [esp + 0x1c]; lea edx, [ecx + 4]; push edx; push ebx; call dword ptr [eax]; 
0x0012b8b4: mov ecx, dword ptr [esp + 0x1c]; mov ebx, dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0006510d: mov ecx, dword ptr [esp + 0x20]; movzx edx, byte ptr [edx + eax - 0x20]; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [ecx + edx*4 - 0x73f14]; jmp eax; 
0x0012f333: mov ecx, dword ptr [esp + 0x24]; mov eax, 0x156; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00040403: mov ecx, dword ptr [esp + 0x24]; mov eax, 0x163; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001295b3: mov ecx, dword ptr [esp + 0x24]; mov eax, 0x90; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0012ac63: mov ecx, dword ptr [esp + 0x24]; mov eax, 0x91; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0012d873: mov ecx, dword ptr [esp + 0x24]; mov eax, 0x92; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011fd63: mov ecx, dword ptr [esp + 0x24]; mov eax, 0xa8; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00120793: mov ecx, dword ptr [esp + 0x24]; mov eax, 3; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00121943: mov ecx, dword ptr [esp + 0x24]; mov eax, 4; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001149c2: mov ecx, dword ptr [esp + 0x24]; mov eax, 8; call dword ptr gs:[0x10]; 
0x0012f361: mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x00040431: mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x001295e1: mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x0012ac91: mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x0012d8a1: mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0011fd91: mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x001207c1: mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 3; call dword ptr gs:[0x10]; 
0x00121971: mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 4; call dword ptr gs:[0x10]; 
0x001149e9: mov ecx, dword ptr [esp + 0x24]; mov edx, eax; mov eax, 8; call dword ptr gs:[0x10]; 
0x0011f799: mov ecx, dword ptr [esp + 0x30]; mov eax, 0x127; mov ebx, 0xffffff9c; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0011f89f: mov ecx, dword ptr [esp + 0x30]; mov eax, 0x127; mov ebx, 0xffffff9c; mov edx, edi; call dword ptr gs:[0x10]; 
0x0013360f: mov ecx, dword ptr [esp + 0x30]; mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x0011f7da: mov ecx, dword ptr [esp + 0x30]; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0011f8da: mov ecx, dword ptr [esp + 0x30]; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00129a39: mov ecx, dword ptr [esp + 0x34]; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x0012a369: mov ecx, dword ptr [esp + 0x34]; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000fb709: mov ecx, dword ptr [esp + 0x34]; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000fb8c9: mov ecx, dword ptr [esp + 0x34]; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x0012ec44: mov ecx, dword ptr [esp + 0x34]; mov eax, 0x100; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0010e8b5: mov ecx, dword ptr [esp + 0x34]; mov eax, 0x11c; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0011fa3d: mov ecx, dword ptr [esp + 0x34]; mov eax, 0x127; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0011fb43: mov ecx, dword ptr [esp + 0x34]; mov eax, 0x127; mov edx, edi; call dword ptr gs:[0x10]; 
0x0012fce4: mov ecx, dword ptr [esp + 0x34]; mov eax, 0x13b; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x001302e4: mov ecx, dword ptr [esp + 0x34]; mov eax, 0x13c; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00129a0c: mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14d; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00129714: mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14d; mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0012a33c: mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14e; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0012a044: mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14e; mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x00132104: mov ecx, dword ptr [esp + 0x34]; mov eax, 0x159; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000fb6dd: mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb4; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000fb89d: mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb5; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0011fa79: mov ecx, dword ptr [esp + 0x34]; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0011fb79: mov ecx, dword ptr [esp + 0x34]; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0011f4bc: mov ecx, dword ptr [esp + 0x38]; mov ebx, dword ptr [esp + 0x30]; mov edi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0009db59: mov ecx, dword ptr [esp + 0x38]; mov edx, ebp; mov dword ptr [esp + 0x2c], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0015ff5d: mov ecx, dword ptr [esp + 0x3c]; call ecx; 
0x00070ab1: mov ecx, dword ptr [esp + 0x4c]; mov dword ptr [esp + 4], ecx; jmp eax; 
0x00071996: mov ecx, dword ptr [esp + 0x4c]; mov dword ptr [esp + 4], ecx; jmp edx; 
0x00120604: mov ecx, dword ptr [esp + 0x54]; mov dword ptr [esp + 8], eax; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x001205aa: mov ecx, dword ptr [esp + 0x54]; mov eax, 0x135; mov edi, 8; call dword ptr gs:[0x10]; 
0x0012052f: mov ecx, dword ptr [esp + 0x54]; mov eax, 0x19e; mov edi, 8; call dword ptr gs:[0x10]; 
0x00120646: mov ecx, dword ptr [esp + 0x54]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [esp + 8], eax; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x000e7cee: mov ecx, dword ptr [esp + 0x54]; mov edx, edi; call dword ptr gs:[0x10]; 
0x000e7d8d: mov ecx, dword ptr [esp + 0x54]; mov edx, edi; mov dword ptr [esp + 0xc], eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x000e7d57: mov ecx, dword ptr [esp + 0x54]; mov edx, edi; mov dword ptr [esp + 0xc], eax; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000e7c8b: mov ecx, dword ptr [esp + 0x54]; mov edx, edi; mov esi, ebp; call dword ptr gs:[0x10]; 
0x000a0475: mov ecx, dword ptr [esp + 0x64]; lea esi, [esp + 0x2c]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x001300a6: mov ecx, dword ptr [esp + 0x64]; lea esi, [esp + 0x2c]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x00130134: mov ecx, dword ptr [esp + 0x64]; mov eax, 0x145; mov esi, edi; call dword ptr gs:[0x10]; 
0x00130006: mov ecx, dword ptr [esp + 0x64]; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x0012f5f5: mov ecx, dword ptr [esp + 0x64]; mov ebx, dword ptr [esp + 0x60]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000a04e8: mov ecx, dword ptr [esp + 0x64]; mov esi, dword ptr [esp + 4]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x000a03da: mov ecx, dword ptr [esp + 0x64]; mov esi, dword ptr [esp + 4]; mov eax, 0x199; call dword ptr gs:[0x10]; 
0x0011f403: mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0008f069: mov ecx, dword ptr [esp + 0xc]; mov eax, 0x1a6; xor edx, edx; call dword ptr gs:[0x10]; 
0x000fb690: mov ecx, dword ptr [esp + 0xc]; mov eax, 0xdb; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0008f0c0: mov ecx, dword ptr [esp + 0xc]; mov eax, 0xf0; xor edx, edx; call dword ptr gs:[0x10]; 
0x000612c5: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00130d75: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00130845: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x0011f635: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x00121545: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x00121035: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x00114af5: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x001309e5: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1ac; call dword ptr gs:[0x10]; 
0x00130755: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b0; call dword ptr gs:[0x10]; 
0x001307b5: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b1; call dword ptr gs:[0x10]; 
0x001147e5: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x00130a45: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b6; call dword ptr gs:[0x10]; 
0x001236c5: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x0012d975: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x001308c5: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x00130585: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x00129565: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x00130665: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x00130695: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x0010c185: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x001309b5: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000eab55: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x0011f095: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x00115115: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000f0ac5: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000f0a95: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x001146f5: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x00128835: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x00128755: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x00128455: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x00128485: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x00124925: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x00131c15: mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov dword ptr [esp + 0x1c], eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00131bd7: mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov dword ptr [esp + 0x1c], eax; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x00131b6c: mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00099b59: mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x00025536: mov ecx, dword ptr [esp + 0xc]; sub ecx, dword ptr gs:[0x14]; jne 0x25547; add esp, 0x1c; ret; 
0x000907b8: mov ecx, dword ptr [esp + 4]; mov eax, 0x16; cmp edx, 2; jbe 0x907d0; ret; 
0x00099671: mov ecx, dword ptr [esp + 4]; mov eax, 0xf0; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000fb59f: mov ecx, dword ptr [esp + 4]; mov eax, 1; test ecx, ecx; js 0xfb5b0; ret; 
0x0009d6ae: mov ecx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x3ba4]; test eax, eax; jne 0x9d6c7; ret; 
0x0010d209: mov ecx, dword ptr [esp + 4]; mov esi, 8; call dword ptr gs:[0x10]; 
0x00091097: mov ecx, dword ptr [esp + 4]; xor cl, 0x81; mov dword ptr [edi + edx*4 + 8], 0; mov edx, 0x7fffffff; call dword ptr gs:[0x10]; 
0x00133434: mov ecx, dword ptr [esp + 8]; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x00130892: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x00130c12: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x0012ed02: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x0011fd12: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x00130c42: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x00130cb2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x00130ce2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x00130d12: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x00130782: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x1ae; call dword ptr gs:[0x10]; 
0x00130a12: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x1b2; call dword ptr gs:[0x10]; 
0x00130b12: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x1c0; call dword ptr gs:[0x10]; 
0x0003c952: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x0010c312: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x0012b622: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x0012b832: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x001296b2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x00114ef2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x0012b382: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x001305d2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x001157b2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x00128ab2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x00129662: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x0010c152: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x0010be42: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x0012d9c2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x00130602: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x00130632: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x0003cf92: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000efa92: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x00130a72: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x0012adb2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x001284b2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x00124952: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x000c4d68: mov ecx, dword ptr [esp + 8]; mov edx, dword ptr [eax]; cmp ecx, edx; jne 0xc4d8a; ret; 
0x000dbe05: mov ecx, dword ptr [esp + 8]; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x00093f27: mov ecx, dword ptr [esp + 8]; xor edx, edx; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x000938a7: mov ecx, dword ptr [esp + 8]; xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x00189c31: mov ecx, dword ptr [esp]; ret; 
0x00092f6c: mov ecx, dword ptr es:[ebp - 0x58]; mov eax, 0xf0; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x000e8c5f: mov ecx, dword ptr gs:[0x14]; mov dword ptr [esp + 0x13c], ecx; mov ecx, dword ptr [esp + 0x164]; call dword ptr gs:[0x10]; 
0x0012d6bc: mov ecx, eax; cmp eax, 0xfffff000; ja 0x12d6d0; mov eax, ecx; pop ebx; ret; 
0x0009fe08: mov ecx, eax; cmp eax, 0xfffff000; ja 0x9fe18; mov eax, ecx; pop ebx; ret; 
0x0010d828: mov ecx, eax; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x0010d984: mov ecx, eax; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x000decc1: mov ecx, eax; ror ecx, 2; cmp ecx, 0x28f5c28; jbe 0xdecd8; mov eax, edx; ret; 
0x00120f62: mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0003d69e: mov ecx, ebp; mov dword ptr [esp + 0xc], eax; mov edx, edi; mov eax, 0x1a5; call dword ptr gs:[0x10]; 
0x0003d65e: mov ecx, ebp; mov dword ptr [esp + 0xc], eax; mov edx, edi; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x0009fc55: mov ecx, ebp; mov dword ptr [esp + 0xc], eax; mov esi, dword ptr [esp + 0x4c]; mov eax, 0x117; call dword ptr gs:[0x10]; 
0x0009fc9d: mov ecx, ebp; mov dword ptr [esp + 0xc], eax; mov esi, dword ptr [esp + 0x4c]; mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x0009f98d: mov ecx, ebp; mov dword ptr [esp + 0xc], eax; mov esi, dword ptr [esp + 4]; mov eax, 0x118; call dword ptr gs:[0x10]; 
0x0009f9cd: mov ecx, ebp; mov dword ptr [esp + 0xc], eax; mov esi, dword ptr [esp + 4]; mov eax, 0x1a3; call dword ptr gs:[0x10]; 
0x0010e5ba: mov ecx, ebp; mov edx, dword ptr [esp + 0x88]; call dword ptr gs:[0x10]; 
0x0003d59c: mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x0009fb81: mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x0009f8bb: mov ecx, ebp; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0010e6ac: mov ecx, ebp; mov esi, edi; mov edx, dword ptr [esp + 0x88]; call dword ptr gs:[0x10]; 
0x00178026: mov ecx, ecx; ljmp 0x8908:0x24748bff; ret; 
0x0009ebab: mov ecx, edi; call dword ptr [eax + 0x68]; 
0x0009e21e: mov ecx, edi; call dword ptr [eax - 0x18]; 
0x0009e20e: mov ecx, edi; call dword ptr [eax - 0x73]; 
0x0009ddf4: mov ecx, edi; call dword ptr gs:[0x10]; 
0x0003dc97: mov ecx, edi; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x00094f5f: mov ecx, edi; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000a0255: mov ecx, edx; call dword ptr gs:[0x10]; 
0x0007bf4b: mov ecx, edx; mov dword ptr [eax + 0x94], ecx; mov ecx, dword ptr [eax + 0x58]; mov dword ptr [ecx + 0x88], edx; ret; 
0x00091990: mov ecx, edx; mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00131ae8: mov ecx, edx; mov edx, edi; mov edi, ebp; call dword ptr gs:[0x10]; 
0x000c25f9: mov ecx, edx; rep stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0004e0cb: mov ecx, es; stc; jmp dword ptr [ebp - 0x75]; 
0x0009f4fd: mov ecx, esi; call dword ptr gs:[0x10]; 
0x000402c4: mov ecx, esi; mov eax, 0x163; xor edx, edx; sub ecx, ebx; call dword ptr gs:[0x10]; 
0x0009a42b: mov ecx, esi; mov ebx, dword ptr [esp + 0xa0]; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x0011546d: mov ecx, esi; mov edx, ebp; call dword ptr gs:[0x10]; 
0x001154a9: mov ecx, esi; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00115293: mov ecx, esi; mov edx, edi; call dword ptr gs:[0x10]; 
0x00115311: mov ecx, esi; mov edx, edi; mov dword ptr [esp + 4], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0013bf27: mov ecx, esp; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000eb149: mov edi, 0x1000; call dword ptr gs:[0x10]; 
0x00096ca2: mov edi, 0x2ac85; add byte ptr [ecx], bh; ret 0x4f0f; 
0x00197c73: mov edi, 0x300043b; sbb al, 0x8b; jmp ebx; 
0x001951f3: mov edi, 0x3000463; sbb al, 0x8b; jmp ebx; 
0x00084c7d: mov edi, 0x39000000; ret; 
0x00147406: mov edi, 0x39fe5f4c; sar dword ptr [eax], 0xf; dec edi; ret; 
0x000d96dd: mov edi, 0x5f000000; pop esi; ret; 
0x000baf5d: mov edi, 0x5f000005; pop esi; pop ebx; ret; 
0x0019cc5a: mov edi, 0x81fffecf; ret; 
0x0019335a: mov edi, 0x81ffff68; ret; 
0x0010e2ea: mov edi, 0x850f001f; cmp eax, 0xf7fffffd; ret 0x67; 
0x001048e5: mov edi, 0x89000000; ret 0xe2c1; 
0x0007566d: mov edi, 0x89ffffdc; ret; 
0x00122fa1: mov edi, 0x8b000000; dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0005b92d: mov edi, 0x8d000e0e; xchg al, bl; jns 0x5b92f; call dword ptr [eax - 0x73]; 
0x0019dc6b: mov edi, 0xc381fffe; inc edx; in al, 3; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00156c71: mov edi, 0xc483fff6; adc byte ptr [ebp + 0x71840fc0], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f714], al; les ebx, ptr [ebp - 7]; call dword ptr [eax - 1]; 
0x0005f72c: mov edi, 0xc483ffff; or al, 0x53; push edi; push esi; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0012dc4e: mov edi, 0xc6810005; ret; 
0x001616dd: mov edi, 0xe8fffffb; sbb al, dh; std; jmp dword ptr [esi - 0x70]; 
0x000dfa76: mov edi, 0xf600001d; ret; 
0x00064bfa: mov edi, 0xfa89fff8; mov edi, ecx; jmp edx; 
0x000657c4: mov edi, 0xfc985d0; inc ebp; ret 0xc189; 
0x00097cb8: mov edi, 0xfffcf7e9; jmp dword ptr [esi - 0x70]; 
0x00120538: mov edi, 8; call dword ptr gs:[0x10]; 
0x0008cc95: mov edi, cs; sldt word ptr [0x1b217b]; mov eax, dword ptr [eax + 0xe6c]; ret; 
0x0003c4f4: mov edi, dword ptr [eax + 8]; mov ebp, dword ptr [eax + 0xc]; nop; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x00122a62: mov edi, dword ptr [ebp + 0xa4]; mov ecx, 0x5401; mov ebp, dword ptr [eax + edi]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0009de04: mov edi, dword ptr [ebp]; mov dword ptr [esp], ebp; call 0x231a0; mov dword ptr [esp], esi; call edi; 
0x0013bf80: mov edi, dword ptr [ecx + 8]; mov ebp, dword ptr [ecx + 0xc]; nop; jmp edx; 
0x0009c075: mov edi, dword ptr [edi + 0xc]; push dword ptr [eax + 4]; call dword ptr [eax]; 
0x001219f8: mov edi, dword ptr [edi + 4]; call dword ptr gs:[0x10]; 
0x001219f8: mov edi, dword ptr [edi + 4]; call dword ptr gs:[0x10]; pop ebp; pop edi; pop ebx; ret; 
0x000f1784: mov edi, dword ptr [edx + ebx]; mov dword ptr [ebp - 0x5b0], edx; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5b4]; call dword ptr [eax + 0x10]; 
0x000f8a04: mov edi, dword ptr [edx + ebx]; mov dword ptr [ebp - 0x5c0], edx; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5d0]; push dword ptr [ebp - 0x5c4]; call dword ptr [eax + 0x10]; 
0x00023531: mov edi, dword ptr [esi + 5]; add byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x00133683: mov edi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00065941: mov edi, dword ptr [esp + 0x18]; add edi, dword ptr [ecx + edx*4 - 0x73e94]; mov edx, edi; mov edi, eax; jmp edx; 
0x00192987: mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0011fe2a: mov edi, dword ptr [esp + 0x1c]; sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x000eaba8: mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x0012e1c7: mov edi, dword ptr [esp + 0x28]; mov eax, 0x78; mov dword ptr [ecx], ebx; int 0x80; 
0x001328e6: mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x00132916: mov edi, dword ptr [esp + 0x34]; mov dword ptr [esp + 8], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0011f4c4: mov edi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000a0737: mov edi, dword ptr [esp + 0x3c]; lea ecx, [ebp - 0x722d4]; call dword ptr gs:[0x10]; 
0x00120f5a: mov edi, dword ptr [esp + 0x40]; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00170273: mov edi, dword ptr [esp + 0x4c]; push edi; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x00129721: mov edi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x00129751: mov edi, dword ptr [esp + 4]; mov dword ptr [esp + 0xc], eax; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x0012a081: mov edi, dword ptr [esp + 4]; mov dword ptr [esp + 0xc], eax; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x00189c19: mov edi, dword ptr [esp]; ret; 
0x000ab48f: mov edi, eax; jmp dword ptr [esi - 0x70]; 
0x00064f96: mov edi, eax; jmp edx; 
0x00122d43: mov edi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000935ed: mov edi, eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x000e8a4c: mov edi, eax; mov eax, 0xdc; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0018c569: mov edi, eax; mov eax, ebp; mov edx, ecx; mov esi, ecx; call dword ptr gs:[0x10]; 
0x0012f365: mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x00040435: mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x001295e5: mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x0012ac95: mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x0012d8a5: mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0011fd95: mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x001207c5: mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 3; call dword ptr gs:[0x10]; 
0x00121975: mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 4; call dword ptr gs:[0x10]; 
0x0012ec7d: mov edi, eax; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x0012fd1d: mov edi, eax; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x0013031d: mov edi, eax; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x0013213d: mov edi, eax; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x000c24dd: mov edi, eax; mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x00131aec: mov edi, ebp; call dword ptr gs:[0x10]; 
0x0005b51f: mov edi, ebp; dec dword ptr [ebp - 0x6866b7a]; call dword ptr [eax - 0x73]; 
0x00131bd5: mov edi, ebp; mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov dword ptr [esp + 0x1c], eax; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x000a10ee: mov edi, ecx; call dword ptr [eax + 0x6a]; 
0x000658a7: mov edi, ecx; jmp eax; 
0x00064623: mov edi, ecx; jmp edx; 
0x000644ef: mov edi, ecx; mov dword ptr [esp + 0x10], 0; jmp edx; 
0x0006449f: mov edi, ecx; mov dword ptr [esp + 0x10], 1; jmp edx; 
0x00064ef4: mov edi, ecx; mov dword ptr [esp + 0x1c], 1; jmp edx; 
0x00065163: mov edi, ecx; mov dword ptr [esp + 0x44], 0; jmp edx; 
0x00131ae1: mov edi, ecx; mov eax, 0x1a1; mov ecx, edx; mov edx, edi; mov edi, ebp; call dword ptr gs:[0x10]; 
0x00198d5d: mov edi, edi; jecxz 0x198d49; mov eax, 0x81ffff0e; ret; 
0x0019b097: mov edi, edi; jecxz 0x19b028; mov dh, 0; add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x0019c077: mov edi, edi; jecxz 0x19c008; mov dh, 0; add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x0019d077: mov edi, edi; jecxz 0x19d008; mov dh, 0; add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x0006dc42: mov edi, edi; jmp dword ptr [esi - 0x70]; 
0x00070aa6: mov edi, edx; cmp ecx, 0x5a; jbe 0x71983; mov ecx, dword ptr [esp + 0x4c]; mov dword ptr [esp + 4], ecx; jmp eax; 
0x0003dc93: mov edi, edx; xor edx, edx; mov ecx, edi; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x0009e02b: mov edi, esi; jmp dword ptr [esi - 0x70]; 
0x0008ff21: mov edx, 0; cmove eax, edx; ret; 
0x0009d6ce: mov edx, 0; cmovne eax, edx; ret; 
0x00132b90: mov edx, 0x100; call dword ptr gs:[0x10]; 
0x00122e88: mov edx, 0x100; mov word ptr [eax + 0x16], dx; ret; 
0x00043315: mov edx, 0x10; cmove eax, edx; ret; 
0x000907ef: mov edx, 0x16; mov eax, 0x5f; cmovne eax, edx; ret; 
0x00043292: mov edx, 0x20; cmove eax, edx; ret; 
0x000fb193: mov edx, 0x20; cmovne eax, edx; ret; 
0x001555ed: mov edx, 0x39000001; ret 0x840f; 
0x00133e7b: mov edx, 0x40; call dword ptr gs:[0x10]; 
0x000fb1ab: mov edx, 0x40; cmove eax, edx; ret; 
0x0012523e: mov edx, 0x64; mov eax, dword ptr [eax + 0x108]; mov eax, dword ptr [eax + 0x20]; test eax, eax; cmove eax, edx; ret; 
0x0002c51f: mov edx, 0x68fff92a; add byte ptr [edx], 0; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], ch; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x0016f62d: mov edx, 0x6afff963; add eax, 0x4c868d50; je 0x16f632; call dword ptr [eax - 0x18]; 
0x000910a6: mov edx, 0x7fffffff; call dword ptr gs:[0x10]; 
0x000982a8: mov edx, 0x7fffffff; mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x00098472: mov edx, 0x7fffffff; setne cl; shl ecx, 7; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00090adf: mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000912b1: mov edx, 0x7fffffff; xor esi, esi; add ebx, eax; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0009683d: mov edx, 0x7fffffff; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00098864: mov edx, 0x7fffffff; xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00091931: mov edx, 0x7fffffff; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x001255d2: mov edx, 0x83000000; in al, dx; or al, 0x89; ret; 
0x001815e2: mov edx, 0x83ffea1b; les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x0005a5f9: mov edx, 0x89000000; aad 0x89; ret 0xe889; 
0x000fd146: mov edx, 0x89000000; ret; 
0x000834fa: mov edx, 0x89000002; ret 0x468b; 
0x00059971: mov edx, 0x89ffffed; ret; 
0x000965d7: mov edx, 0x8dfffffe; xchg byte ptr [eax], al; xchg ecx, edi; call dword ptr [eax + 0x68]; 
0x00127134: mov edx, 0xc483fff9; adc byte ptr [ebp + 0x74840fc0], al; or eax, dword ptr [eax]; add byte ptr [ebp - 0x6b0087d], cl; call dword ptr [edx + 0x52]; 
0x0012711a: mov edx, 0xc483fff9; adc byte ptr [ebp - 0x387bf040], al; or al, byte ptr [eax]; add byte ptr [ebp - 0x6b03e7d], cl; call dword ptr [ecx + 0x51]; 
0x0008f8e1: mov edx, 0xfffffffe; xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x0012b3f0: mov edx, 0xffffffff; call dword ptr gs:[0x10]; 
0x001a5e25: mov edx, 0xffffffff; cmovbe eax, edx; pop esi; pop ebp; pop ebx; ret; 
0x000a89f9: mov edx, 0xffffffff; cmove eax, edx; add eax, 1; ret; 
0x0002838d: mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x00152b98: mov edx, 0xffffffff; mov eax, edx; pop ebx; pop esi; ret; 
0x000a8a43: mov edx, 0xffffffff; pop ebx; cmove eax, edx; add eax, 0x21; ret; 
0x000a8a2f: mov edx, 0xffffffff; pop ebx; cmove eax, edx; add eax, 1; ret; 
0x0008fa5a: mov edx, 1; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x001265c9: mov edx, 1; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0008f821: mov edx, 1; call dword ptr gs:[0x10]; 
0x00186deb: mov edx, 1; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0009dff2: mov edx, 1; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00086828: mov edx, 1; mov eax, edx; ret; 
0x00092f0c: mov edx, 1; mov ebx, edi; call dword ptr gs:[0x10]; 
0x00122d3e: mov edx, 1; mov edi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00152ba8: mov edx, 1; pop ebx; pop esi; mov eax, edx; ret; 
0x0008f2df: mov edx, 1; push ebx; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00091316: mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00024db5: mov edx, 1; xor ebx, ebx; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x00097a07: mov edx, 1; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00091348: mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x000915d8: mov edx, 1; xor esi, esi; lea ebx, [edi + eax + 0x28]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0009180d: mov edx, 1; xor esi, esi; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x00091676: mov edx, 1; xor esi, esi; mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00091e2f: mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00133f99: mov edx, 2; mov ecx, dword ptr [ebp - 0x510]; mov dword ptr [ebp - 0x4e8], eax; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x00125e96: mov edx, 2; test eax, eax; cmove eax, edx; add esp, 0xc; ret; 
0x0008f223: mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008f292: mov edx, 2; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00134022: mov edx, 8; call dword ptr gs:[0x10]; 
0x00043274: mov edx, 8; cmove eax, edx; ret; 
0x0015ec64: mov edx, ds; int1; call dword ptr [eax + 0x6a]; 
0x00189d07: mov edx, dword ptr [0]; mov dword ptr [edx + eax], 0x16; xor eax, eax; ret; 
0x0014b0ff: mov edx, dword ptr [0]; mov eax, dword ptr [eax + 0x1c8]; mov eax, dword ptr [edx + eax]; ret; 
0x00095a5f: mov edx, dword ptr [0x68]; mov dword ptr [eax + 8], edx; xor edx, edx; mov eax, edx; ret; 
0x0008e72f: mov edx, dword ptr [0x78]; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x0008e766: mov edx, dword ptr [0x78]; mov dword ptr [eax + 0xc], edx; mov dword ptr gs:[0x78], eax; ret; 
0x000904c8: mov edx, dword ptr [eax + 0x10]; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x00024b6e: mov edx, dword ptr [eax + 0x118]; test edx, edx; je 0x24b79; ret; 
0x00177c32: mov edx, dword ptr [eax + 0x20]; lea ebx, [esp + 0xe0]; push ebx; push eax; call dword ptr [edx + 8]; 
0x00178141: mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x00174042: mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x001775e2: mov edx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [edx + 4]; 
0x0016ee2e: mov edx, dword ptr [eax + 0x20]; push esi; push eax; call dword ptr [edx + 4]; 
0x0008adfd: mov edx, dword ptr [eax + 0x24]; mov dword ptr [eax + 0x24], ecx; mov dword ptr [eax + 0xc], edx; mov dword ptr [eax + 4], edx; ret; 
0x0017991f: mov edx, dword ptr [eax + 0x28]; mov dword ptr [esp + 0x28], edx; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x00042268: mov edx, dword ptr [eax + 0x38]; mov ecx, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + 0x40]; ret; 
0x000868b6: mov edx, dword ptr [eax + 0xc]; mov dword ptr [eax + 0x10], edx; add esp, 8; pop ebx; ret; 
0x0008e79a: mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0017814a: mov edx, dword ptr [eax + 4]; mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x0016f37c: mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x00176479: mov edx, dword ptr [eax + 4]; push ecx; push eax; call dword ptr [edx + 8]; 
0x001798b6: mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x00169486: mov edx, dword ptr [eax + ebx]; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x000982fb: mov edx, dword ptr [eax]; and edx, 2; je 0x98310; xor eax, eax; add esp, 0xc; ret; 
0x000c4d6c: mov edx, dword ptr [eax]; cmp ecx, edx; jne 0xc4d8a; ret; 
0x0010a818: mov edx, dword ptr [eax]; mov dword ptr [eax], ecx; mov eax, edx; ret; 
0x00092a7d: mov edx, dword ptr [eax]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x0010ce38: mov edx, dword ptr [eax]; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x108], edx; xor eax, eax; ret; 
0x000903f8: mov edx, dword ptr [eax]; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x00081c76: mov edx, dword ptr [eax]; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x00188ab7: mov edx, dword ptr [eax]; test edx, edx; jne 0x188ac8; add esp, 8; pop ebx; ret; 
0x0003d38e: mov edx, dword ptr [eax]; xor eax, eax; test edx, edx; sete al; ret; 
0x0002693d: mov edx, dword ptr [ebp - 0x44]; call edx; 
0x0009082d: mov edx, dword ptr [ebx + 0x18]; and dword ptr [edx + 8], 0x7fffffff; and dword ptr [edx + 0xc], 0xfffffffe; add esp, 8; pop ebx; ret; 
0x00040621: mov edx, dword ptr [ebx + 2]; mov dword ptr [eax], edx; xor eax, eax; add esp, 8; pop ebx; ret; 
0x0008ddbf: mov edx, dword ptr [ebx + 8]; mov dword ptr [edx], eax; add esp, 4; pop ebx; pop esi; ret; 
0x0003340f: mov edx, dword ptr [ebx + eax*4 + 0x20]; pop ebx; mov eax, edx; ret; 
0x0012f205: mov edx, dword ptr [ebx + ecx]; cmp edx, 0x26; je 0x12f263; pop ebx; pop esi; ret; 
0x00091480: mov edx, dword ptr [ebx]; mov eax, edx; shr eax, 3; je 0x914b8; mov eax, edi; call dword ptr gs:[0x10]; 
0x0008e564: mov edx, dword ptr [ebx]; push esi; push eax; push ecx; call edx; 
0x00188e20: mov edx, dword ptr [ecx + 0x108]; shl eax, 5; lea eax, [eax + edx + 0x5c]; ret; 
0x0008dd0b: mov edx, dword ptr [ecx + 0x18]; mov dword ptr [eax], edx; add esp, 4; pop ebx; pop esi; ret; 
0x000348ec: mov edx, dword ptr [ecx + 0x2c]; add edx, 0x200; mov dword ptr [eax + ebx], edx; pop ebx; pop esi; ret; 
0x0006073b: mov edx, dword ptr [ecx + edi*4 - 8]; inc dword ptr [ecx]; fidivr dword ptr [esi]; jmp edx; 
0x0018526f: mov edx, dword ptr [ecx]; add edx, dword ptr [eax + 8]; mov dword ptr [ebx + 0xc], edx; pop ebx; ret; 
0x0008fcb8: mov edx, dword ptr [edi + 0x10]; test edx, edx; je 0x8fcf8; xor esi, esi; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0008f9a2: mov edx, dword ptr [edi + 0x1acc]; mov eax, dword ptr [edx]; mov ebx, dword ptr [edx + 4]; mov ecx, dword ptr [edx + 8]; mov edx, dword ptr [edx + 0xc]; call dword ptr gs:[0x10]; 
0x000a6c08: mov edx, dword ptr [edi + 0x90]; mov dword ptr [esp + 0xc], eax; call dword ptr [edx]; 
0x0008fd6e: mov edx, dword ptr [edi + 0xc]; call dword ptr gs:[0x10]; 
0x00170891: mov edx, dword ptr [edi + 4]; and eax, 0xfffffffc; push eax; push edi; call dword ptr [edx + 0x18]; 
0x00170698: mov edx, dword ptr [edx + 0x10]; mov dword ptr [eax], 7; mov dword ptr [eax + 4], edx; pop ebx; ret; 
0x001706c3: mov edx, dword ptr [edx + 0x14]; mov dword ptr [eax], 6; mov dword ptr [eax + 4], ecx; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x0013beef: mov edx, dword ptr [edx + 0x14]; xor eax, eax; test edx, edx; sete al; ret; 
0x001706f3: mov edx, dword ptr [edx + 0x20]; mov dword ptr [eax], 9; mov dword ptr [eax + 4], ecx; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x0017689a: mov edx, dword ptr [edx + 0x2c]; mov dword ptr [eax + 8], edx; ret; 
0x0017726a: mov edx, dword ptr [edx + 0x34]; mov dword ptr [eax + 8], edx; ret; 
0x0008690f: mov edx, dword ptr [edx + 0x58]; mov eax, dword ptr [edx + 0x10]; sub eax, dword ptr [edx + 0xc]; sar eax, 2; ret; 
0x000867df: mov edx, dword ptr [edx + 0x58]; mov eax, dword ptr [edx + 0x1c]; sub eax, dword ptr [edx + 0x18]; sar eax, 2; ret; 
0x00173be0: mov edx, dword ptr [edx + 0x8c]; mov dword ptr [eax + 8], edx; ret; 
0x0007c19c: mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 4], edx; jmp eax; 
0x0007c09d: mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 8], edx; pop ebx; jmp eax; 
0x000fb5b7: mov edx, dword ptr [edx + 0xa4]; cmp dword ptr [ecx + edx], 0x26; je 0xfb5ac; mov eax, 0xffffffff; ret; 
0x00024f68: mov edx, dword ptr [edx + 0xa4]; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; ret; 
0x0003c9b7: mov edx, dword ptr [edx + 0xa4]; neg eax; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; pop ebx; ret; 
0x0012f09f: mov edx, dword ptr [edx + 0xa4]; neg eax; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; ret; 
0x0008f9b0: mov edx, dword ptr [edx + 0xc]; call dword ptr gs:[0x10]; 
0x00141e21: mov edx, dword ptr [edx + 0xc]; mov dword ptr [eax + 0xc], edx; xor eax, eax; pop ebx; pop esi; ret; 
0x0015c80f: mov edx, dword ptr [edx + 8]; pop ebx; pop esi; mov eax, edx; ret; 
0x00080a43: mov edx, dword ptr [edx]; cmp eax, ecx; cmovg eax, ecx; test edx, edx; jne 0x80a40; ret; 
0x0008abc3: mov edx, dword ptr [edx]; cmp eax, ecx; cmovg eax, ecx; test edx, edx; jne 0x8abc0; ret; 
0x000959c2: mov edx, dword ptr [edx]; lea eax, [eax + 0x2a0]; mov dword ptr [eax], edx; ret; 
0x0008e8d2: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x290], edx; ret; 
0x0008e8f2: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x294], edx; ret; 
0x0008e912: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x298], edx; ret; 
0x0008e932: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x29c], edx; ret; 
0x000959a2: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x2a4], edx; ret; 
0x00095982: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x2ac], edx; ret; 
0x00133b9c: mov edx, dword ptr [edx]; mov dword ptr [eax], edx; mov eax, 1; ret; 
0x0008ff18: mov edx, dword ptr [edx]; mov eax, 0x16; test edx, edx; mov edx, 0; cmove eax, edx; ret; 
0x0009af2c: mov edx, dword ptr [edx]; mov ecx, dword ptr [eax]; cmp dword ptr [edx + 0x14], ecx; je 0x9af40; ret; 
0x000a0b42: mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x34c], edx; mov dword ptr [eax + 0x378], 1; ret; 
0x000a0b92: mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x350], edx; mov dword ptr [eax + 0x378], 1; ret; 
0x000a0bc2: mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x354], edx; mov dword ptr [eax + 0x378], 1; ret; 
0x000a08b2: mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x358], edx; ret; 
0x000a0892: mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x35c], edx; ret; 
0x000a0b12: mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x370], edx; mov dword ptr [eax + 0x378], 1; ret; 
0x000a0942: mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x394], edx; ret; 
0x000a0b72: mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x3c34], edx; ret; 
0x000c4291: mov edx, dword ptr [edx]; xor eax, eax; test edx, edx; sete al; ret; 
0x000bd692: mov edx, dword ptr [esi + 3]; mov dword ptr [eax], ecx; mov dword ptr [eax + 3], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0017c07a: mov edx, dword ptr [esi + 4]; push eax; push ecx; push esi; call dword ptr [edx + 0xc]; 
0x0017c0b3: mov edx, dword ptr [esi + 4]; push eax; push ecx; push esi; call dword ptr [edx + 8]; 
0x000c0a93: mov edx, dword ptr [esi]; mov dword ptr [eax], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd650: mov edx, dword ptr [esi]; mov dword ptr [eax], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0012d964: mov edx, dword ptr [esi]; mov dword ptr [eax], edx; pop ebx; pop esi; pop edi; ret; 
0x000b9990: mov edx, dword ptr [esi]; mov dword ptr [edi], edx; pop edi; pop esi; pop ebx; ret; 
0x000c0a64: mov edx, dword ptr [esi]; mov word ptr [eax], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd631: mov edx, dword ptr [esi]; mov word ptr [eax], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b9971: mov edx, dword ptr [esi]; mov word ptr [edi], dx; pop edi; pop esi; pop ebx; ret; 
0x00131c19: mov edx, dword ptr [esp + 0x10]; mov dword ptr [esp + 0x1c], eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00131bdb: mov edx, dword ptr [esp + 0x10]; mov dword ptr [esp + 0x1c], eax; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x00131b70: mov edx, dword ptr [esp + 0x10]; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00099b5d: mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x0011604b: mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00130d71: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00130841: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x0011f631: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x00121541: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x00121031: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x00114af1: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x001309e1: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1ac; call dword ptr gs:[0x10]; 
0x00130751: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b0; call dword ptr gs:[0x10]; 
0x001307b1: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b1; call dword ptr gs:[0x10]; 
0x001147e1: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x00130a41: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b6; call dword ptr gs:[0x10]; 
0x001236c1: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x0012d971: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x001308c1: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x00130581: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x00129561: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x00130661: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x00130691: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x0010c181: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x001309b1: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000eab51: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x0011f091: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x00115111: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000f0ac1: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000f0a91: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x001146f1: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x00128831: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x00128751: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x00128451: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x00128481: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x00124921: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x0005b719: mov edx, dword ptr [esp + 0x10]; test byte ptr [edx], 0x20; je 0x5b730; add esp, 0xc; ret; 
0x000790c9: mov edx, dword ptr [esp + 0x10]; test byte ptr [edx], 0x20; je 0x790e0; add esp, 0xc; ret; 
0x00034e2b: mov edx, dword ptr [esp + 0x14]; add esp, 0xc; mov eax, edx; ret; 
0x00098310: mov edx, dword ptr [esp + 0x14]; call 0x981a0; xor eax, eax; add esp, 0xc; ret; 
0x0012316f: mov edx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000942ad: mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x0019044e: mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0009f80a: mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x001208a6: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x00130aa6: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x1a8; call dword ptr gs:[0x10]; 
0x00130b86: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x00126a66: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x00128426: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x001248f6: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x001306e6: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x0016fb49: mov edx, dword ptr [esp + 0x14]; push edx; push ebx; call dword ptr [eax + 0x14]; 
0x00132ad5: mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0012f46e: mov edx, dword ptr [esp + 0x18]; cmp esi, -1; je 0x12f490; mov eax, 0x17c; call dword ptr gs:[0x10]; 
0x0010b44b: mov edx, dword ptr [esp + 0x18]; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x0011f702: mov edx, dword ptr [esp + 0x18]; mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0010bde0: mov edx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x10]; cmp esi, ecx; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x0006131b: mov edx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0012ad7b: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x0011514b: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0011f11b: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x00130c7b: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x001308fb: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x0013097b: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1ad; call dword ptr gs:[0x10]; 
0x0013071b: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1af; call dword ptr gs:[0x10]; 
0x00130adb: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1b8; call dword ptr gs:[0x10]; 
0x0013093b: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1ba; call dword ptr gs:[0x10]; 
0x0013080b: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x00130b4b: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0012f54b: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xac; call dword ptr gs:[0x10]; 
0x0012b79b: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x001285fb: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x0012498b: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x00192983: mov edx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00132fc3: mov edx, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0017d01c: mov edx, dword ptr [esp + 0x18]; test edx, edx; jne 0x17d030; add esp, 0xc; ret; 
0x0017d18c: mov edx, dword ptr [esp + 0x18]; test edx, edx; jne 0x17d1a0; add esp, 0xc; ret; 
0x0012f00d: mov edx, dword ptr [esp + 0x1c]; mov eax, 0x12c; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x0012f29a: mov edx, dword ptr [esp + 0x1c]; mov eax, 0xa3; mov ebx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0009ddeb: mov edx, dword ptr [esp + 0x1c]; mov eax, 0xaf; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000eab9c: mov edx, dword ptr [esp + 0x1c]; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x0013d57e: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x13d595; add esp, 0x2c; ret; 
0x0013e7be: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x13e7d5; add esp, 0x2c; ret; 
0x00192b44: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x192b55; add esp, 0x2c; ret; 
0x000409d3: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x409e4; add esp, 0x2c; ret; 
0x00053493: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x534a4; add esp, 0x2c; ret; 
0x00092766: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x92777; add esp, 0x2c; ret; 
0x000972e2: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x972f3; add esp, 0x2c; ret; 
0x00098596: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x985a7; add esp, 0x2c; ret; 
0x00098a06: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x98a17; add esp, 0x2c; ret; 
0x00098f22: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x98f33; add esp, 0x2c; ret; 
0x00099372: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x99383; add esp, 0x2c; ret; 
0x0009c4cd: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x9c4f7; add esp, 0x2c; ret; 
0x0009c739: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x9c767; add esp, 0x2c; ret; 
0x0012b8b0: mov edx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x1c]; mov ebx, dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000eb0a1: mov edx, dword ptr [esp + 0x24]; call 0xead50; mov eax, 0xffffffff; add esp, 0x1c; ret; 
0x0010bef5: mov edx, dword ptr [esp + 0x24]; mov ebx, dword ptr [esp + 0x20]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0004040c: mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0012f367: mov edx, dword ptr [esp + 0x28]; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x00040437: mov edx, dword ptr [esp + 0x28]; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x001295e7: mov edx, dword ptr [esp + 0x28]; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x0012ac97: mov edx, dword ptr [esp + 0x28]; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x0012d8a7: mov edx, dword ptr [esp + 0x28]; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0011fd97: mov edx, dword ptr [esp + 0x28]; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x001207c7: mov edx, dword ptr [esp + 0x28]; mov eax, 3; call dword ptr gs:[0x10]; 
0x00121977: mov edx, dword ptr [esp + 0x28]; mov eax, 4; call dword ptr gs:[0x10]; 
0x0012d1de: mov edx, dword ptr [esp + 0x2c]; sub edx, dword ptr gs:[0x14]; jne 0x12d1ef; add esp, 0x3c; ret; 
0x00192a02: mov edx, dword ptr [esp + 0x34]; lea edi, [esp + 8]; mov eax, 0x75; mov ebx, 3; call dword ptr gs:[0x10]; 
0x000de914: mov edx, dword ptr [esp + 0x34]; mov ebx, dword ptr [esp + 0x30]; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012fdc5: mov edx, dword ptr [esp + 0x34]; mov ebx, dword ptr [esp + 0x30]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0011f4b8: mov edx, dword ptr [esp + 0x34]; mov ecx, dword ptr [esp + 0x38]; mov ebx, dword ptr [esp + 0x30]; mov edi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000fb6e6: mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00129a41: mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x0012a371: mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000fb711: mov edx, dword ptr [esp + 0x38]; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000fb8d1: mov edx, dword ptr [esp + 0x38]; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x00133613: mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x00120f56: mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 0x40]; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0012971d: mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0012974d: mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 4]; mov dword ptr [esp + 0xc], eax; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x0012a07d: mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 4]; mov dword ptr [esp + 0xc], eax; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x0010e8be: mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0010e8ef: mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov dword ptr [esp + 8], eax; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x0012ec7f: mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x0012fd1f: mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x0013031f: mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x0013213f: mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x001798c1: mov edx, dword ptr [esp + 0x3c]; sub edx, dword ptr gs:[0x14]; jne 0x1798d2; add esp, 0x4c; ret; 
0x00158cf6: mov edx, dword ptr [esp + 0x40]; mov dword ptr [edx], ebx; add esp, 0x28; pop ebx; ret; 
0x0009fbfd: mov edx, dword ptr [esp + 0x48]; mov eax, 0x117; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x0009f935: mov edx, dword ptr [esp + 0x48]; mov eax, 0x118; mov ecx, ebp; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0009fb78: mov edx, dword ptr [esp + 0x48]; mov eax, 0x1a2; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x0009f8b2: mov edx, dword ptr [esp + 0x48]; mov eax, 0x1a3; mov ecx, ebp; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x00132a2e: mov edx, dword ptr [esp + 0x48]; mov esi, dword ptr [esp + 0x50]; mov dword ptr [esp + 0x18], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x001231d4: mov edx, dword ptr [esp + 0x64]; mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x00132891: mov edx, dword ptr [esp + 0x6c]; sub edx, dword ptr gs:[0x14]; jne 0x1328a2; add esp, 0x7c; ret; 
0x0010e5bc: mov edx, dword ptr [esp + 0x88]; call dword ptr gs:[0x10]; 
0x0010e6fc: mov edx, dword ptr [esp + 0x88]; mov eax, 0x72; mov ebx, dword ptr [esp + 0x80]; call dword ptr gs:[0x10]; 
0x00114dd0: mov edx, dword ptr [esp + 0xa8]; mov eax, 0x133; call dword ptr gs:[0x10]; 
0x00114ca7: mov edx, dword ptr [esp + 0xa8]; mov esi, dword ptr [esp + 0xac]; call dword ptr gs:[0x10]; 
0x00114fcf: mov edx, dword ptr [esp + 0xb8]; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x00114f60: mov edx, dword ptr [esp + 0xb8]; mov eax, 0x1c4; mov esi, dword ptr [esp + 0xbc]; call dword ptr gs:[0x10]; 
0x0017cdf8: mov edx, dword ptr [esp + 0xc]; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x0007c15f: mov edx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x0012ad30: mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0003c195: mov edx, dword ptr [esp + 0xc]; fld dword ptr [esp]; mov dword ptr [edx], eax; add esp, 4; ret; 
0x0018979f: mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x000e7640: mov edx, dword ptr [esp + 0xc]; mov dword ptr [edx], ebx; pop ebx; ret; 
0x0012064a: mov edx, dword ptr [esp + 0xc]; mov dword ptr [esp + 8], eax; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x000deb24: mov edx, dword ptr [esp + 0xc]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x00094f18: mov edx, dword ptr [esp + 0xc]; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00120600: mov edx, dword ptr [esp + 0xc]; mov ecx, dword ptr [esp + 0x54]; mov dword ptr [esp + 8], eax; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x00094f5b: mov edx, dword ptr [esp + 0xc]; mov ecx, edi; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00122c9f: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x122cb7; add esp, 0x1c; ret; 
0x0012538f: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x1253a0; add esp, 0x1c; ret; 
0x00126b12: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x126b23; add esp, 0x1c; ret; 
0x0012d675: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x12d686; add esp, 0x1c; ret; 
0x00132690: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x1326a1; add esp, 0x1c; ret; 
0x00148d23: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x148d34; add esp, 0x1c; ret; 
0x00148d72: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x148d83; add esp, 0x1c; ret; 
0x0014b37c: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x14b3cc; add esp, 0x1c; ret; 
0x0017848b: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x1784a7; add esp, 0x1c; ret; 
0x0017899b: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x1789b7; add esp, 0x1c; ret; 
0x0018c6c2: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x18c6d3; add esp, 0x1c; ret; 
0x0003df23: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x3df34; add esp, 0x1c; ret; 
0x000405e8: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x405f9; add esp, 0x1c; ret; 
0x00040815: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x40826; add esp, 0x1c; ret; 
0x00040ae5: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x40af6; add esp, 0x1c; ret; 
0x00040b68: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x40b79; add esp, 0x1c; ret; 
0x0005ada1: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x5adbf; add esp, 0x1c; ret; 
0x000da707: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xda718; add esp, 0x1c; ret; 
0x000e4f6b: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xe4f7c; add esp, 0x1c; ret; 
0x000e742b: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xe743c; add esp, 0x1c; ret; 
0x000efa38: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xefa57; add esp, 0x1c; ret; 
0x00099b1d: mov edx, dword ptr [esp + 4]; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x00090c3d: mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000347c8: mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x000347e8: mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00152b0e: mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4e48]; test eax, eax; jne 0x152b27; ret; 
0x0003403e: mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0003462e: mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x000345fe: mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x2c]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x0017ca14: mov edx, dword ptr [esp + 4]; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x0003dc44: mov edx, dword ptr [esp + 4]; mov eax, edx; neg eax; cmovs eax, edx; ret; 
0x0008fbc1: mov edx, dword ptr [esp + 4]; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000959be: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; lea eax, [eax + 0x2a0]; mov dword ptr [eax], edx; ret; 
0x0008e8ce: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x290], edx; ret; 
0x0008e8ee: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x294], edx; ret; 
0x0008e90e: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x298], edx; ret; 
0x0008e92e: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x29c], edx; ret; 
0x0009599e: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x2a4], edx; ret; 
0x0009597e: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x2ac], edx; ret; 
0x000a08ae: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x358], edx; ret; 
0x000a088e: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x35c], edx; ret; 
0x000a093e: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x394], edx; ret; 
0x000a0b6e: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x3c34], edx; ret; 
0x000344fe: mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x000344ce: mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x0003449e: mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x000343de: mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x0003443e: mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x0003434e: mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x0003440e: mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x000343ae: mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x000345ae: mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x0003437e: mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x0003446e: mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x0003431e: mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x000794f0: mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 0x14], 2; mov dword ptr [eax + 0x18], edx; ret; 
0x00114618: mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x110], edx; xor eax, eax; ret; 
0x001897c8: mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x0017d2d0: mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0xc], edx; ret; 
0x000906f8: mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x0010ce18: mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x0014096c: mov edx, dword ptr [esp + 8]; mov dword ptr [edx + ebp], ecx; mov ebx, dword ptr [esp + 0x6c]; mov eax, 6; call dword ptr gs:[0x10]; 
0x00125171: mov edx, dword ptr [esp + 8]; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x000908f4: mov edx, dword ptr [esp + 8]; mov eax, 0x16; cmp edx, 0x3fff; ja 0x90910; ret; 
0x0008c968: mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x00189778: mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x000311c8: mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x00188768: mov edx, dword ptr [esp + 8]; mov ecx, dword ptr [eax]; test ecx, ecx; jne 0x188778; ret; 
0x00117a58: mov edx, dword ptr [esp + 8]; mov word ptr [edx + 0x3e], ax; xor eax, eax; ret; 
0x001194f8: mov edx, dword ptr [esp + 8]; mov word ptr [edx + 0x42], ax; xor eax, eax; ret; 
0x000908d8: mov edx, dword ptr [esp + 8]; or dword ptr [eax + 8], 8; mov dword ptr [eax + 0x10], edx; xor eax, eax; ret; 
0x00095ab2: mov edx, dword ptr [esp + 8]; shr eax, 0x13; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0009aa1a: mov edx, dword ptr [esp + 8]; shr eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00189c21: mov edx, dword ptr [esp]; ret; 
0x00123942: mov edx, dword ptr es:[edx + 0xa4]; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; ret; 
0x00189d06: mov edx, dword ptr gs:[0]; mov dword ptr [edx + eax], 0x16; xor eax, eax; ret; 
0x0014b0fe: mov edx, dword ptr gs:[0]; mov eax, dword ptr [eax + 0x1c8]; mov eax, dword ptr [edx + eax]; ret; 
0x00095a5e: mov edx, dword ptr gs:[0x68]; mov dword ptr [eax + 8], edx; xor edx, edx; mov eax, edx; ret; 
0x0008e72e: mov edx, dword ptr gs:[0x78]; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x0008e765: mov edx, dword ptr gs:[0x78]; mov dword ptr [eax + 0xc], edx; mov dword ptr gs:[0x78], eax; ret; 
0x00042cd1: mov edx, eax; mov eax, 0x10; pop ebx; sub eax, edx; ret; 
0x000fb60d: mov edx, eax; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x00042c3f: mov edx, eax; mov eax, 0x20; pop ebx; sub eax, edx; ret; 
0x00042ca3: mov edx, eax; mov eax, 0x40; pop ebx; sub eax, edx; ret; 
0x00124dc9: mov edx, eax; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00124879: mov edx, eax; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x0003ca1e: mov edx, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x000918a8: mov edx, eax; mov eax, 0xf0; or edx, 2; call dword ptr gs:[0x10]; 
0x00114769: mov edx, eax; mov eax, 6; call dword ptr gs:[0x10]; 
0x001149ed: mov edx, eax; mov eax, 8; call dword ptr gs:[0x10]; 
0x00042c11: mov edx, eax; mov eax, 8; pop ebx; sub eax, edx; ret; 
0x000913f4: mov edx, eax; mov eax, ebp; or edx, 2; call dword ptr gs:[0x10]; 
0x0007e12d: mov edx, eax; pop esi; pop edi; pop ebp; ret; 
0x0008bc69: mov edx, eax; ret; 
0x0003c899: mov edx, ebp; call dword ptr gs:[0x10]; 
0x0009db5d: mov edx, ebp; mov dword ptr [esp + 0x2c], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0011f7de: mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x001154ab: mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0008d4f7: mov edx, ebp; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00132bd7: mov edx, ebx; mov ebx, 0xe; call dword ptr gs:[0x10]; 
0x00130bd0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x136; call dword ptr gs:[0x10]; 
0x001306c0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x149; call dword ptr gs:[0x10]; 
0x00130870: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x0012b880: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x158; call dword ptr gs:[0x10]; 
0x00130d40: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x17e; call dword ptr gs:[0x10]; 
0x000ea140: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x00114a80: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x29; call dword ptr gs:[0x10]; 
0x00123780: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x33; call dword ptr gs:[0x10]; 
0x001214d0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x001214d0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3c; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00123960: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x00130bf0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x56; call dword ptr gs:[0x10]; 
0x0012d9a0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x0012d830: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x001305b0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x71; call dword ptr gs:[0x10]; 
0x0012b810: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x73; call dword ptr gs:[0x10]; 
0x00130bb0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x0010e3e0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x001307e0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x82; call dword ptr gs:[0x10]; 
0x000f0a40: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x84; call dword ptr gs:[0x10]; 
0x00114ed0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x0012f3e0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x88; call dword ptr gs:[0x10]; 
0x0012f3e0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x88; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x000f0af0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x93; call dword ptr gs:[0x10]; 
0x00128ae0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x98; call dword ptr gs:[0x10]; 
0x0010be70: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x0010be90: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x0010beb0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x00114680: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xc; call dword ptr gs:[0x10]; 
0x0012fa70: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x0012fa50: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x0012fa50: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd8; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00130890: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x00130c10: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x0012ed00: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x0011fd10: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x00130c40: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x00130cb0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x00130ce0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x00130d10: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x00130780: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x1ae; call dword ptr gs:[0x10]; 
0x00130a10: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x1b2; call dword ptr gs:[0x10]; 
0x00130b10: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x1c0; call dword ptr gs:[0x10]; 
0x0003c950: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x0010c310: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x0012b620: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x0012b830: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x001296b0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x00114ef0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x0012b380: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x001305d0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x001157b0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x00128ab0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x00129660: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x0010c150: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x0010be40: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x0012d9c0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x00130600: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x00130630: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x0003cf90: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000efa90: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x00130a70: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x0012adb0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x001284b0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x00124950: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x0009db2d: mov edx, ecx; mov ecx, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00071994: mov edx, ecx; mov ecx, dword ptr [esp + 0x4c]; mov dword ptr [esp + 4], ecx; jmp edx; 
0x0011fe28: mov edx, ecx; mov edi, dword ptr [esp + 0x1c]; sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x0018c56d: mov edx, ecx; mov esi, ecx; call dword ptr gs:[0x10]; 
0x000878a8: mov edx, ecx; stc; jmp dword ptr [esi - 0x70]; 
0x0003d59e: mov edx, edi; call dword ptr gs:[0x10]; 
0x00193e2b: mov edx, edi; jmp dword ptr [esi - 0x70]; 
0x00064eed: mov edx, edi; mov byte ptr [esp + 0x5e], 0x20; mov edi, ecx; mov dword ptr [esp + 0x1c], 1; jmp edx; 
0x000e7d91: mov edx, edi; mov dword ptr [esp + 0xc], eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x000e7d5b: mov edx, edi; mov dword ptr [esp + 0xc], eax; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x00115313: mov edx, edi; mov dword ptr [esp + 4], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0011f8de: mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0003d6a4: mov edx, edi; mov eax, 0x1a5; call dword ptr gs:[0x10]; 
0x0003d664: mov edx, edi; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x0006594c: mov edx, edi; mov edi, eax; jmp edx; 
0x00131aea: mov edx, edi; mov edi, ebp; call dword ptr gs:[0x10]; 
0x00064ba8: mov edx, edi; mov edi, ecx; jmp edx; 
0x000e7c8f: mov edx, edi; mov esi, ebp; call dword ptr gs:[0x10]; 
0x00089bfd: mov edx, edi; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00089c37: mov edx, edi; pop esi; pop edi; pop ebp; ret; 
0x000dec45: mov edx, esi; call dword ptr gs:[0x10]; 
0x000593ff: mov es, word ptr [eax - 0x77000000]; ret 0xb58b; 
0x001aae8e: mov es, word ptr [eax]; add byte ptr [eax], al; lea eax, [ecx + 8]; ret; 
0x001aa30e: mov es, word ptr [eax]; add byte ptr [eax], al; lea eax, [edi - 8]; pop edi; ret; 
0x00093fde: mov es, word ptr [eax]; cli; dec dword ptr [ebx - 0x7872dbc4]; clc; test cl, bh; call dword ptr [eax + 0x68]; 
0x00036e8e: mov es, word ptr [ebp + 0x1fffffd]; lds ebp, ptr [ecx]; ret; 
0x00083278: mov es, word ptr [ebx - 0x74fffffc]; push edx; add al, 0x8b; jl 0x832a7; or byte ptr [ebx + 0x290c246c], cl; ret 0xfac1; 
0x0010b68e: mov es, word ptr [ebx - 0x7c72f314]; inc esi; dec eax; stc; call dword ptr [eax - 0x18]; 
0x00114ecc: mov es, word ptr [edx]; add byte ptr [eax + 0x5c8bda89], dl; and al, 4; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x00047ddd: mov esi, 0x243c83d3; adc byte ptr [ebx - 0x6af068cc], cl; ret 0xd789; 
0x00047969: mov esi, 0x243c83db; adc byte ptr [edi], cl; xchg esp, eax; ret 0xc8b; 
0x000e02f4: mov esi, 0x246c8903; add al, 0x83; ret; 
0x00132fb2: mov esi, 0x31570010; call dword ptr [esi + 0x53]; 
0x000a6991: mov esi, 0x3c24; add byte ptr [edi - 0x7d], dh; in al, dx; or byte ptr [ebp - 0x6bb997a], cl; call dword ptr [ebx + 0x50]; 
0x0017a65b: mov esi, 0x810000f5; ret; 
0x0014455b: mov esi, 0x81000456; ret; 
0x00135a5b: mov esi, 0x81000541; ret; 
0x000c5e5b: mov esi, 0x81000c3d; ret; 
0x0019be5b: mov esi, 0x81fffedd; ret; 
0x000e7839: mov esi, 0x83000000; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x001701cc: mov esi, 0x83fffffe; in al, dx; or al, 0x56; call eax; 
0x0011036c: mov esi, 0x83fffffe; ret 0x8902; 
0x00030e1b: mov esi, 0x895f3cd0; push ebp; ror byte ptr [edi], 0x94; ret 0x3a3c; 
0x0006312a: mov esi, 0x89c68900; ret 0x44c7; 
0x0006ef5d: mov esi, 0x89c68900; ret; 
0x0009395e: mov esi, 0x8b000003; je 0x93989; add al, 0x89; ret; 
0x0002abae: mov esi, 0x8b000094; jl 0x2abd9; cmp byte ptr [ebp - 0x68d9b79], cl; call dword ptr [eax - 0x73]; 
0x0005a086: mov esi, 0x8b1b244c; je 0x5a0b1; sbb al, 0x89; ret 0xc801; 
0x000512ae: mov esi, 0x8bfffe2d; jl 0x512d9; sub byte ptr [ebp - 0x6878f79], cl; call dword ptr [eax - 0x73]; 
0x000d2cae: mov esi, 0x8dfff613; add dword ptr [eax], -0x62; stc; call dword ptr [eax - 0x73]; 
0x00122f9c: mov esi, 0xb8530011; mov edi, 0x8b000000; dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000abb24: mov esi, 0xda390114; je 0xabb20; pop ebx; ret; 
0x001ac35e: mov esi, 0xf6000000; ret 0xf0f; 
0x000abb85: mov esi, 0xfc53906; xchg esp, eax; ret 0xc739; 
0x00193441: mov esi, 0xff67d6e8; inc dword ptr [ecx + 0x47ce9c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0013ce26: mov esi, 0xfff9c4e8; jmp dword ptr [esi - 0x70]; 
0x00032111: mov esi, 0xffff3be9; push esi; ret 0xf03; 
0x0012e397: mov esi, 5; call dword ptr gs:[0x10]; 
0x00092d1a: mov esi, 8; add ecx, 0x474; call dword ptr gs:[0x10]; 
0x000938ad: mov esi, 8; call dword ptr gs:[0x10]; 
0x0003c7f1: mov esi, 8; lea edx, [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x0009356e: mov esi, 8; mov byte ptr [esp + 0x47], 0; mov dword ptr [esp + 8], edx; call dword ptr gs:[0x10]; 
0x00023276: mov esi, 8; mov dword ptr [ebp + 0x137c], 1; call dword ptr gs:[0x10]; 
0x0010d60d: mov esi, 8; mov ecx, dword ptr [ebp - 0x144]; call dword ptr gs:[0x10]; 
0x0003d597: mov esi, 8; mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x0003c894: mov esi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00053300: mov esi, dword ptr [0x14]; mov dword ptr [esp + 0x14], esi; mov esi, dword ptr [esp + 0x28]; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x0010d620: mov esi, dword ptr [ebp - 0x144]; push dword ptr [esi + 0x20]; mov eax, esi; push dword ptr [esi + 0x18]; push dword ptr [esi + 8]; call dword ptr [eax + 0xc]; 
0x000e97bb: mov esi, dword ptr [ebp - 0x2c]; mov eax, dword ptr [ebp - 0x3c]; push edi; call eax; 
0x00152fc8: mov esi, dword ptr [ebx]; mov dword ptr [esp], ebx; mov ebx, edi; call 0x231a0; mov dword ptr [esp], ebp; call esi; 
0x0013bf7d: mov esi, dword ptr [ecx + 4]; mov edi, dword ptr [ecx + 8]; mov ebp, dword ptr [ecx + 0xc]; nop; jmp edx; 
0x0012310f: mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0012fb64: mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0012e3ff: mov esi, dword ptr [esp + 0x18]; mov ebx, ecx; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x1b3; int 0x80; 
0x0011fe24: mov esi, dword ptr [esp + 0x18]; mov edx, ecx; mov edi, dword ptr [esp + 0x1c]; sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x00115d5b: mov esi, dword ptr [esp + 0x1bc]; lea edx, [esp + 0x2c]; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x00061323: mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0012f01a: mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x00064889: mov esi, dword ptr [esp + 0x20]; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [esi + edx*4 - 0x73e94]; jmp eax; 
0x000eaba4: mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x00061383: mov esi, dword ptr [esp + 0x20]; test edi, edi; je 0x613b0; mov eax, 0x161; call dword ptr gs:[0x10]; 
0x0005330a: mov esi, dword ptr [esp + 0x28]; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x00129f7c: mov esi, dword ptr [esp + 0x2c]; lea eax, [ebx - 1]; cmp eax, 2; jbe 0x129fb0; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x0010e8c2: mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0010e8f3: mov esi, dword ptr [esp + 0x3c]; mov dword ptr [esp + 8], eax; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x0012ec83: mov esi, dword ptr [esp + 0x3c]; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x0012fd23: mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x00130323: mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x00132143: mov esi, dword ptr [esp + 0x3c]; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x00120f5e: mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x001328e2: mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x0012fb0e: mov esi, dword ptr [esp + 0x44]; mov eax, 0xac; mov ebx, 0x53564d41; call dword ptr gs:[0x10]; 
0x0010bfe6: mov esi, dword ptr [esp + 0x44]; mov ebx, dword ptr [esp + 0x40]; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00122baa: mov esi, dword ptr [esp + 0x44]; mov ebx, dword ptr [esp + 0x40]; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x000e7676: mov esi, dword ptr [esp + 0x44]; mov ebx, dword ptr [esp + 0x40]; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0016ff4a: mov esi, dword ptr [esp + 0x48]; mov eax, dword ptr [esi + 0x20]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0009fb83: mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x0009fc5b: mov esi, dword ptr [esp + 0x4c]; mov eax, 0x117; call dword ptr gs:[0x10]; 
0x0009fca3: mov esi, dword ptr [esp + 0x4c]; mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x00132a32: mov esi, dword ptr [esp + 0x50]; mov dword ptr [esp + 0x18], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x001329d3: mov esi, dword ptr [esp + 0x50]; mov ebx, 0xc; mov dword ptr [esp + 0x18], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0012fed6: mov esi, dword ptr [esp + 0x64]; mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0012178b: mov esi, dword ptr [esp + 0x6c]; mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x001216c5: mov esi, dword ptr [esp + 0x6c]; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00115f1a: mov esi, dword ptr [esp + 0x74]; mov ebx, dword ptr [esp + 0x70]; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x001229bb: mov esi, dword ptr [esp + 0x78]; mov ebx, dword ptr [esp + 0x70]; lea edx, [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0012ef7f: mov esi, dword ptr [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x00114cae: mov esi, dword ptr [esp + 0xac]; call dword ptr gs:[0x10]; 
0x00114f6c: mov esi, dword ptr [esp + 0xbc]; call dword ptr gs:[0x10]; 
0x0005bc1c: mov esi, dword ptr [esp + 0xc]; push esi; push edx; push eax; call dword ptr [ebp + 0x1c]; 
0x0009f8bd: mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000a04ec: mov esi, dword ptr [esp + 4]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x0009f993: mov esi, dword ptr [esp + 4]; mov eax, 0x118; call dword ptr gs:[0x10]; 
0x000a03de: mov esi, dword ptr [esp + 4]; mov eax, 0x199; call dword ptr gs:[0x10]; 
0x0009f9d3: mov esi, dword ptr [esp + 4]; mov eax, 0x1a3; call dword ptr gs:[0x10]; 
0x00189c29: mov esi, dword ptr [esp]; ret; 
0x000a04eb: mov esi, dword ptr fs:[esp + 4]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x000a03dd: mov esi, dword ptr fs:[esp + 4]; mov eax, 0x199; call dword ptr gs:[0x10]; 
0x000532ff: mov esi, dword ptr gs:[0x14]; mov dword ptr [esp + 0x14], esi; mov esi, dword ptr [esp + 0x28]; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x00182c09: mov esi, eax; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x00086a34: mov esi, eax; lea esi, cs:[esi]; nop; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0016fc67: mov esi, eax; mov eax, dword ptr [ebx + 4]; add esp, 0x14; push ebx; call dword ptr [eax + 0x10]; 
0x000e7c91: mov esi, ebp; call dword ptr gs:[0x10]; 
0x000e7d55: mov esi, ebp; mov ecx, dword ptr [esp + 0x54]; mov edx, edi; mov dword ptr [esp + 0xc], eax; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x0018c56f: mov esi, ecx; call dword ptr gs:[0x10]; 
0x0013000f: mov esi, edi; call dword ptr gs:[0x10]; 
0x00132b8e: mov esi, edi; mov edx, 0x100; call dword ptr gs:[0x10]; 
0x0010e6ae: mov esi, edi; mov edx, dword ptr [esp + 0x88]; call dword ptr gs:[0x10]; 
0x00046e96: mov esi, edx; and esi, eax; mov eax, esi; pop esi; pop edi; ret; 
0x00046ea3: mov esi, edx; and esi, ecx; mov eax, esi; pop esi; pop edi; ret; 
0x00095d33: mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x000c24df: mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x000c255f: mov esi, edx; mov eax, dword ptr [esp + 8]; cld; pop edi; ret; 
0x000c2535: mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000c259f: mov esi, edx; ret; 
0x0014b44e: mov esi, gs; jmp dword ptr [esi - 0x70]; 
0x00042e93: mov esp, 0x1508dc0; mov eax, edx; ret; 
0x0009a395: mov esp, 0x1aecc3; add bh, dh; mov dword ptr [ecx], 0x74000000; aad 0x89; ret 0xe083; 
0x00042eac: mov esp, 0x1c283d0; test eax, eax; cmovne eax, edx; ret; 
0x00069968: mov esp, 0x1fffffb; ret 0x9589; 
0x0006a036: mov esp, 0x1fffffb; ret 0xd801; 
0x00069b72: mov esp, 0x1fffffb; ret 0xf001; 
0x0006837e: mov esp, 0x1fffffb; ret 0xf801; 
0x000605ef: mov esp, 0x24424; add byte ptr [ebp - 0x69c6a7d], cl; call dword ptr [eax + 0x68]; 
0x0003570d: mov esp, 0x2e3f808d; stc; call dword ptr [eax - 0x18]; 
0x000bd5ba: mov esp, 0x30010f9; or al, 0x91; jmp ecx; 
0x00081ec4: mov esp, 0x3900768d; ret; 
0x0005d6fa: mov esp, 0x39c829d2; ret 0x8d0f; 
0x0003559c: mov esp, 0x408dc189; add dword ptr [ecx + 0x418db445], ecx; sbb al, 0x89; ret 0x25; 
0x00176718: mov esp, 0x43024; add al, ch; sbb eax, 0x8900002c; ret; 
0x0008256f: mov esp, 0x5250d029; push edi; call dword ptr [ebx + 0x38]; 
0x00137d27: mov esp, 0x5585808d; stc; call dword ptr [eax - 1]; 
0x00137ce7: mov esp, 0x55a4808d; stc; call dword ptr [eax - 1]; 
0x001b2908: mov esp, 0x5b000000; pop esi; pop edi; pop ebp; ret 4; 
0x00027f2e: mov esp, 0x5b000000; pop esi; pop edi; pop ebp; ret; 
0x00184921: mov esp, 0x5b000001; pop esi; pop edi; pop ebp; ret; 
0x0014f3f8: mov esp, 0x5b000002; pop esi; pop edi; pop ebp; ret; 
0x00161af2: mov esp, 0x5b000008; pop esi; pop edi; pop ebp; ret; 
0x000b9860: mov esp, 0x5f000005; pop esi; pop ebx; ret; 
0x000b9560: mov esp, 0x5f000008; pop esi; pop ebx; ret; 
0x000b005a: mov esp, 0x5fd001d2; pop esi; ret; 
0x000c1581: mov esp, 0x5ff801c0; ret; 
0x00192b65: mov esp, 0x5ffff70; stosd dword ptr es:[edi], eax; ret 0xa; 
0x000c0975: mov esp, 0x72da39d2; movsd dword ptr es:[edi], dword ptr [esi]; call 0x189c31; add ecx, 0x10c6f4; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba9d5: mov esp, 0x72da39d2; movsd dword ptr es:[edi], dword ptr [esi]; call 0x189c31; add ecx, 0x1124c0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9395: mov esp, 0x72da39d2; movsd dword ptr es:[edi], dword ptr [esi]; call 0x189c31; add ecx, 0x1139a0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00042fbe: mov esp, 0x74c085c8; or al, 0x83; rol dword ptr [ecx], 0x5b; mov eax, ecx; ret; 
0x000c15b1: mov esp, 0x76c229c0; cmp dword ptr [ecx], eax; clc; pop edi; ret; 
0x000c15c4: mov esp, 0x76c229c0; lea eax, es:[edi + eax + 0x10]; pop edi; ret; 
0x000c15e4: mov esp, 0x76c229c0; push es; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000c15d4: mov esp, 0x76c229c0; push ss; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x000a8b38: mov esp, 0x80fff693; in eax, 2; lea edx, [edx - 0x17cc74]; cmove eax, edx; ret; 
0x000d46f8: mov esp, 0x80fff6ce; in eax, 2; lea edx, [edx - 0x165354]; cmove eax, edx; ret; 
0x0016305d: mov esp, 0x8100026b; ret; 
0x0006115d: mov esp, 0x8100128a; ret; 
0x0019a15d: mov esp, 0x81fffefa; ret; 
0x00199a5d: mov esp, 0x81ffff01; ret; 
0x0019965d: mov esp, 0x81ffff05; ret; 
0x0019805d: mov esp, 0x81ffff1b; ret; 
0x0019605d: mov esp, 0x81ffff3b; ret; 
0x00094a38: mov esp, 0x83000000; les eax, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x000eae65: mov esp, 0x83c0458b; ror byte ptr [edi], 0x89; ret 0x25; 
0x000b9273: mov esp, 0x83ce01d2; ret 0x2910; 
0x000b0064: mov esp, 0x83d001d2; rcl byte ptr [eax], 0x5f; pop esi; ret; 
0x000b007e: mov esp, 0x83d001d2; sal byte ptr [eax], 0x5f; pop esi; ret; 
0x000b0071: mov esp, 0x83d001d2; shl byte ptr [eax], 0x5f; pop esi; ret; 
0x00189982: mov esp, 0x83ffe9b0; les ecx, ptr [eax]; xor eax, eax; pop ebx; ret; 
0x000681a5: mov esp, 0x83fffffb; mov byte ptr [ecx], 1; ret 0x9589; 
0x00077c21: mov esp, 0x852bffff; mov eax, 0x83fffffb; in al, dx; or al, 0x89; ret; 
0x0007c410: mov esp, 0x8b000000; inc esi; push 0x850fc085; ret 0; 
0x00050794: mov esp, 0x8b000000; lodsb al, byte ptr [esi]; and al, 0x8c; sbb eax, dword ptr [eax]; add byte ptr [ebx - 0x6bf0fe01], al; ret 0xeb39; 
0x0005e61a: mov esp, 0x8b000000; test byte ptr [eax], ah; add byte ptr [eax], al; add dh, dh; ret 0xf01; 
0x00127d3d: mov esp, 0x8bfff672; inc eax; je 0x127cce; push esi; add al, 0x89; ret 0xeac1; 
0x001278d7: mov esp, 0x8bfff681; inc eax; je 0x127868; push esi; add al, 0x89; ret 0xeac1; 
0x00127b92: mov esp, 0x8bfff686; inc eax; je 0x127b23; push esi; add al, 0x89; ret 0xeac1; 
0x0004a1b0: mov esp, 0x8bfffe9e; jl 0x4a1db; sbb byte ptr [ebp - 0x687bf79], cl; call dword ptr [eax - 0x73]; 
0x001486d0: mov esp, 0x8bfffffb; inc ebp; and byte ptr [ecx - 0x4477b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00068606: mov esp, 0x8bfffffb; lea esi, [edx + edi*8 - 1]; inc dword ptr [ecx]; ret 0xd801; 
0x00115d5e: mov esp, 0x8d000001; push esp; and al, 0x2c; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x00157800: mov esp, 0x8d000001; xchg byte ptr [eax - 0x4d], dh; stc; call dword ptr [eax - 0x73]; 
0x00108946: mov esp, 0x9024; add byte ptr [ebx - 0x317cf314], al; call dword ptr [edi - 0x18]; 
0x000c08b1: mov esp, 0x9379e8d2; or al, 0; add ecx, 0x10c73c; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c0877: mov esp, 0x93b3e8d2; or al, 0; add ecx, 0x10c776; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x001a9e20: mov esp, 0xa8000000; inc eax; jne 0x1a9ef0; lea eax, [edi + 7]; pop edi; ret; 
0x0004d4fb: mov esp, 0xa824; add cl, ch; lcall 0x247c, 0x8bffffe6; sbb byte ptr [ebp - 0x687a779], cl; call dword ptr [eax - 0x73]; 
0x00043270: mov esp, 0xbad284c0; or byte ptr [eax], al; add byte ptr [eax], al; cmove eax, edx; ret; 
0x0004328e: mov esp, 0xbad285c2; and byte ptr [eax], al; add byte ptr [eax], al; cmove eax, edx; ret; 
0x000d2eab: mov esp, 0xc0830a8b; add al, 0x83; ret 0x8904; 
0x001704e8: mov esp, 0xc4830000; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00126f52: mov esp, 0xc483fff9; adc byte ptr [ebp + 0x28840fc0], al; add eax, 0xec830000; or byte ptr [ebp - 0x6b4427d], cl; call dword ptr [eax + 0x55]; 
0x00126f88: mov esp, 0xc483fff9; adc byte ptr [ebp + 0x3a840fc0], al; add eax, 0xec830000; or byte ptr [ebp - 0x6b3b57d], cl; call dword ptr [eax + 0x55]; 
0x000bd5b1: mov esp, 0xc679e8d2; or al, 0; add ecx, 0x10f9bc; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bd577: mov esp, 0xc6b3e8d2; or al, 0; add ecx, 0x10f9f6; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bd553: mov esp, 0xc6d7e8d2; or al, 0; add ecx, 0x10fa1a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bd535: mov esp, 0xc6f5e8d2; or al, 0; add ecx, 0x10fa38; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00043310: mov esp, 0xd28566c0; mov edx, 0x10; cmove eax, edx; ret; 
0x000d7736: mov esp, 0xe9ffffc9; cmp esp, 0xa40fffff; ret 0xc102; 
0x000ba88a: mov esp, 0xf3a0e8d2; or al, 0; add ecx, 0x11258f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba865: mov esp, 0xf3c5e8d2; or al, 0; add ecx, 0x1125b4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c4d4c: mov esp, 0xf6fff6d4; inc ecx; jnp 0xc4d58; cmove eax, edx; ret; 
0x00104bb6: mov esp, 0xf824; add byte ptr [edi], cl; dec esp; ret; 
0x000dfc0f: mov esp, 0xf8e4e086; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x000e0352: mov esp, 0xf8e63886; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x000fb3b3: mov esp, 0xf8f5e086; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x00112024: mov esp, 0xf902e08e; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x00182513: mov esp, 0xfbb7e7e8; jmp dword ptr [esi - 0x70]; 
0x000aa301: mov esp, 0xfffe83d; inc esp; ret 0x66c3; 
0x0010d622: mov esp, 0xfffffffe; jbe 0x10d649; mov eax, esi; push dword ptr [esi + 0x18]; push dword ptr [esi + 8]; call dword ptr [eax + 0xc]; 
0x0003488a: mov esp, dword ptr [ebp - 0x7f74ffe0]; xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x0016ddf3: mov esp, dword ptr [ebx - 7]; call dword ptr [eax + 0x6a]; 
0x0016def3: mov esp, dword ptr [ebx - 7]; call dword ptr [eax - 0x18]; 
0x0016de47: mov esp, dword ptr [ebx - 7]; jmp dword ptr [ebp - 0x75]; 
0x0003c4ff: mov esp, ecx; jmp edx; 
0x00112025: mov fs, eax; add bh, cl; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x000b3b08: mov fs, word ptr [ebx - 0x7a000008]; ror byte ptr [edi], 0x85; dec ebx; idiv bh; jmp dword ptr [esi + 0xf]; 
0x001af660: mov fs, word ptr [ecx - 0x76fffff8]; ret; 
0x00092ac4: mov fs, word ptr [edx + eax]; add byte ptr [eax], al; lea edx, [esi + 0x220]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x000ba9f1: mov gs, eax; cmp dh, dl; or al, 0; add ecx, 0x1124a9; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9890: mov word ptr [0x5e5f0000], es; pop ebx; ret; 
0x000c0c4f: mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd7cc: mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00122e8d: mov word ptr [eax + 0x16], dx; ret; 
0x000c0d69: mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd8d6: mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bd678: mov word ptr [eax + 4], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0b4f: mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd6dc: mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x001b3238: mov word ptr [eax + eax*4], fs; add byte ptr [eax], al; add cl, ch; ret; 
0x000c31e9: mov word ptr [eax + eax], es; add al, ch; scasb al, byte ptr es:[edi]; push ebp; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0015a03f: mov word ptr [eax + eax], es; add byte ptr [ecx - 0x74dbdbbc], cl; test byte ptr [eax + edx*4], ah; add al, 0; add byte ptr [ecx - 0x76cbdbbc], cl; ret; 
0x001211c1: mov word ptr [eax + ecx*4], fs; add dword ptr [eax], eax; add byte ptr [ebx + 0x518d0cc4], al; call dword ptr [edx + 0x56]; 
0x0018076d: mov word ptr [eax - 0x72b00000], gs; xchg dword ptr [esi], edi; arpl cx, di; call dword ptr [eax + 0x6a]; 
0x00180bfe: mov word ptr [eax - 0x72b00000], gs; xchg dword ptr [esi], edi; arpl cx, di; push dword ptr [ecx]; call dword ptr [eax + 0x6a]; 
0x001784e2: mov word ptr [eax - 0xd], es; call dword ptr [edx - 0x73]; 
0x000bd643: mov word ptr [eax], cx; mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00042203: mov word ptr [eax], dx; mov dword ptr [eax + 0x14], 5; mov dword ptr [eax + 0xc], 0x1000b; xor eax, eax; ret; 
0x000c0a66: mov word ptr [eax], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd633: mov word ptr [eax], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0010cccf: mov word ptr [eax], dx; xor eax, eax; ret; 
0x00173be2: mov word ptr [eax], es; add byte ptr [eax], al; mov dword ptr [eax + 8], edx; ret; 
0x0011f3ff: mov word ptr [eax], es; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0003da55: mov word ptr [eax], es; add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x3da69; add esp, 0x9c; ret; 
0x00129330: mov word ptr [eax], fs; cmc; inc dword ptr [ebx - 0x3b7cef3c]; or byte ptr [eax + 1], bh; pop ebx; ret; 
0x000aa160: mov word ptr [ebp + 0x450ffff6], gs; ret 0x66c3; 
0x0002ee95: mov word ptr [ebp + 0x7b050015], gs; jmp dword ptr [eax]; 
0x00191408: mov word ptr [ebp - 0x13], es; call dword ptr [eax + 0x6a]; 
0x00153a89: mov word ptr [ebp - 0x64e8b7f], cs; call dword ptr [eax - 0x73]; 
0x0013b9cd: mov word ptr [ebp - 0x9773], cs; dec dword ptr [ecx - 0x836b]; dec dword ptr [ecx - 0x11f73]; call dword ptr [ecx - 1]; 
0x0016faef: mov word ptr [ebx - 0x137cfbbd], cs; or al, 0x53; call dword ptr [eax + 0x10]; 
0x001a5965: mov word ptr [ebx - 0x37d60009], ds; pop ebp; pop ebx; ret; 
0x001a3158: mov word ptr [ebx - 0x37d60009], ds; pop ebx; ret; 
0x00070ff2: mov word ptr [ebx - 0x736b4], ss; add ecx, eax; jmp ecx; 
0x00070792: mov word ptr [ebx - 0x73734], ss; add ecx, eax; jmp ecx; 
0x00072144: mov word ptr [ebx - 0x73834], ss; add ecx, eax; jmp ecx; 
0x001a3151: mov word ptr [ebx - 0x7b740009], ds; or dword ptr [ebx + ebx*4 - 0x37d60009], 0x5b; ret; 
0x001a314f: mov word ptr [ebx - 0x86474], cs; mov eax, dword ptr [ebx + eax*4 - 0x86474]; sub eax, ecx; pop ebx; ret; 
0x00158970: mov word ptr [ebx - 2], ss; jmp dword ptr [esi - 0x70]; 
0x00127862: mov word ptr [ecx + 0x408bfff6], es; je 0x1277f3; push esi; add al, 0x89; ret 0xeac1; 
0x0014d6e1: mov word ptr [ecx + 0xa], dx; pop ebx; pop esi; pop edi; ret; 
0x000b36d2: mov word ptr [ecx + 4], dx; pop ebx; ret; 
0x000b3714: mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x0013bb73: mov word ptr [ecx - 0x11f73], cs; call dword ptr [ecx - 1]; 
0x0012724a: mov word ptr [ecx - 7], ss; call dword ptr [eax + 0x55]; 
0x000b36a0: mov word ptr [ecx], dx; mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x000b3690: mov word ptr [ecx], dx; pop ebx; ret; 
0x00115b6f: mov word ptr [ecx], es; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x1b8]; call dword ptr gs:[0x10]; 
0x00180308: mov word ptr [ecx], es; ret 0x458b; 
0x000bb1dc: mov word ptr [edi + 0x10], cx; lea eax, [edi + 0x12]; pop edi; pop esi; pop ebx; ret; 
0x000b9afc: mov word ptr [edi + 0x10], cx; pop edi; pop esi; pop ebx; ret; 
0x000bb2e6: mov word ptr [edi + 0x18], cx; lea eax, [edi + 0x1a]; pop edi; pop esi; pop ebx; ret; 
0x000b9c06: mov word ptr [edi + 0x18], cx; pop edi; pop esi; pop ebx; ret; 
0x000b99b8: mov word ptr [edi + 4], dx; pop edi; pop esi; pop ebx; ret; 
0x000bb0ec: mov word ptr [edi + 8], dx; lea eax, [edi + 0xa]; pop edi; pop esi; pop ebx; ret; 
0x000b9a0c: mov word ptr [edi + 8], dx; pop edi; pop esi; pop ebx; ret; 
0x00179166: mov word ptr [edi - 0x5e9b0000], fs; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + edx], ecx; ret; 
0x0019548d: mov word ptr [edi - 1], es; inc dword ptr [ecx + 0x4611fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000b9986: mov word ptr [edi], cx; mov byte ptr [edi + 2], dl; pop edi; pop esi; pop ebx; ret; 
0x000bb013: mov word ptr [edi], dx; lea eax, [edi + 2]; pop edi; pop esi; pop ebx; ret; 
0x000b9973: mov word ptr [edi], dx; pop edi; pop esi; pop ebx; ret; 
0x000b9690: mov word ptr [edi], es; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00117a5c: mov word ptr [edx + 0x3e], ax; xor eax, eax; ret; 
0x001194fc: mov word ptr [edx + 0x42], ax; xor eax, eax; ret; 
0x00095995: mov word ptr [edx + 0xf], es; add byte ptr [0x1a947b], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x2a4], edx; ret; 
0x000b5ac8: mov word ptr [edx + 4], ax; lea eax, [edx + 5]; pop edi; ret; 
0x000b5c08: mov word ptr [edx + 4], ax; lea eax, [edx + 5]; ret; 
0x000bfe8b: mov word ptr [edx + 4], ax; mov eax, edi; pop ebx; pop edi; ret; 
0x000b16f8: mov word ptr [edx + 4], ax; mov eax, edi; pop edi; ret; 
0x000b1828: mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x000abef4: mov word ptr [edx + 4], bx; mov dword ptr [edx], eax; lea eax, [edx + 5]; pop ebx; pop esi; ret; 
0x000abe34: mov word ptr [edx + 4], bx; mov dword ptr [edx], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x00194ca6: mov word ptr [edx + 4], gs; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x000b5b1c: mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x000b5c5c: mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000bfeff: mov word ptr [edx + 8], ax; mov eax, edi; pop ebx; pop edi; ret; 
0x000b173c: mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000b187c: mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000a9490: mov word ptr [edx - 0xb], cs; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0015af24: mov word ptr [edx - 0xf], ss; call dword ptr [eax - 0x73]; 
0x001932b5: mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019649c: mov word ptr [edx - 2], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019848c: mov word ptr [edx - 2], cx; mov eax, edx; pop ebx; ret; 
0x001932d5: mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00196530: mov word ptr [edx - 3], cx; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00198520: mov word ptr [edx - 3], cx; mov byte ptr [edx - 1], al; mov eax, edx; pop ebx; ret; 
0x0002cda9: mov word ptr [edx - 7], gs; call dword ptr [eax + 0x68]; 
0x0002cc2d: mov word ptr [edx - 7], gs; call dword ptr [eax - 0x73]; 
0x000b5a83: mov word ptr [edx], ax; lea eax, [edx + 1]; pop edi; ret; 
0x000b5bc3: mov word ptr [edx], ax; lea eax, [edx + 1]; ret; 
0x000b5a93: mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; pop edi; ret; 
0x000b5bd3: mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; ret; 
0x000b16d3: mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edi; pop edi; ret; 
0x000b17f3: mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x000bfe26: mov word ptr [edx], ax; mov eax, edi; pop ebx; pop edi; ret; 
0x000b16c3: mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x000b17e3: mov word ptr [edx], ax; mov eax, edx; ret; 
0x00198adb: mov word ptr [edx], cx; mov eax, dword ptr [esp + 8]; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x00196b1b: mov word ptr [edx], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000abeb0: mov word ptr [edx], si; lea eax, [edx + 1]; pop ebx; pop esi; ret; 
0x000abe00: mov word ptr [edx], si; mov eax, edx; mov byte ptr [edx + 2], 0; pop ebx; pop esi; ret; 
0x000abdf8: mov word ptr [edx], si; mov eax, edx; pop ebx; pop esi; ret; 
0x00060fd9: mov word ptr [edx], ss; add byte ptr [ecx + 0x1dde38c3], al; add byte ptr [ebx + 0x1a0c83], cl; add byte ptr [ebp + 0x314574c0], al; jmp dword ptr [esi - 0x70]; 
0x00024af4: mov word ptr [esi + 0x3365ffe4], es; adc eax, 0x18; rol edx, 9; mov dword ptr [eax + 0x1a50], edx; ret; 
0x00127b1d: mov word ptr [esi + 0x408bfff6], es; je 0x127aae; push esi; add al, 0x89; ret 0xeac1; 
0x001580a5: mov word ptr [esi - 7], ds; call dword ptr [eax - 0x18]; 
0x00089672: mov word ptr [esi], cs; xchg esp, eax; add byte ptr [eax], al; add byte ptr [ecx - 0x7e20d631], cl; call dword ptr [ebx + 0xf000005]; 
0x0005009c: mov word ptr [esp + ebp*4], fs; add byte ptr [eax], al; add byte ptr [ebx - 0x7c9bdb8c], cl; ret 0xf7ff; 
0x0005e197: mov word ptr [esp + ebp*4], fs; add byte ptr [eax], al; add dh, dh; ret; 
0x000d008c: mov word ptr [esp + ebx*4], fs; add byte ptr [eax], al; add byte ptr [ebx - 0x7c9fdb8c], cl; ret 0xf7ff; 
0x00048fea: mov word ptr [esp + ebx*4], fs; add byte ptr [eax], al; add byte ptr [ebx - 0x7ca7dba4], cl; ret 0xf7ff; 
0x000c962c: mov word ptr [esp + ebx*4], fs; add byte ptr [eax], al; add byte ptr [ebx - 0x7cabdba4], cl; ret 0xf7ff; 
0x001b4385: mov word ptr [esp + ebx*4], fs; add byte ptr [eax], al; add byte ptr [ecx], al; sal dh, cl; ret 0x7406; 
0x000e8c67: mov word ptr [esp + edi], fs; add dword ptr [eax], eax; add byte ptr [ebx + 0x164248c], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000db522: mov word ptr [esp + esi], fs; add dword ptr [eax], eax; add byte ptr [ecx], bl; fimul dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0x8902; 
0x00196399: movd dword ptr [eax - 8], mm0; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00198399: movd dword ptr [eax - 8], mm0; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x00196a39: movd dword ptr [eax], mm0; movq qword ptr [edx], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001965ca: movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001985ba: movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, edx; pop ebx; ret; 
0x000bb571: movdqa xmmword ptr [edi], xmm0; add edi, 0x10; call 0x189c31; add ecx, 0x1119b3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9e71: movdqa xmmword ptr [edi], xmm0; add edi, 0x10; call 0x189c31; add ecx, 0x112f53; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0019352e: movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001985bf: movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, edx; pop ebx; ret; 
0x0019355e: movdqa xmmword ptr [edx - 0x11], xmm0; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019358e: movdqa xmmword ptr [edx - 0x12], xmm0; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001935ee: movdqa xmmword ptr [edx - 0x14], xmm0; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019361e: movdqa xmmword ptr [edx - 0x15], xmm0; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019364e: movdqa xmmword ptr [edx - 0x16], xmm0; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001936be: movdqa xmmword ptr [edx - 0x18], xmm0; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001936ee: movdqa xmmword ptr [edx - 0x19], xmm0; movq qword ptr [edx - 9], xmm0; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019372e: movdqa xmmword ptr [edx - 0x1a], xmm0; movq qword ptr [edx - 0xa], xmm0; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001965c5: movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001985b5: movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, edx; pop ebx; ret; 
0x00193529: movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00193524: movdqa xmmword ptr [edx - 0x30], xmm0; movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000b5a60: movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000b5d10: movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b16a0: movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000b1930: movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000bd790: movdqu xmm0, xmmword ptr [esi]; movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0e50: movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd98d: movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0df0: movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd92d: movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0e10: movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd94d: movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0e30: movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd96d: movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0c2a: movdqu xmmword ptr [eax], xmm0; mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd7a4: movdqu xmmword ptr [eax], xmm0; mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bd827: movdqu xmmword ptr [eax], xmm0; mov dword ptr [eax + 0x10], ecx; mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0c8a: movdqu xmmword ptr [eax], xmm0; mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd807: movdqu xmmword ptr [eax], xmm0; mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0c6a: movdqu xmmword ptr [eax], xmm0; mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd7e7: movdqu xmmword ptr [eax], xmm0; mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0c07: movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd794: movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0c4b: movdqu xmmword ptr [eax], xmm0; mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd7c8: movdqu xmmword ptr [eax], xmm0; mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0e4c: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd989: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0dec: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd929: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0e0c: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd949: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0e2c: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd969: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bd8a9: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0x10], xmm2; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bd8ec: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bd90c: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0d0c: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd889: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bd8cd: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0x10], xmm2; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0ccc: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd849: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0cec: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd869: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bb3ad: movdqu xmmword ptr [edi + 0x10], xmm2; lea eax, [edi + 0x20]; pop edi; pop esi; pop ebx; ret; 
0x000b9ce0: movdqu xmmword ptr [edi + 0x10], xmm2; mov byte ptr [edi + 0x20], cl; pop edi; pop esi; pop ebx; ret; 
0x000b9cbd: movdqu xmmword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000bb5fc: movdqu xmmword ptr [edi + 0x30], xmm7; lea eax, [edi + 0x40]; pop edi; pop esi; pop ebx; ret; 
0x000b9efc: movdqu xmmword ptr [edi + 0x30], xmm7; pop edi; pop esi; pop ebx; ret; 
0x000bb34d: movdqu xmmword ptr [edi + 0xd], xmm2; lea eax, [edi + 0x1d]; pop edi; pop esi; pop ebx; ret; 
0x000b9c5d: movdqu xmmword ptr [edi + 0xd], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b9c7d: movdqu xmmword ptr [edi + 0xe], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000bb38d: movdqu xmmword ptr [edi + 0xf], xmm2; lea eax, [edi + 0x1f]; pop edi; pop esi; pop ebx; ret; 
0x000b9c9d: movdqu xmmword ptr [edi + 0xf], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b9de0: movdqu xmmword ptr [edi - 1], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000bb1a4: movdqu xmmword ptr [edi], xmm0; lea eax, [edi + 0x10]; pop edi; pop esi; pop ebx; ret; 
0x000b9ad7: movdqu xmmword ptr [edi], xmm0; mov byte ptr [edi + 0x10], cl; pop edi; pop esi; pop ebx; ret; 
0x000b9b37: movdqu xmmword ptr [edi], xmm0; mov dword ptr [edi + 0x10], ecx; pop edi; pop esi; pop ebx; ret; 
0x000b9b17: movdqu xmmword ptr [edi], xmm0; mov dword ptr [edi + 0xf], ecx; pop edi; pop esi; pop ebx; ret; 
0x000b9af8: movdqu xmmword ptr [edi], xmm0; mov word ptr [edi + 0x10], cx; pop edi; pop esi; pop ebx; ret; 
0x000b9cb9: movdqu xmmword ptr [edi], xmm0; movdqu xmmword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b9c59: movdqu xmmword ptr [edi], xmm0; movdqu xmmword ptr [edi + 0xd], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b9c79: movdqu xmmword ptr [edi], xmm0; movdqu xmmword ptr [edi + 0xe], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b9c99: movdqu xmmword ptr [edi], xmm0; movdqu xmmword ptr [edi + 0xf], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b9bb9: movdqu xmmword ptr [edi], xmm0; movlpd qword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b9b79: movdqu xmmword ptr [edi], xmm0; movlpd qword ptr [edi + 0xe], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000b9b99: movdqu xmmword ptr [edi], xmm0; movlpd qword ptr [edi + 0xf], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000b9ac4: movdqu xmmword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b5a64: movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000b5d14: movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b16a4: movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000b1934: movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x00025f7a: movhps xmm0, qword ptr [eax]; add ebp, dword ptr [edi + 8]; mov dword ptr [esp], ebp; call esi; 
0x000c0d33: movlpd qword ptr [eax + 0x10], xmm2; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd8ad: movlpd qword ptr [eax + 0x10], xmm2; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0d93: movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd8f0: movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0dc3: movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd910: movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0d10: movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd88d: movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0d64: movlpd qword ptr [eax + 0x10], xmm2; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd8d1: movlpd qword ptr [eax + 0x10], xmm2; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0cd0: movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd84d: movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0cf0: movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd86d: movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0bb0: movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd73d: movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0bd0: movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd75d: movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0bf0: movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd77d: movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0b6a: movlpd qword ptr [eax], xmm0; mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd6f7: movlpd qword ptr [eax], xmm0; mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0b8a: movlpd qword ptr [eax], xmm0; mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd717: movlpd qword ptr [eax], xmm0; mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0b07: movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd6a4: movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0b4b: movlpd qword ptr [eax], xmm0; mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd6d8: movlpd qword ptr [eax], xmm0; mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0bac: movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd739: movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0bcc: movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd759: movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0bec: movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd779: movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b3744: movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x000b3754: movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000b3764: movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000b3774: movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x000b3700: movlpd qword ptr [ecx], xmm0; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x000b3720: movlpd qword ptr [ecx], xmm0; mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x000b3730: movlpd qword ptr [ecx], xmm0; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x000b3710: movlpd qword ptr [ecx], xmm0; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000b3740: movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x000b3750: movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000b3760: movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000b3770: movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x000b36f0: movlpd qword ptr [ecx], xmm0; pop ebx; ret; 
0x000bb29d: movlpd qword ptr [edi + 0x10], xmm2; lea eax, [edi + 0x18]; pop edi; pop esi; pop ebx; ret; 
0x000b9be0: movlpd qword ptr [edi + 0x10], xmm2; mov byte ptr [edi + 0x18], cl; pop edi; pop esi; pop ebx; ret; 
0x000b9c20: movlpd qword ptr [edi + 0x10], xmm2; mov dword ptr [edi + 0x17], ecx; pop edi; pop esi; pop ebx; ret; 
0x000b9c40: movlpd qword ptr [edi + 0x10], xmm2; mov dword ptr [edi + 0x18], ecx; pop edi; pop esi; pop ebx; ret; 
0x000b9c01: movlpd qword ptr [edi + 0x10], xmm2; mov word ptr [edi + 0x18], cx; pop edi; pop esi; pop ebx; ret; 
0x000b9bbd: movlpd qword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b9b7d: movlpd qword ptr [edi + 0xe], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000bb27d: movlpd qword ptr [edi + 0xf], xmm3; lea eax, [edi + 0x17]; pop edi; pop esi; pop ebx; ret; 
0x000b9b9d: movlpd qword ptr [edi + 0xf], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000b9dc4: movlpd qword ptr [edi + 5], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000bb14d: movlpd qword ptr [edi + 5], xmm1; lea eax, [edi + 0xd]; pop edi; pop esi; pop ebx; ret; 
0x000b9a6d: movlpd qword ptr [edi + 5], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000b9dd4: movlpd qword ptr [edi + 6], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b9a8d: movlpd qword ptr [edi + 6], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000b9aad: movlpd qword ptr [edi + 7], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000b9d60: movlpd qword ptr [edi - 1], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000bb0b4: movlpd qword ptr [edi], xmm0; lea eax, [edi + 8]; pop edi; pop esi; pop ebx; ret; 
0x000b99e7: movlpd qword ptr [edi], xmm0; mov byte ptr [edi + 8], dl; pop edi; pop esi; pop ebx; ret; 
0x000b9a27: movlpd qword ptr [edi], xmm0; mov dword ptr [edi + 7], edx; pop edi; pop esi; pop ebx; ret; 
0x000b9a47: movlpd qword ptr [edi], xmm0; mov dword ptr [edi + 8], edx; pop edi; pop esi; pop ebx; ret; 
0x000b9a08: movlpd qword ptr [edi], xmm0; mov word ptr [edi + 8], dx; pop edi; pop esi; pop ebx; ret; 
0x000b9dc0: movlpd qword ptr [edi], xmm0; movlpd qword ptr [edi + 5], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b9a69: movlpd qword ptr [edi], xmm0; movlpd qword ptr [edi + 5], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000b9dd0: movlpd qword ptr [edi], xmm0; movlpd qword ptr [edi + 6], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b9a89: movlpd qword ptr [edi], xmm0; movlpd qword ptr [edi + 6], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000b9aa9: movlpd qword ptr [edi], xmm0; movlpd qword ptr [edi + 7], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000b99d4: movlpd qword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000ba3ed: movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x000ba54d: movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000bff60: movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b8dad: movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x000b8f0d: movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000b5b5d: movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000b5cbd: movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000b177d: movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000b18dd: movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000ba40d: movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000ba56d: movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000bff80: movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b8dcd: movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000b8f2d: movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000b5b7d: movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; pop edi; ret; 
0x000b5cdd: movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000b179d: movlpd qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x000b18fd: movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000ba42d: movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000ba58d: movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000bffa0: movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b8ded: movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000b8f4d: movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000b5b9d: movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; pop edi; ret; 
0x000b5cfd: movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000b17bd: movlpd qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x000b4380: movlpd qword ptr [edx + 7], xmm1; mov eax, edx; pop ebx; ret; 
0x000b191d: movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000ba2bc: movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000ba5ad: movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b8c9c: movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000b8f6d: movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000b7888: movlpd qword ptr [edx + 8], xmm1; lea eax, [edx + 0x10]; pop edi; pop ebx; ret; 
0x000c01cc: movlpd qword ptr [edx + 8], xmm1; mov byte ptr [edx + 0x10], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000bfdfc: movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop ebx; pop edi; ret; 
0x000b3498: movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; pop ebx; ret; 
0x000bcf4c: movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; ret; 
0x000b8929: movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b59e4: movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x000b5c24: movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; ret; 
0x000b780f: movlpd qword ptr [edx], xmm0; lea eax, [edx + 8]; pop edi; pop ebx; ret; 
0x000bd027: movlpd qword ptr [edx], xmm0; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000bd047: movlpd qword ptr [edx], xmm0; mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000b5af7: movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x000b5c37: movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000b1717: movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000b1857: movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000c0170: movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000b5b37: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x000b5c77: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000b1757: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000b1897: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000b5a27: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x000b5c97: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000b7847: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xc]; pop edi; pop ebx; ret; 
0x000b3457: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; pop ebx; ret; 
0x000b1667: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x000b43d0: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; pop ebx; ret; 
0x000b18b7: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000bd067: movlpd qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000bd087: movlpd qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x001acda4: movlpd qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000bfda5: movlpd qword ptr [edx], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b341f: movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; pop ebx; ret; 
0x000b1624: movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000b4449: movlpd qword ptr [edx], xmm0; mov eax, edx; pop ebx; ret; 
0x000b1844: movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000b5b18: movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x000b5c58: movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000b1738: movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000b1878: movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000b5b59: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000b5cb9: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000b1779: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000b18d9: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000b5b79: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; pop edi; ret; 
0x000b5cd9: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000b1799: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x000b18f9: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000b5b99: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; pop edi; ret; 
0x000b5cf9: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000b17b9: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x000b437c: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; pop ebx; ret; 
0x000b1919: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000b7884: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; lea eax, [edx + 0x10]; pop edi; pop ebx; ret; 
0x000bfdf8: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop ebx; pop edi; ret; 
0x000b3494: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; pop ebx; ret; 
0x000bcf48: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; ret; 
0x000ba3e4: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x000ba544: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000b8da4: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x000b8f04: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000ba404: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000ba564: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b8dc4: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000b8f24: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000ba424: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000ba584: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b8de4: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000b8f44: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000ba2b3: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000ba5a4: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b8c93: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000b8f64: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000ba3e8: movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x000ba548: movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000bff5b: movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b8da8: movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x000b8f08: movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000ba408: movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000ba568: movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b8dc8: movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000b8f28: movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000ba428: movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000ba588: movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b8de8: movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000b8f48: movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000ba2b7: movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000ba5a8: movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b8c97: movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000b8f68: movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000b5c30: movlpd xmm0, qword ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000b1850: movlpd xmm0, qword ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000b5c70: movlpd xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000b1890: movlpd xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000b5c90: movlpd xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000b18b0: movlpd xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000b59e0: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x000b5c20: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; ret; 
0x000b780b: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 8]; pop edi; pop ebx; ret; 
0x001acda0: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000bfda1: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b341b: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; pop ebx; ret; 
0x000b1620: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000b4445: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; pop ebx; ret; 
0x000b1840: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000ba540: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000b8f00: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000ba560: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b8f20: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000ba580: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b8f40: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000ba5a0: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b8f60: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000b5cb0: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000b18d0: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000b5cd0: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000b18f0: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000b5cf0: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000b1910: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000bd6b0: movlpd xmm0, qword ptr [esi]; mov byte ptr [eax + 8], dh; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0b03: movlpd xmm0, qword ptr [esi]; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd6a0: movlpd xmm0, qword ptr [esi]; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b99d0: movlpd xmm0, qword ptr [esi]; movlpd qword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b5b54: movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000b5cb4: movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000b1774: movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000b18d4: movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000b5cd4: movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000b18f4: movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000b5cf4: movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000b1914: movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000bd734: movlpd xmm1, qword ptr [esi + 5]; movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0d34: movlps qword ptr [eax + 0x10], xmm2; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd8ae: movlps qword ptr [eax + 0x10], xmm2; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0d94: movlps qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd8f1: movlps qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0dc4: movlps qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd911: movlps qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0d11: movlps qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd88e: movlps qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0d65: movlps qword ptr [eax + 0x10], xmm2; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd8d2: movlps qword ptr [eax + 0x10], xmm2; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0cd1: movlps qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd84e: movlps qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0cf1: movlps qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd86e: movlps qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0bb1: movlps qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd73e: movlps qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0bd1: movlps qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd75e: movlps qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0bf1: movlps qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd77e: movlps qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0b6b: movlps qword ptr [eax], xmm0; mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd6f8: movlps qword ptr [eax], xmm0; mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0b8b: movlps qword ptr [eax], xmm0; mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd718: movlps qword ptr [eax], xmm0; mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0b08: movlps qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd6a5: movlps qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0b4c: movlps qword ptr [eax], xmm0; mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd6d9: movlps qword ptr [eax], xmm0; mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0bad: movlps qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd73a: movlps qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0bcd: movlps qword ptr [eax], xmm0; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd75a: movlps qword ptr [eax], xmm0; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0bed: movlps qword ptr [eax], xmm0; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd77a: movlps qword ptr [eax], xmm0; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b3745: movlps qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x000b3755: movlps qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000b3765: movlps qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000b3775: movlps qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x000b3701: movlps qword ptr [ecx], xmm0; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x000b3721: movlps qword ptr [ecx], xmm0; mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x000b3731: movlps qword ptr [ecx], xmm0; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x000b3711: movlps qword ptr [ecx], xmm0; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000b3741: movlps qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x000b3751: movlps qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000b3761: movlps qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000b3771: movlps qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x000b36f1: movlps qword ptr [ecx], xmm0; pop ebx; ret; 
0x000bb29e: movlps qword ptr [edi + 0x10], xmm2; lea eax, [edi + 0x18]; pop edi; pop esi; pop ebx; ret; 
0x000b9be1: movlps qword ptr [edi + 0x10], xmm2; mov byte ptr [edi + 0x18], cl; pop edi; pop esi; pop ebx; ret; 
0x000b9c21: movlps qword ptr [edi + 0x10], xmm2; mov dword ptr [edi + 0x17], ecx; pop edi; pop esi; pop ebx; ret; 
0x000b9c41: movlps qword ptr [edi + 0x10], xmm2; mov dword ptr [edi + 0x18], ecx; pop edi; pop esi; pop ebx; ret; 
0x000b9c02: movlps qword ptr [edi + 0x10], xmm2; mov word ptr [edi + 0x18], cx; pop edi; pop esi; pop ebx; ret; 
0x000b9bbe: movlps qword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b9b7e: movlps qword ptr [edi + 0xe], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000bb27e: movlps qword ptr [edi + 0xf], xmm3; lea eax, [edi + 0x17]; pop edi; pop esi; pop ebx; ret; 
0x000b9b9e: movlps qword ptr [edi + 0xf], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000b9dc5: movlps qword ptr [edi + 5], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000bb14e: movlps qword ptr [edi + 5], xmm1; lea eax, [edi + 0xd]; pop edi; pop esi; pop ebx; ret; 
0x000b9a6e: movlps qword ptr [edi + 5], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000b9dd5: movlps qword ptr [edi + 6], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b9a8e: movlps qword ptr [edi + 6], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000b9aae: movlps qword ptr [edi + 7], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000b9d61: movlps qword ptr [edi - 1], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000bb0b5: movlps qword ptr [edi], xmm0; lea eax, [edi + 8]; pop edi; pop esi; pop ebx; ret; 
0x000b99e8: movlps qword ptr [edi], xmm0; mov byte ptr [edi + 8], dl; pop edi; pop esi; pop ebx; ret; 
0x000b9a28: movlps qword ptr [edi], xmm0; mov dword ptr [edi + 7], edx; pop edi; pop esi; pop ebx; ret; 
0x000b9a48: movlps qword ptr [edi], xmm0; mov dword ptr [edi + 8], edx; pop edi; pop esi; pop ebx; ret; 
0x000b9a09: movlps qword ptr [edi], xmm0; mov word ptr [edi + 8], dx; pop edi; pop esi; pop ebx; ret; 
0x000b9dc1: movlps qword ptr [edi], xmm0; movlpd qword ptr [edi + 5], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b9a6a: movlps qword ptr [edi], xmm0; movlpd qword ptr [edi + 5], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000b9dd1: movlps qword ptr [edi], xmm0; movlpd qword ptr [edi + 6], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b9a8a: movlps qword ptr [edi], xmm0; movlpd qword ptr [edi + 6], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000b9aaa: movlps qword ptr [edi], xmm0; movlpd qword ptr [edi + 7], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000b99d5: movlps qword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000ba3ee: movlps qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x000ba54e: movlps qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000bff61: movlps qword ptr [edx + 5], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b8dae: movlps qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x000b8f0e: movlps qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000b5b5e: movlps qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000b5cbe: movlps qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000b177e: movlps qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000b18de: movlps qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000ba40e: movlps qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000ba56e: movlps qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000bff81: movlps qword ptr [edx + 6], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b8dce: movlps qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000b8f2e: movlps qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000b5b7e: movlps qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; pop edi; ret; 
0x000b5cde: movlps qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000b179e: movlps qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x000b18fe: movlps qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000ba42e: movlps qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000ba58e: movlps qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000bffa1: movlps qword ptr [edx + 7], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b8dee: movlps qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000b8f4e: movlps qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000b5b9e: movlps qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; pop edi; ret; 
0x000b5cfe: movlps qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000b17be: movlps qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x000b4381: movlps qword ptr [edx + 7], xmm1; mov eax, edx; pop ebx; ret; 
0x000b191e: movlps qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000ba2bd: movlps qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000ba5ae: movlps qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b8c9d: movlps qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000b8f6e: movlps qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000b7889: movlps qword ptr [edx + 8], xmm1; lea eax, [edx + 0x10]; pop edi; pop ebx; ret; 
0x000c01cd: movlps qword ptr [edx + 8], xmm1; mov byte ptr [edx + 0x10], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000bfdfd: movlps qword ptr [edx + 8], xmm1; mov eax, edi; pop ebx; pop edi; ret; 
0x000b3499: movlps qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; pop ebx; ret; 
0x000bcf4d: movlps qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; ret; 
0x000b892a: movlps qword ptr [edx], xmm0; lea eax, [edx + 7]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b59e5: movlps qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x000b5c25: movlps qword ptr [edx], xmm0; lea eax, [edx + 7]; ret; 
0x000b7810: movlps qword ptr [edx], xmm0; lea eax, [edx + 8]; pop edi; pop ebx; ret; 
0x000bd028: movlps qword ptr [edx], xmm0; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000bd048: movlps qword ptr [edx], xmm0; mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000b5af8: movlps qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x000b5c38: movlps qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000b1718: movlps qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000b1858: movlps qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000c0171: movlps qword ptr [edx], xmm0; mov byte ptr [edx + 8], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000b5b38: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x000b5c78: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000b1758: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000b1898: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000b5a28: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x000b5c98: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000b7848: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xc]; pop edi; pop ebx; ret; 
0x000b3458: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; pop ebx; ret; 
0x000b1668: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x000b43d1: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; pop ebx; ret; 
0x000b18b8: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000bd068: movlps qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000bd088: movlps qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x001acda5: movlps qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000bfda6: movlps qword ptr [edx], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b3420: movlps qword ptr [edx], xmm0; mov eax, edi; pop edi; pop ebx; ret; 
0x000b1625: movlps qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000b444a: movlps qword ptr [edx], xmm0; mov eax, edx; pop ebx; ret; 
0x000b1845: movlps qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000b5b19: movlps qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x000b5c59: movlps qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000b1739: movlps qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000b1879: movlps qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000b5b5a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000b5cba: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000b177a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000b18da: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000b5b7a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; pop edi; ret; 
0x000b5cda: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000b179a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x000b18fa: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000b5b9a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; pop edi; ret; 
0x000b5cfa: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000b17ba: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x000b437d: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; pop ebx; ret; 
0x000b191a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000b7885: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; lea eax, [edx + 0x10]; pop edi; pop ebx; ret; 
0x000bfdf9: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop ebx; pop edi; ret; 
0x000b3495: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; pop ebx; ret; 
0x000bcf49: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; ret; 
0x000ba3e5: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x000ba545: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000b8da5: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x000b8f05: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000ba405: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000ba565: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b8dc5: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000b8f25: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000ba425: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000ba585: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b8de5: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000b8f45: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000ba2b4: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000ba5a5: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b8c94: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000b8f65: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000ba3e9: movlps xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x000ba549: movlps xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000bff5c: movlps xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b8da9: movlps xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x000b8f09: movlps xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000ba409: movlps xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000ba569: movlps xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b8dc9: movlps xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000b8f29: movlps xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000ba429: movlps xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000ba589: movlps xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b8de9: movlps xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000b8f49: movlps xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000ba2b8: movlps xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000ba5a9: movlps xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b8c98: movlps xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000b8f69: movlps xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000b5c31: movlps xmm0, qword ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000b1851: movlps xmm0, qword ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000b5c71: movlps xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000b1891: movlps xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000b5c91: movlps xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000b18b1: movlps xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000b59e1: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x000b5c21: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; ret; 
0x000b780c: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 8]; pop edi; pop ebx; ret; 
0x001acda1: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000bfda2: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b341c: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; pop ebx; ret; 
0x000b1621: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000b4446: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; pop ebx; ret; 
0x000b1841: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000ba541: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000b8f01: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000ba561: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b8f21: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000ba581: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b8f41: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000ba5a1: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b8f61: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000b5cb1: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000b18d1: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000b5cd1: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000b18f1: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000b5cf1: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000b1911: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000bd6b1: movlps xmm0, qword ptr [esi]; mov byte ptr [eax + 8], dh; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0b04: movlps xmm0, qword ptr [esi]; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd6a1: movlps xmm0, qword ptr [esi]; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b99d1: movlps xmm0, qword ptr [esi]; movlpd qword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b5b55: movlps xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000b5cb5: movlps xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000b1775: movlps xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000b18d5: movlps xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000b5cd5: movlps xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000b18f5: movlps xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000b5cf5: movlps xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000b1915: movlps xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000bd735: movlps xmm1, qword ptr [esi + 5]; movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x001965cb: movq mm0, qword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001985bb: movq mm0, qword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, edx; pop ebx; ret; 
0x000b5a61: movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000b5d11: movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b16a1: movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000b1931: movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000bd791: movq mm0, qword ptr [esi]; movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0e51: movq qword ptr [eax + 0x10], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd98e: movq qword ptr [eax + 0x10], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0df1: movq qword ptr [eax + 0xd], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd92e: movq qword ptr [eax + 0xd], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0e11: movq qword ptr [eax + 0xe], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd94e: movq qword ptr [eax + 0xe], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0e31: movq qword ptr [eax + 0xf], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd96e: movq qword ptr [eax + 0xf], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0c2b: movq qword ptr [eax], mm0; mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd7a5: movq qword ptr [eax], mm0; mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bd828: movq qword ptr [eax], mm0; mov dword ptr [eax + 0x10], ecx; mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0c8b: movq qword ptr [eax], mm0; mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd808: movq qword ptr [eax], mm0; mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0c6b: movq qword ptr [eax], mm0; mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd7e8: movq qword ptr [eax], mm0; mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0c08: movq qword ptr [eax], mm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd795: movq qword ptr [eax], mm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0c4c: movq qword ptr [eax], mm0; mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd7c9: movq qword ptr [eax], mm0; mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0e4d: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd98a: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0ded: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd92a: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0e0d: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd94a: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0e2d: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd96a: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bd8aa: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0x10], xmm2; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bd8ed: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bd90d: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0d0d: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd88a: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bd8ce: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0x10], xmm2; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0ccd: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd84a: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0ced: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd86a: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bb3ae: movq qword ptr [edi + 0x10], mm2; lea eax, [edi + 0x20]; pop edi; pop esi; pop ebx; ret; 
0x000b9ce1: movq qword ptr [edi + 0x10], mm2; mov byte ptr [edi + 0x20], cl; pop edi; pop esi; pop ebx; ret; 
0x000b9cbe: movq qword ptr [edi + 0x10], mm2; pop edi; pop esi; pop ebx; ret; 
0x000bb5fd: movq qword ptr [edi + 0x30], mm7; lea eax, [edi + 0x40]; pop edi; pop esi; pop ebx; ret; 
0x000b9efd: movq qword ptr [edi + 0x30], mm7; pop edi; pop esi; pop ebx; ret; 
0x000bb34e: movq qword ptr [edi + 0xd], mm2; lea eax, [edi + 0x1d]; pop edi; pop esi; pop ebx; ret; 
0x000b9c5e: movq qword ptr [edi + 0xd], mm2; pop edi; pop esi; pop ebx; ret; 
0x000b9c7e: movq qword ptr [edi + 0xe], mm2; pop edi; pop esi; pop ebx; ret; 
0x000bb38e: movq qword ptr [edi + 0xf], mm2; lea eax, [edi + 0x1f]; pop edi; pop esi; pop ebx; ret; 
0x000b9c9e: movq qword ptr [edi + 0xf], mm2; pop edi; pop esi; pop ebx; ret; 
0x000b9de1: movq qword ptr [edi - 1], mm0; pop edi; pop esi; pop ebx; ret; 
0x000bb572: movq qword ptr [edi], mm0; add edi, 0x10; call 0x189c31; add ecx, 0x1119b3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9e72: movq qword ptr [edi], mm0; add edi, 0x10; call 0x189c31; add ecx, 0x112f53; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb1a5: movq qword ptr [edi], mm0; lea eax, [edi + 0x10]; pop edi; pop esi; pop ebx; ret; 
0x000b9ad8: movq qword ptr [edi], mm0; mov byte ptr [edi + 0x10], cl; pop edi; pop esi; pop ebx; ret; 
0x000b9b38: movq qword ptr [edi], mm0; mov dword ptr [edi + 0x10], ecx; pop edi; pop esi; pop ebx; ret; 
0x000b9b18: movq qword ptr [edi], mm0; mov dword ptr [edi + 0xf], ecx; pop edi; pop esi; pop ebx; ret; 
0x000b9af9: movq qword ptr [edi], mm0; mov word ptr [edi + 0x10], cx; pop edi; pop esi; pop ebx; ret; 
0x000b9cba: movq qword ptr [edi], mm0; movdqu xmmword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b9c5a: movq qword ptr [edi], mm0; movdqu xmmword ptr [edi + 0xd], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b9c7a: movq qword ptr [edi], mm0; movdqu xmmword ptr [edi + 0xe], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b9c9a: movq qword ptr [edi], mm0; movdqu xmmword ptr [edi + 0xf], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b9bba: movq qword ptr [edi], mm0; movlpd qword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b9b7a: movq qword ptr [edi], mm0; movlpd qword ptr [edi + 0xe], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000b9b9a: movq qword ptr [edi], mm0; movlpd qword ptr [edi + 0xf], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000b9ac5: movq qword ptr [edi], mm0; pop edi; pop esi; pop ebx; ret; 
0x001969fd: movq qword ptr [edx + 4], xmm0; mov ecx, dword ptr [eax]; mov dword ptr [edx], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019352f: movq qword ptr [edx - 0x10], mm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001985c0: movq qword ptr [edx - 0x10], mm0; mov eax, edx; pop ebx; ret; 
0x0019355f: movq qword ptr [edx - 0x11], mm0; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019358f: movq qword ptr [edx - 0x12], mm0; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001935ef: movq qword ptr [edx - 0x14], mm0; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019361f: movq qword ptr [edx - 0x15], mm0; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019364f: movq qword ptr [edx - 0x16], mm0; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001936bf: movq qword ptr [edx - 0x18], mm0; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001936ef: movq qword ptr [edx - 0x19], mm0; movq qword ptr [edx - 9], xmm0; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019372f: movq qword ptr [edx - 0x1a], mm0; movq qword ptr [edx - 0xa], xmm0; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001965c6: movq qword ptr [edx - 0x20], mm0; movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001985b6: movq qword ptr [edx - 0x20], mm0; movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, edx; pop ebx; ret; 
0x0019352a: movq qword ptr [edx - 0x20], mm0; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00193525: movq qword ptr [edx - 0x30], mm0; movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00193733: movq qword ptr [edx - 0xa], xmm0; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001964dd: movq qword ptr [edx - 0xa], xmm0; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001984cd: movq qword ptr [edx - 0xa], xmm0; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, edx; pop ebx; ret; 
0x001936c3: movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019839d: movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x001936f3: movq qword ptr [edx - 9], xmm0; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019644d: movq qword ptr [edx - 9], xmm0; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019843d: movq qword ptr [edx - 9], xmm0; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, edx; pop ebx; ret; 
0x000b5a65: movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000b5d15: movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; ret; 
0x000b16a5: movq qword ptr [edx], mm0; mov eax, edi; pop edi; ret; 
0x000b1935: movq qword ptr [edx], mm0; mov eax, edx; ret; 
0x00196a3c: movq qword ptr [edx], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00196398: movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00198398: movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x00196a38: movq xmm0, qword ptr [eax]; movq qword ptr [edx], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00093c23: movsb byte ptr es:[edi], byte ptr [esi]; aas; stc; call dword ptr [eax - 0x73]; 
0x00179d95: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add bh, bh; je 0x179dc0; sbb al, 0x53; call eax; 
0x000cfeee: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add cl, ch; ret; 
0x00025560: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x0018b950: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx - 0x137cdfaa], cl; add al, 0x29; ret 0x5052; 
0x00122a64: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ecx + 0x5401], bh; mov ebp, dword ptr [eax + edi]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000842c6: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x0009fce4: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ecx - 0x16ffe2bc], cl; ret; 
0x000db361: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ecx - 0x76cbdba4], cl; ret; 
0x000d96f8: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x00125782: movsb byte ptr es:[edi], byte ptr [esi]; dec edx; stc; call dword ptr [eax - 0x18]; 
0x0004a378: movsb byte ptr es:[edi], byte ptr [esi]; jbe 0x4a374; call dword ptr [eax - 0x18]; 
0x0004d588: movsb byte ptr es:[edi], byte ptr [esi]; jbe 0x4d584; call dword ptr [eax - 0x18]; 
0x00051350: movsb byte ptr es:[edi], byte ptr [esi]; jbe 0x5134c; call dword ptr [eax - 0x18]; 
0x00059c59: movsb byte ptr es:[edi], byte ptr [esi]; jbe 0x59c55; call dword ptr [eax - 0x18]; 
0x000ca431: movsb byte ptr es:[edi], byte ptr [esi]; jbe 0xca42d; call dword ptr [eax - 0x18]; 
0x000cd3fd: movsb byte ptr es:[edi], byte ptr [esi]; jbe 0xcd3f9; call dword ptr [eax - 0x18]; 
0x000d0dc9: movsb byte ptr es:[edi], byte ptr [esi]; jbe 0xd0dc5; call dword ptr [eax - 0x18]; 
0x000d8743: movsb byte ptr es:[edi], byte ptr [esi]; jbe 0xd873f; call dword ptr [eax - 0x18]; 
0x0005af3f: movsb byte ptr es:[edi], byte ptr [esi]; js 0x5af3b; call dword ptr [eax - 0x73]; 
0x00119478: movsb byte ptr es:[edi], byte ptr [esi]; mov dl, 0xff; jmp dword ptr [ebp - 0x5f]; 
0x0015ff57: movsb byte ptr es:[edi], byte ptr [esi]; or dword ptr [eax], eax; add byte ptr [eax + 0x56], dl; mov ecx, dword ptr [esp + 0x3c]; call ecx; 
0x000c24db: movsb byte ptr es:[edi], byte ptr [esi]; pop eax; mov edi, eax; mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x001863c7: movsb byte ptr es:[edi], byte ptr [esi]; push dword ptr [ebp - 0x60]; push 0x28; push edi; call eax; 
0x00137cea: movsb byte ptr es:[edi], byte ptr [esi]; push ebp; stc; call dword ptr [eax - 1]; 
0x00139cb3: movsb byte ptr es:[edi], byte ptr [esi]; push ebx; call dword ptr [esi + 0x14]; 
0x001238a1: movsb byte ptr es:[edi], byte ptr [esi]; ret 0x811f; 
0x000dae7a: movsb byte ptr es:[edi], byte ptr [esi]; ret 0x8902; 
0x00180f76: movsb byte ptr es:[edi], byte ptr [esi]; ret 0x8903; 
0x000488a9: movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00180f55: movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc105; 
0x00115c1f: movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc10c; 
0x00091221: movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc11f; 
0x00047026: movsb byte ptr es:[edi], byte ptr [esi]; ret; 
0x0019d175: movsb byte ptr es:[edi], byte ptr [esi]; retf 0xfffe; add ebx, 0x3ef37; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0012d4f1: movsb byte ptr es:[edi], byte ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x00125773: movsb byte ptr es:[edi], byte ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x0012bf9e: movsb byte ptr es:[edi], byte ptr [esi]; stc; call dword ptr [edi - 0x7f]; 
0x00059bcc: movsb byte ptr es:[edi], byte ptr [esi]; std; dec dword ptr [ebx - 0x364743]; dec dword ptr [ebp - 0x6877779]; call dword ptr [eax - 0x73]; 
0x00059b82: movsb byte ptr es:[edi], byte ptr [esi]; std; dec dword ptr [ebx - 0x36474b]; dec dword ptr [ebp - 0x687777a]; call dword ptr [eax - 0x73]; 
0x00163835: movsb byte ptr es:[edi], byte ptr [esi]; std; jmp dword ptr [esi - 0x70]; 
0x0018a658: movsb byte ptr es:[edi], byte ptr [esi]; sti; dec dword ptr [ebx + 0x311c2444]; fild dword ptr [eax + 0xf72007d]; xchg esp, eax; ret; 
0x0016ff97: movsb byte ptr es:[edi], byte ptr [esi]; sub esp, 0xc; push edi; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x00085228: movsb byte ptr es:[edi], byte ptr [esi]; test byte ptr [eax], al; add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x0015fd58: movsd dword ptr es:[edi], dword ptr [esi]; add al, byte ptr [eax]; add byte ptr [ebx - 0x72efdb8c], cl; xchg byte ptr [ebp + esi*4 - 7], cl; call dword ptr [eax - 0x73]; 
0x001859a7: movsd dword ptr es:[edi], dword ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0016ec2c: movsd dword ptr es:[edi], dword ptr [esi]; add byte ptr [eax], al; pop ebx; ret; 
0x0003d593: movsd dword ptr es:[edi], dword ptr [esi]; add dword ptr [eax], eax; add byte ptr [esi + 8], bh; mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x0003486b: movsd dword ptr es:[edi], dword ptr [esi]; and byte ptr [eax], al; mov eax, dword ptr [eax + 0x1d0]; add eax, dword ptr gs:[0]; ret; 
0x0003488b: movsd dword ptr es:[edi], dword ptr [esi]; and byte ptr [eax], al; mov eax, dword ptr [eax + 0x94]; add eax, dword ptr gs:[0]; ret; 
0x0003484b: movsd dword ptr es:[edi], dword ptr [esi]; and byte ptr [eax], al; mov eax, dword ptr [eax + 0x9c]; add eax, dword ptr gs:[0]; ret; 
0x000c097a: movsd dword ptr es:[edi], dword ptr [esi]; call 0x189c31; add ecx, 0x10c6f4; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba9da: movsd dword ptr es:[edi], dword ptr [esi]; call 0x189c31; add ecx, 0x1124c0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b939a: movsd dword ptr es:[edi], dword ptr [esi]; call 0x189c31; add ecx, 0x1139a0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00195e74: movsd dword ptr es:[edi], dword ptr [esi]; cmp eax, 0xc381ffff; cmp byte ptr [edi + 4], dl; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000c4257: movsd dword ptr es:[edi], dword ptr [esi]; lcall 0x9bd0, 0x858d0007; stc; call dword ptr [eax - 0x73]; 
0x00090871: movsd dword ptr es:[edi], dword ptr [esi]; mov byte ptr [edx + 0x88], 1; add esp, 4; pop esi; pop edi; ret; 
0x00156250: movsd dword ptr es:[edi], dword ptr [esi]; mov dword ptr [eax + 0x7c], 0; add esp, 4; pop esi; pop edi; ret; 
0x000fb1a5: movsd dword ptr es:[edi], dword ptr [esi]; mov eax, 0x20; mov edx, 0x40; cmove eax, edx; ret; 
0x000c255e: movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; cld; pop edi; ret; 
0x000c2534: movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x00184c57: movsd dword ptr es:[edi], dword ptr [esi]; nop; sti; jmp dword ptr [esi - 0x70]; 
0x00090479: movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x000c2532: movsd dword ptr es:[edi], dword ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000c259b: movsd dword ptr es:[edi], dword ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; xchg edi, eax; mov esi, edx; ret; 
0x000428fe: movsd dword ptr es:[edi], dword ptr [esi]; ret 0xe0d3; 
0x000ef1c7: movsd dword ptr es:[edi], dword ptr [esi]; ret 0xffff; 
0x00053e1e: movsd dword ptr es:[edi], dword ptr [esi]; ret; 
0x0009481b: movsd dword ptr es:[edi], dword ptr [esi]; sbb al, byte ptr [eax]; mov eax, dword ptr [eax + 0x3af4]; ret; 
0x00197e74: movsd dword ptr es:[edi], dword ptr [esi]; sbb eax, 0xc381ffff; mov eax, 0x3000439; sbb al, 0x8b; jmp ebx; 
0x0012d4b9: movsd dword ptr es:[edi], dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x0012d4a9: movsd dword ptr es:[edi], dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x00059b5d: movsd dword ptr es:[edi], dword ptr [esi]; std; dec dword ptr [ebx - 0x364743]; dec dword ptr [ebp - 0x6877779]; call dword ptr [eax - 0x73]; 
0x000c259d: movsd dword ptr es:[edi], dword ptr [esi]; xchg edi, eax; mov esi, edx; ret; 
0x00025f79: movshdup xmm0, xmmword ptr [eax]; add ebp, dword ptr [edi + 8]; mov dword ptr [esp], ebp; call esi; 
0x000c2531: movsw word ptr es:[edi], word ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000c259a: movsw word ptr es:[edi], word ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; xchg edi, eax; mov esi, edx; ret; 
0x000abb23: movsx edx, byte ptr [ecx + eax]; cmp edx, ebx; je 0xabb20; pop ebx; ret; 
0x0009c2f4: movzx eax, al; add eax, 2; add esp, 0xc; ret; 
0x0017d0a8: movzx eax, al; add esp, 0x1c; ret; 
0x0011f064: movzx eax, al; add esp, 0x4c; ret; 
0x00172148: movzx eax, al; add esp, 4; pop ebx; pop esi; ret; 
0x0012664e: movzx eax, al; add esp, 8; pop ebx; ret; 
0x00042cee: movzx eax, al; bsr eax, eax; xor eax, 0x1f; lea edx, [eax - 0x17]; mov eax, edx; ret; 
0x0009c309: movzx eax, al; lea eax, [eax + eax + 2]; ret; 
0x0003c378: movzx eax, al; mov dword ptr [ebx + 0x18], eax; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0012364b: movzx eax, al; neg eax; add esp, 0xc; ret; 
0x0012ed4f: movzx eax, al; neg eax; ret; 
0x00088ca7: movzx eax, al; pop ebx; neg eax; ret; 
0x00136d71: movzx eax, al; pop ebx; pop esi; neg eax; ret; 
0x00089149: movzx eax, al; pop ebx; pop esi; pop edi; ret; 
0x001720b4: movzx eax, al; pop ebx; pop esi; ret; 
0x0008ec65: movzx eax, al; pop ebx; ret; 
0x0005b5db: movzx eax, al; pop edi; ret; 
0x0003d222: movzx eax, al; ret; 
0x0011b159: movzx eax, al; sbb ecx, edx; sbb eax, 0; pop ebx; pop esi; ret; 
0x0009c1d5: movzx eax, al; sub eax, 2; add esp, 0xc; ret; 
0x00042e8e: movzx eax, al; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x0014ef5c: movzx eax, ax; add esp, 0x2c; ret; 
0x001420c5: movzx eax, ax; and ecx, 0xc0000000; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x00042d8f: movzx eax, ax; bsr eax, eax; xor eax, 0x1f; lea edx, [eax - 0xf]; mov eax, edx; ret; 
0x00042f2f: movzx eax, ax; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x0013be9a: movzx eax, byte ptr [eax + edx*2 + 1]; shr al, 6; and eax, 1; pop ebx; ret; 
0x0008bd26: movzx eax, byte ptr [eax - 1]; and dword ptr [ebx], 0xffffffef; add esp, 4; pop ebx; pop esi; ret; 
0x001a676d: movzx eax, byte ptr [eax - 1]; cmp al, byte ptr [edx - 1]; mov eax, 0; jne 0x1a6f86; pop ebx; ret; 
0x001a9837: movzx eax, byte ptr [eax - 1]; cmp al, byte ptr [edx - 1]; mov eax, 0; jne 0x1a9870; pop ebx; ret; 
0x0019652c: movzx eax, byte ptr [eax - 1]; mov word ptr [edx - 3], cx; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019851c: movzx eax, byte ptr [eax - 1]; mov word ptr [edx - 3], cx; mov byte ptr [edx - 1], al; mov eax, edx; pop ebx; ret; 
0x0008b4eb: movzx eax, byte ptr [eax]; add esp, 4; pop ebx; pop esi; ret; 
0x00196bb0: movzx eax, byte ptr [eax]; mov byte ptr [edx], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001a64c2: movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x0008901e: movzx eax, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0018b97f: movzx eax, byte ptr [eax]; ret; 
0x00086848: movzx eax, byte ptr [eax]; shr al, 2; and eax, 1; xor eax, 1; ret; 
0x00086868: movzx eax, byte ptr [eax]; shr al, 3; and eax, 1; xor eax, 1; ret; 
0x000875d8: movzx eax, byte ptr [eax]; shr al, 4; and eax, 1; ret; 
0x000875f8: movzx eax, byte ptr [eax]; shr al, 5; and eax, 1; ret; 
0x001a5fc5: movzx eax, byte ptr [edi + ecx]; movzx ecx, byte ptr [esi + ecx]; sub eax, ecx; pop esi; pop edi; ret; 
0x000fa8d9: movzx eax, byte ptr [edx + 1]; add edx, 1; test al, al; jne 0xfa8b1; xor eax, eax; ret; 
0x00141fa3: movzx eax, byte ptr [edx + 1]; shr eax, 1; ret; 
0x001a0add: movzx eax, byte ptr [edx + 1]; sub eax, ecx; pop ebp; ret; 
0x0019f314: movzx eax, byte ptr [edx + 1]; sub eax, ecx; ret; 
0x001a0afd: movzx eax, byte ptr [edx + 2]; sub eax, ecx; pop ebp; ret; 
0x0019f324: movzx eax, byte ptr [edx + 2]; sub eax, ecx; ret; 
0x001a0b1d: movzx eax, byte ptr [edx + 3]; sub eax, ecx; pop ebp; ret; 
0x0019f334: movzx eax, byte ptr [edx + 3]; sub eax, ecx; ret; 
0x001a0b3d: movzx eax, byte ptr [edx + 4]; sub eax, ecx; pop ebp; ret; 
0x0019f344: movzx eax, byte ptr [edx + 4]; sub eax, ecx; ret; 
0x001a0b5d: movzx eax, byte ptr [edx + 5]; sub eax, ecx; pop ebp; ret; 
0x0019f354: movzx eax, byte ptr [edx + 5]; sub eax, ecx; ret; 
0x001a0b7d: movzx eax, byte ptr [edx + 6]; sub eax, ecx; pop ebp; ret; 
0x0019f364: movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x001a0aa1: movzx eax, byte ptr [edx + 7]; sub eax, ecx; pop ebp; ret; 
0x0019f2f4: movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x001a3163: movzx eax, byte ptr [edx]; mov ecx, dword ptr [ebx + ecx*4 - 0x86474]; mov eax, dword ptr [ebx + eax*4 - 0x86474]; sub eax, ecx; pop ebx; ret; 
0x0008d32e: movzx eax, byte ptr [edx]; pop ebx; pop esi; ret; 
0x0018b9b9: movzx eax, byte ptr [edx]; pop esi; pop edi; ret; 
0x00087666: movzx eax, byte ptr [edx]; ret; 
0x001a0abc: movzx eax, byte ptr [edx]; sub eax, ecx; pop ebp; ret; 
0x0019f303: movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x0008b586: movzx eax, byte ptr [edx]; sub esp, 8; lea ebx, [edx + 1]; push eax; push esi; call dword ptr [ebp + 0xc]; 
0x0002838a: movzx eax, dl; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x001423f0: movzx eax, dl; ret; 
0x0004326b: movzx eax, dl; tzcnt eax, eax; test dl, dl; mov edx, 8; cmove eax, edx; ret; 
0x0004330b: movzx eax, dx; tzcnt eax, eax; test dx, dx; mov edx, 0x10; cmove eax, edx; ret; 
0x00034827: movzx eax, word ptr [eax + edx*2 + 0x100]; and eax, dword ptr [esp + 8]; ret; 
0x00034502: movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x000344d2: movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x000344a2: movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x000343e2: movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x00034442: movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x00034352: movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x00034412: movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x000343b2: movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x000345b2: movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x00034382: movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x00034472: movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x00034322: movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x0013f624: movzx eax, word ptr [esp + 4]; rol ax, 8; ret; 
0x000d9b0f: movzx ebx, bl; lea ebx, [ebx + ebx - 1]; mov eax, ebx; pop ebx; pop esi; ret; 
0x0014abb9: movzx ebx, byte ptr [eax]; test ebx, ebx; jne 0x14ab88; mov eax, 1; pop ebx; ret; 
0x0014ef87: movzx ebx, word ptr [ecx + 2]; xor eax, eax; cmp word ptr [edx + 2], bx; je 0x14ef98; pop ebx; ret; 
0x001287bc: movzx ecx, al; shrd eax, edx, 0xc; xor al, al; or eax, ecx; ret; 
0x001a0d90: movzx ecx, byte ptr [eax + 0xf]; cmp byte ptr [edx + 0xf], cl; jne 0x1a0bf0; pop ebp; xor eax, eax; ret; 
0x001a0ad9: movzx ecx, byte ptr [eax + 1]; movzx eax, byte ptr [edx + 1]; sub eax, ecx; pop ebp; ret; 
0x0019f310: movzx ecx, byte ptr [eax + 1]; movzx eax, byte ptr [edx + 1]; sub eax, ecx; ret; 
0x001a0af9: movzx ecx, byte ptr [eax + 2]; movzx eax, byte ptr [edx + 2]; sub eax, ecx; pop ebp; ret; 
0x0019f320: movzx ecx, byte ptr [eax + 2]; movzx eax, byte ptr [edx + 2]; sub eax, ecx; ret; 
0x001a0b19: movzx ecx, byte ptr [eax + 3]; movzx eax, byte ptr [edx + 3]; sub eax, ecx; pop ebp; ret; 
0x0019f330: movzx ecx, byte ptr [eax + 3]; movzx eax, byte ptr [edx + 3]; sub eax, ecx; ret; 
0x001a0b39: movzx ecx, byte ptr [eax + 4]; movzx eax, byte ptr [edx + 4]; sub eax, ecx; pop ebp; ret; 
0x0019f340: movzx ecx, byte ptr [eax + 4]; movzx eax, byte ptr [edx + 4]; sub eax, ecx; ret; 
0x001a0b59: movzx ecx, byte ptr [eax + 5]; movzx eax, byte ptr [edx + 5]; sub eax, ecx; pop ebp; ret; 
0x0019f350: movzx ecx, byte ptr [eax + 5]; movzx eax, byte ptr [edx + 5]; sub eax, ecx; ret; 
0x001a0b79: movzx ecx, byte ptr [eax + 6]; movzx eax, byte ptr [edx + 6]; sub eax, ecx; pop ebp; ret; 
0x0019f360: movzx ecx, byte ptr [eax + 6]; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x001a0a9d: movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; pop ebp; ret; 
0x0019f2f0: movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x001a6624: movzx ecx, byte ptr [eax - 1]; cmp cl, byte ptr [edx - 1]; mov eax, 0; jne 0x1a6f86; pop ebx; ret; 
0x001a96da: movzx ecx, byte ptr [eax - 1]; cmp cl, byte ptr [edx - 1]; mov eax, 0; jne 0x1a9870; pop ebx; ret; 
0x00196408: movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001983f8: movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, edx; pop ebx; ret; 
0x000c21b2: movzx ecx, byte ptr [eax]; cmp cl, byte ptr [edx]; jne 0xc21bd; xor eax, eax; pop ebx; ret; 
0x00196a88: movzx ecx, byte ptr [eax]; mov byte ptr [edx], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001a0ab9: movzx ecx, byte ptr [eax]; movzx eax, byte ptr [edx]; sub eax, ecx; pop ebp; ret; 
0x0019f300: movzx ecx, byte ptr [eax]; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x0011335d: movzx ecx, byte ptr [eax]; test cl, cl; jne 0x113343; xor eax, eax; pop ebx; ret; 
0x000f0b8d: movzx ecx, byte ptr [eax]; test cl, cl; jne 0xf0b73; xor eax, eax; pop ebx; ret; 
0x000f36cd: movzx ecx, byte ptr [eax]; test cl, cl; jne 0xf36b3; xor eax, eax; pop ebx; ret; 
0x000f44cd: movzx ecx, byte ptr [eax]; test cl, cl; jne 0xf44b3; xor eax, eax; pop ebx; ret; 
0x000f6ffd: movzx ecx, byte ptr [eax]; test cl, cl; jne 0xf6fe3; xor eax, eax; pop ebx; ret; 
0x000f7e0d: movzx ecx, byte ptr [eax]; test cl, cl; jne 0xf7df3; xor eax, eax; pop ebx; ret; 
0x001a5fc9: movzx ecx, byte ptr [esi + ecx]; sub eax, ecx; pop esi; pop edi; ret; 
0x0004286a: movzx ecx, cl; bsr ecx, ecx; shl eax, cl; ret; 
0x0004296e: movzx ecx, cl; mov eax, 0x80000000; bsr ecx, ecx; xor ecx, 0x1f; shr eax, cl; ret; 
0x0004294b: movzx ecx, cx; bsr ecx, ecx; shl eax, cl; ret; 
0x00042a1f: movzx ecx, cx; mov eax, 0x80000000; bsr ecx, ecx; xor ecx, 0x1f; shr eax, cl; ret; 
0x00196498: movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00198488: movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, edx; pop ebx; ret; 
0x00196b18: movzx ecx, word ptr [eax]; mov word ptr [edx], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0006510a: movzx edx, bl; mov ecx, dword ptr [esp + 0x20]; movzx edx, byte ptr [edx + eax - 0x20]; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [ecx + edx*4 - 0x73f14]; jmp eax; 
0x0015c878: movzx edx, byte ptr [eax + 9]; pop ebx; pop esi; and edx, 0xf; mov eax, edx; ret; 
0x00113390: movzx edx, byte ptr [eax]; test dl, dl; je 0x113364; pop ebx; ret; 
0x000f0bc0: movzx edx, byte ptr [eax]; test dl, dl; je 0xf0b94; pop ebx; ret; 
0x000f3700: movzx edx, byte ptr [eax]; test dl, dl; je 0xf36d4; pop ebx; ret; 
0x000f4500: movzx edx, byte ptr [eax]; test dl, dl; je 0xf44d4; pop ebx; ret; 
0x000f7030: movzx edx, byte ptr [eax]; test dl, dl; je 0xf7004; pop ebx; ret; 
0x000f7e40: movzx edx, byte ptr [eax]; test dl, dl; je 0xf7e14; pop ebx; ret; 
0x00070fe8: movzx edx, byte ptr [ebx + esi - 0x20]; mov ebx, dword ptr [esp + 0xc]; mov ecx, dword ptr [ebx + edx*4 - 0x736b4]; add ecx, eax; jmp ecx; 
0x0007213a: movzx edx, byte ptr [ebx + esi - 0x20]; mov ebx, dword ptr [esp + 0xc]; mov ecx, dword ptr [ebx + edx*4 - 0x73834]; add ecx, eax; jmp ecx; 
0x00172bc9: movzx edx, byte ptr [ecx + edx]; mov byte ptr [eax - 1], dl; cmp eax, ebx; jne 0x172bc0; pop ebx; ret; 
0x00039d5c: movzx edx, byte ptr [ecx]; test dl, dl; jne 0x39d40; ret; 
0x00065111: movzx edx, byte ptr [edx + eax - 0x20]; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [ecx + edx*4 - 0x73f14]; jmp eax; 
0x0006589b: movzx edx, byte ptr [edx + eax - 0x20]; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [edi + edx*4]; mov edi, ecx; jmp eax; 
0x00066023: movzx edx, byte ptr [edx + eax - 0x20]; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [esi + edx*4 - 0x74014]; jmp eax; 
0x000718d4: movzx edx, byte ptr [edx + esi - 0x20]; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x00070788: movzx edx, byte ptr [edx + esi - 0x20]; mov ebx, dword ptr [esp + 0xc]; mov ecx, dword ptr [ebx + edx*4 - 0x73734]; add ecx, eax; jmp ecx; 
0x001a64c5: movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x00064884: movzx edx, byte ptr [esi + eax - 0x20]; mov esi, dword ptr [esp + 0x20]; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [esi + edx*4 - 0x73e94]; jmp eax; 
0x0006593c: movzx edx, byte ptr [esi + edi - 0x20]; mov edi, dword ptr [esp + 0x18]; add edi, dword ptr [ecx + edx*4 - 0x73e94]; mov edx, edi; mov edi, eax; jmp edx; 
0x001a9324: movzx edx, byte ptr [esi - 0x10]; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x001a9384: movzx edx, byte ptr [esi - 0xa]; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x001a9354: movzx edx, byte ptr [esi - 0xd]; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x001a9344: movzx edx, byte ptr [esi - 0xe]; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x001a9315: movzx edx, byte ptr [esi - 9]; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x0010ccc8: movzx edx, word ptr [eax]; mov eax, dword ptr [esp + 8]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x0008e59b: mul ah; call dword ptr [eax - 0x18]; 
0x00193737: mul byte ptr [esi - 0x77]; inc edx; dec byte ptr [ebx + 0x5b082444]; ret; 
0x00167214: mul dword ptr [ecx - 7]; call dword ptr [eax - 0x18]; 
0x00167214: mul dword ptr [ecx - 7]; call dword ptr [eax - 0x18]; fdivr st(6); jmp dword ptr [ebp - 0x75]; 
0x000a5a75: mul ebp; clc; dec dword ptr [ebp - 0x6673f79]; call dword ptr [eax - 0x73]; 
0x0012364e: neg eax; add esp, 0xc; ret; 
0x001a5b37: neg eax; add esp, 4; pop ebp; pop ebx; ret; 
0x001a32a7: neg eax; add esp, 4; pop ebx; ret; 
0x0003dc4a: neg eax; cmovs eax, edx; ret; 
0x000c668e: neg eax; cmp ecx, edi; pop edi; cmovg eax, edx; ret; 
0x0009f835: neg eax; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0003c9bd: neg eax; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; pop ebx; ret; 
0x0012f0a5: neg eax; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; ret; 
0x00024f66: neg eax; mov edx, dword ptr [edx + 0xa4]; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; ret; 
0x0003c11b: neg eax; or eax, ecx; sar eax, 0x1f; not eax; and eax, edx; ret; 
0x001a0bf7: neg eax; pop ebp; ret; 
0x000253ce: neg eax; pop ebx; adc edx, 0; neg edx; ret; 
0x000942ca: neg eax; pop ebx; pop esi; ret; 
0x000fb6a4: neg eax; pop ebx; ret; 
0x001a7867: neg eax; pop edi; pop ebp; pop ebx; ret; 
0x0004db41: neg eax; pop edi; pop ebp; xor eax, 0x7fffffff; ret; 
0x001a7307: neg eax; pop edi; pop ebx; ret; 
0x001ac1c7: neg eax; pop edi; pop esi; pop ebx; ret; 
0x000d97a7: neg eax; pop edi; pop esi; ret; 
0x00053693: neg eax; pop esi; pop edi; ret; 
0x00088cab: neg eax; ret; 
0x000876fe: neg eax; sbb eax, eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x0008d867: neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00192de4: neg eax; sbb eax, eax; add esp, 0x2c; ret; 
0x00025857: neg eax; sbb eax, eax; add esp, 0xc; ret; 
0x00061294: neg eax; sbb eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x00040776: neg edx; cmovs edx, ebx; cmovs eax, ecx; pop ebx; ret; 
0x000e7628: neg edx; cmp eax, -0x16; mov eax, 3; cmovne eax, edx; ret; 
0x00099b73: neg edx; cmp eax, 0xfffff000; mov eax, 0; cmova eax, edx; ret; 
0x0011fe3c: neg edx; cmp eax, 0xfffff000; mov eax, 0; pop edi; cmova eax, edx; ret; 
0x000253d4: neg edx; ret; 
0x0011461d: nop; adc byte ptr [ecx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x0015a04a: nop; add al, 0; add byte ptr [ecx - 0x76cbdbbc], cl; ret; 
0x0003eb7d: nop; add al, 0x76; stc; call dword ptr [edx - 0x73]; 
0x0002a7b1: nop; add al, byte ptr [eax]; add byte ptr [ebx - 0x72c7db84], cl; xchg esp, ebp; push -7; call dword ptr [eax - 0x73]; 
0x0009f4f4: nop; add byte ptr [eax], al; add byte ptr [eax + 0x119], bh; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0009a468: nop; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00108948: nop; add byte ptr [eax], al; add byte ptr [ebx - 0x317cf314], al; call dword ptr [edi - 0x18]; 
0x0002c3a5: nop; add byte ptr [eax], al; add byte ptr [ebx - 0x74dfdb8c], cl; jl 0x2c3d4; and al, 0x89; ret 0xf229; 
0x000625a3: nop; add byte ptr [eax], al; add byte ptr [ecx + 0x391c246c], cl; ret; 
0x00179402: nop; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x0008e968: nop; add byte ptr [eax], al; add cl, al; call 0x1e96c7d; mov dword ptr [edx + 0x1ac8], eax; ret; 
0x0010a698: nop; add byte ptr [edi], cl; test dword ptr [ebx - 0x7c000006], esp; ret 0x8301; 
0x00034609: nop; add byte ptr [edx], al; add byte ptr [eax], al; ret; 
0x00175a3a: nop; add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; 
0x00175a3a: nop; add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x00125314: nop; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x001171a4: nop; add dword ptr [eax], eax; add byte ptr [ebx - 0x7ce7dbbc], cl; ret; 
0x00182b8b: nop; add dword ptr [eax], eax; add byte ptr [ecx + 0x5f5e5bd0], cl; ret; 
0x0005abef: nop; add dword ptr [edx + 4], 1; add esp, 4; pop ebx; pop esi; ret; 
0x00032b76: nop; add dword ptr [edx], edx; add byte ptr [eax], al; lea eax, [eax + 0x11cc]; ret; 
0x000d9a9f: nop; add eax, 2; ret; 
0x00059b99: nop; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [esi + esi*2 - 7], ch; call dword ptr [eax - 0x18]; 
0x0004a308: nop; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [esi + esi*2 - 7], ebp; call dword ptr [eax - 0x18]; 
0x000535ef: nop; add eax, dword ptr [esp]; ret; 
0x000a69cf: nop; add esp, 4; mov eax, 0x16; pop ebx; pop esi; ret; 
0x0013e4df: nop; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x0018c41f: nop; add esp, 4; pop ebx; pop esi; ret; 
0x0010a7ef: nop; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x000980af: nop; and dword ptr [eax], 0xbfffffff; xor eax, eax; ret; 
0x001aa57f: nop; and eax, 0x1fff; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x001aa55f: nop; and eax, 0x3ff; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x001aa58f: nop; and eax, 0x3fff; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x001aa56f: nop; and eax, 0x7ff; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x001aa59f: nop; and eax, 0x7fff; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x000c158f: nop; bsf eax, eax; lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x000c1cdf: nop; bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x000c1cbf: nop; bsf eax, eax; lea eax, [eax + edx - 0x10]; ret; 
0x000c182f: nop; bsr eax, eax; add eax, ecx; ret; 
0x000c183f: nop; bsr eax, eax; lea eax, [eax + ecx + 0x10]; ret; 
0x0004322f: nop; bsr eax, edx; pop ebx; xor eax, 0x1f; ret; 
0x000c30a8: nop; cmp al, 0; add byte ptr [ecx], al; xor eax, eax; pop ebx; ret; 
0x000a4a50: nop; cwde; stc; call dword ptr [eax - 0x73]; 
0x000a0cd0: nop; dec eax; cdq; stc; call dword ptr [edx - 0x73]; 
0x0012f06f: nop; endbr32; call 0x189c21; add edx, 0x10fd9b; mov eax, 0x123; call dword ptr gs:[0x10]; 
0x0009480f: nop; endbr32; call 0x189c25; add eax, 0x1aa5fb; mov eax, dword ptr [eax + 0x3af4]; ret; 
0x0003d49f: nop; endbr32; call 0x189c25; add eax, 0x20196b; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x0002f53f: nop; endbr32; call 0x189c25; add eax, 0x20f8cb; mov eax, dword ptr [eax + 0x10e0]; ret; 
0x0002609f: nop; endbr32; call 0x189c25; add eax, 0x218d6b; mov eax, dword ptr [eax + 0x10b8]; ret; 
0x0009c29f: nop; endbr32; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0009c29f: nop; endbr32; mov eax, 0x9e; call dword ptr gs:[0x10]; ret; 
0x0008b48f: nop; endbr32; mov eax, 0xffffffff; ret; 
0x00170d9f: nop; endbr32; mov eax, 2; ret; 
0x0008e73f: nop; endbr32; mov eax, dword ptr [eax + 0x1c]; mov dword ptr gs:[0x7c], eax; ret; 
0x0003b8df: nop; endbr32; mov eax, dword ptr [esp + 0x10]; and eax, 0x80000000; ret; 
0x0017cdcf: nop; endbr32; mov eax, dword ptr [esp + 4]; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x000875bf: nop; endbr32; mov eax, dword ptr [esp + 4]; and dword ptr [eax], 0xffffffcf; ret; 
0x0003463f: nop; endbr32; mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x0013f60f: nop; endbr32; mov eax, dword ptr [esp + 4]; bswap eax; ret; 
0x00090c0f: nop; endbr32; mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x0015284f: nop; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x10]; ret; 
0x0008ccbf: nop; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x001897af: nop; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x0009e06f: nop; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x64]; ret; 
0x001227cf: nop; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x0008687f: nop; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x000e88ff: nop; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; ret; 
0x00099b3f: nop; endbr32; mov eax, dword ptr gs:[8]; ret; 
0x00094bbf: nop; endbr32; mov eax, dword ptr gs:[8]; xor edx, edx; lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x0013f61f: nop; endbr32; movzx eax, word ptr [esp + 4]; rol ax, 8; ret; 
0x00098a1f: nop; endbr32; nop; xor eax, eax; ret; 
0x0010e37f: nop; endbr32; push ebx; mov eax, 0x2b; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00024d0f: nop; endbr32; ret; 
0x00090bdf: nop; endbr32; xor eax, eax; ret; 
0x0003bc5f: nop; fild dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; fscale; fstp st(1); ret; 
0x00026148: nop; in al, dx; outsd dx, dword ptr [esi]; stc; call dword ptr [edx - 0x73]; 
0x00034044: nop; inc eax; ret; 
0x00064bf8: nop; insb byte ptr es:[edi], dx; mov edi, 0xfa89fff8; mov edi, ecx; jmp edx; 
0x000650b8: nop; insb byte ptr es:[edi], dx; sar al, 0xff; mov edx, edi; mov edi, ecx; jmp edx; 
0x00186fa0: nop; jl 0x186fa6; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00193200: nop; jl 0x193206; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0013bf86: nop; jmp edx; 
0x000287f0: nop; jo 0x287ec; call dword ptr [eax - 0x18]; 
0x00028e0d: nop; jo 0x28e09; call dword ptr [eax - 0x18]; 
0x00029339: nop; jo 0x29335; call dword ptr [eax - 0x18]; 
0x00029a08: nop; jo 0x29a04; call dword ptr [eax - 0x18]; 
0x0002a092: nop; jo 0x2a08e; call dword ptr [eax - 0x18]; 
0x0002aa5e: nop; jo 0x2aa5a; call dword ptr [eax - 0x18]; 
0x0002b121: nop; jo 0x2b11d; call dword ptr [eax - 0x18]; 
0x0002c307: nop; jo 0x2c303; call dword ptr [eax - 0x18]; 
0x0002cd99: nop; jo 0x2cd95; call dword ptr [eax - 0x18]; 
0x0002d83a: nop; jo 0x2d836; call dword ptr [eax - 0x18]; 
0x0002e17b: nop; jo 0x2e177; call dword ptr [eax - 0x18]; 
0x0002ec0e: nop; jo 0x2ec0a; call dword ptr [eax - 0x18]; 
0x000a0b16: nop; jo 0xa0b1c; add byte ptr [eax], al; mov dword ptr [eax + 0x378], 1; ret; 
0x001aaebf: nop; lea eax, [ecx + 1]; ret; 
0x0003d51f: nop; lea eax, [ecx - 1]; mov dword ptr [edx + 0x1f0], eax; mov eax, ecx; ret; 
0x001ac6af: nop; lea eax, [edi - 0xc]; pop edi; ret; 
0x000d46af: nop; lea ebx, [eax + 0xc]; mov eax, ebx; pop ebx; ret; 
0x000d469f: nop; lea ebx, [eax + 8]; mov eax, ebx; pop ebx; ret; 
0x001145af: nop; lea ebx, [esp + 8]; mov eax, 0x13e; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000e770f: nop; lea ecx, [esp + 0x14]; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x0003341f: nop; lea edx, [ecx - 0x6d324]; mov eax, edx; pop ebx; ret; 
0x00129faf: nop; lea esi, [esp + 8]; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x001510c0: nop; lodsb al, byte ptr [esi]; mov al, 0xf9; call dword ptr [edx - 0x73]; 
0x000ff2f4: nop; mov al, byte ptr [0x3efff8f8]; jmp eax; 
0x00158e0d: nop; mov al, byte ptr [0x8d500000]; sub dword ptr [esi + ecx*2], -0xf; call dword ptr [eax - 0x73]; 
0x000ba2cf: nop; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; pop edi; ret; 
0x000b5baf: nop; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; ret; 
0x000b17cf: nop; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x000b5bbf: nop; mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; ret; 
0x000b17df: nop; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edx; ret; 
0x000288dc: nop; mov bh, 0; add byte ptr [ebx - 0x72c3dba4], cl; or dword ptr [esp + ebp*2], 0xfffffff9; call dword ptr [eax + 0x68]; 
0x000abdcf: nop; mov byte ptr [edx], 0; mov eax, edx; pop ebx; pop esi; ret; 
0x0009cdce: nop; mov cl, bh; call dword ptr [eax - 0x73]; 
0x000a0b44: nop; mov dword ptr [eax + 0x34c], edx; mov dword ptr [eax + 0x378], 1; ret; 
0x000a0b94: nop; mov dword ptr [eax + 0x350], edx; mov dword ptr [eax + 0x378], 1; ret; 
0x000a0bc4: nop; mov dword ptr [eax + 0x354], edx; mov dword ptr [eax + 0x378], 1; ret; 
0x000a08b4: nop; mov dword ptr [eax + 0x358], edx; ret; 
0x000a0894: nop; mov dword ptr [eax + 0x35c], edx; ret; 
0x000a0b14: nop; mov dword ptr [eax + 0x370], edx; mov dword ptr [eax + 0x378], 1; ret; 
0x000a0944: nop; mov dword ptr [eax + 0x394], edx; ret; 
0x000a0b74: nop; mov dword ptr [eax + 0x3c34], edx; ret; 
0x0009af3f: nop; mov dword ptr [eax + 4], edx; ret; 
0x000b36cf: nop; mov dword ptr [ecx], edx; mov word ptr [ecx + 4], dx; pop ebx; ret; 
0x000b9d1f: nop; mov dword ptr [edi - 1], edx; pop edi; pop esi; pop ebx; ret; 
0x000b9d2f: nop; mov dword ptr [edi], edx; pop edi; pop esi; pop ebx; ret; 
0x000a0920: nop; mov dword ptr [edx + 0x390], eax; ret; 
0x0007187f: nop; mov dword ptr [esp + 4], ecx; jmp eax; 
0x0007185f: nop; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x1c], 1; jmp eax; 
0x0007186f: nop; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x24], 1; jmp eax; 
0x0007188f: nop; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x28], 1; jmp eax; 
0x0007189f: nop; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x30], 1; jmp eax; 
0x000718af: nop; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x3c], 1; jmp eax; 
0x00186d2f: nop; mov dword ptr [esp + 8], ecx; call eax; 
0x000f0a6f: nop; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x000f0a6f: nop; mov eax, 0x14; call dword ptr gs:[0x10]; ret; 
0x000927af: nop; mov eax, 0x16; pop ebx; ret; 
0x000906df: nop; mov eax, 0x16; ret; 
0x0012b85f: nop; mov eax, 0x24; call dword ptr gs:[0x10]; 
0x0012b85f: nop; mov eax, 0x24; call dword ptr gs:[0x10]; cmp eax, 0xfffff001; jae 0x24f50; ret; 
0x000f0a7f: nop; mov eax, 0x40; call dword ptr gs:[0x10]; 
0x000f0a7f: nop; mov eax, 0x40; call dword ptr gs:[0x10]; ret; 
0x0010c4bf: nop; mov eax, 0x42; call dword ptr gs:[0x10]; 
0x00086a3f: nop; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0012968f: nop; mov eax, 0x99; call dword ptr gs:[0x10]; 
0x0010c1af: nop; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0003c74f: nop; mov eax, 0xad; int 0x80; 
0x000efa7f: nop; mov eax, 0xc8; call dword ptr gs:[0x10]; 
0x000efa7f: nop; mov eax, 0xc8; call dword ptr gs:[0x10]; ret; 
0x000efa6f: nop; mov eax, 0xc9; call dword ptr gs:[0x10]; 
0x000efa6f: nop; mov eax, 0xc9; call dword ptr gs:[0x10]; ret; 
0x000efa5f: nop; mov eax, 0xca; call dword ptr gs:[0x10]; 
0x000efa5f: nop; mov eax, 0xca; call dword ptr gs:[0x10]; ret; 
0x0008f218: nop; mov eax, 0xf0; mov ecx, 0x80; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x00097c8f: nop; mov eax, 0xf0; mov ecx, 1; mov edx, 1; call dword ptr gs:[0x10]; 
0x0014157f: nop; mov eax, 0xffffffff; ret; 
0x001a0bef: nop; mov eax, 1; ja 0x1a0bf9; neg eax; pop ebp; ret; 
0x001a62df: nop; mov eax, 1; ja 0x1a62e9; neg eax; pop ebp; ret; 
0x000d99ff: nop; mov eax, 2; ret; 
0x0009418f: nop; mov eax, 3; add esp, 0xc; ret; 
0x000d9a0f: nop; mov eax, 3; ret; 
0x000d9a1f: nop; mov eax, 4; ret; 
0x000d9a2f: nop; mov eax, 5; ret; 
0x000d9a3f: nop; mov eax, 6; ret; 
0x000d9a4f: nop; mov eax, 7; ret; 
0x0012519f: nop; mov eax, dword ptr [eax + 0x35c]; mov edx, dword ptr [esp + 8]; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x0018977e: nop; mov eax, dword ptr [eax]; ret; 
0x0017937f: nop; mov eax, dword ptr [ebx + 0x104]; pop ebx; pop esi; pop edi; ret; 
0x000b17ff: nop; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; ret; 
0x0017c6ff: nop; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x20]; 
0x0017140f: nop; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0003b99f: nop; mov eax, dword ptr [esp + 0xc]; or eax, 0xffff8000; inc eax; shr eax, 0x1f; ret; 
0x0009a58f: nop; mov eax, dword ptr [esp + 4]; lock dec dword ptr [eax]; jne 0x9a5a0; xor eax, eax; ret; 
0x0009090f: nop; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x14], edx; xor eax, eax; ret; 
0x0009a5cf: nop; mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 1; xor eax, eax; ret; 
0x0003c4fa: nop; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x0009c06f: nop; mov eax, edi; sub esp, 0xc; mov edi, dword ptr [edi + 0xc]; push dword ptr [eax + 4]; call dword ptr [eax]; 
0x0005b72f: nop; mov eax, edx; call 0x5b4d0; mov eax, 1; add esp, 0xc; ret; 
0x000790df: nop; mov eax, edx; call 0x78e40; mov eax, 1; add esp, 0xc; ret; 
0x001ab50f: nop; mov eax, edx; ret; 
0x0010d59f: nop; mov ebx, dword ptr [ebx + 4]; xor edx, edx; mov eax, 0x1b4; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x00121cff: nop; mov ebx, dword ptr [esp + 0x20]; lea edx, [esp + 4]; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x0013012f: nop; mov ebx, dword ptr [esp + 0x60]; mov ecx, dword ptr [esp + 0x64]; mov eax, 0x145; mov esi, edi; call dword ptr gs:[0x10]; 
0x0009133f: nop; mov ebx, dword ptr [esp]; mov eax, 0xf0; mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x0015722f: nop; mov ecx, 1; mov eax, ecx; ret; 
0x000bd64f: nop; mov edx, dword ptr [esi]; mov dword ptr [eax], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00114dcf: nop; mov edx, dword ptr [esp + 0xa8]; mov eax, 0x133; call dword ptr gs:[0x10]; 
0x0018979e: nop; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x000e763f: nop; mov edx, dword ptr [esp + 0xc]; mov dword ptr [edx], ebx; pop ebx; ret; 
0x001306bf: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x149; call dword ptr gs:[0x10]; 
0x0013086f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x0012b87f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x158; call dword ptr gs:[0x10]; 
0x00130d3f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x17e; call dword ptr gs:[0x10]; 
0x000ea13f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x00114a7f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x29; call dword ptr gs:[0x10]; 
0x0012377f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x33; call dword ptr gs:[0x10]; 
0x001214cf: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x0012395f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x0012d99f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x0012d82f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x001305af: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x71; call dword ptr gs:[0x10]; 
0x0012b80f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x73; call dword ptr gs:[0x10]; 
0x00130baf: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x0010e3df: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x001307df: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x82; call dword ptr gs:[0x10]; 
0x000f0a3f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x84; call dword ptr gs:[0x10]; 
0x00114ecf: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x0012f3df: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x88; call dword ptr gs:[0x10]; 
0x000f0aef: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x93; call dword ptr gs:[0x10]; 
0x00128adf: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x98; call dword ptr gs:[0x10]; 
0x0010be6f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x0011467f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xc; call dword ptr gs:[0x10]; 
0x0012fa6f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x0012fa4f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x0012ecff: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x0011fd0f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x00130c3f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x00130caf: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x00130cdf: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x00130d0f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x0013077f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x1ae; call dword ptr gs:[0x10]; 
0x00130a0f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x1b2; call dword ptr gs:[0x10]; 
0x00130b0f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x1c0; call dword ptr gs:[0x10]; 
0x0003c94f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x0010c30f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x001296af: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x0012b37f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x001157af: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x00128aaf: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x0012965f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x0010c14f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x0010be3f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x001305ff: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x0013062f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x0003cf8f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000efa8f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x00130a6f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x0012adaf: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x001284af: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x0012494f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x00064eec: nop; mov edx, edi; mov byte ptr [esp + 0x5e], 0x20; mov edi, ecx; mov dword ptr [esp + 0x1c], 1; jmp edx; 
0x00064ba7: nop; mov edx, edi; mov edi, ecx; jmp edx; 
0x000b9d0f: nop; mov word ptr [edi], dx; pop edi; pop esi; pop ebx; ret; 
0x000abeaf: nop; mov word ptr [edx], si; lea eax, [edx + 1]; pop ebx; pop esi; ret; 
0x00024af3: nop; mov word ptr [esi + 0x3365ffe4], es; adc eax, 0x18; rol edx, 9; mov dword ptr [eax + 0x1a50], edx; ret; 
0x000b5d0f: nop; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b36ff: nop; movlpd qword ptr [ecx], xmm0; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x000b36ef: nop; movlpd qword ptr [ecx], xmm0; pop ebx; ret; 
0x000b5c1f: nop; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; ret; 
0x001acd8f: nop; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000535ee: nop; nop; add eax, dword ptr [esp]; ret; 
0x0009c29d: nop; nop; endbr32; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0009c29d: nop; nop; endbr32; mov eax, 0x9e; call dword ptr gs:[0x10]; ret; 
0x00170d9d: nop; nop; endbr32; mov eax, 2; ret; 
0x0003b8dd: nop; nop; endbr32; mov eax, dword ptr [esp + 0x10]; and eax, 0x80000000; ret; 
0x000875bd: nop; nop; endbr32; mov eax, dword ptr [esp + 4]; and dword ptr [eax], 0xffffffcf; ret; 
0x0013f60d: nop; nop; endbr32; mov eax, dword ptr [esp + 4]; bswap eax; ret; 
0x000e88fd: nop; nop; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; ret; 
0x00099b3d: nop; nop; endbr32; mov eax, dword ptr gs:[8]; ret; 
0x0013f61e: nop; nop; endbr32; movzx eax, word ptr [esp + 4]; rol ax, 8; ret; 
0x00098a1d: nop; nop; endbr32; nop; xor eax, eax; ret; 
0x00024d0d: nop; nop; endbr32; ret; 
0x00090bdd: nop; nop; endbr32; xor eax, eax; ret; 
0x000f0a6e: nop; nop; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x000f0a6e: nop; nop; mov eax, 0x14; call dword ptr gs:[0x10]; ret; 
0x0012b85d: nop; nop; mov eax, 0x24; call dword ptr gs:[0x10]; 
0x000f0a7e: nop; nop; mov eax, 0x40; call dword ptr gs:[0x10]; 
0x000f0a7e: nop; nop; mov eax, 0x40; call dword ptr gs:[0x10]; ret; 
0x0012968d: nop; nop; mov eax, 0x99; call dword ptr gs:[0x10]; 
0x0010c1ad: nop; nop; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0003c74d: nop; nop; mov eax, 0xad; int 0x80; 
0x000efa7e: nop; nop; mov eax, 0xc8; call dword ptr gs:[0x10]; 
0x000efa7e: nop; nop; mov eax, 0xc8; call dword ptr gs:[0x10]; ret; 
0x000efa6e: nop; nop; mov eax, 0xc9; call dword ptr gs:[0x10]; 
0x000efa6e: nop; nop; mov eax, 0xc9; call dword ptr gs:[0x10]; ret; 
0x000efa5d: nop; nop; mov eax, 0xca; call dword ptr gs:[0x10]; 
0x000efa5d: nop; nop; mov eax, 0xca; call dword ptr gs:[0x10]; ret; 
0x0009a5cd: nop; nop; mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 1; xor eax, eax; ret; 
0x001306bd: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x149; call dword ptr gs:[0x10]; 
0x0013086d: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x0012b87d: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x158; call dword ptr gs:[0x10]; 
0x00130d3d: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x17e; call dword ptr gs:[0x10]; 
0x000ea13d: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x00114a7e: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x29; call dword ptr gs:[0x10]; 
0x0012377d: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x33; call dword ptr gs:[0x10]; 
0x001214ce: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x0012395d: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x0012d99d: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x0012d82d: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x001305ad: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x71; call dword ptr gs:[0x10]; 
0x0012b80d: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x73; call dword ptr gs:[0x10]; 
0x00130bad: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x0010e3de: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x001307dd: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x82; call dword ptr gs:[0x10]; 
0x000f0a3e: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x84; call dword ptr gs:[0x10]; 
0x0012f3de: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x88; call dword ptr gs:[0x10]; 
0x000f0aed: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x93; call dword ptr gs:[0x10]; 
0x00128add: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x98; call dword ptr gs:[0x10]; 
0x0010be6d: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x0011467e: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xc; call dword ptr gs:[0x10]; 
0x0012fa6e: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x0012fa4e: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x000535ec: nop; nop; nop; add eax, dword ptr [esp]; ret; 
0x00170d9b: nop; nop; nop; endbr32; mov eax, 2; ret; 
0x00099b3b: nop; nop; nop; endbr32; mov eax, dword ptr gs:[8]; ret; 
0x00024d0b: nop; nop; nop; endbr32; ret; 
0x00090bdb: nop; nop; nop; endbr32; xor eax, eax; ret; 
0x0012b85b: nop; nop; nop; mov eax, 0x24; call dword ptr gs:[0x10]; 
0x0012968b: nop; nop; nop; mov eax, 0x99; call dword ptr gs:[0x10]; 
0x0010c1ab: nop; nop; nop; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x000535ea: nop; nop; nop; nop; add eax, dword ptr [esp]; ret; 
0x00024d09: nop; nop; nop; nop; endbr32; ret; 
0x0012b859: nop; nop; nop; nop; mov eax, 0x24; call dword ptr gs:[0x10]; 
0x00129689: nop; nop; nop; nop; mov eax, 0x99; call dword ptr gs:[0x10]; 
0x0010c1a9: nop; nop; nop; nop; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0010ce67: nop; or al, 1; add byte ptr [eax], al; xor eax, eax; ret; 
0x0010ce3f: nop; or byte ptr [ecx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x000907cf: nop; or dword ptr [ecx + 8], 0x40; xor eax, eax; mov dword ptr [ecx + 4], edx; ret; 
0x0003c757: nop; pop eax; mov eax, 0x77; int 0x80; 
0x000811e8: nop; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x001a986f: nop; pop ebx; mov eax, 1; ja 0x1a987a; neg eax; ret; 
0x0017c0ef: nop; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x001aa0cf: nop; pop ebx; pop esi; xor eax, eax; pop edi; ret; 
0x00173ccf: nop; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x001a7e6f: nop; pop ebx; xor eax, eax; ret; 
0x000c72fe: nop; pop edi; pop ebp; ret; 
0x000ca72c: nop; pop es; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x001a62cf: nop; pop esi; pop edi; xor eax, eax; pop ebp; ret; 
0x00024bd3: nop; push eax; sbb al, byte ptr [eax]; add byte ptr [ebx + 0x5e], bl; ret; 
0x000c627f: nop; ret 0x4b8b; 
0x000a7494: nop; ret 0xdb31; 
0x0013d989: nop; ret 4; 
0x00034548: nop; ret; 
0x00024b6f: nop; sbb byte ptr [ecx], al; add byte ptr [eax], al; test edx, edx; je 0x24b79; ret; 
0x00184c58: nop; sti; jmp dword ptr [esi - 0x70]; 
0x001aba8f: nop; sub edi, 3; jb 0x1abb30; lea eax, [eax + 2]; pop edi; ret; 
0x001aba9f: nop; sub edi, 5; jb 0x1abb30; lea eax, [eax + 4]; pop edi; ret; 
0x001abaaf: nop; sub edi, 6; jb 0x1abb30; lea eax, [eax + 5]; pop edi; ret; 
0x001aaa6f: nop; sub edx, 3; jb 0x1aab10; lea eax, [edi + 2]; pop edi; ret; 
0x001aaa7f: nop; sub edx, 5; jb 0x1aab10; lea eax, [edi + 4]; pop edi; ret; 
0x001aaa8f: nop; sub edx, 6; jb 0x1aab10; lea eax, [edi + 5]; pop edi; ret; 
0x000e9abf: nop; sub esp, 0xc; mov eax, dword ptr [ebp - 0x2c]; push esi; call eax; 
0x000f137f: nop; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5b4]; call dword ptr [eax + 0x14]; 
0x000f85ff: nop; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5d0]; push dword ptr [ebp - 0x5c4]; call dword ptr [eax + 0x14]; 
0x001782ff: nop; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x000c5b1d: nop; test al, 0x9c; stc; call dword ptr [edx - 0x73]; 
0x001ac73f: nop; test al, 0xf0; jne 0x1ac6b0; lea eax, [edi - 0x10]; pop edi; ret; 
0x000a0b76: nop; xor al, 0x3c; add byte ptr [eax], al; ret; 
0x0008df95: nop; xor al, 0x3f; stc; dec dword ptr [ebp + 0xb6]; add byte ptr [edx - 0x77], dl; ret; 
0x000919ff: nop; xor cl, 0x81; mov eax, 0xf0; mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x00097cbf: nop; xor cl, 0x87; mov eax, 0xf0; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x000a236f: nop; xor eax, eax; add esp, 0xc; ret; 
0x00097d75: nop; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x00091518: nop; xor eax, eax; pop ebx; pop edi; ret; 
0x000956c8: nop; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x000fbaff: nop; xor eax, eax; pop ebx; pop esi; ret; 
0x00042abf: nop; xor eax, eax; pop ebx; ret; 
0x0004218f: nop; xor eax, eax; ret; 
0x000abc0f: nop; xor edx, edx; pop ebx; mov eax, edx; ret; 
0x00123167: not byte ptr [ebx + 0x31]; fisttp dword ptr [ebx - 0x74efdbb4]; push esp; and al, 0x14; call dword ptr gs:[0x10]; 
0x000ea077: not byte ptr [ebx + 0x65]; mov eax, dword ptr [8]; mov ebx, 0x1200011; lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x00132aca: not byte ptr [ebx - 0x45]; or eax, 0x8b000000; dec esp; and al, 0x14; mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0008f310: not byte ptr [ebx - 0x75]; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00098161: not byte ptr [ebx - 0x75]; pop esp; and al, 0x10; mov dword ptr [ebx], 0; call dword ptr gs:[0x10]; 
0x0009c335: not dword ptr [eax - 1]; jmp dword ptr [esi - 0x70]; 
0x0003ba80: not eax; and eax, ecx; ret; 
0x0003b00e: not eax; and eax, edx; ret; 
0x00042dcf: not eax; bsr eax, eax; xor eax, 0x1f; lea edx, [eax + 1]; mov eax, edx; ret; 
0x00094847: not eax; lea eax, [eax*8 + 6]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00042f4e: not eax; movzx eax, al; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x00043000: not eax; movzx eax, ax; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x0003be0d: not eax; sar edx, 0x1e; and eax, edx; ret; 
0x0017d26c: not eax; shr eax, 0x1f; ret; 
0x00042f6f: not eax; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x000e7600: not ebx; lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x000951bf: not ecx; and ecx, 0x80; call dword ptr gs:[0x10]; 
0x0004328a: not edx; tzcnt eax, edx; test edx, edx; mov edx, 0x20; cmove eax, edx; ret; 
0x0016f38e: notrack jmp 0x16f390; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x0017697a: notrack jmp eax; lea esi, [esi]; xor eax, eax; pop ebx; ret; 
0x000c30ea: notrack jmp ecx; lea esi, [esi]; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x001aaa3f: or ah, 0; add byte ptr [eax], al; lea eax, [edi + 0xf]; pop edi; ret; 
0x00032b7c: or ah, 0x11; add byte ptr [eax], al; ret; 
0x000a9627: or ah, 0x1f; idiv bh; and ch, 2; lea edx, [edx - 0x17d0d4]; cmove eax, edx; ret; 
0x0002fde4: or ah, 0x72; stc; call dword ptr [eax - 0x73]; 
0x000ac43b: or ah, 0xc7; idiv bh; test byte ptr [ecx + 0x7b], 4; cmove eax, edx; ret; 
0x000c3117: or ah, 1; add byte ptr [eax], al; ret; 
0x00194128: or ah, bh; mov dword ptr [edx + ecx - 4], ebx; mov eax, edx; pop ebx; ret; 
0x000c2564: or ah, bh; pop edi; ret; 
0x00178a92: or ah, byte ptr [edi - 0x3b7c0016]; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0015bf92: or al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0016ef07: or al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x6a1043], cl; push esi; call dword ptr [eax + 0x14]; 
0x00123d89: or al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x4e0f; 
0x00114687: or al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ea0a7: or al, 0; add byte ptr [eax], al; lea ebx, [eax + 0x6c]; mov dword ptr [eax + 0x6c], ebx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x00092cb4: or al, 0; add byte ptr [eax], al; lea ebx, [eax + 0x6c]; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x00141b1f: or al, 0; add byte ptr [eax], al; mov dword ptr [eax + 4], 0x29; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x001329d8: or al, 0; add byte ptr [eax], al; mov dword ptr [esp + 0x18], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00123910: or al, 0; add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; ret; 
0x0017070a: or al, 0; add byte ptr [eax], al; pop ebx; ret; 
0x001abc37: or al, 0; add byte ptr [eax], al; pop edi; ret; 
0x0008fead: or al, 0; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x000fb5e5: or al, 0; add byte ptr [eax], al; test eax, eax; jne 0xfb608; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x001272ab: or al, 0; add byte ptr [ebp - 0x6ad017d], cl; call dword ptr [edx + 0x52]; 
0x00127291: or al, 0; add byte ptr [ebp - 0x6ad557d], cl; call dword ptr [ecx + 0x51]; 
0x001467fa: or al, 0; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x001a4ede: or al, 0; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000d5b54: or al, 0; add byte ptr [ebx - 0x363f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000c242f: or al, 0; add ebx, 0x10acc7; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; add esi, ecx; jmp ebx; 
0x000c21d5: or al, 0; add ebx, 0x10af21; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; add esi, ecx; jmp ebx; 
0x000c0f2f: or al, 0; add ecx, 0x10c143; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c0a24: or al, 0; add ecx, 0x10c64e; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c09ff: or al, 0; add ecx, 0x10c673; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c09df: or al, 0; add ecx, 0x10c693; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c09c2: or al, 0; add ecx, 0x10c6b0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c0923: or al, 0; add ecx, 0x10c6cf; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c0995: or al, 0; add ecx, 0x10c6dd; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c0905: or al, 0; add ecx, 0x10c6ed; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c097e: or al, 0; add ecx, 0x10c6f4; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c0963: or al, 0; add ecx, 0x10c70f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c08e0: or al, 0; add ecx, 0x10c712; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c0941: or al, 0; add ecx, 0x10c731; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c08b6: or al, 0; add ecx, 0x10c73c; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c089d: or al, 0; add ecx, 0x10c755; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c087c: or al, 0; add ecx, 0x10c776; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c0858: or al, 0; add ecx, 0x10c79a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c083a: or al, 0; add ecx, 0x10c7b8; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c07b7: or al, 0; add ecx, 0x10c83b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bd605: or al, 0; add ecx, 0x10f96d; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bd5e0: or al, 0; add ecx, 0x10f992; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bd5b6: or al, 0; add ecx, 0x10f9bc; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bd59d: or al, 0; add ecx, 0x10f9d5; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bd57c: or al, 0; add ecx, 0x10f9f6; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bd558: or al, 0; add ecx, 0x10fa1a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bd53a: or al, 0; add ecx, 0x10fa38; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bd51e: or al, 0; add ecx, 0x10fa54; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bb68f: or al, 0; add ecx, 0x11180f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb5aa: or al, 0; add ecx, 0x111984; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb597: or al, 0; add ecx, 0x111997; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb57b: or al, 0; add ecx, 0x1119b3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000baa84: or al, 0; add ecx, 0x11241a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000baa5f: or al, 0; add ecx, 0x11243f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000baa3f: or al, 0; add ecx, 0x11245f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000baa22: or al, 0; add ecx, 0x11247c; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba983: or al, 0; add ecx, 0x11249b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba9f5: or al, 0; add ecx, 0x1124a9; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba9de: or al, 0; add ecx, 0x1124c0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba9c3: or al, 0; add ecx, 0x1124db; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba9a1: or al, 0; add ecx, 0x1124fd; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba8af: or al, 0; add ecx, 0x11256f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba88f: or al, 0; add ecx, 0x11258f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba86a: or al, 0; add ecx, 0x1125b4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b9f8f: or al, 0; add ecx, 0x112daf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9eaa: or al, 0; add ecx, 0x112f24; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9e97: or al, 0; add ecx, 0x112f37; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9e7b: or al, 0; add ecx, 0x112f53; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0005ad3b: or al, 0; add esp, 0x1c; ret; 
0x00152190: or al, 0; je 0x15219e; add dword ptr [eax + 8], 1; je 0x1521bd; add esp, 0xc; ret; 
0x000c32a8: or al, 0; pop edx; pop ecx; push ebx; push dword ptr [edi]; call esi; 
0x00125e02: or al, 0x10; add byte ptr [eax], al; xor ebx, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00179171: or al, 0x10; ret; 
0x00031110: or al, 0x18; add byte ptr [eax], al; lea esi, [esi]; pop ebx; ret; 
0x0008729d: or al, 0x19; ret 0x157d; 
0x0008e973: or al, 0x1a; add byte ptr [eax], al; ret; 
0x0012f41e: or al, 0x1b; pop ebx; shr eax, cl; and eax, 3; ret; 
0x00189c32: or al, 0x24; ret; 
0x000dc243: or al, 0x29; ret 0x428d; 
0x00083287: or al, 0x29; ret 0xfac1; 
0x00054ac2: or al, 0x29; ret; 
0x000e461c: or al, 0x29; retf 0x490f; ret 0x1c8d; 
0x001169ff: or al, 0x29; ror dword ptr [ecx + 0xf18245c], cl; xchg ebp, eax; ret; 
0x00140971: or al, 0x2a; mov ebx, dword ptr [esp + 0x6c]; mov eax, 6; call dword ptr gs:[0x10]; 
0x000a7e48: or al, 0x2b; dec ebp; add byte ptr [ecx], ch; ret 0xd801; 
0x0003f542: or al, 0x2f; stc; call dword ptr [eax - 0x18]; 
0x001287c2: or al, 0x30; ror byte ptr [ecx], 0xc8; ret; 
0x000ec5d0: or al, 0x31; call dword ptr [eax - 0x18]; 
0x000ec5d0: or al, 0x31; call dword ptr [eax - 0x18]; xchg dword ptr [ebx - 0x3b7cfffc], edx; adc byte ptr [ecx], bh; ret; 
0x00143171: or al, 0x31; call dword ptr [ebp + 1]; 
0x0007b90d: or al, 0x31; call dword ptr [ebp - 0x18]; 
0x0008823c: or al, 0x31; call dword ptr [ebx - 0x18]; 
0x000e9220: or al, 0x31; call dword ptr [esi - 0x18]; 
0x0013bf24: or al, 0x31; fisttp dword ptr [ecx + 0xbab8e1]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000270fa: or al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x00040c3b: or al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x000983d6: or al, 0x31; rol byte ptr [eax + 0xf00197d], cl; xchg ebp, eax; ret 0xe2c1; 
0x00098b6d: or al, 0x31; rol byte ptr [eax + 0xf00197f], cl; xchg ebp, eax; ret 0xe2c1; 
0x0008681a: or al, 0x31; rol byte ptr [ebp - 0x3d6af040], cl; mov eax, edx; ret; 
0x000810c4: or al, 0x31; ror byte ptr [ecx + 0x4c4830b], 0x5b; pop esi; ret; 
0x000a42d3: or al, 0x39; fimul word ptr [ebp - 0x6af0d5fc]; ret; 
0x001a6f55: or al, 0x39; fnstcw word ptr [eax]; jne 0x1a6f70; pop ebx; ret; 
0x0014f01a: or al, 0x39; inc ebx; or al, 0x75; ret; 
0x0004308e: or al, 0x39; rcr dword ptr [ecx], 0xd3; pop ebx; setb al; ret; 
0x0002c243: or al, 0x39; ret 0x1a73; 
0x000aa042: or al, 0x39; ret 0x2b73; 
0x000e8bf1: or al, 0x39; ret 0x470f; 
0x00139e13: or al, 0x39; ret 0x820f; 
0x001365db: or al, 0x39; ret 0x830f; 
0x0002dcf7: or al, 0x39; ret 0x840f; 
0x00051759: or al, 0x39; ret; 
0x00196ca6: or al, 0x4d; add al, 0; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0016322f: or al, 0x50; call 0x186f70; mov dword ptr [esp], ebp; call edi; 
0x00163416: or al, 0x50; call 0x186f70; mov dword ptr [esp], ebp; call esi; 
0x0002827b: or al, 0x50; call 0x231a0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0016eef2: or al, 0x50; call dword ptr [ecx + 0xc]; 
0x00178352: or al, 0x50; call dword ptr [edx + 0x10]; 
0x000a6e2c: or al, 0x50; call edx; 
0x0013d5b8: or al, 0x50; cmc; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x001642cb: or al, 0x50; int1; call dword ptr [eax - 0x73]; 
0x0013790d: or al, 0x50; push 0; push 0x2000002; call dword ptr [ebp + 0x14]; 
0x001397b2: or al, 0x50; push dword ptr [ebp - 0x4c]; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x00139caf: or al, 0x50; push dword ptr [ebp - 0x5c]; push ebx; call dword ptr [esi + 0x14]; 
0x00137a06: or al, 0x50; push dword ptr [esp + 0xc]; push 0x2000001; call dword ptr [ebp + 0x14]; 
0x0013749e: or al, 0x50; push ebx; push 0x2000001; call dword ptr [ebp + 0x14]; 
0x00138443: or al, 0x50; push edi; push 0x2000003; call dword ptr [ebx + 0x14]; 
0x00138217: or al, 0x50; push esi; push 0x2000006; call dword ptr [ebx + 0x14]; 
0x00026289: or al, 0x51; call 0x186f70; mov dword ptr [esp], ebx; mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x00026933: or al, 0x52; call 0x186f70; mov dword ptr [esp], ebx; mov edx, dword ptr [ebp - 0x44]; call edx; 
0x0017c549: or al, 0x52; push ebx; call dword ptr [eax + 0x20]; 
0x0017c516: or al, 0x52; push ebx; call dword ptr [eax + 0x24]; 
0x0017bb66: or al, 0x52; push ebx; call dword ptr [eax + 4]; 
0x0017bb09: or al, 0x52; push ebx; call dword ptr [eax]; 
0x000e7858: or al, 0x52; push ebx; call eax; 
0x0017bedd: or al, 0x52; push ecx; call dword ptr [eax + 4]; 
0x0015a235: or al, 0x53; call 0x186f70; add esp, 0x10; mov eax, ebx; call eax; 
0x001635c5: or al, 0x53; call 0x186f70; mov dword ptr [esp], ebp; call ebx; 
0x0002f4f3: or al, 0x53; call 0x186f70; mov dword ptr [esp], esi; call ebx; 
0x0016faf5: or al, 0x53; call dword ptr [eax + 0x10]; 
0x00088270: or al, 0x53; call dword ptr [edi + 0x44]; 
0x00080d75: or al, 0x53; call dword ptr [esi + 0x10]; 
0x000876f9: or al, 0x53; call dword ptr [esi + 0x30]; 
0x0005f731: or al, 0x53; push edi; push esi; mov eax, dword ptr [esp + 0x14]; call eax; 
0x00094815: or al, 0x54; sldt word ptr [0x1aa5fb]; mov eax, dword ptr [eax + 0x3af4]; ret; 
0x0016ff43: or al, 0x55; call 0x114720; mov esi, dword ptr [esp + 0x48]; mov eax, dword ptr [esi + 0x20]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0017708a: or al, 0x55; call dword ptr [eax + 0x10]; 
0x00171090: or al, 0x55; call dword ptr [esi]; 
0x001770a1: or al, 0x55; call eax; 
0x00163367: or al, 0x55; call edi; 
0x00175e94: or al, 0x55; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x10]; 
0x00025f76: or al, 0x56; call 0x186f70; add ebp, dword ptr [edi + 8]; mov dword ptr [esp], ebp; call esi; 
0x00026116: or al, 0x56; call 0x186f70; mov dword ptr [esp], ebx; call esi; 
0x00032979: or al, 0x56; call 0x231a0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016f088: or al, 0x56; call dword ptr [eax + 0x10]; 
0x0008629b: or al, 0x56; call dword ptr [eax + 0x30]; 
0x0008b7d1: or al, 0x56; call dword ptr [ebp + 0x30]; 
0x0007e756: or al, 0x56; call dword ptr [ebx + 0x2c]; 
0x0007b9bb: or al, 0x56; call dword ptr [ebx + 0x30]; 
0x0007e83f: or al, 0x56; call dword ptr [ebx + 0x34]; 
0x0018b75c: or al, 0x56; call dword ptr [ebx + 0x44]; 
0x0008b42b: or al, 0x56; call dword ptr [edi + 0x34]; 
0x0018b8b1: or al, 0x56; call dword ptr [edi + 0x44]; 
0x000a6d4a: or al, 0x56; call eax; 
0x0012e424: or al, 0x56; call edx; 
0x0012e424: or al, 0x56; call edx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x00175b1d: or al, 0x56; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x0016e6ba: or al, 0x56; push dword ptr [esp + 0x14]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0005bc1f: or al, 0x56; push edx; push eax; call dword ptr [ebp + 0x1c]; 
0x0013bfdf: or al, 0x56; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00027079: or al, 0x57; call 0x186f70; mov dword ptr [esp], ebx; call edi; 
0x001710c1: or al, 0x57; call dword ptr [eax + 0x10]; 
0x0017107e: or al, 0x57; call dword ptr [eax + 8]; 
0x0016ffbd: or al, 0x57; call eax; 
0x0016ff9a: or al, 0x57; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x00173cea: or al, 0x5b; mov eax, 1; pop esi; pop edi; ret; 
0x0008d7bf: or al, 0x5b; mov eax, dword ptr [eax + 0x18]; pop esi; jmp eax; 
0x000ad038: or al, 0x5b; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x00157b19: or al, 0x5b; or eax, 1; pop esi; pop edi; pop ebp; ret; 
0x0014a862: or al, 0x5b; pop esi; mov eax, ecx; pop edi; pop ebp; ret; 
0x00080dfe: or al, 0x5b; pop esi; pop edi; pop ebp; jmp eax; 
0x000a7522: or al, 0x5b; pop esi; pop edi; pop ebp; ret 4; 
0x0002711e: or al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x0008f833: or al, 0x5b; pop esi; pop edi; ret; 
0x000c0a45: or al, 0x5b; pop esi; ret; 
0x0008f5ef: or al, 0x5b; pop esi; sub ecx, edx; lea eax, [ecx + eax + 0x4000]; ret; 
0x00185276: or al, 0x5b; ret; 
0x0003be08: or al, 0x5b; sar eax, 0x1f; not eax; sar edx, 0x1e; and eax, edx; ret; 
0x0012e37b: or al, 0x5b; setg al; pop esi; pop edi; ret; 
0x00126bc3: or al, 0x5b; xor eax, eax; pop esi; pop edi; ret; 
0x0017c0a6: or al, 0x5e; pop edi; jmp eax; 
0x0019b860: or al, 0x5f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199fda: or al, 0x5f; call 0x189c1d; add ebx, 0x41acf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197f0a: or al, 0x5f; call 0x189c1d; add ebx, 0x4391f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195f0a: or al, 0x5f; call 0x189c1d; add ebx, 0x4569f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000b7850: or al, 0x5f; pop ebx; ret; 
0x000bb130: or al, 0x5f; pop esi; pop ebx; ret; 
0x000b5b64: or al, 0x5f; ret; 
0x0012ef0c: or al, 0x65; call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x12ef20; pop ebx; ret; 
0x0012f18c: or al, 0x65; call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x12f1a0; pop ebx; ret; 
0x0013054c: or al, 0x65; call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x130560; pop ebx; ret; 
0x0008f2ea: or al, 0x65; call dword ptr [0x10]; pop ebx; pop esi; ret; 
0x0008e76e: or al, 0x65; mov dword ptr [0x78], eax; ret; 
0x00095a5d: or al, 0x65; mov edx, dword ptr [0x68]; mov dword ptr [eax + 8], edx; xor edx, edx; mov eax, edx; ret; 
0x001570b0: or al, 0x65; sub eax, dword ptr [0x14]; jne 0x1570be; add esp, 0x1c; ret; 
0x0017a0b5: or al, 0x65; sub eax, dword ptr [0x14]; jne 0x17a0c3; add esp, 0x1c; ret; 
0x0017a104: or al, 0x65; sub eax, dword ptr [0x14]; jne 0x17a13c; add esp, 0x1c; ret; 
0x0003ad75: or al, 0x65; sub eax, dword ptr [0x14]; jne 0x3ad87; mov eax, edx; add esp, 0x1c; ret 4; 
0x0003c2e4: or al, 0x65; sub eax, dword ptr [0x14]; jne 0x3c2f3; add esp, 0x18; pop ebx; ret; 
0x0003efe8: or al, 0x65; sub eax, dword ptr [0x14]; jne 0x3eff6; add esp, 0x1c; ret; 
0x0003f0fb: or al, 0x65; sub eax, dword ptr [0x14]; jne 0x3f109; add esp, 0x1c; ret; 
0x00025539: or al, 0x65; sub ecx, dword ptr [0x14]; jne 0x25547; add esp, 0x1c; ret; 
0x00122ca2: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x122cb7; add esp, 0x1c; ret; 
0x00125392: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x1253a0; add esp, 0x1c; ret; 
0x00126b15: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x126b23; add esp, 0x1c; ret; 
0x0012d678: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x12d686; add esp, 0x1c; ret; 
0x00131501: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x131529; add esp, 0x18; pop ebx; ret; 
0x00131581: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x1315a9; add esp, 0x18; pop ebx; ret; 
0x0013186c: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x131899; add esp, 0x18; pop ebx; ret; 
0x0013257c: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x1325a9; add esp, 0x18; pop ebx; ret; 
0x00132693: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x1326a1; add esp, 0x1c; ret; 
0x00132701: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x132729; add esp, 0x18; pop ebx; ret; 
0x00148cde: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x148cf4; add esp, 0x18; pop ebx; ret; 
0x00148d26: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x148d34; add esp, 0x1c; ret; 
0x00148d75: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x148d83; add esp, 0x1c; ret; 
0x0014b37f: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x14b3cc; add esp, 0x1c; ret; 
0x001752d5: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x175356; add esp, 0x18; pop ebx; ret; 
0x0017848e: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x1784a7; add esp, 0x1c; ret; 
0x0017899e: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x1789b7; add esp, 0x1c; ret; 
0x00178a21: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x178a37; add esp, 0x18; pop ebx; ret; 
0x0017b950: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x17b9b9; add esp, 0x18; pop ebx; ret; 
0x0017ba40: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x17baa9; add esp, 0x18; pop ebx; ret; 
0x0017bd17: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x17bd5c; add esp, 0x18; pop ebx; ret; 
0x0017bdb7: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x17bdfc; add esp, 0x18; pop ebx; ret; 
0x0017be75: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x17be9b; add esp, 0x18; pop ebx; ret; 
0x0017bef9: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x17bf37; add esp, 0x18; pop ebx; ret; 
0x0017bf8d: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x17bfd4; add esp, 0x18; pop ebx; ret; 
0x0017c7c7: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x17c80c; add esp, 0x18; pop ebx; ret; 
0x0017c867: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x17c8ac; add esp, 0x18; pop ebx; ret; 
0x0017c907: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x17c94c; add esp, 0x18; pop ebx; ret; 
0x0017c9a7: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x17c9ec; add esp, 0x18; pop ebx; ret; 
0x0017d09e: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x17d0af; movzx eax, al; add esp, 0x1c; ret; 
0x0017d0fe: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x17d10f; movzx eax, al; add esp, 0x1c; ret; 
0x0017d168: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x17d177; add esp, 0x18; pop ebx; ret; 
0x0017d218: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x17d227; add esp, 0x18; pop ebx; ret; 
0x001824d3: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x182514; add esp, 0x18; pop ebx; ret; 
0x001840ad: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x1840c9; add esp, 0x18; pop ebx; ret; 
0x00184127: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x184149; add esp, 0x18; pop ebx; ret; 
0x0018982d: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x18983c; add esp, 0x18; pop ebx; ret; 
0x0018c6c5: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x18c6d3; add esp, 0x1c; ret; 
0x001927d0: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x1927f7; add esp, 0x18; pop ebx; ret; 
0x0003df26: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x3df34; add esp, 0x1c; ret; 
0x000405eb: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x405f9; add esp, 0x1c; ret; 
0x00040818: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x40826; add esp, 0x1c; ret; 
0x00040ae8: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x40af6; add esp, 0x1c; ret; 
0x00040b6b: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x40b79; add esp, 0x1c; ret; 
0x00041b69: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x41bac; add esp, 0x18; pop ebx; ret; 
0x0005ada4: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x5adbf; add esp, 0x1c; ret; 
0x0009c99c: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x9c9c7; add esp, 0x18; pop ebx; ret; 
0x000c5e09: or al, 0x65; sub edx, dword ptr [0x14]; jne 0xc5e3c; add esp, 0x18; pop ebx; ret; 
0x000da70a: or al, 0x65; sub edx, dword ptr [0x14]; jne 0xda718; add esp, 0x1c; ret; 
0x000e4f6e: or al, 0x65; sub edx, dword ptr [0x14]; jne 0xe4f7c; add esp, 0x1c; ret; 
0x000e742e: or al, 0x65; sub edx, dword ptr [0x14]; jne 0xe743c; add esp, 0x1c; ret; 
0x000efa3b: or al, 0x65; sub edx, dword ptr [0x14]; jne 0xefa57; add esp, 0x1c; ret; 
0x001b2f60: or al, 0x66; cmp eax, 0x840f0400; sbb eax, 0x66000005; cmp eax, 0x840f0800; ret; 
0x00137a0b: or al, 0x68; add dword ptr [eax], eax; add byte ptr [edx], al; call dword ptr [ebp + 0x14]; 
0x000ea532: or al, 0x68; out dx, eax; add byte ptr [eax], al; add al, ch; ret; 
0x000a6a72: or al, 0x6a; add eax, 0x447c838d; stc; call dword ptr [eax - 0x73]; 
0x00088b5e: or al, 0x6a; add ebp, dword ptr [edx + 1]; push 0; push 0; push ebx; call dword ptr [eax + 0x24]; 
0x0018b60a: or al, 0x6a; add ebp, dword ptr [edx + 1]; push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x0018b4e8: or al, 0x6a; add ebp, dword ptr [edx + 2]; push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x000dc1d3: or al, 0x6b; ret; 
0x0002889b: or al, 0x6c; stc; call dword ptr [eax + 0x68]; 
0x000287dd: or al, 0x6c; stc; call dword ptr [eax - 0x73]; 
0x000a95ac: or al, 0x6f; out 0xff, eax; test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x17bea4]; cmove eax, edx; ret; 
0x0014f01d: or al, 0x75; ret; 
0x0014aace: or al, 0x7f; ret; 
0x0008f319: or al, 0x80; int1; and dword ptr [ebp - 1], 0x1015; add byte ptr [ebx + 0x5e], bl; ret; 
0x001ad3fe: or al, 0x81; les ebp, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret 4; 
0x00110440: or al, 0x81; les ebp, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x000e2cef: or al, 0x81; les edi, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x0005ace3: or al, 0x83; call 0x44835eb; ret; 
0x00082da9: or al, 0x83; in al, dx; add al, 0x29; ret 0xfac1; 
0x0008a244: or al, 0x83; in al, dx; add al, 0x50; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x00086b1d: or al, 0x83; in al, dx; or al, 0x83; ret; 
0x00172f5f: or al, 0x83; in al, dx; or byte ptr [ebp - 0x69c6a7d], cl; call dword ptr [eax - 1]; 
0x0017c14d: or al, 0x83; in al, dx; or byte ptr [ebx + 0x56530446], cl; call dword ptr [eax + 4]; 
0x0015dbab: or al, 0x83; inc esp; and al, 0x34; add dword ptr [ebx - 0x6bf09f02], eax; ret 0x4489; 
0x0010894e: or al, 0x83; into; call dword ptr [edi - 0x18]; 
0x0018a3c1: or al, 0x83; jnp 0x18a3fd; jmp dword ptr [ebp - 0x75]; 
0x00085cb2: or al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x001716fd: or al, 0x83; les eax, ptr [ecx + eax]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x00186542: or al, 0x83; les ebp, ptr [eax]; pop ebx; ret; 
0x0005a747: or al, 0x83; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00061201: or al, 0x83; les ebx, ptr [eax]; pop ebx; ret; 
0x0003afa5: or al, 0x83; les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret 4; 
0x0005286f: or al, 0x83; les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x0009cc9d: or al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0003c67b: or al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0003b1fc: or al, 0x83; les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret 4; 
0x00100e31: or al, 0x83; les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x00080dfb: or al, 0x83; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; jmp eax; 
0x0005b7ab: or al, 0x83; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0002d02a: or al, 0x83; les edi, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x0005a7c7: or al, 0x83; les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0016ead3: or al, 0x83; les edx, ptr [eax]; add esp, 0xc; ret; 
0x00040461: or al, 0x83; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x001476a4: or al, 0x83; les edx, ptr [eax]; pop esi; pop edi; pop ebp; ret; 
0x0003ca46: or al, 0x83; les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x00059f0b: or al, 0x83; les edx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret 4; 
0x000407c9: or al, 0x83; les esi, ptr [ebx + ebx*2]; pop esi; ret 4; 
0x0015bda5: or al, 0x83; mov byte ptr [ecx], 0xeb; ret; 
0x000c1093: or al, 0x83; out dx, eax; adc byte ptr [ecx], al; clc; pop edi; ret; 
0x000c662a: or al, 0x83; rcl byte ptr [eax], 0x83; ret 0x8b10; 
0x000c1643: or al, 0x83; rcl dword ptr [eax], 0x83; ret 0x2910; 
0x00083708: or al, 0x83; ret 0x2b2c; 
0x000de629: or al, 0x83; ret 0x3909; 
0x000362ce: or al, 0x83; ret 0x5201; 
0x001749f6: or al, 0x83; ret 0x5208; 
0x000a0fa5: or al, 0x83; ret 0x8901; 
0x000f0764: or al, 0x83; ret 0x8902; 
0x00102876: or al, 0x83; ret 0xc704; 
0x00037031: or al, 0x83; ret; 
0x00105eaa: or al, 0x83; rol byte ptr [ecx], 0x39; ret; 
0x00042fc3: or al, 0x83; rol dword ptr [ecx], 0x5b; mov eax, ecx; ret; 
0x00141c3f: or al, 0x83; ror byte ptr [esi], 0x85; sal byte ptr [ebx + 0x39], cl; ret 0x4572; 
0x00141ce4: or al, 0x83; ror byte ptr [esi], 0x85; sal byte ptr [esi + esi + 0x39], cl; ret 0x1f72; 
0x0011d276: or al, 0x85; ror byte ptr [edi], 0x84; ret 0xfffc; 
0x0013d1fa: or al, 0x85; ror byte ptr [edi], 0x84; ret; 
0x0012e3f4: or al, 0x85; ror byte ptr [edi], cl; test byte ptr [ebx + 0x6b], dl; out dx, eax; call dword ptr [ebx + 0x56]; 
0x00043ab6: or al, 0x85; sal byte ptr [eax + esi*2 - 0x75], 0x3c; and al, 0x8d; inc edi; inc byte ptr [ebx - 0x6bf00220]; ret 0xff83; 
0x0004a83e: or al, 0x85; sal byte ptr [ebp + 0x2d], 0xd9; test dword ptr [eax], eax; ret 0xfff9; 
0x00124aea: or al, 0x85; sal byte ptr [ebp - 0x41], 0x83; in al, dx; or byte ptr [ebp - 0x6b5706a], cl; call dword ptr [edx - 0x77]; 
0x00124b09: or al, 0x85; sal byte ptr [ebp - 0x60], 0x83; in al, dx; or byte ptr [ebp - 0x6b56d6a], cl; call dword ptr [edx - 0x77]; 
0x0009d699: or al, 0x85; sal byte ptr [ebp - 0xe], 0x5b; ret; 
0x00125767: or al, 0x85; sal byte ptr [ecx + eax - 0x3d], 0x83; in al, dx; or al, 0x8d; xor byte ptr [esp], 0xf9; call dword ptr [eax - 0x73]; 
0x0012fb09: or al, 0x85; sal byte ptr [edx + ebx - 0x75], 0x74; and al, 0x44; mov eax, 0xac; mov ebx, 0x53564d41; call dword ptr gs:[0x10]; 
0x0012d02f: or al, 0x85; sal byte ptr [esp + eax - 0x7b], 0xd2; jne 0x12d040; ret; 
0x0004a987: or al, 0x85; sal byte ptr [esp + edi - 0x27], cl; test dword ptr [eax], edx; ret 0xfff9; 
0x00142e5d: or al, 0x89; adc edi, dword ptr [ecx]; ret 0x6c74; 
0x0003efa0: or al, 0x89; add dword ptr [ecx + 0x45189c8], ecx; ret 4; 
0x001519fa: or al, 0x89; call 0x4424e386; ret 0x148b; 
0x0007c026: or al, 0x89; call 0x5d671e88; ret; 
0x000c5cc6: or al, 0x89; call 0x5d6bbb28; ret; 
0x001516ab: or al, 0x89; call 0x5d74750d; ret; 
0x00189ffa: or al, 0x89; call 0x5d77fe5c; ret; 
0x00090968: or al, 0x89; clc; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0003d6a3: or al, 0x89; cli; mov eax, 0x1a5; call dword ptr gs:[0x10]; 
0x0003d663: or al, 0x89; cli; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x0002cd71: or al, 0x89; cmp byte ptr [ebx + 0x39102444], cl; ret 0x850f; 
0x0008ae33: or al, 0x89; dec eax; and al, 0x89; push eax; add al, 0x5b; ret; 
0x0013b9ca: or al, 0x89; dec ebp; mov word ptr [ebp - 0x9773], cs; dec dword ptr [ecx - 0x836b]; dec dword ptr [ecx - 0x11f73]; call dword ptr [ecx - 1]; 
0x000403c1: or al, 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x0009cd22: or al, 0x89; fiadd dword ptr [ebp - 0x76e28b40]; ret; 
0x0014020b: or al, 0x89; fimul word ptr [edi]; xchg ebx, eax; ret; 
0x0002dec9: or al, 0x89; fmul dword ptr [ecx - 0x7cfbdbbc]; rol byte ptr [edx], 0x39; ret 0x820f; 
0x00027986: or al, 0x89; inc ebp; fmul qword ptr [ebp - 0x218f137d]; call dword ptr [eax - 0x73]; 
0x0003c353: or al, 0x89; inc ebx; sbb byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x001366d9: or al, 0x89; inc edi; adc al, 0x29; ret 0x478b; 
0x0005b6fd: or al, 0x89; inc esi; adc byte ptr [ecx + 0x5e5b1856], cl; pop edi; ret; 
0x0008c9f4: or al, 0x89; inc esi; add al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00115226: or al, 0x89; inc esp; and al, 0x28; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0012064d: or al, 0x89; inc esp; and al, 8; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x00105ea6: or al, 0x89; je 0x105e6c; or al, 0x83; rol byte ptr [ecx], 0x39; ret; 
0x000f0dd5: or al, 0x89; lea eax, [edx + edi*8 - 1]; dec dword ptr [ecx - 0x5bf7b]; jmp dword ptr [ebp - 0x5f]; 
0x00068173: or al, 0x89; lea ebp, [edx + edi*8 - 1]; dec dword ptr [ecx - 0x59b7b]; dec dword ptr [ebp - 0x4477b]; call dword ptr [eax - 0x18]; 
0x0006a86b: or al, 0x89; lea esi, [edx + edi*8 - 1]; call dword ptr [edi - 0x18]; 
0x000691f8: or al, 0x89; lea esi, [edx + edi*8 - 1]; call dword ptr [edx - 0x18]; 
0x00069f97: or al, 0x89; lea esp, [edx + edi*8 - 1]; call dword ptr [ebx - 0x18]; 
0x000a2c33: or al, 0x89; pop edi; or al, 0x89; ret; 
0x0009d719: or al, 0x89; push eax; or al, 0x5b; pop esi; pop edi; ret; 
0x0003570a: or al, 0x89; push ebp; mov esp, 0x2e3f808d; stc; call dword ptr [eax - 0x18]; 
0x00136e8d: or al, 0x89; push ebx; or al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0008aceb: or al, 0x89; push esi; and al, 1; ret 0x5689; 
0x00087a29: or al, 0x89; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x001359bb: or al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0018108b: or al, 0x89; ret 0x25; 
0x001820de: or al, 0x89; ret 0x408d; 
0x0010c622: or al, 0x89; ret 0x438d; 
0x001312eb: or al, 0x89; ret 0x448b; 
0x000afcb5: or al, 0x89; ret 0x468d; 
0x00083728: or al, 0x89; ret 0x48d; 
0x00089280: or al, 0x89; ret 0x532b; 
0x0018576a: or al, 0x89; ret 0x808b; 
0x00069c82: or al, 0x89; ret 0xc031; 
0x000943ee: or al, 0x89; ret 0xc889; 
0x00099993: or al, 0x89; ret 0xca81; 
0x000a159b: or al, 0x89; ret 0xca83; 
0x00185878: or al, 0x89; ret 0xd889; 
0x00095688: or al, 0x89; ret 0xe281; 
0x0009601a: or al, 0x89; ret 0xe283; 
0x0008d632: or al, 0x89; ret 0xe989; 
0x00107c70: or al, 0x89; ret 0xf889; 
0x0003b9f7: or al, 0x89; ret 0xff25; 
0x000342cd: or al, 0x89; ret; 
0x00094f5e: or al, 0x89; stc; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000326fb: or al, 0x89; test dword ptr [edi + edi*8 - 1], esi; dec dword ptr [ebx - 0x974b]; call dword ptr [edx - 0x18]; 
0x0010726a: or al, 0x8b; adc bh, dh; ret 0x30f; 
0x0009af2b: or al, 0x8b; adc cl, byte ptr [ebx + 0x144a3908]; je 0x9af40; ret; 
0x00133b9b: or al, 0x8b; adc cl, byte ptr [ecx + 0x1b810]; add byte ptr [eax], al; ret; 
0x000a6bd1: or al, 0x8b; adc eax, dword ptr [ecx]; ret 0x1089; 
0x00151335: or al, 0x8b; add byte ptr [ecx], bh; ret 0x5473; 
0x0016f1d2: or al, 0x8b; dec eax; add al, 0x50; call dword ptr [ecx + 0x10]; 
0x00120603: or al, 0x8b; dec esp; and al, 0x54; mov dword ptr [esp + 8], eax; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x0013bfdc: or al, 0x8b; inc eax; or al, 0x56; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000e9ac2: or al, 0x8b; inc ebp; aam 0x56; call eax; 
0x000297bf: or al, 0x8b; inc ebp; add dh, dh; ret; 
0x00177610: or al, 0x8b; inc ebp; cmp al, 0x57; call dword ptr [eax + 0x10]; 
0x0016f60d: or al, 0x8b; inc ebx; add al, 0x53; call dword ptr [eax + 0x10]; 
0x00175575: or al, 0x8b; inc ebx; add al, 0x56; push ebx; call dword ptr [eax + 0x24]; 
0x0017a9df: or al, 0x8b; inc ebx; or al, 0x57; call dword ptr [eax + 0x10]; 
0x000c6274: or al, 0x8b; inc ecx; or byte ptr [ebx + 0x418901c0], al; or byte ptr [edi], cl; nop; ret 0x4b8b; 
0x00179070: or al, 0x8b; inc edi; add al, 0x57; call dword ptr [eax + 0x10]; 
0x00171077: or al, 0x8b; inc edi; or byte ptr [ebp - 1], dl; jbe 0x17108b; push edi; call dword ptr [eax + 8]; 
0x0003ba15: or al, 0x8b; inc esp; and al, 0x10; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00188212: or al, 0x8b; inc esp; and al, 0x14; call eax; 
0x0013759f: or al, 0x8b; inc esp; and al, 0xc; add eax, 0x2000001; push eax; call dword ptr [ebp + 0x14]; 
0x0010ce61: or al, 0x8b; inc esp; and al, 4; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x000903ba: or al, 0x8b; inc esp; and al, 8; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x001061de: or al, 0x8b; je 0x106206; sub al, 0x83; ret; 
0x0009f992: or al, 0x8b; je 0x9f9ba; add al, 0xb8; sbb byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0009fc5a: or al, 0x8b; je 0x9fc82; dec esp; mov eax, 0x117; call dword ptr gs:[0x10]; 
0x0009fca2: or al, 0x8b; je 0x9fcca; dec esp; mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x0009c074: or al, 0x8b; jg 0x9c084; push dword ptr [eax + 4]; call dword ptr [eax]; 
0x000e8305: or al, 0x8b; jl 0xe832d; and byte ptr [ebx - 0x7cdbdb8c], cl; jmp dword ptr [ebx + 0x77]; 
0x000e97ba: or al, 0x8b; jne 0xe9792; mov eax, dword ptr [ebp - 0x3c]; push edi; call eax; 
0x000e9cca: or al, 0x8b; jne 0xe9ca2; mov eax, dword ptr [ebp - 0x3c]; push edi; call eax; 
0x0013b536: or al, 0x8b; lea esi, [edi + edi*8 - 1]; dec dword ptr [ebx - 0x9b43]; dec dword ptr [ecx - 0x11b73]; push esi; ret 0xf02; 
0x00070ff0: or al, 0x8b; mov word ptr [ebx - 0x736b4], ss; add ecx, eax; jmp ecx; 
0x00070790: or al, 0x8b; mov word ptr [ebx - 0x73734], ss; add ecx, eax; jmp ecx; 
0x00072142: or al, 0x8b; mov word ptr [ebx - 0x73834], ss; add ecx, eax; jmp ecx; 
0x000612c8: or al, 0x8b; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x00130d78: or al, 0x8b; pop esp; and al, 8; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00130848: or al, 0x8b; pop esp; and al, 8; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x0011f638: or al, 0x8b; pop esp; and al, 8; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x00121548: or al, 0x8b; pop esp; and al, 8; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x00121038: or al, 0x8b; pop esp; and al, 8; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x00114af8: or al, 0x8b; pop esp; and al, 8; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x001309e8: or al, 0x8b; pop esp; and al, 8; mov eax, 0x1ac; call dword ptr gs:[0x10]; 
0x00130758: or al, 0x8b; pop esp; and al, 8; mov eax, 0x1b0; call dword ptr gs:[0x10]; 
0x001307b8: or al, 0x8b; pop esp; and al, 8; mov eax, 0x1b1; call dword ptr gs:[0x10]; 
0x001147e8: or al, 0x8b; pop esp; and al, 8; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x00130a48: or al, 0x8b; pop esp; and al, 8; mov eax, 0x1b6; call dword ptr gs:[0x10]; 
0x001236c8: or al, 0x8b; pop esp; and al, 8; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x0012d978: or al, 0x8b; pop esp; and al, 8; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x001308c8: or al, 0x8b; pop esp; and al, 8; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x00130588: or al, 0x8b; pop esp; and al, 8; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x00129568: or al, 0x8b; pop esp; and al, 8; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x00130668: or al, 0x8b; pop esp; and al, 8; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x00130698: or al, 0x8b; pop esp; and al, 8; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x0010c188: or al, 0x8b; pop esp; and al, 8; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x001309b8: or al, 0x8b; pop esp; and al, 8; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000eab58: or al, 0x8b; pop esp; and al, 8; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x0011f098: or al, 0x8b; pop esp; and al, 8; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x00115118: or al, 0x8b; pop esp; and al, 8; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000f0ac8: or al, 0x8b; pop esp; and al, 8; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000f0a98: or al, 0x8b; pop esp; and al, 8; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x001146f8: or al, 0x8b; pop esp; and al, 8; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x00128838: or al, 0x8b; pop esp; and al, 8; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x00128758: or al, 0x8b; pop esp; and al, 8; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x00128458: or al, 0x8b; pop esp; and al, 8; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x00128488: or al, 0x8b; pop esp; and al, 8; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x00124928: or al, 0x8b; pop esp; and al, 8; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x0016f37b: or al, 0x8b; push eax; add al, 0x50; call dword ptr [edx + 0x10]; 
0x0015decd: or al, 0x8b; push edi; add al, 0xf7; ret 0xfffd; 
0x00131c18: or al, 0x8b; push esp; and al, 0x10; mov dword ptr [esp + 0x1c], eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00131bda: or al, 0x8b; push esp; and al, 0x10; mov dword ptr [esp + 0x1c], eax; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x00131b6f: or al, 0x8b; push esp; and al, 0x10; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00099b5c: or al, 0x8b; push esp; and al, 0x10; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x0010bef4: or al, 0x8b; push esp; and al, 0x24; mov ebx, dword ptr [esp + 0x20]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00092d38: or al, 0x8b; sub dword ptr [eax], 0x52000002; call eax; 
0x00170b93: or al, 0x8b; test byte ptr [ebx - 0x138], cl; mov dword ptr [esp + 0x10], edx; pop ebx; pop esi; jmp eax; 
0x0007c09c: or al, 0x8b; xchg edx, eax; cwde; add byte ptr [eax], al; add byte ptr [ecx + 0x5b082454], cl; jmp eax; 
0x00148419: or al, 0x8d; adc byte ptr [ecx + 0x5a], 0xf9; call dword ptr [eax + 0x53]; 
0x0007b7c1: or al, 0x8d; adc dword ptr [eax - 6], -1; call dword ptr [eax - 0x73]; 
0x0011f99e: or al, 0x8d; adc dword ptr [eax], -0x5d; stc; call dword ptr [eax - 0x18]; 
0x00094211: or al, 0x8d; adc dword ptr [eax], -0x7b; stc; call dword ptr [eax - 0x18]; 
0x0014b182: or al, 0x8d; adc dword ptr [ebx], 0x5b; stc; call dword ptr [eax - 0x18]; 
0x00060d20: or al, 0x8d; adc dword ptr [edx + ebx], 0; add byte ptr [eax - 0x18], dl; ret; 
0x00039e27: or al, 0x8d; adc ecx, 0x2e; stc; call dword ptr [eax - 0x18]; 
0x0005bb03: or al, 0x8d; add byte ptr [eax + 0x7a], 0xf9; call dword ptr [eax - 0x73]; 
0x000792d1: or al, 0x8d; add byte ptr [edi + edi*2], 0xf9; call dword ptr [eax - 0x73]; 
0x0008869e: or al, 0x8d; add dword ptr [ecx], 0x3f; stc; call dword ptr [eax - 0x75]; 
0x0010b691: or al, 0x8d; add dword ptr [esi + 0x48], -7; call dword ptr [eax - 0x18]; 
0x000dd3e6: or al, 0x8d; add dword ptr [esi], 0x46; stc; call dword ptr [eax - 0x18]; 
0x001572f1: or al, 0x8d; and byte ptr [eax], 0xb3; stc; call dword ptr [eax - 0x73]; 
0x0011c152: or al, 0x8d; and dword ptr [esi], 0x46; stc; call dword ptr [eax - 0x18]; 
0x0016bb48: or al, 0x8d; cmp dword ptr [ecx], 0x63; stc; call dword ptr [eax - 0x18]; 
0x00069c05: or al, 0x8d; cmp esp, 0x32; stc; call dword ptr [eax - 0x18]; 
0x000b3232: or al, 0x8d; dec edx; or al, 0xf; test esp, eax; add eax, 0x5b5f0000; ret; 
0x000eb45a: or al, 0x8d; inc ebp; add bl, byte ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x000eb343: or al, 0x8d; inc ebp; or byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00156bbd: or al, 0x8d; inc ebx; add al, 0x50; call edi; 
0x000a1b1c: or al, 0x8d; inc ecx; jmp dword ptr [ecx]; 
0x000a2315: or al, 0x8d; inc edx; jmp dword ptr [ecx]; 
0x001742db: or al, 0x8d; je 0x174305; add byte ptr [ecx], ch; ret; 
0x000a0cce: or al, 0x8d; nop; dec eax; cdq; stc; call dword ptr [edx - 0x73]; 
0x001510be: or al, 0x8d; nop; lodsb al, byte ptr [esi]; mov al, 0xf9; call dword ptr [edx - 0x73]; 
0x000248b3: or al, 0x8d; or bl, 0x59; stc; call dword ptr [eax - 0x18]; 
0x00189397: or al, 0x8d; or byte ptr [edi + 0x67], 0xf9; call dword ptr [eax - 0x18]; 
0x0011f9ee: or al, 0x8d; or dword ptr [eax - 0x5d], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0008425f: or al, 0x8d; or dword ptr [eax - 4], 0xffffffff; call dword ptr [eax - 0x73]; 
0x0009f77f: or al, 0x8d; or eax, 0xffffff89; stc; call dword ptr [eax - 0x18]; 
0x0005c51d: or al, 0x8d; pop ecx; dec byte ptr [ebx - 0x8f73]; call dword ptr [ebx - 0x75]; 
0x0014ba87: or al, 0x8d; popfd; je 0x14bae7; stc; call dword ptr [ebx - 0x18]; 
0x0014ba5b: or al, 0x8d; popfd; pop ebx; stc; call dword ptr [ebx - 0x18]; 
0x0014bad7: or al, 0x8d; popfd; wait; pop ebx; stc; call dword ptr [ebx - 0x18]; 
0x0017691c: or al, 0x8d; push ebx; dec esp; push edx; call eax; 
0x001211c9: or al, 0x8d; push ecx; call dword ptr [edx + 0x56]; 
0x0017c512: or al, 0x8d; push esp; and al, 0xc; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x0017bb62: or al, 0x8d; push esp; and al, 0xc; push edx; push ebx; call dword ptr [eax + 4]; 
0x00035d46: or al, 0x8d; sbb byte ptr [ebx + 0x2e], 0xf9; call dword ptr [eax - 0x18]; 
0x0003eeca: or al, 0x8d; sbb dword ptr [eax], 0x76; stc; call dword ptr [eax - 0x18]; 
0x00156ca1: or al, 0x8d; sbb dword ptr [edi], 0x5e; stc; call dword ptr [eax - 0x73]; 
0x0015d590: or al, 0x8d; sbb esp, -0x30; int1; call dword ptr [eax + 0x6a]; 
0x00185ab8: or al, 0x8d; sbb esp, -0x46; stc; call dword ptr [eax - 0x18]; 
0x0010ef62: or al, 0x8d; sbb esp, 0x2c; stc; call dword ptr [eax - 0x18]; 
0x00151fcc: or al, 0x8d; sub byte ptr [eax - 0x50], 0xf9; call dword ptr [eax + 0x68]; 
0x00151e93: or al, 0x8d; sub byte ptr [eax - 0x50], 0xf9; call dword ptr [eax - 0x73]; 
0x000eadf2: or al, 0x8d; sub dword ptr [ecx + 0x2c], -7; call dword ptr [eax - 0x18]; 
0x000eb862: or al, 0x8d; sub ecx, 0x46; stc; call dword ptr [eax - 0x18]; 
0x0002806a: or al, 0x8d; test dword ptr [eax + 0x29], edi; stc; call dword ptr [edi - 1]; 
0x00069936: or al, 0x8d; test dword ptr [eax - 0x76000005], edi; lea esp, [edx + edi*8 - 1]; dec dword ptr [ecx - 0x5976b]; call dword ptr [eax - 0x18]; 
0x0012c012: or al, 0x8d; test dword ptr [ebx + edi*8 - 1], edi; dec dword ptr [ecx - 0x4b37b]; call dword ptr [eax - 0x73]; 
0x0002515f: or al, 0x8d; test dword ptr [edi + ebp*2 - 7], ebx; call dword ptr [eax - 0x18]; 
0x00169b98: or al, 0x8d; test dword ptr [edx - 7], edi; call dword ptr [eax - 0x18]; 
0x000a18de: or al, 0x8d; xchg ah, ch; sbb ah, dh; call dword ptr [eax + 0x57]; 
0x000a1896: or al, 0x8d; xchg ah, ch; sbb al, 0xe6; call dword ptr [eax + 0x57]; 
0x001414cf: or al, 0x8d; xchg ah, dh; stosb byte ptr es:[edi], al; stc; call dword ptr [eax - 0x73]; 
0x0014b75a: or al, 0x8d; xchg byte ptr [eax - 0x52], cl; stc; call dword ptr [eax - 0x73]; 
0x0013ee82: or al, 0x8d; xchg byte ptr [eax], cl; stosb byte ptr es:[edi], al; stc; call dword ptr [eax - 0x73]; 
0x0014b6dc: or al, 0x8d; xchg byte ptr [eax], dl; scasb al, byte ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x000a1860: or al, 0x8d; xchg byte ptr [ebp + ebx - 0x1a], cl; call dword ptr [eax + 0x57]; 
0x0002506b: or al, 0x8d; xchg byte ptr [edi + ebp*2 - 7], bl; call dword ptr [eax - 0x18]; 
0x000a18a8: or al, 0x8d; xchg byte ptr [edx + ebx - 0x1a], ch; call dword ptr [eax + 0x57]; 
0x00123a32: or al, 0x8d; xchg byte ptr [esi], ah; inc esi; stc; call dword ptr [eax - 0x18]; 
0x0009e20a: or al, 0x8d; xchg dword ptr [eax - 0x77], ebp; stc; call dword ptr [eax - 0x73]; 
0x00092e9a: or al, 0x8d; xchg dword ptr [eax - 0x7c], edx; stc; call dword ptr [eax - 0x18]; 
0x0015319c: or al, 0x8d; xchg dword ptr [ebx + eax*4 - 0x17af0007], edi; cmpsd dword ptr [esi], dword ptr es:[edi]; cmp ebx, esi; jmp dword ptr [esi - 0x70]; 
0x0018c4fa: or al, 0x8d; xchg dword ptr [ebx + eax*4 - 0x17af0007], edi; dec ecx; cmpsb byte ptr [esi], byte ptr es:[edi]; out dx, eax; jmp dword ptr [esi - 0x70]; 
0x00162de9: or al, 0x8d; xchg ebx, eax; sub al, 0xa2; add byte ptr [eax], al; push edx; call eax; 
0x00086adc: or al, 0x8d; xchg ebx, esi; stc; call dword ptr [eax + 0x56]; 
0x000eb312: or al, 0x8d; xchg ecx, ebp; inc esi; stc; call dword ptr [eax - 0x18]; 
0x0017edc5: or al, 0x8d; xchg edi, edi; pop ebx; stc; call dword ptr [eax - 0x18]; 
0x0007940a: or al, 0x8d; xor byte ptr [edi + edi*2], 0xf9; call dword ptr [eax - 0x73]; 
0x0012576f: or al, 0x8d; xor byte ptr [esp], 0xf9; call dword ptr [eax - 0x73]; 
0x0008751f: or al, 0x8d; xor dword ptr [eax - 0x7d], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000341de: or al, 0x8d; xor dword ptr [eax], 0x2e; stc; call dword ptr [eax - 1]; 
0x0013bf85: or al, 0x90; jmp edx; 
0x0003c4f9: or al, 0x90; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x000b9243: or al, 0x91; jmp ecx; 
0x000c0921: or al, 0x93; or al, 0; add ecx, 0x10c6cf; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000a48d2: or al, 0x95; stc; call dword ptr [eax - 0x18]; 
0x000b936a: or al, 0x99; jmp ecx; 
0x000d8478: or al, 0x9e; stc; call dword ptr [eax - 0x73]; 
0x001ac463: or al, 0xa8; add dword ptr [ebp + 0x18], esi; lea eax, [ecx + 4]; ret; 
0x00033a8a: or al, 0xb0; mov eax, dword ptr [ebx + esi*4 - 0x814]; test eax, eax; je 0x33a99; call eax; 
0x00152f0b: or al, 0xb1; stc; call dword ptr [eax - 0x18]; 
0x00153f3f: or al, 0xb2; stc; call dword ptr [eax - 0x73]; 
0x00122e7d: or al, 0xb4; jg 0x122e80; inc dword ptr [ebx + 0x508930ca]; or byte ptr [edx + 0x100], bh; mov word ptr [eax + 0x16], dx; ret; 
0x001a819f: or al, 0xb8; add byte ptr [eax], al; add byte ptr [eax], al; jne 0x1a81b0; pop ebx; ret; 
0x0017ca3f: or al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [ecx + 0x14], edx; ret; 
0x00176999: or al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; ret; 
0x0010eccf: or al, 0xb8; add eax, 0x5b000000; pop esi; pop edi; pop ebp; ret; 
0x000fb693: or al, 0xb8; fild dword ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00126a71: or al, 0xb8; in eax, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001306f1: or al, 0xb8; inc dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012f1e0: or al, 0xb8; js 0x12f1e5; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012ee6d: or al, 0xb8; lds eax, ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012f0ed: or al, 0xb8; les eax, ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00098834: or al, 0xb8; lock add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0011f3fd: or al, 0xb8; mov word ptr [eax], es; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000e7614: or al, 0xb8; or al, byte ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e7d96: or al, 0xb8; or eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00128431: or al, 0xb8; out 0, al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00124901: or al, 0xb8; out 0, eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001304ad: or al, 0xb8; ret; 
0x00130ab1: or al, 0xb8; test al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001208b1: or al, 0xb8; xor dword ptr [ecx], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0013705a: or al, 0xb; test byte ptr [ecx + edx*2 + 1], 0x40; cmove edx, eax; mov eax, edx; pop ebx; ret; 
0x00092538: or al, 0xba; add dword ptr [eax], eax; add byte ptr [eax], al; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000a9450: or al, 0xbd; idiv bh; cmovne eax, edx; ret; 
0x00061694: or al, 0xc2; push eax; push dword ptr [esp + 0x1c]; call 0x11f760; add esp, 0x1c; ret; 
0x0011c12a: or al, 0xc3; in eax, dx; call dword ptr [edx - 0x73]; 
0x0015e464: or al, 0xd1; int1; call dword ptr [edx + 0x6a]; 
0x0003c198: or al, 0xd9; add al, 0x24; mov dword ptr [edx], eax; add esp, 4; ret; 
0x0003c1d7: or al, 0xd9; sbb al, 0x24; fld dword ptr [esp]; mov dword ptr [edx], eax; add esp, 4; ret; 
0x0003bdca: or al, 0xdd; inc esp; and al, 4; mov dword ptr [eax], ecx; ret; 
0x0013d62e: or al, 0xe0; cmc; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x0008f98e: or al, 0xe8; fcom qword ptr [eax]; push es; add byte ptr [ecx], bh; ret; 
0x0003a2f0: or al, 0xe8; push cs; add byte ptr [ebx + 0x478920c4], al; adc al, 0x89; ret; 
0x0017d263: or al, 0xe8; xlatb; jns 0x17d258; inc dword ptr [ebx - 0x2f08e33c]; shr eax, 0x1f; ret; 
0x0013e183: or al, 0xe9; cmpsd dword ptr [esi], dword ptr es:[edi]; jg 0x13e17a; jmp dword ptr [esi - 0x70]; 
0x0014563b: or al, 0xe9; dec edi; idiv bh; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; ret; 
0x0013e1e3: or al, 0xe9; idiv dword ptr [edx - 0xc]; jmp dword ptr [esi - 0x70]; 
0x0013d1cf: or al, 0xe9; mov ebx, 0xe8fffe83; push ss; idiv bh; jmp dword ptr [esi - 0x70]; 
0x0013e153: or al, 0xe9; push edi; ja 0x13e14c; jmp dword ptr [esi - 0x70]; 
0x0013e123: or al, 0xe9; push edi; jne 0x13e11c; jmp dword ptr [esi - 0x70]; 
0x001b67d4: or al, 0xe9; ret 0xffdc; 
0x0006ff15: or al, 0xe9; ret 0xfff5; 
0x000fe859: or al, 0xe9; ret 0xfffb; 
0x00177a1d: or al, 0xe9; ret 0xfffc; 
0x000f5a77: or al, 0xe9; ret; 
0x0013d12f: or al, 0xe9; sub eax, dword ptr [ecx - 0x49170002]; idiv bh; jmp dword ptr [esi - 0x70]; 
0x0013e947: or al, 0xe9; xor ebx, dword ptr [esi - 7]; dec dword ptr [ebp - 0x6417ff8a]; fdivp st(7); jmp dword ptr [esi - 0x70]; 
0x001a62bf: or al, 0xe; sub eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x001a5fcb: or al, 0xe; sub eax, ecx; pop esi; pop edi; ret; 
0x000a407d: or al, 0xeb; jnp 0x599550ce; add al, 0xf6; ret; 
0x00060d1b: or al, 0xeb; mov dword ptr [0x8d0cec83], eax; adc dword ptr [edx + ebx], 0; add byte ptr [eax - 0x18], dl; ret; 
0x000401c1: or al, 0xeb; ret 0x748d; 
0x001828c1: or al, 0xeb; ret 0x838b; 
0x001689d1: or al, 0xeb; ret; 
0x001524c6: or al, 0xed; dec dword ptr [ecx - 0x76e7dbbc]; ret; 
0x0005c189: or al, 0xf6; ret 0x7401; 
0x0005e7e3: or al, 0xf6; ret 0xf01; 
0x000a5589: or al, 0xf6; ret 0xf02; 
0x0013a993: or al, 0xf6; ret 0xf04; 
0x0005ee79: or al, 0xf6; ret 0xf40; 
0x00055b5f: or al, 0xf7; ret 0; 
0x001aba44: or al, 0xf; and ch, 0; add byte ptr [eax], al; lea eax, [eax + 0xb]; pop edi; ret; 
0x0009a54f: or al, 0xf; inc edi; ret 0x948b; 
0x0010e6f8: or al, 0xf; inc esp; mov edx, dword ptr [esp + 0x88]; mov eax, 0x72; mov ebx, dword ptr [esp + 0x80]; call dword ptr gs:[0x10]; 
0x0009c308: or al, 0xf; mov dh, 0xc0; lea eax, [eax + eax + 2]; ret; 
0x0005344a: or al, 0xf; mov dh, 0xc0; ret; 
0x000894a6: or al, 0xf; test bl, dl; add eax, dword ptr [eax]; add byte ptr [ecx], bh; ret 0x820f; 
0x000d9695: or al, 0xf; test dword ptr [ecx + eax], eax; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x000b95e3: or al, 0xf; test dword ptr [esi], esi; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000bac46: or al, 0xf; test ebx, edx; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b3235: or al, 0xf; test esp, eax; add eax, 0x5b5f0000; ret; 
0x0013793d: or al, 0xf; xchg ebp, eax; ret 0x44c7; 
0x0009c2f0: or al, 0xf; xchg esp, eax; ror byte ptr [edi], 0xb6; rol byte ptr [ebx - 0x3b7cfd40], 0xc; ret; 
0x001aaa14: or al, 0xf; xor ch, 0; add byte ptr [eax], al; lea eax, [edi + 0xb]; pop edi; ret; 
0x0016ec15: or al, 0xfd; bnd call dword ptr [eax - 0x73]; 
0x00090839: or al, 0xfe; add esp, 8; pop ebx; ret; 
0x00198f5d: or al, 0xff; inc dword ptr [ecx + 0x42c10c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00090ede: or al, 0xff; jae 0x90ee6; call dword ptr [ebx]; 
0x00098125: or al, 0xff; jae 0x9812d; call dword ptr [ebx]; 
0x00147f14: or al, 0xff; je 0x147f3c; and al, ch; ret 0xa6; 
0x00162ec8: or al, 0xff; je 0x162ef0; pop eax; push dword ptr [esp + 0x58]; push esi; call edi; 
0x00024e79: or al, 0xff; je 0x24ea1; inc eax; push dword ptr [esp + 0x40]; call ecx; 
0x0003d681: or al, 0xff; je 0x3d6a9; sbb al, ch; cmc; syscall; 
0x0008e33e: or al, 0xff; je 0x8e366; sub al, 0x52; push ecx; push edi; call eax; 
0x0002440d: or al, 0xff; jne 0x243dd; call dword ptr [ebp - 0x38]; 
0x0009c077: or al, 0xff; jo 0x9c07f; call dword ptr [eax]; 
0x00160a49: or al, 0xff; mov bl, 0xb4; mov eax, dword ptr [0x4be80000]; daa; in al, dx; jmp dword ptr [ebp - 0x75]; 
0x00096c98: or al, 1; add byte ptr [eax], al; add byte ptr [ebp + 0xf0a0054], cl; mov edi, 0x2ac85; add byte ptr [ecx], bh; ret 0x4f0f; 
0x000a9714: or al, 1; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0xc072; 
0x000a97d1: or al, 1; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0xc372; 
0x0014b106: or al, 1; add byte ptr [eax], al; mov eax, dword ptr [edx + eax]; ret; 
0x0010cd2a: or al, 1; add byte ptr [eax], al; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x000c3107: or al, 1; add byte ptr [eax], al; ret; 
0x0014ae57: or al, 1; add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x14ae8d; add esp, 0x11c; ret; 
0x0010ce68: or al, 1; add byte ptr [eax], al; xor eax, eax; ret; 
0x0017cebb: or al, 1; jle 0x17ced3; pop ebx; pop esi; pop edi; ret; 
0x0009a73e: or al, 1; pop ebx; pop esi; pop edi; ret; 
0x0017cdfb: or al, 1; push eax; adc al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x000a4843: or al, 1; ret 0x448b; 
0x00083509: or al, 1; ret 0xc101; 
0x00047baf: or al, 1; ret 0xd389; 
0x001401f4: or al, 1; ret 0xf983; 
0x00116988: or al, 1; ret 0xfa81; 
0x0002f37c: or al, 1; ret; 
0x0019b092: or al, 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001375a3: or al, 5; add dword ptr [eax], eax; add byte ptr [edx], al; push eax; call dword ptr [ebp + 0x14]; 
0x001a6876: or al, 7; add byte ptr [eax], al; pop ebx; ret; 
0x000c27ac: or al, al; je 0xc27b4; mov byte ptr [ecx + edx + 3], ah; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000a35f5: or al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; adc eax, -0x6f; stc; call dword ptr [eax - 0x18]; 
0x000a35d1: or al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; sub dword ptr [eax], -0x6f; stc; call dword ptr [eax - 0x18]; 
0x00069a01: or al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [edx], ebx; xor edi, ecx; call dword ptr [eax - 0x18]; 
0x0015f721: or al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg edx, esp; pop edi; stc; call dword ptr [eax - 0x18]; 
0x000eab42: or al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000cd762: or al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000408a4: or al, byte ptr [eax]; add byte ptr [eax], al; mov dword ptr [edx], ecx; ret; 
0x00131967: or al, byte ptr [eax]; add byte ptr [eax], al; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00121501: or al, byte ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00170722: or al, byte ptr [eax]; add byte ptr [eax], al; pop ebx; ret; 
0x00127125: or al, byte ptr [eax]; add byte ptr [ebp - 0x6b03e7d], cl; call dword ptr [ecx + 0x51]; 
0x0015dfeb: or al, byte ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x001a512e: or al, byte ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00057453: or al, byte ptr [eax]; add byte ptr [ebx - 0x36477b], cl; jmp dword ptr [ebp - 0x75]; 
0x0006f4aa: or al, byte ptr [eax]; add byte ptr [ecx - 0x7ccfdbac], cl; ret 0x8904; 
0x000baabd: or al, byte ptr [eax]; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0006ef59: or al, byte ptr [eax]; add byte ptr [edi], cl; mov esi, 0x89c68900; ret; 
0x00147554: or al, byte ptr [eax]; add byte ptr [esi - 0x18], dl; ret; 
0x0009283d: or al, byte ptr [eax]; nop; endbr32; xor eax, eax; ret; 
0x0009c29a: or al, byte ptr [eax]; nop; nop; endbr32; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0009a57a: or al, byte ptr [eax]; nop; nop; endbr32; xor eax, eax; ret; 
0x001904c8: or al, byte ptr [eax]; push ebx; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x001227fb: or al, byte ptr [ebp - 0x74f78737]; inc edx; or byte ptr [0x100f], ah; ret; 
0x00080d8d: or al, byte ptr [ebx + 0x5e5b04c4]; ret; 
0x000a4a8d: or al, byte ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0006dfa5: or al, byte ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x000f08ab: or al, byte ptr [ebx + 0x5e5b24c4]; ret; 
0x00163045: or al, byte ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x000a7606: or al, byte ptr [ebx - 0xf76eb3c]; pop ebx; pop esi; ret 4; 
0x0014aa2b: or al, byte ptr [ecx + 0x110c4]; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0014a74c: or al, byte ptr [ecx + 0x810c4]; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0009f2e2: or al, byte ptr [ecx + 0x90c4]; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0012dc2a: or al, byte ptr [ecx + 0xe0c4]; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0009d5c0: or al, byte ptr [ecx - 7]; call dword ptr [eax - 0x18]; 
0x000e7616: or al, byte ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001aadc2: or al, byte ptr [ecx]; add byte ptr [eax], al; test al, 2; jne 0x1aaec0; mov eax, ecx; ret; 
0x00188cba: or al, ch; push eax; out 0xff, al; dec dword ptr [ebx - 0x76f7dbb4]; ret 0xd2e9; 
0x001767e7: or al, ch; ret; 
0x0013f84c: or al, dh; call dword ptr [eax - 0x73]; 
0x0019444c: or bh, ah; mov eax, edx; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x0019412c: or bh, ah; mov eax, edx; pop ebx; ret; 
0x0017a2a1: or bh, al; add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebp - 0xc49e37d], cl; call dword ptr [eax - 0x73]; 
0x001748e1: or bh, al; add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebp - 0xca3737d], cl; call dword ptr [eax - 0x73]; 
0x0017905c: or bh, al; add dword ptr [esi], ecx; add byte ptr [eax], al; add byte ptr [ebx + 0x575104c1], al; call dword ptr [eax + 8]; 
0x0003297d: or bh, bh; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0019937e: or bh, bh; inc dword ptr [ecx + 0x4272fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00199185: or bh, bh; inc dword ptr [ecx + 0x42928c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00131dc2: or bh, bh; je 0x131d7b; add byte ptr [ebx - 0x7cacfe3a], al; ret; 
0x0016ee43: or bh, bh; je 0x16ee6b; sbb al, 0x56; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00173f03: or bh, bh; je 0x173f2b; cmp byte ptr [esi - 0x75], dl; inc esp; and al, 0x3c; call eax; 
0x00176b78: or bh, bh; je 0x176ba0; cmp byte ptr [esi - 0x75], dl; inc esp; and al, 0x3c; call eax; 
0x001775f7: or bh, bh; je 0x17761f; adc byte ptr [edi - 0x75], dl; inc esp; and al, 0x28; call eax; 
0x00179c65: or bh, bh; je 0x179c8d; adc al, 0x53; call dword ptr [eax]; 
0x00179e64: or bh, bh; je 0x179e8c; sbb al, 0x53; call dword ptr [eax + 0xc]; 
0x0018855d: or bh, bh; je 0x188585; or al, 0x8b; inc esp; and al, 0x14; call eax; 
0x0008e23d: or bh, bh; je 0x8e265; xor byte ptr [edx + 0x51], dl; call eax; 
0x000e79db: or bh, bh; leave; lcall 0, 0xaa870f3b; add byte ptr [eax + 0x194], bh; call dword ptr gs:[0x10]; 
0x00098351: or bh, bh; leave; lcall 0, 0xc4870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x00098f67: or bh, bh; leave; lcall 0, 0xc6870f3b; add byte ptr [ebx - 0x5e9ae3a9], cl; push 0x39000000; ret 0x6974; 
0x00098ce4: or bh, bh; leave; lcall 1, 0x39870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x00041286: or bh, bh; push dword ptr ss:[edi]; mov eax, dword ptr [esp + 0x10]; call eax; 
0x0009a5be: or bh, byte ptr [eax + 0x10]; cmove eax, ecx; ret; 
0x00170b85: or bh, byte ptr [eax + 2]; pop ebx; pop esi; ret; 
0x000fb2b7: or bh, byte ptr [eax - 1]; ret; 
0x000d9841: or bh, byte ptr [ecx + 1]; pop ebx; pop esi; mov eax, ecx; ret; 
0x0017b512: or bh, byte ptr [ecx - 0xc]; call ecx; 
0x0009d6cb: or bh, byte ptr [edx + esi*8 - 0x46]; add byte ptr [eax], al; add byte ptr [eax], al; cmovne eax, edx; ret; 
0x00155d1f: or bh, cl; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x0018babb: or bh, dh; ret 0x202; 
0x00122826: or bh, dh; ret 0xeff0; 
0x0003c1ff: or bh, dh; ret 0xffff; 
0x00094846: or bh, dh; ror byte ptr [ebp + 0x6c504], 1; add byte ptr [eax], al; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000248b5: or bl, 0x59; stc; call dword ptr [eax - 0x18]; 
0x00090806: or bl, bh; xor eax, eax; ret; 
0x00152693: or bl, byte ptr [ebp - 7]; call dword ptr [eax - 0x18]; 
0x0012384d: or bl, byte ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x0012fb75: or bl, byte ptr [ebx + 0x5e]; pop edi; ret; 
0x00087632: or bl, byte ptr [ebx + 0x5e]; ret; 
0x0012f02d: or bl, byte ptr [ebx - 0x77]; rcr byte ptr [esi + 0x5f], 1; ret; 
0x0009425d: or bl, byte ptr [ebx - 9]; fcomp dword ptr [esi + 0x5f]; ret; 
0x000bb0f2: or bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x0019b740: or bl, byte ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x000fec39: or bl, ch; jge 0x831012b5; ret; 
0x00188df2: or bl, ch; xchg al, ch; push es; dec edi; sti; jmp dword ptr [esi - 0x70]; 
0x00196a37: or bl, dh; movd dword ptr [eax], mm0; movq qword ptr [edx], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000605aa: or byte ptr [0x100], ah; or eax, 7; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x001227da: or byte ptr [0x100f], ah; ret; 
0x000b941e: or byte ptr [0x1fc18100], cl; cmp dword ptr [ecx], edx; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b93fe: or byte ptr [0x3fc18100], cl; cmp dword ptr [ecx], edx; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b93e1: or byte ptr [0x5cc18100], cl; cmp dword ptr [ecx], edx; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b9342: or byte ptr [0x7bc18100], cl; cmp dword ptr [ecx], edx; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b93b4: or byte ptr [0x89c18100], cl; cmp dword ptr [ecx], edx; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b939d: or byte ptr [0xa0c18100], cl; cmp dword ptr [ecx], edx; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b9382: or byte ptr [0xbbc18100], cl; cmp dword ptr [ecx], edx; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000c4c54: or byte ptr [0xc4830007], cl; adc byte ptr [ebp + 0x29d975db], al; ret; 
0x000b9360: or byte ptr [0xddc18100], cl; cmp dword ptr [ecx], edx; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00090873: or byte ptr [eax + 0x1000000], 0x83; les eax, ptr [esi + ebx*2]; pop edi; ret; 
0x000e7bb6: or byte ptr [eax + 0x108], bh; call dword ptr gs:[0x10]; 
0x00130d7c: or byte ptr [eax + 0x10e], bh; call dword ptr gs:[0x10]; 
0x0010e8fa: or byte ptr [eax + 0x11c], bh; call dword ptr gs:[0x10]; 
0x0013084c: or byte ptr [eax + 0x124], bh; call dword ptr gs:[0x10]; 
0x0011f7e3: or byte ptr [eax + 0x127], bh; call dword ptr gs:[0x10]; 
0x0011f63c: or byte ptr [eax + 0x128], bh; call dword ptr gs:[0x10]; 
0x0012154c: or byte ptr [eax + 0x12d], bh; call dword ptr gs:[0x10]; 
0x0012103c: or byte ptr [eax + 0x130], bh; call dword ptr gs:[0x10]; 
0x0012060b: or byte ptr [eax + 0x135], bh; call dword ptr gs:[0x10]; 
0x001145b3: or byte ptr [eax + 0x13e], bh; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00114afc: or byte ptr [eax + 0x14a], bh; call dword ptr gs:[0x10]; 
0x000908f7: or byte ptr [eax + 0x16], bh; cmp edx, 0x3fff; ja 0x90910; ret; 
0x000971f2: or byte ptr [eax + 0x16], bh; pop ebx; ret; 
0x00120651: or byte ptr [eax + 0x19e], bh; call dword ptr gs:[0x10]; 
0x00133437: or byte ptr [eax + 0x1a4], bh; call dword ptr gs:[0x10]; 
0x00129fb3: or byte ptr [eax + 0x1a], bh; call dword ptr gs:[0x10]; 
0x001309ec: or byte ptr [eax + 0x1ac], bh; call dword ptr gs:[0x10]; 
0x0013075c: or byte ptr [eax + 0x1b0], bh; call dword ptr gs:[0x10]; 
0x001307bc: or byte ptr [eax + 0x1b1], bh; call dword ptr gs:[0x10]; 
0x001147ec: or byte ptr [eax + 0x1b4], bh; call dword ptr gs:[0x10]; 
0x00130a4c: or byte ptr [eax + 0x1b6], bh; call dword ptr gs:[0x10]; 
0x000bd645: or byte ptr [eax + 0x448b0270], cl; and al, 8; pop esi; ret; 
0x0009fdf3: or byte ptr [eax + 0x47752f3b], al; add ebx, 1; mov eax, 0x116; call dword ptr gs:[0x10]; 
0x0007b2a9: or byte ptr [eax + 0x56], dl; call dword ptr [ebx + 0x48]; 
0x00087fe5: or byte ptr [eax + 0x56], dl; call dword ptr [edi + 0x48]; 
0x000956c7: or byte ptr [eax + 0x5e5bc031], dl; pop edi; ret; 
0x001236cc: or byte ptr [eax + 0x61], bh; call dword ptr gs:[0x10]; 
0x0012d97c: or byte ptr [eax + 0x65], bh; call dword ptr gs:[0x10]; 
0x00131454: or byte ptr [eax + 0x66], bh; call dword ptr gs:[0x10]; 
0x001308cc: or byte ptr [eax + 0x67], bh; call dword ptr gs:[0x10]; 
0x0013291d: or byte ptr [eax + 0x75], bh; call dword ptr gs:[0x10]; 
0x00192a09: or byte ptr [eax + 0x75], bh; mov ebx, 3; call dword ptr gs:[0x10]; 
0x0013058c: or byte ptr [eax + 0x7b], bh; call dword ptr gs:[0x10]; 
0x0012956c: or byte ptr [eax + 0x7d], bh; call dword ptr gs:[0x10]; 
0x0013066c: or byte ptr [eax + 0x7f], bh; call dword ptr gs:[0x10]; 
0x0013069c: or byte ptr [eax + 0x81], bh; call dword ptr gs:[0x10]; 
0x00148aac: or byte ptr [eax + 0x92], bh; mov dword ptr [ebx + 0xc], 1; add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x0010c18c: or byte ptr [eax + 0x9c], bh; call dword ptr gs:[0x10]; 
0x001309bc: or byte ptr [eax + 0xa9], bh; call dword ptr gs:[0x10]; 
0x000eab5c: or byte ptr [eax + 0xb], bh; call dword ptr gs:[0x10]; 
0x0011f09c: or byte ptr [eax + 0xc6], bh; call dword ptr gs:[0x10]; 
0x0011511c: or byte ptr [eax + 0xcf], bh; call dword ptr gs:[0x10]; 
0x000f0acc: or byte ptr [eax + 0xd1], bh; call dword ptr gs:[0x10]; 
0x000f0a9c: or byte ptr [eax + 0xd3], bh; call dword ptr gs:[0x10]; 
0x001146fc: or byte ptr [eax + 0xd4], bh; call dword ptr gs:[0x10]; 
0x0012883c: or byte ptr [eax + 0xda], bh; call dword ptr gs:[0x10]; 
0x0012875c: or byte ptr [eax + 0xdb], bh; call dword ptr gs:[0x10]; 
0x001154b0: or byte ptr [eax + 0xdd], bh; call dword ptr gs:[0x10]; 
0x0012845c: or byte ptr [eax + 0xe8], bh; call dword ptr gs:[0x10]; 
0x0012848c: or byte ptr [eax + 0xe9], bh; call dword ptr gs:[0x10]; 
0x0012492c: or byte ptr [eax + 0xea], bh; call dword ptr gs:[0x10]; 
0x00141d6b: or byte ptr [eax + 0xf000000], al; inc edx; ret 0x2ec3; 
0x00099928: or byte ptr [eax + 0xf0], bh; mov edx, 0x7fffffff; xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000998fe: or byte ptr [eax + 0xf0], bh; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000951b9: or byte ptr [eax + 0xf0], bh; not ecx; and ecx, 0x80; call dword ptr gs:[0x10]; 
0x000c0b29: or byte ptr [eax + 0xf660870], cl; adc eax, dword ptr [eax]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00129339: or byte ptr [eax + 1], bh; pop ebx; ret; 
0x000fd48d: or byte ptr [eax + ecx - 0x58], dh; add dword ptr [edi], ecx; test dword ptr [eax - 0xa000000], ecx; ret 0x7420; 
0x001795a5: or byte ptr [eax + edi*2 - 0x7d], dh; ret 0x8901; 
0x0013d5b7: or byte ptr [eax + edx*2], 0xf5; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x00118ed7: or byte ptr [eax - 0x18], dl; ret 0xf0a2; 
0x000b8e8c: or byte ptr [eax - 0x2f76f7be], cl; ret; 
0x00157e41: or byte ptr [eax - 0x72b00000], ah; sub dword ptr [edx + edx*4], -0xf; call dword ptr [eax - 0x18]; 
0x001244a9: or byte ptr [eax - 0x73], dl; and dword ptr [ecx + eax*8], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0009b36c: or byte ptr [eax - 0x73], dl; or dword ptr [ecx + eax*8], 0xffffffe5; call dword ptr [eax - 1]; 
0x0011426d: or byte ptr [eax - 0x73], dl; sub esp, 0x52; in eax, dx; call dword ptr [eax + 0x56]; 
0x00115063: or byte ptr [eax - 0x73], dl; xchg esp, ebx; sub al, 0xf9; call dword ptr [eax + 0x56]; 
0x000c01d0: or byte ptr [eax - 0x776ef86], cl; pop ebx; pop edi; ret; 
0x000bfedd: or byte ptr [eax - 0x776f7be], cl; pop ebx; pop edi; ret; 
0x000b8d2c: or byte ptr [eax - 0x776f7be], cl; pop edi; ret; 
0x000fd48f: or byte ptr [eax - 0x777af0ff], ch; add byte ptr [eax], al; add dh, dh; ret 0x7420; 
0x0005bd02: or byte ptr [eax - 1], bh; pop ebx; ret; 
0x000a6e02: or byte ptr [eax - 1], dl; jae 0xa6e2b; call edx; 
0x000c3101: or byte ptr [eax], 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1c8]; ret; 
0x000c3111: or byte ptr [eax], 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1cc]; ret; 
0x000c3121: or byte ptr [eax], 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1d0]; ret; 
0x000c3131: or byte ptr [eax], 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1d4]; ret; 
0x000c3141: or byte ptr [eax], 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1d8]; ret; 
0x000c3151: or byte ptr [eax], 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1dc]; ret; 
0x000c3161: or byte ptr [eax], 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1e0]; ret; 
0x000c3171: or byte ptr [eax], 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1e4]; ret; 
0x000c3181: or byte ptr [eax], 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1e8]; ret; 
0x000c3191: or byte ptr [eax], 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1ec]; ret; 
0x000c31a1: or byte ptr [eax], 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x000c30f1: or byte ptr [eax], 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x0013473f: or byte ptr [eax], 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x20]; ret; 
0x00125244: or byte ptr [eax], 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x20]; test eax, eax; cmove eax, edx; ret; 
0x00125760: or byte ptr [eax], 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0xc]; test eax, eax; je 0x12576d; ret; 
0x0019a360: or byte ptr [eax], ah; pop edi; call 0x189c1d; add ebx, 0x41748; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019a200: or byte ptr [eax], ah; pop edi; call 0x189c1d; add ebx, 0x418a8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019a0a0: or byte ptr [eax], ah; pop edi; call 0x189c1d; add ebx, 0x41a08; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199f40: or byte ptr [eax], ah; pop edi; call 0x189c1d; add ebx, 0x41b68; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199de0: or byte ptr [eax], ah; pop edi; call 0x189c1d; add ebx, 0x41cc8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199c80: or byte ptr [eax], ah; pop edi; call 0x189c1d; add ebx, 0x41e28; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199860: or byte ptr [eax], ah; pop edi; call 0x189c1d; add ebx, 0x42248; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199700: or byte ptr [eax], ah; pop edi; call 0x189c1d; add ebx, 0x423a8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001995a0: or byte ptr [eax], ah; pop edi; call 0x189c1d; add ebx, 0x42508; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199440: or byte ptr [eax], ah; pop edi; call 0x189c1d; add ebx, 0x42668; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001992e0: or byte ptr [eax], ah; pop edi; call 0x189c1d; add ebx, 0x427c8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198260: or byte ptr [eax], ah; pop edi; call 0x189c1d; add ebx, 0x435c8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198110: or byte ptr [eax], ah; pop edi; call 0x189c1d; add ebx, 0x43718; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197e70: or byte ptr [eax], ah; pop edi; call 0x189c1d; add ebx, 0x439b8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197d20: or byte ptr [eax], ah; pop edi; call 0x189c1d; add ebx, 0x43b08; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197930: or byte ptr [eax], ah; pop edi; call 0x189c1d; add ebx, 0x43ef8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001977e0: or byte ptr [eax], ah; pop edi; call 0x189c1d; add ebx, 0x44048; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197540: or byte ptr [eax], ah; pop edi; call 0x189c1d; add ebx, 0x442e8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001973f0: or byte ptr [eax], ah; pop edi; call 0x189c1d; add ebx, 0x44438; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001972a0: or byte ptr [eax], ah; pop edi; call 0x189c1d; add ebx, 0x44588; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197150: or byte ptr [eax], ah; pop edi; call 0x189c1d; add ebx, 0x446d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197000: or byte ptr [eax], ah; pop edi; call 0x189c1d; add ebx, 0x44828; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196260: or byte ptr [eax], ah; pop edi; call 0x189c1d; add ebx, 0x45348; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196110: or byte ptr [eax], ah; pop edi; call 0x189c1d; add ebx, 0x45498; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195d20: or byte ptr [eax], ah; pop edi; call 0x189c1d; add ebx, 0x45888; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195bd0: or byte ptr [eax], ah; pop edi; call 0x189c1d; add ebx, 0x459d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195a80: or byte ptr [eax], ah; pop edi; call 0x189c1d; add ebx, 0x45b28; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195930: or byte ptr [eax], ah; pop edi; call 0x189c1d; add ebx, 0x45c78; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001957e0: or byte ptr [eax], ah; pop edi; call 0x189c1d; add ebx, 0x45dc8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195690: or byte ptr [eax], ah; pop edi; call 0x189c1d; add ebx, 0x45f18; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195540: or byte ptr [eax], ah; pop edi; call 0x189c1d; add ebx, 0x46068; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001953f0: or byte ptr [eax], ah; pop edi; call 0x189c1d; add ebx, 0x461b8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001952a0: or byte ptr [eax], ah; pop edi; call 0x189c1d; add ebx, 0x46308; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195150: or byte ptr [eax], ah; pop edi; call 0x189c1d; add ebx, 0x46458; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195000: or byte ptr [eax], ah; pop edi; call 0x189c1d; add ebx, 0x465a8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000c1855: or byte ptr [eax], ah; ret; 
0x00023008: or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; jmp dword ptr [ebx + 0xc]; 
0x0011719b: or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp - 0x6f7bf00a], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x7ce7dbbc], cl; ret; 
0x00185d05: or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x1102454], cl; ret 0xcdb8; 
0x0014ab73: or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000910a1: or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; call dword ptr gs:[0x10]; 
0x0017a9bc: or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edx], ch; push edi; call dword ptr [eax + 0x14]; 
0x00092d1b: or byte ptr [eax], al; add byte ptr [eax], al; add ecx, 0x474; call dword ptr gs:[0x10]; 
0x00115404: or byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x001898e5: or byte ptr [eax], al; add byte ptr [eax], al; add esp, 0xc; ret; 
0x0003c99a: or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000a0af2: or byte ptr [eax], al; add byte ptr [eax], al; cmova eax, edx; mov byte ptr [ecx + 0x3c38], al; ret; 
0x00043275: or byte ptr [eax], al; add byte ptr [eax], al; cmove eax, edx; ret; 
0x000980a6: or byte ptr [eax], al; add byte ptr [eax], al; inc eax; xor eax, eax; ret; 
0x0003c7f2: or byte ptr [eax], al; add byte ptr [eax], al; lea edx, [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x0009356f: or byte ptr [eax], al; add byte ptr [eax], al; mov byte ptr [esp + 0x47], 0; mov dword ptr [esp + 8], edx; call dword ptr gs:[0x10]; 
0x00023277: or byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [ebp + 0x137c], 1; call dword ptr gs:[0x10]; 
0x000ea07b: or byte ptr [eax], al; add byte ptr [eax], al; mov ebx, 0x1200011; lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x0010d60e: or byte ptr [eax], al; add byte ptr [eax], al; mov ecx, dword ptr [ebp - 0x144]; call dword ptr gs:[0x10]; 
0x0003d598: or byte ptr [eax], al; add byte ptr [eax], al; mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x0003ca1a: or byte ptr [eax], al; add byte ptr [eax], al; mov edx, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x0003c895: or byte ptr [eax], al; add byte ptr [eax], al; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00170732: or byte ptr [eax], al; add byte ptr [eax], al; pop ebx; ret; 
0x00042c14: or byte ptr [eax], al; add byte ptr [eax], al; pop ebx; sub eax, edx; ret; 
0x001abbe7: or byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x00099b46: or byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x00098081: or byte ptr [eax], al; add byte ptr [eax], al; xor byte ptr [ecx], 0xc0; ret; 
0x00094bc6: or byte ptr [eax], al; add byte ptr [eax], al; xor edx, edx; lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x00097452: or byte ptr [eax], al; add byte ptr [eax], al; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x001395ad: or byte ptr [eax], al; add byte ptr [ebx + 0x39101e5c], cl; ret 0x820f; 
0x00062598: or byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0014a750: or byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0008595b: or byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0003e45b: or byte ptr [eax], al; add byte ptr [ebx + 0x688d04ec], al; call dword ptr [ebp + 0x56]; 
0x0015f70b: or byte ptr [eax], al; add byte ptr [ebx - 0x72efdb84], cl; xchg dword ptr [ebp + esi*4 - 7], esi; call dword ptr [eax - 0x73]; 
0x0002bc61: or byte ptr [eax], al; add byte ptr [ebx - 0x76e3db8c], cl; ret 0xb60f; 
0x00127050: or byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; dec dword ptr [ebp - 7]; call dword ptr [eax + 0x55]; 
0x00127035: or byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; mov bl, 0x4d; stc; call dword ptr [eax + 0x55]; 
0x0012706b: or byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; xor dword ptr [esi - 7], ecx; call dword ptr [eax + 0x55]; 
0x000b9525: or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00153a7f: or byte ptr [eax], al; add byte ptr [edi], cl; mov dword ptr [0x8b9c72c2], eax; dec ebp; mov word ptr [ebp - 0x64e8b7f], cs; call dword ptr [eax - 0x73]; 
0x0015e7d6: or byte ptr [eax], al; add byte ptr [esi - 0x3f], ah; ret 0xf08; 
0x0005cee3: or byte ptr [eax], al; add dh, dh; ret 0xf40; 
0x000a2361: or byte ptr [eax], al; add esp, 0x10; cmp eax, -1; je 0xa2370; add esp, 0xc; ret; 
0x000a0c7e: or byte ptr [eax], al; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00037e07: or byte ptr [eax], al; add esp, 0x1c; ret; 
0x0005aabe: or byte ptr [eax], al; mov eax, edx; ret; 
0x000406a0: or byte ptr [eax], al; pop ebx; pop esi; ret; 
0x00169994: or byte ptr [eax], bl; inc dword ptr [ebx - 0x77cef3c]; dec dword ptr [edi]; xchg esp, eax; ret 0xd1e9; 
0x00175051: or byte ptr [eax], ch; adc byte ptr [eax], al; add byte ptr [edi - 0x18], dl; ret; 
0x000908de: or byte ptr [eax], cl; mov dword ptr [eax + 0x10], edx; xor eax, eax; ret; 
0x000908c3: or byte ptr [eax], cl; mov dword ptr [edx + 0x10], eax; mov eax, ecx; ret; 
0x000c1865: or byte ptr [eax], dh; ret; 
0x000c1845: or byte ptr [eax], dl; ret; 
0x000a01d3: or byte ptr [ebp + 0x10479db], al; fisttp dword ptr [ebx + 0x106b81b]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0014e8da: or byte ptr [ebp + 0x1e850fed], al; add al, byte ptr [eax]; add dh, dh; ret; 
0x000f04ed: or byte ptr [ebp + 0x30], 0xf9; call dword ptr [eax - 0x77]; 
0x0005df93: or byte ptr [ebp + 0x31], 0xf9; call dword ptr [eax - 0x18]; 
0x0007de93: or byte ptr [ebp + 0x393074c9], al; ret; 
0x000877a4: or byte ptr [ebp + 0x396774c9], al; ret; 
0x0007f244: or byte ptr [ebp + 0x396f74c9], al; ret; 
0x00086648: or byte ptr [ebp + 0x3f840fc0], al; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x0008498a: or byte ptr [ebp + 0x45840fc9], al; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x00054193: or byte ptr [ebp + 0x478d0450], cl; add al, 0xf; xchg edx, eax; ret; 
0x001446b8: or byte ptr [ebp + 0x48ac83], cl; add byte ptr [ecx - 0x4977b], cl; call dword ptr [eax - 1]; 
0x0007b2a5: or byte ptr [ebp + 0x50082444], cl; push esi; call dword ptr [ebx + 0x48]; 
0x00087fe1: or byte ptr [ebp + 0x50082444], cl; push esi; call dword ptr [edi + 0x48]; 
0x00087cd7: or byte ptr [ebp + 0x50382444], cl; push esi; call dword ptr [ebx + 0x48]; 
0x00083102: or byte ptr [ebp + 0x50402444], cl; push esi; call dword ptr [ebx + 0x48]; 
0x000e76da: or byte ptr [ebp + 0x511c244c], cl; mov dword ptr [esp + 0x18], ecx; push ebx; call eax; 
0x0011440e: or byte ptr [ebp + 0x51], dl; mov eax, dword ptr [esp + 0x18]; call eax; 
0x000f800a: or byte ptr [ebp + 0x52082454], cl; push eax; call dword ptr [ecx + 0x20]; 
0x000e7854: or byte ptr [ebp + 0x520c2454], cl; push ebx; call eax; 
0x000f0d8a: or byte ptr [ebp + 0x52142454], cl; push eax; call dword ptr [ecx + 0x20]; 
0x00178737: or byte ptr [ebp + 0x52202454], cl; push eax; call edi; 
0x0008950f: or byte ptr [ebp + 0x52282454], cl; push esi; call dword ptr [eax + 0x48]; 
0x0018bd2a: or byte ptr [ebp + 0x52382454], cl; push esi; call dword ptr [eax + 0x48]; 
0x0016ef75: or byte ptr [ebp + 0x5540246c], cl; push eax; call dword ptr [ecx + 8]; 
0x0008b58b: or byte ptr [ebp + 0x5650015a], cl; call dword ptr [ebp + 0xc]; 
0x0008c138: or byte ptr [ebp + 0x57840fc0], al; add al, byte ptr [eax]; add byte ptr [ecx], bh; ret; 
0x000b784d: or byte ptr [ebp + 0x5b5f0c42], cl; ret; 
0x000b788c: or byte ptr [ebp + 0x5b5f1042], cl; ret; 
0x0007ecba: or byte ptr [ebp + 0x5d840fc0], al; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x000ead3f: or byte ptr [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret; 
0x000bb0cd: or byte ptr [ebp + 0x5e5f0947], cl; pop ebx; ret; 
0x000bb0ef: or byte ptr [ebp + 0x5e5f0a47], cl; pop ebx; ret; 
0x000bb12d: or byte ptr [ebp + 0x5e5f0c47], cl; pop ebx; ret; 
0x00066a2f: or byte ptr [ebp + 0x6c840fc0], al; add al, 0; add byte ptr [ecx], bh; ret; 
0x0008be18: or byte ptr [ebp + 0x77840fc0], al; add al, byte ptr [eax]; add byte ptr [ecx], bh; ret; 
0x0007c898: or byte ptr [ebp + 0x77840fc0], al; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x0018aaf8: or byte ptr [ebp + 0x7840fc0], al; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x000a42c9: or byte ptr [ebp + 0x94c9f], cl; add byte ptr [ebx + 0x390c246c], cl; fimul word ptr [ebp - 0x6af0d5fc]; ret; 
0x0009a596: or byte ptr [ebp + 7], dh; xor eax, eax; ret; 
0x0008e85b: or byte ptr [ebp + eax - 0x7d], dh; les ecx, ptr [eax]; pop ebx; ret; 
0x0007a613: or byte ptr [ebp + ebx - 0x7d], dh; call dword ptr [eax]; 
0x0011c127: or byte ptr [ebp - 0x123cf36d], cl; call dword ptr [edx - 0x73]; 
0x000840ec: or byte ptr [ebp - 0x147bf040], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000fae1e: or byte ptr [ebp - 0x14c77b], cl; call dword ptr [eax - 1]; 
0x000fac89: or byte ptr [ebp - 0x15336b], cl; call dword ptr [edx + 0x50]; 
0x000facc2: or byte ptr [ebp - 0x15337b], cl; call dword ptr [eax + 0x52]; 
0x0012d05b: or byte ptr [ebp - 0x16f78b40], al; mov ebx, 0x8dfffff5; jbe 0x12d068; ret; 
0x0007f839: or byte ptr [ebp - 0x17bf040], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000e820e: or byte ptr [ebp - 0x17f48a37], al; push 0x89fffffc; ret 0xc085; 
0x0009f532: or byte ptr [ebp - 0x19fac379], cl; call dword ptr [eax - 0x73]; 
0x00031af4: or byte ptr [ebp - 0x1af7b], cl; call dword ptr [eax - 1]; 
0x000873a6: or byte ptr [ebp - 0x1b7d537d], cl; call dword ptr [eax - 0x73]; 
0x0007f068: or byte ptr [ebp - 0x207bf040], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x00027194: or byte ptr [ebp - 0x218ef36d], cl; call dword ptr [edx + 0x50]; 
0x0007c3d3: or byte ptr [ebp - 0x337bf037], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0007fdbd: or byte ptr [ebp - 0x357bf040], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000d68f2: or byte ptr [ebp - 0x35ff7b], cl; dec dword ptr [ebp - 0x35e34b]; dec dword ptr [ebx - 0x36576b]; call dword ptr [eax - 0x73]; 
0x000d6035: or byte ptr [ebp - 0x35ff7b], cl; dec dword ptr [ebx - 0x363773]; call dword ptr [eax - 0x73]; 
0x00058c07: or byte ptr [ebp - 0x361773], cl; dec dword ptr [ebp - 0x35f363]; call dword ptr [edx - 0x77]; 
0x000afa3f: or byte ptr [ebp - 0x3a], dh; mov dword ptr [eax + 0x1c], esi; pop ebx; pop esi; ret; 
0x00084c78: or byte ptr [ebp - 0x407bf040], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0014e0f0: or byte ptr [ebp - 0x41c6b], cl; call dword ptr [edi + 0x52]; 
0x001089ef: or byte ptr [ebp - 0x427bf040], al; add dword ptr [eax], eax; add byte ptr [edi], cl; mov dh, 0x43; add al, 0x89; ret 0xe283; 
0x0012bb23: or byte ptr [ebp - 0x46b7b], cl; call dword ptr [eax + 0x6a]; 
0x00085458: or byte ptr [ebp - 0x487bf040], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0014efe0: or byte ptr [ebp - 0x48], dh; add dword ptr [eax], eax; add byte ptr [eax], al; xor eax, 1; pop ebx; ret; 
0x000af7c6: or byte ptr [ebp - 0x49], dh; mov dword ptr [eax], esi; pop ebx; pop esi; pop edi; ret; 
0x00084e07: or byte ptr [ebp - 0x577bf040], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000f18ca: or byte ptr [ebp - 0x59f7b], cl; call dword ptr [eax - 0x75]; 
0x000f8b4a: or byte ptr [ebp - 0x5ab7b], cl; call dword ptr [eax - 0x75]; 
0x00183e1a: or byte ptr [ebp - 0x6453345], cl; call dword ptr [edi + 0x56]; 
0x00163611: or byte ptr [ebp - 0x64a7f7f], cl; call dword ptr [eax - 0x73]; 
0x00155f41: or byte ptr [ebp - 0x64cf779], cl; call dword ptr [eax - 0x73]; 
0x0014f703: or byte ptr [ebp - 0x650a37a], cl; call dword ptr [eax - 0x73]; 
0x00130ed0: or byte ptr [ebp - 0x659a779], cl; call dword ptr [eax + 0x55]; 
0x00130eeb: or byte ptr [ebp - 0x659bf79], cl; call dword ptr [eax + 0x55]; 
0x00130f09: or byte ptr [ebp - 0x659d779], cl; call dword ptr [eax + 0x55]; 
0x0011bc1b: or byte ptr [ebp - 0x65d537a], cl; call dword ptr [eax - 0x73]; 
0x00111d8e: or byte ptr [ebp - 0x65def79], cl; call dword ptr [eax - 0x73]; 
0x00110bbb: or byte ptr [ebp - 0x65dfb79], cl; call dword ptr [eax + 0x68]; 
0x001107b9: or byte ptr [ebp - 0x65dfb79], cl; call dword ptr [eax - 0x73]; 
0x00111d01: or byte ptr [ebp - 0x65e1779], cl; call dword ptr [eax - 0x73]; 
0x000eb5b7: or byte ptr [ebp - 0x6609f7f], cl; call dword ptr [eax - 0x73]; 
0x000a4899: or byte ptr [ebp - 0x6674f7a], cl; call dword ptr [eax - 0x73]; 
0x00085e2e: or byte ptr [ebp - 0x67cab79], cl; call dword ptr [eax - 0x73]; 
0x0007d481: or byte ptr [ebp - 0x67cef71], cl; jmp dword ptr [ebp - 0x75]; 
0x00038672: or byte ptr [ebp - 0x68af76d], cl; call dword ptr [edx - 0x77]; 
0x000307dc: or byte ptr [ebp - 0x68bbb79], cl; call dword ptr [eax + 0x56]; 
0x0003352b: or byte ptr [ebp - 0x68bbb7b], cl; call dword ptr [eax + 0x56]; 
0x000282e1: or byte ptr [ebp - 0x68f8b7f], cl; call dword ptr [eax - 0x73]; 
0x00182cd7: or byte ptr [ebp - 0x6994955], cl; call dword ptr [ebp + 0x56]; 
0x001844ad: or byte ptr [ebp - 0x699497d], cl; call dword ptr [ebp + 0x50]; 
0x00182cbc: or byte ptr [ebp - 0x6995745], cl; call dword ptr [edi + 0x56]; 
0x00183528: or byte ptr [ebp - 0x699574d], cl; call dword ptr [esi + 0x57]; 
0x00183f17: or byte ptr [ebp - 0x699666a], cl; call dword ptr [edx - 0x77]; 
0x00182cf2: or byte ptr [ebp - 0x699666d], cl; call dword ptr [edx - 0x77]; 
0x00183562: or byte ptr [ebp - 0x6996675], cl; call dword ptr [ecx - 0x77]; 
0x00182d15: or byte ptr [ebp - 0x6997545], cl; call dword ptr [edi + 0x56]; 
0x00183f36: or byte ptr [ebp - 0x699754a], cl; call dword ptr [esi + 0x53]; 
0x00183585: or byte ptr [ebp - 0x699754d], cl; call dword ptr [esi + 0x57]; 
0x00172f62: or byte ptr [ebp - 0x69c6a7d], cl; call dword ptr [eax - 1]; 
0x0016c97c: or byte ptr [ebp - 0x69d907d], cl; call dword ptr [eax + 0x51]; 
0x0016d378: or byte ptr [ebp - 0x69d907d], cl; call dword ptr [eax + 0x57]; 
0x0016c1d8: or byte ptr [ebp - 0x69d9080], cl; call dword ptr [eax + 0x57]; 
0x00162e79: or byte ptr [ebp - 0x69f706f], cl; call dword ptr [edx + 0x50]; 
0x00162962: or byte ptr [ebp - 0x69fac6d], cl; call dword ptr [edx + 0x50]; 
0x000fad52: or byte ptr [ebp - 0x6a03f68], cl; dec dword ptr [ebp - 0x6b81e80]; call dword ptr [ebx + 0x50]; 
0x00124a12: or byte ptr [ebp - 0x6a03f7d], cl; call dword ptr [eax - 0x73]; 
0x00156c81: or byte ptr [ebp - 0x6a23b7d], cl; call dword ptr [eax - 1]; 
0x0012d25b: or byte ptr [ebp - 0x6ac0a7d], cl; call dword ptr [eax + 0x56]; 
0x00126f2c: or byte ptr [ebp - 0x6aeaa7d], cl; call dword ptr [eax + 0x55]; 
0x001270c1: or byte ptr [ebp - 0x6b1337d], cl; call dword ptr [eax + 0x55]; 
0x001270a6: or byte ptr [ebp - 0x6b1657d], cl; call dword ptr [eax + 0x55]; 
0x0012708b: or byte ptr [ebp - 0x6b1997d], cl; call dword ptr [eax + 0x55]; 
0x00127070: or byte ptr [ebp - 0x6b1ce7d], cl; call dword ptr [eax + 0x55]; 
0x00127055: or byte ptr [ebp - 0x6b2007d], cl; call dword ptr [eax + 0x55]; 
0x0012703a: or byte ptr [ebp - 0x6b24c7d], cl; call dword ptr [eax + 0x55]; 
0x0012701f: or byte ptr [ebp - 0x6b2907d], cl; call dword ptr [eax + 0x55]; 
0x00127004: or byte ptr [ebp - 0x6b2c27d], cl; call dword ptr [eax + 0x55]; 
0x00126fe9: or byte ptr [ebp - 0x6b2f87d], cl; call dword ptr [eax + 0x55]; 
0x00126fce: or byte ptr [ebp - 0x6b3397d], cl; call dword ptr [eax + 0x55]; 
0x00126fb3: or byte ptr [ebp - 0x6b36e7d], cl; call dword ptr [eax + 0x55]; 
0x00126f98: or byte ptr [ebp - 0x6b3b57d], cl; call dword ptr [eax + 0x55]; 
0x00126f7d: or byte ptr [ebp - 0x6b3ee7d], cl; call dword ptr [eax + 0x55]; 
0x00126f62: or byte ptr [ebp - 0x6b4427d], cl; call dword ptr [eax + 0x55]; 
0x00126f47: or byte ptr [ebp - 0x6b4ac7d], cl; call dword ptr [eax + 0x55]; 
0x00124b10: or byte ptr [ebp - 0x6b56d6a], cl; call dword ptr [edx - 0x77]; 
0x00124af1: or byte ptr [ebp - 0x6b5706a], cl; call dword ptr [edx - 0x77]; 
0x00124ad2: or byte ptr [ebp - 0x6b5766a], cl; call dword ptr [edx - 0x77]; 
0x000fdd45: or byte ptr [ebp - 0x6b7c77d], cl; call dword ptr [eax + 0x55]; 
0x000fe0a2: or byte ptr [ebp - 0x6b7ce7d], cl; call dword ptr [eax + 0x55]; 
0x000fdf9d: or byte ptr [ebp - 0x6b7d47d], cl; call dword ptr [eax + 0x55]; 
0x000fde71: or byte ptr [ebp - 0x6b7da7d], cl; call dword ptr [eax + 0x55]; 
0x000fdada: or byte ptr [ebp - 0x6b7e07d], cl; call dword ptr [eax + 0x55]; 
0x000fdba1: or byte ptr [ebp - 0x6b7ec7d], cl; call dword ptr [eax + 0x55]; 
0x000fdf3a: or byte ptr [ebp - 0x6b7f27d], cl; call dword ptr [eax + 0x55]; 
0x000fdce9: or byte ptr [ebp - 0x6b7f87d], cl; call dword ptr [eax + 0x55]; 
0x000fae07: or byte ptr [ebp - 0x6b7fd80], cl; call dword ptr [eax + 0x53]; 
0x000fae64: or byte ptr [ebp - 0x6b7fd80], cl; call dword ptr [eax - 1]; 
0x000dd2fa: or byte ptr [ebp - 0x6b9db7d], cl; call dword ptr [eax + 0x56]; 
0x000dcde2: or byte ptr [ebp - 0x6ba107d], cl; call dword ptr [eax + 0x56]; 
0x000a699b: or byte ptr [ebp - 0x6bb997a], cl; call dword ptr [ebx + 0x50]; 
0x00157d71: or byte ptr [ebp - 0x6bbcf7f], cl; call dword ptr [eax + 0x52]; 
0x0015d370: or byte ptr [ebp - 0x6bec979], cl; call dword ptr [eax + 0x53]; 
0x000fdbdf: or byte ptr [ebp - 0x6c0bf7d], cl; call dword ptr [eax + 0x55]; 
0x00061cc0: or byte ptr [ebp - 0x6cd527a], cl; call dword ptr [eax + 0x53]; 
0x00061bee: or byte ptr [ebp - 0x6cf986d], cl; call dword ptr [esi + 0x52]; 
0x00039bd7: or byte ptr [ebp - 0x6d1407b], cl; call dword ptr [eax + 0x53]; 
0x001259c3: or byte ptr [ebp - 0x6d1a67a], cl; call dword ptr [eax - 1]; 
0x00124453: or byte ptr [ebp - 0x6d1a67d], cl; call dword ptr [eax + 0x6a]; 
0x0014c85f: or byte ptr [ebp - 0x6d1a87b], cl; call dword ptr [eax + 0x52]; 
0x0014c8a1: or byte ptr [ebp - 0x6d1a87b], cl; call dword ptr [eax + 0x53]; 
0x001441b2: or byte ptr [ebp - 0x6d32380], cl; call dword ptr [eax + 0x56]; 
0x0002fee7: or byte ptr [ebp - 0x6d47b7d], cl; call dword ptr [eax - 1]; 
0x0002fec9: or byte ptr [ebp - 0x6d4816d], cl; call dword ptr [edx + 0x50]; 
0x0014251a: or byte ptr [ebp - 0x6d6987b], cl; call dword ptr [eax + 0x53]; 
0x0014c3ce: or byte ptr [ebp - 0x6d6987b], cl; call dword ptr [eax - 0x73]; 
0x000dd385: or byte ptr [ebp - 0x6d6987d], cl; call dword ptr [eax + 0x56]; 
0x001262b5: or byte ptr [ebp - 0x6d6987d], cl; call dword ptr [eax - 0x73]; 
0x00072e3f: or byte ptr [ebp - 0x6d7bf040], al; add al, 0; add byte ptr [ecx], bh; ret; 
0x0007cb49: or byte ptr [ebp - 0x717bf040], al; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x0012d6a7: or byte ptr [ebp - 0x74bb8a40], al; dec esp; and al, 0x10; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x00030f8c: or byte ptr [ebp - 0x74d88a2e], al; inc ebx; add al, 0x83; ret; 
0x0008e89a: or byte ptr [ebp - 0x74ee8b2e], al; push eax; add al, 0x89; push esp; and al, 4; jmp dword ptr [eax]; 
0x0008e795: or byte ptr [ebp - 0x74f18b2e], al; push eax; add al, 0x89; push esp; and al, 4; jmp dword ptr [eax]; 
0x00115b64: or byte ptr [ebp - 0x75], ah; sub eax, 0x14; mov dword ptr [esp + 0x18c], ebp; mov ebp, dword ptr [esp + 0x1b8]; call dword ptr gs:[0x10]; 
0x0014e808: or byte ptr [ebp - 0x777af013], al; add al, 0; add dh, dh; ret; 
0x0008f160: or byte ptr [ebp - 0x77], ah; adc eax, 0x78; pop ebx; ret; 
0x0005cedd: or byte ptr [ebp - 0x7870f001], al; or byte ptr [eax], al; add dh, dh; ret 0xf40; 
0x000b955a: or byte ptr [ebp - 0x7af0f781], cl; mov esp, 0x5f000008; pop esi; pop ebx; ret; 
0x00086644: or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; aas; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x00066a2b: or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; insb byte ptr es:[edi], dx; add al, 0; add byte ptr [ecx], bh; ret; 
0x00084c74: or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; mov edi, 0x39000000; ret; 
0x0007ecb6: or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; pop ebp; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x0018aaf4: or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; pop es; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x0007fdb9: or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; retf 0; add byte ptr [ecx], bh; ret; 
0x00072e3b: or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; xchg edx, eax; add al, 0; add byte ptr [ecx], bh; ret; 
0x0012d00b: or byte ptr [ebp - 0x7afb8b40], al; sal byte ptr [ebp + 4], cl; ret; 
0x00183f2f: or byte ptr [ebp - 0x7ccb8b40], al; in al, dx; or byte ptr [ebp - 0x699754a], cl; call dword ptr [esi + 0x53]; 
0x0009811e: or byte ptr [ebp - 0x7ced8b40], al; in al, dx; or al, 0xff; jae 0x9812d; call dword ptr [ebx]; 
0x00187653: or byte ptr [ebp - 0x7cfbdbbc], cl; ret; 
0x000d5835: or byte ptr [ebp - 0x7d348], cl; call dword ptr [edi + 0x53]; 
0x0004a447: or byte ptr [ebp - 0x7d379], cl; call dword ptr [eax + 0x6a]; 
0x000d8abc: or byte ptr [ebp - 0x7d37b], cl; call dword ptr [eax + 0x6a]; 
0x0014202c: or byte ptr [ebp - 0x7d37d], cl; call dword ptr [eax + 0x6a]; 
0x00176181: or byte ptr [ebp - 0x8b63], cl; call dword ptr [esi + 0x53]; 
0x001761e2: or byte ptr [ebp - 0x8b7b], cl; dec dword ptr [ecx - 0xb37b]; call dword ptr [eax + 0x56]; 
0x0017635a: or byte ptr [ebp - 0x9b7b], cl; call dword ptr [eax + 0x6a]; 
0x00181206: or byte ptr [ebp - 0xa37b], cl; call dword ptr [eax + 0x6a]; 
0x00181a15: or byte ptr [ebp - 0xa77b], cl; call dword ptr [eax - 1]; 
0x0016ecbb: or byte ptr [ebp - 0xc34f379], cl; call dword ptr [eax - 0x73]; 
0x00179272: or byte ptr [ebp - 0xc5cc37d], cl; call dword ptr [eax - 0x73]; 
0x001770aa: or byte ptr [ebp - 0xc80437d], cl; call dword ptr [eax - 0x73]; 
0x00152b29: or byte ptr [ebp - 0xc], dh; ret; 
0x0017463c: or byte ptr [ebp - 0xcab637d], cl; call dword ptr [eax - 0x73]; 
0x0013b5a1: or byte ptr [ebp - 0xcb43], cl; call dword ptr [edi + 0x6a]; 
0x0011464c: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x114660; pop ebx; ret; 
0x001146bc: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x1146d0; pop ebx; ret; 
0x00114abc: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x114ad0; pop ebx; ret; 
0x0011f0dc: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x11f0f0; pop ebx; ret; 
0x0011f5fc: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x11f610; pop ebx; ret; 
0x001208e8: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x120900; pop ebx; ret; 
0x00120ffc: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x121010; pop ebx; ret; 
0x00121508: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x121520; pop ebx; ret; 
0x00121a28: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x121a40; pop ebx; ret; 
0x00122fac: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x122fc0; pop ebx; ret; 
0x00122ffc: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x123010; pop ebx; ret; 
0x00124e5c: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x124e70; pop ebx; ret; 
0x0012c46c: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x12c480; pop ebx; ret; 
0x0012e868: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x12e880; pop ebx; ret; 
0x0013028c: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x1302a0; pop ebx; ret; 
0x000612cc: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x612e0; pop ebx; ret; 
0x0009f188: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x9f1a0; pop ebx; ret; 
0x000fb69c: or byte ptr [ebp - 1], ah; adc eax, 0x10; neg eax; pop ebx; ret; 
0x0017107a: or byte ptr [ebp - 1], dl; jbe 0x17108b; push edi; call dword ptr [eax + 8]; 
0x001710bd: or byte ptr [ebp - 1], dl; jbe 0x1710ce; push edi; call dword ptr [eax + 0x10]; 
0x00038675: or byte ptr [ebp - 7], dh; call dword ptr [edx - 0x77]; 
0x0008dd0a: or byte ptr [ebx + 0x10891851], cl; add esp, 4; pop ebx; pop esi; ret; 
0x0008765d: or byte ptr [ebx + 0x10], dh; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x0008769b: or byte ptr [ebx + 0x12], dh; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x00099b17: or byte ptr [ebx + 0x137701f8], al; mov edx, dword ptr [esp + 4]; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x00090c37: or byte ptr [ebx + 0x137701f8], al; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00099ae7: or byte ptr [ebx + 0x137702f8], al; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00097f0b: or byte ptr [ebx + 0x1cf8c100], cl; and eax, 3; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0009287b: or byte ptr [ebx + 0x1e08300], cl; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00097f2b: or byte ptr [ebx + 0x1fe8c100], cl; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00173eeb: or byte ptr [ebx + 0x20508b00], cl; push esi; push eax; call dword ptr [edx + 4]; 
0x0017080b: or byte ptr [ebx + 0x206a0447], cl; push edi; call dword ptr [eax + 0x18]; 
0x0009039e: or byte ptr [ebx + 0x28901e0], al; xor eax, eax; ret; 
0x00083283: or byte ptr [ebx + 0x290c246c], cl; ret 0xfac1; 
0x0012c9b4: or byte ptr [ebx + 0x33fffee3], al; push esi; call edi; 
0x0016fa37: or byte ptr [ebx + 0x38908ec], al; push dword ptr [ebx + 8]; push esi; call dword ptr [ebx + 0xc]; 
0x0011443c: or byte ptr [ebx + 0x39142444], cl; ret; 
0x001afec7: or byte ptr [ebx + 0x39782474], cl; ret; 
0x000c6277: or byte ptr [ebx + 0x418901c0], al; or byte ptr [edi], cl; nop; ret 0x4b8b; 
0x000868d1: or byte ptr [ebx + 0x43891043], cl; adc al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x00175572: or byte ptr [ebx + 0x438b0cc6], al; add al, 0x56; push ebx; call dword ptr [eax + 0x24]; 
0x000958fe: or byte ptr [ebx + 0x47521f8], al; add dword ptr [edx + 4], 1; add esp, 0xc; ret; 
0x0016ef91: or byte ptr [ebx + 0x50552048], cl; call dword ptr [ecx + 8]; 
0x0016ee2d: or byte ptr [ebx + 0x50562050], cl; call dword ptr [edx + 4]; 
0x001775e1: or byte ptr [ebx + 0x50572050], cl; call dword ptr [edx + 4]; 
0x001754d2: or byte ptr [ebx + 0x53560443], cl; call dword ptr [eax + 0x24]; 
0x0017c150: or byte ptr [ebx + 0x56530446], cl; call dword ptr [eax + 4]; 
0x00081517: or byte ptr [ebx + 0x56], dl; call dword ptr [edi + 0x18]; 
0x0013c00a: or byte ptr [ebx + 0x56a1c40], cl; ror eax, 9; xor eax, dword ptr gs:[0x18]; push esi; call eax; 
0x000c0aac: or byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000bd666: or byte ptr [ebx + 0x5e082444], cl; ret; 
0x000abd25: or byte ptr [ebx + 0x5e5b02c0], al; pop edi; pop ebp; ret; 
0x0005abdf: or byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0008d125: or byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x00039de7: or byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x00039cba: or byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x001b6d4b: or byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret 4; 
0x0008c666: or byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret; 
0x00094130: or byte ptr [ebx + 0x5e5b4cc4], al; pop edi; pop ebp; ret; 
0x0017468e: or byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; ret; 
0x000d2995: or byte ptr [ebx + 0x5e], bl; mov eax, edi; pop edi; pop ebp; ret; 
0x0015c811: or byte ptr [ebx + 0x5e], bl; mov eax, edx; ret; 
0x0005a1da: or byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0013ed77: or byte ptr [ebx + 0x5e], bl; pop edi; ret 4; 
0x0005ba42: or byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0009f81f: or byte ptr [ebx + 0x5e], bl; ret; 
0x000811fc: or byte ptr [ebx + 0x5f5e5b02], cl; ret; 
0x00122c9e: or byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x122cb7; add esp, 0x1c; ret; 
0x0013268f: or byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x1326a1; add esp, 0x1c; ret; 
0x0003df22: or byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x3df34; add esp, 0x1c; ret; 
0x0005ada0: or byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x5adbf; add esp, 0x1c; ret; 
0x00140388: or byte ptr [ebx + 0x6b818], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00140388: or byte ptr [ebx + 0x6b818], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; pop ebx; ret; 
0x00105e9f: or byte ptr [ebx + 0x748b8134], cl; or al, 0x89; je 0x105e6c; or al, 0x83; rol byte ptr [ecx], 0x39; ret; 
0x0017146c: or byte ptr [ebx + 0x74ff0443], cl; and al, 0x1c; push ebx; call dword ptr [eax + 4]; 
0x001714ba: or byte ptr [ebx + 0x74ff0443], cl; and al, 0x1c; push ebx; call dword ptr [eax]; 
0x00179c62: or byte ptr [ebx + 0x74ff0843], cl; and al, 0x14; push ebx; call dword ptr [eax]; 
0x00179e61: or byte ptr [ebx + 0x74ff0843], cl; and al, 0x1c; push ebx; call dword ptr [eax + 0xc]; 
0x0016ee12: or byte ptr [ebx + 0x74ff1043], cl; and al, 0x14; push esi; call dword ptr [eax + 4]; 
0x00176b43: or byte ptr [ebx + 0x74ff5043], cl; and al, 0x30; push esi; call dword ptr [eax + 4]; 
0x0018876b: or byte ptr [ebx + 0x75c98508], cl; push es; ret; 
0x0017548d: or byte ptr [ebx + 0x86a0443], cl; push ebx; call dword ptr [eax + 0x18]; 
0x001708bd: or byte ptr [ebx + 0x86a0447], cl; push edi; call dword ptr [eax + 0x18]; 
0x0018977b: or byte ptr [ebx + 0x8b9004], cl; ret; 
0x0008901b: or byte ptr [ebx + 0xa], dh; movzx eax, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x00097f6b: or byte ptr [ebx + 0xdff2500], cl; add byte ptr [edi], cl; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000967c2: or byte ptr [ebx + 0xf0b808], cl; add byte ptr [eax], al; not ecx; and ecx, 0x80; call dword ptr gs:[0x10]; 
0x001952aa: or byte ptr [ebx + 4], ah; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0013125a: or byte ptr [ebx + 5], bh; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00141c3e: or byte ptr [ebx + eax*4], cl; ror byte ptr [esi], 0x85; sal byte ptr [ebx + 0x39], cl; ret 0x4572; 
0x00141ce3: or byte ptr [ebx + eax*4], cl; ror byte ptr [esi], 0x85; sal byte ptr [esi + esi + 0x39], cl; ret 0x1f72; 
0x00137152: or byte ptr [ebx + ebp*8 + 0x5b], dh; mov eax, ecx; pop esi; pop edi; ret; 
0x0017906a: or byte ptr [ebx - 0x137cef3c], al; or al, 0x8b; inc edi; add al, 0x57; call dword ptr [eax + 0x10]; 
0x000fec35: or byte ptr [ebx - 0x14f7dbac], cl; jge 0x831012b5; ret; 
0x0017513b: or byte ptr [ebx - 0x16fbdbbc], cl; pop ebx; idiv edi; jmp dword ptr [esi - 0x70]; 
0x0003110d: or byte ptr [ebx - 0x17], bl; or al, 0x18; add byte ptr [eax], al; lea esi, [esi]; pop ebx; ret; 
0x00170901: or byte ptr [ebx - 0x1a7cfbb9], cl; cld; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x00170890: or byte ptr [ebx - 0x1f7cfba9], cl; cld; push eax; push edi; call dword ptr [edx + 0x18]; 
0x0003bdc6: or byte ptr [ebx - 0x22f3dbbc], cl; inc esp; and al, 4; mov dword ptr [eax], ecx; ret; 
0x00125f75: or byte ptr [ebx - 0x2776ab3c], al; pop ebx; pop esi; ret; 
0x00156767: or byte ptr [ebx - 0x2776fb3c], al; pop ebx; pop esi; ret; 
0x001237da: or byte ptr [ebx - 0x2f76eb3c], al; pop ebx; pop esi; ret; 
0x0008c9aa: or byte ptr [ebx - 0x2fd6f7bf], cl; ret; 
0x00137a38: or byte ptr [ebx - 0x367af7b8], cl; je 0x137a48; xor eax, eax; pop ebx; ret; 
0x0008d36a: or byte ptr [ebx - 0x37c6ebb6], cl; cmovb eax, ecx; sub eax, dword ptr [edx + 0xc]; ret; 
0x00103e93: or byte ptr [ebx - 0x3d7cfb40], al; add al, 0x39; ret; 
0x00175b32: or byte ptr [ebx - 0x3f7ae3c0], cl; je 0x175b43; sub esp, 0xc; push esi; call eax; 
0x00171082: or byte ptr [ebx - 0x3f7aef3c], al; je 0x17118b; sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x00172ce7: or byte ptr [ebx - 0x3fcefb3c], al; pop ebx; pop esi; ret; 
0x000fb710: or byte ptr [ebx - 0x47c7dbac], cl; mov ah, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000fb8d0: or byte ptr [ebx - 0x47c7dbac], cl; mov ch, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010c315: or byte ptr [ebx - 0x47fbdba4], cl; cmp dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00130a75: or byte ptr [ebx - 0x47fbdba4], cl; fld dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000efa95: or byte ptr [ebx - 0x47fbdba4], cl; int 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00130d15: or byte ptr [ebx - 0x47fbdba4], cl; jge 0x130d1e; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012b385: or byte ptr [ebx - 0x47fbdba4], cl; jns 0x12b38d; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00130a15: or byte ptr [ebx - 0x47fbdba4], cl; mov dl, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001157b5: or byte ptr [ebx - 0x47fbdba4], cl; pop dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001305d5: or byte ptr [ebx - 0x47fbdba4], cl; xchg byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000907b7: or byte ptr [ebx - 0x47fbdbb4], cl; push ss; add byte ptr [eax], al; add byte ptr [ebx + 0xa7602fa], al; ret; 
0x00073623: or byte ptr [ebx - 0x4ff63], cl; call dword ptr [edx + 0x50]; 
0x00077753: or byte ptr [ebx - 0x4ff63], cl; dec dword ptr [ecx - 0x51f73]; dec dword ptr [ebx - 0x52b73]; call dword ptr [ecx + 0x50]; 
0x0007690c: or byte ptr [ebx - 0x50b7b], cl; dec dword ptr [ecx + 0xfc085c6]; test dword ptr [ebx], esi; ret; 
0x0007694b: or byte ptr [ebx - 0x50b7b], cl; dec dword ptr [ecx + 0xfc085c6]; test esp, esi; ret 0xffff; 
0x00041237: or byte ptr [ebx - 0x50f0fb14], al; ret 0x5750; 
0x000736c6: or byte ptr [ebx - 0x5576b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0006bbd6: or byte ptr [ebx - 0x58f63], cl; call dword ptr [edx + 0x50]; 
0x0006a99e: or byte ptr [ebx - 0x58f63], cl; call dword ptr [esi + 0x50]; 
0x0006753f: or byte ptr [ebx - 0x5ab4b], cl; call dword ptr [eax - 1]; 
0x000673c1: or byte ptr [ebx - 0x5b773], cl; jmp dword ptr [ebp - 0x5f]; 
0x000c8ce7: or byte ptr [ebx - 0x5bf0ff26], al; ret 0xc102; 
0x000d135e: or byte ptr [ebx - 0x72d7dbbc], cl; sub byte ptr [eax + edi*8], 0xff; call dword ptr [eax - 1]; 
0x0015a0bc: or byte ptr [ebx - 0x72dfdbbc], cl; or dh, 0x5e; stc; call dword ptr [eax + 0x55]; 
0x000d1c82: or byte ptr [ebx - 0x72dfdbbc], cl; sub byte ptr [eax + edi*8], 0xff; call dword ptr [eax - 1]; 
0x001628b2: or byte ptr [ebx - 0x72e3dbbc], cl; adc byte ptr [ebx + 0x60], 0xf9; call dword ptr [eax + 0x55]; 
0x000cda12: or byte ptr [ebx - 0x72e3dbbc], cl; sub byte ptr [eax + edi*8], 0xff; call dword ptr [eax - 1]; 
0x0015f2f8: or byte ptr [ebx - 0x72e7dbbc], cl; add dl, 0x5f; stc; call dword ptr [eax - 1]; 
0x001925e7: or byte ptr [ebx - 0x72e7dbbc], cl; xor byte ptr [esi], 0x4a; stc; call dword ptr [eax + 0x53]; 
0x0015d355: or byte ptr [ebx - 0x72ebdb84], cl; xchg dword ptr [ebx + 0x5f], edi; stc; call dword ptr [eax + 0x55]; 
0x00059e7b: or byte ptr [ebx - 0x72ebdbbc], cl; sub byte ptr [eax + edi*8], 0xff; call dword ptr [eax + 0x6a]; 
0x0015d8aa: or byte ptr [ebx - 0x72ebdbbc], cl; xor byte ptr [ebp + 0x5f], 0xf9; call dword ptr [eax + 0x55]; 
0x001431bd: or byte ptr [ebx - 0x72ebdbbc], cl; xor byte ptr [esi], 0x59; stc; call dword ptr [eax + 0x6a]; 
0x00163212: or byte ptr [ebx - 0x72efdbac], cl; xchg edx, eax; push ebx; pushal; stc; call dword ptr [edx + 0x50]; 
0x001632b6: or byte ptr [ebx - 0x72efdbbc], cl; adc byte ptr [ebx + 0x60], 0xf9; call dword ptr [eax - 1]; 
0x00155962: or byte ptr [ebx - 0x72efdbbc], cl; cwde; fcomp dword ptr [ebp - 7]; call dword ptr [ebx - 0x73]; 
0x0008869a: or byte ptr [ebx - 0x72f3dba4], cl; add dword ptr [ecx], 0x3f; stc; call dword ptr [eax - 0x75]; 
0x00148415: or byte ptr [ebx - 0x72f3dbbc], cl; adc byte ptr [ecx + 0x5a], 0xf9; call dword ptr [eax + 0x53]; 
0x00179eaa: or byte ptr [ebx - 0x73], dl; push esp; and al, 0x38; push edx; call dword ptr [eax + 0xc]; 
0x000faf68: or byte ptr [ebx - 0x73], dl; sub dh, 0x47; stc; call dword ptr [eax - 0x18]; 
0x0009043b: or byte ptr [ebx - 0x73ef7c0], cl; add al, byte ptr [ebx + 0x28901e0]; xor eax, eax; ret; 
0x0003c4f6: or byte ptr [ebx - 0x746ff398], cl; inc esp; and al, 8; mov esp, ecx; jmp edx; 
0x0013360e: or byte ptr [ebx - 0x74cfdbb4], cl; push esp; and al, 0x38; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x00099b58: or byte ptr [ebx - 0x74f3dbb4], cl; push esp; and al, 0x10; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x000347e7: or byte ptr [ebx - 0x74fbdbac], cl; inc eax; cmp al, 0x8b; add al, 0x90; ret; 
0x00189797: or byte ptr [ebx - 0x74fbdbbc], cl; add al, 0x90; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x0017a8df: or byte ptr [ebx - 0x74fbdbbc], cl; inc eax; xor byte ptr [ebx + 0x448908c0], al; and al, 4; jmp edx; 
0x00126e68: or byte ptr [ebx - 0x76afdb84], cl; inc edi; or byte ptr [ebx - 0x7cb3dbac], cl; ret; 
0x001313bd: or byte ptr [ebx - 0x76c7dbbc], cl; inc esp; and al, 0xc; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0015f943: or byte ptr [ebx - 0x76dbdbb4], cl; fisubr dword ptr [ecx]; ret 0xca39; 
0x00092693: or byte ptr [ebx - 0x76efdb8c], cl; ret; 
0x000a2c2f: or byte ptr [ebx - 0x76f3db8c], cl; pop edi; or al, 0x89; ret; 
0x00042e08: or byte ptr [ebx - 0x76f3dbac], cl; ret; 
0x0008fbc0: or byte ptr [ebx - 0x76fbdbac], cl; ret; 
0x00070b54: or byte ptr [ebx - 0x79f0a506], al; bound ecx, qword ptr [0x4c890000]; and al, 4; mov dword ptr [esp + 0x48], 1; jmp eax; 
0x000ccb75: or byte ptr [ebx - 0x7af0fe06], al; pop edx; or dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x00127ef0: or byte ptr [ebx - 0x7bf0fe01], al; ret 0xfff5; 
0x00126e6f: or byte ptr [ebx - 0x7cb3dbac], cl; ret; 
0x0017fa92: or byte ptr [ebx - 0x7ccbdbac], cl; ret 0x5204; 
0x000410e3: or byte ptr [ebx - 0x7ce3dbac], cl; in al, dx; add al, 0xf; scasd eax, dword ptr es:[edi]; ret 0x8b50; 
0x000a97e1: or byte ptr [ebx - 0x7cebdb84], cl; ret 0x8301; 
0x000f019d: or byte ptr [ebx - 0x7f72378b], cl; pop ecx; stc; call dword ptr [eax - 0x75]; 
0x0017e93d: or byte ptr [ebx - 0x8f7b], cl; inc dword ptr [ecx]; ret; 
0x001219f7: or byte ptr [ebx - 0x9afb81], cl; adc eax, 0x10; pop ebp; pop edi; pop ebx; ret; 
0x0008d0c7: or byte ptr [ebx - 0xe7dbbc], cl; je 0x8d0f3; sbb al, 0x85; ror byte ptr [edi], 0x48; ret 0xff50; 
0x0013ac7e: or byte ptr [ebx - 1], dl; jae 0x13acb3; call eax; 
0x0014190a: or byte ptr [ebx], 0xf8; inc dword ptr [ebx + 0x48d10c4]; pop ebx; pop esi; pop edi; ret; 
0x0002dcf1: or byte ptr [ebx], al; cmp byte ptr [ebx + 0x390c2444], cl; ret 0x840f; 
0x00197d2a: or byte ptr [ebx], bh; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000ad268: or byte ptr [ebx], dl; mov eax, esi; pop ebx; pop esi; ret; 
0x0005bb50: or byte ptr [ecx + 0x10890450], cl; ret; 
0x00080aa6: or byte ptr [ecx + 0x10892048], cl; pop ebx; ret; 
0x00146c20: or byte ptr [ecx + 0x12c244c], cl; ret; 
0x00125174: or byte ptr [ecx + 0x1b802], cl; add byte ptr [eax], al; ret; 
0x0003ad7e: or byte ptr [ecx + 0x1cc483d0], cl; ret 4; 
0x0015a07f: or byte ptr [ecx + 0x24448bc7], cl; and byte ptr [ebp - 0x6a13a80], cl; call dword ptr [eax + 0x55]; 
0x00100d07: or byte ptr [ecx + 0x293c244c], cl; fimul dword ptr [ecx - 0x769fdbbc]; ret; 
0x0012ca74: or byte ptr [ecx + 0x30ffd055], cl; mov eax, dword ptr [ebp - 0x3c]; push dword ptr [ebp - 0x38]; call eax; 
0x000a6e57: or byte ptr [ecx + 0x43891053], cl; add al, 0x5b; pop esi; pop edi; ret; 
0x000c0ae9: or byte ptr [ecx + 0x448b0350], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000bd696: or byte ptr [ecx + 0x448b0350], cl; and al, 8; pop esi; ret; 
0x00085a16: or byte ptr [ecx + 0x4508910], cl; pop ebx; pop esi; ret; 
0x00085c77: or byte ptr [ecx + 0x4538913], cl; add esp, 4; pop ebx; pop esi; ret; 
0x0008ddc1: or byte ptr [ecx + 0x4c48302], cl; pop ebx; pop esi; ret; 
0x0008dd22: or byte ptr [ecx + 0x4c48308], cl; pop ebx; pop esi; ret; 
0x00088bf1: or byte ptr [ecx + 0x4c483f0], cl; pop ebx; pop esi; ret; 
0x001798b8: or byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x00080aa0: or byte ptr [ecx + 0x58890450], cl; or byte ptr [ecx + 0x10892048], cl; pop ebx; ret; 
0x00070aa5: or byte ptr [ecx + 0x5af983d7], cl; jbe 0x71983; mov ecx, dword ptr [esp + 0x4c]; mov dword ptr [esp + 4], ecx; jmp eax; 
0x0014096f: or byte ptr [ecx + 0x5c8b2a0c], cl; and al, 0x6c; mov eax, 6; call dword ptr gs:[0x10]; 
0x00157306: or byte ptr [ecx + 0x5e], 0xf9; call dword ptr [eax - 0x18]; 
0x000aba14: or byte ptr [ecx + 0x5f5e5bd8], cl; pop ebp; ret; 
0x00034015: or byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x000d297f: or byte ptr [ecx + 0x5f5e5bf8], cl; pop ebp; ret; 
0x00080a72: or byte ptr [ecx + 0x8508910], cl; mov dword ptr [eax + 0x20], ecx; ret; 
0x0016fa3a: or byte ptr [ecx + 0x873ff03], cl; push esi; call dword ptr [ebx + 0xc]; 
0x00094e98: or byte ptr [ecx + 0x8beeb], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b399d: or byte ptr [ecx + 0x9eb83d0], cl; lea ecx, [edx + 9]; jne 0xb3801; pop ebx; ret; 
0x001b042f: or byte ptr [ecx + 0xacc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 4; 
0x000b39bf: or byte ptr [ecx + 0xaeb83d0], cl; lea ecx, [edx + 0xa]; jne 0xb3801; pop ebx; ret; 
0x001b2905: or byte ptr [ecx + 0xbcc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 4; 
0x0011be73: or byte ptr [ecx + 0xbcc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000407c4: or byte ptr [ecx + 0xc5689f0], cl; add esp, 0x34; pop ebx; pop esi; ret 4; 
0x0005af1d: or byte ptr [ecx + 0xcc483d0], cl; ret; 
0x000b39fd: or byte ptr [ecx + 0xceb83d0], cl; lea ecx, [edx + 0xc]; jne 0xb3801; pop ebx; ret; 
0x001423d6: or byte ptr [ecx + 0xe1], al; rol cl, 0xea; adc byte ptr [ecx + 0xf9], al; or byte ptr [edi], 0x44; ret 0x8dc3; 
0x0005ebf8: or byte ptr [ecx + 0xf], al; xchg esp, eax; ret 0x6a52; 
0x000e50df: or byte ptr [ecx + 0xfcc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0003c998: or byte ptr [ecx + 8], bh; call dword ptr gs:[0x10]; 
0x000f0b8f: or byte ptr [ecx + ecx*8 - 0x3fce208b], al; pop ebx; ret; 
0x00038dc6: or byte ptr [ecx + edx - 0x7d], dh; ljmp 0xfa83:0x1c18330; or dword ptr [edi], ecx; xchg esi, eax; ret 0xb60f; 
0x0003bd43: or byte ptr [ecx - 0x100001], bh; sub ecx, eax; xor eax, ecx; shr eax, 0x1f; ret; 
0x000f372f: or byte ptr [ecx - 0x16fbdbbc], cl; xlatb; imul edi, ebx, -1; lea esi, [esi]; xor eax, eax; ret; 
0x00136c0b: or byte ptr [ecx - 0x17adaa05], cl; sti; ret; 
0x000382e5: or byte ptr [ecx - 0x1cf6b], cl; call dword ptr [eax - 1]; 
0x000b8eec: or byte ptr [ecx - 0x2f76f7be], cl; ret; 
0x0008256c: or byte ptr [ecx - 0x2fd643bb], cl; push eax; push edx; push edi; call dword ptr [ebx + 0x38]; 
0x0013c025: or byte ptr [ecx - 0x373edbcc], cl; or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x000908c4: or byte ptr [ecx - 0x3776efbe], cl; ret; 
0x00085caf: or byte ptr [ecx - 0x3b7cf3b0], cl; add al, 0x5b; pop esi; ret; 
0x000a6c4d: or byte ptr [ecx - 0x3e05fe08], cl; clc; add eax, dword ptr [ecx]; ret 0x38b; 
0x000908df: or byte ptr [ecx - 0x3fceefb0], cl; ret; 
0x000906fb: or byte ptr [ecx - 0x3fcef3b0], cl; ret; 
0x0010ce1b: or byte ptr [ecx - 0x3fcefbb0], cl; ret; 
0x0010c961: or byte ptr [ecx - 0x3fcefbbd], cl; pop ebx; pop esi; pop edi; ret; 
0x00109c73: or byte ptr [ecx - 0x3ff001e], al; dec dword ptr [ecx]; retf 0x5489; ret; 
0x00173ce7: or byte ptr [ecx - 0x47a4f3ad], cl; add dword ptr [eax], eax; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x000729c3: or byte ptr [ecx - 0x4f37b], cl; dec dword ptr [ecx - 0x4eb4b]; dec dword ptr [ecx - 0x4ff63]; dec dword ptr [ecx - 0x53373]; jmp dword ptr [ebp - 0x5f]; 
0x0003a32d: or byte ptr [ecx - 0x50f0fbb9], cl; ret 0x7c8b; 
0x0007305b: or byte ptr [ecx - 0x5577b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00069da1: or byte ptr [ecx - 0x58b6b], cl; dec dword ptr [ebx - 0x58f63]; call dword ptr [ecx + 0x50]; 
0x0006b955: or byte ptr [ecx - 0x58b73], cl; call dword ptr [eax - 1]; 
0x001923c4: or byte ptr [ecx - 0x5c16a428], cl; cwde; clc; jmp dword ptr [esi - 0x70]; 
0x0006ac84: or byte ptr [ecx - 0x5eb63], cl; call dword ptr [eax - 1]; 
0x00040577: or byte ptr [ecx - 0x7235c622], cl; pop edx; add dword ptr [ebx + 0xf382454], ecx; inc ebp; ret; 
0x0003fbc2: or byte ptr [ecx - 0x72e3dbbc], cl; test esp, ebx; sub al, 0xf9; dec dword ptr [ecx - 0x76d3dbbc]; ret 0xc189; 
0x00138be4: or byte ptr [ecx - 0x76e3dbbc], cl; ret; 
0x0017481c: or byte ptr [ecx - 0x76f7dbb4], cl; inc esp; and al, 4; jmp edx; 
0x000bff3d: or byte ptr [ecx - 0x776f7be], cl; pop ebx; pop edi; ret; 
0x000b8d8c: or byte ptr [ecx - 0x776f7be], cl; pop edi; ret; 
0x0016d371: or byte ptr [ecx - 0x7cfbdbbc], cl; in al, dx; or byte ptr [ebp - 0x69d907d], cl; call dword ptr [eax + 0x57]; 
0x00141d67: or byte ptr [ecx - 0x7ff7db84], al; add byte ptr [eax], al; add byte ptr [edi], cl; inc edx; ret 0x2ec3; 
0x000330ad: or byte ptr [ecx - 0xe76b], cl; call dword ptr [eax + 0x56]; 
0x00181a63: or byte ptr [ecx - 0xeb73], cl; dec dword ptr [ecx - 0xe77b]; dec dword ptr [ebp - 0xa77b]; dec dword ptr [ecx - 0xe36b]; call dword ptr [eax + 0x6a]; 
0x00171416: or byte ptr [ecx - 0xfbdbac], cl; and byte ptr [ebp - 0x3fceff8a], cl; ret; 
0x0017c706: or byte ptr [ecx - 0xfbdbac], cl; pushal; and byte ptr [esi - 0x70], ah; xor eax, eax; ret; 
0x000a6d84: or byte ptr [ecx - 1], dl; jae 0xa6dad; call eax; 
0x0003f262: or byte ptr [ecx - 1], dl; je 0x3f28b; dec esp; call eax; 
0x0017ad35: or byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [edx], ch; push edi; call dword ptr [eax + 0x14]; 
0x000e7bb8: or byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e7a6a: or byte ptr [ecx], al; add byte ptr [eax], al; mov dword ptr [esp + 0x14], edi; call dword ptr gs:[0x10]; 
0x000c3102: or byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1c8]; ret; 
0x000c3112: or byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1cc]; ret; 
0x000c3122: or byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1d0]; ret; 
0x000c3132: or byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1d4]; ret; 
0x000c3142: or byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1d8]; ret; 
0x000c3152: or byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1dc]; ret; 
0x000c3162: or byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1e0]; ret; 
0x000c3172: or byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1e4]; ret; 
0x000c3182: or byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1e8]; ret; 
0x000c3192: or byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1ec]; ret; 
0x000c31a2: or byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x000c30f2: or byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x00134740: or byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x20]; ret; 
0x00125245: or byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x20]; test eax, eax; cmove eax, edx; ret; 
0x00125761: or byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0xc]; test eax, eax; je 0x12576d; ret; 
0x0010cd0a: or byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x00188e22: or byte ptr [ecx], al; add byte ptr [eax], al; shl eax, 5; lea eax, [eax + edx + 0x5c]; ret; 
0x0010ce40: or byte ptr [ecx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x00152196: or byte ptr [ecx], al; je 0x1521bd; add esp, 0xc; ret; 
0x000a0f45: or byte ptr [ecx], al; lds edi, ptr [ecx]; ret; 
0x00080c40: or byte ptr [ecx], al; ret 0x3e89; 
0x0003a46a: or byte ptr [ecx], al; ret 0x8952; 
0x0008d464: or byte ptr [ecx], al; ret 0xc801; 
0x0004b10f: or byte ptr [ecx], al; ret 0xd389; 
0x000a9c0a: or byte ptr [ecx], al; ret 0xfe83; 
0x0011b5d2: or byte ptr [ecx], al; ret; 
0x00038263: or byte ptr [ecx], al; ror byte ptr [ecx - 0x1f37b], 1; call dword ptr [eax - 1]; 
0x000751c8: or byte ptr [ecx], al; ror dword ptr [ebp + 0x8d04], 0; add byte ptr [ecx - 0x4f773], cl; call dword ptr [eax + 0x53]; 
0x000906d2: or byte ptr [ecx], al; xor eax, eax; ret; 
0x000941b7: or byte ptr [ecx], bh; inc esp; and al, 4; sete al; movzx eax, al; ret; 
0x000337cd: or byte ptr [ecx], bh; ret 0x1474; 
0x0010086f: or byte ptr [ecx], bh; ret 0x1c7e; 
0x0019ce3c: or byte ptr [ecx], bh; ret 0x1d72; 
0x00100865: or byte ptr [ecx], bh; ret 0x267e; 
0x00198c0c: or byte ptr [ecx], bh; ret 0x2d72; 
0x00180c6f: or byte ptr [ecx], bh; ret 0x3c75; 
0x00151172: or byte ptr [ecx], bh; ret 0x460f; 
0x00104974: or byte ptr [ecx], bh; ret 0x474; 
0x000f239e: or byte ptr [ecx], bh; ret 0x830f; 
0x0006f45e: or byte ptr [ecx], bh; ret 0x840f; 
0x0002d818: or byte ptr [ecx], bh; ret 0x850f; 
0x00087be1: or byte ptr [ecx], bh; ret 0x8c74; 
0x0015a15b: or byte ptr [ecx], bh; ret 0xc074; 
0x0018be72: or byte ptr [ecx], bh; ret 0xd889; 
0x000acf54: or byte ptr [ecx], bh; ret 0xe775; 
0x000a1ea8: or byte ptr [ecx], bh; ret 0xf375; 
0x000ffbb2: or byte ptr [ecx], bh; ret 0xf475; 
0x00055d7a: or byte ptr [ecx], bh; ret; 
0x0005a5f4: or byte ptr [ecx], bh; retf 0x820f; mov edx, 0x89000000; aad 0x89; ret 0xe889; 
0x00173a3d: or byte ptr [ecx], bh; ror byte ptr [edi], 1; dec edi; ret 0x8966; 
0x00087297: or byte ptr [ecx], bh; ror dword ptr [ebx + 0x190c2454], cl; ret 0x157d; 
0x001b4038: or byte ptr [ecx], bh; sal dword ptr [edx - 0xf], 0xe9; ret 0x11; 
0x000a82c9: or byte ptr [ecx], ch; ret 0x348d; 
0x0008a0cb: or byte ptr [ecx], ch; ret 0xfa39; 
0x000a26a2: or byte ptr [ecx], ch; ret 0xfa83; 
0x00028d17: or byte ptr [ecx], ch; ret; 
0x0007426f: or byte ptr [ecx], ch; ror dword ptr [ecx - 0x50363], cl; dec dword ptr [ebx - 0x4ff63]; call dword ptr [eax + 0x52]; 
0x0003fa10: or byte ptr [ecx], cl; ret 0xd389; 
0x0011fcd8: or byte ptr [ecx], dh; leave; call dword ptr gs:[0x10]; 
0x000e75f8: or byte ptr [ecx], dh; leave; mov eax, 0x196; not ebx; lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x000908be: or byte ptr [ecx], dh; leave; or dword ptr [edx + 8], 8; mov dword ptr [edx + 0x10], eax; mov eax, ecx; ret; 
0x000993d7: or byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0017255e: or byte ptr [ecx], dh; ret 0xc889; 
0x00093f2a: or byte ptr [ecx], dh; sar byte ptr [eax + 0xaf], cl; mov esi, 8; call dword ptr gs:[0x10]; 
0x000938aa: or byte ptr [ecx], dh; sar byte ptr [esi + 8], cl; call dword ptr gs:[0x10]; 
0x000b7815: or byte ptr [edi + 0x5b], bl; ret; 
0x000b99ed: or byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000d9797: or byte ptr [edi + 0x5e], bl; ret; 
0x00189399: or byte ptr [edi + 0x67], 0xf9; call dword ptr [eax - 0x18]; 
0x0019b620: or byte ptr [edi + 3], bl; sbb al, 0x8b; jmp ebx; 
0x00024fdf: or byte ptr [edi + ebp*2 - 7], 0xff; ret; 
0x0009d82d: or byte ptr [edi + ecx], dl; xchg ebx, ebx; add eax, dword ptr [eax]; add al, ch; push es; ret; 
0x00199a5a: or byte ptr [edi - 0x18], bl; mov esp, 0x81ffff01; ret; 
0x001423e5: or byte ptr [edi], 0x44; ret 0x8dc3; 
0x001420d3: or byte ptr [edi], 0x45; ret 0x2ec3; 
0x00068b82: or byte ptr [edi], 0x84; ret 2; 
0x0007ddb6: or byte ptr [edi], 0x84; ret; 
0x0010d4f8: or byte ptr [edi], 0x85; retf 3; add dh, dh; ret 0xf02; 
0x00086944: or byte ptr [edi], 0x95; ret 0xc283; 
0x000ecc23: or byte ptr [edi], 0xa3; ret 0x830f; 
0x00115454: or byte ptr [edi], 0xa3; ret 0xdc73; 
0x00042975: or byte ptr [edi], 0xbd; leave; xor ecx, 0x1f; shr eax, cl; ret; 
0x0004d4d4: or byte ptr [edi], cl; add byte ptr [ebx - 0x72e7db84], cl; xchg dword ptr [eax + 0x78], ebx; stc; call dword ptr [eax - 0x73]; 
0x00027fe5: or byte ptr [edi], cl; mov bh, 0x85; dec eax; jo 0x27fe5; jmp dword ptr [esi - 0x77]; 
0x00037ea1: or byte ptr [edi], cl; mov bh, 0x93; and byte ptr [ebp - 7], dh; jmp dword ptr [esi - 0x77]; 
0x00088ca6: or byte ptr [edi], cl; mov dh, 0xc0; pop ebx; neg eax; ret; 
0x00170f1c: or byte ptr [edi], cl; mov dh, 0xc0; pop ebx; ret; 
0x001287bb: or byte ptr [edi], cl; mov dh, 0xc8; shrd eax, edx, 0xc; xor al, al; or eax, ecx; ret; 
0x001a0abb: or byte ptr [edi], cl; mov dh, 2; sub eax, ecx; pop ebp; ret; 
0x0019f302: or byte ptr [edi], cl; mov dh, 2; sub eax, ecx; ret; 
0x00135b53: or byte ptr [edi], cl; mov dword ptr [0xc2920fd8], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x000cc52d: or byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000c627d: or byte ptr [edi], cl; nop; ret 0x4b8b; 
0x00100e0c: or byte ptr [edi], cl; sahf; ret 0x5420; 
0x001aa9da: or byte ptr [edi], cl; sub byte ptr [edi], 1; add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x001a6238: or byte ptr [edi], cl; test byte ptr [ebx - 0x7d000000], dl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x0007173c: or byte ptr [edi], cl; test byte ptr [ebx], ch; or eax, dword ptr [eax]; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x448b; 
0x000648a9: or byte ptr [edi], cl; test byte ptr [edx - 0x72ffffeb], al; push eax; add dword ptr [ecx + 0xc60455], ecx; and eax, 0xfffb62e9; jmp dword ptr [esi - 0x70]; 
0x000b955d: or byte ptr [edi], cl; test dword ptr [eax + ecx + 0x5e5f0000], edi; pop ebx; ret; 
0x000d967a: or byte ptr [edi], cl; test dword ptr [edi], ebx; add dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; ret; 
0x00081d18: or byte ptr [edi], cl; test ecx, edi; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x000a496b: or byte ptr [edi], cl; xchg ebp, eax; ret 0xe2c1; 
0x0012ed89: or byte ptr [edi], cl; xchg ebp, eax; rol byte ptr [ebx - 0x49f0d33c], 0xc0; neg eax; ret; 
0x0012ed48: or byte ptr [edi], cl; xchg ebp, eax; rol byte ptr [ebx - 0x49f0e33c], 0xc0; neg eax; ret; 
0x0015bed8: or byte ptr [edi], cl; xchg ebp, eax; ror byte ptr [edi], 0xb6; sal bh, 0xd8; ret; 
0x00122e87: or byte ptr [edx + 0x100], bh; mov word ptr [eax + 0x16], dx; ret; 
0x001866c9: or byte ptr [edx + 0x50], dl; call dword ptr [ebx + 0x24]; 
0x00186750: or byte ptr [edx + 0x50], dl; call dword ptr [ebx + 0x28]; 
0x000f800e: or byte ptr [edx + 0x50], dl; call dword ptr [ecx + 0x20]; 
0x001392ec: or byte ptr [edx + 0x56], 0xf9; call dword ptr [eax - 0x75]; 
0x00174955: or byte ptr [edx + 0x6a], dl; add eax, 0x4c838d50; je 0x174958; call dword ptr [eax - 0x18]; 
0x0017a315: or byte ptr [edx + 0x6a], dl; add eax, 0x4c838d50; je 0x17a318; call dword ptr [eax - 0x18]; 
0x000c0a78: or byte ptr [edx + 0x70880276], cl; add cl, byte ptr [ebx + 0x5b0c2444]; pop esi; ret; 
0x000912b0: or byte ptr [edx + 0x7fffffff], bh; xor esi, esi; add ebx, eax; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000915d7: or byte ptr [edx + 1], bh; xor esi, esi; lea ebx, [edi + eax + 0x28]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000c5d9b: or byte ptr [edx + ebp*4 - 0x17], 0xff; test byte ptr [ecx + 0x7b], 4; cmove eax, edx; ret; 
0x00082784: or byte ptr [edx - 1], ch; push dword ptr [ebx]; call dword ptr [edi + 0xc]; 
0x00088f3c: or byte ptr [edx - 1], ch; push dword ptr [ecx]; call dword ptr [eax + 0xc]; 
0x0011b249: or byte ptr [edx - 1], dl; jbe 0x11b25a; call dword ptr [esi + 0x24]; 
0x0011c36c: or byte ptr [edx - 1], dl; jbe 0x11c37d; call dword ptr [esi + 0x24]; 
0x0011d4dc: or byte ptr [edx - 1], dl; jbe 0x11d4ed; call dword ptr [esi + 0x24]; 
0x0005ba59: or byte ptr [edx - 7], bh; call dword ptr [eax - 0x18]; 
0x0002cdcc: or byte ptr [edx - 7], dh; call dword ptr [eax - 0x73]; 
0x00174815: or byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebx + 0x4c8908c0], al; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x000c21b4: or byte ptr [edx], bh; or dh, byte ptr [ebp + 4]; xor eax, eax; pop ebx; ret; 
0x0019a0aa: or byte ptr [edx], bl; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00170eff: or byte ptr [edx], ch; push ebx; call dword ptr [eax + 0x14]; 
0x0003ed57: or byte ptr [edx], ch; push edx; call eax; 
0x0007b42e: or byte ptr [edx], ch; push esi; call dword ptr [ebx + 8]; 
0x0008bcba: or byte ptr [esi + 0x53], dl; call dword ptr [edi + 0x18]; 
0x000e781a: or byte ptr [esi + 0x53], dl; call eax; 
0x000410a1: or byte ptr [esi + 0x57], dl; mov eax, dword ptr [esp + 0x10]; call eax; 
0x0017c0df: or byte ptr [esi + 0x5f], bl; jmp eax; 
0x000bd012: or byte ptr [esi + 0xf], ah; adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000bd716: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [eax]; mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0b2c: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [eax]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd6b6: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [eax]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bd6d7: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [eax]; mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba2bb: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; lea eax, [edx + 0xf]; pop edi; ret; 
0x000ba5ac: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; lea eax, [edx + 0xf]; ret; 
0x000b8c9b: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; mov eax, edi; pop edi; ret; 
0x000b8f6c: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; mov eax, edx; ret; 
0x000b5af6: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x000b5c36: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000b1716: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000b1856: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000b5a26: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x000b5c96: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000b1666: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x000b43cf: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; pop ebx; ret; 
0x000b18b6: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000b5b17: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x000b5c57: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000b1737: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000b1877: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000bcf47: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; ret; 
0x000c010a: or byte ptr [esi + 0xf], ah; adc ecx, dword ptr [edx + 8]; mov eax, edi; pop ebx; pop edi; ret; 
0x00145fae: or byte ptr [esi - 0x3f], ah; ret 0xf08; 
0x00170c1b: or byte ptr [esi - 0x75], dl; inc esp; and al, 0x28; call dword ptr [eax + 0x18]; 
0x001194fb: or byte ptr [esi - 0x77], ah; inc edx; inc edx; xor eax, eax; ret; 
0x00117a5b: or byte ptr [esi - 0x77], ah; inc edx; xor eax, eax; ret; 
0x00196b1a: or byte ptr [esi - 0x77], ah; or cl, byte ptr [ebx + 0x5b082444]; ret; 
0x0014d6e0: or byte ptr [esi - 0x77], ah; push ecx; or bl, byte ptr [ebx + 0x5e]; pop edi; ret; 
0x001aca7d: or byte ptr [esi - 0x7d], bl; ret 0x830c; 
0x000a6c75: or byte ptr [esi - 1], dl; jae 0xa6c9e; call eax; 
0x0017fb94: or byte ptr [esi - 7], ah; call dword ptr [eax - 0x18]; 
0x000d5955: or byte ptr [esi], al; add byte ptr [ebx - 0x4a76ef3c], al; mov al, byte ptr [0x31ffffc9]; rol byte ptr [ebx - 0x362f43], cl; call dword ptr [eax]; 
0x001489ec: or byte ptr [esp + esi*2 - 7], 0xff; push eax; call 0x34e80; add esp, 0x10; add esp, 0xc; ret; 
0x000b95e6: or byte ptr ss:[eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00094e31: or ch, ah; sbb al, byte ptr [eax]; add byte ptr [ebp + 8], dh; xor eax, eax; pop ebx; ret; 
0x0003bf8e: or ch, bl; sbb al, 0x24; fld qword ptr [esp]; add esp, 8; ret; 
0x0003dff8: or ch, byte ptr [edx]; push dword ptr [esp + 0x1c]; call 0x4d7b0; add esp, 0x1c; ret; 
0x00152ef2: or ch, byte ptr [esi - 0x7c720002]; inc esp; mov cl, 0xf9; call dword ptr [eax - 0x73]; 
0x000d7684: or cl, 0xff; dec dword ptr [ebx - 0x365773]; dec dword ptr [ebp - 0x36177b]; dec dword ptr [edi]; xchg ebp, eax; ret 0x9d8b; 
0x0009043e: or cl, al; clc; add al, byte ptr [ebx + 0x28901e0]; xor eax, eax; ret; 
0x0003c0f2: or cl, bl; inc esp; and al, 4; mov dword ptr [eax], ecx; ret; 
0x0007f375: or cl, byte ptr [ebp + 0x889044a]; mov eax, dword ptr [edx]; ret; 
0x00196a05: or cl, byte ptr [ebx + 0x5b082444]; ret; 
0x0013a986: or cl, byte ptr [ebx + 0xfed852e]; test byte ptr [edi - 0x74ffffff], dl; push esi; or al, 0xf6; ret 0xf04; 
0x00086817: or cl, byte ptr [ebx - 0x2dcef3bf]; test eax, eax; setne dl; mov eax, edx; ret; 
0x001989a5: or cl, byte ptr [ebx - 0x74f7dbbc]; dec esp; and al, 0x10; add eax, ecx; pop ebx; ret; 
0x00034e15: or cl, byte ptr [ecx + 0xcc483d0]; ret; 
0x00064a24: or cl, byte ptr [ecx + 0xf542454]; xchg esp, eax; ret 0x748b; 
0x00103e91: or cl, byte ptr [ecx]; or byte ptr [ebx - 0x3d7cfb40], al; add al, 0x39; ret; 
0x00042f2e: or cl, byte ptr [edi]; mov bh, 0xc0; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x0008901d: or cl, byte ptr [edi]; mov dh, 0; pop ebx; pop esi; pop edi; ret; 
0x0003a6a7: or cl, byte ptr [edi]; mov dh, 0x44; xor eax, 0xfc08400; xchg ebp, eax; ret; 
0x00042e8d: or cl, byte ptr [edi]; mov dh, 0xc0; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x00096ca0: or cl, byte ptr [edi]; mov edi, 0x2ac85; add byte ptr [ecx], bh; ret 0x4f0f; 
0x00074f24: or cl, byte ptr [edi]; test byte ptr [0x83000001], al; ret 0x8904; 
0x000b95a5: or cl, byte ptr [edi]; test dword ptr [eax + ecx], esi; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000babe8: or cl, byte ptr [edi]; test dword ptr [ecx], esi; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b35a7: or cl, byte ptr [edi]; test dword ptr [edx + 2], edx; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0015dedc: or cl, byte ptr [edi]; xchg ebp, eax; ret 0xd120; 
0x00064cfe: or cl, byte ptr [edi]; xchg esp, eax; ret 0xc629; 
0x0009f332: or cl, byte ptr [esi - 1]; push dword ptr [ecx]; sar byte ptr [eax + 1], cl; call 0x9f2a0; mov dword ptr [esp], esi; call ebx; 
0x0007cce8: or cl, ch; cmp esi, -1; jmp dword ptr [esi - 0x70]; 
0x0012d05f: or cl, ch; mov ebx, 0x8dfffff5; jbe 0x12d068; ret; 
0x0015a314: or cl, ch; ret 0xfffe; 
0x00162661: or cl, ch; ret; 
0x000c2d5b: or cl, cl; jne 0xc2d61; xor eax, eax; ret; 
0x0009aa1d: or cl, dl; call 0xc03aacad; ret; 
0x000903de: or cl, dl; clc; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0015a0c2: or dh, 0x5e; stc; call dword ptr [eax + 0x55]; 
0x00122070: or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00121f6c: or dh, 0x80; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x001337a6: or dh, 1; mov ebx, 0x18; call dword ptr gs:[0x10]; 
0x00115b62: or dh, 8; mov ebp, dword ptr gs:[0x14]; mov dword ptr [esp + 0x18c], ebp; mov ebp, dword ptr [esp + 0x1b8]; call dword ptr gs:[0x10]; 
0x000906c7: or dh, bh; xor eax, eax; ret; 
0x0017903d: or dh, bl; call dword ptr [ebp - 0x73]; 
0x0016f5fb: or dh, bl; call dword ptr [edx + 0x6a]; 
0x0016f7c5: or dh, bl; call dword ptr [edx - 0x73]; 
0x0016f8e8: or dh, bl; jmp dword ptr [ebp - 0x75]; 
0x001a81f5: or dh, byte ptr [eax + ebx - 0x48]; add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x1a8201; neg eax; ret; 
0x000815f5: or dh, byte ptr [eax + edx + 0x39]; sal dword ptr [edx - 0xc], 1; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0008ea9a: or dh, byte ptr [ebp + 0x43]; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0009b9e0: or dh, byte ptr [ebp + 0xd]; xor eax, eax; pop ebx; ret; 
0x000c21b6: or dh, byte ptr [ebp + 4]; xor eax, eax; pop ebx; ret; 
0x0003b925: or dh, byte ptr [ebp + 8]; fadd st(0); add esp, 0x18; pop ebx; ret; 
0x0009b992: or dh, byte ptr [ebp - 0xf]; xor eax, eax; pop ebx; ret; 
0x000fd387: or dh, byte ptr [ecx + ebp - 0x7d]; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x001abae2: or dh, byte ptr [edx + 0x4b]; lea eax, [eax + 9]; pop edi; ret; 
0x001aaac2: or dh, byte ptr [edx + 0x4b]; lea eax, [edi + 9]; pop edi; ret; 
0x001a7e83: or dh, byte ptr [edx + ebx - 0x48]; add dword ptr [eax], eax; add byte ptr [eax], al; jg 0x1a7e90; neg eax; ret; 
0x0006845e: or dh, byte ptr [edx + ebx*8 - 0x7d]; mov ebp, 0xfffffa6c; dec dword ptr [edi]; xchg ebp, eax; ret; 
0x00099edf: or dh, byte ptr [edx + ecx*2 + 0x5b]; xor eax, eax; pop esi; pop edi; ret; 
0x001510f3: or dh, byte ptr [edx + edx + 0x31]; leave; mov eax, ecx; pop ebx; pop esi; ret; 
0x00074eaf: or dh, byte ptr [esi + ebp - 0x7d]; ret 0x8904; 
0x00099ddb: or dh, byte ptr [esi + ecx*2 + 0x5b]; xor eax, eax; pop esi; pop edi; ret; 
0x0008e637: or dh, byte ptr [esi + edx - 0x7d]; les eax, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x0015df99: or dh, byte ptr [esp + edx*8 - 0x7d]; ret 0x8014; 
0x00146b09: or dh, dh; dec dword ptr [ebx - 0x76ebdbbc]; ret 0x689; 
0x000d2dad: or dh, dh; ret 0xf04; 
0x001b4417: or dh, dh; ret 0xf07; 
0x000a144b: or dh, dh; ret 0xf0f; 
0x000a378f: or dh, dh; ret; 
0x001652ba: or dl, byte ptr [esi - 0x18]; call esp; 
0x000b927e: or dword ptr [0x3fc18100], ecx; cmp dl, byte ptr [ecx]; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b925e: or dword ptr [0x5fc18100], ecx; cmp dl, byte ptr [ecx]; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b9239: or dword ptr [0x84c18100], ecx; cmp dl, byte ptr [ecx]; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00103f2e: or dword ptr [eax + 0x2cd1d201], edx; and al, 0x83; ret; 
0x000c30a6: or dword ptr [eax + 0x3c90], 1; xor eax, eax; pop ebx; ret; 
0x0008b9a0: or dword ptr [eax + 0x3c], 0x80; mov eax, dword ptr [eax + 0x34]; test eax, eax; jne 0x8b9a0; ret; 
0x000a2253: or dword ptr [eax + 0x42], 0xfffffff9; call dword ptr [eax + 0x56]; 
0x000ef6eb: or dword ptr [eax + 0x47], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00158e05: or dword ptr [eax + 0x500000a0], 0xffffff8d; adc dword ptr [eax + 0x500000a0], -0x73; sub dword ptr [esi + ecx*2], -0xf; call dword ptr [eax - 0x73]; 
0x00143896: or dword ptr [eax + 0x59], 0xfffffff9; dec dword ptr [ebp - 0x68bb36d]; call dword ptr [eax - 0x77]; 
0x00133eda: or dword ptr [eax + 0x92], edi; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; call dword ptr gs:[0x10]; 
0x000906d0: or dword ptr [eax + 8], 1; xor eax, eax; ret; 
0x000908dc: or dword ptr [eax + 8], 8; mov dword ptr [eax + 0x10], edx; xor eax, eax; ret; 
0x00122d09: or dword ptr [eax + eax], edx; mov edx, 1; call dword ptr gs:[0x10]; 
0x00122d3a: or dword ptr [eax + eax], edx; mov edx, 1; mov edi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x001642ca: or dword ptr [eax + edx*2], 0xfffffff1; call dword ptr [eax - 0x73]; 
0x000607b4: or dword ptr [eax - 0x46], 0xfffffff8; inc dword ptr [ecx]; fidivr dword ptr [esi]; jmp edx; 
0x0012d4b7: or dword ptr [eax - 0x5b], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0011f9f0: or dword ptr [eax - 0x5d], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000ed820: or dword ptr [eax - 0x61], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x00084261: or dword ptr [eax - 4], 0xffffffff; call dword ptr [eax - 0x73]; 
0x0009401c: or dword ptr [eax - 7], eax; call dword ptr [eax - 0x18]; 
0x000980a5: or dword ptr [eax], 0x40000000; xor eax, eax; ret; 
0x00098080: or dword ptr [eax], 0x80000000; xor eax, eax; ret; 
0x0015ff58: or dword ptr [eax], eax; add byte ptr [eax + 0x56], dl; mov ecx, dword ptr [esp + 0x3c]; call ecx; 
0x00160093: or dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ebx; mov ch, 0xf9; call dword ptr [eax - 0x18]; 
0x0005c67f: or dword ptr [eax], eax; add byte ptr [eax - 0xcb43], al; jmp dword ptr [esi - 0x75]; 
0x000a1842: or dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx + 0x98486], cl; add byte ptr [ebp - 0x19e2937a], cl; call dword ptr [eax + 0x57]; 
0x001706f8: or dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 4], ecx; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x00132077: or dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00025870: or dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xffffffff; add esp, 0xc; ret; 
0x00084778: or dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xffffffff; ret; 
0x0011f0d1: or dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0010c972: or dword ptr [eax], eax; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x000cafc4: or dword ptr [eax], eax; add byte ptr [ebp + 0xff089ff], al; xchg ebp, eax; ret 0x6eb; 
0x000a184c: or dword ptr [eax], eax; add byte ptr [ebp - 0x19e2937a], cl; call dword ptr [eax + 0x57]; 
0x000a42cd: or dword ptr [eax], eax; add byte ptr [ebx + 0x390c246c], cl; fimul word ptr [ebp - 0x6af0d5fc]; ret; 
0x0006e258: or dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00066f2d: or dword ptr [eax], eax; add byte ptr [ebx - 0x58f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x00127086: or dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f714], al; dec si; stc; call dword ptr [eax + 0x55]; 
0x001b553e: or dword ptr [eax], eax; add byte ptr [ecx + 0x5c89111c], cl; adc dword ptr [ebx + eax*4], eax; ret 0x3908; 
0x0008f547: or dword ptr [eax], eax; add byte ptr [ecx + 0x92086], cl; add byte ptr [ecx], bh; ret 0x5c72; 
0x0013b32f: or dword ptr [eax], eax; add byte ptr [ecx - 0x11b43], cl; dec dword ptr [ebp - 0x9763]; jmp dword ptr [esi - 0x70]; 
0x000719b0: or dword ptr [eax], eax; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x448b; 
0x000a55d9: or dword ptr [eax], eax; add byte ptr [ecx - 0x9efdbbc], cl; ret 0xf04; 
0x0006eef7: or dword ptr [eax], eax; add byte ptr [ecx], al; ret; 
0x0008f54d: or dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x5c72; 
0x000a1eb0: or dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x001079fa: or dword ptr [eax], eax; add byte ptr [ecx], dh; shr cl, 8; idiv bh; jmp dword ptr [ebp - 0x5f]; 
0x000b947b: or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000a0d2a: or dword ptr [eax], eax; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00089d79: or dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x00060794: or dword ptr [ebp + 0x32], 0xfffffff9; call dword ptr [eax + 0x6a]; 
0x0013bfe3: or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x0002505f: or dword ptr [ebp + 0x33], esp; add eax, 0x18; jmp eax; 
0x0013f7e6: or dword ptr [ebp + 0x33], esp; add eax, 0x18; lea edx, [esp + 0x10]; push edx; push edi; call eax; 
0x0013f8c3: or dword ptr [ebp + 0x33], esp; add eax, 0x18; lea edx, [esp + 0x10]; push edx; push esi; call eax; 
0x0003ef4a: or dword ptr [ebp + 0x33], esp; add eax, 0x18; mov dword ptr [ebp + edi], edx; push dword ptr [ebx + 4]; call eax; 
0x000250ec: or dword ptr [ebp + 0x33], esp; add eax, 0x18; pop edi; pop ebp; jmp eax; 
0x0015732f: or dword ptr [ebp + 0x33], esp; add eax, 0x18; pop edi; pop ebp; ret; 
0x00156f81: or dword ptr [ebp + 0x33], esp; add eax, 0x18; push eax; call edx; 
0x0013c012: or dword ptr [ebp + 0x33], esp; add eax, 0x18; push esi; call eax; 
0x0003f321: or dword ptr [ebp + 0x33], esp; add eax, 0x18; xchg dword ptr [edi], edx; cmp edx, 1; jg 0x3f3f0; call eax; 
0x000b957d: or dword ptr [ebp - 0x7af0f681], ecx; cdq; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b3582: or dword ptr [ebp - 0x7af0f6b6], ecx; je 0xb358c; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x00123d10: or dword ptr [ebx + 0x4a], 0xfffffff9; call dword ptr [eax + 0x6a]; 
0x000df71e: or dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x000a7e66: or dword ptr [ebx + 0x5e5b0cc4], eax; pop edi; pop ebp; ret; 
0x00179836: or dword ptr [ebx + 0x5e5b1cc4], eax; pop edi; pop ebp; ret; 
0x0015c87b: or dword ptr [ebx + 0x5e], ebx; and edx, 0xf; mov eax, edx; ret; 
0x00132ae6: or dword ptr [ebx + 0x5e], ebx; pop edi; pop ebp; ret; 
0x0010ce03: or dword ptr [ebx + 0x66042444], ecx; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x001a3157: or dword ptr [ebx + ebx*4 - 0x37d60009], 0x5b; ret; 
0x001a5964: or dword ptr [ebx + ebx*4 - 0x37d60009], 0x5d; pop ebx; ret; 
0x000942c6: or dword ptr [ebx - 0x2708fb3c], eax; pop ebx; pop esi; ret; 
0x000a6518: or dword ptr [ebx - 0x2776c73c], eax; pop ebx; ret 4; 
0x00055773: or dword ptr [ebx - 0x2776d73c], eax; pop ebx; ret 4; 
0x000d9b61: or dword ptr [ebx - 0x3f7afb3e], eax; jne 0xd9b5c; xor edx, edx; mov eax, edx; ret; 
0x001479df: or dword ptr [ebx - 0x72dfdba4], ecx; cmp dword ptr [edi], 0x5a; stc; call dword ptr [eax + 0x51]; 
0x0016007f: or dword ptr [ebx - 0x72efdb84], 0xf9b57487; call dword ptr [eax - 0x73]; 
0x00105ea2: or dword ptr [ebx - 0x76f30d8c], 0x830cc274; rol byte ptr [ecx], 0x39; ret; 
0x0011f71e: or dword ptr [ebx - 0x77], ebx; rcr byte ptr [esi + 0x5f], 1; ret; 
0x0003e4fb: or dword ptr [ebx - 0x7af0f206], eax; mov eax, 0x29fffffc; ret; 
0x0005d360: or dword ptr [ebx - 0x7bf09908], eax; ret; 
0x001269b2: or dword ptr [ebx - 0x7c76fb40], eax; mov al, byte ptr [0x83000045]; les ecx, ptr [eax]; mov eax, edx; pop ebx; ret; 
0x00174630: or dword ptr [ebx - 0xa9f314], eax; rol byte ptr [ebx - 0x137cef3c], 1; or byte ptr [ebp - 0xcab637d], cl; call dword ptr [eax - 0x73]; 
0x0017709e: or dword ptr [ebx - 0xaaf314], eax; rol byte ptr [ebx - 0x137cef3c], 1; or byte ptr [ebp - 0xc80437d], cl; call dword ptr [eax - 0x73]; 
0x001271f9: or dword ptr [ebx], 0x51; stc; call dword ptr [edx + 0x52]; 
0x00138ff8: or dword ptr [ebx], 0x56; stc; call dword ptr [eax + 0x56]; 
0x001243d7: or dword ptr [ebx], 0x56; stc; call dword ptr [eax + 0x6a]; 
0x0003cb8e: or dword ptr [ecx + 0x114c4], eax; add byte ptr [ebx + 0x5f], bl; ret; 
0x0003c638: or dword ptr [ecx + 0x124c4], eax; add byte ptr [ebx + 0x5e], bl; ret; 
0x00024bd1: or dword ptr [ecx + 0x1a5090], ecx; add byte ptr [ebx + 0x5e], bl; ret; 
0x000c2bdd: or dword ptr [ecx + 0x42], eax; test al, al; jne 0xc2bd8; xor eax, eax; ret; 
0x00141fce: or dword ptr [ecx + 0x4e0c1d8], ecx; lea eax, [edx + eax + 8]; pop ebx; ret; 
0x00189ec6: or dword ptr [ecx + 0x5f5e5bf8], ecx; ret; 
0x0003cd22: or dword ptr [ecx + 0x94c4], eax; add byte ptr [ebx + 0x5f], bl; ret; 
0x000907d0: or dword ptr [ecx + 8], 0x40; xor eax, eax; mov dword ptr [ecx + 4], edx; ret; 
0x0009b36f: or dword ptr [ecx + eax*8], 0xffffffe5; call dword ptr [eax - 1]; 
0x00152f0a: or dword ptr [ecx + esi*4], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0014c6cc: or dword ptr [ecx + esi*8 - 0x7c], esi; ror byte ptr [eax + 0xf10244c], 0x94; ret 0xa3c; 
0x0014c89c: or dword ptr [ecx + esi*8 - 0x7d], esi; in al, dx; or byte ptr [ebp - 0x6d1a87b], cl; call dword ptr [eax + 0x53]; 
0x00189439: or dword ptr [ecx - 0x76dbdbbc], ecx; ret; 
0x00156bdd: or dword ptr [ecx - 0x7cfb6cbc], ecx; ret 0x8301; 
0x00147581: or dword ptr [ecx], 0x5a; stc; call dword ptr [eax - 0x18]; 
0x000e7888: or dword ptr [ecx], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012052b: or dword ptr [ecx], eax; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x54]; mov eax, 0x19e; mov edi, 8; call dword ptr gs:[0x10]; 
0x0013be16: or dword ptr [ecx], edi; dec eax; add al, 0x75; hlt; mov eax, dword ptr [eax + 0x18]; ret; 
0x000a6f98: or dword ptr [ecx], edi; ret 0x3374; 
0x00185cc4: or dword ptr [ecx], edi; ret 0x430f; 
0x001818cf: or dword ptr [ecx], edi; ret; 
0x000bb0d0: or dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x0016577a: or dword ptr [edi + 0x61], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0016590d: or dword ptr [edi + 0x61], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x00188e1b: or dword ptr [edi + 0xf], esi; mov eax, edx; mov edx, dword ptr [ecx + 0x108]; shl eax, 5; lea eax, [eax + edx + 0x5c]; ret; 
0x0019b6b0: or dword ptr [edi + 3], ebx; sbb al, 0x8b; jmp ebx; 
0x0003f541: or dword ptr [edi + ebp], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0013f06a: or dword ptr [edi], ecx; inc esi; ret 0xbe0f; 
0x00152834: or dword ptr [edi], ecx; lahf; ret; 
0x0010986d: or dword ptr [edi], ecx; mov dh, 0xc; or ecx, dword ptr [eax - 0x3f7cf8f4]; add dword ptr [ecx], edi; ret 0x2a7e; 
0x00042d0b: or dword ptr [edi], ecx; mov ebp, 0x1ff083c0; add eax, 1; ret; 
0x00043186: or dword ptr [edi], ecx; mov ebp, 0x1ff083c0; lea edx, [eax - 0x10]; mov eax, edx; ret; 
0x000430d6: or dword ptr [edi], ecx; mov ebp, 0x1ff083c0; lea edx, [eax - 0x18]; mov eax, edx; ret; 
0x000b9580: or dword ptr [edi], ecx; test dword ptr [ecx + 0x5f000008], ebx; pop esi; pop ebx; ret; 
0x000b3585: or dword ptr [edi], ecx; test dword ptr [edx + eax], esi; add byte ptr [edi + 0x5b], bl; ret; 
0x000e047a: or dword ptr [edi], ecx; xchg dword ptr [edi - 0x7c00000a], ebx; ret; 
0x000e0c8b: or dword ptr [edi], ecx; xchg dword ptr [esi - 0x7c000012], ecx; ret; 
0x00038dd1: or dword ptr [edi], ecx; xchg esi, eax; ret 0xb60f; 
0x001354e7: or dword ptr [edi], ecx; xchg esi, eax; ret; 
0x0012be24: or dword ptr [edi], edi; stc; call dword ptr [eax + 0x6a]; 
0x00126f9a: or dword ptr [edx + 0x4c], 0xfffffff9; call dword ptr [eax + 0x55]; 
0x001abad2: or dword ptr [edx + 0x5b], esi; lea eax, [eax + 8]; pop edi; ret; 
0x001aaab2: or dword ptr [edx + 0x5b], esi; lea eax, [edi + 8]; pop edi; ret; 
0x000908c1: or dword ptr [edx + 8], 8; mov dword ptr [edx + 0x10], eax; mov eax, ecx; ret; 
0x00189c90: or dword ptr [edx + eax*4], ebx; xor eax, eax; pop ebx; ret; 
0x0003d168: or dword ptr [edx + ebx*4], eax; xor eax, eax; pop ebx; ret; 
0x00060fe3: or dword ptr [edx + ebx], 0; add byte ptr [ebp + 0x314574c0], al; jmp dword ptr [esi - 0x70]; 
0x0014c181: or dword ptr [edx + ecx - 0x7d], esi; ret; 
0x00153f3e: or dword ptr [edx + esi*4], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x00147582: or dword ptr [edx - 7], ebx; call dword ptr [eax - 0x18]; 
0x00161803: or dword ptr [edx], 0; add byte ptr [eax - 0x73], dl; or esp, 0x4e; int1; call dword ptr [eax - 0x73]; 
0x0012e413: or dword ptr [esi + 0x5b], ebx; jl 0x24f50; ret; 
0x000c1783: or dword ptr [esi + 0xf], esp; xlatb; ret 0xc085; 
0x001aad43: or dword ptr [esi + 0xf], esp; xlatb; rol dword ptr [ebp + 0x30850fc0], 2; add byte ptr [eax], al; xor eax, eax; ret; 
0x000c17f3: or dword ptr [esi + 0xf], esp; xlatb; rol dword ptr [ebp + 0x317475c0], 0xc0; ret; 
0x0007c0fc: or dword ptr [esi], 0x20; add esp, 4; pop ebx; pop esi; ret; 
0x0008d93a: or dword ptr [esi], 0x3f; stc; call dword ptr [ecx + 0x52]; 
0x00156c40: or dword ptr [esi], 0x44ec8100; add dword ptr [eax], eax; add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0008d123: or dword ptr [esi], 8; add esp, 0x14; pop ebx; pop esi; ret; 
0x000ea117: or dword ptr [esi], ebp; lea esi, [esi]; hlt; mov eax, edx; call dword ptr gs:[0x10]; 
0x0002889a: or dword ptr [esp + ebp*2], 0xfffffff9; call dword ptr [eax + 0x68]; 
0x000287dc: or dword ptr [esp + ebp*2], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x00121cc9: or dword ptr [esp + esi - 0x75], esi; pop esp; and al, 0x20; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x001416ea: or eax, 0x1175c085; mov eax, ebx; pop ebx; ret; 
0x0002553c: or eax, 0x14; jne 0x25547; add esp, 0x1c; ret; 
0x000dba5d: or eax, 0x14; jne 0xdba69; add esp, 0x28; pop ebx; ret; 
0x000e8c61: or eax, 0x14; mov dword ptr [esp + 0x13c], ecx; mov ecx, dword ptr [esp + 0x164]; call dword ptr gs:[0x10]; 
0x000b941f: or eax, 0x1fc18100; cmp dword ptr [ecx], edx; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b35f9: or eax, 0x200850f; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x00097f70: or eax, 0x2890f00; xor eax, eax; ret; 
0x000b927f: or eax, 0x3fc18100; cmp dl, byte ptr [ecx]; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b93ff: or eax, 0x3fc18100; cmp dword ptr [ecx], edx; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000a634c: or eax, 0x402448b; sub ecx, 4; and eax, 1; cmovne eax, ecx; pop ebx; ret; 
0x001abb02: or eax, 0x408d2b72; or al, 0x5f; ret; 
0x00186922: or eax, 0x4245489; jmp dword ptr [eax + 0x30]; 
0x001aaae2: or eax, 0x478d2b72; or al, 0x5f; ret; 
0x00070b5b: or eax, 0x4c890000; and al, 4; mov dword ptr [esp + 0x48], 1; jmp eax; 
0x00176696: or eax, 0x50fff956; push 0; call 0x79a90; add esp, 0x18; pop ebx; ret; 
0x000408f2: or eax, 0x5b04c483; pop esi; ret; 
0x0013ac62: or eax, 0x5b08c483; ret; 
0x001718f6: or eax, 0x5b2cc483; pop esi; pop edi; pop ebp; ret; 
0x00123601: or eax, 0x5b54c483; pop esi; ret; 
0x000b93e2: or eax, 0x5cc18100; cmp dword ptr [ecx], edx; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0016ec6a: or eax, 0x5e5bc031; pop edi; ret; 
0x001575ac: or eax, 0x5e; add byte ptr [eax], al; add bh, al; cmp dword ptr [eax + 0x5e], 0; add byte ptr [eax], al; call esi; 
0x00172d8a: or eax, 0x5ec0315b; pop edi; ret; 
0x000bb351: or eax, 0x5f1d478d; pop esi; pop ebx; ret; 
0x000b925f: or eax, 0x5fc18100; cmp dl, byte ptr [ecx]; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b9c58: or eax, 0x77f0ff3; movdqu xmmword ptr [edi + 0xd], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b9343: or eax, 0x7bc18100; cmp dword ptr [ecx], edx; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000c0deb: or eax, 0x7f0ff3; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd928: or eax, 0x7f0ff3; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c5d0c: or eax, 0x81000c3f; ret; 
0x000baa20: or eax, 0x81000cf2; sar dword ptr [esp + 0x11], 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00088c0c: or eax, 0x81001010; ret; 
0x000b9607: or eax, 0x812850f; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x001a7d0c: or eax, 0x81fffe1f; ret; 
0x000bd931: or eax, 0x824448b; pop esi; ret; 
0x0007b29f: or eax, 0x83000001; in al, dx; or byte ptr [ebp + 0x50082444], cl; push esi; call dword ptr [ebx + 0x48]; 
0x000e12b0: or eax, 0x8302b60f; ret; 
0x001303cf: or eax, 0x83fffef3; les esp, ptr [eax]; add esp, 0xc; ret; 
0x000b923a: or eax, 0x84c18100; cmp dl, byte ptr [ecx]; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0005343f: or eax, 0x85fffffb; ror byte ptr [edi], 0x94; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x000a56bd: or eax, 0x878d0000; jnp 0xa5705; stc; call dword ptr [eax - 0x73]; 
0x0006293c: or eax, 0x8901e683; ret; 
0x000b93b5: or eax, 0x89c18100; cmp dword ptr [ecx], edx; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000bac7a: or eax, 0x89f850f; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00132acd: or eax, 0x8b000000; dec esp; and al, 0x14; mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0016f378: or eax, 0x8b0cec83; push eax; add al, 0x50; call dword ptr [edx + 0x10]; 
0x0019b8f0: or eax, 0x8b1c035f; jmp ebx; 
0x000a4ec2: or eax, 0x8d500000; xchg eax, esi; xchg ebp, eax; stc; call dword ptr [eax - 0x18]; 
0x000b939e: or eax, 0xa0c18100; cmp dword ptr [ecx], edx; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00042891: or eax, 0xb801e983; add al, byte ptr [eax]; add byte ptr [eax], al; bsr ecx, ecx; shl eax, cl; ret; 
0x000b9383: or eax, 0xbbc18100; cmp dword ptr [ecx], edx; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000c0df4: or eax, 0xc24448b; pop ebx; pop esi; ret; 
0x00198e58: or eax, 0xc381ffff; push ebp; sub al, 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000f5165: or eax, 0xc4830002; adc byte ptr [ebp - 0x74be8b40], al; test dword ptr [edx + edi*8 - 1], edx; jmp dword ptr [ebp - 0x75]; 
0x000c4c55: or eax, 0xc4830007; adc byte ptr [ebp + 0x29d975db], al; ret; 
0x0014177b: or eax, 0xc483fff8; adc byte ptr [ebp + 0x5e5b3e04], cl; pop edi; ret; 
0x0018cdc6: or eax, 0xc6850f02; adc eax, dword ptr [eax]; add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x0009a73a: or eax, 0xc6b83f0; add dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x000b436b: or eax, 0xcd840f00; idiv bh; jmp dword ptr [esi + 0xf]; 
0x001b4030: or eax, 0xd5c8900; add al, 0x83; ror dword ptr [eax], 0x39; sal dword ptr [edx - 0xf], 0xe9; ret 0x11; 
0x000f8f36: or eax, 0xd6850f02; adc eax, dword ptr [eax]; add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x000b9361: or eax, 0xddc18100; cmp dword ptr [ecx], edx; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00182cb7: or eax, 0xec830000; or byte ptr [ebp - 0x6995745], cl; call dword ptr [edi + 0x56]; 
0x00183523: or eax, 0xec830000; or byte ptr [ebp - 0x699574d], cl; call dword ptr [esi + 0x57]; 
0x000b35f6: or eax, 0xf0d4a8d; test dword ptr [eax], eax; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x000bac77: or eax, 0xf0d7f8d; test dword ptr [edi + 0x5f000008], ebx; pop esi; pop ebx; ret; 
0x000b9604: or eax, 0xf0d7f8d; test dword ptr [edx], edx; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000f5616: or eax, 0xf6850f02; adc eax, dword ptr [eax]; add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x000b9444: or eax, 0xfac18100; cmp byte ptr [ecx], dl; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00098ce1: or eax, 0xff087b81; leave; lcall 1, 0x39870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x00098f64: or eax, 0xff087e81; leave; lcall 0, 0xc6870f3b; add byte ptr [ebx - 0x5e9ae3a9], cl; push 0x39000000; ret 0x6974; 
0x0017cffd: or eax, 0xff3fffc; push ds; sti; xor eax, eax; ret; 
0x0003b9a4: or eax, 0xffff8000; inc eax; shr eax, 0x1f; ret; 
0x0010acdf: or eax, 0xffff845; mov dh, 0x45; sbb al, 0x89; ret 0xeac0; 
0x0009f781: or eax, 0xffffff89; stc; call dword ptr [eax - 0x18]; 
0x0010ea20: or eax, 0xffffffa1; stc; call dword ptr [eax - 0x18]; 
0x00153d5e: or eax, 0xffffffb1; stc; call dword ptr [eax - 0x73]; 
0x0015cfa4: or eax, 0xffffffb4; stc; call dword ptr [eax - 0x18]; 
0x00157b1b: or eax, 1; pop esi; pop edi; pop ebp; ret; 
0x000605b0: or eax, 7; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x0008e90a: or eax, dword ptr [0x548b001b]; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x298], edx; ret; 
0x0019b19c: or eax, dword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000acfc1: or eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000eab5e: or eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0009b9b0: or eax, dword ptr [eax]; add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; ret; 
0x001328de: or eax, dword ptr [eax]; add byte ptr [eax], al; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x00170712: or eax, dword ptr [eax]; add byte ptr [eax], al; pop ebx; ret; 
0x0012713f: or eax, dword ptr [eax]; add byte ptr [ebp - 0x6b0087d], cl; call dword ptr [edx + 0x52]; 
0x00147bc9: or eax, dword ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00080237: or eax, dword ptr [eax]; add byte ptr [ebx - 0x3b7cef3c], al; add al, 0x5b; pop esi; ret; 
0x00071740: or eax, dword ptr [eax]; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x448b; 
0x0014fc4b: or eax, dword ptr [eax]; add byte ptr [ecx - 0x7c8bdbbc], cl; ret; 
0x00063126: or eax, dword ptr [eax]; add byte ptr [edi], cl; mov esi, 0x89c68900; ret 0x44c7; 
0x00042210: or eax, dword ptr [eax]; add dword ptr [eax], eax; xor eax, eax; ret; 
0x0006169e: or eax, dword ptr [eax]; add esp, 0x1c; ret; 
0x001abc2e: or eax, dword ptr [eax]; je 0x1abcb2; mov eax, 0xc; pop edi; ret; 
0x0012f207: or eax, dword ptr [ebx + 0x567426fa]; pop ebx; pop esi; ret; 
0x000810c8: or eax, dword ptr [ebx + 0x5e5b04c4]; ret; 
0x0008e69c: or eax, dword ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x001705c4: or eax, dword ptr [ebx - 0x3fcefb3c]; pop ebx; pop esi; ret; 
0x000806f4: or eax, dword ptr [ecx + 0x14cc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0018491e: or eax, dword ptr [ecx + 0x1bcc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0003cb09: or eax, dword ptr [ecx + 0x9cc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0005b040: or eax, dword ptr [ecx + 0xbcc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0005b148: or eax, dword ptr [ecx + 0xccc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000e7d98: or eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e7cea: or eax, dword ptr [ecx]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x54]; mov edx, edi; call dword ptr gs:[0x10]; 
0x0003bae6: or eax, ecx; ret; 
0x0003c11d: or eax, ecx; sar eax, 0x1f; not eax; and eax, edx; ret; 
0x0017a414: or eax, edi; add eax, dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0014210d: or eax, edx; bswap eax; mov dword ptr [ecx], eax; mov eax, ecx; ret 4; 
0x0007c28d: or eax, edx; mov dword ptr [ebx], eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x00122845: or eax, edx; mov dword ptr [ecx + 8], eax; xor eax, eax; pop ebx; ret; 
0x000928cd: or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x00055163: or eax, edx; mov dword ptr [esp + 4], eax; fld qword ptr [esp]; add esp, 0xc; ret; 
0x0005519a: or eax, edx; mov dword ptr [esp], eax; fld dword ptr [esp]; add esp, 4; ret; 
0x0013288f: or eax, edx; mov edx, dword ptr [esp + 0x6c]; sub edx, dword ptr gs:[0x14]; jne 0x1328a2; add esp, 0x7c; ret; 
0x00192c1f: or eax, edx; pop ebx; movzx eax, al; neg eax; ret; 
0x0010cc55: or eax, edx; pop ebx; ret; 
0x001287a3: or eax, edx; ret; 
0x000980f8: or eax, edx; xor edx, edx; mov dword ptr [ecx], eax; mov eax, edx; ret; 
0x0012881c: or eax, esi; pop esi; pop edi; ret; 
0x00172f3b: or ebp, 0xc483fffa; adc byte ptr [ebp - 0x7077f040], al; add byte ptr [eax], al; add al, ch; int1; ret 0xfff7; 
0x0018400a: or ebp, dword ptr [esi - 0x137cfff5]; adc al, 0xff; je 0x184038; sbb byte ptr [ebp - 0x6993b80], cl; call dword ptr [eax - 0x18]; 
0x000e8212: or ebp, eax; push 0x89fffffc; ret 0xc085; 
0x00112f4d: or ebp, ebx; jo 0x112ed4; ret; 
0x001262be: or ebx, 0x4a; stc; call dword ptr [eax - 0x18]; 
0x0010d97e: or ebx, 0xffffffff; or edx, 0xffffffff; mov ecx, eax; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x00133694: or ebx, dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x00061334: or ebx, dword ptr [ebx + 0x5e]; pop edi; ret; 
0x000bb110: or ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x0019b7d0: or ebx, dword ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x0010e342: or ecx, 0x48; stc; call dword ptr [eax - 0x18]; 
0x00126f13: or ecx, 0x4c; stc; call dword ptr [eax + 0x55]; 
0x00109871: or ecx, dword ptr [eax - 0x3f7cf8f4]; add dword ptr [ecx], edi; ret 0x2a7e; 
0x000b39e2: or ecx, dword ptr [ebp - 0x7af0f4b6]; adc eax, 0x5bfffffe; ret; 
0x000aa9bb: or ecx, dword ptr [ebp - 0x7cffd98c]; ret 0x3901; 
0x0002813b: or ecx, dword ptr [ebp - 0x7cffd98c]; ret; 
0x00057b60: or ecx, dword ptr [ebx - 0x36737b]; inc dword ptr [ecx]; ret 0xbe0f; 
0x000e9f79: or ecx, dword ptr [ecx - 0x16fbdbbc]; fnsave dword ptr [eax]; cld; jmp dword ptr [esi - 0x70]; 
0x000e8859: or ecx, dword ptr [ecx - 0x16fbdbbc]; lodsd eax, dword ptr [esi]; sbb bh, ah; jmp dword ptr [esi - 0x70]; 
0x0009998f: or ecx, dword ptr [ecx - 0x76f3dbac]; ret 0xca81; 
0x0009924f: or ecx, dword ptr [ecx - 0x76f7dbac]; ret 0xca81; 
0x000a67fc: or ecx, dword ptr [edi]; inc esi; ret 0x8388; 
0x000b39e5: or ecx, dword ptr [edi]; test dword ptr [0x5bfffffe], edx; ret; 
0x000bac16: or ecx, dword ptr [edi]; test dword ptr [ebx], eax; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b35d5: or ecx, dword ptr [edi]; test dword ptr [edx + eax], esp; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x00098074: or edi, dword ptr [eax + 0x16]; ret; 
0x000a0af0: or edi, dword ptr [eax + 8]; cmova eax, edx; mov byte ptr [ecx + 0x3c38], al; ret; 
0x0017caf8: or edi, dword ptr [ecx + 1]; mov dword ptr [eax + 0xc], edx; mov eax, ecx; pop ebx; ret; 
0x000fb219: or edi, dword ptr [edx + 0x20]; cmovne eax, edx; ret; 
0x0014190b: or edi, eax; inc dword ptr [ebx + 0x48d10c4]; pop ebx; pop esi; pop edi; ret; 
0x0013342c: or edi, ebp; je 0x133490; mov ebx, dword ptr [esp + 0x50]; mov ecx, dword ptr [esp + 8]; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x001992e5: or edi, edi; inc dword ptr [ecx + 0x427c8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019921e: or edi, edi; inc dword ptr [ecx + 0x4288fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001990be: or edi, edi; inc dword ptr [ecx + 0x429efc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00199025: or edi, edi; inc dword ptr [ecx + 0x42a88c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001ac1c6: or edi, esi; fcomp dword ptr [edi + 0x5e]; pop ebx; ret; 
0x000d97a6: or edi, esi; fcomp dword ptr [edi + 0x5e]; ret; 
0x00042f6e: or edi, esi; sal bl, 1; bsf eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x00122e82: or edx, 0x30; mov dword ptr [eax + 8], edx; mov edx, 0x100; mov word ptr [eax + 0x16], dx; ret; 
0x0010d981: or edx, 0xffffffff; mov ecx, eax; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x000913f8: or edx, 2; call dword ptr gs:[0x10]; 
0x00122dec: or edx, dword ptr [eax + eax]; push dword ptr [esp + 0x1c]; call 0x1283c0; add esp, 0x1c; ret; 
0x001271fa: or edx, dword ptr [ecx - 7]; call dword ptr [edx + 0x52]; 
0x00138ff9: or edx, dword ptr [esi - 7]; call dword ptr [eax + 0x56]; 
0x001243d8: or edx, dword ptr [esi - 7]; call dword ptr [eax + 0x6a]; 
0x000fb217: or edx, eax; or edi, dword ptr [edx + 0x20]; cmovne eax, edx; ret; 
0x001228ad: or edx, ecx; mov dword ptr [eax + 8], edx; xor eax, eax; pop ebx; ret; 
0x0019be3b: or edx, edi; jmp dword ptr [esi - 0x70]; 
0x000decde: or edx, edi; mov dword ptr [0xc2920f00], eax; add edx, 0x16d; mov eax, edx; ret; 
0x00024f13: or esi, 0x28; stc; call dword ptr [eax - 1]; 
0x000288ad: or esi, 0x2a; stc; call dword ptr [eax - 0x18]; 
0x00158ee3: or esi, 0x5e; stc; call dword ptr [eax - 0x18]; 
0x001642d1: or esi, 0x60; stc; call dword ptr [eax - 0x18]; 
0x00164484: or esi, 0x60; stc; call dword ptr [eax - 0x73]; 
0x0003bcc4: or esi, dword ptr [ebp + 9]; fadd st(0); add esp, 0x18; pop ebx; ret; 
0x001abaf2: or esi, dword ptr [edx + 0x3b]; lea eax, [eax + 0xa]; pop edi; ret; 
0x001aaad2: or esi, dword ptr [edx + 0x3b]; lea eax, [edi + 0xa]; pop edi; ret; 
0x000953bd: or esi, dword ptr [esp - 0x77]; ret 0xd5e9; 
0x00128818: or esi, eax; xor eax, eax; or eax, esi; pop esi; pop edi; ret; 
0x0016fc58: or esi, ebx; call dword ptr [esi - 0x73]; 
0x00042dce: or esi, edi; ror byte ptr [edi], 1; mov ebp, 0x1ff083c0; lea edx, [eax + 1]; mov eax, edx; ret; 
0x00149d5b: or esi, esi; ret 0xf02; 
0x000dfa7e: or esi, esi; ret; 
0x0016180a: or esp, 0x4e; int1; call dword ptr [eax - 0x73]; 
0x001270c3: or esp, 0x4e; stc; call dword ptr [eax + 0x55]; 
0x00166e01: or esp, 0x61; stc; call dword ptr [eax - 0x18]; 
0x00166fa2: or esp, 0x61; stc; call dword ptr [eax - 0x73]; 
0x0014bf0b: or esp, 0xffffffae; stc; call dword ptr [eax - 0x73]; 
0x00128433: out 0, al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00124903: out 0, eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001a6e9b: out 0, eax; add byte ptr [eax], al; pop ebx; ret; 
0x001556f4: out 0x21, eax; ret; 
0x000876b5: out 0x3a, eax; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x001934ea: out 0x42, eax; jo 0x19346f; ret 0x80; 
0x0006dc66: out 0x49, al; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0011455f: out 0x49, al; stc; call dword ptr [eax - 0x18]; 
0x0007f198: out 0x49, eax; cli; jmp dword ptr [esi - 0x70]; 
0x001271e0: out 0x50, eax; stc; call dword ptr [ecx + 0x51]; 
0x00122dd5: out 0x55, eax; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00122cd6: out 0x56, al; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0014c038: out 0x5b, eax; pop esi; pop edi; ret; 
0x00033442: out 0x67, eax; adc eax, 0xcec58100; mov ecx, 0x31570020; call dword ptr [esi - 0x42]; 
0x00152d05: out 0x76, eax; hlt; dec dword ptr [ebp - 0xec5b37d]; call dword ptr [esi + 0x50]; 
0x0008f808: out 0x81, eax; ret; 
0x00036489: out 0x83, al; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0008f8a3: out 0x83, eax; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00074f38: out 0x83, eax; ret; 
0x00025907: out 0x89, al; ret 0x25; 
0x00137b17: out 0x89, al; ret; 
0x000259a7: out 0x89, eax; ret 0x25; 
0x00099e10: out 0x89, eax; ret 0xe283; 
0x000538b0: out 0x89, eax; ret; 
0x000480b5: out 0x89, eax; rol byte ptr [ebx - 0x173e031e], 1; add al, byte ptr [ecx]; ret 0x448b; 
0x000e60da: out 0x89, eax; rol byte ptr [ebx - 0x173e031e], 1; add al, byte ptr [ecx]; ret 0xd729; 
0x000d64db: out 0x89, eax; rol byte ptr [ebx - 0x173e031e], 1; add al, byte ptr [ecx]; ret 0xd889; 
0x000fbaf4: out 0x8d, eax; jbe 0xfbaf8; lea eax, [ecx + 1]; pop ebx; pop esi; ret; 
0x00114a75: out 0xad, eax; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00192515: out 0xb7, eax; cli; jmp dword ptr [esi - 0x70]; 
0x00182515: out 0xb7, eax; sti; jmp dword ptr [esi - 0x70]; 
0x00185209: out 0xb8, al; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; ret; 
0x000bb5a9: out 0xc, al; add byte ptr [ecx + 0x111984c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000bb596: out 0xc, al; add byte ptr [ecx + 0x111997c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000bb57a: out 0xc, al; add byte ptr [ecx + 0x1119b3c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00142446: out 0xef, al; int1; inc dword ptr [ebx - 0x2776d73c]; pop ebx; ret; 
0x00194c9b: out 0xf, eax; je 0x194cb0; call 0x189c1d; add ebx, 0x46a8c; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00196c9b: out 0xf, eax; je 0x196cb0; call 0x189c1d; add ebx, 0x44d0c; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00198c8d: out 0xf, eax; je 0x198cb0; call 0x189c1d; add ebx, 0x42f9a; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0019aed0: out 0xf, eax; je 0x19aef0; call 0x189c1d; add ebx, 0x40f17; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0019beb0: out 0xf, eax; je 0x19bed0; call 0x189c1d; add ebx, 0x400f7; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0019ceb0: out 0xf, eax; je 0x19ced0; call 0x189c1d; add ebx, 0x3f2b7; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x000a7666: out 0xf4, al; std; jmp dword ptr [esi - 0x70]; 
0x000e0355: out 0xf8, al; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x00123e50: out 0xf9, al; dec dword ptr [ebx + 0x314c2444]; ror byte ptr [ebx + 0xfc08500], cl; dec eax; ret 0xc483; 
0x00095928: out 0xf9, eax; dec dword ptr [ebp - 0x692937f]; call dword ptr [eax - 0x73]; 
0x00095966: out 0xf9, eax; jmp dword ptr [esi - 0x70]; 
0x0017f688: out 0xfb, al; jmp dword ptr [esi - 0x70]; 
0x0014f6fd: out 0xfe, al; dec dword ptr [ebx - 0x72f7db8c]; xchg byte ptr [edi + ebp*4 - 7], bl; call dword ptr [eax - 0x73]; 
0x000e1dc8: out 0xff, al; call dword ptr [edi + 0x57]; 
0x0004d503: out 0xff, al; dec dword ptr [ebx - 0x72e7db84]; xchg dword ptr [eax + 0x78], ebx; stc; call dword ptr [eax - 0x73]; 
0x00188cbd: out 0xff, al; dec dword ptr [ebx - 0x76f7dbb4]; ret 0xd2e9; 
0x0015fca7: out 0xff, al; jmp dword ptr [ebp - 0x75]; 
0x0013e0ef: out 0xff, al; jmp dword ptr [esi - 0x70]; 
0x000e1d47: out 0xff, eax; call dword ptr [ebp + 0x55]; 
0x000e737b: out 0xff, eax; call dword ptr [ebx + 0x57]; 
0x000ac383: out 0xff, eax; cmove eax, edx; ret; 
0x000591c3: out 0xff, eax; dec dword ptr [ebx - 0x36477b]; jmp dword ptr [ebp - 0x75]; 
0x000d8444: out 0xff, eax; inc dword ptr [ebx - 0x6274fb14]; ror cl, 0xff; call dword ptr [esi + 0x6a]; 
0x00024a49: out 0xff, eax; jmp dword ptr [esi - 0x70]; 
0x000a95ae: out 0xff, eax; test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x17bea4]; cmove eax, edx; ret; 
0x000a956e: out 0xff, eax; test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x17bf34]; cmove eax, edx; ret; 
0x000ab4ce: out 0xff, eax; test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x17c2d4]; cmove eax, edx; ret; 
0x000aa11e: out 0xff, eax; test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x17c804]; cmove eax, edx; ret; 
0x000ac33e: out 0xff, eax; test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x17dec4]; cmove eax, edx; ret; 
0x000ac3be: out 0xff, eax; test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x18ed84]; cmove eax, edx; ret; 
0x00187ceb: out 3, al; pop eax; adc al, 0x39; fimul word ptr [edi]; xchg edx, eax; ret; 
0x000dfa6c: out 4, al; add al, 0x66; cmp esi, 0x840f0400; mov edi, 0xf600001d; ret; 
0x000c29ee: out dx, al; add al, 0x83; out dx, al; add al, 0xf7; ret 0; 
0x000c29f1: out dx, al; add al, 0xf7; ret 0; 
0x0017e80e: out dx, al; add byte ptr [eax], al; add byte ptr [ebx - 0x9f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000c148e: out dx, al; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x001373c7: out dx, al; add dword ptr [ebx - 0x2b], esi; add esp, 4; pop ebx; pop esi; ret; 
0x00098b4f: out dx, al; add esi, dword ptr [edi + edi*4 - 0x77]; ret 0xca83; 
0x00024983: out dx, al; arpl cx, di; call dword ptr [eax - 0x18]; 
0x00128d4d: out dx, al; call dword ptr [eax - 0x73]; 
0x000e7c92: out dx, al; call dword ptr gs:[0x10]; 
0x0004a1cd: out dx, al; das; stc; call dword ptr [eax - 0x18]; 
0x001521bb: out dx, al; dec dword ptr [ebp - 0x64f037f]; call dword ptr [eax - 0x73]; 
0x0015267c: out dx, al; dec dword ptr [ebp - 0x64f2779]; call dword ptr [eax - 0x73]; 
0x00151578: out dx, al; dec dword ptr [ebp - 0x64f437d]; call dword ptr [eax + 0x68]; 
0x00151fea: out dx, al; dec dword ptr [ebx - 0x72f3dbac]; sub byte ptr [eax - 0x50], 0xf9; call dword ptr [eax + 0x68]; 
0x0003aa20: out dx, al; idiv edi; jmp dword ptr [esi - 0x70]; 
0x0013fba3: out dx, al; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x00136b5a: out dx, al; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000faf6c: out dx, al; inc edi; stc; call dword ptr [eax - 0x18]; 
0x0006078e: out dx, al; inc esi; std; call dword ptr [eax - 0x73]; 
0x0013cabf: out dx, al; jmp dword ptr [esi - 0x70]; 
0x0012f41c: out dx, al; lea ecx, [ebx + ebx]; pop ebx; shr eax, cl; and eax, 3; ret; 
0x000e7d56: out dx, al; mov ecx, dword ptr [esp + 0x54]; mov edx, edi; mov dword ptr [esp + 0xc], eax; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x00193592: out dx, al; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00196783: out dx, al; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00198733: out dx, al; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, edx; pop ebx; ret; 
0x0014c3d8: out dx, al; pop ebx; stc; call dword ptr [eax - 0x18]; 
0x001513c8: out dx, al; pop ebx; stc; call dword ptr [eax - 0x73]; 
0x0012190e: out dx, al; ret; 
0x000a715e: out dx, al; stc; std; jmp dword ptr [esi - 0x70]; 
0x0018580e: out dx, al; test bl, bh; dec dword ptr [ebp - 0x644c77a]; call dword ptr [eax - 0x73]; 
0x000c093f: out dx, al; xchg edx, eax; or al, 0; add ecx, 0x10c731; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c1095: out dx, eax; adc byte ptr [ecx], al; clc; pop edi; ret; 
0x001aba6c: out dx, eax; adc byte ptr [edi], cl; cmp byte ptr [eax + eax + 0x408d0000], 0xf; pop edi; ret; 
0x000ecc64: out dx, eax; add al, 0x89; ret; 
0x0014d80d: out dx, eax; add al, 0xff; jmp dword ptr [esi - 0x70]; 
0x000ea534: out dx, eax; add byte ptr [eax], al; add al, ch; ret; 
0x000fb190: out dx, eax; add byte ptr [eax], al; mov edx, 0x20; cmovne eax, edx; ret; 
0x000c942f: out dx, eax; add cl, byte ptr [ecx + 0x29d001f8]; ret; 
0x001abaa1: out dx, eax; add eax, 0x87820f; add byte ptr [eax], al; lea eax, [eax + 4]; pop edi; ret; 
0x00050b4c: out dx, eax; add eax, dword ptr [eax]; add byte ptr [ecx], dh; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0019d17c: out dx, eax; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00081581: out dx, eax; add esp, 4; pop ebx; pop esi; ret; 
0x00134d86: out dx, eax; call dword ptr [eax + 0x6a]; 
0x00133c98: out dx, eax; call dword ptr [eax - 0x18]; 
0x00143983: out dx, eax; call dword ptr [ebx + 0x50]; 
0x0012e3fb: out dx, eax; call dword ptr [ebx + 0x56]; 
0x0013c0e5: out dx, eax; call dword ptr [edx - 0x3f]; 
0x00131aed: out dx, eax; call dword ptr gs:[0x10]; 
0x00138e7d: out dx, eax; dec dword ptr [ebx - 0x72dfdb84]; xchg dword ptr [ecx + ebp*4], edx; stc; call dword ptr [eax - 0x73]; 
0x0012e3ef: out dx, eax; dec dword ptr [ebx - 0x7af3dbac]; ror byte ptr [edi], cl; test byte ptr [ebx + 0x6b], dl; out dx, eax; call dword ptr [ebx + 0x56]; 
0x00134ffa: out dx, eax; dec dword ptr [edi]; inc ebp; ret 0xec83; 
0x0012c658: out dx, eax; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0013bbf2: out dx, eax; inc dword ptr [ebx - 0x7072ef3c]; mov ebp, 0x89fff945; ret 0x68b; 
0x0013baea: out dx, eax; inc dword ptr [ebx - 0x72afef3c]; xchg byte ptr [esi + 0x56], bl; stc; call dword ptr [ebx + 0x50]; 
0x0017d041: out dx, eax; inc dword ptr [ebx - 0x77cef3c]; add dword ptr [edi], ecx; xchg esp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x000dcde5: out dx, eax; inc ebp; stc; call dword ptr [eax + 0x56]; 
0x00130d5d: out dx, eax; inc ebx; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x00130bcd: out dx, eax; inc ebx; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x136; call dword ptr gs:[0x10]; 
0x00130bed: out dx, eax; inc ebx; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x56; call dword ptr gs:[0x10]; 
0x00197343: out dx, eax; inc esp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00142447: out dx, eax; int1; inc dword ptr [ebx - 0x2776d73c]; pop ebx; ret; 
0x0013342d: out dx, eax; je 0x133490; mov ebx, dword ptr [esp + 0x50]; mov ecx, dword ptr [esp + 8]; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x0018aefa: out dx, eax; jmp dword ptr [ecx]; 
0x001259f0: out dx, eax; jmp dword ptr [esi - 0x70]; 
0x00193562: out dx, eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0008bcce: out dx, eax; mov dword ptr [ebx], edx; pop ebx; pop esi; pop edi; ret; 
0x0009cf50: out dx, eax; mov dword ptr [ecx + 0x10], eax; mov dword ptr [esi + 0x10], ecx; pop ebx; pop esi; ret; 
0x0013e490: out dx, eax; mov eax, dword ptr [esp + 0x10]; add esp, 4; pop ebx; pop esi; ret; 
0x000d9830: out dx, eax; mov eax, ecx; pop ebx; pop esi; ret; 
0x00131bd6: out dx, eax; mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov dword ptr [esp + 0x1c], eax; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x001966b3: out dx, eax; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00198683: out dx, eax; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, edx; pop ebx; ret; 
0x001abae1: out dx, eax; or dh, byte ptr [edx + 0x4b]; lea eax, [eax + 9]; pop edi; ret; 
0x00160092: out dx, eax; or dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ebx; mov ch, 0xf9; call dword ptr [eax - 0x18]; 
0x001abad1: out dx, eax; or dword ptr [edx + 0x5b], esi; lea eax, [eax + 8]; pop edi; ret; 
0x001abb01: out dx, eax; or eax, 0x408d2b72; or al, 0x5f; ret; 
0x001abaf1: out dx, eax; or esi, dword ptr [edx + 0x3b]; lea eax, [eax + 0xa]; pop edi; ret; 
0x001436c0: out dx, eax; pop eax; stc; call dword ptr [eax + 0x6a]; 
0x00081527: out dx, eax; pop ebx; pop esi; pop edi; ret; 
0x001abac1: out dx, eax; pop es; jb 0x1abb30; lea eax, [eax + 6]; pop edi; ret; 
0x001abb11: out dx, eax; push cs; jb 0x1abb30; lea eax, [eax + 0xd]; pop edi; ret; 
0x00199bc3: out dx, eax; push ds; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0012e1dd: out dx, eax; push dword ptr [ecx + eax - 0x3d]; mov ebp, esi; call ebx; 
0x00195dc3: out dx, eax; push edi; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001abab1: out dx, eax; push es; jb 0x1abb30; lea eax, [eax + 5]; pop edi; ret; 
0x0016a42d: out dx, eax; ret 0xfffe; 
0x0012d926: out dx, eax; ret 5; 
0x001a6534: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x2c73; 
0x001a6ef5: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3273; 
0x001a651f: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3e73; 
0x001a6edb: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x4c73; 
0x001a650a: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x5073; 
0x001a64f5: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6273; 
0x001a6ec1: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6673; 
0x001a65c1: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x000850a1: out dx, eax; stc; jmp dword ptr [esi - 0x70]; 
0x001990c3: out dx, eax; sub dword ptr [eax + eax], eax; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013341f: outsb dx, byte ptr [esi]; add al, 0x89; ret; 
0x0015752d: outsb dx, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x0017c62d: outsb dx, byte ptr [esi]; add esp, 0x14; pop ebx; pop esi; ret; 
0x00124826: outsb dx, byte ptr [esi]; dec edx; stc; call dword ptr [eax - 0x18]; 
0x000a550e: outsb dx, byte ptr [esi]; inc ebx; stc; call dword ptr [eax - 0x18]; 
0x00132abb: outsb dx, byte ptr [esi]; jno 0x132ac3; add byte ptr [ecx + 0x10c355c5], al; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x31]; 
0x0006f4a9: outsb dx, byte ptr [esi]; or al, byte ptr [eax]; add byte ptr [ecx - 0x7ccfdbac], cl; ret 0x8904; 
0x0018baba: outsb dx, byte ptr [esi]; or bh, dh; ret 0x202; 
0x0014364a: outsb dx, byte ptr [esi]; pop ecx; stc; call dword ptr [eax + 0x6a]; 
0x0007525e: outsb dx, byte ptr [esi]; ret 0; 
0x0009c302: outsb dx, byte ptr [esi]; sete al; add esp, 0xc; movzx eax, al; lea eax, [eax + eax + 2]; ret; 
0x001932f2: outsb dx, byte ptr [esi]; shl byte ptr [esi + 0xf], 0x70; rol byte ptr [eax], 0xf7; ret 0xf; 
0x000da579: outsb dx, byte ptr [esi]; stc; call dword ptr [eax + 0x56]; 
0x0013bada: outsb dx, byte ptr [esi]; stc; call dword ptr [eax - 0x75]; 
0x001a64f1: outsd dx, dword ptr [esi]; adc ah, byte ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6273; 
0x001a55cd: outsd dx, dword ptr [esi]; add eax, 0xc1830000; adc byte ptr [esi + 0xf], ah; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000b5a62: outsd dx, dword ptr [esi]; add ebx, esi; movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000b5d12: outsd dx, dword ptr [esi]; add ebx, esi; movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; ret; 
0x000b16a2: outsd dx, dword ptr [esi]; add ebx, esi; movq qword ptr [edx], mm0; mov eax, edi; pop edi; ret; 
0x000b1932: outsd dx, dword ptr [esi]; add ebx, esi; movq qword ptr [edx], mm0; mov eax, edx; ret; 
0x00199643: outsd dx, dword ptr [esi]; and al, 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0008b93e: outsd dx, dword ptr [esi]; and byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x000ba8b3: outsd dx, dword ptr [esi]; and eax, 0xc030011; xchg ecx, eax; jmp ecx; 
0x00195343: outsd dx, dword ptr [esi]; bound eax, qword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197dc3: outsd dx, dword ptr [esi]; cmp al, byte ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001a6d42: outsd dx, dword ptr [esi]; dec eax; ret 0xff3; 
0x001a6ca2: outsd dx, dword ptr [esi]; dec eax; ret; 
0x00127022: outsd dx, dword ptr [esi]; dec ebp; stc; call dword ptr [eax + 0x55]; 
0x001a37c6: outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0007b6d8: outsd dx, dword ptr [esi]; jle 0x7b6d5; jmp dword ptr [esi - 0x70]; 
0x00117c2d: outsd dx, dword ptr [esi]; mov ch, 0xf0; jmp dword ptr [ebp - 0x75]; 
0x000bacad: outsd dx, dword ptr [esi]; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000a95ad: outsd dx, dword ptr [esi]; out 0xff, eax; test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x17bea4]; cmove eax, edx; ret; 
0x00060953: outsd dx, dword ptr [esi]; push ebx; stc; call dword ptr [eax + 0x6a]; 
0x001a68c8: outsd dx, dword ptr [esi]; push edx; ljmp 0xf66:0xd1ef0f66; cmp byte ptr [edi], dl; ret 0x830f; 
0x001a6d47: outsd dx, dword ptr [esi]; push edx; ret 0xc2bb; 
0x001a6ca7: outsd dx, dword ptr [esi]; push edx; ret; 
0x000bd792: outsd dx, dword ptr [esi]; push es; movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0013bc56: outsd dx, dword ptr [esi]; push esi; stc; call dword ptr [eax - 0x75]; 
0x0019a143: outsd dx, dword ptr [esi]; sbb dword ptr [eax + eax], eax; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0002506f: outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x00025736: outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x0002614a: outsd dx, dword ptr [esi]; stc; call dword ptr [edx - 0x73]; 
0x001133c6: outsd dx, dword ptr [esi]; stc; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; xor eax, eax; ret; 
0x0011785d: paddsw mm7, mm7; jmp dword ptr [esi - 0x77]; 
0x00030068: pandn mm7, mm7; push edx; push dword ptr [eax + 0x10e4]; call 0x12d020; add esp, 0x1c; ret; 
0x000c1641: pcmpeqb mm1, qword ptr [ebx + eax*4]; rcl dword ptr [eax], 0x83; ret 0x2910; 
0x000c181f: pcmpeqb mm1, qword ptr [ecx + 0x20]; pmovmskb eax, xmm1; test eax, eax; jne 0xc1890; xor eax, eax; ret; 
0x001aad41: pcmpeqb mm1, qword ptr [ecx]; pmovmskb eax, xmm1; test eax, eax; jne 0x1aaf80; xor eax, eax; ret; 
0x000c17f1: pcmpeqb mm1, qword ptr [ecx]; pmovmskb eax, xmm1; test eax, eax; jne 0xc1870; xor eax, eax; ret; 
0x001ac70a: pcmpeqb mm2, qword ptr [ebx]; and eax, 1; je 0x1ac6f0; lea eax, [edi - 0x10]; pop edi; ret; 
0x00196c9c: pcmpeqb mm2, qword ptr [ecx]; call 0x189c1d; add ebx, 0x44d0c; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00194c9c: pcmpeqb mm2, qword ptr [ecx]; call 0x189c1d; add ebx, 0x46a8c; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0019ceb1: pcmpeqb mm3, qword ptr [eax + ebp*8]; int 0xfe; inc dword ptr [ecx + 0x3f2b7c3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x000d99b4: pcmpeqb mm3, qword ptr [ecx]; add eax, 2; ret; 
0x00198c8e: pcmpeqb mm3, qword ptr [edi]; call 0x189c1d; add ebx, 0x42f9a; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x000d999d: pcmpeqb mm4, qword ptr [eax]; ret; 
0x000c181e: pcmpeqb xmm1, xmmword ptr [ecx + 0x20]; pmovmskb eax, xmm1; test eax, eax; jne 0xc1890; xor eax, eax; ret; 
0x001aad40: pcmpeqb xmm1, xmmword ptr [ecx]; pmovmskb eax, xmm1; test eax, eax; jne 0x1aaf80; xor eax, eax; ret; 
0x000c17f0: pcmpeqb xmm1, xmmword ptr [ecx]; pmovmskb eax, xmm1; test eax, eax; jne 0xc1870; xor eax, eax; ret; 
0x000a5259: pcmpeqw mm1, qword ptr [ecx + ecx*4]; ret; 
0x001ac436: pcmpeqw mm2, qword ptr [edi]; test dh, 0xf; jne 0x1ac4a0; lea eax, [ecx + 0xc]; ret; 
0x001ac405: pcmpeqw mm3, qword ptr [eax]; test dl, 0xf; jne 0x1ac4a0; lea eax, [ecx + 4]; ret; 
0x000b99b7: pcmpgtd mm1, qword ptr [ecx + 0x5e5f0457]; pop ebx; ret; 
0x001950a3: pcmpgtw mm0, qword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001ab1f3: pmovmskb eax, mm1; and eax, edx; test eax, eax; jne 0x1aae20; xor eax, eax; ret; 
0x000c14b9: pmovmskb eax, mm1; bsf eax, eax; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000c1cb4: pmovmskb eax, mm1; bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x000c1791: pmovmskb eax, mm1; bsr eax, eax; add eax, ecx; ret; 
0x001aa8ad: pmovmskb eax, mm1; test eax, eax; jne 0x1aa980; xor eax, eax; pop edi; ret; 
0x001aad45: pmovmskb eax, mm1; test eax, eax; jne 0x1aaf80; xor eax, eax; ret; 
0x001aad84: pmovmskb eax, mm1; test eax, eax; jne 0x1ab000; xor eax, eax; ret; 
0x000c155f: pmovmskb eax, mm1; test eax, eax; jne 0xc15c0; xor eax, eax; pop edi; ret; 
0x000c1525: pmovmskb eax, mm1; test eax, eax; jne 0xc15e0; xor eax, eax; pop edi; ret; 
0x000c17f5: pmovmskb eax, mm1; test eax, eax; jne 0xc1870; xor eax, eax; ret; 
0x000c1824: pmovmskb eax, mm1; test eax, eax; jne 0xc1890; xor eax, eax; ret; 
0x001ab1f2: pmovmskb eax, xmm1; and eax, edx; test eax, eax; jne 0x1aae20; xor eax, eax; ret; 
0x000c14b8: pmovmskb eax, xmm1; bsf eax, eax; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000c1cb3: pmovmskb eax, xmm1; bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x000c1790: pmovmskb eax, xmm1; bsr eax, eax; add eax, ecx; ret; 
0x001aa8ac: pmovmskb eax, xmm1; test eax, eax; jne 0x1aa980; xor eax, eax; pop edi; ret; 
0x001aad44: pmovmskb eax, xmm1; test eax, eax; jne 0x1aaf80; xor eax, eax; ret; 
0x001aad83: pmovmskb eax, xmm1; test eax, eax; jne 0x1ab000; xor eax, eax; ret; 
0x000c155e: pmovmskb eax, xmm1; test eax, eax; jne 0xc15c0; xor eax, eax; pop edi; ret; 
0x000c1524: pmovmskb eax, xmm1; test eax, eax; jne 0xc15e0; xor eax, eax; pop edi; ret; 
0x000c17f4: pmovmskb eax, xmm1; test eax, eax; jne 0xc1870; xor eax, eax; ret; 
0x000c1823: pmovmskb eax, xmm1; test eax, eax; jne 0xc1890; xor eax, eax; ret; 
0x000c1b1a: pmovmskb ecx, mm0; test ecx, ecx; je 0xc1b30; bsf ecx, ecx; add eax, ecx; ret; 
0x000c1b19: pmovmskb ecx, xmm0; test ecx, ecx; je 0xc1b30; bsf ecx, ecx; add eax, ecx; ret; 
0x00199b2b: pop ds; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00057e92: pop ds; add al, 0x83; ret; 
0x0005ad67: pop ds; add al, byte ptr [eax]; add esp, 0x1c; ret; 
0x0009a4f1: pop ds; add byte ptr [eax], al; add byte ptr [ebp - 0x76e3db8c], cl; ret; 
0x00050de0: pop ds; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5152; 
0x001aa582: pop ds; add byte ptr [eax], al; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x0010e2eb: pop ds; add byte ptr [edi], cl; test dword ptr [0xf7fffffd], edi; ret 0x67; 
0x000d967d: pop ds; add dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; ret; 
0x00042d5c: pop ds; add eax, 1; pop ebx; ret; 
0x00042d11: pop ds; add eax, 1; ret; 
0x001a581d: pop ds; add eax, dword ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000ccedc: pop ds; add eax, dword ptr [eax]; add byte ptr [ecx], dh; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00042e23: pop ds; add ecx, 1; pop ebx; mov eax, ecx; ret; 
0x00041998: pop ds; add esp, 4; pop ebx; pop esi; ret; 
0x0010cc51: pop ds; add esp, 8; or eax, edx; pop ebx; ret; 
0x000ffd50: pop ds; add esp, 8; xor eax, eax; pop ebx; ret; 
0x00198c90: pop ds; call 0x189c1d; add ebx, 0x42f9a; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0011fe30: pop ds; call dword ptr gs:[0x10]; 
0x00197f13: pop ds; cmp dword ptr [eax + eax], eax; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000b9423: pop ds; cmp dword ptr [ecx], edx; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000fdadd: pop ds; dec eax; stc; call dword ptr [eax + 0x55]; 
0x000a95e9: pop ds; idiv bh; and ch, 2; lea edx, [edx - 0x17d054]; cmove eax, edx; ret; 
0x000a9629: pop ds; idiv bh; and ch, 2; lea edx, [edx - 0x17d0d4]; cmove eax, edx; ret; 
0x001aa522: pop ds; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x000b9917: pop ds; jne 0xb9e20; pop edi; pop esi; pop ebx; ret; 
0x000bafba: pop ds; jne 0xbb520; pop edi; pop esi; pop ebx; ret; 
0x00043221: pop ds; lea eax, [ebx + 0x20]; pop ebx; ret; 
0x00043155: pop ds; lea eax, [ecx + 0x20]; pop ebx; ret; 
0x00042dd6: pop ds; lea edx, [eax + 1]; mov eax, edx; ret; 
0x0004318c: pop ds; lea edx, [eax - 0x10]; mov eax, edx; ret; 
0x00042cf6: pop ds; lea edx, [eax - 0x17]; mov eax, edx; ret; 
0x000430dc: pop ds; lea edx, [eax - 0x18]; mov eax, edx; ret; 
0x00042d97: pop ds; lea edx, [eax - 0xf]; mov eax, edx; ret; 
0x001a7bdd: pop ds; mov al, 0xf1; jmp dword ptr [esi - 0x70]; 
0x00097f30: pop ds; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0011f3f9: pop ds; mov dword ptr [esp + 0xc], eax; mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00042aac: pop ds; mov eax, 0x40; pop ebx; sub eax, edx; ret; 
0x001219f4: pop ds; mov ebp, dword ptr [edi + 8]; mov edi, dword ptr [edi + 4]; call dword ptr gs:[0x10]; 
0x0014b44d: pop ds; mov esi, gs; jmp dword ptr [esi - 0x70]; 
0x0003c121: pop ds; not eax; and eax, edx; ret; 
0x0003be0c: pop ds; not eax; sar edx, 0x1e; and eax, edx; ret; 
0x00055162: pop ds; or eax, edx; mov dword ptr [esp + 4], eax; fld qword ptr [esp]; add esp, 0xc; ret; 
0x00055199: pop ds; or eax, edx; mov dword ptr [esp], eax; fld dword ptr [esp]; add esp, 4; ret; 
0x0013f6b2: pop ds; pop eax; stc; dec dword ptr [ebp - 0x6a7d57a]; call dword ptr [ecx - 0x77]; 
0x00053e32: pop ds; pop ebx; pop esi; pop edi; ret; 
0x000bb394: pop ds; pop edi; pop esi; pop ebx; ret; 
0x0003b080: pop ds; pop edi; ret; 
0x00156ca4: pop ds; pop esi; stc; call dword ptr [eax - 0x73]; 
0x00195493: pop ds; popal; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c002: pop ds; push ebx; push ecx; push esi; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x40]; 
0x001618e4: pop ds; pushal; stc; call dword ptr [eax - 0x18]; 
0x0003adcd: pop ds; ret; 
0x000c1a5f: pop ds; sar eax, 3; sub edx, eax; lea ecx, [edx + 3]; mov eax, ecx; ret; 
0x0004297b: pop ds; shr eax, cl; ret; 
0x0003bae2: pop ds; shr ecx, 0x10; or eax, ecx; ret; 
0x0017fb67: pop ds; stc; call dword ptr [eax - 0x18]; 
0x0003ba7d: pop ds; sub ecx, edx; not eax; and eax, ecx; ret; 
0x0012c648: pop ds; sub esp, 0xc; push dword ptr [ebx]; call esi; 
0x000baf8d: pop dword ptr [0x5e5f0000]; pop ebx; ret; 
0x00106e36: pop dword ptr [eax + 0x3f]; stc; call dword ptr [eax - 0x17]; 
0x001157bb: pop dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001ac40d: pop dword ptr [eax]; add byte ptr [eax], al; lea eax, [ecx + 4]; ret; 
0x00157416: pop dword ptr [eax]; add byte ptr [eax], al; mov dword ptr [ebx + 0x8f78], 0; call esi; 
0x0015740c: pop dword ptr [eax]; add byte ptr [edi], ch; je 0x157476; mov byte ptr [ebx + 0x8f88], 0; mov dword ptr [ebx + 0x8f78], 0; call esi; 
0x001970a3: pop dword ptr [edi + 4]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0005cee1: pop dword ptr [edi - 0x9fffff8]; ret 0xf40; 
0x000decca: pop dword ptr [edx]; jbe 0xdecd8; mov eax, edx; ret; 
0x000304a5: pop eax; aam 0x80; sti; add cl, byte ptr [edi]; xchg esi, eax; ret; 
0x00187ced: pop eax; adc al, 0x39; fimul word ptr [edi]; xchg edx, eax; ret; 
0x0015d9a3: pop eax; adc al, 0x89; ret; 
0x00171e9f: pop eax; adc byte ptr [eax + 1], bh; pop ebx; pop esi; ret; 
0x00080050: pop eax; adc byte ptr [ecx + 0x5b0a89c8], cl; ret; 
0x0007f1e1: pop eax; adc byte ptr [ecx + 0x5b3a89c8], cl; pop esi; pop edi; ret; 
0x00031b94: pop eax; adc dword ptr [eax], eax; add byte ptr [ecx], cl; ret 0x840f; 
0x0019515a: pop eax; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00103362: pop eax; add al, 0xf7; ret; 
0x00064743: pop eax; add byte ptr [edi], cl; xchg esp, eax; ret 0x44c7; 
0x00124084: pop eax; add dword ptr [eax], eax; add ah, bl; mov al, 0x94; ret 0xfff9; 
0x000665ce: pop eax; add dword ptr [eax], eax; add byte ptr [ecx - 0x56b7b], cl; dec dword ptr [ebp - 0x56b7b]; dec dword ptr [ecx - 0x5fb7b]; call dword ptr [eax - 0x18]; 
0x00122d1f: pop eax; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0011ef02: pop eax; add esp, 0xe4; pop ebx; pop esi; ret; 
0x000fd2e2: pop eax; and al, 0x8b; inc eax; xor byte ptr [ecx], bh; ret; 
0x000afa3b: pop eax; and byte ptr [ebx - 0x398af716], al; mov dword ptr [eax + 0x1c], esi; pop ebx; pop esi; ret; 
0x001772fc: pop eax; bswap eax; mov dword ptr [edx + 0xc], eax; mov eax, 1; pop ebx; ret; 
0x000a175b: pop eax; cdq; stc; call dword ptr [eax - 0x73]; 
0x00197bda: pop eax; cmp al, 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00130ed3: pop eax; cmpsb byte ptr [esi], byte ptr es:[edi]; stc; call dword ptr [eax + 0x55]; 
0x000c30c5: pop eax; imul ecx, dword ptr [eax + eax], -0x7f; ret 0xbd4b; 
0x000abce4: pop eax; inc dword ptr [ebx + 0x5e5b08c4]; pop edi; pop ebp; ret; 
0x000ea0ac: pop eax; insb byte ptr es:[edi], dx; mov dword ptr [eax + 0x6c], ebx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x00092cb9: pop eax; insb byte ptr es:[edi], dx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x000c0cf3: pop eax; jnp 0x5b18313e; pop esi; ret; 
0x000bd870: pop eax; jnp 0x5e13fcbb; ret; 
0x0005bc74: pop eax; jp 0x5bc70; call dword ptr [eax - 0x18]; 
0x001664a4: pop eax; js 0x1664a4; jmp dword ptr [esi - 0x70]; 
0x0004d39c: pop eax; js 0x4d398; call dword ptr [eax - 0x73]; 
0x0004d427: pop eax; js 0x4d423; call dword ptr [eax - 0x73]; 
0x0004d44a: pop eax; js 0x4d446; call dword ptr [eax - 0x73]; 
0x0004d46d: pop eax; js 0x4d469; call dword ptr [eax - 0x73]; 
0x0004d490: pop eax; js 0x4d48c; call dword ptr [eax - 0x73]; 
0x0004d4b3: pop eax; js 0x4d4af; call dword ptr [eax - 0x73]; 
0x0004d4dd: pop eax; js 0x4d4d9; call dword ptr [eax - 0x73]; 
0x0004d50c: pop eax; js 0x4d508; call dword ptr [eax - 0x73]; 
0x0004d52f: pop eax; js 0x4d52b; call dword ptr [eax - 0x73]; 
0x0004d575: pop eax; js 0x4d571; call dword ptr [eax - 0x73]; 
0x0004d598: pop eax; js 0x4d594; call dword ptr [eax - 0x73]; 
0x0004d5bb: pop eax; js 0x4d5b7; call dword ptr [eax - 0x73]; 
0x0004d5da: pop eax; js 0x4d5d6; call dword ptr [eax - 0x73]; 
0x0004d5fd: pop eax; js 0x4d5f9; call dword ptr [eax - 0x73]; 
0x000c1b37: pop eax; lea esi, cs:[esi]; xor eax, eax; ret; 
0x0007bf55: pop eax; mov dword ptr [ecx + 0x88], edx; ret; 
0x00088c61: pop eax; mov dword ptr [edx + 0x88], ecx; pop ebx; pop esi; pop edi; ret; 
0x0003c758: pop eax; mov eax, 0x77; int 0x80; 
0x0016fb25: pop eax; mov eax, dword ptr [ebx + 4]; pop edx; push edi; push ebx; call dword ptr [eax + 0x14]; 
0x00086911: pop eax; mov eax, dword ptr [edx + 0x10]; sub eax, dword ptr [edx + 0xc]; sar eax, 2; ret; 
0x000867e1: pop eax; mov eax, dword ptr [edx + 0x1c]; sub eax, dword ptr [edx + 0x18]; sar eax, 2; ret; 
0x0002dc9f: pop eax; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x000c24dc: pop eax; mov edi, eax; mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x000fb1f9: pop eax; mov edx, 0x20; cmovne eax, edx; ret; 
0x0008f98d: pop eax; or al, 0xe8; fcom qword ptr [eax]; push es; add byte ptr [ecx], bh; ret; 
0x0014e8d9: pop eax; or byte ptr [ebp + 0x1e850fed], al; add al, byte ptr [eax]; add dh, dh; ret; 
0x0014e807: pop eax; or byte ptr [ebp - 0x777af013], al; add al, 0; add dh, dh; ret; 
0x0005abde: pop eax; or byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00080aa5: pop eax; or byte ptr [ecx + 0x10892048], cl; pop ebx; ret; 
0x0014eb7c: pop eax; or dh, dh; ret; 
0x00053e2a: pop eax; pop ebx; pop esi; pop edi; ret; 
0x000d9747: pop eax; pop edi; pop esi; ret; 
0x00175d37: pop eax; pop edx; push 0; push edi; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x14]; 
0x0016fafc: pop eax; pop edx; push dword ptr [esi + 0x10]; push ebx; call dword ptr [esi + 0x14]; 
0x001701ae: pop eax; pop edx; push dword ptr [esp + 0x48]; push esi; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x00170c16: pop eax; pop edx; push dword ptr [esp + 8]; push esi; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x18]; 
0x001702ac: pop eax; pop edx; push edi; push esi; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x00165844: pop eax; popal; stc; call dword ptr [eax - 0x18]; 
0x00165844: pop eax; popal; stc; call dword ptr [eax - 0x18]; ret 0xfef2; 
0x000c0cd3: pop eax; push cs; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd850: pop eax; push cs; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000385de: pop eax; push dword ptr [ebx + 0x12cc]; call 0x231a0; add esp, 0x18; pop ebx; ret; 
0x0002dc9b: pop eax; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x00162ecc: pop eax; push dword ptr [esp + 0x58]; push esi; call edi; 
0x000285e7: pop eax; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00025d4d: pop eax; push ebp; push dword ptr [esp + 0x30]; push dword ptr [ebx + 4]; call edi; 
0x00162ed0: pop eax; push esi; call edi; 
0x001351b1: pop eax; ret; 
0x0014243e: pop eax; stc; call dword ptr [eax + 0x6a]; 
0x0013f6d4: pop eax; stc; call dword ptr [ecx + 0x50]; 
0x0013f6b9: pop eax; stc; call dword ptr [ecx - 0x77]; 
0x0013f6b3: pop eax; stc; dec dword ptr [ebp - 0x6a7d57a]; call dword ptr [ecx - 0x77]; 
0x0007f8f7: pop eax; sub esp, 4; push edi; push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x0017d6e0: pop eax; test al, 0; add byte ptr [eax - 0x73], dl; xchg byte ptr [ecx + 0x63], ch; stc; call dword ptr [eax + 0x6a]; 
0x00097e39: pop eax; xchg ecx, edi; call dword ptr [eax - 0x73]; 
0x00171522: pop eax; xor al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x00042266: pop eax; xor al, 0x8b; push eax; cmp byte ptr [ebx + 0x408b3c48], cl; inc eax; ret; 
0x000d438d: pop ebp; aam 0x31; ror byte ptr [ecx - 0x7c0ffe35], cl; ret 0x8d01; 
0x00176169: pop ebp; adc al, 0x8d; xchg ebp, eax; stc; call dword ptr [eax + 0x53]; 
0x001957eb: pop ebp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0005baf7: pop ebp; add al, 0x8b; inc ebp; or byte ptr [ecx], bh; ret; 
0x00124e51: pop ebp; add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x0015c6f0: pop ebp; add byte ptr [eax], bh; sbb byte ptr [edx + ebp*8 - 0x7d], dh; ret 0x8b18; 
0x00110a61: pop ebp; add cl, ch; ret; 
0x0007ecbf: pop ebp; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x001a6553: pop ebp; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000dbd8d: pop ebp; add esp, 0x24; pop ebx; pop esi; ret; 
0x00164979: pop ebp; bnd call dword ptr [eax - 0x18]; 
0x0016ea9f: pop ebp; cld; jmp dword ptr [esi - 0x70]; 
0x0012b8ca: pop ebp; cmp eax, 0xfffff001; jae 0x24f50; ret; 
0x001510b8: pop ebp; fisttp qword ptr [esi]; add byte ptr [ebx - 0x6f72f314], al; lodsb al, byte ptr [esi]; mov al, 0xf9; call dword ptr [edx - 0x73]; 
0x0007c4d4: pop ebp; in al, 0x6a; call dword ptr [esi - 0x18]; 
0x000965e9: pop ebp; inc eax; stc; call dword ptr [eax - 0x73]; 
0x000250f5: pop ebp; jmp eax; 
0x0017d3c8: pop ebp; ljmp 0x5e5b:0x2cc483ff; pop edi; pop ebp; ret; 
0x0017e90d: pop ebp; mov byte ptr [ecx], al; ret 0x858b; 
0x00033e9b: pop ebp; mov eax, ecx; ret; 
0x000fbe7d: pop ebp; neg eax; ret; 
0x0003b00d: pop ebp; not eax; and eax, edx; ret; 
0x000795be: pop ebp; or byte ptr [ecx], bh; ret; 
0x0014243d: pop ebp; pop eax; stc; call dword ptr [eax + 0x6a]; 
0x000c294d: pop ebp; pop ebx; pop esi; pop edi; ret; 
0x001a596b: pop ebp; pop ebx; ret; 
0x001a5b45: pop ebp; pop ebx; xor eax, eax; ret; 
0x00121a02: pop ebp; pop edi; pop ebx; ret; 
0x000536d8: pop ebp; pop esi; pop edi; ret; 
0x0003abc2: pop ebp; ret 4; 
0x0002346e: pop ebp; ret; 
0x000ad429: pop ebp; rol byte ptr [ecx], 1; ret; 
0x0015567c: pop ebp; stc; call dword ptr [eax + 0x53]; 
0x00155634: pop ebp; stc; call dword ptr [eax + 0x56]; 
0x00152694: pop ebp; stc; call dword ptr [eax - 0x18]; 
0x00153c30: pop ebp; stc; call dword ptr [eax - 0x18]; aaa; add al, 0xee; jmp dword ptr [esi - 0x70]; 
0x00154270: pop ebp; stc; call dword ptr [eax - 0x18]; idiv ebp; in eax, dx; jmp dword ptr [esi - 0x70]; 
0x00153ff0: pop ebp; stc; call dword ptr [eax - 0x18]; ja 0x153ff7; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00153eb0: pop ebp; stc; call dword ptr [eax - 0x18]; mov bh, 1; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00153f50: pop ebp; stc; call dword ptr [eax - 0x18]; pop ss; add esi, ebp; jmp dword ptr [esi - 0x70]; 
0x00153e10: pop ebp; stc; call dword ptr [eax - 0x18]; push edi; add ch, dh; jmp dword ptr [esi - 0x70]; 
0x00153cd0: pop ebp; stc; call dword ptr [eax - 0x18]; xchg edi, eax; add ebp, esi; jmp dword ptr [esi - 0x70]; 
0x00153b90: pop ebp; stc; call dword ptr [eax - 0x18]; xlatb; add al, 0xee; jmp dword ptr [esi - 0x70]; 
0x00156c85: pop ebp; stc; call dword ptr [eax - 1]; 
0x0015596a: pop ebp; stc; call dword ptr [ebx - 0x73]; 
0x00167f0a: pop ebp; std; jmp dword ptr [esi - 0x70]; 
0x000f4536: pop ebp; sti; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; xor eax, eax; ret; 
0x0004db44: pop ebp; xor eax, 0x7fffffff; ret; 
0x001a0c03: pop ebp; xor eax, eax; ret; 
0x000253d0: pop ebx; adc edx, 0; neg edx; ret; 
0x001959d4: pop ebx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0010d5a1: pop ebx; add al, 0x31; sar byte ptr [eax + 0x1b4], cl; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x00152acd: pop ebx; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; sub dword ptr [ecx], 0x5d; stc; call dword ptr [eax - 0x18]; 
0x00184fb5: pop ebx; add dword ptr [eax], eax; add byte ptr [ebx + 0x1442474], cl; ret; 
0x000c1121: pop ebx; add dword ptr [eax], eax; add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x000432f6: pop ebx; add eax, 0x20; ret; 
0x00179400: pop ebx; add eax, 0x90; pop esi; pop edi; ret; 
0x00179490: pop ebx; add eax, 0x94; pop esi; pop edi; ret; 
0x00128797: pop ebx; and edx, 0xfff; and eax, 0xfffff000; or eax, edx; ret; 
0x00196c1b: pop ebx; cli; jmp dword ptr [esi - 0x70]; 
0x000a8a48: pop ebx; cmove eax, edx; add eax, 0x21; ret; 
0x000a8a34: pop ebx; cmove eax, edx; add eax, 1; ret; 
0x0010e3a6: pop ebx; cmove eax, edx; ret; 
0x00041a2b: pop ebx; cmove esi, eax; mov eax, esi; pop esi; pop edi; ret; 
0x000eab69: pop ebx; cmp eax, 0xfffff001; jae 0x24f50; ret; 
0x00040276: pop ebx; cmp eax, 0xfffff001; jae 0x24f50; xor eax, eax; ret; 
0x00175141: pop ebx; idiv edi; jmp dword ptr [esi - 0x70]; 
0x0012e415: pop ebx; jl 0x24f50; ret; 
0x0007c0a7: pop ebx; jmp eax; 
0x001abad4: pop ebx; lea eax, [eax + 8]; pop edi; ret; 
0x0009afa5: pop ebx; lea eax, [eax + eax - 1]; pop esi; pop edi; pop ebp; ret; 
0x000433ac: pop ebx; lea eax, [ecx + 0x20]; ret; 
0x001ab174: pop ebx; lea eax, [ecx + 9]; ret; 
0x0007fb57: pop ebx; lea eax, [ecx + esi]; pop esi; pop edi; pop ebp; ret; 
0x001aaab4: pop ebx; lea eax, [edi + 8]; pop edi; ret; 
0x000779f1: pop ebx; mov dl, 0xff; dec dword ptr [ebx - 0x4ff7b]; jmp dword ptr [ebp - 0x75]; 
0x0009800f: pop ebx; mov eax, 0x16; pop esi; pop edi; ret; 
0x0008feab: pop ebx; mov eax, 0xc; pop esi; pop edi; ret; 
0x0005b5b9: pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x001a649f: pop ebx; mov eax, 1; ja 0x1a64a9; neg eax; ret; 
0x001a6f86: pop ebx; mov eax, 1; ja 0x1a6f90; neg eax; ret; 
0x001a9870: pop ebx; mov eax, 1; ja 0x1a987a; neg eax; ret; 
0x001a81b0: pop ebx; mov eax, 1; jg 0x1a81c0; neg eax; ret; 
0x001ac2b0: pop ebx; mov eax, 1; jg 0x1ac2c0; neg eax; ret; 
0x00053c57: pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x0010c970: pop ebx; mov eax, 9; pop esi; pop edi; ret; 
0x0008d7c0: pop ebx; mov eax, dword ptr [eax + 0x18]; pop esi; jmp eax; 
0x0017c0a3: pop ebx; mov eax, dword ptr [eax + 0xc]; pop esi; pop edi; jmp eax; 
0x0017c0dc: pop ebx; mov eax, dword ptr [eax + 8]; pop esi; pop edi; jmp eax; 
0x0008131d: pop ebx; mov eax, dword ptr [edi + 0x10]; pop esi; pop edi; jmp eax; 
0x000811cd: pop ebx; mov eax, dword ptr [edi + 0x14]; pop esi; pop edi; jmp eax; 
0x0008136c: pop ebx; mov eax, dword ptr [edx]; pop esi; pop edi; ret; 
0x000890bd: pop ebx; mov eax, dword ptr [esi + 0x10]; pop esi; pop edi; jmp eax; 
0x00034fe5: pop ebx; mov eax, ebp; pop esi; pop edi; pop ebp; ret; 
0x0003073a: pop ebx; mov eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x00114174: pop ebx; mov eax, ecx; pop esi; pop edi; ret; 
0x00042e27: pop ebx; mov eax, ecx; ret; 
0x0003363e: pop ebx; mov eax, edi; pop esi; pop edi; pop ebp; ret; 
0x0003eaab: pop ebx; mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x00053780: pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x00033413: pop ebx; mov eax, edx; ret; 
0x0003be3e: pop ebx; mov eax, edx; shr eax, 0x1f; ret; 
0x000386c1: pop ebx; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x00041a6a: pop ebx; mov eax, esi; pop esi; pop edi; ret; 
0x00094f11: pop ebx; mov ebx, 0x4f8b0005; push 0xc24548b; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0006dc41: pop ebx; mov edi, edi; jmp dword ptr [esi - 0x70]; 
0x0007e12c: pop ebx; mov edx, eax; pop esi; pop edi; pop ebp; ret; 
0x00089c36: pop ebx; mov edx, edi; pop esi; pop edi; pop ebp; ret; 
0x00192c21: pop ebx; movzx eax, al; neg eax; ret; 
0x0014efb8: pop ebx; movzx eax, al; ret; 
0x0018b9b8: pop ebx; movzx eax, byte ptr [edx]; pop esi; pop edi; ret; 
0x0009425e: pop ebx; neg eax; pop esi; pop edi; ret; 
0x00088caa: pop ebx; neg eax; ret; 
0x000e7627: pop ebx; neg edx; cmp eax, -0x16; mov eax, 3; cmovne eax, edx; ret; 
0x00099b72: pop ebx; neg edx; cmp eax, 0xfffff000; mov eax, 0; cmova eax, edx; ret; 
0x000b94c1: pop ebx; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00157b1a: pop ebx; or eax, 1; pop esi; pop edi; pop ebp; ret; 
0x000536d7: pop ebx; pop ebp; pop esi; pop edi; ret; 
0x001a0c02: pop ebx; pop ebp; xor eax, eax; ret; 
0x0012458d: pop ebx; pop ecx; stc; call dword ptr [eax + 0x6a]; 
0x00124236: pop ebx; pop ecx; stc; call dword ptr [eax - 1]; 
0x00060702: pop ebx; pop ecx; stc; call dword ptr [ebp + 0x50]; 
0x001242d8: pop ebx; pop ecx; stc; call dword ptr [ecx + 0x50]; 
0x0003cb95: pop ebx; pop edi; ret; 
0x001238ba: pop ebx; pop esi; add eax, ecx; adc edx, 0; ret; 
0x0015c87c: pop ebx; pop esi; and edx, 0xf; mov eax, edx; ret; 
0x000c66b0: pop ebx; pop esi; cmovg eax, edx; pop edi; ret; 
0x001208be: pop ebx; pop esi; cmp eax, 0xfffff001; jae 0x24f50; ret; 
0x0015585f: pop ebx; pop esi; imul eax, ecx, 0xb6db6db7; pop edi; pop ebp; ret; 
0x00082bd9: pop ebx; pop esi; jmp eax; 
0x000c72fa: pop ebx; pop esi; lea eax, [eax + edx*4]; pop edi; pop ebp; ret; 
0x0009cf27: pop ebx; pop esi; mov dword ptr [ecx + 0x10], eax; mov dword ptr [edx + 0x3ba8], ecx; ret; 
0x0003dfba: pop ebx; pop esi; mov eax, ebp; pop edi; pop ebp; ret; 
0x0008d2cf: pop ebx; pop esi; mov eax, ecx; pop edi; pop ebp; ret; 
0x0007f1f5: pop ebx; pop esi; mov eax, ecx; pop edi; ret; 
0x000d9847: pop ebx; pop esi; mov eax, ecx; ret; 
0x0003360a: pop ebx; pop esi; mov eax, edi; pop edi; pop ebp; ret; 
0x00103035: pop ebx; pop esi; mov eax, edi; pop edi; ret; 
0x000abc72: pop ebx; pop esi; mov eax, edx; pop edi; pop ebp; ret; 
0x00094b69: pop ebx; pop esi; mov eax, edx; ret; 
0x0005b5d9: pop ebx; pop esi; movzx eax, al; pop edi; ret; 
0x00136d74: pop ebx; pop esi; neg eax; ret; 
0x0012c352: pop ebx; pop esi; pop ebp; ret; 
0x00115163: pop ebx; pop esi; pop edi; cmp eax, 0xfffff001; jae 0x24f50; ret; 
0x0003bbf4: pop ebx; pop esi; pop edi; fsubp st(1); ret; 
0x0018681e: pop ebx; pop esi; pop edi; jmp eax; 
0x0018b97c: pop ebx; pop esi; pop edi; movzx eax, byte ptr [eax]; ret; 
0x000287c2: pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x00061ffc: pop ebx; pop esi; pop edi; pop ebp; mov eax, ecx; ret; 
0x0003abbf: pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x0002346b: pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0013ec7c: pop ebx; pop esi; pop edi; ret 4; 
0x000255e6: pop ebx; pop esi; pop edi; ret; 
0x000c1290: pop ebx; pop esi; pop edi; xor eax, eax; ret; 
0x000407cd: pop ebx; pop esi; ret 4; 
0x00024bd8: pop ebx; pop esi; ret; 
0x0002505b: pop ebx; pop esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x000fbe0b: pop ebx; pop esi; sar eax, 1; pop edi; pop ebp; ret; 
0x00053711: pop ebx; pop esi; sbb eax, eax; and eax, 2; sub eax, 1; ret; 
0x001293e5: pop ebx; pop esi; setne al; pop edi; movzx eax, al; ret; 
0x00097398: pop ebx; pop esi; shl eax, 4; pop edi; pop ebp; ret; 
0x0003b07c: pop ebx; pop esi; shr eax, 0x1f; pop edi; ret; 
0x000c1239: pop ebx; pop esi; sub eax, 0x10; pop edi; ret; 
0x0008a22c: pop ebx; pop esi; sub eax, edi; pop edi; pop ebp; ret; 
0x0008f5f0: pop ebx; pop esi; sub ecx, edx; lea eax, [ecx + eax + 0x4000]; ret; 
0x001aa0d0: pop ebx; pop esi; xor eax, eax; pop edi; ret; 
0x00051b25: pop ebx; pop esi; xor edx, 0x7fffffff; pop edi; pop ebp; ret; 
0x00055779: pop ebx; ret 4; 
0x00024511: pop ebx; ret; 
0x00024fba: pop ebx; sahf; and dword ptr [eax], eax; lea eax, [eax - 0x690ac]; ret; 
0x0003be09: pop ebx; sar eax, 0x1f; not eax; sar edx, 0x1e; and eax, edx; ret; 
0x0007fb92: pop ebx; sar eax, 2; pop esi; pop edi; pop ebp; ret; 
0x00043093: pop ebx; setb al; ret; 
0x0012e37c: pop ebx; setg al; pop esi; pop edi; ret; 
0x00126c0e: pop ebx; setne al; pop esi; pop edi; movzx eax, al; ret; 
0x0012f420: pop ebx; shr eax, cl; and eax, 3; ret; 
0x00035d49: pop ebx; stc; call dword ptr [eax - 0x18]; 
0x0014b448: pop ebx; stc; call dword ptr [eax - 0x18]; pop ds; mov esi, gs; jmp dword ptr [esi - 0x70]; 
0x001513c9: pop ebx; stc; call dword ptr [eax - 0x73]; 
0x0014ba5f: pop ebx; stc; call dword ptr [ebx - 0x18]; 
0x00179370: pop ebx; sub eax, -0x80; pop esi; pop edi; ret; 
0x00042ab2: pop ebx; sub eax, edx; ret; 
0x0002756b: pop ebx; sub ecx, edi; call dword ptr [eax - 0x18]; 
0x00123690: pop ebx; sub edx, eax; test eax, eax; cmovns eax, edx; ret; 
0x0012e1d6: pop ebx; test eax, eax; jl 0x24f50; je 0x12e1e2; ret; 
0x00043163: pop ebx; xor eax, 0x1f; ret; 
0x000402e9: pop ebx; xor eax, eax; pop esi; pop edi; pop ebp; ret; 
0x00053c2f: pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x001a32ae: pop ebx; xor eax, eax; ret; 
0x000a1337: pop ecx; adc al, 0x89; dec ebx; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00145978: pop ecx; adc cl, byte ptr [ebp - 0x2ff4d]; jmp dword ptr [esi - 0x7d]; 
0x00195bdb: pop ecx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000a406f: pop ecx; add al, 0xf6; ret; 
0x0010920c: pop ecx; add al, 0xf7; ret; 
0x0014ef89: pop ecx; add dh, byte ptr [ecx]; shl byte ptr [esi + 0x39], 0x5a; add dh, byte ptr [ebp + eax + 0x5b]; ret; 
0x000af3bd: pop ecx; add dword ptr [ecx + 0x75ff851e], ecx; mov al, 0x83; ret 0x8301; 
0x000aeb0d: pop ecx; add eax, 0x4d8b1075; aam 0x83; ret 0xf01; 
0x00059cc6: pop ecx; add eax, 0x8d500000; xchg dl, dl; das; stc; call dword ptr [eax - 0x18]; 
0x0004a32b: pop ecx; add eax, 0x8d500000; xchg edx, edx; das; stc; call dword ptr [eax - 0x18]; 
0x000408a1: pop ecx; add ecx, 0xa; mov dword ptr [edx], ecx; ret; 
0x00129fa7: pop ecx; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00121cef: pop ecx; add esp, 0x14; pop ebx; pop esi; ret; 
0x00162dc6: pop ecx; add esp, 4; pop ebx; pop esi; ret; 
0x0007dfb9: pop ecx; cli; jmp dword ptr [esi - 0x70]; 
0x0005c51f: pop ecx; dec byte ptr [ebx - 0x8f73]; call dword ptr [ebx - 0x75]; 
0x000fd881: pop ecx; dec dword ptr [ecx + 0x14e82434]; pop ecx; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0013b83e: pop ecx; fdivr qword ptr [ecx]; ret; 
0x000dd813: pop ecx; hlt; inc dword ptr [ebx - 0x7c76ef3c]; push 0x8900003e; ret 0xc085; 
0x000fd889: pop ecx; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000e0443: pop ecx; inc esi; stc; call dword ptr [eax + 0x53]; 
0x0006b59d: pop ecx; mov ch, 0xff; call dword ptr [eax - 0x73]; 
0x0010e400: pop ecx; mov eax, 0xbe; int 0x80; 
0x000a589a: pop ecx; or dh, dh; ret; 
0x001351b0: pop ecx; pop eax; ret; 
0x00156bb6: pop ecx; pop ebx; pop esi; pop edi; ret; 
0x0003c3cc: pop ecx; pop edx; ret; 
0x0016ee7b: pop ecx; push 0; push esi; call dword ptr [eax + 0x14]; 
0x000c32ab: pop ecx; push ebx; push dword ptr [edi]; call esi; 
0x000a6a8f: pop ecx; stc; call dword ptr [eax + 0x6a]; 
0x00024827: pop ecx; stc; call dword ptr [eax - 0x18]; 
0x00143975: pop ecx; stc; call dword ptr [eax - 0x73]; 
0x000f01a3: pop ecx; stc; call dword ptr [eax - 0x75]; 
0x000247cf: pop ecx; stc; call dword ptr [eax - 1]; 
0x00060703: pop ecx; stc; call dword ptr [ebp + 0x50]; 
0x001242d9: pop ecx; stc; call dword ptr [ecx + 0x50]; 
0x00143898: pop ecx; stc; dec dword ptr [ebp - 0x68bb36d]; call dword ptr [eax - 0x77]; 
0x000964d3: pop ecx; test edi, edi; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x001955e4: pop edi; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000907f5: pop edi; add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0x8dc3; 
0x000bafbd: pop edi; add eax, 0x5e5f0000; pop ebx; ret; 
0x000d8484: pop edi; add eax, 0x8d500000; xchg byte ptr [eax], dl; js 0xd8487; call dword ptr [eax - 0x18]; 
0x00049fc6: pop edi; add eax, 0x8d500000; xchg dword ptr [eax], edx; js 0x49fc9; call dword ptr [eax - 0x18]; 
0x0004d3a8: pop edi; add eax, 0x8d500000; xchg dword ptr [eax], edx; js 0x4d3ab; call dword ptr [eax - 0x18]; 
0x0005113c: pop edi; add eax, 0x8d500000; xchg dword ptr [eax], edx; js 0x5113f; call dword ptr [eax - 0x18]; 
0x00059a6a: pop edi; add eax, 0x8d500000; xchg dword ptr [eax], edx; js 0x59a6d; call dword ptr [eax - 0x18]; 
0x000ca2cb: pop edi; add eax, 0x8d500000; xchg dword ptr [eax], edx; js 0xca2ce; call dword ptr [eax - 0x18]; 
0x000d0c5f: pop edi; add eax, 0x8d500000; xchg dword ptr [eax], edx; js 0xd0c62; call dword ptr [eax - 0x18]; 
0x0019b231: pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0005339c: pop edi; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0017b959: pop edi; add esp, 0x18; pop ebx; ret; 
0x000baa43: pop edi; and al, 0x11; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0019d173: pop edi; call 0x189c1d; add ebx, 0x3ef37; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019d069: pop edi; call 0x189c1d; add ebx, 0x3f041; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019cf62: pop edi; call 0x189c1d; add ebx, 0x3f148; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019c173: pop edi; call 0x189c1d; add ebx, 0x3fd77; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019c069: pop edi; call 0x189c1d; add ebx, 0x3fe81; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019bf62: pop edi; call 0x189c1d; add ebx, 0x3ff88; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b193: pop edi; call 0x189c1d; add ebx, 0x40b97; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b089: pop edi; call 0x189c1d; add ebx, 0x40ca1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019af82: pop edi; call 0x189c1d; add ebx, 0x40da8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019ad66: pop edi; call 0x189c1d; add ebx, 0x40f04; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019a419: pop edi; call 0x189c1d; add ebx, 0x41691; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019a3fb: pop edi; call 0x189c1d; add ebx, 0x416af; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019a362: pop edi; call 0x189c1d; add ebx, 0x41748; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019a29b: pop edi; call 0x189c1d; add ebx, 0x4180f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019a202: pop edi; call 0x189c1d; add ebx, 0x418a8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019a13b: pop edi; call 0x189c1d; add ebx, 0x4196f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019a0a2: pop edi; call 0x189c1d; add ebx, 0x41a08; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199fdb: pop edi; call 0x189c1d; add ebx, 0x41acf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199f42: pop edi; call 0x189c1d; add ebx, 0x41b68; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199e7b: pop edi; call 0x189c1d; add ebx, 0x41c2f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199de2: pop edi; call 0x189c1d; add ebx, 0x41cc8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199d1b: pop edi; call 0x189c1d; add ebx, 0x41d8f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199c82: pop edi; call 0x189c1d; add ebx, 0x41e28; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199bbb: pop edi; call 0x189c1d; add ebx, 0x41eef; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199b22: pop edi; call 0x189c1d; add ebx, 0x41f88; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199a5b: pop edi; call 0x189c1d; add ebx, 0x4204f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001999c2: pop edi; call 0x189c1d; add ebx, 0x420e8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001998fb: pop edi; call 0x189c1d; add ebx, 0x421af; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199862: pop edi; call 0x189c1d; add ebx, 0x42248; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019979b: pop edi; call 0x189c1d; add ebx, 0x4230f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199702: pop edi; call 0x189c1d; add ebx, 0x423a8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019963b: pop edi; call 0x189c1d; add ebx, 0x4246f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001995a2: pop edi; call 0x189c1d; add ebx, 0x42508; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001994db: pop edi; call 0x189c1d; add ebx, 0x425cf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199442: pop edi; call 0x189c1d; add ebx, 0x42668; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019937b: pop edi; call 0x189c1d; add ebx, 0x4272f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001992e2: pop edi; call 0x189c1d; add ebx, 0x427c8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019921b: pop edi; call 0x189c1d; add ebx, 0x4288f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199182: pop edi; call 0x189c1d; add ebx, 0x42928; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001990bb: pop edi; call 0x189c1d; add ebx, 0x429ef; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199022: pop edi; call 0x189c1d; add ebx, 0x42a88; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198d4f: pop edi; call 0x189c1d; add ebx, 0x42e1b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198319: pop edi; call 0x189c1d; add ebx, 0x43511; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001982fb: pop edi; call 0x189c1d; add ebx, 0x4352f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198262: pop edi; call 0x189c1d; add ebx, 0x435c8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001981ab: pop edi; call 0x189c1d; add ebx, 0x4367f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198112: pop edi; call 0x189c1d; add ebx, 0x43718; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019805b: pop edi; call 0x189c1d; add ebx, 0x437cf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197fc2: pop edi; call 0x189c1d; add ebx, 0x43868; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197f0b: pop edi; call 0x189c1d; add ebx, 0x4391f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197e72: pop edi; call 0x189c1d; add ebx, 0x439b8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197dbb: pop edi; call 0x189c1d; add ebx, 0x43a6f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197d22: pop edi; call 0x189c1d; add ebx, 0x43b08; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197c6b: pop edi; call 0x189c1d; add ebx, 0x43bbf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197bd2: pop edi; call 0x189c1d; add ebx, 0x43c58; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197b1b: pop edi; call 0x189c1d; add ebx, 0x43d0f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197a82: pop edi; call 0x189c1d; add ebx, 0x43da8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001979cb: pop edi; call 0x189c1d; add ebx, 0x43e5f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197932: pop edi; call 0x189c1d; add ebx, 0x43ef8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019787b: pop edi; call 0x189c1d; add ebx, 0x43faf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001977e2: pop edi; call 0x189c1d; add ebx, 0x44048; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019772b: pop edi; call 0x189c1d; add ebx, 0x440ff; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197692: pop edi; call 0x189c1d; add ebx, 0x44198; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001975db: pop edi; call 0x189c1d; add ebx, 0x4424f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197542: pop edi; call 0x189c1d; add ebx, 0x442e8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019748b: pop edi; call 0x189c1d; add ebx, 0x4439f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001973f2: pop edi; call 0x189c1d; add ebx, 0x44438; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019733b: pop edi; call 0x189c1d; add ebx, 0x444ef; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001972a2: pop edi; call 0x189c1d; add ebx, 0x44588; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001971eb: pop edi; call 0x189c1d; add ebx, 0x4463f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197152: pop edi; call 0x189c1d; add ebx, 0x446d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019709b: pop edi; call 0x189c1d; add ebx, 0x4478f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197002: pop edi; call 0x189c1d; add ebx, 0x44828; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196d3f: pop edi; call 0x189c1d; add ebx, 0x44bab; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196319: pop edi; call 0x189c1d; add ebx, 0x45291; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001962fb: pop edi; call 0x189c1d; add ebx, 0x452af; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196262: pop edi; call 0x189c1d; add ebx, 0x45348; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001961ab: pop edi; call 0x189c1d; add ebx, 0x453ff; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196112: pop edi; call 0x189c1d; add ebx, 0x45498; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019605b: pop edi; call 0x189c1d; add ebx, 0x4554f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195fc2: pop edi; call 0x189c1d; add ebx, 0x455e8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195f0b: pop edi; call 0x189c1d; add ebx, 0x4569f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195e72: pop edi; call 0x189c1d; add ebx, 0x45738; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195dbb: pop edi; call 0x189c1d; add ebx, 0x457ef; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195d22: pop edi; call 0x189c1d; add ebx, 0x45888; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195c6b: pop edi; call 0x189c1d; add ebx, 0x4593f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195bd2: pop edi; call 0x189c1d; add ebx, 0x459d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195b1b: pop edi; call 0x189c1d; add ebx, 0x45a8f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195a82: pop edi; call 0x189c1d; add ebx, 0x45b28; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001959cb: pop edi; call 0x189c1d; add ebx, 0x45bdf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195932: pop edi; call 0x189c1d; add ebx, 0x45c78; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019587b: pop edi; call 0x189c1d; add ebx, 0x45d2f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001957e2: pop edi; call 0x189c1d; add ebx, 0x45dc8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019572b: pop edi; call 0x189c1d; add ebx, 0x45e7f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195692: pop edi; call 0x189c1d; add ebx, 0x45f18; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001955db: pop edi; call 0x189c1d; add ebx, 0x45fcf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195542: pop edi; call 0x189c1d; add ebx, 0x46068; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019548b: pop edi; call 0x189c1d; add ebx, 0x4611f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001953f2: pop edi; call 0x189c1d; add ebx, 0x461b8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019533b: pop edi; call 0x189c1d; add ebx, 0x4626f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001952a2: pop edi; call 0x189c1d; add ebx, 0x46308; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001951eb: pop edi; call 0x189c1d; add ebx, 0x463bf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195152: pop edi; call 0x189c1d; add ebx, 0x46458; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019509b: pop edi; call 0x189c1d; add ebx, 0x4650f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195002: pop edi; call 0x189c1d; add ebx, 0x465a8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194d3f: pop edi; call 0x189c1d; add ebx, 0x4692b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0011fe48: pop edi; cmova eax, edx; ret; 
0x000c6692: pop edi; cmovg eax, edx; ret; 
0x000b9263: pop edi; cmp dl, byte ptr [ecx]; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00115165: pop edi; cmp eax, 0xfffff001; jae 0x24f50; ret; 
0x0003bbf6: pop edi; fsubp st(1); ret; 
0x0013d3d2: pop edi; jae 0x13d3c3; jmp dword ptr [esi - 0x70]; 
0x000bb280: pop edi; jge 0x5e6ac9ce; pop ebx; ret; 
0x000811d2: pop edi; jmp eax; 
0x000b9ba0: pop edi; maxps xmm3, xmmword ptr [esi + 0x5b]; ret; 
0x0019cc9c: pop edi; mov eax, dword ptr [esp + 8]; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x00193a90: pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001216c0: pop edi; mov ebx, dword ptr [esp + 0x60]; mov esi, dword ptr [esp + 0x6c]; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00126c13: pop edi; movzx eax, al; ret; 
0x0018b97e: pop edi; movzx eax, byte ptr [eax]; ret; 
0x001a4edd: pop edi; or al, 0; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000a2c35: pop edi; or al, 0x89; ret; 
0x00137151: pop edi; or byte ptr [ebx + ebp*8 + 0x5b], dh; mov eax, ecx; pop esi; pop edi; ret; 
0x000792ae: pop edi; or byte ptr [ecx], bh; ret; 
0x0012b8c9: pop edi; pop ebp; cmp eax, 0xfffff001; jae 0x24f50; ret; 
0x000250f4: pop edi; pop ebp; jmp eax; 
0x00033e9a: pop edi; pop ebp; mov eax, ecx; ret; 
0x000fbe7c: pop edi; pop ebp; neg eax; ret; 
0x0003b00c: pop edi; pop ebp; not eax; and eax, edx; ret; 
0x001a7842: pop edi; pop ebp; pop ebx; ret; 
0x001a5b44: pop edi; pop ebp; pop ebx; xor eax, eax; ret; 
0x0003abc1: pop edi; pop ebp; ret 4; 
0x0002346d: pop edi; pop ebp; ret; 
0x0004db43: pop edi; pop ebp; xor eax, 0x7fffffff; ret; 
0x001a0c01: pop edi; pop ebx; pop ebp; xor eax, eax; ret; 
0x000b31a2: pop edi; pop ebx; ret; 
0x000b9460: pop edi; pop esi; pop ebx; ret; 
0x000b005e: pop edi; pop esi; ret; 
0x000b9b80: pop edi; push cs; pop edi; pop esi; pop ebx; ret; 
0x0013ec7e: pop edi; ret 4; 
0x000255e8: pop edi; ret; 
0x0015037d: pop edi; sbb eax, 0xc483fffe; adc byte ptr [ebx - 0x7af0fd08], al; ret; 
0x0015d35d: pop edi; stc; call dword ptr [eax + 0x55]; 
0x00124726: pop edi; stc; call dword ptr [eax + 0x6a]; 
0x0015af2c: pop edi; stc; call dword ptr [eax - 0x18]; 
0x00124a16: pop edi; stc; call dword ptr [eax - 0x73]; 
0x0015f300: pop edi; stc; call dword ptr [eax - 1]; 
0x0015a96c: pop edi; stc; call dword ptr [ecx + 0x50]; 
0x0015aa32: pop edi; stc; call dword ptr [ecx - 0x17]; 
0x000fad56: pop edi; stc; dec dword ptr [ebp - 0x6b81e80]; call dword ptr [ebx + 0x50]; 
0x00167cfe: pop edi; std; jmp dword ptr [esi - 0x70]; 
0x001a62d1: pop edi; xor eax, eax; pop ebp; ret; 
0x000c1292: pop edi; xor eax, eax; ret; 
0x00040739: pop edx; adc al, 0x5b; pop esi; pop edi; ret; 
0x00080224: pop edx; adc byte ptr [ecx + 0x4c48331], cl; pop ebx; pop esi; ret; 
0x00195b24: pop edx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001b34f3: pop edx; add al, 0x83; ret 0xc104; 
0x001ada90: pop edx; add al, 0x83; ret 0xd304; 
0x000abef6: pop edx; add al, 0x89; add cl, byte ptr [ebp + 0x5e5b0542]; ret; 
0x0008004d: pop edx; add al, 0x89; pop eax; adc byte ptr [ecx + 0x5b0a89c8], cl; ret; 
0x00095342: pop edx; add al, byte ptr [eax]; add byte ptr [ebx + 0x458901c0], al; add al, 0xe9; mov al, byte ptr [0xf7fffffd]; ret 0; 
0x0014ef8f: pop edx; add dh, byte ptr [ebp + eax + 0x5b]; ret; 
0x0008b58d: pop edx; add dword ptr [eax + 0x56], edx; call dword ptr [ebp + 0xc]; 
0x00128dce: pop edx; add dword ptr [ebp - 0x27], esi; mov eax, esi; pop ebx; pop esi; ret; 
0x001417da: pop edx; add dword ptr [ebp - 0x76fde7bc], ecx; ret; 
0x0004057d: pop edx; add dword ptr [ebx + 0xf382454], ecx; inc ebp; ret; 
0x001752ec: pop edx; and al, 0x83; ret 0x8b18; 
0x000fd32a: pop edx; and byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000a84cc: pop edx; inc dword ptr [ebx - 0x2288fe06]; pop ebx; pop esi; pop edi; ret; 
0x00064f8f: pop edx; jbe 0x65934; mov edi, eax; jmp edx; 
0x00070b57: pop edx; jbe 0x718c0; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x48], 1; jmp eax; 
0x00070aaa: pop edx; jbe 0x71983; mov ecx, dword ptr [esp + 0x4c]; mov dword ptr [esp + 4], ecx; jmp eax; 
0x000eb13d: pop edx; mov eax, 0x166; lea ecx, [ebp - 0x6d324]; mov edi, 0x1000; call dword ptr gs:[0x10]; 
0x001a6f54: pop edx; or al, 0x39; fnstcw word ptr [eax]; jne 0x1a6f70; pop ebx; ret; 
0x000a159a: pop edx; or al, 0x89; ret 0xca83; 
0x0005ac07: pop edx; or byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0017e51a: pop edx; or byte ptr [ecx], bh; ret; 
0x0007cce7: pop edx; or cl, ch; cmp esi, -1; jmp dword ptr [esi - 0x70]; 
0x000a378e: pop edx; or dh, dh; ret; 
0x000ccb7b: pop edx; or dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x000a5c1d: pop edx; pop ebx; pop esi; ret; 
0x001351af: pop edx; pop ecx; pop eax; ret; 
0x0016ee7a: pop edx; pop ecx; push 0; push esi; call dword ptr [eax + 0x14]; 
0x000c32aa: pop edx; pop ecx; push ebx; push dword ptr [edi]; call esi; 
0x00175d38: pop edx; push 0; push edi; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x14]; 
0x0016fafd: pop edx; push dword ptr [esi + 0x10]; push ebx; call dword ptr [esi + 0x14]; 
0x001701af: pop edx; push dword ptr [esp + 0x48]; push esi; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x00170c17: pop edx; push dword ptr [esp + 8]; push esi; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x18]; 
0x0016fb29: pop edx; push edi; push ebx; call dword ptr [eax + 0x14]; 
0x001702ad: pop edx; push edi; push esi; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0003c3cd: pop edx; ret; 
0x001479e7: pop edx; stc; call dword ptr [eax + 0x51]; 
0x0014841d: pop edx; stc; call dword ptr [eax + 0x53]; 
0x00147ca4: pop edx; stc; call dword ptr [eax + 0x68]; 
0x00147583: pop edx; stc; call dword ptr [eax - 0x18]; 
0x000c1565: pop edx; xor eax, eax; pop edi; ret; 
0x0002fe42: pop edx; xor edi, edi; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0008d9af: pop es; aas; stc; call dword ptr [ecx + 0x52]; 
0x000a30fc: pop es; adc byte ptr [ebx - 0x76efdb84], cl; ret 0xfa29; 
0x0019b3df: pop es; add al, 0x5f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001994d9: pop es; add al, 0x5f; call 0x189c1d; add ebx, 0x425cf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197489: pop es; add al, 0x5f; call 0x189c1d; add ebx, 0x4439f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195489: pop es; add al, 0x5f; call 0x189c1d; add ebx, 0x4611f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b2bf: pop es; add bl, byte ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x00090b8f: pop es; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0005b877: pop es; add byte ptr [eax], al; add byte ptr [ebx - 0x3fcefb3c], al; pop ebx; pop esi; ret; 
0x00097058: pop es; add byte ptr [eax], al; add byte ptr [ecx - 0x9cefba9], cl; xor edx, edx; call dword ptr gs:[0x10]; 
0x000313fe: pop es; add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0xf289; 
0x00128d2c: pop es; add byte ptr [eax], al; add esp, 0x10; add esp, 0xc; ret; 
0x0004a50d: pop es; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x001aa572: pop es; add byte ptr [eax], al; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x001a67fa: pop es; add byte ptr [eax], al; pop ebx; ret; 
0x000b963b: pop es; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000c4259: pop es; add byte ptr [ebp - 0x6642f7b], cl; call dword ptr [eax - 0x73]; 
0x000c3fc5: pop es; add byte ptr [ebp - 0x6643b7e], cl; call dword ptr [eax - 0x73]; 
0x000534de: pop es; add byte ptr [ebx - 0x3b7cef3c], al; add al, 0x5b; pop esi; ret; 
0x000c6d56: pop es; add byte ptr [ebx - 0x72e3db84], cl; xchg dword ptr [eax], ebp; popfd; stc; call dword ptr [eax - 0x73]; 
0x000c69f2: pop es; add byte ptr [ebx - 0x72e3db84], cl; xchg dword ptr [eax], ebx; popfd; stc; call dword ptr [eax - 0x73]; 
0x000c454a: pop es; add byte ptr [ebx - 0x72e3db84], cl; xchg esp, ebx; wait; stc; call dword ptr [eax - 0x73]; 
0x000c48cc: pop es; add byte ptr [ebx - 0x72e3dbac], cl; sbb byte ptr [eax], 0x9c; stc; call dword ptr [eax - 0x73]; 
0x00030277: pop es; add byte ptr [ecx - 0x76bbdbbc], cl; ret 0xc483; 
0x00030269: pop es; add byte ptr [ecx - 0x76e3dbbc], cl; lds ecx, ptr [ecx - 0x6817dbc4]; mov dl, 7; add byte ptr [ecx - 0x76bbdbbc], cl; ret 0xc483; 
0x0008c7ab: pop es; add dword ptr [eax], eax; add byte ptr [ebx + 0x6a04ec], al; push 0; push esi; call dword ptr [ebp + 0x2c]; 
0x000299eb: pop es; add dword ptr [eax], eax; add byte ptr [ebx - 0x72c3db8c], cl; xchg byte ptr [ebx + ebp*2 - 7], ch; call dword ptr [eax - 0x73]; 
0x0018aafd: pop es; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x0004a5c5: pop es; add dword ptr [eax], eax; add byte ptr [esi - 0x7b], ah; ror byte ptr [edi], cl; xchg ebp, eax; ret 0xb60f; 
0x000effdf: pop es; add dword ptr [ecx], eax; ret; 
0x0019b22f: pop es; add dword ptr [edi + 3], ebx; sbb al, 0x8b; jmp ebx; 
0x0007ca99: pop es; add dword ptr [edi], ecx; inc ebp; ret 0xec83; 
0x0019b46f: pop es; add eax, 0x8b1c035f; jmp ebx; 
0x0019b34f: pop es; add ebx, dword ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x000bb574: pop es; add edi, 0x10; call 0x189c31; add ecx, 0x1119b3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9e74: pop es; add edi, 0x10; call 0x189c31; add ecx, 0x112f53; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0011feb0: pop es; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00092832: pop es; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000deecd: pop es; add esp, 0x28; xor eax, eax; pop ebx; ret; 
0x00125121: pop es; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0013180c: pop es; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x0003da61: pop es; add esp, 0x9c; ret; 
0x000a0bf8: pop es; add esp, 8; pop ebx; ret; 
0x0016e379: pop es; call 0x1565b0; add esp, 0x1c; ret; 
0x0016e398: pop es; call 0x156690; add esp, 0x1c; ret; 
0x000b892f: pop es; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000fdcec: pop es; dec eax; stc; call dword ptr [eax + 0x55]; 
0x00126fec: pop es; dec ebp; stc; call dword ptr [eax + 0x55]; 
0x000b43c5: pop es; idiv bh; jmp dword ptr [esi + 0xf]; 
0x001aaaa2: pop es; jb 0x1aab10; lea eax, [edi + 6]; pop edi; ret; 
0x001abac2: pop es; jb 0x1abb30; lea eax, [eax + 6]; pop edi; ret; 
0x001ab162: pop es; jl 0x1ab1d0; lea eax, [ecx + 7]; ret; 
0x001aa512: pop es; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x000b3561: pop es; jne 0xb3800; pop edi; pop ebx; ret; 
0x000b3961: pop es; jne 0xb3801; pop ebx; ret; 
0x000b7de2: pop es; jne 0xb7c51; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b953f: pop es; jne 0xb9e20; pop edi; pop esi; pop ebx; ret; 
0x000bab82: pop es; jne 0xbb520; pop edi; pop esi; pop ebx; ret; 
0x000bb1a7: pop es; lea eax, [edi + 0x10]; pop edi; pop esi; pop ebx; ret; 
0x000bb10d: pop es; lea eax, [edi + 0xb]; pop edi; pop esi; pop ebx; ret; 
0x000bb191: pop es; lea eax, [edi + 0xf]; pop edi; pop esi; pop ebx; ret; 
0x000bb0b7: pop es; lea eax, [edi + 8]; pop edi; pop esi; pop ebx; ret; 
0x001ac6a8: pop es; lea eax, [edi - 0x10]; pop edi; ret; 
0x000b5b3d: pop es; lea eax, [edx + 0xa]; pop edi; ret; 
0x000b5c7d: pop es; lea eax, [edx + 0xa]; ret; 
0x000b8854: pop es; lea eax, [edx + 0xe]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b5ba1: pop es; lea eax, [edx + 0xe]; pop edi; ret; 
0x000b5d01: pop es; lea eax, [edx + 0xe]; ret; 
0x000b355e: pop es; lea ecx, [edx + 7]; jne 0xb3800; pop edi; pop ebx; ret; 
0x000b395e: pop es; lea ecx, [edx + 7]; jne 0xb3801; pop ebx; ret; 
0x0019ba0f: pop es; maxps xmm0, xmmword ptr [ebx]; sbb al, 0x8b; jmp ebx; 
0x000c2ff7: pop es; mov byte ptr [ecx + eax], 0; dec ecx; jne 0xc2ff8; pop esi; ret; 
0x000b9ada: pop es; mov byte ptr [edi + 0x10], cl; pop edi; pop esi; pop ebx; ret; 
0x000b99ea: pop es; mov byte ptr [edi + 8], dl; pop edi; pop esi; pop ebx; ret; 
0x00118b15: pop es; mov dword ptr [0xc483fffa], eax; adc byte ptr [ecx], bh; ret; 
0x000b9b3a: pop es; mov dword ptr [edi + 0x10], ecx; pop edi; pop esi; pop ebx; ret; 
0x000b9b1a: pop es; mov dword ptr [edi + 0xf], ecx; pop edi; pop esi; pop ebx; ret; 
0x000b9a2a: pop es; mov dword ptr [edi + 7], edx; pop edi; pop esi; pop ebx; ret; 
0x000b9a4a: pop es; mov dword ptr [edi + 8], edx; pop edi; pop esi; pop ebx; ret; 
0x0009aa8a: pop es; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x000ba3ac: pop es; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x000ba50c: pop es; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000bff1d: pop es; mov dword ptr [edx + 7], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000b8d6c: pop es; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000b8ecc: pop es; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000605b2: pop es; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x000a9529: pop es; mov eax, dword ptr [ecx + edx*4 - 0xd14]; ret; 
0x000a94f9: pop es; mov eax, dword ptr [ecx + edx*4 - 0xe34]; ret; 
0x000c0b70: pop es; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd6fd: pop es; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009fe10: pop es; mov eax, ecx; pop ebx; ret; 
0x000bff20: pop es; mov eax, edi; pop ebx; pop edi; ret; 
0x000b175d: pop es; mov eax, edi; pop edi; ret; 
0x000b4384: pop es; mov eax, edx; pop ebx; ret; 
0x000b189d: pop es; mov eax, edx; ret; 
0x0008fd67: pop es; mov ebx, dword ptr [edi + 4]; mov ecx, dword ptr [edi + 8]; mov edx, dword ptr [edi + 0xc]; call dword ptr gs:[0x10]; 
0x001a314d: pop es; mov ecx, dword ptr [ebx + ecx*4 - 0x86474]; mov eax, dword ptr [ebx + eax*4 - 0x86474]; sub eax, ecx; pop ebx; ret; 
0x000b9afb: pop es; mov word ptr [edi + 0x10], cx; pop edi; pop esi; pop ebx; ret; 
0x000b9a0b: pop es; mov word ptr [edi + 8], dx; pop edi; pop esi; pop ebx; ret; 
0x000b9cbc: pop es; movdqu xmmword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b9c5c: pop es; movdqu xmmword ptr [edi + 0xd], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b9c7c: pop es; movdqu xmmword ptr [edi + 0xe], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b9c9c: pop es; movdqu xmmword ptr [edi + 0xf], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000bd6f6: pop es; movlpd qword ptr [eax], xmm0; mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bd778: pop es; movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b9bbc: pop es; movlpd qword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b9b7c: pop es; movlpd qword ptr [edi + 0xe], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000b9b9c: pop es; movlpd qword ptr [edi + 0xf], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000b9dc3: pop es; movlpd qword ptr [edi + 5], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b9a6c: pop es; movlpd qword ptr [edi + 5], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000b9dd3: pop es; movlpd qword ptr [edi + 6], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b9a8c: pop es; movlpd qword ptr [edi + 6], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000b9aac: pop es; movlpd qword ptr [edi + 7], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000ba42c: pop es; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000ba58c: pop es; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000bff9f: pop es; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b8dec: pop es; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000b8f4c: pop es; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000b5b36: pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x000b5c76: pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000b1756: pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000b1896: pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000b5b98: pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; pop edi; ret; 
0x000b5cf8: pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000b17b8: pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x000b437b: pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; pop ebx; ret; 
0x000b1918: pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x0017d0a7: pop es; movzx eax, al; add esp, 0x1c; ret; 
0x0011f063: pop es; movzx eax, al; add esp, 0x4c; ret; 
0x0014ef5b: pop es; movzx eax, ax; add esp, 0x2c; ret; 
0x001a0aa0: pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; pop ebp; ret; 
0x0019f2f3: pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x0019b85f: pop es; or al, 0x5f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199fd9: pop es; or al, 0x5f; call 0x189c1d; add ebx, 0x41acf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197f09: pop es; or al, 0x5f; call 0x189c1d; add ebx, 0x4391f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195f09: pop es; or al, 0x5f; call 0x189c1d; add ebx, 0x4569f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b73f: pop es; or bl, byte ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x0019b61f: pop es; or byte ptr [edi + 3], bl; sbb al, 0x8b; jmp ebx; 
0x00199a59: pop es; or byte ptr [edi - 0x18], bl; mov esp, 0x81ffff01; ret; 
0x000c30a5: pop es; or dword ptr [eax + 0x3c90], 1; xor eax, eax; pop ebx; ret; 
0x0019b6af: pop es; or dword ptr [edi + 3], ebx; sbb al, 0x8b; jmp ebx; 
0x0019b8ef: pop es; or eax, 0x8b1c035f; jmp ebx; 
0x000b9443: pop es; or eax, 0xfac18100; cmp byte ptr [ecx], dl; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0019b7cf: pop es; or ebx, dword ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x00095965: pop es; out 0xf9, eax; jmp dword ptr [esi - 0x70]; 
0x00053e29: pop es; pop eax; pop ebx; pop esi; pop edi; ret; 
0x00132fd8: pop es; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00088c48: pop es; pop ebx; pop esi; pop edi; ret; 
0x000abe9f: pop es; pop ebx; pop esi; ret; 
0x000b3726: pop es; pop ebx; ret; 
0x0018c4e8: pop es; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0019b590: pop es; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001998fa: pop es; pop edi; call 0x189c1d; add ebx, 0x421af; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019787a: pop es; pop edi; call 0x189c1d; add ebx, 0x43faf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019587a: pop es; pop edi; call 0x189c1d; add ebx, 0x45d2f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193a8f: pop es; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000b99d7: pop es; pop edi; pop esi; pop ebx; ret; 
0x000b59ea: pop es; pop edi; ret; 
0x0019b58f: pop es; pop es; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019bcca: pop es; pop esi; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019b97f: pop es; push cs; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b4ff: pop es; push es; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000a86ab: pop es; ret; 
0x0013c8dc: pop es; sar eax, 5; add esp, 0xc; ret; 
0x000915e1: pop es; sub byte ptr [eax + 0xf0], bh; call dword ptr gs:[0x10]; 
0x001a0aa4: pop es; sub eax, ecx; pop ebp; ret; 
0x0019f2f7: pop es; sub eax, ecx; ret; 
0x000b7e0a: pop es; sub ebx, 8; lea ecx, [edx + 8]; jne 0xb7c51; pop ebx; ret; 
0x0016ee2a: pop es; sub esp, 8; mov edx, dword ptr [eax + 0x20]; push esi; push eax; call dword ptr [edx + 4]; 
0x000608c0: pop es; xor bh, cl; call dword ptr [ebp + 0x50]; 
0x000ad13d: pop es; xor byte ptr [edi], cl; xchg esp, eax; ret; 
0x0009847c: pop es; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0015bf0a: pop es; xor eax, eax; cmp ecx, edx; setne al; ret; 
0x00097ff9: pop es; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0009a598: pop es; xor eax, eax; ret; 
0x00078913: pop es; xor edi, ecx; call dword ptr [eax - 0x73]; 
0x0002719f: pop esi; adc byte ptr [eax], al; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0004a2c2: pop esi; add al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + esi*2 - 7], ebx; call dword ptr [eax - 0x18]; 
0x00050be4: pop esi; add al, 0; add byte ptr [ebx - 0x7cdfdb84], cl; jmp dword ptr [eax]; 
0x00195734: pop esi; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0012386f: pop esi; add al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x00111228: pop esi; add al, 0x89; ret 0x7c8b; 
0x001575ae: pop esi; add byte ptr [eax], al; add bh, al; cmp dword ptr [eax + 0x5e], 0; add byte ptr [eax], al; call esi; 
0x001575b5: pop esi; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x0002c491: pop esi; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dh, cl; sub bh, cl; call dword ptr [eax - 0x18]; 
0x0002a0ae: pop esi; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg esi, ecx; sub bh, cl; call dword ptr [eax - 0x18]; 
0x00028f4b: pop esi; add dword ptr [eax], eax; add byte ptr [ebp - 0x6d54579], cl; call dword ptr [eax - 0x73]; 
0x00029b7b: pop esi; add dword ptr [eax], eax; add byte ptr [ebp - 0x6d5457a], cl; call dword ptr [eax - 0x73]; 
0x00083bbd: pop esi; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e5b20c4], al; pop edi; ret; 
0x001336cb: pop esi; add eax, 0x45c58100; mov bh, 0x10; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x001a6444: pop esi; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001238bb: pop esi; add eax, ecx; adc edx, 0; ret; 
0x000fbe78: pop esi; and eax, 1; pop edi; pop ebp; neg eax; ret; 
0x0015c87d: pop esi; and edx, 0xf; mov eax, edx; ret; 
0x000c1272: pop esi; bsr eax, eax; add eax, edi; sub eax, 0x10; pop edi; ret; 
0x0019de6c: pop esi; call 0x189c1d; add ebx, 0x3e33e; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00033e96: pop esi; cmove ecx, eax; pop edi; pop ebp; mov eax, ecx; ret; 
0x000c66b1: pop esi; cmovg eax, edx; pop edi; ret; 
0x000a15d4: pop esi; cmp byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x00032b6e: pop esi; cmp dl, 0xff; cmove edx, ecx; mov byte ptr [eax + 0x1201], dl; lea eax, [eax + 0x11cc]; ret; 
0x001208bf: pop esi; cmp eax, 0xfffff001; jae 0x24f50; ret; 
0x0007a795: pop esi; idiv bh; jmp dword ptr [esi - 0x70]; 
0x00155860: pop esi; imul eax, ecx, 0xb6db6db7; pop edi; pop ebp; ret; 
0x00082bda: pop esi; jmp eax; 
0x000c72fb: pop esi; lea eax, [eax + edx*4]; pop edi; pop ebp; ret; 
0x001ac64e: pop esi; lea eax, [edi - 0x10]; pop edi; ret; 
0x0009cf28: pop esi; mov dword ptr [ecx + 0x10], eax; mov dword ptr [edx + 0x3ba8], ecx; ret; 
0x0003dfbb: pop esi; mov eax, ebp; pop edi; pop ebp; ret; 
0x0008d2d0: pop esi; mov eax, ecx; pop edi; pop ebp; ret; 
0x0007f1f6: pop esi; mov eax, ecx; pop edi; ret; 
0x000d9848: pop esi; mov eax, ecx; ret; 
0x0003360b: pop esi; mov eax, edi; pop edi; pop ebp; ret; 
0x00103036: pop esi; mov eax, edi; pop edi; ret; 
0x000abc73: pop esi; mov eax, edx; pop edi; pop ebp; ret; 
0x00094b6a: pop esi; mov eax, edx; ret; 
0x0005b5da: pop esi; movzx eax, al; pop edi; ret; 
0x000c668d: pop esi; neg eax; cmp ecx, edi; pop edi; cmovg eax, edx; ret; 
0x0004db40: pop esi; neg eax; pop edi; pop ebp; xor eax, 0x7fffffff; ret; 
0x00136d75: pop esi; neg eax; ret; 
0x001a5e2d: pop esi; pop ebp; pop ebx; ret; 
0x001a5e0e: pop esi; pop ebp; pop ebx; xor eax, eax; ret; 
0x0012c353: pop esi; pop ebp; ret; 
0x0012e414: pop esi; pop ebx; jl 0x24f50; ret; 
0x0010b61c: pop esi; pop ebx; mov eax, 0xc; pop esi; pop edi; ret; 
0x000b9461: pop esi; pop ebx; ret; 
0x0012e1d5: pop esi; pop ebx; test eax, eax; jl 0x24f50; je 0x12e1e2; ret; 
0x0019d172: pop esi; pop edi; call 0x189c1d; add ebx, 0x3ef37; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019d068: pop esi; pop edi; call 0x189c1d; add ebx, 0x3f041; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019cf61: pop esi; pop edi; call 0x189c1d; add ebx, 0x3f148; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019c172: pop esi; pop edi; call 0x189c1d; add ebx, 0x3fd77; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019c068: pop esi; pop edi; call 0x189c1d; add ebx, 0x3fe81; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019bf61: pop esi; pop edi; call 0x189c1d; add ebx, 0x3ff88; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b192: pop esi; pop edi; call 0x189c1d; add ebx, 0x40b97; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b088: pop esi; pop edi; call 0x189c1d; add ebx, 0x40ca1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019af81: pop esi; pop edi; call 0x189c1d; add ebx, 0x40da8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00115164: pop esi; pop edi; cmp eax, 0xfffff001; jae 0x24f50; ret; 
0x0003bbf5: pop esi; pop edi; fsubp st(1); ret; 
0x000811d1: pop esi; pop edi; jmp eax; 
0x0019bccb: pop esi; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00126c12: pop esi; pop edi; movzx eax, al; ret; 
0x0018b97d: pop esi; pop edi; movzx eax, byte ptr [eax]; ret; 
0x0012b8c8: pop esi; pop edi; pop ebp; cmp eax, 0xfffff001; jae 0x24f50; ret; 
0x000287c3: pop esi; pop edi; pop ebp; jmp eax; 
0x00061ffd: pop esi; pop edi; pop ebp; mov eax, ecx; ret; 
0x001a7841: pop esi; pop edi; pop ebp; pop ebx; ret; 
0x001a5b43: pop esi; pop edi; pop ebp; pop ebx; xor eax, eax; ret; 
0x0003abc0: pop esi; pop edi; pop ebp; ret 4; 
0x0002346c: pop esi; pop edi; pop ebp; ret; 
0x001a0c00: pop esi; pop edi; pop ebx; pop ebp; xor eax, eax; ret; 
0x001a72dd: pop esi; pop edi; pop ebx; ret; 
0x0013ec7d: pop esi; pop edi; ret 4; 
0x000255e7: pop esi; pop edi; ret; 
0x001a62d0: pop esi; pop edi; xor eax, eax; pop ebp; ret; 
0x000c1291: pop esi; pop edi; xor eax, eax; ret; 
0x00092ac1: pop esi; push 0x2248e8b; add byte ptr [eax], al; lea edx, [esi + 0x220]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x00092a78: pop esi; push 0x8b04488b; adc byte ptr [eax + 0xf1], bh; call dword ptr gs:[0x10]; 
0x000b319e: pop esi; push es; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0013baf2: pop esi; push esi; stc; call dword ptr [ebx + 0x50]; 
0x000407ce: pop esi; ret 4; 
0x00024bd9: pop esi; ret; 
0x0002505c: pop esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x000250e9: pop esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; pop edi; pop ebp; jmp eax; 
0x0015732c: pop esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; pop edi; pop ebp; ret; 
0x000fbe0c: pop esi; sar eax, 1; pop edi; pop ebp; ret; 
0x000fee08: pop esi; sbb al, 0x83; rol byte ptr [ecx], 0x39; ret; 
0x00053712: pop esi; sbb eax, eax; and eax, 2; sub eax, 1; ret; 
0x001293e6: pop esi; setne al; pop edi; movzx eax, al; ret; 
0x00097399: pop esi; shl eax, 4; pop edi; pop ebp; ret; 
0x0003b07d: pop esi; shr eax, 0x1f; pop edi; ret; 
0x0015a068: pop esi; stc; call dword ptr [eax + 0x55]; 
0x0003eac5: pop esi; stc; call dword ptr [eax - 0x18]; 
0x0015628a: pop esi; stc; call dword ptr [eax - 0x18]; fstp st(5); in eax, dx; jmp dword ptr [esi - 0x70]; 
0x00156ca5: pop esi; stc; call dword ptr [eax - 0x73]; 
0x0013e94a: pop esi; stc; dec dword ptr [ebp - 0x6417ff8a]; fdivp st(7); jmp dword ptr [esi - 0x70]; 
0x000c123a: pop esi; sub eax, 0x10; pop edi; ret; 
0x0008a22d: pop esi; sub eax, edi; pop edi; pop ebp; ret; 
0x0008f5f1: pop esi; sub ecx, edx; lea eax, [ecx + eax + 0x4000]; ret; 
0x001ac669: pop esi; test al, 0xf0; jne 0x1ac6b0; lea eax, [edi - 0x10]; pop edi; ret; 
0x001257c8: pop esi; xor cl, bh; call dword ptr [eax - 0x18]; 
0x0005aaa5: pop esi; xor cl, bh; inc dword ptr [ebp - 0x38ec8b40]; add byte ptr [edi], ch; jbe 0x5aa3d; ret 0x40c7; 
0x000c2252: pop esi; xor eax, eax; pop ebx; ret; 
0x001a7850: pop esi; xor eax, eax; pop edi; pop ebp; pop ebx; ret; 
0x001aa0d1: pop esi; xor eax, eax; pop edi; ret; 
0x00051b26: pop esi; xor edx, 0x7fffffff; pop edi; pop ebp; ret; 
0x001b5545: pop esp; adc dword ptr [ebx + eax*4], eax; ret 0x3908; 
0x00047a4b: pop esp; add al, 0; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0019593b: pop esp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199bbd: pop esp; add bh, bh; inc dword ptr [ecx + 0x41eefc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0012c461: pop esp; add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x000e8b8b: pop esp; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0010f04f: pop esp; add eax, dword ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x001251a2: pop esp; add eax, dword ptr [eax]; add byte ptr [ebx - 0x76f7dbac], cl; add bh, byte ptr [eax + 1]; ret; 
0x0014ad03: pop esp; add esp, 0x118; pop ebx; ret; 
0x0011f70c: pop esp; and al, 0x10; call dword ptr gs:[0x10]; 
0x0010bde5: pop esp; and al, 0x10; cmp esi, ecx; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x00098164: pop esp; and al, 0x10; mov dword ptr [ebx], 0; call dword ptr gs:[0x10]; 
0x0012ad84: pop esp; and al, 0x10; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x001220ed: pop esp; and al, 0x10; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00115154: pop esp; and al, 0x10; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0011f124: pop esp; and al, 0x10; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x00130c84: pop esp; and al, 0x10; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x00130904: pop esp; and al, 0x10; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x00130984: pop esp; and al, 0x10; mov eax, 0x1ad; call dword ptr gs:[0x10]; 
0x00130724: pop esp; and al, 0x10; mov eax, 0x1af; call dword ptr gs:[0x10]; 
0x00130ae4: pop esp; and al, 0x10; mov eax, 0x1b8; call dword ptr gs:[0x10]; 
0x00130944: pop esp; and al, 0x10; mov eax, 0x1ba; call dword ptr gs:[0x10]; 
0x00130814: pop esp; and al, 0x10; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x00130b54: pop esp; and al, 0x10; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0012f554: pop esp; and al, 0x10; mov eax, 0xac; call dword ptr gs:[0x10]; 
0x0012b7a4: pop esp; and al, 0x10; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x00128604: pop esp; and al, 0x10; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x00124994: pop esp; and al, 0x10; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x00131963: pop esp; and al, 0x10; mov ebx, 0xa; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00132073: pop esp; and al, 0x10; mov ebx, 9; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012fb61: pop esp; and al, 0x10; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00061320: pop esp; and al, 0x10; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0012206d: pop esp; and al, 0x10; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0012f2a4: pop esp; and al, 0x14; call dword ptr gs:[0x10]; 
0x00188745: pop esp; and al, 0x14; jne 0x188750; pop ebx; ret; 
0x00131303: pop esp; and al, 0x14; mov ebx, 0x12; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012f017: pop esp; and al, 0x14; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x000eaba1: pop esp; and al, 0x14; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x0013ac5e: pop esp; and al, 0x18; je 0x13ac70; add esp, 8; pop ebx; ret; 
0x0012b8b9: pop esp; and al, 0x18; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0012e1c4: pop esp; and al, 0x18; mov edi, dword ptr [esp + 0x28]; mov eax, 0x78; mov dword ptr [ecx], ebx; int 0x80; 
0x00121d01: pop esp; and al, 0x20; lea edx, [esp + 4]; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x00122d00: pop esp; and al, 0x20; mov eax, 0x36; mov ecx, 0x5409; mov edx, 1; call dword ptr gs:[0x10]; 
0x00124d9f: pop esp; and al, 0x20; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x0012484f: pop esp; and al, 0x20; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x0003c9ef: pop esp; and al, 0x20; mov eax, 0xb3; mov ecx, 8; call dword ptr gs:[0x10]; 
0x0011e65b: pop esp; and al, 0x20; mov eax, 0xb7; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00121ccd: pop esp; and al, 0x20; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0011473f: pop esp; and al, 0x20; mov eax, 6; call dword ptr gs:[0x10]; 
0x0003ca16: pop esp; and al, 0x20; mov ecx, 8; mov edx, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x0012f330: pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x156; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00040400: pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x163; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001295b0: pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x90; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0012ac60: pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x91; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0012d870: pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x92; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011fd60: pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0xa8; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00120790: pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 3; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00121940: pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 4; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001149bf: pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 8; call dword ptr gs:[0x10]; 
0x001149e6: pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov edx, eax; mov eax, 8; call dword ptr gs:[0x10]; 
0x0010befa: pop esp; and al, 0x20; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00124dc6: pop esp; and al, 0x20; mov edx, eax; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00124876: pop esp; and al, 0x20; mov edx, eax; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x00114766: pop esp; and al, 0x20; mov edx, eax; mov eax, 6; call dword ptr gs:[0x10]; 
0x000a00e7: pop esp; and al, 0x20; test ebx, ebx; js 0xa0118; mov eax, 0x107; call dword ptr gs:[0x10]; 
0x000db72a: pop esp; and al, 0x24; push ebp; push dword ptr [esp + 0x30]; mov eax, dword ptr [esp + 0x64]; call eax; 
0x000de919: pop esp; and al, 0x30; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012b71d: pop esp; and al, 0x30; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x0012b67d: pop esp; and al, 0x30; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x0010c29d: pop esp; and al, 0x30; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x0010c442: pop esp; and al, 0x30; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x0010c392: pop esp; and al, 0x30; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x0010c50a: pop esp; and al, 0x30; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x0010c1fa: pop esp; and al, 0x30; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x00115465: pop esp; and al, 0x30; mov eax, 0xdd; mov ecx, esi; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0011fa3a: pop esp; and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x127; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0011fb40: pop esp; and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x127; mov edx, edi; call dword ptr gs:[0x10]; 
0x00129a09: pop esp; and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14d; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0012a339: pop esp; and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14e; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000fb6da: pop esp; and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb4; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000fb89a: pop esp; and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb5; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0012fdca: pop esp; and al, 0x30; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0011f4c1: pop esp; and al, 0x30; mov edi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000e79d6: pop esp; and al, 0x40; cmp dword ptr [ecx + 8], 0x3b9ac9ff; ja 0xe7a90; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x0010bfeb: pop esp; and al, 0x40; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00122baf: pop esp; and al, 0x40; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x000e767b: pop esp; and al, 0x40; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0011528b: pop esp; and al, 0x50; mov eax, 0xdd; mov ecx, esi; mov edx, edi; call dword ptr gs:[0x10]; 
0x00133431: pop esp; and al, 0x50; mov ecx, dword ptr [esp + 8]; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x0012fedb: pop esp; and al, 0x60; lea ecx, [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x001231d9: pop esp; and al, 0x60; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x000deab1: pop esp; and al, 0x60; lea edx, [esp + 0x2c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0012f5fa: pop esp; and al, 0x60; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x001300a3: pop esp; and al, 0x60; mov ecx, dword ptr [esp + 0x64]; lea esi, [esp + 0x2c]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x00130131: pop esp; and al, 0x60; mov ecx, dword ptr [esp + 0x64]; mov eax, 0x145; mov esi, edi; call dword ptr gs:[0x10]; 
0x00130003: pop esp; and al, 0x60; mov ecx, dword ptr [esp + 0x64]; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x000deb21: pop esp; and al, 0x60; mov edx, dword ptr [esp + 0xc]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x00121788: pop esp; and al, 0x60; mov esi, dword ptr [esp + 0x6c]; mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x001216c2: pop esp; and al, 0x60; mov esi, dword ptr [esp + 0x6c]; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00140974: pop esp; and al, 0x6c; mov eax, 6; call dword ptr gs:[0x10]; 
0x001229c0: pop esp; and al, 0x70; lea edx, [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00115f1f: pop esp; and al, 0x70; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x0008f2e8: pop esp; and al, 0xc; call dword ptr gs:[0x10]; 
0x0008f2e8: pop esp; and al, 0xc; call dword ptr gs:[0x10]; pop ebx; pop esi; ret; 
0x000e8bef: pop esp; and al, 0xc; cmp edx, eax; cmova edx, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x001208af: pop esp; and al, 0xc; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x0012f1de: pop esp; and al, 0xc; mov eax, 0x178; call dword ptr gs:[0x10]; 
0x00130aaf: pop esp; and al, 0xc; mov eax, 0x1a8; call dword ptr gs:[0x10]; 
0x00130b8f: pop esp; and al, 0xc; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x0012f211: pop esp; and al, 0xc; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x00126a6f: pop esp; and al, 0xc; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x0012842f: pop esp; and al, 0xc; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x001248ff: pop esp; and al, 0xc; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x001306ef: pop esp; and al, 0xc; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x00070fee: pop esp; and al, 0xc; mov ecx, dword ptr [ebx + edx*4 - 0x736b4]; add ecx, eax; jmp ecx; 
0x0007078e: pop esp; and al, 0xc; mov ecx, dword ptr [ebx + edx*4 - 0x73734]; add ecx, eax; jmp ecx; 
0x00072140: pop esp; and al, 0xc; mov ecx, dword ptr [ebx + edx*4 - 0x73834]; add ecx, eax; jmp ecx; 
0x00092536: pop esp; and al, 0xc; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008f317: pop esp; and al, 0xc; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00130897: pop esp; and al, 4; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x00130bd3: pop esp; and al, 4; mov eax, 0x136; call dword ptr gs:[0x10]; 
0x00130c17: pop esp; and al, 4; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x0012ed07: pop esp; and al, 4; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x001306c3: pop esp; and al, 4; mov eax, 0x149; call dword ptr gs:[0x10]; 
0x0011fd17: pop esp; and al, 4; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x00130873: pop esp; and al, 4; mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x00130c47: pop esp; and al, 4; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x0012b883: pop esp; and al, 4; mov eax, 0x158; call dword ptr gs:[0x10]; 
0x00130cb7: pop esp; and al, 4; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x00130ce7: pop esp; and al, 4; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x00130d17: pop esp; and al, 4; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x00130d43: pop esp; and al, 4; mov eax, 0x17e; call dword ptr gs:[0x10]; 
0x00130787: pop esp; and al, 4; mov eax, 0x1ae; call dword ptr gs:[0x10]; 
0x00130a17: pop esp; and al, 4; mov eax, 0x1b2; call dword ptr gs:[0x10]; 
0x000ea143: pop esp; and al, 4; mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x00130b17: pop esp; and al, 4; mov eax, 0x1c0; call dword ptr gs:[0x10]; 
0x0003c957: pop esp; and al, 4; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x00114a83: pop esp; and al, 4; mov eax, 0x29; call dword ptr gs:[0x10]; 
0x00123783: pop esp; and al, 4; mov eax, 0x33; call dword ptr gs:[0x10]; 
0x0010c317: pop esp; and al, 4; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x001214d3: pop esp; and al, 4; mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x001214d3: pop esp; and al, 4; mov eax, 0x3c; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00123963: pop esp; and al, 4; mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x0012b627: pop esp; and al, 4; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x00130bf3: pop esp; and al, 4; mov eax, 0x56; call dword ptr gs:[0x10]; 
0x0012b837: pop esp; and al, 4; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x001296b7: pop esp; and al, 4; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x00114ef7: pop esp; and al, 4; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x0012d9a3: pop esp; and al, 4; mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x0012d833: pop esp; and al, 4; mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x001305b3: pop esp; and al, 4; mov eax, 0x71; call dword ptr gs:[0x10]; 
0x0012b813: pop esp; and al, 4; mov eax, 0x73; call dword ptr gs:[0x10]; 
0x00130bb3: pop esp; and al, 4; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x0012b387: pop esp; and al, 4; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x0010e3e3: pop esp; and al, 4; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x001307e3: pop esp; and al, 4; mov eax, 0x82; call dword ptr gs:[0x10]; 
0x000f0a43: pop esp; and al, 4; mov eax, 0x84; call dword ptr gs:[0x10]; 
0x00114ed3: pop esp; and al, 4; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x001305d7: pop esp; and al, 4; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x0012f3e3: pop esp; and al, 4; mov eax, 0x88; call dword ptr gs:[0x10]; 
0x0012f3e3: pop esp; and al, 4; mov eax, 0x88; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x001157b7: pop esp; and al, 4; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x000f0af3: pop esp; and al, 4; mov eax, 0x93; call dword ptr gs:[0x10]; 
0x00128ab7: pop esp; and al, 4; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x00129667: pop esp; and al, 4; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x00128ae3: pop esp; and al, 4; mov eax, 0x98; call dword ptr gs:[0x10]; 
0x0010c157: pop esp; and al, 4; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x0010be47: pop esp; and al, 4; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x0010be73: pop esp; and al, 4; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x0010be93: pop esp; and al, 4; mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x0010beb3: pop esp; and al, 4; mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x0012d9c7: pop esp; and al, 4; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x00130607: pop esp; and al, 4; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x00130637: pop esp; and al, 4; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x0003cf97: pop esp; and al, 4; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x00114683: pop esp; and al, 4; mov eax, 0xc; call dword ptr gs:[0x10]; 
0x000efa97: pop esp; and al, 4; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x0012fa73: pop esp; and al, 4; mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x0012fa53: pop esp; and al, 4; mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x0012fa53: pop esp; and al, 4; mov eax, 0xd8; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00130a77: pop esp; and al, 4; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x0012adb7: pop esp; and al, 4; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x001284b7: pop esp; and al, 4; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x00124957: pop esp; and al, 4; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x001321f8: pop esp; and al, 4; mov ebx, 0x10; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00131fc8: pop esp; and al, 4; mov ebx, 0x11; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00091e2c: pop esp; and al, 4; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000612ca: pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x000fb69a: pop esp; and al, 8; call dword ptr gs:[0x10]; neg eax; pop ebx; ret; 
0x00130d7a: pop esp; and al, 8; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0013084a: pop esp; and al, 8; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x0011f63a: pop esp; and al, 8; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x0012154a: pop esp; and al, 8; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x0012103a: pop esp; and al, 8; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x001145b1: pop esp; and al, 8; mov eax, 0x13e; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00114afa: pop esp; and al, 8; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x001309ea: pop esp; and al, 8; mov eax, 0x1ac; call dword ptr gs:[0x10]; 
0x0013075a: pop esp; and al, 8; mov eax, 0x1b0; call dword ptr gs:[0x10]; 
0x001307ba: pop esp; and al, 8; mov eax, 0x1b1; call dword ptr gs:[0x10]; 
0x001147ea: pop esp; and al, 8; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x00130a4a: pop esp; and al, 8; mov eax, 0x1b6; call dword ptr gs:[0x10]; 
0x001236ca: pop esp; and al, 8; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x0012d97a: pop esp; and al, 8; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x001308ca: pop esp; and al, 8; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x0013058a: pop esp; and al, 8; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x0012956a: pop esp; and al, 8; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x0013066a: pop esp; and al, 8; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x0013069a: pop esp; and al, 8; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x0010c18a: pop esp; and al, 8; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x001309ba: pop esp; and al, 8; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000eab5a: pop esp; and al, 8; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x0011f09a: pop esp; and al, 8; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x0011511a: pop esp; and al, 8; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000f0aca: pop esp; and al, 8; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000f0a9a: pop esp; and al, 8; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x001146fa: pop esp; and al, 8; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x0012883a: pop esp; and al, 8; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x0012875a: pop esp; and al, 8; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x0012845a: pop esp; and al, 8; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x0012848a: pop esp; and al, 8; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x0012492a: pop esp; and al, 8; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x00131258: pop esp; and al, 8; mov ebx, 5; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0003c996: pop esp; and al, 8; mov ecx, 8; call dword ptr gs:[0x10]; 
0x0011fcd6: pop esp; and al, 8; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x0010e373: pop esp; bnd jmp dword ptr [esi - 0x70]; 
0x000c1933: pop esp; bsr edi, edi; add eax, edi; pop edi; ret; 
0x0017027b: pop esp; call eax; 
0x001780da: pop esp; cld; jmp dword ptr [esi - 0x70]; 
0x000e95fb: pop esp; cli; jmp dword ptr [esi - 0x70]; 
0x000b93e6: pop esp; cmp dword ptr [ecx], edx; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000260c5: pop esp; cmp edx, dword ptr [esi]; add byte ptr [0x218d4b], al; mov eax, dword ptr [eax + 0x10bc]; ret; 
0x000fd593: pop esp; dec dword ptr [ecx + 0x2e82434]; pop esp; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000c4910: pop esp; div esi; dec dword ptr [ebx - 0x72e3dbac]; sbb byte ptr [eax], 0x9c; stc; call dword ptr [eax - 0x73]; 
0x000cccc4: pop esp; idiv edi; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000fd59b: pop esp; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000ac030: pop esp; inc eax; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x000a95b6: pop esp; inc ecx; call 0xc24ea5bc; ret; 
0x00179036: pop esp; iretd; dec dword ptr [ebp - 0xcf5b34a]; call dword ptr [ebp - 0x73]; 
0x0004a2c9: pop esp; ja 0x4a2c5; call dword ptr [eax - 0x18]; 
0x0004d5ce: pop esp; ja 0x4d5ca; call dword ptr [eax - 0x18]; 
0x00051285: pop esp; ja 0x51281; call dword ptr [eax - 0x18]; 
0x00059d17: pop esp; ja 0x59d13; call dword ptr [eax - 0x18]; 
0x000ca549: pop esp; ja 0xca545; call dword ptr [eax - 0x18]; 
0x000cd515: pop esp; ja 0xcd511; call dword ptr [eax - 0x18]; 
0x000d0d59: pop esp; ja 0xd0d55; call dword ptr [eax - 0x18]; 
0x000d87b2: pop esp; ja 0xd87ae; call dword ptr [eax - 0x18]; 
0x0017511d: pop esp; mov bh, 0xf9; call dword ptr [ebp + 0x6a]; 
0x00153566: pop esp; mov cl, 0xf9; call dword ptr [eax - 0x73]; 
0x001798b1: pop esp; mov dword ptr [esp + 0x34], edx; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x001abc69: pop esp; mov eax, 0x10; pop edi; ret; 
0x00029d69: pop esp; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0002c8bb: pop esp; mov eax, dword ptr [esp + 0x54]; call eax; 
0x00092abf: pop esp; mov ebx, dword ptr [esi + 0x68]; mov ecx, dword ptr [esi + 0x224]; lea edx, [esi + 0x220]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x00115f19: pop esp; mov esi, dword ptr [esp + 0x74]; mov ebx, dword ptr [esp + 0x70]; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x00194127: pop esp; or ah, bh; mov dword ptr [edx + ecx - 4], ebx; mov eax, edx; pop ebx; ret; 
0x001467f9: pop esp; or al, 0; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0019412b: pop esp; or bh, ah; mov eax, edx; pop ebx; ret; 
0x000ef1b4: pop esp; or byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x001b402f: pop esp; or eax, 0xd5c8900; add al, 0x83; ror dword ptr [eax], 0x39; sal dword ptr [edx - 0xf], 0xe9; ret 0x11; 
0x001990bd: pop esp; or edi, edi; inc dword ptr [ecx + 0x429efc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00134d85: pop esp; out dx, eax; call dword ptr [eax + 0x6a]; 
0x00134ff9: pop esp; out dx, eax; dec dword ptr [edi]; inc ebp; ret 0xec83; 
0x0002506e: pop esp; outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x000decc9: pop esp; pop dword ptr [edx]; jbe 0xdecd8; mov eax, edx; ret; 
0x000287c1: pop esp; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x0003afa8: pop esp; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x00029e3d: pop esp; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000915e0: pop esp; pop es; sub byte ptr [eax + 0xf0], bh; call dword ptr gs:[0x10]; 
0x001395b1: pop esp; push ds; adc byte ptr [ecx], bh; ret 0x820f; 
0x00139e11: pop esp; push ds; or al, 0x39; ret 0x820f; 
0x000285e3: pop esp; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0002c8b7: pop esp; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x0002913c: pop esp; push dword ptr [esp + 0x64]; call edi; 
0x00156307: pop esp; push ebx; push ebp; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x000a9398: pop esp; push esi; cmc; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x00151dab: pop esp; ret 0x8904; 
0x001b6e2f: pop esp; ret 0xfff9; 
0x00076c20: pop esp; ret 0xffff; 
0x0016b2c0: pop esp; ret; 
0x000d9b13: pop esp; sbb edi, edi; mov eax, ebx; pop ebx; pop esi; ret; 
0x0014f706: pop esp; scasd eax, dword ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x0014cc6e: pop esp; stc; call dword ptr [eax - 0x18]; 
0x0014dd68: pop esp; stc; call dword ptr [eax - 0x18]; jmp dword ptr [edx - 0x12]; 
0x0015156a: pop esp; stc; call dword ptr [eax - 0x73]; 
0x0010e49f: pop esp; sub edx, dword ptr gs:[0x14]; jne 0x10e553; add esp, 0x68; pop ebx; ret; 
0x001398d5: pop esp; test al, 0xf9; call dword ptr [eax - 0x75]; 
0x000475a1: pop esp; xchg dword ptr [ebx + eax*4], eax; ret; 
0x000704b4: pop esp; xchg ebp, eax; add byte ptr [ecx], al; ret; 
0x00095b7a: pop gs; add byte ptr [eax], al; add byte ptr [eax + 0xf], al; test byte ptr [eax - 0x77000000], bh; ret 0xe281; 
0x0019a36b: pop ss; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0005dfb2: pop ss; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [esi], dh; xor ecx, edi; call dword ptr [eax - 0x18]; 
0x0004d1fb: pop ss; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5152; 
0x000c349d: pop ss; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x0004069b: pop ss; add byte ptr [eax], al; mov byte ptr [eax + ecx], 0; pop ebx; pop esi; ret; 
0x0009fc02: pop ss; add dword ptr [eax], eax; add byte ptr [ecx + 0x24748be9], cl; dec esp; call dword ptr gs:[0x10]; 
0x00153f55: pop ss; add esi, ebp; jmp dword ptr [esi - 0x70]; 
0x0009a6a1: pop ss; add esp, 0x24; pop ebx; pop esi; ret; 
0x00085957: pop ss; add esp, 0x824; pop ebx; pop esi; ret; 
0x000c12d8: pop ss; bsf ecx, ecx; sub edx, ecx; jbe 0xc1310; add eax, ecx; ret; 
0x0003f32a: pop ss; cmp edx, 1; jg 0x3f3f0; call eax; 
0x000b9797: pop ss; jne 0xb9e20; pop edi; pop esi; pop ebx; ret; 
0x000bb317: pop ss; lea eax, [edi + 0x1b]; pop edi; pop esi; pop ebx; ret; 
0x000bb003: pop ss; lea eax, [edi + 1]; pop edi; pop esi; pop ebx; ret; 
0x000bb015: pop ss; lea eax, [edi + 2]; pop edi; pop esi; pop ebx; ret; 
0x000bb043: pop ss; lea eax, [edi + 4]; pop edi; pop esi; pop ebx; ret; 
0x001ac698: pop ss; lea eax, [edi - 0x10]; pop edi; ret; 
0x00024af1: pop ss; lea edx, [eax - 0x1b7974]; xor edx, dword ptr gs:[0x18]; rol edx, 9; mov dword ptr [eax + 0x1a50], edx; ret; 
0x000b9d41: pop ss; mov byte ptr [edi + 4], dl; pop edi; pop esi; pop ebx; ret; 
0x000d9998: pop ss; mov cl, dl; and cl, 0xf; je 0xd99c0; ret; 
0x0018b3f8: pop ss; mov dword ptr [ebx + 0x68], 0xffffffff; add esp, 4; pop ebx; pop esi; ret; 
0x0005accc: pop ss; mov dword ptr [edx + 8], 0; mov dword ptr [edx], 0; ret; 
0x0008d758: pop ss; mov dword ptr [esp + 0x14], ecx; mov dword ptr [esp + 0x10], edx; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x00177c0a: pop ss; mov eax, dword ptr [esi]; sub esp, 0xc; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x000c0d9a: pop ss; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0017a100: pop ss; mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x17a13c; add esp, 0x1c; ret; 
0x000bd8f7: pop ss; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0003340e: pop ss; mov edx, dword ptr [ebx + eax*4 + 0x20]; pop ebx; mov eax, edx; ret; 
0x000b9d51: pop ss; mov word ptr [edi + 4], dx; pop edi; pop esi; pop ebx; ret; 
0x000a4ec1: pop ss; or eax, 0x8d500000; xchg eax, esi; xchg ebp, eax; stc; call dword ptr [eax - 0x18]; 
0x000591c2: pop ss; out 0xff, eax; dec dword ptr [ebx - 0x36477b]; jmp dword ptr [ebp - 0x75]; 
0x0003d405: pop ss; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000e9ec8: pop ss; pop ebx; pop esi; pop edi; ret; 
0x000b9963: pop ss; pop edi; pop esi; pop ebx; ret; 
0x000534dd: pop ss; pop es; add byte ptr [ebx - 0x3b7cef3c], al; add al, 0x5b; pop esi; ret; 
0x0013423b: pop ss; push ebp; stc; call dword ptr [eax + 0x6a]; 
0x001a6539: pop ss; ret 0x2c73; 
0x001a6efa: pop ss; ret 0x3273; 
0x001a6524: pop ss; ret 0x3e73; 
0x001a6ee0: pop ss; ret 0x4c73; 
0x001a650f: pop ss; ret 0x5073; 
0x001a64fa: pop ss; ret 0x6273; 
0x001a6ec6: pop ss; ret 0x6673; 
0x001a5e95: pop ss; ret 0x830f; 
0x0016c53b: pop ss; std; jmp dword ptr [esi - 0x70]; 
0x0007c0e4: pop ss; sub esp, 4; push ebx; push dword ptr [esp + 0x1c]; push dword ptr [esi + 0x98]; call eax; 
0x000f15be: pop ss; sub esp, 8; push eax; push dword ptr [ebp - 0x5dc]; call esi; 
0x000f883e: pop ss; sub esp, 8; push eax; push dword ptr [ebp - 0x5ec]; call esi; 
0x001ac438: pop ss; test dh, 0xf; jne 0x1ac4a0; lea eax, [ecx + 0xc]; ret; 
0x0005acc8: pop ss; test eax, eax; jne 0x5ace4; mov dword ptr [edx + 8], 0; mov dword ptr [edx], 0; ret; 
0x0005af55: pop ss; xchg ecx, eax; std; jmp dword ptr [esi - 0x70]; 
0x001953fb: popal; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000b79eb: popal; add al, byte ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x001496eb: popal; add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; pop esi; ret; 
0x000d0fbd: popal; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0009ebb6: popal; inc ecx; stc; call dword ptr [eax - 0x73]; 
0x000b4013: popal; jmp dword ptr [esi + 0xf]; 
0x00165915: popal; popal; stc; call dword ptr [eax - 0x18]; 
0x000f6f3b: popal; ret 0xfff2; 
0x000fb13e: popal; ret; 
0x0006b463: popal; sbb byte ptr [eax], al; add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xd801; 
0x00165613: popal; stc; call dword ptr [eax + 0x6a]; 
0x00164a43: popal; stc; call dword ptr [eax - 0x18]; 
0x00164beb: popal; stc; call dword ptr [eax - 0x18]; dec esp; add bh, bh; jmp dword ptr [ebp - 0x75]; 
0x00167215: popal; stc; call dword ptr [eax - 0x18]; fdivr st(6); jmp dword ptr [ebp - 0x75]; 
0x00165845: popal; stc; call dword ptr [eax - 0x18]; ret 0xfef2; 
0x00164be4: popal; stc; call dword ptr [eax - 0x73]; 
0x00166405: popal; stc; call dword ptr [ecx - 1]; 
0x0005df27: popal; std; dec dword ptr [ebx - 0x8b4b]; dec dword ptr [ebp - 0x684677a]; call dword ptr [eax - 0x73]; 
0x0005df4c: popal; std; dec dword ptr [ebx - 0x8b63]; dec dword ptr [ebp - 0x684677d]; call dword ptr [eax - 0x73]; 
0x00172f58: popfd; add byte ptr [eax], al; add byte ptr [ecx - 0x7cf3dbbc], cl; in al, dx; or byte ptr [ebp - 0x69c6a7d], cl; call dword ptr [eax - 1]; 
0x00124872: popfd; idiv bh; mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x0014ba89: popfd; je 0x14bae7; stc; call dword ptr [ebx - 0x18]; 
0x0012a86f: popfd; jl 0x12a86b; dec dword ptr [ebx + 0x31502444]; ror byte ptr [ebx + 0xfc08500], cl; dec eax; ret 0xc483; 
0x000593b4: popfd; mov al, byte ptr [0x89ffffc9]; ret; 
0x00078ecf: popfd; mov cl, 0xfb; dec dword ptr [ebp - 0x692b37a]; call dword ptr [eax - 0x73]; 
0x000d7735: popfd; mov esp, 0xe9ffffc9; cmp esp, 0xa40fffff; ret 0xc102; 
0x0014ba5d: popfd; pop ebx; stc; call dword ptr [ebx - 0x18]; 
0x000c3fc4: popfd; pop es; add byte ptr [ebp - 0x6643b7e], cl; call dword ptr [eax - 0x73]; 
0x00163627: popfd; pushal; stc; call dword ptr [eax - 0x18]; 
0x000d6bd0: popfd; ror cl, 0xff; call dword ptr [eax + 0x6a]; 
0x000d844b: popfd; ror cl, 0xff; call dword ptr [esi + 0x6a]; 
0x000d6ae4: popfd; ror cl, 0xff; dec dword ptr [ecx - 0x361f73]; call dword ptr [eax + 0x52]; 
0x000735bf: popfd; sar dl, 0xff; dec dword ptr [ecx - 0x4f74b]; call dword ptr [esi - 1]; 
0x000d2c8a: popfd; stc; call dword ptr [eax - 0x18]; 
0x000c69a8: popfd; stc; call dword ptr [eax - 0x73]; 
0x000a765f: popfd; sti; dec dword ptr [ecx - 0x1917dbe4]; hlt; std; jmp dword ptr [esi - 0x70]; 
0x0014bad9: popfd; wait; pop ebx; stc; call dword ptr [ebx - 0x18]; 
0x0019a2a3: prefetchnta byte ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000bb693: prefetcht1 byte ptr [ecx]; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000bd7e6: psllq mm1, qword ptr [edi]; jg 0xbd7eb; mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bd868: psllq mm1, qword ptr [edi]; jg 0xbd86d; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bd968: psllq mm1, qword ptr [edi]; jg 0xbd96d; movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x001ace01: punpckhwd mm0, mm0; add dword ptr [ecx], eax; add dword ptr [ecx], eax; shr eax, 0x18; ret; 
0x000d8802: push -0x48; cmc; dec dword ptr [ebx - 0x363f4b]; dec dword ptr [ebp - 0x661f37a]; call dword ptr [eax - 0x73]; 
0x00172b92: push -0x4f; cld; jmp dword ptr [esi - 0x70]; 
0x0011f084: push -0x64; call 0x114f20; add esp, 0x1c; ret; 
0x0011f540: push -0x64; call 0x115940; add esp, 0x18; pop ebx; ret; 
0x0011f564: push -0x64; call 0x115b20; add esp, 0x1c; ret; 
0x001303cc: push -0x64; call 0x11f6e0; add esp, 0x20; add esp, 0xc; ret; 
0x0011f6c7: push -0x64; call 0x11f6e0; add esp, 0x2c; ret; 
0x000bb934: push -0xa; ret 0x7520; 
0x000bb939: push -0xa; ret 0x7540; 
0x001656b9: push -0xe; call dword ptr [eax - 0x18]; 
0x0010e453: push -1; call 0x10e560; add esp, 0x1c; ret; 
0x0010e42d: push -1; call 0x10e970; add esp, 0x1c; ret; 
0x00082785: push -1; push dword ptr [ebx]; call dword ptr [edi + 0xc]; 
0x00088f3d: push -1; push dword ptr [ecx]; call dword ptr [eax + 0xc]; 
0x00061475: push -1; push dword ptr [esp + 0x2c]; call 0x7ea40; add esp, 0x2c; ret; 
0x0017b848: push -1; push ebp; push esi; call edi; 
0x0004d5d5: push -2; dec dword ptr [ebp - 0x687a779]; call dword ptr [eax - 0x73]; 
0x0004d58f: push -2; dec dword ptr [ebx - 0x72e7db84]; xchg dword ptr [eax + 0x78], ebx; stc; call dword ptr [eax - 0x73]; 
0x0007cd29: push -6; jmp dword ptr [esi - 0x70]; 
0x0002aaf8: push -7; call dword ptr [eax + 0x68]; 
0x0002a7bc: push -7; call dword ptr [eax - 0x73]; 
0x001304e1: push 0; add byte ptr [eax], al; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0010c349: push 0; call 0x10c310; add esp, 0x1c; ret; 
0x0012d9fb: push 0; call 0x12dc40; add esp, 0x1c; ret; 
0x00169a88: push 0; call 0x1565b0; add esp, 0x1c; ret; 
0x00169aa7: push 0; call 0x156690; add esp, 0x1c; ret; 
0x00034edd: push 0; call 0x34e80; add esp, 0x1c; ret; 
0x00036515: push 0; call 0x364a0; add esp, 0x2c; ret; 
0x0003d287: push 0; call 0x3cb20; add esp, 0x1c; ret; 
0x0017669b: push 0; call 0x79a90; add esp, 0x18; pop ebx; ret; 
0x0008fe3f: push 0; call 0x8f3d0; add esp, 0x1c; ret; 
0x000c3ada: push 0; call 0xc4020; add esp, 0x1c; ret; 
0x000e755f: push 0; call 0xe7650; add esp, 0x10; mov eax, 1; add esp, 0xc; ret; 
0x0013b2f8: push 0; call eax; 
0x000c4ab2: push 0; lea ecx, [esp + 0x44]; push ecx; push dword ptr [edi + 8]; call ebx; 
0x0010c347: push 0; push 0; call 0x10c310; add esp, 0x1c; ret; 
0x000c4ab0: push 0; push 0; lea ecx, [esp + 0x44]; push ecx; push dword ptr [edi + 8]; call ebx; 
0x00025dae: push 0; push 0; push 0; push eax; push dword ptr [ebx + 4]; call edi; 
0x00128999: push 0; push 0; push dword ptr [esp + 0x1c]; call 0x616b0; add esp, 0x1c; ret; 
0x00025db0: push 0; push 0; push eax; push dword ptr [ebx + 4]; call edi; 
0x0007b8de: push 0; push 0; push ebp; call dword ptr [esi + 0x40]; 
0x00088b63: push 0; push 0; push ebx; call dword ptr [eax + 0x24]; 
0x0018b4ed: push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x000884e8: push 0; push 0; push ebx; call dword ptr [esi + 0x40]; 
0x000899d6: push 0; push 0; push esi; call dword ptr [eax + 0x40]; 
0x0008c74c: push 0; push 0; push esi; call dword ptr [ebp + 0x2c]; 
0x00083816: push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x000835cd: push 0; push 0; push esi; call dword ptr [edi + 0x40]; 
0x0013b722: push 0; push 0x1000001; call eax; 
0x0013b8c0: push 0; push 0x1000002; call edx; 
0x0013b12f: push 0; push 0x1000003; call eax; 
0x0013b80c: push 0; push 0x1000004; call eax; 
0x0013b365: push 0; push 0x1000005; call edx; 
0x0013b62b: push 0; push 0x1000006; call ecx; 
0x0013b3d5: push 0; push 0x1000007; call eax; 
0x0013790f: push 0; push 0x2000002; call dword ptr [ebp + 0x14]; 
0x001376e9: push 0; push 0x2000004; call eax; 
0x0009b4d7: push 0; push 1; push eax; call 0x8efe0; add esp, 0x2c; ret; 
0x00083ffb: push 0; push dword ptr [ebp - 0x2c]; push edx; push ebx; push esi; call eax; 
0x00154f5f: push 0; push dword ptr [esp + 0x14]; push ebp; call edi; 
0x0010e427: push 0; push dword ptr [esp + 0x18]; push -1; call 0x10e970; add esp, 0x1c; ret; 
0x00130257: push 0; push dword ptr [esp + 0x1c]; call 0x130270; add esp, 0x1c; ret; 
0x00178d35: push 0; push dword ptr [esp + 0x1c]; call 0x178ba0; add esp, 0x10; add esp, 0xc; ret; 
0x0003e957: push 0; push dword ptr [esp + 0x1c]; call 0x3e0c0; add esp, 0x1c; ret; 
0x00189d37: push 0; push dword ptr [esp + 0x1c]; call 0x3ebb0; add esp, 0x1c; ret; 
0x0003dfd7: push 0; push dword ptr [esp + 0x1c]; call 0x46e10; add esp, 0x1c; ret; 
0x0003dff9: push 0; push dword ptr [esp + 0x1c]; call 0x4d7b0; add esp, 0x1c; ret; 
0x0012889d: push 0; push dword ptr [esp + 0x1c]; call 0x616b0; add esp, 0x1c; ret; 
0x0008557b: push 0; push dword ptr [esp + 0x1c]; call 0x7e620; add esp, 0x1c; ret; 
0x000a8557: push 0; push dword ptr [esp + 0x1c]; call 0xc25c0; add esp, 0x18; pop ebx; ret; 
0x0003d817: push 0; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x3d7a0; add esp, 0x1c; ret; 
0x00046e31: push 0; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x477a0; add esp, 0x1c; ret; 
0x0004a501: push 0; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x4ad00; add esp, 0x1c; ret; 
0x000513db: push 0; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x4e840; add esp, 0x1c; ret; 
0x0007ee87: push 0; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x7bf70; add esp, 0x1c; ret; 
0x000ca5cb: push 0; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc7ce0; add esp, 0x1c; ret; 
0x000cd52b: push 0; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xcaec0; add esp, 0x1c; ret; 
0x000d0f2b: push 0; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xce760; add esp, 0x1c; ret; 
0x00034e8f: push 0; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x35b80; add esp, 0x2c; ret; 
0x00094bab: push 0; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x94be0; add esp, 0x2c; ret; 
0x000c6935: push 0; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x38]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x000c4485: push 0; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x0018be9a: push 0; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x30]; push esi; call dword ptr [ebx + 0x40]; 
0x000c4815: push 0; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x0011e500: push 0; push eax; call 0x121670; add esp, 0x10; add esp, 0xc; ret; 
0x0009728d: push 0; push eax; call 0x968e0; add esp, 0x18; pop ebx; ret; 
0x00025db2: push 0; push eax; push dword ptr [ebx + 4]; call edi; 
0x0007b8e0: push 0; push ebp; call dword ptr [esi + 0x40]; 
0x0007e2f3: push 0; push ebp; push edi; push ebx; call dword ptr [esi + 0x24]; 
0x00170f00: push 0; push ebx; call dword ptr [eax + 0x14]; 
0x00088b65: push 0; push ebx; call dword ptr [eax + 0x24]; 
0x0018b4ef: push 0; push ebx; call dword ptr [edi + 0x24]; 
0x000884ea: push 0; push ebx; call dword ptr [esi + 0x40]; 
0x0012c513: push 0; push ebx; call esi; 
0x00029132: push 0; push ebx; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; call edi; 
0x0008d772: push 0; push ecx; push edx; call 0x184e00; add esp, 0x1c; ret; 
0x0017a9c1: push 0; push edi; call dword ptr [eax + 0x14]; 
0x00175d39: push 0; push edi; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x14]; 
0x000c46f3: push 0; push edi; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x00154b6f: push 0; push edi; push ebx; call edx; 
0x00089ba0: push 0; push edi; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x0003ed58: push 0; push edx; call eax; 
0x0016f7cf: push 0; push edx; push 4; push ebx; call dword ptr [eax]; 
0x00083241: push 0; push edx; push eax; push esi; call dword ptr [ebx + 0x40]; 
0x00089688: push 0; push edx; push eax; push esi; call dword ptr [ecx + 0x40]; 
0x0016ee7c: push 0; push esi; call dword ptr [eax + 0x14]; 
0x000899d8: push 0; push esi; call dword ptr [eax + 0x40]; 
0x0008c74e: push 0; push esi; call dword ptr [ebp + 0x2c]; 
0x00083818: push 0; push esi; call dword ptr [ebx + 0x40]; 
0x0007b42f: push 0; push esi; call dword ptr [ebx + 8]; 
0x000835cf: push 0; push esi; call dword ptr [edi + 0x40]; 
0x0013b724: push 0x1000001; call eax; 
0x0013b8c2: push 0x1000002; call edx; 
0x0013b131: push 0x1000003; call eax; 
0x0013b80e: push 0x1000004; call eax; 
0x0013b367: push 0x1000005; call edx; 
0x0013b62d: push 0x1000006; call ecx; 
0x0013b3d7: push 0x1000007; call eax; 
0x00128ce3: push 0x1018; call 0x231a8; add esp, 0x18; pop ebx; ret; 
0x0007d4f3: push 0x10; push ebp; push esi; call dword ptr [eax + 0x1c]; 
0x0010f800: push 0x10f6ae8; add byte ptr [ebx - 0x77cef3c], al; push dword ptr [edx + ebx*8 - 0x77]; ret 0xc085; 
0x000f3229: push 0x1fffffb; rol byte ptr [ecx], 1; ret; 
0x001374a1: push 0x2000001; call dword ptr [ebp + 0x14]; 
0x00137911: push 0x2000002; call dword ptr [ebp + 0x14]; 
0x00138446: push 0x2000003; call dword ptr [ebx + 0x14]; 
0x001376eb: push 0x2000004; call eax; 
0x001397b7: push 0x2000005; call dword ptr [ebx + 0x14]; 
0x0013821a: push 0x2000006; call dword ptr [ebx + 0x14]; 
0x0017080f: push 0x20; push edi; call dword ptr [eax + 0x18]; 
0x000c08fa: push 0x20c68310; add eax, 0x20; call 0x189c31; add ecx, 0x10c6ed; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00092ac2: push 0x2248e8b; add byte ptr [eax], al; lea edx, [esi + 0x220]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0017b1e7: push 0x2260; push 0x2260; push dword ptr [esp + 0x1c]; call 0x17af20; add esp, 0x1c; ret; 
0x0017b1ec: push 0x2260; push dword ptr [esp + 0x1c]; call 0x17af20; add esp, 0x1c; ret; 
0x00189438: push 0x24448909; and al, 0x89; ret; 
0x00094cc5: push 0x24448b52; adc byte ptr [ebp - 0x1aa25380], cl; call dword ptr [eax - 0x73]; 
0x0009db12: push 0x244c8951; sbb al, 0xe8; ret; 
0x000e04ce: push 0x2474ff50; sub byte ptr [ebx - 0x72dbdbbc], cl; and byte ptr [edx + 0x46], 0xf9; call dword ptr [eax + 0x53]; 
0x000e0437: push 0x2474ff50; sub byte ptr [ebx - 0x72dbdbbc], cl; sbb byte ptr [ecx + 0x46], 0xf9; call dword ptr [eax + 0x53]; 
0x0013d9ae: push 0x27838d50; inc eax; stc; call dword ptr [eax - 0x18]; 
0x001863cb: push 0x28; push edi; call eax; 
0x00199f4a: push 0x300041b; sbb al, 0x8b; jmp ebx; 
0x0019944a: push 0x3000426; sbb al, 0x8b; jmp ebx; 
0x00197fca: push 0x3000438; sbb al, 0x8b; jmp ebx; 
0x0019554a: push 0x3000460; sbb al, 0x8b; jmp ebx; 
0x00131601: push 0x30244489; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00083bec: push 0x3190c1eb; rol byte ptr [ebp - 0x3f6af02e], 0x3b; sahf; push 0xf000001; xchg esp, eax; ret 0x9e3b; 
0x000996d3: push 0x39000000; ret 0x6574; 
0x00098f77: push 0x39000000; ret 0x6974; 
0x000985ea: push 0x39000000; ret 0x7e74; 
0x00098361: push 0x39000000; ret 0x840f; 
0x00097a96: push 0x39000000; ret 0x850f; 
0x0006bade: push 0x39fffffa; ret 0x840f; 
0x00110b9d: push 0x3efff8ff; jmp eax; 
0x00092b2e: push 0x3f; stc; call dword ptr [eax - 0x73]; 
0x00162763: push 0x400; call 0x231a8; mov dword ptr [ebx + 0xa220], eax; add esp, 0x18; pop ebx; ret; 
0x0016335f: push 0x400; push dword ptr [esp + 0xc]; push ebp; call edi; 
0x0003c4f8: push 0x448b900c; and al, 8; mov esp, ecx; jmp edx; 
0x000e7d8a: push 0x4c8bfffa; and al, 0x54; mov edx, edi; mov dword ptr [esp + 0xc], eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x0018bbdf: push 0x52016a99; push eax; push esi; call dword ptr [edi + 0x40]; 
0x00122deb: push 0x540b; push dword ptr [esp + 0x1c]; call 0x1283c0; add esp, 0x1c; ret; 
0x0013db33: push 0x5b4cc483; pop esi; pop edi; pop ebp; ret; 
0x0014e192: push 0x5bf4658d; pop esi; pop edi; pop ebp; ret; 
0x000fb13a: push 0x61759123; ret; 
0x001289b9: push 0x8000; push 0; push dword ptr [esp + 0x1c]; call 0x616b0; add esp, 0x1c; ret; 
0x00090377: push 0x80; push dword ptr [esp + 0x1c]; call 0x902a0; add esp, 0x18; pop ebx; ret; 
0x0009069b: push 0x80; push dword ptr [esp + 0x1c]; call 0x905e0; add esp, 0x1c; ret; 
0x00099ba7: push 0x80; push dword ptr [esp + 0x1c]; call 0x99b50; add esp, 0x18; pop ebx; ret; 
0x000b7de5: push 0x80fffffe; cmp byte ptr [ecx], al; sbb eax, -1; pop ebx; ret; 
0x001326b5: push 0x81000575; ret 0xc75b; 
0x001314b5: push 0x81000587; ret 0xd95b; 
0x000e79b5: push 0x81000a22; ret 0x745b; 
0x000c3ab5: push 0x81000c61; ret 0xb35b; 
0x000a0ac5: push 0x81000e91; ror dword ptr [ebx - 0x1d], 0x19; add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [ebx + 0x67650f8], al; ret; 
0x00099fb5: push 0x81000efc; ret 0x4e5b; 
0x000612b5: push 0x81001289; ret 0xdb5b; 
0x00041fb5: push 0x8100147c; ret 0xce5b; 
0x00092ba3: push 0x818d3675; mov bh, byte ptr [edi]; stc; call dword ptr [edx + 0x50]; 
0x0003f25c: push 0x83000001; in al, dx; or byte ptr [ecx - 1], dl; je 0x3f28b; dec esp; call eax; 
0x0011e504: push 0x83000031; les edx, ptr [eax]; add esp, 0xc; ret; 
0x0006bb6f: push 0x83fffffa; clc; dec dword ptr [ecx - 0x76658a3a]; test dword ptr [edx + edi*8 - 1], ebp; dec dword ptr [ebx - 0x59b43]; jmp dword ptr [ebp - 0x5f]; 
0x0007c416: push 0x850fc085; ret 0; 
0x0008ddde: push 0x89000001; inc ebx; or al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000a37cc: push 0x89000003; ret 0x588d; 
0x000dd81b: push 0x8900003e; ret 0xc085; 
0x0010cfc8: push 0x89fff8fc; ret 0x848d; 
0x0006bad6: push 0x89fffffa; ret 0x858b; 
0x000e8214: push 0x89fffffc; ret 0xc085; 
0x0013bb6d: push 0x89ffffff; inc ebp; mov word ptr [ecx - 0x11f73], cs; call dword ptr [ecx - 1]; 
0x00151da6: push 0x8b000001; pop esp; ret 0x8904; 
0x00092a79: push 0x8b04488b; adc byte ptr [eax + 0xf1], bh; call dword ptr gs:[0x10]; 
0x0012ba8a: push 0x8bfffffb; inc ebp; adc byte ptr [ecx - 0x49b7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0017e45d: push 0x8bffffff; inc ebp; sbb byte ptr [ecx - 0x9f7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00030026: push 0x8dffffff; and eax, 0x72; stc; call dword ptr [eax - 0x73]; 
0x000a35be: push 0x8dffffff; sbb dword ptr [eax], -0x67; stc; call dword ptr [eax - 0x73]; 
0x000a1755: push 0x8dffffff; xchg byte ptr [eax - 0x67], bl; stc; call dword ptr [eax - 0x73]; 
0x000c4b72: push 0x8dffffff; xchg byte ptr [eax], ch; pushfd; stc; call dword ptr [eax - 0x73]; 
0x00144ca2: push 0x97401f4; add esp, 4; pop ebx; pop esi; ret; 
0x0012dd8e: push 0xa0828b; add byte ptr [eax], al; mov dword ptr [esp + 0x6c], eax; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x0016ddf8: push 0xa; call 0x1565b0; add esp, 0x1c; ret; 
0x0016de17: push 0xa; call 0x156690; add esp, 0x1c; ret; 
0x0003dff7: push 0xa; push 0; push dword ptr [esp + 0x1c]; call 0x4d7b0; add esp, 0x1c; ret; 
0x0005ad5b: push 0xa; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x7cd30; add esp, 0x1c; ret; 
0x00094f17: push 0xc24548b; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0019332a: push 0xc381ffff; add edi, dword ptr [esi + 4]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0003c401: push 0xc; mov dword ptr [edx + 0x18], eax; ret; 
0x001782ad: push 0xd; push eax; call dword ptr [edx + 0x14]; 
0x000dd8e4: push 0xe800003e; ret; 
0x00154c35: push 0xe8ffffff; ret 0xfe90; 
0x000385cd: push 0xec830020; adc al, 0xff; mov bl, 0xd8; adc al, byte ptr [eax]; add al, ch; ret 0xfeab; 
0x00083bf9: push 0xf000001; xchg esp, eax; ret 0x9e3b; 
0x0018b38b: push 0xf000001; xchg esp, eax; ret 0xd008; 
0x0007b47a: push 0xf000001; xchg esp, eax; ret 0xd009; 
0x00041614: push 0xf6000001; ret 0xf03; 
0x000daf38: push 0xfffde2e9; jmp dword ptr [esi - 0x70]; 
0x0018b375: push 0xffffffff; add esp, 4; pop ebx; pop esi; ret; 
0x00024f9d: push 1; call 0x121920; add esp, 0x1c; ret; 
0x00169ee8: push 1; call 0x1565b0; add esp, 0x1c; ret; 
0x00169f07: push 1; call 0x156690; add esp, 0x1c; ret; 
0x00088b61: push 1; push 0; push 0; push ebx; call dword ptr [eax + 0x24]; 
0x0018b60d: push 1; push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x000899d4: push 1; push 0; push 0; push esi; call dword ptr [eax + 0x40]; 
0x00083814: push 1; push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x00085579: push 1; push 0; push dword ptr [esp + 0x1c]; call 0x7e620; add esp, 0x1c; ret; 
0x0014ab17: push 1; push dword ptr [esp + 0x1c]; call 0x14aa40; add esp, 0x1c; ret; 
0x00097e67: push 1; push dword ptr [esp + 0x1c]; call 0x97d20; add esp, 0x1c; ret; 
0x0007c057: push 1; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x7bf70; add esp, 0x1c; ret; 
0x0011b838: push 1; push dword ptr [esp + 0x30]; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x0003c3c1: push 1; push dword ptr [esp + 8]; call 0x3c340; pop ecx; pop edx; ret; 
0x0009a709: push 1; push eax; call 0x8efe0; add esp, 0x28; pop ebx; ret; 
0x0009b4d9: push 1; push eax; call 0x8efe0; add esp, 0x2c; ret; 
0x0016f5ff: push 1; push ebx; call dword ptr [eax]; 
0x0007a2c9: push 1; push ebx; call eax; 
0x0012c527: push 1; push ebx; call esi; 
0x00082f5b: push 1; push edx; push eax; push ebx; call dword ptr [edi + 0x40]; 
0x0018bbe1: push 1; push edx; push eax; push esi; call dword ptr [edi + 0x40]; 
0x0007ac90: push 1; push esi; call edx; 
0x0016a277: push 2; call 0x156690; add esp, 0x1c; ret; 
0x00184041: push 2; lea eax, [eax - 0x6993c]; push eax; call 0x11f760; add esp, 0x1c; ret; 
0x0007b8dc: push 2; push 0; push 0; push ebp; call dword ptr [esi + 0x40]; 
0x0018b4eb: push 2; push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x000884e6: push 2; push 0; push 0; push ebx; call dword ptr [esi + 0x40]; 
0x000835cb: push 2; push 0; push 0; push esi; call dword ptr [edi + 0x40]; 
0x00143a27: push 2; push dword ptr [esp + 0x1c]; call 0x142d60; add esp, 0x1c; ret; 
0x0011bbdd: push 2; push dword ptr [esp + 0x30]; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x0016b6bf: push 2; push dword ptr [esp + 0x3c]; call 0x16b4f0; add esp, 0x3c; ret; 
0x0016f728: push 2; push ebx; call dword ptr [eax]; 
0x0012c53a: push 2; push ebx; call esi; 
0x000e7472: push 3; add byte ptr [eax], al; add esp, 0x10; mov eax, 1; add esp, 0xc; ret; 
0x0016b318: push 3; call 0x1565b0; add esp, 0x1c; ret; 
0x0016b337: push 3; call 0x156690; add esp, 0x1c; ret; 
0x00088b5f: push 3; push 1; push 0; push 0; push ebx; call dword ptr [eax + 0x24]; 
0x0018b60b: push 3; push 1; push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x0018b4e9: push 3; push 2; push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x0012c56b: push 3; push ebx; call edx; 
0x00179047: push 3; push edi; call dword ptr [eax]; 
0x00194ca7: push 4; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x0016c678: push 4; call 0x1565b0; add esp, 0x1c; ret; 
0x0016c697: push 4; call 0x156690; add esp, 0x1c; ret; 
0x001781db: push 4; push eax; call dword ptr [edx + 0x14]; 
0x0016f7d2: push 4; push ebx; call dword ptr [eax]; 
0x0016ccf8: push 5; call 0x1565b0; add esp, 0x1c; ret; 
0x0016cd17: push 5; call 0x156690; add esp, 0x1c; ret; 
0x00034ed7: push 5; push dword ptr [esp + 0x18]; push 0; call 0x34e80; add esp, 0x1c; ret; 
0x00034eb7: push 5; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x34e80; add esp, 0x1c; ret; 
0x0011bab4: push 5; push dword ptr [esp + 0x30]; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x0016fc62: push 5; push ebx; call dword ptr [eax]; 
0x0013c00e: push 5; ror eax, 9; xor eax, dword ptr gs:[0x18]; push esi; call eax; 
0x0016d098: push 6; call 0x1565b0; add esp, 0x1c; ret; 
0x0016d0b7: push 6; call 0x156690; add esp, 0x1c; ret; 
0x001781ee: push 6; push eax; call dword ptr [edx + 0x14]; 
0x0016e378: push 7; call 0x1565b0; add esp, 0x1c; ret; 
0x0016e397: push 7; call 0x156690; add esp, 0x1c; ret; 
0x0016d718: push 8; call 0x1565b0; add esp, 0x1c; ret; 
0x0016d737: push 8; call 0x156690; add esp, 0x1c; ret; 
0x00170507: push 8; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x17c030; add esp, 0x1c; ret; 
0x00175453: push 8; push ebx; call dword ptr [eax + 0x18]; 
0x001708c1: push 8; push edi; call dword ptr [eax + 0x18]; 
0x0016db28: push 9; call 0x1565b0; add esp, 0x1c; ret; 
0x0016db47: push 9; call 0x156690; add esp, 0x1c; ret; 
0x00136aad: push bp; stc; call dword ptr [eax - 1]; 
0x0008d93b: push cs; aas; stc; call dword ptr [ecx + 0x52]; 
0x0019ae82: push cs; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000fedb2: push cs; add al, byte ptr [eax]; add byte ptr [ecx], al; ret; 
0x000421be: push cs; add byte ptr [eax], al; add byte ptr [ebx + 0x438d18c4], al; push es; pop ebx; ret; 
0x0017905f: push cs; add byte ptr [eax], al; add byte ptr [ebx + 0x575104c1], al; call dword ptr [eax + 8]; 
0x00132b8a: push cs; add byte ptr [eax], al; add byte ptr [ecx + 0x100bafe], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00070aae: push cs; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x4c]; mov dword ptr [esp + 4], ecx; jmp eax; 
0x0008cca1: push cs; add byte ptr [eax], al; ret; 
0x0005b92f: push cs; add byte ptr [ebp - 0x686277a], cl; call dword ptr [eax - 0x73]; 
0x0003a2f2: push cs; add byte ptr [ebx + 0x478920c4], al; adc al, 0x89; ret; 
0x00059c66: push cs; add byte ptr [ebx - 0x364743], cl; dec dword ptr [ebp - 0x6877779]; call dword ptr [eax - 0x73]; 
0x001510ba: push cs; add byte ptr [ebx - 0x6f72f314], al; lodsb al, byte ptr [esi]; mov al, 0xf9; call dword ptr [edx - 0x73]; 
0x000513a5: push cs; add byte ptr [ebx - 0x72d7db84], cl; xchg dword ptr [eax + 0x78], esi; stc; call dword ptr [eax - 0x73]; 
0x00150eac: push cs; add byte ptr [ebx - 0x77], dl; ret; 
0x00156c41: push cs; add byte ptr [ecx + 0x144ec], al; add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000a1bd4: push cs; add byte ptr [ecx + 0x19d23ec6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x000a0ac7: push cs; add byte ptr [ecx + 0x19e34bc1], al; add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [ebx + 0x67650f8], al; ret; 
0x000a0955: push cs; add byte ptr [ecx + 0x19e4bdc2], al; add byte ptr [ebx - 0x72afeb14], al; adc byte ptr [ecx + ebx*2], 0xf9; call dword ptr [eax - 0x18]; 
0x000a08c7: push cs; add byte ptr [ecx + 0x19e54bc2], al; add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [0x3fc], bh; jbe 0xa08e0; ret; 
0x0017892f: push cs; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x001160d8: push cs; add esp, 0x54; pop ebx; pop esi; ret; 
0x00120ce8: push cs; add esp, 0x64; pop ebx; pop esi; ret; 
0x00115ed8: push cs; add esp, 0x74; pop ebx; pop esi; ret; 
0x0005b721: push cs; add esp, 0xc; ret; 
0x00114841: push cs; add esp, 4; pop ebx; pop esi; ret; 
0x0009b609: push cs; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0014b419: push cs; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00088c81: push cs; add esp, 8; pop ebx; ret; 
0x0009b951: push cs; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0007c0fd: push cs; and byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000c2544: push cs; call ecx; 
0x000b8857: push cs; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000d964c: push cs; cmp dword ptr [edi], ecx; jne 0xd97a0; pop edi; pop esi; ret; 
0x000a87f9: push cs; cmp eax, 0x430ff839; shr byte ptr [ecx], 1; ret 0xf001; 
0x001251f9: push cs; cmp ecx, edx; jne 0x1251f0; mov eax, dword ptr [eax + 4]; pop ebx; ret; 
0x0013351c: push cs; dec ebx; add byte ptr [eax], al; add bl, ch; ret; 
0x001aaaf2: push cs; jb 0x1aab10; lea eax, [edi + 0xd]; pop edi; ret; 
0x001abb12: push cs; jb 0x1abb30; lea eax, [eax + 0xd]; pop edi; ret; 
0x001ab1b2: push cs; jl 0x1ab1d0; lea eax, [ecx + 0xe]; ret; 
0x000b3629: push cs; jne 0xb3800; pop edi; pop ebx; ret; 
0x000b3a59: push cs; jne 0xb3801; pop ebx; ret; 
0x000b7f2a: push cs; jne 0xb7c51; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000bacaa: push cs; jne 0xbb520; pop edi; pop esi; pop ebx; ret; 
0x000bb261: push cs; lea eax, [edi + 0x16]; pop edi; pop esi; pop ebx; ret; 
0x000bb371: push cs; lea eax, [edi + 0x1e]; pop edi; pop esi; pop ebx; ret; 
0x000b3626: push cs; lea ecx, [edx + 0xe]; jne 0xb3800; pop edi; pop ebx; ret; 
0x000b3a56: push cs; lea ecx, [edx + 0xe]; jne 0xb3801; pop ebx; ret; 
0x000bd661: push cs; mov byte ptr [eax + 4], dh; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0cd4: push cs; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x001ab9a1: push cs; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x000bd851: push cs; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0008e799: push cs; mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x000bd642: push cs; mov word ptr [eax], cx; mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bd948: push cs; movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bd848: push cs; movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x001a64c1: push cs; movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x0008d124: push cs; or byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0005c67e: push cs; or dword ptr [eax], eax; add byte ptr [eax - 0xcb43], al; jmp dword ptr [esi - 0x75]; 
0x000ac382: push cs; out 0xff, eax; cmove eax, edx; ret; 
0x00091981: push cs; pop ebx; pop esi; pop edi; ret; 
0x0019b980: push cs; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019a29a: push cs; pop edi; call 0x189c1d; add ebx, 0x4180f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001981aa: push cs; pop edi; call 0x189c1d; add ebx, 0x4367f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001961aa: push cs; pop edi; call 0x189c1d; add ebx, 0x453ff; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000b9b81: push cs; pop edi; pop esi; pop ebx; ret; 
0x000b5ba4: push cs; pop edi; ret; 
0x0005b92e: push cs; push cs; add byte ptr [ebp - 0x686277a], cl; call dword ptr [eax - 0x73]; 
0x00024e74: push cs; push eax; mov dword ptr [esp + 0xc], eax; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call ecx; 
0x00092fde: push cs; ret 0xffff; 
0x000b5d04: push cs; ret; 
0x001a62c0: push cs; sub eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x001a5fcc: push cs; sub eax, ecx; pop esi; pop edi; ret; 
0x000b7f54: push cs; sub ebx, 0xf; lea ecx, [edx + 0xf]; jne 0xb7c51; pop ebx; ret; 
0x000a6d81: push cs; sub esp, 8; push ecx; push dword ptr [ebx + 0x24]; call eax; 
0x0010b8b2: push cs; test ecx, ecx; je 0x10b8d0; cmp byte ptr [esp + 0x17], 0; jne 0x10b960; call ecx; 
0x00083226: push cs; xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebp - 0x75371], cl; dec dword ptr [ecx - 0x7e30d621]; call dword ptr [ebx + 0xf000005]; 
0x00089673: push cs; xchg esp, eax; add byte ptr [eax], al; add byte ptr [ecx - 0x7e20d631], cl; call dword ptr [ebx + 0xf000005]; 
0x00098301: push cs; xor eax, eax; add esp, 0xc; ret; 
0x001395b2: push ds; adc byte ptr [ecx], bh; ret 0x820f; 
0x00199bc4: push ds; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014e8df: push ds; add al, byte ptr [eax]; add dh, dh; ret; 
0x000decbf: push ds; add eax, 0xc9c1c189; add al, byte ptr [ecx - 0x70a3d707]; add dh, byte ptr [esi + 0xa]; mov eax, edx; ret; 
0x000e90f1: push ds; add esp, 0x14; pop ebx; pop esi; ret; 
0x0013150a: push ds; add esp, 0x18; pop ebx; ret; 
0x00097f50: push ds; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0003be11: push ds; and eax, edx; ret; 
0x0012c14e: push ds; dec ecx; cld; call dword ptr [eax - 0x73]; 
0x000a6678: push ds; inc esp; stc; call dword ptr [eax - 0x18]; 
0x000b98e7: push ds; jne 0xb9e20; pop edi; pop esi; pop ebx; ret; 
0x000baf8a: push ds; jne 0xbb520; pop edi; pop esi; pop ebx; ret; 
0x0014044a: push ds; lea esi, cs:[esi]; mov eax, 6; call dword ptr gs:[0x10]; 
0x000d9a91: push ds; mov ecx, dword ptr [edx + eax*4 + 4]; test ecx, ecx; jne 0xd9a78; add eax, 1; ret; 
0x00139e12: push ds; or al, 0x39; ret 0x820f; 
0x001521ba: push ds; out dx, al; dec dword ptr [ebp - 0x64f037f]; call dword ptr [eax - 0x73]; 
0x0012f489: push ds; pop ebx; pop esi; pop edi; ret; 
0x0003b00b: push ds; pop edi; pop ebp; not eax; and eax, edx; ret; 
0x000bb374: push ds; pop edi; pop esi; pop ebx; ret; 
0x00186e4e: push ds; ret 0xffe9; 
0x0012f072: push ds; sti; call 0x189c21; add edx, 0x10fd9b; mov eax, 0x123; call dword ptr gs:[0x10]; 
0x00094812: push ds; sti; call 0x189c25; add eax, 0x1aa5fb; mov eax, dword ptr [eax + 0x3af4]; ret; 
0x0008cc92: push ds; sti; call 0x189c25; add eax, 0x1b217b; mov eax, dword ptr [eax + 0xe6c]; ret; 
0x0003d4c2: push ds; sti; call 0x189c25; add eax, 0x20194b; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x0003d4a2: push ds; sti; call 0x189c25; add eax, 0x20196b; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x0002f542: push ds; sti; call 0x189c25; add eax, 0x20f8cb; mov eax, dword ptr [eax + 0x10e0]; ret; 
0x000260c2: push ds; sti; call 0x189c25; add eax, 0x218d4b; mov eax, dword ptr [eax + 0x10bc]; ret; 
0x000260a2: push ds; sti; call 0x189c25; add eax, 0x218d6b; mov eax, dword ptr [eax + 0x10b8]; ret; 
0x00024fd2: push ds; sti; call 0x189c25; add eax, 0x219e3b; lea eax, [eax - 0x690b4]; ret; 
0x00024fb2: push ds; sti; call 0x189c25; add eax, 0x219e5b; lea eax, [eax - 0x690ac]; ret; 
0x0009c2a2: push ds; sti; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0009c2a2: push ds; sti; mov eax, 0x9e; call dword ptr gs:[0x10]; ret; 
0x0008bc62: push ds; sti; mov eax, 0xffffffff; mov edx, eax; ret; 
0x0008b492: push ds; sti; mov eax, 0xffffffff; ret; 
0x0016eb02: push ds; sti; mov eax, 1; ret; 
0x00170d92: push ds; sti; mov eax, 2; ret; 
0x0008e742: push ds; sti; mov eax, dword ptr [eax + 0x1c]; mov dword ptr gs:[0x7c], eax; ret; 
0x0003b8e2: push ds; sti; mov eax, dword ptr [esp + 0x10]; and eax, 0x80000000; ret; 
0x00192ba2: push ds; sti; mov eax, dword ptr [esp + 0x10]; mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x0017cdd2: push ds; sti; mov eax, dword ptr [esp + 4]; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x000875c2: push ds; sti; mov eax, dword ptr [esp + 4]; and dword ptr [eax], 0xffffffcf; ret; 
0x00034642: push ds; sti; mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x0013f612: push ds; sti; mov eax, dword ptr [esp + 4]; bswap eax; ret; 
0x00090c12: push ds; sti; mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x00152852: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x10]; ret; 
0x0017ce12: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x0008ccc2: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x001897b2: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x001897d2: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x50]; ret; 
0x00189862: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x54]; ret; 
0x00189852: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x001897e2: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x0009e072: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x64]; ret; 
0x001227d2: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x00086882: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x00086832: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x804; ret; 
0x000e8902: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; ret; 
0x001897c2: push ds; sti; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x0008ccd2: push ds; sti; mov eax, dword ptr [esp + 4]; ret; 
0x0008a862: push ds; sti; mov eax, dword ptr [esp + 4]; test byte ptr [eax], 0x80; jne 0x8a870; ret; 
0x00099b42: push ds; sti; mov eax, dword ptr gs:[8]; ret; 
0x00094bc2: push ds; sti; mov eax, dword ptr gs:[8]; xor edx, edx; lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x0017ca12: push ds; sti; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x0013f622: push ds; sti; movzx eax, word ptr [esp + 4]; rol ax, 8; ret; 
0x00098a22: push ds; sti; nop; xor eax, eax; ret; 
0x0010e382: push ds; sti; push ebx; mov eax, 0x2b; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00024d12: push ds; sti; ret; 
0x00034652: push ds; sti; xor eax, eax; cmp dword ptr [esp + 4], 0x7f; setbe al; ret; 
0x0008bbb2: push ds; sti; xor eax, eax; ret; 
0x00170ea9: push ds; sub esp, 0xc; mov eax, dword ptr [ebx + 0x2398]; push esi; call dword ptr [eax + 0x10]; 
0x0012c9b1: push ds; sub esp, 8; and ebx, 0xfffffffe; push dword ptr [ebx]; push esi; call edi; 
0x001842ce: push ds; test ebx, edi; jmp dword ptr [esi - 0x70]; 
0x0003006c: push dword ptr [eax + 0x10e4]; call 0x12d020; add esp, 0x1c; ret; 
0x0016eacc: push dword ptr [eax + 0x14]; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x00175a38: push dword ptr [eax + 0x190]; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x00175a38: push dword ptr [eax + 0x190]; push eax; push edx; call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x00089d73: push dword ptr [eax + 0x38]; call 0x11f490; add esp, 0x18; pop ebx; ret; 
0x0017686b: push dword ptr [eax + 0x98]; call 0x231a0; add esp, 0x18; pop ebx; ret; 
0x0017d261: push dword ptr [eax + 0xc]; call 0x84c40; add esp, 0x1c; not eax; shr eax, 0x1f; ret; 
0x0009c078: push dword ptr [eax + 4]; call dword ptr [eax]; 
0x000da821: push dword ptr [eax + 4]; push dword ptr [eax]; call 0xdd060; add esp, 0x1c; ret; 
0x0011b247: push dword ptr [eax + ecx]; push edx; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x0018240d: push dword ptr [eax + edx - 0x7d]; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0014cde0: push dword ptr [eax + esi - 0x75]; test byte ptr [esp + edx*4], ah; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x00189d31: push dword ptr [eax - 0x18b4]; push 0; push dword ptr [esp + 0x1c]; call 0x3ebb0; add esp, 0x1c; ret; 
0x00143345: push dword ptr [eax - 0x77]; ret; 
0x0008fee7: push dword ptr [eax]; call 0x231a0; add esp, 0x18; xor eax, eax; pop ebx; ret; 
0x0005b382: push dword ptr [eax]; call 0x66130; add esp, 0x1c; ret; 
0x0005afa2: push dword ptr [eax]; call 0x664c0; add esp, 0x1c; ret; 
0x000804a1: push dword ptr [eax]; call 0x72650; add esp, 0x1c; ret; 
0x00080502: push dword ptr [eax]; call 0x729a0; add esp, 0x1c; ret; 
0x00037e02: push dword ptr [eax]; call 0xc1d40; add esp, 0x1c; ret; 
0x000da824: push dword ptr [eax]; call 0xdd060; add esp, 0x1c; ret; 
0x000c3de3: push dword ptr [eax]; call edi; 
0x0012ca78: push dword ptr [eax]; mov eax, dword ptr [ebp - 0x3c]; push dword ptr [ebp - 0x38]; call eax; 
0x0013be4c: push dword ptr [eax]; push dword ptr [esp + 0x1c]; call 0x13a5a0; add esp, 0x1c; ret; 
0x000eabf7: push dword ptr [eax]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xeb090; add esp, 0x1c; ret; 
0x0007e751: push dword ptr [ebp + 0x14]; push dword ptr [ebp + 0xc]; push esi; call dword ptr [ebx + 0x2c]; 
0x00133e67: push dword ptr [ebp + 0x38]; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; mov edx, 0x40; call dword ptr gs:[0x10]; 
0x001775b4: push dword ptr [ebp + 0x50]; push edi; call dword ptr [eax + 0x14]; 
0x0007e754: push dword ptr [ebp + 0xc]; push esi; call dword ptr [ebx + 0x2c]; 
0x0013d04f: push dword ptr [ebp + 0xe]; pop ebx; pop esi; pop edi; ret; 
0x0007de16: push dword ptr [ebp + 8]; push edx; call dword ptr [ebx + 0x1c]; 
0x0007f8fc: push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x0007c449: push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x0018b971: push dword ptr [ebp + eax + 1]; ret 0x5689; 
0x0007c158: push dword ptr [ebp + edx - 0x75]; inc esp; and al, 8; mov edx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x001239a8: push dword ptr [ebp + esi*2 - 0x77]; ret; 
0x0013bb81: push dword ptr [ebp - 0x11c]; call edx; 
0x0013b2f2: push dword ptr [ebp - 0x11c]; push 0; call eax; 
0x0007e518: push dword ptr [ebp - 0x1c]; push esi; call dword ptr [eax + 0x2c]; 
0x00083ffd: push dword ptr [ebp - 0x2c]; push edx; push ebx; push esi; call eax; 
0x0003680e: push dword ptr [ebp - 0x31]; pop ebx; pop esi; pop edi; ret; 
0x0002440e: push dword ptr [ebp - 0x34]; call dword ptr [ebp - 0x38]; 
0x0012ca7d: push dword ptr [ebp - 0x38]; call eax; 
0x001397b4: push dword ptr [ebp - 0x4c]; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x000f1796: push dword ptr [ebp - 0x5b4]; call dword ptr [eax + 0x10]; 
0x000f1389: push dword ptr [ebp - 0x5b4]; call dword ptr [eax + 0x14]; 
0x000f8a16: push dword ptr [ebp - 0x5c4]; call dword ptr [eax + 0x10]; 
0x000f8609: push dword ptr [ebp - 0x5c4]; call dword ptr [eax + 0x14]; 
0x00139cb1: push dword ptr [ebp - 0x5c]; push ebx; call dword ptr [esi + 0x14]; 
0x000f16f2: push dword ptr [ebp - 0x5dc]; call dword ptr [eax + 0x18]; 
0x000f15c3: push dword ptr [ebp - 0x5dc]; call esi; 
0x000f8972: push dword ptr [ebp - 0x5ec]; call dword ptr [eax + 0x18]; 
0x000f8843: push dword ptr [ebp - 0x5ec]; call esi; 
0x001863c8: push dword ptr [ebp - 0x60]; push 0x28; push edi; call eax; 
0x000811e6: push dword ptr [ebp - 0x70]; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x0013bb7b: push dword ptr [ebp - 0xc0]; push dword ptr [ebp - 0x11c]; call edx; 
0x0013b9e1: push dword ptr [ebp - 0xc0]; push ebx; call eax; 
0x0018820c: push dword ptr [ebp]; push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x000385df: push dword ptr [ebx + 0x12cc]; call 0x231a0; add esp, 0x18; pop ebx; ret; 
0x000427d1: push dword ptr [ebx + 0x1894]; call 0x12d050; mov dword ptr [ebx + 0x1894], 0; add esp, 0x18; pop ebx; ret; 
0x0016ef22: push dword ptr [ebx + 0x229c]; push dword ptr [esp + 0x10]; push esi; call dword ptr [eax + 0xc]; 
0x000a6c77: push dword ptr [ebx + 0x24]; call eax; 
0x000a6e04: push dword ptr [ebx + 0x24]; call edx; 
0x0013ac80: push dword ptr [ebx + 0x30]; call eax; 
0x00176b2b: push dword ptr [ebx + 0x48]; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x00173eb0: push dword ptr [ebx + 0xa8]; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x00090edf: push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x0018658a: push dword ptr [ebx + 4]; call dword ptr [edx + 0x380]; mov dword ptr [ebx + 8], eax; add esp, 0x28; pop ebx; ret; 
0x00186b13: push dword ptr [ebx + 4]; call dword ptr [edx + 0x380]; mov dword ptr [ebx], eax; add esp, 0x28; pop ebx; ret; 
0x0003ef56: push dword ptr [ebx + 4]; call eax; 
0x00025d53: push dword ptr [ebx + 4]; call edi; 
0x00023000: push dword ptr [ebx + 4]; jmp dword ptr [ebx + 8]; 
0x0015c558: push dword ptr [ebx + 4]; push dword ptr [ebx]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x3c]; call esi; 
0x0016fa3d: push dword ptr [ebx + 8]; push esi; call dword ptr [ebx + 0xc]; 
0x0008157c: push dword ptr [ebx + eax - 0x7d]; and ebp, edi; add esp, 4; pop ebx; pop esi; ret; 
0x00081522: push dword ptr [ebx + eax - 0x7d]; out dx, eax; pop ebx; pop esi; pop edi; ret; 
0x00027074: push dword ptr [ebx + edx - 0x7d]; in al, dx; or al, 0x57; call 0x186f70; mov dword ptr [esp], ebx; call edi; 
0x00184c98: push dword ptr [ebx + esi*2 - 0x18]; mov al, byte ptr [0x89fff6a5]; ret; 
0x0016ab29: push dword ptr [ebx - 0x75]; test byte ptr [esp + esi*8], ah; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x840f; 
0x0008e2e5: push dword ptr [ebx]; call 0x186e80; mov dword ptr [ebx + 0x10], eax; add esp, 0x18; pop ebx; ret; 
0x0008e1e2: push dword ptr [ebx]; call 0x186f40; mov dword ptr [ebx + 0xc], eax; add esp, 0x18; pop ebx; ret; 
0x00171cd2: push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x001715b4: push dword ptr [ebx]; call dword ptr [ebx + 8]; 
0x00082787: push dword ptr [ebx]; call dword ptr [edi + 0xc]; 
0x0012c64c: push dword ptr [ebx]; call esi; 
0x0018820a: push dword ptr [ebx]; push dword ptr [ebp]; push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x001871b2: push dword ptr [ebx]; push dword ptr [esi]; push dword ptr [esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x0015c55b: push dword ptr [ebx]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x3c]; call esi; 
0x0012c9b8: push dword ptr [ebx]; push esi; call edi; 
0x0012e1de: push dword ptr [ecx + eax - 0x3d]; mov ebp, esi; call ebx; 
0x0012e1de: push dword ptr [ecx + eax - 0x3d]; mov ebp, esi; call ebx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x0012f474: push dword ptr [ecx + ebx - 0x48]; jl 0x12f47b; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000330a8: push dword ptr [ecx + ebx - 0x7d]; in al, dx; or byte ptr [ecx - 0xe76b], cl; call dword ptr [eax + 0x56]; 
0x00042f6c: push dword ptr [ecx + ecx - 9]; sal bl, 1; bsf eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x00180c08: push dword ptr [ecx]; call dword ptr [eax + 0x6a]; 
0x00088f3f: push dword ptr [ecx]; call dword ptr [eax + 0xc]; 
0x0010488c: push dword ptr [ecx]; fucomi st(3); ret 0xc901; 
0x00058667: push dword ptr [ecx]; imul byte ptr [ecx]; ret; 
0x0015c753: push dword ptr [ecx]; jmp dword ptr [esi - 0x77]; 
0x00187139: push dword ptr [ecx]; mov dword ptr [esp + 0x20], ecx; push dword ptr [esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x0018bbfd: push dword ptr [ecx]; rol byte ptr [ebx + 0x5e5b10c4], 0x5f; ret; 
0x000d5960: push dword ptr [ecx]; rol byte ptr [ebx - 0x362f43], cl; call dword ptr [eax]; 
0x0009f335: push dword ptr [ecx]; sar byte ptr [eax + 1], cl; call 0x9f2a0; mov dword ptr [esp], esi; call ebx; 
0x0004303a: push dword ptr [ecx]; sar byte ptr [ecx], 1; ret 0x920f; 
0x0004301b: push dword ptr [ecx]; sar byte ptr [ecx], 1; ret 0x9e0f; 
0x0004ce5b: push dword ptr [ecx]; shr cl, cl; ret 0xfff2; 
0x00121f84: push dword ptr [edi + 0x19]; pop ebx; pop esi; pop edi; ret; 
0x00122083: push dword ptr [edi + 0x1a]; pop ebx; pop esi; pop edi; ret; 
0x00122001: push dword ptr [edi + 0x1c]; pop ebx; pop esi; pop edi; ret; 
0x00122100: push dword ptr [edi + 0x1d]; pop ebx; pop esi; pop edi; ret; 
0x0012f487: push dword ptr [edi + 0x1e]; pop ebx; pop esi; pop edi; ret; 
0x0009f6ed: push dword ptr [edi + 0x20]; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x0012f2b2: push dword ptr [edi + 0x3b]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000fb5fd: push dword ptr [edi + 0x40]; add esp, 0x18; pop ebx; ret; 
0x0003ca07: push dword ptr [edi + 0x46]; add esp, 0x14; pop ebx; pop esi; ret; 
0x001149d6: push dword ptr [edi + 0x47]; add esp, 0x14; pop ebx; pop esi; ret; 
0x00114752: push dword ptr [edi + 0x4b]; add esp, 0x14; pop ebx; pop esi; ret; 
0x0004041b: push dword ptr [edi + 0x52]; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00122d1d: push dword ptr [edi + 0x58]; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0012f02b: push dword ptr [edi + 0xa]; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x0012fb73: push dword ptr [edi + 0xa]; pop ebx; pop esi; pop edi; ret; 
0x001132db: push dword ptr [edi + 0xa]; pop ebx; pop esi; ret; 
0x0012d6c2: push dword ptr [edi + 0xb]; mov eax, ecx; pop ebx; ret; 
0x00133692: push dword ptr [edi + 0xb]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00061332: push dword ptr [edi + 0xb]; pop ebx; pop esi; pop edi; ret; 
0x0011b83e: push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x0008f831: push dword ptr [edi + 0xc]; pop ebx; pop esi; pop edi; ret; 
0x0003c9a9: push dword ptr [edi + 4]; pop ebx; ret; 
0x00098178: push dword ptr [edi + 5]; pop ebx; pop esi; pop edi; ret; 
0x000612d8: push dword ptr [edi + 5]; pop ebx; ret; 
0x000eabb7: push dword ptr [edi + 6]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000e8c07: push dword ptr [edi + 6]; pop ebx; pop esi; ret; 
0x0012f08f: push dword ptr [edi + 6]; ret; 
0x0009fe0e: push dword ptr [edi + 7]; mov eax, ecx; pop ebx; ret; 
0x00132fd6: push dword ptr [edi + 7]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0012311e: push dword ptr [edi + 7]; pop ebx; pop esi; pop edi; ret; 
0x0011605e: push dword ptr [edi + 7]; pop ebx; pop esi; ret; 
0x000dbe16: push dword ptr [edi + 7]; pop ebx; ret; 
0x0018c4e6: push dword ptr [edi + 7]; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x000c4ab9: push dword ptr [edi + 8]; call ebx; 
0x0009f81d: push dword ptr [edi + 8]; pop ebx; pop esi; ret; 
0x0011f71c: push dword ptr [edi + 9]; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x00132ae4: push dword ptr [edi + 9]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0009f194: push dword ptr [edi + 9]; pop ebx; ret; 
0x0008585e: push dword ptr [edi + ebx*8 - 0x7b]; sar byte ptr [eax + 0x33], 1; ret; 
0x0018b61e: push dword ptr [edi + ecx - 0x77]; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x000c3353: push dword ptr [edi]; call ebx; 
0x000c32ad: push dword ptr [edi]; call esi; 
0x00041289: push dword ptr [edi]; mov eax, dword ptr [esp + 0x10]; call eax; 
0x000c4114: push dword ptr [edi]; mov eax, dword ptr [esp + 0x38]; call eax; 
0x001548ad: push dword ptr [edi]; push eax; push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0007c14b: push dword ptr [edx + 0x98]; call eax; 
0x00189deb: push dword ptr [edx + 0x98]; call eax; cdq; add esp, 0x10; add esp, 0xc; ret; 
0x000333be: push dword ptr [edx + eax]; push dword ptr [esp + 0x1c]; call 0x333d0; add esp, 0x1c; ret; 
0x000ab57e: push dword ptr [edx + eax]; push dword ptr [esp + 0x1c]; call 0xab590; add esp, 0x1c; ret; 
0x001143d3: push dword ptr [edx + ebx*8 - 0x77]; ret 0xbc8d; 
0x0010f80b: push dword ptr [edx + ebx*8 - 0x77]; ret 0xc085; 
0x0016fafe: push dword ptr [esi + 0x10]; push ebx; call dword ptr [esi + 0x14]; 
0x0010d62b: push dword ptr [esi + 0x18]; push dword ptr [esi + 8]; call dword ptr [eax + 0xc]; 
0x0010d626: push dword ptr [esi + 0x20]; mov eax, esi; push dword ptr [esi + 0x18]; push dword ptr [esi + 8]; call dword ptr [eax + 0xc]; 
0x0007c0ed: push dword ptr [esi + 0x98]; call eax; 
0x0009425b: push dword ptr [esi + 0xa]; pop ebx; neg eax; pop esi; pop edi; ret; 
0x0011b24b: push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x001710bf: push dword ptr [esi + 0xc]; push edi; call dword ptr [eax + 0x10]; 
0x0017107c: push dword ptr [esi + 0xc]; push edi; call dword ptr [eax + 8]; 
0x000305f0: push dword ptr [esi + 4]; call 0x231a0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0010d62e: push dword ptr [esi + 8]; call dword ptr [eax + 0xc]; 
0x000d4553: push dword ptr [esi + 8]; call ebx; 
0x000942c4: push dword ptr [esi + 9]; add esp, 4; neg eax; pop ebx; pop esi; ret; 
0x000430ff: push dword ptr [esi + eax + 0xf]; mov ebp, 0x1ff083c2; ret; 
0x000d4613: push dword ptr [esi + eax - 0x77]; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x000731e7: push dword ptr [esi + ebp - 0x7d]; in al, dx; or al, 0x83; ret; 
0x0018ab47: push dword ptr [esi - 0x75]; inc esi; sub al, 0x2b; inc esi; and al, 0x29; ret; 
0x001717f2: push dword ptr [esi]; call dword ptr [esi + 0x20]; 
0x00187137: push dword ptr [esi]; push dword ptr [ecx]; mov dword ptr [esp + 0x20], ecx; push dword ptr [esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x00041287: push dword ptr [esi]; push dword ptr [edi]; mov eax, dword ptr [esp + 0x10]; call eax; 
0x001871b4: push dword ptr [esi]; push dword ptr [esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x0015a137: push dword ptr [esp + 0x10]; call edi; 
0x0018713f: push dword ptr [esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x00083391: push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; push esi; call dword ptr [ebx + 0x40]; 
0x001775f8: push dword ptr [esp + 0x10]; push edi; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0016ef28: push dword ptr [esp + 0x10]; push esi; call dword ptr [eax + 0xc]; 
0x00083395: push dword ptr [esp + 0x10]; push esi; call dword ptr [ebx + 0x40]; 
0x000a6d93: push dword ptr [esp + 0x14]; call eax; 
0x00024d8d: push dword ptr [esp + 0x14]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0016f28a: push dword ptr [esp + 0x14]; push dword ptr [esp + 0x74]; push eax; call dword ptr [ecx]; 
0x00154f61: push dword ptr [esp + 0x14]; push ebp; call edi; 
0x00179c66: push dword ptr [esp + 0x14]; push ebx; call dword ptr [eax]; 
0x0016ee16: push dword ptr [esp + 0x14]; push esi; call dword ptr [eax + 4]; 
0x00184011: push dword ptr [esp + 0x18]; lea eax, [eax - 0x6993c]; push eax; call 0x11f760; add esp, 0x1c; ret; 
0x0005af98: push dword ptr [esp + 0x18]; mov eax, dword ptr [eax + 0x164]; push dword ptr [eax]; call 0x664c0; add esp, 0x1c; ret; 
0x000804f8: push dword ptr [esp + 0x18]; mov eax, dword ptr [eax + 0x164]; push dword ptr [eax]; call 0x729a0; add esp, 0x1c; ret; 
0x00078e27: push dword ptr [esp + 0x18]; mov eax, dword ptr [eax + 0xbc]; push dword ptr [eax]; call 0x66130; add esp, 0x1c; ret; 
0x00080497: push dword ptr [esp + 0x18]; mov eax, dword ptr [eax + 0xbc]; push dword ptr [eax]; call 0x72650; add esp, 0x1c; ret; 
0x0011f080: push dword ptr [esp + 0x18]; push -0x64; call 0x114f20; add esp, 0x1c; ret; 
0x0011f53c: push dword ptr [esp + 0x18]; push -0x64; call 0x115940; add esp, 0x18; pop ebx; ret; 
0x0011f560: push dword ptr [esp + 0x18]; push -0x64; call 0x115b20; add esp, 0x1c; ret; 
0x0010e44f: push dword ptr [esp + 0x18]; push -1; call 0x10e560; add esp, 0x1c; ret; 
0x0010e429: push dword ptr [esp + 0x18]; push -1; call 0x10e970; add esp, 0x1c; ret; 
0x0012d9f7: push dword ptr [esp + 0x18]; push 0; call 0x12dc40; add esp, 0x1c; ret; 
0x00034ed9: push dword ptr [esp + 0x18]; push 0; call 0x34e80; add esp, 0x1c; ret; 
0x000c3ad6: push dword ptr [esp + 0x18]; push 0; call 0xc4020; add esp, 0x1c; ret; 
0x00128899: push dword ptr [esp + 0x18]; push 0; push dword ptr [esp + 0x1c]; call 0x616b0; add esp, 0x1c; ret; 
0x00090697: push dword ptr [esp + 0x18]; push 0x80; push dword ptr [esp + 0x1c]; call 0x905e0; add esp, 0x1c; ret; 
0x000a8527: push dword ptr [esp + 0x18]; push dword ptr [esp + 0x20]; call 0xc2510; add esp, 0x18; pop ebx; ret; 
0x0003f0ab: push dword ptr [esp + 0x18]; push eax; push eax; call 0x3f110; add esp, 0x1c; ret; 
0x0009c84f: push dword ptr [esp + 0x1c]; call 0x10b4c0; add esp, 0x1c; ret; 
0x0010e981: push dword ptr [esp + 0x1c]; call 0x10e770; add esp, 0x1c; ret; 
0x001153ff: push dword ptr [esp + 0x1c]; call 0x115410; add esp, 0x1c; ret; 
0x0011f673: push dword ptr [esp + 0x1c]; call 0x11f6b0; add esp, 0x1c; ret; 
0x00061697: push dword ptr [esp + 0x1c]; call 0x11f760; add esp, 0x1c; ret; 
0x00114a70: push dword ptr [esp + 0x1c]; call 0x11f860; add esp, 0x1c; ret; 
0x00124359: push dword ptr [esp + 0x1c]; call 0x124200; add esp, 0x18; pop ebx; ret; 
0x00024505: push dword ptr [esp + 0x1c]; call 0x124280; add esp, 0x18; pop ebx; ret; 
0x00126b48: push dword ptr [esp + 0x1c]; call 0x126ba0; add esp, 0x1c; ret; 
0x00122cd1: push dword ptr [esp + 0x1c]; call 0x1283c0; add esp, 0x1c; ret; 
0x0012c1e2: push dword ptr [esp + 0x1c]; call 0x12ba60; add esp, 0x1c; ret; 
0x00130259: push dword ptr [esp + 0x1c]; call 0x130270; add esp, 0x1c; ret; 
0x00132f91: push dword ptr [esp + 0x1c]; call 0x133530; add esp, 0x1c; ret; 
0x0013be4e: push dword ptr [esp + 0x1c]; call 0x13a5a0; add esp, 0x1c; ret; 
0x0013a75e: push dword ptr [esp + 0x1c]; call 0x13a650; add esp, 0x18; pop ebx; ret; 
0x0013eeb8: push dword ptr [esp + 0x1c]; call 0x13eed0; add esp, 0x1c; ret; 
0x0013f1f8: push dword ptr [esp + 0x1c]; call 0x13f210; add esp, 0x1c; ret; 
0x00143a29: push dword ptr [esp + 0x1c]; call 0x142d60; add esp, 0x1c; ret; 
0x0014ab19: push dword ptr [esp + 0x1c]; call 0x14aa40; add esp, 0x1c; ret; 
0x00192bd3: push dword ptr [esp + 0x1c]; call 0x158040; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00192c43: push dword ptr [esp + 0x1c]; call 0x158f50; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00192f03: push dword ptr [esp + 0x1c]; call 0x164b80; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00192f73: push dword ptr [esp + 0x1c]; call 0x1658b0; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x001930a3: push dword ptr [esp + 0x1c]; call 0x166f40; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x001930d3: push dword ptr [esp + 0x1c]; call 0x167280; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00193183: push dword ptr [esp + 0x1c]; call 0x1681a0; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00178d56: push dword ptr [esp + 0x1c]; call 0x178aa0; add esp, 0x10; add esp, 0xc; ret; 
0x00178d37: push dword ptr [esp + 0x1c]; call 0x178ba0; add esp, 0x10; add esp, 0xc; ret; 
0x0017b1f1: push dword ptr [esp + 0x1c]; call 0x17af20; add esp, 0x1c; ret; 
0x0017050d: push dword ptr [esp + 0x1c]; call 0x17c030; add esp, 0x1c; ret; 
0x0017c295: push dword ptr [esp + 0x1c]; call 0x17c100; add esp, 0x1c; ret; 
0x0018a9d3: push dword ptr [esp + 0x1c]; call 0x18a0c0; add esp, 0x18; pop ebx; ret; 
0x00042b43: push dword ptr [esp + 0x1c]; call 0x1acdd0; add esp, 0x18; pop ebx; ret; 
0x00042ba7: push dword ptr [esp + 0x1c]; call 0x1ace10; add esp, 0x18; pop ebx; ret; 
0x0002fcc0: push dword ptr [esp + 0x1c]; call 0x231a0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0010bda3: push dword ptr [esp + 0x1c]; call 0x231a0; add esp, 0x18; pop ebx; ret; 
0x00024521: push dword ptr [esp + 0x1c]; call 0x244ec; add esp, 0x1c; ret; 
0x000333c1: push dword ptr [esp + 0x1c]; call 0x333d0; add esp, 0x1c; ret; 
0x00034ebd: push dword ptr [esp + 0x1c]; call 0x34e80; add esp, 0x1c; ret; 
0x0003d81d: push dword ptr [esp + 0x1c]; call 0x3d7a0; add esp, 0x1c; ret; 
0x0003e959: push dword ptr [esp + 0x1c]; call 0x3e0c0; add esp, 0x1c; ret; 
0x0003e98e: push dword ptr [esp + 0x1c]; call 0x3ead0; add esp, 0x1c; ret; 
0x00189d39: push dword ptr [esp + 0x1c]; call 0x3ebb0; add esp, 0x1c; ret; 
0x000406d8: push dword ptr [esp + 0x1c]; call 0x406f0; add esp, 0x1c; ret; 
0x00042808: push dword ptr [esp + 0x1c]; call 0x42820; add esp, 0x1c; ret; 
0x0003dfd9: push dword ptr [esp + 0x1c]; call 0x46e10; add esp, 0x1c; ret; 
0x00046df9: push dword ptr [esp + 0x1c]; call 0x477a0; add esp, 0x1c; ret; 
0x0004a4c9: push dword ptr [esp + 0x1c]; call 0x4ad00; add esp, 0x1c; ret; 
0x0003dffb: push dword ptr [esp + 0x1c]; call 0x4d7b0; add esp, 0x1c; ret; 
0x0004ded9: push dword ptr [esp + 0x1c]; call 0x4e840; add esp, 0x1c; ret; 
0x0003e03b: push dword ptr [esp + 0x1c]; call 0x51570; add esp, 0x1c; ret; 
0x001288f1: push dword ptr [esp + 0x1c]; call 0x616b0; add esp, 0x10; add esp, 0xc; ret; 
0x0012889f: push dword ptr [esp + 0x1c]; call 0x616b0; add esp, 0x1c; ret; 
0x0005ac32: push dword ptr [esp + 0x1c]; call 0x66130; add esp, 0x1c; ret; 
0x0005ac53: push dword ptr [esp + 0x1c]; call 0x66440; add esp, 0x1c; ret; 
0x0005af72: push dword ptr [esp + 0x1c]; call 0x664c0; add esp, 0x1c; ret; 
0x0006dc61: push dword ptr [esp + 0x1c]; call 0x72650; add esp, 0x1c; ret; 
0x00080523: push dword ptr [esp + 0x1c]; call 0x72920; add esp, 0x1c; ret; 
0x00072931: push dword ptr [esp + 0x1c]; call 0x729a0; add esp, 0x1c; ret; 
0x00079aa2: push dword ptr [esp + 0x1c]; call 0x79960; add esp, 0x1c; ret; 
0x00085253: push dword ptr [esp + 0x1c]; call 0x7b3c0; add esp, 0x18; pop ebx; ret; 
0x0007c05d: push dword ptr [esp + 0x1c]; call 0x7bf70; add esp, 0x1c; ret; 
0x0005ad61: push dword ptr [esp + 0x1c]; call 0x7cd30; add esp, 0x1c; ret; 
0x00085560: push dword ptr [esp + 0x1c]; call 0x7e470; add esp, 0x1c; ret; 
0x0008557d: push dword ptr [esp + 0x1c]; call 0x7e620; add esp, 0x1c; ret; 
0x000857dd: push dword ptr [esp + 0x1c]; call 0x85680; add esp, 0x18; pop ebx; ret; 
0x0013bfae: push dword ptr [esp + 0x1c]; call 0x85680; add esp, 0x1c; ret; 
0x0008599d: push dword ptr [esp + 0x1c]; call 0x858b0; add esp, 0x18; pop ebx; ret; 
0x0005ab92: push dword ptr [esp + 0x1c]; call 0x858b0; add esp, 0x1c; ret; 
0x00085e6d: push dword ptr [esp + 0x1c]; call 0x85ce0; add esp, 0x18; pop ebx; ret; 
0x0013d6fe: push dword ptr [esp + 0x1c]; call 0x85ce0; add esp, 0x1c; ret; 
0x0008d0da: push dword ptr [esp + 0x1c]; call 0x8d010; add esp, 0x18; pop ebx; ret; 
0x0009037c: push dword ptr [esp + 0x1c]; call 0x902a0; add esp, 0x18; pop ebx; ret; 
0x000906a0: push dword ptr [esp + 0x1c]; call 0x905e0; add esp, 0x1c; ret; 
0x00097e69: push dword ptr [esp + 0x1c]; call 0x97d20; add esp, 0x1c; ret; 
0x00099bac: push dword ptr [esp + 0x1c]; call 0x99b50; add esp, 0x18; pop ebx; ret; 
0x0009e05c: push dword ptr [esp + 0x1c]; call 0x9d7e0; cmp eax, 1; sbb eax, eax; add esp, 0x1c; ret; 
0x0009f76f: push dword ptr [esp + 0x1c]; call 0x9f6b0; add esp, 0x18; pop ebx; ret; 
0x0009f1cd: push dword ptr [esp + 0x1c]; call 0x9f7f0; add esp, 0x1c; ret; 
0x000aa335: push dword ptr [esp + 0x1c]; call 0xaa360; add esp, 0x1c; ret; 
0x000ab581: push dword ptr [esp + 0x1c]; call 0xab590; add esp, 0x1c; ret; 
0x000acfbc: push dword ptr [esp + 0x1c]; call 0xacfd0; add esp, 0x1c; ret; 
0x000ad1f9: push dword ptr [esp + 0x1c]; call 0xad2c0; add esp, 0x1c; ret; 
0x000d472f: push dword ptr [esp + 0x1c]; call 0xc2490; add esp, 0x18; pop ebx; ret; 
0x000d476f: push dword ptr [esp + 0x1c]; call 0xc2580; add esp, 0x18; pop ebx; ret; 
0x000a8559: push dword ptr [esp + 0x1c]; call 0xc25c0; add esp, 0x18; pop ebx; ret; 
0x000ac087: push dword ptr [esp + 0x1c]; call 0xc2610; add esp, 0x18; pop ebx; ret; 
0x0013e3f5: push dword ptr [esp + 0x1c]; call 0xc4980; add esp, 0x18; pop ebx; ret; 
0x000c4c11: push dword ptr [esp + 0x1c]; call 0xc49f0; add esp, 0x1c; ret; 
0x000c4de5: push dword ptr [esp + 0x1c]; call 0xc4e00; add esp, 0x1c; ret; 
0x0013e6b5: push dword ptr [esp + 0x1c]; call 0xc66c0; add esp, 0x18; pop ebx; ret; 
0x000c7389: push dword ptr [esp + 0x1c]; call 0xc7ce0; add esp, 0x1c; ret; 
0x000cd531: push dword ptr [esp + 0x1c]; call 0xcaec0; add esp, 0x1c; ret; 
0x000cde49: push dword ptr [esp + 0x1c]; call 0xce760; add esp, 0x1c; ret; 
0x000d29d9: push dword ptr [esp + 0x1c]; call 0xd2a00; add esp, 0x1c; ret; 
0x000d9bc6: push dword ptr [esp + 0x1c]; call 0xd4710; add esp, 0x14; pop ebx; pop esi; ret; 
0x000db8c9: push dword ptr [esp + 0x1c]; call 0xda950; add esp, 0x18; pop ebx; ret; 
0x000eab3d: push dword ptr [esp + 0x1c]; call 0xeab50; add esp, 0x1c; ret; 
0x000eabfd: push dword ptr [esp + 0x1c]; call 0xeb090; add esp, 0x1c; ret; 
0x000dad3d: push dword ptr [esp + 0x1c]; mov eax, dword ptr [esp + 0x64]; call eax; 
0x001376e5: push dword ptr [esp + 0x1c]; push 0; push 0x2000004; call eax; 
0x0013d8aa: push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x66130; add esp, 0x1c; ret; 
0x0013e36a: push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x72650; add esp, 0x1c; ret; 
0x0007c0e9: push dword ptr [esp + 0x1c]; push dword ptr [esi + 0x98]; call eax; 
0x0009c84b: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x10b4c0; add esp, 0x1c; ret; 
0x0010e97d: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x10e770; add esp, 0x1c; ret; 
0x00124355: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x124200; add esp, 0x18; pop ebx; ret; 
0x00024501: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x124280; add esp, 0x18; pop ebx; ret; 
0x0012c1de: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x12ba60; add esp, 0x1c; ret; 
0x00132f8d: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x133530; add esp, 0x1c; ret; 
0x0013a75a: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x13a650; add esp, 0x18; pop ebx; ret; 
0x00170509: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x17c030; add esp, 0x1c; ret; 
0x00042ba3: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x1ace10; add esp, 0x18; pop ebx; ret; 
0x00034eb9: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x34e80; add esp, 0x1c; ret; 
0x0003d819: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x3d7a0; add esp, 0x1c; ret; 
0x0003ebcc: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x3ead0; add esp, 0x1c; ret; 
0x00046df5: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x477a0; add esp, 0x1c; ret; 
0x0004a4c5: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x4ad00; add esp, 0x1c; ret; 
0x0004ded5: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x4e840; add esp, 0x1c; ret; 
0x0005ac2e: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x66130; add esp, 0x1c; ret; 
0x0005af6e: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x664c0; add esp, 0x1c; ret; 
0x0008043e: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x72650; add esp, 0x1c; ret; 
0x0008051f: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x72920; add esp, 0x1c; ret; 
0x0007292d: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x729a0; add esp, 0x1c; ret; 
0x00079a9e: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x79960; add esp, 0x1c; ret; 
0x0007c059: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x7bf70; add esp, 0x1c; ret; 
0x0005ad5d: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x7cd30; add esp, 0x1c; ret; 
0x0008555c: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x7e470; add esp, 0x1c; ret; 
0x00085999: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x858b0; add esp, 0x18; pop ebx; ret; 
0x0005ab8e: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x858b0; add esp, 0x1c; ret; 
0x00085e69: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x85ce0; add esp, 0x18; pop ebx; ret; 
0x000ad1f5: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xad2c0; add esp, 0x1c; ret; 
0x000d472b: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc2490; add esp, 0x18; pop ebx; ret; 
0x000d476b: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc2580; add esp, 0x18; pop ebx; ret; 
0x000c4c0d: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc49f0; add esp, 0x1c; ret; 
0x0013e6b1: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc66c0; add esp, 0x18; pop ebx; ret; 
0x000c7385: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc7ce0; add esp, 0x1c; ret; 
0x000cd52d: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xcaec0; add esp, 0x1c; ret; 
0x000cde45: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xce760; add esp, 0x1c; ret; 
0x000d29d5: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xd2a00; add esp, 0x1c; ret; 
0x000eabf9: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xeb090; add esp, 0x1c; ret; 
0x0013e216: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x66130; add esp, 0x1c; ret; 
0x0013e366: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x72650; add esp, 0x1c; ret; 
0x0009c847: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x10b4c0; add esp, 0x1c; ret; 
0x0010e979: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x10e770; add esp, 0x1c; ret; 
0x0012c1f9: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x12ba60; add esp, 0x1c; ret; 
0x00132f89: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x133530; add esp, 0x1c; ret; 
0x0003ebc8: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x3ead0; add esp, 0x1c; ret; 
0x00046df1: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x477a0; add esp, 0x1c; ret; 
0x0004a4c1: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x4ad00; add esp, 0x1c; ret; 
0x0004ded1: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x4e840; add esp, 0x1c; ret; 
0x0005b069: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x664c0; add esp, 0x1c; ret; 
0x00072929: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x729a0; add esp, 0x1c; ret; 
0x000ad1f1: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xad2c0; add esp, 0x1c; ret; 
0x000c4c09: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc49f0; add esp, 0x1c; ret; 
0x000c7381: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc7ce0; add esp, 0x1c; ret; 
0x000cde41: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xce760; add esp, 0x1c; ret; 
0x000d29d1: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xd2a00; add esp, 0x1c; ret; 
0x000db58b: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x30]; mov eax, dword ptr [esp + 0x64]; call eax; 
0x00179e65: push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax + 0xc]; 
0x00171470: push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax + 4]; 
0x001714be: push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax]; 
0x00179d99: push dword ptr [esp + 0x1c]; push ebx; call eax; 
0x0016ee44: push dword ptr [esp + 0x1c]; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00189967: push dword ptr [esp + 0x20]; call 0x1897e0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x001899a3: push dword ptr [esp + 0x20]; call 0x189850; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0018994b: push dword ptr [esp + 0x20]; call 0x189860; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00128cb3: push dword ptr [esp + 0x20]; call 0x231a0; add esp, 0x18; pop ebx; ret; 
0x000a852b: push dword ptr [esp + 0x20]; call 0xc2510; add esp, 0x18; pop ebx; ret; 
0x0012c22a: push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x12ba60; add esp, 0x1c; ret; 
0x0013ce7a: push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x66130; add esp, 0x1c; ret; 
0x0013d0ca: push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x72650; add esp, 0x1c; ret; 
0x0013bfaa: push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x85680; add esp, 0x1c; ret; 
0x0013c86a: push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x858b0; add esp, 0x1c; ret; 
0x0013d6fa: push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x85ce0; add esp, 0x1c; ret; 
0x00189de6: push dword ptr [esp + 0x20]; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x00136fed: push dword ptr [esp + 0x20]; push esi; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x001548b0: push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0008e4e7: push dword ptr [esp + 0x24]; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0006197a: push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x34]; call eax; 
0x0011f6c3: push dword ptr [esp + 0x28]; push -0x64; call 0x11f6e0; add esp, 0x2c; ret; 
0x00061471: push dword ptr [esp + 0x28]; push -1; push dword ptr [esp + 0x2c]; call 0x7ea40; add esp, 0x2c; ret; 
0x00036511: push dword ptr [esp + 0x28]; push 0; call 0x364a0; add esp, 0x2c; ret; 
0x00173eb6: push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x0010c79d: push dword ptr [esp + 0x2c]; call 0x10dae0; add esp, 0x2c; ret; 
0x0011f697: push dword ptr [esp + 0x2c]; call 0x11f6e0; add esp, 0x2c; ret; 
0x001245d5: push dword ptr [esp + 0x2c]; call 0x1244e0; add esp, 0x28; pop ebx; ret; 
0x0012476d: push dword ptr [esp + 0x2c]; call 0x1245f0; add esp, 0x28; pop ebx; ret; 
0x00139159: push dword ptr [esp + 0x2c]; call 0x138f30; add esp, 0x28; pop ebx; ret; 
0x00143a0f: push dword ptr [esp + 0x2c]; call 0x142f10; add esp, 0x2c; ret; 
0x00143b35: push dword ptr [esp + 0x2c]; call 0x143a40; add esp, 0x2c; ret; 
0x001442dd: push dword ptr [esp + 0x2c]; call 0x143d10; add esp, 0x2c; ret; 
0x00192ddb: push dword ptr [esp + 0x2c]; call 0x161950; neg eax; sbb eax, eax; add esp, 0x2c; ret; 
0x001627c4: push dword ptr [esp + 0x2c]; call 0x163050; add esp, 0x20; add esp, 8; pop ebx; ret; 
0x00179137: push dword ptr [esp + 0x2c]; call 0x178f70; add esp, 0x2c; ret; 
0x0018893f: push dword ptr [esp + 0x2c]; call 0x1887e0; add esp, 0x28; pop ebx; ret; 
0x00034e95: push dword ptr [esp + 0x2c]; call 0x35b80; add esp, 0x2c; ret; 
0x000364e5: push dword ptr [esp + 0x2c]; call 0x364a0; add esp, 0x2c; ret; 
0x00041895: push dword ptr [esp + 0x2c]; call 0x41450; add esp, 0x2c; ret; 
0x00043413: push dword ptr [esp + 0x2c]; call 0x43440; add esp, 0x2c; ret; 
0x0004d75f: push dword ptr [esp + 0x2c]; call 0x4d800; add esp, 0x2c; ret; 
0x0005151f: push dword ptr [esp + 0x2c]; call 0x515c0; add esp, 0x2c; ret; 
0x00051eff: push dword ptr [esp + 0x2c]; call 0x51fa0; add esp, 0x2c; ret; 
0x000525df: push dword ptr [esp + 0x2c]; call 0x52680; add esp, 0x2c; ret; 
0x0007d259: push dword ptr [esp + 0x2c]; call 0x7d080; add esp, 0x2c; ret; 
0x00061477: push dword ptr [esp + 0x2c]; call 0x7ea40; add esp, 0x2c; ret; 
0x0007fbf5: push dword ptr [esp + 0x2c]; call 0x7fa20; add esp, 0x28; pop ebx; ret; 
0x00080641: push dword ptr [esp + 0x2c]; call 0x80560; add esp, 0x28; pop ebx; ret; 
0x00080469: push dword ptr [esp + 0x2c]; call 0x80560; add esp, 0x2c; ret; 
0x0013dc9b: push dword ptr [esp + 0x2c]; call 0x85aa0; add esp, 0x2c; ret; 
0x0008bb4d: push dword ptr [esp + 0x2c]; call 0x8ba70; add esp, 0x28; pop ebx; ret; 
0x00090f43: push dword ptr [esp + 0x2c]; call 0x94be0; add esp, 0x20; add esp, 0xc; ret; 
0x00094bb1: push dword ptr [esp + 0x2c]; call 0x94be0; add esp, 0x2c; ret; 
0x0009f7a5: push dword ptr [esp + 0x2c]; call 0x9faa0; add esp, 0x2c; ret; 
0x0009f7d5: push dword ptr [esp + 0x2c]; call 0x9fd70; add esp, 0x2c; ret; 
0x000c45ca: push dword ptr [esp + 0x2c]; call 0xc45e0; add esp, 0x2c; ret; 
0x000cd6df: push dword ptr [esp + 0x2c]; call 0xcd770; add esp, 0x2c; ret; 
0x000d105f: push dword ptr [esp + 0x2c]; call 0xd10f0; add esp, 0x2c; ret; 
0x000d196f: push dword ptr [esp + 0x2c]; call 0xd1a00; add esp, 0x2c; ret; 
0x000d207f: push dword ptr [esp + 0x2c]; call 0xd2110; add esp, 0x2c; ret; 
0x000df76b: push dword ptr [esp + 0x2c]; call 0xdf870; add esp, 0x2c; ret; 
0x000e2b5d: push dword ptr [esp + 0x2c]; call 0xe4f30; add esp, 0x2c; ret; 
0x000f09ab: push dword ptr [esp + 0x2c]; call 0xf01d0; add esp, 0x28; pop ebx; ret; 
0x000f08e3: push dword ptr [esp + 0x2c]; call 0xf0830; add esp, 0x28; pop ebx; ret; 
0x000c4110: push dword ptr [esp + 0x2c]; push dword ptr [edi]; mov eax, dword ptr [esp + 0x38]; call eax; 
0x0010db69: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x10dae0; add esp, 0x2c; ret; 
0x0011f693: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x11f6e0; add esp, 0x2c; ret; 
0x001245d1: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x1244e0; add esp, 0x28; pop ebx; ret; 
0x00124769: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x1245f0; add esp, 0x28; pop ebx; ret; 
0x00139155: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x138f30; add esp, 0x28; pop ebx; ret; 
0x00143b31: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x143a40; add esp, 0x2c; ret; 
0x001442d9: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x143d10; add esp, 0x2c; ret; 
0x00179133: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x178f70; add esp, 0x2c; ret; 
0x00034e91: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x35b80; add esp, 0x2c; ret; 
0x000364e1: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x364a0; add esp, 0x2c; ret; 
0x00041891: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x41450; add esp, 0x2c; ret; 
0x000466c9: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x43440; add esp, 0x2c; ret; 
0x0004d75b: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x4d800; add esp, 0x2c; ret; 
0x0005151b: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x515c0; add esp, 0x2c; ret; 
0x00051efb: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x51fa0; add esp, 0x2c; ret; 
0x000525db: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x52680; add esp, 0x2c; ret; 
0x0007d255: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x7d080; add esp, 0x2c; ret; 
0x0007fbf1: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x7fa20; add esp, 0x28; pop ebx; ret; 
0x0008063d: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x80560; add esp, 0x28; pop ebx; ret; 
0x00080465: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x80560; add esp, 0x2c; ret; 
0x0008bb49: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x8ba70; add esp, 0x28; pop ebx; ret; 
0x00090f3f: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x94be0; add esp, 0x20; add esp, 0xc; ret; 
0x00094bad: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x94be0; add esp, 0x2c; ret; 
0x0009f7a1: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x9faa0; add esp, 0x2c; ret; 
0x0009f7d1: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x9fd70; add esp, 0x2c; ret; 
0x000c45c6: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xc45e0; add esp, 0x2c; ret; 
0x000cd719: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xcd770; add esp, 0x2c; ret; 
0x000d1099: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xd10f0; add esp, 0x2c; ret; 
0x000d19a9: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xd1a00; add esp, 0x2c; ret; 
0x000d20b9: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xd2110; add esp, 0x2c; ret; 
0x000df767: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xdf870; add esp, 0x2c; ret; 
0x000e2b59: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xe4f30; add esp, 0x2c; ret; 
0x000f09a7: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xf01d0; add esp, 0x28; pop ebx; ret; 
0x000f08df: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xf0830; add esp, 0x28; pop ebx; ret; 
0x0010db65: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x10dae0; add esp, 0x2c; ret; 
0x00143b2d: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x143a40; add esp, 0x2c; ret; 
0x001442d5: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x143d10; add esp, 0x2c; ret; 
0x0017912f: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x178f70; add esp, 0x2c; ret; 
0x000364b1: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x35b80; add esp, 0x2c; ret; 
0x000364dd: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x364a0; add esp, 0x2c; ret; 
0x0004188d: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x41450; add esp, 0x2c; ret; 
0x000466c5: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x43440; add esp, 0x2c; ret; 
0x0004d757: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x4d800; add esp, 0x2c; ret; 
0x00051517: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x515c0; add esp, 0x2c; ret; 
0x00051ef7: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x51fa0; add esp, 0x2c; ret; 
0x000525d7: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x52680; add esp, 0x2c; ret; 
0x0007d251: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x7d080; add esp, 0x2c; ret; 
0x00080461: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x80560; add esp, 0x2c; ret; 
0x0009f79d: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x9faa0; add esp, 0x2c; ret; 
0x0009f7cd: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x9fd70; add esp, 0x2c; ret; 
0x000c45c2: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xc45e0; add esp, 0x2c; ret; 
0x000cd715: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xcd770; add esp, 0x2c; ret; 
0x000d1095: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xd10f0; add esp, 0x2c; ret; 
0x000d19a5: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xd1a00; add esp, 0x2c; ret; 
0x000d20b5: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xd2110; add esp, 0x2c; ret; 
0x000df763: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xdf870; add esp, 0x2c; ret; 
0x000e2b55: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xe4f30; add esp, 0x2c; ret; 
0x000c6937: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x38]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x000c4487: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x0008dff4: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x3c]; push ecx; push dword ptr [esp + 0x3c]; call eax; 
0x00089ccd: push dword ptr [esp + 0x2c]; push ebp; push edi; push ebx; call dword ptr [esi + 0x40]; 
0x0009a6db: push dword ptr [esp + 0x2c]; push edx; call 0x94be0; add esp, 0x20; add esp, 0xc; ret; 
0x0008e33f: push dword ptr [esp + 0x2c]; push edx; push ecx; push edi; call eax; 
0x0012e225: push dword ptr [esp + 0x30]; call 0x12e180; add esp, 0x2c; ret; 
0x0015a43a: push dword ptr [esp + 0x30]; lea eax, [esp + 0x48]; push eax; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x40]; call esi; 
0x0007c142: push dword ptr [esp + 0x30]; lea ecx, [esp + 0x10]; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x000db58f: push dword ptr [esp + 0x30]; mov eax, dword ptr [esp + 0x64]; call eax; 
0x00025d4f: push dword ptr [esp + 0x30]; push dword ptr [ebx + 4]; call edi; 
0x0011b83a: push dword ptr [esp + 0x30]; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x0011bbdf: push dword ptr [esp + 0x30]; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x0015c55d: push dword ptr [esp + 0x30]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x3c]; call esi; 
0x0018be9c: push dword ptr [esp + 0x30]; push dword ptr [esp + 0x30]; push esi; call dword ptr [ebx + 0x40]; 
0x000c46f6: push dword ptr [esp + 0x30]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x0015c561: push dword ptr [esp + 0x30]; push dword ptr [esp + 0x3c]; call esi; 
0x0008e166: push dword ptr [esp + 0x30]; push dword ptr [esp + 0x3c]; push ecx; call eax; 
0x0013dce8: push dword ptr [esp + 0x30]; push edx; push dword ptr [esp + 0x2c]; call 0x7ea40; add esp, 0x2c; ret; 
0x0008e23e: push dword ptr [esp + 0x30]; push edx; push ecx; call eax; 
0x00173ed2: push dword ptr [esp + 0x30]; push esi; call dword ptr [eax + 4]; 
0x0018bea0: push dword ptr [esp + 0x30]; push esi; call dword ptr [ebx + 0x40]; 
0x000c4817: push dword ptr [esp + 0x34]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x0015a443: push dword ptr [esp + 0x34]; push dword ptr [esp + 0x40]; call esi; 
0x000c6ccb: push dword ptr [esp + 0x34]; push dword ptr [esp + 0x40]; push ebp; call esi; 
0x0013e096: push dword ptr [esp + 0x34]; push edx; push dword ptr [esp + 0x2c]; call 0x80560; add esp, 0x2c; ret; 
0x0013dc96: push dword ptr [esp + 0x34]; push edx; push dword ptr [esp + 0x2c]; call 0x85aa0; add esp, 0x2c; ret; 
0x0008b8d0: push dword ptr [esp + 0x38]; push 0; push ebp; push edi; push ebx; call dword ptr [esi + 0x24]; 
0x0016b6bb: push dword ptr [esp + 0x38]; push 2; push dword ptr [esp + 0x3c]; call 0x16b4f0; add esp, 0x3c; ret; 
0x000c693b: push dword ptr [esp + 0x38]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x00087962: push dword ptr [esp + 0x38]; push ebp; call dword ptr [eax + 0x1c]; 
0x000c448f: push dword ptr [esp + 0x38]; push ebp; call esi; 
0x0007f9f3: push dword ptr [esp + 0x38]; push edi; call dword ptr [eax + 0x1c]; 
0x00173f04: push dword ptr [esp + 0x38]; push esi; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x00147f75: push dword ptr [esp + 0x3c]; call 0x147820; add esp, 0x3c; ret; 
0x0016b6c1: push dword ptr [esp + 0x3c]; call 0x16b4f0; add esp, 0x3c; ret; 
0x00177f95: push dword ptr [esp + 0x3c]; call 0x177ca0; add esp, 0x3c; ret; 
0x0008dffd: push dword ptr [esp + 0x3c]; call eax; 
0x0002f288: push dword ptr [esp + 0x3c]; call edi; 
0x0015c565: push dword ptr [esp + 0x3c]; call esi; 
0x0002f14c: push dword ptr [esp + 0x3c]; mov eax, dword ptr [esp + 0x34]; call eax; 
0x00061976: push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x34]; call eax; 
0x000c448b: push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x00147f71: push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x147820; add esp, 0x3c; ret; 
0x0016b6ef: push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x16b4f0; add esp, 0x3c; ret; 
0x00177f91: push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x177ca0; add esp, 0x3c; ret; 
0x0002f284: push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call edi; 
0x00147f6d: push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x147820; add esp, 0x3c; ret; 
0x0016b6eb: push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x16b4f0; add esp, 0x3c; ret; 
0x00177f8d: push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x177ca0; add esp, 0x3c; ret; 
0x0008a3ac: push dword ptr [esp + 0x3c]; push ebp; call dword ptr [esi + 0x20]; 
0x001783bc: push dword ptr [esp + 0x3c]; push ebp; push edi; push esi; push eax; call dword ptr [edx]; 
0x0008e16a: push dword ptr [esp + 0x3c]; push ecx; call eax; 
0x0008dff8: push dword ptr [esp + 0x3c]; push ecx; push dword ptr [esp + 0x3c]; call eax; 
0x00024ee8: push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x00024e7e: push dword ptr [esp + 0x40]; call ecx; 
0x00024e27: push dword ptr [esp + 0x40]; call esi; 
0x00024ee4: push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x00024e7a: push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call ecx; 
0x00024e23: push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call esi; 
0x000c6ccf: push dword ptr [esp + 0x40]; push ebp; call esi; 
0x0015a133: push dword ptr [esp + 0x48]; push dword ptr [esp + 0x10]; call edi; 
0x0015a12f: push dword ptr [esp + 0x48]; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x10]; call edi; 
0x001701b0: push dword ptr [esp + 0x48]; push esi; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0003f264: push dword ptr [esp + 0x4c]; call eax; 
0x0015f7b4: push dword ptr [esp + 0x50]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x0002a2e5: push dword ptr [esp + 0x54]; call esi; 
0x0002a2e1: push dword ptr [esp + 0x54]; push dword ptr [esp + 0x54]; call esi; 
0x00029d62: push dword ptr [esp + 0x54]; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0002dc9c: push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0002dc98: push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x00162ec9: push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; push esi; call edi; 
0x000285e4: push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00025d4a: push dword ptr [esp + 0x58]; push ebp; push dword ptr [esp + 0x30]; push dword ptr [ebx + 4]; call edi; 
0x00162ecd: push dword ptr [esp + 0x58]; push esi; call edi; 
0x00029d66: push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0002c8b8: push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x000285e0: push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0002c8b4: push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x00029139: push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; call edi; 
0x000285e8: push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0002ade0: push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x00029135: push dword ptr [esp + 0x60]; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; call edi; 
0x0002addc: push dword ptr [esp + 0x60]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0002913d: push dword ptr [esp + 0x64]; call edi; 
0x0002d0a5: push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x0015f7b0: push dword ptr [esp + 0x64]; push dword ptr [esp + 0x50]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x0002d0a1: push dword ptr [esp + 0x64]; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x0002ba5d: push dword ptr [esp + 0x6c]; call edi; 
0x0002ba59: push dword ptr [esp + 0x6c]; push dword ptr [esp + 0x6c]; call edi; 
0x0016f28e: push dword ptr [esp + 0x74]; push eax; call dword ptr [ecx]; 
0x0008981a: push dword ptr [esp + 0xbc]; push dword ptr [esp + 8]; push dword ptr [esp + 8]; push esi; call dword ptr [ebx + 0x40]; 
0x000a869c: push dword ptr [esp + 0xc]; call 0xa8580; add esp, 0xc; test eax, eax; jne 0xa86b3; ret; 
0x0018820f: push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x00137a08: push dword ptr [esp + 0xc]; push 0x2000001; call dword ptr [ebp + 0x14]; 
0x00163364: push dword ptr [esp + 0xc]; push ebp; call edi; 
0x0018bd71: push dword ptr [esp + 0xcc]; push ebp; push edi; push esi; call dword ptr [ebx + 0x40]; 
0x00104a88: push dword ptr [esp + 0xf]; mov dh, 0x52; sbb al, 0xf6; ret 0xf08; 
0x0003c3c3: push dword ptr [esp + 8]; call 0x3c340; pop ecx; pop edx; ret; 
0x00041283: push dword ptr [esp + 8]; push dword ptr [esi]; push dword ptr [edi]; mov eax, dword ptr [esp + 0x10]; call eax; 
0x00089821: push dword ptr [esp + 8]; push dword ptr [esp + 8]; push esi; call dword ptr [ebx + 0x40]; 
0x00089825: push dword ptr [esp + 8]; push esi; call dword ptr [ebx + 0x40]; 
0x00170c18: push dword ptr [esp + 8]; push esi; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x18]; 
0x0004109e: push dword ptr [esp + 8]; push esi; push edi; mov eax, dword ptr [esp + 0x10]; call eax; 
0x000c1931: push dword ptr [esp + ebx*2 + 0xf]; mov ebp, 0x5ff801ff; ret; 
0x000c6272: push dword ptr [esp + ecx - 0x75]; inc ecx; or byte ptr [ebx + 0x418901c0], al; or byte ptr [edi], cl; nop; ret 0x4b8b; 
0x00189f76: push dword ptr [esp + edi*4 - 0x77]; ret 0xe283; 
0x0016335c: push dword ptr [esp]; push 0x400; push dword ptr [esp + 0xc]; push ebp; call edi; 
0x0015a12c: push dword ptr [esp]; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x10]; call edi; 
0x0015f7b3: push dword ptr fs:[esp + 0x50]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x0002d0a4: push dword ptr fs:[esp + 0x64]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x00187138: push dword ptr ss:[ecx]; mov dword ptr [esp + 0x20], ecx; push dword ptr [esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x00041288: push dword ptr ss:[edi]; mov eax, dword ptr [esp + 0x10]; call eax; 
0x001871b5: push dword ptr ss:[esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x0017cc5f: push eax; adc al, 0x89; dec eax; add al, 0x5b; ret; 
0x0017cdfd: push eax; adc al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x000c0d36: push eax; adc byte ptr [eax + 0x448b1870], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000bd8b0: push eax; adc byte ptr [eax + 0x448b1870], cl; and al, 8; pop esi; ret; 
0x000e8206: push eax; adc byte ptr [ebp - 0x74f88b2e], al; dec edx; or byte ptr [ebp - 0x17f48a37], al; push 0x89fffffc; ret 0xc085; 
0x00178a77: push eax; adc byte ptr [ebx + 0x10c48303], cl; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x000c1b31: push eax; adc byte ptr [ebx + 0x58ebf0e2], al; lea esi, cs:[esi]; xor eax, eax; ret; 
0x000c0d13: push eax; adc byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000bd890: push eax; adc byte ptr [ebx + 0x5e082444], cl; ret; 
0x000788bb: push eax; adc byte ptr [ebx - 0x4ff63], cl; call dword ptr [edx - 0x77]; 
0x000c0d96: push eax; adc byte ptr [ecx + 0x448b1748], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000bd8f3: push eax; adc byte ptr [ecx + 0x448b1748], cl; and al, 8; pop esi; ret; 
0x000c0dc6: push eax; adc byte ptr [ecx + 0x448b1848], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000bd913: push eax; adc byte ptr [ecx + 0x448b1848], cl; and al, 8; pop esi; ret; 
0x00085cab: push eax; adc byte ptr [ecx + 0x50890853], cl; or al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0016faf8: push eax; adc byte ptr [ecx - 0xa5a73b], cl; jbe 0x16fb11; push ebx; call dword ptr [esi + 0x14]; 
0x00171531: push eax; adc byte ptr [ecx], al; sar dword ptr [ecx], 1; dec eax; adc al, 0x72; ret 0x4889; 
0x000c0d67: push eax; adc byte ptr [esi - 0x77], ah; dec eax; sbb byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000bd8d4: push eax; adc byte ptr [esi - 0x77], ah; dec eax; sbb byte ptr [ebx + 0x5e082444], cl; ret; 
0x00188070: push eax; adc byte ptr [esi - 9], ah; ret 0x7f8; 
0x00031b72: push eax; adc dword ptr [eax], eax; add byte ptr [ecx], cl; ret 0x850f; 
0x0014d8ab: push eax; add ah, byte ptr [esi - 0x3f]; ret 0xf08; 
0x0016f37d: push eax; add al, 0x50; call dword ptr [edx + 0x10]; 
0x0017647a: push eax; add al, 0x51; push eax; call dword ptr [edx + 8]; 
0x00085a1a: push eax; add al, 0x5b; pop esi; ret; 
0x0008ae38: push eax; add al, 0x5b; ret; 
0x0008e763: push eax; add al, 0x65; mov edx, dword ptr [0x78]; mov dword ptr [eax + 0xc], edx; mov dword ptr gs:[0x78], eax; ret; 
0x0007f372: push eax; add al, 0x73; or cl, byte ptr [ebp + 0x889044a]; mov eax, dword ptr [edx]; ret; 
0x000ffbae: push eax; add al, 0x83; ror byte ptr [eax], 0x39; ret 0xf475; 
0x00072976: push eax; add al, 0x89; adc ecx, dword ptr [ecx + 0x5f5e5b38]; ret; 
0x0017814b: push eax; add al, 0x89; add al, 0x24; call dword ptr [edx + 0x10]; 
0x00080aa2: push eax; add al, 0x89; pop eax; or byte ptr [ecx + 0x10892048], cl; pop ebx; ret; 
0x00171643: push eax; add al, 0x89; push ebx; adc bl, ch; ret; 
0x0008e79b: push eax; add al, 0x89; push esp; and al, 4; jmp dword ptr [eax]; 
0x000a32bb: push eax; add al, 0x89; ret 0xf089; 
0x000bd67a: push eax; add al, 0x8b; inc esp; and al, 8; pop esi; ret; 
0x0017d2ce: push eax; add al, 0x8b; push esp; and al, 8; mov dword ptr [eax + 0xc], edx; ret; 
0x00054195: push eax; add al, 0x8d; inc edi; add al, 0xf; xchg edx, eax; ret; 
0x00023ecd: push eax; add al, 0xeb; ret 0x2ae8; 
0x00023fd7: push eax; add al, 0xeb; ret; 
0x0012cd11: push eax; add al, 0xf6; ret 0x7401; 
0x0009c13e: push eax; add al, byte ptr [eax]; add byte ptr [ebp - 0x1a2e637d], cl; call dword ptr [ecx + 0x50]; 
0x00061426: push eax; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0003482a: push eax; add byte ptr [ecx], al; add byte ptr [eax], al; and eax, dword ptr [esp + 8]; ret; 
0x000f23f6: push eax; add cl, byte ptr [ecx - 0x47f7b]; call dword ptr [edx - 0x77]; 
0x00081f0a: push eax; add dh, byte ptr [edx + ebx*4 - 0x17]; ret; 
0x0003c7e8: push eax; add dword ptr [eax], eax; add byte ptr [eax + 0xae], bh; mov esi, 8; lea edx, [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x0003c88b: push eax; add dword ptr [eax], eax; add byte ptr [eax + 0xae], bh; mov esi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00037530: push eax; add dword ptr [ebx - 0x7ccfdbbc], ecx; ret; 
0x00066495: push eax; add dword ptr [ecx + 0x5b088813], ecx; pop esi; pop edi; ret; 
0x000648b1: push eax; add dword ptr [ecx + 0xc60455], ecx; and eax, 0xfffb62e9; jmp dword ptr [esi - 0x70]; 
0x000a84f7: push eax; add dword ptr [ecx - 0x3dbaf028], ecx; add esp, 0x18; pop ebx; ret; 
0x0016c157: push eax; add eax, 0x18; push eax; call 0x16bf00; add esp, 0x2c; ret; 
0x0013be9d: push eax; add eax, eax; call 0x1f441ab; pop ebx; ret; 
0x0007ca93: push eax; add eax, ecx; ljmp 0x450f:0x107f602; ret 0xec83; 
0x000c0aeb: push eax; add ecx, dword ptr [ebx + 0x5b0c2444]; pop esi; ret; 
0x000bd698: push eax; add ecx, dword ptr [ebx + 0x5e082444]; ret; 
0x00125afb: push eax; add ecx, dword ptr [edi]; dec eax; ret 0xf8c1; 
0x0007eadd: push eax; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00177c33: push eax; and byte ptr [ebp + 0xe0249c], cl; add byte ptr [eax], al; push ebx; push eax; call dword ptr [edx + 8]; 
0x0008e736: push eax; and byte ptr [ebp - 0x5d], ah; jl 0x8e73c; add byte ptr [eax], al; ret; 
0x00149e4a: push eax; and byte ptr [ebx + 0x420f1afe], al; ret 0xb60f; 
0x00080a6b: push eax; and byte ptr [ecx + 0x488b0448], cl; or byte ptr [ecx + 0x8508910], cl; mov dword ptr [eax + 0x20], ecx; ret; 
0x001775e3: push eax; and byte ptr [edi + 0x50], dl; call dword ptr [edx + 4]; 
0x0006eef2: push eax; and byte ptr [edi], cl; test byte ptr [edi], ch; or dword ptr [eax], eax; add byte ptr [ecx], al; ret; 
0x0006f43c: push eax; and byte ptr [edi], cl; test ch, ah; add eax, dword ptr [eax]; add byte ptr [ecx], al; ret; 
0x0016ee2f: push eax; and byte ptr [esi + 0x50], dl; call dword ptr [edx + 4]; 
0x00034505: push eax; and eax, 0x1000; ret; 
0x000344d5: push eax; and eax, 0x100; ret; 
0x000344a5: push eax; and eax, 0x2000; ret; 
0x000343e5: push eax; and eax, 0x200; ret; 
0x00034445: push eax; and eax, 0x4000; ret; 
0x00034355: push eax; and eax, 0x400; ret; 
0x00034415: push eax; and eax, 0x8000; ret; 
0x000343b5: push eax; and eax, 0x800; ret; 
0x000345b5: push eax; and eax, 1; ret; 
0x00034385: push eax; and eax, 2; ret; 
0x00034475: push eax; and eax, 4; ret; 
0x00034325: push eax; and eax, 8; ret; 
0x0011580b: push eax; call 0x115940; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0011586a: push eax; call 0x115b20; add esp, 0x10; add esp, 0xc; ret; 
0x0005ad37: push eax; call 0x11f760; add esp, 0x1c; ret; 
0x0011e502: push eax; call 0x121670; add esp, 0x10; add esp, 0xc; ret; 
0x00126b77: push eax; call 0x126c90; add esp, 0x1c; ret; 
0x0002fd10: push eax; call 0x1296b0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000a0d26: push eax; call 0x130f50; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0014d296: push eax; call 0x14d180; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016c15b: push eax; call 0x16bf00; add esp, 0x2c; ret; 
0x00163230: push eax; call 0x186f70; mov dword ptr [esp], ebp; call edi; 
0x00163417: push eax; call 0x186f70; mov dword ptr [esp], ebp; call esi; 
0x00042b18: push eax; call 0x1acdd0; add esp, 0x18; pop ebx; ret; 
0x0002827c: push eax; call 0x231a0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0010bd20: push eax; call 0x231a8; add esp, 0x18; pop ebx; ret; 
0x001489f1: push eax; call 0x34e80; add esp, 0x10; add esp, 0xc; ret; 
0x0017640a: push eax; call 0x34e80; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000ef9f6: push eax; call 0x34e80; add esp, 0x14; pop ebx; pop esi; ret; 
0x0003f0b0: push eax; call 0x3f110; add esp, 0x1c; ret; 
0x00040b17: push eax; call 0x40600; add esp, 0x10; add esp, 0xc; ret; 
0x00040847: push eax; call 0x40b80; add esp, 0x10; add esp, 0xc; ret; 
0x0005bcc4: push eax; call 0x5bb30; add esp, 0x18; pop ebx; ret; 
0x00060b83: push eax; call 0x7cb00; cmp eax, 1; sbb eax, eax; add esp, 0x1c; ret; 
0x000876b3: push eax; call 0x8b1a0; add esp, 0x1c; ret; 
0x0009a70b: push eax; call 0x8efe0; add esp, 0x28; pop ebx; ret; 
0x0009b4db: push eax; call 0x8efe0; add esp, 0x2c; ret; 
0x000dd049: push eax; call 0x8f2d0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0008cdf9: push eax; call 0x8f2d0; add esp, 0x1c; ret; 
0x0010b9b1: push eax; call 0x8f2d0; call dword ptr [esi]; 
0x00099d77: push eax; call 0x901f0; add esp, 0x1c; ret; 
0x0009728f: push eax; call 0x968e0; add esp, 0x18; pop ebx; ret; 
0x0002823e: push eax; call 0x982f0; add esp, 0x1c; ret; 
0x0015bf38: push eax; call 0xc21a0; add esp, 0x1c; ret; 
0x000a0c08: push eax; call 0xc25c0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000ded1b: push eax; call 0xda950; add esp, 0x1c; ret; 
0x000da845: push eax; call 0xdd060; add esp, 0x1c; ret; 
0x001375a9: push eax; call dword ptr [ebp + 0x14]; 
0x0005bc22: push eax; call dword ptr [ebp + 0x1c]; 
0x001866cb: push eax; call dword ptr [ebx + 0x24]; 
0x00186752: push eax; call dword ptr [ebx + 0x28]; 
0x0016f1d6: push eax; call dword ptr [ecx + 0x10]; 
0x000f0d90: push eax; call dword ptr [ecx + 0x20]; 
0x0016eef3: push eax; call dword ptr [ecx + 0xc]; 
0x0016ef7b: push eax; call dword ptr [ecx + 8]; 
0x0016f292: push eax; call dword ptr [ecx]; 
0x0016f37f: push eax; call dword ptr [edx + 0x10]; 
0x001781dd: push eax; call dword ptr [edx + 0x14]; 
0x00174045: push eax; call dword ptr [edx + 0xc]; 
0x0016ee32: push eax; call dword ptr [edx + 4]; 
0x0017647d: push eax; call dword ptr [edx + 8]; 
0x001783c3: push eax; call dword ptr [edx]; 
0x00083de7: push eax; call ebx; 
0x0008f6ad: push eax; call ecx; 
0x00156bc1: push eax; call edi; 
0x000a6e2d: push eax; call edx; 
0x0007ea33: push eax; cli; jmp dword ptr [esi - 0x70]; 
0x000a8b69: push eax; cmc; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x00042269: push eax; cmp byte ptr [ebx + 0x408b3c48], cl; inc eax; ret; 
0x0009b9dc: push eax; cmpxchg dword ptr [edx], ecx; jne 0x9b9f0; xor eax, eax; pop ebx; ret; 
0x00123da8: push eax; dec edx; stc; call dword ptr [eax - 1]; 
0x001897cd: push eax; dec esp; ret; 
0x000fedab: push eax; inc dword ptr [ebx - 0x78f00306]; push cs; add al, byte ptr [eax]; add byte ptr [ecx], al; ret; 
0x00121f32: push eax; inc eax; pop ebx; pop esi; ret; 
0x00052f03: push eax; insb byte ptr es:[edi], dx; lea ecx, [ecx + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x00040261: push eax; insb byte ptr es:[edi], dx; xor ecx, ecx; mov ebx, 0; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x001642cc: push eax; int1; call dword ptr [eax - 0x73]; 
0x00042d99: push eax; int1; mov eax, edx; ret; 
0x000a0ad7: push eax; jbe 0xa0ae0; ret; 
0x000c0e33: push eax; jnp 0x5b18327e; pop esi; ret; 
0x000bd970: push eax; jnp 0x5e13fdbb; ret; 
0x0005ad30: push eax; lea eax, [edx - 0x6cf99]; push eax; call 0x11f760; add esp, 0x1c; ret; 
0x0007ac8b: push eax; lea eax, [esi + 0x28]; push eax; push 1; push esi; call edx; 
0x000d454d: push eax; lea eax, [esp + 0x34]; push eax; push dword ptr [esi + 8]; call ebx; 
0x0002f27e: push eax; lea eax, [esp + 0x78]; push eax; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call edi; 
0x00024b51: push eax; lea edx, fs:[eax + 0x34]; mov eax, dword ptr [eax + 0x34]; test eax, eax; jne 0x24b50; ret; 
0x00132a35: push eax; mov dword ptr [esp + 0x18], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00024e75: push eax; mov dword ptr [esp + 0xc], eax; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call ecx; 
0x0011528d: push eax; mov eax, 0xdd; mov ecx, esi; mov edx, edi; call dword ptr gs:[0x10]; 
0x0011b243: push eax; mov eax, dword ptr [esi + 0x20]; push dword ptr [eax + ecx]; push edx; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x00041715: push eax; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0015f7b7: push eax; mov eax, dword ptr [esp + 0x44]; call eax; 
0x000db3fa: push eax; mov eax, dword ptr [esp + 0x64]; call eax; 
0x001329d6: push eax; mov ebx, 0xc; mov dword ptr [esp + 0x18], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00133433: push eax; mov ecx, dword ptr [esp + 8]; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x00115310: push eax; mov ecx, esi; mov edx, edi; mov dword ptr [esp + 4], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000810c3: push eax; or al, 0x31; ror byte ptr [ecx + 0x4c4830b], 0x5b; pop esi; ret; 
0x0009d71b: push eax; or al, 0x5b; pop esi; pop edi; ret; 
0x0008e76d: push eax; or al, 0x65; mov dword ptr [0x78], eax; ret; 
0x00085cb1: push eax; or al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000a2314: push eax; or al, 0x8d; inc edx; jmp dword ptr [ecx]; 
0x0003e45a: push eax; or byte ptr [eax], al; add byte ptr [ebx + 0x688d04ec], al; call dword ptr [ebp + 0x56]; 
0x0011c126: push eax; or byte ptr [ebp - 0x123cf36d], cl; call dword ptr [edx - 0x73]; 
0x00030f8b: push eax; or byte ptr [ebp - 0x74d88a2e], al; inc ebx; add al, 0x83; ret; 
0x00152b28: push eax; or byte ptr [ebp - 0xc], dh; ret; 
0x0008765c: push eax; or byte ptr [ebx + 0x10], dh; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x0008769a: push eax; or byte ptr [ebx + 0x12], dh; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x000c0b51: push eax; or byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000bd6de: push eax; or byte ptr [ebx + 0x5e082444], cl; ret; 
0x00179069: push eax; or byte ptr [ebx - 0x137cef3c], al; or al, 0x8b; inc edi; add al, 0x57; call dword ptr [eax + 0x10]; 
0x0008c9a9: push eax; or byte ptr [ebx - 0x2fd6f7bf], cl; ret; 
0x00171081: push eax; or byte ptr [ebx - 0x3f7aef3c], al; je 0x17118b; sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x001798b7: push eax; or byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x00037ea0: push eax; or byte ptr [edi], cl; mov bh, 0x93; and byte ptr [ebp - 7], dh; jmp dword ptr [esi - 0x77]; 
0x00122e86: push eax; or byte ptr [edx + 0x100], bh; mov word ptr [eax + 0x16], dx; ret; 
0x0015c87a: push eax; or dword ptr [ebx + 0x5e], ebx; and edx, 0xf; mov eax, edx; ret; 
0x000bd930: push eax; or eax, 0x824448b; pop esi; ret; 
0x000c0df3: push eax; or eax, 0xc24448b; pop ebx; pop esi; ret; 
0x000980f6: push eax; or eax, edx; xor edx, edx; mov dword ptr [ecx], eax; mov eax, edx; ret; 
0x00188cbc: push eax; out 0xff, al; dec dword ptr [ebx - 0x76f7dbb4]; ret 0xd2e9; 
0x001222fc: push eax; pop ebx; pop esi; pop edi; ret; 
0x000c0b6f: push eax; pop es; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd6fc: push eax; pop es; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00169a87: push eax; push 0; call 0x1565b0; add esp, 0x1c; ret; 
0x0017669a: push eax; push 0; call 0x79a90; add esp, 0x18; pop ebx; ret; 
0x0013790e: push eax; push 0; push 0x2000002; call dword ptr [ebp + 0x14]; 
0x00154f5e: push eax; push 0; push dword ptr [esp + 0x14]; push ebp; call edi; 
0x001288c0: push eax; push 0; push dword ptr [esp + 0x1c]; call 0x616b0; add esp, 0x1c; ret; 
0x00092ba2: push eax; push 0x818d3675; mov bh, byte ptr [edi]; stc; call dword ptr [edx + 0x50]; 
0x0016ddf7: push eax; push 0xa; call 0x1565b0; add esp, 0x1c; ret; 
0x00024f9c: push eax; push 1; call 0x121920; add esp, 0x1c; ret; 
0x00169ee7: push eax; push 1; call 0x1565b0; add esp, 0x1c; ret; 
0x0011b837: push eax; push 1; push dword ptr [esp + 0x30]; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x0007ac8f: push eax; push 1; push esi; call edx; 
0x0011bbdc: push eax; push 2; push dword ptr [esp + 0x30]; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x0016b317: push eax; push 3; call 0x1565b0; add esp, 0x1c; ret; 
0x0016c677: push eax; push 4; call 0x1565b0; add esp, 0x1c; ret; 
0x0016ccf7: push eax; push 5; call 0x1565b0; add esp, 0x1c; ret; 
0x0011bab3: push eax; push 5; push dword ptr [esp + 0x30]; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x0016d097: push eax; push 6; call 0x1565b0; add esp, 0x1c; ret; 
0x0016e377: push eax; push 7; call 0x1565b0; add esp, 0x1c; ret; 
0x0016d717: push eax; push 8; call 0x1565b0; add esp, 0x1c; ret; 
0x0016db27: push eax; push 9; call 0x1565b0; add esp, 0x1c; ret; 
0x000c0e13: push eax; push cs; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd950: push eax; push cs; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x001397b3: push eax; push dword ptr [ebp - 0x4c]; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x00139cb0: push eax; push dword ptr [ebp - 0x5c]; push ebx; call dword ptr [esi + 0x14]; 
0x000f15c2: push eax; push dword ptr [ebp - 0x5dc]; call esi; 
0x000f8842: push eax; push dword ptr [ebp - 0x5ec]; call esi; 
0x000a6e03: push eax; push dword ptr [ebx + 0x24]; call edx; 
0x00176b2a: push eax; push dword ptr [ebx + 0x48]; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x00025db4: push eax; push dword ptr [ebx + 4]; call edi; 
0x001715b3: push eax; push dword ptr [ebx]; call dword ptr [ebx + 8]; 
0x00043039: push eax; push dword ptr [ecx]; sar byte ptr [ecx], 1; ret 0x920f; 
0x000c3352: push eax; push dword ptr [edi]; call ebx; 
0x000d4552: push eax; push dword ptr [esi + 8]; call ebx; 
0x0011f672: push eax; push dword ptr [esp + 0x1c]; call 0x11f6b0; add esp, 0x1c; ret; 
0x00061696: push eax; push dword ptr [esp + 0x1c]; call 0x11f760; add esp, 0x1c; ret; 
0x0012438c: push eax; push dword ptr [esp + 0x1c]; call 0x124200; add esp, 0x18; pop ebx; ret; 
0x00126b47: push eax; push dword ptr [esp + 0x1c]; call 0x126ba0; add esp, 0x1c; ret; 
0x0013eeb7: push eax; push dword ptr [esp + 0x1c]; call 0x13eed0; add esp, 0x1c; ret; 
0x0013f1f7: push eax; push dword ptr [esp + 0x1c]; call 0x13f210; add esp, 0x1c; ret; 
0x00178d55: push eax; push dword ptr [esp + 0x1c]; call 0x178aa0; add esp, 0x10; add esp, 0xc; ret; 
0x0017c294: push eax; push dword ptr [esp + 0x1c]; call 0x17c100; add esp, 0x1c; ret; 
0x00024520: push eax; push dword ptr [esp + 0x1c]; call 0x244ec; add esp, 0x1c; ret; 
0x000406d7: push eax; push dword ptr [esp + 0x1c]; call 0x406f0; add esp, 0x1c; ret; 
0x00042807: push eax; push dword ptr [esp + 0x1c]; call 0x42820; add esp, 0x1c; ret; 
0x001288f0: push eax; push dword ptr [esp + 0x1c]; call 0x616b0; add esp, 0x10; add esp, 0xc; ret; 
0x0009f76e: push eax; push dword ptr [esp + 0x1c]; call 0x9f6b0; add esp, 0x18; pop ebx; ret; 
0x000abf9c: push eax; push dword ptr [esp + 0x1c]; call 0xc25c0; add esp, 0x18; pop ebx; ret; 
0x000db8c8: push eax; push dword ptr [esp + 0x1c]; call 0xda950; add esp, 0x18; pop ebx; ret; 
0x0012c1dd: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x12ba60; add esp, 0x1c; ret; 
0x0005ac2d: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x66130; add esp, 0x1c; ret; 
0x0005af6d: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x664c0; add esp, 0x1c; ret; 
0x0008043d: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x72650; add esp, 0x1c; ret; 
0x0008051e: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x72920; add esp, 0x1c; ret; 
0x000c369d: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x729a0; add esp, 0x1c; ret; 
0x00079a9d: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x79960; add esp, 0x1c; ret; 
0x0005ab8d: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x858b0; add esp, 0x1c; ret; 
0x001548af: push eax; push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x00143a0e: push eax; push dword ptr [esp + 0x2c]; call 0x142f10; add esp, 0x2c; ret; 
0x0018893e: push eax; push dword ptr [esp + 0x2c]; call 0x1887e0; add esp, 0x28; pop ebx; ret; 
0x0011f692: push eax; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x11f6e0; add esp, 0x2c; ret; 
0x00176b46: push eax; push dword ptr [esp + 0x30]; push esi; call dword ptr [eax + 4]; 
0x0015a442: push eax; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x40]; call esi; 
0x0002f283: push eax; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call edi; 
0x00024e22: push eax; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call esi; 
0x0002a2e0: push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x54]; call esi; 
0x00029d61: push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0002dc97: push eax; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0002c8b3: push eax; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x0002addb: push eax; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0002d0a0: push eax; push dword ptr [esp + 0x64]; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x0002ba58: push eax; push dword ptr [esp + 0x6c]; push dword ptr [esp + 0x6c]; call edi; 
0x00137a07: push eax; push dword ptr [esp + 0xc]; push 0x2000001; call dword ptr [ebp + 0x14]; 
0x0003f0af: push eax; push eax; call 0x3f110; add esp, 0x1c; ret; 
0x00040b16: push eax; push eax; call 0x40600; add esp, 0x10; add esp, 0xc; ret; 
0x00040846: push eax; push eax; call 0x40b80; add esp, 0x10; add esp, 0xc; ret; 
0x000c43d2: push eax; push ebp; call esi; 
0x0008a143: push eax; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x00082f5e: push eax; push ebx; call dword ptr [edi + 0x40]; 
0x00087c0a: push eax; push ebx; call dword ptr [esi + 0x40]; 
0x0018b2ac: push eax; push ebx; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x40]; 
0x0013749f: push eax; push ebx; push 0x2000001; call dword ptr [ebp + 0x14]; 
0x0008e567: push eax; push ecx; call edx; 
0x0007e8e2: push eax; push ecx; cli; jmp dword ptr [esi - 0x70]; 
0x0017c07d: push eax; push ecx; push esi; call dword ptr [edx + 0xc]; 
0x0017c0b6: push eax; push ecx; push esi; call dword ptr [edx + 8]; 
0x001775b6: push eax; push edi; call dword ptr [eax + 0x14]; 
0x001707a3: push eax; push edi; call dword ptr [ecx + 0x18]; 
0x00170897: push eax; push edi; call dword ptr [edx + 0x18]; 
0x00138444: push eax; push edi; push 0x2000003; call dword ptr [ebx + 0x14]; 
0x0005f7d5: push eax; push edi; push ebx; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0016eacf: push eax; push edx; call dword ptr [ecx + 0xc]; 
0x0016eacf: push eax; push edx; call dword ptr [ecx + 0xc]; add esp, 0x10; add esp, 0xc; ret; 
0x00175a3e: push eax; push edx; call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x0008e0e4: push eax; push edx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x00082572: push eax; push edx; push edi; call dword ptr [ebx + 0x38]; 
0x000834dd: push eax; push edx; push esi; call ecx; 
0x0016eba8: push eax; push esi; call 0x1704b0; mov eax, dword ptr [esp + 0x18]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0009827f: push eax; push esi; call 0x8e750; mov eax, dword ptr [ebp - 0x3c]; add esp, 0x10; call eax; 
0x0008b58f: push eax; push esi; call dword ptr [ebp + 0xc]; 
0x00083244: push eax; push esi; call dword ptr [ebx + 0x40]; 
0x0007b2aa: push eax; push esi; call dword ptr [ebx + 0x48]; 
0x0008968b: push eax; push esi; call dword ptr [ecx + 0x40]; 
0x00088e1b: push eax; push esi; call dword ptr [edi + 0x38]; 
0x0018bbe4: push eax; push esi; call dword ptr [edi + 0x40]; 
0x00087fe6: push eax; push esi; call dword ptr [edi + 0x48]; 
0x00089777: push eax; push esi; call edx; 
0x000c334c: push eax; push esi; lea eax, [esp + 0x40]; push eax; push dword ptr [edi]; call ebx; 
0x0015ff5b: push eax; push esi; mov ecx, dword ptr [esp + 0x3c]; call ecx; 
0x00138218: push eax; push esi; push 0x2000006; call dword ptr [ebx + 0x14]; 
0x00122e8f: push eax; push ss; ret; 
0x00186e3c: push eax; ret 0xffe9; 
0x00134460: push eax; ret 0xfff9; 
0x0003b5d5: push eax; ret; 
0x0013f063: push eax; rol byte ptr [ebx - 0x57ca818], 1; or dword ptr [edi], ecx; inc esi; ret 0xbe0f; 
0x0008e72c: push eax; sbb al, 0x65; mov edx, dword ptr [0x78]; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x001371e6: push eax; sbb al, 0x89; ret; 
0x0005bb46: push eax; sbb al, 0x8d; mov byte ptr [eax + eax + 0x48890000], bl; or byte ptr [ecx + 0x10890450], cl; ret; 
0x00024bd4: push eax; sbb al, byte ptr [eax]; add byte ptr [ebx + 0x5e], bl; ret; 
0x00056b28: push eax; sbb al, byte ptr [eax]; add byte ptr [ebx - 0x362743], al; call dword ptr [eax]; 
0x000272b0: push eax; sbb dword ptr [edi], ecx; mov bh, 0x97; cmp byte ptr [eax - 7], dh; jmp dword ptr [esi - 0x77]; 
0x00127161: push eax; stc; call dword ptr [eax + 0x55]; 
0x001271e1: push eax; stc; call dword ptr [ecx + 0x51]; 
0x0008dfab: push eax; stc; jmp dword ptr [esi - 0x70]; 
0x001749ec: push eax; sub al, 0x8b; add al, byte ptr [ebp - 0x7ce58b40]; in al, dx; or al, 0x83; ret 0x5208; 
0x00036f2a: push eax; sub byte ptr [ebx - 0x7bf0d3c0], cl; ret; 
0x00179920: push eax; sub byte ptr [ecx - 0x74d7dbac], cl; push eax; or byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x00177087: push eax; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x00092e9d: push eax; test cl, bh; call dword ptr [eax - 0x18]; 
0x0005bb1c: push eax; test ebp, edi; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x000c09dd: push eax; xchg edx, eax; or al, 0; add ecx, 0x10c693; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00140fb3: push ebp; adc dword ptr [ecx], edi; ret 0x460f; 
0x0018357f: push ebp; add al, 0; add byte ptr [ebx - 0x4c72f714], al; mov ah, byte ptr [esi - 7]; call dword ptr [esi + 0x57]; 
0x00195fcb: push ebp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000648b4: push ebp; add al, 0xc6; add byte ptr [0xfffb62e9], ah; jmp dword ptr [esi - 0x70]; 
0x0004a22f: push ebp; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + 0x2f], esi; stc; call dword ptr [eax - 0x18]; 
0x001999c4: push ebp; add bh, bh; inc dword ptr [ecx + 0x420e8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00122e2b: push ebp; add byte ptr [eax], al; add esp, 0x10; add esp, 0xc; ret; 
0x00122dd6: push ebp; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000af977: push ebp; add byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x00091888: push ebp; add byte ptr [edi], cl; xchg esp, eax; ret; 
0x00157300: push ebp; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; or byte ptr [ecx + 0x5e], 0xf9; call dword ptr [eax - 0x18]; 
0x000b78f7: push ebp; add eax, dword ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x0010a879: push ebp; and al, 0x8b; inc ebp; sub al, 0x39; sal byte ptr [esi + ecx - 0x77], 1; ret 0xf189; 
0x0010a88e: push ebp; and al, 0x8b; inc ebp; xor byte ptr [ecx], bh; sal byte ptr [ebx + ecx - 0x77], 1; ret 0xf189; 
0x0016ccf3: push ebp; arpl cx, di; call dword ptr [eax + 0x6a]; 
0x0016cdf3: push ebp; arpl cx, di; call dword ptr [eax - 0x18]; 
0x0016cd47: push ebp; arpl cx, di; jmp dword ptr [ebp - 0x75]; 
0x00164207: push ebp; bnd call dword ptr [eax - 0x18]; 
0x0016ff44: push ebp; call 0x114720; mov esi, dword ptr [esp + 0x48]; mov eax, dword ptr [esi + 0x20]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0017708b: push ebp; call dword ptr [eax + 0x10]; 
0x00087966: push ebp; call dword ptr [eax + 0x1c]; 
0x0008a3b0: push ebp; call dword ptr [esi + 0x20]; 
0x0007b8e2: push ebp; call dword ptr [esi + 0x40]; 
0x00171091: push ebp; call dword ptr [esi]; 
0x001770a2: push ebp; call eax; 
0x00154f65: push ebp; call edi; 
0x000c43d3: push ebp; call esi; 
0x00195fc4: push ebp; cmp al, 0xff; inc dword ptr [ecx + 0x455e8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000c31ef: push ebp; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000957cf: push ebp; inc eax; stc; call dword ptr [eax - 0x73]; 
0x001763a7: push ebp; jns 0x1763a6; jmp dword ptr [esi - 0x70]; 
0x00183da7: push ebp; lahf; sti; jmp dword ptr [esi - 0x70]; 
0x0013c28e: push ebp; les edx, ptr [ecx - 0x18]; mov ch, byte ptr [ebx - 8]; dec dword ptr [ebx - 0x3b7c3bab]; adc byte ptr [ebp - 0x7ce4e884], cl; ret; 
0x0005dcbf: push ebp; mov al, 0x89; inc ebp; mov eax, 0xfff87ee9; call dword ptr [eax + 0x52]; 
0x000d2f05: push ebp; mov al, 0x8b; inc ebp; aam 1; ret 0x5389; 
0x0013a2c6: push ebp; mov al, 0x8d; mov bl, 0x1c; push esi; stc; call dword ptr [eax + 0x50]; 
0x000d313f: push ebp; mov eax, 0x1d4458b; ret 0x1689; 
0x000829f0: push ebp; mov eax, 0x8334828d; stc; call dword ptr [eax - 0x73]; 
0x0016c494: push ebp; mov eax, 0x8910c483; ret; 
0x0013c4bd: push ebp; mov eax, 0xa9a8828d; stc; call dword ptr [eax - 0x73]; 
0x00175e95: push ebp; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x10]; 
0x001219f2: push ebp; mov ebx, dword ptr [edi]; mov ebp, dword ptr [edi + 8]; mov edi, dword ptr [edi + 4]; call dword ptr gs:[0x10]; 
0x0003570c: push ebp; mov esp, 0x2e3f808d; stc; call dword ptr [eax - 0x18]; 
0x00055b5e: push ebp; or al, 0xf7; ret 0; 
0x00124725: push ebp; pop edi; stc; call dword ptr [eax + 0x6a]; 
0x00154b6e: push ebp; push 0; push edi; push ebx; call edx; 
0x001710be: push ebp; push dword ptr [esi + 0xc]; push edi; call dword ptr [eax + 0x10]; 
0x0017107b: push ebp; push dword ptr [esi + 0xc]; push edi; call dword ptr [eax + 8]; 
0x000db72d: push ebp; push dword ptr [esp + 0x30]; mov eax, dword ptr [esp + 0x64]; call eax; 
0x00025d4e: push ebp; push dword ptr [esp + 0x30]; push dword ptr [ebx + 4]; call edi; 
0x0016ef7a: push ebp; push eax; call dword ptr [ecx + 8]; 
0x00156309: push ebp; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0011440f: push ebp; push ecx; mov eax, dword ptr [esp + 0x18]; call eax; 
0x00126f2f: push ebp; push ecx; stc; call dword ptr [eax + 0x55]; 
0x00170908: push ebp; push edi; call dword ptr [eax + 0x18]; 
0x00087ae2: push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x0007e2f5: push ebp; push edi; push ebx; call dword ptr [esi + 0x24]; 
0x00087b8f: push ebp; push edi; push ebx; call dword ptr [esi + 0x3c]; 
0x00089cd1: push ebp; push edi; push ebx; call dword ptr [esi + 0x40]; 
0x0018bd78: push ebp; push edi; push esi; call dword ptr [ebx + 0x40]; 
0x001783c0: push ebp; push edi; push esi; push eax; call dword ptr [edx]; 
0x0007d4f5: push ebp; push esi; call dword ptr [eax + 0x1c]; 
0x0008a144: push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x0017b84a: push ebp; push esi; call edi; 
0x00179045: push ebp; push esi; push 3; push edi; call dword ptr [eax]; 
0x001686a7: push ebp; push esi; std; jmp dword ptr [esi - 0x70]; 
0x00132ac1: push ebp; ret; 
0x00030e20: push ebp; ror byte ptr [edi], 0x94; ret 0x3a3c; 
0x00197fc4: push ebp; sbb al, 0xff; inc dword ptr [ecx + 0x43868c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001341ce: push ebp; stc; call dword ptr [eax + 0x57]; 
0x0013423c: push ebp; stc; call dword ptr [eax + 0x6a]; 
0x00138e76: push ebp; stc; call dword ptr [eax - 0x18]; 
0x00136aae: push ebp; stc; call dword ptr [eax - 1]; 
0x0013734b: push ebp; stc; call dword ptr [ebp - 1]; 
0x00136b6e: push ebp; stc; call dword ptr [edx + 0x50]; 
0x00198e5d: push ebp; sub al, 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014e08f: push ebp; sub byte ptr [ecx - 0x4436b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000f04ea: push ebx; adc al, 0x8d; or byte ptr [ebp + 0x30], 0xf9; call dword ptr [eax - 0x77]; 
0x00171646: push ebx; adc bl, ch; ret; 
0x000a6e59: push ebx; adc byte ptr [ecx + 0x5e5b0443], cl; pop edi; ret; 
0x000892dd: push ebx; adc byte ptr [ecx], bh; ret 0x2773; 
0x00034886: push ebx; adc eax, 0xa58b0500; and byte ptr [eax], al; mov eax, dword ptr [eax + 0x94]; add eax, dword ptr gs:[0]; ret; 
0x00034866: push ebx; adc eax, 0xa5ab0500; and byte ptr [eax], al; mov eax, dword ptr [eax + 0x1d0]; add eax, dword ptr gs:[0]; ret; 
0x00034846: push ebx; adc eax, 0xa5cb0500; and byte ptr [eax], al; mov eax, dword ptr [eax + 0x9c]; add eax, dword ptr gs:[0]; ret; 
0x00071149: push ebx; add al, 0; add byte ptr [ecx], al; ret; 
0x001961b4: push ebx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001878c3: push ebx; add al, 0x29; ret 0xea39; 
0x00086bc4: push ebx; add al, 0x5b; pop esi; ret; 
0x000fba59: push ebx; add al, 0x74; xor dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x00085c7b: push ebx; add al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00136def: push ebx; add al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x000c6a61: push ebx; add al, 0x83; ret; 
0x0005ba3f: push ebx; add al, 0x88; or byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0010d751: push ebx; add al, 0x8b; inc ebx; or byte ptr [ecx], bh; ret 0x840f; 
0x000816b1: push ebx; add al, 0xc1; cli; add ch, bl; ljmp 0x5bff:0xffffffb8; ret; 
0x00120ff1: push ebx; add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x00040622: push ebx; add cl, byte ptr [ecx - 0x7c3fcef0]; les ecx, ptr [eax]; pop ebx; ret; 
0x0014cf48: push ebx; add dword ptr [ecx - 0x72e3dbbc], ecx; inc ebx; add dword ptr [eax - 0x7bf0c406], eax; ret 1; 
0x00093fed: push ebx; add eax, dword ptr [eax]; add byte ptr [ebp - 0x6c09579], cl; call dword ptr [eax - 0x73]; 
0x001866cd: push ebx; and al, 0x89; ret; 
0x0013b10e: push ebx; and byte ptr [ebx - 0x137ce785], cl; add al, 0x83; ret; 
0x0015a236: push ebx; call 0x186f70; add esp, 0x10; mov eax, ebx; call eax; 
0x001635c6: push ebx; call 0x186f70; mov dword ptr [esp], ebp; call ebx; 
0x0002f4f4: push ebx; call 0x186f70; mov dword ptr [esp], esi; call ebx; 
0x00142444: push ebx; call 0x61430; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x0016f611: push ebx; call dword ptr [eax + 0x10]; 
0x0016fb2b: push ebx; call dword ptr [eax + 0x14]; 
0x00175455: push ebx; call dword ptr [eax + 0x18]; 
0x0017c54b: push ebx; call dword ptr [eax + 0x20]; 
0x00088b67: push ebx; call dword ptr [eax + 0x24]; 
0x00081093: push ebx; call dword ptr [eax + 0xc]; 
0x0017145f: push ebx; call dword ptr [eax + 4]; 
0x0016f601: push ebx; call dword ptr [eax]; 
0x0016f72a: push ebx; call dword ptr [eax]; mov eax, dword ptr [ebx + 4]; add esp, 0x14; push ebx; call dword ptr [eax + 0x10]; 
0x0007d575: push ebx; call dword ptr [ebp + 0x1c]; 
0x00089ba4: push ebx; call dword ptr [ebp + 0x40]; 
0x0008bea2: push ebx; call dword ptr [ebp + 0xc]; 
0x0008bcbc: push ebx; call dword ptr [edi + 0x18]; 
0x0018b4f1: push ebx; call dword ptr [edi + 0x24]; 
0x00082f5f: push ebx; call dword ptr [edi + 0x40]; 
0x00088271: push ebx; call dword ptr [edi + 0x44]; 
0x0008c265: push ebx; call dword ptr [edi + 0xc]; 
0x0005da02: push ebx; call dword ptr [edi - 0x77]; 
0x00080d76: push ebx; call dword ptr [esi + 0x10]; 
0x00139cb4: push ebx; call dword ptr [esi + 0x14]; 
0x000815b1: push ebx; call dword ptr [esi + 0x18]; 
0x0007e2f7: push ebx; call dword ptr [esi + 0x24]; 
0x000876fa: push ebx; call dword ptr [esi + 0x30]; 
0x00087b91: push ebx; call dword ptr [esi + 0x3c]; 
0x00087c0b: push ebx; call dword ptr [esi + 0x40]; 
0x0008ae81: push ebx; call dword ptr [esi + 0xc]; 
0x0012fb1b: push ebx; call dword ptr gs:[0x10]; 
0x0007a2cb: push ebx; call eax; 
0x0012c56d: push ebx; call edx; 
0x0012c515: push ebx; call esi; 
0x0007e619: push ebx; cli; jmp dword ptr [esi - 0x70]; 
0x000a93e9: push ebx; cmc; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x000b9e7f: push ebx; das; adc dword ptr [eax], eax; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00126f4a: push ebx; dec ebx; stc; call dword ptr [eax + 0x55]; 
0x0017691e: push ebx; dec esp; push edx; call eax; 
0x000fb1f7: push ebx; inc esi; pop eax; mov edx, 0x20; cmovne eax, edx; ret; 
0x00168065: push ebx; int1; call dword ptr [eax - 0x73]; 
0x00193a5f: push ebx; jns 0x193a66; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0002a2db: push ebx; lea eax, [esp + 0x70]; push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x54]; call esi; 
0x00052f01: push ebx; lea edx, [eax + 0x6c]; lea ecx, [ecx + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0004025f: push ebx; lea edx, [eax + 0x6c]; xor ecx, ecx; mov ebx, 0; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x00179eab: push ebx; lea edx, [esp + 0x38]; push edx; call dword ptr [eax + 0xc]; 
0x0011fccf: push ebx; mov eax, 0x14b; mov ebx, dword ptr [esp + 8]; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x0011463f: push ebx; mov eax, 0x21; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000612bf: push ebx; mov eax, 0x26; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011f5ef: push ebx; mov eax, 0x27; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001208df: push ebx; mov eax, 0x28; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0010e384: push ebx; mov eax, 0x2b; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001238df: push ebx; mov eax, 0x2d; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0013027f: push ebx; mov eax, 0x34; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00114aaf: push ebx; mov eax, 0x3f; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00122fef: push ebx; mov eax, 0x4c; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000dbdff: push ebx; mov eax, 0x4f; mov ecx, dword ptr [esp + 8]; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x00120fef: push ebx; mov eax, 0x53; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0012c45f: push ebx; mov eax, 0x5c; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00124e4f: push ebx; mov eax, 0x5d; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0012366f: push ebx; mov eax, 0x60; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001214ff: push ebx; mov eax, 0xa; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0003c98f: push ebx; mov eax, 0xb0; mov ebx, dword ptr [esp + 8]; mov ecx, 8; call dword ptr gs:[0x10]; 
0x00122f9f: push ebx; mov eax, 0xbf; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0013053f: push ebx; mov eax, 0xc3; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012f17f: push ebx; mov eax, 0xc4; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012eeff: push ebx; mov eax, 0xc5; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x001146af: push ebx; mov eax, 0xf; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0012e85f: push ebx; mov eax, 0xfe; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0009f17f: push ebx; mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011f0cf: push ebx; mov eax, 9; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0005f7d7: push ebx; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0018b2ad: push ebx; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x40]; 
0x00136ff2: push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x00140384: push ebx; mov eax, dword ptr [esp + 8]; mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; 
0x000ea078: push ebx; mov eax, dword ptr gs:[8]; mov ebx, 0x1200011; lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x0013367d: push ebx; mov ebx, 0x16; mov edi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00192a89: push ebx; mov ebx, 0x18; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x001132c3: push ebx; mov ebx, 0x8b530012; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00132acb: push ebx; mov ebx, 0xd; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0012ad2a: push ebx; mov ebx, 0xfee1dead; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000a072e: push ebx; mov ebx, 1; sub esp, 0x28; mov edi, dword ptr [esp + 0x3c]; lea ecx, [ebp - 0x722d4]; call dword ptr gs:[0x10]; 
0x00132fb9: push ebx; mov ebx, 2; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00098162: push ebx; mov ebx, dword ptr [esp + 0x10]; mov dword ptr [ebx], 0; call dword ptr gs:[0x10]; 
0x001132c7: push ebx; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0008f311: push ebx; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009f805: push ebx; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012fb5b: push ebx; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00061316: push ebx; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0011604a: push ebx; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00130d70: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00130840: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x0011f630: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x00121540: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x00121030: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x00114af0: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x001309e0: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1ac; call dword ptr gs:[0x10]; 
0x00130750: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b0; call dword ptr gs:[0x10]; 
0x001307b0: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b1; call dword ptr gs:[0x10]; 
0x001147e0: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x00130a40: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b6; call dword ptr gs:[0x10]; 
0x001236c0: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x0012d970: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x001308c0: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x00130580: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x00129560: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x00130660: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x00130690: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x0010c180: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x001309b0: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000eab50: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x0011f090: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x00115110: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000f0ac0: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000f0a90: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x001146f0: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x00128830: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x00128750: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x00128450: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x00128480: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x00124920: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x000b9efb: push ebx; movq qword ptr [edi + 0x30], mm7; pop edi; pop esi; pop ebx; ret; 
0x00173ce9: push ebx; or al, 0x5b; mov eax, 1; pop esi; pop edi; ret; 
0x00185275: push ebx; or al, 0x5b; ret; 
0x00136e8f: push ebx; or al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0003b1fb: push ebx; or al, 0x83; les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret 4; 
0x000a6bd0: push ebx; or al, 0x8b; adc eax, dword ptr [ecx]; ret 0x1089; 
0x0008ddc0: push ebx; or byte ptr [ecx + 0x4c48302], cl; pop ebx; pop esi; ret; 
0x00085cae: push ebx; or byte ptr [ecx - 0x3b7cf3b0], cl; add al, 0x5b; pop esi; ret; 
0x0003a32c: push ebx; or byte ptr [ecx - 0x50f0fbb9], cl; ret 0x7c8b; 
0x000a144a: push ebx; or dh, dh; ret 0xf0f; 
0x000fb18f: push ebx; out dx, eax; add byte ptr [eax], al; mov edx, 0x20; cmovne eax, edx; ret; 
0x0013b721: push ebx; push 0; push 0x1000001; call eax; 
0x0013b8bf: push ebx; push 0; push 0x1000002; call edx; 
0x0013b364: push ebx; push 0; push 0x1000005; call edx; 
0x001374a0: push ebx; push 0x2000001; call dword ptr [ebp + 0x14]; 
0x0007e517: push ebx; push dword ptr [ebp - 0x1c]; push esi; call dword ptr [eax + 0x2c]; 
0x0013ac7f: push ebx; push dword ptr [ebx + 0x30]; call eax; 
0x000c32ac: push ebx; push dword ptr [edi]; call esi; 
0x0007c0e8: push ebx; push dword ptr [esp + 0x1c]; push dword ptr [esi + 0x98]; call eax; 
0x000296c3: push ebx; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00029134: push ebx; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; call edi; 
0x00177c3c: push ebx; push eax; call dword ptr [edx + 8]; 
0x0007ea32: push ebx; push eax; cli; jmp dword ptr [esi - 0x70]; 
0x001222fb: push ebx; push eax; pop ebx; pop esi; pop edi; ret; 
0x00156308: push ebx; push ebp; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0018c003: push ebx; push ecx; push esi; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x40]; 
0x00079488: push ebx; push edi; push eax; call dword ptr [ebp + 0x1c]; 
0x0005f732: push ebx; push edi; push esi; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0017c154: push ebx; push esi; call dword ptr [eax + 4]; 
0x00081518: push ebx; push esi; call dword ptr [edi + 0x18]; 
0x00084001: push ebx; push esi; call eax; 
0x001628b9: push ebx; pushal; stc; call dword ptr [eax + 0x55]; 
0x001632bd: push ebx; pushal; stc; call dword ptr [eax - 1]; 
0x00162965: push ebx; pushal; stc; call dword ptr [edx + 0x50]; 
0x0013b60d: push ebx; sbb al, 0x83; in al, dx; add al, 0x83; ret; 
0x000fb2e7: push ebx; setne al; ret; 
0x001272cd: push ebx; stc; call dword ptr [eax + 0x55]; 
0x0012d25f: push ebx; stc; call dword ptr [eax + 0x56]; 
0x0012bf40: push ebx; stc; call dword ptr [eax + 0x57]; 
0x0012c156: push ebx; stc; call dword ptr [eax + 0x68]; 
0x00060954: push ebx; stc; call dword ptr [eax + 0x6a]; 
0x0012a7cc: push ebx; stc; call dword ptr [eax - 1]; 
0x0012bbdc: push ebx; stc; call dword ptr [ebx + 0x57]; 
0x0012bd3f: push ebx; stc; call dword ptr [edi + 0x50]; 
0x0012900d: push ebx; stc; call dword ptr [edx + 0x50]; 
0x0008dd3d: push ebx; stc; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x00176e34: push ebx; sub byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x000a6d13: push ebx; sub dh, dh; ret 0x7502; 
0x0019044a: push ebx; sub esp, 4; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0007e842: push ebx; xor al, 0x89; ret 0xc483; 
0x0013b7fd: push ebx; xor byte ptr [ecx + 0x4d89847d], cl; mov byte ptr [ecx - 0x836b], cl; call dword ptr [esi + 0x6a]; 
0x00123168: push ebx; xor ebx, ebx; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00123108: push ebx; xor ebx, ebx; mov ecx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00042224: push ebx; xor edx, edx; lea ecx, [eax + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0008f2e4: push ebx; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00086be9: push ecx; adc al, 0xeb; ret; 
0x0015bed5: push ecx; adc byte ptr [edx + 8], dh; setne al; movzx eax, al; neg eax; ret; 
0x0017145c: push ecx; add al, 0x52; push ebx; call dword ptr [eax + 4]; 
0x0017149b: push ecx; add al, 0x52; push ebx; call dword ptr [eax]; 
0x000b36c3: push ecx; add al, 0x5b; ret; 
0x00079a28: push ecx; add al, 0x83; les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x0005ceeb: push ecx; add al, byte ptr [eax]; add dh, dh; ret 0xf10; 
0x0002628a: push ecx; call 0x186f70; mov dword ptr [esp], ebx; mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x0007f543: push ecx; call 0x81150; add esp, 0x1c; ret; 
0x0017be5b: push ecx; call dword ptr [eax + 4]; 
0x0017be93: push ecx; call dword ptr [eax]; 
0x001211cb: push ecx; call dword ptr [edx + 0x56]; 
0x0008e16e: push ecx; call eax; 
0x0008e568: push ecx; call edx; 
0x0007e8e3: push ecx; cli; jmp dword ptr [esi - 0x70]; 
0x0010e408: push ecx; cmp eax, 0xfffff001; jae 0x24f50; ret; 
0x0010e3fb: push ecx; imul esi, ecx, -1; ret; 
0x00165775: push ecx; int1; call dword ptr [eax - 0x73]; 
0x0016583e: push ecx; int1; call dword ptr [eax - 0x73]; sbb dword ptr [eax + 0x61], -7; call dword ptr [eax - 0x18]; ret 0xfef2; 
0x000c6bb3: push ecx; lea eax, [esp + 0x64]; mov dword ptr [esp + 0x34], ecx; push eax; push ebp; call esi; 
0x000c4b48: push ecx; lea ecx, [esp + 0x44]; push ecx; push dword ptr [edi + 8]; call ebx; 
0x000c3dd9: push ecx; lea ecx, [esp + 0x54]; push ecx; mov eax, dword ptr [esp + 0x40]; push dword ptr [eax]; call edi; 
0x0012c34e: push ecx; lea esp, [ebp - 8]; pop ebx; pop esi; pop ebp; ret; 
0x000e76df: push ecx; mov dword ptr [esp + 0x18], ecx; push ebx; call eax; 
0x00114410: push ecx; mov eax, dword ptr [esp + 0x18]; call eax; 
0x0008df82: push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x000c3dde: push ecx; mov eax, dword ptr [esp + 0x40]; push dword ptr [eax]; call edi; 
0x000ba9dc: push ecx; or al, 0; add ecx, 0x1124c0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0016ead2: push ecx; or al, 0x83; les edx, ptr [eax]; add esp, 0xc; ret; 
0x00176998: push ecx; or al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; ret; 
0x0005e7e2: push ecx; or al, 0xf6; ret 0xf01; 
0x0014d6e3: push ecx; or bl, byte ptr [ebx + 0x5e]; pop edi; ret; 
0x00180c6e: push ecx; or byte ptr [ecx], bh; ret 0x3c75; 
0x0014841c: push ecx; pop edx; stc; call dword ptr [eax + 0x53]; 
0x000b3725: push ecx; pop es; pop ebx; ret; 
0x001782ac: push ecx; push 0xd; push eax; call dword ptr [edx + 0x14]; 
0x0012c56a: push ecx; push 3; push ebx; call edx; 
0x001781da: push ecx; push 4; push eax; call dword ptr [edx + 0x14]; 
0x0016fc61: push ecx; push 5; push ebx; call dword ptr [eax]; 
0x001781ed: push ecx; push 6; push eax; call dword ptr [edx + 0x14]; 
0x0013bb7a: push ecx; push dword ptr [ebp - 0xc0]; push dword ptr [ebp - 0x11c]; call edx; 
0x0013b9e0: push ecx; push dword ptr [ebp - 0xc0]; push ebx; call eax; 
0x000a6d85: push ecx; push dword ptr [ebx + 0x24]; call eax; 
0x000c4ab8: push ecx; push dword ptr [edi + 8]; call ebx; 
0x0007c14a: push ecx; push dword ptr [edx + 0x98]; call eax; 
0x0008dffc: push ecx; push dword ptr [esp + 0x3c]; call eax; 
0x0017415e: push ecx; push dword ptr [esp + 0x40]; push ebp; call esi; 
0x0003f263: push ecx; push dword ptr [esp + 0x4c]; call eax; 
0x001798b9: push ecx; push eax; call dword ptr [edx + 0xc]; 
0x0017647c: push ecx; push eax; call dword ptr [edx + 8]; 
0x00089776: push ecx; push eax; push esi; call edx; 
0x0007d574: push ecx; push ebx; call dword ptr [ebp + 0x1c]; 
0x0017415d: push ecx; push ecx; push dword ptr [esp + 0x40]; push ebp; call esi; 
0x00179066: push ecx; push edi; call dword ptr [eax + 8]; 
0x0008e344: push ecx; push edi; call eax; 
0x0008e0e2: push ecx; push edi; push eax; push edx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0008d774: push ecx; push edx; call 0x184e00; add esp, 0x1c; ret; 
0x0017c7ea: push ecx; push edx; call dword ptr [eax + 0x20]; 
0x0017c7bc: push ecx; push edx; call dword ptr [eax + 0x24]; 
0x0017bd0c: push ecx; push edx; call dword ptr [eax + 4]; 
0x0017b97a: push ecx; push edx; call dword ptr [eax]; 
0x001717ec: push ecx; push edx; mov dword ptr [esp + 0x14], edx; push dword ptr [esi]; call dword ptr [esi + 0x20]; 
0x000ded19: push ecx; push edx; push eax; call 0xda950; add esp, 0x1c; ret; 
0x00124a6b: push ecx; push es; add byte ptr [ecx + 0x11a3a6c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x0017c07e: push ecx; push esi; call dword ptr [edx + 0xc]; 
0x0017c0b7: push ecx; push esi; call dword ptr [edx + 8]; 
0x0018c004: push ecx; push esi; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x40]; 
0x0016a25b: push ecx; ret; 
0x0008dd0c: push ecx; sbb byte ptr [ecx + 0x4c48310], cl; pop ebx; pop esi; ret; 
0x00126f30: push ecx; stc; call dword ptr [eax + 0x55]; 
0x001271fb: push ecx; stc; call dword ptr [edx + 0x52]; 
0x000348ed: push ecx; sub al, 0x81; ret 0x200; 
0x0003252c: push ecx; sub al, 0xf9; call dword ptr [eax - 0x18]; 
0x0012c50e: push ecx; sub esp, 4; push edi; push 0; push ebx; call esi; 
0x000607e3: push ecx; xor bh, cl; call dword ptr [eax + 0x6a]; 
0x000b9b62: push edi; adc al, 0x5f; pop esi; pop ebx; ret; 
0x000bb2c3: push edi; adc byte ptr [eax + 0x478d184f], cl; sbb dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x000b9be3: push edi; adc byte ptr [eax + 0x5e5f184f], cl; pop ebx; ret; 
0x000b9ce3: push edi; adc byte ptr [eax + 0x5e5f204f], cl; pop ebx; ret; 
0x0008fcb9: push edi; adc byte ptr [ebp + 0x313974d2], al; idiv byte ptr [eax + 0xf0]; call dword ptr gs:[0x10]; 
0x000bb2a0: push edi; adc byte ptr [ebp + 0x5e5f1847], cl; pop ebx; ret; 
0x000bb3b0: push edi; adc byte ptr [ebp + 0x5e5f2047], cl; pop ebx; ret; 
0x000bb333: push edi; adc byte ptr [ecx + 0x478d184f], cl; sbb al, 0x5f; pop esi; pop ebx; ret; 
0x000b9c23: push edi; adc byte ptr [ecx + 0x5e5f174f], cl; pop ebx; ret; 
0x000b9c43: push edi; adc byte ptr [ecx + 0x5e5f184f], cl; pop ebx; ret; 
0x000b9bc0: push edi; adc byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000bb2e4: push edi; adc byte ptr [esi - 0x77], ah; dec edi; sbb byte ptr [ebp + 0x5e5f1a47], cl; pop ebx; ret; 
0x000b9c04: push edi; adc byte ptr [esi - 0x77], ah; dec edi; sbb byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00195dc4: push edi; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000b99a8: push edi; add al, 0x5f; pop esi; pop ebx; ret; 
0x0013ed73: push edi; add al, 0x89; dec edi; or byte ptr [ebx + 0x5e], bl; pop edi; ret 4; 
0x0006f45a: push edi; add al, 0x8b; inc edi; or byte ptr [ecx], bh; ret 0x840f; 
0x0015decf: push edi; add al, 0xf7; ret 0xfffd; 
0x0008c13d: push edi; add al, byte ptr [eax]; add byte ptr [ecx], bh; ret; 
0x000b998a: push edi; add bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x0015d08a: push edi; add byte ptr [eax - 0x73], dl; and dword ptr [edi + 0x5f], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00153e15: push edi; add ch, dh; jmp dword ptr [esi - 0x70]; 
0x000bb02a: push edi; add cl, byte ptr [ebp + 0x5e5f0347]; pop ebx; ret; 
0x0009da05: push edi; add dword ptr [ecx], edi; ret 0x830f; 
0x000b99c8: push edi; add ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x000bb098: push edi; add ecx, dword ptr [ebp + 0x5e5f0747]; pop ebx; ret; 
0x00079f96: push edi; add ecx, ebp; ret; 
0x0011efcd: push edi; add esp, 0x1010; pop ebx; pop esi; pop edi; ret; 
0x0002707a: push edi; call 0x186f70; mov dword ptr [esp], ebx; call edi; 
0x000a0753: push edi; call 0x231a0; mov eax, dword ptr [esp + 0x1c]; mov dword ptr [esp], eax; call esi; 
0x0009dde5: push edi; call 0x3d090; mov edx, dword ptr [esp + 0x1c]; mov eax, 0xaf; mov ecx, edi; call dword ptr gs:[0x10]; 
0x001710c2: push edi; call dword ptr [eax + 0x10]; 
0x001775b7: push edi; call dword ptr [eax + 0x14]; 
0x00170811: push edi; call dword ptr [eax + 0x18]; 
0x0007f9f7: push edi; call dword ptr [eax + 0x1c]; 
0x001775ce: push edi; call dword ptr [eax + 4]; 
0x0017107f: push edi; call dword ptr [eax + 8]; 
0x00179049: push edi; call dword ptr [eax]; 
0x00082574: push edi; call dword ptr [ebx + 0x38]; 
0x001707a4: push edi; call dword ptr [ecx + 0x18]; 
0x00170898: push edi; call dword ptr [edx + 0x18]; 
0x0008e345: push edi; call eax; 
0x000b9d21: push edi; call ptr [edi + 0x5e]; pop ebx; ret; 
0x000de8ac: push edi; cmc; dec dword ptr [ebp - 0x661977d]; call dword ptr [eax - 0x73]; 
0x000de8ea: push edi; cmc; jmp dword ptr [esi - 0x70]; 
0x0008f745: push edi; cmp bh, cl; jmp dword ptr [ebp - 0x39]; 
0x000a28e3: push edi; inc edx; stc; call dword ptr [eax - 0x18]; 
0x0013e155: push edi; ja 0x13e14c; jmp dword ptr [esi - 0x70]; 
0x000bb390: push edi; jge 0x5e6ad2de; pop ebx; ret; 
0x0013e125: push edi; jne 0x13e11c; jmp dword ptr [esi - 0x70]; 
0x000b9ca0: push edi; maxps xmm3, xmmword ptr [esi + 0x5b]; ret; 
0x000410a3: push edi; mov eax, dword ptr [esp + 0x10]; call eax; 
0x001775fc: push edi; mov eax, dword ptr [esp + 0x28]; call eax; 
0x00175d3b: push edi; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x14]; 
0x00170277: push edi; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x0016ff9b: push edi; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x00059c15: push edi; movsb byte ptr es:[edi], byte ptr [esi]; std; dec dword ptr [ebx - 0x36474b]; dec dword ptr [ebp - 0x687777a]; call dword ptr [eax - 0x73]; 
0x0003afa4: push edi; or al, 0x83; les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret 4; 
0x0005c188: push edi; or al, 0xf6; ret 0x7401; 
0x0005ee78: push edi; or al, 0xf6; ret 0xf40; 
0x000bb0cc: push edi; or byte ptr [ebp + 0x5e5f0947], cl; pop ebx; ret; 
0x000bb0ee: push edi; or byte ptr [ebp + 0x5e5f0a47], cl; pop ebx; ret; 
0x000bb12c: push edi; or byte ptr [ebp + 0x5e5f0c47], cl; pop ebx; ret; 
0x0008256b: push edi; or byte ptr [ecx - 0x2fd643bb], cl; push eax; push edx; push edi; call dword ptr [ebx + 0x38]; 
0x000b99ec: push edi; or byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00089d78: push edi; or dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x000bb350: push edi; or eax, 0x5f1d478d; pop esi; pop ebx; ret; 
0x000b9a2c: push edi; pop es; pop edi; pop esi; pop ebx; ret; 
0x0012c512: push edi; push 0; push ebx; call esi; 
0x00138445: push edi; push 0x2000003; call dword ptr [ebx + 0x14]; 
0x0012c526: push edi; push 1; push ebx; call esi; 
0x0012c539: push edi; push 2; push ebx; call esi; 
0x000b9c80: push edi; push cs; pop edi; pop esi; pop ebx; ret; 
0x0007f8fb: push edi; push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x0007c448: push edi; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x00171cd1: push edi; push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x000c46f5: push edi; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x000285df: push edi; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00079489: push edi; push eax; call dword ptr [ebp + 0x1c]; 
0x00174110: push edi; push eax; call dword ptr [ecx + 8]; 
0x001775e5: push edi; push eax; call dword ptr [edx + 4]; 
0x0008e0e3: push edi; push eax; push edx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x001219f1: push edi; push ebp; mov ebx, dword ptr [edi]; mov ebp, dword ptr [edi + 8]; mov edi, dword ptr [edi + 4]; call dword ptr gs:[0x10]; 
0x0016fb2a: push edi; push ebx; call dword ptr [eax + 0x14]; 
0x0007e2f6: push edi; push ebx; call dword ptr [esi + 0x24]; 
0x00087b90: push edi; push ebx; call dword ptr [esi + 0x3c]; 
0x00089cd2: push edi; push ebx; call dword ptr [esi + 0x40]; 
0x00154b71: push edi; push ebx; call edx; 
0x0005f7d6: push edi; push ebx; mov eax, dword ptr [esp + 0x14]; call eax; 
0x00041740: push edi; push edx; mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 0x24], edx; call eax; 
0x0008df80: push edi; push edx; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0018bd79: push edi; push esi; call dword ptr [ebx + 0x40]; 
0x0005f733: push edi; push esi; mov eax, dword ptr [esp + 0x14]; call eax; 
0x001702ae: push edi; push esi; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x001783c1: push edi; push esi; push eax; call dword ptr [edx]; 
0x00089ba2: push edi; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x00175451: push edi; push esp; push 8; push ebx; call dword ptr [eax + 0x18]; 
0x00095350: push edi; ret 0; 
0x0010e2f2: push edi; ret 0x67; 
0x0014c862: push edi; stc; call dword ptr [eax + 0x52]; 
0x0014c8a4: push edi; stc; call dword ptr [eax + 0x53]; 
0x0013f24c: push edi; stc; call dword ptr [eax + 0x6a]; 
0x0013c806: push edi; stc; call dword ptr [eax - 0x18]; 
0x00154315: push edi; std; in eax, dx; jmp dword ptr [esi - 0x70]; 
0x0002fdf8: push edi; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x0008b428: push edi; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x000fb26a: push edi; xor eax, eax; cmp edx, 0x1cd1; setne al; ret; 
0x00178146: push edx; adc byte ptr [ebx + 0x4508b03], cl; mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x001aab68: push edx; adc byte ptr [ecx], ch; ret 0xe183; 
0x001a6506: push edx; adc byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x5073; 
0x00196304: push edx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0008327e: push edx; add al, 0x8b; jl 0x832a7; or byte ptr [ebx + 0x290c246c], cl; ret 0xfac1; 
0x0002881a: push edx; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; and edx, 0x2a; stc; call dword ptr [eax - 0x18]; 
0x00029b08: push edx; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dl, ah; sub bh, cl; call dword ptr [eax - 0x18]; 
0x00028f2e: push edx; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg edx, esp; sub bh, cl; call dword ptr [eax - 0x18]; 
0x000b35aa: push edx; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x0002ab5b: push edx; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ebx; jno 0x2ab5e; call dword ptr [eax - 0x18]; 
0x0002b75c: push edx; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ebx; jno 0x2b75f; call dword ptr [eax - 0x18]; 
0x0002cdfb: push edx; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ebx; jno 0x2cdfe; call dword ptr [eax - 0x18]; 
0x0002da4b: push edx; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ebx; jno 0x2da4e; call dword ptr [eax - 0x18]; 
0x0002e1dd: push edx; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ebx; jno 0x2e1e0; call dword ptr [eax - 0x18]; 
0x0002edb1: push edx; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ebx; jno 0x2edb4; call dword ptr [eax - 0x18]; 
0x0004041d: push edx; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0017baaa: push edx; and bh, ah; jmp dword ptr [esi - 0x70]; 
0x001a651b: push edx; and byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3e73; 
0x0008d775: push edx; call 0x184e00; add esp, 0x1c; ret; 
0x00026934: push edx; call 0x186f70; mov dword ptr [esp], ebx; mov edx, dword ptr [ebp - 0x44]; call edx; 
0x0009a6df: push edx; call 0x94be0; add esp, 0x20; add esp, 0xc; ret; 
0x000971da: push edx; call 0x968e0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00178a75: push edx; call dword ptr [eax + 0x10]; 
0x0017c7eb: push edx; call dword ptr [eax + 0x20]; 
0x0017c7bd: push edx; call dword ptr [eax + 0x24]; 
0x0010da5a: push edx; call dword ptr [eax + 0xc]; 
0x0017bd0d: push edx; call dword ptr [eax + 4]; 
0x0017b97b: push edx; call dword ptr [eax]; 
0x0007de19: push edx; call dword ptr [ebx + 0x1c]; 
0x0016ead0: push edx; call dword ptr [ecx + 0xc]; 
0x0016ead0: push edx; call dword ptr [ecx + 0xc]; add esp, 0x10; add esp, 0xc; ret; 
0x00175a3f: push edx; call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x0003ed5a: push edx; call eax; 
0x000fed2c: push edx; cld; dec dword ptr [ebx - 0x76efdbb4]; ret 0x448b; 
0x000803c8: push edx; cmp bh, dl; jmp dword ptr [esi - 0x70]; 
0x0009641a: push edx; fdiv st(1), st(0); jmp dword ptr [esi - 0x70]; 
0x001a68ab: push edx; fisub dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x001a666b: push edx; fisub word ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x001a693b: push edx; fldenv [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x001a670b: push edx; frstor dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x001a69db: push edx; fsub dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x00114272: push edx; in eax, dx; call dword ptr [eax + 0x56]; 
0x0015af25: push edx; int1; call dword ptr [eax - 0x73]; 
0x000c43c9: push edx; lea eax, [esp + 0x64]; mov dword ptr [esp + 0x34], edx; push eax; push ebp; call esi; 
0x0007a2c4: push edx; lea edx, [ebx + 0x28]; push edx; push 1; push ebx; call eax; 
0x00083dde: push edx; lea edx, [esi + 0x28]; push edx; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x00083ebd: push edx; lea edx, [esi + 4]; push edx; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x0013c0e0: push edx; lea edx, [esi - 0x102e54]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0016f5f7: push edx; lea edx, [esi - 0xcf5b4]; push edx; push 1; push ebx; call dword ptr [eax]; 
0x0016f720: push edx; lea edx, [esi - 0xcf5b4]; push edx; push 2; push ebx; call dword ptr [eax]; 
0x001a68c9: push edx; ljmp 0xf66:0xd1ef0f66; cmp byte ptr [edi], dl; ret 0x830f; 
0x001717ed: push edx; mov dword ptr [esp + 0x14], edx; push dword ptr [esi]; call dword ptr [esi + 0x20]; 
0x0008e0e5: push edx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x00041741: push edx; mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 0x24], edx; call eax; 
0x00083de2: push edx; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x000fb1d8: push edx; mov edx, 0x20; cmovne eax, edx; ret; 
0x00177c31: push edx; mov edx, dword ptr [eax + 0x20]; lea ebx, [esp + 0xe0]; push ebx; push eax; call dword ptr [edx + 8]; 
0x000a0a44: push edx; or al, 0x83; ret; 
0x0005fcbe: push edx; or al, 0xf6; ret 0xf01; 
0x0015c810: push edx; or byte ptr [ebx + 0x5e], bl; mov eax, edx; ret; 
0x000a0f44: push edx; or byte ptr [ecx], al; lds edi, ptr [ecx]; ret; 
0x00151171: push edx; or byte ptr [ecx], bh; ret 0x460f; 
0x00086910: push edx; pop eax; mov eax, dword ptr [edx + 0x10]; sub eax, dword ptr [edx + 0xc]; sar eax, 2; ret; 
0x000867e0: push edx; pop eax; mov eax, dword ptr [edx + 0x1c]; sub eax, dword ptr [edx + 0x18]; sar eax, 2; ret; 
0x0015b622: push edx; pop edi; stc; call dword ptr [eax + 0x6a]; 
0x0016f5fe: push edx; push 1; push ebx; call dword ptr [eax]; 
0x0007a2c8: push edx; push 1; push ebx; call eax; 
0x0016f727: push edx; push 2; push ebx; call dword ptr [eax]; 
0x0016f7d1: push edx; push 4; push ebx; call dword ptr [eax]; 
0x0003006b: push edx; push dword ptr [eax + 0x10e4]; call 0x12d020; add esp, 0x1c; ret; 
0x0011b24a: push edx; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x00128953: push edx; push dword ptr [esp + 0x1c]; call 0x616b0; add esp, 0x10; add esp, 0xc; ret; 
0x0012c229: push edx; push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x12ba60; add esp, 0x1c; ret; 
0x0013ce79: push edx; push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x66130; add esp, 0x1c; ret; 
0x0013d0c9: push edx; push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x72650; add esp, 0x1c; ret; 
0x0013bfa9: push edx; push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x85680; add esp, 0x1c; ret; 
0x0013c869: push edx; push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x858b0; add esp, 0x1c; ret; 
0x0013d6f9: push edx; push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x85ce0; add esp, 0x1c; ret; 
0x0008e4e6: push edx; push dword ptr [esp + 0x24]; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0013dcec: push edx; push dword ptr [esp + 0x2c]; call 0x7ea40; add esp, 0x2c; ret; 
0x0013e09a: push edx; push dword ptr [esp + 0x2c]; call 0x80560; add esp, 0x2c; ret; 
0x0013dc9a: push edx; push dword ptr [esp + 0x2c]; call 0x85aa0; add esp, 0x2c; ret; 
0x000c410f: push edx; push dword ptr [esp + 0x2c]; push dword ptr [edi]; mov eax, dword ptr [esp + 0x38]; call eax; 
0x0012e224: push edx; push dword ptr [esp + 0x30]; call 0x12e180; add esp, 0x2c; ret; 
0x0008a3ab: push edx; push dword ptr [esp + 0x3c]; push ebp; call dword ptr [esi + 0x20]; 
0x00115869: push edx; push eax; call 0x115b20; add esp, 0x10; add esp, 0xc; ret; 
0x0002823d: push edx; push eax; call 0x982f0; add esp, 0x1c; ret; 
0x000ded1a: push edx; push eax; call 0xda950; add esp, 0x1c; ret; 
0x000da844: push edx; push eax; call 0xdd060; add esp, 0x1c; ret; 
0x0005bc21: push edx; push eax; call dword ptr [ebp + 0x1c]; 
0x001866ca: push edx; push eax; call dword ptr [ebx + 0x24]; 
0x00186751: push edx; push eax; call dword ptr [ebx + 0x28]; 
0x000f0d8f: push edx; push eax; call dword ptr [ecx + 0x20]; 
0x0017873c: push edx; push eax; call edi; 
0x0002451f: push edx; push eax; push dword ptr [esp + 0x1c]; call 0x244ec; add esp, 0x1c; ret; 
0x00082f5d: push edx; push eax; push ebx; call dword ptr [edi + 0x40]; 
0x00087c09: push edx; push eax; push ebx; call dword ptr [esi + 0x40]; 
0x0018b2ab: push edx; push eax; push ebx; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x40]; 
0x00083243: push edx; push eax; push esi; call dword ptr [ebx + 0x40]; 
0x0008968a: push edx; push eax; push esi; call dword ptr [ecx + 0x40]; 
0x00088e1a: push edx; push eax; push esi; call dword ptr [edi + 0x38]; 
0x0018bbe3: push edx; push eax; push esi; call dword ptr [edi + 0x40]; 
0x0016fb4d: push edx; push ebx; call dword ptr [eax + 0x14]; 
0x0017c54a: push edx; push ebx; call dword ptr [eax + 0x20]; 
0x001754ec: push edx; push ebx; call dword ptr [eax + 0x24]; 
0x0017145e: push edx; push ebx; call dword ptr [eax + 4]; 
0x0017149d: push edx; push ebx; call dword ptr [eax]; 
0x0007fd3a: push edx; push ebx; call dword ptr [ebp + 0x1c]; 
0x000e7859: push edx; push ebx; call eax; 
0x00084000: push edx; push ebx; push esi; call eax; 
0x0017be5a: push edx; push ecx; call dword ptr [eax + 4]; 
0x0017be92: push edx; push ecx; call dword ptr [eax]; 
0x0008e242: push edx; push ecx; call eax; 
0x0008df81: push edx; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0008e343: push edx; push ecx; push edi; call eax; 
0x001775cd: push edx; push edi; call dword ptr [eax + 4]; 
0x00082573: push edx; push edi; call dword ptr [ebx + 0x38]; 
0x0013f7f2: push edx; push edi; call eax; 
0x0012433a: push edx; push edi; cmc; jmp dword ptr [esi - 0x70]; 
0x00171cd0: push edx; push edi; push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x00089514: push edx; push esi; call dword ptr [eax + 0x48]; 
0x0017c19e: push edx; push esi; call dword ptr [eax]; 
0x0013f8cf: push edx; push esi; call eax; 
0x000834de: push edx; push esi; call ecx; 
0x001a6d48: push edx; ret 0xc2bb; 
0x000781ea: push edx; ret 0xffff; 
0x0012646a: push edx; ret; 
0x0013c0e7: push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00104a8d: push edx; sbb al, 0xf6; ret 0xf08; 
0x001a6d6b: push edx; shl byte ptr [esi + 0xf], cl; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x001a6e1b: push edx; shl dword ptr [esi + 0xf], 1; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x001a6ccb: push edx; shl dword ptr [esi + 0xf], cl; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0012727f: push edx; stc; call dword ptr [eax + 0x55]; 
0x00127297: push edx; stc; call dword ptr [ecx + 0x51]; 
0x001272b1: push edx; stc; call dword ptr [edx + 0x52]; 
0x0013bf21: push edx; sub esp, 0xc; xor ebx, ebx; mov ecx, esp; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x001a6530: push edx; xor byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x2c73; 
0x00061fd0: push es; aad 0x83; ret 0x101; 
0x000f1cda: push es; adc al, 0; add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ebx - 0x46f63]; dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x001056f9: push es; adc byte ptr [ebx - 0x75], dh; pop eax; add al, 0xf7; ret; 
0x0014038c: push es; add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; pop ebx; ret; 
0x0009f1d3: push es; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x001a6902: push es; add byte ptr [eax], al; pop ebx; ret; 
0x000b319f: push es; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000b973a: push es; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0008fbbc: push es; add byte ptr [ebx + 0x548b084e], cl; and al, 4; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0014a94d: push es; add byte ptr [ebx + 0x5e5b04c4], al; pop edi; pop ebp; ret; 
0x00030158: push es; add byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x00034aa0: push es; add byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret; 
0x000c7ea9: push es; add byte ptr [ebx + 0x7c8310c4], al; and al, 0x10; adc byte ptr [edi], cl; xchg esp, eax; ret 0xf883; 
0x000cb089: push es; add byte ptr [ebx + 0x7c8310c4], al; and al, 0x18; adc byte ptr [edi], cl; xchg esp, eax; ret 0xf883; 
0x000d8878: push es; add byte ptr [ebx - 0x363f4b], cl; dec dword ptr [ebp - 0x661f37a]; call dword ptr [eax - 0x73]; 
0x000d5956: push es; add byte ptr [ebx - 0x4a76ef3c], al; mov al, byte ptr [0x31ffffc9]; rol byte ptr [ebx - 0x362f43], cl; call dword ptr [eax]; 
0x000d0e87: push es; add byte ptr [ebx - 0x72d3db84], cl; xchg dword ptr [ebp + ebx*4 - 7], esp; call dword ptr [eax - 0x73]; 
0x00178c58: push es; add byte ptr [ebx - 0x7c72fb14], al; je 0x178c19; stc; call dword ptr [ebp + 0x57]; 
0x00124a6c: push es; add byte ptr [ecx + 0x11a3a6c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x000abe4a: push es; add byte ptr [ecx + 0x5bd08902], cl; pop esi; ret; 
0x000abf0a: push es; add byte ptr [ecx + 0x6428d02], cl; pop ebx; pop esi; ret; 
0x0008f992: push es; add byte ptr [ecx], bh; ret; 
0x001abbcb: push es; add byte ptr [edi], cl; test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x00080f61: push es; add dh, byte ptr [ebp + 0x63]; sub esp, 0xc; mov eax, dword ptr [eax + 0x88]; push esi; call dword ptr [eax + 0x34]; 
0x000a468e: push es; add dword ptr [eax], eax; add dh, dh; ret; 
0x000d57af: push es; add eax, 0x8d2e0000; je 0xd57dd; add byte ptr [ebx - 0x362f43], al; call dword ptr [eax]; 
0x001860cb: push es; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], edi; stc; call dword ptr [eax - 0x18]; 
0x0008ea19: push es; add esp, 0x14; pop ebx; pop esi; ret; 
0x00151029: push es; add esp, 0x18; pop ebx; ret; 
0x0003d7fd: push es; add esp, 0x24; pop ebx; pop esi; ret; 
0x00124ffd: push es; add esp, 0x34; pop ebx; pop esi; ret; 
0x0017cff4: push es; add esp, 0x54; pop ebx; pop esi; ret; 
0x0008b3b5: push es; add esp, 4; pop ebx; pop esi; ret; 
0x0013bea1: push es; and eax, 1; pop ebx; ret; 
0x0018ca20: push es; bnd jmp dword ptr [esi - 0x70]; 
0x00042a3c: push es; bsr eax, eax; add eax, 1; ret; 
0x00043101: push es; bsr eax, edx; xor eax, 0x1f; ret; 
0x0016d099: push es; call 0x1565b0; add esp, 0x1c; ret; 
0x0016d0b8: push es; call 0x156690; add esp, 0x1c; ret; 
0x0017d686: push es; cld; jmp dword ptr [esi - 0x70]; 
0x00188df6: push es; dec edi; sti; jmp dword ptr [esi - 0x70]; 
0x00062c07: push es; dec esp; ret 0xfff8; 
0x0007899d: push es; fdiv st(7), st(0); dec dword ptr [ebx - 0x4ff4b]; dec dword ptr [ebp - 0x682177a]; call dword ptr [eax + 0x68]; 
0x00050126: push es; idiv bh; call dword ptr [eax + 0x6a]; 
0x00174795: push es; in al, dx; call dword ptr [eax - 0x73]; 
0x000dd3e9: push es; inc esi; stc; call dword ptr [eax - 0x18]; 
0x001aaa92: push es; jb 0x1aab10; lea eax, [edi + 5]; pop edi; ret; 
0x001abab2: push es; jb 0x1abb30; lea eax, [eax + 5]; pop edi; ret; 
0x001796d1: push es; jg 0x1796c0; add esp, 4; pop ebx; pop esi; ret; 
0x001ab152: push es; jl 0x1ab1d0; lea eax, [ecx + 6]; ret; 
0x00187089: push es; jmp dword ptr [ecx]; 
0x000b3543: push es; jne 0xb3800; pop edi; pop ebx; ret; 
0x000b3943: push es; jne 0xb3801; pop ebx; ret; 
0x000b7db4: push es; jne 0xb7c51; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b9521: push es; jne 0xb9e20; pop edi; pop esi; pop ebx; ret; 
0x000bab64: push es; jne 0xbb520; pop edi; pop esi; pop ebx; ret; 
0x000c18a9: push es; lea eax, [ecx + eax + 0x30]; ret; 
0x000bb171: push es; lea eax, [edi + 0xe]; pop edi; pop esi; pop ebx; ret; 
0x000c15e9: push es; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000b5b81: push es; lea eax, [edx + 0xd]; pop edi; ret; 
0x000b5ce1: push es; lea eax, [edx + 0xd]; ret; 
0x000b3540: push es; lea ecx, [edx + 6]; jne 0xb3800; pop edi; pop ebx; ret; 
0x000b3940: push es; lea ecx, [edx + 6]; jne 0xb3801; pop ebx; ret; 
0x001928f6: push es; mov ah, 0xfa; jmp dword ptr [esi - 0x70]; 
0x000bd6b3: push es; mov byte ptr [eax + 8], dh; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00081652: push es; mov dword ptr [ebx + 0x30], esi; add esp, 4; pop ebx; pop esi; ret; 
0x000c0bd4: push es; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd761: push es; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00033fb9: push es; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000bff84: push es; mov eax, edi; pop ebx; pop edi; ret; 
0x0007daf9: push es; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x000b17a1: push es; mov eax, edi; pop edi; ret; 
0x00094b59: push es; mov eax, edx; pop ebx; pop esi; ret; 
0x000b1901: push es; mov eax, edx; ret; 
0x001a3227: push es; mov ecx, dword ptr [ebx + ecx*4 - 0x86474]; mov eax, dword ptr [ebx + eax*4 - 0x86474]; sub eax, ecx; pop ebx; ret; 
0x000bd7a3: push es; movdqu xmmword ptr [eax], xmm0; mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0c06: push es; movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd793: push es; movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b9ac3: push es; movdqu xmmword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000c0b06: push es; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd6a3: push es; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bd758: push es; movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b99d3: push es; movlpd qword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000ba40c: push es; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000ba56c: push es; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000bff7f: push es; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b8dcc: push es; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000b8f2c: push es; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000b5b78: push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; pop edi; ret; 
0x000b5cd8: push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000b1798: push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x000b18f8: push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x00141fa2: push es; movzx eax, byte ptr [edx + 1]; shr eax, 1; ret; 
0x001a0b7c: push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; pop ebp; ret; 
0x0019f363: push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x000eabb9: push es; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000abf10: push es; pop ebx; pop esi; ret; 
0x000421c7: push es; pop ebx; ret; 
0x0019b500: push es; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019979a: push es; pop edi; call 0x189c1d; add ebx, 0x4230f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019772a: push es; pop edi; call 0x189c1d; add ebx, 0x440ff; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019572a: push es; pop edi; call 0x189c1d; add ebx, 0x45e7f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000b9a91: push es; pop edi; pop esi; pop ebx; ret; 
0x000b5aec: push es; pop edi; ret; 
0x0003eac4: push es; pop esi; stc; call dword ptr [eax - 0x18]; 
0x001781ef: push es; push eax; call dword ptr [edx + 0x14]; 
0x0009d836: push es; ret; 
0x001a0b80: push es; sub eax, ecx; pop ebp; ret; 
0x0019f367: push es; sub eax, ecx; ret; 
0x00177c0c: push es; sub esp, 0xc; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x001775de: push es; sub esp, 8; mov edx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [edx + 4]; 
0x0008bc18: push es; xor byte ptr [ebp + 0x2c], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00132813: push esi; adc al, 0x29; ret 0xca39; 
0x0002ff42: push esi; adc byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x0009cfd4: push esi; adc byte ptr [ebx + 0x5e], bl; ret; 
0x0018bbbd: push esi; adc byte ptr [ecx], bh; ret 0x4d72; 
0x000b9984: push esi; add ah, byte ptr [esi - 0x77]; js 0x5e6a9be5; pop ebx; ret; 
0x00195f14: push esi; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0007c69c: push esi; add al, 0x39; ret; 
0x0017c07b: push esi; add al, 0x50; push ecx; push esi; call dword ptr [edx + 0xc]; 
0x0017c0b4: push esi; add al, 0x50; push ecx; push esi; call dword ptr [edx + 8]; 
0x00083ebf: push esi; add al, 0x52; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x000b99a3: push esi; add al, 0x89; js 0x5e6a9e03; pop ebx; ret; 
0x000b99b4: push esi; add al, 0x89; pcmpgtd mm1, qword ptr [ecx + 0x5e5f0457]; pop ebx; ret; 
0x00127314: push esi; add al, 0x89; ret 0xeac1; 
0x00122cd7: push esi; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0007de0e: push esi; add dword ptr [eax], eax; add byte ptr [ebx - 0xa9fb14], al; jne 0x7de21; push edx; call dword ptr [ebx + 0x1c]; 
0x000c0ae6: push esi; add ecx, dword ptr [ecx + 0x3508908]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd693: push esi; add ecx, dword ptr [ecx + 0x3508908]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b99c3: push esi; add ecx, dword ptr [ecx + 0x357890f]; pop edi; pop esi; pop ebx; ret; 
0x001142a0: push esi; add esp, 0x34; pop ebx; pop esi; ret; 
0x0012ee91: push esi; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x000fee76: push esi; and al, 0x39; ror byte ptr [edi], 1; dec edi; ret 0x568b; 
0x0008aced: push esi; and al, 1; ret 0x5689; 
0x00088e13: push esi; and byte ptr [ebx - 0x3dd6fb14], al; push edx; push eax; push esi; call dword ptr [edi + 0x38]; 
0x0016eba9: push esi; call 0x1704b0; mov eax, dword ptr [esp + 0x18]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x00025f77: push esi; call 0x186f70; add ebp, dword ptr [edi + 8]; mov dword ptr [esp], ebp; call esi; 
0x00026117: push esi; call 0x186f70; mov dword ptr [esp], ebx; call esi; 
0x0003297a: push esi; call 0x231a0; add esp, 0x14; pop ebx; pop esi; ret; 
0x00098280: push esi; call 0x8e750; mov eax, dword ptr [ebp - 0x3c]; add esp, 0x10; call eax; 
0x0016ee60: push esi; call dword ptr [eax + 0x10]; 
0x0016ee7e: push esi; call dword ptr [eax + 0x14]; 
0x0007d4f6: push esi; call dword ptr [eax + 0x1c]; 
0x000f4418: push esi; call dword ptr [eax + 0x20]; 
0x0007e51b: push esi; call dword ptr [eax + 0x2c]; 
0x0008629c: push esi; call dword ptr [eax + 0x30]; 
0x00080f6e: push esi; call dword ptr [eax + 0x34]; 
0x000899da: push esi; call dword ptr [eax + 0x40]; 
0x00089515: push esi; call dword ptr [eax + 0x48]; 
0x0016ef2c: push esi; call dword ptr [eax + 0xc]; 
0x0016ee1a: push esi; call dword ptr [eax + 4]; 
0x0017c19f: push esi; call dword ptr [eax]; 
0x0008c750: push esi; call dword ptr [ebp + 0x2c]; 
0x0008b7d2: push esi; call dword ptr [ebp + 0x30]; 
0x00089f8f: push esi; call dword ptr [ebp + 0xc]; 
0x0007c44c: push esi; call dword ptr [ebx + 0x1c]; 
0x0007e757: push esi; call dword ptr [ebx + 0x2c]; 
0x0007b9bc: push esi; call dword ptr [ebx + 0x30]; 
0x0007e840: push esi; call dword ptr [ebx + 0x34]; 
0x0008a145: push esi; call dword ptr [ebx + 0x38]; 
0x00083245: push esi; call dword ptr [ebx + 0x40]; 
0x0018b75d: push esi; call dword ptr [ebx + 0x44]; 
0x0007b2ab: push esi; call dword ptr [ebx + 0x48]; 
0x0016fa40: push esi; call dword ptr [ebx + 0xc]; 
0x0007b431: push esi; call dword ptr [ebx + 8]; 
0x0008968c: push esi; call dword ptr [ecx + 0x40]; 
0x00081519: push esi; call dword ptr [edi + 0x18]; 
0x0008b42c: push esi; call dword ptr [edi + 0x34]; 
0x00088e1c: push esi; call dword ptr [edi + 0x38]; 
0x000835d1: push esi; call dword ptr [edi + 0x40]; 
0x0018b8b2: push esi; call dword ptr [edi + 0x44]; 
0x00087fe7: push esi; call dword ptr [edi + 0x48]; 
0x0017c07f: push esi; call dword ptr [edx + 0xc]; 
0x0017c0b8: push esi; call dword ptr [edx + 8]; 
0x00084002: push esi; call eax; 
0x001ad9b5: push esi; call ebx; 
0x000834df: push esi; call ecx; 
0x0012c9ba: push esi; call edi; 
0x0007ac92: push esi; call edx; 
0x0012e425: push esi; call edx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x000a9399: push esi; cmc; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x001242f4: push esi; cmc; jmp dword ptr [ebp - 0x5f]; 
0x00152844: push esi; hlt; inc dword ptr [ebx - 0x2776eb3c]; pop ebx; pop esi; ret; 
0x001a9386: push esi; imul byte ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x001a9317: push esi; imul dword ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x00183846: push esi; in al, 0xf9; jmp dword ptr [ebp - 0x75]; 
0x000ab4ff: push esi; inc ecx; jbe 0xab514; cmove eax, edx; ret; 
0x000ac46f: push esi; inc ecx; jbe 0xac484; cmove eax, edx; ret; 
0x000ac63f: push esi; inc ecx; jbe 0xac654; cmove eax, edx; ret; 
0x000a956f: push esi; inc ecx; jne 0xa9576; lea edx, [edx - 0x17bf34]; cmove eax, edx; ret; 
0x000a95af: push esi; inc ecx; jne 0xa95b6; lea edx, [edx - 0x17bea4]; cmove eax, edx; ret; 
0x000aa11f: push esi; inc ecx; jne 0xaa126; lea edx, [edx - 0x17c804]; cmove eax, edx; ret; 
0x000ab4cf: push esi; inc ecx; jne 0xab4d6; lea edx, [edx - 0x17c2d4]; cmove eax, edx; ret; 
0x000ac33f: push esi; inc ecx; jne 0xac346; lea edx, [edx - 0x17dec4]; cmove eax, edx; ret; 
0x000ac3bf: push esi; inc ecx; jne 0xac3c6; lea edx, [edx - 0x18ed84]; cmove eax, edx; ret; 
0x000c5bcf: push esi; inc ecx; jne 0xc5bd6; cmove eax, edx; ret; 
0x000ac43f: push esi; inc ecx; jnp 0xac448; cmove eax, edx; ret; 
0x000c4d4f: push esi; inc ecx; jnp 0xc4d58; cmove eax, edx; ret; 
0x000c4daf: push esi; inc ecx; jnp 0xc4db8; cmove eax, edx; ret; 
0x000c5d9f: push esi; inc ecx; jnp 0xc5da8; cmove eax, edx; ret; 
0x000c6aaf: push esi; inc ecx; jnp 0xc6ab8; cmove eax, edx; ret; 
0x00081f06: push esi; inc esp; and al, 0x50; add dh, byte ptr [edx + ebx*4 - 0x17]; ret; 
0x000c334d: push esi; lea eax, [esp + 0x40]; push eax; push dword ptr [edi]; call ebx; 
0x0005f734: push esi; mov eax, dword ptr [esp + 0x14]; call eax; 
0x00175b1e: push esi; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x0018c005: push esi; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x40]; 
0x0016ee48: push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00170c1c: push esi; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x18]; 
0x00173f08: push esi; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x001701b4: push esi; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0013ac5c: push esi; mov ebx, dword ptr [esp + 0x18]; je 0x13ac70; add esp, 8; pop ebx; ret; 
0x0015ff5c: push esi; mov ecx, dword ptr [esp + 0x3c]; call ecx; 
0x00170272: push esi; mov edi, dword ptr [esp + 0x4c]; push edi; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x0012e3fe: push esi; mov esi, dword ptr [esp + 0x18]; mov ebx, ecx; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x1b3; int 0x80; 
0x000dc242: push esi; or al, 0x29; ret 0x428d; 
0x000407c8: push esi; or al, 0x83; les esi, ptr [ebx + ebx*2]; pop esi; ret 4; 
0x0013a992: push esi; or al, 0xf6; ret 0xf04; 
0x00106491: push esi; or al, 1; ret; 
0x000b95c6: push esi; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000fd667: push esi; or byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x00038dc5: push esi; or byte ptr [ecx + edx - 0x7d], dh; ljmp 0xfa83:0x1c18330; or dword ptr [edi], ecx; xchg esi, eax; ret 0xb60f; 
0x00080c3f: push esi; or byte ptr [ecx], al; ret 0x3e89; 
0x0010086e: push esi; or byte ptr [ecx], bh; ret 0x1c7e; 
0x00100864: push esi; or byte ptr [ecx], bh; ret 0x267e; 
0x00104973: push esi; or byte ptr [ecx], bh; ret 0x474; 
0x0008a0ca: push esi; or byte ptr [ecx], ch; ret 0xfa39; 
0x000a26a1: push esi; or byte ptr [ecx], ch; ret 0xfa83; 
0x000babc6: push esi; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000bd927: push esi; or eax, 0x7f0ff3; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000a956d: push esi; out 0xff, eax; test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x17bf34]; cmove eax, edx; ret; 
0x0012f20c: push esi; pop ebx; pop esi; ret; 
0x0014b7bd: push esi; pop ebx; stc; call dword ptr [eax - 0x18]; 
0x0013b12e: push esi; push 0; push 0x1000003; call eax; 
0x0013b80b: push esi; push 0; push 0x1000004; call eax; 
0x0013b62a: push esi; push 0; push 0x1000006; call ecx; 
0x0013b3d4: push esi; push 0; push 0x1000007; call eax; 
0x00138219: push esi; push 0x2000006; call dword ptr [ebx + 0x14]; 
0x00179046: push esi; push 3; push edi; call dword ptr [eax]; 
0x0007de15: push esi; push dword ptr [ebp + 8]; push edx; call dword ptr [ebx + 0x1c]; 
0x0013b2f1: push esi; push dword ptr [ebp - 0x11c]; push 0; call eax; 
0x000a6c76: push esi; push dword ptr [ebx + 0x24]; call eax; 
0x0016e6bb: push esi; push dword ptr [esp + 0x14]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x00087961: push esi; push dword ptr [esp + 0x38]; push ebp; call dword ptr [eax + 0x1c]; 
0x0007f9f2: push esi; push dword ptr [esp + 0x38]; push edi; call dword ptr [eax + 0x1c]; 
0x00024ee3: push esi; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x0016ee31: push esi; push eax; call dword ptr [edx + 4]; 
0x001783c2: push esi; push eax; call dword ptr [edx]; 
0x001715b2: push esi; push eax; push dword ptr [ebx]; call dword ptr [ebx + 8]; 
0x0008e566: push esi; push eax; push ecx; call edx; 
0x00087ae1: push esi; push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x001754d6: push esi; push ebx; call dword ptr [eax + 0x24]; 
0x00089ba3: push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x0008bcbb: push esi; push ebx; call dword ptr [edi + 0x18]; 
0x0012fb1a: push esi; push ebx; call dword ptr gs:[0x10]; 
0x000e781b: push esi; push ebx; call eax; 
0x00136ff1: push esi; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0012fb5a: push esi; push ebx; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00123107: push esi; push ebx; xor ebx, ebx; mov ecx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0016fc60: push esi; push ecx; push 5; push ebx; call dword ptr [eax]; 
0x0007d573: push esi; push ecx; push ebx; call dword ptr [ebp + 0x1c]; 
0x000410a2: push esi; push edi; mov eax, dword ptr [esp + 0x10]; call eax; 
0x0008df7f: push esi; push edi; push edx; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0004182d: push esi; push edx; mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 0x24], edx; call eax; 
0x0008e4e5: push esi; push edx; push dword ptr [esp + 0x24]; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0005bc20: push esi; push edx; push eax; call dword ptr [ebp + 0x1c]; 
0x0007fd39: push esi; push edx; push ebx; call dword ptr [ebp + 0x1c]; 
0x0013b548: push esi; ret 0xf02; 
0x00032116: push esi; ret 0xf03; 
0x0006010b: push esi; ret 0xf40; 
0x0005ceb5: push esi; ret 0xf50; 
0x0003040e: push esi; ret; 
0x00093958: push esi; rol dword ptr [eax + 0xf], 0x84; mov esi, 0x8b000003; je 0x93989; add al, 0x89; ret; 
0x0013bfe0: push esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000fec88: push esi; sbb al, 0x83; rol byte ptr [ecx], 0x39; ret 0xef7f; 
0x0005b702: push esi; sbb byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000aa156: push esi; sbb dword ptr [ecx + eax - 0x72fc0000], 0xf6ad8c92; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a9446: push esi; sbb dword ptr [ecx + eax - 0x72fc0000], 0xf6bd0c92; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0013d6b6: push esi; sbb dword ptr [ecx + eax - 0x72ff0000], 0xf54a7c92; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a9486: push esi; sbb dword ptr [ecx + eax - 0x72ff0000], 0xf54a8c92; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0013a2cb: push esi; stc; call dword ptr [eax + 0x50]; 
0x00138fbd: push esi; stc; call dword ptr [eax + 0x56]; 
0x00024800: push esi; stc; call dword ptr [eax + 0x6a]; 
0x001392ee: push esi; stc; call dword ptr [eax - 0x75]; 
0x0013bc0b: push esi; stc; call dword ptr [eax - 1]; 
0x0013baf3: push esi; stc; call dword ptr [ebx + 0x50]; 
0x000248cb: push esi; stc; call dword ptr [edi + 0x57]; 
0x0003416f: push esi; stc; call dword ptr [esi - 1]; 
0x001686a8: push esi; std; jmp dword ptr [esi - 0x70]; 
0x001717d4: push esi; sub al, 0x89; ret; 
0x00171804: push esi; sub al, 1; ret 0x5689; 
0x00083de0: push esi; sub byte ptr [edx - 0x75], dl; inc esp; and al, 0x34; push eax; call ebx; 
0x001a9346: push esi; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x000f1495: push esi; test dword ptr [edx + edi*8 - 1], eax; call dword ptr [eax]; 
0x00171809: push esi; xor byte ptr [ebx + 0x568b3046], cl; sub al, 0x89; ret; 
0x0013367a: push esi; xor esi, esi; push ebx; mov ebx, 0x16; mov edi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0009815f: push esi; xor esi, esi; push ebx; mov ebx, dword ptr [esp + 0x10]; mov dword ptr [ebx], 0; call dword ptr gs:[0x10]; 
0x00065113: push esp; add ah, al; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [ecx + edx*4 - 0x73f14]; jmp eax; 
0x0006589d: push esp; add ah, al; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [edi + edx*4]; mov edi, ecx; jmp eax; 
0x00066025: push esp; add ah, al; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [esi + edx*4 - 0x74014]; jmp eax; 
0x0019611b: push esp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00122a3c: push esp; add byte ptr [eax], al; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00122a6a: push esp; add byte ptr [eax], al; mov ebp, dword ptr [eax + edi]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00122d0a: push esp; add byte ptr [eax], al; mov edx, 1; call dword ptr gs:[0x10]; 
0x00122d3b: push esp; add byte ptr [eax], al; mov edx, 1; mov edi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00122ded: push esp; add byte ptr [eax], al; push dword ptr [esp + 0x1c]; call 0x1283c0; add esp, 0x1c; ret; 
0x000c3b7d: push esp; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x0007cb98: push esp; add dword ptr [eax], eax; add byte ptr [ebx - 0xa8fb14], al; jne 0x7cbab; push esi; call dword ptr [ebx + 0x1c]; 
0x00134736: push esp; add eax, 0xa6db0500; adc byte ptr [eax], al; mov eax, dword ptr [eax + 0x108]; mov eax, dword ptr [eax + 0x20]; ret; 
0x0010c3b4: push esp; add esp, 0x24; pop ebx; pop esi; ret; 
0x0016ed61: push esp; and al, 0x10; add esp, 4; pop ebx; pop esi; jmp eax; 
0x00131c1a: push esp; and al, 0x10; mov dword ptr [esp + 0x1c], eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00131bdc: push esp; and al, 0x10; mov dword ptr [esp + 0x1c], eax; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x00131b71: push esp; and al, 0x10; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x0008d75e: push esp; and al, 0x10; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x00099b5e: push esp; and al, 0x10; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x0011604c: push esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00130d72: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00130842: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x0011f632: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x00121542: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x00121032: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x00114af2: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x001309e2: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1ac; call dword ptr gs:[0x10]; 
0x00130752: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b0; call dword ptr gs:[0x10]; 
0x001307b2: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b1; call dword ptr gs:[0x10]; 
0x001147e2: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x00130a42: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b6; call dword ptr gs:[0x10]; 
0x001236c2: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x0012d972: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x001308c2: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x00130582: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x00129562: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x00130662: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x00130692: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x0010c182: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x001309b2: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000eab52: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x0011f092: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x00115112: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000f0ac2: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000f0a92: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x001146f2: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x00128832: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x00128752: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x00128452: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x00128482: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x00124922: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x00170b9c: push esp; and al, 0x10; pop ebx; pop esi; jmp eax; 
0x0017c55d: push esp; and al, 0x10; push edx; push ebx; call dword ptr [eax + 0x20]; 
0x001754e9: push esp; and al, 0x10; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x0017bb87: push esp; and al, 0x10; push edx; push ebx; call dword ptr [eax + 4]; 
0x0017bb1c: push esp; and al, 0x10; push edx; push ebx; call dword ptr [eax]; 
0x0017be57: push esp; and al, 0x10; push edx; push ecx; call dword ptr [eax + 4]; 
0x0017be8f: push esp; and al, 0x10; push edx; push ecx; call dword ptr [eax]; 
0x0013f7ef: push esp; and al, 0x10; push edx; push edi; call eax; 
0x0013f8cc: push esp; and al, 0x10; push edx; push esi; call eax; 
0x0005b71a: push esp; and al, 0x10; test byte ptr [edx], 0x20; je 0x5b730; add esp, 0xc; ret; 
0x000790ca: push esp; and al, 0x10; test byte ptr [edx], 0x20; je 0x790e0; add esp, 0xc; ret; 
0x00034e2c: push esp; and al, 0x14; add esp, 0xc; mov eax, edx; ret; 
0x00098311: push esp; and al, 0x14; call 0x981a0; xor eax, eax; add esp, 0xc; ret; 
0x00123170: push esp; and al, 0x14; call dword ptr gs:[0x10]; 
0x000942ae: push esp; and al, 0x14; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x0019044f: push esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0009f80b: push esp; and al, 0x14; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x001208a7: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x00130aa7: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x1a8; call dword ptr gs:[0x10]; 
0x00130b87: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x00126a67: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x00128427: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x001248f7: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x001306e7: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x001717ef: push esp; and al, 0x14; push dword ptr [esi]; call dword ptr [esi + 0x20]; 
0x000f0d8c: push esp; and al, 0x14; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x0016fb4a: push esp; and al, 0x14; push edx; push ebx; call dword ptr [eax + 0x14]; 
0x00132ad6: push esp; and al, 0x18; call dword ptr gs:[0x10]; 
0x0012f46f: push esp; and al, 0x18; cmp esi, -1; je 0x12f490; mov eax, 0x17c; call dword ptr gs:[0x10]; 
0x0010b44c: push esp; and al, 0x18; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x0009feb8: push esp; and al, 0x18; mov eax, 0x103; mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0011f703: push esp; and al, 0x18; mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0010bde1: push esp; and al, 0x18; mov ebx, dword ptr [esp + 0x10]; cmp esi, ecx; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x0006131c: push esp; and al, 0x18; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0012ad7c: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x0011514c: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0011f11c: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x00130c7c: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x001308fc: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x0013097c: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1ad; call dword ptr gs:[0x10]; 
0x0013071c: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1af; call dword ptr gs:[0x10]; 
0x00130adc: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1b8; call dword ptr gs:[0x10]; 
0x0013093c: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1ba; call dword ptr gs:[0x10]; 
0x0013080c: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x00130b4c: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0012f54c: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xac; call dword ptr gs:[0x10]; 
0x0012b79c: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x001285fc: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x0012498c: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x00192984: push esp; and al, 0x18; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00132fc4: push esp; and al, 0x18; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0017d01d: push esp; and al, 0x18; test edx, edx; jne 0x17d030; add esp, 0xc; ret; 
0x0017d18d: push esp; and al, 0x18; test edx, edx; jne 0x17d1a0; add esp, 0xc; ret; 
0x00123089: push esp; and al, 0x18; xor esi, esi; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012f00e: push esp; and al, 0x1c; mov eax, 0x12c; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x0012f29b: push esp; and al, 0x1c; mov eax, 0xa3; mov ebx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0009ddec: push esp; and al, 0x1c; mov eax, 0xaf; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000eab9d: push esp; and al, 0x1c; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x000de911: push esp; and al, 0x1c; mov edx, dword ptr [esp + 0x34]; mov ebx, dword ptr [esp + 0x30]; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012fdc2: push esp; and al, 0x1c; mov edx, dword ptr [esp + 0x34]; mov ebx, dword ptr [esp + 0x30]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0013d57f: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x13d595; add esp, 0x2c; ret; 
0x0013e7bf: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x13e7d5; add esp, 0x2c; ret; 
0x00192b45: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x192b55; add esp, 0x2c; ret; 
0x000409d4: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x409e4; add esp, 0x2c; ret; 
0x00053494: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x534a4; add esp, 0x2c; ret; 
0x00092767: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x92777; add esp, 0x2c; ret; 
0x000972e3: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x972f3; add esp, 0x2c; ret; 
0x00098597: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x985a7; add esp, 0x2c; ret; 
0x00098a07: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x98a17; add esp, 0x2c; ret; 
0x00098f23: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x98f33; add esp, 0x2c; ret; 
0x00099373: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x99383; add esp, 0x2c; ret; 
0x0009c4ce: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x9c4f7; add esp, 0x2c; ret; 
0x0009c73a: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x9c767; add esp, 0x2c; ret; 
0x0017b9ad: push esp; and al, 0x20; mov eax, dword ptr [eax + 4]; add esp, 0x18; pop ebx; jmp eax; 
0x0012b8b1: push esp; and al, 0x20; mov ecx, dword ptr [esp + 0x1c]; mov ebx, dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00178739: push esp; and al, 0x20; push edx; push eax; call edi; 
0x0017c19b: push esp; and al, 0x20; push edx; push esi; call dword ptr [eax]; 
0x000eb0a2: push esp; and al, 0x24; call 0xead50; mov eax, 0xffffffff; add esp, 0x1c; ret; 
0x00041747: push esp; and al, 0x24; call eax; 
0x0010bef6: push esp; and al, 0x24; mov ebx, dword ptr [esp + 0x20]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0004040d: push esp; and al, 0x28; call dword ptr gs:[0x10]; 
0x0012f368: push esp; and al, 0x28; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x00040438: push esp; and al, 0x28; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x001295e8: push esp; and al, 0x28; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x0012ac98: push esp; and al, 0x28; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x0012d8a8: push esp; and al, 0x28; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0011fd98: push esp; and al, 0x28; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x001207c8: push esp; and al, 0x28; mov eax, 3; call dword ptr gs:[0x10]; 
0x00121978: push esp; and al, 0x28; mov eax, 4; call dword ptr gs:[0x10]; 
0x00179923: push esp; and al, 0x28; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x00089511: push esp; and al, 0x28; push edx; push esi; call dword ptr [eax + 0x48]; 
0x000a0010: push esp; and al, 0x2c; mov dword ptr [esp + 0x34], 4; call dword ptr gs:[0x10]; 
0x00115d63: push esp; and al, 0x2c; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x000deab5: push esp; and al, 0x2c; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0012d1df: push esp; and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0x12d1ef; add esp, 0x3c; ret; 
0x00192a03: push esp; and al, 0x34; lea edi, [esp + 8]; mov eax, 0x75; mov ebx, 3; call dword ptr gs:[0x10]; 
0x000de915: push esp; and al, 0x34; mov ebx, dword ptr [esp + 0x30]; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012fdc6: push esp; and al, 0x34; mov ebx, dword ptr [esp + 0x30]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0011f4b9: push esp; and al, 0x34; mov ecx, dword ptr [esp + 0x38]; mov ebx, dword ptr [esp + 0x30]; mov edi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x001798b3: push esp; and al, 0x34; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x000c43cf: push esp; and al, 0x34; push eax; push ebp; call esi; 
0x000fb6e7: push esp; and al, 0x38; call dword ptr gs:[0x10]; 
0x00129a42: push esp; and al, 0x38; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x0012a372: push esp; and al, 0x38; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000fb712: push esp; and al, 0x38; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000fb8d2: push esp; and al, 0x38; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x00133614: push esp; and al, 0x38; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x00120f57: push esp; and al, 0x38; mov edi, dword ptr [esp + 0x40]; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0012971e: push esp; and al, 0x38; mov edi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0012974e: push esp; and al, 0x38; mov edi, dword ptr [esp + 4]; mov dword ptr [esp + 0xc], eax; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x0012a07e: push esp; and al, 0x38; mov edi, dword ptr [esp + 4]; mov dword ptr [esp + 0xc], eax; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x0010e8bf: push esp; and al, 0x38; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0010e8f0: push esp; and al, 0x38; mov esi, dword ptr [esp + 0x3c]; mov dword ptr [esp + 8], eax; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x0012ec80: push esp; and al, 0x38; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x0012fd20: push esp; and al, 0x38; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x00130320: push esp; and al, 0x38; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x00132140: push esp; and al, 0x38; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x00179ead: push esp; and al, 0x38; push edx; call dword ptr [eax + 0xc]; 
0x0018bd2c: push esp; and al, 0x38; push edx; push esi; call dword ptr [eax + 0x48]; 
0x001798c2: push esp; and al, 0x3c; sub edx, dword ptr gs:[0x14]; jne 0x1798d2; add esp, 0x4c; ret; 
0x00158cf7: push esp; and al, 0x40; mov dword ptr [edx], ebx; add esp, 0x28; pop ebx; ret; 
0x0009fbfe: push esp; and al, 0x48; mov eax, 0x117; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x0009f936: push esp; and al, 0x48; mov eax, 0x118; mov ecx, ebp; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0009fb79: push esp; and al, 0x48; mov eax, 0x1a2; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x0009f8b3: push esp; and al, 0x48; mov eax, 0x1a3; mov ecx, ebp; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x00132a2f: push esp; and al, 0x48; mov esi, dword ptr [esp + 0x50]; mov dword ptr [esp + 0x18], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x001231d1: push esp; and al, 0x4c; mov edx, dword ptr [esp + 0x64]; mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x001231d5: push esp; and al, 0x64; mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x00132892: push esp; and al, 0x6c; sub edx, dword ptr gs:[0x14]; jne 0x1328a2; add esp, 0x7c; ret; 
0x0017cdf9: push esp; and al, 0xc; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x0007c160: push esp; and al, 0xc; add esp, 0x1c; ret; 
0x0012308f: push esp; and al, 0xc; call dword ptr gs:[0x10]; 
0x0003c196: push esp; and al, 0xc; fld dword ptr [esp]; mov dword ptr [edx], eax; add esp, 4; ret; 
0x0017c510: push esp; and al, 0xc; lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x0017bb60: push esp; and al, 0xc; lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 4]; 
0x001897a0: push esp; and al, 0xc; mov dword ptr [eax], edx; ret; 
0x000e7641: push esp; and al, 0xc; mov dword ptr [edx], ebx; pop ebx; ret; 
0x0012064b: push esp; and al, 0xc; mov dword ptr [esp + 8], eax; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x000deb25: push esp; and al, 0xc; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0003ba13: push esp; and al, 0xc; mov eax, dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00094f19: push esp; and al, 0xc; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00120601: push esp; and al, 0xc; mov ecx, dword ptr [esp + 0x54]; mov dword ptr [esp + 8], eax; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x00094f5c: push esp; and al, 0xc; mov ecx, edi; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0010bef2: push esp; and al, 0xc; mov edx, dword ptr [esp + 0x24]; mov ebx, dword ptr [esp + 0x20]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0017c547: push esp; and al, 0xc; push edx; push ebx; call dword ptr [eax + 0x20]; 
0x0017c514: push esp; and al, 0xc; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x0017bb64: push esp; and al, 0xc; push edx; push ebx; call dword ptr [eax + 4]; 
0x0017bb07: push esp; and al, 0xc; push edx; push ebx; call dword ptr [eax]; 
0x000e7856: push esp; and al, 0xc; push edx; push ebx; call eax; 
0x0017bedb: push esp; and al, 0xc; push edx; push ecx; call dword ptr [eax + 4]; 
0x00122ca0: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x122cb7; add esp, 0x1c; ret; 
0x00125390: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1253a0; add esp, 0x1c; ret; 
0x00126b13: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x126b23; add esp, 0x1c; ret; 
0x0012d676: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x12d686; add esp, 0x1c; ret; 
0x00132691: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1326a1; add esp, 0x1c; ret; 
0x00148d24: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x148d34; add esp, 0x1c; ret; 
0x00148d73: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x148d83; add esp, 0x1c; ret; 
0x0014b37d: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x14b3cc; add esp, 0x1c; ret; 
0x0017848c: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1784a7; add esp, 0x1c; ret; 
0x0017899c: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1789b7; add esp, 0x1c; ret; 
0x0018c6c3: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x18c6d3; add esp, 0x1c; ret; 
0x0003df24: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x3df34; add esp, 0x1c; ret; 
0x000405e9: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x405f9; add esp, 0x1c; ret; 
0x00040816: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x40826; add esp, 0x1c; ret; 
0x00040ae6: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x40af6; add esp, 0x1c; ret; 
0x00040b69: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x40b79; add esp, 0x1c; ret; 
0x0005ada2: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x5adbf; add esp, 0x1c; ret; 
0x000da708: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xda718; add esp, 0x1c; ret; 
0x000e4f6c: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xe4f7c; add esp, 0x1c; ret; 
0x000e742c: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xe743c; add esp, 0x1c; ret; 
0x000efa39: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xefa57; add esp, 0x1c; ret; 
0x0017c708: push esp; and al, 4; jmp dword ptr [eax + 0x20]; 
0x0017c6e4: push esp; and al, 4; jmp dword ptr [eax + 0x24]; 
0x00186924: push esp; and al, 4; jmp dword ptr [eax + 0x30]; 
0x001713f4: push esp; and al, 4; jmp dword ptr [eax + 4]; 
0x0008e79e: push esp; and al, 4; jmp dword ptr [eax]; 
0x0007c1a3: push esp; and al, 4; jmp eax; 
0x00099b1e: push esp; and al, 4; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x00090c3e: push esp; and al, 4; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00121d05: push esp; and al, 4; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x000347c9: push esp; and al, 4; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x000347e9: push esp; and al, 4; mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00152b0f: push esp; and al, 4; mov eax, dword ptr [eax + 0x4e48]; test eax, eax; jne 0x152b27; ret; 
0x0003403f: push esp; and al, 4; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0003462f: push esp; and al, 4; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x000345ff: push esp; and al, 4; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x2c]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x0017ca15: push esp; and al, 4; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x0003c0ec: push esp; and al, 4; mov eax, dword ptr [esp + 8]; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0003dc45: push esp; and al, 4; mov eax, edx; neg eax; cmovs eax, edx; ret; 
0x0008fbc2: push esp; and al, 4; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000959bf: push esp; and al, 4; mov edx, dword ptr [edx]; lea eax, [eax + 0x2a0]; mov dword ptr [eax], edx; ret; 
0x0008e8cf: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x290], edx; ret; 
0x0008e8ef: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x294], edx; ret; 
0x0008e90f: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x298], edx; ret; 
0x0008e92f: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x29c], edx; ret; 
0x0009599f: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x2a4], edx; ret; 
0x0009597f: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x2ac], edx; ret; 
0x000a08af: push esp; and al, 4; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x358], edx; ret; 
0x000a088f: push esp; and al, 4; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x35c], edx; ret; 
0x000a093f: push esp; and al, 4; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x394], edx; ret; 
0x000a0b6f: push esp; and al, 4; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x3c34], edx; ret; 
0x000344ff: push esp; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x000344cf: push esp; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x0003449f: push esp; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x000343df: push esp; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x0003443f: push esp; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x0003434f: push esp; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x0003440f: push esp; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x000343af: push esp; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x000345af: push esp; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x0003437f: push esp; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x0003446f: push esp; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x0003431f: push esp; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x00094bcf: push esp; and al, 4; ret; 
0x0008e5f5: push esp; and al, 4; setae al; ret; 
0x0016eeed: push esp; and al, 4; sub esp, 0xc; push eax; call dword ptr [ecx + 0xc]; 
0x00093579: push esp; and al, 8; call dword ptr gs:[0x10]; 
0x000794f1: push esp; and al, 8; mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 0x14], 2; mov dword ptr [eax + 0x18], edx; ret; 
0x00114619: push esp; and al, 8; mov dword ptr [eax + 0x110], edx; xor eax, eax; ret; 
0x001897c9: push esp; and al, 8; mov dword ptr [eax + 0x4c], edx; ret; 
0x0017d2d1: push esp; and al, 8; mov dword ptr [eax + 0xc], edx; ret; 
0x000906f9: push esp; and al, 8; mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x0010ce19: push esp; and al, 8; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x0014096d: push esp; and al, 8; mov dword ptr [edx + ebp], ecx; mov ebx, dword ptr [esp + 0x6c]; mov eax, 6; call dword ptr gs:[0x10]; 
0x00125172: push esp; and al, 8; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x000908f5: push esp; and al, 8; mov eax, 0x16; cmp edx, 0x3fff; ja 0x90910; ret; 
0x0008c969: push esp; and al, 8; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x00189779: push esp; and al, 8; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x000311c9: push esp; and al, 8; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x0003bdc4: push esp; and al, 8; mov eax, dword ptr [esp + 0xc]; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00094e96: push esp; and al, 8; mov ebx, ebp; mov esi, 8; call dword ptr gs:[0x10]; 
0x00188769: push esp; and al, 8; mov ecx, dword ptr [eax]; test ecx, ecx; jne 0x188778; ret; 
0x00117a59: push esp; and al, 8; mov word ptr [edx + 0x3e], ax; xor eax, eax; ret; 
0x001194f9: push esp; and al, 8; mov word ptr [edx + 0x42], ax; xor eax, eax; ret; 
0x000908d9: push esp; and al, 8; or dword ptr [eax + 8], 8; mov dword ptr [eax + 0x10], edx; xor eax, eax; ret; 
0x0007c0a4: push esp; and al, 8; pop ebx; jmp eax; 
0x000f800c: push esp; and al, 8; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x00095ab3: push esp; and al, 8; shr eax, 0x13; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0009aa1b: push esp; and al, 8; shr eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00033410: push esp; and dword ptr [eax], 0x5b; mov eax, edx; ret; 
0x0002c8bf: push esp; call eax; 
0x0002a2e8: push esp; call esi; 
0x0009dd8a: push esp; clc; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x000bd522: push esp; cli; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0003ef53: push esp; cmp eax, 0x473ff00; call eax; 
0x000a62d1: push esp; cwde; stc; call dword ptr [eax - 0x18]; 
0x000ef9f9: push esp; hlt; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0007f978: push esp; inc ebx; cli; jmp dword ptr [esi - 0x70]; 
0x000fb2e5: push esp; inc esi; push ebx; setne al; ret; 
0x001a7f22: push esp; inc esp; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00166dfc: push esp; int1; call dword ptr [eax - 0x73]; 
0x00031ad6: push esp; jae 0x31ad2; call dword ptr [eax - 0x18]; 
0x000340bb: push esp; je 0x340b7; call dword ptr [esi + 0x50]; 
0x000ebae9: push esp; lahf; stc; call dword ptr [eax - 0x73]; 
0x00151f1c: push esp; mov al, 0xf9; call dword ptr [eax - 0x73]; 
0x0015411f: push esp; mov dl, 0xf9; call dword ptr [eax - 0x73]; 
0x00120607: push esp; mov dword ptr [esp + 8], eax; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x001205ad: push esp; mov eax, 0x135; mov edi, 8; call dword ptr gs:[0x10]; 
0x00120532: push esp; mov eax, 0x19e; mov edi, 8; call dword ptr gs:[0x10]; 
0x00125f78: push esp; mov eax, ebx; pop ebx; pop esi; ret; 
0x0009e2d3: push esp; mov ecx, edi; call dword ptr [eax - 0x73]; 
0x00120649: push esp; mov edx, dword ptr [esp + 0xc]; mov dword ptr [esp + 8], eax; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x000e7cf1: push esp; mov edx, edi; call dword ptr gs:[0x10]; 
0x000e7d90: push esp; mov edx, edi; mov dword ptr [esp + 0xc], eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x000e7d5a: push esp; mov edx, edi; mov dword ptr [esp + 0xc], eax; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000e7c8e: push esp; mov edx, edi; mov esi, ebp; call dword ptr gs:[0x10]; 
0x001160db: push esp; pop ebx; pop esi; ret; 
0x0014e026: push esp; pop esp; stc; call dword ptr [eax - 0x18]; 
0x00175452: push esp; push 8; push ebx; call dword ptr [eax + 0x18]; 
0x0002a2e4: push esp; push dword ptr [esp + 0x54]; call esi; 
0x00029d65: push esp; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x000c3ddd: push esp; push ecx; mov eax, dword ptr [esp + 0x40]; push dword ptr [eax]; call edi; 
0x00127230: push esp; push ecx; stc; call dword ptr [eax + 0x55]; 
0x000d8877: push esp; push es; add byte ptr [ebx - 0x363f4b], cl; dec dword ptr [ebp - 0x661f37a]; call dword ptr [eax - 0x73]; 
0x00145eb1: push esp; ret 0xfff9; 
0x00032bb2: push esp; ret; 
0x00150d74: push esp; scasd eax, dword ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x00077f8d: push esp; sidt [ecx - 0x4fb73]; call dword ptr [eax + 0x50]; 
0x00078caf: push esp; sidt [ecx - 0x51373]; call dword ptr [eax + 0x50]; 
0x00094816: push esp; sldt word ptr [0x1aa5fb]; mov eax, dword ptr [eax + 0x3af4]; ret; 
0x0012d545: push esp; stc; call dword ptr [eax - 0x18]; 
0x0012e478: push esp; stc; call dword ptr [ebx - 0x18]; 
0x0009ebc4: push esp; stc; dec dword ptr [ebx - 0x78727783]; mov ah, 0x89; stc; call dword ptr [eax + 0x68]; 
0x001641a8: push esp; wait; std; jmp dword ptr [esi - 0x70]; 
0x00047721: push esp; xchg dword ptr [ebx + eax*4], eax; ret 0x8901; 
0x000a51b5: push esp; xchg esi, eax; stc; call dword ptr [eax - 0x18]; 
0x000718d6: push esp; xor ah, al; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x0007078a: push esp; xor ah, al; mov ebx, dword ptr [esp + 0xc]; mov ecx, dword ptr [ebx + edx*4 - 0x73734]; add ecx, eax; jmp ecx; 
0x0018a6cd: push esp; xor cl, bh; call dword ptr [eax - 0x73]; 
0x00070fea: push esp; xor esp, eax; mov ebx, dword ptr [esp + 0xc]; mov ecx, dword ptr [ebx + edx*4 - 0x736b4]; add ecx, eax; jmp ecx; 
0x0007213c: push esp; xor esp, eax; mov ebx, dword ptr [esp + 0xc]; mov ecx, dword ptr [ebx + edx*4 - 0x73834]; add ecx, eax; jmp ecx; 
0x0013bc0a: push si; stc; call dword ptr [eax - 1]; 
0x0019a404: push ss; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000260c7: push ss; add byte ptr [0x218d4b], al; mov eax, dword ptr [eax + 0x10bc]; ret; 
0x000260a7: push ss; add byte ptr [0x218d6b], al; mov eax, dword ptr [eax + 0x10b8]; ret; 
0x00025557: push ss; add byte ptr [0x2198bb], al; mov eax, dword ptr [eax + 0xa4]; add eax, dword ptr gs:[0]; ret; 
0x00024fd7: push ss; add byte ptr [0x219e3b], al; lea eax, [eax - 0x690b4]; ret; 
0x00024fb7: push ss; add byte ptr [0x219e5b], al; lea eax, [eax - 0x690ac]; ret; 
0x000eb1a8: push ss; add byte ptr [eax], al; add bl, ch; ret; 
0x000907f0: push ss; add byte ptr [eax], al; add byte ptr [eax + 0x5f], bh; cmovne eax, edx; ret; 
0x00117a78: push ss; add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x0003c740: push ss; add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; pop esi; ret; 
0x0003d180: push ss; add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; ret; 
0x0003c6e0: push ss; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x0008ff1b: push ss; add byte ptr [eax], al; add byte ptr [ebp + 0xbad2], al; add byte ptr [eax], al; cmove eax, edx; ret; 
0x00126cd8: push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000902f0: push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000a69d4: push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x000907bd: push ss; add byte ptr [eax], al; add byte ptr [ebx + 0xa7602fa], al; ret; 
0x000908f9: push ss; add byte ptr [eax], al; add byte ptr [ecx + 0x3ffffa], al; add byte ptr [edi + 0xb], dh; ret; 
0x0007c2df: push ss; add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x000a5b40: push ss; add byte ptr [eax], al; add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00098011: push ss; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x00042ccc: push ss; add byte ptr [ebx - 0x3d76e73c], al; mov eax, 0x10; pop ebx; sub eax, edx; ret; 
0x00042c3a: push ss; add byte ptr [ebx - 0x3d76e73c], al; mov eax, 0x20; pop ebx; sub eax, edx; ret; 
0x00042c9e: push ss; add byte ptr [ebx - 0x3d76e73c], al; mov eax, 0x40; pop ebx; sub eax, edx; ret; 
0x00042c0c: push ss; add byte ptr [ebx - 0x3d76e73c], al; mov eax, 8; pop ebx; sub eax, edx; ret; 
0x00178515: push ss; add esp, 0x74; pop ebx; pop edi; ret; 
0x0003cda0: push ss; add esp, 0x98; pop ebx; ret; 
0x0008e639: push ss; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x000c1b69: push ss; bsf eax, eax; add eax, edx; add eax, ecx; ret; 
0x0013d1d6: push ss; idiv bh; jmp dword ptr [esi - 0x70]; 
0x0013de76: push ss; inc esi; clc; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000b9767: push ss; jne 0xb9e20; pop edi; pop esi; pop ebx; ret; 
0x000c1899: push ss; lea eax, [ecx + eax + 0x20]; ret; 
0x000c15d9: push ss; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x000a9480: push ss; lea eax, [edx - 0xabbf4]; test byte ptr [ecx + 0x19c], 1; lea edx, [edx - 0xab574]; cmovne eax, edx; ret; 
0x0013d6b0: push ss; lea eax, [edx - 0xabc04]; test byte ptr [ecx + 0x19c], 1; lea edx, [edx - 0xab584]; cmovne eax, edx; ret; 
0x000b9961: push ss; mov byte ptr [edi], dl; pop edi; pop esi; pop ebx; ret; 
0x000c0a94: push ss; mov dword ptr [eax], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd651: push ss; mov dword ptr [eax], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0012d965: push ss; mov dword ptr [eax], edx; pop ebx; pop esi; pop edi; ret; 
0x000b9991: push ss; mov dword ptr [edi], edx; pop edi; pop esi; pop ebx; ret; 
0x000fb68f: push ss; mov ecx, dword ptr [esp + 0xc]; mov eax, 0xdb; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0005b556: push ss; mov edi, ebp; dec dword ptr [ebp - 0x6866b7a]; call dword ptr [eax - 0x73]; 
0x00024db4: push ss; mov edx, 1; xor ebx, ebx; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x000c0a65: push ss; mov word ptr [eax], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bd632: push ss; mov word ptr [eax], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b9972: push ss; mov word ptr [edi], dx; pop edi; pop esi; pop ebx; ret; 
0x0018b998: push ss; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x00054fc8: push ss; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000bb264: push ss; pop edi; pop esi; pop ebx; ret; 
0x00122e90: push ss; ret; 
0x0018c6d5: push ss; sti; jmp dword ptr [esi - 0x70]; 
0x0008a3a7: push ss; sub esp, 4; push edx; push dword ptr [esp + 0x3c]; push ebp; call dword ptr [esi + 0x20]; 
0x00060651: push ss; xor bh, cl; call dword ptr [eax + 0x6a]; 
0x00091192: push ss; xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x0019554b: pushal; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001713f8: pushal; add al, 0x8d; mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x0008dd8b: pushal; add al, byte ptr [eax]; add byte ptr [ecx + 0x4c48310], cl; pop ebx; pop esi; ret; 
0x00123671: pushal; add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x0010e2c5: pushal; add cl, al; call 0xfe11bcf; dec edi; ret 0xbce9; 
0x000657bb: pushal; add eax, dword ptr [eax]; add byte ptr [ebx + 0xf44244c], cl; mov edi, 0xfc985d0; inc ebp; ret 0xc189; 
0x001113ef: pushal; add ecx, edi; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x0017c6e8: pushal; and al, 0x8d; mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x00170f87: pushal; and al, byte ptr [eax]; add byte ptr [ebx - 0x7f], dl; ret; 
0x0017c70c: pushal; and byte ptr [esi - 0x70], ah; xor eax, eax; ret; 
0x0007ee78: pushal; dec esp; cli; jmp dword ptr [esi - 0x70]; 
0x000b814c: pushal; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000b3c5c: pushal; idiv edi; jmp dword ptr [esi + 0xf]; 
0x000abfdc: pushal; imul eax, dword ptr [ecx], 0; add esp, 0x18; pop ebx; ret; 
0x00040c7e: pushal; jbe 0x40c7a; call dword ptr [eax - 0x73]; 
0x0005b534: pushal; jns 0x5b530; call dword ptr [eax - 0x18]; 
0x000eb5ba: pushal; lahf; stc; call dword ptr [eax - 0x73]; 
0x0012fedd: pushal; lea ecx, [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x001231db: pushal; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x000deab3: pushal; lea edx, [esp + 0x2c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0009cde1: pushal; mov cl, bh; call dword ptr [eax - 0x18]; 
0x00132369: pushal; mov dword ptr [esp + 0x24], esi; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00179bb1: pushal; mov dword ptr [esp + 0x34], edx; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x0012f5fc: pushal; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x0017410a: pushal; mov eax, dword ptr [ecx]; mov ecx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [ecx + 8]; 
0x000285eb: pushal; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0002ade3: pushal; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x00115f51: pushal; mov eax, ecx; pop ebx; pop esi; pop edi; ret; 
0x0013342f: pushal; mov ebx, dword ptr [esp + 0x50]; mov ecx, dword ptr [esp + 8]; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x001300a5: pushal; mov ecx, dword ptr [esp + 0x64]; lea esi, [esp + 0x2c]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x00130133: pushal; mov ecx, dword ptr [esp + 0x64]; mov eax, 0x145; mov esi, edi; call dword ptr gs:[0x10]; 
0x00130005: pushal; mov ecx, dword ptr [esp + 0x64]; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x000deb23: pushal; mov edx, dword ptr [esp + 0xc]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0012178a: pushal; mov esi, dword ptr [esp + 0x6c]; mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x001216c4: pushal; mov esi, dword ptr [esp + 0x6c]; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000baabc: pushal; or al, byte ptr [eax]; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00090805: pushal; or bl, bh; xor eax, eax; ret; 
0x001395ac: pushal; or byte ptr [eax], al; add byte ptr [ebx + 0x39101e5c], cl; ret 0x820f; 
0x000906c6: pushal; or dh, bh; xor eax, eax; ret; 
0x00116147: pushal; pop ebx; pop esi; pop edi; ret; 
0x000247ce: pushal; pop ecx; stc; call dword ptr [eax - 1]; 
0x000c349c: pushal; pop ss; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x00029138: pushal; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; call edi; 
0x0002addf: pushal; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x001628ba: pushal; stc; call dword ptr [eax + 0x55]; 
0x00161813: pushal; stc; call dword ptr [eax - 0x18]; 
0x001619c6: pushal; stc; call dword ptr [eax - 0x73]; 
0x001632be: pushal; stc; call dword ptr [eax - 1]; 
0x00163e41: pushal; stc; call dword ptr [ebp - 0x73]; 
0x00162966: pushal; stc; call dword ptr [edx + 0x50]; 
0x0005df9b: pushal; std; dec dword ptr [ebx - 0x8b4b]; dec dword ptr [ebp - 0x684677a]; call dword ptr [eax - 0x73]; 
0x0005dfc0: pushal; std; dec dword ptr [ebx - 0x8b63]; dec dword ptr [ebp - 0x684677d]; call dword ptr [eax - 0x73]; 
0x000a56c9: pushal; xchg edi, eax; stc; call dword ptr [eax - 0x18]; 
0x00031b50: pushfd; adc dword ptr [eax], eax; add byte ptr [ecx], cl; ret 0x850f; 
0x0011ced8: pushfd; add al, 0xf9; dec dword ptr [edi]; inc ebp; ret 0x4489; 
0x00034850: pushfd; add byte ptr [eax], al; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x0009b120: pushfd; add byte ptr [eax], al; add byte ptr [ebx + 0x10408300], cl; add dword ptr [ebx + 0x458d1470], ecx; inc dword ptr [ebx - 0x69f00208]; ret; 
0x000a028f: pushfd; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b20c4], al; pop edi; ret; 
0x0003cb0c: pushfd; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00140bd5: pushfd; add byte ptr [eax], al; add byte ptr [ebx - 0x76e3db84], cl; ret; 
0x000d008e: pushfd; add byte ptr [eax], al; add byte ptr [ebx - 0x7c9fdb8c], cl; ret 0xf7ff; 
0x00048fec: pushfd; add byte ptr [eax], al; add byte ptr [ebx - 0x7ca7dba4], cl; ret 0xf7ff; 
0x000c962e: pushfd; add byte ptr [eax], al; add byte ptr [ebx - 0x7cabdba4], cl; ret 0xf7ff; 
0x001b4387: pushfd; add byte ptr [eax], al; add byte ptr [ecx], al; sal dh, cl; ret 0x7406; 
0x000db48f: pushfd; add byte ptr [eax], al; add byte ptr [ecx], ch; ret; 
0x0010672d: pushfd; add byte ptr [eax], al; add cl, ch; ret 0xfffa; 
0x000fdfcf: pushfd; add byte ptr [eax], al; add dh, dh; add al, 0x42; add dword ptr [esi + ecx - 0x77], esi; ret; 
0x00115d40: pushfd; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x001b134d: pushfd; add dword ptr [eax], eax; add byte ptr [ecx + 0x7c89193c], cl; sbb dword ptr [ebx + eax*4], eax; ret; 
0x000a9449: pushfd; add dword ptr [eax], eax; add byte ptr [ecx*4 - 0x942f36e], al; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000aa159: pushfd; add dword ptr [eax], eax; add byte ptr [ecx*4 - 0x952736e], al; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a9489: pushfd; add dword ptr [eax], eax; add byte ptr [ecx], al; lea edx, [edx - 0xab574]; cmovne eax, edx; ret; 
0x0013d6b9: pushfd; add dword ptr [eax], eax; add byte ptr [ecx], al; lea edx, [edx - 0xab584]; cmovne eax, edx; ret; 
0x000a8b6e: pushfd; add dword ptr [eax], eax; add dh, dh; ret; 
0x0012eea1: pushfd; and al, 0x84; add byte ptr [eax], al; add byte ptr [eax + 0x6c], bh; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0009f4f2: pushfd; and al, 0x90; add byte ptr [eax], al; add byte ptr [eax + 0x119], bh; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0012ef79: pushfd; and al, 0x94; add byte ptr [eax], al; add byte ptr [ebx + 0xa024b4], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000db48d: pushfd; and al, 0x9c; add byte ptr [eax], al; add byte ptr [ecx], ch; ret; 
0x0010672b: pushfd; and al, 0x9c; add byte ptr [eax], al; add cl, ch; ret 0xfffa; 
0x0009a42e: pushfd; and al, 0xa0; add byte ptr [eax], al; add byte ptr [eax + 0xaf], bh; mov esi, 8; call dword ptr gs:[0x10]; 
0x000c996b: pushfd; and al, 0xb4; add byte ptr [eax], al; add byte ptr [ebx - 0x6bf0fe06], al; ret 0xc339; 
0x00177c36: pushfd; and al, 0xe0; add byte ptr [eax], al; add byte ptr [ebx + 0x50], dl; call dword ptr [edx + 8]; 
0x0019787d: pushfd; and edi, edi; inc dword ptr [ecx + 0x43fafc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0011f085: pushfd; call 0x114f20; add esp, 0x1c; ret; 
0x0011f541: pushfd; call 0x115940; add esp, 0x18; pop ebx; ret; 
0x0011f565: pushfd; call 0x115b20; add esp, 0x1c; ret; 
0x001303cd: pushfd; call 0x11f6e0; add esp, 0x20; add esp, 0xc; ret; 
0x0011f6c8: pushfd; call 0x11f6e0; add esp, 0x2c; ret; 
0x00170360: pushfd; frndint; jmp dword ptr [esi - 0x70]; 
0x000a7a26: pushfd; inc esp; stc; call dword ptr [eax + 0x57]; 
0x00086f1b: pushfd; jg 0x86f02; call dword ptr [eax - 1]; 
0x000fad1a: pushfd; ljmp 0x47bc:0x808dffff; stc; call dword ptr [eax + 0x6a]; 
0x000fae01: pushfd; ljmp 0x8d08:0xec83ffff; add byte ptr [edx], 0x48; stc; call dword ptr [eax + 0x53]; 
0x000fae5e: pushfd; ljmp 0x8d08:0xec83ffff; add byte ptr [edx], 0x48; stc; call dword ptr [eax - 1]; 
0x000a8b00: pushfd; mov bh, 0xf6; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a3de6: pushfd; mov ch, 0x38; add al, 0; add bl, ch; ret 0x9066; 
0x00153c1f: pushfd; mov cl, 0xf9; call dword ptr [eax - 0x73]; 
0x001542ff: pushfd; mov dl, 0xf9; call dword ptr [eax - 0x73]; 
0x0015dfea: pushfd; or al, byte ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0019937d: pushfd; or bh, bh; inc dword ptr [ecx + 0x4272fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000edc86: pushfd; or byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x001656b8: pushfd; push -0xe; call dword ptr [eax - 0x18]; 
0x000c668b: pushfd; rcr byte ptr [esi - 9], 0xd8; cmp ecx, edi; pop edi; cmovg eax, edx; ret; 
0x0005f36b: pushfd; ret 0xb60f; 
0x0014d985: pushfd; ret 3; 
0x000c6aac: pushfd; salc; idiv bh; test byte ptr [ecx + 0x7b], 4; cmove eax, edx; ret; 
0x0009c144: pushfd; shl ebp, 1; call dword ptr [ecx + 0x50]; 
0x000c62fb: pushfd; stc; call dword ptr [eax - 0x18]; 
0x000c4854: pushfd; stc; call dword ptr [eax - 0x73]; 
0x000c5b1f: pushfd; stc; call dword ptr [edx - 0x73]; 
0x001840cb: pushfd; sti; jmp dword ptr [esi - 0x70]; 
0x000ac2c1: pushfd; xor al, ch; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x00061ac2: pushfd; xor bh, cl; call dword ptr [eax + 0x6a]; 
0x00082571: rcl byte ptr [eax + 0x52]; push edi; call dword ptr [ebx + 0x38]; 
0x00136bdc: rcl byte ptr [eax - 0x73]; xchg dword ptr [ebp + edx*2 - 7], ebp; call dword ptr [eax - 1]; 
0x0002718a: rcl byte ptr [eax], 0; add byte ptr [ebp - 0x7cec8b40], al; in al, dx; or byte ptr [ebp - 0x218ef36d], cl; call dword ptr [edx + 0x50]; 
0x000a484b: rcl byte ptr [eax], 0x39; ret 0x820f; 
0x000b0069: rcl byte ptr [eax], 0x5f; pop esi; ret; 
0x0019e05f: rcl byte ptr [eax], 0x83; ret 0x5310; 
0x001a0eb5: rcl byte ptr [eax], 0x83; ret 0x5710; 
0x0019bb9d: rcl byte ptr [eax], 0x83; ret 0x8310; 
0x00133d24: rcl byte ptr [eax], 0x83; ret 0x890c; 
0x000d8b59: rcl byte ptr [eax], 0x83; ret 0x8910; 
0x000c662c: rcl byte ptr [eax], 0x83; ret 0x8b10; 
0x000c0874: rcl byte ptr [eax], 0xf; mov esp, 0x93b3e8d2; or al, 0; add ecx, 0x10c776; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bd574: rcl byte ptr [eax], 0xf; mov esp, 0xc6b3e8d2; or al, 0; add ecx, 0x10f9f6; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008dd3c: rcl byte ptr [ebx - 7], 0xff; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x00172e5c: rcl byte ptr [ecx - 0x3b7d0000]; adc byte ptr [ebp - 0x7cd68b40], al; in al, dx; add al, 0x83; ret; 
0x0017b5ef: rcl byte ptr [edi - 0x18], 0x2a; js 0x17b5e9; call ecx; 
0x0017b50f: rcl byte ptr [edi - 0x18], 0xa; jns 0x17b509; call ecx; 
0x001479dc: rcl byte ptr [edx + 0x6a]; or dword ptr [ebx - 0x72dfdba4], ecx; cmp dword ptr [edi], 0x5a; stc; call dword ptr [eax + 0x51]; 
0x0009118e: rcl cl, 1; call 0xf63a2809; mov eax, ebp; call dword ptr gs:[0x10]; 
0x000916ee: rcl cl, 1; call 0xf63a3069; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x001500ab: rcl dword ptr [eax + 0x4dec], 0xf6; ret 0xf01; 
0x00083bee: rcl dword ptr [eax - 0x2d7a3fcf], 0xf; xchg ebp, eax; sar byte ptr [ebx], 0x9e; push 0xf000001; xchg esp, eax; ret 0x9e3b; 
0x0013bc06: rcl dword ptr [eax - 0x73], 0x87; push si; stc; call dword ptr [eax - 1]; 
0x000c0f34: rcl dword ptr [eax], 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c1645: rcl dword ptr [eax], 0x83; ret 0x2910; 
0x000c08a0: rcl dword ptr [ebp - 0x39], 0x10; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b9e7e: rcl dword ptr [ebx + 0x2f], 0x11; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000c09e2: rcl dword ptr [ebx + 0x30010c6], 0xc; cdq; jmp ecx; 
0x0009cf72: rcl dword ptr [ebx - 0x75], 0x40; add al, 0xe8; mov eax, dword ptr [0x81000ecc]; ret; 
0x001717eb: rcl dword ptr [ecx + 0x52], 0x89; push esp; and al, 0x14; push dword ptr [esi]; call dword ptr [esi + 0x20]; 
0x000bb59a: rcl dword ptr [edi + 0x3001119], 0xc; cdq; jmp ecx; 
0x000bd5e3: rcl dword ptr [edx + 0x30010f9], 0xc; xchg ecx, eax; jmp ecx; 
0x000bd521: rcl dword ptr [edx + edi*8 + 0x10], 0; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c08e3: rcl dword ptr [edx], 0xc7; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0002ed9b: rcl dword ptr [edx]; add byte ptr [ebx - 0x72bbdb84], cl; xchg dword ptr [ecx + ebp*2 - 7], ebp; call dword ptr [eax - 0x73]; 
0x000bd5a0: rcl ebp, 0xf9; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00189c8a: rcl ebx, 0xe3; sar eax, 5; or dword ptr [edx + eax*4], ebx; xor eax, eax; pop ebx; ret; 
0x00134c31: rcr byte ptr [eax], 0x39; ror byte ptr [edi], 1; inc ebx; shr byte ptr [ecx], 1; ret 0xe801; 
0x0016c159: rcr byte ptr [eax], 0x50; call 0x16bf00; add esp, 0x2c; ret; 
0x0004a2ac: rcr byte ptr [ebp + 0x7c8bfffe], 0x24; sbb byte ptr [ebp - 0x687bf79], cl; call dword ptr [eax - 0x73]; 
0x0013c03f: rcr byte ptr [ebx + 0x5e], 0x5d; ret; 
0x0002523f: rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x00040c3d: rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x000262d4: rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x0013f7b6: rcr byte ptr [ebx + 0x5e], 1; pop edi; ret; 
0x00059f10: rcr byte ptr [ebx + 0x5e], 1; ret 4; 
0x00053e7b: rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000abc71: rcr byte ptr [ebx + 0x5e], cl; mov eax, edx; pop edi; pop ebp; ret; 
0x00094b68: rcr byte ptr [ebx + 0x5e], cl; mov eax, edx; ret; 
0x001558f0: rcr byte ptr [ebx + 0x5f], 1; ret; 
0x00192c20: rcr byte ptr [ebx + 0xf], 1; mov dh, 0xc0; neg eax; ret; 
0x0003eaaa: rcr byte ptr [ebx - 0x77], cl; rcr byte ptr [esi + 0x5f], 1; pop ebp; ret; 
0x00196c1a: rcr byte ptr [ebx - 6], cl; jmp dword ptr [esi - 0x70]; 
0x00088ca9: rcr byte ptr [ebx - 9], 0xd8; ret; 
0x00176000: rcr byte ptr [ebx], 0x89; loope 0x175f8e; ret 0x25; 
0x0005c761: rcr byte ptr [ebx], 0x89; ret 0x25; 
0x000f1f95: rcr byte ptr [ebx], 0x89; ret; 
0x0018b2a9: rcr byte ptr [ecx - 0x74acafae], 1; inc esp; and al, 0x18; call dword ptr [eax + 0x40]; 
0x0011b15b: rcr byte ptr [ecx], 0xd1; sbb eax, 0; pop ebx; pop esi; ret; 
0x000a1bd9: rcr byte ptr [ecx], cl; add byte ptr [ebx - 0x77], dl; ret; 
0x001a7852: rcr byte ptr [edi + 0x5d], 0x5b; ret; 
0x000abc75: rcr byte ptr [edi + 0x5d], 1; ret; 
0x001948b2: rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x000b005d: rcr byte ptr [edi + 0x5e], 1; ret; 
0x00090e8c: rcr byte ptr [edi + edi*8 - 1], 0x89; ret 0x5ae9; 
0x00175a36: rcr byte ptr [edi + edi*8], 0xb0; nop; add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; 
0x000a5c1c: rcr byte ptr [edx + 0x5b], 0x5e; ret; 
0x00156eef: rcr byte ptr [edx], 0x89; ret 0x25; 
0x0010dc06: rcr byte ptr [edx], 0x89; ret 0x8d89; 
0x000402eb: rcr byte ptr [esi + 0x5f], 0x5d; ret; 
0x00126c11: rcr byte ptr [esi + 0x5f], 0xf; mov dh, 0xc0; ret; 
0x0003eaad: rcr byte ptr [esi + 0x5f], 1; pop ebp; ret; 
0x00053782: rcr byte ptr [esi + 0x5f], 1; ret; 
0x000c668c: rcr byte ptr [esi - 9], 0xd8; cmp ecx, edi; pop edi; cmovg eax, edx; ret; 
0x00030ad9: rcr byte ptr [esi], 0x89; loope 0x30a67; ret 0x25; 
0x00030d69: rcr byte ptr [esi], 0x89; loope 0x30cf7; ret 0x25; 
0x000a1bd8: rcr byte ptr ds:[ecx], cl; add byte ptr [ebx - 0x77], dl; ret; 
0x000ba986: rcr dword ptr [ebx + 0x3001124], 0xc; xchg ecx, eax; jmp ecx; 
0x00053710: rcr dword ptr [ebx + 0x5e], 1; sbb eax, eax; and eax, 2; sub eax, 1; ret; 
0x000b93e5: rcr dword ptr [ecx + edi + 0x11], 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00141c87: rcr dword ptr [ecx], 0xd2; mov eax, edx; pop ebx; pop esi; ret; 
0x00043090: rcr dword ptr [ecx], 0xd3; pop ebx; setb al; ret; 
0x0013fedb: rcr dword ptr [ecx], 0xff; inc dword ptr [ebp - 0x768f8740]; ret; 
0x000baa42: rcr dword ptr [edi + 0x24], 0x11; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b9262: rcr dword ptr [edi + 0x3a], 0x11; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0015feee: rcr dword ptr [edi - 7], cl; call dword ptr [eax - 1]; 
0x000b9422: rcr dword ptr [edi], 0x39; adc dword ptr [eax], eax; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c085b: rcr dword ptr [edx + 0x30010c7], 0xc; xchg ecx, eax; jmp ecx; 
0x000baa87: rcr dword ptr [edx], 0x24; adc dword ptr [eax], eax; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bd55b: rcr dword ptr [edx], 0xfa; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b9364: rcr ebp, 0x39; adc dword ptr [eax], eax; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c0998: rcr ebp, 0xc6; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba9c6: rcr ebx, 0x24; adc dword ptr [eax], eax; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x001456e3: rcr edx, 0xed; dec dword ptr [ecx - 0x76d3dbbc]; ret; 
0x0012f41a: rdpkru; lea ecx, [ebx + ebx]; pop ebx; shr eax, cl; and eax, 3; ret; 
0x0010e3a0: rdtsc; rol byte ptr [ebx + 0xf5bfff8], cl; inc esp; ret 0x2ec3; 
0x000c24da: rep movsb byte ptr es:[edi], byte ptr [esi]; pop eax; mov edi, eax; mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x00090870: rep movsd dword ptr es:[edi], dword ptr [esi]; mov byte ptr [edx + 0x88], 1; add esp, 4; pop esi; pop edi; ret; 
0x0015624f: rep movsd dword ptr es:[edi], dword ptr [esi]; mov dword ptr [eax + 0x7c], 0; add esp, 4; pop esi; pop edi; ret; 
0x000c255d: rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; cld; pop edi; ret; 
0x000c2533: rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x00090478: rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x000c259c: rep movsd dword ptr es:[edi], dword ptr [esi]; xchg edi, eax; mov esi, edx; ret; 
0x000c25fb: rep stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000c25f7: rep stosd dword ptr es:[edi], eax; mov ecx, edx; rep stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0010cc26: rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x00028aca: ret 0; 
0x0008f654: ret 0x100; 
0x00061fd3: ret 0x101; 
0x00186ed8: ret 0x105; 
0x0008f9d5: ret 0x1074; 
0x000a6bd5: ret 0x1089; 
0x000a3dc1: ret 0x108; 
0x000b2c3a: ret 0x10; 
0x0005ab1a: ret 0x10b4; 
0x00042cd2: ret 0x10b8; 
0x000e1b91: ret 0x10e9; 
0x000a1ef3: ret 0x110; 
0x0008dcda: ret 0x113b; 
0x000980ef: ret 0x118b; 
0x000cc241: ret 0x11; 
0x000decfa: ret 0x11b; 
0x00061905: ret 0x11f; 
0x0004d0fe: ret 0x127e; 
0x000d7242: ret 0x12e9; 
0x001235ac: ret 0x1389; 
0x0005a203: ret 0x13eb; 
0x00027414: ret 0x142b; 
0x000337cf: ret 0x1474; 
0x000af864: ret 0x1489; 
0x00151a01: ret 0x148b; 
0x000d3208: ret 0x148d; 
0x000cf2bd: ret 0x14; 
0x0013ecca: ret 0x14b; 
0x0017ca38: ret 0x1572; 
0x0008729f: ret 0x157d; 
0x0013d88a: ret 0x158b; 
0x0004f557: ret 0x15; 
0x00096f09: ret 0x15e9; 
0x0004543a: ret 0x165; 
0x00146b2f: ret 0x1674; 
0x000c15d7: ret 0x1676; 
0x000c1897: ret 0x167c; 
0x000d3145: ret 0x1689; 
0x00042c0a: ret 0x16a1; 
0x000dece6: ret 0x16d; 
0x0009e4d2: ret 0x16eb; 
0x0011bd5d: ret 0x1772; 
0x0009af96: ret 0x1774; 
0x0012d69a: ret 0x177b; 
0x0012cdbf: ret 0x1789; 
0x001895a5: ret 0x178b; 
0x0013d64a: ret 0x17cb; 
0x0009d61a: ret 0x17fb; 
0x0013d5fa: ret 0x181b; 
0x0007d5ca: ret 0x184b; 
0x00171557: ret 0x186; 
0x0013d5aa: ret 0x186b; 
0x00149815: ret 0x1875; 
0x000c34dc: ret 0x188b; 
0x0012d57a: ret 0x189b; 
0x0002376a: ret 0x18; 
0x00071b69: ret 0x18b; 
0x000dc34b: ret 0x190; 
0x0003d4ea: ret 0x192b; 
0x0012473a: ret 0x195; 
0x001479a7: ret 0x1988; 
0x0002c245: ret 0x1a73; 
0x0009af7c: ret 0x1a75; 
0x00104fca: ret 0x1a8; 
0x000a5339: ret 0x1a8b; 
0x0003d37a: ret 0x1a9b; 
0x00092b68: ret 0x1a; 
0x0017d2aa: ret 0x1b6b; 
0x00123b7f: ret 0x1b75; 
0x00049393: ret 0x1b8; 
0x00082bae: ret 0x1b; 
0x00100c6b: ret 0x1be; 
0x001734a1: ret 0x1beb; 
0x00100871: ret 0x1c7e; 
0x000e3cc6: ret 0x1c8d; 
0x000c5a48: ret 0x1ce9; 
0x0003d0ea: ret 0x1d2b; 
0x0019ce3e: ret 0x1d72; 
0x000a23b6: ret 0x1d73; 
0x000c105e: ret 0x1d75; 
0x0003d09a: ret 0x1d7b; 
0x000fb60e: ret 0x1db8; 
0x000df3bd: ret 0x1db9; 
0x0012013a: ret 0x1db; 
0x0005a1bf: ret 0x1e74; 
0x00053d00: ret 0x1e89; 
0x0009cf06: ret 0x1f0f; 
0x00141ced: ret 0x1f72; 
0x00053c0d: ret 0x1f74; 
0x001ac3ce: ret 0x1f75; 
0x00042b3d: ret 0x1f; 
0x000dab8b: ret 0x1fb8; 
0x000348f0: ret 0x200; 
0x0018babd: ret 0x202; 
0x0008cd8a: ret 0x208b; 
0x00032b9b: ret 0x20; 
0x00042c40: ret 0x20b8; 
0x000490b6: ret 0x20e9; 
0x0004a421: ret 0x2174; 
0x00187cb5: ret 0x21eb; 
0x0004a8f4: ret 0x22e9; 
0x0003c181: ret 0x2474; 
0x0003c98a: ret 0x248b; 
0x001763e9: ret 0x248c; 
0x0013c8ca: ret 0x254b; 
0x00025909: ret 0x25; 
0x00155bfc: ret 0x2675; 
0x000c15c7: ret 0x2676; 
0x000c1887: ret 0x267c; 
0x00100867: ret 0x267e; 
0x000c1079: ret 0x275; 
0x000892e0: ret 0x2773; 
0x000b046a: ret 0x280f; 
0x000c33cc: ret 0x288b; 
0x0011e14a: ret 0x28; 
0x000d32a0: ret 0x28b; 
0x0005d3ca: ret 0x2901; 
0x000b9278: ret 0x2910; 
0x0010c4ea: ret 0x292b; 
0x000c1718: ret 0x2940; 
0x000e30a4: ret 0x2964; 
0x000ac48a: ret 0x298b; 
0x0018c47a: ret 0x299b; 
0x0012c45a: ret 0x29bb; 
0x000ac39a: ret 0x2a7b; 
0x00109879: ret 0x2a7e; 
0x000ac35a: ret 0x2abb; 
0x00023ed0: ret 0x2ae8; 
0x000ac31a: ret 0x2afb; 
0x0008370a: ret 0x2b2c; 
0x000ac2da: ret 0x2b3b; 
0x000aa044: ret 0x2b73; 
0x000ac29a: ret 0x2b7b; 
0x0010c27a: ret 0x2b9b; 
0x000ac25a: ret 0x2bbb; 
0x0010c1da: ret 0x2c3b; 
0x0013d292: ret 0x2c6; 
0x001a653a: ret 0x2c73; 
0x001399b2: ret 0x2d3c; 
0x0003c0b7: ret 0x2d5e; 
0x00198c0e: ret 0x2d72; 
0x0009656c: ret 0x2d75; 
0x000ec4d5: ret 0x2db9; 
0x000c1b81: ret 0x2e10; 
0x000aa77f: ret 0x2e74; 
0x001527f8: ret 0x2e8; 
0x001490f3: ret 0x2eb8; 
0x00028394: ret 0x2ec3; 
0x0007bf2a: ret 0x2eeb; 
0x00035222: ret 0x2f72; 
0x0017a001: ret 0x2feb; 
0x000dbdfa: ret 0x301b; 
0x0004192a: ret 0x3039; 
0x0003bd8d: ret 0x3088; 
0x0010726e: ret 0x30f; 
0x0008bd0a: ret 0x310b; 
0x0012e4ec: ret 0x3113; 
0x00048bca: ret 0x311c; 
0x000abc8a: ret 0x318b; 
0x001a6efb: ret 0x3273; 
0x000d3d17: ret 0x328b; 
0x00038959: ret 0x3325; 
0x000a6f9a: ret 0x3374; 
0x0016ba86: ret 0x338f; 
0x0003b9df: ret 0x3436; 
0x00091048: ret 0x348b; 
0x000a82cb: ret 0x348d; 
0x00059e41: ret 0x3574; 
0x00069bda: ret 0x35; 
0x0012b7da: ret 0x363b; 
0x000c1877: ret 0x367c; 
0x0012b6fa: ret 0x371b; 
0x0012b65a: ret 0x37bb; 
0x000ab9f4: ret 0x3801; 
0x00103538: ret 0x3839; 
0x000c1043: ret 0x3875; 
0x000fb59a: ret 0x387b; 
0x000a6c56: ret 0x38b; 
0x000286cb: ret 0x3901; 
0x00030e9c: ret 0x3902; 
0x0003a36a: ret 0x3903; 
0x000298b5: ret 0x3904; 
0x0005dffe: ret 0x3906; 
0x001ae005: ret 0x3908; 
0x000de62b: ret 0x3909; 
0x00177b30: ret 0x390c; 
0x0009ea53: ret 0x3910; 
0x0018588e: ret 0x3914; 
0x000a6c5d: ret 0x3964; 
0x000ab4aa: ret 0x396b; 
0x000c15b4: ret 0x3976; 
0x000acdbe: ret 0x3990; 
0x000da42a: ret 0x39f5; 
0x0003039c: ret 0x3a3c; 
0x001ac3b3: ret 0x3a75; 
0x0007ac60: ret 0x3a8b; 
0x0014b33a: ret 0x3adb; 
0x00039fa3: ret 0x3b01; 
0x00149ea5: ret 0x3b04; 
0x001857cd: ret 0x3b58; 
0x000570bd: ret 0x3b8; 
0x000fb23a: ret 0x3bdb; 
0x0005115d: ret 0x3be9; 
0x0007d68d: ret 0x3c01; 
0x00180c71: ret 0x3c75; 
0x000452df: ret 0x3c83; 
0x000da404: ret 0x3c8d; 
0x000fb10a: ret 0x3d0b; 
0x000a979a: ret 0x3d73; 
0x001819bc: ret 0x3d74; 
0x00061398: ret 0x3d; 
0x001a6525: ret 0x3e73; 
0x00080c42: ret 0x3e89; 
0x0011af8a: ret 0x3e8b; 
0x00109987: ret 0x3f8b; 
0x000c1be7: ret 0x3f; 
0x0008ae4a: ret 0x3fcb; 
0x00083699: ret 0x3fe9; 
0x001b284e: ret 0x4000; 
0x000a96da: ret 0x4073; 
0x0015c2f1: ret 0x4089; 
0x000a0185: ret 0x408b; 
0x00057114: ret 0x408d; 
0x00042ca4: ret 0x40b8; 
0x0005aab4: ret 0x40c7; 
0x0005ad1a: ret 0x40fb; 
0x0014c175: ret 0x4189; 
0x0005dda6: ret 0x418d; 
0x0013ac4a: ret 0x41cb; 
0x000ff019: ret 0x41e9; 
0x00027b3c: ret 0x420f; 
0x000dc245: ret 0x428d; 
0x000a1816: ret 0x430; 
0x000372d8: ret 0x430f; 
0x0005aa9a: ret 0x437b; 
0x00172a8f: ret 0x4388; 
0x00096cd5: ret 0x438d; 
0x00147e8e: ret 0x4439; 
0x0007af94: ret 0x447c; 
0x00137002: ret 0x4483; 
0x000289e0: ret 0x4489; 
0x0002d814: ret 0x448b; 
0x0005e00a: ret 0x448d; 
0x0002d369: ret 0x44c7; 
0x0005654a: ret 0x44f6; 
0x00141c48: ret 0x4572; 
0x000981f8: ret 0x4575; 
0x0008276f: ret 0x4589; 
0x00030d0f: ret 0x458b; 
0x00048973: ret 0x458d; 
0x000dc4cc: ret 0x45c7; 
0x00050173: ret 0x45e9; 
0x00140fb6: ret 0x460f; 
0x00137654: ret 0x4639; 
0x0007ac96: ret 0x4689; 
0x0005c53d: ret 0x468b; 
0x0007a236: ret 0x468d; 
0x00142b57: ret 0x470; 
0x000dc6a7: ret 0x470f; 
0x00104976: ret 0x474; 
0x000a9a84: ret 0x4774; 
0x0014a58b: ret 0x4789; 
0x00035297: ret 0x478b; 
0x0011b5b7: ret 0x478d; 
0x00171539: ret 0x4889; 
0x001388bd: ret 0x488b; 
0x00156382: ret 0x488d; 
0x001217e0: ret 0x489; 
0x0005ae21: ret 0x48b; 
0x00041f05: ret 0x48d; 
0x001aa773: ret 0x498d; 
0x0008a3da: ret 0x4a3b; 
0x00082633: ret 0x4a75; 
0x000c1a64: ret 0x4a8d; 
0x0013e96a: ret 0x4ab; 
0x000aa2da: ret 0x4b3b; 
0x000c6280: ret 0x4b8b; 
0x00028a3c: ret 0x4b8d; 
0x0007a4f7: ret 0x4be9; 
0x000ee52b: ret 0x4be; 
0x00031a74: ret 0x4c0f; 
0x00064ded: ret 0x4c22; 
0x001a6ee1: ret 0x4c73; 
0x000e0eca: ret 0x4c80; 
0x001b308b: ret 0x4c83; 
0x000298a1: ret 0x4c89; 
0x0002ffcd: ret 0x4c8b; 
0x0008e94a: ret 0x4cb; 
0x000aa13a: ret 0x4cdb; 
0x00031a7f: ret 0x4d0f; 
0x000aa0fa: ret 0x4d1b; 
0x0018bbc0: ret 0x4d72; 
0x00066fd7: ret 0x4e0f; 
0x00099fba: ret 0x4e5b; 
0x00052b6f: ret 0x4e74; 
0x0013e5f1: ret 0x4e8b; 
0x00096ca9: ret 0x4f0f; 
0x00123b45: ret 0x4f75; 
0x0013a44c: ret 0x4f89; 
0x00073abc: ret 0x4f8d; 
0x0014c978: ret 0x5001; 
0x000dc2ef: ret 0x5005; 
0x00088e19: ret 0x5052; 
0x001a6510: ret 0x5073; 
0x000682f5: ret 0x5074; 
0x000a62a1: ret 0x508d; 
0x0004d200: ret 0x5152; 
0x000362d0: ret 0x5201; 
0x0017fa98: ret 0x5204; 
0x001749f8: ret 0x5208; 
0x000b03ee: ret 0x528d; 
0x000c5b40: ret 0x52e9; 
0x0019e062: ret 0x5310; 
0x00089282: ret 0x532b; 
0x000afcc3: ret 0x5350; 
0x0017dbaa: ret 0x5356; 
0x000c1028: ret 0x5375; 
0x000fffbe: ret 0x5388; 
0x000d2f0b: ret 0x5389; 
0x0011180f: ret 0x538d; 
0x00189a6a: ret 0x53ab; 
0x0007ea79: ret 0x5403; 
0x00064e0d: ret 0x540b; 
0x00100e0f: ret 0x5420; 
0x00149167: ret 0x5439; 
0x00151339: ret 0x5473; 
0x0014933c: ret 0x5484; 
0x000452e8: ret 0x5488; 
0x0002df09: ret 0x5489; 
0x000e7caa: ret 0x548b; 
0x0015c892: ret 0x548d; 
0x0010722c: ret 0x5523; 
0x0005605b: ret 0x5552; 
0x001ac398: ret 0x5575; 
0x0005c42c: ret 0x5589; 
0x00103006: ret 0x5603; 
0x001a71f4: ret 0x5608; 
0x00082880: ret 0x562b; 
0x000a2392: ret 0x5657; 
0x0014a65f: ret 0x5675; 
0x0008acf0: ret 0x5689; 
0x000fee7c: ret 0x568b; 
0x000a56a2: ret 0x568d; 
0x0015976a: ret 0x56ab; 
0x0003dc4e: ret 0x56c3; 
0x000e4649: ret 0x56e9; 
0x001a5f55: ret 0x5708; 
0x001a0eb8: ret 0x5710; 
0x00109fa5: ret 0x5721; 
0x0013a385: ret 0x572b; 
0x0005d017: ret 0x574; 
0x0004123d: ret 0x5750; 
0x00171ccf: ret 0x5752; 
0x00141a0f: ret 0x5755; 
0x0009d7bb: ret 0x578b; 
0x00141311: ret 0x578d; 
0x000a960a: ret 0x580b; 
0x000a95ca: ret 0x584b; 
0x000a958a: ret 0x588b; 
0x000a37d1: ret 0x588d; 
0x000a954a: ret 0x58cb; 
0x001194ea: ret 0x592b; 
0x000a94aa: ret 0x596b; 
0x00071eca: ret 0x598d; 
0x000a946a: ret 0x59ab; 
0x0007944a: ret 0x59cb; 
0x000a942a: ret 0x59eb; 
0x000a93da: ret 0x5a3b; 
0x000a938a: ret 0x5a8b; 
0x0012b94a: ret 0x5a; 
0x00090e91: ret 0x5ae9; 
0x0012e85a: ret 0x5bb; 
0x000e2fce: ret 0x5c29; 
0x001591ca: ret 0x5c4b; 
0x0008f551: ret 0x5c72; 
0x000da123: ret 0x5c89; 
0x001169e1: ret 0x5c8b; 
0x000b1bea: ret 0x5c8d; 
0x0003913a: ret 0x5cdb; 
0x001a5e2c: ret 0x5d5e; 
0x000fc052: ret 0x5d89; 
0x000e902a: ret 0x5deb; 
0x000e8fca: ret 0x5e4b; 
0x0011fe39: ret 0x5e5b; 
0x00088e2e: ret 0x5e8b; 
0x00030ba5: ret 0x5f3c; 
0x0007e12e: ret 0x5f5e; 
0x00128e53: ret 0x60d; 
0x00128d0a: ret 0x610b; 
0x001a64fb: ret 0x6273; 
0x000a8b5a: ret 0x62bb; 
0x000de5e9: ret 0x62e9; 
0x000a8b1a: ret 0x62fb; 
0x00088afa: ret 0x631b; 
0x000a8ada: ret 0x633b; 
0x00128a2a: ret 0x63eb; 
0x001289da: ret 0x643b; 
0x001489ca: ret 0x644b; 
0x000d89aa: ret 0x646b; 
0x00082bba: ret 0x64; 
0x000d9f38: ret 0x64f7; 
0x000d891a: ret 0x64fb; 
0x0007c22e: ret 0x6509; 
0x001288da: ret 0x653b; 
0x000996d8: ret 0x6574; 
0x000acead: ret 0x65e9; 
0x000f2c8c: ret 0x6601; 
0x00142e66: ret 0x6608; 
0x000b8b53: ret 0x6640; 
0x001a6ec7: ret 0x6673; 
0x00051adf: ret 0x6674; 
0x00042eb5: ret 0x66c3; 
0x000c15e7: ret 0x676; 
0x0010e2f4: ret 0x67; 
0x000c18a7: ret 0x67c; 
0x0002f4ae: ret 0x689; 
0x0007f78e: ret 0x68b; 
0x00156b0e: ret 0x6904; 
0x00098f7c: ret 0x6974; 
0x0005ebfc: ret 0x6a52; 
0x0012e5dd: ret 0x6a75; 
0x0011f157: ret 0x6aa; 
0x0013683d: ret 0x6ae9; 
0x000e82fa: ret 0x6b1b; 
0x00054fbe: ret 0x6b89; 
0x0011476a: ret 0x6b8; 
0x000704c9: ret 0x6b8b; 
0x000a9e6f: ret 0x6be9; 
0x00136ac1: ret 0x6c01; 
0x00136887: ret 0x6c6; 
0x000881aa: ret 0x6c6b; 
0x001016b1: ret 0x6c74; 
0x000fedbd: ret 0x6c8b; 
0x0004c5c7: ret 0x6de9; 
0x000c1300: ret 0x6deb; 
0x000e4921: ret 0x6eb8; 
0x000c7ded: ret 0x6eb; 
0x000decb6: ret 0x6eba; 
0x00094759: ret 0x6f72; 
0x001491e7: ret 0x6fe9; 
0x00157d9a: ret 0x707b; 
0x0012e806: ret 0x7089; 
0x0005d282: ret 0x708d; 
0x00094f7c: ret 0x72e9; 
0x000e7afa: ret 0x731b; 
0x00117a4a: ret 0x73cb; 
0x0005c18b: ret 0x7401; 
0x000ffa2c: ret 0x7404; 
0x001b438e: ret 0x7406; 
0x001b2d11: ret 0x7407; 
0x00080f94: ret 0x7408; 
0x000c18fb: ret 0x7410; 
0x0007be31: ret 0x7420; 
0x000c9f2c: ret 0x7439; 
0x000e79ba: ret 0x745b; 
0x0006313f: ret 0x7489; 
0x0003e54d: ret 0x748b; 
0x000401c3: ret 0x748d; 
0x0002a15d: ret 0x7501; 
0x00082cae: ret 0x7502; 
0x00031ff7: ret 0x7503; 
0x000bb91c: ret 0x7504; 
0x00141a74: ret 0x7507; 
0x001a92fe: ret 0x7508; 
0x00090cca: ret 0x7510; 
0x000bb936: ret 0x7520; 
0x000bb93b: ret 0x7540; 
0x00114e25: ret 0x7549; 
0x00065a28: ret 0x757c; 
0x000d3e6c: ret 0x7589; 
0x000ae813: ret 0x758b; 
0x0009a0e4: ret 0x768d; 
0x00124dca: ret 0x76b8; 
0x001b33b7: ret 0x774; 
0x000e765a: ret 0x77bb; 
0x000fbef0: ret 0x7839; 
0x00149e65: ret 0x7875; 
0x0003081a: ret 0x788; 
0x00054056: ret 0x789; 
0x000911fb: ret 0x78b; 
0x0008754a: ret 0x78cb; 
0x000a9c98: ret 0x78e9; 
0x0007178a: ret 0x7a; 
0x000d9dcd: ret 0x7b89; 
0x001ab151: ret 0x7c06; 
0x001ab161: ret 0x7c07; 
0x001ab171: ret 0x7c09; 
0x001ab181: ret 0x7c0a; 
0x001ab191: ret 0x7c0b; 
0x001ab1a1: ret 0x7c0d; 
0x001ab1b1: ret 0x7c0e; 
0x001ab1c1: ret 0x7c0f; 
0x001b184a: ret 0x7c39; 
0x001093e6: ret 0x7c80; 
0x0004586b: ret 0x7c83; 
0x00080807: ret 0x7c89; 
0x0003a333: ret 0x7c8b; 
0x000cc919: ret 0x7ce9; 
0x001370c6: ret 0x7d4f; 
0x001a5f95: ret 0x7e10; 
0x00029875: ret 0x7e74; 
0x0010120f: ret 0x7e8b; 
0x00151ce5: ret 0x7e8d; 
0x000e4b41: ret 0x7e9; 
0x000afddf: ret 0x7f7f; 
0x00188074: ret 0x7f8; 
0x000395ca: ret 0x8001; 
0x0015df8c: ret 0x8014; 
0x00100abe: ret 0x804; 
0x001b6dca: ret 0x804b; 
0x0018576c: ret 0x808b; 
0x00193435: ret 0x80; 
0x000fe6df: ret 0x8104; 
0x00094dc8: ret 0x8108; 
0x001238a2: ret 0x811f; 
0x0013eaec: ret 0x8166; 
0x000a0af8: ret 0x8188; 
0x000c70bc: ret 0x81eb; 
0x0002ded4: ret 0x820f; 
0x00150152: ret 0x828d; 
0x0002c1e8: ret 0x8301; 
0x00140ee4: ret 0x8302; 
0x000afabb: ret 0x8303; 
0x00053c43: ret 0x8304; 
0x000afa8b: ret 0x8305; 
0x0014d6d8: ret 0x8308; 
0x00105ea9: ret 0x830c; 
0x000353c2: ret 0x830f; 
0x000d9afc: ret 0x8310; 
0x00096861: ret 0x8316; 
0x00137f71: ret 0x8318; 
0x000c2425: ret 0x8320; 
0x00186aea: ret 0x832b; 
0x000e8021: ret 0x8334; 
0x000b8ba4: ret 0x8340; 
0x00043232: ret 0x835b; 
0x00122e15: ret 0x8363; 
0x001511e5: ret 0x8366; 
0x00126a9a: ret 0x837b; 
0x000c3ca7: ret 0x8380; 
0x000a67ff: ret 0x8388; 
0x0009d7d4: ret 0x8389; 
0x00094a5e: ret 0x838b; 
0x00136b6a: ret 0x838d; 
0x000d22be: ret 0x8390; 
0x0004cac3: ret 0x83ff; 
0x0003018e: ret 0x8401; 
0x000f12bc: ret 0x8402; 
0x000c26c5: ret 0x8404; 
0x00028f15: ret 0x840f; 
0x0015ebe9: ret 0x8489; 
0x0003c5fb: ret 0x848b; 
0x0010cfcd: ret 0x848d; 
0x00042eaf: ret 0x8501; 
0x000c6e24: ret 0x8504; 
0x00070b95: ret 0x8508; 
0x0002cd79: ret 0x850f; 
0x00056e9d: ret 0x8510; 
0x0013a797: ret 0x8518; 
0x000c1c3a: ret 0x8540; 
0x000570ae: ret 0x8589; 
0x00031b25: ret 0x858b; 
0x00033571: ret 0x858d; 
0x000c133f: ret 0x860f; 
0x00103a57: ret 0x861; 
0x001567aa: ret 0x866b; 
0x0012c2df: ret 0x868d; 
0x00100d97: ret 0x86eb; 
0x000a97ed: ret 0x872; 
0x000514d2: ret 0x874; 
0x00040c7b: ret 0x878d; 
0x001003b7: ret 0x87eb; 
0x0002bd11: ret 0x8801; 
0x00043990: ret 0x8802; 
0x000dd565: ret 0x880f; 
0x00149a9d: ret 0x8830; 
0x001865aa: ret 0x886b; 
0x000eb40c: ret 0x8875; 
0x001555ba: ret 0x889; 
0x00094b43: ret 0x88; 
0x0018655a: ret 0x88bb; 
0x000284c8: ret 0x8901; 
0x000dae7b: ret 0x8902; 
0x00180f77: ret 0x8903; 
0x00053c26: ret 0x8904; 
0x001519a9: ret 0x8908; 
0x00024b00: ret 0x8909; 
0x00133d27: ret 0x890c; 
0x000ea7e1: ret 0x890f; 
0x000d8b5c: ret 0x8910; 
0x001a7d7a: ret 0x8912; 
0x000ccc64: ret 0x8918; 
0x000664ca: ret 0x894b; 
0x000599a6: ret 0x8951; 
0x0003a46c: ret 0x8952; 
0x001887d0: ret 0x895b; 
0x0010e9f7: ret 0x8965; 
0x00096ce0: ret 0x8966; 
0x000da2a0: ret 0x89f5; 
0x001763ca: ret 0x8a4b; 
0x0002c5db: ret 0x8b01; 
0x0003994d: ret 0x8b02; 
0x000afaa0: ret 0x8b04; 
0x000afa70: ret 0x8b06; 
0x0002859c: ret 0x8b07; 
0x00105e9e: ret 0x8b08; 
0x000c2661: ret 0x8b10; 
0x00138b2a: ret 0x8b18; 
0x000af781: ret 0x8b20; 
0x0015e569: ret 0x8b2c; 
0x000410ed: ret 0x8b50; 
0x00103248: ret 0x8b52; 
0x000c45b6: ret 0x8b65; 
0x00042c12: ret 0x8b8; 
0x000d5f0e: ret 0x8b90; 
0x000eb2f9: ret 0x8b; 
0x0015622a: ret 0x8beb; 
0x000710de: ret 0x8c0f; 
0x001512d6: ret 0x8c39; 
0x00087be3: ret 0x8c74; 
0x001074e1: ret 0x8c8b; 
0x00161b14: ret 0x8c8d; 
0x000fcf57: ret 0x8cc; 
0x00188241: ret 0x8ceb; 
0x0003134a: ret 0x8d01; 
0x000541cf: ret 0x8d04; 
0x0002dbe0: ret 0x8d08; 
0x00044641: ret 0x8d0f; 
0x00048396: ret 0x8d2e; 
0x00123d0d: ret 0x8d50; 
0x0004a0cb: ret 0x8d52; 
0x000d6e3e: ret 0x8d89; 
0x0006aea8: ret 0x8d8b; 
0x000ab7f9: ret 0x8d8d; 
0x0008bc6a: ret 0x8dc3; 
0x0010984f: ret 0x8e0f; 
0x00073adc: ret 0x8f0f; 
0x0008f9bb: ret 0x8f8b; 
0x0002c12e: ret 0x901; 
0x00079198: ret 0x9066; 
0x0014f313: ret 0x908; 
0x00081f79: ret 0x90e9; 
0x00028e58: ret 0x9173; 
0x0018b28b: ret 0x9174; 
0x0004303e: ret 0x920f; 
0x0011e4ea: ret 0x92b; 
0x000e6153: ret 0x930; 
0x001117db: ret 0x930f; 
0x00041abc: ret 0x9387; 
0x000a31d6: ret 0x9389; 
0x000a310f: ret 0x938b; 
0x00041f58: ret 0x93eb; 
0x00089883: ret 0x940f; 
0x001ac3e9: ret 0x9474; 
0x000c7e65: ret 0x9488; 
0x0009a455: ret 0x948b; 
0x0012487a: ret 0x94b8; 
0x0004a616: ret 0x950f; 
0x0002f8dd: ret 0x9539; 
0x001158aa: ret 0x956b; 
0x000588bb: ret 0x9588; 
0x00058369: ret 0x9589; 
0x0011584a: ret 0x95cb; 
0x0002583a: ret 0x95db; 
0x0013582a: ret 0x95eb; 
0x0005579a: ret 0x967b; 
0x00087e96: ret 0x9689; 
0x0012575a: ret 0x96bb; 
0x0005570a: ret 0x970b; 
0x000fed41: ret 0x972; 
0x0008e54c: ret 0x978b; 
0x000e2fd2: ret 0x988d; 
0x000a929d: ret 0x98eb; 
0x00142418: ret 0x998b; 
0x00122ae3: ret 0x9a75; 
0x00123ef5: ret 0x9ae9; 
0x0006df9b: ret 0x9aeb; 
0x000272fa: ret 0x9b4; 
0x0010c84b: ret 0x9b8; 
0x0002888f: ret 0x9be9; 
0x0006bb4c: ret 0x9beb; 
0x0004d162: ret 0x9c0f; 
0x00153a84: ret 0x9c72; 
0x00151da2: ret 0x9c89; 
0x0012a914: ret 0x9ce9; 
0x0004a484: ret 0x9d74; 
0x0006770a: ret 0x9d8b; 
0x000f2cac: ret 0x9d8d; 
0x0004301f: ret 0x9e0f; 
0x00083bff: ret 0x9e3b; 
0x000ca6a4: ret 0x9e74; 
0x00024f5a: ret 0x9ebb; 
0x00059443: ret 0x9f0f; 
0x0014a35f: ret 0x9f7e; 
0x00124e4a: ret 0x9fcb; 
0x0009ac4d: ret 0xa00; 
0x00082351: ret 0xa165; 
0x0002d445: ret 0xa1e9; 
0x000a4baa: ret 0xa26b; 
0x00024b3a: ret 0xa2db; 
0x00114aaa: ret 0xa36b; 
0x0014c6d7: ret 0xa3c; 
0x0006be41: ret 0xa3e9; 
0x0015495a: ret 0xa4bb; 
0x0003a6f9: ret 0xa4eb; 
0x000348aa: ret 0xa56b; 
0x001247ca: ret 0xa64b; 
0x0012478a: ret 0xa68b; 
0x00147f1a: ret 0xa6; 
0x0008474a: ret 0xa6cb; 
0x000a19c0: ret 0xa72; 
0x000d46da: ret 0xa73b; 
0x00078433: ret 0xa75; 
0x001146aa: ret 0xa76b; 
0x001886ae: ret 0xa773; 
0x0011463a: ret 0xa7db; 
0x000faaf4: ret 0xa874; 
0x0015331f: ret 0xa875; 
0x000c459a: ret 0xa87b; 
0x000d2b28: ret 0xa8b; 
0x000d446a: ret 0xa9ab; 
0x0009413a: ret 0xa9b; 
0x000d8cfa: ret 0xa; 
0x0011436a: ret 0xaaab; 
0x00038e03: ret 0xab8b; 
0x000da41e: ret 0xac0f; 
0x00097819: ret 0xac73; 
0x0013e34a: ret 0xacb; 
0x00087a78: ret 0xaceb; 
0x00101557: ret 0xad75; 
0x000c3ffa: ret 0xae1b; 
0x0013db70: ret 0xaf73; 
0x00033e3a: ret 0xafdb; 
0x000d0188: ret 0xb0e9; 
0x000c3cea: ret 0xb12b; 
0x00032f9b: ret 0xb273; 
0x0009e148: ret 0xb2e8; 
0x000c3afa: ret 0xb31b; 
0x000c3aba: ret 0xb35b; 
0x000a0f0a: ret 0xb374; 
0x0003ca1f: ret 0xb3b8; 
0x00055981: ret 0xb489; 
0x0012ab98: ret 0xb48d; 
0x0012392a: ret 0xb4eb; 
0x000d4857: ret 0xb53; 
0x001238da: ret 0xb53b; 
0x000d65e9: ret 0xb589; 
0x00059405: ret 0xb58b; 
0x0012b44d: ret 0xb5eb; 
0x0002bc69: ret 0xb60f; 
0x0008f591: ret 0xb68d; 
0x0006436a: ret 0xb70f; 
0x000fc666: ret 0xb75; 
0x0012366a: ret 0xb7ab; 
0x000af353: ret 0xb801; 
0x000e1650: ret 0xb850; 
0x00064d80: ret 0xb8; 
0x0005341a: ret 0xb9fb; 
0x00071469: ret 0xb; 
0x001233ca: ret 0xba4b; 
0x00148aba: ret 0xbb01; 
0x00128e11: ret 0xbb03; 
0x001b03f9: ret 0xbc89; 
0x001143d7: ret 0xbc8d; 
0x0010e2ce: ret 0xbce9; 
0x000c30ca: ret 0xbd4b; 
0x0018bde2: ret 0xbdeb; 
0x00057b68: ret 0xbe0f; 
0x00122fea: ret 0xbe2b; 
0x00122f9a: ret 0xbe7b; 
0x001141b9: ret 0xbf01; 
0x0009580a: ret 0xbf0f; 
0x0010e2e8: ret 0xbf98; 
0x00026af3: ret 0xc031; 
0x0013ead0: ret 0xc069; 
0x000a971a: ret 0xc072; 
0x0015a15d: ret 0xc074; 
0x00028108: ret 0xc083; 
0x000a7433: ret 0xc084; 
0x000268f3: ret 0xc085; 
0x000b031f: ret 0xc0be; 
0x0003bb15: ret 0xc0d9; 
0x0011f518: ret 0xc0eb; 
0x0008350b: ret 0xc101; 
0x000488aa: ret 0xc102; 
0x000fc04c: ret 0xc104; 
0x00180f56: ret 0xc105; 
0x0005c9aa: ret 0xc108; 
0x00115c20: ret 0xc10c; 
0x0005c2e2: ret 0xc11f; 
0x001717e9: ret 0xc129; 
0x000d756c: ret 0xc139; 
0x00142ec1: ret 0xc166; 
0x000da3f8: ret 0xc169; 
0x001479ba: ret 0xc183; 
0x000375ea: ret 0xc189; 
0x0013e1fa: ret 0xc1b; 
0x000c7e63: ret 0xc208; 
0x00104e3a: ret 0xc209; 
0x00045783: ret 0xc220; 
0x000995d7: ret 0xc231; 
0x000db1cf: ret 0xc238; 
0x00041c52: ret 0xc269; 
0x000e346e: ret 0xc26b; 
0x0002df07: ret 0xc275; 
0x000dece4: ret 0xc281; 
0x0003994b: ret 0xc283; 
0x00098d43: ret 0xc289; 
0x001a6d49: ret 0xc2bb; 
0x000b1d6e: ret 0xc301; 
0x00053581: ret 0xc339; 
0x000a8b94: ret 0xc35b; 
0x000c66b4: ret 0xc35f; 
0x000a97d7: ret 0xc372; 
0x000eace7: ret 0xc383; 
0x00031a82: ret 0xc389; 
0x0005d67e: ret 0xc3e9; 
0x00029148: ret 0xc483; 
0x000da4e5: ret 0xc501; 
0x000c714c: ret 0xc529; 
0x000d28ea: ret 0xc52b; 
0x00149118: ret 0xc583; 
0x000985f5: ret 0xc589; 
0x0003fbf1: ret 0xc5e9; 
0x00141678: ret 0xc602; 
0x00064d01: ret 0xc629; 
0x000496f3: ret 0xc639; 
0x000c3bc0: ret 0xc680; 
0x0002ffc7: ret 0xc689; 
0x0013273a: ret 0xc6db; 
0x0002d345: ret 0xc704; 
0x00105907: ret 0xc708; 
0x000abb8b: ret 0xc739; 
0x001726da: ret 0xc73b; 
0x00096a40: ret 0xc74; 
0x001326ba: ret 0xc75b; 
0x00025466: ret 0xc789; 
0x00086b39: ret 0xc7e9; 
0x0005a08f: ret 0xc801; 
0x0011697c: ret 0xc839; 
0x00080aec: ret 0xc883; 
0x00025b50: ret 0xc889; 
0x00032da5: ret 0xc89; 
0x00047971: ret 0xc8b; 
0x00150194: ret 0xc8c1; 
0x000a84c7: ret 0xc8d; 
0x0013253a: ret 0xc8db; 
0x00104890: ret 0xc901; 
0x00187694: ret 0xc919; 
0x000a533d: ret 0xc931; 
0x00091454: ret 0xc983; 
0x000acf16: ret 0xc985; 
0x000a2446: ret 0xc9cf; 
0x00172bac: ret 0xc; 
0x0013edfe: ret 0xca00; 
0x0003014c: ret 0xca08; 
0x0015df59: ret 0xca09; 
0x0017338f: ret 0xca0f; 
0x0003f873: ret 0xca21; 
0x00060f9c: ret 0xca29; 
0x0006bbcf: ret 0xca39; 
0x00099255: ret 0xca81; 
0x0008e544: ret 0xca83; 
0x0002691d: ret 0xcac1; 
0x000e4aec: ret 0xcae9; 
0x000a3592: ret 0xcaeb; 
0x000372db: ret 0xcb29; 
0x00095c57: ret 0xcb83; 
0x0006a339: ret 0xcb89; 
0x000a6932: ret 0xcb8; 
0x000c971c: ret 0xcce9; 
0x0008e64d: ret 0xcceb; 
0x00037299: ret 0xcd89; 
0x000dc1d8: ret 0xcdb8; 
0x0005d533: ret 0xce39; 
0x00041fba: ret 0xce5b; 
0x00027bf8: ret 0xce80; 
0x001167b0: ret 0xce89; 
0x000f1424: ret 0xd001; 
0x0007b48b: ret 0xd008; 
0x0007b46a: ret 0xd009; 
0x0004d36c: ret 0xd029; 
0x00185250: ret 0xd039; 
0x000daa98: ret 0xd069; 
0x0002f36b: ret 0xd089; 
0x000ae6a8: ret 0xd101; 
0x001b0c8e: ret 0xd104; 
0x0013c0cc: ret 0xd108; 
0x0015dedf: ret 0xd120; 
0x000dc235: ret 0xd129; 
0x000fbadb: ret 0xd139; 
0x00099f0e: ret 0xd174; 
0x0014b5eb: ret 0xd184; 
0x0006a546: ret 0xd189; 
0x0010a6cf: ret 0xd1e9; 
0x000fef37: ret 0xd201; 
0x0012f5b5: ret 0xd231; 
0x00025459: ret 0xd283; 
0x0004328f: ret 0xd285; 
0x00188cc5: ret 0xd2e9; 
0x00093e51: ret 0xd2f7; 
0x000ad43b: ret 0xd301; 
0x001ada93: ret 0xd304; 
0x000ec7d2: ret 0xd309; 
0x000df7ae: ret 0xd329; 
0x000db33e: ret 0xd338; 
0x00090f02: ret 0xd372; 
0x0014b8bb: ret 0xd384; 
0x0003fa12: ret 0xd389; 
0x00121a1a: ret 0xd3fb; 
0x00053fd2: ret 0xd439; 
0x000fc349: ret 0xd473; 
0x00088139: ret 0xd4e9; 
0x001012f3: ret 0xd539; 
0x00099e06: ret 0xd574; 
0x00146844: ret 0xd589; 
0x000953c1: ret 0xd5e9; 
0x0013182a: ret 0xd5eb; 
0x000ad624: ret 0xd601; 
0x000eee87: ret 0xd675; 
0x00055282: ret 0xd689; 
0x000aa71b: ret 0xd701; 
0x000e60e4: ret 0xd729; 
0x0007a556: ret 0xd739; 
0x00167854: ret 0xd75; 
0x00047de8: ret 0xd789; 
0x00068611: ret 0xd801; 
0x000fe924: ret 0xd839; 
0x00051744: ret 0xd889; 
0x0013153a: ret 0xd8db; 
0x000ecb05: ret 0xd8eb; 
0x0003bad4: ret 0xd8f7; 
0x001214fa: ret 0xd91b; 
0x001314ba: ret 0xd95b; 
0x00187f74: ret 0xd9eb; 
0x000c7180: ret 0xd9f7; 
0x000652e5: ret 0xd; 
0x00107d2f: ret 0xda01; 
0x000ec7dd: ret 0xda08; 
0x00060f26: ret 0xda29; 
0x0006a6f9: ret 0xda39; 
0x001098a3: ret 0xda75; 
0x0013137a: ret 0xda9b; 
0x0010e1b0: ret 0xdae9; 
0x0003de98: ret 0xdaf7; 
0x000570ef: ret 0xdb31; 
0x000612ba: ret 0xdb5b; 
0x00106cd0: ret 0xdb85; 
0x000a9c29: ret 0xdbf7; 
0x00115457: ret 0xdc73; 
0x000869ff: ret 0xdd89; 
0x0008258f: ret 0xde21; 
0x00120fea: ret 0xde2b; 
0x000dfbaf: ret 0xde72; 
0x00060eaa: ret 0xdf6b; 
0x000a9857: ret 0xe03; 
0x00141739: ret 0xe072; 
0x0012571e: ret 0xe075; 
0x00041da9: ret 0xe083; 
0x001723c0: ret 0xe0c1; 
0x00060d4a: ret 0xe0cb; 
0x000428ff: ret 0xe0d3; 
0x0008bce7: ret 0xe0eb; 
0x0002f452: ret 0xe183; 
0x000ddc54: ret 0xe280; 
0x00039d49: ret 0xe281; 
0x0002a4cd: ret 0xe283; 
0x0005c22c: ret 0xe2c1; 
0x001acfd4: ret 0xe2d3; 
0x000f216c: ret 0xe329; 
0x000aefb5: ret 0xe372; 
0x00099e6f: ret 0xe383; 
0x000252a7: ret 0xe3d3; 
0x0003c8ec: ret 0xe3e9; 
0x000a0958: ret 0xe4bd; 
0x000c5906: ret 0xe4e9; 
0x000a090a: ret 0xe50b; 
0x001208da: ret 0xe53b; 
0x000a08ca: ret 0xe54b; 
0x000a4653: ret 0xe55; 
0x00156c32: ret 0xe589; 
0x00159054: ret 0xe5d; 
0x000feae9: ret 0xe5eb; 
0x000ad689: ret 0xe672; 
0x000546b7: ret 0xe675; 
0x000309bf: ret 0xe683; 
0x00144a14: ret 0xe6e8; 
0x00100358: ret 0xe6eb; 
0x0015da87: ret 0xe74; 
0x000acf56: ret 0xe775; 
0x000a2063: ret 0xe7b; 
0x0008956a: ret 0xe7e9; 
0x00134c39: ret 0xe801; 
0x00100104: ret 0xe804; 
0x00081946: ret 0xe852; 
0x000dd80f: ret 0xe856; 
0x00126022: ret 0xe857; 
0x00090cd5: ret 0xe875; 
0x0005a243: ret 0xe883; 
0x0005a600: ret 0xe889; 
0x00053c00: ret 0xe89; 
0x00109662: ret 0xe8c0; 
0x00053627: ret 0xe8c1; 
0x0013053a: ret 0xe8db; 
0x00047ab8: ret 0xe901; 
0x00072641: ret 0xe904; 
0x00142ec4: ret 0xe908; 
0x000aa8b4: ret 0xe972; 
0x00123f34: ret 0xe975; 
0x0002aec5: ret 0xe983; 
0x0008d634: ret 0xe989; 
0x00188028: ret 0xe9b1; 
0x0003f869: ret 0xe9d1; 
0x0004b519: ret 0xe; 
0x00107c11: ret 0xea01; 
0x0016e677: ret 0xea29; 
0x001878c6: ret 0xea39; 
0x00151787: ret 0xea75; 
0x00047291: ret 0xea81; 
0x0004a88a: ret 0xea83; 
0x000a7fbb: ret 0xea89; 
0x0010abea: ret 0xeac0; 
0x000617ef: ret 0xeac1; 
0x000855bf: ret 0xead1; 
0x0002bf0f: ret 0xead3; 
0x0007c176: ret 0xeaeb; 
0x0005d001: ret 0xeb01; 
0x00128df1: ret 0xeb03; 
0x0015c744: ret 0xeb18; 
0x00042acf: ret 0xeb20; 
0x000507a4: ret 0xeb39; 
0x00128d86: ret 0xeb53; 
0x0017b7ba: ret 0xeb96; 
0x0013027a: ret 0xeb9b; 
0x00162cda: ret 0xec04; 
0x000a01ca: ret 0xec4b; 
0x000af557: ret 0xec72; 
0x000290b1: ret 0xec83; 
0x0013b93f: ret 0xece9; 
0x0009852d: ret 0xed75; 
0x0014683d: ret 0xed85; 
0x001433da: ret 0xedfd; 
0x000c950e: ret 0xee72; 
0x0005d3cf: ret 0xee7c; 
0x000a5025: ret 0xeec1; 
0x000dac03: ret 0xef29; 
0x000af644: ret 0xef72; 
0x000fec8e: ret 0xef7f; 
0x000fe0d8: ret 0xef89; 
0x00122828: ret 0xeff0; 
0x00069b77: ret 0xf001; 
0x0012d3b4: ret 0xf009; 
0x001aafaf: ret 0xf00; 
0x000478a1: ret 0xf01; 
0x0009b0b5: ret 0xf02; 
0x0009fdea: ret 0xf02b; 
0x000d6ad2: ret 0xf039; 
0x00032118: ret 0xf03; 
0x0007abd8: ret 0xf04; 
0x001ab141: ret 0xf05; 
0x0013907a: ret 0xf063; 
0x0002de1d: ret 0xf06; 
0x00030e9f: ret 0xf072; 
0x000ae1a4: ret 0xf075; 
0x001b4419: ret 0xf07; 
0x00042d59: ret 0xf083; 
0x0006806d: ret 0xf089; 
0x0002a8d4: ret 0xf08; 
0x000de22a: ret 0xf0; 
0x00118eda: ret 0xf0a2; 
0x0002fd6a: ret 0xf0ab; 
0x000918a9: ret 0xf0b8; 
0x001ab0fc: ret 0xf0c; 
0x000a144d: ret 0xf0f; 
0x000a9fde: ret 0xf101; 
0x0005cef0: ret 0xf10; 
0x000cc55e: ret 0xf129; 
0x00172548: ret 0xf131; 
0x000f2026: ret 0xf139; 
0x0010ebda: ret 0xf145; 
0x0011fcca: ret 0xf14b; 
0x0010a883: ret 0xf189; 
0x001099e2: ret 0xf197; 
0x0010d4ee: ret 0xf20; 
0x00111daa: ret 0xf222; 
0x0002c3b2: ret 0xf229; 
0x0008f041: ret 0xf280; 
0x0009844b: ret 0xf283; 
0x00031404: ret 0xf289; 
0x00041c54: ret 0xf31d; 
0x0018fefa: ret 0xf328; 
0x0018e1fa: ret 0xf345; 
0x000a1eaa: ret 0xf375; 
0x0009426e: ret 0xf389; 
0x000406be: ret 0xf3c3; 
0x000ebc94: ret 0xf3e9; 
0x00189e01: ret 0xf3eb; 
0x0005c25e: ret 0xf40; 
0x000a98b9: ret 0xf475; 
0x0005c241: ret 0xf50; 
0x001926da: ret 0xf561; 
0x0013f88a: ret 0xf58b; 
0x00131cba: ret 0xf5c9; 
0x00184f41: ret 0xf604; 
0x0019f374: ret 0xf608; 
0x000b0273: ret 0xf66; 
0x001031cb: ret 0xf701; 
0x000ef70a: ret 0xf70b; 
0x000dc1e4: ret 0xf718; 
0x001b161c: ret 0xf729; 
0x0018756b: ret 0xf74; 
0x000d8524: ret 0xf751; 
0x00099b71: ret 0xf75b; 
0x001006b6: ret 0xf775; 
0x00048ff5: ret 0xf7ff; 
0x0006648e: ret 0xf801; 
0x0010d4f7: ret 0xf80; 
0x000a5ce9: ret 0xf821; 
0x0011f5ea: ret 0xf82b; 
0x0010b80a: ret 0xf83a; 
0x0005f5da: ret 0xf83b; 
0x0013de5a: ret 0xf84f; 
0x000234cf: ret 0xf883; 
0x000493d4: ret 0xf889; 
0x000da340: ret 0xf894; 
0x00125aff: ret 0xf8c1; 
0x001045b1: ret 0xf939; 
0x000a137a: ret 0xf941; 
0x0015f2ff: ret 0xf95f; 
0x0008d9f9: ret 0xf965; 
0x0005680c: ret 0xf980; 
0x000eca01: ret 0xf983; 
0x00177b25: ret 0xf989; 
0x0005429c: ret 0xf9e9; 
0x0019ce2a: ret 0xf9f9; 
0x00142b5e: ret 0xf; 
0x00171a89: ret 0xfa01; 
0x0005dffa: ret 0xfa29; 
0x0007544a: ret 0xfa39; 
0x0011698a: ret 0xfa81; 
0x00029a9d: ret 0xfa83; 
0x00064b84: ret 0xfa89; 
0x0011845a: ret 0xfaa9; 
0x000333e5: ret 0xfac1; 
0x0008f34a: ret 0xfacb; 
0x0009f30a: ret 0xfb0b; 
0x000d9f8d: ret 0xfb11; 
0x0017b0ea: ret 0xfb75; 
0x00066a9e: ret 0xfb80; 
0x00062de6: ret 0xfb83; 
0x0009c0d7: ret 0xfb89; 
0x001ada27: ret 0xfbc1; 
0x00099f5c: ret 0xfbd1; 
0x0016fd5a: ret 0xfc25; 
0x0009f17a: ret 0xfc9b; 
0x000ab5ba: ret 0xfce1; 
0x0016c53a: ret 0xfd17; 
0x0008ca57: ret 0xfd1; 
0x0011f0ca: ret 0xfd4b; 
0x0012f07a: ret 0xfd9b; 
0x00126721: ret 0xfdb8; 
0x001b413b: ret 0xfdc1; 
0x0015000a: ret 0xfe19; 
0x001a7e57: ret 0xfe1d; 
0x000a9c0c: ret 0xfe83; 
0x001ac50a: ret 0xfe89; 
0x00154c3a: ret 0xfe90; 
0x000385da: ret 0xfeab; 
0x00179694: ret 0xfeb8; 
0x000d474a: ret 0xfedd; 
0x0016584a: ret 0xfef2; 
0x000916be: ret 0xff0; 
0x00198e57: ret 0xff0d; 
0x000e7f8a: ret 0xff1b; 
0x0003b9bd: ret 0xff25; 
0x0006d018: ret 0xff31; 
0x0004326d: ret 0xff3; 
0x0013eeda: ret 0xff3b; 
0x001874de: ret 0xff3d; 
0x00061695: ret 0xff50; 
0x00107b8a: ret 0xff59; 
0x00105aea: ret 0xff5f; 
0x00063f3a: ret 0xff7a; 
0x001760ea: ret 0xff81; 
0x00043ac6: ret 0xff83; 
0x0012403a: ret 0xff85; 
0x0015097a: ret 0xffa0; 
0x000255a7: ret 0xffb8; 
0x0012e3a4: ret 0xffb9; 
0x0008de1a: ret 0xffb; 
0x0002838c: ret 0xffba; 
0x0004e013: ret 0xffbf; 
0x00177d8a: ret 0xffd3; 
0x0005e5ba: ret 0xffd6; 
0x001b67d6: ret 0xffdc; 
0x00049f15: ret 0xffdf; 
0x0006c72e: ret 0xffe1; 
0x000f93fa: ret 0xffe9; 
0x0010db0a: ret 0xffea; 
0x00063f42: ret 0xffeb; 
0x00037aff: ret 0xffef; 
0x00116f73: ret 0xfff0; 
0x000378ff: ret 0xfff1; 
0x0004ce5f: ret 0xfff2; 
0x000e075a: ret 0xfff3; 
0x00039afa: ret 0xfff5; 
0x000ddcfb: ret 0xfff6; 
0x000a6f1f: ret 0xfff7; 
0x00039a37: ret 0xfff8; 
0x0003bcae: ret 0xfff9; 
0x0002aa00: ret 0xfffa; 
0x000fe85b: ret 0xfffb; 
0x00030bfa: ret 0xfffc; 
0x000629ce: ret 0xfffd; 
0x0002b19a: ret 0xfffe; 
0x00024526: ret 0xffff; 
0x0005463a: ret 1; 
0x00063caa: ret 2; 
0x00086b32: ret 3; 
0x0003abc3: ret 4; 
0x000a382a: ret 5; 
0x0004ce40: ret 6; 
0x0019eae1: ret 7; 
0x000d8eda: ret 8; 
0x000719af: ret 9; 
0x0002346f: ret; 
0x000e7c82: retf 0; add byte ptr [eax + 0x197], bh; mov ecx, dword ptr [esp + 0x54]; mov edx, edi; mov esi, ebp; call dword ptr gs:[0x10]; 
0x000efa61: retf 0; add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x0007fdc2: retf 0; add byte ptr [ecx], bh; ret; 
0x00171614: retf 0x1089; mov eax, 1; add esp, 8; pop ebx; ret; 
0x0008d32b: retf 0x2273; movzx eax, byte ptr [edx]; pop ebx; pop esi; ret; 
0x000c12dd: retf 0x3076; add eax, ecx; ret; 
0x000dd80c: retf 0x348d; ret 0xe856; 
0x00140e17: retf 0x430f; ror byte ptr [ebx + 0x29302444], 1; fadd dword ptr [ecx]; ror byte ptr [edi], 1; inc edx; ret 0xd129; 
0x000685fa: retf 0x46; add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; dec dword ptr [ebx - 0x58b73]; inc dword ptr [ecx]; ret 0xd801; 
0x00134b1c: retf 0x472; cmp ecx, edx; sbb eax, eax; ret; 
0x000c4d87: retf 0x474; test edx, edx; jne 0xc4d80; ret; 
0x000a5823: retf 0x488d; jmp dword ptr [ecx]; 
0x000e461e: retf 0x490f; ret 0x1c8d; 
0x00065333: retf 0x490f; ret 0x4489; 
0x000e32bf: retf 0x490f; ret 0xc101; 
0x0009db2e: retf 0x4c8b; and al, 0x1c; call dword ptr gs:[0x10]; 
0x00071995: retf 0x4c8b; and al, 0x4c; mov dword ptr [esp + 4], ecx; jmp edx; 
0x00109c7b: retf 0x5489; ret; 
0x0004057b: retf 0x5a8d; add dword ptr [ebx + 0xf382454], ecx; inc ebp; ret; 
0x00156b35: retf 0x5e5b; ret; 
0x001a5f90: retf 0x761a; sub al, 0x83; ret 0x7e10; 
0x0015bf08: retf 0x772; xor eax, eax; cmp ecx, edx; setne al; ret; 
0x0011fe29: retf 0x7c8b; and al, 0x1c; sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x000ba8ab: retf 0x80e8; or al, 0; add ecx, 0x11256f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0005a5f6: retf 0x820f; mov edx, 0x89000000; aad 0x89; ret 0xe889; 
0x00122e83: retf 0x8930; push eax; or byte ptr [edx + 0x100], bh; mov word ptr [eax + 0x16], dx; ret; 
0x000c0899: retf 0x92e8; xchg ebx, eax; or al, 0; add ecx, 0x10c755; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008e546: retf 0xa801; add ecx, dword ptr [edi]; inc esp; ret 0x978b; 
0x000b927b: retf 0xb0e8; or dword ptr [0x3fc18100], ecx; cmp dl, byte ptr [ecx]; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000f0b8c: retf 0xb60f; or byte ptr [ecx + ecx*8 - 0x3fce208b], al; pop ebx; ret; 
0x000835da: retf 0xc483; adc byte ptr [ecx], ah; ret 0xfa83; 
0x00153159: retf 0xc483; or al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x001a7f18: retf 0xc801; call 0x189c1d; add ebx, 0x34454; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001a7e53: retf 0xc801; call 0x189c1d; add ebx, 0x34519; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001a6548: retf 0xc801; call 0x189c1d; add ebx, 0x35d20; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001a6439: retf 0xc801; call 0x189c1d; add ebx, 0x35e2f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019ce64: retf 0xc801; call 0x189c1d; add ebx, 0x3f244; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019be57: retf 0xc801; call 0x189c1d; add ebx, 0x40091; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019ae77: retf 0xc801; call 0x189c1d; add ebx, 0x40eb1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198f58: retf 0xc801; call 0x189c1d; add ebx, 0x42c10; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198e53: retf 0xc801; call 0x189c1d; add ebx, 0x42c55; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198c44: retf 0xc801; call 0x189c1d; add ebx, 0x42e64; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196f48: retf 0xc801; call 0x189c1d; add ebx, 0x449a0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196e43: retf 0xc801; call 0x189c1d; add ebx, 0x449e5; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196c37: retf 0xc801; call 0x189c1d; add ebx, 0x44bf1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194f48: retf 0xc801; call 0x189c1d; add ebx, 0x46720; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194e43: retf 0xc801; call 0x189c1d; add ebx, 0x46765; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194c37: retf 0xc801; call 0x189c1d; add ebx, 0x46971; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000c18de: retf 0xc801; ret; 
0x0019cc53: retf 0xc801; sfence; call 0x189c1d; add ebx, 0x3f292; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019bc83: retf 0xc801; sfence; call 0x189c1d; add ebx, 0x400a2; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019aaad: retf 0xc801; sfence; call 0x189c1d; add ebx, 0x40ff8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019894d: retf 0xc801; sfence; call 0x189c1d; add ebx, 0x42ed8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001969ad: retf 0xc801; sfence; call 0x189c1d; add ebx, 0x44bf8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019ad63: retf 0xc829; pop edi; call 0x189c1d; add ebx, 0x40f04; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019de69: retf 0xc829; pop esi; call 0x189c1d; add ebx, 0x3e33e; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000c108f: retf 0xc839; ja 0xc10a0; sub edi, 0x10; add eax, edi; pop edi; ret; 
0x00156b33: retf 0xca75; pop ebx; pop esi; ret; 
0x000c21e1: retf 0xce01; jmp ebx; 
0x0018c56e: retf 0xce89; call dword ptr gs:[0x10]; 
0x000c18d7: retf 0xd285; je 0xc18b0; bsr ecx, edx; add eax, ecx; ret; 
0x000b937b: retf 0xda39; jb 0xb9340; call 0x189c31; add ecx, 0x1139bb; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba9bb: retf 0xda39; jb 0xba980; call 0x189c31; add ecx, 0x1124db; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c095b: retf 0xda39; jb 0xc0920; call 0x189c31; add ecx, 0x10c70f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000a0953: retf 0xe92; add byte ptr [ecx + 0x19e4bdc2], al; add byte ptr [ebx - 0x72afeb14], al; adc byte ptr [ecx + ebx*2], 0xf9; call dword ptr [eax - 0x18]; 
0x001563b1: retf 0xec75; add esp, 8; pop ebx; ret; 
0x00092f01: retf 0xf0b8; add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; mov ebx, edi; call dword ptr gs:[0x10]; 
0x00042e20: retf 0xf183; pop ds; add ecx, 1; pop ebx; mov eax, ecx; ret; 
0x001a74e2: retf 0xf1a9; call dword ptr [ebx - 0x18]; 
0x001a0df2: retf 0xf20f; call dword ptr [ebx - 0x18]; 
0x001ac59d: retf 0xf66; xlatb; ret; 
0x000caea2: retf 0xf691; dec dword ptr [ebx - 0x72ebdb84]; xchg dword ptr [eax + edi*2], esi; stc; call dword ptr [eax + 0x68]; 
0x00084208: retf 0xf9fc; jmp dword ptr [esi - 0x70]; 
0x0007d06d: retf 0xfa67; jmp dword ptr [esi - 0x70]; 
0x00041c4d: retf 0xfac1; adc byte ptr [ecx], ch; ret 0xc269; 
0x000df835: retf 0xfac1; add ch, byte ptr [ecx]; ret 0x48d; 
0x00163632: retf 0xfda6; call dword ptr [eax + 0x50]; 
0x00160832: retf 0xfdd4; jmp dword ptr [esi - 0x70]; 
0x0017a392: retf 0xff7a; inc dword ptr [ebx - 0x2776eb3c]; pop ebx; pop esi; ret; 
0x0007a610: retf 0xff83; or byte ptr [ebp + ebx - 0x7d], dh; call dword ptr [eax]; 
0x00128472: retf 0xffef; ret; 
0x0016f7cc: retf 0xfff3; push 0; push edx; push 4; push ebx; call dword ptr [eax]; 
0x0019d176: retf 0xfffe; add ebx, 0x3ef37; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001a6404: retf 0xfffe; jmp dword ptr [esi - 0x70]; 
0x001a688b: retf 0xffff; jmp dword ptr [esi + 0xf]; 
0x000a55d2: retf 3; add byte ptr [ebp + 0x94c87], cl; add byte ptr [ecx - 0x9efdbbc], cl; ret 0xf04; 
0x0010d4fb: retf 3; add dh, dh; ret 0xf02; 
0x0008e94b: retf; add al, 0x1b; add byte ptr [ebx - 0x7cfbdbbc], cl; cmp byte ptr [ecx], al; je 0x8e960; ret; 
0x001a7b94: retf; add cl, byte ptr [edi]; xchg esp, eax; ret; 
0x00065b01: retf; add dword ptr [eax], eax; add byte ptr [eax - 0x7bf08006], al; ret 1; 
0x000c09f9: retf; add esi, ecx; call 0x189c31; add ecx, 0x10c673; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c09d9: retf; add esi, ecx; call 0x189c31; add ecx, 0x10c693; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000baa59: retf; add esi, ecx; call 0x189c31; add ecx, 0x11243f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000baa39: retf; add esi, ecx; call 0x189c31; add ecx, 0x11245f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9419: retf; add esi, ecx; call 0x189c31; add ecx, 0x11391f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b93f9: retf; add esi, ecx; call 0x189c31; add ecx, 0x11393f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0002f54a: retf; clc; and byte ptr [eax], al; mov eax, dword ptr [eax + 0x10e0]; ret; 
0x001262bf: retf; dec edx; stc; call dword ptr [eax - 0x18]; 
0x0010d97f: retf; inc dword ptr [ebx - 0x3e760036]; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x00176131: retf; jnp 0x176130; jmp dword ptr [esi - 0x70]; 
0x0012e404: retf; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x1b3; int 0x80; 
0x0003484a: retf; movsd dword ptr es:[edi], dword ptr [esi]; and byte ptr [eax], al; mov eax, dword ptr [eax + 0x9c]; add eax, dword ptr gs:[0]; ret; 
0x0009800e: retf; pop ebx; mov eax, 0x16; pop esi; pop edi; ret; 
0x000248b6: retf; pop ecx; stc; call dword ptr [eax - 0x18]; 
0x001611d7: retf; std; jmp dword ptr [esi - 0x70]; 
0x001ac724: retf; test al, 0xf0; jne 0x1ac6b0; lea eax, [edi - 0x10]; pop edi; ret; 
0x00062015: retf; xor bh, cl; call dword ptr [eax - 0x18]; 
0x000c8e63: rol al, 1; stc; call dword ptr [eax + 0x53]; 
0x0013f629: rol ax, 8; ret; 
0x0016baf9: rol byte ptr [eax + 0x440f0039], 0xc8; pop ebx; pop esi; mov eax, ecx; ret; 
0x000408ed: rol byte ptr [eax + 0xd75003a], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000983d8: rol byte ptr [eax + 0xf00197d], cl; xchg ebp, eax; ret 0xe2c1; 
0x00098b6f: rol byte ptr [eax + 0xf00197f], cl; xchg ebp, eax; ret 0xe2c1; 
0x000fef30: rol byte ptr [eax + 0xf004d7e], cl; xchg ebp, eax; ret 0xd201; 
0x000b994a: rol byte ptr [eax + eax], cl; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x001399ac: rol byte ptr [eax - 0x6bf0a006], 1; ret 0x2d3c; 
0x0004e9d3: rol byte ptr [eax - 0x79f0f607], 1; ret; 
0x00056760: rol byte ptr [eax - 0x79f0f607], 1; xchg esi, eax; add dword ptr [eax], eax; add byte ptr [ebx - 0x362743], al; call dword ptr [eax]; 
0x000d9b88: rol byte ptr [eax*4 - 0x760d8a2e], 0xc8; pop ebx; ret; 
0x00182cec: rol byte ptr [eax], 0; add byte ptr [ebx - 0x6c72f714], al; cdq; stc; call dword ptr [edx - 0x77]; 
0x00181043: rol byte ptr [eax], 0; add byte ptr [ecx - 0xb37b], cl; dec dword ptr [ecx - 0xbf6b]; dec dword ptr [ecx - 0xaf4b]; jmp dword ptr [ebp - 0x75]; 
0x0010f21a: rol byte ptr [eax], 0; add byte ptr [ecx], bh; ret 0x840f; 
0x001932f7: rol byte ptr [eax], 0xf7; ret 0xf; 
0x0010f148: rol byte ptr [eax], 1; add byte ptr [eax], al; add byte ptr [eax], 0; add byte ptr [ebx - 0x72c7dba4], cl; xor dword ptr [ecx + ecx*2], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0010c446: rol byte ptr [eax], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012b4c7: rol byte ptr [eax], 1; add byte ptr [eax], al; mov ebx, 0xffffffff; mov edx, 0xffffffff; call dword ptr gs:[0x10]; 
0x00024407: rol byte ptr [eax], 1; je 0x24426; sub esp, 0xc; push dword ptr [ebp - 0x34]; call dword ptr [ebp - 0x38]; 
0x0010c396: rol byte ptr [eax], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012b3e7: rol byte ptr [eax], cl; add byte ptr [eax], al; mov ebx, 0xffffffff; mov edx, 0xffffffff; call dword ptr gs:[0x10]; 
0x00040774: rol byte ptr [eax], cl; neg edx; cmovs edx, ebx; cmovs eax, ecx; pop ebx; ret; 
0x000253d2: rol byte ptr [eax], cl; neg edx; ret; 
0x001238bf: rol byte ptr [eax], cl; ret; 
0x000c1c90: rol byte ptr [ebp + 0x663b75c0], 0xf; xlatb; ret 0xc085; 
0x0008681c: rol byte ptr [ebp - 0x3d6af040], cl; mov eax, edx; ret; 
0x00136edb: rol byte ptr [ebp - 0x3db7f040], cl; add esp, 8; pop ebx; ret; 
0x00083bf1: rol byte ptr [ebp - 0x3f6af02e], 0x3b; sahf; push 0xf000001; xchg esp, eax; ret 0x9e3b; 
0x0013a729: rol byte ptr [ebp - 0x74698a0a], cl; xor dword ptr [ecx + eax], 0; add byte ptr [ebx - 0x17701500], cl; ret; 
0x00033d66: rol byte ptr [ebp - 0x76f58b2e], 0x44; and al, 0x14; call edx; 
0x00130ee4: rol byte ptr [ebp - 0x7cc38b2e], 0xec; or byte ptr [ebp - 0x659bf79], cl; call dword ptr [eax + 0x55]; 
0x00136d49: rol byte ptr [ebp - 0x7cf58a25], 0xc4; add al, 0x5b; pop esi; ret; 
0x00156589: rol byte ptr [ebx + 0x108704c0], cl; cmp edx, 1; jg 0x156598; ret; 
0x000fd384: rol byte ptr [ebx + 0x29740afb], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000a0d11: rol byte ptr [ebx + 0x440f02f8], cl; ret 0xec83; 
0x000b38b7: rol byte ptr [ebx + 0x4a8d02eb], 1; add cl, byte ptr [edi]; test dword ptr [0x5bffffff], edi; ret; 
0x000b393d: rol byte ptr [ebx + 0x4a8d06eb], 1; push es; jne 0xb3801; pop ebx; ret; 
0x000b395b: rol byte ptr [ebx + 0x4a8d07eb], 1; pop es; jne 0xb3801; pop ebx; ret; 
0x000b39df: rol byte ptr [ebx + 0x4a8d0beb], 1; or ecx, dword ptr [edi]; test dword ptr [0x5bfffffe], edx; ret; 
0x000b3a53: rol byte ptr [ebx + 0x4a8d0eeb], 1; push cs; jne 0xb3801; pop ebx; ret; 
0x000430d9: rol byte ptr [ebx + 0x508d1ff0], 0xe8; mov eax, edx; ret; 
0x00042cf3: rol byte ptr [ebx + 0x508d1ff0], 0xe9; mov eax, edx; ret; 
0x00043189: rol byte ptr [ebx + 0x508d1ff0], 0xf0; mov eax, edx; ret; 
0x00042d94: rol byte ptr [ebx + 0x508d1ff0], 0xf1; mov eax, edx; ret; 
0x00042dd3: rol byte ptr [ebx + 0x508d1ff0], 1; mov eax, edx; ret; 
0x000834d9: rol byte ptr [ebx + 0x525004ec], 1; push esi; call ecx; 
0x00041f3a: rol byte ptr [ebx + 0x5e5b04c4], 0x5f; pop ebp; ret; 
0x0002711b: rol byte ptr [ebx + 0x5e5b0cc4], 0x5f; pop ebp; ret; 
0x00060e65: rol byte ptr [ebx + 0x5e5b10c4], 0x5f; pop ebp; ret; 
0x0012411a: rol byte ptr [ebx + 0x5e5b10c4], 0x5f; ret; 
0x0012c56f: rol byte ptr [ebx + 0x5e5b10c4], cl; pop edi; ret; 
0x000afe1a: rol byte ptr [ebx + 0x5e5b14c4], 1; pop edi; pop ebp; ret; 
0x000a97f7: rol byte ptr [ebx + 0x5e5b18c4], 1; pop edi; pop ebp; ret; 
0x00042664: rol byte ptr [ebx + 0x5e5b1cc4], 0x5f; pop ebp; ret; 
0x00080ed5: rol byte ptr [ebx + 0x5e5b1cc4], 1; pop edi; pop ebp; ret; 
0x000423ab: rol byte ptr [ebx + 0x5e5b2cc4], 0x5f; pop ebp; ret; 
0x0004da09: rol byte ptr [ebx + 0x5e5b3cc4], 0x5f; pop ebp; ret; 
0x001b6b14: rol byte ptr [ebx + 0x5e5b4cc4], 0x5f; pop ebp; ret; 
0x000517bb: rol byte ptr [ebx + 0x5e5b5cc4], cl; pop edi; pop ebp; ret; 
0x000b0067: rol byte ptr [ebx + 0x5e5f10c0], 1; ret; 
0x000b0074: rol byte ptr [ebx + 0x5e5f20c0], 1; ret; 
0x000b0081: rol byte ptr [ebx + 0x5e5f30c0], 1; ret; 
0x000a9524: rol byte ptr [ebx + 0x77740fa], 0x8b; test byte ptr [ecx - 0xd14], dl; ret; 
0x000a94f4: rol byte ptr [ebx + 0x77740fa], 0x8b; test byte ptr [ecx - 0xe34], dl; ret; 
0x0005ebf5: rol byte ptr [ebx + 0xf41087f], cl; xchg esp, eax; ret 0x6a52; 
0x0010e3a2: rol byte ptr [ebx + 0xf5bfff8], cl; inc esp; ret 0x2ec3; 
0x00103e95: rol byte ptr [ebx + eax*4], 0xc2; add al, 0x39; ret; 
0x001770a4: rol byte ptr [ebx - 0x137cef3c], 1; or byte ptr [ebp - 0xc80437d], cl; call dword ptr [eax - 0x73]; 
0x00174636: rol byte ptr [ebx - 0x137cef3c], 1; or byte ptr [ebp - 0xcab637d], cl; call dword ptr [eax - 0x73]; 
0x000480b7: rol byte ptr [ebx - 0x173e031e], 1; add al, byte ptr [ecx]; ret 0x448b; 
0x000e3b55: rol byte ptr [ebx - 0x173e031e], 1; add al, byte ptr [ecx]; ret 0xd329; 
0x000e60dc: rol byte ptr [ebx - 0x173e031e], 1; add al, byte ptr [ecx]; ret 0xd729; 
0x000d64dd: rol byte ptr [ebx - 0x173e031e], 1; add al, byte ptr [ecx]; ret 0xd889; 
0x00053714: rol byte ptr [ebx - 0x177cfd20], 1; ret; 
0x001714a9: rol byte ptr [ebx - 0x2f76f73c], cl; pop ebx; ret; 
0x0013a83e: rol byte ptr [ebx - 0x2f76fb3c], cl; pop ebx; pop esi; ret; 
0x000928c9: rol byte ptr [ebx - 0x2ff60220], cl; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x000d5962: rol byte ptr [ebx - 0x362f43], cl; call dword ptr [eax]; 
0x0009c1d7: rol byte ptr [ebx - 0x3b7cfd18], 0xc; ret; 
0x0009c2f6: rol byte ptr [ebx - 0x3b7cfd40], 0xc; ret; 
0x000c1872: rol byte ptr [ebx - 0x3dfebf16], 0x7c; add eax, ecx; ret; 
0x000c1882: rol byte ptr [ebx - 0x3dfecf16], 0x7c; lea eax, es:[ecx + eax + 0x10]; ret; 
0x000c1892: rol byte ptr [ebx - 0x3dfedf16], 0x7c; push ss; lea eax, [ecx + eax + 0x20]; ret; 
0x000c18a2: rol byte ptr [ebx - 0x3dfeef16], 0x7c; push es; lea eax, [ecx + eax + 0x30]; ret; 
0x00042ead: rol byte ptr [ebx - 0x3f7afe3e], 1; cmovne eax, edx; ret; 
0x0012393c: rol byte ptr [ebx - 0x3f7c0f20], 0x26; mov edx, dword ptr [edx + 0xa4]; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; ret; 
0x00042d0e: rol byte ptr [ebx - 0x3f7ce010], 1; ret; 
0x000fd3bb: rol byte ptr [ebx - 0x3ffefb3c], 0x5b; pop esi; ret; 
0x0012ed8c: rol byte ptr [ebx - 0x49f0d33c], 0xc0; neg eax; ret; 
0x0010b4ab: rol byte ptr [ebx - 0x49f0d33c], 0xc0; ret; 
0x0012ed4b: rol byte ptr [ebx - 0x49f0e33c], 0xc0; neg eax; ret; 
0x00172bf8: rol byte ptr [ebx - 0x49f0e33c], 0xc0; ret; 
0x0009c305: rol byte ptr [ebx - 0x49f0f33c], 0xc0; lea eax, [eax + eax + 2]; ret; 
0x00053447: rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x00088ca3: rol byte ptr [ebx - 0x49f0f73c], 0xc0; pop ebx; neg eax; ret; 
0x00170f19: rol byte ptr [ebx - 0x49f0f73c], 0xc0; pop ebx; ret; 
0x00136d6d: rol byte ptr [ebx - 0x49f0fb3c], 0xc0; pop ebx; pop esi; neg eax; ret; 
0x001720b0: rol byte ptr [ebx - 0x49f0fb3c], 0xc0; pop ebx; pop esi; ret; 
0x0013f064: rol byte ptr [ebx - 0x57ca818], 1; or dword ptr [edi], ecx; inc esi; ret 0xbe0f; 
0x00067a75: rol byte ptr [ebx - 0x59343], 0xff; xor byte ptr [edi], cl; xchg esp, eax; ret; 
0x000a6d8a: rol byte ptr [ebx - 0x6114ef3c], 1; sub esp, 0xc; push dword ptr [esp + 0x14]; call eax; 
0x00189db1: rol byte ptr [ebx - 0x6bf00008], cl; ret 0x1389; 
0x0005ae1b: rol byte ptr [ebx - 0x6bf0fb08], cl; ret 0x48b; 
0x0017bad3: rol byte ptr [ebx - 0x6bf0fd08], cl; ret 0xf883; 
0x000c1a5c: rol byte ptr [ebx - 0x73ee010], 3; sub edx, eax; lea ecx, [edx + 3]; mov eax, ecx; ret; 
0x000e0953: rol byte ptr [ebx - 0x78f0c408], 1; ret; 
0x00066f26: rol byte ptr [ebx - 0x79f0f601], 1; inc esi; or dword ptr [eax], eax; add byte ptr [ebx - 0x58f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x001ab8c6: rol byte ptr [ebx], 0x5f; ret; 
0x0017078e: rol byte ptr [ebx], 0x83; ret 0x8303; 
0x000fb26c: rol byte ptr [ecx + 0x1cd1fa], 0; setne al; ret; 
0x000fb2d1: rol byte ptr [ecx + 0xadf5fa], 0; setne al; ret; 
0x0015c889: rol byte ptr [ecx + 0xc0fefb], cl; add byte ptr [edi], cl; xchg ebp, eax; ret 0x548d; 
0x001420c7: rol byte ptr [ecx + 0xe1], 0xc0; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x001420cd: rol byte ptr [ecx + 0xf9], 0x80; cmovne eax, edx; ret; 
0x001715c7: rol byte ptr [ecx + ecx*4], 0x43; adc byte ptr [ebx + 0x1b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x001269b4: rol byte ptr [ecx + ecx*4], 0x83; mov al, byte ptr [0x83000045]; les ecx, ptr [eax]; mov eax, edx; pop ebx; ret; 
0x000cd65f: rol byte ptr [ecx + ecx*4], 3; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000c4d84: rol byte ptr [ecx + edi], 0xca; je 0xc4d8e; test edx, edx; jne 0xc4d80; ret; 
0x000fb295: rol byte ptr [ecx - 0x52053106], 0x1b; setne al; ret; 
0x0004a881: rol byte ptr [ecx - 0x7fffff19], cl; add byte ptr [edi], cl; xchg ebp, eax; ret 0xea83; 
0x0005a1bc: rol byte ptr [ecx], 0x39; ret 0x1e74; 
0x00109876: rol byte ptr [ecx], 0x39; ret 0x2a7e; 
0x000a97ea: rol byte ptr [ecx], 0x39; ret 0x872; 
0x001098a0: rol byte ptr [ecx], 0x39; ret 0xda75; 
0x0012571b: rol byte ptr [ecx], 0x39; ret 0xe075; 
0x0010626f: rol byte ptr [ecx], 0x39; ret 0xe675; 
0x00123f31: rol byte ptr [ecx], 0x39; ret 0xe975; 
0x000fec8b: rol byte ptr [ecx], 0x39; ret 0xef7f; 
0x00052d41: rol byte ptr [ecx], 0x39; ret; 
0x0005f366: rol byte ptr [ecx], 0x39; ror byte ptr [edi], 1; pushfd; ret 0xb60f; 
0x000c334a: rol byte ptr [ecx], 0x50; push esi; lea eax, [esp + 0x40]; push eax; push dword ptr [edi]; call ebx; 
0x00042d5e: rol byte ptr [ecx], 0x5b; ret; 
0x001abc81: rol byte ptr [ecx], 0x5f; ret; 
0x000a7e44: rol byte ptr [ecx], 0x83; les ecx, ptr [ebx + ebp]; dec ebp; add byte ptr [ecx], ch; ret 0xd801; 
0x00140ba1: rol byte ptr [ecx], 0x83; ret 0x3904; 
0x0009ea50: rol byte ptr [ecx], 0x83; ret 0x3910; 
0x0018588b: rol byte ptr [ecx], 0x83; ret 0x3914; 
0x00117836: rol byte ptr [ecx], 0x83; ret 0x5201; 
0x00148f23: rol byte ptr [ecx], 0x83; ret 0x8301; 
0x00189600: rol byte ptr [ecx], 0x83; ret 0x8308; 
0x0002bd0e: rol byte ptr [ecx], 0x83; ret 0x8801; 
0x000284c5: rol byte ptr [ecx], 0x83; ret 0x8901; 
0x00029aba: rol byte ptr [ecx], 0x83; ret; 
0x000a86c0: rol byte ptr [ecx], 0x84; sar byte ptr [edx], cl; cmove eax, edx; ret; 
0x000ac4ee: rol byte ptr [ecx], 0x89; add eax, dword ptr [ebx - 0xf76fb3c]; pop ebx; pop esi; ret; 
0x00095347: rol byte ptr [ecx], 0x89; inc ebp; add al, 0xe9; mov al, byte ptr [0xf7fffffd]; ret 0; 
0x000c6279: rol byte ptr [ecx], 0x89; inc ecx; or byte ptr [edi], cl; nop; ret 0x4b8b; 
0x0018c291: rol byte ptr [ecx], 0x89; ret 0x850f; 
0x00030e77: rol byte ptr [ecx], 0x89; ret; 
0x000f1bb5: rol byte ptr [ecx], 0x89; test dword ptr [ebx + edi*8 - 1], edi; inc dword ptr [ecx]; ret; 
0x0013d271: rol byte ptr [ecx], 0x8b; adc esi, esi; ret 0xf20; 
0x0013a791: rol byte ptr [ecx], 0x8b; dec edx; add al, 0x83; ret 0x8518; 
0x000c1796: rol byte ptr [ecx], 0xc8; ret; 
0x000c1b6c: rol byte ptr [ecx], 0xd0; add eax, ecx; ret; 
0x000c1cd2: rol byte ptr [ecx], 0xd0; ret; 
0x000c1127: rol byte ptr [ecx], 0xf8; pop edi; ret; 
0x000c1275: rol byte ptr [ecx], 0xf8; sub eax, 0x10; pop edi; ret; 
0x000abb21: rol byte ptr [ecx], 0xf; mov esi, 0xda390114; je 0xabb20; pop ebx; ret; 
0x00034870: rol byte ptr [ecx], 1; add byte ptr [eax], al; add eax, dword ptr gs:[0]; ret; 
0x001a9d9c: rol byte ptr [ecx], 1; add byte ptr [eax], al; lea eax, [edi + 0xf]; pop edi; ret; 
0x000b362c: rol byte ptr [ecx], 1; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000c3128: rol byte ptr [ecx], 1; add byte ptr [eax], al; ret; 
0x001ace03: rol byte ptr [ecx], 1; add dword ptr [ecx], eax; shr eax, 0x18; ret; 
0x0006c1a9: rol byte ptr [ecx], 1; ret; 
0x000b005b: rol byte ptr [ecx], cl; rcr byte ptr [edi + 0x5e], 1; ret; 
0x000ab04d: rol byte ptr [ecx], cl; ret; 
0x000b0065: rol byte ptr [ecx], cl; rol byte ptr [ebx + 0x5e5f10c0], 1; ret; 
0x000b0072: rol byte ptr [ecx], cl; rol byte ptr [ebx + 0x5e5f20c0], 1; ret; 
0x000b007f: rol byte ptr [ecx], cl; rol byte ptr [ebx + 0x5e5f30c0], 1; ret; 
0x0010b961: rol byte ptr [edi + 0x3fac87], 0; cmp eax, 1; jg 0x10b9a8; call dword ptr [esi]; 
0x0015658b: rol byte ptr [edi + eax*4], 0x10; cmp edx, 1; jg 0x156598; ret; 
0x001ab8ec: rol byte ptr [edi], 0x5f; ret; 
0x00043271: rol byte ptr [edx + edx*8 + 0x8ba], 0; cmove eax, edx; ret; 
0x0002ded1: rol byte ptr [edx], 0x39; ret 0x820f; 
0x000abd27: rol byte ptr [edx], 0x5b; pop esi; pop edi; pop ebp; ret; 
0x001abc86: rol byte ptr [edx], 0x5f; ret; 
0x0005362d: rol byte ptr [esi], 0; add byte ptr [eax], al; call 0x535f0; jmp eax; 
0x001abc9a: rol byte ptr [esi], 0x5f; ret; 
0x0009aa87: rol cl, 0xe0; pop es; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x001423dc: rol cl, 0xea; adc byte ptr [ecx + 0xf9], al; or byte ptr [edi], 0x44; ret 0x8dc3; 
0x00091483: rol cl, 1; call 0x8938888d; clc; call dword ptr gs:[0x10]; 
0x0003be0e: rol cl, 1; cli; push ds; and eax, edx; ret; 
0x000abe04: rol dh, 1; inc edx; add al, byte ptr [eax]; pop ebx; pop esi; ret; 
0x000f1908: rol dword ptr [0x878d0000], cl; xchg byte ptr [edi - 7], al; call dword ptr [eax - 0x73]; 
0x000d999a: rol dword ptr [eax + 0x20740fe1], 1; ret; 
0x0009f6d4: rol dword ptr [eax + 0x75], 0x28; add ebx, 1; mov eax, 0x115; call dword ptr gs:[0x10]; 
0x0019f2ec: rol dword ptr [eax + 0x75], 0x70; movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x0009395a: rol dword ptr [eax + 0xf], 0x84; mov esi, 0x8b000003; je 0x93989; add al, 0x89; ret; 
0x00184dd9: rol dword ptr [eax - 0x3effffff], 0xe9; add dh, bl; movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x00039e1b: rol dword ptr [eax], 0; add byte ptr [ebp - 0x6b9ff55], cl; inc dword ptr [ebx - 0x7c72f314]; shr dword ptr [esi], 1; stc; call dword ptr [eax - 0x18]; 
0x000c1fec: rol dword ptr [eax], 0; inc dword ptr [eax]; je 0xc1ff4; inc eax; pop edi; ret; 
0x000f0ace: rol dword ptr [eax], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f0a9e: rol dword ptr [eax], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001aad47: rol dword ptr [ebp + 0x30850fc0], 2; add byte ptr [eax], al; xor eax, eax; ret; 
0x000c1561: rol dword ptr [ebp + 0x315a75c0], 0xc0; pop edi; ret; 
0x000c1826: rol dword ptr [ebp + 0x316575c0], 0xc0; ret; 
0x000c17f7: rol dword ptr [ebp + 0x317475c0], 0xc0; ret; 
0x001aad86: rol dword ptr [ebp + 0x71850fc0], 2; add byte ptr [eax], al; xor eax, eax; ret; 
0x000d75e0: rol dword ptr [ebp - 0x317bf001], 1; add dword ptr [eax], eax; add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x001aa8af: rol dword ptr [ebp - 0x377af040], 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x001168d1: rol dword ptr [ebp - 0x47ef8125], 0x26; add byte ptr [eax], al; add bl, dl; call 0x29134964; ret; 
0x00118381: rol dword ptr [ebp - 0x47ef8125], 0x26; add byte ptr [eax], al; add bl, dl; call 0x29136414; ret; 
0x00119e21: rol dword ptr [ebp - 0x47ef8125], 0x26; add byte ptr [eax], al; add bl, dl; call 0x29137eb4; ret; 
0x000c1527: rol dword ptr [ebp - 0x4f7af040], 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x00089772: rol dword ptr [ebx + 0x505104ec], 0x56; call edx; 
0x0011c27c: rol dword ptr [ebx + 0x5e5b00d8], 1; pop edi; pop ebp; ret; 
0x0011b15d: rol dword ptr [ebx + 0x5e5b00d8], 1; ret; 
0x000983f4: rol dword ptr [ebx + 0x5e5b1cc4], cl; pop edi; pop ebp; ret; 
0x000c3bfb: rol dword ptr [ebx + 0xb813fe2], 1; add byte ptr [eax], al; add byte ptr [eax - 0x7cf9063f], al; ret 0xc680; 
0x001551e2: rol dword ptr [ebx + eax*4], 0xc4; sbb al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x00136ffa: rol dword ptr [ebx - 0x3f7aef3c], 0xf; xchg esp, eax; ret 0x4483; 
0x000c0f32: rol dword ptr [ebx - 0x3f], 0x10; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0009f346: rol dword ptr [ebx - 0x3fceeb3c], cl; pop ebx; pop esi; ret; 
0x0004d1f0: rol dword ptr [ebx - 0x7bf0e808], cl; imul eax, dword ptr [ecx], 0x17ba0000; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5152; 
0x00091919: rol dword ptr [ebx], 0x83; clc; add esi, dword ptr [eax + ecx + 0x5b]; pop esi; pop edi; ret; 
0x000bb5ad: rol dword ptr [ecx + ebx + 0xc030011], 0x99; jmp ecx; 
0x00179064: rol dword ptr [ecx + edx*2], 0x57; call dword ptr [eax + 8]; 
0x00042e25: rol dword ptr [ecx], 0x5b; mov eax, ecx; ret; 
0x00038dcd: rol dword ptr [ecx], 0x83; cli; or dword ptr [edi], ecx; xchg esi, eax; ret 0xb60f; 
0x00094dc5: rol dword ptr [ecx], 0x83; ret 0x8108; 
0x000c5f86: rol dword ptr [ecx], 0x83; ret 0x8801; 
0x000afd4a: rol dword ptr [ecx], 0x89; ret; 
0x000af779: rol dword ptr [ecx], 0xeb; adc eax, 0x8300768d; ret 0x8b20; 
0x001040f0: rol dword ptr [ecx], 9; ret 0xf983; 
0x000bad4b: rol dword ptr [edi], 1; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000b923d: rol dword ptr [edx + edi + 0xc030011], 0x91; jmp ecx; 
0x0013088b: rol dword ptr [esi - 0x11], 0xff; ret; 
0x0003dc27: rol dword ptr [esi], 0x83; ret 0x901; 
0x0014d6dd: rol dx, 8; mov word ptr [ecx + 0xa], dx; pop ebx; pop esi; pop edi; ret; 
0x000ba9e1: rol eax, 0x24; adc dword ptr [eax], eax; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0013f62a: rol eax, 8; ret; 
0x0003d1c6: rol eax, cl; and dword ptr [edx + ebx*4], eax; xor eax, eax; pop ebx; ret; 
0x000decc2: rol ecx, 0xc9; add al, byte ptr [ecx - 0x70a3d707]; add dh, byte ptr [esi + 0xa]; mov eax, edx; ret; 
0x00098479: rol ecx, 0xe1; pop es; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000983ae: rol ecx, 0xe9; add esi, dword ptr [edi + edi*4 - 0x77]; ret 0xca83; 
0x0003badf: rol ecx, 1; call 0x10ed7c05; or eax, ecx; ret; 
0x0003c3fa: rol ecx, 9; mov dword ptr [edx + 0x14], ecx; mov dword ptr [edx + 0xc], ebp; mov dword ptr [edx + 0x18], eax; ret; 
0x0014d6de: rol edx, 8; mov word ptr [ecx + 0xa], dx; pop ebx; pop esi; pop edi; ret; 
0x00024bcf: rol edx, 9; mov dword ptr [eax + 0x1a50], edx; pop ebx; pop esi; ret; 
0x00024aff: rol edx, 9; mov dword ptr [eax + 0x1a50], edx; ret; 
0x000a56bc: ror byte ptr [0x878d0000], 0x7b; inc ecx; stc; call dword ptr [eax - 0x73]; 
0x0014c6d0: ror byte ptr [eax + 0xf10244c], 0x94; ret 0xa3c; 
0x001287c1: ror byte ptr [eax + esi], 1; ror byte ptr [ecx], 0xc8; ret; 
0x000a1ea7: ror byte ptr [eax], 0x39; ret 0xf375; 
0x000ffbb1: ror byte ptr [eax], 0x39; ret 0xf475; 
0x0015bf36: ror byte ptr [eax], 0x50; call 0xc21a0; add esp, 0x1c; ret; 
0x001abca4: ror byte ptr [eax], 0x5f; ret; 
0x001a71f1: ror byte ptr [eax], 0x83; ret 0x5608; 
0x001a5f52: ror byte ptr [eax], 0x83; ret 0x5708; 
0x001a0b91: ror byte ptr [eax], 0x83; ret 0x8308; 
0x001519a6: ror byte ptr [eax], 0x83; ret 0x8908; 
0x0019f371: ror byte ptr [eax], 0x83; ret 0xf608; 
0x0017481b: ror byte ptr [eax], 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x001747f8: ror byte ptr [eax], 0x89; inc esp; and al, 4; jmp edx; 
0x000cde8c: ror byte ptr [eax], 1; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00035df9: ror byte ptr [eax], 1; add byte ptr [ebx - 0x3f7cef3c], al; sbb al, 0x89; loope 0x35d8e; ret; 
0x00042226: ror byte ptr [ebp + 0x2bb6c48], cl; add byte ptr [eax], al; add byte ptr [eax + 0x7e], bh; call dword ptr gs:[0x10]; 
0x00061abe: ror byte ptr [ebp + 0x329c0384], 0xf9; call dword ptr [eax + 0x6a]; 
0x000290ab: ror byte ptr [ebp + 0x490f0342], cl; ret 0xec83; 
0x00025a38: ror byte ptr [ebp + 0x5e5bf465], 0x5f; pop ebp; ret; 
0x00094848: ror byte ptr [ebp + 0x6c504], 1; add byte ptr [eax], al; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0007ca91: ror byte ptr [ebp - 0x153efcb0], 1; add dh, dh; pop es; add dword ptr [edi], ecx; inc ebp; ret 0xec83; 
0x000a84f5: ror byte ptr [ebp - 0x2776feb0], 0xf; inc ebp; ret 0xc483; 
0x0015614d: ror byte ptr [ebp - 0x64d2f70], 1; call dword ptr [edx - 0x73]; 
0x00180bf7: ror byte ptr [ebp - 0x72af2bbb], 0x87; mov word ptr [eax - 0x72b00000], gs; xchg dword ptr [esi], edi; arpl cx, di; push dword ptr [ecx]; call dword ptr [eax + 0x6a]; 
0x00116046: ror byte ptr [ebp - 0x74acffee], 1; push esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000bb837: ror byte ptr [ebp - 0x7af0efc0], cl; ret; 
0x00194e47: ror byte ptr [ebp - 1], cl; inc dword ptr [ecx + 0x46765c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00140e1a: ror byte ptr [ebx + 0x29302444], 1; fadd dword ptr [ecx]; ror byte ptr [edi], 1; inc edx; ret 0xd129; 
0x00140cc6: ror byte ptr [ebx + 0x29302444], 1; fmul dword ptr [ebx + 0x120245c]; ror byte ptr [edi], 1; inc edx; ret 0xd329; 
0x000ccd05: ror byte ptr [ebx + 0x29642454], 1; ret; 
0x000c9b83: ror byte ptr [ebx + 0x296c2454], 1; ret; 
0x00109849: ror byte ptr [ebx + 0x39642444], 1; ret 0x8e0f; 
0x00133b89: ror byte ptr [ebx + 0x3980044a], 0; je 0x133b98; ret; 
0x00031a77: ror byte ptr [ebx + 0x41031841], 1; adc al, 0x39; ret 0x4d0f; 
0x0017848a: ror byte ptr [ebx + 0x650c2454], 0x2b; adc eax, 0x14; jne 0x1784a7; add esp, 0x1c; ret; 
0x00132890: ror byte ptr [ebx + 0x656c2454], 1; sub edx, dword ptr [0x14]; jne 0x1328a2; add esp, 0x7c; ret; 
0x000d9a69: ror byte ptr [ebx + 0x75c9850a], 0x22; ret; 
0x001227f9: ror byte ptr [ebx + 0x78c9850a], 8; mov eax, dword ptr [edx + 8]; and eax, 0x100f; ret; 
0x00043535: ror byte ptr [ebx + 0x7af493b4], cl; clc; inc dword ptr [ecx]; fidivr word ptr [esi]; jmp esi; 
0x0003fa0c: ror byte ptr [ebx + 0x9082454], 1; ret 0xd389; 
0x0014692d: ror byte ptr [ebx + 0xf102444], 0x95; ret 0xc085; 
0x00123e58: ror byte ptr [ebx + 0xfc08500], cl; dec eax; ret 0xc483; 
0x000e0350: ror byte ptr [ebx - 0x19c77944], 0xf8; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x000dfc0d: ror byte ptr [ebx - 0x1b1f7944], 0xf8; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x0010d208: ror byte ptr [ebx - 0x41fbdbb4], cl; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00135b50: ror byte ptr [ebx - 0x5cf0f7fc], cl; fmul dword ptr [edi]; xchg edx, eax; ret 0xd089; 
0x0016ba03: ror byte ptr [ebx - 0x72d7db84], 1; xchg esp, esi; mov ch, 0xf9; call dword ptr [eax - 0x73]; 
0x00134ac8: ror byte ptr [ebx - 0x74efdbbc], cl; inc eax; dec esp; call 0x134990; add esp, 4; ret; 
0x00142e59: ror byte ptr [ebx - 0x76f3dbbc], 1; adc edi, dword ptr [ecx]; ret 0x6c74; 
0x001ab913: ror byte ptr [ebx], 0x5f; ret; 
0x00097810: ror byte ptr [ebx], 0xba; add dword ptr [0xa30f0000], 0xe9ac73c2; cmp dh, 0xff; dec dword ptr [ebp - 0x678e779]; call dword ptr [eax - 0x73]; 
0x000fb218: ror byte ptr [ebx], 1; mov edx, 0x20; cmovne eax, edx; ret; 
0x000fb216: ror byte ptr [ebx], 1; ror byte ptr [ebx], 1; mov edx, 0x20; cmovne eax, edx; ret; 
0x000aad8d: ror byte ptr [ecx + 0x13c244c], cl; ret; 
0x0007c28e: ror byte ptr [ecx + 0x14c48303], 1; pop ebx; pop esi; ret; 
0x0003dc96: ror byte ptr [ecx + 0x163b8f9], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012e427: ror byte ptr [ecx + 0x1b8c3], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001169fb: ror byte ptr [ecx + 0x290c245c], cl; ror dword ptr [ecx + 0xf18245c], cl; xchg ebp, eax; ret; 
0x0005e004: ror byte ptr [ecx + 0x29fa89d1], 1; ret 0x448d; 
0x0017cee9: ror byte ptr [ecx + 0x315b1046], 0xc0; pop esi; pop edi; ret; 
0x000810c6: ror byte ptr [ecx + 0x4c4830b], 0x5b; pop esi; ret; 
0x00040734: ror byte ptr [ecx + 0x5a89104a], 0x14; pop ebx; pop esi; pop edi; ret; 
0x001222f9: ror byte ptr [ecx + 0x5e5b5053], 0x5f; ret; 
0x0003d403: ror byte ptr [ecx + 0x5f5e5b17], 0x5d; ret; 
0x00085199: ror byte ptr [ecx + 0x8c48301], 1; xor eax, eax; pop ebx; ret; 
0x000935ec: ror byte ptr [ecx + 0xafb8c7], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00137939: ror byte ptr [ecx + 0xf0c244c], 0x95; ret 0x44c7; 
0x000afcbc: ror byte ptr [ecx + 0xf102454], 1; inc edi; ret 0x5350; 
0x0003837b: ror byte ptr [ecx - 0x1cf7b], 1; dec dword ptr [ebx - 0x1f77b]; dec dword ptr [ecx - 0x1f743]; dec dword ptr [ecx - 0x76267631]; ret; 
0x00038265: ror byte ptr [ecx - 0x1f37b], 1; call dword ptr [eax - 1]; 
0x00055164: ror byte ptr [ecx - 0x22fbdbbc], 1; add al, 0x24; add esp, 0xc; ret; 
0x0003c37a: ror byte ptr [ecx - 0x3b7ce7bd], 8; xor eax, eax; pop ebx; ret; 
0x000c1d2f: ror byte ptr [ecx - 0x3dbaf028], 0x83; les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x00122846: ror byte ptr [ecx - 0x3fcef7bf], 1; pop ebx; ret; 
0x000f1f45: ror byte ptr [ecx - 0x49f7b], 1; call dword ptr [eax + 0x6a]; 
0x00068888: ror byte ptr [ecx - 0x5bb43], cl; dec dword ptr [edi]; dec edi; ret 0x8589; 
0x000353b9: ror byte ptr [ecx - 0x7439760e], 1; inc ebp; les edi, ptr [ecx]; ret 0x830f; 
0x000a269b: ror byte ptr [ecx - 0x744a8b3d], 1; push esi; or byte ptr [ecx], ch; ret 0xfa83; 
0x001b0e73: ror byte ptr [ecx - 0x7693dbbc], 1; ret 0x4c89; 
0x000d4390: ror byte ptr [ecx - 0x7c0ffe35], cl; ret 0x8d01; 
0x00169da1: ror byte ptr [ecx - 0x7ce7dbac], 1; ret 0xf01; 
0x001abca9: ror byte ptr [ecx], 0x5f; ret; 
0x00156bdc: ror byte ptr [ecx], 0x89; inc esp; xchg ebx, eax; add al, 0x83; ret 0x8301; 
0x001287c4: ror byte ptr [ecx], 0xc8; ret; 
0x0012881b: ror byte ptr [ecx], 0xf0; pop esi; pop edi; ret; 
0x000b925d: ror byte ptr [ecx], 1; or eax, 0x5fc18100; cmp dl, byte ptr [ecx]; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0009fb61: ror byte ptr [ecx], 1; ret; 
0x000afdee: ror byte ptr [ecx], cl; ret 0xc031; 
0x0013bc03: ror byte ptr [edi], 0x44; rcl dword ptr [eax - 0x73], 0x87; push si; stc; call dword ptr [eax - 1]; 
0x001895a2: ror byte ptr [edi], 0x44; ret 0x178b; 
0x000c4a37: ror byte ptr [edi], 0x44; ret 0x4489; 
0x0012524d: ror byte ptr [edi], 0x44; ret 0x66c3; 
0x0010d871: ror byte ptr [edi], 0x44; ret 0xb58b; 
0x00125e9c: ror byte ptr [edi], 0x44; ret 0xc483; 
0x00168a81: ror byte ptr [edi], 0x44; ret 0xec83; 
0x00026d34: ror byte ptr [edi], 0x44; ret; 
0x00146a05: ror byte ptr [edi], 0x45; call 0x109ff6; jmp dword ptr [esi - 0x70]; 
0x00042eb2: ror byte ptr [edi], 0x45; ret 0x66c3; 
0x00137651: ror byte ptr [edi], 0x48; ret 0x4639; 
0x0002ff57: ror byte ptr [edi], 0x48; ret 0xc083; 
0x0004092d: ror byte ptr [edi], 0x48; ret 0xc483; 
0x0013738a: ror byte ptr [edi], 0x48; ret 0xc629; 
0x000dac00: ror byte ptr [edi], 0x48; ret 0xef29; 
0x0008d0d1: ror byte ptr [edi], 0x48; ret 0xff50; 
0x00123694: ror byte ptr [edi], 0x49; ret 0x8dc3; 
0x0015a6e5: ror byte ptr [edi], 0x4e; ret 0x4489; 
0x0009d7b8: ror byte ptr [edi], 0x4e; ret 0x578b; 
0x0011191f: ror byte ptr [edi], 0x4e; ret 0xe883; 
0x001ab93c: ror byte ptr [edi], 0x5f; ret; 
0x001271f1: ror byte ptr [edi], 0x84; aaa; adc byte ptr [eax], al; add byte ptr [ebp - 0x6aef47d], cl; call dword ptr [edx + 0x52]; 
0x0008664a: ror byte ptr [edi], 0x84; aas; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x00069959: ror byte ptr [edi], 0x84; add eax, 0x8b000011; test dword ptr [eax - 0x74000005], edi; xchg ebp, eax; mov esp, 0x1fffffb; ret 0x9589; 
0x00069b63: ror byte ptr [edi], 0x84; and al, 0; add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xf001; 
0x00169934: ror byte ptr [edi], 0x84; call 0x8416993a; ret; 
0x00126f8f: ror byte ptr [edi], 0x84; cmp al, byte ptr [0xec830000]; or byte ptr [ebp - 0x6b3b57d], cl; call dword ptr [eax + 0x55]; 
0x00177dd2: ror byte ptr [edi], 0x84; cmpsd dword ptr [esi], dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [ebx - 0x137cc3ba], cl; or al, 0x55; call dword ptr [eax + 0x10]; 
0x0002a8cc: ror byte ptr [edi], 0x84; dec ebx; add dword ptr [eax], eax; add dh, dh; ret 0xf08; 
0x00066a31: ror byte ptr [edi], 0x84; insb byte ptr es:[edi], dx; add al, 0; add byte ptr [ecx], bh; ret; 
0x0012704c: ror byte ptr [edi], 0x84; insb byte ptr es:[edi], dx; or byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; dec dword ptr [ebp - 7]; call dword ptr [eax + 0x55]; 
0x00169720: ror byte ptr [edi], 0x84; leave; add byte ptr [eax], al; add byte ptr [ebx - 0x7cefdbac], cl; ret 0x8902; 
0x00126fe0: ror byte ptr [edi], 0x84; leave; add eax, 0xec830000; or byte ptr [ebp - 0x6b2f87d], cl; call dword ptr [eax + 0x55]; 
0x001271d7: ror byte ptr [edi], 0x84; mov al, byte ptr [0x8d000010]; and edi, 0x50; stc; call dword ptr [ecx + 0x51]; 
0x000976f7: ror byte ptr [edi], 0x84; mov dword ptr [0x8dfffffd], eax; xchg dword ptr [eax], ebx; xchg ecx, edi; call dword ptr [eax - 0x73]; 
0x001089f1: ror byte ptr [edi], 0x84; mov ebp, 0xf000001; mov dh, 0x43; add al, 0x89; ret 0xe283; 
0x00147432: ror byte ptr [edi], 0x84; mov ebx, 0x89fffffe; ret; 
0x00084c7a: ror byte ptr [edi], 0x84; mov edi, 0x39000000; ret; 
0x001701c9: ror byte ptr [edi], 0x84; mov esi, 0x83fffffe; in al, dx; or al, 0x56; call eax; 
0x0007c40d: ror byte ptr [edi], 0x84; mov esp, 0x8b000000; inc esi; push 0x850fc085; ret 0; 
0x0007ecbc: ror byte ptr [edi], 0x84; pop ebp; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x0018aafa: ror byte ptr [edi], 0x84; pop es; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x00050be1: ror byte ptr [edi], 0x84; pop esi; add al, 0; add byte ptr [ebx - 0x7cdfdb84], cl; jmp dword ptr [eax]; 
0x000a37c9: ror byte ptr [edi], 0x84; push 0x89000003; ret 0x588d; 
0x0018357c: ror byte ptr [edi], 0x84; push ebp; add al, 0; add byte ptr [ebx - 0x4c72f714], al; mov ah, byte ptr [esi - 7]; call dword ptr [esi + 0x57]; 
0x0008c13a: ror byte ptr [edi], 0x84; push edi; add al, byte ptr [eax]; add byte ptr [ecx], bh; ret; 
0x000eae57: ror byte ptr [edi], 0x84; ret 0; 
0x000cc23e: ror byte ptr [edi], 0x84; ret 0x11; 
0x000cf2ba: ror byte ptr [edi], 0x84; ret 0x14; 
0x0011d278: ror byte ptr [edi], 0x84; ret 0xfffc; 
0x00146d7a: ror byte ptr [edi], 0x84; ret 0xfffe; 
0x00189417: ror byte ptr [edi], 0x84; ret 2; 
0x0012bd17: ror byte ptr [edi], 0x84; ret 3; 
0x000278e6: ror byte ptr [edi], 0x84; ret; 
0x0007fdbf: ror byte ptr [edi], 0x84; retf 0; add byte ptr [ecx], bh; ret; 
0x000a55cf: ror byte ptr [edi], 0x84; retf 3; add byte ptr [ebp + 0x94c87], cl; add byte ptr [ecx - 0x9efdbbc], cl; ret 0xf04; 
0x00182ce9: ror byte ptr [edi], 0x84; rol byte ptr [eax], 0; add byte ptr [ebx - 0x6c72f714], al; cdq; stc; call dword ptr [edx - 0x77]; 
0x001272a7: ror byte ptr [edi], 0x84; sbb byte ptr [eax + eax], cl; add byte ptr [ebp - 0x6ad017d], cl; call dword ptr [edx + 0x52]; 
0x00126f59: ror byte ptr [edi], 0x84; sub byte ptr [0xec830000], al; or byte ptr [ebp - 0x6b4427d], cl; call dword ptr [eax + 0x55]; 
0x0006c2a6: ror byte ptr [edi], 0x84; sub eax, 0x2bffffb4; test dword ptr [eax - 0x7c000005], edi; in al, dx; or al, 0x89; ret; 
0x0006c070: ror byte ptr [edi], 0x84; test eax, 0x2bffffdd; test dword ptr [eax - 0x7c000005], edi; in al, dx; or al, 0x89; ret; 
0x0016f07c: ror byte ptr [edi], 0x84; xchg ecx, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x137cefbd], cl; or al, 0x56; call dword ptr [eax + 0x10]; 
0x00177607: ror byte ptr [edi], 0x84; xchg edx, eax; add al, 0; add byte ptr [ebx + 0x458b0cec], al; cmp al, 0x57; call dword ptr [eax + 0x10]; 
0x00072e41: ror byte ptr [edi], 0x84; xchg edx, eax; add al, 0; add byte ptr [ecx], bh; ret; 
0x001aac88: ror byte ptr [edi], 0x85; add dword ptr [ecx], 0xf660000; xlatb; ret; 
0x000b3c74: ror byte ptr [edi], 0x85; add eax, 0xe9fffff6; inc eax; idiv edi; jmp dword ptr [esi + 0xf]; 
0x000b8144: ror byte ptr [edi], 0x85; and eax, 0xe9fffff5; pushal; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000b3c54: ror byte ptr [edi], 0x85; and eax, 0xe9fffff6; pushal; idiv edi; jmp dword ptr [esi + 0xf]; 
0x000c1764: ror byte ptr [edi], 0x85; cmc; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000b3b0e: ror byte ptr [edi], 0x85; dec ebx; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00076955: ror byte ptr [edi], 0x85; hlt; ret 0xffff; 
0x001aad88: ror byte ptr [edi], 0x85; jno 0x1aad8f; add byte ptr [eax], al; xor eax, eax; ret; 
0x000c1529: ror byte ptr [edi], 0x85; mov al, 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x00178023: ror byte ptr [edi], 0x85; mov ecx, ecx; ljmp 0x8908:0x24748bff; ret; 
0x001255cf: ror byte ptr [edi], 0x85; mov edx, 0x83000000; in al, dx; or al, 0x89; ret; 
0x001859a4: ror byte ptr [edi], 0x85; movsd dword ptr es:[edi], dword ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000c148b: ror byte ptr [edi], 0x85; out dx, al; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x0007c418: ror byte ptr [edi], 0x85; ret 0; 
0x0004b516: ror byte ptr [edi], 0x85; ret 0xe; 
0x000d747d: ror byte ptr [edi], 0x85; ret 0xfffe; 
0x00043935: ror byte ptr [edi], 0x85; ret; 
0x001aad49: ror byte ptr [edi], 0x85; xor byte ptr [edx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x00034165: ror byte ptr [edi], 0x88; cmpsd dword ptr [esi], dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [ebp - 0x6a9f27d], cl; call dword ptr [esi - 1]; 
0x000e3bc5: ror byte ptr [edi], 0x88; ret 0xb; 
0x000eae6a: ror byte ptr [edi], 0x89; ret 0x25; 
0x00181481: ror byte ptr [edi], 0x89; ret; 
0x0012e1d8: ror byte ptr [edi], 0x8c; jno 0x12e24a; out dx, eax; push dword ptr [ecx + eax - 0x3d]; mov ebp, esi; call ebx; 
0x0004ce3d: ror byte ptr [edi], 0x8e; ret 6; 
0x00030e21: ror byte ptr [edi], 0x94; ret 0x3a3c; 
0x000452dc: ror byte ptr [edi], 0x94; ret 0x3c83; 
0x00109984: ror byte ptr [edi], 0x94; ret 0x3f8b; 
0x00136fff: ror byte ptr [edi], 0x94; ret 0x4483; 
0x001783cc: ror byte ptr [edi], 0x94; ret 0xc031; 
0x0003d3e1: ror byte ptr [edi], 0x94; ret; 
0x0010b4a8: ror byte ptr [edi], 0x94; rol byte ptr [ebx - 0x49f0d33c], 0xc0; ret; 
0x00053444: ror byte ptr [edi], 0x94; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x00169616: ror byte ptr [edi], 0x95; ret 0x3a3c; 
0x0017bb95: ror byte ptr [edi], 0x95; ret 0x41e9; 
0x0017147e: ror byte ptr [edi], 0x95; ret 0xc483; 
0x0008681e: ror byte ptr [edi], 0x95; ret 0xd089; 
0x0003a6ae: ror byte ptr [edi], 0x95; ret; 
0x00172bf5: ror byte ptr [edi], 0x95; rol byte ptr [ebx - 0x49f0e33c], 0xc0; ret; 
0x00170f16: ror byte ptr [edi], 0x95; rol byte ptr [ebx - 0x49f0f73c], 0xc0; pop ebx; ret; 
0x001720ad: ror byte ptr [edi], 0x95; rol byte ptr [ebx - 0x49f0fb3c], 0xc0; pop ebx; pop esi; ret; 
0x00124037: ror byte ptr [edi], 0x9e; ret 0xff85; 
0x00054e00: ror byte ptr [edi], 0xad; fadd dword ptr [edx + 0x74]; sub byte ptr [eax - 0xa], dl; ret 0x7501; 
0x0009c1d4: ror byte ptr [edi], 0xb6; rol byte ptr [ebx - 0x3b7cfd18], 0xc; ret; 
0x0009c2f3: ror byte ptr [edi], 0xb6; rol byte ptr [ebx - 0x3b7cfd40], 0xc; ret; 
0x0003c377: ror byte ptr [edi], 0xb6; ror byte ptr [ecx - 0x3b7ce7bd], 8; xor eax, eax; pop ebx; ret; 
0x0012364a: ror byte ptr [edi], 0xb6; sal bh, 0xd8; add esp, 0xc; ret; 
0x0015bedb: ror byte ptr [edi], 0xb6; sal bh, 0xd8; ret; 
0x00042cf0: ror byte ptr [edi], 0xbd; rol byte ptr [ebx + 0x508d1ff0], 0xe9; mov eax, edx; ret; 
0x00042d91: ror byte ptr [edi], 0xbd; rol byte ptr [ebx + 0x508d1ff0], 0xf1; mov eax, edx; ret; 
0x0014c172: ror byte ptr [edi], 1; dec edi; ret 0x4189; 
0x000fee79: ror byte ptr [edi], 1; dec edi; ret 0x568b; 
0x00173a3f: ror byte ptr [edi], 1; dec edi; ret 0x8966; 
0x00123d0a: ror byte ptr [edi], 1; dec edi; ret 0x8d50; 
0x0010e2cb: ror byte ptr [edi], 1; dec edi; ret 0xbce9; 
0x0010e1ad: ror byte ptr [edi], 1; dec esp; ret 0xdae9; 
0x0016bd8a: ror byte ptr [edi], 1; dec esp; ret 0xec83; 
0x000cbb35: ror byte ptr [edi], 1; dec esp; ret; 
0x00042907: ror byte ptr [edi], 1; inc ebp; ret; 
0x0004a0c6: ror byte ptr [edi], 1; inc ebx; shr byte ptr [ecx], 1; ret 0x8d52; 
0x00134c34: ror byte ptr [edi], 1; inc ebx; shr byte ptr [ecx], 1; ret 0xe801; 
0x000a629e: ror byte ptr [edi], 1; inc edi; ret 0x508d; 
0x000a405e: ror byte ptr [edi], 1; inc edi; ret 0xc083; 
0x0014130e: ror byte ptr [edi], 1; inc edx; ret 0x578d; 
0x0007a6d6: ror byte ptr [edi], 1; inc edx; ret 0x789; 
0x00140e22: ror byte ptr [edi], 1; inc edx; ret 0xd129; 
0x00140cd2: ror byte ptr [edi], 1; inc edx; ret 0xd329; 
0x000c717d: ror byte ptr [edi], 1; inc edx; ret 0xd9f7; 
0x00140ce0: ror byte ptr [edi], 1; inc edx; ret 0xe883; 
0x000a7fb8: ror byte ptr [edi], 1; inc edx; ret 0xea89; 
0x00043001: ror byte ptr [edi], 1; mov bh, 0xc0; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x00039d5b: ror byte ptr [edi], 1; mov dh, 0x11; test dl, dl; jne 0x39d40; ret; 
0x00042f4f: ror byte ptr [edi], 1; mov dh, 0xc0; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x00042dd0: ror byte ptr [edi], 1; mov ebp, 0x1ff083c0; lea edx, [eax + 1]; mov eax, edx; ret; 
0x0005f369: ror byte ptr [edi], 1; pushfd; ret 0xb60f; 
0x000addc1: ror byte ptr [edi], 1; test byte ptr [ebx - 0x75000000], dh; pop ebp; rol byte ptr [ecx], 1; ret; 
0x000c11a0: ror byte ptr [edi], 1; test cl, bl; add byte ptr [eax], al; add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x000fae55: ror byte ptr [edi], 1; test dword ptr [edi + edi*8 - 1], edx; dec dword ptr [ebx - 0x15637b]; inc dword ptr [ebx - 0x7f72f714]; add cl, byte ptr [eax - 7]; call dword ptr [eax - 1]; 
0x000770fa: ror byte ptr [edi], 1; test dword ptr [edi], ebp; ret 0xffff; 
0x00135256: ror byte ptr [edi], 1; xchg edx, eax; ret; 
0x000e38a8: ror byte ptr [edi], cl; dec ecx; ret 0x5c89; 
0x000e5dc6: ror byte ptr [edi], cl; dec ecx; ret 0xc483; 
0x000675f6: ror byte ptr [edi], cl; dec ecx; ret 0xe883; 
0x0006d015: ror byte ptr [edi], cl; dec edi; ret 0xff31; 
0x000741d9: ror byte ptr [edi], cl; inc esp; ret; 
0x000db1c6: ror byte ptr [edi], cl; mov byte ptr [ebx], dh; add dword ptr [eax], eax; add byte ptr [edi], cl; xchg ebp, eax; ret 0xc238; 
0x00028389: ror byte ptr [edi], cl; mov dh, 0xc2; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x00049aa4: ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0009121f: ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc11f; 
0x00134e31: ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret; 
0x0013c0c9: ror byte ptr [edi], cl; sahf; ret 0xd108; 
0x00065afe: ror byte ptr [edi], cl; test bl, cl; add dword ptr [eax], eax; add byte ptr [eax - 0x7bf08006], al; ret 1; 
0x0016eee5: ror byte ptr [edi], cl; test byte ptr [eax + eax + 0x54890000], al; and al, 4; sub esp, 0xc; push eax; call dword ptr [ecx + 0xc]; 
0x0002f217: ror byte ptr [edi], cl; test byte ptr [eax - 0x7d000000], bh; ret; 
0x0012e3f6: ror byte ptr [edi], cl; test byte ptr [ebx + 0x6b], dl; out dx, eax; call dword ptr [ebx + 0x56]; 
0x000a3786: ror byte ptr [edi], cl; test byte ptr [ebx - 0x72fffffd], ch; pop edx; or dh, dh; ret; 
0x001a92e7: ror byte ptr [edi], cl; test byte ptr [edx - 0xa000000], ah; ret 0x7501; 
0x0010286c: ror byte ptr [edi], cl; test ch, dl; add eax, dword ptr [eax]; add byte ptr [ebx - 0x7cf3dbbc], cl; ret 0xc704; 
0x0006fa1f: ror byte ptr [edi], cl; test dword ptr [ebx - 0x76ffffff], ebp; add ebp, ecx; ret; 
0x001b134a: ror byte ptr [edi], cl; test dword ptr [ecx + eax + 0x3c890000], ebx; sbb dword ptr [ecx - 0x7cfbe684], ecx; ret; 
0x0004a5cb: ror byte ptr [edi], cl; xchg ebp, eax; ret 0xb60f; 
0x00045780: ror byte ptr [edi], cl; xchg ebp, eax; ret 0xc220; 
0x000ff2a8: ror byte ptr [edi], cl; xchg ebp, eax; ret 0xd009; 
0x00157a60: ror byte ptr [edi], cl; xchg ebp, eax; ret 0xd789; 
0x0014683a: ror byte ptr [edi], cl; xchg ebp, eax; ret 0xed85; 
0x0010d1c4: ror byte ptr [edi], cl; xchg ebp, eax; ret; 
0x00083bf3: ror byte ptr [edi], cl; xchg ebp, eax; sar byte ptr [ebx], 0x9e; push 0xf000001; xchg esp, eax; ret 0x9e3b; 
0x001abcae: ror byte ptr [edx], 0x5f; ret; 
0x001abcc2: ror byte ptr [esi], 0x5f; ret; 
0x00141c41: ror byte ptr [esi], 0x85; sal byte ptr [ebx + 0x39], cl; ret 0x4572; 
0x00141ce6: ror byte ptr [esi], 0x85; sal byte ptr [esi + esi + 0x39], cl; ret 0x1f72; 
0x00070aad: ror byte ptr [esi], cl; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x4c]; mov dword ptr [esp + 4], ecx; jmp eax; 
0x000d6bd1: ror cl, 0xff; call dword ptr [eax + 0x6a]; 
0x000564f7: ror cl, 0xff; call dword ptr [eax - 0x18]; 
0x000d5f9d: ror cl, 0xff; call dword ptr [ebx - 0x75]; 
0x00058a43: ror cl, 0xff; call dword ptr [edi + 0x50]; 
0x000d63e4: ror cl, 0xff; call dword ptr [edi + 0x6a]; 
0x00058e65: ror cl, 0xff; call dword ptr [esi + 0x56]; 
0x000d844c: ror cl, 0xff; call dword ptr [esi + 0x6a]; 
0x00058e46: ror cl, 0xff; call dword ptr [esi - 0x18]; 
0x000d8472: ror cl, 0xff; dec dword ptr [ebp - 0x661f37a]; call dword ptr [eax - 0x73]; 
0x000d8671: ror cl, 0xff; dec dword ptr [ebp - 0x661f37f]; call dword ptr [eax - 0x73]; 
0x000d8705: ror cl, 0xff; dec dword ptr [ebp - 0x687cb7a]; call dword ptr [eax - 0x73]; 
0x000d6ae5: ror cl, 0xff; dec dword ptr [ecx - 0x361f73]; call dword ptr [eax + 0x52]; 
0x000d5b59: ror cl, 0xff; jmp dword ptr [ebp - 0x75]; 
0x001b4037: ror dword ptr [eax], 0x39; sal dword ptr [edx - 0xf], 0xe9; ret 0x11; 
0x000bac49: ror dword ptr [eax], cl; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000e7601: ror dword ptr [ebp + 0x2dd1c], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0008f5f3: ror dword ptr [ebp + 0x40000184], 1; add byte ptr [eax], al; ret; 
0x000751ca: ror dword ptr [ebp + 0x8d04], 0; add byte ptr [ecx - 0x4f773], cl; call dword ptr [eax + 0x53]; 
0x001aa667: ror dword ptr [ebp + 0xf661049], 1; xlatb; ret 0xc085; 
0x000259a2: ror dword ptr [ebp - 0x1876e1c0], 0x89; ret 0x25; 
0x00025902: ror dword ptr [ebp - 0x1976e1c0], 0x89; ret 0x25; 
0x001ab99a: ror dword ptr [ebp - 0x2d7aefc0], 1; jne 0x1ab9b0; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x00087299: ror dword ptr [ebx + 0x190c2454], cl; ret 0x157d; 
0x000cea45: ror dword ptr [ebx + 0x982484], 0; add byte ptr [ecx - 0x7ecbdbac], cl; ret 0; 
0x000c7fa5: ror dword ptr [ebx + 0x982484], 0; add byte ptr [ecx - 0x7ed3dbac], cl; ret 0; 
0x0006510c: ror dword ptr [ebx + 0xf20244c], cl; mov dh, 0x54; add ah, al; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [ecx + edx*4 - 0x73f14]; jmp eax; 
0x000a0aca: ror dword ptr [ebx - 0x1d], 0x19; add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [ebx + 0x67650f8], al; ret; 
0x00041933: ror dword ptr [ecx + 0x10ebc111], cl; and ebx, 0x3ff; xor eax, ebx; pop ebx; ret; 
0x0012e1e5: ror dword ptr [ecx + 0x1b8c3], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00071993: ror dword ptr [ecx + 0x244c8bca], 0x4c; mov dword ptr [esp + 4], ecx; jmp edx; 
0x000b93b8: ror dword ptr [ecx + 0x3001139], 0xc; cdq; jmp ecx; 
0x000dacba: ror dword ptr [ecx + 0x4e1c1d3], 0xf; movsb byte ptr es:[edi], byte ptr [esi]; ret; 
0x0007bf4c: ror dword ptr [ecx + 0x9488], 1; add byte ptr [ebx - 0x6e76a7b8], cl; mov byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x00116a01: ror dword ptr [ecx + 0xf18245c], cl; xchg ebp, eax; ret; 
0x00134e2d: ror dword ptr [ecx + 0xfd231d3], 0xa4; ret; 
0x0010cc21: ror dword ptr [ecx + eax*8 - 0x17], 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x00074271: ror dword ptr [ecx - 0x50363], cl; dec dword ptr [ebx - 0x4ff63]; call dword ptr [eax + 0x52]; 
0x0003ba11: ror dword ptr [ecx - 0x74f3dbac], 0x44; and al, 0x10; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0003bdc2: ror dword ptr [ecx - 0x74f7dbac], 0x44; and al, 0xc; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0003c0ea: ror dword ptr [ecx - 0x74fbdbac], 0x44; and al, 8; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x000538ac: ror dword ptr [ecx - 0x76180810], 1; ret; 
0x000e0ca3: ror dword ptr [ecx - 0x76b3db8c], cl; test ecx, 0xa40f02e1; ret; 
0x0018bd13: ror dword ptr [ecx - 0x76ebdbac], 1; ret 0xca29; 
0x000835d6: ror dword ptr [ecx - 0x7c357630], 0xc4; adc byte ptr [ecx], ah; ret 0xfa83; 
0x000e538a: ror dword ptr [ecx - 0x7ea7db8c], cl; ret; 
0x00128e75: ror dword ptr [ecx - 7], cl; jmp dword ptr [ebp - 0x75]; 
0x0003c3fb: ror dword ptr [ecx], 0x89; dec edx; adc al, 0x89; push 0xc; mov dword ptr [edx + 0x18], eax; ret; 
0x000ba892: ror dword ptr [edi + 0x3001125], 0xc; xchg ecx, eax; jmp ecx; 
0x000bb692: ror dword ptr [edi], 0x18; adc dword ptr [eax], eax; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x001ac709: ror dword ptr [edi], 0x74; adc eax, dword ptr [ebx - 0x218bfe20]; lea eax, [edi - 0x10]; pop edi; ret; 
0x0014ef86: ror dword ptr [edi], 0xb7; pop ecx; add dh, byte ptr [ecx]; shl byte ptr [esi + 0x39], 0x5a; add dh, byte ptr [ebp + eax + 0x5b]; ret; 
0x000c1793: ror dword ptr [edi], 0xbd; rol byte ptr [ecx], 0xc8; ret; 
0x000c0966: ror dword ptr [edi], 0xc7; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00083573: ror dword ptr [edi], 1; xchg esp, eax; ret; 
0x000fba4d: ror dword ptr [edi], cl; xchg esp, eax; ret 0xd008; 
0x000408a3: ror dword ptr [edx], 0; add byte ptr [eax], al; mov dword ptr [edx], ecx; ret; 
0x000c0a27: ror dword ptr [esi - 0x3a], 0x10; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0013bfe1: ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0002505d: ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0013f7e4: ror eax, 9; xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x10]; push edx; push edi; call eax; 
0x0013f8c1: ror eax, 9; xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x10]; push edx; push esi; call eax; 
0x0003ef48: ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [ebp + edi], edx; push dword ptr [ebx + 4]; call eax; 
0x000250ea: ror eax, 9; xor eax, dword ptr gs:[0x18]; pop edi; pop ebp; jmp eax; 
0x0015732d: ror eax, 9; xor eax, dword ptr gs:[0x18]; pop edi; pop ebp; ret; 
0x00156f7f: ror eax, 9; xor eax, dword ptr gs:[0x18]; push eax; call edx; 
0x0013c010: ror eax, 9; xor eax, dword ptr gs:[0x18]; push esi; call eax; 
0x0003f31f: ror eax, 9; xor eax, dword ptr gs:[0x18]; xchg dword ptr [edi], edx; cmp edx, 1; jg 0x3f3f0; call eax; 
0x000decc3: ror ecx, 2; cmp ecx, 0x28f5c28; jbe 0xdecd8; mov eax, edx; ret; 
0x000c0926: ror edi, 0xc6; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009ec19: sahf; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx + ecx*4], esi; stc; call dword ptr [eax - 0x18]; 
0x0009c2a5: sahf; add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x00120534: sahf; add dword ptr [eax], eax; add byte ptr [edi + 8], bh; call dword ptr gs:[0x10]; 
0x000b78ae: sahf; add eax, dword ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x00024fbb: sahf; and dword ptr [eax], eax; lea eax, [eax - 0x690ac]; ret; 
0x00024fdb: sahf; and dword ptr [eax], eax; lea eax, [eax - 0x690b4]; ret; 
0x000843be: sahf; fdiv st(7), st(0); inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0009e03e: sahf; idiv edi; inc dword ptr [ebx - 0x3fe6fe08]; add esp, 0x1c; ret; 
0x00114762: sahf; idiv edi; mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 6; call dword ptr gs:[0x10]; 
0x0009dff1: sahf; mov edx, 1; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0009fce3: sahf; movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ecx - 0x16ffe2bc], cl; ret; 
0x0013b32e: sahf; or dword ptr [eax], eax; add byte ptr [ecx - 0x11b43], cl; dec dword ptr [ebp - 0x9763]; jmp dword ptr [esi - 0x70]; 
0x00128d4c: sahf; out dx, al; call dword ptr [eax - 0x73]; 
0x00083bf8: sahf; push 0xf000001; xchg esp, eax; ret 0x9e3b; 
0x0018b38a: sahf; push 0xf000001; xchg esp, eax; ret 0xd008; 
0x00100e0e: sahf; ret 0x5420; 
0x0013c0cb: sahf; ret 0xd108; 
0x00104e2a: sahf; ret 0xd201; 
0x000df7ad: sahf; ret 0xd329; 
0x000db20c: sahf; ret 0xf883; 
0x00124039: sahf; ret 0xff85; 
0x000a17b4: sahf; sbb al, 0x3c; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000de8c5: sahf; stc; call dword ptr [eax - 0x18]; 
0x000d2c58: sahf; stc; call dword ptr [eax - 0x73]; 
0x000a6d8f: sahf; sub esp, 0xc; push dword ptr [esp + 0x14]; call eax; 
0x0003c28d: sal al, 0x89; ret; 
0x00094bcb: sal al, cl; cmpxchg dword ptr [esp + 4], edx; ret; 
0x00043289: sal bh, 0xd2; tzcnt eax, edx; test edx, edx; mov edx, 0x20; cmove eax, edx; ret; 
0x0012364d: sal bh, 0xd8; add esp, 0xc; ret; 
0x00053692: sal bh, 0xd8; pop esi; pop edi; ret; 
0x0012ed51: sal bh, 0xd8; ret; 
0x0003dc49: sal bh, 1; fmul dword ptr [edi]; dec eax; ret 0x56c3; 
0x000406b9: sal bh, 1; fmul dword ptr [edi]; dec eax; ret 0xf3c3; 
0x0013d07f: sal bh, cl; pop ebx; pop esi; pop edi; ret; 
0x00090477: sal bl, 0xa5; pop esi; pop edi; ret; 
0x00042e90: sal bl, 0xf; mov esp, 0x1508dc0; mov eax, edx; ret; 
0x00043349: sal bl, 0xf; mov esp, 0xbad285c2; and byte ptr [eax], al; add byte ptr [eax], al; cmove eax, edx; ret; 
0x00042f70: sal bl, 1; bsf eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x0004328b: sal bl, cl; bsf eax, edx; test edx, edx; mov edx, 0x20; cmove eax, edx; ret; 
0x00042ea9: sal bl, cl; bsf edx, eax; add edx, 1; test eax, eax; cmovne eax, edx; ret; 
0x000270b1: sal byte ptr [eax + ebp*8 - 0x73], 0x86; in al, dx; outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x000a20b5: sal byte ptr [eax + ebx + 0x5b], 0x5e; pop edi; ret; 
0x00157d6c: sal byte ptr [eax + ebx - 0x7d], cl; in al, dx; or byte ptr [ebp - 0x6bbcf7f], cl; call dword ptr [eax + 0x52]; 
0x001792dd: sal byte ptr [eax + ecx + 0x5b], 1; pop esi; pop edi; ret; 
0x000fdad5: sal byte ptr [eax + edi*2 - 0x7d], 0xec; or byte ptr [ebp - 0x6b7e07d], cl; call dword ptr [eax + 0x55]; 
0x0008c945: sal byte ptr [eax + edx + 0x39], 0xd0; jne 0x8c940; mov eax, dword ptr [eax]; mov dword ptr [ecx], eax; ret; 
0x001793fd: sal byte ptr [eax + edx + 0x5b], 1; add eax, 0x90; pop esi; pop edi; ret; 
0x0017948d: sal byte ptr [eax + edx + 0x5b], 1; add eax, 0x94; pop esi; pop edi; ret; 
0x0017936d: sal byte ptr [eax + edx + 0x5b], 1; sub eax, -0x80; pop esi; pop edi; ret; 
0x0009809d: sal byte ptr [eax + edx - 0x7d], cl; cli; add dword ptr [ebp + 0x1b], esi; or dword ptr [eax], 0x40000000; xor eax, eax; ret; 
0x00088695: sal byte ptr [eax + edx*4 - 0x7d], 0xec; or byte ptr [ebx - 0x72f3dba4], cl; add dword ptr [ecx], 0x3f; stc; call dword ptr [eax - 0x75]; 
0x000e7815: sal byte ptr [eax + esi - 0x7d], 0xec; or byte ptr [esi + 0x53], dl; call eax; 
0x00043ab8: sal byte ptr [eax + esi*2 - 0x75], 0x3c; and al, 0x8d; inc edi; inc byte ptr [ebx - 0x6bf00220]; ret 0xff83; 
0x000deaad: sal byte ptr [eax + esi*2 - 0x75], 0x5c; and al, 0x60; lea edx, [esp + 0x2c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000780c4: sal byte ptr [eax - 0x75], 0x85; call 0x8a0780c8; sbb byte ptr [ebx - 0x4fb7b], cl; inc dword ptr [ecx]; ret; 
0x000b0083: sal byte ptr [eax], 0x5f; pop esi; ret; 
0x000bd519: sal byte ptr [eax], 0xe8; adc edi, eax; or al, 0; add ecx, 0x10fa54; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c07b2: sal byte ptr [eax], 0xe8; js 0xc074b; or al, 0; add ecx, 0x10c83b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x001714a5: sal byte ptr [ebp + 0x10], 0x31; rol byte ptr [ebx - 0x2f76f73c], cl; pop ebx; ret; 
0x0009805d: sal byte ptr [ebp + 0x10], cl; and dword ptr [eax], 0x7fffffff; xor eax, eax; ret; 
0x00043219: sal byte ptr [ebp + 0x14], cl; bsr ebx, ebx; xor ebx, 0x1f; lea eax, [ebx + 0x20]; pop ebx; ret; 
0x00178998: sal byte ptr [ebp + 0x15], cl; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x1789b7; add esp, 0x1c; ret; 
0x0017504c: sal byte ptr [ebp + 0x19], 0x83; in al, dx; or byte ptr [eax], ch; adc byte ptr [eax], al; add byte ptr [edi - 0x18], dl; ret; 
0x000906c2: sal byte ptr [ebp + 0x1b], cl; and dword ptr [eax + 8], 0xfffffffe; xor eax, eax; ret; 
0x0016f608: sal byte ptr [ebp + 0x1d], 0x83; in al, dx; or al, 0x8b; inc ebx; add al, 0x53; call dword ptr [eax + 0x10]; 
0x00124d9b: sal byte ptr [ebp + 0x22], 0x8b; pop esp; and al, 0x20; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x0012484b: sal byte ptr [ebp + 0x22], 0x8b; pop esp; and al, 0x20; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x0003c9eb: sal byte ptr [ebp + 0x22], 0x8b; pop esp; and al, 0x20; mov eax, 0xb3; mov ecx, 8; call dword ptr gs:[0x10]; 
0x0011473b: sal byte ptr [ebp + 0x22], 0x8b; pop esp; and al, 0x20; mov eax, 6; call dword ptr gs:[0x10]; 
0x001149bb: sal byte ptr [ebp + 0x22], 0x8b; pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 8; call dword ptr gs:[0x10]; 
0x001898f1: sal byte ptr [ebp + 0x22], 0xb8; add al, 0; add byte ptr [eax], al; add esp, 0xc; ret; 
0x00114171: sal byte ptr [ebp + 0x27], 0x5b; mov eax, ecx; pop esi; pop edi; ret; 
0x000361b1: sal byte ptr [ebp + 0x2a], 0x83; ret; 
0x0012b719: sal byte ptr [ebp + 0x2c], 0x8b; pop esp; and al, 0x30; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x0012b679: sal byte ptr [ebp + 0x2c], 0x8b; pop esp; and al, 0x30; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x0010c299: sal byte ptr [ebp + 0x2c], 0x8b; pop esp; and al, 0x30; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x0004a840: sal byte ptr [ebp + 0x2d], 0xd9; test dword ptr [eax], eax; ret 0xfff9; 
0x0010c43e: sal byte ptr [ebp + 0x2f], 0x8b; pop esp; and al, 0x30; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x0010c38e: sal byte ptr [ebp + 0x2f], 0x8b; pop esp; and al, 0x30; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x0010c506: sal byte ptr [ebp + 0x2f], 0x8b; pop esp; and al, 0x30; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x0010c1f6: sal byte ptr [ebp + 0x2f], 0x8b; pop esp; and al, 0x30; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x0016f7db: sal byte ptr [ebp + 0x32], 0x83; in al, dx; or al, 0x8b; inc ebx; add al, 0x53; call dword ptr [eax + 0x10]; 
0x0015d36b: sal byte ptr [ebp + 0x32], 0x83; in al, dx; or byte ptr [ebp - 0x6bec979], cl; call dword ptr [eax + 0x53]; 
0x000b3ac1: sal byte ptr [ebp + 0x38], 0x83; ret; 
0x0012b4c3: sal byte ptr [ebp + 0x3a], 0xb8; rol byte ptr [eax], 1; add byte ptr [eax], al; mov ebx, 0xffffffff; mov edx, 0xffffffff; call dword ptr gs:[0x10]; 
0x0012b3e3: sal byte ptr [ebp + 0x3a], 0xb8; rol byte ptr [eax], cl; add byte ptr [eax], al; mov ebx, 0xffffffff; mov edx, 0xffffffff; call dword ptr gs:[0x10]; 
0x000c1cb0: sal byte ptr [ebp + 0x3d], 0x66; pmovmskb eax, mm1; bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x000a698d: sal byte ptr [ebp + 0x40], 0x80; mov esi, 0x3c24; add byte ptr [edi - 0x7d], dh; in al, dx; or byte ptr [ebp - 0x6bb997a], cl; call dword ptr [ebx + 0x50]; 
0x0012d6a9: sal byte ptr [ebp + 0x44], 0x8b; dec esp; and al, 0x10; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x001205a7: sal byte ptr [ebp + 0x48], 0x8b; dec esp; and al, 0x54; mov eax, 0x135; mov edi, 8; call dword ptr gs:[0x10]; 
0x0012c533: sal byte ptr [ebp + 0x4a], 0x83; in al, dx; add al, 0x57; push 2; push ebx; call esi; 
0x000c62a6: sal byte ptr [ebp + 0x4c], cl; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0017617c: sal byte ptr [ebp + 0x61], 0x83; in al, dx; or byte ptr [ebp - 0x8b63], cl; call dword ptr [esi + 0x53]; 
0x00102fb1: sal byte ptr [ebp + 0x7c], 0x89; clc; pop ebx; pop esi; pop edi; ret; 
0x001887ab: sal byte ptr [ebp + 0xa], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0017a412: sal byte ptr [ebp + 0xb], 0xc7; add eax, dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00188aba: sal byte ptr [ebp + 0xb], cl; add esp, 8; pop ebx; ret; 
0x0003c679: sal byte ptr [ebp + 0xc], 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0003c351: sal byte ptr [ebp + 0xc], 0x89; inc ebx; sbb byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x0017d021: sal byte ptr [ebp + 0xc], cl; add esp, 0xc; ret; 
0x0016ec68: sal byte ptr [ebp + 0xd], 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0014bff0: sal byte ptr [ebp + 0xd], 0x5b; pop esi; pop edi; ret; 
0x00172d88: sal byte ptr [ebp + 0xd], 0x5b; xor eax, eax; pop esi; pop edi; ret; 
0x00061f58: sal byte ptr [ebp + 0xd], 0x83; les ecx, ptr [eax]; mov eax, ebx; pop ebx; ret; 
0x0011483f: sal byte ptr [ebp + 0xe], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x001ab99f: sal byte ptr [ebp + 0xe], cl; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x0008ecbe: sal byte ptr [ebp + 0xf], cl; xend; xor eax, eax; add esp, 0xc; ret; 
0x0003d38b: sal byte ptr [ebp + 2], cl; mov edx, dword ptr [eax]; xor eax, eax; test edx, edx; sete al; ret; 
0x0012d011: sal byte ptr [ebp + 4], cl; ret; 
0x0003c928: sal byte ptr [ebp + 5], 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0012d035: sal byte ptr [ebp + 8], cl; ret; 
0x001704cc: sal byte ptr [ebp + 9], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000df71c: sal byte ptr [ebp + 9], cl; add esp, 4; pop ebx; pop esi; ret; 
0x00152b24: sal byte ptr [ebp + eax + 0x39], 0x50; or byte ptr [ebp - 0xc], dh; ret; 
0x00034e0e: sal byte ptr [ebp + eax - 0x80], 0x38; add byte ptr [ebp + 0xa], dh; mov eax, edx; add esp, 0xc; ret; 
0x0017a29c: sal byte ptr [ebp + ebp*2 - 0x7d], 0xec; or bh, al; add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebp - 0xc49e37d], cl; call dword ptr [eax - 0x73]; 
0x001748dc: sal byte ptr [ebp + ebp*2 - 0x7d], 0xec; or bh, al; add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebp - 0xca3737d], cl; call dword ptr [eax - 0x73]; 
0x000fadfc: sal byte ptr [ebp + ebx - 0x75], 0x85; pushfd; ljmp 0x8d08:0xec83ffff; add byte ptr [edx], 0x48; stc; call dword ptr [eax + 0x53]; 
0x0017163c: sal byte ptr [ebp + ebx*8 - 0x75], 0x43; adc byte ptr [ebp + 0x53890450], cl; adc bl, ch; ret; 
0x0009e2c9: sal byte ptr [ebp + ebx*8 - 0x7d], 0xf8; add al, 0x74; fmul dword ptr [ebp - 0x676ab79]; call dword ptr [eax - 0x73]; 
0x0009a9d0: sal byte ptr [ebp + ecx + 0x31], 0xc0; add esp, 8; pop ebx; ret; 
0x0018b370: sal byte ptr [ebp + ecx - 0x39], 0x43; push 0xffffffff; add esp, 4; pop ebx; pop esi; ret; 
0x00186920: sal byte ptr [ebp + ecx - 0x77], 0x54; and al, 4; jmp dword ptr [eax + 0x30]; 
0x0016f376: sal byte ptr [ebp + ecx - 0x7d], 0xec; or al, 0x8b; push eax; add al, 0x50; call dword ptr [edx + 0x10]; 
0x0002fd78: sal byte ptr [ebp + ecx - 0x7d], 0xf8; add esi, dword ptr [eax + ecx - 0x7d]; les ecx, ptr [eax]; pop ebx; ret; 
0x000f0bc4: sal byte ptr [ebp + ecx*8 + 0x5b], cl; ret; 
0x0009b038: sal byte ptr [ebp + edi - 0x73], 0x45; inc dword ptr [ebx - 0x69f00208]; ret; 
0x00060aa7: sal byte ptr [ebp + edi - 0x7d], 0xec; add al, 0x6a; add eax, 0x4c838d50; je 0x60aae; call dword ptr [eax - 0x18]; 
0x00175b18: sal byte ptr [ebp + edi - 0x7d], 0xec; or al, 0x56; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x0009cf4e: sal byte ptr [ebp - 0x11], 0x89; inc ecx; adc byte ptr [ecx + 0x5e5b104e], cl; ret; 
0x000d982e: sal byte ptr [ebp - 0x11], cl; mov eax, ecx; pop ebx; pop esi; ret; 
0x0013a7d5: sal byte ptr [ebp - 0x14], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0013e3b2: sal byte ptr [ebp - 0x15], cl; call 0x13c7f0; lea esi, [esi]; add esp, 8; pop ebx; ret; 
0x00162ce5: sal byte ptr [ebp - 0x18], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0014c036: sal byte ptr [ebp - 0x19], 0x5b; pop esi; pop edi; ret; 
0x0017a188: sal byte ptr [ebp - 0x1b], 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x00039d60: sal byte ptr [ebp - 0x23], cl; ret; 
0x0012c9c1: sal byte ptr [ebp - 0x24], 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x00034969: sal byte ptr [ebp - 0x24], 0x89; ret; 
0x00124c96: sal byte ptr [ebp - 0x29], 0x5b; xor eax, eax; pop esi; pop edi; ret; 
0x00124cf7: sal byte ptr [ebp - 0x2a], 0x5b; xor eax, eax; pop esi; pop edi; ret; 
0x001832a6: sal byte ptr [ebp - 0x39], 0x89; ret 0x838b; 
0x00124aec: sal byte ptr [ebp - 0x41], 0x83; in al, dx; or byte ptr [ebp - 0x6b5706a], cl; call dword ptr [edx - 0x77]; 
0x000d31dc: sal byte ptr [ebp - 0x42], 0x83; ret; 
0x00028065: sal byte ptr [ebp - 0x48], 0x83; in al, dx; or al, 0x8d; test dword ptr [eax + 0x29], edi; stc; call dword ptr [edi - 1]; 
0x001628ad: sal byte ptr [ebp - 0x50], 0x83; in al, dx; or byte ptr [ebx - 0x72e3dbbc], cl; adc byte ptr [ebx + 0x60], 0xf9; call dword ptr [eax + 0x55]; 
0x0012c564: sal byte ptr [ebp - 0x58], 0x83; in al, dx; add al, 0x51; push 3; push ebx; call edx; 
0x0009aca2: sal byte ptr [ebp - 0x5d], 0xe9; ret; 
0x00124b0b: sal byte ptr [ebp - 0x60], 0x83; in al, dx; or byte ptr [ebp - 0x6b56d6a], cl; call dword ptr [edx - 0x77]; 
0x000fae19: sal byte ptr [ebp - 0x6c], 0x83; in al, dx; or byte ptr [ebp - 0x14c77b], cl; call dword ptr [eax - 1]; 
0x001b3635: sal byte ptr [ebp - 0x70], 0x89; ret 0xc589; 
0x000c6a78: sal byte ptr [ebp - 0x77], 0xd8; add esp, 4; pop ebx; pop esi; ret; 
0x000c5c18: sal byte ptr [ebp - 0x77], 0xd8; pop ebx; pop esi; pop edi; ret; 
0x00124b2a: sal byte ptr [ebp - 0x7f], 0x8d; xchg esi, eax; xchg ebp, eax; dec edx; stc; call dword ptr [eax + 0x50]; 
0x0008c949: sal byte ptr [ebp - 0xc], 1; mov eax, dword ptr [eax]; mov dword ptr [ecx], eax; ret; 
0x0009d69b: sal byte ptr [ebp - 0xe], 0x5b; ret; 
0x000d9b8b: sal byte ptr [ebp - 0xe], cl; mov eax, ecx; pop ebx; ret; 
0x00080a4b: sal byte ptr [ebp - 0xe], cl; ret; 
0x00138b26: sal byte ptr [ebp - 9], 0x83; ret 0x8b18; 
0x00141c44: sal byte ptr [ebx + 0x39], cl; ret 0x4572; 
0x0013be14: sal byte ptr [ebx + 9], 1; cmp dword ptr [eax + 4], ecx; jne 0x13be10; mov eax, dword ptr [eax + 0x18]; ret; 
0x001283ae: sal byte ptr [ebx + eax - 0x77], cl; inc edx; add al, 0x85; sal byte ptr [edx + eax - 0x77], 0x10; ret; 
0x001925e2: sal byte ptr [ebx + ebp*4 - 0x7d], 0xec; or byte ptr [ebx - 0x72e7dbbc], cl; xor byte ptr [esi], 0x4a; stc; call dword ptr [eax + 0x53]; 
0x00103622: sal byte ptr [ebx + ebx - 0x7d], 1; ret; 
0x001720fb: sal byte ptr [ebx + ebx*8 - 0x7d], 0xec; add al, 0x83; ret; 
0x0010a894: sal byte ptr [ebx + ecx - 0x77], 1; ret 0xf189; 
0x0005aaaa: sal byte ptr [ebx + edx - 0x39], 0; das; jbe 0x5aa3d; ret 0x40c7; 
0x0008d842: sal byte ptr [ebx + edx - 0x77], 0x4c; and al, 0x10; mov eax, dword ptr [eax + 4]; add esp, 0xc; jmp eax; 
0x0016f1cd: sal byte ptr [ebx + edx - 0x7d], 0xec; or al, 0x8b; dec eax; add al, 0x50; call dword ptr [ecx + 0x10]; 
0x0002718f: sal byte ptr [ebx + edx - 0x7d], 0xec; or byte ptr [ebp - 0x218ef36d], cl; call dword ptr [edx + 0x50]; 
0x0012f1da: sal byte ptr [ebx + esi - 0x75], cl; pop esp; and al, 0xc; mov eax, 0x178; call dword ptr gs:[0x10]; 
0x000a0472: sal byte ptr [ebx + esi*2 - 0x75], 0x4c; and al, 0x64; lea esi, [esp + 0x2c]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x0008425a: sal byte ptr [ebx + esi*2 - 0x7d], 0xec; or al, 0x8d; or dword ptr [eax - 4], 0xffffffff; call dword ptr [eax - 0x73]; 
0x00125769: sal byte ptr [ecx + eax - 0x3d], 0x83; in al, dx; or al, 0x8d; xor byte ptr [esp], 0xf9; call dword ptr [eax - 0x73]; 
0x00172e64: sal byte ptr [ecx + ebp - 0x7d], 0xec; add al, 0x83; ret; 
0x00042d54: sal byte ptr [ecx + ebx + 0xf], cl; mov ebp, 0x1ff083c2; add eax, 1; pop ebx; ret; 
0x0012e411: sal byte ptr [ecx + ecx + 0x5e], 0x5b; jl 0x24f50; ret; 
0x00152832: sal byte ptr [ecx + ecx + 0xf], 0x9f; ret; 
0x000430d4: sal byte ptr [ecx + ecx + 0xf], 0xbd; rol byte ptr [ebx + 0x508d1ff0], 0xe8; mov eax, edx; ret; 
0x00043184: sal byte ptr [ecx + ecx + 0xf], 0xbd; rol byte ptr [ebx + 0x508d1ff0], 0xf0; mov eax, edx; ret; 
0x00042d09: sal byte ptr [ecx + ecx + 0xf], 0xbd; rol byte ptr [ebx - 0x3f7ce010], 1; ret; 
0x00189ec4: sal byte ptr [ecx + ecx - 0x77], 0xf8; pop ebx; pop esi; pop edi; ret; 
0x0017709c: sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x55; call eax; 
0x00162974: sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x56; call eax; 
0x0016ffb8: sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x57; call eax; 
0x0008fcbc: sal byte ptr [ecx + edi + 0x31], cl; idiv byte ptr [eax + 0xf0]; call dword ptr gs:[0x10]; 
0x000fac84: sal byte ptr [ecx + edi - 0x7d], 0xec; or byte ptr [ebp - 0x15336b], cl; call dword ptr [edx + 0x50]; 
0x0009025c: sal byte ptr [ecx + edx + 0x31], 0xc0; add esp, 4; pop ebx; pop esi; ret; 
0x000abbfc: sal byte ptr [ecx + edx + 0x39], 0xc8; jne 0xabbf0; mov eax, edx; pop ebx; ret; 
0x0008e89c: sal byte ptr [ecx + edx - 0x75], cl; push eax; add al, 0x89; push esp; and al, 4; jmp dword ptr [eax]; 
0x0016322a: sal byte ptr [ecx + edx - 0x7d], 0xec; or al, 0x50; call 0x186f70; mov dword ptr [esp], ebp; call edi; 
0x00163411: sal byte ptr [ecx + edx - 0x7d], 0xec; or al, 0x50; call 0x186f70; mov dword ptr [esp], ebp; call esi; 
0x001635c0: sal byte ptr [ecx + edx - 0x7d], 0xec; or al, 0x53; call 0x186f70; mov dword ptr [esp], ebp; call ebx; 
0x0009121d: sal byte ptr [ecx], 1; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc11f; 
0x0013d07d: sal byte ptr [ecx], 1; sal bh, cl; pop ebx; pop esi; pop edi; ret; 
0x0008e5f1: sal byte ptr [ecx], 1; sar byte ptr [ebx], 0x54; and al, 4; setae al; ret; 
0x0003ddc9: sal byte ptr [ecx], cl; div byte ptr [ecx]; jmp dword ptr [ebp - 1]; 
0x000428f3: sal byte ptr [ecx], cl; fld xword ptr [ecx]; sar dword ptr [eax + 2], 0xf; movsd dword ptr es:[edi], dword ptr [esi]; ret 0xe0d3; 
0x00088c46: sal byte ptr [edi + eax + 0x5b], 0x5e; pop edi; ret; 
0x000e8209: sal byte ptr [edi + eax - 0x75], cl; dec edx; or byte ptr [ebp - 0x17f48a37], al; push 0x89fffffc; ret 0xc085; 
0x00033526: sal byte ptr [edi + ebx - 0x7d], 0xec; or byte ptr [ebp - 0x68bbb7b], cl; call dword ptr [eax + 0x56]; 
0x00172da9: sal byte ptr [edi + ebx*8 - 0x7d], 0xec; or byte ptr [ebp - 0xc34f379], cl; call dword ptr [eax - 0x73]; 
0x0014e221: sal byte ptr [edi + edi - 0x7d], 0xec; add al, 0x89; ret; 
0x0018b3f6: sal byte ptr [edi + edx - 0x39], 0x43; push 0xffffffff; add esp, 4; pop ebx; pop esi; ret; 
0x0008d756: sal byte ptr [edi + edx - 0x77], 0x4c; and al, 0x14; mov dword ptr [esp + 0x10], edx; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x000d9996: sal byte ptr [edi + edx - 0x78], cl; rol dword ptr [eax + 0x20740fe1], 1; ret; 
0x0007c0e2: sal byte ptr [edi + edx - 0x7d], 0xec; add al, 0x53; push dword ptr [esp + 0x1c]; push dword ptr [esi + 0x98]; call eax; 
0x000a0f06: sal byte ptr [edi + esi*4 + 0x39], cl; ret 0xb374; 
0x00186797: sal byte ptr [edx + eax - 0x75], cl; add al, byte ptr [ebx]; inc ebx; add al, 0x89; ret; 
0x001283b5: sal byte ptr [edx + eax - 0x77], 0x10; ret; 
0x0014ee11: sal byte ptr [edx + eax*2 - 0x7d], 0xec; or al, 0x89; ret; 
0x0005baf3: sal byte ptr [edx + ebp - 0x75], 0x5d; add al, 0x8b; inc ebp; or byte ptr [ecx], bh; ret; 
0x0012fb0b: sal byte ptr [edx + ebx - 0x75], 0x74; and al, 0x44; mov eax, 0xac; mov ebx, 0x53564d41; call dword ptr gs:[0x10]; 
0x0017212e: sal byte ptr [edx + ebx - 0x7d], 0xec; add al, 0x83; ret; 
0x001749f1: sal byte ptr [edx + ebx - 0x7d], 0xec; or al, 0x83; ret 0x5208; 
0x000e784f: sal byte ptr [edx + ebx - 0x7d], 0xec; or byte ptr [ebp + 0x520c2454], cl; push ebx; call eax; 
0x0014a65b: sal byte ptr [edx + ebx*2 + 0x38], cl; ret 0x5675; 
0x00153559: sal byte ptr [edx + ebx*8 - 0x7d], 0xf8; add al, 0x74; xchg byte ptr [ebx - 0x7d7253ab], cl; pop esp; mov cl, 0xf9; call dword ptr [eax - 0x73]; 
0x00179263: sal byte ptr [edx + ecx + 0x5b], 0x5e; pop edi; ret; 
0x00042e8b: sal byte ptr [edx + ecx + 0xf], 0xb6; sal bl, 0xf; mov esp, 0x1508dc0; mov eax, edx; ret; 
0x00042f2c: sal byte ptr [edx + ecx + 0xf], 0xb7; sal bl, 0xf; mov esp, 0x1508dc0; mov eax, edx; ret; 
0x00033d68: sal byte ptr [edx + ecx - 0x77], cl; inc esp; and al, 0x14; call edx; 
0x0012937b: sal byte ptr [edx + edx + 0x5b], 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x00098120: sal byte ptr [edx + edx - 0x7d], 0xec; or al, 0xff; jae 0x9812d; call dword ptr [ebx]; 
0x00090963: sal byte ptr [edx + esi - 0x75], cl; dec ebx; or al, 0x89; clc; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0016ecb6: sal byte ptr [edx + esi*4 - 0x7d], 0xec; or byte ptr [ebp - 0xc34f379], cl; call dword ptr [eax - 0x73]; 
0x00026144: sal byte ptr [edx + esi*8 - 0x73], cl; nop; in al, dx; outsd dx, dword ptr [esi]; stc; call dword ptr [edx - 0x73]; 
0x000431ce: sal byte ptr [esi + eax + 0xf], cl; mov ebp, 0x1ff083c2; ret; 
0x0007daf7: sal byte ptr [esi + eax - 0x77], 0xf8; pop ebx; pop esi; pop edi; ret; 
0x00172d37: sal byte ptr [esi + eax - 0x7d], cl; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00130f04: sal byte ptr [esi + ebx - 0x7d], cl; in al, dx; or byte ptr [ebp - 0x659d779], cl; call dword ptr [eax + 0x55]; 
0x001251f7: sal byte ptr [esi + ecx + 0x39], cl; sal dword ptr [ebp - 0xe], 1; mov eax, dword ptr [eax + 4]; pop ebx; ret; 
0x0008e797: sal byte ptr [esi + ecx - 0x75], cl; push eax; add al, 0x89; push esp; and al, 4; jmp dword ptr [eax]; 
0x0010a87f: sal byte ptr [esi + ecx - 0x77], 1; ret 0xf189; 
0x0014b417: sal byte ptr [esi + ecx - 0x7d], cl; les ecx, ptr [eax]; mov eax, edx; pop ebx; ret; 
0x00171467: sal byte ptr [esi + edi - 0x7d], 0xec; or byte ptr [ebx + 0x74ff0443], cl; and al, 0x1c; push ebx; call dword ptr [eax + 4]; 
0x000c1b67: sal byte ptr [esi + edx + 0xf], 0xbc; rol byte ptr [ecx], 0xd0; add eax, ecx; ret; 
0x00141ce9: sal byte ptr [esi + esi + 0x39], cl; ret 0x1f72; 
0x0017a9da: sal byte ptr [esi + esi - 0x7d], 0xec; or al, 0x8b; inc ebx; or al, 0x57; call dword ptr [eax + 0x10]; 
0x0015167b: sal byte ptr [esi + esi*2 - 0x7d], cl; ret 0x8901; 
0x000fdbda: sal byte ptr [esi - 0x7d], 0xec; or byte ptr [ebp - 0x6c0bf7d], cl; call dword ptr [eax + 0x55]; 
0x000aba58: sal byte ptr [esp + eax + 0x39], 0xd8; jne 0xaba50; mov eax, edx; pop ebx; ret; 
0x000c27ad: sal byte ptr [esp + eax - 0x78], 0x64; adc dword ptr [ebx], eax; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0012d00d: sal byte ptr [esp + eax - 0x7b], 0xd2; jne 0x12d018; ret; 
0x0012d031: sal byte ptr [esp + eax - 0x7b], 0xd2; jne 0x12d040; ret; 
0x00060639: sal byte ptr [esp + eax*2 - 0x7d], 0xec; add al, 0x6a; add eax, 0x4c838d50; je 0x60640; call dword ptr [eax - 0x18]; 
0x001475aa: sal byte ptr [esp + eax*2 - 0x7d], 0xec; add al, 0x89; ret; 
0x000e787b: sal byte ptr [esp + ebp*4 - 0x7d], 0xf8; fidiv dword ptr [ebp + 0x3d]; lea ecx, [esp + 4]; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x0013aca9: sal byte ptr [esp + ebx + 0x50], 0x8d; adc byte ptr [ecx + ebx*2], 0xf9; call dword ptr [eax + 0x6a]; 
0x0012e379: sal byte ptr [esp + ecx + 0x5b], cl; setg al; pop esi; pop edi; ret; 
0x00145639: sal byte ptr [esp + ecx - 0x17], 0x4f; idiv bh; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; ret; 
0x001ac461: sal byte ptr [esp + ecx - 0x58], 1; jne 0x1ac480; lea eax, [ecx + 4]; ret; 
0x0016faed: sal byte ptr [esp + ecx*4 - 0x75], 0x43; add al, 0x83; in al, dx; or al, 0x53; call dword ptr [eax + 0x10]; 
0x0004a989: sal byte ptr [esp + edi - 0x27], cl; test dword ptr [eax], edx; ret 0xfff9; 
0x00130ee6: sal byte ptr [esp + edi - 0x7d], cl; in al, dx; or byte ptr [ebp - 0x659bf79], cl; call dword ptr [eax + 0x55]; 
0x0008ba4b: sal byte ptr [esp + edx - 0x39], 0; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; ret; 
0x000907e9: sal byte ptr [esp + edx - 0x7d], 0xf8; add dword ptr [edx + 0x16], edi; mov eax, 0x5f; cmovne eax, edx; ret; 
0x00183f31: sal byte ptr [esp + esi - 0x7d], 0xec; or byte ptr [ebp - 0x699754a], cl; call dword ptr [esi + 0x53]; 
0x0016ff95: sal byte ptr [esp - 0x7d], 0xec; or al, 0x57; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x0013ac79: sal byte ptr [esp - 0x7d], 0xec; or byte ptr [ebx - 1], dl; jae 0x13acb3; call eax; 
0x000a8b8f: sal ch, 0xff; cmovne eax, edx; pop ebx; ret; 
0x000a940f: sal ch, 1; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x0015d4a8: sal cl, 1; call dword ptr [eax + 0x6a]; 
0x000baa5d: sal cl, 1; or al, 0; add ecx, 0x11243f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b80ec: sal dh, 0xff; jmp dword ptr [esi + 0xf]; 
0x000c6d75: sal dh, cl; dec dword ptr [ebx - 0x72e3db84]; xchg dword ptr [eax], ebp; popfd; stc; call dword ptr [eax - 0x73]; 
0x000c6dd8: sal dh, cl; jmp dword ptr [esi - 0x70]; 
0x001b438c: sal dh, cl; ret 0x7406; 
0x0009f6d2: sal dh, cl; rol dword ptr [eax + 0x75], 0x28; add ebx, 1; mov eax, 0x115; call dword ptr gs:[0x10]; 
0x000c09c5: sal dword ptr [eax + 0x30010c6], 0xc; cdq; jmp ecx; 
0x000c4d6f: sal dword ptr [ebp + 0x18], 1; ret; 
0x000ba86d: sal dword ptr [ebp + 0xc030011], 0x91; jmp ecx; 
0x000475b3: sal dword ptr [ebp - 0x16], 0x83; ret 0x8b01; 
0x00055b5a: sal dword ptr [ebp - 0xd], 0x8b; push ebp; or al, 0xf7; ret 0; 
0x001251fb: sal dword ptr [ebp - 0xe], 1; mov eax, dword ptr [eax + 4]; pop ebx; ret; 
0x00141d0c: sal dword ptr [ebx + 0x13], 0x5b; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x000bb57e: sal dword ptr [ebx + 0x3001119], 0xc; cdq; jmp ecx; 
0x00150da7: sal dword ptr [ebx + 0x3f], 0x39; ret; 
0x0009d694: sal dword ptr [ebx + ebp*8 - 0x75], cl; inc eax; or al, 0x85; sal byte ptr [ebp - 0xe], 0x5b; ret; 
0x000c0a02: sal dword ptr [ebx - 0x3a], 0x10; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000aa2c9: sal dword ptr [ecx + eax + 0x40], 1; pop edi; ret; 
0x000c0944: sal dword ptr [ecx], 0xc7; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0003bd4a: sal dword ptr [ecx], 0xc8; shr eax, 0x1f; ret; 
0x00134e2f: sal dword ptr [ecx], cl; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret; 
0x00155862: sal dword ptr [edi + 0x5fb6db6d], 0x5d; ret; 
0x000b9e9a: sal dword ptr [edi], 0x2f; adc dword ptr [eax], eax; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009283b: sal dword ptr [edx + ecx + 0xff39000], 0x1e; sti; xor eax, eax; ret; 
0x000815f9: sal dword ptr [edx - 0xc], 1; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001b403a: sal dword ptr [edx - 0xf], 0xe9; ret 0x11; 
0x001413a9: sal dword ptr [esi + edi*2 - 0x7d], 1; rol byte ptr [ecx], 0x83; ret; 
0x000c087f: sal dword ptr [esi - 0x39], 0x10; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0012ffff: sal dword ptr [esi - 0x75], 0x5c; and al, 0x60; mov ecx, dword ptr [esp + 0x64]; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x00092d20: sal dword ptr [esp + eax], 0; call dword ptr gs:[0x10]; 
0x001312e5: sal ebp, cl; dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x000c24d9: sal ebx, 0xa4; pop eax; mov edi, eax; mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x0016f5ef: sal ebx, 1; call dword ptr [edx - 0x73]; 
0x000c25fa: sal ebx, 1; stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0015e465: sal ecx, 1; call dword ptr [edx + 0x6a]; 
0x000a6ec7: sal edi, 0xff; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x001630e8: sal edx, 0xff; add esp, 0x10; mov eax, dword ptr [esp + 0xc]; add esp, 0x18; pop ebx; ret; 
0x000bd57f: sal esi, 0xf9; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c0981: sal esp, 0xc6; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000f8f3a: salc; adc eax, dword ptr [eax]; add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x001ac356: salc; add byte ptr [eax], al; add byte ptr [eax - 0x417af0f1], ch; add byte ptr [eax], al; add dh, dh; ret 0xf0f; 
0x0014dd60: salc; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; add dword ptr [ebp + 0x5c], 0xe850fff9; jmp dword ptr [edx - 0x12]; 
0x00196a3e: salc; add cl, byte ptr [ebx + 0x5b082444]; ret; 
0x000297b8: salc; add eax, dword ptr [eax]; add byte ptr [ebx - 0x74f3db94], cl; inc ebp; add dh, dh; ret; 
0x0012c53e: salc; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00046e97: salc; and esi, eax; mov eax, esi; pop esi; pop edi; ret; 
0x00046ea4: salc; and esi, ecx; mov eax, esi; pop esi; pop edi; ret; 
0x00026bf4: salc; cmp al, 0x89; ret; 
0x00112e1a: salc; dec ecx; stc; call dword ptr [eax - 0x18]; 
0x000c6aad: salc; idiv bh; test byte ptr [ecx + 0x7b], 4; cmove eax, edx; ret; 
0x001936c5: salc; inc edx; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019839f: salc; inc edx; clc; mov eax, edx; pop ebx; ret; 
0x00193735: salc; inc edx; mul byte ptr [esi - 0x77]; inc edx; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0019644f: salc; inc edx; test dword ptr [edi], 0x88ff48b6; dec edx; dec dword ptr [ebx + 0x5b082444]; ret; 
0x00090ed9: salc; jae 0x90f18; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x00146126: salc; jnp 0x146128; jmp dword ptr [esi - 0x70]; 
0x00175ab1: salc; ljmp 0x5e5b:0x10c483ff; pop edi; ret; 
0x00095d34: salc; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x000c24e0: salc; mov eax, dword ptr [esp + 4]; ret; 
0x000c2560: salc; mov eax, dword ptr [esp + 8]; cld; pop edi; ret; 
0x000c2536: salc; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x00124cf9: salc; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x00166ed4: salc; popal; stc; call dword ptr [eax - 0x18]; 
0x000c25a0: salc; ret; 
0x000a6e29: salc; sub esp, 0xc; push eax; call edx; 
0x001340d8: sar ah, 0xff; inc edi; test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x0006511e: sar al, 0xff; jmp eax; 
0x000650ba: sar al, 0xff; mov edx, edi; mov edi, ecx; jmp edx; 
0x0014f0c4: sar bh, 0xb4; and al, 0xec; add al, byte ptr [eax]; add byte ptr [esi - 0x18], dl; push cs; ret; 
0x001a6ebb: sar bh, 0xff; jmp dword ptr [esi + 0xf]; 
0x0012a73a: sar bh, 1; je 0x12a762; sbb byte ptr [edi], cl; dec edi; ret 0x8d50; 
0x00180a6b: sar bl, cl; jmp dword ptr [esi - 0x70]; 
0x0018b8a7: sar byte ptr [0x593], 1; ja 0x18b8c0; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x0007b420: sar byte ptr [0x593], 1; ja 0x7b690; sub esp, 8; push 0; push esi; call dword ptr [ebx + 8]; 
0x0007b9ad: sar byte ptr [0x593], 1; ja 0x7bab0; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x0007e831: sar byte ptr [0x593], 1; ja 0x7e8d1; sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x00080d6b: sar byte ptr [0x593], 1; ja 0x80da8; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x0008150d: sar byte ptr [0x593], 1; ja 0x81540; sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x000849c6: sar byte ptr [0x593], 1; ja 0x84bf0; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x0008628a: sar byte ptr [0x593], 1; ja 0x86480; mov eax, dword ptr [ebp - 0x3c]; sub esp, 0xc; push esi; call dword ptr [eax + 0x30]; 
0x000876ef: sar byte ptr [0x593], 1; ja 0x87720; sub esp, 0xc; push ebx; call dword ptr [esi + 0x30]; 
0x000883f8: sar byte ptr [0x593], 1; ja 0x88440; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x0008b421: sar byte ptr [0x593], 1; ja 0x8b480; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x0008b4cb: sar byte ptr [0x593], 1; ja 0x8b4f8; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x0008bcb0: sar byte ptr [0x593], 1; ja 0x8bcf0; sub esp, 8; push esi; push ebx; call dword ptr [edi + 0x18]; 
0x000decdc: sar byte ptr [0xa3d70b], cl; setb dl; add edx, 0x16d; mov eax, edx; ret; 
0x00099497: sar byte ptr [eax + 0x10], cl; pop ebx; ret; 
0x0012c7b7: sar byte ptr [eax + 0x16], 0x8b; inc esi; add al, 0x89; ret 0xe083; 
0x0010d5a4: sar byte ptr [eax + 0x1b4], cl; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x001253f4: sar byte ptr [eax + 0x2c], 0x83; in al, dx; add al, 0x89; ret; 
0x00100860: sar byte ptr [eax + 0x2d], 0x8b; push esi; or byte ptr [ecx], bh; ret 0x267e; 
0x00089e2f: sar byte ptr [eax + 0x2e], 0x29; ret; 
0x00085862: sar byte ptr [eax + 0x33], 1; ret; 
0x00061cbb: sar byte ptr [eax + 0x3a], 0x83; in al, dx; or byte ptr [ebp - 0x6cd527a], cl; call dword ptr [eax + 0x53]; 
0x0014a23a: sar byte ptr [eax + 0x3b], 0x83; in al, dx; add al, 0x89; ret; 
0x00061dae: sar byte ptr [eax + 0x3f], 0x83; in al, dx; or byte ptr [ebp - 0x6cd527a], cl; call dword ptr [eax + 0x53]; 
0x0013fee0: sar byte ptr [eax + 0x70], 0x89; ret; 
0x00093f2c: sar byte ptr [eax + 0xaf], cl; mov esi, 8; call dword ptr gs:[0x10]; 
0x0007d175: sar byte ptr [eax + 0xb], 0x83; ret 0x8301; 
0x0007fb23: sar byte ptr [eax + 0xb], 0x83; ret 0x8304; 
0x000e8bf6: sar byte ptr [eax + 0xdc], 1; call dword ptr gs:[0x10]; 
0x00097784: sar byte ptr [eax + 0xf0], cl; mov ecx, 7; xor esi, esi; mov dword ptr [ebx + 4], edx; xor edx, edx; call dword ptr gs:[0x10]; 
0x0009f337: sar byte ptr [eax + 1], cl; call 0x9f2a0; mov dword ptr [esp], esi; call ebx; 
0x00156765: sar byte ptr [eax + 8], 0x83; les eax, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x001318c5: sar byte ptr [eax + 8], 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x00099fc4: sar byte ptr [eax + 9], 0x89; xor ah, 0x3a; add byte ptr [eax], al; xor eax, eax; ret; 
0x0018c484: sar byte ptr [eax + 9], 0x8b; push esp; and al, 4; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000c4007: sar byte ptr [eax + eax], 1; add byte ptr [edi], cl; inc esp; ret 0x4489; 
0x0017729b: sar byte ptr [eax], 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x00184285: sar byte ptr [eax], 0xf; inc esp; ret; 
0x000aeb0b: sar byte ptr [eax], cl; pop ecx; add eax, 0x4d8b1075; aam 0x83; ret 0xf01; 
0x000ee487: sar byte ptr [eax], cl; ret; 
0x00023270: sar byte ptr [ebx + 1], cl; mov esi, 8; mov dword ptr [ebp + 0x137c], 1; call dword ptr gs:[0x10]; 
0x00194c1a: sar byte ptr [ebx - 6], cl; jmp dword ptr [esi - 0x70]; 
0x0005f4eb: sar byte ptr [ebx - 7], 1; call dword ptr [eax - 0x73]; 
0x001ac2a4: sar byte ptr [ebx], 0x4a; cld; jne 0x1ac2b0; pop ebx; ret; 
0x0008e5f3: sar byte ptr [ebx], 0x54; and al, 4; setae al; ret; 
0x00083bf6: sar byte ptr [ebx], 0x9e; push 0xf000001; xchg esp, eax; ret 0x9e3b; 
0x0018b388: sar byte ptr [ebx], 0x9e; push 0xf000001; xchg esp, eax; ret 0xd008; 
0x00104e58: sar byte ptr [ebx], 0xb4; and al, 4; add al, byte ptr [eax]; add byte ptr [edi], cl; dec esi; ret 0x4489; 
0x0009f4b0: sar byte ptr [ebx], 1; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0007b477: sar byte ptr [ebx], 1; mov cl, 0x68; add dword ptr [eax], eax; add byte ptr [edi], cl; xchg esp, eax; ret 0xd009; 
0x0007b482: sar byte ptr [ebx], 1; mov cl, 0x98; add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0xd008; 
0x0007b46c: sar byte ptr [ebx], 1; mov cl, 0xe8; add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0xd009; 
0x001846d5: sar byte ptr [ecx + 0x28], 0xe8; ret; 
0x000e7869: sar byte ptr [ecx + 0x74], cl; mov eax, 0x193; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00128a9c: sar byte ptr [ecx + 3], 0xc6; add eax, dword ptr [eax]; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x0009553e: sar byte ptr [ecx + 7], cl; xor esi, esi; call dword ptr gs:[0x10]; 
0x0015bf0c: sar byte ptr [ecx], 0xd1; setne al; ret; 
0x0004303c: sar byte ptr [ecx], 1; ret 0x920f; 
0x0004301d: sar byte ptr [ecx], 1; ret 0x9e0f; 
0x000e31da: sar byte ptr [ecx], 1; ret; 
0x000c717b: sar byte ptr [ecx], 1; ror byte ptr [edi], 1; inc edx; ret 0xd9f7; 
0x000c0939: sar byte ptr [ecx], cl; fidiv dword ptr [edx - 0x1e]; call 0x189c31; add ecx, 0x10c731; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba999: sar byte ptr [ecx], cl; fidiv dword ptr [edx - 0x1e]; call 0x189c31; add ecx, 0x1124fd; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9359: sar byte ptr [ecx], cl; fidiv dword ptr [edx - 0x1e]; call 0x189c31; add ecx, 0x1139dd; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c0976: sar byte ptr [ecx], cl; fidiv dword ptr [edx - 0x5b]; call 0x189c31; add ecx, 0x10c6f4; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba9d6: sar byte ptr [ecx], cl; fidiv dword ptr [edx - 0x5b]; call 0x189c31; add ecx, 0x1124c0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9396: sar byte ptr [ecx], cl; fidiv dword ptr [edx - 0x5b]; call 0x189c31; add ecx, 0x1139a0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c098d: sar byte ptr [ecx], cl; fidiv dword ptr [edx - 0x72]; call 0x189c31; add ecx, 0x10c6dd; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba9ed: sar byte ptr [ecx], cl; fidiv dword ptr [edx - 0x72]; call 0x189c31; add ecx, 0x1124a9; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00078431: sar byte ptr [ecx], cl; ret 0xa75; 
0x00043314: sar byte ptr [edx + 0x10], cl; cmove eax, edx; ret; 
0x000980e7: sar byte ptr [edx + 0x200], 0xf; inc esp; ret 0x118b; 
0x00043291: sar byte ptr [edx + 0x20], cl; cmove eax, edx; ret; 
0x00163056: sar byte ptr [edx + 1], 0xe8; mov esp, 0x8100026b; ret; 
0x00061156: sar byte ptr [edx + 1], 0xe8; mov esp, 0x8100128a; ret; 
0x00043273: sar byte ptr [edx + 8], cl; cmove eax, edx; ret; 
0x000a8a2e: sar byte ptr [edx - 1], 0x5b; cmove eax, edx; add eax, 1; ret; 
0x0008ff20: sar byte ptr [edx], cl; cmove eax, edx; ret; 
0x00145de6: sar byte ptr [esi + 5], 0x80; cmp ebp, dword ptr [esi]; je 0x145df8; add esp, 8; pop ebx; ret; 
0x000938ac: sar byte ptr [esi + 8], cl; call dword ptr gs:[0x10]; 
0x0010d60c: sar byte ptr [esi + 8], cl; mov ecx, dword ptr [ebp - 0x144]; call dword ptr gs:[0x10]; 
0x00083d36: sar byte ptr [esi], cl; stc; call dword ptr [eax - 0x18]; 
0x000870e5: sar cl, 0xff; add esp, 0x14; xor eax, eax; pop ebx; pop esi; ret; 
0x0010d4bf: sar dh, 0xff; call dword ptr [ebx - 0x18]; 
0x000fab61: sar dh, 1; inc dword ptr [ebx - 0x3f7aef3c]; jne 0xfab70; add esp, 8; pop ebx; ret; 
0x000735c0: sar dl, 0xff; dec dword ptr [ecx - 0x4f74b]; call dword ptr [esi - 1]; 
0x0009fe09: sar dword ptr [0xfffff000], 0x77; pop es; mov eax, ecx; pop ebx; ret; 
0x0003c967: sar dword ptr [0xfffff001], cl; jae 0x24f50; ret; 
0x000c083d: sar dword ptr [eax + 0x30010c7], 0xc; xchg ecx, eax; jmp ecx; 
0x00091991: sar dword ptr [eax + 0xf0], 1; mov edx, 0x7fffffff; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000428f7: sar dword ptr [eax + 2], 0xf; movsd dword ptr es:[edi], dword ptr [esi]; ret 0xe0d3; 
0x0014740b: sar dword ptr [eax], 0xf; dec edi; ret; 
0x000bd53d: sar dword ptr [eax], 0xfa; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b9386: sar dword ptr [ebx + 0x3001139], 0xc; cdq; jmp ecx; 
0x000b9346: sar dword ptr [ebx + 0x39], 0x11; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000c07ba: sar dword ptr [ebx], 0xc8; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bd5b9: sar dword ptr [ecx + edi*8 + 0xc030010], 0x91; jmp ecx; 
0x00171534: sar dword ptr [ecx], 1; dec eax; adc al, 0x72; ret 0x4889; 
0x000c08b9: sar dword ptr [edi + eax*8], 0x10; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000baa62: sar dword ptr [edi], 0x24; adc dword ptr [eax], eax; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9402: sar dword ptr [edi], 0x39; adc dword ptr [eax], eax; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9282: sar dword ptr [edi], 0x3a; adc dword ptr [eax], eax; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c30e9: sar dword ptr [esi], 1; jmp ecx; 
0x000baa25: sar dword ptr [esp + 0x11], 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00097f0e: sar eax, 0x1c; and eax, 3; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00097f4e: sar eax, 0x1e; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0011f3f7: sar eax, 0x1f; mov dword ptr [esp + 0xc], eax; mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0003c11f: sar eax, 0x1f; not eax; and eax, edx; ret; 
0x0003be0a: sar eax, 0x1f; not eax; sar edx, 0x1e; and eax, edx; ret; 
0x00190645: sar eax, 0x1f; ret; 
0x0003ba7b: sar eax, 0x1f; sub ecx, edx; not eax; and eax, ecx; ret; 
0x00064895: sar eax, 0xff; jmp eax; 
0x00065949: sar eax, 0xff; mov edx, edi; mov edi, eax; jmp edx; 
0x0008e7e1: sar eax, 1; and eax, 1; mov dword ptr [edx + 0x24], eax; mov dword ptr gs:[0x7c], edx; pop ebx; ret; 
0x0008f159: sar eax, 1; and eax, 1; mov dword ptr [edx + 8], eax; mov dword ptr gs:[0x78], edx; pop ebx; ret; 
0x000903df: sar eax, 1; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000fbe0d: sar eax, 1; pop edi; pop ebp; ret; 
0x0009043f: sar eax, 2; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0007fb93: sar eax, 2; pop esi; pop edi; pop ebp; ret; 
0x00081cb9: sar eax, 2; ret; 
0x000c1a60: sar eax, 3; sub edx, eax; lea ecx, [edx + 3]; mov eax, ecx; ret; 
0x0013c8dd: sar eax, 5; add esp, 0xc; ret; 
0x00189cbd: sar eax, 5; and dword ptr [edx + eax*4], ebx; xor eax, eax; pop ebx; ret; 
0x00189c5e: sar eax, 5; and edx, dword ptr [ecx + eax*4]; setne al; movzx eax, al; ret; 
0x00189c8d: sar eax, 5; or dword ptr [edx + eax*4], ebx; xor eax, eax; pop ebx; ret; 
0x00135a6e: sar eax, cl; jmp dword ptr [ebp - 0x75]; 
0x000ba9a4: sar ebp, 0x24; adc dword ptr [eax], eax; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008160a: sar ebx, 2; lea eax, [ebx - 1]; pop ebx; ret; 
0x0003d1c3: sar ebx, 5; rol eax, cl; and dword ptr [edx + ebx*4], eax; xor eax, eax; pop ebx; ret; 
0x0003d163: sar ebx, 5; shl eax, cl; or dword ptr [edx + ebx*4], eax; xor eax, eax; pop ebx; ret; 
0x00096ecb: sar ecx, 1; jmp dword ptr [esi - 0x70]; 
0x0003d219: sar ecx, 5; and eax, dword ptr [edx + ecx*4]; setne al; movzx eax, al; ret; 
0x001a6dfb: sar edi, 0xff; jmp dword ptr [esi + 0xf]; 
0x0017d30d: sar edi, 0xff; mov dword ptr [eax], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x00025fcc: sar edi, 1; inc dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x000a360d: sar edi, cl; dec dword ptr [ebp - 0x666e77d]; call dword ptr [eax - 0x73]; 
0x001749fd: sar edi, cl; inc dword ptr [ebx - 0x77cef3c]; add dword ptr [eax + 1], edi; sbb eax, -1; add esp, 0xc; ret; 
0x0003be0f: sar edx, 0x1e; and eax, edx; ret; 
0x0011fe2e: sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x000b9447: sar edx, 0x38; adc dword ptr [eax], eax; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008169f: sar edx, 2; mov eax, dword ptr [ecx + 8]; pop ebx; sub eax, edx; ret; 
0x0014366a: sbb ah, 0x2c; stc; call dword ptr [eax + 0x55]; 
0x001441b4: sbb ah, 0x2c; stc; call dword ptr [eax + 0x56]; 
0x0013c490: sbb ah, 0x2c; stc; call dword ptr [eax - 0x73]; 
0x000ac2f7: sbb ah, 0x44; idiv bh; and ch, 2; lea edx, [edx - 0x17cfd4]; cmove eax, edx; ret; 
0x000a764d: sbb ah, 0x99; stc; call dword ptr [eax + 0x68]; 
0x000c3157: sbb ah, 1; add byte ptr [eax], al; ret; 
0x000baa88: sbb ah, byte ptr [ecx + edx]; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x001934ff: sbb ah, byte ptr [edi - 1]; inc dword ptr [ecx + 0x47c2dc3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x000a18ac: sbb ah, dh; call dword ptr [eax + 0x57]; 
0x001452c2: sbb al, 0; add byte ptr [eax], al; add byte ptr [ebp + 0x44c74004], cl; ret 8; 
0x0002ac7c: sbb al, 0; add byte ptr [eax], al; add byte ptr [ecx - 0x72cbdbbc], cl; inc ebp; and byte ptr [ecx - 0x9c7dbbc], cl; ret 0x7501; 
0x001a3eae: sbb al, 0; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000741f6: sbb al, 0; add byte ptr [ecx], al; ret; 
0x00027081: sbb al, 0x24; call edi; 
0x0002611e: sbb al, 0x24; call esi; 
0x0003c230: sbb al, 0x24; fld dword ptr [esp]; add esp, 4; ret; 
0x0003c1d9: sbb al, 0x24; fld dword ptr [esp]; mov dword ptr [edx], eax; add esp, 4; ret; 
0x000da7e2: sbb al, 0x24; fld qword ptr [esp]; add esp, 0xc; ret; 
0x0003bf90: sbb al, 0x24; fld qword ptr [esp]; add esp, 8; ret; 
0x00091341: sbb al, 0x24; mov eax, 0xf0; mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x0009130d: sbb al, 0x24; mov eax, 0xf0; xor esi, esi; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00152fcb: sbb al, 0x24; mov ebx, edi; call 0x231a0; mov dword ptr [esp], ebp; call esi; 
0x00026291: sbb al, 0x24; mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x000921a4: sbb al, 0x24; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0002693b: sbb al, 0x24; mov edx, dword ptr [ebp - 0x44]; call edx; 
0x00189c1e: sbb al, 0x24; ret; 
0x00061971: sbb al, 0x24; sub esp, 8; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x34]; call eax; 
0x00136bda: sbb al, 0x29; rcl byte ptr [eax - 0x73]; xchg dword ptr [ebp + edx*2 - 7], ebp; call dword ptr [eax - 1]; 
0x000652cc: sbb al, 0x29; ret 0xb8; 
0x001367ac: sbb al, 0x29; ret 0xca39; 
0x0006eaa0: sbb al, 0x29; ret; 
0x0015c352: sbb al, 0x31; dec dword ptr [ebx + 0x392c244c]; ret; 
0x0018a65f: sbb al, 0x31; fild dword ptr [eax + 0xf72007d]; xchg esp, eax; ret; 
0x00112f47: sbb al, 0x31; fild dword ptr [ebp - 0x14f48a2e]; jo 0x112ed4; ret; 
0x0002523d: sbb al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x000eeb57: sbb al, 0x31; shr bl, cl; or ecx, dword ptr [ebp - 0x7cffd98c]; ret 0x3901; 
0x000d96f2: sbb al, 0x39; dec edi; sbb al, 0xf; test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x0015176f: sbb al, 0x39; ret 0x1674; 
0x000fc43b: sbb al, 0x39; ret 0x4e0f; 
0x000e7fd1: sbb al, 0x39; ret 0x8d0f; 
0x001735a5: sbb al, 0x39; ret 0x930f; 
0x000625aa: sbb al, 0x39; ret; 
0x000a17b5: sbb al, 0x3c; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00042b17: sbb al, 0x50; call 0x1acdd0; add esp, 0x18; pop ebx; ret; 
0x00060b82: sbb al, 0x50; call 0x7cb00; cmp eax, 1; sbb eax, eax; add esp, 0x1c; ret; 
0x000a8b68: sbb al, 0x50; cmc; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x001288ef: sbb al, 0x50; push dword ptr [esp + 0x1c]; call 0x616b0; add esp, 0x10; add esp, 0xc; ret; 
0x000abf9b: sbb al, 0x50; push dword ptr [esp + 0x1c]; call 0xc25c0; add esp, 0x18; pop ebx; ret; 
0x000e76de: sbb al, 0x51; mov dword ptr [esp + 0x18], ecx; push ebx; call eax; 
0x0016f5f6: sbb al, 0x52; lea edx, [esi - 0xcf5b4]; push edx; push 1; push ebx; call dword ptr [eax]; 
0x0016f71f: sbb al, 0x52; lea edx, [esi - 0xcf5b4]; push edx; push 2; push ebx; call dword ptr [eax]; 
0x00179e68: sbb al, 0x53; call dword ptr [eax + 0xc]; 
0x00171473: sbb al, 0x53; call dword ptr [eax + 4]; 
0x001714c1: sbb al, 0x53; call dword ptr [eax]; 
0x00179d9c: sbb al, 0x53; call eax; 
0x0016ee47: sbb al, 0x56; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0013a2ca: sbb al, 0x56; stc; call dword ptr [eax + 0x50]; 
0x000fd880: sbb al, 0x59; dec dword ptr [ecx + 0x14e82434]; pop ecx; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0009afa4: sbb al, 0x5b; lea eax, [eax + eax - 1]; pop esi; pop edi; pop ebp; ret; 
0x0007fb56: sbb al, 0x5b; lea eax, [ecx + esi]; pop esi; pop edi; pop ebp; ret; 
0x00030739: sbb al, 0x5b; mov eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x00178434: sbb al, 0x5b; mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x000386c0: sbb al, 0x5b; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x00033609: sbb al, 0x5b; pop esi; mov eax, edi; pop edi; pop ebp; ret; 
0x0007e070: sbb al, 0x5b; pop esi; pop edi; pop ebp; jmp eax; 
0x0002520e: sbb al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x00122003: sbb al, 0x5b; pop esi; pop edi; ret; 
0x000afa44: sbb al, 0x5b; pop esi; ret; 
0x0008a22b: sbb al, 0x5b; pop esi; sub eax, edi; pop edi; pop ebp; ret; 
0x0007fb91: sbb al, 0x5b; sar eax, 2; pop esi; pop edi; pop ebp; ret; 
0x000bb33a: sbb al, 0x5f; pop esi; pop ebx; ret; 
0x0008e746: sbb al, 0x65; mov dword ptr [0x7c], eax; ret; 
0x0008e816: sbb al, 0x65; mov dword ptr [0x7c], edx; mov eax, dword ptr [eax + 0x24]; test eax, eax; jne 0x8e830; ret; 
0x0008e72d: sbb al, 0x65; mov edx, dword ptr [0x78]; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x0017b89e: sbb al, 0x65; sub eax, dword ptr [0x14]; jne 0x17b8ac; add esp, 0x2c; ret; 
0x0008750e: sbb al, 0x65; sub eax, dword ptr [0x14]; jne 0x8752c; add esp, 0x28; pop ebx; ret; 
0x000dba5a: sbb al, 0x65; sub ecx, dword ptr [0x14]; jne 0xdba69; add esp, 0x28; pop ebx; ret; 
0x0010c213: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x10c269; add esp, 0x28; pop ebx; ret; 
0x0010c2b6: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x10c309; add esp, 0x28; pop ebx; ret; 
0x0010c523: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x10c579; add esp, 0x28; pop ebx; ret; 
0x0012b696: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x12b6e9; add esp, 0x28; pop ebx; ret; 
0x0012b736: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x12b789; add esp, 0x28; pop ebx; ret; 
0x001313dc: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x131409; add esp, 0x28; pop ebx; ret; 
0x0013278c: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x1327b9; add esp, 0x28; pop ebx; ret; 
0x0013d581: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x13d595; add esp, 0x2c; ret; 
0x0013e7c1: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x13e7d5; add esp, 0x2c; ret; 
0x0014ef52: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x14ef63; movzx eax, ax; add esp, 0x2c; ret; 
0x00153642: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x153651; add esp, 0x28; pop ebx; ret; 
0x0016f427: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x16f436; add esp, 0x28; pop ebx; ret; 
0x001785ba: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x1785d7; add esp, 0x28; pop ebx; ret; 
0x0017865a: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x178677; add esp, 0x28; pop ebx; ret; 
0x00186f29: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x186f38; add esp, 0x28; pop ebx; ret; 
0x00192b47: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x192b55; add esp, 0x2c; ret; 
0x0003cf3c: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x3cf7c; add esp, 0x28; pop ebx; ret; 
0x000409d6: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x409e4; add esp, 0x2c; ret; 
0x00053496: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x534a4; add esp, 0x2c; ret; 
0x00092769: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x92777; add esp, 0x2c; ret; 
0x00097255: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x97264; add esp, 0x28; pop ebx; ret; 
0x000972e5: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x972f3; add esp, 0x2c; ret; 
0x00098599: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x985a7; add esp, 0x2c; ret; 
0x00098a09: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x98a17; add esp, 0x2c; ret; 
0x00098f25: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x98f33; add esp, 0x2c; ret; 
0x00099375: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x99383; add esp, 0x2c; ret; 
0x0009c4d0: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x9c4f7; add esp, 0x2c; ret; 
0x0009c73c: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x9c767; add esp, 0x2c; ret; 
0x0009e752: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x9e761; add esp, 0x28; pop ebx; ret; 
0x0009fdca: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x9fdd9; add esp, 0x28; pop ebx; ret; 
0x000da686: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0xda69f; add esp, 0x28; pop ebx; ret; 
0x000dbccf: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0xdbd19; add esp, 0x28; pop ebx; ret; 
0x000e75a2: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0xe75e2; add esp, 0x28; pop ebx; ret; 
0x000e77c0: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0xe77cf; add esp, 0x28; pop ebx; ret; 
0x0013c00d: sbb al, 0x6a; add eax, 0x6509c8c1; xor eax, dword ptr [0x18]; push esi; call eax; 
0x0003340c: sbb al, 0x73; pop ss; mov edx, dword ptr [ebx + eax*4 + 0x20]; pop ebx; mov eax, edx; ret; 
0x00031ebf: sbb al, 0x73; stc; call dword ptr [eax - 0x73]; 
0x0011e8a7: sbb al, 0x74; mov dh, 0x89; ret; 
0x00037e9b: sbb al, 0x75; stc; dec dword ptr [ecx - 0x48f0f7b0]; xchg ebx, eax; and byte ptr [ebp - 7], dh; jmp dword ptr [esi - 0x77]; 
0x0007934b: sbb al, 0x7f; stc; call dword ptr [eax - 0x73]; 
0x000a083a: sbb al, 0x81; les esi, ptr [eax + eax + 0x5e5b0000]; ret; 
0x00189c91: sbb al, 0x82; xor eax, eax; pop ebx; ret; 
0x0017cc93: sbb al, 0x83; in al, dx; add al, 0x6a; call dword ptr [ebp + 0x56]; 
0x0013b60e: sbb al, 0x83; in al, dx; add al, 0x83; ret; 
0x000410e7: sbb al, 0x83; in al, dx; add al, 0xf; scasd eax, dword ptr es:[edi]; ret 0x8b50; 
0x0015014b: sbb al, 0x83; insb byte ptr es:[edi], dx; and al, 0x14; add dword ptr [ecx], ebp; ret 0x828d; 
0x0010b99f: sbb al, 0x83; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0017be7e: sbb al, 0x83; les ebx, ptr [eax]; pop ebx; ret; 
0x00029fd7: sbb al, 0x83; les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; jmp eax; 
0x00116cb4: sbb al, 0x83; les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x00136ca0: sbb al, 0x83; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0002b215: sbb al, 0x83; les edi, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; jmp eax; 
0x0008de66: sbb al, 0x83; les esp, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x000dc131: sbb al, 0x83; les esp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00079a23: sbb al, 0x83; ljmp 0xc483:0x4518901; adc al, 0x5b; pop esi; ret; 
0x0015ccb7: sbb al, 0x83; ret 0x8301; 
0x0015e3c2: sbb al, 0x83; ret 0x8501; 
0x00128dc3: sbb al, 0x83; ret 0x8801; 
0x001417ee: sbb al, 0x83; ret 0x8802; 
0x0002a46e: sbb al, 0x83; ret; 
0x000fec89: sbb al, 0x83; rol byte ptr [ecx], 0x39; ret 0xef7f; 
0x000fee09: sbb al, 0x83; rol byte ptr [ecx], 0x39; ret; 
0x000aca1f: sbb al, 0x83; rol byte ptr [ecx], 0x83; ret; 
0x00094dc3: sbb al, 0x83; rol dword ptr [ecx], 0x83; ret 0x8108; 
0x0015bf34: sbb al, 0x83; ror byte ptr [eax], 0x50; call 0xc21a0; add esp, 0x1c; ret; 
0x0008d0cf: sbb al, 0x85; ror byte ptr [edi], 0x48; ret 0xff50; 
0x001701c7: sbb al, 0x85; ror byte ptr [edi], 0x84; mov esi, 0x83fffffe; in al, dx; or al, 0x56; call eax; 
0x0004577e: sbb al, 0x85; ror byte ptr [edi], cl; xchg ebp, eax; ret 0xc220; 
0x000deaab: sbb al, 0x85; sal byte ptr [eax + esi*2 - 0x75], 0x5c; and al, 0x60; lea edx, [esp + 0x2c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0017709a: sbb al, 0x85; sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x55; call eax; 
0x0016ebc8: sbb al, 0x85; sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x56; call eax; 
0x0016ffb6: sbb al, 0x85; sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x57; call eax; 
0x000a075c: sbb al, 0x89; add al, 0x24; call esi; 
0x00034f40: sbb al, 0x89; call 0x5d62ada2; ret; 
0x0003dfa2: sbb al, 0x89; call 0x5d633e04; ret; 
0x0007fa04: sbb al, 0x89; call 0x5d675866; ret; 
0x0009864c: sbb al, 0x89; call 0x5d68e4ae; ret; 
0x00098fd9: sbb al, 0x89; call 0x5d68ee3b; ret; 
0x00099736: sbb al, 0x89; call 0x5d68f598; ret; 
0x000a1a6c: sbb al, 0x89; call 0x5d6978ce; ret; 
0x000a1aee: sbb al, 0x89; call 0x5d697950; ret; 
0x000a4701: sbb al, 0x89; call 0x5d69a563; ret; 
0x0010eb9b: sbb al, 0x89; call 0x5d7049fd; ret; 
0x001550c0: sbb al, 0x89; call 0x5d74af22; ret; 
0x001571c4: sbb al, 0x89; call 0x5d74d026; ret; 
0x0016a3c0: sbb al, 0x89; call 0x5d760222; ret; 
0x0016d200: sbb al, 0x89; call 0x5d763062; ret; 
0x0016dc90: sbb al, 0x89; call 0x5d763af2; ret; 
0x0016df60: sbb al, 0x89; call 0x5d763dc2; ret; 
0x0018c359: sbb al, 0x89; call 0x5d7821bb; ret; 
0x000e7fce: sbb al, 0x89; dec esi; sbb al, 0x39; ret 0x8d0f; 
0x000384ec: sbb al, 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x000abde9: sbb al, 0x89; inc edx; add al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0003026e: sbb al, 0x89; lds ecx, ptr [ecx - 0x6817dbc4]; mov dl, 7; add byte ptr [ecx - 0x76bbdbbc], cl; ret 0xc483; 
0x00035e01: sbb al, 0x89; loope 0x35d8e; ret; 
0x00032dde: sbb al, 0x89; out 0x89, al; ret 0x25; 
0x00137b15: sbb al, 0x89; out 0x89, al; ret; 
0x000fd328: sbb al, 0x89; pop edx; and byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00038e5a: sbb al, 0x89; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x000355a7: sbb al, 0x89; ret 0x25; 
0x00081f63: sbb al, 0x89; ret 0x4489; 
0x001805f0: sbb al, 0x89; ret 0x448b; 
0x0013a383: sbb al, 0x89; ret 0x572b; 
0x001b1893: sbb al, 0x89; ret 0x950f; 
0x000a929b: sbb al, 0x89; ret 0x98eb; 
0x0002bc67: sbb al, 0x89; ret 0xb60f; 
0x0009f40f: sbb al, 0x89; ret 0xc031; 
0x0010a02b: sbb al, 0x89; ret 0xc085; 
0x0005a08d: sbb al, 0x89; ret 0xc801; 
0x00080aea: sbb al, 0x89; ret 0xc883; 
0x0013a02f: sbb al, 0x89; ret 0xc985; 
0x0010abe8: sbb al, 0x89; ret 0xeac0; 
0x00063061: sbb al, 0x89; ret; 
0x0015a30c: sbb al, 0x89; sub byte ptr [ebx - 0x74ebdbbc], cl; or cl, ch; ret 0xfffe; 
0x001486cd: sbb al, 0x89; test dword ptr [ebx + edi*8 + 0x458bffff], edi; and byte ptr [ecx - 0x4477b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000e9ff5: sbb al, 0x89; xor al, byte ptr [ebx + 0x5e5b04c4]; ret; 
0x000c21de: sbb al, 0x8b; add edx, ecx; add esi, ecx; jmp ebx; 
0x0019324c: sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0013d1f7: sbb al, 0x8b; inc ebp; or al, 0x85; ror byte ptr [edi], 0x84; ret; 
0x000dad40: sbb al, 0x8b; inc esp; and al, 0x64; call eax; 
0x0010bfe5: sbb al, 0x8b; je 0x10c00d; inc esp; mov ebx, dword ptr [esp + 0x40]; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000e7675: sbb al, 0x8b; je 0xe769d; inc esp; mov ebx, dword ptr [esp + 0x40]; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000abb7f: sbb al, 0x8b; jl 0xabba7; sbb byte ptr [edi], cl; mov esi, 0xfc53906; xchg esp, eax; ret 0xc739; 
0x00194c46: sbb al, 0x8b; jmp ebx; 
0x000eab9f: sbb al, 0x8b; pop esp; and al, 0x14; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x0012b8b7: sbb al, 0x8b; pop esp; and al, 0x18; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0015116f: sbb al, 0x8b; push edx; or byte ptr [ecx], bh; ret 0x460f; 
0x000de913: sbb al, 0x8b; push esp; and al, 0x34; mov ebx, dword ptr [esp + 0x30]; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012fdc4: sbb al, 0x8b; push esp; and al, 0x34; mov ebx, dword ptr [esp + 0x30]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00115c74: sbb al, 0x8b; test byte ptr [eax + edx], ah; add dword ptr [eax], eax; add byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc10c; 
0x001628b6: sbb al, 0x8d; adc byte ptr [ebx + 0x60], 0xf9; call dword ptr [eax + 0x55]; 
0x000961ed: sbb al, 0x8d; and esp, 0xffffff86; stc; call dword ptr [eax - 0x73]; 
0x0014cf4d: sbb al, 0x8d; inc ebx; add dword ptr [eax - 0x7bf0c406], eax; ret 1; 
0x00145eae: sbb al, 0x8d; mov al, 0x54; ret 0xfff9; 
0x0005bb47: sbb al, 0x8d; mov byte ptr [eax + eax + 0x48890000], bl; or byte ptr [ecx + 0x10890450], cl; ret; 
0x000a1448: sbb al, 0x8d; push ebx; or dh, dh; ret 0xf0f; 
0x0017145a: sbb al, 0x8d; push ecx; add al, 0x52; push ebx; call dword ptr [eax + 4]; 
0x00171499: sbb al, 0x8d; push ecx; add al, 0x52; push ebx; call dword ptr [eax]; 
0x000c4850: sbb al, 0x8d; sbb byte ptr [eax], 0x9c; stc; call dword ptr [eax - 0x73]; 
0x000cda16: sbb al, 0x8d; sub byte ptr [eax + edi*8], 0xff; call dword ptr [eax - 1]; 
0x0003fbc6: sbb al, 0x8d; test esp, ebx; sub al, 0xf9; dec dword ptr [ecx - 0x76d3dbbc]; ret 0xc189; 
0x0015f69c: sbb al, 0x8d; xchg byte ptr [edi + 0x5f], ah; stc; call dword ptr [eax - 0x18]; 
0x001702e7: sbb al, 0x8d; xchg byte ptr [esp], al; stc; call dword ptr [eax - 0x73]; 
0x000c6d5b: sbb al, 0x8d; xchg dword ptr [eax], ebp; popfd; stc; call dword ptr [eax - 0x73]; 
0x000c69a4: sbb al, 0x8d; xchg dword ptr [eax], ebx; popfd; stc; call dword ptr [eax - 0x73]; 
0x000c44fc: sbb al, 0x8d; xchg esp, ebx; wait; stc; call dword ptr [eax - 0x73]; 
0x000fbae3: sbb al, 0x8e; je 0xfbaf8; pop ebx; pop esi; ret; 
0x0010ebb6: sbb al, 0xa2; stc; call dword ptr [eax - 0x73]; 
0x0013ece8: sbb al, 0xaa; stc; call dword ptr [eax - 0x73]; 
0x0008e905: sbb al, 0xb3; sldt word ptr [0x1b050b]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x298], edx; ret; 
0x0012f29d: sbb al, 0xb8; mov dword ptr [0x8b000000], eax; pop esp; and al, 0x14; call dword ptr gs:[0x10]; 
0x0012f010: sbb al, 0xb8; sub al, 1; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x00194cab: sbb al, 0xbb; jmp ebx; 
0x00186079: sbb al, 0xbb; stc; call dword ptr [eax - 0x73]; 
0x00190644: sbb al, 0xc1; clc; pop ds; ret; 
0x0011fe2d: sbb al, 0xc1; cli; pop ds; call dword ptr gs:[0x10]; 
0x00137229: sbb al, 0xc6; add ah, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x00137215: sbb al, 0xc6; add cl, byte ptr [edx]; pop ebx; pop esi; pop edi; ret; 
0x0013d67e: sbb al, 0xd0; cmc; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x000e7603: sbb al, 0xdd; add al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000a93be: sbb al, 0xe0; cmc; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x000a189a: sbb al, 0xe6; call dword ptr [eax + 0x57]; 
0x000c4de8: sbb al, 0xe8; adc al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000c73ca: sbb al, 0xe8; adc byte ptr [ecx], cl; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000aa338: sbb al, 0xe8; and al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000ac08a: sbb al, 0xe8; and byte ptr [ebp + 1], 0; add esp, 0x18; pop ebx; ret; 
0x0013e3f8: sbb al, 0xe8; and byte ptr [ebp - 8], 0xff; add esp, 0x18; pop ebx; ret; 
0x0004df1a: sbb al, 0xe8; and byte ptr [ecx], cl; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00070335: sbb al, 0xe8; and eax, 0x8300054a; les ecx, ptr [ecx + ecx*4]; ret; 
0x0005aa85: sbb al, 0xe8; cmc; stosd dword ptr es:[edi], eax; add al, byte ptr [eax]; add esp, 0x1c; ret; 
0x0003e991: sbb al, 0xe8; cmp dword ptr [ecx], eax; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0019063c: sbb al, 0xe8; dec ebx; clc; inc dword ptr [ebx - 0x73ee33c]; pop ds; ret; 
0x000abf70: sbb al, 0xe8; dec edx; add word ptr [eax], ax; add esp, 0x18; pop ebx; ret; 
0x000abf3e: sbb al, 0xe8; dec esp; add dword ptr gs:[eax], eax; add esp, 0x18; pop ebx; ret; 
0x0005ac56: sbb al, 0xe8; in al, 0xb7; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0019ceb3: sbb al, 0xe8; int 0xfe; inc dword ptr [ecx + 0x3f2b7c3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x000ca6ec: sbb al, 0xe8; into; pop es; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00122e45: sbb al, 0xe8; jne 0x122e9e; add byte ptr [eax], al; add esp, 0x10; add esp, 0xc; ret; 
0x000857e0: sbb al, 0xe8; lcall 0x18c4, 0x83fffffe; pop ebx; ret; 
0x00085580: sbb al, 0xe8; lcall 0x1cc4, 0x83ffff90; ret; 
0x0003dffe: sbb al, 0xe8; lodsb al, byte ptr [esi]; test dword ptr [eax], 0x1cc48300; ret; 
0x001289f2: sbb al, 0xe8; mov eax, 0x83fff38c; les edx, ptr [eax]; add esp, 0xc; ret; 
0x000ca72a: sbb al, 0xe8; nop; pop es; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000eab40: sbb al, 0xe8; or al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00115402: sbb al, 0xe8; or byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000acfbf: sbb al, 0xe8; or eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0006dc64: sbb al, 0xe8; out 0x49, al; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00122dd3: sbb al, 0xe8; out 0x55, eax; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00122cd4: sbb al, 0xe8; out 0x56, al; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00114a73: sbb al, 0xe8; out 0xad, eax; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0013de74: sbb al, 0xe8; push ss; inc esi; clc; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000abfda: sbb al, 0xe8; pushal; imul eax, dword ptr [ecx], 0; add esp, 0x18; pop ebx; ret; 
0x00024524: sbb al, 0xe8; ret 0xffff; 
0x0009db17: sbb al, 0xe8; ret; 
0x000cde8a: sbb al, 0xe8; ror byte ptr [eax], 1; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0009e03c: sbb al, 0xe8; sahf; idiv edi; inc dword ptr [ebx - 0x3fe6fe08]; add esp, 0x1c; ret; 
0x0009f1d0: sbb al, 0xe8; sbb al, byte ptr [esi]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0003e03e: sbb al, 0xe8; sub al, 0x35; add dword ptr [eax], eax; add esp, 0x1c; ret; 
0x000ac05e: sbb al, 0xe8; sub al, 0x40; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x0008d0dd: sbb al, 0xe8; sub eax, 0x83ffffff; les ebx, ptr [eax]; pop ebx; ret; 
0x00062034: sbb al, 0xe8; test byte ptr [eax], 0; add esp, 0x1c; ret; 
0x0011f676: sbb al, 0xe8; xor al, 0; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0004a168: sbb al, 0xe9; cmp eax, 0x8bfffff4; jl 0x4a195; sbb byte ptr [ebp - 0x687bf79], cl; call dword ptr [eax - 0x73]; 
0x001aef5f: sbb al, 0xe9; ret; 
0x00096dc6: sbb al, 0xe9; sub eax, 0x8dfffffe; je 0x96df5; add bh, dh; ret 0; 
0x00095650: sbb al, 0xea; stc; inc dword ptr [ebx - 0x7e45f440]; add eax, 0xa30f0000; ret 0x830f; 
0x000fcfe1: sbb al, 0xeb; and dword ptr [ebp + 0xf002674], ecx; xchg esp, eax; ret; 
0x00171570: sbb al, 0xeb; dec dword ptr [ecx + 0x25e82434]; sbb al, 0xeb; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00171578: sbb al, 0xeb; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00104a8e: sbb al, 0xf6; ret 0xf08; 
0x0010b45a: sbb al, 0xf9; mov dword ptr [eax], 0; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x000fabd7: sbb al, 0xf; inc esp; ret 0x4c89; 
0x0014d8a8: sbb al, 0xf; mov bh, 0x50; add ah, byte ptr [esi - 0x3f]; ret 0xf08; 
0x0012ed4e: sbb al, 0xf; mov dh, 0xc0; neg eax; ret; 
0x00172bfb: sbb al, 0xf; mov dh, 0xc0; ret; 
0x000d96f5: sbb al, 0xf; test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x000b988d: sbb al, 0xf; test dword ptr [ebp + eax + 0x5e5f0000], ecx; pop ebx; ret; 
0x000baf30: sbb al, 0xf; test ecx, ebp; add eax, 0x5e5f0000; pop ebx; ret; 
0x0015128d: sbb al, 0xf; xchg edi, eax; ret 0xd008; 
0x00053cfd: sbb al, 0xf; xchg edx, eax; ret 0x1e89; 
0x00053bfd: sbb al, 0xf; xchg edx, eax; ret 0xe89; 
0x001a7f1d: sbb al, 0xfe; inc dword ptr [ecx + 0x34454c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001548ac: sbb al, 0xff; aaa; push eax; push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x00197fc5: sbb al, 0xff; inc dword ptr [ecx + 0x43868c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0015a439: sbb al, 0xff; je 0x15a461; xor byte ptr [ebp + 0x50482444], cl; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x40]; call esi; 
0x00062030: sbb al, 0xff; je 0x62058; sbb al, 0xe8; test byte ptr [eax], 0; add esp, 0x1c; ret; 
0x000857dc: sbb al, 0xff; je 0x85804; sbb al, 0xe8; lcall 0x18c4, 0x83fffffe; pop ebx; ret; 
0x000dad3c: sbb al, 0xff; je 0xdad64; sbb al, 0x8b; inc esp; and al, 0x64; call eax; 
0x000db253: sbb al, 0xff; je 0xdb27b; sbb al, 0x8b; inc esp; and al, 0x64; call eax; 
0x000db866: sbb al, 0xff; je 0xdb88e; sbb al, 0x8b; inc esp; and al, 0x64; call eax; 
0x00089d72: sbb al, 0xff; jo 0x89dae; call 0x11f490; add esp, 0x18; pop ebx; ret; 
0x00175a37: sbb al, 0xff; mov al, 0x90; add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; 
0x00070c89: sbb al, 1; add byte ptr [eax], al; add byte ptr [ebx + 0x100955c], cl; ret; 
0x0010e8fc: sbb al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001aba10: sbb al, 1; add byte ptr [eax], al; lea eax, [eax + 7]; pop edi; ret; 
0x0012e389: sbb al, 1; add byte ptr [eax], al; mov ebx, 3; mov ecx, 0x7fffffff; mov esi, 5; call dword ptr gs:[0x10]; 
0x0010e8ba: sbb al, 1; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000c3147: sbb al, 1; add byte ptr [eax], al; ret; 
0x0018bfbf: sbb al, 1; ret 0x4689; 
0x000b34e0: sbb al, 3; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x00199deb: sbb al, 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00034014: sbb al, 8; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000a18d9: sbb al, bh; inc dword ptr [ebx - 0x7972f33c]; in al, dx; sbb ah, dh; call dword ptr [eax + 0x57]; 
0x000a1891: sbb al, bh; inc dword ptr [ebx - 0x7972f33c]; in al, dx; sbb al, 0xe6; call dword ptr [eax + 0x57]; 
0x000a18a3: sbb al, bh; inc dword ptr [ebx - 0x7972f33c]; insb byte ptr es:[edi], dx; sbb ah, dh; call dword ptr [eax + 0x57]; 
0x000a18c7: sbb al, bh; inc dword ptr [ebx - 0x7972f33c]; lodsb al, byte ptr [esi]; sbb ah, dh; call dword ptr [eax + 0x57]; 
0x000a18fd: sbb al, bh; inc dword ptr [ebx - 0x7972f33c]; lodsb al, byte ptr [esi]; sbb al, 0xe6; call dword ptr [eax + 0x57]; 
0x00185d02: sbb al, bh; inc edx; or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x1102454], cl; ret 0xcdb8; 
0x0004ce90: sbb al, bl; mov byte ptr [eax], al; ret 0xfff9; 
0x00199fe4: sbb al, byte ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0009a398: sbb al, byte ptr [eax]; add bh, dh; mov dword ptr [ecx], 0x74000000; aad 0x89; ret 0xe083; 
0x00060d24: sbb al, byte ptr [eax]; add byte ptr [eax - 0x18], dl; ret; 
0x0004d7e2: sbb al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x00129f89: sbb al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00060fe5: sbb al, byte ptr [eax]; add byte ptr [ebp + 0x314574c0], al; jmp dword ptr [esi - 0x70]; 
0x00094b55: sbb al, byte ptr [eax]; add byte ptr [ebp + 6], dh; mov eax, edx; pop ebx; pop esi; ret; 
0x00094e33: sbb al, byte ptr [eax]; add byte ptr [ebp + 8], dh; xor eax, eax; pop ebx; ret; 
0x000611af: sbb al, byte ptr [eax]; add byte ptr [ebx + 0x317f01fa], al; add esp, 0x18; pop ebx; ret; 
0x0008f9a5: sbb al, byte ptr [eax]; add byte ptr [ebx + 0x45a8b02], cl; mov ecx, dword ptr [edx + 8]; mov edx, dword ptr [edx + 0xc]; call dword ptr gs:[0x10]; 
0x0008cd28: sbb al, byte ptr [eax]; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00024bd5: sbb al, byte ptr [eax]; add byte ptr [ebx + 0x5e], bl; ret; 
0x0008cddd: sbb al, byte ptr [eax]; add byte ptr [ebx + 0xb7f01f8], al; ret; 
0x001a40fe: sbb al, byte ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00056b29: sbb al, byte ptr [eax]; add byte ptr [ebx - 0x362743], al; call dword ptr [eax]; 
0x000d6ae0: sbb al, byte ptr [eax]; add byte ptr [ebx - 0x363f63], cl; dec dword ptr [ecx - 0x361f73]; call dword ptr [eax + 0x52]; 
0x00058ccd: sbb al, byte ptr [eax]; add byte ptr [ebx - 0x364763], cl; call dword ptr [eax - 1]; 
0x0005832b: sbb al, byte ptr [eax]; add byte ptr [ebx - 0x364763], cl; dec dword ptr [ecx - 0x362773]; call dword ptr [eax - 1]; 
0x0008cd3b: sbb al, byte ptr [eax]; add byte ptr [ecx], al; add esp, 4; pop ebx; pop esi; ret; 
0x0009481c: sbb al, byte ptr [eax]; mov eax, dword ptr [eax + 0x3af4]; ret; 
0x0009d6ac: sbb al, byte ptr [eax]; mov ecx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x3ba4]; test eax, eax; jne 0x9d6c7; ret; 
0x000959bc: sbb al, byte ptr [eax]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; lea eax, [eax + 0x2a0]; mov dword ptr [eax], edx; ret; 
0x0009599c: sbb al, byte ptr [eax]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x2a4], edx; ret; 
0x0009597c: sbb al, byte ptr [eax]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x2ac], edx; ret; 
0x000e7851: sbb al, byte ptr [ebx + 0x548d08ec]; and al, 0xc; push edx; push ebx; call eax; 
0x00126dfc: sbb al, byte ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x000de161: sbb al, byte ptr [ebx + 0x5e5b4cc4]; pop edi; pop ebp; ret; 
0x0012e7ae: sbb al, byte ptr [ebx + eax*4]; ret; 
0x00085c29: sbb al, byte ptr [ecx + 0xa0c4]; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00196c35: sbb al, byte ptr [ecx]; retf 0xc801; call 0x189c1d; add ebx, 0x44bf1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194c35: sbb al, byte ptr [ecx]; retf 0xc801; call 0x189c1d; add ebx, 0x46971; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000a1a3c: sbb al, byte ptr [edx - 7]; call dword ptr [eax + 0x53]; 
0x0009f1d2: sbb al, byte ptr [esi]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000b31e2: sbb al, byte ptr [esi]; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0003d685: sbb al, ch; cmc; syscall; 
0x0013a484: sbb al, ch; imul byte ptr [ecx + 0x489ffef]; and al, 0x89; ret; 
0x00178e5a: sbb al, ch; mov ebp, 0x8100010d; ret; 
0x000a805a: sbb al, ch; mov ebp, 0x81000e1b; ret; 
0x0010ebd8: sbb al, ch; ret 0xf145; 
0x00118f07: sbb al, ch; ret; 
0x0013d7fa: sbb al, ch; sbb eax, 0x810004c4; ret; 
0x001616e2: sbb al, dh; std; jmp dword ptr [esi - 0x70]; 
0x000e8860: sbb bh, ah; jmp dword ptr [esi - 0x70]; 
0x0012ed43: sbb bh, bh; inc dword ptr [ebx - 0x6af0f708]; rol byte ptr [ebx - 0x49f0e33c], 0xc0; neg eax; ret; 
0x0019831c: sbb bh, bh; inc dword ptr [ecx + 0x43511c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001981ae: sbb bh, bh; inc dword ptr [ecx + 0x4367fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0010d62d: sbb bh, bh; jbe 0x10d639; call dword ptr [eax + 0xc]; 
0x0010e44e: sbb bh, bh; je 0x10e476; sbb byte ptr [edx - 1], ch; call 0x10e560; add esp, 0x1c; ret; 
0x0011e71d: sbb bh, bh; je 0x11e745; and byte ptr [ebx - 0x72cbdbbc], cl; and byte ptr [esi], 0x46; stc; call dword ptr [eax - 0x18]; 
0x0011f07f: sbb bh, bh; je 0x11f0a7; sbb byte ptr [edx - 0x64], ch; call 0x114f20; add esp, 0x1c; ret; 
0x0011f55f: sbb bh, bh; je 0x11f587; sbb byte ptr [edx - 0x64], ch; call 0x115b20; add esp, 0x1c; ret; 
0x00120a1c: sbb bh, bh; je 0x120a44; sbb byte ptr [edx - 0x64], ch; call 0x115b20; add esp, 0x1c; ret; 
0x00123d04: sbb bh, bh; je 0x123d2c; sbb byte ptr [ecx], bh; ror byte ptr [edi], 1; dec edi; ret 0x8d50; 
0x0008d0cb: sbb bh, bh; je 0x8d0f3; sbb al, 0x85; ror byte ptr [edi], 0x48; ret 0xff50; 
0x000c3ad5: sbb bh, bh; je 0xc3afd; sbb byte ptr [edx], ch; call 0xc4020; add esp, 0x1c; ret; 
0x000da820: sbb bh, bh; jo 0xda828; push dword ptr [eax]; call 0xdd060; add esp, 0x1c; ret; 
0x000da86d: sbb bh, bh; jo 0xda875; push dword ptr [eax]; call 0xdd060; add esp, 0x1c; ret; 
0x00186f9e: sbb bh, bh; nop; jl 0x186fa6; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00174755: sbb bh, bh; xor al, ch; ret; 
0x001a7e85: sbb bh, byte ptr [eax + 1]; jg 0x1a7e90; neg eax; ret; 
0x000c6565: sbb bh, byte ptr [ecx]; ret; 
0x000bd55c: sbb bh, dl; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00122085: sbb bl, byte ptr [ebx + 0x5e]; pop edi; ret; 
0x000bb2ec: sbb bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x00141a0d: sbb bl, ch; ret 0x5755; 
0x001312e4: sbb bl, dl; cmc; dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x000f5164: sbb byte ptr [0xc4830002], cl; adc byte ptr [ebp - 0x74be8b40], al; test dword ptr [edx + edi*8 - 1], edx; jmp dword ptr [ebp - 0x75]; 
0x00142107: sbb byte ptr [0xffffff], ah; or eax, edx; bswap eax; mov dword ptr [ecx], eax; mov eax, ecx; ret 4; 
0x0009feba: sbb byte ptr [eax + 0x103], bh; mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000e7a68: sbb byte ptr [eax + 0x108], bh; mov dword ptr [esp + 0x14], edi; call dword ptr gs:[0x10]; 
0x0011f705: sbb byte ptr [eax + 0x129], bh; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0003f0ae: sbb byte ptr [eax + 0x50], dl; call 0x3f110; add esp, 0x1c; ret; 
0x00040b15: sbb byte ptr [eax + 0x50], dl; call 0x40600; add esp, 0x10; add esp, 0xc; ret; 
0x00040845: sbb byte ptr [eax + 0x50], dl; call 0x40b80; add esp, 0x10; add esp, 0xc; ret; 
0x00079744: sbb byte ptr [eax + 0x57], dl; push ebx; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0013130e: sbb byte ptr [eax + 0x66], bh; call dword ptr gs:[0x10]; 
0x001329df: sbb byte ptr [eax + 0x75], bh; call dword ptr gs:[0x10]; 
0x0012384b: sbb byte ptr [eax + 0xa], bh; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00095d28: sbb byte ptr [eax + 0xf0], bh; mov ecx, 0x87; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x000665cd: sbb byte ptr [eax + 1], 0; add byte ptr [ecx - 0x56b7b], cl; dec dword ptr [ebp - 0x56b7b]; dec dword ptr [ecx - 0x5fb7b]; call dword ptr [eax - 0x18]; 
0x001a81f7: sbb byte ptr [eax + 1], bh; ja 0x1a8201; neg eax; ret; 
0x0014038a: sbb byte ptr [eax + 6], bh; call dword ptr gs:[0x10]; 
0x0014038a: sbb byte ptr [eax + 6], bh; call dword ptr gs:[0x10]; pop ebx; ret; 
0x0005b0a4: sbb byte ptr [eax + eax + 0x1cc48300], dh; ret; 
0x0003484f: sbb byte ptr [eax + eax + 0x3650000], 5; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x00083474: sbb byte ptr [eax + eax], al; add byte ptr [edx], ch; push edx; push eax; push esi; call dword ptr [ebx + 0x40]; 
0x0019a20b: sbb byte ptr [eax + eax], al; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001272aa: sbb byte ptr [eax + eax], cl; add byte ptr [ebp - 0x6ad017d], cl; call dword ptr [edx + 0x52]; 
0x000a8b67: sbb byte ptr [eax + edx*2], 0xf5; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x000876b2: sbb byte ptr [eax - 0x18], dl; out 0x3a, eax; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00170ef8: sbb byte ptr [eax - 0x7cffffdd], 0xec; or byte ptr [edx], ch; push ebx; call dword ptr [eax + 0x14]; 
0x000c4852: sbb byte ptr [eax], 0x9c; stc; call dword ptr [eax - 0x73]; 
0x0016facb: sbb byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x438b0cec], al; add al, 0x53; call dword ptr [eax + 0x10]; 
0x0016bef5: sbb byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x000e8e66: sbb byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0004a92c: sbb byte ptr [eax], al; add byte ptr [eax], al; add cl, bl; test dword ptr [edx + eax*8], edx; stc; jmp dword ptr [ebp - 0x75]; 
0x001337aa: sbb byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0013bfe7: sbb byte ptr [eax], al; add byte ptr [eax], al; call eax; 
0x00025063: sbb byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x0013f7ea: sbb byte ptr [eax], al; add byte ptr [eax], al; lea edx, [esp + 0x10]; push edx; push edi; call eax; 
0x0013f8c7: sbb byte ptr [eax], al; add byte ptr [eax], al; lea edx, [esp + 0x10]; push edx; push esi; call eax; 
0x0003ef4e: sbb byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [ebp + edi], edx; push dword ptr [ebx + 4]; call eax; 
0x00192a8b: sbb byte ptr [eax], al; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x000250f0: sbb byte ptr [eax], al; add byte ptr [eax], al; pop edi; pop ebp; jmp eax; 
0x00157333: sbb byte ptr [eax], al; add byte ptr [eax], al; pop edi; pop ebp; ret; 
0x00156f85: sbb byte ptr [eax], al; add byte ptr [eax], al; push eax; call edx; 
0x0013c016: sbb byte ptr [eax], al; add byte ptr [eax], al; push esi; call eax; 
0x00024afb: sbb byte ptr [eax], al; add byte ptr [eax], al; rol edx, 9; mov dword ptr [eax + 0x1a50], edx; ret; 
0x0003f325: sbb byte ptr [eax], al; add byte ptr [eax], al; xchg dword ptr [edi], edx; cmp edx, 1; jg 0x3f3f0; call eax; 
0x00031111: sbb byte ptr [eax], al; add byte ptr [ebp + 0x5b002674], cl; ret; 
0x0006b464: sbb byte ptr [eax], al; add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xd801; 
0x00128ce4: sbb byte ptr [eax], dl; add byte ptr [eax], al; call 0x231a8; add esp, 0x18; pop ebx; ret; 
0x000615c4: sbb byte ptr [eax], dl; add byte ptr [eax], al; pop ebx; ret; 
0x000db3ee: sbb byte ptr [ebp + 0x1042484], cl; add byte ptr [eax], al; mov dword ptr [esp + 0x30], eax; push eax; mov eax, dword ptr [esp + 0x64]; call eax; 
0x0005b4fc: sbb byte ptr [ebp + 0x23], dh; mov dword ptr [edx + 4], ecx; pop ebx; pop esi; pop edi; ret; 
0x0014692b: sbb byte ptr [ebp + 0x24448bc0], al; adc byte ptr [edi], cl; xchg ebp, eax; ret 0xc085; 
0x00126b70: sbb byte ptr [ebp + 0x45b080], cl; add byte ptr [eax - 0x18], dl; adc eax, dword ptr [ecx]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0014bfee: sbb byte ptr [ebp + 0x5b0d75c0], al; pop esi; pop edi; ret; 
0x000a84a2: sbb byte ptr [ebp + 0x5b1075db], al; pop esi; pop edi; ret; 
0x000bb2c7: sbb byte ptr [ebp + 0x5e5f1947], cl; pop ebx; ret; 
0x000bb2e9: sbb byte ptr [ebp + 0x5e5f1a47], cl; pop ebx; ret; 
0x000bb337: sbb byte ptr [ebp + 0x5e5f1c47], cl; pop ebx; ret; 
0x001395a7: sbb byte ptr [ebp + 0x60840fc9], al; or byte ptr [eax], al; add byte ptr [ebx + 0x39101e5c], cl; ret 0x820f; 
0x00154b6d: sbb byte ptr [ebp + 0x6a], dl; add byte ptr [edi + 0x53], dl; call edx; 
0x00080f82: sbb byte ptr [ebp + 0x88a8], cl; add byte ptr [ebp + 0x84b8], cl; add byte ptr [ebp - 0x9fa8b37], al; ret 0x7408; 
0x0013ac60: sbb byte ptr [ebp + ecx - 0x7d], dh; les ecx, ptr [eax]; pop ebx; ret; 
0x0003c8e3: sbb byte ptr [ebp - 0x2026c37d], cl; dec dword ptr [edi]; inc esp; ret 0xe3e9; 
0x0014abbb: sbb byte ptr [ebp - 0x47378a25], al; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; ret; 
0x000c3ac5: sbb byte ptr [ebp - 0x476d7240], al; cmp al, 0; add byte ptr [edi], cl; inc esp; ret 0xff50; 
0x0011454c: sbb byte ptr [ebp - 0x65d8b7e], cl; call dword ptr [eax - 0x73]; 
0x0009c102: sbb byte ptr [ebp - 0x677bf80], cl; call dword ptr [eax - 0x18]; 
0x0008f952: sbb byte ptr [ebp - 0x67c4380], cl; call dword ptr [eax - 0x18]; 
0x00064f89: sbb byte ptr [ebp - 0x67f1fb5], cl; pop edx; jbe 0x65934; mov edi, eax; jmp edx; 
0x00062a7b: sbb byte ptr [ebp - 0x682477a], cl; call dword ptr [eax - 0x73]; 
0x00072633: sbb byte ptr [ebp - 0x6827380], cl; call dword ptr [eax - 0x18]; 
0x0004d399: sbb byte ptr [ebp - 0x687a779], cl; call dword ptr [eax - 0x73]; 
0x00049fb7: sbb byte ptr [ebp - 0x687bf79], cl; call dword ptr [eax - 0x73]; 
0x0004a26d: sbb byte ptr [ebp - 0x687cb79], cl; call dword ptr [eax - 0x73]; 
0x0003dc5e: sbb byte ptr [ebp - 0x68a4380], cl; call dword ptr [eax - 0x18]; 
0x000250fe: sbb byte ptr [ebp - 0x690a380], cl; call dword ptr [eax - 0x18]; 
0x00184014: sbb byte ptr [ebp - 0x6993b80], cl; call dword ptr [eax - 0x18]; 
0x0016e470: sbb byte ptr [ebp - 0x69c6880], cl; call dword ptr [eax - 0x18]; 
0x0016def0: sbb byte ptr [ebp - 0x69c7480], cl; call dword ptr [eax - 0x18]; 
0x0016dc20: sbb byte ptr [ebp - 0x69c8180], cl; call dword ptr [eax - 0x18]; 
0x0016d810: sbb byte ptr [ebp - 0x69c8f80], cl; call dword ptr [eax - 0x18]; 
0x0016d190: sbb byte ptr [ebp - 0x69c9b80], cl; call dword ptr [eax - 0x18]; 
0x0016cdf0: sbb byte ptr [ebp - 0x69caa80], cl; call dword ptr [eax - 0x18]; 
0x0016c770: sbb byte ptr [ebp - 0x69cb880], cl; call dword ptr [eax - 0x18]; 
0x0016a350: sbb byte ptr [ebp - 0x69d6a80], cl; call dword ptr [eax - 0x18]; 
0x0016a350: sbb byte ptr [ebp - 0x69d6a80], cl; call dword ptr [eax - 0x18]; ret; 
0x0015feeb: sbb byte ptr [ebp - 0x6a02c80], cl; call dword ptr [eax - 1]; 
0x0015f2fc: sbb byte ptr [ebp - 0x6a03d80], cl; call dword ptr [eax - 1]; 
0x0015f3cb: sbb byte ptr [ebp - 0x6a04e80], cl; call dword ptr [eax - 1]; 
0x0015f737: sbb byte ptr [ebp - 0x6a05f7a], cl; call dword ptr [eax - 1]; 
0x0013dd12: sbb byte ptr [ebp - 0x6a85c80], cl; call dword ptr [eax - 0x18]; 
0x0013c802: sbb byte ptr [ebp - 0x6a88d80], cl; call dword ptr [eax - 0x18]; 
0x001925eb: sbb byte ptr [ebp - 0x6b5c980], cl; call dword ptr [eax + 0x53]; 
0x00112e17: sbb byte ptr [ebp - 0x6b62980], cl; call dword ptr [eax - 0x18]; 
0x0011244e: sbb byte ptr [ebp - 0x6b6cb80], cl; call dword ptr [eax - 0x18]; 
0x0011244e: sbb byte ptr [ebp - 0x6b6cb80], cl; call dword ptr [eax - 0x18]; in eax, 0xde; dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x000f05da: sbb byte ptr [ebp - 0x6b91680], cl; call dword ptr [eax - 0x18]; 
0x0008067a: sbb byte ptr [ebp - 0x6ff7d], cl; jmp dword ptr [ebp - 0x75]; 
0x000532fe: sbb byte ptr [ebp - 0x75], ah; xor eax, 0x14; mov dword ptr [esp + 0x14], esi; mov esi, dword ptr [esp + 0x28]; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x0003a6f3: sbb byte ptr [ebp - 0x769a8b40], al; ret 0xa4eb; 
0x0009d067: sbb byte ptr [ebp - 0x76dbdbb4], cl; ret 0x4c89; 
0x0013244f: sbb byte ptr [ebp - 0x76efdbbc], cl; inc esp; and al, 0x24; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00138b24: sbb byte ptr [ebp - 0x7c088a40], al; ret 0x8b18; 
0x0014ab83: sbb byte ptr [ebp - 0x7cc78b25], al; rol byte ptr [ecx], 1; ret; 
0x00088c7d: sbb byte ptr [ebp - 0x7cf18a25], al; les ecx, ptr [eax]; pop ebx; ret; 
0x0004892e: sbb byte ptr [ebp - 0x7d368], cl; dec dword ptr [ebp - 0x6d07c80]; call dword ptr [ebx + 0x6a]; 
0x0004800b: sbb byte ptr [ebp - 0x7d379], cl; call dword ptr [eax - 0x73]; 
0x0017cc57: sbb byte ptr [ebp - 0x95377], cl; dec dword ptr [ecx + 0x48891450]; add al, 0x5b; ret; 
0x00040620: sbb byte ptr [ebx + 0x10890253], cl; xor eax, eax; add esp, 8; pop ebx; ret; 
0x0005b09a: sbb byte ptr [ebx + 0x16480], cl; add bh, bh; xor al, ch; sbb byte ptr [eax + eax + 0x1cc48300], dh; ret; 
0x0012f471: sbb byte ptr [ebx + 0x1974fffe], al; mov eax, 0x17c; call dword ptr gs:[0x10]; 
0x00035d48: sbb byte ptr [ebx + 0x2e], 0xf9; call dword ptr [eax - 0x18]; 
0x0010bde3: sbb byte ptr [ebx + 0x3910245c], cl; into; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x001b0ced: sbb byte ptr [ebx + 0x39142444], cl; ret 0x840f; 
0x0002fdd7: sbb byte ptr [ebx + 0x418901e8], al; add al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x00151980: sbb byte ptr [ebx + 0x478910c4], al; adc al, 0x89; ret 0xc985; 
0x00092a76: sbb byte ptr [ebx + 0x488b685e], cl; add al, 0x8b; adc byte ptr [eax + 0xf1], bh; call dword ptr gs:[0x10]; 
0x000e7fcb: sbb byte ptr [ebx + 0x4e891c4f], cl; sbb al, 0x39; ret 0x8d0f; 
0x000405e4: sbb byte ptr [ebx + 0x548b10c4], al; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x405f9; add esp, 0x1c; ret; 
0x00040811: sbb byte ptr [ebx + 0x548b10c4], al; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x40826; add esp, 0x1c; ret; 
0x00040ae1: sbb byte ptr [ebx + 0x548b10c4], al; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x40af6; add esp, 0x1c; ret; 
0x00040b64: sbb byte ptr [ebx + 0x548b10c4], al; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x40b79; add esp, 0x1c; ret; 
0x000c0d3a: sbb byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000bd8b4: sbb byte ptr [ebx + 0x5e082444], cl; ret; 
0x0014193c: sbb byte ptr [ebx + 0x5e5b04c4], al; pop edi; pop ebp; ret; 
0x000df866: sbb byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x0016f99e: sbb byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x000287be: sbb byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; jmp eax; 
0x0011f5b5: sbb byte ptr [ebx + 0x5e5b74c4], al; ret; 
0x000a97fa: sbb byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0003bf21: sbb byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000348f7: sbb byte ptr [ebx + 0x5e], bl; ret; 
0x00189de2: sbb byte ptr [ebx + 0x74ff04ec], al; and al, 0x20; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x001251a1: sbb byte ptr [ebx + eax], 0; mov edx, dword ptr [esp + 8]; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x00125229: sbb byte ptr [ebx + eax], 0; pop ebx; ret; 
0x0018b1fe: sbb byte ptr [ebx + ecx], bh; add byte ptr [ebx - 0x77], dl; ret; 
0x00139b7c: sbb byte ptr [ebx - 0x137c5383], cl; add al, 0x6a; add eax, 0x55f3978d; stc; call dword ptr [edx + 0x50]; 
0x00088a1f: sbb byte ptr [ebx - 0x17ebdba4], cl; ja 0x889ce; stc; jmp dword ptr [ebp - 0x75]; 
0x000d6bc8: sbb byte ptr [ebx - 0x1f3efb14], al; add cl, byte ptr [ebx - 0x363f63]; call dword ptr [eax + 0x6a]; 
0x00058418: sbb byte ptr [ebx - 0x1f3efb14], al; add cl, byte ptr [ebx - 0x364763]; call dword ptr [eax + 0x6a]; 
0x0004c34e: sbb byte ptr [ebx - 0x27efdbac], cl; mov byte ptr [eax], al; ret 0xfff9; 
0x000fb602: sbb byte ptr [ebx - 0x3d], bl; lea esi, [esi]; call 0x8e600; mov edx, eax; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x00170c4b: sbb byte ptr [ebx - 0x3f7ae3c0], cl; je 0x170c5c; sub esp, 0xc; push esi; call eax; 
0x0003c356: sbb byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x0012e1c6: sbb byte ptr [ebx - 0x47d7db84], cl; js 0x12e1ce; add byte ptr [eax], al; mov dword ptr [ecx], ebx; int 0x80; 
0x0012f299: sbb byte ptr [ebx - 0x47e3dbac], cl; mov dword ptr [0x8b000000], eax; pop esp; and al, 0x14; call dword ptr gs:[0x10]; 
0x0012f00c: sbb byte ptr [ebx - 0x47e3dbac], cl; sub al, 1; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x000fc8bc: sbb byte ptr [ebx - 0x49f0f314], al; ret; 
0x00061ab8: sbb byte ptr [ebx - 0x49f0fe10], al; ror byte ptr [ebp + 0x329c0384], 0xf9; call dword ptr [eax + 0x6a]; 
0x00075542: sbb byte ptr [ebx - 0x4fb7b], cl; inc dword ptr [ecx]; ret; 
0x00074299: sbb byte ptr [ebx - 0x5037b], cl; inc dword ptr [ecx]; ret; 
0x00136bd3: sbb byte ptr [ebx - 0x74adef3c], al; inc esi; sbb al, 0x29; rcl byte ptr [eax - 0x73]; xchg dword ptr [ebp + edx*2 - 7], ebp; call dword ptr [eax - 1]; 
0x000eab9b: sbb byte ptr [ebx - 0x74e3dbac], cl; pop esp; and al, 0x14; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x001208a5: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x00130aa5: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x1a8; call dword ptr gs:[0x10]; 
0x00130b85: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x00126a65: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x00128425: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x001248f5: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x001306e5: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x0012ad7e: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x0011514e: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0011f11e: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x00130c7e: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x001308fe: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x0013097e: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x1ad; call dword ptr gs:[0x10]; 
0x0013071e: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x1af; call dword ptr gs:[0x10]; 
0x00130ade: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x1b8; call dword ptr gs:[0x10]; 
0x0013093e: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x1ba; call dword ptr gs:[0x10]; 
0x0013080e: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x00130b4e: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0012f54e: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0xac; call dword ptr gs:[0x10]; 
0x0012b79e: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x001285fe: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x0012498e: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x0015a308: sbb byte ptr [ebx - 0x76e3dbbc], cl; sub byte ptr [ebx - 0x74ebdbbc], cl; or cl, ch; ret 0xfffe; 
0x0002cd6d: sbb byte ptr [ebx - 0x76f3db84], cl; cmp byte ptr [ebx + 0x39102444], cl; ret 0x850f; 
0x00169488: sbb byte ptr [ebx - 0x77], bl; rcr byte ptr [esi + 0x5f], 1; ret; 
0x000e356b: sbb byte ptr [ebx - 0x78f0f902], al; call dword ptr [edx]; 
0x00028c04: sbb byte ptr [ebx - 0x7cebdbb4], cl; rol byte ptr [ecx], 0x83; ret 0x8901; 
0x00029204: sbb byte ptr [ebx - 0x7cfbdba4], cl; rol byte ptr [ecx], 0x83; ret 0x8901; 
0x000658a3: sbb byte ptr [ebx], al; add al, 0x97; mov edi, ecx; jmp eax; 
0x0010c4bb: sbb byte ptr [ebx], al; add byte ptr [esi - 0x70], ah; mov eax, 0x42; call dword ptr gs:[0x10]; 
0x00031a7a: sbb byte ptr [ebx], al; inc ecx; adc al, 0x39; ret 0x4d0f; 
0x00065119: sbb byte ptr [ebx], al; test byte ptr [ecx - 0x73f14], dl; jmp eax; 
0x00064890: sbb byte ptr [ebx], al; test byte ptr [esi - 0x73e94], dl; jmp eax; 
0x0006602b: sbb byte ptr [ebx], al; test byte ptr [esi - 0x74014], dl; jmp eax; 
0x00042cd0: sbb byte ptr [ecx + 0x10b8c2], cl; add byte ptr [eax], al; pop ebx; sub eax, edx; ret; 
0x00171e9d: sbb byte ptr [ecx + 0x1b81058], cl; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00042c3e: sbb byte ptr [ecx + 0x20b8c2], cl; add byte ptr [eax], al; pop ebx; sub eax, edx; ret; 
0x0003ddbc: sbb byte ptr [ecx + 0x244c8bc3], cl; adc al, 0xb8; xor eax, 0x31000001; sal byte ptr [ecx], cl; div byte ptr [ecx]; jmp dword ptr [ebp - 1]; 
0x0012e402: sbb byte ptr [ecx + 0x244c8bcb], cl; adc byte ptr [eax + 0x1b3], bh; int 0x80; 
0x000aca71: sbb byte ptr [ecx + 0x245489f0], cl; adc byte ptr [ecx], ch; fdivr dword ptr [ecx]; fmul dword ptr [edi]; inc edx; ret; 
0x0011fe27: sbb byte ptr [ecx + 0x247c8bca], cl; sbb al, 0xc1; cli; pop ds; call dword ptr gs:[0x10]; 
0x0002cd13: sbb byte ptr [ecx + 0x29008bea], cl; ret 0xfa83; 
0x00136abb: sbb byte ptr [ecx + 0x29c529da], cl; ret 0x6c01; 
0x000f01a2: sbb byte ptr [ecx + 0x2e], 0xf9; call dword ptr [eax - 0x75]; 
0x000abed3: sbb byte ptr [ecx + 0x3428d02], cl; pop ebx; pop esi; ret; 
0x000a6afc: sbb byte ptr [ecx + 0x3892073], cl; push eax; call ecx; 
0x000aa779: sbb byte ptr [ecx + 0x3910246c], cl; ret 0x2e74; 
0x00042ca2: sbb byte ptr [ecx + 0x40b8c2], cl; add byte ptr [eax], al; pop ebx; sub eax, edx; ret; 
0x000e0442: sbb byte ptr [ecx + 0x46], 0xf9; call dword ptr [eax + 0x53]; 
0x0008dd0d: sbb byte ptr [ecx + 0x4c48310], cl; pop ebx; pop esi; ret; 
0x0008e0e1: sbb byte ptr [ecx + 0x57], dl; push eax; push edx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x000abe13: sbb byte ptr [ecx + 0x5bd08902], cl; pop esi; ret; 
0x00194123: sbb byte ptr [ecx + 0x85c8b1a], cl; cld; mov dword ptr [edx + ecx - 4], ebx; mov eax, edx; pop ebx; ret; 
0x00042c10: sbb byte ptr [ecx + 0x8b8c2], cl; add byte ptr [eax], al; pop ebx; sub eax, edx; ret; 
0x000abad3: sbb byte ptr [ecx + ebx - 0x7d], dh; ret 0xf01; 
0x001b0dc7: sbb byte ptr [ecx + edi], al; ret 0x850f; 
0x0004a164: sbb byte ptr [ecx - 0x16e3dbac], cl; cmp eax, 0x8bfffff4; jl 0x4a195; sbb byte ptr [ebp - 0x687bf79], cl; call dword ptr [eax - 0x73]; 
0x0008aeaf: sbb byte ptr [ecx - 0x3fceefbd], cl; add esp, 4; pop ebx; pop esi; ret; 
0x0012480f: sbb byte ptr [ecx - 0x723ca428], cl; xor ah, 0xa3; stc; call dword ptr [eax - 0x73]; 
0x00115c0e: sbb byte ptr [ecx - 0x74540c10], cl; test byte ptr [eax + ebx], ah; add dword ptr [eax], eax; add byte ptr [ebx + 0xf14247c], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc10c; 
0x000acdb8: sbb byte ptr [ecx - 0x76287608], cl; ret 0x3990; 
0x000e7fc4: sbb byte ptr [ecx - 0x76efdbb4], cl; dec esi; sbb byte ptr [ebx + 0x4e891c4f], cl; sbb al, 0x39; ret 0x8d0f; 
0x0003898b: sbb byte ptr [ecx - 0x7c327611], cl; in al, dx; or al, 0x83; ret; 
0x00040bb3: sbb byte ptr [ecx - 0x7c3fcefe], cl; les ecx, ptr [eax]; pop ebx; ret; 
0x0016c975: sbb byte ptr [ecx - 0x7cefdbbc], cl; in al, dx; or byte ptr [ebp - 0x69d907d], cl; call dword ptr [eax + 0x51]; 
0x001518f9: sbb byte ptr [ecx - 0x7cff6abc], cl; ret 0x3b01; 
0x0017e463: sbb byte ptr [ecx - 0x9f7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x001439b7: sbb byte ptr [ecx - 7], bl; call dword ptr [eax - 0x73]; 
0x0002ab62: sbb byte ptr [ecx - 7], dh; call dword ptr [eax - 0x18]; 
0x000a5821: sbb byte ptr [ecx], ah; retf 0x488d; jmp dword ptr [ecx]; 
0x00047358: sbb byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [ebp - 0x7a22ff8a], cl; je 0x47326; stc; jmp dword ptr [ebp - 0x75]; 
0x000c78d8: sbb byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [ebp - 0x7a22ff8a], cl; je 0xc78a6; stc; jmp dword ptr [ebp - 0x75]; 
0x0009f998: sbb byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0009f93a: sbb byte ptr [ecx], al; add byte ptr [eax], al; mov ecx, ebp; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0014ac66: sbb byte ptr [ecx], al; add byte ptr [eax], al; pop ebx; ret; 
0x00024b70: sbb byte ptr [ecx], al; add byte ptr [eax], al; test edx, edx; je 0x24b79; ret; 
0x0010934b: sbb byte ptr [ecx], al; ret 0x44c7; 
0x001093e4: sbb byte ptr [ecx], al; ret 0x7c80; 
0x0004ec9f: sbb byte ptr [ecx], al; ret 0xd389; 
0x001a6437: sbb byte ptr [ecx], al; retf 0xc801; call 0x189c1d; add ebx, 0x35e2f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000d96d7: sbb byte ptr [ecx], bh; dec edi; sbb byte ptr [edi], cl; test dword ptr [edi + 0x5f000000], edi; pop esi; ret; 
0x00094242: sbb byte ptr [ecx], bh; iretd; mov ebx, dword ptr [eax + 0x68]; cmovbe ecx, edi; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x001055f8: sbb byte ptr [ecx], bh; ret 0x4c0f; 
0x00051add: sbb byte ptr [ecx], bh; ret 0x6674; 
0x000cc024: sbb byte ptr [ecx], bh; ret 0x840f; 
0x0002929f: sbb byte ptr [ecx], bh; ret; 
0x00123d08: sbb byte ptr [ecx], bh; ror byte ptr [edi], 1; dec edi; ret 0x8d50; 
0x00134c32: sbb byte ptr [ecx], bh; ror byte ptr [edi], 1; inc ebx; shr byte ptr [ecx], 1; ret 0xe801; 
0x0012a738: sbb byte ptr [ecx], bh; sar bh, 1; je 0x12a762; sbb byte ptr [edi], cl; dec edi; ret 0x8d50; 
0x000d9b07: sbb byte ptr [ecx], bh; sbb dh, byte ptr [esp + edx*8 + 0xf]; lahf; ret; 
0x0013288e: sbb byte ptr [ecx], cl; ror byte ptr [ebx + 0x656c2454], 1; sub edx, dword ptr [0x14]; jne 0x1328a2; add esp, 0x7c; ret; 
0x000ab04b: sbb byte ptr [ecx], dh; rol byte ptr [ecx], cl; ret; 
0x000aad8b: sbb byte ptr [ecx], dh; ror byte ptr [ecx + 0x13c244c], cl; ret; 
0x000935ea: sbb byte ptr [ecx], dh; ror byte ptr [ecx + 0xafb8c7], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00039d59: sbb byte ptr [ecx], dh; ror byte ptr [edi], 1; mov dh, 0x11; test dl, dl; jne 0x39d40; ret; 
0x000aa9b7: sbb byte ptr [ecx], dh; shr bl, cl; or ecx, dword ptr [ebp - 0x7cffd98c]; ret 0x3901; 
0x000bb694: sbb byte ptr [ecx], dl; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b9be7: sbb byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0019569a: sbb byte ptr [edi + 4], bl; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000a0752: sbb byte ptr [edi - 0x18], dl; inc edi; sub bh, al; dec dword ptr [ebx - 0x76e3dbbc]; add al, 0x24; call esi; 
0x000da944: sbb byte ptr [edi], ah; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0012a73e: sbb byte ptr [edi], cl; dec edi; ret 0x8d50; 
0x00027514: sbb byte ptr [edi], cl; mov bh, 0x81; cmp byte ptr [eax - 7], dh; jmp dword ptr [esi - 0x77]; 
0x001420c4: sbb byte ptr [edi], cl; mov bh, 0xc0; and ecx, 0xc0000000; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x000abb83: sbb byte ptr [edi], cl; mov esi, 0xfc53906; xchg esp, eax; ret 0xc739; 
0x0002f01b: sbb byte ptr [edi], cl; sub byte ptr [esi - 1], 0xff; jmp dword ptr [ebp - 0x5f]; 
0x000e15fc: sbb byte ptr [edi], cl; test byte ptr [ebp - 0x9fffffb], dh; ret; 
0x000a8ed3: sbb byte ptr [edi], cl; test byte ptr [ecx - 0x7cffffff], ah; ret 0xe901; 
0x000d96da: sbb byte ptr [edi], cl; test dword ptr [edi + 0x5f000000], edi; pop esi; ret; 
0x001b19de: sbb byte ptr [edi], cl; xchg ebp, eax; ret 0xc208; 
0x00116a05: sbb byte ptr [edi], cl; xchg ebp, eax; ret; 
0x0017eeb5: sbb byte ptr [edi], cl; xchg esp, eax; ret; 
0x0019811a: sbb byte ptr [edi], dh; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00115868: sbb byte ptr [edx + 0x50], dl; call 0x115b20; add esp, 0x10; add esp, 0xc; ret; 
0x0016de16: sbb byte ptr [edx + 0xa], ch; call 0x156690; add esp, 0x1c; ret; 
0x0005ad5a: sbb byte ptr [edx + 0xa], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x7cd30; add esp, 0x1c; ret; 
0x00169f06: sbb byte ptr [edx + 1], ch; call 0x156690; add esp, 0x1c; ret; 
0x0016a276: sbb byte ptr [edx + 2], ch; call 0x156690; add esp, 0x1c; ret; 
0x0016b336: sbb byte ptr [edx + 3], ch; call 0x156690; add esp, 0x1c; ret; 
0x0016c696: sbb byte ptr [edx + 4], ch; call 0x156690; add esp, 0x1c; ret; 
0x0016cd16: sbb byte ptr [edx + 5], ch; call 0x156690; add esp, 0x1c; ret; 
0x0016d0b6: sbb byte ptr [edx + 6], ch; call 0x156690; add esp, 0x1c; ret; 
0x0016e396: sbb byte ptr [edx + 7], ch; call 0x156690; add esp, 0x1c; ret; 
0x0016d736: sbb byte ptr [edx + 8], ch; call 0x156690; add esp, 0x1c; ret; 
0x0016db46: sbb byte ptr [edx + 9], ch; call 0x156690; add esp, 0x1c; ret; 
0x0013ece7: sbb byte ptr [edx + ebp*4], 0xf9; call dword ptr [eax - 0x73]; 
0x0015c6f3: sbb byte ptr [edx + ebp*8 - 0x7d], dh; ret 0x8b18; 
0x0011f083: sbb byte ptr [edx - 0x64], ch; call 0x114f20; add esp, 0x1c; ret; 
0x0011f53f: sbb byte ptr [edx - 0x64], ch; call 0x115940; add esp, 0x18; pop ebx; ret; 
0x0011f563: sbb byte ptr [edx - 0x64], ch; call 0x115b20; add esp, 0x1c; ret; 
0x00146908: sbb byte ptr [edx - 0x77], dl; ret 0xe889; 
0x00142428: sbb byte ptr [edx - 0x77], dl; ret 0xeac1; 
0x0010e452: sbb byte ptr [edx - 1], ch; call 0x10e560; add esp, 0x1c; ret; 
0x0010e42c: sbb byte ptr [edx - 1], ch; call 0x10e970; add esp, 0x1c; ret; 
0x0012d9fa: sbb byte ptr [edx], ch; call 0x12dc40; add esp, 0x1c; ret; 
0x00169aa6: sbb byte ptr [edx], ch; call 0x156690; add esp, 0x1c; ret; 
0x00034edc: sbb byte ptr [edx], ch; call 0x34e80; add esp, 0x1c; ret; 
0x0003d286: sbb byte ptr [edx], ch; call 0x3cb20; add esp, 0x1c; ret; 
0x000c3ad9: sbb byte ptr [edx], ch; call 0xc4020; add esp, 0x1c; ret; 
0x000e755e: sbb byte ptr [edx], ch; call 0xe7650; add esp, 0x10; mov eax, 1; add esp, 0xc; ret; 
0x0012889c: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; call 0x616b0; add esp, 0x1c; ret; 
0x000a8556: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; call 0xc25c0; add esp, 0x18; pop ebx; ret; 
0x0004a39a: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x477a0; add esp, 0x1c; ret; 
0x0004d63a: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x4ad00; add esp, 0x1c; ret; 
0x000513da: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x4e840; add esp, 0x1c; ret; 
0x000ca5ca: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc7ce0; add esp, 0x1c; ret; 
0x000cd52a: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xcaec0; add esp, 0x1c; ret; 
0x000d0f2a: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xce760; add esp, 0x1c; ret; 
0x0011e4ff: sbb byte ptr [edx], ch; push eax; call 0x121670; add esp, 0x10; add esp, 0xc; ret; 
0x000bab04: sbb byte ptr [edx], cl; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0008df7e: sbb byte ptr [esi + 0x57], dl; push edx; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x000abef3: sbb byte ptr [esi - 0x77], ah; pop edx; add al, 0x89; add cl, byte ptr [ebp + 0x5e5b0542]; ret; 
0x00105728: sbb byte ptr [esi - 0x7f], ah; loope 0x10572c; add esi, esi; ret; 
0x0003eecd: sbb byte ptr [esi - 7], dh; call dword ptr [eax - 0x18]; 
0x001898db: sbb byte ptr [esp + eax], bh; jne 0x24a3d; mov eax, 8; add esp, 0xc; ret; 
0x00033d5f: sbb ch, ah; idiv edi; dec dword ptr [ecx - 0x2d7a3f88]; je 0x33d75; mov dword ptr [esp + 0x14], eax; call edx; 
0x00142ed6: sbb ch, bh; jmp dword ptr [ebp - 0x5f]; 
0x000270c9: sbb ch, byte ptr [ecx]; stc; call dword ptr [eax - 0x18]; 
0x000a27d5: sbb cl, bh; dec dword ptr [ebx - 0x72ebdb8c]; xchg al, dh; cwde; stc; call dword ptr [eax - 0x73]; 
0x000b982c: sbb cl, byte ptr [ebp - 0x7af0e581]; ljmp 0x5b5e:0x5f000005; ret; 
0x0006ff6f: sbb cl, byte ptr [ebx + 0x1572914]; ret; 
0x0016ac57: sbb cl, byte ptr [ebx + 0x39682444]; ret 0x840f; 
0x0014c4e5: sbb cl, byte ptr [ebx + 0x39702444]; ret 0x840f; 
0x000d9b05: sbb cl, byte ptr [ebx + 0x741a3918]; aam 0xf; lahf; ret; 
0x0012fb0d: sbb cl, byte ptr [ebx - 0x47bbdb8c]; lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx + 0x53564d41], bh; call dword ptr gs:[0x10]; 
0x0015e45d: sbb cl, byte ptr [ebx - 0x72efdb84]; xchg edi, eax; or al, 0xd1; int1; call dword ptr [edx + 0x6a]; 
0x00194125: sbb cl, byte ptr [ebx - 0x7603f7a4]; pop esp; or bh, ah; mov eax, edx; pop ebx; ret; 
0x0012e7ab: sbb cl, byte ptr [ecx - 0x7cfbe584]; ret; 
0x00149e4e: sbb cl, byte ptr [edi]; inc edx; ret 0xb60f; 
0x000b982f: sbb cl, byte ptr [edi]; test edx, ebp; add eax, 0x5e5f0000; pop ebx; ret; 
0x0009c299: sbb cl, byte ptr [edx]; add byte ptr [esi - 0x70], ah; nop; endbr32; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0009c298: sbb cl, byte ptr fs:[edx]; add byte ptr [esi - 0x70], ah; nop; endbr32; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x00069a07: sbb dh, byte ptr [ebx]; stc; call dword ptr [eax - 0x18]; 
0x000d9b09: sbb dh, byte ptr [esp + edx*8 + 0xf]; lahf; ret; 
0x00122055: sbb dh, dh; ret 0x7540; 
0x001ac407: sbb dh, dh; ret 0xf0f; 
0x001602e4: sbb dl, bl; std; jmp dword ptr [esi - 0x70]; 
0x0010e368: sbb dl, byte ptr [eax - 0x73]; cmp ebx, 0x48; stc; call dword ptr [eax - 0x18]; 
0x00169995: sbb dl, dh; inc dword ptr [ebx - 0x77cef3c]; dec dword ptr [edi]; xchg esp, eax; ret 0xd1e9; 
0x0009c0fc: sbb dword ptr [0xec83001a], ebp; sbb byte ptr [ebp - 0x677bf80], cl; call dword ptr [eax - 0x18]; 
0x0010b8b6: sbb dword ptr [eax + 0x17247c], eax; jne 0x10b960; call ecx; 
0x0012f476: sbb dword ptr [eax + 0x17c], edi; call dword ptr gs:[0x10]; 
0x001641fe: sbb dword ptr [eax + 0x500000a2], -0x73; cmp esp, 0x55; bnd call dword ptr [eax - 0x18]; 
0x00165843: sbb dword ptr [eax + 0x61], -7; call dword ptr [eax - 0x18]; 
0x00165843: sbb dword ptr [eax + 0x61], -7; call dword ptr [eax - 0x18]; ret 0xfef2; 
0x0019a144: sbb dword ptr [eax + eax], eax; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0017b17c: sbb dword ptr [eax - 0x47], -7; call dword ptr [edx + 0x6a]; 
0x00167133: sbb dword ptr [eax - 0x5c], 0; add byte ptr [eax - 0x73], dl; sub esp, 0x51; int1; call dword ptr [eax - 0x73]; 
0x0010e33f: sbb dword ptr [eax - 0x73], edx; or ecx, 0x48; stc; call dword ptr [eax - 0x18]; 
0x000fdac6: sbb dword ptr [eax - 7], ecx; call dword ptr [eax + 0x55]; 
0x00106b41: sbb dword ptr [eax - 7], ecx; call dword ptr [eax - 0x77]; 
0x000a35c3: sbb dword ptr [eax], -0x67; stc; call dword ptr [eax - 0x73]; 
0x0003eecc: sbb dword ptr [eax], 0x76; stc; call dword ptr [eax - 0x18]; 
0x0016ebac: sbb dword ptr [eax], eax; add byte ptr [ebx - 0x76e7dbbc], cl; xor al, 0x24; call dword ptr [eax + 0x10]; 
0x0009f4ac: sbb dword ptr [eax], eax; mov dword ptr [eax + 0x3bd0], 0; ret; 
0x000a08cd: sbb dword ptr [eax], eax; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0x3fc; jbe 0xa08e0; ret; 
0x000a0acd: sbb dword ptr [eax], eax; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0x50; jbe 0xa0ae0; ret; 
0x000a090d: sbb dword ptr [eax], eax; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0xffff; jbe 0xa0920; ret; 
0x000a08ac: sbb dword ptr [eax], eax; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x358], edx; ret; 
0x000a088c: sbb dword ptr [eax], eax; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x35c], edx; ret; 
0x000a093c: sbb dword ptr [eax], eax; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x394], edx; ret; 
0x000a0b6c: sbb dword ptr [eax], eax; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x3c34], edx; ret; 
0x0009f17d: sbb dword ptr [eax], eax; push ebx; mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0009f803: sbb dword ptr [eax], eax; push ebx; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000bad03: sbb dword ptr [eax], ecx; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0004a259: sbb dword ptr [eax], esi; stc; call dword ptr [eax - 0x18]; 
0x001a7e5d: sbb dword ptr [ebp + 3], eax; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00024bc1: sbb dword ptr [ebp - 0x1b797370], ecx; jmp dword ptr [ebp + 0x33]; 
0x001359b7: sbb dword ptr [ebp - 0x76f38a37], eax; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x00135a32: sbb dword ptr [ebp - 0x76f68a37], eax; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0013627b: sbb dword ptr [ebp - 0x76f78a37], eax; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x00135c26: sbb dword ptr [ebp - 0x76fa8a37], eax; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0012458c: sbb dword ptr [ebx + 0x59], -7; call dword ptr [eax + 0x6a]; 
0x00124235: sbb dword ptr [ebx + 0x59], -7; call dword ptr [eax - 1]; 
0x00060701: sbb dword ptr [ebx + 0x59], -7; call dword ptr [ebp + 0x50]; 
0x00080401: sbb dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x00121f86: sbb dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x0017504e: sbb dword ptr [ebx + 0x6808ec], eax; adc byte ptr [eax], al; add byte ptr [edi - 0x18], dl; ret; 
0x00055d76: sbb dword ptr [ebx + eax*4], eax; ret; 
0x00060a1b: sbb dword ptr [ebx], 0x32; stc; call dword ptr [esi + 0x6a]; 
0x00124455: sbb dword ptr [ecx + 0x2e], -7; call dword ptr [eax + 0x6a]; 
0x00178b43: sbb dword ptr [ecx + 0x65], -7; call dword ptr [eax + 0x6a]; 
0x000aa158: sbb dword ptr [ecx + eax - 0x72fc0000], 0xf6ad8c92; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a9448: sbb dword ptr [ecx + eax - 0x72fc0000], 0xf6bd0c92; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0013d6b8: sbb dword ptr [ecx + eax - 0x72ff0000], 0xf54a7c92; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a9488: sbb dword ptr [ecx + eax - 0x72ff0000], 0xf54a8c92; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x001b1353: sbb dword ptr [ecx - 0x7cfbe684], ecx; ret; 
0x00055d73: sbb dword ptr [ecx - 0x7cfbe68c], ecx; ret; 
0x00164bea: sbb dword ptr [ecx - 7], esp; call dword ptr [eax - 0x18]; 
0x00164bea: sbb dword ptr [ecx - 7], esp; call dword ptr [eax - 0x18]; dec esp; add bh, bh; jmp dword ptr [ebp - 0x75]; 
0x000fdac5: sbb dword ptr [ecx], 0x48; stc; call dword ptr [eax + 0x55]; 
0x00164be9: sbb dword ptr [ecx], 0x61; stc; call dword ptr [eax - 0x18]; 
0x00164be9: sbb dword ptr [ecx], 0x61; stc; call dword ptr [eax - 0x18]; dec esp; add bh, bh; jmp dword ptr [ebp - 0x75]; 
0x0009f4f9: sbb dword ptr [ecx], eax; add byte ptr [eax], al; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000b00bd: sbb dword ptr [ecx], ebp; ret; 
0x0017ca36: sbb dword ptr [ecx], edi; ret 0x1572; 
0x000bb580: sbb dword ptr [ecx], edx; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000916f2: sbb dword ptr [ecx], esi; idiv byte ptr [eax + 0xf0]; call dword ptr gs:[0x10]; 
0x00098abb: sbb dword ptr [ecx], esi; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x000bb2ca: sbb dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x000fdadc: sbb dword ptr [edi], 0x48; stc; call dword ptr [eax + 0x55]; 
0x00156ca3: sbb dword ptr [edi], 0x5e; stc; call dword ptr [eax - 0x73]; 
0x001618e3: sbb dword ptr [edi], 0x60; stc; call dword ptr [eax - 0x18]; 
0x001479a9: sbb dword ptr [edi], ecx; inc ebx; ret 0xc589; 
0x000272b1: sbb dword ptr [edi], ecx; mov bh, 0x97; cmp byte ptr [eax - 7], dh; jmp dword ptr [esi - 0x77]; 
0x00042d56: sbb dword ptr [edi], ecx; mov ebp, 0x1ff083c2; add eax, 1; pop ebx; ret; 
0x000bae9d: sbb dword ptr [edi], ecx; test dword ptr [esi + eax], edi; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000db8c3: sbb dword ptr [edx + edi*4 - 0xaf0017], 0x74; and al, 0x1c; call 0xda950; add esp, 0x18; pop ebx; ret; 
0x0010ebb5: sbb dword ptr [edx], -7; call dword ptr [eax - 0x73]; 
0x001aafb3: sbb dword ptr [edx], eax; add byte ptr [eax], al; mov eax, ecx; ret; 
0x0017a2a9: sbb dword ptr [esi + esi*4], -0xd; call dword ptr [eax - 0x73]; 
0x00152843: sbb dword ptr [esi - 0xc], edx; inc dword ptr [ebx - 0x2776eb3c]; pop ebx; pop esi; ret; 
0x000a6677: sbb dword ptr [esi], 0x44; stc; call dword ptr [eax - 0x18]; 
0x000baf03: sbb dword ptr [esi], eax; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0011ee76: sbb eax, -0x5e; stc; call dword ptr [eax - 0x18]; 
0x00174a0b: sbb eax, -1; add esp, 0xc; ret; 
0x000c0270: sbb eax, -1; mov byte ptr [eax], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000b7cf5: sbb eax, -1; pop ebx; ret; 
0x000b7586: sbb eax, -1; pop edi; pop ebx; ret; 
0x000c246d: sbb eax, -1; pop esi; pop ebx; ret; 
0x0011c27d: sbb eax, 0; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0011b15e: sbb eax, 0; pop ebx; pop esi; ret; 
0x00125dfa: sbb eax, 0x14; mov dword ptr [esp + 0x100c], ebx; xor ebx, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000612bd: sbb eax, 0x26b85300; add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x0004cfb2: sbb eax, 0x31000003; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0005ab5d: sbb eax, 0x434c481; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x000b98b7: sbb eax, 0x562850f; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000e95d2: sbb eax, 0x5b04c483; pop esi; ret; 
0x001927d9: sbb eax, 0x5b18c483; ret; 
0x00162c22: sbb eax, 0x5b1cc483; pop esi; pop edi; pop ebp; ret; 
0x00090fcd: sbb eax, 0x5b24c483; pop esi; ret; 
0x00174c26: sbb eax, 0x5b6cc483; pop esi; pop edi; pop ebp; ret; 
0x000baf5a: sbb eax, 0x5bf850f; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000b94ff: sbb eax, 0x5f000009; pop esi; pop ebx; ret; 
0x001643a3: sbb eax, 0x60; stc; call dword ptr [eax - 0x18]; 
0x001b2f67: sbb eax, 0x66000005; cmp eax, 0x840f0800; ret; 
0x0017a1fc: sbb eax, 0x810000fa; ret; 
0x0013d7fc: sbb eax, 0x810004c4; ret; 
0x001264fc: sbb eax, 0x81000637; ret; 
0x0008d0fc: sbb eax, 0x81000fcb; ret; 
0x0007a766: sbb eax, 0x83fffffd; jmp dword ptr [eax]; 
0x0017671f: sbb eax, 0x8900002c; ret; 
0x0011eec6: sbb eax, 0x8908ec83; ret; 
0x00026bf2: sbb eax, 0x893cd66b; ret; 
0x00111416: sbb eax, 0x8b056a50; jl 0x111441; adc byte ptr [ebp - 0x6b68079], cl; call dword ptr [eax - 0x73]; 
0x0016f60a: sbb eax, 0x8b0cec83; inc ebx; add al, 0x53; call dword ptr [eax + 0x10]; 
0x0016ba4f: sbb eax, 0x8bffec86; jl 0x16ba7a; sub byte ptr [ebp - 0x64a0b79], cl; call dword ptr [eax - 0x73]; 
0x000958ac: sbb eax, 0x8dffffff; xchg al, cl; xchg cl, bh; call dword ptr [eax - 0x73]; 
0x00085b4e: sbb eax, 0xa0c481; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x0009aec3: sbb eax, 0xb881f180; lock add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x001a7e58: sbb eax, 0xc381fffe; sbb dword ptr [ebp + 3], eax; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00197e75: sbb eax, 0xc381ffff; mov eax, 0x3000439; sbb al, 0x8b; jmp ebx; 
0x00197f0e: sbb eax, 0xc381ffff; pop ds; cmp dword ptr [eax + eax], eax; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0015037e: sbb eax, 0xc483fffe; adc byte ptr [ebx - 0x7af0fd08], al; ret; 
0x0019ce62: sbb eax, 0xc801ca01; call 0x189c1d; add ebx, 0x3f244; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198c42: sbb eax, 0xc801ca01; call 0x189c1d; add ebx, 0x42e64; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00060fe0: sbb eax, 0xc838b00; sbb al, byte ptr [eax]; add byte ptr [ebp + 0x314574c0], al; jmp dword ptr [esi - 0x70]; 
0x0008d0c2: sbb eax, 0xec83001b; or byte ptr [ebx - 0xe7dbbc], cl; je 0x8d0f3; sbb al, 0x85; ror byte ptr [edi], 0x48; ret 0xff50; 
0x000baf57: sbb eax, 0xf1d7f8d; test dword ptr [edi + 0x5f000005], edi; pop esi; pop ebx; ret; 
0x0003ca12: sbb eax, dword ptr [0x245c8b00]; and byte ptr [ecx + 8], bh; mov edx, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x00199f4b: sbb eax, dword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000ea147: sbb eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0005079c: sbb eax, dword ptr [eax]; add byte ptr [ebx - 0x6bf0fe01], al; ret 0xeb39; 
0x0004f477: sbb eax, dword ptr [eax]; add byte ptr [ecx - 0x76c7dbbc], cl; ret 0x448b; 
0x0005016b: sbb eax, dword ptr [eax]; add byte ptr [ecx - 0x76c7dbbc], cl; ret 0x45e9; 
0x00032533: sbb eax, dword ptr [eax]; add dh, dh; ret 0xf03; 
0x0008cc9c: sbb eax, dword ptr [eax]; mov eax, dword ptr [eax + 0xe6c]; ret; 
0x0008e94d: sbb eax, dword ptr [eax]; mov eax, dword ptr [esp + 4]; cmp dword ptr [eax], 1; je 0x8e960; ret; 
0x0008e8cc: sbb eax, dword ptr [eax]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x290], edx; ret; 
0x0008e8ec: sbb eax, dword ptr [eax]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x294], edx; ret; 
0x0008e90c: sbb eax, dword ptr [eax]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x298], edx; ret; 
0x0008e92c: sbb eax, dword ptr [eax]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x29c], edx; ret; 
0x00120a72: sbb eax, dword ptr [ebx + 0x5e5b74c4]; ret; 
0x001a9574: sbb eax, dword ptr [ebx - 0x7bf0d207]; ret 0; 
0x0017b844: sbb eax, dword ptr [ebx - 0x95fb14]; push ebp; push esi; call edi; 
0x000980a4: sbb eax, dword ptr [ecx + 8]; inc eax; xor eax, eax; ret; 
0x0012c14a: sbb eax, dword ptr [ecx]; add al, ch; push ds; dec ecx; cld; call dword ptr [eax - 0x73]; 
0x001aa7c1: sbb eax, dword ptr [ecx]; add byte ptr [eax], al; lea eax, [edi + 3]; pop edi; ret; 
0x00087700: sbb eax, eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x00060b8c: sbb eax, eax; add esp, 0x1c; ret; 
0x00192de6: sbb eax, eax; add esp, 0x2c; ret; 
0x00025859: sbb eax, eax; add esp, 0xc; ret; 
0x00061296: sbb eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x00053713: sbb eax, eax; and eax, 2; sub eax, 1; ret; 
0x00178489: sbb eax, eax; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x1784a7; add esp, 0x1c; ret; 
0x00053691: sbb eax, eax; neg eax; pop esi; pop edi; ret; 
0x0009ceba: sbb eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00134b21: sbb eax, eax; ret; 
0x000c21bd: sbb eax, eax; sbb eax, -1; pop ebx; ret; 
0x000c246b: sbb eax, eax; sbb eax, -1; pop esi; pop ebx; ret; 
0x00194c57: sbb ebp, dword ptr [ebx + 4]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00198d57: sbb ebp, dword ptr [esi]; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000a18d6: sbb ebp, eax; sbb al, bh; inc dword ptr [ebx - 0x7972f33c]; in al, dx; sbb ah, dh; call dword ptr [eax + 0x57]; 
0x001815e3: sbb ebp, edx; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000bb31a: sbb ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x000fbbab: sbb ebx, ebp; ret; 
0x001214fb: sbb ebx, ecx; adc dword ptr [eax], eax; push ebx; mov eax, 0xa; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00043091: sbb ebx, edx; pop ebx; setb al; ret; 
0x00133ed7: sbb ecx, dword ptr [ebp - 0x6d47f6ec]; add byte ptr [eax], al; add byte ptr [ebx - 0x4ff63], cl; dec dword ptr [ebx - 0x50773]; jmp dword ptr [ebp - 1]; 
0x000b985a: sbb ecx, dword ptr [ebp - 0x7af0e481]; mov esp, 0x5f000005; pop esi; pop ebx; ret; 
0x000a03d7: sbb ecx, dword ptr [ebx + 0x244c8b18]; mov esi, dword ptr fs:[esp + 4]; mov eax, 0x199; call dword ptr gs:[0x10]; 
0x0005a089: sbb ecx, dword ptr [ebx - 0x76e3db8c]; ret 0xc801; 
0x000b985d: sbb ecx, dword ptr [edi]; test dword ptr [ebp + eax + 0x5e5f0000], edi; pop ebx; ret; 
0x00076c1e: sbb ecx, ebp; pop esp; ret 0xffff; 
0x0011b15c: sbb ecx, edx; sbb eax, 0; pop ebx; pop esi; ret; 
0x0014b0fa: sbb edi, dword ptr [0x8b65000f]; adc eax, 0; mov eax, dword ptr [eax + 0x1c8]; mov eax, dword ptr [edx + eax]; ret; 
0x000a01db: sbb edi, dword ptr [eax + 0x106]; call dword ptr gs:[0x10]; 
0x000a011a: sbb edi, dword ptr [eax + 0x107]; mov ebx, dword ptr [ebp]; call dword ptr gs:[0x10]; 
0x000a024f: sbb edi, dword ptr [eax + 0x198]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000fb5ec: sbb edi, dword ptr [eax + 0x1d]; call dword ptr gs:[0x10]; 
0x0013f5fa: sbb edi, eax; str word ptr [ebx + 0xc480]; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x0013fedc: sbb edi, edi; inc dword ptr [ebp - 0x768f8740]; ret; 
0x001982fe: sbb edi, edi; inc dword ptr [ecx + 0x4352fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00198265: sbb edi, edi; inc dword ptr [ecx + 0x435c8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00198115: sbb edi, edi; inc dword ptr [ecx + 0x43718c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019805e: sbb edi, edi; inc dword ptr [ecx + 0x437cfc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000d9b14: sbb edi, edi; mov eax, ebx; pop ebx; pop esi; ret; 
0x00079357: sbb edx, dword ptr [eax - 0x73]; xchg byte ptr [eax], cl; jp 0x79357; call dword ptr [eax - 0x18]; 
0x00157812: sbb edx, dword ptr [eax - 0x73]; xchg byte ptr [ebx + esi*4], bh; stc; call dword ptr [eax - 0x18]; 
0x0005ba55: sbb edx, dword ptr [eax - 0x73]; xchg dword ptr [eax], ecx; jp 0x5ba55; call dword ptr [eax - 0x18]; 
0x00168b71: sbb edx, dword ptr [eax - 0x73]; xchg dword ptr [ebx + 0x62], ebp; stc; call dword ptr [eax + 0x6a]; 
0x0003be3c: sbb edx, ebx; pop ebx; mov eax, edx; shr eax, 0x1f; ret; 
0x0019ae5b: sbb edx, edi; jmp dword ptr [esi - 0x70]; 
0x00141c88: sbb edx, edx; mov eax, edx; pop ebx; pop esi; ret; 
0x00077ef1: sbb esi, dword ptr [ecx - 0x3b7c0006]; adc byte ptr [ebx - 0x4f76b], cl; inc dword ptr [ebp - 0x177bf040]; add al, byte ptr [eax]; add byte ptr [ebx - 0x51773], cl; call ecx; 
0x00060a1c: sbb esi, dword ptr [edx]; stc; call dword ptr [esi + 0x6a]; 
0x0015267b: sbb esi, ebp; dec dword ptr [ebp - 0x64f2779]; call dword ptr [eax - 0x73]; 
0x001708b5: sbb esi, ebp; inc dword ptr [ebx - 0x137cef3c]; or byte ptr [ebx + 0x86a0447], cl; push edi; call dword ptr [eax + 0x18]; 
0x0009ff4a: sbb esi, esp; call dword ptr [eax - 0x73]; 
0x0015d592: sbb esp, -0x30; int1; call dword ptr [eax + 0x6a]; 
0x00185aba: sbb esp, -0x46; stc; call dword ptr [eax - 0x18]; 
0x00153dfe: sbb esp, -0x4f; stc; call dword ptr [eax - 0x73]; 
0x0012d4ef: sbb esp, -0x5c; stc; call dword ptr [eax - 0x18]; 
0x0010ef64: sbb esp, 0x2c; stc; call dword ptr [eax - 0x18]; 
0x0016ba6c: sbb esp, dword ptr [ebx - 7]; call dword ptr [eax - 0x18]; 
0x000a18f4: sbb esp, esi; call dword ptr [eax + 0x57]; 
0x0017baec: scasb al, byte ptr es:[edi]; add byte ptr [eax], al; add byte ptr [ebx - 0x2f76eb3c], al; pop ebx; pop esi; ret; 
0x00028e4c: scasb al, byte ptr es:[edi]; add byte ptr [eax], al; add byte ptr [ebx - 0x72f7dbac], cl; inc ebx; add al, 0x39; ret 0x9173; 
0x0003c7ed: scasb al, byte ptr es:[edi]; add byte ptr [eax], al; add byte ptr [esi + 8], bh; lea edx, [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x0003c890: scasb al, byte ptr es:[edi]; add byte ptr [eax], al; add byte ptr [esi + 8], bh; mov edx, ebp; call dword ptr gs:[0x10]; 
0x001ab9fe: scasb al, byte ptr es:[edi]; add byte ptr [eax], al; add dh, dh; ret 0xf40; 
0x00027564: scasb al, byte ptr es:[edi]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [ebx + 0x29], bl; stc; call dword ptr [eax - 0x18]; 
0x0005e070: scasb al, byte ptr es:[edi]; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; sub dword ptr [ecx + 0x31], -7; call dword ptr [eax - 0x18]; 
0x0019cc57: scasb al, byte ptr es:[edi]; clc; call 0x189c1d; add ebx, 0x3f292; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019bc87: scasb al, byte ptr es:[edi]; clc; call 0x189c1d; add ebx, 0x400a2; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019aab1: scasb al, byte ptr es:[edi]; clc; call 0x189c1d; add ebx, 0x40ff8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198951: scasb al, byte ptr es:[edi]; clc; call 0x189c1d; add ebx, 0x42ed8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001969b1: scasb al, byte ptr es:[edi]; clc; call 0x189c1d; add ebx, 0x44bf8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00179035: scasb al, byte ptr es:[edi]; pop esp; iretd; dec dword ptr [ebp - 0xcf5b34a]; call dword ptr [ebp - 0x73]; 
0x000c31ee: scasb al, byte ptr es:[edi]; push ebp; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0012bbdb: scasb al, byte ptr es:[edi]; push ebx; stc; call dword ptr [ebx + 0x57]; 
0x0012bd3e: scasb al, byte ptr es:[edi]; push ebx; stc; call dword ptr [edi + 0x50]; 
0x00186cbe: scasb al, byte ptr es:[edi]; ret; 
0x0014e004: scasb al, byte ptr es:[edi]; stc; call dword ptr [eax - 0x18]; 
0x0014b6e0: scasb al, byte ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x0007923e: scasb al, byte ptr es:[edi]; sti; jmp dword ptr [esi - 0x70]; 
0x00051741: scasd eax, dword ptr es:[edi]; aad 1; ret 0xd889; 
0x00197883: scasd eax, dword ptr es:[edi]; aas; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000c21da: scasd eax, dword ptr es:[edi]; adc byte ptr [eax], al; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; add esi, ecx; jmp ebx; 
0x00092d11: scasd eax, dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [ebx + 2], bh; mov esi, 8; add ecx, 0x474; call dword ptr gs:[0x10]; 
0x0009db25: scasd eax, dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [ecx - 0x76d7dbb4], cl; retf 0x4c8b; and al, 0x1c; call dword ptr gs:[0x10]; 
0x00093f2e: scasd eax, dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [esi + 8], bh; call dword ptr gs:[0x10]; 
0x0005e04b: scasd eax, dword ptr es:[edi]; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [ecx + esi - 7], bh; call dword ptr [eax - 0x18]; 
0x00199903: scasd eax, dword ptr es:[edi]; and dword ptr [eax + eax], eax; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013843d: scasd eax, dword ptr es:[edi]; cmp dword ptr [eax], eax; add byte ptr [ebx + 0x57500cc4], al; push 0x2000003; call dword ptr [ebx + 0x14]; 
0x00158285: scasd eax, dword ptr es:[edi]; in al, dx; jmp dword ptr [ebp - 0x75]; 
0x00165e4d: scasd eax, dword ptr es:[edi]; jle 0x165e4d; jmp dword ptr [esi - 0x70]; 
0x00041711: scasd eax, dword ptr es:[edi]; lds eax, ptr [ecx]; fcom dword ptr [eax - 0x75]; inc esp; and al, 0x28; call eax; 
0x0002b7bd: scasd eax, dword ptr es:[edi]; mov byte ptr [eax], al; add byte ptr [ebx - 0x72c3db8c], cl; xchg byte ptr [eax + 0x72], cl; stc; call dword ptr [eax - 0x73]; 
0x000417fe: scasd eax, dword ptr es:[edi]; mov byte ptr [ecx], 0xf8; push eax; mov eax, dword ptr [esp + 0x28]; call eax; 
0x00155713: scasd eax, dword ptr es:[edi]; pop ebp; stc; call dword ptr [eax + 0x53]; 
0x00196303: scasd eax, dword ptr es:[edi]; push edx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019a403: scasd eax, dword ptr es:[edi]; push ss; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00092b67: scasd eax, dword ptr es:[edi]; ret 0x1a; 
0x0004123c: scasd eax, dword ptr es:[edi]; ret 0x5750; 
0x0003a332: scasd eax, dword ptr es:[edi]; ret 0x7c8b; 
0x000410ec: scasd eax, dword ptr es:[edi]; ret 0x8b50; 
0x000c4eed: scasd eax, dword ptr es:[edi]; ret 0x948b; 
0x00082f37: scasd eax, dword ptr es:[edi]; ret 0xbe0f; 
0x0015fc9d: scasd eax, dword ptr es:[edi]; ret 0xffff; 
0x000417ef: scasd eax, dword ptr es:[edi]; ret; 
0x00135a6d: scasd eax, dword ptr es:[edi]; sar eax, cl; jmp dword ptr [ebp - 0x75]; 
0x00053690: scasd eax, dword ptr es:[edi]; sbb eax, eax; neg eax; pop esi; pop edi; ret; 
0x0014f71a: scasd eax, dword ptr es:[edi]; stc; call dword ptr [eax - 0x18]; 
0x0014dd55: scasd eax, dword ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x000b9f93: scasd eax, dword ptr es:[edi]; sub eax, 0xc030011; cdq; jmp ecx; 
0x0008e5f8: setae al; ret; 
0x0004303f: setb al; ret; 
0x000dece2: setb dl; add edx, 0x16d; mov eax, edx; ret; 
0x00135b57: setb dl; mov eax, edx; pop ebx; pop esi; ret; 
0x0003465b: setbe al; ret; 
0x0010b4a9: sete al; add esp, 0x2c; movzx eax, al; ret; 
0x0009c303: sete al; add esp, 0xc; movzx eax, al; lea eax, [eax + eax + 2]; ret; 
0x00053445: sete al; add esp, 0xc; movzx eax, al; ret; 
0x00157d84: sete al; add esp, 0xc; ret; 
0x0009c2f1: sete al; movzx eax, al; add eax, 2; add esp, 0xc; ret; 
0x00123648: sete al; movzx eax, al; neg eax; add esp, 0xc; ret; 
0x000941bc: sete al; movzx eax, al; ret; 
0x0009c1d2: sete al; movzx eax, al; sub eax, 2; add esp, 0xc; ret; 
0x0014efb5: sete al; pop ebx; movzx eax, al; ret; 
0x0003d394: sete al; ret; 
0x00189db5: sete dl; mov dword ptr [ebx], edx; add esp, 8; pop ebx; ret; 
0x0012e37d: setg al; pop esi; pop edi; ret; 
0x0010cc4c: setg dl; shr eax, 0x1f; add esp, 8; or eax, edx; pop ebx; ret; 
0x00043020: setle al; ret; 
0x0012ed49: setne al; add esp, 0x1c; movzx eax, al; neg eax; ret; 
0x00172bf6: setne al; add esp, 0x1c; movzx eax, al; ret; 
0x0012ed8a: setne al; add esp, 0x2c; movzx eax, al; neg eax; ret; 
0x000fd3b9: setne al; add esp, 4; add eax, eax; pop ebx; pop esi; ret; 
0x001720ae: setne al; add esp, 4; movzx eax, al; pop ebx; pop esi; ret; 
0x00088ca1: setne al; add esp, 8; movzx eax, al; pop ebx; neg eax; ret; 
0x00170f17: setne al; add esp, 8; movzx eax, al; pop ebx; ret; 
0x00172145: setne al; movzx eax, al; add esp, 4; pop ebx; pop esi; ret; 
0x0012664b: setne al; movzx eax, al; add esp, 8; pop ebx; ret; 
0x0015bed9: setne al; movzx eax, al; neg eax; ret; 
0x0008ec62: setne al; movzx eax, al; pop ebx; ret; 
0x0003d21f: setne al; movzx eax, al; ret; 
0x001293e7: setne al; pop edi; movzx eax, al; ret; 
0x00126c0f: setne al; pop esi; pop edi; movzx eax, al; ret; 
0x000fb273: setne al; ret; 
0x0009aa85: setne al; shl eax, 7; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x00098477: setne cl; shl ecx, 7; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0017147f: setne dl; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0008681f: setne dl; mov eax, edx; ret; 
0x0019cc56: sfence; call 0x189c1d; add ebx, 0x3f292; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019bc86: sfence; call 0x189c1d; add ebx, 0x400a2; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019aab0: sfence; call 0x189c1d; add ebx, 0x40ff8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198950: sfence; call 0x189c1d; add ebx, 0x42ed8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001969b0: sfence; call 0x189c1d; add ebx, 0x44bf8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001acdfc: shl byte ptr [0xf0f0f0f], 1; imul eax, eax, 0x1010101; shr eax, 0x18; ret; 
0x0005df9a: shl byte ptr [eax - 3], cl; dec dword ptr [ebx - 0x8b4b]; dec dword ptr [ebp - 0x684677a]; call dword ptr [eax - 0x73]; 
0x000b0076: shl byte ptr [eax], 0x5f; pop esi; ret; 
0x000bd600: shl byte ptr [eax], 0xe8; sub al, dh; or al, 0; add ecx, 0x10f96d; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x001445b5: shl byte ptr [ebx], 0x89; loope 0x144543; ret 0x25; 
0x0013be11: shl byte ptr [ecx + edi], 0xd0; jae 0x13be20; cmp dword ptr [eax + 4], ecx; jne 0x13be10; mov eax, dword ptr [eax + 0x18]; ret; 
0x000ba9e2: shl byte ptr [ecx + edx], 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00193a59: shl byte ptr [ecx - 1], 0xff; add ebx, 0x47953; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00138f24: shl byte ptr [edi - 0x17af0007], 1; inc edx; mov cl, 0xef; jmp dword ptr [esi - 0x70]; 
0x001642c4: shl byte ptr [edx - 0x72b00000], 0x83; or al, 0x50; int1; call dword ptr [eax - 0x73]; 
0x0014ef8c: shl byte ptr [esi + 0x39], 0x5a; add dh, byte ptr [ebp + eax + 0x5b]; ret; 
0x001932f3: shl byte ptr [esi + 0xf], 0x70; rol byte ptr [eax], 0xf7; ret 0xf; 
0x001a5e91: shl byte ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x000c1756: shl byte ptr [esi + 0xf], 1; xlatb; ret 0xc085; 
0x001a6d6c: shl byte ptr [esi + 0xf], cl; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x00043311: shl byte ptr [esi - 0x7b], 0xd2; mov edx, 0x10; cmove eax, edx; ret; 
0x0009c139: shl ch, cl; jmp dword ptr [ebp - 0x5d]; 
0x000b93a1: shl dword ptr [eax + 0x3001139], 0xc; cdq; jmp ecx; 
0x001ab1f5: shl dword ptr [ecx], 0xd0; test eax, eax; jne 0x1aae20; xor eax, eax; ret; 
0x000a5337: shl dword ptr [ecx], 1; ret 0x1a8b; 
0x000c18d5: shl dword ptr [ecx], 1; retf 0xd285; je 0xc18b0; bsr ecx, edx; add eax, ecx; ret; 
0x000b9ead: shl dword ptr [edi + ebp], 0x11; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000c175e: shl dword ptr [esi + 0xf], 0xd7; les eax, ptr [ebp - 0xa7af040]; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x001ab1f1: shl dword ptr [esi + 0xf], 0xd7; shl dword ptr [ecx], 0xd0; test eax, eax; jne 0x1aae20; xor eax, eax; ret; 
0x001a6535: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x2c73; 
0x001a6ef6: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3273; 
0x001a6520: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3e73; 
0x001a6edc: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x4c73; 
0x001a650b: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x5073; 
0x001a64f6: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6273; 
0x001a6ec2: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6673; 
0x001a65c2: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x001a6e1c: shl dword ptr [esi + 0xf], 1; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x000c1395: shl dword ptr [esi + 0xf], 1; xlatb; ret 0xc085; 
0x001a6ccc: shl dword ptr [esi + 0xf], cl; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0010bd1d: shl eax, 2; push eax; call 0x231a8; add esp, 0x18; pop ebx; ret; 
0x00141fd1: shl eax, 4; lea eax, [edx + eax + 8]; pop ebx; ret; 
0x0009739a: shl eax, 4; pop edi; pop ebp; ret; 
0x00188e26: shl eax, 5; lea eax, [eax + edx + 0x5c]; ret; 
0x0009aa88: shl eax, 7; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x000605a8: shl eax, 8; and eax, 0x100; or eax, 7; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x0003d166: shl eax, cl; or dword ptr [edx + ebx*4], eax; xor eax, eax; pop ebx; ret; 
0x00042870: shl eax, cl; ret; 
0x0003d217: shl eax, cl; sar ecx, 5; and eax, dword ptr [edx + ecx*4]; setne al; movzx eax, al; ret; 
0x0009c145: shl ebp, 1; call dword ptr [ecx + 0x50]; 
0x00053e2f: shl ebx, cl; mov dword ptr [edi], ebx; pop ebx; pop esi; pop edi; ret; 
0x00189c8b: shl ebx, cl; sar eax, 5; or dword ptr [edx + eax*4], ebx; xor eax, eax; pop ebx; ret; 
0x0014b428: shl ecx, 4; add esp, 8; lea edx, [eax + ecx]; pop ebx; mov eax, edx; ret; 
0x0009847a: shl ecx, 7; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0014212d: shl edx, 0x10; or eax, edx; bswap eax; mov dword ptr [ecx], eax; mov eax, ecx; ret 4; 
0x00098033: shl edx, 0x1c; and eax, 0xcfffffff; or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x00055160: shl edx, 0x1f; or eax, edx; mov dword ptr [esp + 4], eax; fld qword ptr [esp]; add esp, 0xc; ret; 
0x00055197: shl edx, 0x1f; or eax, edx; mov dword ptr [esp], eax; fld dword ptr [esp]; add esp, 4; ret; 
0x00141d62: shl edx, 4; add edx, 8; cmp dword ptr [esp + 8], 0x80; cmovb eax, edx; ret; 
0x00142153: shl edx, 8; or eax, edx; bswap eax; mov dword ptr [ecx], eax; mov eax, ecx; ret 4; 
0x000ba9bf: shr al, 0x6c; or al, 0; add ecx, 0x1124db; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x001239a0: shr al, 0x9a; mov eax, 0xf883fffc; push dword ptr [ebp + esi*2 - 0x77]; ret; 
0x000b937f: shr al, 0xac; or byte ptr [0xbbc18100], cl; cmp dword ptr [ecx], edx; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0013fed9: shr al, 0xc1; sbb edi, edi; inc dword ptr [ebp - 0x768f8740]; ret; 
0x000c095f: shr al, 0xcc; xchg edx, eax; or al, 0; add ecx, 0x10c70f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008684b: shr al, 2; and eax, 1; xor eax, 1; ret; 
0x0008686b: shr al, 3; and eax, 1; xor eax, 1; ret; 
0x000875db: shr al, 4; and eax, 1; ret; 
0x000875fb: shr al, 5; and eax, 1; ret; 
0x0013be9f: shr al, 6; and eax, 1; pop ebx; ret; 
0x0017cdc0: shr al, cl; cmp cl, byte ptr [edi]; cld; jmp dword ptr [esi - 0x70]; 
0x000bd5b2: shr al, cl; jns 0xbd57c; or al, 0; add ecx, 0x10f9bc; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c08b2: shr al, cl; jns 0xc0849; or al, 0; add ecx, 0x10c73c; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba88b: shr al, cl; mov al, byte ptr [0x81000cf3]; ror dword ptr [edi + 0x3001125], 0xc; xchg ecx, eax; jmp ecx; 
0x000c0878: shr al, cl; mov bl, 0x93; or al, 0; add ecx, 0x10c776; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bd578: shr al, cl; mov bl, 0xc6; or al, 0; add ecx, 0x10f9f6; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x001259ee: shr bl, 0xef; jmp dword ptr [esi - 0x70]; 
0x00147f0f: shr bl, cl; add dword ptr [ebx + 0x74ff0cec], 0x24; and al, ch; ret 0xa6; 
0x000aa9b9: shr bl, cl; or ecx, dword ptr [ebp - 0x7cffd98c]; ret 0x3901; 
0x00196e47: shr byte ptr [0xc381ffff], cl; in eax, 0x49; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00104fd8: shr byte ptr [eax - 0x577bf0fa], 1; adc byte ptr [eax], al; add dh, dh; ret 0xf02; 
0x0016eaca: shr byte ptr [eax], 0xff; jo 0x16eae3; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x001ace75: shr byte ptr [ecx - 0x40], 1; add dword ptr [ecx], eax; add dword ptr [ecx], eax; shr eax, 0x18; ret; 
0x000c15b2: shr byte ptr [ecx], 0xc2; jbe 0xc15f0; add eax, edi; pop edi; ret; 
0x000c15c5: shr byte ptr [ecx], 0xc2; jbe 0xc15f0; lea eax, [edi + eax + 0x10]; pop edi; ret; 
0x000c15d5: shr byte ptr [ecx], 0xc2; jbe 0xc15f0; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x000c15e5: shr byte ptr [ecx], 0xc2; jbe 0xc15f0; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x0004a0c9: shr byte ptr [ecx], 1; ret 0x8d52; 
0x00134c37: shr byte ptr [ecx], 1; ret 0xe801; 
0x000a87ff: shr byte ptr [ecx], 1; ret 0xf001; 
0x000c9434: shr byte ptr [ecx], 1; ret; 
0x00073ad8: shr byte ptr [ecx], cl; fdivr dword ptr [ecx]; ret 0x8f0f; 
0x0004a332: shr byte ptr [edi], cl; stc; call dword ptr [eax - 0x18]; 
0x00130e81: shr byte ptr [edx], 0x8d; xchg esp, edi; movsd dword ptr es:[edi], dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x0004291a: shr byte ptr [esi], cl; lea esi, [esi]; mov eax, 1; xor edx, edx; pop ebx; ret; 
0x000781e8: shr cl, 1; push edx; ret 0xffff; 
0x000aef61: shr cl, 1; ret 0xffeb; 
0x0006ad05: shr cl, 8; fdivr st(7); dec dword ptr [ebx - 0x58f7b]; jmp dword ptr [ebp - 0x75]; 
0x001079fe: shr cl, 8; idiv bh; jmp dword ptr [ebp - 0x5f]; 
0x0004ce5d: shr cl, cl; ret 0xfff2; 
0x000bd608: shr dword ptr [ebp - 7], 0x10; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000ba9f8: shr dword ptr [ecx + 0x3001124], 0xc; cdq; jmp ecx; 
0x000cb1c5: shr dword ptr [ecx], cl; jl 0xcb1ed; and cl, ch; ret 3; 
0x000a9ac0: shr dword ptr [ecx], cl; ret; 
0x000ba8b2: shr dword ptr [edi + 0x25], 0x11; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b9f92: shr dword ptr [edi + 0x300112d], 0xc; cdq; jmp ecx; 
0x00039e2a: shr dword ptr [esi], 1; stc; call dword ptr [eax - 0x18]; 
0x00095ab6: shr eax, 0x13; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x001ace08: shr eax, 0x18; ret; 
0x0010cc4f: shr eax, 0x1f; add esp, 8; or eax, edx; pop ebx; ret; 
0x00097f2e: shr eax, 0x1f; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0003b07e: shr eax, 0x1f; pop edi; ret; 
0x0003adcb: shr eax, 0x1f; ret; 
0x0003bae0: shr eax, 0x1f; shr ecx, 0x10; or eax, ecx; ret; 
0x0008e96c: shr eax, 0xb; and eax, 1; mov dword ptr [edx + 0x1ac8], eax; ret; 
0x00171a25: shr eax, 0xd5; ret 0xfffc; 
0x0009118f: shr eax, 1; je 0x911a9; xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x000916ef: shr eax, 1; je 0x9170c; xor esi, esi; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0009aa1e: shr eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0012190c: shr eax, 1; out dx, al; ret; 
0x00141fa7: shr eax, 1; ret; 
0x00053628: shr eax, 2; lea eax, [eax + eax*8 + 6]; call 0x535f0; jmp eax; 
0x00091484: shr eax, 3; je 0x914b8; mov eax, edi; call dword ptr gs:[0x10]; 
0x0014156f: shr eax, 3; sub eax, 1; mov byte ptr [edx + 1], al; mov eax, 2; ret; 
0x000a08f0: shr eax, 4; add eax, 1; mov dword ptr [edx + 0x388], eax; ret; 
0x001acdf8: shr eax, 4; add eax, edx; and eax, 0xf0f0f0f; imul eax, eax, 0x1010101; shr eax, 0x18; ret; 
0x001423d4: shr eax, 8; and ecx, 0xc0000000; shr edx, 0x10; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x0012f421: shr eax, cl; and eax, 3; ret; 
0x0004297c: shr eax, cl; ret; 
0x000c0908: shr ebp, 0xc6; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00041936: shr ebx, 0x10; and ebx, 0x3ff; xor eax, ebx; pop ebx; ret; 
0x00165fb5: shr ebx, 1; jmp dword ptr [ebp - 0x75]; 
0x000361a9: shr ebx, cl; adc ecx, dword ptr [ebp - 0x7affd98c]; sal byte ptr [ebp + 0x2a], 0x83; ret; 
0x00054e2f: shr ebx, cl; mov dword ptr [edi], ebx; pop ebx; pop esi; pop edi; ret; 
0x0003bae3: shr ecx, 0x10; or eax, ecx; ret; 
0x0007a764: shr ecx, 1; sbb eax, 0x83fffffd; jmp dword ptr [eax]; 
0x0010ccab: shr ecx, 2; rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x0010cc23: shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x0013c0e4: shr edi, 1; call dword ptr [edx - 0x3f]; 
0x001423dd: shr edx, 0x10; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x001420c2: shr edx, 0x18; movzx eax, ax; and ecx, 0xc0000000; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x00039d57: shr edx, 0x18; xor eax, edx; movzx edx, byte ptr [ecx]; test dl, dl; jne 0x39d40; ret; 
0x000429e6: shr edx, cl; test cl, 0x20; je 0x429f1; mov eax, edx; xor edx, edx; ret; 
0x001287bf: shrd eax, edx, 0xc; xor al, al; or eax, ecx; ret; 
0x00123ba0: shufps xmm0, xmmword ptr [eax], 0; mov eax, ebx; add esp, 4; pop ebx; pop esi; ret; 
0x00077f8e: sidt [ecx - 0x4fb73]; call dword ptr [eax + 0x50]; 
0x00078cb0: sidt [ecx - 0x51373]; call dword ptr [eax + 0x50]; 
0x00095997: sldt word ptr [0x1a947b]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x2a4], edx; ret; 
0x00094817: sldt word ptr [0x1aa5fb]; mov eax, dword ptr [eax + 0x3af4]; ret; 
0x0008e927: sldt word ptr [0x1b04eb]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x29c], edx; ret; 
0x0008e907: sldt word ptr [0x1b050b]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x298], edx; ret; 
0x0008e8e7: sldt word ptr [0x1b052b]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x294], edx; ret; 
0x0008e8c7: sldt word ptr [0x1b054b]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x290], edx; ret; 
0x0008cc97: sldt word ptr [0x1b217b]; mov eax, dword ptr [eax + 0xe6c]; ret; 
0x0014c1b1: sldt word ptr [eax]; add byte ptr [ebx + 0xc8b10c4], al; and al, 0x39; ror byte ptr [edi], 1; dec edi; ret 0x4189; 
0x001146b1: sldt word ptr [eax]; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x0015322b: sldt word ptr [eax]; add byte ptr [ecx - 0x761c761f], cl; ret 0x25; 
0x0012879b: sldt word ptr [eax]; and eax, 0xfffff000; or eax, edx; ret; 
0x001aa4a4: sldt word ptr [eax]; jne 0x1aa2a0; xor eax, eax; pop edi; ret; 
0x0014152e: sldt word ptr [ebx + 0x74ff14ec]; and al, 0x1c; call 0x231a0; add esp, 0x18; pop ebx; ret; 
0x0008e947: sldt word ptr [ecx + 0x1b04cbc2]; add byte ptr [ebx - 0x7cfbdbbc], cl; cmp byte ptr [ecx], al; je 0x8e960; ret; 
0x00093c2a: stc; aas; stc; call dword ptr [eax - 0x18]; 
0x000bd581: stc; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0007fb20: stc; add al, byte ptr [ebp - 0x7cf48740]; ret 0x8304; 
0x0007361b: stc; add bh, byte ptr [ecx]; fnstenv [ecx + ebx - 0x7d]; in al, dx; or byte ptr [ebx - 0x4ff63], cl; call dword ptr [edx + 0x50]; 
0x000c2ed1: stc; add byte ptr [ecx + eax + 0x40], dh; sub eax, dword ptr [esp + 4]; ret; 
0x001a767d: stc; add byte ptr [edi], cl; test ah, cl; add dword ptr [eax], eax; add byte ptr [ebx - 0x7bf0fb03], al; ret; 
0x001a5f49: stc; add byte ptr [edi], cl; test byte ptr [edi - 0x7d000000], cl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x0015c7cd: stc; add dh, byte ptr [edi + ecx - 0x77]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x00081d1b: stc; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x00041024: stc; add dword ptr [ebp + eax - 0x18], esi; ret; 
0x0012d59d: stc; add dword ptr [edi + 0x2f], edi; add esp, 8; pop ebx; ret; 
0x0003ed51: stc; add dword ptr [edi + 0x74], edi; sub esp, 8; push 0; push edx; call eax; 
0x00175ff7: stc; add dword ptr [edi], ecx; test byte ptr [ecx - 0x7d000000], ah; rcr byte ptr [ebx], 0x89; loope 0x175f8e; ret 0x25; 
0x0010cda2: stc; add ecx, 0x150; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x0010cc1f: stc; add ecx, 0x4c; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x00170b82: stc; add esi, dword ptr [esi + 0xa]; mov eax, 2; pop ebx; pop esi; ret; 
0x0003dc2f: stc; and al, 0x75; fmul qword ptr [ecx + 0x5f5e5bd8]; ret; 
0x00124b31: stc; call dword ptr [eax + 0x50]; 
0x001479e8: stc; call dword ptr [eax + 0x51]; 
0x000234db: stc; call dword ptr [eax + 0x52]; 
0x00039bdc: stc; call dword ptr [eax + 0x53]; 
0x000ac5bf: stc; call dword ptr [eax + 0x55]; 
0x000301d3: stc; call dword ptr [eax + 0x56]; 
0x000577ed: stc; call dword ptr [eax + 0x57]; 
0x0002889d: stc; call dword ptr [eax + 0x68]; 
0x00024801: stc; call dword ptr [eax + 0x6a]; 
0x0016a255: stc; call dword ptr [eax + 0x6a]; add ch, al; push ecx; ret; 
0x0016e375: stc; call dword ptr [eax + 0x6a]; pop es; call 0x1565b0; add esp, 0x1c; ret; 
0x0016d095: stc; call dword ptr [eax + 0x6a]; push es; call 0x1565b0; add esp, 0x1c; ret; 
0x00106e39: stc; call dword ptr [eax - 0x17]; 
0x00024828: stc; call dword ptr [eax - 0x18]; 
0x00153c31: stc; call dword ptr [eax - 0x18]; aaa; add al, 0xee; jmp dword ptr [esi - 0x70]; 
0x000a6066: stc; call dword ptr [eax - 0x18]; add ah, al; clc; jmp dword ptr [esi - 0x70]; 
0x0008d006: stc; call dword ptr [eax - 0x18]; bound esi, qword ptr [eax - 6]; jmp dword ptr [esi - 0x70]; 
0x0010e36e: stc; call dword ptr [eax - 0x18]; cli; pop esp; bnd jmp dword ptr [esi - 0x70]; 
0x0009be2e: stc; call dword ptr [eax - 0x18]; cmp al, byte ptr [edx + 0xcbbfff9]; add byte ptr [eax], al; add cl, ch; ret 0xfffd; 
0x001531a1: stc; call dword ptr [eax - 0x18]; cmpsd dword ptr [esi], dword ptr es:[edi]; cmp ebx, esi; jmp dword ptr [esi - 0x70]; 
0x00079239: stc; call dword ptr [eax - 0x18]; das; scasb al, byte ptr es:[edi]; sti; jmp dword ptr [esi - 0x70]; 
0x0018c4ff: stc; call dword ptr [eax - 0x18]; dec ecx; cmpsb byte ptr [esi], byte ptr es:[edi]; out dx, eax; jmp dword ptr [esi - 0x70]; 
0x00164bec: stc; call dword ptr [eax - 0x18]; dec esp; add bh, bh; jmp dword ptr [ebp - 0x75]; 
0x001672ec: stc; call dword ptr [eax - 0x18]; dec esp; fsin; jmp dword ptr [ebp - 0x75]; 
0x00167216: stc; call dword ptr [eax - 0x18]; fdivr st(6); jmp dword ptr [ebp - 0x75]; 
0x0015628b: stc; call dword ptr [eax - 0x18]; fstp st(5); in eax, dx; jmp dword ptr [esi - 0x70]; 
0x00154271: stc; call dword ptr [eax - 0x18]; idiv ebp; in eax, dx; jmp dword ptr [esi - 0x70]; 
0x00112453: stc; call dword ptr [eax - 0x18]; in eax, 0xde; dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x000f7d7b: stc; call dword ptr [eax - 0x18]; in eax, dx; ret 0xfff3; 
0x00138f26: stc; call dword ptr [eax - 0x18]; inc edx; mov cl, 0xef; jmp dword ptr [esi - 0x70]; 
0x00153ff1: stc; call dword ptr [eax - 0x18]; ja 0x153ff7; out dx, al; jmp dword ptr [esi - 0x70]; 
0x000795f6: stc; call dword ptr [eax - 0x18]; jb 0x795a6; sti; jmp dword ptr [esi - 0x70]; 
0x0014dd69: stc; call dword ptr [eax - 0x18]; jmp dword ptr [edx - 0x12]; 
0x00153eb1: stc; call dword ptr [eax - 0x18]; mov bh, 1; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0014b449: stc; call dword ptr [eax - 0x18]; pop ds; mov esi, gs; jmp dword ptr [esi - 0x70]; 
0x00095961: stc; call dword ptr [eax - 0x18]; pop es; out 0xf9, eax; jmp dword ptr [esi - 0x70]; 
0x00153f51: stc; call dword ptr [eax - 0x18]; pop ss; add esi, ebp; jmp dword ptr [esi - 0x70]; 
0x0005af51: stc; call dword ptr [eax - 0x18]; pop ss; xchg ecx, eax; std; jmp dword ptr [esi - 0x70]; 
0x00153e11: stc; call dword ptr [eax - 0x18]; push edi; add ch, dh; jmp dword ptr [esi - 0x70]; 
0x00154311: stc; call dword ptr [eax - 0x18]; push edi; std; in eax, dx; jmp dword ptr [esi - 0x70]; 
0x00096416: stc; call dword ptr [eax - 0x18]; push edx; fdiv st(1), st(0); jmp dword ptr [esi - 0x70]; 
0x00090e88: stc; call dword ptr [eax - 0x18]; rcr byte ptr [edi + edi*8 - 1], 0x89; ret 0x5ae9; 
0x0017b7b6: stc; call dword ptr [eax - 0x18]; ret 0xeb96; 
0x00111da6: stc; call dword ptr [eax - 0x18]; ret 0xf222; 
0x00165846: stc; call dword ptr [eax - 0x18]; ret 0xfef2; 
0x0004d4a5: stc; call dword ptr [eax - 0x18]; ret; 
0x000c7cbe: stc; call dword ptr [eax - 0x18]; stosb byte ptr es:[edi], al; ret; 
0x000966cd: stc; call dword ptr [eax - 0x18]; wait; fyl2xp1; jmp dword ptr [esi - 0x70]; 
0x000c6dd3: stc; call dword ptr [eax - 0x18]; xchg ebp, eax; sal dh, cl; jmp dword ptr [esi - 0x70]; 
0x00153cd1: stc; call dword ptr [eax - 0x18]; xchg edi, eax; add ebp, esi; jmp dword ptr [esi - 0x70]; 
0x00153b91: stc; call dword ptr [eax - 0x18]; xlatb; add al, 0xee; jmp dword ptr [esi - 0x70]; 
0x000ed836: stc; call dword ptr [eax - 0x18]; xor ch, byte ptr [eax - 0xc]; jmp dword ptr [esi - 0x70]; 
0x001266d5: stc; call dword ptr [eax - 0x39]; 
0x00025737: stc; call dword ptr [eax - 0x73]; 
0x0017b7af: stc; call dword ptr [eax - 0x73]; xchg dword ptr [esp + esi*2 - 7], ecx; call dword ptr [eax - 0x18]; ret 0xeb96; 
0x000886a3: stc; call dword ptr [eax - 0x75]; 
0x000f04f0: stc; call dword ptr [eax - 0x77]; 
0x000247d0: stc; call dword ptr [eax - 1]; 
0x00060704: stc; call dword ptr [ebp + 0x50]; 
0x00060ac3: stc; call dword ptr [ebp + 0x56]; 
0x0009783e: stc; call dword ptr [ebp + 0x57]; 
0x0017511f: stc; call dword ptr [ebp + 0x6a]; 
0x00163e42: stc; call dword ptr [ebp - 0x73]; 
0x0013734c: stc; call dword ptr [ebp - 1]; 
0x0003f9dd: stc; call dword ptr [ebx + 0x50]; 
0x0012bbdd: stc; call dword ptr [ebx + 0x57]; 
0x00048939: stc; call dword ptr [ebx + 0x6a]; 
0x0012e479: stc; call dword ptr [ebx - 0x18]; 
0x0015596b: stc; call dword ptr [ebx - 0x73]; 
0x000607ca: stc; call dword ptr [ecx + 0x50]; 
0x0012712c: stc; call dword ptr [ecx + 0x51]; 
0x0008d93d: stc; call dword ptr [ecx + 0x52]; 
0x00177f15: stc; call dword ptr [ecx + 0x6a]; 
0x0015aa33: stc; call dword ptr [ecx - 0x17]; 
0x0013f6ba: stc; call dword ptr [ecx - 0x77]; 
0x00166406: stc; call dword ptr [ecx - 1]; 
0x0012bd40: stc; call dword ptr [edi + 0x50]; 
0x00145d17: stc; call dword ptr [edi + 0x52]; 
0x00183ee2: stc; call dword ptr [edi + 0x53]; 
0x00176596: stc; call dword ptr [edi + 0x56]; 
0x000248cc: stc; call dword ptr [edi + 0x57]; 
0x000530ad: stc; call dword ptr [edi + 0x6a]; 
0x0012bf9f: stc; call dword ptr [edi - 0x7f]; 
0x0002806f: stc; call dword ptr [edi - 1]; 
0x00027bcf: stc; call dword ptr [edx + 0x50]; 
0x000fe137: stc; call dword ptr [edx + 0x52]; 
0x001711be: stc; call dword ptr [edx + 0x6a]; 
0x00143cd1: stc; call dword ptr [edx - 0x46]; 
0x0002614b: stc; call dword ptr [edx - 0x73]; 
0x00038677: stc; call dword ptr [edx - 0x77]; 
0x00109794: stc; call dword ptr [edx - 1]; 
0x000340bd: stc; call dword ptr [esi + 0x50]; 
0x00061bf3: stc; call dword ptr [esi + 0x52]; 
0x00023442: stc; call dword ptr [esi + 0x53]; 
0x0018352d: stc; call dword ptr [esi + 0x57]; 
0x000577b9: stc; call dword ptr [esi + 0x6a]; 
0x00034170: stc; call dword ptr [esi - 1]; 
0x0009ddf5: stc; call dword ptr gs:[0x10]; 
0x00106ace: stc; clc; dec dword ptr [ecx + 0x3efe01d0]; jmp esi; 
0x001133c7: stc; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; xor eax, eax; ret; 
0x0008df98: stc; dec dword ptr [ebp + 0xb6]; add byte ptr [edx - 0x77], dl; ret; 
0x0010b95b: stc; dec dword ptr [ebp - 0x3fceff8a]; xchg dword ptr [edi + 0x3fac], eax; cmp eax, 1; jg 0x10b9a8; call dword ptr [esi]; 
0x0013e94b: stc; dec dword ptr [ebp - 0x6417ff8a]; fdivp st(7); jmp dword ptr [esi - 0x70]; 
0x00143914: stc; dec dword ptr [ebp - 0x68bb34e]; call dword ptr [eax + 0x56]; 
0x00143899: stc; dec dword ptr [ebp - 0x68bb36d]; call dword ptr [eax - 0x77]; 
0x00095929: stc; dec dword ptr [ebp - 0x692937f]; call dword ptr [eax - 0x73]; 
0x0013f6b4: stc; dec dword ptr [ebp - 0x6a7d57a]; call dword ptr [ecx - 0x77]; 
0x00106b3d: stc; dec dword ptr [ebp - 0x6b7e671]; call dword ptr [eax - 0x77]; 
0x000fad57: stc; dec dword ptr [ebp - 0x6b81e80]; call dword ptr [ebx + 0x50]; 
0x00106e33: stc; dec dword ptr [ebp - 0x6c0bf71]; call dword ptr [eax - 0x17]; 
0x00040119: stc; dec dword ptr [ebp - 0x6d0de6b]; dec dword ptr [ecx - 0x76ebdbac]; ret; 
0x00123e51: stc; dec dword ptr [ebx + 0x314c2444]; ror byte ptr [ebx + 0xfc08500], cl; dec eax; ret 0xc483; 
0x0012a871: stc; dec dword ptr [ebx + 0x31502444]; ror byte ptr [ebx + 0xfc08500], cl; dec eax; ret 0xc483; 
0x000cbb7e: stc; dec dword ptr [ebx - 0x27b7dbbc]; mov byte ptr [eax], al; ret 0xfff9; 
0x0004ce8b: stc; dec dword ptr [ebx - 0x27e7dbbc]; mov byte ptr [eax], al; ret 0xfff9; 
0x000a27d6: stc; dec dword ptr [ebx - 0x72ebdb8c]; xchg al, dh; cwde; stc; call dword ptr [eax - 0x73]; 
0x0009ebc5: stc; dec dword ptr [ebx - 0x78727783]; mov ah, 0x89; stc; call dword ptr [eax + 0x68]; 
0x0009407c: stc; dec dword ptr [ebx - 0x7872dbc4]; clc; test cl, bh; call dword ptr [eax + 0x68]; 
0x000fb60b: stc; dec dword ptr [ecx + 0x1db8c2]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00127a2b: stc; dec dword ptr [ecx + 0x2c938d16]; jo 0x127a2a; dec dword ptr [ebx + 0x56897440]; add al, 0x89; ret 0xeac1; 
0x0003fe97: stc; dec dword ptr [ecx - 0x14d3dbbc]; mov ebx, 0x2cdc858d; stc; dec dword ptr [ecx - 0x76d3dbbc]; ret 0x4489; 
0x000600e4: stc; dec dword ptr [ecx - 0x197cdbc4]; and dh, dh; ret 0xf50; 
0x00127306: stc; dec dword ptr [ecx - 0x36c72ea]; jne 0x127305; dec dword ptr [ebx + 0x56897440]; add al, 0x89; ret 0xeac1; 
0x000272ad: stc; dec dword ptr [ecx - 0x48f0e6b0]; xchg edi, eax; cmp byte ptr [eax - 7], dh; jmp dword ptr [esi - 0x77]; 
0x00037e9d: stc; dec dword ptr [ecx - 0x48f0f7b0]; xchg ebx, eax; and byte ptr [ebp - 7], dh; jmp dword ptr [esi - 0x77]; 
0x00027fe1: stc; dec dword ptr [ecx - 0x48f0f7bd]; test dword ptr [eax + 0x70], ecx; stc; jmp dword ptr [esi - 0x77]; 
0x00127b17: stc; dec dword ptr [ecx - 0x736c72ea]; xchg dh, dh; dec dword ptr [ebx + 0x56897440]; add al, 0x89; ret 0xeac1; 
0x0003fe44: stc; dec dword ptr [ecx - 0x76d3dbbc]; ret 0x4489; 
0x0003fb2f: stc; dec dword ptr [ecx - 0x76d3dbbc]; ret 0xc189; 
0x0004011f: stc; dec dword ptr [ecx - 0x76ebdbac]; ret; 
0x0003fbea: stc; dec dword ptr [ecx - 0x76f7dbbc]; ret 0xc5e9; 
0x0003fa26: stc; dec dword ptr [ecx - 0x76fbdbbc]; ret; 
0x000945bf: stc; dec dword ptr [ecx - 0x7872af05]; daa; inc eax; stc; call dword ptr [eax - 0x18]; 
0x00039f04: stc; dec dword ptr [edi]; inc ebp; call 0x2b6f6; jmp dword ptr [esi - 0x70]; 
0x0011ceda: stc; dec dword ptr [edi]; inc ebp; ret 0x4489; 
0x0015a95d: stc; dec dword ptr [edi]; inc esp; ret 0xec83; 
0x00124043: stc; dec dword ptr [edi]; xchg ebp, eax; ret; 
0x0005aaa7: stc; inc dword ptr [ebp - 0x38ec8b40]; add byte ptr [edi], ch; jbe 0x5aa3d; ret 0x40c7; 
0x000fb62d: stc; inc dword ptr [ebx + 0x448b10c4]; and al, 0xc; add esp, 0x18; pop ebx; ret; 
0x0008dd3e: stc; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x0008feec: stc; inc dword ptr [ebx - 0x3fcee73c]; pop ebx; ret; 
0x00086c36: stc; inc dword ptr [ebx - 0x3fceeb3c]; pop ebx; pop esi; ret; 
0x0008d9a7: stc; inc dword ptr [ebx - 0x72aff314]; add dword ptr [edi], 0x3f; stc; call dword ptr [ecx + 0x52]; 
0x0008d933: stc; inc dword ptr [ebx - 0x72aff314]; or dword ptr [esi], 0x3f; stc; call dword ptr [ecx + 0x52]; 
0x00039e23: stc; inc dword ptr [ebx - 0x7c72f314]; shr dword ptr [esi], 1; stc; call dword ptr [eax - 0x18]; 
0x00095652: stc; inc dword ptr [ebx - 0x7e45f440]; add eax, 0xa30f0000; ret 0x830f; 
0x001113f1: stc; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x00155d20: stc; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x00112028: stc; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x0008f747: stc; jmp dword ptr [ebp - 0x39]; 
0x00046fe8: stc; jmp dword ptr [ebp - 0x75]; 
0x0012aa66: stc; jmp dword ptr [ecx]; 
0x001a0e56: stc; jmp dword ptr [esi + 0xf]; 
0x0008420a: stc; jmp dword ptr [esi - 0x70]; 
0x000272b7: stc; jmp dword ptr [esi - 0x77]; 
0x0010b45b: stc; mov dword ptr [eax], 0; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x0003dc98: stc; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x00094f60: stc; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x001932d4: stc; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0006845d: stc; or dh, byte ptr [edx + ebx*8 - 0x7d]; mov ebp, 0xfffffa6c; dec dword ptr [edi]; xchg ebp, eax; ret; 
0x00121cc8: stc; or dword ptr [esp + esi - 0x75], esi; pop esp; and al, 0x20; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000c6691: stc; pop edi; cmovg eax, edx; ret; 
0x001aa3a2: stc; pop edi; ret; 
0x00064f8e: stc; pop edx; jbe 0x65934; mov edi, eax; jmp edx; 
0x00070aa9: stc; pop edx; jbe 0x71983; mov ecx, dword ptr [esp + 0x4c]; mov dword ptr [esp + 4], ecx; jmp eax; 
0x000c2ffe: stc; pop esi; ret; 
0x00180c07: stc; push dword ptr [ecx]; call dword ptr [eax + 0x6a]; 
0x0009f4ab: stc; sbb dword ptr [eax], eax; mov dword ptr [eax + 0x3bd0], 0; ret; 
0x0019ce2b: stc; stc; jmp dword ptr [esi - 0x70]; 
0x000a715f: stc; std; jmp dword ptr [esi - 0x70]; 
0x0017e3cb: stc; sti; jmp dword ptr [esi - 0x70]; 
0x001a9571: stc; sub al, 0x74; sbb eax, dword ptr [ebx - 0x7bf0d207]; ret 0; 
0x000decc7: stc; sub byte ptr [edi + ecx*4 + 2], bl; jbe 0xdecd8; mov eax, edx; ret; 
0x000ff99f: std; aaa; inc dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x0012f07c: std; adc byte ptr [eax], al; mov eax, 0x123; call dword ptr gs:[0x10]; 
0x001a4a36: std; adc byte ptr [ebp - 0x79f00f93], cl; call dword ptr [eax]; 
0x0019f932: std; adc byte ptr [ebp - 0x79f00f93], cl; ret; 
0x001a788a: std; add al, 0x76; ret; 
0x001abb89: std; add byte ptr [eax], al; add byte ptr [eax + 4], bh; pop edi; ret; 
0x000d44a1: std; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x001a9cdf: std; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x001a042d: std; add eax, 0xfd830000; adc byte ptr [ebp - 0x79f00f93], cl; ret; 
0x0019c17c: std; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000ba9a5: std; and al, 0x11; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0016ec16: std; bnd call dword ptr [eax - 0x73]; 
0x00163634: std; call dword ptr [eax + 0x50]; 
0x0006064c: std; call dword ptr [eax - 0x73]; 
0x000606a7: std; call dword ptr [ebp + 0x50]; 
0x0010d886: std; call dword ptr [ecx + 0x6a]; 
0x0010dfd5: std; clc; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x0005b520: std; dec dword ptr [ebp - 0x6866b7a]; call dword ptr [eax - 0x73]; 
0x00059b5e: std; dec dword ptr [ebx - 0x364743]; dec dword ptr [ebp - 0x6877779]; call dword ptr [eax - 0x73]; 
0x00059b83: std; dec dword ptr [ebx - 0x36474b]; dec dword ptr [ebp - 0x687777a]; call dword ptr [eax - 0x73]; 
0x00056445: std; dec dword ptr [ebx - 0x72ebdb84]; xchg dword ptr [eax + edi*2], esi; stc; call dword ptr [eax + 0x68]; 
0x0005df28: std; dec dword ptr [ebx - 0x8b4b]; dec dword ptr [ebp - 0x684677a]; call dword ptr [eax - 0x73]; 
0x0005df4d: std; dec dword ptr [ebx - 0x8b63]; dec dword ptr [ebp - 0x684677d]; call dword ptr [eax - 0x73]; 
0x0003bc69: std; fstp st(1); ret; 
0x00154276: std; in eax, dx; jmp dword ptr [esi - 0x70]; 
0x0005bdbe: std; inc dword ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x0005bb1e: std; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x000effd9: std; inc dword ptr [ebx + 0x78310c4]; add dword ptr [ecx], eax; ret; 
0x00142ed7: std; jmp dword ptr [ebp - 0x5f]; 
0x0004691f: std; jmp dword ptr [esi - 0x70]; 
0x001932d8: std; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00198523: std; mov byte ptr [edx - 1], al; mov eax, edx; pop ebx; ret; 
0x001a66c5: std; mov eax, 0; jne 0x1a6f86; pop ebx; ret; 
0x001a979b: std; mov eax, 0; jne 0x1a9870; pop ebx; ret; 
0x001271cf: std; mov ecx, 0xc483fff9; adc byte ptr [ebp - 0x5f7bf040], al; adc byte ptr [eax], al; add byte ptr [ebp - 0x6af187d], cl; call dword ptr [ecx + 0x51]; 
0x000b9ea9: std; or al, 0; add ecx, 0x112f24; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9e96: std; or al, 0; add ecx, 0x112f37; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9e7a: std; or al, 0; add ecx, 0x112f53; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bab1f: std; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000928cc: std; or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x001aa3d2: std; pop edi; ret; 
0x001a7f1c: std; sbb al, 0xfe; inc dword ptr [ecx + 0x34454c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0002b86f: std; xchg dword ptr [eax], eax; add byte ptr [ebx - 0x72c3db84], cl; xchg dword ptr [eax + 0x72], ecx; stc; call dword ptr [eax - 0x73]; 
0x00143981: sti; adc al, 0xef; call dword ptr [ebx + 0x50]; 
0x001405aa: sti; adc al, 0xf; xchg esp, eax; ret; 
0x0002ed52: sti; add al, 0xf; xchg dword ptr [eax + 0x9000000], esp; ret; 
0x00193355: sti; add byte ptr [eax], al; add al, ch; mov edi, 0x81ffff68; ret; 
0x001116e5: sti; add cl, byte ptr [edi]; xchg ebp, eax; ret; 
0x000304a8: sti; add cl, byte ptr [edi]; xchg esi, eax; ret; 
0x00111657: sti; add dword ptr [edi], ecx; xchg ebp, eax; ret; 
0x001415b9: sti; add dword ptr [edi], ecx; xchg esi, eax; ret 0xd008; 
0x000d7568: sti; add dword ptr [edi], ecx; xchg esp, eax; ret 0xc139; 
0x000496ef: sti; add dword ptr [edi], ecx; xchg esp, eax; ret 0xc639; 
0x000a89f3: sti; bsf eax, dword ptr [esp + 4]; mov edx, 0xffffffff; cmove eax, edx; add eax, 1; ret; 
0x0012f073: sti; call 0x189c21; add edx, 0x10fd9b; mov eax, 0x123; call dword ptr gs:[0x10]; 
0x00094813: sti; call 0x189c25; add eax, 0x1aa5fb; mov eax, dword ptr [eax + 0x3af4]; ret; 
0x0008cc93: sti; call 0x189c25; add eax, 0x1b217b; mov eax, dword ptr [eax + 0xe6c]; ret; 
0x0003d4c3: sti; call 0x189c25; add eax, 0x20194b; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x0003d4a3: sti; call 0x189c25; add eax, 0x20196b; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x00034843: sti; call 0x189c25; add eax, 0x20a5cb; mov eax, dword ptr [eax + 0x9c]; add eax, dword ptr gs:[0]; ret; 
0x0002f543: sti; call 0x189c25; add eax, 0x20f8cb; mov eax, dword ptr [eax + 0x10e0]; ret; 
0x000260c3: sti; call 0x189c25; add eax, 0x218d4b; mov eax, dword ptr [eax + 0x10bc]; ret; 
0x000260a3: sti; call 0x189c25; add eax, 0x218d6b; mov eax, dword ptr [eax + 0x10b8]; ret; 
0x00025553: sti; call 0x189c25; add eax, 0x2198bb; mov eax, dword ptr [eax + 0xa4]; add eax, dword ptr gs:[0]; ret; 
0x00024fd3: sti; call 0x189c25; add eax, 0x219e3b; lea eax, [eax - 0x690b4]; ret; 
0x00024fb3: sti; call 0x189c25; add eax, 0x219e5b; lea eax, [eax - 0x690ac]; ret; 
0x0013f5f3: sti; call 0x189c25; add eax, 0xff81b; mov eax, dword ptr [eax + 0xc4]; add eax, dword ptr gs:[0]; ret; 
0x00152fce: sti; call 0x231a0; mov dword ptr [esp], ebp; call esi; 
0x00092f12: sti; call dword ptr gs:[0x10]; 
0x0010b151: sti; clc; call dword ptr [ecx + 0x6a]; 
0x000f0bf7: sti; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; xor eax, eax; ret; 
0x00185810: sti; dec dword ptr [ebp - 0x644c77a]; call dword ptr [eax - 0x73]; 
0x00083d3e: sti; dec dword ptr [ebp - 0x67cb77a]; call dword ptr [eax - 0x73]; 
0x00078e99: sti; dec dword ptr [ebp - 0x692b37a]; call dword ptr [eax - 0x73]; 
0x0018a65a: sti; dec dword ptr [ebx + 0x311c2444]; fild dword ptr [eax + 0xf72007d]; xchg esp, eax; ret; 
0x00181ad3: sti; dec dword ptr [ebx - 0xef4b]; dec dword ptr [ebp - 0x645437a]; call dword ptr [eax - 0x73]; 
0x000a7660: sti; dec dword ptr [ecx - 0x1917dbe4]; hlt; std; jmp dword ptr [esi - 0x70]; 
0x0010e36c: sti; dec eax; stc; call dword ptr [eax - 0x18]; 
0x000e7ca6: sti; fimul dword ptr [edi]; inc esp; ret 0x548b; 
0x0013d825: sti; inc dword ptr [ebx + 0x5e5b20c4]; pop edi; ret; 
0x000a7157: sti; inc dword ptr [ebx - 0x17aceb3c]; out dx, al; stc; std; jmp dword ptr [esi - 0x70]; 
0x0010be0b: sti; inc dword ptr [ebx - 0x3fceef3c]; pop ebx; pop esi; pop edi; ret; 
0x0007923f: sti; jmp dword ptr [esi - 0x70]; 
0x00193294: sti; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00090b80: sti; mov dword ptr [edi + 0x10], 0; mov ecx, dword ptr [edi + 0xc]; xor cl, 0x81; mov dword ptr [edi], 0; call dword ptr gs:[0x10]; 
0x001963b8: sti; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001983b8: sti; mov dword ptr [edx - 4], eax; mov eax, edx; pop ebx; ret; 
0x0009c2a3: sti; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0009c2a3: sti; mov eax, 0x9e; call dword ptr gs:[0x10]; ret; 
0x0008bc63: sti; mov eax, 0xffffffff; mov edx, eax; ret; 
0x0008b493: sti; mov eax, 0xffffffff; ret; 
0x0016eb03: sti; mov eax, 1; ret; 
0x00170d93: sti; mov eax, 2; ret; 
0x0008e743: sti; mov eax, dword ptr [eax + 0x1c]; mov dword ptr gs:[0x7c], eax; ret; 
0x0003b8e3: sti; mov eax, dword ptr [esp + 0x10]; and eax, 0x80000000; ret; 
0x00192ba3: sti; mov eax, dword ptr [esp + 0x10]; mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x0017cdd3: sti; mov eax, dword ptr [esp + 4]; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x00141ae3: sti; mov eax, dword ptr [esp + 4]; add eax, 9; and eax, 0xfffffff8; add eax, 0xc; ret; 
0x000875c3: sti; mov eax, dword ptr [esp + 4]; and dword ptr [eax], 0xffffffcf; ret; 
0x00034643: sti; mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x0013f613: sti; mov eax, dword ptr [esp + 4]; bswap eax; ret; 
0x00099ac3: sti; mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 0; mov dword ptr [eax + 4], 0; xor eax, eax; ret; 
0x00090c13: sti; mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x00152853: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x10]; ret; 
0x0017ce13: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x0008ccc3: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x001897b3: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x001897d3: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x50]; ret; 
0x00189863: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x54]; ret; 
0x00189853: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x001897e3: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x0009e073: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x64]; ret; 
0x001227d3: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x00086883: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x00086833: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x804; ret; 
0x000e8903: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; ret; 
0x0017cdf3: sti; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 0xc]; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x00114613: sti; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x110], edx; xor eax, eax; ret; 
0x001897c3: sti; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x000906f3: sti; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x0010ce13: sti; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x0008c963: sti; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x00189773: sti; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x000311c3: sti; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x000875d3: sti; mov eax, dword ptr [esp + 4]; movzx eax, byte ptr [eax]; shr al, 4; and eax, 1; ret; 
0x000875f3: sti; mov eax, dword ptr [esp + 4]; movzx eax, byte ptr [eax]; shr al, 5; and eax, 1; ret; 
0x0008ccd3: sti; mov eax, dword ptr [esp + 4]; ret; 
0x0008a863: sti; mov eax, dword ptr [esp + 4]; test byte ptr [eax], 0x80; jne 0x8a870; ret; 
0x000941b3: sti; mov eax, dword ptr [esp + 8]; cmp dword ptr [esp + 4], eax; sete al; movzx eax, al; ret; 
0x000347c3: sti; mov eax, dword ptr [esp + 8]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x000347e3: sti; mov eax, dword ptr [esp + 8]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00099b43: sti; mov eax, dword ptr gs:[8]; ret; 
0x00094bc3: sti; mov eax, dword ptr gs:[8]; xor edx, edx; lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x000878f9: sti; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00097056: sti; mov ecx, 7; mov dword ptr [edi + 4], edx; xor esi, esi; xor edx, edx; call dword ptr gs:[0x10]; 
0x0017ca13: sti; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x0003dc43: sti; mov edx, dword ptr [esp + 4]; mov eax, edx; neg eax; cmovs eax, edx; ret; 
0x000908f3: sti; mov edx, dword ptr [esp + 8]; mov eax, 0x16; cmp edx, 0x3fff; ja 0x90910; ret; 
0x0009481a: sti; movsd dword ptr es:[edi], dword ptr [esi]; sbb al, byte ptr [eax]; mov eax, dword ptr [eax + 0x3af4]; ret; 
0x0013f623: sti; movzx eax, word ptr [esp + 4]; rol ax, 8; ret; 
0x00196407: sti; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001983f7: sti; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, edx; pop ebx; ret; 
0x00098a23: sti; nop; xor eax, eax; ret; 
0x000fd386: sti; or dh, byte ptr [ecx + ebp - 0x7d]; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x001aa3c2: sti; pop edi; ret; 
0x00152674: sti; pop esp; stc; call dword ptr [eax - 0x18]; 
0x0014cddf: sti; push dword ptr [eax + esi - 0x75]; test byte ptr [esp + edx*4], ah; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000d4612: sti; push dword ptr [esi + eax - 0x77]; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x0010e383: sti; push ebx; mov eax, 0x2b; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00140383: sti; push ebx; mov eax, dword ptr [esp + 8]; mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; 
0x0013f436: sti; push edi; stc; call dword ptr [eax - 0x18]; 
0x00132b1a: sti; ret 0x10; 
0x00024d13: sti; ret; 
0x0015128c: sti; sbb al, 0xf; xchg edi, eax; ret 0xd008; 
0x00169aa3: sti; sub esp, 0x18; push 0; call 0x156690; add esp, 0x1c; ret; 
0x0003d283: sti; sub esp, 0x18; push 0; call 0x3cb20; add esp, 0x1c; ret; 
0x0016de13: sti; sub esp, 0x18; push 0xa; call 0x156690; add esp, 0x1c; ret; 
0x00169f03: sti; sub esp, 0x18; push 1; call 0x156690; add esp, 0x1c; ret; 
0x0016a273: sti; sub esp, 0x18; push 2; call 0x156690; add esp, 0x1c; ret; 
0x0016b333: sti; sub esp, 0x18; push 3; call 0x156690; add esp, 0x1c; ret; 
0x0016c693: sti; sub esp, 0x18; push 4; call 0x156690; add esp, 0x1c; ret; 
0x0016cd13: sti; sub esp, 0x18; push 5; call 0x156690; add esp, 0x1c; ret; 
0x0016d0b3: sti; sub esp, 0x18; push 6; call 0x156690; add esp, 0x1c; ret; 
0x0016e393: sti; sub esp, 0x18; push 7; call 0x156690; add esp, 0x1c; ret; 
0x0016d733: sti; sub esp, 0x18; push 8; call 0x156690; add esp, 0x1c; ret; 
0x0016db43: sti; sub esp, 0x18; push 9; call 0x156690; add esp, 0x1c; ret; 
0x0009886c: sti; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0013fba1: sti; xor eax, 0xc483ffee; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00034653: sti; xor eax, eax; cmp dword ptr [esp + 4], 0x7f; setbe al; ret; 
0x0008bbb3: sti; xor eax, eax; ret; 
0x000962ed: sti; xor edx, edx; mov ecx, 7; xor esi, esi; call dword ptr gs:[0x10]; 
0x000e79e2: stosb byte ptr es:[edi], al; add byte ptr [eax], al; add byte ptr [eax + 0x194], bh; call dword ptr gs:[0x10]; 
0x0011f1cd: stosb byte ptr es:[edi], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b24c4], al; ret; 
0x000ac281: stosb byte ptr es:[edi], al; idiv bh; cmovne eax, edx; ret; 
0x0016f852: stosb byte ptr es:[edi], al; in al, 0xfc; jmp dword ptr [esi - 0x70]; 
0x000f35af: stosb byte ptr es:[edi], al; inc edi; stc; call dword ptr [eax - 0x18]; 
0x0002cdc2: stosb byte ptr es:[edi], al; jb 0x2cdc5; add byte ptr [ebx - 0x72c3db84], cl; xchg dword ptr [eax], ecx; jb 0x2cdc8; call dword ptr [eax - 0x73]; 
0x000c25fc: stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x00127296: stosb byte ptr es:[edi], al; push edx; stc; call dword ptr [ecx + 0x51]; 
0x00042b6c: stosb byte ptr es:[edi], al; ret 0x1f; 
0x000c7cc2: stosb byte ptr es:[edi], al; ret; 
0x001414e6: stosb byte ptr es:[edi], al; stc; call dword ptr [eax - 0x18]; 
0x0013eca0: stosb byte ptr es:[edi], al; stc; call dword ptr [eax - 0x73]; 
0x000795fb: stosb byte ptr es:[edi], al; sti; jmp dword ptr [esi - 0x70]; 
0x0010f73b: stosb byte ptr es:[edi], al; sub cl, bh; call dword ptr [eax + 0x6a]; 
0x0005aa88: stosd dword ptr es:[edi], eax; add al, byte ptr [eax]; add esp, 0x1c; ret; 
0x00116981: stosd dword ptr es:[edi], eax; add byte ptr [eax], al; add byte ptr [ebx + 0x10c2444], cl; ret 0xfa81; 
0x00039e20: stosd dword ptr es:[edi], eax; add byte ptr [esi - 7], al; inc dword ptr [ebx - 0x7c72f314]; shr dword ptr [esi], 1; stc; call dword ptr [eax - 0x18]; 
0x000ccfe4: stosd dword ptr es:[edi], eax; add dword ptr [eax], eax; add byte ptr [ecx + 0x39efd3d7], cl; ret; 
0x0012f076: stosd dword ptr es:[edi], eax; add eax, 0x9bc28100; std; adc byte ptr [eax], al; mov eax, 0x123; call dword ptr gs:[0x10]; 
0x0010df3c: stosd dword ptr es:[edi], eax; dec eax; stc; call dword ptr [eax - 0x18]; 
0x00196d47: stosd dword ptr es:[edi], eax; dec ebx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000ac5bc: stosd dword ptr es:[edi], eax; dec esp; je 0xac5b9; call dword ptr [eax + 0x55]; 
0x000e85e7: stosd dword ptr es:[edi], eax; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x000baa82: stosd dword ptr es:[edi], eax; int1; or al, 0; add ecx, 0x11241a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0010dff3: stosd dword ptr es:[edi], eax; mov al, 0xfe; clc; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x00138ec1: stosd dword ptr es:[edi], eax; mov cl, 0xef; dec dword ptr [ebx - 0x72dfdb84]; xchg dword ptr [ecx + ebp*4], edx; stc; call dword ptr [eax - 0x73]; 
0x00182cd9: stosd dword ptr es:[edi], eax; mov dh, 0x66; stc; call dword ptr [ebp + 0x56]; 
0x0019de6e: stosd dword ptr es:[edi], eax; mov ebp, 0xc381fffe; jecxz 0x19de7a; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000c25f8: stosd dword ptr es:[edi], eax; mov ecx, edx; rep stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x00153174: stosd dword ptr es:[edi], eax; mov edx, 1; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0003486a: stosd dword ptr es:[edi], eax; movsd dword ptr es:[edi], dword ptr [esi]; and byte ptr [eax], al; mov eax, dword ptr [eax + 0x1d0]; add eax, dword ptr gs:[0]; ret; 
0x0010cc27: stosd dword ptr es:[edi], eax; pop edi; ret; 
0x00192b6a: stosd dword ptr es:[edi], eax; ret 0xa; 
0x00186c91: stosd dword ptr es:[edi], eax; ret; 
0x001284a1: stosd dword ptr es:[edi], eax; retf 0xffef; ret; 
0x00143812: stosd dword ptr es:[edi], eax; stc; call dword ptr [eax + 0x56]; 
0x00141acb: stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x18]; 
0x00141ab8: stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x00143913: stosd dword ptr es:[edi], eax; stc; dec dword ptr [ebp - 0x68bb34e]; call dword ptr [eax + 0x56]; 
0x000600e1: stosd dword ptr es:[edi], eax; sub dword ptr [edi], -7; dec dword ptr [ecx - 0x197cdbc4]; and dh, dh; ret 0xf50; 
0x0003021a: stosd dword ptr es:[edi], eax; sub edi, ecx; call dword ptr [eax + 0x56]; 
0x0003d651: stosd dword ptr es:[edi], eax; syscall; 
0x0013f5fc: str word ptr [ebx + 0xc480]; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x0004d4d5: str word ptr [ebx - 0x72e7db84]; xchg dword ptr [eax + 0x78], ebx; stc; call dword ptr [eax - 0x73]; 
0x0004a268: str word ptr [ebx - 0x72e7db84]; xchg dword ptr [eax + edi*2], esi; stc; call dword ptr [eax - 0x73]; 
0x0004a481: str word ptr [ecx]; ret 0x9d74; 
0x000ca6a1: str word ptr [ecx]; ret 0x9e74; 
0x00134d83: sub ah, 0x5c; out dx, eax; call dword ptr [eax + 0x6a]; 
0x000ac46b: sub ah, 0x8d; idiv bh; test byte ptr [ecx + 0x76], 0x10; cmove eax, edx; ret; 
0x000ac63b: sub ah, 0x8e; idiv bh; test byte ptr [ecx + 0x76], 0x10; cmove eax, edx; ret; 
0x000c4862: sub ah, 0x9b; stc; call dword ptr [eax - 0x18]; 
0x00155f20: sub ah, 0xb2; stc; call dword ptr [eax - 0x73]; 
0x000c3197: sub ah, 1; add byte ptr [eax], al; ret; 
0x001619cc: sub ah, byte ptr [eax - 7]; call dword ptr [eax - 0x18]; 
0x000a0119: sub al, 0x1b; mov eax, 0x107; mov ebx, dword ptr [ebp]; call dword ptr gs:[0x10]; 
0x000723c4: sub al, 0x20; add byte ptr [eax], al; add byte ptr [ecx - 0x76cfdbbc], cl; ret 0x44c7; 
0x000551e4: sub al, 0x24; add esp, 0x1c; ret; 
0x0009de08: sub al, 0x24; call 0x231a0; mov dword ptr [esp], esi; call edi; 
0x001635cd: sub al, 0x24; call ebx; 
0x00163237: sub al, 0x24; call edi; 
0x00025f81: sub al, 0x24; call esi; 
0x00189c2e: sub al, 0x24; ret; 
0x0018ab4c: sub al, 0x2b; inc esi; and al, 0x29; ret; 
0x000a9631: sub al, 0x2f; call 0xc24ea637; ret; 
0x000ac301: sub al, 0x30; call 0xc24ed307; ret; 
0x0004a1aa: sub al, 0x30; stc; call dword ptr [eax - 0x18]; 
0x00086d82: sub al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x0003e040: sub al, 0x35; add dword ptr [eax], eax; add esp, 0x1c; ret; 
0x00122a6e: sub al, 0x38; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0015c358: sub al, 0x39; ret; 
0x0010a87d: sub al, 0x39; sal byte ptr [esi + ecx - 0x77], 1; ret 0xf189; 
0x00099d73: sub al, 0x3b; add byte ptr [eax], al; push eax; call 0x901f0; add esp, 0x1c; ret; 
0x000ab4d6: sub al, 0x3d; call 0xc24ec4dc; ret; 
0x000ac060: sub al, 0x40; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x00158e14: sub al, 0x4e; int1; call dword ptr [eax - 0x73]; 
0x00143a0d: sub al, 0x50; push dword ptr [esp + 0x2c]; call 0x142f10; add esp, 0x2c; ret; 
0x0009a6de: sub al, 0x52; call 0x94be0; add esp, 0x20; add esp, 0xc; ret; 
0x0008e342: sub al, 0x52; push ecx; push edi; call eax; 
0x0013d658: sub al, 0x53; cmc; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x00168064: sub al, 0x53; int1; call dword ptr [eax - 0x73]; 
0x00089cd0: sub al, 0x55; push edi; push ebx; call dword ptr [esi + 0x40]; 
0x00179044: sub al, 0x55; push esi; push 3; push edi; call dword ptr [eax]; 
0x00175d36: sub al, 0x58; pop edx; push 0; push edi; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x14]; 
0x0008d8b7: sub al, 0x5b; pop esi; pop edi; pop ebp; jmp eax; 
0x00023537: sub al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x001215ce: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0x1215dd; add esp, 0x38; pop ebx; ret; 
0x0012164e: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0x12165d; add esp, 0x38; pop ebx; ret; 
0x00124f63: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0x124f72; add esp, 0x38; pop ebx; ret; 
0x0012d1e1: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0x12d1ef; add esp, 0x3c; ret; 
0x0009c242: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0x9c297; add esp, 0x38; pop ebx; ret; 
0x000a038a: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0xa0399; add esp, 0x38; pop ebx; ret; 
0x000da754: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0xda763; add esp, 0x38; pop ebx; ret; 
0x000dc053: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0xdc078; add esp, 0x38; pop ebx; ret; 
0x00145988: sub al, 0x66; cmp ebx, 0x950f0308; ret; 
0x001303cb: sub al, 0x6a; pushfd; call 0x11f6e0; add esp, 0x20; add esp, 0xc; ret; 
0x0002e18b: sub al, 0x6a; stc; call dword ptr [eax + 0x68]; 
0x0002e01a: sub al, 0x6a; stc; call dword ptr [eax - 0x73]; 
0x0002a028: sub al, 0x6b; stc; call dword ptr [eax - 0x73]; 
0x000da578: sub al, 0x6e; stc; call dword ptr [eax + 0x56]; 
0x0018609c: sub al, 0x6f; stc; call dword ptr [eax - 0x73]; 
0x001a9572: sub al, 0x74; sbb eax, dword ptr [ebx - 0x7bf0d207]; ret 0; 
0x000d9745: sub al, 0x75; pop eax; pop edi; pop esi; ret; 
0x00166d38: sub al, 0x81; bnd call dword ptr [eax - 0x18]; 
0x000c7fb0: sub al, 0x81; ret 0; 
0x000348ee: sub al, 0x81; ret 0x200; 
0x001253f6: sub al, 0x83; in al, dx; add al, 0x89; ret; 
0x0008bc1b: sub al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000293db: sub al, 0x83; les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; jmp eax; 
0x001780ab: sub al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0018681a: sub al, 0x83; les esi, ptr [eax]; pop ebx; pop esi; pop edi; jmp eax; 
0x001a5f93: sub al, 0x83; ret 0x7e10; 
0x001418cb: sub al, 0x83; ret 0x8902; 
0x001061e2: sub al, 0x83; ret; 
0x001747f6: sub al, 0x83; ror byte ptr [eax], 0x89; inc esp; and al, 4; jmp edx; 
0x00038b46: sub al, 0x89; call 0x5d62e9a8; ret; 
0x000e7994: sub al, 0x89; call 0x5d6dd7f6; ret; 
0x000f0396: sub al, 0x89; call 0x5d6e61f8; ret; 
0x0010aa06: sub al, 0x89; call 0x5d700868; ret; 
0x0010ed6f: sub al, 0x89; call 0x5d704bd1; ret; 
0x0010ee8d: sub al, 0x89; call 0x5d704cef; ret; 
0x0003d5e8: sub al, 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x000aca1b: sub al, 0x89; je 0xaca43; sbb al, 0x83; rol byte ptr [ecx], 0x83; ret; 
0x00171520: sub al, 0x89; pop eax; xor al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000dbad0: sub al, 0x89; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x000a0183: sub al, 0x89; ret 0x408b; 
0x0003fe49: sub al, 0x89; ret 0x4489; 
0x0003fb34: sub al, 0x89; ret 0xc189; 
0x000a3590: sub al, 0x89; ret 0xcaeb; 
0x000a2460: sub al, 0x89; ret; 
0x001b4fcc: sub al, 0x89; test byte ptr [eax + ecx*4], ah; add byte ptr [eax], al; add byte ptr [ebx - 0x76f7dbbc], cl; ret 0x8489; 
0x0003dc92: sub al, 0x89; xlatb; xor edx, edx; mov ecx, edi; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x00034545: sub al, 0x8b; add al, 0x90; ret; 
0x001749ed: sub al, 0x8b; add al, byte ptr [ebp - 0x7ce58b40]; in al, dx; or al, 0x83; ret 0x5208; 
0x001315fd: sub al, 0x8b; inc esp; and al, 0x68; mov dword ptr [esp + 0x30], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00122ba9: sub al, 0x8b; je 0x122bd1; inc esp; mov ebx, dword ptr [esp + 0x40]; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x00126f0d: sub al, 0x8b; jl 0x126f35; xor byte ptr [ebp - 0x6b3367d], cl; call dword ptr [eax + 0x55]; 
0x0012b71b: sub al, 0x8b; pop esp; and al, 0x30; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x0012b67b: sub al, 0x8b; pop esp; and al, 0x30; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x0010c29b: sub al, 0x8b; pop esp; and al, 0x30; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x00034606: sub al, 0x8b; test byte ptr [eax + 0x200], dl; ret; 
0x00043794: sub al, 0x8b; test byte ptr [esp + esi*8], ah; add byte ptr [eax], al; add cl, dl; call 0x21061825; ret 0xb60f; 
0x001750d0: sub al, 0x8c; cld; dec dword ptr [ebp - 0x69b7e7d]; call dword ptr [edi + 0x6a]; 
0x00129f7f: sub al, 0x8d; inc ebx; inc dword ptr [ebx + 0x287602f8]; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x0017f40d: sub al, 0x8d; inc esi; adc byte ptr [ecx], al; ret; 
0x0016f8e4: sub al, 0x8d; test al, 0x4c; or dh, bl; jmp dword ptr [ebp - 0x75]; 
0x000490a9: sub al, 0x8d; test byte ptr [eax + eax*4], ah; add al, byte ptr [eax]; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x20e9; 
0x00048389: sub al, 0x8d; test byte ptr [eax + eax*4], ah; add al, byte ptr [eax]; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x8d2e; 
0x0004c5ba: sub al, 0x8d; test byte ptr [esp + esi*8], ah; add byte ptr [eax], al; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x6de9; 
0x0004b8e5: sub al, 0x8d; test byte ptr [esp + esi*8], ah; add byte ptr [eax], al; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x8d2e; 
0x000d0c50: sub al, 0x8d; xchg dword ptr [ebp + ebx*4 - 7], esp; call dword ptr [eax - 0x73]; 
0x00157e48: sub al, 0x92; int1; call dword ptr [eax - 0x18]; 
0x00162dec: sub al, 0xa2; add byte ptr [eax], al; push edx; call eax; 
0x0013f5f5: sub al, 0xa6; add al, 0; add eax, 0xff81b; mov eax, dword ptr [eax + 0xc4]; add eax, dword ptr gs:[0]; ret; 
0x0016f3cf: sub al, 0xa6; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x001ac403: sub al, 0xa8; pcmpeqw mm3, qword ptr [eax]; test dl, 0xf; jne 0x1ac4a0; lea eax, [ecx + 4]; ret; 
0x0013ecf7: sub al, 0xa9; stc; call dword ptr [eax - 0x18]; 
0x000a047c: sub al, 0xb8; add al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00115d65: sub al, 0xb8; sub al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0017c477: sub al, 0xba; stc; call dword ptr [eax - 0x73]; 
0x000a0012: sub al, 0xc7; inc esp; and al, 0x34; add al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000a940e: sub al, 0xd0; cmc; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x000a073d: sub al, 0xdd; clc; jmp dword ptr [ebp - 1]; 
0x00043416: sub al, 0xe8; and al, 0; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0010c7a0: sub al, 0xe8; cmp dl, byte ptr [ebx]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000e2ba0: sub al, 0xe8; dec edx; dec eax; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0006144c: sub al, 0xe8; dec esi; inc esi; add al, byte ptr [eax]; add esp, 0x2c; ret; 
0x0013d821: sub al, 0xe8; imul ebx, edi, 0xc483fffb; and byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00192e9e: sub al, 0xe8; insb byte ptr es:[edi], dx; adc eax, 0xd8f7fffd; sbb eax, eax; add esp, 0x2c; ret; 
0x00190560: sub al, 0xe8; jp 0x190539; idiv edi; add esp, 0x2c; ret; 
0x000cd6e2: sub al, 0xe8; mov byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000cd760: sub al, 0xe8; or al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0011e148: sub al, 0xe8; ret 0x28; 
0x001099e0: sub al, 0xe8; ret 0xf197; 
0x00107b88: sub al, 0xe8; ret 0xff59; 
0x000ec717: sub al, 0xe8; ret; 
0x0004d7e0: sub al, 0xe8; sbb al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000511b7: sub al, 0xe9; mov dword ptr [0x8bfffff4], eax; jl 0x511e4; sub byte ptr [ebp - 0x687cb79], cl; call dword ptr [eax - 0x73]; 
0x000fdce1: sub al, 0xe9; mov ebx, 0x83fffffd; in al, dx; or byte ptr [ebp - 0x6b7f87d], cl; call dword ptr [eax + 0x55]; 
0x0003fe9c: sub al, 0xeb; mov ebx, 0x2cdc858d; stc; dec dword ptr [ecx - 0x76d3dbbc]; ret 0x4489; 
0x0002a15b: sub al, 0xf6; ret 0x7501; 
0x0002b6a7: sub al, 0xf6; ret 0xf08; 
0x0014366c: sub al, 0xf9; call dword ptr [eax + 0x55]; 
0x00115068: sub al, 0xf9; call dword ptr [eax + 0x56]; 
0x00031d26: sub al, 0xf9; call dword ptr [eax - 0x18]; 
0x0013c492: sub al, 0xf9; call dword ptr [eax - 0x73]; 
0x00106acd: sub al, 0xf9; clc; dec dword ptr [ecx + 0x3efe01d0]; jmp esi; 
0x00106e32: sub al, 0xf9; dec dword ptr [ebp - 0x6c0bf71]; call dword ptr [eax - 0x17]; 
0x00040118: sub al, 0xf9; dec dword ptr [ebp - 0x6d0de6b]; dec dword ptr [ecx - 0x76ebdbac]; ret; 
0x0003fe96: sub al, 0xf9; dec dword ptr [ecx - 0x14d3dbbc]; mov ebx, 0x2cdc858d; stc; dec dword ptr [ecx - 0x76d3dbbc]; ret 0x4489; 
0x0003fe43: sub al, 0xf9; dec dword ptr [ecx - 0x76d3dbbc]; ret 0x4489; 
0x0003fb2e: sub al, 0xf9; dec dword ptr [ecx - 0x76d3dbbc]; ret 0xc189; 
0x0003fbe9: sub al, 0xf9; dec dword ptr [ecx - 0x76f7dbbc]; ret 0xc5e9; 
0x0003fa25: sub al, 0xf9; dec dword ptr [ecx - 0x76fbdbbc]; ret; 
0x0015a95c: sub al, 0xf9; dec dword ptr [edi]; inc esp; ret 0xec83; 
0x0008d9a6: sub al, 0xf9; inc dword ptr [ebx - 0x72aff314]; add dword ptr [edi], 0x3f; stc; call dword ptr [ecx + 0x52]; 
0x0008d932: sub al, 0xf9; inc dword ptr [ebx - 0x72aff314]; or dword ptr [esi], 0x3f; stc; call dword ptr [ecx + 0x52]; 
0x00063485: sub al, 0xf; mov dh, 0x94; and al, 0x83; add byte ptr [eax], al; add byte ptr [ecx], al; ret; 
0x0012ed8f: sub al, 0xf; mov dh, 0xc0; neg eax; ret; 
0x0010b4ae: sub al, 0xf; mov dh, 0xc0; ret; 
0x0011e75f: sub al, 0xf; xchg ebp, eax; ret 0x7c89; 
0x0014b8b2: sub al, 0xf; xchg ebp, eax; ret; 
0x00030149: sub al, 0xf; xchg esp, eax; ret 0xca08; 
0x0005137a: sub al, 0xfe; dec dword ptr [ebx - 0x72d7db84]; xchg dword ptr [eax + 0x78], esi; stc; call dword ptr [eax - 0x73]; 
0x000c4113: sub al, 0xff; aaa; mov eax, dword ptr [esp + 0x38]; call eax; 
0x00197005: sub al, 0xff; inc dword ptr [ecx + 0x44828c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00196f4d: sub al, 0xff; inc dword ptr [ecx + 0x449a0c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0008dff7: sub al, 0xff; je 0x8e01f; cmp al, 0x51; push dword ptr [esp + 0x3c]; call eax; 
0x00115d67: sub al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012f012: sub al, 1; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x000c3187: sub al, 1; add byte ptr [eax], al; ret; 
0x00171805: sub al, 1; ret 0x5689; 
0x00087f67: sub al, 1; ret 0xe852; 
0x00064049: sub al, 1; ret; 
0x00092d32: sub al, 2; add byte ptr [eax], al; sub esp, 0xc; mov eax, dword ptr [ecx + 0x228]; push edx; call eax; 
0x00198e5e: sub al, 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019902b: sub al, byte ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00174d8a: sub al, byte ptr [ebx + 0x5e5b5cc4]; pop edi; pop ebp; ret; 
0x00115158: sub al, byte ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00131242: sub al, ch; mov eax, 0x89fff5d3; loope 0x1311d4; ret 0x448b; 
0x00131cb8: sub al, ch; ret 0xf5c9; 
0x001846d7: sub al, ch; ret; 
0x000eb742: sub al, dh; clc; inc dword ptr [ecx]; fidivr word ptr [esi]; jmp esi; 
0x000bd603: sub al, dh; or al, 0; add ecx, 0x10f96d; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x001436bf: sub bh, 0x58; stc; call dword ptr [eax + 0x6a]; 
0x000a0756: sub bh, al; dec dword ptr [ebx - 0x76e3dbbc]; add al, 0x24; call esi; 
0x001973f5: sub bh, bh; inc dword ptr [ecx + 0x44438c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019733e: sub bh, bh; inc dword ptr [ecx + 0x444efc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001971ee: sub bh, bh; inc dword ptr [ecx + 0x4463fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00197155: sub bh, bh; inc dword ptr [ecx + 0x446d8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0011f6c2: sub bh, bh; je 0x11f6ea; sub byte ptr [edx - 0x64], ch; call 0x11f6e0; add esp, 0x2c; ret; 
0x00135a67: sub bh, bh; je 0x135a8f; cmp al, 0xe8; scasd eax, dword ptr es:[edi]; sar eax, cl; jmp dword ptr [ebp - 0x75]; 
0x00036510: sub bh, bh; je 0x36538; sub byte ptr [edx], ch; call 0x364a0; add esp, 0x2c; ret; 
0x0016eacb: sub bh, bh; jo 0x16eae3; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x000a00ed: sub bh, byte ptr [eax + 0x107]; call dword ptr gs:[0x10]; 
0x0017b5f2: sub bh, byte ptr [eax - 0xc]; call ecx; 
0x0012e28b: sub bh, byte ptr [eax - 1]; add esp, 8; pop ebx; ret; 
0x00028822: sub bh, cl; call dword ptr [eax - 0x18]; 
0x000288a8: sub bh, cl; call dword ptr [eax - 0x73]; 
0x000c6328: sub bh, cl; jmp dword ptr [ebp - 0x75]; 
0x0013f6b8: sub bl, byte ptr [eax - 7]; call dword ptr [ecx - 0x77]; 
0x001742d9: sub bl, ch; or al, 0x8d; je 0x174305; add byte ptr [ecx], ch; ret; 
0x00126f5c: sub byte ptr [0xec830000], al; or byte ptr [ebp - 0x6b4427d], cl; call dword ptr [eax + 0x55]; 
0x0012f36a: sub byte ptr [eax + 0x156], bh; call dword ptr gs:[0x10]; 
0x0004043a: sub byte ptr [eax + 0x163], bh; call dword ptr gs:[0x10]; 
0x00129f87: sub byte ptr [eax + 0x1a], bh; call dword ptr gs:[0x10]; 
0x001707a2: sub byte ptr [eax + 0x57], dl; call dword ptr [ecx + 0x18]; 
0x00132371: sub byte ptr [eax + 0x66], bh; call dword ptr gs:[0x10]; 
0x0012e1ca: sub byte ptr [eax + 0x78], bh; mov dword ptr [ecx], ebx; int 0x80; 
0x000629ef: sub byte ptr [eax + 0x7d], 0xf9; call dword ptr [eax - 0x18]; 
0x001295ea: sub byte ptr [eax + 0x90], bh; call dword ptr gs:[0x10]; 
0x0012ac9a: sub byte ptr [eax + 0x91], bh; call dword ptr gs:[0x10]; 
0x0012d8aa: sub byte ptr [eax + 0x92], bh; call dword ptr gs:[0x10]; 
0x0011fd9a: sub byte ptr [eax + 0xa8], bh; call dword ptr gs:[0x10]; 
0x0011522a: sub byte ptr [eax + 0xdd], bh; call dword ptr gs:[0x10]; 
0x000915e2: sub byte ptr [eax + 0xf0], bh; call dword ptr gs:[0x10]; 
0x001207ca: sub byte ptr [eax + 3], bh; call dword ptr gs:[0x10]; 
0x0012197a: sub byte ptr [eax + 4], bh; call dword ptr gs:[0x10]; 
0x0019700a: sub byte ptr [eax + 4], cl; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00199224: sub byte ptr [eax + eax], al; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000a4c32: sub byte ptr [eax + eax], bh; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00059e81: sub byte ptr [eax + edi*8], 0xff; call dword ptr [eax + 0x6a]; 
0x00037df2: sub byte ptr [eax + edi*8], 0xff; call dword ptr [eax - 0x75]; 
0x000cda18: sub byte ptr [eax + edi*8], 0xff; call dword ptr [eax - 1]; 
0x00151fce: sub byte ptr [eax - 0x50], 0xf9; call dword ptr [eax + 0x68]; 
0x00151e95: sub byte ptr [eax - 0x50], 0xf9; call dword ptr [eax - 0x73]; 
0x000d454c: sub byte ptr [eax - 0x73], dl; inc esp; and al, 0x34; push eax; push dword ptr [esi + 8]; call ebx; 
0x00180769: sub byte ptr [eax - 0x73], dl; xchg dword ptr [eax + ebp*4 - 0x72b00000], ecx; xchg dword ptr [esi], edi; arpl cx, di; call dword ptr [eax + 0x6a]; 
0x00186d7c: sub byte ptr [eax - 0x73], dl; xchg esp, ecx; jl 0x186d77; call dword ptr [eax - 0x73]; 
0x0016c156: sub byte ptr [eax - 0x7d], dl; rcr byte ptr [eax], 0x50; call 0x16bf00; add esp, 0x2c; ret; 
0x00054e06: sub byte ptr [eax - 0xa], dl; ret 0x7501; 
0x000a388d: sub byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x418d4451], cl; cmp byte ptr [ecx + 0x39102444], cl; ret 0x840f; 
0x0008caa1: sub byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0008af19: sub byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x001208e1: sub byte ptr [eax], al; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000ebf2c: sub byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000d973a: sub byte ptr [ebp + 0x63], dh; pop edi; pop esi; ret; 
0x000c45a5: sub byte ptr [ebp + 0x708a8bc0], al; add dword ptr [eax], eax; add byte ptr [ebp + 0x3ce892], cl; add byte ptr [edi], cl; inc esp; ret 0x8b65; 
0x000ac377: sub byte ptr [ebp + eax - 0x1a7f000a], 2; lea edx, [edx - 0x18f114]; cmove eax, edx; ret; 
0x0002bc5b: sub byte ptr [ebp - 0x2e7af00a], al; or byte ptr [eax], al; add byte ptr [ebx - 0x76e3db8c], cl; ret 0xb60f; 
0x0012e5cc: sub byte ptr [ebp - 0x57c16b0], cl; add dword ptr [edi], ecx; xchg edi, eax; ret 0xf883; 
0x00186076: sub byte ptr [ebp - 0x644e379], cl; call dword ptr [eax - 0x73]; 
0x0017e2e4: sub byte ptr [ebp - 0x6457779], cl; call dword ptr [eax - 0x73]; 
0x0016ba07: sub byte ptr [ebp - 0x64a0b79], cl; call dword ptr [eax - 0x73]; 
0x0011ee64: sub byte ptr [ebp - 0x65cfb7d], cl; call dword ptr [eax - 0x73]; 
0x000953d7: sub byte ptr [ebp - 0x67c4380], cl; call dword ptr [eax - 0x18]; 
0x0005112d: sub byte ptr [ebp - 0x6878f79], cl; call dword ptr [eax - 0x73]; 
0x000511c0: sub byte ptr [ebp - 0x687cb79], cl; call dword ptr [eax - 0x73]; 
0x00186099: sub byte ptr [ebp - 0x690d379], cl; call dword ptr [eax - 0x73]; 
0x0002948b: sub byte ptr [ebp - 0x6945379], cl; call dword ptr [eax + 0x68]; 
0x00029323: sub byte ptr [ebp - 0x6945379], cl; call dword ptr [eax - 0x73]; 
0x0016e3c4: sub byte ptr [ebp - 0x69c6880], cl; jmp dword ptr [ebp - 0x75]; 
0x0016de44: sub byte ptr [ebp - 0x69c7480], cl; jmp dword ptr [ebp - 0x75]; 
0x0016db74: sub byte ptr [ebp - 0x69c8180], cl; jmp dword ptr [ebp - 0x75]; 
0x0016d764: sub byte ptr [ebp - 0x69c8f80], cl; jmp dword ptr [ebp - 0x75]; 
0x0016d0e4: sub byte ptr [ebp - 0x69c9b80], cl; jmp dword ptr [ebp - 0x75]; 
0x0016cd44: sub byte ptr [ebp - 0x69caa80], cl; jmp dword ptr [ebp - 0x75]; 
0x0016a2a4: sub byte ptr [ebp - 0x69d6a80], cl; jmp dword ptr [ebp - 0x75]; 
0x00169f34: sub byte ptr [ebp - 0x69d7680], cl; jmp dword ptr [ebp - 0x75]; 
0x00147ca0: sub byte ptr [ebp - 0x6a5d97d], cl; call dword ptr [eax + 0x68]; 
0x0003f53f: sub byte ptr [ebp - 0x6d0f37d], cl; call dword ptr [eax - 0x18]; 
0x0003fe3f: sub byte ptr [ebp - 0x6d3237b], cl; dec dword ptr [ecx - 0x76d3dbbc]; ret 0x4489; 
0x0003fb2a: sub byte ptr [ebp - 0x6d3237b], cl; dec dword ptr [ecx - 0x76d3dbbc]; ret 0xc189; 
0x000debee: sub byte ptr [ebp - 0x72b28b0a], al; push esp; and al, 0x2c; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000d168d: sub byte ptr [ebp - 0x7d368], cl; call dword ptr [ebx - 1]; 
0x0004fa22: sub byte ptr [ebp - 0x7d368], cl; dec dword ptr [ebp - 0x6d07c80]; call dword ptr [ebx + 0x6a]; 
0x0004f0fb: sub byte ptr [ebp - 0x7d379], cl; call dword ptr [eax - 0x73]; 
0x000d1362: sub byte ptr [ebp - 0x7d380], cl; call dword ptr [eax - 1]; 
0x00062005: sub byte ptr [ebp - 7], bh; call dword ptr [eax - 0x73]; 
0x00121cc6: sub byte ptr [ebx + 0x347409f9], al; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00176478: sub byte ptr [ebx + 0x50510450], cl; call dword ptr [edx + 8]; 
0x00179925: sub byte ptr [ebx + 0x50510850], cl; call dword ptr [edx + 0xc]; 
0x0013749b: sub byte ptr [ebx + 0x53500cc4], al; push 0x2000001; call dword ptr [ebp + 0x14]; 
0x00126b0e: sub byte ptr [ebx + 0x548b20c4], al; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x126b23; add esp, 0x1c; ret; 
0x00174323: sub byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x0015a85e: sub byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x000a6228: sub byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret; 
0x00028dcd: sub byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; jmp eax; 
0x0012d1dd: sub byte ptr [ebx + 0x652c2454], cl; sub edx, dword ptr [0x14]; jne 0x12d1ef; add esp, 0x3c; ret; 
0x00195a8a: sub byte ptr [ebx + 4], bl; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0017b842: sub byte ptr [ebx + ebx - 0x7d], dh; in al, dx; add al, 0x6a; call dword ptr [ebp + 0x56]; 
0x0017b842: sub byte ptr [ebx + ebx - 0x7d], dh; in al, dx; add al, 0x6a; call dword ptr [ebp + 0x56]; call edi; 
0x0009d630: sub byte ptr [ebx + edi + 0x48890000], 0xc; ret; 
0x0013d657: sub byte ptr [ebx + edx*2], 0xf5; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x001866e0: sub byte ptr [ebx - 0x2776db3c], al; pop ebx; pop esi; ret; 
0x00121fe7: sub byte ptr [ebx - 0x47efdbb4], cl; daa; add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; call dword ptr gs:[0x10]; 
0x00129f7b: sub byte ptr [ebx - 0x72d3db8c], cl; inc ebx; inc dword ptr [ebx + 0x287602f8]; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x000e04d3: sub byte ptr [ebx - 0x72dbdbbc], cl; and byte ptr [edx + 0x46], 0xf9; call dword ptr [eax + 0x53]; 
0x000e043c: sub byte ptr [ebx - 0x72dbdbbc], cl; sbb byte ptr [ecx + 0x46], 0xf9; call dword ptr [eax + 0x53]; 
0x00129a07: sub byte ptr [ebx - 0x74cfdba4], cl; dec esp; and al, 0x34; mov eax, 0x14d; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0012a337: sub byte ptr [ebx - 0x74cfdba4], cl; dec esp; and al, 0x34; mov eax, 0x14e; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000fb7b7: sub byte ptr [ebx - 0x74cfdba4], cl; dec esp; and al, 0x34; mov eax, 0xb4; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000fb977: sub byte ptr [ebx - 0x74cfdba4], cl; dec esp; and al, 0x34; mov eax, 0xb5; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00126f09: sub byte ptr [ebx - 0x74d3db8c], cl; jl 0x126f35; xor byte ptr [ebp - 0x6b3367d], cl; call dword ptr [eax + 0x55]; 
0x001220e7: sub byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00122067: sub byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0015a30e: sub byte ptr [ebx - 0x74ebdbbc], cl; or cl, ch; ret 0xfffe; 
0x000aca17: sub byte ptr [ebx - 0x76d3dbac], cl; je 0xaca43; sbb al, 0x83; rol byte ptr [ecx], 0x83; ret; 
0x000ec9fb: sub byte ptr [ebx - 0x76d7dbb4], cl; ret 0xf983; 
0x00107c6c: sub byte ptr [ebx - 0x76f3db84], cl; ret 0xf889; 
0x001868c7: sub byte ptr [ebx - 0x7aebdbac], cl; sal byte ptr [edx + eax - 0x75], cl; add al, byte ptr [ebx]; inc ebx; add al, 0x89; ret; 
0x00036f2b: sub byte ptr [ebx - 0x7bf0d3c0], cl; ret; 
0x001418c7: sub byte ptr [ebx - 0x7cd3db8c], cl; ret 0x8902; 
0x00137a03: sub byte ptr [ebx - 0xaff33c], al; je 0x137a2f; or al, 0x68; add dword ptr [eax], eax; add byte ptr [edx], al; call dword ptr [ebp + 0x14]; 
0x0012a704: sub byte ptr [ebx], al; add byte ptr [eax], al; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x0002c52b: sub byte ptr [ebx], ch; stc; call dword ptr [eax - 0x18]; 
0x00180f4d: sub byte ptr [ecx + 0x245c89d9], cl; adc byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc105; 
0x00037666: sub byte ptr [ecx + 0x39f329cb], cl; ret; 
0x001781d9: sub byte ptr [ecx + 0x6a], dl; add al, 0x50; call dword ptr [edx + 0x14]; 
0x000511b3: sub byte ptr [ecx - 0x16d3dbac], cl; mov dword ptr [0x8bfffff4], eax; jl 0x511e4; sub byte ptr [ebp - 0x687cb79], cl; call dword ptr [eax - 0x73]; 
0x0014e090: sub byte ptr [ecx - 0x4436b], cl; jmp dword ptr [ebp - 0x5f]; 
0x001321f6: sub byte ptr [ecx - 0x44fbdba4], cl; adc byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00131fc6: sub byte ptr [ecx - 0x44fbdba4], cl; adc dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00179921: sub byte ptr [ecx - 0x74d7dbac], cl; push eax; or byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x000fcb70: sub byte ptr [ecx - 0x76ebdbbc], cl; ret 0x478b; 
0x001519f3: sub byte ptr [ecx - 0x7ccbdbbc], cl; les ecx, ptr [ecx + ecx*4]; call 0x4424e386; ret 0x148b; 
0x000ce744: sub byte ptr [ecx - 0xa], bl; dec dword ptr [ebx - 0x72ebdb84]; xchg dword ptr [eax + edi*2], esi; stc; call dword ptr [eax + 0x68]; 
0x0005b550: sub byte ptr [ecx - 7], bh; call dword ptr [eax - 0x18]; 
0x0013a479: sub byte ptr [ecx], 0x56; stc; call dword ptr [eax - 0x75]; 
0x000709ee: sub byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [ebx + 0x100955c], cl; ret; 
0x0011f63e: sub byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001aa7e4: sub byte ptr [ecx], al; add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x0003d35b: sub byte ptr [ecx], al; add byte ptr [eax], al; pop ebx; ret; 
0x000a6c6b: sub byte ptr [ecx], al; je 0xa6d48; sub esp, 8; push esi; push dword ptr [ebx + 0x24]; call eax; 
0x000a6e26: sub byte ptr [ecx], al; jne 0xa6e00; sub esp, 0xc; push eax; call edx; 
0x00081944: sub byte ptr [ecx], al; ret 0xe852; 
0x0003dcb7: sub byte ptr [ecx], al; ret; 
0x000d9737: sub byte ptr [ecx], bh; dec edi; sub byte ptr [ebp + 0x63], dh; pop edi; pop esi; ret; 
0x0004846a: sub byte ptr [ecx], bh; ret 0x840f; 
0x0014a35d: sub byte ptr [ecx], bh; ret 0x9f7e; 
0x0019918a: sub byte ptr [ecx], ch; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192c1e: sub byte ptr [ecx], cl; rcr byte ptr [ebx + 0xf], 1; mov dh, 0xc0; neg eax; ret; 
0x001aede5: sub byte ptr [ecx], dh; call ebx; 
0x0005ebf3: sub byte ptr [ecx], dh; rol byte ptr [ebx + 0xf41087f], cl; xchg esp, eax; ret 0x6a52; 
0x0013bc55: sub byte ptr [edi + 0x56], 0xf9; call dword ptr [eax - 0x75]; 
0x000d9777: sub byte ptr [edi + 0x5e], bl; ret; 
0x0016c1da: sub byte ptr [edi + 0x62], 0xf9; call dword ptr [eax + 0x57]; 
0x00169c5e: sub byte ptr [edi + 0x62], 0xf9; jmp dword ptr [ebp - 0x75]; 
0x000decc8: sub byte ptr [edi + ecx*4 + 2], bl; jbe 0xdecd8; mov eax, edx; ret; 
0x00024f97: sub byte ptr [edi - 7], 0xff; push eax; push 1; call 0x121920; add esp, 0x1c; ret; 
0x0015af2b: sub byte ptr [edi - 7], bl; call dword ptr [eax - 0x18]; 
0x0015b0be: sub byte ptr [edi - 7], bl; call dword ptr [eax - 0x73]; 
0x001aa9dc: sub byte ptr [edi], 1; add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x00108dab: sub byte ptr [edi], cl; mov dh, 0x46; add al, 0x89; ret 0xe283; 
0x0005a084: sub byte ptr [edi], cl; mov esi, 0x8b1b244c; je 0x5a0b1; sbb al, 0x89; ret 0xc801; 
0x00180f62: sub byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00089513: sub byte ptr [edx + 0x56], dl; call dword ptr [eax + 0x48]; 
0x0018f487: sub byte ptr [edx + eax*4], 0xeb; call dword ptr [eax + 0x6a]; 
0x0011f6c6: sub byte ptr [edx - 0x64], ch; call 0x11f6e0; add esp, 0x2c; ret; 
0x00083de1: sub byte ptr [edx - 0x75], dl; inc esp; and al, 0x34; push eax; call ebx; 
0x00061474: sub byte ptr [edx - 1], ch; push dword ptr [esp + 0x2c]; call 0x7ea40; add esp, 0x2c; ret; 
0x0005ba49: sub byte ptr [edx - 7], bh; call dword ptr [eax - 0x73]; 
0x00092d3b: sub byte ptr [edx], al; add byte ptr [eax], al; push edx; call eax; 
0x00036514: sub byte ptr [edx], ch; call 0x364a0; add esp, 0x2c; ret; 
0x0009a62c: sub byte ptr [edx], ch; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x94be0; add esp, 0x2c; ret; 
0x00029131: sub byte ptr [edx], ch; push ebx; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; call edi; 
0x00124825: sub byte ptr [esi + 0x4a], 0xf9; call dword ptr [eax - 0x18]; 
0x00143649: sub byte ptr [esi + 0x59], 0xf9; call dword ptr [eax + 0x6a]; 
0x00115630: sub byte ptr [esi + 0x5f], bl; ret; 
0x0008cc9f: sub byte ptr [esi + ecx], 0; ret; 
0x0002f01d: sub byte ptr [esi - 1], 0xff; jmp dword ptr [ebp - 0x5f]; 
0x000ddf83: sub byte ptr [esi - 7], al; call dword ptr [eax - 0x18]; 
0x00199c8a: sub byte ptr [esi], bl; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c6d4: sub byte ptr [esi], dl; sti; jmp dword ptr [esi - 0x70]; 
0x000ab4fb: sub byte ptr [esp + ecx*4 - 0xa], 0xff; test byte ptr [ecx + 0x76], 0x10; cmove eax, edx; ret; 
0x0003f9db: sub ch, byte ptr [edi]; stc; call dword ptr [ebx + 0x50]; 
0x00151577: sub ch, dh; dec dword ptr [ebp - 0x64f437d]; call dword ptr [eax + 0x68]; 
0x000ec586: sub cl, 0x46; stc; call dword ptr [eax - 0x18]; 
0x0010f73c: sub cl, bh; call dword ptr [eax + 0x6a]; 
0x00025e40: sub cl, bh; call dword ptr [eax - 0x18]; 
0x00024f15: sub cl, bh; call dword ptr [eax - 1]; 
0x000ea870: sub cl, byte ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x0005baf5: sub cl, byte ptr [ebx + 0x458b045d]; or byte ptr [ecx], bh; ret; 
0x0012f295: sub cl, byte ptr [ebx - 0x74e7dbb4]; push esp; and al, 0x1c; mov eax, 0xa3; mov ebx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00110bca: sub cl, byte ptr [ecx - 7]; call dword ptr [eax - 0x73]; 
0x000a42d8: sub cl, byte ptr [edi]; xchg ebp, eax; ret; 
0x001af656: sub cl, ch; dec esi; idiv edi; inc dword ptr [ebx - 0x71f0e008]; mov eax, dword ptr [0x89000008]; ret; 
0x000d0c47: sub cl, ch; inc ebx; idiv bh; dec dword ptr [ebx - 0x72d3db84]; xchg dword ptr [ebp + ebx*4 - 7], esp; call dword ptr [eax - 0x73]; 
0x000faf6b: sub dh, 0x47; stc; call dword ptr [eax - 0x18]; 
0x00024982: sub dh, 0x63; stc; call dword ptr [eax - 0x18]; 
0x000a6af8: sub dh, bh; mov dword ptr [ebx + 0x18], ebp; mov dword ptr [ebx + 0x20], esi; mov dword ptr [ebx], eax; push eax; call ecx; 
0x0007c6c0: sub dh, byte ptr [eax - 6]; jmp dword ptr [esi - 0x70]; 
0x0007bf18: sub dh, byte ptr [edi - 6]; jmp dword ptr [esi - 0x70]; 
0x000fa8be: sub dh, byte ptr [esp + eax + 0x3c]; aas; jne 0xfa8d9; mov eax, 1; ret; 
0x000a6d14: sub dh, dh; ret 0x7502; 
0x00041557: sub dh, dh; ret 0x7503; 
0x0003003b: sub dword ptr [eax + 0x2b], -7; call dword ptr [eax - 0x18]; 
0x00171bee: sub dword ptr [eax + 0x56], -7; call dword ptr [eax + 0x6a]; 
0x001641f2: sub dword ptr [eax + 0x680000a2], 0; add al, 0; add byte ptr [eax - 0x73], dl; sbb dword ptr [eax + 0x500000a2], -0x73; cmp esp, 0x55; bnd call dword ptr [eax - 0x18]; 
0x0008dddd: sub dword ptr [eax + 1], 0x43890000; or al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x001990c4: sub dword ptr [eax + eax], eax; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014202e: sub dword ptr [eax + edi*8], -1; call dword ptr [eax + 0x6a]; 
0x000de891: sub dword ptr [eax - 0x62], -7; call dword ptr [eax - 0x73]; 
0x00144ca1: sub dword ptr [eax - 0xc], 1; je 0x144cb0; add esp, 4; pop ebx; pop esi; ret; 
0x000eb741: sub dword ptr [eax], -0x10; clc; inc dword ptr [ecx]; fidivr word ptr [esi]; jmp esi; 
0x000de8c3: sub dword ptr [eax], -0x62; stc; call dword ptr [eax - 0x18]; 
0x000a35d6: sub dword ptr [eax], -0x6f; stc; call dword ptr [eax - 0x18]; 
0x00157efc: sub dword ptr [eax], 0; add byte ptr [eax - 0x73], dl; sub esp, 0x4c; int1; call dword ptr [eax - 0x73]; 
0x00092d3a: sub dword ptr [eax], 0x52000002; call eax; 
0x0015af2a: sub dword ptr [eax], 0x5f; stc; call dword ptr [eax - 0x18]; 
0x0015b0bd: sub dword ptr [eax], 0x5f; stc; call dword ptr [eax - 0x73]; 
0x000f0164: sub dword ptr [eax], 0x6afff9a0; add eax, 0x4c818d50; je 0xf016a; call dword ptr [eax - 0x18]; 
0x00114a87: sub dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00141b26: sub dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0004d4d3: sub dword ptr [eax], ecx; str word ptr [ebx - 0x72e7db84]; xchg dword ptr [eax + 0x78], ebx; stc; call dword ptr [eax - 0x73]; 
0x0010dcd0: sub dword ptr [ebp + 0x5e5bf465], ecx; pop edi; pop ebp; ret; 
0x00152ad4: sub dword ptr [ebp - 7], ebx; call dword ptr [eax - 0x18]; 
0x00176762: sub dword ptr [ebp - 7], esp; call dword ptr [edi + 0x50]; 
0x001866c6: sub dword ptr [ebx + 0x505208ec], eax; call dword ptr [ebx + 0x24]; 
0x0007d56f: sub dword ptr [ebx + 0x515604ec], eax; push ebx; call dword ptr [ebp + 0x1c]; 
0x0007fd35: sub dword ptr [ebx + 0x525604ec], eax; push ebx; call dword ptr [ebp + 0x1c]; 
0x000fd389: sub dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x0014aad6: sub dword ptr [ebx + 0x5e5b1cc4], eax; pop edi; pop ebp; ret; 
0x000de96f: sub dword ptr [ebx + 0x5e5b24c4], eax; ret; 
0x00143aef: sub dword ptr [ebx + 0x5e5b4cc4], eax; pop edi; pop ebp; ret; 
0x0009a73c: sub dword ptr [ebx + 0xc], 1; pop ebx; pop esi; pop edi; ret; 
0x00168063: sub dword ptr [ebx + edx*2], -0xf; call dword ptr [eax - 0x73]; 
0x001876a3: sub dword ptr [ebx - 0x3776ef3c], eax; pop ebx; pop esi; pop edi; ret; 
0x0012f32e: sub dword ptr [ebx - 0x74dfdba4], ecx; dec esp; and al, 0x24; mov eax, 0x156; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x000403fe: sub dword ptr [ebx - 0x74dfdba4], ecx; dec esp; and al, 0x24; mov eax, 0x163; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001295ae: sub dword ptr [ebx - 0x74dfdba4], ecx; dec esp; and al, 0x24; mov eax, 0x90; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0012ac5e: sub dword ptr [ebx - 0x74dfdba4], ecx; dec esp; and al, 0x24; mov eax, 0x91; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0012d86e: sub dword ptr [ebx - 0x74dfdba4], ecx; dec esp; and al, 0x24; mov eax, 0x92; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011fd5e: sub dword ptr [ebx - 0x74dfdba4], ecx; dec esp; and al, 0x24; mov eax, 0xa8; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0012078e: sub dword ptr [ebx - 0x74dfdba4], ecx; dec esp; and al, 0x24; mov eax, 3; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0012193e: sub dword ptr [ebx - 0x74dfdba4], ecx; dec esp; and al, 0x24; mov eax, 4; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x000fdf9f: sub dword ptr [ebx], 0x48; stc; call dword ptr [eax + 0x55]; 
0x00061759: sub dword ptr [ebx], esi; stc; call dword ptr [eax + 0x53]; 
0x000eadf4: sub dword ptr [ecx + 0x2c], -7; call dword ptr [eax - 0x18]; 
0x0005e076: sub dword ptr [ecx + 0x31], -7; call dword ptr [eax - 0x18]; 
0x0009a465: sub dword ptr [ecx + 0x90c4], eax; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00124227: sub dword ptr [ecx + eax - 0x4c750000], -4; add byte ptr [eax], al; add bh, bh; xor byte ptr [ebp - 0x6a6a47d], cl; call dword ptr [eax - 1]; 
0x00166d37: sub dword ptr [ecx + eax*4], -0xe; call dword ptr [eax - 0x18]; 
0x00152ad3: sub dword ptr [ecx], 0x5d; stc; call dword ptr [eax - 0x18]; 
0x0011f707: sub dword ptr [ecx], eax; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x00071ec8: sub dword ptr [ecx], eax; ret 0x598d; 
0x00127021: sub dword ptr [edi + 0x4d], -7; call dword ptr [eax + 0x55]; 
0x00060952: sub dword ptr [edi + 0x53], -7; call dword ptr [eax + 0x6a]; 
0x0016c97e: sub dword ptr [edi + 0x62], -7; call dword ptr [eax + 0x51]; 
0x0016d37a: sub dword ptr [edi + 0x62], -7; call dword ptr [eax + 0x57]; 
0x0006ff72: sub dword ptr [edi + 1], edx; ret; 
0x001a75bc: sub dword ptr [edi - 0x7cfffffe], -0x13; adc byte ptr [edi], cl; xchg byte ptr [edi - 0x7cfffffe], al; ret 0x8310; 
0x00048937: sub dword ptr [edi], -7; call dword ptr [ebx + 0x6a]; 
0x000577b7: sub dword ptr [edi], -7; call dword ptr [esi + 0x6a]; 
0x000600e2: sub dword ptr [edi], -7; dec dword ptr [ecx - 0x197cdbc4]; and dh, dh; ret 0xf50; 
0x0016806a: sub dword ptr [edi], 0x62; stc; call dword ptr [eax - 0x18]; 
0x001681fd: sub dword ptr [edi], 0x62; stc; call dword ptr [eax - 0x73]; 
0x00077532: sub dword ptr [edi], ecx; test al, dh; fdivr st(7); jmp dword ptr [ebp - 0x5f]; 
0x000873af: sub dword ptr [edx + eax*4], -0x1c; call dword ptr [eax - 0x73]; 
0x00157e47: sub dword ptr [edx + edx*4], -0xf; call dword ptr [eax - 0x18]; 
0x001619cb: sub dword ptr [edx], 0x60; stc; call dword ptr [eax - 0x18]; 
0x000a550d: sub dword ptr [esi + 0x43], -7; call dword ptr [eax - 0x18]; 
0x00158e13: sub dword ptr [esi + ecx*2], -0xf; call dword ptr [eax - 0x73]; 
0x0013a47a: sub dword ptr [esi - 7], edx; call dword ptr [eax - 0x75]; 
0x00127215: sub dword ptr [esi], 0x51; stc; call dword ptr [eax + 0x55]; 
0x0010ea10: sub eax, -0x5f; stc; call dword ptr [eax - 0x73]; 
0x00179371: sub eax, -0x80; pop esi; pop edi; ret; 
0x000c123b: sub eax, 0x10; pop edi; ret; 
0x00115b67: sub eax, 0x14; mov dword ptr [esp + 0x18c], ebp; mov ebp, dword ptr [esp + 0x1b8]; call dword ptr gs:[0x10]; 
0x0006c2a9: sub eax, 0x2bffffb4; test dword ptr [eax - 0x7c000005], edi; in al, dx; or al, 0x89; ret; 
0x00193505: sub eax, 0x300047c; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00104889: sub eax, 0x31fffff7; fucomi st(3); ret 0xc901; 
0x00100862: sub eax, 0x3908568b; ret 0x267e; 
0x00183da5: sub eax, 0x55; lahf; sti; jmp dword ptr [esi - 0x70]; 
0x0012c522: sub eax, 0x5704ec83; push 1; push ebx; call esi; 
0x00171968: sub eax, 0x5b10c483; pop esi; pop edi; ret; 
0x00182f8c: sub eax, 0x5b3cc483; pop esi; pop edi; pop ebp; ret; 
0x00165634: sub eax, 0x5bf4658d; pop esi; pop edi; pop ebp; ret; 
0x001842ec: sub eax, 0x81000059; ret; 
0x001418ec: sub eax, 0x81000483; ret; 
0x00123cec: sub eax, 0x8100065f; ret; 
0x000e8dec: sub eax, 0x81000a0e; ret; 
0x000810ec: sub eax, 0x8100108b; ret; 
0x0008d0df: sub eax, 0x83ffffff; les ebx, ptr [eax]; pop ebx; ret; 
0x001238e1: sub eax, 0x8b000000; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x0010c102: sub eax, 0x8b530013; dec esp; and al, 0x10; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0014abf0: sub eax, 0x8beb0574; lea esi, [esi]; xor eax, eax; ret; 
0x000a2172: sub eax, 0x8d04ec83; test dword ptr [eax + 0x42], ecx; stc; call dword ptr [eax + 0x53]; 
0x00096dc8: sub eax, 0x8dfffffe; je 0x96df5; add bh, dh; ret 0; 
0x000b9f94: sub eax, 0xc030011; cdq; jmp ecx; 
0x00196e48: sub eax, 0xc381ffff; in eax, 0x49; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0012c42c: sub eax, 0xc483fff6; adc bl, ch; ret; 
0x00185820: sub eax, 0xe5868d50; stc; call dword ptr [eax - 0x18]; 
0x0009c0fd: sub eax, 0xec83001a; sbb byte ptr [ebp - 0x677bf80], cl; call dword ptr [eax - 0x18]; 
0x0014c371: sub eax, 1; add esp, 4; pop ebx; pop esi; ret; 
0x00141572: sub eax, 1; mov byte ptr [edx + 1], al; mov eax, 2; ret; 
0x0008a478: sub eax, 1; mov dword ptr [ebx + 0x1a78], eax; add esp, 8; pop ebx; ret; 
0x0002fdd8: sub eax, 1; mov dword ptr [ecx + 4], eax; add esp, 8; pop ebx; ret; 
0x0007d604: sub eax, 1; mov dword ptr [edx + 0x1a44], eax; ret; 
0x00087584: sub eax, 1; mov dword ptr [edx + 0x1a58], eax; ret; 
0x0008cdc4: sub eax, 1; mov dword ptr [edx + 0x1a78], eax; ret; 
0x0005ace4: sub eax, 1; mov dword ptr [edx + 4], eax; ret; 
0x00053718: sub eax, 1; ret; 
0x000a08ed: sub eax, 1; shr eax, 4; add eax, 1; mov dword ptr [edx + 0x388], eax; ret; 
0x0009c1d8: sub eax, 2; add esp, 0xc; ret; 
0x001243ef: sub eax, dword ptr [0x14]; jne 0x1243ff; add esp, 0x418; pop ebx; ret; 
0x001570b2: sub eax, dword ptr [0x14]; jne 0x1570be; add esp, 0x1c; ret; 
0x00179936: sub eax, dword ptr [0x14]; jne 0x179942; add esp, 0x4c; ret; 
0x001799a6: sub eax, dword ptr [0x14]; jne 0x1799b2; add esp, 0x4c; ret; 
0x00179a16: sub eax, dword ptr [0x14]; jne 0x179a22; add esp, 0x4c; ret; 
0x00179a79: sub eax, dword ptr [0x14]; jne 0x179a85; add esp, 0x4c; ret; 
0x00179ad9: sub eax, dword ptr [0x14]; jne 0x179ae5; add esp, 0x4c; ret; 
0x00179b46: sub eax, dword ptr [0x14]; jne 0x179b52; add esp, 0x4c; ret; 
0x00179bc6: sub eax, dword ptr [0x14]; jne 0x179bd2; add esp, 0x4c; ret; 
0x0017a0b7: sub eax, dword ptr [0x14]; jne 0x17a0c3; add esp, 0x1c; ret; 
0x0017a106: sub eax, dword ptr [0x14]; jne 0x17a13c; add esp, 0x1c; ret; 
0x0017b8a0: sub eax, dword ptr [0x14]; jne 0x17b8ac; add esp, 0x2c; ret; 
0x0003ad77: sub eax, dword ptr [0x14]; jne 0x3ad87; mov eax, edx; add esp, 0x1c; ret 4; 
0x0003c2e6: sub eax, dword ptr [0x14]; jne 0x3c2f3; add esp, 0x18; pop ebx; ret; 
0x0003efea: sub eax, dword ptr [0x14]; jne 0x3eff6; add esp, 0x1c; ret; 
0x0003f0fd: sub eax, dword ptr [0x14]; jne 0x3f109; add esp, 0x1c; ret; 
0x0005f673: sub eax, dword ptr [0x14]; jne 0x5f68e; add esp, 0x78; pop ebx; ret; 
0x00087510: sub eax, dword ptr [0x14]; jne 0x8752c; add esp, 0x28; pop ebx; ret; 
0x0008e8ea: sub eax, dword ptr [0x548b001b]; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x294], edx; ret; 
0x0010e386: sub eax, dword ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00075532: sub eax, dword ptr [eax]; add byte ptr [ebx - 0x5177b], cl; call ecx; 
0x00081514: sub eax, dword ptr [ebx + 0x565308ec]; call dword ptr [edi + 0x18]; 
0x00175b4f: sub eax, dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x00035121: sub eax, dword ptr [ebx + 4]; add esp, 4; pop ebx; pop esi; ret; 
0x001370b4: sub eax, dword ptr [ebx + 4]; pop ebx; pop esi; pop edi; ret; 
0x00131a5d: sub eax, dword ptr [ebx - 0x2776df3c]; pop ebx; pop esi; pop edi; ret; 
0x000c4b6c: sub eax, dword ptr [ebx - 0x7bf0fa08]; push 0x8dffffff; xchg byte ptr [eax], ch; pushfd; stc; call dword ptr [eax - 0x73]; 
0x0013d131: sub eax, dword ptr [ecx - 0x49170002]; idiv bh; jmp dword ptr [esi - 0x70]; 
0x00086923: sub eax, dword ptr [edx + 0x10]; ret; 
0x000867e5: sub eax, dword ptr [edx + 0x18]; sar eax, 2; ret; 
0x000867f3: sub eax, dword ptr [edx + 0x1c]; ret; 
0x0008d373: sub eax, dword ptr [edx + 0xc]; ret; 
0x00086915: sub eax, dword ptr [edx + 0xc]; sar eax, 2; ret; 
0x0008c96f: sub eax, dword ptr [edx + 8]; ret; 
0x00081cb6: sub eax, dword ptr [edx + 8]; sar eax, 2; ret; 
0x000311ce: sub eax, dword ptr [edx]; ret; 
0x001716fb: sub eax, dword ptr [esi + 0xc]; add esp, 4; add eax, edx; pop ebx; pop esi; ret; 
0x000c2ed6: sub eax, dword ptr [esp + 4]; ret; 
0x001243ee: sub eax, dword ptr gs:[0x14]; jne 0x1243ff; add esp, 0x418; pop ebx; ret; 
0x001570b1: sub eax, dword ptr gs:[0x14]; jne 0x1570be; add esp, 0x1c; ret; 
0x00179935: sub eax, dword ptr gs:[0x14]; jne 0x179942; add esp, 0x4c; ret; 
0x001799a5: sub eax, dword ptr gs:[0x14]; jne 0x1799b2; add esp, 0x4c; ret; 
0x00179a15: sub eax, dword ptr gs:[0x14]; jne 0x179a22; add esp, 0x4c; ret; 
0x00179a78: sub eax, dword ptr gs:[0x14]; jne 0x179a85; add esp, 0x4c; ret; 
0x00179ad8: sub eax, dword ptr gs:[0x14]; jne 0x179ae5; add esp, 0x4c; ret; 
0x00179b45: sub eax, dword ptr gs:[0x14]; jne 0x179b52; add esp, 0x4c; ret; 
0x00179bc5: sub eax, dword ptr gs:[0x14]; jne 0x179bd2; add esp, 0x4c; ret; 
0x0017a0b6: sub eax, dword ptr gs:[0x14]; jne 0x17a0c3; add esp, 0x1c; ret; 
0x0017a105: sub eax, dword ptr gs:[0x14]; jne 0x17a13c; add esp, 0x1c; ret; 
0x0017b89f: sub eax, dword ptr gs:[0x14]; jne 0x17b8ac; add esp, 0x2c; ret; 
0x0003ad76: sub eax, dword ptr gs:[0x14]; jne 0x3ad87; mov eax, edx; add esp, 0x1c; ret 4; 
0x0003c2e5: sub eax, dword ptr gs:[0x14]; jne 0x3c2f3; add esp, 0x18; pop ebx; ret; 
0x0003efe9: sub eax, dword ptr gs:[0x14]; jne 0x3eff6; add esp, 0x1c; ret; 
0x0003f0fc: sub eax, dword ptr gs:[0x14]; jne 0x3f109; add esp, 0x1c; ret; 
0x0005f672: sub eax, dword ptr gs:[0x14]; jne 0x5f68e; add esp, 0x78; pop ebx; ret; 
0x0008750f: sub eax, dword ptr gs:[0x14]; jne 0x8752c; add esp, 0x28; pop ebx; ret; 
0x001a7ba5: sub eax, ebp; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00145e25: sub eax, ebx; add esp, 8; pop ebx; ret; 
0x000c595b: sub eax, ebx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001716ed: sub eax, ecx; add esp, 4; pop ebx; pop esi; ret; 
0x001a5969: sub eax, ecx; pop ebp; pop ebx; ret; 
0x001a0aa5: sub eax, ecx; pop ebp; ret; 
0x001a315c: sub eax, ecx; pop ebx; ret; 
0x0019ad64: sub eax, ecx; pop edi; call 0x189c1d; add ebx, 0x40f04; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019de6a: sub eax, ecx; pop esi; call 0x189c1d; add ebx, 0x3e33e; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001a783f: sub eax, ecx; pop esi; pop edi; pop ebp; pop ebx; ret; 
0x001a62c1: sub eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x001a72db: sub eax, ecx; pop esi; pop edi; pop ebx; ret; 
0x001a5fcd: sub eax, ecx; pop esi; pop edi; ret; 
0x0019f2f8: sub eax, ecx; ret; 
0x000b0057: sub eax, edi; bsf edx, edx; add eax, edx; pop edi; pop esi; ret; 
0x0008a22e: sub eax, edi; pop edi; pop ebp; ret; 
0x00087c06: sub eax, edx; cdq; push edx; push eax; push ebx; call dword ptr [esi + 0x40]; 
0x0018b8a6: sub eax, edx; cmp eax, 0x593; ja 0x18b8c0; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x0007b9ac: sub eax, edx; cmp eax, 0x593; ja 0x7bab0; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x0007e830: sub eax, edx; cmp eax, 0x593; ja 0x7e8d1; sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x00080d6a: sub eax, edx; cmp eax, 0x593; ja 0x80da8; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x000849c5: sub eax, edx; cmp eax, 0x593; ja 0x84bf0; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x000876ee: sub eax, edx; cmp eax, 0x593; ja 0x87720; sub esp, 0xc; push ebx; call dword ptr [esi + 0x30]; 
0x000883f7: sub eax, edx; cmp eax, 0x593; ja 0x88440; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x0008b420: sub eax, edx; cmp eax, 0x593; ja 0x8b480; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x0008b4ca: sub eax, edx; cmp eax, 0x593; ja 0x8b4f8; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x00085198: sub eax, edx; mov dword ptr [ecx], eax; add esp, 8; xor eax, eax; pop ebx; ret; 
0x000904b2: sub eax, edx; mov dword ptr [ecx], eax; mov eax, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x001a9319: sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x00082570: sub eax, edx; push eax; push edx; push edi; call dword ptr [ebx + 0x38]; 
0x00042ab3: sub eax, edx; ret; 
0x0003c143: sub eax, edx; shr eax, 0x1f; ret; 
0x00181ad1: sub eax, edx; sti; dec dword ptr [ebx - 0xef4b]; dec dword ptr [ebp - 0x645437a]; call dword ptr [eax - 0x73]; 
0x000834d8: sub eax, edx; sub esp, 4; push eax; push edx; push esi; call ecx; 
0x0007ca65: sub ebp, dword ptr [ebp - 6]; jmp dword ptr [esi - 0x70]; 
0x00194d47: sub ebp, dword ptr [ecx + 4]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000ba886: sub ebx, 0x10; bsf edx, edx; call 0x189c31; add ecx, 0x11258f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b326a: sub ebx, 0x10; lea ecx, [edx + 0x10]; jne 0xb3800; pop edi; pop ebx; ret; 
0x000b3aaa: sub ebx, 0x10; lea ecx, [edx + 0x10]; jne 0xb3801; pop ebx; ret; 
0x000b39c2: sub ebx, 0xa; lea ecx, [edx + 0xa]; jne 0xb3801; pop ebx; ret; 
0x000b39e0: sub ebx, 0xb; lea ecx, [edx + 0xb]; jne 0xb3801; pop ebx; ret; 
0x000b3230: sub ebx, 0xc; lea ecx, [edx + 0xc]; jne 0xb3800; pop edi; pop ebx; ret; 
0x000b3a00: sub ebx, 0xc; lea ecx, [edx + 0xc]; jne 0xb3801; pop ebx; ret; 
0x000b35f4: sub ebx, 0xd; lea ecx, [edx + 0xd]; jne 0xb3800; pop edi; pop ebx; ret; 
0x000b3a24: sub ebx, 0xd; lea ecx, [edx + 0xd]; jne 0xb3801; pop ebx; ret; 
0x000b3624: sub ebx, 0xe; lea ecx, [edx + 0xe]; jne 0xb3800; pop edi; pop ebx; ret; 
0x000b3a54: sub ebx, 0xe; lea ecx, [edx + 0xe]; jne 0xb3801; pop ebx; ret; 
0x000b3654: sub ebx, 0xf; lea ecx, [edx + 0xf]; jne 0xb3800; pop edi; pop ebx; ret; 
0x000b3a84: sub ebx, 0xf; lea ecx, [edx + 0xf]; jne 0xb3801; pop ebx; ret; 
0x000b7f55: sub ebx, 0xf; lea ecx, [edx + 0xf]; jne 0xb7c51; pop ebx; ret; 
0x000b34b6: sub ebx, 1; lea ecx, [edx + 1]; jne 0xb3800; pop edi; pop ebx; ret; 
0x000b3896: sub ebx, 1; lea ecx, [edx + 1]; jne 0xb3801; pop ebx; ret; 
0x000b38b8: sub ebx, 2; lea ecx, [edx + 2]; jne 0xb3801; pop ebx; ret; 
0x000b34fe: sub ebx, 3; lea ecx, [edx + 3]; jne 0xb3800; pop edi; pop ebx; ret; 
0x000b38de: sub ebx, 3; lea ecx, [edx + 3]; jne 0xb3801; pop ebx; ret; 
0x000b38f6: sub ebx, 4; lea ecx, [edx + 4]; jne 0xb3801; pop ebx; ret; 
0x000b351c: sub ebx, 5; lea ecx, [edx + 5]; jne 0xb3800; pop edi; pop ebx; ret; 
0x000b391c: sub ebx, 5; lea ecx, [edx + 5]; jne 0xb3801; pop ebx; ret; 
0x000b353e: sub ebx, 6; lea ecx, [edx + 6]; jne 0xb3800; pop edi; pop ebx; ret; 
0x000b393e: sub ebx, 6; lea ecx, [edx + 6]; jne 0xb3801; pop ebx; ret; 
0x000b355c: sub ebx, 7; lea ecx, [edx + 7]; jne 0xb3800; pop edi; pop ebx; ret; 
0x000b395c: sub ebx, 7; lea ecx, [edx + 7]; jne 0xb3801; pop ebx; ret; 
0x000b397a: sub ebx, 8; lea ecx, [edx + 8]; jne 0xb3801; pop ebx; ret; 
0x000b7e0b: sub ebx, 8; lea ecx, [edx + 8]; jne 0xb7c51; pop ebx; ret; 
0x000b3580: sub ebx, 9; lea ecx, [edx + 9]; jne 0xb3800; pop edi; pop ebx; ret; 
0x000b39a0: sub ebx, 9; lea ecx, [edx + 9]; jne 0xb3801; pop ebx; ret; 
0x001577c4: sub ebx, dword ptr [ebx - 0x77]; rcr byte ptr [esi + 0x5f], 1; ret; 
0x000c09f8: sub ebx, ecx; add esi, ecx; call 0x189c31; add ecx, 0x10c673; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c09d8: sub ebx, ecx; add esi, ecx; call 0x189c31; add ecx, 0x10c693; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000baa58: sub ebx, ecx; add esi, ecx; call 0x189c31; add ecx, 0x11243f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000baa38: sub ebx, ecx; add esi, ecx; call 0x189c31; add ecx, 0x11245f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9418: sub ebx, ecx; add esi, ecx; call 0x189c31; add ecx, 0x11391f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b93f8: sub ebx, ecx; add esi, ecx; call 0x189c31; add ecx, 0x11393f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008bdb8: sub ebx, edx; lea eax, [ebx - 1]; pop ebx; ret; 
0x00081608: sub ebx, edx; sar ebx, 2; lea eax, [ebx - 1]; pop ebx; ret; 
0x0010cca8: sub ecx, -0x80; shr ecx, 2; rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x000eb864: sub ecx, 0x46; stc; call dword ptr [eax - 0x18]; 
0x0013f24a: sub ecx, 0x57; stc; call dword ptr [eax + 0x6a]; 
0x00053e75: sub ecx, 1; jae 0x53e70; mov eax, edx; pop ebx; pop esi; ret; 
0x0005af19: sub ecx, 1; mov dword ptr [eax], ecx; mov eax, edx; add esp, 0xc; ret; 
0x00084484: sub ecx, 1; mov dword ptr [edx + 4], ecx; pop ebx; pop esi; pop edi; ret; 
0x00042892: sub ecx, 1; mov eax, 2; bsr ecx, ecx; shl eax, cl; ret; 
0x00042862: sub ecx, 1; mov eax, 2; movzx ecx, cl; bsr ecx, ecx; shl eax, cl; ret; 
0x00042943: sub ecx, 1; mov eax, 2; movzx ecx, cx; bsr ecx, ecx; shl eax, cl; ret; 
0x0005af30: sub ecx, 1; xor edx, edx; mov dword ptr [eax], ecx; mov eax, edx; add esp, 0xc; ret; 
0x000a6351: sub ecx, 4; and eax, 1; cmovne eax, ecx; pop ebx; ret; 
0x0002553b: sub ecx, dword ptr [0x14]; jne 0x25547; add esp, 0x1c; ret; 
0x000dba5c: sub ecx, dword ptr [0x14]; jne 0xdba69; add esp, 0x28; pop ebx; ret; 
0x000fdfa0: sub ecx, dword ptr [eax - 7]; call dword ptr [eax + 0x55]; 
0x001716ea: sub ecx, dword ptr [esi + 0x2c]; sub eax, ecx; add esp, 4; pop ebx; pop esi; ret; 
0x0002553a: sub ecx, dword ptr gs:[0x14]; jne 0x25547; add esp, 0x1c; ret; 
0x000dba5b: sub ecx, dword ptr gs:[0x14]; jne 0xdba69; add esp, 0x28; pop ebx; ret; 
0x001717ea: sub ecx, eax; push ecx; push edx; mov dword ptr [esp + 0x14], edx; push dword ptr [esi]; call dword ptr [esi + 0x20]; 
0x00089771: sub ecx, eax; sub esp, 4; push ecx; push eax; push esi; call edx; 
0x0003bd49: sub ecx, eax; xor eax, ecx; shr eax, 0x1f; ret; 
0x000402cd: sub ecx, ebx; call dword ptr gs:[0x10]; 
0x0010cda1: sub ecx, edi; add ecx, 0x150; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x0010cc1e: sub ecx, edi; add ecx, 0x4c; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x000df076: sub ecx, edi; call dword ptr [eax + 0x53]; 
0x000dd389: sub ecx, edi; call dword ptr [eax + 0x56]; 
0x0014b7df: sub ecx, edi; call dword ptr [eax + 0x57]; 
0x000dd40d: sub ecx, edi; call dword ptr [eax + 0x6a]; 
0x000270ca: sub ecx, edi; call dword ptr [eax - 0x18]; 
0x00035f26: sub ecx, edi; call dword ptr [eax - 0x73]; 
0x0002806e: sub ecx, edi; call dword ptr [edi - 1]; 
0x00027bce: sub ecx, edi; call dword ptr [edx + 0x50]; 
0x000945be: sub ecx, edi; dec dword ptr [ecx - 0x7872af05]; daa; inc eax; stc; call dword ptr [eax - 0x18]; 
0x0013d99d: sub ecx, edi; jmp dword ptr [ebp - 0x75]; 
0x0008f5f2: sub ecx, edx; lea eax, [ecx + eax + 0x4000]; ret; 
0x0003ba7e: sub ecx, edx; not eax; and eax, ecx; ret; 
0x0003bade: sub ecx, edx; shr eax, 0x1f; shr ecx, 0x10; or eax, ecx; ret; 
0x000c1094: sub edi, 0x10; add eax, edi; pop edi; ret; 
0x001aba6b: sub edi, 0x10; jb 0x1abb30; lea eax, [eax + 0xf]; pop edi; ret; 
0x000dcde4: sub edi, 0x45; stc; call dword ptr [eax + 0x56]; 
0x001abae0: sub edi, 0xa; jb 0x1abb30; lea eax, [eax + 9]; pop edi; ret; 
0x001abaf0: sub edi, 0xb; jb 0x1abb30; lea eax, [eax + 0xa]; pop edi; ret; 
0x001abb00: sub edi, 0xd; jb 0x1abb30; lea eax, [eax + 0xc]; pop edi; ret; 
0x001abb10: sub edi, 0xe; jb 0x1abb30; lea eax, [eax + 0xd]; pop edi; ret; 
0x001abb20: sub edi, 0xf; jb 0x1abb30; lea eax, [eax + 0xe]; pop edi; ret; 
0x001aba80: sub edi, 2; jb 0x1abb30; lea eax, [eax + 1]; pop edi; ret; 
0x001aba90: sub edi, 3; jb 0x1abb30; lea eax, [eax + 2]; pop edi; ret; 
0x001ab9d8: sub edi, 4; jb 0x1abb30; lea eax, [eax + 3]; pop edi; ret; 
0x001abaa0: sub edi, 5; jb 0x1abb30; lea eax, [eax + 4]; pop edi; ret; 
0x001abab0: sub edi, 6; jb 0x1abb30; lea eax, [eax + 5]; pop edi; ret; 
0x001abac0: sub edi, 7; jb 0x1abb30; lea eax, [eax + 6]; pop edi; ret; 
0x001aba0b: sub edi, 8; jb 0x1abb30; lea eax, [eax + 7]; pop edi; ret; 
0x001abad0: sub edi, 9; jb 0x1abb30; lea eax, [eax + 8]; pop edi; ret; 
0x000301d2: sub edi, ecx; call dword ptr [eax + 0x56]; 
0x00029b43: sub edi, ecx; call dword ptr [eax - 0x18]; 
0x0002feeb: sub edi, ecx; call dword ptr [eax - 1]; 
0x0002fecd: sub edi, ecx; call dword ptr [edx + 0x50]; 
0x000305f5: sub edi, edi; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0012ed84: sub edi, edi; inc dword ptr [ebx - 0x6af0f708]; rol byte ptr [ebx - 0x49f0d33c], 0xc0; neg eax; ret; 
0x001972a5: sub edi, edi; inc dword ptr [ecx + 0x44588c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019709e: sub edi, edi; inc dword ptr [ecx + 0x4478fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0009421b: sub edi, edi; jmp dword ptr [esi - 0x70]; 
0x00104fd6: sub edi, esi; shr byte ptr [eax - 0x577bf0fa], 1; adc byte ptr [eax], al; add dh, dh; ret 0xf02; 
0x0017b1b5: sub edi, esp; call dword ptr [eax - 0x73]; 
0x000c18a3: sub edx, 0x10; add edx, eax; jl 0xc18b0; lea eax, [ecx + eax + 0x30]; ret; 
0x001aaa3b: sub edx, 0x10; jb 0x1aab10; lea eax, [edi + 0xf]; pop edi; ret; 
0x000c1893: sub edx, 0x20; add edx, eax; jl 0xc18b0; lea eax, [ecx + eax + 0x20]; ret; 
0x000c1883: sub edx, 0x30; add edx, eax; jl 0xc18b0; lea eax, [ecx + eax + 0x10]; ret; 
0x000c1873: sub edx, 0x40; add edx, eax; jl 0xc18b0; add eax, ecx; ret; 
0x0003adc3: sub edx, 0x7fff0000; mov eax, edx; shr eax, 0x1f; ret; 
0x001aaac0: sub edx, 0xa; jb 0x1aab10; lea eax, [edi + 9]; pop edi; ret; 
0x001aaad0: sub edx, 0xb; jb 0x1aab10; lea eax, [edi + 0xa]; pop edi; ret; 
0x001aaa12: sub edx, 0xc; jb 0x1aab10; lea eax, [edi + 0xb]; pop edi; ret; 
0x001aaae0: sub edx, 0xd; jb 0x1aab10; lea eax, [edi + 0xc]; pop edi; ret; 
0x001aaaf0: sub edx, 0xe; jb 0x1aab10; lea eax, [edi + 0xd]; pop edi; ret; 
0x001aab00: sub edx, 0xf; jb 0x1aab10; lea eax, [edi + 0xe]; pop edi; ret; 
0x00079a24: sub edx, 1; mov dword ptr [ecx + 4], edx; add esp, 0x14; pop ebx; pop esi; ret; 
0x001aaa60: sub edx, 2; jb 0x1aab10; lea eax, [edi + 1]; pop edi; ret; 
0x001aaa70: sub edx, 3; jb 0x1aab10; lea eax, [edi + 2]; pop edi; ret; 
0x001aa9a7: sub edx, 4; jb 0x1aab10; lea eax, [edi + 3]; pop edi; ret; 
0x001aaa80: sub edx, 5; jb 0x1aab10; lea eax, [edi + 4]; pop edi; ret; 
0x001aaa90: sub edx, 6; jb 0x1aab10; lea eax, [edi + 5]; pop edi; ret; 
0x001aaaa0: sub edx, 7; jb 0x1aab10; lea eax, [edi + 6]; pop edi; ret; 
0x001aa9d8: sub edx, 8; jb 0x1aab10; lea eax, [edi + 7]; pop edi; ret; 
0x000afa3d: sub edx, 8; jne 0xafa08; mov dword ptr [eax + 0x1c], esi; pop ebx; pop esi; ret; 
0x001aaab0: sub edx, 9; jb 0x1aab10; lea eax, [edi + 8]; pop edi; ret; 
0x0010c215: sub edx, dword ptr [0x14]; jne 0x10c269; add esp, 0x28; pop ebx; ret; 
0x0010c2b8: sub edx, dword ptr [0x14]; jne 0x10c309; add esp, 0x28; pop ebx; ret; 
0x0010c525: sub edx, dword ptr [0x14]; jne 0x10c579; add esp, 0x28; pop ebx; ret; 
0x0010e4a1: sub edx, dword ptr [0x14]; jne 0x10e553; add esp, 0x68; pop ebx; ret; 
0x00113546: sub edx, dword ptr [0x14]; jne 0x113566; add esp, 0x78; pop ebx; ret; 
0x0011f05c: sub edx, dword ptr [0x14]; jne 0x11f06b; movzx eax, al; add esp, 0x4c; ret; 
0x001215d0: sub edx, dword ptr [0x14]; jne 0x1215dd; add esp, 0x38; pop ebx; ret; 
0x00121650: sub edx, dword ptr [0x14]; jne 0x12165d; add esp, 0x38; pop ebx; ret; 
0x00122ca4: sub edx, dword ptr [0x14]; jne 0x122cb7; add esp, 0x1c; ret; 
0x00124f65: sub edx, dword ptr [0x14]; jne 0x124f72; add esp, 0x38; pop ebx; ret; 
0x00125394: sub edx, dword ptr [0x14]; jne 0x1253a0; add esp, 0x1c; ret; 
0x00125e2b: sub edx, dword ptr [0x14]; jne 0x125e4f; add esp, 0x1018; pop ebx; ret; 
0x00126b17: sub edx, dword ptr [0x14]; jne 0x126b23; add esp, 0x1c; ret; 
0x0012b698: sub edx, dword ptr [0x14]; jne 0x12b6e9; add esp, 0x28; pop ebx; ret; 
0x0012b738: sub edx, dword ptr [0x14]; jne 0x12b789; add esp, 0x28; pop ebx; ret; 
0x0012d1e3: sub edx, dword ptr [0x14]; jne 0x12d1ef; add esp, 0x3c; ret; 
0x0012d67a: sub edx, dword ptr [0x14]; jne 0x12d686; add esp, 0x1c; ret; 
0x001313de: sub edx, dword ptr [0x14]; jne 0x131409; add esp, 0x28; pop ebx; ret; 
0x00131503: sub edx, dword ptr [0x14]; jne 0x131529; add esp, 0x18; pop ebx; ret; 
0x00131583: sub edx, dword ptr [0x14]; jne 0x1315a9; add esp, 0x18; pop ebx; ret; 
0x0013186e: sub edx, dword ptr [0x14]; jne 0x131899; add esp, 0x18; pop ebx; ret; 
0x0013257e: sub edx, dword ptr [0x14]; jne 0x1325a9; add esp, 0x18; pop ebx; ret; 
0x00132695: sub edx, dword ptr [0x14]; jne 0x1326a1; add esp, 0x1c; ret; 
0x00132703: sub edx, dword ptr [0x14]; jne 0x132729; add esp, 0x18; pop ebx; ret; 
0x0013278e: sub edx, dword ptr [0x14]; jne 0x1327b9; add esp, 0x28; pop ebx; ret; 
0x00132896: sub edx, dword ptr [0x14]; jne 0x1328a2; add esp, 0x7c; ret; 
0x0013d583: sub edx, dword ptr [0x14]; jne 0x13d595; add esp, 0x2c; ret; 
0x0013e7c3: sub edx, dword ptr [0x14]; jne 0x13e7d5; add esp, 0x2c; ret; 
0x00148ce0: sub edx, dword ptr [0x14]; jne 0x148cf4; add esp, 0x18; pop ebx; ret; 
0x00148d28: sub edx, dword ptr [0x14]; jne 0x148d34; add esp, 0x1c; ret; 
0x00148d77: sub edx, dword ptr [0x14]; jne 0x148d83; add esp, 0x1c; ret; 
0x0014ac5c: sub edx, dword ptr [0x14]; jne 0x14aca4; add esp, 0x118; pop ebx; ret; 
0x0014acfc: sub edx, dword ptr [0x14]; jne 0x14ad60; add esp, 0x118; pop ebx; ret; 
0x0014adbc: sub edx, dword ptr [0x14]; jne 0x14ae0b; add esp, 0x118; pop ebx; ret; 
0x0014ae5c: sub edx, dword ptr [0x14]; jne 0x14ae8d; add esp, 0x11c; ret; 
0x0014b381: sub edx, dword ptr [0x14]; jne 0x14b3cc; add esp, 0x1c; ret; 
0x0014ef54: sub edx, dword ptr [0x14]; jne 0x14ef63; movzx eax, ax; add esp, 0x2c; ret; 
0x00153644: sub edx, dword ptr [0x14]; jne 0x153651; add esp, 0x28; pop ebx; ret; 
0x0016f429: sub edx, dword ptr [0x14]; jne 0x16f436; add esp, 0x28; pop ebx; ret; 
0x001752d7: sub edx, dword ptr [0x14]; jne 0x175356; add esp, 0x18; pop ebx; ret; 
0x00178490: sub edx, dword ptr [0x14]; jne 0x1784a7; add esp, 0x1c; ret; 
0x001785bc: sub edx, dword ptr [0x14]; jne 0x1785d7; add esp, 0x28; pop ebx; ret; 
0x0017865c: sub edx, dword ptr [0x14]; jne 0x178677; add esp, 0x28; pop ebx; ret; 
0x001789a0: sub edx, dword ptr [0x14]; jne 0x1789b7; add esp, 0x1c; ret; 
0x00178a23: sub edx, dword ptr [0x14]; jne 0x178a37; add esp, 0x18; pop ebx; ret; 
0x001798c6: sub edx, dword ptr [0x14]; jne 0x1798d2; add esp, 0x4c; ret; 
0x0017b952: sub edx, dword ptr [0x14]; jne 0x17b9b9; add esp, 0x18; pop ebx; ret; 
0x0017ba42: sub edx, dword ptr [0x14]; jne 0x17baa9; add esp, 0x18; pop ebx; ret; 
0x0017bd19: sub edx, dword ptr [0x14]; jne 0x17bd5c; add esp, 0x18; pop ebx; ret; 
0x0017bdb9: sub edx, dword ptr [0x14]; jne 0x17bdfc; add esp, 0x18; pop ebx; ret; 
0x0017be77: sub edx, dword ptr [0x14]; jne 0x17be9b; add esp, 0x18; pop ebx; ret; 
0x0017befb: sub edx, dword ptr [0x14]; jne 0x17bf37; add esp, 0x18; pop ebx; ret; 
0x0017bf8f: sub edx, dword ptr [0x14]; jne 0x17bfd4; add esp, 0x18; pop ebx; ret; 
0x0017c7c9: sub edx, dword ptr [0x14]; jne 0x17c80c; add esp, 0x18; pop ebx; ret; 
0x0017c869: sub edx, dword ptr [0x14]; jne 0x17c8ac; add esp, 0x18; pop ebx; ret; 
0x0017c909: sub edx, dword ptr [0x14]; jne 0x17c94c; add esp, 0x18; pop ebx; ret; 
0x0017c9a9: sub edx, dword ptr [0x14]; jne 0x17c9ec; add esp, 0x18; pop ebx; ret; 
0x0017d0a0: sub edx, dword ptr [0x14]; jne 0x17d0af; movzx eax, al; add esp, 0x1c; ret; 
0x0017d100: sub edx, dword ptr [0x14]; jne 0x17d10f; movzx eax, al; add esp, 0x1c; ret; 
0x0017d16a: sub edx, dword ptr [0x14]; jne 0x17d177; add esp, 0x18; pop ebx; ret; 
0x0017d21a: sub edx, dword ptr [0x14]; jne 0x17d227; add esp, 0x18; pop ebx; ret; 
0x001824d5: sub edx, dword ptr [0x14]; jne 0x182514; add esp, 0x18; pop ebx; ret; 
0x001840af: sub edx, dword ptr [0x14]; jne 0x1840c9; add esp, 0x18; pop ebx; ret; 
0x00184129: sub edx, dword ptr [0x14]; jne 0x184149; add esp, 0x18; pop ebx; ret; 
0x00186f2b: sub edx, dword ptr [0x14]; jne 0x186f38; add esp, 0x28; pop ebx; ret; 
0x0018982f: sub edx, dword ptr [0x14]; jne 0x18983c; add esp, 0x18; pop ebx; ret; 
0x0018c6c7: sub edx, dword ptr [0x14]; jne 0x18c6d3; add esp, 0x1c; ret; 
0x001927d2: sub edx, dword ptr [0x14]; jne 0x1927f7; add esp, 0x18; pop ebx; ret; 
0x00192b49: sub edx, dword ptr [0x14]; jne 0x192b55; add esp, 0x2c; ret; 
0x0003cd99: sub edx, dword ptr [0x14]; jne 0x3cdb7; add esp, 0x98; pop ebx; ret; 
0x0003cf3e: sub edx, dword ptr [0x14]; jne 0x3cf7c; add esp, 0x28; pop ebx; ret; 
0x0003d351: sub edx, dword ptr [0x14]; jne 0x3d361; add esp, 0x128; pop ebx; ret; 
0x0003d951: sub edx, dword ptr [0x14]; jne 0x3d96f; add esp, 0x98; pop ebx; ret; 
0x0003d9d1: sub edx, dword ptr [0x14]; jne 0x3d9ef; add esp, 0x98; pop ebx; ret; 
0x0003da5a: sub edx, dword ptr [0x14]; jne 0x3da69; add esp, 0x9c; ret; 
0x0003df28: sub edx, dword ptr [0x14]; jne 0x3df34; add esp, 0x1c; ret; 
0x000405ed: sub edx, dword ptr [0x14]; jne 0x405f9; add esp, 0x1c; ret; 
0x0004081a: sub edx, dword ptr [0x14]; jne 0x40826; add esp, 0x1c; ret; 
0x000409d8: sub edx, dword ptr [0x14]; jne 0x409e4; add esp, 0x2c; ret; 
0x00040aea: sub edx, dword ptr [0x14]; jne 0x40af6; add esp, 0x1c; ret; 
0x00040b6d: sub edx, dword ptr [0x14]; jne 0x40b79; add esp, 0x1c; ret; 
0x00041b6b: sub edx, dword ptr [0x14]; jne 0x41bac; add esp, 0x18; pop ebx; ret; 
0x00053498: sub edx, dword ptr [0x14]; jne 0x534a4; add esp, 0x2c; ret; 
0x0005ada6: sub edx, dword ptr [0x14]; jne 0x5adbf; add esp, 0x1c; ret; 
0x000615ba: sub edx, dword ptr [0x14]; jne 0x615ca; add esp, 0x1018; pop ebx; ret; 
0x00061641: sub edx, dword ptr [0x14]; jne 0x6164e; add esp, 0x78; pop ebx; ret; 
0x0009276b: sub edx, dword ptr [0x14]; jne 0x92777; add esp, 0x2c; ret; 
0x00097257: sub edx, dword ptr [0x14]; jne 0x97264; add esp, 0x28; pop ebx; ret; 
0x000972e7: sub edx, dword ptr [0x14]; jne 0x972f3; add esp, 0x2c; ret; 
0x0009859b: sub edx, dword ptr [0x14]; jne 0x985a7; add esp, 0x2c; ret; 
0x00098a0b: sub edx, dword ptr [0x14]; jne 0x98a17; add esp, 0x2c; ret; 
0x00098f27: sub edx, dword ptr [0x14]; jne 0x98f33; add esp, 0x2c; ret; 
0x00099377: sub edx, dword ptr [0x14]; jne 0x99383; add esp, 0x2c; ret; 
0x0009c244: sub edx, dword ptr [0x14]; jne 0x9c297; add esp, 0x38; pop ebx; ret; 
0x0009c4d2: sub edx, dword ptr [0x14]; jne 0x9c4f7; add esp, 0x2c; ret; 
0x0009c73e: sub edx, dword ptr [0x14]; jne 0x9c767; add esp, 0x2c; ret; 
0x0009c99e: sub edx, dword ptr [0x14]; jne 0x9c9c7; add esp, 0x18; pop ebx; ret; 
0x0009e754: sub edx, dword ptr [0x14]; jne 0x9e761; add esp, 0x28; pop ebx; ret; 
0x0009fdcc: sub edx, dword ptr [0x14]; jne 0x9fdd9; add esp, 0x28; pop ebx; ret; 
0x000a038c: sub edx, dword ptr [0x14]; jne 0xa0399; add esp, 0x38; pop ebx; ret; 
0x000c5e0b: sub edx, dword ptr [0x14]; jne 0xc5e3c; add esp, 0x18; pop ebx; ret; 
0x000da688: sub edx, dword ptr [0x14]; jne 0xda69f; add esp, 0x28; pop ebx; ret; 
0x000da70c: sub edx, dword ptr [0x14]; jne 0xda718; add esp, 0x1c; ret; 
0x000da756: sub edx, dword ptr [0x14]; jne 0xda763; add esp, 0x38; pop ebx; ret; 
0x000da7b8: sub edx, dword ptr [0x14]; jne 0xda7c5; add esp, 0x48; pop ebx; ret; 
0x000dbcd1: sub edx, dword ptr [0x14]; jne 0xdbd19; add esp, 0x28; pop ebx; ret; 
0x000dc055: sub edx, dword ptr [0x14]; jne 0xdc078; add esp, 0x38; pop ebx; ret; 
0x000e4f70: sub edx, dword ptr [0x14]; jne 0xe4f7c; add esp, 0x1c; ret; 
0x000e7430: sub edx, dword ptr [0x14]; jne 0xe743c; add esp, 0x1c; ret; 
0x000e75a4: sub edx, dword ptr [0x14]; jne 0xe75e2; add esp, 0x28; pop ebx; ret; 
0x000e77c2: sub edx, dword ptr [0x14]; jne 0xe77cf; add esp, 0x28; pop ebx; ret; 
0x000e8668: sub edx, dword ptr [0x14]; jne 0xe8678; add esp, 0xe8; pop ebx; ret; 
0x000e86da: sub edx, dword ptr [0x14]; jne 0xe86ea; add esp, 0xe8; pop ebx; ret; 
0x000e877e: sub edx, dword ptr [0x14]; jne 0xe878e; add esp, 0xe8; pop ebx; ret; 
0x000efa3d: sub edx, dword ptr [0x14]; jne 0xefa57; add esp, 0x1c; ret; 
0x000f0d76: sub edx, dword ptr [0x14]; jne 0xf0d96; add esp, 0x78; pop ebx; ret; 
0x000f38b6: sub edx, dword ptr [0x14]; jne 0xf38d6; add esp, 0x78; pop ebx; ret; 
0x000f46b6: sub edx, dword ptr [0x14]; jne 0xf46d6; add esp, 0x78; pop ebx; ret; 
0x000f71e6: sub edx, dword ptr [0x14]; jne 0xf7206; add esp, 0x78; pop ebx; ret; 
0x000f7ff6: sub edx, dword ptr [0x14]; jne 0xf8016; add esp, 0x78; pop ebx; ret; 
0x0008c998: sub edx, dword ptr [eax + 0xc]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x0008c9a8: sub edx, dword ptr [eax + 8]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x0008169c: sub edx, dword ptr [ebx + 8]; sar edx, 2; mov eax, dword ptr [ecx + 8]; pop ebx; sub eax, edx; ret; 
0x0010c214: sub edx, dword ptr gs:[0x14]; jne 0x10c269; add esp, 0x28; pop ebx; ret; 
0x0010c2b7: sub edx, dword ptr gs:[0x14]; jne 0x10c309; add esp, 0x28; pop ebx; ret; 
0x0010c524: sub edx, dword ptr gs:[0x14]; jne 0x10c579; add esp, 0x28; pop ebx; ret; 
0x0010e4a0: sub edx, dword ptr gs:[0x14]; jne 0x10e553; add esp, 0x68; pop ebx; ret; 
0x00113545: sub edx, dword ptr gs:[0x14]; jne 0x113566; add esp, 0x78; pop ebx; ret; 
0x0011f05b: sub edx, dword ptr gs:[0x14]; jne 0x11f06b; movzx eax, al; add esp, 0x4c; ret; 
0x001215cf: sub edx, dword ptr gs:[0x14]; jne 0x1215dd; add esp, 0x38; pop ebx; ret; 
0x0012164f: sub edx, dword ptr gs:[0x14]; jne 0x12165d; add esp, 0x38; pop ebx; ret; 
0x00122ca3: sub edx, dword ptr gs:[0x14]; jne 0x122cb7; add esp, 0x1c; ret; 
0x00124f64: sub edx, dword ptr gs:[0x14]; jne 0x124f72; add esp, 0x38; pop ebx; ret; 
0x00125393: sub edx, dword ptr gs:[0x14]; jne 0x1253a0; add esp, 0x1c; ret; 
0x00125e2a: sub edx, dword ptr gs:[0x14]; jne 0x125e4f; add esp, 0x1018; pop ebx; ret; 
0x00126b16: sub edx, dword ptr gs:[0x14]; jne 0x126b23; add esp, 0x1c; ret; 
0x0012b697: sub edx, dword ptr gs:[0x14]; jne 0x12b6e9; add esp, 0x28; pop ebx; ret; 
0x0012b737: sub edx, dword ptr gs:[0x14]; jne 0x12b789; add esp, 0x28; pop ebx; ret; 
0x0012d1e2: sub edx, dword ptr gs:[0x14]; jne 0x12d1ef; add esp, 0x3c; ret; 
0x0012d679: sub edx, dword ptr gs:[0x14]; jne 0x12d686; add esp, 0x1c; ret; 
0x001313dd: sub edx, dword ptr gs:[0x14]; jne 0x131409; add esp, 0x28; pop ebx; ret; 
0x00131502: sub edx, dword ptr gs:[0x14]; jne 0x131529; add esp, 0x18; pop ebx; ret; 
0x00131582: sub edx, dword ptr gs:[0x14]; jne 0x1315a9; add esp, 0x18; pop ebx; ret; 
0x0013186d: sub edx, dword ptr gs:[0x14]; jne 0x131899; add esp, 0x18; pop ebx; ret; 
0x0013257d: sub edx, dword ptr gs:[0x14]; jne 0x1325a9; add esp, 0x18; pop ebx; ret; 
0x00132694: sub edx, dword ptr gs:[0x14]; jne 0x1326a1; add esp, 0x1c; ret; 
0x00132702: sub edx, dword ptr gs:[0x14]; jne 0x132729; add esp, 0x18; pop ebx; ret; 
0x0013278d: sub edx, dword ptr gs:[0x14]; jne 0x1327b9; add esp, 0x28; pop ebx; ret; 
0x00132895: sub edx, dword ptr gs:[0x14]; jne 0x1328a2; add esp, 0x7c; ret; 
0x0013d582: sub edx, dword ptr gs:[0x14]; jne 0x13d595; add esp, 0x2c; ret; 
0x0013e7c2: sub edx, dword ptr gs:[0x14]; jne 0x13e7d5; add esp, 0x2c; ret; 
0x00148cdf: sub edx, dword ptr gs:[0x14]; jne 0x148cf4; add esp, 0x18; pop ebx; ret; 
0x00148d27: sub edx, dword ptr gs:[0x14]; jne 0x148d34; add esp, 0x1c; ret; 
0x00148d76: sub edx, dword ptr gs:[0x14]; jne 0x148d83; add esp, 0x1c; ret; 
0x0014ac5b: sub edx, dword ptr gs:[0x14]; jne 0x14aca4; add esp, 0x118; pop ebx; ret; 
0x0014acfb: sub edx, dword ptr gs:[0x14]; jne 0x14ad60; add esp, 0x118; pop ebx; ret; 
0x0014adbb: sub edx, dword ptr gs:[0x14]; jne 0x14ae0b; add esp, 0x118; pop ebx; ret; 
0x0014ae5b: sub edx, dword ptr gs:[0x14]; jne 0x14ae8d; add esp, 0x11c; ret; 
0x0014b380: sub edx, dword ptr gs:[0x14]; jne 0x14b3cc; add esp, 0x1c; ret; 
0x0014ef53: sub edx, dword ptr gs:[0x14]; jne 0x14ef63; movzx eax, ax; add esp, 0x2c; ret; 
0x00153643: sub edx, dword ptr gs:[0x14]; jne 0x153651; add esp, 0x28; pop ebx; ret; 
0x0016f428: sub edx, dword ptr gs:[0x14]; jne 0x16f436; add esp, 0x28; pop ebx; ret; 
0x001752d6: sub edx, dword ptr gs:[0x14]; jne 0x175356; add esp, 0x18; pop ebx; ret; 
0x0017848f: sub edx, dword ptr gs:[0x14]; jne 0x1784a7; add esp, 0x1c; ret; 
0x001785bb: sub edx, dword ptr gs:[0x14]; jne 0x1785d7; add esp, 0x28; pop ebx; ret; 
0x0017865b: sub edx, dword ptr gs:[0x14]; jne 0x178677; add esp, 0x28; pop ebx; ret; 
0x0017899f: sub edx, dword ptr gs:[0x14]; jne 0x1789b7; add esp, 0x1c; ret; 
0x00178a22: sub edx, dword ptr gs:[0x14]; jne 0x178a37; add esp, 0x18; pop ebx; ret; 
0x001798c5: sub edx, dword ptr gs:[0x14]; jne 0x1798d2; add esp, 0x4c; ret; 
0x0017b951: sub edx, dword ptr gs:[0x14]; jne 0x17b9b9; add esp, 0x18; pop ebx; ret; 
0x0017ba41: sub edx, dword ptr gs:[0x14]; jne 0x17baa9; add esp, 0x18; pop ebx; ret; 
0x0017bd18: sub edx, dword ptr gs:[0x14]; jne 0x17bd5c; add esp, 0x18; pop ebx; ret; 
0x0017bdb8: sub edx, dword ptr gs:[0x14]; jne 0x17bdfc; add esp, 0x18; pop ebx; ret; 
0x0017be76: sub edx, dword ptr gs:[0x14]; jne 0x17be9b; add esp, 0x18; pop ebx; ret; 
0x0017befa: sub edx, dword ptr gs:[0x14]; jne 0x17bf37; add esp, 0x18; pop ebx; ret; 
0x0017bf8e: sub edx, dword ptr gs:[0x14]; jne 0x17bfd4; add esp, 0x18; pop ebx; ret; 
0x0017c7c8: sub edx, dword ptr gs:[0x14]; jne 0x17c80c; add esp, 0x18; pop ebx; ret; 
0x0017c868: sub edx, dword ptr gs:[0x14]; jne 0x17c8ac; add esp, 0x18; pop ebx; ret; 
0x0017c908: sub edx, dword ptr gs:[0x14]; jne 0x17c94c; add esp, 0x18; pop ebx; ret; 
0x0017c9a8: sub edx, dword ptr gs:[0x14]; jne 0x17c9ec; add esp, 0x18; pop ebx; ret; 
0x0017d09f: sub edx, dword ptr gs:[0x14]; jne 0x17d0af; movzx eax, al; add esp, 0x1c; ret; 
0x0017d0ff: sub edx, dword ptr gs:[0x14]; jne 0x17d10f; movzx eax, al; add esp, 0x1c; ret; 
0x0017d169: sub edx, dword ptr gs:[0x14]; jne 0x17d177; add esp, 0x18; pop ebx; ret; 
0x0017d219: sub edx, dword ptr gs:[0x14]; jne 0x17d227; add esp, 0x18; pop ebx; ret; 
0x001824d4: sub edx, dword ptr gs:[0x14]; jne 0x182514; add esp, 0x18; pop ebx; ret; 
0x001840ae: sub edx, dword ptr gs:[0x14]; jne 0x1840c9; add esp, 0x18; pop ebx; ret; 
0x00184128: sub edx, dword ptr gs:[0x14]; jne 0x184149; add esp, 0x18; pop ebx; ret; 
0x00186f2a: sub edx, dword ptr gs:[0x14]; jne 0x186f38; add esp, 0x28; pop ebx; ret; 
0x0018982e: sub edx, dword ptr gs:[0x14]; jne 0x18983c; add esp, 0x18; pop ebx; ret; 
0x0018c6c6: sub edx, dword ptr gs:[0x14]; jne 0x18c6d3; add esp, 0x1c; ret; 
0x001927d1: sub edx, dword ptr gs:[0x14]; jne 0x1927f7; add esp, 0x18; pop ebx; ret; 
0x00192b48: sub edx, dword ptr gs:[0x14]; jne 0x192b55; add esp, 0x2c; ret; 
0x0003cd98: sub edx, dword ptr gs:[0x14]; jne 0x3cdb7; add esp, 0x98; pop ebx; ret; 
0x0003cf3d: sub edx, dword ptr gs:[0x14]; jne 0x3cf7c; add esp, 0x28; pop ebx; ret; 
0x0003d350: sub edx, dword ptr gs:[0x14]; jne 0x3d361; add esp, 0x128; pop ebx; ret; 
0x0003d950: sub edx, dword ptr gs:[0x14]; jne 0x3d96f; add esp, 0x98; pop ebx; ret; 
0x0003d9d0: sub edx, dword ptr gs:[0x14]; jne 0x3d9ef; add esp, 0x98; pop ebx; ret; 
0x0003da59: sub edx, dword ptr gs:[0x14]; jne 0x3da69; add esp, 0x9c; ret; 
0x0003df27: sub edx, dword ptr gs:[0x14]; jne 0x3df34; add esp, 0x1c; ret; 
0x000405ec: sub edx, dword ptr gs:[0x14]; jne 0x405f9; add esp, 0x1c; ret; 
0x00040819: sub edx, dword ptr gs:[0x14]; jne 0x40826; add esp, 0x1c; ret; 
0x000409d7: sub edx, dword ptr gs:[0x14]; jne 0x409e4; add esp, 0x2c; ret; 
0x00040ae9: sub edx, dword ptr gs:[0x14]; jne 0x40af6; add esp, 0x1c; ret; 
0x00040b6c: sub edx, dword ptr gs:[0x14]; jne 0x40b79; add esp, 0x1c; ret; 
0x00041b6a: sub edx, dword ptr gs:[0x14]; jne 0x41bac; add esp, 0x18; pop ebx; ret; 
0x00053497: sub edx, dword ptr gs:[0x14]; jne 0x534a4; add esp, 0x2c; ret; 
0x0005ada5: sub edx, dword ptr gs:[0x14]; jne 0x5adbf; add esp, 0x1c; ret; 
0x000615b9: sub edx, dword ptr gs:[0x14]; jne 0x615ca; add esp, 0x1018; pop ebx; ret; 
0x00061640: sub edx, dword ptr gs:[0x14]; jne 0x6164e; add esp, 0x78; pop ebx; ret; 
0x0009276a: sub edx, dword ptr gs:[0x14]; jne 0x92777; add esp, 0x2c; ret; 
0x00097256: sub edx, dword ptr gs:[0x14]; jne 0x97264; add esp, 0x28; pop ebx; ret; 
0x000972e6: sub edx, dword ptr gs:[0x14]; jne 0x972f3; add esp, 0x2c; ret; 
0x0009859a: sub edx, dword ptr gs:[0x14]; jne 0x985a7; add esp, 0x2c; ret; 
0x00098a0a: sub edx, dword ptr gs:[0x14]; jne 0x98a17; add esp, 0x2c; ret; 
0x00098f26: sub edx, dword ptr gs:[0x14]; jne 0x98f33; add esp, 0x2c; ret; 
0x00099376: sub edx, dword ptr gs:[0x14]; jne 0x99383; add esp, 0x2c; ret; 
0x0009c243: sub edx, dword ptr gs:[0x14]; jne 0x9c297; add esp, 0x38; pop ebx; ret; 
0x0009c4d1: sub edx, dword ptr gs:[0x14]; jne 0x9c4f7; add esp, 0x2c; ret; 
0x0009c73d: sub edx, dword ptr gs:[0x14]; jne 0x9c767; add esp, 0x2c; ret; 
0x0009c99d: sub edx, dword ptr gs:[0x14]; jne 0x9c9c7; add esp, 0x18; pop ebx; ret; 
0x0009e753: sub edx, dword ptr gs:[0x14]; jne 0x9e761; add esp, 0x28; pop ebx; ret; 
0x0009fdcb: sub edx, dword ptr gs:[0x14]; jne 0x9fdd9; add esp, 0x28; pop ebx; ret; 
0x000a038b: sub edx, dword ptr gs:[0x14]; jne 0xa0399; add esp, 0x38; pop ebx; ret; 
0x000c5e0a: sub edx, dword ptr gs:[0x14]; jne 0xc5e3c; add esp, 0x18; pop ebx; ret; 
0x000da687: sub edx, dword ptr gs:[0x14]; jne 0xda69f; add esp, 0x28; pop ebx; ret; 
0x000da70b: sub edx, dword ptr gs:[0x14]; jne 0xda718; add esp, 0x1c; ret; 
0x000da755: sub edx, dword ptr gs:[0x14]; jne 0xda763; add esp, 0x38; pop ebx; ret; 
0x000da7b7: sub edx, dword ptr gs:[0x14]; jne 0xda7c5; add esp, 0x48; pop ebx; ret; 
0x000dbcd0: sub edx, dword ptr gs:[0x14]; jne 0xdbd19; add esp, 0x28; pop ebx; ret; 
0x000dc054: sub edx, dword ptr gs:[0x14]; jne 0xdc078; add esp, 0x38; pop ebx; ret; 
0x000e4f6f: sub edx, dword ptr gs:[0x14]; jne 0xe4f7c; add esp, 0x1c; ret; 
0x000e742f: sub edx, dword ptr gs:[0x14]; jne 0xe743c; add esp, 0x1c; ret; 
0x000e75a3: sub edx, dword ptr gs:[0x14]; jne 0xe75e2; add esp, 0x28; pop ebx; ret; 
0x000e77c1: sub edx, dword ptr gs:[0x14]; jne 0xe77cf; add esp, 0x28; pop ebx; ret; 
0x000e8667: sub edx, dword ptr gs:[0x14]; jne 0xe8678; add esp, 0xe8; pop ebx; ret; 
0x000e86d9: sub edx, dword ptr gs:[0x14]; jne 0xe86ea; add esp, 0xe8; pop ebx; ret; 
0x000e877d: sub edx, dword ptr gs:[0x14]; jne 0xe878e; add esp, 0xe8; pop ebx; ret; 
0x000efa3c: sub edx, dword ptr gs:[0x14]; jne 0xefa57; add esp, 0x1c; ret; 
0x000f0d75: sub edx, dword ptr gs:[0x14]; jne 0xf0d96; add esp, 0x78; pop ebx; ret; 
0x000f38b5: sub edx, dword ptr gs:[0x14]; jne 0xf38d6; add esp, 0x78; pop ebx; ret; 
0x000f46b5: sub edx, dword ptr gs:[0x14]; jne 0xf46d6; add esp, 0x78; pop ebx; ret; 
0x000f71e5: sub edx, dword ptr gs:[0x14]; jne 0xf7206; add esp, 0x78; pop ebx; ret; 
0x000f7ff5: sub edx, dword ptr gs:[0x14]; jne 0xf8016; add esp, 0x78; pop ebx; ret; 
0x000c15b3: sub edx, eax; jbe 0xc15f0; add eax, edi; pop edi; ret; 
0x000c15c6: sub edx, eax; jbe 0xc15f0; lea eax, [edi + eax + 0x10]; pop edi; ret; 
0x000c15d6: sub edx, eax; jbe 0xc15f0; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x000c15e6: sub edx, eax; jbe 0xc15f0; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000c1a63: sub edx, eax; lea ecx, [edx + 3]; mov eax, ecx; ret; 
0x0017ca3b: sub edx, eax; mov dword ptr [ecx + 0xc], eax; mov eax, 1; mov dword ptr [ecx + 0x14], edx; ret; 
0x00088e18: sub edx, eax; push edx; push eax; push esi; call dword ptr [edi + 0x38]; 
0x00171cce: sub edx, eax; push edx; push edi; push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x00053626: sub edx, eax; shr eax, 2; lea eax, [eax + eax*8 + 6]; call 0x535f0; jmp eax; 
0x00123691: sub edx, eax; test eax, eax; cmovns eax, edx; ret; 
0x000c0898: sub edx, ecx; call 0x189c31; add ecx, 0x10c755; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bd598: sub edx, ecx; call 0x189c31; add ecx, 0x10f9d5; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba8aa: sub edx, ecx; call 0x189c31; add ecx, 0x11256f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b927a: sub edx, ecx; call 0x189c31; add ecx, 0x113a3f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c12dc: sub edx, ecx; jbe 0xc1310; add eax, ecx; ret; 
0x001513c7: sub esi, 0x5b; stc; call dword ptr [eax - 0x73]; 
0x001373c6: sub esi, 1; jae 0x1373a0; add esp, 4; pop ebx; pop esi; ret; 
0x0007891a: sub esi, dword ptr [ebx]; stc; call dword ptr [eax - 0x18]; 
0x001715b0: sub esi, eax; push esi; push eax; push dword ptr [ebx]; call dword ptr [ebx + 8]; 
0x00053624: sub esi, eax; sub edx, eax; shr eax, 2; lea eax, [eax + eax*8 + 6]; call 0x535f0; jmp eax; 
0x001acd34: sub esi, ebx; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x00161747: sub esi, edx; call dword ptr [eax - 0x18]; 
0x0016ec2a: sub esp, -0x5b; add byte ptr [eax], al; pop ebx; ret; 
0x0009f524: sub esp, -0x80; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0010c344: sub esp, 0x14; push 0; push 0; call 0x10c310; add esp, 0x1c; ret; 
0x00130254: sub esp, 0x14; push 0; push dword ptr [esp + 0x1c]; call 0x130270; add esp, 0x1c; ret; 
0x0003e954: sub esp, 0x14; push 0; push dword ptr [esp + 0x1c]; call 0x3e0c0; add esp, 0x1c; ret; 
0x0003dfd4: sub esp, 0x14; push 0; push dword ptr [esp + 0x1c]; call 0x46e10; add esp, 0x1c; ret; 
0x0014ab14: sub esp, 0x14; push 1; push dword ptr [esp + 0x1c]; call 0x14aa40; add esp, 0x1c; ret; 
0x00097e64: sub esp, 0x14; push 1; push dword ptr [esp + 0x1c]; call 0x97d20; add esp, 0x1c; ret; 
0x00143a24: sub esp, 0x14; push 2; push dword ptr [esp + 0x1c]; call 0x142d60; add esp, 0x1c; ret; 
0x0018a9d0: sub esp, 0x14; push dword ptr [esp + 0x1c]; call 0x18a0c0; add esp, 0x18; pop ebx; ret; 
0x00042b40: sub esp, 0x14; push dword ptr [esp + 0x1c]; call 0x1acdd0; add esp, 0x18; pop ebx; ret; 
0x0010bda0: sub esp, 0x14; push dword ptr [esp + 0x1c]; call 0x231a0; add esp, 0x18; pop ebx; ret; 
0x00085250: sub esp, 0x14; push dword ptr [esp + 0x1c]; call 0x7b3c0; add esp, 0x18; pop ebx; ret; 
0x00128cb0: sub esp, 0x14; push dword ptr [esp + 0x20]; call 0x231a0; add esp, 0x18; pop ebx; ret; 
0x00099d6e: sub esp, 0x18; lea eax, [eax + 0x3b2c]; push eax; call 0x901f0; add esp, 0x1c; ret; 
0x0008cdf0: sub esp, 0x18; lea eax, [edx + 0x1a74]; push eax; call 0x8f2d0; add esp, 0x1c; ret; 
0x00169aa4: sub esp, 0x18; push 0; call 0x156690; add esp, 0x1c; ret; 
0x0003d284: sub esp, 0x18; push 0; call 0x3cb20; add esp, 0x1c; ret; 
0x0016de14: sub esp, 0x18; push 0xa; call 0x156690; add esp, 0x1c; ret; 
0x00169f04: sub esp, 0x18; push 1; call 0x156690; add esp, 0x1c; ret; 
0x0016a274: sub esp, 0x18; push 2; call 0x156690; add esp, 0x1c; ret; 
0x0016b334: sub esp, 0x18; push 3; call 0x156690; add esp, 0x1c; ret; 
0x0016c694: sub esp, 0x18; push 4; call 0x156690; add esp, 0x1c; ret; 
0x0016cd14: sub esp, 0x18; push 5; call 0x156690; add esp, 0x1c; ret; 
0x0016d0b4: sub esp, 0x18; push 6; call 0x156690; add esp, 0x1c; ret; 
0x0016e394: sub esp, 0x18; push 7; call 0x156690; add esp, 0x1c; ret; 
0x0016d734: sub esp, 0x18; push 8; call 0x156690; add esp, 0x1c; ret; 
0x0016db44: sub esp, 0x18; push 9; call 0x156690; add esp, 0x1c; ret; 
0x000876b0: sub esp, 0x18; push eax; call 0x8b1a0; add esp, 0x1c; ret; 
0x0007f540: sub esp, 0x18; push ecx; call 0x81150; add esp, 0x1c; ret; 
0x000a0734: sub esp, 0x28; mov edi, dword ptr [esp + 0x3c]; lea ecx, [ebp - 0x722d4]; call dword ptr gs:[0x10]; 
0x00157f03: sub esp, 0x4c; int1; call dword ptr [eax - 0x73]; 
0x0016713a: sub esp, 0x51; int1; call dword ptr [eax - 0x73]; 
0x00114270: sub esp, 0x52; in eax, dx; call dword ptr [eax + 0x56]; 
0x00167141: sub esp, 0x61; stc; call dword ptr [eax - 0x18]; 
0x001672e2: sub esp, 0x61; stc; call dword ptr [eax - 0x73]; 
0x0008f6a4: sub esp, 0xc; add ebx, 8; add esi, 8; push eax; call ecx; 
0x00156bbb: sub esp, 0xc; lea eax, [ebx + 4]; push eax; call edi; 
0x0010b9a8: sub esp, 0xc; lea eax, [edi + 0x3fac]; push eax; call 0x8f2d0; call dword ptr [esi]; 
0x0017743a: sub esp, 0xc; lea edx, [ebx + 0x38]; push edx; call eax; 
0x0017691a: sub esp, 0xc; lea edx, [ebx + 0x4c]; push edx; call eax; 
0x00173c5d: sub esp, 0xc; lea edx, [ebx + 0xac]; push edx; call eax; 
0x0017486e: sub esp, 0xc; lea edx, [edi + 8]; push edx; call eax; 
0x00080f65: sub esp, 0xc; mov eax, dword ptr [eax + 0x88]; push esi; call dword ptr [eax + 0x34]; 
0x0017403d: sub esp, 0xc; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x0017760e: sub esp, 0xc; mov eax, dword ptr [ebp + 0x3c]; push edi; call dword ptr [eax + 0x10]; 
0x000e9ac0: sub esp, 0xc; mov eax, dword ptr [ebp - 0x2c]; push esi; call eax; 
0x000f178d: sub esp, 0xc; mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5b4]; call dword ptr [eax + 0x10]; 
0x000f1380: sub esp, 0xc; mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5b4]; call dword ptr [eax + 0x14]; 
0x000f16e9: sub esp, 0xc; mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5dc]; call dword ptr [eax + 0x18]; 
0x000f8a0d: sub esp, 0xc; mov eax, dword ptr [ebp - 0x5d0]; push dword ptr [ebp - 0x5c4]; call dword ptr [eax + 0x10]; 
0x000f8600: sub esp, 0xc; mov eax, dword ptr [ebp - 0x5d0]; push dword ptr [ebp - 0x5c4]; call dword ptr [eax + 0x14]; 
0x000f8969: sub esp, 0xc; mov eax, dword ptr [ebp - 0x5d0]; push dword ptr [ebp - 0x5ec]; call dword ptr [eax + 0x18]; 
0x0016ee5a: sub esp, 0xc; mov eax, dword ptr [ebx + 0x10]; push esi; call dword ptr [eax + 0x10]; 
0x00170eaa: sub esp, 0xc; mov eax, dword ptr [ebx + 0x2398]; push esi; call dword ptr [eax + 0x10]; 
0x0017a9dd: sub esp, 0xc; mov eax, dword ptr [ebx + 0xc]; push edi; call dword ptr [eax + 0x10]; 
0x0016fb10: sub esp, 0xc; mov eax, dword ptr [ebx + 4]; add esi, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x0016f60b: sub esp, 0xc; mov eax, dword ptr [ebx + 4]; push ebx; call dword ptr [eax + 0x10]; 
0x00179ec0: sub esp, 0xc; mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 0x14]; 
0x00179db0: sub esp, 0xc; mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 4]; 
0x00092d36: sub esp, 0xc; mov eax, dword ptr [ecx + 0x228]; push edx; call eax; 
0x0017906e: sub esp, 0xc; mov eax, dword ptr [edi + 4]; push edi; call dword ptr [eax + 0x10]; 
0x00178a6f: sub esp, 0xc; mov eax, dword ptr [edx + 0x20]; push edx; call dword ptr [eax + 0x10]; 
0x0016f1d0: sub esp, 0xc; mov ecx, dword ptr [eax + 4]; push eax; call dword ptr [ecx + 0x10]; 
0x0009c072: sub esp, 0xc; mov edi, dword ptr [edi + 0xc]; push dword ptr [eax + 4]; call dword ptr [eax]; 
0x0017813e: sub esp, 0xc; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x00177c0d: sub esp, 0xc; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x0016f379: sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x000e97b8: sub esp, 0xc; mov esi, dword ptr [ebp - 0x2c]; mov eax, dword ptr [ebp - 0x3c]; push edi; call eax; 
0x0008fe3c: sub esp, 0xc; push 0; call 0x8f3d0; add esp, 0x1c; ret; 
0x00176868: sub esp, 0xc; push dword ptr [eax + 0x98]; call 0x231a0; add esp, 0x18; pop ebx; ret; 
0x0002440b: sub esp, 0xc; push dword ptr [ebp - 0x34]; call dword ptr [ebp - 0x38]; 
0x00090edc: sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x0012c649: sub esp, 0xc; push dword ptr [ebx]; call esi; 
0x000a6d90: sub esp, 0xc; push dword ptr [esp + 0x14]; call eax; 
0x0016322d: sub esp, 0xc; push eax; call 0x186f70; mov dword ptr [esp], ebp; call edi; 
0x00163414: sub esp, 0xc; push eax; call 0x186f70; mov dword ptr [esp], ebp; call esi; 
0x0016eef0: sub esp, 0xc; push eax; call dword ptr [ecx + 0xc]; 
0x00178350: sub esp, 0xc; push eax; call dword ptr [edx + 0x10]; 
0x000a6e2a: sub esp, 0xc; push eax; call edx; 
0x00177088: sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x0017108e: sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x0017709f: sub esp, 0xc; push ebp; call eax; 
0x00175e92: sub esp, 0xc; push ebp; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x10]; 
0x0015a233: sub esp, 0xc; push ebx; call 0x186f70; add esp, 0x10; mov eax, ebx; call eax; 
0x001635c3: sub esp, 0xc; push ebx; call 0x186f70; mov dword ptr [esp], ebp; call ebx; 
0x0002f4f1: sub esp, 0xc; push ebx; call 0x186f70; mov dword ptr [esp], esi; call ebx; 
0x0016faf3: sub esp, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x0008826e: sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x00080d73: sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x000876f7: sub esp, 0xc; push ebx; call dword ptr [esi + 0x30]; 
0x00026287: sub esp, 0xc; push ecx; call 0x186f70; mov dword ptr [esp], ebx; mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x00027077: sub esp, 0xc; push edi; call 0x186f70; mov dword ptr [esp], ebx; call edi; 
0x0016ffbb: sub esp, 0xc; push edi; call eax; 
0x0016ff98: sub esp, 0xc; push edi; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x00026931: sub esp, 0xc; push edx; call 0x186f70; mov dword ptr [esp], ebx; mov edx, dword ptr [ebp - 0x44]; call edx; 
0x00025f74: sub esp, 0xc; push esi; call 0x186f70; add ebp, dword ptr [edi + 8]; mov dword ptr [esp], ebp; call esi; 
0x00026114: sub esp, 0xc; push esi; call 0x186f70; mov dword ptr [esp], ebx; call esi; 
0x0016f086: sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x00086299: sub esp, 0xc; push esi; call dword ptr [eax + 0x30]; 
0x0008b7cf: sub esp, 0xc; push esi; call dword ptr [ebp + 0x30]; 
0x0007b9b9: sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x0007e83d: sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x0018b75a: sub esp, 0xc; push esi; call dword ptr [ebx + 0x44]; 
0x0008b429: sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x0018b8af: sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x000a6d48: sub esp, 0xc; push esi; call eax; 
0x0012e422: sub esp, 0xc; push esi; call edx; 
0x0012e422: sub esp, 0xc; push esi; call edx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x00175b1b: sub esp, 0xc; push esi; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x0003ef45: sub esp, 0xc; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [ebp + edi], edx; push dword ptr [ebx + 4]; call eax; 
0x000e7454: sub esp, 0xc; xor eax, eax; cmp dword ptr [esp + 0x14], 1; je 0xe7468; add esp, 0xc; ret; 
0x000e7544: sub esp, 0xc; xor eax, eax; cmp dword ptr [esp + 0x14], 1; je 0xe7558; add esp, 0xc; ret; 
0x0013bf22: sub esp, 0xc; xor ebx, ebx; mov ecx, esp; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x0003c22c: sub esp, 4; fstp dword ptr [esp]; fld dword ptr [esp]; add esp, 4; ret; 
0x0008e561: sub esp, 4; mov edx, dword ptr [ebx]; push esi; push eax; push ecx; call edx; 
0x0019044b: sub esp, 4; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0017b845: sub esp, 4; push -1; push ebp; push esi; call edi; 
0x0008c749: sub esp, 4; push 0; push 0; push esi; call dword ptr [ebp + 0x2c]; 
0x0007d4f0: sub esp, 4; push 0x10; push ebp; push esi; call dword ptr [eax + 0x1c]; 
0x0007e74e: sub esp, 4; push dword ptr [ebp + 0x14]; push dword ptr [ebp + 0xc]; push esi; call dword ptr [ebx + 0x2c]; 
0x001871af: sub esp, 4; push dword ptr [ebx]; push dword ptr [esi]; push dword ptr [esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x001376e2: sub esp, 4; push dword ptr [esp + 0x1c]; push 0; push 0x2000004; call eax; 
0x00189de3: sub esp, 4; push dword ptr [esp + 0x20]; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x0007c13f: sub esp, 4; push dword ptr [esp + 0x30]; lea ecx, [esp + 0x10]; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x0004109b: sub esp, 4; push dword ptr [esp + 8]; push esi; push edi; mov eax, dword ptr [esp + 0x10]; call eax; 
0x00024e1f: sub esp, 4; push eax; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call esi; 
0x0008a140: sub esp, 4; push eax; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x000834da: sub esp, 4; push eax; push edx; push esi; call ecx; 
0x00087b8c: sub esp, 4; push ebp; push edi; push ebx; call dword ptr [esi + 0x3c]; 
0x0007e514: sub esp, 4; push ebx; push dword ptr [ebp - 0x1c]; push esi; call dword ptr [eax + 0x2c]; 
0x0007c0e5: sub esp, 4; push ebx; push dword ptr [esp + 0x1c]; push dword ptr [esi + 0x98]; call eax; 
0x00079485: sub esp, 4; push ebx; push edi; push eax; call dword ptr [ebp + 0x1c]; 
0x0012c567: sub esp, 4; push ecx; push 3; push ebx; call edx; 
0x00089773: sub esp, 4; push ecx; push eax; push esi; call edx; 
0x0012c50f: sub esp, 4; push edi; push 0; push ebx; call esi; 
0x0012c523: sub esp, 4; push edi; push 1; push ebx; call esi; 
0x0012c536: sub esp, 4; push edi; push 2; push ebx; call esi; 
0x0007f8f8: sub esp, 4; push edi; push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x0007c445: sub esp, 4; push edi; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x0008a3a8: sub esp, 4; push edx; push dword ptr [esp + 0x3c]; push ebp; call dword ptr [esi + 0x20]; 
0x0007de12: sub esp, 4; push esi; push dword ptr [ebp + 8]; push edx; call dword ptr [ebx + 0x1c]; 
0x0008795e: sub esp, 4; push esi; push dword ptr [esp + 0x38]; push ebp; call dword ptr [eax + 0x1c]; 
0x0007f9ef: sub esp, 4; push esi; push dword ptr [esp + 0x38]; push edi; call dword ptr [eax + 0x1c]; 
0x00024ee0: sub esp, 4; push esi; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x00087ade: sub esp, 4; push esi; push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x0007d570: sub esp, 4; push esi; push ecx; push ebx; call dword ptr [ebp + 0x1c]; 
0x0007fd36: sub esp, 4; push esi; push edx; push ebx; call dword ptr [ebp + 0x1c]; 
0x00088e15: sub esp, 4; sub edx, eax; push edx; push eax; push esi; call dword ptr [edi + 0x38]; 
0x00175570: sub esp, 8; add esi, 0xc; mov eax, dword ptr [ebx + 4]; push esi; push ebx; call dword ptr [eax + 0x24]; 
0x0012c9b2: sub esp, 8; and ebx, 0xfffffffe; push dword ptr [ebx]; push esi; call edi; 
0x00126a40: sub esp, 8; call 0x126680; mov dword ptr [ebx + 0x45a0], eax; add esp, 8; pop ebx; ret; 
0x0003bf8c: sub esp, 8; fstp qword ptr [esp]; fld qword ptr [esp]; add esp, 8; ret; 
0x00087cd5: sub esp, 8; lea eax, [esp + 0x38]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x00083100: sub esp, 8; lea eax, [esp + 0x40]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x0007b2a3: sub esp, 8; lea eax, [esp + 8]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x00087fdf: sub esp, 8; lea eax, [esp + 8]; push eax; push esi; call dword ptr [edi + 0x48]; 
0x0016ef73: sub esp, 8; lea ebp, [esp + 0x40]; push ebp; push eax; call dword ptr [ecx + 8]; 
0x0008b589: sub esp, 8; lea ebx, [edx + 1]; push eax; push esi; call dword ptr [ebp + 0xc]; 
0x000e76d8: sub esp, 8; lea ecx, [esp + 0x1c]; push ecx; mov dword ptr [esp + 0x18], ecx; push ebx; call eax; 
0x000f0d88: sub esp, 8; lea edx, [esp + 0x14]; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x00178735: sub esp, 8; lea edx, [esp + 0x20]; push edx; push eax; call edi; 
0x0008950d: sub esp, 8; lea edx, [esp + 0x28]; push edx; push esi; call dword ptr [eax + 0x48]; 
0x0018bd28: sub esp, 8; lea edx, [esp + 0x38]; push edx; push esi; call dword ptr [eax + 0x48]; 
0x000e7852: sub esp, 8; lea edx, [esp + 0xc]; push edx; push ebx; call eax; 
0x000f8008: sub esp, 8; lea edx, [esp + 8]; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x0012ca72: sub esp, 8; mov dword ptr [ebp - 0x30], edx; push dword ptr [eax]; mov eax, dword ptr [ebp - 0x3c]; push dword ptr [ebp - 0x38]; call eax; 
0x0016fa38: sub esp, 8; mov dword ptr [ebx], eax; push dword ptr [ebx + 8]; push esi; call dword ptr [ebx + 0xc]; 
0x0017905a: sub esp, 8; mov dword ptr [ecx], 0xe; add ecx, 4; push ecx; push edi; call dword ptr [eax + 8]; 
0x00173ee9: sub esp, 8; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push esi; push eax; call dword ptr [edx + 4]; 
0x0016ee10: sub esp, 8; mov eax, dword ptr [ebx + 0x10]; push dword ptr [esp + 0x14]; push esi; call dword ptr [eax + 4]; 
0x00176b41: sub esp, 8; mov eax, dword ptr [ebx + 0x50]; push dword ptr [esp + 0x30]; push esi; call dword ptr [eax + 4]; 
0x00173ec9: sub esp, 8; mov eax, dword ptr [ebx + 0xb0]; push dword ptr [esp + 0x30]; push esi; call dword ptr [eax + 4]; 
0x0017548b: sub esp, 8; mov eax, dword ptr [ebx + 4]; push 8; push ebx; call dword ptr [eax + 0x18]; 
0x0017146a: sub esp, 8; mov eax, dword ptr [ebx + 4]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax + 4]; 
0x001714b8: sub esp, 8; mov eax, dword ptr [ebx + 4]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax]; 
0x001754d0: sub esp, 8; mov eax, dword ptr [ebx + 4]; push esi; push ebx; call dword ptr [eax + 0x24]; 
0x00179c60: sub esp, 8; mov eax, dword ptr [ebx + 8]; push dword ptr [esp + 0x14]; push ebx; call dword ptr [eax]; 
0x00179e5f: sub esp, 8; mov eax, dword ptr [ebx + 8]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax + 0xc]; 
0x001708ff: sub esp, 8; mov eax, dword ptr [edi + 4]; and ebp, 0xfffffffc; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x00170809: sub esp, 8; mov eax, dword ptr [edi + 4]; push 0x20; push edi; call dword ptr [eax + 0x18]; 
0x001708bb: sub esp, 8; mov eax, dword ptr [edi + 4]; push 8; push edi; call dword ptr [eax + 0x18]; 
0x0017c14e: sub esp, 8; mov eax, dword ptr [esi + 4]; push ebx; push esi; call dword ptr [eax + 4]; 
0x0016ef8f: sub esp, 8; mov ecx, dword ptr [eax + 0x20]; push ebp; push eax; call dword ptr [ecx + 8]; 
0x001775df: sub esp, 8; mov edx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [edx + 4]; 
0x0016ee2b: sub esp, 8; mov edx, dword ptr [eax + 0x20]; push esi; push eax; call dword ptr [edx + 4]; 
0x0017088e: sub esp, 8; mov edx, dword ptr [edi + 4]; and eax, 0xfffffffc; push eax; push edi; call dword ptr [edx + 0x18]; 
0x00082782: sub esp, 8; push -1; push dword ptr [ebx]; call dword ptr [edi + 0xc]; 
0x00088f3a: sub esp, 8; push -1; push dword ptr [ecx]; call dword ptr [eax + 0xc]; 
0x00170efd: sub esp, 8; push 0; push ebx; call dword ptr [eax + 0x14]; 
0x0003ed55: sub esp, 8; push 0; push edx; call eax; 
0x0007b42c: sub esp, 8; push 0; push esi; call dword ptr [ebx + 8]; 
0x0016ee41: sub esp, 8; push dword ptr [esp + 0x1c]; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00061973: sub esp, 8; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x34]; call eax; 
0x000f15bf: sub esp, 8; push eax; push dword ptr [ebp - 0x5dc]; call esi; 
0x000f883f: sub esp, 8; push eax; push dword ptr [ebp - 0x5ec]; call esi; 
0x000a6e00: sub esp, 8; push eax; push dword ptr [ebx + 0x24]; call edx; 
0x0011440c: sub esp, 8; push ebp; push ecx; mov eax, dword ptr [esp + 0x18]; call eax; 
0x00179ea8: sub esp, 8; push ebx; lea edx, [esp + 0x38]; push edx; call dword ptr [eax + 0xc]; 
0x0013ac7c: sub esp, 8; push ebx; push dword ptr [ebx + 0x30]; call eax; 
0x00081515: sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x000a6d82: sub esp, 8; push ecx; push dword ptr [ebx + 0x24]; call eax; 
0x0003f260: sub esp, 8; push ecx; push dword ptr [esp + 0x4c]; call eax; 
0x001866c7: sub esp, 8; push edx; push eax; call dword ptr [ebx + 0x24]; 
0x0018674e: sub esp, 8; push edx; push eax; call dword ptr [ebx + 0x28]; 
0x000a6c73: sub esp, 8; push esi; push dword ptr [ebx + 0x24]; call eax; 
0x0008bcb8: sub esp, 8; push esi; push ebx; call dword ptr [edi + 0x18]; 
0x000e7818: sub esp, 8; push esi; push ebx; call eax; 
0x00056443: sub esp, ebx; std; dec dword ptr [ebx - 0x72ebdb84]; xchg dword ptr [eax + edi*2], esi; stc; call dword ptr [eax + 0x68]; 
0x00088f39: sub sp, 8; push -1; push dword ptr [ecx]; call dword ptr [eax + 0xc]; 
0x0003d652: syscall; 
0x000bae0d: sysret; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x001aa332: test ah, 0x20; jne 0x1aa3d0; lea eax, [edi - 4]; pop edi; ret; 
0x001aaeb2: test ah, 0x20; jne 0x1aaf50; lea eax, [ecx + 0xc]; ret; 
0x001ab0f2: test ah, 0x20; jne 0x1ab1a0; add edx, 0xc; jl 0x1ab1d0; lea eax, [ecx + 0xc]; ret; 
0x001ab4f9: test ah, 0x20; jne 0x1ab5b0; test ah, 0x40; jne 0x1ab5c0; lea eax, [edx + 0xf]; ret; 
0x001a9e76: test ah, 0x40; jne 0x1a9f60; lea eax, [edi + 0xf]; pop edi; ret; 
0x001aa832: test ah, 0x40; jne 0x1aa970; lea eax, [edi + 0xf]; pop edi; ret; 
0x001ab502: test ah, 0x40; jne 0x1ab5c0; lea eax, [edx + 0xf]; ret; 
0x001ac6c0: test ah, 0xf0; jne 0x1ac6e0; lea eax, [edi - 8]; pop edi; ret; 
0x001ac434: test ah, 0xf; jne 0x1ac450; test dh, 0xf; jne 0x1ac4a0; lea eax, [ecx + 0xc]; ret; 
0x001ac470: test ah, 1; jne 0x1ac490; lea eax, [ecx + 0xc]; ret; 
0x0003c066: test ah, 2; fchs; fcmove st(0), st(1); fstp st(1); ret; 
0x0003b994: test ah, 2; je 0x3b99b; fchs; ret; 
0x0003bd34: test ah, 2; je 0x3bd3b; fchs; ret; 
0x001aa309: test ah, 2; jne 0x1aa3a0; lea eax, [edi - 8]; pop edi; ret; 
0x001aae89: test ah, 2; jne 0x1aaf20; lea eax, [ecx + 8]; ret; 
0x001ab0c8: test ah, 2; jne 0x1ab170; add edx, 8; jl 0x1ab1d0; lea eax, [ecx + 8]; ret; 
0x001ab4d0: test ah, 2; jne 0x1ab580; test ah, 4; jne 0x1ab590; lea eax, [edx + 0xb]; ret; 
0x001aa809: test ah, 4; jne 0x1aa940; lea eax, [edi + 0xb]; pop edi; ret; 
0x001ab4d9: test ah, 4; jne 0x1ab590; lea eax, [edx + 0xb]; ret; 
0x000873bf: test ah, ah; call dword ptr [eax - 1]; 
0x00150962: test ah, al; add byte ptr [eax], al; add dh, dh; ret 0xf08; 
0x00073e19: test ah, bl; adc al, byte ptr [eax]; add byte ptr [ebx - 0x5137b], cl; inc dword ptr [ebx - 0x177cf714]; add dword ptr [ecx - 0x5037b], ecx; call dword ptr [esi - 1]; 
0x0011099f: test ah, bl; add byte ptr [eax], al; add byte ptr [eax - 0x7bf0ffc2], al; ret 0xb; 
0x0007bbff: test ah, cl; add byte ptr [eax], al; add byte ptr [ebx + 0x7d8be045], cl; in al, 0x89; ret; 
0x0007c3d7: test ah, cl; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x001a7680: test ah, cl; add dword ptr [eax], eax; add byte ptr [ebx - 0x7bf0fb03], al; ret; 
0x00077c1f: test ah, dl; mov esp, 0x852bffff; mov eax, 0x83fffffb; in al, dx; or al, 0x89; ret; 
0x0017f0b2: test al, 0; add byte ptr [eax - 0x73], dl; cmp eax, 0x62; stc; call dword ptr [eax + 0x6a]; 
0x0017d6e1: test al, 0; add byte ptr [eax - 0x73], dl; xchg byte ptr [ecx + 0x63], ch; stc; call dword ptr [eax + 0x6a]; 
0x0018076e: test al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [esi], edi; arpl cx, di; call dword ptr [eax + 0x6a]; 
0x00180bff: test al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [esi], edi; arpl cx, di; push dword ptr [ecx]; call dword ptr [eax + 0x6a]; 
0x001ab094: test al, 0; add byte ptr [eax], al; add edx, 4; jl 0x1ab1d0; lea eax, [ecx + 4]; ret; 
0x0011fd9c: test al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001ab4b4: test al, 0; add byte ptr [eax], al; lea eax, [edx + 7]; ret; 
0x00114dd3: test al, 0; add byte ptr [eax], al; mov eax, 0x133; call dword ptr gs:[0x10]; 
0x0010d29b: test al, 0; add byte ptr [eax], al; mov eax, dword ptr [esp + 0x23c]; mov dword ptr [esp + 0xac], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0011fd68: test al, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00114caa: test al, 0; add byte ptr [eax], al; mov esi, dword ptr [esp + 0xac]; call dword ptr gs:[0x10]; 
0x00173eb2: test al, 0; add byte ptr [eax], al; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x0018254e: test al, 0; add byte ptr [ebx + 0x227f01f8], al; add esp, 8; pop ebx; ret; 
0x0019a20a: test al, 0x18; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001aa2e0: test al, 0x20; jne 0x1aa370; lea eax, [edi - 0xc]; pop edi; ret; 
0x001aae60: test al, 0x20; jne 0x1aaef0; lea eax, [ecx + 4]; ret; 
0x001ab090: test al, 0x20; jne 0x1ab140; add edx, 4; jl 0x1ab1d0; lea eax, [ecx + 4]; ret; 
0x001ab4a8: test al, 0x20; jne 0x1ab550; test al, 0x40; jne 0x1ab560; lea eax, [edx + 7]; ret; 
0x0019970a: test al, 0x23; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018aa22: test al, 0x32; stc; call dword ptr [eax + 0x6a]; 
0x0009cf2e: test al, 0x3b; add byte ptr [eax], al; ret; 
0x00197a8a: test al, 0x3d; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001a9e24: test al, 0x40; jne 0x1a9ef0; lea eax, [edi + 7]; pop edi; ret; 
0x001aa7e0: test al, 0x40; jne 0x1aa910; lea eax, [edi + 7]; pop edi; ret; 
0x001aae58: test al, 0x40; jne 0x1aaf00; test al, 0x20; jne 0x1aaef0; lea eax, [ecx + 4]; ret; 
0x001ab4b0: test al, 0x40; jne 0x1ab560; lea eax, [edx + 7]; ret; 
0x00093d51: test al, 0x40; jne 0x93536; mov eax, 0x9d; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x00095c37: test al, 0x44; ret 0xfff9; 
0x0016f8e6: test al, 0x4c; or dh, bl; jmp dword ptr [ebp - 0x75]; 
0x0015567b: test al, 0x5d; stc; call dword ptr [eax + 0x53]; 
0x0019500a: test al, 0x65; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001847f8: test al, 0x66; stc; call dword ptr [eax - 0x18]; 
0x00183ee0: test al, 0x66; stc; call dword ptr [edi + 0x53]; 
0x00182cbf: test al, 0x66; stc; call dword ptr [edi + 0x56]; 
0x0018352b: test al, 0x66; stc; call dword ptr [esi + 0x57]; 
0x0005bda6: test al, 0x7a; stc; call dword ptr [eax - 0x73]; 
0x0012c566: test al, 0x83; in al, dx; add al, 0x51; push 3; push ebx; call edx; 
0x00179f67: test al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0005c75f: test al, 0x83; rcr byte ptr [ebx], 0x89; ret 0x25; 
0x0017061c: test al, 0x83; ret; 
0x00088a78: test al, 0x83; stc; call dword ptr [eax - 0x73]; 
0x0009546e: test al, 0x85; stc; call dword ptr [eax - 0x18]; 
0x0009545b: test al, 0x86; stc; call dword ptr [eax - 0x73]; 
0x00080f84: test al, 0x88; add byte ptr [eax], al; add byte ptr [ebp + 0x84b8], cl; add byte ptr [ebp - 0x9fa8b37], al; ret 0x7408; 
0x000d41cf: test al, 0x89; ret 0x458b; 
0x00111d8a: test al, 0x8b; jl 0x111db2; or byte ptr [ebp - 0x65def79], cl; call dword ptr [eax - 0x73]; 
0x000a2837: test al, 0x8e; stc; call dword ptr [eax - 0x18]; 
0x000c5b1e: test al, 0x9c; stc; call dword ptr [edx - 0x73]; 
0x000f00d9: test al, 0x9f; stc; call dword ptr [eax - 0x73]; 
0x0013c4c1: test al, 0xa9; stc; call dword ptr [eax - 0x73]; 
0x0012f075: test al, 0xab; add eax, 0x9bc28100; std; adc byte ptr [eax], al; mov eax, 0x123; call dword ptr gs:[0x10]; 
0x0010db08: test al, 0xac; ret 0xffea; 
0x0016b2e1: test al, 0xb5; stc; call dword ptr [eax - 0x18]; 
0x0017031b: test al, 0xb6; stc; call dword ptr [eax - 0x73]; 
0x00132054: test al, 0xc5; cmc; dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x0019af8a: test al, 0xd; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001ac5f5: test al, 0xf0; jne 0x1ac6b0; lea eax, [edi - 0x10]; pop edi; ret; 
0x000e9bbb: test al, 0xf3; jmp dword ptr [esi - 0x70]; 
0x000c95a0: test al, 0xf8; call dword ptr [esi + 0x53]; 
0x0013a52e: test al, 0xf9; call dword ptr [eax + 0x6a]; 
0x001398d6: test al, 0xf9; call dword ptr [eax - 0x75]; 
0x00139ac4: test al, 0xf9; call dword ptr [edx + 0x50]; 
0x001ac35a: test al, 0xf; jne 0x1ac420; test dl, 0xf; jne 0x1ac4a0; lea eax, [ecx + 4]; ret; 
0x0007837d: test al, 0xff; dec dword ptr [ebx - 0x4ff63]; inc dword ptr [ebx - 0x7c72f314]; cld; xor bh, cl; call dword ptr [eax - 0x18]; 
0x00130ab3: test al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000981fb: test al, 1; je 0x98240; mov eax, 0xf0; mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x001ac464: test al, 1; jne 0x1ac480; lea eax, [ecx + 4]; ret; 
0x00099494: test al, 1; jne 0x9946a; mov eax, 0x10; pop ebx; ret; 
0x001aa2bb: test al, 2; jne 0x1aa340; lea eax, [edi - 0x10]; pop edi; ret; 
0x001aacdb: test al, 2; jne 0x1aaec0; mov eax, ecx; ret; 
0x001aafe9: test al, 2; jne 0x1ab110; add edx, 0; jl 0x1ab1d0; mov eax, ecx; ret; 
0x001ab485: test al, 2; jne 0x1ab520; test al, 4; jne 0x1ab530; lea eax, [edx + 3]; ret; 
0x001aa7bd: test al, 4; jne 0x1aa8e0; lea eax, [edi + 3]; pop edi; ret; 
0x001aacd3: test al, 4; jne 0x1aaed0; test al, 2; jne 0x1aaec0; mov eax, ecx; ret; 
0x001ab48d: test al, 4; jne 0x1ab530; lea eax, [edx + 3]; ret; 
0x00069730: test al, 5; add byte ptr [ebx - 0x77cef3c], al; dec byte ptr [edi]; test byte ptr [ecx - 0x7cfffffe], ah; ret; 
0x00037f39: test al, 8; add byte ptr [ebx - 0x1c763], cl; inc dword ptr [ebx - 0x49f0ef3c]; lea edx, [esi + edi*8 - 1]; dec dword ptr [ecx - 0x1bf7b]; jmp dword ptr [ebp - 0x5f]; 
0x0018355b: test al, ah; add eax, dword ptr [eax]; add byte ptr [ebx - 0x7472f714], al; cdq; stc; call dword ptr [ecx - 0x77]; 
0x00182ceb: test al, al; add byte ptr [eax], al; add byte ptr [ebx - 0x6c72f714], al; cdq; stc; call dword ptr [edx - 0x77]; 
0x001ac460: test al, al; je 0x1ac470; test al, 1; jne 0x1ac480; lea eax, [ecx + 4]; ret; 
0x0009a9cf: test al, al; je 0x9a9e0; xor eax, eax; add esp, 8; pop ebx; ret; 
0x001898f0: test al, al; jne 0x189916; mov eax, 4; add esp, 0xc; ret; 
0x000c2be0: test al, al; jne 0xc2bd8; xor eax, eax; ret; 
0x000fa8e0: test al, al; jne 0xfa8b1; xor eax, eax; ret; 
0x00077f01: test al, ch; add al, byte ptr [eax]; add byte ptr [ebx - 0x51773], cl; call ecx; 
0x00077534: test al, dh; fdivr st(7); jmp dword ptr [ebp - 0x5f]; 
0x0007c2db: test bh, 4; add dl, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x0012728f: test bh, al; or al, 0; add byte ptr [ebp - 0x6ad557d], cl; call dword ptr [ecx + 0x51]; 
0x00127123: test bh, al; or al, byte ptr [eax]; add byte ptr [ebp - 0x6b03e7d], cl; call dword ptr [ecx + 0x51]; 
0x000741f4: test bh, al; sbb al, 0; add byte ptr [ecx], al; ret; 
0x0007f06c: test bh, bl; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x00050b4b: test bh, ch; add eax, dword ptr [eax]; add byte ptr [ecx], dh; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000b4364: test bh, dl; idiv bh; inc dword ptr [eax + 0xf000d79]; test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000a82b8: test bl, ah; add byte ptr [eax], al; add byte ptr [ecx - 0x76c3dbbc], cl; ret 0x448b; 
0x0018580f: test bl, bh; dec dword ptr [ebp - 0x644c77a]; call dword ptr [eax - 0x73]; 
0x000840f0: test bl, ch; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x00065b00: test bl, cl; add dword ptr [eax], eax; add byte ptr [eax - 0x7bf08006], al; ret 1; 
0x000fec58: test bl, dl; add dword ptr [eax], eax; add byte ptr [ebx + 0x48b9f14], cl; and al, 0x29; ret 0x5689; 
0x000894a8: test bl, dl; add eax, dword ptr [eax]; add byte ptr [ecx], bh; ret 0x820f; 
0x0006c2a8: test byte ptr [0x2bffffb4], ch; test dword ptr [eax - 0x7c000005], edi; in al, dx; or al, 0x89; ret; 
0x0004cfb1: test byte ptr [0x31000003], bl; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x001b2f66: test byte ptr [0x66000005], bl; cmp eax, 0x840f0800; ret; 
0x00074f26: test byte ptr [0x83000001], al; ret 0x8904; 
0x00148374: test byte ptr [0x89000001], ah; ret 0xe283; 
0x0006995b: test byte ptr [0x8b000011], al; test dword ptr [eax - 0x74000005], edi; xchg ebp, eax; mov esp, 0x1fffffb; ret 0x9589; 
0x001337a5: test byte ptr [eax + 0x18bb01ce], 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00034608: test byte ptr [eax + 0x200], dl; ret; 
0x00084e0b: test byte ptr [eax + 0x39000000], ch; ret; 
0x0007c40f: test byte ptr [eax + eax + 0x468b0000], bh; push 0x850fc085; ret 0; 
0x0016eee7: test byte ptr [eax + eax + 0x54890000], al; and al, 4; sub esp, 0xc; push eax; call dword ptr [ecx + 0xc]; 
0x001a6231: test byte ptr [eax + eax - 0x127d0000], bl; or byte ptr [edi], cl; test byte ptr [ebx - 0x7d000000], dl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x00130e97: test byte ptr [eax + eax - 0x137d0000], al; add al, 0x89; ret; 
0x000c2640: test byte ptr [eax + eax - 0x8be0000], dl; ret 3; 
0x000490ab: test byte ptr [eax + eax*4], ah; add al, byte ptr [eax]; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x20e9; 
0x0004838b: test byte ptr [eax + eax*4], ah; add al, byte ptr [eax]; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x8d2e; 
0x001b27be: test byte ptr [eax + eax*4], ah; add byte ptr [eax], al; add bh, dh; ret; 
0x0010f218: test byte ptr [eax + eax*8], ah; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x840f; 
0x001abc31: test byte ptr [eax + eax], bh; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x00105add: test byte ptr [eax + ebp*4], ah; add byte ptr [eax], al; add byte ptr [ebx - 0x76cbdbbc], cl; ret; 
0x000d0113: test byte ptr [eax + ebp*4], ah; add byte ptr [eax], al; add cl, ch; cmp cl, 0xff; call dword ptr [eax + 0x6a]; 
0x0011eeae: test byte ptr [eax + ebp*8], ah; add byte ptr [eax], al; add byte ptr [ebp - 0x6b5da7a], cl; call dword ptr [eax - 0x18]; 
0x0006e261: test byte ptr [eax + ebx*4], ah; add byte ptr [eax], al; add byte ptr [ecx + 0x3920246c], cl; ret; 
0x000cea47: test byte ptr [eax + ebx*4], ah; add byte ptr [eax], al; add byte ptr [ecx - 0x7ecbdbac], cl; ret 0; 
0x000c7fa7: test byte ptr [eax + ebx*4], ah; add byte ptr [eax], al; add byte ptr [ecx - 0x7ed3dbac], cl; ret 0; 
0x00115c14: test byte ptr [eax + ebx], ah; add dword ptr [eax], eax; add byte ptr [ebx + 0xf14247c], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc10c; 
0x0016e7e3: test byte ptr [eax + ecx*4], ah; add al, 0; add byte ptr [ebp - 0x69d6a7d], cl; call dword ptr [eax - 0x18]; 
0x00150476: test byte ptr [eax + ecx*4], ah; add byte ptr [eax], al; add byte ptr [ebx + 0x1008b11], cl; ret 0x5052; 
0x001b4fce: test byte ptr [eax + ecx*4], ah; add byte ptr [eax], al; add byte ptr [ebx - 0x76f7dbbc], cl; ret 0x8489; 
0x0012704e: test byte ptr [eax + ecx], ch; add byte ptr [ebx - 0x7c72f714], al; dec dword ptr [ebp - 7]; call dword ptr [eax + 0x55]; 
0x0003d89f: test byte ptr [eax + edi*4], ah; add byte ptr [eax], al; add byte ptr [ecx - 0x47dfdbbc], cl; mov dl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0005011f: test byte ptr [eax + edi*4], ah; add byte ptr [eax], al; add cl, ch; push es; idiv bh; call dword ptr [eax + 0x6a]; 
0x0015a048: test byte ptr [eax + edx*4], ah; add al, 0; add byte ptr [ecx - 0x76cbdbbc], cl; ret; 
0x000625a1: test byte ptr [eax + edx*4], ah; add byte ptr [eax], al; add byte ptr [ecx + 0x391c246c], cl; ret; 
0x00115c76: test byte ptr [eax + edx], ah; add dword ptr [eax], eax; add byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc10c; 
0x001abbe1: test byte ptr [eax - 0x48000000], bh; or byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x00176974: test byte ptr [eax - 0x6d910], dl; notrack jmp eax; lea esi, [esi]; xor eax, eax; pop ebx; ret; 
0x001271d9: test byte ptr [eax - 0x72fffff0], ah; and edi, 0x50; stc; call dword ptr [ecx + 0x51]; 
0x0006a029: test byte ptr [eax - 0x74ffffda], bl; test dword ptr [eax - 0x74000005], edi; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xd801; 
0x0002a7b0: test byte ptr [eax - 0x74fffffe], dl; jl 0x2a7dc; cmp byte ptr [ebp - 0x6951379], cl; call dword ptr [eax - 0x73]; 
0x0008a0c1: test byte ptr [eax - 0x75000000], bh; inc esi; add al, 0x8b; push esi; or byte ptr [ecx], ch; ret 0xfa39; 
0x0010f212: test byte ptr [eax - 0x75000000], bl; test byte ptr [eax + eax*8], ah; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x840f; 
0x0002c3a4: test byte ptr [eax - 0x75000000], dl; je 0x2c3d0; and byte ptr [ebx - 0x76dbdb84], cl; ret 0xf229; 
0x00095b81: test byte ptr [eax - 0x77000000], bh; ret 0xe281; 
0x000a37c3: test byte ptr [eax - 0x7afffffd], ah; ror byte ptr [edi], 0x84; push 0x89000003; ret 0x588d; 
0x000dd2f3: test byte ptr [eax - 0x7cfffffd], cl; in al, dx; or byte ptr [ebp - 0x6b9db7d], cl; call dword ptr [eax + 0x56]; 
0x0015cc1b: test byte ptr [eax - 0x7d000000], al; ret 0x8301; 
0x0002f219: test byte ptr [eax - 0x7d000000], bh; ret; 
0x0013fd8a: test byte ptr [eax - 0x7d000000], cl; ret 0x8303; 
0x00104fdc: test byte ptr [eax - 0x9fffff0], ch; ret 0xf02; 
0x0010dbc4: test byte ptr [eax - 7], cl; call dword ptr [eax - 0x18]; 
0x00062036: test byte ptr [eax], 0; add esp, 0x1c; ret; 
0x0008a868: test byte ptr [eax], 0x80; jne 0x8a870; ret; 
0x00080746: test byte ptr [eax], ah; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp - 0x6ff7d], cl; call dword ptr [eax - 0x73]; 
0x0005e61f: test byte ptr [eax], ah; add byte ptr [eax], al; add dh, dh; ret 0xf01; 
0x00151fe8: test byte ptr [eax], ah; out dx, al; dec dword ptr [ebx - 0x72f3dbac]; sub byte ptr [eax - 0x50], 0xf9; call dword ptr [eax + 0x68]; 
0x000f0a47: test byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012ee66: test byte ptr [eax], al; add byte ptr [eax], al; lea ecx, [esp + 0xc]; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x0016eee8: test byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp + 4], edx; sub esp, 0xc; push eax; call dword ptr [ecx + 0xc]; 
0x0012eea3: test byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x6c; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0013307d: test byte ptr [eax], al; add byte ptr [eax], al; mov ebx, 3; mov dword ptr [esp + 0x18], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00085229: test byte ptr [eax], al; add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x001272a9: test byte ptr [eax], bl; or al, 0; add byte ptr [ebp - 0x6ad017d], cl; call dword ptr [edx + 0x52]; 
0x00126f5b: test byte ptr [eax], ch; add eax, 0xec830000; or byte ptr [ebp - 0x6b4427d], cl; call dword ptr [eax + 0x55]; 
0x0010d844: test byte ptr [eax], dh; add dword ptr [eax], eax; add byte ptr [ebx - 0x1477b], cl; jmp dword ptr [ebp - 0x75]; 
0x00034829: test byte ptr [eax], dl; add dword ptr [eax], eax; add byte ptr [ebx], ah; inc esp; and al, 8; ret; 
0x00093f78: test byte ptr [ebp + 0x3c8b000a], bl; and al, 0x8d; xchg eax, ebp; test cl, bh; call dword ptr [eax - 0x73]; 
0x00186d78: test byte ptr [ebp + 0x50282444], -0x73; xchg esp, ecx; jl 0x186d77; call dword ptr [eax - 0x73]; 
0x001089f3: test byte ptr [ebp + 0xf000001], bh; mov dh, 0x43; add al, 0x89; ret 0xe283; 
0x0009a4e8: test byte ptr [ebp + 5], ah; add byte ptr [ebp - 0x46dfdbac], cl; pop ds; add byte ptr [eax], al; add byte ptr [ebp - 0x76e3db8c], cl; ret; 
0x001713b2: test byte ptr [ebp - 0x69b8b7d], cl; call dword ptr [edx + 0x6a]; 
0x0013b604: test byte ptr [ebp - 0x74000002], bh; inc ebx; and byte ptr [ebx - 0x137ce3ad], cl; add al, 0x83; ret; 
0x00038dfd: test byte ptr [ebp - 0x77000000], ch; ret 0xab8b; 
0x0018775e: test byte ptr [ebp - 0x77000000], cl; ret 0xe283; 
0x00110c8b: test byte ptr [ebp - 0x7cfffff1], ah; ret; 
0x00062b8b: test byte ptr [ebp - 0x7cfffff2], dl; ret; 
0x00140b9b: test byte ptr [ebp - 0x7cfffff9], bl; rol byte ptr [ecx], 0x83; ret 0x3904; 
0x0015a078: test byte ptr [ebp - 0x7cfffffe], bl; in al, dx; or byte ptr [ecx + 0x24448bc7], cl; and byte ptr [ebp - 0x6a13a80], cl; call dword ptr [eax + 0x55]; 
0x0010d2ce: test byte ptr [ebp - 0x7d000000], ah; jmp dword ptr [esi]; 
0x0015df86: test byte ptr [ebp - 0x7d000000], cl; ret 0x8014; 
0x000e15fe: test byte ptr [ebp - 0x9fffffb], dh; ret; 
0x000a6e24: test byte ptr [ebx + 0x28], 1; jne 0xa6e00; sub esp, 0xc; push eax; call edx; 
0x0004b9c1: test byte ptr [ebx + 0x39282444], cl; ret 0x840f; 
0x0008f5ec: test byte ptr [ebx + 0x5e5b0c43], 0x29; ror dword ptr [ebp + 0x40000184], 1; add byte ptr [eax], al; ret; 
0x0008f2e6: test byte ptr [ebx + 0x650c245c], -1; adc eax, 0x10; pop ebx; pop esi; ret; 
0x0012e3f8: test byte ptr [ebx + 0x6b], dl; out dx, eax; call dword ptr [ebx + 0x56]; 
0x000c1120: test byte ptr [ebx + 1], bl; add byte ptr [eax], al; bsr eax, eax; add eax, edi; pop edi; ret; 
0x0012713d: test byte ptr [ebx + ecx], dh; add byte ptr [ebp - 0x6b0087d], cl; call dword ptr [edx + 0x52]; 
0x00170b95: test byte ptr [ebx - 0x138], cl; mov dword ptr [esp + 0x10], edx; pop ebx; pop esi; jmp eax; 
0x0007752c: test byte ptr [ebx - 0x17cfe3a], al; sub dword ptr [edi], ecx; test al, dh; fdivr st(7); jmp dword ptr [ebp - 0x5f]; 
0x0005d437: test byte ptr [ebx - 0x18], dl; mov byte ptr [0x8bffff69], al; dec ebp; mov eax, 0x8910c483; ret 0x458b; 
0x000976f9: test byte ptr [ebx - 0x72000003], ah; xchg dword ptr [eax], ebx; xchg ecx, edi; call dword ptr [eax - 0x73]; 
0x000a3788: test byte ptr [ebx - 0x72fffffd], ch; pop edx; or dh, dh; ret; 
0x001ada8a: test byte ptr [ebx - 0x743e76c6], 0x5a; add al, 0x83; ret 0xd304; 
0x00181d3b: test byte ptr [ebx - 0x74c7dba4], cl; inc esi; or byte ptr [ecx], al; ret; 
0x000addc3: test byte ptr [ebx - 0x75000000], dh; pop ebp; rol byte ptr [ecx], 1; ret; 
0x00147434: test byte ptr [ebx - 0x76000002], bh; ret; 
0x00126f40: test byte ptr [ebx - 0x7cfffffd], dh; in al, dx; or byte ptr [ebp - 0x6b4ac7d], cl; call dword ptr [eax + 0x55]; 
0x00183f10: test byte ptr [ebx - 0x7d000000], bl; in al, dx; or byte ptr [ebp - 0x699666a], cl; call dword ptr [edx - 0x77]; 
0x0002fee0: test byte ptr [ebx - 0x7d000000], cl; in al, dx; or byte ptr [ebp - 0x6d47b7d], cl; call dword ptr [eax - 1]; 
0x00182cd0: test byte ptr [ebx - 0x7d000000], dh; in al, dx; or byte ptr [ebp - 0x6994955], cl; call dword ptr [ebp + 0x56]; 
0x001a623a: test byte ptr [ebx - 0x7d000000], dl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x00091096: test byte ptr [ebx - 0x7ffbdbb4], -0xf; add edi, 0x89744; add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; call dword ptr gs:[0x10]; 
0x00033a8d: test byte ptr [ebx - 0x814], dh; test eax, eax; je 0x33a99; call eax; 
0x001a5963: test byte ptr [ebx - 0x86474], al; sub eax, ecx; pop ebp; pop ebx; ret; 
0x001a3156: test byte ptr [ebx - 0x86474], al; sub eax, ecx; pop ebx; ret; 
0x00182c51: test byte ptr [ebx - 0xf76fb3c], 0x5b; pop esi; ret; 
0x0004d015: test byte ptr [ebx], ah; add al, byte ptr [eax]; add cl, bl; xchg dword ptr [eax], edx; ret 0xfff9; 
0x0018653c: test byte ptr [ebx], al; add byte ptr [eax], al; mov dword ptr [ebx + 0xc], eax; add esp, 0x28; pop ebx; ret; 
0x00177080: test byte ptr [ebx], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x137cafb9], cl; or al, 0x55; call dword ptr [eax + 0x10]; 
0x00027bee: test byte ptr [ebx], al; add dword ptr [eax], eax; add byte ptr [ecx - 0x76ff743b], cl; ret 0xce80; 
0x00176623: test byte ptr [ebx], al; lodsb al, byte ptr [esi]; and edi, ecx; call dword ptr [eax + 0x52]; 
0x00061ac0: test byte ptr [ebx], al; pushfd; xor bh, cl; call dword ptr [eax + 0x6a]; 
0x0007173e: test byte ptr [ebx], ch; or eax, dword ptr [eax]; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x448b; 
0x0002feea: test byte ptr [ebx], ch; stc; call dword ptr [eax - 1]; 
0x0018aef8: test byte ptr [ebx], dh; out dx, eax; jmp dword ptr [ecx]; 
0x000a9487: test byte ptr [ecx + 0x19c], 1; lea edx, [edx - 0xab574]; cmovne eax, edx; ret; 
0x0013d6b7: test byte ptr [ecx + 0x19c], 1; lea edx, [edx - 0xab584]; cmovne eax, edx; ret; 
0x0006c072: test byte ptr [ecx + 0x2bffffdd], ch; test dword ptr [eax - 0x7c000005], edi; in al, dx; or al, 0x89; ret; 
0x00123b37: test byte ptr [ecx + 0x39000000], al; ret; 
0x000c5bd0: test byte ptr [ecx + 0x75], 2; cmove eax, edx; ret; 
0x000a95b0: test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x17bea4]; cmove eax, edx; ret; 
0x000a9570: test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x17bf34]; cmove eax, edx; ret; 
0x000ab4d0: test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x17c2d4]; cmove eax, edx; ret; 
0x000aa120: test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x17c804]; cmove eax, edx; ret; 
0x000ac340: test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x17dec4]; cmove eax, edx; ret; 
0x000ac3c0: test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x18ed84]; cmove eax, edx; ret; 
0x000ab500: test byte ptr [ecx + 0x76], 0x10; cmove eax, edx; ret; 
0x000ac440: test byte ptr [ecx + 0x7b], 4; cmove eax, edx; ret; 
0x00096843: test byte ptr [ecx + 0x80e1], 0; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0013705c: test byte ptr [ecx + edx*2 + 1], 0x40; cmove edx, eax; mov eax, edx; pop ebx; ret; 
0x0006511b: test byte ptr [ecx - 0x73f14], dl; jmp eax; 
0x001932b1: test byte ptr [ecx - 0x769905be], 0x42; dec byte ptr [ebx + 0x5b082444]; ret; 
0x001891d6: test byte ptr [ecx - 0x76ffffff], al; ret 0x808b; 
0x0006973a: test byte ptr [ecx - 0x7cfffffe], ah; ret; 
0x0013b59a: test byte ptr [ecx - 0x7cfffffe], dh; in al, dx; or byte ptr [ebp - 0xcb43], cl; call dword ptr [edi + 0x6a]; 
0x0014316a: test byte ptr [ecx - 0x7cfffffe], dl; in al, dx; or al, 0x31; call dword ptr [ebp + 1]; 
0x000a8ed5: test byte ptr [ecx - 0x7cffffff], ah; ret 0xe901; 
0x000a8eed: test byte ptr [ecx - 0x7cffffff], bl; ret 0xe901; 
0x00175ffa: test byte ptr [ecx - 0x7d000000], ah; rcr byte ptr [ebx], 0x89; loope 0x175f8e; ret 0x25; 
0x000a224a: test byte ptr [ecx - 0x7d000000], ch; in al, dx; add al, 0x8d; or dword ptr [eax + 0x42], 0xfffffff9; call dword ptr [eax + 0x56]; 
0x0010ba8a: test byte ptr [ecx - 0x7d000000], dh; ret; 
0x00169b91: test byte ptr [ecx - 0x7d000000], dl; in al, dx; or al, 0x8d; test dword ptr [edx - 7], edi; call dword ptr [eax - 0x18]; 
0x0013b623: test byte ptr [ecx - 0x837b], cl; call dword ptr [esi + 0x6a]; 
0x000a952b: test byte ptr [ecx - 0xd14], dl; ret; 
0x000a94fb: test byte ptr [ecx - 0xe34], dl; ret; 
0x000a0cb0: test byte ptr [ecx - 7], al; call dword ptr [eax - 0x18]; 
0x000912b7: test byte ptr [ecx], 0xc3; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x001a96e8: test byte ptr [ecx], al; add byte ptr [eax], al; pop ebx; ret; 
0x00111651: test byte ptr [ecx], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x6af0fe05], al; ret; 
0x0010d1ba: test byte ptr [ecx], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x7aebdbac], cl; ror byte ptr [edi], cl; xchg ebp, eax; ret; 
0x0016bb41: test byte ptr [ecx], bh; add eax, dword ptr [eax]; add byte ptr [ebx - 0x7c72f314], al; cmp dword ptr [ebx - 7], esp; call dword ptr [eax - 0x18]; 
0x000bb5ae: test byte ptr [ecx], bl; adc dword ptr [eax], eax; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0004ce82: test byte ptr [ecx], ch; add eax, dword ptr [eax]; add cl, bl; xchg dword ptr [eax], ebx; ret 0xfff9; 
0x000b43ba: test byte ptr [ecx], dl; idiv bh; inc dword ptr [eax + 0xf000a79]; test byte ptr [edi], al; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00084c7c: test byte ptr [edi + 0x39000000], bh; ret; 
0x0008545c: test byte ptr [edi + 0x39000000], dh; ret; 
0x0015740b: test byte ptr [edi + 0x652f0000], cl; je 0x157476; mov byte ptr [ebx + 0x8f88], 0; mov dword ptr [ebx + 0x8f78], 0; call esi; 
0x000fb1ce: test byte ptr [edi + edi*8 - 1], ch; inc dword ptr [ecx + 0x654973fa]; push edx; mov edx, 0x20; cmovne eax, edx; ret; 
0x0013a98c: test byte ptr [edi - 0x74ffffff], dl; push esi; or al, 0xf6; ret 0xf04; 
0x0008f064: test byte ptr [edi - 0x75000000], ah; dec esp; and al, 0xc; mov eax, 0x1a6; xor edx, edx; call dword ptr gs:[0x10]; 
0x00177dd4: test byte ptr [edi - 0x75000000], ah; inc esi; cmp al, 0x83; in al, dx; or al, 0x55; call dword ptr [eax + 0x10]; 
0x0018bab4: test byte ptr [edi - 0x75000000], dl; outsb dx, byte ptr [esi]; or bh, dh; ret 0x202; 
0x0007566c: test byte ptr [edi - 0x76000024], bh; ret; 
0x001048e4: test byte ptr [edi - 0x77000000], bh; ret 0xe2c1; 
0x000303c7: test byte ptr [edi - 0x7cffffff], dh; rol byte ptr [ecx], 0x83; ret; 
0x001a5f4c: test byte ptr [edi - 0x7d000000], cl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x000dfa75: test byte ptr [edi - 0x9ffffe3], bh; ret; 
0x001a9383: test byte ptr [edi], -0x4a; push esi; imul byte ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x00106f7f: test byte ptr [edi], -0x6c; ret 0xd008; 
0x0006d801: test byte ptr [edi], -0x72; ret; 
0x0014017a: test byte ptr [edi], -0x78; add dword ptr ss:[eax], eax; add byte ptr [ebx - 0x76bbdbbc], cl; ret; 
0x000587db: test byte ptr [edi], -0x7b; insd dword ptr es:[edi], dx; add al, 0; add byte ptr [ebx - 0x36677b], al; jmp eax; 
0x000fd143: test byte ptr [edi], -0x7c; mov edx, 0x89000000; ret; 
0x001171a1: test byte ptr [edi], -0x7c; nop; add dword ptr [eax], eax; add byte ptr [ebx - 0x7ce7dbbc], cl; ret; 
0x00089b57: test byte ptr [edi], -0x7c; ret 0; 
0x001b0de1: test byte ptr [edi], -0x7c; ret 1; 
0x000d2a3a: test byte ptr [edi], -0x7c; ret; 
0x000bad26: test byte ptr [edi], 0; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0009349f: test byte ptr [edi], 0x49; ret; 
0x0002d5f5: test byte ptr [edi], ah; add al, byte ptr [eax]; add byte ptr [ebx - 0x72bbdb84], cl; xchg dword ptr [edx + ebp*2 - 7], ebp; call dword ptr [eax - 0x73]; 
0x0018aafc: test byte ptr [edi], al; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x000b43c4: test byte ptr [edi], al; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0008664c: test byte ptr [edi], bh; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x000ccedb: test byte ptr [edi], bl; add eax, dword ptr [eax]; add byte ptr [ecx], dh; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0006eef5: test byte ptr [edi], ch; or dword ptr [eax], eax; add byte ptr [ecx], al; ret; 
0x001271f3: test byte ptr [edi], dh; adc byte ptr [eax], al; add byte ptr [ebp - 0x6aef47d], cl; call dword ptr [edx + 0x52]; 
0x00063124: test byte ptr [edi], dh; or eax, dword ptr [eax]; add byte ptr [edi], cl; mov esi, 0x89c68900; ret 0x44c7; 
0x001079f8: test byte ptr [edx + 0x31000009], ah; shr cl, 8; idiv bh; jmp dword ptr [ebp - 0x5f]; 
0x001555ec: test byte ptr [edx + 0x39000001], bh; ret 0x840f; 
0x00072e43: test byte ptr [edx + 0x39000004], dl; ret; 
0x00094162: test byte ptr [edx + 0x80], 0x10; jne 0x94178; xor eax, eax; add esp, 0xc; ret; 
0x000965d6: test byte ptr [edx - 0x72000002], bh; xchg byte ptr [eax], al; xchg ecx, edi; call dword ptr [eax + 0x68]; 
0x000648ab: test byte ptr [edx - 0x72ffffeb], al; push eax; add dword ptr [ecx + 0xc60455], ecx; and eax, 0xfffb62e9; jmp dword ptr [esi - 0x70]; 
0x0015dec5: test byte ptr [edx - 0x74ffffea], ah; jl 0x15def1; or al, 0x8b; push edi; add al, 0xf7; ret 0xfffd; 
0x00068371: test byte ptr [edx - 0x74fffff2], dh; test dword ptr [eax - 0x74000005], edi; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xf801; 
0x000fd145: test byte ptr [edx - 0x77000000], bh; ret; 
0x0017c051: test byte ptr [edx - 0x77000000], bl; ret; 
0x001512f8: test byte ptr [edx - 0x7c000002], bl; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000d8442: test byte ptr [edx - 0x7c000019], bl; in al, dx; add al, 0x8b; popfd; ror cl, 0xff; call dword ptr [esi + 0x6a]; 
0x00177609: test byte ptr [edx - 0x7cfffffc], dl; in al, dx; or al, 0x8b; inc ebp; cmp al, 0x57; call dword ptr [eax + 0x10]; 
0x000c261d: test byte ptr [edx - 0x8ffffff], dl; ret 3; 
0x001a92e9: test byte ptr [edx - 0xa000000], ah; ret 0x7501; 
0x000b3506: test byte ptr [edx], 0; add byte ptr [edi + 0x5b], bl; ret; 
0x0005b71d: test byte ptr [edx], 0x20; je 0x5b730; add esp, 0xc; ret; 
0x000790cd: test byte ptr [edx], 0x20; je 0x790e0; add esp, 0xc; ret; 
0x00127084: test byte ptr [edx], ah; or dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f714], al; dec si; stc; call dword ptr [eax + 0x55]; 
0x000b923e: test byte ptr [edx], bh; adc dword ptr [eax], eax; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00126f91: test byte ptr [edx], bh; add eax, 0xec830000; or byte ptr [ebp - 0x6b3b57d], cl; call dword ptr [eax + 0x55]; 
0x000d5b52: test byte ptr [edx], bh; or al, 0; add byte ptr [ebx - 0x363f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x00127033: test byte ptr [edx], dl; or byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; mov bl, 0x4d; stc; call dword ptr [eax + 0x55]; 
0x0007cb4d: test byte ptr [esi + 0x39000001], cl; ret; 
0x0011e655: test byte ptr [esi + 4], bh; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xb7; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0006ab2d: test byte ptr [esi + ebp*8 - 1], ch; dec dword ptr [ebx - 0x4477b]; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xf801; 
0x0003de67: test byte ptr [esi + edi*8 - 1], dl; inc dword ptr [ecx]; ret; 
0x0010e1a2: test byte ptr [esi - 0x45ffffff], ah; add byte ptr [eax], al; add byte ptr [ecx], bh; ror byte ptr [edi], 1; dec esp; ret 0xdae9; 
0x00064892: test byte ptr [esi - 0x73e94], dl; jmp eax; 
0x0006602d: test byte ptr [esi - 0x74014], dl; jmp eax; 
0x0009395d: test byte ptr [esi - 0x74fffffd], bh; je 0x93989; add al, 0x89; ret; 
0x00187715: test byte ptr [esi - 0x77000000], dh; ret 0xe283; 
0x001701cb: test byte ptr [esi - 0x7c000002], bh; in al, dx; or al, 0x56; call eax; 
0x00127018: test byte ptr [esi - 0x7cfffff9], dh; in al, dx; or byte ptr [ebp - 0x6b2907d], cl; call dword ptr [eax + 0x55]; 
0x000307d5: test byte ptr [esi - 0x7cffffff], dl; in al, dx; or byte ptr [ebp - 0x68bbb79], cl; call dword ptr [eax + 0x56]; 
0x000ee303: test byte ptr [esi - 0x7d000000], bl; ret 0x8901; 
0x0008bc17: test byte ptr [esi], 0x80; jne 0x8bc48; add esp, 4; pop ebx; pop esi; ret; 
0x00080f60: test byte ptr [esi], 2; jne 0x80fc8; sub esp, 0xc; mov eax, dword ptr [eax + 0x88]; push esi; call dword ptr [eax + 0x34]; 
0x00069b65: test byte ptr [esi], ah; and al, 0; add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xf001; 
0x00062c06: test byte ptr [esi], al; dec esp; ret 0xfff8; 
0x0005c67d: test byte ptr [esi], cl; or dword ptr [eax], eax; add byte ptr [eax - 0xcb43], al; jmp dword ptr [esi - 0x75]; 
0x001513c0: test byte ptr [esp + eax*4], ah; add byte ptr [eax], al; add byte ptr [ebp - 0x6a4117d], cl; call dword ptr [eax - 0x73]; 
0x000db3f0: test byte ptr [esp + eax], ah; add dword ptr [eax], eax; add byte ptr [ecx + 0x50302444], cl; mov eax, dword ptr [esp + 0x64]; call eax; 
0x00066a33: test byte ptr [esp + eax], ch; add byte ptr [ecx], bh; ret; 
0x0010d2a7: test byte ptr [esp + ebp*4], ah; add byte ptr [eax], al; add byte ptr [eax + 0xaf], bh; call dword ptr gs:[0x10]; 
0x0010d019: test byte ptr [esp + ebp*4], ah; add byte ptr [eax], al; add byte ptr [eax + 0xaf], bh; mov dword ptr [esp + 0xb8], 0; call dword ptr gs:[0x10]; 
0x000c948c: test byte ptr [esp + ebp*4], ah; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add cl, ch; ret; 
0x0009b0ae: test byte ptr [esp + ebp*4], ah; add byte ptr [eax], al; add dh, dh; ret 0xf02; 
0x00055af5: test byte ptr [esp + ecx*4], ah; add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ror byte ptr [edi], 0x95; ret; 
0x0004f474: test byte ptr [esp + ecx*4], ah; sbb eax, dword ptr [eax]; add byte ptr [ecx - 0x76c7dbbc], cl; ret 0x448b; 
0x00050168: test byte ptr [esp + ecx*4], ah; sbb eax, dword ptr [eax]; add byte ptr [ecx - 0x76c7dbbc], cl; ret 0x45e9; 
0x0010d2a0: test byte ptr [esp + edi], ah; add al, byte ptr [eax]; add byte ptr [ecx + 0xac2484], cl; add byte ptr [eax], al; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0014cde4: test byte ptr [esp + edx*4], ah; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x00115b8c: test byte ptr [esp + edx], ah; add dword ptr [eax], eax; add byte ptr [ecx], dh; fisttp dword ptr [ecx - 0x763e7611]; ret 0xc031; 
0x0009e0ee: test byte ptr [esp + esi*4], ah; add byte ptr [eax], al; add byte ptr [ecx - 0x47dfdbbc], cl; mov dl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ef9f8: test byte ptr [esp + esi*8 - 1], dl; add esp, 0x14; pop ebx; pop esi; ret; 
0x0004c5bc: test byte ptr [esp + esi*8], ah; add byte ptr [eax], al; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x6de9; 
0x0004b8e7: test byte ptr [esp + esi*8], ah; add byte ptr [eax], al; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x8d2e; 
0x0016ab2d: test byte ptr [esp + esi*8], ah; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x840f; 
0x00043796: test byte ptr [esp + esi*8], ah; add byte ptr [eax], al; add cl, dl; call 0x21061825; ret 0xb60f; 
0x000cfeec: test byte ptr [esp], ah; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add cl, ch; ret; 
0x0015ff55: test byte ptr [esp], ah; or dword ptr [eax], eax; add byte ptr [eax + 0x56], dl; mov ecx, dword ptr [esp + 0x3c]; call ecx; 
0x0019f394: test ch, 0x40; jne 0x19f360; movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x0006f43f: test ch, ah; add eax, dword ptr [eax]; add byte ptr [ecx], al; ret; 
0x001046b5: test ch, al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000c9d62: test ch, al; add eax, dword ptr [eax]; add byte ptr [ecx], dh; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x001abb88: test ch, bh; add byte ptr [eax], al; add byte ptr [eax + 4], bh; pop edi; ret; 
0x00182d0e: test ch, cl; add byte ptr [eax], al; add byte ptr [ebx - 0x4472f714], al; mov ah, byte ptr [esi - 7]; call dword ptr [edi + 0x56]; 
0x000b436e: test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0006a29e: test ch, cl; xor eax, 0x858b0000; mov eax, 0x8bfffffb; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xd801; 
0x00142756: test ch, dh; add byte ptr [eax], al; add byte ptr [ebx - 0x41f0d0ec], cl; ret; 
0x000a6c6e: test ch, dl; add byte ptr [eax], al; add byte ptr [ebx - 0xa9f714], al; jae 0xa6c9e; call eax; 
0x0010286e: test ch, dl; add eax, dword ptr [eax]; add byte ptr [ebx - 0x7cf3dbbc], cl; ret 0xc704; 
0x000429e8: test cl, 0x20; je 0x429f1; mov eax, edx; xor edx, edx; ret; 
0x0019f2eb: test cl, 0x40; jne 0x19f360; movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x0009f6d3: test cl, 0x40; jne 0x9f700; add ebx, 1; mov eax, 0x115; call dword ptr gs:[0x10]; 
0x00092b23: test cl, bh; call dword ptr [eax + 0x68]; 
0x00092e9e: test cl, bh; call dword ptr [eax - 0x18]; 
0x00092fbd: test cl, bh; call dword ptr [eax - 0x73]; 
0x00092bdf: test cl, bh; call dword ptr [edx + 0x50]; 
0x000c11a2: test cl, bl; add byte ptr [eax], al; add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x0002fec2: test cl, cl; add byte ptr [eax], al; add byte ptr [ebx - 0x6c72f714], al; jle 0x2fef9; stc; call dword ptr [edx + 0x50]; 
0x00169722: test cl, cl; add byte ptr [eax], al; add byte ptr [ebx - 0x7cefdbac], cl; ret 0x8902; 
0x00126fe2: test cl, cl; add eax, 0xec830000; or byte ptr [ebp - 0x6b2f87d], cl; call dword ptr [eax + 0x55]; 
0x00113360: test cl, cl; jne 0x113343; xor eax, eax; pop ebx; ret; 
0x000f0b90: test cl, cl; jne 0xf0b73; xor eax, eax; pop ebx; ret; 
0x000f36d0: test cl, cl; jne 0xf36b3; xor eax, eax; pop ebx; ret; 
0x000f44d0: test cl, cl; jne 0xf44b3; xor eax, eax; pop ebx; ret; 
0x000f7000: test cl, cl; jne 0xf6fe3; xor eax, eax; pop ebx; ret; 
0x000f7e10: test cl, cl; jne 0xf7df3; xor eax, eax; pop ebx; ret; 
0x001374ba: test cl, dl; add eax, dword ptr [eax]; add byte ptr [ecx], bh; ret; 
0x001a9b45: test dh, 0x20; jne 0x1a9b90; test dh, 0x40; jne 0x1a9b94; add eax, 0xf; ret; 
0x001a9b4a: test dh, 0x40; jne 0x1a9b94; add eax, 0xf; ret; 
0x001a9d97: test dh, 0x40; jne 0x1a9f70; lea eax, [edi + 0xf]; pop edi; ret; 
0x001ab932: test dh, 0x40; jne 0x1abcc1; add eax, 0xf; pop edi; ret; 
0x001ac439: test dh, 0xf; jne 0x1ac4a0; lea eax, [ecx + 0xc]; ret; 
0x001a9b2c: test dh, 2; jne 0x1a9b80; test dh, 4; jne 0x1a9b84; add eax, 0xb; ret; 
0x001a9b31: test dh, 4; jne 0x1a9b84; add eax, 0xb; ret; 
0x001a9ddd: test dh, 4; jne 0x1a9f70; lea eax, [edi + 0xb]; pop edi; ret; 
0x001ab909: test dh, 4; jne 0x1abcad; add eax, 0xb; pop edi; ret; 
0x000f6f31: test dh, ah; in al, 0xff; inc dword ptr [ebx - 0x17a9f314]; popal; ret 0xfff2; 
0x001abbce: test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x00127069: test dh, al; or byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; xor dword ptr [esi - 7], ecx; call dword ptr [eax + 0x55]; 
0x0007f83d: test dh, bh; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0006ef57: test dh, bl; or al, byte ptr [eax]; add byte ptr [edi], cl; mov esi, 0x89c68900; ret; 
0x000d75e4: test dh, cl; add dword ptr [eax], eax; add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x001ac355: test dh, dl; add byte ptr [eax], al; add byte ptr [eax - 0x417af0f1], ch; add byte ptr [eax], al; add dh, dh; ret 0xf0f; 
0x001a9b05: test dl, 0x20; jne 0x1a9b70; test dl, 0x40; jne 0x1a9b74; add eax, 7; ret; 
0x001a9b0a: test dl, 0x40; jne 0x1a9b74; add eax, 7; ret; 
0x001a9cf4: test dl, 0x40; jne 0x1a9f70; lea eax, [edi + 7]; pop edi; ret; 
0x001ab8e2: test dl, 0x40; jne 0x1abc99; add eax, 7; pop edi; ret; 
0x001ac362: test dl, 0xf; jne 0x1ac4a0; lea eax, [ecx + 4]; ret; 
0x001a9ae6: test dl, 2; jne 0x1a9b60; test dl, 4; jne 0x1a9b64; add eax, 3; ret; 
0x001a9aeb: test dl, 4; jne 0x1a9b64; add eax, 3; ret; 
0x001a9d3a: test dl, 4; jne 0x1a9f70; lea eax, [edi + 3]; pop edi; ret; 
0x001ab8bc: test dl, 4; jne 0x1abc85; add eax, 3; pop edi; ret; 
0x00075071: test dl, bl; add al, byte ptr [eax]; add byte ptr [ebp - 0x4cb7b], cl; call dword ptr [ecx - 1]; 
0x00051751: test dl, ch; add byte ptr [eax], al; add byte ptr [ebx + 0x390c2444], cl; ret; 
0x0007fdc1: test dl, cl; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000a55d1: test dl, cl; add eax, dword ptr [eax]; add byte ptr [ebp + 0x94c87], cl; add byte ptr [ecx - 0x9efdbbc], cl; ret 0xf04; 
0x00167079: test dl, dh; call dword ptr [eax - 0x18]; 
0x00113393: test dl, dl; je 0x113364; pop ebx; ret; 
0x000d9995: test dl, dl; je 0xd99b0; mov cl, dl; and cl, 0xf; je 0xd99c0; ret; 
0x000f0bc3: test dl, dl; je 0xf0b94; pop ebx; ret; 
0x000f3703: test dl, dl; je 0xf36d4; pop ebx; ret; 
0x000f4503: test dl, dl; je 0xf44d4; pop ebx; ret; 
0x000f7033: test dl, dl; je 0xf7004; pop ebx; ret; 
0x000f7e43: test dl, dl; je 0xf7e14; pop ebx; ret; 
0x00039d5f: test dl, dl; jne 0x39d40; ret; 
0x000a86c2: test dl, dl; mov edx, 0; cmove eax, edx; ret; 
0x00043272: test dl, dl; mov edx, 8; cmove eax, edx; ret; 
0x00028388: test dl, dl; movzx eax, dl; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x000b39e7: test dword ptr [0x5bfffffe], edx; ret; 
0x000b38bf: test dword ptr [0x5bffffff], edi; ret; 
0x000c224d: test dword ptr [0x5e000002], eax; xor eax, eax; pop ebx; ret; 
0x000b94fe: test dword ptr [0x5f000009], ebx; pop esi; pop ebx; ret; 
0x00197694: test dword ptr [0xc381ffff], esp; cwde; inc ecx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000b8146: test dword ptr [0xe9fffff5], esp; pushal; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000b3c76: test dword ptr [0xe9fffff6], eax; inc eax; idiv edi; jmp dword ptr [esi + 0xf]; 
0x000b3c56: test dword ptr [0xe9fffff6], esp; pushal; idiv edi; jmp dword ptr [esi + 0xf]; 
0x0010e2ee: test dword ptr [0xf7fffffd], edi; ret 0x67; 
0x000f1f61: test dword ptr [eax + 0x1fffffb], eax; ret; 
0x0002806c: test dword ptr [eax + 0x29], edi; stc; call dword ptr [edi - 1]; 
0x0003e500: test dword ptr [eax + 0x29fffffc], edi; ret; 
0x000686ae: test dword ptr [eax + 0x39fffffb], edi; ret; 
0x000a2177: test dword ptr [eax + 0x42], ecx; stc; call dword ptr [eax + 0x53]; 
0x0017c47d: test dword ptr [eax + 0x56], ebp; stc; call dword ptr [eax + 0x6a]; 
0x000b365b: test dword ptr [eax + 0x5f000001], esp; pop ebx; ret; 
0x000b3563: test dword ptr [eax + 0x5f000002], ebx; pop ebx; ret; 
0x000c178b: test dword ptr [eax + 0x66000000], esi; pmovmskb eax, mm1; bsr eax, eax; add eax, ecx; ret; 
0x001425c4: test dword ptr [eax + 0x6afff958], esp; add eax, 0x4c858d50; je 0x1425ca; call dword ptr [eax - 0x18]; 
0x00027fe8: test dword ptr [eax + 0x70], ecx; stc; jmp dword ptr [esi - 0x77]; 
0x000baabb: test dword ptr [eax + 0xa], esp; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x001a6d31: test dword ptr [eax + 2], edx; add byte ptr [eax], al; pop ebx; ret; 
0x000b94db: test dword ptr [eax + 9], eax; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x001a6631: test dword ptr [eax + 9], edx; add byte ptr [eax], al; pop ebx; ret; 
0x001a9e1f: test dword ptr [eax + eax + 0x40a80000], edi; jne 0x1a9ef0; lea eax, [edi + 7]; pop edi; ret; 
0x000fdfce: test dword ptr [eax + eax + 0x4f60000], ebx; inc edx; add dword ptr [esi + ecx - 0x77], esi; ret; 
0x000d96f7: test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x001632af: test dword ptr [eax + eax - 0x137d0000], eax; or byte ptr [ebx - 0x72efdbbc], cl; adc byte ptr [ebx + 0x60], 0xf9; call dword ptr [eax - 1]; 
0x000fb057: test dword ptr [eax + eax - 0x2f770000], edx; pop ebx; ret; 
0x00187337: test dword ptr [eax + eax - 0x3b7d0000], ebp; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000a028e: test dword ptr [eax + eax - 0x3b7d0000], ebx; and byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0012fe06: test dword ptr [eax + eax - 0x3b7d0000], edx; and byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000b955f: test dword ptr [eax + ecx + 0x5e5f0000], edi; pop ebx; ret; 
0x000b95a7: test dword ptr [eax + ecx], esi; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00027fde: test dword ptr [eax + esi*2 - 7], eax; dec dword ptr [ecx - 0x48f0f7bd]; test dword ptr [eax + 0x70], ecx; stc; jmp dword ptr [esi - 0x77]; 
0x001ab4ab: test dword ptr [eax - 0x58000000], esp; inc eax; jne 0x1ab560; lea eax, [edx + 7]; ret; 
0x001ab4b3: test dword ptr [eax - 0x73000000], ebp; inc edx; pop es; ret; 
0x001aa2e3: test dword ptr [eax - 0x73000000], ecx; inc edi; hlt; pop edi; ret; 
0x00069961: test dword ptr [eax - 0x74000005], edi; xchg ebp, eax; mov esp, 0x1fffffb; ret 0x9589; 
0x0006a02f: test dword ptr [eax - 0x74000005], edi; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xd801; 
0x00069b6b: test dword ptr [eax - 0x74000005], edi; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xf001; 
0x00068377: test dword ptr [eax - 0x74000005], edi; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xf801; 
0x0006819e: test dword ptr [eax - 0x74000005], edi; xchg ebp, eax; mov esp, 0x83fffffb; mov byte ptr [ecx], 1; ret 0x9589; 
0x000685ff: test dword ptr [eax - 0x74000005], edi; xchg ebp, eax; mov esp, 0x8bfffffb; lea esi, [edx + edi*8 - 1]; inc dword ptr [ecx]; ret 0xd801; 
0x000f2166: test dword ptr [eax - 0x76000005], ecx; ret 0xe329; 
0x000685e2: test dword ptr [eax - 0x76000005], edi; lea esi, [edx + edi*8 - 1]; call dword ptr [eax - 0x18]; 
0x00069938: test dword ptr [eax - 0x76000005], edi; lea esp, [edx + edi*8 - 1]; dec dword ptr [ecx - 0x5976b]; call dword ptr [eax - 0x18]; 
0x000d723c: test dword ptr [eax - 0x76000037], esi; ret 0x12e9; 
0x000d5f08: test dword ptr [eax - 0x76000037], esi; ret 0x8b90; 
0x001aacbb: test dword ptr [eax - 0x77ffffff], esi; ret 0xe280; 
0x000685d7: test dword ptr [eax - 0x7c000005], edi; in al, dx; or al, 0x29; ret; 
0x0006c078: test dword ptr [eax - 0x7c000005], edi; in al, dx; or al, 0x89; ret; 
0x00170022: test dword ptr [eax - 0x7cfffffe], edi; ret; 
0x0014b17b: test dword ptr [eax - 0x7cffffff], eax; in al, dx; or al, 0x8d; adc dword ptr [ebx], 0x5b; stc; call dword ptr [eax - 0x18]; 
0x00158353: test dword ptr [eax - 0x7d000000], ebp; clc; add dword ptr [ebp + 0xf04004c], ecx; xchg esp, eax; ret 0x448b; 
0x00112b93: test dword ptr [eax - 0x7d000000], ebp; ret 0x8d01; 
0x001ab093: test dword ptr [eax - 0x7d000000], ebp; ret 0xf04; 
0x001a5f43: test dword ptr [eax - 0x7d000000], ebp; stc; add byte ptr [edi], cl; test byte ptr [edi - 0x7d000000], cl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x001638f3: test dword ptr [eax - 0x7d000000], edi; clc; add dword ptr [ebp + 0xf04004c], ecx; xchg esp, eax; ret 0x448b; 
0x00163e93: test dword ptr [eax - 0x7d000000], esi; clc; add dword ptr [ebp + 0xf04004c], ecx; xchg esp, eax; ret 0x448b; 
0x0017460f: test dword ptr [eax - 0x7d000000], esi; in al, dx; or al, 0x56; call dword ptr [eax + 0x10]; 
0x0014e80c: test dword ptr [eax - 0x9fffffc], ecx; ret; 
0x000fd493: test dword ptr [eax - 0xa000000], ecx; ret 0x7420; 
0x0003e001: test dword ptr [eax], 0x1cc48300; ret; 
0x0007b9b5: test dword ptr [eax], 0xec830000; or al, 0x56; call dword ptr [ebx + 0x30]; 
0x000b35fb: test dword ptr [eax], eax; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x000d37ae: test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ebx + 0x448b8614], cl; cmp dword ptr [ecx + edi], eax; ret 0x8f0f; 
0x000a19b8: test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], al; fidivr dword ptr [ecx]; ret 0xa72; 
0x000d3d11: test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x328b; 
0x000d2b22: test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xa8b; 
0x00114ed7: test dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000d755c: test dword ptr [eax], eax; in eax, 0xff; dec dword ptr [ebx - 0x35e373]; inc dword ptr [ebx - 0x6bf0fe05]; ret 0xc139; 
0x0004a844: test dword ptr [eax], eax; ret 0xfff9; 
0x001675d3: test dword ptr [eax], ebp; add dword ptr [eax], eax; add byte ptr [ebx + 0x4c8d01f8], al; add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x448b; 
0x001ab770: test dword ptr [eax], ebp; add dword ptr [eax], eax; add byte ptr [ebx - 0x79f0bf11], al; ret 1; 
0x000ddf82: test dword ptr [eax], ebp; inc esi; stc; call dword ptr [eax - 0x18]; 
0x001660a3: test dword ptr [eax], ebx; add dword ptr [eax], eax; add byte ptr [ebx + 0x4c8d01f8], al; add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x448b; 
0x000bab03: test dword ptr [eax], ebx; or al, byte ptr [eax]; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0004a871: test dword ptr [eax], ebx; ret 0xfff9; 
0x000f2b0b: test dword ptr [eax], ecx; add byte ptr [eax], al; add byte ptr [ebx - 0x46f63], cl; call dword ptr [esi + 0x51]; 
0x00159843: test dword ptr [eax], ecx; add dword ptr [eax], eax; add byte ptr [ebx + 0x4c8d01f8], al; add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x448b; 
0x00160403: test dword ptr [eax], edi; add dword ptr [eax], eax; add byte ptr [ebx + 0x4c8d01f8], al; add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x448b; 
0x0015929b: test dword ptr [eax], edx; add dword ptr [eax], eax; add byte ptr [ebx + 0x4c8d01f8], al; add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x448b; 
0x0004a98d: test dword ptr [eax], edx; ret 0xfff9; 
0x00167a8b: test dword ptr [eax], esi; add dword ptr [eax], eax; add byte ptr [ebx + 0x4c8d01f8], al; add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x448b; 
0x00165beb: test dword ptr [eax], esp; add dword ptr [eax], eax; add byte ptr [ebx + 0x4c8d01f8], al; add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x448b; 
0x00143be1: test dword ptr [ebp + 0x30], ecx; stc; call dword ptr [eax - 0x77]; 
0x001a80ee: test dword ptr [ebp + 0x5b000000], edi; ret; 
0x001859a6: test dword ptr [ebp + 0x5b000000], esp; pop esi; pop edi; ret; 
0x001a6ddc: test dword ptr [ebp + 0x5b000001], esp; ret; 
0x001a6bfc: test dword ptr [ebp + 0x5b000003], eax; ret; 
0x001a66cc: test dword ptr [ebp + 0x5b000008], esi; ret; 
0x000c22c1: test dword ptr [ebp + 0x5e000001], esp; xor eax, eax; pop ebx; ret; 
0x000bab66: test dword ptr [ebp + 0x5f000009], esi; pop esi; pop ebx; ret; 
0x000a7a0c: test dword ptr [ebp + 0x6afff944], ecx; add eax, 0x4c858d50; je 0xa7a12; call dword ptr [eax - 0x18]; 
0x001a6a26: test dword ptr [ebp + 5], eax; add byte ptr [eax], al; pop ebx; ret; 
0x000b988f: test dword ptr [ebp + eax + 0x5e5f0000], ecx; pop ebx; ret; 
0x000b985f: test dword ptr [ebp + eax + 0x5e5f0000], edi; pop ebx; ret; 
0x00096f59: test dword ptr [ebp + eax*4 - 7], ecx; call dword ptr [eax - 0x18]; 
0x000b80e6: test dword ptr [ebp - 0x1600000b], eax; sal dh, 0xff; jmp dword ptr [esi + 0xf]; 
0x001a9cd6: test dword ptr [ebp - 0x57fffffe], edx; and byte ptr [edi], cl; test ebp, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x001aae36: test dword ptr [ebp - 0x58000000], edx; add cl, byte ptr [edi]; test dword ptr [ebp], edi; add byte ptr [eax], al; mov eax, ecx; ret; 
0x001ab066: test dword ptr [ebp - 0x58000000], esi; add cl, byte ptr [edi]; test dword ptr [ebp - 0x7d000000], ebx; ret 0xf00; 
0x001aa336: test dword ptr [ebp - 0x73000000], edx; inc edi; cld; pop edi; ret; 
0x00110d89: test dword ptr [ebp - 0x74fffff1], esp; jl 0x110db5; or byte ptr [ebp - 0x65dfb79], cl; call dword ptr [eax + 0x68]; 
0x0015fd57: test dword ptr [ebp - 0x74fffffe], esp; je 0x15fd83; adc byte ptr [ebp - 0x64ab37a], cl; call dword ptr [eax - 0x73]; 
0x0002931b: test dword ptr [ebp - 0x74ffffff], ebx; jl 0x29347; sub byte ptr [ebp - 0x6945379], cl; call dword ptr [eax - 0x73]; 
0x00091a76: test dword ptr [ebp - 0x77000000], ebp; ret 0xca83; 
0x001aade6: test dword ptr [ebp - 0x78000000], eax; ret 0xe280; 
0x0014c7d6: test dword ptr [ebp - 0x7c000003], esp; ret; 
0x001ab06e: test dword ptr [ebp - 0x7d000000], ebx; ret 0xf00; 
0x0012342a: test dword ptr [ebp - 0x7d000000], ecx; les ebx, ptr [eax]; mov eax, ebx; pop ebx; ret; 
0x001ab0f6: test dword ptr [ebp - 0x7d000000], esp; ret 0xf0c; 
0x00195694: test dword ptr [ebp - 1], eax; inc dword ptr [ecx + 0x45f18c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00137d2a: test dword ptr [ebp - 7], edx; call dword ptr [eax - 1]; 
0x001aa2be: test dword ptr [ebp], edi; add byte ptr [eax], al; lea eax, [edi - 0x10]; pop edi; ret; 
0x001aae3e: test dword ptr [ebp], edi; add byte ptr [eax], al; mov eax, ecx; ret; 
0x000bad78: test dword ptr [ebx + 0x5f000007], esp; pop esi; pop ebx; ret; 
0x000d9650: test dword ptr [ebx + 1], ecx; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x001a9cf8: test dword ptr [ebx + 2], esi; add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x001a67f8: test dword ptr [ebx + 7], esi; add byte ptr [eax], al; pop ebx; ret; 
0x000bada8: test dword ptr [ebx + 7], esi; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000b94c0: test dword ptr [ebx + 9], ebx; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000b34df: test dword ptr [ebx + eax], ebx; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000c424b: test dword ptr [ebx + ebx*4], esp; stc; call dword ptr [eax - 0x18]; 
0x001486cf: test dword ptr [ebx + edi*8 + 0x458bffff], edi; and byte ptr [ecx - 0x4477b], cl; jmp dword ptr [ebp - 0x5f]; 
0x001486c6: test dword ptr [ebx + edi*8 + 0x458bffff], esi; sbb al, 0x89; test dword ptr [ebx + edi*8 + 0x458bffff], edi; and byte ptr [ecx - 0x4477b], cl; jmp dword ptr [ebp - 0x5f]; 
0x001340dd: test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x0012bbee: test dword ptr [ebx + edi*8 - 1], ebp; call dword ptr [eax - 0x18]; 
0x000f1c19: test dword ptr [ebx + edi*8 - 1], ebp; jmp dword ptr [eax]; 
0x0012bbd3: test dword ptr [ebx + edi*8 - 1], ecx; call dword ptr [eax - 0x73]; 
0x0013409b: test dword ptr [ebx + edi*8 - 1], ecx; call ecx; 
0x0012bbcd: test dword ptr [ebx + edi*8 - 1], edi; dec dword ptr [ecx - 0x4b37b]; call dword ptr [eax - 0x73]; 
0x000f1bb8: test dword ptr [ebx + edi*8 - 1], edi; inc dword ptr [ecx]; ret; 
0x0012bb16: test dword ptr [ebx + edi*8 - 1], esi; dec dword ptr [edi]; test dword ptr [edi - 0x7cfffffe], esi; in al, dx; or byte ptr [ebp - 0x46b7b], cl; call dword ptr [eax + 0x6a]; 
0x000f3222: test dword ptr [ebx + edi*8 - 1], esp; dec dword ptr [ebx - 0x49773]; inc dword ptr [ecx]; rol byte ptr [ecx], 1; ret; 
0x0012ba92: test dword ptr [ebx + edi*8 - 1], esp; jmp dword ptr [ebp - 0x5f]; 
0x00093996: test dword ptr [ebx - 0x72000005], ebx; lea esp, [eax]; add al, byte ptr [eax]; add byte ptr [eax + 0x9b], bh; call dword ptr gs:[0x10]; 
0x001b0670: test dword ptr [ebx - 0x74fffff7], ebx; xchg esp, eax; and al, 0x8c; add byte ptr [eax], al; add bh, dh; ret 0; 
0x0006fa21: test dword ptr [ebx - 0x76ffffff], ebp; add ebp, ecx; ret; 
0x0010a69b: test dword ptr [ebx - 0x7c000006], esp; ret 0x8301; 
0x001ab90d: test dword ptr [ebx - 0x7cfffffd], ebx; ror byte ptr [ebx], 0x5f; ret; 
0x001782c7: test dword ptr [ebx - 0x7f000000], ebx; les esp, ptr [eax + 0x5b000000]; pop esi; pop edi; ret; 
0x000b79b8: test dword ptr [ebx - 0x7ffffffe], edx; cmp byte ptr [ecx], al; sbb eax, -1; pop edi; pop ebx; ret; 
0x00104fe5: test dword ptr [ebx - 0x9fffff1], esi; ret 0xf04; 
0x001ab8ae: test dword ptr [ebx - 0xa000000], ecx; ret 0xf02; 
0x001a6bfd: test dword ptr [ebx], eax; add byte ptr [eax], al; pop ebx; ret; 
0x000bac18: test dword ptr [ebx], eax; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b3b30: test dword ptr [ebx], ebp; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000e1d45: test dword ptr [ebx], ebx; out 0xff, eax; call dword ptr [ebp + 0x55]; 
0x000b3b50: test dword ptr [ebx], ecx; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000baae0: test dword ptr [ebx], edi; or al, byte ptr [eax]; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0010d4f1: test dword ptr [ebx], edx; add al, 0; add dh, dh; ret 0xf80; 
0x00076918: test dword ptr [ebx], esi; ret; 
0x00090d44: test dword ptr [ebx], esp; add dword ptr [eax], eax; add byte ptr [ecx + 0x94c4], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x001a6900: test dword ptr [ecx + 0x5b000006], eax; ret; 
0x000b3a5b: test dword ptr [ecx + 0x5bfffffd], esp; ret; 
0x000b3963: test dword ptr [ecx + 0x5bfffffe], ebx; ret; 
0x000d9712: test dword ptr [ecx + 0x5f000000], ecx; pop esi; ret; 
0x000b9582: test dword ptr [ecx + 0x5f000008], ebx; pop esi; pop ebx; ret; 
0x0017c460: test dword ptr [ecx + 0x6afff964], eax; add eax, 0x4c858d50; je 0x17c466; call dword ptr [eax - 0x18]; 
0x001a8062: test dword ptr [ecx + 1], ecx; add byte ptr [eax], al; pop ebx; ret; 
0x001aad8a: test dword ptr [ecx + 2], esi; add byte ptr [eax], al; xor eax, eax; ret; 
0x000b96b2: test dword ptr [ecx + 7], ebp; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000baba2: test dword ptr [ecx + 9], edi; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x001b134c: test dword ptr [ecx + eax + 0x3c890000], ebx; sbb dword ptr [ecx - 0x7cfbe684], ecx; ret; 
0x0015a0b5: test dword ptr [ecx + eax - 0x137d0000], ecx; or byte ptr [ebx - 0x72dfdbbc], cl; or dh, 0x5e; stc; call dword ptr [eax + 0x55]; 
0x000d9697: test dword ptr [ecx + eax], eax; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x000c3b7c: test dword ptr [ecx + eax], edx; add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x000d9667: test dword ptr [ecx + eax], esi; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x000d61be: test dword ptr [ecx + ecx*8 + 0x468dffff], ecx; dec dword ptr [edi]; dec edi; ret 0x48d; 
0x00056c0a: test dword ptr [ecx + ecx*8 - 1], ebp; dec dword ptr [ebx - 0x36977b]; dec dword ptr [ebx - 0x366f63]; dec dword ptr [ebx - 0x36936b]; inc dword ptr [ecx]; ret; 
0x00098ba9: test dword ptr [ecx - 0x77000000], ecx; ret 0xf283; 
0x001a4a30: test dword ptr [ecx - 0x7cfffff2], ebp; std; adc byte ptr [ebp - 0x79f00f93], cl; call dword ptr [eax]; 
0x0016f6a5: test dword ptr [ecx - 0x7d000000], ebx; les esi, ptr [ebx + ebx*2]; pop esi; ret; 
0x001ab9ca: test dword ptr [ecx - 0xa000000], esi; ret 0xf04; 
0x0006a997: test dword ptr [ecx], 0x83d689d2; in al, dx; or byte ptr [ebx - 0x58f63], cl; call dword ptr [esi + 0x50]; 
0x00126100: test dword ptr [ecx], 0x8901558d; ret; 
0x00061758: test dword ptr [ecx], ebp; xor edi, ecx; call dword ptr [eax + 0x53]; 
0x000bad02: test dword ptr [ecx], ebx; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0003fdce: test dword ptr [ecx], edx; add dword ptr [eax], eax; add byte ptr [ecx - 0x76e7dbbc], cl; ret; 
0x000babea: test dword ptr [ecx], esi; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0014251c: test dword ptr [edi + 0x29], esp; stc; call dword ptr [eax + 0x53]; 
0x0014b7dd: test dword ptr [edi + 0x29], esp; stc; call dword ptr [eax + 0x57]; 
0x0014c3d0: test dword ptr [edi + 0x29], esp; stc; call dword ptr [eax - 0x73]; 
0x0014c861: test dword ptr [edi + 0x2e], edx; stc; call dword ptr [eax + 0x52]; 
0x0014c8a3: test dword ptr [edi + 0x2e], edx; stc; call dword ptr [eax + 0x53]; 
0x000530aa: test dword ptr [edi + 0x30], ecx; stc; call dword ptr [edi + 0x6a]; 
0x000b3945: test dword ptr [edi + 0x5bfffffe], esi; ret; 
0x000d96dc: test dword ptr [edi + 0x5f000000], edi; pop esi; ret; 
0x000baf8c: test dword ptr [edi + 0x5f000005], ecx; pop esi; pop ebx; ret; 
0x000baf5c: test dword ptr [edi + 0x5f000005], edi; pop esi; pop ebx; ret; 
0x000bac7c: test dword ptr [edi + 0x5f000008], ebx; pop esi; pop ebx; ret; 
0x000bab84: test dword ptr [edi + 0x5f000009], edx; pop esi; pop ebx; ret; 
0x000bafbc: test dword ptr [edi + 5], ebx; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000bacac: test dword ptr [edi + 8], ebp; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000b968f: test dword ptr [edi + eax + 0x5e5f0000], ecx; pop ebx; ret; 
0x001a6875: test dword ptr [edi + eax], ecx; add byte ptr [eax], al; pop ebx; ret; 
0x00025161: test dword ptr [edi + ebp*2 - 7], ebx; call dword ptr [eax - 0x18]; 
0x00130ac7: test dword ptr [edi + ebp*8 - 1], eax; ret; 
0x00134d7d: test dword ptr [edi + edi*8 - 1], eax; dec dword ptr [ebp - 0x10a31380]; call dword ptr [eax + 0x6a]; 
0x0017ec27: test dword ptr [edi + edi*8 - 1], eax; dec dword ptr [ebx - 0x8f63]; dec dword ptr [ebx - 0x2abb7700]; les ecx, ptr [ebx - 0xb77b]; dec dword ptr [ecx + 0x1c8d544]; ret; 
0x00145481: test dword ptr [edi + edi*8 - 1], eax; dec dword ptr [ebx - 0xaf6b]; dec dword ptr [ebx - 0x9363]; dec dword ptr [ebp + 0x48d4004]; ret; 
0x000a5dc1: test dword ptr [edi + edi*8 - 1], eax; jmp dword ptr [ebp - 0x5f]; 
0x00181267: test dword ptr [edi + edi*8 - 1], ebp; call dword ptr [ecx + 0x6a]; 
0x0005ced1: test dword ptr [edi + edi*8 - 1], ebp; dec dword ptr [ebx - 0x77cefc0]; xor byte ptr [eax + ecx - 0x7b], dh; dec dword ptr [edi]; pop dword ptr [edi - 0x9fffff8]; ret 0xf40; 
0x00181208: test dword ptr [edi + edi*8 - 1], ebx; call dword ptr [eax + 0x6a]; 
0x000af345: test dword ptr [edi + edi*8 - 1], ebx; inc dword ptr [ebx + 0x440ffff8]; ret; 
0x001761ea: test dword ptr [edi + edi*8 - 1], ecx; call dword ptr [eax + 0x56]; 
0x00181048: test dword ptr [edi + edi*8 - 1], ecx; dec dword ptr [ecx - 0xbf6b]; dec dword ptr [ecx - 0xaf4b]; jmp dword ptr [ebp - 0x75]; 
0x00144f48: test dword ptr [edi + edi*8 - 1], edi; call dword ptr [eax + 0x6a]; 
0x0013b35f: test dword ptr [edi + edi*8 - 1], edi; call dword ptr [ebx + 0x6a]; 
0x0013b625: test dword ptr [edi + edi*8 - 1], edi; call dword ptr [esi + 0x6a]; 
0x001811ca: test dword ptr [edi + edi*8 - 1], edx; dec dword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x000fae57: test dword ptr [edi + edi*8 - 1], edx; dec dword ptr [ebx - 0x15637b]; inc dword ptr [ebx - 0x7f72f714]; add cl, byte ptr [eax - 7]; call dword ptr [eax - 1]; 
0x000326fd: test dword ptr [edi + edi*8 - 1], esi; dec dword ptr [ebx - 0x974b]; call dword ptr [edx - 0x18]; 
0x001761e4: test dword ptr [edi + edi*8 - 1], esi; dec dword ptr [ecx - 0xb37b]; call dword ptr [eax + 0x56]; 
0x0005d81d: test dword ptr [edi + edi*8 - 1], esi; jmp dword ptr [ebp - 0x75]; 
0x0017635c: test dword ptr [edi + edi*8 - 1], esp; call dword ptr [eax + 0x6a]; 
0x0005dcb9: test dword ptr [edi + edi*8 - 1], esp; dec dword ptr [ebx + 0x4589b055]; mov eax, 0xfff87ee9; call dword ptr [eax + 0x52]; 
0x00144d5a: test dword ptr [edi + edi*8 - 1], esp; dec dword ptr [ecx - 0xa373]; jmp dword ptr [ebp - 0x5f]; 
0x00025dfb: test dword ptr [edi + edi*8 - 1], esp; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x000e7ce4: test dword ptr [edi - 0x48000000], ebx; or eax, dword ptr [ecx]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x54]; mov edx, edi; call dword ptr gs:[0x10]; 
0x00103e1e: test dword ptr [edi - 0x7cfffffb], ebx; ret; 
0x0012bb1c: test dword ptr [edi - 0x7cfffffe], esi; in al, dx; or byte ptr [ebp - 0x46b7b], cl; call dword ptr [eax + 0x6a]; 
0x001ab0cc: test dword ptr [edi - 0x7d000000], ebx; ret 0xf08; 
0x000b7aac: test dword ptr [edi - 0x7fffffff], ebx; cmp byte ptr [ecx], al; sbb eax, -1; pop edi; pop ebx; ret; 
0x001ab9f4: test dword ptr [edi - 0xa000000], esp; ret 0xf20; 
0x001a9314: test dword ptr [edi], 0x29f756b6; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x00196451: test dword ptr [edi], 0x88ff48b6; dec edx; dec dword ptr [ebx + 0x5b082444]; ret; 
0x000299ea: test dword ptr [edi], eax; add dword ptr [eax], eax; add byte ptr [ebx - 0x72c3db8c], cl; xchg byte ptr [ebx + ebp*2 - 7], ch; call dword ptr [eax - 0x73]; 
0x000bafec: test dword ptr [edi], ebp; add eax, 0x5e5f0000; pop ebx; ret; 
0x000770fc: test dword ptr [edi], ebp; ret 0xffff; 
0x000d967c: test dword ptr [edi], ebx; add dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; ret; 
0x000bacdc: test dword ptr [edi], edi; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b7924: test dword ptr [edi], esp; add eax, dword ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x00097143: test dword ptr [edx + 0x40], esi; stc; call dword ptr [eax - 0x18]; 
0x000c23cc: test dword ptr [edx + 0x5e000000], ebx; xor eax, eax; pop ebx; ret; 
0x000b3271: test dword ptr [edx + 0x5f000005], ecx; pop ebx; ret; 
0x000b9799: test dword ptr [edx + 0x5f000006], eax; pop esi; pop ebx; ret; 
0x000b9769: test dword ptr [edx + 0x5f000006], esi; pop esi; pop ebx; ret; 
0x000b9669: test dword ptr [edx + 0x5f000007], esi; pop esi; pop ebx; ret; 
0x000b9479: test dword ptr [edx + 0x5f000009], esp; pop esi; pop ebx; ret; 
0x001aafa9: test dword ptr [edx + 1], esp; add byte ptr [eax], al; add edx, 0; jl 0x1ab1d0; mov eax, ecx; ret; 
0x000b35a9: test dword ptr [edx + 2], edx; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000b98b9: test dword ptr [edx + 5], esp; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00046fe5: test dword ptr [edx + eax*8 - 7], esi; jmp dword ptr [ebp - 0x75]; 
0x0004a68f: test dword ptr [edx + eax*8], edx; stc; jmp dword ptr [ebp - 0x75]; 
0x000b3587: test dword ptr [edx + eax], esi; add byte ptr [edi + 0x5b], bl; ret; 
0x000b35d7: test dword ptr [edx + eax], esp; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0013f425: test dword ptr [edx + ebp*4 - 7], edi; call dword ptr [eax - 0x73]; 
0x000fad4b: test dword ptr [edx + ebp*8 - 0x137c0001], ebx; or byte ptr [ebp - 0x6a03f68], cl; dec dword ptr [ebp - 0x6b81e80]; call dword ptr [ebx + 0x50]; 
0x000fae00: test dword ptr [edx + ebp*8 - 0x137c0001], ebx; or byte ptr [ebp - 0x6b7fd80], cl; call dword ptr [eax + 0x53]; 
0x000fae5d: test dword ptr [edx + ebp*8 - 0x137c0001], ebx; or byte ptr [ebp - 0x6b7fd80], cl; call dword ptr [eax - 1]; 
0x000faf61: test dword ptr [edx + ebp*8 - 0x137c0001], ebx; or byte ptr [ebx - 0x73], dl; sub dh, 0x47; stc; call dword ptr [eax - 0x18]; 
0x0009a7cc: test dword ptr [edx + edi*4 - 0x1b], ebp; call dword ptr [eax - 0x73]; 
0x0017c476: test dword ptr [edx + edi*4], ebp; stc; call dword ptr [eax - 0x73]; 
0x000f1156: test dword ptr [edx + edi*8 - 1], eax; call dword ptr [eax]; 
0x000f8724: test dword ptr [edx + edi*8 - 1], eax; jmp dword ptr [ebp - 0x75]; 
0x000686e2: test dword ptr [edx + edi*8 - 1], ebp; call dword ptr [eax - 1]; 
0x0006afe7: test dword ptr [edx + edi*8 - 1], ebp; dec dword ptr [ebx + 0x3c833853]; cmp byte ptr [ecx + 0xf], 0x85; call dword ptr [ebx]; 
0x0006bb7b: test dword ptr [edx + edi*8 - 1], ebp; dec dword ptr [ebx - 0x59b43]; jmp dword ptr [ebp - 0x5f]; 
0x000f150e: test dword ptr [edx + edi*8 - 1], ecx; inc dword ptr [ebp - 0x74bc8b40]; test dword ptr [edx + edi*8 - 1], edx; jmp dword ptr [ebp - 0x75]; 
0x000f8b4c: test dword ptr [edx + edi*8 - 1], edx; call dword ptr [eax - 0x75]; 
0x000f14a4: test dword ptr [edx + edi*8 - 1], edx; jmp dword ptr [ebp - 0x75]; 
0x0006a41d: test dword ptr [edx + edi*8 - 1], esi; dec dword ptr [ebp - 0x4477b]; call dword ptr [eax - 0x18]; 
0x0006817b: test dword ptr [edx + edi*8 - 1], esp; dec dword ptr [ebp - 0x4477b]; call dword ptr [eax - 0x18]; 
0x0002e15d: test dword ptr [edx - 0x74000002], esi; jl 0x2e189; cmp byte ptr [ebp - 0x695d379], cl; call dword ptr [eax - 0x73]; 
0x000e1fda: test dword ptr [edx - 0x7600000f], edx; ret 0xe283; 
0x00098da9: test dword ptr [edx - 0x77000000], esp; ret 0xf283; 
0x0011f1cc: test dword ptr [edx - 0x7d000000], ebp; les esp, ptr [ebx + ebx*2]; pop esi; ret; 
0x001255d1: test dword ptr [edx - 0x7d000000], edi; in al, dx; or al, 0x89; ret; 
0x00032309: test dword ptr [edx - 0x9000003], eax; ret 0xf03; 
0x001ab8dd: test dword ptr [edx - 0x9fffffd], esi; ret 0xf40; 
0x00031ff1: test dword ptr [edx - 0xa000000], ebx; ret 0x7503; 
0x00086537: test dword ptr [edx - 1], edi; jmp dword ptr [ecx]; 
0x00169b9a: test dword ptr [edx - 7], edi; call dword ptr [eax - 0x18]; 
0x000b9919: test dword ptr [edx], eax; add eax, 0x5e5f0000; pop ebx; ret; 
0x0003f9da: test dword ptr [edx], ebp; das; stc; call dword ptr [ebx + 0x50]; 
0x000b31e1: test dword ptr [edx], ebx; push es; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0005ee71: test dword ptr [edx], edx; add eax, dword ptr [eax]; add byte ptr [edi], cl; mov dh, 0x57; or al, 0xf6; ret 0xf40; 
0x000b9609: test dword ptr [edx], edx; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b98e9: test dword ptr [edx], esi; add eax, 0x5e5f0000; pop ebx; ret; 
0x0016ba77: test dword ptr [edx], esp; std; jmp dword ptr [esi - 0x70]; 
0x0014b7bc: test dword ptr [esi + 0x5b], edx; stc; call dword ptr [eax - 0x18]; 
0x000b3545: test dword ptr [esi + 0x5f000002], esi; pop ebx; ret; 
0x00188069: test dword ptr [esi + 0xf000002], ecx; mov bh, 0x50; adc byte ptr [esi - 9], ah; ret 0x7f8; 
0x000b319d: test dword ptr [esi + 6], ebx; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000b95c5: test dword ptr [esi + 8], edx; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000b949d: test dword ptr [esi + 9], edi; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000babc5: test dword ptr [esi + 9], edx; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000bae9f: test dword ptr [esi + eax], edi; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x001adff8: test dword ptr [esi + edx], edi; add byte ptr [ecx + 0x6c89112c], cl; adc dword ptr [ebx + eax*4], eax; ret 0x3908; 
0x001a9cc5: test dword ptr [esi - 0x57fffffe], esp; adc byte ptr [edi], cl; test esi, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x001aa30d: test dword ptr [esi - 0x73000000], ecx; inc edi; clc; pop edi; ret; 
0x00108940: test dword ptr [esi - 0x74000008], ecx; mov esp, 0x9024; add byte ptr [ebx - 0x317cf314], al; call dword ptr [edi - 0x18]; 
0x0011036b: test dword ptr [esi - 0x7c000002], edi; ret 0x8902; 
0x001ab936: test dword ptr [esi - 0x7cfffffd], eax; ror byte ptr [edi], 0x5f; ret; 
0x001ab8e6: test dword ptr [esi - 0x7cfffffd], ebp; rol byte ptr [edi], 0x5f; ret; 
0x0017baeb: test dword ptr [esi - 0x7d000000], ebp; les edx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000e7838: test dword ptr [esi - 0x7d000000], edi; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0010e4a8: test dword ptr [esi - 0x7d000000], esp; les ebp, ptr [eax + 0x5b]; ret; 
0x000b7db6: test dword ptr [esi - 0x7f000002], edx; cmp byte ptr [ecx], al; sbb eax, -1; pop ebx; ret; 
0x000b78ad: test dword ptr [esi - 0x7ffffffd], ebx; cmp byte ptr [ecx], al; sbb eax, -1; pop edi; pop ebx; ret; 
0x001ab8d4: test dword ptr [esi - 0x9fffffd], esi; ret 0xf20; 
0x001ab9fd: test dword ptr [esi - 0xa000000], ebp; ret 0xf40; 
0x001ac35d: test dword ptr [esi - 0xa000000], edi; ret 0xf0f; 
0x000f1cd9: test dword ptr [esi], eax; adc al, 0; add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ebx - 0x46f63]; dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x000a468d: test dword ptr [esi], eax; add dword ptr [eax], eax; add dh, dh; ret; 
0x0014e8de: test dword ptr [esi], ebx; add al, byte ptr [eax]; add dh, dh; ret; 
0x001a9d2d: test dword ptr [esi], edi; add al, byte ptr [eax]; add byte ptr [eax + 0x76850f04], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf04; 
0x000b34bd: test dword ptr [esi], edi; add eax, dword ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x000b95e5: test dword ptr [esi], esi; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0004e9c8: test dword ptr [esp + edx], ecx; add byte ptr [ecx - 0x7209ce16], cl; dec ebx; rol byte ptr [eax - 0x79f0f607], 1; ret; 
0x0003352d: test dword ptr [esp + esi*2 - 7], eax; call dword ptr [eax + 0x56]; 
0x000a7a15: test dword ptr [esp + esi*2 - 7], ecx; call dword ptr [eax - 0x18]; 
0x00043312: test dx, dx; mov edx, 0x10; cmove eax, edx; ret; 
0x0006c073: test eax, 0x2bffffdd; test dword ptr [eax - 0x7c000005], edi; in al, dx; or al, 0x89; ret; 
0x000ba9f9: test eax, 0x3001124; or al, 0x99; jmp ecx; 
0x0013a487: test eax, 0x489ffef; and al, 0x89; ret; 
0x00176da1: test eax, 0x51fffffe; push ecx; push dword ptr [esp + 0x40]; push ebp; call esi; 
0x00167f70: test eax, 0x8100021c; ret; 
0x0015b070: test eax, 0x810002eb; ret; 
0x000a224b: test eax, 0x83000000; in al, dx; add al, 0x8d; or dword ptr [eax + 0x42], 0xfffffff9; call dword ptr [eax + 0x56]; 
0x0008b7cb: test eax, 0x83000000; in al, dx; or al, 0x56; call dword ptr [ebp + 0x30]; 
0x001a4a31: test eax, 0x8300000e; std; adc byte ptr [ebp - 0x79f00f93], cl; call dword ptr [eax]; 
0x000a42a3: test eax, 0x8dffffc6; xchg dword ptr [ecx + ebx*4], esp; stc; call dword ptr [eax + 0x68]; 
0x0014bf09: test eax, 0xaecc838d; stc; call dword ptr [eax - 0x73]; 
0x00125e9b: test eax, eax; cmove eax, edx; add esp, 0xc; ret; 
0x0012524c: test eax, eax; cmove eax, edx; ret; 
0x00042eb1: test eax, eax; cmovne eax, edx; ret; 
0x00123693: test eax, eax; cmovns eax, edx; ret; 
0x00136edc: test eax, eax; cmovs eax, edx; add esp, 8; pop ebx; ret; 
0x0010bb43: test eax, eax; je 0x10ba8f; call eax; 
0x0010bbe3: test eax, eax; je 0x10bae2; call eax; 
0x00124535: test eax, eax; je 0x124580; call eax; 
0x00124679: test eax, eax; je 0x124718; call eax; 
0x00125768: test eax, eax; je 0x12576d; ret; 
0x00125e7c: test eax, eax; je 0x125e88; add esp, 0xc; ret; 
0x00125ecc: test eax, eax; je 0x125ed8; add esp, 0xc; ret; 
0x001283b4: test eax, eax; je 0x1283ba; mov dword ptr [eax], edx; ret; 
0x0012d00c: test eax, eax; je 0x12d014; test edx, edx; jne 0x12d018; ret; 
0x0012d030: test eax, eax; je 0x12d038; test edx, edx; jne 0x12d040; ret; 
0x0012e410: test eax, eax; je 0x12e41d; pop esi; pop ebx; jl 0x24f50; ret; 
0x0012fb0a: test eax, eax; je 0x12fb28; mov esi, dword ptr [esp + 0x44]; mov eax, 0xac; mov ebx, 0x53564d41; call dword ptr gs:[0x10]; 
0x0013ac78: test eax, eax; je 0x13aca0; sub esp, 8; push ebx; push dword ptr [ebx + 0x30]; call eax; 
0x0013d403: test eax, eax; je 0x13d410; add esp, 8; pop ebx; ret; 
0x00151026: test eax, eax; je 0x151030; add esp, 0x18; pop ebx; ret; 
0x00152b23: test eax, eax; je 0x152b2c; cmp dword ptr [eax + 8], edx; jne 0x152b20; ret; 
0x00162973: test eax, eax; je 0x162980; sub esp, 0xc; push esi; call eax; 
0x00162d03: test eax, eax; je 0x162d10; sub esp, 0xc; push esi; call eax; 
0x0016ebc9: test eax, eax; je 0x16ebd6; sub esp, 0xc; push esi; call eax; 
0x0016f09c: test eax, eax; je 0x16f0a9; sub esp, 0xc; push esi; call eax; 
0x0016f07b: test eax, eax; je 0x16f114; mov eax, dword ptr [ebx + 0x10]; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x0016f1cc: test eax, eax; je 0x16f1e3; sub esp, 0xc; mov ecx, dword ptr [eax + 4]; push eax; call dword ptr [ecx + 0x10]; 
0x0016f375: test eax, eax; je 0x16f386; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x0016f3b9: test eax, eax; je 0x16f3c8; add esp, 8; pop ebx; ret; 
0x0016faec: test eax, eax; je 0x16fa7c; mov eax, dword ptr [ebx + 4]; sub esp, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x0016ff94: test eax, eax; je 0x16ff3c; sub esp, 0xc; push edi; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x0016ffb7: test eax, eax; je 0x16ffc4; sub esp, 0xc; push edi; call eax; 
0x001701c8: test eax, eax; je 0x17008e; sub esp, 0xc; push esi; call eax; 
0x001702c3: test eax, eax; je 0x1702d0; sub esp, 0xc; push esi; call eax; 
0x00170c4f: test eax, eax; je 0x170c5c; sub esp, 0xc; push esi; call eax; 
0x00170ea6: test eax, eax; je 0x170ec8; sub esp, 0xc; mov eax, dword ptr [ebx + 0x2398]; push esi; call dword ptr [eax + 0x10]; 
0x00171086: test eax, eax; je 0x17118b; sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x00173c59: test eax, eax; je 0x173c6c; sub esp, 0xc; lea edx, [ebx + 0xac]; push edx; call eax; 
0x0017462d: test eax, eax; je 0x17463a; sub esp, 0xc; push esi; call eax; 
0x0017486a: test eax, eax; je 0x17487a; sub esp, 0xc; lea edx, [edi + 8]; push edx; call eax; 
0x00175b36: test eax, eax; je 0x175b43; sub esp, 0xc; push esi; call eax; 
0x00175b17: test eax, eax; je 0x175b58; sub esp, 0xc; push esi; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x00175cf1: test eax, eax; je 0x175cfe; sub esp, 0xc; push edi; call eax; 
0x0017709b: test eax, eax; je 0x1770a8; sub esp, 0xc; push ebp; call eax; 
0x00177436: test eax, eax; je 0x177446; sub esp, 0xc; lea edx, [ebx + 0x38]; push edx; call eax; 
0x00177606: test eax, eax; je 0x177aa0; sub esp, 0xc; mov eax, dword ptr [ebp + 0x3c]; push edi; call dword ptr [eax + 0x10]; 
0x00177dd1: test eax, eax; je 0x177e80; mov eax, dword ptr [esi + 0x3c]; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x00179262: test eax, eax; je 0x179270; pop ebx; pop esi; pop edi; ret; 
0x0017a22a: test eax, eax; je 0x17a23a; sub esp, 0xc; lea edx, [edi + 8]; push edx; call eax; 
0x0017a953: test eax, eax; je 0x17a963; sub esp, 0xc; lea edx, [edi + 8]; push edx; call eax; 
0x0017a9d9: test eax, eax; je 0x17aa13; sub esp, 0xc; mov eax, dword ptr [ebx + 0xc]; push edi; call dword ptr [eax + 0x10]; 
0x0018691f: test eax, eax; je 0x186930; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x30]; 
0x00175e8a: test eax, eax; je 0x249a9; sub esp, 0xc; push ebp; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x10]; 
0x00033a93: test eax, eax; je 0x33a99; call eax; 
0x0003d0a3: test eax, eax; je 0x3d0b7; mov dword ptr [eax + 4], 0; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x00042119: test eax, eax; je 0x42128; add esp, 8; pop ebx; ret; 
0x00042a39: test eax, eax; je 0x42a43; bsr eax, eax; add eax, 1; ret; 
0x00042a58: test eax, eax; je 0x42a62; bsr eax, eax; add eax, 1; ret; 
0x00042a78: test eax, eax; je 0x42a82; bsr eax, eax; add eax, 1; ret; 
0x00042ae9: test eax, eax; je 0x42af3; bsr eax, eax; add eax, 1; ret; 
0x00042d08: test eax, eax; je 0x42d15; bsr eax, eax; xor eax, 0x1f; add eax, 1; ret; 
0x00042d28: test eax, eax; je 0x42d35; bsr eax, eax; xor eax, 0x1f; add eax, 1; ret; 
0x00042fc0: test eax, eax; je 0x42fd0; add ecx, 1; pop ebx; mov eax, ecx; ret; 
0x0005ace0: test eax, eax; je 0x5acf0; sub eax, 1; mov dword ptr [edx + 4], eax; ret; 
0x0007c198: test eax, eax; je 0x7c1b0; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 4], edx; jmp eax; 
0x0007d600: test eax, eax; je 0x7d610; sub eax, 1; mov dword ptr [edx + 0x1a44], eax; ret; 
0x00087580: test eax, eax; je 0x87590; sub eax, 1; mov dword ptr [edx + 0x1a58], eax; ret; 
0x00088c45: test eax, eax; je 0x88c50; pop ebx; pop esi; pop edi; ret; 
0x0008ba4a: test eax, eax; je 0x8ba62; mov dword ptr [eax], 0; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; ret; 
0x0008cdc0: test eax, eax; je 0x8cdd0; sub eax, 1; mov dword ptr [edx + 0x1a78], eax; ret; 
0x0008d841: test eax, eax; je 0x8d858; mov dword ptr [esp + 0x10], ecx; mov eax, dword ptr [eax + 4]; add esp, 0xc; jmp eax; 
0x0009811f: test eax, eax; je 0x98135; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x000a0471: test eax, eax; je 0xa04e8; mov ecx, dword ptr [esp + 0x64]; lea esi, [esp + 0x2c]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x000a20b4: test eax, eax; je 0xa20d0; pop ebx; pop esi; pop edi; ret; 
0x000c1b66: test eax, eax; je 0xc1b80; bsf eax, eax; add eax, edx; add eax, ecx; ret; 
0x000deaac: test eax, eax; je 0xdeb20; mov ebx, dword ptr [esp + 0x60]; lea edx, [esp + 0x2c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000e7814: test eax, eax; je 0xe7848; sub esp, 8; push esi; push ebx; call eax; 
0x000e821a: test eax, eax; je 0xe8230; imul eax, dword ptr [esp + 0x10], 0x34; add eax, dword ptr [edx]; add esp, 0xc; ret; 
0x0012e1d7: test eax, eax; jl 0x24f50; je 0x12e1e2; ret; 
0x0010c1f5: test eax, eax; jne 0x10c228; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x0010c298: test eax, eax; jne 0x10c2c8; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x0010c38d: test eax, eax; jne 0x10c3c0; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x0010c43d: test eax, eax; jne 0x10c470; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x0010c505: test eax, eax; jne 0x10c538; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x0011473a: test eax, eax; jne 0x114760; mov ebx, dword ptr [esp + 0x20]; mov eax, 6; call dword ptr gs:[0x10]; 
0x0011483e: test eax, eax; jne 0x114850; add esp, 4; pop ebx; pop esi; ret; 
0x001149ba: test eax, eax; jne 0x1149e0; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 8; call dword ptr gs:[0x10]; 
0x001205a6: test eax, eax; jne 0x1205f2; mov ecx, dword ptr [esp + 0x54]; mov eax, 0x135; mov edi, 8; call dword ptr gs:[0x10]; 
0x0012484a: test eax, eax; jne 0x124870; mov ebx, dword ptr [esp + 0x20]; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x00124d9a: test eax, eax; jne 0x124dc0; mov ebx, dword ptr [esp + 0x20]; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00128d5f: test eax, eax; jne 0x128d1c; add esp, 0xc; ret; 
0x0012b3e2: test eax, eax; jne 0x12b420; mov eax, 0xd2; mov ebx, 0xffffffff; mov edx, 0xffffffff; call dword ptr gs:[0x10]; 
0x0012b4c2: test eax, eax; jne 0x12b500; mov eax, 0xd0; mov ebx, 0xffffffff; mov edx, 0xffffffff; call dword ptr gs:[0x10]; 
0x0012b678: test eax, eax; jne 0x12b6a8; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x0012b718: test eax, eax; jne 0x12b748; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x0012c645: test eax, eax; jne 0x12c668; sub esp, 0xc; push dword ptr [ebx]; call esi; 
0x0012d6a8: test eax, eax; jne 0x12d6f0; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x0013a7d4: test eax, eax; jne 0x13a7c4; add esp, 4; pop ebx; pop esi; ret; 
0x0013becb: test eax, eax; jne 0x13bee0; mov ecx, dword ptr [edx]; test ecx, ecx; je 0x13bee8; ret; 
0x001416eb: test eax, eax; jne 0x141700; mov eax, ebx; pop ebx; ret; 
0x0014bfef: test eax, eax; jne 0x14c000; pop ebx; pop esi; pop edi; ret; 
0x0014c035: test eax, eax; jne 0x14c020; pop ebx; pop esi; pop edi; ret; 
0x0015205e: test eax, eax; jne 0x152070; add esp, 4; pop ebx; pop esi; ret; 
0x00152b18: test eax, eax; jne 0x152b27; ret; 
0x00162ce4: test eax, eax; jne 0x162cd0; add esp, 4; pop ebx; pop esi; ret; 
0x0016f607: test eax, eax; jne 0x16f628; sub esp, 0xc; mov eax, dword ptr [ebx + 4]; push ebx; call dword ptr [eax + 0x10]; 
0x0016f7da: test eax, eax; jne 0x16f810; sub esp, 0xc; mov eax, dword ptr [ebx + 4]; push ebx; call dword ptr [eax + 0x10]; 
0x001704cb: test eax, eax; jne 0x1704d8; add esp, 4; pop ebx; pop esi; ret; 
0x0017a187: test eax, eax; jne 0x17a170; add esp, 8; pop ebx; ret; 
0x001859a3: test eax, eax; jne 0x185a50; pop ebx; pop esi; pop edi; ret; 
0x001887aa: test eax, eax; jne 0x1887b8; add esp, 4; pop ebx; pop esi; ret; 
0x001aa8b0: test eax, eax; jne 0x1aa980; xor eax, eax; pop edi; ret; 
0x001ab1f8: test eax, eax; jne 0x1aae20; xor eax, eax; ret; 
0x001aad48: test eax, eax; jne 0x1aaf80; xor eax, eax; ret; 
0x001aad87: test eax, eax; jne 0x1ab000; xor eax, eax; ret; 
0x00024b59: test eax, eax; jne 0x24b50; ret; 
0x0003c678: test eax, eax; jne 0x3c688; add esp, 8; pop ebx; ret; 
0x0003c927: test eax, eax; jne 0x3c930; add esp, 8; pop ebx; ret; 
0x0003c9ea: test eax, eax; jne 0x3ca10; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xb3; mov ecx, 8; call dword ptr gs:[0x10]; 
0x0005acc9: test eax, eax; jne 0x5ace4; mov dword ptr [edx + 8], 0; mov dword ptr [edx], 0; ret; 
0x00061f57: test eax, eax; jne 0x61f68; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x0007d5e0: test eax, eax; jne 0x7d604; mov dword ptr [edx + 0x1a48], 0; mov dword ptr [edx + 0x1a40], 0; ret; 
0x00083f2d: test eax, eax; jne 0x83f40; mov ecx, dword ptr [edx + 0x28]; cmp dword ptr [edx + 0x24], ecx; cmove eax, ecx; ret; 
0x0008b9aa: test eax, eax; jne 0x8b9a0; ret; 
0x0008c931: test eax, eax; jne 0x8c948; ret; 
0x0008e821: test eax, eax; jne 0x8e830; ret; 
0x0009d69a: test eax, eax; jne 0x9d690; pop ebx; ret; 
0x0009d6b8: test eax, eax; jne 0x9d6c7; ret; 
0x000a6dcb: test eax, eax; jne 0xa6dc0; xor eax, eax; ret; 
0x000a6e99: test eax, eax; jne 0xa6e90; mov eax, ecx; ret; 
0x000a86a8: test eax, eax; jne 0xa86b3; ret; 
0x000c1562: test eax, eax; jne 0xc15c0; xor eax, eax; pop edi; ret; 
0x000c1528: test eax, eax; jne 0xc15e0; xor eax, eax; pop edi; ret; 
0x000c17f8: test eax, eax; jne 0xc1870; xor eax, eax; ret; 
0x000c1827: test eax, eax; jne 0xc1890; xor eax, eax; ret; 
0x000c1caf: test eax, eax; jne 0xc1cf0; pmovmskb eax, xmm1; bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x000d9b65: test eax, eax; jne 0xd9b5c; xor edx, edx; mov eax, edx; ret; 
0x000fab67: test eax, eax; jne 0xfab70; add esp, 8; pop ebx; ret; 
0x000fb5e9: test eax, eax; jne 0xfb608; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x001318c4: test eax, eax; js 0x1318d0; add esp, 8; pop ebx; ret; 
0x0018c483: test eax, eax; js 0x18c490; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0008475c: test eax, eax; js 0x84768; ret; 
0x00099fc3: test eax, eax; js 0x99fd0; mov dword ptr [edx + 0x3af4], eax; xor eax, eax; ret; 
0x0010b4a7: test eax, eax; sete al; add esp, 0x2c; movzx eax, al; ret; 
0x00053443: test eax, eax; sete al; add esp, 0xc; movzx eax, al; ret; 
0x00157d82: test eax, eax; sete al; add esp, 0xc; ret; 
0x00172bf4: test eax, eax; setne al; add esp, 0x1c; movzx eax, al; ret; 
0x00170f15: test eax, eax; setne al; add esp, 8; movzx eax, al; pop ebx; ret; 
0x0017147d: test eax, eax; setne dl; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0008681d: test eax, eax; setne dl; mov eax, edx; ret; 
0x000afdb3: test eax, ebp; add dword ptr [eax], eax; add byte ptr [ebx - 0x7cd174c6], cl; ret 0x8304; 
0x000b3523: test eax, ebx; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x000416a3: test eax, ebx; add byte ptr [eax], al; add dh, dh; ret 0xf03; 
0x000b9523: test eax, edi; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b362b: test eax, edx; add dword ptr [eax], eax; add byte ptr [edi + 0x5b], bl; ret; 
0x000c423b: test eax, edx; wait; stc; call dword ptr [eax - 0x73]; 
0x000c426c: test eax, esp; inc esp; stc; call dword ptr [eax - 0x18]; 
0x0014fc06: test ebp, eax; add al, byte ptr [eax]; add byte ptr [ebx + 0x1c895], cl; add bh, dh; ret 0; 
0x000a6d53: test ebp, ebp; jne 0xa6c89; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax + 0x90]; call dword ptr [eax]; 
0x000d44a0: test ebp, edi; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x001a9cde: test ebp, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x001a042c: test ebp, edi; add eax, 0xfd830000; adc byte ptr [ebp - 0x79f00f93], cl; ret; 
0x0005bb1d: test ebp, edi; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x000b9ea8: test ebp, edi; or al, 0; add ecx, 0x112f24; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bab1e: test ebp, edi; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0015ccaf: test ebp, edx; add dword ptr [eax], eax; add byte ptr [ebx - 0x7ce3db8c], cl; ret 0x8301; 
0x000b7956: test ebp, esi; add al, byte ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x000c1766: test ebp, esi; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x0010df25: test ebp, esi; add eax, dword ptr [eax]; add byte ptr [ebp - 0x65e477d], cl; call dword ptr [eax - 0x73]; 
0x000f15de: test ebx, ebx; add al, byte ptr [eax]; add dh, dh; test dword ptr [edx + edi*8 - 1], eax; call dword ptr [eax]; 
0x000eb203: test ebx, ebx; inc esi; stc; call dword ptr [eax - 0x18]; 
0x001866c3: test ebx, ebx; je 0x1866f0; sub esp, 8; push edx; push eax; call dword ptr [ebx + 0x24]; 
0x0018674a: test ebx, ebx; je 0x186770; sub esp, 8; push edx; push eax; call dword ptr [ebx + 0x28]; 
0x00042ef9: test ebx, ebx; je 0x42f10; add ecx, 1; pop ebx; mov eax, ecx; ret; 
0x0004339e: test ebx, ebx; je 0x433a8; pop ebx; ret; 
0x00136d4a: test ebx, ebx; jne 0x136d58; add esp, 4; pop ebx; pop esi; ret; 
0x0014abbc: test ebx, ebx; jne 0x14ab88; mov eax, 1; pop ebx; ret; 
0x00189da2: test ebx, ebx; jne 0x189db0; add esp, 8; pop ebx; ret; 
0x0018b6be: test ebx, ebx; jne 0x18b6d0; add esp, 8; pop ebx; ret; 
0x00088c7e: test ebx, ebx; jne 0x88c90; add esp, 8; pop ebx; ret; 
0x000a84a3: test ebx, ebx; jne 0xa84b7; pop ebx; pop esi; pop edi; ret; 
0x000a01d4: test ebx, ebx; jns 0xa01dc; add ebx, ebx; mov ebx, dword ptr [ebx]; mov eax, 0x106; call dword ptr gs:[0x10]; 
0x000a00ea: test ebx, ebx; js 0xa0118; mov eax, 0x107; call dword ptr gs:[0x10]; 
0x000eb13a: test ebx, ebx; js 0xeb198; mov eax, 0x166; lea ecx, [ebp - 0x6d324]; mov edi, 0x1000; call dword ptr gs:[0x10]; 
0x001842cf: test ebx, edi; jmp dword ptr [esi - 0x70]; 
0x0013f435: test ebx, edi; push edi; stc; call dword ptr [eax - 0x18]; 
0x000bac48: test ebx, edx; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0015f709: test ebx, esi; or byte ptr [eax], al; add byte ptr [ebx - 0x72efdb84], cl; xchg dword ptr [ebp + esi*4 - 7], esi; call dword ptr [eax - 0x73]; 
0x001266d2: test ebx, esp; dec edx; stc; call dword ptr [eax - 0x39]; 
0x000e0ca9: test ecx, 0xa40f02e1; ret; 
0x000c1feb: test ecx, 0xff0000; je 0xc1ff4; inc eax; pop edi; ret; 
0x000d96b2: test ecx, ebp; add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x000b7662: test ecx, ebp; add eax, 0x38800000; add dword ptr [ebx + 0x5b5fffd8], eax; ret; 
0x000baf32: test ecx, ebp; add eax, 0x5e5f0000; pop ebx; ret; 
0x0016f2ef: test ecx, ebp; ret 0xfffe; 
0x0010b8b3: test ecx, ecx; je 0x10b8d0; cmp byte ptr [esp + 0x17], 0; jne 0x10b960; call ecx; 
0x00128386: test ecx, ecx; je 0x12838d; mov dword ptr [ecx + 4], edx; mov dword ptr [edx], ecx; mov dword ptr [edx + 4], eax; ret; 
0x00137a3c: test ecx, ecx; je 0x137a48; xor eax, eax; pop ebx; ret; 
0x0013bed1: test ecx, ecx; je 0x13bee8; ret; 
0x000432e2: test ecx, ecx; je 0x432f0; pop ebx; ret; 
0x00085a51: test ecx, ecx; je 0x85a58; mov byte ptr [edx], 0; pop ebx; ret; 
0x000c1b1d: test ecx, ecx; je 0xc1b30; bsf ecx, ecx; add eax, ecx; ret; 
0x001359b8: test ecx, ecx; jne 0x1359c8; mov eax, edx; pop ebx; pop esi; ret; 
0x00135a33: test ecx, ecx; jne 0x135a40; mov eax, edx; pop ebx; pop esi; ret; 
0x00135c27: test ecx, ecx; jne 0x135c30; mov eax, edx; pop ebx; pop esi; ret; 
0x0013627c: test ecx, ecx; jne 0x136288; mov eax, edx; pop ebx; pop esi; ret; 
0x001362dc: test ecx, ecx; jne 0x1362e8; mov eax, edx; pop ebx; pop esi; ret; 
0x001364c7: test ecx, ecx; jne 0x1364d0; mov eax, edx; pop ebx; pop esi; ret; 
0x001706b3: test ecx, ecx; jne 0x1706d8; mov dword ptr [eax], 0; pop ebx; ret; 
0x0018876e: test ecx, ecx; jne 0x188778; ret; 
0x000a0bf5: test ecx, ecx; jne 0xa0c00; add esp, 8; pop ebx; ret; 
0x000d9a96: test ecx, ecx; jne 0xd9a78; add eax, 1; ret; 
0x000d9a6c: test ecx, ecx; jne 0xd9a92; ret; 
0x001227fc: test ecx, ecx; js 0x122808; mov eax, dword ptr [edx + 8]; and eax, 0x100f; ret; 
0x000fb5a8: test ecx, ecx; js 0xfb5b0; ret; 
0x00081d1a: test ecx, edi; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x00094215: test ecx, edi; call dword ptr [eax - 0x18]; 
0x00096415: test ecx, edi; call dword ptr [eax - 0x18]; push edx; fdiv st(1), st(0); jmp dword ptr [esi - 0x70]; 
0x000966cc: test ecx, edi; call dword ptr [eax - 0x18]; wait; fyl2xp1; jmp dword ptr [esi - 0x70]; 
0x0002bc5f: test ecx, edx; or byte ptr [eax], al; add byte ptr [ebx - 0x76e3db8c], cl; ret 0xb60f; 
0x000b7984: test edi, eax; add al, byte ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x00039bec: test edi, eax; stc; call dword ptr [eax + 0x53]; 
0x000b7a7c: test edi, ecx; add dword ptr [eax], eax; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x000a6e3e: test edi, edi; aad 0xf7; call ptr [ebx + 0x5e]; pop edi; ret; 
0x000964d4: test edi, edi; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x001ab250: test edi, edi; je 0x1ab2b0; bsr edi, edi; add eax, edi; pop edi; ret; 
0x00061387: test edi, edi; je 0x613b0; mov eax, 0x161; call dword ptr gs:[0x10]; 
0x000c1930: test edi, edi; je 0xc1990; bsr edi, edi; add eax, edi; pop edi; ret; 
0x0013d04e: test edi, edi; jne 0x13d060; pop ebx; pop esi; pop edi; ret; 
0x000a6e3b: test edi, edi; jne 0x24442; pop ebx; pop esi; pop edi; ret; 
0x0003680d: test edi, edi; jne 0x367e0; pop ebx; pop esi; pop edi; ret; 
0x000d7a3e: test edi, esp; add byte ptr [eax], al; add byte ptr [ebx - 0x364f63], cl; dec dword ptr [ebx - 0x36374b]; call dword ptr [edi - 1]; 
0x0010e7bc: test edx, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b64c4], al; ret; 
0x000b9831: test edx, ebp; add eax, 0x5e5f0000; pop ebx; ret; 
0x000c1be1: test edx, ebx; add byte ptr [eax], al; add bh, dh; ret 0x3f; 
0x001a6fe1: test edx, ebx; lodsd eax, dword ptr [esi]; int1; call dword ptr [ebx - 0x18]; 
0x000b9541: test edx, ebx; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000bab41: test edx, ebx; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0010d4fa: test edx, ecx; add eax, dword ptr [eax]; add dh, dh; ret 0xf02; 
0x000b9949: test edx, edx; add al, 0; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0012f1d9: test edx, edx; je 0x12f210; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x178; call dword ptr gs:[0x10]; 
0x0014b416: test edx, edx; je 0x14b428; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0016eee4: test edx, edx; je 0x16ef70; mov dword ptr [esp + 4], edx; sub esp, 0xc; push eax; call dword ptr [ecx + 0xc]; 
0x00172d36: test edx, edx; je 0x172d40; add esp, 4; pop ebx; pop esi; ret; 
0x00172e06: test edx, edx; je 0x172e10; add esp, 4; pop ebx; pop esi; ret; 
0x00172ec6: test edx, edx; je 0x172ed0; add esp, 4; pop ebx; pop esi; ret; 
0x00178a6b: test edx, edx; je 0x178a7e; sub esp, 0xc; mov eax, dword ptr [edx + 0x20]; push edx; call dword ptr [eax + 0x10]; 
0x001a7cdb: test edx, edx; je 0x1a7cc0; add eax, ecx; pop ebx; pop esi; ret; 
0x00024b74: test edx, edx; je 0x24b79; ret; 
0x000337b7: test edx, edx; je 0x337bd; call edx; 
0x00033d67: test edx, edx; je 0x33d75; mov dword ptr [esp + 0x14], eax; call edx; 
0x000431cd: test edx, edx; je 0x431d7; bsr eax, edx; xor eax, 0x1f; ret; 
0x000431ed: test edx, edx; je 0x431f7; bsr eax, edx; xor eax, 0x1f; ret; 
0x0008e796: test edx, edx; je 0x8e7a8; mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0008e89b: test edx, edx; je 0x8e8b0; mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0008fcbb: test edx, edx; je 0x8fcf8; xor esi, esi; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00090962: test edx, edx; je 0x90998; mov ecx, dword ptr [ebx + 0xc]; mov eax, edi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x000c18d8: test edx, edx; je 0xc18b0; bsr ecx, edx; add eax, ecx; ret; 
0x0012d010: test edx, edx; jne 0x12d018; ret; 
0x0012d034: test edx, edx; jne 0x12d040; ret; 
0x0017d020: test edx, edx; jne 0x17d030; add esp, 0xc; ret; 
0x0017d190: test edx, edx; jne 0x17d1a0; add esp, 0xc; ret; 
0x00188ab9: test edx, edx; jne 0x188ac8; add esp, 8; pop ebx; ret; 
0x001ab99e: test edx, edx; jne 0x1ab9b0; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x00080a4a: test edx, edx; jne 0x80a40; ret; 
0x0008abca: test edx, edx; jne 0x8abc0; ret; 
0x0008ecbd: test edx, edx; jne 0x8ecd0; xend; xor eax, eax; add esp, 0xc; ret; 
0x000906c1: test edx, edx; jne 0x906e0; and dword ptr [eax + 8], 0xfffffffe; xor eax, eax; ret; 
0x0009805c: test edx, edx; jne 0x98070; and dword ptr [eax], 0x7fffffff; xor eax, eax; ret; 
0x000b9439: test edx, edx; jne 0xb93ab; call 0x189c31; add ecx, 0x1138fa; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000baa79: test edx, edx; jne 0xba9eb; call 0x189c31; add ecx, 0x11241a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c0a19: test edx, edx; jne 0xc098b; call 0x189c31; add ecx, 0x10c64e; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c4d8a: test edx, edx; jne 0xc4d80; ret; 
0x000d982d: test edx, edx; jne 0xd9820; mov eax, ecx; pop ebx; pop esi; ret; 
0x000d9b8a: test edx, edx; jne 0xd9b80; mov eax, ecx; pop ebx; ret; 
0x000df71b: test edx, edx; jne 0xdf728; add esp, 4; pop ebx; pop esi; ret; 
0x000e7868: test edx, edx; jns 0xe78e0; mov eax, 0x193; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0008ff1f: test edx, edx; mov edx, 0; cmove eax, edx; ret; 
0x00043313: test edx, edx; mov edx, 0x10; cmove eax, edx; ret; 
0x00043290: test edx, edx; mov edx, 0x20; cmove eax, edx; ret; 
0x0003d392: test edx, edx; sete al; ret; 
0x0010abe0: test edx, esi; add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0x45; sbb al, 0x89; ret 0xeac0; 
0x00099879: test edx, esp; add byte ptr [eax], al; add byte ptr [ecx], dh; fild dword ptr [eax + 0xf00197f]; xchg ebp, eax; ret; 
0x0018cdc9: test esi, eax; adc eax, dword ptr [eax]; add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x000c148d: test esi, ebp; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x0014c3d7: test esi, ebp; pop ebx; stc; call dword ptr [eax - 0x18]; 
0x001a9ccd: test esi, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x001557d2: test esi, edi; jmp dword ptr [esi - 0x70]; 
0x000f8f39: test esi, edx; adc eax, dword ptr [eax]; add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x000297b7: test esi, edx; add eax, dword ptr [eax]; add byte ptr [ebx - 0x74f3db94], cl; inc ebp; add dh, dh; ret; 
0x000f5619: test esi, esi; adc eax, dword ptr [eax]; add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x000b3505: test esi, esi; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x00113d8b: test esi, esi; je 0x113da6; sub esp, 8; push eax; push dword ptr [ebp - 0x5dc]; call esi; 
0x0009cfcf: test esi, esi; je 0x9d020; mov dword ptr [esi + 0x10], edx; pop ebx; pop esi; ret; 
0x000debef: test esi, esi; je 0xdec40; lea edx, [esp + 0x2c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000f15bb: test esi, esi; je 0xf15d6; sub esp, 8; push eax; push dword ptr [ebp - 0x5dc]; call esi; 
0x000f40fb: test esi, esi; je 0xf4116; sub esp, 8; push eax; push dword ptr [ebp - 0x5dc]; call esi; 
0x000f4efb: test esi, esi; je 0xf4f16; sub esp, 8; push eax; push dword ptr [ebp - 0x5dc]; call esi; 
0x000f7a2b: test esi, esi; je 0xf7a46; sub esp, 8; push eax; push dword ptr [ebp - 0x5dc]; call esi; 
0x000f883b: test esi, esi; je 0xf8856; sub esp, 8; push eax; push dword ptr [ebp - 0x5ec]; call esi; 
0x0016010b: test esi, esi; jne 0x1600f0; pop ebx; pop esi; pop edi; ret; 
0x0002603d: test esi, esi; jne 0x26024; add esp, 4; pop ebx; pop esi; ret; 
0x0004020c: test esi, esi; jne 0x401f4; add esp, 4; pop ebx; pop esi; ret; 
0x0008c427: test esi, esi; jne 0x8c410; add esp, 4; pop ebx; pop esi; ret; 
0x000bb5a8: test esi, esp; or al, 0; add ecx, 0x111984; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b3237: test esp, eax; add eax, 0x5b5f0000; ret; 
0x001ab8b7: test esp, eax; add eax, dword ptr [eax]; add dh, dh; ret 0xf04; 
0x001a711f: test esp, ebx; add dword ptr [eax], eax; add byte ptr [ebx - 0x7bf0ff07], al; ret; 
0x00040116: test esp, ebx; sub al, 0xf9; dec dword ptr [ebp - 0x6d0de6b]; dec dword ptr [ecx - 0x76ebdbac]; ret; 
0x0003fe41: test esp, ebx; sub al, 0xf9; dec dword ptr [ecx - 0x76d3dbbc]; ret 0x4489; 
0x0003fb2c: test esp, ebx; sub al, 0xf9; dec dword ptr [ecx - 0x76d3dbbc]; ret 0xc189; 
0x0003fbe7: test esp, ebx; sub al, 0xf9; dec dword ptr [ecx - 0x76f7dbbc]; ret 0xc5e9; 
0x0003fa23: test esp, ebx; sub al, 0xf9; dec dword ptr [ecx - 0x76fbdbbc]; ret; 
0x001ac503: test esp, edi; add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x001a9cef: test esp, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf40; 
0x000d96c7: test esp, edx; add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x00076957: test esp, esi; ret 0xffff; 
0x00042e91: tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x0004326e: tzcnt eax, eax; test dl, dl; mov edx, 8; cmove eax, edx; ret; 
0x0004330e: tzcnt eax, eax; test dx, dx; mov edx, 0x10; cmove eax, edx; ret; 
0x000432de: tzcnt eax, ecx; test ecx, ecx; je 0x432f0; pop ebx; ret; 
0x0004328c: tzcnt eax, edx; test edx, edx; mov edx, 0x20; cmove eax, edx; ret; 
0x000433a8: tzcnt ecx, ecx; pop ebx; lea eax, [ecx + 0x20]; ret; 
0x00042eaa: tzcnt edx, eax; add edx, 1; test eax, eax; cmovne eax, edx; ret; 
0x00198c49: ud0; inc dword ptr [ecx + 0x42e64c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00198c93: ud0; inc dword ptr [ecx + 0x42f9ac3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x001795d9: ud1; ret; 
0x00024403: ud2; cmp dword ptr [ebp - 0x30], 0; je 0x24426; sub esp, 0xc; push dword ptr [ebp - 0x34]; call dword ptr [ebp - 0x38]; 
0x0014b0fc: verr word ptr [ebp - 0x75]; adc eax, 0; mov eax, dword ptr [eax + 0x1c8]; mov eax, dword ptr [edx + eax]; ret; 
0x000eda7b: wait; adc edx, dword ptr [0x89535600]; ret; 
0x00183f11: wait; add byte ptr [eax], al; add byte ptr [ebx - 0x6972f714], al; cdq; stc; call dword ptr [edx - 0x77]; 
0x001782c8: wait; add byte ptr [eax], al; add byte ptr [ecx + 0xa0c4], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000a89df: wait; add dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x000ba987: wait; and al, 0x11; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000a6657: wait; dec eax; add al, 0; add byte ptr [ebx + 0x39242444], cl; ret; 
0x00196c57: wait; dec ebp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152ec1: wait; dec edi; hlt; jmp dword ptr [ebp - 0x75]; 
0x0013e951: wait; fdivp st(7); jmp dword ptr [esi - 0x70]; 
0x000966d1: wait; fyl2xp1; jmp dword ptr [esi - 0x70]; 
0x0013ce50: wait; hlt; jmp dword ptr [esi - 0x70]; 
0x0010467a: wait; idiv bh; jmp dword ptr [esi - 0x70]; 
0x001a3152: wait; idiv edi; mov eax, dword ptr [ebx + eax*4 - 0x86474]; sub eax, ecx; pop ebx; ret; 
0x001a5966: wait; idiv edi; sub eax, ecx; pop ebp; pop ebx; ret; 
0x001a3159: wait; idiv edi; sub eax, ecx; pop ebx; ret; 
0x00158cd9: wait; int1; call dword ptr [eax - 1]; 
0x000e4ec6: wait; jecxz 0xe4ec8; call dword ptr [eax + 0x57]; 
0x000db360: wait; movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ecx - 0x76cbdba4], cl; ret; 
0x0014bada: wait; pop ebx; stc; call dword ptr [ebx - 0x18]; 
0x0012c022: wait; push ebx; stc; call dword ptr [edi + 0x50]; 
0x000e2b7a: wait; ret 0x15; 
0x000c3e70: wait; stc; call dword ptr [eax - 0x18]; 
0x000c3e60: wait; stc; call dword ptr [eax - 0x73]; 
0x000ad53e: wait; stc; call dword ptr [edx - 0x73]; 
0x0012f07b: wait; std; adc byte ptr [eax], al; mov eax, 0x123; call dword ptr gs:[0x10]; 
0x001641a9: wait; std; jmp dword ptr [esi - 0x70]; 
0x0018414b: wait; sti; jmp dword ptr [esi - 0x70]; 
0x00156b8a: wait; xor byte ptr [ebx], al; add byte ptr [ecx + 0xe8286c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x00171be1: wait; xor ch, ah; call dword ptr [eax - 0x73]; 
0x00024af5: xchg ah, ah; jmp dword ptr [ebp + 0x33]; 
0x001350b6: xchg ah, bh; cmpsb byte ptr [esi], byte ptr es:[edi]; stc; call dword ptr [eax - 0x18]; 
0x000a28cf: xchg ah, bh; cwde; stc; call dword ptr [eax - 0x73]; 
0x000a176d: xchg ah, bh; inc ecx; stc; call dword ptr [eax - 0x18]; 
0x00078e90: xchg ah, bh; jge 0x78e8d; call dword ptr [eax - 0x18]; 
0x0016ba50: xchg ah, ch; dec dword ptr [ebx - 0x72d7db84]; xchg esp, esi; mov ch, 0xf9; call dword ptr [eax - 0x73]; 
0x00079226: xchg ah, ch; jle 0x79223; call dword ptr [eax - 0x73]; 
0x000270b5: xchg ah, ch; outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x000a18e0: xchg ah, ch; sbb ah, dh; call dword ptr [eax + 0x57]; 
0x000a1898: xchg ah, ch; sbb al, 0xe6; call dword ptr [eax + 0x57]; 
0x0002b832: xchg ah, cl; push -7; call dword ptr [eax - 0x73]; 
0x0005b56b: xchg ah, dh; js 0x5b568; call dword ptr [eax - 0x18]; 
0x001414d1: xchg ah, dh; stosb byte ptr es:[edi], al; stc; call dword ptr [eax - 0x73]; 
0x000958c4: xchg ah, dl; test ecx, edi; call dword ptr [eax - 0x18]; 
0x000966ca: xchg ah, dl; test ecx, edi; call dword ptr [eax - 0x18]; wait; fyl2xp1; jmp dword ptr [esi - 0x70]; 
0x000fb3b4: xchg al, ah; cmc; clc; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x000dfc10: xchg al, ah; in al, 0xf8; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x0005b517: xchg al, al; js 0x5b514; call dword ptr [eax - 0x18]; 
0x0005b932: xchg al, bl; jns 0x5b92f; call dword ptr [eax - 0x73]; 
0x00078906: xchg al, ch; jge 0x78903; call dword ptr [eax + 0x68]; 
0x000789a8: xchg al, ch; jge 0x789a5; call dword ptr [eax + 0x68]; 
0x00188df4: xchg al, ch; push es; dec edi; sti; jmp dword ptr [esi - 0x70]; 
0x000957c2: xchg al, cl; xchg cl, bh; call dword ptr [eax + 0x68]; 
0x00095801: xchg al, cl; xchg cl, bh; call dword ptr [eax + 0x6a]; 
0x000958b1: xchg al, cl; xchg cl, bh; call dword ptr [eax - 0x73]; 
0x000a27ba: xchg al, dh; cwde; stc; call dword ptr [eax - 0x73]; 
0x001a4a3c: xchg bh, bh; adc byte ptr [eax], al; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00031fdb: xchg bh, dh; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x0012c154: xchg bl, al; push ebx; stc; call dword ptr [eax + 0x68]; 
0x00156c1c: xchg bl, dh; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x00097fdb: xchg byte ptr [eax + 0x39000002], dh; ret; 
0x0002b7d9: xchg byte ptr [eax + 0x71], dh; stc; call dword ptr [eax - 0x18]; 
0x0002b780: xchg byte ptr [eax + 0x72], cl; stc; call dword ptr [eax - 0x73]; 
0x0005b533: xchg byte ptr [eax + 0x79], ah; stc; call dword ptr [eax - 0x18]; 
0x00085155: xchg byte ptr [eax + eax - 0xf770000], ah; pop ebx; pop esi; pop edi; ret; 
0x00059b42: xchg byte ptr [eax + edi*2], dh; stc; call dword ptr [eax - 0x73]; 
0x0018a6cc: xchg byte ptr [eax + esi - 7], dl; call dword ptr [eax - 0x73]; 
0x00027557: xchg byte ptr [eax + esi*2], al; stc; call dword ptr [eax - 0x73]; 
0x00059c0e: xchg byte ptr [eax + esi], ch; stc; call dword ptr [eax - 0x18]; 
0x00157805: xchg byte ptr [eax - 0x4d], dh; stc; call dword ptr [eax - 0x73]; 
0x0014b75c: xchg byte ptr [eax - 0x52], cl; stc; call dword ptr [eax - 0x73]; 
0x000a175a: xchg byte ptr [eax - 0x67], bl; stc; call dword ptr [eax - 0x73]; 
0x00097e38: xchg byte ptr [eax - 0x79], bl; stc; call dword ptr [eax - 0x73]; 
0x00083d25: xchg byte ptr [eax - 0x7d], cl; stc; call dword ptr [eax - 0x73]; 
0x000a10ec: xchg byte ptr [eax], ah; mov edi, ecx; call dword ptr [eax + 0x6a]; 
0x0008f545: xchg byte ptr [eax], ah; or dword ptr [eax], eax; add byte ptr [ecx + 0x92086], cl; add byte ptr [ecx], bh; ret 0x5c72; 
0x0008f54b: xchg byte ptr [eax], ah; or dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x5c72; 
0x001305db: xchg byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000965dc: xchg byte ptr [eax], al; xchg ecx, edi; call dword ptr [eax + 0x68]; 
0x00096605: xchg byte ptr [eax], al; xchg ecx, edi; call dword ptr [eax + 0x6a]; 
0x000966b7: xchg byte ptr [eax], al; xchg ecx, edi; call dword ptr [eax - 0x73]; 
0x000a48ae: xchg byte ptr [eax], bh; inc ebx; stc; call dword ptr [eax - 0x18]; 
0x00078ee4: xchg byte ptr [eax], bh; jle 0x78ee1; call dword ptr [eax - 0x18]; 
0x000e0353: xchg byte ptr [eax], bh; out 0xf8, al; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x00165611: xchg byte ptr [eax], bh; popal; stc; call dword ptr [eax + 0x6a]; 
0x0005b54f: xchg byte ptr [eax], ch; jns 0x5b54c; call dword ptr [eax - 0x18]; 
0x000c4b77: xchg byte ptr [eax], ch; pushfd; stc; call dword ptr [eax - 0x73]; 
0x0002c52a: xchg byte ptr [eax], ch; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x0007935a: xchg byte ptr [eax], cl; jp 0x79357; call dword ptr [eax - 0x18]; 
0x0013ee84: xchg byte ptr [eax], cl; stosb byte ptr es:[edi], al; stc; call dword ptr [eax - 0x73]; 
0x00141ac9: xchg byte ptr [eax], cl; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x18]; 
0x000a1e51: xchg byte ptr [eax], dh; cdq; stc; call dword ptr [eax - 0x73]; 
0x000d848a: xchg byte ptr [eax], dl; js 0xd8487; call dword ptr [eax - 0x18]; 
0x0014b6de: xchg byte ptr [eax], dl; scasb al, byte ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x00094f40: xchg byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x000965e8: xchg byte ptr [ebp + 0x40], bl; stc; call dword ptr [eax - 0x73]; 
0x000957ce: xchg byte ptr [ebp + 0x40], dl; stc; call dword ptr [eax - 0x73]; 
0x000e2a79: xchg byte ptr [ebp + 0x46], dh; stc; call dword ptr [eax - 0x18]; 
0x00095649: xchg byte ptr [ebp + eax*4 - 7], cl; call dword ptr [eax - 0x18]; 
0x00078e80: xchg byte ptr [ebp + ebp*2 - 7], cl; call dword ptr [eax - 0x73]; 
0x000a1850: xchg byte ptr [ebp + ebx - 0x1a], ch; call dword ptr [eax + 0x57]; 
0x000a1862: xchg byte ptr [ebp + ebx - 0x1a], cl; call dword ptr [eax + 0x57]; 
0x00133c95: xchg byte ptr [ebp + ecx*2 - 0x11], ch; call dword ptr [eax - 0x18]; 
0x00062a90: xchg byte ptr [ebp + edi*2 - 7], al; call dword ptr [eax - 0x18]; 
0x0015fd61: xchg byte ptr [ebp + esi*4 - 7], cl; call dword ptr [eax - 0x73]; 
0x0014593e: xchg byte ptr [ebp - 0x75000000], bl; add dword ptr [ebx - 0x79f0f008], eax; xchg edx, eax; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x820f; 
0x00155633: xchg byte ptr [ebp - 7], bl; call dword ptr [eax + 0x56]; 
0x0002756a: xchg byte ptr [ebx + 0x29], bl; stc; call dword ptr [eax - 0x18]; 
0x000d37b5: xchg byte ptr [ebx + 0x39043944], cl; ret 0x8f0f; 
0x00029b74: xchg byte ptr [ebx + ebp*2 - 7], ch; call dword ptr [eax + 0x68]; 
0x000299f4: xchg byte ptr [ebx + ebp*2 - 7], ch; call dword ptr [eax - 0x73]; 
0x00143784: xchg byte ptr [ebx + ebp*4 - 7], ah; call dword ptr [eax - 0x73]; 
0x00141ab6: xchg byte ptr [ebx + ebp*4], dh; stc; call dword ptr [eax - 0x73]; 
0x000c4b87: xchg byte ptr [ebx + ebx*4], ah; stc; call dword ptr [eax - 0x18]; 
0x0005df44: xchg byte ptr [ebx + edi*2], ah; stc; call dword ptr [eax - 0x18]; 
0x00157815: xchg byte ptr [ebx + esi*4], bh; stc; call dword ptr [eax - 0x18]; 
0x00153560: xchg byte ptr [ebx - 0x7d7253ab], cl; pop esp; mov cl, 0xf9; call dword ptr [eax - 0x73]; 
0x001ab937: xchg byte ptr [ebx], al; add byte ptr [eax], al; add eax, 0xf; pop edi; ret; 
0x00059bc4: xchg byte ptr [ebx], al; xor cl, bh; call dword ptr [eax - 0x18]; 
0x00078919: xchg byte ptr [ebx], ch; xor edi, ecx; call dword ptr [eax - 0x18]; 
0x001259c5: xchg byte ptr [ecx + 0x2e], bl; stc; call dword ptr [eax - 1]; 
0x0011230c: xchg byte ptr [ecx + 0x49], al; stc; call dword ptr [eax - 0x18]; 
0x0017d6e6: xchg byte ptr [ecx + 0x63], ch; stc; call dword ptr [eax + 0x6a]; 
0x00181600: xchg byte ptr [ecx + 0x66], ah; stc; call dword ptr [eax - 0x18]; 
0x000a27e4: xchg byte ptr [ecx + 0x68fff941], bl; inc eax; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [edi + ecx*4 - 7], al; call dword ptr [eax - 0x18]; 
0x0017abd3: xchg byte ptr [ecx + ebx*2], dl; stc; call dword ptr [eax + 0x6a]; 
0x000a1eae: xchg byte ptr [ecx + ecx], cl; add byte ptr [ecx], bh; ret; 
0x0005e051: xchg byte ptr [ecx + esi - 7], bh; call dword ptr [eax - 0x18]; 
0x0013f6d2: xchg byte ptr [ecx], bh; pop eax; stc; call dword ptr [ecx + 0x50]; 
0x00100c69: xchg byte ptr [ecx], ch; ret 0x1be; 
0x00176761: xchg byte ptr [ecx], ch; stc; call dword ptr [edi + 0x50]; 
0x0012be23: xchg byte ptr [ecx], cl; aas; stc; call dword ptr [eax + 0x6a]; 
0x0011bc60: xchg byte ptr [ecx], dl; dec edx; stc; call dword ptr [eax - 0x18]; 
0x0018a6d3: xchg byte ptr [edi + 0x30], cl; stc; call dword ptr [eax - 0x18]; 
0x000a28e2: xchg byte ptr [edi + 0x42], dl; stc; call dword ptr [eax - 0x18]; 
0x0015f69e: xchg byte ptr [edi + 0x5f], ah; stc; call dword ptr [eax - 0x18]; 
0x00097e48: xchg byte ptr [edi + eax*4], dh; stc; call dword ptr [eax - 0x18]; 
0x0002506d: xchg byte ptr [edi + ebp*2 - 7], bl; call dword ptr [eax - 0x18]; 
0x0014f705: xchg byte ptr [edi + ebp*4 - 7], bl; call dword ptr [eax - 0x73]; 
0x0014f718: xchg byte ptr [edi + ebp*4], dh; stc; call dword ptr [eax - 0x18]; 
0x000a27f0: xchg byte ptr [edi + ecx*4 - 7], al; call dword ptr [eax - 0x18]; 
0x0007934a: xchg byte ptr [edi + edi*2], bl; stc; call dword ptr [eax - 0x73]; 
0x001a75c5: xchg byte ptr [edi - 0x7cfffffe], al; ret 0x8310; 
0x001a613e: xchg byte ptr [edi - 0x7cffffff], cl; ret 0x8310; 
0x001350a6: xchg byte ptr [edi - 7], ah; call dword ptr [eax - 0x73]; 
0x000f190e: xchg byte ptr [edi - 7], al; call dword ptr [eax - 0x73]; 
0x00078912: xchg byte ptr [edi], al; xor edi, ecx; call dword ptr [eax - 0x73]; 
0x001a40fc: xchg byte ptr [edi], bh; sbb al, byte ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x001a581c: xchg byte ptr [edi], bl; add eax, dword ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x001a3a0c: xchg byte ptr [edi], ch; and dword ptr [eax], eax; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000a1e64: xchg byte ptr [edi], ch; inc edx; stc; call dword ptr [eax - 0x18]; 
0x001a512c: xchg byte ptr [edi], cl; or al, byte ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00145949: xchg byte ptr [edx + 0x39000000], dl; ret 0x820f; 
0x00095621: xchg byte ptr [edx + 0x40], dh; stc; call dword ptr [eax - 0x18]; 
0x0015b621: xchg byte ptr [edx + 0x5f], dl; stc; call dword ptr [eax + 0x6a]; 
0x0002c51e: xchg byte ptr [edx + 0x68fff92a], bh; add byte ptr [edx], 0; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], ch; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x0016f62c: xchg byte ptr [edx + 0x6afff963], bh; add eax, 0x4c868d50; je 0x16f632; call dword ptr [eax - 0x18]; 
0x00070b59: xchg byte ptr [edx + 0xd], ah; add byte ptr [eax], al; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x48], 1; jmp eax; 
0x000a18aa: xchg byte ptr [edx + ebx - 0x1a], ch; call dword ptr [eax + 0x57]; 
0x0002c43e: xchg byte ptr [edx + esi*2], ah; stc; call dword ptr [eax - 0x73]; 
0x00156b90: xchg byte ptr [edx - 0x76acfff2], al; ret; 
0x00029b41: xchg byte ptr [edx], al; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x000270c8: xchg byte ptr [edx], bl; sub ecx, edi; call dword ptr [eax - 0x18]; 
0x0013f6b7: xchg byte ptr [edx], ch; pop eax; stc; call dword ptr [ecx - 0x77]; 
0x0002759a: xchg byte ptr [esi + 0x29], cl; stc; call dword ptr [eax - 0x18]; 
0x001257c7: xchg byte ptr [esi + 0x30], bl; stc; call dword ptr [eax - 0x18]; 
0x000a699d: xchg byte ptr [esi + 0x44], ah; stc; call dword ptr [ebx + 0x50]; 
0x0013baf1: xchg byte ptr [esi + 0x56], bl; stc; call dword ptr [ebx + 0x50]; 
0x0013bad8: xchg byte ptr [esi + ebp*2 - 7], cl; call dword ptr [eax - 0x75]; 
0x000d8477: xchg byte ptr [esi + ebx*4], cl; stc; call dword ptr [eax - 0x73]; 
0x000a2813: xchg byte ptr [esi + ecx*4 - 7], bh; call dword ptr [eax - 0x18]; 
0x00088a7e: xchg byte ptr [esi + edi + 0x4368fff9], cl; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dl, dl; stc; call dword ptr [eax - 0x18]; 
0x00078ec8: xchg byte ptr [esi + edi*2 - 7], dh; call dword ptr [eax - 0x18]; 
0x000fbad7: xchg byte ptr [esi + edx - 0x77], bh; ret 0xd139; 
0x00059b9f: xchg byte ptr [esi + esi*2 - 7], ch; call dword ptr [eax - 0x18]; 
0x00123a34: xchg byte ptr [esi], ah; inc esi; stc; call dword ptr [eax - 0x18]; 
0x0005dfb8: xchg byte ptr [esi], dh; xor ecx, edi; call dword ptr [eax - 0x18]; 
0x000342da: xchg byte ptr [esp + esi*2 - 7], cl; call dword ptr [eax - 0x18]; 
0x001702e9: xchg byte ptr [esp], al; stc; call dword ptr [eax - 0x73]; 
0x00185823: xchg ch, ah; stc; call dword ptr [eax - 0x18]; 
0x0005ba60: xchg ch, bh; jmp dword ptr [esi - 0x70]; 
0x00188bb8: xchg ch, dl; add byte ptr [eax], al; add byte ptr [eax - 0x7af0cf06], al; ret; 
0x0013ee94: xchg cl, ah; push edi; stc; call dword ptr [eax - 0x18]; 
0x000957c4: xchg cl, bh; call dword ptr [eax + 0x68]; 
0x00095803: xchg cl, bh; call dword ptr [eax + 0x6a]; 
0x00095922: xchg cl, bh; call dword ptr [eax - 0x18]; 
0x00095960: xchg cl, bh; call dword ptr [eax - 0x18]; pop es; out 0xf9, eax; jmp dword ptr [esi - 0x70]; 
0x0009545c: xchg cl, bh; call dword ptr [eax - 0x73]; 
0x00029b87: xchg dh, cl; sub bh, cl; call dword ptr [eax - 0x18]; 
0x00127b1e: xchg dh, dh; dec dword ptr [ebx + 0x56897440]; add al, 0x89; ret 0xeac1; 
0x0012bf3e: xchg dl, ah; push ebx; stc; call dword ptr [eax + 0x57]; 
0x00029b0e: xchg dl, ah; sub bh, cl; call dword ptr [eax - 0x18]; 
0x0011bc30: xchg dl, bh; dec ecx; stc; call dword ptr [eax - 0x18]; 
0x0019414b: xchg dl, bh; jmp dword ptr [esi - 0x70]; 
0x0011eed2: xchg dl, dh; dec ecx; stc; call dword ptr [eax - 0x18]; 
0x00059ccc: xchg dl, dl; das; stc; call dword ptr [eax - 0x18]; 
0x00070aac: xchg dl, dl; push cs; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x4c]; mov dword ptr [esp + 4], ecx; jmp eax; 
0x00083d35: xchg dl, dl; stc; call dword ptr [eax - 0x18]; 
0x0007b29e: xchg dword ptr [0x83000001], ecx; in al, dx; or byte ptr [ebp + 0x50082444], cl; push esi; call dword ptr [ebx + 0x48]; 
0x0009e6f1: xchg dword ptr [eax + 0x41], ecx; stc; call dword ptr [eax - 0x18]; 
0x0017b7c7: xchg dword ptr [eax + 0x56], ebp; stc; call dword ptr [eax + 0x6a]; 
0x00089b9b: xchg dword ptr [eax + 0x6a000000], edi; add byte ptr [edi + 0x56], dl; push ebx; call dword ptr [ebp + 0x40]; 
0x0002ab84: xchg dword ptr [eax + 0x71], ecx; stc; call dword ptr [eax - 0x18]; 
0x0002abed: xchg dword ptr [eax + 0x71], esi; stc; call dword ptr [eax - 0x18]; 
0x0002b74f: xchg dword ptr [eax + 0x72], ecx; stc; call dword ptr [eax - 0x73]; 
0x00040c7d: xchg dword ptr [eax + 0x76], esp; stc; call dword ptr [eax - 0x73]; 
0x00049fb9: xchg dword ptr [eax + 0x78], eax; stc; call dword ptr [eax - 0x73]; 
0x0004d39b: xchg dword ptr [eax + 0x78], ebx; stc; call dword ptr [eax - 0x73]; 
0x0005112f: xchg dword ptr [eax + 0x78], esi; stc; call dword ptr [eax - 0x73]; 
0x0005bc73: xchg dword ptr [eax + 0x7a], ebx; stc; call dword ptr [eax - 0x18]; 
0x0002ed55: xchg dword ptr [eax + 0x9000000], esp; ret; 
0x00097cc2: xchg dword ptr [eax + 0xf0], edi; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x0007e838: xchg dword ptr [eax + eax - 0x137d0000], edx; or al, 0x56; call dword ptr [ebx + 0x34]; 
0x0018076c: xchg dword ptr [eax + ebp*4 - 0x72b00000], ecx; xchg dword ptr [esi], edi; arpl cx, di; call dword ptr [eax + 0x6a]; 
0x00180bfd: xchg dword ptr [eax + ebp*4 - 0x72b00000], ecx; xchg dword ptr [esi], edi; arpl cx, di; push dword ptr [ecx]; call dword ptr [eax + 0x6a]; 
0x000a62d0: xchg dword ptr [eax + ebx*4 - 7], edx; call dword ptr [eax - 0x18]; 
0x00047767: xchg dword ptr [eax + edi*2], esi; stc; call dword ptr [eax + 0x68]; 
0x0004a26f: xchg dword ptr [eax + edi*2], esi; stc; call dword ptr [eax - 0x73]; 
0x000275ab: xchg dword ptr [eax + esi*2], eax; stc; call dword ptr [eax - 0x73]; 
0x0004a1a9: xchg dword ptr [eax + esi], ebp; stc; call dword ptr [eax - 0x18]; 
0x0004e815: xchg dword ptr [eax + esi], esi; stc; call dword ptr [eax - 0x73]; 
0x00138e97: xchg dword ptr [eax - 0x59], esi; stc; call dword ptr [eax - 0x18]; 
0x00130eed: xchg dword ptr [eax - 0x5a], eax; stc; call dword ptr [eax + 0x55]; 
0x00130ed2: xchg dword ptr [eax - 0x5a], ebx; stc; call dword ptr [eax + 0x55]; 
0x000f07bd: xchg dword ptr [eax - 0x60], edx; stc; call dword ptr [eax - 0x73]; 
0x000a4e0f: xchg dword ptr [eax - 0x67], ebp; stc; call dword ptr [eax - 0x73]; 
0x000a62bd: xchg dword ptr [eax - 0x68], edi; stc; call dword ptr [eax - 0x73]; 
0x000a56c8: xchg dword ptr [eax - 0x69], esp; stc; call dword ptr [eax - 0x18]; 
0x000a4a62: xchg dword ptr [eax - 0x6b], eax; stc; call dword ptr [eax - 0x18]; 
0x000e7b3b: xchg dword ptr [eax - 0x73000000], ebx; dec esp; and al, 0xc; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000fb3ad: xchg dword ptr [eax - 0x74ffffff], esi; mov esp, 0xf8f5e086; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x0009e20c: xchg dword ptr [eax - 0x77], ebp; stc; call dword ptr [eax - 0x73]; 
0x0009e6de: xchg dword ptr [eax - 0x77], esi; stc; call dword ptr [eax - 0x73]; 
0x0009cde0: xchg dword ptr [eax - 0x78], esp; stc; call dword ptr [eax - 0x18]; 
0x00092e9c: xchg dword ptr [eax - 0x7c], edx; stc; call dword ptr [eax - 0x18]; 
0x000f1901: xchg dword ptr [eax - 7], edi; call dword ptr [eax + 0x68]; 
0x001abaa5: xchg dword ptr [eax], eax; add byte ptr [eax], al; lea eax, [eax + 4]; pop edi; ret; 
0x001ab145: xchg dword ptr [eax], eax; add byte ptr [eax], al; lea eax, [ecx + 5]; ret; 
0x001aaa85: xchg dword ptr [eax], eax; add byte ptr [eax], al; lea eax, [edi + 4]; pop edi; ret; 
0x00095d2f: xchg dword ptr [eax], eax; add byte ptr [eax], al; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x0002b870: xchg dword ptr [eax], eax; add byte ptr [ebx - 0x72c3db84], cl; xchg dword ptr [eax + 0x72], ecx; stc; call dword ptr [eax - 0x73]; 
0x0010d83c: xchg dword ptr [eax], ebp; add al, byte ptr [eax]; add byte ptr [ebp + 0x30840fc0], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x1477b], cl; jmp dword ptr [ebp - 0x75]; 
0x00130f0b: xchg dword ptr [eax], ebp; cmpsb byte ptr [esi], byte ptr es:[edi]; stc; call dword ptr [eax + 0x55]; 
0x00062004: xchg dword ptr [eax], ebp; jge 0x62001; call dword ptr [eax - 0x73]; 
0x0005ba48: xchg dword ptr [eax], ebp; jp 0x5ba45; call dword ptr [eax - 0x73]; 
0x000c6d5d: xchg dword ptr [eax], ebp; popfd; stc; call dword ptr [eax - 0x73]; 
0x000a62f3: xchg dword ptr [eax], ebx; cwde; stc; call dword ptr [eax - 0x18]; 
0x0002ab61: xchg dword ptr [eax], ebx; jno 0x2ab5e; call dword ptr [eax - 0x18]; 
0x0002b762: xchg dword ptr [eax], ebx; jno 0x2b75f; call dword ptr [eax - 0x18]; 
0x0002ce01: xchg dword ptr [eax], ebx; jno 0x2cdfe; call dword ptr [eax - 0x18]; 
0x0002da51: xchg dword ptr [eax], ebx; jno 0x2da4e; call dword ptr [eax - 0x18]; 
0x0002e1e3: xchg dword ptr [eax], ebx; jno 0x2e1e0; call dword ptr [eax - 0x18]; 
0x0002edb7: xchg dword ptr [eax], ebx; jno 0x2edb4; call dword ptr [eax - 0x18]; 
0x00160098: xchg dword ptr [eax], ebx; mov ch, 0xf9; call dword ptr [eax - 0x18]; 
0x001439b6: xchg dword ptr [eax], ebx; pop ecx; stc; call dword ptr [eax - 0x73]; 
0x000c69a6: xchg dword ptr [eax], ebx; popfd; stc; call dword ptr [eax - 0x73]; 
0x0004c3eb: xchg dword ptr [eax], ebx; ret 0xfff9; 
0x000976ff: xchg dword ptr [eax], ebx; xchg ecx, edi; call dword ptr [eax - 0x73]; 
0x0002cdcb: xchg dword ptr [eax], ecx; jb 0x2cdc8; call dword ptr [eax - 0x73]; 
0x0002cdee: xchg dword ptr [eax], ecx; jb 0x2cdeb; call dword ptr [eax - 0x73]; 
0x0002ce4e: xchg dword ptr [eax], ecx; jb 0x2ce4b; call dword ptr [eax - 0x73]; 
0x0005ba58: xchg dword ptr [eax], ecx; jp 0x5ba55; call dword ptr [eax - 0x18]; 
0x00155f43: xchg dword ptr [eax], ecx; mov bl, 0xf9; call dword ptr [eax - 0x73]; 
0x001860d1: xchg dword ptr [eax], edi; stc; call dword ptr [eax - 0x18]; 
0x0015658d: xchg dword ptr [eax], edx; cmp edx, 1; jg 0x156598; ret; 
0x00049fcc: xchg dword ptr [eax], edx; js 0x49fc9; call dword ptr [eax - 0x18]; 
0x0004d3ae: xchg dword ptr [eax], edx; js 0x4d3ab; call dword ptr [eax - 0x18]; 
0x00051142: xchg dword ptr [eax], edx; js 0x5113f; call dword ptr [eax - 0x18]; 
0x00059a70: xchg dword ptr [eax], edx; js 0x59a6d; call dword ptr [eax - 0x18]; 
0x000ca2d1: xchg dword ptr [eax], edx; js 0xca2ce; call dword ptr [eax - 0x18]; 
0x000d0c65: xchg dword ptr [eax], edx; js 0xd0c62; call dword ptr [eax - 0x18]; 
0x0016b2cd: xchg dword ptr [eax], edx; mov dh, 0xf9; call dword ptr [eax - 0x73]; 
0x0004c3e0: xchg dword ptr [eax], edx; ret 0xfff9; 
0x001107ce: xchg dword ptr [ebp + 0x49], ecx; stc; call dword ptr [eax - 0x18]; 
0x000c6dd0: xchg dword ptr [ebp + eax*2 - 7], edi; call dword ptr [eax - 0x18]; 
0x000c6dd0: xchg dword ptr [ebp + eax*2 - 7], edi; call dword ptr [eax - 0x18]; xchg ebp, eax; sal dh, cl; jmp dword ptr [esi - 0x70]; 
0x000d0c52: xchg dword ptr [ebp + ebx*4 - 7], esp; call dword ptr [eax - 0x73]; 
0x00136bdf: xchg dword ptr [ebp + edx*2 - 7], ebp; call dword ptr [eax - 1]; 
0x00137349: xchg dword ptr [ebp + edx*2 - 7], edi; call dword ptr [ebp - 1]; 
0x0015f713: xchg dword ptr [ebp + esi*4 - 7], esi; call dword ptr [eax - 0x73]; 
0x000eea2f: xchg dword ptr [ebp - 0x4500000b], edi; add dword ptr [eax + eax], eax; or byte ptr [edi], 0xa3; ret 0x830f; 
0x000d4387: xchg dword ptr [ebp - 0x76e68137], eax; pop ebp; aam 0x31; ror byte ptr [ecx - 0x7c0ffe35], cl; ret 0x8d01; 
0x0004a235: xchg dword ptr [ebx + 0x2f], esi; stc; call dword ptr [eax - 0x18]; 
0x000c8673: xchg dword ptr [ebx + 0x39102444], ecx; ret 0x840f; 
0x000cc020: xchg dword ptr [ebx + 0x39182444], ecx; ret 0x840f; 
0x00092b34: xchg dword ptr [ebx + 0x3f], edi; stc; call dword ptr [eax - 0x18]; 
0x000a42b4: xchg dword ptr [ebx + 0x41], edi; stc; call dword ptr [eax - 0x73]; 
0x00110bd0: xchg dword ptr [ebx + 0x49], esp; stc; call dword ptr [eax - 0x18]; 
0x0015d35b: xchg dword ptr [ebx + 0x5f], edi; stc; call dword ptr [eax + 0x55]; 
0x00168b74: xchg dword ptr [ebx + 0x62], ebp; stc; call dword ptr [eax + 0x6a]; 
0x0013eca5: xchg dword ptr [ebx + 0x6afff957], edi; and dword ptr [eax - 0x73], edx; xchg esi, eax; push edi; stc; call dword ptr [eax - 0x18]; 
0x0015319e: xchg dword ptr [ebx + eax*4 - 0x17af0007], edi; cmpsd dword ptr [esi], dword ptr es:[edi]; cmp ebx, esi; jmp dword ptr [esi - 0x70]; 
0x0018c4fc: xchg dword ptr [ebx + eax*4 - 0x17af0007], edi; dec ecx; cmpsb byte ptr [esi], byte ptr es:[edi]; out dx, eax; jmp dword ptr [esi - 0x70]; 
0x00085e30: xchg dword ptr [ebx + eax*4 - 7], edx; call dword ptr [eax - 0x73]; 
0x00047722: xchg dword ptr [ebx + eax*4], eax; ret 0x8901; 
0x000475a2: xchg dword ptr [ebx + eax*4], eax; ret; 
0x0002a027: xchg dword ptr [ebx + ebp*2], ebp; stc; call dword ptr [eax - 0x73]; 
0x0014360a: xchg dword ptr [ebx + ebp*4 - 7], eax; call dword ptr [eax - 0x73]; 
0x000c450e: xchg dword ptr [ebx + ebx*4], esp; stc; call dword ptr [eax - 0x18]; 
0x00186078: xchg dword ptr [ebx + edi*4], ebx; stc; call dword ptr [eax - 0x73]; 
0x000ec5d5: xchg dword ptr [ebx - 0x3b7cfffc], edx; adc byte ptr [ecx], bh; ret; 
0x0004a2a5: xchg dword ptr [ebx], eax; xor cl, bh; call dword ptr [eax - 0x18]; 
0x0004d4a2: xchg dword ptr [ebx], eax; xor cl, bh; call dword ptr [eax - 0x18]; ret; 
0x0016ba6b: xchg dword ptr [ebx], ebx; arpl cx, di; call dword ptr [eax - 0x18]; 
0x0009ebb5: xchg dword ptr [ecx + 0x41], esp; stc; call dword ptr [eax - 0x73]; 
0x00111da3: xchg dword ptr [ecx + 0x49], eax; stc; call dword ptr [eax - 0x18]; 
0x00111da3: xchg dword ptr [ecx + 0x49], eax; stc; call dword ptr [eax - 0x18]; ret 0xf222; 
0x0006200b: xchg dword ptr [ecx + 0x6afff932], esi; and eax, 0xcb878d50; xor bh, cl; call dword ptr [eax - 0x18]; 
0x00153097: xchg dword ptr [ecx + eax*2 - 0xf], ebp; call dword ptr [ebx + 0x50]; 
0x0007cb97: xchg dword ptr [ecx + eax], edx; add byte ptr [ebx - 0xa8fb14], al; jne 0x7cbab; push esi; call dword ptr [ebx + 0x1c]; 
0x0002ecd9: xchg dword ptr [ecx + ebp*2 - 7], ebp; call dword ptr [eax - 0x73]; 
0x00138e84: xchg dword ptr [ecx + ebp*4], edx; stc; call dword ptr [eax - 0x73]; 
0x000a42a8: xchg dword ptr [ecx + ebx*4], esp; stc; call dword ptr [eax + 0x68]; 
0x000a427e: xchg dword ptr [ecx + ebx*4], esp; stc; call dword ptr [eax - 0x73]; 
0x00111ed4: xchg dword ptr [ecx + ecx*2 - 7], edi; call dword ptr [eax - 0x18]; 
0x0009e2d2: xchg dword ptr [ecx + ecx*4 - 7], edx; call dword ptr [eax - 0x73]; 
0x0009e21c: xchg dword ptr [ecx + ecx*4], edx; stc; call dword ptr [eax - 0x18]; 
0x0009e2e2: xchg dword ptr [ecx + ecx*4], esi; stc; call dword ptr [eax - 0x18]; 
0x000a55d7: xchg dword ptr [ecx + ecx], ecx; add byte ptr [ecx - 0x9efdbbc], cl; ret 0xf04; 
0x00156145: xchg dword ptr [ecx - 0x3b7c000d], edx; adc bl, ch; ror byte ptr [ebp - 0x64d2f70], 1; call dword ptr [edx - 0x73]; 
0x0008b7ca: xchg dword ptr [ecx - 0x7d000000], ebp; in al, dx; or al, 0x56; call dword ptr [ebp + 0x30]; 
0x0004a258: xchg dword ptr [ecx], ebx; xor cl, bh; call dword ptr [eax - 0x18]; 
0x0009401b: xchg dword ptr [ecx], ecx; inc eax; stc; call dword ptr [eax - 0x18]; 
0x00098cea: xchg dword ptr [ecx], edi; add dword ptr [eax], eax; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x00074f22: xchg dword ptr [ecx], edi; or cl, byte ptr [edi]; test byte ptr [0x83000001], al; ret 0x8904; 
0x00074ead: xchg dword ptr [ecx], edi; or dh, byte ptr [esi + ebp - 0x7d]; ret 0x8904; 
0x000c4581: xchg dword ptr [ecx], edx; inc ebp; stc; call dword ptr [eax - 0x18]; 
0x00155a6c: xchg dword ptr [edi + 0x29], esp; stc; call dword ptr [eax + 0x53]; 
0x0010b962: xchg dword ptr [edi + 0x3fac], eax; cmp eax, 1; jg 0x10b9a8; call dword ptr [esi]; 
0x0011141f: xchg dword ptr [edi + 0x49], edi; stc; call dword ptr [eax - 0x73]; 
0x0018609b: xchg dword ptr [edi + ebp*2], ebp; stc; call dword ptr [eax - 0x73]; 
0x0010b963: xchg dword ptr [edi + edi - 0x77d0000], ebp; add dword ptr [edi + 0x3b], edi; call dword ptr [esi]; 
0x00093ff9: xchg dword ptr [edi + edi - 7], edi; call dword ptr [eax - 0x18]; 
0x0004a2c8: xchg dword ptr [edi + esi*2 - 7], ebx; call dword ptr [eax - 0x18]; 
0x000e047c: xchg dword ptr [edi - 0x7c00000a], ebx; ret; 
0x0008c7aa: xchg dword ptr [edi], eax; add dword ptr [eax], eax; add byte ptr [ebx + 0x6a04ec], al; push 0; push esi; call dword ptr [ebp + 0x2c]; 
0x0004a5c4: xchg dword ptr [edi], eax; add dword ptr [eax], eax; add byte ptr [esi - 0x7b], ah; ror byte ptr [edi], cl; xchg ebp, eax; ret 0xb60f; 
0x00048964: xchg dword ptr [edi], ebp; stc; call dword ptr [eax + 0x56]; 
0x000577eb: xchg dword ptr [edi], ebp; stc; call dword ptr [eax + 0x57]; 
0x000275be: xchg dword ptr [edi], edi; sub ecx, edi; call dword ptr [eax - 0x18]; 
0x0003f329: xchg dword ptr [edi], edx; cmp edx, 1; jg 0x3f3f0; call eax; 
0x0013423a: xchg dword ptr [edi], edx; push ebp; stc; call dword ptr [eax + 0x6a]; 
0x000945c5: xchg dword ptr [edi], esp; inc eax; stc; call dword ptr [eax - 0x18]; 
0x0008cdda: xchg dword ptr [edx + 0x1a74], eax; cmp eax, 1; jg 0x8cdf0; ret; 
0x0004777a: xchg dword ptr [edx + 0x2f], esp; stc; call dword ptr [eax - 0x18]; 
0x000c7cbb: xchg dword ptr [edx + 0x2f], esp; stc; call dword ptr [eax - 0x18]; stosb byte ptr es:[edi], al; ret; 
0x00092b2d: xchg dword ptr [edx + 0x3f], ebp; stc; call dword ptr [eax - 0x73]; 
0x0008f920: xchg dword ptr [edx + eax], edx; add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007b427: xchg dword ptr [edx + eax], esp; add byte ptr [ebx + 0x6a08ec], al; push esi; call dword ptr [ebx + 8]; 
0x0002d94b: xchg dword ptr [edx + ebp*2 - 7], ebp; call dword ptr [eax + 0x68]; 
0x0002d5ff: xchg dword ptr [edx + ebp*2 - 7], ebp; call dword ptr [eax - 0x73]; 
0x0002e18a: xchg dword ptr [edx + ebp*2], ebp; stc; call dword ptr [eax + 0x68]; 
0x0002e019: xchg dword ptr [edx + ebp*2], ebp; stc; call dword ptr [eax - 0x73]; 
0x0013ec9e: xchg dword ptr [edx + ebp*4], esi; stc; call dword ptr [eax - 0x73]; 
0x0017e2f6: xchg dword ptr [edx + edi*4 - 7], edx; call dword ptr [eax - 0x18]; 
0x0002ab2b: xchg dword ptr [edx + esi*2 - 7], esp; call dword ptr [eax - 0x73]; 
0x0002c461: xchg dword ptr [edx + esi*2], esp; stc; call dword ptr [eax - 0x73]; 
0x00110bbd: xchg dword ptr [edx], eax; stc; call dword ptr [eax + 0x68]; 
0x001107bb: xchg dword ptr [edx], eax; stc; call dword ptr [eax - 0x73]; 
0x00110bc9: xchg dword ptr [edx], ebp; dec ecx; stc; call dword ptr [eax - 0x73]; 
0x000a1a3b: xchg dword ptr [edx], ebx; inc edx; stc; call dword ptr [eax + 0x53]; 
0x00069a06: xchg dword ptr [edx], ebx; xor edi, ecx; call dword ptr [eax - 0x18]; 
0x00152692: xchg dword ptr [edx], ecx; pop ebp; stc; call dword ptr [eax - 0x18]; 
0x001922d9: xchg dword ptr [edx], edi; stc; call dword ptr [eax - 0x73]; 
0x0002cde5: xchg dword ptr [edx], esi; add byte ptr [ebx - 0x72c3db84], cl; xchg dword ptr [eax], ecx; jb 0x2cdeb; call dword ptr [eax - 0x73]; 
0x00186102: xchg dword ptr [edx], esp; stc; call dword ptr [eax - 0x18]; 
0x000f06f0: xchg dword ptr [esi + 0x47], esp; stc; call dword ptr [eax - 0x73]; 
0x0013bc09: xchg dword ptr [esi + 0x56], esp; stc; call dword ptr [eax - 1]; 
0x00168be6: xchg dword ptr [esi + 0x62], esp; stc; call dword ptr [eax + 0x6a]; 
0x0008277d: xchg dword ptr [esi + 2], eax; add byte ptr [eax], al; sub esp, 8; push -1; push dword ptr [ebx]; call dword ptr [edi + 0xc]; 
0x0013bbe0: xchg dword ptr [esi + ebp*2 - 7], ecx; call dword ptr [eax - 0x75]; 
0x000da577: xchg dword ptr [esi + ebp*2], ebp; stc; call dword ptr [eax + 0x56]; 
0x00188dc5: xchg dword ptr [esi + ecx*4 - 0xc], ecx; call dword ptr [eax - 0x18]; 
0x000a51b4: xchg dword ptr [esi + edx*4 - 7], edx; call dword ptr [eax - 0x18]; 
0x0004a30e: xchg dword ptr [esi + esi*2 - 7], ebp; call dword ptr [eax - 0x18]; 
0x0008e599: xchg dword ptr [esi + esi*8 - 0x1c], ebp; call dword ptr [eax - 0x18]; 
0x000e0c8d: xchg dword ptr [esi - 0x7c000012], ecx; ret; 
0x000fedb1: xchg dword ptr [esi], ecx; add al, byte ptr [eax]; add byte ptr [ecx], al; ret; 
0x00180773: xchg dword ptr [esi], edi; arpl cx, di; call dword ptr [eax + 0x6a]; 
0x00180c04: xchg dword ptr [esi], edi; arpl cx, di; push dword ptr [ecx]; call dword ptr [eax + 0x6a]; 
0x00106b3a: xchg dword ptr [esi], edi; dec eax; stc; dec dword ptr [ebp - 0x6b7e671]; call dword ptr [eax - 0x77]; 
0x00047773: xchg dword ptr [esi], edi; xor cl, bh; call dword ptr [eax - 0x73]; 
0x0015d372: xchg dword ptr [esi], esi; inc ecx; stc; call dword ptr [eax + 0x53]; 
0x00134ff7: xchg dword ptr [esp + ebx*2 + 0x450fffef], ebp; ret 0xec83; 
0x000307de: xchg dword ptr [esp + esi*2 - 7], eax; call dword ptr [eax + 0x56]; 
0x000f0007: xchg dword ptr [esp + esi*2 - 7], ecx; call dword ptr [eax - 0x18]; 
0x0017b7b3: xchg dword ptr [esp + esi*2 - 7], ecx; call dword ptr [eax - 0x18]; ret 0xeb96; 
0x000a5a5b: xchg eax, eax; cwde; stc; call dword ptr [eax - 0x73]; 
0x0002ab3e: xchg eax, ebp; jo 0x2ab3b; call dword ptr [eax - 0x18]; 
0x0002b88b: xchg eax, ebp; jo 0x2b888; call dword ptr [eax - 0x18]; 
0x0002ce61: xchg eax, ebp; jo 0x2ce5e; call dword ptr [eax - 0x18]; 
0x0002da89: xchg eax, ebp; jo 0x2da86; call dword ptr [eax - 0x18]; 
0x0002e243: xchg eax, ebp; jo 0x2e240; call dword ptr [eax - 0x18]; 
0x0002edef: xchg eax, ebp; jo 0x2edec; call dword ptr [eax - 0x18]; 
0x00093c16: xchg eax, ebp; test cl, bh; call dword ptr [eax + 0x68]; 
0x00093f80: xchg eax, ebp; test cl, bh; call dword ptr [eax - 0x73]; 
0x0004a1ef: xchg eax, ebx; jbe 0x4a1ec; call dword ptr [eax - 0x18]; 
0x0004d45c: xchg eax, ebx; jbe 0x4d459; call dword ptr [eax - 0x18]; 
0x00051395: xchg eax, ebx; jbe 0x51392; call dword ptr [eax - 0x18]; 
0x00059d60: xchg eax, ebx; jbe 0x59d5d; call dword ptr [eax - 0x18]; 
0x00152660: xchg eax, ebx; mov al, 0xf9; call dword ptr [eax - 0x73]; 
0x0015a68a: xchg eax, ebx; mov bl, 0xf9; call dword ptr [eax - 0x73]; 
0x00092b21: xchg eax, ebx; test cl, bh; call dword ptr [eax + 0x68]; 
0x0004a354: xchg eax, ecx; ja 0x4a351; call dword ptr [eax - 0x18]; 
0x0004d60f: xchg eax, ecx; ja 0x4d60c; call dword ptr [eax - 0x18]; 
0x0005121b: xchg eax, ecx; ja 0x51218; call dword ptr [eax - 0x18]; 
0x00059cf1: xchg eax, ecx; ja 0x59cee; call dword ptr [eax - 0x18]; 
0x000ca453: xchg eax, ecx; ja 0xca450; call dword ptr [eax - 0x18]; 
0x000d0ee7: xchg eax, ecx; ja 0xd0ee4; call dword ptr [eax - 0x18]; 
0x0016ba1c: xchg eax, ecx; mov ch, 0xf9; call dword ptr [eax - 0x18]; 
0x0008a13b: xchg eax, edi; add byte ptr [eax], al; add byte ptr [ebx + 0x555004ec], al; push esi; call dword ptr [ebx + 0x38]; 
0x0015a69a: xchg eax, edi; pop esi; stc; call dword ptr [eax - 0x18]; 
0x00133bd8: xchg eax, edi; push esp; stc; call dword ptr [eax - 0x18]; 
0x00093fe6: xchg eax, edi; test cl, bh; call dword ptr [eax + 0x68]; 
0x00093fc4: xchg eax, edi; test cl, bh; call dword ptr [eax - 0x73]; 
0x00138f23: xchg eax, edx; cmpsd dword ptr [esi], dword ptr es:[edi]; stc; call dword ptr [eax - 0x18]; 
0x000a56b5: xchg eax, edx; cwde; stc; call dword ptr [eax + 0x68]; 
0x0011aa04: xchg eax, esi; jmp dword ptr [ebp - 0x5f]; 
0x000c6a29: xchg eax, esi; pushfd; stc; call dword ptr [eax - 0x18]; 
0x000a4ec7: xchg eax, esi; xchg ebp, eax; stc; call dword ptr [eax - 0x18]; 
0x000ab6f5: xchg eax, esp; cld; jmp dword ptr [esi - 0x70]; 
0x000c4561: xchg eax, esp; inc esp; stc; call dword ptr [eax - 0x18]; 
0x000a4076: xchg ebp, eax; add al, 0; add byte ptr [ebx - 0x14f3db94], cl; jnp 0x599550ce; add al, 0xf6; ret; 
0x001a9cd7: xchg ebp, eax; add al, byte ptr [eax]; add byte ptr [eax - 0x27af0e0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x000704b5: xchg ebp, eax; add byte ptr [ecx], al; ret; 
0x0004011c: xchg ebp, eax; and dword ptr [edi], ebp; stc; dec dword ptr [ecx - 0x76ebdbac]; ret; 
0x00197a84: xchg ebp, eax; and edi, edi; inc dword ptr [ecx + 0x43da8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000605f7: xchg ebp, eax; arpl cx, di; call dword ptr [eax + 0x68]; 
0x00172f65: xchg ebp, eax; arpl cx, di; call dword ptr [eax - 1]; 
0x0019321b: xchg ebp, eax; cli; jmp dword ptr [esi - 0x70]; 
0x000da8c7: xchg ebp, eax; daa; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00124b2f: xchg ebp, eax; dec edx; stc; call dword ptr [eax + 0x50]; 
0x0004d41d: xchg ebp, eax; idiv bh; dec dword ptr [ebx - 0x72e7db84]; xchg dword ptr [eax + 0x78], ebx; stc; call dword ptr [eax - 0x73]; 
0x00098ab9: xchg ebp, eax; inc ebx; sbb dword ptr [ecx], esi; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x0006a25d: xchg ebp, eax; mov eax, 0x39fffffb; ret 0x840f; 
0x0006d1a9: xchg ebp, eax; mov eax, 0x39fffffb; ret 0x850f; 
0x00069967: xchg ebp, eax; mov esp, 0x1fffffb; ret 0x9589; 
0x0006a035: xchg ebp, eax; mov esp, 0x1fffffb; ret 0xd801; 
0x00069b71: xchg ebp, eax; mov esp, 0x1fffffb; ret 0xf001; 
0x0006837d: xchg ebp, eax; mov esp, 0x1fffffb; ret 0xf801; 
0x000681a4: xchg ebp, eax; mov esp, 0x83fffffb; mov byte ptr [ecx], 1; ret 0x9589; 
0x00068605: xchg ebp, eax; mov esp, 0x8bfffffb; lea esi, [edx + edi*8 - 1]; inc dword ptr [ecx]; ret 0xd801; 
0x00199184: xchg ebp, eax; or bh, bh; inc dword ptr [ecx + 0x42928c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0015fd75: xchg ebp, eax; pop edi; stc; call dword ptr [eax - 0x18]; 
0x0006bad5: xchg ebp, eax; push 0x89fffffa; ret 0x858b; 
0x00126c10: xchg ebp, eax; rcr byte ptr [esi + 0x5f], 0xf; mov dh, 0xc0; ret; 
0x00169618: xchg ebp, eax; ret 0x3a3c; 
0x0008ba04: xchg ebp, eax; ret 0x40c7; 
0x0017bb97: xchg ebp, eax; ret 0x41e9; 
0x000621cb: xchg ebp, eax; ret 0x448b; 
0x0013793f: xchg ebp, eax; ret 0x44c7; 
0x0015c891: xchg ebp, eax; ret 0x548d; 
0x000c7dec: xchg ebp, eax; ret 0x6eb; 
0x0011e761: xchg ebp, eax; ret 0x7c89; 
0x00137802: xchg ebp, eax; ret 0x8b52; 
0x000d7695: xchg ebp, eax; ret 0x9d8b; 
0x0004a5cd: xchg ebp, eax; ret 0xb60f; 
0x00146933: xchg ebp, eax; ret 0xc085; 
0x000c7e62: xchg ebp, eax; ret 0xc208; 
0x00104e39: xchg ebp, eax; ret 0xc209; 
0x00045782: xchg ebp, eax; ret 0xc220; 
0x000995d6: xchg ebp, eax; ret 0xc231; 
0x000db1ce: xchg ebp, eax; ret 0xc238; 
0x00086946: xchg ebp, eax; ret 0xc283; 
0x00171480: xchg ebp, eax; ret 0xc483; 
0x0003f872: xchg ebp, eax; ret 0xca21; 
0x000f1423: xchg ebp, eax; ret 0xd001; 
0x000ff2aa: xchg ebp, eax; ret 0xd009; 
0x00086820: xchg ebp, eax; ret 0xd089; 
0x0015dede: xchg ebp, eax; ret 0xd120; 
0x0014b5ea: xchg ebp, eax; ret 0xd184; 
0x000fef36: xchg ebp, eax; ret 0xd201; 
0x0014b8ba: xchg ebp, eax; ret 0xd384; 
0x00055281: xchg ebp, eax; ret 0xd689; 
0x00047de7: xchg ebp, eax; ret 0xd789; 
0x000909d9: xchg ebp, eax; ret 0xe2c1; 
0x000a46db: xchg ebp, eax; ret 0xe383; 
0x00145286: xchg ebp, eax; ret 0xe8c0; 
0x00047290: xchg ebp, eax; ret 0xea81; 
0x0004a889: xchg ebp, eax; ret 0xea83; 
0x0014683c: xchg ebp, eax; ret 0xed85; 
0x0016961f: xchg ebp, eax; ret 0xf389; 
0x0003a6b0: xchg ebp, eax; ret; 
0x0010b259: xchg ebp, eax; rol byte ptr [ebx + 0x5e5b1cc4], 0x5f; pop ebp; ret; 
0x000fd3ba: xchg ebp, eax; rol byte ptr [ebx - 0x3ffefb3c], 0x5b; pop esi; ret; 
0x0012ed8b: xchg ebp, eax; rol byte ptr [ebx - 0x49f0d33c], 0xc0; neg eax; ret; 
0x0012ed4a: xchg ebp, eax; rol byte ptr [ebx - 0x49f0e33c], 0xc0; neg eax; ret; 
0x00172bf7: xchg ebp, eax; rol byte ptr [ebx - 0x49f0e33c], 0xc0; ret; 
0x00088ca2: xchg ebp, eax; rol byte ptr [ebx - 0x49f0f73c], 0xc0; pop ebx; neg eax; ret; 
0x00170f18: xchg ebp, eax; rol byte ptr [ebx - 0x49f0f73c], 0xc0; pop ebx; ret; 
0x00136d6c: xchg ebp, eax; rol byte ptr [ebx - 0x49f0fb3c], 0xc0; pop ebx; pop esi; neg eax; ret; 
0x001720af: xchg ebp, eax; rol byte ptr [ebx - 0x49f0fb3c], 0xc0; pop ebx; pop esi; ret; 
0x00067a74: xchg ebp, eax; rol byte ptr [ebx - 0x59343], 0xff; xor byte ptr [edi], cl; xchg esp, eax; ret; 
0x0009aa86: xchg ebp, eax; rol cl, 0xe0; pop es; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x00098478: xchg ebp, eax; rol ecx, 0xe1; pop es; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00055afc: xchg ebp, eax; ror byte ptr [edi], 0x95; ret; 
0x0015beda: xchg ebp, eax; ror byte ptr [edi], 0xb6; sal bh, 0xd8; ret; 
0x000c6dd7: xchg ebp, eax; sal dh, cl; jmp dword ptr [esi - 0x70]; 
0x00083bf5: xchg ebp, eax; sar byte ptr [ebx], 0x9e; push 0xf000001; xchg esp, eax; ret 0x9e3b; 
0x0017616c: xchg ebp, eax; stc; call dword ptr [eax + 0x53]; 
0x000a48d3: xchg ebp, eax; stc; call dword ptr [eax - 0x18]; 
0x0017815d: xchg ebp, eax; stc; call dword ptr [eax - 0x73]; 
0x0005f4fb: xchg ebp, eax; xor ecx, edi; call dword ptr [eax - 0x18]; 
0x0005b94a: xchg ebp, edi; jmp dword ptr [esi - 0x70]; 
0x00156be0: xchg ebx, eax; add al, 0x83; ret 0x8301; 
0x000b79b9: xchg ebx, eax; add al, byte ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x00100e50: xchg ebx, eax; add byte ptr [eax], 0; add dh, dh; ret 0x7540; 
0x00100fac: xchg ebx, eax; add byte ptr [eax], 0; add dh, dh; ret 0xf40; 
0x000c48e0: xchg ebx, eax; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; and byte ptr [ebx + ebx*4], 0xf9; call dword ptr [eax - 0x18]; 
0x0002b7d3: xchg ebx, eax; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax + 0x71], dh; stc; call dword ptr [eax - 0x18]; 
0x0002abe7: xchg ebx, eax; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + 0x71], esi; stc; call dword ptr [eax - 0x18]; 
0x0018b8a9: xchg ebx, eax; add eax, 0x11770000; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x0008b4cd: xchg ebx, eax; add eax, 0x25770000; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x000876f1: xchg ebx, eax; add eax, 0x29770000; sub esp, 0xc; push ebx; call dword ptr [esi + 0x30]; 
0x0008150f: xchg ebx, eax; add eax, 0x2b770000; sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x00080d6d: xchg ebx, eax; add eax, 0x35770000; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x0008bcb2: xchg ebx, eax; add eax, 0x38770000; sub esp, 8; push esi; push ebx; call dword ptr [edi + 0x18]; 
0x000883fa: xchg ebx, eax; add eax, 0x40770000; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x0008b423: xchg ebx, eax; add eax, 0x57770000; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x00088f34: xchg ebx, eax; add eax, 0x66770000; sub esp, 8; push -1; push dword ptr [ecx]; call dword ptr [eax + 0xc]; 
0x0007b422: xchg ebx, eax; add eax, 0x870f0000; add al, byte ptr fs:[eax]; add byte ptr [ebx + 0x6a08ec], al; push esi; call dword ptr [ebx + 8]; 
0x0008628c: xchg ebx, eax; add eax, 0x870f0000; ljmp 0xc445:0x8b000001; sub esp, 0xc; push esi; call dword ptr [eax + 0x30]; 
0x0007b9af: xchg ebx, eax; add eax, 0x870f0000; test dword ptr [eax], 0xec830000; or al, 0x56; call dword ptr [ebx + 0x30]; 
0x0008b7c5: xchg ebx, eax; add eax, 0x870f0000; test eax, 0x83000000; in al, dx; or al, 0x56; call dword ptr [ebp + 0x30]; 
0x00037ea4: xchg ebx, eax; and byte ptr [ebp - 7], dh; jmp dword ptr [esi - 0x77]; 
0x00167fa9: xchg ebx, eax; bnd call dword ptr [eax - 0x18]; 
0x00182cf4: xchg ebx, eax; cdq; stc; call dword ptr [edx - 0x77]; 
0x0012730b: xchg ebx, eax; cld; jne 0x127305; dec dword ptr [ebx + 0x56897440]; add al, 0x89; ret 0xeac1; 
0x0014389c: xchg ebx, eax; dec esp; je 0x143899; call dword ptr [eax - 0x77]; 
0x00043538: xchg ebx, eax; hlt; jp 0x43534; inc dword ptr [ecx]; fidivr word ptr [esi]; jmp esi; 
0x000a8b39: xchg ebx, eax; idiv bh; and ch, 2; lea edx, [edx - 0x17cc74]; cmove eax, edx; ret; 
0x00162786: xchg ebx, eax; je 0x16278b; add byte ptr [ecx + 0xdc68ac3], al; add byte ptr [ebx - 0x7c72ef14], al; cmp al, 0x39; bnd call dword ptr [eax - 0x73]; 
0x0002fecb: xchg ebx, eax; jle 0x2fef9; stc; call dword ptr [edx + 0x50]; 
0x0010ddfa: xchg ebx, eax; jo 0x10ddf9; clc; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x00085fe8: xchg ebx, eax; loope 0x85fe4; jmp dword ptr [esi - 0x70]; 
0x000c33c5: xchg ebx, eax; mov al, byte ptr [0xf00003c]; inc esp; ret 0x288b; 
0x00192769: xchg ebx, eax; mov ch, 0xfa; jmp dword ptr [esi - 0x70]; 
0x0010dfd3: xchg ebx, eax; mov eax, 0x1fff8fd; fdivr dword ptr [esi]; jmp eax; 
0x00127861: xchg ebx, eax; mov word ptr [ecx + 0x408bfff6], es; je 0x1277f3; push esi; add al, 0x89; ret 0xeac1; 
0x00127b1c: xchg ebx, eax; mov word ptr [esi + 0x408bfff6], es; je 0x127aae; push esi; add al, 0x89; ret 0xeac1; 
0x000c0922: xchg ebx, eax; or al, 0; add ecx, 0x10c6cf; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c0904: xchg ebx, eax; or al, 0; add ecx, 0x10c6ed; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c08df: xchg ebx, eax; or al, 0; add ecx, 0x10c712; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c08b5: xchg ebx, eax; or al, 0; add ecx, 0x10c73c; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c089c: xchg ebx, eax; or al, 0; add ecx, 0x10c755; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c087b: xchg ebx, eax; or al, 0; add ecx, 0x10c776; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c0857: xchg ebx, eax; or al, 0; add ecx, 0x10c79a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c0839: xchg ebx, eax; or al, 0; add ecx, 0x10c7b8; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0011c129: xchg ebx, eax; or al, 0xc3; in eax, dx; call dword ptr [edx - 0x73]; 
0x00038674: xchg ebx, eax; or byte ptr [ebp - 7], dh; call dword ptr [edx - 0x77]; 
0x0013bae9: xchg ebx, eax; out dx, eax; inc dword ptr [ebx - 0x72afef3c]; xchg byte ptr [esi + 0x56], bl; stc; call dword ptr [ebx + 0x50]; 
0x00162964: xchg ebx, eax; push ebx; pushal; stc; call dword ptr [edx + 0x50]; 
0x0012a7cb: xchg ebx, eax; push ebx; stc; call dword ptr [eax - 1]; 
0x001280dc: xchg ebx, eax; ret; 
0x00164928: xchg ebx, eax; std; jmp dword ptr [esi - 0x70]; 
0x00162deb: xchg ebx, eax; sub al, 0xa2; add byte ptr [eax], al; push edx; call eax; 
0x00061bf0: xchg ebx, eax; xor cl, bh; call dword ptr [esi + 0x52]; 
0x0007c440: xchg ebx, ebp; add byte ptr [eax], al; add byte ptr [ebx - 0xa8fb14], al; jne 0x7c454; push esi; call dword ptr [ebx + 0x1c]; 
0x0009d830: xchg ebx, ebx; add eax, dword ptr [eax]; add al, ch; push es; ret; 
0x00062014: xchg ebx, ecx; xor bh, cl; call dword ptr [eax - 0x18]; 
0x00152673: xchg ebx, edi; pop esp; stc; call dword ptr [eax - 0x18]; 
0x00086ade: xchg ebx, esi; stc; call dword ptr [eax + 0x56]; 
0x001860ae: xchg ebx, esi; stc; call dword ptr [eax - 0x18]; 
0x0019be61: xchg ecx, eax; add byte ptr [eax + eax], al; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0016f07f: xchg ecx, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x137cefbd], cl; or al, 0x56; call dword ptr [eax + 0x10]; 
0x00169b92: xchg ecx, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x7a72f314], al; jl 0x169bff; stc; call dword ptr [eax - 0x18]; 
0x0004a213: xchg ecx, eax; das; stc; call dword ptr [eax - 0x18]; 
0x00126fb6: xchg ecx, eax; dec esp; stc; call dword ptr [eax + 0x55]; 
0x0006511c: xchg ecx, eax; in al, dx; sar al, 0xff; jmp eax; 
0x000dc675: xchg ecx, eax; inc ebp; stc; call dword ptr [eax + 0x53]; 
0x00065947: xchg ecx, eax; insb byte ptr es:[edi], dx; sar eax, 0xff; mov edx, edi; mov edi, eax; jmp edx; 
0x0010a023: xchg ecx, eax; int1; inc dword ptr [ebx + 0x478910c4]; sbb al, 0x89; ret 0xc085; 
0x000b9244: xchg ecx, eax; jmp ecx; 
0x000fb13c: xchg ecx, eax; jne 0xfb1a0; ret; 
0x00058a4b: xchg ecx, eax; mov bl, 0xff; dec dword ptr [ebx - 0x364f4b]; dec dword ptr [ebx - 0x36377b]; call dword ptr [ebx + 0x56]; 
0x0007bf57: xchg ecx, eax; mov byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0005be4e: xchg ecx, eax; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000b939c: xchg ecx, eax; or byte ptr [0xa0c18100], cl; cmp dword ptr [ecx], edx; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00188e21: xchg ecx, eax; or byte ptr [ecx], al; add byte ptr [eax], al; shl eax, 5; lea eax, [eax + edx + 0x5c]; ret; 
0x000a0ac6: xchg ecx, eax; push cs; add byte ptr [ecx + 0x19e34bc1], al; add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [ebx + 0x67650f8], al; ret; 
0x00196321: xchg ecx, eax; push edx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019a421: xchg ecx, eax; push ss; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00125cbb: xchg ecx, eax; ret 0xfff2; 
0x000a35d8: xchg ecx, eax; stc; call dword ptr [eax - 0x18]; 
0x0005af56: xchg ecx, eax; std; jmp dword ptr [esi - 0x70]; 
0x00024b1e: xchg ecx, eax; xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebp - 0x33], dh; ret; 
0x000eb314: xchg ecx, ebp; inc esi; stc; call dword ptr [eax - 0x18]; 
0x00093c29: xchg ecx, edi; aas; stc; call dword ptr [eax - 0x18]; 
0x000965de: xchg ecx, edi; call dword ptr [eax + 0x68]; 
0x00096607: xchg ecx, edi; call dword ptr [eax + 0x6a]; 
0x00097e4a: xchg ecx, edi; call dword ptr [eax - 0x18]; 
0x0009be2d: xchg ecx, edi; call dword ptr [eax - 0x18]; cmp al, byte ptr [edx + 0xcbbfff9]; add byte ptr [eax], al; add cl, ch; ret 0xfffd; 
0x000966b9: xchg ecx, edi; call dword ptr [eax - 0x73]; 
0x00092fd5: xchg edi, eax; adc dl, bh; inc dword ptr [ebx - 0x17a9f314]; push cs; ret 0xffff; 
0x0018b22c: xchg edi, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x575504ec], al; push ebx; call dword ptr [esi + 0x3c]; 
0x000e7c87: xchg edi, eax; add dword ptr [eax], eax; add byte ptr [ebx - 0x76abdbb4], cl; cli; mov esi, ebp; call dword ptr gs:[0x10]; 
0x00153cd5: xchg edi, eax; add ebp, esi; jmp dword ptr [esi - 0x70]; 
0x000f7e75: xchg edi, eax; and al, 0xfb; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; xor eax, eax; ret; 
0x0016e373: xchg edi, eax; arpl cx, di; call dword ptr [eax + 0x6a]; 
0x0016e473: xchg edi, eax; arpl cx, di; call dword ptr [eax - 0x18]; 
0x0016e3c7: xchg edi, eax; arpl cx, di; jmp dword ptr [ebp - 0x75]; 
0x000272b4: xchg edi, eax; cmp byte ptr [eax - 7], dh; jmp dword ptr [esi - 0x77]; 
0x00184d85: xchg edi, eax; fdivr st(7); jmp dword ptr [esi - 0x70]; 
0x0015a95a: xchg edi, eax; fsubr qword ptr [ecx + edi*8]; dec dword ptr [edi]; inc esp; ret 0xec83; 
0x0005d62e: xchg edi, eax; hlt; jg 0x5d62a; call dword ptr [edx + 0x51]; 
0x000e1835: xchg edi, eax; in al, 0xff; push esi; ret; 
0x00030275: xchg edi, eax; mov dl, 7; add byte ptr [ecx - 0x76bbdbbc], cl; ret 0xc483; 
0x000658a6: xchg edi, eax; mov edi, ecx; jmp eax; 
0x000c259e: xchg edi, eax; mov esi, edx; ret; 
0x0015e463: xchg edi, eax; or al, 0xd1; int1; call dword ptr [edx + 0x6a]; 
0x000910a0: xchg edi, eax; or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; call dword ptr gs:[0x10]; 
0x000bab85: xchg edi, eax; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0019b19b: xchg edi, eax; or eax, dword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00061425: xchg edi, eax; push eax; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00139b86: xchg edi, eax; push ebp; stc; call dword ptr [edx + 0x50]; 
0x0015128f: xchg edi, eax; ret 0xd008; 
0x000ec7dc: xchg edi, eax; ret 0xda08; 
0x0012e5d4: xchg edi, eax; ret 0xf883; 
0x00151a65: xchg edi, eax; ret 0xfffe; 
0x00140206: xchg edi, eax; ret; 
0x000bb59b: xchg edi, eax; sbb dword ptr [ecx], edx; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000a56ca: xchg edi, eax; stc; call dword ptr [eax - 0x18]; 
0x000a6065: xchg edi, eax; stc; call dword ptr [eax - 0x18]; add ah, al; clc; jmp dword ptr [esi - 0x70]; 
0x000f0bf6: xchg edi, eax; sti; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; xor eax, eax; ret; 
0x00184587: xchg edi, eax; sti; jmp dword ptr [esi - 0x70]; 
0x00106acc: xchg edi, eax; sub al, 0xf9; clc; dec dword ptr [ecx + 0x3efe01d0]; jmp esi; 
0x00027bcc: xchg edi, eax; sub ecx, edi; call dword ptr [edx + 0x50]; 
0x0009403d: xchg edi, ebx; aas; stc; call dword ptr [eax - 0x18]; 
0x000a42bb: xchg edi, ebx; inc edx; stc; call dword ptr [eax - 0x18]; 
0x0017edc7: xchg edi, edi; pop ebx; stc; call dword ptr [eax - 0x18]; 
0x00040c8d: xchg edi, edi; stc; call dword ptr [eax - 0x18]; 
0x0015a066: xchg edi, edx; pop esi; stc; call dword ptr [eax + 0x55]; 
0x0017760a: xchg edx, eax; add al, 0; add byte ptr [ebx + 0x458b0cec], al; cmp al, 0x57; call dword ptr [eax + 0x10]; 
0x00072e44: xchg edx, eax; add al, 0; add byte ptr [ecx], bh; ret; 
0x00133edc: xchg edx, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x4ff63], cl; dec dword ptr [ebx - 0x50773]; jmp dword ptr [ebp - 1]; 
0x0014594a: xchg edx, eax; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x820f; 
0x0013401e: xchg edx, eax; add byte ptr [eax], al; add byte ptr [edx + 8], bh; call dword ptr gs:[0x10]; 
0x00186b17: xchg edx, eax; add byte ptr [ebx], 0; add byte ptr [ecx + 0x28c48303], cl; pop ebx; ret; 
0x000c261e: xchg edx, eax; add dword ptr [eax], eax; add bh, dh; ret 3; 
0x0019cc60: xchg edx, eax; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000c45af: xchg edx, eax; call 0xf0c45f1; inc esp; ret 0x8b65; 
0x000aa125: xchg edx, eax; cld; aaa; call 0xc24eb12c; ret; 
0x000ac345: xchg edx, eax; cmp al, 0x21; call 0xc24ed34c; ret; 
0x0013d5dd: xchg edx, eax; cmp al, 0xc0; cmc; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x0007c09e: xchg edx, eax; cwde; add byte ptr [eax], al; add byte ptr [ecx + 0x5b082454], cl; jmp eax; 
0x00124b13: xchg edx, eax; dec edx; stc; call dword ptr [edx - 0x77]; 
0x000a8b8d: xchg edx, eax; dec esp; sal ch, 0xff; cmovne eax, edx; pop ebx; ret; 
0x0017590a: xchg edx, eax; fsubr st(2); inc dword ptr [ebx - 0x137cef3c]; or al, 0x31; call dword ptr [esi - 0x18]; 
0x000ac380: xchg edx, eax; in al, dx; push cs; out 0xff, eax; cmove eax, edx; ret; 
0x00169b6a: xchg edx, eax; inc ecx; std; jmp dword ptr [esi - 0x70]; 
0x000ac4af: xchg edx, eax; insb byte ptr es:[edi], dx; mov cl, 0xf6; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000ac27f: xchg edx, eax; insb byte ptr es:[edi], dx; stosb byte ptr es:[edi], al; idiv bh; cmovne eax, edx; ret; 
0x00157e49: xchg edx, eax; int1; call dword ptr [eax - 0x18]; 
0x0013d6bf: xchg edx, eax; jl 0x13d70c; cmc; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000ac3c5: xchg edx, eax; jl 0xac3da; out 0xff, eax; cmove eax, edx; ret; 
0x000a95f0: xchg edx, eax; lodsb al, byte ptr [esi]; das; call 0xc24ea5f7; ret; 
0x00192a6a: xchg edx, eax; mov dl, 0xfa; jmp dword ptr [esi - 0x70]; 
0x000c3ac9: xchg edx, eax; mov eax, 0xf00003c; inc esp; ret 0xff50; 
0x000d86da: xchg edx, eax; mov ecx, 0x8d8bfff5; ror cl, 0xff; dec dword ptr [ebp - 0x661f37f]; call dword ptr [eax - 0x73]; 
0x000aa300: xchg edx, eax; mov esp, 0xfffe83d; inc esp; ret 0x66c3; 
0x00173be1: xchg edx, eax; mov word ptr [eax], es; add byte ptr [eax], al; mov dword ptr [eax + 8], edx; ret; 
0x000aa15f: xchg edx, eax; mov word ptr [ebp + 0x450ffff6], gs; ret 0x66c3; 
0x000a948f: xchg edx, eax; mov word ptr [edx - 0xb], cs; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000c0a23: xchg edx, eax; or al, 0; add ecx, 0x10c64e; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c09fe: xchg edx, eax; or al, 0; add ecx, 0x10c673; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c09de: xchg edx, eax; or al, 0; add ecx, 0x10c693; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c09c1: xchg edx, eax; or al, 0; add ecx, 0x10c6b0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c0994: xchg edx, eax; or al, 0; add ecx, 0x10c6dd; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c097d: xchg edx, eax; or al, 0; add ecx, 0x10c6f4; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c0962: xchg edx, eax; or al, 0; add ecx, 0x10c70f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c0940: xchg edx, eax; or al, 0; add ecx, 0x10c731; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000a944f: xchg edx, eax; or al, 0xbd; idiv bh; cmovne eax, edx; ret; 
0x0013d62d: xchg edx, eax; or al, 0xe0; cmc; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x0013bbf1: xchg edx, eax; out dx, eax; inc dword ptr [ebx - 0x7072ef3c]; mov ebp, 0x89fff945; ret 0x68b; 
0x000dd812: xchg edx, eax; pop ecx; hlt; inc dword ptr [ebx - 0x7c76ef3c]; push 0x8900003e; ret 0xc085; 
0x000a95b5: xchg edx, eax; pop esp; inc ecx; call 0xc24ea5bc; ret; 
0x000a0954: xchg edx, eax; push cs; add byte ptr [ecx + 0x19e4bdc2], al; add byte ptr [ebx - 0x72afeb14], al; adc byte ptr [ecx + ebx*2], 0xf9; call dword ptr [eax - 0x18]; 
0x00122e2a: xchg edx, eax; push ebp; add byte ptr [eax], al; add esp, 0x10; add esp, 0xc; ret; 
0x00163218: xchg edx, eax; push ebx; pushal; stc; call dword ptr [edx + 0x50]; 
0x000a8aff: xchg edx, eax; pushfd; mov bh, 0xf6; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000ac2c0: xchg edx, eax; pushfd; xor al, ch; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x00053cff: xchg edx, eax; ret 0x1e89; 
0x000c9f2b: xchg edx, eax; ret 0x7439; 
0x00054055: xchg edx, eax; ret 0x789; 
0x001a7b9a: xchg edx, eax; ret 0xb60f; 
0x000dece3: xchg edx, eax; ret 0xc281; 
0x00135b58: xchg edx, eax; ret 0xd089; 
0x001737c1: xchg edx, eax; ret 0xd689; 
0x00053bff: xchg edx, eax; ret 0xe89; 
0x0005419b: xchg edx, eax; ret; 
0x00180a6a: xchg edx, eax; sar bl, cl; jmp dword ptr [esi - 0x70]; 
0x000c4006: xchg edx, eax; sar byte ptr [eax + eax], 1; add byte ptr [edi], cl; inc esp; ret 0x4489; 
0x0013d67d: xchg edx, eax; sbb al, 0xd0; cmc; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x000a93bd: xchg edx, eax; sbb al, 0xe0; cmc; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x0019ae5a: xchg edx, eax; sbb edx, edi; jmp dword ptr [esi - 0x70]; 
0x000bd5e4: xchg edx, eax; stc; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000a9630: xchg edx, eax; sub al, 0x2f; call 0xc24ea637; ret; 
0x000ac300: xchg edx, eax; sub al, 0x30; call 0xc24ed307; ret; 
0x000ab4d5: xchg edx, eax; sub al, 0x3d; call 0xc24ec4dc; ret; 
0x000a940d: xchg edx, eax; sub al, 0xd0; cmc; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x000c089b: xchg edx, eax; xchg ebx, eax; or al, 0; add ecx, 0x10c755; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000234d9: xchg edx, eax; xor cl, bh; call dword ptr [eax + 0x52]; 
0x00086291: xchg edx, ebp; add dword ptr [eax], eax; add byte ptr [ebx - 0x137c3bbb], cl; or al, 0x56; call dword ptr [eax + 0x30]; 
0x00155f56: xchg edx, edi; pop ebp; stc; call dword ptr [eax - 0x18]; 
0x0004a331: xchg edx, edx; das; stc; call dword ptr [eax - 0x18]; 
0x0015f726: xchg edx, esp; pop edi; stc; call dword ptr [eax - 0x18]; 
0x00028f34: xchg edx, esp; sub bh, cl; call dword ptr [eax - 0x18]; 
0x000546a9: xchg esi, eax; add al, 0x83; ret 0x8501; 
0x000546a2: xchg esi, eax; add al, 0x8d; dec edi; add dword ptr [ecx - 0x7cfb69b4], ecx; ret 0x8501; 
0x00098f6d: xchg esi, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x5e9ae3a9], cl; push 0x39000000; ret 0x6974; 
0x000e75fc: xchg esi, eax; add dword ptr [eax], eax; add bh, dh; ror dword ptr [ebp + 0x2dd1c], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00056766: xchg esi, eax; add dword ptr [eax], eax; add byte ptr [ebx - 0x362743], al; call dword ptr [eax]; 
0x000307d6: xchg esi, eax; add dword ptr [eax], eax; add byte ptr [ebx - 0x7872f714], al; inc esp; je 0x307db; call dword ptr [eax + 0x56]; 
0x00130536: xchg esi, eax; add eax, 0xdbc28100; call 0xb8660551; ret; 
0x00092aca: xchg esi, eax; and byte ptr [edx], al; add byte ptr [eax], al; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x00183f19: xchg esi, eax; cdq; stc; call dword ptr [edx - 0x77]; 
0x0004a266: xchg esi, eax; cmp cl, byte ptr [edi]; add byte ptr [ebx - 0x72e7db84], cl; xchg dword ptr [eax + edi*2], esi; stc; call dword ptr [eax - 0x73]; 
0x00143cce: xchg esi, eax; dec ebp; xor cl, bh; call dword ptr [edx - 0x46]; 
0x0016f5f9: xchg esi, eax; dec esp; or dh, bl; call dword ptr [edx + 0x6a]; 
0x00109791: xchg esi, eax; inc eax; dec eax; stc; call dword ptr [edx - 1]; 
0x000ca58b: xchg esi, eax; inc ebp; stc; call dword ptr [eax - 0x18]; 
0x000f1915: xchg esi, eax; inc edi; stc; call dword ptr [eax - 0x18]; 
0x000f7d79: xchg esi, eax; inc edi; stc; call dword ptr [eax - 0x18]; in eax, dx; ret 0xfff3; 
0x00064893: xchg esi, eax; insb byte ptr es:[edi], dx; sar eax, 0xff; jmp eax; 
0x000a6b4b: xchg esi, eax; lea esi, [esi]; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax + 0x90]; call dword ptr [eax]; 
0x001340d1: xchg esi, eax; lock add eax, dword ptr [eax]; add byte ptr [ecx - 0x33f7b], cl; inc edi; test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x0013c0e2: xchg esi, eax; lodsb al, byte ptr [esi]; shr edi, 1; call dword ptr [edx - 0x3f]; 
0x00124ad4: xchg esi, eax; mov dword ptr [edx - 7], ecx; call dword ptr [edx - 0x77]; 
0x000842c5: xchg esi, eax; movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x001ac64d: xchg esi, eax; pop esi; lea eax, [edi - 0x10]; pop edi; ret; 
0x0013ecae: xchg esi, eax; push edi; stc; call dword ptr [eax - 0x18]; 
0x00038dd3: xchg esi, eax; ret 0xb60f; 
0x000e165f: xchg esi, eax; ret 0xc931; 
0x001415bc: xchg esi, eax; ret 0xd008; 
0x000304ab: xchg esi, eax; ret; 
0x00082a07: xchg esi, eax; stc; call dword ptr [eax - 0x18]; 
0x00124b2e: xchg esi, eax; xchg ebp, eax; dec edx; stc; call dword ptr [eax + 0x50]; 
0x00124b12: xchg esi, eax; xchg edx, eax; dec edx; stc; call dword ptr [edx - 0x77]; 
0x00139ac2: xchg esi, eax; xor al, 0xa8; stc; call dword ptr [edx + 0x50]; 
0x0004a1cc: xchg esi, ebp; das; stc; call dword ptr [eax - 0x18]; 
0x00028f57: xchg esi, ecx; sub bh, cl; call dword ptr [eax - 0x18]; 
0x000a4291: xchg esi, esi; inc edx; stc; call dword ptr [eax - 0x18]; 
0x00093fb5: xchg esp, eax; aas; stc; call dword ptr [eax - 0x18]; 
0x00034890: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x00024b1f: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebp - 0x33], dh; ret; 
0x00083227: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebp - 0x75371], cl; dec dword ptr [ecx - 0x7e30d621]; call dword ptr [ebx + 0xf000005]; 
0x0012fe07: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b20c4], al; pop edi; ret; 
0x00090d4b: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0003cc7e: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5f], bl; ret; 
0x0012ef7b: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebx + 0xa024b4], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0009beb0: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x2776fb3c], al; pop ebx; pop esi; ret; 
0x00098357: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x0007bf4f: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x6e76a7b8], cl; mov byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0007e839: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebx - 0xa9f314], al; push ebx; xor al, 0x89; ret 0xc483; 
0x00089674: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ecx - 0x7e20d631], cl; call dword ptr [ebx + 0xf000005]; 
0x0014cde6: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x001b03f4: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ecx], cl; ret 0xbc89; 
0x000c2641: xchg esp, eax; add byte ptr [eax], al; add byte ptr [edx - 9], al; ret 3; 
0x00179492: xchg esp, eax; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x001775c7: xchg esp, eax; and al, 0x4c; add dword ptr [eax], eax; add byte ptr [edx + 0x57], dl; call dword ptr [eax + 4]; 
0x001b4408: xchg esp, eax; and al, 0x80; add byte ptr [eax], al; add byte ptr [ecx + 0x100000e1], al; add byte ptr [ecx - 0x9f7dbbc], cl; ret 0xf07; 
0x001b2d0a: xchg esp, eax; and al, 0x80; add byte ptr [eax], al; add dh, dh; ret 0x7407; 
0x00063488: xchg esp, eax; and al, 0x83; add byte ptr [eax], al; add byte ptr [ecx], al; ret; 
0x001adc2c: xchg esp, eax; and al, 0x84; add byte ptr [eax], al; add byte ptr [ebx - 0x7ce7dba4], cl; ret; 
0x0010e6fd: xchg esp, eax; and al, 0x88; add byte ptr [eax], al; add byte ptr [eax + 0x72], bh; mov ebx, dword ptr [esp + 0x80]; call dword ptr gs:[0x10]; 
0x001b0676: xchg esp, eax; and al, 0x8c; add byte ptr [eax], al; add bh, dh; ret 0; 
0x00114dd1: xchg esp, eax; and al, 0xa8; add byte ptr [eax], al; add byte ptr [eax + 0x133], bh; call dword ptr gs:[0x10]; 
0x00114ca8: xchg esp, eax; and al, 0xa8; add byte ptr [eax], al; add byte ptr [ebx + 0xac24b4], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00114fd0: xchg esp, eax; and al, 0xb8; add byte ptr [eax], al; add byte ptr [eax + 0x132], bh; call dword ptr gs:[0x10]; 
0x00114f61: xchg esp, eax; and al, 0xb8; add byte ptr [eax], al; add byte ptr [eax + 0x1c4], bh; mov esi, dword ptr [esp + 0xbc]; call dword ptr gs:[0x10]; 
0x00170ef3: xchg esp, eax; and eax, dword ptr [eax]; add byte ptr [ebx + 0x239880], cl; add byte ptr [ebx + 0x6a08ec], al; push ebx; call dword ptr [eax + 0x14]; 
0x00138f01: xchg esp, eax; cmpsd dword ptr [esi], dword ptr es:[edi]; stc; call dword ptr [eax - 0x18]; 
0x0014c3c8: xchg esp, eax; idiv edi; inc dword ptr [ebx - 0x7a72f714]; sub ecx, edi; call dword ptr [eax - 0x73]; 
0x00134785: xchg esp, eax; inc edi; add byte ptr [eax], al; add word ptr [eax + ebx*2], 1; pop ebx; ret; 
0x000a44f4: xchg esp, eax; inc edx; stc; call dword ptr [eax - 0x18]; 
0x0002abcb: xchg esp, eax; jno 0x2abc7; call dword ptr [eax - 0x18]; 
0x0002b7b7: xchg esp, eax; jno 0x2b7b3; call dword ptr [eax - 0x18]; 
0x0002d9a5: xchg esp, eax; jno 0x2d9a1; call dword ptr [eax - 0x18]; 
0x0002ee36: xchg esp, eax; jno 0x2ee32; call dword ptr [eax - 0x18]; 
0x0005b508: xchg esp, eax; jns 0x5b504; call dword ptr [eax - 0x73]; 
0x0005b524: xchg esp, eax; jns 0x5b520; call dword ptr [eax - 0x73]; 
0x0005b540: xchg esp, eax; jns 0x5b53c; call dword ptr [eax - 0x73]; 
0x0005b55c: xchg esp, eax; jns 0x5b558; call dword ptr [eax - 0x73]; 
0x0003c5cb: xchg esp, eax; mov ebp, esp; adc al, byte ptr [eax]; add byte ptr [edi], cl; xchg esp, eax; ret 0xec83; 
0x0006073a: xchg esp, eax; mov edx, dword ptr [ecx + edi*4 - 8]; inc dword ptr [ecx]; fidivr dword ptr [esi]; jmp edx; 
0x000c07b6: xchg esp, eax; or al, 0; add ecx, 0x10c83b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000607b3: xchg esp, eax; or dword ptr [eax - 0x46], 0xfffffff8; inc dword ptr [ecx]; fidivr dword ptr [esi]; jmp edx; 
0x00025745: xchg esp, eax; outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x000c48cb: xchg esp, eax; pop es; add byte ptr [ebx - 0x72e3dbac], cl; sbb byte ptr [eax], 0x9c; stc; call dword ptr [eax - 0x73]; 
0x00166404: xchg esp, eax; popal; stc; call dword ptr [ecx - 1]; 
0x00189db6: xchg esp, eax; ret 0x1389; 
0x001399b1: xchg esp, eax; ret 0x2d3c; 
0x0003039b: xchg esp, eax; ret 0x3a3c; 
0x000452de: xchg esp, eax; ret 0x3c83; 
0x00109986: xchg esp, eax; ret 0x3f8b; 
0x00137001: xchg esp, eax; ret 0x4483; 
0x0015dbb5: xchg esp, eax; ret 0x4489; 
0x001374c2: xchg esp, eax; ret 0x448b; 
0x00045217: xchg esp, eax; ret 0x44c7; 
0x0005ae20: xchg esp, eax; ret 0x48b; 
0x00031f5b: xchg esp, eax; ret 0x4c89; 
0x0014933b: xchg esp, eax; ret 0x5484; 
0x00030ba4: xchg esp, eax; ret 0x5f3c; 
0x0005ebfb: xchg esp, eax; ret 0x6a52; 
0x00064a2a: xchg esp, eax; ret 0x748b; 
0x0004586a: xchg esp, eax; ret 0x7c83; 
0x001003b6: xchg esp, eax; ret 0x87eb; 
0x00083bfe: xchg esp, eax; ret 0x9e3b; 
0x0014c6d6: xchg esp, eax; ret 0xa3c; 
0x000913d7: xchg esp, eax; ret 0xb60f; 
0x001783ce: xchg esp, eax; ret 0xc031; 
0x0014e404: xchg esp, eax; ret 0xc083; 
0x0015bba4: xchg esp, eax; ret 0xc084; 
0x000d756b: xchg esp, eax; ret 0xc139; 
0x000c9975: xchg esp, eax; ret 0xc339; 
0x00192c1a: xchg esp, eax; ret 0xc483; 
0x00064d00: xchg esp, eax; ret 0xc629; 
0x000496f2: xchg esp, eax; ret 0xc639; 
0x00091b57: xchg esp, eax; ret 0xc689; 
0x000abb8a: xchg esp, eax; ret 0xc739; 
0x00047970: xchg esp, eax; ret 0xc8b; 
0x0003014b: xchg esp, eax; ret 0xca08; 
0x0010031d: xchg esp, eax; ret 0xca83; 
0x0007b48a: xchg esp, eax; ret 0xd008; 
0x0007b469: xchg esp, eax; ret 0xd009; 
0x0016999f: xchg esp, eax; ret 0xd1e9; 
0x000ec7d1: xchg esp, eax; ret 0xd309; 
0x000db33d: xchg esp, eax; ret 0xd338; 
0x00100357: xchg esp, eax; ret 0xe6eb; 
0x000507a3: xchg esp, eax; ret 0xeb39; 
0x0003c5d2: xchg esp, eax; ret 0xec83; 
0x000c7eb4: xchg esp, eax; ret 0xf883; 
0x0005680b: xchg esp, eax; ret 0xf980; 
0x00043ac5: xchg esp, eax; ret 0xff83; 
0x0012408a: xchg esp, eax; ret 0xfff9; 
0x000fd985: xchg esp, eax; ret 8; 
0x000304a0: xchg esp, eax; ret; 
0x001383ce: xchg esp, eax; rol byte ptr [ebx + 0x5e5b2cc4], 0x5f; pop ebp; ret; 
0x0010b4aa: xchg esp, eax; rol byte ptr [ebx - 0x49f0d33c], 0xc0; ret; 
0x0009c304: xchg esp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; lea eax, [eax + eax + 2]; ret; 
0x00053446: xchg esp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x0009c1d3: xchg esp, eax; ror byte ptr [edi], 0xb6; rol byte ptr [ebx - 0x3b7cfd18], 0xc; ret; 
0x0009c2f2: xchg esp, eax; ror byte ptr [edi], 0xb6; rol byte ptr [ebx - 0x3b7cfd40], 0xc; ret; 
0x0003c376: xchg esp, eax; ror byte ptr [edi], 0xb6; ror byte ptr [ecx - 0x3b7ce7bd], 8; xor eax, eax; pop ebx; ret; 
0x00123649: xchg esp, eax; ror byte ptr [edi], 0xb6; sal bh, 0xd8; add esp, 0xc; ret; 
0x0018b387: xchg esp, eax; sar byte ptr [ebx], 0x9e; push 0xf000001; xchg esp, eax; ret 0xd008; 
0x0009599b: xchg esp, eax; sbb al, byte ptr [eax]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x2a4], edx; ret; 
0x0009597b: xchg esp, eax; sbb al, byte ptr [eax]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x2ac], edx; ret; 
0x00151aa5: xchg esp, eax; scasd eax, dword ptr es:[edi]; stc; call dword ptr [eax - 0x18]; 
0x000a44cc: xchg esp, eax; stc; call dword ptr [eax - 0x18]; 
0x00038aab: xchg esp, eax; stc; call dword ptr [eax - 1]; 
0x0013a52d: xchg esp, eax; test al, 0xf9; call dword ptr [eax + 0x6a]; 
0x0005d62d: xchg esp, eax; xchg edi, eax; hlt; jg 0x5d62a; call dword ptr [edx + 0x51]; 
0x0002d96e: xchg esp, ebp; jno 0x2d96b; call dword ptr [eax - 0x73]; 
0x0002d991: xchg esp, ebp; jno 0x2d98e; call dword ptr [eax - 0x73]; 
0x0002d9b4: xchg esp, ebp; jno 0x2d9b1; call dword ptr [eax - 0x73]; 
0x0002da1b: xchg esp, ebp; jno 0x2da18; call dword ptr [eax - 0x73]; 
0x0002da3e: xchg esp, ebp; jno 0x2da3b; call dword ptr [eax - 0x73]; 
0x0002da76: xchg esp, ebp; jno 0x2da73; call dword ptr [eax - 0x73]; 
0x0002aaf6: xchg esp, ebp; push -7; call dword ptr [eax + 0x68]; 
0x0002a7ba: xchg esp, ebp; push -7; call dword ptr [eax - 0x73]; 
0x00143396: xchg esp, ebx; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x00115066: xchg esp, ebx; sub al, 0xf9; call dword ptr [eax + 0x56]; 
0x00106e30: xchg esp, ebx; sub al, 0xf9; dec dword ptr [ebp - 0x6c0bf71]; call dword ptr [eax - 0x17]; 
0x000c44fe: xchg esp, ebx; wait; stc; call dword ptr [eax - 0x73]; 
0x00186d7f: xchg esp, ecx; jl 0x186d77; call dword ptr [eax - 0x73]; 
0x0002b7e9: xchg esp, ecx; push -7; call dword ptr [eax + 0x68]; 
0x0002b10d: xchg esp, ecx; push -7; call dword ptr [eax - 0x73]; 
0x00138e74: xchg esp, ecx; push ebp; stc; call dword ptr [eax - 0x18]; 
0x000310af: xchg esp, ecx; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x0018a11f: xchg esp, edi; add dword ptr [eax], eax; add byte ptr [ebx + 0x6a08ec], al; push esi; call dword ptr [ebx + 8]; 
0x0003109c: xchg esp, edi; jb 0x31099; call dword ptr [eax - 0x73]; 
0x0009d735: xchg esp, edi; mov cl, bh; call dword ptr [eax - 0x73]; 
0x00130e85: xchg esp, edi; movsd dword ptr es:[edi], dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x00085e40: xchg esp, edx; dec eax; stc; call dword ptr [eax - 0x18]; 
0x000699f3: xchg esp, edx; jge 0x699f0; call dword ptr [eax - 0x73]; 
0x0016ba09: xchg esp, esi; mov ch, 0xf9; call dword ptr [eax - 0x73]; 
0x0008ecc1: xend; xor eax, eax; add esp, 0xc; ret; 
0x001ace73: xgetbv; imul eax, eax, 0x1010101; shr eax, 0x18; ret; 
0x00153b95: xlatb; add al, 0xee; jmp dword ptr [esi - 0x70]; 
0x000d64d8: xlatb; add bh, dh; out 0x89, eax; rol byte ptr [ebx - 0x173e031e], 1; add al, byte ptr [ecx]; ret 0xd889; 
0x0012fa77: xlatb; add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; mov ebx, edx; ret; 
0x000da3ae: xlatb; add byte ptr [ecx], bh; ret; 
0x0013e415: xlatb; clc; jmp dword ptr [esi - 0x70]; 
0x00070aa7: xlatb; cmp ecx, 0x5a; jbe 0x71983; mov ecx, dword ptr [esp + 0x4c]; mov dword ptr [esp + 4], ecx; jmp eax; 
0x000b4365: xlatb; idiv bh; inc dword ptr [eax + 0xf000d79]; test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000f3735: xlatb; imul edi, ebx, -1; lea esi, [esi]; xor eax, eax; ret; 
0x000606a5: xlatb; inc edi; std; call dword ptr [ebp + 0x50]; 
0x00090a63: xlatb; jae 0x90a30; mov ecx, dword ptr [ebx + 0xc]; mov eax, 0xf0; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0008ca35: xlatb; jecxz 0x8ca37; dec dword ptr [ebx - 0x3b7cf7b9]; adc bl, ch; ret; 
0x0017d265: xlatb; jns 0x17d258; inc dword ptr [ebx - 0x2f08e33c]; shr eax, 0x1f; ret; 
0x000c1bdc: xlatb; les eax, ptr [ebp - 0x257af040]; add byte ptr [eax], al; add bh, dh; ret 0x3f; 
0x001aac85: xlatb; les eax, ptr [ebp - 0x7e7af040]; add dword ptr [eax], eax; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000c1761: xlatb; les eax, ptr [ebp - 0xa7af040]; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x00182825: xlatb; mov ah, 0xfb; jmp dword ptr [esi - 0x70]; 
0x000decdf: xlatb; mov dword ptr [0xc2920f00], eax; add edx, 0x16d; mov eax, edx; ret; 
0x00156c3f: xlatb; or dword ptr [esi], 0x44ec8100; add dword ptr [eax], eax; add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00124c98: xlatb; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0015a067: xlatb; pop esi; stc; call dword ptr [eax + 0x55]; 
0x00158fb5: xlatb; pop esi; stc; call dword ptr [eax - 0x18]; 
0x001aa772: xlatb; ret 0x498d; 
0x000c1398: xlatb; ret 0xc085; 
0x00082a3f: xlatb; ret; 
0x001ac59c: xlatb; retf 0xf66; xlatb; ret; 
0x000c1c8f: xlatb; rol byte ptr [ebp + 0x663b75c0], 0xf; xlatb; ret 0xc085; 
0x001aad46: xlatb; rol dword ptr [ebp + 0x30850fc0], 2; add byte ptr [eax], al; xor eax, eax; ret; 
0x000c1560: xlatb; rol dword ptr [ebp + 0x315a75c0], 0xc0; pop edi; ret; 
0x000c1825: xlatb; rol dword ptr [ebp + 0x316575c0], 0xc0; ret; 
0x000c17f6: xlatb; rol dword ptr [ebp + 0x317475c0], 0xc0; ret; 
0x001aad85: xlatb; rol dword ptr [ebp + 0x71850fc0], 2; add byte ptr [eax], al; xor eax, eax; ret; 
0x001aa8ae: xlatb; rol dword ptr [ebp - 0x377af040], 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x000c1526: xlatb; rol dword ptr [ebp - 0x4f7af040], 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x001ab999: xlatb; ror dword ptr [ebp - 0x2d7aefc0], 1; jne 0x1ab9b0; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x000c1792: xlatb; ror dword ptr [edi], 0xbd; rol byte ptr [ecx], 0xc8; ret; 
0x001ab1f4: xlatb; shl dword ptr [ecx], 0xd0; test eax, eax; jne 0x1aae20; xor eax, eax; ret; 
0x000c0856: xlatb; xchg ebx, eax; or al, 0; add ecx, 0x10c79a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0017a825: xlatb; xor al, 0xfc; call dword ptr [eax - 0x73]; 
0x0003dc94: xlatb; xor edx, edx; mov ecx, edi; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x0009481f: xor ah, 0x3a; add byte ptr [eax], al; ret; 
0x00099fc8: xor ah, 0x3a; add byte ptr [eax], al; xor eax, eax; ret; 
0x0005d4d7: xor ah, 0x7f; clc; call dword ptr [eax + 0x56]; 
0x00124815: xor ah, 0xa3; stc; call dword ptr [eax - 0x73]; 
0x0003d4af: xor ah, 1; add byte ptr [eax], al; ret; 
0x000718d7: xor ah, al; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x0007078b: xor ah, al; mov ebx, dword ptr [esp + 0xc]; mov ecx, dword ptr [ebx + edx*4 - 0x73734]; add ecx, eax; jmp ecx; 
0x000e9f80: xor ah, bh; jmp dword ptr [esi - 0x70]; 
0x00155f3a: xor ah, cl; in eax, dx; dec dword ptr [ebx - 0x72f7db84]; xchg dword ptr [eax], ecx; mov bl, 0xf9; call dword ptr [eax - 0x73]; 
0x0008edf6: xor al, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x76e7dbac], cl; ret; 
0x0004c396: xor al, 0; add byte ptr [eax], al; add cl, ch; ret; 
0x0011f678: xor al, 0; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00130281: xor al, 0; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0014eea6: xor al, 0; add byte ptr [ebp - 0x7cbd8b40], al; in al, dx; or al, 0x89; ret; 
0x000fd597: xor al, 0x24; call 0x231a0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016ebb4: xor al, 0x24; call dword ptr [eax + 0x10]; 
0x0002f4fb: xor al, 0x24; call ebx; 
0x0009de10: xor al, 0x24; call edi; 
0x001628d9: xor al, 0x24; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x0016335d: xor al, 0x24; push 0x400; push dword ptr [esp + 0xc]; push ebp; call edi; 
0x0015a12d: xor al, 0x24; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x10]; call edi; 
0x00189c2a: xor al, 0x24; ret; 
0x0013c027: xor al, 0x24; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x001b04c2: xor al, 0x29; ret 0x3b8; 
0x00108129: xor al, 0x29; ret 0x448b; 
0x00171a87: xor al, 0x29; ret 0xfa01; 
0x0004e816: xor al, 0x30; stc; call dword ptr [eax - 0x73]; 
0x001325fb: xor al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00060a35: xor al, 0x32; stc; call dword ptr [esi + 0x6a]; 
0x000d9772: xor al, 0x39; dec edi; xor al, 0x75; sub byte ptr [edi + 0x5e], bl; ret; 
0x001479d7: xor al, 0x39; ret 0x470f; 
0x0004f552: xor al, 0x39; ret 0x840f; 
0x000a0b77: xor al, 0x3c; add byte ptr [eax], al; ret; 
0x0008df96: xor al, 0x3f; stc; dec dword ptr [ebp + 0xb6]; add byte ptr [edx - 0x77], dl; ret; 
0x0010f156: xor al, 0x49; stc; call dword ptr [eax - 0x18]; 
0x00112451: xor al, 0x49; stc; call dword ptr [eax - 0x18]; in eax, 0xde; dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x00083de6: xor al, 0x50; call ebx; 
0x000d4551: xor al, 0x50; push dword ptr [esi + 8]; call ebx; 
0x000c43d1: xor al, 0x50; push ebp; call esi; 
0x000c6bb2: xor al, 0x51; lea eax, [esp + 0x64]; mov dword ptr [esp + 0x34], ecx; push eax; push ebp; call esi; 
0x000c43c8: xor al, 0x52; lea eax, [esp + 0x64]; mov dword ptr [esp + 0x34], edx; push eax; push ebp; call esi; 
0x0013e099: xor al, 0x52; push dword ptr [esp + 0x2c]; call 0x80560; add esp, 0x2c; ret; 
0x0013dc99: xor al, 0x52; push dword ptr [esp + 0x2c]; call 0x85aa0; add esp, 0x2c; ret; 
0x0016fc5f: xor al, 0x56; push ecx; push 5; push ebx; call dword ptr [eax]; 
0x00122417: xor al, 0x5b; pop esi; pop edi; ret; 
0x000407cc: xor al, 0x5b; pop esi; ret 4; 
0x001142a3: xor al, 0x5b; pop esi; ret; 
0x000272ab: xor al, 0x70; stc; dec dword ptr [ecx - 0x48f0e6b0]; xchg edi, eax; cmp byte ptr [eax - 7], dh; jmp dword ptr [esi - 0x77]; 
0x00031d12: xor al, 0x73; stc; call dword ptr [eax - 0x73]; 
0x00125b53: xor al, 0x74; ret 0x4c8b; 
0x00128ded: xor al, 0x75; mov al, 0x83; ret 0xeb03; 
0x000d9775: xor al, 0x75; sub byte ptr [edi + 0x5e], bl; ret; 
0x00047768: xor al, 0x78; stc; call dword ptr [eax + 0x68]; 
0x0004a270: xor al, 0x78; stc; call dword ptr [eax - 0x73]; 
0x0007940d: xor al, 0x7f; stc; call dword ptr [eax - 0x73]; 
0x000cea50: xor al, 0x81; ret 0; 
0x001169f6: xor al, 0x83; add dword ptr [ecx], eax; ror byte ptr [ecx + 0x290c245c], cl; ror dword ptr [ecx + 0xf18245c], cl; xchg ebp, eax; ret; 
0x00183f33: xor al, 0x83; in al, dx; or byte ptr [ebp - 0x699754a], cl; call dword ptr [esi + 0x53]; 
0x00040973: xor al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0017bf02: xor al, 0x83; les ebx, ptr [eax]; pop ebx; ret; 
0x0007d154: xor al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x001519f7: xor al, 0x83; les ecx, ptr [ecx + ecx*4]; call 0x4424e386; ret 0x148b; 
0x00131e80: xor al, 0x83; les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x001230ac: xor al, 0x83; les esp, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0009b6be: xor al, 0x83; les esp, ptr [ebx + ebx*2]; pop esi; ret; 
0x0017fa96: xor al, 0x83; ret 0x5204; 
0x0008a003: xor al, 0x83; ret 0x8901; 
0x00050cdf: xor al, 0x83; ret 0x8b01; 
0x0002d343: xor al, 0x83; ret 0xc704; 
0x0004052b: xor al, 0x83; ret; 
0x0018c28f: xor al, 0x83; rol byte ptr [ecx], 0x89; ret 0x850f; 
0x000829f4: xor al, 0x83; stc; call dword ptr [eax - 0x73]; 
0x0007d173: xor al, 0x85; sar byte ptr [eax + 0xb], 0x83; ret 0x8301; 
0x00097e49: xor al, 0x87; stc; call dword ptr [eax - 0x18]; 
0x0011fb7c: xor al, 0x89; cli; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00131744: xor al, 0x89; inc esp; and al, 0x38; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00132919: xor al, 0x89; inc esp; and al, 8; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00129a3c: xor al, 0x89; inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x0012a36c: xor al, 0x89; inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000fb70c: xor al, 0x89; inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000fb8cc: xor al, 0x89; inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x00121f30: xor al, 0x89; push eax; inc eax; pop ebx; pop esi; ret; 
0x00171523: xor al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0007e843: xor al, 0x89; ret 0xc483; 
0x0014d374: xor al, 0x89; ret 0xcac1; 
0x00061754: xor al, 0x89; ret; 
0x0009e2e3: xor al, 0x89; stc; call dword ptr [eax - 0x18]; 
0x0011f4bb: xor al, 0x8b; dec esp; and al, 0x38; mov ebx, dword ptr [esp + 0x30]; mov edi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00121ccb: xor al, 0x8b; pop esp; and al, 0x20; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000de917: xor al, 0x8b; pop esp; and al, 0x30; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012fdc8: xor al, 0x8b; pop esp; and al, 0x30; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00042267: xor al, 0x8b; push eax; cmp byte ptr [ebx + 0x408b3c48], cl; inc eax; ret; 
0x001798b5: xor al, 0x8b; push eax; or byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x000cf447: xor al, 0x8d; adc al, 0xc0; stc; call dword ptr [eax + 0x53]; 
0x0011e725: xor al, 0x8d; and byte ptr [esi], 0x46; stc; call dword ptr [eax - 0x18]; 
0x0002ac84: xor al, 0x8d; inc ebp; and byte ptr [ecx - 0x9c7dbbc], cl; ret 0x7501; 
0x00082ca2: xor al, 0x8d; inc edx; add al, 0x89; inc ecx; adc byte ptr [ecx - 0x9ec74c6], cl; ret 0x7502; 
0x001316b1: xor al, 0x8d; inc esp; and al, 0x24; mov dword ptr [esp + 0x38], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00192a05: xor al, 0x8d; jl 0x192a2d; or byte ptr [eax + 0x75], bh; mov ebx, 3; call dword ptr gs:[0x10]; 
0x000a6675: xor al, 0x8d; sbb dword ptr [esi], 0x44; stc; call dword ptr [eax - 0x18]; 
0x00106b38: xor al, 0x8d; xchg dword ptr [esi], edi; dec eax; stc; dec dword ptr [ebp - 0x6b7e671]; call dword ptr [eax - 0x77]; 
0x00027bca: xor al, 0x8d; xchg edi, eax; sub ecx, edi; call dword ptr [edx + 0x50]; 
0x00106e2e: xor al, 0x8d; xchg esp, ebx; sub al, 0xf9; dec dword ptr [ebp - 0x6c0bf71]; call dword ptr [eax - 0x17]; 
0x0011e6eb: xor al, 0x8d; xor dl, 0x49; stc; call dword ptr [eax - 0x18]; 
0x000ca2bf: xor al, 0x9d; stc; call dword ptr [eax - 0x73]; 
0x00125772: xor al, 0xa4; stc; call dword ptr [eax - 0x73]; 
0x00139ac3: xor al, 0xa8; stc; call dword ptr [edx + 0x50]; 
0x0013ec9f: xor al, 0xaa; stc; call dword ptr [eax - 0x73]; 
0x00141ab7: xor al, 0xab; stc; call dword ptr [eax - 0x73]; 
0x0014f719: xor al, 0xaf; stc; call dword ptr [eax - 0x18]; 
0x00152ac1: xor al, 0xb1; stc; call dword ptr [eax - 0x73]; 
0x0015ceae: xor al, 0xb4; stc; call dword ptr [eax - 0x18]; 
0x0012ec47: xor al, 0xb8; add byte ptr [ecx], al; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x001302e7: xor al, 0xb8; cmp al, 1; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0012fce7: xor al, 0xb8; cmp eax, dword ptr [ecx]; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000fb6e0: xor al, 0xb8; mov ah, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000fb8a0: xor al, 0xb8; mov ch, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0010e8b8: xor al, 0xb8; sbb al, 1; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0015a238: xor al, 0xcd; add al, byte ptr [eax]; add esp, 0x10; mov eax, ebx; call eax; 
0x001319f7: xor al, 0xe8; add ecx, esp; cmc; dec dword ptr [ebp - 0x76fbdbb4]; ret 0x448b; 
0x00132282: xor al, 0xe8; js 0x132249; cmc; dec dword ptr [ebp - 0x76fbdbb4]; ret 0x448b; 
0x00132052: xor al, 0xe8; test al, 0xc5; cmc; dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x000ffd78: xor al, 0xf2; inc dword ptr [ebx - 0x3fceef3c]; add esp, 8; pop ebx; ret; 
0x0018f044: xor al, 0xf3; call dword ptr [edi - 1]; 
0x00066c4a: xor al, 0xf6; inc eax; jmp dword ptr [eax]; 
0x000347ae: xor al, 0xf; mov bh, 4; push eax; and eax, 0x1000; ret; 
0x0003478e: xor al, 0xf; mov bh, 4; push eax; and eax, 0x100; ret; 
0x0003476e: xor al, 0xf; mov bh, 4; push eax; and eax, 0x2000; ret; 
0x000346ee: xor al, 0xf; mov bh, 4; push eax; and eax, 0x200; ret; 
0x0003472e: xor al, 0xf; mov bh, 4; push eax; and eax, 0x4000; ret; 
0x0003468e: xor al, 0xf; mov bh, 4; push eax; and eax, 0x400; ret; 
0x0003470e: xor al, 0xf; mov bh, 4; push eax; and eax, 0x8000; ret; 
0x000346ce: xor al, 0xf; mov bh, 4; push eax; and eax, 0x800; ret; 
0x000345ce: xor al, 0xf; mov bh, 4; push eax; and eax, 1; ret; 
0x000346ae: xor al, 0xf; mov bh, 4; push eax; and eax, 2; ret; 
0x0003474e: xor al, 0xf; mov bh, 4; push eax; and eax, 4; ret; 
0x0003466e: xor al, 0xf; mov bh, 4; push eax; and eax, 8; ret; 
0x0017a826: xor al, 0xfc; call dword ptr [eax - 0x73]; 
0x0015a889: xor al, 0xfe; jmp dword ptr [esi - 0x70]; 
0x0015a446: xor al, 0xff; je 0x15a46e; inc eax; call esi; 
0x000c6cce: xor al, 0xff; je 0xc6cf6; inc eax; push ebp; call esi; 
0x000e5158: xor al, 1; add byte ptr [eax], al; add bl, ch; ret; 
0x00070d6e: xor al, 1; add byte ptr [eax], al; add byte ptr [ebx + 0x100955c], cl; ret; 
0x000710d4: xor al, 1; add byte ptr [eax], al; add byte ptr [ebx + 0x39102444], cl; ret 0x8c0f; 
0x0003d524: xor al, 1; add byte ptr [eax], al; mov eax, ecx; ret; 
0x000d9668: xor al, 1; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x0003d4cf: xor al, 1; add byte ptr [eax], al; ret; 
0x000333bf: xor al, 2; push dword ptr [esp + 0x1c]; call 0x333d0; add esp, 0x1c; ret; 
0x000ab57f: xor al, 2; push dword ptr [esp + 0x1c]; call 0xab590; add esp, 0x1c; ret; 
0x0005ab60: xor al, 4; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0011b248: xor al, 8; push edx; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x001287c3: xor al, al; or eax, ecx; ret; 
0x000b98ea: xor al, byte ptr [0x5e5f0000]; pop ebx; ret; 
0x00123b79: xor al, byte ptr [eax - 0x76d00088]; ret 0x1b75; 
0x00123b3f: xor al, byte ptr [eax - 0x76fffe88]; ret 0x4f75; 
0x00069d07: xor al, byte ptr [eax]; add byte ptr [ebx - 0x5ab4b], cl; dec dword ptr [ebx - 0x58f7b]; jmp dword ptr [ebp - 0x75]; 
0x0016f7dd: xor al, byte ptr [ebx + 0x438b0cec]; add al, 0x53; call dword ptr [eax + 0x10]; 
0x000e9ff7: xor al, byte ptr [ebx + 0x5e5b04c4]; ret; 
0x001719f3: xor al, byte ptr [ebx + 0x5e5b14c4]; ret; 
0x0015d36d: xor al, byte ptr [ebx - 0x7872f714]; inc ecx; stc; call dword ptr [eax + 0x53]; 
0x00114fd7: xor al, byte ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0017dbca: xor al, byte ptr [ecx]; cld; jmp dword ptr [esi - 0x70]; 
0x00037e03: xor al, ch; aaa; lahf; or byte ptr [eax], al; add esp, 0x1c; ret; 
0x000bd51a: xor al, ch; adc edi, eax; or al, 0; add ecx, 0x10fa54; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0005b383: xor al, ch; cmpsd dword ptr [esi], dword ptr es:[edi]; lodsd eax, dword ptr [esi]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000ac2c2: xor al, ch; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000da912: xor al, ch; dec eax; daa; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000c07b3: xor al, ch; js 0xc074b; or al, 0; add ecx, 0x10c83b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008fee8: xor al, ch; mov dl, 0x32; stc; inc dword ptr [ebx - 0x3fcee73c]; pop ebx; ret; 
0x00174757: xor al, ch; ret; 
0x0005b0a2: xor al, ch; sbb byte ptr [eax + eax + 0x1cc48300], dh; ret; 
0x000da8c5: xor al, ch; xchg ebp, eax; daa; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00061423: xor al, ch; xchg edi, eax; push eax; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0009783c: xor al, cl; stc; call dword ptr [ebp + 0x57]; 
0x000b3c3c: xor bh, 0xff; jmp dword ptr [esi + 0xf]; 
0x0006f4be: xor bh, al; add dh, byte ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx + 0x390c2454], cl; ret 0x840f; 
0x00155603: xor bh, al; inc esp; ret 4; 
0x001969b5: xor bh, bh; inc dword ptr [ecx + 0x44bf8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0011b83d: xor bh, bh; ja 0x11b84d; call dword ptr [edi + 0x24]; 
0x0011bab9: xor bh, bh; ja 0x11bac9; call dword ptr [edi + 0x24]; 
0x0011c96d: xor bh, bh; ja 0x11c97d; call dword ptr [edi + 0x24]; 
0x0011cbe9: xor bh, bh; ja 0x11cbf9; call dword ptr [edi + 0x24]; 
0x0011dadd: xor bh, bh; ja 0x11daed; call dword ptr [edi + 0x24]; 
0x0011dd59: xor bh, bh; ja 0x11dd69; call dword ptr [edi + 0x24]; 
0x00025d52: xor bh, bh; jae 0x25d5a; call edi; 
0x0011bbe2: xor bh, bh; jbe 0x11bbf2; call dword ptr [esi + 0x24]; 
0x0011cd12: xor bh, bh; jbe 0x11cd22; call dword ptr [esi + 0x24]; 
0x0011de82: xor bh, bh; jbe 0x11de92; call dword ptr [esi + 0x24]; 
0x0008e169: xor bh, bh; je 0x8e191; cmp al, 0x51; call eax; 
0x000ab5b4: xor bh, bh; je 0xab5dc; cmp al, 0xe8; ret 0xfce1; 
0x001618eb: xor bh, bh; jmp dword ptr [ebp - 0x75]; 
0x0014aa38: xor bh, bh; jmp dword ptr [esi - 0x70]; 
0x000c0ea1: xor bh, bh; mov byte ptr [eax + 0x40], bh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000f7066: xor bh, bl; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; xor eax, eax; ret; 
0x0018aab0: xor bh, bl; jmp dword ptr [esi - 0x70]; 
0x00061cc4: xor bh, cl; call dword ptr [eax + 0x53]; 
0x00060652: xor bh, cl; call dword ptr [eax + 0x6a]; 
0x00062016: xor bh, cl; call dword ptr [eax - 0x18]; 
0x000608c1: xor bh, cl; call dword ptr [ebp + 0x50]; 
0x000607c9: xor bh, cl; call dword ptr [ecx + 0x50]; 
0x00060a1d: xor bh, cl; call dword ptr [esi + 0x6a]; 
0x0008feeb: xor bh, cl; inc dword ptr [ebx - 0x3fcee73c]; pop ebx; ret; 
0x0017e3ca: xor bh, cl; sti; jmp dword ptr [esi - 0x70]; 
0x0016b312: xor bl, 0x62; stc; call dword ptr [eax + 0x6a]; 
0x000ba8ad: xor bl, 0xc; add byte ptr [ecx + 0x11256fc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0003bc20: xor bl, bl; cmp byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x0011f79c: xor byte ptr [eax + 0x127], bh; mov ebx, 0xffffff9c; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0011f8a2: xor byte ptr [eax + 0x127], bh; mov ebx, 0xffffff9c; mov edx, edi; call dword ptr gs:[0x10]; 
0x0009a536: xor byte ptr [eax + 0x14f], bh; call dword ptr gs:[0x10]; 
0x00123080: xor byte ptr [eax + 0x154], bh; xor ebx, ebx; mov dword ptr [esp + 0x18], edx; xor esi, esi; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00126b72: xor byte ptr [eax + 0x50000045], 0xe8; adc eax, dword ptr [ecx]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0016d712: xor byte ptr [eax + 0x63], 0xf9; call dword ptr [eax + 0x6a]; 
0x0016d812: xor byte ptr [eax + 0x63], 0xf9; call dword ptr [eax - 0x18]; 
0x0016d766: xor byte ptr [eax + 0x63], 0xf9; jmp dword ptr [ebp - 0x75]; 
0x00131605: xor byte ptr [eax + 0x66], bh; call dword ptr gs:[0x10]; 
0x0012b71f: xor byte ptr [eax + 0xcb], bh; call dword ptr gs:[0x10]; 
0x0012b67f: xor byte ptr [eax + 0xcc], bh; call dword ptr gs:[0x10]; 
0x0010c29f: xor byte ptr [eax + 0xce], bh; call dword ptr gs:[0x10]; 
0x0010c444: xor byte ptr [eax + 0xd0], bh; call dword ptr gs:[0x10]; 
0x0010c394: xor byte ptr [eax + 0xd2], bh; call dword ptr gs:[0x10]; 
0x0010c50c: xor byte ptr [eax + 0xd5], bh; call dword ptr gs:[0x10]; 
0x0010c1fc: xor byte ptr [eax + 0xd6], bh; call dword ptr gs:[0x10]; 
0x00115467: xor byte ptr [eax + 0xdd], bh; mov ecx, esi; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00034036: xor byte ptr [eax + 1], 0; add byte ptr [ebx + 0x548b0204], cl; and al, 4; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x00032ba6: xor byte ptr [eax + 1], 0; add byte ptr [ebx + 0x8b0204], cl; mov eax, dword ptr [eax + 0x54]; ret; 
0x0017671a: xor byte ptr [eax + eax], al; add al, ch; sbb eax, 0x8900002c; ret; 
0x0004a1e9: xor byte ptr [eax + eax], al; add byte ptr [eax - 0x73], dl; xchg eax, ebx; jbe 0x4a1ec; call dword ptr [eax - 0x18]; 
0x0004d456: xor byte ptr [eax + eax], al; add byte ptr [eax - 0x73], dl; xchg eax, ebx; jbe 0x4d459; call dword ptr [eax - 0x18]; 
0x0005138f: xor byte ptr [eax + eax], al; add byte ptr [eax - 0x73], dl; xchg eax, ebx; jbe 0x51392; call dword ptr [eax - 0x18]; 
0x00059d5a: xor byte ptr [eax + eax], al; add byte ptr [eax - 0x73], dl; xchg eax, ebx; jbe 0x59d5d; call dword ptr [eax - 0x18]; 
0x0005cedb: xor byte ptr [eax + ecx - 0x7b], dh; dec dword ptr [edi]; pop dword ptr [edi - 0x9fffff8]; ret 0xf40; 
0x0003f9d7: xor byte ptr [eax - 0x73], dl; test dword ptr [edx], ebp; das; stc; call dword ptr [ebx + 0x50]; 
0x000db3f9: xor byte ptr [eax - 0x75], dl; inc esp; and al, 0x64; call eax; 
0x000a8bd6: xor byte ptr [eax - 1], 0x2a; cmp ecx, eax; jne 0xa8bd0; mov eax, edx; pop ebx; ret; 
0x0015202b: xor byte ptr [eax], 0xb0; stc; call dword ptr [eax - 0x18]; 
0x0005af4f: xor byte ptr [eax], 0xf9; call dword ptr [eax - 0x18]; 
0x0005af4f: xor byte ptr [eax], 0xf9; call dword ptr [eax - 0x18]; pop ss; xchg ecx, eax; std; jmp dword ptr [esi - 0x70]; 
0x00178ebf: xor byte ptr [eax], al; mov eax, 1; pop ebx; pop esi; pop edi; ret; 
0x000b93fd: xor byte ptr [eax], cl; or eax, 0x3fc18100; cmp dword ptr [ecx], edx; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000c0ea0: xor byte ptr [eax], dh; dec dword ptr [eax + 0x448b4078]; and al, 0xc; pop ebx; pop esi; ret; 
0x0008bc19: xor byte ptr [ebp + 0x2c], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000d9760: xor byte ptr [ebp + 0x3d], dh; pop edi; pop esi; ret; 
0x0002a8ca: xor byte ptr [ebp + 0x4b840fc0], al; add dword ptr [eax], eax; add dh, dh; ret 0xf08; 
0x0015a43d: xor byte ptr [ebp + 0x50482444], cl; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x40]; call esi; 
0x0007c145: xor byte ptr [ebp + 0x5110244c], cl; push dword ptr [edx + 0x98]; call eax; 
0x000bb600: xor byte ptr [ebp + 0x5e5f4047], cl; pop ebx; ret; 
0x0015d8b0: xor byte ptr [ebp + 0x5f], 0xf9; call dword ptr [eax + 0x55]; 
0x0004841e: xor byte ptr [ebp + 0x7ff48184], cl; clc; call dword ptr [eax - 1]; 
0x0004f4a4: xor byte ptr [ebp + 0x7ff48384], cl; clc; call dword ptr [eax + 0x52]; 
0x0015a49d: xor byte ptr [ebp - 0x10], 0x39; ret; 
0x00091ecc: xor byte ptr [ebp - 0x1ad26380], cl; call dword ptr [eax - 0x73]; 
0x00034163: xor byte ptr [ebp - 0x5877f040], al; add byte ptr [eax], al; add byte ptr [ebp - 0x6a9f27d], cl; call dword ptr [esi - 1]; 
0x0009234d: xor byte ptr [ebp - 0x67c4380], cl; call dword ptr [eax - 0x18]; 
0x0016560f: xor byte ptr [ebp - 0x69ec77a], cl; call dword ptr [eax + 0x6a]; 
0x00124722: xor byte ptr [ebp - 0x6a0aa7d], cl; call dword ptr [eax + 0x6a]; 
0x0015b61f: xor byte ptr [ebp - 0x6a0ad7a], cl; call dword ptr [eax + 0x6a]; 
0x0012458a: xor byte ptr [ebp - 0x6a6a47d], cl; call dword ptr [eax + 0x6a]; 
0x00124233: xor byte ptr [ebp - 0x6a6a47d], cl; call dword ptr [eax - 1]; 
0x00126f11: xor byte ptr [ebp - 0x6b3367d], cl; call dword ptr [eax + 0x55]; 
0x0004fa55: xor byte ptr [ebp - 0x6d07880], cl; call dword ptr [eax + 0x56]; 
0x00024f11: xor byte ptr [ebp - 0x6d7317d], cl; call dword ptr [eax - 1]; 
0x00024f2e: xor byte ptr [ebp - 0x6d74b7d], cl; call dword ptr [eax - 1]; 
0x000dda69: xor byte ptr [ebp - 1], 0xff; call dword ptr [edi - 0x75]; 
0x0017a8e6: xor byte ptr [ebx + 0x448908c0], al; and al, 4; jmp edx; 
0x000e7817: xor byte ptr [ebx + 0x535608ec], al; call eax; 
0x0017180a: xor byte ptr [ebx + 0x568b3046], cl; sub al, 0x89; ret; 
0x000c0a56: xor byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000bd621: xor byte ptr [ebx + 0x5e082444], cl; ret; 
0x00081655: xor byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0013ffbc: xor byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x0002f7d1: xor byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x00182763: xor byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x00025497: xor byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x0003bb7e: xor byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x00138b79: xor byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; ret; 
0x0018681d: xor byte ptr [ebx + 0x5e], bl; pop edi; jmp eax; 
0x00092bd7: xor byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0017cc8d: xor byte ptr [ebx + 0x74ed852f], cl; sbb al, 0x83; in al, dx; add al, 0x6a; call dword ptr [ebp + 0x56]; 
0x000c07b0: xor byte ptr [ebx + 0x78e830c0], al; xchg esp, eax; or al, 0; add ecx, 0x10c83b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00141cde: xor byte ptr [ebx + 0x84c8d17], cl; or al, 0x83; ror byte ptr [esi], 0x85; sal byte ptr [esi + esi + 0x39], cl; ret 0x1f72; 
0x000829f3: xor byte ptr [ebx + eax*4], 0xf9; call dword ptr [eax - 0x73]; 
0x00031d11: xor byte ptr [ebx + esi*2], 0xf9; call dword ptr [eax - 0x73]; 
0x000b9f87: xor byte ptr [ebx + esi*8 - 0x5f170001], 0xfc; or al, 0; add ecx, 0x112daf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000fc713: xor byte ptr [ebx - 0x17acf314], al; ret; 
0x0008c92d: xor byte ptr [ebx - 0x3f7acfc0], cl; jne 0x8c948; ret; 
0x0012ec43: xor byte ptr [ebx - 0x47cbdbb4], cl; add byte ptr [ecx], al; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x001302e3: xor byte ptr [ebx - 0x47cbdbb4], cl; cmp al, 1; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0012fce3: xor byte ptr [ebx - 0x47cbdbb4], cl; cmp eax, dword ptr [ecx]; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000fb6dc: xor byte ptr [ebx - 0x47cbdbb4], cl; mov ah, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000fb89c: xor byte ptr [ebx - 0x47cbdbb4], cl; mov ch, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0010e8b4: xor byte ptr [ebx - 0x47cbdbb4], cl; sbb al, 1; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00038dcb: xor byte ptr [ebx - 0x57cfe3f], al; or dword ptr [edi], ecx; xchg esi, eax; ret 0xb60f; 
0x00192a01: xor byte ptr [ebx - 0x72cbdbac], cl; jl 0x192a2d; or byte ptr [eax + 0x75], bh; mov ebx, 3; call dword ptr gs:[0x10]; 
0x0011fb78: xor byte ptr [ebx - 0x76cbdbb4], cl; cli; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00129a38: xor byte ptr [ebx - 0x76cbdbb4], cl; inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x0012a368: xor byte ptr [ebx - 0x76cbdbb4], cl; inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000fb708: xor byte ptr [ebx - 0x76cbdbb4], cl; inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000fb8c8: xor byte ptr [ebx - 0x76cbdbb4], cl; inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x00129d3d: xor byte ptr [ebx - 0x76dbdbbc], cl; ret; 
0x0006139f: xor byte ptr [ebx - 0x77], bl; rcr byte ptr [esi + 0x5f], 1; pop ebp; ret; 
0x00065a3a: xor byte ptr [ebx - 0x78f0f607], al; ret; 
0x001555e7: xor byte ptr [ebx - 0x7bf00006], al; mov edx, 0x39000001; ret 0x840f; 
0x001029e2: xor byte ptr [ebx - 0x7cebdbbc], cl; ret 0x8904; 
0x0014b447: xor byte ptr [ebx - 7], bl; call dword ptr [eax - 0x18]; 
0x0014b447: xor byte ptr [ebx - 7], bl; call dword ptr [eax - 0x18]; pop ds; mov esi, gs; jmp dword ptr [esi - 0x70]; 
0x000a0cea: xor byte ptr [ebx], 0xf9; jmp dword ptr [esi - 0x70]; 
0x00156b8b: xor byte ptr [ebx], al; add byte ptr [ecx + 0xe8286c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x00083d3c: xor byte ptr [ebx], al; sti; dec dword ptr [ebp - 0x67cb77a]; call dword ptr [eax - 0x73]; 
0x0011f7dd: xor byte ptr [ecx + 0x244489ea], cl; or byte ptr [eax + 0x127], bh; call dword ptr gs:[0x10]; 
0x0011f8dd: xor byte ptr [ecx + 0x244489fa], cl; or byte ptr [eax + 0x127], bh; call dword ptr gs:[0x10]; 
0x001519ed: xor byte ptr [ecx + 0x24448bc1], cl; sub byte ptr [ecx - 0x7ccbdbbc], cl; les ecx, ptr [ecx + ecx*4]; call 0x4424e386; ret 0x148b; 
0x00081650: xor byte ptr [ecx + 0x30738906], cl; add esp, 4; pop ebx; pop esi; ret; 
0x0010f04c: xor byte ptr [ecx + 0x35cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0015dba8: xor byte ptr [ecx + 0x44830c78], cl; and al, 0x34; add dword ptr [ebx - 0x6bf09f02], eax; ret 0x4489; 
0x00131f03: xor byte ptr [ecx + 0x448b2404], cl; and al, 0x38; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0013b7fe: xor byte ptr [ecx + 0x4d89847d], cl; mov byte ptr [ecx - 0x836b], cl; call dword ptr [esi + 0x6a]; 
0x001868e6: xor byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x0017f010: xor byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x0014b7d9: xor byte ptr [ecx + 0x67858dc7], cl; sub ecx, edi; call dword ptr [eax + 0x57]; 
0x00122e84: xor byte ptr [ecx + 0xba0850], cl; add dword ptr [eax], eax; add byte ptr [esi - 0x77], ah; push eax; push ss; ret; 
0x00112450: xor byte ptr [ecx + ecx*2], 0xf9; call dword ptr [eax - 0x18]; 
0x00112450: xor byte ptr [ecx + ecx*2], 0xf9; call dword ptr [eax - 0x18]; in eax, 0xde; dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x00153575: xor byte ptr [ecx + ecx*4], 0xf9; call dword ptr [eax - 0x18]; 
0x000795f3: xor byte ptr [ecx + edi*2 - 0x17af0007], 0x72; stosb byte ptr es:[edi], al; sti; jmp dword ptr [esi - 0x70]; 
0x0010bd22: xor byte ptr [ecx + esi*8 - 1], 0x83; les ebx, ptr [eax]; pop ebx; ret; 
0x001154a8: xor byte ptr [ecx - 0x7615760f], cl; inc esp; and al, 8; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000c8c53: xor byte ptr [ecx - 0x76227612], cl; ret; 
0x00189c92: xor byte ptr [ecx], 0xc0; pop ebx; ret; 
0x00098085: xor byte ptr [ecx], 0xc0; ret; 
0x000704ae: xor byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [ebx + 0x100955c], cl; ret; 
0x0012103e: xor byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000c1885: xor byte ptr [ecx], al; ret 0x267c; 
0x0008099d: xor byte ptr [ecx], al; ret; 
0x000d975d: xor byte ptr [ecx], bh; dec edi; xor byte ptr [ebp + 0x3d], dh; pop edi; pop esi; ret; 
0x0016b133: xor byte ptr [ecx], bh; ret 0x1074; 
0x0018865b: xor byte ptr [ecx], bh; ret 0x820f; 
0x001555a4: xor byte ptr [ecx], bh; ret 0x840f; 
0x0011e94f: xor byte ptr [ecx], bh; ret 0xc389; 
0x0007de97: xor byte ptr [ecx], bh; ret; 
0x0010a892: xor byte ptr [ecx], bh; sal byte ptr [ebx + ecx - 0x77], 1; ret 0xf189; 
0x00140e1e: xor byte ptr [ecx], ch; fadd dword ptr [ecx]; ror byte ptr [edi], 1; inc edx; ret 0xd129; 
0x00140cca: xor byte ptr [ecx], ch; fmul dword ptr [ebx + 0x120245c]; ror byte ptr [edi], 1; inc edx; ret 0xd329; 
0x0017dba8: xor byte ptr [ecx], ch; ret 0x5356; 
0x000ac196: xor byte ptr [ecx], ch; ret; 
0x001354e2: xor byte ptr [ecx], dh; fild dword ptr [ebx - 0x69f0f606]; ret; 
0x00135eaa: xor byte ptr [ecx], dh; fild dword ptr [ebx - 0x69f0f608]; ret; 
0x00122aed: xor byte ptr [ecx], dh; ret 0xe281; 
0x000b9f00: xor byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b0084: xor byte ptr [edi + 0x5e], bl; ret; 
0x0007940c: xor byte ptr [edi + edi*2], 0xf9; call dword ptr [eax - 0x73]; 
0x00079f93: xor byte ptr [edi], cl; mov dh, 0x57; add ecx, ebp; ret; 
0x000c15e2: xor byte ptr [edi], cl; mov esp, 0x76c229c0; push es; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000b3b06: xor byte ptr [edi], cl; mov fs, word ptr [ebx - 0x7a000008]; ror byte ptr [edi], 0x85; dec ebx; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000c9f29: xor byte ptr [edi], cl; xchg edx, eax; ret 0x7439; 
0x00067a7c: xor byte ptr [edi], cl; xchg esp, eax; ret; 
0x0008e241: xor byte ptr [edx + 0x51], dl; call eax; 
0x0013c804: xor byte ptr [edx + 0x57], 0xf9; call dword ptr [eax - 0x18]; 
0x0008cdaf: xor byte ptr [edx + ebx], 0; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0008cddb: xor byte ptr [edx + ebx], 0; cmp eax, 1; jg 0x8cdf0; ret; 
0x0008cdf4: xor byte ptr [edx + ebx], 0; push eax; call 0x8f2d0; add esp, 0x1c; ret; 
0x000a0c7c: xor byte ptr [edx - 0x3b7cfff8], cl; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000c09fd: xor byte ptr [edx - 0x3e7efff4], dl; jae 0xc09cb; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x001aad4c: xor byte ptr [edx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x000c6934: xor byte ptr [edx], ch; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x38]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x0002ee3c: xor byte ptr [edx], dl; add byte ptr [ebx - 0x72bbdb84], cl; xchg dword ptr [ecx + ebp*2 - 7], ebp; call dword ptr [eax - 0x73]; 
0x001a6531: xor byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x2c73; 
0x001aa76f: xor byte ptr [esi + 0xf], ah; xlatb; ret 0x498d; 
0x000c14ab: xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x00179667: xor byte ptr [esi + eax - 0x7d], dh; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0018b0a5: xor byte ptr [esi - 0x18], dl; aam 0x31; out dx, eax; jmp dword ptr [ecx]; 
0x001925ed: xor byte ptr [esi], 0x4a; stc; call dword ptr [eax + 0x53]; 
0x001431c3: xor byte ptr [esi], 0x59; stc; call dword ptr [eax + 0x6a]; 
0x000341e1: xor byte ptr [esi], ch; stc; call dword ptr [eax - 1]; 
0x00125771: xor byte ptr [esp], 0xf9; call dword ptr [eax - 0x73]; 
0x001aaa16: xor ch, 0; add byte ptr [eax], al; lea eax, [edi + 0xb]; pop edi; ret; 
0x00171be2: xor ch, ah; call dword ptr [eax - 0x73]; 
0x000ed83a: xor ch, byte ptr [eax - 0xc]; jmp dword ptr [esi - 0x70]; 
0x000a1ab7: xor ch, byte ptr [ecx]; ret 0x850f; 
0x000c1976: xor ch, ch; add eax, ecx; pop edi; ret; 
0x00031d9d: xor cl, 0x2b; stc; call dword ptr [eax - 0x18]; 
0x0011bb22: xor cl, 0x49; stc; call dword ptr [eax - 0x18]; 
0x0008f299: xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0008f31a: xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008f31a: xor cl, 0x81; call dword ptr gs:[0x10]; pop ebx; pop esi; ret; 
0x0009109b: xor cl, 0x81; mov dword ptr [edi + edx*4 + 8], 0; mov edx, 0x7fffffff; call dword ptr gs:[0x10]; 
0x00090b8b: xor cl, 0x81; mov dword ptr [edi], 0; call dword ptr gs:[0x10]; 
0x00091a00: xor cl, 0x81; mov eax, 0xf0; mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x00097cc0: xor cl, 0x87; mov eax, 0xf0; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x000234da: xor cl, bh; call dword ptr [eax + 0x52]; 
0x0004a1ab: xor cl, bh; call dword ptr [eax - 0x18]; 
0x0005af50: xor cl, bh; call dword ptr [eax - 0x18]; pop ss; xchg ecx, eax; std; jmp dword ptr [esi - 0x70]; 
0x0004d4a4: xor cl, bh; call dword ptr [eax - 0x18]; ret; 
0x00047775: xor cl, bh; call dword ptr [eax - 0x73]; 
0x000f04ef: xor cl, bh; call dword ptr [eax - 0x77]; 
0x000530ac: xor cl, bh; call dword ptr [edi + 0x6a]; 
0x00143cd0: xor cl, bh; call dword ptr [edx - 0x46]; 
0x00061bf2: xor cl, bh; call dword ptr [esi + 0x52]; 
0x0005aaa6: xor cl, bh; inc dword ptr [ebp - 0x38ec8b40]; add byte ptr [edi], ch; jbe 0x5aa3d; ret 0x40c7; 
0x000fb62c: xor cl, bh; inc dword ptr [ebx + 0x448b10c4]; and al, 0xc; add esp, 0x18; pop ebx; ret; 
0x0012aa55: xor cl, bl; ror byte ptr [edi], 0x9e; ret 0xff85; 
0x0006064a: xor cl, byte ptr [eax - 3]; call dword ptr [eax - 0x73]; 
0x000abeb2: xor cl, byte ptr [ebp + 0x5e5b0142]; ret; 
0x000af771: xor cl, byte ptr [ebp - 0x157c07a8]; add al, 0x83; rol dword ptr [ecx], 0xeb; adc eax, 0x8300768d; ret 0x8b20; 
0x001392e2: xor cl, byte ptr [ebx - 0x137c53bb]; add al, 0x6a; add eax, 0x564a808d; stc; call dword ptr [eax - 0x75]; 
0x00090965: xor cl, byte ptr [ebx - 0x776f3b5]; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0005b53a: xor cl, byte ptr [ebx - 0x79720003]; xchg esp, eax; jns 0x5b53c; call dword ptr [eax - 0x73]; 
0x000abe02: xor cl, byte ptr [ecx + 0x242c6d0]; add byte ptr [ebx + 0x5e], bl; ret; 
0x000e7381: xor cl, ch; das; idiv edi; call dword ptr [eax + 0x55]; 
0x000cccc2: xor cl, ch; pop esp; idiv edi; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000760fd: xor cl, ch; ret; 
0x000c0073: xor cl, cl; mov byte ptr [eax], cl; mov eax, edi; pop ebx; pop edi; ret; 
0x000b812c: xor dh, 0xff; jmp dword ptr [esi + 0xf]; 
0x000d0df3: xor dh, dh; dec dword ptr [ebx - 0x72d3db84]; xchg dword ptr [ebp + ebx*4 - 7], esp; call dword ptr [eax - 0x73]; 
0x000ffa2a: xor dh, dh; ret 0x7404; 
0x00198bf9: xor dl, 0x3b; cli; jmp dword ptr [esi - 0x70]; 
0x00117232: xor dl, 0x49; stc; call dword ptr [eax - 0x18]; 
0x0003aa19: xor dl, byte ptr [eax]; add byte ptr [ebp - 0x1116feba], cl; idiv edi; jmp dword ptr [esi - 0x70]; 
0x000c48ca: xor dl, byte ptr [edi + eax + 0x24548b00]; sbb al, 0x8d; sbb byte ptr [eax], 0x9c; stc; call dword ptr [eax - 0x73]; 
0x00177f0b: xor dword ptr [eax + eax], edx; add byte ptr [ecx - 0x7e7c723b], cl; stc; call dword ptr [ecx + 0x6a]; 
0x0002750d: xor dword ptr [eax + esi*2], 0x4789fff9; sbb byte ptr [edi], cl; mov bh, 0x81; cmp byte ptr [eax - 7], dh; jmp dword ptr [esi - 0x77]; 
0x00173ecd: xor dword ptr [eax - 0x1000000], 0x74; and al, 0x30; push esi; call dword ptr [eax + 4]; 
0x00173eab: xor dword ptr [eax - 0x1000000], 0xffffffb3; test al, 0; add byte ptr [eax], al; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x0013ecf4: xor dword ptr [eax - 0x73], edx; sub al, 0xa9; stc; call dword ptr [eax - 0x18]; 
0x00087521: xor dword ptr [eax - 0x7d], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000fe0a5: xor dword ptr [eax - 7], ecx; call dword ptr [eax + 0x55]; 
0x000341e0: xor dword ptr [eax], 0x2e; stc; call dword ptr [eax - 1]; 
0x0013587b: xor dword ptr [ebp - 0x76e98b37], eax; ret; 
0x00080227: xor dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x0013a706: xor dword ptr [ebx + 0x5e5b2cc4], eax; pop edi; pop ebp; ret; 
0x000fba5c: xor dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x0007c13e: xor dword ptr [ebx + 0x74ff04ec], eax; and al, 0x30; lea ecx, [esp + 0x10]; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x0011f89e: xor dword ptr [ebx - 0x47cfdbb4], ecx; daa; add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; mov edx, edi; call dword ptr gs:[0x10]; 
0x00122cfe: xor dword ptr [ebx - 0x47dfdba4], ecx; add byte ptr ss:[eax], al; add byte ptr [ecx + 0x5409], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000287d6: xor dword ptr [ebx - 0x72c3dba4], ecx; or dword ptr [esp + ebp*2], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x0011fb3e: xor dword ptr [ebx - 0x74cfdba4], ecx; dec esp; and al, 0x34; mov eax, 0x127; mov edx, edi; call dword ptr gs:[0x10]; 
0x000de8a4: xor dword ptr [ebx], 0x46; stc; call dword ptr [eax - 0x18]; 
0x001272cb: xor dword ptr [ebx], 0x53; stc; call dword ptr [eax + 0x55]; 
0x00033f53: xor dword ptr [ecx + 0x5f5e5b10], ecx; pop ebp; ret; 
0x0013a72f: xor dword ptr [ecx + eax], 0; add byte ptr [ebx - 0x17701500], cl; ret; 
0x001792e9: xor dword ptr [ecx + eax], 0; pop ebx; pop esi; pop edi; ret; 
0x0010f155: xor dword ptr [ecx + ecx*2], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000797f4: xor dword ptr [ecx + edx], eax; add byte ptr [ecx + 0x1c561cc6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x00152ac0: xor dword ptr [ecx + esi*4], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x000fe0a4: xor dword ptr [ecx], 0x48; stc; call dword ptr [eax + 0x55]; 
0x00127072: xor dword ptr [ecx], 0x4e; stc; call dword ptr [eax + 0x55]; 
0x0015aff3: xor dword ptr [ecx], 0x5f; stc; call dword ptr [eax - 0x18]; 
0x001208b3: xor dword ptr [ecx], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000babeb: xor dword ptr [ecx], ecx; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000a37bf: xor dword ptr [ecx], edi; ret 0x840f; 
0x00150d86: xor dword ptr [edi + ebp*4], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00081367: xor dword ptr [edi + edi*8 - 1], 0xffffffff; pop ebx; mov eax, dword ptr [edx]; pop esi; pop edi; ret; 
0x0015aff4: xor dword ptr [edi - 7], ebx; call dword ptr [eax - 0x18]; 
0x000fe1f5: xor dword ptr [edi], 0x48; stc; call dword ptr [eax + 0x55]; 
0x000963b2: xor dword ptr [edx + 0x40], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0009ba4d: xor dword ptr [edx + eax - 0x3b7d0000], 0x18; pop ebx; ret; 
0x00060a34: xor dword ptr [edx + esi], 0xfffffff9; call dword ptr [esi + 0x6a]; 
0x0007fb5a: xor dword ptr [esi + 0x5f], ebx; pop ebp; ret; 
0x00114ecb: xor dword ptr [esi - 0x766ffffe], ecx; fimul dword ptr [ebx - 0x47fbdba4]; test dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001a6135: xor dword ptr [esi - 0x7cffffff], 0xffffffed; adc byte ptr [edi], cl; xchg byte ptr [edi - 0x7cffffff], cl; ret 0x8310; 
0x00127073: xor dword ptr [esi - 7], ecx; call dword ptr [eax + 0x55]; 
0x0015cead: xor dword ptr [esp + esi*4], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00053301: xor eax, 0x14; mov dword ptr [esp + 0x14], esi; mov esi, dword ptr [esp + 0x28]; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x00042d5a: xor eax, 0x1f; add eax, 1; pop ebx; ret; 
0x00042d0f: xor eax, 0x1f; add eax, 1; ret; 
0x00042dd4: xor eax, 0x1f; lea edx, [eax + 1]; mov eax, edx; ret; 
0x0004318a: xor eax, 0x1f; lea edx, [eax - 0x10]; mov eax, edx; ret; 
0x00042cf4: xor eax, 0x1f; lea edx, [eax - 0x17]; mov eax, edx; ret; 
0x000430da: xor eax, 0x1f; lea edx, [eax - 0x18]; mov eax, edx; ret; 
0x00042d95: xor eax, 0x1f; lea edx, [eax - 0xf]; mov eax, edx; ret; 
0x00043105: xor eax, 0x1f; ret; 
0x000c1a5d: xor eax, 0x1f; sar eax, 3; sub edx, eax; lea ecx, [edx + 3]; mov eax, ecx; ret; 
0x0005ca35: xor eax, 0x20c0950f; ret; 
0x00070cd5: xor eax, 0x246c8be0; inc eax; mov dword ptr [esp + 4], ecx; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x0003ddc4: xor eax, 0x31000001; sal byte ptr [ecx], cl; div byte ptr [ecx]; jmp dword ptr [ebp - 1]; 
0x00080d72: xor eax, 0x530cec83; call dword ptr [esi + 0x10]; 
0x0013339f: xor eax, 0x5b6cc483; pop esi; pop edi; pop ebp; ret; 
0x0005b9d6: xor eax, 0x79; stc; call dword ptr [eax - 0x73]; 
0x0004db45: xor eax, 0x7fffffff; ret; 
0x00199de4: xor eax, 0x81fffefe; ret; 
0x001992e4: xor eax, 0x81ffff09; ret; 
0x001977e4: xor eax, 0x81ffff24; ret; 
0x001957e4: xor eax, 0x81ffff44; ret; 
0x0006a2a0: xor eax, 0x858b0000; mov eax, 0x8bfffffb; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xd801; 
0x0009b01d: xor eax, 0x8908ec83; ret; 
0x001205af: xor eax, 0xbf000001; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0013fba2: xor eax, 0xc483ffee; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0010bcf4: xor eax, 0xc483fff8; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0010a737: xor eax, 0xcb80003; add byte ptr [eax], al; add cl, ch; ret; 
0x0003a6ab: xor eax, 0xfc08400; xchg ebp, eax; ret; 
0x0004109a: xor eax, 0xff04ec83; je 0x410c5; or byte ptr [esi + 0x57], dl; mov eax, dword ptr [esp + 0x10]; call eax; 
0x0015cedc: xor eax, 0xffffffb3; stc; call dword ptr [eax - 0x18]; 
0x0015cf71: xor eax, 0xffffffb4; stc; call dword ptr [eax - 0x18]; 
0x00175f1e: xor eax, 0xffffffb7; stc; call dword ptr [eax - 0x73]; 
0x0014efe8: xor eax, 1; pop ebx; ret; 
0x00086851: xor eax, 1; ret; 
0x0013bfe5: xor eax, dword ptr [0x18]; call eax; 
0x00025061: xor eax, dword ptr [0x18]; jmp eax; 
0x0013f7e8: xor eax, dword ptr [0x18]; lea edx, [esp + 0x10]; push edx; push edi; call eax; 
0x0013f8c5: xor eax, dword ptr [0x18]; lea edx, [esp + 0x10]; push edx; push esi; call eax; 
0x0003ef4c: xor eax, dword ptr [0x18]; mov dword ptr [ebp + edi], edx; push dword ptr [ebx + 4]; call eax; 
0x000250ee: xor eax, dword ptr [0x18]; pop edi; pop ebp; jmp eax; 
0x00157331: xor eax, dword ptr [0x18]; pop edi; pop ebp; ret; 
0x00156f83: xor eax, dword ptr [0x18]; push eax; call edx; 
0x0013c014: xor eax, dword ptr [0x18]; push esi; call eax; 
0x0003f323: xor eax, dword ptr [0x18]; xchg dword ptr [edi], edx; cmp edx, 1; jg 0x3f3f0; call eax; 
0x00123787: xor eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000697a0: xor eax, dword ptr [eax]; add byte ptr [ebx - 0x5cb7b], cl; call ecx; 
0x0003895c: xor eax, dword ptr [eax]; add cl, al; cli; add al, byte ptr [ecx - 0xccc1e]; inc dword ptr [ecx]; ret 0xd089; 
0x0016fa15: xor eax, dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0005bbb4: xor eax, dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x000255e2: xor eax, dword ptr [ebx + 0x5e5b20c4]; pop edi; ret; 
0x000e7e3f: xor eax, dword ptr [ebx + 0x5e5b30c4]; pop edi; ret; 
0x000e8f20: xor eax, dword ptr [ebx + 0x5e5b70c4]; pop edi; ret; 
0x00040849: xor eax, dword ptr [ebx]; add byte ptr [eax], al; add esp, 0x10; add esp, 0xc; ret; 
0x001acded: xor eax, dword ptr [ecx + 0x333333e2]; xor eax, dword ptr [ecx]; ret 0xd089; 
0x00114dd8: xor eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001acdf3: xor eax, dword ptr [ecx]; ret 0xd089; 
0x00085864: xor eax, dword ptr [ecx]; ret; 
0x00152f69: xor eax, dword ptr [edx]; in eax, dx; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x000de8a5: xor eax, dword ptr [esi - 7]; call dword ptr [eax - 0x18]; 
0x0013bfe4: xor eax, dword ptr gs:[0x18]; call eax; 
0x00025060: xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0013f7e7: xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x10]; push edx; push edi; call eax; 
0x0013f8c4: xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x10]; push edx; push esi; call eax; 
0x0003ef4b: xor eax, dword ptr gs:[0x18]; mov dword ptr [ebp + edi], edx; push dword ptr [ebx + 4]; call eax; 
0x000250ed: xor eax, dword ptr gs:[0x18]; pop edi; pop ebp; jmp eax; 
0x00157330: xor eax, dword ptr gs:[0x18]; pop edi; pop ebp; ret; 
0x00156f82: xor eax, dword ptr gs:[0x18]; push eax; call edx; 
0x0013c013: xor eax, dword ptr gs:[0x18]; push esi; call eax; 
0x0003f322: xor eax, dword ptr gs:[0x18]; xchg dword ptr [edi], edx; cmp edx, 1; jg 0x3f3f0; call eax; 
0x00124119: xor eax, eax; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0003f177: xor eax, eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x0008ecc4: xor eax, eax; add esp, 0xc; ret; 
0x0003a032: xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x00040626: xor eax, eax; add esp, 8; pop ebx; ret; 
0x000fbae0: xor eax, eax; cmp dword ptr [esi + ecx*4], ebx; je 0xfbaf8; pop ebx; pop esi; ret; 
0x000e7457: xor eax, eax; cmp dword ptr [esp + 0x14], 1; je 0xe7468; add esp, 0xc; ret; 
0x000e7547: xor eax, eax; cmp dword ptr [esp + 0x14], 1; je 0xe7558; add esp, 0xc; ret; 
0x00034654: xor eax, eax; cmp dword ptr [esp + 4], 0x7f; setbe al; ret; 
0x001ac2a3: xor eax, eax; cmp ecx, dword ptr [edx - 4]; jne 0x1ac2b0; pop ebx; ret; 
0x0015bf0b: xor eax, eax; cmp ecx, edx; setne al; ret; 
0x000fb294: xor eax, eax; cmp edx, 0x1badface; setne al; ret; 
0x000fb26b: xor eax, eax; cmp edx, 0x1cd1; setne al; ret; 
0x000a94f3: xor eax, eax; cmp edx, 0x40; ja 0xa9501; mov eax, dword ptr [ecx + edx*4 - 0xe34]; ret; 
0x000a9523: xor eax, eax; cmp edx, 0x40; ja 0xa9531; mov eax, dword ptr [ecx + edx*4 - 0xd14]; ret; 
0x000fb2d0: xor eax, eax; cmp edx, 0xadf5; setne al; ret; 
0x0008e5f2: xor eax, eax; cmp edx, dword ptr [esp + 4]; setae al; ret; 
0x0014ef8b: xor eax, eax; cmp word ptr [edx + 2], bx; je 0x14ef98; pop ebx; ret; 
0x001222f8: xor eax, eax; mov dword ptr [ebx + 0x50], edx; pop ebx; pop esi; pop edi; ret; 
0x00086bc1: xor eax, eax; mov dword ptr [ebx + 4], edx; pop ebx; pop esi; ret; 
0x000810c5: xor eax, eax; mov dword ptr [ebx], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x000907d4: xor eax, eax; mov dword ptr [ecx + 4], edx; ret; 
0x000a17a5: xor eax, eax; mov eax, 0x163; mov byte ptr [esi + 0x3c24], 1; lea ebx, [esi + 0x3c1c]; call dword ptr gs:[0x10]; 
0x00133b88: xor eax, eax; mov ecx, dword ptr [edx + 4]; cmp byte ptr [ecx], 0; je 0x133b98; ret; 
0x000d9a68: xor eax, eax; mov ecx, dword ptr [edx]; test ecx, ecx; jne 0xd9a92; ret; 
0x0005b717: xor eax, eax; mov edx, dword ptr [esp + 0x10]; test byte ptr [edx], 0x20; je 0x5b730; add esp, 0xc; ret; 
0x000790c7: xor eax, eax; mov edx, dword ptr [esp + 0x10]; test byte ptr [edx], 0x20; je 0x790e0; add esp, 0xc; ret; 
0x0012881a: xor eax, eax; or eax, esi; pop esi; pop edi; ret; 
0x001a62d2: xor eax, eax; pop ebp; ret; 
0x000905a9: xor eax, eax; pop ebx; pop edi; ret; 
0x0013c03e: xor eax, eax; pop ebx; pop esi; pop ebp; ret; 
0x0002523e: xor eax, eax; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00040c3c: xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00040a22: xor eax, eax; pop ebx; pop esi; ret; 
0x0003c35a: xor eax, eax; pop ebx; ret; 
0x001a7851: xor eax, eax; pop edi; pop ebp; pop ebx; ret; 
0x001a72f0: xor eax, eax; pop edi; pop ebx; ret; 
0x000d9634: xor eax, eax; pop edi; pop esi; ret; 
0x000c10a0: xor eax, eax; pop edi; ret; 
0x000a5c1b: xor eax, eax; pop edx; pop ebx; pop esi; ret; 
0x000402ea: xor eax, eax; pop esi; pop edi; pop ebp; ret; 
0x00053c30: xor eax, eax; pop esi; pop edi; ret; 
0x00090476: xor eax, eax; rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x0003d0b4: xor eax, eax; ret; 
0x0003d390: xor eax, eax; test edx, edx; sete al; ret; 
0x000432dc: xor eax, eax; tzcnt eax, ecx; test ecx, ecx; je 0x432f0; pop ebx; ret; 
0x00043348: xor eax, eax; tzcnt eax, edx; test edx, edx; mov edx, 0x20; cmove eax, edx; ret; 
0x0010b960: xor eax, eax; xchg dword ptr [edi + 0x3fac], eax; cmp eax, 1; jg 0x10b9a8; call dword ptr [esi]; 
0x0004193f: xor eax, ebx; pop ebx; ret; 
0x0003bd4b: xor eax, ecx; shr eax, 0x1f; ret; 
0x0004303b: xor eax, edx; cmp edx, eax; setb al; ret; 
0x0004301c: xor eax, edx; cmp edx, eax; setle al; ret; 
0x00039d5a: xor eax, edx; movzx edx, byte ptr [ecx]; test dl, dl; jne 0x39d40; ret; 
0x0012d25d: xor ebp, 0x53; stc; call dword ptr [eax + 0x56]; 
0x000a8b42: xor ebp, eax; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x00174e26: xor ebp, eax; hlt; ret; 
0x0012e41d: xor ebp, ebp; and esp, 0xfffffff0; sub esp, 0xc; push esi; call edx; 
0x000629cc: xor ebp, ecx; ret 0xfffd; 
0x0018aef9: xor ebp, edi; jmp dword ptr [ecx]; 
0x0004321f: xor ebx, 0x1f; lea eax, [ebx + 0x20]; pop ebx; ret; 
0x001270dd: xor ebx, 0x4e; stc; call dword ptr [eax + 0x55]; 
0x0016b41f: xor ebx, 0x62; stc; call dword ptr [eax - 0x18]; 
0x0013e949: xor ebx, dword ptr [esi - 7]; dec dword ptr [ebp - 0x6417ff8a]; fdivp st(7); jmp dword ptr [esi - 0x70]; 
0x00156792: xor ebx, ebx; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x00093d5e: xor ebx, ebx; call dword ptr gs:[0x10]; 
0x000dbe09: xor ebx, ebx; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xdbe20; pop ebx; ret; 
0x00125e06: xor ebx, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00024dba: xor ebx, ebx; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x00092ed1: xor ebx, ebx; lea esi, cs:[esi]; lea esi, cs:[esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x00123086: xor ebx, ebx; mov dword ptr [esp + 0x18], edx; xor esi, esi; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000c4c70: xor ebx, ebx; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00123169: xor ebx, ebx; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00123109: xor ebx, ebx; mov ecx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0013bf25: xor ebx, ebx; mov ecx, esp; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x00042e21: xor ecx, 0x1f; add ecx, 1; pop ebx; mov eax, ecx; ret; 
0x00043153: xor ecx, 0x1f; lea eax, [ecx + 0x20]; pop ebx; ret; 
0x00042979: xor ecx, 0x1f; shr eax, cl; ret; 
0x00130d5a: xor ecx, 0x41; out dx, eax; inc ebx; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x000f0a5a: xor ecx, 0x44; inc ebx; mov eax, 0x41; call dword ptr gs:[0x10]; 
0x00127263: xor ecx, 0x51; stc; call dword ptr [eax + 0x55]; 
0x0012f1dc: xor ecx, dword ptr [ebx - 0x47f3dba4]; js 0x12f1e5; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00152fc9: xor ecx, dword ptr [ecx - 0x476dbe4]; call 0x231a0; mov dword ptr [esp], ebp; call esi; 
0x000ab9ec: xor ecx, dword ptr [ecx - 0x760e7605]; aad 0x83; ret 0x3801; 
0x00034e24: xor ecx, ecx; call 0x34900; mov edx, dword ptr [esp + 0x14]; add esp, 0xc; mov eax, edx; ret; 
0x0011fcd9: xor ecx, ecx; call dword ptr gs:[0x10]; 
0x0011fcd9: xor ecx, ecx; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x11fcf0; pop ebx; ret; 
0x0015720f: xor ecx, ecx; cmp eax, 2; jne 0x157220; mov eax, ecx; ret; 
0x0009a5b9: xor ecx, ecx; lock cmpxchg dword ptr [edx], ecx; mov eax, 0x10; cmove eax, ecx; ret; 
0x000e75f9: xor ecx, ecx; mov eax, 0x196; not ebx; lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x001510f6: xor ecx, ecx; mov eax, ecx; pop ebx; pop esi; ret; 
0x00040263: xor ecx, ecx; mov ebx, 0; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x000908bf: xor ecx, ecx; or dword ptr [edx + 8], 8; mov dword ptr [edx + 0x10], eax; mov eax, ecx; ret; 
0x00042e40: xor ecx, ecx; pop ebx; mov eax, ecx; ret; 
0x00095379: xor ecx, ecx; xor esi, esi; call dword ptr gs:[0x10]; 
0x0005db6e: xor ecx, edi; call dword ptr [eax + 0x57]; 
0x0005df95: xor ecx, edi; call dword ptr [eax - 0x18]; 
0x000256be: xor edi, 0x3ecf01ff; jmp edi; 
0x00127143: xor edi, 0x4f; stc; call dword ptr [edx + 0x52]; 
0x00167213: xor edi, 0x61; stc; call dword ptr [eax - 0x18]; 
0x00167213: xor edi, 0x61; stc; call dword ptr [eax - 0x18]; fdivr st(6); jmp dword ptr [ebp - 0x75]; 
0x000a9798: xor edi, dword ptr [ecx]; ret 0x3d73; 
0x000fa8bc: xor edi, dword ptr [edx + ebp]; je 0xfa8c5; cmp al, 0x3f; jne 0xfa8d9; mov eax, 1; ret; 
0x000c0945: xor edi, eax; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0018b0a9: xor edi, ebp; jmp dword ptr [ecx]; 
0x0006175a: xor edi, ecx; call dword ptr [eax + 0x53]; 
0x00069a08: xor edi, ecx; call dword ptr [eax - 0x18]; 
0x00078914: xor edi, ecx; call dword ptr [eax - 0x73]; 
0x000fe136: xor edi, ecx; call dword ptr [edx + 0x52]; 
0x000a0ceb: xor edi, ecx; jmp dword ptr [esi - 0x70]; 
0x0003ddcc: xor edi, edi; call dword ptr gs:[0x10]; 
0x0002fe43: xor edi, edi; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00161819: xor edi, edi; jmp dword ptr [ebp - 0x75]; 
0x0018820b: xor edi, edi; jne 0x18820f; push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x001871b3: xor edi, edi; push dword ptr ss:[esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x00042aaa: xor edx, 0x1f; mov eax, 0x40; pop ebx; sub eax, edx; ret; 
0x00121e79: xor edx, 0x20; mov dword ptr [eax + 0x30], ecx; mov dword ptr [eax + 0x28], edx; pop ebx; ret; 
0x00051b27: xor edx, 0x7fffffff; pop edi; pop ebp; ret; 
0x000430fd: xor edx, 0xffffffff; je 0x43108; bsr eax, edx; xor eax, 0x1f; ret; 
0x0004311d: xor edx, 0xffffffff; je 0x43128; bsr eax, edx; xor eax, 0x1f; ret; 
0x00024af9: xor edx, dword ptr [0x18]; rol edx, 9; mov dword ptr [eax + 0x1a50], edx; ret; 
0x000ddf7f: xor edx, dword ptr [eax - 0x73]; test dword ptr [eax], ebp; inc esi; stc; call dword ptr [eax - 0x18]; 
0x001272cc: xor edx, dword ptr [ebx - 7]; call dword ptr [eax + 0x55]; 
0x00024af8: xor edx, dword ptr gs:[0x18]; rol edx, 9; mov dword ptr [eax + 0x1a50], edx; ret; 
0x00156588: xor edx, edx; add eax, 4; xchg dword ptr [eax], edx; cmp edx, 1; jg 0x156598; ret; 
0x0013a83d: xor edx, edx; add esp, 4; mov eax, edx; pop ebx; pop esi; ret; 
0x001714a8: xor edx, edx; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0008f072: xor edx, edx; call dword ptr gs:[0x10]; 
0x0010e3a1: xor edx, edx; cmp eax, -1; pop ebx; cmove eax, edx; ret; 
0x000decdb: xor edx, edx; cmp eax, 0xa3d70b; setb dl; add edx, 0x16d; mov eax, edx; ret; 
0x0013d07e: xor edx, edx; div ebx; pop ebx; pop esi; pop edi; ret; 
0x00042225: xor edx, edx; lea ecx, [eax + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x00094bca: xor edx, edx; lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x0005af33: xor edx, edx; mov dword ptr [eax], ecx; mov eax, edx; add esp, 0xc; ret; 
0x000980fa: xor edx, edx; mov dword ptr [ecx], eax; mov eax, edx; ret; 
0x0010d5a3: xor edx, edx; mov eax, 0x1b4; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x00093f2b: xor edx, edx; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x0009f336: xor edx, edx; mov eax, 1; call 0x9f2a0; mov dword ptr [esp], esi; call ebx; 
0x00134ac7: xor edx, edx; mov eax, dword ptr [esp + 0x10]; mov eax, dword ptr [eax + 0x4c]; call 0x134990; add esp, 4; ret; 
0x001714fc: xor edx, edx; mov eax, edx; pop ebx; pop esi; ret; 
0x0008707d: xor edx, edx; mov eax, edx; pop ebx; ret; 
0x00095a68: xor edx, edx; mov eax, edx; ret; 
0x0002326f: xor edx, edx; mov ebx, 1; mov esi, 8; mov dword ptr [ebp + 0x137c], 1; call dword ptr gs:[0x10]; 
0x0009553d: xor edx, edx; mov ecx, 7; xor esi, esi; call dword ptr gs:[0x10]; 
0x0010d207: xor edx, edx; mov ecx, dword ptr [esp + 4]; mov esi, 8; call dword ptr gs:[0x10]; 
0x0003dc95: xor edx, edx; mov ecx, edi; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x000935eb: xor edx, edx; mov edi, eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x000938ab: xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x0010d60b: xor edx, edx; mov esi, 8; mov ecx, dword ptr [ebp - 0x144]; call dword ptr gs:[0x10]; 
0x000abc10: xor edx, edx; pop ebx; mov eax, edx; ret; 
0x00094b67: xor edx, edx; pop ebx; pop esi; mov eax, edx; ret; 
0x00042925: xor edx, edx; pop ebx; ret; 
0x000429ef: xor edx, edx; ret; 
0x000402cb: xor edx, edx; sub ecx, ebx; call dword ptr gs:[0x10]; 
0x0009f6d1: xor edx, edx; test cl, 0x40; jne 0x9f700; add ebx, 1; mov eax, 0x115; call dword ptr gs:[0x10]; 
0x00136eda: xor edx, edx; test eax, eax; cmovs eax, edx; add esp, 8; pop ebx; ret; 
0x0008681b: xor edx, edx; test eax, eax; setne dl; mov eax, edx; ret; 
0x00042ea8: xor edx, edx; tzcnt edx, eax; add edx, 1; test eax, eax; cmovne eax, edx; ret; 
0x00092f75: xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x0003ddc8: xor edx, edx; xor esi, esi; xor edi, edi; call dword ptr gs:[0x10]; 
0x0009a8c8: xor esi, dword ptr [ebp + 5]; xor eax, eax; pop ebx; pop esi; ret; 
0x00153172: xor esi, dword ptr [ebp - 0x55]; mov edx, 1; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0009dfef: xor esi, dword ptr [ebp - 0x62]; mov edx, 1; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x001acdeb: xor esi, dword ptr [ebx]; xor eax, dword ptr [ecx + 0x333333e2]; xor eax, dword ptr [ecx]; ret 0xd089; 
0x001acdf1: xor esi, dword ptr [ebx]; xor eax, dword ptr [ecx]; ret 0xd089; 
0x0017256a: xor esi, dword ptr [ebx]; xor esi, dword ptr [ecx]; ret 0xe0c1; 
0x001723cf: xor esi, dword ptr [ebx]; xor esi, dword ptr [ecx]; ret; 
0x0017256c: xor esi, dword ptr [ecx]; ret 0xe0c1; 
0x001723d1: xor esi, dword ptr [ecx]; ret; 
0x00096176: xor esi, dword ptr [edi + eax - 0x77]; ret 0xc3e9; 
0x000912b6: xor esi, esi; add ebx, eax; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00182c50: xor esi, esi; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x00096842: xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008f228: xor esi, esi; call dword ptr gs:[0x10]; 
0x000d0ecc: xor esi, esi; dec dword ptr [ebx - 0x72d3db84]; xchg dword ptr [ebp + ebx*4 - 7], esp; call dword ptr [eax - 0x73]; 
0x000915dd: xor esi, esi; lea ebx, [edi + eax + 0x28]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0012308c: xor esi, esi; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0009778f: xor esi, esi; mov dword ptr [ebx + 4], edx; xor edx, edx; call dword ptr gs:[0x10]; 
0x0008fcbf: xor esi, esi; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0008e6d9: xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x0008f2e5: xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0008f2e5: xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; pop ebx; pop esi; ret; 
0x00091812: xor esi, esi; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x000918a4: xor esi, esi; mov ebx, ebp; mov edx, eax; mov eax, 0xf0; or edx, 2; call dword ptr gs:[0x10]; 
0x0009167b: xor esi, esi; mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00098869: xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008f81a: xor esi, esi; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00095f68: xor esi, esi; mov ecx, dword ptr [eax]; mov eax, 0xf0; not ecx; and ecx, 0x80; call dword ptr gs:[0x10]; 
0x0008f0be: xor esi, esi; mov ecx, dword ptr [esp + 0xc]; mov eax, 0xf0; xor edx, edx; call dword ptr gs:[0x10]; 
0x00091095: xor esi, esi; mov ecx, dword ptr [esp + 4]; xor cl, 0x81; mov dword ptr [edi + edx*4 + 8], 0; mov edx, 0x7fffffff; call dword ptr gs:[0x10]; 
0x000982a6: xor esi, esi; mov edx, 0x7fffffff; mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x00090add: xor esi, esi; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008fa58: xor esi, esi; mov edx, 1; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x0018c4d4: xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x00091314: xor esi, esi; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00091b70: xor esi, esi; mov edx, eax; mov eax, 0xf0; or edx, 2; call dword ptr gs:[0x10]; 
0x000913f2: xor esi, esi; mov edx, eax; mov eax, ebp; or edx, 2; call dword ptr gs:[0x10]; 
0x00132bd5: xor esi, esi; mov edx, ebx; mov ebx, 0xe; call dword ptr gs:[0x10]; 
0x001337a4: xor esi, esi; or dh, 1; mov ebx, 0x18; call dword ptr gs:[0x10]; 
0x000c1db0: xor esi, esi; pop ebx; mov eax, esi; pop esi; pop edi; ret; 
0x0013367b: xor esi, esi; push ebx; mov ebx, 0x16; mov edi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00132ac9: xor esi, esi; push ebx; mov ebx, 0xd; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00098160: xor esi, esi; push ebx; mov ebx, dword ptr [esp + 0x10]; mov dword ptr [ebx], 0; call dword ptr gs:[0x10]; 
0x0008f30f: xor esi, esi; push ebx; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00123166: xor esi, esi; push ebx; xor ebx, ebx; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x001ab9bc: xor esi, esi; ret 0xf01; 
0x0008f297: xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00091936: xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0003ddca: xor esi, esi; xor edi, edi; call dword ptr gs:[0x10]; 
0x0009705f: xor esi, esi; xor edx, edx; call dword ptr gs:[0x10]; 
0x0003eab3: xor esp, 0x75; stc; call dword ptr [eax - 0x73]; 
0x00056e73: xor esp, 0x7f; clc; call dword ptr [eax + 0x51]; 
0x000483c5: xor esp, 0x7f; clc; call dword ptr [eax + 0x52]; 
0x00056ef8: xor esp, 0x7f; clc; call dword ptr [eax - 1]; 
0x00153e9e: xor esp, 0xffffffb1; stc; call dword ptr [eax - 0x73]; 
0x001acd1c: xor esp, dword ptr [esi + 0xf]; adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x00070feb: xor esp, eax; mov ebx, dword ptr [esp + 0xc]; mov ecx, dword ptr [ebx + edx*4 - 0x736b4]; add ecx, eax; jmp ecx; 
0x0007213d: xor esp, eax; mov ebx, dword ptr [esp + 0xc]; mov ecx, dword ptr [ebx + edx*4 - 0x73834]; add ecx, eax; jmp ecx; 

47455 gadgets found
